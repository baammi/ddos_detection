source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805500c.2 = global i32 0
@global_var_8055024.3 = local_unnamed_addr global i32* @global_var_805500c.2
@global_var_8053db4.5 = constant [4 x i8] c"GET\00"
@global_var_8053d8d.6 = constant i32 1210056751
@global_var_8053e5c.7 = constant i32 624558112
@global_var_8053d8f.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_8053da7.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_8053dc6.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_8053db8.11 = constant [9 x i8] c"Cookie: \00"
@global_var_8053dc1.12 = constant [3 x i8] c"; \00"
@global_var_8053dc4.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_8053dc9.14 = constant i32 1952972859
@global_var_8053dcb.15 = constant [5 x i8] c"http\00"
@global_var_8053dda.16 = constant i32 -1623588825
@global_var_8053dd0.17 = constant [5 x i8] c"url=\00"
@global_var_8053dd5.18 = constant [5 x i8] c"POST\00"
@global_var_8054091.19 = constant i32 1852375101
@global_var_80550d4.20 = local_unnamed_addr global i32 0
@global_var_80550e0.21 = local_unnamed_addr global i32 0
@global_var_80550d8.22 = local_unnamed_addr global i32 0
@global_var_80550dc.23 = local_unnamed_addr global i32 0
@global_var_8055130.24 = local_unnamed_addr global i32 0
@global_var_805510a.25 = local_unnamed_addr global i32 0
@global_var_8055110.26 = local_unnamed_addr global i32 0
@global_var_8055100.27 = global i32 0
@global_var_8055118.29 = local_unnamed_addr global i32 0
@global_var_8055124.30 = local_unnamed_addr global i32 0
@global_var_8055114.31 = global i32 0
@global_var_8055178.32 = local_unnamed_addr global i32 0
@global_var_8055104.33 = local_unnamed_addr global i32 0
@global_var_805515c.34 = local_unnamed_addr global i32 0
@global_var_805510c.35 = local_unnamed_addr global i32 0
@global_var_8055174.36 = local_unnamed_addr global i32 0
@global_var_80550e4.38 = local_unnamed_addr global i32 0
@global_var_8055128.39 = local_unnamed_addr global i32 0
@global_var_8055168.40 = local_unnamed_addr global i32 0
@global_var_80551a0.41 = global i32 0
@global_var_8055154.43 = global i32 0
@global_var_80553a0.44 = global i32 0
@global_var_805503c.45 = global i32 0
@global_var_805544c.47 = global i32 0
@global_var_8055450.48 = local_unnamed_addr global i32 0
@global_var_8055454.49 = global i32 0
@global_var_8055460.50 = local_unnamed_addr global i32 0
@global_var_8055754.51 = global i32 0
@global_var_805577c.52 = local_unnamed_addr global i32 0
@global_var_805576c.53 = local_unnamed_addr global i32 0
@global_var_8055770.54 = local_unnamed_addr global i32 0
@global_var_8055774.55 = local_unnamed_addr global i32 0
@global_var_8055778.56 = local_unnamed_addr global i32 0
@global_var_8055784.57 = local_unnamed_addr global i32 0
@global_var_8055790.58 = local_unnamed_addr global i32 0
@global_var_8055788.59 = local_unnamed_addr global i32 0
@global_var_8055794.60 = local_unnamed_addr global i32 0
@global_var_8055768.61 = local_unnamed_addr global i32 0
@global_var_8055764.63 = local_unnamed_addr global i32 0
@global_var_805578c.64 = local_unnamed_addr global i32 0
@global_var_805545c.65 = local_unnamed_addr global i32 0
@global_var_8055054.66 = global i32 0
@global_var_805506c.68 = global i32 0
@global_var_8055138.69 = local_unnamed_addr global i32 0
@global_var_8055000.71 = global i32 -1
@global_var_805331d.72 = constant i32 -294069
@global_var_8055148.73 = local_unnamed_addr global i32 0
@global_var_805514c.74 = local_unnamed_addr global i32 0
@global_var_80546f0.75 = constant [10 x i8] c"/dev/null\00"
@global_var_8055144.77 = local_unnamed_addr global i32 0
@global_var_805513c.78 = local_unnamed_addr global i32 0
@global_var_8055140.79 = local_unnamed_addr global i32 0
@global_var_8054800.81 = constant i32 33554944
@global_var_8053503.82 = constant i32 1928542531
@global_var_8053527.83 = constant i32 1928542531
@global_var_8055158.84 = local_unnamed_addr global i32 0
@global_var_8055088.85 = local_unnamed_addr global i32* @global_var_8054800.81
@global_var_8055798.86 = local_unnamed_addr global i32 0
@global_var_805579c.87 = local_unnamed_addr global i32 0
@global_var_80550a0.1 = local_unnamed_addr global i8 0
@global_var_8055116.28 = local_unnamed_addr global i16 0
@global_var_805512c.37 = local_unnamed_addr global i16 0
@global_var_8055038.42 = local_unnamed_addr global i16 -4641
@global_var_8055420.46 = global i8 0
@global_var_8055780.62 = local_unnamed_addr global i8 0
@global_var_8055134.67 = local_unnamed_addr global i8 0
@global_var_8055150.76 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 53111
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8053d40()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_80550a0.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8055024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8055024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8055024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80550a0.1, align 32
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8055024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80550a0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134564352)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134565904 to i32*), align 16
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* %ecx.global-to-local, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_80533b9(i32 134538000, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134561126, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134561126, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134561126, i32 20, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 19, i32 ptrtoint ([4 x i8]* @global_var_8053db4.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp138 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp138, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 21, i32 ptrtoint (i32* @global_var_8053d8d.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a160(i8 %v4_8048205, i32 %v0_8048203, i32 23, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a160(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_8051b4e(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp240 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_8051080(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_8051080(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_8051080(i8* %tmp240)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5214 = call i32 @function_8051080(i8* %tmp240)
  store i32 %v2_80482a5214, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4215 = icmp eq i32 %v2_80482a5214, 0
  store i1 %v12_80482b4215, i1* %zf.global-to-local, align 1
  %v7_80482b6216 = icmp sgt i32 %v2_80482a5214, 0
  br i1 %v7_80482b6216, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0219 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be218 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8217 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp240, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be218, %v4_80482a0219
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be218, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8217, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be218, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_8051080(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 512
  %.v0_80482dd = select i1 %v7_80482e7, i32 512, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_8050570(i8 43)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_8050570(i8 44)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_8050570(i8 45)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_8050570(i8 46)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 47, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_8050570(i8 47)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 48, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_8050570(i8 48)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 49, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_8050570(i8 49)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 50, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_8050570(i8 50)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 51, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_8050570(i8 51)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 52, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_8050570(i8 52)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 53, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_8050570(i8 53)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_80526cf(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp139 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp139, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d6 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d6, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d6 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_80510a0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_8051080(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_8051b27(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_80510a0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_80510a0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_80510a0(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp241, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v0_8048463 = call i32 @function_804eaf0()
  store i32 %v0_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp245 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp245, 0
  br i1 %v4_8048478, label %bb140, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp245 to i32
  %v5_8048478 = lshr i32 %v0_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v0_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb140
  %v0_804848a = call i32 @function_804eaf0()
  %v1_804848a = sext i32 %v0_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v0_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v1_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v0_80484ea = call i32 @function_80518b4()
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v0_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp141, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_80515f3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_80515f3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v4_8048608 = call i32 @function_8051dd4(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v4_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v4_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v4_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_805155d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_805155d(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v0_8048664 = call i32 @function_8051d99()
  store i32 %v0_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_8051bf9(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v4_804871c = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v4_804873a = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8053e5c.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_8053d8f.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8053da7.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 39, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_8050570(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 39, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 39, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_80504f0(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 40, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_8050570(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 40, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 40, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_80504f0(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 41, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_8050570(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 41, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 41, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_80504f0(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 42, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_8050570(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 42, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 42, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_80504f0(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 47, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8053e5c.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v0_8048aab = call i32 @function_8051490()
  store i32 %v0_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp142, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8053db8.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp143, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc1.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_80513f0()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_8051080(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_8051d23()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp242 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp242, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_80517fa()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v0_8048d2d = call i32 @function_80518b4()
  store i32 %v0_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v0_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp144, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_8051c4f()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_80515f3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v4_8048e89 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_8051cad()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp145, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8053dc4.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_8051130()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8053dc4.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_8051130()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 53, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v0_8048f1e = call i32 @function_8051370()
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v0_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 52, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v0_8048f4f = call i32 @function_8051370()
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v0_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 51, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v0_8048f8b = call i32 @function_8051370()
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v0_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 51, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v0_8048fb6 = call i32 @function_8051370()
  store i32 %v0_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v0_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v0_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_8051130()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 50, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v0_804902d = call i32 @function_8051370()
  store i32 %v0_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v0_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 48, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v0_804906b = call i32 @function_8051370()
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v0_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 48, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v0_8049096 = call i32 @function_8051370()
  store i32 %v0_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v0_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v0_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_8051130()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 49, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v0_804910d = call i32 @function_8051370()
  store i32 %v0_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v0_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049044, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 47, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v0_8049140 = call i32 @function_8051370()
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v0_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 47, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v0_804916b = call i32 @function_8051370()
  store i32 %v0_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v0_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v0_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_8051130()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_8051180(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge7 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge7, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 46, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v0_80491fe = call i32 @function_8051370()
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v0_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 46, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v0_8049230 = call i32 @function_8051370()
  store i32 %v0_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v0_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_8051130()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_8053dc9.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_8051130()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp146 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp146, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_8053dc9.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_8051130()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp147 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp147, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_8051440()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 45, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v0_80493ee = call i32 @function_8051370()
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v0_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 45, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v0_8049419 = call i32 @function_8051370()
  store i32 %v0_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v0_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v0_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_8051130()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8053dcb.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_8051130()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_8051afd(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_8051cad()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049636, %dec_label_pc_8049550, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_80496da, %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_8051b27(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v3_80495d1, 1
  %tmp149 = icmp eq i1 %tmp148, false
  br i1 %tmp149, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_8051b27(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 43, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_8051130()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 43, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_8051130()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_8053dda.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_8051130()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_8051130()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_8051130()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_8053dc9.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_8051130()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_8053dc9.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_8051130()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_8051180(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_8051afd(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_8051cad()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_80515f3(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 44, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v0_8049870 = call i32 @function_8051370()
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v0_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 44, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_80504c0(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v0_804989b = call i32 @function_8051370()
  store i32 %v0_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v0_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v0_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_8051130()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp243 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp243, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp244 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp244, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8053dd0.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v0_8049977 = call i32 @function_8051370()
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v0_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8053dd0.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v0_80499ab = call i32 @function_8051370()
  store i32 %v0_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v0_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_8051180(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00188 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00188, i1* %zf.global-to-local, align 1
  %v2_8049a03190 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03190, align 4
  %v0_8049a05191 = call i32 @function_80518b4()
  store i32 %v0_8049a05191, i32* %eax.global-to-local, align 4
  %v0_8049a0a192 = load i32, i32* @esp, align 4
  %v1_8049a0a193 = add i32 %v0_8049a0a192, 16
  %v1_8049a0d194 = load i32, i32* @ebx, align 4
  %v7_8049a0d195 = icmp ult i32 %v0_8049a05191, %v1_8049a0d194
  %v12_8049a0d196 = icmp eq i32 %v0_8049a05191, %v1_8049a0d194
  store i1 %v12_8049a0d196, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d195, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a197 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a192, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a197, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a197 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v0_80499f8 = call i32 @function_8053034()
  store i32 %v0_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v0_8049a05 = call i32 @function_80518b4()
  store i32 %v0_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v0_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v0_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a193, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8053dcb.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v0_8049a2f = call i32 @function_8051370()
  store i32 %v0_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v0_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8053dc4.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_8051130()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8053dd5.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_80513f0()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_8051cad()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_8051b27(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76174 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76174, i32* %ecx.global-to-local, align 4
  %v2_8049b79175 = add i32 %v0_8049b54, 20916
  %v3_8049b79176 = inttoptr i32 %v2_8049b79175 to i32*
  store i32 1, i32* %v3_8049b79176, align 4
  %v0_8049b80177 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80178 = inttoptr i32 %v0_8049b80177 to i8*
  %v2_8049b80179 = load i8, i8* %v1_8049b80178, align 1
  %v3_8049b80180 = zext i8 %v2_8049b80179 to i32
  %v4_8049b80181 = load i32, i32* @edx, align 4
  %v5_8049b80182 = and i32 %v4_8049b80181, -256
  %v6_8049b80183 = or i32 %v5_8049b80182, %v3_8049b80180
  store i32 %v6_8049b80183, i32* %edx.global-to-local, align 4
  %v4_8049b82184 = icmp eq i8 %v2_8049b80179, 0
  store i1 %v4_8049b82184, i1* %zf.global-to-local, align 1
  %v1_8049b84185 = icmp eq i1 %v4_8049b82184, false
  br i1 %v1_8049b84185, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80187 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80179, %dec_label_pc_8049b65 ]
  %v0_8049b80186 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80177, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80187, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp150, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v4_8049bf1 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp151, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_8053db4.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_80513f0()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80186, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v4_8049c9a = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp152 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp152, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb210, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp153 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp153, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v4_8049d53 = call i32 @function_8051110(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp154 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp154, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_8054091.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_8053dda.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_8051130()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_80510a0(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_8051b27(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1198 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1198, i32* %ecx.global-to-local, align 4
  %v2_8049ed4199 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4200 = inttoptr i32 %v2_8049ed4199 to i32*
  store i32 1, i32* %v3_8049ed4200, align 4
  %v0_8049edb201 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb202 = inttoptr i32 %v0_8049edb201 to i8*
  %v2_8049edb203 = load i8, i8* %v1_8049edb202, align 1
  %v3_8049edb204 = zext i8 %v2_8049edb203 to i32
  %v4_8049edb205 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb206 = and i32 %v4_8049edb205, -256
  %v6_8049edb207 = or i32 %v5_8049edb206, %v3_8049edb204
  store i32 %v6_8049edb207, i32* %edx.global-to-local, align 4
  %v4_8049edd208 = icmp eq i8 %v2_8049edb203, 0
  store i1 %v4_8049edd208, i1* %zf.global-to-local, align 1
  %v1_8049edf209 = icmp eq i1 %v4_8049edd208, false
  br i1 %v1_8049edf209, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb211 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb203, %dec_label_pc_8049ec0 ]
  %v0_8049edb210 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb201, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb211, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_8051080(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 54, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_8050570(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 54, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_80504c0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_80510a0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 54, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_80504f0(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_80510a0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 55, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_8050570(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 55, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_80504c0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_80510a0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 55, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_80504f0(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 56, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_8050570(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 56, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_80504c0(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_80510a0(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 56, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_80504f0(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 57, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_8050570(i8 102)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 57, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_80504c0(i32 134561126, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_80510a0(i8* inttoptr (i32 134561126 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 57, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_80504f0(i8 102)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049aa4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v3_8049754, { 1, 0, 2 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 4, 5, 1, 0, 2, 6 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v4_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 23, 22, 26, 5, 4, 3, 2, 1, 0, 32, 31, 30, 29, 28, 27, 13, 12, 14, 18, 17, 20, 19, 16, 15, 25, 24, 33, 21, 60, 6, 8, 7, 36, 35, 34, 11, 10, 9, 59, 57, 58, 61, 62, 53, 54, 49, 50, 51, 52, 55, 56, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 %stack_var_-20924.0.ph, { 12, 15, 14, 11, 10, 26, 25, 24, 23, 22, 13, 9, 16, 8, 17, 7, 19, 18, 6, 21, 20, 5, 4, 3, 1, 2, 39, 38, 37, 36, 35, 32, 31, 29, 28, 27, 0, 30, 40, 34, 33 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp245, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp240, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804816e, { 1, 0, 2 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 3, 4, 5, 6, 7, 8, 14, 15, 16, 9, 10, 17, 18, 19, 20, 21, 23, 22, 12, 24, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 25, 26, 27, 28, 29, 30, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 72, 13, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 87, 0, 1, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 224, 225, 226, 227, 228, 301, 302, 303, 304, 305, 315, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 214, 213, 208, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 243, 244, 245, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 276, 277, 246, 247, 248, 249, 250, 251, 260, 261, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 289, 290, 278, 279, 280, 281, 284, 285, 282, 283, 11, 2, 286, 287, 288, 298, 291, 292, 293, 294, 295, 296, 297, 299, 300, 318 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 7, 8, 9, 3, 33, 11, 10, 4, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 5, 26, 27, 28, 29, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 90, 91, 92, 93, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 78, 79, 80, 76, 82, 83, 84, 85, 86, 87, 88, 89, 143, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 155, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 163, 6, 165, 166 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 8, 5, 9, 10, 0, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 6, 7, 23, 115, 24, 25, 26, 27, 28, 29, 117, 52, 53, 112, 113, 114, 116, 118, 119, 120, 30, 31, 32, 35, 36, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 46, 49, 50, 51, 101, 102, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 441, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 37, 38, 39, 40, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 0, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 295, 296, 297, 298, 299, 300, 301, 302, 500, 501, 502, 503, 303, 304, 504, 505, 517, 518, 506, 507, 508, 509, 520, 510, 511, 512, 513, 514, 515, 516, 519, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 192, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 203, 204, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 242, 243, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 249, 250, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 275, 276, 272, 273, 274, 268, 269, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 413, 414, 418, 415, 416, 417, 419, 420, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 461, 462, 463, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 489, 456, 457, 458, 459, 460, 490, 491, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 481, 482, 22, 1, 485, 486, 487, 488, 492, 493, 494, 495, 496, 497, 498, 499 }
  uselistorder i32 ()* @function_8051370, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 ()* @function_80513f0, { 2, 1, 0 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 7, { 3, 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @function_80510a0, { 0, 1, 2, 4, 3, 6, 7, 8, 9, 5, 10, 11, 12, 13, 37, 38, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 8, 6, 7 }
  uselistorder i32 (i8*)* @function_8051080, { 1, 2, 5, 6, 7, 8, 9, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 50, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 0, 53, 54, 55 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_8053db4.5 to i32), { 1, 0 }
  uselistorder i32 134561126, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049562, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a160(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a160:
  %v0_804a160 = load i32, i32* @edi, align 4
  %v0_804a161 = load i32, i32* @esi, align 4
  %v0_804a162 = load i32, i32* @ebx, align 4
  %v4_804a166 = zext i8 %arg1 to i32
  %v2_804a16e = icmp eq i8 %arg1, 0
  %v4_804a178 = urem i32 %arg3, 256
  %v5_804a178 = load i32, i32* @eax, align 4
  %v6_804a178 = and i32 %v5_804a178, -256
  %v7_804a178 = or i32 %v6_804a178, %v4_804a178
  br i1 %v2_804a16e, label %dec_label_pc_804a1a5, label %dec_label_pc_804a182

dec_label_pc_804a182:                             ; preds = %dec_label_pc_804a160
  %v1_804a182 = trunc i32 %arg3 to i8
  %v3_804a186 = add i32 %arg2, 4
  %v4_804a186 = inttoptr i32 %v3_804a186 to i8*
  %v5_804a186 = load i8, i8* %v4_804a186, align 1
  %v16_804a186 = icmp eq i8 %v1_804a182, %v5_804a186
  br i1 %v16_804a186, label %dec_label_pc_804a1ac, label %dec_label_pc_804a18b

dec_label_pc_804a18b:                             ; preds = %dec_label_pc_804a182
  br label %dec_label_pc_804a1a0

dec_label_pc_804a192:                             ; preds = %dec_label_pc_804a1a0
  %v1_804a192 = add i32 %v0_804a195.in, 12
  %v2_804a192 = inttoptr i32 %v1_804a192 to i8*
  %v3_804a192 = load i8, i8* %v2_804a192, align 1
  %v4_804a192 = zext i8 %v3_804a192 to i32
  %v6_804a192 = and i32 %v5_804a192, -256
  %v7_804a192 = or i32 %v4_804a192, %v6_804a192
  %v16_804a19a = icmp eq i8 %v1_804a182, %v3_804a192
  br i1 %v16_804a19a, label %dec_label_pc_804a1ac, label %dec_label_pc_804a1a0

dec_label_pc_804a1a0:                             ; preds = %dec_label_pc_804a192, %dec_label_pc_804a18b
  %v5_804a192 = phi i32 [ %v7_804a192, %dec_label_pc_804a192 ], [ %v7_804a178, %dec_label_pc_804a18b ]
  %v0_804a195.in = phi i32 [ %v0_804a195, %dec_label_pc_804a192 ], [ %arg2, %dec_label_pc_804a18b ]
  %v0_804a1a0 = phi i32 [ %v1_804a1a0, %dec_label_pc_804a192 ], [ 0, %dec_label_pc_804a18b ]
  %v0_804a195 = add i32 %v0_804a195.in, 8
  %v1_804a1a0 = add i32 %v0_804a1a0, 1
  store i32 %v1_804a1a0, i32* @ecx, align 4
  %v12_804a1a1 = icmp eq i32 %v4_804a166, %v1_804a1a0
  %v1_804a1a3 = icmp eq i1 %v12_804a1a1, false
  br i1 %v1_804a1a3, label %dec_label_pc_804a192, label %dec_label_pc_804a1a5

dec_label_pc_804a1a5:                             ; preds = %dec_label_pc_804a1a0, %dec_label_pc_804a1ac, %dec_label_pc_804a160
  store i32 %v0_804a162, i32* @ebx, align 4
  store i32 %v0_804a161, i32* @esi, align 4
  store i32 %v0_804a160, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a1ac:                             ; preds = %dec_label_pc_804a192, %dec_label_pc_804a182
  %v0_804a1ac = phi i32 [ %arg2, %dec_label_pc_804a182 ], [ %v0_804a195, %dec_label_pc_804a192 ]
  %v1_804a1ac = inttoptr i32 %v0_804a1ac to i32*
  %v2_804a1ac = load i32, i32* %v1_804a1ac, align 4
  %sext = mul i32 %v2_804a1ac, 16777216
  %v2_804a1ae = icmp eq i32 %sext, 0
  br i1 %v2_804a1ae, label %dec_label_pc_804a1a5, label %dec_label_pc_804a1b2

dec_label_pc_804a1b2:                             ; preds = %dec_label_pc_804a1ac
  store i32 %v0_804a162, i32* @ebx, align 4
  store i32 %v0_804a161, i32* @esi, align 4
  store i32 %v0_804a160, i32* @edi, align 4
  %v2_804a1c2 = sdiv i32 %sext, 16777216
  %v3_804a1c2 = inttoptr i32 %v2_804a1c2 to i8*
  %v4_804a1c2 = call i32 @function_8051180(i8* %v3_804a1c2, i32 10)
  ret i32 %v4_804a1c2

; uselistorder directives
  uselistorder i32 %v1_804a1a0, { 0, 2, 1 }
  uselistorder i32 %v0_804a195.in, { 1, 0 }
  uselistorder i32 %v0_804a162, { 1, 0 }
  uselistorder i32 %v0_804a161, { 1, 0 }
  uselistorder i32 %v0_804a160, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a1a5, { 1, 0, 2 }
}

define i32 @function_804d5e0() local_unnamed_addr {
dec_label_pc_804d5e0:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804d5e7 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804d605, label %dec_label_pc_804d5f0

dec_label_pc_804d5f0:                             ; preds = %dec_label_pc_804d5e0, %dec_label_pc_804d5f0
  %v0_804d5fe = phi i32 [ %v2_804d5fe, %dec_label_pc_804d5f0 ], [ 0, %dec_label_pc_804d5e0 ]
  %v0_804d5f3 = phi i32 [ %v1_804d5f3, %dec_label_pc_804d5f0 ], [ %tmp11, %dec_label_pc_804d5e0 ]
  %v0_804d5fb = phi i32 [ %v1_804d5fb, %dec_label_pc_804d5f0 ], [ %v4_804d5e7, %dec_label_pc_804d5e0 ]
  %v1_804d5f0 = inttoptr i32 %v0_804d5fb to i16*
  %v2_804d5f0 = load i16, i16* %v1_804d5f0, align 2
  %v3_804d5f0 = zext i16 %v2_804d5f0 to i32
  %v1_804d5f3 = add i32 %v0_804d5f3, -2
  %v1_804d5fb = add i32 %v0_804d5fb, 2
  %v2_804d5fe = add i32 %v3_804d5f0, %v0_804d5fe
  %v5_804d600 = icmp eq i32 %v1_804d5f3, 0
  %v9_804d600 = icmp eq i32 %v0_804d5f3, 3
  %v2_804d603 = or i1 %v9_804d600, %v5_804d600
  br i1 %v2_804d603, label %dec_label_pc_804d605.loopexit, label %dec_label_pc_804d5f0

dec_label_pc_804d605.loopexit:                    ; preds = %dec_label_pc_804d5f0
  br label %dec_label_pc_804d605

dec_label_pc_804d605:                             ; preds = %dec_label_pc_804d605.loopexit, %dec_label_pc_804d5e0
  %v0_804d60b = phi i32 [ %v2_804d5fe, %dec_label_pc_804d605.loopexit ], [ 0, %dec_label_pc_804d5e0 ]
  %v0_804d608 = phi i32 [ %v1_804d5fb, %dec_label_pc_804d605.loopexit ], [ %v4_804d5e7, %dec_label_pc_804d5e0 ]
  %v0_804d605 = phi i32 [ %v1_804d5f3, %dec_label_pc_804d605.loopexit ], [ %tmp11, %dec_label_pc_804d5e0 ]
  %v8_804d605 = icmp eq i32 %v0_804d605, 1
  %v1_804d606 = icmp eq i1 %v8_804d605, false
  br i1 %v1_804d606, label %dec_label_pc_804d60d, label %dec_label_pc_804d608

dec_label_pc_804d608:                             ; preds = %dec_label_pc_804d605
  %v1_804d608 = inttoptr i32 %v0_804d608 to i8*
  %v2_804d608 = load i8, i8* %v1_804d608, align 1
  %v3_804d608 = sext i8 %v2_804d608 to i32
  %v2_804d60b = add i32 %v3_804d608, %v0_804d60b
  br label %dec_label_pc_804d60d

dec_label_pc_804d60d:                             ; preds = %dec_label_pc_804d605, %dec_label_pc_804d608
  %v0_804d60d = phi i32 [ %v0_804d60b, %dec_label_pc_804d605 ], [ %v2_804d60b, %dec_label_pc_804d608 ]
  %v1_804d60f = urem i32 %v0_804d60d, 65536
  %v2_804d612 = udiv i32 %v0_804d60d, 65536
  %v2_804d616 = add nuw nsw i32 %v1_804d60f, %v2_804d612
  %v2_804d61a = udiv i32 %v2_804d616, 65536
  %v2_804d61d = add nuw nsw i32 %v2_804d61a, %v2_804d616
  %v1_804d61f = urem i32 %v2_804d61d, 65536
  %v1_804d622 = xor i32 %v1_804d61f, 65535
  ret i32 %v1_804d622

; uselistorder directives
  uselistorder i32 %v2_804d616, { 1, 0 }
  uselistorder i32 %v0_804d60b, { 1, 0 }
  uselistorder i32 %v1_804d5f3, { 0, 2, 1 }
  uselistorder i32 %v4_804d5e7, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d60d, { 1, 0 }
  uselistorder label %dec_label_pc_804d5f0, { 1, 0 }
}

define i32 @function_804d630() local_unnamed_addr {
dec_label_pc_804d630:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804d645 = ptrtoint i16* %tmp14 to i32
  %v1_804d64e = add i32 %tmp17, 12
  %v2_804d64e = inttoptr i32 %v1_804d64e to i32*
  %v3_804d64e = load i32, i32* %v2_804d64e, align 4
  %v1_804d651 = add i32 %tmp17, 16
  %v2_804d651 = inttoptr i32 %v1_804d651 to i32*
  %v3_804d651 = load i32, i32* %v2_804d651, align 4
  %v7_804d657 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804d657, label %dec_label_pc_804d660, label %dec_label_pc_804d675

dec_label_pc_804d660:                             ; preds = %dec_label_pc_804d630, %dec_label_pc_804d660
  %v0_804d66e = phi i32 [ %v2_804d66e, %dec_label_pc_804d660 ], [ 0, %dec_label_pc_804d630 ]
  %v0_804d663 = phi i32 [ %v1_804d663, %dec_label_pc_804d660 ], [ %tmp16, %dec_label_pc_804d630 ]
  %v0_804d66b = phi i32 [ %v1_804d66b, %dec_label_pc_804d660 ], [ %v4_804d645, %dec_label_pc_804d630 ]
  %v1_804d660 = inttoptr i32 %v0_804d66b to i16*
  %v2_804d660 = load i16, i16* %v1_804d660, align 2
  %v3_804d660 = zext i16 %v2_804d660 to i32
  %v1_804d663 = add i32 %v0_804d663, -2
  %v1_804d66b = add i32 %v0_804d66b, 2
  %v2_804d66e = add i32 %v3_804d660, %v0_804d66e
  %v1_804d670 = add i32 %v0_804d663, -3
  %v6_804d670 = sub i32 2, %v0_804d663
  %v7_804d670 = and i32 %v1_804d663, %v6_804d670
  %v8_804d670 = icmp slt i32 %v7_804d670, 0
  %v9_804d670 = icmp eq i32 %v1_804d670, 0
  %v10_804d670 = icmp slt i32 %v1_804d670, 0
  %v3_804d673 = icmp eq i1 %v10_804d670, %v8_804d670
  %v4_804d673 = icmp eq i1 %v9_804d670, false
  %v5_804d673 = and i1 %v4_804d673, %v3_804d673
  br i1 %v5_804d673, label %dec_label_pc_804d660, label %dec_label_pc_804d675.loopexit

dec_label_pc_804d675.loopexit:                    ; preds = %dec_label_pc_804d660
  br label %dec_label_pc_804d675

dec_label_pc_804d675:                             ; preds = %dec_label_pc_804d675.loopexit, %dec_label_pc_804d630
  %v0_804d6e0 = phi i32 [ %v2_804d66e, %dec_label_pc_804d675.loopexit ], [ 0, %dec_label_pc_804d630 ]
  %v0_804d6de = phi i32 [ %v1_804d66b, %dec_label_pc_804d675.loopexit ], [ %v4_804d645, %dec_label_pc_804d630 ]
  %v0_804d675 = phi i32 [ %v1_804d663, %dec_label_pc_804d675.loopexit ], [ %tmp16, %dec_label_pc_804d630 ]
  %v8_804d675 = icmp eq i32 %v0_804d675, 1
  br i1 %v8_804d675, label %dec_label_pc_804d6dc, label %dec_label_pc_804d678

dec_label_pc_804d678:                             ; preds = %dec_label_pc_804d675, %dec_label_pc_804d6dc
  %v0_804d686 = phi i32 [ %v0_804d6e0, %dec_label_pc_804d675 ], [ %v2_804d6e0, %dec_label_pc_804d6dc ]
  %v2_804d67c = udiv i32 %v3_804d651, 65536
  %v1_804d67f = add i32 %tmp17, 9
  %v2_804d67f = inttoptr i32 %v1_804d67f to i8*
  %v3_804d67f = load i8, i8* %v2_804d67f, align 1
  %v1_804d682 = zext i8 %v3_804d67f to i16
  %v2_804d682 = call i16 @llvm.bswap.i16(i16 %v1_804d682)
  %v3_804d682 = zext i16 %v2_804d682 to i32
  %v2_804d686 = add i32 %v0_804d686, %v2_804d67c
  %v2_804d68e = add i32 %v2_804d686, %v3_804d682
  %v1_804d694 = urem i32 %v3_804d64e, 65536
  %v2_804d69a = udiv i32 %v3_804d64e, 65536
  %v1_804d6a1 = urem i32 %v3_804d651, 65536
  %v4_804d6a9 = zext i16 %tmp15 to i32
  %v2_804d69d = add nuw nsw i32 %v2_804d69a, %v4_804d6a9
  %v2_804d6a7 = add nuw nsw i32 %v2_804d69d, %v1_804d694
  %v2_804d6b4 = add nuw nsw i32 %v2_804d6a7, %v1_804d6a1
  %v2_804d6b6 = add i32 %v2_804d6b4, %v2_804d68e
  %tmp = icmp ult i32 %v2_804d6b6, 65536
  br i1 %tmp, label %dec_label_pc_804d6ce, label %dec_label_pc_804d6c0

dec_label_pc_804d6c0:                             ; preds = %dec_label_pc_804d678, %dec_label_pc_804d6c0
  %v2_804d6c53 = phi i32 [ %v2_804d6c5, %dec_label_pc_804d6c0 ], [ %v2_804d6b6, %dec_label_pc_804d678 ]
  %v2_804d6c94.in = phi i32 [ %v2_804d6c5, %dec_label_pc_804d6c0 ], [ %v2_804d6b6, %dec_label_pc_804d678 ]
  %v2_804d6c94 = udiv i32 %v2_804d6c94.in, 65536
  %v1_804d6c0 = urem i32 %v2_804d6c53, 65536
  %v2_804d6c5 = add nuw nsw i32 %v1_804d6c0, %v2_804d6c94
  %tmp25 = icmp ult i32 %v2_804d6c5, 65536
  %v1_804d6cc = icmp eq i1 %tmp25, false
  br i1 %v1_804d6cc, label %dec_label_pc_804d6c0, label %dec_label_pc_804d6ce.loopexit

dec_label_pc_804d6ce.loopexit:                    ; preds = %dec_label_pc_804d6c0
  br label %dec_label_pc_804d6ce

dec_label_pc_804d6ce:                             ; preds = %dec_label_pc_804d6ce.loopexit, %dec_label_pc_804d678
  %v0_804d6ce = phi i32 [ %v2_804d6c5, %dec_label_pc_804d6ce.loopexit ], [ %v2_804d6b6, %dec_label_pc_804d678 ]
  %v1_804d6ce = urem i32 %v0_804d6ce, 65536
  %v1_804d6d2 = xor i32 %v1_804d6ce, 65535
  ret i32 %v1_804d6d2

dec_label_pc_804d6dc:                             ; preds = %dec_label_pc_804d675
  %v1_804d6de = inttoptr i32 %v0_804d6de to i8*
  %v2_804d6de = load i8, i8* %v1_804d6de, align 1
  %v3_804d6de = zext i8 %v2_804d6de to i32
  %v2_804d6e0 = add i32 %v3_804d6de, %v0_804d6e0
  br label %dec_label_pc_804d678

; uselistorder directives
  uselistorder i32 %v2_804d6c5, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804d6b6, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804d670, { 1, 0 }
  uselistorder i32 %v1_804d663, { 0, 2, 1 }
  uselistorder i32 %v3_804d651, { 1, 0 }
  uselistorder i32 %v4_804d645, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d6c0, { 1, 0 }
  uselistorder label %dec_label_pc_804d678, { 1, 0 }
  uselistorder label %dec_label_pc_804d660, { 1, 0 }
}

define i32 @function_804eaf0() local_unnamed_addr {
dec_label_pc_804eaf0:
  %v0_804eaf0 = load i32, i32* @global_var_80550d4.20, align 4
  %v0_804eaf8 = load i32, i32* @global_var_80550e0.21, align 32
  %v2_804eafe = mul i32 %v0_804eaf0, 2048
  %v2_804eb03 = udiv i32 %v0_804eaf8, 524288
  store i32 %v2_804eb03, i32* @ecx, align 4
  %v2_804eb06 = xor i32 %v2_804eafe, %v0_804eaf0
  %v0_804eb08 = load i32, i32* @global_var_80550d8.22, align 8
  store i32 %v0_804eb08, i32* @global_var_80550d4.20, align 4
  %v0_804eb12 = load i32, i32* @global_var_80550dc.23, align 4
  store i32 %v0_804eb12, i32* @global_var_80550d8.22, align 8
  store i32 %v0_804eaf8, i32* @global_var_80550dc.23, align 4
  %v2_804eb24 = xor i32 %v2_804eb03, %v0_804eaf8
  %v2_804eb26 = udiv i32 %v2_804eb06, 256
  %v2_804eb29 = xor i32 %v2_804eb26, %v2_804eb06
  %v2_804eb2b = xor i32 %v2_804eb29, %v2_804eb24
  store i32 %v2_804eb2b, i32* @global_var_80550e0.21, align 32
  ret i32 %v2_804eb2b

; uselistorder directives
  uselistorder i32 %v2_804eb06, { 1, 0 }
  uselistorder i32 %v2_804eb03, { 1, 0 }
  uselistorder i32 %v0_804eaf8, { 1, 2, 0 }
  uselistorder i32 %v0_804eaf0, { 1, 0 }
}

define i32 @function_804ec50() local_unnamed_addr {
dec_label_pc_804ec50:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804ec50 = load i32, i32* @ebx, align 4
  %v0_804ec51 = load i32, i32* @eax, align 4
  store i32 %v0_804ec51, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_804ec76 = add i32 %v0_804ec51, 4
  %v2_804ec76 = inttoptr i32 %v1_804ec76 to i32*
  %v3_804ec76 = load i32, i32* %v2_804ec76, align 4
  %v10_804ec79 = icmp eq i32 %v3_804ec76, -1
  br i1 %v10_804ec79, label %dec_label_pc_804ec50.dec_label_pc_804ec8a_crit_edge, label %dec_label_pc_804ec7e

dec_label_pc_804ec50.dec_label_pc_804ec8a_crit_edge: ; preds = %dec_label_pc_804ec50
  br label %dec_label_pc_804ec8a

dec_label_pc_804ec7e:                             ; preds = %dec_label_pc_804ec50
  %v1_804ec82 = call i32 @function_80515f3(i32 %v3_804ec76)
  br label %dec_label_pc_804ec8a

dec_label_pc_804ec8a:                             ; preds = %dec_label_pc_804ec50.dec_label_pc_804ec8a_crit_edge, %dec_label_pc_804ec7e
  %v0_804ec8a = phi i32 [ -1, %dec_label_pc_804ec50.dec_label_pc_804ec8a_crit_edge ], [ %v1_804ec82, %dec_label_pc_804ec7e ]
  store i32 %v0_804ec8a, i32* %stack_var_-32, align 4
  %v4_804ec91 = call i32 @function_8051dd4(i32 2, i32 1, i32 0, i32 %v0_804ec8a)
  %v1_804ec99 = load i32, i32* @ebx, align 4
  %v2_804ec99 = add i32 %v1_804ec99, 4
  %v3_804ec99 = inttoptr i32 %v2_804ec99 to i32*
  store i32 %v4_804ec91, i32* %v3_804ec99, align 4
  %v1_804ec9c = add i32 %v4_804ec91, 1
  %v8_804ec9c = icmp eq i32 %v1_804ec9c, 0
  br i1 %v8_804ec9c, label %dec_label_pc_804ec8a.dec_label_pc_804ed13_crit_edge, label %dec_label_pc_804ec9f

dec_label_pc_804ec8a.dec_label_pc_804ed13_crit_edge: ; preds = %dec_label_pc_804ec8a
  br label %dec_label_pc_804ed13

dec_label_pc_804ec9f:                             ; preds = %dec_label_pc_804ec8a
  store i32 %v1_804ec9c, i32* %stack_var_-32, align 4
  %v0_804eca1 = load i32, i32* @ebx, align 4
  %v1_804eca1 = add i32 %v0_804eca1, 28
  store i32 %v1_804eca1, i32* @eax, align 4
  %v1_804eca9 = add i32 %v0_804eca1, 24
  %v2_804eca9 = inttoptr i32 %v1_804eca9 to i32*
  store i32 0, i32* %v2_804eca9, align 4
  %v0_804ecb0 = load i32, i32* @eax, align 4
  %v3_804ecb1 = load i32, i32* %stack_var_-32, align 4
  %v4_804ecb1 = call i32 @function_8051110(i32 %v0_804ecb0, i32 256, i32 %v1_804ec9c, i32 %v3_804ecb1)
  %v0_804ecb9 = load i32, i32* @ebx, align 4
  %v1_804ecb9 = add i32 %v0_804ecb9, 4
  %v2_804ecb9 = inttoptr i32 %v1_804ecb9 to i32*
  %v3_804ecb9 = load i32, i32* %v2_804ecb9, align 4
  %v3_804ecc1 = call i32 @function_805155d(i32 %v3_804ecb9, i32 3, i32 0)
  %v0_804ecc9 = load i32, i32* @ebx, align 4
  %v1_804ecc9 = add i32 %v0_804ecc9, 4
  %v2_804ecc9 = inttoptr i32 %v1_804ecc9 to i32*
  %v3_804ecc9 = load i32, i32* %v2_804ecc9, align 4
  %v12_804eccc = or i32 %v3_804ecc1, 2048
  %v3_804ecd3 = call i32 @function_805155d(i32 %v3_804ecc9, i32 4, i32 %v12_804eccc)
  %v0_804ecd8 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_804ecee = load i32, i32* @global_var_8055130.24, align 16
  %v2_804ecf3 = add i32 %v0_804ecd8, 8
  %v3_804ecf3 = inttoptr i32 %v2_804ecf3 to i32*
  store i32 %v0_804ecee, i32* %v3_804ecf3, align 4
  %v2_804ecf6 = ptrtoint i32* %stack_var_-20 to i32
  %v0_804ecfd = load i32, i32* @ebx, align 4
  %v1_804ecfd = add i32 %v0_804ecfd, 4
  %v2_804ecfd = inttoptr i32 %v1_804ecfd to i32*
  %v3_804ecfd = load i32, i32* %v2_804ecfd, align 4
  store i32 %v3_804ecfd, i32* %edx.global-to-local, align 4
  %v1_804ed00 = add i32 %v0_804ecfd, 12
  %v2_804ed00 = inttoptr i32 %v1_804ed00 to i32*
  store i32 1, i32* %v2_804ed00, align 4
  %v0_804ed0a = load i32, i32* %edx.global-to-local, align 4
  %v3_804ed0b = call i32 @function_8051bf9(i32 %v0_804ed0a, i32 %v2_804ecf6, i32 16)
  br label %dec_label_pc_804ed13

dec_label_pc_804ed13:                             ; preds = %dec_label_pc_804ec8a.dec_label_pc_804ed13_crit_edge, %dec_label_pc_804ec9f
  %v0_804ed17 = phi i32 [ 0, %dec_label_pc_804ec8a.dec_label_pc_804ed13_crit_edge ], [ %v3_804ed0b, %dec_label_pc_804ec9f ]
  store i32 %v0_804ec50, i32* @ebx, align 4
  ret i32 %v0_804ed17

; uselistorder directives
  uselistorder i32 %v3_804ec76, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8051110, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ed13, { 1, 0 }
  uselistorder label %dec_label_pc_804ec8a, { 1, 0 }
}

define i32 @function_804f2a8() local_unnamed_addr {
dec_label_pc_804f2a8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_804f779, %dec_label_pc_804f2a8
  %v0_804f2a8 = load i32, i32* @global_var_8055130.24, align 16
  store i32 %v0_804f2a8, i32* @esi, align 4
  %v0_804f2ae = load i32, i32* @esp, align 4
  %v1_804f2ae = add i32 %v0_804f2ae, 16
  %v2_804f2ae = inttoptr i32 %v1_804f2ae to i32*
  %v3_804f2ae = load i32, i32* %v2_804f2ae, align 4
  %v15_804f2ae = icmp eq i32 %v3_804f2ae, %v0_804f2a8
  br i1 %v15_804f2ae, label %dec_label_pc_804f56b, label %dec_label_pc_804f2b8

dec_label_pc_804f2b8:                             ; preds = %.loopexit
  %v1_804f2b8 = add i32 %v0_804f2ae, 1812
  store i32 %v1_804f2b8, i32* @ebp, align 4
  %v1_804f2bf = add i32 %v0_804f2ae, 1856
  %v2_804f2bf = inttoptr i32 %v1_804f2bf to i32*
  store i32 0, i32* %v2_804f2bf, align 4
  %v0_804f46e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f46e

dec_label_pc_804f2d0:                             ; preds = %dec_label_pc_804f4e3
  %v11_804f2d0 = icmp eq i8 %v2_804f4c6, -84
  br i1 %v11_804f2d0, label %dec_label_pc_804f530, label %dec_label_pc_804f2d9

dec_label_pc_804f2d9:                             ; preds = %dec_label_pc_804f2d0
  %v10_804f2d9 = icmp eq i8 %v2_804f4c6, 100
  br i1 %v10_804f2d9, label %dec_label_pc_804f2d9.dec_label_pc_804f4fa_crit_edge, label %dec_label_pc_804f2e2

dec_label_pc_804f2d9.dec_label_pc_804f4fa_crit_edge: ; preds = %dec_label_pc_804f2d9
  %.pre = trunc i32 %v2_804f4bd to i8
  br label %dec_label_pc_804f4fa

dec_label_pc_804f2e2:                             ; preds = %dec_label_pc_804f4f1, %dec_label_pc_804f2d9
  %v11_804f2e2 = icmp eq i8 %v2_804f4c6, -87
  br i1 %v11_804f2e2, label %dec_label_pc_804f54b, label %dec_label_pc_804f2eb

dec_label_pc_804f2eb:                             ; preds = %dec_label_pc_804f542, %dec_label_pc_804f2e2
  %v0_804f2eb = phi i32 [ %v0_804f542, %dec_label_pc_804f542 ], [ %v5_804f4bb, %dec_label_pc_804f2e2 ]
  %v0_804f37366 = phi i32 [ %v0_804f539, %dec_label_pc_804f542 ], [ %v2_804f4bd, %dec_label_pc_804f2e2 ]
  %v1_804f2eb = trunc i32 %v0_804f2eb to i8
  %v11_804f2eb = icmp eq i8 %v1_804f2eb, -58
  br i1 %v11_804f2eb, label %dec_label_pc_804f511, label %dec_label_pc_804f2f4

dec_label_pc_804f2f4:                             ; preds = %dec_label_pc_804f54b, %dec_label_pc_804f508, %dec_label_pc_804f2eb
  %v0_804f2f4 = phi i32 [ %v0_804f2f473, %dec_label_pc_804f54b ], [ %v5_804f4bb, %dec_label_pc_804f508 ], [ %v0_804f2eb, %dec_label_pc_804f2eb ]
  %v0_804f37365 = phi i32 [ %v0_804f54b, %dec_label_pc_804f54b ], [ %v2_804f4bd, %dec_label_pc_804f508 ], [ %v0_804f37366, %dec_label_pc_804f2eb ]
  %v1_804f2f4 = trunc i32 %v0_804f2f4 to i8
  %tmp255 = icmp ult i8 %v1_804f2f4, -32
  br i1 %tmp255, label %dec_label_pc_804f2fd, label %dec_label_pc_804f4b0.preheader

dec_label_pc_804f2fd:                             ; preds = %dec_label_pc_804f4fa, %dec_label_pc_804f530.dec_label_pc_804f2fd_crit_edge, %dec_label_pc_804f51a, %dec_label_pc_804f2f4, %dec_label_pc_804f511
  %v0_804f373 = phi i32 [ %v0_804f539, %dec_label_pc_804f530.dec_label_pc_804f2fd_crit_edge ], [ %v0_804f51a, %dec_label_pc_804f51a ], [ %v0_804f37365, %dec_label_pc_804f2f4 ], [ %v0_804f51a, %dec_label_pc_804f511 ], [ %v2_804f4bd, %dec_label_pc_804f4fa ]
  %v0_804f381 = phi i32 [ %v0_804f2fd.pre, %dec_label_pc_804f530.dec_label_pc_804f2fd_crit_edge ], [ %v0_804f2fd62, %dec_label_pc_804f51a ], [ %v0_804f2f4, %dec_label_pc_804f2f4 ], [ %v0_804f2fd62, %dec_label_pc_804f511 ], [ %v5_804f4bb, %dec_label_pc_804f4fa ]
  %v1_804f2fd = add i32 %v0_804f381, -6
  store i32 %v1_804f2fd, i32* %eax.global-to-local, align 4
  %v1_804f300 = trunc i32 %v1_804f2fd to i8
  %tmp256 = or i8 %v1_804f300, 1
  %tmp257 = icmp eq i8 %tmp256, 1
  br i1 %tmp257, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f308

dec_label_pc_804f308:                             ; preds = %dec_label_pc_804f2fd
  %v1_804f308 = trunc i32 %v0_804f381 to i8
  %v10_804f308 = icmp eq i8 %v1_804f308, 11
  br i1 %v10_804f308, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f311

dec_label_pc_804f311:                             ; preds = %dec_label_pc_804f308
  %v10_804f311 = icmp eq i8 %v1_804f308, 21
  br i1 %v10_804f311, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f31a

dec_label_pc_804f31a:                             ; preds = %dec_label_pc_804f311
  %v10_804f31a = icmp eq i8 %v1_804f308, 22
  br i1 %v10_804f31a, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f323

dec_label_pc_804f323:                             ; preds = %dec_label_pc_804f31a
  %v10_804f323 = icmp eq i8 %v1_804f308, 26
  br i1 %v10_804f323, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f32c

dec_label_pc_804f32c:                             ; preds = %dec_label_pc_804f323
  %v10_804f32c = icmp eq i8 %v1_804f308, 28
  br i1 %v10_804f32c, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f335

dec_label_pc_804f335:                             ; preds = %dec_label_pc_804f32c
  %v10_804f335 = icmp eq i8 %v1_804f308, 29
  br i1 %v10_804f335, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f33e

dec_label_pc_804f33e:                             ; preds = %dec_label_pc_804f335
  %v10_804f33e = icmp eq i8 %v1_804f308, 30
  br i1 %v10_804f33e, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f347

dec_label_pc_804f347:                             ; preds = %dec_label_pc_804f33e
  %v10_804f347 = icmp eq i8 %v1_804f308, 33
  br i1 %v10_804f347, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f350

dec_label_pc_804f350:                             ; preds = %dec_label_pc_804f347
  %v10_804f350 = icmp eq i8 %v1_804f308, 55
  br i1 %v10_804f350, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f359

dec_label_pc_804f359:                             ; preds = %dec_label_pc_804f350
  %v11_804f359 = icmp eq i8 %v1_804f308, -42
  br i1 %v11_804f359, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f362

dec_label_pc_804f362:                             ; preds = %dec_label_pc_804f359
  %v11_804f362 = icmp eq i8 %v1_804f308, -41
  br i1 %v11_804f362, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f36b

dec_label_pc_804f36b:                             ; preds = %dec_label_pc_804f362
  %v0_804f36d = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_805510a.25 to i16*), align 4
  %v1_804f373 = mul i32 %v0_804f373, 65536
  %v2_804f37e = and i32 %v1_804f373, 16711680
  %v2_804f381 = mul i32 %v0_804f381, 16777216
  %v1_804f36d = mul i32 %v0_804f36d, 256
  %v2_804f387 = or i32 %v2_804f37e, %v2_804f381
  %v0_804f389 = load i32, i32* @edi, align 4
  %v1_804f38b = urem i32 %v0_804f389, 256
  store i32 %v1_804f38b, i32* %eax.global-to-local, align 4
  %v2_804f390 = or i32 %v1_804f38b, %v2_804f387
  store i32 %v2_804f390, i32* %ecx.global-to-local, align 4
  %v2_804f392 = or i32 %v1_804f38b, %v1_804f36d
  %v1_804f394 = load i32, i32* @esp, align 4
  %v2_804f394 = add i32 %v1_804f394, -4
  %v3_804f394 = inttoptr i32 %v2_804f394 to i32*
  store i32 %v2_804f390, i32* %v3_804f394, align 4
  %v1_804f395 = trunc i32 %v2_804f392 to i16
  %v2_804f395 = call i16 @llvm.bswap.i16(i16 %v1_804f395)
  %v3_804f395 = zext i16 %v2_804f395 to i32
  %v1_804f399 = udiv i32 %v2_804f387, 65536
  %v2_804f399 = mul nuw i32 %v3_804f395, 65536
  %v1_804f39c = trunc i32 %v1_804f399 to i16
  %v2_804f39c = call i16 @llvm.bswap.i16(i16 %v1_804f39c)
  %v3_804f39c = zext i16 %v2_804f39c to i32
  %v6_804f39c = or i32 %v2_804f399, %v3_804f39c
  store i32 %v6_804f39c, i32* %edx.global-to-local, align 4
  %v0_804f3a0 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804f3a0 = add i32 %v1_804f394, -8
  %v3_804f3a0 = inttoptr i32 %v2_804f3a0 to i32*
  store i32 %v0_804f3a0, i32* %v3_804f3a0, align 4
  %v0_804f3a1 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804f3a1, i32* @global_var_8055110.26, align 16
  %v1_804f3a7 = add i32 %v1_804f394, -12
  %v2_804f3a7 = inttoptr i32 %v1_804f3a7 to i32*
  store i32 20, i32* %v2_804f3a7, align 4
  %v1_804f3a9 = add i32 %v1_804f394, -16
  %v2_804f3a9 = inttoptr i32 %v1_804f3a9 to i32*
  store i32 ptrtoint (i32* @global_var_8055100.27 to i32), i32* %v2_804f3a9, align 4
  %v0_804f3ae = call i32 @function_804d5e0()
  %v1_804f3ae = trunc i32 %v0_804f3ae to i16
  store i32 %v0_804f3ae, i32* %eax.global-to-local, align 4
  %v0_804f3b3 = load i32, i32* @esp, align 4
  %v1_804f3b3 = add i32 %v0_804f3b3, 1872
  %v2_804f3b3 = inttoptr i32 %v1_804f3b3 to i32*
  %v3_804f3b3 = load i32, i32* %v2_804f3b3, align 4
  store i16 %v1_804f3ae, i16* bitcast (i32* @global_var_805510a.25 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_804f3c9 = ashr i32 %v3_804f3b3, 31
  %v2_804f3cf = zext i32 %v3_804f3b3 to i64
  %v4_804f3cf = zext i32 %v2_804f3c9 to i64
  %v5_804f3cf = mul nuw i64 %v4_804f3cf, 4294967296
  %v6_804f3cf = or i64 %v5_804f3cf, %v2_804f3cf
  %v10_804f3cf = srem i64 %v6_804f3cf, 10
  %v11_804f3cf = trunc i64 %v10_804f3cf to i32
  store i32 %v11_804f3cf, i32* %edx.global-to-local, align 4
  %v1_804f3d1 = icmp eq i32 %v11_804f3cf, 0
  %v1_804f3d3 = icmp eq i1 %v1_804f3d1, false
  %. = select i1 %v1_804f3d3, i16 5888, i16 4873
  store i16 %., i16* @global_var_8055116.28, align 2
  %v0_804f3e2 = load i32, i32* @global_var_8055110.26, align 16
  store i32 %v0_804f3e2, i32* %eax.global-to-local, align 4
  %v1_804f3e7 = add i32 %v0_804f3b3, 12
  %v2_804f3e7 = inttoptr i32 %v1_804f3e7 to i32*
  store i32 20, i32* %v2_804f3e7, align 4
  %v0_804f3e9 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804f3e9, i32* @global_var_8055118.29, align 8
  %v1_804f3ee = add i32 %v0_804f3b3, 8
  %v2_804f3ee = inttoptr i32 %v1_804f3ee to i32*
  store i32 5120, i32* %v2_804f3ee, align 4
  store i16 0, i16* bitcast (i32* @global_var_8055124.30 to i16*), align 4
  %v1_804f3fc = add i32 %v0_804f3b3, 4
  %v2_804f3fc = inttoptr i32 %v1_804f3fc to i32*
  store i32 ptrtoint (i32* @global_var_8055114.31 to i32), i32* %v2_804f3fc, align 4
  %v2_804f401 = inttoptr i32 %v0_804f3b3 to i32*
  store i32 ptrtoint (i32* @global_var_8055100.27 to i32), i32* %v2_804f401, align 4
  %v0_804f406 = call i32 @function_804d630()
  %v1_804f406 = trunc i32 %v0_804f406 to i16
  store i16 %v1_804f406, i16* bitcast (i32* @global_var_8055124.30 to i16*), align 4
  %v0_804f411 = load i32, i32* @global_var_8055110.26, align 16
  store i32 %v0_804f411, i32* %eax.global-to-local, align 4
  %v1_804f416 = load i32, i32* @esp, align 4
  %v2_804f416 = add i32 %v1_804f416, 1832
  %v3_804f416 = inttoptr i32 %v2_804f416 to i32*
  store i32 %v0_804f411, i32* %v3_804f416, align 4
  %v0_804f41d = load i16, i16* @global_var_8055116.28, align 2
  %v1_804f41d = zext i16 %v0_804f41d to i32
  %v2_804f41d = load i32, i32* %eax.global-to-local, align 4
  %v3_804f41d = and i32 %v2_804f41d, -65536
  %v4_804f41d = or i32 %v3_804f41d, %v1_804f41d
  store i32 %v4_804f41d, i32* %eax.global-to-local, align 4
  %v0_804f423 = load i32, i32* @esp, align 4
  %v1_804f423 = add i32 %v0_804f423, 1828
  %v2_804f423 = inttoptr i32 %v1_804f423 to i16*
  store i16 2, i16* %v2_804f423, align 2
  %v0_804f42d = load i32, i32* %eax.global-to-local, align 4
  %v1_804f42d = trunc i32 %v0_804f42d to i16
  %v2_804f42d = load i32, i32* @esp, align 4
  %v3_804f42d = add i32 %v2_804f42d, 1830
  %v4_804f42d = inttoptr i32 %v3_804f42d to i16*
  store i16 %v1_804f42d, i16* %v4_804f42d, align 2
  %v0_804f435 = load i32, i32* @esp, align 4
  %v1_804f435 = inttoptr i32 %v0_804f435 to i32*
  %v3_804f435 = add i32 %v0_804f435, 4
  %v0_804f436 = load i32, i32* @global_var_8055178.32, align 8
  store i32 %v0_804f436, i32* %eax.global-to-local, align 4
  %v1_804f43b = inttoptr i32 %v3_804f435 to i32*
  %v2_804f43b = load i32, i32* %v1_804f43b, align 4
  store i32 %v2_804f43b, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_804f43b, align 4
  %v0_804f43e = load i32, i32* @ebp, align 4
  store i32 %v0_804f43e, i32* %v1_804f435, align 4
  %v1_804f43f = add i32 %v0_804f435, -4
  %v2_804f43f = inttoptr i32 %v1_804f43f to i32*
  store i32 16384, i32* %v2_804f43f, align 4
  %v1_804f444 = add i32 %v0_804f435, -8
  %v2_804f444 = inttoptr i32 %v1_804f444 to i32*
  store i32 40, i32* %v2_804f444, align 4
  %v1_804f446 = add i32 %v0_804f435, -12
  %v2_804f446 = inttoptr i32 %v1_804f446 to i32*
  store i32 ptrtoint (i32* @global_var_8055100.27 to i32), i32* %v2_804f446, align 4
  %v0_804f44b = load i32, i32* %eax.global-to-local, align 4
  %v2_804f44b = add i32 %v0_804f435, -16
  %v3_804f44b = inttoptr i32 %v2_804f44b to i32*
  store i32 %v0_804f44b, i32* %v3_804f44b, align 4
  %v0_804f44c = call i32 @function_8051d56()
  store i32 %v0_804f44c, i32* %eax.global-to-local, align 4
  %v0_804f451 = load i32, i32* @esp, align 4
  %v1_804f451 = add i32 %v0_804f451, 1888
  %v2_804f451 = inttoptr i32 %v1_804f451 to i32*
  %v3_804f451 = load i32, i32* %v2_804f451, align 4
  %v1_804f458 = add i32 %v3_804f451, 1
  store i32 %v1_804f458, i32* %eax.global-to-local, align 4
  store i32 %v1_804f458, i32* %v2_804f451, align 4
  %v0_804f460 = load i32, i32* @esp, align 4
  %v1_804f460 = add i32 %v0_804f460, 32
  %v0_804f463 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f463 = add i32 %v0_804f463, -383
  %v6_804f463 = sub i32 382, %v0_804f463
  %v7_804f463 = and i32 %v6_804f463, %v0_804f463
  %v8_804f463 = icmp slt i32 %v7_804f463, 0
  %v9_804f463 = icmp eq i32 %v1_804f463, 0
  %v10_804f463 = icmp slt i32 %v1_804f463, 0
  %v3_804f468 = icmp eq i1 %v10_804f463, %v8_804f463
  %v4_804f468 = icmp eq i1 %v9_804f463, false
  %v5_804f468 = and i1 %v4_804f468, %v3_804f468
  br i1 %v5_804f468, label %dec_label_pc_804f567, label %dec_label_pc_804f46e

dec_label_pc_804f46e:                             ; preds = %dec_label_pc_804f36b, %dec_label_pc_804f2b8
  %v0_804f46e = phi i32 [ %v1_804f460, %dec_label_pc_804f36b ], [ %v0_804f46e.pre, %dec_label_pc_804f2b8 ]
  %v1_804f46e = add i32 %v0_804f46e, 1812
  %v2_804f46e = inttoptr i32 %v1_804f46e to i32*
  store i32 0, i32* %v2_804f46e, align 4
  %v0_804f479 = load i32, i32* @esp, align 4
  %v1_804f479 = add i32 %v0_804f479, 1816
  %v2_804f479 = inttoptr i32 %v1_804f479 to i32*
  store i32 0, i32* %v2_804f479, align 4
  %v0_804f484 = load i32, i32* @esp, align 4
  %v1_804f484 = add i32 %v0_804f484, 1820
  %v2_804f484 = inttoptr i32 %v1_804f484 to i32*
  store i32 0, i32* %v2_804f484, align 4
  %v0_804f48f = load i32, i32* @esp, align 4
  %v1_804f48f = add i32 %v0_804f48f, 1824
  %v2_804f48f = inttoptr i32 %v1_804f48f to i32*
  store i32 0, i32* %v2_804f48f, align 4
  %v0_804f49a = call i32 @function_804eaf0()
  %v1_804f49a = trunc i32 %v0_804f49a to i16
  store i16 %v1_804f49a, i16* bitcast (i32* @global_var_8055104.33 to i16*), align 4
  %v0_804f4a5 = load i32, i32* @global_var_805515c.34, align 4
  store i32 %v0_804f4a5, i32* %eax.global-to-local, align 4
  store i32 %v0_804f4a5, i32* @global_var_805510c.35, align 4
  br label %dec_label_pc_804f4b0.preheader

dec_label_pc_804f4b0.preheader:                   ; preds = %dec_label_pc_804f46e, %dec_label_pc_804f2fd, %dec_label_pc_804f308, %dec_label_pc_804f311, %dec_label_pc_804f31a, %dec_label_pc_804f323, %dec_label_pc_804f32c, %dec_label_pc_804f335, %dec_label_pc_804f33e, %dec_label_pc_804f347, %dec_label_pc_804f350, %dec_label_pc_804f359, %dec_label_pc_804f362, %dec_label_pc_804f51a, %dec_label_pc_804f539, %dec_label_pc_804f2f4, %dec_label_pc_804f54b
  br label %dec_label_pc_804f4b0

dec_label_pc_804f4b0:                             ; preds = %dec_label_pc_804f503, %dec_label_pc_804f4ec, %dec_label_pc_804f4de, %dec_label_pc_804f4d9, %dec_label_pc_804f4d2, %dec_label_pc_804f4ce, %dec_label_pc_804f4ca, %dec_label_pc_804f4b0, %dec_label_pc_804f4b0.preheader
  %v0_804f4b0 = call i32 @function_804eaf0()
  store i32 %v0_804f4b0, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_804f4b0, 65536
  %v1_804f4b5 = sdiv i32 %sext, 65536
  %v2_804f4bb = urem i32 %v0_804f4b0, 256
  %v3_804f4bb = load i32, i32* @ecx, align 4
  %v4_804f4bb = and i32 %v3_804f4bb, -256
  %v5_804f4bb = or i32 %v4_804f4bb, %v2_804f4bb
  store i32 %v5_804f4bb, i32* @ecx, align 4
  %v2_804f4bd = udiv i32 %v1_804f4b5, 256
  store i32 %v2_804f4bd, i32* @ebx, align 4
  %v2_804f4c0 = udiv i32 %v1_804f4b5, 65536
  store i32 %v2_804f4c0, i32* @edx, align 4
  %v2_804f4c3 = udiv i32 %v1_804f4b5, 16777216
  store i32 %v2_804f4c3, i32* @edi, align 4
  %v2_804f4c6 = trunc i32 %v0_804f4b0 to i8
  %v11_804f4c6 = icmp eq i8 %v2_804f4c6, 127
  br i1 %v11_804f4c6, label %dec_label_pc_804f4b0, label %dec_label_pc_804f4ca

dec_label_pc_804f4ca:                             ; preds = %dec_label_pc_804f4b0
  %v6_804f4ca = icmp eq i8 %v2_804f4c6, 0
  br i1 %v6_804f4ca, label %dec_label_pc_804f4b0, label %dec_label_pc_804f4ce

dec_label_pc_804f4ce:                             ; preds = %dec_label_pc_804f4ca
  %v11_804f4ce = icmp eq i8 %v2_804f4c6, 3
  br i1 %v11_804f4ce, label %dec_label_pc_804f4b0, label %dec_label_pc_804f4d2

dec_label_pc_804f4d2:                             ; preds = %dec_label_pc_804f4ce
  %v2_804f4d2 = add nsw i32 %v1_804f4b5, -15
  store i32 %v2_804f4d2, i32* %eax.global-to-local, align 4
  %v1_804f4d5 = trunc i32 %v2_804f4d2 to i8
  %tmp258 = or i8 %v1_804f4d5, 1
  %tmp259 = icmp eq i8 %tmp258, 1
  br i1 %tmp259, label %dec_label_pc_804f4b0, label %dec_label_pc_804f4d9

dec_label_pc_804f4d9:                             ; preds = %dec_label_pc_804f4d2
  %v10_804f4d9 = icmp eq i8 %v2_804f4c6, 56
  br i1 %v10_804f4d9, label %dec_label_pc_804f4b0, label %dec_label_pc_804f4de

dec_label_pc_804f4de:                             ; preds = %dec_label_pc_804f4d9
  %v10_804f4de = icmp eq i8 %v2_804f4c6, 10
  br i1 %v10_804f4de, label %dec_label_pc_804f4b0, label %dec_label_pc_804f4e3

dec_label_pc_804f4e3:                             ; preds = %dec_label_pc_804f4de
  %v8_804f4e3 = icmp eq i8 %v2_804f4c6, -64
  %v1_804f4e6 = icmp eq i1 %v8_804f4e3, false
  br i1 %v1_804f4e6, label %dec_label_pc_804f2d0, label %dec_label_pc_804f4ec

dec_label_pc_804f4ec:                             ; preds = %dec_label_pc_804f4e3
  %v1_804f4ec = trunc i32 %v2_804f4bd to i8
  %v11_804f4ec = icmp eq i8 %v1_804f4ec, -88
  br i1 %v11_804f4ec, label %dec_label_pc_804f4b0, label %dec_label_pc_804f4f1

dec_label_pc_804f4f1:                             ; preds = %dec_label_pc_804f4ec
  %v10_804f4f1 = icmp eq i8 %v2_804f4c6, 100
  %v1_804f4f4 = icmp eq i1 %v10_804f4f1, false
  br i1 %v1_804f4f4, label %dec_label_pc_804f2e2, label %dec_label_pc_804f4fa

dec_label_pc_804f4fa:                             ; preds = %dec_label_pc_804f2d9.dec_label_pc_804f4fa_crit_edge, %dec_label_pc_804f4f1
  %v1_804f4fa.pre-phi = phi i8 [ %.pre, %dec_label_pc_804f2d9.dec_label_pc_804f4fa_crit_edge ], [ %v1_804f4ec, %dec_label_pc_804f4f1 ]
  %tmp260 = icmp ult i8 %v1_804f4fa.pre-phi, 64
  br i1 %tmp260, label %dec_label_pc_804f2fd, label %dec_label_pc_804f503

dec_label_pc_804f503:                             ; preds = %dec_label_pc_804f4fa
  %tmp261 = icmp ult i8 %v1_804f4fa.pre-phi, 127
  br i1 %tmp261, label %dec_label_pc_804f4b0, label %dec_label_pc_804f508

dec_label_pc_804f508:                             ; preds = %dec_label_pc_804f503
  %v11_804f508 = icmp eq i8 %v2_804f4c6, -58
  %v1_804f50b = icmp eq i1 %v11_804f508, false
  br i1 %v1_804f50b, label %dec_label_pc_804f2f4, label %dec_label_pc_804f511

dec_label_pc_804f511:                             ; preds = %dec_label_pc_804f508, %dec_label_pc_804f2eb
  %v0_804f51a = phi i32 [ %v2_804f4bd, %dec_label_pc_804f508 ], [ %v0_804f37366, %dec_label_pc_804f2eb ]
  %v0_804f2fd62 = phi i32 [ %v5_804f4bb, %dec_label_pc_804f508 ], [ %v0_804f2eb, %dec_label_pc_804f2eb ]
  %v1_804f511 = trunc i32 %v0_804f51a to i8
  %tmp262 = icmp ult i8 %v1_804f511, 18
  br i1 %tmp262, label %dec_label_pc_804f2fd, label %dec_label_pc_804f51a

dec_label_pc_804f51a:                             ; preds = %dec_label_pc_804f511
  %tmp263 = or i8 %v1_804f511, 1
  %tmp264 = icmp eq i8 %tmp263, 19
  br i1 %tmp264, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f2fd

dec_label_pc_804f524:                             ; preds = %dec_label_pc_805039a
  store i32 0, i32* %v2_804f527, align 4
  %v1_804f529 = call i32 @function_8052fcd(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804f529, i32* %eax.global-to-local, align 4
  %v0_804f530.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804f530

dec_label_pc_804f530:                             ; preds = %dec_label_pc_804f2d0, %dec_label_pc_804f524
  %v0_804f539 = phi i32 [ %v0_804f530.pre, %dec_label_pc_804f524 ], [ %v2_804f4bd, %dec_label_pc_804f2d0 ]
  %v1_804f530 = trunc i32 %v0_804f539 to i8
  %tmp265 = icmp ult i8 %v1_804f530, 16
  br i1 %tmp265, label %dec_label_pc_804f530.dec_label_pc_804f2fd_crit_edge, label %dec_label_pc_804f539

dec_label_pc_804f530.dec_label_pc_804f2fd_crit_edge: ; preds = %dec_label_pc_804f530
  %v0_804f2fd.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804f2fd

dec_label_pc_804f539:                             ; preds = %dec_label_pc_804f530
  %tmp266 = icmp ult i8 %v1_804f530, 32
  br i1 %tmp266, label %dec_label_pc_804f4b0.preheader, label %dec_label_pc_804f542

dec_label_pc_804f542:                             ; preds = %dec_label_pc_804f539
  %v0_804f542 = load i32, i32* @ecx, align 4
  %v1_804f542 = trunc i32 %v0_804f542 to i8
  %v11_804f542 = icmp eq i8 %v1_804f542, -87
  %v1_804f545 = icmp eq i1 %v11_804f542, false
  br i1 %v1_804f545, label %dec_label_pc_804f2eb, label %dec_label_pc_804f54b

dec_label_pc_804f54b:                             ; preds = %dec_label_pc_804f542, %dec_label_pc_804f2e2
  %v0_804f2f473 = phi i32 [ %v0_804f542, %dec_label_pc_804f542 ], [ %v5_804f4bb, %dec_label_pc_804f2e2 ]
  %v0_804f54b = phi i32 [ %v0_804f539, %dec_label_pc_804f542 ], [ %v2_804f4bd, %dec_label_pc_804f2e2 ]
  %v1_804f54b = trunc i32 %v0_804f54b to i8
  %v11_804f54b = icmp eq i8 %v1_804f54b, -1
  %v1_804f54e = icmp eq i1 %v11_804f54b, false
  br i1 %v1_804f54e, label %dec_label_pc_804f2f4, label %dec_label_pc_804f4b0.preheader

dec_label_pc_804f567:                             ; preds = %dec_label_pc_804f36b
  %v0_804f567 = load i32, i32* @esi, align 4
  %v2_804f567 = add i32 %v0_804f460, 48
  %v3_804f567 = inttoptr i32 %v2_804f567 to i32*
  store i32 %v0_804f567, i32* %v3_804f567, align 4
  br label %dec_label_pc_804f56b

dec_label_pc_804f56b:                             ; preds = %.loopexit, %dec_label_pc_804f567
  %v1_804f56b = call i32 @function_8051afd(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804f56b, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_804f572 = load i32, i32* @esp, align 4
  %v2_804f572 = add i32 %v1_804f572, 24
  %v3_804f572 = inttoptr i32 %v2_804f572 to i32*
  store i32 %v1_804f56b, i32* %v3_804f572, align 4
  br label %dec_label_pc_804f576

dec_label_pc_804f576:                             ; preds = %dec_label_pc_804f613, %dec_label_pc_804f60b, %dec_label_pc_804f603, %dec_label_pc_804f5fb, %dec_label_pc_804f5ef, %dec_label_pc_804f5e3, %dec_label_pc_804f5dc, %dec_label_pc_804f5ca, %dec_label_pc_804f5be, %dec_label_pc_804f5b9, %dec_label_pc_804f675, %dec_label_pc_804f56b
  %v0_804f576 = load i32, i32* @esp, align 4
  %v1_804f576 = add i32 %v0_804f576, 24
  %v2_804f576 = inttoptr i32 %v1_804f576 to i32*
  %v3_804f576 = load i32, i32* %v2_804f576, align 4
  store i32 %v3_804f576, i32* %eax.global-to-local, align 4
  %v1_804f57a = inttoptr i32 %v3_804f576 to i32*
  store i32 0, i32* %v1_804f57a, align 4
  %v0_804f580 = load i32, i32* @edi, align 4
  %v1_804f580 = load i32, i32* @esp, align 4
  %v2_804f580 = add i32 %v1_804f580, -4
  %v3_804f580 = inttoptr i32 %v2_804f580 to i32*
  store i32 %v0_804f580, i32* %v3_804f580, align 4
  %v0_804f581 = load i32, i32* @edi, align 4
  %v2_804f581 = add i32 %v1_804f580, -8
  %v3_804f581 = inttoptr i32 %v2_804f581 to i32*
  store i32 %v0_804f581, i32* %v3_804f581, align 4
  %v1_804f582 = add i32 %v1_804f580, -12
  %v2_804f582 = inttoptr i32 %v1_804f582 to i32*
  store i32 0, i32* %v2_804f582, align 4
  %v1_804f584 = add i32 %v1_804f580, -16
  %v2_804f584 = inttoptr i32 %v1_804f584 to i32*
  store i32 0, i32* %v2_804f584, align 4
  %v1_804f586 = add i32 %v1_804f580, -20
  %v2_804f586 = inttoptr i32 %v1_804f586 to i32*
  store i32 16384, i32* %v2_804f586, align 4
  %v1_804f58b = add i32 %v1_804f580, -24
  %v2_804f58b = inttoptr i32 %v1_804f58b to i32*
  store i32 1514, i32* %v2_804f58b, align 4
  %v0_804f590 = load i32, i32* @global_var_8055178.32, align 8
  store i32 %v0_804f590, i32* %esi.global-to-local, align 4
  %v1_804f596 = add i32 %v1_804f580, 42
  store i32 %v1_804f596, i32* %edx.global-to-local, align 4
  %v2_804f59a = add i32 %v1_804f580, -28
  %v3_804f59a = inttoptr i32 %v2_804f59a to i32*
  store i32 %v1_804f596, i32* %v3_804f59a, align 4
  %v0_804f59b = load i32, i32* %esi.global-to-local, align 4
  %v2_804f59b = add i32 %v1_804f580, -32
  %v3_804f59b = inttoptr i32 %v2_804f59b to i32*
  store i32 %v0_804f59b, i32* %v3_804f59b, align 4
  %v0_804f59c = call i32 @function_8051ce0()
  store i32 %v0_804f59c, i32* %eax.global-to-local, align 4
  %v0_804f5a1 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_804f59c, 1
  br i1 %tmp, label %dec_label_pc_804f686, label %dec_label_pc_804f5ac

dec_label_pc_804f5ac:                             ; preds = %dec_label_pc_804f576
  %v1_804f5ac = add i32 %v0_804f5a1, 56
  %v2_804f5ac = inttoptr i32 %v1_804f5ac to i32*
  %v3_804f5ac = load i32, i32* %v2_804f5ac, align 4
  store i32 %v3_804f5ac, i32* %ecx.global-to-local, align 4
  %v1_804f5b0 = inttoptr i32 %v3_804f5ac to i32*
  %v2_804f5b0 = load i32, i32* %v1_804f5b0, align 4
  %v11_804f5b0 = icmp eq i32 %v2_804f5b0, 11
  br i1 %v11_804f5b0, label %dec_label_pc_804f686, label %dec_label_pc_804f5b9

dec_label_pc_804f5b9:                             ; preds = %dec_label_pc_804f5ac
  %tmp267 = icmp ult i32 %v0_804f59c, 40
  br i1 %tmp267, label %dec_label_pc_804f576, label %dec_label_pc_804f5be

dec_label_pc_804f5be:                             ; preds = %dec_label_pc_804f5b9
  %v1_804f5be = add i32 %v0_804f5a1, 90
  %v2_804f5be = inttoptr i32 %v1_804f5be to i32*
  %v3_804f5be = load i32, i32* %v2_804f5be, align 4
  store i32 %v3_804f5be, i32* %eax.global-to-local, align 4
  %v1_804f5c2 = load i32, i32* @global_var_805515c.34, align 4
  %v12_804f5c2 = icmp eq i32 %v3_804f5be, %v1_804f5c2
  %v1_804f5c8 = icmp eq i1 %v12_804f5c2, false
  br i1 %v1_804f5c8, label %dec_label_pc_804f576, label %dec_label_pc_804f5ca

dec_label_pc_804f5ca:                             ; preds = %dec_label_pc_804f5be
  %v1_804f5ca = add i32 %v0_804f5a1, 83
  %v2_804f5ca = inttoptr i32 %v1_804f5ca to i8*
  %v3_804f5ca = load i8, i8* %v2_804f5ca, align 1
  %v12_804f5ca = icmp eq i8 %v3_804f5ca, 6
  %v1_804f5cf = icmp eq i1 %v12_804f5ca, false
  br i1 %v1_804f5cf, label %dec_label_pc_804f576, label %dec_label_pc_804f5d1

dec_label_pc_804f5d1:                             ; preds = %dec_label_pc_804f5ca
  %v1_804f5d1 = add i32 %v0_804f5a1, 94
  %v2_804f5d1 = inttoptr i32 %v1_804f5d1 to i32*
  %v3_804f5d1 = load i32, i32* %v2_804f5d1, align 4
  store i32 %v3_804f5d1, i32* %esi.global-to-local, align 4
  %v1_804f5d5 = trunc i32 %v3_804f5d1 to i16
  %v7_804f5d5 = icmp eq i16 %v1_804f5d5, 5888
  br i1 %v7_804f5d5, label %dec_label_pc_804f5e3, label %dec_label_pc_804f5dc

dec_label_pc_804f5dc:                             ; preds = %dec_label_pc_804f5d1
  %v10_804f5dc = icmp eq i16 %v1_804f5d5, 4873
  %v1_804f5e1 = icmp eq i1 %v10_804f5dc, false
  br i1 %v1_804f5e1, label %dec_label_pc_804f576, label %dec_label_pc_804f5e3

dec_label_pc_804f5e3:                             ; preds = %dec_label_pc_804f5dc, %dec_label_pc_804f5d1
  %v1_804f5e3 = add i32 %v0_804f5a1, 46
  %v2_804f5e3 = inttoptr i32 %v1_804f5e3 to i16*
  %v3_804f5e3 = load i16, i16* %v2_804f5e3, align 2
  %v4_804f5e3 = zext i16 %v3_804f5e3 to i32
  %v6_804f5e3 = and i32 %v3_804f5be, -65536
  %v7_804f5e3 = or i32 %v4_804f5e3, %v6_804f5e3
  store i32 %v7_804f5e3, i32* %eax.global-to-local, align 4
  %v3_804f5e8 = add i32 %v0_804f5a1, 96
  %v4_804f5e8 = inttoptr i32 %v3_804f5e8 to i16*
  %v5_804f5e8 = load i16, i16* %v4_804f5e8, align 2
  %v16_804f5e8 = icmp eq i16 %v3_804f5e3, %v5_804f5e8
  %v1_804f5ed = icmp eq i1 %v16_804f5e8, false
  br i1 %v1_804f5ed, label %dec_label_pc_804f576, label %dec_label_pc_804f5ef

dec_label_pc_804f5ef:                             ; preds = %dec_label_pc_804f5e3
  %v1_804f5ef = add i32 %v0_804f5a1, 107
  %v2_804f5ef = inttoptr i32 %v1_804f5ef to i8*
  %v3_804f5ef = load i8, i8* %v2_804f5ef, align 1
  %v4_804f5ef = zext i8 %v3_804f5ef to i32
  %v6_804f5ef = and i32 %v7_804f5e3, -256
  %v7_804f5ef = or i32 %v4_804f5ef, %v6_804f5ef
  store i32 %v7_804f5ef, i32* %eax.global-to-local, align 4
  %v2_804f5f3 = and i8 %v3_804f5ef, 2
  %v3_804f5f3 = icmp eq i8 %v2_804f5f3, 0
  br i1 %v3_804f5f3, label %dec_label_pc_804f576, label %dec_label_pc_804f5fb

dec_label_pc_804f5fb:                             ; preds = %dec_label_pc_804f5ef
  %v2_804f5fb = and i32 %v4_804f5ef, 16
  %v3_804f5fb = icmp eq i32 %v2_804f5fb, 0
  br i1 %v3_804f5fb, label %dec_label_pc_804f576, label %dec_label_pc_804f603

dec_label_pc_804f603:                             ; preds = %dec_label_pc_804f5fb
  %v2_804f603 = and i32 %v4_804f5ef, 4
  %v3_804f603 = icmp eq i32 %v2_804f603, 0
  %v1_804f605 = icmp eq i1 %v3_804f603, false
  br i1 %v1_804f605, label %dec_label_pc_804f576, label %dec_label_pc_804f60b

dec_label_pc_804f60b:                             ; preds = %dec_label_pc_804f603
  %tmp274 = urem i8 %v3_804f5ef, 2
  %v3_804f60b = icmp eq i8 %tmp274, 0
  %v1_804f60d = icmp eq i1 %v3_804f60b, false
  br i1 %v1_804f60d, label %dec_label_pc_804f576, label %dec_label_pc_804f613

dec_label_pc_804f613:                             ; preds = %dec_label_pc_804f60b
  %v1_804f613 = add i32 %v0_804f5a1, 102
  %v2_804f613 = inttoptr i32 %v1_804f613 to i32*
  %v3_804f613 = load i32, i32* %v2_804f613, align 4
  %v1_804f617 = trunc i32 %v3_804f613 to i16
  %v2_804f617 = call i16 @llvm.bswap.i16(i16 %v1_804f617)
  %v3_804f617 = zext i16 %v2_804f617 to i32
  %v1_804f61b = udiv i32 %v3_804f613, 65536
  %v2_804f61b = mul nuw i32 %v3_804f617, 65536
  %v1_804f61e = trunc i32 %v1_804f61b to i16
  %v2_804f61e = call i16 @llvm.bswap.i16(i16 %v1_804f61e)
  %v3_804f61e = zext i16 %v2_804f61e to i32
  %v6_804f61e = or i32 %v3_804f61e, %v2_804f61b
  store i32 %v6_804f61e, i32* %eax.global-to-local, align 4
  %v1_804f622 = add i32 %v6_804f61e, -1
  %v1_804f625 = trunc i32 %v1_804f622 to i16
  %v2_804f625 = call i16 @llvm.bswap.i16(i16 %v1_804f625)
  %v3_804f625 = zext i16 %v2_804f625 to i32
  %v1_804f629 = udiv i32 %v1_804f622, 65536
  %v2_804f629 = mul nuw i32 %v3_804f625, 65536
  %v1_804f62c = trunc i32 %v1_804f629 to i16
  %v2_804f62c = call i16 @llvm.bswap.i16(i16 %v1_804f62c)
  %v3_804f62c = zext i16 %v2_804f62c to i32
  %v6_804f62c = or i32 %v3_804f62c, %v2_804f629
  store i32 %v6_804f62c, i32* %edx.global-to-local, align 4
  %v1_804f630 = add i32 %v0_804f5a1, 86
  %v2_804f630 = inttoptr i32 %v1_804f630 to i32*
  %v3_804f630 = load i32, i32* %v2_804f630, align 4
  %v15_804f630 = icmp eq i32 %v3_804f630, %v6_804f62c
  %v1_804f634 = icmp eq i1 %v15_804f630, false
  br i1 %v1_804f634, label %dec_label_pc_804f576, label %dec_label_pc_804f63a

dec_label_pc_804f63a:                             ; preds = %dec_label_pc_804f613
  %v0_804f63a = load i32, i32* @ebx, align 4
  %v1_804f63a = add i32 %v0_804f63a, -255
  %v6_804f63a = sub i32 254, %v0_804f63a
  %v7_804f63a = and i32 %v6_804f63a, %v0_804f63a
  %v8_804f63a = icmp slt i32 %v7_804f63a, 0
  %v9_804f63a = icmp eq i32 %v1_804f63a, 0
  %v10_804f63a = icmp slt i32 %v1_804f63a, 0
  %v3_804f640 = icmp eq i1 %v10_804f63a, %v8_804f63a
  %v4_804f640 = icmp eq i1 %v9_804f63a, false
  %v5_804f640 = and i1 %v4_804f640, %v3_804f640
  br i1 %v5_804f640, label %dec_label_pc_804f686, label %dec_label_pc_804f642

dec_label_pc_804f642:                             ; preds = %dec_label_pc_804f63a
  %v0_804f645 = load i32, i32* @global_var_8055174.36, align 4
  store i32 %v0_804f645, i32* %ecx.global-to-local, align 4
  %v2_804f64b = mul i32 %v0_804f63a, 288
  %v2_804f64e = add i32 %v0_804f645, %v2_804f64b
  store i32 %v2_804f64e, i32* @eax, align 4
  %v1_804f650 = add i32 %v2_804f64e, 12
  %v2_804f650 = inttoptr i32 %v1_804f650 to i32*
  %v3_804f650 = load i32, i32* %v2_804f650, align 4
  %v1_804f653 = add i32 %v2_804f64e, 288
  store i32 %v1_804f653, i32* %ecx.global-to-local, align 4
  %v1_804f659 = icmp eq i32 %v3_804f650, 0
  br i1 %v1_804f659, label %dec_label_pc_804f675, label %dec_label_pc_804f65d

dec_label_pc_804f65d:                             ; preds = %dec_label_pc_804f642, %dec_label_pc_804f666
  %v0_804f666 = phi i32 [ %v1_804f668, %dec_label_pc_804f666 ], [ %v1_804f653, %dec_label_pc_804f642 ]
  %v0_804f65d = phi i32 [ %v1_804f65d, %dec_label_pc_804f666 ], [ %v0_804f63a, %dec_label_pc_804f642 ]
  %v1_804f65d = add i32 %v0_804f65d, 1
  store i32 %v1_804f65d, i32* @ebx, align 4
  %v6_804f65e = icmp eq i32 %v0_804f65d, 255
  br i1 %v6_804f65e, label %dec_label_pc_804f686.loopexit, label %dec_label_pc_804f666

dec_label_pc_804f666:                             ; preds = %dec_label_pc_804f65d
  store i32 %v0_804f666, i32* @eax, align 4
  %v1_804f668 = add i32 %v0_804f666, 288
  store i32 %v1_804f668, i32* %ecx.global-to-local, align 4
  %v1_804f66e = add i32 %v0_804f666, 12
  %v2_804f66e = inttoptr i32 %v1_804f66e to i32*
  %v3_804f66e = load i32, i32* %v2_804f66e, align 4
  store i32 %v3_804f66e, i32* @edi, align 4
  %v1_804f671 = icmp eq i32 %v3_804f66e, 0
  %v1_804f673 = icmp eq i1 %v1_804f671, false
  br i1 %v1_804f673, label %dec_label_pc_804f65d, label %dec_label_pc_804f675.loopexit

dec_label_pc_804f675.loopexit:                    ; preds = %dec_label_pc_804f666
  br label %dec_label_pc_804f675

dec_label_pc_804f675:                             ; preds = %dec_label_pc_804f675.loopexit, %dec_label_pc_804f642
  %v1_804f675 = phi i32 [ %v0_804f666, %dec_label_pc_804f675.loopexit ], [ %v2_804f64e, %dec_label_pc_804f642 ]
  %v2_804f675 = add i32 %v1_804f675, 16
  %v3_804f675 = inttoptr i32 %v2_804f675 to i32*
  store i32 %v6_804f62c, i32* %v3_804f675, align 4
  %v0_804f678 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f678 = trunc i32 %v0_804f678 to i16
  %v2_804f678 = load i32, i32* @eax, align 4
  %v3_804f678 = add i32 %v2_804f678, 20
  %v4_804f678 = inttoptr i32 %v3_804f678 to i16*
  store i16 %v1_804f678, i16* %v4_804f678, align 2
  %v0_804f67c = call i32 @function_804ec50()
  store i32 %v0_804f67c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f576

dec_label_pc_804f686.loopexit:                    ; preds = %dec_label_pc_804f65d
  br label %dec_label_pc_804f686

dec_label_pc_804f686:                             ; preds = %dec_label_pc_804f63a, %dec_label_pc_804f5ac, %dec_label_pc_804f576, %dec_label_pc_804f686.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_804f68f = add i32 %v0_804f5a1, 36
  %v2_804f68f = inttoptr i32 %v1_804f68f to i32*
  %v3_804f68f = load i32, i32* %v2_804f68f, align 4
  %v4_804f68f = inttoptr i32 %v3_804f68f to i8*
  %v5_804f694 = call i8* @_memset(i8* %v4_804f68f, i32 0, i32 32)
  %v0_804f696 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804f696, i32* %ecx.global-to-local, align 4
  %v0_804f698 = load i32, i32* @esp, align 4
  %v1_804f698 = inttoptr i32 %v0_804f698 to i32*
  %v2_804f698 = load i32, i32* %v1_804f698, align 4
  %v3_804f698 = inttoptr i32 %v2_804f698 to i8*
  %v2_804f69c = load i32, i32* %eax.global-to-local, align 4
  %v5_804f69c = call i8* @_memset(i8* %v3_804f698, i32 %v2_804f69c, i32 %v0_804f696)
  %v6_804f69c = ptrtoint i8* %v5_804f69c to i32
  store i32 %v6_804f69c, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_804f6a0 = load i32, i32* @esp, align 4
  %v1_804f6a0 = add i32 %v0_804f6a0, 1856
  %v2_804f6a0 = inttoptr i32 %v1_804f6a0 to i32*
  store i32 0, i32* %v2_804f6a0, align 4
  store i32 0, i32* @esi, align 4
  %v0_804f6ad.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f6ad

dec_label_pc_804f6ad:                             ; preds = %dec_label_pc_804f700, %dec_label_pc_804f686
  %v0_804f6ad = phi i32 [ %v0_804f70f, %dec_label_pc_804f700 ], [ %v0_804f6ad.pre, %dec_label_pc_804f686 ]
  %v0_804f6b0 = load i32, i32* @global_var_8055174.36, align 4
  store i32 %v0_804f6b0, i32* %eax.global-to-local, align 4
  %v2_804f6b5 = mul i32 %v0_804f6ad, 288
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_804f6bd = add i32 %v0_804f6b0, %v2_804f6b5
  store i32 %v2_804f6bd, i32* @ebx, align 4
  %v1_804f6bf = add i32 %v2_804f6bd, 12
  %v2_804f6bf = inttoptr i32 %v1_804f6bf to i32*
  %v3_804f6bf = load i32, i32* %v2_804f6bf, align 4
  store i32 %v3_804f6bf, i32* %edx.global-to-local, align 4
  %v1_804f6c2 = add i32 %v3_804f6bf, -1
  %v5_804f6c2 = icmp eq i32 %v3_804f6bf, 0
  %v9_804f6c2 = icmp eq i32 %v1_804f6c2, 0
  %v2_804f6c5 = or i1 %v5_804f6c2, %v9_804f6c2
  br i1 %v2_804f6c5, label %dec_label_pc_8050197, label %dec_label_pc_804f6cb

dec_label_pc_804f6cb:                             ; preds = %dec_label_pc_804f6ad, %dec_label_pc_805019f
  %v1_804f6d5 = phi i32 [ 30, %dec_label_pc_804f6ad ], [ 5, %dec_label_pc_805019f ]
  %v0_804f6cb = load i32, i32* @global_var_8055130.24, align 16
  store i32 %v0_804f6cb, i32* %eax.global-to-local, align 4
  %v1_804f6d0 = add i32 %v2_804f6bd, 8
  %v2_804f6d0 = inttoptr i32 %v1_804f6d0 to i32*
  %v3_804f6d0 = load i32, i32* %v2_804f6d0, align 4
  %v2_804f6d3 = sub i32 %v0_804f6cb, %v3_804f6d0
  store i32 %v2_804f6d3, i32* %eax.global-to-local, align 4
  %tmp268 = icmp ugt i32 %v2_804f6d3, %v1_804f6d5
  br i1 %tmp268, label %dec_label_pc_8050260, label %dec_label_pc_804f6dd

dec_label_pc_804f6dd:                             ; preds = %dec_label_pc_804f6cb
  store i32 %v1_804f6c2, i32* %edx.global-to-local, align 4
  %v1_80501a6 = add i32 %v2_804f6bd, 4
  %v2_80501a6 = inttoptr i32 %v1_80501a6 to i32*
  %v3_80501a6 = load i32, i32* %v2_80501a6, align 4
  %v1_80501ab = urem i32 %v3_80501a6, 32
  store i32 %v1_80501ab, i32* %eax.global-to-local, align 4
  %v2_80501ae = udiv i32 %v3_80501a6, 32
  store i32 %v2_80501ae, i32* %edx.global-to-local, align 4
  %v0_80501b1 = load i32, i32* @esp, align 4
  %v2_80501b1 = mul nuw nsw i32 %v2_80501ae, 4
  br i1 %v9_804f6c2, label %dec_label_pc_80501a6, label %dec_label_pc_804f6e4

dec_label_pc_804f6e4:                             ; preds = %dec_label_pc_804f6dd
  %v3_804f6ef = add nuw nsw i32 %v2_80501b1, 1684
  %v4_804f6ef = add i32 %v3_804f6ef, %v0_80501b1
  %v5_804f6ef = inttoptr i32 %v4_804f6ef to i32*
  %v6_804f6ef = load i32, i32* %v5_804f6ef, align 4
  %v9_804f6ef = shl i32 1, %v1_80501ab
  %v12_804f6ef = or i32 %v6_804f6ef, %v9_804f6ef
  store i32 %v12_804f6ef, i32* %v5_804f6ef, align 4
  %v0_804f6f7 = load i32, i32* @ebx, align 4
  %v1_804f6f7 = add i32 %v0_804f6f7, 4
  %v2_804f6f7 = inttoptr i32 %v1_804f6f7 to i32*
  %v3_804f6f7 = load i32, i32* %v2_804f6f7, align 4
  store i32 %v3_804f6f7, i32* %eax.global-to-local, align 4
  %v0_804f6fa = load i32, i32* @edi, align 4
  %v2_804f6fa = sub i32 %v0_804f6fa, %v3_804f6f7
  %v8_804f6fa = xor i32 %v0_804f6fa, %v3_804f6f7
  %v9_804f6fa = xor i32 %v2_804f6fa, %v0_804f6fa
  %v10_804f6fa = and i32 %v9_804f6fa, %v8_804f6fa
  %v11_804f6fa = icmp slt i32 %v10_804f6fa, 0
  %v13_804f6fa = icmp slt i32 %v2_804f6fa, 0
  %v2_804f6fc = icmp eq i1 %v13_804f6fa, %v11_804f6fa
  br i1 %v2_804f6fc, label %dec_label_pc_804f700, label %dec_label_pc_804f6fe

dec_label_pc_804f6fe:                             ; preds = %dec_label_pc_804f6e4
  store i32 %v3_804f6f7, i32* @edi, align 4
  br label %dec_label_pc_804f700

dec_label_pc_804f700:                             ; preds = %dec_label_pc_80501a6, %dec_label_pc_8050197, %dec_label_pc_804f6e4, %dec_label_pc_80502a0, %dec_label_pc_805028d, %dec_label_pc_80501c4, %dec_label_pc_804f6fe
  %v0_804f700 = load i32, i32* @esp, align 4
  %v1_804f700 = add i32 %v0_804f700, 1856
  %v2_804f700 = inttoptr i32 %v1_804f700 to i32*
  %v3_804f700 = load i32, i32* %v2_804f700, align 4
  %v1_804f707 = add i32 %v3_804f700, 1
  store i32 %v1_804f707, i32* %eax.global-to-local, align 4
  store i32 %v1_804f707, i32* %v2_804f700, align 4
  %v0_804f70f = load i32, i32* %eax.global-to-local, align 4
  %v1_804f70f = add i32 %v0_804f70f, -255
  %v6_804f70f = sub i32 254, %v0_804f70f
  %v7_804f70f = and i32 %v6_804f70f, %v0_804f70f
  %v8_804f70f = icmp slt i32 %v7_804f70f, 0
  %v9_804f70f = icmp eq i32 %v1_804f70f, 0
  %v10_804f70f = icmp slt i32 %v1_804f70f, 0
  %v3_804f714 = icmp ne i1 %v10_804f70f, %v8_804f70f
  %v4_804f714 = or i1 %v9_804f70f, %v3_804f714
  br i1 %v4_804f714, label %dec_label_pc_804f6ad, label %dec_label_pc_804f716

dec_label_pc_804f716:                             ; preds = %dec_label_pc_804f700
  %v0_804f716 = load i32, i32* @esp, align 4
  %v1_804f716 = add i32 %v0_804f716, 1844
  %v2_804f716 = inttoptr i32 %v1_804f716 to i32*
  store i32 0, i32* %v2_804f716, align 4
  %v0_804f721 = load i32, i32* @esp, align 4
  %v1_804f721 = add i32 %v0_804f721, 1840
  %v2_804f721 = inttoptr i32 %v1_804f721 to i32*
  store i32 1, i32* %v2_804f721, align 4
  %v0_804f72c = load i32, i32* @esp, align 4
  %v0_804f72f = load i32, i32* @edi, align 4
  %v1_804f72f = load i32, i32* @esi, align 4
  %v2_804f72f = sub i32 %v0_804f72f, %v1_804f72f
  %v8_804f72f = xor i32 %v1_804f72f, %v0_804f72f
  %v9_804f72f = xor i32 %v2_804f72f, %v0_804f72f
  %v10_804f72f = and i32 %v9_804f72f, %v8_804f72f
  %v11_804f72f = icmp slt i32 %v10_804f72f, 0
  %v13_804f72f = icmp slt i32 %v2_804f72f, 0
  %v1_804f731 = add i32 %v0_804f72c, 1840
  %v2_804f738 = add i32 %v0_804f72c, -16
  %v3_804f738 = inttoptr i32 %v2_804f738 to i32*
  store i32 %v1_804f731, i32* %v3_804f738, align 4
  %v1_804f739 = add i32 %v0_804f72c, -20
  %v2_804f739 = inttoptr i32 %v1_804f739 to i32*
  store i32 0, i32* %v2_804f739, align 4
  %v1_804f73b = add i32 %v0_804f72c, 1556
  store i32 %v1_804f73b, i32* %edx.global-to-local, align 4
  %v0_804f742 = load i32, i32* @edi, align 4
  store i32 %v0_804f742, i32* %eax.global-to-local, align 4
  %v2_804f744 = add i32 %v0_804f72c, -24
  %v3_804f744 = inttoptr i32 %v2_804f744 to i32*
  store i32 %v1_804f73b, i32* %v3_804f744, align 4
  %v1_804f745 = add i32 %v0_804f72c, 1684
  store i32 %v1_804f745, i32* %ecx.global-to-local, align 4
  %v2_804f74c = add i32 %v0_804f72c, -28
  %v3_804f74c = inttoptr i32 %v2_804f74c to i32*
  store i32 %v1_804f745, i32* %v3_804f74c, align 4
  %v2_804f74d = icmp eq i1 %v13_804f72f, %v11_804f72f
  br i1 %v2_804f74d, label %dec_label_pc_804f716.dec_label_pc_804f751_crit_edge, label %dec_label_pc_804f74f

dec_label_pc_804f716.dec_label_pc_804f751_crit_edge: ; preds = %dec_label_pc_804f716
  %v0_804f751.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f751

dec_label_pc_804f74f:                             ; preds = %dec_label_pc_804f716
  %v0_804f74f = load i32, i32* @esi, align 4
  store i32 %v0_804f74f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f751

dec_label_pc_804f751:                             ; preds = %dec_label_pc_804f716.dec_label_pc_804f751_crit_edge, %dec_label_pc_804f74f
  %v0_804f751 = phi i32 [ %v0_804f751.pre, %dec_label_pc_804f716.dec_label_pc_804f751_crit_edge ], [ %v0_804f74f, %dec_label_pc_804f74f ]
  %v1_804f751 = add i32 %v0_804f751, 1
  store i32 %v1_804f751, i32* %eax.global-to-local, align 4
  %v2_804f752 = add i32 %v0_804f72c, -32
  %v3_804f752 = inttoptr i32 %v2_804f752 to i32*
  store i32 %v1_804f751, i32* %v3_804f752, align 4
  %v0_804f753 = call i32 @function_80517fa()
  store i32 %v0_804f753, i32* %eax.global-to-local, align 4
  %v0_804f758 = load i32, i32* @esp, align 4
  %v1_804f75b = add i32 %v0_804f758, 16
  %v2_804f75b = inttoptr i32 %v1_804f75b to i32*
  store i32 0, i32* %v2_804f75b, align 4
  %v0_804f75d = call i32 @function_80518b4()
  %v0_804f762 = load i32, i32* @esp, align 4
  %v1_804f762 = add i32 %v0_804f762, 1872
  %v2_804f762 = inttoptr i32 %v1_804f762 to i32*
  store i32 0, i32* %v2_804f762, align 4
  store i32 %v0_804f75d, i32* @global_var_8055130.24, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f793

dec_label_pc_804f779:                             ; preds = %dec_label_pc_804f7dc.backedge, %dec_label_pc_804f7dc.preheader, %dec_label_pc_804fe15, %dec_label_pc_804f7c5, %dec_label_pc_804f793, %dec_label_pc_805036c, %dec_label_pc_8050312, %dec_label_pc_804fe4d
  %v0_804f779 = load i32, i32* @esp, align 4
  %v1_804f779 = add i32 %v0_804f779, 1856
  %v2_804f779 = inttoptr i32 %v1_804f779 to i32*
  %v3_804f779 = load i32, i32* %v2_804f779, align 4
  %v1_804f780 = add i32 %v3_804f779, 1
  store i32 %v1_804f780, i32* %eax.global-to-local, align 4
  store i32 %v1_804f780, i32* %v2_804f779, align 4
  %v0_804f788 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f788 = add i32 %v0_804f788, -255
  %v6_804f788 = sub i32 254, %v0_804f788
  %v7_804f788 = and i32 %v6_804f788, %v0_804f788
  %v8_804f788 = icmp slt i32 %v7_804f788, 0
  %v9_804f788 = icmp eq i32 %v1_804f788, 0
  %v10_804f788 = icmp slt i32 %v1_804f788, 0
  %v3_804f78d = icmp eq i1 %v10_804f788, %v8_804f788
  %v4_804f78d = icmp eq i1 %v9_804f788, false
  %v5_804f78d = and i1 %v4_804f78d, %v3_804f78d
  br i1 %v5_804f78d, label %.loopexit, label %dec_label_pc_804f793

dec_label_pc_804f793:                             ; preds = %dec_label_pc_804f779, %dec_label_pc_804f751
  %v0_804f793 = phi i32 [ %v0_804f788, %dec_label_pc_804f779 ], [ 0, %dec_label_pc_804f751 ]
  %v0_804f796 = load i32, i32* @global_var_8055174.36, align 4
  store i32 %v0_804f796, i32* %eax.global-to-local, align 4
  %v2_804f79b = mul i32 %v0_804f793, 288
  %v2_804f79e = add i32 %v0_804f796, %v2_804f79b
  store i32 %v2_804f79e, i32* @edi, align 4
  %v1_804f7a0 = add i32 %v2_804f79e, 4
  %v2_804f7a0 = inttoptr i32 %v1_804f7a0 to i32*
  %v3_804f7a0 = load i32, i32* %v2_804f7a0, align 4
  store i32 %v3_804f7a0, i32* %ecx.global-to-local, align 4
  %v10_804f7a3 = icmp eq i32 %v3_804f7a0, -1
  br i1 %v10_804f7a3, label %dec_label_pc_804f779, label %dec_label_pc_804f7a8

dec_label_pc_804f7a8:                             ; preds = %dec_label_pc_804f793
  %v2_804f7ac = udiv i32 %v3_804f7a0, 32
  store i32 %v2_804f7ac, i32* %edx.global-to-local, align 4
  %v1_804f7af = urem i32 %v3_804f7a0, 32
  store i32 %v1_804f7af, i32* %eax.global-to-local, align 4
  %v0_804f7b2 = load i32, i32* @esp, align 4
  %v2_804f7b2 = mul nuw nsw i32 %v2_804f7ac, 4
  %v3_804f7b2 = add nuw nsw i32 %v2_804f7b2, 1556
  %v4_804f7b2 = add i32 %v3_804f7b2, %v0_804f7b2
  %v5_804f7b2 = inttoptr i32 %v4_804f7b2 to i32*
  %v6_804f7b2 = load i32, i32* %v5_804f7b2, align 4
  %v9_804f7b2 = shl i32 1, %v1_804f7af
  %v10_804f7b2 = and i32 %v6_804f7b2, %v9_804f7b2
  %v11_804f7b2 = icmp ne i32 %v10_804f7b2, 0
  %v1_804f7ba = zext i1 %v11_804f7b2 to i32
  store i32 %v1_804f7ba, i32* %eax.global-to-local, align 4
  %v4_804f7bd = icmp eq i1 %v11_804f7b2, false
  %v1_804f7bf = icmp eq i1 %v4_804f7bd, false
  br i1 %v1_804f7bf, label %dec_label_pc_80501d0, label %dec_label_pc_804f7c5

dec_label_pc_804f7c5:                             ; preds = %dec_label_pc_804f7a8, %dec_label_pc_80502b5
  %v0_804f7cd = phi i32 [ %v0_804f7b2, %dec_label_pc_804f7a8 ], [ %v0_804f7cd.pre, %dec_label_pc_80502b5 ]
  %v0_804f7c5 = phi i32 [ %v3_804f7a0, %dec_label_pc_804f7a8 ], [ %v0_804f7c5.pre, %dec_label_pc_80502b5 ]
  %v2_804f7c7 = udiv i32 %v0_804f7c5, 32
  store i32 %v2_804f7c7, i32* %ecx.global-to-local, align 4
  %v1_804f7ca = urem i32 %v0_804f7c5, 32
  store i32 %v1_804f7ca, i32* %eax.global-to-local, align 4
  %v2_804f7cd = mul nuw nsw i32 %v2_804f7c7, 4
  %v3_804f7cd = add i32 %v0_804f7cd, 1684
  %v4_804f7cd = add i32 %v3_804f7cd, %v2_804f7cd
  %v5_804f7cd = inttoptr i32 %v4_804f7cd to i32*
  %v6_804f7cd = load i32, i32* %v5_804f7cd, align 4
  %v9_804f7cd = shl i32 1, %v1_804f7ca
  %v10_804f7cd = and i32 %v6_804f7cd, %v9_804f7cd
  %v11_804f7cd = icmp ne i32 %v10_804f7cd, 0
  %v1_804f7d5 = zext i1 %v11_804f7cd to i32
  store i32 %v1_804f7d5, i32* %eax.global-to-local, align 4
  %v4_804f7d8 = icmp eq i1 %v11_804f7cd, false
  br i1 %v4_804f7d8, label %dec_label_pc_804f779, label %dec_label_pc_804f7dc.preheader

dec_label_pc_804f7dc.preheader:                   ; preds = %dec_label_pc_804f7c5
  %v0_804f7dc26 = load i32, i32* @edi, align 4
  %v1_804f7dc27 = add i32 %v0_804f7dc26, 12
  %v2_804f7dc28 = inttoptr i32 %v1_804f7dc27 to i32*
  %v3_804f7dc29 = load i32, i32* %v2_804f7dc28, align 4
  store i32 %v3_804f7dc29, i32* %eax.global-to-local, align 4
  %v1_804f7df30 = icmp eq i32 %v3_804f7dc29, 0
  br i1 %v1_804f7df30, label %dec_label_pc_804f779, label %dec_label_pc_804f7e3

dec_label_pc_804f7e3:                             ; preds = %dec_label_pc_804f7dc.preheader, %dec_label_pc_804f7dc.backedge.dec_label_pc_804f7e3_crit_edge
  %v1_804f7e6 = phi i32 [ %v1_804f7e6.pre, %dec_label_pc_804f7dc.backedge.dec_label_pc_804f7e3_crit_edge ], [ %v0_804f7cd, %dec_label_pc_804f7dc.preheader ]
  %v0_804f7e3 = phi i32 [ %v0_804f7dc, %dec_label_pc_804f7dc.backedge.dec_label_pc_804f7e3_crit_edge ], [ %v0_804f7dc26, %dec_label_pc_804f7dc.preheader ]
  %v1_804f7e3 = add i32 %v0_804f7e3, 28
  store i32 %v1_804f7e3, i32* %eax.global-to-local, align 4
  %v2_804f7e6 = add i32 %v1_804f7e6, 8
  %v3_804f7e6 = inttoptr i32 %v2_804f7e6 to i32*
  store i32 %v1_804f7e3, i32* %v3_804f7e6, align 4
  %v0_804f7ea = load i32, i32* @edi, align 4
  %v1_804f7ea = add i32 %v0_804f7ea, 24
  %v2_804f7ea = inttoptr i32 %v1_804f7ea to i32*
  %v3_804f7ea = load i32, i32* %v2_804f7ea, align 4
  %v9_804f7ea = icmp eq i32 %v3_804f7ea, 256
  br i1 %v9_804f7ea, label %dec_label_pc_804fe69, label %dec_label_pc_804f7f7

dec_label_pc_804f7f7:                             ; preds = %dec_label_pc_804f7e3, %dec_label_pc_804fe69
  %v0_804f7f7 = load i32, i32* @esp, align 4
  %v1_804f7f7 = add i32 %v0_804f7f7, 24
  %v2_804f7f7 = inttoptr i32 %v1_804f7f7 to i32*
  %v3_804f7f7 = load i32, i32* %v2_804f7f7, align 4
  store i32 %v3_804f7f7, i32* %ecx.global-to-local, align 4
  %v1_804f7fb = add i32 %v0_804f7f7, 8
  %v2_804f7fb = inttoptr i32 %v1_804f7fb to i32*
  %v3_804f7fb = load i32, i32* %v2_804f7fb, align 4
  store i32 %v3_804f7fb, i32* %ebx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v1_804f804 = inttoptr i32 %v3_804f7f7 to i32*
  store i32 0, i32* %v1_804f804, align 4
  %v0_804f80a = load i32, i32* @edi, align 4
  %v1_804f80a = add i32 %v0_804f80a, 24
  %v2_804f80a = inttoptr i32 %v1_804f80a to i32*
  %v3_804f80a = load i32, i32* %v2_804f80a, align 4
  store i32 %v3_804f80a, i32* %edx.global-to-local, align 4
  %v0_804f80d = load i32, i32* @esp, align 4
  %v1_804f80d = add i32 %v0_804f80d, -4
  %v2_804f80d = inttoptr i32 %v1_804f80d to i32*
  store i32 16384, i32* %v2_804f80d, align 4
  %v0_804f812 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f812 = load i32, i32* %edx.global-to-local, align 4
  %v2_804f812 = add i32 %v1_804f812, %v0_804f812
  store i32 %v2_804f812, i32* @ebx, align 4
  %v0_804f814 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f814 = sub i32 %v0_804f814, %v1_804f812
  store i32 %v2_804f814, i32* %eax.global-to-local, align 4
  %v2_804f816 = add i32 %v0_804f80d, -8
  %v3_804f816 = inttoptr i32 %v2_804f816 to i32*
  store i32 %v2_804f814, i32* %v3_804f816, align 4
  %v0_804f817 = load i32, i32* @ebx, align 4
  %v2_804f817 = add i32 %v0_804f80d, -12
  %v3_804f817 = inttoptr i32 %v2_804f817 to i32*
  store i32 %v0_804f817, i32* %v3_804f817, align 4
  %v0_804f818 = load i32, i32* @edi, align 4
  %v1_804f818 = add i32 %v0_804f818, 4
  %v2_804f818 = inttoptr i32 %v1_804f818 to i32*
  %v3_804f818 = load i32, i32* %v2_804f818, align 4
  %v2_804f81b = add i32 %v0_804f80d, -16
  %v3_804f81b = inttoptr i32 %v2_804f81b to i32*
  store i32 %v3_804f818, i32* %v3_804f81b, align 4
  %v0_804f81c = call i32 @function_8051cad()
  store i32 %v0_804f81c, i32* %eax.global-to-local, align 4
  %v0_804f821 = load i32, i32* @esp, align 4
  %v1_804f821 = add i32 %v0_804f821, 16
  %tmp131 = icmp slt i32 %v0_804f81c, 1
  br i1 %tmp131, label %dec_label_pc_804fe06, label %dec_label_pc_804f82d

dec_label_pc_804f82d:                             ; preds = %dec_label_pc_804f7f7
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_804f82f

dec_label_pc_804f82f:                             ; preds = %dec_label_pc_804f839, %dec_label_pc_804f82d
  %v0_804f835 = phi i32 [ %v1_804f839, %dec_label_pc_804f839 ], [ 0, %dec_label_pc_804f82d ]
  %v1_804f82f = load i32, i32* @ebx, align 4
  %v2_804f82f = add i32 %v1_804f82f, %v0_804f835
  %v3_804f82f = inttoptr i32 %v2_804f82f to i8*
  %v4_804f82f = load i8, i8* %v3_804f82f, align 1
  %v5_804f82f = icmp eq i8 %v4_804f82f, 0
  %v1_804f833 = icmp eq i1 %v5_804f82f, false
  br i1 %v1_804f833, label %dec_label_pc_804f839, label %dec_label_pc_804f835

dec_label_pc_804f835:                             ; preds = %dec_label_pc_804f82f
  store i8 65, i8* %v3_804f82f, align 1
  %v0_804f839.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804f839

dec_label_pc_804f839:                             ; preds = %dec_label_pc_804f82f, %dec_label_pc_804f835
  %v0_804f839 = phi i32 [ %v0_804f835, %dec_label_pc_804f82f ], [ %v0_804f839.pre, %dec_label_pc_804f835 ]
  %v1_804f839 = add i32 %v0_804f839, 1
  store i32 %v1_804f839, i32* @edx, align 4
  %v12_804f83a = icmp eq i32 %v0_804f81c, %v1_804f839
  %v1_804f83c = icmp eq i1 %v12_804f83a, false
  br i1 %v1_804f83c, label %dec_label_pc_804f82f, label %dec_label_pc_804f83e

dec_label_pc_804f83e:                             ; preds = %dec_label_pc_804f839, %dec_label_pc_804fe0c
  %v0_804f83e = load i32, i32* @edi, align 4
  %v1_804f83e = add i32 %v0_804f83e, 24
  %v2_804f83e = inttoptr i32 %v1_804f83e to i32*
  %v3_804f83e = load i32, i32* %v2_804f83e, align 4
  %v2_804f841 = add i32 %v3_804f83e, %v0_804f81c
  store i32 %v2_804f841, i32* @ebx, align 4
  %v0_804f843 = load i32, i32* @global_var_8055130.24, align 16
  store i32 %v0_804f843, i32* %eax.global-to-local, align 4
  store i32 %v2_804f841, i32* %v2_804f83e, align 4
  %v0_804f84b = load i32, i32* %eax.global-to-local, align 4
  %v1_804f84b = load i32, i32* @edi, align 4
  %v2_804f84b = add i32 %v1_804f84b, 8
  %v3_804f84b = inttoptr i32 %v2_804f84b to i32*
  store i32 %v0_804f84b, i32* %v3_804f84b, align 4
  br label %dec_label_pc_804f84e

dec_label_pc_804f84e:                             ; preds = %dec_label_pc_804fc28, %dec_label_pc_804f83e
  %v0_804f84e = load i32, i32* @edi, align 4
  %v1_804f84e = add i32 %v0_804f84e, 12
  %v2_804f84e = inttoptr i32 %v1_804f84e to i32*
  %v3_804f84e = load i32, i32* %v2_804f84e, align 4
  store i32 %v3_804f84e, i32* %eax.global-to-local, align 4
  switch i32 %v3_804f84e, label %dec_label_pc_804f7dc.backedge [
    i32 2, label %dec_label_pc_804f85e
    i32 3, label %dec_label_pc_804f8f1
    i32 4, label %dec_label_pc_804f9c0
    i32 5, label %dec_label_pc_804fa57
    i32 6, label %dec_label_pc_804fae5
    i32 7, label %dec_label_pc_804fc48
    i32 8, label %dec_label_pc_804faa0
    i32 9, label %dec_label_pc_804fc90
    i32 10, label %dec_label_pc_804fb9c
  ]

dec_label_pc_804f85e:                             ; preds = %dec_label_pc_804f84e
  %v0_804f85e = load i32, i32* @esp, align 4
  %v1_804f85e = add i32 %v0_804f85e, 8
  %v2_804f85e = inttoptr i32 %v1_804f85e to i32*
  %v3_804f85e = load i32, i32* %v2_804f85e, align 4
  store i32 %v3_804f85e, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_804f864 = add i32 %v0_804f84e, 24
  %v2_804f864 = inttoptr i32 %v1_804f864 to i32*
  %v3_804f864 = load i32, i32* %v2_804f864, align 4
  store i32 %v3_804f864, i32* %edx.global-to-local, align 4
  %v2_804f86717 = sub i32 0, %v3_804f864
  %v10_804f86721 = and i32 %v3_804f864, %v2_804f86717
  %v11_804f86722 = icmp slt i32 %v10_804f86721, 0
  %v13_804f86724 = icmp slt i32 %v2_804f86717, 0
  %v2_804f86925 = icmp eq i1 %v13_804f86724, %v11_804f86722
  br i1 %v2_804f86925, label %dec_label_pc_804fdf9.thread, label %dec_label_pc_804f86b.preheader

dec_label_pc_804fdf9.thread:                      ; preds = %dec_label_pc_804f85e
  br label %dec_label_pc_804f7dc.backedge

dec_label_pc_804f86b.preheader:                   ; preds = %dec_label_pc_804f85e, %dec_label_pc_804f867.backedge
  %v0_804f8e5122 = phi i32 [ %v0_804f8e5124, %dec_label_pc_804f867.backedge ], [ %v0_804f84e, %dec_label_pc_804f85e ]
  %v0_804fd4a115 = phi i32 [ %v0_804f867, %dec_label_pc_804f867.backedge ], [ 0, %dec_label_pc_804f85e ]
  %v5_804f87d108 = phi i32 [ %v5_804f87d109, %dec_label_pc_804f867.backedge ], [ 2, %dec_label_pc_804f85e ]
  %v1_804f877106 = phi i32 [ %v1_804f867, %dec_label_pc_804f867.backedge ], [ %v3_804f864, %dec_label_pc_804f85e ]
  %v0_804f870103 = phi i32 [ %v0_804f870104, %dec_label_pc_804f867.backedge ], [ %v0_804f85e, %dec_label_pc_804f85e ]
  br label %dec_label_pc_804f86b

dec_label_pc_804f86b:                             ; preds = %dec_label_pc_804f86b.preheader, %dec_label_pc_804f8bc
  %v0_804f8e5125 = phi i32 [ %v0_804f8e5122, %dec_label_pc_804f86b.preheader ], [ %v0_804f8d3, %dec_label_pc_804f8bc ]
  %v0_804fd4a = phi i32 [ %v0_804fd4a115, %dec_label_pc_804f86b.preheader ], [ %v0_804f8d9, %dec_label_pc_804f8bc ]
  %v5_804f87d = phi i32 [ %v5_804f87d108, %dec_label_pc_804f86b.preheader ], [ %v0_804f8ce, %dec_label_pc_804f8bc ]
  %v1_804f877 = phi i32 [ %v1_804f877106, %dec_label_pc_804f86b.preheader ], [ %v3_804f8d3, %dec_label_pc_804f8bc ]
  %v0_804fd69 = phi i32 [ %v0_804f870103, %dec_label_pc_804f86b.preheader ], [ %v1_804f8d6, %dec_label_pc_804f8bc ]
  %v0_804f86b = load i32, i32* @ebx, align 4
  %v1_804f86b = inttoptr i32 %v0_804f86b to i8*
  %v2_804f86b = load i8, i8* %v1_804f86b, align 1
  %v12_804f86b = icmp eq i8 %v2_804f86b, -1
  %v1_804f86e = icmp eq i1 %v12_804f86b, false
  br i1 %v1_804f86e, label %dec_label_pc_804f8dd, label %dec_label_pc_804f870

dec_label_pc_804f870:                             ; preds = %dec_label_pc_804f86b
  %v1_804f870 = add i32 %v0_804fd69, 8
  %v2_804f870 = inttoptr i32 %v1_804f870 to i32*
  %v3_804f870 = load i32, i32* %v2_804f870, align 4
  %v1_804f874 = add i32 %v0_804f86b, 1
  store i32 %v1_804f874, i32* @esi, align 4
  %v2_804f877 = add i32 %v3_804f870, %v1_804f877
  store i32 %v2_804f877, i32* %ecx.global-to-local, align 4
  %tmp269 = icmp ugt i32 %v2_804f877, %v1_804f874
  br i1 %tmp269, label %dec_label_pc_804f87d, label %dec_label_pc_804f8dd

dec_label_pc_804f87d:                             ; preds = %dec_label_pc_804f870
  %v2_804f87d = inttoptr i32 %v1_804f874 to i8*
  %v3_804f87d = load i8, i8* %v2_804f87d, align 1
  %v4_804f87d = zext i8 %v3_804f87d to i32
  %v6_804f87d = and i32 %v5_804f87d, -256
  %v7_804f87d = or i32 %v4_804f87d, %v6_804f87d
  store i32 %v7_804f87d, i32* %eax.global-to-local, align 4
  %v11_804f880 = icmp eq i8 %v3_804f87d, -1
  br i1 %v11_804f880, label %dec_label_pc_804fd47, label %dec_label_pc_804f888

dec_label_pc_804f888:                             ; preds = %dec_label_pc_804f87d
  %v11_804f888 = icmp eq i8 %v3_804f87d, -3
  br i1 %v11_804f888, label %dec_label_pc_804fd69, label %dec_label_pc_804f890

dec_label_pc_804f890:                             ; preds = %dec_label_pc_804f888
  %v1_804f890 = add i32 %v0_804f86b, 2
  store i32 %v1_804f890, i32* %eax.global-to-local, align 4
  %tmp270 = icmp ugt i32 %v2_804f877, %v1_804f890
  br i1 %tmp270, label %dec_label_pc_804f897, label %dec_label_pc_804f8dd

dec_label_pc_804f897:                             ; preds = %dec_label_pc_804f890, %dec_label_pc_805033b, %dec_label_pc_8050343, %dec_label_pc_804fdf1
  %v0_804f897 = load i32, i32* @esi, align 4
  %v1_804f897 = inttoptr i32 %v0_804f897 to i8*
  %v2_804f897 = load i8, i8* %v1_804f897, align 1
  %v3_804f897 = zext i8 %v2_804f897 to i32
  %v4_804f897 = load i32, i32* %eax.global-to-local, align 4
  %v5_804f897 = and i32 %v4_804f897, -256
  %v6_804f897 = or i32 %v5_804f897, %v3_804f897
  store i32 %v6_804f897, i32* %eax.global-to-local, align 4
  %v11_804f899 = icmp eq i8 %v2_804f897, -3
  br i1 %v11_804f899, label %dec_label_pc_804fd52, label %dec_label_pc_804f8a1

dec_label_pc_804f8a1:                             ; preds = %dec_label_pc_804f897
  %v11_804f8a1 = icmp eq i8 %v2_804f897, -5
  br i1 %v11_804f8a1, label %dec_label_pc_804fe8c, label %dec_label_pc_804f8a9

dec_label_pc_804f8a9:                             ; preds = %dec_label_pc_804f8a1, %dec_label_pc_804fe8c
  %v5_804f8a9 = phi i32 [ %v6_804f897, %dec_label_pc_804f8a1 ], [ %v5_804f8a9.pre, %dec_label_pc_804fe8c ]
  %v0_804f8a9 = load i32, i32* @ebx, align 4
  %v1_804f8a9 = add i32 %v0_804f8a9, 2
  %v2_804f8a9 = inttoptr i32 %v1_804f8a9 to i8*
  %v3_804f8a9 = load i8, i8* %v2_804f8a9, align 1
  %v4_804f8a9 = zext i8 %v3_804f8a9 to i32
  %v6_804f8a9 = and i32 %v5_804f8a9, -256
  %v7_804f8a9 = or i32 %v4_804f8a9, %v6_804f8a9
  store i32 %v7_804f8a9, i32* %eax.global-to-local, align 4
  %v11_804f8ac = icmp eq i8 %v3_804f8a9, -3
  br i1 %v11_804f8ac, label %dec_label_pc_804fd60, label %dec_label_pc_804f8b4

dec_label_pc_804f8b4:                             ; preds = %dec_label_pc_804fd52, %dec_label_pc_804f8a9
  %v0_804fe60 = phi i32 [ %v0_804fd55, %dec_label_pc_804fd52 ], [ %v0_804f8a9, %dec_label_pc_804f8a9 ]
  %v0_804f8b4 = phi i32 [ %v7_804fd55, %dec_label_pc_804fd52 ], [ %v7_804f8a9, %dec_label_pc_804f8a9 ]
  %v1_804f8b4 = trunc i32 %v0_804f8b4 to i8
  %v11_804f8b4 = icmp eq i8 %v1_804f8b4, -5
  br i1 %v11_804f8b4, label %dec_label_pc_804fe60, label %dec_label_pc_804f8bc

dec_label_pc_804f8bc:                             ; preds = %dec_label_pc_804f8b4, %dec_label_pc_804fe60, %dec_label_pc_804fd60
  %v0_804f8bc = load i32, i32* @esp, align 4
  %v1_804f8bc = add i32 %v0_804f8bc, -4
  %v2_804f8bc = inttoptr i32 %v1_804f8bc to i32*
  store i32 16384, i32* %v2_804f8bc, align 4
  %v1_804f8c1 = add i32 %v0_804f8bc, -8
  %v2_804f8c1 = inttoptr i32 %v1_804f8c1 to i32*
  store i32 3, i32* %v2_804f8c1, align 4
  %v0_804f8c3 = load i32, i32* @ebx, align 4
  %v2_804f8c3 = add i32 %v0_804f8bc, -12
  %v3_804f8c3 = inttoptr i32 %v2_804f8c3 to i32*
  store i32 %v0_804f8c3, i32* %v3_804f8c3, align 4
  %v0_804f8c4 = load i32, i32* @ebp, align 4
  %v1_804f8c4 = add i32 %v0_804f8c4, 3
  store i32 %v1_804f8c4, i32* @ebp, align 4
  %v0_804f8c7 = load i32, i32* @edi, align 4
  %v1_804f8c7 = add i32 %v0_804f8c7, 4
  %v2_804f8c7 = inttoptr i32 %v1_804f8c7 to i32*
  %v3_804f8c7 = load i32, i32* %v2_804f8c7, align 4
  store i32 %v3_804f8c7, i32* @esi, align 4
  %v0_804f8ca = load i32, i32* @ebx, align 4
  %v1_804f8ca = add i32 %v0_804f8ca, 3
  store i32 %v1_804f8ca, i32* @ebx, align 4
  %v2_804f8cd = add i32 %v0_804f8bc, -16
  %v3_804f8cd = inttoptr i32 %v2_804f8cd to i32*
  store i32 %v3_804f8c7, i32* %v3_804f8cd, align 4
  %v0_804f8ce = call i32 @function_8051d23()
  store i32 %v0_804f8ce, i32* %eax.global-to-local, align 4
  %v0_804f8d3 = load i32, i32* @edi, align 4
  %v1_804f8d3 = add i32 %v0_804f8d3, 24
  %v2_804f8d3 = inttoptr i32 %v1_804f8d3 to i32*
  %v3_804f8d3 = load i32, i32* %v2_804f8d3, align 4
  store i32 %v3_804f8d3, i32* %edx.global-to-local, align 4
  %v0_804f8d6 = load i32, i32* @esp, align 4
  %v1_804f8d6 = add i32 %v0_804f8d6, 16
  %v0_804f8d9 = load i32, i32* @ebp, align 4
  %v2_804f8d9 = sub i32 %v0_804f8d9, %v3_804f8d3
  %v8_804f8d9 = xor i32 %v0_804f8d9, %v3_804f8d3
  %v9_804f8d9 = xor i32 %v2_804f8d9, %v0_804f8d9
  %v10_804f8d9 = and i32 %v9_804f8d9, %v8_804f8d9
  %v11_804f8d9 = icmp slt i32 %v10_804f8d9, 0
  %v13_804f8d9 = icmp slt i32 %v2_804f8d9, 0
  %v2_804f8db = icmp eq i1 %v13_804f8d9, %v11_804f8d9
  br i1 %v2_804f8db, label %dec_label_pc_804f8dd, label %dec_label_pc_804f86b

dec_label_pc_804f8dd:                             ; preds = %dec_label_pc_804f867.backedge, %dec_label_pc_804f890, %dec_label_pc_804f870, %dec_label_pc_804f8bc, %dec_label_pc_804f86b, %dec_label_pc_804fd69.dec_label_pc_804f8dd.loopexit_crit_edge
  %v0_804f8e5 = phi i32 [ %v0_804fdcd, %dec_label_pc_804fd69.dec_label_pc_804f8dd.loopexit_crit_edge ], [ %v0_804f8d3, %dec_label_pc_804f8bc ], [ %v0_804f8e5125, %dec_label_pc_804f890 ], [ %v0_804f8e5125, %dec_label_pc_804f870 ], [ %v0_804f8e5125, %dec_label_pc_804f86b ], [ %v0_804f8e5124, %dec_label_pc_804f867.backedge ]
  %v0_804f8dd = phi i32 [ %v0_804f8dd.pre.pre, %dec_label_pc_804fd69.dec_label_pc_804f8dd.loopexit_crit_edge ], [ %v0_804f8d9, %dec_label_pc_804f8bc ], [ %v0_804fd4a, %dec_label_pc_804f890 ], [ %v0_804fd4a, %dec_label_pc_804f870 ], [ %v0_804fd4a, %dec_label_pc_804f86b ], [ %v0_804f867, %dec_label_pc_804f867.backedge ]
  %tmp132 = icmp slt i32 %v0_804f8dd, 1
  br i1 %tmp132, label %dec_label_pc_804fdf9, label %dec_label_pc_804f8e5

dec_label_pc_804f8e5:                             ; preds = %dec_label_pc_804f8dd
  %v1_804f8e5 = add i32 %v0_804f8e5, 12
  %v2_804f8e5 = inttoptr i32 %v1_804f8e5 to i32*
  store i32 3, i32* %v2_804f8e5, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_804f8f1:                             ; preds = %dec_label_pc_804f84e
  %v1_804f8f1 = add i32 %v0_804f84e, 24
  %v2_804f8f1 = inttoptr i32 %v1_804f8f1 to i32*
  %v3_804f8f1 = load i32, i32* %v2_804f8f1, align 4
  %v1_804f8f4 = add i32 %v3_804f8f1, -1
  store i32 %v1_804f8f4, i32* %eax.global-to-local, align 4
  %tmp133 = icmp slt i32 %v1_804f8f4, 1
  br i1 %tmp133, label %dec_label_pc_804f92d, label %dec_label_pc_804f8f9.preheader

dec_label_pc_804f8f9.preheader:                   ; preds = %dec_label_pc_804f8f1
  %v7_804f8f9.pre = load i32, i32* @edx, align 4
  %v2_804f8f9 = add i32 %v0_804f84e, 28
  br label %dec_label_pc_804f8f9

dec_label_pc_804f8f9:                             ; preds = %dec_label_pc_804f8f9.preheader, %dec_label_pc_804f92a
  %v7_804f8f9 = phi i32 [ %v7_804f8f9.pre, %dec_label_pc_804f8f9.preheader ], [ %v9_804f8f9, %dec_label_pc_804f92a ]
  %v0_804ff0d = phi i32 [ %v1_804f8f4, %dec_label_pc_804f8f9.preheader ], [ %v1_804f92a, %dec_label_pc_804f92a ]
  %v3_804f8f9 = add i32 %v2_804f8f9, %v0_804ff0d
  %v4_804f8f9 = inttoptr i32 %v3_804f8f9 to i8*
  %v5_804f8f9 = load i8, i8* %v4_804f8f9, align 1
  %v6_804f8f9 = zext i8 %v5_804f8f9 to i32
  %v8_804f8f9 = and i32 %v7_804f8f9, -256
  %v9_804f8f9 = or i32 %v6_804f8f9, %v8_804f8f9
  store i32 %v9_804f8f9, i32* %edx.global-to-local, align 4
  %v10_804f8fd = icmp eq i8 %v5_804f8f9, 58
  br i1 %v10_804f8fd, label %dec_label_pc_804ff0d, label %dec_label_pc_804f906

dec_label_pc_804f906:                             ; preds = %dec_label_pc_804f8f9
  %v10_804f906 = icmp eq i8 %v5_804f8f9, 62
  br i1 %v10_804f906, label %dec_label_pc_804ff0d, label %dec_label_pc_804f90f

dec_label_pc_804f90f:                             ; preds = %dec_label_pc_804f906
  %v10_804f90f = icmp eq i8 %v5_804f8f9, 36
  br i1 %v10_804f90f, label %dec_label_pc_804ff0d, label %dec_label_pc_804f918

dec_label_pc_804f918:                             ; preds = %dec_label_pc_804f90f
  %v10_804f918 = icmp eq i8 %v5_804f8f9, 35
  br i1 %v10_804f918, label %dec_label_pc_804ff0d, label %dec_label_pc_804f921

dec_label_pc_804f921:                             ; preds = %dec_label_pc_804f918
  %v10_804f921 = icmp eq i8 %v5_804f8f9, 37
  br i1 %v10_804f921, label %dec_label_pc_804ff0d, label %dec_label_pc_804f92a

dec_label_pc_804f92a:                             ; preds = %dec_label_pc_804f921
  %v1_804f92a = add i32 %v0_804ff0d, -1
  %v8_804f92a = icmp eq i32 %v1_804f92a, 0
  store i32 %v1_804f92a, i32* %eax.global-to-local, align 4
  %v1_804f92b = icmp eq i1 %v8_804f92a, false
  br i1 %v1_804f92b, label %dec_label_pc_804f8f9, label %dec_label_pc_804f92d

dec_label_pc_804f92d:                             ; preds = %dec_label_pc_804f92a, %dec_label_pc_804ff0d, %dec_label_pc_804f8f1
  %v0_804f92d = load i32, i32* @esp, align 4
  %v1_804f930 = add i32 %v0_804f92d, -16
  %v2_804f930 = inttoptr i32 %v1_804f930 to i32*
  store i32 32, i32* %v2_804f930, align 4
  %v2_804f932 = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804f932, i32* %eax.global-to-local, align 4
  %v0_804f937 = load i32, i32* @esp, align 4
  %v1_804f937 = inttoptr i32 %v0_804f937 to i32*
  store i32 33, i32* %v1_804f937, align 4
  %v2_804f93e = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804f93e, i32* %eax.global-to-local, align 4
  %v0_804f943 = load i32, i32* @esp, align 4
  %v1_804f943 = inttoptr i32 %v0_804f943 to i32*
  %v2_804f943 = load i32, i32* %v1_804f943, align 4
  store i32 %v2_804f943, i32* %ecx.global-to-local, align 4
  %v3_804f943 = add i32 %v0_804f943, 4
  %v1_804f944 = inttoptr i32 %v3_804f943 to i32*
  %v2_804f944 = load i32, i32* %v1_804f944, align 4
  store i32 %v2_804f944, i32* %ebx.global-to-local, align 4
  %v1_804f945 = add i32 %v0_804f943, 1868
  store i32 %v1_804f945, i32* %ecx.global-to-local, align 4
  store i32 %v1_804f945, i32* %v1_804f944, align 4
  store i32 32, i32* %v1_804f943, align 4
  %v3_804f94f = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_804f94f, i32* %eax.global-to-local, align 4
  store i32 %v3_804f94f, i32* @ebx, align 4
  %v0_804f956 = load i32, i32* @esp, align 4
  %v1_804f956 = inttoptr i32 %v0_804f956 to i32*
  %v2_804f956 = load i32, i32* %v1_804f956, align 4
  store i32 %v2_804f956, i32* %eax.global-to-local, align 4
  %v3_804f956 = add i32 %v0_804f956, 4
  %v1_804f957 = inttoptr i32 %v3_804f956 to i32*
  %v2_804f957 = load i32, i32* %v1_804f957, align 4
  store i32 %v2_804f957, i32* %edx.global-to-local, align 4
  %v1_804f958 = add i32 %v0_804f956, 1864
  store i32 %v1_804f958, i32* %eax.global-to-local, align 4
  store i32 %v1_804f958, i32* %v1_804f957, align 4
  store i32 33, i32* %v1_804f956, align 4
  %v3_804f962 = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_804f962, i32* %eax.global-to-local, align 4
  store i32 %v3_804f962, i32* @esi, align 4
  %v0_804f969 = load i32, i32* @esp, align 4
  %v1_804f969 = add i32 %v0_804f969, 1868
  %v2_804f969 = inttoptr i32 %v1_804f969 to i32*
  %v3_804f969 = load i32, i32* %v2_804f969, align 4
  %v1_804f970 = add i32 %v3_804f969, -1
  store i32 %v1_804f970, i32* %eax.global-to-local, align 4
  %v2_804f971 = add i32 %v0_804f969, -4
  %v3_804f971 = inttoptr i32 %v2_804f971 to i32*
  store i32 %v1_804f970, i32* %v3_804f971, align 4
  %v0_804f972 = load i32, i32* @ebx, align 4
  %v2_804f972 = add i32 %v0_804f969, -8
  %v3_804f972 = inttoptr i32 %v2_804f972 to i32*
  store i32 %v0_804f972, i32* %v3_804f972, align 4
  %v0_804f973 = load i32, i32* @edi, align 4
  %v1_804f973 = add i32 %v0_804f973, 24
  %v2_804f973 = inttoptr i32 %v1_804f973 to i32*
  %v3_804f973 = load i32, i32* %v2_804f973, align 4
  store i32 %v3_804f973, i32* %eax.global-to-local, align 4
  %v2_804f976 = add i32 %v0_804f969, -12
  %v3_804f976 = inttoptr i32 %v2_804f976 to i32*
  store i32 %v3_804f973, i32* %v3_804f976, align 4
  %v1_804f977 = add i32 %v0_804f969, 24
  %v2_804f977 = inttoptr i32 %v1_804f977 to i32*
  %v3_804f977 = load i32, i32* %v2_804f977, align 4
  store i32 %v3_804f977, i32* %eax.global-to-local, align 4
  %v2_804f97b = add i32 %v0_804f969, -16
  %v3_804f97b = inttoptr i32 %v2_804f97b to i32*
  store i32 %v3_804f977, i32* %v3_804f97b, align 4
  %v0_804f97c = call i32 @function_8051130()
  %v0_804f981 = load i32, i32* @esp, align 4
  %v1_804f981 = add i32 %v0_804f981, 32
  %v8_804f984 = icmp eq i32 %v0_804f97c, -1
  %v1_804f985 = icmp eq i1 %v8_804f984, false
  %v2_804f985 = zext i1 %v1_804f985 to i32
  %v2_804f988 = icmp eq i1 %v1_804f985, false
  store i32 %v2_804f985, i32* %eax.global-to-local, align 4
  store i32 %v2_804f985, i32* @ebp, align 4
  br i1 %v2_804f988, label %dec_label_pc_80502c6, label %dec_label_pc_804f997

dec_label_pc_804f997:                             ; preds = %dec_label_pc_80502c6, %dec_label_pc_804f92d
  %v0_804f997 = phi i32 [ %v1_80502de, %dec_label_pc_80502c6 ], [ %v1_804f981, %dec_label_pc_804f92d ]
  %v1_804f99a = add i32 %v0_804f997, -16
  %v2_804f99a = inttoptr i32 %v1_804f99a to i32*
  store i32 32, i32* %v2_804f99a, align 4
  %v2_804f99c = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804f99c, i32* %eax.global-to-local, align 4
  %v0_804f9a1 = load i32, i32* @esp, align 4
  %v1_804f9a1 = inttoptr i32 %v0_804f9a1 to i32*
  store i32 33, i32* %v1_804f9a1, align 4
  %v2_804f9a8 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804f9a8, i32* %eax.global-to-local, align 4
  %v0_804f9b0 = load i32, i32* @ebp, align 4
  %v10_804f9b0 = icmp eq i32 %v0_804f9b0, -1
  %v1_804f9b3 = icmp eq i1 %v10_804f9b0, false
  br i1 %v1_804f9b3, label %dec_label_pc_804ff19, label %dec_label_pc_804f7dc.backedge

dec_label_pc_804f9c0:                             ; preds = %dec_label_pc_804f84e
  %v1_804f9c0 = add i32 %v0_804f84e, 24
  %v2_804f9c0 = inttoptr i32 %v1_804f9c0 to i32*
  %v3_804f9c0 = load i32, i32* %v2_804f9c0, align 4
  %v1_804f9c3 = add i32 %v3_804f9c0, -1
  store i32 %v1_804f9c3, i32* %eax.global-to-local, align 4
  %tmp134 = icmp slt i32 %v1_804f9c3, 1
  br i1 %tmp134, label %dec_label_pc_804f9f3, label %dec_label_pc_804f9c8.preheader

dec_label_pc_804f9c8.preheader:                   ; preds = %dec_label_pc_804f9c0
  %v7_804f9c8.pre = load i32, i32* @edx, align 4
  %v2_804f9c8 = add i32 %v0_804f84e, 28
  br label %dec_label_pc_804f9c8

dec_label_pc_804f9c8:                             ; preds = %dec_label_pc_804f9c8.preheader, %dec_label_pc_804f9f0
  %v7_804f9c8 = phi i32 [ %v7_804f9c8.pre, %dec_label_pc_804f9c8.preheader ], [ %v9_804f9c8, %dec_label_pc_804f9f0 ]
  %v0_8050050 = phi i32 [ %v1_804f9c3, %dec_label_pc_804f9c8.preheader ], [ %v1_804f9f0, %dec_label_pc_804f9f0 ]
  %v3_804f9c8 = add i32 %v2_804f9c8, %v0_8050050
  %v4_804f9c8 = inttoptr i32 %v3_804f9c8 to i8*
  %v5_804f9c8 = load i8, i8* %v4_804f9c8, align 1
  %v6_804f9c8 = zext i8 %v5_804f9c8 to i32
  %v8_804f9c8 = and i32 %v7_804f9c8, -256
  %v9_804f9c8 = or i32 %v6_804f9c8, %v8_804f9c8
  store i32 %v9_804f9c8, i32* %edx.global-to-local, align 4
  %v10_804f9cc = icmp eq i8 %v5_804f9c8, 58
  br i1 %v10_804f9cc, label %dec_label_pc_8050050, label %dec_label_pc_804f9d5

dec_label_pc_804f9d5:                             ; preds = %dec_label_pc_804f9c8
  %v10_804f9d5 = icmp eq i8 %v5_804f9c8, 62
  br i1 %v10_804f9d5, label %dec_label_pc_8050050, label %dec_label_pc_804f9de

dec_label_pc_804f9de:                             ; preds = %dec_label_pc_804f9d5
  %v10_804f9de = icmp eq i8 %v5_804f9c8, 36
  br i1 %v10_804f9de, label %dec_label_pc_8050050, label %dec_label_pc_804f9e7

dec_label_pc_804f9e7:                             ; preds = %dec_label_pc_804f9de
  %v10_804f9e7 = icmp eq i8 %v5_804f9c8, 35
  br i1 %v10_804f9e7, label %dec_label_pc_8050050, label %dec_label_pc_804f9f0

dec_label_pc_804f9f0:                             ; preds = %dec_label_pc_804f9e7
  %v1_804f9f0 = add i32 %v0_8050050, -1
  %v8_804f9f0 = icmp eq i32 %v1_804f9f0, 0
  store i32 %v1_804f9f0, i32* %eax.global-to-local, align 4
  %v1_804f9f1 = icmp eq i1 %v8_804f9f0, false
  br i1 %v1_804f9f1, label %dec_label_pc_804f9c8, label %dec_label_pc_804f9f3

dec_label_pc_804f9f3:                             ; preds = %dec_label_pc_804f9f0, %dec_label_pc_8050050, %dec_label_pc_804f9c0
  %v0_804f9f3 = load i32, i32* @esp, align 4
  %v1_804f9f6 = add i32 %v0_804f9f3, -16
  %v2_804f9f6 = inttoptr i32 %v1_804f9f6 to i32*
  store i32 31, i32* %v2_804f9f6, align 4
  %v2_804f9f8 = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804f9f8, i32* %eax.global-to-local, align 4
  %v0_804f9fd = load i32, i32* @esp, align 4
  %v1_804f9fd = inttoptr i32 %v0_804f9fd to i32*
  %v2_804f9fd = load i32, i32* %v1_804f9fd, align 4
  store i32 %v2_804f9fd, i32* %eax.global-to-local, align 4
  %v3_804f9fd = add i32 %v0_804f9fd, 4
  %v1_804f9fe = inttoptr i32 %v3_804f9fd to i32*
  %v2_804f9fe = load i32, i32* %v1_804f9fe, align 4
  store i32 %v2_804f9fe, i32* %edx.global-to-local, align 4
  %v1_804f9ff = add i32 %v0_804f9fd, 1868
  store i32 %v1_804f9ff, i32* %eax.global-to-local, align 4
  store i32 %v1_804f9ff, i32* %v1_804f9fe, align 4
  store i32 31, i32* %v1_804f9fd, align 4
  %v3_804fa09 = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_804fa09, i32* %eax.global-to-local, align 4
  %v0_804fa0e = load i32, i32* @esp, align 4
  %v1_804fa0e = add i32 %v0_804fa0e, 1868
  %v2_804fa0e = inttoptr i32 %v1_804fa0e to i32*
  %v3_804fa0e = load i32, i32* %v2_804fa0e, align 4
  %v1_804fa15 = add i32 %v3_804fa0e, -1
  store i32 %v1_804fa15, i32* %edx.global-to-local, align 4
  %v2_804fa16 = add i32 %v0_804fa0e, -4
  %v3_804fa16 = inttoptr i32 %v2_804fa16 to i32*
  store i32 %v1_804fa15, i32* %v3_804fa16, align 4
  %v2_804fa17 = add i32 %v0_804fa0e, -8
  %v3_804fa17 = inttoptr i32 %v2_804fa17 to i32*
  store i32 %v3_804fa09, i32* %v3_804fa17, align 4
  %v0_804fa18 = load i32, i32* @edi, align 4
  %v1_804fa18 = add i32 %v0_804fa18, 24
  %v2_804fa18 = inttoptr i32 %v1_804fa18 to i32*
  %v3_804fa18 = load i32, i32* %v2_804fa18, align 4
  store i32 %v3_804fa18, i32* %eax.global-to-local, align 4
  %v2_804fa1b = add i32 %v0_804fa0e, -12
  %v3_804fa1b = inttoptr i32 %v2_804fa1b to i32*
  store i32 %v3_804fa18, i32* %v3_804fa1b, align 4
  %v1_804fa1c = add i32 %v0_804fa0e, 24
  %v2_804fa1c = inttoptr i32 %v1_804fa1c to i32*
  %v3_804fa1c = load i32, i32* %v2_804fa1c, align 4
  %v2_804fa20 = add i32 %v0_804fa0e, -16
  %v3_804fa20 = inttoptr i32 %v2_804fa20 to i32*
  store i32 %v3_804fa1c, i32* %v3_804fa20, align 4
  %v0_804fa21 = call i32 @function_8051130()
  %v0_804fa26 = load i32, i32* @esp, align 4
  %v8_804fa29 = icmp eq i32 %v0_804fa21, -1
  %v1_804fa2a = icmp eq i1 %v8_804fa29, false
  %v2_804fa2a = zext i1 %v1_804fa2a to i32
  %v2_804fa2d = icmp eq i1 %v1_804fa2a, false
  store i32 %v2_804fa2a, i32* %eax.global-to-local, align 4
  store i32 %v2_804fa2a, i32* @ebp, align 4
  %v1_805034e = add i32 %v0_804fa26, 16
  %v2_805034e = inttoptr i32 %v1_805034e to i32*
  store i32 31, i32* %v2_805034e, align 4
  %v2_8050350 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050350, i32* %eax.global-to-local, align 4
  br i1 %v2_804fa2d, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804fa3c

dec_label_pc_804fa3c:                             ; preds = %dec_label_pc_804f9f3
  %v0_804fa49 = load i32, i32* @ebp, align 4
  %v10_804fa49 = icmp eq i32 %v0_804fa49, -1
  %v1_804fa4c = icmp eq i1 %v10_804fa49, false
  br i1 %v1_804fa4c, label %dec_label_pc_805005c, label %dec_label_pc_804f7dc.backedge

dec_label_pc_804fa57:                             ; preds = %dec_label_pc_804f84e
  %v1_804fa57 = add i32 %v0_804f84e, 24
  %v2_804fa57 = inttoptr i32 %v1_804fa57 to i32*
  %v3_804fa57 = load i32, i32* %v2_804fa57, align 4
  %v1_804fa5a = add i32 %v3_804fa57, -1
  store i32 %v1_804fa5a, i32* %eax.global-to-local, align 4
  %tmp135 = icmp slt i32 %v1_804fa5a, 1
  br i1 %tmp135, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804fa63.preheader

dec_label_pc_804fa63.preheader:                   ; preds = %dec_label_pc_804fa57
  %v7_804fa63.pre = load i32, i32* @edx, align 4
  %v2_804fa63 = add i32 %v0_804f84e, 28
  br label %dec_label_pc_804fa63

dec_label_pc_804fa63:                             ; preds = %dec_label_pc_804fa63.preheader, %dec_label_pc_804fa94
  %v7_804fa63 = phi i32 [ %v7_804fa63.pre, %dec_label_pc_804fa63.preheader ], [ %v9_804fa63, %dec_label_pc_804fa94 ]
  %v0_804ff5e = phi i32 [ %v1_804fa5a, %dec_label_pc_804fa63.preheader ], [ %v1_804fa94, %dec_label_pc_804fa94 ]
  %v3_804fa63 = add i32 %v2_804fa63, %v0_804ff5e
  %v4_804fa63 = inttoptr i32 %v3_804fa63 to i8*
  %v5_804fa63 = load i8, i8* %v4_804fa63, align 1
  %v6_804fa63 = zext i8 %v5_804fa63 to i32
  %v8_804fa63 = and i32 %v7_804fa63, -256
  %v9_804fa63 = or i32 %v6_804fa63, %v8_804fa63
  store i32 %v9_804fa63, i32* %edx.global-to-local, align 4
  %v10_804fa67 = icmp eq i8 %v5_804fa63, 58
  br i1 %v10_804fa67, label %dec_label_pc_804ff5e, label %dec_label_pc_804fa70

dec_label_pc_804fa70:                             ; preds = %dec_label_pc_804fa63
  %v10_804fa70 = icmp eq i8 %v5_804fa63, 62
  br i1 %v10_804fa70, label %dec_label_pc_804ff5e, label %dec_label_pc_804fa79

dec_label_pc_804fa79:                             ; preds = %dec_label_pc_804fa70
  %v10_804fa79 = icmp eq i8 %v5_804fa63, 36
  br i1 %v10_804fa79, label %dec_label_pc_804ff5e, label %dec_label_pc_804fa82

dec_label_pc_804fa82:                             ; preds = %dec_label_pc_804fa79
  %v10_804fa82 = icmp eq i8 %v5_804fa63, 35
  br i1 %v10_804fa82, label %dec_label_pc_804ff5e, label %dec_label_pc_804fa8b

dec_label_pc_804fa8b:                             ; preds = %dec_label_pc_804fa82
  %v10_804fa8b = icmp eq i8 %v5_804fa63, 37
  br i1 %v10_804fa8b, label %dec_label_pc_804ff5e, label %dec_label_pc_804fa94

dec_label_pc_804fa94:                             ; preds = %dec_label_pc_804fa8b
  %v1_804fa94 = add i32 %v0_804ff5e, -1
  %v8_804fa94 = icmp eq i32 %v1_804fa94, 0
  store i32 %v1_804fa94, i32* %eax.global-to-local, align 4
  %v1_804fa95 = icmp eq i1 %v8_804fa94, false
  br i1 %v1_804fa95, label %dec_label_pc_804fa63, label %dec_label_pc_804f7dc.backedge

dec_label_pc_804faa0:                             ; preds = %dec_label_pc_804f84e
  %v1_804faa0 = add i32 %v0_804f84e, 24
  %v2_804faa0 = inttoptr i32 %v1_804faa0 to i32*
  %v3_804faa0 = load i32, i32* %v2_804faa0, align 4
  %v1_804faa3 = add i32 %v3_804faa0, -1
  store i32 %v1_804faa3, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_804faa3, 1
  br i1 %tmp136, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804faac.preheader

dec_label_pc_804faac.preheader:                   ; preds = %dec_label_pc_804faa0
  %v7_804faac.pre = load i32, i32* @edx, align 4
  %v2_804faac = add i32 %v0_804f84e, 28
  br label %dec_label_pc_804faac

dec_label_pc_804faac:                             ; preds = %dec_label_pc_804faac.preheader, %dec_label_pc_804fadd
  %v7_804faac = phi i32 [ %v7_804faac.pre, %dec_label_pc_804faac.preheader ], [ %v9_804faac, %dec_label_pc_804fadd ]
  %v0_804fe94 = phi i32 [ %v1_804faa3, %dec_label_pc_804faac.preheader ], [ %v1_804fadd, %dec_label_pc_804fadd ]
  %v3_804faac = add i32 %v2_804faac, %v0_804fe94
  %v4_804faac = inttoptr i32 %v3_804faac to i8*
  %v5_804faac = load i8, i8* %v4_804faac, align 1
  %v6_804faac = zext i8 %v5_804faac to i32
  %v8_804faac = and i32 %v7_804faac, -256
  %v9_804faac = or i32 %v6_804faac, %v8_804faac
  store i32 %v9_804faac, i32* %edx.global-to-local, align 4
  %v10_804fab0 = icmp eq i8 %v5_804faac, 58
  br i1 %v10_804fab0, label %dec_label_pc_804fe94, label %dec_label_pc_804fab9

dec_label_pc_804fab9:                             ; preds = %dec_label_pc_804faac
  %v10_804fab9 = icmp eq i8 %v5_804faac, 62
  br i1 %v10_804fab9, label %dec_label_pc_804fe94, label %dec_label_pc_804fac2

dec_label_pc_804fac2:                             ; preds = %dec_label_pc_804fab9
  %v10_804fac2 = icmp eq i8 %v5_804faac, 36
  br i1 %v10_804fac2, label %dec_label_pc_804fe94, label %dec_label_pc_804facb

dec_label_pc_804facb:                             ; preds = %dec_label_pc_804fac2
  %v10_804facb = icmp eq i8 %v5_804faac, 35
  br i1 %v10_804facb, label %dec_label_pc_804fe94, label %dec_label_pc_804fad4

dec_label_pc_804fad4:                             ; preds = %dec_label_pc_804facb
  %v10_804fad4 = icmp eq i8 %v5_804faac, 37
  br i1 %v10_804fad4, label %dec_label_pc_804fe94, label %dec_label_pc_804fadd

dec_label_pc_804fadd:                             ; preds = %dec_label_pc_804fad4
  %v1_804fadd = add i32 %v0_804fe94, -1
  %v8_804fadd = icmp eq i32 %v1_804fadd, 0
  store i32 %v1_804fadd, i32* %eax.global-to-local, align 4
  %v1_804fade = icmp eq i1 %v8_804fadd, false
  br i1 %v1_804fade, label %dec_label_pc_804faac, label %dec_label_pc_804f7dc.backedge

dec_label_pc_804fae5:                             ; preds = %dec_label_pc_804f84e
  %v1_804fae5 = add i32 %v0_804f84e, 24
  %v2_804fae5 = inttoptr i32 %v1_804fae5 to i32*
  %v3_804fae5 = load i32, i32* %v2_804fae5, align 4
  %v1_804fae8 = add i32 %v3_804fae5, -1
  store i32 %v1_804fae8, i32* %eax.global-to-local, align 4
  %tmp137 = icmp slt i32 %v1_804fae8, 1
  br i1 %tmp137, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804faf1

dec_label_pc_804faf1:                             ; preds = %dec_label_pc_804fae5
  %v2_804faf1 = add i32 %v0_804f84e, 27
  %v3_804faf1 = add i32 %v2_804faf1, %v3_804fae5
  %v4_804faf1 = inttoptr i32 %v3_804faf1 to i8*
  %v5_804faf1 = load i8, i8* %v4_804faf1, align 1
  %v6_804faf1 = zext i8 %v5_804faf1 to i32
  %v7_804faf1 = load i32, i32* @edx, align 4
  %v8_804faf1 = and i32 %v7_804faf1, -256
  %v9_804faf1 = or i32 %v8_804faf1, %v6_804faf1
  store i32 %v9_804faf1, i32* %edx.global-to-local, align 4
  %v10_804faf5 = icmp eq i8 %v5_804faf1, 62
  br i1 %v10_804faf5, label %dec_label_pc_804fb23.thread, label %dec_label_pc_804fafa

dec_label_pc_804fafa:                             ; preds = %dec_label_pc_804faf1
  %v10_804fafa = icmp eq i8 %v5_804faf1, 58
  br i1 %v10_804fafa, label %dec_label_pc_804fb23.thread, label %dec_label_pc_804faff

dec_label_pc_804faff:                             ; preds = %dec_label_pc_804fafa, %dec_label_pc_804fb1e
  %v0_804fb0e = phi i32 [ %v1_804fb0e, %dec_label_pc_804fb1e ], [ %v1_804fae8, %dec_label_pc_804fafa ]
  %v7_804fb15 = phi i32 [ %v9_804fb15, %dec_label_pc_804fb1e ], [ %v9_804faf1, %dec_label_pc_804fafa ]
  %v1_804faff = trunc i32 %v7_804fb15 to i8
  %v10_804faff = icmp eq i8 %v1_804faff, 36
  br i1 %v10_804faff, label %dec_label_pc_804fb23, label %dec_label_pc_804fb04

dec_label_pc_804fb04:                             ; preds = %dec_label_pc_804faff
  %v10_804fb04 = icmp eq i8 %v1_804faff, 35
  br i1 %v10_804fb04, label %dec_label_pc_804fb23, label %dec_label_pc_804fb09

dec_label_pc_804fb09:                             ; preds = %dec_label_pc_804fb04
  %v10_804fb09 = icmp eq i8 %v1_804faff, 37
  br i1 %v10_804fb09, label %dec_label_pc_804fb23, label %dec_label_pc_804fb0e

dec_label_pc_804fb0e:                             ; preds = %dec_label_pc_804fb09
  %v1_804fb0e = add i32 %v0_804fb0e, -1
  %v8_804fb0e = icmp eq i32 %v1_804fb0e, 0
  store i32 %v1_804fb0e, i32* %eax.global-to-local, align 4
  br i1 %v8_804fb0e, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804fb15

dec_label_pc_804fb15:                             ; preds = %dec_label_pc_804fb0e
  %v3_804fb15 = add i32 %v2_804faf1, %v0_804fb0e
  %v4_804fb15 = inttoptr i32 %v3_804fb15 to i8*
  %v5_804fb15 = load i8, i8* %v4_804fb15, align 1
  %v6_804fb15 = zext i8 %v5_804fb15 to i32
  %v8_804fb15 = and i32 %v7_804fb15, -256
  %v9_804fb15 = or i32 %v6_804fb15, %v8_804fb15
  store i32 %v9_804fb15, i32* %edx.global-to-local, align 4
  %v10_804fb19 = icmp eq i8 %v5_804fb15, 58
  br i1 %v10_804fb19, label %dec_label_pc_804fb23, label %dec_label_pc_804fb1e

dec_label_pc_804fb1e:                             ; preds = %dec_label_pc_804fb15
  %v10_804fb1e = icmp eq i8 %v5_804fb15, 62
  %v1_804fb21 = icmp eq i1 %v10_804fb1e, false
  br i1 %v1_804fb21, label %dec_label_pc_804faff, label %dec_label_pc_804fb23

dec_label_pc_804fb23.thread:                      ; preds = %dec_label_pc_804fafa, %dec_label_pc_804faf1
  store i32 %v3_804fae5, i32* @ebp, align 4
  br label %dec_label_pc_804fb2f

dec_label_pc_804fb23:                             ; preds = %dec_label_pc_804fb1e, %dec_label_pc_804fb15, %dec_label_pc_804fb09, %dec_label_pc_804fb04, %dec_label_pc_804faff
  %v0_804fb23 = phi i32 [ %v0_804fb0e, %dec_label_pc_804faff ], [ %v0_804fb0e, %dec_label_pc_804fb04 ], [ %v0_804fb0e, %dec_label_pc_804fb09 ], [ %v1_804fb0e, %dec_label_pc_804fb15 ], [ %v1_804fb0e, %dec_label_pc_804fb1e ]
  %v1_804fb23 = add i32 %v0_804fb23, 1
  store i32 %v1_804fb23, i32* @ebp, align 4
  %v10_804fb26 = icmp eq i32 %v0_804fb23, -2
  br i1 %v10_804fb26, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804fb2f

dec_label_pc_804fb2f:                             ; preds = %dec_label_pc_804fb23.thread, %dec_label_pc_804fb23
  %v1_804fb23155 = phi i32 [ %v3_804fae5, %dec_label_pc_804fb23.thread ], [ %v1_804fb23, %dec_label_pc_804fb23 ]
  %tmp138 = icmp slt i32 %v1_804fb23155, 1
  br i1 %tmp138, label %dec_label_pc_804fdf9, label %dec_label_pc_804fb37

dec_label_pc_804fb37:                             ; preds = %dec_label_pc_804fb2f
  %v0_804fb37 = load i32, i32* @esp, align 4
  %v1_804fb3a = add i32 %v0_804fb37, -16
  %v2_804fb3a = inttoptr i32 %v1_804fb3a to i32*
  store i32 26, i32* %v2_804fb3a, align 4
  %v2_804fb3c = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804fb3c, i32* %eax.global-to-local, align 4
  %v0_804fb41 = load i32, i32* @esp, align 4
  %v1_804fb41 = inttoptr i32 %v0_804fb41 to i32*
  %v2_804fb41 = load i32, i32* %v1_804fb41, align 4
  store i32 %v2_804fb41, i32* %eax.global-to-local, align 4
  %v3_804fb41 = add i32 %v0_804fb41, 4
  %v1_804fb42 = inttoptr i32 %v3_804fb41 to i32*
  %v2_804fb42 = load i32, i32* %v1_804fb42, align 4
  store i32 %v2_804fb42, i32* %edx.global-to-local, align 4
  %v1_804fb43 = add i32 %v0_804fb41, 1864
  store i32 %v1_804fb43, i32* %eax.global-to-local, align 4
  store i32 %v1_804fb43, i32* %v1_804fb42, align 4
  store i32 26, i32* %v1_804fb41, align 4
  %v3_804fb4d = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_804fb4d, i32* %eax.global-to-local, align 4
  %v0_804fb52 = load i32, i32* @esp, align 4
  %v1_804fb52 = add i32 %v0_804fb52, -4
  %v2_804fb52 = inttoptr i32 %v1_804fb52 to i32*
  store i32 16384, i32* %v2_804fb52, align 4
  %v1_804fb57 = add i32 %v0_804fb52, 1864
  %v2_804fb57 = inttoptr i32 %v1_804fb57 to i32*
  %v3_804fb57 = load i32, i32* %v2_804fb57, align 4
  store i32 %v3_804fb57, i32* @esi, align 4
  %v2_804fb5e = add i32 %v0_804fb52, -8
  %v3_804fb5e = inttoptr i32 %v2_804fb5e to i32*
  store i32 %v3_804fb57, i32* %v3_804fb5e, align 4
  %v2_804fb5f = add i32 %v0_804fb52, -12
  %v3_804fb5f = inttoptr i32 %v2_804fb5f to i32*
  store i32 %v3_804fb4d, i32* %v3_804fb5f, align 4
  %v0_804fb60 = load i32, i32* @edi, align 4
  %v1_804fb60 = add i32 %v0_804fb60, 4
  %v2_804fb60 = inttoptr i32 %v1_804fb60 to i32*
  %v3_804fb60 = load i32, i32* %v2_804fb60, align 4
  store i32 %v3_804fb60, i32* @ebx, align 4
  %v2_804fb63 = add i32 %v0_804fb52, -16
  %v3_804fb63 = inttoptr i32 %v2_804fb63 to i32*
  store i32 %v3_804fb60, i32* %v3_804fb63, align 4
  %v0_804fb64 = call i32 @function_8051d23()
  store i32 %v0_804fb64, i32* %eax.global-to-local, align 4
  %v0_804fb69 = load i32, i32* @esp, align 4
  %v1_804fb6c = add i32 %v0_804fb69, 28
  %v2_804fb6c = inttoptr i32 %v1_804fb6c to i32*
  store i32 16384, i32* %v2_804fb6c, align 4
  %v1_804fb71 = add i32 %v0_804fb69, 24
  %v2_804fb71 = inttoptr i32 %v1_804fb71 to i32*
  store i32 2, i32* %v2_804fb71, align 4
  %v1_804fb73 = add i32 %v0_804fb69, 20
  %v2_804fb73 = inttoptr i32 %v1_804fb73 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_804fb73, align 4
  %v0_804fb78 = load i32, i32* @edi, align 4
  %v1_804fb78 = add i32 %v0_804fb78, 4
  %v2_804fb78 = inttoptr i32 %v1_804fb78 to i32*
  %v3_804fb78 = load i32, i32* %v2_804fb78, align 4
  store i32 %v3_804fb78, i32* %ecx.global-to-local, align 4
  %v2_804fb7b = add i32 %v0_804fb69, 16
  %v3_804fb7b = inttoptr i32 %v2_804fb7b to i32*
  store i32 %v3_804fb78, i32* %v3_804fb7b, align 4
  %v0_804fb7c = call i32 @function_8051d23()
  store i32 %v0_804fb7c, i32* %eax.global-to-local, align 4
  %v0_804fb81 = load i32, i32* @esp, align 4
  %v1_804fb81 = inttoptr i32 %v0_804fb81 to i32*
  store i32 26, i32* %v1_804fb81, align 4
  %v2_804fb88 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804fb88, i32* %eax.global-to-local, align 4
  %v0_804fb90 = load i32, i32* @edi, align 4
  %v1_804fb90 = add i32 %v0_804fb90, 12
  %v2_804fb90 = inttoptr i32 %v1_804fb90 to i32*
  store i32 7, i32* %v2_804fb90, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_804fb9c:                             ; preds = %dec_label_pc_804f84e
  %v0_804fb9c = load i32, i32* @esp, align 4
  %v1_804fb9f = add i32 %v0_804fb9c, -16
  %v2_804fb9f = inttoptr i32 %v1_804fb9f to i32*
  store i32 30, i32* %v2_804fb9f, align 4
  %v2_804fba1 = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804fba1, i32* %eax.global-to-local, align 4
  %v0_804fba6 = load i32, i32* @esp, align 4
  %v1_804fba6 = inttoptr i32 %v0_804fba6 to i32*
  %v2_804fba6 = load i32, i32* %v1_804fba6, align 4
  store i32 %v2_804fba6, i32* %eax.global-to-local, align 4
  %v3_804fba6 = add i32 %v0_804fba6, 4
  %v1_804fba7 = inttoptr i32 %v3_804fba6 to i32*
  %v1_804fba8 = add i32 %v0_804fba6, 1868
  store i32 %v1_804fba8, i32* %edx.global-to-local, align 4
  store i32 %v1_804fba8, i32* %v1_804fba7, align 4
  store i32 30, i32* %v1_804fba6, align 4
  %v3_804fbb2 = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_804fbb2, i32* %eax.global-to-local, align 4
  %v0_804fbb7 = load i32, i32* @esp, align 4
  %v1_804fbb7 = add i32 %v0_804fbb7, 1868
  %v2_804fbb7 = inttoptr i32 %v1_804fbb7 to i32*
  %v3_804fbb7 = load i32, i32* %v2_804fbb7, align 4
  %v1_804fbbe = add i32 %v3_804fbb7, -1
  store i32 %v1_804fbbe, i32* %edx.global-to-local, align 4
  %v2_804fbbf = add i32 %v0_804fbb7, -4
  %v3_804fbbf = inttoptr i32 %v2_804fbbf to i32*
  store i32 %v1_804fbbe, i32* %v3_804fbbf, align 4
  %v2_804fbc0 = add i32 %v0_804fbb7, -8
  %v3_804fbc0 = inttoptr i32 %v2_804fbc0 to i32*
  store i32 %v3_804fbb2, i32* %v3_804fbc0, align 4
  %v0_804fbc1 = load i32, i32* @edi, align 4
  %v1_804fbc1 = add i32 %v0_804fbc1, 24
  %v2_804fbc1 = inttoptr i32 %v1_804fbc1 to i32*
  %v3_804fbc1 = load i32, i32* %v2_804fbc1, align 4
  store i32 %v3_804fbc1, i32* %eax.global-to-local, align 4
  %v2_804fbc4 = add i32 %v0_804fbb7, -12
  %v3_804fbc4 = inttoptr i32 %v2_804fbc4 to i32*
  store i32 %v3_804fbc1, i32* %v3_804fbc4, align 4
  %v1_804fbc5 = add i32 %v0_804fbb7, 24
  %v2_804fbc5 = inttoptr i32 %v1_804fbc5 to i32*
  %v3_804fbc5 = load i32, i32* %v2_804fbc5, align 4
  store i32 %v3_804fbc5, i32* %eax.global-to-local, align 4
  %v2_804fbc9 = add i32 %v0_804fbb7, -16
  %v3_804fbc9 = inttoptr i32 %v2_804fbc9 to i32*
  store i32 %v3_804fbc5, i32* %v3_804fbc9, align 4
  %v0_804fbca = call i32 @function_8051130()
  %v0_804fbcf = load i32, i32* @esp, align 4
  %v1_804fbd2 = add i32 %v0_804fbca, 1
  %v8_804fbd2 = icmp eq i32 %v1_804fbd2, 0
  store i32 %v1_804fbd2, i32* %eax.global-to-local, align 4
  %v1_80500f5 = add i32 %v0_804fbcf, 16
  %v2_80500f5 = inttoptr i32 %v1_80500f5 to i32*
  store i32 30, i32* %v2_80500f5, align 4
  %v2_80500f7 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80500f7, i32* %eax.global-to-local, align 4
  %v0_80500fc = load i32, i32* @esp, align 4
  %v1_80500fc = inttoptr i32 %v0_80500fc to i32*
  br i1 %v8_804fbd2, label %dec_label_pc_80500f2, label %dec_label_pc_804fbd9

dec_label_pc_804fbd9:                             ; preds = %dec_label_pc_804fb9c
  %v2_804fbe3 = load i32, i32* %v1_80500fc, align 4
  store i32 %v2_804fbe3, i32* %eax.global-to-local, align 4
  %v0_804fbe4 = load i32, i32* @edi, align 4
  %v1_804fbe4 = add i32 %v0_804fbe4, 4
  %v2_804fbe4 = inttoptr i32 %v1_804fbe4 to i32*
  %v3_804fbe4 = load i32, i32* %v2_804fbe4, align 4
  store i32 %v3_804fbe4, i32* %eax.global-to-local, align 4
  store i32 %v3_804fbe4, i32* %v1_80500fc, align 4
  %v1_804fbe8 = call i32 @function_80515f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804fbe8, i32* %eax.global-to-local, align 4
  %v0_804fbed = load i32, i32* @edi, align 4
  %v1_804fbed = add i32 %v0_804fbed, 284
  %v2_804fbed = inttoptr i32 %v1_804fbed to i8*
  %v3_804fbed = load i8, i8* %v2_804fbed, align 1
  %v4_804fbed = zext i8 %v3_804fbed to i32
  %v6_804fbed = and i32 %v1_804fbe8, -256
  %v7_804fbed = or i32 %v4_804fbed, %v6_804fbed
  %v1_804fbf6 = add i32 %v7_804fbed, 1
  store i32 %v1_804fbf6, i32* %eax.global-to-local, align 4
  %v1_804fbf7 = add i32 %v0_804fbed, 4
  %v2_804fbf7 = inttoptr i32 %v1_804fbf7 to i32*
  store i32 -1, i32* %v2_804fbf7, align 4
  %v0_804fbfe = load i32, i32* %eax.global-to-local, align 4
  %v1_804fbfe = trunc i32 %v0_804fbfe to i8
  %v2_804fbfe = load i32, i32* @edi, align 4
  %v3_804fbfe = add i32 %v2_804fbfe, 284
  %v4_804fbfe = inttoptr i32 %v3_804fbfe to i8*
  store i8 %v1_804fbfe, i8* %v4_804fbfe, align 1
  %v0_804fc04 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fc04 = trunc i32 %v0_804fc04 to i8
  %v10_804fc04 = icmp eq i8 %v1_804fc04, 10
  %v1_804fc06 = icmp eq i1 %v10_804fc04, false
  %v0_80500e3 = load i32, i32* @edi, align 4
  br i1 %v1_804fc06, label %dec_label_pc_80500e3, label %dec_label_pc_804fc0c

dec_label_pc_804fc0c:                             ; preds = %dec_label_pc_804fbd9
  %v1_804fc0c = add i32 %v0_80500e3, 284
  %v2_804fc0c = inttoptr i32 %v1_804fc0c to i8*
  store i8 0, i8* %v2_804fc0c, align 1
  %v0_804fc13 = load i32, i32* @edi, align 4
  %v1_804fc13 = add i32 %v0_804fc13, 12
  %v2_804fc13 = inttoptr i32 %v1_804fc13 to i32*
  store i32 0, i32* %v2_804fc13, align 4
  store i32 -1, i32* @ebp, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_804fc1d:                             ; preds = %dec_label_pc_804fdf9, %dec_label_pc_804fce2, %dec_label_pc_804ffeb, %dec_label_pc_804ff72, %dec_label_pc_8050064, %dec_label_pc_804ff21, %dec_label_pc_804f8e5, %dec_label_pc_8050175, %dec_label_pc_80500e3, %dec_label_pc_804fb37, %dec_label_pc_804fea8, %dec_label_pc_804fc0c
  %v0_804fc1d = load i32, i32* @edi, align 4
  %v1_804fc1d = add i32 %v0_804fc1d, 24
  %v2_804fc1d = inttoptr i32 %v1_804fc1d to i32*
  %v3_804fc1d = load i32, i32* %v2_804fc1d, align 4
  store i32 %v3_804fc1d, i32* @edx, align 4
  store i32 %v3_804fc1d, i32* %eax.global-to-local, align 4
  %v1_804fc22 = load i32, i32* @ebp, align 4
  %v2_804fc22 = sub i32 %v3_804fc1d, %v1_804fc22
  %v8_804fc22 = xor i32 %v1_804fc22, %v3_804fc1d
  %v9_804fc22 = xor i32 %v2_804fc22, %v3_804fc1d
  %v10_804fc22 = and i32 %v9_804fc22, %v8_804fc22
  %v11_804fc22 = icmp slt i32 %v10_804fc22, 0
  %v12_804fc22 = icmp eq i32 %v2_804fc22, 0
  %v13_804fc22 = icmp slt i32 %v2_804fc22, 0
  %v3_804fc24 = icmp ne i1 %v13_804fc22, %v11_804fc22
  %v4_804fc24 = or i1 %v12_804fc22, %v3_804fc24
  br i1 %v4_804fc24, label %dec_label_pc_804fc28, label %dec_label_pc_804fc26

dec_label_pc_804fc26:                             ; preds = %dec_label_pc_804fc1d
  store i32 %v1_804fc22, i32* @edx, align 4
  br label %dec_label_pc_804fc28

dec_label_pc_804fc28:                             ; preds = %dec_label_pc_804fc1d, %dec_label_pc_804fc26
  %v1_804fc28 = phi i32 [ %v3_804fc1d, %dec_label_pc_804fc1d ], [ %v1_804fc22, %dec_label_pc_804fc26 ]
  %v2_804fc28 = sub i32 %v3_804fc1d, %v1_804fc28
  store i32 %v2_804fc28, i32* %eax.global-to-local, align 4
  store i32 %v2_804fc28, i32* %v2_804fc1d, align 4
  %v0_804fc2d = load i32, i32* @ebx, align 4
  %v1_804fc2d = load i32, i32* @esp, align 4
  %v2_804fc2d = add i32 %v1_804fc2d, -4
  %v3_804fc2d = inttoptr i32 %v2_804fc2d to i32*
  store i32 %v0_804fc2d, i32* %v3_804fc2d, align 4
  %v0_804fc2e = load i32, i32* %eax.global-to-local, align 4
  %v2_804fc2e = add i32 %v1_804fc2d, -8
  %v3_804fc2e = inttoptr i32 %v2_804fc2e to i32*
  store i32 %v0_804fc2e, i32* %v3_804fc2e, align 4
  %v1_804fc2f = add i32 %v1_804fc2d, 8
  %v2_804fc2f = inttoptr i32 %v1_804fc2f to i32*
  %v3_804fc2f = load i32, i32* %v2_804fc2f, align 4
  %v1_804fc33 = load i32, i32* @edx, align 4
  %v2_804fc33 = add i32 %v1_804fc33, %v3_804fc2f
  store i32 %v2_804fc33, i32* %eax.global-to-local, align 4
  %v2_804fc35 = add i32 %v1_804fc2d, -12
  %v3_804fc35 = inttoptr i32 %v2_804fc35 to i32*
  store i32 %v2_804fc33, i32* %v3_804fc35, align 4
  %v3_804fc36 = load i32, i32* %v2_804fc2f, align 4
  store i32 %v3_804fc36, i32* %ecx.global-to-local, align 4
  %v2_804fc3a = add i32 %v1_804fc2d, -16
  %v3_804fc3a = inttoptr i32 %v2_804fc3a to i32*
  store i32 %v3_804fc36, i32* %v3_804fc3a, align 4
  %v4_804fc3b = call i32 @function_8051b27(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804fc3b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f84e

dec_label_pc_804fc48:                             ; preds = %dec_label_pc_804f84e
  %v1_804fc48 = add i32 %v0_804f84e, 24
  %v2_804fc48 = inttoptr i32 %v1_804fc48 to i32*
  %v3_804fc48 = load i32, i32* %v2_804fc48, align 4
  %v1_804fc4b = add i32 %v3_804fc48, -1
  store i32 %v1_804fc4b, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_804fc4b, 1
  br i1 %tmp139, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804fc54.preheader

dec_label_pc_804fc54.preheader:                   ; preds = %dec_label_pc_804fc48
  %v7_804fc54.pre = load i32, i32* @edx, align 4
  %v2_804fc54 = add i32 %v0_804f84e, 28
  br label %dec_label_pc_804fc54

dec_label_pc_804fc54:                             ; preds = %dec_label_pc_804fc54.preheader, %dec_label_pc_804fc85
  %v7_804fc54 = phi i32 [ %v7_804fc54.pre, %dec_label_pc_804fc54.preheader ], [ %v9_804fc54, %dec_label_pc_804fc85 ]
  %v0_804ffd7 = phi i32 [ %v1_804fc4b, %dec_label_pc_804fc54.preheader ], [ %v1_804fc85, %dec_label_pc_804fc85 ]
  %v3_804fc54 = add i32 %v2_804fc54, %v0_804ffd7
  %v4_804fc54 = inttoptr i32 %v3_804fc54 to i8*
  %v5_804fc54 = load i8, i8* %v4_804fc54, align 1
  %v6_804fc54 = zext i8 %v5_804fc54 to i32
  %v8_804fc54 = and i32 %v7_804fc54, -256
  %v9_804fc54 = or i32 %v6_804fc54, %v8_804fc54
  store i32 %v9_804fc54, i32* %edx.global-to-local, align 4
  %v10_804fc58 = icmp eq i8 %v5_804fc54, 58
  br i1 %v10_804fc58, label %dec_label_pc_804ffd7, label %dec_label_pc_804fc61

dec_label_pc_804fc61:                             ; preds = %dec_label_pc_804fc54
  %v10_804fc61 = icmp eq i8 %v5_804fc54, 62
  br i1 %v10_804fc61, label %dec_label_pc_804ffd7, label %dec_label_pc_804fc6a

dec_label_pc_804fc6a:                             ; preds = %dec_label_pc_804fc61
  %v10_804fc6a = icmp eq i8 %v5_804fc54, 36
  br i1 %v10_804fc6a, label %dec_label_pc_804ffd7, label %dec_label_pc_804fc73

dec_label_pc_804fc73:                             ; preds = %dec_label_pc_804fc6a
  %v10_804fc73 = icmp eq i8 %v5_804fc54, 35
  br i1 %v10_804fc73, label %dec_label_pc_804ffd7, label %dec_label_pc_804fc7c

dec_label_pc_804fc7c:                             ; preds = %dec_label_pc_804fc73
  %v10_804fc7c = icmp eq i8 %v5_804fc54, 37
  br i1 %v10_804fc7c, label %dec_label_pc_804ffd7, label %dec_label_pc_804fc85

dec_label_pc_804fc85:                             ; preds = %dec_label_pc_804fc7c
  %v1_804fc85 = add i32 %v0_804ffd7, -1
  %v8_804fc85 = icmp eq i32 %v1_804fc85, 0
  store i32 %v1_804fc85, i32* %eax.global-to-local, align 4
  %v1_804fc86 = icmp eq i1 %v8_804fc85, false
  br i1 %v1_804fc86, label %dec_label_pc_804fc54, label %dec_label_pc_804f7dc.backedge

dec_label_pc_804fc90:                             ; preds = %dec_label_pc_804f84e
  %v1_804fc90 = add i32 %v0_804f84e, 24
  %v2_804fc90 = inttoptr i32 %v1_804fc90 to i32*
  %v3_804fc90 = load i32, i32* %v2_804fc90, align 4
  %v1_804fc93 = add i32 %v3_804fc90, -1
  store i32 %v1_804fc93, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_804fc93, 1
  br i1 %tmp140, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804fc9c

dec_label_pc_804fc9c:                             ; preds = %dec_label_pc_804fc90
  %v2_804fc9c = add i32 %v0_804f84e, 27
  %v3_804fc9c = add i32 %v2_804fc9c, %v3_804fc90
  %v4_804fc9c = inttoptr i32 %v3_804fc9c to i8*
  %v5_804fc9c = load i8, i8* %v4_804fc9c, align 1
  %v6_804fc9c = zext i8 %v5_804fc9c to i32
  %v7_804fc9c = load i32, i32* @edx, align 4
  %v8_804fc9c = and i32 %v7_804fc9c, -256
  %v9_804fc9c = or i32 %v8_804fc9c, %v6_804fc9c
  store i32 %v9_804fc9c, i32* %edx.global-to-local, align 4
  %v10_804fca0 = icmp eq i8 %v5_804fc9c, 62
  br i1 %v10_804fca0, label %dec_label_pc_804fcce.thread, label %dec_label_pc_804fca5

dec_label_pc_804fca5:                             ; preds = %dec_label_pc_804fc9c
  %v10_804fca5 = icmp eq i8 %v5_804fc9c, 58
  br i1 %v10_804fca5, label %dec_label_pc_804fcce.thread, label %dec_label_pc_804fcaa

dec_label_pc_804fcaa:                             ; preds = %dec_label_pc_804fca5, %dec_label_pc_804fcc9
  %v0_804fcb9 = phi i32 [ %v1_804fcb9, %dec_label_pc_804fcc9 ], [ %v1_804fc93, %dec_label_pc_804fca5 ]
  %v7_804fcc0 = phi i32 [ %v9_804fcc0, %dec_label_pc_804fcc9 ], [ %v9_804fc9c, %dec_label_pc_804fca5 ]
  %v1_804fcaa = trunc i32 %v7_804fcc0 to i8
  %v10_804fcaa = icmp eq i8 %v1_804fcaa, 36
  br i1 %v10_804fcaa, label %dec_label_pc_804fcce, label %dec_label_pc_804fcaf

dec_label_pc_804fcaf:                             ; preds = %dec_label_pc_804fcaa
  %v10_804fcaf = icmp eq i8 %v1_804fcaa, 35
  br i1 %v10_804fcaf, label %dec_label_pc_804fcce, label %dec_label_pc_804fcb4

dec_label_pc_804fcb4:                             ; preds = %dec_label_pc_804fcaf
  %v10_804fcb4 = icmp eq i8 %v1_804fcaa, 37
  br i1 %v10_804fcb4, label %dec_label_pc_804fcce, label %dec_label_pc_804fcb9

dec_label_pc_804fcb9:                             ; preds = %dec_label_pc_804fcb4
  %v1_804fcb9 = add i32 %v0_804fcb9, -1
  %v8_804fcb9 = icmp eq i32 %v1_804fcb9, 0
  store i32 %v1_804fcb9, i32* %eax.global-to-local, align 4
  br i1 %v8_804fcb9, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804fcc0

dec_label_pc_804fcc0:                             ; preds = %dec_label_pc_804fcb9
  %v3_804fcc0 = add i32 %v2_804fc9c, %v0_804fcb9
  %v4_804fcc0 = inttoptr i32 %v3_804fcc0 to i8*
  %v5_804fcc0 = load i8, i8* %v4_804fcc0, align 1
  %v6_804fcc0 = zext i8 %v5_804fcc0 to i32
  %v8_804fcc0 = and i32 %v7_804fcc0, -256
  %v9_804fcc0 = or i32 %v6_804fcc0, %v8_804fcc0
  store i32 %v9_804fcc0, i32* %edx.global-to-local, align 4
  %v10_804fcc4 = icmp eq i8 %v5_804fcc0, 58
  br i1 %v10_804fcc4, label %dec_label_pc_804fcce, label %dec_label_pc_804fcc9

dec_label_pc_804fcc9:                             ; preds = %dec_label_pc_804fcc0
  %v10_804fcc9 = icmp eq i8 %v5_804fcc0, 62
  %v1_804fccc = icmp eq i1 %v10_804fcc9, false
  br i1 %v1_804fccc, label %dec_label_pc_804fcaa, label %dec_label_pc_804fcce

dec_label_pc_804fcce.thread:                      ; preds = %dec_label_pc_804fca5, %dec_label_pc_804fc9c
  store i32 %v3_804fc90, i32* @ebp, align 4
  br label %dec_label_pc_804fcda

dec_label_pc_804fcce:                             ; preds = %dec_label_pc_804fcc9, %dec_label_pc_804fcc0, %dec_label_pc_804fcb4, %dec_label_pc_804fcaf, %dec_label_pc_804fcaa
  %v0_804fcce = phi i32 [ %v0_804fcb9, %dec_label_pc_804fcaa ], [ %v0_804fcb9, %dec_label_pc_804fcaf ], [ %v0_804fcb9, %dec_label_pc_804fcb4 ], [ %v1_804fcb9, %dec_label_pc_804fcc0 ], [ %v1_804fcb9, %dec_label_pc_804fcc9 ]
  %v1_804fcce = add i32 %v0_804fcce, 1
  store i32 %v1_804fcce, i32* @ebp, align 4
  %v10_804fcd1 = icmp eq i32 %v0_804fcce, -2
  br i1 %v10_804fcd1, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804fcda

dec_label_pc_804fcda:                             ; preds = %dec_label_pc_804fcce.thread, %dec_label_pc_804fcce
  %v1_804fcce158 = phi i32 [ %v3_804fc90, %dec_label_pc_804fcce.thread ], [ %v1_804fcce, %dec_label_pc_804fcce ]
  %tmp141 = icmp slt i32 %v1_804fcce158, 1
  br i1 %tmp141, label %dec_label_pc_804fdf9, label %dec_label_pc_804fce2

dec_label_pc_804fce2:                             ; preds = %dec_label_pc_804fcda
  %v0_804fce2 = load i32, i32* @esp, align 4
  %v1_804fce5 = add i32 %v0_804fce2, -16
  %v2_804fce5 = inttoptr i32 %v1_804fce5 to i32*
  store i32 28, i32* %v2_804fce5, align 4
  %v2_804fce7 = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804fce7, i32* %eax.global-to-local, align 4
  %v0_804fcec = load i32, i32* @esp, align 4
  %v1_804fcec = inttoptr i32 %v0_804fcec to i32*
  %v2_804fcec = load i32, i32* %v1_804fcec, align 4
  store i32 %v2_804fcec, i32* %eax.global-to-local, align 4
  %v3_804fcec = add i32 %v0_804fcec, 4
  %v1_804fced = inttoptr i32 %v3_804fcec to i32*
  %v2_804fced = load i32, i32* %v1_804fced, align 4
  store i32 %v2_804fced, i32* %edx.global-to-local, align 4
  %v1_804fcee = add i32 %v0_804fcec, 1868
  store i32 %v1_804fcee, i32* %eax.global-to-local, align 4
  store i32 %v1_804fcee, i32* %v1_804fced, align 4
  store i32 28, i32* %v1_804fcec, align 4
  %v3_804fcf8 = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_804fcf8, i32* %eax.global-to-local, align 4
  %v0_804fcfd = load i32, i32* @esp, align 4
  %v1_804fcfd = add i32 %v0_804fcfd, -4
  %v2_804fcfd = inttoptr i32 %v1_804fcfd to i32*
  store i32 16384, i32* %v2_804fcfd, align 4
  %v1_804fd02 = add i32 %v0_804fcfd, 1868
  %v2_804fd02 = inttoptr i32 %v1_804fd02 to i32*
  %v3_804fd02 = load i32, i32* %v2_804fd02, align 4
  store i32 %v3_804fd02, i32* @esi, align 4
  %v2_804fd09 = add i32 %v0_804fcfd, -8
  %v3_804fd09 = inttoptr i32 %v2_804fd09 to i32*
  store i32 %v3_804fd02, i32* %v3_804fd09, align 4
  %v2_804fd0a = add i32 %v0_804fcfd, -12
  %v3_804fd0a = inttoptr i32 %v2_804fd0a to i32*
  store i32 %v3_804fcf8, i32* %v3_804fd0a, align 4
  %v0_804fd0b = load i32, i32* @edi, align 4
  %v1_804fd0b = add i32 %v0_804fd0b, 4
  %v2_804fd0b = inttoptr i32 %v1_804fd0b to i32*
  %v3_804fd0b = load i32, i32* %v2_804fd0b, align 4
  store i32 %v3_804fd0b, i32* @ebx, align 4
  %v2_804fd0e = add i32 %v0_804fcfd, -16
  %v3_804fd0e = inttoptr i32 %v2_804fd0e to i32*
  store i32 %v3_804fd0b, i32* %v3_804fd0e, align 4
  %v0_804fd0f = call i32 @function_8051d23()
  store i32 %v0_804fd0f, i32* %eax.global-to-local, align 4
  %v0_804fd14 = load i32, i32* @esp, align 4
  %v1_804fd17 = add i32 %v0_804fd14, 28
  %v2_804fd17 = inttoptr i32 %v1_804fd17 to i32*
  store i32 16384, i32* %v2_804fd17, align 4
  %v1_804fd1c = add i32 %v0_804fd14, 24
  %v2_804fd1c = inttoptr i32 %v1_804fd1c to i32*
  store i32 2, i32* %v2_804fd1c, align 4
  %v1_804fd1e = add i32 %v0_804fd14, 20
  %v2_804fd1e = inttoptr i32 %v1_804fd1e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_804fd1e, align 4
  %v0_804fd23 = load i32, i32* @edi, align 4
  %v1_804fd23 = add i32 %v0_804fd23, 4
  %v2_804fd23 = inttoptr i32 %v1_804fd23 to i32*
  %v3_804fd23 = load i32, i32* %v2_804fd23, align 4
  store i32 %v3_804fd23, i32* %ecx.global-to-local, align 4
  %v2_804fd26 = add i32 %v0_804fd14, 16
  %v3_804fd26 = inttoptr i32 %v2_804fd26 to i32*
  store i32 %v3_804fd23, i32* %v3_804fd26, align 4
  %v0_804fd27 = call i32 @function_8051d23()
  store i32 %v0_804fd27, i32* %eax.global-to-local, align 4
  %v0_804fd2c = load i32, i32* @esp, align 4
  %v1_804fd2c = inttoptr i32 %v0_804fd2c to i32*
  store i32 28, i32* %v1_804fd2c, align 4
  %v2_804fd33 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804fd33, i32* %eax.global-to-local, align 4
  %v0_804fd3b = load i32, i32* @edi, align 4
  %v1_804fd3b = add i32 %v0_804fd3b, 12
  %v2_804fd3b = inttoptr i32 %v1_804fd3b to i32*
  store i32 10, i32* %v2_804fd3b, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_804fd47:                             ; preds = %dec_label_pc_804f87d
  %v1_804fd47 = add i32 %v0_804f86b, 2
  store i32 %v1_804fd47, i32* @ebx, align 4
  %v1_804fd4a = add i32 %v0_804fd4a, 2
  store i32 %v1_804fd4a, i32* @ebp, align 4
  br label %dec_label_pc_804f867.backedge

dec_label_pc_804f867.backedge:                    ; preds = %dec_label_pc_804fd47, %dec_label_pc_80500a2
  %v0_804f8e5124 = phi i32 [ %v0_804f8e5125, %dec_label_pc_804fd47 ], [ %v0_80500db, %dec_label_pc_80500a2 ]
  %v1_804f867 = phi i32 [ %v1_804f877, %dec_label_pc_804fd47 ], [ %v3_80500db, %dec_label_pc_80500a2 ]
  %v0_804f867 = phi i32 [ %v1_804fd4a, %dec_label_pc_804fd47 ], [ %v0_804f867.pre, %dec_label_pc_80500a2 ]
  %v5_804f87d109 = phi i32 [ %v7_804f87d, %dec_label_pc_804fd47 ], [ %v0_80500d3, %dec_label_pc_80500a2 ]
  %v0_804f870104 = phi i32 [ %v0_804fd69, %dec_label_pc_804fd47 ], [ %v1_80500d8, %dec_label_pc_80500a2 ]
  %v2_804f867 = sub i32 %v0_804f867, %v1_804f867
  %v8_804f867 = xor i32 %v0_804f867, %v1_804f867
  %v9_804f867 = xor i32 %v2_804f867, %v0_804f867
  %v10_804f867 = and i32 %v9_804f867, %v8_804f867
  %v11_804f867 = icmp slt i32 %v10_804f867, 0
  %v13_804f867 = icmp slt i32 %v2_804f867, 0
  %v2_804f869 = icmp eq i1 %v13_804f867, %v11_804f867
  br i1 %v2_804f869, label %dec_label_pc_804f8dd, label %dec_label_pc_804f86b.preheader

dec_label_pc_804fd52:                             ; preds = %dec_label_pc_804f897
  store i8 -4, i8* %v1_804f897, align 1
  %v0_804fd55 = load i32, i32* @ebx, align 4
  %v1_804fd55 = add i32 %v0_804fd55, 2
  %v2_804fd55 = inttoptr i32 %v1_804fd55 to i8*
  %v3_804fd55 = load i8, i8* %v2_804fd55, align 1
  %v4_804fd55 = zext i8 %v3_804fd55 to i32
  %v5_804fd55 = load i32, i32* %eax.global-to-local, align 4
  %v6_804fd55 = and i32 %v5_804fd55, -256
  %v7_804fd55 = or i32 %v6_804fd55, %v4_804fd55
  store i32 %v7_804fd55, i32* %eax.global-to-local, align 4
  %v11_804fd58 = icmp eq i8 %v3_804fd55, -3
  %v1_804fd5a = icmp eq i1 %v11_804fd58, false
  br i1 %v1_804fd5a, label %dec_label_pc_804f8b4, label %dec_label_pc_804fd60

dec_label_pc_804fd60:                             ; preds = %dec_label_pc_804fd52, %dec_label_pc_804f8a9
  %v0_804fd60 = phi i32 [ %v0_804fd55, %dec_label_pc_804fd52 ], [ %v0_804f8a9, %dec_label_pc_804f8a9 ]
  %v1_804fd60 = add i32 %v0_804fd60, 2
  %v2_804fd60 = inttoptr i32 %v1_804fd60 to i8*
  store i8 -4, i8* %v2_804fd60, align 1
  br label %dec_label_pc_804f8bc

dec_label_pc_804fd69:                             ; preds = %dec_label_pc_804f888
  %v1_804fd69 = add i32 %v0_804fd69, 1863
  %v2_804fd69 = inttoptr i32 %v1_804fd69 to i8*
  store i8 -1, i8* %v2_804fd69, align 1
  %v0_804fd71 = load i32, i32* @esp, align 4
  %v1_804fd71 = add i32 %v0_804fd71, 1864
  %v2_804fd71 = inttoptr i32 %v1_804fd71 to i8*
  store i8 -5, i8* %v2_804fd71, align 1
  %v0_804fd79 = load i32, i32* @esp, align 4
  %v1_804fd79 = add i32 %v0_804fd79, 1865
  %v2_804fd79 = inttoptr i32 %v1_804fd79 to i8*
  store i8 31, i8* %v2_804fd79, align 1
  %v0_804fd81 = load i32, i32* @esp, align 4
  %v1_804fd81 = add i32 %v0_804fd81, 1831
  %v2_804fd81 = inttoptr i32 %v1_804fd81 to i8*
  store i8 -1, i8* %v2_804fd81, align 1
  %v0_804fd89 = load i32, i32* @esp, align 4
  %v1_804fd89 = add i32 %v0_804fd89, 1832
  %v2_804fd89 = inttoptr i32 %v1_804fd89 to i8*
  store i8 -6, i8* %v2_804fd89, align 1
  %v0_804fd91 = load i32, i32* @esp, align 4
  %v1_804fd91 = add i32 %v0_804fd91, 1833
  %v2_804fd91 = inttoptr i32 %v1_804fd91 to i8*
  store i8 31, i8* %v2_804fd91, align 1
  %v0_804fd99 = load i32, i32* @esp, align 4
  %v1_804fd99 = add i32 %v0_804fd99, 1834
  %v2_804fd99 = inttoptr i32 %v1_804fd99 to i8*
  store i8 0, i8* %v2_804fd99, align 1
  %v0_804fda1 = load i32, i32* @esp, align 4
  %v1_804fda1 = add i32 %v0_804fda1, 1835
  %v2_804fda1 = inttoptr i32 %v1_804fda1 to i8*
  store i8 80, i8* %v2_804fda1, align 1
  %v0_804fda9 = load i32, i32* @esp, align 4
  %v1_804fda9 = add i32 %v0_804fda9, 1836
  %v2_804fda9 = inttoptr i32 %v1_804fda9 to i8*
  store i8 0, i8* %v2_804fda9, align 1
  %v0_804fdb1 = load i32, i32* @esp, align 4
  %v1_804fdb1 = add i32 %v0_804fdb1, 1837
  %v2_804fdb1 = inttoptr i32 %v1_804fdb1 to i8*
  store i8 24, i8* %v2_804fdb1, align 1
  %v0_804fdb9 = load i32, i32* @esp, align 4
  %v1_804fdb9 = add i32 %v0_804fdb9, 1838
  %v2_804fdb9 = inttoptr i32 %v1_804fdb9 to i8*
  store i8 -1, i8* %v2_804fdb9, align 1
  %v0_804fdc1 = load i32, i32* @esp, align 4
  %v1_804fdc1 = add i32 %v0_804fdc1, 1839
  %v2_804fdc1 = inttoptr i32 %v1_804fdc1 to i8*
  store i8 -16, i8* %v2_804fdc1, align 1
  %v0_804fdc9 = load i32, i32* @esp, align 4
  %v1_804fdc9 = add i32 %v0_804fdc9, 8
  %v2_804fdc9 = inttoptr i32 %v1_804fdc9 to i32*
  %v3_804fdc9 = load i32, i32* %v2_804fdc9, align 4
  store i32 %v3_804fdc9, i32* %eax.global-to-local, align 4
  %v0_804fdcd = load i32, i32* @edi, align 4
  %v1_804fdcd = add i32 %v0_804fdcd, 24
  %v2_804fdcd = inttoptr i32 %v1_804fdcd to i32*
  %v3_804fdcd = load i32, i32* %v2_804fdcd, align 4
  store i32 %v3_804fdcd, i32* %ecx.global-to-local, align 4
  %v0_804fdd0 = load i32, i32* @ebx, align 4
  %v1_804fdd0 = add i32 %v0_804fdd0, 2
  store i32 %v1_804fdd0, i32* %edx.global-to-local, align 4
  %v2_804fdd3 = add i32 %v3_804fdcd, %v3_804fdc9
  store i32 %v2_804fdd3, i32* %eax.global-to-local, align 4
  %tmp271 = icmp ugt i32 %v2_804fdd3, %v1_804fdd0
  br i1 %tmp271, label %dec_label_pc_804fddd, label %dec_label_pc_804fd69.dec_label_pc_804f8dd.loopexit_crit_edge

dec_label_pc_804fd69.dec_label_pc_804f8dd.loopexit_crit_edge: ; preds = %dec_label_pc_804fd69
  %v0_804f8dd.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f8dd

dec_label_pc_804fddd:                             ; preds = %dec_label_pc_804fd69
  %v2_804fddd = inttoptr i32 %v1_804fdd0 to i8*
  %v3_804fddd = load i8, i8* %v2_804fddd, align 1
  %v12_804fddd = icmp eq i8 %v3_804fddd, 31
  br i1 %v12_804fddd, label %dec_label_pc_80500a2, label %dec_label_pc_804fde7

dec_label_pc_804fde7:                             ; preds = %dec_label_pc_804fddd
  %v1_804fde7 = inttoptr i32 %v0_804fdd0 to i8*
  %v2_804fde7 = load i8, i8* %v1_804fde7, align 1
  %v3_804fde7 = zext i8 %v2_804fde7 to i32
  %v5_804fde7 = and i32 %v2_804fdd3, -256
  %v6_804fde7 = or i32 %v3_804fde7, %v5_804fde7
  store i32 %v6_804fde7, i32* %eax.global-to-local, align 4
  %v11_804fde9 = icmp eq i8 %v2_804fde7, -3
  %v1_804fdeb = icmp eq i1 %v11_804fde9, false
  br i1 %v1_804fdeb, label %dec_label_pc_805033b, label %dec_label_pc_804fdf1

dec_label_pc_804fdf1:                             ; preds = %dec_label_pc_804fde7
  store i8 -4, i8* %v1_804fde7, align 1
  br label %dec_label_pc_804f897

dec_label_pc_804fdf9:                             ; preds = %dec_label_pc_804fcda, %dec_label_pc_804ffe3, %dec_label_pc_804ff6a, %dec_label_pc_805005c, %dec_label_pc_804ff19, %dec_label_pc_804f8dd, %dec_label_pc_8050149, %dec_label_pc_804fb2f, %dec_label_pc_804fea0
  %v0_804fdf9 = phi i32 [ %v1_804fcce158, %dec_label_pc_804fcda ], [ %v1_804ffd7, %dec_label_pc_804ffe3 ], [ %v1_804ff5e, %dec_label_pc_804ff6a ], [ %v0_805005c, %dec_label_pc_805005c ], [ %v0_804ff19, %dec_label_pc_804ff19 ], [ %v0_804f8dd, %dec_label_pc_804f8dd ], [ %v0_8050140, %dec_label_pc_8050149 ], [ %v1_804fb23155, %dec_label_pc_804fb2f ], [ %v1_804fe94, %dec_label_pc_804fea0 ]
  %v1_804fdf9 = icmp eq i32 %v0_804fdf9, 0
  %v1_804fdfb = icmp eq i1 %v1_804fdf9, false
  br i1 %v1_804fdfb, label %dec_label_pc_804fc1d, label %dec_label_pc_804f7dc.backedge

dec_label_pc_804fe06:                             ; preds = %dec_label_pc_804f7f7
  %v1_804f824 = icmp eq i32 %v0_804f81c, 0
  br i1 %v1_804f824, label %dec_label_pc_805035d, label %dec_label_pc_804fe0c

dec_label_pc_804fe0c:                             ; preds = %dec_label_pc_804fe06
  %v10_804fe0c = icmp eq i32 %v0_804f81c, -1
  %v1_804fe0f = icmp eq i1 %v10_804fe0c, false
  br i1 %v1_804fe0f, label %dec_label_pc_804f83e, label %dec_label_pc_804fe15

dec_label_pc_804fe15:                             ; preds = %dec_label_pc_804fe0c
  %v1_804fe15 = add i32 %v0_804f821, 40
  %v2_804fe15 = inttoptr i32 %v1_804fe15 to i32*
  %v3_804fe15 = load i32, i32* %v2_804fe15, align 4
  store i32 %v3_804fe15, i32* %edx.global-to-local, align 4
  %v1_804fe19 = inttoptr i32 %v3_804fe15 to i32*
  %v2_804fe19 = load i32, i32* %v1_804fe19, align 4
  %v11_804fe19 = icmp eq i32 %v2_804fe19, 11
  br i1 %v11_804fe19, label %dec_label_pc_804f779, label %dec_label_pc_804fe22

dec_label_pc_804fe22:                             ; preds = %dec_label_pc_804fe15, %dec_label_pc_805035d
  %v0_804fe22 = phi i32 [ %v1_804f821, %dec_label_pc_804fe15 ], [ %v0_804fe22.pre, %dec_label_pc_805035d ]
  %v0_804fe25 = load i32, i32* @edi, align 4
  %v1_804fe25 = add i32 %v0_804fe25, 4
  %v2_804fe25 = inttoptr i32 %v1_804fe25 to i32*
  %v3_804fe25 = load i32, i32* %v2_804fe25, align 4
  store i32 %v3_804fe25, i32* @esi, align 4
  %v2_804fe28 = add i32 %v0_804fe22, -16
  %v3_804fe28 = inttoptr i32 %v2_804fe28 to i32*
  store i32 %v3_804fe25, i32* %v3_804fe28, align 4
  %v1_804fe29 = call i32 @function_80515f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_804fe29, i32* %eax.global-to-local, align 4
  %v0_804fe2e = load i32, i32* @edi, align 4
  %v1_804fe2e = add i32 %v0_804fe2e, 284
  %v2_804fe2e = inttoptr i32 %v1_804fe2e to i8*
  %v3_804fe2e = load i8, i8* %v2_804fe2e, align 1
  %v4_804fe2e = zext i8 %v3_804fe2e to i32
  %v6_804fe2e = and i32 %v1_804fe29, -256
  %v7_804fe2e = or i32 %v4_804fe2e, %v6_804fe2e
  %v1_804fe37 = add i32 %v7_804fe2e, 1
  store i32 %v1_804fe37, i32* %eax.global-to-local, align 4
  %v1_804fe38 = add i32 %v0_804fe2e, 4
  %v2_804fe38 = inttoptr i32 %v1_804fe38 to i32*
  store i32 -1, i32* %v2_804fe38, align 4
  %v0_804fe3f = load i32, i32* %eax.global-to-local, align 4
  %v1_804fe3f = trunc i32 %v0_804fe3f to i8
  %v2_804fe3f = load i32, i32* @edi, align 4
  %v3_804fe3f = add i32 %v2_804fe3f, 284
  %v4_804fe3f = inttoptr i32 %v3_804fe3f to i8*
  store i8 %v1_804fe3f, i8* %v4_804fe3f, align 1
  %v0_804fe45 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fe45 = trunc i32 %v0_804fe45 to i8
  %tmp272 = icmp ult i8 %v1_804fe45, 10
  %v0_805036c = load i32, i32* @edi, align 4
  br i1 %tmp272, label %dec_label_pc_805036c, label %dec_label_pc_804fe4d

dec_label_pc_804fe4d:                             ; preds = %dec_label_pc_804fe22
  %v1_804fe4d = add i32 %v0_805036c, 284
  %v2_804fe4d = inttoptr i32 %v1_804fe4d to i8*
  store i8 0, i8* %v2_804fe4d, align 1
  %v0_804fe54 = load i32, i32* @edi, align 4
  %v1_804fe54 = add i32 %v0_804fe54, 12
  %v2_804fe54 = inttoptr i32 %v1_804fe54 to i32*
  store i32 0, i32* %v2_804fe54, align 4
  br label %dec_label_pc_804f779

dec_label_pc_804fe60:                             ; preds = %dec_label_pc_804f8b4
  %v1_804fe60 = add i32 %v0_804fe60, 2
  %v2_804fe60 = inttoptr i32 %v1_804fe60 to i8*
  store i8 -3, i8* %v2_804fe60, align 1
  br label %dec_label_pc_804f8bc

dec_label_pc_804fe69:                             ; preds = %dec_label_pc_804f7e3
  %v0_804fe69 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804fe69, i32* %edx.global-to-local, align 4
  %v1_804fe6b = load i32, i32* @esp, align 4
  %v2_804fe6b = add i32 %v1_804fe6b, -4
  %v3_804fe6b = inttoptr i32 %v2_804fe6b to i32*
  store i32 %v0_804fe69, i32* %v3_804fe6b, align 4
  %v0_804fe6c = load i32, i32* @edi, align 4
  %v1_804fe6c = add i32 %v0_804fe6c, 92
  store i32 %v1_804fe6c, i32* %eax.global-to-local, align 4
  %v1_804fe6f = add i32 %v1_804fe6b, -8
  %v2_804fe6f = inttoptr i32 %v1_804fe6f to i32*
  store i32 192, i32* %v2_804fe6f, align 4
  %v0_804fe74 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fe74 = add i32 %v1_804fe6b, -12
  %v3_804fe74 = inttoptr i32 %v2_804fe74 to i32*
  store i32 %v0_804fe74, i32* %v3_804fe74, align 4
  %v0_804fe75 = load i32, i32* %edx.global-to-local, align 4
  %v2_804fe75 = add i32 %v1_804fe6b, -16
  %v3_804fe75 = inttoptr i32 %v2_804fe75 to i32*
  store i32 %v0_804fe75, i32* %v3_804fe75, align 4
  %v4_804fe76 = call i32 @function_8051b27(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804fe76, i32* %eax.global-to-local, align 4
  %v0_804fe7b = load i32, i32* @edi, align 4
  %v1_804fe7b = add i32 %v0_804fe7b, 24
  %v2_804fe7b = inttoptr i32 %v1_804fe7b to i32*
  %v3_804fe7b = load i32, i32* %v2_804fe7b, align 4
  %v1_804fe7e = add i32 %v3_804fe7b, -64
  store i32 %v1_804fe7e, i32* %eax.global-to-local, align 4
  store i32 %v1_804fe7e, i32* %v2_804fe7b, align 4
  br label %dec_label_pc_804f7f7

dec_label_pc_804fe8c:                             ; preds = %dec_label_pc_804f8a1
  store i8 -3, i8* %v1_804f897, align 1
  %v5_804f8a9.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f8a9

dec_label_pc_804fe94:                             ; preds = %dec_label_pc_804fad4, %dec_label_pc_804facb, %dec_label_pc_804fac2, %dec_label_pc_804fab9, %dec_label_pc_804faac
  %v1_804fe94 = add i32 %v0_804fe94, 1
  store i32 %v1_804fe94, i32* @ebp, align 4
  %v10_804fe97 = icmp eq i32 %v0_804fe94, -2
  br i1 %v10_804fe97, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804fea0

dec_label_pc_804fea0:                             ; preds = %dec_label_pc_804fe94
  %tmp142 = icmp slt i32 %v1_804fe94, 1
  br i1 %tmp142, label %dec_label_pc_804fdf9, label %dec_label_pc_804fea8

dec_label_pc_804fea8:                             ; preds = %dec_label_pc_804fea0
  %v0_804fea8 = load i32, i32* @esp, align 4
  %v1_804feab = add i32 %v0_804fea8, -16
  %v2_804feab = inttoptr i32 %v1_804feab to i32*
  store i32 27, i32* %v2_804feab, align 4
  %v2_804fead = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804fead, i32* %eax.global-to-local, align 4
  %v0_804feb2 = load i32, i32* @esp, align 4
  %v1_804feb2 = inttoptr i32 %v0_804feb2 to i32*
  %v2_804feb2 = load i32, i32* %v1_804feb2, align 4
  store i32 %v2_804feb2, i32* %eax.global-to-local, align 4
  %v3_804feb2 = add i32 %v0_804feb2, 4
  %v1_804feb3 = inttoptr i32 %v3_804feb2 to i32*
  %v2_804feb3 = load i32, i32* %v1_804feb3, align 4
  store i32 %v2_804feb3, i32* %edx.global-to-local, align 4
  %v1_804feb4 = add i32 %v0_804feb2, 1868
  store i32 %v1_804feb4, i32* %ecx.global-to-local, align 4
  store i32 %v1_804feb4, i32* %v1_804feb3, align 4
  store i32 27, i32* %v1_804feb2, align 4
  %v3_804febe = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_804febe, i32* %eax.global-to-local, align 4
  %v0_804fec3 = load i32, i32* @esp, align 4
  %v1_804fec3 = add i32 %v0_804fec3, -4
  %v2_804fec3 = inttoptr i32 %v1_804fec3 to i32*
  store i32 16384, i32* %v2_804fec3, align 4
  %v1_804fec8 = add i32 %v0_804fec3, 1868
  %v2_804fec8 = inttoptr i32 %v1_804fec8 to i32*
  %v3_804fec8 = load i32, i32* %v2_804fec8, align 4
  store i32 %v3_804fec8, i32* @esi, align 4
  %v2_804fecf = add i32 %v0_804fec3, -8
  %v3_804fecf = inttoptr i32 %v2_804fecf to i32*
  store i32 %v3_804fec8, i32* %v3_804fecf, align 4
  %v2_804fed0 = add i32 %v0_804fec3, -12
  %v3_804fed0 = inttoptr i32 %v2_804fed0 to i32*
  store i32 %v3_804febe, i32* %v3_804fed0, align 4
  %v0_804fed1 = load i32, i32* @edi, align 4
  %v1_804fed1 = add i32 %v0_804fed1, 4
  %v2_804fed1 = inttoptr i32 %v1_804fed1 to i32*
  %v3_804fed1 = load i32, i32* %v2_804fed1, align 4
  store i32 %v3_804fed1, i32* @ebx, align 4
  %v2_804fed4 = add i32 %v0_804fec3, -16
  %v3_804fed4 = inttoptr i32 %v2_804fed4 to i32*
  store i32 %v3_804fed1, i32* %v3_804fed4, align 4
  %v0_804fed5 = call i32 @function_8051d23()
  store i32 %v0_804fed5, i32* %eax.global-to-local, align 4
  %v0_804feda = load i32, i32* @esp, align 4
  %v1_804fedd = add i32 %v0_804feda, 28
  %v2_804fedd = inttoptr i32 %v1_804fedd to i32*
  store i32 16384, i32* %v2_804fedd, align 4
  %v1_804fee2 = add i32 %v0_804feda, 24
  %v2_804fee2 = inttoptr i32 %v1_804fee2 to i32*
  store i32 2, i32* %v2_804fee2, align 4
  %v1_804fee4 = add i32 %v0_804feda, 20
  %v2_804fee4 = inttoptr i32 %v1_804fee4 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_804fee4, align 4
  %v0_804fee9 = load i32, i32* @edi, align 4
  %v1_804fee9 = add i32 %v0_804fee9, 4
  %v2_804fee9 = inttoptr i32 %v1_804fee9 to i32*
  %v3_804fee9 = load i32, i32* %v2_804fee9, align 4
  store i32 %v3_804fee9, i32* %ecx.global-to-local, align 4
  %v2_804feec = add i32 %v0_804feda, 16
  %v3_804feec = inttoptr i32 %v2_804feec to i32*
  store i32 %v3_804fee9, i32* %v3_804feec, align 4
  %v0_804feed = call i32 @function_8051d23()
  store i32 %v0_804feed, i32* %eax.global-to-local, align 4
  %v0_804fef2 = load i32, i32* @esp, align 4
  %v1_804fef2 = inttoptr i32 %v0_804fef2 to i32*
  store i32 27, i32* %v1_804fef2, align 4
  %v2_804fef9 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804fef9, i32* %eax.global-to-local, align 4
  %v0_804ff01 = load i32, i32* @edi, align 4
  %v1_804ff01 = add i32 %v0_804ff01, 12
  %v2_804ff01 = inttoptr i32 %v1_804ff01 to i32*
  store i32 9, i32* %v2_804ff01, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_804ff0d:                             ; preds = %dec_label_pc_804f921, %dec_label_pc_804f918, %dec_label_pc_804f90f, %dec_label_pc_804f906, %dec_label_pc_804f8f9
  %v1_804ff0d = add i32 %v0_804ff0d, 1
  store i32 %v1_804ff0d, i32* @ebp, align 4
  %v10_804ff10 = icmp eq i32 %v0_804ff0d, -2
  br i1 %v10_804ff10, label %dec_label_pc_804f92d, label %dec_label_pc_804ff19

dec_label_pc_804ff19:                             ; preds = %dec_label_pc_804ff0d, %dec_label_pc_804f997
  %v0_804ff19 = phi i32 [ %v1_804ff0d, %dec_label_pc_804ff0d ], [ %v0_804f9b0, %dec_label_pc_804f997 ]
  %tmp143 = icmp slt i32 %v0_804ff19, 1
  br i1 %tmp143, label %dec_label_pc_804fdf9, label %dec_label_pc_804ff21

dec_label_pc_804ff21:                             ; preds = %dec_label_pc_804ff19
  %v0_804ff21 = load i32, i32* @edi, align 4
  %v1_804ff21 = inttoptr i32 %v0_804ff21 to i32*
  %v2_804ff21 = load i32, i32* %v1_804ff21, align 4
  store i32 %v2_804ff21, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804ff25 = load i32, i32* @esp, align 4
  %v1_804ff25 = add i32 %v0_804ff25, -4
  %v2_804ff25 = inttoptr i32 %v1_804ff25 to i32*
  store i32 16384, i32* %v2_804ff25, align 4
  %v0_804ff2a = load i32, i32* %edx.global-to-local, align 4
  %v1_804ff2a = add i32 %v0_804ff2a, 12
  %v2_804ff2a = inttoptr i32 %v1_804ff2a to i8*
  %v3_804ff2a = load i8, i8* %v2_804ff2a, align 1
  %v4_804ff2a = zext i8 %v3_804ff2a to i32
  %v5_804ff2a = load i32, i32* %eax.global-to-local, align 4
  %v6_804ff2a = and i32 %v5_804ff2a, -256
  %v7_804ff2a = or i32 %v6_804ff2a, %v4_804ff2a
  store i32 %v7_804ff2a, i32* %eax.global-to-local, align 4
  %v2_804ff2d = add i32 %v0_804ff25, -8
  %v3_804ff2d = inttoptr i32 %v2_804ff2d to i32*
  store i32 %v7_804ff2a, i32* %v3_804ff2d, align 4
  %v0_804ff2e = load i32, i32* %edx.global-to-local, align 4
  %v1_804ff2e = inttoptr i32 %v0_804ff2e to i32*
  %v2_804ff2e = load i32, i32* %v1_804ff2e, align 4
  store i32 %v2_804ff2e, i32* @esi, align 4
  %v2_804ff30 = add i32 %v0_804ff25, -12
  %v3_804ff30 = inttoptr i32 %v2_804ff30 to i32*
  store i32 %v2_804ff2e, i32* %v3_804ff30, align 4
  %v0_804ff31 = load i32, i32* @edi, align 4
  %v1_804ff31 = add i32 %v0_804ff31, 4
  %v2_804ff31 = inttoptr i32 %v1_804ff31 to i32*
  %v3_804ff31 = load i32, i32* %v2_804ff31, align 4
  store i32 %v3_804ff31, i32* @ebx, align 4
  %v2_804ff34 = add i32 %v0_804ff25, -16
  %v3_804ff34 = inttoptr i32 %v2_804ff34 to i32*
  store i32 %v3_804ff31, i32* %v3_804ff34, align 4
  %v0_804ff35 = call i32 @function_8051d23()
  store i32 %v0_804ff35, i32* %eax.global-to-local, align 4
  %v0_804ff3a = load i32, i32* @esp, align 4
  %v1_804ff3a = add i32 %v0_804ff3a, -4
  %v2_804ff3a = inttoptr i32 %v1_804ff3a to i32*
  store i32 16384, i32* %v2_804ff3a, align 4
  %v1_804ff3f = add i32 %v0_804ff3a, -8
  %v2_804ff3f = inttoptr i32 %v1_804ff3f to i32*
  store i32 2, i32* %v2_804ff3f, align 4
  %v1_804ff41 = add i32 %v0_804ff3a, -12
  %v2_804ff41 = inttoptr i32 %v1_804ff41 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_804ff41, align 4
  %v0_804ff46 = load i32, i32* @edi, align 4
  %v1_804ff46 = add i32 %v0_804ff46, 4
  %v2_804ff46 = inttoptr i32 %v1_804ff46 to i32*
  %v3_804ff46 = load i32, i32* %v2_804ff46, align 4
  store i32 %v3_804ff46, i32* %ecx.global-to-local, align 4
  %v2_804ff49 = add i32 %v0_804ff3a, -16
  %v3_804ff49 = inttoptr i32 %v2_804ff49 to i32*
  store i32 %v3_804ff46, i32* %v3_804ff49, align 4
  %v0_804ff4a = call i32 @function_8051d23()
  store i32 %v0_804ff4a, i32* %eax.global-to-local, align 4
  %v0_804ff52 = load i32, i32* @edi, align 4
  %v1_804ff52 = add i32 %v0_804ff52, 12
  %v2_804ff52 = inttoptr i32 %v1_804ff52 to i32*
  store i32 4, i32* %v2_804ff52, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_804ff5e:                             ; preds = %dec_label_pc_804fa8b, %dec_label_pc_804fa82, %dec_label_pc_804fa79, %dec_label_pc_804fa70, %dec_label_pc_804fa63
  %v1_804ff5e = add i32 %v0_804ff5e, 1
  store i32 %v1_804ff5e, i32* @ebp, align 4
  %v10_804ff61 = icmp eq i32 %v0_804ff5e, -2
  br i1 %v10_804ff61, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804ff6a

dec_label_pc_804ff6a:                             ; preds = %dec_label_pc_804ff5e
  %tmp144 = icmp slt i32 %v1_804ff5e, 1
  br i1 %tmp144, label %dec_label_pc_804fdf9, label %dec_label_pc_804ff72

dec_label_pc_804ff72:                             ; preds = %dec_label_pc_804ff6a
  %v0_804ff72 = load i32, i32* @esp, align 4
  %v1_804ff75 = add i32 %v0_804ff72, -16
  %v2_804ff75 = inttoptr i32 %v1_804ff75 to i32*
  store i32 25, i32* %v2_804ff75, align 4
  %v2_804ff77 = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804ff77, i32* %eax.global-to-local, align 4
  %v0_804ff7c = load i32, i32* @esp, align 4
  %v1_804ff7c = inttoptr i32 %v0_804ff7c to i32*
  %v2_804ff7c = load i32, i32* %v1_804ff7c, align 4
  store i32 %v2_804ff7c, i32* %eax.global-to-local, align 4
  %v3_804ff7c = add i32 %v0_804ff7c, 4
  %v1_804ff7d = inttoptr i32 %v3_804ff7c to i32*
  %v1_804ff7e = add i32 %v0_804ff7c, 1868
  store i32 %v1_804ff7e, i32* %edx.global-to-local, align 4
  store i32 %v1_804ff7e, i32* %v1_804ff7d, align 4
  store i32 25, i32* %v1_804ff7c, align 4
  %v3_804ff88 = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_804ff88, i32* %eax.global-to-local, align 4
  %v0_804ff8d = load i32, i32* @esp, align 4
  %v1_804ff8d = add i32 %v0_804ff8d, -4
  %v2_804ff8d = inttoptr i32 %v1_804ff8d to i32*
  store i32 16384, i32* %v2_804ff8d, align 4
  %v1_804ff92 = add i32 %v0_804ff8d, 1868
  %v2_804ff92 = inttoptr i32 %v1_804ff92 to i32*
  %v3_804ff92 = load i32, i32* %v2_804ff92, align 4
  store i32 %v3_804ff92, i32* @esi, align 4
  %v2_804ff99 = add i32 %v0_804ff8d, -8
  %v3_804ff99 = inttoptr i32 %v2_804ff99 to i32*
  store i32 %v3_804ff92, i32* %v3_804ff99, align 4
  %v2_804ff9a = add i32 %v0_804ff8d, -12
  %v3_804ff9a = inttoptr i32 %v2_804ff9a to i32*
  store i32 %v3_804ff88, i32* %v3_804ff9a, align 4
  %v0_804ff9b = load i32, i32* @edi, align 4
  %v1_804ff9b = add i32 %v0_804ff9b, 4
  %v2_804ff9b = inttoptr i32 %v1_804ff9b to i32*
  %v3_804ff9b = load i32, i32* %v2_804ff9b, align 4
  store i32 %v3_804ff9b, i32* @ebx, align 4
  %v2_804ff9e = add i32 %v0_804ff8d, -16
  %v3_804ff9e = inttoptr i32 %v2_804ff9e to i32*
  store i32 %v3_804ff9b, i32* %v3_804ff9e, align 4
  %v0_804ff9f = call i32 @function_8051d23()
  store i32 %v0_804ff9f, i32* %eax.global-to-local, align 4
  %v0_804ffa4 = load i32, i32* @esp, align 4
  %v1_804ffa7 = add i32 %v0_804ffa4, 28
  %v2_804ffa7 = inttoptr i32 %v1_804ffa7 to i32*
  store i32 16384, i32* %v2_804ffa7, align 4
  %v1_804ffac = add i32 %v0_804ffa4, 24
  %v2_804ffac = inttoptr i32 %v1_804ffac to i32*
  store i32 2, i32* %v2_804ffac, align 4
  %v1_804ffae = add i32 %v0_804ffa4, 20
  %v2_804ffae = inttoptr i32 %v1_804ffae to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_804ffae, align 4
  %v0_804ffb3 = load i32, i32* @edi, align 4
  %v1_804ffb3 = add i32 %v0_804ffb3, 4
  %v2_804ffb3 = inttoptr i32 %v1_804ffb3 to i32*
  %v3_804ffb3 = load i32, i32* %v2_804ffb3, align 4
  store i32 %v3_804ffb3, i32* %ecx.global-to-local, align 4
  %v2_804ffb6 = add i32 %v0_804ffa4, 16
  %v3_804ffb6 = inttoptr i32 %v2_804ffb6 to i32*
  store i32 %v3_804ffb3, i32* %v3_804ffb6, align 4
  %v0_804ffb7 = call i32 @function_8051d23()
  store i32 %v0_804ffb7, i32* %eax.global-to-local, align 4
  %v0_804ffbc = load i32, i32* @esp, align 4
  %v1_804ffbc = inttoptr i32 %v0_804ffbc to i32*
  store i32 25, i32* %v1_804ffbc, align 4
  %v2_804ffc3 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804ffc3, i32* %eax.global-to-local, align 4
  %v0_804ffcb = load i32, i32* @edi, align 4
  %v1_804ffcb = add i32 %v0_804ffcb, 12
  %v2_804ffcb = inttoptr i32 %v1_804ffcb to i32*
  store i32 6, i32* %v2_804ffcb, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_804ffd7:                             ; preds = %dec_label_pc_804fc7c, %dec_label_pc_804fc73, %dec_label_pc_804fc6a, %dec_label_pc_804fc61, %dec_label_pc_804fc54
  %v1_804ffd7 = add i32 %v0_804ffd7, 1
  store i32 %v1_804ffd7, i32* @ebp, align 4
  %v10_804ffda = icmp eq i32 %v0_804ffd7, -2
  br i1 %v10_804ffda, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_804ffe3

dec_label_pc_804ffe3:                             ; preds = %dec_label_pc_804ffd7
  %tmp145 = icmp slt i32 %v1_804ffd7, 1
  br i1 %tmp145, label %dec_label_pc_804fdf9, label %dec_label_pc_804ffeb

dec_label_pc_804ffeb:                             ; preds = %dec_label_pc_804ffe3
  %v0_804ffeb = load i32, i32* @esp, align 4
  %v1_804ffee = add i32 %v0_804ffeb, -16
  %v2_804ffee = inttoptr i32 %v1_804ffee to i32*
  store i32 24, i32* %v2_804ffee, align 4
  %v2_804fff0 = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_804fff0, i32* %eax.global-to-local, align 4
  %v0_804fff5 = load i32, i32* @esp, align 4
  %v1_804fff5 = inttoptr i32 %v0_804fff5 to i32*
  %v2_804fff5 = load i32, i32* %v1_804fff5, align 4
  store i32 %v2_804fff5, i32* %eax.global-to-local, align 4
  %v3_804fff5 = add i32 %v0_804fff5, 4
  %v1_804fff6 = inttoptr i32 %v3_804fff5 to i32*
  %v2_804fff6 = load i32, i32* %v1_804fff6, align 4
  store i32 %v2_804fff6, i32* %edx.global-to-local, align 4
  %v1_804fff7 = add i32 %v0_804fff5, 1864
  store i32 %v1_804fff7, i32* %eax.global-to-local, align 4
  store i32 %v1_804fff7, i32* %v1_804fff6, align 4
  store i32 24, i32* %v1_804fff5, align 4
  %v3_8050001 = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050001, i32* %eax.global-to-local, align 4
  %v0_8050006 = load i32, i32* @esp, align 4
  %v1_8050006 = add i32 %v0_8050006, -4
  %v2_8050006 = inttoptr i32 %v1_8050006 to i32*
  store i32 16384, i32* %v2_8050006, align 4
  %v1_805000b = add i32 %v0_8050006, 1864
  %v2_805000b = inttoptr i32 %v1_805000b to i32*
  %v3_805000b = load i32, i32* %v2_805000b, align 4
  store i32 %v3_805000b, i32* @esi, align 4
  %v2_8050012 = add i32 %v0_8050006, -8
  %v3_8050012 = inttoptr i32 %v2_8050012 to i32*
  store i32 %v3_805000b, i32* %v3_8050012, align 4
  %v2_8050013 = add i32 %v0_8050006, -12
  %v3_8050013 = inttoptr i32 %v2_8050013 to i32*
  store i32 %v3_8050001, i32* %v3_8050013, align 4
  %v0_8050014 = load i32, i32* @edi, align 4
  %v1_8050014 = add i32 %v0_8050014, 4
  %v2_8050014 = inttoptr i32 %v1_8050014 to i32*
  %v3_8050014 = load i32, i32* %v2_8050014, align 4
  store i32 %v3_8050014, i32* @ebx, align 4
  %v2_8050017 = add i32 %v0_8050006, -16
  %v3_8050017 = inttoptr i32 %v2_8050017 to i32*
  store i32 %v3_8050014, i32* %v3_8050017, align 4
  %v0_8050018 = call i32 @function_8051d23()
  store i32 %v0_8050018, i32* %eax.global-to-local, align 4
  %v0_805001d = load i32, i32* @esp, align 4
  %v1_8050020 = add i32 %v0_805001d, 28
  %v2_8050020 = inttoptr i32 %v1_8050020 to i32*
  store i32 16384, i32* %v2_8050020, align 4
  %v1_8050025 = add i32 %v0_805001d, 24
  %v2_8050025 = inttoptr i32 %v1_8050025 to i32*
  store i32 2, i32* %v2_8050025, align 4
  %v1_8050027 = add i32 %v0_805001d, 20
  %v2_8050027 = inttoptr i32 %v1_8050027 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_8050027, align 4
  %v0_805002c = load i32, i32* @edi, align 4
  %v1_805002c = add i32 %v0_805002c, 4
  %v2_805002c = inttoptr i32 %v1_805002c to i32*
  %v3_805002c = load i32, i32* %v2_805002c, align 4
  store i32 %v3_805002c, i32* %ecx.global-to-local, align 4
  %v2_805002f = add i32 %v0_805001d, 16
  %v3_805002f = inttoptr i32 %v2_805002f to i32*
  store i32 %v3_805002c, i32* %v3_805002f, align 4
  %v0_8050030 = call i32 @function_8051d23()
  store i32 %v0_8050030, i32* %eax.global-to-local, align 4
  %v0_8050035 = load i32, i32* @esp, align 4
  %v1_8050035 = inttoptr i32 %v0_8050035 to i32*
  store i32 24, i32* %v1_8050035, align 4
  %v2_805003c = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805003c, i32* %eax.global-to-local, align 4
  %v0_8050044 = load i32, i32* @edi, align 4
  %v1_8050044 = add i32 %v0_8050044, 12
  %v2_8050044 = inttoptr i32 %v1_8050044 to i32*
  store i32 8, i32* %v2_8050044, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_8050050:                             ; preds = %dec_label_pc_804f9e7, %dec_label_pc_804f9de, %dec_label_pc_804f9d5, %dec_label_pc_804f9c8
  %v1_8050050 = add i32 %v0_8050050, 1
  store i32 %v1_8050050, i32* @ebp, align 4
  %v10_8050053 = icmp eq i32 %v0_8050050, -2
  br i1 %v10_8050053, label %dec_label_pc_804f9f3, label %dec_label_pc_805005c

dec_label_pc_805005c:                             ; preds = %dec_label_pc_8050050, %dec_label_pc_804fa3c
  %v0_805005c = phi i32 [ %v1_8050050, %dec_label_pc_8050050 ], [ %v0_804fa49, %dec_label_pc_804fa3c ]
  %tmp146 = icmp slt i32 %v0_805005c, 1
  br i1 %tmp146, label %dec_label_pc_804fdf9, label %dec_label_pc_8050064

dec_label_pc_8050064:                             ; preds = %dec_label_pc_805005c
  %v0_8050064 = load i32, i32* @edi, align 4
  %v1_8050064 = inttoptr i32 %v0_8050064 to i32*
  %v2_8050064 = load i32, i32* %v1_8050064, align 4
  store i32 %v2_8050064, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8050068 = load i32, i32* @esp, align 4
  %v1_8050068 = add i32 %v0_8050068, -4
  %v2_8050068 = inttoptr i32 %v1_8050068 to i32*
  store i32 16384, i32* %v2_8050068, align 4
  %v0_805006d = load i32, i32* %edx.global-to-local, align 4
  %v1_805006d = add i32 %v0_805006d, 13
  %v2_805006d = inttoptr i32 %v1_805006d to i8*
  %v3_805006d = load i8, i8* %v2_805006d, align 1
  %v4_805006d = zext i8 %v3_805006d to i32
  %v5_805006d = load i32, i32* %eax.global-to-local, align 4
  %v6_805006d = and i32 %v5_805006d, -256
  %v7_805006d = or i32 %v6_805006d, %v4_805006d
  store i32 %v7_805006d, i32* %eax.global-to-local, align 4
  %v2_8050070 = add i32 %v0_8050068, -8
  %v3_8050070 = inttoptr i32 %v2_8050070 to i32*
  store i32 %v7_805006d, i32* %v3_8050070, align 4
  %v0_8050071 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050071 = add i32 %v0_8050071, 4
  %v2_8050071 = inttoptr i32 %v1_8050071 to i32*
  %v3_8050071 = load i32, i32* %v2_8050071, align 4
  store i32 %v3_8050071, i32* @esi, align 4
  %v2_8050074 = add i32 %v0_8050068, -12
  %v3_8050074 = inttoptr i32 %v2_8050074 to i32*
  store i32 %v3_8050071, i32* %v3_8050074, align 4
  %v0_8050075 = load i32, i32* @edi, align 4
  %v1_8050075 = add i32 %v0_8050075, 4
  %v2_8050075 = inttoptr i32 %v1_8050075 to i32*
  %v3_8050075 = load i32, i32* %v2_8050075, align 4
  store i32 %v3_8050075, i32* @ebx, align 4
  %v2_8050078 = add i32 %v0_8050068, -16
  %v3_8050078 = inttoptr i32 %v2_8050078 to i32*
  store i32 %v3_8050075, i32* %v3_8050078, align 4
  %v0_8050079 = call i32 @function_8051d23()
  store i32 %v0_8050079, i32* %eax.global-to-local, align 4
  %v0_805007e = load i32, i32* @esp, align 4
  %v1_805007e = add i32 %v0_805007e, -4
  %v2_805007e = inttoptr i32 %v1_805007e to i32*
  store i32 16384, i32* %v2_805007e, align 4
  %v1_8050083 = add i32 %v0_805007e, -8
  %v2_8050083 = inttoptr i32 %v1_8050083 to i32*
  store i32 2, i32* %v2_8050083, align 4
  %v1_8050085 = add i32 %v0_805007e, -12
  %v2_8050085 = inttoptr i32 %v1_8050085 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8053dc6.10 to i32), i32* %v2_8050085, align 4
  %v0_805008a = load i32, i32* @edi, align 4
  %v1_805008a = add i32 %v0_805008a, 4
  %v2_805008a = inttoptr i32 %v1_805008a to i32*
  %v3_805008a = load i32, i32* %v2_805008a, align 4
  store i32 %v3_805008a, i32* %ecx.global-to-local, align 4
  %v2_805008d = add i32 %v0_805007e, -16
  %v3_805008d = inttoptr i32 %v2_805008d to i32*
  store i32 %v3_805008a, i32* %v3_805008d, align 4
  %v0_805008e = call i32 @function_8051d23()
  store i32 %v0_805008e, i32* %eax.global-to-local, align 4
  %v0_8050096 = load i32, i32* @edi, align 4
  %v1_8050096 = add i32 %v0_8050096, 12
  %v2_8050096 = inttoptr i32 %v1_8050096 to i32*
  store i32 5, i32* %v2_8050096, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_80500a2:                             ; preds = %dec_label_pc_804fddd
  %v1_80500a2 = add i32 %v0_804fdc9, -4
  %v2_80500a2 = inttoptr i32 %v1_80500a2 to i32*
  store i32 16384, i32* %v2_80500a2, align 4
  %v1_80500a7 = add i32 %v0_804fdc9, -8
  %v2_80500a7 = inttoptr i32 %v1_80500a7 to i32*
  store i32 3, i32* %v2_80500a7, align 4
  %v1_80500a9 = add i32 %v0_804fdc9, 1863
  store i32 %v1_80500a9, i32* %eax.global-to-local, align 4
  %v0_80500b0 = load i32, i32* @ebx, align 4
  %v1_80500b0 = add i32 %v0_80500b0, 3
  store i32 %v1_80500b0, i32* @ebx, align 4
  %v2_80500b3 = add i32 %v0_804fdc9, -12
  %v3_80500b3 = inttoptr i32 %v2_80500b3 to i32*
  store i32 %v1_80500a9, i32* %v3_80500b3, align 4
  %v0_80500b4 = load i32, i32* @ebp, align 4
  %v1_80500b4 = add i32 %v0_80500b4, 3
  store i32 %v1_80500b4, i32* @ebp, align 4
  %v0_80500b7 = load i32, i32* @edi, align 4
  %v1_80500b7 = add i32 %v0_80500b7, 4
  %v2_80500b7 = inttoptr i32 %v1_80500b7 to i32*
  %v3_80500b7 = load i32, i32* %v2_80500b7, align 4
  store i32 %v3_80500b7, i32* %eax.global-to-local, align 4
  %v2_80500ba = add i32 %v0_804fdc9, -16
  %v3_80500ba = inttoptr i32 %v2_80500ba to i32*
  store i32 %v3_80500b7, i32* %v3_80500ba, align 4
  %v0_80500bb = call i32 @function_8051d23()
  %v0_80500c0 = load i32, i32* @esp, align 4
  %v1_80500c0 = add i32 %v0_80500c0, -4
  %v2_80500c0 = inttoptr i32 %v1_80500c0 to i32*
  store i32 16384, i32* %v2_80500c0, align 4
  %v1_80500c5 = add i32 %v0_80500c0, -8
  %v2_80500c5 = inttoptr i32 %v1_80500c5 to i32*
  store i32 9, i32* %v2_80500c5, align 4
  %v1_80500c7 = add i32 %v0_80500c0, 1847
  store i32 %v1_80500c7, i32* %eax.global-to-local, align 4
  %v2_80500ce = add i32 %v0_80500c0, -12
  %v3_80500ce = inttoptr i32 %v2_80500ce to i32*
  store i32 %v1_80500c7, i32* %v3_80500ce, align 4
  %v0_80500cf = load i32, i32* @edi, align 4
  %v1_80500cf = add i32 %v0_80500cf, 4
  %v2_80500cf = inttoptr i32 %v1_80500cf to i32*
  %v3_80500cf = load i32, i32* %v2_80500cf, align 4
  store i32 %v3_80500cf, i32* %eax.global-to-local, align 4
  %v2_80500d2 = add i32 %v0_80500c0, -16
  %v3_80500d2 = inttoptr i32 %v2_80500d2 to i32*
  store i32 %v3_80500cf, i32* %v3_80500d2, align 4
  %v0_80500d3 = call i32 @function_8051d23()
  store i32 %v0_80500d3, i32* %eax.global-to-local, align 4
  %v0_80500d8 = load i32, i32* @esp, align 4
  %v1_80500d8 = add i32 %v0_80500d8, 32
  %v0_80500db = load i32, i32* @edi, align 4
  %v1_80500db = add i32 %v0_80500db, 24
  %v2_80500db = inttoptr i32 %v1_80500db to i32*
  %v3_80500db = load i32, i32* %v2_80500db, align 4
  store i32 %v3_80500db, i32* %edx.global-to-local, align 4
  %v0_804f867.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f867.backedge

dec_label_pc_80500e3:                             ; preds = %dec_label_pc_804fbd9
  store i32 %v0_80500e3, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_80500e8 = call i32 @function_804ec50()
  store i32 %v0_80500e8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_80500f2:                             ; preds = %dec_label_pc_804fb9c
  store i32 29, i32* %v1_80500fc, align 4
  %v2_8050103 = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050103, i32* %eax.global-to-local, align 4
  %v0_8050108 = load i32, i32* @esp, align 4
  %v1_8050108 = inttoptr i32 %v0_8050108 to i32*
  %v3_8050108 = add i32 %v0_8050108, 4
  %v1_8050109 = inttoptr i32 %v3_8050108 to i32*
  %v2_8050109 = load i32, i32* %v1_8050109, align 4
  store i32 %v2_8050109, i32* %eax.global-to-local, align 4
  %v1_805010a = add i32 %v0_8050108, 1868
  store i32 %v1_805010a, i32* %ecx.global-to-local, align 4
  store i32 %v1_805010a, i32* %v1_8050109, align 4
  store i32 29, i32* %v1_8050108, align 4
  %v3_8050114 = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8050114, i32* %eax.global-to-local, align 4
  %v0_8050119 = load i32, i32* @esp, align 4
  %v1_8050119 = add i32 %v0_8050119, 1868
  %v2_8050119 = inttoptr i32 %v1_8050119 to i32*
  %v3_8050119 = load i32, i32* %v2_8050119, align 4
  %v1_8050120 = add i32 %v3_8050119, -1
  store i32 %v1_8050120, i32* %edx.global-to-local, align 4
  %v2_8050121 = add i32 %v0_8050119, -4
  %v3_8050121 = inttoptr i32 %v2_8050121 to i32*
  store i32 %v1_8050120, i32* %v3_8050121, align 4
  %v2_8050122 = add i32 %v0_8050119, -8
  %v3_8050122 = inttoptr i32 %v2_8050122 to i32*
  store i32 %v3_8050114, i32* %v3_8050122, align 4
  %v0_8050123 = load i32, i32* @edi, align 4
  %v1_8050123 = add i32 %v0_8050123, 24
  %v2_8050123 = inttoptr i32 %v1_8050123 to i32*
  %v3_8050123 = load i32, i32* %v2_8050123, align 4
  store i32 %v3_8050123, i32* @esi, align 4
  %v2_8050126 = add i32 %v0_8050119, -12
  %v3_8050126 = inttoptr i32 %v2_8050126 to i32*
  store i32 %v3_8050123, i32* %v3_8050126, align 4
  %v1_8050127 = add i32 %v0_8050119, 24
  %v2_8050127 = inttoptr i32 %v1_8050127 to i32*
  %v3_8050127 = load i32, i32* %v2_8050127, align 4
  store i32 %v3_8050127, i32* @ebx, align 4
  %v2_805012b = add i32 %v0_8050119, -16
  %v3_805012b = inttoptr i32 %v2_805012b to i32*
  store i32 %v3_8050127, i32* %v3_805012b, align 4
  %v0_805012c = call i32 @function_8051130()
  store i32 %v0_805012c, i32* %eax.global-to-local, align 4
  %v0_8050131 = load i32, i32* @esp, align 4
  store i32 %v0_805012c, i32* @ebp, align 4
  %v1_8050136 = add i32 %v0_8050131, 16
  %v2_8050136 = inttoptr i32 %v1_8050136 to i32*
  store i32 29, i32* %v2_8050136, align 4
  %v2_8050138 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050138, i32* %eax.global-to-local, align 4
  %v0_805013d = load i32, i32* @esp, align 4
  %v0_8050140 = load i32, i32* @ebp, align 4
  %v10_8050140 = icmp eq i32 %v0_8050140, -1
  br i1 %v10_8050140, label %dec_label_pc_804f7dc.backedge, label %dec_label_pc_8050149

dec_label_pc_8050149:                             ; preds = %dec_label_pc_80500f2
  %tmp147 = icmp slt i32 %v0_8050140, 1
  br i1 %tmp147, label %dec_label_pc_804fdf9, label %dec_label_pc_8050151

dec_label_pc_8050151:                             ; preds = %dec_label_pc_8050149
  %v0_8050151 = load i32, i32* @edi, align 4
  %v1_8050151 = add i32 %v0_8050151, 20
  %v2_8050151 = inttoptr i32 %v1_8050151 to i32*
  %v3_8050151 = load i32, i32* %v2_8050151, align 4
  store i32 %v3_8050151, i32* %edx.global-to-local, align 4
  %v1_8050154 = add i32 %v0_8050151, 16
  %v2_8050154 = inttoptr i32 %v1_8050154 to i32*
  %v3_8050154 = load i32, i32* %v2_8050154, align 4
  store i32 %v3_8050154, i32* %eax.global-to-local, align 4
  %v1_8050157 = inttoptr i32 %v0_8050151 to i32*
  %v2_8050157 = load i32, i32* %v1_8050157, align 4
  store i32 %v2_8050157, i32* @esi, align 4
  %v2_8050159 = add i32 %v0_805013d, 1864
  %v3_8050159 = inttoptr i32 %v2_8050159 to i32*
  store i32 %v3_8050154, i32* %v3_8050159, align 4
  %v0_8050160 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050160 = trunc i32 %v0_8050160 to i16
  %v2_8050160 = load i32, i32* @esp, align 4
  %v3_8050160 = add i32 %v2_8050160, 1866
  %v4_8050160 = inttoptr i32 %v3_8050160 to i16*
  store i16 %v1_8050160, i16* %v4_8050160, align 2
  %v0_8050168 = call i32 @function_8051621()
  store i32 %v0_8050168, i32* %eax.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_8050168, 1
  br i1 %tmp148, label %dec_label_pc_8050393, label %dec_label_pc_8050175

dec_label_pc_8050175:                             ; preds = %dec_label_pc_8050393, %dec_label_pc_8050151
  %v0_8050175 = load i32, i32* @esp, align 4
  %v0_8050178 = load i32, i32* @edi, align 4
  %v1_8050178 = add i32 %v0_8050178, 4
  %v2_8050178 = inttoptr i32 %v1_8050178 to i32*
  %v3_8050178 = load i32, i32* %v2_8050178, align 4
  store i32 %v3_8050178, i32* @esi, align 4
  %v2_805017b = add i32 %v0_8050175, -16
  %v3_805017b = inttoptr i32 %v2_805017b to i32*
  store i32 %v3_8050178, i32* %v3_805017b, align 4
  %v1_805017c = call i32 @function_80515f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805017c, i32* %eax.global-to-local, align 4
  %v0_8050184 = load i32, i32* @edi, align 4
  %v1_8050184 = add i32 %v0_8050184, 4
  %v2_8050184 = inttoptr i32 %v1_8050184 to i32*
  store i32 -1, i32* %v2_8050184, align 4
  %v0_805018b = load i32, i32* @edi, align 4
  %v1_805018b = add i32 %v0_805018b, 12
  %v2_805018b = inttoptr i32 %v1_805018b to i32*
  store i32 0, i32* %v2_805018b, align 4
  br label %dec_label_pc_804fc1d

dec_label_pc_8050197:                             ; preds = %dec_label_pc_804f6ad
  br i1 %v5_804f6c2, label %dec_label_pc_804f700, label %dec_label_pc_805019f

dec_label_pc_805019f:                             ; preds = %dec_label_pc_8050197
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f6cb

dec_label_pc_80501a6:                             ; preds = %dec_label_pc_804f6dd
  %v3_80501b1 = add nuw nsw i32 %v2_80501b1, 1556
  %v4_80501b1 = add i32 %v3_80501b1, %v0_80501b1
  %v5_80501b1 = inttoptr i32 %v4_80501b1 to i32*
  %v6_80501b1 = load i32, i32* %v5_80501b1, align 4
  %v9_80501b1 = shl i32 1, %v1_80501ab
  %v12_80501b1 = or i32 %v6_80501b1, %v9_80501b1
  store i32 %v12_80501b1, i32* %v5_80501b1, align 4
  %v0_80501b9 = load i32, i32* @ebx, align 4
  %v1_80501b9 = add i32 %v0_80501b9, 4
  %v2_80501b9 = inttoptr i32 %v1_80501b9 to i32*
  %v3_80501b9 = load i32, i32* %v2_80501b9, align 4
  store i32 %v3_80501b9, i32* %eax.global-to-local, align 4
  %v0_80501bc = load i32, i32* @esi, align 4
  %v2_80501bc = sub i32 %v0_80501bc, %v3_80501b9
  %v8_80501bc = xor i32 %v0_80501bc, %v3_80501b9
  %v9_80501bc = xor i32 %v2_80501bc, %v0_80501bc
  %v10_80501bc = and i32 %v9_80501bc, %v8_80501bc
  %v11_80501bc = icmp slt i32 %v10_80501bc, 0
  %v13_80501bc = icmp slt i32 %v2_80501bc, 0
  %v2_80501be = icmp eq i1 %v13_80501bc, %v11_80501bc
  br i1 %v2_80501be, label %dec_label_pc_804f700, label %dec_label_pc_80501c4

dec_label_pc_80501c4:                             ; preds = %dec_label_pc_80501a6
  store i32 %v3_80501b9, i32* @esi, align 4
  br label %dec_label_pc_804f700

dec_label_pc_80501d0:                             ; preds = %dec_label_pc_804f7a8
  %v1_80501d0 = add i32 %v0_804f7b2, 1848
  %v2_80501d0 = inttoptr i32 %v1_80501d0 to i32*
  store i32 0, i32* %v2_80501d0, align 4
  %v0_80501db = load i32, i32* @esp, align 4
  %v1_80501db = add i32 %v0_80501db, 1852
  %v2_80501db = inttoptr i32 %v1_80501db to i32*
  store i32 4, i32* %v2_80501db, align 4
  %v0_80501e6 = load i32, i32* @esp, align 4
  %v1_80501e9 = add i32 %v0_80501e6, 1852
  %v2_80501f0 = add i32 %v0_80501e6, -16
  %v3_80501f0 = inttoptr i32 %v2_80501f0 to i32*
  store i32 %v1_80501e9, i32* %v3_80501f0, align 4
  %v1_80501f1 = add i32 %v0_80501e6, 1848
  store i32 %v1_80501f1, i32* %eax.global-to-local, align 4
  %v2_80501f8 = add i32 %v0_80501e6, -20
  %v3_80501f8 = inttoptr i32 %v2_80501f8 to i32*
  store i32 %v1_80501f1, i32* %v3_80501f8, align 4
  %v1_80501f9 = add i32 %v0_80501e6, -24
  %v2_80501f9 = inttoptr i32 %v1_80501f9 to i32*
  store i32 4, i32* %v2_80501f9, align 4
  %v1_80501fb = add i32 %v0_80501e6, -28
  %v2_80501fb = inttoptr i32 %v1_80501fb to i32*
  store i32 1, i32* %v2_80501fb, align 4
  %v0_80501fd = load i32, i32* @edi, align 4
  %v1_80501fd = add i32 %v0_80501fd, 4
  %v2_80501fd = inttoptr i32 %v1_80501fd to i32*
  %v3_80501fd = load i32, i32* %v2_80501fd, align 4
  store i32 %v3_80501fd, i32* %eax.global-to-local, align 4
  %v2_8050200 = add i32 %v0_80501e6, -32
  %v3_8050200 = inttoptr i32 %v2_8050200 to i32*
  store i32 %v3_80501fd, i32* %v3_8050200, align 4
  %v0_8050201 = call i32 @function_8051c4f()
  store i32 %v0_8050201, i32* %eax.global-to-local, align 4
  %v0_8050206 = load i32, i32* @esp, align 4
  %v2_8050209 = add i32 %v0_8050206, 1880
  %v3_8050209 = inttoptr i32 %v2_8050209 to i32*
  %v4_8050209 = load i32, i32* %v3_8050209, align 4
  %v5_8050209 = or i32 %v4_8050209, %v0_8050201
  %v6_8050209 = icmp eq i32 %v5_8050209, 0
  store i32 %v5_8050209, i32* %eax.global-to-local, align 4
  %v1_8050210 = icmp eq i1 %v6_8050209, false
  br i1 %v1_8050210, label %dec_label_pc_8050312, label %dec_label_pc_8050216

dec_label_pc_8050216:                             ; preds = %dec_label_pc_80501d0
  %v0_8050216 = load i32, i32* @edi, align 4
  %v1_8050216 = add i32 %v0_8050216, 12
  %v2_8050216 = inttoptr i32 %v1_8050216 to i32*
  store i32 2, i32* %v2_8050216, align 4
  %v0_805021d = call i32 @function_804eaf0()
  %v1_805021d = sext i32 %v0_805021d to i64
  %v0_8050222 = load i16, i16* @global_var_805512c.37, align 4
  %v1_8050222 = zext i16 %v0_8050222 to i32
  %v0_805022f = load i32, i32* @global_var_80550e4.38, align 4
  store i32 %v0_805022f, i32* @ebx, align 4
  store i32 %v1_8050222, i32* %ecx.global-to-local, align 4
  %v8_8050239 = zext i16 %v0_8050222 to i64
  %v9_8050239 = udiv i64 %v1_805021d, %v8_8050239
  %v10_8050239 = trunc i64 %v9_8050239 to i32
  store i32 %v10_8050239, i32* %eax.global-to-local, align 4
  %v11_8050239 = urem i64 %v1_805021d, %v8_8050239
  %v12_8050239 = trunc i64 %v11_8050239 to i32
  store i32 %v12_8050239, i32* %edx.global-to-local, align 4
  %tmp149 = icmp slt i32 %v0_805022f, 1
  br i1 %tmp149, label %dec_label_pc_80502b3, label %dec_label_pc_805023f

dec_label_pc_805023f:                             ; preds = %dec_label_pc_8050216
  %v0_805023f = load i32, i32* @global_var_8055128.39, align 8
  store i32 %v0_805023f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8050250 = trunc i64 %v11_8050239 to i16
  br label %dec_label_pc_8050250

dec_label_pc_8050248:                             ; preds = %dec_label_pc_8050256, %dec_label_pc_8050250
  %v1_8050248 = add i32 %v0_8050248, 1
  store i32 %v1_8050248, i32* %ecx.global-to-local, align 4
  %v1_8050249 = add i32 %v0_8050249, 16
  store i32 %v1_8050249, i32* %eax.global-to-local, align 4
  %v12_805024c = icmp eq i32 %v0_805022f, %v1_8050248
  br i1 %v12_805024c, label %dec_label_pc_80502b3.loopexit, label %dec_label_pc_8050250

dec_label_pc_8050250:                             ; preds = %dec_label_pc_8050248, %dec_label_pc_805023f
  %v0_8050248 = phi i32 [ %v1_8050248, %dec_label_pc_8050248 ], [ 0, %dec_label_pc_805023f ]
  %v0_8050249 = phi i32 [ %v1_8050249, %dec_label_pc_8050248 ], [ %v0_805023f, %dec_label_pc_805023f ]
  %v3_8050250 = add i32 %v0_8050249, 8
  %v4_8050250 = inttoptr i32 %v3_8050250 to i16*
  %v5_8050250 = load i16, i16* %v4_8050250, align 2
  %v11_8050250 = icmp ult i16 %v1_8050250, %v5_8050250
  br i1 %v11_8050250, label %dec_label_pc_8050248, label %dec_label_pc_8050256

dec_label_pc_8050256:                             ; preds = %dec_label_pc_8050250
  %v3_8050256 = add i32 %v0_8050249, 10
  %v4_8050256 = inttoptr i32 %v3_8050256 to i16*
  %v5_8050256 = load i16, i16* %v4_8050256, align 2
  %v11_8050256 = icmp ult i16 %v1_8050250, %v5_8050256
  %v1_805025a = icmp eq i1 %v11_8050256, false
  br i1 %v1_805025a, label %dec_label_pc_8050248, label %dec_label_pc_80502b5.loopexit

dec_label_pc_8050260:                             ; preds = %dec_label_pc_804f6cb
  %v0_8050260 = load i32, i32* @esp, align 4
  %v1_8050263 = add i32 %v2_804f6bd, 4
  %v2_8050263 = inttoptr i32 %v1_8050263 to i32*
  %v3_8050263 = load i32, i32* %v2_8050263, align 4
  store i32 %v3_8050263, i32* %edx.global-to-local, align 4
  %v2_8050266 = add i32 %v0_8050260, -16
  %v3_8050266 = inttoptr i32 %v2_8050266 to i32*
  store i32 %v3_8050263, i32* %v3_8050266, align 4
  %v1_8050267 = call i32 @function_80515f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050267, i32* %eax.global-to-local, align 4
  %v0_805026f = load i32, i32* @ebx, align 4
  %v1_805026f = add i32 %v0_805026f, 4
  %v2_805026f = inttoptr i32 %v1_805026f to i32*
  store i32 -1, i32* %v2_805026f, align 4
  %v0_8050276 = load i32, i32* @ebx, align 4
  %v1_8050276 = add i32 %v0_8050276, 12
  %v2_8050276 = inttoptr i32 %v1_8050276 to i32*
  %v3_8050276 = load i32, i32* %v2_8050276, align 4
  %tmp273 = icmp ult i32 %v3_8050276, 3
  br i1 %tmp273, label %dec_label_pc_80502a0, label %dec_label_pc_805027c

dec_label_pc_805027c:                             ; preds = %dec_label_pc_8050260
  %v1_805027c = add i32 %v0_8050276, 284
  %v2_805027c = inttoptr i32 %v1_805027c to i8*
  %v3_805027c = load i8, i8* %v2_805027c, align 1
  %v4_805027c = zext i8 %v3_805027c to i32
  %v6_805027c = and i32 %v1_8050267, -256
  %v7_805027c = or i32 %v4_805027c, %v6_805027c
  %v1_8050282 = add i32 %v7_805027c, 1
  %v10_8050282 = trunc i32 %v1_8050282 to i8
  store i32 %v1_8050282, i32* %eax.global-to-local, align 4
  store i8 %v10_8050282, i8* %v2_805027c, align 1
  %v0_8050289 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050289 = trunc i32 %v0_8050289 to i8
  %v10_8050289 = icmp eq i8 %v1_8050289, 10
  %v0_80502a0.pre = load i32, i32* @ebx, align 4
  br i1 %v10_8050289, label %dec_label_pc_80502a0, label %dec_label_pc_805028d

dec_label_pc_805028d:                             ; preds = %dec_label_pc_805027c
  store i32 %v0_80502a0.pre, i32* @eax, align 4
  %v0_805028f = call i32 @function_804ec50()
  store i32 %v0_805028f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f700

dec_label_pc_80502a0:                             ; preds = %dec_label_pc_805027c, %dec_label_pc_8050260
  %v0_80502a0 = phi i32 [ %v0_8050276, %dec_label_pc_8050260 ], [ %v0_80502a0.pre, %dec_label_pc_805027c ]
  %v1_80502a0 = add i32 %v0_80502a0, 284
  %v2_80502a0 = inttoptr i32 %v1_80502a0 to i8*
  store i8 0, i8* %v2_80502a0, align 1
  %v0_80502a7 = load i32, i32* @ebx, align 4
  %v1_80502a7 = add i32 %v0_80502a7, 12
  %v2_80502a7 = inttoptr i32 %v1_80502a7 to i32*
  store i32 0, i32* %v2_80502a7, align 4
  br label %dec_label_pc_804f700

dec_label_pc_80502b3.loopexit:                    ; preds = %dec_label_pc_8050248
  br label %dec_label_pc_80502b3

dec_label_pc_80502b3:                             ; preds = %dec_label_pc_80502b3.loopexit, %dec_label_pc_8050216
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80502b5

dec_label_pc_80502b5.loopexit:                    ; preds = %dec_label_pc_8050256
  br label %dec_label_pc_80502b5

dec_label_pc_80502b5:                             ; preds = %dec_label_pc_80502b5.loopexit, %dec_label_pc_80502b3
  %v0_80502b8 = phi i32 [ %v0_8050249, %dec_label_pc_80502b5.loopexit ], [ 0, %dec_label_pc_80502b3 ]
  %v0_80502b5 = load i32, i32* @edi, align 4
  %v1_80502b5 = add i32 %v0_80502b5, 4
  %v2_80502b5 = inttoptr i32 %v1_80502b5 to i32*
  %v3_80502b5 = load i32, i32* %v2_80502b5, align 4
  store i32 %v3_80502b5, i32* %ecx.global-to-local, align 4
  %v2_80502b8 = inttoptr i32 %v0_80502b5 to i32*
  store i32 %v0_80502b8, i32* %v2_80502b8, align 4
  %v0_80502ba = load i32, i32* @edi, align 4
  %v1_80502ba = add i32 %v0_80502ba, 24
  %v2_80502ba = inttoptr i32 %v1_80502ba to i32*
  store i32 0, i32* %v2_80502ba, align 4
  %v0_804f7c5.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_804f7cd.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f7c5

dec_label_pc_80502c6:                             ; preds = %dec_label_pc_804f92d
  %v1_80502c6 = add i32 %v0_804f981, 1880
  %v2_80502c6 = inttoptr i32 %v1_80502c6 to i32*
  %v3_80502c6 = load i32, i32* %v2_80502c6, align 4
  %v1_80502cd = add i32 %v3_80502c6, -1
  store i32 %v1_80502cd, i32* %eax.global-to-local, align 4
  %v2_80502ce = add i32 %v0_804f981, 28
  %v3_80502ce = inttoptr i32 %v2_80502ce to i32*
  store i32 %v1_80502cd, i32* %v3_80502ce, align 4
  %v0_80502cf = load i32, i32* @esi, align 4
  %v2_80502cf = add i32 %v0_804f981, 24
  %v3_80502cf = inttoptr i32 %v2_80502cf to i32*
  store i32 %v0_80502cf, i32* %v3_80502cf, align 4
  %v0_80502d0 = load i32, i32* @edi, align 4
  %v1_80502d0 = add i32 %v0_80502d0, 24
  %v2_80502d0 = inttoptr i32 %v1_80502d0 to i32*
  %v3_80502d0 = load i32, i32* %v2_80502d0, align 4
  store i32 %v3_80502d0, i32* %eax.global-to-local, align 4
  %v2_80502d3 = add i32 %v0_804f981, 20
  %v3_80502d3 = inttoptr i32 %v2_80502d3 to i32*
  store i32 %v3_80502d0, i32* %v3_80502d3, align 4
  %v1_80502d4 = add i32 %v0_804f981, 40
  %v2_80502d4 = inttoptr i32 %v1_80502d4 to i32*
  %v3_80502d4 = load i32, i32* %v2_80502d4, align 4
  %v2_80502d8 = add i32 %v0_804f981, 16
  %v3_80502d8 = inttoptr i32 %v2_80502d8 to i32*
  store i32 %v3_80502d4, i32* %v3_80502d8, align 4
  %v0_80502d9 = call i32 @function_8051130()
  %v0_80502de = load i32, i32* @esp, align 4
  %v1_80502de = add i32 %v0_80502de, 16
  %v8_80502e1 = icmp eq i32 %v0_80502d9, -1
  %v1_80502e2 = icmp eq i1 %v8_80502e1, false
  %v2_80502e2 = zext i1 %v1_80502e2 to i32
  %v2_80502e5 = icmp eq i1 %v1_80502e2, false
  store i32 %v2_80502e2, i32* %eax.global-to-local, align 4
  store i32 %v2_80502e2, i32* @ebp, align 4
  %v1_80502ee = icmp eq i1 %v2_80502e5, false
  br i1 %v1_80502ee, label %dec_label_pc_804f997, label %dec_label_pc_80502f4

dec_label_pc_80502f4:                             ; preds = %dec_label_pc_80502c6
  %v2_80502f7 = inttoptr i32 %v0_80502de to i32*
  store i32 32, i32* %v2_80502f7, align 4
  %v2_80502f9 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80502f9, i32* %eax.global-to-local, align 4
  %v0_80502fe = load i32, i32* @esp, align 4
  %v1_80502fe = inttoptr i32 %v0_80502fe to i32*
  store i32 33, i32* %v1_80502fe, align 4
  %v2_8050305 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8050305, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f7dc.backedge

dec_label_pc_804f7dc.backedge:                    ; preds = %dec_label_pc_804f9f3, %dec_label_pc_804fdf9, %dec_label_pc_804fa3c, %dec_label_pc_804f997, %dec_label_pc_804f84e, %dec_label_pc_804fcce, %dec_label_pc_804fc90, %dec_label_pc_804ffd7, %dec_label_pc_804fc48, %dec_label_pc_804faa0, %dec_label_pc_804ff5e, %dec_label_pc_804fa57, %dec_label_pc_80500f2, %dec_label_pc_804fb23, %dec_label_pc_804fae5, %dec_label_pc_804fe94, %dec_label_pc_804fcb9, %dec_label_pc_804fadd, %dec_label_pc_804fc85, %dec_label_pc_804fb0e, %dec_label_pc_804fa94, %dec_label_pc_804fdf9.thread, %dec_label_pc_80502f4
  %v0_804f7dc = load i32, i32* @edi, align 4
  %v1_804f7dc = add i32 %v0_804f7dc, 12
  %v2_804f7dc = inttoptr i32 %v1_804f7dc to i32*
  %v3_804f7dc = load i32, i32* %v2_804f7dc, align 4
  store i32 %v3_804f7dc, i32* %eax.global-to-local, align 4
  %v1_804f7df = icmp eq i32 %v3_804f7dc, 0
  br i1 %v1_804f7df, label %dec_label_pc_804f779, label %dec_label_pc_804f7dc.backedge.dec_label_pc_804f7e3_crit_edge

dec_label_pc_804f7dc.backedge.dec_label_pc_804f7e3_crit_edge: ; preds = %dec_label_pc_804f7dc.backedge
  %v1_804f7e6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804f7e3

dec_label_pc_8050312:                             ; preds = %dec_label_pc_80501d0
  %v0_8050315 = load i32, i32* @edi, align 4
  %v1_8050315 = add i32 %v0_8050315, 4
  %v2_8050315 = inttoptr i32 %v1_8050315 to i32*
  %v3_8050315 = load i32, i32* %v2_8050315, align 4
  store i32 %v3_8050315, i32* %eax.global-to-local, align 4
  %v2_8050318 = add i32 %v0_8050206, 16
  %v3_8050318 = inttoptr i32 %v2_8050318 to i32*
  store i32 %v3_8050315, i32* %v3_8050318, align 4
  %v1_8050319 = call i32 @function_80515f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050319, i32* %eax.global-to-local, align 4
  %v0_8050321 = load i32, i32* @edi, align 4
  %v1_8050321 = add i32 %v0_8050321, 4
  %v2_8050321 = inttoptr i32 %v1_8050321 to i32*
  store i32 -1, i32* %v2_8050321, align 4
  %v0_8050328 = load i32, i32* @edi, align 4
  %v1_8050328 = add i32 %v0_8050328, 284
  %v2_8050328 = inttoptr i32 %v1_8050328 to i8*
  store i8 0, i8* %v2_8050328, align 1
  %v0_805032f = load i32, i32* @edi, align 4
  %v1_805032f = add i32 %v0_805032f, 12
  %v2_805032f = inttoptr i32 %v1_805032f to i32*
  store i32 0, i32* %v2_805032f, align 4
  br label %dec_label_pc_804f779

dec_label_pc_805033b:                             ; preds = %dec_label_pc_804fde7
  %v11_805033b = icmp eq i8 %v2_804fde7, -5
  %v1_805033d = icmp eq i1 %v11_805033b, false
  br i1 %v1_805033d, label %dec_label_pc_804f897, label %dec_label_pc_8050343

dec_label_pc_8050343:                             ; preds = %dec_label_pc_805033b
  store i8 -3, i8* %v1_804fde7, align 1
  br label %dec_label_pc_804f897

dec_label_pc_805035d:                             ; preds = %dec_label_pc_804fe06
  %v1_805035d = add i32 %v0_804f821, 40
  %v2_805035d = inttoptr i32 %v1_805035d to i32*
  %v3_805035d = load i32, i32* %v2_805035d, align 4
  store i32 %v3_805035d, i32* %eax.global-to-local, align 4
  %v1_8050361 = inttoptr i32 %v3_805035d to i32*
  store i32 104, i32* %v1_8050361, align 4
  %v0_804fe22.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804fe22

dec_label_pc_805036c:                             ; preds = %dec_label_pc_804fe22
  store i32 %v0_805036c, i32* @eax, align 4
  %v0_805036e = call i32 @function_804ec50()
  store i32 %v0_805036e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f779

dec_label_pc_8050393:                             ; preds = %dec_label_pc_8050151
  %v1_8050393 = add i32 %v0_8050168, 1
  %v8_8050393 = icmp eq i32 %v1_8050393, 0
  store i32 %v1_8050393, i32* %eax.global-to-local, align 4
  br i1 %v8_8050393, label %dec_label_pc_8050175, label %dec_label_pc_805039a

dec_label_pc_805039a:                             ; preds = %dec_label_pc_8050393
  %v0_805039a = load i32, i32* @ecx, align 4
  %v1_805039a = load i32, i32* @esp, align 4
  %v2_805039a = add i32 %v1_805039a, -4
  %v3_805039a = inttoptr i32 %v2_805039a to i32*
  store i32 %v0_805039a, i32* %v3_805039a, align 4
  %v1_805039b = add i32 %v1_805039a, -8
  %v2_805039b = inttoptr i32 %v1_805039b to i32*
  store i32 0, i32* %v2_805039b, align 4
  %v1_805039d = add i32 %v1_805039a, -12
  %v2_805039d = inttoptr i32 %v1_805039d to i32*
  store i32 1, i32* %v2_805039d, align 4
  %v1_805039f = add i32 %v1_805039a, -16
  %v2_805039f = inttoptr i32 %v1_805039f to i32*
  store i32 2, i32* %v2_805039f, align 4
  %v4_80503a1 = call i32 @function_8051dd4(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80503a1, i32* @eax, align 4
  %v0_80503a6 = load i32, i32* @esp, align 4
  %sext7 = mul i32 %v4_80503a1, 16777216
  %v1_80503a9 = sdiv i32 %sext7, 16777216
  store i32 %v1_80503a9, i32* @ebx, align 4
  %tmp275 = icmp eq i32 %sext7, -16777216
  %v2_804f527 = inttoptr i32 %v0_80503a6 to i32*
  br i1 %tmp275, label %dec_label_pc_804f524, label %dec_label_pc_80503b4

dec_label_pc_80503b4:                             ; preds = %dec_label_pc_805039a
  store i32 4, i32* %v2_804f527, align 4
  %v2_80503b9 = call i32 @function_8050570(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80503b9, i32* %eax.global-to-local, align 4
  %v0_80503be = load i32, i32* @esp, align 4
  %v1_80503be = inttoptr i32 %v0_80503be to i32*
  %v2_80503be = load i32, i32* %v1_80503be, align 4
  store i32 %v2_80503be, i32* %eax.global-to-local, align 4
  %v3_80503be = add i32 %v0_80503be, 4
  %v1_80503bf = inttoptr i32 %v3_80503be to i32*
  %v2_80503bf = load i32, i32* %v1_80503bf, align 4
  store i32 %v2_80503bf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80503bf, align 4
  store i32 -1378207815, i32* @global_var_8055168.40, align 8
  store i32 4, i32* %v1_80503be, align 4
  %v3_80503ce = call i32 @function_80504c0(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_80503ce = inttoptr i32 %v3_80503ce to i16*
  store i32 %v3_80503ce, i32* %eax.global-to-local, align 4
  %v3_80503d3 = load i16, i16* %v4_80503ce, align 2
  %v4_80503d3 = zext i16 %v3_80503d3 to i32
  %v7_80503d3 = and i32 %v3_80503ce, -65536
  %v8_80503d3 = or i32 %v4_80503d3, %v7_80503d3
  store i32 %v8_80503d3, i32* %eax.global-to-local, align 4
  %v0_80503d6 = load i32, i32* @esp, align 4
  %v1_80503d6 = inttoptr i32 %v0_80503d6 to i32*
  store i32 4, i32* %v1_80503d6, align 4
  %v0_80503dd = load i32, i32* %eax.global-to-local, align 4
  %v1_80503dd = trunc i32 %v0_80503dd to i16
  %v2_80503dd = load i32, i32* @esp, align 4
  %v3_80503dd = add i32 %v2_80503dd, 1830
  %v4_80503dd = inttoptr i32 %v3_80503dd to i16*
  store i16 %v1_80503dd, i16* %v4_80503dd, align 2
  %v2_80503e5 = call i32 @function_80504f0(i8 ptrtoint (i32* @0 to i8))
  %v0_80503ea = load i32, i32* @esp, align 4
  %v1_80503ea = add i32 %v0_80503ea, 1828
  store i32 %v1_80503ea, i32* %eax.global-to-local, align 4
  %v1_80503f4 = add i32 %v0_80503ea, 8
  %v2_80503f4 = inttoptr i32 %v1_80503f4 to i32*
  store i32 16, i32* %v2_80503f4, align 4
  %v0_80503f6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80503f6 = add i32 %v0_80503ea, 4
  %v3_80503f6 = inttoptr i32 %v2_80503f6 to i32*
  store i32 %v0_80503f6, i32* %v3_80503f6, align 4
  %v0_80503f7 = load i32, i32* @ebx, align 4
  %v3_80503f7 = inttoptr i32 %v0_80503ea to i32*
  store i32 %v0_80503f7, i32* %v3_80503f7, align 4
  %v3_80503f8 = call i32 @function_8051bf9(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80503fd = load i32, i32* @esp, align 4
  %v1_80503fd = add i32 %v0_80503fd, 16
  %v1_8050400 = add i32 %v3_80503f8, 1
  %v8_8050400 = icmp eq i32 %v1_8050400, 0
  store i32 %v1_8050400, i32* %eax.global-to-local, align 4
  %v1_8050401 = icmp eq i1 %v8_8050400, false
  br i1 %v1_8050401, label %dec_label_pc_8050418, label %dec_label_pc_8050403

dec_label_pc_8050403:                             ; preds = %dec_label_pc_80503b4
  br label %dec_label_pc_8050406

dec_label_pc_8050406:                             ; preds = %dec_label_pc_8050418, %dec_label_pc_8050403
  %storemerge4.in = phi i32 [ %v0_80503fd, %dec_label_pc_8050403 ], [ %v0_80504b3, %dec_label_pc_8050418 ]
  %v0_8050406 = load i32, i32* @ebx, align 4
  %v3_8050406 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v0_8050406, i32* %v3_8050406, align 4
  %v1_8050407 = call i32 @function_80515f3(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050407, i32* @eax, align 4
  %v0_805040c = load i32, i32* @esp, align 4
  %v1_805040c = inttoptr i32 %v0_805040c to i32*
  store i32 0, i32* %v1_805040c, align 4
  %v1_8050413 = call i32 @function_8052fcd(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050413, i32* %eax.global-to-local, align 4
  %v0_8050418.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050418

dec_label_pc_8050418:                             ; preds = %dec_label_pc_80503b4, %dec_label_pc_8050406
  %v0_8050418 = phi i32 [ %v1_80503fd, %dec_label_pc_80503b4 ], [ %v0_8050418.pre, %dec_label_pc_8050406 ]
  %v1_8050418 = add i32 %v0_8050418, 1852
  %v2_8050418 = inttoptr i32 %v1_8050418 to i8*
  store i8 0, i8* %v2_8050418, align 1
  %v0_8050420 = load i32, i32* @esp, align 4
  %v1_8050420 = add i32 %v0_8050420, -4
  %v2_8050420 = inttoptr i32 %v1_8050420 to i32*
  store i32 16384, i32* %v2_8050420, align 4
  %v1_8050425 = add i32 %v0_8050420, -8
  %v2_8050425 = inttoptr i32 %v1_8050425 to i32*
  store i32 1, i32* %v2_8050425, align 4
  %v1_8050427 = add i32 %v0_8050420, 1852
  store i32 %v1_8050427, i32* %eax.global-to-local, align 4
  %v2_805042e = add i32 %v0_8050420, -12
  %v3_805042e = inttoptr i32 %v2_805042e to i32*
  store i32 %v1_8050427, i32* %v3_805042e, align 4
  %v0_805042f = load i32, i32* @ebx, align 4
  %v2_805042f = add i32 %v0_8050420, -16
  %v3_805042f = inttoptr i32 %v2_805042f to i32*
  store i32 %v0_805042f, i32* %v3_805042f, align 4
  %v0_8050430 = call i32 @function_8051d23()
  %v0_8050435 = load i32, i32* @esp, align 4
  %v1_8050435 = add i32 %v0_8050435, -4
  %v2_8050435 = inttoptr i32 %v1_8050435 to i32*
  store i32 16384, i32* %v2_8050435, align 4
  %v1_805043a = add i32 %v0_8050435, -8
  %v2_805043a = inttoptr i32 %v1_805043a to i32*
  store i32 4, i32* %v2_805043a, align 4
  %v1_805043c = add i32 %v0_8050435, 1864
  store i32 %v1_805043c, i32* %eax.global-to-local, align 4
  %v2_8050443 = add i32 %v0_8050435, -12
  %v3_8050443 = inttoptr i32 %v2_8050443 to i32*
  store i32 %v1_805043c, i32* %v3_8050443, align 4
  %v0_8050444 = load i32, i32* @ebx, align 4
  %v2_8050444 = add i32 %v0_8050435, -16
  %v3_8050444 = inttoptr i32 %v2_8050444 to i32*
  store i32 %v0_8050444, i32* %v3_8050444, align 4
  %v0_8050445 = call i32 @function_8051d23()
  %v0_805044a = load i32, i32* @esp, align 4
  %v1_805044d = add i32 %v0_805044a, 28
  %v2_805044d = inttoptr i32 %v1_805044d to i32*
  store i32 16384, i32* %v2_805044d, align 4
  %v1_8050452 = add i32 %v0_805044a, 24
  %v2_8050452 = inttoptr i32 %v1_8050452 to i32*
  store i32 2, i32* %v2_8050452, align 4
  %v1_8050454 = add i32 %v0_805044a, 1898
  store i32 %v1_8050454, i32* %eax.global-to-local, align 4
  %v2_805045b = add i32 %v0_805044a, 20
  %v3_805045b = inttoptr i32 %v2_805045b to i32*
  store i32 %v1_8050454, i32* %v3_805045b, align 4
  %v0_805045c = load i32, i32* @ebx, align 4
  %v2_805045c = add i32 %v0_805044a, 16
  %v3_805045c = inttoptr i32 %v2_805045c to i32*
  store i32 %v0_805045c, i32* %v3_805045c, align 4
  %v0_805045d = call i32 @function_8051d23()
  %v0_8050462 = load i32, i32* @esi, align 4
  %v1_8050462 = add i32 %v0_8050462, 12
  store i32 %v1_8050462, i32* %eax.global-to-local, align 4
  %v0_8050465 = load i32, i32* @esp, align 4
  %v1_8050465 = add i32 %v0_8050465, -4
  %v2_8050465 = inttoptr i32 %v1_8050465 to i32*
  store i32 16384, i32* %v2_8050465, align 4
  %v1_805046a = add i32 %v0_8050465, -8
  %v2_805046a = inttoptr i32 %v1_805046a to i32*
  store i32 1, i32* %v2_805046a, align 4
  %v0_805046c = load i32, i32* %eax.global-to-local, align 4
  %v2_805046c = add i32 %v0_8050465, -12
  %v3_805046c = inttoptr i32 %v2_805046c to i32*
  store i32 %v0_805046c, i32* %v3_805046c, align 4
  %v0_805046d = load i32, i32* @ebx, align 4
  %v2_805046d = add i32 %v0_8050465, -16
  %v3_805046d = inttoptr i32 %v2_805046d to i32*
  store i32 %v0_805046d, i32* %v3_805046d, align 4
  %v0_805046e = call i32 @function_8051d23()
  %v0_8050473 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8050478 = add i32 %v0_8050473, 28
  %v2_8050478 = inttoptr i32 %v1_8050478 to i32*
  store i32 16384, i32* %v2_8050478, align 4
  %v0_805047d = load i32, i32* @esi, align 4
  %v1_805047d = add i32 %v0_805047d, 12
  %v2_805047d = inttoptr i32 %v1_805047d to i8*
  %v3_805047d = load i8, i8* %v2_805047d, align 1
  %v4_805047d = zext i8 %v3_805047d to i32
  %v5_805047d = load i32, i32* %eax.global-to-local, align 4
  %v6_805047d = and i32 %v5_805047d, -256
  %v7_805047d = or i32 %v6_805047d, %v4_805047d
  store i32 %v7_805047d, i32* %eax.global-to-local, align 4
  %v2_8050480 = add i32 %v0_8050473, 24
  %v3_8050480 = inttoptr i32 %v2_8050480 to i32*
  store i32 %v7_805047d, i32* %v3_8050480, align 4
  %v0_8050481 = load i32, i32* @esi, align 4
  %v1_8050481 = inttoptr i32 %v0_8050481 to i32*
  %v2_8050481 = load i32, i32* %v1_8050481, align 4
  store i32 %v2_8050481, i32* %eax.global-to-local, align 4
  %v2_8050483 = add i32 %v0_8050473, 20
  %v3_8050483 = inttoptr i32 %v2_8050483 to i32*
  store i32 %v2_8050481, i32* %v3_8050483, align 4
  %v0_8050484 = load i32, i32* @ebx, align 4
  %v2_8050484 = add i32 %v0_8050473, 16
  %v3_8050484 = inttoptr i32 %v2_8050484 to i32*
  store i32 %v0_8050484, i32* %v3_8050484, align 4
  %v0_8050485 = call i32 @function_8051d23()
  %v0_805048a = load i32, i32* @esi, align 4
  %v1_805048a = add i32 %v0_805048a, 13
  store i32 %v1_805048a, i32* %eax.global-to-local, align 4
  %v0_805048d = load i32, i32* @esp, align 4
  %v1_805048d = add i32 %v0_805048d, -4
  %v2_805048d = inttoptr i32 %v1_805048d to i32*
  store i32 16384, i32* %v2_805048d, align 4
  %v1_8050492 = add i32 %v0_805048d, -8
  %v2_8050492 = inttoptr i32 %v1_8050492 to i32*
  store i32 1, i32* %v2_8050492, align 4
  %v0_8050494 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050494 = add i32 %v0_805048d, -12
  %v3_8050494 = inttoptr i32 %v2_8050494 to i32*
  store i32 %v0_8050494, i32* %v3_8050494, align 4
  %v0_8050495 = load i32, i32* @ebx, align 4
  %v2_8050495 = add i32 %v0_805048d, -16
  %v3_8050495 = inttoptr i32 %v2_8050495 to i32*
  store i32 %v0_8050495, i32* %v3_8050495, align 4
  %v0_8050496 = call i32 @function_8051d23()
  %v0_805049b = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_80504a0 = add i32 %v0_805049b, 28
  %v2_80504a0 = inttoptr i32 %v1_80504a0 to i32*
  store i32 16384, i32* %v2_80504a0, align 4
  %v0_80504a5 = load i32, i32* @esi, align 4
  %v1_80504a5 = add i32 %v0_80504a5, 13
  %v2_80504a5 = inttoptr i32 %v1_80504a5 to i8*
  %v3_80504a5 = load i8, i8* %v2_80504a5, align 1
  %v4_80504a5 = zext i8 %v3_80504a5 to i32
  %v5_80504a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80504a5 = and i32 %v5_80504a5, -256
  %v7_80504a5 = or i32 %v6_80504a5, %v4_80504a5
  store i32 %v7_80504a5, i32* %eax.global-to-local, align 4
  %v2_80504a8 = add i32 %v0_805049b, 24
  %v3_80504a8 = inttoptr i32 %v2_80504a8 to i32*
  store i32 %v7_80504a5, i32* %v3_80504a8, align 4
  %v0_80504a9 = load i32, i32* @esi, align 4
  %v1_80504a9 = add i32 %v0_80504a9, 4
  %v2_80504a9 = inttoptr i32 %v1_80504a9 to i32*
  %v3_80504a9 = load i32, i32* %v2_80504a9, align 4
  %v2_80504ac = add i32 %v0_805049b, 20
  %v3_80504ac = inttoptr i32 %v2_80504ac to i32*
  store i32 %v3_80504a9, i32* %v3_80504ac, align 4
  %v0_80504ad = load i32, i32* @ebx, align 4
  %v2_80504ad = add i32 %v0_805049b, 16
  %v3_80504ad = inttoptr i32 %v2_80504ad to i32*
  store i32 %v0_80504ad, i32* %v3_80504ad, align 4
  %v0_80504ae = call i32 @function_8051d23()
  store i32 %v0_80504ae, i32* %eax.global-to-local, align 4
  %v0_80504b3 = load i32, i32* @esp, align 4
  %v1_80504b3 = inttoptr i32 %v0_80504b3 to i32*
  %v2_80504b3 = load i32, i32* %v1_80504b3, align 4
  store i32 %v2_80504b3, i32* @edi, align 4
  br label %dec_label_pc_8050406

; uselistorder directives
  uselistorder i32 %v0_80504b3, { 1, 0 }
  uselistorder i32 %v0_804f7dc, { 1, 0 }
  uselistorder i32 %v0_8050249, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050248, { 1, 0, 2 }
  uselistorder i16 %v1_8050250, { 1, 0 }
  uselistorder i64 %v8_8050239, { 1, 0 }
  uselistorder i32 %v2_80501bc, { 1, 0 }
  uselistorder i32 %v3_80501b9, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050168, { 1, 0, 2 }
  uselistorder i32 %v0_8050140, { 2, 1, 0 }
  uselistorder i32 %v0_8050119, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v3_80500db, { 1, 0 }
  uselistorder i32 %v0_80500db, { 1, 0 }
  uselistorder i32 %v0_80500d3, { 1, 0 }
  uselistorder i32 %v0_805005c, { 1, 0 }
  uselistorder i32 %v1_804ffd7, { 1, 2, 0 }
  uselistorder i32 %v1_804ff5e, { 1, 2, 0 }
  uselistorder i32 %v0_804ff19, { 1, 0 }
  uselistorder i32 %v1_804fe94, { 1, 2, 0 }
  uselistorder i32 %v0_805036c, { 1, 0 }
  uselistorder i32 %v2_804fdd3, { 1, 0, 2 }
  uselistorder i32 %v1_804fdd0, { 1, 0, 2 }
  uselistorder i32 %v0_804fdcd, { 1, 0 }
  uselistorder i32 %v0_804fdc9, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v7_804fd55, { 1, 0 }
  uselistorder i32 %v0_804fd55, { 1, 2, 0 }
  uselistorder i32 %v2_804f867, { 1, 0 }
  uselistorder i32 %v0_804f867, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_804f867, { 0, 2, 1 }
  uselistorder i32 %v0_804f8e5124, { 1, 0 }
  uselistorder i32 %v9_804fcc0, { 1, 0 }
  uselistorder i32 %v1_804fcb9, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_804fcb9, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_804fc90, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804fc85, { 2, 1, 0 }
  uselistorder i32 %v9_804fc54, { 1, 0 }
  uselistorder i32 %v0_804ffd7, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804fc22, { 1, 2, 0 }
  uselistorder i32 %v1_804fc22, { 1, 2, 0, 3 }
  uselistorder i32 %v3_804fc1d, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_80500e3, { 1, 0 }
  uselistorder i32* %v1_80500fc, { 2, 0, 1 }
  uselistorder i32 %v0_804fbb7, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v9_804fb15, { 1, 0 }
  uselistorder i32 %v1_804fb0e, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_804fb0e, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_804fae5, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804fadd, { 2, 1, 0 }
  uselistorder i32 %v9_804faac, { 1, 0 }
  uselistorder i32 %v0_804fe94, { 0, 1, 3, 2 }
  uselistorder i32 %v1_804fa94, { 2, 1, 0 }
  uselistorder i32 %v9_804fa63, { 1, 0 }
  uselistorder i32 %v0_804ff5e, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804fa49, { 1, 0 }
  uselistorder i32 %v0_804fa0e, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804f9f0, { 2, 1, 0 }
  uselistorder i32 %v9_804f9c8, { 1, 0 }
  uselistorder i32 %v0_8050050, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804f9b0, { 1, 0 }
  uselistorder i32 %v0_804f969, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804f92a, { 2, 1, 0 }
  uselistorder i32 %v9_804f8f9, { 1, 0 }
  uselistorder i32 %v0_804ff0d, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804f8d9, { 1, 0 }
  uselistorder i32 %v0_804f8d9, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_804f8d3, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804f8d3, { 0, 2, 1 }
  uselistorder i32 %v0_804f8ce, { 1, 0 }
  uselistorder i32 %v0_804f8a9, { 1, 0, 2 }
  uselistorder i8* %v1_804f897, { 1, 0, 2 }
  uselistorder i32 %v1_804f874, { 1, 0, 2 }
  uselistorder i32 %v0_804fd69, { 1, 0, 2 }
  uselistorder i32 %v0_804fd4a, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804f8e5125, { 3, 0, 1, 2 }
  uselistorder i32 %v2_804f86717, { 1, 0 }
  uselistorder i32 %v3_804f84e, { 1, 0 }
  uselistorder i32 %v0_804f84e, { 1, 15, 2, 13, 3, 12, 4, 14, 5, 11, 6, 10, 7, 9, 0, 8, 16 }
  uselistorder i32 %v1_804f839, { 0, 2, 1 }
  uselistorder i32 %v0_804f835, { 1, 0 }
  uselistorder i32 %v0_804f81c, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_804f812, { 1, 0 }
  uselistorder i32 %v1_804f7ca, { 1, 0 }
  uselistorder i32 %v2_804f7c7, { 1, 0 }
  uselistorder i32 %v0_804f7c5, { 1, 0 }
  uselistorder i32 %v0_804f7b2, { 2, 1, 0 }
  uselistorder i32 %v1_804f7af, { 1, 0 }
  uselistorder i32 %v2_804f7ac, { 1, 0 }
  uselistorder i32 %v3_804f7a0, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_804f788, { 1, 0 }
  uselistorder i32 %v0_804f788, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804f72f, { 1, 0 }
  uselistorder i32 %v1_804f70f, { 1, 0 }
  uselistorder i32 %v0_804f70f, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804f6fa, { 1, 0 }
  uselistorder i32 %v3_804f6f7, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80501ae, { 1, 0 }
  uselistorder i32 %v1_80501ab, { 2, 1, 0 }
  uselistorder i32 %v3_804f6bf, { 1, 0, 2 }
  uselistorder i32 %v2_804f6bd, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_804f668, { 1, 0 }
  uselistorder i32 %v1_804f65d, { 1, 0 }
  uselistorder i32 %v0_804f65d, { 1, 0 }
  uselistorder i32 %v0_804f666, { 0, 3, 2, 1 }
  uselistorder i32 %v1_804f63a, { 1, 0 }
  uselistorder i32 %v0_804f63a, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_804f62c, { 1, 0, 2 }
  uselistorder i32 %v4_804f5ef, { 1, 2, 0 }
  uselistorder i32 %v3_804f5be, { 1, 0, 2 }
  uselistorder i32 %v0_804f542, { 0, 2, 1 }
  uselistorder i32 %v0_804f539, { 0, 3, 2, 1 }
  uselistorder i32 %v0_804f2fd62, { 1, 0 }
  uselistorder i32 %v0_804f51a, { 2, 1, 0 }
  uselistorder i8 %v1_804f4ec, { 1, 0 }
  uselistorder i8 %v2_804f4c6, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_804f4bd, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_804f4bb, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_804f4b5, { 3, 0, 1, 2 }
  uselistorder i32 %v0_804f4b0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f463, { 1, 0 }
  uselistorder i32 %v0_804f3b3, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804f3ae, { 1, 0 }
  uselistorder i32 %v1_804f38b, { 0, 2, 1 }
  uselistorder i32 %v0_804f2eb, { 2, 0, 1 }
  uselistorder i32 %v0_804f2ae, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 43, 23, 24, 44, 45, 46, 19, 8, 9, 10, 3, 6, 14, 15, 16, 52, 26, 27, 28, 20, 0, 1, 2, 4, 47, 48, 49, 50, 51, 5, 7, 11, 12, 13, 17, 18, 21, 22, 29, 30, 31, 32, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32* %ecx.global-to-local, { 10, 11, 12, 13, 14, 15, 31, 3, 1, 2, 4, 33, 34, 7, 0, 8, 32, 5, 6, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %eax.global-to-local, { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 190, 191, 192, 193, 194, 196, 47, 108, 109, 110, 189, 62, 63, 64, 65, 66, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 197, 199, 198, 200, 201, 202, 203, 204, 206, 86, 87, 88, 89, 90, 49, 50, 51, 52, 53, 9, 10, 11, 12, 13, 14, 15, 39, 40, 41, 42, 43, 44, 67, 68, 69, 70, 71, 228, 229, 230, 231, 232, 233, 102, 125, 126, 127, 128, 140, 129, 130, 131, 132, 91, 92, 93, 94, 103, 0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 95, 96, 97, 98, 99, 207, 208, 209, 210, 211, 212, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 37, 38, 45, 46, 48, 54, 55, 56, 57, 58, 59, 60, 61, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 100, 101, 104, 105, 106, 107, 133, 134, 135, 136, 137, 138, 139, 141, 234, 142, 143, 144, 145, 146, 187, 188, 147, 148, 149, 150, 151, 152, 153, 154, 155, 124, 156, 161, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 195, 184, 186, 185, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183 }
  uselistorder i32 ()* @function_8051c4f, { 1, 0 }
  uselistorder i32 1852, { 1, 2, 0, 3 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 (i8)* @function_80504f0, { 2, 5, 6, 13, 1, 3, 16, 0, 14, 15, 4, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20 }
  uselistorder i32 ()* @function_8051130, { 23, 21, 20, 24, 22, 19, 18, 17, 16, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 1864, { 6, 0, 4, 5, 7, 2, 3, 1 }
  uselistorder i32 (i32, i32*)* @function_80504c0, { 10, 11, 1, 2, 14, 0, 12, 13, 3, 4, 5, 6, 7, 8, 9, 15, 16, 36, 37, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32 1868, { 10, 8, 2, 3, 4, 5, 6, 7, 11, 9, 12, 1, 13, 0 }
  uselistorder i32 (i8)* @function_8050570, { 10, 11, 1, 2, 14, 0, 12, 13, 3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 18, 19, 0, 1, 20, 21, 12, 13, 8, 9, 14, 15, 16, 17, 22, 23, 10, 11, 6, 7, 2, 3, 4, 5 }
  uselistorder i8 37, { 5, 3, 2, 4, 1, 0 }
  uselistorder i8 35, { 6, 4, 3, 5, 2, 1, 0 }
  uselistorder i8 36, { 6, 4, 3, 5, 2, 1, 0 }
  uselistorder i8 62, { 7, 8, 5, 3, 4, 6, 2, 1, 0 }
  uselistorder i8 58, { 7, 8, 5, 3, 4, 6, 2, 1, 0 }
  uselistorder i32 ()* @function_8051d23, { 20, 19, 18, 17, 16, 15, 14, 7, 6, 11, 10, 22, 21, 13, 12, 9, 8, 2, 1, 24, 23, 4, 3, 5, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32 ()* @function_8051cad, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_80518b4, { 4, 3, 0, 2, 1 }
  uselistorder i32 ()* @function_80517fa, { 1, 0 }
  uselistorder i32 1556, { 1, 2, 0 }
  uselistorder i32 1684, { 1, 0, 2 }
  uselistorder i32 ()* @function_804ec50, { 3, 2, 0, 1 }
  uselistorder i32 288, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 2, 3, 1 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 ()* @function_804eaf0, { 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_8055116.28, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1856, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050418, { 1, 0 }
  uselistorder label %dec_label_pc_804f7dc.backedge, { 22, 12, 7, 10, 15, 1, 5, 16, 6, 18, 8, 13, 19, 14, 17, 9, 20, 11, 2, 0, 3, 21, 4 }
  uselistorder label %dec_label_pc_804fe22, { 1, 0 }
  uselistorder label %dec_label_pc_804fdf9, { 6, 3, 1, 2, 4, 8, 0, 7, 5 }
  uselistorder label %dec_label_pc_804f867.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804fcda, { 1, 0 }
  uselistorder label %dec_label_pc_804fcaa, { 1, 0 }
  uselistorder label %dec_label_pc_804fc54, { 1, 0 }
  uselistorder label %dec_label_pc_804fc28, { 1, 0 }
  uselistorder label %dec_label_pc_804fc1d, { 7, 8, 4, 2, 3, 5, 10, 0, 1, 11, 9, 6 }
  uselistorder label %dec_label_pc_804fb2f, { 1, 0 }
  uselistorder label %dec_label_pc_804faff, { 1, 0 }
  uselistorder label %dec_label_pc_804faac, { 1, 0 }
  uselistorder label %dec_label_pc_804fa63, { 1, 0 }
  uselistorder label %dec_label_pc_804f9f3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f9c8, { 1, 0 }
  uselistorder label %dec_label_pc_804f92d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f8f9, { 1, 0 }
  uselistorder label %dec_label_pc_804f8dd, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_804f8bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f8a9, { 1, 0 }
  uselistorder label %dec_label_pc_804f897, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_804f86b, { 1, 0 }
  uselistorder label %dec_label_pc_804f86b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804f83e, { 1, 0 }
  uselistorder label %dec_label_pc_804f839, { 1, 0 }
  uselistorder label %dec_label_pc_804f7f7, { 1, 0 }
  uselistorder label %dec_label_pc_804f7e3, { 1, 0 }
  uselistorder label %dec_label_pc_804f7c5, { 1, 0 }
  uselistorder label %dec_label_pc_804f779, { 5, 6, 0, 7, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_804f751, { 1, 0 }
  uselistorder label %dec_label_pc_804f700, { 3, 4, 5, 0, 1, 6, 2 }
  uselistorder label %dec_label_pc_804f6cb, { 1, 0 }
  uselistorder label %dec_label_pc_804f686, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804f65d, { 1, 0 }
  uselistorder label %dec_label_pc_804f576, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_804f56b, { 1, 0 }
  uselistorder label %dec_label_pc_804f530, { 1, 0 }
  uselistorder label %dec_label_pc_804f4fa, { 1, 0 }
  uselistorder label %dec_label_pc_804f4b0.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_804f2fd, { 1, 2, 4, 0, 3 }
}

define i32 @function_80504c0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_80504c0:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_80504c8 = icmp eq i32* %arg2, null
  %v1_80504ca = mul i32 %arg1, 8
  store i32 %v1_80504ca, i32* @edx, align 4
  br i1 %v1_80504c8, label %dec_label_pc_80504e3, label %dec_label_pc_80504d9

dec_label_pc_80504d9:                             ; preds = %dec_label_pc_80504c0
  %v1_80504d9 = add i32 %v1_80504ca, add (i32 ptrtoint (i32* @global_var_80551a0.41 to i32), i32 4)
  %v2_80504d9 = inttoptr i32 %v1_80504d9 to i32*
  %v3_80504d9 = load i32, i32* %v2_80504d9, align 4
  %v1_80504dc = urem i32 %v3_80504d9, 65536
  store i32 %v1_80504dc, i32* %arg2, align 4
  %v0_80504e3.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80504e3

dec_label_pc_80504e3:                             ; preds = %dec_label_pc_80504c0, %dec_label_pc_80504d9
  %v0_80504e3 = phi i32 [ %v1_80504ca, %dec_label_pc_80504c0 ], [ %v0_80504e3.pre, %dec_label_pc_80504d9 ]
  %v1_80504e3 = add i32 %v0_80504e3, ptrtoint (i32* @global_var_80551a0.41 to i32)
  %v2_80504e3 = inttoptr i32 %v1_80504e3 to i32*
  %v3_80504e3 = load i32, i32* %v2_80504e3, align 4
  ret i32 %v3_80504e3

; uselistorder directives
  uselistorder label %dec_label_pc_80504e3, { 1, 0 }
}

define i32 @function_80504f0(i8 %arg1) local_unnamed_addr {
dec_label_pc_80504f0:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_80504f9 = zext i8 %arg1 to i32
  %v1_80504fd = mul nuw nsw i32 %v4_80504f9, 8
  %v2_80504fd = add i32 %v1_80504fd, ptrtoint (i32* @global_var_80551a0.41 to i32)
  store i32 %v2_80504fd, i32* @ecx, align 4
  %v0_8050504 = load i16, i16* @global_var_8055038.42, align 2
  %v1_8050504 = sext i16 %v0_8050504 to i32
  %v1_8050509 = add i32 %v1_80504fd, add (i32 ptrtoint (i32* @global_var_80551a0.41 to i32), i32 4)
  %v2_8050509 = inttoptr i32 %v1_8050509 to i16*
  %v3_8050509 = load i16, i16* %v2_8050509, align 4
  %v4_8050509 = icmp eq i16 %v3_8050509, 0
  br i1 %v4_8050509, label %dec_label_pc_805055a, label %dec_label_pc_8050510

dec_label_pc_8050510:                             ; preds = %dec_label_pc_80504f0
  store i32 %v1_8050504, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8050518 = udiv i32 %v1_8050504, 16777216
  %v2_805051b = udiv i32 %v1_8050504, 256
  store i32 %v2_805051b, i32* %edi.global-to-local, align 4
  %v5_805051e = trunc i32 %v2_8050518 to i8
  store i8 %v5_805051e, i8* %stack_var_-44, align 1
  %v2_8050521 = udiv i32 %v1_8050504, 65536
  store i32 %v2_8050521, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8050524

dec_label_pc_8050524:                             ; preds = %dec_label_pc_8050524.dec_label_pc_8050524_crit_edge, %dec_label_pc_8050510
  %v0_805052a = phi i32 [ %v0_805052a.pre, %dec_label_pc_8050524.dec_label_pc_8050524_crit_edge ], [ %v1_8050504, %dec_label_pc_8050510 ]
  %v0_8050526 = phi i32 [ %v1_8050556, %dec_label_pc_8050524.dec_label_pc_8050524_crit_edge ], [ 0, %dec_label_pc_8050510 ]
  %v0_8050524 = phi i32 [ %v0_805054e, %dec_label_pc_8050524.dec_label_pc_8050524_crit_edge ], [ %v2_80504fd, %dec_label_pc_8050510 ]
  %v1_8050524 = inttoptr i32 %v0_8050524 to i32*
  %v2_8050524 = load i32, i32* %v1_8050524, align 4
  %v2_8050528 = add i32 %v2_8050524, %v0_8050526
  %v1_805052c = inttoptr i32 %v2_8050528 to i8*
  %v2_805052c = load i8, i8* %v1_805052c, align 1
  %v4_805052c = trunc i32 %v0_805052a to i8
  %v5_805052c = xor i8 %v2_805052c, %v4_805052c
  store i8 %v5_805052c, i8* %v1_805052c, align 1
  %v0_805052e = load i32, i32* %edx.global-to-local, align 4
  %v0_8050530 = load i32, i32* @ecx, align 4
  %v1_8050530 = inttoptr i32 %v0_8050530 to i32*
  %v2_8050530 = load i32, i32* %v1_8050530, align 4
  %v2_8050532 = add i32 %v2_8050530, %v0_805052e
  %v0_8050534 = load i32, i32* %edi.global-to-local, align 4
  %v1_8050536 = inttoptr i32 %v2_8050532 to i8*
  %v2_8050536 = load i8, i8* %v1_8050536, align 1
  %v4_8050536 = trunc i32 %v0_8050534 to i8
  %v5_8050536 = xor i8 %v2_8050536, %v4_8050536
  store i8 %v5_8050536, i8* %v1_8050536, align 1
  %v0_8050538 = load i32, i32* %edx.global-to-local, align 4
  %v0_805053a = load i32, i32* @ecx, align 4
  %v1_805053a = inttoptr i32 %v0_805053a to i32*
  %v2_805053a = load i32, i32* %v1_805053a, align 4
  %v2_805053c = add i32 %v2_805053a, %v0_8050538
  %v0_805053e = load i32, i32* %esi.global-to-local, align 4
  %v1_8050540 = inttoptr i32 %v2_805053c to i8*
  %v2_8050540 = load i8, i8* %v1_8050540, align 1
  %v4_8050540 = trunc i32 %v0_805053e to i8
  %v5_8050540 = xor i8 %v2_8050540, %v4_8050540
  store i8 %v5_8050540, i8* %v1_8050540, align 1
  %v0_8050542 = load i32, i32* %edx.global-to-local, align 4
  %v0_8050544 = load i32, i32* @ecx, align 4
  %v1_8050544 = inttoptr i32 %v0_8050544 to i32*
  %v2_8050544 = load i32, i32* %v1_8050544, align 4
  %v1_8050546 = add i32 %v0_8050542, 1
  store i32 %v1_8050546, i32* %edx.global-to-local, align 4
  %v2_8050547 = add i32 %v2_8050544, %v0_8050542
  %v2_8050549 = load i8, i8* %stack_var_-44, align 1
  %v1_805054c = inttoptr i32 %v2_8050547 to i8*
  %v2_805054c = load i8, i8* %v1_805054c, align 1
  %v5_805054c = xor i8 %v2_805054c, %v2_8050549
  store i8 %v5_805054c, i8* %v1_805054c, align 1
  %v0_805054e = load i32, i32* @ecx, align 4
  %v1_805054e = add i32 %v0_805054e, 4
  %v2_805054e = inttoptr i32 %v1_805054e to i32*
  %v3_805054e = load i32, i32* %v2_805054e, align 4
  %v1_8050551 = urem i32 %v3_805054e, 65536
  %v1_8050556 = load i32, i32* %edx.global-to-local, align 4
  %v8_8050558 = icmp sgt i32 %v1_8050551, %v1_8050556
  br i1 %v8_8050558, label %dec_label_pc_8050524.dec_label_pc_8050524_crit_edge, label %dec_label_pc_805055a.loopexit

dec_label_pc_8050524.dec_label_pc_8050524_crit_edge: ; preds = %dec_label_pc_8050524
  %v0_805052a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8050524

dec_label_pc_805055a.loopexit:                    ; preds = %dec_label_pc_8050524
  br label %dec_label_pc_805055a

dec_label_pc_805055a:                             ; preds = %dec_label_pc_805055a.loopexit, %dec_label_pc_80504f0
  %v0_8050561 = phi i32 [ %v1_8050551, %dec_label_pc_805055a.loopexit ], [ %v1_8050504, %dec_label_pc_80504f0 ]
  ret i32 %v0_8050561

; uselistorder directives
  uselistorder i32 %v1_8050556, { 1, 0 }
  uselistorder i32 %v1_8050551, { 1, 0 }
  uselistorder i32 %v0_805054e, { 1, 0 }
  uselistorder i32 %v1_8050504, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_8050570(i8 %arg1) local_unnamed_addr {
dec_label_pc_8050570:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8050579 = zext i8 %arg1 to i32
  %v1_805057d = mul nuw nsw i32 %v4_8050579, 8
  %v2_805057d = add i32 %v1_805057d, ptrtoint (i32* @global_var_80551a0.41 to i32)
  store i32 %v2_805057d, i32* %ecx.global-to-local, align 4
  %v0_8050584 = load i16, i16* @global_var_8055038.42, align 2
  %v1_8050584 = sext i16 %v0_8050584 to i32
  %v1_8050589 = add i32 %v1_805057d, add (i32 ptrtoint (i32* @global_var_80551a0.41 to i32), i32 4)
  %v2_8050589 = inttoptr i32 %v1_8050589 to i16*
  %v3_8050589 = load i16, i16* %v2_8050589, align 4
  %v4_8050589 = icmp eq i16 %v3_8050589, 0
  br i1 %v4_8050589, label %dec_label_pc_80505da, label %dec_label_pc_8050590

dec_label_pc_8050590:                             ; preds = %dec_label_pc_8050570
  store i32 %v1_8050584, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8050598 = udiv i32 %v1_8050584, 16777216
  %v2_805059b = udiv i32 %v1_8050584, 256
  store i32 %v2_805059b, i32* %edi.global-to-local, align 4
  %v5_805059e = trunc i32 %v2_8050598 to i8
  store i8 %v5_805059e, i8* %stack_var_-44, align 1
  %v2_80505a1 = udiv i32 %v1_8050584, 65536
  store i32 %v2_80505a1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80505a4

dec_label_pc_80505a4:                             ; preds = %dec_label_pc_80505a4.dec_label_pc_80505a4_crit_edge, %dec_label_pc_8050590
  %v0_80505aa = phi i32 [ %v0_80505aa.pre, %dec_label_pc_80505a4.dec_label_pc_80505a4_crit_edge ], [ %v1_8050584, %dec_label_pc_8050590 ]
  %v0_80505a6 = phi i32 [ %v1_80505d6, %dec_label_pc_80505a4.dec_label_pc_80505a4_crit_edge ], [ 0, %dec_label_pc_8050590 ]
  %v0_80505a4 = phi i32 [ %v0_80505ce, %dec_label_pc_80505a4.dec_label_pc_80505a4_crit_edge ], [ %v2_805057d, %dec_label_pc_8050590 ]
  %v1_80505a4 = inttoptr i32 %v0_80505a4 to i32*
  %v2_80505a4 = load i32, i32* %v1_80505a4, align 4
  %v2_80505a8 = add i32 %v2_80505a4, %v0_80505a6
  %v1_80505ac = inttoptr i32 %v2_80505a8 to i8*
  %v2_80505ac = load i8, i8* %v1_80505ac, align 1
  %v4_80505ac = trunc i32 %v0_80505aa to i8
  %v5_80505ac = xor i8 %v2_80505ac, %v4_80505ac
  store i8 %v5_80505ac, i8* %v1_80505ac, align 1
  %v0_80505ae = load i32, i32* %edx.global-to-local, align 4
  %v0_80505b0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80505b0 = inttoptr i32 %v0_80505b0 to i32*
  %v2_80505b0 = load i32, i32* %v1_80505b0, align 4
  %v2_80505b2 = add i32 %v2_80505b0, %v0_80505ae
  %v0_80505b4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80505b6 = inttoptr i32 %v2_80505b2 to i8*
  %v2_80505b6 = load i8, i8* %v1_80505b6, align 1
  %v4_80505b6 = trunc i32 %v0_80505b4 to i8
  %v5_80505b6 = xor i8 %v2_80505b6, %v4_80505b6
  store i8 %v5_80505b6, i8* %v1_80505b6, align 1
  %v0_80505b8 = load i32, i32* %edx.global-to-local, align 4
  %v0_80505ba = load i32, i32* %ecx.global-to-local, align 4
  %v1_80505ba = inttoptr i32 %v0_80505ba to i32*
  %v2_80505ba = load i32, i32* %v1_80505ba, align 4
  %v2_80505bc = add i32 %v2_80505ba, %v0_80505b8
  %v0_80505be = load i32, i32* %esi.global-to-local, align 4
  %v1_80505c0 = inttoptr i32 %v2_80505bc to i8*
  %v2_80505c0 = load i8, i8* %v1_80505c0, align 1
  %v4_80505c0 = trunc i32 %v0_80505be to i8
  %v5_80505c0 = xor i8 %v2_80505c0, %v4_80505c0
  store i8 %v5_80505c0, i8* %v1_80505c0, align 1
  %v0_80505c2 = load i32, i32* %edx.global-to-local, align 4
  %v0_80505c4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80505c4 = inttoptr i32 %v0_80505c4 to i32*
  %v2_80505c4 = load i32, i32* %v1_80505c4, align 4
  %v1_80505c6 = add i32 %v0_80505c2, 1
  store i32 %v1_80505c6, i32* %edx.global-to-local, align 4
  %v2_80505c7 = add i32 %v2_80505c4, %v0_80505c2
  %v2_80505c9 = load i8, i8* %stack_var_-44, align 1
  %v1_80505cc = inttoptr i32 %v2_80505c7 to i8*
  %v2_80505cc = load i8, i8* %v1_80505cc, align 1
  %v5_80505cc = xor i8 %v2_80505cc, %v2_80505c9
  store i8 %v5_80505cc, i8* %v1_80505cc, align 1
  %v0_80505ce = load i32, i32* %ecx.global-to-local, align 4
  %v1_80505ce = add i32 %v0_80505ce, 4
  %v2_80505ce = inttoptr i32 %v1_80505ce to i32*
  %v3_80505ce = load i32, i32* %v2_80505ce, align 4
  %v1_80505d1 = urem i32 %v3_80505ce, 65536
  %v1_80505d6 = load i32, i32* %edx.global-to-local, align 4
  %v8_80505d8 = icmp sgt i32 %v1_80505d1, %v1_80505d6
  br i1 %v8_80505d8, label %dec_label_pc_80505a4.dec_label_pc_80505a4_crit_edge, label %dec_label_pc_80505da.loopexit

dec_label_pc_80505a4.dec_label_pc_80505a4_crit_edge: ; preds = %dec_label_pc_80505a4
  %v0_80505aa.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80505a4

dec_label_pc_80505da.loopexit:                    ; preds = %dec_label_pc_80505a4
  br label %dec_label_pc_80505da

dec_label_pc_80505da:                             ; preds = %dec_label_pc_80505da.loopexit, %dec_label_pc_8050570
  %v0_80505e1 = phi i32 [ %v1_80505d1, %dec_label_pc_80505da.loopexit ], [ %v1_8050584, %dec_label_pc_8050570 ]
  ret i32 %v0_80505e1

; uselistorder directives
  uselistorder i32 %v1_80505d6, { 1, 0 }
  uselistorder i32 %v1_80505d1, { 1, 0 }
  uselistorder i32 %v0_80505ce, { 1, 0 }
  uselistorder i32 %v1_8050584, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80551a0.41 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_8055038.42, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_80551a0.41 to i32), { 1, 2, 3, 0 }
}

define i32 @function_8051080(i8* %arg1) local_unnamed_addr {
dec_label_pc_8051080:
  %v4_8051080 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051080, i32* @edx, align 4
  %v2_8051086 = load i8, i8* %arg1, align 1
  %v3_8051086 = icmp eq i8 %v2_8051086, 0
  br i1 %v3_8051086, label %dec_label_pc_8051097, label %dec_label_pc_8051090

dec_label_pc_8051090:                             ; preds = %dec_label_pc_8051080, %dec_label_pc_8051090
  %v0_8051090 = phi i32 [ %v1_8051090, %dec_label_pc_8051090 ], [ 0, %dec_label_pc_8051080 ]
  %v1_8051090 = add i32 %v0_8051090, 1
  %v2_8051091 = add i32 %v1_8051090, %v4_8051080
  %v3_8051091 = inttoptr i32 %v2_8051091 to i8*
  %v4_8051091 = load i8, i8* %v3_8051091, align 1
  %v5_8051091 = icmp eq i8 %v4_8051091, 0
  %v1_8051095 = icmp eq i1 %v5_8051091, false
  br i1 %v1_8051095, label %dec_label_pc_8051090, label %dec_label_pc_8051097

dec_label_pc_8051097:                             ; preds = %dec_label_pc_8051090, %dec_label_pc_8051080
  %v0_8051097 = phi i32 [ 0, %dec_label_pc_8051080 ], [ %v1_8051090, %dec_label_pc_8051090 ]
  ret i32 %v0_8051097

; uselistorder directives
  uselistorder label %dec_label_pc_8051090, { 1, 0 }
}

define i32 @function_80510a0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80510a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_80510a1 = load i32, i32* @ebx, align 4
  store i32 %v0_80510a1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_80510a6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80510a6, i32* %edx.global-to-local, align 4
  %v2_80510aa = load i8, i8* %tmp15, align 1
  %v3_80510aa = icmp eq i8 %v2_80510aa, 0
  br i1 %v3_80510aa, label %dec_label_pc_80510d4, label %dec_label_pc_80510af

dec_label_pc_80510af:                             ; preds = %dec_label_pc_80510a0
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80510b1

dec_label_pc_80510b1:                             ; preds = %dec_label_pc_80510b1, %dec_label_pc_80510af
  %v0_80510b1 = phi i32 [ %v1_80510b1, %dec_label_pc_80510b1 ], [ 0, %dec_label_pc_80510af ]
  %v1_80510b1 = add i32 %v0_80510b1, 1
  store i32 %v1_80510b1, i32* %esi.global-to-local, align 4
  %v2_80510b2 = add i32 %v1_80510b1, %arg2
  %v3_80510b2 = inttoptr i32 %v2_80510b2 to i8*
  %v4_80510b2 = load i8, i8* %v3_80510b2, align 1
  %v5_80510b2 = icmp eq i8 %v4_80510b2, 0
  %v1_80510b6 = icmp eq i1 %v5_80510b2, false
  br i1 %v1_80510b6, label %dec_label_pc_80510b1, label %dec_label_pc_80510b8

dec_label_pc_80510b8:                             ; preds = %dec_label_pc_80510b1
  %v10_80510b8 = icmp eq i32 %v0_80510b1, -2
  br i1 %v10_80510b8, label %dec_label_pc_80510cf, label %dec_label_pc_80510bd

dec_label_pc_80510bd:                             ; preds = %dec_label_pc_80510b8
  store i32 %v4_80510a6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_80510b1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80510c3

dec_label_pc_80510c3:                             ; preds = %dec_label_pc_80510d4, %dec_label_pc_80510bd, %dec_label_pc_80510c3.dec_label_pc_80510c3_crit_edge
  %v2_80510c6 = phi i32 [ %v1_80510c9, %dec_label_pc_80510c3.dec_label_pc_80510c3_crit_edge ], [ %v4_80510a6, %dec_label_pc_80510bd ], [ %v4_80510a6, %dec_label_pc_80510d4 ]
  %v0_80510c5 = phi i32 [ %v0_80510ca, %dec_label_pc_80510c3.dec_label_pc_80510c3_crit_edge ], [ %v1_80510b1, %dec_label_pc_80510bd ], [ 0, %dec_label_pc_80510d4 ]
  %v4_80510c3 = phi i32 [ %v4_80510c3.pre, %dec_label_pc_80510c3.dec_label_pc_80510c3_crit_edge ], [ %arg2, %dec_label_pc_80510bd ], [ %arg2, %dec_label_pc_80510d4 ]
  %v0_80510c3 = phi i32 [ %v1_80510c8, %dec_label_pc_80510c3.dec_label_pc_80510c3_crit_edge ], [ %arg2, %dec_label_pc_80510bd ], [ %arg2, %dec_label_pc_80510d4 ]
  %v1_80510c3 = inttoptr i32 %v0_80510c3 to i8*
  %v2_80510c3 = load i8, i8* %v1_80510c3, align 1
  %v3_80510c3 = zext i8 %v2_80510c3 to i32
  %v5_80510c3 = and i32 %v4_80510c3, -256
  %v6_80510c3 = or i32 %v3_80510c3, %v5_80510c3
  store i32 %v6_80510c3, i32* %eax.global-to-local, align 4
  %v1_80510c5 = add i32 %v0_80510c5, -1
  store i32 %v1_80510c5, i32* %edx.global-to-local, align 4
  %v3_80510c6 = inttoptr i32 %v2_80510c6 to i8*
  store i8 %v2_80510c3, i8* %v3_80510c6, align 1
  %v0_80510c8 = load i32, i32* @ecx, align 4
  %v1_80510c8 = add i32 %v0_80510c8, 1
  store i32 %v1_80510c8, i32* @ecx, align 4
  %v0_80510c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80510c9 = add i32 %v0_80510c9, 1
  store i32 %v1_80510c9, i32* %ebx.global-to-local, align 4
  %v0_80510ca = load i32, i32* %edx.global-to-local, align 4
  %v10_80510ca = icmp eq i32 %v0_80510ca, -1
  %v1_80510cd = icmp eq i1 %v10_80510ca, false
  br i1 %v1_80510cd, label %dec_label_pc_80510c3.dec_label_pc_80510c3_crit_edge, label %dec_label_pc_80510cf.loopexit

dec_label_pc_80510c3.dec_label_pc_80510c3_crit_edge: ; preds = %dec_label_pc_80510c3
  %v4_80510c3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510c3

dec_label_pc_80510cf.loopexit:                    ; preds = %dec_label_pc_80510c3
  %v0_80510cf.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_80510d1.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80510cf

dec_label_pc_80510cf:                             ; preds = %dec_label_pc_80510cf.loopexit, %dec_label_pc_80510b8
  %v2_80510d1 = phi i32 [ %v2_80510d1.pre, %dec_label_pc_80510cf.loopexit ], [ %v0_80510a1, %dec_label_pc_80510b8 ]
  %v0_80510cf = phi i32 [ %v0_80510cf.pre, %dec_label_pc_80510cf.loopexit ], [ %v1_80510b1, %dec_label_pc_80510b8 ]
  store i32 %v0_80510cf, i32* %eax.global-to-local, align 4
  store i32 %v2_80510d1, i32* @ebx, align 4
  ret i32 %v0_80510cf

dec_label_pc_80510d4:                             ; preds = %dec_label_pc_80510a0
  store i32 %v4_80510a6, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80510c3

; uselistorder directives
  uselistorder i32 %v0_80510cf, { 1, 0 }
  uselistorder i32 %v1_80510c9, { 1, 0 }
  uselistorder i32 %v1_80510c8, { 1, 0 }
  uselistorder i32 %v1_80510b1, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_80510a6, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_80510c3, { 0, 2, 1 }
}

define i32 @function_8051110(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051110:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8051118 = icmp eq i32 %arg2, 0
  br i1 %v1_8051118, label %dec_label_pc_8051110.dec_label_pc_8051129_crit_edge, label %dec_label_pc_805111c

dec_label_pc_8051110.dec_label_pc_8051129_crit_edge: ; preds = %dec_label_pc_8051110
  %v0_8051129.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051129

dec_label_pc_805111c:                             ; preds = %dec_label_pc_8051110
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_80511205 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_80511205, align 1
  %v0_80511246 = load i32, i32* %eax.global-to-local, align 4
  %v1_80511247 = add i32 %v0_80511246, 1
  store i32 %v1_80511247, i32* %eax.global-to-local, align 4
  %v12_80511258 = icmp eq i32 %v1_80511247, %arg2
  %v1_80511279 = icmp eq i1 %v12_80511258, false
  br i1 %v1_80511279, label %dec_label_pc_8051120.dec_label_pc_8051120_crit_edge, label %dec_label_pc_8051129

dec_label_pc_8051120.dec_label_pc_8051120_crit_edge: ; preds = %dec_label_pc_805111c, %dec_label_pc_8051120.dec_label_pc_8051120_crit_edge
  %v1_805112410 = phi i32 [ %v1_8051124, %dec_label_pc_8051120.dec_label_pc_8051120_crit_edge ], [ %v1_80511247, %dec_label_pc_805111c ]
  %v1_8051120.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8051120 = add i32 %v1_805112410, %v1_8051120.pre
  %v3_8051120 = inttoptr i32 %v2_8051120 to i8*
  store i8 0, i8* %v3_8051120, align 1
  %v0_8051124 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051124 = add i32 %v0_8051124, 1
  store i32 %v1_8051124, i32* %eax.global-to-local, align 4
  %v12_8051125 = icmp eq i32 %v1_8051124, %arg2
  %v1_8051127 = icmp eq i1 %v12_8051125, false
  br i1 %v1_8051127, label %dec_label_pc_8051120.dec_label_pc_8051120_crit_edge, label %dec_label_pc_8051129

dec_label_pc_8051129:                             ; preds = %dec_label_pc_805111c, %dec_label_pc_8051120.dec_label_pc_8051120_crit_edge, %dec_label_pc_8051110.dec_label_pc_8051129_crit_edge
  %v0_8051129 = phi i32 [ %v0_8051129.pre, %dec_label_pc_8051110.dec_label_pc_8051129_crit_edge ], [ %v1_80511247, %dec_label_pc_805111c ], [ %v1_8051124, %dec_label_pc_8051120.dec_label_pc_8051120_crit_edge ]
  ret i32 %v0_8051129

; uselistorder directives
  uselistorder i32 %v1_8051124, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051129, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051120.dec_label_pc_8051120_crit_edge, { 1, 0 }
}

define i32 @function_8051130() local_unnamed_addr {
dec_label_pc_8051130:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_8051145 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_8051145, label %dec_label_pc_8051147, label %dec_label_pc_8051150

dec_label_pc_8051147:                             ; preds = %dec_label_pc_8051162, %dec_label_pc_8051130, %dec_label_pc_8051150
  br label %dec_label_pc_805114a

dec_label_pc_805114a:                             ; preds = %dec_label_pc_8051175, %dec_label_pc_8051147
  %storemerge = phi i32 [ -1, %dec_label_pc_8051147 ], [ %v0_8051163, %dec_label_pc_8051175 ]
  ret i32 %storemerge

dec_label_pc_8051150:                             ; preds = %dec_label_pc_8051130
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_8051147, label %dec_label_pc_8051154

dec_label_pc_8051154:                             ; preds = %dec_label_pc_8051150
  %v2_805116c = add i32 %tmp, -1
  br label %dec_label_pc_8051168

dec_label_pc_8051160:                             ; preds = %dec_label_pc_8051168
  br label %dec_label_pc_8051162

dec_label_pc_8051162:                             ; preds = %dec_label_pc_8051175, %dec_label_pc_8051160
  %v2_80511703 = phi i32 [ %v1_8051175, %dec_label_pc_8051175 ], [ 0, %dec_label_pc_8051160 ]
  %v1_8051162 = add i32 %v0_8051162, 1
  %v1_8051163 = add i32 %v0_8051163, 1
  %v12_8051164 = icmp eq i32 %tmp10, %v1_8051162
  br i1 %v12_8051164, label %dec_label_pc_8051147, label %dec_label_pc_8051168

dec_label_pc_8051168:                             ; preds = %dec_label_pc_8051162, %dec_label_pc_8051154
  %v0_8051162 = phi i32 [ %v1_8051162, %dec_label_pc_8051162 ], [ 0, %dec_label_pc_8051154 ]
  %v0_8051175 = phi i32 [ %v2_80511703, %dec_label_pc_8051162 ], [ 0, %dec_label_pc_8051154 ]
  %v0_8051163 = phi i32 [ %v1_8051163, %dec_label_pc_8051162 ], [ 1, %dec_label_pc_8051154 ]
  %v3_805116c = add i32 %v2_805116c, %v0_8051163
  %v4_805116c = inttoptr i32 %v3_805116c to i8*
  %v5_805116c = load i8, i8* %v4_805116c, align 1
  %v4_8051170 = add i32 %v0_8051175, %tmp8
  %v5_8051170 = inttoptr i32 %v4_8051170 to i8*
  %v6_8051170 = load i8, i8* %v5_8051170, align 1
  %v17_8051170 = icmp eq i8 %v5_805116c, %v6_8051170
  %v1_8051173 = icmp eq i1 %v17_8051170, false
  br i1 %v1_8051173, label %dec_label_pc_8051160, label %dec_label_pc_8051175

dec_label_pc_8051175:                             ; preds = %dec_label_pc_8051168
  %v1_8051175 = add i32 %v0_8051175, 1
  %v12_8051176 = icmp eq i32 %tmp9, %v1_8051175
  %v1_8051178 = icmp eq i1 %v12_8051176, false
  br i1 %v1_8051178, label %dec_label_pc_8051162, label %dec_label_pc_805114a

; uselistorder directives
  uselistorder i32 %v0_8051163, { 2, 0, 1 }
  uselistorder i32 %v0_8051175, { 1, 0 }
  uselistorder i32 %v1_8051162, { 1, 0 }
  uselistorder label %dec_label_pc_8051147, { 0, 2, 1 }
}

define i32 @function_8051180(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051180:
  %v4_8051187 = ptrtoint i8* %arg1 to i32
  %v4_8051190.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8051190

dec_label_pc_8051190:                             ; preds = %dec_label_pc_80511a4, %dec_label_pc_80511a0, %dec_label_pc_8051190, %dec_label_pc_8051180
  %v4_8051190 = phi i32 [ %v4_8051190.pre, %dec_label_pc_8051180 ], [ %v6_8051190, %dec_label_pc_8051190 ], [ %v6_8051190, %dec_label_pc_80511a0 ], [ %v6_8051190, %dec_label_pc_80511a4 ]
  %v0_8051192 = phi i32 [ %v4_8051187, %dec_label_pc_8051180 ], [ %v1_8051192, %dec_label_pc_8051190 ], [ %v1_8051192, %dec_label_pc_80511a0 ], [ %v1_8051192, %dec_label_pc_80511a4 ]
  %v1_8051190 = inttoptr i32 %v0_8051192 to i8*
  %v2_8051190 = load i8, i8* %v1_8051190, align 1
  %v3_8051190 = zext i8 %v2_8051190 to i32
  %v5_8051190 = and i32 %v4_8051190, -256
  %v6_8051190 = or i32 %v3_8051190, %v5_8051190
  %v1_8051192 = add i32 %v0_8051192, 1
  %v7_805119c = icmp eq i8 %v2_8051190, 32
  br i1 %v7_805119c, label %dec_label_pc_8051190, label %dec_label_pc_80511a0

dec_label_pc_80511a0:                             ; preds = %dec_label_pc_8051190
  %v10_80511a0 = icmp eq i8 %v2_8051190, 9
  br i1 %v10_80511a0, label %dec_label_pc_8051190, label %dec_label_pc_80511a4

dec_label_pc_80511a4:                             ; preds = %dec_label_pc_80511a0
  %v10_80511a4 = icmp eq i8 %v2_8051190, 10
  br i1 %v10_80511a4, label %dec_label_pc_8051190, label %dec_label_pc_80511a8

dec_label_pc_80511a8:                             ; preds = %dec_label_pc_80511a4
  %tmp41 = sext i32 %arg2 to i64
  %v10_80511a8 = icmp eq i8 %v2_8051190, 45
  br i1 %v10_80511a8, label %dec_label_pc_805125d, label %dec_label_pc_80511b1

dec_label_pc_80511b1:                             ; preds = %dec_label_pc_80511a8
  %v10_80511b1 = icmp eq i8 %v2_8051190, 43
  br i1 %v10_80511b1, label %dec_label_pc_805128d, label %dec_label_pc_80511ba

dec_label_pc_80511ba:                             ; preds = %dec_label_pc_80511b1, %dec_label_pc_805128d
  %v0_805120430 = phi i32 [ %v1_8051192, %dec_label_pc_80511b1 ], [ %v1_8051290, %dec_label_pc_805128d ]
  %v0_805123016.in = phi i8 [ %v2_8051190, %dec_label_pc_80511b1 ], [ %v2_805128d, %dec_label_pc_805128d ]
  %v2_805120e9 = phi i8 [ %v2_8051190, %dec_label_pc_80511b1 ], [ %v2_805128d, %dec_label_pc_805128d ]
  br label %dec_label_pc_80511c7

dec_label_pc_80511c7:                             ; preds = %dec_label_pc_805125d, %dec_label_pc_80511ba
  %v0_805120429 = phi i32 [ %v1_8051265, %dec_label_pc_805125d ], [ %v0_805120430, %dec_label_pc_80511ba ]
  %v0_805123015.in = phi i8 [ %v2_805125d, %dec_label_pc_805125d ], [ %v0_805123016.in, %dec_label_pc_80511ba ]
  %v2_805120e8 = phi i8 [ %v2_805125d, %dec_label_pc_805125d ], [ %v2_805120e9, %dec_label_pc_80511ba ]
  %v0_80511c7 = phi i64 [ 2147483648, %dec_label_pc_805125d ], [ 2147483647, %dec_label_pc_80511ba ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_805125d ], [ 0, %dec_label_pc_80511ba ]
  %v12_80511cb = udiv i64 %v0_80511c7, %tmp41
  %v13_80511cb = trunc i64 %v12_80511cb to i32
  %v14_80511cb = urem i64 %v0_80511c7, %tmp41
  %v15_80511cb = trunc i64 %v14_80511cb to i32
  br label %dec_label_pc_805120e

dec_label_pc_80511e0:                             ; preds = %dec_label_pc_805120e
  %v1_80511e0 = add nsw i32 %v0_80511e0, -48
  %v7_80511e7 = icmp slt i32 %v1_80511e0, %arg2
  br i1 %v7_80511e7, label %dec_label_pc_80511e9, label %dec_label_pc_805123a

dec_label_pc_80511e9:                             ; preds = %dec_label_pc_80511e0, %dec_label_pc_8051230
  %v1_8051201 = phi i32 [ %v1_80511e0, %dec_label_pc_80511e0 ], [ %v2_8051232, %dec_label_pc_8051230 ]
  %v2_80511e9 = icmp slt i32 %v0_80511e9, 0
  br i1 %v2_80511e9, label %dec_label_pc_8051258, label %dec_label_pc_80511ed

dec_label_pc_80511ed:                             ; preds = %dec_label_pc_80511e9
  %tmp42 = icmp ugt i32 %v0_80511ed, %v13_80511cb
  br i1 %tmp42, label %dec_label_pc_8051258, label %dec_label_pc_80511f3

dec_label_pc_80511f3:                             ; preds = %dec_label_pc_80511ed
  %v15_80511ed = icmp eq i32 %v0_80511ed, %v13_80511cb
  br i1 %v15_80511ed, label %dec_label_pc_8051252, label %dec_label_pc_80511f5

dec_label_pc_80511f5:                             ; preds = %dec_label_pc_8051252, %dec_label_pc_80511f3
  %v4_80511fe = mul i32 %v1_80511fe, %arg2
  %v2_8051201 = add i32 %v1_8051201, %v4_80511fe
  br label %dec_label_pc_8051204

dec_label_pc_8051204:                             ; preds = %dec_label_pc_8051258, %dec_label_pc_80511f5
  %v1_80511fe26 = phi i32 [ %v1_80511fe, %dec_label_pc_8051258 ], [ %v2_8051201, %dec_label_pc_80511f5 ]
  %v0_805124220 = phi i32 [ %v0_80511ed, %dec_label_pc_8051258 ], [ %v2_8051201, %dec_label_pc_80511f5 ]
  %v0_805123a19 = phi i32 [ -1, %dec_label_pc_8051258 ], [ 1, %dec_label_pc_80511f5 ]
  %v1_8051204 = inttoptr i32 %v0_8051204 to i8*
  %v2_8051204 = load i8, i8* %v1_8051204, align 1
  %v1_805120a = add i32 %v0_8051204, 1
  br label %dec_label_pc_805120e

dec_label_pc_805120e:                             ; preds = %dec_label_pc_80511c7, %dec_label_pc_8051204
  %v0_8051204 = phi i32 [ %v0_805120429, %dec_label_pc_80511c7 ], [ %v1_805120a, %dec_label_pc_8051204 ]
  %v1_80511fe = phi i32 [ 0, %dec_label_pc_80511c7 ], [ %v1_80511fe26, %dec_label_pc_8051204 ]
  %v0_80511ed = phi i32 [ 0, %dec_label_pc_80511c7 ], [ %v0_805124220, %dec_label_pc_8051204 ]
  %v0_80511e9 = phi i32 [ 0, %dec_label_pc_80511c7 ], [ %v0_805123a19, %dec_label_pc_8051204 ]
  %v0_80511e0.in = phi i8 [ %v0_805123015.in, %dec_label_pc_80511c7 ], [ %v2_8051204, %dec_label_pc_8051204 ]
  %v2_805120e = phi i8 [ %v2_805120e8, %dec_label_pc_80511c7 ], [ %v2_8051204, %dec_label_pc_8051204 ]
  %v0_80511e0 = sext i8 %v0_80511e0.in to i32
  %v1_8051211 = add i8 %v2_805120e, -48
  %tmp43 = icmp ult i8 %v1_8051211, 10
  br i1 %tmp43, label %dec_label_pc_80511e0, label %dec_label_pc_8051218

dec_label_pc_8051218:                             ; preds = %dec_label_pc_805120e
  %v1_8051218 = add i8 %v2_805120e, -65
  store i32 55, i32* @ecx, align 4
  %tmp44 = icmp ult i8 %v1_8051218, 26
  br i1 %tmp44, label %dec_label_pc_8051230, label %dec_label_pc_8051224

dec_label_pc_8051224:                             ; preds = %dec_label_pc_8051218
  %v1_8051224 = add i8 %v2_805120e, -97
  %tmp45 = icmp ult i8 %v1_8051224, 26
  br i1 %tmp45, label %dec_label_pc_805122b, label %dec_label_pc_805123a

dec_label_pc_805122b:                             ; preds = %dec_label_pc_8051224
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_8051230

dec_label_pc_8051230:                             ; preds = %dec_label_pc_8051218, %dec_label_pc_805122b
  %v1_8051232 = phi i32 [ 55, %dec_label_pc_8051218 ], [ 87, %dec_label_pc_805122b ]
  %v2_8051232 = sub nsw i32 %v0_80511e0, %v1_8051232
  %v7_8051238 = icmp slt i32 %v2_8051232, %arg2
  br i1 %v7_8051238, label %dec_label_pc_80511e9, label %dec_label_pc_805123a

dec_label_pc_805123a:                             ; preds = %dec_label_pc_80511e0, %dec_label_pc_8051224, %dec_label_pc_8051230
  %v2_805123a = icmp slt i32 %v0_80511e9, 0
  br i1 %v2_805123a, label %dec_label_pc_8051279, label %dec_label_pc_805123e

dec_label_pc_805123e:                             ; preds = %dec_label_pc_805123a
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_8051244 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_8051244, label %dec_label_pc_805124a, label %dec_label_pc_8051248

dec_label_pc_8051248:                             ; preds = %dec_label_pc_805123e
  %v1_8051248 = sub i32 0, %v0_80511ed
  br label %dec_label_pc_805124a

dec_label_pc_805124a:                             ; preds = %dec_label_pc_805123e, %dec_label_pc_8051248
  %v0_8051251 = phi i32 [ %v0_80511ed, %dec_label_pc_805123e ], [ %v1_8051248, %dec_label_pc_8051248 ]
  ret i32 %v0_8051251

dec_label_pc_8051252:                             ; preds = %dec_label_pc_80511f3
  %v5_8051252 = sub i32 %v1_8051201, %v15_80511cb
  %v11_8051252 = xor i32 %v1_8051201, %v15_80511cb
  %v12_8051252 = xor i32 %v5_8051252, %v1_8051201
  %v13_8051252 = and i32 %v12_8051252, %v11_8051252
  %v14_8051252 = icmp slt i32 %v13_8051252, 0
  %v15_8051252 = icmp eq i32 %v5_8051252, 0
  %v16_8051252 = icmp slt i32 %v5_8051252, 0
  %v3_8051256 = icmp ne i1 %v16_8051252, %v14_8051252
  %v4_8051256 = or i1 %v15_8051252, %v3_8051256
  br i1 %v4_8051256, label %dec_label_pc_80511f5, label %dec_label_pc_8051258

dec_label_pc_8051258:                             ; preds = %dec_label_pc_80511ed, %dec_label_pc_8051252, %dec_label_pc_80511e9
  br label %dec_label_pc_8051204

dec_label_pc_805125d:                             ; preds = %dec_label_pc_80511a8
  %v1_805125d = inttoptr i32 %v1_8051192 to i8*
  %v2_805125d = load i8, i8* %v1_805125d, align 1
  %v1_8051265 = add i32 %v0_8051192, 2
  br label %dec_label_pc_80511c7

dec_label_pc_8051279:                             ; preds = %dec_label_pc_805123a
  %v8_8051279 = icmp eq i32 %stack_var_-20.0, 0
  %v2_805127e = zext i1 %v8_8051279 to i32
  %v1_80512833 = or i32 %v2_805127e, -2147483648
  ret i32 %v1_80512833

dec_label_pc_805128d:                             ; preds = %dec_label_pc_80511b1
  %v1_805128d = inttoptr i32 %v1_8051192 to i8*
  %v2_805128d = load i8, i8* %v1_805128d, align 1
  %v1_8051290 = add i32 %v0_8051192, 2
  br label %dec_label_pc_80511ba

; uselistorder directives
  uselistorder i32 %v5_8051252, { 1, 2, 0 }
  uselistorder i32 %v2_8051232, { 1, 0 }
  uselistorder i8 %v2_8051204, { 1, 0 }
  uselistorder i32 %v2_8051201, { 1, 0 }
  uselistorder i32 %v1_8051201, { 0, 1, 3, 2 }
  uselistorder i32 %v13_80511cb, { 1, 0 }
  uselistorder i32 %v1_8051192, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8051190, { 2, 1, 0 }
  uselistorder i8 %v2_8051190, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_8051192, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 4, 2, 3, 5, 10, 7, 8, 11, 9, 6 }
  uselistorder i8 32, { 1, 2, 3, 6, 7, 4, 8, 9, 10, 0, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8051258, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805124a, { 1, 0 }
  uselistorder label %dec_label_pc_805123a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051230, { 1, 0 }
  uselistorder label %dec_label_pc_805120e, { 1, 0 }
  uselistorder label %dec_label_pc_80511e9, { 1, 0 }
  uselistorder label %dec_label_pc_80511ba, { 1, 0 }
}

define i32 @function_80512f0() local_unnamed_addr {
dec_label_pc_80512f0:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_80512fd = call i32 @function_8051afd(i32 16)
  %v1_8051302 = inttoptr i32 %v1_80512fd to i32*
  store i32 0, i32* %v1_8051302, align 4
  %v4_805130f = call i32 @function_8051dd4(i32 2, i32 2, i32 0, i32 %v1_80512fd)
  store i32 %v4_805130f, i32* %esi.global-to-local, align 4
  %v10_805131b = icmp eq i32 %v4_805130f, -1
  br i1 %v10_805131b, label %dec_label_pc_8051362, label %dec_label_pc_8051320

dec_label_pc_8051320:                             ; preds = %dec_label_pc_80512f0
  %v2_8051320 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8051320, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_805133f = call i32 @function_8051bf9(i32 %v4_805130f, i32 %v2_8051320, i32 16)
  %v2_8051347 = ptrtoint i32* %stack_var_-12 to i32
  %v0_805134d = load i32, i32* %esi.global-to-local, align 4
  %v3_805134e = call i32 @function_8051c24(i32 %v0_805134d, i32 %v2_8051320, i32 %v2_8051347)
  %v1_8051356 = call i32 @function_80515f3(i32 %v0_805134d)
  br label %dec_label_pc_8051362

dec_label_pc_8051362:                             ; preds = %dec_label_pc_80512f0, %dec_label_pc_8051320
  %v0_8051367 = phi i32 [ 0, %dec_label_pc_80512f0 ], [ 134744072, %dec_label_pc_8051320 ]
  ret i32 %v0_8051367

; uselistorder directives
  uselistorder i32 %v4_805130f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8051bf9, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8051dd4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8051362, { 1, 0 }
}

define i32 @function_8051370() local_unnamed_addr {
dec_label_pc_8051370:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i8* @__decompiler_undefined_function_2()
  %v4_8051377 = ptrtoint i8* %tmp18 to i32
  %v2_8051382 = load i8, i8* %tmp18, align 1
  %v3_8051382 = icmp eq i8 %v2_8051382, 0
  br i1 %v3_8051382, label %dec_label_pc_8051398, label %dec_label_pc_8051388

dec_label_pc_8051388:                             ; preds = %dec_label_pc_8051370, %dec_label_pc_8051388
  %v2_8051388 = phi i32 [ %v1_805138b, %dec_label_pc_8051388 ], [ 0, %dec_label_pc_8051370 ]
  %v1_805138b = add i32 %v2_8051388, 1
  %v2_8051392 = add i32 %v1_805138b, %v4_8051377
  %v3_8051392 = inttoptr i32 %v2_8051392 to i8*
  %v4_8051392 = load i8, i8* %v3_8051392, align 1
  %v5_8051392 = icmp eq i8 %v4_8051392, 0
  %v1_8051396 = icmp eq i1 %v5_8051392, false
  br i1 %v1_8051396, label %dec_label_pc_8051388, label %dec_label_pc_8051398

dec_label_pc_8051398:                             ; preds = %dec_label_pc_8051388, %dec_label_pc_8051370
  %v2_80513cf = phi i32 [ 0, %dec_label_pc_8051370 ], [ %v1_805138b, %dec_label_pc_8051388 ]
  %v4_805139e = ptrtoint i8* %tmp to i32
  %tmp25 = icmp slt i32 %tmp17, 1
  br i1 %tmp25, label %dec_label_pc_80513cc, label %dec_label_pc_80513a6.preheader

dec_label_pc_80513a6.preheader:                   ; preds = %dec_label_pc_8051398
  %v4_80513a6.pre = load i32, i32* @ecx, align 4
  %v6_80513a8.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80513a6

dec_label_pc_80513a6:                             ; preds = %dec_label_pc_80513a6.preheader, %dec_label_pc_80513c7
  %v0_80513c7 = phi i32 [ %tmp17, %dec_label_pc_80513a6.preheader ], [ %v1_80513c7, %dec_label_pc_80513c7 ]
  %v6_80513a8 = phi i32 [ %v6_80513a8.pre, %dec_label_pc_80513a6.preheader ], [ %v2_80513c1, %dec_label_pc_80513c7 ]
  %v0_80513d5 = phi i32 [ 0, %dec_label_pc_80513a6.preheader ], [ %v1_80513a89, %dec_label_pc_80513c7 ]
  %v4_80513a6 = phi i32 [ %v4_80513a6.pre, %dec_label_pc_80513a6.preheader ], [ %v0_80513c1, %dec_label_pc_80513c7 ]
  %v0_80513ac = phi i32 [ %v4_805139e, %dec_label_pc_80513a6.preheader ], [ %v1_80513ac, %dec_label_pc_80513c7 ]
  %v1_80513a6 = inttoptr i32 %v0_80513ac to i8*
  %v2_80513a6 = load i8, i8* %v1_80513a6, align 1
  %v3_80513a6 = zext i8 %v2_80513a6 to i32
  %v5_80513a6 = and i32 %v4_80513a6, -256
  %v6_80513a6 = or i32 %v3_80513a6, %v5_80513a6
  store i32 %v6_80513a6, i32* @ecx, align 4
  %v2_80513a8 = add i32 %v0_80513d5, %v4_8051377
  %v3_80513a8 = inttoptr i32 %v2_80513a8 to i8*
  %v4_80513a8 = load i8, i8* %v3_80513a8, align 1
  %v5_80513a8 = zext i8 %v4_80513a8 to i32
  %v7_80513a8 = and i32 %v6_80513a8, -256
  %v8_80513a8 = or i32 %v5_80513a8, %v7_80513a8
  %v1_80513ac = add i32 %v0_80513ac, 1
  %v1_80513ad = add i8 %v2_80513a6, -65
  %v8_80513b2 = icmp ugt i8 %v1_80513ad, 25
  br i1 %v8_80513b2, label %dec_label_pc_80513b7, label %dec_label_pc_80513b4

dec_label_pc_80513b4:                             ; preds = %dec_label_pc_80513a6
  %v1_80513b4 = or i32 %v6_80513a6, 96
  store i32 %v1_80513b4, i32* @ecx, align 4
  br label %dec_label_pc_80513b7

dec_label_pc_80513b7:                             ; preds = %dec_label_pc_80513a6, %dec_label_pc_80513b4
  %v0_80513c1 = phi i32 [ %v6_80513a6, %dec_label_pc_80513a6 ], [ %v1_80513b4, %dec_label_pc_80513b4 ]
  %v1_80513b7 = add i8 %v4_80513a8, -65
  %v8_80513bc = icmp ugt i8 %v1_80513b7, 25
  br i1 %v8_80513bc, label %dec_label_pc_80513c1, label %dec_label_pc_80513be

dec_label_pc_80513be:                             ; preds = %dec_label_pc_80513b7
  %v1_80513be = or i32 %v8_80513a8, 96
  br label %dec_label_pc_80513c1

dec_label_pc_80513c1:                             ; preds = %dec_label_pc_80513b7, %dec_label_pc_80513be
  %v2_80513c1 = phi i32 [ %v8_80513a8, %dec_label_pc_80513b7 ], [ %v1_80513be, %dec_label_pc_80513be ]
  %v1_80513c1 = trunc i32 %v0_80513c1 to i8
  %v3_80513c1 = trunc i32 %v2_80513c1 to i8
  %v15_80513c1 = icmp eq i8 %v1_80513c1, %v3_80513c1
  br i1 %v15_80513c1, label %dec_label_pc_80513d5, label %dec_label_pc_80513c5

dec_label_pc_80513c5:                             ; preds = %dec_label_pc_80513c1
  br label %dec_label_pc_80513c7

dec_label_pc_80513c7:                             ; preds = %dec_label_pc_80513d5, %dec_label_pc_80513c5
  %v1_80513a89 = phi i32 [ %v1_80513d5, %dec_label_pc_80513d5 ], [ 0, %dec_label_pc_80513c5 ]
  %v1_80513c7 = add i32 %v0_80513c7, -1
  %tmp26 = icmp slt i32 %v1_80513c7, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_80513a6, label %dec_label_pc_80513cc

dec_label_pc_80513cc:                             ; preds = %dec_label_pc_80513c7, %dec_label_pc_8051398
  ret i32 -1

dec_label_pc_80513d5:                             ; preds = %dec_label_pc_80513c1
  %v1_80513d5 = add i32 %v0_80513d5, 1
  %v14_80513d6 = icmp eq i32 %v2_80513cf, %v1_80513d5
  %v1_80513d9 = icmp eq i1 %v14_80513d6, false
  br i1 %v1_80513d9, label %dec_label_pc_80513c7, label %dec_label_pc_80513db

dec_label_pc_80513db:                             ; preds = %dec_label_pc_80513d5
  store i32 %v4_805139e, i32* @ecx, align 4
  %v2_80513e1 = sub i32 %v1_80513ac, %v4_805139e
  ret i32 %v2_80513e1

; uselistorder directives
  uselistorder i32 %v1_80513c7, { 1, 0 }
  uselistorder i32 %v0_80513d5, { 1, 0 }
  uselistorder i32 %v4_805139e, { 2, 1, 0 }
  uselistorder i8* %tmp18, { 1, 0 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80513c1, { 1, 0 }
  uselistorder label %dec_label_pc_80513b7, { 1, 0 }
  uselistorder label %dec_label_pc_80513a6, { 1, 0 }
  uselistorder label %dec_label_pc_8051388, { 1, 0 }
}

define i32 @function_80513f0() local_unnamed_addr {
dec_label_pc_80513f0:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_80513f2 = ptrtoint i8* %tmp13 to i32
  %v4_80513f8 = ptrtoint i8* %tmp to i32
  %v2_80513fc = load i8, i8* %tmp13, align 1
  %v3_80513fc = icmp eq i8 %v2_80513fc, 0
  br i1 %v3_80513fc, label %dec_label_pc_8051408, label %dec_label_pc_8051401

dec_label_pc_8051401:                             ; preds = %dec_label_pc_80513f0, %dec_label_pc_8051401
  %v0_8051401 = phi i32 [ %v1_8051401, %dec_label_pc_8051401 ], [ 0, %dec_label_pc_80513f0 ]
  %v1_8051401 = add i32 %v0_8051401, 1
  %v2_8051402 = add i32 %v1_8051401, %v4_80513f2
  %v3_8051402 = inttoptr i32 %v2_8051402 to i8*
  %v4_8051402 = load i8, i8* %v3_8051402, align 1
  %v5_8051402 = icmp eq i8 %v4_8051402, 0
  %v1_8051406 = icmp eq i1 %v5_8051402, false
  br i1 %v1_8051406, label %dec_label_pc_8051401, label %dec_label_pc_8051408

dec_label_pc_8051408:                             ; preds = %dec_label_pc_8051401, %dec_label_pc_80513f0
  %v0_8051419 = phi i32 [ 0, %dec_label_pc_80513f0 ], [ %v1_8051401, %dec_label_pc_8051401 ]
  %v2_805140a = load i8, i8* %tmp, align 1
  %v3_805140a = icmp eq i8 %v2_805140a, 0
  br i1 %v3_805140a, label %dec_label_pc_8051417, label %dec_label_pc_8051410

dec_label_pc_8051410:                             ; preds = %dec_label_pc_8051408, %dec_label_pc_8051410
  %v0_8051410 = phi i32 [ %v1_8051410, %dec_label_pc_8051410 ], [ 0, %dec_label_pc_8051408 ]
  %v1_8051410 = add i32 %v0_8051410, 1
  %v2_8051411 = add i32 %v1_8051410, %v4_80513f8
  %v3_8051411 = inttoptr i32 %v2_8051411 to i8*
  %v4_8051411 = load i8, i8* %v3_8051411, align 1
  %v5_8051411 = icmp eq i8 %v4_8051411, 0
  %v1_8051415 = icmp eq i1 %v5_8051411, false
  br i1 %v1_8051415, label %dec_label_pc_8051410, label %dec_label_pc_8051417

dec_label_pc_8051417:                             ; preds = %dec_label_pc_8051410, %dec_label_pc_8051408
  %v0_8051417 = phi i32 [ 0, %dec_label_pc_8051408 ], [ %v1_8051410, %dec_label_pc_8051410 ]
  %v12_8051419 = icmp eq i32 %v0_8051419, %v0_8051417
  br i1 %v12_8051419, label %dec_label_pc_8051424.preheader, label %dec_label_pc_805141d

dec_label_pc_8051424.preheader:                   ; preds = %dec_label_pc_8051417
  %v10_805142518 = icmp eq i32 %v0_8051419, 0
  br i1 %v10_805142518, label %dec_label_pc_8051432, label %dec_label_pc_805142a

dec_label_pc_805141d:                             ; preds = %dec_label_pc_805142a, %dec_label_pc_8051417
  ret i32 0

dec_label_pc_8051422:                             ; preds = %dec_label_pc_805142a
  %v3_805142a = zext i8 %v2_805142a to i32
  %v5_805142a = and i32 %v4_805142a20, -256
  %v6_805142a = or i32 %v3_805142a, %v5_805142a
  %v1_8051422 = add i32 %v0_805142221, 1
  %v1_8051423 = add i32 %v0_805142319, 1
  %v10_8051425 = icmp eq i32 %v1_805142422, 0
  br i1 %v10_8051425, label %dec_label_pc_8051432, label %dec_label_pc_805142a

dec_label_pc_805142a:                             ; preds = %dec_label_pc_8051424.preheader, %dec_label_pc_8051422
  %v1_805142422.in = phi i32 [ %v1_805142422, %dec_label_pc_8051422 ], [ %v0_8051419, %dec_label_pc_8051424.preheader ]
  %v4_805142a20 = phi i32 [ %v6_805142a, %dec_label_pc_8051422 ], [ %v0_8051419, %dec_label_pc_8051424.preheader ]
  %v0_805142221 = phi i32 [ %v1_8051422, %dec_label_pc_8051422 ], [ %v4_80513f2, %dec_label_pc_8051424.preheader ]
  %v0_805142319 = phi i32 [ %v1_8051423, %dec_label_pc_8051422 ], [ %v4_80513f8, %dec_label_pc_8051424.preheader ]
  %v1_805142422 = add i32 %v1_805142422.in, -1
  %v1_805142a = inttoptr i32 %v0_805142221 to i8*
  %v2_805142a = load i8, i8* %v1_805142a, align 1
  %v3_805142c = inttoptr i32 %v0_805142319 to i8*
  %v4_805142c = load i8, i8* %v3_805142c, align 1
  %v15_805142c = icmp eq i8 %v2_805142a, %v4_805142c
  br i1 %v15_805142c, label %dec_label_pc_8051422, label %dec_label_pc_805141d

dec_label_pc_8051432:                             ; preds = %dec_label_pc_8051422, %dec_label_pc_8051424.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v0_8051419, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805142a, { 1, 0 }
  uselistorder label %dec_label_pc_8051410, { 1, 0 }
  uselistorder label %dec_label_pc_8051401, { 1, 0 }
}

define i32 @function_8051440() local_unnamed_addr {
dec_label_pc_8051440:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_8051442 = ptrtoint i8* %tmp14 to i32
  %v4_8051448 = ptrtoint i8* %tmp13 to i32
  %v2_8051450 = load i8, i8* %tmp14, align 1
  %v3_8051450 = icmp eq i8 %v2_8051450, 0
  br i1 %v3_8051450, label %dec_label_pc_805145c, label %dec_label_pc_8051455

dec_label_pc_8051455:                             ; preds = %dec_label_pc_8051440, %dec_label_pc_8051455
  %v0_8051455 = phi i32 [ %v1_8051455, %dec_label_pc_8051455 ], [ 0, %dec_label_pc_8051440 ]
  %v1_8051455 = add i32 %v0_8051455, 1
  %v2_8051456 = add i32 %v1_8051455, %v4_8051442
  %v3_8051456 = inttoptr i32 %v2_8051456 to i8*
  %v4_8051456 = load i8, i8* %v3_8051456, align 1
  %v5_8051456 = icmp eq i8 %v4_8051456, 0
  %v1_805145a = icmp eq i1 %v5_8051456, false
  br i1 %v1_805145a, label %dec_label_pc_8051455, label %dec_label_pc_805145c

dec_label_pc_805145c:                             ; preds = %dec_label_pc_8051455, %dec_label_pc_8051440
  %v1_805146a = phi i32 [ 0, %dec_label_pc_8051440 ], [ %v1_8051455, %dec_label_pc_8051455 ]
  %v2_805145e = load i8, i8* %tmp13, align 1
  %v3_805145e = icmp eq i8 %v2_805145e, 0
  br i1 %v3_805145e, label %dec_label_pc_805146a, label %dec_label_pc_8051463

dec_label_pc_8051463:                             ; preds = %dec_label_pc_805145c, %dec_label_pc_8051463
  %v0_8051463 = phi i32 [ %v1_8051463, %dec_label_pc_8051463 ], [ 0, %dec_label_pc_805145c ]
  %v1_8051463 = add i32 %v0_8051463, 1
  %v2_8051464 = add i32 %v1_8051463, %v4_8051448
  %v3_8051464 = inttoptr i32 %v2_8051464 to i8*
  %v4_8051464 = load i8, i8* %v3_8051464, align 1
  %v5_8051464 = icmp eq i8 %v4_8051464, 0
  %v1_8051468 = icmp eq i1 %v5_8051464, false
  br i1 %v1_8051468, label %dec_label_pc_8051463, label %dec_label_pc_805146a

dec_label_pc_805146a:                             ; preds = %dec_label_pc_8051463, %dec_label_pc_805145c
  %v1_805146e = phi i32 [ 0, %dec_label_pc_805145c ], [ %v1_8051463, %dec_label_pc_8051463 ]
  %v8_805146c = icmp sgt i32 %tmp, %v1_805146a
  br i1 %v8_805146c, label %dec_label_pc_8051472, label %dec_label_pc_805146e

dec_label_pc_805146e:                             ; preds = %dec_label_pc_805146a
  %v7_8051470 = icmp sgt i32 %tmp, %v1_805146e
  br i1 %v7_8051470, label %dec_label_pc_8051472, label %dec_label_pc_8051479.preheader

dec_label_pc_8051479.preheader:                   ; preds = %dec_label_pc_805146e
  %v10_805147a19 = icmp eq i32 %tmp, 0
  br i1 %v10_805147a19, label %dec_label_pc_8051474, label %dec_label_pc_805147f

dec_label_pc_8051472:                             ; preds = %dec_label_pc_805147f, %dec_label_pc_805146e, %dec_label_pc_805146a
  br label %dec_label_pc_8051474

dec_label_pc_8051474:                             ; preds = %dec_label_pc_8051479.preheader, %dec_label_pc_8051477, %dec_label_pc_8051472
  %storemerge = phi i32 [ 0, %dec_label_pc_8051472 ], [ 1, %dec_label_pc_8051477 ], [ 1, %dec_label_pc_8051479.preheader ]
  ret i32 %storemerge

dec_label_pc_8051477:                             ; preds = %dec_label_pc_805147f
  %v3_805147f = zext i8 %v2_805147f to i32
  %v5_805147f = and i32 %v4_805147f21, -256
  %v6_805147f = or i32 %v3_805147f, %v5_805147f
  %v1_8051477 = add i32 %v0_805147722, 1
  %v1_8051478 = add i32 %v0_805147820, 1
  %v10_805147a = icmp eq i32 %v1_805147923, 0
  br i1 %v10_805147a, label %dec_label_pc_8051474, label %dec_label_pc_805147f

dec_label_pc_805147f:                             ; preds = %dec_label_pc_8051479.preheader, %dec_label_pc_8051477
  %v1_805147923.in = phi i32 [ %v1_805147923, %dec_label_pc_8051477 ], [ %tmp, %dec_label_pc_8051479.preheader ]
  %v0_805147722 = phi i32 [ %v1_8051477, %dec_label_pc_8051477 ], [ %v4_8051442, %dec_label_pc_8051479.preheader ]
  %v4_805147f21 = phi i32 [ %v6_805147f, %dec_label_pc_8051477 ], [ %v1_805146e, %dec_label_pc_8051479.preheader ]
  %v0_805147820 = phi i32 [ %v1_8051478, %dec_label_pc_8051477 ], [ %v4_8051448, %dec_label_pc_8051479.preheader ]
  %v1_805147923 = add i32 %v1_805147923.in, -1
  %v1_805147f = inttoptr i32 %v0_805147722 to i8*
  %v2_805147f = load i8, i8* %v1_805147f, align 1
  %v3_8051481 = inttoptr i32 %v0_805147820 to i8*
  %v4_8051481 = load i8, i8* %v3_8051481, align 1
  %v15_8051481 = icmp eq i8 %v2_805147f, %v4_8051481
  br i1 %v15_8051481, label %dec_label_pc_8051477, label %dec_label_pc_8051472

; uselistorder directives
  uselistorder label %dec_label_pc_805147f, { 1, 0 }
  uselistorder label %dec_label_pc_8051474, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8051463, { 1, 0 }
  uselistorder label %dec_label_pc_8051455, { 1, 0 }
}

define i32 @function_8051490() local_unnamed_addr {
dec_label_pc_8051490:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp20 = call i64 @__decompiler_undefined_function_5()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v12_8051494 = ptrtoint i32* %stack_var_-64 to i32
  %v4_8051497 = inttoptr i32 %tmp22 to i8*
  store i32 %tmp21, i32* %eax.global-to-local, align 4
  %v4_805149f = trunc i64 %tmp20 to i32
  store i32 %v4_805149f, i32* %esi.global-to-local, align 4
  %v2_80514a3 = icmp eq i32 %tmp22, 0
  br i1 %v2_80514a3, label %dec_label_pc_8051510, label %dec_label_pc_80514a7

dec_label_pc_80514a7:                             ; preds = %dec_label_pc_8051490
  %v1_80514a7 = icmp eq i32 %tmp21, 0
  %v2_80514a7 = icmp slt i32 %tmp21, 0
  br i1 %v1_80514a7, label %dec_label_pc_8051520, label %dec_label_pc_80514ab

dec_label_pc_80514ab:                             ; preds = %dec_label_pc_80514a7
  %v9_80514b0 = icmp eq i32 %v4_805149f, 10
  br i1 %v9_80514b0, label %dec_label_pc_805153d, label %dec_label_pc_80514b9

dec_label_pc_80514b9:                             ; preds = %dec_label_pc_805153d, %dec_label_pc_80514ab
  br label %dec_label_pc_80514bd

dec_label_pc_80514bd:                             ; preds = %dec_label_pc_8051545, %dec_label_pc_80514b9
  %storemerge32 = phi i32 [ %tmp21, %dec_label_pc_80514b9 ], [ %v1_8051547, %dec_label_pc_8051545 ]
  %v0_80514c43 = phi i32 [ %tmp21, %dec_label_pc_80514b9 ], [ %v1_8051547, %dec_label_pc_8051545 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_80514b9 ], [ 1, %dec_label_pc_8051545 ]
  store i32 %storemerge32, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80514c2

dec_label_pc_80514c2:                             ; preds = %dec_label_pc_80514c2.dec_label_pc_80514c2_crit_edge, %dec_label_pc_80514bd
  %v2_80514d3 = phi i32 [ %v2_80514d3.pre, %dec_label_pc_80514c2.dec_label_pc_80514c2_crit_edge ], [ %v12_8051494, %dec_label_pc_80514bd ]
  %v3_80514d3 = phi i32 [ %v1_80514db, %dec_label_pc_80514c2.dec_label_pc_80514c2_crit_edge ], [ 32, %dec_label_pc_80514bd ]
  %v0_80514c6 = phi i32 [ %v0_80514dc, %dec_label_pc_80514c2.dec_label_pc_80514c2_crit_edge ], [ %v4_805149f, %dec_label_pc_80514bd ]
  %v0_80514c4 = phi i32 [ %div18, %dec_label_pc_80514c2.dec_label_pc_80514c2_crit_edge ], [ %v0_80514c43, %dec_label_pc_80514bd ]
  %tmp29 = urem i32 %v0_80514c4, %v0_80514c6
  %v7_80514ce = icmp sgt i32 %tmp29, 9
  %v1_80514d0.v1_80514cb.v = select i1 %v7_80514ce, i32 55, i32 48
  %v1_80514d0.v1_80514cb = add i32 %v1_80514d0.v1_80514cb.v, %tmp29
  %v1_80514d3 = trunc i32 %v1_80514d0.v1_80514cb to i8
  %v4_80514d3 = add i32 %v3_80514d3, 14
  %v5_80514d3 = add i32 %v4_80514d3, %v2_80514d3
  %v6_80514d3 = inttoptr i32 %v5_80514d3 to i8*
  store i8 %v1_80514d3, i8* %v6_80514d3, align 1
  %v0_80514d9 = load i32, i32* %ecx.global-to-local, align 4
  %v0_80514db = load i32, i32* %ebx.global-to-local, align 4
  %v1_80514db = add i32 %v0_80514db, -1
  store i32 %v1_80514db, i32* %ebx.global-to-local, align 4
  %v0_80514dc = load i32, i32* %esi.global-to-local, align 4
  %div18 = udiv i32 %v0_80514d9, %v0_80514dc
  store i32 %div18, i32* %eax.global-to-local, align 4
  %tmp30 = urem i32 %v0_80514d9, %v0_80514dc
  store i32 %tmp30, i32* %edx.global-to-local, align 4
  store i32 %div18, i32* %ecx.global-to-local, align 4
  %v2_80514e0 = icmp ugt i32 %v0_80514dc, %v0_80514d9
  %v1_80514e2 = icmp eq i1 %v2_80514e0, false
  br i1 %v1_80514e2, label %dec_label_pc_80514c2.dec_label_pc_80514c2_crit_edge, label %dec_label_pc_80514e4

dec_label_pc_80514c2.dec_label_pc_80514c2_crit_edge: ; preds = %dec_label_pc_80514c2
  %v2_80514d3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80514c2

dec_label_pc_80514e4:                             ; preds = %dec_label_pc_80514c2
  %v0_80514e4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80514e4 = icmp eq i32 %v0_80514e4, 0
  %v1_80514e6 = icmp eq i1 %v1_80514e4, false
  br i1 %v1_80514e6, label %dec_label_pc_8051536, label %dec_label_pc_80514e8

dec_label_pc_80514e8:                             ; preds = %dec_label_pc_80514e4
  store i32 %v0_80514db, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80514e9

dec_label_pc_80514e9:                             ; preds = %dec_label_pc_8051536, %dec_label_pc_80514e8
  %v1_80514e9 = phi i32 [ %v1_80514e9.pre, %dec_label_pc_8051536 ], [ %v0_80514db, %dec_label_pc_80514e8 ]
  %v0_80514e9 = load i32, i32* @esp, align 4
  %v2_80514e9 = add i32 %v1_80514e9, 14
  %v3_80514e9 = add i32 %v2_80514e9, %v0_80514e9
  store i32 %v3_80514e9, i32* %eax.global-to-local, align 4
  %v1_80514ed = inttoptr i32 %v3_80514e9 to i8*
  %v2_80514ed = load i8, i8* %v1_80514ed, align 1
  %v3_80514ed = icmp eq i8 %v2_80514ed, 0
  br i1 %v3_80514ed, label %dec_label_pc_8051555, label %dec_label_pc_80514f2

dec_label_pc_80514f2:                             ; preds = %dec_label_pc_80514e9
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80514f4

dec_label_pc_80514f4:                             ; preds = %dec_label_pc_80514f4, %dec_label_pc_80514f2
  %v0_80514f4 = phi i32 [ %v1_80514f4, %dec_label_pc_80514f4 ], [ 0, %dec_label_pc_80514f2 ]
  %v1_80514f4 = add i32 %v0_80514f4, 1
  store i32 %v1_80514f4, i32* %ecx.global-to-local, align 4
  %v2_80514f5 = add i32 %v1_80514f4, %v3_80514e9
  %v3_80514f5 = inttoptr i32 %v2_80514f5 to i8*
  %v4_80514f5 = load i8, i8* %v3_80514f5, align 1
  %v5_80514f5 = icmp eq i8 %v4_80514f5, 0
  %v1_80514f9 = icmp eq i1 %v5_80514f5, false
  br i1 %v1_80514f9, label %dec_label_pc_80514f4, label %dec_label_pc_80514fb

dec_label_pc_80514fb:                             ; preds = %dec_label_pc_80514f4
  %v10_80514fb = icmp eq i32 %v0_80514f4, -2
  br i1 %v10_80514fb, label %dec_label_pc_8051510, label %dec_label_pc_8051500

dec_label_pc_8051500:                             ; preds = %dec_label_pc_80514fb
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_80514e9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051504

dec_label_pc_8051504:                             ; preds = %dec_label_pc_8051555, %dec_label_pc_8051500, %dec_label_pc_8051504.dec_label_pc_8051504_crit_edge
  %v2_8051507 = phi i32 [ %v1_805150a, %dec_label_pc_8051504.dec_label_pc_8051504_crit_edge ], [ %tmp22, %dec_label_pc_8051500 ], [ %tmp22, %dec_label_pc_8051555 ]
  %v0_8051506 = phi i32 [ %v0_805150b, %dec_label_pc_8051504.dec_label_pc_8051504_crit_edge ], [ %v1_80514f4, %dec_label_pc_8051500 ], [ 0, %dec_label_pc_8051555 ]
  %v4_8051504 = phi i32 [ %v4_8051504.pre, %dec_label_pc_8051504.dec_label_pc_8051504_crit_edge ], [ %v3_80514e9, %dec_label_pc_8051500 ], [ %v3_80514e9, %dec_label_pc_8051555 ]
  %v0_8051504 = phi i32 [ %v1_8051509, %dec_label_pc_8051504.dec_label_pc_8051504_crit_edge ], [ %v3_80514e9, %dec_label_pc_8051500 ], [ %v3_80514e9, %dec_label_pc_8051555 ]
  %v1_8051504 = inttoptr i32 %v0_8051504 to i8*
  %v2_8051504 = load i8, i8* %v1_8051504, align 1
  %v3_8051504 = zext i8 %v2_8051504 to i32
  %v5_8051504 = and i32 %v4_8051504, -256
  %v6_8051504 = or i32 %v3_8051504, %v5_8051504
  store i32 %v6_8051504, i32* %eax.global-to-local, align 4
  %v1_8051506 = add i32 %v0_8051506, -1
  store i32 %v1_8051506, i32* %ecx.global-to-local, align 4
  %v3_8051507 = inttoptr i32 %v2_8051507 to i8*
  store i8 %v2_8051504, i8* %v3_8051507, align 1
  %v0_8051509 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051509 = add i32 %v0_8051509, 1
  store i32 %v1_8051509, i32* %edx.global-to-local, align 4
  %v0_805150a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805150a = add i32 %v0_805150a, 1
  store i32 %v1_805150a, i32* %ebx.global-to-local, align 4
  %v0_805150b = load i32, i32* %ecx.global-to-local, align 4
  %v10_805150b = icmp eq i32 %v0_805150b, -1
  %v1_805150e = icmp eq i1 %v10_805150b, false
  br i1 %v1_805150e, label %dec_label_pc_8051504.dec_label_pc_8051504_crit_edge, label %dec_label_pc_8051510.loopexit

dec_label_pc_8051504.dec_label_pc_8051504_crit_edge: ; preds = %dec_label_pc_8051504
  %v4_8051504.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051504

dec_label_pc_8051510.loopexit:                    ; preds = %dec_label_pc_8051504
  br label %dec_label_pc_8051510

dec_label_pc_8051510:                             ; preds = %dec_label_pc_8051510.loopexit, %dec_label_pc_80514fb, %dec_label_pc_8051490
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_8051520:                             ; preds = %dec_label_pc_80514a7
  store i8 48, i8* %v4_8051497, align 1
  %v2_8051523 = add i32 %tmp22, 1
  %v3_8051523 = inttoptr i32 %v2_8051523 to i8*
  store i8 0, i8* %v3_8051523, align 1
  store i32 %tmp22, i32* %eax.global-to-local, align 4
  ret i32 %tmp22

dec_label_pc_8051536:                             ; preds = %dec_label_pc_80514e4
  %v0_8051536 = load i32, i32* @esp, align 4
  %v2_8051536 = add i32 %v0_80514db, 13
  %v3_8051536 = add i32 %v2_8051536, %v0_8051536
  %v4_8051536 = inttoptr i32 %v3_8051536 to i8*
  store i8 45, i8* %v4_8051536, align 1
  %v1_80514e9.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80514e9

dec_label_pc_805153d:                             ; preds = %dec_label_pc_80514ab
  %v1_805153f = icmp eq i1 %v2_80514a7, false
  br i1 %v1_805153f, label %dec_label_pc_80514b9, label %dec_label_pc_8051545

dec_label_pc_8051545:                             ; preds = %dec_label_pc_805153d
  %v1_8051547 = sub i32 0, %tmp21
  br label %dec_label_pc_80514bd

dec_label_pc_8051555:                             ; preds = %dec_label_pc_80514e9
  store i32 %tmp22, i32* %ebx.global-to-local, align 4
  store i32 %v3_80514e9, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051504

; uselistorder directives
  uselistorder i32 %v1_805150a, { 1, 0 }
  uselistorder i32 %v1_8051509, { 1, 0 }
  uselistorder i32 %v1_80514f4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80514e9, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div18, { 1, 2, 0 }
  uselistorder i32 %v1_80514db, { 1, 0 }
  uselistorder i32 %v4_805149f, { 1, 0, 2 }
  uselistorder i32 %tmp22, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %tmp21, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i8 48, { 1, 0 }
  uselistorder label %dec_label_pc_8051504, { 0, 2, 1 }
}

define i32 @function_805155d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805155d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805155d = load i32, i32* @edi, align 4
  %v0_805155e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8051572 = add i32 %arg2, -12
  %v6_805157c = icmp ugt i32 %v1_8051572, 2
  br i1 %v6_805157c, label %dec_label_pc_805158c, label %dec_label_pc_805157e

dec_label_pc_805157e:                             ; preds = %dec_label_pc_805155d
  %v4_8051582 = call i32 @function_80515b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8051572)
  br label %dec_label_pc_80515ae

dec_label_pc_805158c:                             ; preds = %dec_label_pc_805155d
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8051594 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8051594, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8051594, -4095
  br i1 %tmp17, label %dec_label_pc_80515ac, label %dec_label_pc_80515a0

dec_label_pc_80515a0:                             ; preds = %dec_label_pc_805158c
  %v1_80515a0 = call i32 @function_8051afd(i32 %v0_805155e)
  %v0_80515a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80515a5 = sub i32 0, %v0_80515a5
  %v2_80515a7 = inttoptr i32 %v1_80515a0 to i32*
  store i32 %v1_80515a5, i32* %v2_80515a7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80515ac

dec_label_pc_80515ac:                             ; preds = %dec_label_pc_805158c, %dec_label_pc_80515a0
  %v0_80515ac = phi i32 [ %v2_8051594, %dec_label_pc_805158c ], [ -1, %dec_label_pc_80515a0 ]
  br label %dec_label_pc_80515ae

dec_label_pc_80515ae:                             ; preds = %dec_label_pc_805157e, %dec_label_pc_80515ac
  %v0_80515b3 = phi i32 [ %v4_8051582, %dec_label_pc_805157e ], [ %v0_80515ac, %dec_label_pc_80515ac ]
  store i32 %v0_805155e, i32* @ebx, align 4
  store i32 %v0_805155d, i32* @edi, align 4
  ret i32 %v0_80515b3

; uselistorder directives
  uselistorder i32 %v2_8051594, { 1, 0, 2 }
  uselistorder i32 %v0_805155e, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80515ae, { 1, 0 }
  uselistorder label %dec_label_pc_80515ac, { 1, 0 }
}

define i32 @function_80515b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80515b4:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80515b4 = load i32, i32* @edi, align 4
  store i32 %v0_80515b4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80515cc = load i32, i32* @ebx, align 4
  %v1_80515d4 = call i32 @int80_syscall(i32 221)
  store i32 %v1_80515d4, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_80515d4, -4095
  br i1 %tmp12, label %dec_label_pc_80515ec, label %dec_label_pc_80515e0

dec_label_pc_80515e0:                             ; preds = %dec_label_pc_80515b4
  %v1_80515e0 = call i32 @function_8051afd(i32 %v0_80515cc)
  %v0_80515e5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80515e5 = sub i32 0, %v0_80515e5
  %v2_80515e7 = inttoptr i32 %v1_80515e0 to i32*
  store i32 %v1_80515e5, i32* %v2_80515e7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80515f1.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80515ec

dec_label_pc_80515ec:                             ; preds = %dec_label_pc_80515b4, %dec_label_pc_80515e0
  %v2_80515f1 = phi i32 [ %v0_80515b4, %dec_label_pc_80515b4 ], [ %v2_80515f1.pre, %dec_label_pc_80515e0 ]
  %v0_80515ec = phi i32 [ %v1_80515d4, %dec_label_pc_80515b4 ], [ -1, %dec_label_pc_80515e0 ]
  store i32 %v2_80515f1, i32* %edi.global-to-local, align 4
  ret i32 %v0_80515ec

; uselistorder directives
  uselistorder i32 %v1_80515d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80515ec, { 1, 0 }
}

define i32 @function_80515f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_80515f3:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80515f3 = load i32, i32* @edi, align 4
  store i32 %v0_80515f3, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80515fb = load i32, i32* @ebx, align 4
  %v1_8051603 = call i32 @close(i32 %arg1)
  store i32 %v0_80515fb, i32* @ebx, align 4
  store i32 %v1_8051603, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8051603, -4095
  br i1 %tmp9, label %dec_label_pc_805161b, label %dec_label_pc_805160f

dec_label_pc_805160f:                             ; preds = %dec_label_pc_80515f3
  %v1_805160f = call i32 @function_8051afd(i32 %v0_80515fb)
  %v0_8051614 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051614 = sub i32 0, %v0_8051614
  %v2_8051616 = inttoptr i32 %v1_805160f to i32*
  store i32 %v1_8051614, i32* %v2_8051616, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_805161f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805161b

dec_label_pc_805161b:                             ; preds = %dec_label_pc_80515f3, %dec_label_pc_805160f
  %v2_805161f = phi i32 [ %v0_80515f3, %dec_label_pc_80515f3 ], [ %v2_805161f.pre, %dec_label_pc_805160f ]
  %v0_805161b = phi i32 [ %v1_8051603, %dec_label_pc_80515f3 ], [ -1, %dec_label_pc_805160f ]
  store i32 %v2_805161f, i32* @edi, align 4
  ret i32 %v0_805161b

; uselistorder directives
  uselistorder i32 %v1_8051603, { 1, 0, 2 }
  uselistorder i32 %v0_80515fb, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805161b, { 1, 0 }
}

define i32 @function_8051621() local_unnamed_addr {
dec_label_pc_8051621:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051621 = load i32, i32* @ebx, align 4
  store i32 %v0_8051621, i32* %stack_var_-4, align 4
  %v1_805162a = call i32 @fork(i32 %v0_8051621)
  store i32 %v1_805162a, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805162a, -4095
  br i1 %tmp7, label %dec_label_pc_8051641, label %dec_label_pc_8051635

dec_label_pc_8051635:                             ; preds = %dec_label_pc_8051621
  %v1_8051635 = call i32 @function_8051afd(i32 %v0_8051621)
  %v0_805163a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805163a = sub i32 0, %v0_805163a
  %v2_805163c = inttoptr i32 %v1_8051635 to i32*
  store i32 %v1_805163a, i32* %v2_805163c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051645.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051641

dec_label_pc_8051641:                             ; preds = %dec_label_pc_8051621, %dec_label_pc_8051635
  %v2_8051645 = phi i32 [ %v0_8051621, %dec_label_pc_8051621 ], [ %v2_8051645.pre, %dec_label_pc_8051635 ]
  %v0_8051641 = phi i32 [ %v1_805162a, %dec_label_pc_8051621 ], [ -1, %dec_label_pc_8051635 ]
  store i32 %v2_8051645, i32* @ebx, align 4
  ret i32 %v0_8051641

; uselistorder directives
  uselistorder i32 %v1_805162a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051641, { 1, 0 }
}

define i32 @function_8051647() local_unnamed_addr {
dec_label_pc_8051647:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051647 = load i32, i32* @ebx, align 4
  store i32 %v0_8051647, i32* %stack_var_-4, align 4
  %v1_8051650 = call i32 @getpid(i32 %v0_8051647)
  store i32 %v1_8051650, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8051650, -4095
  br i1 %tmp7, label %dec_label_pc_8051667, label %dec_label_pc_805165b

dec_label_pc_805165b:                             ; preds = %dec_label_pc_8051647
  %v1_805165b = call i32 @function_8051afd(i32 %v0_8051647)
  %v0_8051660 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051660 = sub i32 0, %v0_8051660
  %v2_8051662 = inttoptr i32 %v1_805165b to i32*
  store i32 %v1_8051660, i32* %v2_8051662, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805166b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051667

dec_label_pc_8051667:                             ; preds = %dec_label_pc_8051647, %dec_label_pc_805165b
  %v2_805166b = phi i32 [ %v0_8051647, %dec_label_pc_8051647 ], [ %v2_805166b.pre, %dec_label_pc_805165b ]
  %v0_8051667 = phi i32 [ %v1_8051650, %dec_label_pc_8051647 ], [ -1, %dec_label_pc_805165b ]
  %v2_8051669 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051669, i32* @edx, align 4
  store i32 %v2_805166b, i32* @ebx, align 4
  ret i32 %v0_8051667

; uselistorder directives
  uselistorder i32 %v1_8051650, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051667, { 1, 0 }
}

define i32 @function_805166d() local_unnamed_addr {
dec_label_pc_805166d:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805166d = load i32, i32* @ebx, align 4
  store i32 %v0_805166d, i32* %stack_var_-4, align 4
  %v1_8051676 = call i32 @getppid(i32 %v0_805166d)
  store i32 %v1_8051676, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8051676, -4095
  br i1 %tmp7, label %dec_label_pc_805168d, label %dec_label_pc_8051681

dec_label_pc_8051681:                             ; preds = %dec_label_pc_805166d
  %v1_8051681 = call i32 @function_8051afd(i32 %v0_805166d)
  %v0_8051686 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051686 = sub i32 0, %v0_8051686
  %v2_8051688 = inttoptr i32 %v1_8051681 to i32*
  store i32 %v1_8051686, i32* %v2_8051688, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051691.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805168d

dec_label_pc_805168d:                             ; preds = %dec_label_pc_805166d, %dec_label_pc_8051681
  %v2_8051691 = phi i32 [ %v0_805166d, %dec_label_pc_805166d ], [ %v2_8051691.pre, %dec_label_pc_8051681 ]
  %v0_805168d = phi i32 [ %v1_8051676, %dec_label_pc_805166d ], [ -1, %dec_label_pc_8051681 ]
  store i32 %v2_8051691, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805168d

; uselistorder directives
  uselistorder i32 %v1_8051676, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805168d, { 1, 0 }
}

define i32 @function_8051693(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051693:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051693 = load i32, i32* @edi, align 4
  store i32 %v0_8051693, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80516ab = load i32, i32* @ebx, align 4
  %v2_80516b3 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_80516b3, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_80516b3, -4095
  br i1 %tmp12, label %dec_label_pc_80516cb, label %dec_label_pc_80516bf

dec_label_pc_80516bf:                             ; preds = %dec_label_pc_8051693
  %v1_80516bf = call i32 @function_8051afd(i32 %v0_80516ab)
  %v0_80516c4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80516c4 = sub i32 0, %v0_80516c4
  %v2_80516c6 = inttoptr i32 %v1_80516bf to i32*
  store i32 %v1_80516c4, i32* %v2_80516c6, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80516d0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80516cb

dec_label_pc_80516cb:                             ; preds = %dec_label_pc_8051693, %dec_label_pc_80516bf
  %v2_80516d0 = phi i32 [ %v0_8051693, %dec_label_pc_8051693 ], [ %v2_80516d0.pre, %dec_label_pc_80516bf ]
  %v0_80516cb = phi i32 [ %v2_80516b3, %dec_label_pc_8051693 ], [ -1, %dec_label_pc_80516bf ]
  store i32 %v2_80516d0, i32* %edi.global-to-local, align 4
  ret i32 %v0_80516cb

; uselistorder directives
  uselistorder i32 %v2_80516b3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80516cb, { 1, 0 }
}

define i32 @function_80516d2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80516d2:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80516d2 = load i32, i32* @ebx, align 4
  store i32 %v0_80516d2, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80516e5 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_80516e5, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80516e5, -4095
  br i1 %tmp9, label %dec_label_pc_80516fe, label %dec_label_pc_80516f2

dec_label_pc_80516f2:                             ; preds = %dec_label_pc_80516d2
  %v1_80516f2 = call i32 @function_8051afd(i32 %v0_80516d2)
  %v0_80516f7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80516f7 = sub i32 0, %v0_80516f7
  %v2_80516f9 = inttoptr i32 %v1_80516f2 to i32*
  store i32 %v1_80516f7, i32* %v2_80516f9, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8051702.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80516fe

dec_label_pc_80516fe:                             ; preds = %dec_label_pc_80516d2, %dec_label_pc_80516f2
  %v2_8051702 = phi i32 [ %v0_80516d2, %dec_label_pc_80516d2 ], [ %v2_8051702.pre, %dec_label_pc_80516f2 ]
  %v0_80516fe = phi i32 [ %v2_80516e5, %dec_label_pc_80516d2 ], [ -1, %dec_label_pc_80516f2 ]
  %v2_8051700 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051700, i32* @edx, align 4
  store i32 %v2_8051702, i32* @ebx, align 4
  ret i32 %v0_80516fe

; uselistorder directives
  uselistorder i32 %v2_80516e5, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80516fe, { 1, 0 }
}

define i32 @function_8051704(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051704:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8051705 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_805170b = sdiv i32 %sext, 16777216
  %v4_805170f = ptrtoint i8* %arg1 to i32
  %v3_8051713 = and i32 %arg2, 64
  %v4_8051713 = icmp eq i32 %v3_8051713, 0
  br i1 %v4_8051713, label %dec_label_pc_8051724, label %dec_label_pc_8051718

dec_label_pc_8051718:                             ; preds = %dec_label_pc_8051704
  br label %dec_label_pc_8051724

dec_label_pc_8051724:                             ; preds = %dec_label_pc_8051704, %dec_label_pc_8051718
  store i32 %v4_805170f, i32* %ebx.global-to-local, align 4
  %v5_805172f = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_805170b)
  store i32 %v5_805172f, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_805172f, -4095
  br i1 %tmp15, label %dec_label_pc_8051747, label %dec_label_pc_805173b

dec_label_pc_805173b:                             ; preds = %dec_label_pc_8051724
  %v1_805173b = call i32 @function_8051afd(i32 %v0_8051705)
  %v0_8051740 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051740 = sub i32 0, %v0_8051740
  %v2_8051742 = inttoptr i32 %v1_805173b to i32*
  store i32 %v1_8051740, i32* %v2_8051742, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051747

dec_label_pc_8051747:                             ; preds = %dec_label_pc_8051724, %dec_label_pc_805173b
  %v0_8051747 = phi i32 [ %v5_805172f, %dec_label_pc_8051724 ], [ -1, %dec_label_pc_805173b ]
  store i32 %v0_8051705, i32* @ebx, align 4
  ret i32 %v0_8051747

; uselistorder directives
  uselistorder i32 %v5_805172f, { 1, 0, 2 }
  uselistorder i32 %v0_8051705, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051747, { 1, 0 }
  uselistorder label %dec_label_pc_8051724, { 1, 0 }
}

define i32 @function_805174f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805174f:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051750 = load i32, i32* @esi, align 4
  store i32 %v0_8051750, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8051768 = load i32, i32* @ebx, align 4
  %v5_8051770 = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_8051770, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_8051770, -4095
  br i1 %tmp12, label %dec_label_pc_8051788, label %dec_label_pc_805177c

dec_label_pc_805177c:                             ; preds = %dec_label_pc_805174f
  %v1_805177c = call i32 @function_8051afd(i32 %v0_8051768)
  %v0_8051781 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051781 = sub i32 0, %v0_8051781
  %v2_8051783 = inttoptr i32 %v1_805177c to i32*
  store i32 %v1_8051781, i32* %v2_8051783, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_805178b.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051788

dec_label_pc_8051788:                             ; preds = %dec_label_pc_805174f, %dec_label_pc_805177c
  %v2_805178b = phi i32 [ %v0_8051750, %dec_label_pc_805174f ], [ %v2_805178b.pre, %dec_label_pc_805177c ]
  %v0_8051788 = phi i32 [ %v5_8051770, %dec_label_pc_805174f ], [ -1, %dec_label_pc_805177c ]
  store i32 %v2_805178b, i32* %esi.global-to-local, align 4
  ret i32 %v0_8051788

; uselistorder directives
  uselistorder i32 %v5_8051770, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051788, { 1, 0 }
}

define i32 @function_805178e(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805178e:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805178e = load i32, i32* @edi, align 4
  store i32 %v0_805178e, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805179e = load i32, i32* @ebx, align 4
  %v4_80517a6 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_80517a6, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80517a6, -4095
  br i1 %tmp12, label %dec_label_pc_80517be, label %dec_label_pc_80517b2

dec_label_pc_80517b2:                             ; preds = %dec_label_pc_805178e
  %v1_80517b2 = call i32 @function_8051afd(i32 %v0_805179e)
  %v0_80517b7 = load i32, i32* %edi.global-to-local, align 4
  %v1_80517b7 = sub i32 0, %v0_80517b7
  %v2_80517b9 = inttoptr i32 %v1_80517b2 to i32*
  store i32 %v1_80517b7, i32* %v2_80517b9, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80517c2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80517be

dec_label_pc_80517be:                             ; preds = %dec_label_pc_805178e, %dec_label_pc_80517b2
  %v2_80517c2 = phi i32 [ %v0_805178e, %dec_label_pc_805178e ], [ %v2_80517c2.pre, %dec_label_pc_80517b2 ]
  %v0_80517be = phi i32 [ %v4_80517a6, %dec_label_pc_805178e ], [ -1, %dec_label_pc_80517b2 ]
  store i32 %v2_80517c2, i32* %edi.global-to-local, align 4
  ret i32 %v0_80517be

; uselistorder directives
  uselistorder i32 %v4_80517a6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80517be, { 1, 0 }
}

define i32 @function_80517c4(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80517c4:
  %edi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to i8*
  %stack_var_-4 = alloca i32, align 4
  %v0_80517c4 = load i32, i32* @edi, align 4
  store i32 %v0_80517c4, i32* %stack_var_-4, align 4
  %v4_80517c8 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80517c8, i32* %edi.global-to-local, align 4
  %v0_80517d4 = load i32, i32* @ebx, align 4
  %v7_80517dc = call i32 @readlink(i8* %arg1, i8* %tmp5, i32 %arg3)
  store i32 %v7_80517dc, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_80517dc, -4095
  br i1 %tmp13, label %dec_label_pc_80517f4, label %dec_label_pc_80517e8

dec_label_pc_80517e8:                             ; preds = %dec_label_pc_80517c4
  %v1_80517e8 = call i32 @function_8051afd(i32 %v0_80517d4)
  %v0_80517ed = load i32, i32* %edi.global-to-local, align 4
  %v1_80517ed = sub i32 0, %v0_80517ed
  %v2_80517ef = inttoptr i32 %v1_80517e8 to i32*
  store i32 %v1_80517ed, i32* %v2_80517ef, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80517f8.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80517f4

dec_label_pc_80517f4:                             ; preds = %dec_label_pc_80517c4, %dec_label_pc_80517e8
  %v2_80517f8 = phi i32 [ %v0_80517c4, %dec_label_pc_80517c4 ], [ %v2_80517f8.pre, %dec_label_pc_80517e8 ]
  %v0_80517f4 = phi i32 [ %v7_80517dc, %dec_label_pc_80517c4 ], [ -1, %dec_label_pc_80517e8 ]
  store i32 %v2_80517f8, i32* %edi.global-to-local, align 4
  ret i32 %v0_80517f4

; uselistorder directives
  uselistorder i32 %v7_80517dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80517f4, { 1, 0 }
}

define i32 @function_80517fa() local_unnamed_addr {
dec_label_pc_80517fa:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80517fb = load i32, i32* @esi, align 4
  store i32 %v0_80517fb, i32* %stack_var_-8, align 4
  %v0_8051813 = load i32, i32* @ebx, align 4
  %v1_805181b = call i32 @int80_syscall(i32 142)
  store i32 %v0_8051813, i32* @ebx, align 4
  store i32 %v1_805181b, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_805181b, -4095
  br i1 %tmp12, label %dec_label_pc_8051833, label %dec_label_pc_8051827

dec_label_pc_8051827:                             ; preds = %dec_label_pc_80517fa
  %v1_8051827 = call i32 @function_8051afd(i32 %v0_8051813)
  %v0_805182c = load i32, i32* %esi.global-to-local, align 4
  %v1_805182c = sub i32 0, %v0_805182c
  %v2_805182e = inttoptr i32 %v1_8051827 to i32*
  store i32 %v1_805182c, i32* %v2_805182e, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8051836.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8051833

dec_label_pc_8051833:                             ; preds = %dec_label_pc_80517fa, %dec_label_pc_8051827
  %v2_8051836 = phi i32 [ %v0_80517fb, %dec_label_pc_80517fa ], [ %v2_8051836.pre, %dec_label_pc_8051827 ]
  %v0_8051833 = phi i32 [ %v1_805181b, %dec_label_pc_80517fa ], [ -1, %dec_label_pc_8051827 ]
  store i32 %v2_8051836, i32* @esi, align 4
  ret i32 %v0_8051833

; uselistorder directives
  uselistorder i32 %v1_805181b, { 1, 0, 2 }
  uselistorder i32 %v0_8051813, { 1, 0 }
  uselistorder label %dec_label_pc_8051833, { 1, 0 }
}

define i32 @function_8051839() local_unnamed_addr {
dec_label_pc_8051839:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051839 = load i32, i32* @ebx, align 4
  store i32 %v0_8051839, i32* %stack_var_-4, align 4
  %v1_8051842 = call i32 @setsid(i32 %v0_8051839)
  store i32 %v1_8051842, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8051842, -4095
  br i1 %tmp7, label %dec_label_pc_8051859, label %dec_label_pc_805184d

dec_label_pc_805184d:                             ; preds = %dec_label_pc_8051839
  %v1_805184d = call i32 @function_8051afd(i32 %v0_8051839)
  %v0_8051852 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051852 = sub i32 0, %v0_8051852
  %v2_8051854 = inttoptr i32 %v1_805184d to i32*
  store i32 %v1_8051852, i32* %v2_8051854, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805185d.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051859

dec_label_pc_8051859:                             ; preds = %dec_label_pc_8051839, %dec_label_pc_805184d
  %v2_805185d = phi i32 [ %v0_8051839, %dec_label_pc_8051839 ], [ %v2_805185d.pre, %dec_label_pc_805184d ]
  %v0_8051859 = phi i32 [ %v1_8051842, %dec_label_pc_8051839 ], [ -1, %dec_label_pc_805184d ]
  store i32 %v2_805185d, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051859

; uselistorder directives
  uselistorder i32 %v1_8051842, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051859, { 1, 0 }
}

define i32 @function_805185f(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805185f:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8051860 = load i32, i32* @esi, align 4
  %v4_8051864 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8051864, i32* @ecx, align 4
  %v2_8051870 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8051870, label %dec_label_pc_8051889, label %dec_label_pc_8051874

dec_label_pc_8051874:                             ; preds = %dec_label_pc_805185f
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8051889, label %dec_label_pc_8051879

dec_label_pc_8051879:                             ; preds = %dec_label_pc_8051874
  %v1_8051879 = call i32 @function_8051afd(i32 %v0_8051860)
  %v1_805187e = inttoptr i32 %v1_8051879 to i32*
  store i32 22, i32* %v1_805187e, align 4
  br label %dec_label_pc_80518b0

dec_label_pc_8051889:                             ; preds = %dec_label_pc_8051874, %dec_label_pc_805185f
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805188e = load i32, i32* @ebx, align 4
  %v7_8051896 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805188e, i32* @ebx, align 4
  store i32 %v7_8051896, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8051896, -4095
  br i1 %tmp12, label %dec_label_pc_80518b0, label %dec_label_pc_80518a2

dec_label_pc_80518a2:                             ; preds = %dec_label_pc_8051889
  %v1_80518a2 = call i32 @function_8051afd(i32 %v0_805188e)
  %v0_80518a7 = load i32, i32* %esi.global-to-local, align 4
  %v1_80518a7 = sub i32 0, %v0_80518a7
  %v2_80518a9 = inttoptr i32 %v1_80518a2 to i32*
  store i32 %v1_80518a7, i32* %v2_80518a9, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80518b0

dec_label_pc_80518b0:                             ; preds = %dec_label_pc_80518a2, %dec_label_pc_8051889, %dec_label_pc_8051879
  %storemerge = phi i32 [ -1, %dec_label_pc_8051879 ], [ %v7_8051896, %dec_label_pc_8051889 ], [ -1, %dec_label_pc_80518a2 ]
  %v2_80518b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80518b0, i32* @edx, align 4
  store i32 %v0_8051860, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8051896, { 1, 0, 2 }
  uselistorder i32 %v0_805188e, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_80518b4() local_unnamed_addr {
dec_label_pc_80518b4:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80518b4 = load i32, i32* @edi, align 4
  store i32 %v0_80518b4, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_80518bc = load i32, i32* @ebx, align 4
  %v1_80518c4 = inttoptr i32 %tmp to i32*
  %v2_80518c4 = call i32 @time(i32* %v1_80518c4)
  store i32 %v0_80518bc, i32* @ebx, align 4
  store i32 %v2_80518c4, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_80518c4, -4095
  br i1 %tmp9, label %dec_label_pc_80518dc, label %dec_label_pc_80518d0

dec_label_pc_80518d0:                             ; preds = %dec_label_pc_80518b4
  %v1_80518d0 = call i32 @function_8051afd(i32 %v0_80518bc)
  %v0_80518d5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80518d5 = sub i32 0, %v0_80518d5
  %v2_80518d7 = inttoptr i32 %v1_80518d0 to i32*
  store i32 %v1_80518d5, i32* %v2_80518d7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80518e0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80518dc

dec_label_pc_80518dc:                             ; preds = %dec_label_pc_80518b4, %dec_label_pc_80518d0
  %v2_80518e0 = phi i32 [ %v0_80518b4, %dec_label_pc_80518b4 ], [ %v2_80518e0.pre, %dec_label_pc_80518d0 ]
  %v0_80518dc = phi i32 [ %v2_80518c4, %dec_label_pc_80518b4 ], [ -1, %dec_label_pc_80518d0 ]
  store i32 %v2_80518e0, i32* @edi, align 4
  ret i32 %v0_80518dc

; uselistorder directives
  uselistorder i32 %v2_80518c4, { 1, 0, 2 }
  uselistorder i32 %v0_80518bc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_80518dc, { 1, 0 }
}

define i32 @function_80518e2(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80518e2:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80518e2 = load i32, i32* @edi, align 4
  store i32 %v0_80518e2, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80518f2 = load i32, i32* @ebx, align 4
  %v4_80518fa = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_80518fa, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_80518fa, -4095
  br i1 %tmp12, label %dec_label_pc_8051912, label %dec_label_pc_8051906

dec_label_pc_8051906:                             ; preds = %dec_label_pc_80518e2
  %v1_8051906 = call i32 @function_8051afd(i32 %v0_80518f2)
  %v0_805190b = load i32, i32* %edi.global-to-local, align 4
  %v1_805190b = sub i32 0, %v0_805190b
  %v2_805190d = inttoptr i32 %v1_8051906 to i32*
  store i32 %v1_805190b, i32* %v2_805190d, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8051916.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051912

dec_label_pc_8051912:                             ; preds = %dec_label_pc_80518e2, %dec_label_pc_8051906
  %v2_8051916 = phi i32 [ %v0_80518e2, %dec_label_pc_80518e2 ], [ %v2_8051916.pre, %dec_label_pc_8051906 ]
  %v0_8051912 = phi i32 [ %v4_80518fa, %dec_label_pc_80518e2 ], [ -1, %dec_label_pc_8051906 ]
  store i32 %v2_8051916, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051912

; uselistorder directives
  uselistorder i32 %v4_80518fa, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051912, { 1, 0 }
}

define i32 @function_8051918(i32* %arg1) local_unnamed_addr {
dec_label_pc_8051918:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %v0_805191a = load i32, i32* @ebx, align 4
  %v12_805191b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp3, i32* @edi, align 4
  %v2_8051922 = load i32, i32* %arg1, align 4
  %v12_8051922 = icmp eq i32 %v2_8051922, -1
  %v1_8051925 = icmp eq i1 %v12_8051922, false
  br i1 %v1_8051925, label %dec_label_pc_8051937, label %dec_label_pc_8051927

dec_label_pc_8051927:                             ; preds = %dec_label_pc_8051918
  %v1_8051927 = call i32 @function_8051afd(i32 %v0_805191a)
  %v1_805192c = inttoptr i32 %v1_8051927 to i32*
  store i32 9, i32* %v1_805192c, align 4
  br label %dec_label_pc_8051981

dec_label_pc_8051937:                             ; preds = %dec_label_pc_8051918
  %v1_8051937 = add i32 %tmp3, 24
  store i32 %v12_805191b, i32* @esi, align 4
  %v2_8051946 = call i32 @function_8053344(i32 %v12_805191b, i32 134558529)
  %v1_805194e = call i32 @function_8053341(i32 %v1_8051937)
  store i32 %v1_805194e, i32* @eax, align 4
  %v0_8051953 = load i32, i32* @edi, align 4
  %v1_8051953 = inttoptr i32 %v0_8051953 to i32*
  %v2_8051953 = load i32, i32* %v1_8051953, align 4
  store i32 %v2_8051953, i32* @ebx, align 4
  store i32 -1, i32* %v1_8051953, align 4
  %v2_8051960 = call i32 @function_8053344(i32 %v12_805191b, i32 1)
  %v0_8051966 = load i32, i32* @edi, align 4
  %v1_8051966 = add i32 %v0_8051966, 12
  %v2_8051966 = inttoptr i32 %v1_8051966 to i32*
  %v3_8051966 = load i32, i32* %v2_8051966, align 4
  %v1_8051969 = call i32 @function_8052d20(i32 %v3_8051966)
  %v0_805196e = load i32, i32* @edi, align 4
  %v1_8051971 = call i32 @function_8052d20(i32 %v0_805196e)
  %v0_8051976 = load i32, i32* @ebx, align 4
  %v1_8051979 = call i32 @function_80515f3(i32 %v0_8051976)
  br label %dec_label_pc_8051981

dec_label_pc_8051981:                             ; preds = %dec_label_pc_8051927, %dec_label_pc_8051937
  %v0_8051987 = phi i32 [ -1, %dec_label_pc_8051927 ], [ %v1_8051979, %dec_label_pc_8051937 ]
  ret i32 %v0_8051987

; uselistorder directives
  uselistorder label %dec_label_pc_8051981, { 1, 0 }
}

define i32 @function_8051988(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051988:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_8051999 = inttoptr i32 %arg1 to i8*
  %v3_8051999 = call i32 @function_8051704(i8* %v2_8051999, i32 67584)
  store i32 %v3_8051999, i32* %eax.global-to-local, align 4
  store i32 %v3_8051999, i32* @edi, align 4
  %v2_80519a3 = icmp slt i32 %v3_8051999, 0
  br i1 %v2_80519a3, label %dec_label_pc_8051a70, label %dec_label_pc_80519ab

dec_label_pc_80519ab:                             ; preds = %dec_label_pc_8051988
  %v0_80519ab = load i32, i32* @ebx, align 4
  %v2_80519ad = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_80519ad, i32* %eax.global-to-local, align 4
  store i32 %v3_8051999, i32* %stack_var_-124, align 4
  %v4_80519b3 = call i32 @function_805373e(i32 %v3_8051999, i32 %v2_80519ad, i32 %v0_80519ab, i32 %v0_80519ab)
  store i32 %v4_80519b3, i32* %eax.global-to-local, align 4
  %v2_80519bb = icmp slt i32 %v4_80519b3, 0
  br i1 %v2_80519bb, label %dec_label_pc_80519d1, label %dec_label_pc_80519bf

dec_label_pc_80519bf:                             ; preds = %dec_label_pc_80519ab
  %v0_80519c4 = load i32, i32* @edi, align 4
  store i32 %v0_80519c4, i32* %stack_var_-124, align 4
  %v3_80519c5 = call i32 @function_805155d(i32 %v0_80519c4, i32 2, i32 1)
  store i32 %v3_80519c5, i32* %eax.global-to-local, align 4
  %v2_80519cd = icmp slt i32 %v3_80519c5, 0
  %v1_80519cf = icmp eq i1 %v2_80519cd, false
  br i1 %v1_80519cf, label %dec_label_pc_80519e7, label %dec_label_pc_80519d1

dec_label_pc_80519d1:                             ; preds = %dec_label_pc_80519bf, %dec_label_pc_80519ab
  %v0_80519d1 = load i32, i32* %stack_var_-124, align 4
  %v1_80519d1 = call i32 @function_8051afd(i32 %v0_80519d1)
  store i32 %v1_80519d1, i32* %eax.global-to-local, align 4
  store i32 %v1_80519d1, i32* @ebx, align 4
  %v1_80519db = inttoptr i32 %v1_80519d1 to i32*
  %v2_80519db = load i32, i32* %v1_80519db, align 4
  %v0_80519dd = load i32, i32* @edi, align 4
  store i32 %v0_80519dd, i32* %stack_var_-124, align 4
  %v1_80519de = call i32 @function_80515f3(i32 %v0_80519dd)
  store i32 %v1_80519de, i32* %eax.global-to-local, align 4
  %v1_80519e3 = load i32, i32* @ebx, align 4
  %v2_80519e3 = inttoptr i32 %v1_80519e3 to i32*
  store i32 %v2_80519db, i32* %v2_80519e3, align 4
  br label %dec_label_pc_8051a5c

dec_label_pc_80519e7:                             ; preds = %dec_label_pc_80519bf
  store i32 48, i32* %stack_var_-124, align 4
  %v1_80519ec = call i32 @function_8051f5b(i32 48)
  store i32 %v1_80519ec, i32* %eax.global-to-local, align 4
  store i32 %v1_80519ec, i32* @ebx, align 4
  %v1_80519f6 = icmp eq i32 %v1_80519ec, 0
  br i1 %v1_80519f6, label %dec_label_pc_8051a48, label %dec_label_pc_80519fa

dec_label_pc_80519fa:                             ; preds = %dec_label_pc_80519e7
  %v0_80519fa = load i32, i32* @edi, align 4
  %v2_80519fa = inttoptr i32 %v1_80519ec to i32*
  store i32 %v0_80519fa, i32* %v2_80519fa, align 4
  %v1_80519fc = add i32 %v1_80519ec, 16
  %v2_80519fc = inttoptr i32 %v1_80519fc to i32*
  store i32 0, i32* %v2_80519fc, align 4
  %v1_8051a03 = add i32 %v1_80519ec, 8
  %v2_8051a03 = inttoptr i32 %v1_8051a03 to i32*
  store i32 0, i32* %v2_8051a03, align 4
  %v1_8051a0a = add i32 %v1_80519ec, 4
  %v2_8051a0a = inttoptr i32 %v1_8051a0a to i32*
  store i32 0, i32* %v2_8051a0a, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8051a15 = load i32, i32* @ebx, align 4
  %v2_8051a15 = add i32 %v1_8051a15, 20
  %v3_8051a15 = inttoptr i32 %v2_8051a15 to i32*
  store i32 %tmp, i32* %v3_8051a15, align 4
  %v0_8051a18 = load i32, i32* %eax.global-to-local, align 4
  %v6_8051a1d = icmp ugt i32 %v0_8051a18, 511
  br i1 %v6_8051a1d, label %dec_label_pc_8051a26, label %dec_label_pc_8051a1f

dec_label_pc_8051a1f:                             ; preds = %dec_label_pc_80519fa
  %v0_8051a1f = load i32, i32* @ebx, align 4
  %v1_8051a1f = add i32 %v0_8051a1f, 20
  %v2_8051a1f = inttoptr i32 %v1_8051a1f to i32*
  store i32 512, i32* %v2_8051a1f, align 4
  br label %dec_label_pc_8051a26

dec_label_pc_8051a26:                             ; preds = %dec_label_pc_80519fa, %dec_label_pc_8051a1f
  %v0_8051a28 = load i32, i32* @ebx, align 4
  %v1_8051a28 = add i32 %v0_8051a28, 20
  %v2_8051a28 = inttoptr i32 %v1_8051a28 to i32*
  %v3_8051a28 = load i32, i32* %v2_8051a28, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_8051a2d = call i32 @function_80526cf(i64 1, i32 %v3_8051a28)
  store i32 %v3_8051a2d, i32* %eax.global-to-local, align 4
  %v1_8051a35 = load i32, i32* @ebx, align 4
  %v2_8051a35 = add i32 %v1_8051a35, 12
  %v3_8051a35 = inttoptr i32 %v2_8051a35 to i32*
  store i32 %v3_8051a2d, i32* %v3_8051a35, align 4
  %v1_8051a38 = icmp eq i32 %v3_8051a2d, 0
  %v1_8051a3a = icmp eq i1 %v1_8051a38, false
  br i1 %v1_8051a3a, label %dec_label_pc_8051a60, label %dec_label_pc_8051a3c

dec_label_pc_8051a3c:                             ; preds = %dec_label_pc_8051a26
  %v0_8051a3f = load i32, i32* @ebx, align 4
  store i32 %v0_8051a3f, i32* %stack_var_-124, align 4
  %v1_8051a40 = call i32 @function_8052d20(i32 %v0_8051a3f)
  store i32 %v1_8051a40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051a48

dec_label_pc_8051a48:                             ; preds = %dec_label_pc_80519e7, %dec_label_pc_8051a3c
  %v0_8051a4b = load i32, i32* @edi, align 4
  store i32 %v0_8051a4b, i32* %stack_var_-124, align 4
  %v1_8051a4c = call i32 @function_80515f3(i32 %v0_8051a4b)
  store i32 %v1_8051a4c, i32* %eax.global-to-local, align 4
  %v1_8051a51 = call i32 @function_8051afd(i32 %v0_8051a4b)
  store i32 %v1_8051a51, i32* %eax.global-to-local, align 4
  %v1_8051a56 = inttoptr i32 %v1_8051a51 to i32*
  store i32 12, i32* %v1_8051a56, align 4
  br label %dec_label_pc_8051a5c

dec_label_pc_8051a5c:                             ; preds = %dec_label_pc_80519d1, %dec_label_pc_8051a48
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a60:                             ; preds = %dec_label_pc_8051a26
  %v0_8051a62 = load i32, i32* @ebx, align 4
  %v1_8051a62 = add i32 %v0_8051a62, 24
  store i32 %v1_8051a62, i32* %eax.global-to-local, align 4
  store i32 %v1_8051a62, i32* %stack_var_-124, align 4
  %v1_8051a68 = call i32 @function_8053341(i32 %v1_8051a62)
  store i32 %v1_8051a68, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051a6d

dec_label_pc_8051a6d:                             ; preds = %dec_label_pc_8051a5c, %dec_label_pc_8051a60
  br label %dec_label_pc_8051a70

dec_label_pc_8051a70:                             ; preds = %dec_label_pc_8051988, %dec_label_pc_8051a6d
  %v0_8051a73 = load i32, i32* @ebx, align 4
  store i32 %v0_8051a73, i32* %eax.global-to-local, align 4
  ret i32 %v0_8051a73

; uselistorder directives
  uselistorder i32 %v3_8051a2d, { 1, 0, 2 }
  uselistorder i32 %v1_80519ec, { 5, 2, 0, 1, 4, 3, 6 }
  uselistorder i32 %v1_80519d1, { 1, 0, 2 }
  uselistorder i32 %v3_8051999, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 512, { 2, 0, 1 }
  uselistorder i32 (i32)* @function_80515f3, { 14, 13, 12, 11, 10, 9, 8, 5, 7, 4, 6, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051a70, { 1, 0 }
  uselistorder label %dec_label_pc_8051a6d, { 1, 0 }
  uselistorder label %dec_label_pc_8051a5c, { 1, 0 }
  uselistorder label %dec_label_pc_8051a48, { 1, 0 }
  uselistorder label %dec_label_pc_8051a26, { 1, 0 }
}

define i32 @function_8051a79(i32* %arg1) local_unnamed_addr {
dec_label_pc_8051a79:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %tmp3, i32* @esi, align 4
  %v1_8051a82 = add i32 %tmp3, 24
  store i32 %v1_8051a82, i32* @ebx, align 4
  %v2_8051a8b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051a8b, i32* @eax, align 4
  %v2_8051a90 = call i32 @function_8053344(i32 %v2_8051a8b, i32 134558529)
  %v0_8051a95 = load i32, i32* @ebx, align 4
  %v1_8051a98 = call i32 @function_8053341(i32 %v0_8051a95)
  br label %dec_label_pc_8051aa0

dec_label_pc_8051aa0:                             ; preds = %dec_label_pc_8051acb, %dec_label_pc_8051a79
  %v0_8051aa0 = load i32, i32* @esi, align 4
  %v1_8051aa0 = add i32 %v0_8051aa0, 8
  %v2_8051aa0 = inttoptr i32 %v1_8051aa0 to i32*
  %v3_8051aa0 = load i32, i32* %v2_8051aa0, align 4
  %v2_8051aa3 = add i32 %v0_8051aa0, 4
  %v3_8051aa3 = inttoptr i32 %v2_8051aa3 to i32*
  %v4_8051aa3 = load i32, i32* %v3_8051aa3, align 4
  %v6_8051aa6 = icmp ugt i32 %v3_8051aa0, %v4_8051aa3
  br i1 %v6_8051aa6, label %dec_label_pc_8051acb, label %dec_label_pc_8051aa8

dec_label_pc_8051aa8:                             ; preds = %dec_label_pc_8051aa0
  %v0_8051aa8 = load i32, i32* @edx, align 4
  %v1_8051aa9 = add i32 %v0_8051aa0, 20
  %v2_8051aa9 = inttoptr i32 %v1_8051aa9 to i32*
  %v3_8051aa9 = load i32, i32* %v2_8051aa9, align 4
  %v1_8051aac = add i32 %v0_8051aa0, 12
  %v2_8051aac = inttoptr i32 %v1_8051aac to i32*
  %v3_8051aac = load i32, i32* %v2_8051aac, align 4
  %v1_8051aaf = inttoptr i32 %v0_8051aa0 to i32*
  %v2_8051aaf = load i32, i32* %v1_8051aaf, align 4
  %v4_8051ab1 = call i32 @function_8053786(i32 %v2_8051aaf, i32 %v3_8051aac, i32 %v3_8051aa9, i32 %v0_8051aa8)
  %tmp13 = icmp slt i32 %v4_8051ab1, 1
  %tmp14 = icmp eq i1 %tmp13, false
  br i1 %tmp14, label %dec_label_pc_8051ac1, label %dec_label_pc_8051abd

dec_label_pc_8051abd:                             ; preds = %dec_label_pc_8051aa8
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8051ae7

dec_label_pc_8051ac1:                             ; preds = %dec_label_pc_8051aa8
  %v1_8051ac1 = load i32, i32* @esi, align 4
  %v2_8051ac1 = add i32 %v1_8051ac1, 8
  %v3_8051ac1 = inttoptr i32 %v2_8051ac1 to i32*
  store i32 %v4_8051ab1, i32* %v3_8051ac1, align 4
  %v0_8051ac4 = load i32, i32* @esi, align 4
  %v1_8051ac4 = add i32 %v0_8051ac4, 4
  %v2_8051ac4 = inttoptr i32 %v1_8051ac4 to i32*
  store i32 0, i32* %v2_8051ac4, align 4
  %v0_8051acb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051acb

dec_label_pc_8051acb:                             ; preds = %dec_label_pc_8051aa0, %dec_label_pc_8051ac1
  %v1_8051ad9 = phi i32 [ %v0_8051aa0, %dec_label_pc_8051aa0 ], [ %v0_8051acb.pre, %dec_label_pc_8051ac1 ]
  %v1_8051acb = add i32 %v1_8051ad9, 4
  %v2_8051acb = inttoptr i32 %v1_8051acb to i32*
  %v3_8051acb = load i32, i32* %v2_8051acb, align 4
  %v2_8051ad0 = add i32 %v1_8051ad9, 12
  %v3_8051ad0 = inttoptr i32 %v2_8051ad0 to i32*
  %v4_8051ad0 = load i32, i32* %v3_8051ad0, align 4
  %v5_8051ad0 = add i32 %v4_8051ad0, %v3_8051acb
  store i32 %v5_8051ad0, i32* @ebx, align 4
  %v1_8051ad3 = add i32 %v5_8051ad0, 8
  %v2_8051ad3 = inttoptr i32 %v1_8051ad3 to i16*
  %v3_8051ad3 = load i16, i16* %v2_8051ad3, align 2
  %v4_8051ad3 = zext i16 %v3_8051ad3 to i32
  store i32 %v4_8051ad3, i32* @edx, align 4
  %v2_8051ad7 = add i32 %v4_8051ad3, %v3_8051acb
  store i32 %v2_8051ad7, i32* %v2_8051acb, align 4
  %v0_8051adc = load i32, i32* @ebx, align 4
  %v1_8051adc = add i32 %v0_8051adc, 4
  %v2_8051adc = inttoptr i32 %v1_8051adc to i32*
  %v3_8051adc = load i32, i32* %v2_8051adc, align 4
  %v1_8051adf = load i32, i32* @esi, align 4
  %v2_8051adf = add i32 %v1_8051adf, 16
  %v3_8051adf = inttoptr i32 %v2_8051adf to i32*
  store i32 %v3_8051adc, i32* %v3_8051adf, align 4
  %v0_8051ae2 = load i32, i32* @ebx, align 4
  %v1_8051ae2 = inttoptr i32 %v0_8051ae2 to i32*
  %v2_8051ae2 = load i32, i32* %v1_8051ae2, align 4
  %v3_8051ae2 = icmp eq i32 %v2_8051ae2, 0
  br i1 %v3_8051ae2, label %dec_label_pc_8051aa0, label %dec_label_pc_8051ae7.loopexit

dec_label_pc_8051ae7.loopexit:                    ; preds = %dec_label_pc_8051acb
  br label %dec_label_pc_8051ae7

dec_label_pc_8051ae7:                             ; preds = %dec_label_pc_8051ae7.loopexit, %dec_label_pc_8051abd
  store i32 %v2_8051a8b, i32* @eax, align 4
  %v2_8051af0 = call i32 @function_8053344(i32 %v2_8051a8b, i32 1)
  %v0_8051af5 = load i32, i32* @ebx, align 4
  ret i32 %v0_8051af5

; uselistorder directives
  uselistorder i32 %v1_8051ad9, { 1, 0 }
  uselistorder i32 %v0_8051aa0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder label %dec_label_pc_8051acb, { 1, 0 }
}

define i32 @function_8051afd(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051afd:
  ret i32 ptrtoint (i32* @global_var_8055154.43 to i32)
}

define i32 @function_8051b03() local_unnamed_addr {
dec_label_pc_8051b03:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_8051b0b = bitcast i32* %stack_var_-16 to %tms*
  %v2_8051b0b = call i32 @function_8053b5b(%tms* %v1_8051b0b)
  %v4_8051b10 = trunc i64 %tmp to i32
  %v4_8051b14 = load i32, i32* %stack_var_-16, align 4
  %v5_8051b14 = add i32 %v4_8051b14, %v4_8051b10
  %v3_8051b1b = mul i32 %v5_8051b14, 10000
  %v1_8051b21 = and i32 %v3_8051b1b, 2147483632
  ret i32 %v1_8051b21

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8051b27(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051b27:
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051b28 = load i32, i32* @esi, align 4
  store i32 %v0_8051b28, i32* %stack_var_-8, align 4
  %v4_8051b29 = ptrtoint i8* %arg1 to i32
  %v9_8051b35 = icmp ugt i8* %tmp3, %arg1
  %v1_8051b37 = icmp eq i1 %v9_8051b35, false
  br i1 %v1_8051b37, label %dec_label_pc_8051b3f, label %dec_label_pc_8051b39

dec_label_pc_8051b39:                             ; preds = %dec_label_pc_8051b27
  %v7_8051b3b = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %arg3)
  br label %dec_label_pc_8051b4b

dec_label_pc_8051b3f:                             ; preds = %dec_label_pc_8051b27
  %v3_8051b3f = add i32 %arg2, -1
  %v4_8051b3f = add i32 %v3_8051b3f, %arg3
  %v5_8051b3f = inttoptr i32 %v4_8051b3f to i8*
  %v3_8051b43 = add i32 %v4_8051b29, -1
  %v4_8051b43 = add i32 %v3_8051b43, %arg3
  %v5_8051b43 = inttoptr i32 %v4_8051b43 to i8*
  %v7_8051b48 = call i8* @_memcpy(i8* %v5_8051b43, i8* %v5_8051b3f, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8051b4b

dec_label_pc_8051b4b:                             ; preds = %dec_label_pc_8051b39, %dec_label_pc_8051b3f
  %v2_8051b4b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b4b, i32* @esi, align 4
  ret i32 %v4_8051b29

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051b4b, { 1, 0 }
}

define i32 @function_8051b4e(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051b4e:
  %v0_8051b4e = load i32, i32* @edi, align 4
  %v4_8051b57 = ptrtoint i8* %arg1 to i32
  %v5_8051b5b = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_8051b4e, i32* @edi, align 4
  ret i32 %v4_8051b57

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_8051b63(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051b63:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051b64 = load i32, i32* @esi, align 4
  store i32 %v0_8051b64, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8051b6c = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051b6c, i32* %edi.global-to-local, align 4
  %v4_8051b70.pre = load i32, i32* @eax, align 4
  %v8_8051b70.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8051b70

dec_label_pc_8051b70:                             ; preds = %dec_label_pc_8051b70.dec_label_pc_8051b70_crit_edge, %dec_label_pc_8051b63
  %v2_8051b71 = phi i32 [ %v7_8051b71, %dec_label_pc_8051b70.dec_label_pc_8051b70_crit_edge ], [ %v4_8051b6c, %dec_label_pc_8051b63 ]
  %v8_8051b70 = phi i1 [ %v5_8051b71, %dec_label_pc_8051b70.dec_label_pc_8051b70_crit_edge ], [ %v8_8051b70.pre, %dec_label_pc_8051b63 ]
  %v4_8051b70 = phi i32 [ %v0_8051b72, %dec_label_pc_8051b70.dec_label_pc_8051b70_crit_edge ], [ %v4_8051b70.pre, %dec_label_pc_8051b63 ]
  %v7_8051b70 = phi i32 [ %v0_8051b70.pre, %dec_label_pc_8051b70.dec_label_pc_8051b70_crit_edge ], [ %arg2, %dec_label_pc_8051b63 ]
  %v1_8051b70 = inttoptr i32 %v7_8051b70 to i8*
  %v2_8051b70 = load i8, i8* %v1_8051b70, align 1
  %v3_8051b70 = zext i8 %v2_8051b70 to i32
  %v5_8051b70 = and i32 %v4_8051b70, -256
  %v6_8051b70 = or i32 %v3_8051b70, %v5_8051b70
  store i32 %v6_8051b70, i32* %eax.global-to-local, align 4
  %v9_8051b70 = select i1 %v8_8051b70, i32 -1, i32 1
  %v10_8051b70 = add i32 %v7_8051b70, %v9_8051b70
  store i32 %v10_8051b70, i32* %esi.global-to-local, align 4
  %v3_8051b71 = inttoptr i32 %v2_8051b71 to i8*
  store i8 %v2_8051b70, i8* %v3_8051b71, align 1
  %v4_8051b71 = load i32, i32* %edi.global-to-local, align 4
  %v5_8051b71 = load i1, i1* @df, align 1
  %v6_8051b71 = select i1 %v5_8051b71, i32 -1, i32 1
  %v7_8051b71 = add i32 %v6_8051b71, %v4_8051b71
  store i32 %v7_8051b71, i32* %edi.global-to-local, align 4
  %v0_8051b72 = load i32, i32* %eax.global-to-local, align 4
  %v3_8051b72 = trunc i32 %v0_8051b72 to i8
  %v4_8051b72 = icmp eq i8 %v3_8051b72, 0
  %v1_8051b74 = icmp eq i1 %v4_8051b72, false
  br i1 %v1_8051b74, label %dec_label_pc_8051b70.dec_label_pc_8051b70_crit_edge, label %dec_label_pc_8051b76

dec_label_pc_8051b70.dec_label_pc_8051b70_crit_edge: ; preds = %dec_label_pc_8051b70
  %v0_8051b70.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051b70

dec_label_pc_8051b76:                             ; preds = %dec_label_pc_8051b70
  store i32 %v4_8051b6c, i32* %eax.global-to-local, align 4
  %v2_8051b7b = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b7b, i32* %esi.global-to-local, align 4
  ret i32 %v4_8051b6c

; uselistorder directives
  uselistorder i32 %v0_8051b72, { 1, 0 }
  uselistorder i32 %v7_8051b71, { 1, 0 }
  uselistorder i1 %v5_8051b71, { 1, 0 }
  uselistorder i32 %v4_8051b6c, { 1, 2, 0, 3 }
}

define i32 @function_8051b7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051b7e:
  %stack_var_-4 = alloca i32, align 4
  %v2_8051b81 = ptrtoint i32* %stack_var_-4 to i32
  %v2_8051b8a = inttoptr i32 %arg1 to i8*
  %v3_8051b8a = call i32 @function_8053c2d(i8* %v2_8051b8a, i32 %v2_8051b81)
  %v1_8051b95 = icmp eq i32 %v3_8051b8a, 0
  br i1 %v1_8051b95, label %dec_label_pc_8051b9d, label %dec_label_pc_8051b99

dec_label_pc_8051b99:                             ; preds = %dec_label_pc_8051b7e
  %v3_8051b99 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8051b9d

dec_label_pc_8051b9d:                             ; preds = %dec_label_pc_8051b7e, %dec_label_pc_8051b99
  %v0_8051b9d = phi i32 [ -1, %dec_label_pc_8051b7e ], [ %v3_8051b99, %dec_label_pc_8051b99 ]
  ret i32 %v0_8051b9d

; uselistorder directives
  uselistorder label %dec_label_pc_8051b9d, { 1, 0 }
}

define i32 @function_8051ba3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051ba3:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051bbe = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051bc5 = call i32 @function_8053677(i32 5, i32 %v2_8051bbe)
  ret i32 %v2_8051bc5

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8051bce(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051bce:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051be9 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051bf0 = call i32 @function_8053677(i32 2, i32 %v2_8051be9)
  ret i32 %v2_8051bf0

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8051bf9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051bf9:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051c14 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051c1b = call i32 @function_8053677(i32 3, i32 %v2_8051c14)
  ret i32 %v2_8051c1b

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8051c24(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8051c24:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051c3f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051c46 = call i32 @function_8053677(i32 6, i32 %v2_8051c3f)
  ret i32 %v2_8051c46

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8051c4f() local_unnamed_addr {
dec_label_pc_8051c4f:
  %stack_var_-20 = alloca i32, align 4
  %v2_8051c7a = ptrtoint i32* %stack_var_-20 to i32
  %v2_8051c81 = call i32 @function_8053677(i32 15, i32 %v2_8051c7a)
  ret i32 %v2_8051c81
}

define i32 @function_8051c8a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051c8a:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_8051c9d = ptrtoint i32* %stack_var_-8 to i32
  %v2_8051ca4 = call i32 @function_8053677(i32 4, i32 %v2_8051c9d)
  ret i32 %v2_8051ca4

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_8051cad() local_unnamed_addr {
dec_label_pc_8051cad:
  %stack_var_-16 = alloca i32, align 4
  %v2_8051cd0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8051cd7 = call i32 @function_8053677(i32 10, i32 %v2_8051cd0)
  ret i32 %v2_8051cd7
}

define i32 @function_8051ce0() local_unnamed_addr {
dec_label_pc_8051ce0:
  %stack_var_-24 = alloca i32, align 4
  %v2_8051d13 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8051d1a = call i32 @function_8053677(i32 12, i32 %v2_8051d13)
  ret i32 %v2_8051d1a
}

define i32 @function_8051d23() local_unnamed_addr {
dec_label_pc_8051d23:
  %stack_var_-16 = alloca i32, align 4
  %v2_8051d46 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8051d4d = call i32 @function_8053677(i32 9, i32 %v2_8051d46)
  ret i32 %v2_8051d4d
}

define i32 @function_8051d56() local_unnamed_addr {
dec_label_pc_8051d56:
  %stack_var_-24 = alloca i32, align 4
  %v2_8051d89 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8051d90 = call i32 @function_8053677(i32 11, i32 %v2_8051d89)
  ret i32 %v2_8051d90
}

define i32 @function_8051d99() local_unnamed_addr {
dec_label_pc_8051d99:
  %stack_var_-20 = alloca i32, align 4
  %v2_8051dc4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8051dcb = call i32 @function_8053677(i32 14, i32 %v2_8051dc4)
  ret i32 %v2_8051dcb
}

define i32 @function_8051dd4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051dd4:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8051def = ptrtoint i32* %stack_var_-12 to i32
  %v2_8051df6 = call i32 @function_8053677(i32 1, i32 %v2_8051def)
  ret i32 %v2_8051df6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8053677, { 7, 6, 9, 5, 8, 4, 11, 3, 10, 2, 1, 0 }
}

define i32 @function_8051dff(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051dff:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8051e17, label %dec_label_pc_8051e0a

dec_label_pc_8051e0a:                             ; preds = %dec_label_pc_8051dff
  %v1_8051e0a = add i32 %arg1, -64
  %v3_8051e0a = sub i32 63, %arg1
  %v4_8051e0a = and i32 %v3_8051e0a, %arg1
  %v5_8051e0a = icmp slt i32 %v4_8051e0a, 0
  %v6_8051e0a = icmp eq i32 %v1_8051e0a, 0
  %v7_8051e0a = icmp slt i32 %v1_8051e0a, 0
  %v3_8051e0d = icmp eq i1 %v7_8051e0a, %v5_8051e0a
  %v4_8051e0d = icmp eq i1 %v6_8051e0a, false
  %v5_8051e0d = and i1 %v4_8051e0d, %v3_8051e0d
  br i1 %v5_8051e0d, label %dec_label_pc_8051e17, label %dec_label_pc_8051e0f

dec_label_pc_8051e0f:                             ; preds = %dec_label_pc_8051e0a
  %v4_8051e12 = call i32 @function_8051f15(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8051e17

dec_label_pc_8051e17:                             ; preds = %dec_label_pc_8051e0a, %dec_label_pc_8051dff, %dec_label_pc_8051e0f
  %v1_8051e17 = call i32 @function_8051afd(i32 ptrtoint (i32* @0 to i32))
  %v1_8051e1c = inttoptr i32 %v1_8051e17 to i32*
  store i32 22, i32* %v1_8051e1c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8051e0a, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051e17, { 2, 0, 1 }
}

define i32 @function_8051e29(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051e29:
  %v3_8051e37 = inttoptr i32 %arg1 to i8*
  %v4_8051e37 = call i32 @function_8051b4e(i8* %v3_8051e37, i32 0, i32 128)
  ret i32 0
}

define i32 @function_8051e42(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8051e42:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8051e42 = load i32, i32* @ebx, align 4
  %v15_8051e43 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8051e57 = icmp eq i32 %arg2, -1
  br i1 %v10_8051e57, label %dec_label_pc_8051e65, label %dec_label_pc_8051e5c

dec_label_pc_8051e5c:                             ; preds = %dec_label_pc_8051e42
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_8051e65, label %dec_label_pc_8051e60

dec_label_pc_8051e60:                             ; preds = %dec_label_pc_8051e5c
  %v7_8051e63 = icmp sgt i32 %arg1, 64
  br i1 %v7_8051e63, label %dec_label_pc_8051e65, label %dec_label_pc_8051e80.lr.ph

dec_label_pc_8051e65:                             ; preds = %dec_label_pc_8051e60, %dec_label_pc_8051e5c, %dec_label_pc_8051e42
  %v1_8051e65 = call i32 @function_8051afd(i32 %v0_8051e42)
  store i32 %v1_8051e65, i32* %eax.global-to-local, align 4
  %v1_8051e6a = inttoptr i32 %v1_8051e65 to i32*
  store i32 22, i32* %v1_8051e6a, align 4
  br label %dec_label_pc_8051ee6

dec_label_pc_8051e80.lr.ph:                       ; preds = %dec_label_pc_8051e60
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8051e8027 = add i32 %v15_8051e43, 284
  %v5_8051e8028 = inttoptr i32 %v4_8051e8027 to i32*
  store i32 0, i32* %v5_8051e8028, align 4
  %v0_8051e8b29 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e8b30 = add i32 %v0_8051e8b29, -1
  %v9_8051e8b31 = icmp slt i32 %v1_8051e8b30, 0
  store i32 %v1_8051e8b30, i32* %eax.global-to-local, align 4
  %v1_8051e8c32 = icmp eq i1 %v9_8051e8b31, false
  br i1 %v1_8051e8c32, label %dec_label_pc_8051e80.dec_label_pc_8051e80_crit_edge, label %dec_label_pc_8051e8e

dec_label_pc_8051e80.dec_label_pc_8051e80_crit_edge: ; preds = %dec_label_pc_8051e80.lr.ph, %dec_label_pc_8051e80.dec_label_pc_8051e80_crit_edge
  %v1_8051e8b33 = phi i32 [ %v1_8051e8b, %dec_label_pc_8051e80.dec_label_pc_8051e80_crit_edge ], [ %v1_8051e8b30, %dec_label_pc_8051e80.lr.ph ]
  %v0_8051e80.pre = load i32, i32* @esp, align 4
  %v2_8051e80 = mul i32 %v1_8051e8b33, 4
  %v3_8051e80 = add i32 %v0_8051e80.pre, 160
  %v4_8051e80 = add i32 %v3_8051e80, %v2_8051e80
  %v5_8051e80 = inttoptr i32 %v4_8051e80 to i32*
  store i32 0, i32* %v5_8051e80, align 4
  %v0_8051e8b = load i32, i32* %eax.global-to-local, align 4
  %v1_8051e8b = add i32 %v0_8051e8b, -1
  %v9_8051e8b = icmp slt i32 %v1_8051e8b, 0
  store i32 %v1_8051e8b, i32* %eax.global-to-local, align 4
  %v1_8051e8c = icmp eq i1 %v9_8051e8b, false
  br i1 %v1_8051e8c, label %dec_label_pc_8051e80.dec_label_pc_8051e80_crit_edge, label %dec_label_pc_8051e8e

dec_label_pc_8051e8e:                             ; preds = %dec_label_pc_8051e80.dec_label_pc_8051e80_crit_edge, %dec_label_pc_8051e80.lr.ph
  %v0_8051e8e = load i32, i32* @edx, align 4
  %v2_8051e91 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8051e91, i32* %eax.global-to-local, align 4
  %v4_8051e99 = call i32 @function_8051f15(i32 %v2_8051e91, i32 %arg1, i32 %v0_8051e8e, i32 %v0_8051e8e)
  store i32 %v4_8051e99, i32* %eax.global-to-local, align 4
  %v2_8051ea1 = icmp slt i32 %v4_8051e99, 0
  br i1 %v2_8051ea1, label %dec_label_pc_8051ee6, label %dec_label_pc_8051ea5

dec_label_pc_8051ea5:                             ; preds = %dec_label_pc_8051e8e
  %v4_8051ead = call i32 @function_8051ef1(i32 ptrtoint (i32* @global_var_80553a0.44 to i32), i32 %arg1, i32 %v4_8051e99, i32 %v4_8051e99)
  %v2_8051ec6 = ptrtoint i32* %stack_var_-284 to i32
  %v2_8051ecb = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8051ecb, i32* %eax.global-to-local, align 4
  %v4_8051ed4 = call i32 @function_8053583(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8051ec6)
  store i32 %v4_8051ed4, i32* %eax.global-to-local, align 4
  %v2_8051edc = icmp slt i32 %v4_8051ed4, 0
  br i1 %v2_8051edc, label %dec_label_pc_8051ee6, label %dec_label_pc_8051ee0

dec_label_pc_8051ee0:                             ; preds = %dec_label_pc_8051ea5
  %v3_8051ee0 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8051ee9

dec_label_pc_8051ee6:                             ; preds = %dec_label_pc_8051ea5, %dec_label_pc_8051e8e, %dec_label_pc_8051e65
  br label %dec_label_pc_8051ee9

dec_label_pc_8051ee9:                             ; preds = %dec_label_pc_8051ee0, %dec_label_pc_8051ee6
  %storemerge = phi i32 [ -1, %dec_label_pc_8051ee6 ], [ %v3_8051ee0, %dec_label_pc_8051ee0 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8051e8b, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 11, 0, 1, 2, 3, 4, 7, 8, 9, 10, 5, 6 }
  uselistorder i32 284, { 0, 4, 5, 6, 7, 8, 9, 1, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 4, 2, 0, 3, 1, 5 }
  uselistorder label %dec_label_pc_8051ee9, { 1, 0 }
  uselistorder label %dec_label_pc_8051e80.dec_label_pc_8051e80_crit_edge, { 1, 0 }
}

define i32 @function_8051ef1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051ef1:
  %v1_8051eff = add i32 %arg2, -1
  %v1_8051f02 = urem i32 %v1_8051eff, 32
  %v2_8051f02 = icmp eq i32 %v1_8051f02, 0
  %v2_8051f05 = udiv i32 %v1_8051eff, 32
  br i1 %v2_8051f02, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8051ef1
  %v5_8051f08 = shl i32 1, %v1_8051f02
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8051ef1, %bb
  %v6_8051f0a = phi i32 [ 1, %dec_label_pc_8051ef1 ], [ %v5_8051f08, %bb ]
  %v2_8051f0a = mul nuw nsw i32 %v2_8051f05, 4
  %v3_8051f0a = add i32 %v2_8051f0a, %arg1
  %v4_8051f0a = inttoptr i32 %v3_8051f0a to i32*
  %v5_8051f0a = load i32, i32* %v4_8051f0a, align 4
  %v7_8051f0a = and i32 %v5_8051f0a, %v6_8051f0a
  %v8_8051f0a = icmp eq i32 %v7_8051f0a, 0
  %v1_8051f0e = icmp eq i1 %v8_8051f0a, false
  %v2_8051f0e = zext i1 %v1_8051f0e to i32
  ret i32 %v2_8051f0e

; uselistorder directives
  uselistorder i32 %v1_8051f02, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8051f15(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8051f15:
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f15 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f15, i32* %stack_var_-4, align 4
  %v1_8051f23 = add i32 %arg2, -1
  %v1_8051f26 = urem i32 %v1_8051f23, 32
  %v2_8051f26 = icmp eq i32 %v1_8051f26, 0
  store i32 %v1_8051f26, i32* @ecx, align 4
  %v2_8051f29 = udiv i32 %v1_8051f23, 32
  store i32 %v2_8051f29, i32* @edx, align 4
  br i1 %v2_8051f26, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_8051f15
  %v5_8051f2c = shl i32 1, %v1_8051f26
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_8051f15, %bb
  %v6_8051f2e = phi i32 [ 1, %dec_label_pc_8051f15 ], [ %v5_8051f2c, %bb ]
  %v2_8051f2e = mul nuw nsw i32 %v2_8051f29, 4
  %v3_8051f2e = add i32 %v2_8051f2e, %arg1
  %v4_8051f2e = inttoptr i32 %v3_8051f2e to i32*
  %v5_8051f2e = load i32, i32* %v4_8051f2e, align 4
  %v7_8051f2e = or i32 %v5_8051f2e, %v6_8051f2e
  store i32 %v7_8051f2e, i32* %v4_8051f2e, align 4
  %v2_8051f33 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f33, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8051f29, { 1, 0 }
  uselistorder i32 %v1_8051f26, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_8051f35() local_unnamed_addr {
dec_label_pc_8051f35:
  %v0_8051f35 = load i32, i32* @eax, align 4
  %v6_8051f48 = icmp ugt i32 %v0_8051f35, 16777215
  br i1 %v6_8051f48, label %dec_label_pc_8051f59, label %dec_label_pc_8051f4a

dec_label_pc_8051f4a:                             ; preds = %dec_label_pc_8051f35
  %tmp = icmp ult i32 %v0_8051f35, 256
  %v2_8051f38 = udiv i32 %v0_8051f35, 256
  %v2_8051f4a = call i32 @llvm.ctlz.i32(i32 %v2_8051f38, i1 true)
  %v3_8051f4a = xor i32 %v2_8051f4a, 31
  %v5_8051f4a = select i1 %tmp, i32 95, i32 %v3_8051f4a
  %v1_8051f4d = add nuw nsw i32 %v5_8051f4a, 6
  %v2_8051f50 = urem i32 %v1_8051f4d, 32
  %v4_8051f50 = icmp eq i32 %v2_8051f50, 0
  br i1 %v4_8051f50, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8051f4a
  %v5_8051f50 = lshr i32 %v0_8051f35, %v2_8051f50
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8051f4a, %bb
  %v0_8051f52 = phi i32 [ %v0_8051f35, %dec_label_pc_8051f4a ], [ %v5_8051f50, %bb ]
  %v1_8051f52 = urem i32 %v0_8051f52, 4
  %v2_8051f55 = mul nuw nsw i32 %v5_8051f4a, 4
  %v3_8051f55 = or i32 %v1_8051f52, 32
  %v4_8051f55 = add nuw nsw i32 %v3_8051f55, %v2_8051f55
  br label %dec_label_pc_8051f59

dec_label_pc_8051f59:                             ; preds = %dec_label_pc_8051f35, %bb4
  %v0_8051f5a = phi i32 [ 95, %dec_label_pc_8051f35 ], [ %v4_8051f55, %bb4 ]
  ret i32 %v0_8051f5a

; uselistorder directives
  uselistorder i32 %v2_8051f50, { 1, 0 }
  uselistorder i32 %v0_8051f35, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051f59, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8051f5b(i32 %arg1) local_unnamed_addr {
dec_label_pc_8051f5b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051f5b = load i32, i32* @ebp, align 4
  %v0_8051f5c = load i32, i32* @edi, align 4
  %v0_8051f5d = load i32, i32* @esi, align 4
  %v0_8051f5e = load i32, i32* @ebx, align 4
  store i32 %v0_8051f5e, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8051f70 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051f70, i32* @eax, align 4
  store i32 %v2_8051f70, i32* %stack_var_-92, align 4
  %v2_8051f75 = call i32 @function_8053344(i32 %v2_8051f70, i32 134558529)
  store i32 %v2_8051f75, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805503c.45 to i32), i32* %stack_var_-92, align 4
  %v1_8051f81 = call i32 @function_8053341(i32 ptrtoint (i32* @global_var_805503c.45 to i32))
  store i32 %v1_8051f81, i32* %eax.global-to-local, align 4
  %v0_8051f89 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8051f89, -32
  br i1 %tmp124, label %dec_label_pc_8051fa0, label %dec_label_pc_8051f8e

dec_label_pc_8051f8e:                             ; preds = %dec_label_pc_8051f5b
  %v0_8051f8e = load i32, i32* %stack_var_-92, align 4
  %v1_8051f8e = call i32 @function_8051afd(i32 %v0_8051f8e)
  store i32 %v1_8051f8e, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8051f95 = inttoptr i32 %v1_8051f8e to i32*
  store i32 12, i32* %v1_8051f95, align 4
  br label %dec_label_pc_80526c5

dec_label_pc_8051fa0:                             ; preds = %dec_label_pc_8051f5b
  %v1_8051fa0 = add i32 %v0_8051f89, 11
  %tmp125 = icmp ult i32 %v1_8051fa0, 16
  br i1 %tmp125, label %dec_label_pc_8051fb7, label %dec_label_pc_8051fb0

dec_label_pc_8051fb0:                             ; preds = %dec_label_pc_8051fa0
  %v1_8051fb0 = and i32 %v1_8051fa0, -8
  br label %dec_label_pc_8051fb7

dec_label_pc_8051fb7:                             ; preds = %dec_label_pc_8051fa0, %dec_label_pc_8051fb0
  %storemerge135 = phi i32 [ %v1_8051fb0, %dec_label_pc_8051fb0 ], [ %v1_8051fa0, %dec_label_pc_8051fa0 ]
  %v1_805234f = phi i32 [ %v1_8051fb0, %dec_label_pc_8051fb0 ], [ 16, %dec_label_pc_8051fa0 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_8051fb7 = load i8, i8* @global_var_8055420.46, align 1
  %v1_8051fb7 = sext i8 %v0_8051fb7 to i32
  store i32 %v1_8051fb7, i32* @ebx, align 4
  %v3_8051fbd = urem i8 %v0_8051fb7, 2
  %v4_8051fbd = icmp eq i8 %v3_8051fbd, 0
  %v1_8051fc0 = icmp eq i1 %v4_8051fbd, false
  br i1 %v1_8051fc0, label %dec_label_pc_8051fdf, label %dec_label_pc_8051fc2

dec_label_pc_8051fc2:                             ; preds = %dec_label_pc_8051fb7
  %v2_8051fc2 = icmp eq i8 %v0_8051fb7, 0
  %v1_8051fc4 = icmp eq i1 %v2_8051fc2, false
  br i1 %v1_8051fc4, label %dec_label_pc_80522ba, label %dec_label_pc_8051fca

dec_label_pc_8051fca:                             ; preds = %dec_label_pc_8051fc2
  store i32 ptrtoint (i8* @global_var_8055420.46 to i32), i32* %stack_var_-92, align 4
  %v2_8051fd2 = call i32 @function_8052b78(i32* bitcast (i8* @global_var_8055420.46 to i32*))
  store i32 %v2_8051fd2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80522ba

dec_label_pc_8051fdf:                             ; preds = %dec_label_pc_8051fb7
  %v11_8051fdf = trunc i32 %v1_805234f to i8
  %v8_8051fe3 = icmp ugt i8 %v11_8051fdf, %v0_8051fb7
  br i1 %v8_8051fe3, label %dec_label_pc_8052000, label %dec_label_pc_8051fe5

dec_label_pc_8051fe5:                             ; preds = %dec_label_pc_8051fdf
  %v2_8051fe9 = udiv i32 %v1_805234f, 2
  store i32 %v2_8051fe9, i32* %eax.global-to-local, align 4
  %v1_8051feb = add i32 %v2_8051fe9, ptrtoint (i8* @global_var_8055420.46 to i32)
  store i32 %v1_8051feb, i32* %ecx.global-to-local, align 4
  %v1_8051ff1 = add i32 %v2_8051fe9, add (i32 ptrtoint (i8* @global_var_8055420.46 to i32), i32 -4)
  %v2_8051ff1 = inttoptr i32 %v1_8051ff1 to i32*
  %v3_8051ff1 = load i32, i32* %v2_8051ff1, align 4
  store i32 %v3_8051ff1, i32* %edx.global-to-local, align 4
  %v1_8051ff4 = icmp eq i32 %v3_8051ff1, 0
  br i1 %v1_8051ff4, label %dec_label_pc_8052000, label %dec_label_pc_8051ff8

dec_label_pc_8051ff8:                             ; preds = %dec_label_pc_8051fe5
  %v1_8051ff8 = add i32 %v3_8051ff1, 8
  %v2_8051ff8 = inttoptr i32 %v1_8051ff8 to i32*
  %v3_8051ff8 = load i32, i32* %v2_8051ff8, align 4
  store i32 %v3_8051ff8, i32* %eax.global-to-local, align 4
  store i32 %v3_8051ff8, i32* %v2_8051ff1, align 4
  br label %dec_label_pc_8052039

dec_label_pc_8052000:                             ; preds = %dec_label_pc_8051fe5, %dec_label_pc_8051fdf
  %v8_8052000 = icmp ult i32 %v1_805234f, 255
  %v6_8052008 = icmp ugt i32 %v1_805234f, 255
  store i32 %v1_805234f, i32* @eax, align 4
  br i1 %v6_8052008, label %dec_label_pc_8052041, label %dec_label_pc_805200a

dec_label_pc_805200a:                             ; preds = %dec_label_pc_8052000
  %v2_805200e = udiv i32 %v1_805234f, 8
  store i32 %v2_805200e, i32* %eax.global-to-local, align 4
  %v1_8052015 = mul nuw i32 %v2_805200e, 8
  %v2_8052015 = add i32 %v1_8052015, ptrtoint (i32* @global_var_805544c.47 to i32)
  store i32 %v2_8052015, i32* %ecx.global-to-local, align 4
  %v1_805201c = add i32 %v1_8052015, add (i32 ptrtoint (i32* @global_var_805544c.47 to i32), i32 12)
  %v2_805201c = inttoptr i32 %v1_805201c to i32*
  %v3_805201c = load i32, i32* %v2_805201c, align 4
  store i32 %v3_805201c, i32* %edx.global-to-local, align 4
  %v12_805201f = icmp eq i32 %v3_805201c, %v2_8052015
  br i1 %v12_805201f, label %dec_label_pc_805213d.preheader, label %dec_label_pc_8052027

dec_label_pc_8052027:                             ; preds = %dec_label_pc_805200a
  store i32 %v1_805234f, i32* %ebx.global-to-local, align 4
  %v1_805202b = add i32 %v3_805201c, 12
  %v2_805202b = inttoptr i32 %v1_805202b to i32*
  %v3_805202b = load i32, i32* %v2_805202b, align 4
  store i32 %v3_805202b, i32* %eax.global-to-local, align 4
  store i32 %v3_805202b, i32* %v2_805201c, align 4
  %v0_8052031 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052031 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052031 = add i32 %v0_8052031, 4
  %v3_8052031 = add i32 %v2_8052031, %v1_8052031
  %v4_8052031 = inttoptr i32 %v3_8052031 to i32*
  %v5_8052031 = load i32, i32* %v4_8052031, align 4
  %v6_8052031 = or i32 %v5_8052031, 1
  store i32 %v6_8052031, i32* %v4_8052031, align 4
  %v0_8052036 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052036 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052036 = add i32 %v1_8052036, 8
  %v3_8052036 = inttoptr i32 %v2_8052036 to i32*
  store i32 %v0_8052036, i32* %v3_8052036, align 4
  br label %dec_label_pc_8052039

dec_label_pc_8052039:                             ; preds = %dec_label_pc_80523d6, %dec_label_pc_80523e8, %dec_label_pc_8051ff8, %dec_label_pc_8052027
  %v0_8052039 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052039 = add i32 %v0_8052039, 8
  store i32 %v1_8052039, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526b4

dec_label_pc_8052041:                             ; preds = %dec_label_pc_8052000
  %v0_8052045 = call i32 @function_8051f35()
  store i32 %v0_8052045, i32* %eax.global-to-local, align 4
  %v3_805204a = and i8 %v0_8051fb7, 2
  %v4_805204a = icmp eq i8 %v3_805204a, 0
  %v6_805204a = zext i8 %v3_805204a to i32
  %v9_805204a = and i32 %v1_8051fb7, -256
  %v10_805204a = or i32 %v9_805204a, %v6_805204a
  store i32 %v10_805204a, i32* @ebx, align 4
  br i1 %v4_805204a, label %dec_label_pc_805213d.preheader, label %dec_label_pc_8052057

dec_label_pc_8052057:                             ; preds = %dec_label_pc_8052041
  store i32 ptrtoint (i8* @global_var_8055420.46 to i32), i32* %stack_var_-92, align 4
  %v2_805205f = call i32 @function_8052b78(i32* bitcast (i8* @global_var_8055420.46 to i32*))
  store i32 %v2_805205f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805213d.preheader

dec_label_pc_805213d.preheader:                   ; preds = %dec_label_pc_8052057, %dec_label_pc_805200a, %dec_label_pc_8052041
  %stack_var_-40.0.ph = phi i32 [ %v2_805200e, %dec_label_pc_805200a ], [ %v0_8052045, %dec_label_pc_8052057 ], [ %v0_8052045, %dec_label_pc_8052041 ]
  %v0_805213d9 = load i32, i32* @global_var_8055460.50, align 32
  store i32 %v0_805213d9, i32* @ebp, align 4
  %v9_805214315 = icmp eq i32 %v0_805213d9, 134566996
  %v1_805214917 = icmp eq i1 %v9_805214315, false
  br i1 %v1_805214917, label %dec_label_pc_805206c.lr.ph, label %dec_label_pc_805214f

dec_label_pc_805206c.lr.ph:                       ; preds = %dec_label_pc_805213d.preheader
  %v1_8052093 = add i32 %v1_805234f, 16
  br label %dec_label_pc_805206c

dec_label_pc_805206c:                             ; preds = %dec_label_pc_805206c.lr.ph, %dec_label_pc_805213d
  %v1_8052666 = phi i32 [ %v0_805213d9, %dec_label_pc_805206c.lr.ph ], [ %v0_805213d, %dec_label_pc_805213d ]
  %v1_805206c = add i32 %v1_8052666, 4
  %v2_805206c = inttoptr i32 %v1_805206c to i32*
  %v3_805206c = load i32, i32* %v2_805206c, align 4
  %v1_805206f = add i32 %v1_8052666, 12
  %v2_805206f = inttoptr i32 %v1_805206f to i32*
  %v3_805206f = load i32, i32* %v2_805206f, align 4
  store i32 %v3_805206f, i32* %edx.global-to-local, align 4
  %v1_8052072 = and i32 %v3_805206c, -4
  store i32 %v1_8052072, i32* @edi, align 4
  br i1 %v6_8052008, label %dec_label_pc_805209e, label %dec_label_pc_805207f

dec_label_pc_805207f:                             ; preds = %dec_label_pc_805206c
  %v9_805207f = icmp eq i32 %v3_805206f, 134566996
  %v1_8052085 = icmp eq i1 %v9_805207f, false
  br i1 %v1_8052085, label %dec_label_pc_805209e, label %dec_label_pc_8052087

dec_label_pc_8052087:                             ; preds = %dec_label_pc_805207f
  %v1_8052087 = load i32, i32* @global_var_8055450.48, align 16
  %v12_8052087 = icmp eq i32 %v1_8052666, %v1_8052087
  %v1_805208d = icmp eq i1 %v12_8052087, false
  br i1 %v1_805208d, label %dec_label_pc_805209e, label %dec_label_pc_805208f

dec_label_pc_805208f:                             ; preds = %dec_label_pc_8052087
  store i32 %v1_8052093, i32* %eax.global-to-local, align 4
  %v6_8052098 = icmp ugt i32 %v1_8052072, %v1_8052093
  br i1 %v6_8052098, label %dec_label_pc_805264f, label %dec_label_pc_805209e

dec_label_pc_805209e:                             ; preds = %dec_label_pc_805208f, %dec_label_pc_8052087, %dec_label_pc_805207f, %dec_label_pc_805206c
  store i32 ptrtoint (i32* @global_var_8055454.49 to i32), i32* %eax.global-to-local, align 4
  %v2_80520a3 = add i32 %v3_805206f, 8
  %v3_80520a3 = inttoptr i32 %v2_80520a3 to i32*
  store i32 ptrtoint (i32* @global_var_8055454.49 to i32), i32* %v3_80520a3, align 4
  %v0_80520a6 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80520a6, i32* @global_var_8055460.50, align 4
  %v0_80520a9 = load i32, i32* @edi, align 4
  %v15_80520a9 = icmp eq i32 %v0_80520a9, %v1_805234f
  br i1 %v15_80520a9, label %dec_label_pc_8052690, label %dec_label_pc_80520b3

dec_label_pc_80520b3:                             ; preds = %dec_label_pc_805209e
  %v6_80520b9 = icmp ugt i32 %v0_80520a9, 255
  br i1 %v6_80520b9, label %dec_label_pc_80520cc, label %dec_label_pc_80520bb

dec_label_pc_80520bb:                             ; preds = %dec_label_pc_80520b3
  %v2_80520bd = udiv i32 %v0_80520a9, 8
  store i32 %v2_80520bd, i32* %esi.global-to-local, align 4
  %v1_80520c0 = mul nuw i32 %v2_80520bd, 8
  %v2_80520c0 = add i32 %v1_80520c0, 134566988
  store i32 %v2_80520c0, i32* @ebx, align 4
  %v1_80520c7 = add i32 %v1_80520c0, 134566996
  %v2_80520c7 = inttoptr i32 %v1_80520c7 to i32*
  %v3_80520c7 = load i32, i32* %v2_80520c7, align 4
  store i32 %v3_80520c7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052115

dec_label_pc_80520cc:                             ; preds = %dec_label_pc_80520b3
  store i32 %v0_80520a9, i32* @eax, align 4
  %v0_80520ce = call i32 @function_8051f35()
  store i32 %v0_80520ce, i32* %esi.global-to-local, align 4
  %v1_80520d5 = mul i32 %v0_80520ce, 8
  %v2_80520d5 = add i32 %v1_80520d5, ptrtoint (i32* @global_var_805544c.47 to i32)
  store i32 %v2_80520d5, i32* %eax.global-to-local, align 4
  %v1_80520dc = add i32 %v1_80520d5, add (i32 ptrtoint (i32* @global_var_805544c.47 to i32), i32 8)
  %v2_80520dc = inttoptr i32 %v1_80520dc to i32*
  %v3_80520dc = load i32, i32* %v2_80520dc, align 4
  store i32 %v3_80520dc, i32* %edx.global-to-local, align 4
  store i32 %v3_80520dc, i32* @ebx, align 4
  %v12_80520e5 = icmp eq i32 %v3_80520dc, %v2_80520d5
  br i1 %v12_80520e5, label %dec_label_pc_8052115, label %dec_label_pc_80520e9

dec_label_pc_80520e9:                             ; preds = %dec_label_pc_80520cc
  %v1_80520e9 = add i32 %v1_80520d5, add (i32 ptrtoint (i32* @global_var_805544c.47 to i32), i32 12)
  %v2_80520e9 = inttoptr i32 %v1_80520e9 to i32*
  %v3_80520e9 = load i32, i32* %v2_80520e9, align 4
  store i32 %v3_80520e9, i32* @ebx, align 4
  %v0_80520ec = load i32, i32* @edi, align 4
  %v2_80520ec = add i32 %v3_80520e9, 4
  %v3_80520ec = inttoptr i32 %v2_80520ec to i32*
  %v4_80520ec = load i32, i32* %v3_80520ec, align 4
  %v10_80520ec = icmp ult i32 %v0_80520ec, %v4_80520ec
  %v1_80520ef = icmp eq i1 %v10_80520ec, false
  br i1 %v1_80520ef, label %dec_label_pc_80520f7, label %dec_label_pc_8052115

dec_label_pc_80520f7:                             ; preds = %dec_label_pc_80520e9
  %v1_80520f9 = or i32 %v0_80520ec, 1
  store i32 %v1_80520f9, i32* %eax.global-to-local, align 4
  store i32 %v3_80520dc, i32* %ebx.global-to-local, align 4
  %v2_805210d105 = add i32 %v3_80520dc, 4
  %v3_805210d106 = inttoptr i32 %v2_805210d105 to i32*
  %v4_805210d107 = load i32, i32* %v3_805210d106, align 4
  %v10_805210d108 = icmp ult i32 %v1_80520f9, %v4_805210d107
  br i1 %v10_805210d108, label %dec_label_pc_80520fe, label %dec_label_pc_8052112

dec_label_pc_80520fe:                             ; preds = %dec_label_pc_80520f7, %dec_label_pc_80520fe
  %v0_8052112109 = phi i32 [ %v3_8052102, %dec_label_pc_80520fe ], [ %v3_80520dc, %dec_label_pc_80520f7 ]
  store i32 %v0_8052112109, i32* %ecx.global-to-local, align 4
  %v1_8052102 = add i32 %v0_8052112109, 8
  %v2_8052102 = inttoptr i32 %v1_8052102 to i32*
  %v3_8052102 = load i32, i32* %v2_8052102, align 4
  store i32 %v3_8052102, i32* %ecx.global-to-local, align 4
  store i32 %v3_8052102, i32* %ebx.global-to-local, align 4
  %v2_805210d = add i32 %v3_8052102, 4
  %v3_805210d = inttoptr i32 %v2_805210d to i32*
  %v4_805210d = load i32, i32* %v3_805210d, align 4
  %v10_805210d = icmp ult i32 %v1_80520f9, %v4_805210d
  br i1 %v10_805210d, label %dec_label_pc_80520fe, label %dec_label_pc_8052112

dec_label_pc_8052112:                             ; preds = %dec_label_pc_80520fe, %dec_label_pc_80520f7
  %v0_8052112.lcssa = phi i32 [ %v3_80520dc, %dec_label_pc_80520f7 ], [ %v3_8052102, %dec_label_pc_80520fe ]
  %v1_8052112 = add i32 %v0_8052112.lcssa, 12
  %v2_8052112 = inttoptr i32 %v1_8052112 to i32*
  %v3_8052112 = load i32, i32* %v2_8052112, align 4
  store i32 %v3_8052112, i32* @ebx, align 4
  br label %dec_label_pc_8052115

dec_label_pc_8052115:                             ; preds = %dec_label_pc_80520bb, %dec_label_pc_80520e9, %dec_label_pc_80520cc, %dec_label_pc_8052112
  %v0_8052115 = phi i32 [ %v0_80520ce, %dec_label_pc_80520cc ], [ %v0_80520ce, %dec_label_pc_8052112 ], [ %v0_80520ce, %dec_label_pc_80520e9 ], [ %v2_80520bd, %dec_label_pc_80520bb ]
  %stack_var_-64.1 = phi i32 [ %v2_80520d5, %dec_label_pc_80520cc ], [ %v0_8052112.lcssa, %dec_label_pc_8052112 ], [ %v2_80520d5, %dec_label_pc_80520e9 ], [ %v3_80520c7, %dec_label_pc_80520bb ]
  %v1_8052117 = urem i32 %v0_8052115, 32
  %v2_8052117 = icmp eq i32 %v1_8052117, 0
  store i32 %v1_8052117, i32* %esi.global-to-local, align 4
  store i32 %v1_8052117, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8052121 = sdiv i32 %v0_8052115, 32
  store i32 %v2_8052121, i32* %edx.global-to-local, align 4
  br i1 %v2_8052117, label %dec_label_pc_805213d, label %bb

bb:                                               ; preds = %dec_label_pc_8052115
  %v5_8052124 = shl i32 1, %v1_8052117
  store i32 %v5_8052124, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805213d

dec_label_pc_805213d:                             ; preds = %dec_label_pc_8052115, %bb
  %v5_8052126 = phi i32 [ 1, %dec_label_pc_8052115 ], [ %v5_8052124, %bb ]
  %v1_8052126 = mul nsw i32 %v2_8052121, 4
  %v2_8052126 = add i32 %v1_8052126, ptrtoint (i32* @global_var_8055754.51 to i32)
  %v3_8052126 = inttoptr i32 %v2_8052126 to i32*
  %v4_8052126 = load i32, i32* %v3_8052126, align 4
  %v6_8052126 = or i32 %v4_8052126, %v5_8052126
  store i32 %v6_8052126, i32* %v3_8052126, align 4
  %v0_805212d = load i32, i32* @ebx, align 4
  %v1_805212d = load i32, i32* @ebp, align 4
  %v2_805212d = add i32 %v1_805212d, 12
  %v3_805212d = inttoptr i32 %v2_805212d to i32*
  store i32 %v0_805212d, i32* %v3_805212d, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8052134 = load i32, i32* @ebp, align 4
  %v2_8052134 = add i32 %v1_8052134, 8
  %v3_8052134 = inttoptr i32 %v2_8052134 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8052134, align 4
  %v0_8052137 = load i32, i32* @ebp, align 4
  %v1_8052137 = load i32, i32* @ebx, align 4
  %v2_8052137 = add i32 %v1_8052137, 8
  %v3_8052137 = inttoptr i32 %v2_8052137 to i32*
  store i32 %v0_8052137, i32* %v3_8052137, align 4
  %v0_805213a = load i32, i32* @ebp, align 4
  %v1_805213a = load i32, i32* @esi, align 4
  %v2_805213a = add i32 %v1_805213a, 12
  %v3_805213a = inttoptr i32 %v2_805213a to i32*
  store i32 %v0_805213a, i32* %v3_805213a, align 4
  %v0_805213d = load i32, i32* @global_var_8055460.50, align 32
  store i32 %v0_805213d, i32* @ebp, align 4
  %v9_8052143 = icmp eq i32 %v0_805213d, 134566996
  %v1_8052149 = icmp eq i1 %v9_8052143, false
  br i1 %v1_8052149, label %dec_label_pc_805206c, label %dec_label_pc_805214f

dec_label_pc_805214f:                             ; preds = %dec_label_pc_805213d, %dec_label_pc_805213d.preheader
  br i1 %v8_8052000, label %dec_label_pc_80521dd, label %dec_label_pc_805215d

dec_label_pc_805215d:                             ; preds = %dec_label_pc_805214f
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8052161 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8052161 = add i32 %v1_8052161, ptrtoint (i32* @global_var_805544c.47 to i32)
  store i32 %v2_8052161, i32* %edx.global-to-local, align 4
  %v1_8052168 = add i32 %v1_8052161, add (i32 ptrtoint (i32* @global_var_805544c.47 to i32), i32 12)
  %v2_8052168 = inttoptr i32 %v1_8052168 to i32*
  %storemerge1.pre = load i32, i32* %v2_8052168, align 4
  br label %dec_label_pc_80521d9

dec_label_pc_805216d:                             ; preds = %dec_label_pc_80521d9
  %v1_805216d = add i32 %v4_8052184, 4
  %v2_805216d = inttoptr i32 %v1_805216d to i32*
  %v3_805216d = load i32, i32* %v2_805216d, align 4
  store i32 %v3_805216d, i32* %ebx.global-to-local, align 4
  %v1_8052170 = add i32 %v4_8052184, 12
  %v2_8052170 = inttoptr i32 %v1_8052170 to i32*
  %v3_8052170 = load i32, i32* %v2_8052170, align 4
  store i32 %v3_8052170, i32* @ecx, align 4
  %v1_8052173 = and i32 %v3_805216d, -4
  store i32 %v1_8052173, i32* @ebx, align 4
  %v10_8052176 = icmp ult i32 %v1_8052173, %v1_805234f
  br i1 %v10_8052176, label %dec_label_pc_80521d9, label %dec_label_pc_805217c

dec_label_pc_805217c:                             ; preds = %dec_label_pc_805216d
  %v1_805217c = add i32 %v4_8052184, 8
  %v2_805217c = inttoptr i32 %v1_805217c to i32*
  %v3_805217c = load i32, i32* %v2_805217c, align 4
  store i32 %v3_805217c, i32* @edx, align 4
  %v1_805217f = add i32 %v3_805217c, 12
  %v2_805217f = inttoptr i32 %v1_805217f to i32*
  %v3_805217f = load i32, i32* %v2_805217f, align 4
  %v15_805217f = icmp eq i32 %v3_805217f, %v4_8052184
  %v1_8052182 = icmp eq i1 %v15_805217f, false
  br i1 %v1_8052182, label %dec_label_pc_8052189, label %dec_label_pc_8052184

dec_label_pc_8052184:                             ; preds = %dec_label_pc_805217c
  %v1_8052184 = add i32 %v3_8052170, 8
  %v2_8052184 = inttoptr i32 %v1_8052184 to i32*
  %v3_8052184 = load i32, i32* %v2_8052184, align 4
  %v15_8052184 = icmp eq i32 %v3_8052184, %v4_8052184
  br i1 %v15_8052184, label %dec_label_pc_805218e, label %dec_label_pc_8052189

dec_label_pc_8052189:                             ; preds = %dec_label_pc_8052184, %dec_label_pc_805217c
  %v0_8052189 = call i32 @function_8052ebc()
  store i32 %v0_8052189, i32* %eax.global-to-local, align 4
  %v0_805218e.pre = load i32, i32* @ebx, align 4
  %v0_8052194.pre = load i32, i32* @ecx, align 4
  %v1_8052194.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805218e

dec_label_pc_805218e:                             ; preds = %dec_label_pc_8052184, %dec_label_pc_8052189
  %v1_8052194 = phi i32 [ %v3_805217c, %dec_label_pc_8052184 ], [ %v1_8052194.pre, %dec_label_pc_8052189 ]
  %v0_8052194 = phi i32 [ %v3_8052170, %dec_label_pc_8052184 ], [ %v0_8052194.pre, %dec_label_pc_8052189 ]
  %v0_805218e = phi i32 [ %v1_8052173, %dec_label_pc_8052184 ], [ %v0_805218e.pre, %dec_label_pc_8052189 ]
  %v5_8052190 = sub i32 %v0_805218e, %v1_805234f
  store i32 %v5_8052190, i32* %esi.global-to-local, align 4
  %v2_8052194 = add i32 %v1_8052194, 12
  %v3_8052194 = inttoptr i32 %v2_8052194 to i32*
  store i32 %v0_8052194, i32* %v3_8052194, align 4
  %v0_8052197 = load i32, i32* @edx, align 4
  %v1_8052197 = load i32, i32* @ecx, align 4
  %v2_8052197 = add i32 %v1_8052197, 8
  %v3_8052197 = inttoptr i32 %v2_8052197 to i32*
  store i32 %v0_8052197, i32* %v3_8052197, align 4
  %v0_805219a = load i32, i32* %esi.global-to-local, align 4
  %v0_805219d = load i32, i32* %eax.global-to-local, align 4
  %v1_805219d = add i32 %v0_805219d, 8
  store i32 %v1_805219d, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_805219a, 16
  br i1 %tmp126, label %dec_label_pc_805269e, label %dec_label_pc_80521a6

dec_label_pc_80521a6:                             ; preds = %dec_label_pc_805218e
  %v2_80521aa = add i32 %v0_805219d, %v1_805234f
  store i32 %v2_80521aa, i32* %edx.global-to-local, align 4
  %v1_80521ad = or i32 %v1_805234f, 1
  store i32 %v1_80521ad, i32* %ebx.global-to-local, align 4
  %v2_80521b0 = add i32 %v0_805219d, 4
  %v3_80521b0 = inttoptr i32 %v2_80521b0 to i32*
  store i32 %v1_80521ad, i32* %v3_80521b0, align 4
  %v0_80521b3 = load i32, i32* %esi.global-to-local, align 4
  %v1_80521b5 = or i32 %v0_80521b3, 1
  store i32 %v1_80521b5, i32* %eax.global-to-local, align 4
  %v0_80521b8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80521b8 = load i32, i32* @ebp, align 4
  %v2_80521b8 = add i32 %v1_80521b8, 8
  %v3_80521b8 = inttoptr i32 %v2_80521b8 to i32*
  store i32 %v0_80521b8, i32* %v3_80521b8, align 4
  %v0_80521bb = load i32, i32* %edx.global-to-local, align 4
  %v1_80521bb = load i32, i32* @ebp, align 4
  %v2_80521bb = add i32 %v1_80521bb, 12
  %v3_80521bb = inttoptr i32 %v2_80521bb to i32*
  store i32 %v0_80521bb, i32* %v3_80521bb, align 4
  %v0_80521be = load i32, i32* %edx.global-to-local, align 4
  %v1_80521be = add i32 %v0_80521be, 8
  %v2_80521be = inttoptr i32 %v1_80521be to i32*
  store i32 ptrtoint (i32* @global_var_8055454.49 to i32), i32* %v2_80521be, align 4
  %v0_80521c5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80521c5 = add i32 %v0_80521c5, 12
  %v2_80521c5 = inttoptr i32 %v1_80521c5 to i32*
  store i32 ptrtoint (i32* @global_var_8055454.49 to i32), i32* %v2_80521c5, align 4
  %v0_80521cc = load i32, i32* %eax.global-to-local, align 4
  %v1_80521cc = load i32, i32* %edx.global-to-local, align 4
  %v2_80521cc = add i32 %v1_80521cc, 4
  %v3_80521cc = inttoptr i32 %v2_80521cc to i32*
  store i32 %v0_80521cc, i32* %v3_80521cc, align 4
  %v0_80521cf = load i32, i32* %esi.global-to-local, align 4
  %v1_80521cf = load i32, i32* %edx.global-to-local, align 4
  %v3_80521cf = add i32 %v1_80521cf, %v0_80521cf
  %v4_80521cf = inttoptr i32 %v3_80521cf to i32*
  store i32 %v0_80521cf, i32* %v4_80521cf, align 4
  br label %dec_label_pc_80526a3

dec_label_pc_80521d9:                             ; preds = %dec_label_pc_805216d, %dec_label_pc_805215d
  %v4_8052184 = phi i32 [ %storemerge1.pre, %dec_label_pc_805215d ], [ %v3_8052170, %dec_label_pc_805216d ]
  store i32 %v4_8052184, i32* %eax.global-to-local, align 4
  %v12_80521d9 = icmp eq i32 %v4_8052184, %v2_8052161
  %v1_80521db = icmp eq i1 %v12_80521d9, false
  br i1 %v1_80521db, label %dec_label_pc_805216d, label %dec_label_pc_80521dd.loopexit

dec_label_pc_80521dd.loopexit:                    ; preds = %dec_label_pc_80521d9
  br label %dec_label_pc_80521dd

dec_label_pc_80521dd:                             ; preds = %dec_label_pc_80521dd.loopexit, %dec_label_pc_805214f
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80521e6 = add i32 %stack_var_-40.0.ph, 1
  %v2_80521e9 = udiv i32 %v1_80521e6, 32
  store i32 %v2_80521e9, i32* @edi, align 4
  %v1_80521ec = mul i32 %v1_80521e6, 8
  %v2_80521ec = add i32 %v1_80521ec, ptrtoint (i32* @global_var_805544c.47 to i32)
  store i32 %v2_80521ec, i32* %ebx.global-to-local, align 4
  %v1_80521f3 = urem i32 %v1_80521e6, 32
  %v2_80521f3 = icmp eq i32 %v1_80521f3, 0
  store i32 %v1_80521f3, i32* %ecx.global-to-local, align 4
  %v1_80521f6 = mul nuw nsw i32 %v2_80521e9, 4
  %v2_80521f6 = add i32 %v1_80521f6, ptrtoint (i32* @global_var_8055754.51 to i32)
  %v3_80521f6 = inttoptr i32 %v2_80521f6 to i32*
  %v4_80521f6 = load i32, i32* %v3_80521f6, align 4
  store i32 %v4_80521f6, i32* %edx.global-to-local, align 4
  br i1 %v2_80521f3, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_80521dd
  %v5_80521fd = shl i32 1, %v1_80521f3
  store i32 %v5_80521fd, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_80521dd, %bb88, %dec_label_pc_805223e
  %v1_80521ff = phi i32 [ %v1_80521ff.pre, %dec_label_pc_805223e ], [ %v4_80521f6, %bb88 ], [ %v4_80521f6, %dec_label_pc_80521dd ]
  %v0_8052203 = phi i32 [ %v0_80521ff.pre, %dec_label_pc_805223e ], [ %v5_80521fd, %bb88 ], [ 1, %dec_label_pc_80521dd ]
  %tmp89 = icmp ule i32 %v0_8052203, %v1_80521ff
  %v1_8052203 = icmp eq i32 %v0_8052203, 0
  %v1_8052205 = icmp eq i1 %v1_8052203, false
  %or.cond = and i1 %tmp89, %v1_8052205
  br i1 %or.cond, label %dec_label_pc_8052203.dec_label_pc_8052233.preheader_crit_edge, label %dec_label_pc_8052207.preheader

dec_label_pc_8052203.dec_label_pc_8052233.preheader_crit_edge: ; preds = %.preheader
  %v0_805222e7.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052233.preheader

dec_label_pc_8052207.preheader:                   ; preds = %.preheader
  %v0_8052207.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052207

dec_label_pc_8052207:                             ; preds = %dec_label_pc_8052207.preheader, %dec_label_pc_8052211
  %v0_8052207 = phi i32 [ %v0_8052207.pre, %dec_label_pc_8052207.preheader ], [ %v1_8052207, %dec_label_pc_8052211 ]
  %v1_8052207 = add i32 %v0_8052207, 1
  store i32 %v1_8052207, i32* @edi, align 4
  %v6_805220b = icmp ugt i32 %v1_8052207, 2
  br i1 %v6_805220b, label %dec_label_pc_80522ba.loopexit, label %dec_label_pc_8052211

dec_label_pc_8052211:                             ; preds = %dec_label_pc_8052207
  %v1_8052211 = mul i32 %v1_8052207, 4
  %v2_8052211 = add i32 %v1_8052211, ptrtoint (i32* @global_var_8055754.51 to i32)
  %v3_8052211 = inttoptr i32 %v2_8052211 to i32*
  %v4_8052211 = load i32, i32* %v3_8052211, align 4
  store i32 %v4_8052211, i32* %edx.global-to-local, align 4
  %v1_8052218 = icmp eq i32 %v4_8052211, 0
  br i1 %v1_8052218, label %dec_label_pc_8052207, label %dec_label_pc_805221c

dec_label_pc_805221c:                             ; preds = %dec_label_pc_8052211
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8052223 = mul i32 %v1_8052207, 256
  store i32 %v2_8052223, i32* %eax.global-to-local, align 4
  %v1_8052226 = add i32 %v2_8052223, ptrtoint (i32* @global_var_805544c.47 to i32)
  store i32 %v1_8052226, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052233.preheader

dec_label_pc_8052233.preheader:                   ; preds = %dec_label_pc_8052203.dec_label_pc_8052233.preheader_crit_edge, %dec_label_pc_805221c
  %v0_805222e7 = phi i32 [ %v1_8052226, %dec_label_pc_805221c ], [ %v0_805222e7.pre, %dec_label_pc_8052203.dec_label_pc_8052233.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_805221c ], [ %v0_8052203, %dec_label_pc_8052203.dec_label_pc_8052233.preheader_crit_edge ]
  %v0_8052245 = phi i32 [ %v4_8052211, %dec_label_pc_805221c ], [ %v1_80521ff, %dec_label_pc_8052203.dec_label_pc_8052233.preheader_crit_edge ]
  %v2_80522334 = and i32 %v0_8052245, %esi.promoted
  %v3_80522335 = icmp eq i32 %v2_80522334, 0
  br i1 %v3_80522335, label %dec_label_pc_805222e, label %dec_label_pc_8052237

dec_label_pc_805222e:                             ; preds = %dec_label_pc_8052233.preheader, %dec_label_pc_805222e
  %v2_805223118 = phi i32 [ %v2_8052231, %dec_label_pc_805222e ], [ %esi.promoted, %dec_label_pc_8052233.preheader ]
  %v0_805222e8 = phi i32 [ %v1_805222e, %dec_label_pc_805222e ], [ %v0_805222e7, %dec_label_pc_8052233.preheader ]
  %v1_805222e = add i32 %v0_805222e8, 8
  %v2_8052231 = mul i32 %v2_805223118, 2
  %v2_8052233 = and i32 %v2_8052231, %v0_8052245
  %v3_8052233 = icmp eq i32 %v2_8052233, 0
  br i1 %v3_8052233, label %dec_label_pc_805222e, label %dec_label_pc_8052233.dec_label_pc_8052237_crit_edge

dec_label_pc_8052233.dec_label_pc_8052237_crit_edge: ; preds = %dec_label_pc_805222e
  store i32 %v1_805222e, i32* %ebx.global-to-local, align 4
  store i32 %v2_8052231, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052237

dec_label_pc_8052237:                             ; preds = %dec_label_pc_8052233.dec_label_pc_8052237_crit_edge, %dec_label_pc_8052233.preheader
  %v0_8052247 = phi i32 [ %v2_8052231, %dec_label_pc_8052233.dec_label_pc_8052237_crit_edge ], [ %esi.promoted, %dec_label_pc_8052233.preheader ]
  %v1_8052261 = phi i32 [ %v1_805222e, %dec_label_pc_8052233.dec_label_pc_8052237_crit_edge ], [ %v0_805222e7, %dec_label_pc_8052233.preheader ]
  %v1_8052237 = add i32 %v1_8052261, 12
  %v2_8052237 = inttoptr i32 %v1_8052237 to i32*
  %v3_8052237 = load i32, i32* %v2_8052237, align 4
  store i32 %v3_8052237, i32* %ecx.global-to-local, align 4
  %v12_805223a = icmp eq i32 %v3_8052237, %v1_8052261
  %v1_805223c = icmp eq i1 %v12_805223a, false
  br i1 %v1_805223c, label %dec_label_pc_8052252, label %dec_label_pc_805223e

dec_label_pc_805223e:                             ; preds = %dec_label_pc_8052237
  %v1_8052240 = add i32 %v3_8052237, 8
  store i32 %v1_8052240, i32* %ebx.global-to-local, align 4
  %v1_8052243 = sub i32 -1, %v0_8052247
  store i32 %v1_8052243, i32* %eax.global-to-local, align 4
  %v2_8052245 = and i32 %v0_8052245, %v1_8052243
  store i32 %v2_8052245, i32* %edx.global-to-local, align 4
  %v2_8052247 = mul i32 %v0_8052247, 2
  store i32 %v2_8052247, i32* %esi.global-to-local, align 4
  %v1_8052249 = load i32, i32* @edi, align 4
  %v2_8052249 = mul i32 %v1_8052249, 4
  %v3_8052249 = add i32 %v2_8052249, ptrtoint (i32* @global_var_8055754.51 to i32)
  %v4_8052249 = inttoptr i32 %v3_8052249 to i32*
  store i32 %v2_8052245, i32* %v4_8052249, align 4
  %v0_80521ff.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80521ff.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8052252:                             ; preds = %dec_label_pc_8052237
  %v1_8052252 = add i32 %v3_8052237, 4
  %v2_8052252 = inttoptr i32 %v1_8052252 to i32*
  %v3_8052252 = load i32, i32* %v2_8052252, align 4
  store i32 %v3_8052252, i32* %edx.global-to-local, align 4
  %v1_8052255 = add i32 %v3_8052237, 12
  %v2_8052255 = inttoptr i32 %v1_8052255 to i32*
  %v3_8052255 = load i32, i32* %v2_8052255, align 4
  store i32 %v3_8052255, i32* %eax.global-to-local, align 4
  %v1_8052258 = and i32 %v3_8052252, -4
  store i32 %v1_8052258, i32* %edx.global-to-local, align 4
  %v5_805225d = sub i32 %v1_8052258, %v1_805234f
  store i32 %v5_805225d, i32* %esi.global-to-local, align 4
  store i32 %v3_8052255, i32* %v2_8052237, align 4
  %v0_8052264 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052264 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052264 = add i32 %v1_8052264, 8
  %v3_8052264 = inttoptr i32 %v2_8052264 to i32*
  store i32 %v0_8052264, i32* %v3_8052264, align 4
  %v0_8052267 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8052267, 16
  br i1 %tmp127, label %dec_label_pc_805226c, label %dec_label_pc_8052273

dec_label_pc_805226c:                             ; preds = %dec_label_pc_8052252
  %v0_805226c = load i32, i32* %ecx.global-to-local, align 4
  %v1_805226c = load i32, i32* %edx.global-to-local, align 4
  %v2_805226c = add i32 %v0_805226c, 4
  %v3_805226c = add i32 %v2_805226c, %v1_805226c
  %v4_805226c = inttoptr i32 %v3_805226c to i32*
  %v5_805226c = load i32, i32* %v4_805226c, align 4
  %v6_805226c = or i32 %v5_805226c, 1
  store i32 %v6_805226c, i32* %v4_805226c, align 4
  br label %dec_label_pc_80522b2

dec_label_pc_8052273:                             ; preds = %dec_label_pc_8052252
  store i32 %v1_805234f, i32* %eax.global-to-local, align 4
  %v0_805227c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805227c = add i32 %v0_805227c, %v1_805234f
  store i32 %v2_805227c, i32* %edx.global-to-local, align 4
  %v1_805227f = load i32, i32* @ebp, align 4
  %v2_805227f = add i32 %v1_805227f, 8
  %v3_805227f = inttoptr i32 %v2_805227f to i32*
  store i32 %v2_805227c, i32* %v3_805227f, align 4
  %v0_8052282 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052282 = load i32, i32* @ebp, align 4
  %v2_8052282 = add i32 %v1_8052282, 12
  %v3_8052282 = inttoptr i32 %v2_8052282 to i32*
  store i32 %v0_8052282, i32* %v3_8052282, align 4
  %v0_8052285 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052285 = add i32 %v0_8052285, 8
  %v2_8052285 = inttoptr i32 %v1_8052285 to i32*
  store i32 ptrtoint (i32* @global_var_8055454.49 to i32), i32* %v2_8052285, align 4
  %v0_805228c = load i32, i32* %edx.global-to-local, align 4
  %v1_805228c = add i32 %v0_805228c, 12
  %v2_805228c = inttoptr i32 %v1_805228c to i32*
  store i32 ptrtoint (i32* @global_var_8055454.49 to i32), i32* %v2_805228c, align 4
  br i1 %v6_8052008, label %dec_label_pc_805229b, label %dec_label_pc_8052295

dec_label_pc_8052295:                             ; preds = %dec_label_pc_8052273
  %v0_8052295 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052295, i32* @global_var_8055450.48, align 16
  br label %dec_label_pc_805229b

dec_label_pc_805229b:                             ; preds = %dec_label_pc_8052273, %dec_label_pc_8052295
  %v4_805229b = or i32 %v1_805234f, 1
  %v0_80522a0 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_805229b, i32* %ebx.global-to-local, align 4
  %v1_80522a6 = or i32 %v0_80522a0, 1
  store i32 %v1_80522a6, i32* %eax.global-to-local, align 4
  %v1_80522a9 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80522a9 = add i32 %v1_80522a9, 4
  %v3_80522a9 = inttoptr i32 %v2_80522a9 to i32*
  store i32 %v4_805229b, i32* %v3_80522a9, align 4
  %v0_80522ac = load i32, i32* %esi.global-to-local, align 4
  %v1_80522ac = load i32, i32* %edx.global-to-local, align 4
  %v3_80522ac = add i32 %v1_80522ac, %v0_80522ac
  %v4_80522ac = inttoptr i32 %v3_80522ac to i32*
  store i32 %v0_80522ac, i32* %v4_80522ac, align 4
  %v0_80522af = load i32, i32* %eax.global-to-local, align 4
  %v1_80522af = load i32, i32* %edx.global-to-local, align 4
  %v2_80522af = add i32 %v1_80522af, 4
  %v3_80522af = inttoptr i32 %v2_80522af to i32*
  store i32 %v0_80522af, i32* %v3_80522af, align 4
  br label %dec_label_pc_80522b2

dec_label_pc_80522b2:                             ; preds = %dec_label_pc_805226c, %dec_label_pc_805229b
  %v0_80522b2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80522b2 = add i32 %v0_80522b2, 8
  store i32 %v1_80522b2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526b4

dec_label_pc_80522ba.loopexit:                    ; preds = %dec_label_pc_8052207
  br label %dec_label_pc_80522ba

dec_label_pc_80522ba:                             ; preds = %dec_label_pc_80522ba.loopexit, %dec_label_pc_8051fc2, %dec_label_pc_8051fca
  %v0_80522ba = load i32, i32* @global_var_805544c.47, align 4
  store i32 %v0_80522ba, i32* @ebx, align 4
  %v1_80522c4 = add i32 %v1_805234f, 16
  store i32 %v1_80522c4, i32* @esi, align 4
  %v1_80522c7 = add i32 %v0_80522ba, 4
  %v2_80522c7 = inttoptr i32 %v1_80522c7 to i32*
  %v3_80522c7 = load i32, i32* %v2_80522c7, align 4
  %v1_80522ce = and i32 %v3_80522c7, -4
  store i32 %v1_80522ce, i32* %ecx.global-to-local, align 4
  %v7_80522d1 = icmp ult i32 %v1_80522ce, %v1_80522c4
  br i1 %v7_80522d1, label %dec_label_pc_80522f1, label %dec_label_pc_80522d5

dec_label_pc_80522d5:                             ; preds = %dec_label_pc_80522ba
  %v2_80522d9 = add i32 %v0_80522ba, %v1_805234f
  store i32 %v2_80522d9, i32* %edx.global-to-local, align 4
  %v1_80522dc = or i32 %v1_805234f, 1
  store i32 %v1_80522dc, i32* %eax.global-to-local, align 4
  store i32 %v2_80522d9, i32* @global_var_805544c.47, align 4
  store i32 %v1_80522dc, i32* %v2_80522c7, align 4
  %v0_80522e8 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80522e8 = sub i32 %v0_80522e8, %v1_805234f
  store i32 %v5_80522e8, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052644

dec_label_pc_80522f1:                             ; preds = %dec_label_pc_80522ba
  %v0_80522f1 = load i32, i32* @global_var_805577c.52, align 4
  store i32 %v0_80522f1, i32* %edx.global-to-local, align 4
  %v0_80522f7 = load i8, i8* @global_var_8055420.46, align 32
  %v1_80522f7 = and i8 %v0_80522f7, 2
  %v2_80522f7 = icmp eq i8 %v1_80522f7, 0
  br i1 %v2_80522f7, label %dec_label_pc_8052325, label %dec_label_pc_8052300

dec_label_pc_8052300:                             ; preds = %dec_label_pc_80522f1
  store i32 ptrtoint (i8* @global_var_8055420.46 to i32), i32* %stack_var_-92, align 4
  %v2_8052308 = call i32 @function_8052b78(i32* bitcast (i8* @global_var_8055420.46 to i32*))
  store i32 ptrtoint (i8* @global_var_8055420.46 to i32), i32* @ebx, align 4
  %v1_8052312 = add i32 %v1_805234f, -7
  store i32 %v1_8052312, i32* %eax.global-to-local, align 4
  store i32 %v1_8052312, i32* %stack_var_-92, align 4
  %v1_8052316 = call i32 @function_8051f5b(i32 %v1_8052312)
  store i32 %v1_8052316, i32* %eax.global-to-local, align 4
  store i32 %v1_8052316, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526b4

dec_label_pc_8052325:                             ; preds = %dec_label_pc_80522f1
  %v1_8052325 = add i32 %v0_80522f1, -1
  store i32 %v1_8052325, i32* @ecx, align 4
  store i32 %v1_805234f, i32* @ebx, align 4
  %v1_8052330 = load i32, i32* @global_var_805576c.53, align 4
  %v7_8052330 = icmp ult i32 %v1_805234f, %v1_8052330
  br i1 %v7_8052330, label %dec_label_pc_80523f2, label %dec_label_pc_805233c

dec_label_pc_805233c:                             ; preds = %dec_label_pc_8052325
  %v0_805233c = load i32, i32* @global_var_8055770.54, align 16
  store i32 %v0_805233c, i32* %eax.global-to-local, align 4
  %v1_8052341 = load i32, i32* @global_var_8055774.55, align 4
  %v5_8052347 = icmp slt i32 %v0_805233c, %v1_8052341
  br i1 %v5_8052347, label %dec_label_pc_805234d, label %dec_label_pc_80523f2

dec_label_pc_805234d:                             ; preds = %dec_label_pc_805233c
  %v2_805234f = add i32 %v1_805234f, 10
  %v3_805234f = add i32 %v2_805234f, %v0_80522f1
  %v1_8052353 = sub i32 0, %v0_80522f1
  store i32 %v1_8052353, i32* %eax.global-to-local, align 4
  %v2_8052355 = and i32 %v3_805234f, %v1_8052353
  store i32 %v2_8052355, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_8052355, %v1_805234f
  br i1 %tmp128, label %dec_label_pc_8052361, label %dec_label_pc_80523f2

dec_label_pc_8052361:                             ; preds = %dec_label_pc_805234d
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805236e = call i32 @function_805365c(i32 0, i32 %v2_8052355, i32 3, i32 34, i32 0, i32 0, i32 %v1_8052325, i32 %v1_8052325)
  store i32 %v8_805236e, i32* %eax.global-to-local, align 4
  store i32 %v8_805236e, i32* %edx.global-to-local, align 4
  %v10_8052378 = icmp eq i32 %v8_805236e, -1
  br i1 %v10_8052378, label %dec_label_pc_8052361.dec_label_pc_80523f2_crit_edge, label %dec_label_pc_805237d

dec_label_pc_8052361.dec_label_pc_80523f2_crit_edge: ; preds = %dec_label_pc_8052361
  %v0_80523f2.pre = load i32, i32* @global_var_805544c.47, align 4
  br label %dec_label_pc_80523f2

dec_label_pc_805237d:                             ; preds = %dec_label_pc_8052361
  %v1_805237f = urem i32 %v8_805236e, 8
  %v2_805237f = icmp eq i32 %v1_805237f, 0
  store i32 %v1_805237f, i32* %ecx.global-to-local, align 4
  br i1 %v2_805237f, label %dec_label_pc_8052397, label %dec_label_pc_8052384

dec_label_pc_8052384:                             ; preds = %dec_label_pc_805237d
  %v0_8052389 = load i32, i32* @ebx, align 4
  %v2_805238b = sub nsw i32 8, %v1_805237f
  store i32 %v2_805238b, i32* %eax.global-to-local, align 4
  %v2_805238d = add i32 %v2_805238b, %v8_805236e
  store i32 %v2_805238d, i32* %edx.global-to-local, align 4
  %v2_805238f = sub i32 %v0_8052389, %v2_805238b
  store i32 %v2_805238f, i32* %esi.global-to-local, align 4
  %v2_8052391 = inttoptr i32 %v2_805238d to i32*
  store i32 %v2_805238b, i32* %v2_8052391, align 4
  br label %dec_label_pc_805239f

dec_label_pc_8052397:                             ; preds = %dec_label_pc_805237d
  %v1_8052397 = inttoptr i32 %v8_805236e to i32*
  store i32 0, i32* %v1_8052397, align 4
  br label %dec_label_pc_805239f

dec_label_pc_805239f:                             ; preds = %dec_label_pc_8052384, %dec_label_pc_8052397
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8052384 ], [ @ebx, %dec_label_pc_8052397 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_805239f = or i32 %storemerge, 2
  %v1_80523a2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80523a2 = add i32 %v1_80523a2, 4
  %v3_80523a2 = inttoptr i32 %v2_80523a2 to i32*
  store i32 %v1_805239f, i32* %v3_80523a2, align 4
  %v0_80523a5 = load i32, i32* @global_var_8055770.54, align 16
  %v1_80523aa = add i32 %v0_80523a5, 1
  store i32 %v1_80523aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80523aa, i32* @global_var_8055770.54, align 16
  %v1_80523b0 = load i32, i32* @global_var_8055778.56, align 8
  %v7_80523b6 = icmp sgt i32 %v1_80523aa, %v1_80523b0
  br i1 %v7_80523b6, label %dec_label_pc_80523b8, label %dec_label_pc_80523bd

dec_label_pc_80523b8:                             ; preds = %dec_label_pc_805239f
  store i32 %v1_80523aa, i32* @global_var_8055778.56, align 8
  br label %dec_label_pc_80523bd

dec_label_pc_80523bd:                             ; preds = %dec_label_pc_805239f, %dec_label_pc_80523b8
  %v0_80523bd = load i32, i32* @global_var_8055784.57, align 4
  %v1_80523c2 = load i32, i32* @ebx, align 4
  %v2_80523c2 = add i32 %v1_80523c2, %v0_80523bd
  store i32 %v2_80523c2, i32* %eax.global-to-local, align 4
  store i32 %v2_80523c2, i32* @global_var_8055784.57, align 4
  %v1_80523c9 = load i32, i32* @global_var_8055790.58, align 16
  %tmp129 = icmp ugt i32 %v2_80523c2, %v1_80523c9
  br i1 %tmp129, label %dec_label_pc_80523d1, label %dec_label_pc_80523d6

dec_label_pc_80523d1:                             ; preds = %dec_label_pc_80523bd
  store i32 %v2_80523c2, i32* @global_var_8055790.58, align 16
  br label %dec_label_pc_80523d6

dec_label_pc_80523d6:                             ; preds = %dec_label_pc_80523bd, %dec_label_pc_80523d1
  %v1_80523d6 = load i32, i32* @global_var_8055788.59, align 8
  %v2_80523d6 = add i32 %v1_80523d6, %v2_80523c2
  store i32 %v2_80523d6, i32* %eax.global-to-local, align 4
  %v1_80523dc = load i32, i32* @global_var_8055794.60, align 4
  %tmp130 = icmp ugt i32 %v2_80523d6, %v1_80523dc
  br i1 %tmp130, label %dec_label_pc_80523e8, label %dec_label_pc_8052039

dec_label_pc_80523e8:                             ; preds = %dec_label_pc_80523d6
  store i32 %v2_80523d6, i32* @global_var_8055794.60, align 4
  br label %dec_label_pc_8052039

dec_label_pc_80523f2:                             ; preds = %dec_label_pc_805234d, %dec_label_pc_8052361.dec_label_pc_80523f2_crit_edge, %dec_label_pc_805233c, %dec_label_pc_8052325
  %v0_80523f2 = phi i32 [ %v0_80523f2.pre, %dec_label_pc_8052361.dec_label_pc_80523f2_crit_edge ], [ %v0_80522ba, %dec_label_pc_805233c ], [ %v0_80522ba, %dec_label_pc_805234d ], [ %v0_80522ba, %dec_label_pc_8052325 ]
  store i32 %v0_80523f2, i32* %eax.global-to-local, align 4
  %v1_80523fb = add i32 %v0_80523f2, 4
  %v2_80523fb = inttoptr i32 %v1_80523fb to i32*
  %v3_80523fb = load i32, i32* %v2_80523fb, align 4
  %v1_8052405 = and i32 %v3_80523fb, -4
  %v2_8052405 = icmp eq i32 %v1_8052405, 0
  store i32 %v1_8052405, i32* @ebp, align 4
  %v1_8052408 = load i32, i32* @global_var_8055768.61, align 8
  %v2_8052408 = add i32 %v1_8052408, %v1_80522c4
  store i32 %v2_8052408, i32* %eax.global-to-local, align 4
  %v0_805240e = load i8, i8* @global_var_8055780.62, align 128
  %v1_805240e = urem i8 %v0_805240e, 2
  %v2_805240e = icmp eq i8 %v1_805240e, 0
  br i1 %v2_805240e, label %dec_label_pc_8052419, label %dec_label_pc_8052417

dec_label_pc_8052417:                             ; preds = %dec_label_pc_80523f2
  %v2_8052417 = sub i32 %v2_8052408, %v1_8052405
  store i32 %v2_8052417, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052419

dec_label_pc_8052419:                             ; preds = %dec_label_pc_80523f2, %dec_label_pc_8052417
  %v0_805241d = phi i32 [ %v2_8052408, %dec_label_pc_80523f2 ], [ %v2_8052417, %dec_label_pc_8052417 ]
  %v5_805241d = add i32 %v0_805241d, %v1_8052325
  store i32 %v5_805241d, i32* %eax.global-to-local, align 4
  %v1_8052421 = sub i32 0, %v0_80522f1
  store i32 %v1_8052421, i32* %edx.global-to-local, align 4
  %v2_8052429 = and i32 %v5_805241d, %v1_8052421
  store i32 %v2_8052429, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_8052429, 1
  br i1 %tmp91, label %dec_label_pc_8052443, label %dec_label_pc_805242d

dec_label_pc_805242d:                             ; preds = %dec_label_pc_8052419
  store i32 %v2_8052429, i32* %stack_var_-92, align 4
  %v1_8052431 = call i32 @function_8053b0d(i32 %v2_8052429)
  store i32 %v1_8052431, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  store i32 %v1_8052431, i32* @ebx, align 4
  %v10_805243e = icmp eq i32 %v1_8052431, -1
  %v1_8052441 = icmp eq i1 %v10_805243e, false
  br i1 %v1_8052441, label %dec_label_pc_8052499.dec_label_pc_80524a2_crit_edge, label %dec_label_pc_805242d.dec_label_pc_8052443_crit_edge

dec_label_pc_805242d.dec_label_pc_8052443_crit_edge: ; preds = %dec_label_pc_805242d
  %v0_8052443.pre = load i8, i8* @global_var_8055780.62, align 128
  br label %dec_label_pc_8052443

dec_label_pc_8052443:                             ; preds = %dec_label_pc_805242d.dec_label_pc_8052443_crit_edge, %dec_label_pc_8052419
  %v0_805246f = phi i32 [ -1, %dec_label_pc_805242d.dec_label_pc_8052443_crit_edge ], [ %v1_8052421, %dec_label_pc_8052419 ]
  %v0_8052443 = phi i8 [ %v0_8052443.pre, %dec_label_pc_805242d.dec_label_pc_8052443_crit_edge ], [ %v0_805240e, %dec_label_pc_8052419 ]
  %v1_8052443 = urem i8 %v0_8052443, 2
  %v2_8052443 = icmp eq i8 %v1_8052443, 0
  br i1 %v2_8052443, label %dec_label_pc_8052443.dec_label_pc_8052458_crit_edge, label %dec_label_pc_805244c

dec_label_pc_8052443.dec_label_pc_8052458_crit_edge: ; preds = %dec_label_pc_8052443
  %v0_8052458.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052458

dec_label_pc_805244c:                             ; preds = %dec_label_pc_8052443
  %v2_8052450 = add i32 %v1_8052405, %v1_8052325
  store i32 %v2_8052450, i32* %eax.global-to-local, align 4
  %v0_8052452 = load i32, i32* @esi, align 4
  %v2_8052452 = add i32 %v0_8052452, %v2_8052450
  %v5_8052454 = and i32 %v2_8052452, %v1_8052421
  store i32 %v5_8052454, i32* @esi, align 4
  br label %dec_label_pc_8052458

dec_label_pc_8052458:                             ; preds = %dec_label_pc_8052443.dec_label_pc_8052458_crit_edge, %dec_label_pc_805244c
  %v0_8052458 = phi i32 [ %v0_8052458.pre, %dec_label_pc_8052443.dec_label_pc_8052458_crit_edge ], [ %v5_8052454, %dec_label_pc_805244c ]
  %tmp131 = icmp ult i32 %v0_8052458, 1048576
  br i1 %tmp131, label %dec_label_pc_8052460, label %dec_label_pc_8052465

dec_label_pc_8052460:                             ; preds = %dec_label_pc_8052458
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8052465

dec_label_pc_8052465:                             ; preds = %dec_label_pc_8052458, %dec_label_pc_8052460
  %v0_8052479 = phi i32 [ %v0_8052458, %dec_label_pc_8052458 ], [ 1048576, %dec_label_pc_8052460 ]
  %tmp132 = icmp ugt i32 %v0_8052479, %v1_805234f
  br i1 %tmp132, label %dec_label_pc_805246f, label %dec_label_pc_80526a7

dec_label_pc_805246f:                             ; preds = %dec_label_pc_8052465
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805247c = call i32 @function_805365c(i32 0, i32 %v0_8052479, i32 3, i32 34, i32 0, i32 0, i32 %v0_805246f, i32 %v0_805246f)
  store i32 %v8_805247c, i32* %eax.global-to-local, align 4
  store i32 %v8_805247c, i32* @ebx, align 4
  %v10_8052486 = icmp eq i32 %v8_805247c, -1
  br i1 %v10_8052486, label %dec_label_pc_80526a7, label %dec_label_pc_8052499.thread

dec_label_pc_8052499.thread:                      ; preds = %dec_label_pc_805246f
  %v0_805248f = load i8, i8* @global_var_8055780.62, align 1
  %v2_805248f = and i8 %v0_805248f, -2
  store i8 %v2_805248f, i8* @global_var_8055780.62, align 128
  %v1_8052496 = load i32, i32* @esi, align 4
  %v2_8052496 = add i32 %v1_8052496, %v8_805247c
  store i32 %v2_8052496, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80524a2

dec_label_pc_8052499.dec_label_pc_80524a2_crit_edge: ; preds = %dec_label_pc_805242d
  %v1_80524a6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80524a2

dec_label_pc_80524a2:                             ; preds = %dec_label_pc_8052499.dec_label_pc_80524a2_crit_edge, %dec_label_pc_8052499.thread
  %v1_80524a6 = phi i32 [ %v1_8052496, %dec_label_pc_8052499.thread ], [ %v1_80524a6.pre, %dec_label_pc_8052499.dec_label_pc_80524a2_crit_edge ]
  %v0_805256e94 = phi i32 [ %v8_805247c, %dec_label_pc_8052499.thread ], [ %v1_8052431, %dec_label_pc_8052499.dec_label_pc_80524a2_crit_edge ]
  %v0_805256093 = phi i32 [ %v2_8052496, %dec_label_pc_8052499.thread ], [ -1, %dec_label_pc_8052499.dec_label_pc_80524a2_crit_edge ]
  %v0_80524a6 = load i32, i32* @global_var_8055788.59, align 8
  %v2_80524a6 = add i32 %v1_80524a6, %v0_80524a6
  store i32 %v2_80524a6, i32* @global_var_8055788.59, align 8
  %v2_80524ac = add i32 %v1_8052405, %v0_80523f2
  store i32 %v2_80524ac, i32* %ecx.global-to-local, align 4
  %v2_80524ae = sub i32 %v0_805256e94, %v2_80524ac
  %v7_80524ae = icmp ult i32 %v0_805256e94, %v2_80524ac
  %v12_80524ae = icmp eq i32 %v2_80524ae, 0
  %v1_80524b0 = icmp eq i1 %v12_80524ae, false
  br i1 %v1_80524b0, label %dec_label_pc_80524c9, label %dec_label_pc_80524b2

dec_label_pc_80524b2:                             ; preds = %dec_label_pc_80524a2
  %v10_80524b2 = icmp eq i32 %v0_805256093, -1
  %v1_80524b5 = icmp eq i1 %v10_80524b2, false
  br i1 %v1_80524b5, label %dec_label_pc_80524c9, label %dec_label_pc_80524b7

dec_label_pc_80524b7:                             ; preds = %dec_label_pc_80524b2
  %v2_80524b7 = add i32 %v1_80524a6, %v1_8052405
  store i32 %v0_80523f2, i32* %ecx.global-to-local, align 4
  %v1_80524be = or i32 %v2_80524b7, 1
  store i32 %v1_80524be, i32* %eax.global-to-local, align 4
  store i32 %v1_80524be, i32* %v2_80523fb, align 4
  br label %dec_label_pc_80525f6

dec_label_pc_80524c9:                             ; preds = %dec_label_pc_80524b2, %dec_label_pc_80524a2
  %v0_80524c9 = load i8, i8* @global_var_8055780.62, align 1
  %v1_80524c9 = sext i8 %v0_80524c9 to i32
  store i32 %v1_80524c9, i32* %eax.global-to-local, align 4
  %v2_80524ce = urem i8 %v0_80524c9, 2
  %v3_80524ce = icmp eq i8 %v2_80524ce, 0
  br i1 %v3_80524ce, label %dec_label_pc_80524e2, label %dec_label_pc_80524d2

dec_label_pc_80524d2:                             ; preds = %dec_label_pc_80524c9
  br i1 %v2_8052405, label %dec_label_pc_80524e2, label %dec_label_pc_80524d6

dec_label_pc_80524d6:                             ; preds = %dec_label_pc_80524d2
  %v1_80524d8 = icmp eq i1 %v7_80524ae, false
  br i1 %v1_80524d8, label %dec_label_pc_80524e2, label %dec_label_pc_80524da

dec_label_pc_80524da:                             ; preds = %dec_label_pc_80524d6
  %v1_80524da = and i32 %v1_80524c9, -2
  %v4_80524da = trunc i32 %v1_80524da to i8
  store i32 %v1_80524da, i32* %eax.global-to-local, align 4
  store i8 %v4_80524da, i8* @global_var_8055780.62, align 128
  br label %dec_label_pc_80524e2

dec_label_pc_80524e2:                             ; preds = %dec_label_pc_80524d6, %dec_label_pc_80524d2, %dec_label_pc_80524c9, %dec_label_pc_80524da
  %v0_80524e2 = phi i8 [ %v0_80524c9, %dec_label_pc_80524d6 ], [ %v0_80524c9, %dec_label_pc_80524d2 ], [ %v0_80524c9, %dec_label_pc_80524c9 ], [ %v4_80524da, %dec_label_pc_80524da ]
  %v1_80524e2 = urem i8 %v0_80524e2, 2
  %v2_80524e2 = icmp eq i8 %v1_80524e2, 0
  br i1 %v2_80524e2, label %dec_label_pc_8052560, label %dec_label_pc_80524eb

dec_label_pc_80524eb:                             ; preds = %dec_label_pc_80524e2
  br i1 %v2_8052405, label %dec_label_pc_80524f9, label %dec_label_pc_80524ef

dec_label_pc_80524ef:                             ; preds = %dec_label_pc_80524eb
  store i32 %v2_80524ae, i32* %eax.global-to-local, align 4
  %v2_80524f3 = add i32 %v2_80524a6, %v2_80524ae
  store i32 %v2_80524f3, i32* @global_var_8055788.59, align 8
  br label %dec_label_pc_80524f9

dec_label_pc_80524f9:                             ; preds = %dec_label_pc_80524eb, %dec_label_pc_80524ef
  %v1_80524fb = urem i32 %v0_805256e94, 8
  %v2_80524fb = icmp eq i32 %v1_80524fb, 0
  store i32 %v1_80524fb, i32* %edx.global-to-local, align 4
  %v1_80524fe = icmp eq i1 %v2_80524fb, false
  br i1 %v1_80524fe, label %dec_label_pc_8052506, label %dec_label_pc_8052500

dec_label_pc_8052500:                             ; preds = %dec_label_pc_80524f9
  store i32 %v0_805256e94, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052510

dec_label_pc_8052506:                             ; preds = %dec_label_pc_80524f9
  %v2_805250b = sub nsw i32 8, %v1_80524fb
  store i32 %v2_805250b, i32* %eax.global-to-local, align 4
  %v2_805250d = add i32 %v2_805250b, %v0_805256e94
  store i32 %v2_805250d, i32* @edi, align 4
  br label %dec_label_pc_8052510

dec_label_pc_8052510:                             ; preds = %dec_label_pc_8052500, %dec_label_pc_8052506
  %v0_8052513 = phi i32 [ 0, %dec_label_pc_8052500 ], [ %v2_805250b, %dec_label_pc_8052506 ]
  %v2_8052510 = add i32 %v1_80524a6, %v0_805256e94
  %v2_8052513 = add i32 %v0_8052513, %v1_8052405
  store i32 %v2_8052513, i32* %ecx.global-to-local, align 4
  %v2_805251c = add i32 %v2_8052513, %v2_8052510
  store i32 %v2_805251c, i32* %edx.global-to-local, align 4
  %v2_8052522 = add i32 %v2_805251c, %v1_8052325
  %v5_8052525 = and i32 %v2_8052522, %v1_8052421
  %v2_805252c = sub i32 %v5_8052525, %v2_805251c
  store i32 %v2_805252c, i32* %eax.global-to-local, align 4
  %v2_805252e = add i32 %v2_805252c, %v2_8052513
  store i32 %v2_805252e, i32* @esi, align 4
  store i32 %v2_805252e, i32* %stack_var_-92, align 4
  %v1_8052532 = call i32 @function_8053b0d(i32 %v2_805252e)
  store i32 %v1_8052532, i32* %eax.global-to-local, align 4
  store i32 %v1_8052532, i32* %edx.global-to-local, align 4
  %v10_805253c = icmp eq i32 %v1_8052532, -1
  %v1_805253f = icmp eq i1 %v10_805253c, false
  br i1 %v1_805253f, label %dec_label_pc_805254f, label %dec_label_pc_8052541

dec_label_pc_8052541:                             ; preds = %dec_label_pc_8052510
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052546 = call i32 @function_8053b0d(i32 0)
  store i32 %v1_8052546, i32* %eax.global-to-local, align 4
  store i32 %v1_8052546, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052583

dec_label_pc_805254f:                             ; preds = %dec_label_pc_8052510
  %v1_805254f = load i32, i32* @ebx, align 4
  %v7_805254f = icmp ult i32 %v1_8052532, %v1_805254f
  %v1_8052551 = icmp eq i1 %v7_805254f, false
  br i1 %v1_8052551, label %dec_label_pc_8052588, label %dec_label_pc_8052553

dec_label_pc_8052553:                             ; preds = %dec_label_pc_805254f
  %v0_8052553 = load i8, i8* @global_var_8055780.62, align 1
  %v2_8052553 = and i8 %v0_8052553, -2
  store i8 %v2_8052553, i8* @global_var_8055780.62, align 128
  store i32 %v2_8052510, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052567

dec_label_pc_8052560:                             ; preds = %dec_label_pc_80524e2
  %v10_8052560 = icmp eq i32 %v0_805256093, -1
  br i1 %v10_8052560, label %dec_label_pc_805256b, label %dec_label_pc_8052565

dec_label_pc_8052565:                             ; preds = %dec_label_pc_8052560
  store i32 %v0_805256e94, i32* @edi, align 4
  br label %dec_label_pc_8052567

dec_label_pc_8052567:                             ; preds = %dec_label_pc_8052553, %dec_label_pc_8052565
  %v0_805258858 = phi i32 [ %v2_8052510, %dec_label_pc_8052553 ], [ %v0_805256093, %dec_label_pc_8052565 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052588

dec_label_pc_805256b:                             ; preds = %dec_label_pc_8052560
  store i32 %v0_805256e94, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8052572 = call i32 @function_8053b0d(i32 0)
  store i32 %v1_8052572, i32* %edx.global-to-local, align 4
  %v1_8052579 = load i32, i32* @ebx, align 4
  %v2_8052579 = sub i32 %v1_8052572, %v1_8052579
  %v1_805257b = load i32, i32* @esi, align 4
  %v2_805257b = sub i32 %v2_8052579, %v1_805257b
  store i32 %v2_805257b, i32* %eax.global-to-local, align 4
  %v0_805257d = load i32, i32* @global_var_8055788.59, align 8
  %v2_805257d = add i32 %v0_805257d, %v2_805257b
  store i32 %v2_805257d, i32* @global_var_8055788.59, align 8
  br label %dec_label_pc_8052583

dec_label_pc_8052583:                             ; preds = %dec_label_pc_8052541, %dec_label_pc_805256b
  %v0_805258857 = phi i32 [ %v1_8052546, %dec_label_pc_8052541 ], [ %v1_8052572, %dec_label_pc_805256b ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052588

dec_label_pc_8052588:                             ; preds = %dec_label_pc_805254f, %dec_label_pc_8052567, %dec_label_pc_8052583
  %v0_805258d = phi i32 [ %v1_8052532, %dec_label_pc_805254f ], [ %v0_805258858, %dec_label_pc_8052567 ], [ %v0_805258857, %dec_label_pc_8052583 ]
  %v10_8052588 = icmp eq i32 %v0_805258d, -1
  br i1 %v10_8052588, label %dec_label_pc_80525f6, label %dec_label_pc_805258d

dec_label_pc_805258d:                             ; preds = %dec_label_pc_8052588
  %v1_805258d = load i32, i32* @edi, align 4
  %v2_805258d = sub i32 %v0_805258d, %v1_805258d
  store i32 %v2_805258d, i32* %edx.global-to-local, align 4
  store i32 %v1_805258d, i32* @global_var_805544c.47, align 4
  %v1_8052595 = load i32, i32* @esi, align 4
  %v2_8052595 = add i32 %v1_8052595, %v2_805258d
  %v1_8052598 = or i32 %v2_8052595, 1
  store i32 %v1_8052598, i32* %eax.global-to-local, align 4
  %v2_805259b = add i32 %v1_805258d, 4
  %v3_805259b = inttoptr i32 %v2_805259b to i32*
  store i32 %v1_8052598, i32* %v3_805259b, align 4
  %v0_805259e = load i32, i32* @global_var_8055788.59, align 8
  %v1_805259e = load i32, i32* @esi, align 4
  %v2_805259e = add i32 %v1_805259e, %v0_805259e
  store i32 %v2_805259e, i32* @global_var_8055788.59, align 8
  br i1 %v2_8052405, label %dec_label_pc_80525f6, label %dec_label_pc_80525a8

dec_label_pc_80525a8:                             ; preds = %dec_label_pc_805258d
  %v1_80525a8 = add i32 %v1_8052405, -12
  store i32 %v0_80523f2, i32* %ecx.global-to-local, align 4
  %v1_80525af = and i32 %v1_80525a8, -8
  store i32 %v1_80525af, i32* %eax.global-to-local, align 4
  %v1_80525b4 = or i32 %v1_80525af, 1
  store i32 %v1_80525b4, i32* %edx.global-to-local, align 4
  %v5_80525b7 = icmp ult i32 %v1_80525af, 15
  store i32 %v1_80525b4, i32* %v2_80523fb, align 4
  %v0_80525bd = load i32, i32* %ecx.global-to-local, align 4
  %v1_80525bd = load i32, i32* %eax.global-to-local, align 4
  %v2_80525bd = add i32 %v0_80525bd, 4
  %v3_80525bd = add i32 %v2_80525bd, %v1_80525bd
  %v4_80525bd = inttoptr i32 %v3_80525bd to i32*
  store i32 5, i32* %v4_80525bd, align 4
  %v0_80525c5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80525c5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80525c5 = add i32 %v0_80525c5, 8
  %v3_80525c5 = add i32 %v2_80525c5, %v1_80525c5
  %v4_80525c5 = inttoptr i32 %v3_80525c5 to i32*
  store i32 5, i32* %v4_80525c5, align 4
  br i1 %v5_80525b7, label %dec_label_pc_80525f6, label %dec_label_pc_80525cf

dec_label_pc_80525cf:                             ; preds = %dec_label_pc_80525a8
  %v0_80525d2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80525d4 = add i32 %v0_80525d2, 8
  store i32 %v1_80525d4, i32* %eax.global-to-local, align 4
  %v0_80525d7 = load i32, i32* @global_var_8055764.63, align 4
  store i32 %v0_80525d7, i32* @ebx, align 4
  store i32 %v1_80525d4, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8055764.63, align 4
  %v1_80525e8 = call i32 @function_8052d20(i32 %v1_80525d4)
  store i32 %v1_80525e8, i32* %eax.global-to-local, align 4
  %v0_80525ed = load i32, i32* @ebx, align 4
  store i32 %v0_80525ed, i32* @global_var_8055764.63, align 4
  br label %dec_label_pc_80525f6

dec_label_pc_80525f6:                             ; preds = %dec_label_pc_80525a8, %dec_label_pc_805258d, %dec_label_pc_8052588, %dec_label_pc_80524b7, %dec_label_pc_80525cf
  %v0_80525f6 = load i32, i32* @global_var_8055788.59, align 8
  store i32 %v0_80525f6, i32* %eax.global-to-local, align 4
  %v1_80525fb = load i32, i32* @global_var_805578c.64, align 4
  %tmp133 = icmp ugt i32 %v0_80525f6, %v1_80525fb
  br i1 %tmp133, label %dec_label_pc_8052603, label %dec_label_pc_8052608

dec_label_pc_8052603:                             ; preds = %dec_label_pc_80525f6
  store i32 %v0_80525f6, i32* @global_var_805578c.64, align 4
  br label %dec_label_pc_8052608

dec_label_pc_8052608:                             ; preds = %dec_label_pc_80525f6, %dec_label_pc_8052603
  %v1_8052608 = load i32, i32* @global_var_8055784.57, align 4
  %v2_8052608 = add i32 %v1_8052608, %v0_80525f6
  store i32 %v2_8052608, i32* %eax.global-to-local, align 4
  %v1_805260e = load i32, i32* @global_var_8055794.60, align 4
  %tmp134 = icmp ugt i32 %v2_8052608, %v1_805260e
  br i1 %tmp134, label %dec_label_pc_8052616, label %dec_label_pc_805261b

dec_label_pc_8052616:                             ; preds = %dec_label_pc_8052608
  store i32 %v2_8052608, i32* @global_var_8055794.60, align 4
  br label %dec_label_pc_805261b

dec_label_pc_805261b:                             ; preds = %dec_label_pc_8052608, %dec_label_pc_8052616
  %v0_805261b = load i32, i32* @global_var_805544c.47, align 4
  store i32 %v0_805261b, i32* @ebx, align 4
  %v1_8052621 = add i32 %v0_805261b, 4
  %v2_8052621 = inttoptr i32 %v1_8052621 to i32*
  %v3_8052621 = load i32, i32* %v2_8052621, align 4
  %v1_8052624 = and i32 %v3_8052621, -4
  store i32 %v1_8052624, i32* %ecx.global-to-local, align 4
  %v10_8052627 = icmp ult i32 %v1_8052624, %v1_80522c4
  br i1 %v10_8052627, label %dec_label_pc_80526a7, label %dec_label_pc_805262d

dec_label_pc_805262d:                             ; preds = %dec_label_pc_805261b
  store i32 %v1_805234f, i32* %esi.global-to-local, align 4
  %v2_8052633 = sub i32 %v1_8052624, %v1_805234f
  store i32 %v2_8052633, i32* %ecx.global-to-local, align 4
  %v2_8052635 = add i32 %v0_805261b, %v1_805234f
  store i32 %v2_8052635, i32* %edx.global-to-local, align 4
  %v1_8052638 = or i32 %v1_805234f, 1
  store i32 %v1_8052638, i32* %eax.global-to-local, align 4
  store i32 %v2_8052635, i32* @global_var_805544c.47, align 4
  store i32 %v1_8052638, i32* %v2_8052621, align 4
  %v0_8052644.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052644

dec_label_pc_8052644:                             ; preds = %dec_label_pc_80522d5, %dec_label_pc_805262d
  %v0_8052644 = phi i32 [ %v5_80522e8, %dec_label_pc_80522d5 ], [ %v0_8052644.pre, %dec_label_pc_805262d ]
  %v1_8052644 = or i32 %v0_8052644, 1
  store i32 %v1_8052644, i32* %ecx.global-to-local, align 4
  %v0_8052647 = load i32, i32* @ebx, align 4
  %v1_8052647 = add i32 %v0_8052647, 8
  store i32 %v1_8052647, i32* %ebx.global-to-local, align 4
  %v1_805264a = load i32, i32* %edx.global-to-local, align 4
  %v2_805264a = add i32 %v1_805264a, 4
  %v3_805264a = inttoptr i32 %v2_805264a to i32*
  store i32 %v1_8052644, i32* %v3_805264a, align 4
  br label %dec_label_pc_80526b4

dec_label_pc_805264f:                             ; preds = %dec_label_pc_805208f
  %v5_8052655 = sub i32 %v1_8052072, %v1_805234f
  store i32 %v5_8052655, i32* %eax.global-to-local, align 4
  %v2_8052659 = add i32 %v1_8052666, %v1_805234f
  store i32 %v2_8052659, i32* %edx.global-to-local, align 4
  %v1_805265d = or i32 %v1_805234f, 1
  store i32 %v2_8052659, i32* @global_var_8055450.48, align 16
  store i32 %v1_805265d, i32* %v2_805206c, align 4
  %v0_8052669 = load i32, i32* %eax.global-to-local, align 4
  %v0_805266b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805266b, i32* @global_var_805545c.65, align 4
  %v1_8052671 = or i32 %v0_8052669, 1
  store i32 %v1_8052671, i32* %ecx.global-to-local, align 4
  store i32 %v0_805266b, i32* @global_var_8055460.50, align 32
  %v1_805267a = add i32 %v0_805266b, 8
  %v2_805267a = inttoptr i32 %v1_805267a to i32*
  store i32 ptrtoint (i32* @global_var_8055454.49 to i32), i32* %v2_805267a, align 4
  %v0_8052681 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052681 = add i32 %v0_8052681, 12
  %v2_8052681 = inttoptr i32 %v1_8052681 to i32*
  store i32 ptrtoint (i32* @global_var_8055454.49 to i32), i32* %v2_8052681, align 4
  %v0_8052688 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052688 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052688 = add i32 %v1_8052688, 4
  %v3_8052688 = inttoptr i32 %v2_8052688 to i32*
  store i32 %v0_8052688, i32* %v3_8052688, align 4
  %v0_805268b = load i32, i32* %eax.global-to-local, align 4
  %v1_805268b = load i32, i32* %edx.global-to-local, align 4
  %v3_805268b = add i32 %v1_805268b, %v0_805268b
  %v4_805268b = inttoptr i32 %v3_805268b to i32*
  store i32 %v0_805268b, i32* %v4_805268b, align 4
  br label %dec_label_pc_8052699

dec_label_pc_8052690:                             ; preds = %dec_label_pc_805209e
  store i32 %v1_805234f, i32* %ebx.global-to-local, align 4
  %v0_8052694 = load i32, i32* @ebp, align 4
  %v2_8052694 = or i32 %v1_805234f, 4
  %v3_8052694 = add i32 %v0_8052694, %v2_8052694
  %v4_8052694 = inttoptr i32 %v3_8052694 to i32*
  %v5_8052694 = load i32, i32* %v4_8052694, align 4
  %v6_8052694 = or i32 %v5_8052694, 1
  store i32 %v6_8052694, i32* %v4_8052694, align 4
  br label %dec_label_pc_8052699

dec_label_pc_8052699:                             ; preds = %dec_label_pc_805264f, %dec_label_pc_8052690
  %v0_8052699 = load i32, i32* @ebp, align 4
  %v1_8052699 = add i32 %v0_8052699, 8
  store i32 %v1_8052699, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526b4

dec_label_pc_805269e:                             ; preds = %dec_label_pc_805218e
  %v1_805269e = load i32, i32* @ebx, align 4
  %v2_805269e = add i32 %v0_805219d, 4
  %v3_805269e = add i32 %v2_805269e, %v1_805269e
  %v4_805269e = inttoptr i32 %v3_805269e to i32*
  %v5_805269e = load i32, i32* %v4_805269e, align 4
  %v6_805269e = or i32 %v5_805269e, 1
  store i32 %v6_805269e, i32* %v4_805269e, align 4
  br label %dec_label_pc_80526a3

dec_label_pc_80526a3:                             ; preds = %dec_label_pc_80521a6, %dec_label_pc_805269e
  %v0_80526a3 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80526a3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80526b4

dec_label_pc_80526a7:                             ; preds = %dec_label_pc_8052465, %dec_label_pc_805261b, %dec_label_pc_805246f
  %v0_80526a7 = load i32, i32* %stack_var_-92, align 4
  %v1_80526a7 = call i32 @function_8051afd(i32 %v0_80526a7)
  store i32 %v1_80526a7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80526ae = inttoptr i32 %v1_80526a7 to i32*
  store i32 12, i32* %v1_80526ae, align 4
  br label %dec_label_pc_80526b4

dec_label_pc_80526b4:                             ; preds = %dec_label_pc_80526a3, %dec_label_pc_8052699, %dec_label_pc_8052644, %dec_label_pc_8052300, %dec_label_pc_80522b2, %dec_label_pc_8052039, %dec_label_pc_80526a7
  store i32 %v2_8051f70, i32* @eax, align 4
  store i32 %v2_8051f70, i32* %stack_var_-92, align 4
  %v2_80526bd = call i32 @function_8053344(i32 %v2_8051f70, i32 1)
  store i32 %v2_80526bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80526c5

dec_label_pc_80526c5:                             ; preds = %dec_label_pc_8051f8e, %dec_label_pc_80526b4
  %v0_80526c8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80526c8, i32* %eax.global-to-local, align 4
  %v2_80526ca = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80526ca, i32* %ebx.global-to-local, align 4
  store i32 %v0_8051f5d, i32* @esi, align 4
  store i32 %v0_8051f5c, i32* @edi, align 4
  store i32 %v0_8051f5b, i32* @ebp, align 4
  ret i32 %v0_80526c8

; uselistorder directives
  uselistorder i32 %v0_805268b, { 1, 0 }
  uselistorder i32 %v0_805266b, { 1, 0, 2 }
  uselistorder i32 %v2_8052608, { 1, 0, 2 }
  uselistorder i32 %v0_80525f6, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805258d, { 1, 0 }
  uselistorder i32 %v2_805257b, { 1, 0 }
  uselistorder i32 %v1_8052532, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_805251c, { 1, 0, 2 }
  uselistorder i32 %v2_8052510, { 1, 2, 0 }
  uselistorder i32 %v2_805250b, { 1, 0, 2 }
  uselistorder i32 %v1_80524fb, { 2, 1, 0 }
  uselistorder i8 %v0_80524c9, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80524ac, { 1, 0, 2 }
  uselistorder i32 %v0_805256093, { 2, 0, 1 }
  uselistorder i32 %v0_805256e94, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_80524a6, { 2, 1, 0 }
  uselistorder i32 %v8_805247c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8052479, { 1, 0 }
  uselistorder i32 %v0_8052458, { 1, 0 }
  uselistorder i32 %v2_8052429, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8052421, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_805240e, { 1, 0 }
  uselistorder i1 %v2_8052405, { 2, 1, 0 }
  uselistorder i32 %v1_8052405, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v0_80523f2, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_80523d6, { 1, 0, 2 }
  uselistorder i32 %v2_80523c2, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805238b, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805237f, { 2, 1, 0 }
  uselistorder i32 %v8_805236e, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 %v2_8052355, { 1, 0, 2 }
  uselistorder i32 %v0_80522f1, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80522c4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80522ba, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_80522ac, { 1, 0 }
  uselistorder i32 %v1_8052243, { 1, 0 }
  uselistorder i32 %v3_8052237, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8052247, { 1, 0 }
  uselistorder i32 %v2_8052231, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805222e7, { 1, 0 }
  uselistorder i32 %v2_8052223, { 1, 0 }
  uselistorder i32 %v1_8052207, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052203, { 2, 1, 0 }
  uselistorder i32 %v1_80521ff, { 1, 0 }
  uselistorder i32 %v1_80521f3, { 2, 1, 0 }
  uselistorder i32 %v2_80521e9, { 1, 0 }
  uselistorder i32 %v1_80521e6, { 1, 2, 0 }
  uselistorder i32 %v4_8052184, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_80521cf, { 1, 0 }
  uselistorder i32 %v0_805219d, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8052170, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805213d, { 0, 2, 1 }
  uselistorder i32 %v2_8052121, { 1, 0 }
  uselistorder i32 %v1_8052117, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8052112.lcssa, { 1, 0 }
  uselistorder i32 %v3_8052102, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80520f9, { 1, 0, 2 }
  uselistorder i32 %v2_80520d5, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80520bd, { 2, 1, 0 }
  uselistorder i32 %v0_80520a9, { 2, 0, 3, 1 }
  uselistorder i32 %v3_805206f, { 1, 0, 2 }
  uselistorder i32 %v1_8052666, { 0, 1, 3, 2 }
  uselistorder i32 %v0_805213d9, { 1, 0, 2 }
  uselistorder i32 %v3_805201c, { 1, 0, 2 }
  uselistorder i32 %v2_805200e, { 2, 1, 0 }
  uselistorder i32 %v2_8051fe9, { 2, 1, 0 }
  uselistorder i8 %v0_8051fb7, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805234f, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8051fa0, { 0, 2, 1 }
  uselistorder i32 %v0_8051f89, { 1, 0 }
  uselistorder i32 %v2_8051f70, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 22, 21, 23, 24, 28, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 49, 50, 52 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 17, 10, 18, 11, 12, 13, 14, 15, 16, 0, 19, 20, 21, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_8055780.62, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_805365c, { 1, 0 }
  uselistorder i32 134566996, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8055460.50, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_8051f35, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_805544c.47 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805544c.47 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80526c5, { 1, 0 }
  uselistorder label %dec_label_pc_80526b4, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80526a7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80526a3, { 1, 0 }
  uselistorder label %dec_label_pc_8052699, { 1, 0 }
  uselistorder label %dec_label_pc_8052644, { 1, 0 }
  uselistorder label %dec_label_pc_805261b, { 1, 0 }
  uselistorder label %dec_label_pc_8052608, { 1, 0 }
  uselistorder label %dec_label_pc_80525f6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052588, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052583, { 1, 0 }
  uselistorder label %dec_label_pc_8052567, { 1, 0 }
  uselistorder label %dec_label_pc_8052510, { 1, 0 }
  uselistorder label %dec_label_pc_80524f9, { 1, 0 }
  uselistorder label %dec_label_pc_80524e2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052465, { 1, 0 }
  uselistorder label %dec_label_pc_8052458, { 1, 0 }
  uselistorder label %dec_label_pc_8052419, { 1, 0 }
  uselistorder label %dec_label_pc_80523f2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80523d6, { 1, 0 }
  uselistorder label %dec_label_pc_80523bd, { 1, 0 }
  uselistorder label %dec_label_pc_805239f, { 1, 0 }
  uselistorder label %dec_label_pc_80522ba, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80522b2, { 1, 0 }
  uselistorder label %dec_label_pc_805229b, { 1, 0 }
  uselistorder label %dec_label_pc_805222e, { 1, 0 }
  uselistorder label %dec_label_pc_8052233.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8052207, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805218e, { 1, 0 }
  uselistorder label %dec_label_pc_805213d, { 1, 0 }
  uselistorder label %dec_label_pc_8052115, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80520fe, { 1, 0 }
  uselistorder label %dec_label_pc_805206c, { 1, 0 }
  uselistorder label %dec_label_pc_805213d.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052039, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8051fb7, { 1, 0 }
}

define i32 @function_80526cf(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80526cf:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80526cf = load i32, i32* @edi, align 4
  %v0_80526d1 = load i32, i32* @ebx, align 4
  %v12_80526d2 = ptrtoint i32* %stack_var_-28 to i32
  %v4_80526d5 = trunc i64 %arg1 to i32
  %sext = mul i64 %arg1, 4294967296
  %v2_80526df = sdiv i64 %sext, 4294967296
  %v3_80526df = sext i32 %arg2 to i64
  %v4_80526df = mul nsw i64 %v3_80526df, %v2_80526df
  %v5_80526df = trunc i64 %v4_80526df to i32
  store i32 %v5_80526df, i32* @ebx, align 4
  %v2_80526e2 = icmp eq i32 %v4_80526d5, 0
  br i1 %v2_80526e2, label %dec_label_pc_8052704, label %dec_label_pc_80526e6

dec_label_pc_80526e6:                             ; preds = %dec_label_pc_80526cf
  store i32 %v4_80526d5, i32* @edi, align 4
  %div = udiv i32 %v5_80526df, %v4_80526d5
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_80526ee = icmp eq i32 %div, %arg2
  br i1 %v12_80526ee, label %dec_label_pc_8052704, label %dec_label_pc_80526f2

dec_label_pc_80526f2:                             ; preds = %dec_label_pc_80526e6
  %v1_80526f2 = call i32 @function_8051afd(i32 %v0_80526d1)
  store i32 %v1_80526f2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80526f9 = inttoptr i32 %v1_80526f2 to i32*
  store i32 12, i32* %v1_80526f9, align 4
  br label %dec_label_pc_80527ba

dec_label_pc_8052704:                             ; preds = %dec_label_pc_80526e6, %dec_label_pc_80526cf
  store i32 %v12_80526d2, i32* @eax, align 4
  %v2_8052714 = call i32 @function_8053344(i32 %v12_80526d2, i32 134558529)
  store i32 %v2_8052714, i32* %eax.global-to-local, align 4
  %v1_8052720 = call i32 @function_8053341(i32 ptrtoint (i32* @global_var_805503c.45 to i32))
  store i32 %v1_8052720, i32* %eax.global-to-local, align 4
  %v0_8052725 = load i32, i32* @ebx, align 4
  %v1_8052728 = call i32 @function_8051f5b(i32 %v0_8052725)
  store i32 %v1_8052728, i32* %eax.global-to-local, align 4
  store i32 %v1_8052728, i32* %ebx.global-to-local, align 4
  %v1_8052732 = icmp eq i32 %v1_8052728, 0
  br i1 %v1_8052732, label %dec_label_pc_80527a9, label %dec_label_pc_8052736

dec_label_pc_8052736:                             ; preds = %dec_label_pc_8052704
  %v1_8052736 = add i32 %v1_8052728, -4
  %v2_8052736 = inttoptr i32 %v1_8052736 to i32*
  %v3_8052736 = load i32, i32* %v2_8052736, align 4
  store i32 %v3_8052736, i32* %eax.global-to-local, align 4
  %v2_8052739 = and i32 %v3_8052736, 2
  %v3_8052739 = icmp eq i32 %v2_8052739, 0
  %v1_805273b = icmp eq i1 %v3_8052739, false
  br i1 %v1_805273b, label %dec_label_pc_80527a9, label %dec_label_pc_805273d

dec_label_pc_805273d:                             ; preds = %dec_label_pc_8052736
  %v1_805273d3 = add i32 %v3_8052736, -4
  %v1_8052740 = and i32 %v1_805273d3, -4
  %v2_8052745 = udiv i32 %v1_8052740, 4
  store i32 %v2_8052745, i32* %eax.global-to-local, align 4
  %v5_8052748 = icmp ult i32 %v1_8052740, 36
  %tmp = and i32 %v1_805273d3, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_805274b = or i1 %v5_8052748, %tmp18
  br i1 %v2_805274b, label %dec_label_pc_805275c, label %dec_label_pc_805274d

dec_label_pc_805274d:                             ; preds = %dec_label_pc_805273d
  %v3_8052752 = inttoptr i32 %v1_8052728 to i8*
  %v4_8052752 = call i32 @function_8051b4e(i8* %v3_8052752, i32 0, i32 %v1_8052740)
  store i32 %v4_8052752, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527a9

dec_label_pc_805275c:                             ; preds = %dec_label_pc_805273d
  %v1_805275c = inttoptr i32 %v1_8052728 to i32*
  store i32 0, i32* %v1_805275c, align 4
  %v0_8052762 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052762 = add i32 %v0_8052762, 4
  %v2_8052762 = inttoptr i32 %v1_8052762 to i32*
  store i32 0, i32* %v2_8052762, align 4
  %v0_8052769 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052769 = add i32 %v0_8052769, 8
  %v2_8052769 = inttoptr i32 %v1_8052769 to i32*
  store i32 0, i32* %v2_8052769, align 4
  %v0_8052770 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_8052770, 5
  br i1 %tmp15, label %dec_label_pc_80527a9, label %dec_label_pc_8052775

dec_label_pc_8052775:                             ; preds = %dec_label_pc_805275c
  %v0_8052775 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052775 = add i32 %v0_8052775, 12
  %v2_8052775 = inttoptr i32 %v1_8052775 to i32*
  store i32 0, i32* %v2_8052775, align 4
  %v0_805277c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805277c = add i32 %v0_805277c, 16
  %v2_805277c = inttoptr i32 %v1_805277c to i32*
  store i32 0, i32* %v2_805277c, align 4
  %v0_8052783 = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_8052783, 7
  br i1 %tmp16, label %dec_label_pc_80527a9, label %dec_label_pc_8052788

dec_label_pc_8052788:                             ; preds = %dec_label_pc_8052775
  %v0_8052788 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052788 = add i32 %v0_8052788, 20
  %v2_8052788 = inttoptr i32 %v1_8052788 to i32*
  store i32 0, i32* %v2_8052788, align 4
  %v0_805278f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805278f = add i32 %v0_805278f, 24
  %v2_805278f = inttoptr i32 %v1_805278f to i32*
  store i32 0, i32* %v2_805278f, align 4
  %v0_8052796 = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_8052796, 9
  br i1 %tmp17, label %dec_label_pc_80527a9, label %dec_label_pc_805279b

dec_label_pc_805279b:                             ; preds = %dec_label_pc_8052788
  %v0_805279b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805279b = add i32 %v0_805279b, 28
  %v2_805279b = inttoptr i32 %v1_805279b to i32*
  store i32 0, i32* %v2_805279b, align 4
  %v0_80527a2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80527a2 = add i32 %v0_80527a2, 32
  %v2_80527a2 = inttoptr i32 %v1_80527a2 to i32*
  store i32 0, i32* %v2_80527a2, align 4
  br label %dec_label_pc_80527a9

dec_label_pc_80527a9:                             ; preds = %dec_label_pc_8052788, %dec_label_pc_8052775, %dec_label_pc_805275c, %dec_label_pc_8052736, %dec_label_pc_8052704, %dec_label_pc_805274d, %dec_label_pc_805279b
  store i32 %v12_80526d2, i32* @eax, align 4
  %v2_80527b2 = call i32 @function_8053344(i32 %v12_80526d2, i32 1)
  store i32 %v2_80527b2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527ba

dec_label_pc_80527ba:                             ; preds = %dec_label_pc_80526f2, %dec_label_pc_80527a9
  %v0_80527bd = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80527bd, i32* %eax.global-to-local, align 4
  store i32 %v0_80526d1, i32* @ebx, align 4
  store i32 %v0_80526cf, i32* @edi, align 4
  ret i32 %v0_80527bd

; uselistorder directives
  uselistorder i32 %v1_8052740, { 2, 1, 0 }
  uselistorder i32 %v1_8052728, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_80527ba, { 1, 0 }
  uselistorder label %dec_label_pc_80527a9, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_80527c3(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80527c3:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80527c6 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_80527ce = icmp eq i32* %arg1, null
  %v1_80527d3 = icmp eq i1 %v4_80527ce, false
  br i1 %v1_80527d3, label %dec_label_pc_80527e5, label %dec_label_pc_80527d5

dec_label_pc_80527d5:                             ; preds = %dec_label_pc_80527c3
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_80527d9 = call i32 @function_8051f5b(i32 %arg2)
  store i32 %v1_80527d9, i32* %eax.global-to-local, align 4
  store i32 %v1_80527d9, i32* @ebx, align 4
  br label %dec_label_pc_8052ade

dec_label_pc_80527e5:                             ; preds = %dec_label_pc_80527c3
  %v1_80527e5 = icmp eq i32 %arg2, 0
  %v1_80527e7 = icmp eq i1 %v1_80527e5, false
  br i1 %v1_80527e7, label %dec_label_pc_80527fa, label %dec_label_pc_80527e9

dec_label_pc_80527e9:                             ; preds = %dec_label_pc_80527e5
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_80527f0 = call i32 @function_8052d20(i32 %tmp7)
  store i32 %v1_80527f0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ade

dec_label_pc_80527fa:                             ; preds = %dec_label_pc_80527e5
  %v2_8052805 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052805, i32* @eax, align 4
  store i32 %v2_8052805, i32* %stack_var_-60, align 4
  %v2_805280a = call i32 @function_8053344(i32 %v2_8052805, i32 134558529)
  store i32 %v2_805280a, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805503c.45 to i32), i32* %stack_var_-60, align 4
  %v1_8052816 = call i32 @function_8053341(i32 ptrtoint (i32* @global_var_805503c.45 to i32))
  store i32 %v1_8052816, i32* %eax.global-to-local, align 4
  %v0_805281e = load i32, i32* @ebx, align 4
  %tmp20 = icmp ult i32 %v0_805281e, -32
  br i1 %tmp20, label %dec_label_pc_8052835, label %dec_label_pc_8052823

dec_label_pc_8052823:                             ; preds = %dec_label_pc_80527fa
  %v0_8052823 = load i32, i32* %stack_var_-60, align 4
  %v1_8052823 = call i32 @function_8051afd(i32 %v0_8052823)
  store i32 %v1_8052823, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805282a = inttoptr i32 %v1_8052823 to i32*
  store i32 12, i32* %v1_805282a, align 4
  br label %dec_label_pc_8052ae1

dec_label_pc_8052835:                             ; preds = %dec_label_pc_80527fa
  %v1_8052835 = add i32 %v0_805281e, 11
  %tmp21 = icmp ult i32 %v1_8052835, 16
  br i1 %tmp21, label %dec_label_pc_805284c, label %dec_label_pc_8052845

dec_label_pc_8052845:                             ; preds = %dec_label_pc_8052835
  %v1_8052845 = and i32 %v1_8052835, -8
  br label %dec_label_pc_805284c

dec_label_pc_805284c:                             ; preds = %dec_label_pc_8052835, %dec_label_pc_8052845
  %stack_var_-40.0 = phi i32 [ %v1_8052845, %dec_label_pc_8052845 ], [ 16, %dec_label_pc_8052835 ]
  %storemerge27 = phi i32 [ %v1_8052845, %dec_label_pc_8052845 ], [ %v1_8052835, %dec_label_pc_8052835 ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v1_8052850 = add i32 %tmp7, -8
  store i32 %v1_8052850, i32* @edi, align 4
  %v1_8052853 = add i32 %tmp7, -4
  %v2_8052853 = inttoptr i32 %v1_8052853 to i32*
  %v3_8052853 = load i32, i32* %v2_8052853, align 4
  store i32 %v3_8052853, i32* %edx.global-to-local, align 4
  %v1_8052858 = and i32 %v3_8052853, -4
  store i32 %v1_8052858, i32* %eax.global-to-local, align 4
  %v2_805285f = and i32 %v3_8052853, 2
  %v3_805285f = icmp eq i32 %v2_805285f, 0
  %v1_8052862 = icmp eq i1 %v3_805285f, false
  br i1 %v1_8052862, label %dec_label_pc_80529fc, label %dec_label_pc_8052868

dec_label_pc_8052868:                             ; preds = %dec_label_pc_805284c
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8052858, i32* @ebx, align 4
  %v7_805286e = icmp ult i32 %v1_8052858, %stack_var_-40.0
  %v1_8052870 = icmp eq i1 %v7_805286e, false
  br i1 %v1_8052870, label %dec_label_pc_80529a7, label %dec_label_pc_8052876

dec_label_pc_8052876:                             ; preds = %dec_label_pc_8052868
  %v2_8052876 = add i32 %v1_8052858, %v1_8052850
  store i32 %v2_8052876, i32* @esi, align 4
  %v1_8052879 = load i32, i32* @global_var_805544c.47, align 4
  %v12_8052879 = icmp eq i32 %v2_8052876, %v1_8052879
  %v1_805287f = icmp eq i1 %v12_8052879, false
  %v1_80528b9 = add i32 %v2_8052876, 4
  %v2_80528b9 = inttoptr i32 %v1_80528b9 to i32*
  %v3_80528b9 = load i32, i32* %v2_80528b9, align 4
  br i1 %v1_805287f, label %dec_label_pc_80528b9, label %dec_label_pc_8052881

dec_label_pc_8052881:                             ; preds = %dec_label_pc_8052876
  %v1_8052886 = and i32 %v3_80528b9, -4
  %v2_8052889 = add i32 %v1_8052886, %v1_8052858
  store i32 %v2_8052889, i32* %ecx.global-to-local, align 4
  %v1_805288f = add i32 %stack_var_-40.0, 16
  store i32 %v1_805288f, i32* %eax.global-to-local, align 4
  %v7_8052892 = icmp ult i32 %v2_8052889, %v1_805288f
  br i1 %v7_8052892, label %dec_label_pc_80528f7, label %dec_label_pc_8052896

dec_label_pc_8052896:                             ; preds = %dec_label_pc_8052881
  %v1_8052896 = urem i32 %v3_8052853, 2
  %v5_8052899 = or i32 %v1_8052896, %stack_var_-40.0
  store i32 %v5_8052899, i32* %edx.global-to-local, align 4
  store i32 %v5_8052899, i32* %v2_8052853, align 4
  %v0_80528a4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80528a4 = sub i32 %v0_80528a4, %stack_var_-40.0
  %v0_80528a6 = load i32, i32* @edi, align 4
  %v2_80528a6 = add i32 %v0_80528a6, %stack_var_-40.0
  store i32 %v2_80528a6, i32* %eax.global-to-local, align 4
  %v1_80528a9 = or i32 %v2_80528a4, 1
  store i32 %v1_80528a9, i32* %ecx.global-to-local, align 4
  store i32 %v2_80528a6, i32* @global_var_805544c.47, align 4
  %v2_80528b1 = add i32 %v2_80528a6, 4
  %v3_80528b1 = inttoptr i32 %v2_80528b1 to i32*
  store i32 %v1_80528a9, i32* %v3_80528b1, align 4
  br label %dec_label_pc_8052acc

dec_label_pc_80528b9:                             ; preds = %dec_label_pc_8052876
  store i32 %v3_80528b9, i32* %edx.global-to-local, align 4
  %v1_80528be = and i32 %v3_80528b9, -2
  store i32 %v1_80528be, i32* %eax.global-to-local, align 4
  %v3_80528c1 = add i32 %v1_80528b9, %v1_80528be
  %v4_80528c1 = inttoptr i32 %v3_80528c1 to i8*
  %v5_80528c1 = load i8, i8* %v4_80528c1, align 1
  %v6_80528c1 = urem i8 %v5_80528c1, 2
  %v7_80528c1 = icmp eq i8 %v6_80528c1, 0
  %v1_80528c6 = icmp eq i1 %v7_80528c1, false
  br i1 %v1_80528c6, label %dec_label_pc_80528f7, label %dec_label_pc_80528c8

dec_label_pc_80528c8:                             ; preds = %dec_label_pc_80528b9
  %v1_80528c8 = and i32 %v3_80528b9, -4
  store i32 %v1_80528c8, i32* %edx.global-to-local, align 4
  %v2_80528cf = add i32 %v1_80528c8, %v1_8052858
  store i32 %v2_80528cf, i32* @ebx, align 4
  %v10_80528d1 = icmp ult i32 %v2_80528cf, %stack_var_-40.0
  br i1 %v10_80528d1, label %dec_label_pc_80528f7, label %dec_label_pc_80528d7

dec_label_pc_80528d7:                             ; preds = %dec_label_pc_80528c8
  %v1_80528d7 = add i32 %v1_8052858, %tmp7
  %v2_80528d7 = inttoptr i32 %v1_80528d7 to i32*
  %v3_80528d7 = load i32, i32* %v2_80528d7, align 4
  store i32 %v3_80528d7, i32* @edx, align 4
  %v1_80528da = add i32 %v2_8052876, 12
  %v2_80528da = inttoptr i32 %v1_80528da to i32*
  %v3_80528da = load i32, i32* %v2_80528da, align 4
  store i32 %v3_80528da, i32* %eax.global-to-local, align 4
  %v1_80528dd = add i32 %v3_80528d7, 12
  %v2_80528dd = inttoptr i32 %v1_80528dd to i32*
  %v3_80528dd = load i32, i32* %v2_80528dd, align 4
  %v15_80528dd = icmp eq i32 %v3_80528dd, %v2_8052876
  %v1_80528e0 = icmp eq i1 %v15_80528dd, false
  br i1 %v1_80528e0, label %dec_label_pc_80528e7, label %dec_label_pc_80528e2

dec_label_pc_80528e2:                             ; preds = %dec_label_pc_80528d7
  %v1_80528e2 = add i32 %v3_80528da, 8
  %v2_80528e2 = inttoptr i32 %v1_80528e2 to i32*
  %v3_80528e2 = load i32, i32* %v2_80528e2, align 4
  %v15_80528e2 = icmp eq i32 %v3_80528e2, %v2_8052876
  br i1 %v15_80528e2, label %dec_label_pc_80528ec, label %dec_label_pc_80528e7

dec_label_pc_80528e7:                             ; preds = %dec_label_pc_80528e2, %dec_label_pc_80528d7
  %v0_80528e7 = call i32 @function_8052ebc()
  store i32 %v0_80528e7, i32* %eax.global-to-local, align 4
  %v1_80528ec.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80528ec

dec_label_pc_80528ec:                             ; preds = %dec_label_pc_80528e2, %dec_label_pc_80528e7
  %v1_80528ec = phi i32 [ %v3_80528d7, %dec_label_pc_80528e2 ], [ %v1_80528ec.pre, %dec_label_pc_80528e7 ]
  %v0_80528ec = phi i32 [ %v3_80528da, %dec_label_pc_80528e2 ], [ %v0_80528e7, %dec_label_pc_80528e7 ]
  %v2_80528ec = add i32 %v1_80528ec, 12
  %v3_80528ec = inttoptr i32 %v2_80528ec to i32*
  store i32 %v0_80528ec, i32* %v3_80528ec, align 4
  %v0_80528ef = load i32, i32* @edx, align 4
  %v1_80528ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80528ef = add i32 %v1_80528ef, 8
  %v3_80528ef = inttoptr i32 %v2_80528ef to i32*
  store i32 %v0_80528ef, i32* %v3_80528ef, align 4
  %v0_80529a7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80529a7

dec_label_pc_80528f7:                             ; preds = %dec_label_pc_80528c8, %dec_label_pc_80528b9, %dec_label_pc_8052881
  %v1_80528fe = add i32 %stack_var_-40.0, -7
  store i32 %v1_80528fe, i32* %eax.global-to-local, align 4
  store i32 %v1_80528fe, i32* %stack_var_-60, align 4
  %v1_8052902 = call i32 @function_8051f5b(i32 %v1_80528fe)
  store i32 %v1_8052902, i32* %eax.global-to-local, align 4
  store i32 %v1_8052902, i32* %edx.global-to-local, align 4
  %v1_805290c = icmp eq i32 %v1_8052902, 0
  br i1 %v1_805290c, label %dec_label_pc_8052ac8, label %dec_label_pc_8052914

dec_label_pc_8052914:                             ; preds = %dec_label_pc_80528f7
  %v1_8052914 = add i32 %v1_8052902, -8
  store i32 %v1_8052914, i32* %ebx.global-to-local, align 4
  %v1_8052917 = load i32, i32* @esi, align 4
  %v12_8052917 = icmp eq i32 %v1_8052914, %v1_8052917
  %v1_8052919 = add i32 %v1_8052902, -4
  %v2_8052919 = inttoptr i32 %v1_8052919 to i32*
  %v3_8052919 = load i32, i32* %v2_8052919, align 4
  store i32 %v3_8052919, i32* %eax.global-to-local, align 4
  %v1_805291c = icmp eq i1 %v12_8052917, false
  br i1 %v1_805291c, label %dec_label_pc_805292a, label %dec_label_pc_805291e

dec_label_pc_805291e:                             ; preds = %dec_label_pc_8052914
  %v1_805291e = and i32 %v3_8052919, -4
  store i32 %v1_805291e, i32* %eax.global-to-local, align 4
  store i32 %v1_8052858, i32* %edx.global-to-local, align 4
  %v2_8052925 = add i32 %v1_805291e, %v1_8052858
  store i32 %v2_8052925, i32* @ebx, align 4
  br label %dec_label_pc_80529a7

dec_label_pc_805292a:                             ; preds = %dec_label_pc_8052914
  %v1_805292e = add i32 %v1_8052858, -4
  store i32 %v1_805292e, i32* %eax.global-to-local, align 4
  %v2_8052933 = udiv i32 %v1_805292e, 4
  store i32 %v2_8052933, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805292e, 37
  br i1 %tmp, label %dec_label_pc_805294c, label %dec_label_pc_805293b

dec_label_pc_805293b:                             ; preds = %dec_label_pc_805292a
  store i32 %v1_8052902, i32* %stack_var_-60, align 4
  %v3_8052942 = inttoptr i32 %v1_8052902 to i16*
  %v4_8052942 = call i32 @function_8053c06(i16* %v3_8052942, i32 %tmp7, i32 %v1_805292e)
  store i32 %v4_8052942, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052993

dec_label_pc_805294c:                             ; preds = %dec_label_pc_805292a
  store i32 %tmp7, i32* @esi, align 4
  %v2_8052953 = load i32, i32* %arg1, align 4
  store i32 %v2_8052953, i32* %eax.global-to-local, align 4
  %v2_8052955 = inttoptr i32 %v1_8052902 to i32*
  store i32 %v2_8052953, i32* %v2_8052955, align 4
  %v0_8052957 = load i32, i32* @esi, align 4
  %v1_8052957 = add i32 %v0_8052957, 4
  %v2_8052957 = inttoptr i32 %v1_8052957 to i32*
  %v3_8052957 = load i32, i32* %v2_8052957, align 4
  store i32 %v3_8052957, i32* %eax.global-to-local, align 4
  %v1_805295a = load i32, i32* %edx.global-to-local, align 4
  %v2_805295a = add i32 %v1_805295a, 4
  %v3_805295a = inttoptr i32 %v2_805295a to i32*
  store i32 %v3_8052957, i32* %v3_805295a, align 4
  %v0_805295d = load i32, i32* @esi, align 4
  %v1_805295d = add i32 %v0_805295d, 8
  %v2_805295d = inttoptr i32 %v1_805295d to i32*
  %v3_805295d = load i32, i32* %v2_805295d, align 4
  store i32 %v3_805295d, i32* %eax.global-to-local, align 4
  %v1_8052960 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052960 = add i32 %v1_8052960, 8
  %v3_8052960 = inttoptr i32 %v2_8052960 to i32*
  store i32 %v3_805295d, i32* %v3_8052960, align 4
  %tmp28 = icmp ult i32 %v1_805292e, 17
  br i1 %tmp28, label %dec_label_pc_8052993, label %dec_label_pc_8052965

dec_label_pc_8052965:                             ; preds = %dec_label_pc_805294c
  %v0_8052965 = load i32, i32* @esi, align 4
  %v1_8052965 = add i32 %v0_8052965, 12
  %v2_8052965 = inttoptr i32 %v1_8052965 to i32*
  %v3_8052965 = load i32, i32* %v2_8052965, align 4
  store i32 %v3_8052965, i32* %eax.global-to-local, align 4
  %v0_8052968 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805296b = load i32, i32* %edx.global-to-local, align 4
  %v2_805296b = add i32 %v1_805296b, 12
  %v3_805296b = inttoptr i32 %v2_805296b to i32*
  store i32 %v3_8052965, i32* %v3_805296b, align 4
  %v0_805296e = load i32, i32* @esi, align 4
  %v1_805296e = add i32 %v0_805296e, 16
  %v2_805296e = inttoptr i32 %v1_805296e to i32*
  %v3_805296e = load i32, i32* %v2_805296e, align 4
  store i32 %v3_805296e, i32* %eax.global-to-local, align 4
  %v1_8052971 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052971 = add i32 %v1_8052971, 16
  %v3_8052971 = inttoptr i32 %v2_8052971 to i32*
  store i32 %v3_805296e, i32* %v3_8052971, align 4
  %tmp22 = icmp ult i32 %v0_8052968, 7
  br i1 %tmp22, label %dec_label_pc_8052993, label %dec_label_pc_8052976

dec_label_pc_8052976:                             ; preds = %dec_label_pc_8052965
  %v0_8052976 = load i32, i32* @esi, align 4
  %v1_8052976 = add i32 %v0_8052976, 20
  %v2_8052976 = inttoptr i32 %v1_8052976 to i32*
  %v3_8052976 = load i32, i32* %v2_8052976, align 4
  store i32 %v3_8052976, i32* %eax.global-to-local, align 4
  %v0_8052979 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805297c = load i32, i32* %edx.global-to-local, align 4
  %v2_805297c = add i32 %v1_805297c, 20
  %v3_805297c = inttoptr i32 %v2_805297c to i32*
  store i32 %v3_8052976, i32* %v3_805297c, align 4
  %v0_805297f = load i32, i32* @esi, align 4
  %v1_805297f = add i32 %v0_805297f, 24
  %v2_805297f = inttoptr i32 %v1_805297f to i32*
  %v3_805297f = load i32, i32* %v2_805297f, align 4
  store i32 %v3_805297f, i32* %eax.global-to-local, align 4
  %v1_8052982 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052982 = add i32 %v1_8052982, 24
  %v3_8052982 = inttoptr i32 %v2_8052982 to i32*
  store i32 %v3_805297f, i32* %v3_8052982, align 4
  %tmp23 = icmp ult i32 %v0_8052979, 9
  br i1 %tmp23, label %dec_label_pc_8052993, label %dec_label_pc_8052987

dec_label_pc_8052987:                             ; preds = %dec_label_pc_8052976
  %v0_8052987 = load i32, i32* @esi, align 4
  %v1_8052987 = add i32 %v0_8052987, 28
  %v2_8052987 = inttoptr i32 %v1_8052987 to i32*
  %v3_8052987 = load i32, i32* %v2_8052987, align 4
  store i32 %v3_8052987, i32* %eax.global-to-local, align 4
  %v1_805298a = load i32, i32* %edx.global-to-local, align 4
  %v2_805298a = add i32 %v1_805298a, 28
  %v3_805298a = inttoptr i32 %v2_805298a to i32*
  store i32 %v3_8052987, i32* %v3_805298a, align 4
  %v0_805298d = load i32, i32* @esi, align 4
  %v1_805298d = add i32 %v0_805298d, 32
  %v2_805298d = inttoptr i32 %v1_805298d to i32*
  %v3_805298d = load i32, i32* %v2_805298d, align 4
  store i32 %v3_805298d, i32* %eax.global-to-local, align 4
  %v1_8052990 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052990 = add i32 %v1_8052990, 32
  %v3_8052990 = inttoptr i32 %v2_8052990 to i32*
  store i32 %v3_805298d, i32* %v3_8052990, align 4
  br label %dec_label_pc_8052993

dec_label_pc_8052993:                             ; preds = %dec_label_pc_8052976, %dec_label_pc_8052965, %dec_label_pc_805294c, %dec_label_pc_805293b, %dec_label_pc_8052987
  %v0_8052996 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052996 = add i32 %v0_8052996, 8
  store i32 %v1_8052996, i32* @ebx, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_805299d = call i32 @function_8052d20(i32 %tmp7)
  br label %dec_label_pc_8052ac3

dec_label_pc_80529a7:                             ; preds = %dec_label_pc_8052868, %dec_label_pc_805291e, %dec_label_pc_80528ec
  %v1_80529b8 = phi i32 [ %v1_8052858, %dec_label_pc_8052868 ], [ %v2_8052925, %dec_label_pc_805291e ], [ %v0_80529a7.pre, %dec_label_pc_80528ec ]
  %v5_80529a9 = sub i32 %v1_80529b8, %stack_var_-40.0
  store i32 %v5_80529a9, i32* %ecx.global-to-local, align 4
  %tmp24 = icmp ult i32 %v5_80529a9, 16
  br i1 %tmp24, label %dec_label_pc_80529b2, label %dec_label_pc_80529c4

dec_label_pc_80529b2:                             ; preds = %dec_label_pc_80529a7
  %v0_80529b2 = load i32, i32* @edi, align 4
  %v1_80529b2 = add i32 %v0_80529b2, 4
  %v2_80529b2 = inttoptr i32 %v1_80529b2 to i32*
  %v3_80529b2 = load i32, i32* %v2_80529b2, align 4
  %v1_80529b5 = urem i32 %v3_80529b2, 2
  %v2_80529b8 = or i32 %v1_80529b5, %v1_80529b8
  store i32 %v2_80529b8, i32* %eax.global-to-local, align 4
  store i32 %v2_80529b8, i32* %v2_80529b2, align 4
  %v0_80529bd = load i32, i32* @edi, align 4
  %v1_80529bd = load i32, i32* @ebx, align 4
  %v2_80529bd = add i32 %v0_80529bd, 4
  %v3_80529bd = add i32 %v2_80529bd, %v1_80529bd
  %v4_80529bd = inttoptr i32 %v3_80529bd to i32*
  %v5_80529bd = load i32, i32* %v4_80529bd, align 4
  %v6_80529bd = or i32 %v5_80529bd, 1
  store i32 %v6_80529bd, i32* %v4_80529bd, align 4
  br label %dec_label_pc_80529f4

dec_label_pc_80529c4:                             ; preds = %dec_label_pc_80529a7
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v0_80529c8 = load i32, i32* @edi, align 4
  %v2_80529c8 = add i32 %v0_80529c8, %stack_var_-40.0
  store i32 %v2_80529c8, i32* %eax.global-to-local, align 4
  %v1_80529cb = add i32 %v0_80529c8, 4
  %v2_80529cb = inttoptr i32 %v1_80529cb to i32*
  %v3_80529cb = load i32, i32* %v2_80529cb, align 4
  %v1_80529ce = urem i32 %v3_80529cb, 2
  %v5_80529d1 = or i32 %v1_80529ce, %stack_var_-40.0
  store i32 %v5_80529d1, i32* %v2_80529cb, align 4
  %v0_80529db = load i32, i32* %ecx.global-to-local, align 4
  %v1_80529dd = or i32 %v0_80529db, 1
  store i32 %v1_80529dd, i32* %edx.global-to-local, align 4
  %v1_80529e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80529e0 = add i32 %v1_80529e0, 4
  %v3_80529e0 = inttoptr i32 %v2_80529e0 to i32*
  store i32 %v1_80529dd, i32* %v3_80529e0, align 4
  %v0_80529e3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80529e3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80529e3 = add i32 %v0_80529e3, 4
  %v3_80529e3 = add i32 %v2_80529e3, %v1_80529e3
  %v4_80529e3 = inttoptr i32 %v3_80529e3 to i32*
  %v5_80529e3 = load i32, i32* %v4_80529e3, align 4
  %v6_80529e3 = or i32 %v5_80529e3, 1
  store i32 %v6_80529e3, i32* %v4_80529e3, align 4
  %v0_80529e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80529e8 = add i32 %v0_80529e8, 8
  store i32 %v1_80529e8, i32* %eax.global-to-local, align 4
  store i32 %v1_80529e8, i32* %stack_var_-60, align 4
  %v1_80529ec = call i32 @function_8052d20(i32 %v1_80529e8)
  store i32 %v1_80529ec, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80529f4

dec_label_pc_80529f4:                             ; preds = %dec_label_pc_80529b2, %dec_label_pc_80529c4
  %v0_80529f4 = load i32, i32* @edi, align 4
  %v1_80529f4 = add i32 %v0_80529f4, 8
  store i32 %v1_80529f4, i32* @ebx, align 4
  br label %dec_label_pc_8052ad0

dec_label_pc_80529fc:                             ; preds = %dec_label_pc_805284c
  store i32 %tmp7, i32* %ecx.global-to-local, align 4
  %v0_8052a00 = load i32, i32* @global_var_805577c.52, align 4
  %v1_8052a05 = add i32 %v0_8052a00, -1
  store i32 %v1_8052a05, i32* %eax.global-to-local, align 4
  %v2_8052a0a = inttoptr i32 %v1_8052850 to i32*
  %v3_8052a0a = load i32, i32* %v2_8052a0a, align 4
  store i32 %v3_8052a0a, i32* @ebp, align 4
  %v1_8052a0d = or i32 %stack_var_-40.0, 4
  store i32 %v1_8052a0d, i32* %stack_var_-44, align 4
  %v2_8052a13 = add i32 %v3_8052a0a, %v1_8052a05
  store i32 %v2_8052a13, i32* %edx.global-to-local, align 4
  %v1_8052a16 = sub i32 0, %v0_8052a00
  store i32 %v1_8052a16, i32* %eax.global-to-local, align 4
  %v2_8052a18 = add i32 %v2_8052a13, %v1_8052a0d
  %v2_8052a1b = and i32 %v2_8052a18, %v1_8052a16
  store i32 %v2_8052a1b, i32* @esi, align 4
  %v2_8052a1f = sub i32 %v2_8052a1b, %v3_8052a0a
  store i32 %v2_8052a1f, i32* @ebx, align 4
  %v15_8052a21 = icmp eq i32 %v1_8052858, %v2_8052a1f
  br i1 %v15_8052a21, label %dec_label_pc_8052acc, label %dec_label_pc_8052a2b

dec_label_pc_8052a2b:                             ; preds = %dec_label_pc_80529fc
  %v2_8052a32 = sub i32 %v1_8052850, %v3_8052a0a
  store i32 %v2_8052a32, i32* @edi, align 4
  %v2_8052a34 = add i32 %v3_8052a0a, %v1_8052858
  store i32 %v2_8052a34, i32* %eax.global-to-local, align 4
  store i32 %v2_8052a32, i32* %stack_var_-60, align 4
  %v6_8052a38 = inttoptr i32 %v2_8052a32 to i32*
  %v7_8052a38 = call i32 @function_8053a6a(i32* %v6_8052a38, i32 %v2_8052a34, i32 %v2_8052a1b, i32 1, i32 %v1_8052a0d, i32 %v1_8052858)
  store i32 %v7_8052a38, i32* %eax.global-to-local, align 4
  %v10_8052a40 = icmp eq i32 %v7_8052a38, -1
  br i1 %v10_8052a40, label %dec_label_pc_8052a84, label %dec_label_pc_8052a45

dec_label_pc_8052a45:                             ; preds = %dec_label_pc_8052a2b
  %v1_8052a45 = load i32, i32* @ebp, align 4
  %v2_8052a45 = add i32 %v1_8052a45, %v7_8052a38
  store i32 %v2_8052a45, i32* %edx.global-to-local, align 4
  %v0_8052a48 = load i32, i32* @ebx, align 4
  %v1_8052a48 = or i32 %v0_8052a48, 2
  store i32 %v1_8052a48, i32* %ebx.global-to-local, align 4
  %v0_8052a4b = load i32, i32* @esi, align 4
  store i32 %v0_8052a4b, i32* %eax.global-to-local, align 4
  %v2_8052a4d = add i32 %v2_8052a45, 4
  %v3_8052a4d = inttoptr i32 %v2_8052a4d to i32*
  store i32 %v1_8052a48, i32* %v3_8052a4d, align 4
  %v0_8052a50 = load i32, i32* %eax.global-to-local, align 4
  %v5_8052a50 = sub i32 %v0_8052a50, %v1_8052858
  %v1_8052a54 = load i32, i32* @global_var_8055784.57, align 4
  %v2_8052a54 = add i32 %v1_8052a54, %v5_8052a50
  store i32 %v2_8052a54, i32* %eax.global-to-local, align 4
  store i32 %v2_8052a54, i32* @global_var_8055784.57, align 4
  %v1_8052a5f = load i32, i32* @global_var_8055790.58, align 16
  %tmp25 = icmp ugt i32 %v2_8052a54, %v1_8052a5f
  br i1 %tmp25, label %dec_label_pc_8052a67, label %dec_label_pc_8052a6c

dec_label_pc_8052a67:                             ; preds = %dec_label_pc_8052a45
  store i32 %v2_8052a54, i32* @global_var_8055790.58, align 16
  br label %dec_label_pc_8052a6c

dec_label_pc_8052a6c:                             ; preds = %dec_label_pc_8052a45, %dec_label_pc_8052a67
  %v1_8052a6c = load i32, i32* @global_var_8055788.59, align 8
  %v2_8052a6c = add i32 %v1_8052a6c, %v2_8052a54
  store i32 %v2_8052a6c, i32* %eax.global-to-local, align 4
  %v1_8052a72 = load i32, i32* @global_var_8055794.60, align 4
  %tmp26 = icmp ugt i32 %v2_8052a6c, %v1_8052a72
  br i1 %tmp26, label %dec_label_pc_8052a7a, label %dec_label_pc_8052a7f

dec_label_pc_8052a7a:                             ; preds = %dec_label_pc_8052a6c
  store i32 %v2_8052a6c, i32* @global_var_8055794.60, align 4
  br label %dec_label_pc_8052a7f

dec_label_pc_8052a7f:                             ; preds = %dec_label_pc_8052a6c, %dec_label_pc_8052a7a
  %v0_8052a7f = load i32, i32* %edx.global-to-local, align 4
  %v1_8052a7f = add i32 %v0_8052a7f, 8
  store i32 %v1_8052a7f, i32* @ebx, align 4
  br label %dec_label_pc_8052ad0

dec_label_pc_8052a84:                             ; preds = %dec_label_pc_8052a2b
  %v2_8052a84 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8052a84, i32* %eax.global-to-local, align 4
  %v10_8052a87 = icmp ult i32 %v1_8052858, %v2_8052a84
  %v1_8052a8b = icmp eq i1 %v10_8052a87, false
  br i1 %v1_8052a8b, label %dec_label_pc_8052acc, label %dec_label_pc_8052a8d

dec_label_pc_8052a8d:                             ; preds = %dec_label_pc_8052a84
  %v1_8052a94 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8052a94, i32* %eax.global-to-local, align 4
  store i32 %v1_8052a94, i32* %stack_var_-60, align 4
  %v1_8052a98 = call i32 @function_8051f5b(i32 %v1_8052a94)
  store i32 %v1_8052a98, i32* %eax.global-to-local, align 4
  store i32 %v1_8052a98, i32* @ebx, align 4
  %v1_8052aa2 = icmp eq i32 %v1_8052a98, 0
  br i1 %v1_8052aa2, label %dec_label_pc_8052ac8, label %dec_label_pc_8052aa6

dec_label_pc_8052aa6:                             ; preds = %dec_label_pc_8052a8d
  %v1_8052aab = add i32 %v1_8052858, -8
  store i32 %v1_8052aab, i32* %eax.global-to-local, align 4
  store i32 %v1_8052a98, i32* %stack_var_-60, align 4
  %v3_8052ab4 = inttoptr i32 %v1_8052a98 to i16*
  %v4_8052ab4 = call i32 @function_8053c06(i16* %v3_8052ab4, i32 %tmp7, i32 %v1_8052aab)
  store i32 %v4_8052ab4, i32* %eax.global-to-local, align 4
  store i32 %v1_8052a98, i32* %edx.global-to-local, align 4
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8052abe = call i32 @function_8052d20(i32 %tmp7)
  br label %dec_label_pc_8052ac3

dec_label_pc_8052ac3:                             ; preds = %dec_label_pc_8052993, %dec_label_pc_8052aa6
  %storemerge = phi i32 [ %v1_8052abe, %dec_label_pc_8052aa6 ], [ %v1_805299d, %dec_label_pc_8052993 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ad0

dec_label_pc_8052ac8:                             ; preds = %dec_label_pc_8052a8d, %dec_label_pc_80528f7
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052ad0

dec_label_pc_8052acc:                             ; preds = %dec_label_pc_8052a84, %dec_label_pc_80529fc, %dec_label_pc_8052896
  store i32 %tmp7, i32* @ebx, align 4
  br label %dec_label_pc_8052ad0

dec_label_pc_8052ad0:                             ; preds = %dec_label_pc_8052ac8, %dec_label_pc_8052ac3, %dec_label_pc_8052a7f, %dec_label_pc_80529f4, %dec_label_pc_8052acc
  store i32 %v2_8052805, i32* @eax, align 4
  store i32 %v2_8052805, i32* %stack_var_-60, align 4
  %v2_8052ad9 = call i32 @function_8053344(i32 %v2_8052805, i32 1)
  store i32 %v2_8052ad9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ade

dec_label_pc_8052ade:                             ; preds = %dec_label_pc_80527e9, %dec_label_pc_80527d5, %dec_label_pc_8052ad0
  br label %dec_label_pc_8052ae1

dec_label_pc_8052ae1:                             ; preds = %dec_label_pc_8052823, %dec_label_pc_8052ade
  %v0_8052ae4 = load i32, i32* @ebx, align 4
  store i32 %v0_8052ae4, i32* %eax.global-to-local, align 4
  store i32 %v0_80527c6, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052ae4

; uselistorder directives
  uselistorder i32 %v1_8052a98, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8052a6c, { 1, 0, 2 }
  uselistorder i32 %v2_8052a54, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8052a32, { 1, 0, 2 }
  uselistorder i32 %v1_8052a0d, { 1, 0, 2 }
  uselistorder i32 %v3_8052a0a, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_80529c8, { 1, 0 }
  uselistorder i32 %v1_805292e, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8052902, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_80528a6, { 1, 0, 2 }
  uselistorder i32 %v3_80528b9, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8052876, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8052858, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8052850, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 13, 4, 0, 1, 9, 10, 8, 7, 2, 5, 3, 6, 12, 11 }
  uselistorder i32 %v1_8052845, { 1, 0 }
  uselistorder i32 %v1_8052835, { 0, 2, 1 }
  uselistorder i32 %v0_805281e, { 1, 0 }
  uselistorder i32 %v2_8052805, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 6, 15, 16, 17, 18, 19 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 50, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_8052d20, { 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32)* @function_8051f5b, { 5, 4, 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8052ae1, { 1, 0 }
  uselistorder label %dec_label_pc_8052ade, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052ad0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8052ac3, { 1, 0 }
  uselistorder label %dec_label_pc_8052a7f, { 1, 0 }
  uselistorder label %dec_label_pc_8052a6c, { 1, 0 }
  uselistorder label %dec_label_pc_80529f4, { 1, 0 }
  uselistorder label %dec_label_pc_80529a7, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052993, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80528ec, { 1, 0 }
  uselistorder label %dec_label_pc_805284c, { 1, 0 }
}

define i32 @function_8052aeb() local_unnamed_addr {
dec_label_pc_8052aeb:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_8052af2 = load i32, i32* @edx, align 4
  store i32 %v0_8052af2, i32* %ebp.global-to-local, align 4
  %v1_8052af4 = add i32 %v0_8052af2, 860
  %v2_8052af4 = inttoptr i32 %v1_8052af4 to i32*
  %v3_8052af4 = load i32, i32* %v2_8052af4, align 4
  store i32 %v3_8052af4, i32* %ecx.global-to-local, align 4
  %v1_8052afa = add i32 %v0_8052af2, 44
  %v2_8052afa = inttoptr i32 %v1_8052afa to i32*
  %v3_8052afa = load i32, i32* %v2_8052afa, align 4
  %v1_8052afd = add i32 %v3_8052afa, 4
  %v2_8052afd = inttoptr i32 %v1_8052afd to i32*
  %v3_8052afd = load i32, i32* %v2_8052afd, align 4
  %v1_8052b00 = and i32 %v3_8052afd, -4
  store i32 %v1_8052b00, i32* @esi, align 4
  %v1_8052b05 = load i32, i32* @eax, align 4
  %v2_8052b05 = add i32 %v3_8052af4, -17
  %v2_8052b07 = add i32 %v2_8052b05, %v1_8052b00
  %v3_8052b07 = sub i32 %v2_8052b07, %v1_8052b05
  %div = udiv i32 %v3_8052b07, %v3_8052af4
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_8052b0f = add i32 %div, -1
  %v4_8052b12 = mul i32 %v1_8052b0f, %v3_8052af4
  store i32 %v4_8052b12, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8052b12, 1
  br i1 %tmp11, label %dec_label_pc_8052b6e, label %dec_label_pc_8052b19

dec_label_pc_8052b19:                             ; preds = %dec_label_pc_8052aeb
  %v1_8052b1e = call i32 @function_8053b0d(i32 0)
  store i32 %v1_8052b1e, i32* %edi.global-to-local, align 4
  %v0_8052b25 = load i32, i32* @esi, align 4
  store i32 %v0_8052b25, i32* %eax.global-to-local, align 4
  %v1_8052b27 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052b27 = add i32 %v1_8052b27, 44
  %v3_8052b27 = inttoptr i32 %v2_8052b27 to i32*
  %v4_8052b27 = load i32, i32* %v3_8052b27, align 4
  %v5_8052b27 = add i32 %v4_8052b27, %v0_8052b25
  store i32 %v5_8052b27, i32* %eax.global-to-local, align 4
  %v12_8052b2d = icmp eq i32 %v1_8052b1e, %v5_8052b27
  %v1_8052b2f = icmp eq i1 %v12_8052b2d, false
  br i1 %v1_8052b2f, label %dec_label_pc_8052b6e, label %dec_label_pc_8052b31

dec_label_pc_8052b31:                             ; preds = %dec_label_pc_8052b19
  %v1_8052b34 = sub i32 0, %v4_8052b12
  store i32 %v1_8052b34, i32* @ebx, align 4
  %v1_8052b37 = call i32 @function_8053b0d(i32 %v1_8052b34)
  store i32 %v1_8052b37, i32* %eax.global-to-local, align 4
  %v1_8052b43 = call i32 @function_8053b0d(i32 0)
  store i32 %v1_8052b43, i32* %eax.global-to-local, align 4
  %v10_8052b4b = icmp eq i32 %v1_8052b43, -1
  br i1 %v10_8052b4b, label %dec_label_pc_8052b6e, label %dec_label_pc_8052b50

dec_label_pc_8052b50:                             ; preds = %dec_label_pc_8052b31
  %v0_8052b50 = load i32, i32* %edi.global-to-local, align 4
  %v2_8052b52 = sub i32 %v0_8052b50, %v1_8052b43
  %v12_8052b52 = icmp eq i32 %v2_8052b52, 0
  store i32 %v2_8052b52, i32* %ecx.global-to-local, align 4
  br i1 %v12_8052b52, label %dec_label_pc_8052b6e, label %dec_label_pc_8052b56

dec_label_pc_8052b56:                             ; preds = %dec_label_pc_8052b50
  %v0_8052b56 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052b56 = add i32 %v0_8052b56, 44
  %v2_8052b56 = inttoptr i32 %v1_8052b56 to i32*
  %v3_8052b56 = load i32, i32* %v2_8052b56, align 4
  store i32 %v3_8052b56, i32* %eax.global-to-local, align 4
  %v1_8052b59 = add i32 %v0_8052b56, 872
  %v2_8052b59 = inttoptr i32 %v1_8052b59 to i32*
  %v3_8052b59 = load i32, i32* %v2_8052b59, align 4
  %v5_8052b59 = sub i32 %v3_8052b59, %v2_8052b52
  store i32 %v5_8052b59, i32* %v2_8052b59, align 4
  %v0_8052b5f = load i32, i32* @esi, align 4
  %v1_8052b5f = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052b5f = sub i32 %v0_8052b5f, %v1_8052b5f
  %v1_8052b61 = or i32 %v2_8052b5f, 1
  %v1_8052b64 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052b64 = add i32 %v1_8052b64, 4
  %v3_8052b64 = inttoptr i32 %v2_8052b64 to i32*
  store i32 %v1_8052b61, i32* %v3_8052b64, align 4
  br label %dec_label_pc_8052b70

dec_label_pc_8052b6e:                             ; preds = %dec_label_pc_8052b50, %dec_label_pc_8052b31, %dec_label_pc_8052b19, %dec_label_pc_8052aeb
  br label %dec_label_pc_8052b70

dec_label_pc_8052b70:                             ; preds = %dec_label_pc_8052b56, %dec_label_pc_8052b6e
  %storemerge = phi i32 [ 1, %dec_label_pc_8052b56 ], [ 0, %dec_label_pc_8052b6e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8052b43, { 1, 0, 2 }
  uselistorder i32 %v4_8052b12, { 1, 2, 0 }
  uselistorder i32 %v3_8052af4, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_8053b0d, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8052b70, { 1, 0 }
}

define i32 @function_8052b78(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052b78:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_8052b79 = load i32, i32* @edi, align 4
  %v0_8052b7a = load i32, i32* @esi, align 4
  %v0_8052b7b = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_8052b83 = load i32, i32* %arg1, align 4
  store i32 %v2_8052b83, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8052b8a = icmp eq i32 %v2_8052b83, 0
  br i1 %v1_8052b8a, label %dec_label_pc_8052ca4.lr.ph, label %dec_label_pc_8052b92

dec_label_pc_8052ca4.lr.ph:                       ; preds = %dec_label_pc_8052b78
  %v3_8052ca8 = add i32 %tmp20, 44
  br label %dec_label_pc_8052ca4

dec_label_pc_8052b92:                             ; preds = %dec_label_pc_8052b78
  %v1_8052b96 = and i32 %v2_8052b83, -3
  store i32 %v1_8052b96, i32* %arg1, align 4
  %v1_8052b9b = add i32 %tmp20, 52
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_8052bb7 = udiv i32 %v1_8052b96, 8
  %v2_8052bba = mul nuw i32 %v2_8052bb7, 4
  %v3_8052bba = add i32 %tmp20, -4
  %v4_8052bba = add i32 %v3_8052bba, %v2_8052bba
  store i32 %v4_8052bba, i32* %eax.global-to-local, align 4
  %v2_8052c81 = add i32 %tmp20, 44
  %v3_8052c81 = inttoptr i32 %v2_8052c81 to i32*
  %v1_8052c54 = add i32 %tmp20, 60
  %v2_8052c54 = inttoptr i32 %v1_8052c54 to i32*
  br label %dec_label_pc_8052bc2

dec_label_pc_8052bc2:                             ; preds = %dec_label_pc_8052c9a, %dec_label_pc_8052b92
  %v0_8052bd0.in = phi i32 [ %tmp20, %dec_label_pc_8052b92 ], [ %v0_8052bd0, %dec_label_pc_8052c9a ]
  %v0_8052bd0 = add i32 %v0_8052bd0.in, 4
  store i32 %v0_8052bd0, i32* %eax.global-to-local, align 4
  %v1_8052bc6 = inttoptr i32 %v0_8052bd0 to i32*
  %v2_8052bc6 = load i32, i32* %v1_8052bc6, align 4
  store i32 %v2_8052bc6, i32* @ecx, align 4
  %v1_8052bc8 = icmp eq i32 %v2_8052bc6, 0
  br i1 %v1_8052bc8, label %dec_label_pc_8052c90, label %dec_label_pc_8052bd0

dec_label_pc_8052bd0:                             ; preds = %dec_label_pc_8052bc2
  store i32 0, i32* %v1_8052bc6, align 4
  %v0_8052bd6.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052bd6

dec_label_pc_8052bd6:                             ; preds = %dec_label_pc_8052c84, %dec_label_pc_8052bd0
  %v0_8052bf3 = phi i32 [ %v3_8052bd6, %dec_label_pc_8052c84 ], [ %v0_8052bd6.pre, %dec_label_pc_8052bd0 ]
  %v1_8052bd6 = add i32 %v0_8052bf3, 8
  %v2_8052bd6 = inttoptr i32 %v1_8052bd6 to i32*
  %v3_8052bd6 = load i32, i32* %v2_8052bd6, align 4
  store i32 %v3_8052bd6, i32* %edx.global-to-local, align 4
  %v1_8052bdd = add i32 %v0_8052bf3, 4
  %v2_8052bdd = inttoptr i32 %v1_8052bdd to i32*
  %v3_8052bdd = load i32, i32* %v2_8052bdd, align 4
  store i32 %v3_8052bdd, i32* %eax.global-to-local, align 4
  %v1_8052be2 = and i32 %v3_8052bdd, -2
  store i32 %v1_8052be2, i32* @edi, align 4
  %v2_8052be5 = urem i32 %v3_8052bdd, 2
  %v3_8052be5 = icmp eq i32 %v2_8052be5, 0
  %v2_8052be7 = add i32 %v1_8052be2, %v0_8052bf3
  store i32 %v2_8052be7, i32* @ebx, align 4
  %v1_8052bea = add i32 %v2_8052be7, 4
  %v2_8052bea = inttoptr i32 %v1_8052bea to i32*
  %v3_8052bea = load i32, i32* %v2_8052bea, align 4
  store i32 %v3_8052bea, i32* %edx.global-to-local, align 4
  %v1_8052bf1 = icmp eq i1 %v3_8052be5, false
  br i1 %v1_8052bf1, label %dec_label_pc_8052c13, label %dec_label_pc_8052bf3

dec_label_pc_8052bf3:                             ; preds = %dec_label_pc_8052bd6
  %v1_8052bf3 = inttoptr i32 %v0_8052bf3 to i32*
  %v2_8052bf3 = load i32, i32* %v1_8052bf3, align 4
  store i32 %v2_8052bf3, i32* %ebp.global-to-local, align 4
  %v2_8052bf7 = sub i32 %v0_8052bf3, %v2_8052bf3
  store i32 %v2_8052bf7, i32* %eax.global-to-local, align 4
  %v1_8052bf9 = add i32 %v2_8052bf7, 8
  %v2_8052bf9 = inttoptr i32 %v1_8052bf9 to i32*
  %v3_8052bf9 = load i32, i32* %v2_8052bf9, align 4
  store i32 %v3_8052bf9, i32* @esi, align 4
  %v1_8052bfc = add i32 %v2_8052bf7, 12
  %v2_8052bfc = inttoptr i32 %v1_8052bfc to i32*
  %v3_8052bfc = load i32, i32* %v2_8052bfc, align 4
  store i32 %v3_8052bfc, i32* %edx.global-to-local, align 4
  %v1_8052bff = add i32 %v3_8052bf9, 12
  %v2_8052bff = inttoptr i32 %v1_8052bff to i32*
  %v3_8052bff = load i32, i32* %v2_8052bff, align 4
  store i32 %v3_8052bff, i32* @ecx, align 4
  %v12_8052c02 = icmp eq i32 %v3_8052bff, %v2_8052bf7
  %v1_8052c04 = icmp eq i1 %v12_8052c02, false
  br i1 %v1_8052c04, label %dec_label_pc_8052c43, label %dec_label_pc_8052c06

dec_label_pc_8052c06:                             ; preds = %dec_label_pc_8052bf3
  %v1_8052c06 = add i32 %v3_8052bfc, 8
  %v2_8052c06 = inttoptr i32 %v1_8052c06 to i32*
  %v3_8052c06 = load i32, i32* %v2_8052c06, align 4
  %v15_8052c06 = icmp eq i32 %v3_8052c06, %v3_8052bff
  %v1_8052c09 = icmp eq i1 %v15_8052c06, false
  br i1 %v1_8052c09, label %dec_label_pc_8052c43, label %dec_label_pc_8052c0b

dec_label_pc_8052c0b:                             ; preds = %dec_label_pc_8052c06
  %v2_8052c0b = add i32 %v2_8052bf3, %v1_8052be2
  store i32 %v2_8052c0b, i32* @edi, align 4
  store i32 %v3_8052bfc, i32* %v2_8052bff, align 4
  %v0_8052c10 = load i32, i32* @esi, align 4
  %v1_8052c10 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052c10 = add i32 %v1_8052c10, 8
  %v3_8052c10 = inttoptr i32 %v2_8052c10 to i32*
  store i32 %v0_8052c10, i32* %v3_8052c10, align 4
  %v0_8052c1e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052c13

dec_label_pc_8052c13:                             ; preds = %dec_label_pc_8052bd6, %dec_label_pc_8052c0b
  %v1_8052c27 = phi i32 [ %v2_8052be7, %dec_label_pc_8052bd6 ], [ %v0_8052c1e.pre, %dec_label_pc_8052c0b ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8052c1b = and i32 %v3_8052bea, -4
  store i32 %v1_8052c1b, i32* %ebp.global-to-local, align 4
  %v4_8052c1e = load i32, i32* %v3_8052c81, align 4
  %v15_8052c1e = icmp eq i32 %v1_8052c27, %v4_8052c1e
  br i1 %v15_8052c1e, label %dec_label_pc_8052c74, label %dec_label_pc_8052c23

dec_label_pc_8052c23:                             ; preds = %dec_label_pc_8052c13
  %v2_8052c23 = add i32 %v1_8052c27, 4
  %v3_8052c23 = add i32 %v2_8052c23, %v1_8052c1b
  %v4_8052c23 = inttoptr i32 %v3_8052c23 to i32*
  %v5_8052c23 = load i32, i32* %v4_8052c23, align 4
  store i32 %v5_8052c23, i32* %eax.global-to-local, align 4
  %v3_8052c27 = inttoptr i32 %v2_8052c23 to i32*
  store i32 %v1_8052c1b, i32* %v3_8052c27, align 4
  %v0_8052c2a = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c2a = urem i32 %v0_8052c2a, 2
  %v2_8052c2a = icmp eq i32 %v1_8052c2a, 0
  store i32 %v1_8052c2a, i32* %eax.global-to-local, align 4
  %v1_8052c2f = icmp eq i1 %v2_8052c2a, false
  br i1 %v1_8052c2f, label %dec_label_pc_8052c50, label %dec_label_pc_8052c31

dec_label_pc_8052c31:                             ; preds = %dec_label_pc_8052c23
  %v0_8052c31 = load i32, i32* @ebx, align 4
  %v1_8052c31 = add i32 %v0_8052c31, 8
  %v2_8052c31 = inttoptr i32 %v1_8052c31 to i32*
  %v3_8052c31 = load i32, i32* %v2_8052c31, align 4
  store i32 %v3_8052c31, i32* @edx, align 4
  %v1_8052c34 = add i32 %v0_8052c31, 12
  %v2_8052c34 = inttoptr i32 %v1_8052c34 to i32*
  %v3_8052c34 = load i32, i32* %v2_8052c34, align 4
  store i32 %v3_8052c34, i32* %eax.global-to-local, align 4
  %v1_8052c37 = add i32 %v3_8052c31, 12
  %v2_8052c37 = inttoptr i32 %v1_8052c37 to i32*
  %v3_8052c37 = load i32, i32* %v2_8052c37, align 4
  store i32 %v3_8052c37, i32* @esi, align 4
  %v12_8052c3a = icmp eq i32 %v3_8052c37, %v0_8052c31
  %v1_8052c3c = icmp eq i1 %v12_8052c3a, false
  br i1 %v1_8052c3c, label %dec_label_pc_8052c43, label %dec_label_pc_8052c3e

dec_label_pc_8052c3e:                             ; preds = %dec_label_pc_8052c31
  %v1_8052c3e = add i32 %v3_8052c34, 8
  %v2_8052c3e = inttoptr i32 %v1_8052c3e to i32*
  %v3_8052c3e = load i32, i32* %v2_8052c3e, align 4
  %v15_8052c3e = icmp eq i32 %v3_8052c3e, %v3_8052c37
  br i1 %v15_8052c3e, label %dec_label_pc_8052c48, label %dec_label_pc_8052c43

dec_label_pc_8052c43:                             ; preds = %dec_label_pc_8052c3e, %dec_label_pc_8052c31, %dec_label_pc_8052c06, %dec_label_pc_8052bf3
  %v0_8052c43 = call i32 @function_8052ebc()
  store i32 %v0_8052c43, i32* %eax.global-to-local, align 4
  %v1_8052c4a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052c48

dec_label_pc_8052c48:                             ; preds = %dec_label_pc_8052c3e, %dec_label_pc_8052c43
  %v1_8052c4a = phi i32 [ %v3_8052c31, %dec_label_pc_8052c3e ], [ %v1_8052c4a.pre, %dec_label_pc_8052c43 ]
  %v0_8052c4a = phi i32 [ %v3_8052c34, %dec_label_pc_8052c3e ], [ %v0_8052c43, %dec_label_pc_8052c43 ]
  %v0_8052c48 = load i32, i32* @edi, align 4
  %v1_8052c48 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052c48 = add i32 %v1_8052c48, %v0_8052c48
  store i32 %v2_8052c48, i32* @edi, align 4
  %v2_8052c4a = add i32 %v1_8052c4a, 12
  %v3_8052c4a = inttoptr i32 %v2_8052c4a to i32*
  store i32 %v0_8052c4a, i32* %v3_8052c4a, align 4
  %v0_8052c4d = load i32, i32* @edx, align 4
  %v1_8052c4d = load i32, i32* %eax.global-to-local, align 4
  %v2_8052c4d = add i32 %v1_8052c4d, 8
  %v3_8052c4d = inttoptr i32 %v2_8052c4d to i32*
  store i32 %v0_8052c4d, i32* %v3_8052c4d, align 4
  br label %dec_label_pc_8052c50

dec_label_pc_8052c50:                             ; preds = %dec_label_pc_8052c23, %dec_label_pc_8052c48
  store i32 %v1_8052b9b, i32* %eax.global-to-local, align 4
  %v3_8052c54 = load i32, i32* %v2_8052c54, align 4
  store i32 %v3_8052c54, i32* %edx.global-to-local, align 4
  %v0_8052c57 = load i32, i32* @ecx, align 4
  store i32 %v0_8052c57, i32* %v2_8052c54, align 4
  %v0_8052c5a = load i32, i32* @edi, align 4
  %v1_8052c5c = or i32 %v0_8052c5a, 1
  store i32 %v1_8052c5c, i32* %eax.global-to-local, align 4
  %v0_8052c5f = load i32, i32* @ecx, align 4
  %v1_8052c5f = load i32, i32* %edx.global-to-local, align 4
  %v2_8052c5f = add i32 %v1_8052c5f, 12
  %v3_8052c5f = inttoptr i32 %v2_8052c5f to i32*
  store i32 %v0_8052c5f, i32* %v3_8052c5f, align 4
  %v0_8052c62 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c62 = load i32, i32* @ecx, align 4
  %v2_8052c62 = add i32 %v1_8052c62, 4
  %v3_8052c62 = inttoptr i32 %v2_8052c62 to i32*
  store i32 %v0_8052c62, i32* %v3_8052c62, align 4
  store i32 %v1_8052b9b, i32* %eax.global-to-local, align 4
  %v0_8052c69 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052c69 = load i32, i32* @ecx, align 4
  %v2_8052c69 = add i32 %v1_8052c69, 8
  %v3_8052c69 = inttoptr i32 %v2_8052c69 to i32*
  store i32 %v0_8052c69, i32* %v3_8052c69, align 4
  %v0_8052c6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c6c = load i32, i32* @ecx, align 4
  %v2_8052c6c = add i32 %v1_8052c6c, 12
  %v3_8052c6c = inttoptr i32 %v2_8052c6c to i32*
  store i32 %v0_8052c6c, i32* %v3_8052c6c, align 4
  %v0_8052c6f = load i32, i32* @edi, align 4
  %v1_8052c6f = load i32, i32* @ecx, align 4
  %v3_8052c6f = add i32 %v1_8052c6f, %v0_8052c6f
  %v4_8052c6f = inttoptr i32 %v3_8052c6f to i32*
  store i32 %v0_8052c6f, i32* %v4_8052c6f, align 4
  br label %dec_label_pc_8052c84

dec_label_pc_8052c74:                             ; preds = %dec_label_pc_8052c13
  %v0_8052c74 = load i32, i32* @edi, align 4
  %v2_8052c74 = add i32 %v0_8052c74, %v1_8052c1b
  %v1_8052c77 = or i32 %v2_8052c74, 1
  store i32 %v1_8052c77, i32* %eax.global-to-local, align 4
  %v1_8052c7a = load i32, i32* @ecx, align 4
  %v2_8052c7a = add i32 %v1_8052c7a, 4
  %v3_8052c7a = inttoptr i32 %v2_8052c7a to i32*
  store i32 %v1_8052c77, i32* %v3_8052c7a, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v0_8052c81 = load i32, i32* @ecx, align 4
  store i32 %v0_8052c81, i32* %v3_8052c81, align 4
  br label %dec_label_pc_8052c84

dec_label_pc_8052c84:                             ; preds = %dec_label_pc_8052c50, %dec_label_pc_8052c74
  store i32 %v3_8052bd6, i32* @ecx, align 4
  %v1_8052c88 = icmp eq i32 %v3_8052bd6, 0
  %v1_8052c8a = icmp eq i1 %v1_8052c88, false
  br i1 %v1_8052c8a, label %dec_label_pc_8052bd6, label %dec_label_pc_8052c90

dec_label_pc_8052c90:                             ; preds = %dec_label_pc_8052c84, %dec_label_pc_8052bc2
  %v15_8052c94 = icmp eq i32 %v0_8052bd0, %v4_8052bba
  br i1 %v15_8052c94, label %dec_label_pc_8052d18, label %dec_label_pc_8052c9a

dec_label_pc_8052c9a:                             ; preds = %dec_label_pc_8052c90
  br label %dec_label_pc_8052bc2

dec_label_pc_8052ca4:                             ; preds = %dec_label_pc_8052ca4.lr.ph, %dec_label_pc_8052ca4
  %v1_8052ca8 = phi i32 [ 1, %dec_label_pc_8052ca4.lr.ph ], [ %v0_8052cb3, %dec_label_pc_8052ca4 ]
  %v2_8052ca8 = mul i32 %v1_8052ca8, 8
  %v4_8052ca8 = add i32 %v3_8052ca8, %v2_8052ca8
  store i32 %v4_8052ca8, i32* %eax.global-to-local, align 4
  %v1_8052cac = add i32 %v1_8052ca8, 1
  store i32 %v1_8052cac, i32* %edx.global-to-local, align 4
  %v2_8052cad = add i32 %v4_8052ca8, 12
  %v3_8052cad = inttoptr i32 %v2_8052cad to i32*
  store i32 %v4_8052ca8, i32* %v3_8052cad, align 4
  %v0_8052cb0 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052cb0 = add i32 %v0_8052cb0, 8
  %v3_8052cb0 = inttoptr i32 %v2_8052cb0 to i32*
  store i32 %v0_8052cb0, i32* %v3_8052cb0, align 4
  %v0_8052cb3 = load i32, i32* %edx.global-to-local, align 4
  %v7_8052cb6 = icmp sgt i32 %v0_8052cb3, 95
  br i1 %v7_8052cb6, label %dec_label_pc_8052cb8, label %dec_label_pc_8052ca4

dec_label_pc_8052cb8:                             ; preds = %dec_label_pc_8052ca4
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8052cbc = add i32 %tmp20, 864
  %v2_8052cbc = inttoptr i32 %v1_8052cbc to i32*
  %v3_8052cbc = load i32, i32* %v2_8052cbc, align 4
  %v4_8052cbc = or i32 %v3_8052cbc, 1
  store i32 %v4_8052cbc, i32* %v2_8052cbc, align 4
  %v0_8052cc3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cc3 = add i32 %v0_8052cc3, 840
  %v2_8052cc3 = inttoptr i32 %v1_8052cc3 to i32*
  store i32 0, i32* %v2_8052cc3, align 4
  %v0_8052ccd = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ccd = add i32 %v0_8052ccd, 852
  %v2_8052ccd = inttoptr i32 %v1_8052ccd to i32*
  store i32 65536, i32* %v2_8052ccd, align 4
  %v0_8052cd7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cd7 = add i32 %v0_8052cd7, 844
  %v2_8052cd7 = inttoptr i32 %v1_8052cd7 to i32*
  store i32 262144, i32* %v2_8052cd7, align 4
  %v0_8052ce1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ce1 = add i32 %v0_8052ce1, 836
  %v2_8052ce1 = inttoptr i32 %v1_8052ce1 to i32*
  store i32 262144, i32* %v2_8052ce1, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_8052cf2 = load i32, i32* %arg1, align 4
  %v1_8052cf4 = urem i32 %v2_8052cf2, 4
  %v1_8052cf7 = or i32 %v1_8052cf4, 72
  store i32 %v1_8052cf7, i32* %arg1, align 4
  %v1_8052cfe = add i32 %tmp20, 52
  store i32 %v1_8052cfe, i32* %eax.global-to-local, align 4
  %v2_8052d01 = add i32 %tmp20, 44
  %v3_8052d01 = inttoptr i32 %v2_8052d01 to i32*
  store i32 %v1_8052cfe, i32* %v3_8052d01, align 4
  %v1_8052d06 = call i32 @function_80531bd(i32 30)
  store i32 %v1_8052d06, i32* %eax.global-to-local, align 4
  %v2_8052d12 = add i32 %tmp20, 860
  %v3_8052d12 = inttoptr i32 %v2_8052d12 to i32*
  store i32 %v1_8052d06, i32* %v3_8052d12, align 4
  br label %dec_label_pc_8052d18

dec_label_pc_8052d18:                             ; preds = %dec_label_pc_8052c90, %dec_label_pc_8052cb8
  store i32 %v0_8052b7b, i32* @ebx, align 4
  store i32 %v0_8052b7a, i32* @esi, align 4
  store i32 %v0_8052b79, i32* @edi, align 4
  %v0_8052d1f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8052d1f

; uselistorder directives
  uselistorder i32 %v0_8052cb3, { 1, 0 }
  uselistorder i32 %v0_8052cb0, { 1, 0 }
  uselistorder i32 %v1_8052ca8, { 1, 0 }
  uselistorder i32 %v0_8052c6f, { 1, 0 }
  uselistorder i32 %v1_8052c2a, { 1, 0 }
  uselistorder i32 %v2_8052c23, { 1, 0 }
  uselistorder i32 %v1_8052c1b, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052c27, { 1, 0 }
  uselistorder i32 %v3_8052bd6, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8052bf3, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8052bd0, { 2, 0, 1, 3 }
  uselistorder i32* %v3_8052c81, { 1, 0 }
  uselistorder i32 %v1_8052b9b, { 1, 0 }
  uselistorder i32 %tmp20, { 6, 2, 1, 15, 13, 12, 10, 9, 0, 4, 11, 5, 8, 3, 14, 7 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_8052d18, { 1, 0 }
  uselistorder label %dec_label_pc_8052ca4, { 1, 0 }
  uselistorder label %dec_label_pc_8052c84, { 1, 0 }
  uselistorder label %dec_label_pc_8052c50, { 1, 0 }
  uselistorder label %dec_label_pc_8052c48, { 1, 0 }
  uselistorder label %dec_label_pc_8052c13, { 1, 0 }
}

define i32 @function_8052d20(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052d20:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8052d20 = load i32, i32* @ebp, align 4
  %v0_8052d21 = load i32, i32* @edi, align 4
  %v0_8052d22 = load i32, i32* @esi, align 4
  %v0_8052d23 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052d2b = icmp eq i32 %arg1, 0
  br i1 %v1_8052d2b, label %dec_label_pc_8052eb4, label %dec_label_pc_8052d33

dec_label_pc_8052d33:                             ; preds = %dec_label_pc_8052d20
  %v2_8052d3e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052d3e, i32* @eax, align 4
  %v2_8052d43 = call i32 @function_8053344(i32 %v2_8052d3e, i32 134558529)
  store i32 %v2_8052d43, i32* %eax.global-to-local, align 4
  %v1_8052d4f = call i32 @function_8053341(i32 ptrtoint (i32* @global_var_805503c.45 to i32))
  %v1_8052d54 = add i32 %arg1, -8
  store i32 %v1_8052d54, i32* @ecx, align 4
  %v0_8052d57 = load i8, i8* @global_var_8055420.46, align 1
  %v1_8052d57 = sext i8 %v0_8052d57 to i32
  store i32 %v1_8052d57, i32* %eax.global-to-local, align 4
  %v1_8052d5f = add i32 %arg1, -4
  %v2_8052d5f = inttoptr i32 %v1_8052d5f to i32*
  %v3_8052d5f = load i32, i32* %v2_8052d5f, align 4
  store i32 %v3_8052d5f, i32* %edx.global-to-local, align 4
  %v1_8052d64 = and i32 %v3_8052d5f, -4
  %v4_8052d64 = trunc i32 %v1_8052d64 to i8
  store i32 %v1_8052d64, i32* @ebx, align 4
  %v8_8052d69 = icmp ugt i8 %v4_8052d64, %v0_8052d57
  br i1 %v8_8052d69, label %dec_label_pc_8052d8b, label %dec_label_pc_8052d6b

dec_label_pc_8052d6b:                             ; preds = %dec_label_pc_8052d33
  %v2_8052d6b = udiv i32 %v3_8052d5f, 8
  %v1_8052d6e = or i32 %v1_8052d57, 3
  %v3_8052d6e = trunc i32 %v1_8052d6e to i8
  store i32 %v1_8052d6e, i32* %eax.global-to-local, align 4
  store i8 %v3_8052d6e, i8* @global_var_8055420.46, align 32
  %v1_8052d76 = mul nuw i32 %v2_8052d6b, 4
  %v2_8052d76 = add i32 %v1_8052d76, ptrtoint (i8* @global_var_8055420.46 to i32)
  store i32 %v2_8052d76, i32* %edx.global-to-local, align 4
  %v1_8052d7d = add i32 %v1_8052d76, add (i32 ptrtoint (i8* @global_var_8055420.46 to i32), i32 -4)
  %v2_8052d7d = inttoptr i32 %v1_8052d7d to i32*
  %v3_8052d7d = load i32, i32* %v2_8052d7d, align 4
  store i32 %v3_8052d7d, i32* %eax.global-to-local, align 4
  %v3_8052d80 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8052d7d, i32* %v3_8052d80, align 4
  %v0_8052d83 = load i32, i32* @ecx, align 4
  %v1_8052d83 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052d83 = add i32 %v1_8052d83, -4
  %v3_8052d83 = inttoptr i32 %v2_8052d83 to i32*
  store i32 %v0_8052d83, i32* %v3_8052d83, align 4
  br label %dec_label_pc_8052ea3

dec_label_pc_8052d8b:                             ; preds = %dec_label_pc_8052d33
  %v1_8052d8b = trunc i32 %v3_8052d5f to i8
  %v2_8052d8b = and i8 %v1_8052d8b, 2
  %v3_8052d8b = icmp eq i8 %v2_8052d8b, 0
  %v5_8052d8b = zext i8 %v2_8052d8b to i32
  %v7_8052d8b = and i32 %v3_8052d5f, -256
  %v8_8052d8b = or i32 %v5_8052d8b, %v7_8052d8b
  store i32 %v8_8052d8b, i32* %edx.global-to-local, align 4
  %v1_8052d8e = icmp eq i1 %v3_8052d8b, false
  br i1 %v1_8052d8e, label %dec_label_pc_8052e83, label %dec_label_pc_8052d94

dec_label_pc_8052d94:                             ; preds = %dec_label_pc_8052d8b
  %v1_8052d94 = or i32 %v1_8052d57, 1
  %v3_8052d94 = trunc i32 %v1_8052d94 to i8
  store i32 %v1_8052d94, i32* %eax.global-to-local, align 4
  %v2_8052d97 = add i32 %v1_8052d64, %v1_8052d54
  store i32 %v2_8052d97, i32* @esi, align 4
  store i8 %v3_8052d94, i8* @global_var_8055420.46, align 32
  %v1_8052d9f = add i32 %v2_8052d97, 4
  %v2_8052d9f = inttoptr i32 %v1_8052d9f to i32*
  %v3_8052d9f = load i32, i32* %v2_8052d9f, align 4
  store i32 %v3_8052d9f, i32* %eax.global-to-local, align 4
  %v2_8052da6 = inttoptr i32 %v1_8052d5f to i8*
  %v3_8052da6 = load i8, i8* %v2_8052da6, align 1
  %v4_8052da6 = urem i8 %v3_8052da6, 2
  %v5_8052da6 = icmp eq i8 %v4_8052da6, 0
  %v1_8052daa = icmp eq i1 %v5_8052da6, false
  br i1 %v1_8052daa, label %dec_label_pc_8052dcd, label %dec_label_pc_8052dac

dec_label_pc_8052dac:                             ; preds = %dec_label_pc_8052d94
  %v2_8052dac = inttoptr i32 %v1_8052d54 to i32*
  %v3_8052dac = load i32, i32* %v2_8052dac, align 4
  store i32 %v3_8052dac, i32* @ebp, align 4
  %v2_8052db1 = sub i32 %v1_8052d54, %v3_8052dac
  store i32 %v2_8052db1, i32* %eax.global-to-local, align 4
  %v1_8052db3 = add i32 %v2_8052db1, 8
  %v2_8052db3 = inttoptr i32 %v1_8052db3 to i32*
  %v3_8052db3 = load i32, i32* %v2_8052db3, align 4
  store i32 %v3_8052db3, i32* @edi, align 4
  %v1_8052db6 = add i32 %v2_8052db1, 12
  %v2_8052db6 = inttoptr i32 %v1_8052db6 to i32*
  %v3_8052db6 = load i32, i32* %v2_8052db6, align 4
  store i32 %v3_8052db6, i32* %edx.global-to-local, align 4
  %v1_8052db9 = add i32 %v3_8052db3, 12
  %v2_8052db9 = inttoptr i32 %v1_8052db9 to i32*
  %v3_8052db9 = load i32, i32* %v2_8052db9, align 4
  store i32 %v3_8052db9, i32* @ecx, align 4
  %v12_8052dbc = icmp eq i32 %v3_8052db9, %v2_8052db1
  %v1_8052dbe = icmp eq i1 %v12_8052dbc, false
  br i1 %v1_8052dbe, label %dec_label_pc_8052dfc, label %dec_label_pc_8052dc0

dec_label_pc_8052dc0:                             ; preds = %dec_label_pc_8052dac
  %v1_8052dc0 = add i32 %v3_8052db6, 8
  %v2_8052dc0 = inttoptr i32 %v1_8052dc0 to i32*
  %v3_8052dc0 = load i32, i32* %v2_8052dc0, align 4
  %v15_8052dc0 = icmp eq i32 %v3_8052dc0, %v3_8052db9
  %v1_8052dc3 = icmp eq i1 %v15_8052dc0, false
  br i1 %v1_8052dc3, label %dec_label_pc_8052dfc, label %dec_label_pc_8052dc5

dec_label_pc_8052dc5:                             ; preds = %dec_label_pc_8052dc0
  %v2_8052dc5 = add i32 %v3_8052dac, %v1_8052d64
  store i32 %v2_8052dc5, i32* @ebx, align 4
  store i32 %v3_8052db6, i32* %v2_8052db9, align 4
  %v0_8052dca = load i32, i32* @edi, align 4
  %v1_8052dca = load i32, i32* %edx.global-to-local, align 4
  %v2_8052dca = add i32 %v1_8052dca, 8
  %v3_8052dca = inttoptr i32 %v2_8052dca to i32*
  store i32 %v0_8052dca, i32* %v3_8052dca, align 4
  %v0_8052dd4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052dcd

dec_label_pc_8052dcd:                             ; preds = %dec_label_pc_8052d94, %dec_label_pc_8052dc5
  %v1_8052de0 = phi i32 [ %v2_8052d97, %dec_label_pc_8052d94 ], [ %v0_8052dd4.pre, %dec_label_pc_8052dc5 ]
  %v1_8052dd1 = and i32 %v3_8052d9f, -4
  store i32 %v1_8052dd1, i32* @ebp, align 4
  %v1_8052dd4 = load i32, i32* @global_var_805544c.47, align 4
  %v12_8052dd4 = icmp eq i32 %v1_8052de0, %v1_8052dd4
  br i1 %v12_8052dd4, label %dec_label_pc_8052e2e, label %dec_label_pc_8052ddc

dec_label_pc_8052ddc:                             ; preds = %dec_label_pc_8052dcd
  %v2_8052ddc = add i32 %v1_8052de0, 4
  %v3_8052ddc = add i32 %v2_8052ddc, %v1_8052dd1
  %v4_8052ddc = inttoptr i32 %v3_8052ddc to i32*
  %v5_8052ddc = load i32, i32* %v4_8052ddc, align 4
  store i32 %v5_8052ddc, i32* %eax.global-to-local, align 4
  %v3_8052de0 = inttoptr i32 %v2_8052ddc to i32*
  store i32 %v1_8052dd1, i32* %v3_8052de0, align 4
  %v0_8052de3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052de3 = urem i32 %v0_8052de3, 2
  %v2_8052de3 = icmp eq i32 %v1_8052de3, 0
  store i32 %v1_8052de3, i32* %eax.global-to-local, align 4
  %v1_8052de8 = icmp eq i1 %v2_8052de3, false
  br i1 %v1_8052de8, label %dec_label_pc_8052e09, label %dec_label_pc_8052dea

dec_label_pc_8052dea:                             ; preds = %dec_label_pc_8052ddc
  %v0_8052dea = load i32, i32* @esi, align 4
  %v1_8052dea = add i32 %v0_8052dea, 8
  %v2_8052dea = inttoptr i32 %v1_8052dea to i32*
  %v3_8052dea = load i32, i32* %v2_8052dea, align 4
  store i32 %v3_8052dea, i32* @edx, align 4
  %v1_8052ded = add i32 %v0_8052dea, 12
  %v2_8052ded = inttoptr i32 %v1_8052ded to i32*
  %v3_8052ded = load i32, i32* %v2_8052ded, align 4
  store i32 %v3_8052ded, i32* %eax.global-to-local, align 4
  %v1_8052df0 = add i32 %v3_8052dea, 12
  %v2_8052df0 = inttoptr i32 %v1_8052df0 to i32*
  %v3_8052df0 = load i32, i32* %v2_8052df0, align 4
  store i32 %v3_8052df0, i32* @edi, align 4
  %v12_8052df3 = icmp eq i32 %v3_8052df0, %v0_8052dea
  %v1_8052df5 = icmp eq i1 %v12_8052df3, false
  br i1 %v1_8052df5, label %dec_label_pc_8052dfc, label %dec_label_pc_8052df7

dec_label_pc_8052df7:                             ; preds = %dec_label_pc_8052dea
  %v1_8052df7 = add i32 %v3_8052ded, 8
  %v2_8052df7 = inttoptr i32 %v1_8052df7 to i32*
  %v3_8052df7 = load i32, i32* %v2_8052df7, align 4
  %v15_8052df7 = icmp eq i32 %v3_8052df7, %v3_8052df0
  br i1 %v15_8052df7, label %dec_label_pc_8052e01, label %dec_label_pc_8052dfc

dec_label_pc_8052dfc:                             ; preds = %dec_label_pc_8052df7, %dec_label_pc_8052dea, %dec_label_pc_8052dc0, %dec_label_pc_8052dac
  %v0_8052dfc = call i32 @function_8052ebc()
  store i32 %v0_8052dfc, i32* %eax.global-to-local, align 4
  %v1_8052e01.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052e01

dec_label_pc_8052e01:                             ; preds = %dec_label_pc_8052df7, %dec_label_pc_8052dfc
  %v1_8052e01 = phi i32 [ %v3_8052dea, %dec_label_pc_8052df7 ], [ %v1_8052e01.pre, %dec_label_pc_8052dfc ]
  %v0_8052e01 = phi i32 [ %v3_8052ded, %dec_label_pc_8052df7 ], [ %v0_8052dfc, %dec_label_pc_8052dfc ]
  %v2_8052e01 = add i32 %v1_8052e01, 12
  %v3_8052e01 = inttoptr i32 %v2_8052e01 to i32*
  store i32 %v0_8052e01, i32* %v3_8052e01, align 4
  %v0_8052e04 = load i32, i32* @edx, align 4
  %v1_8052e04 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e04 = add i32 %v1_8052e04, 8
  %v3_8052e04 = inttoptr i32 %v2_8052e04 to i32*
  store i32 %v0_8052e04, i32* %v3_8052e04, align 4
  %v0_8052e07 = load i32, i32* @ebx, align 4
  %v1_8052e07 = load i32, i32* @ebp, align 4
  %v2_8052e07 = add i32 %v1_8052e07, %v0_8052e07
  store i32 %v2_8052e07, i32* @ebx, align 4
  br label %dec_label_pc_8052e09

dec_label_pc_8052e09:                             ; preds = %dec_label_pc_8052ddc, %dec_label_pc_8052e01
  %v0_8052e09 = load i32, i32* @global_var_805545c.65, align 4
  store i32 %v0_8052e09, i32* %eax.global-to-local, align 4
  %v0_8052e0e = load i32, i32* @ecx, align 4
  %v1_8052e0e = add i32 %v0_8052e0e, 12
  %v2_8052e0e = inttoptr i32 %v1_8052e0e to i32*
  store i32 ptrtoint (i32* @global_var_8055454.49 to i32), i32* %v2_8052e0e, align 4
  %v0_8052e15 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e15 = load i32, i32* @ecx, align 4
  %v2_8052e15 = add i32 %v1_8052e15, 8
  %v3_8052e15 = inttoptr i32 %v2_8052e15 to i32*
  store i32 %v0_8052e15, i32* %v3_8052e15, align 4
  %v0_8052e18 = load i32, i32* @ebx, align 4
  %v1_8052e18 = load i32, i32* @ecx, align 4
  %v3_8052e18 = add i32 %v1_8052e18, %v0_8052e18
  %v4_8052e18 = inttoptr i32 %v3_8052e18 to i32*
  store i32 %v0_8052e18, i32* %v4_8052e18, align 4
  %v0_8052e1b = load i32, i32* @ecx, align 4
  %v1_8052e1b = load i32, i32* %eax.global-to-local, align 4
  %v2_8052e1b = add i32 %v1_8052e1b, 12
  %v3_8052e1b = inttoptr i32 %v2_8052e1b to i32*
  store i32 %v0_8052e1b, i32* %v3_8052e1b, align 4
  %v0_8052e1e = load i32, i32* @ebx, align 4
  %v1_8052e20 = or i32 %v0_8052e1e, 1
  store i32 %v1_8052e20, i32* %eax.global-to-local, align 4
  %v0_8052e23 = load i32, i32* @ecx, align 4
  store i32 %v0_8052e23, i32* @global_var_805545c.65, align 4
  %v2_8052e29 = add i32 %v0_8052e23, 4
  %v3_8052e29 = inttoptr i32 %v2_8052e29 to i32*
  store i32 %v1_8052e20, i32* %v3_8052e29, align 4
  br label %dec_label_pc_8052e3e

dec_label_pc_8052e2e:                             ; preds = %dec_label_pc_8052dcd
  %v0_8052e2e = load i32, i32* @ebx, align 4
  %v2_8052e2e = add i32 %v0_8052e2e, %v1_8052dd1
  store i32 %v2_8052e2e, i32* @ebx, align 4
  %v1_8052e32 = or i32 %v2_8052e2e, 1
  store i32 %v1_8052e32, i32* %eax.global-to-local, align 4
  %v1_8052e35 = load i32, i32* @ecx, align 4
  %v2_8052e35 = add i32 %v1_8052e35, 4
  %v3_8052e35 = inttoptr i32 %v2_8052e35 to i32*
  store i32 %v1_8052e32, i32* %v3_8052e35, align 4
  %v0_8052e38 = load i32, i32* @ecx, align 4
  store i32 %v0_8052e38, i32* @global_var_805544c.47, align 4
  br label %dec_label_pc_8052e3e

dec_label_pc_8052e3e:                             ; preds = %dec_label_pc_8052e09, %dec_label_pc_8052e2e
  %v0_8052e3e = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8052e3e, 131072
  br i1 %tmp21, label %dec_label_pc_8052ea3, label %dec_label_pc_8052e46

dec_label_pc_8052e46:                             ; preds = %dec_label_pc_8052e3e
  %v0_8052e46 = load i8, i8* @global_var_8055420.46, align 32
  %v1_8052e46 = and i8 %v0_8052e46, 2
  %v2_8052e46 = icmp eq i8 %v1_8052e46, 0
  br i1 %v2_8052e46, label %dec_label_pc_8052e5f, label %dec_label_pc_8052e4f

dec_label_pc_8052e4f:                             ; preds = %dec_label_pc_8052e46
  %v2_8052e57 = call i32 @function_8052b78(i32* bitcast (i8* @global_var_8055420.46 to i32*))
  store i32 %v2_8052e57, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e5f

dec_label_pc_8052e5f:                             ; preds = %dec_label_pc_8052e46, %dec_label_pc_8052e4f
  %v0_8052e5f = load i32, i32* @global_var_805544c.47, align 4
  store i32 %v0_8052e5f, i32* %eax.global-to-local, align 4
  %v1_8052e64 = add i32 %v0_8052e5f, 4
  %v2_8052e64 = inttoptr i32 %v1_8052e64 to i32*
  %v3_8052e64 = load i32, i32* %v2_8052e64, align 4
  %v1_8052e67 = and i32 %v3_8052e64, -4
  store i32 %v1_8052e67, i32* %eax.global-to-local, align 4
  %v1_8052e6a = load i32, i32* @global_var_8055764.63, align 4
  %v7_8052e6a = icmp ult i32 %v1_8052e67, %v1_8052e6a
  br i1 %v7_8052e6a, label %dec_label_pc_8052ea3, label %dec_label_pc_8052e72

dec_label_pc_8052e72:                             ; preds = %dec_label_pc_8052e5f
  store i32 ptrtoint (i8* @global_var_8055420.46 to i32), i32* @edx, align 4
  %v0_8052e77 = load i32, i32* @global_var_8055768.61, align 8
  store i32 %v0_8052e77, i32* @eax, align 4
  %v0_8052e7c = call i32 @function_8052aeb()
  store i32 %v0_8052e7c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ea3

dec_label_pc_8052e83:                             ; preds = %dec_label_pc_8052d8b
  %v2_8052e83 = inttoptr i32 %v1_8052d54 to i32*
  %v3_8052e83 = load i32, i32* %v2_8052e83, align 4
  store i32 %v3_8052e83, i32* %edx.global-to-local, align 4
  %v0_8052e86 = load i32, i32* @global_var_8055770.54, align 16
  %v1_8052e86 = add i32 %v0_8052e86, -1
  store i32 %v1_8052e86, i32* @global_var_8055770.54, align 16
  %v2_8052e8c = add i32 %v3_8052e83, %v1_8052d64
  store i32 %v2_8052e8c, i32* %eax.global-to-local, align 4
  %v2_8052e8f = sub i32 %v1_8052d54, %v3_8052e83
  %v0_8052e95 = load i32, i32* @global_var_8055784.57, align 4
  %v2_8052e95 = sub i32 %v0_8052e95, %v2_8052e8c
  store i32 %v2_8052e95, i32* @global_var_8055784.57, align 4
  %v4_8052e9b = inttoptr i32 %v2_8052e8f to i32*
  %v5_8052e9b = call i32 @function_8053aa9(i32* %v4_8052e9b, i32 %v2_8052e8c, i32 %v1_8052d64, i32 %v1_8052d64)
  store i32 %v5_8052e9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052ea3

dec_label_pc_8052ea3:                             ; preds = %dec_label_pc_8052e5f, %dec_label_pc_8052e3e, %dec_label_pc_8052e72, %dec_label_pc_8052d6b, %dec_label_pc_8052e83
  store i32 %v2_8052d3e, i32* @eax, align 4
  %v2_8052eac = call i32 @function_8053344(i32 %v2_8052d3e, i32 1)
  store i32 %v2_8052eac, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052eb4

dec_label_pc_8052eb4:                             ; preds = %dec_label_pc_8052d20, %dec_label_pc_8052ea3
  %.0 = phi i32 [ undef, %dec_label_pc_8052d20 ], [ %v2_8052eac, %dec_label_pc_8052ea3 ]
  store i32 %v0_8052d23, i32* @ebx, align 4
  store i32 %v0_8052d22, i32* @esi, align 4
  store i32 %v0_8052d21, i32* @edi, align 4
  store i32 %v0_8052d20, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8052e83, { 1, 0, 2 }
  uselistorder i32 %v0_8052e18, { 1, 0 }
  uselistorder i32 %v1_8052de3, { 1, 0 }
  uselistorder i32 %v2_8052ddc, { 1, 0 }
  uselistorder i32 %v1_8052dd1, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052de0, { 1, 0 }
  uselistorder i32 %v1_8052d64, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8052d5f, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8052d54, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8055420.46 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8055454.49 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_805544c.47, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8055420.46 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8055420.46, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805503c.45 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8052eb4, { 1, 0 }
  uselistorder label %dec_label_pc_8052ea3, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8052e5f, { 1, 0 }
  uselistorder label %dec_label_pc_8052e3e, { 1, 0 }
  uselistorder label %dec_label_pc_8052e09, { 1, 0 }
  uselistorder label %dec_label_pc_8052e01, { 1, 0 }
  uselistorder label %dec_label_pc_8052dcd, { 1, 0 }
}

define i32 @function_8052ebc() local_unnamed_addr {
dec_label_pc_8052ed7.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8052ec8 = call i32 @function_8053341(i32 ptrtoint (i32* @global_var_8055054.66 to i32))
  %v12_8052ed2 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8052ed748 = add i32 %v12_8052ed2, 276
  %v5_8052ed749 = inttoptr i32 %v4_8052ed748 to i32*
  store i32 0, i32* %v5_8052ed749, align 4
  %v0_8052ee250 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ee251 = add i32 %v0_8052ee250, -1
  %v9_8052ee252 = icmp slt i32 %v1_8052ee251, 0
  store i32 %v1_8052ee251, i32* %eax.global-to-local, align 4
  %v1_8052ee353 = icmp eq i1 %v9_8052ee252, false
  br i1 %v1_8052ee353, label %dec_label_pc_8052ed7.dec_label_pc_8052ed7_crit_edge, label %dec_label_pc_8052ee5

dec_label_pc_8052ed7.dec_label_pc_8052ed7_crit_edge: ; preds = %dec_label_pc_8052ed7.lr.ph, %dec_label_pc_8052ed7.dec_label_pc_8052ed7_crit_edge
  %v1_8052ee254 = phi i32 [ %v1_8052ee2, %dec_label_pc_8052ed7.dec_label_pc_8052ed7_crit_edge ], [ %v1_8052ee251, %dec_label_pc_8052ed7.lr.ph ]
  %v0_8052ed7.pre = load i32, i32* @esp, align 4
  %v2_8052ed7 = mul i32 %v1_8052ee254, 4
  %v3_8052ed7 = add i32 %v0_8052ed7.pre, 152
  %v4_8052ed7 = add i32 %v3_8052ed7, %v2_8052ed7
  %v5_8052ed7 = inttoptr i32 %v4_8052ed7 to i32*
  store i32 0, i32* %v5_8052ed7, align 4
  %v0_8052ee2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ee2 = add i32 %v0_8052ee2, -1
  %v9_8052ee2 = icmp slt i32 %v1_8052ee2, 0
  store i32 %v1_8052ee2, i32* %eax.global-to-local, align 4
  %v1_8052ee3 = icmp eq i1 %v9_8052ee2, false
  br i1 %v1_8052ee3, label %dec_label_pc_8052ed7.dec_label_pc_8052ed7_crit_edge, label %dec_label_pc_8052ee5

dec_label_pc_8052ee5:                             ; preds = %dec_label_pc_8052ed7.dec_label_pc_8052ed7_crit_edge, %dec_label_pc_8052ed7.lr.ph
  %v0_8052ee5 = load i32, i32* @ebx, align 4
  %v2_8052ee9 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8052ee9, i32* @ebx, align 4
  %v4_8052ef1 = call i32 @function_8051f15(i32 %v2_8052ee9, i32 6, i32 %v0_8052ee5, i32 %v0_8052ee5)
  store i32 %v4_8052ef1, i32* %eax.global-to-local, align 4
  %v1_8052ef9 = icmp eq i32 %v4_8052ef1, 0
  %v1_8052efb = icmp eq i1 %v1_8052ef9, false
  br i1 %v1_8052efb, label %dec_label_pc_8052f0b, label %dec_label_pc_8052efd

dec_label_pc_8052efd:                             ; preds = %dec_label_pc_8052ee5
  %v3_8052f03 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8052f03 = call i32 @function_805185f(i32 1, %_TYPEDEF_sigset_t* %v3_8052f03, i32 0)
  store i32 %v4_8052f03, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f0b

dec_label_pc_8052f0b:                             ; preds = %dec_label_pc_8052ee5, %dec_label_pc_8052efd
  %v2_8052f4323 = phi i32 [ %v4_8052ef1, %dec_label_pc_8052ee5 ], [ %v4_8052f03, %dec_label_pc_8052efd ]
  %v0_8052f0b = load i8, i8* @global_var_8055134.67, align 4
  %v1_8052f0b = icmp eq i8 %v0_8052f0b, 0
  %v1_8052f12 = icmp eq i1 %v1_8052f0b, false
  br i1 %v1_8052f12, label %dec_label_pc_8052f43, label %dec_label_pc_8052f14

dec_label_pc_8052f14:                             ; preds = %dec_label_pc_8052f0b
  store i8 1, i8* @global_var_8055134.67, align 4
  br label %dec_label_pc_8052f1b

dec_label_pc_8052f1b:                             ; preds = %dec_label_pc_8052f82, %dec_label_pc_8052f14
  %v1_8052f23 = call i32 @function_8053341(i32 ptrtoint (i32* @global_var_8055054.66 to i32))
  store i32 %v1_8052f23, i32* %eax.global-to-local, align 4
  %v1_8052f2f = call i32 @function_8053cc1(i32 6)
  store i32 %v1_8052f2f, i32* %eax.global-to-local, align 4
  %v1_8052f3b = call i32 @function_8053341(i32 ptrtoint (i32* @global_var_8055054.66 to i32))
  store i32 %v1_8052f3b, i32* %eax.global-to-local, align 4
  %v0_8052f43.pre = load i8, i8* @global_var_8055134.67, align 4
  br label %dec_label_pc_8052f43

dec_label_pc_8052f43:                             ; preds = %dec_label_pc_8052f0b, %dec_label_pc_8052f1b
  %v2_8052f43 = phi i32 [ %v2_8052f4323, %dec_label_pc_8052f0b ], [ %v1_8052f3b, %dec_label_pc_8052f1b ]
  %v0_8052f43 = phi i8 [ %v0_8052f0b, %dec_label_pc_8052f0b ], [ %v0_8052f43.pre, %dec_label_pc_8052f1b ]
  %v1_8052f43 = zext i8 %v0_8052f43 to i32
  %v3_8052f43 = and i32 %v2_8052f43, -256
  %v4_8052f43 = or i32 %v1_8052f43, %v3_8052f43
  store i32 %v4_8052f43, i32* %eax.global-to-local, align 4
  %v10_8052f48 = icmp eq i8 %v0_8052f43, 1
  %v1_8052f4a = icmp eq i1 %v10_8052f48, false
  br i1 %v1_8052f4a, label %dec_label_pc_8052fa4, label %dec_label_pc_8052f77.lr.ph

dec_label_pc_8052f77.lr.ph:                       ; preds = %dec_label_pc_8052f43
  store i8 2, i8* @global_var_8055134.67, align 4
  %v2_8052f5b = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8052f5b, i32* %eax.global-to-local, align 4
  %v3_8052f60 = bitcast i32* %stack_var_-272 to i8*
  %v4_8052f60 = call i32 @function_8051b4e(i8* %v3_8052f60, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_8052f7740 = add i32 %v12_8052ed2, 140
  %v5_8052f7741 = inttoptr i32 %v4_8052f7740 to i32*
  store i32 -1, i32* %v5_8052f7741, align 4
  %v0_8052f7f42 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f7f43 = add i32 %v0_8052f7f42, -1
  %v9_8052f7f44 = icmp slt i32 %v1_8052f7f43, 0
  store i32 %v1_8052f7f43, i32* %eax.global-to-local, align 4
  %v1_8052f8045 = icmp eq i1 %v9_8052f7f44, false
  br i1 %v1_8052f8045, label %dec_label_pc_8052f77.dec_label_pc_8052f77_crit_edge, label %dec_label_pc_8052f82

dec_label_pc_8052f77.dec_label_pc_8052f77_crit_edge: ; preds = %dec_label_pc_8052f77.lr.ph, %dec_label_pc_8052f77.dec_label_pc_8052f77_crit_edge
  %v1_8052f7f46 = phi i32 [ %v1_8052f7f, %dec_label_pc_8052f77.dec_label_pc_8052f77_crit_edge ], [ %v1_8052f7f43, %dec_label_pc_8052f77.lr.ph ]
  %v0_8052f77.pre = load i32, i32* @esp, align 4
  %v2_8052f77 = mul i32 %v1_8052f7f46, 4
  %v3_8052f77 = add i32 %v0_8052f77.pre, 16
  %v4_8052f77 = add i32 %v3_8052f77, %v2_8052f77
  %v5_8052f77 = inttoptr i32 %v4_8052f77 to i32*
  store i32 -1, i32* %v5_8052f77, align 4
  %v0_8052f7f = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f7f = add i32 %v0_8052f7f, -1
  %v9_8052f7f = icmp slt i32 %v1_8052f7f, 0
  store i32 %v1_8052f7f, i32* %eax.global-to-local, align 4
  %v1_8052f80 = icmp eq i1 %v9_8052f7f, false
  br i1 %v1_8052f80, label %dec_label_pc_8052f77.dec_label_pc_8052f77_crit_edge, label %dec_label_pc_8052f82

dec_label_pc_8052f82:                             ; preds = %dec_label_pc_8052f77.dec_label_pc_8052f77_crit_edge, %dec_label_pc_8052f77.lr.ph
  store i32 %v2_8052f5b, i32* %eax.global-to-local, align 4
  %v4_8052f97 = call i32 @function_8053583(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8052f97, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f1b

dec_label_pc_8052fa4:                             ; preds = %dec_label_pc_8052f43
  %v10_8052fa4 = icmp eq i8 %v0_8052f43, 2
  %v1_8052fa6 = icmp eq i1 %v10_8052fa4, false
  br i1 %v1_8052fa6, label %dec_label_pc_8052fb0, label %dec_label_pc_8052fb0.thread

dec_label_pc_8052fb0.thread:                      ; preds = %dec_label_pc_8052fa4
  store i8 3, i8* @global_var_8055134.67, align 4
  br label %dec_label_pc_8052fb9

dec_label_pc_8052fb0:                             ; preds = %dec_label_pc_8052fa4
  %v9_8052fb0 = icmp eq i8 %v0_8052f43, 3
  %v1_8052fb7 = icmp eq i1 %v9_8052fb0, false
  br i1 %v1_8052fb7, label %dec_label_pc_8052fca, label %dec_label_pc_8052fb9

dec_label_pc_8052fb9:                             ; preds = %dec_label_pc_8052fb0.thread, %dec_label_pc_8052fb0
  store i8 4, i8* @global_var_8055134.67, align 4
  %v1_8052fc5 = call i32 @function_80536e4(i32 127)
  unreachable

dec_label_pc_8052fca:                             ; preds = %dec_label_pc_8052fb0, %dec_label_pc_8052fca
  br label %dec_label_pc_8052fca

; uselistorder directives
  uselistorder i32 %v1_8052f7f, { 2, 1, 0 }
  uselistorder i32 %v1_8052ee2, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 15, 16, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1, 17, 18 }
  uselistorder i8 3, { 0, 2, 1 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_8055134.67, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8052fca, { 1, 0 }
  uselistorder label %dec_label_pc_8052fb9, { 1, 0 }
  uselistorder label %dec_label_pc_8052f77.dec_label_pc_8052f77_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8052f43, { 1, 0 }
  uselistorder label %dec_label_pc_8052f0b, { 1, 0 }
  uselistorder label %dec_label_pc_8052ed7.dec_label_pc_8052ed7_crit_edge, { 1, 0 }
}

define i32 @function_8052fcd(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052fcd:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8052fe0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8052fe0, i32* @ebx, align 4
  %v2_8052fe5 = call i32 @function_8053344(i32 %v2_8052fe0, i32 134558529)
  %v1_8052ff1 = call i32 @function_8053341(i32 ptrtoint (i32* @global_var_805506c.68 to i32))
  %v0_8052ff6 = load i32, i32* @global_var_8055138.69, align 8
  store i32 %v0_8052ff6, i32* @eax, align 4
  %v1_8052ffe = icmp eq i32 %v0_8052ff6, 0
  br i1 %v1_8052ffe, label %dec_label_pc_805300b, label %dec_label_pc_8053002

dec_label_pc_8053002:                             ; preds = %dec_label_pc_8052fcd
  %v0_8053005 = load i32, i32* @esi, align 4
  %v1_8053006 = call i32 @unknown_0(i32 %v0_8053005)
  store i32 %v1_8053006, i32* @eax, align 4
  br label %dec_label_pc_805300b

dec_label_pc_805300b:                             ; preds = %dec_label_pc_8052fcd, %dec_label_pc_8053002
  %v2_8053010 = call i32 @function_8053344(i32 %v2_8052fe0, i32 1)
  %v0_8053015 = call i32 @function_8053302()
  %v0_805302e = load i32, i32* @esi, align 4
  %v1_805302f = call i32 @function_80536e4(i32 %v0_805302e)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_80536e4, { 1, 0 }
  uselistorder i32 (i32)* @function_8053341, { 6, 5, 4, 3, 2, 10, 0, 1, 9, 8, 7 }
  uselistorder i32 (i32, i32)* @function_8053344, { 7, 6, 5, 4, 13, 12, 3, 0, 2, 1, 11, 10, 9, 8 }
  uselistorder label %dec_label_pc_805300b, { 1, 0 }
}

define i32 @function_8053034() local_unnamed_addr {
dec_label_pc_8053034:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8053034 = load i32, i32* @ebp, align 4
  %v0_8053035 = load i32, i32* @edi, align 4
  %v0_8053036 = load i32, i32* @esi, align 4
  %v0_8053037 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %tmp32, i32* %edx.global-to-local, align 4
  %v1_805304a = icmp eq i32 %tmp32, 0
  %v1_805304c = icmp eq i1 %v1_805304a, false
  br i1 %v1_805304c, label %dec_label_pc_8053053.lr.ph, label %dec_label_pc_80531ab

dec_label_pc_8053053.lr.ph:                       ; preds = %dec_label_pc_8053034
  %v15_8053038 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805305356 = add i32 %v15_8053038, 416
  %v5_805305357 = inttoptr i32 %v4_805305356 to i32*
  store i32 0, i32* %v5_805305357, align 4
  %v0_805305e58 = load i32, i32* %eax.global-to-local, align 4
  %v1_805305e59 = add i32 %v0_805305e58, -1
  %v9_805305e60 = icmp slt i32 %v1_805305e59, 0
  store i32 %v1_805305e59, i32* %eax.global-to-local, align 4
  %v1_805305f61 = icmp eq i1 %v9_805305e60, false
  br i1 %v1_805305f61, label %dec_label_pc_8053053.dec_label_pc_8053053_crit_edge, label %dec_label_pc_8053061

dec_label_pc_8053053.dec_label_pc_8053053_crit_edge: ; preds = %dec_label_pc_8053053.lr.ph, %dec_label_pc_8053053.dec_label_pc_8053053_crit_edge
  %v1_805305e62 = phi i32 [ %v1_805305e, %dec_label_pc_8053053.dec_label_pc_8053053_crit_edge ], [ %v1_805305e59, %dec_label_pc_8053053.lr.ph ]
  %v0_8053053.pre = load i32, i32* @esp, align 4
  %v2_8053053 = mul i32 %v1_805305e62, 4
  %v3_8053053 = add i32 %v0_8053053.pre, 292
  %v4_8053053 = add i32 %v3_8053053, %v2_8053053
  %v5_8053053 = inttoptr i32 %v4_8053053 to i32*
  store i32 0, i32* %v5_8053053, align 4
  %v0_805305e = load i32, i32* %eax.global-to-local, align 4
  %v1_805305e = add i32 %v0_805305e, -1
  %v9_805305e = icmp slt i32 %v1_805305e, 0
  store i32 %v1_805305e, i32* %eax.global-to-local, align 4
  %v1_805305f = icmp eq i1 %v9_805305e, false
  br i1 %v1_805305f, label %dec_label_pc_8053053.dec_label_pc_8053053_crit_edge, label %dec_label_pc_8053061

dec_label_pc_8053061:                             ; preds = %dec_label_pc_8053053.dec_label_pc_8053053_crit_edge, %dec_label_pc_8053053.lr.ph
  %v1_805305e.lcssa = phi i32 [ %v1_805305e59, %dec_label_pc_8053053.lr.ph ], [ %v1_805305e, %dec_label_pc_8053053.dec_label_pc_8053053_crit_edge ]
  store i32 %tmp32, i32* %stack_var_-24, align 4
  %v2_8053077 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8053077, i32* @ebx, align 4
  store i32 %v2_8053077, i32* %stack_var_-460, align 4
  %v4_805307f = call i32 @function_8051f15(i32 %v2_8053077, i32 17, i32 %v1_805305e.lcssa, i32 %v1_805305e.lcssa)
  store i32 %v4_805307f, i32* %eax.global-to-local, align 4
  %v2_8053087 = icmp slt i32 %v4_805307f, 0
  br i1 %v2_8053087, label %dec_label_pc_80531af, label %dec_label_pc_805308f

dec_label_pc_805308f:                             ; preds = %dec_label_pc_8053061
  %v2_8053090 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8053090, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_805309b = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_805309b = call i32 @function_805185f(i32 0, %_TYPEDEF_sigset_t* %v3_805309b, i32 %v2_8053090)
  store i32 %v4_805309b, i32* %eax.global-to-local, align 4
  %v1_80530a3 = icmp eq i32 %v4_805309b, 0
  %v1_80530a5 = icmp eq i1 %v1_80530a3, false
  br i1 %v1_80530a5, label %dec_label_pc_80531af, label %dec_label_pc_80530ab

dec_label_pc_80530ab:                             ; preds = %dec_label_pc_805308f
  store i32 %v2_8053090, i32* %stack_var_-460, align 4
  %v4_80530b0 = call i32 @function_8051ef1(i32 %v2_8053090, i32 17, i32 %v4_805309b, i32 %v4_805309b)
  store i32 %v4_80530b0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80530bd = icmp eq i32 %v4_80530b0, 0
  br i1 %v1_80530bd, label %dec_label_pc_80530c6.lr.ph, label %dec_label_pc_8053179

dec_label_pc_80530c6.lr.ph:                       ; preds = %dec_label_pc_80530ab
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_805305357, align 4
  %v0_80530d150 = load i32, i32* %edx.global-to-local, align 4
  %v1_80530d151 = add i32 %v0_80530d150, -1
  %v9_80530d152 = icmp slt i32 %v1_80530d151, 0
  store i32 %v1_80530d151, i32* %edx.global-to-local, align 4
  %v1_80530d253 = icmp eq i1 %v9_80530d152, false
  br i1 %v1_80530d253, label %dec_label_pc_80530c6.dec_label_pc_80530c6_crit_edge, label %dec_label_pc_80530d4

dec_label_pc_80530c6.dec_label_pc_80530c6_crit_edge: ; preds = %dec_label_pc_80530c6.lr.ph, %dec_label_pc_80530c6.dec_label_pc_80530c6_crit_edge
  %v1_80530d154 = phi i32 [ %v1_80530d1, %dec_label_pc_80530c6.dec_label_pc_80530c6_crit_edge ], [ %v1_80530d151, %dec_label_pc_80530c6.lr.ph ]
  %v0_80530c6.pre = load i32, i32* @esp, align 4
  %v2_80530c6 = mul i32 %v1_80530d154, 4
  %v3_80530c6 = add i32 %v0_80530c6.pre, 292
  %v4_80530c6 = add i32 %v3_80530c6, %v2_80530c6
  %v5_80530c6 = inttoptr i32 %v4_80530c6 to i32*
  store i32 0, i32* %v5_80530c6, align 4
  %v0_80530d1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80530d1 = add i32 %v0_80530d1, -1
  %v9_80530d1 = icmp slt i32 %v1_80530d1, 0
  store i32 %v1_80530d1, i32* %edx.global-to-local, align 4
  %v1_80530d2 = icmp eq i1 %v9_80530d1, false
  br i1 %v1_80530d2, label %dec_label_pc_80530c6.dec_label_pc_80530c6_crit_edge, label %dec_label_pc_80530d4

dec_label_pc_80530d4:                             ; preds = %dec_label_pc_80530c6.dec_label_pc_80530c6_crit_edge, %dec_label_pc_80530c6.lr.ph
  store i32 %v2_8053077, i32* %eax.global-to-local, align 4
  store i32 %v2_8053077, i32* %stack_var_-460, align 4
  %v4_80530e0 = call i32 @function_8051f15(i32 %v2_8053077, i32 17, i32 0, i32 0)
  store i32 %v4_80530e0, i32* %eax.global-to-local, align 4
  %v2_80530e8 = icmp slt i32 %v4_80530e0, 0
  br i1 %v2_80530e8, label %dec_label_pc_80531af, label %dec_label_pc_80530f0

dec_label_pc_80530f0:                             ; preds = %dec_label_pc_80530d4
  %v2_80530f1 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80530f1, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80530fa = call i32 @function_8053583(i32 17, i32* null, i32 %v2_80530f1)
  store i32 %v4_80530fa, i32* %eax.global-to-local, align 4
  %v2_8053102 = icmp slt i32 %v4_80530fa, 0
  %v1_8053104 = icmp eq i1 %v2_8053102, false
  br i1 %v1_8053104, label %dec_label_pc_805312e, label %dec_label_pc_8053106

dec_label_pc_8053106:                             ; preds = %dec_label_pc_80530f0
  %v0_8053106 = load i32, i32* %stack_var_-460, align 4
  %v1_8053106 = call i32 @function_8051afd(i32 %v0_8053106)
  store i32 %v1_8053106, i32* %eax.global-to-local, align 4
  store i32 %v1_8053106, i32* @ebx, align 4
  %v1_805310d = inttoptr i32 %v1_8053106 to i32*
  %v2_805310d = load i32, i32* %v1_805310d, align 4
  store i32 %v2_805310d, i32* @esi, align 4
  store i32 %v2_8053090, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805311c = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805311c = call i32 @function_805185f(i32 2, %_TYPEDEF_sigset_t* %v3_805311c, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8053127 = load i32, i32* @esi, align 4
  %v1_8053127 = load i32, i32* @ebx, align 4
  %v2_8053127 = inttoptr i32 %v1_8053127 to i32*
  store i32 %v0_8053127, i32* %v2_8053127, align 4
  %v0_80531bc.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80531b2

dec_label_pc_805312e:                             ; preds = %dec_label_pc_80530f0
  %v3_805312e = load i32, i32* %stack_var_-420, align 4
  %v12_805312e = icmp eq i32 %v3_805312e, 1
  %v2_805313a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805313a, i32* @ebx, align 4
  %v1_8053141 = icmp eq i1 %v12_805312e, false
  br i1 %v1_8053141, label %dec_label_pc_8053168, label %dec_label_pc_8053143

dec_label_pc_8053143:                             ; preds = %dec_label_pc_805312e
  %v0_8053143 = load i32, i32* @edi, align 4
  store i32 %v2_805313a, i32* %stack_var_-460, align 4
  %v4_8053147 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053147 = call i32 @function_8053adb(%timespec* %v4_8053147, i32 %v2_805313a, i32 %v0_8053143, i32 %v0_8053143)
  store i32 %v5_8053147, i32* %eax.global-to-local, align 4
  store i32 %v5_8053147, i32* @edi, align 4
  %v1_805314e = call i32 @function_8051afd(i32 %v2_805313a)
  store i32 %v1_805314e, i32* %eax.global-to-local, align 4
  store i32 %v1_805314e, i32* @ebx, align 4
  %v1_8053158 = inttoptr i32 %v1_805314e to i32*
  %v2_8053158 = load i32, i32* %v1_8053158, align 4
  store i32 %v2_8053158, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805315f = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805315f = call i32 @function_805185f(i32 2, %_TYPEDEF_sigset_t* %v3_805315f, i32 0)
  store i32 %v4_805315f, i32* %eax.global-to-local, align 4
  %v0_8053164 = load i32, i32* @esi, align 4
  %v1_8053164 = load i32, i32* @ebx, align 4
  %v2_8053164 = inttoptr i32 %v1_8053164 to i32*
  store i32 %v0_8053164, i32* %v2_8053164, align 4
  %v0_805318e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805318b

dec_label_pc_8053168:                             ; preds = %dec_label_pc_805312e
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805316e = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805316e = call i32 @function_805185f(i32 2, %_TYPEDEF_sigset_t* %v3_805316e, i32 0)
  store i32 %v4_805316e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053184

dec_label_pc_8053179:                             ; preds = %dec_label_pc_80530ab
  %v2_805317b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805317b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053184

dec_label_pc_8053184:                             ; preds = %dec_label_pc_8053168, %dec_label_pc_8053179
  %storemerge3.pre-phi = phi i32 [ %v2_805313a, %dec_label_pc_8053168 ], [ %v2_805317b, %dec_label_pc_8053179 ]
  %v3_8053184 = phi i32 [ %v2_8053090, %dec_label_pc_8053168 ], [ %v4_80530b0, %dec_label_pc_8053179 ]
  %v2_8053184 = phi i32 [ 0, %dec_label_pc_8053168 ], [ %v4_80530b0, %dec_label_pc_8053179 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_8053184 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8053184 = call i32 @function_8053adb(%timespec* %v4_8053184, i32 %storemerge3.pre-phi, i32 %v2_8053184, i32 %v3_8053184)
  store i32 %v5_8053184, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805318b

dec_label_pc_805318b:                             ; preds = %dec_label_pc_8053143, %dec_label_pc_8053184
  %v0_805318e = phi i32 [ %v0_805318e.pre, %dec_label_pc_8053143 ], [ %v5_8053184, %dec_label_pc_8053184 ]
  %v1_805318e = icmp eq i32 %v0_805318e, 0
  br i1 %v1_805318e, label %dec_label_pc_80531ab, label %dec_label_pc_8053192

dec_label_pc_8053192:                             ; preds = %dec_label_pc_805318b
  %v4_80531a2 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_80531a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80531b2

dec_label_pc_80531ab:                             ; preds = %dec_label_pc_8053034, %dec_label_pc_805318b
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80531b2

dec_label_pc_80531af:                             ; preds = %dec_label_pc_80530d4, %dec_label_pc_805308f, %dec_label_pc_8053061
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80531b2

dec_label_pc_80531b2:                             ; preds = %dec_label_pc_80531ab, %dec_label_pc_8053192, %dec_label_pc_8053106, %dec_label_pc_80531af
  %v0_80531bc = phi i32 [ 0, %dec_label_pc_80531ab ], [ %v4_80531a2, %dec_label_pc_8053192 ], [ %v0_80531bc.pre, %dec_label_pc_8053106 ], [ -1, %dec_label_pc_80531af ]
  store i32 %v0_8053037, i32* @ebx, align 4
  store i32 %v0_8053036, i32* @esi, align 4
  store i32 %v0_8053035, i32* @edi, align 4
  store i32 %v0_8053034, i32* @ebp, align 4
  ret i32 %v0_80531bc

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_805314e, { 1, 0, 2 }
  uselistorder i32 %v2_805313a, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80530d1, { 2, 1, 0 }
  uselistorder i32 %v4_80530b0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8053090, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_8053077, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_805305e, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32 %tmp32, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 6, 7, 4, 5, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 0, 24, 25, 23 }
  uselistorder i32 (i32, i32*, i32)* @function_8053583, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_8051f15, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_80531b2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80531ab, { 1, 0 }
  uselistorder label %dec_label_pc_805318b, { 1, 0 }
  uselistorder label %dec_label_pc_8053184, { 1, 0 }
  uselistorder label %dec_label_pc_80530c6.dec_label_pc_80530c6_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8053053.dec_label_pc_8053053_crit_edge, { 1, 0 }
}

define i32 @function_80531bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_80531bd:
  switch i32 %arg1, label %dec_label_pc_80531dc [
    i32 0, label %dec_label_pc_80531ec
    i32 1, label %dec_label_pc_80532d1
    i32 2, label %dec_label_pc_80531f6
    i32 3, label %dec_label_pc_8053200
    i32 4, label %dec_label_pc_805320a
    i32 5, label %dec_label_pc_80532a0
    i32 6, label %dec_label_pc_8053212
    i32 7, label %dec_label_pc_80531d2
    i32 8, label %dec_label_pc_80531d2
    i32 9, label %dec_label_pc_80531d2
    i32 10, label %dec_label_pc_80531d2
    i32 11, label %dec_label_pc_80531d2
    i32 12, label %dec_label_pc_80531d2
    i32 13, label %dec_label_pc_80531d2
    i32 14, label %dec_label_pc_80531d2
    i32 15, label %dec_label_pc_80531d2
    i32 16, label %dec_label_pc_80531d2
    i32 17, label %dec_label_pc_80531d2
    i32 18, label %dec_label_pc_80531d2
    i32 19, label %dec_label_pc_80531d2
    i32 20, label %dec_label_pc_80531d2
    i32 21, label %dec_label_pc_80531d2
    i32 22, label %dec_label_pc_80531d2
    i32 23, label %dec_label_pc_80532d1
    i32 24, label %dec_label_pc_80532d1
    i32 25, label %dec_label_pc_80532dd
    i32 26, label %dec_label_pc_80532ae
    i32 27, label %dec_label_pc_80532d1
    i32 28, label %dec_label_pc_8053224
    i32 29, label %dec_label_pc_80532a7
    i32 30, label %dec_label_pc_805321c
    i32 31, label %dec_label_pc_80532bc
    i32 32, label %dec_label_pc_80532d1
    i32 33, label %dec_label_pc_80532d1
    i32 34, label %dec_label_pc_80532d1
    i32 35, label %dec_label_pc_80532b5
    i32 36, label %dec_label_pc_80532e4
    i32 37, label %dec_label_pc_80532eb
    i32 38, label %dec_label_pc_80532e4
    i32 39, label %dec_label_pc_805322e
    i32 40, label %dec_label_pc_80532f2
    i32 41, label %dec_label_pc_80532d1
    i32 42, label %dec_label_pc_80532bc
    i32 43, label %dec_label_pc_80532eb
    i32 44, label %dec_label_pc_80532f9
    i32 45, label %dec_label_pc_80532eb
    i32 46, label %dec_label_pc_80532a7
    i32 47, label %dec_label_pc_80532a7
    i32 48, label %dec_label_pc_80532a7
    i32 49, label %dec_label_pc_80532d1
    i32 50, label %dec_label_pc_80532d1
    i32 51, label %dec_label_pc_80532a7
    i32 52, label %dec_label_pc_80532a7
    i32 53, label %dec_label_pc_80532d1
    i32 54, label %dec_label_pc_80532d1
    i32 55, label %dec_label_pc_80532d1
    i32 56, label %dec_label_pc_80532d1
    i32 57, label %dec_label_pc_80532d1
    i32 58, label %dec_label_pc_80532d1
    i32 59, label %dec_label_pc_80532d1
    i32 60, label %dec_label_pc_80532d1
    i32 61, label %dec_label_pc_80532d1
    i32 62, label %dec_label_pc_80532d1
    i32 63, label %dec_label_pc_80532d1
    i32 64, label %dec_label_pc_80532d1
    i32 65, label %dec_label_pc_80532d1
    i32 66, label %dec_label_pc_80532d1
    i32 67, label %dec_label_pc_80531d2
    i32 68, label %dec_label_pc_80531d2
    i32 69, label %dec_label_pc_80532b5
    i32 70, label %dec_label_pc_80532b5
    i32 71, label %dec_label_pc_80532b5
    i32 72, label %dec_label_pc_80532bc
    i32 73, label %dec_label_pc_80532c3
    i32 74, label %dec_label_pc_80532ca
    i32 75, label %dec_label_pc_8053238
    i32 76, label %dec_label_pc_80532ca
    i32 77, label %dec_label_pc_80531d2
    i32 78, label %dec_label_pc_80531d2
    i32 79, label %dec_label_pc_80531d2
    i32 80, label %dec_label_pc_80531d2
    i32 81, label %dec_label_pc_80531d2
    i32 82, label %dec_label_pc_80531d2
    i32 83, label %dec_label_pc_80531d2
    i32 84, label %dec_label_pc_80531d2
    i32 85, label %dec_label_pc_80532d1
    i32 86, label %dec_label_pc_80532d1
    i32 87, label %dec_label_pc_80532ae
    i32 88, label %dec_label_pc_8053242
    i32 89, label %dec_label_pc_805324c
    i32 90, label %dec_label_pc_80532c3
    i32 91, label %dec_label_pc_80531d2
    i32 92, label %dec_label_pc_80531d2
    i32 93, label %dec_label_pc_80531d2
    i32 94, label %dec_label_pc_80531d2
    i32 95, label %dec_label_pc_80532a7
    i32 96, label %dec_label_pc_80532d1
    i32 97, label %dec_label_pc_80532d1
    i32 98, label %dec_label_pc_80531d2
    i32 99, label %dec_label_pc_80531d2
    i32 100, label %dec_label_pc_80531d2
    i32 101, label %dec_label_pc_8053256
    i32 102, label %dec_label_pc_8053299
    i32 103, label %dec_label_pc_80532d6
    i32 104, label %dec_label_pc_80532ae
    i32 105, label %dec_label_pc_8053260
    i32 106, label %dec_label_pc_80532bc
    i32 107, label %dec_label_pc_80532bc
    i32 108, label %dec_label_pc_80532a0
    i32 109, label %dec_label_pc_80532dd
    i32 110, label %dec_label_pc_80532f9
    i32 111, label %dec_label_pc_8053299
    i32 112, label %dec_label_pc_80532d6
    i32 113, label %dec_label_pc_80532f9
    i32 114, label %dec_label_pc_805326a
    i32 115, label %dec_label_pc_80532f2
    i32 116, label %dec_label_pc_80532d1
    i32 117, label %dec_label_pc_80532d1
    i32 118, label %dec_label_pc_8053274
    i32 119, label %dec_label_pc_805327e
    i32 120, label %dec_label_pc_80532eb
    i32 121, label %dec_label_pc_80532ae
    i32 122, label %dec_label_pc_80532ae
    i32 123, label %dec_label_pc_80532ae
    i32 124, label %dec_label_pc_80532ae
    i32 125, label %dec_label_pc_80531d2
    i32 126, label %dec_label_pc_80531d2
    i32 127, label %dec_label_pc_80532d1
    i32 128, label %dec_label_pc_80532d1
    i32 129, label %dec_label_pc_80531d2
    i32 130, label %dec_label_pc_80531d2
    i32 131, label %dec_label_pc_80532d1
    i32 149, label %dec_label_pc_8053285
  ]

dec_label_pc_80531d2:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80531dc:                             ; preds = %dec_label_pc_80531bd
  %v1_80531dc = call i32 @function_8051afd(i32 ptrtoint (i32* @0 to i32))
  %v1_80531e1 = inttoptr i32 %v1_80531dc to i32*
  store i32 22, i32* %v1_80531e1, align 4
  br label %dec_label_pc_80532d1

dec_label_pc_80531ec:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80531f6:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_8053200:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_805320a:                             ; preds = %dec_label_pc_80531bd
  %v0_805320d = call i32 @function_8053909()
  br label %dec_label_pc_8053212

dec_label_pc_8053212:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_805320a
  br label %dec_label_pc_80532fe

dec_label_pc_805321c:                             ; preds = %dec_label_pc_80531bd
  %v0_805321f = call i32 @function_80539a0()
  br label %dec_label_pc_8053224

dec_label_pc_8053224:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_805321c
  br label %dec_label_pc_80532fe

dec_label_pc_805322e:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_8053238:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_8053242:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_805324c:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_8053256:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_8053260:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_805326a:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_8053274:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_805327e:                             ; preds = %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_8053285:                             ; preds = %dec_label_pc_80531bd
  %v5_805328b = call i32 @function_805370c(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8053293 = icmp slt i32 %v5_805328b, 0
  %v1_8053295 = icmp eq i1 %v2_8053293, false
  br i1 %v1_8053295, label %dec_label_pc_80532a7, label %dec_label_pc_80532d1

dec_label_pc_8053299:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532a0:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532a7:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_8053285
  br label %dec_label_pc_80532fe

dec_label_pc_80532ae:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532b5:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532bc:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532c3:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532ca:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532d1:                             ; preds = %dec_label_pc_8053285, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531dc
  br label %dec_label_pc_80532fe

dec_label_pc_80532d6:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532dd:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532e4:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532eb:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532f2:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532f9:                             ; preds = %dec_label_pc_80531bd, %dec_label_pc_80531bd, %dec_label_pc_80531bd
  br label %dec_label_pc_80532fe

dec_label_pc_80532fe:                             ; preds = %dec_label_pc_80532f2, %dec_label_pc_80532eb, %dec_label_pc_80532e4, %dec_label_pc_80532dd, %dec_label_pc_80532d6, %dec_label_pc_80532ca, %dec_label_pc_80532c3, %dec_label_pc_80532bc, %dec_label_pc_80532b5, %dec_label_pc_80532ae, %dec_label_pc_80532a0, %dec_label_pc_8053299, %dec_label_pc_80532a7, %dec_label_pc_805327e, %dec_label_pc_8053274, %dec_label_pc_805326a, %dec_label_pc_8053260, %dec_label_pc_8053256, %dec_label_pc_805324c, %dec_label_pc_8053242, %dec_label_pc_8053238, %dec_label_pc_805322e, %dec_label_pc_8053224, %dec_label_pc_8053212, %dec_label_pc_8053200, %dec_label_pc_80531f6, %dec_label_pc_80531ec, %dec_label_pc_80531d2, %dec_label_pc_80532d1, %dec_label_pc_80532f9
  %v0_8053301 = phi i32 [ 255, %dec_label_pc_80532f2 ], [ 2048, %dec_label_pc_80532eb ], [ 99, %dec_label_pc_80532e4 ], [ 20, %dec_label_pc_80532dd ], [ -128, %dec_label_pc_80532d6 ], [ 1024, %dec_label_pc_80532ca ], [ 4, %dec_label_pc_80532c3 ], [ 32, %dec_label_pc_80532bc ], [ 256, %dec_label_pc_80532b5 ], [ 2147483647, %dec_label_pc_80532ae ], [ 16, %dec_label_pc_80532a0 ], [ 127, %dec_label_pc_8053299 ], [ 200112, %dec_label_pc_80532a7 ], [ 9, %dec_label_pc_805327e ], [ 65535, %dec_label_pc_8053274 ], [ -32768, %dec_label_pc_805326a ], [ -2147483648, %dec_label_pc_8053260 ], [ 8, %dec_label_pc_8053256 ], [ 500, %dec_label_pc_805324c ], [ 4096, %dec_label_pc_8053242 ], [ 16384, %dec_label_pc_8053238 ], [ 1000, %dec_label_pc_805322e ], [ 32768, %dec_label_pc_8053224 ], [ 6, %dec_label_pc_8053212 ], [ 65536, %dec_label_pc_8053200 ], [ 100, %dec_label_pc_80531f6 ], [ 131072, %dec_label_pc_80531ec ], [ 1, %dec_label_pc_80531d2 ], [ -1, %dec_label_pc_80532d1 ], [ 32767, %dec_label_pc_80532f9 ]
  ret i32 %v0_8053301

; uselistorder directives
  uselistorder i32 65536, { 32, 33, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 14, 12, 15, 17, 16, 18, 1, 19, 0, 2, 22, 20, 23, 21, 26, 24, 25, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 22, 23, 18, 19, 3, 4, 16, 17, 20, 21, 14, 15, 1, 2, 12, 13, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 65535, { 2, 0, 1, 3 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 3, 1, 0, 2 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 2, 0, 3, 4, 1, 5, 6, 7 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 96, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 92, { 11, 12, 1, 0, 4, 2, 3, 6, 13, 14, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 8, 26, 27, 28, 5, 29, 30, 7, 35, 32, 33, 34, 31, 36 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 4, 0, 1, 2, 3 }
  uselistorder i32 60, { 2, 0, 1 }
  uselistorder i32 55, { 2, 0, 1, 6, 3, 4, 5 }
  uselistorder i32 53, { 1, 2, 0 }
  uselistorder i32 51, { 1, 2, 3, 0 }
  uselistorder i32 50, { 1, 2, 0 }
  uselistorder i32 49, { 1, 2, 0 }
  uselistorder i32 47, { 1, 2, 3, 4, 0 }
  uselistorder i32 46, { 2, 0, 3, 4, 1 }
  uselistorder i32 43, { 1, 2, 3, 0 }
  uselistorder i32 42, { 1, 0, 2, 3, 4 }
  uselistorder i32 37, { 1, 0 }
  uselistorder i32 34, { 2, 0, 1 }
  uselistorder i32 27, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 23, { 1, 0 }
  uselistorder i32 21, { 1, 0 }
  uselistorder i32 17, { 6, 4, 5, 2, 3, 1, 0 }
  uselistorder i32 13, { 1, 0, 2, 3, 4 }
  uselistorder i32 9, { 3, 6, 0, 1, 5, 8, 4, 10, 9, 7, 11, 2 }
  uselistorder i32 6, { 0, 5, 2, 3, 1, 8, 4, 7, 6 }
  uselistorder i32 5, { 5, 0, 8, 9, 3, 2, 7, 6, 1, 4 }
  uselistorder label %dec_label_pc_80532fe, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80532d1, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80532a7, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053224, { 1, 0 }
  uselistorder label %dec_label_pc_8053212, { 1, 0 }
}

define i32 @function_8053302() local_unnamed_addr {
dec_label_pc_8053302:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053302 = load i32, i32* @ebx, align 4
  store i32 %v0_8053302, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565888), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565888), i32 2), i32 0), label %dec_label_pc_8053316, label %dec_label_pc_8053323

dec_label_pc_8053316:                             ; preds = %dec_label_pc_8053302, %dec_label_pc_8053316
  %v1_805331d6 = phi i32 [ %v1_805331d, %dec_label_pc_8053316 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565888), i32 2), i32 -1), %dec_label_pc_8053302 ]
  store i32 ptrtoint (i32* @global_var_805331d.72 to i32), i32* %stack_var_-16, align 4
  %v5_8053316 = mul i32 %v1_805331d6, 4
  %v6_8053316 = add i32 %v5_8053316, ptrtoint (i32* @global_var_8055000.71 to i32)
  %v7_8053316 = inttoptr i32 %v6_8053316 to i32*
  %v8_8053316 = load i32, i32* %v7_8053316, align 4
  call void @__pseudo_call(i32 %v8_8053316)
  %v0_805331d.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805331d = add i32 %v0_805331d.pre, -1
  store i32 %v1_805331d, i32* %ebx.global-to-local, align 4
  %v10_805331e = icmp eq i32 %v0_805331d.pre, 0
  %v1_8053321 = icmp eq i1 %v10_805331e, false
  br i1 %v1_8053321, label %dec_label_pc_8053316, label %dec_label_pc_8053323

dec_label_pc_8053323:                             ; preds = %dec_label_pc_8053316, %dec_label_pc_8053302
  %v0_8053323 = load i32, i32* @global_var_8055148.73, align 8
  %v1_8053328 = icmp eq i32 %v0_8053323, 0
  br i1 %v1_8053328, label %dec_label_pc_805332e, label %dec_label_pc_805332c

dec_label_pc_805332c:                             ; preds = %dec_label_pc_8053323
  %v0_805332c = load i32, i32* %stack_var_-16, align 4
  %v1_805332c = call i32 @unknown_0(i32 %v0_805332c)
  br label %dec_label_pc_805332e

dec_label_pc_805332e:                             ; preds = %dec_label_pc_805332c, %dec_label_pc_8053323
  %v0_805332e = load i32, i32* @global_var_805514c.74, align 4
  store i32 %v0_805332e, i32* @ecx, align 4
  %v1_8053334 = icmp eq i32 %v0_805332e, 0
  br i1 %v1_8053334, label %dec_label_pc_805333d, label %dec_label_pc_8053338

dec_label_pc_8053338:                             ; preds = %dec_label_pc_805332e
  %v2_805333a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805333a, i32* %ebx.global-to-local, align 4
  %v0_805333b = load i32, i32* %stack_var_-16, align 4
  %v1_805333b = call i32 @unknown_0(i32 %v0_805333b)
  br label %dec_label_pc_805333d

dec_label_pc_805333d:                             ; preds = %dec_label_pc_805332e, %dec_label_pc_8053338
  %v2_805333d = load i32, i32* %stack_var_-16, align 4
  %v2_805333e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805333e, i32* @edx, align 4
  ret i32 %v2_805333d

; uselistorder directives
  uselistorder i32 %v1_805331d, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805333d, { 1, 0 }
  uselistorder label %dec_label_pc_8053316, { 1, 0 }
}

define i32 @function_8053341(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053341:
  ret i32 0
}

define i32 @function_8053344(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053344:
  %v0_8053344 = load i32, i32* @eax, align 4
  ret i32 %v0_8053344
}

define i32 @function_8053345() local_unnamed_addr {
dec_label_pc_8053345:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8053345 = load i32, i32* @esi, align 4
  %v0_8053346 = load i32, i32* @ebx, align 4
  %v0_805334a = load i32, i32* @eax, align 4
  store i32 %v0_805334a, i32* @esi, align 4
  %v0_805334c = load i32, i32* @edx, align 4
  store i32 %v0_805334c, i32* @ebx, align 4
  %v4_8053351 = call i32 @function_805155d(i32 %v0_805334a, i32 1, i32 %tmp6)
  %v8_8053359 = icmp eq i32 %v4_8053351, -1
  %v1_805335a = icmp eq i1 %v8_8053359, false
  br i1 %v1_805335a, label %dec_label_pc_8053375, label %dec_label_pc_805335c

dec_label_pc_805335c:                             ; preds = %dec_label_pc_8053345
  %v0_805335e = load i32, i32* @ebx, align 4
  %v6_8053364 = call i32 @function_8051704(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80546f0.75, i32 0, i32 0), i32 %v0_805335e)
  %v1_805336c = load i32, i32* @esi, align 4
  %v12_805336c = icmp eq i32 %v6_8053364, %v1_805336c
  br i1 %v12_805336c, label %dec_label_pc_8053375, label %dec_label_pc_8053370

dec_label_pc_8053370:                             ; preds = %dec_label_pc_805335c
  %v0_8053370 = call i32 @function_8052ebc()
  br label %dec_label_pc_8053375

dec_label_pc_8053375:                             ; preds = %dec_label_pc_805335c, %dec_label_pc_8053345, %dec_label_pc_8053370
  %v2_8053375 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8053346, i32* @ebx, align 4
  store i32 %v0_8053345, i32* @esi, align 4
  ret i32 %v2_8053375

; uselistorder directives
  uselistorder i32 ()* @function_8052ebc, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_8051704, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_805155d, { 2, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8053375, { 2, 0, 1 }
}

define i32 @function_8053379() local_unnamed_addr {
dec_label_pc_8053379:
  %v0_805337c = load i8, i8* @global_var_8055150.76, align 16
  %v1_805337c = icmp eq i8 %v0_805337c, 0
  %v1_8053383 = icmp eq i1 %v1_805337c, false
  br i1 %v1_8053383, label %dec_label_pc_8053379.dec_label_pc_80533b5_crit_edge, label %dec_label_pc_8053385

dec_label_pc_8053379.dec_label_pc_80533b5_crit_edge: ; preds = %dec_label_pc_8053379
  %v0_80533b8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80533b5

dec_label_pc_8053385:                             ; preds = %dec_label_pc_8053379
  store i8 1, i8* @global_var_8055150.76, align 16
  store i32 4096, i32* @global_var_8055144.77, align 4
  br label %dec_label_pc_80533b5

dec_label_pc_80533b5:                             ; preds = %dec_label_pc_8053379.dec_label_pc_80533b5_crit_edge, %dec_label_pc_8053385
  %v0_80533b8 = phi i32 [ %v0_80533b8.pre, %dec_label_pc_8053379.dec_label_pc_80533b5_crit_edge ], [ 0, %dec_label_pc_8053385 ]
  ret i32 %v0_80533b8

; uselistorder directives
  uselistorder i8 1, { 8, 0, 9, 3, 4, 5, 1, 2, 10, 11, 12, 13, 6, 7 }
  uselistorder i8* @global_var_8055150.76, { 1, 0 }
  uselistorder label %dec_label_pc_80533b5, { 1, 0 }
}

define i32 @function_80533b9(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_80533b9:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_80533b9 = load i32, i32* @ebp, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_805513c.78, align 4
  store i32 %arg6, i32* @global_var_805514c.74, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_80533f0 = mul i32 %arg2, 4
  %v3_80533f0 = add i32 %tmp44, %v2_80533f0
  %v1_80533f3 = add i32 %v3_80533f0, 4
  store i32 %v1_80533f3, i32* @global_var_8055140.79, align 64
  %v3_80533fb = load i32, i32* %arg3, align 4
  %v14_80533fb = icmp eq i32 %v1_80533f3, %v3_80533fb
  %v1_80533fd = icmp eq i1 %v14_80533fb, false
  br i1 %v1_80533fd, label %dec_label_pc_8053405, label %dec_label_pc_80533ff

dec_label_pc_80533ff:                             ; preds = %dec_label_pc_80533b9
  store i32 %v3_80533f0, i32* @global_var_8055140.79, align 64
  br label %dec_label_pc_8053405

dec_label_pc_8053405:                             ; preds = %dec_label_pc_80533b9, %dec_label_pc_80533ff
  store i32 0, i32* %stack_var_-168, align 4
  %v2_805340a = ptrtoint i32* %stack_var_-136 to i32
  %v3_805340f = bitcast i32* %stack_var_-136 to i8*
  %v4_805340f = call i32 @function_8051b4e(i8* %v3_805340f, i32 0, i32 120)
  %v0_8053414 = load i32, i32* @global_var_8055140.79, align 64
  br label %dec_label_pc_805341c

dec_label_pc_805341c:                             ; preds = %dec_label_pc_805341c, %dec_label_pc_8053405
  %v0_805341c = phi i32 [ %v1_805341f, %dec_label_pc_805341c ], [ %v0_8053414, %dec_label_pc_8053405 ]
  %v1_805341c = inttoptr i32 %v0_805341c to i32*
  %v2_805341c = load i32, i32* %v1_805341c, align 4
  %v3_805341c = icmp eq i32 %v2_805341c, 0
  %v1_805341f = add i32 %v0_805341c, 4
  %v1_8053422 = icmp eq i1 %v3_805341c, false
  br i1 %v1_8053422, label %dec_label_pc_805341c, label %dec_label_pc_8053443.preheader

dec_label_pc_8053443.preheader:                   ; preds = %dec_label_pc_805341c
  store i32 %v1_805341f, i32* @ebx, align 4
  %v1_805344322 = inttoptr i32 %v1_805341f to i32*
  %v2_805344323 = load i32, i32* %v1_805344322, align 4
  %v3_805344324 = icmp eq i32 %v2_805344323, 0
  %v1_805344626 = icmp eq i1 %v3_805344324, false
  br i1 %v1_805344626, label %dec_label_pc_8053428.lr.ph, label %dec_label_pc_8053448

dec_label_pc_8053428.lr.ph:                       ; preds = %dec_label_pc_8053443.preheader
  %v3_8053408 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8053433 = add i32 %v3_8053408, 32
  br label %dec_label_pc_8053428

dec_label_pc_8053428:                             ; preds = %dec_label_pc_8053428.lr.ph, %dec_label_pc_8053440
  %stack_var_-164.0 = phi i32 [ 120, %dec_label_pc_8053428.lr.ph ], [ %stack_var_-164.1, %dec_label_pc_8053440 ]
  %v1_8053433 = phi i32 [ %v2_805344323, %dec_label_pc_8053428.lr.ph ], [ %v2_8053443, %dec_label_pc_8053440 ]
  %v0_8053432 = phi i32 [ %v1_805341f, %dec_label_pc_8053428.lr.ph ], [ %v1_8053440, %dec_label_pc_8053440 ]
  %v6_805342d = icmp ugt i32 %v1_8053433, 14
  br i1 %v6_805342d, label %dec_label_pc_8053440, label %dec_label_pc_805342f

dec_label_pc_805342f:                             ; preds = %dec_label_pc_8053428
  store i32 %v0_8053432, i32* %stack_var_-168, align 4
  %v2_8053433 = mul i32 %v1_8053433, 8
  %v4_8053433 = add i32 %v3_8053433, %v2_8053433
  %v3_8053438 = inttoptr i32 %v4_8053433 to i16*
  %v4_8053438 = call i32 @function_8053c06(i16* %v3_8053438, i32 %v0_8053432, i32 8)
  %v0_8053440.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053440

dec_label_pc_8053440:                             ; preds = %dec_label_pc_8053428, %dec_label_pc_805342f
  %stack_var_-164.1 = phi i32 [ %stack_var_-164.0, %dec_label_pc_8053428 ], [ 8, %dec_label_pc_805342f ]
  %v0_8053440 = phi i32 [ %v0_8053432, %dec_label_pc_8053428 ], [ %v0_8053440.pre, %dec_label_pc_805342f ]
  %v1_8053440 = add i32 %v0_8053440, 8
  store i32 %v1_8053440, i32* @ebx, align 4
  %v1_8053443 = inttoptr i32 %v1_8053440 to i32*
  %v2_8053443 = load i32, i32* %v1_8053443, align 4
  %v3_8053443 = icmp eq i32 %v2_8053443, 0
  %v1_8053446 = icmp eq i1 %v3_8053443, false
  br i1 %v1_8053446, label %dec_label_pc_8053428, label %dec_label_pc_8053448

dec_label_pc_8053448:                             ; preds = %dec_label_pc_8053440, %dec_label_pc_8053443.preheader
  %stack_var_-164.2 = phi i32 [ 120, %dec_label_pc_8053443.preheader ], [ %stack_var_-164.1, %dec_label_pc_8053440 ]
  store i32 %v2_805340a, i32* @eax, align 4
  %v0_805344c = call i32 @function_8053cd9()
  store i32 %v0_805344c, i32* @eax, align 4
  %v0_8053451 = call i32 @function_8053379()
  %v1_805345a = icmp eq i32 %tmp39, 0
  %v1_805345c = icmp eq i1 %v1_805345a, false
  br i1 %v1_805345c, label %dec_label_pc_8053462, label %dec_label_pc_805345e

dec_label_pc_805345e:                             ; preds = %dec_label_pc_8053448
  %v1_805345e = and i32 %tmp39, -65536
  %v2_805345e = or i32 %v1_805345e, 4096
  br label %dec_label_pc_8053462

dec_label_pc_8053462:                             ; preds = %dec_label_pc_8053448, %dec_label_pc_805345e
  %v0_8053462 = phi i32 [ %tmp39, %dec_label_pc_8053448 ], [ %v2_805345e, %dec_label_pc_805345e ]
  store i32 %v0_8053462, i32* @global_var_8055144.77, align 4
  %v13_8053467 = icmp eq i32 %tmp38, -1
  %v1_805346c = icmp eq i1 %v13_8053467, false
  br i1 %v1_805346c, label %dec_label_pc_8053497, label %dec_label_pc_805346e

dec_label_pc_805346e:                             ; preds = %dec_label_pc_8053462
  %v0_805346e = call i32 @function_80539e5()
  store i32 %v0_805346e, i32* @ebx, align 4
  %v0_8053475 = call i32 @function_8053954()
  %v0_805347a = load i32, i32* @ebx, align 4
  %v12_805347a = icmp eq i32 %v0_805347a, %v0_8053475
  %v1_805347c = icmp eq i1 %v12_805347a, false
  br i1 %v1_805347c, label %dec_label_pc_80534ad, label %dec_label_pc_805347e

dec_label_pc_805347e:                             ; preds = %dec_label_pc_805346e
  %v0_805347e = call i32 @function_805397a()
  store i32 %v0_805347e, i32* @ebx, align 4
  %v0_8053485 = call i32 @function_805392e()
  %v0_805348a = load i32, i32* @ebx, align 4
  %v12_805348a = icmp eq i32 %v0_805348a, %v0_8053485
  %v1_805348c = icmp eq i1 %v12_805348a, false
  br i1 %v1_805348c, label %dec_label_pc_80534ad, label %dec_label_pc_805348e.thread

dec_label_pc_805348e.thread:                      ; preds = %dec_label_pc_805347e
  br label %dec_label_pc_80534d7

dec_label_pc_8053497:                             ; preds = %dec_label_pc_8053462
  %v15_8053497 = icmp eq i32 %tmp38, %tmp37
  %v1_805349b = icmp eq i1 %v15_8053497, false
  br i1 %v1_805349b, label %dec_label_pc_80534ad, label %dec_label_pc_805349d

dec_label_pc_805349d:                             ; preds = %dec_label_pc_8053497
  br label %dec_label_pc_80534ad

dec_label_pc_80534ad:                             ; preds = %dec_label_pc_805349d, %dec_label_pc_8053497, %dec_label_pc_805347e, %dec_label_pc_805346e
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_80534b4 = call i32 @function_8053345()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_80534c3 = call i32 @function_8053345()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_80534d2 = call i32 @function_8053345()
  br label %dec_label_pc_80534d7

dec_label_pc_80534d7:                             ; preds = %dec_label_pc_805348e.thread, %dec_label_pc_80534ad
  store i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32* %esi.global-to-local, align 4
  %v0_80534dc = load i32, i32* @edi, align 4
  %v1_80534dc = inttoptr i32 %v0_80534dc to i32*
  %v2_80534dc = load i32, i32* %v1_80534dc, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565888), i32* %esi.global-to-local, align 4
  store i32 %v2_80534dc, i32* inttoptr (i32 134566020 to i32*), align 4
  store i32 sdiv (i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565888), i32 4), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8055148.73, align 8
  br i1 icmp ult (i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565885), i32 7), label %dec_label_pc_8053508, label %dec_label_pc_80534fc

dec_label_pc_80534fc:                             ; preds = %dec_label_pc_80534d7, %dec_label_pc_80534fc
  %v4_80534fc = phi i32 [ %v1_8053503, %dec_label_pc_80534fc ], [ 0, %dec_label_pc_80534d7 ]
  %v5_80534fc = mul i32 %v4_80534fc, 4
  %v6_80534fc = add i32 %v5_80534fc, ptrtoint (i32* @global_var_8055000.71 to i32)
  %v7_80534fc = inttoptr i32 %v6_80534fc to i32*
  %v8_80534fc = load i32, i32* %v7_80534fc, align 4
  call void @__pseudo_call(i32 %v8_80534fc)
  %v0_8053503 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053503 = add i32 %v0_8053503, 1
  store i32 %v1_8053503, i32* %ebx.global-to-local, align 4
  %v1_8053504 = load i32, i32* %esi.global-to-local, align 4
  %v7_8053504 = icmp ult i32 %v1_8053503, %v1_8053504
  br i1 %v7_8053504, label %dec_label_pc_80534fc, label %dec_label_pc_8053508

dec_label_pc_8053508:                             ; preds = %dec_label_pc_80534fc, %dec_label_pc_80534d7
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565888), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565888), i32 2), i32 0), label %dec_label_pc_8053520, label %dec_label_pc_805352c

dec_label_pc_8053520:                             ; preds = %dec_label_pc_8053508, %dec_label_pc_8053520
  %v4_8053520 = phi i32 [ %v1_8053527, %dec_label_pc_8053520 ], [ 0, %dec_label_pc_8053508 ]
  %v5_8053520 = mul i32 %v4_8053520, 4
  %v6_8053520 = add i32 %v5_8053520, ptrtoint (i32* @global_var_8055000.71 to i32)
  %v7_8053520 = inttoptr i32 %v6_8053520 to i32*
  %v8_8053520 = load i32, i32* %v7_8053520, align 4
  call void @__pseudo_call(i32 %v8_8053520)
  %v0_8053527 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053527 = add i32 %v0_8053527, 1
  store i32 %v1_8053527, i32* %ebx.global-to-local, align 4
  %v1_8053528 = load i32, i32* %esi.global-to-local, align 4
  %v7_8053528 = icmp ult i32 %v1_8053527, %v1_8053528
  br i1 %v7_8053528, label %dec_label_pc_8053520, label %dec_label_pc_805352c

dec_label_pc_805352c:                             ; preds = %dec_label_pc_8053520, %dec_label_pc_8053508
  %stack_var_-164.3 = phi i32 [ %stack_var_-164.2, %dec_label_pc_8053508 ], [ ptrtoint (i32* @global_var_8053527.83 to i32), %dec_label_pc_8053520 ]
  %v1_8053535 = call i32 @function_8051afd(i32 %stack_var_-164.3)
  %v1_805353a = inttoptr i32 %v1_8053535 to i32*
  store i32 0, i32* %v1_805353a, align 4
  store i32 0, i32* @eax, align 4
  %v0_8053555 = load i32, i32* @global_var_8055140.79, align 64
  store i32 %v0_8053555, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_80533b9)
  %v0_805356a = load i32, i32* @eax, align 4
  %v1_805356d = call i32 @function_8052fcd(i32 %v0_805356a)
  %v0_8053579 = load i32, i32* @ebx, align 4
  %v1_8053579 = inttoptr i32 %v0_8053579 to %sigcontext*
  %v2_8053579 = call i32 @sigreturn(%sigcontext* %v1_8053579)
  %v0_8053581 = load i32, i32* @ebx, align 4
  %v1_8053581 = inttoptr i32 %v0_8053581 to %sigcontext*
  %v2_8053581 = call i32 @sigreturn(%sigcontext* %v1_8053581)
  ret i32 %v2_8053581

; uselistorder directives
  uselistorder i32 %v1_8053527, { 1, 2, 0 }
  uselistorder i32 %v1_8053503, { 1, 2, 0 }
  uselistorder i32 %v2_8053443, { 1, 0 }
  uselistorder i32 %v1_8053440, { 2, 1, 0 }
  uselistorder i32 %v1_805341f, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805341c, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_8052fcd, { 1, 2, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565888), i32 2), { 1, 3, 2, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8055000.71 to i32), i32 -134565888), { 0, 2, 1 }
  uselistorder i32 ()* @function_8053345, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 3, 0, 1, 2, 4 }
  uselistorder i32 120, { 0, 1, 10, 24, 3, 4, 11, 12, 5, 13, 14, 15, 6, 7, 16, 17, 8, 18, 19, 9, 20, 21, 22, 23, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8053520, { 1, 0 }
  uselistorder label %dec_label_pc_80534fc, { 1, 0 }
  uselistorder label %dec_label_pc_80534d7, { 1, 0 }
  uselistorder label %dec_label_pc_8053462, { 1, 0 }
  uselistorder label %dec_label_pc_8053440, { 1, 0 }
  uselistorder label %dec_label_pc_8053428, { 1, 0 }
  uselistorder label %dec_label_pc_8053405, { 1, 0 }
}

define i32 @function_8053583(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053583:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8053583 = load i32, i32* @esi, align 4
  %v0_8053584 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8053599 = icmp eq i32* %arg2, null
  br i1 %v1_8053599, label %dec_label_pc_80535ec, label %dec_label_pc_805359d

dec_label_pc_805359d:                             ; preds = %dec_label_pc_8053583
  %v2_805359d = load i32, i32* %arg2, align 4
  store i32 %v2_805359d, i32* %stack_var_-148, align 4
  %v1_80535a6 = add i32 %tmp11, 4
  %v3_80535b8 = bitcast i32* %stack_var_-136 to i16*
  %v4_80535b8 = call i32 @function_8053c06(i16* %v3_80535b8, i32 %v1_80535a6, i32 128)
  %v1_80535bd = add i32 %tmp11, 132
  %v2_80535d7 = inttoptr i32 %v1_80535bd to i8*
  %v3_80535d7 = load i8, i8* %v2_80535d7, align 1
  %v4_80535d7 = and i8 %v3_80535d7, 4
  %v5_80535d7 = icmp eq i8 %v4_80535d7, 0
  %v1_80535de = icmp eq i1 %v5_80535d7, false
  br i1 %v1_80535de, label %dec_label_pc_80535ec, label %dec_label_pc_80535e0

dec_label_pc_80535e0:                             ; preds = %dec_label_pc_805359d
  br label %dec_label_pc_80535ec

dec_label_pc_80535ec:                             ; preds = %dec_label_pc_80535e0, %dec_label_pc_805359d, %dec_label_pc_8053583
  %v1_80535ee = icmp eq i32 %arg3, 0
  br i1 %v1_80535ee, label %dec_label_pc_80535f6, label %dec_label_pc_80535f2

dec_label_pc_80535f2:                             ; preds = %dec_label_pc_80535ec
  %v2_80535f2 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_80535f6

dec_label_pc_80535f6:                             ; preds = %dec_label_pc_80535ec, %dec_label_pc_80535f2
  %v0_8053605 = phi i32 [ 0, %dec_label_pc_80535ec ], [ %v2_80535f2, %dec_label_pc_80535f2 ]
  br i1 %v1_8053599, label %dec_label_pc_8053603, label %dec_label_pc_80535fc

dec_label_pc_80535fc:                             ; preds = %dec_label_pc_80535f6
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8053603

dec_label_pc_8053603:                             ; preds = %dec_label_pc_80535f6, %dec_label_pc_80535fc
  %v0_8053606 = phi %sigaction* [ null, %dec_label_pc_80535f6 ], [ %phitmp, %dec_label_pc_80535fc ]
  %v5_805360e = call i32 @function_80536a9(i32 %arg1, %sigaction* %v0_8053606, i32 %v0_8053605, i32 8)
  store i32 %v5_805360e, i32* %ebx.global-to-local, align 4
  br i1 %v1_80535ee, label %dec_label_pc_8053651, label %dec_label_pc_805361c

dec_label_pc_805361c:                             ; preds = %dec_label_pc_8053603
  %v2_805361c = icmp slt i32 %v5_805360e, 0
  br i1 %v2_805361c, label %dec_label_pc_8053651, label %dec_label_pc_8053620

dec_label_pc_8053620:                             ; preds = %dec_label_pc_805361c
  %v3_8053620 = load i32, i32* %stack_var_-288, align 4
  %v2_8053624 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8053620, i32* %v2_8053624, align 4
  %v2_805362c = ptrtoint i32* %stack_var_-276 to i32
  %v1_8053631 = add i32 %arg3, 4
  %v3_8053635 = inttoptr i32 %v1_8053631 to i16*
  %v4_8053635 = call i32 @function_8053c06(i16* %v3_8053635, i32 %v2_805362c, i32 128)
  %v2_805363e = add i32 %arg3, 132
  %v3_805363e = inttoptr i32 %v2_805363e to i32*
  %v2_805364b = add i32 %arg3, 136
  %v3_805364b = inttoptr i32 %v2_805364b to i32*
  %v0_8053651.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053651

dec_label_pc_8053651:                             ; preds = %dec_label_pc_805361c, %dec_label_pc_8053603, %dec_label_pc_8053620
  %v0_8053651 = phi i32 [ %v5_805360e, %dec_label_pc_805361c ], [ %v5_805360e, %dec_label_pc_8053603 ], [ %v0_8053651.pre, %dec_label_pc_8053620 ]
  store i32 %v0_8053584, i32* @ebx, align 4
  store i32 %v0_8053583, i32* @esi, align 4
  ret i32 %v0_8053651

; uselistorder directives
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 1, 2, 3, 4, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* null, { 0, 2, 1, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053651, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053603, { 1, 0 }
  uselistorder label %dec_label_pc_80535f6, { 1, 0 }
}

define i32 @function_805365c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_805365c:
  %stack_var_4 = alloca i32, align 4
  %v0_805365c = load i32, i32* @ebx, align 4
  %v2_8053667 = load i32, i32* @ecx, align 4
  %v4_8053667 = load i32, i32* @esi, align 4
  %v5_8053667 = load i32, i32* @edi, align 4
  %v6_8053667 = load i32, i32* @ebp, align 4
  %v7_8053667 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_8053667, i32 %v0_805365c, i32 %v4_8053667, i32 %v5_8053667, i32 %v6_8053667)
  %v8_8053667 = ptrtoint i32* %v7_8053667 to i32
  store i32 %v0_805365c, i32* @ebx, align 4
  %v3_8053670 = icmp ugt i32* %v7_8053667, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_8053670, i32 134561057)
  ret i32 %v8_8053667

; uselistorder directives
  uselistorder i32* @ebp, { 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 6, 7, 45, 46, 47, 48, 49, 50, 51, 52, 57, 53, 54, 55, 56, 4, 58, 20, 10, 11, 12, 3, 24, 25, 17, 9, 16, 21, 15, 2, 26, 8, 0, 27, 13, 14, 1, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 77, 78, 80, 81, 82, 83, 84, 85, 34, 35 }
  uselistorder i32* @ecx, { 5, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 34, 35, 36, 1, 37, 13, 12, 38, 39, 40, 2, 41, 42, 43, 3, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 7, 8, 4, 9, 10, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 6, 81, 82, 83, 84 }
}

define i32 @function_8053677(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053677:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053677 = load i32, i32* @ebx, align 4
  store i32 %v0_8053677, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805368a = call i32 @int80_syscall(i32 102)
  store i32 %v1_805368a, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_805368a, -4095
  br i1 %tmp9, label %dec_label_pc_80536a3, label %dec_label_pc_8053697

dec_label_pc_8053697:                             ; preds = %dec_label_pc_8053677
  %v1_8053697 = call i32 @function_8051afd(i32 %v0_8053677)
  %v0_805369c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805369c = sub i32 0, %v0_805369c
  %v2_805369e = inttoptr i32 %v1_8053697 to i32*
  store i32 %v1_805369c, i32* %v2_805369e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80536a7.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80536a3

dec_label_pc_80536a3:                             ; preds = %dec_label_pc_8053677, %dec_label_pc_8053697
  %v2_80536a7 = phi i32 [ %v0_8053677, %dec_label_pc_8053677 ], [ %v2_80536a7.pre, %dec_label_pc_8053697 ]
  %v0_80536a3 = phi i32 [ %v1_805368a, %dec_label_pc_8053677 ], [ -1, %dec_label_pc_8053697 ]
  %v2_80536a5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80536a5, i32* @edx, align 4
  store i32 %v2_80536a7, i32* @ebx, align 4
  ret i32 %v0_80536a3

; uselistorder directives
  uselistorder i32 %v1_805368a, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80536a3, { 1, 0 }
}

define i32 @function_80536a9(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80536a9:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_80536aa = load i32, i32* @esi, align 4
  store i32 %v0_80536aa, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80536be = load i32, i32* @ebx, align 4
  %v7_80536c6 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_80536c6, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_80536c6, -4095
  br i1 %tmp14, label %dec_label_pc_80536de, label %dec_label_pc_80536d2

dec_label_pc_80536d2:                             ; preds = %dec_label_pc_80536a9
  %v1_80536d2 = call i32 @function_8051afd(i32 %v0_80536be)
  %v0_80536d7 = load i32, i32* %esi.global-to-local, align 4
  %v1_80536d7 = sub i32 0, %v0_80536d7
  %v2_80536d9 = inttoptr i32 %v1_80536d2 to i32*
  store i32 %v1_80536d7, i32* %v2_80536d9, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80536e1.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80536de

dec_label_pc_80536de:                             ; preds = %dec_label_pc_80536a9, %dec_label_pc_80536d2
  %v2_80536e1 = phi i32 [ %v0_80536aa, %dec_label_pc_80536a9 ], [ %v2_80536e1.pre, %dec_label_pc_80536d2 ]
  %v0_80536de = phi i32 [ %v7_80536c6, %dec_label_pc_80536a9 ], [ -1, %dec_label_pc_80536d2 ]
  store i32 %v2_80536e1, i32* @esi, align 4
  ret i32 %v0_80536de

; uselistorder directives
  uselistorder i32 %v7_80536c6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80536de, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_80536e4(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_80536e4:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_805370c(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805370c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805370c = load i32, i32* @ebx, align 4
  store i32 %v0_805370c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805371f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805371f, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_805371f, -4095
  br i1 %tmp10, label %dec_label_pc_8053738, label %dec_label_pc_805372c

dec_label_pc_805372c:                             ; preds = %dec_label_pc_805370c
  %v1_805372c = call i32 @function_8051afd(i32 %v0_805370c)
  %v0_8053731 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053731 = sub i32 0, %v0_8053731
  %v2_8053733 = inttoptr i32 %v1_805372c to i32*
  store i32 %v1_8053731, i32* %v2_8053733, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805373c.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053738

dec_label_pc_8053738:                             ; preds = %dec_label_pc_805370c, %dec_label_pc_805372c
  %v2_805373c = phi i32 [ %v0_805370c, %dec_label_pc_805370c ], [ %v2_805373c.pre, %dec_label_pc_805372c ]
  %v0_8053738 = phi i32 [ %v4_805371f, %dec_label_pc_805370c ], [ -1, %dec_label_pc_805372c ]
  store i32 %v2_805373c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053738

; uselistorder directives
  uselistorder i32 %v4_805371f, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053738, { 1, 0 }
}

define i32 @function_805373e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805373e:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805373e = load i32, i32* @ebx, align 4
  store i32 %v0_805373e, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_8053751 = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_8053751, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_8053751, -4095
  br i1 %tmp13, label %dec_label_pc_805376c, label %dec_label_pc_805375e

dec_label_pc_805375e:                             ; preds = %dec_label_pc_805373e
  %v1_805375e = call i32 @function_8051afd(i32 %v0_805373e)
  %v0_8053763 = load i32, i32* @ebx, align 4
  %v1_8053763 = sub i32 0, %v0_8053763
  %v2_8053765 = inttoptr i32 %v1_805375e to i32*
  store i32 %v1_8053763, i32* %v2_8053765, align 4
  %v2_8053784.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805377f

dec_label_pc_805376c:                             ; preds = %dec_label_pc_805373e
  %v1_805376c = icmp eq i32 %v4_8053751, 0
  %v1_805376e = icmp eq i1 %v1_805376c, false
  br i1 %v1_805376e, label %dec_label_pc_805377f, label %dec_label_pc_8053770

dec_label_pc_8053770:                             ; preds = %dec_label_pc_805376c
  %v4_8053777 = bitcast i32* %stack_var_-68 to i16*
  %v5_8053777 = call i32 @function_8053b89(i16* %v4_8053777, i32 %arg2, i32 %v4_8053751, i32 %v4_8053751)
  %v0_805377f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805377f

dec_label_pc_805377f:                             ; preds = %dec_label_pc_805376c, %dec_label_pc_805375e, %dec_label_pc_8053770
  %v2_8053784 = phi i32 [ %v0_805373e, %dec_label_pc_805376c ], [ %v2_8053784.pre, %dec_label_pc_805375e ], [ %v0_805373e, %dec_label_pc_8053770 ]
  %v0_805377f = phi i32 [ %v4_8053751, %dec_label_pc_805376c ], [ -1, %dec_label_pc_805375e ], [ %v0_805377f.pre, %dec_label_pc_8053770 ]
  store i32 %v2_8053784, i32* @ebx, align 4
  ret i32 %v0_805377f

; uselistorder directives
  uselistorder i32 %v4_8053751, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805377f, { 2, 0, 1 }
}

define i32 @function_8053786(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053786:
  %eax.global-to-local = alloca i32, align 4
  %v0_8053786 = load i32, i32* @edi, align 4
  %v0_8053787 = load i32, i32* @esi, align 4
  %v0_8053788 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_805378d = load i32, i32* @edx, align 4
  %v7_8053797 = inttoptr i32 %arg2 to i32*
  %v8_8053797 = call i32 @function_80537f5(i32 %arg1, i32* %v7_8053797, i32 %arg3, i32 %v0_805378d, i32 %v0_8053788, i32 %v0_8053787, i32 %v0_8053786)
  store i32 %v8_8053797, i32* %eax.global-to-local, align 4
  store i32 %v8_8053797, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_8053797, 1
  br i1 %tmp24, label %dec_label_pc_80537ef, label %dec_label_pc_80537a5

dec_label_pc_80537a5:                             ; preds = %dec_label_pc_8053786
  %v0_80537a5 = load i32, i32* @ebx, align 4
  %v2_80537a5 = add i32 %v0_80537a5, %v8_8053797
  store i32 %v2_80537a5, i32* @edi, align 4
  %v7_80537eb4 = icmp ult i32 %v0_80537a5, %v2_80537a5
  br i1 %v7_80537eb4, label %dec_label_pc_80537aa, label %dec_label_pc_80537ef

dec_label_pc_80537aa:                             ; preds = %dec_label_pc_80537a5, %dec_label_pc_80537aa
  %v0_80537aa = phi i32 [ %v2_80537e9, %dec_label_pc_80537aa ], [ %v0_80537a5, %dec_label_pc_80537a5 ]
  %v1_80537aa = add i32 %v0_80537aa, 8
  %v2_80537aa = inttoptr i32 %v1_80537aa to i32*
  %v3_80537aa = load i32, i32* %v2_80537aa, align 4
  store i32 %v3_80537aa, i32* %eax.global-to-local, align 4
  %v2_80537ad = add i32 %v0_80537aa, 4
  %v3_80537ad = inttoptr i32 %v2_80537ad to i32*
  store i32 %v3_80537aa, i32* %v3_80537ad, align 4
  %v0_80537b0 = load i32, i32* @ebx, align 4
  %v1_80537b0 = add i32 %v0_80537b0, 16
  %v2_80537b0 = inttoptr i32 %v1_80537b0 to i32*
  %v3_80537b0 = load i32, i32* %v2_80537b0, align 4
  store i32 %v3_80537b0, i32* %eax.global-to-local, align 4
  %v1_80537b3 = trunc i32 %v3_80537b0 to i16
  %v3_80537b3 = add i32 %v0_80537b0, 8
  %v4_80537b3 = inttoptr i32 %v3_80537b3 to i16*
  store i16 %v1_80537b3, i16* %v4_80537b3, align 2
  %v0_80537b7 = load i32, i32* @ebx, align 4
  %v1_80537b7 = add i32 %v0_80537b7, 18
  %v2_80537b7 = inttoptr i32 %v1_80537b7 to i8*
  %v3_80537b7 = load i8, i8* %v2_80537b7, align 1
  %v4_80537b7 = zext i8 %v3_80537b7 to i32
  %v5_80537b7 = load i32, i32* %eax.global-to-local, align 4
  %v6_80537b7 = and i32 %v5_80537b7, -256
  %v7_80537b7 = or i32 %v6_80537b7, %v4_80537b7
  store i32 %v7_80537b7, i32* %eax.global-to-local, align 4
  %v3_80537ba = add i32 %v0_80537b7, 10
  %v4_80537ba = inttoptr i32 %v3_80537ba to i8*
  store i8 %v3_80537b7, i8* %v4_80537ba, align 1
  %v0_80537be = load i32, i32* @ebx, align 4
  %v1_80537be = add i32 %v0_80537be, 8
  %v2_80537be = inttoptr i32 %v1_80537be to i16*
  %v3_80537be = load i16, i16* %v2_80537be, align 2
  %v4_80537be = zext i16 %v3_80537be to i32
  %v1_80537c2 = add nsw i32 %v4_80537be, -19
  %v1_80537c6 = add i32 %v0_80537be, 19
  %v1_80537ca = add i32 %v0_80537be, 11
  store i32 %v1_80537ca, i32* %eax.global-to-local, align 4
  %v3_80537ce = inttoptr i32 %v1_80537ca to i8*
  %v4_80537ce = call i32 @function_8051b27(i8* %v3_80537ce, i32 %v1_80537c6, i32 %v1_80537c2)
  store i32 %v4_80537ce, i32* %eax.global-to-local, align 4
  %v0_80537d6 = load i32, i32* @ebx, align 4
  %v1_80537d6 = add i32 %v0_80537d6, 8
  %v2_80537d6 = inttoptr i32 %v1_80537d6 to i16*
  %v3_80537d6 = load i16, i16* %v2_80537d6, align 2
  %v4_80537d6 = zext i16 %v3_80537d6 to i32
  store i32 %v4_80537d6, i32* %eax.global-to-local, align 4
  %v3_80537dd = inttoptr i32 %v0_80537d6 to i8*
  %v4_80537dd = call i32 @function_8051b27(i8* %v3_80537dd, i32 %v0_80537d6, i32 %v4_80537d6)
  store i32 %v4_80537dd, i32* %eax.global-to-local, align 4
  %v0_80537e2 = load i32, i32* @ebx, align 4
  %v1_80537e2 = add i32 %v0_80537e2, 8
  %v2_80537e2 = inttoptr i32 %v1_80537e2 to i16*
  %v3_80537e2 = load i16, i16* %v2_80537e2, align 2
  %v4_80537e2 = zext i16 %v3_80537e2 to i32
  store i32 %v4_80537e2, i32* %eax.global-to-local, align 4
  %v2_80537e9 = add i32 %v4_80537e2, %v0_80537e2
  store i32 %v2_80537e9, i32* @ebx, align 4
  %v1_80537eb = load i32, i32* @edi, align 4
  %v7_80537eb = icmp ult i32 %v2_80537e9, %v1_80537eb
  br i1 %v7_80537eb, label %dec_label_pc_80537aa, label %dec_label_pc_80537eb.dec_label_pc_80537ef.loopexit_crit_edge

dec_label_pc_80537eb.dec_label_pc_80537ef.loopexit_crit_edge: ; preds = %dec_label_pc_80537aa
  %v0_80537ef.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80537ef

dec_label_pc_80537ef:                             ; preds = %dec_label_pc_80537a5, %dec_label_pc_80537eb.dec_label_pc_80537ef.loopexit_crit_edge, %dec_label_pc_8053786
  %v0_80537ef = phi i32 [ %v8_8053797, %dec_label_pc_8053786 ], [ %v0_80537ef.pre.pre, %dec_label_pc_80537eb.dec_label_pc_80537ef.loopexit_crit_edge ], [ %v8_8053797, %dec_label_pc_80537a5 ]
  store i32 %v0_80537ef, i32* %eax.global-to-local, align 4
  store i32 %v0_8053787, i32* @esi, align 4
  store i32 %v0_8053786, i32* @edi, align 4
  ret i32 %v0_80537ef

; uselistorder directives
  uselistorder i32 %v0_80537ef, { 1, 0 }
  uselistorder i32 %v2_80537e9, { 1, 2, 0 }
  uselistorder i32 %v0_80537d6, { 1, 0, 2 }
  uselistorder i32 %v0_80537be, { 1, 0, 2 }
  uselistorder i32 %v0_80537aa, { 1, 0 }
  uselistorder i32 %v0_80537a5, { 0, 2, 1 }
  uselistorder i32 %v8_8053797, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32, i32)* @function_8051b27, { 0, 1, 3, 2, 4, 5, 7, 8, 6 }
  uselistorder i32 11, { 7, 5, 6, 8, 4, 0, 1, 2, 3, 9, 10 }
  uselistorder label %dec_label_pc_80537ef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80537aa, { 1, 0 }
}

define i32 @function_80537f5(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_80537f5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_80537f8 = load i32, i32* @edi, align 4
  %v0_80537fa = load i32, i32* @ebx, align 4
  %v15_80537fb = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8053804 = add i32 %arg3, 30
  %v1_805380a = and i32 %v1_8053804, -16
  %v2_805380d = sub i32 %v15_80537fb, %v1_805380a
  %v1_805380f = add i32 %v2_805380d, 15
  %v1_8053813 = and i32 %v1_805380f, -16
  %v1_8053819 = inttoptr i32 %v1_8053813 to %linux_dirent64*
  store i32 %v1_8053813, i32* %ecx.global-to-local, align 4
  %v2_805381b = add i32 %v2_805380d, -4
  %v3_805381b = inttoptr i32 %v2_805381b to i32*
  store i32 %v0_80537fa, i32* %v3_805381b, align 4
  %v0_805381c = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_8053823 = call i32 @getdents64(i32 %v0_805381c, %linux_dirent64* %v1_8053819, i32 %arg3)
  store i32 %v5_8053823, i32* %eax.global-to-local, align 4
  %v0_8053825 = load i32, i32* @esp, align 4
  %v3_8053825 = add i32 %v0_8053825, 4
  %tmp41 = icmp ult i32 %v5_8053823, -4095
  br i1 %tmp41, label %dec_label_pc_805383f, label %dec_label_pc_8053830

dec_label_pc_8053830:                             ; preds = %dec_label_pc_80537f5
  %v1_8053830 = call i32 @function_8051afd(i32 %v5_8053823)
  store i32 %v1_8053830, i32* %eax.global-to-local, align 4
  %v4_8053835 = sub i32 0, %v5_8053823
  %v2_805383b = inttoptr i32 %v1_8053830 to i32*
  store i32 %v4_8053835, i32* %v2_805383b, align 4
  br label %dec_label_pc_8053901

dec_label_pc_805383f:                             ; preds = %dec_label_pc_80537f5
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_8053813, i32* @ebx, align 4
  %v5_80538f1 = add i32 %v5_8053823, %v1_8053813
  store i32 %v5_80538f1, i32* %eax.global-to-local, align 4
  %v7_80538f430 = icmp ult i32 %v1_8053813, %v5_80538f1
  br i1 %v7_80538f430, label %dec_label_pc_805385e.lr.ph, label %dec_label_pc_80538fc

dec_label_pc_805385e.lr.ph:                       ; preds = %dec_label_pc_805383f
  %v5_805386b = add i32 %tmp14, %arg3
  br label %dec_label_pc_805385e

dec_label_pc_805385e:                             ; preds = %dec_label_pc_805385e.lr.ph, %dec_label_pc_80538a0
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_805385e.lr.ph ], [ %v3_80538a3, %dec_label_pc_80538a0 ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_805385e.lr.ph ], [ %v3_80538a0, %dec_label_pc_80538a0 ]
  %v0_80538ac34 = phi i32 [ %v1_8053813, %dec_label_pc_805385e.lr.ph ], [ %v2_80538e9, %dec_label_pc_80538a0 ]
  %v1_80538b133 = phi i32 [ %tmp14, %dec_label_pc_805385e.lr.ph ], [ %v2_805386e, %dec_label_pc_80538a0 ]
  %v0_805387832 = phi i32 [ %v3_8053825, %dec_label_pc_805385e.lr.ph ], [ %v1_80538eb, %dec_label_pc_80538a0 ]
  %v1_805385e = add i32 %v0_80538ac34, 16
  %v2_805385e = inttoptr i32 %v1_805385e to i16*
  %v3_805385e = load i16, i16* %v2_805385e, align 2
  %v4_805385e = zext i16 %v3_805385e to i32
  %v1_8053862 = add nuw nsw i32 %v4_805385e, 3
  %v1_8053868 = and i32 %v1_8053862, 131068
  store i32 %v1_8053868, i32* %ecx.global-to-local, align 4
  store i32 %v5_805386b, i32* %eax.global-to-local, align 4
  %v2_805386e = add i32 %v1_8053868, %v1_80538b133
  %tmp42 = icmp ugt i32 %v2_805386e, %v5_805386b
  br i1 %tmp42, label %dec_label_pc_8053878, label %dec_label_pc_80538a0

dec_label_pc_8053878:                             ; preds = %dec_label_pc_805385e
  %v1_8053878 = add i32 %v0_805387832, -4
  %v2_8053878 = inttoptr i32 %v1_8053878 to i32*
  store i32 0, i32* %v2_8053878, align 4
  %v5_805387a = add i32 %v0_805387832, -8
  %v6_805387a = inttoptr i32 %v5_805387a to i32*
  store i32 %stack_var_-32.036, i32* %v6_805387a, align 4
  %v5_805387d = add i32 %v0_805387832, -12
  %v6_805387d = inttoptr i32 %v5_805387d to i32*
  store i32 %stack_var_-36.035, i32* %v6_805387d, align 4
  %v5_8053880 = add i32 %v0_805387832, -16
  %v6_8053880 = inttoptr i32 %v5_8053880 to i32*
  store i32 %arg1, i32* %v6_8053880, align 4
  %v1_8053883 = call i32 @function_8053a0b(i32 %v2_805386e)
  store i32 %v1_8053883, i32* %eax.global-to-local, align 4
  %v0_805388b = load i32, i32* @esi, align 4
  %v15_805388b = icmp eq i32 %v0_805388b, %tmp14
  %v1_805388e = icmp eq i1 %v15_805388b, false
  br i1 %v1_805388e, label %dec_label_pc_80538fc, label %dec_label_pc_8053890

dec_label_pc_8053890:                             ; preds = %dec_label_pc_8053878
  %v1_8053890 = call i32 @function_8051afd(i32 %v2_805386e)
  store i32 %v1_8053890, i32* %eax.global-to-local, align 4
  %v1_8053895 = inttoptr i32 %v1_8053890 to i32*
  store i32 22, i32* %v1_8053895, align 4
  br label %dec_label_pc_8053901

dec_label_pc_80538a0:                             ; preds = %dec_label_pc_805385e
  %v1_80538a0 = add i32 %v0_80538ac34, 8
  %v2_80538a0 = inttoptr i32 %v1_80538a0 to i32*
  %v3_80538a0 = load i32, i32* %v2_80538a0, align 4
  store i32 %v3_80538a0, i32* %eax.global-to-local, align 4
  %v1_80538a3 = add i32 %v0_80538ac34, 12
  %v2_80538a3 = inttoptr i32 %v1_80538a3 to i32*
  %v3_80538a3 = load i32, i32* %v2_80538a3, align 4
  %v1_80538ac = inttoptr i32 %v0_80538ac34 to i32*
  %v2_80538ac = load i32, i32* %v1_80538ac, align 4
  store i32 %v2_80538ac, i32* %eax.global-to-local, align 4
  %v1_80538ae = add i32 %v0_80538ac34, 4
  %v2_80538ae = inttoptr i32 %v1_80538ae to i32*
  %v3_80538ae = load i32, i32* %v2_80538ae, align 4
  %v2_80538b1 = add i32 %v1_80538b133, 4
  %v3_80538b1 = inttoptr i32 %v2_80538b1 to i32*
  store i32 %v3_80538ae, i32* %v3_80538b1, align 4
  %v0_80538b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538b4 = load i32, i32* @esi, align 4
  %v2_80538b4 = inttoptr i32 %v1_80538b4 to i32*
  store i32 %v0_80538b4, i32* %v2_80538b4, align 4
  %v0_80538b6 = load i32, i32* @ebx, align 4
  %v1_80538b6 = add i32 %v0_80538b6, 8
  %v2_80538b6 = inttoptr i32 %v1_80538b6 to i32*
  %v3_80538b6 = load i32, i32* %v2_80538b6, align 4
  store i32 %v3_80538b6, i32* %eax.global-to-local, align 4
  %v1_80538b9 = add i32 %v0_80538b6, 12
  %v2_80538b9 = inttoptr i32 %v1_80538b9 to i32*
  %v3_80538b9 = load i32, i32* %v2_80538b9, align 4
  %v1_80538bc = load i32, i32* @esi, align 4
  %v2_80538bc = add i32 %v1_80538bc, 12
  %v3_80538bc = inttoptr i32 %v2_80538bc to i32*
  store i32 %v3_80538b9, i32* %v3_80538bc, align 4
  %v0_80538bf = load i32, i32* %eax.global-to-local, align 4
  %v1_80538bf = load i32, i32* @esi, align 4
  %v2_80538bf = add i32 %v1_80538bf, 8
  %v3_80538bf = inttoptr i32 %v2_80538bf to i32*
  store i32 %v0_80538bf, i32* %v3_80538bf, align 4
  %v0_80538c2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80538c2 = trunc i32 %v0_80538c2 to i16
  %v2_80538c2 = load i32, i32* @esi, align 4
  %v3_80538c2 = add i32 %v2_80538c2, 16
  %v4_80538c2 = inttoptr i32 %v3_80538c2 to i16*
  store i16 %v1_80538c2, i16* %v4_80538c2, align 2
  %v0_80538c6 = load i32, i32* @ebx, align 4
  %v1_80538c6 = add i32 %v0_80538c6, 18
  %v2_80538c6 = inttoptr i32 %v1_80538c6 to i8*
  %v3_80538c6 = load i8, i8* %v2_80538c6, align 1
  %v4_80538c6 = zext i8 %v3_80538c6 to i32
  %v5_80538c6 = load i32, i32* %eax.global-to-local, align 4
  %v6_80538c6 = and i32 %v5_80538c6, -256
  %v7_80538c6 = or i32 %v6_80538c6, %v4_80538c6
  store i32 %v7_80538c6, i32* %eax.global-to-local, align 4
  %v2_80538c9 = load i32, i32* @esi, align 4
  %v3_80538c9 = add i32 %v2_80538c9, 18
  %v4_80538c9 = inttoptr i32 %v3_80538c9 to i8*
  store i8 %v3_80538c6, i8* %v4_80538c9, align 1
  %v0_80538cc = load i32, i32* %eax.global-to-local, align 4
  %v1_80538cc = load i32, i32* @esp, align 4
  %v2_80538cc = add i32 %v1_80538cc, -4
  %v3_80538cc = inttoptr i32 %v2_80538cc to i32*
  store i32 %v0_80538cc, i32* %v3_80538cc, align 4
  %v0_80538cd = load i32, i32* @ebx, align 4
  %v1_80538cd = add i32 %v0_80538cd, 16
  %v2_80538cd = inttoptr i32 %v1_80538cd to i16*
  %v3_80538cd = load i16, i16* %v2_80538cd, align 2
  %v4_80538cd = zext i16 %v3_80538cd to i32
  %v1_80538d1 = add nsw i32 %v4_80538cd, -19
  %v2_80538d4 = add i32 %v1_80538cc, -8
  %v3_80538d4 = inttoptr i32 %v2_80538d4 to i32*
  store i32 %v1_80538d1, i32* %v3_80538d4, align 4
  %v0_80538d5 = load i32, i32* @ebx, align 4
  %v1_80538d5 = add i32 %v0_80538d5, 19
  %v2_80538d8 = add i32 %v1_80538cc, -12
  %v3_80538d8 = inttoptr i32 %v2_80538d8 to i32*
  store i32 %v1_80538d5, i32* %v3_80538d8, align 4
  %v0_80538d9 = load i32, i32* @esi, align 4
  %v1_80538d9 = add i32 %v0_80538d9, 19
  store i32 %v1_80538d9, i32* %eax.global-to-local, align 4
  %v2_80538dc = add i32 %v1_80538cc, -16
  %v3_80538dc = inttoptr i32 %v2_80538dc to i32*
  store i32 %v1_80538d9, i32* %v3_80538dc, align 4
  %v3_80538dd = inttoptr i32 %v2_805386e to i16*
  %v4_80538dd = call i32 @function_8053c06(i16* %v3_80538dd, i32 %v3_80538a0, i32 %v3_80538a3)
  store i32 %v4_80538dd, i32* %eax.global-to-local, align 4
  %v0_80538e2 = load i32, i32* @ebx, align 4
  %v1_80538e2 = add i32 %v0_80538e2, 16
  %v2_80538e2 = inttoptr i32 %v1_80538e2 to i16*
  %v3_80538e2 = load i16, i16* %v2_80538e2, align 2
  %v4_80538e2 = zext i16 %v3_80538e2 to i32
  store i32 %v2_805386e, i32* @esi, align 4
  %v2_80538e9 = add i32 %v4_80538e2, %v0_80538e2
  store i32 %v2_80538e9, i32* @ebx, align 4
  %v0_80538eb = load i32, i32* @esp, align 4
  %v1_80538eb = add i32 %v0_80538eb, 16
  store i32 %v5_80538f1, i32* %eax.global-to-local, align 4
  %v7_80538f4 = icmp ult i32 %v2_80538e9, %v5_80538f1
  br i1 %v7_80538f4, label %dec_label_pc_805385e, label %dec_label_pc_80538fc

dec_label_pc_80538fc:                             ; preds = %dec_label_pc_805383f, %dec_label_pc_80538a0, %dec_label_pc_8053878
  %v0_80538fc = phi i32 [ %v0_805388b, %dec_label_pc_8053878 ], [ %tmp14, %dec_label_pc_805383f ], [ %v2_805386e, %dec_label_pc_80538a0 ]
  store i32 %v0_80538fc, i32* %eax.global-to-local, align 4
  %v5_80538fe = sub i32 %v0_80538fc, %tmp14
  br label %dec_label_pc_8053901

dec_label_pc_8053901:                             ; preds = %dec_label_pc_8053890, %dec_label_pc_8053830, %dec_label_pc_80538fc
  %storemerge = phi i32 [ %v5_80538fe, %dec_label_pc_80538fc ], [ -1, %dec_label_pc_8053830 ], [ -1, %dec_label_pc_8053890 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80537fa, i32* @ebx, align 4
  store i32 %v0_80537f8, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_80538fc, { 1, 0 }
  uselistorder i32 %v2_80538e9, { 0, 2, 1 }
  uselistorder i32 %v3_80538a3, { 1, 0 }
  uselistorder i32 %v3_80538a0, { 1, 2, 0 }
  uselistorder i32 %v2_805386e, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_805387832, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80538ac34, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_80538f1, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8053823, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %edi.global-to-local, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 5, 9, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 2, 3, 8, 6, 0, 7 }
  uselistorder i32 (i16*, i32, i32)* @function_8053c06, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 19, { 2, 3, 4, 1, 0 }
  uselistorder i32 18, { 1, 2, 3, 0 }
  uselistorder i32 22, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 -12, { 17, 34, 86, 87, 47, 48, 49, 50, 51, 52, 36, 18, 40, 20, 44, 42, 38, 19, 45, 35, 46, 21, 53, 43, 41, 39, 37, 22, 54, 55, 23, 33, 24, 29, 26, 25, 59, 60, 0, 61, 1, 2, 79, 74, 75, 76, 30, 31, 73, 32, 77, 78, 62, 3, 4, 27, 28, 5, 63, 64, 6, 7, 65, 8, 66, 9, 10, 67, 11, 68, 12, 13, 69, 14, 70, 15, 71, 72, 56, 57, 58, 80, 81, 82, 83, 84, 16, 85 }
  uselistorder i32 -8, { 0, 8, 73, 69, 71, 70, 72, 74, 75, 22, 23, 24, 25, 26, 27, 10, 11, 15, 2, 19, 17, 13, 1, 20, 9, 21, 28, 29, 18, 16, 14, 12, 3, 30, 31, 4, 66, 5, 51, 38, 6, 35, 36, 37, 61, 55, 56, 57, 52, 53, 54, 58, 59, 60, 39, 40, 7, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 32, 33, 34, 62, 63, 64, 65, 67, 68 }
  uselistorder i32* @esp, { 34, 35, 36, 2, 3, 4, 5, 6, 175, 176, 0, 47, 48, 49, 50, 51, 52, 53, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 7, 10, 95, 96, 11, 124, 125, 126, 127, 63, 64, 65, 66, 67, 68, 106, 107, 89, 90, 42, 43, 44, 45, 46, 84, 85, 86, 87, 88, 97, 98, 79, 80, 81, 82, 83, 129, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 37, 38, 39, 40, 41, 120, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 121, 122, 123, 130, 131, 132, 133, 158, 134, 135, 136, 137, 138, 139, 128, 140, 141, 142, 143, 144, 145, 154, 155, 156, 146, 147, 148, 149, 150, 151, 152, 153, 8, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 13, 177, 178, 179, 180, 171, 172, 173, 174, 18, 181, 182, 183, 184, 17, 189, 190, 191, 192, 28, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 185, 186, 187, 188, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 19, 218, 219, 220, 29, 221, 222, 223, 224, 225, 226, 227, 229, 228, 1, 230, 231, 232, 233, 234, 235, 236, 237, 16, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 27, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 12, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 21, 20, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 22, 301, 302, 303, 304, 305, 306, 307, 23, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 24, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 25, 328, 329, 26, 330, 331, 332, 333, 334, 335, 336, 337, 338, 15, 30, 339, 340, 341, 342, 343, 344, 345, 31, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 32, 445, 446, 447, 448, 449, 450, 451, 452, 33, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 14, 470, 471, 472 }
  uselistorder i32 15, { 2, 1, 3, 0 }
  uselistorder i32 -16, { 14, 43, 121, 122, 66, 67, 68, 69, 70, 44, 45, 71, 72, 48, 15, 53, 18, 60, 61, 56, 57, 49, 17, 62, 63, 46, 47, 64, 65, 19, 73, 74, 58, 59, 54, 55, 50, 51, 52, 16, 20, 21, 75, 76, 22, 118, 79, 78, 42, 77, 2, 89, 3, 24, 35, 105, 25, 90, 30, 28, 92, 29, 1, 23, 88, 26, 91, 27, 4, 12, 40, 41, 107, 11, 108, 109, 36, 37, 106, 38, 110, 39, 93, 5, 94, 31, 95, 32, 96, 6, 97, 7, 98, 99, 8, 100, 101, 9, 102, 103, 33, 104, 10, 34, 111, 112, 80, 81, 82, 83, 84, 85, 86, 87, 113, 114, 115, 116, 123, 0, 117, 13, 119, 120 }
  uselistorder i32 30, { 4, 3, 2, 5, 6, 7, 1, 8, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053901, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80538fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805385e, { 1, 0 }
}

define i32 @function_8053909() local_unnamed_addr {
dec_label_pc_8053909:
  %stack_var_-8 = alloca i32, align 4
  %v2_805390c = ptrtoint i32* %stack_var_-8 to i32
  %v2_8053913 = call i32 @function_80539b3(i32 7, i32 %v2_805390c)
  %v2_8053920 = icmp slt i32 %v2_8053913, 0
  br i1 %v2_8053920, label %dec_label_pc_8053928, label %dec_label_pc_8053924

dec_label_pc_8053924:                             ; preds = %dec_label_pc_8053909
  %v3_8053924 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053928

dec_label_pc_8053928:                             ; preds = %dec_label_pc_8053909, %dec_label_pc_8053924
  %v0_8053928 = phi i32 [ 256, %dec_label_pc_8053909 ], [ %v3_8053924, %dec_label_pc_8053924 ]
  ret i32 %v0_8053928

; uselistorder directives
  uselistorder i32 7, { 4, 0, 5, 1, 2, 7, 6, 8, 9, 3 }
  uselistorder label %dec_label_pc_8053928, { 1, 0 }
}

define i32 @function_805392e() local_unnamed_addr {
dec_label_pc_805392e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805392e = load i32, i32* @ebx, align 4
  store i32 %v0_805392e, i32* %stack_var_-4, align 4
  %v1_8053937 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8053937, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8053937, -4095
  br i1 %tmp7, label %dec_label_pc_805394e, label %dec_label_pc_8053942

dec_label_pc_8053942:                             ; preds = %dec_label_pc_805392e
  %v1_8053942 = call i32 @function_8051afd(i32 %v0_805392e)
  %v0_8053947 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053947 = sub i32 0, %v0_8053947
  %v2_8053949 = inttoptr i32 %v1_8053942 to i32*
  store i32 %v1_8053947, i32* %v2_8053949, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053952.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805394e

dec_label_pc_805394e:                             ; preds = %dec_label_pc_805392e, %dec_label_pc_8053942
  %v2_8053952 = phi i32 [ %v0_805392e, %dec_label_pc_805392e ], [ %v2_8053952.pre, %dec_label_pc_8053942 ]
  %v0_805394e = phi i32 [ %v1_8053937, %dec_label_pc_805392e ], [ -1, %dec_label_pc_8053942 ]
  store i32 %v2_8053952, i32* @ebx, align 4
  ret i32 %v0_805394e

; uselistorder directives
  uselistorder i32 %v1_8053937, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805394e, { 1, 0 }
}

define i32 @function_8053954() local_unnamed_addr {
dec_label_pc_8053954:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053954 = load i32, i32* @ebx, align 4
  store i32 %v0_8053954, i32* %stack_var_-4, align 4
  %v1_805395d = call i32 @int80_syscall(i32 201)
  store i32 %v1_805395d, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805395d, -4095
  br i1 %tmp7, label %dec_label_pc_8053974, label %dec_label_pc_8053968

dec_label_pc_8053968:                             ; preds = %dec_label_pc_8053954
  %v1_8053968 = call i32 @function_8051afd(i32 %v0_8053954)
  %v0_805396d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805396d = sub i32 0, %v0_805396d
  %v2_805396f = inttoptr i32 %v1_8053968 to i32*
  store i32 %v1_805396d, i32* %v2_805396f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053978.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053974

dec_label_pc_8053974:                             ; preds = %dec_label_pc_8053954, %dec_label_pc_8053968
  %v2_8053978 = phi i32 [ %v0_8053954, %dec_label_pc_8053954 ], [ %v2_8053978.pre, %dec_label_pc_8053968 ]
  %v0_8053974 = phi i32 [ %v1_805395d, %dec_label_pc_8053954 ], [ -1, %dec_label_pc_8053968 ]
  store i32 %v2_8053978, i32* @ebx, align 4
  ret i32 %v0_8053974

; uselistorder directives
  uselistorder i32 %v1_805395d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053974, { 1, 0 }
}

define i32 @function_805397a() local_unnamed_addr {
dec_label_pc_805397a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805397a = load i32, i32* @ebx, align 4
  store i32 %v0_805397a, i32* %stack_var_-4, align 4
  %v1_8053983 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8053983, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8053983, -4095
  br i1 %tmp7, label %dec_label_pc_805399a, label %dec_label_pc_805398e

dec_label_pc_805398e:                             ; preds = %dec_label_pc_805397a
  %v1_805398e = call i32 @function_8051afd(i32 %v0_805397a)
  %v0_8053993 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053993 = sub i32 0, %v0_8053993
  %v2_8053995 = inttoptr i32 %v1_805398e to i32*
  store i32 %v1_8053993, i32* %v2_8053995, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805399e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805399a

dec_label_pc_805399a:                             ; preds = %dec_label_pc_805397a, %dec_label_pc_805398e
  %v2_805399e = phi i32 [ %v0_805397a, %dec_label_pc_805397a ], [ %v2_805399e.pre, %dec_label_pc_805398e ]
  %v0_805399a = phi i32 [ %v1_8053983, %dec_label_pc_805397a ], [ -1, %dec_label_pc_805398e ]
  store i32 %v2_805399e, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805399a

; uselistorder directives
  uselistorder i32 %v1_8053983, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805399a, { 1, 0 }
}

define i32 @function_80539a0() local_unnamed_addr {
dec_label_pc_80539a0:
  %v0_80539a0 = load i32, i32* @global_var_8055144.77, align 4
  %v1_80539aa = icmp eq i32 %v0_80539a0, 0
  br i1 %v1_80539aa, label %dec_label_pc_80539b0, label %dec_label_pc_80539ae

dec_label_pc_80539ae:                             ; preds = %dec_label_pc_80539a0
  br label %dec_label_pc_80539b0

dec_label_pc_80539b0:                             ; preds = %dec_label_pc_80539a0, %dec_label_pc_80539ae
  %v0_80539b0 = phi i32 [ 4096, %dec_label_pc_80539a0 ], [ %v0_80539a0, %dec_label_pc_80539ae ]
  ret i32 %v0_80539b0

; uselistorder directives
  uselistorder i32 4096, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80539b0, { 1, 0 }
}

define i32 @function_80539b3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80539b3:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80539b3 = load i32, i32* @ebx, align 4
  store i32 %v0_80539b3, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_80539c6 = call i32 @int80_syscall(i32 191)
  store i32 %v1_80539c6, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_80539c6, -4095
  br i1 %tmp9, label %dec_label_pc_80539df, label %dec_label_pc_80539d3

dec_label_pc_80539d3:                             ; preds = %dec_label_pc_80539b3
  %v1_80539d3 = call i32 @function_8051afd(i32 %v0_80539b3)
  %v0_80539d8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80539d8 = sub i32 0, %v0_80539d8
  %v2_80539da = inttoptr i32 %v1_80539d3 to i32*
  store i32 %v1_80539d8, i32* %v2_80539da, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80539e3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80539df

dec_label_pc_80539df:                             ; preds = %dec_label_pc_80539b3, %dec_label_pc_80539d3
  %v2_80539e3 = phi i32 [ %v0_80539b3, %dec_label_pc_80539b3 ], [ %v2_80539e3.pre, %dec_label_pc_80539d3 ]
  %v0_80539df = phi i32 [ %v1_80539c6, %dec_label_pc_80539b3 ], [ -1, %dec_label_pc_80539d3 ]
  store i32 %v2_80539e3, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80539df

; uselistorder directives
  uselistorder i32 %v1_80539c6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80539df, { 1, 0 }
}

define i32 @function_80539e5() local_unnamed_addr {
dec_label_pc_80539e5:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80539e5 = load i32, i32* @ebx, align 4
  store i32 %v0_80539e5, i32* %stack_var_-4, align 4
  %v1_80539ee = call i32 @int80_syscall(i32 199)
  store i32 %v1_80539ee, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80539ee, -4095
  br i1 %tmp7, label %dec_label_pc_8053a05, label %dec_label_pc_80539f9

dec_label_pc_80539f9:                             ; preds = %dec_label_pc_80539e5
  %v1_80539f9 = call i32 @function_8051afd(i32 %v0_80539e5)
  %v0_80539fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_80539fe = sub i32 0, %v0_80539fe
  %v2_8053a00 = inttoptr i32 %v1_80539f9 to i32*
  store i32 %v1_80539fe, i32* %v2_8053a00, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053a09.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053a05

dec_label_pc_8053a05:                             ; preds = %dec_label_pc_80539e5, %dec_label_pc_80539f9
  %v2_8053a09 = phi i32 [ %v0_80539e5, %dec_label_pc_80539e5 ], [ %v2_8053a09.pre, %dec_label_pc_80539f9 ]
  %v0_8053a05 = phi i32 [ %v1_80539ee, %dec_label_pc_80539e5 ], [ -1, %dec_label_pc_80539f9 ]
  store i32 %v2_8053a09, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053a05

; uselistorder directives
  uselistorder i32 %v1_80539ee, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053a05, { 1, 0 }
}

define i32 @function_8053a0b(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053a0b:
  %esi.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_8053a21 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053a21, i32* %esi.global-to-local, align 4
  %v1_8053a38 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8053a38, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8053a38, -4095
  br i1 %tmp18, label %dec_label_pc_8053a52, label %dec_label_pc_8053a44

dec_label_pc_8053a44:                             ; preds = %dec_label_pc_8053a0b
  %v2_8053a25 = ashr i32 %tmp8, 31
  %v1_8053a44 = call i32 @function_8051afd(i32 %v2_8053a25)
  %v0_8053a49 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053a49 = sub i32 0, %v0_8053a49
  %v2_8053a4b = inttoptr i32 %v1_8053a44 to i32*
  store i32 %v1_8053a49, i32* %v2_8053a4b, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053a56

dec_label_pc_8053a52:                             ; preds = %dec_label_pc_8053a0b
  %v1_8053a52 = icmp eq i32 %v1_8053a38, 0
  br i1 %v1_8053a52, label %dec_label_pc_8053a5b, label %dec_label_pc_8053a56

dec_label_pc_8053a56:                             ; preds = %dec_label_pc_8053a52, %dec_label_pc_8053a44
  %v0_8053a56 = phi i32 [ %v1_8053a38, %dec_label_pc_8053a52 ], [ -1, %dec_label_pc_8053a44 ]
  br label %dec_label_pc_8053a63

dec_label_pc_8053a5b:                             ; preds = %dec_label_pc_8053a52
  %v3_8053a5b = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8053a63

dec_label_pc_8053a63:                             ; preds = %dec_label_pc_8053a56, %dec_label_pc_8053a5b
  %v0_8053a69 = phi i32 [ %v0_8053a56, %dec_label_pc_8053a56 ], [ %v3_8053a5b, %dec_label_pc_8053a5b ]
  ret i32 %v0_8053a69

; uselistorder directives
  uselistorder i32 %v1_8053a38, { 1, 2, 0, 3 }
  uselistorder i32 31, { 8, 6, 1, 2, 3, 4, 7, 5, 9, 10, 11, 12, 0, 13 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053a63, { 1, 0 }
}

define i32 @function_8053a6a(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_8053a6a:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053a6b = load i32, i32* @esi, align 4
  store i32 %v0_8053a6b, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8053a83 = load i32, i32* @ebx, align 4
  %v5_8053a8b = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_8053a8b = ptrtoint i32* %v5_8053a8b to i32
  store i32 %v0_8053a83, i32* @ebx, align 4
  store i32 %v6_8053a8b, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_8053a8b, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_8053a97, label %dec_label_pc_8053aa3

dec_label_pc_8053a97:                             ; preds = %dec_label_pc_8053a6a
  %v1_8053a97 = call i32 @function_8051afd(i32 %v0_8053a83)
  %v0_8053a9c = load i32, i32* %esi.global-to-local, align 4
  %v1_8053a9c = sub i32 0, %v0_8053a9c
  %v2_8053a9e = inttoptr i32 %v1_8053a97 to i32*
  store i32 %v1_8053a9c, i32* %v2_8053a9e, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8053aa6.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8053aa3

dec_label_pc_8053aa3:                             ; preds = %dec_label_pc_8053a6a, %dec_label_pc_8053a97
  %v2_8053aa6 = phi i32 [ %v0_8053a6b, %dec_label_pc_8053a6a ], [ %v2_8053aa6.pre, %dec_label_pc_8053a97 ]
  %v0_8053aa3 = phi i32 [ %v6_8053a8b, %dec_label_pc_8053a6a ], [ -1, %dec_label_pc_8053a97 ]
  store i32 %v2_8053aa6, i32* @esi, align 4
  ret i32 %v0_8053aa3

; uselistorder directives
  uselistorder i32 %v0_8053a83, { 1, 0 }
  uselistorder label %dec_label_pc_8053aa3, { 1, 0 }
}

define i32 @function_8053aa9(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053aa9:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8053aa9 = load i32, i32* @ebx, align 4
  store i32 %v0_8053aa9, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_8053abc = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_8053abc, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_8053abc, -4095
  br i1 %tmp10, label %dec_label_pc_8053ad5, label %dec_label_pc_8053ac9

dec_label_pc_8053ac9:                             ; preds = %dec_label_pc_8053aa9
  %v1_8053ac9 = call i32 @function_8051afd(i32 %v0_8053aa9)
  %v0_8053ace = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ace = sub i32 0, %v0_8053ace
  %v2_8053ad0 = inttoptr i32 %v1_8053ac9 to i32*
  store i32 %v1_8053ace, i32* %v2_8053ad0, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053ad9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053ad5

dec_label_pc_8053ad5:                             ; preds = %dec_label_pc_8053aa9, %dec_label_pc_8053ac9
  %v2_8053ad9 = phi i32 [ %v0_8053aa9, %dec_label_pc_8053aa9 ], [ %v2_8053ad9.pre, %dec_label_pc_8053ac9 ]
  %v0_8053ad5 = phi i32 [ %v3_8053abc, %dec_label_pc_8053aa9 ], [ -1, %dec_label_pc_8053ac9 ]
  store i32 %v2_8053ad9, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053ad5

; uselistorder directives
  uselistorder i32 %v3_8053abc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053ad5, { 1, 0 }
}

define i32 @function_8053adb(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053adb:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_8053adb = load i32, i32* @ebx, align 4
  store i32 %v0_8053adb, i32* %stack_var_-4, align 4
  %v4_8053adf = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8053adf, i32* %ebx.global-to-local, align 4
  %v6_8053aee = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8053aee, i32* %ebx.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_8053aee, -4095
  br i1 %tmp11, label %dec_label_pc_8053b07, label %dec_label_pc_8053afb

dec_label_pc_8053afb:                             ; preds = %dec_label_pc_8053adb
  %v1_8053afb = call i32 @function_8051afd(i32 %v0_8053adb)
  %v0_8053b00 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053b00 = sub i32 0, %v0_8053b00
  %v2_8053b02 = inttoptr i32 %v1_8053afb to i32*
  store i32 %v1_8053b00, i32* %v2_8053b02, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8053b0b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053b07

dec_label_pc_8053b07:                             ; preds = %dec_label_pc_8053adb, %dec_label_pc_8053afb
  %v2_8053b0b = phi i32 [ %v0_8053adb, %dec_label_pc_8053adb ], [ %v2_8053b0b.pre, %dec_label_pc_8053afb ]
  %v0_8053b07 = phi i32 [ %v6_8053aee, %dec_label_pc_8053adb ], [ -1, %dec_label_pc_8053afb ]
  store i32 %v2_8053b0b, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8053b07

; uselistorder directives
  uselistorder i32 %v6_8053aee, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053b07, { 1, 0 }
}

define i32 @function_8053b0d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053b0d:
  %v0_8053b0e = load i32, i32* @ebx, align 4
  %v0_8053b12 = load i32, i32* @global_var_8055158.84, align 8
  %v1_8053b12 = icmp eq i32 %v0_8053b12, 0
  %v1_8053b1d = icmp eq i1 %v1_8053b12, false
  br i1 %v1_8053b1d, label %dec_label_pc_8053b30, label %dec_label_pc_8053b1f

dec_label_pc_8053b1f:                             ; preds = %dec_label_pc_8053b0d
  %v1_8053b24 = call i32 @function_8053ceb(i32 0)
  %v2_8053b2c = icmp slt i32 %v1_8053b24, 0
  br i1 %v2_8053b2c, label %dec_label_pc_8053b52, label %dec_label_pc_8053b1f.dec_label_pc_8053b30_crit_edge

dec_label_pc_8053b1f.dec_label_pc_8053b30_crit_edge: ; preds = %dec_label_pc_8053b1f
  %v0_8053b32.pre = load i32, i32* @global_var_8055158.84, align 8
  br label %dec_label_pc_8053b30

dec_label_pc_8053b30:                             ; preds = %dec_label_pc_8053b1f.dec_label_pc_8053b30_crit_edge, %dec_label_pc_8053b0d
  %v0_8053b40 = phi i32 [ %v0_8053b32.pre, %dec_label_pc_8053b1f.dec_label_pc_8053b30_crit_edge ], [ %v0_8053b12, %dec_label_pc_8053b0d ]
  %v1_8053b30 = icmp eq i32 %arg1, 0
  %v1_8053b37 = icmp eq i1 %v1_8053b30, false
  br i1 %v1_8053b37, label %dec_label_pc_8053b3d, label %dec_label_pc_8053b39

dec_label_pc_8053b39:                             ; preds = %dec_label_pc_8053b30
  br label %dec_label_pc_8053b55

dec_label_pc_8053b3d:                             ; preds = %dec_label_pc_8053b30
  store i32 %v0_8053b40, i32* @ebx, align 4
  %v2_8053b42 = add i32 %v0_8053b40, %arg1
  %v1_8053b46 = call i32 @function_8053ceb(i32 %v2_8053b42)
  %v2_8053b4e = icmp slt i32 %v1_8053b46, 0
  %v1_8053b50 = icmp eq i1 %v2_8053b4e, false
  br i1 %v1_8053b50, label %dec_label_pc_8053b3d.dec_label_pc_8053b55_crit_edge, label %dec_label_pc_8053b52

dec_label_pc_8053b3d.dec_label_pc_8053b55_crit_edge: ; preds = %dec_label_pc_8053b3d
  %v0_8053b55.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053b55

dec_label_pc_8053b52:                             ; preds = %dec_label_pc_8053b3d, %dec_label_pc_8053b1f
  br label %dec_label_pc_8053b55

dec_label_pc_8053b55:                             ; preds = %dec_label_pc_8053b3d.dec_label_pc_8053b55_crit_edge, %dec_label_pc_8053b39, %dec_label_pc_8053b52
  %v0_8053b55 = phi i32 [ %v0_8053b55.pre, %dec_label_pc_8053b3d.dec_label_pc_8053b55_crit_edge ], [ %v0_8053b40, %dec_label_pc_8053b39 ], [ -1, %dec_label_pc_8053b52 ]
  store i32 %v0_8053b0e, i32* @ebx, align 4
  ret i32 %v0_8053b55

; uselistorder directives
  uselistorder i32 %v0_8053b40, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_8053ceb, { 1, 0 }
  uselistorder label %dec_label_pc_8053b55, { 2, 0, 1 }
}

define i32 @function_8053b5b(%tms* %arg1) local_unnamed_addr {
dec_label_pc_8053b5b:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053b5b = load i32, i32* @edi, align 4
  store i32 %v0_8053b5b, i32* %stack_var_-4, align 4
  %v4_8053b5f = ptrtoint %tms* %arg1 to i32
  store i32 %v4_8053b5f, i32* %edi.global-to-local, align 4
  %v0_8053b63 = load i32, i32* @ebx, align 4
  %v3_8053b6b = call i32 @times(%tms* %arg1)
  store i32 %v3_8053b6b, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_8053b6b, -4095
  br i1 %tmp10, label %dec_label_pc_8053b83, label %dec_label_pc_8053b77

dec_label_pc_8053b77:                             ; preds = %dec_label_pc_8053b5b
  %v1_8053b77 = call i32 @function_8051afd(i32 %v0_8053b63)
  %v0_8053b7c = load i32, i32* %edi.global-to-local, align 4
  %v1_8053b7c = sub i32 0, %v0_8053b7c
  %v2_8053b7e = inttoptr i32 %v1_8053b77 to i32*
  store i32 %v1_8053b7c, i32* %v2_8053b7e, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8053b87.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053b83

dec_label_pc_8053b83:                             ; preds = %dec_label_pc_8053b5b, %dec_label_pc_8053b77
  %v2_8053b87 = phi i32 [ %v0_8053b5b, %dec_label_pc_8053b5b ], [ %v2_8053b87.pre, %dec_label_pc_8053b77 ]
  %v0_8053b83 = phi i32 [ %v3_8053b6b, %dec_label_pc_8053b5b ], [ -1, %dec_label_pc_8053b77 ]
  store i32 %v2_8053b87, i32* %edi.global-to-local, align 4
  ret i32 %v0_8053b83

; uselistorder directives
  uselistorder i32 %v3_8053b6b, { 1, 0, 2 }
  uselistorder i32* @edi, { 11, 12, 13, 14, 15, 16, 108, 3, 109, 110, 111, 0, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 4, 5, 6, 7, 8, 9, 10, 130, 144, 145, 131, 132, 133, 134, 135, 136, 137, 138, 1, 139, 140, 141, 142, 143, 146, 147, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 148, 149, 27, 28, 29, 150, 151, 152, 153, 154, 155, 36, 76, 77, 78, 79, 107, 62, 80, 81, 82, 83, 37, 38, 39, 40, 41, 68, 69, 70, 57, 58, 59, 60, 33, 34, 35, 54, 55, 56, 63, 64, 65, 66, 51, 52, 53, 84, 85, 86, 75, 87, 88, 89, 71, 30, 31, 32, 72, 43, 42, 44, 45, 46, 47, 48, 49, 50, 61, 67, 73, 74, 90, 91, 92, 93, 94, 95, 2, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 178, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053b83, { 1, 0 }
}

define i32 @function_8053b89(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8053b89:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053b8a = load i32, i32* @ebx, align 4
  store i32 %v0_8053b8a, i32* %stack_var_-8, align 4
  %v4_8053b8e = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053b8e, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_8053b9b = inttoptr i32 %arg2 to i8*
  %v4_8053b9b = call i32 @function_8051b4e(i8* %v3_8053b9b, i32 0, i32 88)
  store i32 %v4_8053b9b, i32* %eax.global-to-local, align 4
  %v2_8053ba0 = load i16, i16* %arg1, align 2
  %v3_8053ba0 = zext i16 %v2_8053ba0 to i32
  store i32 %v3_8053ba0, i32* %eax.global-to-local, align 4
  %v0_8053ba3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053ba3 = add i32 %v0_8053ba3, 4
  %v2_8053ba3 = inttoptr i32 %v1_8053ba3 to i32*
  store i32 0, i32* %v2_8053ba3, align 4
  %v0_8053baa = load i32, i32* %eax.global-to-local, align 4
  %v1_8053baa = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053baa = inttoptr i32 %v1_8053baa to i32*
  store i32 %v0_8053baa, i32* %v2_8053baa, align 4
  %v0_8053bac = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bac = add i32 %v0_8053bac, 4
  %v2_8053bac = inttoptr i32 %v1_8053bac to i32*
  %v3_8053bac = load i32, i32* %v2_8053bac, align 4
  store i32 %v3_8053bac, i32* %eax.global-to-local, align 4
  %v1_8053baf = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053baf = add i32 %v1_8053baf, 12
  %v3_8053baf = inttoptr i32 %v2_8053baf to i32*
  store i32 %v3_8053bac, i32* %v3_8053baf, align 4
  %v0_8053bb2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bb2 = add i32 %v0_8053bb2, 8
  %v2_8053bb2 = inttoptr i32 %v1_8053bb2 to i16*
  %v3_8053bb2 = load i16, i16* %v2_8053bb2, align 2
  %v4_8053bb2 = zext i16 %v3_8053bb2 to i32
  store i32 %v4_8053bb2, i32* %eax.global-to-local, align 4
  %v1_8053bb6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053bb6 = add i32 %v1_8053bb6, 16
  %v3_8053bb6 = inttoptr i32 %v2_8053bb6 to i32*
  store i32 %v4_8053bb2, i32* %v3_8053bb6, align 4
  %v0_8053bb9 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bb9 = add i32 %v0_8053bb9, 10
  %v2_8053bb9 = inttoptr i32 %v1_8053bb9 to i16*
  %v3_8053bb9 = load i16, i16* %v2_8053bb9, align 2
  %v4_8053bb9 = zext i16 %v3_8053bb9 to i32
  store i32 %v4_8053bb9, i32* %eax.global-to-local, align 4
  %v1_8053bbd = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053bbd = add i32 %v1_8053bbd, 20
  %v3_8053bbd = inttoptr i32 %v2_8053bbd to i32*
  store i32 %v4_8053bb9, i32* %v3_8053bbd, align 4
  %v0_8053bc0 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bc0 = add i32 %v0_8053bc0, 12
  %v2_8053bc0 = inttoptr i32 %v1_8053bc0 to i16*
  %v3_8053bc0 = load i16, i16* %v2_8053bc0, align 2
  %v4_8053bc0 = zext i16 %v3_8053bc0 to i32
  store i32 %v4_8053bc0, i32* %eax.global-to-local, align 4
  %v1_8053bc4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053bc4 = add i32 %v1_8053bc4, 24
  %v3_8053bc4 = inttoptr i32 %v2_8053bc4 to i32*
  store i32 %v4_8053bc0, i32* %v3_8053bc4, align 4
  %v0_8053bc7 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bc7 = add i32 %v0_8053bc7, 14
  %v2_8053bc7 = inttoptr i32 %v1_8053bc7 to i16*
  %v3_8053bc7 = load i16, i16* %v2_8053bc7, align 2
  %v4_8053bc7 = zext i16 %v3_8053bc7 to i32
  store i32 %v4_8053bc7, i32* %eax.global-to-local, align 4
  %v1_8053bcb = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053bcb = add i32 %v1_8053bcb, 28
  %v3_8053bcb = inttoptr i32 %v2_8053bcb to i32*
  store i32 %v4_8053bc7, i32* %v3_8053bcb, align 4
  %v0_8053bce = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bce = add i32 %v0_8053bce, 16
  %v2_8053bce = inttoptr i32 %v1_8053bce to i16*
  %v3_8053bce = load i16, i16* %v2_8053bce, align 2
  %v4_8053bce = zext i16 %v3_8053bce to i32
  store i32 %v4_8053bce, i32* %eax.global-to-local, align 4
  %v0_8053bd2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053bd2 = add i32 %v0_8053bd2, 36
  %v2_8053bd2 = inttoptr i32 %v1_8053bd2 to i32*
  store i32 0, i32* %v2_8053bd2, align 4
  %v0_8053bd9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053bd9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053bd9 = add i32 %v1_8053bd9, 32
  %v3_8053bd9 = inttoptr i32 %v2_8053bd9 to i32*
  store i32 %v0_8053bd9, i32* %v3_8053bd9, align 4
  %v0_8053bdc = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bdc = add i32 %v0_8053bdc, 20
  %v2_8053bdc = inttoptr i32 %v1_8053bdc to i32*
  %v3_8053bdc = load i32, i32* %v2_8053bdc, align 4
  store i32 %v3_8053bdc, i32* %eax.global-to-local, align 4
  %v1_8053bdf = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053bdf = add i32 %v1_8053bdf, 44
  %v3_8053bdf = inttoptr i32 %v2_8053bdf to i32*
  store i32 %v3_8053bdc, i32* %v3_8053bdf, align 4
  %v0_8053be2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053be2 = add i32 %v0_8053be2, 24
  %v2_8053be2 = inttoptr i32 %v1_8053be2 to i32*
  %v3_8053be2 = load i32, i32* %v2_8053be2, align 4
  store i32 %v3_8053be2, i32* %eax.global-to-local, align 4
  %v1_8053be5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053be5 = add i32 %v1_8053be5, 48
  %v3_8053be5 = inttoptr i32 %v2_8053be5 to i32*
  store i32 %v3_8053be2, i32* %v3_8053be5, align 4
  %v0_8053be8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053be8 = add i32 %v0_8053be8, 28
  %v2_8053be8 = inttoptr i32 %v1_8053be8 to i32*
  %v3_8053be8 = load i32, i32* %v2_8053be8, align 4
  store i32 %v3_8053be8, i32* %eax.global-to-local, align 4
  %v1_8053beb = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053beb = add i32 %v1_8053beb, 52
  %v3_8053beb = inttoptr i32 %v2_8053beb to i32*
  store i32 %v3_8053be8, i32* %v3_8053beb, align 4
  %v0_8053bee = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bee = add i32 %v0_8053bee, 32
  %v2_8053bee = inttoptr i32 %v1_8053bee to i32*
  %v3_8053bee = load i32, i32* %v2_8053bee, align 4
  store i32 %v3_8053bee, i32* %eax.global-to-local, align 4
  %v1_8053bf1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053bf1 = add i32 %v1_8053bf1, 56
  %v3_8053bf1 = inttoptr i32 %v2_8053bf1 to i32*
  store i32 %v3_8053bee, i32* %v3_8053bf1, align 4
  %v0_8053bf4 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bf4 = add i32 %v0_8053bf4, 40
  %v2_8053bf4 = inttoptr i32 %v1_8053bf4 to i32*
  %v3_8053bf4 = load i32, i32* %v2_8053bf4, align 4
  store i32 %v3_8053bf4, i32* %eax.global-to-local, align 4
  %v1_8053bf7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053bf7 = add i32 %v1_8053bf7, 64
  %v3_8053bf7 = inttoptr i32 %v2_8053bf7 to i32*
  store i32 %v3_8053bf4, i32* %v3_8053bf7, align 4
  %v0_8053bfa = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bfa = add i32 %v0_8053bfa, 48
  %v2_8053bfa = inttoptr i32 %v1_8053bfa to i32*
  %v3_8053bfa = load i32, i32* %v2_8053bfa, align 4
  store i32 %v3_8053bfa, i32* %eax.global-to-local, align 4
  %v1_8053bfd = load i32, i32* %ebx.global-to-local, align 4
  %v2_8053bfd = add i32 %v1_8053bfd, 72
  %v3_8053bfd = inttoptr i32 %v2_8053bfd to i32*
  store i32 %v3_8053bfa, i32* %v3_8053bfd, align 4
  %v2_8053c03 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053c03, i32* @ebx, align 4
  ret i32 %v3_8053bfa

; uselistorder directives
  uselistorder i32 72, { 3, 2, 4, 5, 6, 7, 0, 8, 9, 10, 11, 1 }
  uselistorder i32 64, { 7, 6, 3, 2, 1, 4, 0, 5 }
  uselistorder i32 40, { 6, 5, 1, 3, 2, 0, 7, 4, 8, 9, 10, 11 }
  uselistorder i32 56, { 3, 2, 0, 4, 5, 6, 7, 8, 1 }
  uselistorder i32 52, { 4, 3, 5, 6, 7, 1, 0, 2 }
  uselistorder i32 48, { 7, 8, 6, 3, 4, 0, 1, 9, 10, 11, 2, 5 }
  uselistorder i32 32, { 39, 40, 49, 31, 36, 50, 51, 37, 38, 52, 1, 0, 2, 3, 35, 4, 5, 6, 7, 8, 32, 53, 41, 46, 42, 43, 44, 45, 10, 9, 12, 11, 13, 14, 34, 33, 47, 48, 54, 15, 16, 17, 18, 55, 19, 20, 56, 57, 22, 21, 24, 23, 25, 26, 58, 27, 28, 29, 30, 59 }
  uselistorder i32 36, { 5, 4, 0, 3, 1, 2, 6, 7 }
  uselistorder i32 14, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 24, { 22, 23, 18, 19, 20, 55, 21, 24, 25, 1, 2, 13, 38, 0, 46, 14, 31, 41, 27, 10, 28, 29, 8, 11, 47, 42, 12, 26, 30, 43, 15, 32, 9, 33, 34, 35, 7, 36, 37, 6, 39, 40, 44, 45, 48, 49, 50, 51, 53, 54, 52, 5, 16, 4, 3, 56, 17 }
  uselistorder i32 20, { 19, 20, 7, 15, 16, 17, 32, 18, 21, 22, 23, 1, 2, 14, 0, 24, 11, 9, 12, 13, 10, 25, 26, 27, 28, 29, 30, 33, 31, 6, 4, 5, 3, 34, 35, 36, 8 }
  uselistorder i32 16, { 46, 47, 39, 40, 41, 42, 43, 44, 19, 35, 64, 3, 36, 37, 38, 0, 4, 65, 66, 6, 5, 67, 1, 7, 45, 48, 20, 23, 34, 11, 12, 30, 49, 50, 8, 52, 9, 54, 51, 31, 27, 25, 28, 29, 13, 26, 10, 53, 55, 32, 56, 22, 57, 59, 21, 58, 60, 61, 62, 68, 63, 69, 73, 15, 74, 75, 76, 77, 78, 79, 80, 70, 71, 72, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 2, 91, 92, 93, 94, 95, 96, 97, 98, 18, 99, 16, 17, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 14, 122, 33, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 24 }
  uselistorder i32 8, { 91, 80, 81, 82, 83, 84, 85, 86, 87, 40, 103, 9, 41, 104, 42, 69, 106, 107, 108, 109, 110, 111, 112, 3, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 4, 72, 73, 74, 75, 76, 77, 78, 79, 123, 124, 125, 126, 127, 128, 46, 5, 47, 6, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 45, 146, 147, 7, 148, 149, 150, 151, 8, 152, 88, 89, 90, 92, 105, 153, 154, 155, 48, 97, 93, 94, 49, 95, 96, 70, 98, 99, 100, 101, 10, 102, 0, 1, 156, 37, 157, 15, 16, 14, 21, 158, 13, 19, 20, 50, 44, 51, 52, 17, 53, 18, 54, 2, 11, 38, 159, 22, 55, 23, 56, 24, 25, 26, 27, 57, 28, 29, 30, 58, 31, 59, 160, 60, 32, 61, 33, 62, 161, 63, 34, 64, 35, 65, 66, 67, 36, 12, 162, 39, 163, 68, 71, 43 }
  uselistorder i32 (i8*, i32, i32)* @function_8051b4e, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_8053c06(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053c06:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053c07 = load i32, i32* @esi, align 4
  store i32 %v0_8053c07, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8053c08 = sdiv i32 %sext, 16777216
  store i32 %v4_8053c08, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8053c12 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053c12, i32* %edi.global-to-local, align 4
  %v2_8053c16 = udiv i32 %v4_8053c08, 4
  %v3_8053c19 = inttoptr i32 %arg2 to i8*
  %v4_8053c19 = bitcast i16* %arg1 to i8*
  %v5_8053c19 = call i8* @_memcpy(i8* %v4_8053c19, i8* %v3_8053c19, i32 %v2_8053c16)
  %v0_8053c1b = load i32, i32* %eax.global-to-local, align 4
  %v2_8053c1b = and i32 %v0_8053c1b, 2
  %v3_8053c1b = icmp eq i32 %v2_8053c1b, 0
  br i1 %v3_8053c1b, label %dec_label_pc_8053c21, label %dec_label_pc_8053c1f

dec_label_pc_8053c1f:                             ; preds = %dec_label_pc_8053c06
  %v0_8053c1f = load i32, i32* %esi.global-to-local, align 4
  %v1_8053c1f = inttoptr i32 %v0_8053c1f to i16*
  %v2_8053c1f = load i16, i16* %v1_8053c1f, align 2
  %v3_8053c1f = load i32, i32* %edi.global-to-local, align 4
  %v4_8053c1f = inttoptr i32 %v3_8053c1f to i16*
  store i16 %v2_8053c1f, i16* %v4_8053c1f, align 2
  %v5_8053c1f = load i32, i32* %edi.global-to-local, align 4
  %v6_8053c1f = load i32, i32* %esi.global-to-local, align 4
  %v7_8053c1f = load i1, i1* @df, align 1
  %v8_8053c1f = select i1 %v7_8053c1f, i32 -2, i32 2
  %v9_8053c1f = add i32 %v8_8053c1f, %v5_8053c1f
  %v10_8053c1f = add i32 %v8_8053c1f, %v6_8053c1f
  store i32 %v9_8053c1f, i32* %edi.global-to-local, align 4
  store i32 %v10_8053c1f, i32* %esi.global-to-local, align 4
  %v0_8053c21.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053c21

dec_label_pc_8053c21:                             ; preds = %dec_label_pc_8053c06, %dec_label_pc_8053c1f
  %v0_8053c21 = phi i32 [ %v0_8053c1b, %dec_label_pc_8053c06 ], [ %v0_8053c21.pre, %dec_label_pc_8053c1f ]
  %v2_8053c21 = urem i32 %v0_8053c21, 2
  %v3_8053c21 = icmp eq i32 %v2_8053c21, 0
  br i1 %v3_8053c21, label %dec_label_pc_8053c26, label %dec_label_pc_8053c25

dec_label_pc_8053c25:                             ; preds = %dec_label_pc_8053c21
  %v0_8053c25 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053c25 = inttoptr i32 %v0_8053c25 to i8*
  %v2_8053c25 = load i8, i8* %v1_8053c25, align 1
  %v3_8053c25 = load i32, i32* %edi.global-to-local, align 4
  %v4_8053c25 = inttoptr i32 %v3_8053c25 to i8*
  store i8 %v2_8053c25, i8* %v4_8053c25, align 1
  %v5_8053c25 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053c25 = load i32, i32* %esi.global-to-local, align 4
  %v7_8053c25 = load i1, i1* @df, align 1
  %v8_8053c25 = select i1 %v7_8053c25, i32 -1, i32 1
  %v9_8053c25 = add i32 %v8_8053c25, %v5_8053c25
  %v10_8053c25 = add i32 %v8_8053c25, %v6_8053c25
  store i32 %v9_8053c25, i32* %edi.global-to-local, align 4
  store i32 %v10_8053c25, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053c26

dec_label_pc_8053c26:                             ; preds = %dec_label_pc_8053c21, %dec_label_pc_8053c25
  store i32 %v4_8053c12, i32* %eax.global-to-local, align 4
  %v2_8053c2a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053c2a, i32* @esi, align 4
  ret i32 %v4_8053c12

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 -2, { 18, 19, 17, 20, 0, 1, 3, 6, 4, 2, 7, 8, 5, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 4, { 3, 94, 95, 86, 87, 88, 89, 168, 169, 171, 172, 0, 173, 174, 175, 170, 45, 72, 176, 178, 179, 181, 184, 185, 186, 187, 188, 189, 4, 190, 191, 192, 193, 194, 1, 195, 182, 183, 75, 47, 76, 77, 78, 79, 80, 81, 82, 5, 84, 83, 196, 6, 197, 46, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 10, 218, 219, 221, 220, 7, 180, 177, 85, 50, 90, 91, 92, 93, 96, 222, 223, 51, 103, 104, 52, 105, 106, 107, 108, 136, 137, 138, 139, 140, 141, 142, 143, 144, 109, 110, 111, 133, 134, 124, 125, 126, 100, 101, 102, 121, 122, 123, 128, 129, 130, 118, 119, 120, 147, 148, 97, 98, 99, 112, 113, 114, 115, 116, 117, 127, 131, 132, 135, 73, 149, 150, 151, 152, 153, 145, 146, 48, 159, 14, 154, 49, 155, 156, 157, 158, 224, 225, 160, 161, 162, 163, 164, 165, 166, 167, 9, 226, 227, 228, 41, 19, 20, 18, 25, 17, 23, 24, 229, 230, 231, 11, 53, 54, 55, 21, 56, 22, 57, 2, 232, 15, 233, 42, 12, 234, 26, 58, 27, 59, 28, 235, 29, 30, 31, 60, 32, 33, 34, 61, 35, 62, 63, 36, 64, 37, 65, 236, 66, 38, 67, 39, 68, 237, 69, 70, 238, 40, 239, 240, 241, 242, 244, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 16, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 43, 13, 8, 281, 44, 71, 282, 74 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 7, 6, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* @esi, { 80, 81, 12, 13, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 38, 39, 82, 83, 11, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 87, 88, 89, 103, 107, 2, 108, 109, 110, 111, 112, 113, 114, 104, 105, 106, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 115, 116, 117, 118, 119, 120, 121, 0, 122, 123, 124, 125, 3, 126, 9, 127, 128, 129, 130, 27, 131, 132, 40, 4, 41, 42, 43, 44, 45, 101, 102, 133, 134, 46, 49, 50, 51, 52, 53, 54, 62, 68, 69, 55, 56, 57, 61, 48, 60, 63, 59, 70, 47, 58, 64, 65, 66, 67, 71, 72, 73, 74, 75, 135, 136, 137, 76, 77, 78, 8, 138, 139, 79, 140, 141, 5, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 6, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 10, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 7, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263 }
  uselistorder label %dec_label_pc_8053c26, { 1, 0 }
  uselistorder label %dec_label_pc_8053c21, { 1, 0 }
}

define i32 @function_8053c2d(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053c2d:
  %v1_8053c38 = icmp eq i8* %arg1, null
  br i1 %v1_8053c38, label %dec_label_pc_8053cb9, label %dec_label_pc_8053c3c

dec_label_pc_8053c3c:                             ; preds = %dec_label_pc_8053c2d
  %v4_8053c34 = ptrtoint i8* %arg1 to i32
  %v0_8053c4a.pre = load i32, i32* bitcast (i32** @global_var_8055088.85 to i32*), align 8
  br label %dec_label_pc_8053c47

dec_label_pc_8053c47:                             ; preds = %dec_label_pc_8053c3c, %dec_label_pc_8053c90
  %v0_8053c90 = phi i32 [ 0, %dec_label_pc_8053c3c ], [ %v2_8053c96, %dec_label_pc_8053c90 ]
  %v2_8053c93 = phi i32 [ 1, %dec_label_pc_8053c3c ], [ %v3_8053c93, %dec_label_pc_8053c90 ]
  %v0_8053c47 = phi i32 [ %v4_8053c34, %dec_label_pc_8053c3c ], [ %v0_8053c473, %dec_label_pc_8053c90 ]
  %v1_8053c47 = inttoptr i32 %v0_8053c47 to i8*
  %v2_8053c47 = load i8, i8* %v1_8053c47, align 1
  %v3_8053c47 = sext i8 %v2_8053c47 to i32
  %v2_8053c50 = mul nsw i32 %v3_8053c47, 2
  %v3_8053c50 = add i32 %v2_8053c50, %v0_8053c4a.pre
  %v4_8053c50 = inttoptr i32 %v3_8053c50 to i8*
  %v5_8053c50 = load i8, i8* %v4_8053c50, align 1
  %v6_8053c50 = and i8 %v5_8053c50, 8
  %v7_8053c50 = icmp eq i8 %v6_8053c50, 0
  br i1 %v7_8053c50, label %dec_label_pc_8053cb9, label %dec_label_pc_8053c57

dec_label_pc_8053c57:                             ; preds = %dec_label_pc_8053c47
  %v4_8053c6b.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053c6b

dec_label_pc_8053c5b:                             ; preds = %dec_label_pc_8053c6b
  %v3_8053c5b = mul i32 %v1_8053c5b, 10
  %v2_8053c5e = add i32 %v3_8053c5b, -48
  %v3_8053c5e = add i32 %v2_8053c5e, %v2_8053c6d
  %v1_8053c62 = add i32 %v3_8053c5e, -255
  %v6_8053c62 = sub i32 254, %v3_8053c5e
  %v7_8053c62 = and i32 %v6_8053c62, %v3_8053c5e
  %v8_8053c62 = icmp slt i32 %v7_8053c62, 0
  %v9_8053c62 = icmp eq i32 %v1_8053c62, 0
  %v10_8053c62 = icmp slt i32 %v1_8053c62, 0
  %v3_8053c68 = icmp eq i1 %v10_8053c62, %v8_8053c62
  %v4_8053c68 = icmp eq i1 %v9_8053c62, false
  %v5_8053c68 = and i1 %v4_8053c68, %v3_8053c68
  br i1 %v5_8053c68, label %dec_label_pc_8053cb9, label %dec_label_pc_8053c6a

dec_label_pc_8053c6a:                             ; preds = %dec_label_pc_8053c5b
  %v1_8053c6a = add i32 %v0_8053c6a, 1
  br label %dec_label_pc_8053c6b

dec_label_pc_8053c6b:                             ; preds = %dec_label_pc_8053c57, %dec_label_pc_8053c6a
  %v1_8053c5b = phi i32 [ 0, %dec_label_pc_8053c57 ], [ %v3_8053c5e, %dec_label_pc_8053c6a ]
  %v4_8053c6b = phi i32 [ %v4_8053c6b.pre, %dec_label_pc_8053c57 ], [ %v6_8053c6b, %dec_label_pc_8053c6a ]
  %v0_8053c6a = phi i32 [ %v0_8053c47, %dec_label_pc_8053c57 ], [ %v1_8053c6a, %dec_label_pc_8053c6a ]
  %v1_8053c6b = inttoptr i32 %v0_8053c6a to i8*
  %v2_8053c6b = load i8, i8* %v1_8053c6b, align 1
  %v3_8053c6b = zext i8 %v2_8053c6b to i32
  %v5_8053c6b = and i32 %v4_8053c6b, -256
  %v6_8053c6b = or i32 %v3_8053c6b, %v5_8053c6b
  store i32 %v6_8053c6b, i32* @edx, align 4
  %v2_8053c6d = sext i8 %v2_8053c6b to i32
  %v2_8053c70 = mul nsw i32 %v2_8053c6d, 2
  %v3_8053c70 = add i32 %v2_8053c70, %v0_8053c4a.pre
  %v4_8053c70 = inttoptr i32 %v3_8053c70 to i16*
  %v5_8053c70 = load i16, i16* %v4_8053c70, align 2
  %v2_8053c75 = and i16 %v5_8053c70, 8
  %v3_8053c75 = icmp eq i16 %v2_8053c75, 0
  %v1_8053c77 = icmp eq i1 %v3_8053c75, false
  br i1 %v1_8053c77, label %dec_label_pc_8053c5b, label %dec_label_pc_8053c79

dec_label_pc_8053c79:                             ; preds = %dec_label_pc_8053c6b
  %v8_8053c79 = sub nsw i32 2, %v2_8053c93
  %v9_8053c79 = and i32 %v8_8053c79, %v2_8053c93
  %v10_8053c79 = icmp slt i32 %v9_8053c79, 0
  %v11_8053c79 = icmp eq i32 %v2_8053c93, 3
  %v12_8053c79 = icmp slt i32 %v2_8053c93, 3
  %v3_8053c7d = icmp eq i1 %v12_8053c79, %v10_8053c79
  %v4_8053c7d = icmp eq i1 %v11_8053c79, false
  %v5_8053c7d = and i1 %v4_8053c7d, %v3_8053c7d
  br i1 %v5_8053c7d, label %dec_label_pc_8053c87, label %dec_label_pc_8053c7f

dec_label_pc_8053c7f:                             ; preds = %dec_label_pc_8053c79
  %v10_8053c7f = icmp eq i8 %v2_8053c6b, 46
  %v1_8053c82 = icmp eq i1 %v10_8053c7f, false
  br i1 %v1_8053c82, label %dec_label_pc_8053cb9, label %dec_label_pc_8053c84

dec_label_pc_8053c84:                             ; preds = %dec_label_pc_8053c7f
  %v1_8053c84 = add i32 %v0_8053c6a, 1
  br label %dec_label_pc_8053c90

dec_label_pc_8053c87:                             ; preds = %dec_label_pc_8053c79
  %v1_8053c87 = add i32 %v0_8053c6a, 1
  %v4_8053c88 = icmp eq i8 %v2_8053c6b, 0
  br i1 %v4_8053c88, label %dec_label_pc_8053c90, label %dec_label_pc_8053c8c

dec_label_pc_8053c8c:                             ; preds = %dec_label_pc_8053c87
  %v2_8053c8c = and i16 %v5_8053c70, 32
  %v3_8053c8c = icmp eq i16 %v2_8053c8c, 0
  br i1 %v3_8053c8c, label %dec_label_pc_8053cb9, label %dec_label_pc_8053c90

dec_label_pc_8053c90:                             ; preds = %dec_label_pc_8053c8c, %dec_label_pc_8053c87, %dec_label_pc_8053c84
  %v0_8053c473 = phi i32 [ %v1_8053c87, %dec_label_pc_8053c8c ], [ %v1_8053c87, %dec_label_pc_8053c87 ], [ %v1_8053c84, %dec_label_pc_8053c84 ]
  %v2_8053c90 = mul i32 %v0_8053c90, 256
  %v3_8053c93 = add nuw nsw i32 %v2_8053c93, 1
  %v2_8053c96 = or i32 %v1_8053c5b, %v2_8053c90
  %v7_8053c9c = icmp sgt i32 %v2_8053c93, 3
  br i1 %v7_8053c9c, label %dec_label_pc_8053c9e, label %dec_label_pc_8053c47

dec_label_pc_8053c9e:                             ; preds = %dec_label_pc_8053c90
  %v4_8053ca3 = icmp eq i32 %arg2, 0
  br i1 %v4_8053ca3, label %dec_label_pc_8053cbb, label %dec_label_pc_8053caa

dec_label_pc_8053caa:                             ; preds = %dec_label_pc_8053c9e
  %v1_8053cae = call i32 @llvm.bswap.i32(i32 %v2_8053c96)
  %v2_8053cb0 = inttoptr i32 %arg2 to i32*
  store i32 %v1_8053cae, i32* %v2_8053cb0, align 4
  br label %dec_label_pc_8053cbb

dec_label_pc_8053cb9:                             ; preds = %dec_label_pc_8053c8c, %dec_label_pc_8053c7f, %dec_label_pc_8053c47, %dec_label_pc_8053c5b, %dec_label_pc_8053c2d
  br label %dec_label_pc_8053cbb

dec_label_pc_8053cbb:                             ; preds = %dec_label_pc_8053c9e, %dec_label_pc_8053caa, %dec_label_pc_8053cb9
  %v0_8053cc0 = phi i32 [ 1, %dec_label_pc_8053c9e ], [ 1, %dec_label_pc_8053caa ], [ 0, %dec_label_pc_8053cb9 ]
  ret i32 %v0_8053cc0

; uselistorder directives
  uselistorder i32 %v2_8053c6d, { 1, 0 }
  uselistorder i32 %v6_8053c6b, { 1, 0 }
  uselistorder i8 %v2_8053c6b, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8053c6a, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8053c62, { 1, 0 }
  uselistorder i32 %v3_8053c5e, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8053c93, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 16, 17, 2, 3, 0, 4, 5, 18, 14, 6, 7, 9, 8, 15, 10, 11, 12, 13 }
  uselistorder i32 3, { 1, 2, 0, 15, 10, 23, 6, 7, 9, 3, 4, 16, 17, 18, 19, 20, 21, 22, 11, 8, 5, 24, 13, 14, 25, 12 }
  uselistorder i16 0, { 0, 1, 6, 7, 4, 5, 2, 3 }
  uselistorder i32 -256, { 2, 4, 5, 29, 30, 31, 3, 32, 33, 34, 35, 36, 37, 38, 9, 10, 25, 16, 18, 26, 20, 21, 6, 7, 8, 11, 12, 13, 14, 15, 17, 19, 22, 23, 24, 27, 28, 39, 40, 41, 42, 0, 43, 44, 45, 1, 46, 47, 48, 49, 50 }
  uselistorder i32 10, { 1, 8, 7, 5, 11, 3, 0, 10, 9, 6, 4, 2, 12, 13, 14 }
  uselistorder i8 0, { 17, 18, 30, 31, 32, 33, 34, 35, 16, 36, 37, 38, 39, 40, 41, 5, 42, 19, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 2, 57, 58, 59, 60, 20, 24, 25, 26, 22, 23, 21, 27, 0, 28, 29, 6, 7, 61, 62, 3, 64, 65, 63, 66, 67, 68, 69, 4, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 14, 90, 1, 91, 8, 15, 9, 10, 11, 12, 13 }
  uselistorder i32 2, { 37, 39, 40, 1, 61, 15, 62, 16, 34, 0, 22, 31, 23, 32, 24, 33, 2, 3, 4, 38, 5, 6, 7, 17, 18, 63, 8, 9, 20, 10, 25, 19, 21, 28, 26, 27, 13, 12, 43, 44, 58, 48, 42, 47, 49, 46, 50, 51, 52, 53, 54, 55, 41, 45, 56, 57, 11, 35, 30, 29, 14, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 36 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8053cbb, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053cb9, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8053c6b, { 1, 0 }
  uselistorder label %dec_label_pc_8053c47, { 1, 0 }
}

define i32 @function_8053cc1(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053cc1:
  %v0_8053cc4 = call i32 @function_8051647()
  %v0_8053cc9 = load i32, i32* @edx, align 4
  %v4_8053cd0 = call i32 @function_80516d2(i32 %v0_8053cc4, i32 %arg1, i32 %v0_8053cc9, i32 %v0_8053cc9)
  ret i32 %v4_8053cd0

; uselistorder directives
  uselistorder i32* @edx, { 31, 17, 1, 18, 33, 35, 36, 38, 37, 34, 42, 43, 2, 44, 45, 3, 46, 41, 14, 4, 15, 47, 5, 48, 40, 16, 19, 20, 39, 30, 32, 6, 49, 7, 50, 21, 11, 23, 24, 25, 22, 12, 10, 9, 8, 26, 13, 27, 29, 28, 0, 51, 52, 53, 54, 55, 56, 57 }
}

define i32 @function_8053cd9() local_unnamed_addr {
dec_label_pc_8053cd9:
  %v0_8053cd9 = load i32, i32* @eax, align 4
  %v1_8053cd9 = add i32 %v0_8053cd9, 28
  %v2_8053cd9 = inttoptr i32 %v1_8053cd9 to i32*
  %v3_8053cd9 = load i32, i32* %v2_8053cd9, align 4
  store i32 %v3_8053cd9, i32* @global_var_8055798.86, align 8
  %v1_8053ce2 = add i32 %v0_8053cd9, 44
  %v2_8053ce2 = inttoptr i32 %v1_8053ce2 to i32*
  %v3_8053ce2 = load i32, i32* %v2_8053ce2, align 4
  store i32 %v3_8053ce2, i32* @global_var_805579c.87, align 4
  ret i32 %v3_8053ce2

; uselistorder directives
  uselistorder i32 44, { 4, 3, 2, 8, 10, 9, 5, 6, 7, 11, 12, 13, 14, 0, 1 }
  uselistorder i32 28, { 28, 16, 17, 13, 14, 15, 29, 4, 5, 11, 0, 8, 6, 9, 18, 10, 19, 20, 21, 7, 22, 23, 24, 25, 26, 27, 30, 3, 12, 2, 1, 31, 32, 33 }
}

define i32 @function_8053ceb(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053ceb:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053ceb = load i32, i32* @ebx, align 4
  store i32 %v0_8053ceb, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8053cfe = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053cfe, i32* @global_var_8055158.84, align 8
  %v7_8053d09 = icmp ult i32 %v1_8053cfe, %arg1
  %v1_8053d0b = icmp eq i1 %v7_8053d09, false
  br i1 %v1_8053d0b, label %dec_label_pc_8053d1b, label %dec_label_pc_8053d0d

dec_label_pc_8053d0d:                             ; preds = %dec_label_pc_8053ceb
  %v1_8053d0d = call i32 @function_8051afd(i32 %v0_8053ceb)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8053d15 = inttoptr i32 %v1_8053d0d to i32*
  store i32 12, i32* %v1_8053d15, align 4
  %v0_8053d1b.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053d1f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8053d1b

dec_label_pc_8053d1b:                             ; preds = %dec_label_pc_8053ceb, %dec_label_pc_8053d0d
  %v2_8053d1f = phi i32 [ %v0_8053ceb, %dec_label_pc_8053ceb ], [ %v2_8053d1f.pre, %dec_label_pc_8053d0d ]
  %v0_8053d1b = phi i32 [ 0, %dec_label_pc_8053ceb ], [ %v0_8053d1b.pre, %dec_label_pc_8053d0d ]
  store i32 %v2_8053d1f, i32* @ebx, align 4
  ret i32 %v0_8053d1b

; uselistorder directives
  uselistorder i32 %v1_8053cfe, { 1, 0 }
  uselistorder i32 12, { 100, 70, 71, 65, 66, 67, 58, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 59, 60, 61, 62, 63, 64, 116, 134, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 56, 133, 57, 68, 69, 72, 73, 74, 77, 78, 88, 99, 89, 90, 91, 79, 84, 76, 83, 85, 86, 82, 92, 75, 80, 81, 87, 93, 54, 94, 96, 97, 27, 95, 98, 0, 1, 25, 9, 8, 7, 15, 52, 20, 31, 32, 30, 16, 37, 29, 35, 36, 17, 135, 6, 33, 34, 3, 5, 28, 136, 53, 137, 141, 138, 139, 140, 38, 39, 40, 41, 18, 19, 42, 43, 44, 142, 45, 46, 47, 48, 49, 50, 51, 4, 21, 22, 10, 11, 12, 13, 14, 143, 23, 2, 24, 144, 145, 26, 55 }
  uselistorder i32* @global_var_8055158.84, { 1, 0, 2 }
  uselistorder i32 45, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_8053d1b, { 1, 0 }
}

define i32 @function_8053d21() local_unnamed_addr {
dec_label_pc_8053d21:
  %v0_8053d24 = load i32, i32* @eax, align 4
  %v1_8053d26 = sub i32 0, %v0_8053d24
  %v1_8053d28 = call i32 @function_8051afd(i32 ptrtoint (i32* @0 to i32))
  %v2_8053d2d = inttoptr i32 %v1_8053d28 to i32*
  store i32 %v1_8053d26, i32* %v2_8053d2d, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_8051afd, { 31, 30, 3, 27, 26, 50, 2, 25, 51, 24, 23, 22, 1, 46, 45, 52, 21, 20, 19, 17, 16, 15, 49, 4, 12, 5, 48, 47, 44, 43, 42, 41, 11, 14, 13, 40, 10, 39, 38, 37, 18, 29, 36, 35, 28, 33, 9, 8, 7, 34, 32, 6, 0 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11, 12, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 8, 7, 31, 32, 17, 15, 18, 9, 10, 11, 19, 33, 34, 35, 36, 16, 14, 12, 13, 37, 20, 40, 39, 113, 38, 74, 75, 96, 97, 98, 76, 77, 78, 79, 73, 88, 89, 90, 87, 81, 82, 83, 84, 85, 86, 80, 41, 99, 100, 101, 102, 103, 91, 92, 93, 94, 95, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119 }
}

define i32 @function_8053d40() local_unnamed_addr {
dec_label_pc_8053d40:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8053d4c = load i32, i32* @global_var_8055000.71, align 4096
  %v10_8053d51 = icmp eq i32 %v0_8053d4c, -1
  br i1 %v10_8053d51, label %dec_label_pc_8053d62, label %dec_label_pc_8053d56.preheader

dec_label_pc_8053d56.preheader:                   ; preds = %dec_label_pc_8053d40
  br label %dec_label_pc_8053d56

dec_label_pc_8053d56:                             ; preds = %dec_label_pc_8053d56.preheader, %dec_label_pc_8053d56
  %v4_8053d59 = phi i32 [ %v0_8053d4c, %dec_label_pc_8053d56.preheader ], [ %v2_8053d5b, %dec_label_pc_8053d56 ]
  %v0_8053d56 = phi i32 [ ptrtoint (i32* @global_var_8055000.71 to i32), %dec_label_pc_8053d56.preheader ], [ %v1_8053d56, %dec_label_pc_8053d56 ]
  %v1_8053d56 = add i32 %v0_8053d56, -4
  call void @__pseudo_call(i32 %v4_8053d59)
  %v1_8053d5b = inttoptr i32 %v1_8053d56 to i32*
  %v2_8053d5b = load i32, i32* %v1_8053d5b, align 4
  %v10_8053d5d = icmp eq i32 %v2_8053d5b, -1
  %v1_8053d60 = icmp eq i1 %v10_8053d5d, false
  br i1 %v1_8053d60, label %dec_label_pc_8053d56, label %dec_label_pc_8053d62.loopexit

dec_label_pc_8053d62.loopexit:                    ; preds = %dec_label_pc_8053d56
  %v2_8053d62.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8053d62

dec_label_pc_8053d62:                             ; preds = %dec_label_pc_8053d62.loopexit, %dec_label_pc_8053d40
  %v2_8053d62 = phi i32 [ %v2_8053d62.pre, %dec_label_pc_8053d62.loopexit ], [ %tmp6, %dec_label_pc_8053d40 ]
  ret i32 %v2_8053d62

; uselistorder directives
  uselistorder i32 %v0_8053d4c, { 1, 0 }
  uselistorder i1 false, { 93, 94, 37, 38, 40, 39, 95, 96, 97, 42, 43, 98, 101, 102, 103, 104, 105, 107, 10, 108, 109, 106, 100, 99, 25, 110, 111, 112, 1, 114, 115, 0, 116, 117, 118, 119, 3, 120, 121, 122, 123, 2, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 124, 26, 27, 28, 29, 30, 31, 32, 33, 34, 137, 138, 139, 140, 141, 142, 143, 144, 145, 9, 147, 146, 151, 148, 149, 150, 11, 152, 153, 113, 35, 4, 36, 41, 154, 155, 13, 44, 45, 46, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 14, 166, 167, 168, 169, 5, 170, 171, 172, 49, 62, 57, 16, 58, 67, 68, 69, 63, 64, 65, 47, 48, 50, 51, 52, 53, 54, 18, 55, 56, 59, 17, 60, 61, 66, 70, 71, 19, 72, 20, 92, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 86, 89, 87, 88, 90, 173, 174, 175, 176, 177, 6, 179, 180, 181, 178, 182, 183, 184, 185, 186, 187, 7, 188, 189, 190, 191, 15, 192, 193, 194, 195, 196, 197, 198, 22, 21, 199, 23, 200, 201, 202, 203, 8, 24, 12, 204 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 95, 96, 97, 98, 11, 99, 3, 94, 19, 90, 12, 91, 92, 93, 13, 0, 9, 10, 100, 101, 102, 103, 104, 105, 106, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 7, 50, 8, 51, 52, 53, 2, 6, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 4, 5, 82, 83, 84, 85, 86, 87, 88, 1, 89 }
  uselistorder i32 ptrtoint (i32* @global_var_8055000.71 to i32), { 1, 3, 4, 0, 5, 6, 2 }
  uselistorder i32 -1, { 19, 20, 0, 98, 177, 58, 99, 59, 60, 100, 61, 101, 62, 102, 63, 103, 64, 104, 65, 105, 66, 106, 67, 107, 68, 108, 17, 18, 8, 7, 69, 70, 109, 71, 110, 72, 111, 21, 1, 112, 57, 73, 74, 113, 114, 115, 10, 116, 9, 117, 178, 12, 13, 118, 11, 119, 22, 179, 23, 120, 180, 26, 25, 27, 28, 15, 29, 75, 30, 121, 24, 181, 6, 122, 123, 95, 124, 14, 31, 2, 76, 168, 169, 182, 183, 77, 170, 32, 78, 125, 79, 126, 55, 56, 127, 80, 128, 81, 129, 82, 130, 83, 131, 84, 132, 85, 133, 86, 134, 87, 135, 88, 136, 89, 137, 90, 138, 91, 139, 92, 140, 93, 141, 33, 142, 143, 3, 4, 5, 144, 34, 94, 184, 96, 35, 145, 173, 52, 146, 174, 171, 39, 147, 148, 175, 36, 149, 150, 151, 152, 153, 172, 154, 155, 156, 157, 158, 159, 160, 38, 54, 161, 162, 163, 37, 53, 164, 165, 166, 40, 167, 176, 16, 41, 185, 186, 187, 42, 188, 189, 48, 43, 190, 44, 45, 46, 47, 191, 49, 192, 50, 51, 193, 194, 97 }
  uselistorder i32 1, { 222, 223, 63, 136, 137, 336, 337, 338, 339, 138, 375, 224, 59, 58, 60, 225, 57, 56, 55, 226, 54, 227, 53, 228, 62, 229, 29, 230, 23, 231, 105, 232, 38, 233, 107, 234, 106, 235, 108, 236, 237, 27, 26, 28, 155, 52, 239, 238, 240, 25, 241, 3, 243, 242, 73, 244, 248, 247, 246, 245, 24, 376, 377, 378, 250, 249, 42, 41, 139, 251, 254, 253, 252, 109, 140, 214, 330, 125, 260, 259, 258, 257, 256, 255, 90, 89, 156, 261, 215, 264, 263, 262, 83, 157, 380, 381, 382, 265, 39, 40, 383, 384, 141, 385, 386, 387, 45, 43, 44, 216, 379, 158, 84, 85, 86, 87, 159, 142, 332, 333, 334, 335, 268, 267, 266, 48, 47, 46, 49, 160, 269, 50, 51, 162, 388, 389, 390, 391, 392, 393, 394, 395, 396, 161, 397, 398, 399, 400, 401, 143, 402, 403, 111, 144, 404, 405, 406, 407, 145, 146, 408, 409, 410, 272, 271, 270, 64, 65, 66, 68, 67, 147, 148, 273, 149, 150, 163, 277, 276, 275, 274, 88, 164, 217, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 340, 341, 291, 37, 36, 35, 292, 293, 165, 166, 294, 295, 151, 297, 296, 76, 167, 298, 299, 61, 300, 91, 301, 21, 302, 81, 303, 79, 304, 34, 305, 22, 306, 69, 20, 308, 307, 72, 309, 75, 310, 104, 312, 311, 110, 313, 103, 314, 74, 315, 71, 70, 411, 412, 413, 414, 213, 316, 101, 97, 99, 98, 100, 102, 415, 416, 112, 113, 417, 418, 0, 419, 420, 421, 422, 423, 168, 424, 169, 425, 318, 317, 80, 426, 152, 205, 427, 428, 153, 429, 430, 170, 431, 115, 77, 78, 432, 433, 434, 319, 5, 6, 4, 7, 435, 436, 219, 8, 10, 9, 12, 11, 437, 220, 30, 32, 31, 33, 344, 345, 346, 347, 348, 349, 358, 359, 171, 360, 361, 187, 188, 175, 355, 181, 343, 177, 354, 173, 356, 183, 353, 362, 185, 342, 186, 182, 350, 351, 179, 352, 180, 184, 178, 176, 174, 172, 357, 363, 189, 364, 365, 374, 366, 367, 368, 369, 372, 190, 373, 93, 95, 94, 92, 96, 370, 371, 218, 321, 320, 82, 1, 206, 2, 126, 127, 438, 439, 440, 441, 442, 116, 117, 443, 444, 445, 446, 447, 194, 119, 120, 193, 121, 197, 122, 448, 449, 195, 123, 124, 196, 450, 118, 114, 451, 452, 453, 454, 455, 207, 128, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 201, 135, 134, 466, 208, 129, 467, 468, 469, 470, 471, 198, 472, 473, 199, 474, 209, 130, 475, 210, 131, 476, 477, 211, 132, 478, 479, 212, 133, 480, 481, 482, 483, 484, 200, 485, 487, 488, 486, 202, 489, 490, 491, 492, 191, 192, 493, 494, 495, 496, 203, 331, 204, 497, 154, 328, 327, 326, 325, 324, 323, 322, 221, 18, 15, 17, 14, 19, 13, 16, 329 }
  uselistorder label %dec_label_pc_8053d56, { 1, 0 }
}

define i32 @function_8053d66() local_unnamed_addr {
entry:
  %v0_8053d69 = load i32, i32* @ebx, align 4
  %v1_8053d6a = call i32 @function_80480b0(i32 %v0_8053d69)
  store i32 %v1_8053d6a, i32* @eax, align 4
  %v0_8053d75 = call i32 @function_80480c0()
  ret i32 %v0_8053d75

; uselistorder directives
  uselistorder i32* @eax, { 7, 32, 33, 35, 36, 37, 38, 40, 10, 41, 0, 39, 4, 6, 34, 42, 44, 45, 43, 17, 18, 46, 52, 47, 48, 50, 51, 49, 1, 19, 20, 8, 2, 9, 11, 22, 23, 21, 27, 28, 29, 24, 25, 26, 53, 12, 13, 14, 54, 55, 56, 57, 58, 15, 16, 59, 30, 31, 3, 5 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 387, 47, 205, 48, 267, 268, 49, 269, 270, 271, 50, 108, 109, 280, 281, 51, 273, 390, 391, 392, 125, 393, 394, 395, 256, 274, 275, 396, 254, 253, 397, 398, 399, 255, 276, 277, 282, 283, 251, 400, 401, 402, 52, 403, 408, 409, 8, 53, 206, 9, 207, 208, 411, 412, 102, 413, 54, 192, 55, 126, 127, 0, 404, 405, 406, 56, 252, 200, 57, 209, 414, 1, 110, 111, 58, 415, 416, 59, 60, 418, 417, 23, 24, 419, 422, 128, 193, 423, 425, 424, 21, 22, 426, 407, 61, 427, 27, 194, 62, 112, 429, 432, 431, 25, 26, 435, 436, 437, 438, 439, 113, 440, 441, 442, 129, 433, 130, 434, 131, 210, 257, 44, 258, 114, 211, 259, 443, 444, 445, 446, 447, 448, 449, 450, 451, 115, 116, 452, 212, 464, 213, 214, 132, 195, 215, 133, 196, 63, 216, 453, 454, 64, 65, 134, 197, 46, 455, 456, 457, 66, 67, 135, 198, 45, 458, 103, 459, 37, 460, 461, 463, 217, 462, 2, 430, 420, 421, 260, 261, 263, 262, 28, 29, 3, 117, 264, 265, 266, 272, 278, 279, 218, 219, 284, 285, 286, 287, 288, 289, 290, 291, 220, 292, 465, 428, 293, 466, 294, 295, 296, 410, 118, 388, 297, 298, 389, 302, 467, 468, 469, 221, 470, 6, 68, 222, 471, 136, 472, 473, 119, 474, 10, 30, 38, 11, 39, 12, 475, 4, 31, 40, 13, 41, 14, 70, 69, 42, 15, 71, 72, 299, 202, 476, 477, 478, 479, 480, 481, 75, 74, 73, 482, 124, 77, 76, 78, 223, 483, 224, 225, 7, 79, 226, 43, 16, 80, 227, 81, 228, 229, 230, 303, 304, 305, 307, 308, 325, 375, 326, 83, 231, 327, 84, 232, 328, 329, 330, 331, 309, 233, 234, 332, 333, 317, 323, 324, 300, 301, 318, 319, 320, 310, 311, 312, 313, 314, 315, 316, 321, 322, 17, 105, 106, 101, 235, 82, 236, 334, 104, 335, 336, 85, 372, 373, 374, 237, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 203, 238, 349, 239, 86, 240, 352, 353, 354, 355, 356, 120, 121, 357, 358, 359, 241, 306, 367, 368, 369, 370, 360, 361, 362, 366, 371, 87, 122, 350, 351, 88, 199, 89, 363, 364, 365, 18, 90, 204, 19, 137, 91, 92, 376, 377, 378, 379, 380, 381, 484, 485, 382, 383, 486, 487, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 488, 489, 490, 491, 492, 493, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 35, 549, 550, 551, 552, 553, 554, 555, 93, 242, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 243, 594, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 94, 244, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 138, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 95, 245, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 96, 246, 719, 720, 201, 721, 722, 247, 723, 724, 725, 97, 248, 726, 36, 727, 20, 32, 33, 34, 728, 729, 730, 731, 732, 733, 734, 735, 123, 98, 99, 249, 5, 384, 385, 386, 100, 250, 107, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 736, 737, 738, 739, 740, 741, 742, 743 }
  uselistorder i32* @ebx, { 17, 164, 165, 68, 69, 42, 170, 1, 171, 172, 173, 174, 20, 21, 175, 19, 176, 177, 178, 179, 180, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 2, 71, 72, 73, 18, 181, 182, 183, 184, 185, 186, 187, 188, 189, 15, 16, 198, 199, 200, 201, 13, 3, 12, 192, 195, 196, 197, 190, 202, 203, 204, 205, 206, 207, 208, 209, 191, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 4, 231, 232, 217, 218, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 5, 33, 34, 35, 36, 37, 38, 39, 233, 259, 260, 261, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 14, 244, 245, 246, 247, 248, 6, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 212, 213, 40, 41, 61, 62, 63, 64, 65, 66, 67, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 262, 263, 210, 211, 91, 264, 265, 92, 93, 94, 193, 194, 166, 167, 95, 96, 168, 169, 100, 101, 266, 267, 268, 269, 270, 97, 271, 272, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 132, 8, 133, 134, 135, 136, 112, 120, 121, 116, 99, 115, 117, 114, 122, 123, 124, 98, 125, 113, 118, 119, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 152, 153, 154, 7, 155, 143, 144, 145, 146, 147, 148, 149, 150, 151, 273, 274, 275, 156, 157, 158, 159, 276, 277, 278, 279, 9, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 280, 281, 282, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 0, 312, 313, 314, 315, 316, 11, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 10, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 160, 161, 162, 163 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
