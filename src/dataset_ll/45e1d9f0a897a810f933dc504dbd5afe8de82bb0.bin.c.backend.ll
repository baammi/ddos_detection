source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208007257
@global_var_1001c154.3 = global i32 0
@global_var_1001c164.4 = local_unnamed_addr global i32* @global_var_1001c154.3
@global_var_1001c340.6 = global i32 0
@global_var_10000314.7 = constant i32 1207996189
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001c2cc.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_1001c2d0.14 = local_unnamed_addr global i32 0
@global_var_10000f54.15 = constant [3 x i8] c"8~\00"
@global_var_10000f64.16 = constant [3 x i8] c"8~\00"
@global_var_10000f74.17 = constant [3 x i8] c"8~\00"
@global_var_100016f0.18 = constant i32 939524096
@global_var_10001c14.19 = constant [3 x i8] c"8`\00"
@global_var_1000225c.20 = constant [3 x i8] c"8`\00"
@global_var_10002f10.21 = constant i32 939524104
@global_var_10002f40.22 = constant i32 939524096
@global_var_10003240.23 = constant i32 939524096
@global_var_10003f14.24 = constant [3 x i8] c"8`\00"
@global_var_10004004.25 = constant [3 x i8] c"9!\00"
@global_var_1001c2dc.26 = local_unnamed_addr global i32 0
@global_var_100045c8.27 = constant [3 x i8] c"8`\00"
@global_var_100045d0.28 = constant [3 x i8] c"8`\00"
@global_var_100045d8.29 = constant [3 x i8] c"8`\00"
@global_var_100046d8.30 = constant [3 x i8] c"9@\00"
@global_var_1000bb88.31 = constant i32 788529152
@global_var_10004a20.32 = constant [3 x i8] c"8`\00"
@global_var_10004a28.33 = constant [3 x i8] c"8`\00"
@global_var_10004a30.34 = constant [3 x i8] c"8`\00"
@global_var_10004a38.35 = constant [3 x i8] c"8`\00"
@global_var_10004aa4.36 = constant [3 x i8] c"8`\00"
@global_var_10004aac.37 = constant [3 x i8] c"8`\00"
@global_var_10004ab4.38 = constant [3 x i8] c"8`\00"
@global_var_10004bf8.39 = constant i32 939572197
@global_var_10004c3c.40 = constant i32 939526087
@global_var_10004c78.41 = constant [3 x i8] c"8`\00"
@global_var_10004c84.42 = constant i32 939576965
@global_var_10004cc0.43 = constant [3 x i8] c"8`\00"
@global_var_10004ccc.44 = constant i32 939577509
@global_var_10004d08.45 = constant [3 x i8] c"8`\00"
@global_var_10004d10.46 = constant i32 939524118
@global_var_10004d4c.47 = constant [3 x i8] c"8`\00"
@global_var_10004d54.48 = constant i32 939524119
@global_var_10004d90.49 = constant [3 x i8] c"8`\00"
@global_var_1001c2d4.50 = local_unnamed_addr global i32 0
@global_var_1001c2d8.51 = local_unnamed_addr global i32 0
@global_var_10004dc4.52 = constant [3 x i8] c"8`\00"
@global_var_10004e40.53 = constant [3 x i8] c"8`\00"
@global_var_10004e48.54 = constant [3 x i8] c"8`\00"
@global_var_10004eac.55 = constant i32 1207977977
@global_var_10004f48.56 = constant [3 x i8] c"8`\00"
@global_var_10004fd8.57 = constant [3 x i8] c"8`\00"
@global_var_10004fe0.58 = constant [3 x i8] c"8`\00"
@global_var_10005050.59 = constant [3 x i8] c"8`\00"
@global_var_10005058.60 = constant i32 1207976337
@global_var_10005108.61 = constant [3 x i8] c"8`\00"
@global_var_10005110.62 = constant [3 x i8] c"8`\00"
@global_var_10005118.63 = constant [3 x i8] c"8`\00"
@global_var_10005120.64 = constant [3 x i8] c"8`\00"
@global_var_10005128.65 = constant [3 x i8] c"8`\00"
@global_var_1000534c.66 = constant [3 x i8] c"8`\00"
@global_var_10005354.67 = constant [3 x i8] c"8`\00"
@global_var_1000535c.68 = constant [3 x i8] c"8`\00"
@global_var_10005364.69 = constant [3 x i8] c"8`\00"
@global_var_1000536c.70 = constant [3 x i8] c"8`\00"
@global_var_100053a4.71 = constant [3 x i8] c"8`\00"
@global_var_10005408.72 = constant [3 x i8] c"8`\00"
@global_var_10005410.73 = constant [3 x i8] c"8`\00"
@global_var_10005418.74 = constant [3 x i8] c"8`\00"
@global_var_10005420.75 = constant [3 x i8] c"8`\00"
@global_var_10005428.76 = constant [3 x i8] c"8`\00"
@global_var_1001c2b0.77 = local_unnamed_addr global i32 268471452
@global_var_1001c2a8.78 = local_unnamed_addr global i32 -1
@global_var_100055e0.80 = constant [3 x i8] c"8`\00"
@global_var_100055f0.81 = constant [3 x i8] c"8`\00"
@global_var_10005668.82 = constant i32 1207962709
@global_var_1001c3a8.83 = global i32 0
@global_var_1001c3ac.84 = local_unnamed_addr global i32 0
@global_var_100056b8.85 = constant [3 x i8] c"8`\00"
@global_var_100056c0.86 = constant [3 x i8] c"8`\00"
@global_var_1001c3aa.87 = local_unnamed_addr global i32 0
@global_var_1001c2e0.88 = local_unnamed_addr global i32 0
@global_var_10005748.89 = constant [3 x i8] c"8`\00"
@global_var_100057a4.90 = constant [3 x i8] c"8`\00"
@global_var_100057dc.91 = constant [3 x i8] c"8`\00"
@global_var_100057e4.92 = constant [3 x i8] c"8`\00"
@global_var_100058a0.93 = constant i32 1207972861
@global_var_100058dc.94 = constant i32 1207961357
@global_var_100058f8.95 = constant [3 x i8] c";a\00"
@global_var_1000595c.96 = constant i32 1207961149
@global_var_100059b0.97 = constant [3 x i8] c"8`\00"
@global_var_1000bb8c.98 = constant i32 167772160
@global_var_100059e8.99 = constant [3 x i8] c"8`\00"
@global_var_100059fc.100 = constant i32 1207973797
@global_var_10005a9c.101 = constant [3 x i8] c":`\00"
@global_var_10005aac.102 = constant [3 x i8] c"8`\00"
@global_var_10005ab4.103 = constant [3 x i8] c"8`\00"
@global_var_1001c2ac.104 = local_unnamed_addr global i32 -1
@global_var_10005c74.106 = constant i32 939589631
@global_var_10005d2c.107 = constant i32 939589631
@global_var_10005e00.108 = constant i32 939589631
@global_var_10005e0c.109 = constant i32 1006685388
@global_var_10005e44.110 = constant i32 1207962005
@global_var_10005e4c.111 = constant [3 x i8] c"|q\00"
@global_var_1000bb90.112 = constant i32 1
@global_var_10005ef4.113 = constant i32 939589631
@global_var_1001c364.114 = local_unnamed_addr global i32 0
@global_var_1001c358.115 = local_unnamed_addr global i32 0
@global_var_1001c360.116 = local_unnamed_addr global i32 0
@global_var_1001c35c.117 = local_unnamed_addr global i32 0
@global_var_10006328.118 = constant [3 x i8] c"9A\00"
@global_var_100063ac.119 = constant i32 939524096
@global_var_100063e0.120 = constant i32 1006665728
@global_var_1000640c.121 = constant i32 939524098
@global_var_10006454.122 = constant [3 x i8] c"8`\00"
@global_var_100064c8.123 = constant i32 939524128
@global_var_10006574.124 = constant [3 x i8] c"8c\00"
@global_var_1001c300.125 = local_unnamed_addr global i32 0
@global_var_1001c2f4.126 = local_unnamed_addr global i32 0
@global_var_1001c2e8.127 = local_unnamed_addr global i32 0
@global_var_1001c2ec.128 = local_unnamed_addr global i32 0
@global_var_10006b84.130 = constant [3 x i8] c"8`\00"
@global_var_10006ba0.131 = constant i32 939524096
@global_var_1001c2f8.132 = local_unnamed_addr global i32 0
@global_var_1001c2fc.133 = local_unnamed_addr global i32 0
@global_var_1001c368.134 = global i32 0
@global_var_1001c37c.135 = global i32 0
@global_var_1000bc20.136 = constant i32 0
@global_var_1001c36a.137 = local_unnamed_addr global i32 0
@global_var_1001c388.138 = local_unnamed_addr global i32 0
@global_var_1001c370.139 = local_unnamed_addr global i32 0
@global_var_1001c371.140 = local_unnamed_addr global i32 0
@global_var_1001c36c.141 = local_unnamed_addr global i32 0
@global_var_1000bc1c.142 = constant [5 x i8] c"&;; \00"
@global_var_1000bbac.144 = constant [8 x i8] c"0125!8 \00"
@global_var_1001c38a.145 = local_unnamed_addr global i32 0
@global_var_1000bb98.146 = constant [5 x i8] c"5:?;\00"
@global_var_1000bba0.147 = constant [9 x i8] c"<!: acam\00"
@global_var_1000bbc0.148 = constant [6 x i8] c"509=:\00"
@global_var_1000bbb4.149 = constant [9 x i8] c"$5''#;&0\00"
@global_var_1000bbc8.150 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000bbd0.151 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000bbd8.152 = constant i32 1663122969
@global_var_1000bbe8.153 = constant [6 x i8] c"efg`a\00"
@global_var_1000bbf0.154 = constant [5 x i8] c"!'1&\00"
@global_var_1000bbf8.155 = constant i32 455883832
@global_var_1000bc04.156 = constant i32 124138003
@global_var_1000bc10.157 = constant [5 x i8] c"efg`\00"
@global_var_1001c374.158 = local_unnamed_addr global i32 0
@global_var_1001c378.159 = local_unnamed_addr global i32 0
@global_var_1001c372.160 = local_unnamed_addr global i32 0
@global_var_1001c38c.161 = local_unnamed_addr global i32 0
@global_var_1001c380.162 = local_unnamed_addr global i32 0
@global_var_10007478.164 = constant [3 x i8] c"8`\00"
@global_var_1000bc24.165 = constant i32 -18200
@global_var_1001c3b8.187 = global i32 0
@global_var_1001c2b4.188 = local_unnamed_addr global i32 -555811921
@global_var_1000bc60.189 = constant i32 1421606912
@global_var_1001c3c0.190 = local_unnamed_addr global i32 0
@global_var_1000bc64.191 = constant [17 x i8] c"&;; '1:$5=z'= 1T\00"
@global_var_1001c3c4.192 = local_unnamed_addr global i32 0
@global_var_10008460.193 = constant [3 x i8] c"8`\00"
@global_var_1001c3c8.194 = local_unnamed_addr global i32 0
@global_var_1001c3cc.195 = local_unnamed_addr global i32 0
@global_var_10008480.196 = constant [3 x i8] c"8`\00"
@global_var_1001c3d0.197 = local_unnamed_addr global i32 0
@global_var_1001c3d4.198 = local_unnamed_addr global i32 0
@global_var_1000bc78.199 = constant i32 -293666816
@global_var_100084a4.200 = constant [3 x i8] c"8`\00"
@global_var_1001c3d8.201 = local_unnamed_addr global i32 0
@global_var_1001c3dc.202 = local_unnamed_addr global i32 0
@global_var_1000bc7c.203 = constant [28 x i8] c"-;!&t <1t9;' t35-t7!: t;! T\00"
@global_var_100084cc.204 = constant i32 939524123
@global_var_1001c3e4.205 = local_unnamed_addr global i32 0
@global_var_1001c3e0.206 = local_unnamed_addr global i32 0
@global_var_1000bc98.207 = constant [7 x i8] c"'<188T\00"
@global_var_100084f4.208 = constant [3 x i8] c"8`\00"
@global_var_1001c3e8.209 = local_unnamed_addr global i32 0
@global_var_1001c3ec.210 = local_unnamed_addr global i32 0
@global_var_1000bca0.211 = constant [8 x i8] c"1:5681T\00"
@global_var_1000851c.212 = constant [3 x i8] c"8`\00"
@global_var_1001c3f0.213 = local_unnamed_addr global i32 0
@global_var_1001c3f4.214 = local_unnamed_addr global i32 0
@global_var_1000bca8.215 = constant [8 x i8] c"'-' 19T\00"
@global_var_10008544.216 = constant [3 x i8] c"8`\00"
@global_var_1001c3f8.217 = local_unnamed_addr global i32 0
@global_var_1001c3fc.218 = local_unnamed_addr global i32 0
@global_var_1000bcb0.219 = constant [4 x i8] c"'<T\00"
@global_var_10008568.220 = constant i32 939524099
@global_var_1001c404.221 = local_unnamed_addr global i32 0
@global_var_1001c400.222 = local_unnamed_addr global i32 0
@global_var_1000bcb4.223 = constant i32 2067152186
@global_var_10008590.224 = constant [3 x i8] c"8`\00"
@global_var_1001c408.225 = local_unnamed_addr global i32 0
@global_var_1001c40c.226 = local_unnamed_addr global i32 0
@global_var_1000bcc8.227 = constant i32 421337862
@global_var_100085b4.228 = constant i32 939524120
@global_var_1001c414.229 = local_unnamed_addr global i32 0
@global_var_1001c410.230 = local_unnamed_addr global i32 0
@global_var_1000bce4.231 = constant [10 x i8] c":7;&&17 T\00"
@global_var_100085dc.232 = constant i32 939524105
@global_var_1001c41c.233 = local_unnamed_addr global i32 0
@global_var_1001c418.234 = local_unnamed_addr global i32 0
@global_var_1000bcf0.235 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_10008604.236 = constant [3 x i8] c"8`\00"
@global_var_1001c420.237 = local_unnamed_addr global i32 0
@global_var_1001c424.238 = local_unnamed_addr global i32 0
@global_var_1000bd04.239 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_10008628.240 = constant i32 939524118
@global_var_1001c42c.241 = local_unnamed_addr global i32 0
@global_var_1001c428.242 = local_unnamed_addr global i32 0
@global_var_1000bd1c.243 = constant [8 x i8] c"{$&;7{T\00"
@global_var_10008650.244 = constant [3 x i8] c"8`\00"
@global_var_1001c430.245 = local_unnamed_addr global i32 0
@global_var_1001c434.246 = local_unnamed_addr global i32 0
@global_var_1000bd24.247 = constant [6 x i8] c"{1,1T\00"
@global_var_10008674.248 = constant [3 x i8] c"8`\00"
@global_var_1001c438.249 = local_unnamed_addr global i32 0
@global_var_1001c43c.250 = local_unnamed_addr global i32 0
@global_var_1000bd2c.251 = constant [5 x i8] c"{20T\00"
@global_var_10008698.252 = constant i32 939524100
@global_var_1001c444.253 = local_unnamed_addr global i32 0
@global_var_1001c440.254 = local_unnamed_addr global i32 0
@global_var_1000bd34.255 = constant [7 x i8] c"{95$'T\00"
@global_var_100086c0.256 = constant [3 x i8] c"8`\00"
@global_var_1001c448.257 = local_unnamed_addr global i32 0
@global_var_1001c44c.258 = local_unnamed_addr global i32 0
@global_var_1000bd3c.259 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_100086e4.260 = constant [3 x i8] c"8`\00"
@global_var_1001c450.261 = local_unnamed_addr global i32 0
@global_var_1001c454.262 = local_unnamed_addr global i32 0
@global_var_1000bd4c.263 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_10008708.264 = constant [3 x i8] c"8`\00"
@global_var_1001c4c8.265 = local_unnamed_addr global i32 0
@global_var_1001c4cc.266 = local_unnamed_addr global i32 0
@global_var_1000bd58.267 = constant [8 x i8] c"z5:=91T\00"
@global_var_1000872c.268 = constant [3 x i8] c"8`\00"
@global_var_1001c4d0.269 = local_unnamed_addr global i32 0
@global_var_1001c4d4.270 = local_unnamed_addr global i32 0
@global_var_1000bd60.271 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_10008750.272 = constant [3 x i8] c"8`\00"
@global_var_1001c458.273 = local_unnamed_addr global i32 0
@global_var_1001c45c.274 = local_unnamed_addr global i32 0
@global_var_1000bd74.275 = constant [24 x i8] c"3e567`09;ga<:$f8=1d?>2T\00"
@global_var_10008778.276 = constant [3 x i8] c"8`\00"
@global_var_1001c460.277 = local_unnamed_addr global i32 0
@global_var_1001c464.278 = local_unnamed_addr global i32 0
@global_var_1000bd8c.279 = constant [9 x i8] c"5''#;&0T\00"
@global_var_1000bd98.280 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_100087a4.281 = constant [3 x i8] c"8`\00"
@global_var_1001c468.282 = local_unnamed_addr global i32 0
@global_var_1001c46c.283 = local_unnamed_addr global i32 0
@global_var_1000bda8.284 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_100087c8.285 = constant [3 x i8] c"8`\00"
@global_var_1001c470.286 = local_unnamed_addr global i32 0
@global_var_1001c474.287 = local_unnamed_addr global i32 0
@global_var_100087e8.288 = constant [3 x i8] c"8`\00"
@global_var_1001c478.289 = local_unnamed_addr global i32 0
@global_var_1001c47c.290 = local_unnamed_addr global i32 0
@global_var_1000bdbc.291 = constant [11 x i8] c"0\22&<18$1&T\00"
@global_var_1000880c.292 = constant i32 939524106
@global_var_1001c4dc.293 = local_unnamed_addr global i32 0
@global_var_1001c4d8.294 = local_unnamed_addr global i32 0
@global_var_1000be20.295 = constant i32 473889
@global_var_10008834.296 = constant i32 939524117
@global_var_1001c484.297 = local_unnamed_addr global i32 0
@global_var_1001c480.298 = local_unnamed_addr global i32 0
@global_var_1000bdc8.299 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_1000885c.300 = constant i32 939524113
@global_var_1001c48c.301 = local_unnamed_addr global i32 0
@global_var_1001c488.302 = local_unnamed_addr global i32 0
@global_var_1000bddc.303 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10008884.304 = constant i32 939524108
@global_var_1001c494.305 = local_unnamed_addr global i32 0
@global_var_1001c490.306 = local_unnamed_addr global i32 0
@global_var_100088a8.307 = constant [3 x i8] c"8`\00"
@global_var_1001c498.308 = local_unnamed_addr global i32 0
@global_var_1001c49c.309 = local_unnamed_addr global i32 0
@global_var_100088c8.310 = constant [3 x i8] c"8`\00"
@global_var_1001c4a0.311 = local_unnamed_addr global i32 0
@global_var_1001c4a4.312 = local_unnamed_addr global i32 0
@global_var_1000bdec.313 = constant [9 x i8] c"$662*7!E\00"
@global_var_100088ec.314 = constant [3 x i8] c"8`\00"
@global_var_1001c4a8.315 = local_unnamed_addr global i32 0
@global_var_1001c4ac.316 = local_unnamed_addr global i32 0
@global_var_1000bdf8.317 = constant [6 x i8] c";3=:T\00"
@global_var_10008910.318 = constant [3 x i8] c"8`\00"
@global_var_1001c4b0.319 = local_unnamed_addr global i32 0
@global_var_1001c4b4.320 = local_unnamed_addr global i32 0
@global_var_1000be00.321 = constant [7 x i8] c"1: 1&T\00"
@global_var_10008934.322 = constant [3 x i8] c"8`\00"
@global_var_1001c4b8.323 = local_unnamed_addr global i32 0
@global_var_1001c4bc.324 = local_unnamed_addr global i32 0
@global_var_1000be08.325 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_1001c4c4.326 = local_unnamed_addr global i32 0
@global_var_1001c4c0.327 = local_unnamed_addr global i32 0
@global_var_10008cc0.328 = constant i32 939524096
@global_var_10009008.329 = constant i32 1207959564
@global_var_100094e4.330 = constant i32 939524118
@global_var_1000ac08.331 = constant [3 x i8] c"8`\00"
@global_var_1000963c.332 = constant i32 939524105
@global_var_10009658.333 = constant i32 939589631
@global_var_10009780.334 = constant i32 1207959797
@global_var_10009784.335 = constant i32 939524108
@global_var_1001c324.336 = global i32 0
@global_var_10009efc.337 = constant i32 939524118
@global_var_10009f84.338 = constant i32 939524118
@global_var_1001c4e0.339 = global i32 0
@global_var_1001c390.340 = global i32 0
@global_var_1001c2b8 = external global i32
@global_var_1000bf44.342 = constant i32 33554944
@global_var_1001c314.343 = local_unnamed_addr global i32 0
@global_var_1001c560.344 = global i32 0
@global_var_1000a1e0.345 = constant i32 939524108
@global_var_1000a234.346 = constant i32 939524108
@global_var_1000a2e8.347 = constant [3 x i8] c"8`\00"
@global_var_1000a394.348 = constant [3 x i8] c"8`\00"
@global_var_1000a6bc.349 = constant i32 1207959640
@global_var_1000a6f8.350 = constant i32 1207959580
@global_var_1001c2c4.351 = local_unnamed_addr global i32* @global_var_1000bf44.342
@global_var_1000a8ec.352 = constant i32 939524130
@global_var_1001c278.353 = global i32 0
@global_var_1001c308.354 = local_unnamed_addr global i32 0
@global_var_1000a980.355 = constant i32 1207960053
@global_var_1000a984.356 = constant [3 x i8] c"= \00"
@global_var_1001c148.357 = global i32 -1
@global_var_1001c318.358 = local_unnamed_addr global i32 0
@global_var_1001c31c.359 = local_unnamed_addr global i32 0
@global_var_1000be38.360 = constant [10 x i8] c"/dev/null\00"
@global_var_1001c320.361 = local_unnamed_addr global i32 0
@global_var_1001c30c.363 = local_unnamed_addr global i32 0
@global_var_1001c310.364 = local_unnamed_addr global i32 0
@global_var_1000af20.365 = constant i32 939524096
@global_var_1000b1ac.367 = constant i32 939524118
@global_var_1000b3a8.368 = constant i32 939589631
@global_var_1001c338.369 = local_unnamed_addr global i32 0
@global_var_1001c290.370 = global i32 0
@global_var_1000b8cc.371 = constant i32 939524129
@global_var_1001c32c.372 = local_unnamed_addr global i32 0
@global_var_1000b940.373 = constant [3 x i8] c"8`\00"
@global_var_1000b978.374 = constant i32 939524129
@global_var_1001c330.375 = local_unnamed_addr global i32 0
@global_var_1001c334.376 = local_unnamed_addr global i32 0
@global_var_1001c14c.377 = global i32 0
@global_var_1001c33c.2 = local_unnamed_addr global i8 0
@global_var_1001c2c8.9 = local_unnamed_addr global i8 0
@global_var_1001c2c9.13 = global i8 0
@global_var_1001c168.79 = local_unnamed_addr global i8 1
@global_var_1001c2e4.105 = local_unnamed_addr global i16 0
@global_var_1001c2f0.129 = global i16 0
@global_var_1001c37e.143 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000bafc(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001c33c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001c164.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001c164.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001c164.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001c33c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001c33c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268550488 to i32*), align 8
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268550488
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000acf4(i32 268457964, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268483432, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_100091a0()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_100091a0()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_1000a9a0(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_10009230()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_10009278(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_1000a91c()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001c2c8.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001c2cc.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003cc = load i32, i32* @r26, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %v0_100003d8 = load i32, i32* @r29, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003cc, i32* @r26, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003d8, i32* @r29, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_1000a204(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_1000a204(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_1000a204(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_10008a1c(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_10009874()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_1000a274()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_1000a274()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_1000a274()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 2, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 3, 1, 2, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_10009c0c(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10008ac0(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_1000a204(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268448928, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_1000a374(i32 %v3_1000076c, i32 %v1_1000077c, i32 268448928)
  %v3_10000784 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001c2cc.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001c2c8.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_1000a204(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268450172, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_1000a374(i32 %v3_100007c0, i32 %v1_100007d0, i32 268450172)
  %v3_100007d8 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001c2cc.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001c2c8.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_1000a204(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268451164, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_1000a374(i32 %v3_10000814, i32 %v1_10000824, i32 268451164)
  %v3_1000082c = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001c2cc.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001c2c8.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_1000a204(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268448104, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_1000a374(i32 %v3_10000868, i32 %v1_10000878, i32 268448104)
  %v3_10000880 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001c2cc.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001c2c8.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_1000a204(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268446660, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_1000a374(i32 %v3_100008bc, i32 %v1_100008cc, i32 268446660)
  %v3_100008d4 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001c2cc.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001c2c8.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_1000a204(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268445152, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_1000a374(i32 %v3_10000910, i32 %v1_10000920, i32 268445152)
  %v3_10000928 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001c2cc.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001c2c8.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_1000a204(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268443544, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_1000a374(i32 %v3_10000964, i32 %v1_10000974, i32 268443544)
  %v3_1000097c = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001c2cc.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001c2c8.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_1000a204(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268441936, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_1000a374(i32 %v3_100009b8, i32 %v1_100009c8, i32 268441936)
  %v3_100009d0 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001c2cc.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001c2c8.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_1000a204(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268439748, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_1000a374(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268439748)
  %v3_10000a24 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001c2cc.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001c2c8.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_1000a204(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268438276, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_1000a374(i32 %v3_10000a60, i32 %v1_10000a70, i32 268438276)
  %v3_10000a78 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001c2c8.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001c2cc.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_1000a204(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001c2cc.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268441112, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_1000a374(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268441112)
  %v3_10000acc = load i8, i8* @global_var_1001c2c8.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001c2cc.10, align 4
  store i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001c2c8.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001c2c9.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c2c8.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10000b08 = load i32, i32* @lr, align 4
  store i32 %v0_10000b08, i32* %r0.global-to-local, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b1c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000b0c, i32* %r18.global-to-local, align 4
  %v0_10000b50 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b58 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10000b60 = load i32, i32* @r30, align 4
  %v0_10000b64 = load i32, i32* @r31, align 4
  store i32 268438392, i32* @lr, align 4
  %v2_10000b74 = call i32 @function_1000a204(i32 4, i32 4)
  store i32 %v2_10000b74, i32* %r19.global-to-local, align 4
  %v0_10000b7c = load i32, i32* @r28, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b7c to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 2, i32 0)
  %v0_10000b9c = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 256
  store i32 %v1_10000ba0, i32* %r14.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b9c to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 3, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  store i32 %v5_10000ba8, i32* %r24.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 4, i32 64)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bd0 = urem i32 %v5_10000bc0, 256
  store i32 %v1_10000bd0, i32* %r20.global-to-local, align 4
  %v0_10000bd4 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd4, i32* %r3.global-to-local, align 4
  store i32 268438492, i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd4, i32* %v4_10000bd8, i32 5, i32 1)
  %v0_10000be8 = load i32, i32* @r28, align 4
  %v1_10000bec = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bec, i32* @r31, align 4
  %v0_10000bf0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bf0, i32* %r3.global-to-local, align 4
  store i32 268438520, i32* @lr, align 4
  %v4_10000bf4 = inttoptr i32 %v0_10000be8 to i32*
  %v5_10000bf4 = call i32 @function_100006a8(i32 %v0_10000bf0, i32* %v4_10000bf4, i32 6, i32 65535)
  %v0_10000bfc = load i32, i32* @r28, align 4
  store i32 %v5_10000bf4, i32* %r26.global-to-local, align 4
  %v0_10000c0c = load i32, i32* @r29, align 4
  store i32 %v0_10000c0c, i32* %r3.global-to-local, align 4
  store i32 268438548, i32* @lr, align 4
  %v4_10000c10 = inttoptr i32 %v0_10000bfc to i32*
  %v5_10000c10 = call i32 @function_100006a8(i32 %v0_10000c0c, i32* %v4_10000c10, i32 7, i32 65535)
  %v0_10000c14 = load i32, i32* @r28, align 4
  store i32 %v5_10000c10, i32* %r27.global-to-local, align 4
  %v0_10000c24 = load i32, i32* @r29, align 4
  store i32 %v0_10000c24, i32* %r3.global-to-local, align 4
  store i32 268438572, i32* @lr, align 4
  %v4_10000c28 = inttoptr i32 %v0_10000c14 to i32*
  %v5_10000c28 = call i32 @function_100006a8(i32 %v0_10000c24, i32* %v4_10000c28, i32 0, i32 512)
  %v0_10000c2c = load i32, i32* @r28, align 4
  store i32 %v5_10000c28, i32* %r15.global-to-local, align 4
  %v0_10000c3c = load i32, i32* @r29, align 4
  store i32 %v0_10000c3c, i32* %r3.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v4_10000c40 = inttoptr i32 %v0_10000c2c to i32*
  %v5_10000c40 = call i32 @function_100006a8(i32 %v0_10000c3c, i32* %v4_10000c40, i32 1, i32 1)
  %v0_10000c44 = load i32, i32* @r28, align 4
  %v1_10000c50 = urem i32 %v5_10000c40, 256
  store i32 %v1_10000c50, i32* %r21.global-to-local, align 4
  %v0_10000c54 = load i32, i32* @r29, align 4
  store i32 %v0_10000c54, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v4_10000c58 = inttoptr i32 %v0_10000c44 to i32*
  %v5_10000c58 = call i32 @function_100006a8(i32 %v0_10000c54, i32* %v4_10000c58, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10000c60 = load i32, i32* @global_var_1001c2d0.14, align 4
  %v0_10000c64 = load i32, i32* @r28, align 4
  store i32 %v5_10000c58, i32* %r30.global-to-local, align 4
  %v0_10000c70 = load i32, i32* @r29, align 4
  store i32 %v0_10000c70, i32* %r3.global-to-local, align 4
  store i32 268438648, i32* @lr, align 4
  %v4_10000c74 = inttoptr i32 %v0_10000c64 to i32*
  %v5_10000c74 = call i32 @function_100006a8(i32 %v0_10000c70, i32* %v4_10000c74, i32 25, i32 %v3_10000c60)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438668, i32* @lr, align 4
  %v3_10000c88 = call i32 @function_10009ea8(i32 2, i32 3, i32 6)
  store i32 %v3_10000c88, i32* %r3.global-to-local, align 4
  %v3_10000c8c = icmp eq i32 %v3_10000c88, -1
  store i1 %v3_10000c8c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10000c88, i32* %r23.global-to-local, align 4
  br i1 %v3_10000c8c, label %dec_label_pc_10000e30, label %dec_label_pc_10000c98

dec_label_pc_10000c98:                            ; preds = %dec_label_pc_10000b04
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10000ca4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268438708, i32* @lr, align 4
  %v4_10000cb0 = call i32 @function_10009e6c(i32 0, i32 3, i32 %v2_10000ca4, i32 4)
  store i32 %v4_10000cb0, i32* %r3.global-to-local, align 4
  %v3_10000cb4 = icmp eq i32 %v4_10000cb0, -1
  store i1 %v3_10000cb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10000cb4, label %dec_label_pc_10000e28, label %dec_label_pc_10000cbc

dec_label_pc_10000cbc:                            ; preds = %dec_label_pc_10000c98
  %v0_10000cbc = load i32, i32* %r18.global-to-local, align 4
  %v1_10000cbc = icmp slt i32 %v0_10000cbc, 0
  %v3_10000cbc = icmp eq i32 %v0_10000cbc, 0
  store i1 %v1_10000cbc, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000cbc, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10000cc8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cc8 = urem i32 %v0_10000cc8, 65536
  store i32 %v1_10000cc8, i32* %r24.global-to-local, align 4
  %v0_10000ccc = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ccc = urem i32 %v0_10000ccc, 65536
  store i32 %v1_10000ccc, i32* %r16.global-to-local, align 4
  %v0_10000cd0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000cd0 = urem i32 %v0_10000cd0, 65536
  store i32 %v1_10000cd0, i32* %r17.global-to-local, align 4
  %v0_10000cd4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10000cd4 = urem i32 %v0_10000cd4, 256
  store i32 %v1_10000cd4, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10000cbc, 1
  br i1 %tmp37, label %dec_label_pc_10000e90, label %dec_label_pc_10000cdc

dec_label_pc_10000cdc:                            ; preds = %dec_label_pc_10000cbc
  %v0_10000cdc = load i32, i32* @r31, align 4
  %v3_10000cdc = icmp eq i32 %v0_10000cdc, 0
  store i1 %v3_10000cdc, i1* %cr2_eq.global-to-local, align 1
  %v3_10000ce0 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000ce0, i1* %cr3_eq.global-to-local, align 1
  %v0_10000ce4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ce4 = urem i32 %v0_10000ce4, 65536
  %v0_10000cc8.not = or i32 %v0_10000cc8, -65536
  %v1_10000ce8 = xor i32 %v0_10000cc8.not, 65535
  store i32 %v1_10000ce8, i32* %r11.global-to-local, align 4
  %v1_10000cf0 = add nuw nsw i32 %v1_10000ce4, 66
  store i32 %v1_10000cf0, i32* %r0.global-to-local, align 4
  %v1_10000cf4 = add nuw nsw i32 %v1_10000ce4, 28
  store i32 %v1_10000cf4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10000ce4, 66
  %v1_10000cf8 = urem i32 %fold, 65536
  store i32 %v1_10000cf8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10000ce4, 28
  %v1_10000cfc = urem i32 %fold8, 65536
  store i32 %v1_10000cfc, i32* %r26.global-to-local, align 4
  %v1_10000d00 = urem i32 %v1_10000ce8, 65536
  store i32 %v1_10000d00, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10000ce4, 8
  %v1_10000d04 = urem i32 %fold9, 65536
  store i32 %v1_10000d04, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10000d38

dec_label_pc_10000d10:                            ; preds = %dec_label_pc_10000e04
  %v0_10000d10 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d10 = add i32 %v0_10000d10, 16
  %v2_10000d10 = inttoptr i32 %v1_10000d10 to i32*
  %v3_10000d10 = load i32, i32* %v2_10000d10, align 4
  store i32 %v3_10000d10, i32* %r0.global-to-local, align 4
  %v1_10000d14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000d14 = add i32 %v1_10000d14, 16
  %v3_10000d14 = inttoptr i32 %v2_10000d14 to i32*
  store i32 %v3_10000d10, i32* %v3_10000d14, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000d18:                            ; preds = %dec_label_pc_10000e20, %dec_label_pc_10000d10
  %v3_10000d18 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d18, i32* %r9.global-to-local, align 4
  %v0_10000d1c = load i32, i32* @r28, align 4
  %v1_10000d1c = trunc i32 %v0_10000d1c to i16
  %v2_10000d1c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d1c = add i32 %v2_10000d1c, 4
  %v4_10000d1c = inttoptr i32 %v3_10000d1c to i16*
  store i16 %v1_10000d1c, i16* %v4_10000d1c, align 2
  %v0_10000d20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d20 = add i32 %v0_10000d20, 1
  store i32 %v1_10000d20, i32* %r31.global-to-local, align 4
  %v0_10000d24 = load i32, i32* %r16.global-to-local, align 4
  %v1_10000d24 = trunc i32 %v0_10000d24 to i16
  %v2_10000d24 = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d24 = inttoptr i32 %v2_10000d24 to i16*
  store i16 %v1_10000d24, i16* %v3_10000d24, align 2
  %v0_10000d28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d28 = load i32, i32* %r18.global-to-local, align 4
  %v2_10000d28 = icmp slt i32 %v0_10000d28, %v1_10000d28
  %v4_10000d28 = icmp eq i32 %v0_10000d28, %v1_10000d28
  store i1 %v4_10000d28, i1* %cr7_eq.global-to-local, align 1
  %v0_10000d2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10000d2c = trunc i32 %v0_10000d2c to i16
  %v2_10000d2c = load i32, i32* %r29.global-to-local, align 4
  %v3_10000d2c = add i32 %v2_10000d2c, 2
  %v4_10000d2c = inttoptr i32 %v3_10000d2c to i16*
  store i16 %v1_10000d2c, i16* %v4_10000d2c, align 2
  %v0_10000d30 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10000d30, i32* %stack_var_-104, align 4
  br i1 %v2_10000d28, label %dec_label_pc_10000d38, label %dec_label_pc_10000e94

dec_label_pc_10000d38:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000cdc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268438852, i32* @lr, align 4
  %v2_10000d40 = call i32 @function_1000a204(i32 1510, i32 4)
  store i32 %v2_10000d40, i32* %r3.global-to-local, align 4
  %v3_10000d44 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000d44, i32* %r9.global-to-local, align 4
  %v0_10000d48 = load i32, i32* @r31, align 4
  %v1_10000d48 = mul i32 %v0_10000d48, 4
  store i32 %v1_10000d48, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r19.global-to-local, align 4
  %v3_10000d50 = add i32 %v1_10000d50, %v1_10000d48
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d40, i32* %v4_10000d50, align 4
  %v0_10000d54 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000d54 = mul i32 %v0_10000d54, 4
  store i32 %v1_10000d54, i32* %r9.global-to-local, align 4
  %v1_10000d58 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000d58 = add i32 %v1_10000d58, %v1_10000d54
  %v3_10000d58 = inttoptr i32 %v2_10000d58 to i32*
  %v4_10000d58 = load i32, i32* %v3_10000d58, align 4
  store i32 %v4_10000d58, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10000d60 = inttoptr i32 %v4_10000d58 to i32*
  %v2_10000d60 = load i32, i32* %v1_10000d60, align 4
  store i32 %v2_10000d60, i32* %r0.global-to-local, align 4
  %v1_10000d64 = add i32 %v4_10000d58, 38
  store i32 %v1_10000d64, i32* %r30.global-to-local, align 4
  %v0_10000d68 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000d68 = trunc i32 %v0_10000d68 to i8
  %v3_10000d68 = add i32 %v4_10000d58, 8
  %v4_10000d68 = inttoptr i32 %v3_10000d68 to i8*
  store i8 %v1_10000d68, i8* %v4_10000d68, align 1
  %v0_10000d6c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d6c = add i32 %v0_10000d6c, 58
  store i32 %v1_10000d6c, i32* %r29.global-to-local, align 4
  %v1_10000d70 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000d70, i32* %r0.global-to-local, align 4
  %v0_10000d74 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d74 = trunc i32 %v0_10000d74 to i16
  %v2_10000d74 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d74 = add i32 %v2_10000d74, 4
  %v4_10000d74 = inttoptr i32 %v3_10000d74 to i16*
  store i16 %v1_10000d74, i16* %v4_10000d74, align 2
  %v1_10000d78 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000d78, i32* %r0.global-to-local, align 4
  %v0_10000d7c = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d7c = add i32 %v0_10000d7c, 20
  store i32 %v1_10000d7c, i32* %r9.global-to-local, align 4
  %v2_10000d80 = inttoptr i32 %v0_10000d7c to i32*
  store i32 %v1_10000d78, i32* %v2_10000d80, align 4
  %v0_10000d84 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000d84 = add i32 %v0_10000d84, 24
  store i32 %v1_10000d84, i32* %r11.global-to-local, align 4
  %v0_10000d88 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000d88 = trunc i32 %v0_10000d88 to i8
  %v3_10000d88 = add i32 %v0_10000d84, 1
  %v4_10000d88 = inttoptr i32 %v3_10000d88 to i8*
  store i8 %v1_10000d88, i8* %v4_10000d88, align 1
  %v0_10000d8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10000d8c = trunc i32 %v0_10000d8c to i16
  %v2_10000d8c = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d8c = add i32 %v2_10000d8c, 2
  %v4_10000d8c = inttoptr i32 %v3_10000d8c to i16*
  store i16 %v1_10000d8c, i16* %v4_10000d8c, align 2
  %v0_10000d90 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000d90, label %dec_label_pc_10000d9c, label %dec_label_pc_10000d94

dec_label_pc_10000d94:                            ; preds = %dec_label_pc_10000d38
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10000d98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000d98 = add i32 %v2_10000d98, 6
  %v4_10000d98 = inttoptr i32 %v3_10000d98 to i16*
  store i16 16384, i16* %v4_10000d98, align 2
  br label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d38, %dec_label_pc_10000d94
  %v2_10000da0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10000da0 = add i32 %v2_10000da0, 9
  %v4_10000da0 = inttoptr i32 %v3_10000da0 to i8*
  store i8 47, i8* %v4_10000da0, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_10000da8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000da8 = add i32 %v2_10000da8, 2
  %v4_10000da8 = inttoptr i32 %v3_10000da8 to i16*
  store i16 25944, i16* %v4_10000da8, align 2
  %v2_10000db0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10000db0 = add i32 %v2_10000db0, 12
  %v4_10000db0 = inttoptr i32 %v3_10000db0 to i16*
  store i16 2048, i16* %v4_10000db0, align 2
  %v3_10000db4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10000c74, i32* %r11.global-to-local, align 4
  %v1_10000dbc = mul i32 %v3_10000db4, 24
  store i32 %v1_10000dbc, i32* %r9.global-to-local, align 4
  %v0_10000dc0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10000dc0 = add i32 %v0_10000dc0, 38
  %v2_10000dc0 = inttoptr i32 %v1_10000dc0 to i32*
  %v3_10000dc0 = load i32, i32* %v2_10000dc0, align 4
  store i32 %v3_10000dc0, i32* %r0.global-to-local, align 4
  %v2_10000dc4 = add i32 %v0_10000dc0, 12
  %v3_10000dc4 = inttoptr i32 %v2_10000dc4 to i32*
  store i32 %v5_10000c74, i32* %v3_10000dc4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10000dcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dcc = load i32, i32* %r25.global-to-local, align 4
  %v2_10000dcc = add i32 %v1_10000dcc, %v0_10000dcc
  store i32 %v2_10000dcc, i32* %r9.global-to-local, align 4
  %v1_10000dd0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10000dd0, i32* %r0.global-to-local, align 4
  %v0_10000dd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000dd4 = add i32 %v0_10000dd4, 16
  %v2_10000dd4 = inttoptr i32 %v1_10000dd4 to i32*
  %v3_10000dd4 = load i32, i32* %v2_10000dd4, align 4
  store i32 %v3_10000dd4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10000ddc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10000ddc, i32* %r0.global-to-local, align 4
  %v1_10000de0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de0 = add i32 %v1_10000de0, 38
  %v3_10000de0 = inttoptr i32 %v2_10000de0 to i32*
  store i32 %v1_10000ddc, i32* %v3_10000de0, align 4
  %v0_10000de4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10000de4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10000de4 = add i32 %v1_10000de4, 16
  %v3_10000de4 = inttoptr i32 %v2_10000de4 to i32*
  store i32 %v0_10000de4, i32* %v3_10000de4, align 4
  %v0_10000de8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10000de8 = trunc i32 %v0_10000de8 to i8
  %v2_10000de8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000de8 = add i32 %v2_10000de8, 1
  %v4_10000de8 = inttoptr i32 %v3_10000de8 to i8*
  store i8 %v1_10000de8, i8* %v4_10000de8, align 1
  %v0_10000dec = load i32, i32* %r26.global-to-local, align 4
  %v1_10000dec = trunc i32 %v0_10000dec to i16
  %v2_10000dec = load i32, i32* %r30.global-to-local, align 4
  %v3_10000dec = add i32 %v2_10000dec, 2
  %v4_10000dec = inttoptr i32 %v3_10000dec to i16*
  store i16 %v1_10000dec, i16* %v4_10000dec, align 2
  %v0_10000df0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000df0 = trunc i32 %v0_10000df0 to i16
  %v2_10000df0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df0 = add i32 %v2_10000df0, 4
  %v4_10000df0 = inttoptr i32 %v3_10000df0 to i16*
  store i16 %v1_10000df0, i16* %v4_10000df0, align 2
  %v0_10000df4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000df4 = trunc i32 %v0_10000df4 to i8
  %v2_10000df4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000df4 = add i32 %v2_10000df4, 8
  %v4_10000df4 = inttoptr i32 %v3_10000df4 to i8*
  store i8 %v1_10000df4, i8* %v4_10000df4, align 1
  %v0_10000df8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000df8, label %dec_label_pc_10000e04, label %dec_label_pc_10000dfc

dec_label_pc_10000dfc:                            ; preds = %dec_label_pc_10000d9c
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10000e00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e00 = add i32 %v2_10000e00, 6
  %v4_10000e00 = inttoptr i32 %v3_10000e00 to i16*
  store i16 16384, i16* %v4_10000e00, align 2
  br label %dec_label_pc_10000e04

dec_label_pc_10000e04:                            ; preds = %dec_label_pc_10000d9c, %dec_label_pc_10000dfc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10000e08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10000e08 = add i32 %v2_10000e08, 9
  %v4_10000e08 = inttoptr i32 %v3_10000e08 to i8*
  store i8 17, i8* %v4_10000e08, align 1
  %v0_10000e0c = call i32 @function_10005f98()
  store i32 %v0_10000e0c, i32* %r3.global-to-local, align 4
  %v1_10000e10 = add i32 %v0_10000e0c, -1024
  store i32 %v1_10000e10, i32* %r0.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, 12
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  store i32 %v0_10000e0c, i32* %v3_10000e14, align 4
  %v0_10000e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000e18 = sub i32 -1, %v0_10000e18
  store i32 %v1_10000e18, i32* %r0.global-to-local, align 4
  %v0_10000e1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000e1c, label %dec_label_pc_10000e20, label %dec_label_pc_10000d10

dec_label_pc_10000e20:                            ; preds = %dec_label_pc_10000e04
  %v1_10000e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10000e20 = add i32 %v1_10000e20, 16
  %v3_10000e20 = inttoptr i32 %v2_10000e20 to i32*
  store i32 %v1_10000e18, i32* %v3_10000e20, align 4
  br label %dec_label_pc_10000d18

dec_label_pc_10000e28:                            ; preds = %dec_label_pc_10000c98
  %v0_10000e28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000e28, i32* %r3.global-to-local, align 4
  store i32 268439088, i32* @lr, align 4
  %v0_10000e2c = call i32 @function_10009158()
  store i32 %v0_10000e2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000e30

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000e28
  store i32 %v0_10000b1c, i32* %r0.global-to-local, align 4
  %v1_10000e44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10000b0c)
  store i32 %v0_10000b50, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b58, i32* %r29.global-to-local, align 4
  store i32 %v0_10000b60, i32* %r30.global-to-local, align 4
  store i32 %v0_10000b64, i32* %r31.global-to-local, align 4
  %v0_10000e8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000e8c

dec_label_pc_10000e90:                            ; preds = %dec_label_pc_10000cbc
  %v3_10000e90 = icmp eq i32 %v1_10000cd4, 0
  store i1 %v3_10000e90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10000e94

dec_label_pc_10000e94:                            ; preds = %dec_label_pc_10000d18, %dec_label_pc_10000e90
  store i32 %v5_10000c74, i32* %r0.global-to-local, align 4
  %v0_10000e98 = load i32, i32* %r21.global-to-local, align 4
  %v3_10000e98 = icmp eq i32 %v0_10000e98, 0
  store i1 %v3_10000e98, i1* %cr2_eq.global-to-local, align 1
  %v2_10000e9c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10000e9c, i32* %r14.global-to-local, align 4
  %v0_10000ea0 = load i32, i32* %r15.global-to-local, align 4
  %v1_10000ea0 = add i32 %v0_10000ea0, 8
  store i32 %v1_10000ea0, i32* %r21.global-to-local, align 4
  %v3_10000ea4 = icmp eq i32 %v5_10000c74, -1
  store i1 %v3_10000ea4, i1* %cr7_eq.global-to-local, align 1
  %v1_10000ea8 = add i32 %v0_10000ea0, 66
  store i32 %v1_10000ea8, i32* %r22.global-to-local, align 4
  %v0_10000eac = call i32 @__asm_mfcr()
  store i32 %v0_10000eac, i32* %r3.global-to-local, align 4
  %v1_10000eb0 = mul i32 %v0_10000eac, 268435456
  store i32 %v1_10000eb0, i32* %r20.global-to-local, align 4
  %v2_10000f44 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10000f68 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10000f78 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10000eb4.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000eb4.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000eb4.outer

dec_label_pc_10000eb4.outer:                      ; preds = %dec_label_pc_10001018, %dec_label_pc_10000e94
  %v1_10000eb4.ph = phi i1 [ %v1_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v1_10001018, %dec_label_pc_10001018 ]
  %v0_10000eb4.ph = phi i1 [ %v0_10000eb4.pre, %dec_label_pc_10000e94 ], [ %v0_10001018, %dec_label_pc_10001018 ]
  %v2_10000eb4 = or i1 %v1_10000eb4.ph, %v0_10000eb4.ph
  br label %dec_label_pc_10000eb4

dec_label_pc_10000eb4:                            ; preds = %dec_label_pc_10000eb4.outer, %dec_label_pc_10000eb4
  br i1 %v2_10000eb4, label %dec_label_pc_10000eb4, label %dec_label_pc_10000eb8

dec_label_pc_10000eb8:                            ; preds = %dec_label_pc_10000eb4, %dec_label_pc_10001018
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10000ec8

dec_label_pc_10000ec8:                            ; preds = %dec_label_pc_10000f88, %dec_label_pc_10000eb8
  %v0_10000ec8 = phi i32 [ %v1_10001008, %dec_label_pc_10000f88 ], [ 0, %dec_label_pc_10000eb8 ]
  %v1_10000ec8 = mul i32 %v0_10000ec8, 24
  store i32 %v1_10000ec8, i32* %r0.global-to-local, align 4
  %v1_10000ecc = mul i32 %v0_10000ec8, 4
  store i32 %v1_10000ecc, i32* %r11.global-to-local, align 4
  %v1_10000ed0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10000ed0 = add i32 %v1_10000ed0, %v1_10000ecc
  %v3_10000ed0 = inttoptr i32 %v2_10000ed0 to i32*
  %v4_10000ed0 = load i32, i32* %v3_10000ed0, align 4
  store i32 %v4_10000ed0, i32* %r28.global-to-local, align 4
  %v1_10000ed4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000ed4 = add i32 %v1_10000ed4, %v1_10000ec8
  %v1_10000ed8 = add i32 %v2_10000ed4, 20
  %v2_10000ed8 = inttoptr i32 %v1_10000ed8 to i8*
  %v3_10000ed8 = load i8, i8* %v2_10000ed8, align 1
  %v4_10000ed8 = zext i8 %v3_10000ed8 to i32
  store i32 %v4_10000ed8, i32* %r9.global-to-local, align 4
  %v1_10000edc = add i32 %v4_10000ed0, 24
  store i32 %v1_10000edc, i32* @r30, align 4
  %v1_10000ee0 = add i32 %v4_10000ed0, 38
  store i32 %v1_10000ee0, i32* @r31, align 4
  %v1_10000ee4 = add i32 %v4_10000ed0, 58
  store i32 %v1_10000ee4, i32* %r27.global-to-local, align 4
  %v3_10000ee8 = icmp eq i8 %v3_10000ed8, 31
  store i1 %v3_10000ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10000ed8, 32
  br i1 %tmp39, label %dec_label_pc_10001020, label %dec_label_pc_10000ef0

dec_label_pc_10000ef0:                            ; preds = %dec_label_pc_10000ec8
  %v0_10000ef0 = load i32, i32* %r20.global-to-local, align 4
  %v1_10000ef0 = mul i32 %v0_10000ef0, 16
  %v2_10000ef0 = udiv i32 %v0_10000ef0, 268435456
  %v3_10000ef0 = or i32 %v2_10000ef0, %v1_10000ef0
  store i32 %v3_10000ef0, i32* %r20.global-to-local, align 4
  %v1_10000ef4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10000ef0)
  %v1_10000ef8 = mul nuw i32 %v2_10000ef0, 268435456
  %v2_10000ef8 = urem i32 %v0_10000ef0, 268435456
  %v3_10000ef8 = or i32 %v1_10000ef8, %v2_10000ef8
  store i32 %v3_10000ef8, i32* %r20.global-to-local, align 4
  %v0_10000efc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10000efc, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 65535, i32* @r29, align 4
  %v0_10000f08 = load i32, i32* %r24.global-to-local, align 4
  %v4_10000f08 = icmp eq i32 %v0_10000f08, 65535
  store i1 %v4_10000f08, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f08, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_10000f10:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v1_10000f10 = phi i32 [ %v1_10001064, %dec_label_pc_10001054 ], [ 65535, %dec_label_pc_10000f00 ]
  %v0_10000f10 = load i32, i32* %r16.global-to-local, align 4
  %v4_10000f10 = icmp eq i32 %v0_10000f10, %v1_10000f10
  store i1 %v4_10000f10, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f10, label %dec_label_pc_1000108c, label %dec_label_pc_10000f18

dec_label_pc_10000f18:                            ; preds = %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge, %dec_label_pc_10000f10
  %v1_10000f18 = phi i32 [ %v1_10000f18.pre, %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge ], [ %v1_10000f10, %dec_label_pc_10000f10 ]
  %v0_10000f18 = load i32, i32* %r17.global-to-local, align 4
  %v4_10000f18 = icmp eq i32 %v0_10000f18, %v1_10000f18
  store i1 %v4_10000f18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10000f18, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_10000f20:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_10000f20 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000f20, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_10000f24:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_10000f24 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000f24 = add i32 %v0_10000f24, 16
  %v2_10000f24 = inttoptr i32 %v1_10000f24 to i32*
  %v3_10000f24 = load i32, i32* %v2_10000f24, align 4
  store i32 %v3_10000f24, i32* %r0.global-to-local, align 4
  %v1_10000f28 = load i32, i32* @r31, align 4
  %v2_10000f28 = add i32 %v1_10000f28, 16
  %v3_10000f28 = inttoptr i32 %v2_10000f28 to i32*
  store i32 %v3_10000f24, i32* %v3_10000f28, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_10000f2c:                            ; preds = %dec_label_pc_100010a8, %dec_label_pc_10000f24
  %v0_10000f2c = call i32 @function_10005f98()
  store i32 %v0_10000f2c, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f2c, i32* %stack_var_-100, align 4
  %v0_10000f34 = call i32 @function_10005f98()
  store i32 %v0_10000f34, i32* %r3.global-to-local, align 4
  store i32 %v0_10000f34, i32* %stack_var_-96, align 4
  %v0_10000f3c = call i32 @function_10005f98()
  store i32 %v0_10000f3c, i32* %stack_var_-92, align 4
  %v0_10000f48 = load i32, i32* @r30, align 4
  store i32 %v0_10000f48, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f54.15 to i32), i32* @lr, align 4
  %v3_10000f50 = call i32 @function_10008a1c(i32 %v0_10000f48, i32 %v2_10000f44, i32 4)
  %v0_10000f54 = load i32, i32* @r30, align 4
  %v1_10000f54 = add i32 %v0_10000f54, 6
  store i32 %v1_10000f54, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f64.16 to i32), i32* @lr, align 4
  %v3_10000f60 = call i32 @function_10008a1c(i32 %v1_10000f54, i32 %v2_10000e9c, i32 4)
  %v0_10000f64 = load i32, i32* @r30, align 4
  %v1_10000f64 = add i32 %v0_10000f64, 4
  store i32 %v1_10000f64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000f74.17 to i32), i32* @lr, align 4
  %v3_10000f70 = call i32 @function_10008a1c(i32 %v1_10000f64, i32 %v2_10000f68, i32 2)
  %v0_10000f74 = load i32, i32* @r30, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 10
  store i32 %v1_10000f74, i32* %r3.global-to-local, align 4
  store i32 268439428, i32* @lr, align 4
  %v3_10000f80 = call i32 @function_10008a1c(i32 %v1_10000f74, i32 %v2_10000f78, i32 2)
  store i32 %v3_10000f80, i32* %r3.global-to-local, align 4
  %v0_10000f84 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10000f84, label %dec_label_pc_10000f88, label %dec_label_pc_100010b4

dec_label_pc_10000f88:                            ; preds = %dec_label_pc_10000f2c, %dec_label_pc_100010b4
  %v0_10000f88 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000f88 = trunc i32 %v0_10000f88 to i16
  %v2_10000f88 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000f88 = add i32 %v2_10000f88, 10
  %v4_10000f88 = inttoptr i32 %v3_10000f88 to i16*
  store i16 %v1_10000f88, i16* %v4_10000f88, align 2
  %v0_10000f90 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10000f90, i32* @r3, align 4
  %v2_10000f94 = call i32 @function_100043cc(i32 %v0_10000f90, i32 20)
  %v3_10000f94 = trunc i32 %v2_10000f94 to i16
  %v4_10000f9c = add i32 %v0_10000f90, 10
  %v5_10000f9c = inttoptr i32 %v4_10000f9c to i16*
  store i16 %v3_10000f94, i16* %v5_10000f9c, align 2
  %v0_10000fa0 = load i32, i32* @r31, align 4
  store i32 %v0_10000fa0, i32* @r3, align 4
  %v0_10000fa4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fa4 = trunc i32 %v0_10000fa4 to i16
  %v3_10000fa4 = add i32 %v0_10000fa0, 10
  %v4_10000fa4 = inttoptr i32 %v3_10000fa4 to i16*
  store i16 %v1_10000fa4, i16* %v4_10000fa4, align 2
  %v2_10000fa8 = call i32 @function_100043cc(i32 %v0_10000fa0, i32 20)
  %v3_10000fa8 = trunc i32 %v2_10000fa8 to i16
  %v0_10000fac = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10000fac, i32* @r4, align 4
  %v3_10000fb0 = load i32, i32* @r31, align 4
  %v4_10000fb0 = add i32 %v3_10000fb0, 10
  %v5_10000fb0 = inttoptr i32 %v4_10000fb0 to i16*
  store i16 %v3_10000fa8, i16* %v5_10000fb0, align 2
  %v0_10000fb4 = load i32, i32* %r21.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000fb8 = trunc i32 %v0_10000fb8 to i16
  %v2_10000fb8 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000fb8 = add i32 %v2_10000fb8, 6
  %v4_10000fb8 = inttoptr i32 %v3_10000fb8 to i16*
  store i16 %v1_10000fb8, i16* %v4_10000fb8, align 2
  %v0_10000fbc = load i32, i32* @r31, align 4
  store i32 %v0_10000fbc, i32* %r3.global-to-local, align 4
  %v0_10000fc0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10000fc0 = add i32 %v0_10000fc0, 4
  %v2_10000fc0 = inttoptr i32 %v1_10000fc0 to i16*
  %v3_10000fc0 = load i16, i16* %v2_10000fc0, align 2
  %v4_10000fc0 = zext i16 %v3_10000fc0 to i32
  %v4_10000fc4 = call i32 @function_10004430(i32 %v0_10000fbc, i32 %v0_10000fac, i32 %v4_10000fc0, i32 %v0_10000fb4)
  %v5_10000fc4 = trunc i32 %v4_10000fc4 to i16
  store i32 %v4_10000fc4, i32* %r3.global-to-local, align 4
  %v3_10000fc8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10000fc8, i32* %r0.global-to-local, align 4
  %v0_10000fcc = load i32, i32* %r28.global-to-local, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 16
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i32*
  %v3_10000fcc = load i32, i32* %v2_10000fcc, align 4
  store i32 %v3_10000fcc, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10000fd4 = mul i32 %v3_10000fc8, 24
  store i32 %v1_10000fd4, i32* %r0.global-to-local, align 4
  %v3_10000fd8 = load i32, i32* %r27.global-to-local, align 4
  %v4_10000fd8 = add i32 %v3_10000fd8, 6
  %v5_10000fd8 = inttoptr i32 %v4_10000fd8 to i16*
  store i16 %v5_10000fc4, i16* %v5_10000fd8, align 2
  %v0_10000fdc = load i32, i32* %r28.global-to-local, align 4
  %v0_10000fe0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000fe0, i32* %r3.global-to-local, align 4
  %v0_10000fe4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000fe4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fe4 = add i32 %v1_10000fe4, %v0_10000fe4
  %v0_10000fe8 = load i32, i32* %r9.global-to-local, align 4
  %v3_10000fe8 = trunc i32 %v0_10000fe8 to i16
  %v5_10000fe8 = inttoptr i32 %v2_10000fe4 to i16*
  store i16 %v3_10000fe8, i16* %v5_10000fe8, align 2
  %v0_10000fec = load i32, i32* %r11.global-to-local, align 4
  %v2_10000fec = add i32 %v2_10000fe4, 4
  %v3_10000fec = inttoptr i32 %v2_10000fec to i32*
  store i32 %v0_10000fec, i32* %v3_10000fec, align 4
  %v0_10000ff0 = load i32, i32* %r22.global-to-local, align 4
  %v0_10000ff4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10000ff4 = trunc i32 %v0_10000ff4 to i16
  %v3_10000ff4 = add i32 %v2_10000fe4, 2
  %v4_10000ff4 = inttoptr i32 %v3_10000ff4 to i16*
  store i16 %v1_10000ff4, i16* %v4_10000ff4, align 2
  store i32 268439556, i32* @lr, align 4
  %v6_10001000 = call i32 @function_10009e2c(i32 %v0_10000fe0, i32 %v0_10000fdc, i32 %v0_10000ff0, i32 16384, i32 %v2_10000fe4, i32 16)
  store i32 %v6_10001000, i32* %r3.global-to-local, align 4
  %v3_10001004 = load i32, i32* %stack_var_-104, align 4
  %v1_10001008 = add i32 %v3_10001004, 1
  store i32 %v1_10001008, i32* %r9.global-to-local, align 4
  %v1_1000100c = load i32, i32* %r18.global-to-local, align 4
  %v2_1000100c = icmp slt i32 %v1_10001008, %v1_1000100c
  %v4_1000100c = icmp eq i32 %v1_10001008, %v1_1000100c
  store i1 %v4_1000100c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001008, i32* %stack_var_-104, align 4
  br i1 %v2_1000100c, label %dec_label_pc_10000ec8, label %dec_label_pc_10001018

dec_label_pc_10001018:                            ; preds = %dec_label_pc_10000f88
  %v0_10001018 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001018 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001018 = or i1 %v0_10001018, %v1_10001018
  br i1 %v2_10001018, label %dec_label_pc_10000eb4.outer, label %dec_label_pc_10000eb8

dec_label_pc_10001020:                            ; preds = %dec_label_pc_10000ec8
  %v1_10001020 = add i32 %v2_10000ed4, 16
  %v2_10001020 = inttoptr i32 %v1_10001020 to i32*
  %v3_10001020 = load i32, i32* %v2_10001020, align 4
  store i32 %v3_10001020, i32* %r29.global-to-local, align 4
  %v0_10001024 = call i32 @function_10005f98()
  store i32 %v0_10001024, i32* %r3.global-to-local, align 4
  %v3_10001028 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001028, i32* %r9.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000102c = mul i32 %v0_1000102c, 16
  %v2_1000102c = udiv i32 %v0_1000102c, 268435456
  %v3_1000102c = or i32 %v2_1000102c, %v1_1000102c
  store i32 %v3_1000102c, i32* %r20.global-to-local, align 4
  %v1_10001030 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000102c)
  %v1_10001034 = mul nuw i32 %v2_1000102c, 268435456
  %v2_10001034 = urem i32 %v0_1000102c, 268435456
  %v3_10001034 = or i32 %v1_10001034, %v2_10001034
  store i32 %v3_10001034, i32* %r20.global-to-local, align 4
  %v0_10001038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001038 = mul i32 %v0_10001038, 24
  %v1_1000103c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000103c = add i32 %v1_1000103c, %v1_10001038
  store i32 %v2_1000103c, i32* %r9.global-to-local, align 4
  %v1_10001040 = add i32 %v2_1000103c, 20
  %v2_10001040 = inttoptr i32 %v1_10001040 to i8*
  %v3_10001040 = load i8, i8* %v2_10001040, align 1
  %v4_10001040 = zext i8 %v3_10001040 to i32
  store i32 %v4_10001040, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001040, 64
  %v2_10001044 = zext i8 %tmp to i32
  %v3_10001044 = lshr i32 %v0_10001024, %v2_10001044
  store i32 %v3_10001044, i32* %r3.global-to-local, align 4
  %v0_10001048 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001048 = add i32 %v3_10001044, %v0_10001048
  store i32 %v2_10001048, i32* %r29.global-to-local, align 4
  %v1_1000104c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000104c = add i32 %v1_1000104c, 16
  %v3_1000104c = inttoptr i32 %v2_1000104c to i32*
  store i32 %v2_10001048, i32* %v3_1000104c, align 4
  %v0_10001050 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001050, label %dec_label_pc_10001054, label %dec_label_pc_10000f00

dec_label_pc_10001054:                            ; preds = %dec_label_pc_10001020, %dec_label_pc_10000ef0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001058 = call i32 @function_10005f98()
  store i32 %v0_10001058, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001060 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001060 = add i32 %v1_10001060, 12
  %v3_10001060 = inttoptr i32 %v2_10001060 to i32*
  store i32 %v0_10001058, i32* %v3_10001060, align 4
  %v0_10001064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001064 = load i32, i32* @r29, align 4
  %v4_10001064 = icmp eq i32 %v0_10001064, %v1_10001064
  store i1 %v4_10001064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001064, label %dec_label_pc_1000106c, label %dec_label_pc_10000f10

dec_label_pc_1000106c:                            ; preds = %dec_label_pc_10001054, %dec_label_pc_10000f00
  %v0_1000106c = call i32 @function_10005f98()
  %v0_10001070 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001070 = load i32, i32* @r29, align 4
  %v4_10001070 = icmp eq i32 %v0_10001070, %v1_10001070
  store i1 %v4_10001070, i1* %cr7_eq.global-to-local, align 1
  %v1_10001074 = urem i32 %v0_1000106c, 65536
  store i32 %v1_10001074, i32* %r3.global-to-local, align 4
  %v1_10001078 = add nsw i32 %v1_10001074, -1000
  store i32 %v1_10001078, i32* %r0.global-to-local, align 4
  %v1_1000107c = trunc i32 %v0_1000106c to i16
  %v2_1000107c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000107c = add i32 %v2_1000107c, 4
  %v4_1000107c = inttoptr i32 %v3_1000107c to i16*
  store i16 %v1_1000107c, i16* %v4_1000107c, align 2
  %v0_10001080 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001080 = sub i32 -1, %v0_10001080
  store i32 %v1_10001080, i32* %r0.global-to-local, align 4
  %v1_10001084 = trunc i32 %v1_10001080 to i16
  %v2_10001084 = load i32, i32* @r31, align 4
  %v3_10001084 = add i32 %v2_10001084, 4
  %v4_10001084 = inttoptr i32 %v3_10001084 to i16*
  store i16 %v1_10001084, i16* %v4_10001084, align 2
  br i1 %v4_10001070, label %dec_label_pc_1000108c, label %dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge

dec_label_pc_1000106c.dec_label_pc_10000f18_crit_edge: ; preds = %dec_label_pc_1000106c
  %v1_10000f18.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10000f18

dec_label_pc_1000108c:                            ; preds = %dec_label_pc_1000106c, %dec_label_pc_10000f10
  %v0_1000108c = call i32 @function_10005f98()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  store i32 %v0_1000108c, i32* %r3.global-to-local, align 4
  %v0_10001090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001090 = load i32, i32* @r29, align 4
  %v4_10001090 = icmp eq i32 %v0_10001090, %v1_10001090
  store i1 %v4_10001090, i1* %cr7_eq.global-to-local, align 1
  %v3_10001094 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001094 = add i32 %v3_10001094, 58
  %v5_10001094 = inttoptr i32 %v4_10001094 to i16*
  store i16 %v1_1000108c, i16* %v5_10001094, align 2
  br i1 %v4_10001090, label %dec_label_pc_1000109c, label %dec_label_pc_10000f20

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_1000108c, %dec_label_pc_10000f18
  %v0_1000109c = call i32 @function_10005f98()
  %v1_1000109c = trunc i32 %v0_1000109c to i16
  store i32 %v0_1000109c, i32* %r3.global-to-local, align 4
  %v3_100010a0 = load i32, i32* %r27.global-to-local, align 4
  %v4_100010a0 = add i32 %v3_100010a0, 2
  %v5_100010a0 = inttoptr i32 %v4_100010a0 to i16*
  store i16 %v1_1000109c, i16* %v5_100010a0, align 2
  %v0_100010a4 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100010a4, label %dec_label_pc_100010a8, label %dec_label_pc_10000f24

dec_label_pc_100010a8:                            ; preds = %dec_label_pc_1000109c, %dec_label_pc_10000f20
  %v0_100010a8 = call i32 @function_10005f98()
  store i32 %v0_100010a8, i32* %r3.global-to-local, align 4
  %v1_100010ac = load i32, i32* @r31, align 4
  %v2_100010ac = add i32 %v1_100010ac, 16
  %v3_100010ac = inttoptr i32 %v2_100010ac to i32*
  store i32 %v0_100010a8, i32* %v3_100010ac, align 4
  br label %dec_label_pc_10000f2c

dec_label_pc_100010b4:                            ; preds = %dec_label_pc_10000f2c
  %v0_100010b4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100010b4 = add i32 %v0_100010b4, 8
  store i32 %v1_100010b4, i32* @r3, align 4
  %v0_100010b8 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_100010b8, i32* @r4, align 4
  %v0_100010bc = call i32 @function_1000616c()
  store i32 %v0_100010bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000f88

; uselistorder directives
  uselistorder i32 %v0_1000109c, { 1, 0 }
  uselistorder i32 %v0_1000108c, { 1, 0 }
  uselistorder i32 %v1_10001080, { 1, 0 }
  uselistorder i32 %v1_10001074, { 1, 0 }
  uselistorder i32 %v0_1000106c, { 1, 0 }
  uselistorder i32 %v1_10001064, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 2, 1, 0 }
  uselistorder i1 %v1_10001018, { 1, 0 }
  uselistorder i1 %v0_10001018, { 1, 0 }
  uselistorder i32 %v1_10001008, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10000fe4, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10000fc4, { 1, 0 }
  uselistorder i32 %v0_10000ef0, { 2, 1, 0 }
  uselistorder i32 %v4_10000ed0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10000ecc, { 1, 0 }
  uselistorder i32 %v1_10000e18, { 1, 0 }
  uselistorder i32 %v1_10000d54, { 1, 0 }
  uselistorder i32 %v1_10000d48, { 1, 0 }
  uselistorder i32 %v1_10000ce4, { 1, 0 }
  uselistorder i32 %v0_10000ce4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10000cd4, { 1, 2, 0 }
  uselistorder i32 %v0_10000cc8, { 1, 0 }
  uselistorder i32 %v5_10000c74, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 3, 15, 16, 17, 18, 19, 20, 21, 22, 2, 29, 23, 24, 25, 26, 27, 28, 4, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 12, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32 66, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000f88, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10000eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10000e94, { 1, 0 }
  uselistorder label %dec_label_pc_10000e30, { 1, 0 }
  uselistorder label %dec_label_pc_10000e04, { 1, 0 }
  uselistorder label %dec_label_pc_10000d9c, { 1, 0 }
}

define i32 @function_100010c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100010c4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100010c8 = load i32, i32* @lr, align 4
  store i32 %v0_100010c8, i32* %r0.global-to-local, align 4
  %v0_100010cc = call i32 @__asm_mfcr()
  store i32 %v0_100010cc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_100010dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100010cc, i32* %r19.global-to-local, align 4
  %v0_10001110 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001118 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001120 = load i32, i32* @r30, align 4
  %v0_10001124 = load i32, i32* @r31, align 4
  store i32 268439864, i32* @lr, align 4
  %v2_10001134 = call i32 @function_1000a204(i32 4, i32 4)
  store i32 %v2_10001134, i32* %r20.global-to-local, align 4
  %v0_1000113c = load i32, i32* @r28, align 4
  %v0_10001148 = load i32, i32* @r29, align 4
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  store i32 268439888, i32* @lr, align 4
  %v4_1000114c = inttoptr i32 %v0_1000113c to i32*
  %v5_1000114c = call i32 @function_100006a8(i32 %v0_10001148, i32* %v4_1000114c, i32 2, i32 0)
  %v0_1000115c = load i32, i32* @r28, align 4
  %v1_10001160 = urem i32 %v5_1000114c, 256
  store i32 %v1_10001160, i32* %r14.global-to-local, align 4
  %v0_10001164 = load i32, i32* @r29, align 4
  store i32 %v0_10001164, i32* %r3.global-to-local, align 4
  store i32 268439916, i32* @lr, align 4
  %v4_10001168 = inttoptr i32 %v0_1000115c to i32*
  %v5_10001168 = call i32 @function_100006a8(i32 %v0_10001164, i32* %v4_10001168, i32 3, i32 65535)
  %v0_1000116c = load i32, i32* @r28, align 4
  store i32 %v5_10001168, i32* %r25.global-to-local, align 4
  %v0_1000117c = load i32, i32* @r29, align 4
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 268439940, i32* @lr, align 4
  %v4_10001180 = inttoptr i32 %v0_1000116c to i32*
  %v5_10001180 = call i32 @function_100006a8(i32 %v0_1000117c, i32* %v4_10001180, i32 4, i32 64)
  %v0_10001184 = load i32, i32* @r28, align 4
  %v1_10001190 = urem i32 %v5_10001180, 256
  store i32 %v1_10001190, i32* %r21.global-to-local, align 4
  %v0_10001194 = load i32, i32* @r29, align 4
  store i32 %v0_10001194, i32* %r3.global-to-local, align 4
  store i32 268439964, i32* @lr, align 4
  %v4_10001198 = inttoptr i32 %v0_10001184 to i32*
  %v5_10001198 = call i32 @function_100006a8(i32 %v0_10001194, i32* %v4_10001198, i32 5, i32 1)
  %v0_100011a8 = load i32, i32* @r28, align 4
  %v1_100011ac = urem i32 %v5_10001198, 256
  store i32 %v1_100011ac, i32* @r31, align 4
  %v0_100011b0 = load i32, i32* @r29, align 4
  store i32 %v0_100011b0, i32* %r3.global-to-local, align 4
  store i32 268439992, i32* @lr, align 4
  %v4_100011b4 = inttoptr i32 %v0_100011a8 to i32*
  %v5_100011b4 = call i32 @function_100006a8(i32 %v0_100011b0, i32* %v4_100011b4, i32 6, i32 65535)
  %v0_100011bc = load i32, i32* @r28, align 4
  store i32 %v5_100011b4, i32* %r24.global-to-local, align 4
  %v0_100011cc = load i32, i32* @r29, align 4
  store i32 %v0_100011cc, i32* %r3.global-to-local, align 4
  store i32 268440020, i32* @lr, align 4
  %v4_100011d0 = inttoptr i32 %v0_100011bc to i32*
  %v5_100011d0 = call i32 @function_100006a8(i32 %v0_100011cc, i32* %v4_100011d0, i32 7, i32 65535)
  %v0_100011d4 = load i32, i32* @r28, align 4
  store i32 %v5_100011d0, i32* %r27.global-to-local, align 4
  %v0_100011e4 = load i32, i32* @r29, align 4
  store i32 %v0_100011e4, i32* %r3.global-to-local, align 4
  store i32 268440044, i32* @lr, align 4
  %v4_100011e8 = inttoptr i32 %v0_100011d4 to i32*
  %v5_100011e8 = call i32 @function_100006a8(i32 %v0_100011e4, i32* %v4_100011e8, i32 0, i32 512)
  %v0_100011ec = load i32, i32* @r28, align 4
  store i32 %v5_100011e8, i32* %r16.global-to-local, align 4
  %v0_100011fc = load i32, i32* @r29, align 4
  store i32 %v0_100011fc, i32* %r3.global-to-local, align 4
  store i32 268440068, i32* @lr, align 4
  %v4_10001200 = inttoptr i32 %v0_100011ec to i32*
  %v5_10001200 = call i32 @function_100006a8(i32 %v0_100011fc, i32* %v4_10001200, i32 1, i32 1)
  %v0_10001204 = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_10001200, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_10001204 to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001220 = load i32, i32* @global_var_1001c2d0.14, align 4
  %v0_10001224 = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r30.global-to-local, align 4
  %v0_10001230 = load i32, i32* @r29, align 4
  store i32 %v0_10001230, i32* %r3.global-to-local, align 4
  store i32 268440120, i32* @lr, align 4
  %v4_10001234 = inttoptr i32 %v0_10001224 to i32*
  %v5_10001234 = call i32 @function_100006a8(i32 %v0_10001230, i32* %v4_10001234, i32 25, i32 %v3_10001220)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v3_10001248 = call i32 @function_10009ea8(i32 2, i32 3, i32 6)
  store i32 %v3_10001248, i32* %r3.global-to-local, align 4
  %v3_1000124c = icmp eq i32 %v3_10001248, -1
  store i1 %v3_1000124c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001248, i32* %r23.global-to-local, align 4
  br i1 %v3_1000124c, label %dec_label_pc_100013e4, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_100010c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001264 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440180, i32* @lr, align 4
  %v4_10001270 = call i32 @function_10009e6c(i32 0, i32 3, i32 %v2_10001264, i32 4)
  store i32 %v4_10001270, i32* %r3.global-to-local, align 4
  %v3_10001274 = icmp eq i32 %v4_10001270, -1
  store i1 %v3_10001274, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001274, label %dec_label_pc_100013dc, label %dec_label_pc_1000127c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_10001258
  %v0_1000127c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000127c = icmp slt i32 %v0_1000127c, 0
  %v3_1000127c = icmp eq i32 %v0_1000127c, 0
  store i1 %v1_1000127c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000127c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001288 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001288 = urem i32 %v0_10001288, 65536
  store i32 %v1_10001288, i32* %r25.global-to-local, align 4
  %v0_1000128c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000128c = urem i32 %v0_1000128c, 65536
  store i32 %v1_1000128c, i32* %r17.global-to-local, align 4
  %v0_10001290 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001290 = urem i32 %v0_10001290, 65536
  store i32 %v1_10001290, i32* %r18.global-to-local, align 4
  %v0_10001294 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001294 = urem i32 %v0_10001294, 256
  store i32 %v1_10001294, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_1000127c, 1
  br i1 %tmp33, label %dec_label_pc_10001444, label %dec_label_pc_1000129c

dec_label_pc_1000129c:                            ; preds = %dec_label_pc_1000127c
  %v0_1000129c = load i32, i32* @r31, align 4
  %v3_1000129c = icmp eq i32 %v0_1000129c, 0
  store i1 %v3_1000129c, i1* %cr2_eq.global-to-local, align 1
  %v3_100012a0 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_100012a0, i1* %cr3_eq.global-to-local, align 1
  %v0_100012a4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100012a4 = urem i32 %v0_100012a4, 65536
  %v0_10001288.not = or i32 %v0_10001288, -65536
  %v1_100012a8 = xor i32 %v0_10001288.not, 65535
  store i32 %v1_100012a8, i32* %r11.global-to-local, align 4
  %v1_100012b0 = add nuw nsw i32 %v1_100012a4, 52
  store i32 %v1_100012b0, i32* %r0.global-to-local, align 4
  %v1_100012b4 = add nuw nsw i32 %v1_100012a4, 28
  store i32 %v1_100012b4, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_100012a4, 52
  %v1_100012b8 = urem i32 %fold, 65536
  store i32 %v1_100012b8, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_100012a4, 28
  %v1_100012bc = urem i32 %fold8, 65536
  store i32 %v1_100012bc, i32* %r24.global-to-local, align 4
  %v1_100012c0 = urem i32 %v1_100012a8, 65536
  store i32 %v1_100012c0, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_100012a4, 8
  %v1_100012c4 = urem i32 %fold9, 65536
  store i32 %v1_100012c4, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100012f8

dec_label_pc_100012d0:                            ; preds = %dec_label_pc_100013b8
  %v0_100012d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012d0 = add i32 %v0_100012d0, 16
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  store i32 %v3_100012d0, i32* %r0.global-to-local, align 4
  %v1_100012d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100012d4 = add i32 %v1_100012d4, 16
  %v3_100012d4 = inttoptr i32 %v2_100012d4 to i32*
  store i32 %v3_100012d0, i32* %v3_100012d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100012d8:                            ; preds = %dec_label_pc_100013d4, %dec_label_pc_100012d0
  %v3_100012d8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100012d8, i32* %r9.global-to-local, align 4
  %v0_100012dc = load i32, i32* @r28, align 4
  %v1_100012dc = trunc i32 %v0_100012dc to i16
  %v2_100012dc = load i32, i32* %r29.global-to-local, align 4
  %v3_100012dc = add i32 %v2_100012dc, 4
  %v4_100012dc = inttoptr i32 %v3_100012dc to i16*
  store i16 %v1_100012dc, i16* %v4_100012dc, align 2
  %v0_100012e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100012e0 = add i32 %v0_100012e0, 1
  store i32 %v1_100012e0, i32* %r31.global-to-local, align 4
  %v0_100012e4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100012e4 = trunc i32 %v0_100012e4 to i16
  %v2_100012e4 = load i32, i32* %r29.global-to-local, align 4
  %v3_100012e4 = inttoptr i32 %v2_100012e4 to i16*
  store i16 %v1_100012e4, i16* %v3_100012e4, align 2
  %v0_100012e8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100012e8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100012e8 = icmp slt i32 %v0_100012e8, %v1_100012e8
  %v4_100012e8 = icmp eq i32 %v0_100012e8, %v1_100012e8
  store i1 %v4_100012e8, i1* %cr7_eq.global-to-local, align 1
  %v0_100012ec = load i32, i32* %r18.global-to-local, align 4
  %v1_100012ec = trunc i32 %v0_100012ec to i16
  %v2_100012ec = load i32, i32* %r29.global-to-local, align 4
  %v3_100012ec = add i32 %v2_100012ec, 2
  %v4_100012ec = inttoptr i32 %v3_100012ec to i16*
  store i16 %v1_100012ec, i16* %v4_100012ec, align 2
  %v0_100012f0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100012f0, i32* %stack_var_-104, align 4
  br i1 %v2_100012e8, label %dec_label_pc_100012f8, label %dec_label_pc_10001448

dec_label_pc_100012f8:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_1000129c
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440324, i32* @lr, align 4
  %v2_10001300 = call i32 @function_1000a204(i32 1510, i32 4)
  store i32 %v2_10001300, i32* %r3.global-to-local, align 4
  %v3_10001304 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001304, i32* %r9.global-to-local, align 4
  %v0_10001308 = load i32, i32* @r31, align 4
  %v1_10001308 = mul i32 %v0_10001308, 4
  store i32 %v1_10001308, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001310 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001310 = add i32 %v1_10001310, %v1_10001308
  %v4_10001310 = inttoptr i32 %v3_10001310 to i32*
  store i32 %v2_10001300, i32* %v4_10001310, align 4
  %v0_10001314 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001314 = mul i32 %v0_10001314, 4
  store i32 %v1_10001314, i32* %r9.global-to-local, align 4
  %v1_10001318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001318 = add i32 %v1_10001318, %v1_10001314
  %v3_10001318 = inttoptr i32 %v2_10001318 to i32*
  %v4_10001318 = load i32, i32* %v3_10001318, align 4
  store i32 %v4_10001318, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001320 = inttoptr i32 %v4_10001318 to i32*
  %v2_10001320 = load i32, i32* %v1_10001320, align 4
  store i32 %v2_10001320, i32* %r0.global-to-local, align 4
  %v1_10001324 = add i32 %v4_10001318, 24
  store i32 %v1_10001324, i32* %r30.global-to-local, align 4
  %v0_10001328 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001328 = trunc i32 %v0_10001328 to i8
  %v3_10001328 = add i32 %v4_10001318, 8
  %v4_10001328 = inttoptr i32 %v3_10001328 to i8*
  store i8 %v1_10001328, i8* %v4_10001328, align 1
  %v0_1000132c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000132c = add i32 %v0_1000132c, 44
  store i32 %v1_1000132c, i32* %r29.global-to-local, align 4
  %v1_10001330 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001330, i32* %r0.global-to-local, align 4
  %v0_10001334 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001334 = trunc i32 %v0_10001334 to i16
  %v2_10001334 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001334 = add i32 %v2_10001334, 4
  %v4_10001334 = inttoptr i32 %v3_10001334 to i16*
  store i16 %v1_10001334, i16* %v4_10001334, align 2
  %v1_10001338 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001338, i32* %r0.global-to-local, align 4
  %v0_1000133c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000133c = add i32 %v0_1000133c, 20
  store i32 %v1_1000133c, i32* %r9.global-to-local, align 4
  %v2_10001340 = inttoptr i32 %v0_1000133c to i32*
  store i32 %v1_10001338, i32* %v2_10001340, align 4
  %v0_10001344 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001344 = trunc i32 %v0_10001344 to i8
  %v2_10001344 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001344 = add i32 %v2_10001344, 1
  %v4_10001344 = inttoptr i32 %v3_10001344 to i8*
  store i8 %v1_10001344, i8* %v4_10001344, align 1
  %v0_10001348 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001348 = trunc i32 %v0_10001348 to i16
  %v2_10001348 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001348 = add i32 %v2_10001348, 2
  %v4_10001348 = inttoptr i32 %v3_10001348 to i16*
  store i16 %v1_10001348, i16* %v4_10001348, align 2
  %v0_1000134c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000134c, label %dec_label_pc_10001358, label %dec_label_pc_10001350

dec_label_pc_10001350:                            ; preds = %dec_label_pc_100012f8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001354 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001354 = add i32 %v2_10001354, 6
  %v4_10001354 = inttoptr i32 %v3_10001354 to i16*
  store i16 16384, i16* %v4_10001354, align 2
  br label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_100012f8, %dec_label_pc_10001350
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001360 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001360 = add i32 %v2_10001360, 9
  %v4_10001360 = inttoptr i32 %v3_10001360 to i8*
  store i8 47, i8* %v4_10001360, align 1
  %v0_10001364 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001364 = trunc i32 %v0_10001364 to i16
  %v2_10001364 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001364 = add i32 %v2_10001364, 2
  %v4_10001364 = inttoptr i32 %v3_10001364 to i16*
  store i16 %v1_10001364, i16* %v4_10001364, align 2
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001234, i32* %r11.global-to-local, align 4
  %v1_10001370 = mul i32 %v3_10001368, 24
  store i32 %v1_10001370, i32* %r9.global-to-local, align 4
  %v0_10001374 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001374 = add i32 %v0_10001374, 24
  %v2_10001374 = inttoptr i32 %v1_10001374 to i32*
  %v3_10001374 = load i32, i32* %v2_10001374, align 4
  store i32 %v3_10001374, i32* %r0.global-to-local, align 4
  %v2_10001378 = add i32 %v0_10001374, 12
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  store i32 %v5_10001234, i32* %v3_10001378, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001380 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001380 = add i32 %v1_10001380, %v0_10001380
  store i32 %v2_10001380, i32* %r9.global-to-local, align 4
  %v1_10001384 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001384, i32* %r0.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001388 = add i32 %v0_10001388, 16
  %v2_10001388 = inttoptr i32 %v1_10001388 to i32*
  %v3_10001388 = load i32, i32* %v2_10001388, align 4
  store i32 %v3_10001388, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001390 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001390, i32* %r0.global-to-local, align 4
  %v1_10001394 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001394 = add i32 %v1_10001394, 24
  %v3_10001394 = inttoptr i32 %v2_10001394 to i32*
  store i32 %v1_10001390, i32* %v3_10001394, align 4
  %v0_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001398 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001398 = add i32 %v1_10001398, 16
  %v3_10001398 = inttoptr i32 %v2_10001398 to i32*
  store i32 %v0_10001398, i32* %v3_10001398, align 4
  %v0_1000139c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000139c = trunc i32 %v0_1000139c to i8
  %v2_1000139c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000139c = add i32 %v2_1000139c, 1
  %v4_1000139c = inttoptr i32 %v3_1000139c to i8*
  store i8 %v1_1000139c, i8* %v4_1000139c, align 1
  %v0_100013a0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100013a0 = trunc i32 %v0_100013a0 to i16
  %v2_100013a0 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a0 = add i32 %v2_100013a0, 2
  %v4_100013a0 = inttoptr i32 %v3_100013a0 to i16*
  store i16 %v1_100013a0, i16* %v4_100013a0, align 2
  %v0_100013a4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100013a4 = trunc i32 %v0_100013a4 to i16
  %v2_100013a4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 4
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i16*
  store i16 %v1_100013a4, i16* %v4_100013a4, align 2
  %v0_100013a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 8
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100013ac, label %dec_label_pc_100013b8, label %dec_label_pc_100013b0

dec_label_pc_100013b0:                            ; preds = %dec_label_pc_10001358
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_100013b4 = load i32, i32* %r30.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 6
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 16384, i16* %v4_100013b4, align 2
  br label %dec_label_pc_100013b8

dec_label_pc_100013b8:                            ; preds = %dec_label_pc_10001358, %dec_label_pc_100013b0
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013bc = load i32, i32* %r30.global-to-local, align 4
  %v3_100013bc = add i32 %v2_100013bc, 9
  %v4_100013bc = inttoptr i32 %v3_100013bc to i8*
  store i8 17, i8* %v4_100013bc, align 1
  %v0_100013c0 = call i32 @function_10005f98()
  store i32 %v0_100013c0, i32* %r3.global-to-local, align 4
  %v1_100013c4 = add i32 %v0_100013c0, -1024
  store i32 %v1_100013c4, i32* %r0.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, 12
  %v3_100013c8 = inttoptr i32 %v2_100013c8 to i32*
  store i32 %v0_100013c0, i32* %v3_100013c8, align 4
  %v0_100013cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100013cc = sub i32 -1, %v0_100013cc
  store i32 %v1_100013cc, i32* %r0.global-to-local, align 4
  %v0_100013d0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100013d0, label %dec_label_pc_100013d4, label %dec_label_pc_100012d0

dec_label_pc_100013d4:                            ; preds = %dec_label_pc_100013b8
  %v1_100013d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v1_100013cc, i32* %v3_100013d4, align 4
  br label %dec_label_pc_100012d8

dec_label_pc_100013dc:                            ; preds = %dec_label_pc_10001258
  %v0_100013dc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_100013dc, i32* %r3.global-to-local, align 4
  store i32 268440548, i32* @lr, align 4
  %v0_100013e0 = call i32 @function_10009158()
  store i32 %v0_100013e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100013e4

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_100010c4, %dec_label_pc_100013dc
  store i32 %v0_100010dc, i32* %r0.global-to-local, align 4
  %v1_100013f8 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100010cc)
  store i32 %v0_10001110, i32* %r28.global-to-local, align 4
  store i32 %v0_10001118, i32* %r29.global-to-local, align 4
  store i32 %v0_10001120, i32* %r30.global-to-local, align 4
  store i32 %v0_10001124, i32* %r31.global-to-local, align 4
  %v0_10001440 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001440

dec_label_pc_10001444:                            ; preds = %dec_label_pc_1000127c
  %v3_10001444 = icmp eq i32 %v1_10001294, 0
  store i1 %v3_10001444, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001448

dec_label_pc_10001448:                            ; preds = %dec_label_pc_100012d8, %dec_label_pc_10001444
  store i32 %v5_10001234, i32* %r0.global-to-local, align 4
  %v0_1000144c = load i32, i32* %r15.global-to-local, align 4
  %v3_1000144c = icmp eq i32 %v0_1000144c, 0
  store i1 %v3_1000144c, i1* %cr2_eq.global-to-local, align 1
  %v0_10001450 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001450 = add i32 %v0_10001450, 8
  store i32 %v1_10001450, i32* %r22.global-to-local, align 4
  %v1_10001454 = add i32 %v0_10001450, 52
  store i32 %v1_10001454, i32* %r24.global-to-local, align 4
  %v3_10001458 = icmp eq i32 %v5_10001234, -1
  store i1 %v3_10001458, i1* %cr7_eq.global-to-local, align 1
  %v0_1000145c = call i32 @__asm_mfcr()
  store i32 %v0_1000145c, i32* %r3.global-to-local, align 4
  %v1_10001460 = mul i32 %v0_1000145c, 268435456
  store i32 %v1_10001460, i32* %r21.global-to-local, align 4
  %v0_10001464.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001464.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001464.outer

dec_label_pc_10001464.outer:                      ; preds = %dec_label_pc_1000156c, %dec_label_pc_10001448
  %v1_10001464.ph = phi i1 [ %v1_10001464.pre, %dec_label_pc_10001448 ], [ %v1_1000156c, %dec_label_pc_1000156c ]
  %v0_10001464.ph = phi i1 [ %v0_10001464.pre, %dec_label_pc_10001448 ], [ %v0_1000156c, %dec_label_pc_1000156c ]
  %v2_10001464 = or i1 %v1_10001464.ph, %v0_10001464.ph
  br label %dec_label_pc_10001464

dec_label_pc_10001464:                            ; preds = %dec_label_pc_10001464.outer, %dec_label_pc_10001464
  br i1 %v2_10001464, label %dec_label_pc_10001464, label %dec_label_pc_10001468

dec_label_pc_10001468:                            ; preds = %dec_label_pc_10001464, %dec_label_pc_1000156c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001478

dec_label_pc_10001478:                            ; preds = %dec_label_pc_100014dc, %dec_label_pc_10001468
  %v0_10001478 = phi i32 [ %v1_1000155c, %dec_label_pc_100014dc ], [ 0, %dec_label_pc_10001468 ]
  %v1_10001478 = mul i32 %v0_10001478, 24
  store i32 %v1_10001478, i32* %r0.global-to-local, align 4
  %v1_1000147c = mul i32 %v0_10001478, 4
  store i32 %v1_1000147c, i32* %r11.global-to-local, align 4
  %v1_10001480 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001480 = add i32 %v1_10001480, %v1_1000147c
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  %v4_10001480 = load i32, i32* %v3_10001480, align 4
  store i32 %v4_10001480, i32* %r28.global-to-local, align 4
  %v1_10001484 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001484 = add i32 %v1_10001484, %v1_10001478
  %v1_10001488 = add i32 %v2_10001484, 20
  %v2_10001488 = inttoptr i32 %v1_10001488 to i8*
  %v3_10001488 = load i8, i8* %v2_10001488, align 1
  %v4_10001488 = zext i8 %v3_10001488 to i32
  store i32 %v4_10001488, i32* %r9.global-to-local, align 4
  %v1_1000148c = add i32 %v4_10001480, 24
  store i32 %v1_1000148c, i32* @r31, align 4
  %v1_10001490 = add i32 %v4_10001480, 44
  store i32 %v1_10001490, i32* @r30, align 4
  %v3_10001494 = icmp eq i8 %v3_10001488, 31
  store i1 %v3_10001494, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001488, 32
  br i1 %tmp35, label %dec_label_pc_10001574, label %dec_label_pc_1000149c

dec_label_pc_1000149c:                            ; preds = %dec_label_pc_10001478
  %v0_1000149c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000149c = mul i32 %v0_1000149c, 16
  %v2_1000149c = udiv i32 %v0_1000149c, 268435456
  %v3_1000149c = or i32 %v2_1000149c, %v1_1000149c
  store i32 %v3_1000149c, i32* %r21.global-to-local, align 4
  %v1_100014a0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000149c)
  %v1_100014a4 = mul nuw i32 %v2_1000149c, 268435456
  %v2_100014a4 = urem i32 %v0_1000149c, 268435456
  %v3_100014a4 = or i32 %v1_100014a4, %v2_100014a4
  store i32 %v3_100014a4, i32* %r21.global-to-local, align 4
  %v0_100014a8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100014a8, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 65535, i32* @r29, align 4
  %v0_100014b4 = load i32, i32* %r25.global-to-local, align 4
  %v4_100014b4 = icmp eq i32 %v0_100014b4, 65535
  store i1 %v4_100014b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014b4, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v1_100014bc = phi i32 [ %v1_100015b8, %dec_label_pc_100015a8 ], [ 65535, %dec_label_pc_100014ac ]
  %v0_100014bc = load i32, i32* %r17.global-to-local, align 4
  %v4_100014bc = icmp eq i32 %v0_100014bc, %v1_100014bc
  store i1 %v4_100014bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014bc, label %dec_label_pc_100015e0, label %dec_label_pc_100014c4

dec_label_pc_100014c4:                            ; preds = %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge, %dec_label_pc_100014bc
  %v1_100014c4 = phi i32 [ %v1_100014c4.pre, %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge ], [ %v1_100014bc, %dec_label_pc_100014bc ]
  %v0_100014c4 = load i32, i32* %r18.global-to-local, align 4
  %v4_100014c4 = icmp eq i32 %v0_100014c4, %v1_100014c4
  store i1 %v4_100014c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100014c4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100014cc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100014cc, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100014d0:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100014d0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100014d0 = add i32 %v0_100014d0, 16
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i32*
  %v3_100014d0 = load i32, i32* %v2_100014d0, align 4
  store i32 %v3_100014d0, i32* %r0.global-to-local, align 4
  %v1_100014d4 = load i32, i32* @r31, align 4
  %v2_100014d4 = add i32 %v1_100014d4, 16
  %v3_100014d4 = inttoptr i32 %v2_100014d4 to i32*
  store i32 %v3_100014d0, i32* %v3_100014d4, align 4
  %v0_100014d8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014d8, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_100014dc:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc, %dec_label_pc_10001608
  %v0_100014dc = load i32, i32* %r27.global-to-local, align 4
  %v1_100014dc = trunc i32 %v0_100014dc to i16
  %v2_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v3_100014dc = add i32 %v2_100014dc, 10
  %v4_100014dc = inttoptr i32 %v3_100014dc to i16*
  store i16 %v1_100014dc, i16* %v4_100014dc, align 2
  %v0_100014e4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100014e4, i32* @r3, align 4
  %v2_100014e8 = call i32 @function_100043cc(i32 %v0_100014e4, i32 20)
  %v3_100014e8 = trunc i32 %v2_100014e8 to i16
  %v4_100014f0 = add i32 %v0_100014e4, 10
  %v5_100014f0 = inttoptr i32 %v4_100014f0 to i16*
  store i16 %v3_100014e8, i16* %v5_100014f0, align 2
  %v0_100014f4 = load i32, i32* @r31, align 4
  store i32 %v0_100014f4, i32* @r3, align 4
  %v0_100014f8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100014f8 = trunc i32 %v0_100014f8 to i16
  %v3_100014f8 = add i32 %v0_100014f4, 10
  %v4_100014f8 = inttoptr i32 %v3_100014f8 to i16*
  store i16 %v1_100014f8, i16* %v4_100014f8, align 2
  %v2_100014fc = call i32 @function_100043cc(i32 %v0_100014f4, i32 20)
  %v3_100014fc = trunc i32 %v2_100014fc to i16
  %v0_10001500 = load i32, i32* @r30, align 4
  store i32 %v0_10001500, i32* @r4, align 4
  %v3_10001504 = load i32, i32* @r31, align 4
  %v4_10001504 = add i32 %v3_10001504, 10
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v3_100014fc, i16* %v5_10001504, align 2
  %v0_10001508 = load i32, i32* %r22.global-to-local, align 4
  %v0_1000150c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  %v2_1000150c = load i32, i32* @r30, align 4
  %v3_1000150c = add i32 %v2_1000150c, 6
  %v4_1000150c = inttoptr i32 %v3_1000150c to i16*
  store i16 %v1_1000150c, i16* %v4_1000150c, align 2
  %v0_10001510 = load i32, i32* @r31, align 4
  store i32 %v0_10001510, i32* %r3.global-to-local, align 4
  %v0_10001514 = load i32, i32* @r30, align 4
  %v1_10001514 = add i32 %v0_10001514, 4
  %v2_10001514 = inttoptr i32 %v1_10001514 to i16*
  %v3_10001514 = load i16, i16* %v2_10001514, align 2
  %v4_10001514 = zext i16 %v3_10001514 to i32
  %v4_10001518 = call i32 @function_10004430(i32 %v0_10001510, i32 %v0_10001500, i32 %v4_10001514, i32 %v0_10001508)
  %v5_10001518 = trunc i32 %v4_10001518 to i16
  store i32 %v4_10001518, i32* %r3.global-to-local, align 4
  %v3_1000151c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000151c, i32* %r0.global-to-local, align 4
  %v0_10001520 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001520 = add i32 %v0_10001520, 16
  %v2_10001520 = inttoptr i32 %v1_10001520 to i32*
  %v3_10001520 = load i32, i32* %v2_10001520, align 4
  store i32 %v3_10001520, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001528 = mul i32 %v3_1000151c, 24
  store i32 %v1_10001528, i32* %r0.global-to-local, align 4
  %v3_1000152c = load i32, i32* @r30, align 4
  %v4_1000152c = add i32 %v3_1000152c, 6
  %v5_1000152c = inttoptr i32 %v4_1000152c to i16*
  store i16 %v5_10001518, i16* %v5_1000152c, align 2
  %v0_10001530 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001534 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001534, i32* %r3.global-to-local, align 4
  %v0_10001538 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001538 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001538 = add i32 %v1_10001538, %v0_10001538
  %v0_1000153c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000153c = trunc i32 %v0_1000153c to i16
  %v5_1000153c = inttoptr i32 %v2_10001538 to i16*
  store i16 %v3_1000153c, i16* %v5_1000153c, align 2
  %v0_10001540 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001540 = add i32 %v2_10001538, 4
  %v3_10001540 = inttoptr i32 %v2_10001540 to i32*
  store i32 %v0_10001540, i32* %v3_10001540, align 4
  %v0_10001544 = load i32, i32* %r24.global-to-local, align 4
  %v0_10001548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001548 = trunc i32 %v0_10001548 to i16
  %v3_10001548 = add i32 %v2_10001538, 2
  %v4_10001548 = inttoptr i32 %v3_10001548 to i16*
  store i16 %v1_10001548, i16* %v4_10001548, align 2
  store i32 268440920, i32* @lr, align 4
  %v6_10001554 = call i32 @function_10009e2c(i32 %v0_10001534, i32 %v0_10001530, i32 %v0_10001544, i32 16384, i32 %v2_10001538, i32 16)
  store i32 %v6_10001554, i32* %r3.global-to-local, align 4
  %v3_10001558 = load i32, i32* %stack_var_-104, align 4
  %v1_1000155c = add i32 %v3_10001558, 1
  store i32 %v1_1000155c, i32* %r9.global-to-local, align 4
  %v1_10001560 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001560 = icmp slt i32 %v1_1000155c, %v1_10001560
  %v4_10001560 = icmp eq i32 %v1_1000155c, %v1_10001560
  store i1 %v4_10001560, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_1000155c, i32* %stack_var_-104, align 4
  br i1 %v2_10001560, label %dec_label_pc_10001478, label %dec_label_pc_1000156c

dec_label_pc_1000156c:                            ; preds = %dec_label_pc_100014dc
  %v0_1000156c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000156c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000156c = or i1 %v0_1000156c, %v1_1000156c
  br i1 %v2_1000156c, label %dec_label_pc_10001464.outer, label %dec_label_pc_10001468

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001478
  %v1_10001574 = add i32 %v2_10001484, 16
  %v2_10001574 = inttoptr i32 %v1_10001574 to i32*
  %v3_10001574 = load i32, i32* %v2_10001574, align 4
  store i32 %v3_10001574, i32* %r29.global-to-local, align 4
  %v0_10001578 = call i32 @function_10005f98()
  store i32 %v0_10001578, i32* %r3.global-to-local, align 4
  %v3_1000157c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000157c, i32* %r9.global-to-local, align 4
  %v0_10001580 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001580 = mul i32 %v0_10001580, 16
  %v2_10001580 = udiv i32 %v0_10001580, 268435456
  %v3_10001580 = or i32 %v2_10001580, %v1_10001580
  store i32 %v3_10001580, i32* %r21.global-to-local, align 4
  %v1_10001584 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001580)
  %v1_10001588 = mul nuw i32 %v2_10001580, 268435456
  %v2_10001588 = urem i32 %v0_10001580, 268435456
  %v3_10001588 = or i32 %v1_10001588, %v2_10001588
  store i32 %v3_10001588, i32* %r21.global-to-local, align 4
  %v0_1000158c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000158c = mul i32 %v0_1000158c, 24
  %v1_10001590 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001590 = add i32 %v1_10001590, %v1_1000158c
  store i32 %v2_10001590, i32* %r9.global-to-local, align 4
  %v1_10001594 = add i32 %v2_10001590, 20
  %v2_10001594 = inttoptr i32 %v1_10001594 to i8*
  %v3_10001594 = load i8, i8* %v2_10001594, align 1
  %v4_10001594 = zext i8 %v3_10001594 to i32
  store i32 %v4_10001594, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001594, 64
  %v2_10001598 = zext i8 %tmp to i32
  %v3_10001598 = lshr i32 %v0_10001578, %v2_10001598
  store i32 %v3_10001598, i32* %r3.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000159c = add i32 %v3_10001598, %v0_1000159c
  store i32 %v2_1000159c, i32* %r29.global-to-local, align 4
  %v1_100015a0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015a0 = add i32 %v1_100015a0, 16
  %v3_100015a0 = inttoptr i32 %v2_100015a0 to i32*
  store i32 %v2_1000159c, i32* %v3_100015a0, align 4
  %v0_100015a4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100015a4, label %dec_label_pc_100015a8, label %dec_label_pc_100014ac

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_1000149c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100015ac = call i32 @function_10005f98()
  store i32 %v0_100015ac, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100015b4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100015b4 = add i32 %v1_100015b4, 12
  %v3_100015b4 = inttoptr i32 %v2_100015b4 to i32*
  store i32 %v0_100015ac, i32* %v3_100015b4, align 4
  %v0_100015b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100015b8 = load i32, i32* @r29, align 4
  %v4_100015b8 = icmp eq i32 %v0_100015b8, %v1_100015b8
  store i1 %v4_100015b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100015b8, label %dec_label_pc_100015c0, label %dec_label_pc_100014bc

dec_label_pc_100015c0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100014ac
  %v0_100015c0 = call i32 @function_10005f98()
  %v0_100015c4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100015c4 = load i32, i32* @r29, align 4
  %v4_100015c4 = icmp eq i32 %v0_100015c4, %v1_100015c4
  store i1 %v4_100015c4, i1* %cr7_eq.global-to-local, align 1
  %v1_100015c8 = urem i32 %v0_100015c0, 65536
  store i32 %v1_100015c8, i32* %r3.global-to-local, align 4
  %v1_100015cc = add nsw i32 %v1_100015c8, -1000
  store i32 %v1_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = trunc i32 %v0_100015c0 to i16
  %v2_100015d0 = load i32, i32* %r28.global-to-local, align 4
  %v3_100015d0 = add i32 %v2_100015d0, 4
  %v4_100015d0 = inttoptr i32 %v3_100015d0 to i16*
  store i16 %v1_100015d0, i16* %v4_100015d0, align 2
  %v0_100015d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100015d4 = sub i32 -1, %v0_100015d4
  store i32 %v1_100015d4, i32* %r0.global-to-local, align 4
  %v1_100015d8 = trunc i32 %v1_100015d4 to i16
  %v2_100015d8 = load i32, i32* @r31, align 4
  %v3_100015d8 = add i32 %v2_100015d8, 4
  %v4_100015d8 = inttoptr i32 %v3_100015d8 to i16*
  store i16 %v1_100015d8, i16* %v4_100015d8, align 2
  br i1 %v4_100015c4, label %dec_label_pc_100015e0, label %dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge

dec_label_pc_100015c0.dec_label_pc_100014c4_crit_edge: ; preds = %dec_label_pc_100015c0
  %v1_100014c4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100014c4

dec_label_pc_100015e0:                            ; preds = %dec_label_pc_100015c0, %dec_label_pc_100014bc
  %v0_100015e0 = call i32 @function_10005f98()
  %v1_100015e0 = trunc i32 %v0_100015e0 to i16
  store i32 %v0_100015e0, i32* %r3.global-to-local, align 4
  %v0_100015e4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100015e4 = load i32, i32* @r29, align 4
  %v4_100015e4 = icmp eq i32 %v0_100015e4, %v1_100015e4
  store i1 %v4_100015e4, i1* %cr7_eq.global-to-local, align 1
  %v3_100015e8 = load i32, i32* %r28.global-to-local, align 4
  %v4_100015e8 = add i32 %v3_100015e8, 44
  %v5_100015e8 = inttoptr i32 %v4_100015e8 to i16*
  store i16 %v1_100015e0, i16* %v5_100015e8, align 2
  br i1 %v4_100015e4, label %dec_label_pc_100015f0, label %dec_label_pc_100014cc

dec_label_pc_100015f0:                            ; preds = %dec_label_pc_100015e0, %dec_label_pc_100014c4
  %v0_100015f0 = call i32 @function_10005f98()
  %v1_100015f0 = trunc i32 %v0_100015f0 to i16
  store i32 %v0_100015f0, i32* %r3.global-to-local, align 4
  %v3_100015f4 = load i32, i32* @r30, align 4
  %v4_100015f4 = add i32 %v3_100015f4, 2
  %v5_100015f4 = inttoptr i32 %v4_100015f4 to i16*
  store i16 %v1_100015f0, i16* %v5_100015f4, align 2
  %v0_100015f8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100015f8, label %dec_label_pc_100015fc, label %dec_label_pc_100014d0

dec_label_pc_100015fc:                            ; preds = %dec_label_pc_100015f0, %dec_label_pc_100014cc
  %v0_100015fc = call i32 @function_10005f98()
  store i32 %v0_100015fc, i32* %r3.global-to-local, align 4
  %v1_10001600 = load i32, i32* @r31, align 4
  %v2_10001600 = add i32 %v1_10001600, 16
  %v3_10001600 = inttoptr i32 %v2_10001600 to i32*
  store i32 %v0_100015fc, i32* %v3_10001600, align 4
  %v0_10001604 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001604, label %dec_label_pc_100014dc, label %dec_label_pc_10001608

dec_label_pc_10001608:                            ; preds = %dec_label_pc_100014d0, %dec_label_pc_100015fc
  %v0_10001608 = load i32, i32* @r30, align 4
  %v1_10001608 = add i32 %v0_10001608, 8
  store i32 %v1_10001608, i32* @r3, align 4
  %v0_1000160c = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_1000160c, i32* @r4, align 4
  %v0_10001610 = call i32 @function_1000616c()
  store i32 %v0_10001610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100014dc

; uselistorder directives
  uselistorder i32 %v0_100015f0, { 1, 0 }
  uselistorder i32 %v0_100015e0, { 1, 0 }
  uselistorder i32 %v1_100015d4, { 1, 0 }
  uselistorder i32 %v1_100015c8, { 1, 0 }
  uselistorder i32 %v0_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_10001580, { 2, 1, 0 }
  uselistorder i1 %v1_1000156c, { 1, 0 }
  uselistorder i1 %v0_1000156c, { 1, 0 }
  uselistorder i32 %v1_1000155c, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001538, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001518, { 1, 0 }
  uselistorder i32 %v0_1000149c, { 2, 1, 0 }
  uselistorder i32 %v4_10001480, { 1, 0, 2 }
  uselistorder i32 %v1_1000147c, { 1, 0 }
  uselistorder i32 %v1_100013cc, { 1, 0 }
  uselistorder i32 %v1_10001314, { 1, 0 }
  uselistorder i32 %v1_10001308, { 1, 0 }
  uselistorder i32 %v1_100012a4, { 1, 0 }
  uselistorder i32 %v0_100012a4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001294, { 1, 2, 0 }
  uselistorder i32 %v0_10001288, { 1, 0 }
  uselistorder i32 %v5_10001234, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 19, 20, 21, 22, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 4, 5, 17, 18 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 27, 28, 29, 30, 31, 32, 33, 34, 3, 4, 5, 6, 2, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 6, 5, 7, 8, 0, 4, 1, 2, 3 }
  uselistorder i32* %r28.global-to-local, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32* %r26.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r21.global-to-local, { 8, 9, 7, 0, 1, 6, 2, 3, 4, 5 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r16.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22, 18, 19, 20, 21, 8, 23, 24, 25, 26, 27 }
  uselistorder i1* %cr7_eq.global-to-local, { 10, 11, 12, 4, 13, 0, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 3, 1, 0, 2, 4 }
  uselistorder i1* %cr2_eq.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_10001608, { 1, 0 }
  uselistorder label %dec_label_pc_100014dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001468, { 1, 0 }
  uselistorder label %dec_label_pc_10001464, { 1, 0 }
  uselistorder label %dec_label_pc_10001448, { 1, 0 }
  uselistorder label %dec_label_pc_100013e4, { 1, 0 }
  uselistorder label %dec_label_pc_100013b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001358, { 1, 0 }
}

define i32 @function_10001618(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001618:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10001620 = call i32 @__asm_mfcr()
  store i32 %v0_10001620, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000164c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001654 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268441208, i32* @lr, align 4
  %v2_10001674 = call i32 @function_1000a204(i32 4, i32 4)
  store i32 %v2_10001674, i32* %r27.global-to-local, align 4
  %v0_10001680 = load i32, i32* @r30, align 4
  store i32 %v0_10001680, i32* %r3.global-to-local, align 4
  store i32 268441224, i32* @lr, align 4
  %v2_10001684 = call i32 @function_1000a204(i32 %v0_10001680, i32 4)
  %v0_1000168c = load i32, i32* @r28, align 4
  store i32 %v2_10001684, i32* %r26.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r29, align 4
  store i32 %v0_1000169c, i32* %r3.global-to-local, align 4
  store i32 268441252, i32* @lr, align 4
  %v4_100016a0 = inttoptr i32 %v0_1000168c to i32*
  %v5_100016a0 = call i32 @function_100006a8(i32 %v0_1000169c, i32* %v4_100016a0, i32 7, i32 65535)
  %v0_100016ac = load i32, i32* @r28, align 4
  %v1_100016b4 = urem i32 %v5_100016a0, 65536
  store i32 %v1_100016b4, i32* %r21.global-to-local, align 4
  %v0_100016b8 = load i32, i32* @r29, align 4
  store i32 %v0_100016b8, i32* %r3.global-to-local, align 4
  store i32 268441280, i32* @lr, align 4
  %v4_100016bc = inttoptr i32 %v0_100016ac to i32*
  %v5_100016bc = call i32 @function_100006a8(i32 %v0_100016b8, i32* %v4_100016bc, i32 6, i32 65535)
  %v0_100016c0 = load i32, i32* @r28, align 4
  %v1_100016c4 = urem i32 %v5_100016bc, 65536
  store i32 %v1_100016c4, i32* %r22.global-to-local, align 4
  %v0_100016d0 = load i32, i32* @r29, align 4
  store i32 %v0_100016d0, i32* %r3.global-to-local, align 4
  store i32 268441304, i32* @lr, align 4
  %v4_100016d4 = inttoptr i32 %v0_100016c0 to i32*
  %v5_100016d4 = call i32 @function_100006a8(i32 %v0_100016d0, i32* %v4_100016d4, i32 0, i32 1024)
  %v0_100016d8 = load i32, i32* @r28, align 4
  %v1_100016dc = urem i32 %v5_100016d4, 65536
  store i32 %v1_100016dc, i32* @r31, align 4
  %v0_100016e4 = load i32, i32* @r29, align 4
  store i32 %v0_100016e4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100016f0.18 to i32), i32* @lr, align 4
  %v4_100016ec = inttoptr i32 %v0_100016d8 to i32*
  %v5_100016ec = call i32 @function_100006a8(i32 %v0_100016e4, i32* %v4_100016ec, i32 1, i32 1)
  store i32 %v5_100016ec, i32* %r3.global-to-local, align 4
  %v0_100016fc = load i32, i32* %r22.global-to-local, align 4
  %v4_100016fc = icmp eq i32 %v0_100016fc, 65535
  %v1_10001704 = urem i32 %v5_100016ec, 256
  store i32 %v1_10001704, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_100016fc, label %dec_label_pc_10001900, label %dec_label_pc_10001718

dec_label_pc_10001718:                            ; preds = %dec_label_pc_10001618, %dec_label_pc_10001900
  %v0_10001718 = load i32, i32* @r30, align 4
  %v1_10001718 = icmp slt i32 %v0_10001718, 0
  %v3_10001718 = icmp eq i32 %v0_10001718, 0
  store i1 %v1_10001718, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001718, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10001718, 1
  br i1 %tmp38, label %dec_label_pc_100017d8, label %dec_label_pc_10001720

dec_label_pc_10001720:                            ; preds = %dec_label_pc_10001718
  %v0_10001724 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001724, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10001730 = load i32, i32* %r21.global-to-local, align 4
  %v4_10001730 = icmp eq i32 %v0_10001730, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10001880 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10001730, label %dec_label_pc_10001850, label %dec_label_pc_10001744

dec_label_pc_10001744:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_100017b8
  %v0_10001750 = phi i32 [ %v0_100017cc, %dec_label_pc_100017b8 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001750 = add i32 %v0_10001750, 1
  store i32 %v1_10001750, i32* %r24.global-to-local, align 4
  store i32 268441432, i32* @lr, align 4
  %v2_10001754 = call i32 @function_1000a204(i32 65535, i32 1)
  %v0_10001758 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001758 = trunc i32 %v0_10001758 to i16
  %v2_10001758 = load i32, i32* @r28, align 4
  %v3_10001758 = add i32 %v2_10001758, 2
  %v4_10001758 = inttoptr i32 %v3_10001758 to i16*
  store i16 %v1_10001758, i16* %v4_10001758, align 2
  %v1_1000175c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000175c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000175c = add i32 %v2_1000175c, %v1_1000175c
  %v4_1000175c = inttoptr i32 %v3_1000175c to i32*
  store i32 %v2_10001754, i32* %v4_1000175c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441456, i32* @lr, align 4
  %v3_1000176c = call i32 @function_10009ea8(i32 2, i32 2, i32 0)
  store i32 %v3_1000176c, i32* %r3.global-to-local, align 4
  %v3_10001774 = icmp eq i32 %v3_1000176c, -1
  %v1_1000177c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000177c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000177c = add i32 %v2_1000177c, %v1_1000177c
  %v4_1000177c = inttoptr i32 %v3_1000177c to i32*
  store i32 %v3_1000176c, i32* %v4_1000177c, align 4
  br i1 %v3_10001774, label %dec_label_pc_100018b4, label %dec_label_pc_10001784

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001744
  %v0_10001784 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001784, i32* %stack_var_-72, align 4
  store i32 268441492, i32* @lr, align 4
  %v0_10001790 = load i32, i32* %r3.global-to-local, align 4
  %v3_10001790 = call i32 @function_10009c74(i32 %v0_10001790, i32 %v2_10001880, i32 16)
  store i32 %v3_10001790, i32* %r3.global-to-local, align 4
  %v0_10001794 = load i32, i32* @r28, align 4
  %v1_10001794 = add i32 %v0_10001794, 20
  %v2_10001794 = inttoptr i32 %v1_10001794 to i8*
  %v3_10001794 = load i8, i8* %v2_10001794, align 1
  %v2_10001798 = icmp ugt i8 %v3_10001794, 31
  br i1 %v2_10001798, label %dec_label_pc_100017b8, label %dec_label_pc_100017a0

dec_label_pc_100017a0:                            ; preds = %dec_label_pc_10001784
  %v1_100017a0 = add i32 %v0_10001794, 16
  %v2_100017a0 = inttoptr i32 %v1_100017a0 to i32*
  %v3_100017a0 = load i32, i32* %v2_100017a0, align 4
  store i32 %v3_100017a0, i32* %r29.global-to-local, align 4
  %v0_100017a4 = call i32 @function_10005f98()
  store i32 %v0_100017a4, i32* %r3.global-to-local, align 4
  %v0_100017a8 = load i32, i32* @r28, align 4
  %v1_100017a8 = add i32 %v0_100017a8, 20
  %v2_100017a8 = inttoptr i32 %v1_100017a8 to i8*
  %v3_100017a8 = load i8, i8* %v2_100017a8, align 1
  %tmp = urem i8 %v3_100017a8, 64
  %v2_100017ac = zext i8 %tmp to i32
  %v3_100017ac = lshr i32 %v0_100017a4, %v2_100017ac
  %v0_100017b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100017b0 = add i32 %v3_100017ac, %v0_100017b0
  store i32 %v2_100017b0, i32* %r3.global-to-local, align 4
  %v2_100017b4 = add i32 %v0_100017a8, 4
  %v3_100017b4 = inttoptr i32 %v2_100017b4 to i32*
  store i32 %v2_100017b0, i32* %v3_100017b4, align 4
  br label %dec_label_pc_100017b8

dec_label_pc_100017b8:                            ; preds = %dec_label_pc_10001784, %dec_label_pc_100017a0
  %v0_100017b8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100017b8 = load i32, i32* %r26.global-to-local, align 4
  %v2_100017b8 = add i32 %v1_100017b8, %v0_100017b8
  %v3_100017b8 = inttoptr i32 %v2_100017b8 to i32*
  %v4_100017b8 = load i32, i32* %v3_100017b8, align 4
  store i32 %v4_100017b8, i32* @r3, align 4
  %v1_100017c4 = add i32 %v0_100017b8, 4
  store i32 %v1_100017c4, i32* %r25.global-to-local, align 4
  store i32 268441548, i32* @lr, align 4
  %v0_100017c8 = call i32 @function_10009ca8()
  store i32 %v0_100017c8, i32* %r3.global-to-local, align 4
  %v0_100017cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100017cc = load i32, i32* @r30, align 4
  %v4_100017cc = icmp eq i32 %v0_100017cc, %v1_100017cc
  %v0_100017d0 = load i32, i32* @r28, align 4
  %v1_100017d0 = add i32 %v0_100017d0, 24
  store i32 %v1_100017d0, i32* @r28, align 4
  br i1 %v4_100017cc, label %dec_label_pc_100017d8, label %dec_label_pc_10001744

dec_label_pc_100017d8:                            ; preds = %dec_label_pc_100017b8, %dec_label_pc_10001830, %dec_label_pc_10001718
  %v0_100017d8 = load i32, i32* %r23.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v0_100017d8, 0
  store i1 %v3_100017d8, i1* %cr3_eq.global-to-local, align 1
  %v0_100017dc.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100017dc.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100017dc.outer

dec_label_pc_100017dc.outer:                      ; preds = %dec_label_pc_10001810, %dec_label_pc_10001948, %dec_label_pc_100017d8
  %v1_100017dc.ph39 = phi i1 [ %v1_100017dc.pre, %dec_label_pc_100017d8 ], [ %v1_10001948, %dec_label_pc_10001948 ], [ %v1_10001810, %dec_label_pc_10001810 ]
  %v0_100017dc.ph40 = phi i1 [ %v0_100017dc.pre, %dec_label_pc_100017d8 ], [ %v0_10001948, %dec_label_pc_10001948 ], [ %v0_10001810, %dec_label_pc_10001810 ]
  %v2_100017dc = or i1 %v1_100017dc.ph39, %v0_100017dc.ph40
  br label %dec_label_pc_100017dc

dec_label_pc_100017dc:                            ; preds = %dec_label_pc_100017dc.outer, %dec_label_pc_100017dc
  br i1 %v2_100017dc, label %dec_label_pc_100017dc, label %dec_label_pc_100017e0

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_10001810, %dec_label_pc_100017dc
  %v0_100017e0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100017e0, label %dec_label_pc_100017e4, label %dec_label_pc_1000190c

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_100017ec:                            ; preds = %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge, %dec_label_pc_100017e4
  %v0_100017f0 = phi i32 [ %v0_10001808, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v0_10001800 = phi i32 [ %v0_100017ec.pre, %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge ], [ 0, %dec_label_pc_100017e4 ]
  %v1_100017ec = load i32, i32* %r26.global-to-local, align 4
  %v2_100017ec = add i32 %v1_100017ec, %v0_10001800
  %v3_100017ec = inttoptr i32 %v2_100017ec to i32*
  %v4_100017ec = load i32, i32* %v3_100017ec, align 4
  store i32 %v4_100017ec, i32* %r3.global-to-local, align 4
  %v1_100017f0 = add i32 %v0_100017f0, 1
  store i32 %v1_100017f0, i32* %r28.global-to-local, align 4
  %v1_100017f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100017f4 = add i32 %v1_100017f4, %v0_10001800
  %v3_100017f4 = inttoptr i32 %v2_100017f4 to i32*
  %v4_100017f4 = load i32, i32* %v3_100017f4, align 4
  %v0_100017f8 = load i32, i32* @r31, align 4
  %v1_10001800 = add i32 %v0_10001800, 4
  store i32 %v1_10001800, i32* %r29.global-to-local, align 4
  store i32 268441608, i32* @lr, align 4
  %v4_10001804 = call i32 @function_10009df4(i32 %v4_100017ec, i32 %v4_100017f4, i32 %v0_100017f8, i32 16384)
  store i32 %v4_10001804, i32* %r3.global-to-local, align 4
  %v0_10001808 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001808 = load i32, i32* @r30, align 4
  %v4_10001808 = icmp eq i32 %v0_10001808, %v1_10001808
  br i1 %v4_10001808, label %dec_label_pc_10001810, label %dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge

dec_label_pc_100017ec.dec_label_pc_100017ec_crit_edge: ; preds = %dec_label_pc_100017ec
  %v0_100017ec.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100017ec

dec_label_pc_10001810:                            ; preds = %dec_label_pc_100017ec
  %v0_10001810 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001810 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001810 = or i1 %v0_10001810, %v1_10001810
  br i1 %v2_10001810, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

dec_label_pc_10001830:                            ; preds = %dec_label_pc_10001894, %dec_label_pc_100018b0
  %v0_10001830 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001830 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001830 = add i32 %v1_10001830, %v0_10001830
  %v3_10001830 = inttoptr i32 %v2_10001830 to i32*
  %v4_10001830 = load i32, i32* %v3_10001830, align 4
  store i32 %v4_10001830, i32* @r3, align 4
  %v1_1000183c = add i32 %v0_10001830, 4
  store i32 %v1_1000183c, i32* %r25.global-to-local, align 4
  store i32 268441668, i32* @lr, align 4
  %v0_10001840 = call i32 @function_10009ca8()
  store i32 %v0_10001840, i32* %r3.global-to-local, align 4
  %v0_10001844 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001844 = load i32, i32* @r30, align 4
  %v4_10001844 = icmp eq i32 %v0_10001844, %v1_10001844
  %v0_10001848 = load i32, i32* @r28, align 4
  %v1_10001848 = add i32 %v0_10001848, 24
  store i32 %v1_10001848, i32* @r28, align 4
  br i1 %v4_10001844, label %dec_label_pc_100017d8, label %dec_label_pc_10001850

dec_label_pc_10001850:                            ; preds = %dec_label_pc_10001720, %dec_label_pc_10001830
  %v0_1000185c = phi i32 [ %v0_10001844, %dec_label_pc_10001830 ], [ 0, %dec_label_pc_10001720 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 1
  store i32 %v1_1000185c, i32* %r24.global-to-local, align 4
  store i32 268441700, i32* @lr, align 4
  %v2_10001860 = call i32 @function_1000a204(i32 65535, i32 1)
  store i32 %v2_10001860, i32* %r3.global-to-local, align 4
  %v1_10001864 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001864 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001864 = add i32 %v2_10001864, %v1_10001864
  %v4_10001864 = inttoptr i32 %v3_10001864 to i32*
  store i32 %v2_10001860, i32* %v4_10001864, align 4
  %v0_10001868 = call i32 @function_10005f98()
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v3_1000186c = load i32, i32* @r28, align 4
  %v4_1000186c = add i32 %v3_1000186c, 2
  %v5_1000186c = inttoptr i32 %v4_1000186c to i16*
  store i16 %v1_10001868, i16* %v5_1000186c, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441728, i32* @lr, align 4
  %v3_1000187c = call i32 @function_10009ea8(i32 2, i32 2, i32 0)
  store i32 %v3_1000187c, i32* %r3.global-to-local, align 4
  %v3_10001884 = icmp eq i32 %v3_1000187c, -1
  %v1_1000188c = load i32, i32* %r25.global-to-local, align 4
  %v2_1000188c = load i32, i32* %r26.global-to-local, align 4
  %v3_1000188c = add i32 %v2_1000188c, %v1_1000188c
  %v4_1000188c = inttoptr i32 %v3_1000188c to i32*
  store i32 %v3_1000187c, i32* %v4_1000188c, align 4
  br i1 %v3_10001884, label %dec_label_pc_100018b4, label %dec_label_pc_10001894

dec_label_pc_10001894:                            ; preds = %dec_label_pc_10001850
  %v0_10001894 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10001894, i32* %stack_var_-72, align 4
  store i32 268441764, i32* @lr, align 4
  %v0_100018a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100018a0 = call i32 @function_10009c74(i32 %v0_100018a0, i32 %v2_10001880, i32 16)
  store i32 %v3_100018a0, i32* %r3.global-to-local, align 4
  %v0_100018a4 = load i32, i32* @r28, align 4
  %v1_100018a4 = add i32 %v0_100018a4, 20
  %v2_100018a4 = inttoptr i32 %v1_100018a4 to i8*
  %v3_100018a4 = load i8, i8* %v2_100018a4, align 1
  %v2_100018a8 = icmp ugt i8 %v3_100018a4, 31
  br i1 %v2_100018a8, label %dec_label_pc_10001830, label %dec_label_pc_100018b0

dec_label_pc_100018b0:                            ; preds = %dec_label_pc_10001894
  %v1_10001818 = add i32 %v0_100018a4, 16
  %v2_10001818 = inttoptr i32 %v1_10001818 to i32*
  %v3_10001818 = load i32, i32* %v2_10001818, align 4
  store i32 %v3_10001818, i32* %r29.global-to-local, align 4
  %v0_1000181c = call i32 @function_10005f98()
  store i32 %v0_1000181c, i32* %r3.global-to-local, align 4
  %v0_10001820 = load i32, i32* @r28, align 4
  %v1_10001820 = add i32 %v0_10001820, 20
  %v2_10001820 = inttoptr i32 %v1_10001820 to i8*
  %v3_10001820 = load i8, i8* %v2_10001820, align 1
  %tmp43 = urem i8 %v3_10001820, 64
  %v2_10001824 = zext i8 %tmp43 to i32
  %v3_10001824 = lshr i32 %v0_1000181c, %v2_10001824
  %v0_10001828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001828 = add i32 %v3_10001824, %v0_10001828
  store i32 %v2_10001828, i32* %r3.global-to-local, align 4
  %v2_1000182c = add i32 %v0_10001820, 4
  %v3_1000182c = inttoptr i32 %v2_1000182c to i32*
  store i32 %v2_10001828, i32* %v3_1000182c, align 4
  br label %dec_label_pc_10001830

dec_label_pc_100018b4:                            ; preds = %dec_label_pc_10001744, %dec_label_pc_10001850
  %v1_100018c8 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10001620)
  store i32 %v0_1000164c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001654, i32* %r29.global-to-local, align 4
  %v0_100018fc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100018fc

dec_label_pc_10001900:                            ; preds = %dec_label_pc_10001618
  %v0_10001900 = call i32 @function_10005f98()
  store i32 %v0_10001900, i32* %r3.global-to-local, align 4
  %v1_10001904 = urem i32 %v0_10001900, 65536
  store i32 %v1_10001904, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10001718

dec_label_pc_1000190c:                            ; preds = %dec_label_pc_100017e0
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001914:                            ; preds = %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge, %dec_label_pc_1000190c
  %v0_1000191c = phi i32 [ %v0_10001940, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v0_10001914 = phi i32 [ %v0_10001914.pre, %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge ], [ 0, %dec_label_pc_1000190c ]
  %v1_10001914 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001914 = add i32 %v1_10001914, %v0_10001914
  %v3_10001914 = inttoptr i32 %v2_10001914 to i32*
  %v4_10001914 = load i32, i32* %v3_10001914, align 4
  store i32 %v4_10001914, i32* @r29, align 4
  %v0_10001918 = load i32, i32* @r31, align 4
  store i32 %v0_10001918, i32* @r4, align 4
  %v1_1000191c = add i32 %v0_1000191c, 1
  store i32 %v1_1000191c, i32* %r25.global-to-local, align 4
  store i32 %v4_10001914, i32* @r3, align 4
  %v0_10001924 = call i32 @function_1000616c()
  store i32 %v0_10001924, i32* %r3.global-to-local, align 4
  %v0_10001928 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001928 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001928 = add i32 %v1_10001928, %v0_10001928
  %v3_10001928 = inttoptr i32 %v2_10001928 to i32*
  %v4_10001928 = load i32, i32* %v3_10001928, align 4
  store i32 %v4_10001928, i32* %r3.global-to-local, align 4
  %v0_1000192c = load i32, i32* @r29, align 4
  %v0_10001930 = load i32, i32* @r31, align 4
  %v1_10001938 = add i32 %v0_10001928, 4
  store i32 %v1_10001938, i32* %r28.global-to-local, align 4
  store i32 268441920, i32* @lr, align 4
  %v4_1000193c = call i32 @function_10009df4(i32 %v4_10001928, i32 %v0_1000192c, i32 %v0_10001930, i32 16384)
  store i32 %v4_1000193c, i32* %r3.global-to-local, align 4
  %v0_10001940 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001940 = load i32, i32* @r30, align 4
  %v4_10001940 = icmp eq i32 %v0_10001940, %v1_10001940
  br i1 %v4_10001940, label %dec_label_pc_10001948, label %dec_label_pc_10001914.dec_label_pc_10001914_crit_edge

dec_label_pc_10001914.dec_label_pc_10001914_crit_edge: ; preds = %dec_label_pc_10001914
  %v0_10001914.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001914

dec_label_pc_10001948:                            ; preds = %dec_label_pc_10001914
  %v0_10001948 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001948 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001948 = or i1 %v0_10001948, %v1_10001948
  br i1 %v2_10001948, label %dec_label_pc_100017dc.outer, label %dec_label_pc_100017e0

; uselistorder directives
  uselistorder i1 %v1_10001948, { 1, 0 }
  uselistorder i1 %v0_10001948, { 1, 0 }
  uselistorder i32 %v0_10001940, { 1, 0 }
  uselistorder i32 %v0_10001928, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 0 }
  uselistorder i1 %v1_10001810, { 1, 0 }
  uselistorder i1 %v0_10001810, { 1, 0 }
  uselistorder i32 %v0_10001808, { 1, 0 }
  uselistorder i32 %v0_10001800, { 2, 0, 1 }
  uselistorder i32 %v0_100017cc, { 1, 0 }
  uselistorder i32 %v0_100017b8, { 1, 0 }
  uselistorder i32 %v2_10001880, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 9, 10, 11, 12, 27, 13, 14, 16, 17, 18, 19, 20, 21, 15, 22, 23, 2, 24, 25, 26, 28, 29, 30, 31, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 3, 4, 5, 7, 8, 9, 6, 13, 10, 11, 12, 0, 1, 2 }
  uselistorder i32* %r24.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r22.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100018b4, { 1, 0 }
  uselistorder label %dec_label_pc_10001850, { 1, 0 }
  uselistorder label %dec_label_pc_10001830, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc, { 1, 0 }
  uselistorder label %dec_label_pc_100017dc.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100017b8, { 1, 0 }
  uselistorder label %dec_label_pc_10001744, { 1, 0 }
  uselistorder label %dec_label_pc_10001718, { 1, 0 }
}

define i32 @function_10001950(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001950:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001954 = load i32, i32* @lr, align 4
  store i32 %v0_10001954, i32* %r0.global-to-local, align 4
  %v0_10001958 = call i32 @__asm_mfcr()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001968 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001958, i32* %r21.global-to-local, align 4
  %v0_100019a0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100019a8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268442052, i32* @lr, align 4
  %v2_100019c0 = call i32 @function_1000a204(i32 16, i32 16)
  store i32 %v2_100019c0, i32* %r22.global-to-local, align 4
  %v0_100019cc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100019cc, i32* %r3.global-to-local, align 4
  store i32 268442068, i32* @lr, align 4
  %v2_100019d0 = call i32 @function_1000a204(i32 %v0_100019cc, i32 4)
  %v0_100019d4 = load i32, i32* @r28, align 4
  store i32 %v2_100019d0, i32* %r23.global-to-local, align 4
  %v0_100019e4 = load i32, i32* @r29, align 4
  store i32 %v0_100019e4, i32* %r3.global-to-local, align 4
  store i32 268442092, i32* @lr, align 4
  %v4_100019e8 = inttoptr i32 %v0_100019d4 to i32*
  %v5_100019e8 = call i32 @function_100006a8(i32 %v0_100019e4, i32* %v4_100019e8, i32 2, i32 0)
  %v5_100019f8 = trunc i32 %v5_100019e8 to i8
  %v0_10001a00 = load i32, i32* @r28, align 4
  %v0_10001a04 = load i32, i32* @r29, align 4
  store i32 %v0_10001a04, i32* %r3.global-to-local, align 4
  store i32 268442124, i32* @lr, align 4
  %v4_10001a08 = inttoptr i32 %v0_10001a00 to i32*
  %v5_10001a08 = call i32 @function_100006a8(i32 %v0_10001a04, i32* %v4_10001a08, i32 3, i32 65535)
  %v0_10001a0c = load i32, i32* @r28, align 4
  store i32 %v5_10001a08, i32* @r31, align 4
  %v0_10001a1c = load i32, i32* @r29, align 4
  store i32 %v0_10001a1c, i32* %r3.global-to-local, align 4
  store i32 268442148, i32* @lr, align 4
  %v4_10001a20 = inttoptr i32 %v0_10001a0c to i32*
  %v5_10001a20 = call i32 @function_100006a8(i32 %v0_10001a1c, i32* %v4_10001a20, i32 4, i32 64)
  %v0_10001a24 = load i32, i32* @r28, align 4
  %v5_10001a30 = trunc i32 %v5_10001a20 to i8
  %v0_10001a38 = load i32, i32* @r29, align 4
  store i32 %v0_10001a38, i32* %r3.global-to-local, align 4
  store i32 268442176, i32* @lr, align 4
  %v4_10001a3c = inttoptr i32 %v0_10001a24 to i32*
  %v5_10001a3c = call i32 @function_100006a8(i32 %v0_10001a38, i32* %v4_10001a3c, i32 5, i32 1)
  %v1_10001a44 = urem i32 %v5_10001a3c, 256
  %v0_10001a50 = load i32, i32* @r28, align 4
  %v0_10001a58 = load i32, i32* @r29, align 4
  store i32 %v0_10001a58, i32* %r3.global-to-local, align 4
  store i32 268442208, i32* @lr, align 4
  %v4_10001a5c = inttoptr i32 %v0_10001a50 to i32*
  %v5_10001a5c = call i32 @function_100006a8(i32 %v0_10001a58, i32* %v4_10001a5c, i32 7, i32 65535)
  %v0_10001a60 = load i32, i32* @r28, align 4
  %v5_10001a6c = trunc i32 %v5_10001a5c to i16
  %v0_10001a74 = load i32, i32* @r29, align 4
  store i32 %v0_10001a74, i32* %r3.global-to-local, align 4
  store i32 268442236, i32* @lr, align 4
  %v4_10001a78 = inttoptr i32 %v0_10001a60 to i32*
  %v5_10001a78 = call i32 @function_100006a8(i32 %v0_10001a74, i32* %v4_10001a78, i32 11, i32 1)
  %v0_10001a7c = load i32, i32* @r28, align 4
  %v1_10001a80 = urem i32 %v5_10001a78, 256
  %v0_10001a90 = load i32, i32* @r29, align 4
  store i32 %v0_10001a90, i32* %r3.global-to-local, align 4
  store i32 268442264, i32* @lr, align 4
  %v4_10001a94 = inttoptr i32 %v0_10001a7c to i32*
  %v5_10001a94 = call i32 @function_100006a8(i32 %v0_10001a90, i32* %v4_10001a94, i32 12, i32 1)
  %v0_10001a98 = load i32, i32* @r28, align 4
  %v1_10001aa4 = urem i32 %v5_10001a94, 256
  %v0_10001aa8 = load i32, i32* @r29, align 4
  store i32 %v0_10001aa8, i32* %r3.global-to-local, align 4
  store i32 268442288, i32* @lr, align 4
  %v4_10001aac = inttoptr i32 %v0_10001a98 to i32*
  %v5_10001aac = call i32 @function_100006a8(i32 %v0_10001aa8, i32* %v4_10001aac, i32 13, i32 1)
  %v0_10001ab0 = load i32, i32* @r28, align 4
  %v1_10001abc = urem i32 %v5_10001aac, 256
  %v0_10001ac0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442312, i32* @lr, align 4
  %v4_10001ac4 = inttoptr i32 %v0_10001ab0 to i32*
  %v5_10001ac4 = call i32 @function_100006a8(i32 %v0_10001ac0, i32* %v4_10001ac4, i32 14, i32 1)
  %v0_10001ac8 = load i32, i32* @r28, align 4
  %v1_10001ad4 = urem i32 %v5_10001ac4, 256
  %v0_10001ad8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ad8, i32* %r3.global-to-local, align 4
  store i32 268442336, i32* @lr, align 4
  %v4_10001adc = inttoptr i32 %v0_10001ac8 to i32*
  %v5_10001adc = call i32 @function_100006a8(i32 %v0_10001ad8, i32* %v4_10001adc, i32 15, i32 1)
  %v0_10001ae0 = load i32, i32* @r28, align 4
  %v1_10001aec = urem i32 %v5_10001adc, 256
  %v0_10001af0 = load i32, i32* @r29, align 4
  store i32 %v0_10001af0, i32* %r3.global-to-local, align 4
  store i32 268442360, i32* @lr, align 4
  %v4_10001af4 = inttoptr i32 %v0_10001ae0 to i32*
  %v5_10001af4 = call i32 @function_100006a8(i32 %v0_10001af0, i32* %v4_10001af4, i32 16, i32 1)
  %v0_10001b00 = load i32, i32* @r28, align 4
  %v1_10001b04 = urem i32 %v5_10001af4, 256
  %v0_10001b08 = load i32, i32* @r29, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  store i32 268442384, i32* @lr, align 4
  %v4_10001b0c = inttoptr i32 %v0_10001b00 to i32*
  %v5_10001b0c = call i32 @function_100006a8(i32 %v0_10001b08, i32* %v4_10001b0c, i32 0, i32 768)
  %v0_10001b10 = load i32, i32* @r28, align 4
  store i32 %v5_10001b0c, i32* %r25.global-to-local, align 4
  %v0_10001b20 = load i32, i32* @r29, align 4
  store i32 %v0_10001b20, i32* %r3.global-to-local, align 4
  store i32 268442408, i32* @lr, align 4
  %v4_10001b24 = inttoptr i32 %v0_10001b10 to i32*
  %v5_10001b24 = call i32 @function_100006a8(i32 %v0_10001b20, i32* %v4_10001b24, i32 1, i32 1)
  %v1_10001b2c = urem i32 %v5_10001b24, 256
  store i32 %v1_10001b2c, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442428, i32* @lr, align 4
  %v3_10001b38 = call i32 @function_10009ea8(i32 2, i32 3, i32 6)
  store i32 %v3_10001b38, i32* %r3.global-to-local, align 4
  %v3_10001b3c = icmp eq i32 %v3_10001b38, -1
  store i1 %v3_10001b3c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b38, i32* %r24.global-to-local, align 4
  br i1 %v3_10001b3c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001b48

dec_label_pc_10001b48:                            ; preds = %dec_label_pc_10001950
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001b54 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268442468, i32* @lr, align 4
  %v4_10001b60 = call i32 @function_10009e6c(i32 0, i32 3, i32 %v2_10001b54, i32 4)
  store i32 %v4_10001b60, i32* %r3.global-to-local, align 4
  %v3_10001b64 = icmp eq i32 %v4_10001b60, -1
  store i1 %v3_10001b64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001b64, label %dec_label_pc_10001cf4, label %dec_label_pc_10001b6c

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001b48
  %v0_10001b6c = load i32, i32* %r21.global-to-local, align 4
  %v1_10001b6c = icmp slt i32 %v0_10001b6c, 0
  %v3_10001b6c = icmp eq i32 %v0_10001b6c, 0
  store i1 %v1_10001b6c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10001b6c, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001b78 = load i32, i32* @r31, align 4
  %v1_10001b78 = urem i32 %v0_10001b78, 65536
  store i32 %v1_10001b78, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10001b6c, 1
  br i1 %tmp49, label %dec_label_pc_10001e94, label %dec_label_pc_10001b80

dec_label_pc_10001b80:                            ; preds = %dec_label_pc_10001b6c
  %v4_10001b80 = sext i16 %v5_10001a6c to i32
  store i32 %v4_10001b80, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10001c24 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10001c30 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10001c34 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10001c6c = zext i16 %tmp13 to i32
  %v1_10001c9c = and i32 %tmp, 1179648
  %v3_10001db0 = icmp eq i32 %v1_10001a44, 0
  %v4_10001dd0 = sext i8 %v5_100019f8 to i32
  %v4_10001dd8 = sext i8 %v5_10001a30 to i32
  %v1_10001ca0 = and i32 %tmp, 327680
  %v3_10001ca0 = icmp eq i32 %v1_10001ca0, 0
  %v4_10001ca8 = icmp eq i32 %v1_10001c9c, 1179648
  br label %dec_label_pc_10001b8c

dec_label_pc_10001b8c:                            ; preds = %dec_label_pc_10001e80, %dec_label_pc_10001cb4, %dec_label_pc_10001b80
  %v0_10001b8c = load i32, i32* %r25.global-to-local, align 4
  %v1_10001b8c = add i32 %v0_10001b8c, 40
  store i32 %v1_10001b8c, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c53 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c53, i32* %r3.global-to-local, align 4
  %v3_10001ba055 = icmp eq i32 %v3_10001b9c53, -1
  store i1 %v3_10001ba055, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c53, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba055, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001bac:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c
  store i32 3, i32* @r4, align 4
  store i32 268442556, i32* @lr, align 4
  %v1_10001bb8 = call i32 @function_10009070(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10001bc4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001bc4, i32* %r3.global-to-local, align 4
  store i32 268442576, i32* @lr, align 4
  %v2_10001bcc = call i32 @function_10009070(i32 %v0_10001bc4)
  store i32 %v2_10001bcc, i32* %r3.global-to-local, align 4
  %v3_10001bd0 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001bd8 = mul i32 %v3_10001bd0, 24
  store i32 %v1_10001bd8, i32* %r0.global-to-local, align 4
  %v0_10001be0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001be0 = add i32 %v0_10001be0, %v1_10001bd8
  store i32 %v2_10001be0, i32* %r11.global-to-local, align 4
  %v1_10001be4 = add i32 %v2_10001be0, 20
  %v2_10001be4 = inttoptr i32 %v1_10001be4 to i8*
  %v3_10001be4 = load i8, i8* %v2_10001be4, align 1
  %v4_10001be4 = zext i8 %v3_10001be4 to i32
  store i32 %v4_10001be4, i32* %r9.global-to-local, align 4
  %v3_10001be8 = icmp eq i8 %v3_10001be4, 31
  store i1 %v3_10001be8, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10001be4, 32
  %v1_10001cc0 = add i32 %v2_10001be0, 16
  %v2_10001cc0 = inttoptr i32 %v1_10001cc0 to i32*
  %v3_10001cc0 = load i32, i32* %v2_10001cc0, align 4
  br i1 %tmp50, label %dec_label_pc_10001cc0, label %dec_label_pc_10001bf0

dec_label_pc_10001bf0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r0.global-to-local, align 4
  %v0_10001bf8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001bf8, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001bfc:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.0 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  store i32 %v4_10001b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001ce8, %dec_label_pc_10001bfc
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10001ce8 ], [ %stack_var_-396.0, %dec_label_pc_10001bfc ]
  %storemerge = phi i16 [ %v1_10001ce8, %dec_label_pc_10001ce8 ], [ %v5_10001a6c, %dec_label_pc_10001bfc ]
  %v0_10001c0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c0c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001c14.19 to i32), i32* @lr, align 4
  %v0_10001c10 = call i32 @function_10009ca8()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268442652, i32* @lr, align 4
  %v0_10001c18 = call i32 @function_10009528()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %v0_10001c18, i32* @r31, align 4
  %v4_10001c60 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10001c70 = zext i16 %storemerge to i32
  %v4_10001c74 = icmp eq i16 %storemerge, %tmp13
  %v4_10001c60.not = xor i1 %v4_10001c60, true
  br label %dec_label_pc_10001c20

dec_label_pc_10001c20:                            ; preds = %dec_label_pc_10001c7c, %dec_label_pc_10001c04
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10001c30, i32* %r7.global-to-local, align 4
  store i32 %v2_10001c34, i32* %r8.global-to-local, align 4
  %v0_10001c38 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001c38, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268442692, i32* @lr, align 4
  %v6_10001c40 = call i32 @function_10009db4(i32 %v0_10001c38, i32 %v2_10001c24, i32 256, i32 16384, i32 %v2_10001c30, i32 %v2_10001c34)
  store i32 %v6_10001c40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10001c4c = icmp eq i32 %v6_10001c40, -1
  store i1 %v3_10001c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001c4c, label %dec_label_pc_10001cfc, label %dec_label_pc_10001c58

dec_label_pc_10001c58:                            ; preds = %dec_label_pc_10001c20
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10001c60, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10001c40, 41
  %or.cond = or i1 %tmp51, %v4_10001c60.not
  br i1 %or.cond, label %dec_label_pc_10001c7c, label %dec_label_pc_10001c6c

dec_label_pc_10001c6c:                            ; preds = %dec_label_pc_10001c58
  store i32 %v4_10001c6c, i32* %r0.global-to-local, align 4
  store i32 %v4_10001c70, i32* %r8.global-to-local, align 4
  store i1 %v4_10001c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001c74, label %dec_label_pc_10001c98, label %dec_label_pc_10001c7c

dec_label_pc_10001c7c:                            ; preds = %dec_label_pc_10001c58, %dec_label_pc_10001cb0, %dec_label_pc_10001c6c
  store i32 268442752, i32* @lr, align 4
  %v0_10001c7c = call i32 @function_10009528()
  %v0_10001c80 = load i32, i32* @r31, align 4
  %v2_10001c80 = sub i32 %v0_10001c7c, %v0_10001c80
  store i32 %v2_10001c80, i32* %r3.global-to-local, align 4
  %v3_10001c84 = icmp eq i32 %v2_10001c80, 10
  store i1 %v3_10001c84, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10001c80, 11
  br i1 %tmp52, label %dec_label_pc_10001c20, label %dec_label_pc_10001c8c

dec_label_pc_10001c8c:                            ; preds = %dec_label_pc_10001c7c
  %v0_10001c8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c8c, i32* %r3.global-to-local, align 4
  store i32 268442772, i32* @lr, align 4
  %v0_10001c90 = call i32 @function_10009158()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268442528, i32* @lr, align 4
  %v3_10001b9c = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  store i32 %v3_10001b9c, i32* %r3.global-to-local, align 4
  %v3_10001ba0 = icmp eq i32 %v3_10001b9c, -1
  store i1 %v3_10001ba0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001b9c, i32* %r28.global-to-local, align 4
  br i1 %v3_10001ba0, label %dec_label_pc_10001e80, label %dec_label_pc_10001bac

dec_label_pc_10001c98:                            ; preds = %dec_label_pc_10001c6c
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10001c9c, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10001ca8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001ca8, label %dec_label_pc_10001d5c, label %dec_label_pc_10001cb0

dec_label_pc_10001cb0:                            ; preds = %dec_label_pc_10001c98
  br i1 %v3_10001ca0, label %dec_label_pc_10001c7c, label %dec_label_pc_10001cb4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001cb0
  %v0_10001cb4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001cb4, i32* %r3.global-to-local, align 4
  store i32 268442812, i32* @lr, align 4
  %v0_10001cb8 = call i32 @function_10009158()
  store i32 %v0_10001cb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001b8c

dec_label_pc_10001cc0:                            ; preds = %dec_label_pc_10001bac
  store i32 %v3_10001cc0, i32* %r29.global-to-local, align 4
  %v0_10001cc4 = call i32 @function_10005f98()
  store i32 %v0_10001cc4, i32* %r3.global-to-local, align 4
  %v3_10001cc8 = load i32, i32* %stack_var_-408, align 4
  %v1_10001ccc = mul i32 %v3_10001cc8, 24
  %v1_10001cd0 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001cd0 = add i32 %v1_10001cd0, %v1_10001ccc
  store i32 %v2_10001cd0, i32* %r9.global-to-local, align 4
  %v1_10001cd4 = add i32 %v2_10001cd0, 20
  %v2_10001cd4 = inttoptr i32 %v1_10001cd4 to i8*
  %v3_10001cd4 = load i8, i8* %v2_10001cd4, align 1
  %v4_10001cd4 = zext i8 %v3_10001cd4 to i32
  store i32 %v4_10001cd4, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10001cd4, 64
  %v2_10001cd8 = zext i8 %tmp56 to i32
  %v3_10001cd8 = lshr i32 %v0_10001cc4, %v2_10001cd8
  store i32 %v3_10001cd8, i32* %r3.global-to-local, align 4
  %v0_10001cdc = load i32, i32* %r29.global-to-local, align 4
  %v2_10001cdc = add i32 %v3_10001cd8, %v0_10001cdc
  store i32 %v2_10001cdc, i32* %r29.global-to-local, align 4
  %v0_10001ce4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10001ce4, label %dec_label_pc_10001ce8, label %dec_label_pc_10001bfc

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001bf0
  %stack_var_-396.2 = phi i32 [ %v2_10001cdc, %dec_label_pc_10001cc0 ], [ %v3_10001cc0, %dec_label_pc_10001bf0 ]
  %v0_10001ce8 = call i32 @function_10005f98()
  %v1_10001ce8 = trunc i32 %v0_10001ce8 to i16
  store i32 %v0_10001ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001c04

dec_label_pc_10001cf4:                            ; preds = %dec_label_pc_10001b48
  %v0_10001cf4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001cf4, i32* %r3.global-to-local, align 4
  store i32 268442876, i32* @lr, align 4
  %v0_10001cf8 = call i32 @function_10009158()
  store i32 %v0_10001cf8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001cfc

dec_label_pc_10001cfc:                            ; preds = %dec_label_pc_10001c20, %dec_label_pc_10001950, %dec_label_pc_10001cf4
  store i32 %v0_10001968, i32* %r0.global-to-local, align 4
  %v1_10001d10 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001958)
  store i32 %v0_100019a0, i32* %r28.global-to-local, align 4
  store i32 %v0_100019a8, i32* %r29.global-to-local, align 4
  %v0_10001d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001d58

dec_label_pc_10001d5c:                            ; preds = %dec_label_pc_10001c98
  %v3_10001d5c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d5c, i32* %r29.global-to-local, align 4
  %v0_10001d60 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10001d60, i32* @r3, align 4
  %v0_10001d64 = load i32, i32* @r30, align 4
  %v1_10001d64 = add i32 %v0_10001d64, 2
  %v2_10001d64 = inttoptr i32 %v1_10001d64 to i16*
  %v3_10001d64 = load i16, i16* %v2_10001d64, align 2
  %v4_10001d64 = zext i16 %v3_10001d64 to i32
  store i32 %v4_10001d64, i32* %r11.global-to-local, align 4
  %v1_10001d68 = mul i32 %v3_10001d5c, 16
  store i32 %v1_10001d68, i32* %r9.global-to-local, align 4
  %v1_10001d6c = mul i32 %v3_10001d5c, 4
  store i32 %v1_10001d6c, i32* @r29, align 4
  %v1_10001d70 = load i32, i32* %r22.global-to-local, align 4
  %v3_10001d70 = add i32 %v1_10001d70, %v1_10001d68
  %v4_10001d70 = inttoptr i32 %v3_10001d70 to i32*
  store i32 %tmp14, i32* %v4_10001d70, align 4
  %v0_10001d74 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001d74 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d74 = add i32 %v1_10001d74, %v0_10001d74
  store i32 %v2_10001d74, i32* %r9.global-to-local, align 4
  %v0_10001d78 = load i32, i32* %r8.global-to-local, align 4
  %v1_10001d78 = trunc i32 %v0_10001d78 to i16
  %v3_10001d78 = add i32 %v2_10001d74, 14
  %v4_10001d78 = inttoptr i32 %v3_10001d78 to i16*
  store i16 %v1_10001d78, i16* %v4_10001d78, align 2
  %v0_10001d7c = load i32, i32* @r30, align 4
  %v1_10001d7c = add i32 %v0_10001d7c, 4
  %v2_10001d7c = inttoptr i32 %v1_10001d7c to i32*
  %v3_10001d7c = load i32, i32* %v2_10001d7c, align 4
  store i32 %v3_10001d7c, i32* %r0.global-to-local, align 4
  %v0_10001d80 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001d80 = trunc i32 %v0_10001d80 to i16
  %v2_10001d80 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001d80 = add i32 %v2_10001d80, 12
  %v4_10001d80 = inttoptr i32 %v3_10001d80 to i16*
  store i16 %v1_10001d80, i16* %v4_10001d80, align 2
  %v0_10001d84 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d84 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d84 = add i32 %v1_10001d84, 4
  %v3_10001d84 = inttoptr i32 %v2_10001d84 to i32*
  store i32 %v0_10001d84, i32* %v3_10001d84, align 4
  %v0_10001d88 = load i32, i32* @r30, align 4
  %v1_10001d88 = add i32 %v0_10001d88, 8
  %v2_10001d88 = inttoptr i32 %v1_10001d88 to i32*
  %v3_10001d88 = load i32, i32* %v2_10001d88, align 4
  store i32 %v3_10001d88, i32* %r0.global-to-local, align 4
  %v1_10001d8c = load i32, i32* %r9.global-to-local, align 4
  %v2_10001d8c = add i32 %v1_10001d8c, 8
  %v3_10001d8c = inttoptr i32 %v2_10001d8c to i32*
  store i32 %v3_10001d88, i32* %v3_10001d8c, align 4
  store i32 268443028, i32* @lr, align 4
  %v0_10001d90 = call i32 @function_1000a0ac()
  store i32 %v0_10001d90, i32* %r3.global-to-local, align 4
  %v3_10001d94 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001d94, i32* %r0.global-to-local, align 4
  %v1_10001d98 = load i32, i32* @r29, align 4
  %v2_10001d98 = load i32, i32* %r23.global-to-local, align 4
  %v3_10001d98 = add i32 %v2_10001d98, %v1_10001d98
  %v4_10001d98 = inttoptr i32 %v3_10001d98 to i32*
  store i32 %v0_10001d90, i32* %v4_10001d98, align 4
  %v0_10001d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_10001d9c = mul i32 %v0_10001d9c, 4
  store i32 %v1_10001d9c, i32* %r0.global-to-local, align 4
  %v0_10001da0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001da0 = add i32 %v0_10001da0, %v1_10001d9c
  %v3_10001da0 = inttoptr i32 %v2_10001da0 to i32*
  %v4_10001da0 = load i32, i32* %v3_10001da0, align 4
  store i32 %v4_10001da0, i32* @r31, align 4
  store i32 %v1_10001a44, i32* %r0.global-to-local, align 4
  %v1_10001da8 = inttoptr i32 %v4_10001da0 to i32*
  %v2_10001da8 = load i32, i32* %v1_10001da8, align 4
  store i32 %v2_10001da8, i32* %r9.global-to-local, align 4
  %v1_10001dac = add i32 %v4_10001da0, 20
  store i32 %v1_10001dac, i32* @r30, align 4
  store i1 %v3_10001db0, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10001db8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001db8, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10001dc0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001dc4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc4 = trunc i32 %v0_10001dc4 to i16
  %v2_10001dc4 = load i32, i32* @r31, align 4
  %v3_10001dc4 = add i32 %v2_10001dc4, 4
  %v4_10001dc4 = inttoptr i32 %v3_10001dc4 to i16*
  store i16 %v1_10001dc4, i16* %v4_10001dc4, align 2
  %v1_10001dc8 = load i32, i32* @r31, align 4
  %v2_10001dc8 = inttoptr i32 %v1_10001dc8 to i32*
  store i32 %v1_10001dc0, i32* %v2_10001dc8, align 4
  %v0_10001dcc = load i32, i32* %r26.global-to-local, align 4
  %v1_10001dcc = trunc i32 %v0_10001dcc to i16
  %v2_10001dcc = load i32, i32* @r31, align 4
  %v3_10001dcc = add i32 %v2_10001dcc, 2
  %v4_10001dcc = inttoptr i32 %v3_10001dcc to i16*
  store i16 %v1_10001dcc, i16* %v4_10001dcc, align 2
  store i32 %v4_10001dd0, i32* %r9.global-to-local, align 4
  %v2_10001dd4 = load i32, i32* @r31, align 4
  %v3_10001dd4 = add i32 %v2_10001dd4, 1
  %v4_10001dd4 = inttoptr i32 %v3_10001dd4 to i8*
  store i8 %v5_100019f8, i8* %v4_10001dd4, align 1
  store i32 %v4_10001dd8, i32* %r0.global-to-local, align 4
  %v2_10001ddc = load i32, i32* @r31, align 4
  %v3_10001ddc = add i32 %v2_10001ddc, 8
  %v4_10001ddc = inttoptr i32 %v3_10001ddc to i8*
  store i8 %v5_10001a30, i8* %v4_10001ddc, align 1
  %v0_10001de0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001de0, label %dec_label_pc_10001dec, label %dec_label_pc_10001de4

dec_label_pc_10001de4:                            ; preds = %dec_label_pc_10001d5c
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = add i32 %v2_10001de8, 6
  %v4_10001de8 = inttoptr i32 %v3_10001de8 to i16*
  store i16 16384, i16* %v4_10001de8, align 2
  br label %dec_label_pc_10001dec

dec_label_pc_10001dec:                            ; preds = %dec_label_pc_10001d5c, %dec_label_pc_10001de4
  %v2_10001df4 = load i32, i32* @r31, align 4
  %v3_10001df4 = add i32 %v2_10001df4, 9
  %v4_10001df4 = inttoptr i32 %v3_10001df4 to i8*
  store i8 6, i8* %v4_10001df4, align 1
  %v3_10001df8 = load i32, i32* @global_var_1001c2d0.14, align 4
  store i32 %v3_10001df8, i32* %r0.global-to-local, align 4
  %v1_10001dfc = load i32, i32* @r31, align 4
  %v2_10001dfc = add i32 %v1_10001dfc, 12
  %v3_10001dfc = inttoptr i32 %v2_10001dfc to i32*
  store i32 %v3_10001df8, i32* %v3_10001dfc, align 4
  %v3_10001e00 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e04 = mul i32 %v3_10001e00, 16
  store i32 %v1_10001e04, i32* %r9.global-to-local, align 4
  %v1_10001e08 = load i32, i32* %r22.global-to-local, align 4
  %v2_10001e08 = add i32 %v1_10001e08, %v1_10001e04
  %v3_10001e08 = inttoptr i32 %v2_10001e08 to i32*
  %v4_10001e08 = load i32, i32* %v3_10001e08, align 4
  store i32 %v4_10001e08, i32* %r0.global-to-local, align 4
  store i32 %v2_10001e08, i32* %r9.global-to-local, align 4
  %v1_10001e10 = add i32 %v2_10001e08, 12
  %v2_10001e10 = inttoptr i32 %v1_10001e10 to i16*
  %v3_10001e10 = load i16, i16* %v2_10001e10, align 2
  %v4_10001e10 = zext i16 %v3_10001e10 to i32
  store i32 %v4_10001e10, i32* %r11.global-to-local, align 4
  %v1_10001e14 = load i32, i32* @r31, align 4
  %v2_10001e14 = add i32 %v1_10001e14, 16
  %v3_10001e14 = inttoptr i32 %v2_10001e14 to i32*
  store i32 %v4_10001e08, i32* %v3_10001e14, align 4
  %v0_10001e18 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e18 = trunc i32 %v0_10001e18 to i16
  %v2_10001e18 = load i32, i32* @r31, align 4
  %v3_10001e18 = add i32 %v2_10001e18, 20
  %v4_10001e18 = inttoptr i32 %v3_10001e18 to i16*
  store i16 %v1_10001e18, i16* %v4_10001e18, align 2
  %v0_10001e1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 8
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v0_10001e20 = load i32, i32* @r30, align 4
  %v1_10001e20 = add i32 %v0_10001e20, 12
  %v2_10001e20 = inttoptr i32 %v1_10001e20 to i32*
  %v3_10001e20 = load i32, i32* %v2_10001e20, align 4
  store i32 %v3_10001e20, i32* %r11.global-to-local, align 4
  %v2_10001e24 = add i32 %v0_10001e20, 4
  %v3_10001e24 = inttoptr i32 %v2_10001e24 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e24, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10001e2c = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10001e2c, i32* %r11.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e30 = add i32 %v0_10001e30, 14
  %v2_10001e30 = inttoptr i32 %v1_10001e30 to i16*
  %v3_10001e30 = load i16, i16* %v2_10001e30, align 2
  %v4_10001e30 = zext i16 %v3_10001e30 to i32
  store i32 %v4_10001e30, i32* %r0.global-to-local, align 4
  %v1_10001e34 = add i32 %v0_10001e30, 4
  %v2_10001e34 = inttoptr i32 %v1_10001e34 to i32*
  %v3_10001e34 = load i32, i32* %v2_10001e34, align 4
  store i32 %v3_10001e34, i32* %r10.global-to-local, align 4
  %v1_10001e38 = or i32 %v1_10001e2c, 1114112
  store i32 %v1_10001e38, i32* %r11.global-to-local, align 4
  %v2_10001e3c = load i32, i32* @r30, align 4
  %v3_10001e3c = add i32 %v2_10001e3c, 2
  %v4_10001e3c = inttoptr i32 %v3_10001e3c to i16*
  store i16 %v3_10001e30, i16* %v4_10001e3c, align 2
  %v0_10001e40 = load i32, i32* %r10.global-to-local, align 4
  %v1_10001e40 = load i32, i32* @r30, align 4
  %v2_10001e40 = add i32 %v1_10001e40, 8
  %v3_10001e40 = inttoptr i32 %v2_10001e40 to i32*
  store i32 %v0_10001e40, i32* %v3_10001e40, align 4
  %v0_10001e44 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001e44 = load i32, i32* @r30, align 4
  %v2_10001e44 = add i32 %v1_10001e44, 12
  %v3_10001e44 = inttoptr i32 %v2_10001e44 to i32*
  store i32 %v0_10001e44, i32* %v3_10001e44, align 4
  %v0_10001e48 = call i32 @function_10005f98()
  %v1_10001e48 = trunc i32 %v0_10001e48 to i16
  store i32 %v1_10001a80, i32* %r9.global-to-local, align 4
  %v3_10001e50 = load i32, i32* @r30, align 4
  %v4_10001e50 = add i32 %v3_10001e50, 14
  %v5_10001e50 = inttoptr i32 %v4_10001e50 to i16*
  store i16 %v1_10001e48, i16* %v5_10001e50, align 2
  %v0_10001e54 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001e54, i32* @r4, align 4
  %v0_10001e58 = load i32, i32* @r31, align 4
  %v1_10001e58 = add i32 %v0_10001e58, 40
  store i32 %v1_10001e58, i32* @r3, align 4
  %v0_10001e5c = load i32, i32* @r30, align 4
  %v1_10001e5c = add i32 %v0_10001e5c, 12
  %v2_10001e5c = inttoptr i32 %v1_10001e5c to i32*
  %v3_10001e5c = load i32, i32* %v2_10001e5c, align 4
  store i32 %v3_10001e5c, i32* %r0.global-to-local, align 4
  %v1_10001e60 = call i32 @__asm_rlwimi(i32 %v1_10001a80, i32 21, i32 10, i32 10)
  store i32 %v1_10001e60, i32* %r0.global-to-local, align 4
  %v1_10001e64 = call i32 @__asm_rlwimi(i32 %v1_10001aa4, i32 20, i32 11, i32 11)
  store i32 %v1_10001e64, i32* %r0.global-to-local, align 4
  %v1_10001e68 = call i32 @__asm_rlwimi(i32 %v1_10001abc, i32 19, i32 12, i32 12)
  store i32 %v1_10001e68, i32* %r0.global-to-local, align 4
  %v1_10001e6c = call i32 @__asm_rlwimi(i32 %v1_10001ad4, i32 18, i32 13, i32 13)
  store i32 %v1_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = call i32 @__asm_rlwimi(i32 %v1_10001aec, i32 17, i32 14, i32 14)
  store i32 %v1_10001e70, i32* %r0.global-to-local, align 4
  %v1_10001e74 = call i32 @__asm_rlwimi(i32 %v1_10001b04, i32 16, i32 15, i32 15)
  store i32 %v1_10001e74, i32* %r0.global-to-local, align 4
  %v1_10001e78 = load i32, i32* @r30, align 4
  %v2_10001e78 = add i32 %v1_10001e78, 12
  %v3_10001e78 = inttoptr i32 %v2_10001e78 to i32*
  store i32 %v1_10001e74, i32* %v3_10001e78, align 4
  %v0_10001e7c = call i32 @function_1000616c()
  store i32 %v0_10001e7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001e80

dec_label_pc_10001e80:                            ; preds = %dec_label_pc_10001b8c, %dec_label_pc_10001c8c, %dec_label_pc_10001dec
  %v3_10001e80 = load i32, i32* %stack_var_-408, align 4
  %v1_10001e84 = add i32 %v3_10001e80, 1
  store i32 %v1_10001e84, i32* %r9.global-to-local, align 4
  %v1_10001e88 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001e88 = icmp slt i32 %v1_10001e84, %v1_10001e88
  %v4_10001e88 = icmp eq i32 %v1_10001e84, %v1_10001e88
  store i1 %v4_10001e88, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001e84, i32* %stack_var_-408, align 4
  br i1 %v2_10001e88, label %dec_label_pc_10001b8c, label %dec_label_pc_10001e94.loopexit

dec_label_pc_10001e94.loopexit:                   ; preds = %dec_label_pc_10001e80
  %v0_10001ea0.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001ea0.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10001e94

dec_label_pc_10001e94:                            ; preds = %dec_label_pc_10001e94.loopexit, %dec_label_pc_10001b6c
  %v1_10001ea0.pre = phi i1 [ %v1_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v1_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001ea0.pre = phi i1 [ %v0_10001ea0.pre.pre, %dec_label_pc_10001e94.loopexit ], [ %v3_10001b6c, %dec_label_pc_10001b6c ]
  %v0_10001e94 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001e94 = icmp eq i32 %v0_10001e94, 0
  store i1 %v3_10001e94, i1* %cr2_eq.global-to-local, align 1
  %v0_10001e98 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e98 = add i32 %v0_10001e98, 40
  store i32 %v1_10001e98, i32* %r26.global-to-local, align 4
  %v1_10001e9c = add i32 %v0_10001e98, 20
  store i32 %v1_10001e9c, i32* @r31, align 4
  br label %dec_label_pc_10001ea0.outer

dec_label_pc_10001ea0.outer:                      ; preds = %dec_label_pc_10001f74, %dec_label_pc_10001e94
  %v1_10001ea0.ph = phi i1 [ %v1_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v1_10001f74, %dec_label_pc_10001f74 ]
  %v0_10001ea0.ph = phi i1 [ %v0_10001ea0.pre, %dec_label_pc_10001e94 ], [ %v0_10001f74, %dec_label_pc_10001f74 ]
  %v2_10001ea0 = or i1 %v1_10001ea0.ph, %v0_10001ea0.ph
  br label %dec_label_pc_10001ea0

dec_label_pc_10001ea0:                            ; preds = %dec_label_pc_10001ea0.outer, %dec_label_pc_10001ea0
  br i1 %v2_10001ea0, label %dec_label_pc_10001ea0, label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001ea0, %dec_label_pc_10001f74
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10001eb4 = load i32, i32* %r19.global-to-local, align 4
  %v4_10001eb4 = icmp eq i32 %v0_10001eb4, 65535
  store i1 %v4_10001eb4, i1* %cr4_eq.global-to-local, align 1
  %v0_10001eb8 = load i32, i32* @r31, align 4
  %v1_10001eb8 = urem i32 %v0_10001eb8, 65536
  store i32 %v1_10001eb8, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001ec4

dec_label_pc_10001ec4:                            ; preds = %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, %dec_label_pc_10001ea4
  %v0_10001ed0 = phi i1 [ %v0_10001ed0.pre, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ %v4_10001eb4, %dec_label_pc_10001ea4 ]
  %v0_10001ec4 = phi i32 [ %v1_10001f64, %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge ], [ 0, %dec_label_pc_10001ea4 ]
  %v1_10001ec4 = mul i32 %v0_10001ec4, 4
  store i32 %v1_10001ec4, i32* %r0.global-to-local, align 4
  %v0_10001ec8 = load i32, i32* %r23.global-to-local, align 4
  %v2_10001ec8 = add i32 %v0_10001ec8, %v1_10001ec4
  %v3_10001ec8 = inttoptr i32 %v2_10001ec8 to i32*
  %v4_10001ec8 = load i32, i32* %v3_10001ec8, align 4
  store i32 %v4_10001ec8, i32* @r29, align 4
  %v1_10001ecc = add i32 %v4_10001ec8, 20
  store i32 %v1_10001ecc, i32* %r28.global-to-local, align 4
  br i1 %v0_10001ed0, label %dec_label_pc_10001f7c, label %dec_label_pc_10001ed4

dec_label_pc_10001ed4:                            ; preds = %dec_label_pc_10001ec4
  %v1_10001ed4 = add i32 %v4_10001ec8, 40
  store i32 %v1_10001ed4, i32* @r3, align 4
  %v0_10001ed8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001ed8, i32* @r4, align 4
  %v0_10001edc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001edc, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001ee0:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c, %dec_label_pc_10001f90
  %v2_10001ee0 = phi i32 [ %v4_10001ec8, %dec_label_pc_10001ed4 ], [ %v0_10001f88, %dec_label_pc_10001f7c ], [ %v2_10001ee0.pre, %dec_label_pc_10001f90 ]
  %v0_10001ee0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ee0 = trunc i32 %v0_10001ee0 to i16
  %v3_10001ee0 = add i32 %v2_10001ee0, 10
  %v4_10001ee0 = inttoptr i32 %v3_10001ee0 to i16*
  store i16 %v1_10001ee0, i16* %v4_10001ee0, align 2
  %v0_10001ee8 = load i32, i32* @r29, align 4
  store i32 %v0_10001ee8, i32* @r3, align 4
  %v2_10001eec = call i32 @function_100043cc(i32 %v0_10001ee8, i32 20)
  %v3_10001eec = trunc i32 %v2_10001eec to i16
  store i32 %v2_10001eec, i32* %r3.global-to-local, align 4
  %v3_10001ef0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001ef0, i32* %r9.global-to-local, align 4
  %v3_10001ef4 = load i32, i32* @r29, align 4
  %v4_10001ef4 = add i32 %v3_10001ef4, 10
  %v5_10001ef4 = inttoptr i32 %v4_10001ef4 to i16*
  store i16 %v3_10001eec, i16* %v5_10001ef4, align 2
  %v0_10001ef8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ef8, i32* @r4, align 4
  %v0_10001efc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001efc = mul i32 %v0_10001efc, 16
  store i32 %v1_10001efc, i32* %r9.global-to-local, align 4
  %v0_10001f00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001f00 = trunc i32 %v0_10001f00 to i16
  %v3_10001f00 = add i32 %v0_10001ef8, 16
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 %v1_10001f00, i16* %v4_10001f00, align 2
  %v0_10001f04 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001f04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f04 = add i32 %v1_10001f04, %v0_10001f04
  store i32 %v2_10001f04, i32* %r9.global-to-local, align 4
  %v0_10001f08 = load i32, i32* @r30, align 4
  %v1_10001f0c = add i32 %v2_10001f04, 4
  %v2_10001f0c = inttoptr i32 %v1_10001f0c to i32*
  %v3_10001f0c = load i32, i32* %v2_10001f0c, align 4
  store i32 %v3_10001f0c, i32* %r11.global-to-local, align 4
  %v0_10001f10 = load i32, i32* @r31, align 4
  %v0_10001f14 = load i32, i32* @r29, align 4
  store i32 %v0_10001f14, i32* %r3.global-to-local, align 4
  %v1_10001f18 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f18 = add i32 %v1_10001f18, 4
  %v3_10001f18 = inttoptr i32 %v2_10001f18 to i32*
  store i32 %v3_10001f0c, i32* %v3_10001f18, align 4
  %v0_10001f1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10001f1c = add i32 %v0_10001f1c, 1
  store i32 %v1_10001f1c, i32* %r11.global-to-local, align 4
  %v1_10001f20 = load i32, i32* %r9.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 4
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f1c, i32* %v3_10001f20, align 4
  %v0_10001f24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001f24 = add i32 %v0_10001f24, 8
  %v2_10001f24 = inttoptr i32 %v1_10001f24 to i32*
  %v3_10001f24 = load i32, i32* %v2_10001f24, align 4
  store i32 %v3_10001f24, i32* %r0.global-to-local, align 4
  %v1_10001f28 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001f28 = add i32 %v1_10001f28, 8
  %v3_10001f28 = inttoptr i32 %v2_10001f28 to i32*
  store i32 %v3_10001f24, i32* %v3_10001f28, align 4
  %v4_10001f2c = call i32 @function_10004430(i32 %v0_10001f14, i32 %v0_10001ef8, i32 %v0_10001f08, i32 %v0_10001f10)
  %v5_10001f2c = trunc i32 %v4_10001f2c to i16
  store i32 %v4_10001f2c, i32* %r3.global-to-local, align 4
  %v3_10001f30 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f30, i32* %r7.global-to-local, align 4
  %v0_10001f34 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001f34 = add i32 %v0_10001f34, 2
  %v2_10001f34 = inttoptr i32 %v1_10001f34 to i16*
  %v3_10001f34 = load i16, i16* %v2_10001f34, align 2
  %v4_10001f34 = zext i16 %v3_10001f34 to i32
  store i32 %v4_10001f34, i32* %r0.global-to-local, align 4
  %v0_10001f38 = load i32, i32* @r29, align 4
  %v1_10001f3c = mul i32 %v3_10001f30, 24
  store i32 %v1_10001f3c, i32* %r7.global-to-local, align 4
  %v4_10001f40 = add i32 %v0_10001f34, 16
  %v5_10001f40 = inttoptr i32 %v4_10001f40 to i16*
  store i16 %v5_10001f2c, i16* %v5_10001f40, align 2
  %v0_10001f44 = load i32, i32* %r26.global-to-local, align 4
  %v0_10001f48 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10001f48, i32* %r3.global-to-local, align 4
  %v0_10001f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_10001f4c = load i32, i32* %r20.global-to-local, align 4
  %v2_10001f4c = add i32 %v1_10001f4c, %v0_10001f4c
  store i32 %v2_10001f4c, i32* %r7.global-to-local, align 4
  %v0_10001f54 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f54 = trunc i32 %v0_10001f54 to i16
  %v3_10001f54 = add i32 %v2_10001f4c, 2
  %v4_10001f54 = inttoptr i32 %v3_10001f54 to i16*
  store i16 %v1_10001f54, i16* %v4_10001f54, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268443488, i32* @lr, align 4
  %v6_10001f5c = call i32 @function_10009e2c(i32 %v0_10001f48, i32 %v0_10001f38, i32 %v0_10001f44, i32 16384, i32 %v2_10001f4c, i32 16)
  store i32 %v6_10001f5c, i32* %r3.global-to-local, align 4
  %v3_10001f60 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10001f60, i32* %r9.global-to-local, align 4
  %v1_10001f64 = add i32 %v3_10001f60, 1
  store i32 %v1_10001f64, i32* %r0.global-to-local, align 4
  %v1_10001f68 = load i32, i32* %r21.global-to-local, align 4
  %v2_10001f68 = icmp slt i32 %v1_10001f64, %v1_10001f68
  %v4_10001f68 = icmp eq i32 %v1_10001f64, %v1_10001f68
  store i1 %v4_10001f68, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001f64, i32* %stack_var_-408, align 4
  br i1 %v2_10001f68, label %dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge, label %dec_label_pc_10001f74

dec_label_pc_10001ee0.dec_label_pc_10001ec4_crit_edge: ; preds = %dec_label_pc_10001ee0
  %v0_10001ed0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10001ec4

dec_label_pc_10001f74:                            ; preds = %dec_label_pc_10001ee0
  %v0_10001f74 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10001f74 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10001f74 = or i1 %v0_10001f74, %v1_10001f74
  br i1 %v2_10001f74, label %dec_label_pc_10001ea0.outer, label %dec_label_pc_10001ea4

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001ec4
  %v0_10001f7c = call i32 @function_10005f98()
  %v1_10001f7c = trunc i32 %v0_10001f7c to i16
  %v0_10001f80 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10001f80, i32* @r4, align 4
  %v3_10001f84 = load i32, i32* @r29, align 4
  %v4_10001f84 = add i32 %v3_10001f84, 4
  %v5_10001f84 = inttoptr i32 %v4_10001f84 to i16*
  store i16 %v1_10001f7c, i16* %v5_10001f84, align 2
  %v0_10001f88 = load i32, i32* @r29, align 4
  %v1_10001f88 = add i32 %v0_10001f88, 40
  store i32 %v1_10001f88, i32* @r3, align 4
  %v0_10001f8c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001f8c, label %dec_label_pc_10001ee0, label %dec_label_pc_10001f90

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001ed4, %dec_label_pc_10001f7c
  %v0_10001f90 = call i32 @function_1000616c()
  store i32 %v0_10001f90, i32* %r3.global-to-local, align 4
  %v2_10001ee0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001ee0

; uselistorder directives
  uselistorder i32 %v0_10001f88, { 1, 0 }
  uselistorder i1 %v1_10001f74, { 1, 0 }
  uselistorder i1 %v0_10001f74, { 1, 0 }
  uselistorder i32 %v1_10001f64, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10001f2c, { 1, 0 }
  uselistorder i32 %v0_10001ef8, { 1, 0, 2 }
  uselistorder i32 %v2_10001eec, { 1, 0 }
  uselistorder i32 %v1_10001ec4, { 1, 0 }
  uselistorder i32 %v1_10001e84, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10001e08, { 1, 0, 2 }
  uselistorder i32 %v1_10001e04, { 1, 0 }
  uselistorder i32 %v1_10001d9c, { 1, 0 }
  uselistorder i32 %v1_10001d68, { 1, 0 }
  uselistorder i32 %v0_10001ce8, { 1, 0 }
  uselistorder i32 %v2_10001cdc, { 1, 2, 0 }
  uselistorder i1 %v4_10001c60, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10001cc0, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10001c9c, { 1, 0 }
  uselistorder i32 %v1_10001a44, { 1, 0 }
  uselistorder i8 %v5_10001a30, { 1, 0 }
  uselistorder i8 %v5_100019f8, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268442528, { 1, 0 }
  uselistorder label %dec_label_pc_10001f90, { 1, 0 }
  uselistorder label %dec_label_pc_10001ee0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10001e80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001dec, { 1, 0 }
  uselistorder label %dec_label_pc_10001cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001c7c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001bac, { 1, 0 }
}

define i32 @function_10001f98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001f98:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10001f9c = load i32, i32* @lr, align 4
  store i32 %v0_10001f9c, i32* %r0.global-to-local, align 4
  %v0_10001fa0 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10001fb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001fa0, i32* %r21.global-to-local, align 4
  %v0_10001fe8 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001ff0 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268443660, i32* @lr, align 4
  %v2_10002008 = call i32 @function_1000a204(i32 16, i32 16)
  store i32 %v2_10002008, i32* %r22.global-to-local, align 4
  %v0_10002014 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002014, i32* %r3.global-to-local, align 4
  store i32 268443676, i32* @lr, align 4
  %v2_10002018 = call i32 @function_1000a204(i32 %v0_10002014, i32 4)
  %v0_1000201c = load i32, i32* @r28, align 4
  store i32 %v2_10002018, i32* %r23.global-to-local, align 4
  %v0_1000202c = load i32, i32* @r29, align 4
  store i32 %v0_1000202c, i32* %r3.global-to-local, align 4
  store i32 268443700, i32* @lr, align 4
  %v4_10002030 = inttoptr i32 %v0_1000201c to i32*
  %v5_10002030 = call i32 @function_100006a8(i32 %v0_1000202c, i32* %v4_10002030, i32 2, i32 0)
  %v5_10002040 = trunc i32 %v5_10002030 to i8
  %v0_10002048 = load i32, i32* @r28, align 4
  %v0_1000204c = load i32, i32* @r29, align 4
  store i32 %v0_1000204c, i32* %r3.global-to-local, align 4
  store i32 268443732, i32* @lr, align 4
  %v4_10002050 = inttoptr i32 %v0_10002048 to i32*
  %v5_10002050 = call i32 @function_100006a8(i32 %v0_1000204c, i32* %v4_10002050, i32 3, i32 65535)
  %v0_10002054 = load i32, i32* @r28, align 4
  store i32 %v5_10002050, i32* @r31, align 4
  %v0_10002064 = load i32, i32* @r29, align 4
  store i32 %v0_10002064, i32* %r3.global-to-local, align 4
  store i32 268443756, i32* @lr, align 4
  %v4_10002068 = inttoptr i32 %v0_10002054 to i32*
  %v5_10002068 = call i32 @function_100006a8(i32 %v0_10002064, i32* %v4_10002068, i32 4, i32 64)
  %v0_1000206c = load i32, i32* @r28, align 4
  %v5_10002078 = trunc i32 %v5_10002068 to i8
  %v0_10002080 = load i32, i32* @r29, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  store i32 268443784, i32* @lr, align 4
  %v4_10002084 = inttoptr i32 %v0_1000206c to i32*
  %v5_10002084 = call i32 @function_100006a8(i32 %v0_10002080, i32* %v4_10002084, i32 5, i32 1)
  %v1_1000208c = urem i32 %v5_10002084, 256
  %v0_10002098 = load i32, i32* @r28, align 4
  %v0_100020a0 = load i32, i32* @r29, align 4
  store i32 %v0_100020a0, i32* %r3.global-to-local, align 4
  store i32 268443816, i32* @lr, align 4
  %v4_100020a4 = inttoptr i32 %v0_10002098 to i32*
  %v5_100020a4 = call i32 @function_100006a8(i32 %v0_100020a0, i32* %v4_100020a4, i32 7, i32 65535)
  %v0_100020a8 = load i32, i32* @r28, align 4
  %v5_100020b4 = trunc i32 %v5_100020a4 to i16
  %v0_100020bc = load i32, i32* @r29, align 4
  store i32 %v0_100020bc, i32* %r3.global-to-local, align 4
  store i32 268443844, i32* @lr, align 4
  %v4_100020c0 = inttoptr i32 %v0_100020a8 to i32*
  %v5_100020c0 = call i32 @function_100006a8(i32 %v0_100020bc, i32* %v4_100020c0, i32 11, i32 0)
  %v0_100020c4 = load i32, i32* @r28, align 4
  %v1_100020c8 = urem i32 %v5_100020c0, 256
  %v0_100020d8 = load i32, i32* @r29, align 4
  store i32 %v0_100020d8, i32* %r3.global-to-local, align 4
  store i32 268443872, i32* @lr, align 4
  %v4_100020dc = inttoptr i32 %v0_100020c4 to i32*
  %v5_100020dc = call i32 @function_100006a8(i32 %v0_100020d8, i32* %v4_100020dc, i32 12, i32 1)
  %v0_100020e0 = load i32, i32* @r28, align 4
  %v1_100020ec = urem i32 %v5_100020dc, 256
  %v0_100020f0 = load i32, i32* @r29, align 4
  store i32 %v0_100020f0, i32* %r3.global-to-local, align 4
  store i32 268443896, i32* @lr, align 4
  %v4_100020f4 = inttoptr i32 %v0_100020e0 to i32*
  %v5_100020f4 = call i32 @function_100006a8(i32 %v0_100020f0, i32* %v4_100020f4, i32 13, i32 1)
  %v0_100020f8 = load i32, i32* @r28, align 4
  %v1_10002104 = urem i32 %v5_100020f4, 256
  %v0_10002108 = load i32, i32* @r29, align 4
  store i32 %v0_10002108, i32* %r3.global-to-local, align 4
  store i32 268443920, i32* @lr, align 4
  %v4_1000210c = inttoptr i32 %v0_100020f8 to i32*
  %v5_1000210c = call i32 @function_100006a8(i32 %v0_10002108, i32* %v4_1000210c, i32 14, i32 0)
  %v0_10002110 = load i32, i32* @r28, align 4
  %v1_1000211c = urem i32 %v5_1000210c, 256
  %v0_10002120 = load i32, i32* @r29, align 4
  store i32 %v0_10002120, i32* %r3.global-to-local, align 4
  store i32 268443944, i32* @lr, align 4
  %v4_10002124 = inttoptr i32 %v0_10002110 to i32*
  %v5_10002124 = call i32 @function_100006a8(i32 %v0_10002120, i32* %v4_10002124, i32 15, i32 0)
  %v0_10002128 = load i32, i32* @r28, align 4
  %v1_10002134 = urem i32 %v5_10002124, 256
  %v0_10002138 = load i32, i32* @r29, align 4
  store i32 %v0_10002138, i32* %r3.global-to-local, align 4
  store i32 268443968, i32* @lr, align 4
  %v4_1000213c = inttoptr i32 %v0_10002128 to i32*
  %v5_1000213c = call i32 @function_100006a8(i32 %v0_10002138, i32* %v4_1000213c, i32 16, i32 0)
  %v0_10002148 = load i32, i32* @r28, align 4
  %v1_1000214c = urem i32 %v5_1000213c, 256
  %v0_10002150 = load i32, i32* @r29, align 4
  store i32 %v0_10002150, i32* %r3.global-to-local, align 4
  store i32 268443992, i32* @lr, align 4
  %v4_10002154 = inttoptr i32 %v0_10002148 to i32*
  %v5_10002154 = call i32 @function_100006a8(i32 %v0_10002150, i32* %v4_10002154, i32 0, i32 768)
  %v0_10002158 = load i32, i32* @r28, align 4
  store i32 %v5_10002154, i32* %r25.global-to-local, align 4
  %v0_10002168 = load i32, i32* @r29, align 4
  store i32 %v0_10002168, i32* %r3.global-to-local, align 4
  store i32 268444016, i32* @lr, align 4
  %v4_1000216c = inttoptr i32 %v0_10002158 to i32*
  %v5_1000216c = call i32 @function_100006a8(i32 %v0_10002168, i32* %v4_1000216c, i32 1, i32 1)
  %v1_10002174 = urem i32 %v5_1000216c, 256
  store i32 %v1_10002174, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444036, i32* @lr, align 4
  %v3_10002180 = call i32 @function_10009ea8(i32 2, i32 3, i32 6)
  store i32 %v3_10002180, i32* %r3.global-to-local, align 4
  %v3_10002184 = icmp eq i32 %v3_10002180, -1
  store i1 %v3_10002184, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002180, i32* %r24.global-to-local, align 4
  br i1 %v3_10002184, label %dec_label_pc_10002344, label %dec_label_pc_10002190

dec_label_pc_10002190:                            ; preds = %dec_label_pc_10001f98
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000219c = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268444076, i32* @lr, align 4
  %v4_100021a8 = call i32 @function_10009e6c(i32 0, i32 3, i32 %v2_1000219c, i32 4)
  store i32 %v4_100021a8, i32* %r3.global-to-local, align 4
  %v3_100021ac = icmp eq i32 %v4_100021a8, -1
  store i1 %v3_100021ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100021ac, label %dec_label_pc_1000233c, label %dec_label_pc_100021b4

dec_label_pc_100021b4:                            ; preds = %dec_label_pc_10002190
  %v0_100021b4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100021b4 = icmp slt i32 %v0_100021b4, 0
  %v3_100021b4 = icmp eq i32 %v0_100021b4, 0
  store i1 %v1_100021b4, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_100021b4, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100021c0 = load i32, i32* @r31, align 4
  %v1_100021c0 = urem i32 %v0_100021c0, 65536
  store i32 %v1_100021c0, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_100021b4, 1
  br i1 %tmp49, label %dec_label_pc_100024dc, label %dec_label_pc_100021c8

dec_label_pc_100021c8:                            ; preds = %dec_label_pc_100021b4
  %v4_100021c8 = sext i16 %v5_100020b4 to i32
  store i32 %v4_100021c8, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_1000226c = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002278 = ptrtoint i32* %stack_var_-384 to i32
  %v2_1000227c = ptrtoint i32* %stack_var_-404 to i32
  %v4_100022b4 = zext i16 %tmp13 to i32
  %v1_100022e4 = and i32 %tmp, 1179648
  %v3_100023f8 = icmp eq i32 %v1_1000208c, 0
  %v4_10002418 = sext i8 %v5_10002040 to i32
  %v4_10002420 = sext i8 %v5_10002078 to i32
  %v1_100022e8 = and i32 %tmp, 327680
  %v3_100022e8 = icmp eq i32 %v1_100022e8, 0
  %v4_100022f0 = icmp eq i32 %v1_100022e4, 1179648
  br label %dec_label_pc_100021d4

dec_label_pc_100021d4:                            ; preds = %dec_label_pc_100024c8, %dec_label_pc_100022fc, %dec_label_pc_100021c8
  %v0_100021d4 = load i32, i32* %r25.global-to-local, align 4
  %v1_100021d4 = add i32 %v0_100021d4, 40
  store i32 %v1_100021d4, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e453 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  store i32 %v3_100021e453, i32* %r3.global-to-local, align 4
  %v3_100021e855 = icmp eq i32 %v3_100021e453, -1
  store i1 %v3_100021e855, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e453, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e855, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100021f4:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4
  store i32 3, i32* @r4, align 4
  store i32 268444164, i32* @lr, align 4
  %v1_10002200 = call i32 @function_10009070(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_1000220c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000220c, i32* %r3.global-to-local, align 4
  store i32 268444184, i32* @lr, align 4
  %v2_10002214 = call i32 @function_10009070(i32 %v0_1000220c)
  store i32 %v2_10002214, i32* %r3.global-to-local, align 4
  %v3_10002218 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002220 = mul i32 %v3_10002218, 24
  store i32 %v1_10002220, i32* %r0.global-to-local, align 4
  %v0_10002228 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002228 = add i32 %v0_10002228, %v1_10002220
  store i32 %v2_10002228, i32* %r11.global-to-local, align 4
  %v1_1000222c = add i32 %v2_10002228, 20
  %v2_1000222c = inttoptr i32 %v1_1000222c to i8*
  %v3_1000222c = load i8, i8* %v2_1000222c, align 1
  %v4_1000222c = zext i8 %v3_1000222c to i32
  store i32 %v4_1000222c, i32* %r9.global-to-local, align 4
  %v3_10002230 = icmp eq i8 %v3_1000222c, 31
  store i1 %v3_10002230, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_1000222c, 32
  %v1_10002308 = add i32 %v2_10002228, 16
  %v2_10002308 = inttoptr i32 %v1_10002308 to i32*
  %v3_10002308 = load i32, i32* %v2_10002308, align 4
  br i1 %tmp50, label %dec_label_pc_10002308, label %dec_label_pc_10002238

dec_label_pc_10002238:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r0.global-to-local, align 4
  %v0_10002240 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002240, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002244:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.0 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  store i32 %v4_100021c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000224c:                            ; preds = %dec_label_pc_10002330, %dec_label_pc_10002244
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002330 ], [ %stack_var_-396.0, %dec_label_pc_10002244 ]
  %storemerge = phi i16 [ %v1_10002330, %dec_label_pc_10002330 ], [ %v5_100020b4, %dec_label_pc_10002244 ]
  %v0_10002254 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002254, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000225c.20 to i32), i32* @lr, align 4
  %v0_10002258 = call i32 @function_10009ca8()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268444260, i32* @lr, align 4
  %v0_10002260 = call i32 @function_10009528()
  store i32 %v0_10002260, i32* %r3.global-to-local, align 4
  store i32 %v0_10002260, i32* @r31, align 4
  %v4_100022a8 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_100022b8 = zext i16 %storemerge to i32
  %v4_100022bc = icmp eq i16 %storemerge, %tmp13
  %v4_100022a8.not = xor i1 %v4_100022a8, true
  br label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_100022c4, %dec_label_pc_1000224c
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002278, i32* %r7.global-to-local, align 4
  store i32 %v2_1000227c, i32* %r8.global-to-local, align 4
  %v0_10002280 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002280, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268444300, i32* @lr, align 4
  %v6_10002288 = call i32 @function_10009db4(i32 %v0_10002280, i32 %v2_1000226c, i32 256, i32 16384, i32 %v2_10002278, i32 %v2_1000227c)
  store i32 %v6_10002288, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002294 = icmp eq i32 %v6_10002288, -1
  store i1 %v3_10002294, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002294, label %dec_label_pc_10002344, label %dec_label_pc_100022a0

dec_label_pc_100022a0:                            ; preds = %dec_label_pc_10002268
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_100022a8, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002288, 41
  %or.cond = or i1 %tmp51, %v4_100022a8.not
  br i1 %or.cond, label %dec_label_pc_100022c4, label %dec_label_pc_100022b4

dec_label_pc_100022b4:                            ; preds = %dec_label_pc_100022a0
  store i32 %v4_100022b4, i32* %r0.global-to-local, align 4
  store i32 %v4_100022b8, i32* %r8.global-to-local, align 4
  store i1 %v4_100022bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022bc, label %dec_label_pc_100022e0, label %dec_label_pc_100022c4

dec_label_pc_100022c4:                            ; preds = %dec_label_pc_100022a0, %dec_label_pc_100022f8, %dec_label_pc_100022b4
  store i32 268444360, i32* @lr, align 4
  %v0_100022c4 = call i32 @function_10009528()
  %v0_100022c8 = load i32, i32* @r31, align 4
  %v2_100022c8 = sub i32 %v0_100022c4, %v0_100022c8
  store i32 %v2_100022c8, i32* %r3.global-to-local, align 4
  %v3_100022cc = icmp eq i32 %v2_100022c8, 10
  store i1 %v3_100022cc, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_100022c8, 11
  br i1 %tmp52, label %dec_label_pc_10002268, label %dec_label_pc_100022d4

dec_label_pc_100022d4:                            ; preds = %dec_label_pc_100022c4
  %v0_100022d4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022d4, i32* %r3.global-to-local, align 4
  store i32 268444380, i32* @lr, align 4
  %v0_100022d8 = call i32 @function_10009158()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444136, i32* @lr, align 4
  %v3_100021e4 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  store i32 %v3_100021e4, i32* %r3.global-to-local, align 4
  %v3_100021e8 = icmp eq i32 %v3_100021e4, -1
  store i1 %v3_100021e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100021e4, i32* %r28.global-to-local, align 4
  br i1 %v3_100021e8, label %dec_label_pc_100024c8, label %dec_label_pc_100021f4

dec_label_pc_100022e0:                            ; preds = %dec_label_pc_100022b4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_100022e4, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_100022f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100022f0, label %dec_label_pc_100023a4, label %dec_label_pc_100022f8

dec_label_pc_100022f8:                            ; preds = %dec_label_pc_100022e0
  br i1 %v3_100022e8, label %dec_label_pc_100022c4, label %dec_label_pc_100022fc

dec_label_pc_100022fc:                            ; preds = %dec_label_pc_100022f8
  %v0_100022fc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100022fc, i32* %r3.global-to-local, align 4
  store i32 268444420, i32* @lr, align 4
  %v0_10002300 = call i32 @function_10009158()
  store i32 %v0_10002300, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100021d4

dec_label_pc_10002308:                            ; preds = %dec_label_pc_100021f4
  store i32 %v3_10002308, i32* %r29.global-to-local, align 4
  %v0_1000230c = call i32 @function_10005f98()
  store i32 %v0_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-408, align 4
  %v1_10002314 = mul i32 %v3_10002310, 24
  %v1_10002318 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002318 = add i32 %v1_10002318, %v1_10002314
  store i32 %v2_10002318, i32* %r9.global-to-local, align 4
  %v1_1000231c = add i32 %v2_10002318, 20
  %v2_1000231c = inttoptr i32 %v1_1000231c to i8*
  %v3_1000231c = load i8, i8* %v2_1000231c, align 1
  %v4_1000231c = zext i8 %v3_1000231c to i32
  store i32 %v4_1000231c, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_1000231c, 64
  %v2_10002320 = zext i8 %tmp56 to i32
  %v3_10002320 = lshr i32 %v0_1000230c, %v2_10002320
  store i32 %v3_10002320, i32* %r3.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002324 = add i32 %v3_10002320, %v0_10002324
  store i32 %v2_10002324, i32* %r29.global-to-local, align 4
  %v0_1000232c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000232c, label %dec_label_pc_10002330, label %dec_label_pc_10002244

dec_label_pc_10002330:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002238
  %stack_var_-396.2 = phi i32 [ %v2_10002324, %dec_label_pc_10002308 ], [ %v3_10002308, %dec_label_pc_10002238 ]
  %v0_10002330 = call i32 @function_10005f98()
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  store i32 %v0_10002330, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000224c

dec_label_pc_1000233c:                            ; preds = %dec_label_pc_10002190
  %v0_1000233c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_1000233c, i32* %r3.global-to-local, align 4
  store i32 268444484, i32* @lr, align 4
  %v0_10002340 = call i32 @function_10009158()
  store i32 %v0_10002340, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002344

dec_label_pc_10002344:                            ; preds = %dec_label_pc_10002268, %dec_label_pc_10001f98, %dec_label_pc_1000233c
  store i32 %v0_10001fb0, i32* %r0.global-to-local, align 4
  %v1_10002358 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001fa0)
  store i32 %v0_10001fe8, i32* %r28.global-to-local, align 4
  store i32 %v0_10001ff0, i32* %r29.global-to-local, align 4
  %v0_100023a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100023a0

dec_label_pc_100023a4:                            ; preds = %dec_label_pc_100022e0
  %v3_100023a4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023a4, i32* %r29.global-to-local, align 4
  %v0_100023a8 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100023a8, i32* @r3, align 4
  %v0_100023ac = load i32, i32* @r30, align 4
  %v1_100023ac = add i32 %v0_100023ac, 2
  %v2_100023ac = inttoptr i32 %v1_100023ac to i16*
  %v3_100023ac = load i16, i16* %v2_100023ac, align 2
  %v4_100023ac = zext i16 %v3_100023ac to i32
  store i32 %v4_100023ac, i32* %r11.global-to-local, align 4
  %v1_100023b0 = mul i32 %v3_100023a4, 16
  store i32 %v1_100023b0, i32* %r9.global-to-local, align 4
  %v1_100023b4 = mul i32 %v3_100023a4, 4
  store i32 %v1_100023b4, i32* @r29, align 4
  %v1_100023b8 = load i32, i32* %r22.global-to-local, align 4
  %v3_100023b8 = add i32 %v1_100023b8, %v1_100023b0
  %v4_100023b8 = inttoptr i32 %v3_100023b8 to i32*
  store i32 %tmp14, i32* %v4_100023b8, align 4
  %v0_100023bc = load i32, i32* %r22.global-to-local, align 4
  %v1_100023bc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023bc = add i32 %v1_100023bc, %v0_100023bc
  store i32 %v2_100023bc, i32* %r9.global-to-local, align 4
  %v0_100023c0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100023c0 = trunc i32 %v0_100023c0 to i16
  %v3_100023c0 = add i32 %v2_100023bc, 14
  %v4_100023c0 = inttoptr i32 %v3_100023c0 to i16*
  store i16 %v1_100023c0, i16* %v4_100023c0, align 2
  %v0_100023c4 = load i32, i32* @r30, align 4
  %v1_100023c4 = add i32 %v0_100023c4, 4
  %v2_100023c4 = inttoptr i32 %v1_100023c4 to i32*
  %v3_100023c4 = load i32, i32* %v2_100023c4, align 4
  store i32 %v3_100023c4, i32* %r0.global-to-local, align 4
  %v0_100023c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100023c8 = trunc i32 %v0_100023c8 to i16
  %v2_100023c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100023c8 = add i32 %v2_100023c8, 12
  %v4_100023c8 = inttoptr i32 %v3_100023c8 to i16*
  store i16 %v1_100023c8, i16* %v4_100023c8, align 2
  %v0_100023cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100023cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100023cc = add i32 %v1_100023cc, 4
  %v3_100023cc = inttoptr i32 %v2_100023cc to i32*
  store i32 %v0_100023cc, i32* %v3_100023cc, align 4
  %v0_100023d0 = load i32, i32* @r30, align 4
  %v1_100023d0 = add i32 %v0_100023d0, 8
  %v2_100023d0 = inttoptr i32 %v1_100023d0 to i32*
  %v3_100023d0 = load i32, i32* %v2_100023d0, align 4
  store i32 %v3_100023d0, i32* %r0.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, 8
  %v3_100023d4 = inttoptr i32 %v2_100023d4 to i32*
  store i32 %v3_100023d0, i32* %v3_100023d4, align 4
  store i32 268444636, i32* @lr, align 4
  %v0_100023d8 = call i32 @function_1000a0ac()
  store i32 %v0_100023d8, i32* %r3.global-to-local, align 4
  %v3_100023dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100023dc, i32* %r0.global-to-local, align 4
  %v1_100023e0 = load i32, i32* @r29, align 4
  %v2_100023e0 = load i32, i32* %r23.global-to-local, align 4
  %v3_100023e0 = add i32 %v2_100023e0, %v1_100023e0
  %v4_100023e0 = inttoptr i32 %v3_100023e0 to i32*
  store i32 %v0_100023d8, i32* %v4_100023e0, align 4
  %v0_100023e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100023e4 = mul i32 %v0_100023e4, 4
  store i32 %v1_100023e4, i32* %r0.global-to-local, align 4
  %v0_100023e8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023e8 = add i32 %v0_100023e8, %v1_100023e4
  %v3_100023e8 = inttoptr i32 %v2_100023e8 to i32*
  %v4_100023e8 = load i32, i32* %v3_100023e8, align 4
  store i32 %v4_100023e8, i32* @r31, align 4
  store i32 %v1_1000208c, i32* %r0.global-to-local, align 4
  %v1_100023f0 = inttoptr i32 %v4_100023e8 to i32*
  %v2_100023f0 = load i32, i32* %v1_100023f0, align 4
  store i32 %v2_100023f0, i32* %r9.global-to-local, align 4
  %v1_100023f4 = add i32 %v4_100023e8, 20
  store i32 %v1_100023f4, i32* @r30, align 4
  store i1 %v3_100023f8, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10002400 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002400, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10002408 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_1000240c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000240c = trunc i32 %v0_1000240c to i16
  %v2_1000240c = load i32, i32* @r31, align 4
  %v3_1000240c = add i32 %v2_1000240c, 4
  %v4_1000240c = inttoptr i32 %v3_1000240c to i16*
  store i16 %v1_1000240c, i16* %v4_1000240c, align 2
  %v1_10002410 = load i32, i32* @r31, align 4
  %v2_10002410 = inttoptr i32 %v1_10002410 to i32*
  store i32 %v1_10002408, i32* %v2_10002410, align 4
  %v0_10002414 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002414 = trunc i32 %v0_10002414 to i16
  %v2_10002414 = load i32, i32* @r31, align 4
  %v3_10002414 = add i32 %v2_10002414, 2
  %v4_10002414 = inttoptr i32 %v3_10002414 to i16*
  store i16 %v1_10002414, i16* %v4_10002414, align 2
  store i32 %v4_10002418, i32* %r9.global-to-local, align 4
  %v2_1000241c = load i32, i32* @r31, align 4
  %v3_1000241c = add i32 %v2_1000241c, 1
  %v4_1000241c = inttoptr i32 %v3_1000241c to i8*
  store i8 %v5_10002040, i8* %v4_1000241c, align 1
  store i32 %v4_10002420, i32* %r0.global-to-local, align 4
  %v2_10002424 = load i32, i32* @r31, align 4
  %v3_10002424 = add i32 %v2_10002424, 8
  %v4_10002424 = inttoptr i32 %v3_10002424 to i8*
  store i8 %v5_10002078, i8* %v4_10002424, align 1
  %v0_10002428 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002428, label %dec_label_pc_10002434, label %dec_label_pc_1000242c

dec_label_pc_1000242c:                            ; preds = %dec_label_pc_100023a4
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002430 = load i32, i32* @r31, align 4
  %v3_10002430 = add i32 %v2_10002430, 6
  %v4_10002430 = inttoptr i32 %v3_10002430 to i16*
  store i16 16384, i16* %v4_10002430, align 2
  br label %dec_label_pc_10002434

dec_label_pc_10002434:                            ; preds = %dec_label_pc_100023a4, %dec_label_pc_1000242c
  %v2_1000243c = load i32, i32* @r31, align 4
  %v3_1000243c = add i32 %v2_1000243c, 9
  %v4_1000243c = inttoptr i32 %v3_1000243c to i8*
  store i8 6, i8* %v4_1000243c, align 1
  %v3_10002440 = load i32, i32* @global_var_1001c2d0.14, align 4
  store i32 %v3_10002440, i32* %r0.global-to-local, align 4
  %v1_10002444 = load i32, i32* @r31, align 4
  %v2_10002444 = add i32 %v1_10002444, 12
  %v3_10002444 = inttoptr i32 %v2_10002444 to i32*
  store i32 %v3_10002440, i32* %v3_10002444, align 4
  %v3_10002448 = load i32, i32* %stack_var_-408, align 4
  %v1_1000244c = mul i32 %v3_10002448, 16
  store i32 %v1_1000244c, i32* %r9.global-to-local, align 4
  %v1_10002450 = load i32, i32* %r22.global-to-local, align 4
  %v2_10002450 = add i32 %v1_10002450, %v1_1000244c
  %v3_10002450 = inttoptr i32 %v2_10002450 to i32*
  %v4_10002450 = load i32, i32* %v3_10002450, align 4
  store i32 %v4_10002450, i32* %r0.global-to-local, align 4
  store i32 %v2_10002450, i32* %r9.global-to-local, align 4
  %v1_10002458 = add i32 %v2_10002450, 12
  %v2_10002458 = inttoptr i32 %v1_10002458 to i16*
  %v3_10002458 = load i16, i16* %v2_10002458, align 2
  %v4_10002458 = zext i16 %v3_10002458 to i32
  store i32 %v4_10002458, i32* %r11.global-to-local, align 4
  %v1_1000245c = load i32, i32* @r31, align 4
  %v2_1000245c = add i32 %v1_1000245c, 16
  %v3_1000245c = inttoptr i32 %v2_1000245c to i32*
  store i32 %v4_10002450, i32* %v3_1000245c, align 4
  %v0_10002460 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002460 = trunc i32 %v0_10002460 to i16
  %v2_10002460 = load i32, i32* @r31, align 4
  %v3_10002460 = add i32 %v2_10002460, 20
  %v4_10002460 = inttoptr i32 %v3_10002460 to i16*
  store i16 %v1_10002460, i16* %v4_10002460, align 2
  %v0_10002464 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002464 = add i32 %v0_10002464, 8
  %v2_10002464 = inttoptr i32 %v1_10002464 to i32*
  %v3_10002464 = load i32, i32* %v2_10002464, align 4
  store i32 %v3_10002464, i32* %r0.global-to-local, align 4
  %v0_10002468 = load i32, i32* @r30, align 4
  %v1_10002468 = add i32 %v0_10002468, 12
  %v2_10002468 = inttoptr i32 %v1_10002468 to i32*
  %v3_10002468 = load i32, i32* %v2_10002468, align 4
  store i32 %v3_10002468, i32* %r11.global-to-local, align 4
  %v2_1000246c = add i32 %v0_10002468, 4
  %v3_1000246c = inttoptr i32 %v2_1000246c to i32*
  store i32 %v3_10002464, i32* %v3_1000246c, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10002474 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10002474, i32* %r11.global-to-local, align 4
  %v0_10002478 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002478 = add i32 %v0_10002478, 14
  %v2_10002478 = inttoptr i32 %v1_10002478 to i16*
  %v3_10002478 = load i16, i16* %v2_10002478, align 2
  %v4_10002478 = zext i16 %v3_10002478 to i32
  store i32 %v4_10002478, i32* %r0.global-to-local, align 4
  %v1_1000247c = add i32 %v0_10002478, 4
  %v2_1000247c = inttoptr i32 %v1_1000247c to i32*
  %v3_1000247c = load i32, i32* %v2_1000247c, align 4
  store i32 %v3_1000247c, i32* %r10.global-to-local, align 4
  %v1_10002480 = or i32 %v1_10002474, 1114112
  store i32 %v1_10002480, i32* %r11.global-to-local, align 4
  %v2_10002484 = load i32, i32* @r30, align 4
  %v3_10002484 = add i32 %v2_10002484, 2
  %v4_10002484 = inttoptr i32 %v3_10002484 to i16*
  store i16 %v3_10002478, i16* %v4_10002484, align 2
  %v0_10002488 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002488 = load i32, i32* @r30, align 4
  %v2_10002488 = add i32 %v1_10002488, 8
  %v3_10002488 = inttoptr i32 %v2_10002488 to i32*
  store i32 %v0_10002488, i32* %v3_10002488, align 4
  %v0_1000248c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000248c = load i32, i32* @r30, align 4
  %v2_1000248c = add i32 %v1_1000248c, 12
  %v3_1000248c = inttoptr i32 %v2_1000248c to i32*
  store i32 %v0_1000248c, i32* %v3_1000248c, align 4
  %v0_10002490 = call i32 @function_10005f98()
  %v1_10002490 = trunc i32 %v0_10002490 to i16
  store i32 %v1_100020c8, i32* %r9.global-to-local, align 4
  %v3_10002498 = load i32, i32* @r30, align 4
  %v4_10002498 = add i32 %v3_10002498, 14
  %v5_10002498 = inttoptr i32 %v4_10002498 to i16*
  store i16 %v1_10002490, i16* %v5_10002498, align 2
  %v0_1000249c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000249c, i32* @r4, align 4
  %v0_100024a0 = load i32, i32* @r31, align 4
  %v1_100024a0 = add i32 %v0_100024a0, 40
  store i32 %v1_100024a0, i32* @r3, align 4
  %v0_100024a4 = load i32, i32* @r30, align 4
  %v1_100024a4 = add i32 %v0_100024a4, 12
  %v2_100024a4 = inttoptr i32 %v1_100024a4 to i32*
  %v3_100024a4 = load i32, i32* %v2_100024a4, align 4
  store i32 %v3_100024a4, i32* %r0.global-to-local, align 4
  %v1_100024a8 = call i32 @__asm_rlwimi(i32 %v1_100020c8, i32 21, i32 10, i32 10)
  store i32 %v1_100024a8, i32* %r0.global-to-local, align 4
  %v1_100024ac = call i32 @__asm_rlwimi(i32 %v1_100020ec, i32 20, i32 11, i32 11)
  store i32 %v1_100024ac, i32* %r0.global-to-local, align 4
  %v1_100024b0 = call i32 @__asm_rlwimi(i32 %v1_10002104, i32 19, i32 12, i32 12)
  store i32 %v1_100024b0, i32* %r0.global-to-local, align 4
  %v1_100024b4 = call i32 @__asm_rlwimi(i32 %v1_1000211c, i32 18, i32 13, i32 13)
  store i32 %v1_100024b4, i32* %r0.global-to-local, align 4
  %v1_100024b8 = call i32 @__asm_rlwimi(i32 %v1_10002134, i32 17, i32 14, i32 14)
  store i32 %v1_100024b8, i32* %r0.global-to-local, align 4
  %v1_100024bc = call i32 @__asm_rlwimi(i32 %v1_1000214c, i32 16, i32 15, i32 15)
  store i32 %v1_100024bc, i32* %r0.global-to-local, align 4
  %v1_100024c0 = load i32, i32* @r30, align 4
  %v2_100024c0 = add i32 %v1_100024c0, 12
  %v3_100024c0 = inttoptr i32 %v2_100024c0 to i32*
  store i32 %v1_100024bc, i32* %v3_100024c0, align 4
  %v0_100024c4 = call i32 @function_1000616c()
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024c8

dec_label_pc_100024c8:                            ; preds = %dec_label_pc_100021d4, %dec_label_pc_100022d4, %dec_label_pc_10002434
  %v3_100024c8 = load i32, i32* %stack_var_-408, align 4
  %v1_100024cc = add i32 %v3_100024c8, 1
  store i32 %v1_100024cc, i32* %r9.global-to-local, align 4
  %v1_100024d0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100024d0 = icmp slt i32 %v1_100024cc, %v1_100024d0
  %v4_100024d0 = icmp eq i32 %v1_100024cc, %v1_100024d0
  store i1 %v4_100024d0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100024cc, i32* %stack_var_-408, align 4
  br i1 %v2_100024d0, label %dec_label_pc_100021d4, label %dec_label_pc_100024dc.loopexit

dec_label_pc_100024dc.loopexit:                   ; preds = %dec_label_pc_100024c8
  %v0_100024e8.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100024e8.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100024dc

dec_label_pc_100024dc:                            ; preds = %dec_label_pc_100024dc.loopexit, %dec_label_pc_100021b4
  %v1_100024e8.pre = phi i1 [ %v1_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v1_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024e8.pre = phi i1 [ %v0_100024e8.pre.pre, %dec_label_pc_100024dc.loopexit ], [ %v3_100021b4, %dec_label_pc_100021b4 ]
  %v0_100024dc = load i32, i32* %r27.global-to-local, align 4
  %v3_100024dc = icmp eq i32 %v0_100024dc, 0
  store i1 %v3_100024dc, i1* %cr2_eq.global-to-local, align 1
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100024e0 = add i32 %v0_100024e0, 40
  store i32 %v1_100024e0, i32* %r26.global-to-local, align 4
  %v1_100024e4 = add i32 %v0_100024e0, 20
  store i32 %v1_100024e4, i32* @r31, align 4
  br label %dec_label_pc_100024e8.outer

dec_label_pc_100024e8.outer:                      ; preds = %dec_label_pc_100025bc, %dec_label_pc_100024dc
  %v1_100024e8.ph = phi i1 [ %v1_100024e8.pre, %dec_label_pc_100024dc ], [ %v1_100025bc, %dec_label_pc_100025bc ]
  %v0_100024e8.ph = phi i1 [ %v0_100024e8.pre, %dec_label_pc_100024dc ], [ %v0_100025bc, %dec_label_pc_100025bc ]
  %v2_100024e8 = or i1 %v1_100024e8.ph, %v0_100024e8.ph
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_100024e8.outer, %dec_label_pc_100024e8
  br i1 %v2_100024e8, label %dec_label_pc_100024e8, label %dec_label_pc_100024ec

dec_label_pc_100024ec:                            ; preds = %dec_label_pc_100024e8, %dec_label_pc_100025bc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_100024fc = load i32, i32* %r19.global-to-local, align 4
  %v4_100024fc = icmp eq i32 %v0_100024fc, 65535
  store i1 %v4_100024fc, i1* %cr4_eq.global-to-local, align 1
  %v0_10002500 = load i32, i32* @r31, align 4
  %v1_10002500 = urem i32 %v0_10002500, 65536
  store i32 %v1_10002500, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000250c

dec_label_pc_1000250c:                            ; preds = %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, %dec_label_pc_100024ec
  %v0_10002518 = phi i1 [ %v0_10002518.pre, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ %v4_100024fc, %dec_label_pc_100024ec ]
  %v0_1000250c = phi i32 [ %v1_100025ac, %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge ], [ 0, %dec_label_pc_100024ec ]
  %v1_1000250c = mul i32 %v0_1000250c, 4
  store i32 %v1_1000250c, i32* %r0.global-to-local, align 4
  %v0_10002510 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002510 = add i32 %v0_10002510, %v1_1000250c
  %v3_10002510 = inttoptr i32 %v2_10002510 to i32*
  %v4_10002510 = load i32, i32* %v3_10002510, align 4
  store i32 %v4_10002510, i32* @r29, align 4
  %v1_10002514 = add i32 %v4_10002510, 20
  store i32 %v1_10002514, i32* %r28.global-to-local, align 4
  br i1 %v0_10002518, label %dec_label_pc_100025c4, label %dec_label_pc_1000251c

dec_label_pc_1000251c:                            ; preds = %dec_label_pc_1000250c
  %v1_1000251c = add i32 %v4_10002510, 40
  store i32 %v1_1000251c, i32* @r3, align 4
  %v0_10002520 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002520, i32* @r4, align 4
  %v0_10002524 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002524, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_10002528:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4, %dec_label_pc_100025d8
  %v2_10002528 = phi i32 [ %v4_10002510, %dec_label_pc_1000251c ], [ %v0_100025d0, %dec_label_pc_100025c4 ], [ %v2_10002528.pre, %dec_label_pc_100025d8 ]
  %v0_10002528 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002528 = trunc i32 %v0_10002528 to i16
  %v3_10002528 = add i32 %v2_10002528, 10
  %v4_10002528 = inttoptr i32 %v3_10002528 to i16*
  store i16 %v1_10002528, i16* %v4_10002528, align 2
  %v0_10002530 = load i32, i32* @r29, align 4
  store i32 %v0_10002530, i32* @r3, align 4
  %v2_10002534 = call i32 @function_100043cc(i32 %v0_10002530, i32 20)
  %v3_10002534 = trunc i32 %v2_10002534 to i16
  store i32 %v2_10002534, i32* %r3.global-to-local, align 4
  %v3_10002538 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002538, i32* %r9.global-to-local, align 4
  %v3_1000253c = load i32, i32* @r29, align 4
  %v4_1000253c = add i32 %v3_1000253c, 10
  %v5_1000253c = inttoptr i32 %v4_1000253c to i16*
  store i16 %v3_10002534, i16* %v5_1000253c, align 2
  %v0_10002540 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002540, i32* @r4, align 4
  %v0_10002544 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002544 = mul i32 %v0_10002544, 16
  store i32 %v1_10002544, i32* %r9.global-to-local, align 4
  %v0_10002548 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002548 = trunc i32 %v0_10002548 to i16
  %v3_10002548 = add i32 %v0_10002540, 16
  %v4_10002548 = inttoptr i32 %v3_10002548 to i16*
  store i16 %v1_10002548, i16* %v4_10002548, align 2
  %v0_1000254c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000254c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000254c = add i32 %v1_1000254c, %v0_1000254c
  store i32 %v2_1000254c, i32* %r9.global-to-local, align 4
  %v0_10002550 = load i32, i32* @r30, align 4
  %v1_10002554 = add i32 %v2_1000254c, 4
  %v2_10002554 = inttoptr i32 %v1_10002554 to i32*
  %v3_10002554 = load i32, i32* %v2_10002554, align 4
  store i32 %v3_10002554, i32* %r11.global-to-local, align 4
  %v0_10002558 = load i32, i32* @r31, align 4
  %v0_1000255c = load i32, i32* @r29, align 4
  store i32 %v0_1000255c, i32* %r3.global-to-local, align 4
  %v1_10002560 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002560 = add i32 %v1_10002560, 4
  %v3_10002560 = inttoptr i32 %v2_10002560 to i32*
  store i32 %v3_10002554, i32* %v3_10002560, align 4
  %v0_10002564 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002564 = add i32 %v0_10002564, 1
  store i32 %v1_10002564, i32* %r11.global-to-local, align 4
  %v1_10002568 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002568 = add i32 %v1_10002568, 4
  %v3_10002568 = inttoptr i32 %v2_10002568 to i32*
  store i32 %v1_10002564, i32* %v3_10002568, align 4
  %v0_1000256c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000256c = add i32 %v0_1000256c, 8
  %v2_1000256c = inttoptr i32 %v1_1000256c to i32*
  %v3_1000256c = load i32, i32* %v2_1000256c, align 4
  store i32 %v3_1000256c, i32* %r0.global-to-local, align 4
  %v1_10002570 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002570 = add i32 %v1_10002570, 8
  %v3_10002570 = inttoptr i32 %v2_10002570 to i32*
  store i32 %v3_1000256c, i32* %v3_10002570, align 4
  %v4_10002574 = call i32 @function_10004430(i32 %v0_1000255c, i32 %v0_10002540, i32 %v0_10002550, i32 %v0_10002558)
  %v5_10002574 = trunc i32 %v4_10002574 to i16
  store i32 %v4_10002574, i32* %r3.global-to-local, align 4
  %v3_10002578 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002578, i32* %r7.global-to-local, align 4
  %v0_1000257c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000257c = add i32 %v0_1000257c, 2
  %v2_1000257c = inttoptr i32 %v1_1000257c to i16*
  %v3_1000257c = load i16, i16* %v2_1000257c, align 2
  %v4_1000257c = zext i16 %v3_1000257c to i32
  store i32 %v4_1000257c, i32* %r0.global-to-local, align 4
  %v0_10002580 = load i32, i32* @r29, align 4
  %v1_10002584 = mul i32 %v3_10002578, 24
  store i32 %v1_10002584, i32* %r7.global-to-local, align 4
  %v4_10002588 = add i32 %v0_1000257c, 16
  %v5_10002588 = inttoptr i32 %v4_10002588 to i16*
  store i16 %v5_10002574, i16* %v5_10002588, align 2
  %v0_1000258c = load i32, i32* %r26.global-to-local, align 4
  %v0_10002590 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002590, i32* %r3.global-to-local, align 4
  %v0_10002594 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002594 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002594 = add i32 %v1_10002594, %v0_10002594
  store i32 %v2_10002594, i32* %r7.global-to-local, align 4
  %v0_1000259c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000259c = trunc i32 %v0_1000259c to i16
  %v3_1000259c = add i32 %v2_10002594, 2
  %v4_1000259c = inttoptr i32 %v3_1000259c to i16*
  store i16 %v1_1000259c, i16* %v4_1000259c, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268445096, i32* @lr, align 4
  %v6_100025a4 = call i32 @function_10009e2c(i32 %v0_10002590, i32 %v0_10002580, i32 %v0_1000258c, i32 16384, i32 %v2_10002594, i32 16)
  store i32 %v6_100025a4, i32* %r3.global-to-local, align 4
  %v3_100025a8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100025a8, i32* %r9.global-to-local, align 4
  %v1_100025ac = add i32 %v3_100025a8, 1
  store i32 %v1_100025ac, i32* %r0.global-to-local, align 4
  %v1_100025b0 = load i32, i32* %r21.global-to-local, align 4
  %v2_100025b0 = icmp slt i32 %v1_100025ac, %v1_100025b0
  %v4_100025b0 = icmp eq i32 %v1_100025ac, %v1_100025b0
  store i1 %v4_100025b0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100025ac, i32* %stack_var_-408, align 4
  br i1 %v2_100025b0, label %dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge, label %dec_label_pc_100025bc

dec_label_pc_10002528.dec_label_pc_1000250c_crit_edge: ; preds = %dec_label_pc_10002528
  %v0_10002518.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_1000250c

dec_label_pc_100025bc:                            ; preds = %dec_label_pc_10002528
  %v0_100025bc = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100025bc = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100025bc = or i1 %v0_100025bc, %v1_100025bc
  br i1 %v2_100025bc, label %dec_label_pc_100024e8.outer, label %dec_label_pc_100024ec

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_1000250c
  %v0_100025c4 = call i32 @function_10005f98()
  %v1_100025c4 = trunc i32 %v0_100025c4 to i16
  %v0_100025c8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100025c8, i32* @r4, align 4
  %v3_100025cc = load i32, i32* @r29, align 4
  %v4_100025cc = add i32 %v3_100025cc, 4
  %v5_100025cc = inttoptr i32 %v4_100025cc to i16*
  store i16 %v1_100025c4, i16* %v5_100025cc, align 2
  %v0_100025d0 = load i32, i32* @r29, align 4
  %v1_100025d0 = add i32 %v0_100025d0, 40
  store i32 %v1_100025d0, i32* @r3, align 4
  %v0_100025d4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100025d4, label %dec_label_pc_10002528, label %dec_label_pc_100025d8

dec_label_pc_100025d8:                            ; preds = %dec_label_pc_1000251c, %dec_label_pc_100025c4
  %v0_100025d8 = call i32 @function_1000616c()
  store i32 %v0_100025d8, i32* %r3.global-to-local, align 4
  %v2_10002528.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002528

; uselistorder directives
  uselistorder i32 %v0_100025d0, { 1, 0 }
  uselistorder i1 %v1_100025bc, { 1, 0 }
  uselistorder i1 %v0_100025bc, { 1, 0 }
  uselistorder i32 %v1_100025ac, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002574, { 1, 0 }
  uselistorder i32 %v0_10002540, { 1, 0, 2 }
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_1000250c, { 1, 0 }
  uselistorder i32 %v1_100024cc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10002450, { 1, 0, 2 }
  uselistorder i32 %v1_1000244c, { 1, 0 }
  uselistorder i32 %v1_100023e4, { 1, 0 }
  uselistorder i32 %v1_100023b0, { 1, 0 }
  uselistorder i32 %v0_10002330, { 1, 0 }
  uselistorder i32 %v2_10002324, { 1, 2, 0 }
  uselistorder i1 %v4_100022a8, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002308, { 1, 3, 0, 2 }
  uselistorder i32 %v1_100022e4, { 1, 0 }
  uselistorder i32 %v1_1000208c, { 1, 0 }
  uselistorder i8 %v5_10002078, { 1, 0 }
  uselistorder i8 %v5_10002040, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 30, 12, 13, 14, 15, 16, 17, 18, 27, 28, 20, 19, 21, 22, 23, 24, 25, 26, 3, 2, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 1, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268444136, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_100025d8, { 1, 0 }
  uselistorder label %dec_label_pc_10002528, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100024ec, { 1, 0 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_100024c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002434, { 1, 0 }
  uselistorder label %dec_label_pc_10002344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100022c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100021f4, { 1, 0 }
}

define i32 @function_100025e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100025e0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_100025e4 = load i32, i32* @lr, align 4
  store i32 %v0_100025e4, i32* %r0.global-to-local, align 4
  %v0_100025e8 = call i32 @__asm_mfcr()
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_100025f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100025e8, i32* %r21.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002640 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002648 = load i32, i32* @r30, align 4
  store i32 268445268, i32* @lr, align 4
  %v2_10002650 = call i32 @function_1000a204(i32 4, i32 4)
  store i32 %v2_10002650, i32* %r22.global-to-local, align 4
  %v0_10002658 = load i32, i32* @r28, align 4
  %v0_10002664 = load i32, i32* @r29, align 4
  store i32 %v0_10002664, i32* %r3.global-to-local, align 4
  store i32 268445292, i32* @lr, align 4
  %v4_10002668 = inttoptr i32 %v0_10002658 to i32*
  %v5_10002668 = call i32 @function_100006a8(i32 %v0_10002664, i32* %v4_10002668, i32 2, i32 0)
  %v5_10002678 = trunc i32 %v5_10002668 to i8
  %v0_10002680 = load i32, i32* @r28, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002680 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 3, i32 65535)
  %v0_1000268c = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r18.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_1000268c to i32*
  %v5_100026a0 = call i32 @function_100006a8(i32 %v0_1000269c, i32* %v4_100026a0, i32 4, i32 64)
  %v0_100026a4 = load i32, i32* @r28, align 4
  %v5_100026b0 = trunc i32 %v5_100026a0 to i8
  %v0_100026b8 = load i32, i32* @r29, align 4
  store i32 %v0_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445376, i32* @lr, align 4
  %v4_100026bc = inttoptr i32 %v0_100026a4 to i32*
  %v5_100026bc = call i32 @function_100006a8(i32 %v0_100026b8, i32* %v4_100026bc, i32 5, i32 0)
  %v0_100026cc = load i32, i32* @r28, align 4
  %v1_100026d0 = urem i32 %v5_100026bc, 256
  store i32 %v1_100026d0, i32* @r31, align 4
  %v0_100026d4 = load i32, i32* @r29, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445404, i32* @lr, align 4
  %v4_100026d8 = inttoptr i32 %v0_100026cc to i32*
  %v5_100026d8 = call i32 @function_100006a8(i32 %v0_100026d4, i32* %v4_100026d8, i32 6, i32 65535)
  %v0_100026e0 = load i32, i32* @r28, align 4
  store i32 %v5_100026d8, i32* %r19.global-to-local, align 4
  %v0_100026f0 = load i32, i32* @r29, align 4
  store i32 %v0_100026f0, i32* %r3.global-to-local, align 4
  store i32 268445432, i32* @lr, align 4
  %v4_100026f4 = inttoptr i32 %v0_100026e0 to i32*
  %v5_100026f4 = call i32 @function_100006a8(i32 %v0_100026f0, i32* %v4_100026f4, i32 7, i32 65535)
  %v0_100026fc = load i32, i32* @r28, align 4
  store i32 %v5_100026f4, i32* %r20.global-to-local, align 4
  %v0_1000270c = load i32, i32* @r29, align 4
  store i32 %v0_1000270c, i32* %r3.global-to-local, align 4
  store i32 268445460, i32* @lr, align 4
  %v4_10002710 = inttoptr i32 %v0_100026fc to i32*
  %v5_10002710 = call i32 @function_100006a8(i32 %v0_1000270c, i32* %v4_10002710, i32 17, i32 65535)
  %v0_10002718 = load i32, i32* @r28, align 4
  store i32 %v5_10002710, i32* %r15.global-to-local, align 4
  %v0_10002728 = load i32, i32* @r29, align 4
  store i32 %v0_10002728, i32* %r3.global-to-local, align 4
  store i32 268445488, i32* @lr, align 4
  %v4_1000272c = inttoptr i32 %v0_10002718 to i32*
  %v5_1000272c = call i32 @function_100006a8(i32 %v0_10002728, i32* %v4_1000272c, i32 18, i32 65535)
  %v0_10002730 = load i32, i32* @r28, align 4
  store i32 %v5_1000272c, i32* %r17.global-to-local, align 4
  %v0_10002740 = load i32, i32* @r29, align 4
  store i32 %v0_10002740, i32* %r3.global-to-local, align 4
  store i32 268445512, i32* @lr, align 4
  %v4_10002744 = inttoptr i32 %v0_10002730 to i32*
  %v5_10002744 = call i32 @function_100006a8(i32 %v0_10002740, i32* %v4_10002744, i32 11, i32 0)
  %v0_10002748 = load i32, i32* @r28, align 4
  %v0_10002758 = load i32, i32* @r29, align 4
  store i32 %v0_10002758, i32* %r3.global-to-local, align 4
  store i32 268445536, i32* @lr, align 4
  %v4_1000275c = inttoptr i32 %v0_10002748 to i32*
  %v5_1000275c = call i32 @function_100006a8(i32 %v0_10002758, i32* %v4_1000275c, i32 12, i32 1)
  %v0_10002760 = load i32, i32* @r28, align 4
  store i32 %v5_1000275c, i32* %r14.global-to-local, align 4
  %v0_10002770 = load i32, i32* @r29, align 4
  store i32 %v0_10002770, i32* %r3.global-to-local, align 4
  store i32 268445560, i32* @lr, align 4
  %v4_10002774 = inttoptr i32 %v0_10002760 to i32*
  %v5_10002774 = call i32 @function_100006a8(i32 %v0_10002770, i32* %v4_10002774, i32 13, i32 0)
  %v0_10002778 = load i32, i32* @r28, align 4
  store i32 %v5_10002774, i32* %r24.global-to-local, align 4
  %v0_10002788 = load i32, i32* @r29, align 4
  store i32 %v0_10002788, i32* %r3.global-to-local, align 4
  store i32 268445584, i32* @lr, align 4
  %v4_1000278c = inttoptr i32 %v0_10002778 to i32*
  %v5_1000278c = call i32 @function_100006a8(i32 %v0_10002788, i32* %v4_1000278c, i32 14, i32 0)
  %v0_10002790 = load i32, i32* @r28, align 4
  store i32 %v5_1000278c, i32* %r27.global-to-local, align 4
  %v0_100027a0 = load i32, i32* @r29, align 4
  store i32 %v0_100027a0, i32* %r3.global-to-local, align 4
  store i32 268445608, i32* @lr, align 4
  %v4_100027a4 = inttoptr i32 %v0_10002790 to i32*
  %v5_100027a4 = call i32 @function_100006a8(i32 %v0_100027a0, i32* %v4_100027a4, i32 15, i32 0)
  %v0_100027a8 = load i32, i32* @r28, align 4
  store i32 %v5_100027a4, i32* %r26.global-to-local, align 4
  %v0_100027b8 = load i32, i32* @r29, align 4
  store i32 %v0_100027b8, i32* %r3.global-to-local, align 4
  store i32 268445632, i32* @lr, align 4
  %v4_100027bc = inttoptr i32 %v0_100027a8 to i32*
  %v5_100027bc = call i32 @function_100006a8(i32 %v0_100027b8, i32* %v4_100027bc, i32 16, i32 0)
  %v0_100027c0 = load i32, i32* @r28, align 4
  store i32 %v5_100027bc, i32* %r30.global-to-local, align 4
  %v0_100027d0 = load i32, i32* @r29, align 4
  store i32 %v0_100027d0, i32* %r3.global-to-local, align 4
  store i32 268445656, i32* @lr, align 4
  %v4_100027d4 = inttoptr i32 %v0_100027c0 to i32*
  %v5_100027d4 = call i32 @function_100006a8(i32 %v0_100027d0, i32* %v4_100027d4, i32 0, i32 512)
  %v0_100027d8 = load i32, i32* @r28, align 4
  store i32 %v5_100027d4, i32* %r16.global-to-local, align 4
  %v0_100027e8 = load i32, i32* @r29, align 4
  store i32 %v0_100027e8, i32* %r3.global-to-local, align 4
  store i32 268445680, i32* @lr, align 4
  %v4_100027ec = inttoptr i32 %v0_100027d8 to i32*
  %v5_100027ec = call i32 @function_100006a8(i32 %v0_100027e8, i32* %v4_100027ec, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100027f4 = load i32, i32* @global_var_1001c2d0.14, align 4
  %v1_100027f8 = urem i32 %v5_100027ec, 256
  %v0_100027fc = load i32, i32* @r28, align 4
  %v0_10002808 = load i32, i32* @r29, align 4
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445712, i32* @lr, align 4
  %v5_1000280c = inttoptr i32 %v0_100027fc to i32*
  %v6_1000280c = call i32 @function_10000628(i32 %v0_10002808, i32* %v5_1000280c, i32 25, i32 %v3_100027f4, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445732, i32* @lr, align 4
  %v3_10002820 = call i32 @function_10009ea8(i32 2, i32 3, i32 6)
  store i32 %v3_10002820, i32* %r3.global-to-local, align 4
  %v3_10002824 = icmp eq i32 %v3_10002820, -1
  store i32 %v3_10002820, i32* %r23.global-to-local, align 4
  br i1 %v3_10002824, label %dec_label_pc_10002b64, label %dec_label_pc_10002830

dec_label_pc_10002830:                            ; preds = %dec_label_pc_100025e0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000283c = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268445772, i32* @lr, align 4
  %v4_10002848 = call i32 @function_10009e6c(i32 0, i32 3, i32 %v2_1000283c, i32 4)
  store i32 %v4_10002848, i32* %r3.global-to-local, align 4
  %v3_1000284c = icmp eq i32 %v4_10002848, -1
  br i1 %v3_1000284c, label %dec_label_pc_10002b5c, label %dec_label_pc_10002854

dec_label_pc_10002854:                            ; preds = %dec_label_pc_10002830
  %v0_10002854 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002854 = icmp slt i32 %v0_10002854, 0
  %v3_10002854 = icmp eq i32 %v0_10002854, 0
  store i1 %v1_10002854, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002854, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10002860 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002860 = urem i32 %v0_10002860, 65536
  store i32 %v1_10002860, i32* %r18.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r19.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002854, 1
  br i1 %tmp40, label %dec_label_pc_10002b3c, label %dec_label_pc_10002870

dec_label_pc_10002870:                            ; preds = %dec_label_pc_10002854
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 256
  %v0_10002878 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002878 = add i32 %v0_10002878, 40
  store i32 %v1_10002878, i32* %r24.global-to-local, align 4
  %v3_1000287c = icmp eq i32 %v1_10002874, 0
  store i1 %v3_1000287c, i1* %cr3_eq.global-to-local, align 1
  %v1_10002880 = urem i32 %v5_10002744, 2
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v0_10002884 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002884 = urem i32 %v0_10002884, 2
  store i32 %v1_10002884, i32* %r28.global-to-local, align 4
  %v1_10002888 = urem i32 %v0_10002874, 2
  store i32 %v1_10002888, i32* %r26.global-to-local, align 4
  %v1_1000288c = urem i32 %v1_10002878, 65536
  store i32 %v1_1000288c, i32* %r0.global-to-local, align 4
  %v0_10002894 = load i32, i32* @r31, align 4
  %v3_10002894 = icmp eq i32 %v0_10002894, 0
  store i1 %v3_10002894, i1* %cr2_eq.global-to-local, align 1
  %v5_10002898 = trunc i32 %v1_10002878 to i16
  %v0_1000289c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000289c = urem i32 %v0_1000289c, 2
  store i32 %v1_1000289c, i32* %r14.global-to-local, align 4
  %v0_100028a0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100028a0 = urem i32 %v0_100028a0, 2
  store i32 %v1_100028a0, i32* %r27.global-to-local, align 4
  %v0_100028a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100028a4 = urem i32 %v0_100028a4, 2
  %v4_100028f4 = sext i8 %v5_10002678 to i32
  br label %dec_label_pc_100028ac

dec_label_pc_100028ac:                            ; preds = %dec_label_pc_1000298c, %dec_label_pc_10002870
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268445880, i32* @lr, align 4
  %v2_100028b4 = call i32 @function_1000a204(i32 1510, i32 1)
  store i32 %v2_100028b4, i32* %r3.global-to-local, align 4
  %v3_100028b8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_100028b8, i32* %r9.global-to-local, align 4
  %v0_100028bc = load i32, i32* @r31, align 4
  %v1_100028bc = mul i32 %v0_100028bc, 4
  store i32 %v1_100028bc, i32* %r0.global-to-local, align 4
  %v1_100028c0 = load i32, i32* %r22.global-to-local, align 4
  %v3_100028c0 = add i32 %v1_100028c0, %v1_100028bc
  %v4_100028c0 = inttoptr i32 %v3_100028c0 to i32*
  store i32 %v2_100028b4, i32* %v4_100028c0, align 4
  %v0_100028c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100028c4 = mul i32 %v0_100028c4, 4
  store i32 %v1_100028c4, i32* %r9.global-to-local, align 4
  %v1_100028c8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100028c8 = add i32 %v1_100028c8, %v1_100028c4
  %v3_100028c8 = inttoptr i32 %v2_100028c8 to i32*
  %v4_100028c8 = load i32, i32* %v3_100028c8, align 4
  store i32 %v4_100028c8, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100028d0 = inttoptr i32 %v4_100028c8 to i32*
  %v2_100028d0 = load i32, i32* %v1_100028d0, align 4
  store i32 %v2_100028d0, i32* %r0.global-to-local, align 4
  %v1_100028d4 = add i32 %v4_100028c8, 20
  store i32 %v1_100028d4, i32* @r30, align 4
  %v0_100028d8 = load i32, i32* %r18.global-to-local, align 4
  %v1_100028d8 = trunc i32 %v0_100028d8 to i16
  %v3_100028d8 = add i32 %v4_100028c8, 4
  %v4_100028d8 = inttoptr i32 %v3_100028d8 to i16*
  store i16 %v1_100028d8, i16* %v4_100028d8, align 2
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_100028e8 = load i32, i32* @r31, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v2_100028f0 = load i32, i32* @r31, align 4
  %v3_100028f0 = add i32 %v2_100028f0, 8
  %v4_100028f0 = inttoptr i32 %v3_100028f0 to i8*
  store i8 %v5_100026b0, i8* %v4_100028f0, align 1
  store i32 %v4_100028f4, i32* %r9.global-to-local, align 4
  %v2_100028f8 = load i32, i32* @r31, align 4
  %v3_100028f8 = add i32 %v2_100028f8, 1
  %v4_100028f8 = inttoptr i32 %v3_100028f8 to i8*
  store i8 %v5_10002678, i8* %v4_100028f8, align 1
  store i32 %v1_10002878, i32* %r0.global-to-local, align 4
  %v2_10002900 = load i32, i32* @r31, align 4
  %v3_10002900 = add i32 %v2_10002900, 2
  %v4_10002900 = inttoptr i32 %v3_10002900 to i16*
  store i16 %v5_10002898, i16* %v4_10002900, align 2
  %v0_10002904 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002904, label %dec_label_pc_10002910, label %dec_label_pc_10002908

dec_label_pc_10002908:                            ; preds = %dec_label_pc_100028ac
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000290c = load i32, i32* @r31, align 4
  %v3_1000290c = add i32 %v2_1000290c, 6
  %v4_1000290c = inttoptr i32 %v3_1000290c to i16*
  store i16 16384, i16* %v4_1000290c, align 2
  br label %dec_label_pc_10002910

dec_label_pc_10002910:                            ; preds = %dec_label_pc_100028ac, %dec_label_pc_10002908
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002914 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002914 = trunc i32 %v0_10002914 to i16
  %v2_10002914 = load i32, i32* @r31, align 4
  %v3_10002914 = add i32 %v2_10002914, 20
  %v4_10002914 = inttoptr i32 %v3_10002914 to i16*
  store i16 %v1_10002914, i16* %v4_10002914, align 2
  %v0_10002918 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002918 = trunc i32 %v0_10002918 to i8
  %v2_10002918 = load i32, i32* @r31, align 4
  %v3_10002918 = add i32 %v2_10002918, 9
  %v4_10002918 = inttoptr i32 %v3_10002918 to i8*
  store i8 %v1_10002918, i8* %v4_10002918, align 1
  %v0_1000291c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* @r30, align 4
  %v3_1000291c = add i32 %v2_1000291c, 2
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v1_10002924 = load i32, i32* @r31, align 4
  %v2_10002924 = add i32 %v1_10002924, 12
  %v3_10002924 = inttoptr i32 %v2_10002924 to i32*
  store i32 %v6_1000280c, i32* %v3_10002924, align 4
  %v3_10002928 = load i32, i32* %stack_var_-136, align 4
  %v1_1000292c = mul i32 %v3_10002928, 24
  %v1_10002930 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002930 = add i32 %v1_10002930, %v1_1000292c
  store i32 %v2_10002930, i32* %r9.global-to-local, align 4
  %v1_10002934 = add i32 %v2_10002930, 16
  %v2_10002934 = inttoptr i32 %v1_10002934 to i32*
  %v3_10002934 = load i32, i32* %v2_10002934, align 4
  store i32 %v3_10002934, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_1000293c = load i32, i32* @r31, align 4
  %v2_1000293c = add i32 %v1_1000293c, 16
  %v3_1000293c = inttoptr i32 %v2_1000293c to i32*
  store i32 %v3_10002934, i32* %v3_1000293c, align 4
  %v0_10002940 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002940 = load i32, i32* @r30, align 4
  %v2_10002940 = add i32 %v1_10002940, 4
  %v3_10002940 = inttoptr i32 %v2_10002940 to i32*
  store i32 %v0_10002940, i32* %v3_10002940, align 4
  %v0_10002944 = load i32, i32* @r30, align 4
  %v1_10002944 = add i32 %v0_10002944, 12
  %v2_10002944 = inttoptr i32 %v1_10002944 to i32*
  %v3_10002944 = load i32, i32* %v2_10002944, align 4
  store i32 %v3_10002944, i32* %r0.global-to-local, align 4
  %v1_10002948 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002948, i32* %r0.global-to-local, align 4
  store i32 %v1_10002880, i32* %r9.global-to-local, align 4
  %v1_10002950 = call i32 @__asm_rlwimi(i32 %v1_10002880, i32 21, i32 10, i32 10)
  store i32 %v1_10002950, i32* %r0.global-to-local, align 4
  %v1_10002954 = call i32 @__asm_rlwimi(i32 %v1_1000289c, i32 20, i32 11, i32 11)
  store i32 %v1_10002954, i32* %r0.global-to-local, align 4
  %v1_10002958 = call i32 @__asm_rlwimi(i32 %v1_10002888, i32 19, i32 12, i32 12)
  store i32 %v1_10002958, i32* %r0.global-to-local, align 4
  %v1_1000295c = call i32 @__asm_rlwimi(i32 %v1_100028a0, i32 18, i32 13, i32 13)
  store i32 %v1_1000295c, i32* %r0.global-to-local, align 4
  %v1_10002960 = call i32 @__asm_rlwimi(i32 %v1_10002884, i32 17, i32 14, i32 14)
  store i32 %v1_10002960, i32* %r0.global-to-local, align 4
  %v1_10002964 = call i32 @__asm_rlwimi(i32 %v1_100028a4, i32 16, i32 15, i32 15)
  store i32 %v1_10002964, i32* %r0.global-to-local, align 4
  %v1_10002968 = load i32, i32* @r30, align 4
  %v2_10002968 = add i32 %v1_10002968, 12
  %v3_10002968 = inttoptr i32 %v2_10002968 to i32*
  store i32 %v1_10002964, i32* %v3_10002968, align 4
  %v0_1000296c = call i32 @function_10005f98()
  %v1_1000296c = trunc i32 %v0_1000296c to i16
  %v0_10002970 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002970, i32* @r4, align 4
  %v3_10002974 = load i32, i32* @r30, align 4
  %v4_10002974 = add i32 %v3_10002974, 14
  %v5_10002974 = inttoptr i32 %v4_10002974 to i16*
  store i16 %v1_1000296c, i16* %v5_10002974, align 2
  %v0_10002978 = load i32, i32* @r31, align 4
  %v1_10002978 = add i32 %v0_10002978, 40
  store i32 %v1_10002978, i32* @r3, align 4
  %v0_1000297c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000297c, label %dec_label_pc_1000298c, label %dec_label_pc_10002980

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002910
  %v0_10002980 = load i32, i32* @r30, align 4
  %v1_10002980 = add i32 %v0_10002980, 12
  %v2_10002980 = inttoptr i32 %v1_10002980 to i32*
  %v3_10002980 = load i32, i32* %v2_10002980, align 4
  %v1_10002984 = or i32 %v3_10002980, 524288
  store i32 %v1_10002984, i32* %r0.global-to-local, align 4
  store i32 %v1_10002984, i32* %v2_10002980, align 4
  br label %dec_label_pc_1000298c

dec_label_pc_1000298c:                            ; preds = %dec_label_pc_10002910, %dec_label_pc_10002980
  %v0_1000298c = call i32 @function_1000616c()
  store i32 %v0_1000298c, i32* %r3.global-to-local, align 4
  %v3_10002990 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002990, i32* %r9.global-to-local, align 4
  %v1_10002994 = add i32 %v3_10002990, 1
  %v1_10002998 = load i32, i32* %r21.global-to-local, align 4
  %v2_10002998 = icmp slt i32 %v1_10002994, %v1_10002998
  store i32 %v1_10002994, i32* %stack_var_-136, align 4
  br i1 %v2_10002998, label %dec_label_pc_100028ac, label %dec_label_pc_100029a4

dec_label_pc_100029a4:                            ; preds = %dec_label_pc_1000298c
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_100029a8 = load i32, i32* %r16.global-to-local, align 4
  %v1_100029a8 = add i32 %v0_100029a8, 20
  store i32 %v1_100029a8, i32* @r30, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v3_100029b0 = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_100029b0, i1* %cr2_eq.global-to-local, align 1
  %v3_100029b4 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_100029b4, i1* %cr3_eq.global-to-local, align 1
  %v0_100029b8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029b8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_100029b8.preheader:                  ; preds = %dec_label_pc_10002a98, %dec_label_pc_10002b3c, %dec_label_pc_100029a4
  %v1_100029b8 = phi i1 [ %v1_10002854, %dec_label_pc_10002b3c ], [ %v1_100029b8.pre, %dec_label_pc_100029a4 ], [ %v1_10002a98, %dec_label_pc_10002a98 ]
  %v0_100029b8 = phi i1 [ %v3_10002854, %dec_label_pc_10002b3c ], [ %v0_100029b8.pre, %dec_label_pc_100029a4 ], [ %v0_10002a98, %dec_label_pc_10002a98 ]
  %v2_100029b8 = or i1 %v1_100029b8, %v0_100029b8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.preheader, %dec_label_pc_100029b8
  br i1 %v2_100029b8, label %dec_label_pc_100029b8, label %dec_label_pc_100029bc

dec_label_pc_100029bc:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002a98
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* @r30, align 4
  %v1_100029c0 = urem i32 %v0_100029c0, 65536
  store i32 %v1_100029c0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100029d0

dec_label_pc_100029d0:                            ; preds = %dec_label_pc_10002a28, %dec_label_pc_100029bc
  %v0_100029d0 = phi i32 [ %v1_10002a88, %dec_label_pc_10002a28 ], [ 0, %dec_label_pc_100029bc ]
  %v1_100029d0 = mul i32 %v0_100029d0, 24
  store i32 %v1_100029d0, i32* %r0.global-to-local, align 4
  %v1_100029d4 = mul i32 %v0_100029d0, 4
  %v1_100029d8 = load i32, i32* %r22.global-to-local, align 4
  %v2_100029d8 = add i32 %v1_100029d8, %v1_100029d4
  %v3_100029d8 = inttoptr i32 %v2_100029d8 to i32*
  %v4_100029d8 = load i32, i32* %v3_100029d8, align 4
  store i32 %v4_100029d8, i32* %r28.global-to-local, align 4
  %v1_100029dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100029dc = add i32 %v1_100029dc, %v1_100029d0
  %v1_100029e0 = add i32 %v2_100029dc, 20
  %v2_100029e0 = inttoptr i32 %v1_100029e0 to i8*
  %v3_100029e0 = load i8, i8* %v2_100029e0, align 1
  %v4_100029e0 = zext i8 %v3_100029e0 to i32
  store i32 %v4_100029e0, i32* %r9.global-to-local, align 4
  %v1_100029e4 = add i32 %v4_100029d8, 20
  store i32 %v1_100029e4, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_100029e0, 32
  br i1 %tmp41, label %dec_label_pc_10002aa0, label %dec_label_pc_100029f0

dec_label_pc_100029f0:                            ; preds = %dec_label_pc_100029d0
  %v0_100029f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100029f0, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_100029f4:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 65535, i32* @r29, align 4
  %v0_100029fc = load i32, i32* %r18.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  br i1 %v4_100029fc, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002a04:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v1_10002a04 = phi i32 [ %v1_10002ad8, %dec_label_pc_10002ac8 ], [ 65535, %dec_label_pc_100029f4 ]
  %v0_10002a04 = load i32, i32* %r19.global-to-local, align 4
  %v4_10002a04 = icmp eq i32 %v0_10002a04, %v1_10002a04
  br i1 %v4_10002a04, label %dec_label_pc_10002af0, label %dec_label_pc_10002a0c

dec_label_pc_10002a0c:                            ; preds = %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge, %dec_label_pc_10002a04
  %v1_10002a0c = phi i32 [ %v1_10002a0c.pre, %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge ], [ %v1_10002a04, %dec_label_pc_10002a04 ]
  %v0_10002a0c = load i32, i32* %r20.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  br i1 %v4_10002a0c, label %dec_label_pc_10002b00, label %dec_label_pc_10002a14

dec_label_pc_10002a14:                            ; preds = %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge, %dec_label_pc_10002a0c
  %v1_10002a14 = phi i32 [ %v1_10002a14.pre, %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge ], [ %v1_10002a0c, %dec_label_pc_10002a0c ]
  %v0_10002a14 = load i32, i32* %r15.global-to-local, align 4
  %v4_10002a14 = icmp eq i32 %v0_10002a14, %v1_10002a14
  br i1 %v4_10002a14, label %dec_label_pc_10002b10, label %dec_label_pc_10002a1c

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge, %dec_label_pc_10002a14
  %v1_10002a1c = phi i32 [ %v1_10002a1c.pre, %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge ], [ %v1_10002a14, %dec_label_pc_10002a14 ]
  %v0_10002a1c = load i32, i32* %r17.global-to-local, align 4
  %v4_10002a1c = icmp eq i32 %v0_10002a1c, %v1_10002a1c
  br i1 %v4_10002a1c, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002a24 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a24, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002a28:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20, %dec_label_pc_10002b2c
  %v0_10002a28 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a28 = trunc i32 %v0_10002a28 to i16
  %v2_10002a28 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002a28 = add i32 %v2_10002a28, 10
  %v4_10002a28 = inttoptr i32 %v3_10002a28 to i16*
  store i16 %v1_10002a28, i16* %v4_10002a28, align 2
  %v0_10002a30 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a30, i32* @r3, align 4
  %v2_10002a34 = call i32 @function_100043cc(i32 %v0_10002a30, i32 20)
  %v3_10002a34 = trunc i32 %v2_10002a34 to i16
  %v0_10002a38 = load i32, i32* @r31, align 4
  store i32 %v0_10002a38, i32* @r4, align 4
  %v4_10002a3c = add i32 %v0_10002a30, 10
  %v5_10002a3c = inttoptr i32 %v4_10002a3c to i16*
  store i16 %v3_10002a34, i16* %v5_10002a3c, align 2
  %v0_10002a40 = load i32, i32* %r27.global-to-local, align 4
  %v0_10002a44 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002a44 = trunc i32 %v0_10002a44 to i16
  %v2_10002a44 = load i32, i32* @r31, align 4
  %v3_10002a44 = add i32 %v2_10002a44, 16
  %v4_10002a44 = inttoptr i32 %v3_10002a44 to i16*
  store i16 %v1_10002a44, i16* %v4_10002a44, align 2
  %v0_10002a48 = load i32, i32* @r30, align 4
  %v0_10002a4c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002a4c, i32* %r3.global-to-local, align 4
  %v4_10002a50 = call i32 @function_10004430(i32 %v0_10002a4c, i32 %v0_10002a38, i32 %v0_10002a40, i32 %v0_10002a48)
  %v5_10002a50 = trunc i32 %v4_10002a50 to i16
  store i32 %v4_10002a50, i32* %r3.global-to-local, align 4
  %v3_10002a54 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10002a54, i32* %r7.global-to-local, align 4
  %v0_10002a58 = load i32, i32* @r31, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 2
  %v2_10002a58 = inttoptr i32 %v1_10002a58 to i16*
  %v3_10002a58 = load i16, i16* %v2_10002a58, align 2
  %v4_10002a58 = zext i16 %v3_10002a58 to i32
  store i32 %v4_10002a58, i32* %r0.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002a60 = mul i32 %v3_10002a54, 24
  store i32 %v1_10002a60, i32* %r7.global-to-local, align 4
  %v4_10002a64 = add i32 %v0_10002a58, 16
  %v5_10002a64 = inttoptr i32 %v4_10002a64 to i16*
  store i16 %v5_10002a50, i16* %v5_10002a64, align 2
  %v0_10002a68 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002a6c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002a6c, i32* %r3.global-to-local, align 4
  %v0_10002a70 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002a70 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002a70 = add i32 %v1_10002a70, %v0_10002a70
  store i32 %v2_10002a70, i32* %r7.global-to-local, align 4
  %v0_10002a78 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002a78 = trunc i32 %v0_10002a78 to i16
  %v3_10002a78 = add i32 %v2_10002a70, 2
  %v4_10002a78 = inttoptr i32 %v3_10002a78 to i16*
  store i16 %v1_10002a78, i16* %v4_10002a78, align 2
  store i32 268446340, i32* @lr, align 4
  %v6_10002a80 = call i32 @function_10009e2c(i32 %v0_10002a6c, i32 %v0_10002a5c, i32 %v0_10002a68, i32 16384, i32 %v2_10002a70, i32 16)
  store i32 %v6_10002a80, i32* %r3.global-to-local, align 4
  %v3_10002a84 = load i32, i32* %stack_var_-136, align 4
  %v1_10002a88 = add i32 %v3_10002a84, 1
  store i32 %v1_10002a88, i32* %r9.global-to-local, align 4
  %v1_10002a8c = load i32, i32* %r21.global-to-local, align 4
  %v2_10002a8c = icmp slt i32 %v1_10002a88, %v1_10002a8c
  store i32 %v1_10002a88, i32* %stack_var_-136, align 4
  br i1 %v2_10002a8c, label %dec_label_pc_100029d0, label %dec_label_pc_10002a98

dec_label_pc_10002a98:                            ; preds = %dec_label_pc_10002a28
  %v0_10002a98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002a98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002a98 = or i1 %v0_10002a98, %v1_10002a98
  br i1 %v2_10002a98, label %dec_label_pc_100029b8.preheader, label %dec_label_pc_100029bc

dec_label_pc_10002aa0:                            ; preds = %dec_label_pc_100029d0
  %v1_10002aa0 = add i32 %v2_100029dc, 16
  %v2_10002aa0 = inttoptr i32 %v1_10002aa0 to i32*
  %v3_10002aa0 = load i32, i32* %v2_10002aa0, align 4
  store i32 %v3_10002aa0, i32* %r29.global-to-local, align 4
  %v0_10002aa4 = call i32 @function_10005f98()
  store i32 %v0_10002aa4, i32* %r3.global-to-local, align 4
  %v3_10002aa8 = load i32, i32* %stack_var_-136, align 4
  %v1_10002aac = mul i32 %v3_10002aa8, 24
  %v1_10002ab0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002ab0 = add i32 %v1_10002ab0, %v1_10002aac
  store i32 %v2_10002ab0, i32* %r9.global-to-local, align 4
  %v1_10002ab4 = add i32 %v2_10002ab0, 20
  %v2_10002ab4 = inttoptr i32 %v1_10002ab4 to i8*
  %v3_10002ab4 = load i8, i8* %v2_10002ab4, align 1
  %v4_10002ab4 = zext i8 %v3_10002ab4 to i32
  store i32 %v4_10002ab4, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10002ab4, 64
  %v2_10002ab8 = zext i8 %tmp to i32
  %v3_10002ab8 = lshr i32 %v0_10002aa4, %v2_10002ab8
  store i32 %v3_10002ab8, i32* %r3.global-to-local, align 4
  %v0_10002abc = load i32, i32* %r29.global-to-local, align 4
  %v2_10002abc = add i32 %v3_10002ab8, %v0_10002abc
  store i32 %v2_10002abc, i32* %r29.global-to-local, align 4
  %v1_10002ac0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ac0 = add i32 %v1_10002ac0, 16
  %v3_10002ac0 = inttoptr i32 %v2_10002ac0 to i32*
  store i32 %v2_10002abc, i32* %v3_10002ac0, align 4
  %v0_10002ac4 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002ac4, label %dec_label_pc_10002ac8, label %dec_label_pc_100029f4

dec_label_pc_10002ac8:                            ; preds = %dec_label_pc_10002aa0, %dec_label_pc_100029f0
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10002acc = call i32 @function_10005f98()
  store i32 %v0_10002acc, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002ad4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002ad4 = add i32 %v1_10002ad4, 12
  %v3_10002ad4 = inttoptr i32 %v2_10002ad4 to i32*
  store i32 %v0_10002acc, i32* %v3_10002ad4, align 4
  %v0_10002ad8 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002ad8 = load i32, i32* @r29, align 4
  %v4_10002ad8 = icmp eq i32 %v0_10002ad8, %v1_10002ad8
  br i1 %v4_10002ad8, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a04

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002ac8, %dec_label_pc_100029f4
  %v0_10002ae0 = call i32 @function_10005f98()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v0_10002ae4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = icmp eq i32 %v0_10002ae4, %v1_10002ae4
  %v3_10002ae8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002ae8 = add i32 %v3_10002ae8, 4
  %v5_10002ae8 = inttoptr i32 %v4_10002ae8 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae8, align 2
  br i1 %v4_10002ae4, label %dec_label_pc_10002af0, label %dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge

dec_label_pc_10002ae0.dec_label_pc_10002a0c_crit_edge: ; preds = %dec_label_pc_10002ae0
  %v1_10002a0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a0c

dec_label_pc_10002af0:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a04
  %v0_10002af0 = call i32 @function_10005f98()
  %v1_10002af0 = trunc i32 %v0_10002af0 to i16
  store i32 %v0_10002af0, i32* %r3.global-to-local, align 4
  %v0_10002af4 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002af4 = load i32, i32* @r29, align 4
  %v4_10002af4 = icmp eq i32 %v0_10002af4, %v1_10002af4
  %v3_10002af8 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002af8 = add i32 %v3_10002af8, 20
  %v5_10002af8 = inttoptr i32 %v4_10002af8 to i16*
  store i16 %v1_10002af0, i16* %v5_10002af8, align 2
  br i1 %v4_10002af4, label %dec_label_pc_10002b00, label %dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge

dec_label_pc_10002af0.dec_label_pc_10002a14_crit_edge: ; preds = %dec_label_pc_10002af0
  %v1_10002a14.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a14

dec_label_pc_10002b00:                            ; preds = %dec_label_pc_10002af0, %dec_label_pc_10002a0c
  %v0_10002b00 = call i32 @function_10005f98()
  %v1_10002b00 = trunc i32 %v0_10002b00 to i16
  store i32 %v0_10002b00, i32* %r3.global-to-local, align 4
  %v0_10002b04 = load i32, i32* %r15.global-to-local, align 4
  %v1_10002b04 = load i32, i32* @r29, align 4
  %v4_10002b04 = icmp eq i32 %v0_10002b04, %v1_10002b04
  %v3_10002b08 = load i32, i32* @r31, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b00, i16* %v5_10002b08, align 2
  br i1 %v4_10002b04, label %dec_label_pc_10002b10, label %dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge

dec_label_pc_10002b00.dec_label_pc_10002a1c_crit_edge: ; preds = %dec_label_pc_10002b00
  %v1_10002a1c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002a1c

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b00, %dec_label_pc_10002a14
  %v0_10002b10 = call i32 @function_10005f98()
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v0_10002b14 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = icmp eq i32 %v0_10002b14, %v1_10002b14
  %v1_10002b18 = load i32, i32* @r31, align 4
  %v2_10002b18 = add i32 %v1_10002b18, 4
  %v3_10002b18 = inttoptr i32 %v2_10002b18 to i32*
  store i32 %v0_10002b10, i32* %v3_10002b18, align 4
  br i1 %v4_10002b14, label %dec_label_pc_10002b20, label %dec_label_pc_10002a24

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002b10, %dec_label_pc_10002a1c
  %v0_10002b20 = call i32 @function_10005f98()
  store i32 %v0_10002b20, i32* %r3.global-to-local, align 4
  %v1_10002b24 = load i32, i32* @r31, align 4
  %v2_10002b24 = add i32 %v1_10002b24, 8
  %v3_10002b24 = inttoptr i32 %v2_10002b24 to i32*
  store i32 %v0_10002b20, i32* %v3_10002b24, align 4
  %v0_10002b28 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002b28, label %dec_label_pc_10002a28, label %dec_label_pc_10002b2c

dec_label_pc_10002b2c:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_10002b20
  %v0_10002b2c = load i32, i32* %r28.global-to-local, align 4
  %v1_10002b2c = add i32 %v0_10002b2c, 40
  store i32 %v1_10002b2c, i32* @r3, align 4
  %v0_10002b30 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002b30, i32* @r4, align 4
  %v0_10002b34 = call i32 @function_1000616c()
  store i32 %v0_10002b34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002a28

dec_label_pc_10002b3c:                            ; preds = %dec_label_pc_10002854
  store i32 %v6_1000280c, i32* %r0.global-to-local, align 4
  %v0_10002b40 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002b40 = add i32 %v0_10002b40, 40
  store i32 %v1_10002b40, i32* %r24.global-to-local, align 4
  store i32 %v1_100027f8, i32* %r9.global-to-local, align 4
  %v1_10002b48 = add i32 %v0_10002b40, 20
  store i32 %v1_10002b48, i32* @r30, align 4
  %v3_10002b4c = icmp eq i32 %v6_1000280c, -1
  store i1 %v3_10002b4c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002b50 = icmp eq i32 %v1_100027f8, 0
  store i1 %v3_10002b50, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100029b8.preheader

dec_label_pc_10002b5c:                            ; preds = %dec_label_pc_10002830
  %v0_10002b5c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002b5c, i32* %r3.global-to-local, align 4
  store i32 268446564, i32* @lr, align 4
  %v0_10002b60 = call i32 @function_10009158()
  store i32 %v0_10002b60, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b64

dec_label_pc_10002b64:                            ; preds = %dec_label_pc_100025e0, %dec_label_pc_10002b5c
  store i32 %v0_100025f8, i32* %r0.global-to-local, align 4
  %v1_10002b78 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100025e8)
  store i32 %v0_10002638, i32* %r28.global-to-local, align 4
  store i32 %v0_10002640, i32* %r29.global-to-local, align 4
  store i32 %v0_10002648, i32* %r30.global-to-local, align 4
  %v0_10002bc0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002bc0

; uselistorder directives
  uselistorder i32 %v0_10002b00, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i32 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v1_10002a98, { 1, 0 }
  uselistorder i1 %v0_10002a98, { 1, 0 }
  uselistorder i32 %v1_10002a88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002a50, { 1, 0 }
  uselistorder i32 %v1_100028c4, { 1, 0 }
  uselistorder i32 %v1_100028bc, { 1, 0 }
  uselistorder i32 %v1_100028a0, { 1, 0 }
  uselistorder i32 %v1_1000289c, { 1, 0 }
  uselistorder i32 %v1_10002888, { 1, 0 }
  uselistorder i32 %v1_10002884, { 1, 0 }
  uselistorder i32 %v1_10002880, { 2, 1, 0 }
  uselistorder i32 %v1_10002878, { 1, 2, 0, 3 }
  uselistorder i32 %v6_1000280c, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_100027f8, { 3, 0, 2, 1 }
  uselistorder i8 %v5_10002678, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002b64, { 1, 0 }
  uselistorder label %dec_label_pc_10002b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10002a28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100029bc, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8, { 1, 0 }
  uselistorder label %dec_label_pc_100029b8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000298c, { 1, 0 }
  uselistorder label %dec_label_pc_10002910, { 1, 0 }
}

define i32 @function_10002bc4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bc4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10002bc8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bc8, i32* %r0.global-to-local, align 4
  %v0_10002bcc = call i32 @__asm_mfcr()
  store i32 %v0_10002bcc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10002bdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bcc, i32* %r24.global-to-local, align 4
  %v0_10002c1c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c24 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10002c30 = load i32, i32* @r31, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_1000a204(i32 4, i32 4)
  store i32 %v2_10002c34, i32* %r25.global-to-local, align 4
  %v0_10002c3c = load i32, i32* @r28, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c3c to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* %r21.global-to-local, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v0_10002cb0 = load i32, i32* @r28, align 4
  %v1_10002cb4 = urem i32 %v5_10002ca0, 256
  store i32 %v1_10002cb4, i32* @r31, align 4
  %v0_10002cb8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cb8, i32* %r3.global-to-local, align 4
  store i32 268446912, i32* @lr, align 4
  %v4_10002cbc = inttoptr i32 %v0_10002cb0 to i32*
  %v5_10002cbc = call i32 @function_100006a8(i32 %v0_10002cb8, i32* %v4_10002cbc, i32 6, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  store i32 %v5_10002cbc, i32* %r22.global-to-local, align 4
  %v0_10002cd4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd4, i32* %r3.global-to-local, align 4
  store i32 268446940, i32* @lr, align 4
  %v4_10002cd8 = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cd8 = call i32 @function_100006a8(i32 %v0_10002cd4, i32* %v4_10002cd8, i32 7, i32 65535)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  store i32 %v5_10002cd8, i32* %r23.global-to-local, align 4
  %v0_10002cf0 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf0, i32* %r3.global-to-local, align 4
  store i32 268446968, i32* @lr, align 4
  %v4_10002cf4 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf4 = call i32 @function_100006a8(i32 %v0_10002cf0, i32* %v4_10002cf4, i32 17, i32 65535)
  %v0_10002cf8 = load i32, i32* @r28, align 4
  store i32 %v5_10002cf4, i32* %r19.global-to-local, align 4
  %v0_10002d08 = load i32, i32* @r29, align 4
  store i32 %v0_10002d08, i32* %r3.global-to-local, align 4
  store i32 268446992, i32* @lr, align 4
  %v4_10002d0c = inttoptr i32 %v0_10002cf8 to i32*
  %v5_10002d0c = call i32 @function_100006a8(i32 %v0_10002d08, i32* %v4_10002d0c, i32 18, i32 0)
  %v0_10002d10 = load i32, i32* @r28, align 4
  store i32 %v5_10002d0c, i32* %r20.global-to-local, align 4
  %v0_10002d20 = load i32, i32* @r29, align 4
  store i32 %v0_10002d20, i32* %r3.global-to-local, align 4
  store i32 268447016, i32* @lr, align 4
  %v4_10002d24 = inttoptr i32 %v0_10002d10 to i32*
  %v5_10002d24 = call i32 @function_100006a8(i32 %v0_10002d20, i32* %v4_10002d24, i32 11, i32 0)
  %v0_10002d28 = load i32, i32* @r28, align 4
  store i32 %v5_10002d24, i32* %r14.global-to-local, align 4
  %v0_10002d38 = load i32, i32* @r29, align 4
  store i32 %v0_10002d38, i32* %r3.global-to-local, align 4
  store i32 268447040, i32* @lr, align 4
  %v4_10002d3c = inttoptr i32 %v0_10002d28 to i32*
  %v5_10002d3c = call i32 @function_100006a8(i32 %v0_10002d38, i32* %v4_10002d3c, i32 12, i32 0)
  %v0_10002d40 = load i32, i32* @r28, align 4
  store i32 %v5_10002d3c, i32* %r17.global-to-local, align 4
  %v0_10002d50 = load i32, i32* @r29, align 4
  store i32 %v0_10002d50, i32* %r3.global-to-local, align 4
  store i32 268447064, i32* @lr, align 4
  %v4_10002d54 = inttoptr i32 %v0_10002d40 to i32*
  %v5_10002d54 = call i32 @function_100006a8(i32 %v0_10002d50, i32* %v4_10002d54, i32 13, i32 0)
  %v0_10002d58 = load i32, i32* @r28, align 4
  store i32 %v5_10002d54, i32* %r18.global-to-local, align 4
  %v0_10002d68 = load i32, i32* @r29, align 4
  store i32 %v0_10002d68, i32* %r3.global-to-local, align 4
  store i32 268447088, i32* @lr, align 4
  %v4_10002d6c = inttoptr i32 %v0_10002d58 to i32*
  %v5_10002d6c = call i32 @function_100006a8(i32 %v0_10002d68, i32* %v4_10002d6c, i32 14, i32 0)
  %v0_10002d70 = load i32, i32* @r28, align 4
  %v0_10002d80 = load i32, i32* @r29, align 4
  store i32 %v0_10002d80, i32* %r3.global-to-local, align 4
  store i32 268447112, i32* @lr, align 4
  %v4_10002d84 = inttoptr i32 %v0_10002d70 to i32*
  %v5_10002d84 = call i32 @function_100006a8(i32 %v0_10002d80, i32* %v4_10002d84, i32 15, i32 1)
  %v0_10002d88 = load i32, i32* @r28, align 4
  store i32 %v5_10002d84, i32* %r16.global-to-local, align 4
  %v0_10002d98 = load i32, i32* @r29, align 4
  store i32 %v0_10002d98, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v4_10002d9c = inttoptr i32 %v0_10002d88 to i32*
  %v5_10002d9c = call i32 @function_100006a8(i32 %v0_10002d98, i32* %v4_10002d9c, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10002da4 = load i32, i32* @global_var_1001c2d0.14, align 4
  %v0_10002da8 = load i32, i32* @r28, align 4
  store i32 %v5_10002d9c, i32* %r30.global-to-local, align 4
  %v0_10002db4 = load i32, i32* @r29, align 4
  store i32 %v0_10002db4, i32* %r3.global-to-local, align 4
  store i32 268447164, i32* @lr, align 4
  %v5_10002db8 = inttoptr i32 %v0_10002da8 to i32*
  %v6_10002db8 = call i32 @function_10000628(i32 %v0_10002db4, i32* %v5_10002db8, i32 25, i32 %v3_10002da4, i32 268566528)
  store i32 %v6_10002db8, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447184, i32* @lr, align 4
  %v3_10002dcc = call i32 @function_10009ea8(i32 2, i32 3, i32 6)
  store i32 %v3_10002dcc, i32* %r3.global-to-local, align 4
  %v3_10002dd0 = icmp eq i32 %v3_10002dcc, -1
  store i32 %v3_10002dcc, i32* %r26.global-to-local, align 4
  br i1 %v3_10002dd0, label %dec_label_pc_10003108, label %dec_label_pc_10002ddc

dec_label_pc_10002ddc:                            ; preds = %dec_label_pc_10002bc4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002de8 = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268447224, i32* @lr, align 4
  %v4_10002df4 = call i32 @function_10009e6c(i32 0, i32 3, i32 %v2_10002de8, i32 4)
  store i32 %v4_10002df4, i32* %r3.global-to-local, align 4
  %v3_10002df8 = icmp eq i32 %v4_10002df4, -1
  br i1 %v3_10002df8, label %dec_label_pc_10003100, label %dec_label_pc_10002e00

dec_label_pc_10002e00:                            ; preds = %dec_label_pc_10002ddc
  %v0_10002e00 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002e00 = icmp slt i32 %v0_10002e00, 0
  %v3_10002e00 = icmp eq i32 %v0_10002e00, 0
  store i1 %v1_10002e00, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10002e00, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10002e0c = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e0c = urem i32 %v0_10002e0c, 65536
  store i32 %v1_10002e0c, i32* %r21.global-to-local, align 4
  %v0_10002e10 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002e10 = urem i32 %v0_10002e10, 65536
  store i32 %v1_10002e10, i32* %r22.global-to-local, align 4
  %v0_10002e14 = load i32, i32* %r23.global-to-local, align 4
  %v1_10002e14 = urem i32 %v0_10002e14, 65536
  store i32 %v1_10002e14, i32* %r23.global-to-local, align 4
  %v0_10002e18 = load i32, i32* %r14.global-to-local, align 4
  %v1_10002e18 = urem i32 %v0_10002e18, 256
  store i32 %v1_10002e18, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10002e00, 1
  br i1 %tmp40, label %dec_label_pc_10002f7c, label %dec_label_pc_10002e20

dec_label_pc_10002e20:                            ; preds = %dec_label_pc_10002e00
  store i32 %v5_10002d6c, i32* %r0.global-to-local, align 4
  %v0_10002e24 = load i32, i32* @r31, align 4
  %v3_10002e24 = icmp eq i32 %v0_10002e24, 0
  store i1 %v3_10002e24, i1* %cr3_eq.global-to-local, align 1
  %v0_10002e28 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002e28 = urem i32 %v0_10002e28, 2
  store i32 %v1_10002e28, i32* %r29.global-to-local, align 4
  %v0_10002e2c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002e2c = urem i32 %v0_10002e2c, 2
  store i32 %v1_10002e2c, i32* %r17.global-to-local, align 4
  %v0_10002e30 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002e30 = urem i32 %v0_10002e30, 2
  store i32 %v1_10002e30, i32* %r18.global-to-local, align 4
  %v1_10002e34 = urem i32 %v5_10002d6c, 2
  store i32 %v1_10002e34, i32* %r28.global-to-local, align 4
  %v0_10002e38 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002e38 = urem i32 %v0_10002e38, 2
  store i32 %v1_10002e38, i32* %r30.global-to-local, align 4
  %v1_10002e3c = urem i32 %v0_10002e18, 2
  store i32 %v1_10002e3c, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10002e8c = sext i8 %v5_10002c5c to i32
  %v4_10002e94 = sext i8 %v5_10002c94 to i32
  br label %dec_label_pc_10002e44

dec_label_pc_10002e44:                            ; preds = %dec_label_pc_10002ea8, %dec_label_pc_10002e20
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268447312, i32* @lr, align 4
  %v2_10002e4c = call i32 @function_1000a204(i32 128, i32 1)
  store i32 %v2_10002e4c, i32* %r3.global-to-local, align 4
  %v3_10002e50 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002e50, i32* %r9.global-to-local, align 4
  %v0_10002e54 = load i32, i32* @r31, align 4
  %v1_10002e54 = mul i32 %v0_10002e54, 4
  store i32 %v1_10002e54, i32* %r0.global-to-local, align 4
  %v1_10002e58 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002e58 = add i32 %v1_10002e58, %v1_10002e54
  %v4_10002e58 = inttoptr i32 %v3_10002e58 to i32*
  store i32 %v2_10002e4c, i32* %v4_10002e58, align 4
  %v0_10002e5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e5c = mul i32 %v0_10002e5c, 4
  store i32 %v1_10002e5c, i32* %r9.global-to-local, align 4
  %v1_10002e60 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002e60 = add i32 %v1_10002e60, %v1_10002e5c
  %v3_10002e60 = inttoptr i32 %v2_10002e60 to i32*
  %v4_10002e60 = load i32, i32* %v3_10002e60, align 4
  store i32 %v4_10002e60, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002e68 = inttoptr i32 %v4_10002e60 to i32*
  %v2_10002e68 = load i32, i32* %v1_10002e68, align 4
  store i32 %v2_10002e68, i32* %r0.global-to-local, align 4
  %v1_10002e6c = add i32 %v4_10002e60, 20
  store i32 %v1_10002e6c, i32* %r11.global-to-local, align 4
  %v0_10002e70 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002e70 = trunc i32 %v0_10002e70 to i16
  %v3_10002e70 = add i32 %v4_10002e60, 4
  %v4_10002e70 = inttoptr i32 %v3_10002e70 to i16*
  store i16 %v1_10002e70, i16* %v4_10002e70, align 2
  %v1_10002e74 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002e74, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10002e7c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_10002e84 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002e84 = inttoptr i32 %v1_10002e84 to i32*
  store i32 %v1_10002e7c, i32* %v2_10002e84, align 4
  %v0_10002e88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002e88 = trunc i32 %v0_10002e88 to i16
  %v2_10002e88 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e88 = add i32 %v2_10002e88, 2
  %v4_10002e88 = inttoptr i32 %v3_10002e88 to i16*
  store i16 %v1_10002e88, i16* %v4_10002e88, align 2
  store i32 %v4_10002e8c, i32* %r0.global-to-local, align 4
  %v2_10002e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e90 = add i32 %v2_10002e90, 1
  %v4_10002e90 = inttoptr i32 %v3_10002e90 to i8*
  store i8 %v5_10002c5c, i8* %v4_10002e90, align 1
  store i32 %v4_10002e94, i32* %r9.global-to-local, align 4
  %v2_10002e98 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002e98 = add i32 %v2_10002e98, 8
  %v4_10002e98 = inttoptr i32 %v3_10002e98 to i8*
  store i8 %v5_10002c94, i8* %v4_10002e98, align 1
  %v0_10002e9c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002e9c, label %dec_label_pc_10002ea8, label %dec_label_pc_10002ea0

dec_label_pc_10002ea0:                            ; preds = %dec_label_pc_10002e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002ea4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002ea4 = add i32 %v2_10002ea4, 6
  %v4_10002ea4 = inttoptr i32 %v3_10002ea4 to i16*
  store i16 16384, i16* %v4_10002ea4, align 2
  br label %dec_label_pc_10002ea8

dec_label_pc_10002ea8:                            ; preds = %dec_label_pc_10002e44, %dec_label_pc_10002ea0
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10002eac = load i32, i32* %r15.global-to-local, align 4
  %v1_10002eac = load i32, i32* %r31.global-to-local, align 4
  %v2_10002eac = add i32 %v1_10002eac, 12
  %v3_10002eac = inttoptr i32 %v2_10002eac to i32*
  store i32 %v0_10002eac, i32* %v3_10002eac, align 4
  %v0_10002eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002eb0 = trunc i32 %v0_10002eb0 to i8
  %v2_10002eb0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb0 = add i32 %v2_10002eb0, 9
  %v4_10002eb0 = inttoptr i32 %v3_10002eb0 to i8*
  store i8 %v1_10002eb0, i8* %v4_10002eb0, align 1
  %v0_10002eb4 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002eb4 = trunc i32 %v0_10002eb4 to i16
  %v2_10002eb4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002eb4 = add i32 %v2_10002eb4, 20
  %v4_10002eb4 = inttoptr i32 %v3_10002eb4 to i16*
  store i16 %v1_10002eb4, i16* %v4_10002eb4, align 2
  %v3_10002eb8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002eb8, i32* %r9.global-to-local, align 4
  %v0_10002ebc = load i32, i32* %r23.global-to-local, align 4
  %v1_10002ebc = trunc i32 %v0_10002ebc to i16
  %v2_10002ebc = load i32, i32* %r11.global-to-local, align 4
  %v3_10002ebc = add i32 %v2_10002ebc, 2
  %v4_10002ebc = inttoptr i32 %v3_10002ebc to i16*
  store i16 %v1_10002ebc, i16* %v4_10002ebc, align 2
  %v0_10002ec0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002ec0 = mul i32 %v0_10002ec0, 24
  %v1_10002ec4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002ec4 = add i32 %v1_10002ec4, %v1_10002ec0
  store i32 %v2_10002ec4, i32* %r9.global-to-local, align 4
  %v1_10002ec8 = add i32 %v2_10002ec4, 16
  %v2_10002ec8 = inttoptr i32 %v1_10002ec8 to i32*
  %v3_10002ec8 = load i32, i32* %v2_10002ec8, align 4
  store i32 %v3_10002ec8, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10002ed0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002ed0 = add i32 %v1_10002ed0, 16
  %v3_10002ed0 = inttoptr i32 %v2_10002ed0 to i32*
  store i32 %v3_10002ec8, i32* %v3_10002ed0, align 4
  %v0_10002ed4 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002ed4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002ed4 = add i32 %v1_10002ed4, 4
  %v3_10002ed4 = inttoptr i32 %v2_10002ed4 to i32*
  store i32 %v0_10002ed4, i32* %v3_10002ed4, align 4
  %v0_10002ed8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002ed8 = add i32 %v0_10002ed8, 12
  %v2_10002ed8 = inttoptr i32 %v1_10002ed8 to i32*
  %v3_10002ed8 = load i32, i32* %v2_10002ed8, align 4
  store i32 %v3_10002ed8, i32* %r0.global-to-local, align 4
  %v1_10002edc = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10002edc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10002ee4 = call i32 @__asm_rlwimi(i32 %v1_10002e3c, i32 21, i32 10, i32 10)
  store i32 %v1_10002ee4, i32* %r0.global-to-local, align 4
  %v1_10002ee8 = call i32 @__asm_rlwimi(i32 %v1_10002e2c, i32 20, i32 11, i32 11)
  store i32 %v1_10002ee8, i32* %r0.global-to-local, align 4
  %v1_10002eec = call i32 @__asm_rlwimi(i32 %v1_10002e30, i32 19, i32 12, i32 12)
  store i32 %v1_10002eec, i32* %r0.global-to-local, align 4
  %v1_10002ef0 = call i32 @__asm_rlwimi(i32 %v1_10002e34, i32 18, i32 13, i32 13)
  store i32 %v1_10002ef0, i32* %r0.global-to-local, align 4
  %v1_10002ef4 = call i32 @__asm_rlwimi(i32 %v1_10002e28, i32 17, i32 14, i32 14)
  store i32 %v1_10002ef4, i32* %r0.global-to-local, align 4
  %v1_10002ef8 = call i32 @__asm_rlwimi(i32 %v1_10002e38, i32 16, i32 15, i32 15)
  %v1_10002efc = load i32, i32* %r11.global-to-local, align 4
  %v2_10002efc = add i32 %v1_10002efc, 12
  %v3_10002efc = inttoptr i32 %v2_10002efc to i32*
  store i32 %v1_10002ef8, i32* %v3_10002efc, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10002f04 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f04 = add i32 %v2_10002f04, 40
  %v4_10002f04 = inttoptr i32 %v3_10002f04 to i8*
  store i8 2, i8* %v4_10002f04, align 1
  %v0_10002f08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f08 = trunc i32 %v0_10002f08 to i8
  %v2_10002f08 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f08 = add i32 %v2_10002f08, 41
  %v4_10002f08 = inttoptr i32 %v3_10002f08 to i8*
  store i8 %v1_10002f08, i8* %v4_10002f08, align 1
  %v0_10002f0c = call i32 @function_10005f98()
  %v2_10002f14 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f14 = add i32 %v2_10002f14, 46
  %v4_10002f14 = inttoptr i32 %v3_10002f14 to i8*
  store i8 8, i8* %v4_10002f14, align 1
  %v1_10002f18 = urem i32 %v0_10002f0c, 16
  store i32 %v1_10002f18, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10002f24 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f24 = add i32 %v2_10002f24, 44
  %v4_10002f24 = inttoptr i32 %v3_10002f24 to i8*
  store i8 4, i8* %v4_10002f24, align 1
  %v0_10002f28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f28 = add i32 %v0_10002f28, 1400
  store i32 %v1_10002f28, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10002f30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f30 = trunc i32 %v0_10002f30 to i8
  %v2_10002f30 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f30 = add i32 %v2_10002f30, 45
  %v4_10002f30 = inttoptr i32 %v3_10002f30 to i8*
  store i8 %v1_10002f30, i8* %v4_10002f30, align 1
  %v0_10002f34 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f34 = trunc i32 %v0_10002f34 to i8
  %v2_10002f34 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f34 = add i32 %v2_10002f34, 47
  %v4_10002f34 = inttoptr i32 %v3_10002f34 to i8*
  store i8 %v1_10002f34, i8* %v4_10002f34, align 1
  %v0_10002f38 = load i32, i32* %r3.global-to-local, align 4
  %v1_10002f38 = trunc i32 %v0_10002f38 to i16
  %v2_10002f38 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f38 = add i32 %v2_10002f38, 42
  %v4_10002f38 = inttoptr i32 %v3_10002f38 to i16*
  store i16 %v1_10002f38, i16* %v4_10002f38, align 2
  %v0_10002f3c = call i32 @function_10005f98()
  store i32 %v0_10002f3c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_10002f48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f48 = add i32 %v1_10002f48, 52
  %v3_10002f48 = inttoptr i32 %v2_10002f48 to i32*
  store i32 0, i32* %v3_10002f48, align 4
  %v0_10002f4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f4c = trunc i32 %v0_10002f4c to i8
  %v2_10002f4c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f4c = add i32 %v2_10002f4c, 56
  %v4_10002f4c = inttoptr i32 %v3_10002f4c to i8*
  store i8 %v1_10002f4c, i8* %v4_10002f4c, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_10002f58 = load i32, i32* %r31.global-to-local, align 4
  %v2_10002f58 = add i32 %v1_10002f58, 48
  %v3_10002f58 = inttoptr i32 %v2_10002f58 to i32*
  store i32 %v0_10002f3c, i32* %v3_10002f58, align 4
  %v0_10002f5c = load i32, i32* %r0.global-to-local, align 4
  %v1_10002f5c = trunc i32 %v0_10002f5c to i8
  %v2_10002f5c = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f5c = add i32 %v2_10002f5c, 59
  %v4_10002f5c = inttoptr i32 %v3_10002f5c to i8*
  store i8 %v1_10002f5c, i8* %v4_10002f5c, align 1
  %v0_10002f60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f60 = trunc i32 %v0_10002f60 to i8
  %v2_10002f60 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f60 = add i32 %v2_10002f60, 57
  %v4_10002f60 = inttoptr i32 %v3_10002f60 to i8*
  store i8 %v1_10002f60, i8* %v4_10002f60, align 1
  %v0_10002f64 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002f64 = trunc i32 %v0_10002f64 to i8
  %v2_10002f64 = load i32, i32* %r31.global-to-local, align 4
  %v3_10002f64 = add i32 %v2_10002f64, 58
  %v4_10002f64 = inttoptr i32 %v3_10002f64 to i8*
  store i8 %v1_10002f64, i8* %v4_10002f64, align 1
  %v3_10002f68 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10002f68, i32* %r9.global-to-local, align 4
  %v1_10002f6c = add i32 %v3_10002f68, 1
  store i32 %v1_10002f6c, i32* %r31.global-to-local, align 4
  %v1_10002f70 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002f70 = icmp slt i32 %v1_10002f6c, %v1_10002f70
  store i32 %v1_10002f6c, i32* %stack_var_-120, align 4
  br i1 %v2_10002f70, label %dec_label_pc_10002e44, label %dec_label_pc_10002f7c.loopexit

dec_label_pc_10002f7c.loopexit:                   ; preds = %dec_label_pc_10002ea8
  %v0_10002f80.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_10002f84.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002f84.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10002f7c

dec_label_pc_10002f7c:                            ; preds = %dec_label_pc_10002f7c.loopexit, %dec_label_pc_10002e00
  %v1_10002f84.pre = phi i1 [ %v1_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f84.pre = phi i1 [ %v0_10002f84.pre.pre, %dec_label_pc_10002f7c.loopexit ], [ %v3_10002e00, %dec_label_pc_10002e00 ]
  %v0_10002f80 = phi i32 [ %v0_10002f80.pre, %dec_label_pc_10002f7c.loopexit ], [ %v1_10002e18, %dec_label_pc_10002e00 ]
  %v0_10002f7c = load i32, i32* %r15.global-to-local, align 4
  %v3_10002f7c = icmp eq i32 %v0_10002f7c, -1
  store i1 %v3_10002f7c, i1* %cr2_eq.global-to-local, align 1
  %v3_10002f80 = icmp eq i32 %v0_10002f80, 0
  store i1 %v3_10002f80, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10002f84.outer

dec_label_pc_10002f84.outer:                      ; preds = %dec_label_pc_10003060, %dec_label_pc_10002f7c
  %v1_10002f84.ph = phi i1 [ %v1_10002f84.pre, %dec_label_pc_10002f7c ], [ %v1_10003060, %dec_label_pc_10003060 ]
  %v0_10002f84.ph = phi i1 [ %v0_10002f84.pre, %dec_label_pc_10002f7c ], [ %v0_10003060, %dec_label_pc_10003060 ]
  %v2_10002f84 = or i1 %v1_10002f84.ph, %v0_10002f84.ph
  br label %dec_label_pc_10002f84

dec_label_pc_10002f84:                            ; preds = %dec_label_pc_10002f84.outer, %dec_label_pc_10002f84
  br i1 %v2_10002f84, label %dec_label_pc_10002f84, label %dec_label_pc_10002f88

dec_label_pc_10002f88:                            ; preds = %dec_label_pc_10002f84, %dec_label_pc_10003060
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002f98

dec_label_pc_10002f98:                            ; preds = %dec_label_pc_10002ff0, %dec_label_pc_10002f88
  %v0_10002f98 = phi i32 [ %v1_10003050, %dec_label_pc_10002ff0 ], [ 0, %dec_label_pc_10002f88 ]
  %v1_10002f98 = mul i32 %v0_10002f98, 24
  store i32 %v1_10002f98, i32* %r0.global-to-local, align 4
  %v1_10002f9c = mul i32 %v0_10002f98, 4
  store i32 %v1_10002f9c, i32* %r11.global-to-local, align 4
  %v1_10002fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002fa0 = add i32 %v1_10002fa0, %v1_10002f9c
  %v3_10002fa0 = inttoptr i32 %v2_10002fa0 to i32*
  %v4_10002fa0 = load i32, i32* %v3_10002fa0, align 4
  store i32 %v4_10002fa0, i32* %r28.global-to-local, align 4
  %v1_10002fa4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002fa4 = add i32 %v1_10002fa4, %v1_10002f98
  %v1_10002fa8 = add i32 %v2_10002fa4, 20
  %v2_10002fa8 = inttoptr i32 %v1_10002fa8 to i8*
  %v3_10002fa8 = load i8, i8* %v2_10002fa8, align 1
  %v4_10002fa8 = zext i8 %v3_10002fa8 to i32
  store i32 %v4_10002fa8, i32* %r9.global-to-local, align 4
  %v1_10002fac = add i32 %v4_10002fa0, 20
  store i32 %v1_10002fac, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10002fa8, 32
  br i1 %tmp41, label %dec_label_pc_10003068, label %dec_label_pc_10002fb8

dec_label_pc_10002fb8:                            ; preds = %dec_label_pc_10002f98
  %v0_10002fb8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002fb8, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10002fbc:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r21.global-to-local, align 4
  %v4_10002fc4 = icmp eq i32 %v0_10002fc4, 65535
  br i1 %v4_10002fc4, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_10002fcc:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v1_10002fcc = phi i32 [ %v1_100030a0, %dec_label_pc_10003090 ], [ 65535, %dec_label_pc_10002fbc ]
  %v0_10002fcc = load i32, i32* %r22.global-to-local, align 4
  %v4_10002fcc = icmp eq i32 %v0_10002fcc, %v1_10002fcc
  br i1 %v4_10002fcc, label %dec_label_pc_100030b8, label %dec_label_pc_10002fd4

dec_label_pc_10002fd4:                            ; preds = %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge, %dec_label_pc_10002fcc
  %v1_10002fd4 = phi i32 [ %v1_10002fd4.pre, %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge ], [ %v1_10002fcc, %dec_label_pc_10002fcc ]
  %v0_10002fd4 = load i32, i32* %r23.global-to-local, align 4
  %v4_10002fd4 = icmp eq i32 %v0_10002fd4, %v1_10002fd4
  br i1 %v4_10002fd4, label %dec_label_pc_100030c8, label %dec_label_pc_10002fdc

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge, %dec_label_pc_10002fd4
  %v1_10002fdc = phi i32 [ %v1_10002fdc.pre, %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge ], [ %v1_10002fd4, %dec_label_pc_10002fd4 ]
  %v0_10002fdc = load i32, i32* %r19.global-to-local, align 4
  %v4_10002fdc = icmp eq i32 %v0_10002fdc, %v1_10002fdc
  br i1 %v4_10002fdc, label %dec_label_pc_100030d8, label %dec_label_pc_10002fe4

dec_label_pc_10002fe4:                            ; preds = %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge, %dec_label_pc_10002fdc
  %v1_10002fe4 = phi i32 [ %v1_10002fe4.pre, %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge ], [ %v1_10002fdc, %dec_label_pc_10002fdc ]
  %v0_10002fe4 = load i32, i32* %r20.global-to-local, align 4
  %v4_10002fe4 = icmp eq i32 %v0_10002fe4, %v1_10002fe4
  br i1 %v4_10002fe4, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_10002fec:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_10002fec = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002fec, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_10002ff0:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8, %dec_label_pc_100030f4
  %v0_10002ff0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10002ff0 = trunc i32 %v0_10002ff0 to i16
  %v2_10002ff0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002ff0 = add i32 %v2_10002ff0, 10
  %v4_10002ff0 = inttoptr i32 %v3_10002ff0 to i16*
  store i16 %v1_10002ff0, i16* %v4_10002ff0, align 2
  %v0_10002ff8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ff8, i32* @r3, align 4
  %v2_10002ffc = call i32 @function_100043cc(i32 %v0_10002ff8, i32 20)
  %v3_10002ffc = trunc i32 %v2_10002ffc to i16
  %v0_10003000 = load i32, i32* @r31, align 4
  store i32 %v0_10003000, i32* @r4, align 4
  %v4_10003004 = add i32 %v0_10002ff8, 10
  %v5_10003004 = inttoptr i32 %v4_10003004 to i16*
  store i16 %v3_10002ffc, i16* %v5_10003004, align 2
  %v0_1000300c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000300c = trunc i32 %v0_1000300c to i16
  %v2_1000300c = load i32, i32* @r31, align 4
  %v3_1000300c = add i32 %v2_1000300c, 16
  %v4_1000300c = inttoptr i32 %v3_1000300c to i16*
  store i16 %v1_1000300c, i16* %v4_1000300c, align 2
  %v0_10003014 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003014, i32* %r3.global-to-local, align 4
  %v4_10003018 = call i32 @function_10004430(i32 %v0_10003014, i32 %v0_10003000, i32 40, i32 40)
  %v5_10003018 = trunc i32 %v4_10003018 to i16
  store i32 %v4_10003018, i32* %r3.global-to-local, align 4
  %v3_1000301c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000301c, i32* %r7.global-to-local, align 4
  %v0_10003020 = load i32, i32* @r31, align 4
  %v1_10003020 = add i32 %v0_10003020, 2
  %v2_10003020 = inttoptr i32 %v1_10003020 to i16*
  %v3_10003020 = load i16, i16* %v2_10003020, align 2
  %v4_10003020 = zext i16 %v3_10003020 to i32
  store i32 %v4_10003020, i32* %r0.global-to-local, align 4
  %v0_10003024 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003028 = mul i32 %v3_1000301c, 24
  store i32 %v1_10003028, i32* %r7.global-to-local, align 4
  %v4_1000302c = add i32 %v0_10003020, 16
  %v5_1000302c = inttoptr i32 %v4_1000302c to i16*
  store i16 %v5_10003018, i16* %v5_1000302c, align 2
  %v0_10003034 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003034, i32* %r3.global-to-local, align 4
  %v0_10003038 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003038 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003038 = add i32 %v1_10003038, %v0_10003038
  store i32 %v2_10003038, i32* %r7.global-to-local, align 4
  %v0_10003040 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003040 = trunc i32 %v0_10003040 to i16
  %v3_10003040 = add i32 %v2_10003038, 2
  %v4_10003040 = inttoptr i32 %v3_10003040 to i16*
  store i16 %v1_10003040, i16* %v4_10003040, align 2
  store i32 268447820, i32* @lr, align 4
  %v6_10003048 = call i32 @function_10009e2c(i32 %v0_10003034, i32 %v0_10003024, i32 60, i32 16384, i32 %v2_10003038, i32 16)
  store i32 %v6_10003048, i32* %r3.global-to-local, align 4
  %v3_1000304c = load i32, i32* %stack_var_-120, align 4
  %v1_10003050 = add i32 %v3_1000304c, 1
  store i32 %v1_10003050, i32* %r9.global-to-local, align 4
  %v1_10003054 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003054 = icmp slt i32 %v1_10003050, %v1_10003054
  store i32 %v1_10003050, i32* %stack_var_-120, align 4
  br i1 %v2_10003054, label %dec_label_pc_10002f98, label %dec_label_pc_10003060

dec_label_pc_10003060:                            ; preds = %dec_label_pc_10002ff0
  %v0_10003060 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003060 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003060 = or i1 %v0_10003060, %v1_10003060
  br i1 %v2_10003060, label %dec_label_pc_10002f84.outer, label %dec_label_pc_10002f88

dec_label_pc_10003068:                            ; preds = %dec_label_pc_10002f98
  %v1_10003068 = add i32 %v2_10002fa4, 16
  %v2_10003068 = inttoptr i32 %v1_10003068 to i32*
  %v3_10003068 = load i32, i32* %v2_10003068, align 4
  store i32 %v3_10003068, i32* %r29.global-to-local, align 4
  %v0_1000306c = call i32 @function_10005f98()
  store i32 %v0_1000306c, i32* %r3.global-to-local, align 4
  %v3_10003070 = load i32, i32* %stack_var_-120, align 4
  %v1_10003074 = mul i32 %v3_10003070, 24
  %v1_10003078 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003078 = add i32 %v1_10003078, %v1_10003074
  store i32 %v2_10003078, i32* %r9.global-to-local, align 4
  %v1_1000307c = add i32 %v2_10003078, 20
  %v2_1000307c = inttoptr i32 %v1_1000307c to i8*
  %v3_1000307c = load i8, i8* %v2_1000307c, align 1
  %v4_1000307c = zext i8 %v3_1000307c to i32
  store i32 %v4_1000307c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_1000307c, 64
  %v2_10003080 = zext i8 %tmp to i32
  %v3_10003080 = lshr i32 %v0_1000306c, %v2_10003080
  store i32 %v3_10003080, i32* %r3.global-to-local, align 4
  %v0_10003084 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003084 = add i32 %v3_10003080, %v0_10003084
  store i32 %v2_10003084, i32* %r29.global-to-local, align 4
  %v1_10003088 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003088 = add i32 %v1_10003088, 16
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v2_10003084, i32* %v3_10003088, align 4
  %v0_1000308c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000308c, label %dec_label_pc_10003090, label %dec_label_pc_10002fbc

dec_label_pc_10003090:                            ; preds = %dec_label_pc_10003068, %dec_label_pc_10002fb8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003094 = call i32 @function_10005f98()
  store i32 %v0_10003094, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_1000309c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000309c = add i32 %v1_1000309c, 12
  %v3_1000309c = inttoptr i32 %v2_1000309c to i32*
  store i32 %v0_10003094, i32* %v3_1000309c, align 4
  %v0_100030a0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100030a0 = load i32, i32* %r29.global-to-local, align 4
  %v4_100030a0 = icmp eq i32 %v0_100030a0, %v1_100030a0
  br i1 %v4_100030a0, label %dec_label_pc_100030a8, label %dec_label_pc_10002fcc

dec_label_pc_100030a8:                            ; preds = %dec_label_pc_10003090, %dec_label_pc_10002fbc
  %v0_100030a8 = call i32 @function_10005f98()
  %v1_100030a8 = trunc i32 %v0_100030a8 to i16
  store i32 %v0_100030a8, i32* %r3.global-to-local, align 4
  %v0_100030ac = load i32, i32* %r22.global-to-local, align 4
  %v1_100030ac = load i32, i32* %r29.global-to-local, align 4
  %v4_100030ac = icmp eq i32 %v0_100030ac, %v1_100030ac
  %v3_100030b0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030b0 = add i32 %v3_100030b0, 4
  %v5_100030b0 = inttoptr i32 %v4_100030b0 to i16*
  store i16 %v1_100030a8, i16* %v5_100030b0, align 2
  br i1 %v4_100030ac, label %dec_label_pc_100030b8, label %dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge

dec_label_pc_100030a8.dec_label_pc_10002fd4_crit_edge: ; preds = %dec_label_pc_100030a8
  %v1_10002fd4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fd4

dec_label_pc_100030b8:                            ; preds = %dec_label_pc_100030a8, %dec_label_pc_10002fcc
  %v0_100030b8 = call i32 @function_10005f98()
  %v1_100030b8 = trunc i32 %v0_100030b8 to i16
  store i32 %v0_100030b8, i32* %r3.global-to-local, align 4
  %v0_100030bc = load i32, i32* %r23.global-to-local, align 4
  %v1_100030bc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030bc = icmp eq i32 %v0_100030bc, %v1_100030bc
  %v3_100030c0 = load i32, i32* %r28.global-to-local, align 4
  %v4_100030c0 = add i32 %v3_100030c0, 20
  %v5_100030c0 = inttoptr i32 %v4_100030c0 to i16*
  store i16 %v1_100030b8, i16* %v5_100030c0, align 2
  br i1 %v4_100030bc, label %dec_label_pc_100030c8, label %dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge

dec_label_pc_100030b8.dec_label_pc_10002fdc_crit_edge: ; preds = %dec_label_pc_100030b8
  %v1_10002fdc.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fdc

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_100030b8, %dec_label_pc_10002fd4
  %v0_100030c8 = call i32 @function_10005f98()
  %v1_100030c8 = trunc i32 %v0_100030c8 to i16
  store i32 %v0_100030c8, i32* %r3.global-to-local, align 4
  %v0_100030cc = load i32, i32* %r19.global-to-local, align 4
  %v1_100030cc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030cc = icmp eq i32 %v0_100030cc, %v1_100030cc
  %v3_100030d0 = load i32, i32* @r31, align 4
  %v4_100030d0 = add i32 %v3_100030d0, 2
  %v5_100030d0 = inttoptr i32 %v4_100030d0 to i16*
  store i16 %v1_100030c8, i16* %v5_100030d0, align 2
  br i1 %v4_100030cc, label %dec_label_pc_100030d8, label %dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge

dec_label_pc_100030c8.dec_label_pc_10002fe4_crit_edge: ; preds = %dec_label_pc_100030c8
  %v1_10002fe4.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10002fe4

dec_label_pc_100030d8:                            ; preds = %dec_label_pc_100030c8, %dec_label_pc_10002fdc
  %v0_100030d8 = call i32 @function_10005f98()
  store i32 %v0_100030d8, i32* %r3.global-to-local, align 4
  %v0_100030dc = load i32, i32* %r20.global-to-local, align 4
  %v1_100030dc = load i32, i32* %r29.global-to-local, align 4
  %v4_100030dc = icmp eq i32 %v0_100030dc, %v1_100030dc
  %v1_100030e0 = load i32, i32* @r31, align 4
  %v2_100030e0 = add i32 %v1_100030e0, 4
  %v3_100030e0 = inttoptr i32 %v2_100030e0 to i32*
  store i32 %v0_100030d8, i32* %v3_100030e0, align 4
  br i1 %v4_100030dc, label %dec_label_pc_100030e8, label %dec_label_pc_10002fec

dec_label_pc_100030e8:                            ; preds = %dec_label_pc_100030d8, %dec_label_pc_10002fe4
  %v0_100030e8 = call i32 @function_10005f98()
  store i32 %v0_100030e8, i32* %r3.global-to-local, align 4
  %v1_100030ec = load i32, i32* @r31, align 4
  %v2_100030ec = add i32 %v1_100030ec, 8
  %v3_100030ec = inttoptr i32 %v2_100030ec to i32*
  store i32 %v0_100030e8, i32* %v3_100030ec, align 4
  %v0_100030f0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_100030f0, label %dec_label_pc_10002ff0, label %dec_label_pc_100030f4

dec_label_pc_100030f4:                            ; preds = %dec_label_pc_10002fec, %dec_label_pc_100030e8
  %v0_100030f4 = call i32 @function_10005f98()
  %v1_100030f4 = trunc i32 %v0_100030f4 to i16
  store i32 %v0_100030f4, i32* %r3.global-to-local, align 4
  %v3_100030f8 = load i32, i32* @r31, align 4
  %v4_100030f8 = add i32 %v3_100030f8, 18
  %v5_100030f8 = inttoptr i32 %v4_100030f8 to i16*
  store i16 %v1_100030f4, i16* %v5_100030f8, align 2
  br label %dec_label_pc_10002ff0

dec_label_pc_10003100:                            ; preds = %dec_label_pc_10002ddc
  %v0_10003100 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003100, i32* %r3.global-to-local, align 4
  store i32 268448008, i32* @lr, align 4
  %v0_10003104 = call i32 @function_10009158()
  store i32 %v0_10003104, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10002bc4, %dec_label_pc_10003100
  store i32 %v0_10002bdc, i32* %r0.global-to-local, align 4
  %v1_1000311c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bcc)
  store i32 %v0_10002c1c, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c24, i32* %r29.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r31.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003164

; uselistorder directives
  uselistorder i32 %v0_100030f4, { 1, 0 }
  uselistorder i32 %v0_100030c8, { 1, 0 }
  uselistorder i32 %v0_100030b8, { 1, 0 }
  uselistorder i32 %v0_100030a8, { 1, 0 }
  uselistorder i32 %v1_100030a0, { 1, 0 }
  uselistorder i1 %v1_10003060, { 1, 0 }
  uselistorder i1 %v0_10003060, { 1, 0 }
  uselistorder i32 %v1_10003050, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003018, { 1, 0 }
  uselistorder i32 %v1_10002f9c, { 1, 0 }
  uselistorder i32 %v1_10002e5c, { 1, 0 }
  uselistorder i32 %v1_10002e54, { 1, 0 }
  uselistorder i32 %v1_10002e3c, { 1, 0 }
  uselistorder i32 %v1_10002e38, { 1, 0 }
  uselistorder i32 %v1_10002e34, { 1, 0 }
  uselistorder i32 %v1_10002e30, { 1, 0 }
  uselistorder i32 %v1_10002e2c, { 1, 0 }
  uselistorder i32 %v1_10002e28, { 1, 0 }
  uselistorder i32 %v1_10002e18, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 10, 8, 11, 7, 12, 9, 13, 1, 2, 4, 3, 5, 6, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_100030f4, { 1, 0 }
  uselistorder label %dec_label_pc_10002ff0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002f88, { 1, 0 }
  uselistorder label %dec_label_pc_10002f84, { 1, 0 }
  uselistorder label %dec_label_pc_10002ea8, { 1, 0 }
}

define i32 @function_10003168(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003168:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10003170 = call i32 @__asm_mfcr()
  store i32 %v0_10003170, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100031a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448200, i32* @lr, align 4
  %v2_100031c4 = call i32 @function_1000a204(i32 4, i32 4)
  store i32 %v2_100031c4, i32* %r27.global-to-local, align 4
  %v0_100031d0 = load i32, i32* @r30, align 4
  store i32 %v0_100031d0, i32* %r3.global-to-local, align 4
  store i32 268448216, i32* @lr, align 4
  %v2_100031d4 = call i32 @function_1000a204(i32 %v0_100031d0, i32 4)
  %v0_100031dc = load i32, i32* @r28, align 4
  store i32 %v2_100031d4, i32* %r26.global-to-local, align 4
  %v0_100031ec = load i32, i32* @r29, align 4
  store i32 %v0_100031ec, i32* %r3.global-to-local, align 4
  store i32 268448244, i32* @lr, align 4
  %v4_100031f0 = inttoptr i32 %v0_100031dc to i32*
  %v5_100031f0 = call i32 @function_100006a8(i32 %v0_100031ec, i32* %v4_100031f0, i32 7, i32 65535)
  %v0_100031fc = load i32, i32* @r28, align 4
  %v1_10003204 = urem i32 %v5_100031f0, 65536
  store i32 %v1_10003204, i32* %r21.global-to-local, align 4
  %v0_10003208 = load i32, i32* @r29, align 4
  store i32 %v0_10003208, i32* %r3.global-to-local, align 4
  store i32 268448272, i32* @lr, align 4
  %v4_1000320c = inttoptr i32 %v0_100031fc to i32*
  %v5_1000320c = call i32 @function_100006a8(i32 %v0_10003208, i32* %v4_1000320c, i32 6, i32 65535)
  %v0_10003210 = load i32, i32* @r28, align 4
  %v1_10003214 = urem i32 %v5_1000320c, 65536
  store i32 %v1_10003214, i32* %r22.global-to-local, align 4
  %v0_10003220 = load i32, i32* @r29, align 4
  store i32 %v0_10003220, i32* %r3.global-to-local, align 4
  store i32 268448296, i32* @lr, align 4
  %v4_10003224 = inttoptr i32 %v0_10003210 to i32*
  %v5_10003224 = call i32 @function_100006a8(i32 %v0_10003220, i32* %v4_10003224, i32 0, i32 512)
  %v0_10003228 = load i32, i32* @r28, align 4
  %v1_1000322c = urem i32 %v5_10003224, 65536
  store i32 %v1_1000322c, i32* @r31, align 4
  %v0_10003234 = load i32, i32* @r29, align 4
  store i32 %v0_10003234, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003240.23 to i32), i32* @lr, align 4
  %v4_1000323c = inttoptr i32 %v0_10003228 to i32*
  %v5_1000323c = call i32 @function_100006a8(i32 %v0_10003234, i32* %v4_1000323c, i32 1, i32 1)
  store i32 %v5_1000323c, i32* %r3.global-to-local, align 4
  %v0_1000324c = load i32, i32* %r22.global-to-local, align 4
  %v4_1000324c = icmp eq i32 %v0_1000324c, 65535
  %v1_10003254 = urem i32 %v5_1000323c, 256
  store i32 %v1_10003254, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_1000324c, label %dec_label_pc_10003450, label %dec_label_pc_10003268

dec_label_pc_10003268:                            ; preds = %dec_label_pc_10003168, %dec_label_pc_10003450
  %v0_10003268 = load i32, i32* @r30, align 4
  %v1_10003268 = icmp slt i32 %v0_10003268, 0
  %v3_10003268 = icmp eq i32 %v0_10003268, 0
  store i1 %v1_10003268, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003268, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10003268, 1
  br i1 %tmp38, label %dec_label_pc_10003328, label %dec_label_pc_10003270

dec_label_pc_10003270:                            ; preds = %dec_label_pc_10003268
  %v0_10003274 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003274, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10003280 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003280 = icmp eq i32 %v0_10003280, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100033d0 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10003280, label %dec_label_pc_100033a0, label %dec_label_pc_10003294

dec_label_pc_10003294:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003308
  %v0_100032a0 = phi i32 [ %v0_1000331c, %dec_label_pc_10003308 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100032a0 = add i32 %v0_100032a0, 1
  store i32 %v1_100032a0, i32* %r24.global-to-local, align 4
  store i32 268448424, i32* @lr, align 4
  %v2_100032a4 = call i32 @function_1000a204(i32 65535, i32 1)
  %v0_100032a8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100032a8 = trunc i32 %v0_100032a8 to i16
  %v2_100032a8 = load i32, i32* @r28, align 4
  %v3_100032a8 = add i32 %v2_100032a8, 2
  %v4_100032a8 = inttoptr i32 %v3_100032a8 to i16*
  store i16 %v1_100032a8, i16* %v4_100032a8, align 2
  %v1_100032ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100032ac = load i32, i32* %r27.global-to-local, align 4
  %v3_100032ac = add i32 %v2_100032ac, %v1_100032ac
  %v4_100032ac = inttoptr i32 %v3_100032ac to i32*
  store i32 %v2_100032a4, i32* %v4_100032ac, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448448, i32* @lr, align 4
  %v3_100032bc = call i32 @function_10009ea8(i32 2, i32 2, i32 17)
  store i32 %v3_100032bc, i32* %r3.global-to-local, align 4
  %v3_100032c4 = icmp eq i32 %v3_100032bc, -1
  %v1_100032cc = load i32, i32* %r25.global-to-local, align 4
  %v2_100032cc = load i32, i32* %r26.global-to-local, align 4
  %v3_100032cc = add i32 %v2_100032cc, %v1_100032cc
  %v4_100032cc = inttoptr i32 %v3_100032cc to i32*
  store i32 %v3_100032bc, i32* %v4_100032cc, align 4
  br i1 %v3_100032c4, label %dec_label_pc_10003404, label %dec_label_pc_100032d4

dec_label_pc_100032d4:                            ; preds = %dec_label_pc_10003294
  %v0_100032d4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100032d4, i32* %stack_var_-72, align 4
  store i32 268448484, i32* @lr, align 4
  %v0_100032e0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100032e0 = call i32 @function_10009c74(i32 %v0_100032e0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100032e0, i32* %r3.global-to-local, align 4
  %v0_100032e4 = load i32, i32* @r28, align 4
  %v1_100032e4 = add i32 %v0_100032e4, 20
  %v2_100032e4 = inttoptr i32 %v1_100032e4 to i8*
  %v3_100032e4 = load i8, i8* %v2_100032e4, align 1
  %v2_100032e8 = icmp ugt i8 %v3_100032e4, 31
  br i1 %v2_100032e8, label %dec_label_pc_10003308, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032d4
  %v1_100032f0 = add i32 %v0_100032e4, 16
  %v2_100032f0 = inttoptr i32 %v1_100032f0 to i32*
  %v3_100032f0 = load i32, i32* %v2_100032f0, align 4
  store i32 %v3_100032f0, i32* %r29.global-to-local, align 4
  %v0_100032f4 = call i32 @function_10005f98()
  store i32 %v0_100032f4, i32* %r3.global-to-local, align 4
  %v0_100032f8 = load i32, i32* @r28, align 4
  %v1_100032f8 = add i32 %v0_100032f8, 20
  %v2_100032f8 = inttoptr i32 %v1_100032f8 to i8*
  %v3_100032f8 = load i8, i8* %v2_100032f8, align 1
  %tmp = urem i8 %v3_100032f8, 64
  %v2_100032fc = zext i8 %tmp to i32
  %v3_100032fc = lshr i32 %v0_100032f4, %v2_100032fc
  %v0_10003300 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003300 = add i32 %v3_100032fc, %v0_10003300
  store i32 %v2_10003300, i32* %r3.global-to-local, align 4
  %v2_10003304 = add i32 %v0_100032f8, 4
  %v3_10003304 = inttoptr i32 %v2_10003304 to i32*
  store i32 %v2_10003300, i32* %v3_10003304, align 4
  br label %dec_label_pc_10003308

dec_label_pc_10003308:                            ; preds = %dec_label_pc_100032d4, %dec_label_pc_100032f0
  %v0_10003308 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003308 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003308 = add i32 %v1_10003308, %v0_10003308
  %v3_10003308 = inttoptr i32 %v2_10003308 to i32*
  %v4_10003308 = load i32, i32* %v3_10003308, align 4
  store i32 %v4_10003308, i32* @r3, align 4
  %v1_10003314 = add i32 %v0_10003308, 4
  store i32 %v1_10003314, i32* %r25.global-to-local, align 4
  store i32 268448540, i32* @lr, align 4
  %v0_10003318 = call i32 @function_10009ca8()
  store i32 %v0_10003318, i32* %r3.global-to-local, align 4
  %v0_1000331c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000331c = load i32, i32* @r30, align 4
  %v4_1000331c = icmp eq i32 %v0_1000331c, %v1_1000331c
  %v0_10003320 = load i32, i32* @r28, align 4
  %v1_10003320 = add i32 %v0_10003320, 24
  store i32 %v1_10003320, i32* @r28, align 4
  br i1 %v4_1000331c, label %dec_label_pc_10003328, label %dec_label_pc_10003294

dec_label_pc_10003328:                            ; preds = %dec_label_pc_10003308, %dec_label_pc_10003380, %dec_label_pc_10003268
  %v0_10003328 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003328 = icmp eq i32 %v0_10003328, 0
  store i1 %v3_10003328, i1* %cr3_eq.global-to-local, align 1
  %v0_1000332c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000332c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_1000332c.outer

dec_label_pc_1000332c.outer:                      ; preds = %dec_label_pc_10003360, %dec_label_pc_10003498, %dec_label_pc_10003328
  %v1_1000332c.ph39 = phi i1 [ %v1_1000332c.pre, %dec_label_pc_10003328 ], [ %v1_10003498, %dec_label_pc_10003498 ], [ %v1_10003360, %dec_label_pc_10003360 ]
  %v0_1000332c.ph40 = phi i1 [ %v0_1000332c.pre, %dec_label_pc_10003328 ], [ %v0_10003498, %dec_label_pc_10003498 ], [ %v0_10003360, %dec_label_pc_10003360 ]
  %v2_1000332c = or i1 %v1_1000332c.ph39, %v0_1000332c.ph40
  br label %dec_label_pc_1000332c

dec_label_pc_1000332c:                            ; preds = %dec_label_pc_1000332c.outer, %dec_label_pc_1000332c
  br i1 %v2_1000332c, label %dec_label_pc_1000332c, label %dec_label_pc_10003330

dec_label_pc_10003330:                            ; preds = %dec_label_pc_10003498, %dec_label_pc_10003360, %dec_label_pc_1000332c
  %v0_10003330 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003330, label %dec_label_pc_10003334, label %dec_label_pc_1000345c

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_1000333c:                            ; preds = %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge, %dec_label_pc_10003334
  %v0_10003340 = phi i32 [ %v0_10003358, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v0_10003350 = phi i32 [ %v0_1000333c.pre, %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge ], [ 0, %dec_label_pc_10003334 ]
  %v1_1000333c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000333c = add i32 %v1_1000333c, %v0_10003350
  %v3_1000333c = inttoptr i32 %v2_1000333c to i32*
  %v4_1000333c = load i32, i32* %v3_1000333c, align 4
  store i32 %v4_1000333c, i32* %r3.global-to-local, align 4
  %v1_10003340 = add i32 %v0_10003340, 1
  store i32 %v1_10003340, i32* %r28.global-to-local, align 4
  %v1_10003344 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003344 = add i32 %v1_10003344, %v0_10003350
  %v3_10003344 = inttoptr i32 %v2_10003344 to i32*
  %v4_10003344 = load i32, i32* %v3_10003344, align 4
  %v0_10003348 = load i32, i32* @r31, align 4
  %v1_10003350 = add i32 %v0_10003350, 4
  store i32 %v1_10003350, i32* %r29.global-to-local, align 4
  store i32 268448600, i32* @lr, align 4
  %v4_10003354 = call i32 @function_10009df4(i32 %v4_1000333c, i32 %v4_10003344, i32 %v0_10003348, i32 16384)
  store i32 %v4_10003354, i32* %r3.global-to-local, align 4
  %v0_10003358 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003358 = load i32, i32* @r30, align 4
  %v4_10003358 = icmp eq i32 %v0_10003358, %v1_10003358
  br i1 %v4_10003358, label %dec_label_pc_10003360, label %dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge

dec_label_pc_1000333c.dec_label_pc_1000333c_crit_edge: ; preds = %dec_label_pc_1000333c
  %v0_1000333c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000333c

dec_label_pc_10003360:                            ; preds = %dec_label_pc_1000333c
  %v0_10003360 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003360 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003360 = or i1 %v0_10003360, %v1_10003360
  br i1 %v2_10003360, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

dec_label_pc_10003380:                            ; preds = %dec_label_pc_100033e4, %dec_label_pc_10003400
  %v0_10003380 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003380 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003380 = add i32 %v1_10003380, %v0_10003380
  %v3_10003380 = inttoptr i32 %v2_10003380 to i32*
  %v4_10003380 = load i32, i32* %v3_10003380, align 4
  store i32 %v4_10003380, i32* @r3, align 4
  %v1_1000338c = add i32 %v0_10003380, 4
  store i32 %v1_1000338c, i32* %r25.global-to-local, align 4
  store i32 268448660, i32* @lr, align 4
  %v0_10003390 = call i32 @function_10009ca8()
  store i32 %v0_10003390, i32* %r3.global-to-local, align 4
  %v0_10003394 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003394 = load i32, i32* @r30, align 4
  %v4_10003394 = icmp eq i32 %v0_10003394, %v1_10003394
  %v0_10003398 = load i32, i32* @r28, align 4
  %v1_10003398 = add i32 %v0_10003398, 24
  store i32 %v1_10003398, i32* @r28, align 4
  br i1 %v4_10003394, label %dec_label_pc_10003328, label %dec_label_pc_100033a0

dec_label_pc_100033a0:                            ; preds = %dec_label_pc_10003270, %dec_label_pc_10003380
  %v0_100033ac = phi i32 [ %v0_10003394, %dec_label_pc_10003380 ], [ 0, %dec_label_pc_10003270 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_100033ac = add i32 %v0_100033ac, 1
  store i32 %v1_100033ac, i32* %r24.global-to-local, align 4
  store i32 268448692, i32* @lr, align 4
  %v2_100033b0 = call i32 @function_1000a204(i32 65535, i32 1)
  store i32 %v2_100033b0, i32* %r3.global-to-local, align 4
  %v1_100033b4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100033b4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100033b4 = add i32 %v2_100033b4, %v1_100033b4
  %v4_100033b4 = inttoptr i32 %v3_100033b4 to i32*
  store i32 %v2_100033b0, i32* %v4_100033b4, align 4
  %v0_100033b8 = call i32 @function_10005f98()
  %v1_100033b8 = trunc i32 %v0_100033b8 to i16
  %v3_100033bc = load i32, i32* @r28, align 4
  %v4_100033bc = add i32 %v3_100033bc, 2
  %v5_100033bc = inttoptr i32 %v4_100033bc to i16*
  store i16 %v1_100033b8, i16* %v5_100033bc, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448720, i32* @lr, align 4
  %v3_100033cc = call i32 @function_10009ea8(i32 2, i32 2, i32 17)
  store i32 %v3_100033cc, i32* %r3.global-to-local, align 4
  %v3_100033d4 = icmp eq i32 %v3_100033cc, -1
  %v1_100033dc = load i32, i32* %r25.global-to-local, align 4
  %v2_100033dc = load i32, i32* %r26.global-to-local, align 4
  %v3_100033dc = add i32 %v2_100033dc, %v1_100033dc
  %v4_100033dc = inttoptr i32 %v3_100033dc to i32*
  store i32 %v3_100033cc, i32* %v4_100033dc, align 4
  br i1 %v3_100033d4, label %dec_label_pc_10003404, label %dec_label_pc_100033e4

dec_label_pc_100033e4:                            ; preds = %dec_label_pc_100033a0
  %v0_100033e4 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100033e4, i32* %stack_var_-72, align 4
  store i32 268448756, i32* @lr, align 4
  %v0_100033f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_100033f0 = call i32 @function_10009c74(i32 %v0_100033f0, i32 %v2_100033d0, i32 16)
  store i32 %v3_100033f0, i32* %r3.global-to-local, align 4
  %v0_100033f4 = load i32, i32* @r28, align 4
  %v1_100033f4 = add i32 %v0_100033f4, 20
  %v2_100033f4 = inttoptr i32 %v1_100033f4 to i8*
  %v3_100033f4 = load i8, i8* %v2_100033f4, align 1
  %v2_100033f8 = icmp ugt i8 %v3_100033f4, 31
  br i1 %v2_100033f8, label %dec_label_pc_10003380, label %dec_label_pc_10003400

dec_label_pc_10003400:                            ; preds = %dec_label_pc_100033e4
  %v1_10003368 = add i32 %v0_100033f4, 16
  %v2_10003368 = inttoptr i32 %v1_10003368 to i32*
  %v3_10003368 = load i32, i32* %v2_10003368, align 4
  store i32 %v3_10003368, i32* %r29.global-to-local, align 4
  %v0_1000336c = call i32 @function_10005f98()
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  %v0_10003370 = load i32, i32* @r28, align 4
  %v1_10003370 = add i32 %v0_10003370, 20
  %v2_10003370 = inttoptr i32 %v1_10003370 to i8*
  %v3_10003370 = load i8, i8* %v2_10003370, align 1
  %tmp43 = urem i8 %v3_10003370, 64
  %v2_10003374 = zext i8 %tmp43 to i32
  %v3_10003374 = lshr i32 %v0_1000336c, %v2_10003374
  %v0_10003378 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003378 = add i32 %v3_10003374, %v0_10003378
  store i32 %v2_10003378, i32* %r3.global-to-local, align 4
  %v2_1000337c = add i32 %v0_10003370, 4
  %v3_1000337c = inttoptr i32 %v2_1000337c to i32*
  store i32 %v2_10003378, i32* %v3_1000337c, align 4
  br label %dec_label_pc_10003380

dec_label_pc_10003404:                            ; preds = %dec_label_pc_10003294, %dec_label_pc_100033a0
  %v1_10003418 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003170)
  store i32 %v0_1000319c, i32* %r28.global-to-local, align 4
  store i32 %v0_100031a4, i32* %r29.global-to-local, align 4
  %v0_1000344c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000344c

dec_label_pc_10003450:                            ; preds = %dec_label_pc_10003168
  %v0_10003450 = call i32 @function_10005f98()
  store i32 %v0_10003450, i32* %r3.global-to-local, align 4
  %v1_10003454 = urem i32 %v0_10003450, 65536
  store i32 %v1_10003454, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10003268

dec_label_pc_1000345c:                            ; preds = %dec_label_pc_10003330
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003464:                            ; preds = %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge, %dec_label_pc_1000345c
  %v0_1000346c = phi i32 [ %v0_10003490, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v0_10003464 = phi i32 [ %v0_10003464.pre, %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge ], [ 0, %dec_label_pc_1000345c ]
  %v1_10003464 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003464 = add i32 %v1_10003464, %v0_10003464
  %v3_10003464 = inttoptr i32 %v2_10003464 to i32*
  %v4_10003464 = load i32, i32* %v3_10003464, align 4
  store i32 %v4_10003464, i32* @r29, align 4
  %v0_10003468 = load i32, i32* @r31, align 4
  store i32 %v0_10003468, i32* @r4, align 4
  %v1_1000346c = add i32 %v0_1000346c, 1
  store i32 %v1_1000346c, i32* %r25.global-to-local, align 4
  store i32 %v4_10003464, i32* @r3, align 4
  %v0_10003474 = call i32 @function_1000616c()
  store i32 %v0_10003474, i32* %r3.global-to-local, align 4
  %v0_10003478 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003478 = load i32, i32* %r26.global-to-local, align 4
  %v2_10003478 = add i32 %v1_10003478, %v0_10003478
  %v3_10003478 = inttoptr i32 %v2_10003478 to i32*
  %v4_10003478 = load i32, i32* %v3_10003478, align 4
  store i32 %v4_10003478, i32* %r3.global-to-local, align 4
  %v0_1000347c = load i32, i32* @r29, align 4
  %v0_10003480 = load i32, i32* @r31, align 4
  %v1_10003488 = add i32 %v0_10003478, 4
  store i32 %v1_10003488, i32* %r28.global-to-local, align 4
  store i32 268448912, i32* @lr, align 4
  %v4_1000348c = call i32 @function_10009df4(i32 %v4_10003478, i32 %v0_1000347c, i32 %v0_10003480, i32 16384)
  store i32 %v4_1000348c, i32* %r3.global-to-local, align 4
  %v0_10003490 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003490 = load i32, i32* @r30, align 4
  %v4_10003490 = icmp eq i32 %v0_10003490, %v1_10003490
  br i1 %v4_10003490, label %dec_label_pc_10003498, label %dec_label_pc_10003464.dec_label_pc_10003464_crit_edge

dec_label_pc_10003464.dec_label_pc_10003464_crit_edge: ; preds = %dec_label_pc_10003464
  %v0_10003464.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10003464

dec_label_pc_10003498:                            ; preds = %dec_label_pc_10003464
  %v0_10003498 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003498 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003498 = or i1 %v0_10003498, %v1_10003498
  br i1 %v2_10003498, label %dec_label_pc_1000332c.outer, label %dec_label_pc_10003330

; uselistorder directives
  uselistorder i1 %v1_10003498, { 1, 0 }
  uselistorder i1 %v0_10003498, { 1, 0 }
  uselistorder i32 %v0_10003490, { 1, 0 }
  uselistorder i32 %v0_10003478, { 1, 0 }
  uselistorder i32 %v0_10003380, { 1, 0 }
  uselistorder i1 %v1_10003360, { 1, 0 }
  uselistorder i1 %v0_10003360, { 1, 0 }
  uselistorder i32 %v0_10003358, { 1, 0 }
  uselistorder i32 %v0_10003350, { 2, 0, 1 }
  uselistorder i32 %v0_1000331c, { 1, 0 }
  uselistorder i32 %v0_10003308, { 1, 0 }
  uselistorder i32 %v2_100033d0, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 22, 6, 7, 9, 10, 11, 12, 13, 14, 8, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_10003404, { 1, 0 }
  uselistorder label %dec_label_pc_100033a0, { 1, 0 }
  uselistorder label %dec_label_pc_10003380, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c, { 1, 0 }
  uselistorder label %dec_label_pc_1000332c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003308, { 1, 0 }
  uselistorder label %dec_label_pc_10003294, { 1, 0 }
  uselistorder label %dec_label_pc_10003268, { 1, 0 }
}

define i32 @function_100034a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100034a0:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100034a4 = load i32, i32* @lr, align 4
  store i32 %v0_100034a4, i32* %r0.global-to-local, align 4
  %v0_100034a8 = call i32 @__asm_mfcr()
  store i32 %v0_100034a8, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_100034b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100034a8, i32* %r19.global-to-local, align 4
  %v0_100034ec = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100034f4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100034fc = load i32, i32* @r30, align 4
  %v0_10003500 = load i32, i32* @r31, align 4
  store i32 268449044, i32* @lr, align 4
  %v2_10003510 = call i32 @function_1000a204(i32 4, i32 4)
  store i32 %v2_10003510, i32* %r20.global-to-local, align 4
  %v0_10003518 = load i32, i32* @r28, align 4
  %v0_10003524 = load i32, i32* @r29, align 4
  store i32 %v0_10003524, i32* %r3.global-to-local, align 4
  store i32 268449068, i32* @lr, align 4
  %v4_10003528 = inttoptr i32 %v0_10003518 to i32*
  %v5_10003528 = call i32 @function_100006a8(i32 %v0_10003524, i32* %v4_10003528, i32 2, i32 0)
  %v0_10003538 = load i32, i32* @r28, align 4
  %v1_1000353c = urem i32 %v5_10003528, 256
  store i32 %v1_1000353c, i32* %r15.global-to-local, align 4
  %v0_10003540 = load i32, i32* @r29, align 4
  store i32 %v0_10003540, i32* %r3.global-to-local, align 4
  store i32 268449096, i32* @lr, align 4
  %v4_10003544 = inttoptr i32 %v0_10003538 to i32*
  %v5_10003544 = call i32 @function_100006a8(i32 %v0_10003540, i32* %v4_10003544, i32 3, i32 65535)
  %v0_10003548 = load i32, i32* @r28, align 4
  store i32 %v5_10003544, i32* %r23.global-to-local, align 4
  %v0_10003558 = load i32, i32* @r29, align 4
  store i32 %v0_10003558, i32* %r3.global-to-local, align 4
  store i32 268449120, i32* @lr, align 4
  %v4_1000355c = inttoptr i32 %v0_10003548 to i32*
  %v5_1000355c = call i32 @function_100006a8(i32 %v0_10003558, i32* %v4_1000355c, i32 4, i32 64)
  %v0_10003560 = load i32, i32* @r28, align 4
  %v1_1000356c = urem i32 %v5_1000355c, 256
  store i32 %v1_1000356c, i32* %r16.global-to-local, align 4
  %v0_10003570 = load i32, i32* @r29, align 4
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  store i32 268449144, i32* @lr, align 4
  %v4_10003574 = inttoptr i32 %v0_10003560 to i32*
  %v5_10003574 = call i32 @function_100006a8(i32 %v0_10003570, i32* %v4_10003574, i32 5, i32 0)
  %v0_10003584 = load i32, i32* @r28, align 4
  %v1_10003588 = urem i32 %v5_10003574, 256
  store i32 %v1_10003588, i32* @r31, align 4
  %v0_1000358c = load i32, i32* @r29, align 4
  store i32 %v0_1000358c, i32* %r3.global-to-local, align 4
  store i32 268449172, i32* @lr, align 4
  %v4_10003590 = inttoptr i32 %v0_10003584 to i32*
  %v5_10003590 = call i32 @function_100006a8(i32 %v0_1000358c, i32* %v4_10003590, i32 6, i32 65535)
  %v0_10003598 = load i32, i32* @r28, align 4
  store i32 %v5_10003590, i32* %r24.global-to-local, align 4
  %v0_100035a8 = load i32, i32* @r29, align 4
  store i32 %v0_100035a8, i32* %r3.global-to-local, align 4
  store i32 268449200, i32* @lr, align 4
  %v4_100035ac = inttoptr i32 %v0_10003598 to i32*
  %v5_100035ac = call i32 @function_100006a8(i32 %v0_100035a8, i32* %v4_100035ac, i32 7, i32 65535)
  %v0_100035b0 = load i32, i32* @r28, align 4
  store i32 %v5_100035ac, i32* %r25.global-to-local, align 4
  %v0_100035c0 = load i32, i32* @r29, align 4
  store i32 %v0_100035c0, i32* %r3.global-to-local, align 4
  store i32 268449224, i32* @lr, align 4
  %v4_100035c4 = inttoptr i32 %v0_100035b0 to i32*
  %v5_100035c4 = call i32 @function_100006a8(i32 %v0_100035c0, i32* %v4_100035c4, i32 0, i32 512)
  %v0_100035c8 = load i32, i32* @r28, align 4
  store i32 %v5_100035c4, i32* %r26.global-to-local, align 4
  %v0_100035d8 = load i32, i32* @r29, align 4
  store i32 %v0_100035d8, i32* %r3.global-to-local, align 4
  store i32 268449248, i32* @lr, align 4
  %v4_100035dc = inttoptr i32 %v0_100035c8 to i32*
  %v5_100035dc = call i32 @function_100006a8(i32 %v0_100035d8, i32* %v4_100035dc, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100035e4 = load i32, i32* @global_var_1001c2d0.14, align 4
  %v0_100035e8 = load i32, i32* @r28, align 4
  %v1_100035f0 = urem i32 %v5_100035dc, 256
  store i32 %v1_100035f0, i32* %r17.global-to-local, align 4
  %v0_100035f4 = load i32, i32* @r29, align 4
  store i32 %v0_100035f4, i32* %r3.global-to-local, align 4
  store i32 268449276, i32* @lr, align 4
  %v4_100035f8 = inttoptr i32 %v0_100035e8 to i32*
  %v5_100035f8 = call i32 @function_100006a8(i32 %v0_100035f4, i32* %v4_100035f8, i32 25, i32 %v3_100035e4)
  store i32 %v5_100035f8, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268449296, i32* @lr, align 4
  %v3_1000360c = call i32 @function_10009ea8(i32 2, i32 3, i32 17)
  store i32 %v3_1000360c, i32* %r3.global-to-local, align 4
  %v3_10003610 = icmp eq i32 %v3_1000360c, -1
  store i32 %v3_1000360c, i32* %r21.global-to-local, align 4
  br i1 %v3_10003610, label %dec_label_pc_1000386c, label %dec_label_pc_1000361c

dec_label_pc_1000361c:                            ; preds = %dec_label_pc_100034a0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003628 = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268449336, i32* @lr, align 4
  %v4_10003634 = call i32 @function_10009e6c(i32 0, i32 3, i32 %v2_10003628, i32 4)
  store i32 %v4_10003634, i32* %r3.global-to-local, align 4
  %v3_10003638 = icmp eq i32 %v4_10003634, -1
  br i1 %v3_10003638, label %dec_label_pc_10003864, label %dec_label_pc_10003640

dec_label_pc_10003640:                            ; preds = %dec_label_pc_1000361c
  %v0_10003640 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003640 = urem i32 %v0_10003640, 65536
  store i32 %v1_10003640, i32* %r18.global-to-local, align 4
  %v0_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003644 = urem i32 %v0_10003644, 65536
  store i32 %v1_10003644, i32* %r22.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000364c = urem i32 %v0_1000364c, 65536
  store i32 %v1_1000364c, i32* %r23.global-to-local, align 4
  %v0_10003650 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003650 = urem i32 %v0_10003650, 65536
  store i32 %v1_10003650, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10003640, 1461
  br i1 %tmp30, label %dec_label_pc_1000365c, label %dec_label_pc_10003658

dec_label_pc_10003658:                            ; preds = %dec_label_pc_10003640
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000365c

dec_label_pc_1000365c:                            ; preds = %dec_label_pc_10003640, %dec_label_pc_10003658
  %v0_1000396c = phi i32 [ %v1_10003640, %dec_label_pc_10003640 ], [ 1460, %dec_label_pc_10003658 ]
  %v0_1000365c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000365c = icmp slt i32 %v0_1000365c, 0
  %v3_1000365c = icmp eq i32 %v0_1000365c, 0
  store i1 %v1_1000365c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000365c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_1000365c, 1
  br i1 %tmp31, label %dec_label_pc_10003964, label %dec_label_pc_1000366c

dec_label_pc_1000366c:                            ; preds = %dec_label_pc_1000365c
  %v0_1000366c = load i32, i32* @r31, align 4
  %v3_1000366c = icmp eq i32 %v0_1000366c, 0
  %v1_10003670 = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_10003670, i32* %r25.global-to-local, align 4
  %v1_10003674 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003674, i32* %r26.global-to-local, align 4
  %v1_10003678 = urem i32 %v1_10003670, 65536
  store i32 %v1_10003678, i32* @r28, align 4
  %v1_1000367c = urem i32 %v1_10003674, 65536
  store i32 %v1_1000367c, i32* @r29, align 4
  br i1 %v3_1000366c, label %dec_label_pc_10003684, label %dec_label_pc_100038cc

dec_label_pc_10003684:                            ; preds = %dec_label_pc_1000366c
  br label %dec_label_pc_10003688

dec_label_pc_10003688:                            ; preds = %dec_label_pc_10003688, %dec_label_pc_10003684
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268449428, i32* @lr, align 4
  %v2_10003690 = call i32 @function_1000a204(i32 1510, i32 1)
  store i32 %v2_10003690, i32* %r3.global-to-local, align 4
  %v3_10003694 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003694, i32* %r9.global-to-local, align 4
  %v0_10003698 = load i32, i32* @r31, align 4
  %v1_10003698 = mul i32 %v0_10003698, 4
  store i32 %v1_10003698, i32* %r0.global-to-local, align 4
  %v1_1000369c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000369c = add i32 %v1_1000369c, %v1_10003698
  %v4_1000369c = inttoptr i32 %v3_1000369c to i32*
  store i32 %v2_10003690, i32* %v4_1000369c, align 4
  %v0_100036a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036a0 = mul i32 %v0_100036a0, 4
  store i32 %v1_100036a0, i32* %r9.global-to-local, align 4
  %v1_100036a4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100036a4 = add i32 %v1_100036a4, %v1_100036a0
  %v3_100036a4 = inttoptr i32 %v2_100036a4 to i32*
  %v4_100036a4 = load i32, i32* %v3_100036a4, align 4
  store i32 %v4_100036a4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100036ac = inttoptr i32 %v4_100036a4 to i32*
  %v2_100036ac = load i32, i32* %v1_100036ac, align 4
  store i32 %v2_100036ac, i32* %r0.global-to-local, align 4
  %v1_100036b0 = add i32 %v4_100036a4, 20
  store i32 %v1_100036b0, i32* %r10.global-to-local, align 4
  %v0_100036b4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100036b4 = trunc i32 %v0_100036b4 to i8
  %v3_100036b4 = add i32 %v4_100036a4, 8
  %v4_100036b4 = inttoptr i32 %v3_100036b4 to i8*
  store i8 %v1_100036b4, i8* %v4_100036b4, align 1
  %v1_100036b8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100036b8, i32* %r0.global-to-local, align 4
  %v0_100036bc = load i32, i32* @r30, align 4
  %v1_100036bc = load i32, i32* %r11.global-to-local, align 4
  %v2_100036bc = add i32 %v1_100036bc, 12
  %v3_100036bc = inttoptr i32 %v2_100036bc to i32*
  store i32 %v0_100036bc, i32* %v3_100036bc, align 4
  %v1_100036c0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100036c4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 4
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v1_100036c8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  store i32 %v1_100036c0, i32* %v2_100036c8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100036d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d0 = add i32 %v2_100036d0, 9
  %v4_100036d0 = inttoptr i32 %v3_100036d0 to i8*
  store i8 17, i8* %v4_100036d0, align 1
  %v0_100036d4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100036d4 = trunc i32 %v0_100036d4 to i8
  %v2_100036d4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d4 = add i32 %v2_100036d4, 1
  %v4_100036d4 = inttoptr i32 %v3_100036d4 to i8*
  store i8 %v1_100036d4, i8* %v4_100036d4, align 1
  %v0_100036d8 = load i32, i32* @r28, align 4
  %v1_100036d8 = trunc i32 %v0_100036d8 to i16
  %v2_100036d8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036d8 = add i32 %v2_100036d8, 2
  %v4_100036d8 = inttoptr i32 %v3_100036d8 to i16*
  store i16 %v1_100036d8, i16* %v4_100036d8, align 2
  %v3_100036dc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100036dc, i32* %r9.global-to-local, align 4
  %v0_100036e0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100036e0 = trunc i32 %v0_100036e0 to i16
  %v2_100036e0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100036e0 = add i32 %v2_100036e0, 20
  %v4_100036e0 = inttoptr i32 %v3_100036e0 to i16*
  store i16 %v1_100036e0, i16* %v4_100036e0, align 2
  %v0_100036e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036e4 = add i32 %v0_100036e4, 1
  store i32 %v1_100036e4, i32* %r31.global-to-local, align 4
  %v1_100036e8 = mul i32 %v0_100036e4, 24
  store i32 %v1_100036e8, i32* %r9.global-to-local, align 4
  %v1_100036ec = load i32, i32* %r19.global-to-local, align 4
  %v2_100036ec = icmp slt i32 %v1_100036e4, %v1_100036ec
  %v0_100036f0 = load i32, i32* @r29, align 4
  %v1_100036f0 = trunc i32 %v0_100036f0 to i16
  %v2_100036f0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f0 = add i32 %v2_100036f0, 4
  %v4_100036f0 = inttoptr i32 %v3_100036f0 to i16*
  store i16 %v1_100036f0, i16* %v4_100036f0, align 2
  %v0_100036f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036f4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100036f4 = add i32 %v1_100036f4, %v0_100036f4
  store i32 %v2_100036f4, i32* %r9.global-to-local, align 4
  %v0_100036f8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100036f8 = trunc i32 %v0_100036f8 to i16
  %v2_100036f8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100036f8 = add i32 %v2_100036f8, 2
  %v4_100036f8 = inttoptr i32 %v3_100036f8 to i16*
  store i16 %v1_100036f8, i16* %v4_100036f8, align 2
  %v0_100036fc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036fc = add i32 %v0_100036fc, 16
  %v2_100036fc = inttoptr i32 %v1_100036fc to i32*
  %v3_100036fc = load i32, i32* %v2_100036fc, align 4
  store i32 %v3_100036fc, i32* %r0.global-to-local, align 4
  %v1_10003700 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003700 = add i32 %v1_10003700, 16
  %v3_10003700 = inttoptr i32 %v2_10003700 to i32*
  store i32 %v3_100036fc, i32* %v3_10003700, align 4
  %v0_10003704 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003704, i32* %stack_var_-104, align 4
  br i1 %v2_100036ec, label %dec_label_pc_10003688, label %dec_label_pc_1000370c

dec_label_pc_1000370c:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_10003688
  %v0_1000370c = load i32, i32* @r30, align 4
  %v3_1000370c = icmp eq i32 %v0_1000370c, -1
  store i1 %v3_1000370c, i1* %cr2_eq.global-to-local, align 1
  %v0_10003710 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003710 = icmp eq i32 %v0_10003710, 0
  store i1 %v3_10003710, i1* %cr3_eq.global-to-local, align 1
  %v0_10003714.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003714.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003714.preheader

dec_label_pc_10003714.preheader:                  ; preds = %dec_label_pc_100037e0, %dec_label_pc_10003964, %dec_label_pc_1000370c
  %v1_10003714 = phi i1 [ %v1_1000365c, %dec_label_pc_10003964 ], [ %v1_10003714.pre, %dec_label_pc_1000370c ], [ %v1_100037e0, %dec_label_pc_100037e0 ]
  %v0_10003714 = phi i1 [ %v3_1000365c, %dec_label_pc_10003964 ], [ %v0_10003714.pre, %dec_label_pc_1000370c ], [ %v0_100037e0, %dec_label_pc_100037e0 ]
  %v2_10003714 = or i1 %v1_10003714, %v0_10003714
  br label %dec_label_pc_10003714

dec_label_pc_10003714:                            ; preds = %dec_label_pc_10003714.preheader, %dec_label_pc_10003714
  br i1 %v2_10003714, label %dec_label_pc_10003714, label %dec_label_pc_10003718

dec_label_pc_10003718:                            ; preds = %dec_label_pc_10003714, %dec_label_pc_100037e0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10003728

dec_label_pc_10003728:                            ; preds = %dec_label_pc_10003770, %dec_label_pc_10003718
  %v0_10003728 = phi i32 [ %v1_100037d0, %dec_label_pc_10003770 ], [ 0, %dec_label_pc_10003718 ]
  %v1_10003728 = mul i32 %v0_10003728, 24
  store i32 %v1_10003728, i32* %r0.global-to-local, align 4
  %v1_1000372c = mul i32 %v0_10003728, 4
  store i32 %v1_1000372c, i32* %r11.global-to-local, align 4
  %v1_10003730 = load i32, i32* %r20.global-to-local, align 4
  %v2_10003730 = add i32 %v1_10003730, %v1_1000372c
  %v3_10003730 = inttoptr i32 %v2_10003730 to i32*
  %v4_10003730 = load i32, i32* %v3_10003730, align 4
  store i32 %v4_10003730, i32* %r28.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003734 = add i32 %v1_10003734, %v1_10003728
  store i32 %v2_10003734, i32* %r10.global-to-local, align 4
  %v1_10003738 = add i32 %v2_10003734, 20
  %v2_10003738 = inttoptr i32 %v1_10003738 to i8*
  %v3_10003738 = load i8, i8* %v2_10003738, align 1
  %v4_10003738 = zext i8 %v3_10003738 to i32
  store i32 %v4_10003738, i32* %r9.global-to-local, align 4
  %v1_1000373c = add i32 %v4_10003730, 20
  store i32 %v1_1000373c, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_10003738, 32
  br i1 %tmp32, label %dec_label_pc_100037e8, label %dec_label_pc_10003748

dec_label_pc_10003748:                            ; preds = %dec_label_pc_10003728
  %v0_10003748 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003748, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 65535, i32* @r29, align 4
  %v0_10003754 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003754 = icmp eq i32 %v0_10003754, 65535
  br i1 %v4_10003754, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_1000375c:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v1_1000375c = phi i32 [ %v1_10003820, %dec_label_pc_10003810 ], [ 65535, %dec_label_pc_1000374c ]
  %v0_1000375c = load i32, i32* %r23.global-to-local, align 4
  %v4_1000375c = icmp eq i32 %v0_1000375c, %v1_1000375c
  br i1 %v4_1000375c, label %dec_label_pc_10003838, label %dec_label_pc_10003764

dec_label_pc_10003764:                            ; preds = %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge, %dec_label_pc_1000375c
  %v1_10003764 = phi i32 [ %v1_10003764.pre, %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge ], [ %v1_1000375c, %dec_label_pc_1000375c ]
  %v0_10003764 = load i32, i32* %r24.global-to-local, align 4
  %v4_10003764 = icmp eq i32 %v0_10003764, %v1_10003764
  br i1 %v4_10003764, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_1000376c:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_1000376c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_1000376c, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848, %dec_label_pc_10003854
  %v0_10003770 = load i32, i32* @r30, align 4
  %v1_10003770 = trunc i32 %v0_10003770 to i16
  %v2_10003770 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003770 = add i32 %v2_10003770, 10
  %v4_10003770 = inttoptr i32 %v3_10003770 to i16*
  store i16 %v1_10003770, i16* %v4_10003770, align 2
  %v0_10003778 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003778, i32* @r3, align 4
  %v2_1000377c = call i32 @function_100043cc(i32 %v0_10003778, i32 20)
  %v3_1000377c = trunc i32 %v2_1000377c to i16
  %v0_10003780 = load i32, i32* @r31, align 4
  store i32 %v0_10003780, i32* @r4, align 4
  %v4_10003784 = add i32 %v0_10003778, 10
  %v5_10003784 = inttoptr i32 %v4_10003784 to i16*
  store i16 %v3_1000377c, i16* %v5_10003784, align 2
  %v0_10003788 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000378c = load i32, i32* @r30, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v2_1000378c = load i32, i32* @r31, align 4
  %v3_1000378c = add i32 %v2_1000378c, 6
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003790 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003790, i32* %r3.global-to-local, align 4
  %v0_10003794 = load i32, i32* @r31, align 4
  %v1_10003794 = add i32 %v0_10003794, 4
  %v2_10003794 = inttoptr i32 %v1_10003794 to i16*
  %v3_10003794 = load i16, i16* %v2_10003794, align 2
  %v4_10003794 = zext i16 %v3_10003794 to i32
  %v4_10003798 = call i32 @function_10004430(i32 %v0_10003790, i32 %v0_10003780, i32 %v4_10003794, i32 %v0_10003788)
  %v5_10003798 = trunc i32 %v4_10003798 to i16
  store i32 %v4_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_1000379c, i32* %r7.global-to-local, align 4
  %v0_100037a0 = load i32, i32* @r31, align 4
  %v1_100037a0 = add i32 %v0_100037a0, 2
  %v2_100037a0 = inttoptr i32 %v1_100037a0 to i16*
  %v3_100037a0 = load i16, i16* %v2_100037a0, align 2
  %v4_100037a0 = zext i16 %v3_100037a0 to i32
  store i32 %v4_100037a0, i32* %r0.global-to-local, align 4
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037a8 = mul i32 %v3_1000379c, 24
  store i32 %v1_100037a8, i32* %r7.global-to-local, align 4
  %v4_100037ac = add i32 %v0_100037a0, 6
  %v5_100037ac = inttoptr i32 %v4_100037ac to i16*
  store i16 %v5_10003798, i16* %v5_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r25.global-to-local, align 4
  %v0_100037b4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100037b4, i32* %r3.global-to-local, align 4
  %v0_100037b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037b8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037b8 = add i32 %v1_100037b8, %v0_100037b8
  store i32 %v2_100037b8, i32* %r7.global-to-local, align 4
  %v0_100037c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100037c0 = trunc i32 %v0_100037c0 to i16
  %v3_100037c0 = add i32 %v2_100037b8, 2
  %v4_100037c0 = inttoptr i32 %v3_100037c0 to i16*
  store i16 %v1_100037c0, i16* %v4_100037c0, align 2
  store i32 268449740, i32* @lr, align 4
  %v6_100037c8 = call i32 @function_10009e2c(i32 %v0_100037b4, i32 %v0_100037a4, i32 %v0_100037b0, i32 16384, i32 %v2_100037b8, i32 16)
  store i32 %v6_100037c8, i32* %r3.global-to-local, align 4
  %v3_100037cc = load i32, i32* %stack_var_-104, align 4
  %v1_100037d0 = add i32 %v3_100037cc, 1
  store i32 %v1_100037d0, i32* %r9.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100037d4 = icmp slt i32 %v1_100037d0, %v1_100037d4
  store i32 %v1_100037d0, i32* %stack_var_-104, align 4
  br i1 %v2_100037d4, label %dec_label_pc_10003728, label %dec_label_pc_100037e0

dec_label_pc_100037e0:                            ; preds = %dec_label_pc_10003770
  %v0_100037e0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100037e0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100037e0 = or i1 %v0_100037e0, %v1_100037e0
  br i1 %v2_100037e0, label %dec_label_pc_10003714.preheader, label %dec_label_pc_10003718

dec_label_pc_100037e8:                            ; preds = %dec_label_pc_10003728
  %v1_100037e8 = add i32 %v2_10003734, 16
  %v2_100037e8 = inttoptr i32 %v1_100037e8 to i32*
  %v3_100037e8 = load i32, i32* %v2_100037e8, align 4
  store i32 %v3_100037e8, i32* %r29.global-to-local, align 4
  %v0_100037ec = call i32 @function_10005f98()
  store i32 %v0_100037ec, i32* %r3.global-to-local, align 4
  %v3_100037f0 = load i32, i32* %stack_var_-104, align 4
  %v1_100037f4 = mul i32 %v3_100037f0, 24
  %v1_100037f8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v1_100037f4
  store i32 %v2_100037f8, i32* %r9.global-to-local, align 4
  %v1_100037fc = add i32 %v2_100037f8, 20
  %v2_100037fc = inttoptr i32 %v1_100037fc to i8*
  %v3_100037fc = load i8, i8* %v2_100037fc, align 1
  %v4_100037fc = zext i8 %v3_100037fc to i32
  store i32 %v4_100037fc, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100037fc, 64
  %v2_10003800 = zext i8 %tmp to i32
  %v3_10003800 = lshr i32 %v0_100037ec, %v2_10003800
  store i32 %v3_10003800, i32* %r3.global-to-local, align 4
  %v0_10003804 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003804 = add i32 %v3_10003800, %v0_10003804
  store i32 %v2_10003804, i32* %r29.global-to-local, align 4
  %v1_10003808 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003808 = add i32 %v1_10003808, 16
  %v3_10003808 = inttoptr i32 %v2_10003808 to i32*
  store i32 %v2_10003804, i32* %v3_10003808, align 4
  %v0_1000380c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000380c, label %dec_label_pc_10003810, label %dec_label_pc_1000374c

dec_label_pc_10003810:                            ; preds = %dec_label_pc_100037e8, %dec_label_pc_10003748
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003814 = call i32 @function_10005f98()
  store i32 %v0_10003814, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_1000381c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000381c = add i32 %v1_1000381c, 12
  %v3_1000381c = inttoptr i32 %v2_1000381c to i32*
  store i32 %v0_10003814, i32* %v3_1000381c, align 4
  %v0_10003820 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003820 = load i32, i32* @r29, align 4
  %v4_10003820 = icmp eq i32 %v0_10003820, %v1_10003820
  br i1 %v4_10003820, label %dec_label_pc_10003828, label %dec_label_pc_1000375c

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003810, %dec_label_pc_1000374c
  %v0_10003828 = call i32 @function_10005f98()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  store i32 %v0_10003828, i32* %r3.global-to-local, align 4
  %v0_1000382c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000382c = load i32, i32* @r29, align 4
  %v4_1000382c = icmp eq i32 %v0_1000382c, %v1_1000382c
  %v3_10003830 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  br i1 %v4_1000382c, label %dec_label_pc_10003838, label %dec_label_pc_10003828.dec_label_pc_10003764_crit_edge

dec_label_pc_10003828.dec_label_pc_10003764_crit_edge: ; preds = %dec_label_pc_10003828
  %v1_10003764.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003764

dec_label_pc_10003838:                            ; preds = %dec_label_pc_10003828, %dec_label_pc_1000375c
  %v0_10003838 = call i32 @function_10005f98()
  %v1_10003838 = trunc i32 %v0_10003838 to i16
  store i32 %v0_10003838, i32* %r3.global-to-local, align 4
  %v0_1000383c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000383c = load i32, i32* @r29, align 4
  %v4_1000383c = icmp eq i32 %v0_1000383c, %v1_1000383c
  %v3_10003840 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003840 = add i32 %v3_10003840, 20
  %v5_10003840 = inttoptr i32 %v4_10003840 to i16*
  store i16 %v1_10003838, i16* %v5_10003840, align 2
  br i1 %v4_1000383c, label %dec_label_pc_10003848, label %dec_label_pc_1000376c

dec_label_pc_10003848:                            ; preds = %dec_label_pc_10003838, %dec_label_pc_10003764
  %v0_10003848 = call i32 @function_10005f98()
  %v1_10003848 = trunc i32 %v0_10003848 to i16
  store i32 %v0_10003848, i32* %r3.global-to-local, align 4
  %v3_1000384c = load i32, i32* @r31, align 4
  %v4_1000384c = add i32 %v3_1000384c, 2
  %v5_1000384c = inttoptr i32 %v4_1000384c to i16*
  store i16 %v1_10003848, i16* %v5_1000384c, align 2
  %v0_10003850 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003850, label %dec_label_pc_10003770, label %dec_label_pc_10003854

dec_label_pc_10003854:                            ; preds = %dec_label_pc_1000376c, %dec_label_pc_10003848
  %v0_10003854 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003854 = add i32 %v0_10003854, 28
  store i32 %v1_10003854, i32* @r3, align 4
  %v0_10003858 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10003858, i32* @r4, align 4
  %v0_1000385c = call i32 @function_1000616c()
  store i32 %v0_1000385c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003864:                            ; preds = %dec_label_pc_1000361c
  %v0_10003864 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003864, i32* %r3.global-to-local, align 4
  store i32 268449900, i32* @lr, align 4
  %v0_10003868 = call i32 @function_10009158()
  store i32 %v0_10003868, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000386c

dec_label_pc_1000386c:                            ; preds = %dec_label_pc_100034a0, %dec_label_pc_10003864
  store i32 %v0_100034b8, i32* %r0.global-to-local, align 4
  %v1_10003880 = call %0 @__asm_mtcrf(i32 56, i32 %v0_100034a8)
  store i32 %v0_100034ec, i32* %r28.global-to-local, align 4
  store i32 %v0_100034f4, i32* %r29.global-to-local, align 4
  store i32 %v0_100034fc, i32* %r30.global-to-local, align 4
  store i32 %v0_10003500, i32* %r31.global-to-local, align 4
  %v0_100038c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100038c8

dec_label_pc_100038cc:                            ; preds = %dec_label_pc_1000366c
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100038d4

dec_label_pc_100038d4:                            ; preds = %dec_label_pc_100038d4, %dec_label_pc_100038cc
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450016, i32* @lr, align 4
  %v2_100038dc = call i32 @function_1000a204(i32 1510, i32 1)
  store i32 %v2_100038dc, i32* %r3.global-to-local, align 4
  %v3_100038e0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100038e0, i32* %r9.global-to-local, align 4
  %v0_100038e4 = load i32, i32* @r31, align 4
  %v1_100038e4 = mul i32 %v0_100038e4, 4
  store i32 %v1_100038e4, i32* %r0.global-to-local, align 4
  %v1_100038e8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100038e8 = add i32 %v1_100038e8, %v1_100038e4
  %v4_100038e8 = inttoptr i32 %v3_100038e8 to i32*
  store i32 %v2_100038dc, i32* %v4_100038e8, align 4
  %v0_100038ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100038ec = mul i32 %v0_100038ec, 4
  store i32 %v1_100038ec, i32* %r9.global-to-local, align 4
  %v1_100038f0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100038f0 = add i32 %v1_100038f0, %v1_100038ec
  %v3_100038f0 = inttoptr i32 %v2_100038f0 to i32*
  %v4_100038f0 = load i32, i32* %v3_100038f0, align 4
  store i32 %v4_100038f0, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100038f8 = inttoptr i32 %v4_100038f0 to i32*
  %v2_100038f8 = load i32, i32* %v1_100038f8, align 4
  store i32 %v2_100038f8, i32* %r0.global-to-local, align 4
  %v1_100038fc = add i32 %v4_100038f0, 20
  store i32 %v1_100038fc, i32* %r10.global-to-local, align 4
  %v0_10003900 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003900 = trunc i32 %v0_10003900 to i8
  %v3_10003900 = add i32 %v4_100038f0, 8
  %v4_10003900 = inttoptr i32 %v3_10003900 to i8*
  store i8 %v1_10003900, i8* %v4_10003900, align 1
  %v1_10003904 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003904, i32* %r0.global-to-local, align 4
  %v0_10003908 = load i32, i32* @r30, align 4
  %v1_10003908 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003908 = add i32 %v1_10003908, 12
  %v3_10003908 = inttoptr i32 %v2_10003908 to i32*
  store i32 %v0_10003908, i32* %v3_10003908, align 4
  %v1_1000390c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003910 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003910 = trunc i32 %v0_10003910 to i16
  %v2_10003910 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003910 = add i32 %v2_10003910, 4
  %v4_10003910 = inttoptr i32 %v3_10003910 to i16*
  store i16 %v1_10003910, i16* %v4_10003910, align 2
  %v1_10003914 = load i32, i32* %r11.global-to-local, align 4
  %v2_10003914 = inttoptr i32 %v1_10003914 to i32*
  store i32 %v1_1000390c, i32* %v2_10003914, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_1000391c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000391c = add i32 %v2_1000391c, 9
  %v4_1000391c = inttoptr i32 %v3_1000391c to i8*
  store i8 17, i8* %v4_1000391c, align 1
  %v0_10003920 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003920 = trunc i32 %v0_10003920 to i8
  %v2_10003920 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003920 = add i32 %v2_10003920, 1
  %v4_10003920 = inttoptr i32 %v3_10003920 to i8*
  store i8 %v1_10003920, i8* %v4_10003920, align 1
  %v0_10003924 = load i32, i32* @r28, align 4
  %v1_10003924 = trunc i32 %v0_10003924 to i16
  %v2_10003924 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003924 = add i32 %v2_10003924, 2
  %v4_10003924 = inttoptr i32 %v3_10003924 to i16*
  store i16 %v1_10003924, i16* %v4_10003924, align 2
  %v3_10003928 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10003928, i32* %r9.global-to-local, align 4
  %v0_1000392c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000392c = trunc i32 %v0_1000392c to i16
  %v2_1000392c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000392c = add i32 %v2_1000392c, 20
  %v4_1000392c = inttoptr i32 %v3_1000392c to i16*
  store i16 %v1_1000392c, i16* %v4_1000392c, align 2
  %v0_10003930 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003930 = add i32 %v0_10003930, 1
  store i32 %v1_10003930, i32* %r31.global-to-local, align 4
  %v1_10003934 = mul i32 %v0_10003930, 24
  %v1_10003938 = load i32, i32* %r19.global-to-local, align 4
  %v2_10003938 = icmp slt i32 %v1_10003930, %v1_10003938
  %v1_1000393c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000393c = add i32 %v1_1000393c, %v1_10003934
  store i32 %v2_1000393c, i32* %r9.global-to-local, align 4
  %v1_10003940 = add i32 %v2_1000393c, 16
  %v2_10003940 = inttoptr i32 %v1_10003940 to i32*
  %v3_10003940 = load i32, i32* %v2_10003940, align 4
  store i32 %v3_10003940, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_10003948 = load i32, i32* %r11.global-to-local, align 4
  %v3_10003948 = add i32 %v2_10003948, 6
  %v4_10003948 = inttoptr i32 %v3_10003948 to i16*
  store i16 16384, i16* %v4_10003948, align 2
  %v0_1000394c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000394c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000394c = add i32 %v1_1000394c, 16
  %v3_1000394c = inttoptr i32 %v2_1000394c to i32*
  store i32 %v0_1000394c, i32* %v3_1000394c, align 4
  %v0_10003950 = load i32, i32* @r29, align 4
  %v1_10003950 = trunc i32 %v0_10003950 to i16
  %v2_10003950 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003950 = add i32 %v2_10003950, 4
  %v4_10003950 = inttoptr i32 %v3_10003950 to i16*
  store i16 %v1_10003950, i16* %v4_10003950, align 2
  %v0_10003954 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003954 = trunc i32 %v0_10003954 to i16
  %v2_10003954 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003954 = add i32 %v2_10003954, 2
  %v4_10003954 = inttoptr i32 %v3_10003954 to i16*
  store i16 %v1_10003954, i16* %v4_10003954, align 2
  %v0_10003958 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10003958, i32* %stack_var_-104, align 4
  br i1 %v2_10003938, label %dec_label_pc_100038d4, label %dec_label_pc_1000370c

dec_label_pc_10003964:                            ; preds = %dec_label_pc_1000365c
  %v0_10003964 = load i32, i32* %r30.global-to-local, align 4
  %v3_10003964 = icmp eq i32 %v0_10003964, -1
  store i1 %v3_10003964, i1* %cr2_eq.global-to-local, align 1
  %v0_10003968 = load i32, i32* %r17.global-to-local, align 4
  %v3_10003968 = icmp eq i32 %v0_10003968, 0
  store i1 %v3_10003968, i1* %cr3_eq.global-to-local, align 1
  %v1_1000396c = add nuw nsw i32 %v0_1000396c, 28
  store i32 %v1_1000396c, i32* %r25.global-to-local, align 4
  %v1_10003970 = add nuw nsw i32 %v0_1000396c, 8
  store i32 %v1_10003970, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003714.preheader

; uselistorder directives
  uselistorder i32 %v1_100038ec, { 1, 0 }
  uselistorder i32 %v1_100038e4, { 1, 0 }
  uselistorder i32 %v0_10003848, { 1, 0 }
  uselistorder i32 %v0_10003838, { 1, 0 }
  uselistorder i32 %v0_10003828, { 1, 0 }
  uselistorder i32 %v1_10003820, { 1, 0 }
  uselistorder i1 %v1_100037e0, { 1, 0 }
  uselistorder i1 %v0_100037e0, { 1, 0 }
  uselistorder i32 %v1_100037d0, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003798, { 1, 0 }
  uselistorder i32 %v1_1000372c, { 1, 0 }
  uselistorder i32 %v1_100036a0, { 1, 0 }
  uselistorder i32 %v1_10003698, { 1, 0 }
  uselistorder i32 %v0_1000396c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10003640, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 20, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1000616c, { 10, 9, 8, 7, 6, 5, 4, 3, 0, 1, 2 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_1000386c, { 1, 0 }
  uselistorder label %dec_label_pc_10003854, { 1, 0 }
  uselistorder label %dec_label_pc_10003770, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003718, { 1, 0 }
  uselistorder label %dec_label_pc_10003714, { 1, 0 }
  uselistorder label %dec_label_pc_10003714.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000365c, { 1, 0 }
}

define i32 @function_1000397c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000397c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10003980 = load i32, i32* @lr, align 4
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v0_10003984 = call i32 @__asm_mfcr()
  store i32 %v0_10003984, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_10003984, i32* %r23.global-to-local, align 4
  %v0_100039bc = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100039c4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100039cc = load i32, i32* @r30, align 4
  store i32 268450284, i32* @lr, align 4
  %v2_100039e8 = call i32 @function_1000a204(i32 4, i32 4)
  store i32 %v2_100039e8, i32* %r24.global-to-local, align 4
  %v0_100039f0 = load i32, i32* @r28, align 4
  %v0_100039f4 = load i32, i32* @r29, align 4
  store i32 %v0_100039f4, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268450308, i32* @lr, align 4
  %v4_10003a00 = inttoptr i32 %v0_100039f0 to i32*
  %v5_10003a00 = call i32 @function_100006a8(i32 %v0_100039f4, i32* %v4_10003a00, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_10003a10 = load i32, i32* @r28, align 4
  %v1_10003a14 = urem i32 %v5_10003a00, 256
  store i32 %v1_10003a14, i32* %r19.global-to-local, align 4
  %v0_10003a18 = load i32, i32* @r29, align 4
  store i32 %v0_10003a18, i32* %r3.global-to-local, align 4
  store i32 268450336, i32* @lr, align 4
  %v4_10003a1c = inttoptr i32 %v0_10003a10 to i32*
  %v5_10003a1c = call i32 @function_100006a8(i32 %v0_10003a18, i32* %v4_10003a1c, i32 3, i32 65535)
  %v0_10003a20 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10003a1c, i32* %r21.global-to-local, align 4
  %v0_10003a30 = load i32, i32* @r29, align 4
  store i32 %v0_10003a30, i32* %r3.global-to-local, align 4
  store i32 268450360, i32* @lr, align 4
  %v4_10003a34 = inttoptr i32 %v0_10003a20 to i32*
  %v5_10003a34 = call i32 @function_100006a8(i32 %v0_10003a30, i32* %v4_10003a34, i32 4, i32 64)
  %v0_10003a38 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_10003a44 = urem i32 %v5_10003a34, 256
  store i32 %v1_10003a44, i32* %r26.global-to-local, align 4
  %v0_10003a48 = load i32, i32* @r29, align 4
  store i32 %v0_10003a48, i32* %r3.global-to-local, align 4
  store i32 268450384, i32* @lr, align 4
  %v4_10003a4c = inttoptr i32 %v0_10003a38 to i32*
  %v5_10003a4c = call i32 @function_100006a8(i32 %v0_10003a48, i32* %v4_10003a4c, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10003a5c = load i32, i32* @r28, align 4
  %v1_10003a60 = urem i32 %v5_10003a4c, 256
  store i32 %v1_10003a60, i32* @r31, align 4
  %v0_10003a64 = load i32, i32* @r29, align 4
  store i32 %v0_10003a64, i32* %r3.global-to-local, align 4
  store i32 268450412, i32* @lr, align 4
  %v4_10003a68 = inttoptr i32 %v0_10003a5c to i32*
  %v5_10003a68 = call i32 @function_100006a8(i32 %v0_10003a64, i32* %v4_10003a68, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_10003a74 = load i32, i32* @r28, align 4
  store i32 %v5_10003a68, i32* %r22.global-to-local, align 4
  %v0_10003a7c = load i32, i32* @r29, align 4
  store i32 %v0_10003a7c, i32* %r3.global-to-local, align 4
  store i32 268450436, i32* @lr, align 4
  %v4_10003a80 = inttoptr i32 %v0_10003a74 to i32*
  %v5_10003a80 = call i32 @function_100006a8(i32 %v0_10003a7c, i32* %v4_10003a80, i32 7, i32 27015)
  store i32 %v5_10003a80, i32* %r29.global-to-local, align 4
  store i32 25, i32* %r3.global-to-local, align 4
  store i32 268450448, i32* @lr, align 4
  %v1_10003a8c = call i32 @function_10008338(i32 25)
  store i32 25, i32* %r3.global-to-local, align 4
  %v3_10003a98 = call i32 @function_10008284(i32 25, i32* nonnull %stack_var_-84)
  store i32 %v3_10003a98, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450480, i32* @lr, align 4
  %v3_10003aac = call i32 @function_10009ea8(i32 2, i32 3, i32 17)
  store i32 %v3_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v3_10003aac, -1
  store i32 %v3_10003aac, i32* %r25.global-to-local, align 4
  br i1 %v3_10003ab0, label %dec_label_pc_10003d00, label %dec_label_pc_10003abc

dec_label_pc_10003abc:                            ; preds = %dec_label_pc_1000397c
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10003ac8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10003ac8, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268450520, i32* @lr, align 4
  %v4_10003ad4 = call i32 @function_10009e6c(i32 0, i32 3, i32 %v2_10003ac8, i32 4)
  store i32 %v4_10003ad4, i32* %r3.global-to-local, align 4
  %v3_10003ad8 = icmp eq i32 %v4_10003ad4, -1
  br i1 %v3_10003ad8, label %dec_label_pc_10003cf8, label %dec_label_pc_10003ae0

dec_label_pc_10003ae0:                            ; preds = %dec_label_pc_10003abc
  %v0_10003ae0 = load i32, i32* %r23.global-to-local, align 4
  %v1_10003ae0 = icmp slt i32 %v0_10003ae0, 0
  %v3_10003ae0 = icmp eq i32 %v0_10003ae0, 0
  store i1 %v1_10003ae0, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ae0, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 65536
  store i32 %v1_10003ae8, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_10003af0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003af0 = urem i32 %v0_10003af0, 65536
  store i32 %v1_10003af0, i32* %r21.global-to-local, align 4
  %v0_10003af4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10003af4 = urem i32 %v0_10003af4, 65536
  store i32 %v1_10003af4, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_10003ae0, 1
  br i1 %tmp32, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003afc

dec_label_pc_10003afc:                            ; preds = %dec_label_pc_10003ae0
  %v0_10003afc = load i32, i32* @r31, align 4
  %v3_10003afc = icmp eq i32 %v0_10003afc, 0
  store i1 %v3_10003afc, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10003b1c

dec_label_pc_10003b1c:                            ; preds = %dec_label_pc_10003b78, %dec_label_pc_10003afc
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268450600, i32* @lr, align 4
  %v2_10003b24 = call i32 @function_1000a204(i32 128, i32 1)
  store i32 %v2_10003b24, i32* %r3.global-to-local, align 4
  %v3_10003b28 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003b28, i32* %r0.global-to-local, align 4
  %v0_10003b2c = load i32, i32* @r31, align 4
  %v1_10003b2c = mul i32 %v0_10003b2c, 4
  store i32 %v1_10003b2c, i32* %r9.global-to-local, align 4
  %v0_10003b30 = load i32, i32* @r30, align 4
  %v2_10003b34 = load i32, i32* %r24.global-to-local, align 4
  %v3_10003b34 = add i32 %v2_10003b34, %v1_10003b2c
  %v4_10003b34 = inttoptr i32 %v3_10003b34 to i32*
  store i32 %v2_10003b24, i32* %v4_10003b34, align 4
  %v0_10003b38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b38 = mul i32 %v0_10003b38, 4
  store i32 %v1_10003b38, i32* %r0.global-to-local, align 4
  %v0_10003b3c = load i32, i32* %r24.global-to-local, align 4
  %v2_10003b3c = add i32 %v0_10003b3c, %v1_10003b38
  %v3_10003b3c = inttoptr i32 %v2_10003b3c to i32*
  %v4_10003b3c = load i32, i32* %v3_10003b3c, align 4
  store i32 %v4_10003b3c, i32* %r10.global-to-local, align 4
  %v1_10003b40 = inttoptr i32 %v4_10003b3c to i32*
  %v2_10003b40 = load i32, i32* %v1_10003b40, align 4
  store i32 %v2_10003b40, i32* %r0.global-to-local, align 4
  %v1_10003b44 = add i32 %v4_10003b3c, 32
  store i32 %v1_10003b44, i32* %r3.global-to-local, align 4
  %v0_10003b48 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b48 = trunc i32 %v0_10003b48 to i16
  %v3_10003b48 = add i32 %v4_10003b3c, 4
  %v4_10003b48 = inttoptr i32 %v3_10003b48 to i16*
  store i16 %v1_10003b48, i16* %v4_10003b48, align 2
  %v0_10003b4c = load i32, i32* %r10.global-to-local, align 4
  %v1_10003b4c = add i32 %v0_10003b4c, 20
  store i32 %v1_10003b4c, i32* %r8.global-to-local, align 4
  %v1_10003b50 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b50, i32* %r0.global-to-local, align 4
  %v1_10003b54 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10003b54, i32* %r0.global-to-local, align 4
  %v1_10003b58 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b58 = inttoptr i32 %v1_10003b58 to i32*
  store i32 %v1_10003b54, i32* %v2_10003b58, align 4
  %v0_10003b5c = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b5c = trunc i32 %v0_10003b5c to i8
  %v2_10003b5c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v1_10003b5c, i8* %v4_10003b5c, align 1
  %v3_10003b60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b60, i32* %r9.global-to-local, align 4
  %v0_10003b64 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003b64 = trunc i32 %v0_10003b64 to i8
  %v2_10003b64 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 8
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i8*
  store i8 %v1_10003b64, i8* %v4_10003b64, align 1
  %v0_10003b68 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b68 = add i32 %v0_10003b68, 32
  store i32 %v1_10003b68, i32* %r9.global-to-local, align 4
  %v1_10003b6c = trunc i32 %v1_10003b68 to i16
  %v2_10003b6c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b6c = add i32 %v2_10003b6c, 2
  %v4_10003b6c = inttoptr i32 %v3_10003b6c to i16*
  store i16 %v1_10003b6c, i16* %v4_10003b6c, align 2
  %v0_10003b70 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003b70, label %dec_label_pc_10003b78, label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b1c
  %v0_10003b74 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b74 = trunc i32 %v0_10003b74 to i16
  %v2_10003b74 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b74 = add i32 %v2_10003b74, 6
  %v4_10003b74 = inttoptr i32 %v3_10003b74 to i16*
  store i16 %v1_10003b74, i16* %v4_10003b74, align 2
  br label %dec_label_pc_10003b78

dec_label_pc_10003b78:                            ; preds = %dec_label_pc_10003b1c, %dec_label_pc_10003b74
  %v0_10003b78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i8
  %v2_10003b78 = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 9
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i8*
  store i8 %v1_10003b78, i8* %v4_10003b78, align 1
  %v0_10003b7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i16
  %v2_10003b7c = load i32, i32* %r10.global-to-local, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 20
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i16*
  store i16 %v1_10003b7c, i16* %v4_10003b7c, align 2
  %v3_10003b80 = load i32, i32* %stack_var_-88, align 4
  %v3_10003b84 = load i32, i32* @global_var_1001c2d0.14, align 4
  store i32 %v3_10003b84, i32* %r0.global-to-local, align 4
  %v1_10003b88 = mul i32 %v3_10003b80, 24
  store i32 %v1_10003b88, i32* %r9.global-to-local, align 4
  %v0_10003b8c = load i32, i32* %r22.global-to-local, align 4
  %v1_10003b8c = trunc i32 %v0_10003b8c to i16
  %v2_10003b8c = load i32, i32* %r8.global-to-local, align 4
  %v3_10003b8c = add i32 %v2_10003b8c, 2
  %v4_10003b8c = inttoptr i32 %v3_10003b8c to i16*
  store i16 %v1_10003b8c, i16* %v4_10003b8c, align 2
  %v0_10003b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b90 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003b90 = add i32 %v1_10003b90, 12
  %v3_10003b90 = inttoptr i32 %v2_10003b90 to i32*
  store i32 %v0_10003b90, i32* %v3_10003b90, align 4
  %v0_10003b94 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b94 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v0_10003b94
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  %v3_10003b9c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003b9c, i32* %r11.global-to-local, align 4
  %v0_10003ba0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 28
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v0_10003ba0, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 16
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  store i32 %v1_10003ba8, i32* %r11.global-to-local, align 4
  %v1_10003bac = trunc i32 %v1_10003ba8 to i16
  %v2_10003bac = load i32, i32* %r8.global-to-local, align 4
  %v3_10003bac = add i32 %v2_10003bac, 4
  %v4_10003bac = inttoptr i32 %v3_10003bac to i16*
  store i16 %v1_10003bac, i16* %v4_10003bac, align 2
  %v3_10003bb0 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003bb0, i32* %r5.global-to-local, align 4
  store i32 268450744, i32* @lr, align 4
  %v3_10003bb4 = call i32 @function_10008a1c(i32 %v3_10003bb0, i32 %v0_10003b30, i32 %v3_10003bb0)
  store i32 %v3_10003bb4, i32* %r3.global-to-local, align 4
  %v3_10003bb8 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003bb8, i32* %r9.global-to-local, align 4
  %v1_10003bbc = add i32 %v3_10003bb8, 1
  %v1_10003bc0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003bc0 = icmp slt i32 %v1_10003bbc, %v1_10003bc0
  store i32 %v1_10003bbc, i32* %stack_var_-88, align 4
  br i1 %v2_10003bc0, label %dec_label_pc_10003b1c, label %dec_label_pc_10003bcc.preheader.loopexit

dec_label_pc_10003bcc.preheader.loopexit:         ; preds = %dec_label_pc_10003b78
  %v0_10003bcc.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003bcc.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003bcc.outer

dec_label_pc_10003bcc.outer:                      ; preds = %dec_label_pc_10003c98, %dec_label_pc_10003ae0, %dec_label_pc_10003bcc.preheader.loopexit
  %v1_10003bcc.ph34 = phi i1 [ %v1_10003ae0, %dec_label_pc_10003ae0 ], [ %v1_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v1_10003c98, %dec_label_pc_10003c98 ]
  %v0_10003bcc.ph35 = phi i1 [ %v3_10003ae0, %dec_label_pc_10003ae0 ], [ %v0_10003bcc.pre.pre, %dec_label_pc_10003bcc.preheader.loopexit ], [ %v0_10003c98, %dec_label_pc_10003c98 ]
  %v2_10003bcc = or i1 %v1_10003bcc.ph34, %v0_10003bcc.ph35
  br label %dec_label_pc_10003bcc

dec_label_pc_10003bcc:                            ; preds = %dec_label_pc_10003bcc.outer, %dec_label_pc_10003bcc
  br i1 %v2_10003bcc, label %dec_label_pc_10003bcc, label %dec_label_pc_10003bd0

dec_label_pc_10003bd0:                            ; preds = %dec_label_pc_10003bcc, %dec_label_pc_10003c98
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003be0

dec_label_pc_10003be0:                            ; preds = %dec_label_pc_10003c20, %dec_label_pc_10003bd0
  %v0_10003bf0 = phi i32 [ %v1_10003c88, %dec_label_pc_10003c20 ], [ 0, %dec_label_pc_10003bd0 ]
  %v1_10003be0 = mul i32 %v0_10003bf0, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_10003bec = load i32, i32* %r27.global-to-local, align 4
  %v2_10003bec = add i32 %v1_10003bec, %v1_10003be0
  store i32 %v2_10003bec, i32* %r10.global-to-local, align 4
  %v1_10003bf0 = mul i32 %v0_10003bf0, 4
  store i32 %v1_10003bf0, i32* %r0.global-to-local, align 4
  %v1_10003bf4 = add i32 %v2_10003bec, 20
  %v2_10003bf4 = inttoptr i32 %v1_10003bf4 to i8*
  %v3_10003bf4 = load i8, i8* %v2_10003bf4, align 1
  %v4_10003bf4 = zext i8 %v3_10003bf4 to i32
  store i32 %v4_10003bf4, i32* %r9.global-to-local, align 4
  %v0_10003bf8 = load i32, i32* %r24.global-to-local, align 4
  %v2_10003bf8 = add i32 %v0_10003bf8, %v1_10003bf0
  %v3_10003bf8 = inttoptr i32 %v2_10003bf8 to i32*
  %v4_10003bf8 = load i32, i32* %v3_10003bf8, align 4
  store i32 %v4_10003bf8, i32* %r28.global-to-local, align 4
  %v1_10003c00 = add i32 %v4_10003bf8, 20
  store i32 %v1_10003c00, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_10003bf4, 32
  br i1 %tmp33, label %dec_label_pc_10003ca0, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003be0
  %v0_10003c08 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c08 = icmp eq i32 %v0_10003c08, 65535
  br i1 %v4_10003c08, label %dec_label_pc_10003ccc, label %dec_label_pc_10003c10

dec_label_pc_10003c10:                            ; preds = %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge, %dec_label_pc_10003c08
  %v1_10003c10 = phi i32 [ %v1_10003c10.pre, %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge ], [ 65535, %dec_label_pc_10003c08 ]
  %v0_10003c10 = load i32, i32* %r21.global-to-local, align 4
  %v4_10003c10 = icmp eq i32 %v0_10003c10, %v1_10003c10
  br i1 %v4_10003c10, label %dec_label_pc_10003cdc, label %dec_label_pc_10003c18

dec_label_pc_10003c18:                            ; preds = %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge, %dec_label_pc_10003c10
  %v1_10003c18 = phi i32 [ %v1_10003c18.pre, %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge ], [ %v1_10003c10, %dec_label_pc_10003c10 ]
  %v0_10003c18 = load i32, i32* %r22.global-to-local, align 4
  %v4_10003c18 = icmp eq i32 %v0_10003c18, %v1_10003c18
  br i1 %v4_10003c18, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18, %dec_label_pc_10003cec
  %v0_10003c20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c20 = trunc i32 %v0_10003c20 to i16
  %v2_10003c20 = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c20 = add i32 %v2_10003c20, 10
  %v4_10003c20 = inttoptr i32 %v3_10003c20 to i16*
  store i16 %v1_10003c20, i16* %v4_10003c20, align 2
  %v0_10003c28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c28, i32* @r3, align 4
  %v2_10003c2c = call i32 @function_100043cc(i32 %v0_10003c28, i32 20)
  %v3_10003c2c = trunc i32 %v2_10003c2c to i16
  store i32 %v2_10003c2c, i32* %r3.global-to-local, align 4
  %v3_10003c30 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c30, i32* %r6.global-to-local, align 4
  %v3_10003c34 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003c34 = add i32 %v3_10003c34, 10
  %v5_10003c34 = inttoptr i32 %v4_10003c34 to i16*
  store i16 %v3_10003c2c, i16* %v5_10003c34, align 2
  %v0_10003c38 = load i32, i32* @r31, align 4
  store i32 %v0_10003c38, i32* @r4, align 4
  %v0_10003c3c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c3c = trunc i32 %v0_10003c3c to i16
  %v3_10003c3c = add i32 %v0_10003c38, 6
  %v4_10003c3c = inttoptr i32 %v3_10003c3c to i16*
  store i16 %v1_10003c3c, i16* %v4_10003c3c, align 2
  %v0_10003c40 = load i32, i32* %r6.global-to-local, align 4
  %v1_10003c40 = add i32 %v0_10003c40, 12
  store i32 %v1_10003c40, i32* %r6.global-to-local, align 4
  %v0_10003c44 = load i32, i32* @r31, align 4
  %v1_10003c44 = add i32 %v0_10003c44, 4
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i16*
  %v3_10003c44 = load i16, i16* %v2_10003c44, align 2
  %v4_10003c44 = zext i16 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r5.global-to-local, align 4
  %v0_10003c48 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c48, i32* %r3.global-to-local, align 4
  %v4_10003c4c = call i32 @function_10004430(i32 %v0_10003c48, i32 %v0_10003c38, i32 %v4_10003c44, i32 %v1_10003c40)
  %v5_10003c4c = trunc i32 %v4_10003c4c to i16
  store i32 %v4_10003c4c, i32* %r3.global-to-local, align 4
  %v3_10003c50 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c50, i32* %r7.global-to-local, align 4
  %v0_10003c54 = load i32, i32* @r31, align 4
  %v1_10003c54 = add i32 %v0_10003c54, 2
  %v2_10003c54 = inttoptr i32 %v1_10003c54 to i16*
  %v3_10003c54 = load i16, i16* %v2_10003c54, align 2
  %v4_10003c54 = zext i16 %v3_10003c54 to i32
  store i32 %v4_10003c54, i32* %r0.global-to-local, align 4
  %v0_10003c58 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003c5c = mul i32 %v3_10003c50, 24
  store i32 %v1_10003c5c, i32* %r7.global-to-local, align 4
  %v3_10003c60 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10003c60, i32* %r5.global-to-local, align 4
  %v4_10003c64 = add i32 %v0_10003c54, 6
  %v5_10003c64 = inttoptr i32 %v4_10003c64 to i16*
  store i16 %v5_10003c4c, i16* %v5_10003c64, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10003c6c = load i32, i32* %r7.global-to-local, align 4
  %v1_10003c6c = load i32, i32* %r27.global-to-local, align 4
  %v2_10003c6c = add i32 %v1_10003c6c, %v0_10003c6c
  store i32 %v2_10003c6c, i32* %r7.global-to-local, align 4
  %v0_10003c70 = load i32, i32* %r5.global-to-local, align 4
  %v1_10003c70 = add i32 %v0_10003c70, 32
  store i32 %v1_10003c70, i32* %r5.global-to-local, align 4
  %v0_10003c74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003c74 = trunc i32 %v0_10003c74 to i16
  %v3_10003c74 = add i32 %v2_10003c6c, 2
  %v4_10003c74 = inttoptr i32 %v3_10003c74 to i16*
  store i16 %v1_10003c74, i16* %v4_10003c74, align 2
  %v0_10003c78 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003c78, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268450948, i32* @lr, align 4
  %v6_10003c80 = call i32 @function_10009e2c(i32 %v0_10003c78, i32 %v0_10003c58, i32 %v1_10003c70, i32 16384, i32 %v2_10003c6c, i32 16)
  store i32 %v6_10003c80, i32* %r3.global-to-local, align 4
  %v3_10003c84 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10003c84, i32* %r9.global-to-local, align 4
  %v1_10003c88 = add i32 %v3_10003c84, 1
  store i32 %v1_10003c88, i32* %r11.global-to-local, align 4
  %v1_10003c8c = load i32, i32* %r23.global-to-local, align 4
  %v2_10003c8c = icmp slt i32 %v1_10003c88, %v1_10003c8c
  store i32 %v1_10003c88, i32* %stack_var_-88, align 4
  br i1 %v2_10003c8c, label %dec_label_pc_10003be0, label %dec_label_pc_10003c98

dec_label_pc_10003c98:                            ; preds = %dec_label_pc_10003c20
  %v0_10003c98 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c98 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003c98 = or i1 %v0_10003c98, %v1_10003c98
  br i1 %v2_10003c98, label %dec_label_pc_10003bcc.outer, label %dec_label_pc_10003bd0

dec_label_pc_10003ca0:                            ; preds = %dec_label_pc_10003be0
  %v1_10003ca0 = add i32 %v2_10003bec, 16
  %v2_10003ca0 = inttoptr i32 %v1_10003ca0 to i32*
  %v3_10003ca0 = load i32, i32* %v2_10003ca0, align 4
  store i32 %v3_10003ca0, i32* %r29.global-to-local, align 4
  %v0_10003ca4 = call i32 @function_10005f98()
  store i32 %v0_10003ca4, i32* %r3.global-to-local, align 4
  %v3_10003ca8 = load i32, i32* %stack_var_-88, align 4
  %v0_10003cac = load i32, i32* %r20.global-to-local, align 4
  %v1_10003cac = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cac = icmp eq i32 %v0_10003cac, %v1_10003cac
  %v1_10003cb0 = mul i32 %v3_10003ca8, 24
  %v1_10003cb4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10003cb4 = add i32 %v1_10003cb4, %v1_10003cb0
  store i32 %v2_10003cb4, i32* %r9.global-to-local, align 4
  %v1_10003cb8 = add i32 %v2_10003cb4, 20
  %v2_10003cb8 = inttoptr i32 %v1_10003cb8 to i8*
  %v3_10003cb8 = load i8, i8* %v2_10003cb8, align 1
  %v4_10003cb8 = zext i8 %v3_10003cb8 to i32
  store i32 %v4_10003cb8, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003cb8, 64
  %v2_10003cbc = zext i8 %tmp to i32
  %v3_10003cbc = lshr i32 %v0_10003ca4, %v2_10003cbc
  store i32 %v3_10003cbc, i32* %r3.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003cc0 = add i32 %v3_10003cbc, %v0_10003cc0
  store i32 %v2_10003cc0, i32* %r29.global-to-local, align 4
  %v1_10003cc4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003cc4 = add i32 %v1_10003cc4, 16
  %v3_10003cc4 = inttoptr i32 %v2_10003cc4 to i32*
  store i32 %v2_10003cc0, i32* %v3_10003cc4, align 4
  br i1 %v4_10003cac, label %dec_label_pc_10003ccc, label %dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge

dec_label_pc_10003ca0.dec_label_pc_10003c10_crit_edge: ; preds = %dec_label_pc_10003ca0
  %v1_10003c10.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c10

dec_label_pc_10003ccc:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003c08
  %v0_10003ccc = call i32 @function_10005f98()
  %v1_10003ccc = trunc i32 %v0_10003ccc to i16
  store i32 %v0_10003ccc, i32* %r3.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003cd0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003cd0 = icmp eq i32 %v0_10003cd0, %v1_10003cd0
  %v3_10003cd4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003cd4 = add i32 %v3_10003cd4, 4
  %v5_10003cd4 = inttoptr i32 %v4_10003cd4 to i16*
  store i16 %v1_10003ccc, i16* %v5_10003cd4, align 2
  br i1 %v4_10003cd0, label %dec_label_pc_10003cdc, label %dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge

dec_label_pc_10003ccc.dec_label_pc_10003c18_crit_edge: ; preds = %dec_label_pc_10003ccc
  %v1_10003c18.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003c18

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003ccc, %dec_label_pc_10003c10
  %v0_10003cdc = call i32 @function_10005f98()
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  store i32 %v0_10003cdc, i32* %r3.global-to-local, align 4
  %v0_10003ce0 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003ce0 = load i32, i32* %r30.global-to-local, align 4
  %v4_10003ce0 = icmp eq i32 %v0_10003ce0, %v1_10003ce0
  %v3_10003ce4 = load i32, i32* %r28.global-to-local, align 4
  %v4_10003ce4 = add i32 %v3_10003ce4, 20
  %v5_10003ce4 = inttoptr i32 %v4_10003ce4 to i16*
  store i16 %v1_10003cdc, i16* %v5_10003ce4, align 2
  br i1 %v4_10003ce0, label %dec_label_pc_10003cec, label %dec_label_pc_10003c20

dec_label_pc_10003cec:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003c18
  %v0_10003cec = call i32 @function_10005f98()
  %v1_10003cec = trunc i32 %v0_10003cec to i16
  store i32 %v0_10003cec, i32* %r3.global-to-local, align 4
  %v3_10003cf0 = load i32, i32* @r31, align 4
  %v4_10003cf0 = add i32 %v3_10003cf0, 2
  %v5_10003cf0 = inttoptr i32 %v4_10003cf0 to i16*
  store i16 %v1_10003cec, i16* %v5_10003cf0, align 2
  br label %dec_label_pc_10003c20

dec_label_pc_10003cf8:                            ; preds = %dec_label_pc_10003abc
  %v0_10003cf8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003cf8, i32* %r3.global-to-local, align 4
  store i32 268451072, i32* @lr, align 4
  %v0_10003cfc = call i32 @function_10009158()
  store i32 %v0_10003cfc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003d00

dec_label_pc_10003d00:                            ; preds = %dec_label_pc_1000397c, %dec_label_pc_10003cf8
  store i32 %v0_10003980, i32* %r0.global-to-local, align 4
  %v1_10003d14 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10003984)
  store i32 %v0_100039bc, i32* %r28.global-to-local, align 4
  store i32 %v0_100039c4, i32* %r29.global-to-local, align 4
  store i32 %v0_100039cc, i32* %r30.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003d58

; uselistorder directives
  uselistorder i32 %v0_10003cec, { 1, 0 }
  uselistorder i32 %v0_10003cdc, { 1, 0 }
  uselistorder i32 %v0_10003ccc, { 1, 0 }
  uselistorder i1 %v1_10003c98, { 1, 0 }
  uselistorder i1 %v0_10003c98, { 1, 0 }
  uselistorder i32 %v1_10003c88, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003c4c, { 1, 0 }
  uselistorder i32 %v2_10003c2c, { 1, 0 }
  uselistorder i32 %v1_10003bf0, { 1, 0 }
  uselistorder i32 %v1_10003b38, { 1, 0 }
  uselistorder i32 %v1_10003b2c, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 0 }
  uselistorder label %dec_label_pc_10003d00, { 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003bd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc, { 1, 0 }
  uselistorder label %dec_label_pc_10003bcc.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10003b78, { 1, 0 }
}

define i32 @function_10003d5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003d5c:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10003d60 = load i32, i32* @lr, align 4
  store i32 %v0_10003d60, i32* %r0.global-to-local, align 4
  %v0_10003d64 = call i32 @__asm_mfcr()
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_10003d74 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003d64, i32* %r15.global-to-local, align 4
  %v0_10003d94 = load i32, i32* @r24, align 4
  %v0_10003d98 = load i32, i32* @r25, align 4
  %v0_10003d9c = load i32, i32* @r26, align 4
  %v0_10003da0 = load i32, i32* @r27, align 4
  %v0_10003da4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003db4 = load i32, i32* @r31, align 4
  %v0_10003dc8 = load i32, i32* @r30, align 4
  store i32 268451280, i32* @lr, align 4
  %v2_10003dcc = call i32 @function_1000a204(i32 4, i32 4)
  store i32 %v2_10003dcc, i32* %r16.global-to-local, align 4
  %v0_10003dd4 = load i32, i32* @r28, align 4
  %v0_10003de0 = load i32, i32* @r29, align 4
  store i32 %v0_10003de0, i32* %r3.global-to-local, align 4
  store i32 268451304, i32* @lr, align 4
  %v4_10003de4 = inttoptr i32 %v0_10003dd4 to i32*
  %v5_10003de4 = call i32 @function_100006a8(i32 %v0_10003de0, i32* %v4_10003de4, i32 2, i32 0)
  %v5_10003df4 = trunc i32 %v5_10003de4 to i8
  %v0_10003dfc = load i32, i32* @r28, align 4
  %v0_10003e00 = load i32, i32* @r29, align 4
  store i32 %v0_10003e00, i32* %r3.global-to-local, align 4
  store i32 268451336, i32* @lr, align 4
  %v4_10003e04 = inttoptr i32 %v0_10003dfc to i32*
  %v5_10003e04 = call i32 @function_100006a8(i32 %v0_10003e00, i32* %v4_10003e04, i32 3, i32 65535)
  %v0_10003e08 = load i32, i32* @r28, align 4
  store i32 %v5_10003e04, i32* %r19.global-to-local, align 4
  %v0_10003e18 = load i32, i32* @r29, align 4
  store i32 %v0_10003e18, i32* %r3.global-to-local, align 4
  store i32 268451360, i32* @lr, align 4
  %v4_10003e1c = inttoptr i32 %v0_10003e08 to i32*
  %v5_10003e1c = call i32 @function_100006a8(i32 %v0_10003e18, i32* %v4_10003e1c, i32 4, i32 64)
  %v0_10003e20 = load i32, i32* @r28, align 4
  %v5_10003e2c = trunc i32 %v5_10003e1c to i8
  %v0_10003e34 = load i32, i32* @r29, align 4
  store i32 %v0_10003e34, i32* %r3.global-to-local, align 4
  store i32 268451388, i32* @lr, align 4
  %v4_10003e38 = inttoptr i32 %v0_10003e20 to i32*
  %v5_10003e38 = call i32 @function_100006a8(i32 %v0_10003e34, i32* %v4_10003e38, i32 5, i32 0)
  %v0_10003e48 = load i32, i32* @r28, align 4
  %v1_10003e4c = urem i32 %v5_10003e38, 256
  store i32 %v1_10003e4c, i32* %r27.global-to-local, align 4
  %v0_10003e50 = load i32, i32* @r29, align 4
  store i32 %v0_10003e50, i32* %r3.global-to-local, align 4
  store i32 268451416, i32* @lr, align 4
  %v4_10003e54 = inttoptr i32 %v0_10003e48 to i32*
  %v5_10003e54 = call i32 @function_100006a8(i32 %v0_10003e50, i32* %v4_10003e54, i32 6, i32 65535)
  %v0_10003e58 = load i32, i32* @r28, align 4
  store i32 %v5_10003e54, i32* %r20.global-to-local, align 4
  %v0_10003e68 = load i32, i32* @r29, align 4
  store i32 %v0_10003e68, i32* %r3.global-to-local, align 4
  store i32 268451440, i32* @lr, align 4
  %v4_10003e6c = inttoptr i32 %v0_10003e58 to i32*
  %v5_10003e6c = call i32 @function_100006a8(i32 %v0_10003e68, i32* %v4_10003e6c, i32 7, i32 53)
  %v0_10003e74 = load i32, i32* @r28, align 4
  store i32 %v5_10003e6c, i32* %r23.global-to-local, align 4
  %v0_10003e84 = load i32, i32* @r29, align 4
  store i32 %v0_10003e84, i32* %r3.global-to-local, align 4
  store i32 268451468, i32* @lr, align 4
  %v4_10003e88 = inttoptr i32 %v0_10003e74 to i32*
  %v5_10003e88 = call i32 @function_100006a8(i32 %v0_10003e84, i32* %v4_10003e88, i32 9, i32 65535)
  %v0_10003e8c = load i32, i32* @r28, align 4
  store i32 %v5_10003e88, i32* %r24.global-to-local, align 4
  %v0_10003e9c = load i32, i32* @r29, align 4
  store i32 %v0_10003e9c, i32* %r3.global-to-local, align 4
  store i32 268451492, i32* @lr, align 4
  %v4_10003ea0 = inttoptr i32 %v0_10003e8c to i32*
  %v5_10003ea0 = call i32 @function_100006a8(i32 %v0_10003e9c, i32* %v4_10003ea0, i32 0, i32 12)
  %v0_10003eac = load i32, i32* @r28, align 4
  store i32 %v5_10003ea0, i32* %r26.global-to-local, align 4
  %v0_10003eb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003eb4, i32* %r3.global-to-local, align 4
  store i32 268451516, i32* @lr, align 4
  %v4_10003eb8 = inttoptr i32 %v0_10003eac to i32*
  %v5_10003eb8 = call i32 @function_10000238(i32 %v0_10003eb4, i32* %v4_10003eb8, i32 8, i32 0)
  store i32 %v5_10003eb8, i32* %r25.global-to-local, align 4
  store i32 26, i32* %r3.global-to-local, align 4
  store i32 268451528, i32* @lr, align 4
  %v1_10003ec4 = call i32 @function_10008338(i32 26)
  store i32 26, i32* %r3.global-to-local, align 4
  %v3_10003ed0 = call i32 @function_10008284(i32 26, i32* null)
  store i32 %v3_10003ed0, i32* %r3.global-to-local, align 4
  store i32 268451552, i32* @lr, align 4
  %v2_10003edc = call i32 @function_100092c0(i32 %v3_10003ed0, i32 0)
  store i32 %v2_10003edc, i32* @r31, align 4
  store i32 26, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v1_10003ee8 = call i32 @function_100082ac(i32 26)
  store i32 %v1_10003ee8, i32* %r3.global-to-local, align 4
  %v0_10003eec = load i32, i32* @r31, align 4
  %v1_10003eec = icmp slt i32 %v0_10003eec, 0
  %v3_10003eec = icmp eq i32 %v0_10003eec, 0
  store i1 %v3_10003eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003eec, label %dec_label_pc_10003fbc, label %dec_label_pc_10003ef4

dec_label_pc_10003ef4:                            ; preds = %dec_label_pc_10003d5c
  %v2_10003ef4 = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_10003ef4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003eec, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v3_10003f04 = call i32 @function_10009390(i32 %v0_10003eec, i32 %v2_10003ef4, i32 2048)
  store i32 %v3_10003f04, i32* %r30.global-to-local, align 4
  %v0_10003f0c = load i32, i32* @r31, align 4
  store i32 %v0_10003f0c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f14.24 to i32), i32* @lr, align 4
  %v0_10003f10 = call i32 @function_10009158()
  store i32 27, i32* %r3.global-to-local, align 4
  store i32 268451612, i32* @lr, align 4
  %v1_10003f18 = call i32 @function_10008338(i32 27)
  store i32 27, i32* %r3.global-to-local, align 4
  %v3_10003f24 = call i32 @function_10008284(i32 27, i32* null)
  %v0_10003f28 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_10003ef4, i32* %r3.global-to-local, align 4
  %v3_10003f34 = bitcast i32* %stack_var_-2148 to i8*
  %v4_10003f34 = call i32 @function_10008d48(i8* %v3_10003f34, i32 %v0_10003f28, i32 %v3_10003f24)
  store i32 %v4_10003f34, i32* @r31, align 4
  store i32 27, i32* %r3.global-to-local, align 4
  store i32 268451652, i32* @lr, align 4
  %v1_10003f40 = call i32 @function_100082ac(i32 27)
  store i32 %v1_10003f40, i32* %r3.global-to-local, align 4
  %v0_10003f44 = load i32, i32* @r31, align 4
  %v3_10003f44 = icmp eq i32 %v0_10003f44, -1
  store i1 %v3_10003f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f44, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f4c

dec_label_pc_10003f4c:                            ; preds = %dec_label_pc_10003ef4
  %v0_10003f4c = load i32, i32* %r30.global-to-local, align 4
  %v3_10003f4c = icmp sgt i32 %v0_10003f4c, %v0_10003f44
  %v4_10003f4c = icmp eq i32 %v0_10003f4c, %v0_10003f44
  store i1 %v4_10003f4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003f4c, label %dec_label_pc_10003f54, label %dec_label_pc_10003fbc

dec_label_pc_10003f54:                            ; preds = %dec_label_pc_10003f4c
  %v2_10003f54 = sub i32 %v0_10003f4c, %v0_10003f44
  store i32 %v2_10003f54, i32* %r0.global-to-local, align 4
  %v1_10003f58 = add i32 %v0_10003f4c, -1
  store i32 %v1_10003f58, i32* %r3.global-to-local, align 4
  store i32 %v2_10003f54, i32* %ctr.global-to-local, align 4
  %v0_10003f64 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003f64 = add i32 %v0_10003f64, %v0_10003f44
  store i32 %v2_10003f64, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10003f6c = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10003f6c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10003f70

dec_label_pc_10003f70:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f54
  %v0_10003fb8 = phi i32 [ %v1_10003fb8, %dec_label_pc_10003fb4 ], [ %v2_10003f54, %dec_label_pc_10003f54 ]
  %v0_10003fb4 = phi i32 [ %v1_10003fb4, %dec_label_pc_10003fb4 ], [ %v0_10003f44, %dec_label_pc_10003f54 ]
  %v0_10003f7c = phi i32 [ %v1_10003f7c, %dec_label_pc_10003fb4 ], [ %v2_10003f64, %dec_label_pc_10003f54 ]
  %v0_10003f70 = phi i32 [ %v0_10003f704, %dec_label_pc_10003fb4 ], [ 0, %dec_label_pc_10003f54 ]
  %v3_10003f70 = icmp eq i32 %v0_10003f70, 0
  store i1 %v3_10003f70, i1* %cr7_eq.global-to-local, align 1
  %v1_10003f74 = inttoptr i32 %v0_10003f7c to i8*
  %v2_10003f74 = load i8, i8* %v1_10003f74, align 1
  %v3_10003f74 = zext i8 %v2_10003f74 to i32
  store i32 %v3_10003f74, i32* %r9.global-to-local, align 4
  %v4_10003f78 = icmp eq i32 %v1_10003f58, %v0_10003fb4
  %v1_10003f7c = add i32 %v0_10003f7c, 1
  store i32 %v1_10003f7c, i32* %r11.global-to-local, align 4
  br i1 %v3_10003f70, label %dec_label_pc_10003f8c, label %dec_label_pc_10003f9c

dec_label_pc_10003f8c:                            ; preds = %dec_label_pc_10003f70
  %v3_10003f8c = icmp eq i8 %v2_10003f74, 9
  store i1 %v3_10003f8c, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_10003f74, label %dec_label_pc_10003f98 [
    i8 32, label %dec_label_pc_10003fb4
    i8 9, label %dec_label_pc_10003fb4
  ]

dec_label_pc_10003f98:                            ; preds = %dec_label_pc_10003f8c
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10003f9c

dec_label_pc_10003f9c:                            ; preds = %dec_label_pc_10003f70, %dec_label_pc_10003f98
  %v0_10003f705 = phi i32 [ %v0_10003f70, %dec_label_pc_10003f70 ], [ 1, %dec_label_pc_10003f98 ]
  %v1_10003f9c = add nuw nsw i32 %v3_10003f74, 208
  %v1_10003fa0 = urem i32 %v1_10003f9c, 256
  store i32 %v1_10003fa0, i32* %r0.global-to-local, align 4
  %v2_10003fa4 = icmp ugt i32 %v1_10003fa0, 9
  %v3_10003fa4 = icmp eq i32 %v1_10003fa0, 9
  store i1 %v3_10003fa4, i1* %cr7_eq.global-to-local, align 1
  %v3_10003f80.not = icmp ne i8 %v2_10003f74, 46
  %brmerge.not = and i1 %v3_10003f80.not, %v2_10003fa4
  %brmerge26 = or i1 %v4_10003f78, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_10003ff0, label %dec_label_pc_10003fb4

dec_label_pc_10003fb4:                            ; preds = %dec_label_pc_10003f9c, %dec_label_pc_10003f8c, %dec_label_pc_10003f8c
  %v0_10003f704 = phi i32 [ 0, %dec_label_pc_10003f8c ], [ 0, %dec_label_pc_10003f8c ], [ %v0_10003f705, %dec_label_pc_10003f9c ]
  %v1_10003fb4 = add i32 %v0_10003fb4, 1
  %v1_10003fb8 = add i32 %v0_10003fb8, -1
  store i32 %v1_10003fb8, i32* %ctr.global-to-local, align 4
  %v2_10003fb8 = icmp eq i32 %v1_10003fb8, 0
  br i1 %v2_10003fb8, label %dec_label_pc_10003fbc, label %dec_label_pc_10003f70

dec_label_pc_10003fbc:                            ; preds = %dec_label_pc_10003fb4, %dec_label_pc_10003f4c, %dec_label_pc_10003ef4, %dec_label_pc_10003d5c
  %v0_10003fbc = call i32 @function_10005f98()
  %v1_10003fc0 = urem i32 %v0_10003fbc, 4
  store i32 %v1_10003fc0, i32* %r3.global-to-local, align 4
  %v3_10003fc4 = icmp eq i32 %v1_10003fc0, 1
  store i1 %v3_10003fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fc4, label %dec_label_pc_100043a8, label %dec_label_pc_10003fcc

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fbc
  %v1_10003fc4 = icmp eq i32 %v1_10003fc0, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10003fc4, label %dec_label_pc_100043c0, label %dec_label_pc_10003fd4

dec_label_pc_10003fd4:                            ; preds = %dec_label_pc_10003fcc
  %v2_10003fd4 = icmp eq i32 %v1_10003fc0, 3
  %v3_10003fd4 = icmp eq i32 %v1_10003fc0, 2
  store i1 %v3_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003fd4, label %dec_label_pc_100043b4, label %dec_label_pc_10003fdc

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fd4
  store i1 %v2_10003fd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10003fd4, label %dec_label_pc_10003fe4, label %dec_label_pc_10004020

dec_label_pc_10003fe4:                            ; preds = %dec_label_pc_10003fdc
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10003ff0:                            ; preds = %dec_label_pc_10003f9c
  %v2_10003ff0 = sub i32 %v0_10003fb4, %v0_10003f44
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004004.25 to i32), i32* @lr, align 4
  %v3_10004000 = call i32 @function_10008a1c(i32 %v2_10003f6c, i32 %v2_10003f64, i32 %v2_10003ff0)
  %v2_10004004 = ptrtoint i32* %stack_var_-2184 to i32
  %v2_10004008 = add i32 %v2_10003ff0, %v2_10004004
  store i32 %v2_10004008, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10004010 = add i32 %v2_10004008, 4
  %v4_10004010 = inttoptr i32 %v3_10004010 to i8*
  store i8 0, i8* %v4_10004010, align 1
  store i32 %v2_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451868, i32* @lr, align 4
  %v1_10004018 = call i32 @function_10009c0c(i32 %v2_10003f6c)
  store i32 %v1_10004018, i32* %r3.global-to-local, align 4
  store i32 %v1_10004018, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_10004020:                            ; preds = %dec_label_pc_10003fdc, %dec_label_pc_10003fe4, %dec_label_pc_100043c0, %dec_label_pc_100043b4, %dec_label_pc_100043a8, %dec_label_pc_10003ff0
  %v0_10004020 = load i32, i32* %r25.global-to-local, align 4
  %v3_10004020 = icmp eq i32 %v0_10004020, 0
  store i1 %v3_10004020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004020, label %dec_label_pc_10004348, label %dec_label_pc_10004028

dec_label_pc_10004028:                            ; preds = %dec_label_pc_10004020
  store i32 %v0_10004020, i32* %r3.global-to-local, align 4
  store i32 268451888, i32* @lr, align 4
  %v1_1000402c = inttoptr i32 %v0_10004020 to i8*
  %v2_1000402c = call i32 @function_10008998(i8* %v1_1000402c)
  store i32 %v2_1000402c, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451908, i32* @lr, align 4
  %v3_10004040 = call i32 @function_10009ea8(i32 2, i32 3, i32 17)
  store i32 %v3_10004040, i32* %r3.global-to-local, align 4
  %v3_10004044 = icmp eq i32 %v3_10004040, -1
  store i1 %v3_10004044, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10004040, i32* %r22.global-to-local, align 4
  br i1 %v3_10004044, label %dec_label_pc_10004348, label %dec_label_pc_10004050

dec_label_pc_10004050:                            ; preds = %dec_label_pc_10004028
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000405c = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268451948, i32* @lr, align 4
  %v4_10004068 = call i32 @function_10009e6c(i32 0, i32 3, i32 %v2_1000405c, i32 4)
  store i32 %v4_10004068, i32* %r3.global-to-local, align 4
  %v3_1000406c = icmp eq i32 %v4_10004068, -1
  store i1 %v3_1000406c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000406c, label %dec_label_pc_10004340, label %dec_label_pc_10004074

dec_label_pc_10004074:                            ; preds = %dec_label_pc_10004050
  %v0_10004074 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004074 = icmp slt i32 %v0_10004074, 0
  %v3_10004074 = icmp eq i32 %v0_10004074, 0
  store i1 %v1_10004074, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004074, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 65536
  store i32 %v1_1000407c, i32* %r17.global-to-local, align 4
  %v0_10004080 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004080 = urem i32 %v0_10004080, 65536
  store i32 %v1_10004080, i32* %r18.global-to-local, align 4
  %v0_10004084 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004084 = urem i32 %v0_10004084, 65536
  store i32 %v1_10004084, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000408c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 65536
  store i32 %v1_1000408c, i32* %r20.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 256
  store i32 %v1_10004090, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_10004074, 1
  %v1_10004334 = load i32, i32* @r29, align 4
  %v2_10004334 = add i32 %v1_10004334, %v1_10004090
  store i32 %v2_10004334, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_10004098

dec_label_pc_10004098:                            ; preds = %dec_label_pc_10004074
  %v1_1000409c = icmp slt i32 %v1_10004334, 0
  %v3_1000409c = icmp eq i32 %v1_10004334, 0
  store i1 %v1_1000409c, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_1000409c, i1* %cr3_eq.global-to-local, align 1
  %v1_100040a0 = urem i32 %v2_10004334, 65536
  %v0_100040a4 = load i32, i32* %r27.global-to-local, align 4
  %v3_100040a4 = icmp eq i32 %v0_100040a4, 0
  store i1 %v3_100040a4, i1* %cr2_eq.global-to-local, align 1
  %v1_100040a8 = add nuw nsw i32 %v1_100040a0, 27
  store i32 %v1_100040a8, i32* %r0.global-to-local, align 4
  %v1_100040ac = add nuw nsw i32 %v1_100040a0, 47
  store i32 %v1_100040ac, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10004334, 47
  %v1_100040b0 = urem i32 %fold, 65536
  store i32 %v1_100040b0, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10004334, 27
  %v1_100040b4 = urem i32 %fold3, 65536
  store i32 %v1_100040b4, i32* %r27.global-to-local, align 4
  %v1_100040b8 = add i32 %v1_10004334, 1
  store i32 %v1_100040b8, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_10004108 = sext i8 %v5_10003df4 to i32
  %v4_10004110 = sext i8 %v5_10003e2c to i32
  br label %dec_label_pc_100040c0

dec_label_pc_100040c0:                            ; preds = %dec_label_pc_100041d0, %dec_label_pc_10004098
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268452044, i32* @lr, align 4
  %v2_100040c8 = call i32 @function_1000a204(i32 600, i32 1)
  store i32 %v2_100040c8, i32* %r3.global-to-local, align 4
  %v3_100040cc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100040cc, i32* %r0.global-to-local, align 4
  %v0_100040d0 = load i32, i32* @r31, align 4
  %v1_100040d0 = mul i32 %v0_100040d0, 4
  store i32 %v1_100040d0, i32* %r9.global-to-local, align 4
  %v2_100040d4 = load i32, i32* %r16.global-to-local, align 4
  %v3_100040d4 = add i32 %v2_100040d4, %v1_100040d0
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i32*
  store i32 %v2_100040c8, i32* %v4_100040d4, align 4
  %v0_100040d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100040d8 = mul i32 %v0_100040d8, 4
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  %v0_100040dc = load i32, i32* %r16.global-to-local, align 4
  %v2_100040dc = add i32 %v0_100040dc, %v1_100040d8
  %v3_100040dc = inttoptr i32 %v2_100040dc to i32*
  %v4_100040dc = load i32, i32* %v3_100040dc, align 4
  store i32 %v4_100040dc, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100040e4 = inttoptr i32 %v4_100040dc to i32*
  %v2_100040e4 = load i32, i32* %v1_100040e4, align 4
  store i32 %v2_100040e4, i32* %r9.global-to-local, align 4
  %v1_100040e8 = add i32 %v4_100040dc, 20
  store i32 %v1_100040e8, i32* %r10.global-to-local, align 4
  %v0_100040ec = load i32, i32* %r17.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v3_100040ec = add i32 %v4_100040dc, 4
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  %v0_100040f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100040f0 = add i32 %v0_100040f0, 28
  store i32 %v1_100040f0, i32* %r8.global-to-local, align 4
  %v1_100040f4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040f4, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100040fc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100040fc, i32* %r9.global-to-local, align 4
  %v1_10004100 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004100 = inttoptr i32 %v1_10004100 to i32*
  store i32 %v1_100040fc, i32* %v2_10004100, align 4
  %v0_10004104 = load i32, i32* %r26.global-to-local, align 4
  %v1_10004104 = trunc i32 %v0_10004104 to i16
  %v2_10004104 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004104 = add i32 %v2_10004104, 2
  %v4_10004104 = inttoptr i32 %v3_10004104 to i16*
  store i16 %v1_10004104, i16* %v4_10004104, align 2
  store i32 %v4_10004108, i32* %r0.global-to-local, align 4
  %v2_1000410c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000410c = add i32 %v2_1000410c, 1
  %v4_1000410c = inttoptr i32 %v3_1000410c to i8*
  store i8 %v5_10003df4, i8* %v4_1000410c, align 1
  store i32 %v4_10004110, i32* %r7.global-to-local, align 4
  %v2_10004114 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 8
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v5_10003e2c, i8* %v4_10004114, align 1
  %v0_10004118 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004118, label %dec_label_pc_10004124, label %dec_label_pc_1000411c

dec_label_pc_1000411c:                            ; preds = %dec_label_pc_100040c0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 6
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 16384, i16* %v4_10004120, align 2
  br label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %dec_label_pc_100040c0, %dec_label_pc_1000411c
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_1000412c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000412c = add i32 %v2_1000412c, 9
  %v4_1000412c = inttoptr i32 %v3_1000412c to i8*
  store i8 17, i8* %v4_1000412c, align 1
  %v0_10004130 = load i32, i32* %r11.global-to-local, align 4
  %v1_10004130 = add i32 %v0_10004130, 41
  store i32 %v1_10004130, i32* %r9.global-to-local, align 4
  %v0_10004134 = load i32, i32* %r27.global-to-local, align 4
  %v1_10004134 = trunc i32 %v0_10004134 to i16
  %v2_10004134 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004134 = add i32 %v2_10004134, 4
  %v4_10004134 = inttoptr i32 %v3_10004134 to i16*
  store i16 %v1_10004134, i16* %v4_10004134, align 2
  %v0_10004138 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r23.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, %v0_10004138
  store i32 %v2_10004138, i32* %r30.global-to-local, align 4
  %v3_1000413c = load i32, i32* @global_var_1001c2d0.14, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = add i32 %v2_10004138, 1
  store i32 %v1_10004140, i32* %r31.global-to-local, align 4
  %v0_10004144 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004144 = trunc i32 %v0_10004144 to i16
  %v2_10004144 = load i32, i32* %r10.global-to-local, align 4
  %v3_10004144 = add i32 %v2_10004144, 2
  %v4_10004144 = inttoptr i32 %v3_10004144 to i16*
  store i16 %v1_10004144, i16* %v4_10004144, align 2
  %v0_10004148 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004148, i32* %r3.global-to-local, align 4
  %v0_1000414c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000414c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000414c = add i32 %v1_1000414c, 12
  %v3_1000414c = inttoptr i32 %v2_1000414c to i32*
  store i32 %v0_1000414c, i32* %v3_1000414c, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10004154 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004154 = trunc i32 %v0_10004154 to i16
  %v2_10004154 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004154 = add i32 %v2_10004154, 20
  %v4_10004154 = inttoptr i32 %v3_10004154 to i16*
  store i16 %v1_10004154, i16* %v4_10004154, align 2
  %v0_10004158 = load i32, i32* %r25.global-to-local, align 4
  %v0_1000415c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000415c = trunc i32 %v0_1000415c to i16
  %v2_1000415c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000415c = add i32 %v2_1000415c, 2
  %v4_1000415c = inttoptr i32 %v3_1000415c to i16*
  store i16 %v1_1000415c, i16* %v4_1000415c, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10004164 = load i32, i32* %r8.global-to-local, align 4
  %v3_10004164 = add i32 %v2_10004164, 4
  %v4_10004164 = inttoptr i32 %v3_10004164 to i16*
  store i16 1, i16* %v4_10004164, align 2
  %v0_10004168 = load i32, i32* @r28, align 4
  %v0_1000416c = load i32, i32* @r21, align 4
  %v1_1000416c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000416c = add i32 %v1_1000416c, 16
  %v3_1000416c = inttoptr i32 %v2_1000416c to i32*
  store i32 %v0_1000416c, i32* %v3_1000416c, align 4
  %v0_10004170 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004170 = trunc i32 %v0_10004170 to i16
  %v2_10004170 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004170 = add i32 %v2_10004170, 28
  %v4_10004170 = inttoptr i32 %v3_10004170 to i16*
  store i16 %v1_10004170, i16* %v4_10004170, align 2
  %v0_10004174 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004174 = trunc i32 %v0_10004174 to i8
  %v2_10004174 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004174 = add i32 %v2_10004174, 40
  %v4_10004174 = inttoptr i32 %v3_10004174 to i8*
  store i8 %v1_10004174, i8* %v4_10004174, align 1
  store i32 268452220, i32* @lr, align 4
  %v3_10004178 = call i32 @function_10008a1c(i32 %v0_10004148, i32 %v0_10004158, i32 %v0_10004168)
  store i32 %v3_10004178, i32* %r3.global-to-local, align 4
  %v0_1000417c = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000417c = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_1000417c = or i1 %v0_1000417c, %v1_1000417c
  br i1 %v2_1000417c, label %dec_label_pc_100041c8, label %dec_label_pc_10004180

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004124
  %v0_10004180 = load i32, i32* @r29, align 4
  store i32 %v0_10004180, i32* %ctr.global-to-local, align 4
  %v0_10004184 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004184, i32* %r3.global-to-local, align 4
  %v0_10004188 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10004188, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041a8

dec_label_pc_10004198:                            ; preds = %dec_label_pc_100041a8
  %v1_10004198 = urem i32 %v1_100041ac, 256
  br label %dec_label_pc_1000419c

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_100041b8, %dec_label_pc_10004198
  %v0_100041a4 = phi i32 [ %v0_100041a4.pre, %dec_label_pc_100041b8 ], [ %v0_100041a418, %dec_label_pc_10004198 ]
  %v0_100041a0 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v0_100041a016, %dec_label_pc_10004198 ]
  %v2_100041b813 = phi i32 [ %v0_100041bc, %dec_label_pc_100041b8 ], [ %v2_100041b8, %dec_label_pc_10004198 ]
  %v0_1000419c = phi i32 [ %v0_1000419c.pre, %dec_label_pc_100041b8 ], [ %v0_100041a8, %dec_label_pc_10004198 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100041b8 ], [ %v1_10004198, %dec_label_pc_10004198 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_1000419c = add i32 %v0_1000419c, 1
  store i32 %v1_1000419c, i32* %r10.global-to-local, align 4
  %v1_100041a0 = add i32 %v0_100041a0, 1
  store i32 %v1_100041a0, i32* %r3.global-to-local, align 4
  %v1_100041a4 = add i32 %v0_100041a4, -1
  store i32 %v1_100041a4, i32* %ctr.global-to-local, align 4
  %v2_100041a4 = icmp eq i32 %v1_100041a4, 0
  br i1 %v2_100041a4, label %dec_label_pc_100041d0.loopexit, label %dec_label_pc_100041a8

dec_label_pc_100041a8:                            ; preds = %dec_label_pc_1000419c, %dec_label_pc_10004180
  %v0_100041a418 = phi i32 [ %v1_100041a4, %dec_label_pc_1000419c ], [ %v0_10004180, %dec_label_pc_10004180 ]
  %v0_100041a016 = phi i32 [ %v1_100041a0, %dec_label_pc_1000419c ], [ %v0_10004184, %dec_label_pc_10004180 ]
  %v2_100041b8 = phi i32 [ %v2_100041b813, %dec_label_pc_1000419c ], [ %v0_10004188, %dec_label_pc_10004180 ]
  %v0_100041b8 = phi i32 [ %storemerge, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v0_100041a8 = phi i32 [ %v1_1000419c, %dec_label_pc_1000419c ], [ 0, %dec_label_pc_10004180 ]
  %v1_100041a8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100041a8 = add i32 %v1_100041a8, %v0_100041a8
  %v3_100041a8 = inttoptr i32 %v2_100041a8 to i8*
  %v4_100041a8 = load i8, i8* %v3_100041a8, align 1
  %v5_100041a8 = zext i8 %v4_100041a8 to i32
  store i32 %v5_100041a8, i32* %r0.global-to-local, align 4
  %v1_100041ac = add nsw i32 %v0_100041b8, 1
  store i32 %v1_100041ac, i32* %r11.global-to-local, align 4
  %v3_100041b0 = icmp eq i8 %v4_100041a8, 46
  store i1 %v3_100041b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100041b0, label %dec_label_pc_100041b8, label %dec_label_pc_10004198

dec_label_pc_100041b8:                            ; preds = %dec_label_pc_100041a8
  %v1_100041b8 = trunc i32 %v0_100041b8 to i8
  %v3_100041b8 = inttoptr i32 %v2_100041b8 to i8*
  store i8 %v1_100041b8, i8* %v3_100041b8, align 1
  %v0_100041bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100041bc, i32* %r9.global-to-local, align 4
  %v0_1000419c.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_100041a4.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000419c

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_10004124
  %v0_100041c8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100041c8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0.loopexit:                   ; preds = %dec_label_pc_1000419c
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100041d0

dec_label_pc_100041d0:                            ; preds = %dec_label_pc_100041d0.loopexit, %dec_label_pc_100041c8
  %v2_100041d0 = phi i32 [ %v2_100041b813, %dec_label_pc_100041d0.loopexit ], [ %v0_100041c8, %dec_label_pc_100041c8 ]
  %v0_100041d0.off0 = phi i8 [ %extract.t, %dec_label_pc_100041d0.loopexit ], [ 0, %dec_label_pc_100041c8 ]
  %v3_100041d0 = inttoptr i32 %v2_100041d0 to i8*
  store i8 %v0_100041d0.off0, i8* %v3_100041d0, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100041d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100041d8 = load i32, i32* @r29, align 4
  %v2_100041d8 = add i32 %v1_100041d8, %v0_100041d8
  store i32 %v2_100041d8, i32* %r9.global-to-local, align 4
  %v3_100041dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100041dc, i32* %r11.global-to-local, align 4
  %v3_100041e0 = add i32 %v2_100041d8, 4
  %v4_100041e0 = inttoptr i32 %v3_100041e0 to i16*
  store i16 1, i16* %v4_100041e0, align 2
  %v0_100041e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100041e4 = add i32 %v0_100041e4, 1
  store i32 %v1_100041e4, i32* %r31.global-to-local, align 4
  %v0_100041e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041e8 = trunc i32 %v0_100041e8 to i16
  %v2_100041e8 = load i32, i32* %r9.global-to-local, align 4
  %v3_100041e8 = add i32 %v2_100041e8, 2
  %v4_100041e8 = inttoptr i32 %v3_100041e8 to i16*
  store i16 %v1_100041e8, i16* %v4_100041e8, align 2
  %v0_100041ec = load i32, i32* %r31.global-to-local, align 4
  %v1_100041ec = load i32, i32* %r15.global-to-local, align 4
  %v2_100041ec = icmp slt i32 %v0_100041ec, %v1_100041ec
  %v4_100041ec = icmp eq i32 %v0_100041ec, %v1_100041ec
  store i1 %v4_100041ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100041ec, i32* %stack_var_-2184, align 4
  br i1 %v2_100041ec, label %dec_label_pc_100040c0, label %dec_label_pc_100041f8.preheader.loopexit

dec_label_pc_100041f8.preheader.loopexit:         ; preds = %dec_label_pc_100041d0
  %v0_100041f8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041f8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041f8.preheader

dec_label_pc_100041f8.preheader:                  ; preds = %dec_label_pc_100042f0, %dec_label_pc_10004074, %dec_label_pc_100041f8.preheader.loopexit
  %v1_100041f8 = phi i1 [ %v1_10004074, %dec_label_pc_10004074 ], [ %v1_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v1_100042f0, %dec_label_pc_100042f0 ]
  %v0_100041f8 = phi i1 [ %v3_10004074, %dec_label_pc_10004074 ], [ %v0_100041f8.pre, %dec_label_pc_100041f8.preheader.loopexit ], [ %v0_100042f0, %dec_label_pc_100042f0 ]
  %v2_100041f8 = or i1 %v1_100041f8, %v0_100041f8
  br label %dec_label_pc_100041f8

dec_label_pc_100041f8:                            ; preds = %dec_label_pc_100041f8.preheader, %dec_label_pc_100041f8
  br i1 %v2_100041f8, label %dec_label_pc_100041f8, label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_100041f8, %dec_label_pc_100042f0
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_1000420c = load i32, i32* %r19.global-to-local, align 4
  %v4_1000420c = icmp eq i32 %v0_1000420c, 65535
  store i1 %v4_1000420c, i1* %cr7_eq.global-to-local, align 1
  %v0_10004210 = load i32, i32* %r18.global-to-local, align 4
  %v2_10004210 = icmp slt i32 %v0_10004210, 65535
  %v4_10004210 = icmp eq i32 %v0_10004210, 65535
  store i1 %v2_10004210, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_10004210, i1* %cr3_eq.global-to-local, align 1
  %v0_10004214 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004214 = icmp eq i32 %v0_10004214, 65535
  store i1 %v4_10004214, i1* %cr2_eq.global-to-local, align 1
  %v0_10004218 = load i32, i32* @r24, align 4
  %v1_10004218 = add i32 %v0_10004218, 27
  store i32 %v1_10004218, i32* @r30, align 4
  %v0_1000421c = call i32 @__asm_mfcr()
  store i32 %v0_1000421c, i32* %r3.global-to-local, align 4
  %v1_10004220 = mul i32 %v0_1000421c, 268435456
  store i32 %v1_10004220, i32* @r26, align 4
  %v0_10004224 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004224 = load i32, i32* %r0.global-to-local, align 4
  %v4_10004224 = icmp eq i32 %v0_10004224, %v1_10004224
  store i1 %v4_10004224, i1* %cr7_eq.global-to-local, align 1
  %v0_10004228 = load i32, i32* @r24, align 4
  %v1_10004228 = add i32 %v0_10004228, 47
  store i32 %v1_10004228, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10004230 = call i32 @__asm_mfcr()
  store i32 %v0_10004230, i32* %r3.global-to-local, align 4
  %v1_10004234 = mul i32 %v0_10004230, 268435456
  store i32 %v1_10004234, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_1000423c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_1000423c:                            ; preds = %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, %dec_label_pc_100041fc
  %v0_10004240 = phi i32 [ %v0_10004240.pre, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v1_10004234, %dec_label_pc_100041fc ]
  %v0_1000423c = phi i32 [ %v1_100042e0, %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge ], [ %v0_1000423c.pre, %dec_label_pc_100041fc ]
  %v1_1000423c = mul i32 %v0_1000423c, 4
  store i32 %v1_1000423c, i32* %r0.global-to-local, align 4
  %v1_10004240 = mul i32 %v0_10004240, 16
  %v2_10004240 = udiv i32 %v0_10004240, 268435456
  %v3_10004240 = or i32 %v2_10004240, %v1_10004240
  store i32 %v3_10004240, i32* %r27.global-to-local, align 4
  %v1_10004244 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004240)
  %v1_10004248 = mul nuw i32 %v2_10004240, 268435456
  %v2_10004248 = urem i32 %v0_10004240, 268435456
  %v3_10004248 = or i32 %v1_10004248, %v2_10004248
  store i32 %v3_10004248, i32* @r27, align 4
  %v0_1000424c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000424c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000424c = add i32 %v1_1000424c, %v0_1000424c
  %v3_1000424c = inttoptr i32 %v2_1000424c to i32*
  %v4_1000424c = load i32, i32* %v3_1000424c, align 4
  store i32 %v4_1000424c, i32* @r29, align 4
  %v1_10004250 = add i32 %v4_1000424c, 20
  store i32 %v1_10004250, i32* @r28, align 4
  %v0_10004254 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004254, label %dec_label_pc_100042f8, label %dec_label_pc_10004258

dec_label_pc_10004258:                            ; preds = %dec_label_pc_1000423c
  %v0_10004258 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004258, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_1000425c = load i32, i32* @r26, align 4
  %v1_1000425c = mul i32 %v0_1000425c, 16
  %v2_1000425c = udiv i32 %v0_1000425c, 268435456
  %v3_1000425c = or i32 %v2_1000425c, %v1_1000425c
  store i32 %v3_1000425c, i32* %r26.global-to-local, align 4
  %v1_10004260 = call %0 @__asm_mtcrf(i32 1, i32 %v3_1000425c)
  %v1_10004264 = mul nuw i32 %v2_1000425c, 268435456
  %v2_10004264 = urem i32 %v0_1000425c, 268435456
  %v3_10004264 = or i32 %v1_10004264, %v2_10004264
  store i32 %v3_10004264, i32* @r26, align 4
  %v0_10004268 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004268, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000426c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000426c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000426c, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004270:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c, %dec_label_pc_10004328
  %v0_10004270 = load i32, i32* @r29, align 4
  %v1_10004270 = add i32 %v0_10004270, 41
  store i32 %v1_10004270, i32* %r3.global-to-local, align 4
  %v0_10004274 = load i32, i32* %r23.global-to-local, align 4
  store i32 268452476, i32* @lr, align 4
  %v2_10004278 = inttoptr i32 %v1_10004270 to i8*
  %v3_10004278 = call i32 @function_10006058(i8* %v2_10004278, i32 %v0_10004274)
  %v0_1000427c = load i32, i32* @r25, align 4
  %v1_1000427c = trunc i32 %v0_1000427c to i16
  %v2_1000427c = load i32, i32* @r29, align 4
  %v3_1000427c = add i32 %v2_1000427c, 10
  %v4_1000427c = inttoptr i32 %v3_1000427c to i16*
  store i16 %v1_1000427c, i16* %v4_1000427c, align 2
  %v0_10004284 = load i32, i32* @r29, align 4
  store i32 %v0_10004284, i32* @r3, align 4
  %v2_10004288 = call i32 @function_100043cc(i32 %v0_10004284, i32 20)
  %v3_10004288 = trunc i32 %v2_10004288 to i16
  %v0_1000428c = load i32, i32* @r28, align 4
  store i32 %v0_1000428c, i32* @r4, align 4
  %v3_10004290 = load i32, i32* @r29, align 4
  %v4_10004290 = add i32 %v3_10004290, 10
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v3_10004288, i16* %v5_10004290, align 2
  %v0_10004294 = load i32, i32* @r30, align 4
  %v0_10004298 = load i32, i32* @r25, align 4
  %v1_10004298 = trunc i32 %v0_10004298 to i16
  %v2_10004298 = load i32, i32* @r28, align 4
  %v3_10004298 = add i32 %v2_10004298, 6
  %v4_10004298 = inttoptr i32 %v3_10004298 to i16*
  store i16 %v1_10004298, i16* %v4_10004298, align 2
  %v0_1000429c = load i32, i32* @r29, align 4
  store i32 %v0_1000429c, i32* %r3.global-to-local, align 4
  %v0_100042a0 = load i32, i32* @r28, align 4
  %v1_100042a0 = add i32 %v0_100042a0, 4
  %v2_100042a0 = inttoptr i32 %v1_100042a0 to i16*
  %v3_100042a0 = load i16, i16* %v2_100042a0, align 2
  %v4_100042a0 = zext i16 %v3_100042a0 to i32
  %v4_100042a4 = call i32 @function_10004430(i32 %v0_1000429c, i32 %v0_1000428c, i32 %v4_100042a0, i32 %v0_10004294)
  %v5_100042a4 = trunc i32 %v4_100042a4 to i16
  store i32 %v4_100042a4, i32* %r3.global-to-local, align 4
  %v3_100042a8 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042a8, i32* %r7.global-to-local, align 4
  %v0_100042ac = load i32, i32* @r28, align 4
  %v1_100042ac = add i32 %v0_100042ac, 2
  %v2_100042ac = inttoptr i32 %v1_100042ac to i16*
  %v3_100042ac = load i16, i16* %v2_100042ac, align 2
  %v4_100042ac = zext i16 %v3_100042ac to i32
  store i32 %v4_100042ac, i32* %r0.global-to-local, align 4
  %v0_100042b0 = load i32, i32* @r29, align 4
  %v1_100042b4 = mul i32 %v3_100042a8, 24
  store i32 %v1_100042b4, i32* %r7.global-to-local, align 4
  %v4_100042b8 = add i32 %v0_100042ac, 6
  %v5_100042b8 = inttoptr i32 %v4_100042b8 to i16*
  store i16 %v5_100042a4, i16* %v5_100042b8, align 2
  %v0_100042bc = load i32, i32* @r31, align 4
  %v0_100042c0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100042c0, i32* %r3.global-to-local, align 4
  %v0_100042c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100042c4 = load i32, i32* %r14.global-to-local, align 4
  %v2_100042c4 = add i32 %v1_100042c4, %v0_100042c4
  store i32 %v2_100042c4, i32* %r7.global-to-local, align 4
  %v0_100042cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100042cc = trunc i32 %v0_100042cc to i16
  %v3_100042cc = add i32 %v2_100042c4, 2
  %v4_100042cc = inttoptr i32 %v3_100042cc to i16*
  store i16 %v1_100042cc, i16* %v4_100042cc, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_100042d4 = load i32, i32* @r21, align 4
  %v2_100042d4 = add i32 %v2_100042c4, 4
  %v3_100042d4 = inttoptr i32 %v2_100042d4 to i32*
  store i32 %v0_100042d4, i32* %v3_100042d4, align 4
  store i32 268452572, i32* @lr, align 4
  %v6_100042d8 = call i32 @function_10009e2c(i32 %v0_100042c0, i32 %v0_100042b0, i32 %v0_100042bc, i32 16384, i32 %v2_100042c4, i32 16)
  store i32 %v6_100042d8, i32* %r3.global-to-local, align 4
  %v3_100042dc = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v3_100042dc, 1
  store i32 %v1_100042e0, i32* %r0.global-to-local, align 4
  %v1_100042e4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100042e4 = icmp slt i32 %v1_100042e0, %v1_100042e4
  %v4_100042e4 = icmp eq i32 %v1_100042e0, %v1_100042e4
  store i1 %v4_100042e4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100042e0, i32* %stack_var_-2184, align 4
  br i1 %v2_100042e4, label %dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge, label %dec_label_pc_100042f0

dec_label_pc_10004270.dec_label_pc_1000423c_crit_edge: ; preds = %dec_label_pc_10004270
  %v0_10004240.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000423c

dec_label_pc_100042f0:                            ; preds = %dec_label_pc_10004270
  %v0_100042f0 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042f0 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042f0 = or i1 %v0_100042f0, %v1_100042f0
  br i1 %v2_100042f0, label %dec_label_pc_100041f8.preheader, label %dec_label_pc_100041fc

dec_label_pc_100042f8:                            ; preds = %dec_label_pc_1000423c
  %v0_100042f8 = call i32 @function_10005f98()
  %v1_100042f8 = trunc i32 %v0_100042f8 to i16
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  %v3_100042fc = load i32, i32* @r29, align 4
  %v4_100042fc = add i32 %v3_100042fc, 4
  %v5_100042fc = inttoptr i32 %v4_100042fc to i16*
  store i16 %v1_100042f8, i16* %v5_100042fc, align 2
  %v0_10004300 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004300, label %dec_label_pc_10004304, label %dec_label_pc_1000425c

dec_label_pc_10004304:                            ; preds = %dec_label_pc_100042f8, %dec_label_pc_10004258
  %v0_10004304 = call i32 @function_10005f98()
  %v1_10004304 = trunc i32 %v0_10004304 to i16
  store i32 %v0_10004304, i32* %r3.global-to-local, align 4
  %v0_10004308 = load i32, i32* @r26, align 4
  %v1_10004308 = mul i32 %v0_10004308, 16
  %v2_10004308 = udiv i32 %v0_10004308, 268435456
  %v3_10004308 = or i32 %v2_10004308, %v1_10004308
  store i32 %v3_10004308, i32* %r26.global-to-local, align 4
  %v1_1000430c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10004308)
  %v1_10004310 = mul nuw i32 %v2_10004308, 268435456
  %v2_10004310 = urem i32 %v0_10004308, 268435456
  %v3_10004310 = or i32 %v1_10004310, %v2_10004310
  store i32 %v3_10004310, i32* @r26, align 4
  %v3_10004314 = load i32, i32* @r29, align 4
  %v4_10004314 = add i32 %v3_10004314, 20
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_10004304, i16* %v5_10004314, align 2
  %v0_10004318 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004318, label %dec_label_pc_1000431c, label %dec_label_pc_1000426c

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_10004304, %dec_label_pc_1000425c
  %v0_1000431c = call i32 @function_10005f98()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v3_10004320 = load i32, i32* @r28, align 4
  %v4_10004320 = add i32 %v3_10004320, 2
  %v5_10004320 = inttoptr i32 %v4_10004320 to i16*
  store i16 %v1_1000431c, i16* %v5_10004320, align 2
  %v0_10004324 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10004324, label %dec_label_pc_10004328, label %dec_label_pc_10004270

dec_label_pc_10004328:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_1000426c
  %v0_10004328 = call i32 @function_10005f98()
  %v1_10004328 = trunc i32 %v0_10004328 to i16
  store i32 %v0_10004328, i32* %r3.global-to-local, align 4
  %v3_1000432c = load i32, i32* @r29, align 4
  %v4_1000432c = add i32 %v3_1000432c, 28
  %v5_1000432c = inttoptr i32 %v4_1000432c to i16*
  store i16 %v1_10004328, i16* %v5_1000432c, align 2
  br label %dec_label_pc_10004270

dec_label_pc_10004340:                            ; preds = %dec_label_pc_10004050
  %v0_10004340 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10004340, i32* %r3.global-to-local, align 4
  store i32 268452680, i32* @lr, align 4
  %v0_10004344 = call i32 @function_10009158()
  store i32 %v0_10004344, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004348

dec_label_pc_10004348:                            ; preds = %dec_label_pc_10004028, %dec_label_pc_10004020, %dec_label_pc_10004340
  store i32 %v0_10003d74, i32* %r0.global-to-local, align 4
  %v1_1000435c = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003d64)
  store i32 %v0_10003d94, i32* %r24.global-to-local, align 4
  store i32 %v0_10003d98, i32* %r25.global-to-local, align 4
  store i32 %v0_10003d9c, i32* %r26.global-to-local, align 4
  store i32 %v0_10003da0, i32* %r27.global-to-local, align 4
  store i32 %v0_10003da4, i32* %r28.global-to-local, align 4
  store i32 %v0_10003dc8, i32* %r30.global-to-local, align 4
  store i32 %v0_10003db4, i32* %r31.global-to-local, align 4
  %v0_100043a4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043a4

dec_label_pc_100043a8:                            ; preds = %dec_label_pc_10003fbc
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043b4:                            ; preds = %dec_label_pc_10003fd4
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10004020

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_10003fcc
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10004020

; uselistorder directives
  uselistorder i32 %v0_10004328, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_10004308, { 2, 1, 0 }
  uselistorder i32 %v0_10004304, { 1, 0 }
  uselistorder i32 %v0_100042f8, { 1, 0 }
  uselistorder i1 %v1_100042f0, { 1, 0 }
  uselistorder i1 %v0_100042f0, { 1, 0 }
  uselistorder i32 %v1_100042e0, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100042a4, { 1, 0 }
  uselistorder i32 %v0_1000425c, { 2, 1, 0 }
  uselistorder i32 %v0_10004240, { 2, 1, 0 }
  uselistorder i32 %v1_10004234, { 1, 0 }
  uselistorder i32 %v0_100041bc, { 2, 0, 1 }
  uselistorder i32 %v1_100041ac, { 1, 0 }
  uselistorder i32 %v1_100041a4, { 0, 2, 1 }
  uselistorder i32 %v1_100040d8, { 1, 0 }
  uselistorder i32 %v1_100040d0, { 1, 0 }
  uselistorder i32 %v2_10004334, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10004334, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v0_10004020, { 1, 0, 2 }
  uselistorder i1 %v2_10003fd4, { 1, 0 }
  uselistorder i32 %v1_10003fc0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10003fb8, { 2, 1, 0 }
  uselistorder i32 %v1_10003fa0, { 1, 2, 0 }
  uselistorder i32 %v1_10003f7c, { 1, 0 }
  uselistorder i32 %v0_10003f70, { 1, 0 }
  uselistorder i32 %v2_10003f6c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10003f4c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10003f44, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_10003eec, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10003e2c, { 1, 0 }
  uselistorder i8 %v5_10003df4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r31.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 8, 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 29, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 1, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0, 3 }
  uselistorder i32* %r28.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r27.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r26.global-to-local, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* %r25.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r24.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 41, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @function_10009c0c, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_100006a8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 103, 104, 105, 106, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102 }
  uselistorder label %dec_label_pc_10004348, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004270, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100041fc, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8, { 1, 0 }
  uselistorder label %dec_label_pc_100041f8.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004124, { 1, 0 }
  uselistorder label %dec_label_pc_10004020, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_10003f9c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %v3_100044fc = load i32, i32* @global_var_1001c2dc.26, align 4
  store i32 268453124, i32* @lr, align 4
  %v2_10004500 = call i32 @function_10009278(i32 %v3_100044fc, i32 9)
  ret i32 %v2_10004500
}

define i32 @function_10004514(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004514:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_10004524 = load i32, i32* @r27, align 4
  %v2_10004528 = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_10004528, i32* @r27, align 4
  %v2_10004530 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004534 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004544 = load i32, i32* @r25, align 4
  %v2_10004548 = ptrtoint i8* %stack_var_-8776 to i32
  %v0_1000454c = load i32, i32* @r30, align 4
  %v2_10004550 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004550, i32* @r30, align 4
  %v0_10004554 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_1000455c = load i32, i32* @r23, align 4
  %v0_10004564 = load i32, i32* @r28, align 4
  store i32 268453228, i32* @lr, align 4
  %v3_10004568 = call i32 @function_1000995c(i32 %v2_10004528, i32 0, i32 4096)
  store i32 268453244, i32* @lr, align 4
  %v3_10004578 = call i32 @function_1000995c(i32 %v2_10004530, i32 0, i32 4096)
  store i32 268453260, i32* @lr, align 4
  %v3_10004588 = call i32 @function_1000995c(i32 %v2_10004550, i32 0, i32 513)
  %v0_10004594 = load i32, i32* @r29, align 4
  %v0_10004598 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004598, i32* %stack_var_-8792, align 4
  %v3_100045a8 = trunc i32 %v0_10004594 to i8
  %v4_100045a8 = call i32 @function_10008e74(i8 %v3_100045a8, i32 16, i32 %v2_10004548)
  store i32 268453300, i32* @lr, align 4
  %v2_100045b0 = call i32 @function_10008998(i8* nonnull %stack_var_-8776)
  %v3_100045b4 = icmp eq i32 %v2_100045b0, 2
  br i1 %v3_100045b4, label %dec_label_pc_10004af4, label %dec_label_pc_100045bc

dec_label_pc_100045bc:                            ; preds = %dec_label_pc_10004514, %dec_label_pc_10004af4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100045c8.27 to i32), i32* @lr, align 4
  %v1_100045c4 = call i32 @function_10008338(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d0.28 to i32), i32* @lr, align 4
  %v1_100045cc = call i32 @function_10008338(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_100045d8.29 to i32), i32* @lr, align 4
  %v1_100045d4 = call i32 @function_10008338(i32 17)
  store i32 268453344, i32* @lr, align 4
  %v1_100045dc = call i32 @function_10008338(i32 19)
  %v3_100045e8 = call i32 @function_10008284(i32 19, i32* null)
  store i32 268453368, i32* @lr, align 4
  %v2_100045f4 = call i32 @function_100092c0(i32 %v3_100045e8, i32 0)
  %v3_100045f8 = icmp eq i32 %v2_100045f4, -1
  store i32 %v2_100045f4, i32* @r28, align 4
  br i1 %v3_100045f8, label %dec_label_pc_10004a40, label %dec_label_pc_10004604

dec_label_pc_10004604:                            ; preds = %dec_label_pc_100045bc
  %v2_10004604 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_10004604, i32* %r26.global-to-local, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_1000461488 = call i32 @function_10008bf8(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045f4)
  %v3_1000461890 = icmp eq i32 %v4_1000461488, 0
  br i1 %v3_1000461890, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_10004620:                            ; preds = %dec_label_pc_10004604, %dec_label_pc_10004608.backedge
  %v3_10004620 = load i8, i8* %stack_var_-8760, align 1
  %v3_10004624 = icmp eq i8 %v3_10004620, 0
  br i1 %v3_10004624, label %dec_label_pc_10004608.backedge, label %dec_label_pc_1000462c

dec_label_pc_10004608.backedge:                   ; preds = %dec_label_pc_10004640, %dec_label_pc_10004620, %dec_label_pc_100046b0, %dec_label_pc_10004748, %dec_label_pc_10004794
  %v0_10004610.pre = load i32, i32* @r28, align 4
  store i32 268453400, i32* @lr, align 4
  %v4_10004614 = call i32 @function_10008bf8(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_10004610.pre)
  %v3_10004618 = icmp eq i32 %v4_10004614, 0
  br i1 %v3_10004618, label %dec_label_pc_100047c0.loopexit, label %dec_label_pc_10004620

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004620
  %v3_1000462c = icmp eq i8 %v3_10004620, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_1000462c, label %dec_label_pc_10004660, label %dec_label_pc_1000463c

dec_label_pc_1000463c:                            ; preds = %dec_label_pc_1000462c
  %v1_10004644.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004640

dec_label_pc_10004640:                            ; preds = %dec_label_pc_10004654, %dec_label_pc_1000463c
  %v0_10004640 = phi i32 [ %v1_10004640, %dec_label_pc_10004654 ], [ 0, %dec_label_pc_1000463c ]
  %v1_10004640 = add i32 %v0_10004640, 1
  %v2_10004644 = add i32 %v1_10004640, %v1_10004644.pre
  %v3_10004644 = inttoptr i32 %v2_10004644 to i8*
  %v4_10004644 = load i8, i8* %v3_10004644, align 1
  %v3_10004648 = icmp eq i8 %v4_10004644, 0
  br i1 %v3_10004648, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004640
  %v3_1000464c = icmp eq i8 %v4_10004644, 58
  br i1 %v3_1000464c, label %dec_label_pc_10004658, label %dec_label_pc_10004640

dec_label_pc_10004658:                            ; preds = %dec_label_pc_10004654
  %v1_10004658 = add i32 %v0_10004640, 4
  store i32 %v1_10004658, i32* @r31, align 4
  %v1_1000465c = add i32 %v0_10004640, 3
  br label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_1000462c, %dec_label_pc_10004658
  %v1_100046b8 = phi i32 [ 2, %dec_label_pc_1000462c ], [ %v1_1000465c, %dec_label_pc_10004658 ]
  %v0_10004660 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004660 = add i32 %v0_10004660, %v1_100046b8
  %v1_10004668 = add i32 %v2_10004660, 32
  %v2_10004668 = inttoptr i32 %v1_10004668 to i8*
  %v3_10004668 = load i8, i8* %v2_10004668, align 1
  %v3_1000466c = icmp eq i8 %v3_10004668, 0
  br i1 %v3_1000466c, label %dec_label_pc_100046b0, label %dec_label_pc_10004674

dec_label_pc_10004674:                            ; preds = %dec_label_pc_10004660
  %v3_10004674 = icmp eq i8 %v3_10004668, 32
  %v1_10004678 = add i32 %v1_100046b8, 1
  store i32 %v1_10004678, i32* @r31, align 4
  br i1 %v3_10004674, label %dec_label_pc_100046b0, label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004674
  %v0_10004688 = load i32, i32* @r30, align 4
  %v2_10004688 = add i32 %v0_10004688, %v1_10004678
  br label %dec_label_pc_10004694

dec_label_pc_10004694:                            ; preds = %dec_label_pc_10004694, %dec_label_pc_10004680
  %v0_10004698 = phi i32 [ %v1_10004698, %dec_label_pc_10004694 ], [ %v1_100046b8, %dec_label_pc_10004680 ]
  %v0_1000469c = phi i32 [ %v1_1000469c, %dec_label_pc_10004694 ], [ %v2_10004688, %dec_label_pc_10004680 ]
  %v1_10004694 = inttoptr i32 %v0_1000469c to i8*
  %v2_10004694 = load i8, i8* %v1_10004694, align 1
  %v1_10004698 = add i32 %v0_10004698, 1
  %v1_1000469c = add i32 %v0_1000469c, 1
  %tmp60 = or i8 %v2_10004694, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_100046ac, label %dec_label_pc_10004694

dec_label_pc_100046ac:                            ; preds = %dec_label_pc_10004694
  %v1_100046ac = add i32 %v0_10004698, 2
  store i32 %v1_100046ac, i32* @r31, align 4
  br label %dec_label_pc_100046b0

dec_label_pc_100046b0:                            ; preds = %dec_label_pc_10004674, %dec_label_pc_10004660, %dec_label_pc_100046ac
  %v1_100046b0 = phi i32 [ %v1_100046b8, %dec_label_pc_10004674 ], [ %v1_100046b8, %dec_label_pc_10004660 ], [ %v1_10004698, %dec_label_pc_100046ac ]
  %v2_100046b0 = add i32 %v1_100046b0, %v0_10004660
  %v0_100046b8 = load i32, i32* @r30, align 4
  %v2_100046b8 = add i32 %v0_100046b8, %v1_100046b8
  store i32 %v2_100046b8, i32* @r29, align 4
  %v3_100046bc = add i32 %v2_100046b0, 32
  %v4_100046bc = inttoptr i32 %v3_100046bc to i8*
  store i8 0, i8* %v4_100046bc, align 1
  %v0_100046c0 = load i32, i32* @r29, align 4
  store i32 268453576, i32* @lr, align 4
  %v1_100046c4 = inttoptr i32 %v0_100046c0 to i8*
  %v2_100046c4 = call i32 @function_10008998(i8* %v1_100046c4)
  %v0_100046d0 = load i32, i32* @r29, align 4
  %v3_100046d4 = inttoptr i32 %v0_100046d0 to i8*
  %v4_100046d4 = call i32 @function_10008d48(i8* %v3_100046d4, i32 %v2_100046c4, i32 %v2_10004548)
  %v3_100046dc = icmp eq i32 %v4_100046d4, -1
  br i1 %v3_100046dc, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100046e8.preheader

dec_label_pc_100046e8.preheader:                  ; preds = %dec_label_pc_100046b0
  %v0_100046e8.pre = load i32, i32* @r31, align 4
  %v0_100046f0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046e8.outer

dec_label_pc_100046e8.outer:                      ; preds = %dec_label_pc_10004a90, %dec_label_pc_100046e8.preheader
  %v0_1000470428.ph = phi i32 [ %v1_10004a78, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  %v0_100046e8.ph = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a90 ], [ %v0_100046e8.pre, %dec_label_pc_100046e8.preheader ]
  %v0_10004748.ph = phi i32 [ 1, %dec_label_pc_10004a90 ], [ 0, %dec_label_pc_100046e8.preheader ]
  br label %dec_label_pc_100046e8

dec_label_pc_100046e8:                            ; preds = %dec_label_pc_100046e8.outer, %dec_label_pc_10004a80
  %v0_1000470428 = phi i32 [ %v1_10004a78, %dec_label_pc_10004a80 ], [ %v0_1000470428.ph, %dec_label_pc_100046e8.outer ]
  %v0_100046e8 = phi i32 [ %v1_1000479c76, %dec_label_pc_10004a80 ], [ %v0_100046e8.ph, %dec_label_pc_100046e8.outer ]
  %v1_100046e8 = add i32 %v0_100046e8, 1
  %v2_100046f0 = add i32 %v1_100046e8, %v0_100046f0.pre
  %v1_1000471c68 = inttoptr i32 %v2_100046f0 to i8*
  %v2_1000471c69 = load i8, i8* %v1_1000471c68, align 1
  store i32 %v1_100046e8, i32* @r31, align 4
  %v3_1000472471 = icmp eq i8 %v2_1000471c69, 0
  br i1 %v3_1000472471, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_100046f8:                            ; preds = %dec_label_pc_10004734
  %v3_1000472879 = icmp eq i8 %v3_1000472879.in, 9
  br i1 %v3_1000472879, label %dec_label_pc_10004738, label %dec_label_pc_10004704

dec_label_pc_10004704:                            ; preds = %dec_label_pc_100046f8
  %v3_100046f8 = icmp eq i32 %v0_100046f875, 1
  br i1 %v3_100046f8, label %dec_label_pc_10004a78, label %dec_label_pc_1000470c

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004704, %dec_label_pc_10004a78
  %v0_1000470c = phi i32 [ %v1_10004a78, %dec_label_pc_10004a78 ], [ %v0_1000473874, %dec_label_pc_10004704 ]
  %v2_1000470c = icmp sgt i32 %v0_1000470c, 6
  br i1 %v2_1000470c, label %dec_label_pc_10004748, label %dec_label_pc_10004718

dec_label_pc_10004718:                            ; preds = %dec_label_pc_10004738, %dec_label_pc_1000470c
  %v0_1000470427 = phi i32 [ %v0_1000473874, %dec_label_pc_10004738 ], [ %v0_1000470c, %dec_label_pc_1000470c ]
  %v0_100046f825 = phi i32 [ 1, %dec_label_pc_10004738 ], [ 0, %dec_label_pc_1000470c ]
  %v0_1000471c22 = add i32 %v0_1000474078, 1
  %v1_10004718 = add i32 %v1_1000479c76, 1
  %v1_1000471c = inttoptr i32 %v0_1000471c22 to i8*
  %v2_1000471c = load i8, i8* %v1_1000471c, align 1
  store i32 %v1_10004718, i32* @r31, align 4
  %v3_10004724 = icmp eq i8 %v2_1000471c, 0
  br i1 %v3_10004724, label %dec_label_pc_10004748, label %dec_label_pc_10004734

dec_label_pc_10004734:                            ; preds = %dec_label_pc_100046e8, %dec_label_pc_10004718
  %v3_1000472879.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v3_1000472c80.in = phi i8 [ %v2_1000471c, %dec_label_pc_10004718 ], [ %v2_1000471c69, %dec_label_pc_100046e8 ]
  %v0_1000474078 = phi i32 [ %v0_1000471c22, %dec_label_pc_10004718 ], [ %v2_100046f0, %dec_label_pc_100046e8 ]
  %v1_1000479c76 = phi i32 [ %v1_10004718, %dec_label_pc_10004718 ], [ %v1_100046e8, %dec_label_pc_100046e8 ]
  %v0_100046f875 = phi i32 [ %v0_100046f825, %dec_label_pc_10004718 ], [ 0, %dec_label_pc_100046e8 ]
  %v0_1000473874 = phi i32 [ %v0_1000470427, %dec_label_pc_10004718 ], [ %v0_1000470428, %dec_label_pc_100046e8 ]
  %v3_1000472c80 = icmp eq i8 %v3_1000472c80.in, 32
  br i1 %v3_1000472c80, label %dec_label_pc_10004738, label %dec_label_pc_100046f8

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004734, %dec_label_pc_100046f8
  %tmp62 = icmp slt i32 %v0_1000473874, 7
  br i1 %tmp62, label %dec_label_pc_10004718, label %dec_label_pc_10004748

dec_label_pc_10004748:                            ; preds = %dec_label_pc_10004718, %dec_label_pc_1000470c, %dec_label_pc_10004738, %dec_label_pc_100046e8
  %v1_1000479c.lcssa = phi i32 [ %v1_100046e8, %dec_label_pc_100046e8 ], [ %v1_1000479c76, %dec_label_pc_10004738 ], [ %v1_1000479c76, %dec_label_pc_1000470c ], [ %v1_10004718, %dec_label_pc_10004718 ]
  %v3_10004748 = icmp eq i32 %v0_10004748.ph, 0
  br i1 %v3_10004748, label %dec_label_pc_10004608.backedge, label %dec_label_pc_10004754

dec_label_pc_10004754:                            ; preds = %dec_label_pc_10004748
  %v0_10004754 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004754 = add i32 %v0_10004754, %v1_1000479c.lcssa
  %v1_10004758 = add i32 %v2_10004754, 32
  %v2_10004758 = inttoptr i32 %v1_10004758 to i8*
  %v3_10004758 = load i8, i8* %v2_10004758, align 1
  %v3_1000475c = icmp eq i8 %v3_10004758, 0
  br i1 %v3_1000475c, label %dec_label_pc_10004794, label %dec_label_pc_10004764

dec_label_pc_10004764:                            ; preds = %dec_label_pc_10004754
  %v3_10004764 = icmp eq i8 %v3_10004758, 32
  br i1 %v3_10004764, label %dec_label_pc_10004794, label %dec_label_pc_1000476c

dec_label_pc_1000476c:                            ; preds = %dec_label_pc_10004764
  %v1_1000476c = add i32 %v1_1000479c.lcssa, 1
  %v2_10004770 = add i32 %v1_1000476c, %v0_100046f0.pre
  br label %dec_label_pc_1000477c

dec_label_pc_1000477c:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_1000476c
  %v0_10004780 = phi i32 [ %v1_10004780, %dec_label_pc_1000477c ], [ %v1_1000479c.lcssa, %dec_label_pc_1000476c ]
  %v0_10004784 = phi i32 [ %v1_10004784, %dec_label_pc_1000477c ], [ %v2_10004770, %dec_label_pc_1000476c ]
  %v1_1000477c = inttoptr i32 %v0_10004784 to i8*
  %v2_1000477c = load i8, i8* %v1_1000477c, align 1
  %v1_10004780 = add i32 %v0_10004780, 1
  %v1_10004784 = add i32 %v0_10004784, 1
  %tmp63 = or i8 %v2_1000477c, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004794, label %dec_label_pc_1000477c

dec_label_pc_10004794:                            ; preds = %dec_label_pc_1000477c, %dec_label_pc_10004764, %dec_label_pc_10004754
  %v1_10004794 = phi i32 [ %v1_1000479c.lcssa, %dec_label_pc_10004764 ], [ %v1_1000479c.lcssa, %dec_label_pc_10004754 ], [ %v1_10004780, %dec_label_pc_1000477c ]
  %v2_10004794 = add i32 %v1_10004794, %v0_10004754
  %v2_1000479c = add i32 %v1_1000479c.lcssa, %v0_100046f0.pre
  store i32 %v2_1000479c, i32* @r31, align 4
  %v3_100047a0 = add i32 %v2_10004794, 32
  %v4_100047a0 = inttoptr i32 %v3_100047a0 to i8*
  store i8 0, i8* %v4_100047a0, align 1
  %v0_100047a4 = load i32, i32* @r31, align 4
  store i32 268453804, i32* @lr, align 4
  %v1_100047a8 = inttoptr i32 %v0_100047a4 to i8*
  %v2_100047a8 = call i32 @function_10008998(i8* %v1_100047a8)
  %v2_100047ac = icmp sgt i32 %v2_100047a8, 15
  br i1 %v2_100047ac, label %dec_label_pc_10004608.backedge, label %dec_label_pc_100047b4

dec_label_pc_100047b4:                            ; preds = %dec_label_pc_10004794
  %v0_100047b4 = load i32, i32* @r31, align 4
  store i32 %v2_10004604, i32* @r3, align 4
  %v2_100047bc = bitcast i32* %stack_var_-8792 to i8*
  %v3_100047bc = call i32 @function_100089c0(i8* %v2_100047bc, i32 %v0_100047b4)
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0.loopexit:                   ; preds = %dec_label_pc_10004608.backedge, %dec_label_pc_10004604
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_100047c0

dec_label_pc_100047c0:                            ; preds = %dec_label_pc_100047c0.loopexit, %dec_label_pc_100047b4
  %v1_100047cc.pre-phi = phi i8* [ %.pre, %dec_label_pc_100047c0.loopexit ], [ %v2_100047bc, %dec_label_pc_100047b4 ]
  store i32 268453832, i32* @lr, align 4
  %v0_100047c4 = call i32 @function_10009158()
  store i32 268453840, i32* @lr, align 4
  %v2_100047cc = call i32 @function_10008998(i8* %v1_100047cc.pre-phi)
  %v3_100047d0 = icmp eq i32 %v2_100047cc, 0
  br i1 %v3_100047d0, label %dec_label_pc_10004a98, label %dec_label_pc_100047d8

dec_label_pc_100047d8:                            ; preds = %dec_label_pc_100047c0
  %v3_100047e0 = call i32 @function_10008284(i32 15, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453868, i32* @lr, align 4
  %v1_100047e8 = call i32 @function_100096a4(i32 %v3_100047e0)
  store i32 %v1_100047e8, i32* @r23, align 4
  %v3_100047ec = icmp eq i32 %v1_100047e8, 0
  br i1 %v3_100047ec, label %dec_label_pc_10004a20, label %dec_label_pc_100047f4

dec_label_pc_100047f4:                            ; preds = %dec_label_pc_100047d8
  store i32 0, i32* @r28, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc7 = inttoptr i32 %v1_100047e8 to i32*
  %v2_100047fc8 = call i32 @function_100097b4(i32* %v1_100047fc7)
  %v3_1000480011 = icmp eq i32 %v2_100047fc8, 0
  br i1 %v3_1000480011, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader.lr.ph

dec_label_pc_10004808.preheader.lr.ph:            ; preds = %dec_label_pc_100047f4
  %v2_1000483c = bitcast i32* %stack_var_-8247 to i8*
  %v1_100049ac = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_10004808.preheader

dec_label_pc_100047f8.loopexit:                   ; preds = %dec_label_pc_10004810, %dec_label_pc_10004828, %dec_label_pc_10004890
  %v0_100047f8 = load i32, i32* @r23, align 4
  store i32 268453888, i32* @lr, align 4
  %v1_100047fc = inttoptr i32 %v0_100047f8 to i32*
  %v2_100047fc = call i32 @function_100097b4(i32* %v1_100047fc)
  %v3_10004800 = icmp eq i32 %v2_100047fc, 0
  br i1 %v3_10004800, label %dec_label_pc_10004a14, label %dec_label_pc_10004808.preheader

dec_label_pc_10004808.preheader:                  ; preds = %dec_label_pc_10004808.preheader.lr.ph, %dec_label_pc_100047f8.loopexit
  %v0_1000481035 = phi i32 [ %v2_100047fc8, %dec_label_pc_10004808.preheader.lr.ph ], [ %v2_100047fc, %dec_label_pc_100047f8.loopexit ]
  br label %dec_label_pc_10004808

dec_label_pc_10004808:                            ; preds = %dec_label_pc_10004808.preheader, %dec_label_pc_100049fc
  %v0_10004810 = phi i32 [ %v0_1000481035, %dec_label_pc_10004808.preheader ], [ %v2_10004a08, %dec_label_pc_100049fc ]
  %v0_10004808 = load i32, i32* @r28, align 4
  %v3_10004808 = icmp eq i32 %v0_10004808, 0
  br i1 %v3_10004808, label %dec_label_pc_10004810, label %dec_label_pc_10004a14

dec_label_pc_10004810:                            ; preds = %dec_label_pc_10004808
  %v1_10004810 = add i32 %v0_10004810, 11
  %v2_10004810 = inttoptr i32 %v1_10004810 to i8*
  %v3_10004810 = load i8, i8* %v2_10004810, align 1
  %v4_10004810 = zext i8 %v3_10004810 to i32
  store i32 %v1_10004810, i32* @r30, align 4
  %v1_10004818 = add nuw nsw i32 %v4_10004810, 208
  %v1_1000481c = urem i32 %v1_10004818, 256
  %v2_10004820 = icmp ugt i32 %v1_1000481c, 9
  br i1 %v2_10004820, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004828

dec_label_pc_10004828:                            ; preds = %dec_label_pc_10004810
  %v3_10004830 = call i32 @function_10008284(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_1000483c = call i32 @function_100089c0(i8* %v2_1000483c, i32 %v3_10004830)
  store i32 268453960, i32* @lr, align 4
  %v2_10004844 = call i32 @function_10008998(i8* %v2_1000483c)
  %v0_10004848 = load i32, i32* @r30, align 4
  %v0_1000484c = load i32, i32* @r27, align 4
  %v2_1000484c = add i32 %v0_1000484c, %v2_10004844
  store i32 %v2_1000484c, i32* @r3, align 4
  %v2_10004850 = inttoptr i32 %v2_1000484c to i8*
  %v3_10004850 = call i32 @function_100089c0(i8* %v2_10004850, i32 %v0_10004848)
  store i32 268453980, i32* @lr, align 4
  %v2_10004858 = call i32 @function_10008998(i8* %v2_1000483c)
  %v3_10004868 = call i32 @function_10008284(i32 16, i32* null)
  %v0_10004870 = load i32, i32* @r27, align 4
  %v2_10004870 = add i32 %v2_10004858, %v0_10004870
  store i32 %v2_10004870, i32* @r3, align 4
  %v2_10004874 = inttoptr i32 %v2_10004870 to i8*
  %v3_10004874 = call i32 @function_100089c0(i8* %v2_10004874, i32 %v3_10004868)
  store i32 4096, i32* @r5, align 4
  store i32 268454024, i32* @lr, align 4
  %v3_10004884 = call i32 @function_100093d8(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_10004888 = icmp eq i32 %v3_10004884, -1
  br i1 %v3_10004888, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_10004890

dec_label_pc_10004890:                            ; preds = %dec_label_pc_10004828
  %v3_10004898 = call i32 @function_10008284(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_100048a4 = call i32 @function_100089c0(i8* %v2_1000483c, i32 %v3_10004898)
  store i32 268454064, i32* @lr, align 4
  %v2_100048ac = call i32 @function_10008998(i8* %v2_1000483c)
  %v0_100048b0 = load i32, i32* @r30, align 4
  %v0_100048b4 = load i32, i32* @r27, align 4
  %v2_100048b4 = add i32 %v0_100048b4, %v2_100048ac
  store i32 %v2_100048b4, i32* @r3, align 4
  %v2_100048b8 = inttoptr i32 %v2_100048b4 to i8*
  %v3_100048b8 = call i32 @function_100089c0(i8* %v2_100048b8, i32 %v0_100048b0)
  store i32 268454084, i32* @lr, align 4
  %v2_100048c0 = call i32 @function_10008998(i8* %v2_1000483c)
  %v3_100048d0 = call i32 @function_10008284(i32 17, i32* null)
  %v0_100048d8 = load i32, i32* @r27, align 4
  %v2_100048d8 = add i32 %v2_100048c0, %v0_100048d8
  store i32 %v2_100048d8, i32* @r3, align 4
  %v2_100048dc = inttoptr i32 %v2_100048d8 to i8*
  %v3_100048dc = call i32 @function_100089c0(i8* %v2_100048dc, i32 %v3_100048d0)
  store i32 268454120, i32* @lr, align 4
  %v1_100048e4 = call i32 @function_100096a4(i32 %v2_10004528)
  store i32 %v1_100048e4, i32* @r25, align 4
  %v3_100048e8 = icmp eq i32 %v1_100048e4, 0
  br i1 %v3_100048e8, label %dec_label_pc_100047f8.loopexit, label %dec_label_pc_100048f0

dec_label_pc_100048f0.loopexit:                   ; preds = %dec_label_pc_10004910, %dec_label_pc_100049ac
  %v0_100048f0.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048f0

dec_label_pc_100048f0:                            ; preds = %dec_label_pc_10004890, %dec_label_pc_100048f0.loopexit
  %v0_100048f0 = phi i32 [ %v0_100048f0.pre, %dec_label_pc_100048f0.loopexit ], [ %v1_100048e4, %dec_label_pc_10004890 ]
  store i32 268454136, i32* @lr, align 4
  %v1_100048f4 = inttoptr i32 %v0_100048f0 to i32*
  %v2_100048f4 = call i32 @function_100097b4(i32* %v1_100048f4)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048f4, i32* @r31, align 4
  %v3_100048fc = icmp eq i32 %v2_100048f4, 0
  %v0_10004900 = load i32, i32* @r28, align 4
  store i32 %v2_10004530, i32* @r3, align 4
  %v3_10004900.not = icmp ne i32 %v0_10004900, 0
  %brmerge = or i1 %v3_100048fc, %v3_10004900.not
  br i1 %brmerge, label %dec_label_pc_100049fc, label %dec_label_pc_10004910

dec_label_pc_10004910:                            ; preds = %dec_label_pc_100048f0
  store i32 268454164, i32* @lr, align 4
  %v0_10004910 = call i32 @function_10008a40()
  %v3_1000491c = call i32 @function_10008284(i32 15, i32* null)
  store i32 %v2_10004528, i32* @r3, align 4
  %v3_10004928 = call i32 @function_100089c0(i8* %v2_1000483c, i32 %v3_1000491c)
  store i32 268454196, i32* @lr, align 4
  %v2_10004930 = call i32 @function_10008998(i8* %v2_1000483c)
  %v0_10004934 = load i32, i32* @r30, align 4
  %v0_10004938 = load i32, i32* @r27, align 4
  %v2_10004938 = add i32 %v0_10004938, %v2_10004930
  store i32 %v2_10004938, i32* @r3, align 4
  %v2_1000493c = inttoptr i32 %v2_10004938 to i8*
  %v3_1000493c = call i32 @function_100089c0(i8* %v2_1000493c, i32 %v0_10004934)
  store i32 268454216, i32* @lr, align 4
  %v2_10004944 = call i32 @function_10008998(i8* %v2_1000483c)
  %v3_10004954 = call i32 @function_10008284(i32 17, i32* null)
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v2_10004944, %v0_1000495c
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_100089c0(i8* %v2_10004960, i32 %v3_10004954)
  store i32 268454252, i32* @lr, align 4
  %v2_10004968 = call i32 @function_10008998(i8* %v2_1000483c)
  %v0_10004974 = load i32, i32* @r27, align 4
  %v2_10004974 = add i32 %v0_10004974, %v2_10004968
  store i32 %v2_10004974, i32* @r3, align 4
  %v2_10004978 = inttoptr i32 %v2_10004974 to i8*
  %v3_10004978 = call i32 @function_100089c0(i8* %v2_10004978, i32 ptrtoint (i32* @global_var_1000bb88.31 to i32))
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_10008998(i8* %v2_1000483c)
  %v0_10004984 = load i32, i32* @r31, align 4
  %v1_10004984 = add i32 %v0_10004984, 11
  %v0_10004988 = load i32, i32* @r27, align 4
  %v2_10004988 = add i32 %v0_10004988, %v2_10004980
  store i32 %v2_10004988, i32* @r3, align 4
  %v2_1000498c = inttoptr i32 %v2_10004988 to i8*
  %v3_1000498c = call i32 @function_100089c0(i8* %v2_1000498c, i32 %v1_10004984)
  store i32 268454304, i32* @lr, align 4
  %v3_1000499c = call i32 @function_100093d8(i32 %v2_10004528, i32 %v2_10004530, i32 4096)
  %v3_100049a0 = icmp eq i32 %v3_1000499c, -1
  br i1 %v3_100049a0, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049ac

dec_label_pc_100049ac:                            ; preds = %dec_label_pc_10004910
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_10008998(i8* %v1_100049ac)
  %v4_100049bc = call i32 @function_10008d48(i8* %v1_100049ac, i32 %v2_100049ac, i32 %v2_10004604)
  %v3_100049c4 = icmp eq i32 %v4_100049bc, -1
  %v0_100049c8 = load i32, i32* @r30, align 4
  store i32 %v0_100049c8, i32* @r3, align 4
  br i1 %v3_100049c4, label %dec_label_pc_100048f0.loopexit, label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049ac
  store i32 268454356, i32* @lr, align 4
  %v2_100049d0 = call i32 @function_10008ac0(i32 %v0_100049c8, i32 10)
  store i32 268454364, i32* @lr, align 4
  %v2_100049d8 = call i32 @function_10009278(i32 %v2_100049d0, i32 9)
  %v0_100049dc = load i32, i32* @r25, align 4
  store i32 268454372, i32* @lr, align 4
  %v1_100049e0 = inttoptr i32 %v0_100049dc to i32*
  %v2_100049e0 = call i32 @function_100097b4(i32* %v1_100049e0)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100048f0, %dec_label_pc_100049d0
  %v0_100049fc = load i32, i32* @r25, align 4
  store i32 268454404, i32* @lr, align 4
  %v1_10004a00 = inttoptr i32 %v0_100049fc to i32*
  %v2_10004a00 = call i32 @function_10009600(i32* %v1_10004a00)
  %v0_10004a04 = load i32, i32* @r23, align 4
  store i32 268454412, i32* @lr, align 4
  %v1_10004a08 = inttoptr i32 %v0_10004a04 to i32*
  %v2_10004a08 = call i32 @function_100097b4(i32* %v1_10004a08)
  %v3_10004a0c = icmp eq i32 %v2_10004a08, 0
  br i1 %v3_10004a0c, label %dec_label_pc_10004a14, label %dec_label_pc_10004808

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_100047f8.loopexit, %dec_label_pc_100049fc, %dec_label_pc_10004808, %dec_label_pc_100047f4
  %v0_10004a14 = load i32, i32* @r23, align 4
  %v0_10004a18 = load i32, i32* @r28, align 4
  %v1_10004a18 = urem i32 %v0_10004a18, 256
  store i32 %v1_10004a18, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a20.32 to i32), i32* @lr, align 4
  %v1_10004a1c = inttoptr i32 %v0_10004a14 to i32*
  %v2_10004a1c = call i32 @function_10009600(i32* %v1_10004a1c)
  br label %dec_label_pc_10004a20

dec_label_pc_10004a20:                            ; preds = %dec_label_pc_100047d8, %dec_label_pc_10004a14
  store i32 ptrtoint ([3 x i8]* @global_var_10004a28.33 to i32), i32* @lr, align 4
  %v1_10004a24 = call i32 @function_1000a9a0(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a30.34 to i32), i32* @lr, align 4
  %v1_10004a2c = call i32 @function_100082ac(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a38.35 to i32), i32* @lr, align 4
  %v1_10004a34 = call i32 @function_100082ac(i32 16)
  store i32 268454464, i32* @lr, align 4
  %v1_10004a3c = call i32 @function_100082ac(i32 17)
  br label %dec_label_pc_10004a40

dec_label_pc_10004a40:                            ; preds = %dec_label_pc_100045bc, %dec_label_pc_10004a20
  %v0_10004a44 = load i32, i32* @r31, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004a44

dec_label_pc_10004a78:                            ; preds = %dec_label_pc_10004704
  %v3_10004704 = icmp eq i32 %v0_1000473874, 0
  %v1_10004a78 = add i32 %v0_1000473874, 1
  br i1 %v3_10004704, label %dec_label_pc_10004a80, label %dec_label_pc_1000470c

dec_label_pc_10004a80:                            ; preds = %dec_label_pc_10004a78
  %v0_10004a80 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a80 = add i32 %v0_10004a80, %v1_1000479c76
  %v1_10004a84 = add i32 %v2_10004a80, 33
  %v2_10004a84 = inttoptr i32 %v1_10004a84 to i8*
  %v3_10004a84 = load i8, i8* %v2_10004a84, align 1
  %v3_10004a88 = icmp eq i8 %v3_10004a84, 65
  br i1 %v3_10004a88, label %dec_label_pc_10004a90, label %dec_label_pc_100046e8

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a80
  br label %dec_label_pc_100046e8.outer

dec_label_pc_10004a98:                            ; preds = %dec_label_pc_100047c0
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004aa4.36 to i32), i32* @lr, align 4
  %v1_10004aa0 = call i32 @function_100082ac(i32 15)
  store i32 ptrtoint ([3 x i8]* @global_var_10004aac.37 to i32), i32* @lr, align 4
  %v1_10004aa8 = call i32 @function_100082ac(i32 16)
  store i32 ptrtoint ([3 x i8]* @global_var_10004ab4.38 to i32), i32* @lr, align 4
  %v1_10004ab0 = call i32 @function_100082ac(i32 17)
  store i32 268454588, i32* @lr, align 4
  %v1_10004ab8 = call i32 @function_100082ac(i32 19)
  %v0_10004ac0 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000455c, i32* @r23, align 4
  store i32 %v0_10004544, i32* @r25, align 4
  store i32 %v0_10004524, i32* @r27, align 4
  store i32 %v0_10004564, i32* @r28, align 4
  store i32 %v0_10004534, i32* @r29, align 4
  store i32 %v0_1000454c, i32* @r30, align 4
  store i32 %v0_10004554, i32* @r31, align 4
  ret i32 %v0_10004ac0

dec_label_pc_10004af4:                            ; preds = %dec_label_pc_10004514
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_100045bc

; uselistorder directives
  uselistorder i32 %v2_10004a08, { 1, 0 }
  uselistorder i32 %v1_1000479c.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000473874, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000479c76, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_1000471c22, { 1, 0 }
  uselistorder i32 %v1_100046b8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_10004604, { 1, 0, 2 }
  uselistorder i32 %v2_10004548, { 1, 0 }
  uselistorder i32 %v2_10004528, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10008ac0, { 1, 0 }
  uselistorder i32 268453888, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10008bf8, { 1, 0 }
  uselistorder i32 268453400, { 1, 0 }
  uselistorder label %dec_label_pc_10004a40, { 1, 0 }
  uselistorder label %dec_label_pc_10004a20, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049fc, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0, { 1, 0 }
  uselistorder label %dec_label_pc_100048f0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10004808, { 1, 0 }
  uselistorder label %dec_label_pc_10004808.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047f8.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004748, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004734, { 1, 0 }
  uselistorder label %dec_label_pc_1000470c, { 1, 0 }
  uselistorder label %dec_label_pc_100046e8, { 1, 0 }
  uselistorder label %dec_label_pc_100046b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_10004608.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004620, { 1, 0 }
  uselistorder label %dec_label_pc_100045bc, { 1, 0 }
}

define i32 @function_10004b18(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004b18:
  %r11.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8436 = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %stack_var_-8456 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8452 = alloca i32, align 4
  %stack_var_-4176 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8336 = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-8272 = alloca i32, align 4
  %stack_var_-8432 = alloca i32, align 4
  %v0_10004b24 = load i32, i32* @r30, align 4
  %v0_10004b44 = load i32, i32* @r22, align 4
  %v0_10004b58 = load i32, i32* @r27, align 4
  %v0_10004b5c = load i32, i32* @r28, align 4
  %v0_10004b60 = load i32, i32* @r29, align 4
  %v0_10004b64 = load i32, i32* @r31, align 4
  store i32 268454764, i32* @lr, align 4
  %v0_10004b68 = call i32 @function_10009528()
  store i32 %v0_10004b68, i32* @r30, align 4
  store i32 268454772, i32* @lr, align 4
  %v0_10004b70 = call i32 @function_100091a0()
  store i32 %v0_10004b70, i32* @global_var_1001c2dc.26, align 4
  %tmp95 = icmp slt i32 %v0_10004b70, 1
  br i1 %tmp95, label %dec_label_pc_10004bd4, label %dec_label_pc_10004b84

dec_label_pc_10004b84:                            ; preds = %dec_label_pc_10004e98, %dec_label_pc_10004d90, %dec_label_pc_10004bd4, %dec_label_pc_10004b18
  %v0_10004bd0 = phi i32 [ -1, %dec_label_pc_10004d90 ], [ -1, %dec_label_pc_10004bd4 ], [ %v0_10004b70, %dec_label_pc_10004b18 ], [ 0, %dec_label_pc_10004e98 ]
  store i32 %v0_10004b44, i32* @r22, align 4
  store i32 %v0_10004b58, i32* @r27, align 4
  store i32 %v0_10004b5c, i32* @r28, align 4
  store i32 %v0_10004b60, i32* @r29, align 4
  store i32 %v0_10004b24, i32* @r30, align 4
  store i32 %v0_10004b64, i32* @r31, align 4
  ret i32 %v0_10004bd0

dec_label_pc_10004bd4:                            ; preds = %dec_label_pc_10004b18
  %v3_10004bd4 = icmp eq i32 %v0_10004b70, -1
  br i1 %v3_10004bd4, label %dec_label_pc_10004b84, label %dec_label_pc_10004bdc

dec_label_pc_10004bdc:                            ; preds = %dec_label_pc_10004bd4
  store i32 0, i32* @r28, align 4
  store i32 2, i32* %stack_var_-8432, align 4
  store i32 ptrtoint (i32* @global_var_10004bf8.39 to i32), i32* @lr, align 4
  %v1_10004bf4 = call i32 @function_10004514(i32 48101)
  store i32 268454928, i32* @lr, align 4
  %v3_10004c0c = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  %v3_10004c10 = icmp eq i32 %v3_10004c0c, -1
  store i32 %v3_10004c0c, i32* @r31, align 4
  br i1 %v3_10004c10, label %dec_label_pc_10004c34, label %dec_label_pc_10004c1c

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004bdc
  %v2_10004c1c = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268454952, i32* @lr, align 4
  %v3_10004c24 = call i32 @function_10009c74(i32 %v2_10004c1c, i32 16, i32 16)
  %v0_10004c28 = load i32, i32* @r31, align 4
  store i32 268454964, i32* @lr, align 4
  %v2_10004c30 = call i32 @function_10009d4c(i32 %v0_10004c28, i32 1)
  br label %dec_label_pc_10004c34

dec_label_pc_10004c34:                            ; preds = %dec_label_pc_10004bdc, %dec_label_pc_10004c1c
  store i32 ptrtoint (i32* @global_var_10004c3c.40 to i32), i32* @lr, align 4
  %v1_10004c38 = call i32 @function_10004514(i32 1991)
  store i32 268454996, i32* @lr, align 4
  %v3_10004c50 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  %v3_10004c54 = icmp eq i32 %v3_10004c50, -1
  store i32 %v3_10004c50, i32* @r31, align 4
  br i1 %v3_10004c54, label %dec_label_pc_10004c78, label %dec_label_pc_10004c60

dec_label_pc_10004c60:                            ; preds = %dec_label_pc_10004c34
  %v2_10004c60 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455020, i32* @lr, align 4
  %v3_10004c68 = call i32 @function_10009c74(i32 %v2_10004c60, i32 16, i32 16)
  %v0_10004c6c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004c78.41 to i32), i32* @lr, align 4
  %v2_10004c74 = call i32 @function_10009d4c(i32 %v0_10004c6c, i32 1)
  br label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c34, %dec_label_pc_10004c60
  store i32 ptrtoint (i32* @global_var_10004c84.42 to i32), i32* @lr, align 4
  %v1_10004c80 = call i32 @function_10004514(i32 52869)
  store i32 268455068, i32* @lr, align 4
  %v3_10004c98 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  %v3_10004c9c = icmp eq i32 %v3_10004c98, -1
  store i32 %v3_10004c98, i32* @r31, align 4
  br i1 %v3_10004c9c, label %dec_label_pc_10004cc0, label %dec_label_pc_10004ca8

dec_label_pc_10004ca8:                            ; preds = %dec_label_pc_10004c78
  %v2_10004ca8 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455092, i32* @lr, align 4
  %v3_10004cb0 = call i32 @function_10009c74(i32 %v2_10004ca8, i32 16, i32 16)
  %v0_10004cb4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004cc0.43 to i32), i32* @lr, align 4
  %v2_10004cbc = call i32 @function_10009d4c(i32 %v0_10004cb4, i32 1)
  br label %dec_label_pc_10004cc0

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004c78, %dec_label_pc_10004ca8
  store i32 ptrtoint (i32* @global_var_10004ccc.44 to i32), i32* @lr, align 4
  %v1_10004cc8 = call i32 @function_10004514(i32 53413)
  store i32 268455140, i32* @lr, align 4
  %v3_10004ce0 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  %v3_10004ce4 = icmp eq i32 %v3_10004ce0, -1
  store i32 %v3_10004ce0, i32* @r31, align 4
  br i1 %v3_10004ce4, label %dec_label_pc_10004d08, label %dec_label_pc_10004cf0

dec_label_pc_10004cf0:                            ; preds = %dec_label_pc_10004cc0
  %v2_10004cf0 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455164, i32* @lr, align 4
  %v3_10004cf8 = call i32 @function_10009c74(i32 %v2_10004cf0, i32 16, i32 16)
  %v0_10004cfc = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d08.45 to i32), i32* @lr, align 4
  %v2_10004d04 = call i32 @function_10009d4c(i32 %v0_10004cfc, i32 1)
  br label %dec_label_pc_10004d08

dec_label_pc_10004d08:                            ; preds = %dec_label_pc_10004cc0, %dec_label_pc_10004cf0
  store i32 ptrtoint (i32* @global_var_10004d10.46 to i32), i32* @lr, align 4
  %v1_10004d0c = call i32 @function_10004514(i32 22)
  store i32 268455208, i32* @lr, align 4
  %v3_10004d24 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  %v3_10004d28 = icmp eq i32 %v3_10004d24, -1
  store i32 %v3_10004d24, i32* @r31, align 4
  br i1 %v3_10004d28, label %dec_label_pc_10004d4c, label %dec_label_pc_10004d34

dec_label_pc_10004d34:                            ; preds = %dec_label_pc_10004d08
  %v2_10004d34 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455232, i32* @lr, align 4
  %v3_10004d3c = call i32 @function_10009c74(i32 %v2_10004d34, i32 16, i32 16)
  %v0_10004d40 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d4c.47 to i32), i32* @lr, align 4
  %v2_10004d48 = call i32 @function_10009d4c(i32 %v0_10004d40, i32 1)
  br label %dec_label_pc_10004d4c

dec_label_pc_10004d4c:                            ; preds = %dec_label_pc_10004d08, %dec_label_pc_10004d34
  store i32 ptrtoint (i32* @global_var_10004d54.48 to i32), i32* @lr, align 4
  %v1_10004d50 = call i32 @function_10004514(i32 23)
  store i32 268455276, i32* @lr, align 4
  %v3_10004d68 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  %v3_10004d6c = icmp eq i32 %v3_10004d68, -1
  store i32 %v3_10004d68, i32* @r31, align 4
  br i1 %v3_10004d6c, label %dec_label_pc_10004d90, label %dec_label_pc_10004d78

dec_label_pc_10004d78:                            ; preds = %dec_label_pc_10004d4c
  %v2_10004d78 = ptrtoint i32* %stack_var_-8432 to i32
  store i32 268455300, i32* @lr, align 4
  %v3_10004d80 = call i32 @function_10009c74(i32 %v2_10004d78, i32 16, i32 16)
  %v0_10004d84 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004d90.49 to i32), i32* @lr, align 4
  %v2_10004d8c = call i32 @function_10009d4c(i32 %v0_10004d84, i32 1)
  br label %dec_label_pc_10004d90

dec_label_pc_10004d90:                            ; preds = %dec_label_pc_10004d4c, %dec_label_pc_10004d78
  store i32 268455324, i32* @lr, align 4
  %v1_10004d98 = call i32 @function_1000a9a0(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 268455332, i32* @lr, align 4
  %v0_10004da0 = call i32 @function_1000a0ac()
  store i32 %v0_10004da0, i32* %r11.global-to-local, align 4
  %v0_10004db0 = load i32, i32* @r28, align 4
  %v1_10004db0 = trunc i32 %v0_10004db0 to i8
  %v3_10004db0 = inttoptr i32 %v0_10004da0 to i8*
  store i8 %v1_10004db0, i8* %v3_10004db0, align 1
  %v2_10004db4 = ptrtoint i32* %stack_var_-8272 to i32
  store i32 %v2_10004db4, i32* %r21.global-to-local, align 4
  %v0_10004db8 = load i32, i32* @r28, align 4
  store i32 %v0_10004db8, i32* @global_var_1001c2d4.50, align 4
  %v0_10004dbc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004dbc, i32* @global_var_1001c2d8.51, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004dc4.52 to i32), i32* @lr, align 4
  %v1_10004dc0 = call i32 @function_10008338(i32 15)
  store i32 268455372, i32* @lr, align 4
  %v1_10004dc8 = call i32 @function_10008338(i32 16)
  %v3_10004dd4 = call i32 @function_10008284(i32 15, i32* null)
  store i32 %v2_10004db4, i32* @r3, align 4
  %v2_10004de0 = bitcast i32* %stack_var_-8272 to i8*
  %v3_10004de0 = call i32 @function_100089c0(i8* %v2_10004de0, i32 %v3_10004dd4)
  %v0_10004de4 = load i32, i32* %r21.global-to-local, align 4
  %v2_10004de4 = add i32 %v0_10004de4, %v3_10004de0
  store i32 %v2_10004de4, i32* %r29.global-to-local, align 4
  store i32 268455404, i32* @lr, align 4
  %v0_10004de8 = call i32 @function_100091e8()
  %v2_10004dec = ptrtoint i32* %stack_var_-8416 to i32
  %v3_10004df4 = trunc i32 %v0_10004de8 to i8
  %v4_10004df4 = call i32 @function_10008e74(i8 %v3_10004df4, i32 10, i32 %v2_10004dec)
  store i32 %v2_10004de4, i32* @r3, align 4
  %v2_10004e00 = inttoptr i32 %v2_10004de4 to i8*
  %v3_10004e00 = call i32 @function_100089c0(i8* %v2_10004e00, i32 %v4_10004df4)
  %v0_10004e08 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004e08 = add i32 %v0_10004e08, %v3_10004e00
  store i32 %v2_10004e08, i32* %r29.global-to-local, align 4
  %v3_10004e10 = call i32 @function_10008284(i32 16, i32* null)
  store i32 %v2_10004e08, i32* @r3, align 4
  %v2_10004e1c = inttoptr i32 %v2_10004e08 to i8*
  %v3_10004e1c = call i32 @function_100089c0(i8* %v2_10004e1c, i32 %v3_10004e10)
  store i32 %v3_10004e1c, i32* @r31, align 4
  store i32 268455476, i32* @lr, align 4
  %v2_10004e30 = call i32 @function_100092c0(i32 %v2_10004db4, i32 0)
  %v3_10004e34 = icmp eq i32 %v2_10004e30, -1
  br i1 %v3_10004e34, label %dec_label_pc_10004b84, label %dec_label_pc_10004e3c

dec_label_pc_10004e3c:                            ; preds = %dec_label_pc_10004d90
  store i32 ptrtoint ([3 x i8]* @global_var_10004e40.53 to i32), i32* @lr, align 4
  %v0_10004e3c = call i32 @function_10009158()
  store i32 ptrtoint ([3 x i8]* @global_var_10004e48.54 to i32), i32* @lr, align 4
  %v1_10004e44 = call i32 @function_100082ac(i32 15)
  store i32 268455504, i32* @lr, align 4
  %v1_10004e4c = call i32 @function_100082ac(i32 16)
  %v3_10004e50 = load i32, i32* @global_var_1001c2d8.51, align 4
  store i32 268455520, i32* @lr, align 4
  %v3_10004e5c = call i32 @function_100093d8(i32 %v2_10004db4, i32 %v3_10004e50, i32 4095)
  %v3_10004e60 = icmp eq i32 %v3_10004e5c, -1
  br i1 %v3_10004e60, label %dec_label_pc_10004e70, label %dec_label_pc_10004e68

dec_label_pc_10004e68:                            ; preds = %dec_label_pc_10004e3c
  %v3_10004e68 = load i32, i32* @global_var_1001c2d8.51, align 4
  %v0_10004e6c = load i32, i32* @r28, align 4
  %v3_10004e6c = trunc i32 %v0_10004e6c to i8
  %v4_10004e6c = add i32 %v3_10004e68, %v3_10004e5c
  %v5_10004e6c = inttoptr i32 %v4_10004e6c to i8*
  store i8 %v3_10004e6c, i8* %v5_10004e6c, align 1
  br label %dec_label_pc_10004e70

dec_label_pc_10004e70:                            ; preds = %dec_label_pc_10004e3c, %dec_label_pc_10004e68
  %v0_10004e70 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004e70 = load i32, i32* @r31, align 4
  %v2_10004e70 = add i32 %v1_10004e70, %v0_10004e70
  store i32 %v2_10004db4, i32* @r3, align 4
  %v0_10004e78 = load i32, i32* %r21.global-to-local, align 4
  %v2_10004e78 = sub i32 %v2_10004e70, %v0_10004e78
  store i32 %v2_10004e78, i32* @r4, align 4
  %v0_10004e7c = load i32, i32* @r30, align 4
  store i32 %v0_10004e7c, i32* %r29.global-to-local, align 4
  store i32 268455556, i32* @lr, align 4
  %v0_10004e80 = call i32 @function_10008a40()
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r22, align 4
  %v2_10004e8c = ptrtoint i32* %stack_var_-8336 to i32
  store i32 %v2_10004e8c, i32* %r20.global-to-local, align 4
  %v2_10004e90 = ptrtoint i32* %stack_var_-8400 to i32
  store i32 %v2_10004e90, i32* %r19.global-to-local, align 4
  %v2_10004e94 = ptrtoint i32* %stack_var_-4176 to i32
  %v2_10004f64 = bitcast i32* %stack_var_-8336 to i8*
  %v2_10004fa8 = bitcast i32* %stack_var_-8400 to i8*
  br label %dec_label_pc_10004e98

dec_label_pc_10004e98:                            ; preds = %dec_label_pc_10004f28, %dec_label_pc_10004e70
  store i32 268455584, i32* @lr, align 4
  %v1_10004e9c = call i32 @function_10008338(i32 15)
  %v3_10004ea8 = call i32 @function_10008284(i32 15, i32* null)
  store i32 268455600, i32* @lr, align 4
  %v1_10004eac = call i32 @function_100096a4(i32 %v3_10004ea8)
  store i32 %v1_10004eac, i32* @r27, align 4
  %v3_10004eb0 = icmp eq i32 %v1_10004eac, 0
  br i1 %v3_10004eb0, label %dec_label_pc_10004b84, label %dec_label_pc_10004eb8

dec_label_pc_10004eb8:                            ; preds = %dec_label_pc_10004e98
  store i32 268455616, i32* @lr, align 4
  %v1_10004ebc = call i32 @function_100082ac(i32 15)
  %v0_10004ec015 = load i32, i32* @r27, align 4
  store i32 268455624, i32* @lr, align 4
  %v1_10004ec416 = inttoptr i32 %v0_10004ec015 to i32*
  %v2_10004ec417 = call i32 @function_100097b4(i32* %v1_10004ec416)
  %v3_10004ec820 = icmp eq i32 %v2_10004ec417, 0
  br i1 %v3_10004ec820, label %dec_label_pc_10004f28, label %dec_label_pc_10004ed0.preheader

dec_label_pc_10004ed0.preheader:                  ; preds = %dec_label_pc_10004eb8, %dec_label_pc_10004ec0.backedge
  %v0_10004ed023 = phi i32 [ %v2_10004ec4, %dec_label_pc_10004ec0.backedge ], [ %v2_10004ec417, %dec_label_pc_10004eb8 ]
  br label %dec_label_pc_10004ed0

dec_label_pc_10004ed0:                            ; preds = %dec_label_pc_10004ed0.preheader, %dec_label_pc_10004f14
  %v0_10004ee4 = phi i32 [ %v0_10004ed023, %dec_label_pc_10004ed0.preheader ], [ %v2_10004f1c, %dec_label_pc_10004f14 ]
  %v1_10004ed0 = add i32 %v0_10004ee4, 11
  %v2_10004ed0 = inttoptr i32 %v1_10004ed0 to i8*
  %v3_10004ed0 = load i8, i8* %v2_10004ed0, align 1
  %v4_10004ed0 = zext i8 %v3_10004ed0 to i32
  %v1_10004ed4 = add nuw nsw i32 %v4_10004ed0, 208
  %v1_10004ed8 = urem i32 %v1_10004ed4, 256
  %v2_10004edc = icmp ugt i32 %v1_10004ed8, 9
  br i1 %v2_10004edc, label %dec_label_pc_10004ec0.backedge, label %dec_label_pc_10004ee4

dec_label_pc_10004ee4:                            ; preds = %dec_label_pc_10004ed0
  %v0_10004ee8 = load i32, i32* @r22, align 4
  %v1_10004ee8 = add i32 %v0_10004ee8, 1
  store i32 %v1_10004ee8, i32* @r22, align 4
  store i32 268455668, i32* @lr, align 4
  %v3_10004ef0 = call i32 @function_1000a754(i8* %v2_10004ed0, i32 %v1_10004ed8)
  %v0_10004ef4 = load i32, i32* @r28, align 4
  %v2_10004ef4 = icmp slt i32 %v0_10004ef4, %v3_10004ef0
  store i32 %v3_10004ef0, i32* %r30.global-to-local, align 4
  br i1 %v2_10004ef4, label %dec_label_pc_10004f34, label %dec_label_pc_10004f00

dec_label_pc_10004f00:                            ; preds = %dec_label_pc_10004ee4
  store i32 268455688, i32* @lr, align 4
  %v0_10004f04 = call i32 @function_10009528()
  %v0_10004f08 = load i32, i32* @r29, align 4
  %v2_10004f08 = sub i32 %v0_10004f04, %v0_10004f08
  %tmp96 = icmp slt i32 %v2_10004f08, 601
  br i1 %tmp96, label %dec_label_pc_10005090, label %dec_label_pc_10004f14

dec_label_pc_10004f14:                            ; preds = %dec_label_pc_10004f00
  %v0_10004f14 = load i32, i32* @r27, align 4
  store i32 400, i32* %r28.global-to-local, align 4
  store i32 268455712, i32* @lr, align 4
  %v1_10004f1c = inttoptr i32 %v0_10004f14 to i32*
  %v2_10004f1c = call i32 @function_100097b4(i32* %v1_10004f1c)
  %v3_10004f20 = icmp eq i32 %v2_10004f1c, 0
  br i1 %v3_10004f20, label %dec_label_pc_10004f28, label %dec_label_pc_10004ed0

dec_label_pc_10004f28:                            ; preds = %dec_label_pc_10004ec0.backedge, %dec_label_pc_10004f14, %dec_label_pc_10004eb8
  %v0_10004f28 = load i32, i32* @r27, align 4
  store i32 268455728, i32* @lr, align 4
  %v1_10004f2c = inttoptr i32 %v0_10004f28 to i32*
  %v2_10004f2c = call i32 @function_10009600(i32* %v1_10004f2c)
  br label %dec_label_pc_10004e98

dec_label_pc_10004f34:                            ; preds = %dec_label_pc_10004ee4
  store i32 268455740, i32* @lr, align 4
  %v0_10004f38 = call i32 @function_10009528()
  store i32 %v0_10004f38, i32* %r18.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004f48.56 to i32), i32* @lr, align 4
  %v1_10004f44 = call i32 @function_10008338(i32 15)
  store i32 268455760, i32* @lr, align 4
  %v1_10004f4c = call i32 @function_10008338(i32 16)
  %v3_10004f58 = call i32 @function_10008284(i32 15, i32* null)
  store i32 %v2_10004e8c, i32* @r3, align 4
  %v3_10004f64 = call i32 @function_100089c0(i8* %v2_10004f64, i32 %v3_10004f58)
  %v0_10004f68 = load i32, i32* @r31, align 4
  %v0_10004f6c = load i32, i32* %r20.global-to-local, align 4
  %v2_10004f6c = add i32 %v0_10004f6c, %v3_10004f64
  store i32 %v2_10004f6c, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f6c, i32* @r3, align 4
  %v2_10004f74 = inttoptr i32 %v2_10004f6c to i8*
  %v3_10004f74 = call i32 @function_100089c0(i8* %v2_10004f74, i32 %v0_10004f68)
  store i32 %v3_10004f74, i32* %r29.global-to-local, align 4
  %v3_10004f84 = call i32 @function_10008284(i32 16, i32* null)
  %v2_10004f8c = add i32 %v3_10004f74, %v2_10004f6c
  store i32 %v2_10004f8c, i32* @r3, align 4
  %v2_10004f90 = inttoptr i32 %v2_10004f8c to i8*
  %v3_10004f90 = call i32 @function_100089c0(i8* %v2_10004f90, i32 %v3_10004f84)
  %v3_10004f9c = call i32 @function_10008284(i32 15, i32* null)
  store i32 %v2_10004e90, i32* @r3, align 4
  %v3_10004fa8 = call i32 @function_100089c0(i8* %v2_10004fa8, i32 %v3_10004f9c)
  %v0_10004fac = load i32, i32* @r31, align 4
  %v0_10004fb0 = load i32, i32* %r19.global-to-local, align 4
  %v2_10004fb0 = add i32 %v0_10004fb0, %v3_10004fa8
  store i32 %v2_10004fb0, i32* %r28.global-to-local, align 4
  store i32 %v2_10004fb0, i32* @r3, align 4
  %v2_10004fb8 = inttoptr i32 %v2_10004fb0 to i8*
  %v3_10004fb8 = call i32 @function_100089c0(i8* %v2_10004fb8, i32 %v0_10004fac)
  store i32 %v3_10004fb8, i32* %r29.global-to-local, align 4
  %v3_10004fc8 = call i32 @function_10008284(i32 34, i32* null)
  %v2_10004fd0 = add i32 %v3_10004fb8, %v2_10004fb0
  store i32 %v2_10004fd0, i32* @r3, align 4
  %v2_10004fd4 = inttoptr i32 %v2_10004fd0 to i8*
  %v3_10004fd4 = call i32 @function_100089c0(i8* %v2_10004fd4, i32 %v3_10004fc8)
  store i32 ptrtoint ([3 x i8]* @global_var_10004fe0.58 to i32), i32* @lr, align 4
  %v1_10004fdc = call i32 @function_100082ac(i32 15)
  store i32 268455912, i32* @lr, align 4
  %v1_10004fe4 = call i32 @function_100082ac(i32 16)
  store i32 4095, i32* @r5, align 4
  store i32 268455928, i32* @lr, align 4
  %v3_10004ff4 = call i32 @function_100093d8(i32 %v2_10004e8c, i32 %v2_10004db4, i32 4095)
  %v3_10004ff8 = icmp eq i32 %v3_10004ff4, -1
  store i32 %v3_10004ff4, i32* %r29.global-to-local, align 4
  br i1 %v3_10004ff8, label %dec_label_pc_100050e4, label %dec_label_pc_10005004

dec_label_pc_10005004:                            ; preds = %dec_label_pc_10004f34
  %v0_10005004 = load i32, i32* @r1, align 4
  %v2_10005004 = add i32 %v0_10005004, %v3_10004ff4
  %v3_1000500c = add i32 %v2_10005004, 192
  %v4_1000500c = inttoptr i32 %v3_1000500c to i8*
  store i8 0, i8* %v4_1000500c, align 1
  store i32 268455960, i32* @lr, align 4
  %v1_10005014 = call i32 @function_10008338(i32 35)
  %v3_10005020 = call i32 @function_10008284(i32 35, i32* null)
  %v0_10005024 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005024 = add i32 %v0_10005024, -1
  %v4_10005030 = call i32 @function_10008d48(i8* %v2_10004de0, i32 %v1_10005024, i32 %v3_10005020)
  %v3_10005034 = icmp eq i32 %v4_10005030, -1
  br i1 %v3_10005034, label %dec_label_pc_10005050, label %dec_label_pc_1000503c

dec_label_pc_1000503c:                            ; preds = %dec_label_pc_10005004
  store i32 268456004, i32* @lr, align 4
  %v1_10005040 = call i32 @function_10009570(i32 %v2_10004db4)
  %v0_10005044 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005050.59 to i32), i32* @lr, align 4
  %v2_1000504c = call i32 @function_10009278(i32 %v0_10005044, i32 9)
  br label %dec_label_pc_10005050

dec_label_pc_10005050:                            ; preds = %dec_label_pc_10005004, %dec_label_pc_1000503c
  store i32 ptrtoint (i32* @global_var_10005058.60 to i32), i32* @lr, align 4
  %v1_10005054 = call i32 @function_100082ac(i32 35)
  store i32 268456028, i32* @lr, align 4
  %v0_10005058 = call i32 @function_100091e8()
  %v0_1000505c = load i32, i32* %r30.global-to-local, align 4
  %v4_1000505c = icmp eq i32 %v0_1000505c, %v0_10005058
  br i1 %v4_1000505c, label %dec_label_pc_10005084, label %dec_label_pc_10005064

dec_label_pc_10005064:                            ; preds = %dec_label_pc_10005050
  store i32 268456040, i32* @lr, align 4
  %v0_10005064 = call i32 @function_10009230()
  %v0_10005068 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005068 = icmp eq i32 %v0_10005068, %v0_10005064
  br i1 %v4_10005068, label %dec_label_pc_10005084, label %dec_label_pc_10005070

dec_label_pc_10005070:                            ; preds = %dec_label_pc_10005064
  %v3_10005070 = load i32, i32* @global_var_1001c2d8.51, align 4
  %v3_10005078 = call i32 @function_10008df4(i8* %v2_10004de0, i32 %v3_10005070)
  %v3_1000507c = icmp eq i32 %v3_10005078, 0
  br i1 %v3_1000507c, label %dec_label_pc_100050c0, label %dec_label_pc_10005070.dec_label_pc_10005084_crit_edge

dec_label_pc_10005070.dec_label_pc_10005084_crit_edge: ; preds = %dec_label_pc_10005070
  %v0_10005084.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005084

dec_label_pc_10005084:                            ; preds = %dec_label_pc_10005070.dec_label_pc_10005084_crit_edge, %dec_label_pc_10005064, %dec_label_pc_10005050
  %v0_10005084 = phi i32 [ %v0_10005084.pre, %dec_label_pc_10005070.dec_label_pc_10005084_crit_edge ], [ %v0_10005064, %dec_label_pc_10005064 ], [ %v0_10005058, %dec_label_pc_10005050 ]
  store i32 %v0_10005084, i32* %r28.global-to-local, align 4
  %v0_10005088 = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_10005088, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004ec0.backedge

dec_label_pc_10004ec0.backedge:                   ; preds = %dec_label_pc_10004ed0, %dec_label_pc_10005084, %dec_label_pc_100050b4, %dec_label_pc_10005388, %dec_label_pc_10005090, %dec_label_pc_10005098
  %v0_10004ec0 = load i32, i32* @r27, align 4
  store i32 268455624, i32* @lr, align 4
  %v1_10004ec4 = inttoptr i32 %v0_10004ec0 to i32*
  %v2_10004ec4 = call i32 @function_100097b4(i32* %v1_10004ec4)
  %v3_10004ec8 = icmp eq i32 %v2_10004ec4, 0
  br i1 %v3_10004ec8, label %dec_label_pc_10004f28, label %dec_label_pc_10004ed0.preheader

dec_label_pc_10005090:                            ; preds = %dec_label_pc_10004f00
  %v0_10005090 = load i32, i32* %r30.global-to-local, align 4
  %tmp97 = icmp slt i32 %v0_10005090, 401
  br i1 %tmp97, label %dec_label_pc_10004ec0.backedge, label %dec_label_pc_10005098

dec_label_pc_10005098:                            ; preds = %dec_label_pc_10005090
  %v0_100050a0 = load i32, i32* @r22, align 4
  %v1_100050a4 = urem i32 %v0_100050a0, 10
  %v4_100050ac = icmp eq i32 %v1_100050a4, 0
  br i1 %v4_100050ac, label %dec_label_pc_100050b4, label %dec_label_pc_10004ec0.backedge

dec_label_pc_100050b4:                            ; preds = %dec_label_pc_10005098
  store i32 268456124, i32* @lr, align 4
  %v1_100050b8 = call i32 @function_1000a9a0(i32 1)
  br label %dec_label_pc_10004ec0.backedge

dec_label_pc_100050c0:                            ; preds = %dec_label_pc_10005070
  store i32 268456144, i32* @lr, align 4
  %v2_100050cc = call i32 @function_100092c0(i32 %v2_10004db4, i32 0)
  %v3_100050d0 = icmp eq i32 %v2_100050cc, -1
  store i32 %v2_100050cc, i32* @r31, align 4
  br i1 %v3_100050d0, label %dec_label_pc_100053f0, label %dec_label_pc_100050dc

dec_label_pc_100050dc:                            ; preds = %dec_label_pc_100050c0, %dec_label_pc_100053f0
  store i32 268456164, i32* @lr, align 4
  %v0_100050e0 = call i32 @function_10009158()
  br label %dec_label_pc_100050e4

dec_label_pc_100050e4:                            ; preds = %dec_label_pc_10004f34, %dec_label_pc_100050dc
  store i32 268456180, i32* @lr, align 4
  %v2_100050f0 = call i32 @function_100092c0(i32 %v2_10004e8c, i32 0)
  %v3_100050f4 = icmp eq i32 %v2_100050f0, -1
  store i32 %v2_100050f0, i32* %r24.global-to-local, align 4
  br i1 %v3_100050f4, label %dec_label_pc_10005388, label %dec_label_pc_10005100

dec_label_pc_10005100:                            ; preds = %dec_label_pc_100050e4
  store i32 ptrtoint ([3 x i8]* @global_var_10005108.61 to i32), i32* @lr, align 4
  %v1_10005104 = call i32 @function_10008338(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_10005110.62 to i32), i32* @lr, align 4
  %v1_1000510c = call i32 @function_10008338(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_10005118.63 to i32), i32* @lr, align 4
  %v1_10005114 = call i32 @function_10008338(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_10005120.64 to i32), i32* @lr, align 4
  %v1_1000511c = call i32 @function_10008338(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_10005128.65 to i32), i32* @lr, align 4
  %v1_10005124 = call i32 @function_10008338(i32 24)
  store i32 268456240, i32* @lr, align 4
  %v1_1000512c = call i32 @function_10008338(i32 36)
  %v3_10005138 = call i32 @function_10008284(i32 20, i32* nonnull %stack_var_-8452)
  store i32 %v3_10005138, i32* @r31, align 4
  %v3_10005148 = call i32 @function_10008284(i32 21, i32* nonnull %stack_var_-8448)
  store i32 %v3_10005148, i32* %r29.global-to-local, align 4
  %v3_10005158 = call i32 @function_10008284(i32 22, i32* nonnull %stack_var_-8444)
  store i32 %v3_10005158, i32* %r28.global-to-local, align 4
  %v3_10005168 = call i32 @function_10008284(i32 23, i32* nonnull %stack_var_-8456)
  store i32 %v3_10005168, i32* %r26.global-to-local, align 4
  %v3_10005178 = call i32 @function_10008284(i32 24, i32* nonnull %stack_var_-8440)
  store i32 %v3_10005178, i32* %r25.global-to-local, align 4
  %v3_10005188 = call i32 @function_10008284(i32 36, i32* nonnull %stack_var_-8436)
  store i32 %v3_10005188, i32* %r23.global-to-local, align 4
  %v0_10005190105 = load i32, i32* %r24.global-to-local, align 4
  store i32 268456352, i32* @lr, align 4
  %v3_1000519c106 = call i32 @function_10009390(i32 %v0_10005190105, i32 %v2_10004e94, i32 4096)
  %tmp98108 = icmp slt i32 %v3_1000519c106, 1
  br i1 %tmp98108, label %dec_label_pc_10005400, label %dec_label_pc_100051a8

dec_label_pc_100051a8:                            ; preds = %dec_label_pc_10005100, %dec_label_pc_10005190.backedge
  %v3_1000519c109 = phi i32 [ %v3_1000519c, %dec_label_pc_10005190.backedge ], [ %v3_1000519c106, %dec_label_pc_10005100 ]
  %v3_100051a0110.in = phi i32 [ %v3_1000519c, %dec_label_pc_10005190.backedge ], [ %v3_1000519c106, %dec_label_pc_10005100 ]
  %v3_100051a0110 = icmp eq i32 %v3_100051a0110.in, 0
  %v3_100051a8 = load i32, i32* %stack_var_-8452, align 4
  %v2_100051ac = icmp slt i32 %v3_1000519c109, %v3_100051a8
  br i1 %v2_100051ac, label %dec_label_pc_100051ec, label %dec_label_pc_100051b4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_100051a8
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100051c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100051c8

dec_label_pc_100051c8:                            ; preds = %dec_label_pc_100051b4, %dec_label_pc_100051e4
  %v0_100051e8 = phi i32 [ %v3_1000519c109, %dec_label_pc_100051b4 ], [ %v1_100051e8, %dec_label_pc_100051e4 ]
  %v0_100051e4 = phi i32 [ %v2_10004e94, %dec_label_pc_100051b4 ], [ %v1_100051e4, %dec_label_pc_100051e4 ]
  %v1_100051c8 = phi i32 [ 0, %dec_label_pc_100051b4 ], [ %v1_100051c827, %dec_label_pc_100051e4 ]
  %v2_100051c8 = add i32 %v1_100051c8, %v0_100051c8.pre
  %v3_100051c8 = inttoptr i32 %v2_100051c8 to i8*
  %v4_100051c8 = load i8, i8* %v3_100051c8, align 1
  %v1_100051cc = add i32 %v1_100051c8, 1
  store i32 %v1_100051cc, i32* %r11.global-to-local, align 4
  %v1_100051d0 = inttoptr i32 %v0_100051e4 to i8*
  %v2_100051d0 = load i8, i8* %v1_100051d0, align 1
  %v4_100051d8 = icmp eq i8 %v2_100051d0, %v4_100051c8
  br i1 %v4_100051d8, label %dec_label_pc_10005340, label %dec_label_pc_100051e0

dec_label_pc_100051e0:                            ; preds = %dec_label_pc_100051c8
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100051e4

dec_label_pc_100051e4:                            ; preds = %dec_label_pc_10005340, %dec_label_pc_100051e0
  %v1_100051c827 = phi i32 [ %v1_100051cc, %dec_label_pc_10005340 ], [ 0, %dec_label_pc_100051e0 ]
  %v1_100051e4 = add i32 %v0_100051e4, 1
  %v1_100051e8 = add i32 %v0_100051e8, -1
  %v2_100051e8 = icmp eq i32 %v1_100051e8, 0
  br i1 %v2_100051e8, label %dec_label_pc_100051ec, label %dec_label_pc_100051c8

dec_label_pc_100051ec:                            ; preds = %dec_label_pc_100051e4, %dec_label_pc_100051a8
  %v3_100051ec = load i32, i32* %stack_var_-8448, align 4
  %v2_100051f0 = icmp slt i32 %v3_1000519c109, %v3_100051ec
  br i1 %v2_100051f0, label %dec_label_pc_10005230, label %dec_label_pc_100051f8

dec_label_pc_100051f8:                            ; preds = %dec_label_pc_100051ec
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100051a0110, label %dec_label_pc_10005230, label %dec_label_pc_1000520c.preheader

dec_label_pc_1000520c.preheader:                  ; preds = %dec_label_pc_100051f8
  %v0_1000520c.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000520c

dec_label_pc_1000520c:                            ; preds = %dec_label_pc_1000520c.preheader, %dec_label_pc_1000522c
  %v0_1000522c = phi i32 [ %v3_1000519c109, %dec_label_pc_1000520c.preheader ], [ %v1_1000522c, %dec_label_pc_1000522c ]
  %storemerge.in = phi i32 [ %v2_10004e94, %dec_label_pc_1000520c.preheader ], [ %storemerge, %dec_label_pc_1000522c ]
  %v1_1000520c = phi i32 [ 0, %dec_label_pc_1000520c.preheader ], [ %v1_1000520c33, %dec_label_pc_1000522c ]
  %v2_1000520c = add i32 %v1_1000520c, %v0_1000520c.pre
  %v3_1000520c = inttoptr i32 %v2_1000520c to i8*
  %v4_1000520c = load i8, i8* %v3_1000520c, align 1
  %v1_10005210 = add i32 %v1_1000520c, 1
  store i32 %v1_10005210, i32* %r11.global-to-local, align 4
  %v1_10005214 = inttoptr i32 %storemerge.in to i8*
  %v2_10005214 = load i8, i8* %v1_10005214, align 1
  %v4_1000521c = icmp eq i8 %v2_10005214, %v4_1000520c
  br i1 %v4_1000521c, label %dec_label_pc_100053b4, label %dec_label_pc_10005224

dec_label_pc_10005224:                            ; preds = %dec_label_pc_1000520c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000522c

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_100053b4, %dec_label_pc_10005224
  %v1_1000520c33 = phi i32 [ %v1_10005210, %dec_label_pc_100053b4 ], [ 0, %dec_label_pc_10005224 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_1000522c = add i32 %v0_1000522c, -1
  %v2_1000522c = icmp eq i32 %v1_1000522c, 0
  br i1 %v2_1000522c, label %dec_label_pc_10005230, label %dec_label_pc_1000520c

dec_label_pc_10005230:                            ; preds = %dec_label_pc_1000522c, %dec_label_pc_100051f8, %dec_label_pc_100051ec
  %v3_10005230 = load i32, i32* %stack_var_-8444, align 4
  %v2_10005234 = icmp slt i32 %v3_1000519c109, %v3_10005230
  br i1 %v2_10005234, label %dec_label_pc_10005274, label %dec_label_pc_1000523c

dec_label_pc_1000523c:                            ; preds = %dec_label_pc_10005230
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100051a0110, label %dec_label_pc_10005274, label %dec_label_pc_10005250.preheader

dec_label_pc_10005250.preheader:                  ; preds = %dec_label_pc_1000523c
  %v0_10005250.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10005250

dec_label_pc_10005250:                            ; preds = %dec_label_pc_10005250.preheader, %dec_label_pc_10005270
  %v0_10005270 = phi i32 [ %v3_1000519c109, %dec_label_pc_10005250.preheader ], [ %v1_10005270, %dec_label_pc_10005270 ]
  %storemerge3.in = phi i32 [ %v2_10004e94, %dec_label_pc_10005250.preheader ], [ %storemerge3, %dec_label_pc_10005270 ]
  %v1_10005250 = phi i32 [ 0, %dec_label_pc_10005250.preheader ], [ %v1_1000525039, %dec_label_pc_10005270 ]
  %v2_10005250 = add i32 %v1_10005250, %v0_10005250.pre
  %v3_10005250 = inttoptr i32 %v2_10005250 to i8*
  %v4_10005250 = load i8, i8* %v3_10005250, align 1
  %v1_10005254 = add i32 %v1_10005250, 1
  store i32 %v1_10005254, i32* %r11.global-to-local, align 4
  %v1_10005258 = inttoptr i32 %storemerge3.in to i8*
  %v2_10005258 = load i8, i8* %v1_10005258, align 1
  %v4_10005260 = icmp eq i8 %v2_10005258, %v4_10005250
  br i1 %v4_10005260, label %dec_label_pc_100053c0, label %dec_label_pc_10005268

dec_label_pc_10005268:                            ; preds = %dec_label_pc_10005250
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005270

dec_label_pc_10005270:                            ; preds = %dec_label_pc_100053c0, %dec_label_pc_10005268
  %v1_1000525039 = phi i32 [ %v1_10005254, %dec_label_pc_100053c0 ], [ 0, %dec_label_pc_10005268 ]
  %storemerge3 = add i32 %storemerge3.in, 1
  %v1_10005270 = add i32 %v0_10005270, -1
  %v2_10005270 = icmp eq i32 %v1_10005270, 0
  br i1 %v2_10005270, label %dec_label_pc_10005274, label %dec_label_pc_10005250

dec_label_pc_10005274:                            ; preds = %dec_label_pc_10005270, %dec_label_pc_1000523c, %dec_label_pc_10005230
  %v3_10005274 = load i32, i32* %stack_var_-8456, align 4
  %v2_10005278 = icmp slt i32 %v3_1000519c109, %v3_10005274
  br i1 %v2_10005278, label %dec_label_pc_100052b8, label %dec_label_pc_10005280

dec_label_pc_10005280:                            ; preds = %dec_label_pc_10005274
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100051a0110, label %dec_label_pc_100052b8, label %dec_label_pc_10005294.preheader

dec_label_pc_10005294.preheader:                  ; preds = %dec_label_pc_10005280
  %v0_10005294.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10005294

dec_label_pc_10005294:                            ; preds = %dec_label_pc_10005294.preheader, %dec_label_pc_100052b4
  %v0_100052b4 = phi i32 [ %v3_1000519c109, %dec_label_pc_10005294.preheader ], [ %v1_100052b4, %dec_label_pc_100052b4 ]
  %storemerge4.in = phi i32 [ %v2_10004e94, %dec_label_pc_10005294.preheader ], [ %storemerge4, %dec_label_pc_100052b4 ]
  %v1_10005294 = phi i32 [ 0, %dec_label_pc_10005294.preheader ], [ %v1_1000529445, %dec_label_pc_100052b4 ]
  %v2_10005294 = add i32 %v1_10005294, %v0_10005294.pre
  %v3_10005294 = inttoptr i32 %v2_10005294 to i8*
  %v4_10005294 = load i8, i8* %v3_10005294, align 1
  %v1_10005298 = add i32 %v1_10005294, 1
  store i32 %v1_10005298, i32* %r11.global-to-local, align 4
  %v1_1000529c = inttoptr i32 %storemerge4.in to i8*
  %v2_1000529c = load i8, i8* %v1_1000529c, align 1
  %v4_100052a4 = icmp eq i8 %v2_1000529c, %v4_10005294
  br i1 %v4_100052a4, label %dec_label_pc_100053cc, label %dec_label_pc_100052ac

dec_label_pc_100052ac:                            ; preds = %dec_label_pc_10005294
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100052b4

dec_label_pc_100052b4:                            ; preds = %dec_label_pc_100053cc, %dec_label_pc_100052ac
  %v1_1000529445 = phi i32 [ %v1_10005298, %dec_label_pc_100053cc ], [ 0, %dec_label_pc_100052ac ]
  %storemerge4 = add i32 %storemerge4.in, 1
  %v1_100052b4 = add i32 %v0_100052b4, -1
  %v2_100052b4 = icmp eq i32 %v1_100052b4, 0
  br i1 %v2_100052b4, label %dec_label_pc_100052b8, label %dec_label_pc_10005294

dec_label_pc_100052b8:                            ; preds = %dec_label_pc_100052b4, %dec_label_pc_10005280, %dec_label_pc_10005274
  %v3_100052b8 = load i32, i32* %stack_var_-8440, align 4
  %v2_100052bc = icmp slt i32 %v3_1000519c109, %v3_100052b8
  br i1 %v2_100052bc, label %dec_label_pc_100052fc, label %dec_label_pc_100052c4

dec_label_pc_100052c4:                            ; preds = %dec_label_pc_100052b8
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100051a0110, label %dec_label_pc_100052fc, label %dec_label_pc_100052d8.preheader

dec_label_pc_100052d8.preheader:                  ; preds = %dec_label_pc_100052c4
  %v0_100052d8.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_100052d8

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_100052d8.preheader, %dec_label_pc_100052f8
  %v0_100052f8 = phi i32 [ %v3_1000519c109, %dec_label_pc_100052d8.preheader ], [ %v1_100052f8, %dec_label_pc_100052f8 ]
  %storemerge5.in = phi i32 [ %v2_10004e94, %dec_label_pc_100052d8.preheader ], [ %storemerge5, %dec_label_pc_100052f8 ]
  %v1_100052d8 = phi i32 [ 0, %dec_label_pc_100052d8.preheader ], [ %v1_100052d851, %dec_label_pc_100052f8 ]
  %v2_100052d8 = add i32 %v1_100052d8, %v0_100052d8.pre
  %v3_100052d8 = inttoptr i32 %v2_100052d8 to i8*
  %v4_100052d8 = load i8, i8* %v3_100052d8, align 1
  %v1_100052dc = add i32 %v1_100052d8, 1
  store i32 %v1_100052dc, i32* %r11.global-to-local, align 4
  %v1_100052e0 = inttoptr i32 %storemerge5.in to i8*
  %v2_100052e0 = load i8, i8* %v1_100052e0, align 1
  %v4_100052e8 = icmp eq i8 %v2_100052e0, %v4_100052d8
  br i1 %v4_100052e8, label %dec_label_pc_100053d8, label %dec_label_pc_100052f0

dec_label_pc_100052f0:                            ; preds = %dec_label_pc_100052d8
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100052f8

dec_label_pc_100052f8:                            ; preds = %dec_label_pc_100053d8, %dec_label_pc_100052f0
  %v1_100052d851 = phi i32 [ %v1_100052dc, %dec_label_pc_100053d8 ], [ 0, %dec_label_pc_100052f0 ]
  %storemerge5 = add i32 %storemerge5.in, 1
  %v1_100052f8 = add i32 %v0_100052f8, -1
  %v2_100052f8 = icmp eq i32 %v1_100052f8, 0
  br i1 %v2_100052f8, label %dec_label_pc_100052fc, label %dec_label_pc_100052d8

dec_label_pc_100052fc:                            ; preds = %dec_label_pc_100052f8, %dec_label_pc_100052c4, %dec_label_pc_100052b8
  %v3_100052fc = load i32, i32* %stack_var_-8436, align 4
  %v2_10005300 = icmp slt i32 %v3_1000519c109, %v3_100052fc
  br i1 %v2_10005300, label %dec_label_pc_10005190.backedge, label %dec_label_pc_10005308

dec_label_pc_10005308:                            ; preds = %dec_label_pc_100052fc
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_100051a0110, label %dec_label_pc_10005190.backedge, label %dec_label_pc_1000531c.lr.ph

dec_label_pc_10005190.backedge:                   ; preds = %dec_label_pc_10005318.backedge, %dec_label_pc_10005308, %dec_label_pc_100052fc
  %v0_10005190 = load i32, i32* %r24.global-to-local, align 4
  store i32 268456352, i32* @lr, align 4
  %v3_1000519c = call i32 @function_10009390(i32 %v0_10005190, i32 %v2_10004e94, i32 4096)
  %tmp98 = icmp slt i32 %v3_1000519c, 1
  br i1 %tmp98, label %dec_label_pc_10005400, label %dec_label_pc_100051a8

dec_label_pc_1000531c.lr.ph:                      ; preds = %dec_label_pc_10005308
  %v0_1000531c.pre = load i32, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000531c

dec_label_pc_1000531c:                            ; preds = %dec_label_pc_1000531c.lr.ph, %dec_label_pc_10005318.backedge
  %v0_10005318 = phi i32 [ %v3_1000519c109, %dec_label_pc_1000531c.lr.ph ], [ %v1_10005318, %dec_label_pc_10005318.backedge ]
  %storemerge21.in = phi i32 [ %v2_10004e94, %dec_label_pc_1000531c.lr.ph ], [ %storemerge21, %dec_label_pc_10005318.backedge ]
  %v1_1000531c = phi i32 [ 0, %dec_label_pc_1000531c.lr.ph ], [ %v1_1000531c57, %dec_label_pc_10005318.backedge ]
  %v2_1000531c = add i32 %v1_1000531c, %v0_1000531c.pre
  %v3_1000531c = inttoptr i32 %v2_1000531c to i8*
  %v4_1000531c = load i8, i8* %v3_1000531c, align 1
  %v1_10005320 = add i32 %v1_1000531c, 1
  store i32 %v1_10005320, i32* %r11.global-to-local, align 4
  %v1_10005324 = inttoptr i32 %storemerge21.in to i8*
  %v2_10005324 = load i8, i8* %v1_10005324, align 1
  %v4_1000532c = icmp eq i8 %v2_10005324, %v4_1000531c
  br i1 %v4_1000532c, label %dec_label_pc_100053e4, label %dec_label_pc_10005334

dec_label_pc_10005334:                            ; preds = %dec_label_pc_1000531c
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005318.backedge

dec_label_pc_10005318.backedge:                   ; preds = %dec_label_pc_100053e4, %dec_label_pc_10005334
  %v1_1000531c57 = phi i32 [ 0, %dec_label_pc_10005334 ], [ %v1_10005320, %dec_label_pc_100053e4 ]
  %storemerge21 = add i32 %storemerge21.in, 1
  %v1_10005318 = add i32 %v0_10005318, -1
  %v2_10005318 = icmp eq i32 %v1_10005318, 0
  br i1 %v2_10005318, label %dec_label_pc_10005190.backedge, label %dec_label_pc_1000531c

dec_label_pc_10005340:                            ; preds = %dec_label_pc_100051c8
  %v4_100051d4 = icmp eq i32 %v3_100051a8, %v1_100051cc
  br i1 %v4_100051d4, label %dec_label_pc_10005344, label %dec_label_pc_100051e4

dec_label_pc_10005344:                            ; preds = %dec_label_pc_10005340, %dec_label_pc_100053b4, %dec_label_pc_100053c0, %dec_label_pc_100053cc, %dec_label_pc_100053d8, %dec_label_pc_100053e4
  store i32 ptrtoint ([3 x i8]* @global_var_1000534c.66 to i32), i32* @lr, align 4
  %v1_10005348 = call i32 @function_100082ac(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_10005354.67 to i32), i32* @lr, align 4
  %v1_10005350 = call i32 @function_100082ac(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_1000535c.68 to i32), i32* @lr, align 4
  %v1_10005358 = call i32 @function_100082ac(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_10005364.69 to i32), i32* @lr, align 4
  %v1_10005360 = call i32 @function_100082ac(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_1000536c.70 to i32), i32* @lr, align 4
  %v1_10005368 = call i32 @function_100082ac(i32 24)
  store i32 268456820, i32* @lr, align 4
  %v1_10005370 = call i32 @function_100082ac(i32 36)
  store i32 268456828, i32* @lr, align 4
  %v0_10005378 = call i32 @function_10009158()
  %v0_1000537c = load i32, i32* %r30.global-to-local, align 4
  store i32 268456840, i32* @lr, align 4
  %v2_10005384 = call i32 @function_10009278(i32 %v0_1000537c, i32 9)
  br label %dec_label_pc_10005388

dec_label_pc_10005388:                            ; preds = %dec_label_pc_100050e4, %dec_label_pc_10005400, %dec_label_pc_10005344
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004e8c, i32* @r3, align 4
  store i32 268456852, i32* @lr, align 4
  %v0_10005390 = call i32 @function_10008a40()
  store i32 %v2_10004e90, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_1000539c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000539c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100053a4.71 to i32), i32* @lr, align 4
  %v0_100053a0 = call i32 @function_10008a40()
  store i32 268456876, i32* @lr, align 4
  %v1_100053a8 = call i32 @function_1000a9a0(i32 1)
  %v0_100053ac = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_100053ac, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004ec0.backedge

dec_label_pc_100053b4:                            ; preds = %dec_label_pc_1000520c
  %v4_10005218 = icmp eq i32 %v3_100051ec, %v1_10005210
  br i1 %v4_10005218, label %dec_label_pc_10005344, label %dec_label_pc_1000522c

dec_label_pc_100053c0:                            ; preds = %dec_label_pc_10005250
  %v4_1000525c = icmp eq i32 %v3_10005230, %v1_10005254
  br i1 %v4_1000525c, label %dec_label_pc_10005344, label %dec_label_pc_10005270

dec_label_pc_100053cc:                            ; preds = %dec_label_pc_10005294
  %v4_100052a0 = icmp eq i32 %v3_10005274, %v1_10005298
  br i1 %v4_100052a0, label %dec_label_pc_10005344, label %dec_label_pc_100052b4

dec_label_pc_100053d8:                            ; preds = %dec_label_pc_100052d8
  %v4_100052e4 = icmp eq i32 %v3_100052b8, %v1_100052dc
  br i1 %v4_100052e4, label %dec_label_pc_10005344, label %dec_label_pc_100052f8

dec_label_pc_100053e4:                            ; preds = %dec_label_pc_1000531c
  %v4_10005328 = icmp eq i32 %v3_100052fc, %v1_10005320
  br i1 %v4_10005328, label %dec_label_pc_10005344, label %dec_label_pc_10005318.backedge

dec_label_pc_100053f0:                            ; preds = %dec_label_pc_100050c0
  %v0_100053f0 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456956, i32* @lr, align 4
  %v2_100053f8 = call i32 @function_10009278(i32 %v0_100053f0, i32 9)
  br label %dec_label_pc_100050dc

dec_label_pc_10005400:                            ; preds = %dec_label_pc_10005190.backedge, %dec_label_pc_10005100
  store i32 ptrtoint ([3 x i8]* @global_var_10005408.72 to i32), i32* @lr, align 4
  %v1_10005404 = call i32 @function_100082ac(i32 20)
  store i32 ptrtoint ([3 x i8]* @global_var_10005410.73 to i32), i32* @lr, align 4
  %v1_1000540c = call i32 @function_100082ac(i32 21)
  store i32 ptrtoint ([3 x i8]* @global_var_10005418.74 to i32), i32* @lr, align 4
  %v1_10005414 = call i32 @function_100082ac(i32 22)
  store i32 ptrtoint ([3 x i8]* @global_var_10005420.75 to i32), i32* @lr, align 4
  %v1_1000541c = call i32 @function_100082ac(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_10005428.76 to i32), i32* @lr, align 4
  %v1_10005424 = call i32 @function_100082ac(i32 24)
  store i32 268457008, i32* @lr, align 4
  %v1_1000542c = call i32 @function_100082ac(i32 36)
  store i32 268457016, i32* @lr, align 4
  %v0_10005434 = call i32 @function_10009158()
  br label %dec_label_pc_10005388

; uselistorder directives
  uselistorder i32 %v1_10005318, { 1, 0 }
  uselistorder i32 %v1_10005320, { 1, 0, 2 }
  uselistorder i32 %v1_1000531c, { 1, 0 }
  uselistorder i32 %v3_1000519c, { 2, 1, 0 }
  uselistorder i32 %v1_100052f8, { 1, 0 }
  uselistorder i32 %v1_100052d8, { 1, 0 }
  uselistorder i32 %v1_100052b4, { 1, 0 }
  uselistorder i32 %v1_10005294, { 1, 0 }
  uselistorder i32 %v1_10005270, { 1, 0 }
  uselistorder i32 %v1_10005250, { 1, 0 }
  uselistorder i32 %v1_1000522c, { 1, 0 }
  uselistorder i32 %v1_1000520c, { 1, 0 }
  uselistorder i32 %v1_100051e8, { 1, 0 }
  uselistorder i32 %v1_100051c8, { 1, 0 }
  uselistorder i1 %v3_100051a0110, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1000519c109, { 11, 5, 10, 0, 9, 3, 8, 1, 7, 4, 6, 2 }
  uselistorder i32 %v2_10004ec4, { 1, 0 }
  uselistorder i32 %v2_10004f1c, { 1, 0 }
  uselistorder i32 %v1_10004ed8, { 1, 0 }
  uselistorder i32 %v2_10004e94, { 1, 7, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v2_10004e08, { 1, 0, 2 }
  uselistorder i32 %v2_10004de4, { 1, 0, 2 }
  uselistorder i32 %v2_10004db4, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b70, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8432, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %stack_var_-8452, { 1, 0 }
  uselistorder i32* %stack_var_-8448, { 1, 0 }
  uselistorder i32* %stack_var_-8444, { 1, 0 }
  uselistorder i32* %stack_var_-8456, { 1, 0 }
  uselistorder i32* %stack_var_-8440, { 1, 0 }
  uselistorder i32* %stack_var_-8436, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 18, 19 }
  uselistorder i32 268456352, { 1, 0 }
  uselistorder i32 (i32*)* @function_100097b4, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455624, { 1, 0 }
  uselistorder i32 (i32)* @function_100096a4, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100093d8, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005388, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10005344, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000531c, { 1, 0 }
  uselistorder label %dec_label_pc_100052d8, { 1, 0 }
  uselistorder label %dec_label_pc_10005294, { 1, 0 }
  uselistorder label %dec_label_pc_10005250, { 1, 0 }
  uselistorder label %dec_label_pc_1000520c, { 1, 0 }
  uselistorder label %dec_label_pc_100051c8, { 1, 0 }
  uselistorder label %dec_label_pc_100051a8, { 1, 0 }
  uselistorder label %dec_label_pc_100050e4, { 1, 0 }
  uselistorder label %dec_label_pc_100050dc, { 1, 0 }
  uselistorder label %dec_label_pc_10004ec0.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_10005050, { 1, 0 }
  uselistorder label %dec_label_pc_10004ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10004ed0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004e70, { 1, 0 }
  uselistorder label %dec_label_pc_10004d90, { 1, 0 }
  uselistorder label %dec_label_pc_10004d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10004d08, { 1, 0 }
  uselistorder label %dec_label_pc_10004cc0, { 1, 0 }
  uselistorder label %dec_label_pc_10004c78, { 1, 0 }
  uselistorder label %dec_label_pc_10004c34, { 1, 0 }
}

define i32 @function_1000543c() local_unnamed_addr {
dec_label_pc_1000543c:
  store i32 268457532, i32* @global_var_1001c2b0.77, align 4
  %v0_1000544c = load i32, i32* @r3, align 4
  ret i32 %v0_1000544c
}

define i32 @function_10005450(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005450:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v0_10005470 = load i32, i32* @r28, align 4
  store i32 0, i32* @r27, align 4
  store i32 268566528, i32* @r28, align 4
  %v0_10005480 = load i32, i32* @r31, align 4
  store i32 268566528, i32* @r31, align 4
  %v2_1000548c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1000548c, i32* @r30, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 268457112, i32* @lr, align 4
  %v3_10005494 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  %v3_10005498 = icmp eq i32 %v3_10005494, -1
  store i32 %v3_10005494, i32* @global_var_1001c2a8.78, align 4
  br i1 %v3_10005498, label %dec_label_pc_10005548, label %dec_label_pc_100054b4

dec_label_pc_100054b4:                            ; preds = %dec_label_pc_10005450
  %v2_1000549c = ptrtoint i32* %stack_var_-56 to i32
  store i32 268457144, i32* @lr, align 4
  %v5_100054b4 = call i32 @function_10009e6c(i32 %v3_10005494, i32 1, i32 2, i32 %v2_1000549c)
  %v3_100054b8 = load i32, i32* @global_var_1001c2a8.78, align 4
  store i32 3, i32* @r4, align 4
  store i32 268457168, i32* @lr, align 4
  %v2_100054cc = call i32 @function_10009070(i32 %v3_100054b8)
  store i32 4, i32* @r4, align 4
  store i32 268457188, i32* @lr, align 4
  %v2_100054e0 = call i32 @function_10009070(i32 %v3_100054b8)
  %v3_100054e4 = load i8, i8* @global_var_1001c168.79, align 1
  %v3_100054ec = icmp eq i8 %v3_100054e4, 0
  br i1 %v3_100054ec, label %dec_label_pc_1000556c, label %dec_label_pc_100054f8

dec_label_pc_100054f8:                            ; preds = %dec_label_pc_100054b4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_1000550c = call i32 @function_10009874()
  %v0_10005510 = load i32, i32* @r27, align 4
  %v2_10005510 = inttoptr i32 %v0_1000550c to i32*
  store i32 %v0_10005510, i32* %v2_10005510, align 4
  store i32 %v0_1000550c, i32* @r29, align 4
  %v3_10005520 = load i32, i32* @global_var_1001c2a8.78, align 4
  store i32 268457256, i32* @lr, align 4
  %v3_10005524 = call i32 @function_10009c74(i32 %v3_10005520, i32 %v2_1000548c, i32 16)
  %v3_1000552c = icmp eq i32 %v3_10005524, -1
  br i1 %v3_1000552c, label %dec_label_pc_100055b4, label %dec_label_pc_10005538

dec_label_pc_10005538:                            ; preds = %dec_label_pc_1000556c, %dec_label_pc_100054f8
  %v3_10005540 = load i32, i32* @global_var_1001c2a8.78, align 4
  store i32 268457288, i32* @lr, align 4
  %v2_10005544 = call i32 @function_10009d4c(i32 %v3_10005540, i32 1)
  br label %dec_label_pc_10005548

dec_label_pc_10005548:                            ; preds = %dec_label_pc_10005450, %dec_label_pc_10005538
  %v0_10005568 = phi i32 [ -1, %dec_label_pc_10005450 ], [ %v2_10005544, %dec_label_pc_10005538 ]
  store i32 %v0_10005470, i32* @r28, align 4
  store i32 %v0_10005480, i32* @r31, align 4
  ret i32 %v0_10005568

dec_label_pc_1000556c:                            ; preds = %dec_label_pc_100054b4
  store i32 2, i32* %stack_var_-52, align 4
  %v0_10005588 = call i32 @function_10009874()
  %v0_1000558c = load i32, i32* @r27, align 4
  %v2_1000558c = inttoptr i32 %v0_10005588 to i32*
  store i32 %v0_1000558c, i32* %v2_1000558c, align 4
  store i32 %v0_10005588, i32* @r29, align 4
  %v3_1000559c = load i32, i32* @global_var_1001c2a8.78, align 4
  store i32 268457380, i32* @lr, align 4
  %v3_100055a0 = call i32 @function_10009c74(i32 %v3_1000559c, i32 %v2_1000548c, i32 16)
  %v3_100055a8 = icmp eq i32 %v3_100055a0, -1
  br i1 %v3_100055a8, label %dec_label_pc_100055b4, label %dec_label_pc_10005538

dec_label_pc_100055b4:                            ; preds = %dec_label_pc_1000556c, %dec_label_pc_100054f8
  %v0_100055b4 = load i32, i32* @r29, align 4
  %v1_100055b4 = inttoptr i32 %v0_100055b4 to i32*
  %v2_100055b4 = load i32, i32* %v1_100055b4, align 4
  %v3_100055b8 = load i32, i32* @global_var_1001c2a8.78, align 4
  store i32 %v3_100055b8, i32* @r3, align 4
  %v3_100055bc = icmp eq i32 %v2_100055b4, 99
  br i1 %v3_100055bc, label %dec_label_pc_10005624, label %dec_label_pc_100055c4

dec_label_pc_100055c4:                            ; preds = %dec_label_pc_10005624, %dec_label_pc_100055b4, %dec_label_pc_10005630
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100055e0.80 to i32), i32* @lr, align 4
  %v0_100055dc = call i32 @function_10009ca8()
  store i32 268457448, i32* @lr, align 4
  %v1_100055e4 = call i32 @function_1000a9a0(i32 5)
  store i32 ptrtoint ([3 x i8]* @global_var_100055f0.81 to i32), i32* @lr, align 4
  %v0_100055ec = call i32 @function_10009158()
  store i32 268457468, i32* @lr, align 4
  %v1_100055f8 = call i32 @function_10004514(i32 47659)
  store i32 268457472, i32* @lr, align 4
  %v1_100055fc = call i32 @function_10005450(i32 %v1_100055f8)
  store i32 %v0_10005470, i32* @r28, align 4
  store i32 %v0_10005480, i32* @r31, align 4
  ret i32 %v1_100055fc

dec_label_pc_10005624:                            ; preds = %dec_label_pc_100055b4
  %v3_10005624 = load i8, i8* @global_var_1001c168.79, align 1
  %v3_10005628 = icmp eq i8 %v3_10005624, 0
  br i1 %v3_10005628, label %dec_label_pc_100055c4, label %dec_label_pc_10005630

dec_label_pc_10005630:                            ; preds = %dec_label_pc_10005624
  %v0_10005634 = load i32, i32* @r27, align 4
  %v1_10005634 = trunc i32 %v0_10005634 to i8
  store i8 %v1_10005634, i8* @global_var_1001c168.79, align 1
  br label %dec_label_pc_100055c4

; uselistorder directives
  uselistorder i32 %v2_1000548c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32)* @function_10004514, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009d4c, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009c74, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c168.79, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100055c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005548, { 1, 0 }
}

define i32 @function_1000563c() local_unnamed_addr {
dec_label_pc_1000563c:
  %r28.global-to-local = alloca i32, align 4
  store i32 268457564, i32* @lr, align 4
  %v1_10005658 = call i32 @function_10008338(i32 2)
  %v3_10005664 = call i32 @function_10008284(i32 2, i32* null)
  store i32 268457580, i32* @lr, align 4
  %v1_10005668 = call i32 @function_100062bc(i32 %v3_10005664)
  store i32 %v1_10005668, i32* @r31, align 4
  store i32 268457592, i32* @lr, align 4
  %v1_10005674 = call i32 @function_100082ac(i32 2)
  %v0_10005678 = load i32, i32* @r31, align 4
  %v3_10005678 = icmp eq i32 %v0_10005678, 0
  br i1 %v3_10005678, label %dec_label_pc_100056dc, label %dec_label_pc_10005680

dec_label_pc_10005680:                            ; preds = %dec_label_pc_1000563c
  %v1_10005680 = add i32 %v0_10005678, 4
  %v2_10005680 = inttoptr i32 %v1_10005680 to i32*
  %v3_10005680 = load i32, i32* %v2_10005680, align 4
  store i32 %v3_10005680, i32* %r28.global-to-local, align 4
  %v0_10005684 = call i32 @function_10005f98()
  %v0_10005688 = load i32, i32* @r31, align 4
  %v1_10005688 = inttoptr i32 %v0_10005688 to i8*
  %v2_10005688 = load i8, i8* %v1_10005688, align 1
  %v3_10005688 = zext i8 %v2_10005688 to i32
  %v2_10005694 = urem i32 %v0_10005684, %v3_10005688
  %v1_100056a8 = mul nuw nsw i32 %v2_10005694, 4
  %v1_100056ac = load i32, i32* %r28.global-to-local, align 4
  %v2_100056ac = add i32 %v1_100056ac, %v1_100056a8
  %v3_100056ac = inttoptr i32 %v2_100056ac to i32*
  %v4_100056ac = load i32, i32* %v3_100056ac, align 4
  store i32 %v4_100056ac, i32* @global_var_1001c3ac.84, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100056b8.85 to i32), i32* @lr, align 4
  %v1_100056b4 = call i32 @function_10006278(i32 %v0_10005688)
  store i32 ptrtoint ([3 x i8]* @global_var_100056c0.86 to i32), i32* @lr, align 4
  %v1_100056bc = call i32 @function_10008338(i32 1)
  %v3_100056c8 = call i32 @function_10008284(i32 1, i32* null)
  %v4_100056c8 = inttoptr i32 %v3_100056c8 to i16*
  %v3_100056cc = load i16, i16* %v4_100056c8, align 2
  store i16 %v3_100056cc, i16* bitcast (i32* @global_var_1001c3aa.87 to i16*), align 4
  store i32 268457692, i32* @lr, align 4
  %v1_100056d8 = call i32 @function_100082ac(i32 1)
  br label %dec_label_pc_100056dc

dec_label_pc_100056dc:                            ; preds = %dec_label_pc_1000563c, %dec_label_pc_10005680
  %v0_100056f4 = phi i32 [ %v1_10005674, %dec_label_pc_1000563c ], [ %v1_100056d8, %dec_label_pc_10005680 ]
  ret i32 %v0_100056f4

; uselistorder directives
  uselistorder label %dec_label_pc_100056dc, { 1, 0 }
}

define i32 @function_100056f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100056f8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1612 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1608 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-1624 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100056f8 = load i32, i32* @lr, align 4
  store i32 %v0_100056f8, i32* %r0.global-to-local, align 4
  %v0_10005700 = load i32, i32* @r31, align 4
  store i32 268457740, i32* @lr, align 4
  %v0_10005708 = call i32 @function_100091a0()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005708, i32* @global_var_1001c2e0.88, align 4
  %tmp47 = icmp slt i32 %v0_10005708, 1
  br i1 %tmp47, label %dec_label_pc_10005730, label %dec_label_pc_1000571c

dec_label_pc_1000571c:                            ; preds = %dec_label_pc_10005730, %dec_label_pc_100056f8
  store i32 %v0_100056f8, i32* %r0.global-to-local, align 4
  store i32 %v0_10005700, i32* @r31, align 4
  ret i32 %v0_10005708

dec_label_pc_10005730:                            ; preds = %dec_label_pc_100056f8
  %v3_10005730 = icmp eq i32 %v0_10005708, -1
  br i1 %v3_10005730, label %dec_label_pc_1000571c, label %dec_label_pc_10005738

dec_label_pc_10005738:                            ; preds = %dec_label_pc_10005730
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005748.89 to i32), i32* @lr, align 4
  %v1_10005744 = call i32 @function_10008338(i32 28)
  store i32 268457808, i32* @lr, align 4
  %v1_1000574c = call i32 @function_10008338(i32 29)
  %v3_10005758 = call i32 @function_10008284(i32 28, i32* null)
  store i32 268457832, i32* @lr, align 4
  %v2_10005764 = call i32 @function_100092c0(i32 %v3_10005758, i32 2)
  %v3_10005768 = icmp eq i32 %v2_10005764, -1
  store i32 %v2_10005764, i32* @r31, align 4
  br i1 %v3_10005768, label %dec_label_pc_100057b0, label %dec_label_pc_10005774

dec_label_pc_10005774:                            ; preds = %dec_label_pc_100057b0, %dec_label_pc_10005738
  %v0_10005778 = phi i32 [ %v2_100057c4, %dec_label_pc_100057b0 ], [ %v2_10005764, %dec_label_pc_10005738 ]
  %v2_10005780 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268457868, i32* @lr, align 4
  %v3_10005788 = call i32 @function_10008f88(i32 %v0_10005778, i32 -2147199228, i32 %v2_10005780)
  br label %dec_label_pc_1000578c

dec_label_pc_1000578c:                            ; preds = %dec_label_pc_1000578c, %dec_label_pc_10005774
  %v0_10005790 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100057a4.90 to i32), i32* @lr, align 4
  %v3_100057a0 = call i32 @function_10008f88(i32 %v0_10005790, i32 -2147199227, i32 0)
  store i32 268457900, i32* @lr, align 4
  %v1_100057a8 = call i32 @function_1000a9a0(i32 10)
  br label %dec_label_pc_1000578c

dec_label_pc_100057b0:                            ; preds = %dec_label_pc_10005738
  %v3_100057b8 = call i32 @function_10008284(i32 29, i32* null)
  store i32 268457928, i32* @lr, align 4
  %v2_100057c4 = call i32 @function_100092c0(i32 %v3_100057b8, i32 2)
  %v3_100057c8 = icmp eq i32 %v2_100057c4, -1
  store i32 %v2_100057c4, i32* @r31, align 4
  br i1 %v3_100057c8, label %dec_label_pc_100057d4, label %dec_label_pc_10005774

dec_label_pc_100057d4:                            ; preds = %dec_label_pc_100057b0
  store i32 ptrtoint ([3 x i8]* @global_var_100057dc.91 to i32), i32* @lr, align 4
  %v1_100057d8 = call i32 @function_100082ac(i32 28)
  store i32 ptrtoint ([3 x i8]* @global_var_100057e4.92 to i32), i32* @lr, align 4
  %v1_100057e0 = call i32 @function_100082ac(i32 29)
  %v0_100057e8 = call i32 @function_1000a91c()
  %v0_100057f0 = load i32, i32* @lr, align 4
  %v0_100057f4 = load i32, i32* @r29, align 4
  %v2_100057f8 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_100057f8, i32* @r29, align 4
  %v0_100057fc = load i32, i32* @r28, align 4
  store i32 %v0_100057e8, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005810 = load i32, i32* @r21, align 4
  store i32 0, i32* %stack_var_-1620, align 4
  store i32 268566528, i32* @r21, align 4
  %v0_1000581c = load i32, i32* @r22, align 4
  store i32 268566528, i32* @r22, align 4
  %v0_10005824 = load i32, i32* @r24, align 4
  %v2_10005828 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_10005828, i32* @r24, align 4
  %v0_1000582c = load i32, i32* @r25, align 4
  store i32 268566528, i32* @r25, align 4
  %v0_10005834 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_1000583c = load i32, i32* %r15.global-to-local, align 4
  %v0_10005840 = load i32, i32* %r16.global-to-local, align 4
  %v0_10005844 = load i32, i32* %r17.global-to-local, align 4
  %v0_10005848 = load i32, i32* %r18.global-to-local, align 4
  %v0_1000584c = load i32, i32* %r19.global-to-local, align 4
  %v0_10005850 = load i32, i32* @r20, align 4
  %v0_10005854 = load i32, i32* @r23, align 4
  %v0_1000585c = load i32, i32* @r27, align 4
  %v0_10005860 = load i32, i32* @r30, align 4
  store i32 268458088, i32* @lr, align 4
  %v1_10005864 = call i32 @function_10009f28(i32 %v2_100057f8)
  store i32 %v2_100057f8, i32* @r3, align 4
  store i32 268458100, i32* @lr, align 4
  %v2_10005870 = call i32 @function_10009edc(i32 %v2_100057f8, i32 2)
  store i32 268458116, i32* @lr, align 4
  %v3_10005880 = call i32 @function_100094b0(i32 0, i32 %v2_100057f8, i32 0)
  store i32 268458128, i32* @lr, align 4
  %v2_1000588c = call i32 @function_10009f54(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_100058a0.93 to i32), i32* @lr, align 4
  %v2_1000589c = call i32 @function_10009f54(i32 5, i32 268457020)
  store i32 268458148, i32* @lr, align 4
  %v1_100058a0 = call i32 @function_10008c9c(i32 %v2_1000589c)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001c3ac.84, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001c3aa.87 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100058a0, i32* @global_var_1001c2d0.14, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001c3a8.83 to i16*), align 4
  store i32 268458188, i32* @lr, align 4
  %v2_100058c8 = call i32 @function_100083c4(i32 %v1_100058a0, i32 -1334109607)
  store i32 268457532, i32* %r9.global-to-local, align 4
  store i32 268457532, i32* @global_var_1001c2b0.77, align 4
  store i32 ptrtoint (i32* @global_var_100058dc.94 to i32), i32* @lr, align 4
  %v1_100058d8 = call i32 @function_10005450(i32 %v2_100058c8)
  store i32 268458208, i32* @lr, align 4
  %v1_100058dc = call i32 @function_10005fe8(i32 %v1_100058d8)
  store i32 %v2_10005828, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268458220, i32* @lr, align 4
  %v0_100058e8 = call i32 @function_10008a40()
  %v0_100058ec = load i32, i32* @r28, align 4
  %v3_100058ec = icmp eq i32 %v0_100058ec, 2
  br i1 %v3_100058ec, label %dec_label_pc_10005a60, label %dec_label_pc_100058f4

dec_label_pc_100058f4:                            ; preds = %dec_label_pc_10005a60, %dec_label_pc_100057d4, %dec_label_pc_10005a70
  %v0_100058f4 = call i32 @function_10005f98()
  %v2_100058f8 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_100058f8, i32* @r27, align 4
  store i32 %v0_100058f4, i32* %r29.global-to-local, align 4
  %v0_10005900 = load i32, i32* @r31, align 4
  %v1_10005900 = inttoptr i32 %v0_10005900 to i32*
  %v2_10005900 = load i32, i32* %v1_10005900, align 4
  %v2_10005904 = ptrtoint i16* %stack_var_-1624 to i32
  store i32 %v2_10005904, i32* @r30, align 4
  store i32 0, i32* @r26, align 4
  store i32 268458256, i32* @lr, align 4
  %v1_1000590c = inttoptr i32 %v2_10005900 to i8*
  %v2_1000590c = call i32 @function_10008998(i8* %v1_1000590c)
  store i32 %v2_1000590c, i32* %r28.global-to-local, align 4
  %v0_10005914 = load i32, i32* @r31, align 4
  %v1_10005914 = inttoptr i32 %v0_10005914 to i32*
  %v2_10005914 = load i32, i32* %v1_10005914, align 4
  %v1_10005918 = sub i32 20, %v2_1000590c
  store i32 %v1_10005918, i32* @r28, align 4
  store i32 268458272, i32* @lr, align 4
  %v1_1000591c = inttoptr i32 %v2_10005914 to i8*
  %v2_1000591c = call i32 @function_10008998(i8* %v1_1000591c)
  %v0_10005920 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005920 = load i32, i32* @r28, align 4
  %v2_10005920 = urem i32 %v0_10005920, %v1_10005920
  %v2_10005924 = sub i32 %v0_10005920, %v2_10005920
  store i32 %v2_10005924, i32* %r0.global-to-local, align 4
  %v2_1000592c = add i32 %v2_10005920, %v2_1000591c
  %v0_10005938 = load i32, i32* @r30, align 4
  %v2_10005938 = add i32 %v0_10005938, %v2_1000592c
  store i32 %v2_10005938, i32* @r29, align 4
  store i32 268458304, i32* @lr, align 4
  %v2_1000593c = bitcast i32* %stack_var_-1584 to i8*
  %v3_1000593c = call i32 @function_10006058(i8* %v2_1000593c, i32 %v2_1000592c)
  %v0_10005940 = load i32, i32* @r31, align 4
  %v1_10005940 = inttoptr i32 %v0_10005940 to i32*
  %v2_10005940 = load i32, i32* %v1_10005940, align 4
  store i32 %v2_10005940, i32* @r3, align 4
  %v0_10005944 = load i32, i32* @r26, align 4
  %v1_10005944 = trunc i32 %v0_10005944 to i8
  %v2_10005944 = load i32, i32* @r29, align 4
  %v3_10005944 = add i32 %v2_10005944, 40
  %v4_10005944 = inttoptr i32 %v3_10005944 to i8*
  store i8 %v1_10005944, i8* %v4_10005944, align 1
  %v2_1000594c = inttoptr i32 %v2_10005940 to i8*
  %v3_1000594c = call i32 @function_100089c0(i8* %v2_1000594c, i32 %v2_100058f8)
  store i32 32, i32* @r4, align 4
  store i32 %v2_100058f8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000595c.96 to i32), i32* @lr, align 4
  %v0_10005958 = call i32 @function_10008a40()
  %v0_1000595c = call i32 @function_10005f98()
  store i32 %v0_1000595c, i32* %r28.global-to-local, align 4
  %v0_10005964 = load i32, i32* @r31, align 4
  %v1_10005964 = inttoptr i32 %v0_10005964 to i32*
  %v2_10005964 = load i32, i32* %v1_10005964, align 4
  store i32 268458348, i32* @lr, align 4
  %v1_10005968 = inttoptr i32 %v2_10005964 to i8*
  %v2_10005968 = call i32 @function_10008998(i8* %v1_10005968)
  store i32 %v2_10005968, i32* %r29.global-to-local, align 4
  %v0_10005970 = load i32, i32* @r31, align 4
  %v1_10005970 = inttoptr i32 %v0_10005970 to i32*
  %v2_10005970 = load i32, i32* %v1_10005970, align 4
  %v1_10005974 = sub i32 20, %v2_10005968
  store i32 %v1_10005974, i32* @r29, align 4
  store i32 268458364, i32* @lr, align 4
  %v1_10005978 = inttoptr i32 %v2_10005970 to i8*
  %v2_10005978 = call i32 @function_10008998(i8* %v1_10005978)
  %v0_1000597c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000597c = load i32, i32* @r29, align 4
  %v2_1000597c = urem i32 %v0_1000597c, %v1_1000597c
  %v2_10005980 = sub i32 %v0_1000597c, %v2_1000597c
  store i32 %v2_10005980, i32* %r0.global-to-local, align 4
  %v2_10005988 = add i32 %v2_1000597c, %v2_10005978
  %v0_10005994 = load i32, i32* @r30, align 4
  %v2_10005994 = add i32 %v0_10005994, %v2_10005988
  store i32 %v2_10005994, i32* @r28, align 4
  store i32 268458396, i32* @lr, align 4
  %v3_10005998 = call i32 @function_10006058(i8* %v2_1000593c, i32 %v2_10005988)
  %v0_1000599c = load i32, i32* @r26, align 4
  %v1_1000599c = trunc i32 %v0_1000599c to i8
  %v2_1000599c = load i32, i32* @r28, align 4
  %v3_1000599c = add i32 %v2_1000599c, 40
  %v4_1000599c = inttoptr i32 %v3_1000599c to i8*
  store i8 %v1_1000599c, i8* %v4_1000599c, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100059b0.97 to i32), i32* @lr, align 4
  %v2_100059ac = call i32 @function_10009348(i32 15, i32 %v2_100058f8)
  store i32 268458424, i32* @lr, align 4
  %v1_100059b4 = call i32 @function_10008338(i32 5)
  %v3_100059c0 = call i32 @function_10008284(i32 5, i32* nonnull %stack_var_-1620)
  %v3_100059c4 = load i32, i32* %stack_var_-1620, align 4
  store i32 268458452, i32* @lr, align 4
  %v3_100059d0 = call i32 @function_100095b8(i32 1, i32 %v3_100059c0, i32 %v3_100059c4)
  store i32 ptrtoint ([3 x i8]* @global_var_100059e8.99 to i32), i32* @lr, align 4
  %v3_100059e4 = call i32 @function_100095b8(i32 1, i32 ptrtoint (i32* @global_var_1000bb8c.98 to i32), i32 1)
  store i32 268458480, i32* @lr, align 4
  %v1_100059ec = call i32 @function_100082ac(i32 5)
  store i32 268458484, i32* @lr, align 4
  %v1_100059f0 = call i32 @function_1000072c(i32 %v1_100059ec)
  store i32 268458488, i32* @lr, align 4
  %v1_100059f4 = call i32 @function_10004b18(i32 %v1_100059f0)
  store i32 ptrtoint (i32* @global_var_100059fc.100 to i32), i32* @lr, align 4
  %v1_100059f8 = call i32 @function_100056f8(i32 %v1_100059f4)
  store i32 268458496, i32* @lr, align 4
  %v0_100059fc = call i32 @function_100091a0()
  %tmp48 = icmp slt i32 %v0_100059fc, 1
  br i1 %tmp48, label %dec_label_pc_10005a98, label %dec_label_pc_10005a08

dec_label_pc_10005a08:                            ; preds = %dec_label_pc_100058f4
  store i32 %v0_100057f0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000583c, i32* %r15.global-to-local, align 4
  store i32 %v0_10005840, i32* %r16.global-to-local, align 4
  store i32 %v0_10005844, i32* %r17.global-to-local, align 4
  store i32 %v0_10005848, i32* %r18.global-to-local, align 4
  store i32 %v0_1000584c, i32* %r19.global-to-local, align 4
  store i32 %v0_10005850, i32* @r20, align 4
  store i32 %v0_10005810, i32* @r21, align 4
  store i32 %v0_1000581c, i32* @r22, align 4
  store i32 %v0_10005854, i32* @r23, align 4
  store i32 %v0_10005824, i32* @r24, align 4
  store i32 %v0_1000582c, i32* @r25, align 4
  store i32 %v0_1000585c, i32* @r27, align 4
  store i32 %v0_100057fc, i32* @r28, align 4
  store i32 %v0_100057f4, i32* @r29, align 4
  store i32 %v0_10005860, i32* @r30, align 4
  store i32 %v0_10005834, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005a60:                            ; preds = %dec_label_pc_100057d4
  %v0_10005a60 = load i32, i32* @r31, align 4
  %v1_10005a60 = add i32 %v0_10005a60, 4
  %v2_10005a60 = inttoptr i32 %v1_10005a60 to i32*
  %v3_10005a60 = load i32, i32* %v2_10005a60, align 4
  store i32 268458600, i32* @lr, align 4
  %v1_10005a64 = inttoptr i32 %v3_10005a60 to i8*
  %v2_10005a64 = call i32 @function_10008998(i8* %v1_10005a64)
  %v2_10005a68 = icmp sgt i32 %v2_10005a64, 31
  br i1 %v2_10005a68, label %dec_label_pc_100058f4, label %dec_label_pc_10005a70

dec_label_pc_10005a70:                            ; preds = %dec_label_pc_10005a60
  %v0_10005a70 = load i32, i32* @r31, align 4
  %v1_10005a70 = add i32 %v0_10005a70, 4
  %v2_10005a70 = inttoptr i32 %v1_10005a70 to i32*
  %v3_10005a70 = load i32, i32* %v2_10005a70, align 4
  store i32 %v2_10005828, i32* @r3, align 4
  %v2_10005a78 = bitcast i32* %stack_var_-1552 to i8*
  %v3_10005a78 = call i32 @function_100089c0(i8* %v2_10005a78, i32 %v3_10005a70)
  %v0_10005a7c = load i32, i32* @r31, align 4
  %v1_10005a7c = add i32 %v0_10005a7c, 4
  %v2_10005a7c = inttoptr i32 %v1_10005a7c to i32*
  %v3_10005a7c = load i32, i32* %v2_10005a7c, align 4
  store i32 %v3_10005a7c, i32* %r29.global-to-local, align 4
  store i32 268458632, i32* @lr, align 4
  %v1_10005a84 = inttoptr i32 %v3_10005a7c to i8*
  %v2_10005a84 = call i32 @function_10008998(i8* %v1_10005a84)
  store i32 %v2_10005a84, i32* @r4, align 4
  store i32 %v3_10005a7c, i32* @r3, align 4
  store i32 268458644, i32* @lr, align 4
  %v0_10005a90 = call i32 @function_10008a40()
  br label %dec_label_pc_100058f4

dec_label_pc_10005a98:                            ; preds = %dec_label_pc_100058f4
  store i32 ptrtoint ([3 x i8]* @global_var_10005a9c.101 to i32), i32* @lr, align 4
  %v1_10005a98 = call i32 @function_10009468(i32 %v0_100059fc)
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 %v1_10005a98, i32* %r17.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005aac.102 to i32), i32* @lr, align 4
  %v0_10005aa8 = call i32 @function_10009158()
  store i32 ptrtoint ([3 x i8]* @global_var_10005ab4.103 to i32), i32* @lr, align 4
  %v0_10005ab0 = call i32 @function_10009158()
  store i32 268458684, i32* @lr, align 4
  %v0_10005ab8 = call i32 @function_10009158()
  %v2_10005abc = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_10005abc, i32* @r28, align 4
  store i32 268458692, i32* @lr, align 4
  %v1_10005ac0 = call i32 @function_1000072c(i32 %v0_10005ab8)
  %v2_10005ac4 = ptrtoint i32* %stack_var_-1264 to i32
  store i32 %v2_10005ac4, i32* @r29, align 4
  store i32 268458700, i32* @lr, align 4
  %v1_10005ac8 = call i32 @function_10004b18(i32 %v1_10005ac0)
  store i32 268566528, i32* @r20, align 4
  store i32 268458708, i32* @lr, align 4
  %v1_10005ad0 = call i32 @function_100056f8(i32 %v1_10005ac8)
  store i32 268566528, i32* @r26, align 4
  store i32 268458716, i32* @lr, align 4
  %v1_10005ad8 = call i32 @function_10006a9c(i32 %v1_10005ad0)
  store i32 268566528, i32* %r18.global-to-local, align 4
  %v2_10005ae0 = ptrtoint i32* %stack_var_-1608 to i32
  store i32 %v2_10005ae0, i32* %r15.global-to-local, align 4
  %v2_10005ae4 = ptrtoint i32* %stack_var_-1616 to i32
  store i32 %v2_10005ae4, i32* %r16.global-to-local, align 4
  %v2_10005f1c = ptrtoint i32* %stack_var_-1136 to i32
  %v2_10005ddc = ptrtoint i32* %stack_var_-1612 to i32
  %v1_10005e74 = bitcast i32* %stack_var_-1552 to i8*
  %v2_10005e38 = ptrtoint i32* %stack_var_-1600 to i32
  br label %dec_label_pc_10005ae8

dec_label_pc_10005ae8:                            ; preds = %dec_label_pc_10005f40, %dec_label_pc_10005edc, %dec_label_pc_10005ed0, %dec_label_pc_10005e70, %dec_label_pc_10005cc0, %dec_label_pc_10005cb0, %dec_label_pc_10005ba0, %dec_label_pc_10005f80, %dec_label_pc_10005f74, %dec_label_pc_10005ef4, %dec_label_pc_10005ebc, %dec_label_pc_10005df8, %dec_label_pc_10005d24, %dec_label_pc_10005c74, %dec_label_pc_10005a98
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005af850 = load i32, i32* @r28, align 4
  %v4_10005af852 = inttoptr i32 %v2_10005af850 to i32*
  store i32 0, i32* %v4_10005af852, align 4
  %v0_10005afc53 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005afc54 = add i32 %v0_10005afc53, 4
  store i32 %v1_10005afc54, i32* %r9.global-to-local, align 4
  %v0_10005b0055 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005b0056 = add i32 %v0_10005b0055, -1
  store i32 %v1_10005b0056, i32* %ctr.global-to-local, align 4
  %v2_10005b0057 = icmp eq i32 %v1_10005b0056, 0
  br i1 %v2_10005b0057, label %dec_label_pc_10005b04, label %dec_label_pc_10005af8.dec_label_pc_10005af8_crit_edge

dec_label_pc_10005af8.dec_label_pc_10005af8_crit_edge: ; preds = %dec_label_pc_10005ae8, %dec_label_pc_10005af8.dec_label_pc_10005af8_crit_edge
  %v1_10005afc58 = phi i32 [ %v1_10005afc, %dec_label_pc_10005af8.dec_label_pc_10005af8_crit_edge ], [ %v1_10005afc54, %dec_label_pc_10005ae8 ]
  %v0_10005af8.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005af8 = load i32, i32* @r28, align 4
  %v3_10005af8 = add i32 %v2_10005af8, %v1_10005afc58
  %v4_10005af8 = inttoptr i32 %v3_10005af8 to i32*
  store i32 %v0_10005af8.pre, i32* %v4_10005af8, align 4
  %v0_10005afc = load i32, i32* %r9.global-to-local, align 4
  %v1_10005afc = add i32 %v0_10005afc, 4
  store i32 %v1_10005afc, i32* %r9.global-to-local, align 4
  %v0_10005b00 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005b00 = add i32 %v0_10005b00, -1
  store i32 %v1_10005b00, i32* %ctr.global-to-local, align 4
  %v2_10005b00 = icmp eq i32 %v1_10005b00, 0
  br i1 %v2_10005b00, label %dec_label_pc_10005b04, label %dec_label_pc_10005af8.dec_label_pc_10005af8_crit_edge

dec_label_pc_10005b04:                            ; preds = %dec_label_pc_10005af8.dec_label_pc_10005af8_crit_edge, %dec_label_pc_10005ae8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10005b1459 = load i32, i32* @r29, align 4
  %v4_10005b1461 = inttoptr i32 %v2_10005b1459 to i32*
  store i32 0, i32* %v4_10005b1461, align 4
  %v0_10005b1862 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005b1863 = add i32 %v0_10005b1862, 4
  store i32 %v1_10005b1863, i32* %r9.global-to-local, align 4
  %v0_10005b1c64 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005b1c65 = add i32 %v0_10005b1c64, -1
  store i32 %v1_10005b1c65, i32* %ctr.global-to-local, align 4
  %v2_10005b1c66 = icmp eq i32 %v1_10005b1c65, 0
  br i1 %v2_10005b1c66, label %dec_label_pc_10005b20, label %dec_label_pc_10005b14.dec_label_pc_10005b14_crit_edge

dec_label_pc_10005b14.dec_label_pc_10005b14_crit_edge: ; preds = %dec_label_pc_10005b04, %dec_label_pc_10005b14.dec_label_pc_10005b14_crit_edge
  %v1_10005b1867 = phi i32 [ %v1_10005b18, %dec_label_pc_10005b14.dec_label_pc_10005b14_crit_edge ], [ %v1_10005b1863, %dec_label_pc_10005b04 ]
  %v0_10005b14.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005b14 = load i32, i32* @r29, align 4
  %v3_10005b14 = add i32 %v2_10005b14, %v1_10005b1867
  %v4_10005b14 = inttoptr i32 %v3_10005b14 to i32*
  store i32 %v0_10005b14.pre, i32* %v4_10005b14, align 4
  %v0_10005b18 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005b18 = add i32 %v0_10005b18, 4
  store i32 %v1_10005b18, i32* %r9.global-to-local, align 4
  %v0_10005b1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005b1c = add i32 %v0_10005b1c, -1
  store i32 %v1_10005b1c, i32* %ctr.global-to-local, align 4
  %v2_10005b1c = icmp eq i32 %v1_10005b1c, 0
  br i1 %v2_10005b1c, label %dec_label_pc_10005b20, label %dec_label_pc_10005b14.dec_label_pc_10005b14_crit_edge

dec_label_pc_10005b20:                            ; preds = %dec_label_pc_10005b14.dec_label_pc_10005b14_crit_edge, %dec_label_pc_10005b04
  %v3_10005b20 = load i32, i32* @global_var_1001c2a8.78, align 4
  %v3_10005b24 = icmp eq i32 %v3_10005b20, -1
  br i1 %v3_10005b24, label %dec_label_pc_10005b4c, label %dec_label_pc_10005b2c

dec_label_pc_10005b2c:                            ; preds = %dec_label_pc_10005b20
  %v1_10005b2c = call i32 @__asm_rlwinm(i32 %v3_10005b20, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005b34 = load i32, i32* @r30, align 4
  %v2_10005b34 = add i32 %v1_10005b34, %v1_10005b2c
  %v1_10005b38 = urem i32 %v3_10005b20, 32
  %v1_10005b3c = add i32 %v2_10005b34, 232
  %v2_10005b3c = inttoptr i32 %v1_10005b3c to i32*
  %v3_10005b3c = load i32, i32* %v2_10005b3c, align 4
  %v3_10005b40 = shl i32 1, %v1_10005b38
  store i32 %v3_10005b40, i32* %r0.global-to-local, align 4
  %v2_10005b44 = or i32 %v3_10005b3c, %v3_10005b40
  store i32 %v2_10005b44, i32* %r9.global-to-local, align 4
  store i32 %v2_10005b44, i32* %v2_10005b3c, align 4
  br label %dec_label_pc_10005b4c

dec_label_pc_10005b4c:                            ; preds = %dec_label_pc_10005b20, %dec_label_pc_10005b2c
  %v3_10005b4c = load i32, i32* @global_var_1001c2ac.104, align 4
  store i32 %v3_10005b4c, i32* %r0.global-to-local, align 4
  %v3_10005b54 = icmp eq i32 %v3_10005b4c, -1
  br i1 %v3_10005b54, label %dec_label_pc_10005d38, label %dec_label_pc_10005b5c

dec_label_pc_10005b5c:                            ; preds = %dec_label_pc_10005d38, %dec_label_pc_10005b4c, %dec_label_pc_10005d90
  %v3_10005c88 = phi i32 [ -1, %dec_label_pc_10005d38 ], [ %v3_10005b4c, %dec_label_pc_10005b4c ], [ %v3_10005c88.pre, %dec_label_pc_10005d90 ]
  %v3_10005b5c = load i8, i8* bitcast (i16* @global_var_1001c2e4.105 to i8*), align 2
  %v3_10005b60 = icmp eq i8 %v3_10005b5c, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005c90 = call i32 @__asm_rlwinm(i32 %v3_10005c88, i32 29, i32 3, i32 29)
  %v1_10005c94 = urem i32 %v3_10005c88, 32
  %v1_10005c98 = load i32, i32* @r30, align 4
  %v2_10005c98 = add i32 %v1_10005c98, %v1_10005c90
  %v0_10005c9c = load i32, i32* %r0.global-to-local, align 4
  %v3_10005c9c = shl i32 %v0_10005c9c, %v1_10005c94
  store i32 %v3_10005c9c, i32* %r0.global-to-local, align 4
  br i1 %v3_10005b60, label %dec_label_pc_10005c88, label %dec_label_pc_10005b68

dec_label_pc_10005b68:                            ; preds = %dec_label_pc_10005b5c
  %v1_10005b80 = add i32 %v2_10005c98, 360
  %v2_10005b80 = inttoptr i32 %v1_10005b80 to i32*
  %v3_10005b80 = load i32, i32* %v2_10005b80, align 4
  %v2_10005b84 = or i32 %v3_10005b80, %v3_10005c9c
  store i32 %v2_10005b84, i32* %r9.global-to-local, align 4
  store i32 %v2_10005b84, i32* %v2_10005b80, align 4
  br label %dec_label_pc_10005b8c

dec_label_pc_10005b8c:                            ; preds = %dec_label_pc_10005c88, %dec_label_pc_10005b68
  %v3_10005b8c = load i32, i32* @global_var_1001c2ac.104, align 4
  store i32 %v3_10005b8c, i32* %r0.global-to-local, align 4
  %v3_10005b90 = load i32, i32* @global_var_1001c2a8.78, align 4
  %v2_10005b94 = icmp slt i32 %v3_10005b90, %v3_10005b8c
  br i1 %v2_10005b94, label %dec_label_pc_10005b9c, label %dec_label_pc_10005ba0

dec_label_pc_10005b9c:                            ; preds = %dec_label_pc_10005b8c
  br label %dec_label_pc_10005ba0

dec_label_pc_10005ba0:                            ; preds = %dec_label_pc_10005b8c, %dec_label_pc_10005b9c
  %v0_10005ba8 = phi i32 [ %v3_10005b90, %dec_label_pc_10005b8c ], [ %v3_10005b8c, %dec_label_pc_10005b9c ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10005ba8 = add i32 %v0_10005ba8, 1
  store i32 10, i32* %stack_var_-1608, align 4
  store i32 268458952, i32* @lr, align 4
  %v5_10005bc4 = call i32 @function_10009420(i32 %v1_10005ba8, i32 %v2_10005abc, i32 %v2_10005ac4, i32 0, i32 %v2_10005ae0)
  %v6_10005bc4 = trunc i32 %v5_10005bc4 to i16
  %v4_10005bc8 = icmp eq i16 %v6_10005bc4, -1
  br i1 %v4_10005bc8, label %dec_label_pc_10005ae8, label %dec_label_pc_10005bd0

dec_label_pc_10005bd0:                            ; preds = %dec_label_pc_10005ba0
  %v4_10005bd0 = icmp eq i16 %v6_10005bc4, 0
  br i1 %v4_10005bd0, label %dec_label_pc_10005bd8, label %dec_label_pc_10005c04

dec_label_pc_10005bd8:                            ; preds = %dec_label_pc_10005bd0
  %v0_10005bdc = load i32, i32* %r19.global-to-local, align 4
  store i16 0, i16* %stack_var_-1624, align 2
  %v2_10005bec = srem i32 %v0_10005bdc, 6
  %v1_10005bf0 = sub i32 %v0_10005bdc, %v2_10005bec
  store i32 %v1_10005bf0, i32* %r9.global-to-local, align 4
  store i32 %v2_10005bec, i32* %r0.global-to-local, align 4
  %v1_10005bf8 = add i32 %v0_10005bdc, 1
  store i32 %v1_10005bf8, i32* %r19.global-to-local, align 4
  %v3_10005bfc = icmp eq i32 %v2_10005bec, 0
  br i1 %v3_10005bfc, label %dec_label_pc_10005dac, label %dec_label_pc_10005c04

dec_label_pc_10005c04:                            ; preds = %dec_label_pc_10005bd0, %dec_label_pc_10005bd8, %dec_label_pc_10005dac
  %v3_10005c04 = load i32, i32* @global_var_1001c2a8.78, align 4
  %v3_10005c08 = icmp eq i32 %v3_10005c04, -1
  br i1 %v3_10005c08, label %dec_label_pc_10005c2c, label %dec_label_pc_10005c10

dec_label_pc_10005c10:                            ; preds = %dec_label_pc_10005c04
  %v1_10005c10 = call i32 @__asm_rlwinm(i32 %v3_10005c04, i32 29, i32 3, i32 29)
  %v1_10005c14 = urem i32 %v3_10005c04, 32
  %v1_10005c18 = load i32, i32* @r30, align 4
  %v2_10005c18 = add i32 %v1_10005c18, %v1_10005c10
  store i32 %v2_10005c18, i32* %r9.global-to-local, align 4
  %v1_10005c1c = add i32 %v2_10005c18, 232
  %v2_10005c1c = inttoptr i32 %v1_10005c1c to i32*
  %v3_10005c1c = load i32, i32* %v2_10005c1c, align 4
  %v3_10005c20 = lshr i32 %v3_10005c1c, %v1_10005c14
  store i32 %v3_10005c20, i32* %r0.global-to-local, align 4
  %v1_10005c24 = urem i32 %v3_10005c20, 2
  store i32 %v1_10005c24, i32* %r9.global-to-local, align 4
  %v3_10005c24 = icmp eq i32 %v1_10005c24, 0
  br i1 %v3_10005c24, label %dec_label_pc_10005c2c, label %dec_label_pc_10005e30

dec_label_pc_10005c2c:                            ; preds = %dec_label_pc_10005c10, %dec_label_pc_10005c04
  %v3_10005c2c = load i8, i8* bitcast (i16* @global_var_1001c2e4.105 to i8*), align 2
  %v4_10005c2c = zext i8 %v3_10005c2c to i32
  store i32 %v4_10005c2c, i32* @r31, align 4
  %v3_10005c30 = icmp eq i8 %v3_10005c2c, 0
  %v3_10005cb0 = load i32, i32* @global_var_1001c2ac.104, align 4
  br i1 %v3_10005c30, label %dec_label_pc_10005cb0, label %dec_label_pc_10005c38

dec_label_pc_10005c38:                            ; preds = %dec_label_pc_10005c2c
  store i32 268566528, i32* @r31, align 4
  %v1_10005c40 = call i32 @__asm_rlwinm(i32 %v3_10005cb0, i32 29, i32 3, i32 29)
  %v1_10005c44 = urem i32 %v3_10005cb0, 32
  %v1_10005c48 = load i32, i32* @r30, align 4
  %v2_10005c48 = add i32 %v1_10005c48, %v1_10005c40
  store i32 %v2_10005c48, i32* %r9.global-to-local, align 4
  %v1_10005c4c = add i32 %v2_10005c48, 360
  %v2_10005c4c = inttoptr i32 %v1_10005c4c to i32*
  %v3_10005c4c = load i32, i32* %v2_10005c4c, align 4
  %v3_10005c50 = lshr i32 %v3_10005c4c, %v1_10005c44
  store i32 %v3_10005c50, i32* %r0.global-to-local, align 4
  %v1_10005c58 = urem i32 %v3_10005c50, 2
  %v3_10005c58 = icmp eq i32 %v1_10005c58, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001c2e4.105 to i8*), align 2
  br i1 %v3_10005c58, label %dec_label_pc_10005c68, label %dec_label_pc_10005dc8

dec_label_pc_10005c68:                            ; preds = %dec_label_pc_10005c38
  %v3_10005c68 = icmp eq i32 %v3_10005cb0, -1
  br i1 %v3_10005c68, label %dec_label_pc_10005c74, label %dec_label_pc_10005c70

dec_label_pc_10005c70:                            ; preds = %dec_label_pc_10005c68
  store i32 ptrtoint (i32* @global_var_10005c74.106 to i32), i32* @lr, align 4
  %v0_10005c70 = call i32 @function_10009158()
  br label %dec_label_pc_10005c74

dec_label_pc_10005c74:                            ; preds = %dec_label_pc_10005c68, %dec_label_pc_10005c70
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c2ac.104, align 4
  store i32 268459140, i32* @lr, align 4
  %v1_10005c80 = call i32 @function_1000a9a0(i32 1)
  br label %dec_label_pc_10005ae8

dec_label_pc_10005c88:                            ; preds = %dec_label_pc_10005b5c
  %v1_10005ca0 = add i32 %v2_10005c98, 232
  %v2_10005ca0 = inttoptr i32 %v1_10005ca0 to i32*
  %v3_10005ca0 = load i32, i32* %v2_10005ca0, align 4
  %v2_10005ca4 = or i32 %v3_10005ca0, %v3_10005c9c
  store i32 %v2_10005ca4, i32* %r9.global-to-local, align 4
  store i32 %v2_10005ca4, i32* %v2_10005ca0, align 4
  br label %dec_label_pc_10005b8c

dec_label_pc_10005cb0:                            ; preds = %dec_label_pc_10005c2c
  store i32 268566528, i32* @r27, align 4
  %v3_10005cb8 = icmp eq i32 %v3_10005cb0, -1
  br i1 %v3_10005cb8, label %dec_label_pc_10005ae8, label %dec_label_pc_10005cc0

dec_label_pc_10005cc0:                            ; preds = %dec_label_pc_10005cb0
  %v1_10005cc0 = call i32 @__asm_rlwinm(i32 %v3_10005cb0, i32 29, i32 3, i32 29)
  %v1_10005cc4 = urem i32 %v3_10005cb0, 32
  %v1_10005cc8 = load i32, i32* @r30, align 4
  %v2_10005cc8 = add i32 %v1_10005cc8, %v1_10005cc0
  store i32 %v2_10005cc8, i32* %r9.global-to-local, align 4
  %v1_10005ccc = add i32 %v2_10005cc8, 232
  %v2_10005ccc = inttoptr i32 %v1_10005ccc to i32*
  %v3_10005ccc = load i32, i32* %v2_10005ccc, align 4
  %v3_10005cd0 = lshr i32 %v3_10005ccc, %v1_10005cc4
  store i32 %v3_10005cd0, i32* %r0.global-to-local, align 4
  %v1_10005cd4 = urem i32 %v3_10005cd0, 2
  store i32 %v1_10005cd4, i32* %r9.global-to-local, align 4
  %v3_10005cd4 = icmp eq i32 %v1_10005cd4, 0
  br i1 %v3_10005cd4, label %dec_label_pc_10005ae8, label %dec_label_pc_10005cdc

dec_label_pc_10005cdc:                            ; preds = %dec_label_pc_10005cc0
  %v0_10005cdc = load i32, i32* @r31, align 4
  %v6_10005cdc = trunc i32 %v0_10005cdc to i16
  store i16 %v6_10005cdc, i16* %stack_var_-1624, align 2
  %v0_10005ce0 = call i32 @function_10009874()
  %v0_10005ce4 = load i32, i32* @r31, align 4
  %v2_10005ce4 = inttoptr i32 %v0_10005ce0 to i32*
  store i32 %v0_10005ce4, i32* %v2_10005ce4, align 4
  store i32 %v0_10005ce0, i32* @r23, align 4
  %v3_10005cf4 = load i32, i32* @global_var_1001c2ac.104, align 4
  store i32 268459264, i32* @lr, align 4
  %v4_10005cfc = call i32 @function_10009d7c(i32 %v3_10005cf4, i32 %v2_10005904, i32 2, i32 16386)
  %v3_10005d00 = icmp eq i32 %v4_10005cfc, -1
  br i1 %v3_10005d00, label %dec_label_pc_10005ed0, label %dec_label_pc_10005d08

dec_label_pc_10005d08:                            ; preds = %dec_label_pc_10005cdc
  %v3_10005d08 = icmp eq i32 %v4_10005cfc, 0
  br i1 %v3_10005d08, label %dec_label_pc_10005ee4, label %dec_label_pc_10005d10

dec_label_pc_10005d10:                            ; preds = %dec_label_pc_10005d08
  %v3_10005d10 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005d10 = sext i16 %v3_10005d10 to i32
  %v4_10005d14 = icmp eq i16 %v3_10005d10, 0
  br i1 %v4_10005d14, label %dec_label_pc_10005f80, label %dec_label_pc_10005d1c

dec_label_pc_10005d1c:                            ; preds = %dec_label_pc_10005d10
  %tmp49 = icmp ult i16 %v3_10005d10, 1025
  br i1 %tmp49, label %dec_label_pc_10005f18, label %dec_label_pc_10005d24

dec_label_pc_10005d24:                            ; preds = %dec_label_pc_10005d1c
  store i32 ptrtoint (i32* @global_var_10005d2c.107 to i32), i32* @lr, align 4
  %v0_10005d28 = call i32 @function_10009158()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c2ac.104, align 4
  br label %dec_label_pc_10005ae8

dec_label_pc_10005d38:                            ; preds = %dec_label_pc_10005b4c
  store i32 268459336, i32* @lr, align 4
  %v3_10005d44 = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  %v3_10005d48 = icmp eq i32 %v3_10005d44, -1
  store i32 %v3_10005d44, i32* @r31, align 4
  store i32 %v3_10005d44, i32* @global_var_1001c2ac.104, align 4
  br i1 %v3_10005d48, label %dec_label_pc_10005b5c, label %dec_label_pc_10005d58

dec_label_pc_10005d58:                            ; preds = %dec_label_pc_10005d38
  store i32 3, i32* @r4, align 4
  store i32 268459368, i32* @lr, align 4
  %v1_10005d64 = call i32 @function_10009070(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10005d70 = load i32, i32* @r31, align 4
  store i32 268459388, i32* @lr, align 4
  %v2_10005d78 = call i32 @function_10009070(i32 %v0_10005d70)
  %v3_10005d7c = load i32, i32* @global_var_1001c2b0.77, align 4
  store i32 %v3_10005d7c, i32* %r0.global-to-local, align 4
  %v3_10005d80 = icmp eq i32 %v3_10005d7c, 0
  br i1 %v3_10005d80, label %dec_label_pc_10005d90, label %dec_label_pc_10005d88

dec_label_pc_10005d88:                            ; preds = %dec_label_pc_10005d58
  store i32 %v3_10005d7c, i32* %ctr.global-to-local, align 4
  store i32 268459408, i32* @lr, align 4
  %v2_10005d8c = call i32 @function_10008c9c(i32 %v2_10005d78)
  br label %dec_label_pc_10005d90

dec_label_pc_10005d90:                            ; preds = %dec_label_pc_10005d58, %dec_label_pc_10005d88
  %v3_10005d90 = load i32, i32* @global_var_1001c2ac.104, align 4
  store i32 %v3_10005d90, i32* @r3, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001c2e4.105 to i8*), align 2
  store i32 268459432, i32* @lr, align 4
  %v0_10005da4 = call i32 @function_10009ca8()
  %v3_10005c88.pre = load i32, i32* @global_var_1001c2ac.104, align 4
  br label %dec_label_pc_10005b5c

dec_label_pc_10005dac:                            ; preds = %dec_label_pc_10005bd8
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005db4 = load i32, i32* @global_var_1001c2ac.104, align 4
  store i32 268459460, i32* @lr, align 4
  %v4_10005dc0 = call i32 @function_10009df4(i32 %v3_10005db4, i32 %v2_10005904, i32 2, i32 16384)
  br label %dec_label_pc_10005c04

dec_label_pc_10005dc8:                            ; preds = %dec_label_pc_10005c38
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1616, align 4
  store i32 4, i32* %stack_var_-1612, align 4
  store i32 268459500, i32* @lr, align 4
  %v5_10005de8 = call i32 @function_10009d10(i32 1, i32 4, i32 %v2_10005ae4, i32 %v2_10005ddc, i32 4)
  %v3_10005dec = load i32, i32* %stack_var_-1616, align 4
  store i32 %v3_10005dec, i32* %r0.global-to-local, align 4
  %v3_10005df0 = icmp eq i32 %v3_10005dec, 0
  br i1 %v3_10005df0, label %dec_label_pc_10005e70, label %dec_label_pc_10005df8

dec_label_pc_10005df8:                            ; preds = %dec_label_pc_10005dc8
  store i32 ptrtoint (i32* @global_var_10005e00.108 to i32), i32* @lr, align 4
  %v0_10005dfc = call i32 @function_10009158()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c2ac.104, align 4
  %v0_10005e08 = call i32 @function_10005f98()
  %v1_10005e08 = sext i32 %v0_10005e08 to i64
  %v5_10005e14 = mul nuw nsw i64 %v1_10005e08, 3435973837
  %v1_10005e182 = udiv i64 %v5_10005e14, 34359738368
  %v1_10005e18 = trunc i64 %v1_10005e182 to i32
  %v1_10005e1c = mul i32 %v1_10005e18, 10
  store i32 %v1_10005e1c, i32* %r0.global-to-local, align 4
  %v3_10005e20 = sub i32 %v0_10005e08, %v1_10005e1c
  %v1_10005e24 = add i32 %v3_10005e20, 1
  store i32 268459564, i32* @lr, align 4
  %v1_10005e28 = call i32 @function_1000a9a0(i32 %v1_10005e24)
  br label %dec_label_pc_10005ae8

dec_label_pc_10005e30:                            ; preds = %dec_label_pc_10005c10
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-1616, align 4
  store i32 ptrtoint (i32* @global_var_10005e44.110 to i32), i32* @lr, align 4
  %v3_10005e40 = call i32 @function_10009c40(i32 %v2_10005e38, i32 %v2_10005ae4, i32 %v1_10005c24)
  store i32 268459592, i32* @lr, align 4
  %v1_10005e44 = call i32 @function_100067d8(i32 %v3_10005e40)
  store i32 ptrtoint ([3 x i8]* @global_var_10005e4c.111 to i32), i32* @lr, align 4
  %v1_10005e48 = call i32 @function_100044e8(i32 %v1_10005e44)
  %v0_10005e4c = load i32, i32* %r17.global-to-local, align 4
  %v1_10005e4c = sub i32 0, %v0_10005e4c
  store i32 268459608, i32* @lr, align 4
  %v2_10005e54 = call i32 @function_10009278(i32 %v1_10005e4c, i32 9)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10005e5c = load i32, i32* @global_var_1001c2e0.88, align 4
  %v3_10005e60 = icmp eq i32 %v3_10005e5c, 0
  br i1 %v3_10005e60, label %dec_label_pc_10005e68, label %dec_label_pc_10005f0c

dec_label_pc_10005e68:                            ; preds = %dec_label_pc_10005e30, %dec_label_pc_10005f0c
  %v0_10005e6c = call i32 @function_1000a91c()
  br label %dec_label_pc_10005e70

dec_label_pc_10005e70:                            ; preds = %dec_label_pc_10005dc8, %dec_label_pc_10005e68
  store i32 268459640, i32* @lr, align 4
  %v2_10005e74 = call i32 @function_10008998(i8* %v1_10005e74)
  %v3_10005e74 = trunc i32 %v2_10005e74 to i8
  %v7_10005e78 = sext i8 %v3_10005e74 to i16
  store i16 %v7_10005e78, i16* %stack_var_-1624, align 2
  store i32 268459648, i32* @lr, align 4
  %v2_10005e7c = call i32 @function_10008c9c(i32 %v2_10005e74)
  store i32 %v2_10005e7c, i32* @global_var_1001c2d0.14, align 4
  %v0_10005e88 = load i32, i32* @r31, align 4
  %v1_10005e88 = add i32 %v0_10005e88, -15700
  %v2_10005e88 = inttoptr i32 %v1_10005e88 to i32*
  %v3_10005e88 = load i32, i32* %v2_10005e88, align 4
  store i32 268459676, i32* @lr, align 4
  %v4_10005e98 = call i32 @function_10009df4(i32 %v3_10005e88, i32 ptrtoint (i32* @global_var_1000bb90.112 to i32), i32 4, i32 16384)
  %v0_10005e9c = load i32, i32* @r31, align 4
  %v1_10005e9c = add i32 %v0_10005e9c, -15700
  %v2_10005e9c = inttoptr i32 %v1_10005e9c to i32*
  %v3_10005e9c = load i32, i32* %v2_10005e9c, align 4
  store i32 268459696, i32* @lr, align 4
  %v4_10005eac = call i32 @function_10009df4(i32 %v3_10005e9c, i32 %v2_10005904, i32 1, i32 16384)
  %v3_10005eb0 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005eb4 = icmp eq i16 %v3_10005eb0, 0
  br i1 %v4_10005eb4, label %dec_label_pc_10005ae8, label %dec_label_pc_10005ebc

dec_label_pc_10005ebc:                            ; preds = %dec_label_pc_10005e70
  %v4_10005eb0 = sext i16 %v3_10005eb0 to i32
  %v0_10005ebc = load i32, i32* @r31, align 4
  %v1_10005ebc = add i32 %v0_10005ebc, -15700
  %v2_10005ebc = inttoptr i32 %v1_10005ebc to i32*
  %v3_10005ebc = load i32, i32* %v2_10005ebc, align 4
  store i32 268459724, i32* @lr, align 4
  %v5_10005ec8 = call i32 @function_10009df4(i32 %v3_10005ebc, i32 %v2_10005828, i32 %v4_10005eb0, i32 16384)
  br label %dec_label_pc_10005ae8

dec_label_pc_10005ed0:                            ; preds = %dec_label_pc_10005f18, %dec_label_pc_10005cdc
  %v0_10005ed0 = load i32, i32* @r23, align 4
  %v1_10005ed0 = inttoptr i32 %v0_10005ed0 to i32*
  %v2_10005ed0 = load i32, i32* %v1_10005ed0, align 4
  %v3_10005ed4 = icmp eq i32 %v2_10005ed0, 11
  br i1 %v3_10005ed4, label %dec_label_pc_10005ae8, label %dec_label_pc_10005edc

dec_label_pc_10005edc:                            ; preds = %dec_label_pc_10005ed0
  %v3_10005edc = icmp eq i32 %v2_10005ed0, 4
  br i1 %v3_10005edc, label %dec_label_pc_10005ae8, label %dec_label_pc_10005ee4

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005f38, %dec_label_pc_10005edc, %dec_label_pc_10005d08
  %v3_10005ee4 = load i32, i32* @global_var_1001c2ac.104, align 4
  %v3_10005ee8 = icmp eq i32 %v3_10005ee4, -1
  br i1 %v3_10005ee8, label %dec_label_pc_10005ef4, label %dec_label_pc_10005ef0

dec_label_pc_10005ef0:                            ; preds = %dec_label_pc_10005ee4
  store i32 ptrtoint (i32* @global_var_10005ef4.113 to i32), i32* @lr, align 4
  %v0_10005ef0 = call i32 @function_10009158()
  br label %dec_label_pc_10005ef4

dec_label_pc_10005ef4:                            ; preds = %dec_label_pc_10005ee4, %dec_label_pc_10005ef0
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c2ac.104, align 4
  store i32 268459784, i32* @lr, align 4
  %v1_10005f04 = call i32 @function_1000a9a0(i32 1)
  br label %dec_label_pc_10005ae8

dec_label_pc_10005f0c:                            ; preds = %dec_label_pc_10005e30
  store i32 268459796, i32* @lr, align 4
  %v2_10005f10 = call i32 @function_10009278(i32 %v3_10005e5c, i32 9)
  br label %dec_label_pc_10005e68

dec_label_pc_10005f18:                            ; preds = %dec_label_pc_10005d1c
  %v0_10005f18 = load i32, i32* @r31, align 4
  %v1_10005f18 = load i32, i32* @r23, align 4
  %v2_10005f18 = inttoptr i32 %v1_10005f18 to i32*
  store i32 %v0_10005f18, i32* %v2_10005f18, align 4
  store i32 %v2_10005f1c, i32* @r31, align 4
  %v3_10005f28 = load i32, i32* @global_var_1001c2ac.104, align 4
  store i32 268459824, i32* @lr, align 4
  %v5_10005f2c = call i32 @function_10009d7c(i32 %v3_10005f28, i32 %v2_10005f1c, i32 %v4_10005d10, i32 16386)
  %v3_10005f30 = icmp eq i32 %v5_10005f2c, -1
  br i1 %v3_10005f30, label %dec_label_pc_10005ed0, label %dec_label_pc_10005f38

dec_label_pc_10005f38:                            ; preds = %dec_label_pc_10005f18
  %v3_10005f38 = icmp eq i32 %v5_10005f2c, 0
  br i1 %v3_10005f38, label %dec_label_pc_10005ee4, label %dec_label_pc_10005f40

dec_label_pc_10005f40:                            ; preds = %dec_label_pc_10005f38
  %v3_10005f40 = load i32, i32* @global_var_1001c2ac.104, align 4
  store i32 268459860, i32* @lr, align 4
  %v4_10005f50 = call i32 @function_10009d7c(i32 %v3_10005f40, i32 %v2_10005904, i32 2, i32 16384)
  %v3_10005f54 = load i32, i32* @global_var_1001c2ac.104, align 4
  %v3_10005f58 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005f58 = sext i16 %v3_10005f58 to i32
  store i32 268459880, i32* @lr, align 4
  %v5_10005f64 = call i32 @function_10009d7c(i32 %v3_10005f54, i32 %v2_10005f1c, i32 %v4_10005f58, i32 16384)
  %v3_10005f68 = load i16, i16* %stack_var_-1624, align 2
  %v4_10005f6c = icmp eq i16 %v3_10005f68, 0
  br i1 %v4_10005f6c, label %dec_label_pc_10005ae8, label %dec_label_pc_10005f74

dec_label_pc_10005f74:                            ; preds = %dec_label_pc_10005f40
  %v4_10005f68 = sext i16 %v3_10005f68 to i32
  store i32 268459900, i32* @lr, align 4
  %v3_10005f78 = call i32 @function_10000394(i32 %v2_10005f1c, i32 %v4_10005f68)
  br label %dec_label_pc_10005ae8

dec_label_pc_10005f80:                            ; preds = %dec_label_pc_10005d10
  %v3_10005f80 = load i32, i32* @global_var_1001c2ac.104, align 4
  store i32 268459924, i32* @lr, align 4
  %v4_10005f90 = call i32 @function_10009d7c(i32 %v3_10005f80, i32 %v2_10005904, i32 2, i32 16384)
  br label %dec_label_pc_10005ae8

; uselistorder directives
  uselistorder i16 %v3_10005f68, { 1, 0 }
  uselistorder i16 %v3_10005eb0, { 1, 0 }
  uselistorder i32 %v3_10005d44, { 1, 0, 2 }
  uselistorder i32 %v1_10005cd4, { 1, 0 }
  uselistorder i32 %v3_10005cb0, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v1_10005c24, { 2, 1, 0 }
  uselistorder i32 %v2_10005bec, { 1, 0, 2 }
  uselistorder i32 %v0_10005bdc, { 2, 0, 1 }
  uselistorder i32 %v2_10005c98, { 1, 0 }
  uselistorder i32 %v1_10005b1c, { 1, 0 }
  uselistorder i32 %v1_10005b18, { 1, 0 }
  uselistorder i32 %v1_10005b00, { 1, 0 }
  uselistorder i32 %v1_10005afc, { 1, 0 }
  uselistorder i32 %v2_10005f1c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10005ae4, { 1, 0, 2 }
  uselistorder i32 %v2_10005988, { 1, 0 }
  uselistorder i32 %v2_1000592c, { 1, 0 }
  uselistorder i32 %v2_10005904, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_100058a0, { 1, 0 }
  uselistorder i32 %v2_100057f8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_100057c4, { 1, 2, 0 }
  uselistorder i32 %v0_10005708, { 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1624, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 18, 16, 20, 21, 23, 22, 15, 24, 25, 26, 27, 14 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r15.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 10, 11, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 19, 20, 21 }
  uselistorder i32* %ctr.global-to-local, { 0, 4, 3, 2, 5, 6, 8, 7, 1, 9, 10 }
  uselistorder i8* bitcast (i16* @global_var_1001c2e4.105 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001c2ac.104, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 (i32)* @function_100056f8, { 1, 0 }
  uselistorder i32 (i32)* @function_10004b18, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100095b8, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_100089c0, { 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i8*, i32)* @function_10006058, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_10009f54, { 1, 0 }
  uselistorder i32* @r24, { 1, 2, 3, 5, 6, 4, 7, 0, 8, 9, 10, 11, 12, 13 }
  uselistorder label %dec_label_pc_10005ef4, { 1, 0 }
  uselistorder label %dec_label_pc_10005e70, { 1, 0 }
  uselistorder label %dec_label_pc_10005e68, { 1, 0 }
  uselistorder label %dec_label_pc_10005d90, { 1, 0 }
  uselistorder label %dec_label_pc_10005c74, { 1, 0 }
  uselistorder label %dec_label_pc_10005c04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10005b5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10005b14.dec_label_pc_10005b14_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005af8.dec_label_pc_10005af8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005ae8, { 7, 8, 0, 9, 1, 2, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_100058f4, { 2, 0, 1 }
}

define i32 @function_10005f98() local_unnamed_addr {
dec_label_pc_10005f98:
  %v3_10005fa0 = load i32, i32* @global_var_1001c364.114, align 4
  %v3_10005fa8 = load i32, i32* @global_var_1001c358.115, align 4
  %v1_10005fb0 = udiv i32 %v3_10005fa0, 524288
  %v3_10005fb4 = load i32, i32* @global_var_1001c360.116, align 4
  %v1_10005fb8 = mul i32 %v3_10005fa8, 2048
  %v2_10005fbc = xor i32 %v1_10005fb0, %v3_10005fa0
  %v2_10005fc0 = xor i32 %v1_10005fb8, %v3_10005fa8
  %v3_10005fc4 = load i32, i32* @global_var_1001c35c.117, align 4
  %v2_10005fc8 = xor i32 %v2_10005fbc, %v2_10005fc0
  %v1_10005fcc = udiv i32 %v2_10005fc0, 256
  %v2_10005fd0 = xor i32 %v2_10005fc8, %v1_10005fcc
  store i32 %v3_10005fc4, i32* @global_var_1001c358.115, align 4
  store i32 %v3_10005fb4, i32* @global_var_1001c35c.117, align 4
  store i32 %v3_10005fa0, i32* @global_var_1001c360.116, align 4
  store i32 %v2_10005fd0, i32* @global_var_1001c364.114, align 4
  ret i32 %v2_10005fd0

; uselistorder directives
  uselistorder i32 %v2_10005fd0, { 1, 0 }
  uselistorder i32 %v3_10005fa8, { 1, 0 }
  uselistorder i32 %v3_10005fa0, { 2, 1, 0 }
}

define i32 @function_10005fe8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005fe8:
  store i32 268460040, i32* @lr, align 4
  %v0_10006004 = call i32 @function_10009528()
  store i32 %v0_10006004, i32* @global_var_1001c358.115, align 4
  store i32 268460052, i32* @lr, align 4
  %v0_10006010 = call i32 @function_100091e8()
  store i32 268460060, i32* @lr, align 4
  %v0_10006018 = call i32 @function_10009230()
  %v2_1000601c = xor i32 %v0_10006010, %v0_10006018
  store i32 %v2_1000601c, i32* @global_var_1001c35c.117, align 4
  store i32 268460072, i32* @lr, align 4
  %v1_10006024 = call i32 @function_10009880(i32 %v0_10006018)
  %v3_10006028 = load i32, i32* @global_var_1001c35c.117, align 4
  %v2_10006038 = xor i32 %v3_10006028, %v1_10006024
  store i32 %v2_10006038, i32* @global_var_1001c364.114, align 4
  store i32 %v1_10006024, i32* @global_var_1001c360.116, align 4
  ret i32 %v1_10006024

; uselistorder directives
  uselistorder i32 %v1_10006024, { 2, 1, 0 }
  uselistorder i32 %v0_10006018, { 1, 0 }
  uselistorder i32 ()* @function_10009230, { 2, 1, 0 }
}

define i32 @function_10006058(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006058:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10006074 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268460184, i32* @lr, align 4
  %v1_10006094 = call i32 @function_10008338(i32 33)
  %v3_100060a0 = call i32 @function_10008284(i32 33, i32* null)
  %v2_100060ac = inttoptr i32 %v3_100060a0 to i8*
  %v3_100060ac = call i32 @function_100099ec(i32 %v2_10006074, i8* %v2_100060ac)
  %v3_100060b0 = icmp eq i32 %arg2, 0
  br i1 %v3_100060b0, label %dec_label_pc_10006134, label %dec_label_pc_100060b8

dec_label_pc_100060b8:                            ; preds = %dec_label_pc_10006058
  %v1_100060b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100060b8 = add i32 %v1_100060b8, %arg2
  store i32 %v2_100060b8, i32* %r26.global-to-local, align 4
  %v1_1000610c = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_100060cc

dec_label_pc_100060cc:                            ; preds = %dec_label_pc_100060cc, %dec_label_pc_100060b8
  %v3_100060cc = load i32, i32* @global_var_1001c364.114, align 4
  %v3_100060d4 = load i32, i32* @global_var_1001c358.115, align 4
  %v1_100060d8 = udiv i32 %v3_100060cc, 524288
  %v3_100060dc = load i32, i32* @global_var_1001c360.116, align 4
  %v1_100060e0 = mul i32 %v3_100060d4, 2048
  %v2_100060e4 = xor i32 %v1_100060d8, %v3_100060cc
  %v2_100060e8 = xor i32 %v1_100060e0, %v3_100060d4
  %v3_100060ec = load i32, i32* @global_var_1001c35c.117, align 4
  %v2_100060f0 = xor i32 %v2_100060e4, %v2_100060e8
  %v1_100060f4 = udiv i32 %v2_100060e8, 256
  %v2_100060f8 = xor i32 %v2_100060f0, %v1_100060f4
  store i32 %v2_100060f8, i32* %r29.global-to-local, align 4
  store i32 %v3_100060ec, i32* @global_var_1001c358.115, align 4
  store i32 %v2_100060f8, i32* @global_var_1001c364.114, align 4
  store i32 %v3_100060dc, i32* @global_var_1001c35c.117, align 4
  store i32 %v3_100060cc, i32* @global_var_1001c360.116, align 4
  store i32 268460304, i32* @lr, align 4
  %v2_1000610c = call i32 @function_10008998(i8* %v1_1000610c)
  %v0_10006110 = load i32, i32* %r29.global-to-local, align 4
  %v2_10006110 = urem i32 %v0_10006110, %v2_1000610c
  store i32 %v2_10006110, i32* %r29.global-to-local, align 4
  %v0_1000611c = load i32, i32* @r1, align 4
  %v2_1000611c = add i32 %v0_1000611c, %v2_10006110
  %v1_10006120 = add i32 %v2_1000611c, 8
  %v2_10006120 = inttoptr i32 %v1_10006120 to i8*
  %v3_10006120 = load i8, i8* %v2_10006120, align 1
  %v2_10006124 = load i32, i32* %r31.global-to-local, align 4
  %v3_10006124 = inttoptr i32 %v2_10006124 to i8*
  store i8 %v3_10006120, i8* %v3_10006124, align 1
  %v0_10006128 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006128 = add i32 %v0_10006128, 1
  store i32 %v1_10006128, i32* %r31.global-to-local, align 4
  %v1_1000612c = load i32, i32* %r26.global-to-local, align 4
  %v4_1000612c = icmp eq i32 %v1_10006128, %v1_1000612c
  br i1 %v4_1000612c, label %dec_label_pc_10006134, label %dec_label_pc_100060cc

dec_label_pc_10006134:                            ; preds = %dec_label_pc_100060cc, %dec_label_pc_10006058
  store i32 268460348, i32* @lr, align 4
  %v1_10006138 = call i32 @function_100082ac(i32 33)
  ret i32 %v1_10006138

; uselistorder directives
  uselistorder i32 %v3_100060d4, { 1, 0 }
  uselistorder i32 %v3_100060cc, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_100082ac, { 0, 3, 2, 1, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32*)* @function_10008284, { 30, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32)* @function_10008338, { 0, 1, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000616c() local_unnamed_addr {
dec_label_pc_1000616c:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_1000616c = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_1000616c, 1
  br i1 %tmp19, label %dec_label_pc_1000616c.dec_label_pc_10006220_crit_edge, label %dec_label_pc_10006184

dec_label_pc_1000616c.dec_label_pc_10006220_crit_edge: ; preds = %dec_label_pc_1000616c
  %v0_10006230.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006220

dec_label_pc_10006184:                            ; preds = %dec_label_pc_1000616c
  %v3_10006194 = load i32, i32* @global_var_1001c364.114, align 4
  store i32 %v3_10006194, i32* %r7.global-to-local, align 4
  %v3_10006198 = load i32, i32* @global_var_1001c360.116, align 4
  store i32 %v3_10006198, i32* %r5.global-to-local, align 4
  %v3_1000619c = load i32, i32* @global_var_1001c35c.117, align 4
  store i32 %v3_1000619c, i32* %r6.global-to-local, align 4
  %v3_100061a0 = load i32, i32* @global_var_1001c358.115, align 4
  br label %dec_label_pc_100061cc

dec_label_pc_100061a8:                            ; preds = %dec_label_pc_100061cc
  %v1_100061a8 = load i32, i32* @r3, align 4
  %v2_100061a8 = inttoptr i32 %v1_100061a8 to i32*
  store i32 %v2_100061f0, i32* %v2_100061a8, align 4
  %v0_100061ac = load i32, i32* @r4, align 4
  %v1_100061ac = add i32 %v0_100061ac, -4
  store i32 %v1_100061ac, i32* @r4, align 4
  %v0_100061b0 = load i32, i32* @r3, align 4
  %v1_100061b0 = add i32 %v0_100061b0, 4
  br label %dec_label_pc_100061b4

dec_label_pc_100061b4:                            ; preds = %dec_label_pc_10006204, %dec_label_pc_100061a8
  %v0_100061b4 = phi i32 [ %v0_100061b4.pr, %dec_label_pc_10006204 ], [ %v1_100061ac, %dec_label_pc_100061a8 ]
  %storemerge = phi i32 [ %v1_10006208, %dec_label_pc_10006204 ], [ %v1_100061b0, %dec_label_pc_100061a8 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_100061b8 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_100061b4, 1
  br i1 %tmp20, label %dec_label_pc_10006210, label %dec_label_pc_100061c0

dec_label_pc_100061c0:                            ; preds = %dec_label_pc_100061b4
  %v0_100061c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_100061c0, i32* %r6.global-to-local, align 4
  %v0_100061c4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_100061c4, i32* %r5.global-to-local, align 4
  %v0_100061c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100061c8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100061cc

dec_label_pc_100061cc:                            ; preds = %dec_label_pc_10006184, %dec_label_pc_100061c0
  %v0_1000626c = phi i32 [ %v3_1000619c, %dec_label_pc_10006184 ], [ %v0_100061c0, %dec_label_pc_100061c0 ]
  %v0_10006250 = phi i32 [ %v3_10006198, %dec_label_pc_10006184 ], [ %v0_100061c4, %dec_label_pc_100061c0 ]
  %v0_10006254 = phi i32 [ %v3_10006194, %dec_label_pc_10006184 ], [ %v0_100061c8, %dec_label_pc_100061c0 ]
  %v0_10006234 = phi i32 [ %v3_100061a0, %dec_label_pc_10006184 ], [ %v0_100061b8, %dec_label_pc_100061c0 ]
  %v0_100061fc = phi i32 [ %v0_1000616c, %dec_label_pc_10006184 ], [ %v0_100061b4, %dec_label_pc_100061c0 ]
  %v2_100061cc = icmp sgt i32 %v0_100061fc, 3
  %v1_100061d0 = mul i32 %v0_10006234, 2048
  %v1_100061d4 = udiv i32 %v0_10006254, 524288
  %v2_100061d8 = xor i32 %v1_100061d0, %v0_10006234
  %v2_100061dc = xor i32 %v1_100061d4, %v0_10006254
  %v2_100061e4 = xor i32 %v2_100061dc, %v2_100061d8
  %v1_100061e8 = udiv i32 %v2_100061d8, 256
  %v2_100061f0 = xor i32 %v2_100061e4, %v1_100061e8
  store i32 %v2_100061f0, i32* %r0.global-to-local, align 4
  br i1 %v2_100061cc, label %dec_label_pc_100061a8, label %dec_label_pc_100061f8

dec_label_pc_100061f8:                            ; preds = %dec_label_pc_100061cc
  %v3_100061e0 = icmp eq i32 %v0_100061fc, 1
  store i32 %v2_100061f0, i32* %r0.global-to-local, align 4
  %v1_100061fc = add i32 %v0_100061fc, -2
  store i32 %v1_100061fc, i32* @r4, align 4
  br i1 %v3_100061e0, label %dec_label_pc_10006234, label %dec_label_pc_10006204

dec_label_pc_10006204:                            ; preds = %dec_label_pc_100061f8
  %v1_10006204 = trunc i32 %v2_100061f0 to i16
  %v2_10006204 = load i32, i32* @r3, align 4
  %v3_10006204 = inttoptr i32 %v2_10006204 to i16*
  store i16 %v1_10006204, i16* %v3_10006204, align 2
  %v0_10006208 = load i32, i32* @r3, align 4
  %v1_10006208 = add i32 %v0_10006208, 2
  %v0_100061b4.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_100061b4

dec_label_pc_10006210:                            ; preds = %dec_label_pc_100061b4
  %v0_10006210 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10006210, i32* @global_var_1001c364.114, align 4
  %v0_10006214 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10006214, i32* @global_var_1001c360.116, align 4
  %v0_10006218 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10006218, i32* @global_var_1001c35c.117, align 4
  store i32 %v0_100061b8, i32* @global_var_1001c358.115, align 4
  br label %dec_label_pc_10006220

dec_label_pc_10006220:                            ; preds = %dec_label_pc_1000616c.dec_label_pc_10006220_crit_edge, %dec_label_pc_10006210
  %v0_10006230 = phi i32 [ %v0_10006230.pre, %dec_label_pc_1000616c.dec_label_pc_10006220_crit_edge ], [ %storemerge, %dec_label_pc_10006210 ]
  ret i32 %v0_10006230

dec_label_pc_10006234:                            ; preds = %dec_label_pc_100061f8
  store i32 %v2_100061f0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006250, i32* @global_var_1001c35c.117, align 4
  store i32 %v0_10006254, i32* @global_var_1001c360.116, align 4
  store i32 %v2_100061f0, i32* @global_var_1001c364.114, align 4
  store i32 %v0_1000626c, i32* @global_var_1001c358.115, align 4
  %v1_10006270 = trunc i32 %v2_100061f0 to i8
  %v2_10006270 = load i32, i32* @r3, align 4
  %v3_10006270 = inttoptr i32 %v2_10006270 to i8*
  store i8 %v1_10006270, i8* %v3_10006270, align 1
  %v0_10006274 = load i32, i32* @r3, align 4
  ret i32 %v0_10006274

; uselistorder directives
  uselistorder i32 %v2_100061f0, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10006234, { 1, 0 }
  uselistorder i32 %v0_10006254, { 1, 2, 0 }
  uselistorder i32 %v0_1000616c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10006220, { 1, 0 }
  uselistorder label %dec_label_pc_100061cc, { 1, 0 }
}

define i32 @function_10006278(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006278:
  store i32 %arg1, i32* @r31, align 4
  %v3_10006284 = icmp eq i32 %arg1, 0
  br i1 %v3_10006284, label %dec_label_pc_100062a8, label %dec_label_pc_10006290

dec_label_pc_10006290:                            ; preds = %dec_label_pc_10006278
  %v1_10006290 = add i32 %arg1, 4
  %v2_10006290 = inttoptr i32 %v1_10006290 to i32*
  %v3_10006290 = load i32, i32* %v2_10006290, align 4
  store i32 %v3_10006290, i32* @r3, align 4
  %v3_10006294 = icmp eq i32 %v3_10006290, 0
  br i1 %v3_10006294, label %dec_label_pc_100062a0, label %dec_label_pc_1000629c

dec_label_pc_1000629c:                            ; preds = %dec_label_pc_10006290
  store i32 268460704, i32* @lr, align 4
  %v0_1000629c = call i32 @function_1000a274()
  %v0_100062a0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100062a0

dec_label_pc_100062a0:                            ; preds = %dec_label_pc_10006290, %dec_label_pc_1000629c
  %v0_100062a0 = phi i32 [ %arg1, %dec_label_pc_10006290 ], [ %v0_100062a0.pre, %dec_label_pc_1000629c ]
  store i32 %v0_100062a0, i32* @r3, align 4
  store i32 268460712, i32* @lr, align 4
  %v0_100062a4 = call i32 @function_1000a274()
  br label %dec_label_pc_100062a8

dec_label_pc_100062a8:                            ; preds = %dec_label_pc_10006278, %dec_label_pc_100062a0
  %v0_100062b8 = phi i32 [ 0, %dec_label_pc_10006278 ], [ %v0_100062a4, %dec_label_pc_100062a0 ]
  ret i32 %v0_100062b8

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100062a8, { 1, 0 }
  uselistorder label %dec_label_pc_100062a0, { 1, 0 }
}

define i32 @function_100062bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100062bc:
  %cr4_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-4308 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-2096 = alloca i32, align 4
  %stack_var_-2108 = alloca i16, align 2
  %stack_var_-4284 = alloca i32, align 4
  %stack_var_-4300 = alloca i32, align 4
  %stack_var_-4143 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %v0_100062c0 = load i32, i32* @lr, align 4
  store i32 %v0_100062c0, i32* %r0.global-to-local, align 4
  %v0_100062c4 = call i32 @__asm_mfcr()
  %v0_100062cc = load i32, i32* @r29, align 4
  store i32 %v0_100062c4, i32* @r29, align 4
  %v2_100062e0 = ptrtoint i32* %stack_var_-4156 to i32
  %v2_100062e8 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v2_100062e8, i32* %r26.global-to-local, align 4
  %v0_100062ec = load i32, i32* %r0.global-to-local, align 4
  %v0_1000630c = load i32, i32* @r28, align 4
  store i32 268460828, i32* @lr, align 4
  %v2_10006318 = call i32 @function_1000a204(i32 1, i32 8)
  store i32 %v2_10006318, i32* %r25.global-to-local, align 4
  %v0_10006320 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006328.118 to i32), i32* @lr, align 4
  %v1_10006324 = inttoptr i32 %v0_10006320 to i8*
  %v2_10006324 = call i32 @function_10008998(i8* %v1_10006324)
  %v2_10006328 = ptrtoint i32* %stack_var_-4143 to i32
  store i32 %v2_10006328, i32* %r10.global-to-local, align 4
  %v1_1000632c = add i32 %v2_10006324, 1
  store i32 %v2_100062e8, i32* %r7.global-to-local, align 4
  %v1_10006338 = add i32 %v2_10006324, 2
  store i32 %v1_10006338, i32* %ctr.global-to-local, align 4
  %tmp94 = icmp sgt i32 %v1_1000632c, -1
  br i1 %tmp94, label %dec_label_pc_10006360.preheader, label %dec_label_pc_10006360.preheader.thread

dec_label_pc_10006360.preheader:                  ; preds = %dec_label_pc_100062bc
  %v3_10006334 = icmp eq i32 %v1_1000632c, 0
  %v1_1000636013 = or i32 %v2_10006328, 1
  store i32 %v1_1000636013, i32* %r11.global-to-local, align 4
  store i32 %v1_1000632c, i32* %ctr.global-to-local, align 4
  br i1 %v3_10006334, label %dec_label_pc_10006390, label %dec_label_pc_10006368.lr.ph

dec_label_pc_10006368.lr.ph:                      ; preds = %dec_label_pc_10006360.preheader
  %v0_10006368.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006368

dec_label_pc_1000634c:                            ; preds = %dec_label_pc_10006378
  %v3_1000634c = inttoptr i32 %v2_1000634c to i8*
  store i8 %v2_10006368, i8* %v3_1000634c, align 1
  %v0_10006350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006350 = urem i32 %v0_10006350, 256
  %v0_10006354 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006354 = add i32 %v0_10006354, 1
  store i32 %v1_10006354, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006358

dec_label_pc_10006358:                            ; preds = %dec_label_pc_10006380, %dec_label_pc_1000634c
  %v0_1000635c = phi i32 [ %v0_1000635c.pre, %dec_label_pc_10006380 ], [ %v1_10006354, %dec_label_pc_1000634c ]
  %v0_1000637820 = phi i32 [ 0, %dec_label_pc_10006380 ], [ %v1_10006350, %dec_label_pc_1000634c ]
  %v0_10006358 = load i32, i32* @r29, align 4
  %v1_10006358 = add i32 %v0_10006358, 1
  store i32 %v1_10006358, i32* @r29, align 4
  store i32 %v0_1000635c, i32* %r10.global-to-local, align 4
  %v1_10006360 = add i32 %v0_1000635c, 1
  store i32 %v1_10006360, i32* %r11.global-to-local, align 4
  %v0_10006364 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006364 = add i32 %v0_10006364, -1
  store i32 %v1_10006364, i32* %ctr.global-to-local, align 4
  %v2_10006364 = icmp eq i32 %v1_10006364, 0
  br i1 %v2_10006364, label %dec_label_pc_10006390, label %dec_label_pc_10006368

dec_label_pc_10006368:                            ; preds = %dec_label_pc_10006368.lr.ph, %dec_label_pc_10006358
  %v2_1000634c = phi i32 [ %v2_10006328, %dec_label_pc_10006368.lr.ph ], [ %v0_1000635c, %dec_label_pc_10006358 ]
  %v0_10006380 = phi i32 [ 0, %dec_label_pc_10006368.lr.ph ], [ %v0_1000637820, %dec_label_pc_10006358 ]
  %v0_10006368 = phi i32 [ %v0_10006368.pre, %dec_label_pc_10006368.lr.ph ], [ %v1_10006358, %dec_label_pc_10006358 ]
  %v1_10006368 = inttoptr i32 %v0_10006368 to i8*
  %v2_10006368 = load i8, i8* %v1_10006368, align 1
  %v3_10006368 = zext i8 %v2_10006368 to i32
  store i32 %v3_10006368, i32* %r0.global-to-local, align 4
  %v3_1000636c = icmp eq i8 %v2_10006368, 46
  br i1 %v3_1000636c, label %dec_label_pc_10006380, label %dec_label_pc_10006378

dec_label_pc_10006378:                            ; preds = %dec_label_pc_10006368
  %v3_10006370 = icmp eq i8 %v2_10006368, 0
  %v1_10006378 = add nsw i32 %v0_10006380, 1
  store i32 %v1_10006378, i32* %r9.global-to-local, align 4
  br i1 %v3_10006370, label %dec_label_pc_10006380, label %dec_label_pc_1000634c

dec_label_pc_10006380:                            ; preds = %dec_label_pc_10006378, %dec_label_pc_10006368
  %v1_10006380 = trunc i32 %v0_10006380 to i8
  %v2_10006380 = load i32, i32* %r7.global-to-local, align 4
  %v3_10006380 = inttoptr i32 %v2_10006380 to i8*
  store i8 %v1_10006380, i8* %v3_10006380, align 1
  %v0_10006384 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006384, i32* %r7.global-to-local, align 4
  %v0_1000635c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006358

dec_label_pc_10006390:                            ; preds = %dec_label_pc_10006358, %dec_label_pc_10006360.preheader.thread, %dec_label_pc_10006360.preheader
  %v2_10006398 = phi i32 [ %v2_10006328, %dec_label_pc_10006360.preheader ], [ %v2_10006328, %dec_label_pc_10006360.preheader.thread ], [ %v0_1000635c, %dec_label_pc_10006358 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10006398 = inttoptr i32 %v2_10006398 to i8*
  store i8 0, i8* %v3_10006398, align 1
  %v2_1000639c = ptrtoint i32* %stack_var_-4300 to i32
  store i32 -1, i32* @r30, align 4
  store i32 1, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100063ac.119 to i32), i32* @lr, align 4
  %v1_100063a8 = bitcast i32* %stack_var_-4144 to i8*
  %v2_100063a8 = call i32 @function_10008998(i8* %v1_100063a8)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100063b0 = load i32, i32* %r26.global-to-local, align 4
  %v2_100063b0 = add i32 %v0_100063b0, %v2_100063a8
  store i32 %v2_100063b0, i32* %r29.global-to-local, align 4
  %v0_100063bc = load i32, i32* @r30, align 4
  %v3_100063bc = icmp eq i32 %v0_100063bc, -1
  store i1 %v3_100063bc, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-4300, align 4
  %v2_100063c4 = ptrtoint i32* %stack_var_-4284 to i32
  store i32 %v2_100063c4, i32* @r31, align 4
  %v2_100063cc = ptrtoint i16* %stack_var_-2108 to i32
  store i32 %v2_100063cc, i32* %r19.global-to-local, align 4
  store i32 268461016, i32* @lr, align 4
  %v2_100063d4 = call i32 @function_10008998(i8* %v1_100063a8)
  %v1_100063d8 = add i32 %v2_100063d4, 17
  store i32 %v1_100063d8, i32* %r23.global-to-local, align 4
  %v0_100063dc = call i32 @function_10005f98()
  %v1_100063dc = sext i32 %v0_100063dc to i64
  store i32 16, i32* @r4, align 4
  %v5_100063f0 = mul nuw nsw i64 %v1_100063dc, 2147516417
  store i32 %v2_1000639c, i32* @r3, align 4
  %v2_100063f8 = ptrtoint i32* %stack_var_-2096 to i32
  store i32 %v2_100063f8, i32* %r20.global-to-local, align 4
  %v1_100063fc2 = udiv i64 %v5_100063f0, 140737488355328
  %v1_100063fc = trunc i64 %v1_100063fc2 to i32
  store i32 %v1_100063fc, i32* %r0.global-to-local, align 4
  %v2_10006400 = add i32 %v1_100063fc, %v0_100063dc
  store i32 %v2_10006400, i32* %r9.global-to-local, align 4
  %v1_10006404 = urem i32 %v2_10006400, 65536
  store i32 %v1_10006404, i32* %r22.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000640c.121 to i32), i32* @lr, align 4
  %v0_10006408 = call i32 @function_10008a40()
  store i32 2, i32* %stack_var_-4300, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 134744072, i32* %r11.global-to-local, align 4
  %v0_10006420 = load i32, i32* %r29.global-to-local, align 4
  store i32 53, i32* %r9.global-to-local, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_10006438 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10006438, i32* %stack_var_-4156, align 4
  %v3_10006440 = add i32 %v0_10006420, 3
  %v4_10006440 = inttoptr i32 %v3_10006440 to i16*
  store i16 1, i16* %v4_10006440, align 2
  %v0_10006444 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006444 = trunc i32 %v0_10006444 to i16
  %v2_10006444 = load i32, i32* %r29.global-to-local, align 4
  %v3_10006444 = add i32 %v2_10006444, 1
  %v4_10006444 = inttoptr i32 %v3_10006444 to i16*
  store i16 %v1_10006444, i16* %v4_10006444, align 2
  %v2_100064e8 = ptrtoint i32* %stack_var_-4312 to i32
  %v2_1000651c = ptrtoint i32* %stack_var_-4308 to i32
  %v1_1000660c = bitcast i32* %stack_var_-2096 to i8*
  %v4_10006624 = zext i16 %tmp60 to i32
  %v3_10006628 = icmp eq i16 %tmp60, 0
  br label %dec_label_pc_10006448

dec_label_pc_10006448:                            ; preds = %dec_label_pc_10006588, %dec_label_pc_10006390
  %v0_10006448 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10006448, label %dec_label_pc_10006454, label %dec_label_pc_1000644c

dec_label_pc_1000644c:                            ; preds = %dec_label_pc_10006448
  store i32 ptrtoint ([3 x i8]* @global_var_10006454.122 to i32), i32* @lr, align 4
  %v0_10006450 = call i32 @function_10009158()
  br label %dec_label_pc_10006454

dec_label_pc_10006454:                            ; preds = %dec_label_pc_10006448, %dec_label_pc_1000644c
  store i32 268461156, i32* @lr, align 4
  %v3_10006460 = call i32 @function_10009ea8(i32 2, i32 2, i32 0)
  store i32 %v3_10006460, i32* @r3, align 4
  %v3_10006464 = icmp eq i32 %v3_10006460, -1
  store i1 %v3_10006464, i1* %cr4_eq.global-to-local, align 1
  store i32 %v3_10006460, i32* @r30, align 4
  br i1 %v3_10006464, label %dec_label_pc_10006590, label %dec_label_pc_10006470

dec_label_pc_10006470:                            ; preds = %dec_label_pc_10006454
  store i32 268461180, i32* @lr, align 4
  %v0_10006478 = call i32 @function_10009ca8()
  %v3_1000647c = icmp eq i32 %v0_10006478, -1
  br i1 %v3_1000647c, label %dec_label_pc_10006590, label %dec_label_pc_10006484

dec_label_pc_10006484:                            ; preds = %dec_label_pc_10006470
  %v0_10006484 = load i32, i32* @r30, align 4
  %v0_1000648c = load i32, i32* %r23.global-to-local, align 4
  store i32 268461208, i32* @lr, align 4
  %v4_10006494 = call i32 @function_10009df4(i32 %v0_10006484, i32 %v2_100062e0, i32 %v0_1000648c, i32 16384)
  %v3_10006498 = icmp eq i32 %v4_10006494, -1
  br i1 %v3_10006498, label %dec_label_pc_10006590, label %dec_label_pc_100064a0

dec_label_pc_100064a0:                            ; preds = %dec_label_pc_10006484
  %v0_100064a0 = load i32, i32* @r30, align 4
  store i32 %v0_100064a0, i32* @r4, align 4
  store i32 268461236, i32* @lr, align 4
  %v2_100064b0 = call i32 @function_10009070(i32 3)
  %v0_100064b4 = load i32, i32* @r30, align 4
  store i32 %v0_100064b4, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100064c8.123 to i32), i32* @lr, align 4
  %v2_100064c4 = call i32 @function_10009070(i32 4)
  store i32 32, i32* %r0.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100064d8139 = load i32, i32* @r31, align 4
  %v4_100064d8141 = inttoptr i32 %v2_100064d8139 to i32*
  store i32 0, i32* %v4_100064d8141, align 4
  %v0_100064dc142 = load i32, i32* %r9.global-to-local, align 4
  %v1_100064dc143 = add i32 %v0_100064dc142, 4
  store i32 %v1_100064dc143, i32* %r9.global-to-local, align 4
  %v0_100064e0144 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100064e0145 = add i32 %v0_100064e0144, -1
  store i32 %v1_100064e0145, i32* %ctr.global-to-local, align 4
  %v2_100064e0146 = icmp eq i32 %v1_100064e0145, 0
  br i1 %v2_100064e0146, label %dec_label_pc_100064e4, label %dec_label_pc_100064d8.dec_label_pc_100064d8_crit_edge

dec_label_pc_100064d8.dec_label_pc_100064d8_crit_edge: ; preds = %dec_label_pc_100064a0, %dec_label_pc_100064d8.dec_label_pc_100064d8_crit_edge
  %v1_100064dc147 = phi i32 [ %v1_100064dc, %dec_label_pc_100064d8.dec_label_pc_100064d8_crit_edge ], [ %v1_100064dc143, %dec_label_pc_100064a0 ]
  %v0_100064d8.pre = load i32, i32* %r11.global-to-local, align 4
  %v2_100064d8 = load i32, i32* @r31, align 4
  %v3_100064d8 = add i32 %v2_100064d8, %v1_100064dc147
  %v4_100064d8 = inttoptr i32 %v3_100064d8 to i32*
  store i32 %v0_100064d8.pre, i32* %v4_100064d8, align 4
  %v0_100064dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100064dc = add i32 %v0_100064dc, 4
  store i32 %v1_100064dc, i32* %r9.global-to-local, align 4
  %v0_100064e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100064e0 = add i32 %v0_100064e0, -1
  store i32 %v1_100064e0, i32* %ctr.global-to-local, align 4
  %v2_100064e0 = icmp eq i32 %v1_100064e0, 0
  br i1 %v2_100064e0, label %dec_label_pc_100064e4, label %dec_label_pc_100064d8.dec_label_pc_100064d8_crit_edge

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_100064d8.dec_label_pc_100064d8_crit_edge, %dec_label_pc_100064a0
  %v0_100064e4 = load i32, i32* @r30, align 4
  %v1_100064e4 = call i32 @__asm_rlwinm(i32 %v0_100064e4, i32 29, i32 3, i32 29)
  store i32 %v1_100064e4, i32* %r9.global-to-local, align 4
  store i32 %v2_100064e8, i32* %r0.global-to-local, align 4
  %v2_100064ec = add i32 %v1_100064e4, %v2_100064e8
  store i32 %v2_100064ec, i32* %r29.global-to-local, align 4
  %v0_100064f0 = load i32, i32* @r30, align 4
  %v1_100064f0 = urem i32 %v0_100064f0, 32
  store i32 %v1_100064f0, i32* %r28.global-to-local, align 4
  %v1_100064f4 = add i32 %v2_100064ec, 28
  %v2_100064f4 = inttoptr i32 %v1_100064f4 to i32*
  %v3_100064f4 = load i32, i32* %v2_100064f4, align 4
  %v3_100064fc = shl i32 1, %v1_100064f0
  %v1_10006500 = add i32 %v0_100064f0, 1
  %v2_10006504 = or i32 %v3_100064fc, %v3_100064f4
  store i32 %v2_10006504, i32* %r9.global-to-local, align 4
  store i32 %v2_10006504, i32* %v2_100064f4, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 %v2_1000651c, i32* %r7.global-to-local, align 4
  store i32 5, i32* %stack_var_-4308, align 4
  store i32 268461356, i32* @lr, align 4
  %v5_10006528 = call i32 @function_10009420(i32 %v1_10006500, i32 %v2_100063c4, i32 0, i32 0, i32 %v2_1000651c)
  %v3_1000652c = icmp eq i32 %v5_10006528, -1
  br i1 %v3_1000652c, label %dec_label_pc_100065a0, label %dec_label_pc_10006534

dec_label_pc_10006534:                            ; preds = %dec_label_pc_100064e4
  %v3_10006534 = icmp eq i32 %v5_10006528, 0
  br i1 %v3_10006534, label %dec_label_pc_10006580, label %dec_label_pc_1000653c

dec_label_pc_1000653c:                            ; preds = %dec_label_pc_10006534
  %v0_1000653c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000653c = add i32 %v0_1000653c, 28
  %v2_1000653c = inttoptr i32 %v1_1000653c to i32*
  %v3_1000653c = load i32, i32* %v2_1000653c, align 4
  %v1_10006540 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006540 = urem i32 %v1_10006540, 32
  %v3_10006540 = sub i32 0, %v1_10006540
  %v4_10006540 = urem i32 %v3_10006540, 32
  %v5_10006540 = shl i32 %v3_1000653c, %v4_10006540
  %v6_10006540 = xor i32 %v4_10006540, 31
  %v7_10006540 = lshr i32 %v3_1000653c, %v6_10006540
  %v8_10006540 = udiv i32 %v7_10006540, 2
  %v9_10006540 = or i32 %v8_10006540, %v5_10006540
  %v10_10006540 = and i32 %v1_10006540, 32
  %v11_10006540 = icmp ne i32 %v10_10006540, 0
  %v12_10006540 = lshr i32 -1, %v2_10006540
  %v13_10006540 = select i1 %v11_10006540, i32 0, i32 %v12_10006540
  %v14_10006540 = and i32 %v9_10006540, %v13_10006540
  %v15_10006540 = ashr i32 %v3_1000653c, 31
  %v16_10006540 = sub i32 -1, %v13_10006540
  %v17_10006540 = and i32 %v15_10006540, %v16_10006540
  %v18_10006540 = or i32 %v14_10006540, %v17_10006540
  store i32 %v18_10006540, i32* %r0.global-to-local, align 4
  %v1_10006544 = urem i32 %v18_10006540, 2
  store i32 %v1_10006544, i32* %r9.global-to-local, align 4
  %v3_10006544 = icmp eq i32 %v1_10006544, 0
  br i1 %v3_10006544, label %dec_label_pc_100065a0, label %dec_label_pc_1000654c

dec_label_pc_1000654c:                            ; preds = %dec_label_pc_1000653c
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_10006560 = load i32, i32* @r30, align 4
  store i32 268461416, i32* @lr, align 4
  %v6_10006564 = call i32 @function_10009db4(i32 %v0_10006560, i32 %v2_100063cc, i32 2048, i32 16384, i32 0, i32 0)
  store i32 %v6_10006564, i32* %r29.global-to-local, align 4
  %v0_1000656c = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006574.124 to i32), i32* @lr, align 4
  %v1_10006570 = inttoptr i32 %v0_1000656c to i8*
  %v2_10006570 = call i32 @function_10008998(i8* %v1_10006570)
  %v1_10006574 = add i32 %v2_10006570, 17
  %v2_10006578 = icmp ult i32 %v6_10006564, %v1_10006574
  br i1 %v2_10006578, label %dec_label_pc_10006580, label %dec_label_pc_10006604

dec_label_pc_10006580:                            ; preds = %dec_label_pc_10006604, %dec_label_pc_1000654c, %dec_label_pc_10006624, %dec_label_pc_10006534
  %v0_10006580 = load i32, i32* %r27.global-to-local, align 4
  %v3_10006580 = icmp eq i32 %v0_10006580, 5
  br i1 %v3_10006580, label %dec_label_pc_100065a0, label %dec_label_pc_10006588

dec_label_pc_10006588:                            ; preds = %dec_label_pc_10006590, %dec_label_pc_10006580
  %v0_10006588 = phi i32 [ %v0_10006598, %dec_label_pc_10006590 ], [ %v0_10006580, %dec_label_pc_10006580 ]
  %v1_10006588 = add i32 %v0_10006588, 1
  store i32 %v1_10006588, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10006448

dec_label_pc_10006590:                            ; preds = %dec_label_pc_10006484, %dec_label_pc_10006470, %dec_label_pc_10006454
  store i32 268461464, i32* @lr, align 4
  %v1_10006594 = call i32 @function_1000a9a0(i32 1)
  %v0_10006598 = load i32, i32* %r27.global-to-local, align 4
  %v3_10006598 = icmp eq i32 %v0_10006598, 5
  br i1 %v3_10006598, label %dec_label_pc_100065a0, label %dec_label_pc_10006588

dec_label_pc_100065a0:                            ; preds = %dec_label_pc_10006590, %dec_label_pc_10006580, %dec_label_pc_1000653c, %dec_label_pc_100064e4, %dec_label_pc_10006630.backedge, %dec_label_pc_10006630.preheader
  store i32 268461480, i32* @lr, align 4
  %v0_100065a4 = call i32 @function_10009158()
  %v0_100065a8 = load i32, i32* %r25.global-to-local, align 4
  %v1_100065a8 = inttoptr i32 %v0_100065a8 to i8*
  %v2_100065a8 = load i8, i8* %v1_100065a8, align 1
  %v3_100065a8 = zext i8 %v2_100065a8 to i32
  store i32 %v3_100065a8, i32* %r0.global-to-local, align 4
  %v3_100065ac = icmp eq i8 %v2_100065a8, 0
  br i1 %v3_100065ac, label %dec_label_pc_1000671c, label %dec_label_pc_100065b4

dec_label_pc_100065b4:                            ; preds = %dec_label_pc_100065a0, %dec_label_pc_1000672c
  %v0_100065b8 = phi i32 [ %v0_100065a8, %dec_label_pc_100065a0 ], [ 0, %dec_label_pc_1000672c ]
  store i32 %v0_100062ec, i32* %r0.global-to-local, align 4
  %v1_100065cc = call %0 @__asm_mtcrf(i32 8, i32 %v0_100062c4)
  store i32 %v0_1000630c, i32* %r28.global-to-local, align 4
  store i32 %v0_100062cc, i32* %r29.global-to-local, align 4
  ret i32 %v0_100065b8

dec_label_pc_10006604:                            ; preds = %dec_label_pc_1000654c
  store i32 %v2_100063f8, i32* %r26.global-to-local, align 4
  store i32 268461584, i32* @lr, align 4
  %v2_1000660c = call i32 @function_10008998(i8* %v1_1000660c)
  %v3_10006610 = load i16, i16* %stack_var_-2108, align 2
  %v4_10006610 = sext i16 %v3_10006610 to i32
  store i32 %v4_10006610, i32* %r0.global-to-local, align 4
  %v0_10006614 = load i32, i32* %r20.global-to-local, align 4
  %v1_10006618 = load i32, i32* %r22.global-to-local, align 4
  %v4_10006618 = icmp eq i32 %v4_10006610, %v1_10006618
  %v2_10006614 = add i32 %v2_1000660c, 5
  %v1_1000661c = add i32 %v2_10006614, %v0_10006614
  br i1 %v4_10006618, label %dec_label_pc_10006624, label %dec_label_pc_10006580

dec_label_pc_10006624:                            ; preds = %dec_label_pc_10006604
  store i32 %v4_10006624, i32* %r28.global-to-local, align 4
  br i1 %v3_10006628, label %dec_label_pc_10006580, label %dec_label_pc_10006630.preheader

dec_label_pc_10006630.preheader:                  ; preds = %dec_label_pc_10006624
  %v1_100066308 = add nsw i32 %v4_10006624, -1
  store i32 %v1_100066308, i32* %r0.global-to-local, align 4
  %v1_100066389 = urem i32 %v1_100066308, 65536
  store i32 %v1_100066389, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_1000664011 = icmp eq i32 %v1_100066389, 65535
  br i1 %v4_1000664011, label %dec_label_pc_100065a0, label %dec_label_pc_10006648

dec_label_pc_10006648:                            ; preds = %dec_label_pc_10006630.preheader, %dec_label_pc_10006630.backedge
  %v0_1000663049 = phi i32 [ %v1_10006638, %dec_label_pc_10006630.backedge ], [ %v1_100066389, %dec_label_pc_10006630.preheader ]
  %v0_100066a4 = phi i32 [ %storemerge, %dec_label_pc_10006630.backedge ], [ %v1_1000661c, %dec_label_pc_10006630.preheader ]
  store i32 %v0_100066a4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10006654110 = inttoptr i32 %v0_100066a4 to i8*
  %v2_10006654111 = load i8, i8* %v1_10006654110, align 1
  %v3_10006654112 = zext i8 %v2_10006654111 to i32
  store i32 %v3_10006654112, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_1000665c113 = icmp eq i8 %v2_10006654111, 0
  br i1 %v3_1000665c113, label %dec_label_pc_100066a0, label %dec_label_pc_1000666c.preheader

dec_label_pc_1000666c.preheader:                  ; preds = %dec_label_pc_10006648, %dec_label_pc_1000673c
  %v2_10006654119 = phi i8 [ %v2_10006654, %dec_label_pc_1000673c ], [ %v2_10006654111, %dec_label_pc_10006648 ]
  %v3_10006664122.in = phi i8 [ %v2_10006654, %dec_label_pc_1000673c ], [ %v2_10006654111, %dec_label_pc_10006648 ]
  %v1_10006660121.in = phi i32 [ %v3_10006654, %dec_label_pc_1000673c ], [ %v3_10006654112, %dec_label_pc_10006648 ]
  %v1_10006658120 = phi i32 [ %v1_10006658, %dec_label_pc_1000673c ], [ 1, %dec_label_pc_10006648 ]
  %v0_10006654118 = phi i32 [ %v1_10006740, %dec_label_pc_1000673c ], [ %v0_100066a4, %dec_label_pc_10006648 ]
  %v0_10006658117 = phi i32 [ %v0_1000665828, %dec_label_pc_1000673c ], [ 0, %dec_label_pc_10006648 ]
  %v0_100066a0116 = phi i32 [ %v2_1000673c, %dec_label_pc_1000673c ], [ 1, %dec_label_pc_10006648 ]
  br label %dec_label_pc_1000666c

dec_label_pc_1000666c:                            ; preds = %dec_label_pc_1000666c.preheader, %dec_label_pc_10006670
  %v1_1000673c = phi i32 [ 0, %dec_label_pc_10006670 ], [ %v1_10006658120, %dec_label_pc_1000666c.preheader ]
  %v0_1000667c.in = phi i32 [ %v3_1000668c, %dec_label_pc_10006670 ], [ %v1_10006660121.in, %dec_label_pc_1000666c.preheader ]
  %v0_10006740 = phi i32 [ %v2_10006688, %dec_label_pc_10006670 ], [ %v0_10006654118, %dec_label_pc_1000666c.preheader ]
  %v0_1000666c.in = phi i8 [ %v2_1000668c, %dec_label_pc_10006670 ], [ %v3_10006664122.in, %dec_label_pc_1000666c.preheader ]
  %v1_1000666c.in = phi i8 [ %v2_1000668c, %dec_label_pc_10006670 ], [ %v2_10006654119, %dec_label_pc_1000666c.preheader ]
  %v0_1000665828 = phi i32 [ 1, %dec_label_pc_10006670 ], [ %v0_10006658117, %dec_label_pc_1000666c.preheader ]
  %v0_1000666c = icmp eq i8 %v0_1000666c.in, -65
  %v1_1000666c = icmp ult i8 %v1_1000666c.in, -65
  %v2_1000666c = or i1 %v0_1000666c, %v1_1000666c
  br i1 %v2_1000666c, label %dec_label_pc_1000673c, label %dec_label_pc_10006670

dec_label_pc_10006670:                            ; preds = %dec_label_pc_1000666c
  %v0_1000667c = mul nuw nsw i32 %v0_1000667c.in, 256
  %v1_10006670 = add i32 %v0_10006740, 1
  %v2_10006670 = inttoptr i32 %v1_10006670 to i8*
  %v3_10006670 = load i8, i8* %v2_10006670, align 1
  %v4_10006670 = zext i8 %v3_10006670 to i32
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000667c = or i32 %v4_10006670, -49152
  %v1_10006684 = add nsw i32 %v2_1000667c, %v0_1000667c
  %v0_10006688 = load i32, i32* %r19.global-to-local, align 4
  %v2_10006688 = add i32 %v1_10006684, %v0_10006688
  store i32 %v2_10006688, i32* %r9.global-to-local, align 4
  %v1_1000668c = inttoptr i32 %v2_10006688 to i8*
  %v2_1000668c = load i8, i8* %v1_1000668c, align 1
  %v3_1000668c = zext i8 %v2_1000668c to i32
  store i32 %v3_1000668c, i32* %r0.global-to-local, align 4
  %v3_10006690 = icmp eq i8 %v2_1000668c, 0
  br i1 %v3_10006690, label %dec_label_pc_100066a0, label %dec_label_pc_1000666c

dec_label_pc_100066a0:                            ; preds = %dec_label_pc_10006648, %dec_label_pc_1000673c, %dec_label_pc_10006670
  %v0_100066a0103 = phi i32 [ %v0_100066a0116, %dec_label_pc_10006670 ], [ 1, %dec_label_pc_10006648 ], [ %v2_1000673c, %dec_label_pc_1000673c ]
  %v1_100066a0 = phi i32 [ 1, %dec_label_pc_10006670 ], [ 0, %dec_label_pc_10006648 ], [ %v0_1000665828, %dec_label_pc_1000673c ]
  %v2_100066a0 = add i32 %v1_100066a0, %v0_100066a0103
  store i32 %v2_100066a0, i32* %r10.global-to-local, align 4
  %v2_100066a4 = add i32 %v2_100066a0, %v0_100066a4
  %v3_100066a4 = inttoptr i32 %v2_100066a4 to i16*
  %v4_100066a4 = load i16, i16* %v3_100066a4, align 2
  %v5_100066a4 = zext i16 %v4_100066a4 to i32
  store i32 %v5_100066a4, i32* %r0.global-to-local, align 4
  %v1_100066ac = add i32 %v2_100066a4, 10
  store i32 %v1_100066ac, i32* @r29, align 4
  %v3_100066b0 = icmp eq i16 %v4_100066a4, 1
  br i1 %v3_100066b0, label %dec_label_pc_10006754, label %dec_label_pc_100066b8

dec_label_pc_100066b8:                            ; preds = %dec_label_pc_10006754, %dec_label_pc_100066a0
  store i32 %v1_100066ac, i32* %r9.global-to-local, align 4
  %v1_100066c4124 = inttoptr i32 %v1_100066ac to i8*
  %v2_100066c4125 = load i8, i8* %v1_100066c4124, align 1
  %v3_100066c4126 = zext i8 %v2_100066c4125 to i32
  store i32 %v3_100066c4126, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v3_100066cc127 = icmp eq i8 %v2_100066c4125, 0
  %v1_100066d0128 = mul nuw nsw i32 %v3_100066c4126, 256
  store i32 %v1_100066d0128, i32* %r10.global-to-local, align 4
  br i1 %v3_100066cc127, label %dec_label_pc_10006710, label %dec_label_pc_100066dc.preheader

dec_label_pc_100066dc.preheader:                  ; preds = %dec_label_pc_100066b8, %dec_label_pc_10006748
  %v2_100066c4133 = phi i8 [ %v2_100066c4, %dec_label_pc_10006748 ], [ %v2_100066c4125, %dec_label_pc_100066b8 ]
  %v3_100066d4136.in = phi i8 [ %v2_100066c4, %dec_label_pc_10006748 ], [ %v2_100066c4125, %dec_label_pc_100066b8 ]
  %v1_100066d0135 = phi i32 [ %v1_100066d0, %dec_label_pc_10006748 ], [ %v1_100066d0128, %dec_label_pc_100066b8 ]
  %v1_100066c8134 = phi i32 [ %v1_100066c8, %dec_label_pc_10006748 ], [ 1, %dec_label_pc_100066b8 ]
  %v0_100066c4132 = phi i32 [ %v1_1000674c, %dec_label_pc_10006748 ], [ %v1_100066ac, %dec_label_pc_100066b8 ]
  %v0_100066c8131 = phi i32 [ %v0_100066c838, %dec_label_pc_10006748 ], [ 0, %dec_label_pc_100066b8 ]
  %v0_10006710130 = phi i32 [ %v2_10006748, %dec_label_pc_10006748 ], [ 1, %dec_label_pc_100066b8 ]
  br label %dec_label_pc_100066dc

dec_label_pc_100066dc:                            ; preds = %dec_label_pc_100066dc.preheader, %dec_label_pc_100066e0
  %v1_10006748 = phi i32 [ 0, %dec_label_pc_100066e0 ], [ %v1_100066c8134, %dec_label_pc_100066dc.preheader ]
  %v0_100066ec = phi i32 [ %v1_10006704, %dec_label_pc_100066e0 ], [ %v1_100066d0135, %dec_label_pc_100066dc.preheader ]
  %v0_1000674c = phi i32 [ %v2_100066f8, %dec_label_pc_100066e0 ], [ %v0_100066c4132, %dec_label_pc_100066dc.preheader ]
  %v0_100066dc.in = phi i8 [ %v2_100066fc, %dec_label_pc_100066e0 ], [ %v3_100066d4136.in, %dec_label_pc_100066dc.preheader ]
  %v1_100066dc.in = phi i8 [ %v2_100066fc, %dec_label_pc_100066e0 ], [ %v2_100066c4133, %dec_label_pc_100066dc.preheader ]
  %v0_100066c838 = phi i32 [ 1, %dec_label_pc_100066e0 ], [ %v0_100066c8131, %dec_label_pc_100066dc.preheader ]
  %v0_100066dc = icmp eq i8 %v0_100066dc.in, -65
  %v1_100066dc = icmp ult i8 %v1_100066dc.in, -65
  %v2_100066dc = or i1 %v0_100066dc, %v1_100066dc
  br i1 %v2_100066dc, label %dec_label_pc_10006748, label %dec_label_pc_100066e0

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_100066dc
  %v1_100066e0 = add i32 %v0_1000674c, 1
  %v2_100066e0 = inttoptr i32 %v1_100066e0 to i8*
  %v3_100066e0 = load i8, i8* %v2_100066e0, align 1
  %v4_100066e0 = zext i8 %v3_100066e0 to i32
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100066ec = or i32 %v4_100066e0, -49152
  %v1_100066f4 = add nsw i32 %v2_100066ec, %v0_100066ec
  %v0_100066f8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100066f8 = add i32 %v1_100066f4, %v0_100066f8
  store i32 %v2_100066f8, i32* %r9.global-to-local, align 4
  %v1_100066fc = inttoptr i32 %v2_100066f8 to i8*
  %v2_100066fc = load i8, i8* %v1_100066fc, align 1
  %v3_100066fc = zext i8 %v2_100066fc to i32
  store i32 %v3_100066fc, i32* %r0.global-to-local, align 4
  %v3_10006700 = icmp eq i8 %v2_100066fc, 0
  %v1_10006704 = mul nuw nsw i32 %v3_100066fc, 256
  store i32 %v1_10006704, i32* %r10.global-to-local, align 4
  br i1 %v3_10006700, label %dec_label_pc_10006710, label %dec_label_pc_100066dc

dec_label_pc_10006710:                            ; preds = %dec_label_pc_100066b8, %dec_label_pc_10006748, %dec_label_pc_100066e0
  %v0_10006710109 = phi i32 [ %v0_10006710130, %dec_label_pc_100066e0 ], [ 1, %dec_label_pc_100066b8 ], [ %v2_10006748, %dec_label_pc_10006748 ]
  %v1_10006710 = phi i32 [ 1, %dec_label_pc_100066e0 ], [ 0, %dec_label_pc_100066b8 ], [ %v0_100066c838, %dec_label_pc_10006748 ]
  %v2_10006710 = add i32 %v1_10006710, %v0_10006710109
  %v2_10006714 = add i32 %v2_10006710, %v1_100066ac
  br label %dec_label_pc_10006630.backedge

dec_label_pc_10006630.backedge:                   ; preds = %dec_label_pc_10006710, %dec_label_pc_100067c0
  %v0_10006630 = phi i32 [ %v0_1000663049, %dec_label_pc_10006710 ], [ %v0_10006630.pre, %dec_label_pc_100067c0 ]
  %storemerge = phi i32 [ %v2_10006714, %dec_label_pc_10006710 ], [ %v2_100067c4, %dec_label_pc_100067c0 ]
  %v1_10006630 = add i32 %v0_10006630, -1
  store i32 %v1_10006630, i32* %r0.global-to-local, align 4
  %v1_10006638 = urem i32 %v1_10006630, 65536
  store i32 %v1_10006638, i32* %r28.global-to-local, align 4
  store i32 65535, i32* %r9.global-to-local, align 4
  %v4_10006640 = icmp eq i32 %v1_10006638, 65535
  br i1 %v4_10006640, label %dec_label_pc_100065a0, label %dec_label_pc_10006648

dec_label_pc_1000671c:                            ; preds = %dec_label_pc_100065a0
  %v1_1000671c = add i32 %v0_100065a8, 4
  %v2_1000671c = inttoptr i32 %v1_1000671c to i32*
  %v3_1000671c = load i32, i32* %v2_1000671c, align 4
  store i32 %v3_1000671c, i32* @r3, align 4
  %v3_10006720 = icmp eq i32 %v3_1000671c, 0
  br i1 %v3_10006720, label %dec_label_pc_1000672c, label %dec_label_pc_10006728

dec_label_pc_10006728:                            ; preds = %dec_label_pc_1000671c
  store i32 268461868, i32* @lr, align 4
  %v0_10006728 = call i32 @function_1000a274()
  %v0_1000672c.pre = load i32, i32* %r25.global-to-local, align 4
  br label %dec_label_pc_1000672c

dec_label_pc_1000672c:                            ; preds = %dec_label_pc_1000671c, %dec_label_pc_10006728
  %v0_1000672c = phi i32 [ %v0_100065a8, %dec_label_pc_1000671c ], [ %v0_1000672c.pre, %dec_label_pc_10006728 ]
  store i32 %v0_1000672c, i32* @r3, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 268461880, i32* @lr, align 4
  %v0_10006734 = call i32 @function_1000a274()
  br label %dec_label_pc_100065b4

dec_label_pc_1000673c:                            ; preds = %dec_label_pc_1000666c
  %v2_1000673c = add i32 %v1_1000673c, %v0_100066a0116
  store i32 %v2_1000673c, i32* %r10.global-to-local, align 4
  %v1_10006740 = add i32 %v0_10006740, 1
  store i32 %v1_10006740, i32* %r9.global-to-local, align 4
  %v1_10006654 = inttoptr i32 %v1_10006740 to i8*
  %v2_10006654 = load i8, i8* %v1_10006654, align 1
  %v3_10006654 = zext i8 %v2_10006654 to i32
  store i32 %v3_10006654, i32* %r0.global-to-local, align 4
  %v1_10006658 = xor i32 %v0_1000665828, 1
  store i32 %v1_10006658, i32* %r11.global-to-local, align 4
  %v3_1000665c = icmp eq i8 %v2_10006654, 0
  br i1 %v3_1000665c, label %dec_label_pc_100066a0, label %dec_label_pc_1000666c.preheader

dec_label_pc_10006748:                            ; preds = %dec_label_pc_100066dc
  %v2_10006748 = add i32 %v1_10006748, %v0_10006710130
  %v1_1000674c = add i32 %v0_1000674c, 1
  store i32 %v1_1000674c, i32* %r9.global-to-local, align 4
  %v1_100066c4 = inttoptr i32 %v1_1000674c to i8*
  %v2_100066c4 = load i8, i8* %v1_100066c4, align 1
  %v3_100066c4 = zext i8 %v2_100066c4 to i32
  store i32 %v3_100066c4, i32* %r0.global-to-local, align 4
  %v1_100066c8 = xor i32 %v0_100066c838, 1
  store i32 %v1_100066c8, i32* %r11.global-to-local, align 4
  %v3_100066cc = icmp eq i8 %v2_100066c4, 0
  %v1_100066d0 = mul nuw nsw i32 %v3_100066c4, 256
  store i32 %v1_100066d0, i32* %r10.global-to-local, align 4
  br i1 %v3_100066cc, label %dec_label_pc_10006710, label %dec_label_pc_100066dc.preheader

dec_label_pc_10006754:                            ; preds = %dec_label_pc_100066a0
  %v1_10006754 = add i32 %v2_100066a4, 2
  %v2_10006754 = inttoptr i32 %v1_10006754 to i16*
  %v3_10006754 = load i16, i16* %v2_10006754, align 2
  %v4_10006754 = zext i16 %v3_10006754 to i32
  store i32 %v4_10006754, i32* %r0.global-to-local, align 4
  %v3_10006758 = icmp eq i16 %v3_10006754, 1
  br i1 %v3_10006758, label %dec_label_pc_10006760, label %dec_label_pc_100066b8

dec_label_pc_10006760:                            ; preds = %dec_label_pc_10006754
  %v1_10006760 = add i32 %v2_100066a4, 8
  %v2_10006760 = inttoptr i32 %v1_10006760 to i16*
  %v3_10006760 = load i16, i16* %v2_10006760, align 2
  %v4_10006760 = zext i16 %v3_10006760 to i32
  store i32 %v4_10006760, i32* %r0.global-to-local, align 4
  %v3_10006764 = icmp eq i16 %v3_10006760, 4
  br i1 %v3_10006764, label %dec_label_pc_1000676c, label %dec_label_pc_100067c0

dec_label_pc_1000676c:                            ; preds = %dec_label_pc_10006760
  %v2_1000676c = inttoptr i32 %v1_100066ac to i8*
  %v3_1000676c = load i8, i8* %v2_1000676c, align 1
  %v4_1000676c = zext i8 %v3_1000676c to i32
  store i32 %v4_1000676c, i32* %r0.global-to-local, align 4
  store i32 %v4_1000676c, i32* %stack_var_-4312, align 4
  %v1_10006774 = add i32 %v2_100066a4, 11
  %v2_10006774 = inttoptr i32 %v1_10006774 to i8*
  %v3_10006774 = load i8, i8* %v2_10006774, align 1
  %v4_10006774 = zext i8 %v3_10006774 to i32
  store i32 %v4_10006774, i32* %r9.global-to-local, align 4
  %v1_1000677c = add i32 %v2_100066a4, 12
  %v2_1000677c = inttoptr i32 %v1_1000677c to i8*
  %v3_1000677c = load i8, i8* %v2_1000677c, align 1
  %v4_1000677c = zext i8 %v3_1000677c to i32
  store i32 %v4_1000677c, i32* %r0.global-to-local, align 4
  %v1_10006784 = add i32 %v2_100066a4, 13
  %v2_10006784 = inttoptr i32 %v1_10006784 to i8*
  %v3_10006784 = load i8, i8* %v2_10006784, align 1
  %v4_10006784 = zext i8 %v3_10006784 to i32
  store i32 %v4_10006784, i32* %r9.global-to-local, align 4
  %v0_1000678c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000678c = inttoptr i32 %v0_1000678c to i8*
  %v2_1000678c = load i8, i8* %v1_1000678c, align 1
  %v3_1000678c = zext i8 %v2_1000678c to i32
  %v1_10006790 = add i32 %v0_1000678c, 4
  %v2_10006790 = inttoptr i32 %v1_10006790 to i32*
  %v3_10006790 = load i32, i32* %v2_10006790, align 4
  %v1_10006794 = mul nuw nsw i32 %v3_1000678c, 4
  %v1_10006798 = add nuw nsw i32 %v1_10006794, 4
  store i32 268461984, i32* @lr, align 4
  %v3_1000679c = sext i8 %v3_10006784 to i32
  %v4_1000679c = call i32 @function_1000a374(i32 %v3_10006790, i32 %v1_10006798, i32 %v3_1000679c)
  %v0_100067a0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100067a0 = inttoptr i32 %v0_100067a0 to i8*
  %v2_100067a0 = load i8, i8* %v1_100067a0, align 1
  %v3_100067a0 = zext i8 %v2_100067a0 to i32
  %v3_100067a4 = load i32, i32* %stack_var_-4312, align 4
  store i32 %v3_100067a4, i32* %r0.global-to-local, align 4
  %v1_100067a8 = add nuw nsw i32 %v3_100067a0, 1
  store i32 %v1_100067a8, i32* %r11.global-to-local, align 4
  %v1_100067ac = mul nuw nsw i32 %v3_100067a0, 4
  store i32 %v1_100067ac, i32* %r9.global-to-local, align 4
  %v3_100067b0 = add i32 %v1_100067ac, %v4_1000679c
  %v4_100067b0 = inttoptr i32 %v3_100067b0 to i32*
  store i32 %v3_100067a4, i32* %v4_100067b0, align 4
  %v0_100067b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100067b4 = trunc i32 %v0_100067b4 to i8
  %v2_100067b4 = load i32, i32* %r25.global-to-local, align 4
  %v3_100067b4 = inttoptr i32 %v2_100067b4 to i8*
  store i8 %v1_100067b4, i8* %v3_100067b4, align 1
  %v1_100067b8 = load i32, i32* %r25.global-to-local, align 4
  %v2_100067b8 = add i32 %v1_100067b8, 4
  %v3_100067b8 = inttoptr i32 %v2_100067b8 to i32*
  store i32 %v4_1000679c, i32* %v3_100067b8, align 4
  %v0_100067bc = load i32, i32* @r31, align 4
  %v1_100067bc = add i32 %v0_100067bc, 8
  %v2_100067bc = inttoptr i32 %v1_100067bc to i16*
  %v3_100067bc = load i16, i16* %v2_100067bc, align 2
  %v4_100067bc = zext i16 %v3_100067bc to i32
  store i32 %v4_100067bc, i32* %r0.global-to-local, align 4
  %v0_100067c4.pre = load i32, i32* @r29, align 4
  %v0_10006630.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100067c0

dec_label_pc_100067c0:                            ; preds = %dec_label_pc_10006760, %dec_label_pc_1000676c
  %v0_10006630.pre = phi i32 [ %v0_1000663049, %dec_label_pc_10006760 ], [ %v0_10006630.pre.pre, %dec_label_pc_1000676c ]
  %v0_100067c4 = phi i32 [ %v1_100066ac, %dec_label_pc_10006760 ], [ %v0_100067c4.pre, %dec_label_pc_1000676c ]
  %v0_100067c0 = phi i32 [ %v4_10006760, %dec_label_pc_10006760 ], [ %v4_100067bc, %dec_label_pc_1000676c ]
  store i32 %v0_100067c0, i32* %r0.global-to-local, align 4
  %v2_100067c4 = add i32 %v0_100067c0, %v0_100067c4
  br label %dec_label_pc_10006630.backedge

dec_label_pc_10006360.preheader.thread:           ; preds = %dec_label_pc_100062bc
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100063601355 = or i32 %v2_10006328, 1
  store i32 %v1_100063601355, i32* %r11.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006390

; uselistorder directives
  uselistorder i32 %v1_100067ac, { 1, 0 }
  uselistorder i32 %v4_1000679c, { 1, 0 }
  uselistorder i32 %v1_100066c8, { 1, 0 }
  uselistorder i8 %v2_100066c4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000674c, { 1, 2, 0 }
  uselistorder i32 %v2_10006748, { 1, 0 }
  uselistorder i32 %v1_10006658, { 1, 0 }
  uselistorder i32 %v3_10006654, { 1, 0 }
  uselistorder i8 %v2_10006654, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006740, { 1, 2, 0 }
  uselistorder i32 %v2_1000673c, { 2, 1, 0 }
  uselistorder i32 %v1_10006638, { 1, 0, 2 }
  uselistorder i8 %v2_100066fc, { 2, 3, 0, 1 }
  uselistorder i32 %v2_100066f8, { 1, 2, 0 }
  uselistorder i32 %v0_100066c838, { 2, 0, 1 }
  uselistorder i32 %v0_10006710130, { 1, 0 }
  uselistorder i32 %v1_100066d0128, { 1, 0 }
  uselistorder i32 %v1_100066ac, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v3_1000668c, { 1, 0 }
  uselistorder i8 %v2_1000668c, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10006688, { 1, 2, 0 }
  uselistorder i32 %v0_1000665828, { 2, 0, 1 }
  uselistorder i32 %v0_100066a0116, { 1, 0 }
  uselistorder i32 %v0_100066a4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_100066389, { 2, 1, 0 }
  uselistorder i32 %v0_100065a8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10006598, { 1, 0 }
  uselistorder i32 %v1_10006544, { 1, 0 }
  uselistorder i32 %v4_10006540, { 1, 0 }
  uselistorder i32 %v1_10006540, { 1, 2, 0 }
  uselistorder i32 %v3_1000653c, { 2, 1, 0 }
  uselistorder i32 %v1_100064f0, { 1, 0 }
  uselistorder i32 %v0_100064f0, { 1, 0 }
  uselistorder i32 %v1_100064e0, { 1, 0 }
  uselistorder i32 %v1_100064dc, { 1, 0 }
  uselistorder i8 %v2_10006368, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10006364, { 1, 0 }
  uselistorder i32 %v0_1000635c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000632c, { 0, 2, 1 }
  uselistorder i32 %v2_10006328, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 %v0_100062c4, { 1, 0 }
  uselistorder i16* %stack_var_-2108, { 1, 0 }
  uselistorder i16 %tmp60, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 0, 11, 12, 16, 13, 21, 22, 14, 15, 17, 18, 20, 19 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 3, 5, 4, 0, 1, 6, 7 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 5, 7, 4, 15, 6, 14, 8, 9, 10, 12, 13, 11, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 9, 30, 11, 12, 29, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 8, 9, 3, 4, 6, 5, 0, 7 }
  uselistorder i8 -65, { 2, 0, 3, 1 }
  uselistorder i32 65535, { 52, 53, 19, 20, 54, 55, 9, 8, 7, 56, 57, 21, 22, 23, 10, 11, 58, 24, 59, 25, 60, 0, 12, 61, 62, 26, 27, 28, 63, 64, 65, 66, 67, 68, 29, 30, 1, 13, 69, 70, 31, 32, 33, 34, 2, 14, 71, 72, 35, 36, 37, 38, 39, 73, 15, 40, 41, 74, 16, 42, 43, 75, 76, 77, 78, 79, 80, 44, 45, 3, 17, 81, 82, 5, 46, 47, 48, 4, 18, 83, 84, 6, 49, 50, 51 }
  uselistorder i32 (i32)* @function_1000a9a0, { 7, 10, 9, 8, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009df4, { 4, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i16 1, { 2, 3, 0, 1, 4 }
  uselistorder i32 53, { 1, 0 }
  uselistorder label %dec_label_pc_100067c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000672c, { 1, 0 }
  uselistorder label %dec_label_pc_10006630.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10006710, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100066dc, { 1, 0 }
  uselistorder label %dec_label_pc_100066dc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100066a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000666c, { 1, 0 }
  uselistorder label %dec_label_pc_1000666c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006648, { 1, 0 }
  uselistorder label %dec_label_pc_100065b4, { 1, 0 }
  uselistorder label %dec_label_pc_100065a0, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10006580, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100064d8.dec_label_pc_100064d8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006454, { 1, 0 }
  uselistorder label %dec_label_pc_10006390, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006368, { 1, 0 }
}

define i32 @function_100067d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100067d8:
  %v3_100067ec = load i32, i32* @global_var_1001c300.125, align 4
  store i32 268462068, i32* @lr, align 4
  %v2_100067f0 = call i32 @function_10009278(i32 %v3_100067ec, i32 9)
  ret i32 %v2_100067f0
}

define i32 @function_10006804() local_unnamed_addr {
dec_label_pc_10006804:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000680c = load i32, i32* @r31, align 4
  %v0_10006810 = load i32, i32* @r3, align 4
  store i32 %v0_10006810, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10006820 = add i32 %v0_10006810, 4
  %v2_10006820 = inttoptr i32 %v1_10006820 to i32*
  %v3_10006820 = load i32, i32* %v2_10006820, align 4
  %v3_10006828 = icmp eq i32 %v3_10006820, -1
  br i1 %v3_10006828, label %dec_label_pc_10006840, label %dec_label_pc_1000683c

dec_label_pc_1000683c:                            ; preds = %dec_label_pc_10006804
  store i32 268462144, i32* @lr, align 4
  %v0_1000683c = call i32 @function_10009158()
  br label %dec_label_pc_10006840

dec_label_pc_10006840:                            ; preds = %dec_label_pc_10006804, %dec_label_pc_1000683c
  store i32 268462160, i32* @lr, align 4
  %v3_1000684c = call i32 @function_10009ea8(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10006858 = load i32, i32* @r31, align 4
  %v1_10006858 = add i32 %v0_10006858, 28
  store i32 %v1_10006858, i32* @r3, align 4
  %v3_1000685c = icmp eq i32 %v3_1000684c, -1
  %v2_10006860 = add i32 %v0_10006858, 4
  %v3_10006860 = inttoptr i32 %v2_10006860 to i32*
  store i32 %v3_1000684c, i32* %v3_10006860, align 4
  br i1 %v3_1000685c, label %dec_label_pc_10006840.dec_label_pc_100068d8_crit_edge, label %dec_label_pc_10006868

dec_label_pc_10006840.dec_label_pc_100068d8_crit_edge: ; preds = %dec_label_pc_10006840
  %v0_100068ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100068d8

dec_label_pc_10006868:                            ; preds = %dec_label_pc_10006840
  %v0_10006868 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006868 = load i32, i32* @r31, align 4
  %v2_10006868 = add i32 %v1_10006868, 24
  %v3_10006868 = inttoptr i32 %v2_10006868 to i32*
  store i32 %v0_10006868, i32* %v3_10006868, align 4
  store i32 268462192, i32* @lr, align 4
  %v0_1000686c = call i32 @function_10008a40()
  %v0_10006870 = load i32, i32* @r31, align 4
  %v1_10006870 = add i32 %v0_10006870, 4
  %v2_10006870 = inttoptr i32 %v1_10006870 to i32*
  %v3_10006870 = load i32, i32* %v2_10006870, align 4
  store i32 %v3_10006870, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268462216, i32* @lr, align 4
  %v2_10006884 = call i32 @function_10009070(i32 %v3_10006870)
  store i32 4, i32* @r4, align 4
  store i32 268462236, i32* @lr, align 4
  %v2_10006898 = call i32 @function_10009070(i32 %v3_10006870)
  %v3_100068a0 = load i32, i32* @global_var_1001c2f4.126, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_100068a8 = load i32, i32* @r31, align 4
  %v2_100068b0 = add i32 %v0_100068a8, 8
  %v3_100068b0 = inttoptr i32 %v2_100068b0 to i32*
  store i32 %v3_100068a0, i32* %v3_100068b0, align 4
  %v0_100068b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100068b8 = load i32, i32* @r31, align 4
  %v2_100068b8 = add i32 %v1_100068b8, 12
  %v3_100068b8 = inttoptr i32 %v2_100068b8 to i32*
  store i32 %v0_100068b8, i32* %v3_100068b8, align 4
  %v0_100068c0 = load i32, i32* @r31, align 4
  %v1_100068c0 = add i32 %v0_100068c0, 4
  %v2_100068c0 = inttoptr i32 %v1_100068c0 to i32*
  %v3_100068c0 = load i32, i32* %v2_100068c0, align 4
  store i32 %v3_100068c0, i32* @r3, align 4
  %v1_100068c4 = add i32 %v0_100068c0, 16
  %v2_100068c4 = inttoptr i32 %v1_100068c4 to i32*
  %v3_100068c4 = load i32, i32* %v2_100068c4, align 4
  store i32 %v3_100068c4, i32* %r9.global-to-local, align 4
  store i32 268462296, i32* @lr, align 4
  %v0_100068d4 = call i32 @function_10009ca8()
  br label %dec_label_pc_100068d8

dec_label_pc_100068d8:                            ; preds = %dec_label_pc_10006840.dec_label_pc_100068d8_crit_edge, %dec_label_pc_10006868
  %v0_100068ec = phi i32 [ %v0_100068ec.pre, %dec_label_pc_10006840.dec_label_pc_100068d8_crit_edge ], [ %v0_100068d4, %dec_label_pc_10006868 ]
  store i32 %v0_1000680c, i32* @r31, align 4
  ret i32 %v0_100068ec

; uselistorder directives
  uselistorder i32 ()* @function_10008a40, { 8, 7, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_100068d8, { 1, 0 }
  uselistorder label %dec_label_pc_10006840, { 1, 0 }
}

define i32 @function_100068f0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100068f0:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_100068f4 = load i32, i32* @lr, align 4
  store i32 %v0_100068f4, i32* %r0.global-to-local, align 4
  %v3_10006900 = load i32, i32* @global_var_1001c2e8.127, align 4
  %v1_1000690c = mul i32 %v3_10006900, 16
  store i32 %v1_1000690c, i32* %r9.global-to-local, align 4
  %v0_10006910 = load i32, i32* @r28, align 4
  %v3_10006918 = load i32, i32* @global_var_1001c2ec.128, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10006924 = add i32 %v1_1000690c, 16
  %v0_1000693c = load i32, i32* @r29, align 4
  %v0_10006940 = load i32, i32* @r30, align 4
  store i32 268462412, i32* @lr, align 4
  %v3_10006948 = call i32 @function_1000a374(i32 %v3_10006918, i32 %v1_10006924, i32 %v1_1000690c)
  store i32 %v3_10006948, i32* %r25.global-to-local, align 4
  %v0_10006950 = load i32, i32* @r28, align 4
  store i32 %v3_10006948, i32* @global_var_1001c2ec.128, align 4
  %v3_10006958 = load i32, i32* @global_var_1001c2e8.127, align 4
  store i32 %v3_10006958, i32* %r24.global-to-local, align 4
  store i32 268462432, i32* @lr, align 4
  %v1_1000695c = inttoptr i32 %v0_10006950 to i8*
  %v2_1000695c = call i32 @function_10008998(i8* %v1_1000695c)
  %sext = mul i32 %v2_1000695c, 16777216
  %v1_10006960 = sdiv i32 %sext, 16777216
  %v2_10006960 = add nsw i32 %v1_10006960, 1
  store i32 %v2_10006960, i32* @r29, align 4
  store i32 %v1_10006960, i32* @r30, align 4
  store i32 %v2_10006960, i32* @r3, align 4
  store i32 268462448, i32* @lr, align 4
  %v0_1000696c = call i32 @function_1000a0ac()
  %v0_10006970 = load i32, i32* @r28, align 4
  %v0_10006974 = load i32, i32* @r29, align 4
  store i32 %v0_1000696c, i32* %r31.global-to-local, align 4
  store i32 268462464, i32* @lr, align 4
  %v3_1000697c = call i32 @function_10008a1c(i32 %v0_10006970, i32 %v0_10006974, i32 %v0_10006974)
  %v0_10006980 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10006980, 1
  %extract.t6 = trunc i32 %v0_10006980 to i8
  br i1 %tmp21, label %dec_label_pc_100069a4, label %dec_label_pc_10006988

dec_label_pc_10006988:                            ; preds = %dec_label_pc_100068f0
  store i32 %v0_10006980, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006990

dec_label_pc_10006990:                            ; preds = %dec_label_pc_10006990, %dec_label_pc_10006988
  %v1_10006998 = phi i32 [ %v1_1000699c, %dec_label_pc_10006990 ], [ 0, %dec_label_pc_10006988 ]
  %v1_10006990 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006990 = add i32 %v1_10006990, %v1_10006998
  %v3_10006990 = inttoptr i32 %v2_10006990 to i8*
  %v4_10006990 = load i8, i8* %v3_10006990, align 1
  %v5_10006990 = zext i8 %v4_10006990 to i32
  %v1_10006994 = xor i32 %v5_10006990, 84
  store i32 %v1_10006994, i32* %r0.global-to-local, align 4
  %v3_10006998 = trunc i32 %v1_10006994 to i8
  store i8 %v3_10006998, i8* %v3_10006990, align 1
  %v0_1000699c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000699c = add i32 %v0_1000699c, 1
  store i32 %v1_1000699c, i32* %r9.global-to-local, align 4
  %v0_100069a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100069a0 = add i32 %v0_100069a0, -1
  store i32 %v1_100069a0, i32* %ctr.global-to-local, align 4
  %v2_100069a0 = icmp eq i32 %v1_100069a0, 0
  br i1 %v2_100069a0, label %dec_label_pc_100069a4.loopexit, label %dec_label_pc_10006990

dec_label_pc_100069a4.loopexit:                   ; preds = %dec_label_pc_10006990
  %v0_100069bc.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_100069bc.pre to i8
  br label %dec_label_pc_100069a4

dec_label_pc_100069a4:                            ; preds = %dec_label_pc_100069a4.loopexit, %dec_label_pc_100068f0
  %v0_100069bc.off0 = phi i8 [ %extract.t, %dec_label_pc_100069a4.loopexit ], [ %extract.t6, %dec_label_pc_100068f0 ]
  %v3_100069a4 = load i32, i32* @global_var_1001c2e8.127, align 4
  %v0_100069a8 = load i32, i32* %r23.global-to-local, align 4
  %v3_100069ac = load i32, i32* @global_var_1001c2ec.128, align 4
  %v1_100069b0 = mul i32 %v3_100069a4, 16
  %v2_100069b4 = add i32 %v3_100069ac, %v1_100069b0
  store i32 %v2_100069b4, i32* %r9.global-to-local, align 4
  %v0_100069b8 = load i32, i32* %r24.global-to-local, align 4
  %v1_100069b8 = mul i32 %v0_100069b8, 16
  store i32 %v1_100069b8, i32* %r0.global-to-local, align 4
  %v3_100069bc = add i32 %v2_100069b4, 12
  %v4_100069bc = inttoptr i32 %v3_100069bc to i8*
  store i8 %v0_100069bc.off0, i8* %v4_100069bc, align 1
  %v0_100069c0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100069c0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100069c0 = load i32, i32* %r0.global-to-local, align 4
  %v3_100069c0 = add i32 %v2_100069c0, %v1_100069c0
  %v4_100069c0 = inttoptr i32 %v3_100069c0 to i32*
  store i32 %v0_100069c0, i32* %v4_100069c0, align 4
  %v3_100069c4 = load i32, i32* @global_var_1001c2e8.127, align 4
  store i32 %v3_100069c4, i32* @r30, align 4
  %v3_100069c8 = load i32, i32* @global_var_1001c2ec.128, align 4
  store i32 %v3_100069c8, i32* %r25.global-to-local, align 4
  store i32 268462544, i32* @lr, align 4
  %v1_100069cc = inttoptr i32 %v0_100069a8 to i8*
  %v2_100069cc = call i32 @function_10008998(i8* %v1_100069cc)
  %sext1 = mul i32 %v2_100069cc, 16777216
  %v1_100069d0 = sdiv i32 %sext1, 16777216
  %v2_100069d0 = add nsw i32 %v1_100069d0, 1
  store i32 %v2_100069d0, i32* @r29, align 4
  store i32 %v1_100069d0, i32* @r28, align 4
  store i32 %v2_100069d0, i32* @r3, align 4
  store i32 268462560, i32* @lr, align 4
  %v0_100069dc = call i32 @function_1000a0ac()
  %v0_100069e0 = load i32, i32* %r23.global-to-local, align 4
  %v0_100069e4 = load i32, i32* @r29, align 4
  store i32 %v0_100069dc, i32* %r31.global-to-local, align 4
  store i32 268462576, i32* @lr, align 4
  %v3_100069ec = call i32 @function_10008a1c(i32 %v0_100069e0, i32 %v0_100069e4, i32 %v0_100069e4)
  %v0_100069f0 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_100069f0, 1
  %extract.t8 = trunc i32 %v0_100069f0 to i8
  br i1 %tmp22, label %dec_label_pc_10006a14, label %dec_label_pc_100069f8

dec_label_pc_100069f8:                            ; preds = %dec_label_pc_100069a4
  store i32 %v0_100069f0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006a00

dec_label_pc_10006a00:                            ; preds = %dec_label_pc_10006a00, %dec_label_pc_100069f8
  %v1_10006a08 = phi i32 [ %v1_10006a0c, %dec_label_pc_10006a00 ], [ 0, %dec_label_pc_100069f8 ]
  %v1_10006a00 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006a00 = add i32 %v1_10006a00, %v1_10006a08
  %v3_10006a00 = inttoptr i32 %v2_10006a00 to i8*
  %v4_10006a00 = load i8, i8* %v3_10006a00, align 1
  %v5_10006a00 = zext i8 %v4_10006a00 to i32
  %v1_10006a04 = xor i32 %v5_10006a00, 84
  store i32 %v1_10006a04, i32* %r0.global-to-local, align 4
  %v3_10006a08 = trunc i32 %v1_10006a04 to i8
  store i8 %v3_10006a08, i8* %v3_10006a00, align 1
  %v0_10006a0c = load i32, i32* %r9.global-to-local, align 4
  %v1_10006a0c = add i32 %v0_10006a0c, 1
  store i32 %v1_10006a0c, i32* %r9.global-to-local, align 4
  %v0_10006a10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006a10 = add i32 %v0_10006a10, -1
  store i32 %v1_10006a10, i32* %ctr.global-to-local, align 4
  %v2_10006a10 = icmp eq i32 %v1_10006a10, 0
  br i1 %v2_10006a10, label %dec_label_pc_10006a14.loopexit, label %dec_label_pc_10006a00

dec_label_pc_10006a14.loopexit:                   ; preds = %dec_label_pc_10006a00
  %v0_10006a28.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_10006a28.pre to i8
  br label %dec_label_pc_10006a14

dec_label_pc_10006a14:                            ; preds = %dec_label_pc_10006a14.loopexit, %dec_label_pc_100069a4
  %v0_10006a28.off0 = phi i8 [ %extract.t7, %dec_label_pc_10006a14.loopexit ], [ %extract.t8, %dec_label_pc_100069a4 ]
  %v3_10006a14 = load i32, i32* @global_var_1001c2e8.127, align 4
  %v3_10006a1c = load i32, i32* @global_var_1001c2ec.128, align 4
  %v1_10006a20 = mul i32 %v3_10006a14, 16
  %v2_10006a24 = or i32 %v1_10006a20, 13
  %v3_10006a28 = add i32 %v2_10006a24, %v3_10006a1c
  %v4_10006a28 = inttoptr i32 %v3_10006a28 to i8*
  store i8 %v0_10006a28.off0, i8* %v4_10006a28, align 1
  %v0_10006a2c = load i32, i32* @r30, align 4
  %v1_10006a2c = mul i32 %v0_10006a2c, 16
  %v1_10006a30 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006a30 = add i32 %v1_10006a30, %v1_10006a2c
  store i32 %v2_10006a30, i32* %r9.global-to-local, align 4
  %v3_10006a34 = load i32, i32* @global_var_1001c2e8.127, align 4
  %v3_10006a38 = load i32, i32* @global_var_1001c2ec.128, align 4
  %v1_10006a3c = mul i32 %v3_10006a34, 16
  %v3_10006a40 = load i16, i16* @global_var_1001c2f0.129, align 2
  %v4_10006a40 = zext i16 %v3_10006a40 to i32
  store i32 %v4_10006a40, i32* %r7.global-to-local, align 4
  %v2_10006a44 = add i32 %v3_10006a38, %v1_10006a3c
  store i32 %v2_10006a44, i32* %r11.global-to-local, align 4
  store i32 %v0_100068f4, i32* %r0.global-to-local, align 4
  %v1_10006a4c = add i32 %v3_10006a34, 1
  store i32 %v1_10006a4c, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001c2f0.129 to i32), i32* %r8.global-to-local, align 4
  %v0_10006a54 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006a54 = add i32 %v2_10006a30, 4
  %v3_10006a54 = inttoptr i32 %v2_10006a54 to i32*
  store i32 %v0_10006a54, i32* %v3_10006a54, align 4
  %v0_10006a5c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006a5c, i32* @global_var_1001c2e8.127, align 4
  store i32 %v0_10006910, i32* @r28, align 4
  store i32 %v0_1000693c, i32* @r29, align 4
  store i32 %v0_10006940, i32* @r30, align 4
  %v0_10006a8c = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a8c = trunc i32 %v0_10006a8c to i16
  %v2_10006a8c = load i32, i32* %r11.global-to-local, align 4
  %v3_10006a8c = add i32 %v2_10006a8c, 10
  %v4_10006a8c = inttoptr i32 %v3_10006a8c to i16*
  store i16 %v1_10006a8c, i16* %v4_10006a8c, align 2
  %v0_10006a90 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006a90 = trunc i32 %v0_10006a90 to i16
  %v2_10006a90 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006a90 = add i32 %v2_10006a90, 8
  %v4_10006a90 = inttoptr i32 %v3_10006a90 to i16*
  store i16 %v1_10006a90, i16* %v4_10006a90, align 2
  %v0_10006a94 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006a94 = trunc i32 %v0_10006a94 to i16
  store i16 %v1_10006a94, i16* @global_var_1001c2f0.129, align 2
  ret i32 %v3_100069ec

; uselistorder directives
  uselistorder i32 %v3_10006a34, { 1, 0 }
  uselistorder i32 %v1_10006a10, { 1, 0 }
  uselistorder i32 %v1_10006a0c, { 1, 0 }
  uselistorder i32 %v0_100069f0, { 1, 0, 2 }
  uselistorder i32 %v1_100069a0, { 1, 0 }
  uselistorder i32 %v1_1000699c, { 1, 0 }
  uselistorder i32 %v0_10006980, { 1, 0, 2 }
  uselistorder i32 %v1_1000690c, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10008998, { 0, 1, 3, 4, 5, 6, 7, 28, 2, 22, 23, 24, 25, 26, 27, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32, i32, i32)* @function_1000a374, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10006a9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10006a9c:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i16 @__decompiler_undefined_function_1()
  %tmp55 = call i16 @__decompiler_undefined_function_1()
  %tmp56 = call i8 @__decompiler_undefined_function_2()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1916 = alloca i64, align 8
  %v0_10006a9c = load i32, i32* @lr, align 4
  store i32 %v0_10006a9c, i32* %r0.global-to-local, align 4
  %v0_10006aa4 = call i32 @__asm_mfcr()
  store i32 %v0_10006aa4, i32* %r3.global-to-local, align 4
  %v0_10006adc = load i32, i32* @r27, align 4
  %v0_10006ae0 = load i32, i32* @r28, align 4
  %v0_10006ae4 = load i32, i32* @r29, align 4
  %v0_10006ae8 = load i32, i32* @r30, align 4
  %v0_10006af0 = load i32, i32* %r0.global-to-local, align 4
  store i32 268462844, i32* @lr, align 4
  %v0_10006af8 = call i32 @function_100091a0()
  store i32 %v0_10006af8, i32* %r3.global-to-local, align 4
  %v1_10006afc = icmp slt i32 %v0_10006af8, 0
  %v3_10006afc = icmp eq i32 %v0_10006af8, 0
  store i1 %v1_10006afc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006afc, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10006af8, i32* @global_var_1001c300.125, align 4
  %tmp98 = icmp slt i32 %v0_10006af8, 1
  br i1 %tmp98, label %dec_label_pc_10006b6c, label %dec_label_pc_10006b0c

dec_label_pc_10006b0c:                            ; preds = %dec_label_pc_10006b6c, %dec_label_pc_10006a9c
  store i32 %v0_10006af0, i32* %r0.global-to-local, align 4
  %v1_10006b20 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006aa4)
  store i32 %v0_10006adc, i32* %r27.global-to-local, align 4
  store i32 %v0_10006ae0, i32* @r28, align 4
  store i32 %v0_10006ae4, i32* @r29, align 4
  store i32 %v0_10006ae8, i32* @r30, align 4
  ret i32 %v0_10006af8

dec_label_pc_10006b6c:                            ; preds = %dec_label_pc_10006a9c
  %v1_10006b6c = icmp slt i32 %v0_10006af8, -1
  %v3_10006b6c = icmp eq i32 %v0_10006af8, -1
  store i1 %v1_10006b6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b6c, label %dec_label_pc_10006b0c, label %dec_label_pc_10006b74

dec_label_pc_10006b74:                            ; preds = %dec_label_pc_10006b6c
  store i32 268462968, i32* @lr, align 4
  %v1_10006b74 = call i32 @function_10008c9c(i32 %v0_10006af8)
  store i32 %v1_10006b74, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10006b74, i32* @global_var_1001c2d0.14, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006b84.130 to i32), i32* @lr, align 4
  %v1_10006b80 = call i32 @function_10005fe8(i32 %v1_10006b74)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268462988, i32* @lr, align 4
  %v0_10006b88 = call i32 @function_10009528()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10006b88, i32* @global_var_1001c2f4.126, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006ba0.131 to i32), i32* @lr, align 4
  %v2_10006b9c = call i32 @function_1000a204(i32 256, i32 288)
  store i32 %v2_10006b9c, i32* %r3.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_10006b9c, i32* @global_var_1001c2f8.132, align 4
  store i32 %v2_10006b9c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10006bcc = add i32 %v2_10006b9c, 4
  store i32 %v1_10006bcc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006bd0

dec_label_pc_10006bd0:                            ; preds = %dec_label_pc_10006bd0.dec_label_pc_10006bd0_crit_edge, %dec_label_pc_10006b74
  %v1_10006be4 = phi i32 [ %v1_10006bec, %dec_label_pc_10006bd0.dec_label_pc_10006bd0_crit_edge ], [ %v1_10006bcc, %dec_label_pc_10006b74 ]
  %v0_10006be4 = phi i32 [ %v0_10006be4.pre, %dec_label_pc_10006bd0.dec_label_pc_10006bd0_crit_edge ], [ -1, %dec_label_pc_10006b74 ]
  %v1_10006be0 = phi i32 [ %v1_10006be0.pre, %dec_label_pc_10006bd0.dec_label_pc_10006bd0_crit_edge ], [ %v2_10006b9c, %dec_label_pc_10006b74 ]
  %v0_10006bdc = phi i32 [ %v0_10006bf0, %dec_label_pc_10006bd0.dec_label_pc_10006bd0_crit_edge ], [ 0, %dec_label_pc_10006b74 ]
  %v1_10006bd0 = mul i32 %v0_10006bdc, 256
  store i32 %v1_10006bd0, i32* %r0.global-to-local, align 4
  %v2_10006bd8 = mul i32 %v0_10006bdc, 288
  %v1_10006bdc = add i32 %v0_10006bdc, 1
  store i32 %v1_10006bdc, i32* %r10.global-to-local, align 4
  %v2_10006be0 = add i32 %v2_10006bd8, %v1_10006be0
  store i32 %v2_10006be0, i32* %r9.global-to-local, align 4
  %v2_10006be4 = inttoptr i32 %v1_10006be4 to i32*
  store i32 %v0_10006be4, i32* %v2_10006be4, align 4
  %v0_10006be8 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006be8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006be8 = add i32 %v1_10006be8, 12
  %v3_10006be8 = inttoptr i32 %v2_10006be8 to i32*
  store i32 %v0_10006be8, i32* %v3_10006be8, align 4
  %v0_10006bec = load i32, i32* %r11.global-to-local, align 4
  %v1_10006bec = add i32 %v0_10006bec, 288
  store i32 %v1_10006bec, i32* %r11.global-to-local, align 4
  %v0_10006bf0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006bf0, i32* %r9.global-to-local, align 4
  %v0_10006bf4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006bf4 = add i32 %v0_10006bf4, -1
  store i32 %v1_10006bf4, i32* %ctr.global-to-local, align 4
  %v2_10006bf4 = icmp eq i32 %v1_10006bf4, 0
  br i1 %v2_10006bf4, label %dec_label_pc_10006bf8, label %dec_label_pc_10006bd0.dec_label_pc_10006bd0_crit_edge

dec_label_pc_10006bd0.dec_label_pc_10006bd0_crit_edge: ; preds = %dec_label_pc_10006bd0
  %v1_10006be0.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10006be4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10006bd0

dec_label_pc_10006bf8:                            ; preds = %dec_label_pc_10006bd0
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i64 256, i64* %stack_var_-1916, align 8
  store i32 268463120, i32* @lr, align 4
  %v3_10006c0c = call i32 @function_10009ea8(i32 2, i32 3, i32 6)
  %v4_10006c0c = trunc i32 %v3_10006c0c to i16
  store i32 %v3_10006c0c, i32* %r3.global-to-local, align 4
  %v2_10006c10 = icmp slt i16 %v4_10006c0c, -1
  %v4_10006c10 = icmp eq i16 %v4_10006c0c, -1
  store i1 %v2_10006c10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006c10, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10006c0c, i32* %r29.global-to-local, align 4
  store i32 %v3_10006c0c, i32* @global_var_1001c2fc.133, align 4
  br i1 %v4_10006c10, label %dec_label_pc_10007224, label %dec_label_pc_10006c24

dec_label_pc_10006c24:                            ; preds = %dec_label_pc_10006bf8
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 268463156, i32* @lr, align 4
  %v1_10006c30 = call i32 @function_10009070(i32 3)
  store i32 4, i32* @r4, align 4
  %v1_10006c38 = or i32 %v1_10006c30, 2048
  store i32 %v1_10006c38, i32* %r5.global-to-local, align 4
  %v0_10006c3c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006c3c, i32* %r3.global-to-local, align 4
  store i32 268463176, i32* @lr, align 4
  %v2_10006c44 = call i32 @function_10009070(i32 %v0_10006c3c)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006c4c = load i32, i32* @global_var_1001c2fc.133, align 4
  store i32 %v3_10006c4c, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10006c5c = ptrtoint i64* %stack_var_-1916 to i32
  store i32 %v2_10006c5c, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i64 1, i64* %stack_var_-1916, align 8
  store i32 268463212, i32* @lr, align 4
  %v5_10006c68 = call i32 @function_10009e6c(i32 %v3_10006c4c, i32 0, i32 3, i32 %v2_10006c5c)
  store i32 %v5_10006c68, i32* %r3.global-to-local, align 4
  %v1_10006c6c = icmp slt i32 %v5_10006c68, 0
  %v3_10006c6c = icmp eq i32 %v5_10006c68, 0
  store i1 %v1_10006c6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c6c, label %dec_label_pc_10006c74, label %dec_label_pc_1000825c

dec_label_pc_10006c74:                            ; preds = %dec_label_pc_10006c24, %dec_label_pc_10006c74
  %v0_10006c74 = call i32 @function_10005f98()
  store i32 %v0_10006c74, i32* %r3.global-to-local, align 4
  %v1_10006c78 = urem i32 %v0_10006c74, 65536
  store i32 %v1_10006c78, i32* @r20, align 4
  %v1_10006c7c = icmp ult i32 %v1_10006c78, 1023
  %v3_10006c7c = icmp eq i32 %v1_10006c78, 1023
  store i1 %v1_10006c7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c7c, i1* %cr7_eq.global-to-local, align 1
  %tmp99 = icmp ult i32 %v1_10006c78, 1024
  br i1 %tmp99, label %dec_label_pc_10006c74, label %dec_label_pc_10006c84

dec_label_pc_10006c84:                            ; preds = %dec_label_pc_10006c74
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_10006c8c = load i32, i32* @global_var_1001c368.134, align 4
  store i32 %v3_10006c8c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c368.134 to i32), i32* @r21, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c37c.135 to i32), i32* @r22, align 4
  %v1_10006c9c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10006c9c, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_10006ca4 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10006ca4, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_10006ca4, i32* @global_var_1001c368.134, align 4
  store i32 ptrtoint (i32* @global_var_1000bc20.136 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001c36a.137 to i16*), align 4
  %v0_10006cb8 = call i32 @function_10005f98()
  %v1_10006cb8 = trunc i32 %v0_10006cb8 to i16
  store i32 %v0_10006cb8, i32* %r3.global-to-local, align 4
  %v3_10006cbc = load i32, i32* @global_var_1001c388.138, align 4
  store i32 %v3_10006cbc, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001c370.139 to i8*), align 4
  %v1_10006ccc = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10006ccc, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_10006cd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006cd4 = trunc i32 %v0_10006cd4 to i8
  store i8 %v1_10006cd4, i8* bitcast (i32* @global_var_1001c371.140 to i8*), align 4
  store i16 %v1_10006cb8, i16* bitcast (i32* @global_var_1001c36c.141 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000bc1c.142 to i32), i32* @r29, align 4
  store i32 %v1_10006ccc, i32* @global_var_1001c388.138, align 4
  store i16 23, i16* @global_var_1001c37e.143, align 2
  store i32 ptrtoint ([8 x i8]* @global_var_1000bbac.144 to i32), i32* @r27, align 4
  %v0_10006cf4 = load i32, i32* @r20, align 4
  %v1_10006cf4 = trunc i32 %v0_10006cf4 to i16
  store i16 %v1_10006cf4, i16* bitcast (i32* @global_var_1001c37c.135 to i16*), align 4
  %v0_10006cfc = call i32 @function_10005f98()
  %v1_10006cfc = trunc i32 %v0_10006cfc to i16
  %v0_10006d00 = load i32, i32* @r28, align 4
  store i16 %v1_10006cfc, i16* bitcast (i32* @global_var_1001c38a.145 to i16*), align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_10006d0c = load i32, i32* @r29, align 4
  store i32 %v0_10006d0c, i32* %r3.global-to-local, align 4
  %v3_10006d14 = load i32, i32* @global_var_1001c388.138, align 4
  %v1_10006d18 = or i32 %v3_10006d14, 131072
  store i32 %v1_10006d18, i32* %r0.global-to-local, align 4
  store i32 %v1_10006d18, i32* @global_var_1001c388.138, align 4
  store i32 268463396, i32* @lr, align 4
  %v4_10006d20 = call i32 @function_100068f0(i32 %v0_10006d0c, i32 %v0_10006d00, i32 4)
  %v0_10006d2c = load i32, i32* @r29, align 4
  store i32 %v0_10006d2c, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463416, i32* @lr, align 4
  %v5_10006d34 = call i32 @function_100068f0(i32 %v0_10006d2c, i32 ptrtoint ([5 x i8]* @global_var_1000bb98.146 to i32), i32 8)
  %v0_10006d40 = load i32, i32* @r29, align 4
  store i32 %v0_10006d40, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268463436, i32* @lr, align 4
  %v5_10006d48 = call i32 @function_100068f0(i32 %v0_10006d40, i32 ptrtoint ([9 x i8]* @global_var_1000bba0.147 to i32), i32 12)
  %v0_10006d4c = load i32, i32* @r28, align 4
  %v0_10006d50 = load i32, i32* @r27, align 4
  store i32 %v0_10006d50, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268463452, i32* @lr, align 4
  %v4_10006d58 = call i32 @function_100068f0(i32 %v0_10006d50, i32 %v0_10006d4c, i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1000bbc0.148 to i32), i32* @r28, align 4
  %v0_10006d6c = load i32, i32* @r29, align 4
  store i32 %v0_10006d6c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268463480, i32* @lr, align 4
  %v5_10006d74 = call i32 @function_100068f0(i32 %v0_10006d6c, i32 ptrtoint ([9 x i8]* @global_var_1000bbb4.149 to i32), i32 12)
  %v0_10006d78 = load i32, i32* @r28, align 4
  store i32 %v0_10006d78, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268463496, i32* @lr, align 4
  %v5_10006d84 = call i32 @function_100068f0(i32 %v0_10006d78, i32 %v0_10006d78, i32 10)
  %v0_10006d90 = load i32, i32* @r29, align 4
  store i32 %v0_10006d90, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463516, i32* @lr, align 4
  %v5_10006d98 = call i32 @function_100068f0(i32 %v0_10006d90, i32 ptrtoint ([6 x i8]* @global_var_1000bbc8.150 to i32), i32 9)
  store i32 ptrtoint ([8 x i8]* @global_var_1000bbd0.151 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268463536, i32* @lr, align 4
  %v4_10006dac = call i32 @function_100068f0(i32 ptrtoint ([8 x i8]* @global_var_1000bbd0.151 to i32), i32 14, i32 14)
  %v0_10006db0 = load i32, i32* @r29, align 4
  store i32 %v0_10006db0, i32* %r3.global-to-local, align 4
  %v0_10006db4 = load i32, i32* @r27, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  store i32 268463552, i32* @lr, align 4
  %v5_10006dbc = call i32 @function_100068f0(i32 %v0_10006db0, i32 %v0_10006db4, i32 11)
  %v0_10006dc8 = load i32, i32* @r29, align 4
  store i32 %v0_10006dc8, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268463572, i32* @lr, align 4
  %v4_10006dd0 = call i32 @function_100068f0(i32 %v0_10006dc8, i32 ptrtoint (i32* @global_var_1000bbd8.152 to i32), i32 17)
  %v0_10006dd8 = load i32, i32* @r29, align 4
  store i32 %v0_10006dd8, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463592, i32* @lr, align 4
  %v5_10006de4 = call i32 @function_100068f0(i32 %v0_10006dd8, i32 ptrtoint ([6 x i8]* @global_var_1000bbe8.153 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1000bbf0.154 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268463612, i32* @lr, align 4
  %v4_10006df8 = call i32 @function_100068f0(i32 ptrtoint ([5 x i8]* @global_var_1000bbf0.154 to i32), i32 8, i32 8)
  %v0_10006e04 = load i32, i32* @r27, align 4
  store i32 %v0_10006e04, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463632, i32* @lr, align 4
  %v4_10006e0c = call i32 @function_100068f0(i32 %v0_10006e04, i32 ptrtoint (i32* @global_var_1000bbf8.155 to i32), i32 15)
  %v0_10006e14 = load i32, i32* @r27, align 4
  store i32 %v0_10006e14, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268463652, i32* @lr, align 4
  %v4_10006e20 = call i32 @function_100068f0(i32 %v0_10006e14, i32 ptrtoint (i32* @global_var_1000bc04.156 to i32), i32 15)
  %v0_10006e28 = load i32, i32* @r28, align 4
  store i32 %v0_10006e28, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268463672, i32* @lr, align 4
  %v5_10006e34 = call i32 @function_100068f0(i32 %v0_10006e28, i32 ptrtoint ([5 x i8]* @global_var_1000bc10.157 to i32), i32 9)
  store i32 %v5_10006e34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006e38

dec_label_pc_10006e38:                            ; preds = %dec_label_pc_10007494, %dec_label_pc_10006c84
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006e3c = load i32, i32* @global_var_1001c2f4.126, align 4
  store i32 %v3_10006e3c, i32* @r31, align 4
  %v0_10006e40 = load i32, i32* @r23, align 4
  %v2_10006e40 = icmp slt i32 %v0_10006e40, %v3_10006e3c
  %v4_10006e40 = icmp eq i32 %v0_10006e40, %v3_10006e3c
  store i1 %v2_10006e40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006e40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006e40, label %dec_label_pc_10007060, label %dec_label_pc_10006e48

dec_label_pc_10006e48:                            ; preds = %dec_label_pc_10006e38
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006e4c = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v2_10006e4c, i32* %r28.global-to-local, align 4
  store i64 0, i64* %stack_var_-1916, align 8
  store i32 0, i32* @r30, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006e5c

dec_label_pc_10006e5c:                            ; preds = %dec_label_pc_10006f8c.dec_label_pc_10006e5c_crit_edge, %dec_label_pc_10006e48
  %v0_10006e5c = phi i32 [ %v0_10006e5c.pre, %dec_label_pc_10006f8c.dec_label_pc_10006e5c_crit_edge ], [ 0, %dec_label_pc_10006e48 ]
  store i32 %v0_10006e5c, i32* %stack_var_-1888, align 4
  %v0_10006e6c = call i32 @function_10005f98()
  %v1_10006e6c = trunc i32 %v0_10006e6c to i16
  store i32 %v0_10006e6c, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_10006e6c, i16* bitcast (i32* @global_var_1001c36c.141 to i16*), align 4
  %v3_10006e78 = load i32, i32* @global_var_1001c2d0.14, align 4
  store i32 %v3_10006e78, i32* %r0.global-to-local, align 4
  store i32 %v3_10006e78, i32* @global_var_1001c374.158, align 4
  br label %dec_label_pc_10006e80.preheader

dec_label_pc_10006e80.preheader:                  ; preds = %dec_label_pc_10006e5c, %dec_label_pc_1000722c
  br label %dec_label_pc_10006e80

dec_label_pc_10006e80:                            ; preds = %dec_label_pc_100072c8, %dec_label_pc_100072bc, %dec_label_pc_100072b0, %dec_label_pc_100072a4, %dec_label_pc_10007298, %dec_label_pc_10007290, %dec_label_pc_10007288, %dec_label_pc_10007280, %dec_label_pc_10007274, %dec_label_pc_10007260, %dec_label_pc_10007254, %dec_label_pc_10007240, %dec_label_pc_10006f84, %dec_label_pc_10006f7c, %dec_label_pc_10006f74, %dec_label_pc_10006f6c, %dec_label_pc_10006f64, %dec_label_pc_10006f5c, %dec_label_pc_10006f54, %dec_label_pc_10006f4c, %dec_label_pc_10006f44, %dec_label_pc_10006f3c, %dec_label_pc_10006f34, %dec_label_pc_10006f24, %dec_label_pc_10006ef4, %dec_label_pc_10006ec4, %dec_label_pc_10006ebc, %dec_label_pc_10006eac, %dec_label_pc_10006ea4, %dec_label_pc_10006e9c, %dec_label_pc_10006e80, %dec_label_pc_10006e80.preheader
  %v0_10006e80 = call i32 @function_10005f98()
  store i32 %v0_10006e80, i32* %r3.global-to-local, align 4
  %v1_10006e84 = urem i32 %v0_10006e80, 256
  store i32 %v1_10006e84, i32* %r11.global-to-local, align 4
  %v1_10006e88 = udiv i32 %v0_10006e80, 16777216
  store i32 %v1_10006e88, i32* %r10.global-to-local, align 4
  %v1_10006e8c = icmp ult i32 %v1_10006e84, 127
  %v3_10006e8c = icmp eq i32 %v1_10006e84, 127
  store i1 %v1_10006e8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e8c, i1* %cr7_eq.global-to-local, align 1
  %v1_10006e90 = call i32 @__asm_rlwinm(i32 %v0_10006e80, i32 24, i32 24, i32 31)
  store i32 %v1_10006e90, i32* @r9, align 4
  %v1_10006e94 = call i32 @__asm_rlwinm(i32 %v0_10006e80, i32 16, i32 24, i32 31)
  store i32 %v1_10006e94, i32* %r3.global-to-local, align 4
  %v0_10006e98 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006e98, label %dec_label_pc_10006e80, label %dec_label_pc_10006e9c

dec_label_pc_10006e9c:                            ; preds = %dec_label_pc_10006e80
  %v0_10006e9c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e9c = icmp slt i32 %v0_10006e9c, 0
  %v3_10006e9c = icmp eq i32 %v0_10006e9c, 0
  store i1 %v1_10006e9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e9c, label %dec_label_pc_10006e80, label %dec_label_pc_10006ea4

dec_label_pc_10006ea4:                            ; preds = %dec_label_pc_10006e9c
  %v1_10006ea4 = icmp slt i32 %v0_10006e9c, 3
  %v3_10006ea4 = icmp eq i32 %v0_10006e9c, 3
  store i1 %v1_10006ea4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ea4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ea4, label %dec_label_pc_10006e80, label %dec_label_pc_10006eac

dec_label_pc_10006eac:                            ; preds = %dec_label_pc_10006ea4
  %v1_10006eac = add i32 %v0_10006e9c, 241
  %v1_10006eb0 = urem i32 %v1_10006eac, 256
  store i32 %v1_10006eb0, i32* %r0.global-to-local, align 4
  %v1_10006eb4 = icmp eq i32 %v1_10006eb0, 0
  %v3_10006eb4 = icmp eq i32 %v1_10006eb0, 1
  store i1 %v1_10006eb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eb4, i1* %cr7_eq.global-to-local, align 1
  %tmp100 = or i32 %v1_10006eb0, 1
  %tmp101 = icmp eq i32 %tmp100, 1
  br i1 %tmp101, label %dec_label_pc_10006e80, label %dec_label_pc_10006ebc

dec_label_pc_10006ebc:                            ; preds = %dec_label_pc_10006eac
  %v1_10006ebc = icmp slt i32 %v0_10006e9c, 56
  %v3_10006ebc = icmp eq i32 %v0_10006e9c, 56
  store i1 %v1_10006ebc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ebc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ebc, label %dec_label_pc_10006e80, label %dec_label_pc_10006ec4

dec_label_pc_10006ec4:                            ; preds = %dec_label_pc_10006ebc
  %v1_10006ec4 = icmp slt i32 %v0_10006e9c, 10
  %v3_10006ec4 = icmp eq i32 %v0_10006e9c, 10
  store i1 %v1_10006ec4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ec4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ec4, label %dec_label_pc_10006e80, label %dec_label_pc_10006ecc

dec_label_pc_10006ecc:                            ; preds = %dec_label_pc_10006ec4
  %v1_10006ecc = icmp slt i32 %v0_10006e9c, 192
  %v3_10006ecc = icmp eq i32 %v0_10006e9c, 192
  store i1 %v1_10006ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ecc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ecc, label %dec_label_pc_1000722c, label %dec_label_pc_10006ed4

dec_label_pc_10006ed4:                            ; preds = %dec_label_pc_10006ecc
  %v1_10006ed4 = icmp slt i32 %v0_10006e9c, 172
  %v3_10006ed4 = icmp eq i32 %v0_10006e9c, 172
  store i1 %v1_10006ed4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ed4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ed4, label %dec_label_pc_10007238, label %dec_label_pc_10006edc

dec_label_pc_10006edc:                            ; preds = %dec_label_pc_10006ed4
  %v1_10006edc = icmp slt i32 %v0_10006e9c, 100
  %v3_10006edc = icmp eq i32 %v0_10006e9c, 100
  store i1 %v1_10006edc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006edc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006edc, label %dec_label_pc_1000724c, label %dec_label_pc_10006ee4

dec_label_pc_10006ee4:                            ; preds = %dec_label_pc_10006edc
  %v1_10006ee4 = icmp slt i32 %v0_10006e9c, 169
  %v3_10006ee4 = icmp eq i32 %v0_10006e9c, 169
  store i1 %v1_10006ee4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ee4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ee4, label %dec_label_pc_10007260, label %dec_label_pc_10006eec

dec_label_pc_10006eec:                            ; preds = %dec_label_pc_10006ee4
  %v1_10006eec = icmp slt i32 %v0_10006e9c, 198
  %v3_10006eec = icmp eq i32 %v0_10006e9c, 198
  store i1 %v1_10006eec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006eec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006eec, label %dec_label_pc_1000726c, label %dec_label_pc_10006ef4

dec_label_pc_10006ef4:                            ; preds = %dec_label_pc_10006eec
  %v1_10006ef4 = icmp ult i32 %v0_10006e9c, 223
  %v2_10006ef4 = icmp ugt i32 %v0_10006e9c, 223
  %v3_10006ef4 = icmp eq i32 %v0_10006e9c, 223
  store i1 %v1_10006ef4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ef4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006ef4, label %dec_label_pc_10006e80, label %dec_label_pc_10006efc

dec_label_pc_10006efc:                            ; preds = %dec_label_pc_10006ef4
  %v1_10006efc = icmp slt i32 %v0_10006e9c, 106
  %v3_10006efc = icmp eq i32 %v0_10006e9c, 106
  store i1 %v1_10006efc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006efc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006efc, label %dec_label_pc_10007280, label %dec_label_pc_10006f04

dec_label_pc_10006f04:                            ; preds = %dec_label_pc_10006efc
  %v1_10006f04 = icmp slt i32 %v0_10006e9c, 150
  %v3_10006f04 = icmp eq i32 %v0_10006e9c, 150
  store i1 %v1_10006f04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f04, label %dec_label_pc_100072a4, label %dec_label_pc_10006f0c

dec_label_pc_10006f0c:                            ; preds = %dec_label_pc_10006f04
  %v1_10006f0c = icmp slt i32 %v0_10006e9c, 49
  %v3_10006f0c = icmp eq i32 %v0_10006e9c, 49
  store i1 %v1_10006f0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f0c, label %dec_label_pc_100072b0, label %dec_label_pc_10006f14

dec_label_pc_10006f14:                            ; preds = %dec_label_pc_10006f0c
  %v1_10006f14 = icmp slt i32 %v0_10006e9c, 178
  %v3_10006f14 = icmp eq i32 %v0_10006e9c, 178
  store i1 %v1_10006f14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f14, label %dec_label_pc_100072bc, label %dec_label_pc_10006f1c

dec_label_pc_10006f1c:                            ; preds = %dec_label_pc_10006f14
  %v1_10006f1c = icmp slt i32 %v0_10006e9c, 160
  %v3_10006f1c = icmp eq i32 %v0_10006e9c, 160
  store i1 %v1_10006f1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f1c, label %dec_label_pc_100072c8, label %dec_label_pc_10006f24

dec_label_pc_10006f24:                            ; preds = %dec_label_pc_10006f1c
  %v1_10006f24 = add i32 %v0_10006e9c, 250
  %v1_10006f28 = urem i32 %v1_10006f24, 256
  store i32 %v1_10006f28, i32* %r0.global-to-local, align 4
  %v1_10006f2c = icmp eq i32 %v1_10006f28, 0
  %v3_10006f2c = icmp eq i32 %v1_10006f28, 1
  store i1 %v1_10006f2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f2c, i1* %cr7_eq.global-to-local, align 1
  %tmp102 = or i32 %v1_10006f28, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  br i1 %tmp103, label %dec_label_pc_10006e80, label %dec_label_pc_10006f34

dec_label_pc_10006f34:                            ; preds = %dec_label_pc_10006f24
  %v1_10006f34 = icmp slt i32 %v0_10006e9c, 11
  %v3_10006f34 = icmp eq i32 %v0_10006e9c, 11
  store i1 %v1_10006f34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f34, label %dec_label_pc_10006e80, label %dec_label_pc_10006f3c

dec_label_pc_10006f3c:                            ; preds = %dec_label_pc_10006f34
  %v1_10006f3c = icmp slt i32 %v0_10006e9c, 21
  %v3_10006f3c = icmp eq i32 %v0_10006e9c, 21
  store i1 %v1_10006f3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f3c, label %dec_label_pc_10006e80, label %dec_label_pc_10006f44

dec_label_pc_10006f44:                            ; preds = %dec_label_pc_10006f3c
  %v1_10006f44 = icmp slt i32 %v0_10006e9c, 22
  %v3_10006f44 = icmp eq i32 %v0_10006e9c, 22
  store i1 %v1_10006f44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f44, label %dec_label_pc_10006e80, label %dec_label_pc_10006f4c

dec_label_pc_10006f4c:                            ; preds = %dec_label_pc_10006f44
  %v1_10006f4c = icmp slt i32 %v0_10006e9c, 26
  %v3_10006f4c = icmp eq i32 %v0_10006e9c, 26
  store i1 %v1_10006f4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f4c, label %dec_label_pc_10006e80, label %dec_label_pc_10006f54

dec_label_pc_10006f54:                            ; preds = %dec_label_pc_10006f4c
  %v1_10006f54 = icmp slt i32 %v0_10006e9c, 28
  %v3_10006f54 = icmp eq i32 %v0_10006e9c, 28
  store i1 %v1_10006f54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f54, label %dec_label_pc_10006e80, label %dec_label_pc_10006f5c

dec_label_pc_10006f5c:                            ; preds = %dec_label_pc_10006f54
  %v1_10006f5c = icmp slt i32 %v0_10006e9c, 29
  %v3_10006f5c = icmp eq i32 %v0_10006e9c, 29
  store i1 %v1_10006f5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f5c, label %dec_label_pc_10006e80, label %dec_label_pc_10006f64

dec_label_pc_10006f64:                            ; preds = %dec_label_pc_10006f5c
  %v1_10006f64 = icmp slt i32 %v0_10006e9c, 30
  %v3_10006f64 = icmp eq i32 %v0_10006e9c, 30
  store i1 %v1_10006f64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f64, label %dec_label_pc_10006e80, label %dec_label_pc_10006f6c

dec_label_pc_10006f6c:                            ; preds = %dec_label_pc_10006f64
  %v1_10006f6c = icmp slt i32 %v0_10006e9c, 33
  %v3_10006f6c = icmp eq i32 %v0_10006e9c, 33
  store i1 %v1_10006f6c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f6c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f6c, label %dec_label_pc_10006e80, label %dec_label_pc_10006f74

dec_label_pc_10006f74:                            ; preds = %dec_label_pc_10006f6c
  %v1_10006f74 = icmp slt i32 %v0_10006e9c, 55
  %v3_10006f74 = icmp eq i32 %v0_10006e9c, 55
  store i1 %v1_10006f74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f74, label %dec_label_pc_10006e80, label %dec_label_pc_10006f7c

dec_label_pc_10006f7c:                            ; preds = %dec_label_pc_10006f74
  %v1_10006f7c = icmp slt i32 %v0_10006e9c, 214
  %v3_10006f7c = icmp eq i32 %v0_10006e9c, 214
  store i1 %v1_10006f7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f7c, label %dec_label_pc_10006e80, label %dec_label_pc_10006f84

dec_label_pc_10006f84:                            ; preds = %dec_label_pc_10006f7c
  %v1_10006f84 = icmp slt i32 %v0_10006e9c, 215
  %v3_10006f84 = icmp eq i32 %v0_10006e9c, 215
  store i1 %v1_10006f84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f84, label %dec_label_pc_10006e80, label %dec_label_pc_10006f84.dec_label_pc_10006f8c.loopexit_crit_edge

dec_label_pc_10006f84.dec_label_pc_10006f8c.loopexit_crit_edge: ; preds = %dec_label_pc_10006f84
  %v0_10006f90.pre.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10006f8c

dec_label_pc_10006f8c:                            ; preds = %dec_label_pc_100072c8, %dec_label_pc_100072bc, %dec_label_pc_100072b0, %dec_label_pc_100072a4, %dec_label_pc_10007298, %dec_label_pc_10007274, %dec_label_pc_10007260, %dec_label_pc_10007254, %dec_label_pc_10007240, %dec_label_pc_1000726c, %dec_label_pc_1000724c, %dec_label_pc_10007238, %dec_label_pc_10006f84.dec_label_pc_10006f8c.loopexit_crit_edge, %dec_label_pc_1000722c.dec_label_pc_10006f8c_crit_edge
  %v0_10006f98 = phi i32 [ %v0_10006f9815, %dec_label_pc_1000722c.dec_label_pc_10006f8c_crit_edge ], [ %v1_10006e94, %dec_label_pc_10006f84.dec_label_pc_10006f8c.loopexit_crit_edge ], [ %v1_10006e94, %dec_label_pc_10007238 ], [ %v1_10006e94, %dec_label_pc_1000724c ], [ %v1_10006e94, %dec_label_pc_1000726c ], [ %v1_10006e94, %dec_label_pc_10007240 ], [ %v1_10006e94, %dec_label_pc_10007254 ], [ %v1_10006e94, %dec_label_pc_10007260 ], [ %v1_10006e94, %dec_label_pc_10007274 ], [ %v1_10006e94, %dec_label_pc_10007298 ], [ %v1_10006e94, %dec_label_pc_100072a4 ], [ %v1_10006e94, %dec_label_pc_100072b0 ], [ %v1_10006e94, %dec_label_pc_100072bc ], [ %v1_10006e94, %dec_label_pc_100072c8 ]
  %v0_10006f90 = phi i32 [ %v0_1000722c, %dec_label_pc_1000722c.dec_label_pc_10006f8c_crit_edge ], [ %v0_10006f90.pre.pre, %dec_label_pc_10006f84.dec_label_pc_10006f8c.loopexit_crit_edge ], [ %v0_10007238, %dec_label_pc_10007238 ], [ %v0_1000724c, %dec_label_pc_1000724c ], [ %v0_1000726c, %dec_label_pc_1000726c ], [ %v0_10007238, %dec_label_pc_10007240 ], [ %v0_1000724c, %dec_label_pc_10007254 ], [ %v0_10007260, %dec_label_pc_10007260 ], [ %v0_1000726c, %dec_label_pc_10007274 ], [ %v0_10007280, %dec_label_pc_10007298 ], [ %v0_100072a4, %dec_label_pc_100072a4 ], [ %v0_100072b0, %dec_label_pc_100072b0 ], [ %v0_100072bc, %dec_label_pc_100072bc ], [ %v0_100072c8, %dec_label_pc_100072c8 ]
  %v0_10006f8c = phi i32 [ %v0_10006f8c.pre, %dec_label_pc_1000722c.dec_label_pc_10006f8c_crit_edge ], [ %v0_10006e9c, %dec_label_pc_10006f84.dec_label_pc_10006f8c.loopexit_crit_edge ], [ 172, %dec_label_pc_10007238 ], [ 100, %dec_label_pc_1000724c ], [ 198, %dec_label_pc_1000726c ], [ 172, %dec_label_pc_10007240 ], [ 100, %dec_label_pc_10007254 ], [ 169, %dec_label_pc_10007260 ], [ 198, %dec_label_pc_10007274 ], [ 106, %dec_label_pc_10007298 ], [ 150, %dec_label_pc_100072a4 ], [ 49, %dec_label_pc_100072b0 ], [ 178, %dec_label_pc_100072bc ], [ 160, %dec_label_pc_100072c8 ]
  %v1_10006f8c = mul i32 %v0_10006f8c, 16777216
  %v1_10006f90 = mul i32 %v0_10006f90, 65536
  %v2_10006f94 = or i32 %v1_10006f8c, %v1_10006f90
  %v1_10006f98 = mul i32 %v0_10006f98, 256
  %v1_10006f9c = load i32, i32* %r10.global-to-local, align 4
  %v2_10006f9c = or i32 %v2_10006f94, %v1_10006f9c
  store i32 %v2_10006f9c, i32* %r0.global-to-local, align 4
  %v0_10006fa0 = load i32, i32* @r21, align 4
  store i32 %v0_10006fa0, i32* @r3, align 4
  %v2_10006fa4 = or i32 %v2_10006f9c, %v1_10006f98
  store i32 %v2_10006fa4, i32* %r9.global-to-local, align 4
  store i32 %v2_10006fa4, i32* @global_var_1001c378.159, align 4
  %v0_10006fb0 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006fb0 = trunc i32 %v0_10006fb0 to i16
  store i16 %v1_10006fb0, i16* bitcast (i32* @global_var_1001c372.160 to i16*), align 4
  %v2_10006fb4 = call i32 @function_100043cc(i32 %v0_10006fa0, i32 20)
  %v3_10006fb4 = trunc i32 %v2_10006fb4 to i16
  %v3_10006fb8 = load i64, i64* %stack_var_-1916, align 8
  %v4_10006fb8 = trunc i64 %v3_10006fb8 to i32
  store i32 %v4_10006fb8, i32* %r9.global-to-local, align 4
  store i16 %v3_10006fb4, i16* bitcast (i32* @global_var_1001c372.160 to i16*), align 4
  %v4_10006fc8 = mul nsw i64 %v3_10006fb8, 1717986919
  %v5_10006fc8 = udiv i64 %v4_10006fc8, 4294967296
  %v6_10006fc8 = trunc i64 %v5_10006fc8 to i32
  %tmp = icmp slt i32 %v4_10006fb8, 0
  %v1_10006fcc = zext i1 %tmp to i32
  %v2_10006fcc = ashr i32 %v4_10006fb8, 31
  %v3_10006fcc = and i32 %v2_10006fcc, -2
  %v4_10006fcc = or i32 %v3_10006fcc, %v1_10006fcc
  store i32 %v4_10006fcc, i32* %r11.global-to-local, align 4
  %v1_10006fd043 = udiv i64 %v4_10006fc8, 17179869184
  %v1_10006fd0 = trunc i64 %v1_10006fd043 to i32
  %v2_10006fd0 = ashr i32 %v6_10006fc8, 31
  %v3_10006fd0 = and i32 %v2_10006fd0, -1073741824
  %v4_10006fd0 = or i32 %v3_10006fd0, %v1_10006fd0
  %v2_10006fd4 = sub nsw i32 %v4_10006fd0, %v4_10006fcc
  %v1_10006fd8 = mul i32 %v2_10006fd4, 10
  %v2_10006fdc = icmp slt i32 %v4_10006fb8, %v1_10006fd8
  %v4_10006fdc = icmp eq i32 %v4_10006fb8, %v1_10006fd8
  store i1 %v2_10006fdc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006fdc, i1* %cr7_eq.global-to-local, align 1
  %.3 = select i1 %v4_10006fdc, i16 2323, i16 23
  store i16 %.3, i16* @global_var_1001c37e.143, align 2
  %v3_10006fec = load i32, i32* @global_var_1001c378.159, align 4
  store i32 %v3_10006fec, i32* %r0.global-to-local, align 4
  %v0_10006ff0 = load i32, i32* @r22, align 4
  store i32 %v0_10006ff0, i32* @r4, align 4
  %v0_10006ff4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006ff4 = trunc i32 %v0_10006ff4 to i16
  store i16 %v1_10006ff4, i16* bitcast (i32* @global_var_1001c38c.161 to i16*), align 4
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_10006fec, i32* @global_var_1001c380.162, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10007004 = load i32, i32* @r21, align 4
  store i32 %v0_10007004, i32* %r3.global-to-local, align 4
  %v4_10007008 = call i32 @function_10004430(i32 %v0_10007004, i32 %v0_10006ff0, i32 20, i32 20)
  %v5_10007008 = trunc i32 %v4_10007008 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10007008, i16* bitcast (i32* @global_var_1001c38c.161 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10007018 = load i32, i32* @global_var_1001c378.159, align 4
  store i32 %v3_10007018, i32* %r9.global-to-local, align 4
  %v0_1000701c = load i32, i32* @r21, align 4
  %v3_10007020 = load i16, i16* @global_var_1001c37e.143, align 2
  %v4_10007020 = zext i16 %v3_10007020 to i32
  store i32 %v4_10007020, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10007028 = load i32, i32* @global_var_1001c2fc.133, align 4
  store i32 %v3_10007028, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10007030 = ptrtoint i32* %stack_var_-1888 to i32
  store i32 %v1_10007030, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268464200, i32* @lr, align 4
  %v6_10007044 = call i32 @function_10009e2c(i32 %v3_10007028, i32 %v0_1000701c, i32 40, i32 16384, i32 %v1_10007030, i32 16)
  store i32 %v6_10007044, i32* %r3.global-to-local, align 4
  %v3_10007048 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007048 = trunc i64 %v3_10007048 to i32
  %v1_1000704c = add i32 %v4_10007048, 1
  store i32 %v1_1000704c, i32* %r9.global-to-local, align 4
  %v1_10007050 = icmp slt i32 %v1_1000704c, 383
  %v3_10007050 = icmp eq i32 %v1_1000704c, 383
  store i1 %v1_10007050, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007050, i1* %cr7_eq.global-to-local, align 1
  %v5_10007054 = sext i32 %v1_1000704c to i64
  store i64 %v5_10007054, i64* %stack_var_-1916, align 8
  %tmp104 = icmp slt i32 %v1_1000704c, 384
  br i1 %tmp104, label %dec_label_pc_10006f8c.dec_label_pc_10006e5c_crit_edge, label %dec_label_pc_1000705c

dec_label_pc_10006f8c.dec_label_pc_10006e5c_crit_edge: ; preds = %dec_label_pc_10006f8c
  %v0_10006e5c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006e5c

dec_label_pc_1000705c:                            ; preds = %dec_label_pc_10006f8c
  %v0_1000705c = load i32, i32* @r31, align 4
  store i32 %v0_1000705c, i32* @r23, align 4
  br label %dec_label_pc_10007060

dec_label_pc_10007060:                            ; preds = %dec_label_pc_10006e38, %dec_label_pc_1000705c
  %v0_10007060 = call i32 @function_10009874()
  store i32 %v0_10007060, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_10007060, i32* %r24.global-to-local, align 4
  %v2_10007078 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_100070c4 = zext i8 %tmp56 to i32
  %v1_100070c8 = icmp ult i8 %tmp56, 6
  %v3_100070c8 = icmp eq i8 %tmp56, 6
  %v4_100070d0 = zext i16 %tmp55 to i32
  %v1_100070d8 = icmp ult i16 %tmp55, 23
  %v3_100070d8 = icmp eq i16 %tmp55, 23
  %v4_100070e8 = zext i16 %tmp54 to i32
  %v1_100070f8 = and i32 %tmp53, 131072
  %v3_100070f8 = icmp eq i32 %v1_100070f8, 0
  %v1_10007120 = add i32 %tmp52, -1
  %v2_10007124 = icmp slt i32 %v1_10007120, %tmp51
  %v4_10007124 = icmp eq i32 %v1_10007120, %tmp51
  %v1_10007100 = and i32 %tmp53, 1048576
  %v3_10007100 = icmp eq i32 %v1_10007100, 0
  %v1_10007108 = and i32 %tmp53, 262144
  %v3_10007108 = icmp eq i32 %v1_10007108, 0
  %v1_10007110 = and i32 %tmp53, 65536
  %v3_10007110 = icmp eq i32 %v1_10007110, 0
  %v1_100070e0 = icmp ult i16 %tmp55, 2323
  %v3_100070e0 = icmp eq i16 %tmp55, 2323
  br label %dec_label_pc_1000706c

dec_label_pc_1000706c:                            ; preds = %dec_label_pc_10007118, %dec_label_pc_10007110, %dec_label_pc_10007108, %dec_label_pc_100070e8, %dec_label_pc_100070e0, %dec_label_pc_100070c4, %dec_label_pc_100070b0, %dec_label_pc_10007100, %dec_label_pc_100070f4, %dec_label_pc_100070a8, %dec_label_pc_10008270, %dec_label_pc_10007060
  %v1_10007074 = phi i32 [ %v0_10007060, %dec_label_pc_10007060 ], [ %v1_10007074.pre.pre, %dec_label_pc_10008270 ], [ %v0_1000709c, %dec_label_pc_100070a8 ], [ %v0_1000709c, %dec_label_pc_100070f4 ], [ %v0_1000709c, %dec_label_pc_10007100 ], [ %v0_1000709c, %dec_label_pc_100070b0 ], [ %v0_1000709c, %dec_label_pc_100070c4 ], [ %v0_1000709c, %dec_label_pc_100070e0 ], [ %v0_1000709c, %dec_label_pc_100070e8 ], [ %v0_1000709c, %dec_label_pc_10007108 ], [ %v0_1000709c, %dec_label_pc_10007110 ], [ %v0_1000709c, %dec_label_pc_10007118 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10007074 = inttoptr i32 %v1_10007074 to i32*
  store i32 0, i32* %v2_10007074, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_10007084 = load i32, i32* @global_var_1001c2fc.133, align 4
  store i32 %v3_10007084, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268464276, i32* @lr, align 4
  %v6_10007090 = call i32 @function_10009db4(i32 %v3_10007084, i32 %v2_10007078, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_10007090, i32* %r3.global-to-local, align 4
  %tmp105 = icmp slt i32 %v6_10007090, 1
  br i1 %tmp105, label %dec_label_pc_100072e0, label %dec_label_pc_1000709c

dec_label_pc_1000709c:                            ; preds = %dec_label_pc_1000706c
  %v0_1000709c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000709c = inttoptr i32 %v0_1000709c to i32*
  %v2_1000709c = load i32, i32* %v1_1000709c, align 4
  store i32 %v2_1000709c, i32* %r0.global-to-local, align 4
  %v1_100070a0 = icmp slt i32 %v2_1000709c, 11
  %v3_100070a0 = icmp eq i32 %v2_1000709c, 11
  store i1 %v1_100070a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070a0, label %dec_label_pc_100072e0, label %dec_label_pc_100070a8

dec_label_pc_100070a8:                            ; preds = %dec_label_pc_1000709c
  %v1_100070a8 = icmp ult i32 %v6_10007090, 39
  %v3_100070a8 = icmp eq i32 %v6_10007090, 39
  store i1 %v1_100070a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070a8, i1* %cr7_eq.global-to-local, align 1
  %tmp106 = icmp ult i32 %v6_10007090, 40
  br i1 %tmp106, label %dec_label_pc_1000706c, label %dec_label_pc_100070b0

dec_label_pc_100070b0:                            ; preds = %dec_label_pc_100070a8
  %v3_100070b4 = load i32, i32* @global_var_1001c2d0.14, align 4
  store i32 %v3_100070b4, i32* %r0.global-to-local, align 4
  store i32 %tmp57, i32* %r9.global-to-local, align 4
  %v2_100070bc = icmp slt i32 %tmp57, %v3_100070b4
  %v4_100070bc = icmp eq i32 %tmp57, %v3_100070b4
  store i1 %v2_100070bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100070bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100070bc, label %dec_label_pc_100070c4, label %dec_label_pc_1000706c

dec_label_pc_100070c4:                            ; preds = %dec_label_pc_100070b0
  store i32 %v4_100070c4, i32* %r0.global-to-local, align 4
  store i1 %v1_100070c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070c8, label %dec_label_pc_100070d0, label %dec_label_pc_1000706c

dec_label_pc_100070d0:                            ; preds = %dec_label_pc_100070c4
  store i32 %v4_100070d0, i32* %r8.global-to-local, align 4
  store i32 %v4_100070d0, i32* %r0.global-to-local, align 4
  store i1 %v1_100070d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070d8, label %dec_label_pc_100070e8, label %dec_label_pc_100070e0

dec_label_pc_100070e0:                            ; preds = %dec_label_pc_100070d0
  store i1 %v1_100070e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070e0, label %dec_label_pc_100070e8, label %dec_label_pc_1000706c

dec_label_pc_100070e8:                            ; preds = %dec_label_pc_100070e0, %dec_label_pc_100070d0
  store i32 %v4_100070e8, i32* %r0.global-to-local, align 4
  %v1_100070ec = load i32, i32* @r20, align 4
  %v2_100070ec = icmp slt i32 %v4_100070e8, %v1_100070ec
  %v4_100070ec = icmp eq i32 %v4_100070e8, %v1_100070ec
  store i1 %v2_100070ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100070ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_100070ec, label %dec_label_pc_100070f4, label %dec_label_pc_1000706c

dec_label_pc_100070f4:                            ; preds = %dec_label_pc_100070e8
  store i32 %tmp53, i32* %r0.global-to-local, align 4
  store i32 %v1_100070f8, i32* %r10.global-to-local, align 4
  br i1 %v3_100070f8, label %dec_label_pc_1000706c, label %dec_label_pc_10007100

dec_label_pc_10007100:                            ; preds = %dec_label_pc_100070f4
  store i32 %v1_10007100, i32* %r11.global-to-local, align 4
  br i1 %v3_10007100, label %dec_label_pc_1000706c, label %dec_label_pc_10007108

dec_label_pc_10007108:                            ; preds = %dec_label_pc_10007100
  store i32 %v1_10007108, i32* %r9.global-to-local, align 4
  br i1 %v3_10007108, label %dec_label_pc_10007110, label %dec_label_pc_1000706c

dec_label_pc_10007110:                            ; preds = %dec_label_pc_10007108
  store i32 %v1_10007110, i32* %r10.global-to-local, align 4
  br i1 %v3_10007110, label %dec_label_pc_10007118, label %dec_label_pc_1000706c

dec_label_pc_10007118:                            ; preds = %dec_label_pc_10007110
  store i32 %tmp52, i32* %r9.global-to-local, align 4
  store i32 %tmp51, i32* %r0.global-to-local, align 4
  store i32 %v1_10007120, i32* %r10.global-to-local, align 4
  store i1 %v2_10007124, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007124, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10007124, label %dec_label_pc_1000712c, label %dec_label_pc_1000706c

dec_label_pc_1000712c:                            ; preds = %dec_label_pc_10007118
  %v0_1000712c = load i32, i32* @r31, align 4
  %v1_1000712c = icmp slt i32 %v0_1000712c, 255
  %v2_1000712c = icmp sgt i32 %v0_1000712c, 255
  %v3_1000712c = icmp eq i32 %v0_1000712c, 255
  store i1 %v1_1000712c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000712c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000712c, label %dec_label_pc_100072e0, label %dec_label_pc_10007134

dec_label_pc_10007134:                            ; preds = %dec_label_pc_1000712c
  %v3_1000713c = load i32, i32* @global_var_1001c2f8.132, align 4
  store i32 %v3_1000713c, i32* %r11.global-to-local, align 4
  %v1_10007140 = mul i32 %v0_1000712c, 256
  store i32 %v1_10007140, i32* %r9.global-to-local, align 4
  %v2_10007144 = mul i32 %v0_1000712c, 288
  store i32 %v2_10007144, i32* %r0.global-to-local, align 4
  %v2_10007148 = add i32 %v3_1000713c, %v2_10007144
  store i32 %v2_10007148, i32* @r3, align 4
  %v1_1000714c = add i32 %v2_10007148, 12
  %v2_1000714c = inttoptr i32 %v1_1000714c to i32*
  %v3_1000714c = load i32, i32* %v2_1000714c, align 4
  store i32 %v3_1000714c, i32* %r9.global-to-local, align 4
  %v1_10007150 = icmp slt i32 %v3_1000714c, 0
  %v3_10007150 = icmp eq i32 %v3_1000714c, 0
  store i1 %v1_10007150, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007150, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007150, label %dec_label_pc_1000826c, label %dec_label_pc_10007158

dec_label_pc_10007158:                            ; preds = %dec_label_pc_10007134
  %v1_10007158 = sub i32 256, %v0_1000712c
  store i32 %v1_10007158, i32* %r11.global-to-local, align 4
  store i32 %v0_1000712c, i32* %r29.global-to-local, align 4
  store i32 %v1_10007158, i32* %ctr.global-to-local, align 4
  %v1_10007164 = add i32 %v2_10007148, 288
  store i32 %v1_10007164, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007168

dec_label_pc_10007168:                            ; preds = %dec_label_pc_10007170, %dec_label_pc_10007158
  %v0_10007170 = phi i32 [ %v1_10007178, %dec_label_pc_10007170 ], [ %v1_10007164, %dec_label_pc_10007158 ]
  %v0_1000716c = phi i32 [ %v1_1000716c, %dec_label_pc_10007170 ], [ %v1_10007158, %dec_label_pc_10007158 ]
  %v0_10007168 = phi i32 [ %v1_10007168, %dec_label_pc_10007170 ], [ %v0_1000712c, %dec_label_pc_10007158 ]
  %v1_10007168 = add i32 %v0_10007168, 1
  store i32 %v1_10007168, i32* @r29, align 4
  %v1_1000716c = add i32 %v0_1000716c, -1
  store i32 %v1_1000716c, i32* %ctr.global-to-local, align 4
  %v2_1000716c = icmp eq i32 %v1_1000716c, 0
  br i1 %v2_1000716c, label %dec_label_pc_100072e0, label %dec_label_pc_10007170

dec_label_pc_10007170:                            ; preds = %dec_label_pc_10007168
  %v1_10007170 = add i32 %v0_10007170, 12
  %v2_10007170 = inttoptr i32 %v1_10007170 to i32*
  %v3_10007170 = load i32, i32* %v2_10007170, align 4
  store i32 %v3_10007170, i32* %r0.global-to-local, align 4
  store i32 %v0_10007170, i32* @r3, align 4
  %v1_10007178 = add i32 %v0_10007170, 288
  store i32 %v1_10007178, i32* %r9.global-to-local, align 4
  %v1_1000717c = icmp slt i32 %v3_10007170, 0
  %v3_1000717c = icmp eq i32 %v3_10007170, 0
  store i1 %v1_1000717c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000717c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000717c, label %dec_label_pc_10008270, label %dec_label_pc_10007168

dec_label_pc_10007224:                            ; preds = %dec_label_pc_10006bf8, %dec_label_pc_1000825c
  %v0_10007228 = call i32 @function_1000a91c()
  store i32 %v0_10007228, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000722c

dec_label_pc_1000722c:                            ; preds = %dec_label_pc_10006ecc, %dec_label_pc_10007224
  %v0_10006f9815 = phi i32 [ %v0_10007228, %dec_label_pc_10007224 ], [ %v1_10006e94, %dec_label_pc_10006ecc ]
  %v0_1000722c = load i32, i32* @r9, align 4
  %v1_1000722c = icmp slt i32 %v0_1000722c, 168
  %v3_1000722c = icmp eq i32 %v0_1000722c, 168
  store i1 %v1_1000722c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000722c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000722c, label %dec_label_pc_10006e80.preheader, label %dec_label_pc_1000722c.dec_label_pc_10006f8c_crit_edge

dec_label_pc_1000722c.dec_label_pc_10006f8c_crit_edge: ; preds = %dec_label_pc_1000722c
  %v0_10006f8c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006f8c

dec_label_pc_10007238:                            ; preds = %dec_label_pc_10006ed4
  %v0_10007238 = load i32, i32* @r9, align 4
  %v1_10007238 = icmp ult i32 %v0_10007238, 15
  %v3_10007238 = icmp eq i32 %v0_10007238, 15
  store i1 %v1_10007238, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007238, i1* %cr7_eq.global-to-local, align 1
  %tmp107 = icmp ult i32 %v0_10007238, 16
  br i1 %tmp107, label %dec_label_pc_10006f8c, label %dec_label_pc_10007240

dec_label_pc_10007240:                            ; preds = %dec_label_pc_10007238
  %v1_10007240 = icmp ult i32 %v0_10007238, 31
  %v3_10007240 = icmp eq i32 %v0_10007238, 31
  store i1 %v1_10007240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007240, i1* %cr7_eq.global-to-local, align 1
  %tmp108 = icmp ult i32 %v0_10007238, 32
  br i1 %tmp108, label %dec_label_pc_10006e80, label %dec_label_pc_10006f8c

dec_label_pc_1000724c:                            ; preds = %dec_label_pc_10006edc
  %v0_1000724c = load i32, i32* @r9, align 4
  %v1_1000724c = icmp ult i32 %v0_1000724c, 63
  %v3_1000724c = icmp eq i32 %v0_1000724c, 63
  store i1 %v1_1000724c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000724c, i1* %cr7_eq.global-to-local, align 1
  %tmp109 = icmp ult i32 %v0_1000724c, 64
  br i1 %tmp109, label %dec_label_pc_10006f8c, label %dec_label_pc_10007254

dec_label_pc_10007254:                            ; preds = %dec_label_pc_1000724c
  %v1_10007254 = icmp ult i32 %v0_1000724c, 126
  %v3_10007254 = icmp eq i32 %v0_1000724c, 126
  store i1 %v1_10007254, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007254, i1* %cr7_eq.global-to-local, align 1
  %tmp110 = icmp ult i32 %v0_1000724c, 127
  br i1 %tmp110, label %dec_label_pc_10006e80, label %dec_label_pc_10006f8c

dec_label_pc_10007260:                            ; preds = %dec_label_pc_10006ee4
  %v0_10007260 = load i32, i32* @r9, align 4
  %v1_10007260 = icmp slt i32 %v0_10007260, 255
  %v3_10007260 = icmp eq i32 %v0_10007260, 255
  store i1 %v1_10007260, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007260, label %dec_label_pc_10006e80, label %dec_label_pc_10006f8c

dec_label_pc_1000726c:                            ; preds = %dec_label_pc_10006eec
  %v0_1000726c = load i32, i32* @r9, align 4
  %v1_1000726c = icmp ult i32 %v0_1000726c, 17
  %v3_1000726c = icmp eq i32 %v0_1000726c, 17
  store i1 %v1_1000726c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000726c, i1* %cr7_eq.global-to-local, align 1
  %tmp111 = icmp ult i32 %v0_1000726c, 18
  br i1 %tmp111, label %dec_label_pc_10006f8c, label %dec_label_pc_10007274

dec_label_pc_10007274:                            ; preds = %dec_label_pc_1000726c
  %v1_10007274 = icmp eq i32 %v0_1000726c, 18
  %v3_10007274 = icmp eq i32 %v0_1000726c, 19
  store i1 %v1_10007274, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007274, i1* %cr7_eq.global-to-local, align 1
  %tmp112 = icmp ult i32 %v0_1000726c, 20
  br i1 %tmp112, label %dec_label_pc_10006e80, label %dec_label_pc_10006f8c

dec_label_pc_10007280:                            ; preds = %dec_label_pc_10006efc
  %v0_10007280 = load i32, i32* @r9, align 4
  %v1_10007280 = icmp slt i32 %v0_10007280, 186
  %v3_10007280 = icmp eq i32 %v0_10007280, 186
  store i1 %v1_10007280, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007280, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007280, label %dec_label_pc_10006e80, label %dec_label_pc_10007288

dec_label_pc_10007288:                            ; preds = %dec_label_pc_10007280
  %v1_10007288 = icmp slt i32 %v0_10007280, 187
  %v3_10007288 = icmp eq i32 %v0_10007280, 187
  store i1 %v1_10007288, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007288, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007288, label %dec_label_pc_10006e80, label %dec_label_pc_10007290

dec_label_pc_10007290:                            ; preds = %dec_label_pc_10007288
  %v1_10007290 = icmp slt i32 %v0_10007280, 185
  %v3_10007290 = icmp eq i32 %v0_10007280, 185
  store i1 %v1_10007290, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007290, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007290, label %dec_label_pc_10006e80, label %dec_label_pc_10007298

dec_label_pc_10007298:                            ; preds = %dec_label_pc_10007290
  %v1_10007298 = icmp slt i32 %v0_10007280, 184
  %v3_10007298 = icmp eq i32 %v0_10007280, 184
  store i1 %v1_10007298, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007298, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007298, label %dec_label_pc_10006e80, label %dec_label_pc_10006f8c

dec_label_pc_100072a4:                            ; preds = %dec_label_pc_10006f04
  %v0_100072a4 = load i32, i32* @r9, align 4
  %v1_100072a4 = icmp slt i32 %v0_100072a4, 31
  %v3_100072a4 = icmp eq i32 %v0_100072a4, 31
  store i1 %v1_100072a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100072a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100072a4, label %dec_label_pc_10006e80, label %dec_label_pc_10006f8c

dec_label_pc_100072b0:                            ; preds = %dec_label_pc_10006f0c
  %v0_100072b0 = load i32, i32* @r9, align 4
  %v1_100072b0 = icmp slt i32 %v0_100072b0, 51
  %v3_100072b0 = icmp eq i32 %v0_100072b0, 51
  store i1 %v1_100072b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100072b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100072b0, label %dec_label_pc_10006e80, label %dec_label_pc_10006f8c

dec_label_pc_100072bc:                            ; preds = %dec_label_pc_10006f14
  %v0_100072bc = load i32, i32* @r9, align 4
  %v1_100072bc = icmp slt i32 %v0_100072bc, 62
  %v3_100072bc = icmp eq i32 %v0_100072bc, 62
  store i1 %v1_100072bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100072bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100072bc, label %dec_label_pc_10006e80, label %dec_label_pc_10006f8c

dec_label_pc_100072c8:                            ; preds = %dec_label_pc_10006f1c
  %v0_100072c8 = load i32, i32* @r9, align 4
  %v1_100072c8 = icmp slt i32 %v0_100072c8, 13
  %v3_100072c8 = icmp eq i32 %v0_100072c8, 13
  store i1 %v1_100072c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100072c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100072c8, label %dec_label_pc_10006e80, label %dec_label_pc_10006f8c

dec_label_pc_100072e0:                            ; preds = %dec_label_pc_1000712c, %dec_label_pc_1000709c, %dec_label_pc_1000706c, %dec_label_pc_10007168
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_100072f8133 = load i32, i32* @r1, align 4
  %v3_100072f8134 = add i32 %v2_100072f8133, 64
  %v4_100072f8135 = inttoptr i32 %v3_100072f8134 to i32*
  store i32 0, i32* %v4_100072f8135, align 4
  %v0_100072fc136 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100072fc137 = add i32 %v0_100072fc136, -1
  store i32 %v1_100072fc137, i32* %ctr.global-to-local, align 4
  %v2_100072fc138 = icmp eq i32 %v1_100072fc137, 0
  br i1 %v2_100072fc138, label %dec_label_pc_10007300, label %dec_label_pc_100072f0.dec_label_pc_100072f0_crit_edge

dec_label_pc_100072f0.dec_label_pc_100072f0_crit_edge: ; preds = %dec_label_pc_100072e0, %dec_label_pc_100072f0.dec_label_pc_100072f0_crit_edge
  %v0_100072f0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100072f8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_100072f0 = add i32 %v0_100072f0.pre, 64
  store i32 %v1_100072f0, i32* %r11.global-to-local, align 4
  %v1_100072f4 = add i32 %v0_100072f0.pre, 4
  store i32 %v1_100072f4, i32* %r9.global-to-local, align 4
  %v2_100072f8 = load i32, i32* @r1, align 4
  %v3_100072f8 = add i32 %v2_100072f8, %v1_100072f0
  %v4_100072f8 = inttoptr i32 %v3_100072f8 to i32*
  store i32 %v0_100072f8.pre, i32* %v4_100072f8, align 4
  %v0_100072fc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100072fc = add i32 %v0_100072fc, -1
  store i32 %v1_100072fc, i32* %ctr.global-to-local, align 4
  %v2_100072fc = icmp eq i32 %v1_100072fc, 0
  br i1 %v2_100072fc, label %dec_label_pc_10007300, label %dec_label_pc_100072f0.dec_label_pc_100072f0_crit_edge

dec_label_pc_10007300:                            ; preds = %dec_label_pc_100072f0.dec_label_pc_100072f0_crit_edge, %dec_label_pc_100072e0
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10007318127 = load i32, i32* @r1, align 4
  %v3_10007318128 = add i32 %v2_10007318127, 192
  %v4_10007318129 = inttoptr i32 %v3_10007318128 to i32*
  store i32 0, i32* %v4_10007318129, align 4
  %v0_1000731c130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000731c131 = add i32 %v0_1000731c130, -1
  store i32 %v1_1000731c131, i32* %ctr.global-to-local, align 4
  %v2_1000731c132 = icmp eq i32 %v1_1000731c131, 0
  br i1 %v2_1000731c132, label %dec_label_pc_10007320, label %dec_label_pc_10007310.dec_label_pc_10007310_crit_edge

dec_label_pc_10007310.dec_label_pc_10007310_crit_edge: ; preds = %dec_label_pc_10007300, %dec_label_pc_10007310.dec_label_pc_10007310_crit_edge
  %v0_10007310.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007318.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10007310 = add i32 %v0_10007310.pre, 192
  store i32 %v1_10007310, i32* %r11.global-to-local, align 4
  %v1_10007314 = add i32 %v0_10007310.pre, 4
  store i32 %v1_10007314, i32* %r9.global-to-local, align 4
  %v2_10007318 = load i32, i32* @r1, align 4
  %v3_10007318 = add i32 %v2_10007318, %v1_10007310
  %v4_10007318 = inttoptr i32 %v3_10007318 to i32*
  store i32 %v0_10007318.pre, i32* %v4_10007318, align 4
  %v0_1000731c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000731c = add i32 %v0_1000731c, -1
  store i32 %v1_1000731c, i32* %ctr.global-to-local, align 4
  %v2_1000731c = icmp eq i32 %v1_1000731c, 0
  br i1 %v2_1000731c, label %dec_label_pc_10007320, label %dec_label_pc_10007310.dec_label_pc_10007310_crit_edge

dec_label_pc_10007320:                            ; preds = %dec_label_pc_10007310.dec_label_pc_10007310_crit_edge, %dec_label_pc_10007300
  %v0_10007320 = load i32, i32* %r0.global-to-local, align 4
  %v5_10007320 = sext i32 %v0_10007320 to i64
  store i64 %v5_10007320, i64* %stack_var_-1916, align 8
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  %v2_10007460 = ptrtoint i32* %stack_var_-1872 to i32
  %v2_10007464 = ptrtoint i32* %stack_var_-1744 to i32
  %v1_1000746c = ptrtoint i32* %stack_var_-1908 to i32
  %v2_100074cc = ptrtoint i32* %stack_var_-1928 to i32
  %v2_1000806c = ptrtoint i32* %stack_var_-1920 to i32
  %v1_10008070 = ptrtoint i32* %stack_var_-1912 to i32
  br label %dec_label_pc_100073a4

dec_label_pc_1000733c:                            ; preds = %dec_label_pc_100073a4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007340 = load i32, i32* @global_var_1001c2f4.126, align 4
  store i32 %v3_10007340, i32* %r0.global-to-local, align 4
  %v1_10007344 = add i32 %v2_100073bc, 8
  %v2_10007344 = inttoptr i32 %v1_10007344 to i32*
  %v3_10007344 = load i32, i32* %v2_10007344, align 4
  store i32 %v3_10007344, i32* %r9.global-to-local, align 4
  %v2_10007348 = sub i32 %v3_10007340, %v3_10007344
  store i32 %v2_10007348, i32* %r0.global-to-local, align 4
  %v2_1000734c = icmp ult i32 %v2_10007348, 30
  %v3_1000734c = icmp ugt i32 %v2_10007348, 30
  %v4_1000734c = icmp eq i32 %v2_10007348, 30
  store i1 %v2_1000734c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000734c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000734c, label %dec_label_pc_100073f0, label %dec_label_pc_10007354

dec_label_pc_10007354:                            ; preds = %dec_label_pc_100073d4, %dec_label_pc_1000733c
  %v1_10007354 = icmp slt i32 %v3_100073c0, 1
  store i1 %v1_10007354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100073c4, i1* %cr7_eq.global-to-local, align 1
  %v1_100075c4 = add i32 %v2_100073bc, 4
  %v2_100075c4 = inttoptr i32 %v1_100075c4 to i32*
  %v3_100075c4 = load i32, i32* %v2_100075c4, align 4
  store i32 %v3_100075c4, i32* %r3.global-to-local, align 4
  br i1 %v3_100073c4, label %dec_label_pc_100075c4, label %dec_label_pc_1000735c

dec_label_pc_1000735c:                            ; preds = %dec_label_pc_10007354
  store i32 %v2_100074cc, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10007368 = call i32 @__asm_rlwinm(i32 %v3_100075c4, i32 29, i32 3, i32 29)
  %v0_1000736c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000736c = icmp slt i32 %v0_1000736c, %v3_100075c4
  %v4_1000736c = icmp eq i32 %v0_1000736c, %v3_100075c4
  store i1 %v2_1000736c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000736c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007370 = load i32, i32* %r9.global-to-local, align 4
  %v2_10007370 = add i32 %v1_10007370, %v1_10007368
  store i32 %v2_10007370, i32* %r11.global-to-local, align 4
  %v1_10007374 = urem i32 %v3_100075c4, 32
  store i32 %v1_10007374, i32* %r10.global-to-local, align 4
  %v1_10007378 = add i32 %v2_10007370, 56
  %v2_10007378 = inttoptr i32 %v1_10007378 to i32*
  %v3_10007378 = load i32, i32* %v2_10007378, align 4
  %v0_1000737c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000737c = shl i32 %v0_1000737c, %v1_10007374
  store i32 %v3_1000737c, i32* %r0.global-to-local, align 4
  %v2_10007380 = or i32 %v3_1000737c, %v3_10007378
  store i32 %v2_10007380, i32* %r9.global-to-local, align 4
  store i32 %v2_10007380, i32* %v2_10007378, align 4
  br i1 %v2_1000736c, label %dec_label_pc_1000738c, label %dec_label_pc_10007390

dec_label_pc_1000738c:                            ; preds = %dec_label_pc_1000735c
  store i32 %v3_100075c4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007390

dec_label_pc_10007390:                            ; preds = %dec_label_pc_100075c4, %dec_label_pc_1000735c, %dec_label_pc_100073cc, %dec_label_pc_100075f0, %dec_label_pc_100075b8, %dec_label_pc_1000738c
  %v3_10007390 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007390 = trunc i64 %v3_10007390 to i32
  store i32 %v4_10007390, i32* %r9.global-to-local, align 4
  %v1_10007394 = add i32 %v4_10007390, 1
  store i32 %v1_10007394, i32* %r0.global-to-local, align 4
  %v1_10007398 = icmp slt i32 %v1_10007394, 255
  %v2_10007398 = icmp sgt i32 %v1_10007394, 255
  %v3_10007398 = icmp eq i32 %v1_10007394, 255
  store i1 %v1_10007398, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007398, i1* %cr7_eq.global-to-local, align 1
  %v5_1000739c = sext i32 %v1_10007394 to i64
  store i64 %v5_1000739c, i64* %stack_var_-1916, align 8
  br i1 %v2_10007398, label %dec_label_pc_10007440, label %dec_label_pc_100073a4

dec_label_pc_100073a4:                            ; preds = %dec_label_pc_10007424, %dec_label_pc_10007390, %dec_label_pc_10007320
  %v0_100073a8 = phi i32 [ 0, %dec_label_pc_10007320 ], [ %v1_10007394, %dec_label_pc_10007390 ], [ %v1_10007430, %dec_label_pc_10007424 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_100073ac = load i32, i32* @global_var_1001c2f8.132, align 4
  store i32 %v3_100073ac, i32* %r9.global-to-local, align 4
  %v2_100073b4 = mul i32 %v0_100073a8, 288
  store i32 %v2_100073b4, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_100073bc = add i32 %v3_100073ac, %v2_100073b4
  store i32 %v2_100073bc, i32* @r29, align 4
  %v1_100073c0 = add i32 %v2_100073bc, 12
  %v2_100073c0 = inttoptr i32 %v1_100073c0 to i32*
  %v3_100073c0 = load i32, i32* %v2_100073c0, align 4
  store i32 %v3_100073c0, i32* %r10.global-to-local, align 4
  %v1_100073c4 = icmp eq i32 %v3_100073c0, 0
  %v2_100073c4 = icmp ugt i32 %v3_100073c0, 1
  %v3_100073c4 = icmp eq i32 %v3_100073c0, 1
  store i1 %v1_100073c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100073c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100073c4, label %dec_label_pc_1000733c, label %dec_label_pc_100073cc

dec_label_pc_100073cc:                            ; preds = %dec_label_pc_100073a4
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_100073c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100073c4, label %dec_label_pc_10007390, label %dec_label_pc_100073d4

dec_label_pc_100073d4:                            ; preds = %dec_label_pc_100073cc
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v3_100073dc = load i32, i32* @global_var_1001c2f4.126, align 4
  store i32 %v3_100073dc, i32* %r0.global-to-local, align 4
  %v1_100073e0 = add i32 %v2_100073bc, 8
  %v2_100073e0 = inttoptr i32 %v1_100073e0 to i32*
  %v3_100073e0 = load i32, i32* %v2_100073e0, align 4
  store i32 %v3_100073e0, i32* %r9.global-to-local, align 4
  %v2_100073e4 = sub i32 %v3_100073dc, %v3_100073e0
  store i32 %v2_100073e4, i32* %r0.global-to-local, align 4
  %v2_100073e8 = icmp ult i32 %v2_100073e4, 5
  %v3_100073e8 = icmp ugt i32 %v2_100073e4, 5
  %v4_100073e8 = icmp eq i32 %v2_100073e4, 5
  store i1 %v2_100073e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100073e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100073e8, label %dec_label_pc_100073f0, label %dec_label_pc_10007354

dec_label_pc_100073f0:                            ; preds = %dec_label_pc_100073d4, %dec_label_pc_1000733c
  %v1_100073f0 = add i32 %v2_100073bc, 4
  %v2_100073f0 = inttoptr i32 %v1_100073f0 to i32*
  %v3_100073f0 = load i32, i32* %v2_100073f0, align 4
  store i32 %v3_100073f0, i32* %r3.global-to-local, align 4
  store i32 268465144, i32* @lr, align 4
  %v0_100073f4 = call i32 @function_10009158()
  store i32 %v0_100073f4, i32* %r3.global-to-local, align 4
  %v0_100073f8 = load i32, i32* @r29, align 4
  %v1_100073f8 = add i32 %v0_100073f8, 12
  %v2_100073f8 = inttoptr i32 %v1_100073f8 to i32*
  %v3_100073f8 = load i32, i32* %v2_100073f8, align 4
  store i32 %v3_100073f8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10007400 = icmp ult i32 %v3_100073f8, 2
  %v3_10007400 = icmp eq i32 %v3_100073f8, 2
  store i1 %v1_10007400, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007400, i1* %cr7_eq.global-to-local, align 1
  %v2_10007404 = add i32 %v0_100073f8, 4
  %v3_10007404 = inttoptr i32 %v2_10007404 to i32*
  store i32 -1, i32* %v3_10007404, align 4
  %tmp114 = icmp ult i32 %v3_100073f8, 3
  br i1 %tmp114, label %dec_label_pc_100075b8, label %dec_label_pc_1000740c

dec_label_pc_1000740c:                            ; preds = %dec_label_pc_100073f0
  %v0_1000740c = load i32, i32* @r29, align 4
  %v1_1000740c = add i32 %v0_1000740c, 284
  %v2_1000740c = inttoptr i32 %v1_1000740c to i8*
  %v3_1000740c = load i8, i8* %v2_1000740c, align 1
  %v4_1000740c = zext i8 %v3_1000740c to i32
  %v1_10007410 = add nuw nsw i32 %v4_1000740c, 1
  %v1_10007414 = urem i32 %v1_10007410, 256
  store i32 %v1_10007414, i32* %r9.global-to-local, align 4
  %v1_10007418 = icmp ult i32 %v1_10007414, 10
  %v3_10007418 = icmp eq i32 %v1_10007414, 10
  store i1 %v1_10007418, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007418, i1* %cr7_eq.global-to-local, align 1
  %v1_1000741c = trunc i32 %v1_10007410 to i8
  store i8 %v1_1000741c, i8* %v2_1000740c, align 1
  %v0_10007420 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007420, label %dec_label_pc_100075b8, label %dec_label_pc_10007424

dec_label_pc_10007424:                            ; preds = %dec_label_pc_1000740c
  %v0_10007424 = load i32, i32* @r29, align 4
  store i32 %v0_10007424, i32* @r3, align 4
  store i32 268465196, i32* @lr, align 4
  %v0_10007428 = call i32 @function_10006804()
  store i32 %v0_10007428, i32* %r3.global-to-local, align 4
  %v3_1000742c = load i64, i64* %stack_var_-1916, align 8
  %v4_1000742c = trunc i64 %v3_1000742c to i32
  store i32 %v4_1000742c, i32* %r9.global-to-local, align 4
  %v1_10007430 = add i32 %v4_1000742c, 1
  store i32 %v1_10007430, i32* %r0.global-to-local, align 4
  %v1_10007434 = icmp slt i32 %v1_10007430, 255
  %v3_10007434 = icmp eq i32 %v1_10007430, 255
  store i1 %v1_10007434, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007434, i1* %cr7_eq.global-to-local, align 1
  %v5_10007438 = sext i32 %v1_10007430 to i64
  store i64 %v5_10007438, i64* %stack_var_-1916, align 8
  %tmp115 = icmp slt i32 %v1_10007430, 256
  br i1 %tmp115, label %dec_label_pc_100073a4, label %dec_label_pc_10007440

dec_label_pc_10007440:                            ; preds = %dec_label_pc_10007424, %dec_label_pc_10007390
  %v0_10007440 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007440 = load i32, i32* @r31, align 4
  %v2_10007440 = icmp slt i32 %v0_10007440, %v1_10007440
  %v4_10007440 = icmp eq i32 %v0_10007440, %v1_10007440
  store i1 %v2_10007440, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007440, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_10007440, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_10007440, label %dec_label_pc_1000745c, label %dec_label_pc_10007460

dec_label_pc_1000745c:                            ; preds = %dec_label_pc_10007440
  store i32 %v1_10007440, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007460

dec_label_pc_10007460:                            ; preds = %dec_label_pc_10007440, %dec_label_pc_1000745c
  %v0_10007470 = phi i32 [ %v0_10007440, %dec_label_pc_10007440 ], [ %v1_10007440, %dec_label_pc_1000745c ]
  store i32 %v2_10007464, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_1000746c, i32* %r7.global-to-local, align 4
  %v1_10007470 = add i32 %v0_10007470, 1
  store i32 %v1_10007470, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007478.164 to i32), i32* @lr, align 4
  %v5_10007474 = call i32 @function_10009420(i32 %v1_10007470, i32 %v2_10007460, i32 %v2_10007464, i32 0, i32 %v1_1000746c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268465280, i32* @lr, align 4
  %v0_1000747c = call i32 @function_10009528()
  store i32 %v0_1000747c, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000747c, i32* @global_var_1001c2f4.126, align 4
  %v0_1000748c = load i32, i32* %r30.global-to-local, align 4
  %v5_1000748c = sext i32 %v0_1000748c to i64
  store i64 %v5_1000748c, i64* %stack_var_-1916, align 8
  br label %dec_label_pc_100074a8

dec_label_pc_10007494:                            ; preds = %dec_label_pc_1000750c, %dec_label_pc_10007f34, %dec_label_pc_100074ec, %dec_label_pc_100074a8, %dec_label_pc_10008218, %dec_label_pc_100081ec, %dec_label_pc_10007f68
  %v3_10007494 = load i64, i64* %stack_var_-1916, align 8
  %v4_10007494 = trunc i64 %v3_10007494 to i32
  store i32 %v4_10007494, i32* %r9.global-to-local, align 4
  %v1_10007498 = add i32 %v4_10007494, 1
  store i32 %v1_10007498, i32* %r0.global-to-local, align 4
  %v1_1000749c = icmp slt i32 %v1_10007498, 255
  %v2_1000749c = icmp sgt i32 %v1_10007498, 255
  %v3_1000749c = icmp eq i32 %v1_10007498, 255
  store i1 %v1_1000749c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000749c, i1* %cr7_eq.global-to-local, align 1
  %v5_100074a0 = sext i32 %v1_10007498 to i64
  store i64 %v5_100074a0, i64* %stack_var_-1916, align 8
  br i1 %v2_1000749c, label %dec_label_pc_10006e38, label %dec_label_pc_100074a8

dec_label_pc_100074a8:                            ; preds = %dec_label_pc_10007494, %dec_label_pc_10007460
  %v0_100074ac = phi i32 [ %v1_10007498, %dec_label_pc_10007494 ], [ 0, %dec_label_pc_10007460 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_100074ac = mul i32 %v0_100074ac, 256
  store i32 %v1_100074ac, i32* %r11.global-to-local, align 4
  %v3_100074b0 = load i32, i32* @global_var_1001c2f8.132, align 4
  store i32 %v3_100074b0, i32* %r9.global-to-local, align 4
  %v2_100074b8 = mul i32 %v0_100074ac, 288
  store i32 %v2_100074b8, i32* %r0.global-to-local, align 4
  %v2_100074bc = add i32 %v3_100074b0, %v2_100074b8
  store i32 %v2_100074bc, i32* %r28.global-to-local, align 4
  %v1_100074c0 = add i32 %v2_100074bc, 4
  %v2_100074c0 = inttoptr i32 %v1_100074c0 to i32*
  %v3_100074c0 = load i32, i32* %v2_100074c0, align 4
  store i32 %v3_100074c0, i32* %r3.global-to-local, align 4
  %v1_100074c4 = icmp slt i32 %v3_100074c0, -1
  %v3_100074c4 = icmp eq i32 %v3_100074c0, -1
  store i1 %v1_100074c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100074c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100074c4, label %dec_label_pc_10007494, label %dec_label_pc_100074cc

dec_label_pc_100074cc:                            ; preds = %dec_label_pc_100074a8
  store i32 %v2_100074cc, i32* %r11.global-to-local, align 4
  %v1_100074d0 = call i32 @__asm_rlwinm(i32 %v3_100074c0, i32 29, i32 3, i32 29)
  %v1_100074d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100074d4 = add i32 %v1_100074d4, %v1_100074d0
  store i32 %v2_100074d4, i32* %r9.global-to-local, align 4
  %v0_100074d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100074d8 = urem i32 %v0_100074d8, 32
  store i32 %v1_100074d8, i32* %r11.global-to-local, align 4
  %v1_100074dc = add i32 %v2_100074d4, 184
  %v2_100074dc = inttoptr i32 %v1_100074dc to i32*
  %v3_100074dc = load i32, i32* %v2_100074dc, align 4
  %v3_100074e0 = lshr i32 %v3_100074dc, %v1_100074d8
  store i32 %v3_100074e0, i32* %r0.global-to-local, align 4
  %v1_100074e4 = urem i32 %v3_100074e0, 2
  store i32 %v1_100074e4, i32* %r9.global-to-local, align 4
  %v3_100074e4 = icmp eq i32 %v1_100074e4, 0
  br i1 %v3_100074e4, label %dec_label_pc_100074ec, label %dec_label_pc_1000805c

dec_label_pc_100074ec:                            ; preds = %dec_label_pc_100074cc, %dec_label_pc_100080f4
  %v0_100074f0 = phi i32 [ %v0_100074d8, %dec_label_pc_100074cc ], [ %v0_100074f0.pre, %dec_label_pc_100080f4 ]
  store i32 %v2_100074cc, i32* %r0.global-to-local, align 4
  %v1_100074f0 = call i32 @__asm_rlwinm(i32 %v0_100074f0, i32 29, i32 3, i32 29)
  %v1_100074f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100074f4 = add i32 %v1_100074f4, %v1_100074f0
  store i32 %v2_100074f4, i32* %r9.global-to-local, align 4
  %v0_100074f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100074f8 = urem i32 %v0_100074f8, 32
  store i32 %v1_100074f8, i32* %r11.global-to-local, align 4
  %v1_100074fc = add i32 %v2_100074f4, 56
  %v2_100074fc = inttoptr i32 %v1_100074fc to i32*
  %v3_100074fc = load i32, i32* %v2_100074fc, align 4
  %v3_10007500 = lshr i32 %v3_100074fc, %v1_100074f8
  store i32 %v3_10007500, i32* %r0.global-to-local, align 4
  %v1_10007504 = urem i32 %v3_10007500, 2
  store i32 %v1_10007504, i32* %r9.global-to-local, align 4
  %v3_10007504 = icmp eq i32 %v1_10007504, 0
  br i1 %v3_10007504, label %dec_label_pc_10007494, label %dec_label_pc_1000750c.preheader

dec_label_pc_1000750c.preheader:                  ; preds = %dec_label_pc_100074ec
  %v0_1000750c.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000750c

dec_label_pc_1000750c:                            ; preds = %dec_label_pc_1000750c.preheader, %dec_label_pc_10007578
  %v0_10007f84 = phi i32 [ %v0_1000750c.pre, %dec_label_pc_1000750c.preheader ], [ %v0_10007590, %dec_label_pc_10007578 ]
  %v1_1000750c = add i32 %v0_10007f84, 12
  %v2_1000750c = inttoptr i32 %v1_1000750c to i32*
  %v3_1000750c = load i32, i32* %v2_1000750c, align 4
  store i32 %v3_1000750c, i32* %r10.global-to-local, align 4
  %v1_10007510 = icmp slt i32 %v3_1000750c, 0
  %v3_10007510 = icmp eq i32 %v3_1000750c, 0
  store i1 %v1_10007510, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007510, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007510, label %dec_label_pc_10007494, label %dec_label_pc_10007518

dec_label_pc_10007518:                            ; preds = %dec_label_pc_1000750c
  %v1_10007518 = add i32 %v0_10007f84, 24
  %v2_10007518 = inttoptr i32 %v1_10007518 to i32*
  %v3_10007518 = load i32, i32* %v2_10007518, align 4
  store i32 %v3_10007518, i32* %r0.global-to-local, align 4
  %v1_1000751c = add i32 %v0_10007f84, 28
  store i32 %v1_1000751c, i32* %r26.global-to-local, align 4
  %v1_10007520 = icmp slt i32 %v3_10007518, 256
  %v3_10007520 = icmp eq i32 %v3_10007518, 256
  store i1 %v1_10007520, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007520, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007520, label %dec_label_pc_10007f7c, label %dec_label_pc_10007528

dec_label_pc_10007528:                            ; preds = %dec_label_pc_10007518, %dec_label_pc_10007f7c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10007530 = load i32, i32* %r24.global-to-local, align 4
  %v2_10007530 = inttoptr i32 %v1_10007530 to i32*
  store i32 0, i32* %v2_10007530, align 4
  %v0_10007534 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007534 = add i32 %v0_10007534, 24
  %v2_10007534 = inttoptr i32 %v1_10007534 to i32*
  %v3_10007534 = load i32, i32* %v2_10007534, align 4
  store i32 %v3_10007534, i32* %r5.global-to-local, align 4
  %v1_10007538 = add i32 %v0_10007534, 4
  %v2_10007538 = inttoptr i32 %v1_10007538 to i32*
  %v3_10007538 = load i32, i32* %v2_10007538, align 4
  store i32 %v3_10007538, i32* %r3.global-to-local, align 4
  %v0_1000753c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000753c = add i32 %v0_1000753c, %v3_10007534
  store i32 %v2_1000753c, i32* @r29, align 4
  %v1_10007540 = sub i32 256, %v3_10007534
  store i32 %v1_10007540, i32* %r5.global-to-local, align 4
  store i32 268465484, i32* @lr, align 4
  %v4_10007548 = call i32 @function_10009d7c(i32 %v3_10007538, i32 %v2_1000753c, i32 %v1_10007540, i32 16384)
  store i32 %v4_10007548, i32* %r3.global-to-local, align 4
  %tmp117 = icmp slt i32 %v4_10007548, 1
  br i1 %tmp117, label %dec_label_pc_10007f28, label %dec_label_pc_10007554

dec_label_pc_10007554:                            ; preds = %dec_label_pc_10007528
  store i32 %v4_10007548, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007560

dec_label_pc_10007560:                            ; preds = %dec_label_pc_10007570, %dec_label_pc_10007554
  %v0_1000757439 = phi i32 [ %v1_10007574, %dec_label_pc_10007570 ], [ %v4_10007548, %dec_label_pc_10007554 ]
  %v1_1000756c = phi i32 [ %v1_10007570, %dec_label_pc_10007570 ], [ 0, %dec_label_pc_10007554 ]
  %v1_10007560 = load i32, i32* @r29, align 4
  %v2_10007560 = add i32 %v1_10007560, %v1_1000756c
  %v3_10007560 = inttoptr i32 %v2_10007560 to i8*
  %v4_10007560 = load i8, i8* %v3_10007560, align 1
  %v5_10007560 = zext i8 %v4_10007560 to i32
  store i32 %v5_10007560, i32* %r0.global-to-local, align 4
  %v3_10007564 = icmp eq i8 %v4_10007560, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007564, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007564, label %dec_label_pc_1000756c, label %dec_label_pc_10007570

dec_label_pc_1000756c:                            ; preds = %dec_label_pc_10007560
  %v0_1000756c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000756c = trunc i32 %v0_1000756c to i8
  store i8 %v3_1000756c, i8* %v3_10007560, align 1
  %v0_10007570.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10007574.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007570

dec_label_pc_10007570:                            ; preds = %dec_label_pc_10007560, %dec_label_pc_1000756c
  %v0_10007574 = phi i32 [ %v0_1000757439, %dec_label_pc_10007560 ], [ %v0_10007574.pre, %dec_label_pc_1000756c ]
  %v0_10007570 = phi i32 [ %v1_1000756c, %dec_label_pc_10007560 ], [ %v0_10007570.pre, %dec_label_pc_1000756c ]
  %v1_10007570 = add i32 %v0_10007570, 1
  store i32 %v1_10007570, i32* %r9.global-to-local, align 4
  %v1_10007574 = add i32 %v0_10007574, -1
  store i32 %v1_10007574, i32* %ctr.global-to-local, align 4
  %v2_10007574 = icmp eq i32 %v1_10007574, 0
  br i1 %v2_10007574, label %dec_label_pc_10007578, label %dec_label_pc_10007560

dec_label_pc_10007578:                            ; preds = %dec_label_pc_10007570, %dec_label_pc_10007f2c
  %v0_10007578 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007578 = add i32 %v0_10007578, 24
  %v2_10007578 = inttoptr i32 %v1_10007578 to i32*
  %v3_10007578 = load i32, i32* %v2_10007578, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10007580 = load i32, i32* @global_var_1001c2f4.126, align 4
  store i32 %v3_10007580, i32* %r0.global-to-local, align 4
  %v2_10007584 = add i32 %v3_10007578, %v4_10007548
  store i32 %v2_10007584, i32* %r5.global-to-local, align 4
  store i32 %v2_10007584, i32* %v2_10007578, align 4
  %v0_1000758c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000758c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000758c = add i32 %v1_1000758c, 8
  %v3_1000758c = inttoptr i32 %v2_1000758c to i32*
  store i32 %v0_1000758c, i32* %v3_1000758c, align 4
  %v0_10007590 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007590 = add i32 %v0_10007590, 12
  %v2_10007590 = inttoptr i32 %v1_10007590 to i32*
  %v3_10007590 = load i32, i32* %v2_10007590, align 4
  store i32 %v3_10007590, i32* %r10.global-to-local, align 4
  %v1_10007594 = icmp ult i32 %v3_10007590, 10
  %v2_10007594 = icmp ugt i32 %v3_10007590, 10
  %v3_10007594 = icmp eq i32 %v3_10007590, 10
  store i1 %v1_10007594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007594, label %dec_label_pc_1000750c, label %dec_label_pc_1000759c

dec_label_pc_1000759c:                            ; preds = %dec_label_pc_10007578
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_100075a0 = mul i32 %v3_10007590, 4
  store i32 %v1_100075a0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000bc24.165 to i32), i32* %r11.global-to-local, align 4
  %v2_100075a8 = add i32 %v1_100075a0, ptrtoint (i32* @global_var_1000bc24.165 to i32)
  %v3_100075a8 = inttoptr i32 %v2_100075a8 to i32*
  %v4_100075a8 = load i32, i32* %v3_100075a8, align 4
  %v2_100075ac = add i32 %v4_100075a8, ptrtoint (i32* @global_var_1000bc24.165 to i32)
  store i32 %v2_100075ac, i32* %r9.global-to-local, align 4
  store i32 %v2_100075ac, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_100075ac)
  br label %dec_label_pc_100075b8

dec_label_pc_100075b8:                            ; preds = %dec_label_pc_1000740c, %dec_label_pc_100073f0, %dec_label_pc_1000759c
  %v0_100075b8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100075b8 = load i32, i32* @r29, align 4
  %v2_100075b8 = add i32 %v1_100075b8, 12
  %v3_100075b8 = inttoptr i32 %v2_100075b8 to i32*
  store i32 %v0_100075b8, i32* %v3_100075b8, align 4
  %v0_100075bc = load i32, i32* %r28.global-to-local, align 4
  %v1_100075bc = trunc i32 %v0_100075bc to i8
  %v2_100075bc = load i32, i32* @r29, align 4
  %v3_100075bc = add i32 %v2_100075bc, 284
  %v4_100075bc = inttoptr i32 %v3_100075bc to i8*
  store i8 %v1_100075bc, i8* %v4_100075bc, align 1
  br label %dec_label_pc_10007390

dec_label_pc_100075c4:                            ; preds = %dec_label_pc_10007354
  store i32 %v2_100074cc, i32* %r0.global-to-local, align 4
  %v1_100075cc = call i32 @__asm_rlwinm(i32 %v3_100075c4, i32 29, i32 3, i32 29)
  %v0_100075d0 = load i32, i32* @r31, align 4
  %v2_100075d0 = icmp slt i32 %v0_100075d0, %v3_100075c4
  %v4_100075d0 = icmp eq i32 %v0_100075d0, %v3_100075c4
  store i1 %v2_100075d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100075d0, i1* %cr7_eq.global-to-local, align 1
  %v1_100075d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100075d4 = add i32 %v1_100075d4, %v1_100075cc
  store i32 %v2_100075d4, i32* %r11.global-to-local, align 4
  %v1_100075d8 = urem i32 %v3_100075c4, 32
  store i32 %v1_100075d8, i32* %r0.global-to-local, align 4
  %v1_100075dc = add i32 %v2_100075d4, 184
  %v2_100075dc = inttoptr i32 %v1_100075dc to i32*
  %v3_100075dc = load i32, i32* %v2_100075dc, align 4
  %v0_100075e0 = load i32, i32* %r10.global-to-local, align 4
  %v3_100075e0 = shl i32 %v0_100075e0, %v1_100075d8
  store i32 %v3_100075e0, i32* %r0.global-to-local, align 4
  %v2_100075e4 = or i32 %v3_100075e0, %v3_100075dc
  store i32 %v2_100075e4, i32* %r9.global-to-local, align 4
  store i32 %v2_100075e4, i32* %v2_100075dc, align 4
  br i1 %v2_100075d0, label %dec_label_pc_100075f0, label %dec_label_pc_10007390

dec_label_pc_100075f0:                            ; preds = %dec_label_pc_100075c4
  store i32 %v3_100075c4, i32* @r31, align 4
  br label %dec_label_pc_10007390

dec_label_pc_10007f28:                            ; preds = %dec_label_pc_10007528
  %v3_1000754c = icmp eq i32 %v4_10007548, 0
  br i1 %v3_1000754c, label %dec_label_pc_1000820c, label %dec_label_pc_10007f2c

dec_label_pc_10007f2c:                            ; preds = %dec_label_pc_10007f28
  %v1_10007f2c = icmp slt i32 %v4_10007548, -1
  %v3_10007f2c = icmp eq i32 %v4_10007548, -1
  store i1 %v1_10007f2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f2c, label %dec_label_pc_10007f34, label %dec_label_pc_10007578

dec_label_pc_10007f34:                            ; preds = %dec_label_pc_10007f2c
  %v0_10007f34 = load i32, i32* %r24.global-to-local, align 4
  %v1_10007f34 = inttoptr i32 %v0_10007f34 to i32*
  %v2_10007f34 = load i32, i32* %v1_10007f34, align 4
  store i32 %v2_10007f34, i32* %r0.global-to-local, align 4
  %v1_10007f38 = icmp slt i32 %v2_10007f34, 11
  %v3_10007f38 = icmp eq i32 %v2_10007f34, 11
  store i1 %v1_10007f38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f38, label %dec_label_pc_10007494, label %dec_label_pc_10007f40

dec_label_pc_10007f40:                            ; preds = %dec_label_pc_10007f34, %dec_label_pc_1000820c
  %v0_10007f40 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007f40 = add i32 %v0_10007f40, 4
  %v2_10007f40 = inttoptr i32 %v1_10007f40 to i32*
  %v3_10007f40 = load i32, i32* %v2_10007f40, align 4
  store i32 %v3_10007f40, i32* %r3.global-to-local, align 4
  store i32 268468040, i32* @lr, align 4
  %v0_10007f44 = call i32 @function_10009158()
  store i32 %v0_10007f44, i32* %r3.global-to-local, align 4
  %v0_10007f48 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007f48 = add i32 %v0_10007f48, 284
  %v2_10007f48 = inttoptr i32 %v1_10007f48 to i8*
  %v3_10007f48 = load i8, i8* %v2_10007f48, align 1
  %v4_10007f48 = zext i8 %v3_10007f48 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007f50 = add nuw nsw i32 %v4_10007f48, 1
  store i32 %v1_10007f50, i32* %r9.global-to-local, align 4
  %v2_10007f54 = add i32 %v0_10007f48, 4
  %v3_10007f54 = inttoptr i32 %v2_10007f54 to i32*
  store i32 -1, i32* %v3_10007f54, align 4
  %v0_10007f58 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007f58 = urem i32 %v0_10007f58, 256
  store i32 %v1_10007f58, i32* %r9.global-to-local, align 4
  %v1_10007f5c = icmp ult i32 %v1_10007f58, 9
  %v3_10007f5c = icmp eq i32 %v1_10007f58, 9
  store i1 %v1_10007f5c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f5c, i1* %cr7_eq.global-to-local, align 1
  %v1_10007f60 = trunc i32 %v0_10007f58 to i8
  %v2_10007f60 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007f60 = add i32 %v2_10007f60, 284
  %v4_10007f60 = inttoptr i32 %v3_10007f60 to i8*
  store i8 %v1_10007f60, i8* %v4_10007f60, align 1
  %v0_10007f64 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10007f64 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10007f64 = or i1 %v0_10007f64, %v1_10007f64
  br i1 %v2_10007f64, label %dec_label_pc_10008218, label %dec_label_pc_10007f68

dec_label_pc_10007f68:                            ; preds = %dec_label_pc_10007f40
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007f70 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007f70 = add i32 %v1_10007f70, 12
  %v3_10007f70 = inttoptr i32 %v2_10007f70 to i32*
  store i32 0, i32* %v3_10007f70, align 4
  %v0_10007f74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007f74 = trunc i32 %v0_10007f74 to i8
  %v2_10007f74 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007f74 = add i32 %v2_10007f74, 284
  %v4_10007f74 = inttoptr i32 %v3_10007f74 to i8*
  store i8 %v1_10007f74, i8* %v4_10007f74, align 1
  br label %dec_label_pc_10007494

dec_label_pc_10007f7c:                            ; preds = %dec_label_pc_10007518
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_1000751c, i32* %r3.global-to-local, align 4
  %v1_10007f84 = add i32 %v0_10007f84, 92
  store i32 268468108, i32* @lr, align 4
  %v3_10007f88 = call i32 @function_100098b8(i32 %v1_1000751c, i32 %v1_10007f84, i32 192)
  store i32 %v3_10007f88, i32* %r3.global-to-local, align 4
  %v0_10007f8c = load i32, i32* %r28.global-to-local, align 4
  %v1_10007f8c = add i32 %v0_10007f8c, 24
  %v2_10007f8c = inttoptr i32 %v1_10007f8c to i32*
  %v3_10007f8c = load i32, i32* %v2_10007f8c, align 4
  store i32 %v3_10007f8c, i32* %r9.global-to-local, align 4
  %v1_10007f90 = add i32 %v3_10007f8c, -64
  store i32 %v1_10007f90, i32* %r5.global-to-local, align 4
  store i32 %v1_10007f90, i32* %v2_10007f8c, align 4
  br label %dec_label_pc_10007528

dec_label_pc_1000805c:                            ; preds = %dec_label_pc_100074cc
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_1000806c, i32* %r6.global-to-local, align 4
  store i32 %v1_10008070, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268468352, i32* @lr, align 4
  %v5_1000807c = call i32 @function_10009d10(i32 1, i32 4, i32 %v2_1000806c, i32 %v1_10008070, i32 %v1_100074e4)
  store i32 %v5_1000807c, i32* %r3.global-to-local, align 4
  %v3_10008080 = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10008080, i32* %r0.global-to-local, align 4
  %v2_10008084 = or i32 %v3_10008080, %v5_1000807c
  store i32 %v2_10008084, i32* %r9.global-to-local, align 4
  %v5_10008084 = icmp eq i32 %v2_10008084, 0
  br i1 %v5_10008084, label %dec_label_pc_1000808c, label %dec_label_pc_100081ec

dec_label_pc_1000808c:                            ; preds = %dec_label_pc_1000805c
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10008090 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008090 = add i32 %v1_10008090, 12
  %v3_10008090 = inttoptr i32 %v2_10008090 to i32*
  store i32 2, i32* %v3_10008090, align 4
  %v0_10008094 = call i32 @function_10005f98()
  %v3_1000809c = load i16, i16* @global_var_1001c2f0.129, align 2
  %v4_1000809c = zext i16 %v3_1000809c to i32
  store i32 %v4_1000809c, i32* %r11.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100080a4 = load i32, i32* @global_var_1001c2e8.127, align 4
  store i32 %v3_100080a4, i32* %r10.global-to-local, align 4
  %v1_100080ac = icmp slt i32 %v3_100080a4, 0
  %v3_100080ac = icmp eq i32 %v3_100080a4, 0
  store i1 %v1_100080ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080ac, i1* %cr7_eq.global-to-local, align 1
  %v2_100080a8 = urem i32 %v0_10008094, %v4_1000809c
  %v2_100080b0 = sub i32 %v0_10008094, %v2_100080a8
  store i32 %v2_100080b0, i32* %r0.global-to-local, align 4
  store i32 %v2_100080a8, i32* %r3.global-to-local, align 4
  %tmp119 = icmp slt i32 %v3_100080a4, 1
  br i1 %tmp119, label %dec_label_pc_100080f0, label %dec_label_pc_100080c0

dec_label_pc_100080c0:                            ; preds = %dec_label_pc_1000808c
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_100080a4, i32* %ctr.global-to-local, align 4
  %v3_100080c8 = load i32, i32* @global_var_1001c2ec.128, align 4
  store i32 %v3_100080c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100080cc

dec_label_pc_100080cc:                            ; preds = %dec_label_pc_100080e8, %dec_label_pc_100080c0
  %v0_100080ec = phi i32 [ %v1_100080ec, %dec_label_pc_100080e8 ], [ %v3_100080a4, %dec_label_pc_100080c0 ]
  %v0_100080e8 = phi i32 [ %v1_100080e8, %dec_label_pc_100080e8 ], [ %v3_100080c8, %dec_label_pc_100080c0 ]
  store i32 %v0_100080e8, i32* %r9.global-to-local, align 4
  %v1_100080d0 = add i32 %v0_100080e8, 8
  %v2_100080d0 = inttoptr i32 %v1_100080d0 to i16*
  %v3_100080d0 = load i16, i16* %v2_100080d0, align 2
  %v4_100080d0 = zext i16 %v3_100080d0 to i32
  store i32 %v4_100080d0, i32* %r0.global-to-local, align 4
  %v2_100080d4 = icmp ult i32 %v4_100080d0, %v2_100080a8
  %v3_100080d4 = icmp ugt i32 %v4_100080d0, %v2_100080a8
  %v4_100080d4 = icmp eq i32 %v4_100080d0, %v2_100080a8
  br i1 %v3_100080d4, label %dec_label_pc_100080e8, label %dec_label_pc_100080dc

dec_label_pc_100080dc:                            ; preds = %dec_label_pc_100080cc
  %v1_100080dc = add i32 %v0_100080e8, 10
  %v2_100080dc = inttoptr i32 %v1_100080dc to i16*
  %v3_100080dc = load i16, i16* %v2_100080dc, align 2
  %v4_100080dc = zext i16 %v3_100080dc to i32
  store i32 %v4_100080dc, i32* %r0.global-to-local, align 4
  %v2_100080e0 = icmp ult i32 %v4_100080dc, %v2_100080a8
  %v3_100080e0 = icmp ugt i32 %v4_100080dc, %v2_100080a8
  %v4_100080e0 = icmp eq i32 %v4_100080dc, %v2_100080a8
  br i1 %v3_100080e0, label %dec_label_pc_100080f4.loopexit, label %dec_label_pc_100080e8

dec_label_pc_100080e8:                            ; preds = %dec_label_pc_100080dc, %dec_label_pc_100080cc
  %v4_100080e07 = phi i1 [ %v4_100080e0, %dec_label_pc_100080dc ], [ %v4_100080d4, %dec_label_pc_100080cc ]
  %v2_100080e05 = phi i1 [ %v2_100080e0, %dec_label_pc_100080dc ], [ %v2_100080d4, %dec_label_pc_100080cc ]
  %v1_100080e8 = add i32 %v0_100080e8, 16
  store i32 %v1_100080e8, i32* %r0.global-to-local, align 4
  %v1_100080ec = add i32 %v0_100080ec, -1
  store i32 %v1_100080ec, i32* %ctr.global-to-local, align 4
  %v2_100080ec = icmp eq i32 %v1_100080ec, 0
  br i1 %v2_100080ec, label %dec_label_pc_100080f0.loopexit, label %dec_label_pc_100080cc

dec_label_pc_100080f0.loopexit:                   ; preds = %dec_label_pc_100080e8
  store i1 %v2_100080e05, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100080e07, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100080f0

dec_label_pc_100080f0:                            ; preds = %dec_label_pc_100080f0.loopexit, %dec_label_pc_1000808c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100080f4

dec_label_pc_100080f4.loopexit:                   ; preds = %dec_label_pc_100080dc
  store i1 %v2_100080e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100080e0, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100080f4

dec_label_pc_100080f4:                            ; preds = %dec_label_pc_100080f4.loopexit, %dec_label_pc_100080f0
  %v0_100080fc = phi i32 [ %v0_100080e8, %dec_label_pc_100080f4.loopexit ], [ 0, %dec_label_pc_100080f0 ]
  %v0_100080f4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100080f4 = add i32 %v0_100080f4, 4
  %v2_100080f4 = inttoptr i32 %v1_100080f4 to i32*
  %v3_100080f4 = load i32, i32* %v2_100080f4, align 4
  store i32 %v3_100080f4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_100080fc = inttoptr i32 %v0_100080f4 to i32*
  store i32 %v0_100080fc, i32* %v2_100080fc, align 4
  %v0_10008100 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008100 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008100 = add i32 %v1_10008100, 24
  %v3_10008100 = inttoptr i32 %v2_10008100 to i32*
  store i32 %v0_10008100, i32* %v3_10008100, align 4
  %v0_100074f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100074ec

dec_label_pc_100081ec:                            ; preds = %dec_label_pc_1000805c
  %v0_100081ec = load i32, i32* %r28.global-to-local, align 4
  %v1_100081ec = add i32 %v0_100081ec, 4
  %v2_100081ec = inttoptr i32 %v1_100081ec to i32*
  %v3_100081ec = load i32, i32* %v2_100081ec, align 4
  store i32 %v3_100081ec, i32* %r3.global-to-local, align 4
  store i32 268468724, i32* @lr, align 4
  %v0_100081f0 = call i32 @function_10009158()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100081fc = load i32, i32* %r28.global-to-local, align 4
  %v2_100081fc = add i32 %v1_100081fc, 4
  %v3_100081fc = inttoptr i32 %v2_100081fc to i32*
  store i32 -1, i32* %v3_100081fc, align 4
  %v0_10008200 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008200 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008200 = add i32 %v1_10008200, 12
  %v3_10008200 = inttoptr i32 %v2_10008200 to i32*
  store i32 %v0_10008200, i32* %v3_10008200, align 4
  %v0_10008204 = load i32, i32* @r31, align 4
  %v1_10008204 = trunc i32 %v0_10008204 to i8
  %v2_10008204 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008204 = add i32 %v2_10008204, 284
  %v4_10008204 = inttoptr i32 %v3_10008204 to i8*
  store i8 %v1_10008204, i8* %v4_10008204, align 1
  br label %dec_label_pc_10007494

dec_label_pc_1000820c:                            ; preds = %dec_label_pc_10007f28
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10008210 = load i32, i32* %r24.global-to-local, align 4
  %v2_10008210 = inttoptr i32 %v1_10008210 to i32*
  store i32 104, i32* %v2_10008210, align 4
  br label %dec_label_pc_10007f40

dec_label_pc_10008218:                            ; preds = %dec_label_pc_10007f40
  %v0_10008218 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008218, i32* @r3, align 4
  store i32 268468768, i32* @lr, align 4
  %v0_1000821c = call i32 @function_10006804()
  store i32 %v0_1000821c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007494

dec_label_pc_1000825c:                            ; preds = %dec_label_pc_10006c24
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10008260 = load i32, i32* @global_var_1001c2fc.133, align 4
  store i32 %v3_10008260, i32* %r3.global-to-local, align 4
  store i32 268468840, i32* @lr, align 4
  %v0_10008264 = call i32 @function_10009158()
  store i32 %v0_10008264, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007224

dec_label_pc_1000826c:                            ; preds = %dec_label_pc_10007134
  store i32 %v0_1000712c, i32* @r29, align 4
  br label %dec_label_pc_10008270

dec_label_pc_10008270:                            ; preds = %dec_label_pc_10007170, %dec_label_pc_1000826c
  %v1_10008270 = phi i32 [ %v2_10007148, %dec_label_pc_1000826c ], [ %v0_10007170, %dec_label_pc_10007170 ]
  %v2_10008270 = add i32 %v1_10008270, 16
  %v3_10008270 = inttoptr i32 %v2_10008270 to i32*
  store i32 %tmp51, i32* %v3_10008270, align 4
  %v0_10008274 = load i32, i32* @r29, align 4
  store i32 %v0_10008274, i32* @r31, align 4
  %v0_10008278 = load i32, i32* %r8.global-to-local, align 4
  %v1_10008278 = trunc i32 %v0_10008278 to i16
  %v2_10008278 = load i32, i32* @r3, align 4
  %v3_10008278 = add i32 %v2_10008278, 20
  %v4_10008278 = inttoptr i32 %v3_10008278 to i16*
  store i16 %v1_10008278, i16* %v4_10008278, align 2
  store i32 268468864, i32* @lr, align 4
  %v0_1000827c = call i32 @function_10006804()
  store i32 %v0_1000827c, i32* %r3.global-to-local, align 4
  %v1_10007074.pre.pre = load i32, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_1000706c

; uselistorder directives
  uselistorder i32 %v1_100080ec, { 2, 1, 0 }
  uselistorder i32 %v1_100080e8, { 1, 0 }
  uselistorder i32 %v4_100080dc, { 2, 1, 0, 3 }
  uselistorder i32 %v4_100080d0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_100080e8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_100080a8, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_100080a4, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10007f58, { 1, 2, 0 }
  uselistorder i32 %v0_10007f58, { 1, 0 }
  uselistorder i32 %v2_10007f34, { 1, 0, 2 }
  uselistorder i32 %v1_100075d8, { 1, 0 }
  uselistorder i32 %v1_100075a0, { 1, 0 }
  uselistorder i32 %v3_10007590, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_10007590, { 1, 0 }
  uselistorder i32 %v1_10007574, { 2, 1, 0 }
  uselistorder i32 %v1_10007570, { 1, 0 }
  uselistorder i32 %v1_1000756c, { 1, 0 }
  uselistorder i32 %v4_10007548, { 3, 2, 6, 0, 1, 4, 5, 7 }
  uselistorder i32 %v3_10007534, { 1, 0, 2 }
  uselistorder i32 %v1_1000751c, { 1, 0, 2 }
  uselistorder i32 %v3_10007518, { 1, 0, 2 }
  uselistorder i32 %v3_1000750c, { 1, 0, 2 }
  uselistorder i32 %v0_10007f84, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10007504, { 1, 0 }
  uselistorder i32 %v1_100074f8, { 1, 0 }
  uselistorder i32 %v1_100074e4, { 2, 1, 0 }
  uselistorder i32 %v1_100074d8, { 1, 0 }
  uselistorder i32 %v0_100074d8, { 1, 0 }
  uselistorder i32 %v3_100074c0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_100074ac, { 1, 0 }
  uselistorder i32 %v1_10007498, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10007430, { 2, 1, 4, 3, 5, 0 }
  uselistorder i32 %v1_10007414, { 1, 2, 0 }
  uselistorder i32 %v1_10007410, { 1, 0 }
  uselistorder i32 %v3_100073f8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100073e4, { 2, 1, 0, 3 }
  uselistorder i1 %v3_100073c4, { 2, 0, 1 }
  uselistorder i1 %v1_100073c4, { 1, 0, 2 }
  uselistorder i32 %v3_100073c0, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_100073bc, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_10007394, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v1_10007374, { 1, 0 }
  uselistorder i32 %v3_100075c4, { 7, 0, 6, 5, 9, 4, 1, 3, 2, 8, 10 }
  uselistorder i32 %v2_10007348, { 2, 1, 0, 3 }
  uselistorder i32 %v2_100074cc, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000731c, { 1, 0 }
  uselistorder i32 %v1_100072fc, { 1, 0 }
  uselistorder i32 %v0_100072c8, { 1, 2, 0 }
  uselistorder i32 %v0_100072bc, { 1, 2, 0 }
  uselistorder i32 %v0_100072b0, { 1, 2, 0 }
  uselistorder i32 %v0_100072a4, { 1, 2, 0 }
  uselistorder i32 %v0_10007280, { 2, 1, 4, 3, 6, 5, 7, 8, 0 }
  uselistorder i32 %v0_1000726c, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10007260, { 1, 2, 0 }
  uselistorder i32 %v0_1000724c, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_10007238, { 4, 3, 2, 5, 6, 7, 1, 0 }
  uselistorder i32 %v0_1000722c, { 1, 2, 0 }
  uselistorder i32 %v1_10007178, { 1, 0 }
  uselistorder i32 %v3_10007170, { 1, 0, 2 }
  uselistorder i32 %v1_1000716c, { 2, 1, 0 }
  uselistorder i32 %v1_10007168, { 1, 0 }
  uselistorder i32 %v0_10007170, { 0, 3, 2, 1 }
  uselistorder i32 %v3_1000714c, { 1, 0, 2 }
  uselistorder i32 %v0_1000712c, { 3, 1, 2, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_100070b4, { 1, 0, 2 }
  uselistorder i32 %v2_1000709c, { 1, 0, 2 }
  uselistorder i32 %v0_1000709c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_10007090, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_100070e0, { 1, 0 }
  uselistorder i32 %v1_10007110, { 1, 0 }
  uselistorder i32 %v1_10007108, { 1, 0 }
  uselistorder i32 %v1_10007100, { 1, 0 }
  uselistorder i32 %v1_10007120, { 2, 1, 0 }
  uselistorder i32 %v1_100070f8, { 1, 0 }
  uselistorder i32 %v4_100070e8, { 1, 0, 2 }
  uselistorder i32 %v1_1000704c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_10006fd8, { 1, 0 }
  uselistorder i32 %v4_10006fb8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10006f28, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10006eb0, { 3, 1, 2, 0 }
  uselistorder i32 %v0_10006e9c, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 36, 35, 34, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51, 53, 52, 54, 55 }
  uselistorder i32 %v1_10006e84, { 1, 2, 0 }
  uselistorder i32 %v0_10006e80, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006e6c, { 1, 0 }
  uselistorder i32 %v3_10006e3c, { 1, 0, 2 }
  uselistorder i32 %v0_10006cb8, { 1, 0 }
  uselistorder i32 %v1_10006c78, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006c68, { 1, 0, 2 }
  uselistorder i32 %v3_10006c0c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10006bf4, { 1, 0 }
  uselistorder i32 %v0_10006bf0, { 1, 0 }
  uselistorder i32 %v1_10006bec, { 1, 0 }
  uselistorder i32 %v0_10006bdc, { 1, 2, 0 }
  uselistorder i32 %v2_10006b9c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10006af8, { 5, 2, 1, 3, 0, 4, 7, 6, 8 }
  uselistorder i64* %stack_var_-1916, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-1888, { 0, 2, 1, 3 }
  uselistorder i32 %tmp57, { 1, 2, 0 }
  uselistorder i8 %tmp56, { 2, 1, 0 }
  uselistorder i16 %tmp55, { 0, 1, 4, 3, 2 }
  uselistorder i32 %tmp53, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 34, 29, 30, 31, 32, 33, 35, 36, 64, 65, 37, 66, 67, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 57, 58, 59, 61, 62, 63 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 26, 29, 28, 3, 30, 31, 19, 32, 33, 34, 35, 36, 37, 38, 39, 40, 2, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %r28.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 20, 14, 15, 16, 17, 18, 19, 21, 22, 23 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 29, 14, 30, 25, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 11, 8, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 39, 33, 34, 35, 36, 37, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 18, 7, 8, 9, 19, 20, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cr7_lt.global-to-local, { 19, 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 24, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder i1* %cr7_eq.global-to-local, { 20, 21, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 25, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i16* @global_var_1001c2f0.129, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009d10, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009d7c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009420, { 2, 0, 1 }
  uselistorder i32 ()* @function_10006804, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009db4, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10009e2c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16384, { 2, 27, 0, 28, 1, 29, 3, 19, 21, 22, 23, 24, 25, 26, 20, 4, 30, 5, 31, 32, 33, 6, 8, 7, 9, 34, 10, 35, 12, 36, 11, 14, 37, 13, 16, 15, 17, 38, 39, 18, 40, 41 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 33, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 192, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32)* @function_100068f0, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001c37e.143, { 2, 0, 1 }
  uselistorder i16 23, { 2, 3, 1, 0, 4 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 0 }
  uselistorder i32 65536, { 69, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32 ()* @function_10005f98, { 75, 74, 73, 72, 71, 70, 68, 69, 22, 21, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 3, 2, 1, 0, 9, 8, 7, 6, 5, 4, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10009e6c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 5, 3, 0, 1, 2, 4, 6 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_10009528, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10005fe8, { 1, 0 }
  uselistorder i32 (i32)* @function_10008c9c, { 2, 1, 3, 0 }
  uselistorder i32 ()* @function_100091a0, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_10008270, { 1, 0 }
  uselistorder label %dec_label_pc_10007f40, { 1, 0 }
  uselistorder label %dec_label_pc_100075b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007578, { 1, 0 }
  uselistorder label %dec_label_pc_10007570, { 1, 0 }
  uselistorder label %dec_label_pc_10007528, { 1, 0 }
  uselistorder label %dec_label_pc_1000750c, { 1, 0 }
  uselistorder label %dec_label_pc_100074ec, { 1, 0 }
  uselistorder label %dec_label_pc_10007494, { 4, 5, 6, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10007460, { 1, 0 }
  uselistorder label %dec_label_pc_10007390, { 3, 0, 4, 2, 5, 1 }
  uselistorder label %dec_label_pc_10007310.dec_label_pc_10007310_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100072f0.dec_label_pc_100072f0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100072e0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000722c, { 1, 0 }
  uselistorder label %dec_label_pc_10007224, { 1, 0 }
  uselistorder label %dec_label_pc_1000706c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10007060, { 1, 0 }
  uselistorder label %dec_label_pc_10006f8c, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 10, 8, 11, 13, 12 }
  uselistorder label %dec_label_pc_10006e80.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10006c74, { 1, 0 }
}

define i32 @function_10008284(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10008284:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008284 = icmp eq i32* %arg2, null
  %v1_1000828c = mul i32 %arg1, 8
  store i32 %v1_1000828c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c3b8.187 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_10008284, label %dec_label_pc_100082a4, label %dec_label_pc_1000829c

dec_label_pc_1000829c:                            ; preds = %dec_label_pc_10008284
  %v1_1000829c = add i32 %v1_1000828c, add (i32 ptrtoint (i32* @global_var_1001c3b8.187 to i32), i32 4)
  %v2_1000829c = inttoptr i32 %v1_1000829c to i16*
  %v3_1000829c = load i16, i16* %v2_1000829c, align 4
  %v4_1000829c = zext i16 %v3_1000829c to i32
  store i32 %v4_1000829c, i32* %arg2, align 4
  %v0_100082a4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_100082a4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100082a4

dec_label_pc_100082a4:                            ; preds = %dec_label_pc_10008284, %dec_label_pc_1000829c
  %v1_100082a4 = phi i32 [ ptrtoint (i32* @global_var_1001c3b8.187 to i32), %dec_label_pc_10008284 ], [ %v1_100082a4.pre, %dec_label_pc_1000829c ]
  %v0_100082a4 = phi i32 [ %v1_1000828c, %dec_label_pc_10008284 ], [ %v0_100082a4.pre, %dec_label_pc_1000829c ]
  %v2_100082a4 = add i32 %v0_100082a4, %v1_100082a4
  %v3_100082a4 = inttoptr i32 %v2_100082a4 to i32*
  %v4_100082a4 = load i32, i32* %v3_100082a4, align 4
  store i32 %v4_100082a4, i32* %r3.global-to-local, align 4
  ret i32 %v4_100082a4

; uselistorder directives
  uselistorder i32 %v1_1000828c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100082a4, { 1, 0 }
}

define i32 @function_100082ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_100082ac:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_100082b0 = mul i32 %arg1, 8
  %v2_100082b8 = add i32 %v1_100082b0, ptrtoint (i32* @global_var_1001c3b8.187 to i32)
  %v1_100082c0 = add i32 %v1_100082b0, add (i32 ptrtoint (i32* @global_var_1001c3b8.187 to i32), i32 4)
  %v2_100082c0 = inttoptr i32 %v1_100082c0 to i16*
  %v3_100082c0 = load i16, i16* %v2_100082c0, align 4
  %v3_100082c4 = icmp eq i16 %v3_100082c0, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082c4, i1* %cr7_eq.global-to-local, align 1
  %v3_100082c8 = load i32, i32* @global_var_1001c2b4.188, align 4
  %v1_100082cc = udiv i32 %v3_100082c8, 16777216
  store i32 %v1_100082cc, i32* @r5, align 4
  %v1_100082d0 = urem i32 %v3_100082c8, 256
  store i32 %v1_100082d0, i32* %r6.global-to-local, align 4
  %v1_100082d4 = call i32 @__asm_rlwinm(i32 %v3_100082c8, i32 24, i32 24, i32 31)
  %v1_100082d8 = call i32 @__asm_rlwinm(i32 %v3_100082c8, i32 16, i32 24, i32 31)
  %v0_100082dc = load i32, i32* @lr, align 4
  %v1_100082dc = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_100082dc = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_100082dc = or i1 %v1_100082dc, %v2_100082dc
  call void @__pseudo_cond_branch(i1 %v3_100082dc, i32 %v0_100082dc)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100082e4 = inttoptr i32 %v2_100082b8 to i32*
  br label %dec_label_pc_100082e4

dec_label_pc_100082e4:                            ; preds = %dec_label_pc_100082e4, %dec_label_pc_100082ac
  %v1_100082f0 = phi i32 [ %v1_10008324, %dec_label_pc_100082e4 ], [ 0, %dec_label_pc_100082ac ]
  %v2_100082e4 = load i32, i32* %v1_100082e4, align 4
  %v2_100082e8 = add i32 %v2_100082e4, %v1_100082f0
  %v3_100082e8 = inttoptr i32 %v2_100082e8 to i8*
  %v4_100082e8 = load i8, i8* %v3_100082e8, align 1
  %v5_100082e8 = zext i8 %v4_100082e8 to i32
  %v0_100082ec = load i32, i32* %r6.global-to-local, align 4
  %v2_100082ec = xor i32 %v0_100082ec, %v5_100082e8
  %v3_100082f0 = trunc i32 %v2_100082ec to i8
  store i8 %v3_100082f0, i8* %v3_100082e8, align 1
  %v2_100082f4 = load i32, i32* %v1_100082e4, align 4
  %v0_100082f8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100082f8 = add i32 %v0_100082f8, %v2_100082f4
  %v3_100082f8 = inttoptr i32 %v2_100082f8 to i8*
  %v4_100082f8 = load i8, i8* %v3_100082f8, align 1
  %v5_100082f8 = zext i8 %v4_100082f8 to i32
  %v2_100082fc = xor i32 %v5_100082f8, %v1_100082d4
  %v3_10008300 = trunc i32 %v2_100082fc to i8
  store i8 %v3_10008300, i8* %v3_100082f8, align 1
  %v2_10008304 = load i32, i32* %v1_100082e4, align 4
  %v0_10008308 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008308 = add i32 %v0_10008308, %v2_10008304
  %v3_10008308 = inttoptr i32 %v2_10008308 to i8*
  %v4_10008308 = load i8, i8* %v3_10008308, align 1
  %v5_10008308 = zext i8 %v4_10008308 to i32
  %v2_1000830c = xor i32 %v5_10008308, %v1_100082d8
  %v3_10008310 = trunc i32 %v2_1000830c to i8
  store i8 %v3_10008310, i8* %v3_10008308, align 1
  %v2_10008314 = load i32, i32* %v1_100082e4, align 4
  %v0_10008318 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008318 = add i32 %v0_10008318, %v2_10008314
  %v3_10008318 = inttoptr i32 %v2_10008318 to i8*
  %v4_10008318 = load i8, i8* %v3_10008318, align 1
  %v5_10008318 = zext i8 %v4_10008318 to i32
  %v0_1000831c = load i32, i32* @r5, align 4
  %v2_1000831c = xor i32 %v0_1000831c, %v5_10008318
  %v3_10008320 = trunc i32 %v2_1000831c to i8
  store i8 %v3_10008320, i8* %v3_10008318, align 1
  %v0_10008324 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008324 = add i32 %v0_10008324, 1
  store i32 %v1_10008324, i32* %r10.global-to-local, align 4
  %v3_10008328 = load i16, i16* %v2_100082c0, align 4
  %v4_10008328 = zext i16 %v3_10008328 to i32
  %v2_1000832c = icmp slt i32 %v4_10008328, %v1_10008324
  %v3_1000832c = icmp sgt i32 %v4_10008328, %v1_10008324
  %v4_1000832c = icmp eq i32 %v4_10008328, %v1_10008324
  store i1 %v2_1000832c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000832c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000832c, label %dec_label_pc_100082e4, label %dec_label_pc_10008334

dec_label_pc_10008334:                            ; preds = %dec_label_pc_100082e4
  ret i32 %v2_100082b8

; uselistorder directives
  uselistorder i32 %v4_10008328, { 2, 1, 0 }
  uselistorder i32 %v1_10008324, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_100082c8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_100082b0, { 1, 0 }
}

define i32 @function_10008338(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008338:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_1000833c = mul i32 %arg1, 8
  %v2_10008344 = add i32 %v1_1000833c, ptrtoint (i32* @global_var_1001c3b8.187 to i32)
  %v1_1000834c = add i32 %v1_1000833c, add (i32 ptrtoint (i32* @global_var_1001c3b8.187 to i32), i32 4)
  %v2_1000834c = inttoptr i32 %v1_1000834c to i16*
  %v3_1000834c = load i16, i16* %v2_1000834c, align 4
  %v3_10008350 = icmp eq i16 %v3_1000834c, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008350, i1* %cr7_eq.global-to-local, align 1
  %v3_10008354 = load i32, i32* @global_var_1001c2b4.188, align 4
  %v1_10008358 = udiv i32 %v3_10008354, 16777216
  store i32 %v1_10008358, i32* @r5, align 4
  %v1_1000835c = urem i32 %v3_10008354, 256
  store i32 %v1_1000835c, i32* %r6.global-to-local, align 4
  %v1_10008360 = call i32 @__asm_rlwinm(i32 %v3_10008354, i32 24, i32 24, i32 31)
  %v1_10008364 = call i32 @__asm_rlwinm(i32 %v3_10008354, i32 16, i32 24, i32 31)
  %v0_10008368 = load i32, i32* @lr, align 4
  %v1_10008368 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008368 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008368 = or i1 %v1_10008368, %v2_10008368
  call void @__pseudo_cond_branch(i1 %v3_10008368, i32 %v0_10008368)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008370 = inttoptr i32 %v2_10008344 to i32*
  br label %dec_label_pc_10008370

dec_label_pc_10008370:                            ; preds = %dec_label_pc_10008370, %dec_label_pc_10008338
  %v1_1000837c = phi i32 [ %v1_100083b0, %dec_label_pc_10008370 ], [ 0, %dec_label_pc_10008338 ]
  %v2_10008370 = load i32, i32* %v1_10008370, align 4
  %v2_10008374 = add i32 %v2_10008370, %v1_1000837c
  %v3_10008374 = inttoptr i32 %v2_10008374 to i8*
  %v4_10008374 = load i8, i8* %v3_10008374, align 1
  %v5_10008374 = zext i8 %v4_10008374 to i32
  %v0_10008378 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008378 = xor i32 %v0_10008378, %v5_10008374
  %v3_1000837c = trunc i32 %v2_10008378 to i8
  store i8 %v3_1000837c, i8* %v3_10008374, align 1
  %v2_10008380 = load i32, i32* %v1_10008370, align 4
  %v0_10008384 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008384 = add i32 %v0_10008384, %v2_10008380
  %v3_10008384 = inttoptr i32 %v2_10008384 to i8*
  %v4_10008384 = load i8, i8* %v3_10008384, align 1
  %v5_10008384 = zext i8 %v4_10008384 to i32
  %v2_10008388 = xor i32 %v5_10008384, %v1_10008360
  %v3_1000838c = trunc i32 %v2_10008388 to i8
  store i8 %v3_1000838c, i8* %v3_10008384, align 1
  %v2_10008390 = load i32, i32* %v1_10008370, align 4
  %v0_10008394 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008394 = add i32 %v0_10008394, %v2_10008390
  %v3_10008394 = inttoptr i32 %v2_10008394 to i8*
  %v4_10008394 = load i8, i8* %v3_10008394, align 1
  %v5_10008394 = zext i8 %v4_10008394 to i32
  %v2_10008398 = xor i32 %v5_10008394, %v1_10008364
  %v3_1000839c = trunc i32 %v2_10008398 to i8
  store i8 %v3_1000839c, i8* %v3_10008394, align 1
  %v2_100083a0 = load i32, i32* %v1_10008370, align 4
  %v0_100083a4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100083a4 = add i32 %v0_100083a4, %v2_100083a0
  %v3_100083a4 = inttoptr i32 %v2_100083a4 to i8*
  %v4_100083a4 = load i8, i8* %v3_100083a4, align 1
  %v5_100083a4 = zext i8 %v4_100083a4 to i32
  %v0_100083a8 = load i32, i32* @r5, align 4
  %v2_100083a8 = xor i32 %v0_100083a8, %v5_100083a4
  %v3_100083ac = trunc i32 %v2_100083a8 to i8
  store i8 %v3_100083ac, i8* %v3_100083a4, align 1
  %v0_100083b0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100083b0 = add i32 %v0_100083b0, 1
  store i32 %v1_100083b0, i32* %r10.global-to-local, align 4
  %v3_100083b4 = load i16, i16* %v2_1000834c, align 4
  %v4_100083b4 = zext i16 %v3_100083b4 to i32
  %v2_100083b8 = icmp slt i32 %v4_100083b4, %v1_100083b0
  %v3_100083b8 = icmp sgt i32 %v4_100083b4, %v1_100083b0
  %v4_100083b8 = icmp eq i32 %v4_100083b4, %v1_100083b0
  store i1 %v2_100083b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100083b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083b8, label %dec_label_pc_10008370, label %dec_label_pc_100083c0

dec_label_pc_100083c0:                            ; preds = %dec_label_pc_10008370
  ret i32 %v2_10008344

; uselistorder directives
  uselistorder i32 %v4_100083b4, { 2, 1, 0 }
  uselistorder i32 %v1_100083b0, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_10008354, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000833c, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001c3b8.187 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c3b8.187 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_100083c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100083c4:
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 5, i32* %r20.global-to-local, align 4
  store i32 23, i32* %r21.global-to-local, align 4
  store i32 6, i32* %r22.global-to-local, align 4
  store i32 19, i32* %r23.global-to-local, align 4
  store i32 8, i32* %r24.global-to-local, align 4
  store i32 2, i32* %r25.global-to-local, align 4
  store i32 13, i32* %r26.global-to-local, align 4
  %v0_10008410 = load i32, i32* @r28, align 4
  store i32 268469276, i32* @lr, align 4
  %v0_10008418 = call i32 @function_1000a0ac()
  store i32 %v0_10008418, i32* %r28.global-to-local, align 4
  store i32 268469304, i32* @lr, align 4
  %v3_10008434 = call i32 @function_10008a1c(i32 ptrtoint (i32* @global_var_1000bc60.189 to i32), i32 2, i32 2)
  %v0_10008438 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008438, i32* @global_var_1001c3c0.190, align 4
  store i32 13, i32* @r3, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000bc64.191 to i32), i32* @r28, align 4
  %v0_10008448 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008448 = trunc i32 %v0_10008448 to i16
  store i16 %v1_10008448, i16* bitcast (i32* @global_var_1001c3c4.192 to i16*), align 4
  store i32 268469328, i32* @lr, align 4
  %v0_1000844c = call i32 @function_1000a0ac()
  %v0_10008450 = load i32, i32* @r28, align 4
  store i32 %v0_1000844c, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008460.193 to i32), i32* @lr, align 4
  %v4_1000845c = call i32 @function_10008a1c(i32 %v0_10008450, i32 13, i32 13)
  store i32 13, i32* @r3, align 4
  store i32 %v0_1000844c, i32* @global_var_1001c3c8.194, align 4
  %v0_10008468 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008468 = trunc i32 %v0_10008468 to i16
  store i16 %v1_10008468, i16* bitcast (i32* @global_var_1001c3cc.195 to i16*), align 4
  store i32 268469360, i32* @lr, align 4
  %v0_1000846c = call i32 @function_1000a0ac()
  %v0_10008470 = load i32, i32* @r28, align 4
  store i32 %v0_1000846c, i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008480.196 to i32), i32* @lr, align 4
  %v4_1000847c = call i32 @function_10008a1c(i32 %v0_10008470, i32 13, i32 13)
  store i32 2, i32* @r3, align 4
  store i32 %v0_1000846c, i32* @global_var_1001c3d0.197, align 4
  %v0_10008488 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008488 = trunc i32 %v0_10008488 to i16
  store i16 %v1_10008488, i16* bitcast (i32* @global_var_1001c3d4.198 to i16*), align 4
  store i32 268469392, i32* @lr, align 4
  %v0_1000848c = call i32 @function_1000a0ac()
  store i32 %v0_1000848c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084a4.200 to i32), i32* @lr, align 4
  %v3_100084a0 = call i32 @function_10008a1c(i32 ptrtoint (i32* @global_var_1000bc78.199 to i32), i32 2, i32 2)
  store i32 27, i32* @r3, align 4
  %v0_100084a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084a8, i32* @global_var_1001c3d8.201, align 4
  store i32 7, i32* %r27.global-to-local, align 4
  %v0_100084b0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100084b0 = trunc i32 %v0_100084b0 to i16
  store i16 %v1_100084b0, i16* bitcast (i32* @global_var_1001c3dc.202 to i16*), align 4
  store i32 268469432, i32* @lr, align 4
  %v0_100084b4 = call i32 @function_1000a0ac()
  store i32 %v0_100084b4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100084cc.204 to i32), i32* @lr, align 4
  %v4_100084c8 = call i32 @function_10008a1c(i32 ptrtoint ([28 x i8]* @global_var_1000bc7c.203 to i32), i32 27, i32 27)
  store i32 6, i32* @r3, align 4
  store i16 27, i16* bitcast (i32* @global_var_1001c3e4.205 to i16*), align 4
  %v0_100084d8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084d8, i32* @global_var_1001c3e0.206, align 4
  store i32 268469472, i32* @lr, align 4
  %v0_100084dc = call i32 @function_1000a0ac()
  store i32 %v0_100084dc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100084f4.208 to i32), i32* @lr, align 4
  %v4_100084f0 = call i32 @function_10008a1c(i32 ptrtoint ([7 x i8]* @global_var_1000bc98.207 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_100084f8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100084f8, i32* @global_var_1001c3e8.209, align 4
  store i32 16, i32* %r26.global-to-local, align 4
  %v0_10008500 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008500 = trunc i32 %v0_10008500 to i16
  store i16 %v1_10008500, i16* bitcast (i32* @global_var_1001c3ec.210 to i16*), align 4
  store i32 268469512, i32* @lr, align 4
  %v0_10008504 = call i32 @function_1000a0ac()
  store i32 %v0_10008504, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000851c.212 to i32), i32* @lr, align 4
  %v4_10008518 = call i32 @function_10008a1c(i32 ptrtoint ([8 x i8]* @global_var_1000bca0.211 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_10008520 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008520, i32* @global_var_1001c3f0.213, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  %v0_10008528 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008528 = trunc i32 %v0_10008528 to i16
  store i16 %v1_10008528, i16* bitcast (i32* @global_var_1001c3f4.214 to i16*), align 4
  store i32 268469552, i32* @lr, align 4
  %v0_1000852c = call i32 @function_1000a0ac()
  store i32 %v0_1000852c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008544.216 to i32), i32* @lr, align 4
  %v4_10008540 = call i32 @function_10008a1c(i32 ptrtoint ([8 x i8]* @global_var_1000bca8.215 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_10008548 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008548, i32* @global_var_1001c3f8.217, align 4
  %v0_1000854c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000854c = trunc i32 %v0_1000854c to i16
  store i16 %v1_1000854c, i16* bitcast (i32* @global_var_1001c3fc.218 to i16*), align 4
  store i32 268469588, i32* @lr, align 4
  %v0_10008550 = call i32 @function_1000a0ac()
  store i32 %v0_10008550, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008568.220 to i32), i32* @lr, align 4
  %v4_10008564 = call i32 @function_10008a1c(i32 ptrtoint ([4 x i8]* @global_var_1000bcb0.219 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001c404.221 to i16*), align 4
  %v0_10008574 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008574, i32* @global_var_1001c400.222, align 4
  store i32 268469628, i32* @lr, align 4
  %v0_10008578 = call i32 @function_1000a0ac()
  store i32 %v0_10008578, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008590.224 to i32), i32* @lr, align 4
  %v3_1000858c = call i32 @function_10008a1c(i32 ptrtoint (i32* @global_var_1000bcb4.223 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_10008594 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008594, i32* @global_var_1001c408.225, align 4
  %v0_10008598 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008598 = trunc i32 %v0_10008598 to i16
  store i16 %v1_10008598, i16* bitcast (i32* @global_var_1001c40c.226 to i16*), align 4
  store i32 268469664, i32* @lr, align 4
  %v0_1000859c = call i32 @function_1000a0ac()
  store i32 %v0_1000859c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100085b4.228 to i32), i32* @lr, align 4
  %v3_100085b0 = call i32 @function_10008a1c(i32 ptrtoint (i32* @global_var_1000bcc8.227 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001c414.229 to i16*), align 4
  %v0_100085c0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085c0, i32* @global_var_1001c410.230, align 4
  store i32 268469704, i32* @lr, align 4
  %v0_100085c4 = call i32 @function_1000a0ac()
  store i32 %v0_100085c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100085dc.232 to i32), i32* @lr, align 4
  %v4_100085d8 = call i32 @function_10008a1c(i32 ptrtoint ([10 x i8]* @global_var_1000bce4.231 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001c41c.233 to i16*), align 4
  %v0_100085e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100085e8, i32* @global_var_1001c418.234, align 4
  store i32 268469744, i32* @lr, align 4
  %v0_100085ec = call i32 @function_1000a0ac()
  store i32 %v0_100085ec, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008604.236 to i32), i32* @lr, align 4
  %v4_10008600 = call i32 @function_10008a1c(i32 ptrtoint ([17 x i8]* @global_var_1000bcf0.235 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10008608 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008608, i32* @global_var_1001c420.237, align 4
  %v0_1000860c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000860c = trunc i32 %v0_1000860c to i16
  store i16 %v1_1000860c, i16* bitcast (i32* @global_var_1001c424.238 to i16*), align 4
  store i32 268469780, i32* @lr, align 4
  %v0_10008610 = call i32 @function_1000a0ac()
  store i32 %v0_10008610, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008628.240 to i32), i32* @lr, align 4
  %v4_10008624 = call i32 @function_10008a1c(i32 ptrtoint ([23 x i8]* @global_var_1000bd04.239 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001c42c.241 to i16*), align 4
  %v0_10008634 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008634, i32* @global_var_1001c428.242, align 4
  store i32 268469820, i32* @lr, align 4
  %v0_10008638 = call i32 @function_1000a0ac()
  store i32 %v0_10008638, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008650.244 to i32), i32* @lr, align 4
  %v4_1000864c = call i32 @function_10008a1c(i32 ptrtoint ([8 x i8]* @global_var_1000bd1c.243 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10008654 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008654, i32* @global_var_1001c430.245, align 4
  %v0_10008658 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008658 = trunc i32 %v0_10008658 to i16
  store i16 %v1_10008658, i16* bitcast (i32* @global_var_1001c434.246 to i16*), align 4
  store i32 268469856, i32* @lr, align 4
  %v0_1000865c = call i32 @function_1000a0ac()
  store i32 %v0_1000865c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008674.248 to i32), i32* @lr, align 4
  %v4_10008670 = call i32 @function_10008a1c(i32 ptrtoint ([6 x i8]* @global_var_1000bd24.247 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_10008678 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008678, i32* @global_var_1001c438.249, align 4
  %v0_1000867c = load i32, i32* %r20.global-to-local, align 4
  %v1_1000867c = trunc i32 %v0_1000867c to i16
  store i16 %v1_1000867c, i16* bitcast (i32* @global_var_1001c43c.250 to i16*), align 4
  store i32 268469892, i32* @lr, align 4
  %v0_10008680 = call i32 @function_1000a0ac()
  store i32 %v0_10008680, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008698.252 to i32), i32* @lr, align 4
  %v4_10008694 = call i32 @function_10008a1c(i32 ptrtoint ([5 x i8]* @global_var_1000bd2c.251 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001c444.253 to i16*), align 4
  %v0_100086a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086a4, i32* @global_var_1001c440.254, align 4
  store i32 268469932, i32* @lr, align 4
  %v0_100086a8 = call i32 @function_1000a0ac()
  store i32 %v0_100086a8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100086c0.256 to i32), i32* @lr, align 4
  %v4_100086bc = call i32 @function_10008a1c(i32 ptrtoint ([7 x i8]* @global_var_1000bd34.255 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_100086c4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086c4, i32* @global_var_1001c448.257, align 4
  %v0_100086c8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100086c8 = trunc i32 %v0_100086c8 to i16
  store i16 %v1_100086c8, i16* bitcast (i32* @global_var_1001c44c.258 to i16*), align 4
  store i32 268469968, i32* @lr, align 4
  %v0_100086cc = call i32 @function_1000a0ac()
  store i32 %v0_100086cc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100086e4.260 to i32), i32* @lr, align 4
  %v4_100086e0 = call i32 @function_10008a1c(i32 ptrtoint ([15 x i8]* @global_var_1000bd3c.259 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_100086e8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100086e8, i32* @global_var_1001c450.261, align 4
  %v0_100086ec = load i32, i32* %r25.global-to-local, align 4
  %v1_100086ec = trunc i32 %v0_100086ec to i16
  store i16 %v1_100086ec, i16* bitcast (i32* @global_var_1001c454.262 to i16*), align 4
  store i32 268470004, i32* @lr, align 4
  %v0_100086f0 = call i32 @function_1000a0ac()
  store i32 %v0_100086f0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008708.264 to i32), i32* @lr, align 4
  %v4_10008704 = call i32 @function_10008a1c(i32 ptrtoint ([9 x i8]* @global_var_1000bd4c.263 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_1000870c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000870c, i32* @global_var_1001c4c8.265, align 4
  %v0_10008710 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008710 = trunc i32 %v0_10008710 to i16
  store i16 %v1_10008710, i16* bitcast (i32* @global_var_1001c4cc.266 to i16*), align 4
  store i32 268470040, i32* @lr, align 4
  %v0_10008714 = call i32 @function_1000a0ac()
  store i32 %v0_10008714, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000872c.268 to i32), i32* @lr, align 4
  %v4_10008728 = call i32 @function_10008a1c(i32 ptrtoint ([8 x i8]* @global_var_1000bd58.267 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10008730 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008730, i32* @global_var_1001c4d0.269, align 4
  %v0_10008734 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008734 = trunc i32 %v0_10008734 to i16
  store i16 %v1_10008734, i16* bitcast (i32* @global_var_1001c4d4.270 to i16*), align 4
  store i32 268470076, i32* @lr, align 4
  %v0_10008738 = call i32 @function_1000a0ac()
  store i32 %v0_10008738, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008750.272 to i32), i32* @lr, align 4
  %v4_1000874c = call i32 @function_10008a1c(i32 ptrtoint ([17 x i8]* @global_var_1000bd60.271 to i32), i32 16, i32 16)
  store i32 23, i32* @r3, align 4
  %v0_10008754 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008754, i32* @global_var_1001c458.273, align 4
  store i32 268500992, i32* %r27.global-to-local, align 4
  %v0_1000875c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000875c = trunc i32 %v0_1000875c to i16
  store i16 %v1_1000875c, i16* bitcast (i32* @global_var_1001c45c.274 to i16*), align 4
  store i32 268470116, i32* @lr, align 4
  %v0_10008760 = call i32 @function_1000a0ac()
  store i32 %v0_10008760, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008778.276 to i32), i32* @lr, align 4
  %v4_10008774 = call i32 @function_10008a1c(i32 ptrtoint ([24 x i8]* @global_var_1000bd74.275 to i32), i32 23, i32 23)
  store i32 8, i32* @r3, align 4
  %v0_1000877c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000877c, i32* @global_var_1001c460.277, align 4
  store i32 268500992, i32* %r26.global-to-local, align 4
  %v0_10008784 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008784 = trunc i32 %v0_10008784 to i16
  store i16 %v1_10008784, i16* bitcast (i32* @global_var_1001c464.278 to i16*), align 4
  store i32 268470156, i32* @lr, align 4
  %v0_10008788 = call i32 @function_1000a0ac()
  store i32 %v0_10008788, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000bd98.280 to i32), i32* %r26.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100087a4.281 to i32), i32* @lr, align 4
  %v4_100087a0 = call i32 @function_10008a1c(i32 ptrtoint ([9 x i8]* @global_var_1000bd8c.279 to i32), i32 8, i32 8)
  store i32 14, i32* @r3, align 4
  %v0_100087a8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087a8, i32* @global_var_1001c468.282, align 4
  %v0_100087ac = load i32, i32* %r24.global-to-local, align 4
  %v1_100087ac = trunc i32 %v0_100087ac to i16
  store i16 %v1_100087ac, i16* bitcast (i32* @global_var_1001c46c.283 to i16*), align 4
  store i32 268470196, i32* @lr, align 4
  %v0_100087b0 = call i32 @function_1000a0ac()
  %v0_100087b4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_100087b0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([20 x i8]* @global_var_1000bda8.284 to i32), i32* %r27.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100087c8.285 to i32), i32* @lr, align 4
  %v4_100087c4 = call i32 @function_10008a1c(i32 %v0_100087b4, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_100087cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087cc, i32* @global_var_1001c470.286, align 4
  %v0_100087d0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100087d0 = trunc i32 %v0_100087d0 to i16
  store i16 %v1_100087d0, i16* bitcast (i32* @global_var_1001c474.287 to i16*), align 4
  store i32 268470232, i32* @lr, align 4
  %v0_100087d4 = call i32 @function_1000a0ac()
  %v0_100087d8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100087d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100087e8.288 to i32), i32* @lr, align 4
  %v4_100087e4 = call i32 @function_10008a1c(i32 %v0_100087d8, i32 19, i32 19)
  store i32 10, i32* @r3, align 4
  %v0_100087ec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100087ec, i32* @global_var_1001c478.289, align 4
  %v0_100087f0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100087f0 = trunc i32 %v0_100087f0 to i16
  store i16 %v1_100087f0, i16* bitcast (i32* @global_var_1001c47c.290 to i16*), align 4
  store i32 268470264, i32* @lr, align 4
  %v0_100087f4 = call i32 @function_1000a0ac()
  store i32 %v0_100087f4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000880c.292 to i32), i32* @lr, align 4
  %v4_10008808 = call i32 @function_10008a1c(i32 ptrtoint ([11 x i8]* @global_var_1000bdbc.291 to i32), i32 10, i32 10)
  store i32 21, i32* @r3, align 4
  store i16 10, i16* bitcast (i32* @global_var_1001c4dc.293 to i16*), align 4
  %v0_10008818 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008818, i32* @global_var_1001c4d8.294, align 4
  store i32 268470304, i32* @lr, align 4
  %v0_1000881c = call i32 @function_1000a0ac()
  store i32 %v0_1000881c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008834.296 to i32), i32* @lr, align 4
  %v3_10008830 = call i32 @function_10008a1c(i32 ptrtoint (i32* @global_var_1000be20.295 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001c484.297 to i16*), align 4
  %v0_10008840 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008840, i32* @global_var_1001c480.298, align 4
  store i32 268470344, i32* @lr, align 4
  %v0_10008844 = call i32 @function_1000a0ac()
  store i32 %v0_10008844, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000885c.300 to i32), i32* @lr, align 4
  %v4_10008858 = call i32 @function_10008a1c(i32 ptrtoint ([18 x i8]* @global_var_1000bdc8.299 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001c48c.301 to i16*), align 4
  %v0_10008868 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008868, i32* @global_var_1001c488.302, align 4
  store i32 268470384, i32* @lr, align 4
  %v0_1000886c = call i32 @function_1000a0ac()
  store i32 %v0_1000886c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008884.304 to i32), i32* @lr, align 4
  %v4_10008880 = call i32 @function_10008a1c(i32 ptrtoint ([13 x i8]* @global_var_1000bddc.303 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001c494.305 to i16*), align 4
  %v0_10008890 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008890, i32* @global_var_1001c490.306, align 4
  store i32 268470424, i32* @lr, align 4
  %v0_10008894 = call i32 @function_1000a0ac()
  %v0_10008898 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10008894, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100088a8.307 to i32), i32* @lr, align 4
  %v4_100088a4 = call i32 @function_10008a1c(i32 %v0_10008898, i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_100088ac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100088ac, i32* @global_var_1001c498.308, align 4
  %v0_100088b0 = load i32, i32* %r25.global-to-local, align 4
  %v1_100088b0 = trunc i32 %v0_100088b0 to i16
  store i16 %v1_100088b0, i16* bitcast (i32* @global_var_1001c49c.309 to i16*), align 4
  store i32 268470456, i32* @lr, align 4
  %v0_100088b4 = call i32 @function_1000a0ac()
  %v0_100088b8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100088b4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100088c8.310 to i32), i32* @lr, align 4
  %v4_100088c4 = call i32 @function_10008a1c(i32 %v0_100088b8, i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_100088cc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100088cc, i32* @global_var_1001c4a0.311, align 4
  %v0_100088d0 = load i32, i32* %r23.global-to-local, align 4
  %v1_100088d0 = trunc i32 %v0_100088d0 to i16
  store i16 %v1_100088d0, i16* bitcast (i32* @global_var_1001c4a4.312 to i16*), align 4
  store i32 268470488, i32* @lr, align 4
  %v0_100088d4 = call i32 @function_1000a0ac()
  store i32 %v0_100088d4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100088ec.314 to i32), i32* @lr, align 4
  %v4_100088e8 = call i32 @function_10008a1c(i32 ptrtoint ([9 x i8]* @global_var_1000bdec.313 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_100088f0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100088f0, i32* @global_var_1001c4a8.315, align 4
  %v0_100088f4 = load i32, i32* %r24.global-to-local, align 4
  %v1_100088f4 = trunc i32 %v0_100088f4 to i16
  store i16 %v1_100088f4, i16* bitcast (i32* @global_var_1001c4ac.316 to i16*), align 4
  store i32 268470524, i32* @lr, align 4
  %v0_100088f8 = call i32 @function_1000a0ac()
  store i32 %v0_100088f8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008910.318 to i32), i32* @lr, align 4
  %v4_1000890c = call i32 @function_10008a1c(i32 ptrtoint ([6 x i8]* @global_var_1000bdf8.317 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10008914 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008914, i32* @global_var_1001c4b0.319, align 4
  %v0_10008918 = load i32, i32* %r20.global-to-local, align 4
  %v1_10008918 = trunc i32 %v0_10008918 to i16
  store i16 %v1_10008918, i16* bitcast (i32* @global_var_1001c4b4.320 to i16*), align 4
  store i32 268470560, i32* @lr, align 4
  %v0_1000891c = call i32 @function_1000a0ac()
  store i32 %v0_1000891c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008934.322 to i32), i32* @lr, align 4
  %v4_10008930 = call i32 @function_10008a1c(i32 ptrtoint ([7 x i8]* @global_var_1000be00.321 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_10008938 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008938, i32* @global_var_1001c4b8.323, align 4
  %v0_1000893c = load i32, i32* %r22.global-to-local, align 4
  %v1_1000893c = trunc i32 %v0_1000893c to i16
  store i16 %v1_1000893c, i16* bitcast (i32* @global_var_1001c4bc.324 to i16*), align 4
  store i32 268470596, i32* @lr, align 4
  %v0_10008940 = call i32 @function_1000a0ac()
  store i32 %v0_10008940, i32* %r28.global-to-local, align 4
  store i32 268470616, i32* @lr, align 4
  %v4_10008954 = call i32 @function_10008a1c(i32 ptrtoint ([24 x i8]* @global_var_1000be08.325 to i32), i32 23, i32 23)
  %v0_1000895c = load i32, i32* %r21.global-to-local, align 4
  %v1_1000895c = trunc i32 %v0_1000895c to i16
  store i16 %v1_1000895c, i16* bitcast (i32* @global_var_1001c4c4.326 to i16*), align 4
  %v0_10008960 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008960, i32* @global_var_1001c4c0.327, align 4
  store i32 %v0_10008410, i32* @r28, align 4
  ret i32 %v4_10008954

; uselistorder directives
  uselistorder i32 21, { 0, 1, 6, 7, 8, 2, 3, 4, 5, 9, 10, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @function_10008a1c, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10008998(i8* %arg1) local_unnamed_addr {
dec_label_pc_10008998:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10008998 = load i8, i8* %arg1, align 1
  %v3_100089a4 = icmp eq i8 %v3_10008998, 0
  %v0_100089a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100089a4, i32 %v0_100089a8)
  br label %dec_label_pc_100089ac

dec_label_pc_100089ac:                            ; preds = %dec_label_pc_100089ac, %dec_label_pc_10008998
  %v0_100089ac = phi i32 [ %v1_100089ac, %dec_label_pc_100089ac ], [ 0, %dec_label_pc_10008998 ]
  %v1_100089ac = add i32 %v0_100089ac, 1
  %v2_100089b0 = add i32 %v1_100089ac, %tmp
  %v3_100089b0 = inttoptr i32 %v2_100089b0 to i8*
  %v4_100089b0 = load i8, i8* %v3_100089b0, align 1
  %v3_100089b4 = icmp eq i8 %v4_100089b0, 0
  br i1 %v3_100089b4, label %dec_label_pc_100089bc, label %dec_label_pc_100089ac

dec_label_pc_100089bc:                            ; preds = %dec_label_pc_100089ac
  ret i32 %v1_100089ac
}

define i32 @function_100089c0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100089c0:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_100089c0 = load i8, i8* %arg1, align 1
  %v3_100089c4 = icmp eq i8 %v2_100089c0, 0
  br i1 %v3_100089c4, label %dec_label_pc_10008a10, label %dec_label_pc_100089cc

dec_label_pc_100089cc:                            ; preds = %dec_label_pc_100089c0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100089d0

dec_label_pc_100089d0:                            ; preds = %dec_label_pc_100089d0, %dec_label_pc_100089cc
  %v0_100089d0 = phi i32 [ %v1_100089d0, %dec_label_pc_100089d0 ], [ 0, %dec_label_pc_100089cc ]
  %v1_100089d0 = add i32 %v0_100089d0, 1
  store i32 %v1_100089d0, i32* %r9.global-to-local, align 4
  %v2_100089d4 = add i32 %v1_100089d0, %tmp
  %v3_100089d4 = inttoptr i32 %v2_100089d4 to i8*
  %v4_100089d4 = load i8, i8* %v3_100089d4, align 1
  %v3_100089d8 = icmp eq i8 %v4_100089d4, 0
  br i1 %v3_100089d8, label %dec_label_pc_100089e0, label %dec_label_pc_100089d0

dec_label_pc_100089e0:                            ; preds = %dec_label_pc_100089d0
  %v3_100089e0 = icmp eq i32 %v1_100089d0, -1
  br i1 %v3_100089e0, label %dec_label_pc_10008a08, label %dec_label_pc_100089e8

dec_label_pc_100089e8:                            ; preds = %dec_label_pc_100089e0
  %phitmp = add i32 %v0_100089d0, 2
  br label %dec_label_pc_100089ec

dec_label_pc_100089ec:                            ; preds = %dec_label_pc_10008a10, %dec_label_pc_100089e8
  %v0_100089ec = phi i32 [ 1, %dec_label_pc_10008a10 ], [ %phitmp, %dec_label_pc_100089e8 ]
  store i32 %v0_100089ec, i32* %ctr.global-to-local, align 4
  %v2_100089fc.pre = load i32, i32* @r3, align 4
  %v2_100089f48 = load i8, i8* %arg1, align 1
  %v1_100089f810 = add i32 %tmp, 1
  store i32 %v1_100089f810, i32* %r4.global-to-local, align 4
  %v3_100089fc11 = inttoptr i32 %v2_100089fc.pre to i8*
  store i8 %v2_100089f48, i8* %v3_100089fc11, align 1
  %v0_10008a0012 = load i32, i32* @r3, align 4
  %v1_10008a0013 = add i32 %v0_10008a0012, 1
  store i32 %v1_10008a0013, i32* %r3.global-to-local, align 4
  %v0_10008a0414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a0415 = add i32 %v0_10008a0414, -1
  store i32 %v1_10008a0415, i32* %ctr.global-to-local, align 4
  %v2_10008a0416 = icmp eq i32 %v1_10008a0415, 0
  br i1 %v2_10008a0416, label %dec_label_pc_10008a08.loopexit, label %dec_label_pc_100089f4.dec_label_pc_100089f4_crit_edge

dec_label_pc_100089f4.dec_label_pc_100089f4_crit_edge: ; preds = %dec_label_pc_100089ec, %dec_label_pc_100089f4.dec_label_pc_100089f4_crit_edge
  %v1_10008a0017 = phi i32 [ %v1_10008a00, %dec_label_pc_100089f4.dec_label_pc_100089f4_crit_edge ], [ %v1_10008a0013, %dec_label_pc_100089ec ]
  %v0_100089f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_100089f4 = inttoptr i32 %v0_100089f4.pre to i8*
  %v2_100089f4 = load i8, i8* %v1_100089f4, align 1
  %v1_100089f8 = add i32 %v0_100089f4.pre, 1
  store i32 %v1_100089f8, i32* %r4.global-to-local, align 4
  %v3_100089fc = inttoptr i32 %v1_10008a0017 to i8*
  store i8 %v2_100089f4, i8* %v3_100089fc, align 1
  %v0_10008a00 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008a00 = add i32 %v0_10008a00, 1
  store i32 %v1_10008a00, i32* %r3.global-to-local, align 4
  %v0_10008a04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a04 = add i32 %v0_10008a04, -1
  store i32 %v1_10008a04, i32* %ctr.global-to-local, align 4
  %v2_10008a04 = icmp eq i32 %v1_10008a04, 0
  br i1 %v2_10008a04, label %dec_label_pc_10008a08.loopexit, label %dec_label_pc_100089f4.dec_label_pc_100089f4_crit_edge

dec_label_pc_10008a08.loopexit:                   ; preds = %dec_label_pc_100089f4.dec_label_pc_100089f4_crit_edge, %dec_label_pc_100089ec
  %v0_10008a08.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008a08

dec_label_pc_10008a08:                            ; preds = %dec_label_pc_10008a08.loopexit, %dec_label_pc_100089e0
  %v0_10008a08 = phi i32 [ %v0_10008a08.pre, %dec_label_pc_10008a08.loopexit ], [ -1, %dec_label_pc_100089e0 ]
  store i32 %v0_10008a08, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008a08

dec_label_pc_10008a10:                            ; preds = %dec_label_pc_100089c0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100089ec

; uselistorder directives
  uselistorder i32 %v0_10008a08, { 1, 0 }
  uselistorder i32 %v1_10008a04, { 1, 0 }
  uselistorder i32 %v1_10008a00, { 1, 0 }
  uselistorder i32 %v1_100089d0, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_100089f4.dec_label_pc_100089f4_crit_edge, { 1, 0 }
}

define i32 @function_10008a1c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008a1c:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008a1c = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10008a24 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008a1c, i32 %v0_10008a24)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008a2c

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_10008a2c, %dec_label_pc_10008a1c
  %v0_10008a2c = phi i32 [ %v1_10008a34, %dec_label_pc_10008a2c ], [ 0, %dec_label_pc_10008a1c ]
  %v2_10008a2c = add i32 %v0_10008a2c, %arg2
  %v3_10008a2c = inttoptr i32 %v2_10008a2c to i8*
  %v4_10008a2c = load i8, i8* %v3_10008a2c, align 1
  %v4_10008a30 = add i32 %v0_10008a2c, %arg1
  %v5_10008a30 = inttoptr i32 %v4_10008a30 to i8*
  store i8 %v4_10008a2c, i8* %v5_10008a30, align 1
  %v0_10008a34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008a34 = add i32 %v0_10008a34, 1
  store i32 %v1_10008a34, i32* %r9.global-to-local, align 4
  %v0_10008a38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a38 = add i32 %v0_10008a38, -1
  store i32 %v1_10008a38, i32* %ctr.global-to-local, align 4
  %v2_10008a38 = icmp eq i32 %v1_10008a38, 0
  br i1 %v2_10008a38, label %dec_label_pc_10008a3c, label %dec_label_pc_10008a2c

dec_label_pc_10008a3c:                            ; preds = %dec_label_pc_10008a2c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008a38, { 1, 0 }
  uselistorder i32 %v1_10008a34, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10008a40() local_unnamed_addr {
dec_label_pc_10008a40:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008a40 = load i32, i32* @r4, align 4
  store i32 %v0_10008a40, i32* %r0.global-to-local, align 4
  %v3_10008a40 = icmp eq i32 %v0_10008a40, 0
  store i32 %v0_10008a40, i32* %ctr.global-to-local, align 4
  %v0_10008a48 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008a40, i32 %v0_10008a48)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008a543 = load i32, i32* @r3, align 4
  %v5_10008a544 = inttoptr i32 %v2_10008a543 to i8*
  store i8 0, i8* %v5_10008a544, align 1
  %v0_10008a585 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008a586 = add i32 %v0_10008a585, 1
  store i32 %v1_10008a586, i32* %r9.global-to-local, align 4
  %v0_10008a5c7 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a5c8 = add i32 %v0_10008a5c7, -1
  store i32 %v1_10008a5c8, i32* %ctr.global-to-local, align 4
  %v2_10008a5c9 = icmp eq i32 %v1_10008a5c8, 0
  br i1 %v2_10008a5c9, label %dec_label_pc_10008a60, label %dec_label_pc_10008a54.dec_label_pc_10008a54_crit_edge

dec_label_pc_10008a54.dec_label_pc_10008a54_crit_edge: ; preds = %dec_label_pc_10008a40, %dec_label_pc_10008a54.dec_label_pc_10008a54_crit_edge
  %v1_10008a5810 = phi i32 [ %v1_10008a58, %dec_label_pc_10008a54.dec_label_pc_10008a54_crit_edge ], [ %v1_10008a586, %dec_label_pc_10008a40 ]
  %v0_10008a54.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10008a54.pre to i8
  %v2_10008a54 = load i32, i32* @r3, align 4
  %v4_10008a54 = add i32 %v2_10008a54, %v1_10008a5810
  %v5_10008a54 = inttoptr i32 %v4_10008a54 to i8*
  store i8 %extract.t, i8* %v5_10008a54, align 1
  %v0_10008a58 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008a58 = add i32 %v0_10008a58, 1
  store i32 %v1_10008a58, i32* %r9.global-to-local, align 4
  %v0_10008a5c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008a5c = add i32 %v0_10008a5c, -1
  store i32 %v1_10008a5c, i32* %ctr.global-to-local, align 4
  %v2_10008a5c = icmp eq i32 %v1_10008a5c, 0
  br i1 %v2_10008a5c, label %dec_label_pc_10008a60, label %dec_label_pc_10008a54.dec_label_pc_10008a54_crit_edge

dec_label_pc_10008a60:                            ; preds = %dec_label_pc_10008a54.dec_label_pc_10008a54_crit_edge, %dec_label_pc_10008a40
  %v0_10008a60 = load i32, i32* @r3, align 4
  ret i32 %v0_10008a60

; uselistorder directives
  uselistorder i32 %v1_10008a5c, { 1, 0 }
  uselistorder i32 %v1_10008a58, { 1, 0 }
  uselistorder i32 %v0_10008a40, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008a54.dec_label_pc_10008a54_crit_edge, { 1, 0 }
}

define i32 @function_10008a64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008a64:
  %v3_10008a64 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10008a64, label %dec_label_pc_10008a70, label %dec_label_pc_10008a78

dec_label_pc_10008a70:                            ; preds = %dec_label_pc_10008a94, %dec_label_pc_10008a64, %dec_label_pc_10008a78
  ret i32 -1

dec_label_pc_10008a78:                            ; preds = %dec_label_pc_10008a64
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10008a70, label %dec_label_pc_10008a80

dec_label_pc_10008a80:                            ; preds = %dec_label_pc_10008a78
  br label %dec_label_pc_10008a9c

dec_label_pc_10008a90:                            ; preds = %dec_label_pc_10008a9c
  br label %dec_label_pc_10008a94

dec_label_pc_10008a94:                            ; preds = %dec_label_pc_10008ab4, %dec_label_pc_10008a90
  %v0_10008a9c1 = phi i32 [ %v1_10008aa0, %dec_label_pc_10008ab4 ], [ 0, %dec_label_pc_10008a90 ]
  %v1_10008a94 = add i32 %v0_10008ab8, 1
  %v1_10008a98 = add i32 %v0_10008a98, -1
  %v2_10008a98 = icmp eq i32 %v1_10008a98, 0
  br i1 %v2_10008a98, label %dec_label_pc_10008a70, label %dec_label_pc_10008a9c

dec_label_pc_10008a9c:                            ; preds = %dec_label_pc_10008a94, %dec_label_pc_10008a80
  %v0_10008a98 = phi i32 [ %v1_10008a98, %dec_label_pc_10008a94 ], [ %arg2, %dec_label_pc_10008a80 ]
  %v0_10008ab8 = phi i32 [ %v1_10008a94, %dec_label_pc_10008a94 ], [ 0, %dec_label_pc_10008a80 ]
  %v0_10008a9c = phi i32 [ %v0_10008a9c1, %dec_label_pc_10008a94 ], [ 0, %dec_label_pc_10008a80 ]
  %v2_10008a9c = add i32 %v0_10008a9c, %arg3
  %v3_10008a9c = inttoptr i32 %v2_10008a9c to i8*
  %v4_10008a9c = load i8, i8* %v3_10008a9c, align 1
  %v1_10008aa0 = add i32 %v0_10008a9c, 1
  %v2_10008aa4 = add i32 %v0_10008ab8, %arg1
  %v3_10008aa4 = inttoptr i32 %v2_10008aa4 to i8*
  %v4_10008aa4 = load i8, i8* %v3_10008aa4, align 1
  %v4_10008aac = icmp eq i8 %v4_10008aa4, %v4_10008a9c
  br i1 %v4_10008aac, label %dec_label_pc_10008ab4, label %dec_label_pc_10008a90

dec_label_pc_10008ab4:                            ; preds = %dec_label_pc_10008a9c
  %v4_10008aa8 = icmp eq i32 %v1_10008aa0, %arg4
  br i1 %v4_10008aa8, label %dec_label_pc_10008ab8, label %dec_label_pc_10008a94

dec_label_pc_10008ab8:                            ; preds = %dec_label_pc_10008ab4
  %v1_10008ab8 = add i32 %v0_10008ab8, 1
  ret i32 %v1_10008ab8

; uselistorder directives
  uselistorder i32 %v0_10008a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10008a70, { 0, 2, 1 }
}

define i32 @function_10008ac0(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10008ac0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008ac0

dec_label_pc_10008ac0:                            ; preds = %dec_label_pc_10008adc, %dec_label_pc_10008ac0, %bb
  %v0_10008ac0 = phi i32 [ %v0_10008ac0.pre, %bb ], [ %v1_10008ac4, %dec_label_pc_10008ac0 ], [ %v1_10008ac4, %dec_label_pc_10008adc ]
  %v1_10008ac0 = inttoptr i32 %v0_10008ac0 to i8*
  %v2_10008ac0 = load i8, i8* %v1_10008ac0, align 1
  %v1_10008ac4 = add i32 %v0_10008ac0, 1
  %v3_10008ad0 = icmp eq i8 %v2_10008ac0, 32
  br i1 %v3_10008ad0, label %dec_label_pc_10008ac0, label %dec_label_pc_10008adc

dec_label_pc_10008adc:                            ; preds = %dec_label_pc_10008ac0
  %v2_10008ac0.off = add i8 %v2_10008ac0, -9
  %tmp = icmp ult i8 %v2_10008ac0.off, 2
  br i1 %tmp, label %dec_label_pc_10008ac0, label %dec_label_pc_10008ae8

dec_label_pc_10008ae8:                            ; preds = %dec_label_pc_10008adc
  %v3_10008ae8 = icmp eq i8 %v2_10008ac0, 45
  br i1 %v3_10008ae8, label %dec_label_pc_10008b94, label %dec_label_pc_10008af0

dec_label_pc_10008af0:                            ; preds = %dec_label_pc_10008ae8
  %v3_10008af0 = icmp eq i8 %v2_10008ac0, 43
  br i1 %v3_10008af0, label %dec_label_pc_10008bec, label %dec_label_pc_10008af8

dec_label_pc_10008af8:                            ; preds = %dec_label_pc_10008af0, %dec_label_pc_10008bec
  %v0_10008b8826 = phi i32 [ %v1_10008ac4, %dec_label_pc_10008af0 ], [ %v1_10008bf0, %dec_label_pc_10008bec ]
  %v0_10008b185.in = phi i8 [ %v2_10008ac0, %dec_label_pc_10008af0 ], [ %v2_10008bec, %dec_label_pc_10008bec ]
  br label %dec_label_pc_10008b04

dec_label_pc_10008b04:                            ; preds = %dec_label_pc_10008b94, %dec_label_pc_10008af8
  %v0_10008b8825 = phi i32 [ %v1_10008b9c, %dec_label_pc_10008b94 ], [ %v0_10008b8826, %dec_label_pc_10008af8 ]
  %v0_10008b184.in = phi i8 [ %v2_10008b94, %dec_label_pc_10008b94 ], [ %v0_10008b185.in, %dec_label_pc_10008af8 ]
  %v0_10008bdc = phi i32 [ 1, %dec_label_pc_10008b94 ], [ 0, %dec_label_pc_10008af8 ]
  %v1_10008b14 = phi i32 [ -2147483648, %dec_label_pc_10008b94 ], [ 2147483647, %dec_label_pc_10008af8 ]
  %v2_10008b04 = udiv i32 %v1_10008b14, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10008b10 = mul i32 %v2_10008b04, %arg1
  %v2_10008b14 = sub i32 %v1_10008b14, %v2_10008b10
  br label %dec_label_pc_10008b18

dec_label_pc_10008b18:                            ; preds = %dec_label_pc_10008b88, %dec_label_pc_10008b04
  %v0_10008b88 = phi i32 [ %v1_10008b8c, %dec_label_pc_10008b88 ], [ %v0_10008b8825, %dec_label_pc_10008b04 ]
  %v0_10008b7c = phi i32 [ %v0_10008b7417, %dec_label_pc_10008b88 ], [ 0, %dec_label_pc_10008b04 ]
  %v0_10008b6c = phi i32 [ %v0_10008bcc11, %dec_label_pc_10008b88 ], [ 0, %dec_label_pc_10008b04 ]
  %v0_10008b64 = phi i32 [ %v0_10008bc09, %dec_label_pc_10008b88 ], [ 0, %dec_label_pc_10008b04 ]
  %v1_10008b58.in = phi i8 [ %v2_10008b88, %dec_label_pc_10008b88 ], [ %v0_10008b184.in, %dec_label_pc_10008b04 ]
  %v1_10008b58 = zext i8 %v1_10008b58.in to i32
  %v1_10008b1c = add nsw i32 %v1_10008b58, -48
  %fold = add nuw nsw i32 %v1_10008b58, 208
  %v1_10008b24 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10008b24, 10
  br i1 %tmp27, label %dec_label_pc_10008b5c, label %dec_label_pc_10008b30

dec_label_pc_10008b30:                            ; preds = %dec_label_pc_10008b18
  %v1_10008b30 = add nuw nsw i32 %v1_10008b58, 191
  %v1_10008b34 = urem i32 %v1_10008b30, 256
  %tmp28 = icmp ult i32 %v1_10008b34, 26
  br i1 %tmp28, label %dec_label_pc_10008b58, label %dec_label_pc_10008b44

dec_label_pc_10008b44:                            ; preds = %dec_label_pc_10008b30
  %v1_10008b44 = add nuw nsw i32 %v1_10008b58, 159
  %v1_10008b48 = urem i32 %v1_10008b44, 256
  %v2_10008b4c = icmp ugt i32 %v1_10008b48, 25
  br i1 %v2_10008b4c, label %dec_label_pc_10008bc0, label %dec_label_pc_10008b54

dec_label_pc_10008b54:                            ; preds = %dec_label_pc_10008b44
  br label %dec_label_pc_10008b58

dec_label_pc_10008b58:                            ; preds = %dec_label_pc_10008b30, %dec_label_pc_10008b54
  %v0_10008b58 = phi i32 [ 55, %dec_label_pc_10008b30 ], [ 87, %dec_label_pc_10008b54 ]
  %v2_10008b58 = sub nsw i32 %v1_10008b58, %v0_10008b58
  br label %dec_label_pc_10008b5c

dec_label_pc_10008b5c:                            ; preds = %dec_label_pc_10008b18, %dec_label_pc_10008b58
  %v1_10008b84 = phi i32 [ %v1_10008b1c, %dec_label_pc_10008b18 ], [ %v2_10008b58, %dec_label_pc_10008b58 ]
  %v2_10008b5c = icmp slt i32 %v1_10008b84, %arg1
  br i1 %v2_10008b5c, label %dec_label_pc_10008b64, label %dec_label_pc_10008bc0

dec_label_pc_10008b64:                            ; preds = %dec_label_pc_10008b5c
  %v1_10008b64 = icmp slt i32 %v0_10008b64, 0
  br i1 %v1_10008b64, label %dec_label_pc_10008ba8, label %dec_label_pc_10008b6c

dec_label_pc_10008b6c:                            ; preds = %dec_label_pc_10008b64
  %v3_10008b6c = icmp ugt i32 %v0_10008b6c, %v2_10008b04
  br i1 %v3_10008b6c, label %dec_label_pc_10008ba8, label %dec_label_pc_10008b74

dec_label_pc_10008b74:                            ; preds = %dec_label_pc_10008b6c
  %v4_10008b74 = icmp eq i32 %v0_10008b7c, %v2_10008b04
  br i1 %v4_10008b74, label %dec_label_pc_10008bb0, label %dec_label_pc_10008b7c

dec_label_pc_10008b7c:                            ; preds = %dec_label_pc_10008bb0, %dec_label_pc_10008b74
  %v2_10008b7c = mul i32 %v0_10008b7c, %arg1
  %v2_10008b84 = add i32 %v1_10008b84, %v2_10008b7c
  store i32 %v2_10008b84, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008b88

dec_label_pc_10008b88:                            ; preds = %dec_label_pc_10008bb0, %dec_label_pc_10008ba8, %dec_label_pc_10008b7c
  %v0_10008b7417 = phi i32 [ %v2_10008b04, %dec_label_pc_10008bb0 ], [ %v0_10008b7c, %dec_label_pc_10008ba8 ], [ %v2_10008b84, %dec_label_pc_10008b7c ]
  %v0_10008bcc11 = phi i32 [ %v2_10008b04, %dec_label_pc_10008bb0 ], [ %v0_10008b6c, %dec_label_pc_10008ba8 ], [ %v2_10008b84, %dec_label_pc_10008b7c ]
  %v0_10008bc09 = phi i32 [ -1, %dec_label_pc_10008bb0 ], [ -1, %dec_label_pc_10008ba8 ], [ 1, %dec_label_pc_10008b7c ]
  %v1_10008b88 = inttoptr i32 %v0_10008b88 to i8*
  %v2_10008b88 = load i8, i8* %v1_10008b88, align 1
  %v1_10008b8c = add i32 %v0_10008b88, 1
  br label %dec_label_pc_10008b18

dec_label_pc_10008b94:                            ; preds = %dec_label_pc_10008ae8
  %v1_10008b94 = inttoptr i32 %v1_10008ac4 to i8*
  %v2_10008b94 = load i8, i8* %v1_10008b94, align 1
  %v1_10008b9c = add i32 %v0_10008ac0, 2
  br label %dec_label_pc_10008b04

dec_label_pc_10008ba8:                            ; preds = %dec_label_pc_10008b6c, %dec_label_pc_10008b64
  br label %dec_label_pc_10008b88

dec_label_pc_10008bb0:                            ; preds = %dec_label_pc_10008b74
  %v3_10008bb0 = icmp sgt i32 %v1_10008b84, %v2_10008b14
  br i1 %v3_10008bb0, label %dec_label_pc_10008b88, label %dec_label_pc_10008b7c

dec_label_pc_10008bc0:                            ; preds = %dec_label_pc_10008b5c, %dec_label_pc_10008b44
  %v1_10008bc0 = icmp slt i32 %v0_10008b64, 0
  br i1 %v1_10008bc0, label %dec_label_pc_10008bdc, label %dec_label_pc_10008bc8

dec_label_pc_10008bc8:                            ; preds = %dec_label_pc_10008bc0
  %v3_10008bc8 = icmp eq i32 %v0_10008bdc, 0
  %v0_10008bd0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008bc8, i32 %v0_10008bd0)
  %v0_10008bd4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008bd4 = sub i32 0, %v0_10008bd4
  ret i32 %v1_10008bd4

dec_label_pc_10008bdc:                            ; preds = %dec_label_pc_10008bc0
  %v1_10008bdc = xor i32 %v0_10008bdc, 1
  %v2_10008be4 = sub nuw i32 -2147483648, %v1_10008bdc
  ret i32 %v2_10008be4

dec_label_pc_10008bec:                            ; preds = %dec_label_pc_10008af0
  %v1_10008bec = inttoptr i32 %v1_10008ac4 to i8*
  %v2_10008bec = load i8, i8* %v1_10008bec, align 1
  %v1_10008bf0 = add i32 %v0_10008ac0, 2
  br label %dec_label_pc_10008af8

; uselistorder directives
  uselistorder i32 %v2_10008b84, { 1, 0, 2 }
  uselistorder i32 %v1_10008b84, { 1, 0, 2 }
  uselistorder i32 %v1_10008b58, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10008b7c, { 2, 0, 1 }
  uselistorder i32 %v0_10008b88, { 1, 0 }
  uselistorder i32 %v2_10008b04, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10008ac4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008ac0, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 208, { 1, 0, 2, 3 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 1, 8, 11, 12, 13, 14, 15, 16, 9 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10008b5c, { 1, 0 }
  uselistorder label %dec_label_pc_10008b58, { 1, 0 }
  uselistorder label %dec_label_pc_10008af8, { 1, 0 }
}

define i32 @function_10008bf8(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008bf8:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10008c24 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10008c2c

dec_label_pc_10008c2c:                            ; preds = %dec_label_pc_10008c58.dec_label_pc_10008c2c_crit_edge, %dec_label_pc_10008bf8
  %v0_10008c30 = phi i32 [ %v0_10008c30.pre, %dec_label_pc_10008c58.dec_label_pc_10008c2c_crit_edge ], [ %arg3, %dec_label_pc_10008bf8 ]
  %v0_10008c2c = phi i32 [ %v1_10008c44, %dec_label_pc_10008c58.dec_label_pc_10008c2c_crit_edge ], [ %tmp, %dec_label_pc_10008bf8 ]
  store i32 1, i32* @r5, align 4
  store i32 268471356, i32* @lr, align 4
  %v4_10008c38 = call i32 @function_10009390(i32 %v0_10008c30, i32 %v0_10008c2c, i32 1)
  %v0_10008c3c = load i32, i32* @r31, align 4
  %v3_10008c40 = icmp eq i32 %v4_10008c38, 1
  %v1_10008c44 = add i32 %v0_10008c3c, 1
  store i32 %v1_10008c44, i32* @r31, align 4
  %v0_10008c4c = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10008c40, label %dec_label_pc_10008c4c, label %dec_label_pc_10008c64

dec_label_pc_10008c4c:                            ; preds = %dec_label_pc_10008c2c
  %v1_10008c4c = add i32 %v0_10008c4c, 1
  store i32 %v1_10008c4c, i32* %r30.global-to-local, align 4
  %v0_10008c50 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008c50 = icmp sgt i32 %v0_10008c50, %v1_10008c4c
  br i1 %v3_10008c50, label %dec_label_pc_10008c58, label %dec_label_pc_10008c64

dec_label_pc_10008c58:                            ; preds = %dec_label_pc_10008c4c
  %v1_10008c58 = inttoptr i32 %v0_10008c3c to i8*
  %v2_10008c58 = load i8, i8* %v1_10008c58, align 1
  %v3_10008c5c = icmp eq i8 %v2_10008c58, 10
  br i1 %v3_10008c5c, label %dec_label_pc_10008c64, label %dec_label_pc_10008c58.dec_label_pc_10008c2c_crit_edge

dec_label_pc_10008c58.dec_label_pc_10008c2c_crit_edge: ; preds = %dec_label_pc_10008c58
  %v0_10008c30.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008c2c

dec_label_pc_10008c64:                            ; preds = %dec_label_pc_10008c2c, %dec_label_pc_10008c58, %dec_label_pc_10008c4c
  %v1_10008c6c = phi i32 [ %v1_10008c4c, %dec_label_pc_10008c58 ], [ %v1_10008c4c, %dec_label_pc_10008c4c ], [ %v0_10008c4c, %dec_label_pc_10008c2c ]
  %tmp12 = icmp slt i32 %v1_10008c6c, 0
  %v1_10008c64 = zext i1 %tmp12 to i32
  %v2_10008c64 = ashr i32 %v1_10008c6c, 31
  %v3_10008c64 = and i32 %v2_10008c64, -2
  %v4_10008c64 = or i32 %v3_10008c64, %v1_10008c64
  %v2_10008c6c = xor i32 %v4_10008c64, %v1_10008c6c
  %v2_10008c74 = sub i32 %v4_10008c64, %v2_10008c6c
  %tmp13 = icmp slt i32 %v2_10008c74, 0
  %v1_10008c7c = zext i1 %tmp13 to i32
  %v2_10008c7c = ashr i32 %v2_10008c74, 31
  %v3_10008c7c = and i32 %v2_10008c7c, -2
  %v4_10008c7c = or i32 %v3_10008c7c, %v1_10008c7c
  %v0_10008c84 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008c84 = and i32 %v4_10008c7c, %v0_10008c84
  store i32 %v0_10008c24, i32* @r31, align 4
  ret i32 %v2_10008c84

; uselistorder directives
  uselistorder i32 %v2_10008c74, { 1, 0 }
  uselistorder i32 %v4_10008c64, { 1, 0 }
  uselistorder i32 %v1_10008c6c, { 1, 2, 0 }
  uselistorder i32 %v1_10008c44, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009390, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10008c64, { 1, 2, 0 }
}

define i32 @function_10008c9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008c9c:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_10008cb4 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_10008cbc = call i32 @function_10009874()
  %v2_10008cc8 = inttoptr i32 %v0_10008cbc to i32*
  store i32 0, i32* %v2_10008cc8, align 4
  store i32 268471512, i32* @lr, align 4
  %v3_10008cd4 = call i32 @function_10009ea8(i32 2, i32 2, i32 0)
  store i32 %v3_10008cd4, i32* @r3, align 4
  %v3_10008cdc = icmp eq i32 %v3_10008cd4, -1
  store i32 %v3_10008cd4, i32* @r31, align 4
  br i1 %v3_10008cdc, label %dec_label_pc_10008d2c, label %dec_label_pc_10008cf8

dec_label_pc_10008cf8:                            ; preds = %dec_label_pc_10008c9c
  %v2_10008ca8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268471568, i32* @lr, align 4
  %v0_10008d0c = call i32 @function_10009ca8()
  %v2_10008d14 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008d18 = load i32, i32* @r31, align 4
  store i32 268471584, i32* @lr, align 4
  %v3_10008d1c = call i32 @function_10009cdc(i32 %v0_10008d18, i32 %v2_10008ca8, i32 %v2_10008d14)
  store i32 268471592, i32* @lr, align 4
  %v0_10008d24 = call i32 @function_10009158()
  br label %dec_label_pc_10008d2c

dec_label_pc_10008d2c:                            ; preds = %dec_label_pc_10008c9c, %dec_label_pc_10008cf8
  %v0_10008d2c = phi i32 [ 0, %dec_label_pc_10008c9c ], [ 134744072, %dec_label_pc_10008cf8 ]
  store i32 %v0_10008cb4, i32* @r31, align 4
  ret i32 %v0_10008d2c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 ()* @function_10009ca8, { 10, 9, 7, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009ea8, { 28, 26, 27, 24, 25, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 1, 6, 3, 2, 5, 4 }
  uselistorder label %dec_label_pc_10008d2c, { 1, 0 }
}

define i32 @function_10008d48(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008d48:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_10008d48 = load i8, i8* %tmp, align 1
  %v3_10008d54 = icmp eq i8 %v3_10008d48, 0
  br i1 %v3_10008d54, label %dec_label_pc_10008d6c, label %dec_label_pc_10008d5c

dec_label_pc_10008d5c:                            ; preds = %dec_label_pc_10008d48, %dec_label_pc_10008d5c
  %v0_10008d5c = phi i32 [ %v1_10008d5c, %dec_label_pc_10008d5c ], [ 0, %dec_label_pc_10008d48 ]
  %v1_10008d5c = add i32 %v0_10008d5c, 1
  %v3_10008d60 = add i32 %v1_10008d5c, %arg3
  %v4_10008d60 = inttoptr i32 %v3_10008d60 to i8*
  %v5_10008d60 = load i8, i8* %v4_10008d60, align 1
  %v3_10008d64 = icmp eq i8 %v5_10008d60, 0
  br i1 %v3_10008d64, label %dec_label_pc_10008d6c, label %dec_label_pc_10008d5c

dec_label_pc_10008d6c:                            ; preds = %dec_label_pc_10008d5c, %dec_label_pc_10008d48
  %v0_10008d9c11 = phi i32 [ 0, %dec_label_pc_10008d48 ], [ %v1_10008d5c, %dec_label_pc_10008d5c ]
  %v1_10008d6c = icmp slt i32 %arg2, 0
  %v1_10008d70 = add i32 %arg2, 1
  br i1 %v1_10008d6c, label %dec_label_pc_10008de8, label %dec_label_pc_10008d84

dec_label_pc_10008d84:                            ; preds = %dec_label_pc_10008d6c, %dec_label_pc_10008de8, %dec_label_pc_10008ddc
  %v2_10008d908 = phi i32 [ %v1_10008d94, %dec_label_pc_10008ddc ], [ 0, %dec_label_pc_10008de8 ], [ 0, %dec_label_pc_10008d6c ]
  %v0_10008d886 = phi i32 [ %v1_10008d8c, %dec_label_pc_10008ddc ], [ %tmp16, %dec_label_pc_10008de8 ], [ %tmp16, %dec_label_pc_10008d6c ]
  %v0_10008d84 = phi i32 [ %v0_10008dd0, %dec_label_pc_10008ddc ], [ 1, %dec_label_pc_10008de8 ], [ %v1_10008d70, %dec_label_pc_10008d6c ]
  %v1_10008d84 = add i32 %v0_10008d84, -1
  %v2_10008d84 = icmp eq i32 %v1_10008d84, 0
  br i1 %v2_10008d84, label %dec_label_pc_10008dd4, label %dec_label_pc_10008d88

dec_label_pc_10008d88:                            ; preds = %dec_label_pc_10008d84, %dec_label_pc_10008dcc
  %v2_10008d90 = phi i32 [ 0, %dec_label_pc_10008dcc ], [ %v2_10008d908, %dec_label_pc_10008d84 ]
  %v0_10008d88 = phi i32 [ %v1_10008d8c, %dec_label_pc_10008dcc ], [ %v0_10008d886, %dec_label_pc_10008d84 ]
  %v0_10008dd0 = phi i32 [ %v1_10008dd0, %dec_label_pc_10008dcc ], [ %v1_10008d84, %dec_label_pc_10008d84 ]
  %v1_10008d88 = inttoptr i32 %v0_10008d88 to i8*
  %v2_10008d88 = load i8, i8* %v1_10008d88, align 1
  %v3_10008d88 = zext i8 %v2_10008d88 to i32
  %v1_10008d8c = add i32 %v0_10008d88, 1
  %v3_10008d90 = add i32 %v2_10008d90, %arg3
  %v4_10008d90 = inttoptr i32 %v3_10008d90 to i8*
  %v5_10008d90 = load i8, i8* %v4_10008d90, align 1
  %v6_10008d90 = zext i8 %v5_10008d90 to i32
  %v1_10008d94 = add i32 %v2_10008d90, 1
  %v1_10008d98 = add nuw nsw i32 %v3_10008d88, 191
  %v1_10008da0 = urem i32 %v1_10008d98, 256
  %v2_10008da4 = icmp ugt i32 %v1_10008da0, 25
  %v1_10008da8 = add nuw nsw i32 %v6_10008d90, 191
  %v1_10008dac = urem i32 %v1_10008da8, 256
  %v2_10008db0 = icmp ugt i32 %v1_10008dac, 25
  br i1 %v2_10008da4, label %dec_label_pc_10008dbc, label %dec_label_pc_10008db8

dec_label_pc_10008db8:                            ; preds = %dec_label_pc_10008d88
  %v1_10008db8 = or i32 %v3_10008d88, 96
  br i1 %v2_10008db0, label %dec_label_pc_10008dc4, label %dec_label_pc_10008dc0

dec_label_pc_10008dbc:                            ; preds = %dec_label_pc_10008d88
  br i1 %v2_10008db0, label %dec_label_pc_10008dc4, label %dec_label_pc_10008dc0

dec_label_pc_10008dc0:                            ; preds = %dec_label_pc_10008db8, %dec_label_pc_10008dbc
  %v1_10008dc414 = phi i32 [ %v1_10008db8, %dec_label_pc_10008db8 ], [ %v3_10008d88, %dec_label_pc_10008dbc ]
  %v1_10008dc0 = or i32 %v6_10008d90, 96
  br label %dec_label_pc_10008dc4

dec_label_pc_10008dc4:                            ; preds = %dec_label_pc_10008db8, %dec_label_pc_10008dbc, %dec_label_pc_10008dc0
  %v1_10008dc4 = phi i32 [ %v1_10008db8, %dec_label_pc_10008db8 ], [ %v3_10008d88, %dec_label_pc_10008dbc ], [ %v1_10008dc414, %dec_label_pc_10008dc0 ]
  %v0_10008dc4 = phi i32 [ %v6_10008d90, %dec_label_pc_10008db8 ], [ %v6_10008d90, %dec_label_pc_10008dbc ], [ %v1_10008dc0, %dec_label_pc_10008dc0 ]
  %v4_10008dc4 = icmp eq i32 %v0_10008dc4, %v1_10008dc4
  br i1 %v4_10008dc4, label %dec_label_pc_10008ddc, label %dec_label_pc_10008dcc

dec_label_pc_10008dcc:                            ; preds = %dec_label_pc_10008dc4
  %v1_10008dd0 = add i32 %v0_10008dd0, -1
  %v2_10008dd0 = icmp eq i32 %v1_10008dd0, 0
  br i1 %v2_10008dd0, label %dec_label_pc_10008dd4, label %dec_label_pc_10008d88

dec_label_pc_10008dd4:                            ; preds = %dec_label_pc_10008d84, %dec_label_pc_10008dcc
  ret i32 -1

dec_label_pc_10008ddc:                            ; preds = %dec_label_pc_10008dc4
  %v4_10008d9c.le = icmp eq i32 %v0_10008d9c11, %v1_10008d94
  br i1 %v4_10008d9c.le, label %dec_label_pc_10008de0, label %dec_label_pc_10008d84

dec_label_pc_10008de0:                            ; preds = %dec_label_pc_10008ddc
  %v2_10008de0 = sub i32 %v1_10008d8c, %tmp16
  ret i32 %v2_10008de0

dec_label_pc_10008de8:                            ; preds = %dec_label_pc_10008d6c
  br label %dec_label_pc_10008d84

; uselistorder directives
  uselistorder i32 %v1_10008dd0, { 1, 0 }
  uselistorder i32 %v1_10008db8, { 1, 0 }
  uselistorder i1 %v2_10008db0, { 1, 0 }
  uselistorder i32 %v1_10008d94, { 1, 0 }
  uselistorder i32 %v3_10008d88, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10008dd0, { 1, 0 }
  uselistorder i32 %v0_10008d88, { 1, 0 }
  uselistorder i32 %v2_10008d90, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 25, { 7, 8, 11, 4, 9, 5, 10, 0, 1, 6, 2, 3 }
  uselistorder i32 191, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10008dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10008dc4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008dc0, { 1, 0 }
  uselistorder label %dec_label_pc_10008d88, { 1, 0 }
  uselistorder label %dec_label_pc_10008d84, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008d5c, { 1, 0 }
}

define i32 @function_10008df4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008df4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10008df4 = load i8, i8* %arg1, align 1
  %v3_10008dfc = icmp eq i8 %v2_10008df4, 0
  br i1 %v3_10008dfc, label %dec_label_pc_10008e14, label %dec_label_pc_10008e04

dec_label_pc_10008e04:                            ; preds = %dec_label_pc_10008df4, %dec_label_pc_10008e04
  %v0_10008e04 = phi i32 [ %v1_10008e04, %dec_label_pc_10008e04 ], [ 0, %dec_label_pc_10008df4 ]
  %v1_10008e04 = add i32 %v0_10008e04, 1
  %v2_10008e08 = add i32 %v1_10008e04, %tmp
  %v3_10008e08 = inttoptr i32 %v2_10008e08 to i8*
  %v4_10008e08 = load i8, i8* %v3_10008e08, align 1
  %v3_10008e0c = icmp eq i8 %v4_10008e08, 0
  br i1 %v3_10008e0c, label %dec_label_pc_10008e14, label %dec_label_pc_10008e04

dec_label_pc_10008e14:                            ; preds = %dec_label_pc_10008e04, %dec_label_pc_10008df4
  %v0_10008e34 = phi i32 [ 0, %dec_label_pc_10008df4 ], [ %v1_10008e04, %dec_label_pc_10008e04 ]
  %v1_10008e14 = inttoptr i32 %arg2 to i8*
  %v2_10008e14 = load i8, i8* %v1_10008e14, align 1
  %v3_10008e1c = icmp eq i8 %v2_10008e14, 0
  br i1 %v3_10008e1c, label %dec_label_pc_10008e34, label %dec_label_pc_10008e24

dec_label_pc_10008e24:                            ; preds = %dec_label_pc_10008e14, %dec_label_pc_10008e24
  %v0_10008e24 = phi i32 [ %v1_10008e24, %dec_label_pc_10008e24 ], [ 0, %dec_label_pc_10008e14 ]
  %v1_10008e24 = add i32 %v0_10008e24, 1
  %v2_10008e28 = add i32 %v1_10008e24, %arg2
  %v3_10008e28 = inttoptr i32 %v2_10008e28 to i8*
  %v4_10008e28 = load i8, i8* %v3_10008e28, align 1
  %v3_10008e2c = icmp eq i8 %v4_10008e28, 0
  br i1 %v3_10008e2c, label %dec_label_pc_10008e34, label %dec_label_pc_10008e24

dec_label_pc_10008e34:                            ; preds = %dec_label_pc_10008e24, %dec_label_pc_10008e14
  %v0_10008e38 = phi i32 [ 0, %dec_label_pc_10008e14 ], [ %v1_10008e24, %dec_label_pc_10008e24 ]
  %v4_10008e34 = icmp eq i32 %v0_10008e34, %v0_10008e38
  br i1 %v4_10008e34, label %dec_label_pc_10008e4c, label %dec_label_pc_10008e44

dec_label_pc_10008e44:                            ; preds = %dec_label_pc_10008e50, %dec_label_pc_10008e34
  ret i32 0

dec_label_pc_10008e4c:                            ; preds = %dec_label_pc_10008e34
  %v2_10008e4c = icmp eq i32 %v0_10008e34, 0
  br i1 %v2_10008e4c, label %dec_label_pc_10008e6c, label %dec_label_pc_10008e50

dec_label_pc_10008e50:                            ; preds = %dec_label_pc_10008e4c, %dec_label_pc_10008e68
  %v0_10008e68 = phi i32 [ %v1_10008e68, %dec_label_pc_10008e68 ], [ %v0_10008e34, %dec_label_pc_10008e4c ]
  %v0_10008e58 = phi i32 [ %v1_10008e5c, %dec_label_pc_10008e68 ], [ %arg2, %dec_label_pc_10008e4c ]
  %v0_10008e50 = phi i32 [ %v1_10008e54, %dec_label_pc_10008e68 ], [ %tmp, %dec_label_pc_10008e4c ]
  %v1_10008e50 = inttoptr i32 %v0_10008e50 to i8*
  %v2_10008e50 = load i8, i8* %v1_10008e50, align 1
  %v1_10008e58 = inttoptr i32 %v0_10008e58 to i8*
  %v2_10008e58 = load i8, i8* %v1_10008e58, align 1
  %v4_10008e60 = icmp eq i8 %v2_10008e50, %v2_10008e58
  br i1 %v4_10008e60, label %dec_label_pc_10008e68, label %dec_label_pc_10008e44

dec_label_pc_10008e68:                            ; preds = %dec_label_pc_10008e50
  %v1_10008e5c = add i32 %v0_10008e58, 1
  %v1_10008e54 = add i32 %v0_10008e50, 1
  %v1_10008e68 = add i32 %v0_10008e68, -1
  %v2_10008e68 = icmp eq i32 %v1_10008e68, 0
  br i1 %v2_10008e68, label %dec_label_pc_10008e6c, label %dec_label_pc_10008e50

dec_label_pc_10008e6c:                            ; preds = %dec_label_pc_10008e68, %dec_label_pc_10008e4c
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10008e68, { 1, 0 }
  uselistorder i32 %v0_10008e50, { 1, 0 }
  uselistorder i32 %v0_10008e58, { 1, 0 }
  uselistorder label %dec_label_pc_10008e50, { 1, 0 }
  uselistorder label %dec_label_pc_10008e24, { 1, 0 }
  uselistorder label %dec_label_pc_10008e04, { 1, 0 }
}

define i32 @function_10008e74(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008e74:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008e74 = icmp eq i32 %arg3, 0
  %v4_10008e78 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008e78, i32* %stack_var_-64, align 4
  %v5_10008e78 = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10008e74, label %dec_label_pc_10008e94, label %dec_label_pc_10008e80

dec_label_pc_10008e80:                            ; preds = %dec_label_pc_10008e74
  %v0_10008e80 = load i32, i32* %r3.global-to-local, align 4
  %v3_10008e80 = icmp eq i32 %v0_10008e80, 0
  store i1 %v3_10008e80, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10008e80, label %dec_label_pc_10008e88, label %dec_label_pc_10008ea0

dec_label_pc_10008e88:                            ; preds = %dec_label_pc_10008e80
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10008e8c = add i32 %arg3, 1
  %v5_10008e8c = inttoptr i32 %v4_10008e8c to i8*
  store i8 0, i8* %v5_10008e8c, align 1
  %v0_10008e90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008e90 = trunc i32 %v0_10008e90 to i8
  store i8 %v1_10008e90, i8* %tmp, align 1
  br label %dec_label_pc_10008e94

dec_label_pc_10008e94:                            ; preds = %dec_label_pc_10008f20, %dec_label_pc_10008e74, %dec_label_pc_10008e88
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008ea0:                            ; preds = %dec_label_pc_10008e80
  %v2_10008e80 = icmp sgt i32 %v0_10008e80, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10008ea0.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10008e80, %v3_10008ea0.not
  br i1 %brmerge, label %dec_label_pc_10008eb4, label %dec_label_pc_10008f68

dec_label_pc_10008eb4:                            ; preds = %dec_label_pc_10008ea0, %dec_label_pc_10008f68
  %v0_10008eb82 = phi i32 [ %v0_10008e80, %dec_label_pc_10008ea0 ], [ %v1_10008f68, %dec_label_pc_10008f68 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10008ea0 ], [ 1, %dec_label_pc_10008f68 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008eb8

dec_label_pc_10008eb8:                            ; preds = %dec_label_pc_10008ee4.dec_label_pc_10008eb8_crit_edge, %dec_label_pc_10008eb4
  %v1_10008ebc = phi i32 [ %v1_10008ebc.pre, %dec_label_pc_10008ee4.dec_label_pc_10008eb8_crit_edge ], [ 32, %dec_label_pc_10008eb4 ]
  %v0_10008ebc = phi i32 [ %v0_10008ebc.pre, %dec_label_pc_10008ee4.dec_label_pc_10008eb8_crit_edge ], [ %v5_10008e78, %dec_label_pc_10008eb4 ]
  %v1_10008ecc = phi i32 [ %v0_10008eb8.pre, %dec_label_pc_10008ee4.dec_label_pc_10008eb8_crit_edge ], [ %v0_10008eb82, %dec_label_pc_10008eb4 ]
  %v2_10008eb8 = udiv i32 %v1_10008ecc, %arg2
  %v2_10008ebc = add i32 %v0_10008ebc, %v1_10008ebc
  store i32 %v2_10008ebc, i32* %r11.global-to-local, align 4
  %v1_10008ec0 = add i32 %v1_10008ebc, -1
  store i32 %v1_10008ec0, i32* %r10.global-to-local, align 4
  %v2_10008ec4 = mul i32 %v2_10008eb8, %arg2
  %v3_10008ec8 = icmp ult i32 %v1_10008ecc, %arg2
  store i1 %v3_10008ec8, i1* %cr6_eq.global-to-local, align 1
  %v2_10008ecc = sub i32 %v1_10008ecc, %v2_10008ec4
  store i32 %v2_10008ecc, i32* %r9.global-to-local, align 4
  store i32 %v2_10008eb8, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_10008ecc, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_10008ecc
  %v0_10008ee4.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_10008ee4 = add i32 %v2_10008ebc, 8
  %v4_10008ee4 = inttoptr i32 %v3_10008ee4 to i8*
  store i8 %v0_10008ee4.off0, i8* %v4_10008ee4, align 1
  %v0_10008ee8 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10008ee8, label %dec_label_pc_10008eec, label %dec_label_pc_10008ee4.dec_label_pc_10008eb8_crit_edge

dec_label_pc_10008ee4.dec_label_pc_10008eb8_crit_edge: ; preds = %dec_label_pc_10008eb8
  %v0_10008eb8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10008ebc.pre = load i32, i32* @r1, align 4
  %v1_10008ebc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008eb8

dec_label_pc_10008eec:                            ; preds = %dec_label_pc_10008eb8
  %v0_10008eec = load i32, i32* %r8.global-to-local, align 4
  %v3_10008eec = icmp eq i32 %v0_10008eec, 0
  br i1 %v3_10008eec, label %dec_label_pc_10008ef4, label %dec_label_pc_10008f54

dec_label_pc_10008ef4:                            ; preds = %dec_label_pc_10008eec
  %v0_10008ef4 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008ef4 = add i32 %v0_10008ef4, 1
  store i32 %v1_10008ef4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008ef8

dec_label_pc_10008ef8:                            ; preds = %dec_label_pc_10008f54, %dec_label_pc_10008ef4
  %v1_10008f00 = phi i32 [ %v1_10008efc.pre, %dec_label_pc_10008f54 ], [ %v1_10008ef4, %dec_label_pc_10008ef4 ]
  %v2_10008ef8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10008ef8, i32* %r9.global-to-local, align 4
  %v2_10008efc = add i32 %v1_10008f00, %v2_10008ef8
  %v3_10008efc = inttoptr i32 %v2_10008efc to i8*
  %v4_10008efc = load i8, i8* %v3_10008efc, align 1
  %v5_10008efc = zext i8 %v4_10008efc to i32
  store i32 %v5_10008efc, i32* %r0.global-to-local, align 4
  store i32 %v2_10008efc, i32* %r9.global-to-local, align 4
  %v3_10008f04 = icmp eq i8 %v4_10008efc, 0
  br i1 %v3_10008f04, label %dec_label_pc_10008f7c, label %dec_label_pc_10008f0c

dec_label_pc_10008f0c:                            ; preds = %dec_label_pc_10008ef8
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008f10

dec_label_pc_10008f10:                            ; preds = %dec_label_pc_10008f10, %dec_label_pc_10008f0c
  %v0_10008f10 = phi i32 [ %v1_10008f10, %dec_label_pc_10008f10 ], [ 0, %dec_label_pc_10008f0c ]
  %v1_10008f10 = add i32 %v0_10008f10, 1
  store i32 %v1_10008f10, i32* %r10.global-to-local, align 4
  %v2_10008f14 = add i32 %v1_10008f10, %v2_10008efc
  %v3_10008f14 = inttoptr i32 %v2_10008f14 to i8*
  %v4_10008f14 = load i8, i8* %v3_10008f14, align 1
  %v5_10008f14 = zext i8 %v4_10008f14 to i32
  store i32 %v5_10008f14, i32* %r0.global-to-local, align 4
  %v3_10008f18 = icmp eq i8 %v4_10008f14, 0
  br i1 %v3_10008f18, label %dec_label_pc_10008f20, label %dec_label_pc_10008f10

dec_label_pc_10008f20:                            ; preds = %dec_label_pc_10008f10
  %v3_10008f20 = icmp eq i32 %v1_10008f10, -1
  br i1 %v3_10008f20, label %dec_label_pc_10008e94, label %dec_label_pc_10008f28

dec_label_pc_10008f28:                            ; preds = %dec_label_pc_10008f20
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10008f10, 2
  br label %dec_label_pc_10008f2c

dec_label_pc_10008f2c:                            ; preds = %dec_label_pc_10008f7c, %dec_label_pc_10008f28
  %v0_10008f2c = phi i32 [ 1, %dec_label_pc_10008f7c ], [ %phitmp, %dec_label_pc_10008f28 ]
  store i32 %v0_10008f2c, i32* %r10.global-to-local, align 4
  store i32 %v0_10008f2c, i32* %ctr.global-to-local, align 4
  %v2_10008f3424 = load i8, i8* %v3_10008efc, align 1
  %v3_10008f3425 = zext i8 %v2_10008f3424 to i32
  store i32 %v3_10008f3425, i32* %r0.global-to-local, align 4
  %v1_10008f3826 = add i32 %v2_10008efc, 1
  store i32 %v1_10008f3826, i32* %r9.global-to-local, align 4
  store i8 %v2_10008f3424, i8* %tmp, align 1
  %v0_10008f4028 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008f4029 = add i32 %v0_10008f4028, 1
  store i32 %v1_10008f4029, i32* %r11.global-to-local, align 4
  %v0_10008f4430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008f4431 = add i32 %v0_10008f4430, -1
  store i32 %v1_10008f4431, i32* %ctr.global-to-local, align 4
  %v2_10008f4432 = icmp eq i32 %v1_10008f4431, 0
  br i1 %v2_10008f4432, label %dec_label_pc_10008f48, label %dec_label_pc_10008f34.dec_label_pc_10008f34_crit_edge

dec_label_pc_10008f34.dec_label_pc_10008f34_crit_edge: ; preds = %dec_label_pc_10008f2c, %dec_label_pc_10008f34.dec_label_pc_10008f34_crit_edge
  %v1_10008f4033 = phi i32 [ %v1_10008f40, %dec_label_pc_10008f34.dec_label_pc_10008f34_crit_edge ], [ %v1_10008f4029, %dec_label_pc_10008f2c ]
  %v0_10008f34.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10008f34 = inttoptr i32 %v0_10008f34.pre to i8*
  %v2_10008f34 = load i8, i8* %v1_10008f34, align 1
  %v3_10008f34 = zext i8 %v2_10008f34 to i32
  store i32 %v3_10008f34, i32* %r0.global-to-local, align 4
  %v1_10008f38 = add i32 %v0_10008f34.pre, 1
  store i32 %v1_10008f38, i32* %r9.global-to-local, align 4
  %v3_10008f3c = inttoptr i32 %v1_10008f4033 to i8*
  store i8 %v2_10008f34, i8* %v3_10008f3c, align 1
  %v0_10008f40 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008f40 = add i32 %v0_10008f40, 1
  store i32 %v1_10008f40, i32* %r11.global-to-local, align 4
  %v0_10008f44 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008f44 = add i32 %v0_10008f44, -1
  store i32 %v1_10008f44, i32* %ctr.global-to-local, align 4
  %v2_10008f44 = icmp eq i32 %v1_10008f44, 0
  br i1 %v2_10008f44, label %dec_label_pc_10008f48, label %dec_label_pc_10008f34.dec_label_pc_10008f34_crit_edge

dec_label_pc_10008f48:                            ; preds = %dec_label_pc_10008f34.dec_label_pc_10008f34_crit_edge, %dec_label_pc_10008f2c
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10008f54:                            ; preds = %dec_label_pc_10008eec
  %v0_10008f54.pre = load i32, i32* @r1, align 4
  %v1_10008f54.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008f54 = add i32 %v1_10008f54.pre, %v0_10008f54.pre
  store i32 %v2_10008f54, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10008f5c = add i32 %v2_10008f54, 8
  %v4_10008f5c = inttoptr i32 %v3_10008f5c to i8*
  store i8 45, i8* %v4_10008f5c, align 1
  %v1_10008efc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008ef8

dec_label_pc_10008f68:                            ; preds = %dec_label_pc_10008ea0
  %v1_10008f68 = sub i32 0, %v0_10008e80
  store i32 %v1_10008f68, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008eb4

dec_label_pc_10008f7c:                            ; preds = %dec_label_pc_10008ef8
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008f2c

; uselistorder directives
  uselistorder i32 %v1_10008f68, { 1, 0 }
  uselistorder i32 %v1_10008f44, { 1, 0 }
  uselistorder i32 %v1_10008f40, { 1, 0 }
  uselistorder i32 %v0_10008f2c, { 1, 0 }
  uselistorder i32 %v1_10008f10, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10008eb8, { 1, 0 }
  uselistorder i32 %v1_10008ecc, { 1, 0, 2 }
  uselistorder i32 %v1_10008ebc, { 1, 0 }
  uselistorder i32 %v0_10008e80, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 8, 7, 2, 3, 5, 4, 9, 6, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10008f34.dec_label_pc_10008f34_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10008e94, { 0, 2, 1 }
}

define i32 @function_10008f88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008f88:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_10008f98 = icmp eq i32 %arg2, -2143521772
  %v2_10008fac = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008fac, i32* %stack_var_-32, align 4
  br i1 %v4_10008f98, label %dec_label_pc_1000900c, label %dec_label_pc_10008fcc

dec_label_pc_10008fcc:                            ; preds = %dec_label_pc_10008f88
  %v3_10008fcc = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10008fcc, label %dec_label_pc_10008fe4, label %dec_label_pc_10008fd4

dec_label_pc_10008fd4:                            ; preds = %dec_label_pc_10008fcc
  %v3_10008fd8 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10008fd8, label %dec_label_pc_10009000, label %dec_label_pc_1000902c

dec_label_pc_10008fe4:                            ; preds = %dec_label_pc_10008fcc
  %v1_10008fe4 = xor i32 %arg2, -2143551488
  %v3_10008fe8 = icmp eq i32 %v1_10008fe4, 29717
  br i1 %v3_10008fe8, label %dec_label_pc_1000901c, label %dec_label_pc_10008ff0

dec_label_pc_10008ff0:                            ; preds = %dec_label_pc_10008fe4
  %v3_10008ff4 = icmp eq i32 %v1_10008fe4, 29718
  br i1 %v3_10008ff4, label %dec_label_pc_10009024, label %dec_label_pc_1000902c

dec_label_pc_10009000:                            ; preds = %dec_label_pc_10008fd4
  store i32 ptrtoint (i32* @global_var_10009008.329 to i32), i32* @lr, align 4
  %v2_10009004 = inttoptr i32 %arg3 to i32*
  %v3_10009004 = call i32 @function_10009a0c(i32* %v2_10009004, i32 %arg1)
  br label %dec_label_pc_10009014

dec_label_pc_1000900c:                            ; preds = %dec_label_pc_10008f88
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10009010

dec_label_pc_10009010:                            ; preds = %dec_label_pc_10009024, %dec_label_pc_1000901c, %dec_label_pc_1000900c
  store i32 268472340, i32* @lr, align 4
  %v0_10009010 = call i32 @function_10009aa8()
  br label %dec_label_pc_10009014

dec_label_pc_10009014:                            ; preds = %dec_label_pc_10009000, %dec_label_pc_10009010
  %storemerge = phi i32 [ %v0_10009010, %dec_label_pc_10009010 ], [ %v3_10009004, %dec_label_pc_10009000 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009058

dec_label_pc_1000901c:                            ; preds = %dec_label_pc_10008fe4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10009010

dec_label_pc_10009024:                            ; preds = %dec_label_pc_10008ff0
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10009010

dec_label_pc_1000902c:                            ; preds = %dec_label_pc_10008ff0, %dec_label_pc_10008fd4
  %v0_1000903c = call i32 @__asm_mfcr()
  %v1_10009040 = and i32 %v0_1000903c, 268435456
  %v3_10009040 = icmp eq i32 %v1_10009040, 0
  store i32 %v0_1000903c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009040, label %dec_label_pc_10009058, label %dec_label_pc_1000904c

dec_label_pc_1000904c:                            ; preds = %dec_label_pc_1000902c
  %v0_1000904c = call i32 @function_10009874()
  %v0_10009050 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009050 = inttoptr i32 %v0_1000904c to i32*
  store i32 %v0_10009050, i32* %v2_10009050, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009058

dec_label_pc_10009058:                            ; preds = %dec_label_pc_1000902c, %dec_label_pc_10009014, %dec_label_pc_1000904c
  %v0_1000905c = phi i32 [ %v0_1000903c, %dec_label_pc_1000902c ], [ %storemerge, %dec_label_pc_10009014 ], [ -1, %dec_label_pc_1000904c ]
  ret i32 %v0_1000905c

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10009058, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009014, { 1, 0 }
}

define i32 @function_10009070(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009070:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10009084 = load i32, i32* @r4, align 4
  %v1_10009084 = add i32 %v0_10009084, -12
  %v2_10009088 = icmp ugt i32 %v1_10009084, 2
  %v2_10009090 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009090, i32* %stack_var_-32, align 4
  br i1 %v2_10009088, label %dec_label_pc_100090bc, label %dec_label_pc_100090ac

dec_label_pc_100090ac:                            ; preds = %dec_label_pc_10009070
  store i32 268472500, i32* @lr, align 4
  %v2_100090b0 = call i32 @function_100090f4(i32 3)
  store i32 %v2_100090b0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100090dc

dec_label_pc_100090bc:                            ; preds = %dec_label_pc_10009070
  %v0_100090c0 = call i32 @__asm_mfcr()
  %v1_100090c4 = and i32 %v0_100090c0, 268435456
  %v3_100090c4 = icmp eq i32 %v1_100090c4, 0
  store i32 %v0_100090c0, i32* %r31.global-to-local, align 4
  br i1 %v3_100090c4, label %dec_label_pc_100090dc, label %dec_label_pc_100090d0

dec_label_pc_100090d0:                            ; preds = %dec_label_pc_100090bc
  %v0_100090d0 = call i32 @function_10009874()
  %v0_100090d4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100090d4 = inttoptr i32 %v0_100090d0 to i32*
  store i32 %v0_100090d4, i32* %v2_100090d4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100090dc

dec_label_pc_100090dc:                            ; preds = %dec_label_pc_100090bc, %dec_label_pc_100090ac, %dec_label_pc_100090d0
  %v0_100090e0 = phi i32 [ %v0_100090c0, %dec_label_pc_100090bc ], [ %v2_100090b0, %dec_label_pc_100090ac ], [ -1, %dec_label_pc_100090d0 ]
  ret i32 %v0_100090e0

; uselistorder directives
  uselistorder label %dec_label_pc_100090dc, { 2, 0, 1 }
}

define i32 @function_100090f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100090f4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000910c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000910c, i32* %stack_var_-32, align 4
  %v0_10009128 = call i32 @__asm_mfcr()
  %v1_1000912c = and i32 %v0_10009128, 268435456
  %v3_1000912c = icmp eq i32 %v1_1000912c, 0
  store i32 %v0_10009128, i32* %r31.global-to-local, align 4
  br i1 %v3_1000912c, label %dec_label_pc_10009144, label %dec_label_pc_10009138

dec_label_pc_10009138:                            ; preds = %dec_label_pc_100090f4
  %v0_10009138 = call i32 @function_10009874()
  %v0_1000913c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000913c = inttoptr i32 %v0_10009138 to i32*
  store i32 %v0_1000913c, i32* %v2_1000913c, align 4
  br label %dec_label_pc_10009144

dec_label_pc_10009144:                            ; preds = %dec_label_pc_100090f4, %dec_label_pc_10009138
  %v0_10009154 = phi i32 [ %v0_10009128, %dec_label_pc_100090f4 ], [ -1, %dec_label_pc_10009138 ]
  ret i32 %v0_10009154

; uselistorder directives
  uselistorder label %dec_label_pc_10009144, { 1, 0 }
}

define i32 @function_10009158() local_unnamed_addr {
dec_label_pc_10009158:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009170 = call i32 @__asm_mfcr()
  %v1_10009174 = and i32 %v0_10009170, 268435456
  %v3_10009174 = icmp eq i32 %v1_10009174, 0
  store i32 %v0_10009170, i32* %r31.global-to-local, align 4
  br i1 %v3_10009174, label %dec_label_pc_1000918c, label %dec_label_pc_10009180

dec_label_pc_10009180:                            ; preds = %dec_label_pc_10009158
  %v0_10009180 = call i32 @function_10009874()
  %v0_10009184 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009184 = inttoptr i32 %v0_10009180 to i32*
  store i32 %v0_10009184, i32* %v2_10009184, align 4
  br label %dec_label_pc_1000918c

dec_label_pc_1000918c:                            ; preds = %dec_label_pc_10009158, %dec_label_pc_10009180
  %v0_1000919c = phi i32 [ %v0_10009170, %dec_label_pc_10009158 ], [ -1, %dec_label_pc_10009180 ]
  ret i32 %v0_1000919c

; uselistorder directives
  uselistorder label %dec_label_pc_1000918c, { 1, 0 }
}

define i32 @function_100091a0() local_unnamed_addr {
dec_label_pc_100091a0:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091b8 = call i32 @__asm_mfcr()
  %v1_100091bc = and i32 %v0_100091b8, 268435456
  %v3_100091bc = icmp eq i32 %v1_100091bc, 0
  store i32 %v0_100091b8, i32* %r31.global-to-local, align 4
  br i1 %v3_100091bc, label %dec_label_pc_100091d4, label %dec_label_pc_100091c8

dec_label_pc_100091c8:                            ; preds = %dec_label_pc_100091a0
  %v0_100091c8 = call i32 @function_10009874()
  %v0_100091cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100091cc = inttoptr i32 %v0_100091c8 to i32*
  store i32 %v0_100091cc, i32* %v2_100091cc, align 4
  br label %dec_label_pc_100091d4

dec_label_pc_100091d4:                            ; preds = %dec_label_pc_100091a0, %dec_label_pc_100091c8
  %v0_100091e4 = phi i32 [ %v0_100091b8, %dec_label_pc_100091a0 ], [ -1, %dec_label_pc_100091c8 ]
  ret i32 %v0_100091e4

; uselistorder directives
  uselistorder label %dec_label_pc_100091d4, { 1, 0 }
}

define i32 @function_100091e8() local_unnamed_addr {
dec_label_pc_100091e8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009200 = call i32 @__asm_mfcr()
  %v1_10009204 = and i32 %v0_10009200, 268435456
  %v3_10009204 = icmp eq i32 %v1_10009204, 0
  store i32 %v0_10009200, i32* %r31.global-to-local, align 4
  br i1 %v3_10009204, label %dec_label_pc_1000921c, label %dec_label_pc_10009210

dec_label_pc_10009210:                            ; preds = %dec_label_pc_100091e8
  %v0_10009210 = call i32 @function_10009874()
  %v0_10009214 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009214 = inttoptr i32 %v0_10009210 to i32*
  store i32 %v0_10009214, i32* %v2_10009214, align 4
  br label %dec_label_pc_1000921c

dec_label_pc_1000921c:                            ; preds = %dec_label_pc_100091e8, %dec_label_pc_10009210
  %v0_1000922c = phi i32 [ %v0_10009200, %dec_label_pc_100091e8 ], [ -1, %dec_label_pc_10009210 ]
  ret i32 %v0_1000922c

; uselistorder directives
  uselistorder label %dec_label_pc_1000921c, { 1, 0 }
}

define i32 @function_10009230() local_unnamed_addr {
dec_label_pc_10009230:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009248 = call i32 @__asm_mfcr()
  %v1_1000924c = and i32 %v0_10009248, 268435456
  %v3_1000924c = icmp eq i32 %v1_1000924c, 0
  store i32 %v0_10009248, i32* %r31.global-to-local, align 4
  br i1 %v3_1000924c, label %dec_label_pc_10009264, label %dec_label_pc_10009258

dec_label_pc_10009258:                            ; preds = %dec_label_pc_10009230
  %v0_10009258 = call i32 @function_10009874()
  %v0_1000925c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000925c = inttoptr i32 %v0_10009258 to i32*
  store i32 %v0_1000925c, i32* %v2_1000925c, align 4
  br label %dec_label_pc_10009264

dec_label_pc_10009264:                            ; preds = %dec_label_pc_10009230, %dec_label_pc_10009258
  %v0_10009274 = phi i32 [ %v0_10009248, %dec_label_pc_10009230 ], [ -1, %dec_label_pc_10009258 ]
  ret i32 %v0_10009274

; uselistorder directives
  uselistorder label %dec_label_pc_10009264, { 1, 0 }
}

define i32 @function_10009278(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009278:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009290 = call i32 @__asm_mfcr()
  %v1_10009294 = and i32 %v0_10009290, 268435456
  %v3_10009294 = icmp eq i32 %v1_10009294, 0
  store i32 %v0_10009290, i32* %r31.global-to-local, align 4
  br i1 %v3_10009294, label %dec_label_pc_100092ac, label %dec_label_pc_100092a0

dec_label_pc_100092a0:                            ; preds = %dec_label_pc_10009278
  %v0_100092a0 = call i32 @function_10009874()
  %v0_100092a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100092a4 = inttoptr i32 %v0_100092a0 to i32*
  store i32 %v0_100092a4, i32* %v2_100092a4, align 4
  br label %dec_label_pc_100092ac

dec_label_pc_100092ac:                            ; preds = %dec_label_pc_10009278, %dec_label_pc_100092a0
  %v0_100092bc = phi i32 [ %v0_10009290, %dec_label_pc_10009278 ], [ -1, %dec_label_pc_100092a0 ]
  ret i32 %v0_100092bc

; uselistorder directives
  uselistorder label %dec_label_pc_100092ac, { 1, 0 }
}

define i32 @function_100092c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100092c0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100092d4 = and i32 %arg2, 64
  %v3_100092d4 = icmp eq i32 %v1_100092d4, 0
  br i1 %v3_100092d4, label %dec_label_pc_10009300, label %dec_label_pc_100092e4

dec_label_pc_100092e4:                            ; preds = %dec_label_pc_100092c0
  %v2_100092ec = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100092ec, i32* %stack_var_-32, align 4
  %v0_100092fc = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009300

dec_label_pc_10009300:                            ; preds = %dec_label_pc_100092c0, %dec_label_pc_100092e4
  %v0_10009300 = phi i32 [ 0, %dec_label_pc_100092c0 ], [ %v0_100092fc, %dec_label_pc_100092e4 ]
  store i32 %v0_10009300, i32* @r5, align 4
  %v0_10009308 = call i32 @__asm_mfcr()
  %v1_1000930c = and i32 %v0_10009308, 268435456
  %v3_1000930c = icmp eq i32 %v1_1000930c, 0
  store i32 %v0_10009308, i32* %r31.global-to-local, align 4
  br i1 %v3_1000930c, label %dec_label_pc_10009324, label %dec_label_pc_10009318

dec_label_pc_10009318:                            ; preds = %dec_label_pc_10009300
  %v0_10009318 = call i32 @function_10009874()
  %v0_1000931c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000931c = inttoptr i32 %v0_10009318 to i32*
  store i32 %v0_1000931c, i32* %v2_1000931c, align 4
  br label %dec_label_pc_10009324

dec_label_pc_10009324:                            ; preds = %dec_label_pc_10009300, %dec_label_pc_10009318
  %v0_10009334 = phi i32 [ %v0_10009308, %dec_label_pc_10009300 ], [ -1, %dec_label_pc_10009318 ]
  ret i32 %v0_10009334

; uselistorder directives
  uselistorder label %dec_label_pc_10009324, { 1, 0 }
  uselistorder label %dec_label_pc_10009300, { 1, 0 }
}

define i32 @function_10009338(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009338:
  store i32 %arg1, i32* @r5, align 4
  %v2_10009344 = call i32 @function_100092c0(i32 577, i32 577)
  ret i32 %v2_10009344
}

define i32 @function_10009348(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009348:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009360 = call i32 @__asm_mfcr()
  %v1_10009364 = and i32 %v0_10009360, 268435456
  %v3_10009364 = icmp eq i32 %v1_10009364, 0
  store i32 %v0_10009360, i32* %r31.global-to-local, align 4
  br i1 %v3_10009364, label %dec_label_pc_1000937c, label %dec_label_pc_10009370

dec_label_pc_10009370:                            ; preds = %dec_label_pc_10009348
  %v0_10009370 = call i32 @function_10009874()
  %v0_10009374 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009374 = inttoptr i32 %v0_10009370 to i32*
  store i32 %v0_10009374, i32* %v2_10009374, align 4
  br label %dec_label_pc_1000937c

dec_label_pc_1000937c:                            ; preds = %dec_label_pc_10009348, %dec_label_pc_10009370
  %v0_1000938c = phi i32 [ %v0_10009360, %dec_label_pc_10009348 ], [ -1, %dec_label_pc_10009370 ]
  ret i32 %v0_1000938c

; uselistorder directives
  uselistorder label %dec_label_pc_1000937c, { 1, 0 }
}

define i32 @function_10009390(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009390:
  %r31.global-to-local = alloca i32, align 4
  %v0_100093a8 = call i32 @__asm_mfcr()
  %v1_100093ac = and i32 %v0_100093a8, 268435456
  %v3_100093ac = icmp eq i32 %v1_100093ac, 0
  store i32 %v0_100093a8, i32* %r31.global-to-local, align 4
  br i1 %v3_100093ac, label %dec_label_pc_100093c4, label %dec_label_pc_100093b8

dec_label_pc_100093b8:                            ; preds = %dec_label_pc_10009390
  %v0_100093b8 = call i32 @function_10009874()
  %v0_100093bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100093bc = inttoptr i32 %v0_100093b8 to i32*
  store i32 %v0_100093bc, i32* %v2_100093bc, align 4
  br label %dec_label_pc_100093c4

dec_label_pc_100093c4:                            ; preds = %dec_label_pc_10009390, %dec_label_pc_100093b8
  %v0_100093d4 = phi i32 [ %v0_100093a8, %dec_label_pc_10009390 ], [ -1, %dec_label_pc_100093b8 ]
  ret i32 %v0_100093d4

; uselistorder directives
  uselistorder label %dec_label_pc_100093c4, { 1, 0 }
}

define i32 @function_100093d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100093d8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100093f0 = call i32 @__asm_mfcr()
  %v1_100093f4 = and i32 %v0_100093f0, 268435456
  %v3_100093f4 = icmp eq i32 %v1_100093f4, 0
  store i32 %v0_100093f0, i32* %r31.global-to-local, align 4
  br i1 %v3_100093f4, label %dec_label_pc_1000940c, label %dec_label_pc_10009400

dec_label_pc_10009400:                            ; preds = %dec_label_pc_100093d8
  %v0_10009400 = call i32 @function_10009874()
  %v0_10009404 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009404 = inttoptr i32 %v0_10009400 to i32*
  store i32 %v0_10009404, i32* %v2_10009404, align 4
  br label %dec_label_pc_1000940c

dec_label_pc_1000940c:                            ; preds = %dec_label_pc_100093d8, %dec_label_pc_10009400
  %v0_1000941c = phi i32 [ %v0_100093f0, %dec_label_pc_100093d8 ], [ -1, %dec_label_pc_10009400 ]
  ret i32 %v0_1000941c

; uselistorder directives
  uselistorder label %dec_label_pc_1000940c, { 1, 0 }
}

define i32 @function_10009420(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009420:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009438 = call i32 @__asm_mfcr()
  %v1_1000943c = and i32 %v0_10009438, 268435456
  %v3_1000943c = icmp eq i32 %v1_1000943c, 0
  store i32 %v0_10009438, i32* %r31.global-to-local, align 4
  br i1 %v3_1000943c, label %dec_label_pc_10009454, label %dec_label_pc_10009448

dec_label_pc_10009448:                            ; preds = %dec_label_pc_10009420
  %v0_10009448 = call i32 @function_10009874()
  %v0_1000944c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000944c = inttoptr i32 %v0_10009448 to i32*
  store i32 %v0_1000944c, i32* %v2_1000944c, align 4
  br label %dec_label_pc_10009454

dec_label_pc_10009454:                            ; preds = %dec_label_pc_10009420, %dec_label_pc_10009448
  %v0_10009464 = phi i32 [ %v0_10009438, %dec_label_pc_10009420 ], [ -1, %dec_label_pc_10009448 ]
  ret i32 %v0_10009464

; uselistorder directives
  uselistorder label %dec_label_pc_10009454, { 1, 0 }
}

define i32 @function_10009468(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009468:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009480 = call i32 @__asm_mfcr()
  %v1_10009484 = and i32 %v0_10009480, 268435456
  %v3_10009484 = icmp eq i32 %v1_10009484, 0
  store i32 %v0_10009480, i32* %r31.global-to-local, align 4
  br i1 %v3_10009484, label %dec_label_pc_1000949c, label %dec_label_pc_10009490

dec_label_pc_10009490:                            ; preds = %dec_label_pc_10009468
  %v0_10009490 = call i32 @function_10009874()
  %v0_10009494 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009494 = inttoptr i32 %v0_10009490 to i32*
  store i32 %v0_10009494, i32* %v2_10009494, align 4
  br label %dec_label_pc_1000949c

dec_label_pc_1000949c:                            ; preds = %dec_label_pc_10009468, %dec_label_pc_10009490
  %v0_100094ac = phi i32 [ %v0_10009480, %dec_label_pc_10009468 ], [ -1, %dec_label_pc_10009490 ]
  ret i32 %v0_100094ac

; uselistorder directives
  uselistorder label %dec_label_pc_1000949c, { 1, 0 }
}

define i32 @function_100094b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100094b0:
  %r31.global-to-local = alloca i32, align 4
  %v3_100094b0 = icmp eq i32 %arg2, 0
  br i1 %v3_100094b0, label %dec_label_pc_100094f0, label %dec_label_pc_100094d8

dec_label_pc_100094d8:                            ; preds = %dec_label_pc_100094b0
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100094f0, label %dec_label_pc_100094e0

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_100094d8
  %v0_100094e0 = call i32 @function_10009874()
  %v2_100094e8 = inttoptr i32 %v0_100094e0 to i32*
  store i32 22, i32* %v2_100094e8, align 4
  %v0_10009514.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009510

dec_label_pc_100094f0:                            ; preds = %dec_label_pc_100094d8, %dec_label_pc_100094b0
  %v0_100094f4 = call i32 @__asm_mfcr()
  %v1_100094f8 = and i32 %v0_100094f4, 268435456
  %v3_100094f8 = icmp eq i32 %v1_100094f8, 0
  store i32 %v0_100094f4, i32* %r31.global-to-local, align 4
  br i1 %v3_100094f8, label %dec_label_pc_10009510, label %dec_label_pc_10009504

dec_label_pc_10009504:                            ; preds = %dec_label_pc_100094f0
  %v0_10009504 = call i32 @function_10009874()
  %v0_10009508 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009508 = inttoptr i32 %v0_10009504 to i32*
  store i32 %v0_10009508, i32* %v2_10009508, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009510

dec_label_pc_10009510:                            ; preds = %dec_label_pc_100094f0, %dec_label_pc_100094e0, %dec_label_pc_10009504
  %v0_10009514 = phi i32 [ %v0_100094f4, %dec_label_pc_100094f0 ], [ %v0_10009514.pre, %dec_label_pc_100094e0 ], [ -1, %dec_label_pc_10009504 ]
  ret i32 %v0_10009514

; uselistorder directives
  uselistorder label %dec_label_pc_10009510, { 2, 0, 1 }
}

define i32 @function_10009528() local_unnamed_addr {
dec_label_pc_10009528:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009540 = call i32 @__asm_mfcr()
  %v1_10009544 = and i32 %v0_10009540, 268435456
  %v3_10009544 = icmp eq i32 %v1_10009544, 0
  store i32 %v0_10009540, i32* %r31.global-to-local, align 4
  br i1 %v3_10009544, label %dec_label_pc_1000955c, label %dec_label_pc_10009550

dec_label_pc_10009550:                            ; preds = %dec_label_pc_10009528
  %v0_10009550 = call i32 @function_10009874()
  %v0_10009554 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009554 = inttoptr i32 %v0_10009550 to i32*
  store i32 %v0_10009554, i32* %v2_10009554, align 4
  br label %dec_label_pc_1000955c

dec_label_pc_1000955c:                            ; preds = %dec_label_pc_10009528, %dec_label_pc_10009550
  %v0_1000956c = phi i32 [ %v0_10009540, %dec_label_pc_10009528 ], [ -1, %dec_label_pc_10009550 ]
  ret i32 %v0_1000956c

; uselistorder directives
  uselistorder label %dec_label_pc_1000955c, { 1, 0 }
}

define i32 @function_10009570(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009570:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009588 = call i32 @__asm_mfcr()
  %v1_1000958c = and i32 %v0_10009588, 268435456
  %v3_1000958c = icmp eq i32 %v1_1000958c, 0
  store i32 %v0_10009588, i32* %r31.global-to-local, align 4
  br i1 %v3_1000958c, label %dec_label_pc_100095a4, label %dec_label_pc_10009598

dec_label_pc_10009598:                            ; preds = %dec_label_pc_10009570
  %v0_10009598 = call i32 @function_10009874()
  %v0_1000959c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000959c = inttoptr i32 %v0_10009598 to i32*
  store i32 %v0_1000959c, i32* %v2_1000959c, align 4
  br label %dec_label_pc_100095a4

dec_label_pc_100095a4:                            ; preds = %dec_label_pc_10009570, %dec_label_pc_10009598
  %v0_100095b4 = phi i32 [ %v0_10009588, %dec_label_pc_10009570 ], [ -1, %dec_label_pc_10009598 ]
  ret i32 %v0_100095b4

; uselistorder directives
  uselistorder label %dec_label_pc_100095a4, { 1, 0 }
}

define i32 @function_100095b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100095b8:
  %r31.global-to-local = alloca i32, align 4
  %v0_100095d0 = call i32 @__asm_mfcr()
  %v1_100095d4 = and i32 %v0_100095d0, 268435456
  %v3_100095d4 = icmp eq i32 %v1_100095d4, 0
  store i32 %v0_100095d0, i32* %r31.global-to-local, align 4
  br i1 %v3_100095d4, label %dec_label_pc_100095ec, label %dec_label_pc_100095e0

dec_label_pc_100095e0:                            ; preds = %dec_label_pc_100095b8
  %v0_100095e0 = call i32 @function_10009874()
  %v0_100095e4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100095e4 = inttoptr i32 %v0_100095e0 to i32*
  store i32 %v0_100095e4, i32* %v2_100095e4, align 4
  br label %dec_label_pc_100095ec

dec_label_pc_100095ec:                            ; preds = %dec_label_pc_100095b8, %dec_label_pc_100095e0
  %v0_100095fc = phi i32 [ %v0_100095d0, %dec_label_pc_100095b8 ], [ -1, %dec_label_pc_100095e0 ]
  ret i32 %v0_100095fc

; uselistorder directives
  uselistorder label %dec_label_pc_100095ec, { 1, 0 }
}

define i32 @function_10009600(i32* %arg1) local_unnamed_addr {
dec_label_pc_10009600:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000961c = ptrtoint i32* %stack_var_-40 to i32
  %v2_10009624 = load i32, i32* %arg1, align 4
  store i32 %v2_1000961c, i32* @r3, align 4
  %v3_10009630 = icmp eq i32 %v2_10009624, -1
  br i1 %v3_10009630, label %dec_label_pc_10009638, label %dec_label_pc_1000964c

dec_label_pc_10009638:                            ; preds = %dec_label_pc_10009600
  %v0_10009638 = call i32 @function_10009874()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009644 = inttoptr i32 %v0_10009638 to i32*
  store i32 9, i32* %v2_10009644, align 4
  %v0_10009690.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000968c

dec_label_pc_1000964c:                            ; preds = %dec_label_pc_10009600
  %v3_1000964c = call i32 @function_1000ac10(i32 %v2_1000961c, i32 ptrtoint ([3 x i8]* @global_var_1000ac08.331 to i32))
  %v0_10009654 = call i32 @function_1000ac08()
  %v0_1000965c = load i32, i32* @r31, align 4
  %v1_1000965c = inttoptr i32 %v0_1000965c to i32*
  %v2_1000965c = load i32, i32* %v1_1000965c, align 4
  store i32 %v2_1000965c, i32* @r29, align 4
  store i32 -1, i32* %v1_1000965c, align 4
  store i32 %v2_1000961c, i32* @r3, align 4
  %v2_1000966c = call i32 @function_1000ac10(i32 %v2_1000961c, i32 1)
  %v0_10009670 = load i32, i32* @r31, align 4
  %v1_10009670 = add i32 %v0_10009670, 12
  %v2_10009670 = inttoptr i32 %v1_10009670 to i32*
  %v3_10009670 = load i32, i32* %v2_10009670, align 4
  store i32 %v3_10009670, i32* @r3, align 4
  store i32 268473976, i32* @lr, align 4
  %v0_10009674 = call i32 @function_1000a274()
  %v0_10009678 = load i32, i32* @r31, align 4
  store i32 %v0_10009678, i32* @r3, align 4
  store i32 268473984, i32* @lr, align 4
  %v0_1000967c = call i32 @function_1000a274()
  store i32 268473992, i32* @lr, align 4
  %v0_10009684 = call i32 @function_10009158()
  store i32 %v0_10009684, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000968c

dec_label_pc_1000968c:                            ; preds = %dec_label_pc_10009638, %dec_label_pc_1000964c
  %v0_10009690 = phi i32 [ %v0_10009690.pre, %dec_label_pc_10009638 ], [ %v0_10009684, %dec_label_pc_1000964c ]
  ret i32 %v0_10009690

; uselistorder directives
  uselistorder i32 %v2_1000961c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000968c, { 1, 0 }
}

define i32 @function_100096a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100096a4:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_100096a4 = load i32, i32* @lr, align 4
  store i32 %v0_100096a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268474052, i32* @lr, align 4
  %v2_100096c0 = call i32 @function_100092c0(i32 18432, i32 18432)
  %v1_100096c4 = icmp slt i32 %v2_100096c0, 0
  br i1 %v1_100096c4, label %dec_label_pc_1000979c, label %dec_label_pc_100096cc

dec_label_pc_100096cc:                            ; preds = %dec_label_pc_100096a4
  %v2_100096cc = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_100096cc, i32* @r4, align 4
  store i32 268474068, i32* @lr, align 4
  %v1_100096d0 = call i32 @function_1000afe4(i32 %v2_100096cc)
  %v1_100096d4 = icmp slt i32 %v1_100096d0, 0
  br i1 %v1_100096d4, label %dec_label_pc_100096f8, label %dec_label_pc_100096dc

dec_label_pc_100096dc:                            ; preds = %dec_label_pc_100096cc
  %v0_100096dc = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268474096, i32* @lr, align 4
  %v2_100096ec = call i32 @function_10009070(i32 %v0_100096dc)
  %tmp5 = icmp sgt i32 %v2_100096ec, -1
  br i1 %tmp5, label %dec_label_pc_10009718, label %dec_label_pc_100096f8

dec_label_pc_100096f8:                            ; preds = %dec_label_pc_100096dc, %dec_label_pc_100096cc
  %v0_100096f8 = call i32 @function_10009874()
  store i32 0, i32* @r31, align 4
  store i32 %v0_100096f8, i32* @r28, align 4
  %v1_10009708 = inttoptr i32 %v0_100096f8 to i32*
  %v2_10009708 = load i32, i32* %v1_10009708, align 4
  store i32 268474128, i32* @lr, align 4
  %v0_1000970c = call i32 @function_10009158()
  %v1_10009710 = load i32, i32* @r28, align 4
  %v2_10009710 = inttoptr i32 %v1_10009710 to i32*
  store i32 %v2_10009708, i32* %v2_10009710, align 4
  br label %dec_label_pc_1000979c

dec_label_pc_10009718:                            ; preds = %dec_label_pc_100096dc
  store i32 48, i32* @r3, align 4
  store i32 268474144, i32* @lr, align 4
  %v0_1000971c = call i32 @function_1000a0ac()
  store i32 %v0_1000971c, i32* %r31.global-to-local, align 4
  %v3_10009720 = icmp eq i32 %v0_1000971c, 0
  br i1 %v3_10009720, label %dec_label_pc_10009774, label %dec_label_pc_10009728

dec_label_pc_10009728:                            ; preds = %dec_label_pc_10009718
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000972c = load i32, i32* @r29, align 4
  %v2_1000972c = inttoptr i32 %v0_1000971c to i32*
  store i32 %v0_1000972c, i32* %v2_1000972c, align 4
  %v0_10009730 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009730 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009730 = add i32 %v1_10009730, 4
  %v3_10009730 = inttoptr i32 %v2_10009730 to i32*
  store i32 %v0_10009730, i32* %v3_10009730, align 4
  %v0_10009734 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009734 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009734 = add i32 %v1_10009734, 16
  %v3_10009734 = inttoptr i32 %v2_10009734 to i32*
  store i32 %v0_10009734, i32* %v3_10009734, align 4
  %v0_10009738 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009738 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009738 = add i32 %v1_10009738, 8
  %v3_10009738 = inttoptr i32 %v2_10009738 to i32*
  store i32 %v0_10009738, i32* %v3_10009738, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10009740 = icmp ugt i32 %tmp, 511
  %v1_10009744 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009744 = add i32 %v1_10009744, 20
  %v3_10009744 = inttoptr i32 %v2_10009744 to i32*
  store i32 %tmp, i32* %v3_10009744, align 4
  br i1 %v2_10009740, label %dec_label_pc_10009754, label %dec_label_pc_1000974c

dec_label_pc_1000974c:                            ; preds = %dec_label_pc_10009728
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10009750 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009750 = add i32 %v1_10009750, 20
  %v3_10009750 = inttoptr i32 %v2_10009750 to i32*
  store i32 512, i32* %v3_10009750, align 4
  br label %dec_label_pc_10009754

dec_label_pc_10009754:                            ; preds = %dec_label_pc_10009728, %dec_label_pc_1000974c
  %v0_10009754 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009754 = add i32 %v0_10009754, 20
  %v2_10009754 = inttoptr i32 %v1_10009754 to i32*
  %v3_10009754 = load i32, i32* %v2_10009754, align 4
  store i32 268474208, i32* @lr, align 4
  %v2_1000975c = call i32 @function_1000a204(i32 1, i32 %v3_10009754)
  %v3_10009760 = icmp eq i32 %v2_1000975c, 0
  %v1_10009764 = load i32, i32* @r31, align 4
  %v2_10009764 = add i32 %v1_10009764, 12
  %v3_10009764 = inttoptr i32 %v2_10009764 to i32*
  store i32 %v2_1000975c, i32* %v3_10009764, align 4
  br i1 %v3_10009760, label %dec_label_pc_1000976c, label %dec_label_pc_10009790

dec_label_pc_1000976c:                            ; preds = %dec_label_pc_10009754
  %v0_1000976c = load i32, i32* @r31, align 4
  store i32 %v0_1000976c, i32* @r3, align 4
  store i32 268474228, i32* @lr, align 4
  %v0_10009770 = call i32 @function_1000a274()
  br label %dec_label_pc_10009774

dec_label_pc_10009774:                            ; preds = %dec_label_pc_10009718, %dec_label_pc_1000976c
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10009780.334 to i32), i32* @lr, align 4
  %v0_1000977c = call i32 @function_10009158()
  %v0_10009780 = call i32 @function_10009874()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10009788 = inttoptr i32 %v0_10009780 to i32*
  store i32 12, i32* %v2_10009788, align 4
  br label %dec_label_pc_1000979c

dec_label_pc_10009790:                            ; preds = %dec_label_pc_10009754
  %v0_10009798 = call i32 @function_1000ac08()
  br label %dec_label_pc_1000979c

dec_label_pc_1000979c:                            ; preds = %dec_label_pc_100096a4, %dec_label_pc_10009774, %dec_label_pc_100096f8, %dec_label_pc_10009790
  store i32 %v0_100096a4, i32* %r0.global-to-local, align 4
  %v0_100097a0 = load i32, i32* @r31, align 4
  ret i32 %v0_100097a0

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000a204, { 41, 43, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 1, 0, 6, 5, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 4, 3, 2 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_10009158, { 20, 19, 18, 37, 36, 35, 34, 32, 33, 27, 26, 31, 30, 29, 28, 4, 3, 2, 25, 24, 23, 22, 21, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_1000979c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10009774, { 1, 0 }
  uselistorder label %dec_label_pc_10009754, { 1, 0 }
}

define i32 @function_100097b4(i32* %arg1) local_unnamed_addr {
dec_label_pc_100097b4:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_100097b8 = load i32, i32* @lr, align 4
  store i32 %v0_100097b8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100097d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100097d0, i32* @r3, align 4
  %v3_100097dc = call i32 @function_1000ac10(i32 %v2_100097d0, i32 ptrtoint ([3 x i8]* @global_var_1000ac08.331 to i32))
  %v0_100097e4 = call i32 @function_1000ac08()
  br label %dec_label_pc_100097e8

dec_label_pc_100097e8:                            ; preds = %dec_label_pc_10009824, %dec_label_pc_100097b4
  %v0_100097e8 = load i32, i32* @r31, align 4
  %v1_100097e8 = add i32 %v0_100097e8, 4
  %v2_100097e8 = inttoptr i32 %v1_100097e8 to i32*
  %v3_100097e8 = load i32, i32* %v2_100097e8, align 4
  store i32 %v3_100097e8, i32* %r0.global-to-local, align 4
  %v1_100097ec = add i32 %v0_100097e8, 8
  %v2_100097ec = inttoptr i32 %v1_100097ec to i32*
  %v3_100097ec = load i32, i32* %v2_100097ec, align 4
  store i32 %v3_100097ec, i32* %r9.global-to-local, align 4
  %v3_100097f0 = icmp ugt i32 %v3_100097ec, %v3_100097e8
  br i1 %v3_100097f0, label %dec_label_pc_10009824, label %dec_label_pc_100097f8

dec_label_pc_100097f8:                            ; preds = %dec_label_pc_100097e8
  %v1_100097f8 = inttoptr i32 %v0_100097e8 to i32*
  %v2_100097f8 = load i32, i32* %v1_100097f8, align 4
  store i32 %v2_100097f8, i32* @r3, align 4
  %v1_100097fc = add i32 %v0_100097e8, 12
  %v2_100097fc = inttoptr i32 %v1_100097fc to i32*
  %v3_100097fc = load i32, i32* %v2_100097fc, align 4
  %v1_10009800 = add i32 %v0_100097e8, 20
  %v2_10009800 = inttoptr i32 %v1_10009800 to i32*
  %v3_10009800 = load i32, i32* %v2_10009800, align 4
  store i32 %v3_10009800, i32* @r5, align 4
  store i32 268474376, i32* @lr, align 4
  %v4_10009804 = inttoptr i32 %v2_100097f8 to i32*
  %v5_10009804 = call i32 @function_1000b058(i32* %v4_10009804, i32 %v3_100097fc, i32 %v3_10009800, i32 %v3_100097ec)
  %v2_10009808 = icmp sgt i32 %v5_10009804, 0
  br i1 %v2_10009808, label %dec_label_pc_10009818, label %dec_label_pc_10009810

dec_label_pc_10009810:                            ; preds = %dec_label_pc_100097f8
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009850

dec_label_pc_10009818:                            ; preds = %dec_label_pc_100097f8
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000981c = load i32, i32* @r31, align 4
  %v2_1000981c = add i32 %v1_1000981c, 8
  %v3_1000981c = inttoptr i32 %v2_1000981c to i32*
  store i32 %v5_10009804, i32* %v3_1000981c, align 4
  %v0_10009820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009820 = load i32, i32* @r31, align 4
  %v2_10009820 = add i32 %v1_10009820, 4
  %v3_10009820 = inttoptr i32 %v2_10009820 to i32*
  store i32 %v0_10009820, i32* %v3_10009820, align 4
  %v0_10009824.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009824

dec_label_pc_10009824:                            ; preds = %dec_label_pc_100097e8, %dec_label_pc_10009818
  %v1_10009838 = phi i32 [ %v0_100097e8, %dec_label_pc_100097e8 ], [ %v0_10009824.pre, %dec_label_pc_10009818 ]
  %v1_10009824 = add i32 %v1_10009838, 4
  %v2_10009824 = inttoptr i32 %v1_10009824 to i32*
  %v3_10009824 = load i32, i32* %v2_10009824, align 4
  store i32 %v3_10009824, i32* %r9.global-to-local, align 4
  %v1_10009828 = add i32 %v1_10009838, 12
  %v2_10009828 = inttoptr i32 %v1_10009828 to i32*
  %v3_10009828 = load i32, i32* %v2_10009828, align 4
  store i32 %v3_10009828, i32* %r11.global-to-local, align 4
  %v2_1000982c = add i32 %v3_10009828, %v3_10009824
  store i32 %v2_1000982c, i32* @r29, align 4
  %v1_10009830 = add i32 %v2_1000982c, 8
  %v2_10009830 = inttoptr i32 %v1_10009830 to i16*
  %v3_10009830 = load i16, i16* %v2_10009830, align 2
  %v4_10009830 = zext i16 %v3_10009830 to i32
  %v2_10009834 = add i32 %v4_10009830, %v3_10009824
  store i32 %v2_10009834, i32* %r0.global-to-local, align 4
  store i32 %v2_10009834, i32* %v2_10009824, align 4
  %v0_1000983c = load i32, i32* @r29, align 4
  %v1_1000983c = add i32 %v0_1000983c, 4
  %v2_1000983c = inttoptr i32 %v1_1000983c to i32*
  %v3_1000983c = load i32, i32* %v2_1000983c, align 4
  store i32 %v3_1000983c, i32* %r0.global-to-local, align 4
  %v1_10009840 = load i32, i32* @r31, align 4
  %v2_10009840 = add i32 %v1_10009840, 16
  %v3_10009840 = inttoptr i32 %v2_10009840 to i32*
  store i32 %v3_1000983c, i32* %v3_10009840, align 4
  %v0_10009844 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009844 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009844 = add i32 %v1_10009844, %v0_10009844
  %v3_10009844 = inttoptr i32 %v2_10009844 to i32*
  %v4_10009844 = load i32, i32* %v3_10009844, align 4
  store i32 %v4_10009844, i32* %r0.global-to-local, align 4
  %v3_10009848 = icmp eq i32 %v4_10009844, 0
  br i1 %v3_10009848, label %dec_label_pc_100097e8, label %dec_label_pc_10009850

dec_label_pc_10009850:                            ; preds = %dec_label_pc_10009824, %dec_label_pc_10009810
  store i32 %v2_100097d0, i32* @r3, align 4
  %v2_10009858 = call i32 @function_1000ac10(i32 %v2_100097d0, i32 1)
  store i32 %v0_100097b8, i32* %r0.global-to-local, align 4
  %v0_10009860 = load i32, i32* @r29, align 4
  ret i32 %v0_10009860

; uselistorder directives
  uselistorder i32 %v1_10009838, { 1, 0 }
  uselistorder i32 %v0_100097e8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_100097d0, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009824, { 1, 0 }
}

define i32 @function_10009874() local_unnamed_addr {
dec_label_pc_10009874:
  ret i32 ptrtoint (i32* @global_var_1001c324.336 to i32)
}

define i32 @function_10009880(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009880:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10009888 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268474516, i32* @lr, align 4
  %v1_10009890 = call i32 @function_1000b498(i32 %v2_10009888)
  %v3_10009898 = load i32, i32* %stack_var_-24, align 4
  %v2_1000989c = add i32 %v3_10009898, %tmp
  %v1_100098a4 = mul i32 %v2_1000989c, 10000
  %v1_100098b0 = and i32 %v1_100098a4, 2147483632
  ret i32 %v1_100098b0
}

define i32 @function_100098b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100098b8:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_100098b8 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_100098b8, label %dec_label_pc_100098cc, label %dec_label_pc_100098c8

dec_label_pc_100098c8:                            ; preds = %dec_label_pc_100098b8
  %v0_100098c8 = call i32 @function_1000b65c()
  store i32 %v0_100098c8, i32* @r3, align 4
  br label %dec_label_pc_100098cc

dec_label_pc_100098cc:                            ; preds = %dec_label_pc_100098b8, %dec_label_pc_100098c8
  %v1_100098cc = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_100098cc, i32* %r9.global-to-local, align 4
  %v4_100098cc = icmp eq i32 %v1_100098cc, 0
  %v2_100098d0 = add i32 %arg3, %arg2
  store i32 %v2_100098d0, i32* %r4.global-to-local, align 4
  %v0_100098d4 = load i32, i32* @r3, align 4
  %v2_100098d4 = add i32 %v0_100098d4, %arg3
  store i32 %v2_100098d4, i32* %r10.global-to-local, align 4
  br i1 %v4_100098cc, label %dec_label_pc_100098fc, label %dec_label_pc_100098dc

dec_label_pc_100098dc:                            ; preds = %dec_label_pc_100098cc
  %v1_100098dc = urem i32 %v2_100098d4, 4
  %v3_100098dc = icmp eq i32 %v1_100098dc, 0
  br i1 %v3_100098dc, label %dec_label_pc_100098e4, label %dec_label_pc_10009930

dec_label_pc_100098e4:                            ; preds = %dec_label_pc_10009948.dec_label_pc_100098e4_crit_edge, %dec_label_pc_100098dc
  %v1_100098f0.pre = phi i32 [ %v1_100098f0.pre.pre, %dec_label_pc_10009948.dec_label_pc_100098e4_crit_edge ], [ %v2_100098d4, %dec_label_pc_100098dc ]
  %v0_100098e4 = phi i32 [ %v1_10009948, %dec_label_pc_10009948.dec_label_pc_100098e4_crit_edge ], [ %v1_100098cc, %dec_label_pc_100098dc ]
  store i32 %v0_100098e4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100098e8

dec_label_pc_100098e8:                            ; preds = %dec_label_pc_100098e8, %dec_label_pc_100098e4
  %v1_100098f0 = phi i32 [ %v2_100098f4, %dec_label_pc_100098e8 ], [ %v1_100098f0.pre, %dec_label_pc_100098e4 ]
  %v0_100098e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100098e8 = add i32 %v0_100098e8, -4
  %v2_100098e8 = inttoptr i32 %v1_100098e8 to i32*
  %v3_100098e8 = load i32, i32* %v2_100098e8, align 4
  %v1_100098ec = add i32 %v0_100098e8, -8
  %v2_100098ec = inttoptr i32 %v1_100098ec to i32*
  %v3_100098ec = load i32, i32* %v2_100098ec, align 4
  store i32 %v3_100098ec, i32* %r9.global-to-local, align 4
  store i32 %v1_100098ec, i32* %r4.global-to-local, align 4
  %v2_100098f0 = add i32 %v1_100098f0, -4
  %v3_100098f0 = inttoptr i32 %v2_100098f0 to i32*
  store i32 %v3_100098e8, i32* %v3_100098f0, align 4
  %v0_100098f4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100098f4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100098f4 = add i32 %v1_100098f4, -8
  %v3_100098f4 = inttoptr i32 %v2_100098f4 to i32*
  store i32 %v0_100098f4, i32* %v3_100098f4, align 4
  store i32 %v2_100098f4, i32* %r10.global-to-local, align 4
  %v0_100098f8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100098f8 = add i32 %v0_100098f8, -1
  store i32 %v1_100098f8, i32* %ctr.global-to-local, align 4
  %v2_100098f8 = icmp eq i32 %v1_100098f8, 0
  br i1 %v2_100098f8, label %dec_label_pc_100098fc, label %dec_label_pc_100098e8

dec_label_pc_100098fc:                            ; preds = %dec_label_pc_100098e8, %dec_label_pc_10009948, %dec_label_pc_100098cc
  %v0_100098fc = load i32, i32* @r11, align 4
  %v1_100098fc = urem i32 %v0_100098fc, 8
  store i32 %v1_100098fc, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_100098fc, 4
  br i1 %tmp, label %dec_label_pc_10009914, label %dec_label_pc_10009908

dec_label_pc_10009908:                            ; preds = %dec_label_pc_100098fc
  %v0_10009908 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009908 = add i32 %v0_10009908, -4
  %v2_10009908 = inttoptr i32 %v1_10009908 to i32*
  %v3_10009908 = load i32, i32* %v2_10009908, align 4
  store i32 %v1_10009908, i32* %r4.global-to-local, align 4
  %v1_1000990c = add nsw i32 %v1_100098fc, -4
  store i32 %v1_1000990c, i32* %r5.global-to-local, align 4
  %v1_10009910 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009910 = add i32 %v1_10009910, -4
  %v3_10009910 = inttoptr i32 %v2_10009910 to i32*
  store i32 %v3_10009908, i32* %v3_10009910, align 4
  store i32 %v2_10009910, i32* %r10.global-to-local, align 4
  %v0_10009914.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009914

dec_label_pc_10009914:                            ; preds = %dec_label_pc_100098fc, %dec_label_pc_10009908
  %v0_1000991c = phi i32 [ %v1_100098fc, %dec_label_pc_100098fc ], [ %v0_10009914.pre, %dec_label_pc_10009908 ]
  %v3_10009914 = icmp eq i32 %v0_1000991c, 0
  br i1 %v3_10009914, label %dec_label_pc_10009954, label %dec_label_pc_1000991c

dec_label_pc_1000991c:                            ; preds = %dec_label_pc_10009914
  store i32 %v0_1000991c, i32* %ctr.global-to-local, align 4
  %v2_10009924.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009920

dec_label_pc_10009920:                            ; preds = %dec_label_pc_10009920, %dec_label_pc_1000991c
  %v2_10009924 = phi i32 [ %v3_10009924, %dec_label_pc_10009920 ], [ %v2_10009924.pre, %dec_label_pc_1000991c ]
  %v0_10009920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009920 = add i32 %v0_10009920, -1
  %v2_10009920 = inttoptr i32 %v1_10009920 to i8*
  %v3_10009920 = load i8, i8* %v2_10009920, align 1
  store i32 %v1_10009920, i32* %r4.global-to-local, align 4
  %v3_10009924 = add i32 %v2_10009924, -1
  %v4_10009924 = inttoptr i32 %v3_10009924 to i8*
  store i8 %v3_10009920, i8* %v4_10009924, align 1
  store i32 %v3_10009924, i32* %r10.global-to-local, align 4
  %v0_10009928 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009928 = add i32 %v0_10009928, -1
  store i32 %v1_10009928, i32* %ctr.global-to-local, align 4
  %v2_10009928 = icmp eq i32 %v1_10009928, 0
  br i1 %v2_10009928, label %dec_label_pc_10009954, label %dec_label_pc_10009920

dec_label_pc_10009930:                            ; preds = %dec_label_pc_100098dc
  %v1_10009930 = sub nsw i32 4, %v1_100098dc
  store i32 %v1_10009930, i32* %ctr.global-to-local, align 4
  %v2_10009938 = sub i32 %arg3, %v1_10009930
  store i32 %v2_10009938, i32* @r11, align 4
  %v1_1000993c8 = add i32 %v2_100098d0, -1
  %v2_1000993c9 = inttoptr i32 %v1_1000993c8 to i8*
  %v3_1000993c10 = load i8, i8* %v2_1000993c9, align 1
  store i32 %v1_1000993c8, i32* %r4.global-to-local, align 4
  %v3_1000994012 = add i32 %v2_100098d4, -1
  %v4_1000994013 = inttoptr i32 %v3_1000994012 to i8*
  store i8 %v3_1000993c10, i8* %v4_1000994013, align 1
  store i32 %v3_1000994012, i32* %r10.global-to-local, align 4
  %v0_1000994414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000994415 = add i32 %v0_1000994414, -1
  store i32 %v1_1000994415, i32* %ctr.global-to-local, align 4
  %v2_1000994416 = icmp eq i32 %v1_1000994415, 0
  br i1 %v2_1000994416, label %dec_label_pc_10009948, label %dec_label_pc_1000993c.dec_label_pc_1000993c_crit_edge

dec_label_pc_1000993c.dec_label_pc_1000993c_crit_edge: ; preds = %dec_label_pc_10009930, %dec_label_pc_1000993c.dec_label_pc_1000993c_crit_edge
  %v3_1000994017 = phi i32 [ %v3_10009940, %dec_label_pc_1000993c.dec_label_pc_1000993c_crit_edge ], [ %v3_1000994012, %dec_label_pc_10009930 ]
  %v0_1000993c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000993c = add i32 %v0_1000993c.pre, -1
  %v2_1000993c = inttoptr i32 %v1_1000993c to i8*
  %v3_1000993c = load i8, i8* %v2_1000993c, align 1
  store i32 %v1_1000993c, i32* %r4.global-to-local, align 4
  %v3_10009940 = add i32 %v3_1000994017, -1
  %v4_10009940 = inttoptr i32 %v3_10009940 to i8*
  store i8 %v3_1000993c, i8* %v4_10009940, align 1
  store i32 %v3_10009940, i32* %r10.global-to-local, align 4
  %v0_10009944 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009944 = add i32 %v0_10009944, -1
  store i32 %v1_10009944, i32* %ctr.global-to-local, align 4
  %v2_10009944 = icmp eq i32 %v1_10009944, 0
  br i1 %v2_10009944, label %dec_label_pc_10009948, label %dec_label_pc_1000993c.dec_label_pc_1000993c_crit_edge

dec_label_pc_10009948:                            ; preds = %dec_label_pc_1000993c.dec_label_pc_1000993c_crit_edge, %dec_label_pc_10009930
  %v0_10009948 = load i32, i32* @r11, align 4
  %v1_10009948 = call i32 @__asm_rlwinm.(i32 %v0_10009948, i32 29, i32 3, i32 31)
  store i32 %v1_10009948, i32* %r9.global-to-local, align 4
  %v4_10009948 = icmp eq i32 %v1_10009948, 0
  br i1 %v4_10009948, label %dec_label_pc_100098fc, label %dec_label_pc_10009948.dec_label_pc_100098e4_crit_edge

dec_label_pc_10009948.dec_label_pc_100098e4_crit_edge: ; preds = %dec_label_pc_10009948
  %v1_100098f0.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100098e4

dec_label_pc_10009954:                            ; preds = %dec_label_pc_10009920, %dec_label_pc_10009914
  %v0_10009954 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10009954

; uselistorder directives
  uselistorder i32 %v1_10009948, { 1, 2, 0 }
  uselistorder i32 %v1_10009944, { 1, 0 }
  uselistorder i32 %v3_10009940, { 1, 2, 0 }
  uselistorder i32 %v1_10009928, { 1, 0 }
  uselistorder i32 %v3_10009924, { 1, 2, 0 }
  uselistorder i32 %v1_100098fc, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100098f8, { 1, 0 }
  uselistorder i32 %v2_100098f4, { 1, 2, 0 }
  uselistorder i32 %v1_100098dc, { 1, 0 }
  uselistorder i32 %v2_100098d4, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 8, 9, 1, 5, 2, 7, 3, 6, 4 }
  uselistorder i32* %r10.global-to-local, { 7, 0, 9, 1, 8, 2, 5, 3, 6, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_1000993c.dec_label_pc_1000993c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009914, { 1, 0 }
  uselistorder label %dec_label_pc_100098fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100098cc, { 1, 0 }
}

define i32 @function_1000995c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000995c:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000995c = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000995c, i32* %r9.global-to-local, align 4
  %v4_1000995c = icmp eq i32 %v1_1000995c, 0
  %v1_10009964 = add i32 %arg1, -4
  store i32 %v1_10009964, i32* %r11.global-to-local, align 4
  %v1_10009968 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000996c = call i32 @__asm_rlwimi(i32 %v1_10009968, i32 16, i32 0, i32 15)
  %v2_1000996c = trunc i32 %v1_1000996c to i8
  br i1 %v4_1000995c, label %dec_label_pc_10009994, label %dec_label_pc_10009974

dec_label_pc_10009974:                            ; preds = %dec_label_pc_1000995c
  %v0_10009974 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009974 = urem i32 %v0_10009974, 4
  %v3_10009974 = icmp eq i32 %v1_10009974, 0
  br i1 %v3_10009974, label %dec_label_pc_10009974.dec_label_pc_1000997c_crit_edge, label %dec_label_pc_100099c4

dec_label_pc_10009974.dec_label_pc_1000997c_crit_edge: ; preds = %dec_label_pc_10009974
  %v0_1000997c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000997c

dec_label_pc_1000997c:                            ; preds = %dec_label_pc_100099dc.dec_label_pc_1000997c_crit_edge, %dec_label_pc_10009974.dec_label_pc_1000997c_crit_edge
  %v0_10009980.pre = phi i32 [ %v0_10009974, %dec_label_pc_10009974.dec_label_pc_1000997c_crit_edge ], [ %v0_10009980.pre.pre, %dec_label_pc_100099dc.dec_label_pc_1000997c_crit_edge ]
  %v0_1000997c = phi i32 [ %v0_1000997c.pre, %dec_label_pc_10009974.dec_label_pc_1000997c_crit_edge ], [ %v1_100099dc, %dec_label_pc_100099dc.dec_label_pc_1000997c_crit_edge ]
  store i32 %v0_1000997c, i32* %ctr.global-to-local, align 4
  %v1_10009984 = sext i8 %v2_1000996c to i32
  br label %dec_label_pc_10009980

dec_label_pc_10009980:                            ; preds = %dec_label_pc_10009980, %dec_label_pc_1000997c
  %v0_10009980 = phi i32 [ %v1_1000998c, %dec_label_pc_10009980 ], [ %v0_10009980.pre, %dec_label_pc_1000997c ]
  %v1_10009980 = add i32 %v0_10009980, 4
  store i32 %v1_10009980, i32* %r9.global-to-local, align 4
  %v4_10009984 = inttoptr i32 %v1_10009980 to i32*
  store i32 %v1_10009984, i32* %v4_10009984, align 4
  %v2_10009988 = load i32, i32* %r9.global-to-local, align 4
  %v3_10009988 = add i32 %v2_10009988, 4
  %v4_10009988 = inttoptr i32 %v3_10009988 to i32*
  store i32 %v1_10009984, i32* %v4_10009988, align 4
  %v0_1000998c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000998c = add i32 %v0_1000998c, 4
  store i32 %v1_1000998c, i32* %r11.global-to-local, align 4
  %v0_10009990 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009990 = add i32 %v0_10009990, -1
  store i32 %v1_10009990, i32* %ctr.global-to-local, align 4
  %v2_10009990 = icmp eq i32 %v1_10009990, 0
  br i1 %v2_10009990, label %dec_label_pc_10009994, label %dec_label_pc_10009980

dec_label_pc_10009994:                            ; preds = %dec_label_pc_10009980, %dec_label_pc_100099dc, %dec_label_pc_1000995c
  %v0_10009994 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009994 = urem i32 %v0_10009994, 8
  store i32 %v1_10009994, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009994, 4
  br i1 %tmp, label %dec_label_pc_100099a8, label %dec_label_pc_100099a0

dec_label_pc_100099a0:                            ; preds = %dec_label_pc_10009994
  %v1_100099a0 = sext i8 %v2_1000996c to i32
  %v2_100099a0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100099a0 = add i32 %v2_100099a0, 4
  %v4_100099a0 = inttoptr i32 %v3_100099a0 to i32*
  store i32 %v1_100099a0, i32* %v4_100099a0, align 4
  store i32 %v3_100099a0, i32* %r11.global-to-local, align 4
  %v0_100099a4 = load i32, i32* @r5, align 4
  %v1_100099a4 = add i32 %v0_100099a4, -4
  store i32 %v1_100099a4, i32* @r5, align 4
  br label %dec_label_pc_100099a8

dec_label_pc_100099a8:                            ; preds = %dec_label_pc_10009994, %dec_label_pc_100099a0
  %v0_100099a8 = phi i32 [ %v1_10009994, %dec_label_pc_10009994 ], [ %v1_100099a4, %dec_label_pc_100099a0 ]
  %v3_100099a8 = icmp eq i32 %v0_100099a8, 0
  %v0_100099ac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100099a8, i32 %v0_100099ac)
  %v0_100099b0 = load i32, i32* @r5, align 4
  store i32 %v0_100099b0, i32* %ctr.global-to-local, align 4
  %v0_100099b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100099b4 = add i32 %v0_100099b4, 3
  store i32 %v1_100099b4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100099b8

dec_label_pc_100099b8:                            ; preds = %dec_label_pc_100099b8, %dec_label_pc_100099a8
  %v3_100099b8 = phi i32 [ %v4_100099b8, %dec_label_pc_100099b8 ], [ %v1_100099b4, %dec_label_pc_100099a8 ]
  %v4_100099b8 = add i32 %v3_100099b8, 1
  %v5_100099b8 = inttoptr i32 %v4_100099b8 to i8*
  store i8 %v2_1000996c, i8* %v5_100099b8, align 1
  store i32 %v4_100099b8, i32* %r9.global-to-local, align 4
  %v0_100099bc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100099bc = add i32 %v0_100099bc, -1
  store i32 %v1_100099bc, i32* %ctr.global-to-local, align 4
  %v2_100099bc = icmp eq i32 %v1_100099bc, 0
  br i1 %v2_100099bc, label %dec_label_pc_100099e8, label %dec_label_pc_100099b8

dec_label_pc_100099c4:                            ; preds = %dec_label_pc_10009974
  %v1_100099c4 = sub nsw i32 4, %v1_10009974
  store i32 %v1_100099c4, i32* %ctr.global-to-local, align 4
  %v1_100099cc = load i32, i32* %r5.global-to-local, align 4
  %v2_100099cc = sub i32 %v1_100099cc, %v1_100099c4
  store i32 %v2_100099cc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100099d0

dec_label_pc_100099d0:                            ; preds = %dec_label_pc_100099d0, %dec_label_pc_100099c4
  %v3_100099d0 = phi i32 [ %v1_100099d4, %dec_label_pc_100099d0 ], [ %v0_10009974, %dec_label_pc_100099c4 ]
  %v4_100099d0 = add i32 %v3_100099d0, 4
  %v5_100099d0 = inttoptr i32 %v4_100099d0 to i8*
  store i8 %v2_1000996c, i8* %v5_100099d0, align 1
  %v0_100099d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100099d4 = add i32 %v0_100099d4, 1
  store i32 %v1_100099d4, i32* %r11.global-to-local, align 4
  %v0_100099d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100099d8 = add i32 %v0_100099d8, -1
  store i32 %v1_100099d8, i32* %ctr.global-to-local, align 4
  %v2_100099d8 = icmp eq i32 %v1_100099d8, 0
  br i1 %v2_100099d8, label %dec_label_pc_100099dc, label %dec_label_pc_100099d0

dec_label_pc_100099dc:                            ; preds = %dec_label_pc_100099d0
  %v0_100099dc = load i32, i32* %r5.global-to-local, align 4
  %v1_100099dc = call i32 @__asm_rlwinm.(i32 %v0_100099dc, i32 29, i32 3, i32 31)
  store i32 %v1_100099dc, i32* %r9.global-to-local, align 4
  %v4_100099dc = icmp eq i32 %v1_100099dc, 0
  br i1 %v4_100099dc, label %dec_label_pc_10009994, label %dec_label_pc_100099dc.dec_label_pc_1000997c_crit_edge

dec_label_pc_100099dc.dec_label_pc_1000997c_crit_edge: ; preds = %dec_label_pc_100099dc
  %v0_10009980.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000997c

dec_label_pc_100099e8:                            ; preds = %dec_label_pc_100099b8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100099dc, { 1, 2, 0 }
  uselistorder i32 %v1_100099d8, { 1, 0 }
  uselistorder i32 %v1_100099d4, { 1, 0 }
  uselistorder i32 %v1_100099bc, { 1, 0 }
  uselistorder i32 %v4_100099b8, { 1, 2, 0 }
  uselistorder i32 %v1_10009994, { 2, 1, 0 }
  uselistorder i32 %v1_10009990, { 1, 0 }
  uselistorder i32 %v1_1000998c, { 1, 0 }
  uselistorder i32 %v1_10009974, { 1, 0 }
  uselistorder i32 %v0_10009974, { 2, 1, 0 }
  uselistorder i8 %v2_1000996c, { 2, 0, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_100099a8, { 1, 0 }
  uselistorder label %dec_label_pc_10009994, { 1, 0, 2 }
}

define i32 @function_100099ec(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_100099ec:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_100099ec = add i32 %arg1, -1
  %v1_100099f0 = sub i32 %v2_100099ec, %tmp
  store i32 %v1_100099f0, i32* %r9.global-to-local, align 4
  %v2_100099f44 = load i8, i8* %arg2, align 1
  %v1_100099f86 = add i32 %tmp, 1
  store i32 %v1_100099f86, i32* %r4.global-to-local, align 4
  %v3_100099fc7 = icmp eq i8 %v2_100099f44, 0
  store i1 %v3_100099fc7, i1* %cr7_eq.global-to-local, align 1
  %v5_10009a008 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100099f44, i8* %v5_10009a008, align 1
  %v0_10009a049 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009a049, label %dec_label_pc_10009a08, label %dec_label_pc_100099f4.dec_label_pc_100099f4_crit_edge

dec_label_pc_100099f4.dec_label_pc_100099f4_crit_edge: ; preds = %dec_label_pc_100099ec, %dec_label_pc_100099f4.dec_label_pc_100099f4_crit_edge
  %v0_100099f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10009a00.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100099f4 = inttoptr i32 %v0_100099f4.pre to i8*
  %v2_100099f4 = load i8, i8* %v1_100099f4, align 1
  %v1_100099f8 = add i32 %v0_100099f4.pre, 1
  store i32 %v1_100099f8, i32* %r4.global-to-local, align 4
  %v3_100099fc = icmp eq i8 %v2_100099f4, 0
  store i1 %v3_100099fc, i1* %cr7_eq.global-to-local, align 1
  %v4_10009a00 = add i32 %v1_100099f8, %v2_10009a00.pre
  %v5_10009a00 = inttoptr i32 %v4_10009a00 to i8*
  store i8 %v2_100099f4, i8* %v5_10009a00, align 1
  %v0_10009a04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009a04, label %dec_label_pc_10009a08, label %dec_label_pc_100099f4.dec_label_pc_100099f4_crit_edge

dec_label_pc_10009a08:                            ; preds = %dec_label_pc_100099f4.dec_label_pc_100099f4_crit_edge, %dec_label_pc_100099ec
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100099f4.dec_label_pc_100099f4_crit_edge, { 1, 0 }
}

define i32 @function_10009a0c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009a0c:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009a10 = load i32, i32* @lr, align 4
  store i32 %v0_10009a10, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009a20 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268474932, i32* @lr, align 4
  %v3_10009a30 = call i32 @function_10008f88(i32 1076655123, i32 %v2_10009a20, i32 %v2_10009a20)
  %v2_10009a34 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009a34, i32* @r4, align 4
  store i32 %v3_10009a30, i32* @r30, align 4
  %v3_10009a38 = icmp eq i32 %v3_10009a30, 0
  %v0_10009a40 = load i32, i32* @r31, align 4
  br i1 %v3_10009a38, label %dec_label_pc_10009a48, label %dec_label_pc_10009a90

dec_label_pc_10009a48:                            ; preds = %dec_label_pc_10009a0c
  %v1_10009a40 = add i32 %v0_10009a40, 17
  %v3_10009a60 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10009a60, i32* %r0.global-to-local, align 4
  %v2_10009a64 = add i32 %v0_10009a40, 4
  %v3_10009a64 = inttoptr i32 %v2_10009a64 to i32*
  store i32 %tmp7, i32* %v3_10009a64, align 4
  %v0_10009a68 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009a68 = load i32, i32* @r31, align 4
  %v2_10009a68 = inttoptr i32 %v1_10009a68 to i32*
  store i32 %v0_10009a68, i32* %v2_10009a68, align 4
  %v0_10009a6c = load i32, i32* %r11.global-to-local, align 4
  %v1_10009a6c = load i32, i32* @r31, align 4
  %v2_10009a6c = add i32 %v1_10009a6c, 8
  %v3_10009a6c = inttoptr i32 %v2_10009a6c to i32*
  store i32 %v0_10009a6c, i32* %v3_10009a6c, align 4
  %v0_10009a70 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009a70 = load i32, i32* @r31, align 4
  %v2_10009a70 = add i32 %v1_10009a70, 12
  %v3_10009a70 = inttoptr i32 %v2_10009a70 to i32*
  store i32 %v0_10009a70, i32* %v3_10009a70, align 4
  %v3_10009a74 = load i32, i32* @r31, align 4
  %v4_10009a74 = add i32 %v3_10009a74, 16
  %v5_10009a74 = inttoptr i32 %v4_10009a74 to i8*
  store i8 %tmp4, i8* %v5_10009a74, align 1
  %v1_10009a78 = load i32, i32* @r31, align 4
  %v2_10009a78 = add i32 %v1_10009a78, 52
  %v3_10009a78 = inttoptr i32 %v2_10009a78 to i32*
  store i32 %tmp3, i32* %v3_10009a78, align 4
  %v1_10009a7c = load i32, i32* @r31, align 4
  %v2_10009a7c = add i32 %v1_10009a7c, 56
  %v3_10009a7c = inttoptr i32 %v2_10009a7c to i32*
  store i32 %tmp2, i32* %v3_10009a7c, align 4
  store i32 268475012, i32* @lr, align 4
  %v6_10009a80 = sext i8 %tmp4 to i32
  %v8_10009a80 = call i32 @function_1000b6f8(i32 %v1_10009a40, i32 %v2_10009a34, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10009a80, i32 %tmp7)
  store i32 268475024, i32* @lr, align 4
  %v3_10009a8c = call i32 @function_1000995c(i32 %v8_10009a80, i32 0, i32 13)
  %v0_10009a94.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009a90

dec_label_pc_10009a90:                            ; preds = %dec_label_pc_10009a0c, %dec_label_pc_10009a48
  %v0_10009a94 = phi i32 [ %v3_10009a30, %dec_label_pc_10009a0c ], [ %v0_10009a94.pre, %dec_label_pc_10009a48 ]
  store i32 %v0_10009a10, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009a94

; uselistorder directives
  uselistorder i32 %v2_10009a20, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 10, 3, 2, 11, 5, 4, 12, 13, 14, 15, 0, 1, 16, 17, 6, 18, 19, 7, 20, 21, 8, 22, 23, 9 }
  uselistorder label %dec_label_pc_10009a90, { 1, 0 }
}

define i32 @function_10009aa8() local_unnamed_addr {
dec_label_pc_10009aa8:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009aa8 = load i32, i32* @r4, align 4
  %v3_10009aa8 = icmp eq i32 %v0_10009aa8, 1
  %v0_10009ab8 = load i32, i32* @r3, align 4
  store i32 %v0_10009ab8, i32* %r27.global-to-local, align 4
  %v0_10009ac0 = load i32, i32* @r5, align 4
  store i32 %v0_10009ac0, i32* @r31, align 4
  br i1 %v3_10009aa8, label %dec_label_pc_10009ae4, label %dec_label_pc_10009ac8

dec_label_pc_10009ac8:                            ; preds = %dec_label_pc_10009aa8
  %v3_10009ac8 = icmp eq i32 %v0_10009aa8, 2
  br i1 %v3_10009ac8, label %dec_label_pc_10009b04, label %dec_label_pc_10009ad0

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009ac8
  %v3_10009ad0 = icmp eq i32 %v0_10009aa8, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10009ad0, label %dec_label_pc_10009b0c, label %dec_label_pc_10009af0

dec_label_pc_10009ae4:                            ; preds = %dec_label_pc_10009aa8
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10009b0c

dec_label_pc_10009af0:                            ; preds = %dec_label_pc_10009ad0
  %v0_10009af0 = call i32 @function_10009874()
  store i32 -1, i32* @r28, align 4
  %v2_10009afc = inttoptr i32 %v0_10009af0 to i32*
  store i32 22, i32* %v2_10009afc, align 4
  br label %dec_label_pc_10009bf4

dec_label_pc_10009b04:                            ; preds = %dec_label_pc_10009ac8
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10009b0c

dec_label_pc_10009b0c:                            ; preds = %dec_label_pc_10009ad0, %dec_label_pc_10009ae4, %dec_label_pc_10009b04
  %v1_10009b0c = inttoptr i32 %v0_10009ac0 to i32*
  %v2_10009b0c = load i32, i32* %v1_10009b0c, align 4
  store i32 19, i32* @r5, align 4
  %v1_10009b14 = add i32 %v0_10009ac0, 4
  %v2_10009b14 = inttoptr i32 %v1_10009b14 to i32*
  %v3_10009b14 = load i32, i32* %v2_10009b14, align 4
  store i32 %v3_10009b14, i32* %r9.global-to-local, align 4
  %v1_10009b18 = add i32 %v0_10009ac0, 17
  store i32 %v1_10009b18, i32* @r4, align 4
  %v1_10009b1c = add i32 %v0_10009ac0, 8
  %v2_10009b1c = inttoptr i32 %v1_10009b1c to i32*
  %v3_10009b1c = load i32, i32* %v2_10009b1c, align 4
  %v2_10009b20 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009b20, i32* @r3, align 4
  %v2_10009b28 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10009b0c, i32* %stack_var_-72, align 4
  store i32 268475224, i32* @lr, align 4
  %v0_10009b54 = call i32 @function_1000b65c()
  %v0_10009b58 = load i32, i32* %r27.global-to-local, align 4
  %v0_10009b5c = load i32, i32* @r30, align 4
  store i32 268475244, i32* @lr, align 4
  %v3_10009b68 = call i32 @function_10008f88(i32 %v0_10009b58, i32 %v0_10009b5c, i32 %v2_10009b28)
  store i32 %v3_10009b68, i32* @r28, align 4
  %v3_10009b6c = icmp eq i32 %v3_10009b68, 0
  br i1 %v3_10009b6c, label %dec_label_pc_10009b74, label %dec_label_pc_10009bf4

dec_label_pc_10009b74:                            ; preds = %dec_label_pc_10009b0c
  %v0_10009b74 = load i32, i32* @r30, align 4
  %v3_10009b78 = icmp eq i32 %v0_10009b74, -2144570348
  br i1 %v3_10009b78, label %dec_label_pc_10009b80, label %dec_label_pc_10009bf0

dec_label_pc_10009b80:                            ; preds = %dec_label_pc_10009b74
  %v0_10009b80 = call i32 @function_10009874()
  store i32 %v0_10009b80, i32* @r29, align 4
  %v0_10009b90 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009b98 = inttoptr i32 %v0_10009b80 to i32*
  %v2_10009b98 = load i32, i32* %v1_10009b98, align 4
  store i32 %v2_10009b98, i32* @r30, align 4
  store i32 268475300, i32* @lr, align 4
  %v3_10009ba0 = call i32 @function_10008f88(i32 %v0_10009b90, i32 1076655123, i32 %v2_10009b28)
  %v3_10009ba4 = icmp eq i32 %v3_10009ba0, 0
  br i1 %v3_10009ba4, label %dec_label_pc_10009bb4, label %dec_label_pc_10009bac

dec_label_pc_10009bac:                            ; preds = %dec_label_pc_10009b80
  %v0_10009bac = load i32, i32* @r30, align 4
  %v1_10009bac = load i32, i32* @r29, align 4
  %v2_10009bac = inttoptr i32 %v1_10009bac to i32*
  store i32 %v0_10009bac, i32* %v2_10009bac, align 4
  br label %dec_label_pc_10009bf4

dec_label_pc_10009bb4:                            ; preds = %dec_label_pc_10009b80
  %v0_10009bb4 = load i32, i32* @r31, align 4
  %v1_10009bb4 = add i32 %v0_10009bb4, 8
  %v2_10009bb4 = inttoptr i32 %v1_10009bb4 to i32*
  %v3_10009bb4 = load i32, i32* %v2_10009bb4, align 4
  %v1_10009bbc = call i32 @__asm_rlwinm(i32 %v3_10009bb4, i32 0, i32 19, i32 20)
  %v1_10009bc0 = call i32 @__asm_rlwinm(i32 %v3_10009b1c, i32 0, i32 19, i32 20)
  store i32 %v1_10009bc0, i32* %r9.global-to-local, align 4
  %v4_10009bc4 = icmp eq i32 %v1_10009bbc, %v1_10009bc0
  br i1 %v4_10009bc4, label %dec_label_pc_10009bcc, label %dec_label_pc_10009be0

dec_label_pc_10009bcc:                            ; preds = %dec_label_pc_10009bb4
  %v1_10009bcc = and i32 %v3_10009bb4, 768
  store i32 %v1_10009bcc, i32* %r9.global-to-local, align 4
  %v3_10009bcc = icmp eq i32 %v1_10009bcc, 0
  br i1 %v3_10009bcc, label %dec_label_pc_10009bf0, label %dec_label_pc_10009bd4

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bcc
  %v1_10009bd4 = call i32 @__asm_rlwinm(i32 %v3_10009b1c, i32 0, i32 22, i32 23)
  %v0_10009bd8 = load i32, i32* %r9.global-to-local, align 4
  %v4_10009bd8 = icmp eq i32 %v0_10009bd8, %v1_10009bd4
  br i1 %v4_10009bd8, label %dec_label_pc_10009bf0, label %dec_label_pc_10009be0

dec_label_pc_10009be0:                            ; preds = %dec_label_pc_10009bb4, %dec_label_pc_10009bd4
  store i32 -1, i32* @r28, align 4
  %v1_10009be8 = load i32, i32* @r29, align 4
  %v2_10009be8 = inttoptr i32 %v1_10009be8 to i32*
  store i32 22, i32* %v2_10009be8, align 4
  br label %dec_label_pc_10009bf4

dec_label_pc_10009bf0:                            ; preds = %dec_label_pc_10009b74, %dec_label_pc_10009bd4, %dec_label_pc_10009bcc
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009bf4

dec_label_pc_10009bf4:                            ; preds = %dec_label_pc_10009b0c, %dec_label_pc_10009be0, %dec_label_pc_10009bac, %dec_label_pc_10009af0, %dec_label_pc_10009bf0
  %v0_10009bf8 = load i32, i32* @r28, align 4
  ret i32 %v0_10009bf8

; uselistorder directives
  uselistorder i32 %v0_10009ac0, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_10008f88, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009bf4, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009bf0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009be0, { 1, 0 }
  uselistorder label %dec_label_pc_10009b0c, { 2, 1, 0 }
}

define i32 @function_10009c0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009c0c:
  %stack_var_-24 = alloca i32, align 4
  %v2_10009c14 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009c14, i32* @r4, align 4
  store i32 268475424, i32* @lr, align 4
  %v1_10009c1c = bitcast i32* %stack_var_-24 to i8*
  %v2_10009c1c = call i32 @function_1000b72c(i8* %v1_10009c1c)
  %v3_10009c20 = icmp eq i32 %v2_10009c1c, 0
  br i1 %v3_10009c20, label %dec_label_pc_10009c30, label %dec_label_pc_10009c2c

dec_label_pc_10009c2c:                            ; preds = %dec_label_pc_10009c0c
  %v3_10009c2c = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10009c30

dec_label_pc_10009c30:                            ; preds = %dec_label_pc_10009c0c, %dec_label_pc_10009c2c
  %v0_10009c3c = phi i32 [ -1, %dec_label_pc_10009c0c ], [ %v3_10009c2c, %dec_label_pc_10009c2c ]
  ret i32 %v0_10009c3c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009c30, { 1, 0 }
}

define i32 @function_10009c40(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c40:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009c54 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475492, i32* @lr, align 4
  %v2_10009c60 = call i32 @function_1000af60(i32 5, i32 %v2_10009c54)
  ret i32 %v2_10009c60

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009c74(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c74:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009c88 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475544, i32* @lr, align 4
  %v2_10009c94 = call i32 @function_1000af60(i32 2, i32 %v2_10009c88)
  ret i32 %v2_10009c94

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009ca8() local_unnamed_addr {
dec_label_pc_10009ca8:
  %stack_var_-24 = alloca i32, align 4
  %v0_10009cb0 = load i32, i32* @r3, align 4
  store i32 %v0_10009cb0, i32* %stack_var_-24, align 4
  %v2_10009cbc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475596, i32* @lr, align 4
  %v2_10009cc8 = call i32 @function_1000af60(i32 3, i32 %v2_10009cbc)
  ret i32 %v2_10009cc8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009cdc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009cdc:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009cf0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475648, i32* @lr, align 4
  %v2_10009cfc = call i32 @function_1000af60(i32 6, i32 %v2_10009cf0)
  ret i32 %v2_10009cfc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009d10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009d10:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009d24 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475708, i32* @lr, align 4
  %v2_10009d38 = call i32 @function_1000af60(i32 15, i32 %v2_10009d24)
  ret i32 %v2_10009d38

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 38, 25, 26, 6, 27, 7, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, 21, 22, 23, 29, 24, 30, 31, 2, 32, 33, 3, 34, 35, 4, 36, 37, 5 }
}

define i32 @function_10009d4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009d4c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009d60 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475756, i32* @lr, align 4
  %v2_10009d68 = call i32 @function_1000af60(i32 4, i32 %v2_10009d60)
  ret i32 %v2_10009d68

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009d7c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009d7c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009d90 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475812, i32* @lr, align 4
  %v2_10009da0 = call i32 @function_1000af60(i32 10, i32 %v2_10009d90)
  ret i32 %v2_10009da0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10009db4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009db4:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009dc8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475876, i32* @lr, align 4
  %v2_10009de0 = call i32 @function_1000af60(i32 12, i32 %v2_10009dc8)
  ret i32 %v2_10009de0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009df4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009df4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009e08 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475932, i32* @lr, align 4
  %v2_10009e18 = call i32 @function_1000af60(i32 9, i32 %v2_10009e08)
  ret i32 %v2_10009e18

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 6, 7, 8, 17, 18, 19, 1, 20, 2, 21, 9, 22, 3, 10, 11, 12, 13, 14, 23, 15, 24, 4, 37, 25, 26, 27, 5, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 16 }
}

define i32 @function_10009e2c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10009e2c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009e40 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268475996, i32* @lr, align 4
  %v2_10009e58 = call i32 @function_1000af60(i32 11, i32 %v2_10009e40)
  ret i32 %v2_10009e58

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009e6c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10009e6c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10009e80 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268476056, i32* @lr, align 4
  %v2_10009e94 = call i32 @function_1000af60(i32 14, i32 %v2_10009e80)
  ret i32 %v2_10009e94

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10009ea8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009ea8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10009ebc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476108, i32* @lr, align 4
  %v2_10009ec8 = call i32 @function_1000af60(i32 1, i32 %v2_10009ebc)
  ret i32 %v2_10009ec8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000af60, { 2, 1, 0, 5, 6, 11, 7, 10, 9, 4, 3, 8 }
}

define i32 @function_10009edc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009edc:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_10009f0c, label %dec_label_pc_10009ef8

dec_label_pc_10009ef8:                            ; preds = %dec_label_pc_10009edc
  %v0_10009ef8 = call i32 @function_10009874()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009f04 = inttoptr i32 %v0_10009ef8 to i32*
  store i32 22, i32* %v2_10009f04, align 4
  %v0_10009f18.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f14

dec_label_pc_10009f0c:                            ; preds = %dec_label_pc_10009edc
  %v0_10009f0c = call i32 @function_1000a05c()
  store i32 %v0_10009f0c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009f14

dec_label_pc_10009f14:                            ; preds = %dec_label_pc_10009ef8, %dec_label_pc_10009f0c
  %v0_10009f18 = phi i32 [ %v0_10009f18.pre, %dec_label_pc_10009ef8 ], [ %v0_10009f0c, %dec_label_pc_10009f0c ]
  ret i32 %v0_10009f18

; uselistorder directives
  uselistorder label %dec_label_pc_10009f14, { 1, 0 }
}

define i32 @function_10009f28(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009f28:
  store i32 268476224, i32* @lr, align 4
  %v3_10009f3c = call i32 @function_1000995c(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_10009f54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009f54:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_10009f54 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_10009f54, label %dec_label_pc_10009f80, label %dec_label_pc_10009f70

dec_label_pc_10009f70:                            ; preds = %dec_label_pc_10009f54
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_10009f80, label %dec_label_pc_10009f78

dec_label_pc_10009f78:                            ; preds = %dec_label_pc_10009f70
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_10009fb0.lr.ph, label %dec_label_pc_10009f80

dec_label_pc_10009f80:                            ; preds = %dec_label_pc_10009f78, %dec_label_pc_10009f70, %dec_label_pc_10009f54
  %v0_10009f80 = call i32 @function_10009874()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009f8c = inttoptr i32 %v0_10009f80 to i32*
  store i32 22, i32* %v2_10009f8c, align 4
  %v0_1000a020.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a01c

dec_label_pc_10009fb0.lr.ph:                      ; preds = %dec_label_pc_10009f78
  %v2_10009fa0 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10009fa0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10009fb022 = add i32 %v2_10009fa0, 128
  %v3_10009fb023 = inttoptr i32 %v2_10009fb022 to i32*
  store i32 0, i32* %v3_10009fb023, align 4
  %v0_10009fb424 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009fb425 = add i32 %v0_10009fb424, -1
  store i32 %v1_10009fb425, i32* %r11.global-to-local, align 4
  %v1_10009fb826 = mul i32 %v1_10009fb425, 4
  %v1_10009fbc27 = load i32, i32* %r8.global-to-local, align 4
  %v2_10009fbc28 = add i32 %v1_10009fbc27, %v1_10009fb826
  store i32 %v2_10009fbc28, i32* %r9.global-to-local, align 4
  %v0_10009fc029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009fc030 = add i32 %v0_10009fc029, -1
  store i32 %v1_10009fc030, i32* %ctr.global-to-local, align 4
  %v2_10009fc031 = icmp eq i32 %v1_10009fc030, 0
  br i1 %v2_10009fc031, label %dec_label_pc_10009fc4, label %dec_label_pc_10009fb0.dec_label_pc_10009fb0_crit_edge

dec_label_pc_10009fb0.dec_label_pc_10009fb0_crit_edge: ; preds = %dec_label_pc_10009fb0.lr.ph, %dec_label_pc_10009fb0.dec_label_pc_10009fb0_crit_edge
  %v2_10009fbc32 = phi i32 [ %v2_10009fbc, %dec_label_pc_10009fb0.dec_label_pc_10009fb0_crit_edge ], [ %v2_10009fbc28, %dec_label_pc_10009fb0.lr.ph ]
  %v0_10009fb0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009fb0 = add i32 %v2_10009fbc32, 4
  %v3_10009fb0 = inttoptr i32 %v2_10009fb0 to i32*
  store i32 %v0_10009fb0.pre, i32* %v3_10009fb0, align 4
  %v0_10009fb4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009fb4 = add i32 %v0_10009fb4, -1
  store i32 %v1_10009fb4, i32* %r11.global-to-local, align 4
  %v1_10009fb8 = mul i32 %v1_10009fb4, 4
  %v1_10009fbc = load i32, i32* %r8.global-to-local, align 4
  %v2_10009fbc = add i32 %v1_10009fbc, %v1_10009fb8
  store i32 %v2_10009fbc, i32* %r9.global-to-local, align 4
  %v0_10009fc0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009fc0 = add i32 %v0_10009fc0, -1
  store i32 %v1_10009fc0, i32* %ctr.global-to-local, align 4
  %v2_10009fc0 = icmp eq i32 %v1_10009fc0, 0
  br i1 %v2_10009fc0, label %dec_label_pc_10009fc4, label %dec_label_pc_10009fb0.dec_label_pc_10009fb0_crit_edge

dec_label_pc_10009fc4:                            ; preds = %dec_label_pc_10009fb0.dec_label_pc_10009fb0_crit_edge, %dec_label_pc_10009fb0.lr.ph
  %v0_10009fc8.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_10009fc4 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_10009fc4, i32* @r3, align 4
  store i32 %v0_10009fc8.pre, i32* @r4, align 4
  %v0_10009fcc = call i32 @function_1000a05c()
  %v1_10009fd0 = icmp slt i32 %v0_10009fcc, 0
  br i1 %v1_10009fd0, label %dec_label_pc_1000a018, label %dec_label_pc_10009fd8

dec_label_pc_10009fd8:                            ; preds = %dec_label_pc_10009fc4
  %v0_10009fdc = load i32, i32* %r31.global-to-local, align 4
  %v2_10009fe4 = call i32 @function_1000a034(i32 ptrtoint (i32* @global_var_1001c4e0.339 to i32), i32 %v0_10009fdc)
  %v2_10009ff0 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268476424, i32* @lr, align 4
  %v4_1000a004 = call i32 @function_1000b7ec(i32 %v0_10009fdc, i32* nonnull %stack_var_-296, i32 %v2_10009ff0)
  %v1_1000a008 = icmp slt i32 %v4_1000a004, 0
  br i1 %v1_1000a008, label %dec_label_pc_1000a018, label %dec_label_pc_1000a010

dec_label_pc_1000a010:                            ; preds = %dec_label_pc_10009fd8
  %v3_1000a010 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000a010, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a01c

dec_label_pc_1000a018:                            ; preds = %dec_label_pc_10009fd8, %dec_label_pc_10009fc4
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a01c

dec_label_pc_1000a01c:                            ; preds = %dec_label_pc_1000a010, %dec_label_pc_10009f80, %dec_label_pc_1000a018
  %v0_1000a020 = phi i32 [ %v3_1000a010, %dec_label_pc_1000a010 ], [ %v0_1000a020.pre, %dec_label_pc_10009f80 ], [ -1, %dec_label_pc_1000a018 ]
  ret i32 %v0_1000a020

; uselistorder directives
  uselistorder i32 %v1_10009fc0, { 1, 0 }
  uselistorder i32 %v2_10009fbc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000a01c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009fb0.dec_label_pc_10009fb0_crit_edge, { 1, 0 }
}

define i32 @function_1000a034(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a034:
  %v1_1000a034 = add i32 %arg2, -1
  %v1_1000a038 = call i32 @__asm_rlwinm(i32 %v1_1000a034, i32 29, i32 3, i32 29)
  %v1_1000a03c = urem i32 %v1_1000a034, 32
  %v2_1000a040 = add i32 %v1_1000a038, %arg1
  %v3_1000a040 = inttoptr i32 %v2_1000a040 to i32*
  %v4_1000a040 = load i32, i32* %v3_1000a040, align 4
  %v3_1000a048 = shl i32 1, %v1_1000a03c
  %v2_1000a04c = and i32 %v4_1000a040, %v3_1000a048
  %v2_1000a050 = icmp ne i32 %v2_1000a04c, 0
  %v5_1000a054 = zext i1 %v2_1000a050 to i32
  ret i32 %v5_1000a054
}

define i32 @function_1000a05c() local_unnamed_addr {
dec_label_pc_1000a05c:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000a05c = load i32, i32* @r4, align 4
  %v1_1000a05c = add i32 %v0_1000a05c, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000a064 = call i32 @__asm_rlwinm(i32 %v1_1000a05c, i32 29, i32 3, i32 29)
  %v1_1000a068 = urem i32 %v1_1000a05c, 32
  %v1_1000a06c = load i32, i32* @r3, align 4
  %v2_1000a06c = add i32 %v1_1000a06c, %v1_1000a064
  %v3_1000a06c = inttoptr i32 %v2_1000a06c to i32*
  %v4_1000a06c = load i32, i32* %v3_1000a06c, align 4
  %v0_1000a070 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000a070 = shl i32 %v0_1000a070, %v1_1000a068
  store i32 %v3_1000a070, i32* %r0.global-to-local, align 4
  %v2_1000a074 = or i32 %v3_1000a070, %v4_1000a06c
  store i32 %v2_1000a074, i32* %v3_1000a06c, align 4
  ret i32 0
}

define i32 @function_1000a084(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a084:
  %v1_1000a084 = add i32 %arg2, -1
  %v1_1000a08c = call i32 @__asm_rlwinm(i32 %v1_1000a084, i32 29, i32 3, i32 29)
  %v1_1000a090 = urem i32 %v1_1000a084, 32
  %v2_1000a094 = add i32 %v1_1000a08c, %arg1
  %v3_1000a094 = inttoptr i32 %v2_1000a094 to i32*
  %v4_1000a094 = load i32, i32* %v3_1000a094, align 4
  %v3_1000a098 = shl i32 -2, %v1_1000a090
  %v4_1000a098 = sub nsw i32 32, %v1_1000a090
  %v5_1000a098 = lshr i32 -2, %v4_1000a098
  %v6_1000a098 = or i32 %v5_1000a098, %v3_1000a098
  %v2_1000a09c = and i32 %v6_1000a098, %v4_1000a094
  store i32 %v2_1000a09c, i32* %v3_1000a094, align 4
  ret i32 0
}

define i32 @function_1000a0ac() local_unnamed_addr {
dec_label_pc_1000a0ac:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a0ac = load i32, i32* @r3, align 4
  %v3_1000a0ac = icmp eq i32 %v0_1000a0ac, 0
  br i1 %v3_1000a0ac, label %dec_label_pc_1000a0c8.thread, label %dec_label_pc_1000a0c8

dec_label_pc_1000a0c8.thread:                     ; preds = %dec_label_pc_1000a0ac
  br label %dec_label_pc_1000a0d4

dec_label_pc_1000a0c8:                            ; preds = %dec_label_pc_1000a0ac
  %v3_1000a0cc = icmp ugt i32 %v0_1000a0ac, -8
  br i1 %v3_1000a0cc, label %dec_label_pc_1000a1dc, label %dec_label_pc_1000a0d4

dec_label_pc_1000a0d4:                            ; preds = %dec_label_pc_1000a0c8.thread, %dec_label_pc_1000a0c8
  %v0_1000a0d816 = phi i32 [ 1, %dec_label_pc_1000a0c8.thread ], [ %v0_1000a0ac, %dec_label_pc_1000a0c8 ]
  %v1_1000a0d8 = add i32 %v0_1000a0d816, 4
  store i32 ptrtoint (i32* @global_var_1001c390.340 to i32), i32* @r29, align 4
  store i32 %v1_1000a0d8, i32* %stack_var_-40, align 4
  %v0_1000a0e8 = call i32 @function_1000ac08()
  %v2_1000a0f0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000a0f8 = call i32 @function_1000a4a4(i32* inttoptr (i32 268550840 to i32*), i32 %v2_1000a0f0)
  store i32 %v3_1000a0f8, i32* %r31.global-to-local, align 4
  %v0_1000a104 = call i32 @function_1000ac08()
  %v3_1000a108 = icmp eq i32 %v3_1000a0f8, 0
  br i1 %v3_1000a108, label %dec_label_pc_1000a110, label %dec_label_pc_1000a1c0.thread

dec_label_pc_1000a1c0.thread:                     ; preds = %dec_label_pc_1000a0d4
  br label %dec_label_pc_1000a1d4

dec_label_pc_1000a110:                            ; preds = %dec_label_pc_1000a0d4
  %v3_1000a114 = load i32, i32* @global_var_1001c314.343, align 4
  store i32 %v3_1000a114, i32* %r31.global-to-local, align 4
  %v3_1000a118 = load i32, i32* %stack_var_-40, align 4
  %v2_1000a11c = icmp ult i32 %v3_1000a118, %v3_1000a114
  br i1 %v2_1000a11c, label %dec_label_pc_1000a134, label %dec_label_pc_1000a124

dec_label_pc_1000a124:                            ; preds = %dec_label_pc_1000a110
  %v1_1000a128 = sub i32 0, %v3_1000a114
  %v2_1000a124 = add i32 %v3_1000a114, -1
  %v1_1000a12c = add i32 %v2_1000a124, %v3_1000a118
  %v2_1000a130 = and i32 %v1_1000a12c, %v1_1000a128
  store i32 %v2_1000a130, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a134

dec_label_pc_1000a134:                            ; preds = %dec_label_pc_1000a110, %dec_label_pc_1000a124
  %v0_1000a140 = call i32 @function_1000ac08()
  %v0_1000a144 = load i32, i32* %r31.global-to-local, align 4
  store i32 268476748, i32* @lr, align 4
  %v1_1000a148 = call i32 @function_1000b428(i32 %v0_1000a144)
  %v3_1000a14c = icmp eq i32 %v1_1000a148, -1
  br i1 %v3_1000a14c, label %dec_label_pc_1000a16c, label %dec_label_pc_1000a154

dec_label_pc_1000a154:                            ; preds = %dec_label_pc_1000a134
  %v1_1000a154 = add i32 %v1_1000a148, 3
  %v1_1000a158 = call i32 @__asm_rlwinm(i32 %v1_1000a154, i32 0, i32 0, i32 29)
  store i32 %v1_1000a158, i32* @r30, align 4
  %v4_1000a15c = icmp eq i32 %v1_1000a158, %v1_1000a148
  br i1 %v4_1000a15c, label %dec_label_pc_1000a16c, label %dec_label_pc_1000a164

dec_label_pc_1000a164:                            ; preds = %dec_label_pc_1000a154
  %v2_1000a164 = sub i32 %v1_1000a158, %v1_1000a148
  store i32 268476780, i32* @lr, align 4
  %v1_1000a168 = call i32 @function_1000b428(i32 %v2_1000a164)
  br label %dec_label_pc_1000a16c

dec_label_pc_1000a16c:                            ; preds = %dec_label_pc_1000a154, %dec_label_pc_1000a134, %dec_label_pc_1000a164
  %v0_1000a174 = call i32 @function_1000ac08()
  %v0_1000a178 = load i32, i32* @r30, align 4
  %v3_1000a178 = icmp eq i32 %v0_1000a178, -1
  br i1 %v3_1000a178, label %dec_label_pc_1000a1dc, label %dec_label_pc_1000a1c0

dec_label_pc_1000a1c0:                            ; preds = %dec_label_pc_1000a16c
  store i32 ptrtoint (i32* @global_var_1001c390.340 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c2b8 to i32), i32* @r29, align 4
  %v0_1000a194 = call i32 @function_1000ac08()
  %v0_1000a198 = load i32, i32* @r31, align 4
  %v0_1000a19c = load i32, i32* @r30, align 4
  %v0_1000a1a0 = load i32, i32* @r29, align 4
  store i32 268476840, i32* @lr, align 4
  %v3_1000a1a4 = inttoptr i32 %v0_1000a1a0 to i32*
  %v4_1000a1a4 = call i32 @function_1000a628(i32* %v3_1000a1a4, i32 %v0_1000a19c, i32 %v0_1000a198)
  %v0_1000a1a8 = load i32, i32* @r29, align 4
  %v2_1000a1b0 = inttoptr i32 %v0_1000a1a8 to i32*
  %v3_1000a1b0 = call i32 @function_1000a4a4(i32* %v2_1000a1b0, i32 %v2_1000a0f0)
  store i32 %v3_1000a1b0, i32* %r31.global-to-local, align 4
  %v0_1000a1bc = call i32 @function_1000ac08()
  %v3_1000a1c0 = icmp eq i32 %v3_1000a1b0, 0
  br i1 %v3_1000a1c0, label %dec_label_pc_1000a1d4.thread, label %dec_label_pc_1000a1d4

dec_label_pc_1000a1d4.thread:                     ; preds = %dec_label_pc_1000a1c0
  br label %dec_label_pc_1000a1dc

dec_label_pc_1000a1d4:                            ; preds = %dec_label_pc_1000a1c0, %dec_label_pc_1000a1c0.thread
  %v0_1000a1d4.pr6 = phi i32 [ %v3_1000a0f8, %dec_label_pc_1000a1c0.thread ], [ %v3_1000a1b0, %dec_label_pc_1000a1c0 ]
  %v3_1000a1c8 = load i32, i32* %stack_var_-40, align 4
  %v2_1000a1cc = inttoptr i32 %v0_1000a1d4.pr6 to i32*
  store i32 %v3_1000a1c8, i32* %v2_1000a1cc, align 4
  %v0_1000a1d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a1d0 = add i32 %v0_1000a1d0, 4
  store i32 %v1_1000a1d0, i32* @r31, align 4
  %v3_1000a1d4 = icmp eq i32 %v1_1000a1d0, 0
  br i1 %v3_1000a1d4, label %dec_label_pc_1000a1dc, label %dec_label_pc_1000a1ec

dec_label_pc_1000a1dc:                            ; preds = %dec_label_pc_1000a1d4.thread, %dec_label_pc_1000a1d4, %dec_label_pc_1000a16c, %dec_label_pc_1000a0c8
  %v0_1000a1dc = call i32 @function_10009874()
  %v2_1000a1e4 = inttoptr i32 %v0_1000a1dc to i32*
  store i32 12, i32* %v2_1000a1e4, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000a1ec

dec_label_pc_1000a1ec:                            ; preds = %dec_label_pc_1000a1d4, %dec_label_pc_1000a1dc
  %v0_1000a1f0 = phi i32 [ %v1_1000a1d0, %dec_label_pc_1000a1d4 ], [ 0, %dec_label_pc_1000a1dc ]
  ret i32 %v0_1000a1f0

; uselistorder directives
  uselistorder i32 %v1_1000a1d0, { 1, 0, 2 }
  uselistorder i32 %v1_1000a158, { 1, 0, 2 }
  uselistorder i32 %v1_1000a148, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a114, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a0f8, { 1, 0, 2 }
  uselistorder i32 %v0_1000a0ac, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1dc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000a16c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a134, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0d4, { 1, 0 }
}

define i32 @function_1000a204(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a204:
  %v3_1000a204 = icmp eq i32 %arg1, 0
  %v2_1000a214 = mul i32 %arg2, %arg1
  store i32 %v2_1000a214, i32* @r31, align 4
  br i1 %v3_1000a204, label %dec_label_pc_1000a240, label %dec_label_pc_1000a220

dec_label_pc_1000a220:                            ; preds = %dec_label_pc_1000a204
  %v2_1000a220 = udiv i32 %v2_1000a214, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000a228 = icmp eq i32 %v2_1000a220, %arg2
  br i1 %v4_1000a228, label %dec_label_pc_1000a240, label %dec_label_pc_1000a230

dec_label_pc_1000a230:                            ; preds = %dec_label_pc_1000a220
  %v0_1000a230 = call i32 @function_10009874()
  %v2_1000a238 = inttoptr i32 %v0_1000a230 to i32*
  store i32 12, i32* %v2_1000a238, align 4
  br label %dec_label_pc_1000a25c

dec_label_pc_1000a240:                            ; preds = %dec_label_pc_1000a220, %dec_label_pc_1000a204
  store i32 %v2_1000a214, i32* @r3, align 4
  store i32 268477000, i32* @lr, align 4
  %v0_1000a244 = call i32 @function_1000a0ac()
  %v0_1000a248 = load i32, i32* @r31, align 4
  store i32 %v0_1000a244, i32* @r30, align 4
  %v3_1000a24c = icmp eq i32 %v0_1000a244, 0
  br i1 %v3_1000a24c, label %dec_label_pc_1000a25c, label %dec_label_pc_1000a258

dec_label_pc_1000a258:                            ; preds = %dec_label_pc_1000a240
  store i32 268477020, i32* @lr, align 4
  %v3_1000a258 = call i32 @function_1000995c(i32 0, i32 %v0_1000a248, i32 %v0_1000a248)
  br label %dec_label_pc_1000a25c

dec_label_pc_1000a25c:                            ; preds = %dec_label_pc_1000a240, %dec_label_pc_1000a230, %dec_label_pc_1000a258
  %v0_1000a260 = load i32, i32* @r30, align 4
  ret i32 %v0_1000a260

; uselistorder directives
  uselistorder i32 %v0_1000a248, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a25c, { 2, 0, 1 }
}

define i32 @function_1000a274() local_unnamed_addr {
dec_label_pc_1000a274:
  %v0_1000a274 = load i32, i32* @r3, align 4
  %v3_1000a274 = icmp eq i32 %v0_1000a274, 0
  br i1 %v3_1000a274, label %dec_label_pc_1000a360, label %dec_label_pc_1000a28c

dec_label_pc_1000a28c:                            ; preds = %dec_label_pc_1000a274
  %v1_1000a290 = add i32 %v0_1000a274, -4
  %v2_1000a290 = inttoptr i32 %v1_1000a290 to i32*
  %v3_1000a290 = load i32, i32* %v2_1000a290, align 4
  store i32 %v3_1000a290, i32* @r28, align 4
  %v0_1000a2a4 = call i32 @function_1000ac08()
  %v0_1000a2ac = load i32, i32* @r28, align 4
  store i32 268477112, i32* @lr, align 4
  %v4_1000a2b4 = call i32 @function_1000a628(i32* nonnull @global_var_1001c2b8, i32 %v1_1000a290, i32 %v0_1000a2ac)
  %v3_1000a2bc = load i32, i32* @global_var_1001c314.343, align 4
  store i32 %v4_1000a2b4, i32* @r29, align 4
  %v1_1000a2c4 = inttoptr i32 %v4_1000a2b4 to i32*
  %v2_1000a2c4 = load i32, i32* %v1_1000a2c4, align 4
  store i32 %v2_1000a2c4, i32* @r27, align 4
  %v1_1000a2c8 = mul i32 %v3_1000a2bc, 8
  %v2_1000a2cc = icmp ult i32 %v2_1000a2c4, %v1_1000a2c8
  br i1 %v2_1000a2cc, label %dec_label_pc_1000a300, label %dec_label_pc_1000a2d4

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a28c
  store i32 ptrtoint (i32* @global_var_1001c560.344 to i32), i32* @r28, align 4
  %v0_1000a2e4 = call i32 @function_1000ac08()
  store i32 268477168, i32* @lr, align 4
  %v1_1000a2ec = call i32 @function_1000b428(i32 0)
  %v0_1000a2f0 = load i32, i32* @r31, align 4
  %v4_1000a2f0 = icmp eq i32 %v0_1000a2f0, %v1_1000a2ec
  br i1 %v4_1000a2f0, label %dec_label_pc_1000a308, label %dec_label_pc_1000a2f8

dec_label_pc_1000a2f8:                            ; preds = %dec_label_pc_1000a2d4
  %v0_1000a2fc = call i32 @function_1000ac08()
  br label %dec_label_pc_1000a300

dec_label_pc_1000a300:                            ; preds = %dec_label_pc_1000a28c, %dec_label_pc_1000a2f8
  br label %dec_label_pc_1000a35c

dec_label_pc_1000a308:                            ; preds = %dec_label_pc_1000a2d4
  %v0_1000a308 = load i32, i32* @r29, align 4
  %v1_1000a308 = add i32 %v0_1000a308, 4
  %v2_1000a308 = inttoptr i32 %v1_1000a308 to i32*
  %v3_1000a308 = load i32, i32* %v2_1000a308, align 4
  %v3_1000a30c = icmp eq i32 %v3_1000a308, 0
  br i1 %v3_1000a30c, label %dec_label_pc_1000a31c, label %dec_label_pc_1000a314

dec_label_pc_1000a314:                            ; preds = %dec_label_pc_1000a308
  %v1_1000a314 = add i32 %v0_1000a308, 8
  %v2_1000a314 = inttoptr i32 %v1_1000a314 to i32*
  %v3_1000a314 = load i32, i32* %v2_1000a314, align 4
  %v2_1000a318 = add i32 %v3_1000a308, 8
  %v3_1000a318 = inttoptr i32 %v2_1000a318 to i32*
  store i32 %v3_1000a314, i32* %v3_1000a318, align 4
  %v0_1000a31c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a31c

dec_label_pc_1000a31c:                            ; preds = %dec_label_pc_1000a308, %dec_label_pc_1000a314
  %v0_1000a31c = phi i32 [ %v0_1000a308, %dec_label_pc_1000a308 ], [ %v0_1000a31c.pre, %dec_label_pc_1000a314 ]
  %v1_1000a31c = add i32 %v0_1000a31c, 8
  %v2_1000a31c = inttoptr i32 %v1_1000a31c to i32*
  %v3_1000a31c = load i32, i32* %v2_1000a31c, align 4
  %v1_1000a320 = add i32 %v0_1000a31c, 4
  %v2_1000a320 = inttoptr i32 %v1_1000a320 to i32*
  %v3_1000a320 = load i32, i32* %v2_1000a320, align 4
  %v3_1000a324 = icmp eq i32 %v3_1000a31c, 0
  br i1 %v3_1000a324, label %dec_label_pc_1000a334, label %dec_label_pc_1000a32c

dec_label_pc_1000a32c:                            ; preds = %dec_label_pc_1000a31c
  %v2_1000a32c = add i32 %v3_1000a31c, 4
  %v3_1000a32c = inttoptr i32 %v2_1000a32c to i32*
  store i32 %v3_1000a320, i32* %v3_1000a32c, align 4
  br label %dec_label_pc_1000a338

dec_label_pc_1000a334:                            ; preds = %dec_label_pc_1000a31c
  store i32 %v3_1000a320, i32* @global_var_1001c2b8, align 4
  br label %dec_label_pc_1000a338

dec_label_pc_1000a338:                            ; preds = %dec_label_pc_1000a32c, %dec_label_pc_1000a334
  %v0_1000a340 = call i32 @function_1000ac08()
  %v0_1000a344 = load i32, i32* @r27, align 4
  %v1_1000a344 = load i32, i32* @r29, align 4
  %v0_1000a34c = load i32, i32* @r31, align 4
  %v2_1000a344 = sub i32 12, %v0_1000a344
  %v1_1000a348 = add i32 %v2_1000a344, %v1_1000a344
  %v2_1000a34c = sub i32 %v1_1000a348, %v0_1000a34c
  store i32 268477268, i32* @lr, align 4
  %v1_1000a350 = call i32 @function_1000b428(i32 %v2_1000a34c)
  br label %dec_label_pc_1000a35c

dec_label_pc_1000a35c:                            ; preds = %dec_label_pc_1000a300, %dec_label_pc_1000a338
  %v0_1000a35c = call i32 @function_1000ac08()
  br label %dec_label_pc_1000a360

dec_label_pc_1000a360:                            ; preds = %dec_label_pc_1000a274, %dec_label_pc_1000a35c
  %.0 = phi i32 [ undef, %dec_label_pc_1000a274 ], [ %v0_1000a35c, %dec_label_pc_1000a35c ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000a31c, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b428, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a360, { 1, 0 }
  uselistorder label %dec_label_pc_1000a35c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a338, { 1, 0 }
  uselistorder label %dec_label_pc_1000a31c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a300, { 1, 0 }
}

define i32 @function_1000a374(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a374:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000a374 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000a374, label %dec_label_pc_1000a390, label %dec_label_pc_1000a39c

dec_label_pc_1000a390:                            ; preds = %dec_label_pc_1000a374
  store i32 ptrtoint ([3 x i8]* @global_var_1000a394.348 to i32), i32* @lr, align 4
  %v0_1000a390 = call i32 @function_1000a274()
  br label %dec_label_pc_1000a3a8

dec_label_pc_1000a39c:                            ; preds = %dec_label_pc_1000a374
  %v3_1000a39c = icmp eq i32 %arg1, 0
  br i1 %v3_1000a39c, label %dec_label_pc_1000a3a8, label %dec_label_pc_1000a3b4

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a39c, %dec_label_pc_1000a390
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a390 ], [ %arg2, %dec_label_pc_1000a39c ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268477356, i32* @lr, align 4
  %v0_1000a3a8 = call i32 @function_1000a0ac()
  store i32 %v0_1000a3a8, i32* @r28, align 4
  br label %dec_label_pc_1000a48c

dec_label_pc_1000a3b4:                            ; preds = %dec_label_pc_1000a39c
  %v1_1000a3b4 = add i32 %arg2, 7
  %v1_1000a3b8 = add i32 %arg1, -4
  store i32 %v1_1000a3b8, i32* %r27.global-to-local, align 4
  %v1_1000a3bc = call i32 @__asm_rlwinm(i32 %v1_1000a3b4, i32 0, i32 0, i32 29)
  store i32 %v1_1000a3bc, i32* @r31, align 4
  %v2_1000a3c0 = inttoptr i32 %v1_1000a3b8 to i32*
  %v3_1000a3c0 = load i32, i32* %v2_1000a3c0, align 4
  store i32 %v3_1000a3c0, i32* @r30, align 4
  %v2_1000a3c4 = icmp ugt i32 %v1_1000a3bc, 11
  br i1 %v2_1000a3c4, label %dec_label_pc_1000a3d0, label %dec_label_pc_1000a3cc

dec_label_pc_1000a3cc:                            ; preds = %dec_label_pc_1000a3b4
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000a3d0

dec_label_pc_1000a3d0:                            ; preds = %dec_label_pc_1000a3b4, %dec_label_pc_1000a3cc
  %v0_1000a450 = phi i32 [ %v1_1000a3bc, %dec_label_pc_1000a3b4 ], [ 12, %dec_label_pc_1000a3cc ]
  %v3_1000a3d0 = icmp ugt i32 %v0_1000a450, %v3_1000a3c0
  br i1 %v3_1000a3d0, label %dec_label_pc_1000a3d8, label %dec_label_pc_1000a450

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a3d0
  store i32 ptrtoint (i32* @global_var_1001c390.340 to i32), i32* @r29, align 4
  %v0_1000a3e4 = call i32 @function_1000ac08()
  %v0_1000a3ec = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a3ec = load i32, i32* @r30, align 4
  %v2_1000a3ec = add i32 %v1_1000a3ec, %v0_1000a3ec
  %v1_1000a3f0 = load i32, i32* @r31, align 4
  %v2_1000a3f0 = sub i32 %v1_1000a3f0, %v1_1000a3ec
  %v4_1000a3f8 = call i32 @function_1000a544(i32* nonnull @global_var_1001c2b8, i32 %v2_1000a3ec, i32 %v2_1000a3f0)
  store i32 %v4_1000a3f8, i32* %r27.global-to-local, align 4
  %v0_1000a404 = call i32 @function_1000ac08()
  %v3_1000a408 = icmp eq i32 %v4_1000a3f8, 0
  br i1 %v3_1000a408, label %dec_label_pc_1000a41c, label %dec_label_pc_1000a410

dec_label_pc_1000a410:                            ; preds = %dec_label_pc_1000a3d8
  %v0_1000a410 = load i32, i32* @r30, align 4
  %v2_1000a410 = add i32 %v0_1000a410, %v4_1000a3f8
  %v1_1000a414 = load i32, i32* @r28, align 4
  %v2_1000a414 = add i32 %v1_1000a414, -4
  %v3_1000a414 = inttoptr i32 %v2_1000a414 to i32*
  store i32 %v2_1000a410, i32* %v3_1000a414, align 4
  br label %dec_label_pc_1000a48c

dec_label_pc_1000a41c:                            ; preds = %dec_label_pc_1000a3d8
  %v0_1000a41c = load i32, i32* @r31, align 4
  %v1_1000a41c = add i32 %v0_1000a41c, -4
  store i32 %v1_1000a41c, i32* @r3, align 4
  store i32 268477476, i32* @lr, align 4
  %v0_1000a420 = call i32 @function_1000a0ac()
  store i32 %v0_1000a420, i32* @r3, align 4
  store i32 %v0_1000a420, i32* @r31, align 4
  %v3_1000a424 = icmp eq i32 %v0_1000a420, 0
  br i1 %v3_1000a424, label %dec_label_pc_1000a42c, label %dec_label_pc_1000a434

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a41c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a48c

dec_label_pc_1000a434:                            ; preds = %dec_label_pc_1000a41c
  %v0_1000a434 = load i32, i32* @r28, align 4
  store i32 %v0_1000a434, i32* @r4, align 4
  %v0_1000a438 = load i32, i32* @r30, align 4
  %v1_1000a438 = add i32 %v0_1000a438, -4
  store i32 %v1_1000a438, i32* @r5, align 4
  store i32 268477504, i32* @lr, align 4
  %v0_1000a43c = call i32 @function_1000b65c()
  %v0_1000a440 = load i32, i32* @r28, align 4
  store i32 %v0_1000a440, i32* @r3, align 4
  store i32 268477512, i32* @lr, align 4
  %v0_1000a444 = call i32 @function_1000a274()
  %v0_1000a448 = load i32, i32* @r31, align 4
  store i32 %v0_1000a448, i32* @r28, align 4
  br label %dec_label_pc_1000a48c

dec_label_pc_1000a450:                            ; preds = %dec_label_pc_1000a3d0
  %v1_1000a450 = add i32 %v0_1000a450, 28
  %v3_1000a454 = icmp ugt i32 %v1_1000a450, %v3_1000a3c0
  br i1 %v3_1000a454, label %dec_label_pc_1000a48c, label %dec_label_pc_1000a45c

dec_label_pc_1000a45c:                            ; preds = %dec_label_pc_1000a450
  store i32 ptrtoint (i32* @global_var_1001c390.340 to i32), i32* @r29, align 4
  %v0_1000a468 = call i32 @function_1000ac08()
  %v0_1000a470 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a470 = load i32, i32* @r31, align 4
  %v2_1000a470 = add i32 %v1_1000a470, %v0_1000a470
  %v1_1000a474 = load i32, i32* @r30, align 4
  %v2_1000a474 = sub i32 %v1_1000a474, %v1_1000a470
  store i32 268477568, i32* @lr, align 4
  %v4_1000a47c = call i32 @function_1000a628(i32* nonnull @global_var_1001c2b8, i32 %v2_1000a470, i32 %v2_1000a474)
  %v0_1000a484 = call i32 @function_1000ac08()
  %v0_1000a488 = load i32, i32* @r31, align 4
  %v1_1000a488 = load i32, i32* @r28, align 4
  %v2_1000a488 = add i32 %v1_1000a488, -4
  %v3_1000a488 = inttoptr i32 %v2_1000a488 to i32*
  store i32 %v0_1000a488, i32* %v3_1000a488, align 4
  br label %dec_label_pc_1000a48c

dec_label_pc_1000a48c:                            ; preds = %dec_label_pc_1000a450, %dec_label_pc_1000a434, %dec_label_pc_1000a42c, %dec_label_pc_1000a410, %dec_label_pc_1000a3a8, %dec_label_pc_1000a45c
  %v0_1000a490 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a490

; uselistorder directives
  uselistorder i32 %v1_1000a470, { 1, 0 }
  uselistorder i32 %v4_1000a3f8, { 1, 0, 2 }
  uselistorder i32 %v1_1000a3ec, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001c2b8, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000a0ac, { 2, 1, 0, 5, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 ()* @function_1000a274, { 4, 3, 7, 6, 5, 11, 10, 9, 8, 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000a48c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a3d0, { 1, 0 }
}

define i32 @function_1000a4a4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a4a4:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000a4a4 = inttoptr i32 %arg2 to i32*
  %v2_1000a4a4 = load i32, i32* %v1_1000a4a4, align 4
  %v1_1000a4a8 = add i32 %v2_1000a4a4, 3
  store i32 %v1_1000a4a8, i32* %r9.global-to-local, align 4
  %v1_1000a4ac = call i32 @__asm_rlwinm(i32 %v1_1000a4a8, i32 0, i32 0, i32 29)
  %v2_1000a4b0 = icmp ugt i32 %v1_1000a4ac, 11
  br i1 %v2_1000a4b0, label %dec_label_pc_1000a534.preheader, label %dec_label_pc_1000a4b8

dec_label_pc_1000a4b8:                            ; preds = %dec_label_pc_1000a4a4
  br label %dec_label_pc_1000a534.preheader

dec_label_pc_1000a534.preheader:                  ; preds = %dec_label_pc_1000a4a4, %dec_label_pc_1000a4b8
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000a4b8 ], [ %v1_1000a4ac, %dec_label_pc_1000a4a4 ]
  %v0_1000a518 = phi i32 [ 12, %dec_label_pc_1000a4b8 ], [ %v1_1000a4ac, %dec_label_pc_1000a4a4 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000a5345 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000a5345, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a4c4

dec_label_pc_1000a4c4:                            ; preds = %dec_label_pc_1000a534.preheader, %dec_label_pc_1000a530
  %v0_1000a530 = phi i32 [ %storemerge, %dec_label_pc_1000a530 ], [ %storemerge2, %dec_label_pc_1000a534.preheader ]
  %v1_1000a4c4 = inttoptr i32 %v0_1000a530 to i32*
  %v2_1000a4c4 = load i32, i32* %v1_1000a4c4, align 4
  store i32 %v2_1000a4c4, i32* %r10.global-to-local, align 4
  %v2_1000a4c8 = icmp ult i32 %v2_1000a4c4, %v0_1000a518
  br i1 %v2_1000a4c8, label %dec_label_pc_1000a530, label %dec_label_pc_1000a4d0

dec_label_pc_1000a4d0:                            ; preds = %dec_label_pc_1000a4c4
  %v1_1000a4d0 = add i32 %v0_1000a518, 44
  %v2_1000a4d4 = icmp ult i32 %v2_1000a4c4, %v1_1000a4d0
  br i1 %v2_1000a4d4, label %dec_label_pc_1000a4dc, label %dec_label_pc_1000a518

dec_label_pc_1000a4dc:                            ; preds = %dec_label_pc_1000a4d0
  %v1_1000a4dc = add i32 %v0_1000a530, 4
  %v2_1000a4dc = inttoptr i32 %v1_1000a4dc to i32*
  %v3_1000a4dc = load i32, i32* %v2_1000a4dc, align 4
  store i32 %v3_1000a4dc, i32* %r11.global-to-local, align 4
  %v3_1000a4e0 = icmp eq i32 %v3_1000a4dc, 0
  br i1 %v3_1000a4e0, label %dec_label_pc_1000a4f0, label %dec_label_pc_1000a4e8

dec_label_pc_1000a4e8:                            ; preds = %dec_label_pc_1000a4dc
  %v1_1000a4e8 = add i32 %v0_1000a530, 8
  %v2_1000a4e8 = inttoptr i32 %v1_1000a4e8 to i32*
  %v3_1000a4e8 = load i32, i32* %v2_1000a4e8, align 4
  %v2_1000a4ec = add i32 %v3_1000a4dc, 8
  %v3_1000a4ec = inttoptr i32 %v2_1000a4ec to i32*
  store i32 %v3_1000a4e8, i32* %v3_1000a4ec, align 4
  %v0_1000a4f0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000a50c.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4dc, %dec_label_pc_1000a4e8
  %v0_1000a50c = phi i32 [ %v2_1000a4c4, %dec_label_pc_1000a4dc ], [ %v0_1000a50c.pre, %dec_label_pc_1000a4e8 ]
  %v0_1000a4f0 = phi i32 [ %v0_1000a530, %dec_label_pc_1000a4dc ], [ %v0_1000a4f0.pre, %dec_label_pc_1000a4e8 ]
  %v1_1000a4f0 = add i32 %v0_1000a4f0, 8
  %v2_1000a4f0 = inttoptr i32 %v1_1000a4f0 to i32*
  %v3_1000a4f0 = load i32, i32* %v2_1000a4f0, align 4
  %v1_1000a4f4 = add i32 %v0_1000a4f0, 4
  %v2_1000a4f4 = inttoptr i32 %v1_1000a4f4 to i32*
  %v3_1000a4f4 = load i32, i32* %v2_1000a4f4, align 4
  %v3_1000a4f8 = icmp eq i32 %v3_1000a4f0, 0
  store i32 %v0_1000a50c, i32* %r11.global-to-local, align 4
  br i1 %v3_1000a4f8, label %dec_label_pc_1000a50c, label %dec_label_pc_1000a500

dec_label_pc_1000a500:                            ; preds = %dec_label_pc_1000a4f0
  %v2_1000a504 = add i32 %v3_1000a4f0, 4
  %v3_1000a504 = inttoptr i32 %v2_1000a504 to i32*
  store i32 %v3_1000a4f4, i32* %v3_1000a504, align 4
  br label %dec_label_pc_1000a520

dec_label_pc_1000a50c:                            ; preds = %dec_label_pc_1000a4f0
  store i32 %v3_1000a4f4, i32* %arg1, align 4
  br label %dec_label_pc_1000a520

dec_label_pc_1000a518:                            ; preds = %dec_label_pc_1000a4d0
  %v2_1000a518 = sub i32 %v2_1000a4c4, %v0_1000a518
  store i32 %v2_1000a518, i32* %v1_1000a4c4, align 4
  br label %dec_label_pc_1000a520

dec_label_pc_1000a520:                            ; preds = %dec_label_pc_1000a50c, %dec_label_pc_1000a500, %dec_label_pc_1000a518
  %v0_1000a520 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a520 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a520 = sub i32 %v1_1000a520, %v0_1000a520
  store i32 %v2_1000a520, i32* %r9.global-to-local, align 4
  %v0_1000a524 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a524, i32* %v1_1000a4a4, align 4
  %v0_1000a528 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a528 = add i32 %v0_1000a528, 12
  ret i32 %v1_1000a528

dec_label_pc_1000a530:                            ; preds = %dec_label_pc_1000a4c4
  %v1_1000a530 = add i32 %v0_1000a530, 4
  %storemerge.in = inttoptr i32 %v1_1000a530 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000a534 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000a534, label %dec_label_pc_1000a534.dec_label_pc_1000a53c_crit_edge, label %dec_label_pc_1000a4c4

dec_label_pc_1000a534.dec_label_pc_1000a53c_crit_edge: ; preds = %dec_label_pc_1000a530
  br label %dec_label_pc_1000a53c

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a534.dec_label_pc_1000a53c_crit_edge, %dec_label_pc_1000a534.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000a4f0, { 1, 0 }
  uselistorder i32 %v2_1000a4c4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000a530, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000a518, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a520, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a4f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a534.preheader, { 1, 0 }
}

define i32 @function_1000a544(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a544:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000a544 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a544, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000a54c = add i32 %arg3, 3
  %v3_1000a5d03 = icmp eq i32 %v2_1000a544, 0
  br i1 %v3_1000a5d03, label %dec_label_pc_1000a5d8, label %dec_label_pc_1000a554

dec_label_pc_1000a554:                            ; preds = %dec_label_pc_1000a544, %dec_label_pc_1000a5cc
  %v0_1000a5cc = phi i32 [ %v3_1000a5cc, %dec_label_pc_1000a5cc ], [ %v2_1000a544, %dec_label_pc_1000a544 ]
  %v1_1000a554 = inttoptr i32 %v0_1000a5cc to i32*
  %v2_1000a554 = load i32, i32* %v1_1000a554, align 4
  %v2_1000a558 = sub i32 %v0_1000a5cc, %v2_1000a554
  %v1_1000a55c = add i32 %v2_1000a558, 12
  %v3_1000a560 = icmp ugt i32 %v1_1000a55c, %arg2
  br i1 %v3_1000a560, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a568

dec_label_pc_1000a568:                            ; preds = %dec_label_pc_1000a554
  %v4_1000a560 = icmp eq i32 %v1_1000a55c, %arg2
  br i1 %v4_1000a560, label %dec_label_pc_1000a570, label %dec_label_pc_1000a5d8

dec_label_pc_1000a570:                            ; preds = %dec_label_pc_1000a568
  %v1_1000a570 = call i32 @__asm_rlwinm(i32 %v1_1000a54c, i32 0, i32 0, i32 29)
  %v2_1000a574 = icmp ult i32 %v2_1000a554, %v1_1000a570
  br i1 %v2_1000a574, label %dec_label_pc_1000a5d8, label %dec_label_pc_1000a57c

dec_label_pc_1000a57c:                            ; preds = %dec_label_pc_1000a570
  %v1_1000a57c = add i32 %v1_1000a570, 44
  %v2_1000a580 = icmp ult i32 %v2_1000a554, %v1_1000a57c
  br i1 %v2_1000a580, label %dec_label_pc_1000a588, label %dec_label_pc_1000a5bc

dec_label_pc_1000a588:                            ; preds = %dec_label_pc_1000a57c
  %v0_1000a588 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a588 = add i32 %v0_1000a588, 4
  %v2_1000a588 = inttoptr i32 %v1_1000a588 to i32*
  %v3_1000a588 = load i32, i32* %v2_1000a588, align 4
  %v3_1000a58c = icmp eq i32 %v3_1000a588, 0
  br i1 %v3_1000a58c, label %dec_label_pc_1000a59c, label %dec_label_pc_1000a594

dec_label_pc_1000a594:                            ; preds = %dec_label_pc_1000a588
  %v1_1000a594 = add i32 %v0_1000a588, 8
  %v2_1000a594 = inttoptr i32 %v1_1000a594 to i32*
  %v3_1000a594 = load i32, i32* %v2_1000a594, align 4
  %v2_1000a598 = add i32 %v3_1000a588, 8
  %v3_1000a598 = inttoptr i32 %v2_1000a598 to i32*
  store i32 %v3_1000a594, i32* %v3_1000a598, align 4
  %v0_1000a59c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a59c

dec_label_pc_1000a59c:                            ; preds = %dec_label_pc_1000a588, %dec_label_pc_1000a594
  %v0_1000a59c = phi i32 [ %v0_1000a588, %dec_label_pc_1000a588 ], [ %v0_1000a59c.pre, %dec_label_pc_1000a594 ]
  %v1_1000a59c = add i32 %v0_1000a59c, 8
  %v2_1000a59c = inttoptr i32 %v1_1000a59c to i32*
  %v3_1000a59c = load i32, i32* %v2_1000a59c, align 4
  %v1_1000a5a0 = add i32 %v0_1000a59c, 4
  %v2_1000a5a0 = inttoptr i32 %v1_1000a5a0 to i32*
  %v3_1000a5a0 = load i32, i32* %v2_1000a5a0, align 4
  %v3_1000a5a4 = icmp eq i32 %v3_1000a59c, 0
  br i1 %v3_1000a5a4, label %dec_label_pc_1000a5b4, label %dec_label_pc_1000a5ac

dec_label_pc_1000a5ac:                            ; preds = %dec_label_pc_1000a59c
  %v2_1000a5ac = add i32 %v3_1000a59c, 4
  %v3_1000a5ac = inttoptr i32 %v2_1000a5ac to i32*
  store i32 %v3_1000a5a0, i32* %v3_1000a5ac, align 4
  ret i32 %v2_1000a554

dec_label_pc_1000a5b4:                            ; preds = %dec_label_pc_1000a59c
  %v1_1000a5b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a5b4 = inttoptr i32 %v1_1000a5b4 to i32*
  store i32 %v3_1000a5a0, i32* %v2_1000a5b4, align 4
  ret i32 %v2_1000a554

dec_label_pc_1000a5bc:                            ; preds = %dec_label_pc_1000a57c
  %v2_1000a5bc = sub i32 %v2_1000a554, %v1_1000a570
  %v1_1000a5c4 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a5c4 = inttoptr i32 %v1_1000a5c4 to i32*
  store i32 %v2_1000a5bc, i32* %v2_1000a5c4, align 4
  ret i32 %v1_1000a570

dec_label_pc_1000a5cc:                            ; preds = %dec_label_pc_1000a554
  %v1_1000a5cc = add i32 %v0_1000a5cc, 4
  %v2_1000a5cc = inttoptr i32 %v1_1000a5cc to i32*
  %v3_1000a5cc = load i32, i32* %v2_1000a5cc, align 4
  store i32 %v3_1000a5cc, i32* %r11.global-to-local, align 4
  %v3_1000a5d0 = icmp eq i32 %v3_1000a5cc, 0
  br i1 %v3_1000a5d0, label %dec_label_pc_1000a5d0.dec_label_pc_1000a5d8.loopexit_crit_edge, label %dec_label_pc_1000a554

dec_label_pc_1000a5d0.dec_label_pc_1000a5d8.loopexit_crit_edge: ; preds = %dec_label_pc_1000a5cc
  br label %dec_label_pc_1000a5d8

dec_label_pc_1000a5d8:                            ; preds = %dec_label_pc_1000a544, %dec_label_pc_1000a5d0.dec_label_pc_1000a5d8.loopexit_crit_edge, %dec_label_pc_1000a568, %dec_label_pc_1000a570
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000a5cc, { 1, 2, 0 }
  uselistorder i32 %v0_1000a59c, { 1, 0 }
  uselistorder i32 %v1_1000a570, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a554, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000a5cc, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5d8, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000a59c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a554, { 1, 0 }
}

define i32 @function_1000a5e0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a5e0:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a5e0 = icmp eq i32 %arg3, 0
  %v2_1000a5e4 = add i32 %arg2, 4
  %v3_1000a5e4 = inttoptr i32 %v2_1000a5e4 to i32*
  store i32 %arg4, i32* %v3_1000a5e4, align 4
  %v2_1000a5e8 = add i32 %arg2, 8
  %v3_1000a5e8 = inttoptr i32 %v2_1000a5e8 to i32*
  store i32 %arg3, i32* %v3_1000a5e8, align 4
  br i1 %v3_1000a5e0, label %dec_label_pc_1000a5f8, label %dec_label_pc_1000a5f0

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a5e0
  %v2_1000a5f0 = add i32 %arg3, 4
  %v3_1000a5f0 = inttoptr i32 %v2_1000a5f0 to i32*
  store i32 %arg2, i32* %v3_1000a5f0, align 4
  br label %dec_label_pc_1000a5fc

dec_label_pc_1000a5f8:                            ; preds = %dec_label_pc_1000a5e0
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a5fc

dec_label_pc_1000a5fc:                            ; preds = %dec_label_pc_1000a5f0, %dec_label_pc_1000a5f8
  %v3_1000a5fc = icmp eq i32 %arg4, 0
  %v0_1000a600 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a5fc, i32 %v0_1000a600)
  %v2_1000a604 = add i32 %arg4, 8
  %v3_1000a604 = inttoptr i32 %v2_1000a604 to i32*
  store i32 %arg2, i32* %v3_1000a604, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_1000a5fc, { 1, 0 }
}

define i32 @function_1000a60c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a60c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a60c = icmp eq i32 %arg3, 0
  br i1 %v3_1000a60c, label %dec_label_pc_1000a61c, label %dec_label_pc_1000a614

dec_label_pc_1000a614:                            ; preds = %dec_label_pc_1000a60c
  %v2_1000a614 = add i32 %arg3, 4
  %v3_1000a614 = inttoptr i32 %v2_1000a614 to i32*
  store i32 %arg2, i32* %v3_1000a614, align 4
  br label %dec_label_pc_1000a620

dec_label_pc_1000a61c:                            ; preds = %dec_label_pc_1000a60c
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a620

dec_label_pc_1000a620:                            ; preds = %dec_label_pc_1000a614, %dec_label_pc_1000a61c
  %v2_1000a620 = add i32 %arg2, 8
  %v3_1000a620 = inttoptr i32 %v2_1000a620 to i32*
  store i32 %arg3, i32* %v3_1000a620, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a620, { 1, 0 }
}

define i32 @function_1000a628(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a628:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000a640 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a640, i32* @r31, align 4
  %v2_1000a644 = add i32 %arg3, %arg2
  store i32 %v2_1000a644, i32* %r3.global-to-local, align 4
  %v3_1000a6587 = icmp eq i32 %v2_1000a640, 0
  %v1_1000a65c8 = add i32 %v2_1000a640, 12
  %tmp69 = icmp uge i32 %v1_1000a65c8, %arg2
  %or.cond10 = or i1 %v3_1000a6587, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000a668, label %dec_label_pc_1000a650

dec_label_pc_1000a650:                            ; preds = %dec_label_pc_1000a628, %dec_label_pc_1000a650
  %v0_1000a6b011 = phi i32 [ %v3_1000a654, %dec_label_pc_1000a650 ], [ %v2_1000a640, %dec_label_pc_1000a628 ]
  store i32 %v0_1000a6b011, i32* %r11.global-to-local, align 4
  %v1_1000a654 = add i32 %v0_1000a6b011, 4
  %v2_1000a654 = inttoptr i32 %v1_1000a654 to i32*
  %v3_1000a654 = load i32, i32* %v2_1000a654, align 4
  store i32 %v3_1000a654, i32* @r31, align 4
  %v3_1000a658 = icmp eq i32 %v3_1000a654, 0
  %v1_1000a65c = add i32 %v3_1000a654, 12
  %tmp6 = icmp uge i32 %v1_1000a65c, %arg2
  %or.cond = or i1 %v3_1000a658, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000a668, label %dec_label_pc_1000a650

dec_label_pc_1000a668:                            ; preds = %dec_label_pc_1000a650, %dec_label_pc_1000a628
  %v0_1000a6a4.lcssa = phi i32 [ 0, %dec_label_pc_1000a628 ], [ %v0_1000a6b011, %dec_label_pc_1000a650 ]
  %v0_1000a6b0.lcssa = phi i32 [ %v2_1000a640, %dec_label_pc_1000a628 ], [ %v3_1000a654, %dec_label_pc_1000a650 ]
  %v3_1000a658.lcssa = phi i1 [ %v3_1000a6587, %dec_label_pc_1000a628 ], [ %v3_1000a658, %dec_label_pc_1000a650 ]
  br i1 %v3_1000a658.lcssa, label %dec_label_pc_1000a720, label %dec_label_pc_1000a670

dec_label_pc_1000a670:                            ; preds = %dec_label_pc_1000a668
  %v1_1000a670 = inttoptr i32 %v0_1000a6b0.lcssa to i32*
  %v2_1000a670 = load i32, i32* %v1_1000a670, align 4
  %v2_1000a674 = sub i32 %v0_1000a6b0.lcssa, %v2_1000a670
  %v1_1000a678 = add i32 %v2_1000a674, 12
  %v3_1000a67c = icmp ugt i32 %v1_1000a678, %v2_1000a644
  br i1 %v3_1000a67c, label %dec_label_pc_1000a720, label %dec_label_pc_1000a684

dec_label_pc_1000a684:                            ; preds = %dec_label_pc_1000a670
  %v4_1000a67c = icmp eq i32 %v1_1000a678, %v2_1000a644
  %v2_1000a688 = add i32 %v2_1000a670, %arg3
  store i32 %v2_1000a688, i32* @r29, align 4
  br i1 %v4_1000a67c, label %dec_label_pc_1000a690, label %dec_label_pc_1000a6c0

dec_label_pc_1000a690:                            ; preds = %dec_label_pc_1000a684
  %v3_1000a690 = icmp eq i32 %v0_1000a6a4.lcssa, 0
  br i1 %v3_1000a690, label %dec_label_pc_1000a714, label %dec_label_pc_1000a698

dec_label_pc_1000a698:                            ; preds = %dec_label_pc_1000a690
  %v1_1000a698 = add i32 %v0_1000a6a4.lcssa, 12
  %v4_1000a69c = icmp eq i32 %v1_1000a698, %arg2
  br i1 %v4_1000a69c, label %dec_label_pc_1000a6a4, label %dec_label_pc_1000a714

dec_label_pc_1000a6a4:                            ; preds = %dec_label_pc_1000a698
  %v1_1000a6a4 = inttoptr i32 %v0_1000a6a4.lcssa to i32*
  %v2_1000a6a4 = load i32, i32* %v1_1000a6a4, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000a6ac = add i32 %v0_1000a6a4.lcssa, 8
  %v2_1000a6ac = inttoptr i32 %v1_1000a6ac to i32*
  %v3_1000a6ac = load i32, i32* %v2_1000a6ac, align 4
  %v2_1000a6b4 = add i32 %v2_1000a6a4, %v2_1000a688
  store i32 %v2_1000a6b4, i32* @r29, align 4
  %v5_1000a6b8 = call i32 @function_1000a60c(i32* %arg1, i32 %v0_1000a6b0.lcssa, i32 %v3_1000a6ac, i32 %v2_1000a644)
  store i32 %v5_1000a6b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a714

dec_label_pc_1000a6c0:                            ; preds = %dec_label_pc_1000a684
  %v1_1000a6c0 = add i32 %v0_1000a6b0.lcssa, 4
  %v2_1000a6c0 = inttoptr i32 %v1_1000a6c0 to i32*
  %v3_1000a6c0 = load i32, i32* %v2_1000a6c0, align 4
  %v3_1000a6c4 = icmp eq i32 %v3_1000a6c0, 0
  br i1 %v3_1000a6c4, label %dec_label_pc_1000a6fc, label %dec_label_pc_1000a6cc

dec_label_pc_1000a6cc:                            ; preds = %dec_label_pc_1000a6c0
  %v1_1000a6cc = inttoptr i32 %v3_1000a6c0 to i32*
  %v2_1000a6cc = load i32, i32* %v1_1000a6cc, align 4
  %v2_1000a6d0 = sub i32 %v3_1000a6c0, %v2_1000a6cc
  %v1_1000a6d4 = add i32 %v2_1000a6d0, 12
  %v4_1000a6d8 = icmp eq i32 %v2_1000a644, %v1_1000a6d4
  br i1 %v4_1000a6d8, label %dec_label_pc_1000a6e0, label %dec_label_pc_1000a6fc

dec_label_pc_1000a6e0:                            ; preds = %dec_label_pc_1000a6cc
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000a6ec = add i32 %v2_1000a6cc, %v2_1000a688
  store i32 %v2_1000a6ec, i32* @r29, align 4
  store i32 %v3_1000a6c0, i32* @r31, align 4
  %v5_1000a6f4 = call i32 @function_1000a60c(i32* %arg1, i32 %v3_1000a6c0, i32 %v0_1000a6a4.lcssa, i32 %v2_1000a644)
  store i32 %v5_1000a6f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a714

dec_label_pc_1000a6fc:                            ; preds = %dec_label_pc_1000a6cc, %dec_label_pc_1000a6c0
  %v2_1000a6fc = add i32 %v0_1000a6b0.lcssa, %arg3
  store i32 %v2_1000a6fc, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268478228, i32* @lr, align 4
  %v5_1000a710 = call i32 @function_1000a5e0(i32* %arg1, i32 %v2_1000a6fc, i32 %v0_1000a6a4.lcssa, i32 %v3_1000a6c0)
  store i32 %v5_1000a710, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a714

dec_label_pc_1000a714:                            ; preds = %dec_label_pc_1000a698, %dec_label_pc_1000a690, %dec_label_pc_1000a6e0, %dec_label_pc_1000a6a4, %dec_label_pc_1000a6fc
  %v0_1000a714 = load i32, i32* @r31, align 4
  store i32 %v0_1000a714, i32* @r30, align 4
  %v0_1000a718 = load i32, i32* @r29, align 4
  %v2_1000a718 = inttoptr i32 %v0_1000a714 to i32*
  store i32 %v0_1000a718, i32* %v2_1000a718, align 4
  br label %dec_label_pc_1000a73c

dec_label_pc_1000a720:                            ; preds = %dec_label_pc_1000a670, %dec_label_pc_1000a668
  %v2_1000a720 = add i32 %v2_1000a644, -12
  %v3_1000a720 = inttoptr i32 %v2_1000a720 to i32*
  store i32 %arg3, i32* %v3_1000a720, align 4
  %v0_1000a724 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a724 = add i32 %v0_1000a724, -12
  store i32 %v1_1000a724, i32* @r30, align 4
  %v0_1000a728 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a72c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000a72c, i32* %r3.global-to-local, align 4
  %v0_1000a730 = load i32, i32* @r31, align 4
  store i32 268478268, i32* @lr, align 4
  %v4_1000a738 = inttoptr i32 %v0_1000a72c to i32*
  %v5_1000a738 = call i32 @function_1000a5e0(i32* %v4_1000a738, i32 %v1_1000a724, i32 %v0_1000a728, i32 %v0_1000a730)
  store i32 %v5_1000a738, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a73c

dec_label_pc_1000a73c:                            ; preds = %dec_label_pc_1000a714, %dec_label_pc_1000a720
  %v0_1000a740 = load i32, i32* @r30, align 4
  store i32 %v0_1000a740, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a740

; uselistorder directives
  uselistorder i32 %v3_1000a6c0, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000a678, { 1, 0 }
  uselistorder i32 %v0_1000a6b0.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000a6a4.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000a654, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000a644, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 7, 8, 9, 5, 10, 11, 1, 2, 3, 4, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_1000a60c, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000a73c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a714, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000a650, { 1, 0 }
}

define i32 @function_1000a754(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a754:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000a78c = load i32, i32* bitcast (i32** @global_var_1001c2c4.351 to i32*), align 4
  %v2_1000a79827 = load i8, i8* %arg1, align 1
  %v3_1000a79828 = zext i8 %v2_1000a79827 to i32
  %v1_1000a79c29 = mul nuw nsw i32 %v3_1000a79828, 2
  %v2_1000a7a030 = add i32 %v1_1000a79c29, %v3_1000a78c
  %v3_1000a7a031 = inttoptr i32 %v2_1000a7a030 to i16*
  %v4_1000a7a032 = load i16, i16* %v3_1000a7a031, align 2
  %v1_1000a7a434 = and i16 %v4_1000a7a032, 32
  %v3_1000a7a435 = icmp eq i16 %v1_1000a7a434, 0
  br i1 %v3_1000a7a435, label %dec_label_pc_1000a7ac, label %dec_label_pc_1000a794

dec_label_pc_1000a794:                            ; preds = %dec_label_pc_1000a754, %dec_label_pc_1000a794
  %v0_1000a7cc36 = phi i32 [ %v1_1000a794, %dec_label_pc_1000a794 ], [ %tmp, %dec_label_pc_1000a754 ]
  %v1_1000a794 = add i32 %v0_1000a7cc36, 1
  store i32 %v1_1000a794, i32* %r31.global-to-local, align 4
  %v1_1000a798 = inttoptr i32 %v1_1000a794 to i8*
  %v2_1000a798 = load i8, i8* %v1_1000a798, align 1
  %v3_1000a798 = zext i8 %v2_1000a798 to i32
  %v1_1000a79c = mul nuw nsw i32 %v3_1000a798, 2
  %v2_1000a7a0 = add i32 %v1_1000a79c, %v3_1000a78c
  %v3_1000a7a0 = inttoptr i32 %v2_1000a7a0 to i16*
  %v4_1000a7a0 = load i16, i16* %v3_1000a7a0, align 2
  %v1_1000a7a4 = and i16 %v4_1000a7a0, 32
  %v3_1000a7a4 = icmp eq i16 %v1_1000a7a4, 0
  br i1 %v3_1000a7a4, label %dec_label_pc_1000a7ac, label %dec_label_pc_1000a794

dec_label_pc_1000a7ac:                            ; preds = %dec_label_pc_1000a794, %dec_label_pc_1000a754
  %v0_1000a7cc.lcssa = phi i32 [ %tmp, %dec_label_pc_1000a754 ], [ %v1_1000a794, %dec_label_pc_1000a794 ]
  %v2_1000a798.lcssa = phi i8 [ %v2_1000a79827, %dec_label_pc_1000a754 ], [ %v2_1000a798, %dec_label_pc_1000a794 ]
  %v3_1000a7ac = icmp eq i8 %v2_1000a798.lcssa, 43
  br i1 %v3_1000a7ac, label %dec_label_pc_1000a7cc, label %dec_label_pc_1000a7b4

dec_label_pc_1000a7b4:                            ; preds = %dec_label_pc_1000a7ac
  %v3_1000a7b4 = icmp eq i8 %v2_1000a798.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000a7b4, label %dec_label_pc_1000a7cc, label %dec_label_pc_1000a7d0

dec_label_pc_1000a7cc:                            ; preds = %dec_label_pc_1000a7ac, %dec_label_pc_1000a7b4
  %storemerge = phi i32 [ 1, %dec_label_pc_1000a7b4 ], [ 0, %dec_label_pc_1000a7ac ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000a7cc = add i32 %v0_1000a7cc.lcssa, 1
  store i32 %v1_1000a7cc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a7d0

dec_label_pc_1000a7d0:                            ; preds = %dec_label_pc_1000a7b4, %dec_label_pc_1000a7cc
  %v1_1000a7d0 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000a7d0 = icmp eq i32 %v1_1000a7d0, 0
  br i1 %v4_1000a7d0, label %dec_label_pc_1000a7dc, label %dec_label_pc_1000a7d0.dec_label_pc_1000a818_crit_edge

dec_label_pc_1000a7d0.dec_label_pc_1000a818_crit_edge: ; preds = %dec_label_pc_1000a7d0
  %v0_1000a818.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a818

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a7d0
  %v0_1000a7dc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a7dc = inttoptr i32 %v0_1000a7dc to i8*
  %v2_1000a7dc = load i8, i8* %v1_1000a7dc, align 1
  %v0_1000a7e0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a7e0 = add i32 %v0_1000a7e0, 10
  store i32 %v1_1000a7e0, i32* %r30.global-to-local, align 4
  %v3_1000a7e4 = icmp eq i8 %v2_1000a7dc, 48
  br i1 %v3_1000a7e4, label %dec_label_pc_1000a7ec, label %dec_label_pc_1000a80c

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a7dc
  %v1_1000a7ec = add i32 %v0_1000a7dc, 1
  %v2_1000a7ec = inttoptr i32 %v1_1000a7ec to i8*
  %v3_1000a7ec = load i8, i8* %v2_1000a7ec, align 1
  %v4_1000a7ec = zext i8 %v3_1000a7ec to i32
  store i32 %v1_1000a7ec, i32* %r31.global-to-local, align 4
  %v1_1000a7f0 = add i32 %v0_1000a7e0, 8
  store i32 %v1_1000a7f0, i32* %r30.global-to-local, align 4
  %v1_1000a7f4 = or i32 %v4_1000a7ec, 32
  %v3_1000a7fc = icmp eq i32 %v1_1000a7f4, 120
  br i1 %v3_1000a7fc, label %dec_label_pc_1000a804, label %dec_label_pc_1000a80c

dec_label_pc_1000a804:                            ; preds = %dec_label_pc_1000a7ec
  %v1_1000a804 = mul i32 %v1_1000a7f0, 2
  store i32 %v1_1000a804, i32* %r30.global-to-local, align 4
  %v1_1000a808 = add i32 %v0_1000a7dc, 2
  store i32 %v1_1000a808, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a80c

dec_label_pc_1000a80c:                            ; preds = %dec_label_pc_1000a7ec, %dec_label_pc_1000a7dc, %dec_label_pc_1000a804
  %v0_1000a8c015 = phi i32 [ %v1_1000a7ec, %dec_label_pc_1000a804 ], [ %tmp, %dec_label_pc_1000a7dc ], [ %v1_1000a7ec, %dec_label_pc_1000a7ec ]
  %v0_1000a80c = phi i32 [ %v1_1000a804, %dec_label_pc_1000a804 ], [ %v1_1000a7e0, %dec_label_pc_1000a7dc ], [ %v1_1000a7f0, %dec_label_pc_1000a7ec ]
  %tmp22 = icmp slt i32 %v0_1000a80c, 17
  br i1 %tmp22, label %dec_label_pc_1000a818, label %dec_label_pc_1000a814

dec_label_pc_1000a814:                            ; preds = %dec_label_pc_1000a80c
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a818

dec_label_pc_1000a818:                            ; preds = %dec_label_pc_1000a7d0.dec_label_pc_1000a818_crit_edge, %dec_label_pc_1000a80c, %dec_label_pc_1000a814
  %v0_1000a8c014 = phi i32 [ %tmp, %dec_label_pc_1000a7d0.dec_label_pc_1000a818_crit_edge ], [ %v0_1000a8c015, %dec_label_pc_1000a80c ], [ %v0_1000a8c015, %dec_label_pc_1000a814 ]
  %v1_1000a82c = phi i32 [ %v0_1000a818.pre, %dec_label_pc_1000a7d0.dec_label_pc_1000a818_crit_edge ], [ %v0_1000a80c, %dec_label_pc_1000a80c ], [ 16, %dec_label_pc_1000a814 ]
  %v1_1000a818 = add i32 %v1_1000a82c, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000a820 = icmp ugt i32 %v1_1000a818, 34
  br i1 %v2_1000a820, label %dec_label_pc_1000a8b8, label %dec_label_pc_1000a828

dec_label_pc_1000a828:                            ; preds = %dec_label_pc_1000a818
  %v2_1000a82c = udiv i32 -1, %v1_1000a82c
  store i32 %v2_1000a82c, i32* @r29, align 4
  %v2_1000a830 = mul i32 %v2_1000a82c, %v1_1000a82c
  %v1_1000a834 = sub i32 -1, %v2_1000a830
  %v1_1000a838 = urem i32 %v1_1000a834, 256
  store i32 %v1_1000a838, i32* @r27, align 4
  %v0_1000a844.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a844

dec_label_pc_1000a840:                            ; preds = %dec_label_pc_1000a8ac, %dec_label_pc_1000a894
  %v1_1000a848.pre = phi i32 [ %v1_1000a84c, %dec_label_pc_1000a8ac ], [ %v1_1000a848.pre.pre, %dec_label_pc_1000a894 ]
  %v0_1000a848.pre = phi i32 [ %v2_1000a8b0, %dec_label_pc_1000a8ac ], [ %v0_1000a848.pre.pre, %dec_label_pc_1000a894 ]
  %v0_1000a840 = phi i32 [ %v1_1000a850, %dec_label_pc_1000a8ac ], [ %v0_1000a840.pre, %dec_label_pc_1000a894 ]
  br label %dec_label_pc_1000a844

dec_label_pc_1000a844:                            ; preds = %dec_label_pc_1000a828, %dec_label_pc_1000a840
  %v0_1000a8c012 = phi i32 [ %v0_1000a8c014, %dec_label_pc_1000a828 ], [ %v0_1000a840, %dec_label_pc_1000a840 ]
  %v0_1000a850 = phi i32 [ %v0_1000a844.pre, %dec_label_pc_1000a828 ], [ %v0_1000a840, %dec_label_pc_1000a840 ]
  %v1_1000a84c = phi i32 [ %v2_1000a82c, %dec_label_pc_1000a828 ], [ %v1_1000a848.pre, %dec_label_pc_1000a840 ]
  %v0_1000a8ac = phi i32 [ 0, %dec_label_pc_1000a828 ], [ %v0_1000a848.pre, %dec_label_pc_1000a840 ]
  %v1_1000a844 = inttoptr i32 %v0_1000a850 to i8*
  %v2_1000a844 = load i8, i8* %v1_1000a844, align 1
  %v3_1000a844 = zext i8 %v2_1000a844 to i32
  %v3_1000a848 = icmp ugt i32 %v0_1000a8ac, %v1_1000a84c
  %v1_1000a850 = add i32 %v0_1000a850, 1
  store i32 %v1_1000a850, i32* %r31.global-to-local, align 4
  %v1_1000a854 = add nsw i32 %v3_1000a844, -48
  %v1_1000a858 = or i32 %v3_1000a844, 32
  %v1_1000a85c = urem i32 %v1_1000a854, 256
  %tmp23 = icmp ult i32 %v1_1000a85c, 10
  br i1 %tmp23, label %dec_label_pc_1000a87c, label %dec_label_pc_1000a86c

dec_label_pc_1000a86c:                            ; preds = %dec_label_pc_1000a844
  %tmp24 = icmp ult i32 %v1_1000a858, 97
  br i1 %tmp24, label %dec_label_pc_1000a87c, label %dec_label_pc_1000a878

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a86c
  %v1_1000a86c = add nsw i32 %v1_1000a858, -87
  %v1_1000a878 = urem i32 %v1_1000a86c, 256
  br label %dec_label_pc_1000a87c

dec_label_pc_1000a87c:                            ; preds = %dec_label_pc_1000a86c, %dec_label_pc_1000a844, %dec_label_pc_1000a878
  %v1_1000a8b0 = phi i32 [ 40, %dec_label_pc_1000a86c ], [ %v1_1000a85c, %dec_label_pc_1000a844 ], [ %v1_1000a878, %dec_label_pc_1000a878 ]
  %v1_1000a87c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a87c = icmp slt i32 %v1_1000a8b0, %v1_1000a87c
  br i1 %v2_1000a87c, label %dec_label_pc_1000a884, label %dec_label_pc_1000a8b8

dec_label_pc_1000a884:                            ; preds = %dec_label_pc_1000a87c
  br i1 %v3_1000a848, label %dec_label_pc_1000a894, label %dec_label_pc_1000a888

dec_label_pc_1000a888:                            ; preds = %dec_label_pc_1000a884
  %v1_1000a888 = load i32, i32* @r27, align 4
  %v0_1000a88c.not = icmp ne i32 %v0_1000a8ac, %v1_1000a84c
  %tmp25 = icmp ule i32 %v1_1000a8b0, %v1_1000a888
  %or.cond = or i1 %tmp25, %v0_1000a88c.not
  br i1 %or.cond, label %dec_label_pc_1000a8ac, label %dec_label_pc_1000a894

dec_label_pc_1000a894:                            ; preds = %dec_label_pc_1000a888, %dec_label_pc_1000a884
  %v0_1000a894 = call i32 @function_10009874()
  %v0_1000a898 = load i32, i32* @r28, align 4
  %v1_1000a898 = load i32, i32* %r26.global-to-local, align 4
  %v2_1000a898 = and i32 %v1_1000a898, %v0_1000a898
  store i32 %v2_1000a898, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000a8a4 = inttoptr i32 %v0_1000a894 to i32*
  store i32 34, i32* %v2_1000a8a4, align 4
  %v0_1000a840.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000a848.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a848.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a840

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a888
  %v2_1000a8ac = mul i32 %v1_1000a87c, %v0_1000a8ac
  %v2_1000a8b0 = add i32 %v2_1000a8ac, %v1_1000a8b0
  store i32 %v2_1000a8b0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a840

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a87c, %dec_label_pc_1000a818
  %v0_1000a8c0 = phi i32 [ %v0_1000a8c014, %dec_label_pc_1000a818 ], [ %v0_1000a8c012, %dec_label_pc_1000a87c ]
  %v0_1000a8b8 = load i32, i32* %r25.global-to-local, align 4
  %v3_1000a8b8 = icmp eq i32 %v0_1000a8b8, 0
  br i1 %v3_1000a8b8, label %dec_label_pc_1000a8c4, label %dec_label_pc_1000a8c0

dec_label_pc_1000a8c0:                            ; preds = %dec_label_pc_1000a8b8
  %v2_1000a8c0 = inttoptr i32 %v0_1000a8b8 to i32*
  store i32 %v0_1000a8c0, i32* %v2_1000a8c0, align 4
  br label %dec_label_pc_1000a8c4

dec_label_pc_1000a8c4:                            ; preds = %dec_label_pc_1000a8b8, %dec_label_pc_1000a8c0
  %v0_1000a8c4 = load i32, i32* %r26.global-to-local, align 4
  %v3_1000a8c4 = icmp eq i32 %v0_1000a8c4, 0
  %v0_1000a8c8 = load i32, i32* @r28, align 4
  %v1_1000a8c8 = sub i32 0, %v0_1000a8c8
  %tmp40 = lshr i32 %v1_1000a8c8, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000a908.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a8c4, label %dec_label_pc_1000a8f8, label %dec_label_pc_1000a8e0

dec_label_pc_1000a8e0:                            ; preds = %dec_label_pc_1000a8c4
  %v3_1000a8e0 = icmp ugt i32 %v0_1000a908.pre.pre, %tmp41
  br i1 %v3_1000a8e0, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000a8f8

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8e0
  %v0_1000a8e8 = call i32 @function_10009874()
  %v2_1000a8f0 = inttoptr i32 %v0_1000a8e8 to i32*
  store i32 34, i32* %v2_1000a8f0, align 4
  %v0_1000a8f4 = load i32, i32* @r31, align 4
  store i32 %v0_1000a8f4, i32* %r8.global-to-local, align 4
  %v0_1000a8f8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000a8f8

dec_label_pc_1000a8f8:                            ; preds = %dec_label_pc_1000a8c4, %dec_label_pc_1000a8e0, %dec_label_pc_1000a8e8
  %v0_1000a908.pre = phi i32 [ %v0_1000a908.pre.pre, %dec_label_pc_1000a8e0 ], [ %v0_1000a8f4, %dec_label_pc_1000a8e8 ], [ %v0_1000a908.pre.pre, %dec_label_pc_1000a8c4 ]
  %v0_1000a8f8 = phi i32 [ %v0_1000a8c8, %dec_label_pc_1000a8e0 ], [ %v0_1000a8f8.pre, %dec_label_pc_1000a8e8 ], [ %v0_1000a8c8, %dec_label_pc_1000a8c4 ]
  %v3_1000a8f8 = icmp eq i32 %v0_1000a8f8, 0
  br i1 %v3_1000a8f8, label %dec_label_pc_1000a904, label %dec_label_pc_1000a900

dec_label_pc_1000a900:                            ; preds = %dec_label_pc_1000a8f8
  %v1_1000a900 = sub i32 0, %v0_1000a908.pre
  store i32 %v1_1000a900, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a904

dec_label_pc_1000a904:                            ; preds = %dec_label_pc_1000a8f8, %dec_label_pc_1000a900
  %v0_1000a908 = phi i32 [ %v1_1000a900, %dec_label_pc_1000a900 ], [ %v0_1000a908.pre, %dec_label_pc_1000a8f8 ]
  ret i32 %v0_1000a908

; uselistorder directives
  uselistorder i32 %v0_1000a908.pre, { 1, 0 }
  uselistorder i32 %v0_1000a908.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000a8b0, { 1, 0 }
  uselistorder i32 %v1_1000a85c, { 1, 0 }
  uselistorder i32 %v1_1000a858, { 1, 0 }
  uselistorder i32 %v1_1000a850, { 1, 0 }
  uselistorder i32 %v3_1000a844, { 1, 0 }
  uselistorder i32 %v0_1000a8ac, { 1, 0, 2 }
  uselistorder i32 %v1_1000a84c, { 0, 2, 1 }
  uselistorder i32 %v0_1000a840, { 1, 0 }
  uselistorder i32 %v2_1000a82c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a804, { 1, 0 }
  uselistorder i32 %v1_1000a7f0, { 1, 0, 2 }
  uselistorder i8 %v2_1000a798.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000a794, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000a78c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32 34, { 0, 1, 3, 2 }
  uselistorder i32 26, { 6, 0, 4, 5, 1, 7, 2, 8, 3, 9 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a904, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a8c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a87c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a844, { 1, 0 }
  uselistorder label %dec_label_pc_1000a818, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a80c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a7d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a794, { 1, 0 }
}

define i32 @function_1000a91c() local_unnamed_addr {
dec_label_pc_1000a91c:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000a934 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000a940 = load i32, i32* @r3, align 4
  store i32 %v0_1000a940, i32* @r31, align 4
  store i32 %v2_1000a934, i32* @r3, align 4
  %v3_1000a94c = call i32 @function_1000ac10(i32 %v2_1000a934, i32 ptrtoint ([3 x i8]* @global_var_1000ac08.331 to i32))
  %v0_1000a954 = call i32 @function_1000ac08()
  %v3_1000a95c = load i32, i32* @global_var_1001c308.354, align 4
  %v3_1000a960 = icmp eq i32 %v3_1000a95c, 0
  br i1 %v3_1000a960, label %dec_label_pc_1000a974, label %dec_label_pc_1000a968

dec_label_pc_1000a968:                            ; preds = %dec_label_pc_1000a91c
  %v0_1000a968 = load i32, i32* @r31, align 4
  %v3_1000a970 = call i32 @unknown_0(i32 %v0_1000a968, i32 268566528)
  br label %dec_label_pc_1000a974

dec_label_pc_1000a974:                            ; preds = %dec_label_pc_1000a91c, %dec_label_pc_1000a968
  store i32 %v2_1000a934, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000a97c = call i32 @function_1000ac10(i32 %v2_1000a934, i32 1)
  store i32 %v2_1000a97c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000a984.356 to i32), i32* @lr, align 4
  %v1_1000a980 = call i32 @function_1000ab74(i32 %v2_1000a97c)
  %v0_1000a998 = load i32, i32* @r31, align 4
  %v1_1000a99c = call i32 @function_1000afa8(i32 %v0_1000a998)
  ret i32 %v1_1000a99c

; uselistorder directives
  uselistorder i32 %v2_1000a934, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000ac10, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000a974, { 1, 0 }
}

define i32 @function_1000a9a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a9a0:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000a9a0 = icmp eq i32 %arg1, 0
  br i1 %v3_1000a9a0, label %dec_label_pc_1000ab54, label %dec_label_pc_1000a9d0.lr.ph

dec_label_pc_1000a9d0.lr.ph:                      ; preds = %dec_label_pc_1000a9a0
  %v2_1000a9c4 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000a9c4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a9d042 = add i32 %v2_1000a9c4, 132
  %v3_1000a9d043 = inttoptr i32 %v2_1000a9d042 to i32*
  store i32 0, i32* %v3_1000a9d043, align 4
  %v0_1000a9d444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a9d445 = add i32 %v0_1000a9d444, -1
  store i32 %v1_1000a9d445, i32* %r11.global-to-local, align 4
  %v1_1000a9d846 = mul i32 %v1_1000a9d445, 4
  %v1_1000a9dc47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a9dc48 = add i32 %v1_1000a9dc47, %v1_1000a9d846
  %v0_1000a9e049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9e050 = add i32 %v0_1000a9e049, -1
  store i32 %v1_1000a9e050, i32* %ctr.global-to-local, align 4
  %v2_1000a9e051 = icmp eq i32 %v1_1000a9e050, 0
  br i1 %v2_1000a9e051, label %dec_label_pc_1000a9e4, label %dec_label_pc_1000a9d0.dec_label_pc_1000a9d0_crit_edge

dec_label_pc_1000a9d0.dec_label_pc_1000a9d0_crit_edge: ; preds = %dec_label_pc_1000a9d0.lr.ph, %dec_label_pc_1000a9d0.dec_label_pc_1000a9d0_crit_edge
  %v2_1000a9dc52 = phi i32 [ %v2_1000a9dc, %dec_label_pc_1000a9d0.dec_label_pc_1000a9d0_crit_edge ], [ %v2_1000a9dc48, %dec_label_pc_1000a9d0.lr.ph ]
  %v0_1000a9d0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a9d0 = add i32 %v2_1000a9dc52, 8
  %v3_1000a9d0 = inttoptr i32 %v2_1000a9d0 to i32*
  store i32 %v0_1000a9d0.pre, i32* %v3_1000a9d0, align 4
  %v0_1000a9d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a9d4 = add i32 %v0_1000a9d4, -1
  store i32 %v1_1000a9d4, i32* %r11.global-to-local, align 4
  %v1_1000a9d8 = mul i32 %v1_1000a9d4, 4
  %v1_1000a9dc = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a9dc = add i32 %v1_1000a9dc, %v1_1000a9d8
  %v0_1000a9e0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9e0 = add i32 %v0_1000a9e0, -1
  store i32 %v1_1000a9e0, i32* %ctr.global-to-local, align 4
  %v2_1000a9e0 = icmp eq i32 %v1_1000a9e0, 0
  br i1 %v2_1000a9e0, label %dec_label_pc_1000a9e4, label %dec_label_pc_1000a9d0.dec_label_pc_1000a9d0_crit_edge

dec_label_pc_1000a9e4:                            ; preds = %dec_label_pc_1000a9d0.dec_label_pc_1000a9d0_crit_edge, %dec_label_pc_1000a9d0.lr.ph
  %v0_1000a9f8.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a9e4 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000a9e4, i32* @r29, align 4
  store i32 %v2_1000a9e4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000a9f8.pre, i32* %stack_var_-440, align 4
  %v0_1000a9fc = call i32 @function_1000a05c()
  store i32 %v0_1000a9fc, i32* %r3.global-to-local, align 4
  %v1_1000aa00 = icmp slt i32 %v0_1000a9fc, 0
  br i1 %v1_1000aa00, label %dec_label_pc_1000ab5c, label %dec_label_pc_1000aa08

dec_label_pc_1000aa08:                            ; preds = %dec_label_pc_1000a9e4
  %v2_1000aa08 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000aa08, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268479004, i32* @lr, align 4
  %v3_1000aa18 = call i32 @function_100094b0(i32 0, i32 %v2_1000a9e4, i32 %v2_1000aa08)
  store i32 %v3_1000aa18, i32* %r3.global-to-local, align 4
  %v3_1000aa1c = icmp eq i32 %v3_1000aa18, 0
  br i1 %v3_1000aa1c, label %dec_label_pc_1000aa24, label %dec_label_pc_1000ab5c

dec_label_pc_1000aa24:                            ; preds = %dec_label_pc_1000aa08
  store i32 %v2_1000aa08, i32* %r3.global-to-local, align 4
  %v2_1000aa2c = call i32 @function_1000a034(i32 %v2_1000aa08, i32 17)
  store i32 %v2_1000aa2c, i32* %r3.global-to-local, align 4
  %v3_1000aa30 = icmp eq i32 %v2_1000aa2c, 0
  br i1 %v3_1000aa30, label %dec_label_pc_1000aa50.lr.ph, label %dec_label_pc_1000ab1c

dec_label_pc_1000aa50.lr.ph:                      ; preds = %dec_label_pc_1000aa24
  store i32 %v2_1000a9c4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000a9d043, align 4
  %v0_1000aa5433 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000aa5434 = add i32 %v0_1000aa5433, -1
  store i32 %v1_1000aa5434, i32* %r11.global-to-local, align 4
  %v1_1000aa5835 = mul i32 %v1_1000aa5434, 4
  %v1_1000aa5c36 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000aa5c37 = add i32 %v1_1000aa5c36, %v1_1000aa5835
  %v0_1000aa6038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000aa6039 = add i32 %v0_1000aa6038, -1
  store i32 %v1_1000aa6039, i32* %ctr.global-to-local, align 4
  %v2_1000aa6040 = icmp eq i32 %v1_1000aa6039, 0
  br i1 %v2_1000aa6040, label %dec_label_pc_1000aa64, label %dec_label_pc_1000aa50.dec_label_pc_1000aa50_crit_edge

dec_label_pc_1000aa50.dec_label_pc_1000aa50_crit_edge: ; preds = %dec_label_pc_1000aa50.lr.ph, %dec_label_pc_1000aa50.dec_label_pc_1000aa50_crit_edge
  %v2_1000aa5c41 = phi i32 [ %v2_1000aa5c, %dec_label_pc_1000aa50.dec_label_pc_1000aa50_crit_edge ], [ %v2_1000aa5c37, %dec_label_pc_1000aa50.lr.ph ]
  %v0_1000aa50.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000aa50 = add i32 %v2_1000aa5c41, 8
  %v3_1000aa50 = inttoptr i32 %v2_1000aa50 to i32*
  store i32 %v0_1000aa50.pre, i32* %v3_1000aa50, align 4
  %v0_1000aa54 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000aa54 = add i32 %v0_1000aa54, -1
  store i32 %v1_1000aa54, i32* %r11.global-to-local, align 4
  %v1_1000aa58 = mul i32 %v1_1000aa54, 4
  %v1_1000aa5c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000aa5c = add i32 %v1_1000aa5c, %v1_1000aa58
  %v0_1000aa60 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000aa60 = add i32 %v0_1000aa60, -1
  store i32 %v1_1000aa60, i32* %ctr.global-to-local, align 4
  %v2_1000aa60 = icmp eq i32 %v1_1000aa60, 0
  br i1 %v2_1000aa60, label %dec_label_pc_1000aa64, label %dec_label_pc_1000aa50.dec_label_pc_1000aa50_crit_edge

dec_label_pc_1000aa64:                            ; preds = %dec_label_pc_1000aa50.dec_label_pc_1000aa50_crit_edge, %dec_label_pc_1000aa50.lr.ph
  store i32 %v2_1000a9e4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000aa6c = call i32 @function_1000a05c()
  store i32 %v0_1000aa6c, i32* %r3.global-to-local, align 4
  %v1_1000aa70 = icmp slt i32 %v0_1000aa6c, 0
  br i1 %v1_1000aa70, label %dec_label_pc_1000ab5c, label %dec_label_pc_1000aa78

dec_label_pc_1000aa78:                            ; preds = %dec_label_pc_1000aa64
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000aa80 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268479112, i32* @lr, align 4
  %v4_1000aa84 = call i32 @function_1000b7ec(i32 17, i32* null, i32 %v2_1000aa80)
  store i32 %v4_1000aa84, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000aa84, -1
  br i1 %tmp30, label %dec_label_pc_1000aab8, label %dec_label_pc_1000aa90

dec_label_pc_1000aa90:                            ; preds = %dec_label_pc_1000aa78
  %v0_1000aa90 = call i32 @function_10009874()
  store i32 %v0_1000aa90, i32* %r3.global-to-local, align 4
  %v1_1000aa98 = inttoptr i32 %v0_1000aa90 to i32*
  %v2_1000aa98 = load i32, i32* %v1_1000aa98, align 4
  store i32 %v2_1000aa98, i32* @r28, align 4
  store i32 %v0_1000aa90, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479148, i32* @lr, align 4
  %v3_1000aaa8 = call i32 @function_100094b0(i32 2, i32 %v2_1000aa08, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000aab0 = load i32, i32* @r28, align 4
  %v1_1000aab0 = load i32, i32* @r29, align 4
  %v2_1000aab0 = inttoptr i32 %v1_1000aab0 to i32*
  store i32 %v0_1000aab0, i32* %v2_1000aab0, align 4
  %v0_1000ab70.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab60

dec_label_pc_1000aab8:                            ; preds = %dec_label_pc_1000aa78
  %v3_1000aab8 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000aa08, i32* @r28, align 4
  %v3_1000aac4 = icmp eq i32 %v3_1000aab8, 1
  br i1 %v3_1000aac4, label %dec_label_pc_1000aacc, label %dec_label_pc_1000ab00

dec_label_pc_1000aacc:                            ; preds = %dec_label_pc_1000aab8
  store i32 %v2_1000a9c4, i32* %r3.global-to-local, align 4
  store i32 268479192, i32* @lr, align 4
  %v2_1000aad4 = call i32 @function_1000b3e0(i32 %v2_1000a9c4, i32 %v2_1000a9c4)
  store i32 %v2_1000aad4, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aad4, i32* @r31, align 4
  %v0_1000aadc = call i32 @function_10009874()
  store i32 %v0_1000aadc, i32* %r3.global-to-local, align 4
  store i32 %v0_1000aadc, i32* @r29, align 4
  %v1_1000aaec = inttoptr i32 %v0_1000aadc to i32*
  %v2_1000aaec = load i32, i32* %v1_1000aaec, align 4
  store i32 %v2_1000aaec, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479224, i32* @lr, align 4
  %v3_1000aaf4 = call i32 @function_100094b0(i32 2, i32 %v2_1000aa08, i32 0)
  store i32 %v3_1000aaf4, i32* %r3.global-to-local, align 4
  %v0_1000aaf8 = load i32, i32* @r28, align 4
  %v1_1000aaf8 = load i32, i32* @r29, align 4
  %v2_1000aaf8 = inttoptr i32 %v1_1000aaf8 to i32*
  store i32 %v0_1000aaf8, i32* %v2_1000aaf8, align 4
  %v0_1000ab28.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ab28

dec_label_pc_1000ab00:                            ; preds = %dec_label_pc_1000aab8
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268479248, i32* @lr, align 4
  %v3_1000ab0c = call i32 @function_100094b0(i32 2, i32 %v2_1000aa08, i32 0)
  br label %dec_label_pc_1000ab1c

dec_label_pc_1000ab1c:                            ; preds = %dec_label_pc_1000aa24, %dec_label_pc_1000ab00
  store i32 %v2_1000a9c4, i32* %r3.global-to-local, align 4
  store i32 268479268, i32* @lr, align 4
  %v2_1000ab20 = call i32 @function_1000b3e0(i32 %v2_1000a9c4, i32 %v2_1000a9c4)
  store i32 %v2_1000ab20, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ab20, i32* @r31, align 4
  br label %dec_label_pc_1000ab28

dec_label_pc_1000ab28:                            ; preds = %dec_label_pc_1000aacc, %dec_label_pc_1000ab1c
  %v0_1000ab28 = phi i32 [ %v0_1000ab28.pr, %dec_label_pc_1000aacc ], [ %v2_1000ab20, %dec_label_pc_1000ab1c ]
  %v3_1000ab28 = icmp eq i32 %v0_1000ab28, 0
  br i1 %v3_1000ab28, label %dec_label_pc_1000ab54, label %dec_label_pc_1000ab30

dec_label_pc_1000ab30:                            ; preds = %dec_label_pc_1000ab28
  %v3_1000ab40 = load i32, i32* %stack_var_-440, align 4
  %v0_1000ab44 = call i32 @__asm_mfcr()
  store i32 %v0_1000ab44, i32* %r3.global-to-local, align 4
  %v1_1000ab48 = call i32 @__asm_rlwinm(i32 %v0_1000ab44, i32 30, i32 31, i32 31)
  %v2_1000ab4c = add i32 %v3_1000ab40, %v1_1000ab48
  store i32 %v2_1000ab4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab60

dec_label_pc_1000ab54:                            ; preds = %dec_label_pc_1000ab28, %dec_label_pc_1000a9a0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab60

dec_label_pc_1000ab5c:                            ; preds = %dec_label_pc_1000aa08, %dec_label_pc_1000aa64, %dec_label_pc_1000a9e4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab60

dec_label_pc_1000ab60:                            ; preds = %dec_label_pc_1000ab54, %dec_label_pc_1000ab30, %dec_label_pc_1000aa90, %dec_label_pc_1000ab5c
  %v0_1000ab70 = phi i32 [ 0, %dec_label_pc_1000ab54 ], [ %v2_1000ab4c, %dec_label_pc_1000ab30 ], [ %v0_1000ab70.pre, %dec_label_pc_1000aa90 ], [ -1, %dec_label_pc_1000ab5c ]
  ret i32 %v0_1000ab70

; uselistorder directives
  uselistorder i32 %v1_1000aa60, { 1, 0 }
  uselistorder i32 %v2_1000aa08, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000a9e0, { 1, 0 }
  uselistorder i32 %v2_1000a9c4, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 0, 7, 1, 8, 9, 10, 11, 3, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000b3e0, { 1, 0 }
  uselistorder i32 17, { 2, 37, 38, 3, 39, 4, 19, 20, 5, 6, 21, 22, 23, 7, 24, 25, 26, 8, 9, 10, 11, 12, 13, 14, 27, 15, 28, 29, 30, 16, 17, 18, 31, 0, 32, 1, 33, 34, 35, 36 }
  uselistorder label %dec_label_pc_1000ab60, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ab5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ab28, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa50.dec_label_pc_1000aa50_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9d0.dec_label_pc_1000a9d0_crit_edge, { 1, 0 }
}

define i32 @function_1000ab74(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000abc4:
  %v3_1000abc8 = load i32, i32* @global_var_1001c318.358, align 4
  %v3_1000abcc = icmp eq i32 %v3_1000abc8, 0
  br i1 %v3_1000abcc, label %dec_label_pc_1000abdc, label %dec_label_pc_1000abd4

dec_label_pc_1000abd4:                            ; preds = %dec_label_pc_1000abc4
  %v2_1000abd8 = load i32, i32* @r4, align 4
  %v3_1000abd8 = call i32 @unknown_0(i32 268566528, i32 %v2_1000abd8)
  store i32 %v3_1000abd8, i32* @r3, align 4
  br label %dec_label_pc_1000abdc

dec_label_pc_1000abdc:                            ; preds = %dec_label_pc_1000abc4, %dec_label_pc_1000abd4
  %v3_1000abe0 = load i32, i32* @global_var_1001c31c.359, align 4
  %v3_1000abe4 = icmp eq i32 %v3_1000abe0, 0
  br i1 %v3_1000abe4, label %dec_label_pc_1000abdc.dec_label_pc_1000abf4_crit_edge, label %dec_label_pc_1000abec

dec_label_pc_1000abdc.dec_label_pc_1000abf4_crit_edge: ; preds = %dec_label_pc_1000abdc
  %v0_1000ac04.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000abf4

dec_label_pc_1000abec:                            ; preds = %dec_label_pc_1000abdc
  %v2_1000abf0 = load i32, i32* @r4, align 4
  %v3_1000abf0 = call i32 @unknown_0(i32 268566528, i32 %v2_1000abf0)
  br label %dec_label_pc_1000abf4

dec_label_pc_1000abf4:                            ; preds = %dec_label_pc_1000abdc.dec_label_pc_1000abf4_crit_edge, %dec_label_pc_1000abec
  %v0_1000ac04 = phi i32 [ %v0_1000ac04.pre, %dec_label_pc_1000abdc.dec_label_pc_1000abf4_crit_edge ], [ %v3_1000abf0, %dec_label_pc_1000abec ]
  ret i32 %v0_1000ac04

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000abf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000abdc, { 1, 0 }
}

define i32 @function_1000ac08() local_unnamed_addr {
dec_label_pc_1000ac08:
  ret i32 0
}

define i32 @function_1000ac10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ac10:
  %v0_1000ac10 = load i32, i32* @r3, align 4
  ret i32 %v0_1000ac10
}

define i32 @function_1000ac14(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ac14:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268479544, i32* @lr, align 4
  %v1_1000ac34 = call i32 @function_10009070(i32 1)
  %v3_1000ac38 = icmp eq i32 %v1_1000ac34, -1
  br i1 %v3_1000ac38, label %dec_label_pc_1000ac40, label %dec_label_pc_1000ac60

dec_label_pc_1000ac40:                            ; preds = %dec_label_pc_1000ac14
  %v0_1000ac44 = load i32, i32* @r30, align 4
  store i32 268479572, i32* @lr, align 4
  %v3_1000ac50 = call i32 @function_100092c0(i32 ptrtoint ([10 x i8]* @global_var_1000be38.360 to i32), i32 %v0_1000ac44)
  %v1_1000ac54 = load i32, i32* @r31, align 4
  %v4_1000ac54 = icmp eq i32 %v3_1000ac50, %v1_1000ac54
  br i1 %v4_1000ac54, label %dec_label_pc_1000ac60, label %dec_label_pc_1000ac5c

dec_label_pc_1000ac5c:                            ; preds = %dec_label_pc_1000ac40
  %v1_1000ac5c = call i32 @function_1000b8b0(i32 %v3_1000ac50)
  br label %dec_label_pc_1000ac60

dec_label_pc_1000ac60:                            ; preds = %dec_label_pc_1000ac14, %dec_label_pc_1000ac40, %dec_label_pc_1000ac5c
  %v0_1000ac70 = phi i32 [ %v1_1000ac34, %dec_label_pc_1000ac14 ], [ %v3_1000ac50, %dec_label_pc_1000ac40 ], [ %v1_1000ac5c, %dec_label_pc_1000ac5c ]
  ret i32 %v0_1000ac70

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100092c0, { 0, 5, 9, 2, 1, 8, 7, 6, 4, 3 }
  uselistorder i32 (i32)* @function_10009070, { 0, 5, 13, 12, 15, 14, 9, 8, 11, 10, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000ac60, { 2, 1, 0 }
}

define i32 @function_1000ac74(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ac74:
  %v3_1000ac94 = load i32, i32* @global_var_1001c320.361, align 4
  %v3_1000ac98 = icmp eq i32 %v3_1000ac94, 0
  br i1 %v3_1000ac98, label %dec_label_pc_1000acbc, label %dec_label_pc_1000ace0

dec_label_pc_1000acbc:                            ; preds = %dec_label_pc_1000ac74
  store i32 1, i32* @global_var_1001c320.361, align 4
  store i32 4096, i32* @global_var_1001c314.343, align 4
  br label %dec_label_pc_1000ace0

dec_label_pc_1000ace0:                            ; preds = %dec_label_pc_1000acbc, %dec_label_pc_1000ac74
  %v0_1000acf0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000acf0
}

define i32 @function_1000acf4(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000acf4:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000ad0c = mul i32 %arg2, 4
  %v2_1000ad10 = add i32 %tmp, %v1_1000ad0c
  %v0_1000ad14 = load i32, i32* @r9, align 4
  store i32 %v0_1000ad14, i32* @global_var_1001c30c.363, align 4
  %v1_1000ad18 = add i32 %v2_1000ad10, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000ad18, i32* @global_var_1001c310.364, align 4
  store i32 %arg6, i32* @global_var_1001c31c.359, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000ad38 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000ad40 = icmp eq i32 %v1_1000ad18, %v2_1000ad38
  br i1 %v4_1000ad40, label %dec_label_pc_1000ad48, label %dec_label_pc_1000ad4c

dec_label_pc_1000ad48:                            ; preds = %dec_label_pc_1000acf4
  store i32 %v2_1000ad10, i32* @global_var_1001c310.364, align 4
  br label %dec_label_pc_1000ad4c

dec_label_pc_1000ad4c:                            ; preds = %dec_label_pc_1000acf4, %dec_label_pc_1000ad48
  %v2_1000ad4c = ptrtoint i32* %stack_var_-168 to i32
  store i32 268479836, i32* @lr, align 4
  %v3_1000ad58 = call i32 @function_1000995c(i32 %v2_1000ad4c, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001c310.364, align 4
  br label %dec_label_pc_1000ad68

dec_label_pc_1000ad68:                            ; preds = %dec_label_pc_1000ad68, %dec_label_pc_1000ad4c
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000ad4c ], [ %v1_1000ad6c, %dec_label_pc_1000ad68 ]
  %v1_1000ad68 = inttoptr i32 %storemerge to i32*
  %v2_1000ad68 = load i32, i32* %v1_1000ad68, align 4
  %v1_1000ad6c = add i32 %storemerge, 4
  %v3_1000ad70 = icmp eq i32 %v2_1000ad68, 0
  br i1 %v3_1000ad70, label %dec_label_pc_1000ad78, label %dec_label_pc_1000ad68

dec_label_pc_1000ad78:                            ; preds = %dec_label_pc_1000ad68
  store i32 %v1_1000ad6c, i32* %r29.global-to-local, align 4
  %v1_1000ada412 = inttoptr i32 %v1_1000ad6c to i32*
  %v2_1000ada413 = load i32, i32* %v1_1000ada412, align 4
  %v3_1000ada816 = icmp eq i32 %v2_1000ada413, 0
  br i1 %v3_1000ada816, label %dec_label_pc_1000adb0, label %dec_label_pc_1000ad80

dec_label_pc_1000ad80:                            ; preds = %dec_label_pc_1000ad78, %dec_label_pc_1000ada0
  %v0_1000ad94 = phi i32 [ %v1_1000ada0, %dec_label_pc_1000ada0 ], [ %v1_1000ad6c, %dec_label_pc_1000ad78 ]
  %v0_1000ad88 = phi i32 [ %v2_1000ada4, %dec_label_pc_1000ada0 ], [ %v2_1000ada413, %dec_label_pc_1000ad78 ]
  %v2_1000ad80 = icmp ugt i32 %v0_1000ad88, 14
  br i1 %v2_1000ad80, label %dec_label_pc_1000ada0, label %dec_label_pc_1000ad88

dec_label_pc_1000ad88:                            ; preds = %dec_label_pc_1000ad80
  %v1_1000ad88 = mul i32 %v0_1000ad88, 8
  %v2_1000ad90 = add i32 %v1_1000ad88, %v2_1000ad4c
  store i32 %v2_1000ad90, i32* @r3, align 4
  store i32 %v0_1000ad94, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268479904, i32* @lr, align 4
  %v0_1000ad9c = call i32 @function_1000b65c()
  %v0_1000ada0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000ada0

dec_label_pc_1000ada0:                            ; preds = %dec_label_pc_1000ad80, %dec_label_pc_1000ad88
  %v0_1000ada0 = phi i32 [ %v0_1000ad94, %dec_label_pc_1000ad80 ], [ %v0_1000ada0.pre, %dec_label_pc_1000ad88 ]
  %v1_1000ada0 = add i32 %v0_1000ada0, 8
  store i32 %v1_1000ada0, i32* %r29.global-to-local, align 4
  %v1_1000ada4 = inttoptr i32 %v1_1000ada0 to i32*
  %v2_1000ada4 = load i32, i32* %v1_1000ada4, align 4
  %v3_1000ada8 = icmp eq i32 %v2_1000ada4, 0
  br i1 %v3_1000ada8, label %dec_label_pc_1000adb0, label %dec_label_pc_1000ad80

dec_label_pc_1000adb0:                            ; preds = %dec_label_pc_1000ada0, %dec_label_pc_1000ad78
  %v1_1000adb4 = call i32 @function_1000ba00(i32 %v2_1000ad4c)
  store i32 %v1_1000adb4, i32* @r3, align 4
  store i32 268479932, i32* @lr, align 4
  %v1_1000adb8 = call i32 @function_1000ac74(i32 %v1_1000adb4)
  %v3_1000adc0 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000adc0, label %dec_label_pc_1000adc8, label %dec_label_pc_1000adcc

dec_label_pc_1000adc8:                            ; preds = %dec_label_pc_1000adb0
  br label %dec_label_pc_1000adcc

dec_label_pc_1000adcc:                            ; preds = %dec_label_pc_1000adb0, %dec_label_pc_1000adc8
  %v0_1000add4 = phi i32 [ %tmp27, %dec_label_pc_1000adb0 ], [ 4096, %dec_label_pc_1000adc8 ]
  store i32 %v0_1000add4, i32* @global_var_1001c314.343, align 4
  %v3_1000add8 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000add8, label %dec_label_pc_1000ade0, label %dec_label_pc_1000ae14

dec_label_pc_1000ade0:                            ; preds = %dec_label_pc_1000adcc
  store i32 268479972, i32* @lr, align 4
  %v1_1000ade0 = call i32 @function_1000b318(i32 268566528)
  store i32 %v1_1000ade0, i32* %r29.global-to-local, align 4
  store i32 268479980, i32* @lr, align 4
  %v0_1000ade8 = call i32 @function_1000b288()
  %v4_1000adec = icmp eq i32 %v1_1000ade0, %v0_1000ade8
  br i1 %v4_1000adec, label %dec_label_pc_1000adf4, label %dec_label_pc_1000ae30

dec_label_pc_1000adf4:                            ; preds = %dec_label_pc_1000ade0
  store i32 268479992, i32* @lr, align 4
  %v1_1000adf4 = call i32 @function_1000b2d0(i32 %v0_1000ade8)
  store i32 %v1_1000adf4, i32* %r29.global-to-local, align 4
  store i32 268480000, i32* @lr, align 4
  %v0_1000adfc = call i32 @function_1000b240()
  %v4_1000ae00 = icmp eq i32 %v1_1000adf4, %v0_1000adfc
  br i1 %v4_1000ae00, label %dec_label_pc_1000ae08.thread, label %dec_label_pc_1000ae30

dec_label_pc_1000ae08.thread:                     ; preds = %dec_label_pc_1000adf4
  br label %dec_label_pc_1000ae60

dec_label_pc_1000ae14:                            ; preds = %dec_label_pc_1000adcc
  %v4_1000ae18 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000ae18, label %dec_label_pc_1000ae20, label %dec_label_pc_1000ae30

dec_label_pc_1000ae20:                            ; preds = %dec_label_pc_1000ae14
  br label %dec_label_pc_1000ae30

dec_label_pc_1000ae30:                            ; preds = %dec_label_pc_1000ae20, %dec_label_pc_1000ae14, %dec_label_pc_1000adf4, %dec_label_pc_1000ade0
  store i32 268480064, i32* @lr, align 4
  %v2_1000ae3c = call i32 @function_1000ac14(i32 0, i32 32768)
  store i32 268480080, i32* @lr, align 4
  %v2_1000ae4c = call i32 @function_1000ac14(i32 1, i32 32770)
  store i32 268480096, i32* @lr, align 4
  %v2_1000ae5c = call i32 @function_1000ac14(i32 2, i32 32770)
  br label %dec_label_pc_1000ae60

dec_label_pc_1000ae60:                            ; preds = %dec_label_pc_1000ae08.thread, %dec_label_pc_1000ae30
  %v0_1000ae6c = load i32, i32* @r30, align 4
  %v1_1000ae6c = inttoptr i32 %v0_1000ae6c to i32*
  %v2_1000ae6c = load i32, i32* %v1_1000ae6c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae6c, i32* inttoptr (i32 268550844 to i32*), align 4
  %v0_1000ae8c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000ae8c, i32* @global_var_1001c318.358, align 4
  br i1 false, label %dec_label_pc_1000ae94, label %dec_label_pc_1000af0c

dec_label_pc_1000ae94:                            ; preds = %dec_label_pc_1000ae60, %dec_label_pc_1000ae94
  br i1 undef, label %dec_label_pc_1000ae94, label %dec_label_pc_1000af0c

dec_label_pc_1000af0c:                            ; preds = %dec_label_pc_1000ae94, %dec_label_pc_1000ae60
  %v0_1000aeb8 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000aeb8)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000af1c = call i32 @function_10009874()
  %v2_1000af24 = inttoptr i32 %v0_1000af1c to i32*
  store i32 0, i32* %v2_1000af24, align 4
  %v0_1000af50 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000af50)
  %v0_1000af5c = call i32 @function_1000a91c()
  ret i32 %v0_1000af5c

; uselistorder directives
  uselistorder i32 %v2_1000ada4, { 1, 0 }
  uselistorder i32 %v1_1000ada0, { 2, 1, 0 }
  uselistorder i32 %v1_1000ad6c, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000ad4c, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 6, 7, 1, 2, 4, 3, 0, 5 }
  uselistorder i32 ()* @function_1000a91c, { 0, 4, 3, 2, 1 }
  uselistorder i1 false, { 0, 5, 6, 7, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000ac14, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 33, 0, 2, 1, 13, 4, 3, 14, 9, 10, 15, 16, 11, 12, 17, 18, 19, 5, 20, 21, 22, 6, 23, 24, 25, 26, 27, 7, 28, 29, 30, 31, 32, 8 }
  uselistorder i32* @r9, { 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_1000ae94, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae60, { 1, 0 }
  uselistorder label %dec_label_pc_1000adcc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ada0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad80, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad4c, { 1, 0 }
}

define i32 @function_1000af60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000af60:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000af78 = call i32 @__asm_mfcr()
  %v1_1000af7c = and i32 %v0_1000af78, 268435456
  %v3_1000af7c = icmp eq i32 %v1_1000af7c, 0
  store i32 %v0_1000af78, i32* %r31.global-to-local, align 4
  br i1 %v3_1000af7c, label %dec_label_pc_1000af94, label %dec_label_pc_1000af88

dec_label_pc_1000af88:                            ; preds = %dec_label_pc_1000af60
  %v0_1000af88 = call i32 @function_10009874()
  %v0_1000af8c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000af8c = inttoptr i32 %v0_1000af88 to i32*
  store i32 %v0_1000af8c, i32* %v2_1000af8c, align 4
  br label %dec_label_pc_1000af94

dec_label_pc_1000af94:                            ; preds = %dec_label_pc_1000af60, %dec_label_pc_1000af88
  %v0_1000afa4 = phi i32 [ %v0_1000af78, %dec_label_pc_1000af60 ], [ -1, %dec_label_pc_1000af88 ]
  ret i32 %v0_1000afa4

; uselistorder directives
  uselistorder label %dec_label_pc_1000af94, { 1, 0 }
}

define i32 @function_1000afa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000afa8:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000afbc

dec_label_pc_1000afbc:                            ; preds = %dec_label_pc_1000afbc.backedge, %dec_label_pc_1000afa8
  %v0_1000afc8 = call i32 @__asm_mfcr()
  %v1_1000afcc = and i32 %v0_1000afc8, 268435456
  %v3_1000afcc = icmp eq i32 %v1_1000afcc, 0
  store i32 %v0_1000afc8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000afcc, label %dec_label_pc_1000afbc.backedge, label %dec_label_pc_1000afd8

dec_label_pc_1000afd8:                            ; preds = %dec_label_pc_1000afbc
  %v0_1000afd8 = call i32 @function_10009874()
  %v0_1000afdc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000afdc = inttoptr i32 %v0_1000afd8 to i32*
  store i32 %v0_1000afdc, i32* %v2_1000afdc, align 4
  br label %dec_label_pc_1000afbc.backedge

dec_label_pc_1000afbc.backedge:                   ; preds = %dec_label_pc_1000afd8, %dec_label_pc_1000afbc
  br label %dec_label_pc_1000afbc
}

define i32 @function_1000afe4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000afe4:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000aff0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000aff0, i32* @r29, align 4
  %v0_1000aff8 = load i32, i32* @r4, align 4
  store i32 %v0_1000aff8, i32* @r30, align 4
  %v0_1000b008 = call i32 @__asm_mfcr()
  %v1_1000b00c = and i32 %v0_1000b008, 268435456
  %v3_1000b00c = icmp eq i32 %v1_1000b00c, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000b008, i32* @r31, align 4
  br i1 %v3_1000b00c, label %dec_label_pc_1000b028, label %dec_label_pc_1000b01c

dec_label_pc_1000b01c:                            ; preds = %dec_label_pc_1000afe4
  %v0_1000b01c = call i32 @function_10009874()
  %v0_1000b020 = load i32, i32* @r31, align 4
  %v2_1000b020 = inttoptr i32 %v0_1000b01c to i32*
  store i32 %v0_1000b020, i32* %v2_1000b020, align 4
  br label %dec_label_pc_1000b040

dec_label_pc_1000b028:                            ; preds = %dec_label_pc_1000afe4
  %v3_1000b028 = icmp eq i32 %v0_1000b008, 0
  store i32 %v0_1000b008, i32* @r28, align 4
  br i1 %v3_1000b028, label %dec_label_pc_1000b03c, label %dec_label_pc_1000b040

dec_label_pc_1000b03c:                            ; preds = %dec_label_pc_1000b028
  %v0_1000b030 = load i32, i32* @r30, align 4
  store i32 268480576, i32* @lr, align 4
  %v4_1000b03c = call i32 @function_1000b5ac(i32* nonnull %stack_var_-104, i32 %v0_1000b030, i32 0)
  br label %dec_label_pc_1000b040

dec_label_pc_1000b040:                            ; preds = %dec_label_pc_1000b028, %dec_label_pc_1000b01c, %dec_label_pc_1000b03c
  %v0_1000b044 = load i32, i32* @r28, align 4
  ret i32 %v0_1000b044

; uselistorder directives
  uselistorder i32 %v0_1000b008, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000b040, { 2, 0, 1 }
}

define i32 @function_1000b058(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b058:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000b06c = call i32 @function_1000b0e8()
  store i32 %v0_1000b06c, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000b06c, 1
  br i1 %tmp18, label %dec_label_pc_1000b0d0, label %dec_label_pc_1000b078

dec_label_pc_1000b078:                            ; preds = %dec_label_pc_1000b058
  %v0_1000b078 = load i32, i32* @r31, align 4
  %v2_1000b078 = add i32 %v0_1000b078, %v0_1000b06c
  store i32 %v2_1000b078, i32* %r29.global-to-local, align 4
  %v2_1000b0c03 = icmp ult i32 %v0_1000b078, %v2_1000b078
  br i1 %v2_1000b0c03, label %dec_label_pc_1000b080, label %dec_label_pc_1000b0d0

dec_label_pc_1000b080:                            ; preds = %dec_label_pc_1000b078, %dec_label_pc_1000b080
  %v1_1000b090 = phi i32 [ %v2_1000b0bc, %dec_label_pc_1000b080 ], [ %v0_1000b078, %dec_label_pc_1000b078 ]
  %v1_1000b0c410.in = phi i32 [ %v2_1000b0bc, %dec_label_pc_1000b080 ], [ %v0_1000b078, %dec_label_pc_1000b078 ]
  %v1_1000b0c811.in = phi i32 [ %v2_1000b0bc, %dec_label_pc_1000b080 ], [ %v0_1000b078, %dec_label_pc_1000b078 ]
  %v1_1000b0c410 = add i32 %v1_1000b0c410.in, 11
  %v1_1000b0c811 = add i32 %v1_1000b0c811.in, 19
  %v1_1000b080 = add i32 %v1_1000b090, 4
  %v2_1000b080 = inttoptr i32 %v1_1000b080 to i32*
  %v3_1000b080 = load i32, i32* %v2_1000b080, align 4
  store i32 %v3_1000b080, i32* %r11.global-to-local, align 4
  %v1_1000b084 = add i32 %v1_1000b090, 12
  %v2_1000b084 = inttoptr i32 %v1_1000b084 to i32*
  %v3_1000b084 = load i32, i32* %v2_1000b084, align 4
  %v1_1000b088 = add i32 %v1_1000b090, 16
  %v2_1000b088 = inttoptr i32 %v1_1000b088 to i16*
  %v3_1000b088 = load i16, i16* %v2_1000b088, align 2
  %v4_1000b088 = zext i16 %v3_1000b088 to i32
  store i32 %v4_1000b088, i32* %r5.global-to-local, align 4
  %v1_1000b08c = add i32 %v1_1000b090, 18
  %v2_1000b08c = inttoptr i32 %v1_1000b08c to i8*
  %v3_1000b08c = load i8, i8* %v2_1000b08c, align 1
  %v4_1000b08c = zext i8 %v3_1000b08c to i32
  store i32 %v4_1000b08c, i32* %r9.global-to-local, align 4
  store i32 %v3_1000b084, i32* %v2_1000b080, align 4
  %v0_1000b094 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b094 = load i32, i32* @r31, align 4
  %v2_1000b094 = inttoptr i32 %v1_1000b094 to i32*
  store i32 %v0_1000b094, i32* %v2_1000b094, align 4
  %v0_1000b098 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b098 = trunc i32 %v0_1000b098 to i8
  %v2_1000b098 = load i32, i32* @r31, align 4
  %v3_1000b098 = add i32 %v2_1000b098, 10
  %v4_1000b098 = inttoptr i32 %v3_1000b098 to i8*
  store i8 %v1_1000b098, i8* %v4_1000b098, align 1
  %v0_1000b09c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b09c = trunc i32 %v0_1000b09c to i16
  %v2_1000b09c = load i32, i32* @r31, align 4
  %v3_1000b09c = add i32 %v2_1000b09c, 8
  %v4_1000b09c = inttoptr i32 %v3_1000b09c to i16*
  store i16 %v1_1000b09c, i16* %v4_1000b09c, align 2
  %v0_1000b0a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b0a0 = add i32 %v0_1000b0a0, -19
  store i32 %v1_1000b0a0, i32* %r5.global-to-local, align 4
  store i32 268480680, i32* @lr, align 4
  %v3_1000b0a4 = call i32 @function_100098b8(i32 %v1_1000b0c410, i32 %v1_1000b0c811, i32 %v1_1000b0a0)
  %v0_1000b0a8 = load i32, i32* @r31, align 4
  %v1_1000b0a8 = add i32 %v0_1000b0a8, 8
  %v2_1000b0a8 = inttoptr i32 %v1_1000b0a8 to i16*
  %v3_1000b0a8 = load i16, i16* %v2_1000b0a8, align 2
  %v4_1000b0a8 = zext i16 %v3_1000b0a8 to i32
  store i32 %v4_1000b0a8, i32* %r5.global-to-local, align 4
  store i32 268480696, i32* @lr, align 4
  %v3_1000b0b4 = call i32 @function_100098b8(i32 %v0_1000b0a8, i32 %v0_1000b0a8, i32 %v4_1000b0a8)
  %v0_1000b0b8 = load i32, i32* @r31, align 4
  %v1_1000b0b8 = add i32 %v0_1000b0b8, 8
  %v2_1000b0b8 = inttoptr i32 %v1_1000b0b8 to i16*
  %v3_1000b0b8 = load i16, i16* %v2_1000b0b8, align 2
  %v4_1000b0b8 = zext i16 %v3_1000b0b8 to i32
  %v2_1000b0bc = add i32 %v4_1000b0b8, %v0_1000b0b8
  store i32 %v2_1000b0bc, i32* @r31, align 4
  %v1_1000b0c0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b0c0 = icmp ult i32 %v2_1000b0bc, %v1_1000b0c0
  br i1 %v2_1000b0c0, label %dec_label_pc_1000b080, label %dec_label_pc_1000b0c0.dec_label_pc_1000b0d0.loopexit_crit_edge

dec_label_pc_1000b0c0.dec_label_pc_1000b0d0.loopexit_crit_edge: ; preds = %dec_label_pc_1000b080
  %v0_1000b0d4.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b0d0

dec_label_pc_1000b0d0:                            ; preds = %dec_label_pc_1000b078, %dec_label_pc_1000b0c0.dec_label_pc_1000b0d0.loopexit_crit_edge, %dec_label_pc_1000b058
  %v0_1000b0d4 = phi i32 [ %v0_1000b06c, %dec_label_pc_1000b058 ], [ %v0_1000b0d4.pre.pre, %dec_label_pc_1000b0c0.dec_label_pc_1000b0d0.loopexit_crit_edge ], [ %v0_1000b06c, %dec_label_pc_1000b078 ]
  ret i32 %v0_1000b0d4

; uselistorder directives
  uselistorder i32 %v2_1000b0bc, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000b0a8, { 1, 0, 2 }
  uselistorder i32 %v1_1000b090, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000b078, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000b06c, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_100098b8, { 1, 0, 2 }
  uselistorder i32 11, { 0, 30, 29, 2, 10, 11, 12, 13, 14, 15, 3, 16, 1, 17, 18, 19, 20, 21, 22, 4, 23, 24, 5, 25, 26, 8, 6, 27, 28, 9, 7 }
  uselistorder label %dec_label_pc_1000b0d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b080, { 1, 0 }
}

define i32 @function_1000b0e8() local_unnamed_addr {
dec_label_pc_1000b0e8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b0ec = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b0ec, i32* %stack_var_-48, align 4
  %v5_1000b0ec = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000b0ec, i32* %r9.global-to-local, align 4
  %v0_1000b0f8 = load i32, i32* @r5, align 4
  %v1_1000b0f8 = add i32 %v0_1000b0f8, 30
  %v1_1000b0fc = call i32 @__asm_rlwinm(i32 %v1_1000b0f8, i32 0, i32 0, i32 27)
  store i32 %v5_1000b0ec, i32* @r31, align 4
  %v1_1000b10c = load i32, i32* @r1, align 4
  %v3_1000b10c = sub i32 %v1_1000b10c, %v1_1000b0fc
  %v4_1000b10c = inttoptr i32 %v3_1000b10c to i32*
  store i32 %v4_1000b0ec, i32* %v4_1000b10c, align 4
  %v0_1000b110 = load i32, i32* @r4, align 4
  store i32 %v0_1000b110, i32* @r28, align 4
  %v0_1000b114 = load i32, i32* @r5, align 4
  store i32 %v0_1000b114, i32* @r23, align 4
  %v0_1000b118 = load i32, i32* @r3, align 4
  store i32 %v0_1000b118, i32* @r22, align 4
  %v1_1000b11c = add i32 %v3_1000b10c, 23
  %v1_1000b120 = call i32 @__asm_rlwinm(i32 %v1_1000b11c, i32 0, i32 0, i32 27)
  store i32 %v1_1000b120, i32* @r27, align 4
  store i32 %v1_1000b120, i32* %r4.global-to-local, align 4
  %v0_1000b130 = call i32 @__asm_mfcr()
  %v1_1000b134 = and i32 %v0_1000b130, 268435456
  store i32 %v1_1000b134, i32* %r9.global-to-local, align 4
  %v3_1000b134 = icmp eq i32 %v1_1000b134, 0
  store i32 %v0_1000b130, i32* %r30.global-to-local, align 4
  br i1 %v3_1000b134, label %dec_label_pc_1000b14c, label %dec_label_pc_1000b140

dec_label_pc_1000b140:                            ; preds = %dec_label_pc_1000b0e8
  %v0_1000b140 = call i32 @function_10009874()
  %v0_1000b144 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b144 = inttoptr i32 %v0_1000b140 to i32*
  store i32 %v0_1000b144, i32* %v2_1000b144, align 4
  br label %dec_label_pc_1000b158

dec_label_pc_1000b14c:                            ; preds = %dec_label_pc_1000b0e8
  %v3_1000b14c = icmp eq i32 %v0_1000b130, -1
  store i32 %v0_1000b130, i32* %r24.global-to-local, align 4
  br i1 %v3_1000b14c, label %dec_label_pc_1000b158, label %dec_label_pc_1000b160

dec_label_pc_1000b158:                            ; preds = %dec_label_pc_1000b14c, %dec_label_pc_1000b140
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b224

dec_label_pc_1000b160:                            ; preds = %dec_label_pc_1000b14c
  %v0_1000b160 = load i32, i32* @r28, align 4
  store i32 %v0_1000b160, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b120, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* %r26.global-to-local, align 4
  %v2_1000b20812 = add i32 %v0_1000b130, %v1_1000b120
  %v1_1000b20c13 = load i32, i32* @r23, align 4
  %v2_1000b20c14 = add i32 %v1_1000b20c13, %v0_1000b160
  store i32 %v2_1000b20c14, i32* %r10.global-to-local, align 4
  %v2_1000b21015 = icmp ult i32 %v1_1000b120, %v2_1000b20812
  %v1_1000b21417 = add i32 %v0_1000b160, 19
  store i32 %v1_1000b21417, i32* @r3, align 4
  %v1_1000b21818 = add i32 %v1_1000b120, 19
  store i32 %v1_1000b21818, i32* @r4, align 4
  br i1 %v2_1000b21015, label %dec_label_pc_1000b174, label %dec_label_pc_1000b220

dec_label_pc_1000b174:                            ; preds = %dec_label_pc_1000b160, %dec_label_pc_1000b1bc
  %v0_1000b17419 = phi i32 [ %v2_1000b204, %dec_label_pc_1000b1bc ], [ %v1_1000b120, %dec_label_pc_1000b160 ]
  %v1_1000b174 = add i32 %v0_1000b17419, 16
  %v2_1000b174 = inttoptr i32 %v1_1000b174 to i16*
  %v3_1000b174 = load i16, i16* %v2_1000b174, align 2
  %v4_1000b174 = zext i16 %v3_1000b174 to i32
  %v1_1000b178 = add nuw nsw i32 %v4_1000b174, 7
  store i32 %v1_1000b178, i32* %r9.global-to-local, align 4
  %v1_1000b17c = call i32 @__asm_rlwinm(i32 %v1_1000b178, i32 0, i32 0, i32 28)
  %v0_1000b180 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b180 = add i32 %v1_1000b17c, %v0_1000b180
  store i32 %v3_1000b180, i32* %r11.global-to-local, align 4
  %v1_1000b184 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000b184 = icmp ugt i32 %v3_1000b180, %v1_1000b184
  br i1 %v3_1000b184, label %dec_label_pc_1000b18c, label %dec_label_pc_1000b1bc

dec_label_pc_1000b18c:                            ; preds = %dec_label_pc_1000b174
  %v0_1000b18c = load i32, i32* @r22, align 4
  %v0_1000b190 = load i32, i32* @r25, align 4
  %v0_1000b194 = load i32, i32* %r26.global-to-local, align 4
  store i32 268480928, i32* @lr, align 4
  %v4_1000b19c = call i32 @function_1000b360(i32 %v0_1000b18c, i32 %v0_1000b190, i32 %v0_1000b194, i32 0)
  %v0_1000b1a0 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b1a0 = load i32, i32* @r28, align 4
  %v4_1000b1a0 = icmp eq i32 %v0_1000b1a0, %v1_1000b1a0
  br i1 %v4_1000b1a0, label %dec_label_pc_1000b1a8, label %dec_label_pc_1000b220

dec_label_pc_1000b1a8:                            ; preds = %dec_label_pc_1000b18c
  %v0_1000b1a8 = call i32 @function_10009874()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000b1b4 = inttoptr i32 %v0_1000b1a8 to i32*
  store i32 22, i32* %v2_1000b1b4, align 4
  %v0_1000b228.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b224

dec_label_pc_1000b1bc:                            ; preds = %dec_label_pc_1000b174
  %v2_1000b17c = trunc i32 %v1_1000b17c to i16
  %v0_1000b1bc = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b1bc = inttoptr i32 %v0_1000b1bc to i32*
  %v2_1000b1bc = load i32, i32* %v1_1000b1bc, align 4
  store i32 %v2_1000b1bc, i32* %r9.global-to-local, align 4
  %v1_1000b1c0 = add i32 %v0_1000b1bc, 4
  %v2_1000b1c0 = inttoptr i32 %v1_1000b1c0 to i32*
  %v3_1000b1c0 = load i32, i32* %v2_1000b1c0, align 4
  store i32 %v3_1000b1c0, i32* %r10.global-to-local, align 4
  %v1_1000b1c4 = add i32 %v0_1000b1bc, 8
  %v2_1000b1c4 = inttoptr i32 %v1_1000b1c4 to i32*
  %v3_1000b1c4 = load i32, i32* %v2_1000b1c4, align 4
  store i32 %v3_1000b1c4, i32* @r25, align 4
  %v1_1000b1c8 = add i32 %v0_1000b1bc, 12
  %v2_1000b1c8 = inttoptr i32 %v1_1000b1c8 to i32*
  %v3_1000b1c8 = load i32, i32* %v2_1000b1c8, align 4
  store i32 %v3_1000b1c8, i32* %r26.global-to-local, align 4
  %v2_1000b1cc = inttoptr i32 %v0_1000b180 to i32*
  store i32 %v2_1000b1bc, i32* %v2_1000b1cc, align 4
  %v0_1000b1d0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b1d0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1d0 = add i32 %v1_1000b1d0, 4
  %v3_1000b1d0 = inttoptr i32 %v2_1000b1d0 to i32*
  store i32 %v0_1000b1d0, i32* %v3_1000b1d0, align 4
  %v0_1000b1d4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b1d4 = add i32 %v0_1000b1d4, 8
  %v2_1000b1d4 = inttoptr i32 %v1_1000b1d4 to i32*
  %v3_1000b1d4 = load i32, i32* %v2_1000b1d4, align 4
  store i32 %v3_1000b1d4, i32* %r9.global-to-local, align 4
  %v1_1000b1d8 = add i32 %v0_1000b1d4, 12
  %v2_1000b1d8 = inttoptr i32 %v1_1000b1d8 to i32*
  %v3_1000b1d8 = load i32, i32* %v2_1000b1d8, align 4
  store i32 %v3_1000b1d8, i32* %r10.global-to-local, align 4
  %v3_1000b1dc = load i32, i32* %r29.global-to-local, align 4
  %v4_1000b1dc = add i32 %v3_1000b1dc, 16
  %v5_1000b1dc = inttoptr i32 %v4_1000b1dc to i16*
  store i16 %v2_1000b17c, i16* %v5_1000b1dc, align 2
  %v0_1000b1e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b1e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1e0 = add i32 %v1_1000b1e0, 8
  %v3_1000b1e0 = inttoptr i32 %v2_1000b1e0 to i32*
  store i32 %v0_1000b1e0, i32* %v3_1000b1e0, align 4
  %v0_1000b1e4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b1e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b1e4 = add i32 %v1_1000b1e4, 12
  %v3_1000b1e4 = inttoptr i32 %v2_1000b1e4 to i32*
  store i32 %v0_1000b1e4, i32* %v3_1000b1e4, align 4
  %v0_1000b1e8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b1e8 = add i32 %v0_1000b1e8, 18
  %v2_1000b1e8 = inttoptr i32 %v1_1000b1e8 to i8*
  %v3_1000b1e8 = load i8, i8* %v2_1000b1e8, align 1
  %v2_1000b1ec = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b1ec = add i32 %v2_1000b1ec, 18
  %v4_1000b1ec = inttoptr i32 %v3_1000b1ec to i8*
  store i8 %v3_1000b1e8, i8* %v4_1000b1ec, align 1
  %v0_1000b1f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b1f0, i32* %r29.global-to-local, align 4
  %v0_1000b1f4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b1f4 = add i32 %v0_1000b1f4, 16
  %v2_1000b1f4 = inttoptr i32 %v1_1000b1f4 to i16*
  %v3_1000b1f4 = load i16, i16* %v2_1000b1f4, align 2
  %v4_1000b1f4 = zext i16 %v3_1000b1f4 to i32
  %v1_1000b1f8 = add nsw i32 %v4_1000b1f4, -19
  store i32 %v1_1000b1f8, i32* @r5, align 4
  store i32 268481024, i32* @lr, align 4
  %v0_1000b1fc = call i32 @function_1000b65c()
  %v0_1000b200 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b200 = add i32 %v0_1000b200, 16
  %v2_1000b200 = inttoptr i32 %v1_1000b200 to i16*
  %v3_1000b200 = load i16, i16* %v2_1000b200, align 2
  %v4_1000b200 = zext i16 %v3_1000b200 to i32
  %v2_1000b204 = add i32 %v4_1000b200, %v0_1000b200
  store i32 %v2_1000b204, i32* %r30.global-to-local, align 4
  %v1_1000b208.pre = load i32, i32* %r24.global-to-local, align 4
  %v0_1000b20c.pre = load i32, i32* @r28, align 4
  %v0_1000b214.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b208 = add i32 %v1_1000b208.pre, %v1_1000b120
  %v1_1000b20c = load i32, i32* @r23, align 4
  %v2_1000b20c = add i32 %v1_1000b20c, %v0_1000b20c.pre
  store i32 %v2_1000b20c, i32* %r10.global-to-local, align 4
  %v2_1000b210 = icmp ult i32 %v2_1000b204, %v2_1000b208
  %v1_1000b214 = add i32 %v0_1000b214.pre, 19
  store i32 %v1_1000b214, i32* @r3, align 4
  %v1_1000b218 = add i32 %v2_1000b204, 19
  store i32 %v1_1000b218, i32* @r4, align 4
  br i1 %v2_1000b210, label %dec_label_pc_1000b174, label %dec_label_pc_1000b220

dec_label_pc_1000b220:                            ; preds = %dec_label_pc_1000b160, %dec_label_pc_1000b1bc, %dec_label_pc_1000b18c
  %v1_1000b220 = phi i32 [ %v0_1000b1a0, %dec_label_pc_1000b18c ], [ %v0_1000b160, %dec_label_pc_1000b160 ], [ %v0_1000b214.pre, %dec_label_pc_1000b1bc ]
  %v0_1000b220 = phi i32 [ %v1_1000b1a0, %dec_label_pc_1000b18c ], [ %v0_1000b160, %dec_label_pc_1000b160 ], [ %v0_1000b20c.pre, %dec_label_pc_1000b1bc ]
  %v2_1000b220 = sub i32 %v1_1000b220, %v0_1000b220
  store i32 %v2_1000b220, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b224

dec_label_pc_1000b224:                            ; preds = %dec_label_pc_1000b1a8, %dec_label_pc_1000b158, %dec_label_pc_1000b220
  %v0_1000b228 = phi i32 [ %v0_1000b228.pre, %dec_label_pc_1000b1a8 ], [ -1, %dec_label_pc_1000b158 ], [ %v2_1000b220, %dec_label_pc_1000b220 ]
  %v0_1000b224 = load i32, i32* @r1, align 4
  %v1_1000b224 = inttoptr i32 %v0_1000b224 to i32*
  %v2_1000b224 = load i32, i32* %v1_1000b224, align 4
  store i32 %v2_1000b224, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000b228

; uselistorder directives
  uselistorder i32 %v2_1000b204, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000b1bc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000b17c, { 1, 0 }
  uselistorder i32 %v0_1000b130, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_1000b120, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 4, 5, 6, 0, 3, 7, 8, 1, 9, 2, 10, 11 }
  uselistorder i32 22, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 14, 15, 16, 8, 9, 10, 11, 12 }
  uselistorder i32 7, { 28, 42, 10, 11, 21, 12, 13, 22, 14, 15, 23, 16, 17, 24, 25, 18, 26, 27, 0, 29, 1, 30, 2, 31, 32, 33, 3, 4, 34, 5, 35, 6, 36, 19, 37, 20, 7, 38, 39, 8, 40, 41, 9, 43 }
  uselistorder i32 19, { 23, 24, 1, 2, 0, 15, 16, 17, 3, 5, 4, 18, 7, 6, 19, 10, 11, 20, 21, 22, 12, 13, 14, 25, 26, 27, 28, 8, 9 }
  uselistorder i32* @r25, { 4, 5, 6, 1, 2, 3, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* @r27, { 24, 16, 17, 39, 40, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 18, 19, 1, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0, 37, 38, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 23, { 14, 9, 15, 0, 1, 10, 2, 3, 11, 12, 13, 4, 5, 6, 7, 8 }
  uselistorder i32* @r22, { 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @r23, { 8, 0, 9, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* @r1, { 7, 8, 2, 3, 4, 1, 5, 0, 9, 6, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 16, 17, 18, 27, 23, 25, 24, 26, 0, 29, 28, 1, 2, 3, 21, 22, 19, 20, 4, 5, 6, 7, 8, 9, 15, 10, 12, 13, 11, 14, 30 }
  uselistorder i32 27, { 7, 8, 1, 2, 6, 9, 0, 10, 3, 11, 4, 12, 5, 13, 14 }
  uselistorder i32 30, { 6, 7, 3, 2, 1, 0, 4, 5 }
  uselistorder label %dec_label_pc_1000b224, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b220, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b174, { 1, 0 }
}

define i32 @function_1000b240() local_unnamed_addr {
dec_label_pc_1000b240:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b258 = call i32 @__asm_mfcr()
  %v1_1000b25c = and i32 %v0_1000b258, 268435456
  %v3_1000b25c = icmp eq i32 %v1_1000b25c, 0
  store i32 %v0_1000b258, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b25c, label %dec_label_pc_1000b274, label %dec_label_pc_1000b268

dec_label_pc_1000b268:                            ; preds = %dec_label_pc_1000b240
  %v0_1000b268 = call i32 @function_10009874()
  %v0_1000b26c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b26c = inttoptr i32 %v0_1000b268 to i32*
  store i32 %v0_1000b26c, i32* %v2_1000b26c, align 4
  br label %dec_label_pc_1000b274

dec_label_pc_1000b274:                            ; preds = %dec_label_pc_1000b240, %dec_label_pc_1000b268
  %v0_1000b284 = phi i32 [ %v0_1000b258, %dec_label_pc_1000b240 ], [ -1, %dec_label_pc_1000b268 ]
  ret i32 %v0_1000b284

; uselistorder directives
  uselistorder label %dec_label_pc_1000b274, { 1, 0 }
}

define i32 @function_1000b288() local_unnamed_addr {
dec_label_pc_1000b288:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b2a0 = call i32 @__asm_mfcr()
  %v1_1000b2a4 = and i32 %v0_1000b2a0, 268435456
  %v3_1000b2a4 = icmp eq i32 %v1_1000b2a4, 0
  store i32 %v0_1000b2a0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b2a4, label %dec_label_pc_1000b2bc, label %dec_label_pc_1000b2b0

dec_label_pc_1000b2b0:                            ; preds = %dec_label_pc_1000b288
  %v0_1000b2b0 = call i32 @function_10009874()
  %v0_1000b2b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b2b4 = inttoptr i32 %v0_1000b2b0 to i32*
  store i32 %v0_1000b2b4, i32* %v2_1000b2b4, align 4
  br label %dec_label_pc_1000b2bc

dec_label_pc_1000b2bc:                            ; preds = %dec_label_pc_1000b288, %dec_label_pc_1000b2b0
  %v0_1000b2cc = phi i32 [ %v0_1000b2a0, %dec_label_pc_1000b288 ], [ -1, %dec_label_pc_1000b2b0 ]
  ret i32 %v0_1000b2cc

; uselistorder directives
  uselistorder label %dec_label_pc_1000b2bc, { 1, 0 }
}

define i32 @function_1000b2d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b2d0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b2e8 = call i32 @__asm_mfcr()
  %v1_1000b2ec = and i32 %v0_1000b2e8, 268435456
  %v3_1000b2ec = icmp eq i32 %v1_1000b2ec, 0
  store i32 %v0_1000b2e8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b2ec, label %dec_label_pc_1000b304, label %dec_label_pc_1000b2f8

dec_label_pc_1000b2f8:                            ; preds = %dec_label_pc_1000b2d0
  %v0_1000b2f8 = call i32 @function_10009874()
  %v0_1000b2fc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b2fc = inttoptr i32 %v0_1000b2f8 to i32*
  store i32 %v0_1000b2fc, i32* %v2_1000b2fc, align 4
  br label %dec_label_pc_1000b304

dec_label_pc_1000b304:                            ; preds = %dec_label_pc_1000b2d0, %dec_label_pc_1000b2f8
  %v0_1000b314 = phi i32 [ %v0_1000b2e8, %dec_label_pc_1000b2d0 ], [ -1, %dec_label_pc_1000b2f8 ]
  ret i32 %v0_1000b314

; uselistorder directives
  uselistorder label %dec_label_pc_1000b304, { 1, 0 }
}

define i32 @function_1000b318(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b318:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b330 = call i32 @__asm_mfcr()
  %v1_1000b334 = and i32 %v0_1000b330, 268435456
  %v3_1000b334 = icmp eq i32 %v1_1000b334, 0
  store i32 %v0_1000b330, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b334, label %dec_label_pc_1000b34c, label %dec_label_pc_1000b340

dec_label_pc_1000b340:                            ; preds = %dec_label_pc_1000b318
  %v0_1000b340 = call i32 @function_10009874()
  %v0_1000b344 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b344 = inttoptr i32 %v0_1000b340 to i32*
  store i32 %v0_1000b344, i32* %v2_1000b344, align 4
  br label %dec_label_pc_1000b34c

dec_label_pc_1000b34c:                            ; preds = %dec_label_pc_1000b318, %dec_label_pc_1000b340
  %v0_1000b35c = phi i32 [ %v0_1000b330, %dec_label_pc_1000b318 ], [ -1, %dec_label_pc_1000b340 ]
  ret i32 %v0_1000b35c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b34c, { 1, 0 }
}

define i32 @function_1000b360(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b360:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b360 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000b38c = call i32 @__asm_mfcr()
  %v1_1000b390 = and i32 %v0_1000b38c, 268435456
  %v3_1000b390 = icmp eq i32 %v1_1000b390, 0
  store i32 %v0_1000b38c, i32* %r31.global-to-local, align 4
  store i32 %v0_1000b38c, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b390, label %dec_label_pc_1000b3b4, label %dec_label_pc_1000b3a4

dec_label_pc_1000b3a4:                            ; preds = %dec_label_pc_1000b360
  %v0_1000b3a4 = call i32 @function_10009874()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000b3ac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b3ac = inttoptr i32 %v0_1000b3a4 to i32*
  store i32 %v0_1000b3ac, i32* %v2_1000b3ac, align 4
  %v0_1000b3b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b3b8

dec_label_pc_1000b3b4:                            ; preds = %dec_label_pc_1000b360
  %v3_1000b39c = icmp eq i32 %v0_1000b38c, 0
  br i1 %v3_1000b39c, label %dec_label_pc_1000b3c4, label %dec_label_pc_1000b3b8

dec_label_pc_1000b3b8:                            ; preds = %dec_label_pc_1000b3b4, %dec_label_pc_1000b3a4
  %v0_1000b3b8 = phi i32 [ %v0_1000b38c, %dec_label_pc_1000b3b4 ], [ %v0_1000b3b8.pre, %dec_label_pc_1000b3a4 ]
  %tmp = icmp slt i32 %v0_1000b3b8, 0
  %v1_1000b3bc = zext i1 %tmp to i32
  %v2_1000b3bc = ashr i32 %v0_1000b3b8, 31
  %v3_1000b3bc = and i32 %v2_1000b3bc, -2
  %v4_1000b3bc = or i32 %v3_1000b3bc, %v1_1000b3bc
  br label %dec_label_pc_1000b3cc

dec_label_pc_1000b3c4:                            ; preds = %dec_label_pc_1000b3b4
  %v3_1000b3c4 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000b3cc

dec_label_pc_1000b3cc:                            ; preds = %dec_label_pc_1000b3b8, %dec_label_pc_1000b3c4
  %v0_1000b3dc = phi i32 [ %v4_1000b3bc, %dec_label_pc_1000b3b8 ], [ %v3_1000b3c4, %dec_label_pc_1000b3c4 ]
  store i32 %v0_1000b360, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b3dc

; uselistorder directives
  uselistorder i32 %v0_1000b3b8, { 1, 0 }
  uselistorder i32 %v0_1000b38c, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 8, 7, 1, 0, 9, 10, 6, 11, 2, 12, 3, 13, 4, 5 }
  uselistorder label %dec_label_pc_1000b3cc, { 1, 0 }
}

define i32 @function_1000b3e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b3e0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b3f8 = call i32 @__asm_mfcr()
  %v1_1000b3fc = and i32 %v0_1000b3f8, 268435456
  %v3_1000b3fc = icmp eq i32 %v1_1000b3fc, 0
  store i32 %v0_1000b3f8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b3fc, label %dec_label_pc_1000b414, label %dec_label_pc_1000b408

dec_label_pc_1000b408:                            ; preds = %dec_label_pc_1000b3e0
  %v0_1000b408 = call i32 @function_10009874()
  %v0_1000b40c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b40c = inttoptr i32 %v0_1000b408 to i32*
  store i32 %v0_1000b40c, i32* %v2_1000b40c, align 4
  br label %dec_label_pc_1000b414

dec_label_pc_1000b414:                            ; preds = %dec_label_pc_1000b3e0, %dec_label_pc_1000b408
  %v0_1000b424 = phi i32 [ %v0_1000b3f8, %dec_label_pc_1000b3e0 ], [ -1, %dec_label_pc_1000b408 ]
  ret i32 %v0_1000b424

; uselistorder directives
  uselistorder label %dec_label_pc_1000b414, { 1, 0 }
}

define i32 @function_1000b428(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b428:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000b444 = load i32, i32* @global_var_1001c338.369, align 4
  %v3_1000b448 = icmp eq i32 %v3_1000b444, 0
  br i1 %v3_1000b448, label %dec_label_pc_1000b450, label %dec_label_pc_1000b45c

dec_label_pc_1000b450:                            ; preds = %dec_label_pc_1000b428
  store i32 268481620, i32* @lr, align 4
  %v1_1000b450 = call i32 @function_1000ba1c(i32 0)
  %v1_1000b454 = icmp slt i32 %v1_1000b450, 0
  br i1 %v1_1000b454, label %dec_label_pc_1000b47c, label %dec_label_pc_1000b450.dec_label_pc_1000b45c_crit_edge

dec_label_pc_1000b450.dec_label_pc_1000b45c_crit_edge: ; preds = %dec_label_pc_1000b450
  %v0_1000b45c.pre = load i32, i32* @r30, align 4
  %v3_1000b460.pre = load i32, i32* @global_var_1001c338.369, align 4
  br label %dec_label_pc_1000b45c

dec_label_pc_1000b45c:                            ; preds = %dec_label_pc_1000b450.dec_label_pc_1000b45c_crit_edge, %dec_label_pc_1000b428
  %v3_1000b460 = phi i32 [ %v3_1000b460.pre, %dec_label_pc_1000b450.dec_label_pc_1000b45c_crit_edge ], [ %v3_1000b444, %dec_label_pc_1000b428 ]
  %v1_1000b468 = phi i32 [ %v0_1000b45c.pre, %dec_label_pc_1000b450.dec_label_pc_1000b45c_crit_edge ], [ %arg1, %dec_label_pc_1000b428 ]
  %v3_1000b45c = icmp eq i32 %v1_1000b468, 0
  store i32 %v3_1000b460, i32* @r31, align 4
  br i1 %v3_1000b45c, label %dec_label_pc_1000b480, label %dec_label_pc_1000b470

dec_label_pc_1000b470:                            ; preds = %dec_label_pc_1000b45c
  %v2_1000b468 = add i32 %v1_1000b468, %v3_1000b460
  store i32 268481652, i32* @lr, align 4
  %v1_1000b470 = call i32 @function_1000ba1c(i32 %v2_1000b468)
  %tmp6 = icmp sgt i32 %v1_1000b470, -1
  br i1 %tmp6, label %dec_label_pc_1000b470.dec_label_pc_1000b480_crit_edge, label %dec_label_pc_1000b47c

dec_label_pc_1000b470.dec_label_pc_1000b480_crit_edge: ; preds = %dec_label_pc_1000b470
  %v0_1000b484.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b480

dec_label_pc_1000b47c:                            ; preds = %dec_label_pc_1000b470, %dec_label_pc_1000b450
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000b480

dec_label_pc_1000b480:                            ; preds = %dec_label_pc_1000b470.dec_label_pc_1000b480_crit_edge, %dec_label_pc_1000b45c, %dec_label_pc_1000b47c
  %v0_1000b484 = phi i32 [ %v0_1000b484.pre, %dec_label_pc_1000b470.dec_label_pc_1000b480_crit_edge ], [ %v3_1000b460, %dec_label_pc_1000b45c ], [ -1, %dec_label_pc_1000b47c ]
  ret i32 %v0_1000b484

; uselistorder directives
  uselistorder i32 %v3_1000b460, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000ba1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b480, { 2, 0, 1 }
}

define i32 @function_1000b498(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b498:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b4b0 = call i32 @__asm_mfcr()
  %v1_1000b4b4 = and i32 %v0_1000b4b0, 268435456
  %v3_1000b4b4 = icmp eq i32 %v1_1000b4b4, 0
  store i32 %v0_1000b4b0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b4b4, label %dec_label_pc_1000b4cc, label %dec_label_pc_1000b4c0

dec_label_pc_1000b4c0:                            ; preds = %dec_label_pc_1000b498
  %v0_1000b4c0 = call i32 @function_10009874()
  %v0_1000b4c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b4c4 = inttoptr i32 %v0_1000b4c0 to i32*
  store i32 %v0_1000b4c4, i32* %v2_1000b4c4, align 4
  br label %dec_label_pc_1000b4cc

dec_label_pc_1000b4cc:                            ; preds = %dec_label_pc_1000b498, %dec_label_pc_1000b4c0
  %v0_1000b4dc = phi i32 [ %v0_1000b4b0, %dec_label_pc_1000b498 ], [ -1, %dec_label_pc_1000b4c0 ]
  ret i32 %v0_1000b4dc

; uselistorder directives
  uselistorder label %dec_label_pc_1000b4cc, { 1, 0 }
}

define i32 @function_1000b4e0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b4e0:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268481800, i32* @lr, align 4
  %v3_1000b504 = call i32 @function_1000995c(i32 %arg2, i32 0, i32 104)
  %v2_1000b508 = load i32, i32* %arg1, align 4
  %v1_1000b50c = add i32 %tmp, 4
  %v2_1000b50c = inttoptr i32 %v1_1000b50c to i32*
  %v3_1000b50c = load i32, i32* %v2_1000b50c, align 4
  store i32 %v3_1000b50c, i32* %r10.global-to-local, align 4
  %v1_1000b510 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b510 = inttoptr i32 %v1_1000b510 to i32*
  store i32 %v2_1000b508, i32* %v2_1000b510, align 4
  %v0_1000b514 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b514 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b514 = add i32 %v1_1000b514, 4
  %v3_1000b514 = inttoptr i32 %v2_1000b514 to i32*
  store i32 %v0_1000b514, i32* %v3_1000b514, align 4
  %v0_1000b518 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b518 = add i32 %v0_1000b518, 8
  %v2_1000b518 = inttoptr i32 %v1_1000b518 to i32*
  %v3_1000b518 = load i32, i32* %v2_1000b518, align 4
  %v1_1000b51c = add i32 %v0_1000b518, 12
  %v2_1000b51c = inttoptr i32 %v1_1000b51c to i32*
  %v3_1000b51c = load i32, i32* %v2_1000b51c, align 4
  store i32 %v3_1000b51c, i32* %r10.global-to-local, align 4
  %v1_1000b520 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b520 = add i32 %v1_1000b520, 8
  %v3_1000b520 = inttoptr i32 %v2_1000b520 to i32*
  store i32 %v3_1000b518, i32* %v3_1000b520, align 4
  %v0_1000b524 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b524 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b524 = add i32 %v1_1000b524, 12
  %v3_1000b524 = inttoptr i32 %v2_1000b524 to i32*
  store i32 %v0_1000b524, i32* %v3_1000b524, align 4
  %v0_1000b528 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b528 = add i32 %v0_1000b528, 16
  %v2_1000b528 = inttoptr i32 %v1_1000b528 to i32*
  %v3_1000b528 = load i32, i32* %v2_1000b528, align 4
  %v1_1000b52c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b52c = add i32 %v1_1000b52c, 16
  %v3_1000b52c = inttoptr i32 %v2_1000b52c to i32*
  store i32 %v3_1000b528, i32* %v3_1000b52c, align 4
  %v0_1000b530 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b530 = add i32 %v0_1000b530, 20
  %v2_1000b530 = inttoptr i32 %v1_1000b530 to i32*
  %v3_1000b530 = load i32, i32* %v2_1000b530, align 4
  %v1_1000b534 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b534 = add i32 %v1_1000b534, 20
  %v3_1000b534 = inttoptr i32 %v2_1000b534 to i32*
  store i32 %v3_1000b530, i32* %v3_1000b534, align 4
  %v0_1000b538 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b538 = add i32 %v0_1000b538, 24
  %v2_1000b538 = inttoptr i32 %v1_1000b538 to i32*
  %v3_1000b538 = load i32, i32* %v2_1000b538, align 4
  %v1_1000b53c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b53c = add i32 %v1_1000b53c, 24
  %v3_1000b53c = inttoptr i32 %v2_1000b53c to i32*
  store i32 %v3_1000b538, i32* %v3_1000b53c, align 4
  %v0_1000b540 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b540 = add i32 %v0_1000b540, 28
  %v2_1000b540 = inttoptr i32 %v1_1000b540 to i32*
  %v3_1000b540 = load i32, i32* %v2_1000b540, align 4
  %v1_1000b544 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b544 = add i32 %v1_1000b544, 28
  %v3_1000b544 = inttoptr i32 %v2_1000b544 to i32*
  store i32 %v3_1000b540, i32* %v3_1000b544, align 4
  %v0_1000b548 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b548 = add i32 %v0_1000b548, 32
  %v2_1000b548 = inttoptr i32 %v1_1000b548 to i32*
  %v3_1000b548 = load i32, i32* %v2_1000b548, align 4
  %v1_1000b54c = add i32 %v0_1000b548, 36
  %v2_1000b54c = inttoptr i32 %v1_1000b54c to i32*
  %v3_1000b54c = load i32, i32* %v2_1000b54c, align 4
  store i32 %v3_1000b54c, i32* %r10.global-to-local, align 4
  %v1_1000b550 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b550 = add i32 %v1_1000b550, 32
  %v3_1000b550 = inttoptr i32 %v2_1000b550 to i32*
  store i32 %v3_1000b548, i32* %v3_1000b550, align 4
  %v0_1000b554 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b554 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b554 = add i32 %v1_1000b554, 36
  %v3_1000b554 = inttoptr i32 %v2_1000b554 to i32*
  store i32 %v0_1000b554, i32* %v3_1000b554, align 4
  %v0_1000b558 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b558 = add i32 %v0_1000b558, 48
  %v2_1000b558 = inttoptr i32 %v1_1000b558 to i32*
  %v3_1000b558 = load i32, i32* %v2_1000b558, align 4
  %v1_1000b55c = add i32 %v0_1000b558, 52
  %v2_1000b55c = inttoptr i32 %v1_1000b55c to i32*
  %v3_1000b55c = load i32, i32* %v2_1000b55c, align 4
  store i32 %v3_1000b55c, i32* %r10.global-to-local, align 4
  %v1_1000b560 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b560 = add i32 %v1_1000b560, 48
  %v3_1000b560 = inttoptr i32 %v2_1000b560 to i32*
  store i32 %v3_1000b558, i32* %v3_1000b560, align 4
  %v0_1000b564 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b564 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b564 = add i32 %v1_1000b564, 52
  %v3_1000b564 = inttoptr i32 %v2_1000b564 to i32*
  store i32 %v0_1000b564, i32* %v3_1000b564, align 4
  %v0_1000b568 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b568 = add i32 %v0_1000b568, 56
  %v2_1000b568 = inttoptr i32 %v1_1000b568 to i32*
  %v3_1000b568 = load i32, i32* %v2_1000b568, align 4
  %v1_1000b56c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b56c = add i32 %v1_1000b56c, 56
  %v3_1000b56c = inttoptr i32 %v2_1000b56c to i32*
  store i32 %v3_1000b568, i32* %v3_1000b56c, align 4
  %v0_1000b570 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b570 = add i32 %v0_1000b570, 64
  %v2_1000b570 = inttoptr i32 %v1_1000b570 to i32*
  %v3_1000b570 = load i32, i32* %v2_1000b570, align 4
  %v1_1000b574 = add i32 %v0_1000b570, 68
  %v2_1000b574 = inttoptr i32 %v1_1000b574 to i32*
  %v3_1000b574 = load i32, i32* %v2_1000b574, align 4
  store i32 %v3_1000b574, i32* %r10.global-to-local, align 4
  %v1_1000b578 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b578 = add i32 %v1_1000b578, 64
  %v3_1000b578 = inttoptr i32 %v2_1000b578 to i32*
  store i32 %v3_1000b570, i32* %v3_1000b578, align 4
  %v0_1000b57c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b57c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b57c = add i32 %v1_1000b57c, 68
  %v3_1000b57c = inttoptr i32 %v2_1000b57c to i32*
  store i32 %v0_1000b57c, i32* %v3_1000b57c, align 4
  %v0_1000b580 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b580 = add i32 %v0_1000b580, 72
  %v2_1000b580 = inttoptr i32 %v1_1000b580 to i32*
  %v3_1000b580 = load i32, i32* %v2_1000b580, align 4
  %v1_1000b584 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b584 = add i32 %v1_1000b584, 72
  %v3_1000b584 = inttoptr i32 %v2_1000b584 to i32*
  store i32 %v3_1000b580, i32* %v3_1000b584, align 4
  %v0_1000b588 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b588 = add i32 %v0_1000b588, 80
  %v2_1000b588 = inttoptr i32 %v1_1000b588 to i32*
  %v3_1000b588 = load i32, i32* %v2_1000b588, align 4
  %v1_1000b58c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b58c = add i32 %v1_1000b58c, 80
  %v3_1000b58c = inttoptr i32 %v2_1000b58c to i32*
  store i32 %v3_1000b588, i32* %v3_1000b58c, align 4
  %v0_1000b590 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b590 = add i32 %v0_1000b590, 88
  %v2_1000b590 = inttoptr i32 %v1_1000b590 to i32*
  %v3_1000b590 = load i32, i32* %v2_1000b590, align 4
  %v1_1000b594 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b594 = add i32 %v1_1000b594, 88
  %v3_1000b594 = inttoptr i32 %v2_1000b594 to i32*
  store i32 %v3_1000b590, i32* %v3_1000b594, align 4
  ret i32 %v3_1000b504

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 16, 15, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b5ac(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b5ac:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000b5b0 = load i32, i32* @lr, align 4
  store i32 %v0_1000b5b0, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268482004, i32* @lr, align 4
  %v3_1000b5d0 = call i32 @function_1000995c(i32 %arg2, i32 0, i32 88)
  %v0_1000b5d4 = load i32, i32* @r28, align 4
  %v1_1000b5d4 = inttoptr i32 %v0_1000b5d4 to i32*
  %v2_1000b5d4 = load i32, i32* %v1_1000b5d4, align 4
  store i32 %v2_1000b5d4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000b5dc = load i32, i32* @r29, align 4
  %v2_1000b5dc = add i32 %v1_1000b5dc, 4
  %v3_1000b5dc = inttoptr i32 %v2_1000b5dc to i32*
  store i32 %v2_1000b5d4, i32* %v3_1000b5dc, align 4
  %v0_1000b5e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b5e0 = load i32, i32* @r29, align 4
  %v2_1000b5e0 = inttoptr i32 %v1_1000b5e0 to i32*
  store i32 %v0_1000b5e0, i32* %v2_1000b5e0, align 4
  %v0_1000b5e4 = load i32, i32* @r28, align 4
  %v1_1000b5e4 = add i32 %v0_1000b5e4, 4
  %v2_1000b5e4 = inttoptr i32 %v1_1000b5e4 to i32*
  %v3_1000b5e4 = load i32, i32* %v2_1000b5e4, align 4
  store i32 %v3_1000b5e4, i32* %r0.global-to-local, align 4
  %v1_1000b5e8 = load i32, i32* @r29, align 4
  %v2_1000b5e8 = add i32 %v1_1000b5e8, 12
  %v3_1000b5e8 = inttoptr i32 %v2_1000b5e8 to i32*
  store i32 %v3_1000b5e4, i32* %v3_1000b5e8, align 4
  %v0_1000b5ec = load i32, i32* @r28, align 4
  %v1_1000b5ec = add i32 %v0_1000b5ec, 8
  %v2_1000b5ec = inttoptr i32 %v1_1000b5ec to i32*
  %v3_1000b5ec = load i32, i32* %v2_1000b5ec, align 4
  store i32 %v3_1000b5ec, i32* %r0.global-to-local, align 4
  %v1_1000b5f0 = load i32, i32* @r29, align 4
  %v2_1000b5f0 = add i32 %v1_1000b5f0, 16
  %v3_1000b5f0 = inttoptr i32 %v2_1000b5f0 to i32*
  store i32 %v3_1000b5ec, i32* %v3_1000b5f0, align 4
  %v0_1000b5f4 = load i32, i32* @r28, align 4
  %v1_1000b5f4 = add i32 %v0_1000b5f4, 12
  %v2_1000b5f4 = inttoptr i32 %v1_1000b5f4 to i16*
  %v3_1000b5f4 = load i16, i16* %v2_1000b5f4, align 2
  %v4_1000b5f4 = zext i16 %v3_1000b5f4 to i32
  store i32 %v4_1000b5f4, i32* %r0.global-to-local, align 4
  %v1_1000b5f8 = load i32, i32* @r29, align 4
  %v2_1000b5f8 = add i32 %v1_1000b5f8, 20
  %v3_1000b5f8 = inttoptr i32 %v2_1000b5f8 to i32*
  store i32 %v4_1000b5f4, i32* %v3_1000b5f8, align 4
  %v0_1000b5fc = load i32, i32* @r28, align 4
  %v1_1000b5fc = add i32 %v0_1000b5fc, 16
  %v2_1000b5fc = inttoptr i32 %v1_1000b5fc to i32*
  %v3_1000b5fc = load i32, i32* %v2_1000b5fc, align 4
  store i32 %v3_1000b5fc, i32* %r0.global-to-local, align 4
  %v1_1000b600 = load i32, i32* @r29, align 4
  %v2_1000b600 = add i32 %v1_1000b600, 24
  %v3_1000b600 = inttoptr i32 %v2_1000b600 to i32*
  store i32 %v3_1000b5fc, i32* %v3_1000b600, align 4
  %v0_1000b604 = load i32, i32* @r28, align 4
  %v1_1000b604 = add i32 %v0_1000b604, 20
  %v2_1000b604 = inttoptr i32 %v1_1000b604 to i32*
  %v3_1000b604 = load i32, i32* %v2_1000b604, align 4
  store i32 %v3_1000b604, i32* %r0.global-to-local, align 4
  %v1_1000b608 = load i32, i32* @r29, align 4
  %v2_1000b608 = add i32 %v1_1000b608, 28
  %v3_1000b608 = inttoptr i32 %v2_1000b608 to i32*
  store i32 %v3_1000b604, i32* %v3_1000b608, align 4
  %v0_1000b60c = load i32, i32* @r28, align 4
  %v1_1000b60c = add i32 %v0_1000b60c, 24
  %v2_1000b60c = inttoptr i32 %v1_1000b60c to i32*
  %v3_1000b60c = load i32, i32* %v2_1000b60c, align 4
  store i32 %v3_1000b60c, i32* %r0.global-to-local, align 4
  %v0_1000b610 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b610 = load i32, i32* @r29, align 4
  %v2_1000b610 = add i32 %v1_1000b610, 32
  %v3_1000b610 = inttoptr i32 %v2_1000b610 to i32*
  store i32 %v0_1000b610, i32* %v3_1000b610, align 4
  %v0_1000b614 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b614 = load i32, i32* @r29, align 4
  %v2_1000b614 = add i32 %v1_1000b614, 36
  %v3_1000b614 = inttoptr i32 %v2_1000b614 to i32*
  store i32 %v0_1000b614, i32* %v3_1000b614, align 4
  %v0_1000b618 = load i32, i32* @r28, align 4
  %v1_1000b618 = add i32 %v0_1000b618, 28
  %v2_1000b618 = inttoptr i32 %v1_1000b618 to i32*
  %v3_1000b618 = load i32, i32* %v2_1000b618, align 4
  store i32 %v3_1000b618, i32* %r0.global-to-local, align 4
  %v1_1000b61c = load i32, i32* @r29, align 4
  %v2_1000b61c = add i32 %v1_1000b61c, 44
  %v3_1000b61c = inttoptr i32 %v2_1000b61c to i32*
  store i32 %v3_1000b618, i32* %v3_1000b61c, align 4
  %v0_1000b620 = load i32, i32* @r28, align 4
  %v1_1000b620 = add i32 %v0_1000b620, 32
  %v2_1000b620 = inttoptr i32 %v1_1000b620 to i32*
  %v3_1000b620 = load i32, i32* %v2_1000b620, align 4
  store i32 %v3_1000b620, i32* %r0.global-to-local, align 4
  %v1_1000b624 = load i32, i32* @r29, align 4
  %v2_1000b624 = add i32 %v1_1000b624, 48
  %v3_1000b624 = inttoptr i32 %v2_1000b624 to i32*
  store i32 %v3_1000b620, i32* %v3_1000b624, align 4
  %v0_1000b628 = load i32, i32* @r28, align 4
  %v1_1000b628 = add i32 %v0_1000b628, 36
  %v2_1000b628 = inttoptr i32 %v1_1000b628 to i32*
  %v3_1000b628 = load i32, i32* %v2_1000b628, align 4
  store i32 %v3_1000b628, i32* %r0.global-to-local, align 4
  %v1_1000b62c = load i32, i32* @r29, align 4
  %v2_1000b62c = add i32 %v1_1000b62c, 52
  %v3_1000b62c = inttoptr i32 %v2_1000b62c to i32*
  store i32 %v3_1000b628, i32* %v3_1000b62c, align 4
  %v0_1000b630 = load i32, i32* @r28, align 4
  %v1_1000b630 = add i32 %v0_1000b630, 40
  %v2_1000b630 = inttoptr i32 %v1_1000b630 to i32*
  %v3_1000b630 = load i32, i32* %v2_1000b630, align 4
  store i32 %v3_1000b630, i32* %r0.global-to-local, align 4
  %v1_1000b634 = load i32, i32* @r29, align 4
  %v2_1000b634 = add i32 %v1_1000b634, 56
  %v3_1000b634 = inttoptr i32 %v2_1000b634 to i32*
  store i32 %v3_1000b630, i32* %v3_1000b634, align 4
  %v0_1000b638 = load i32, i32* @r28, align 4
  %v1_1000b638 = add i32 %v0_1000b638, 48
  %v2_1000b638 = inttoptr i32 %v1_1000b638 to i32*
  %v3_1000b638 = load i32, i32* %v2_1000b638, align 4
  store i32 %v3_1000b638, i32* %r0.global-to-local, align 4
  %v1_1000b63c = load i32, i32* @r29, align 4
  %v2_1000b63c = add i32 %v1_1000b63c, 64
  %v3_1000b63c = inttoptr i32 %v2_1000b63c to i32*
  store i32 %v3_1000b638, i32* %v3_1000b63c, align 4
  %v0_1000b640 = load i32, i32* @r28, align 4
  %v1_1000b640 = add i32 %v0_1000b640, 56
  %v2_1000b640 = inttoptr i32 %v1_1000b640 to i32*
  %v3_1000b640 = load i32, i32* %v2_1000b640, align 4
  %v1_1000b644 = load i32, i32* @r29, align 4
  %v2_1000b644 = add i32 %v1_1000b644, 72
  %v3_1000b644 = inttoptr i32 %v2_1000b644 to i32*
  store i32 %v3_1000b640, i32* %v3_1000b644, align 4
  store i32 %v0_1000b5b0, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000b5d0

; uselistorder directives
  uselistorder i32 72, { 2, 0, 1 }
  uselistorder i32 64, { 19, 13, 14, 2, 21, 15, 0, 1, 12, 16, 17, 18, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 56, { 7, 8, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 40, { 9, 0, 4, 1, 5, 6, 7, 8, 10, 3, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 52, { 4, 1, 2, 3, 5, 6, 0, 7 }
  uselistorder i32 48, { 3, 4, 1, 2, 5, 0, 6, 7 }
  uselistorder i32 36, { 6, 7, 4, 5, 0, 1, 2, 3 }
  uselistorder i32 24, { 20, 21, 7, 8, 0, 1, 9, 27, 28, 29, 22, 23, 24, 10, 11, 12, 13, 14, 16, 17, 18, 19, 15, 2, 3, 4, 5, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 6 }
  uselistorder i32 20, { 28, 29, 19, 20, 21, 22, 30, 31, 32, 33, 23, 5, 0, 1, 24, 25, 2, 26, 27, 6, 7, 8, 9, 34, 10, 35, 36, 37, 38, 39, 11, 40, 41, 42, 43, 44, 45, 46, 47, 12, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 13, 58, 59, 60, 61, 62, 63, 64, 65, 14, 66, 67, 68, 69, 70, 71, 15, 72, 73, 74, 75, 76, 77, 78, 16, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 3, 17, 91, 92, 93, 4, 18, 94, 95, 96 }
  uselistorder i32 16, { 92, 93, 77, 78, 94, 95, 96, 97, 98, 20, 91, 79, 176, 177, 99, 100, 46, 47, 48, 80, 49, 50, 81, 82, 104, 101, 83, 84, 51, 23, 86, 87, 18, 0, 19, 1, 2, 88, 3, 85, 90, 52, 89, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 24, 159, 160, 161, 162, 163, 4, 25, 102, 5, 6, 103, 105, 106, 26, 107, 108, 109, 110, 111, 112, 113, 27, 114, 115, 116, 29, 117, 28, 118, 119, 31, 120, 121, 7, 122, 123, 124, 30, 125, 126, 33, 127, 128, 129, 130, 131, 32, 37, 132, 133, 134, 8, 135, 136, 9, 10, 21, 138, 137, 34, 36, 35, 41, 139, 140, 141, 11, 142, 143, 12, 13, 22, 145, 144, 38, 40, 39, 146, 43, 147, 42, 148, 149, 14, 150, 44, 151, 152, 153, 15, 154, 157, 158, 155, 156, 164, 165, 16, 166, 45, 167, 168, 169, 17, 170, 173, 174, 171, 172, 175 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b65c() local_unnamed_addr {
dec_label_pc_1000b65c:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000b65c = load i32, i32* @r5, align 4
  %v1_1000b65c = call i32 @__asm_rlwinm.(i32 %v0_1000b65c, i32 29, i32 3, i32 31)
  store i32 %v1_1000b65c, i32* %r9.global-to-local, align 4
  %v4_1000b65c = icmp eq i32 %v1_1000b65c, 0
  %v0_1000b660 = load i32, i32* @r4, align 4
  %v1_1000b660 = add i32 %v0_1000b660, -4
  store i32 %v1_1000b660, i32* %r4.global-to-local, align 4
  %v0_1000b664 = load i32, i32* @r3, align 4
  %v1_1000b664 = add i32 %v0_1000b664, -4
  store i32 %v1_1000b664, i32* @r11, align 4
  br i1 %v4_1000b65c, label %dec_label_pc_1000b68c, label %dec_label_pc_1000b66c

dec_label_pc_1000b66c:                            ; preds = %dec_label_pc_1000b65c
  %v1_1000b66c = urem i32 %v1_1000b664, 4
  %v3_1000b66c = icmp eq i32 %v1_1000b66c, 0
  br i1 %v3_1000b66c, label %dec_label_pc_1000b674, label %dec_label_pc_1000b6c8

dec_label_pc_1000b674:                            ; preds = %dec_label_pc_1000b6e8.dec_label_pc_1000b674_crit_edge, %dec_label_pc_1000b66c
  %v1_1000b680.pre = phi i32 [ %v1_1000b664, %dec_label_pc_1000b66c ], [ %v1_1000b680.pre.pre, %dec_label_pc_1000b6e8.dec_label_pc_1000b674_crit_edge ]
  %v0_1000b674 = phi i32 [ %v1_1000b65c, %dec_label_pc_1000b66c ], [ %v1_1000b6e8, %dec_label_pc_1000b6e8.dec_label_pc_1000b674_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000b66c ], [ %v2_1000b6d0, %dec_label_pc_1000b6e8.dec_label_pc_1000b674_crit_edge ]
  store i32 %v0_1000b674, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b678

dec_label_pc_1000b678:                            ; preds = %dec_label_pc_1000b678, %dec_label_pc_1000b674
  %v1_1000b680 = phi i32 [ %v2_1000b684, %dec_label_pc_1000b678 ], [ %v1_1000b680.pre, %dec_label_pc_1000b674 ]
  %v0_1000b678 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b678 = add i32 %v0_1000b678, 4
  %v2_1000b678 = inttoptr i32 %v1_1000b678 to i32*
  %v3_1000b678 = load i32, i32* %v2_1000b678, align 4
  %v1_1000b67c = add i32 %v0_1000b678, 8
  %v2_1000b67c = inttoptr i32 %v1_1000b67c to i32*
  %v3_1000b67c = load i32, i32* %v2_1000b67c, align 4
  store i32 %v3_1000b67c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b67c, i32* %r4.global-to-local, align 4
  %v2_1000b680 = add i32 %v1_1000b680, 4
  %v3_1000b680 = inttoptr i32 %v2_1000b680 to i32*
  store i32 %v3_1000b678, i32* %v3_1000b680, align 4
  %v0_1000b684 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b684 = load i32, i32* @r11, align 4
  %v2_1000b684 = add i32 %v1_1000b684, 8
  %v3_1000b684 = inttoptr i32 %v2_1000b684 to i32*
  store i32 %v0_1000b684, i32* %v3_1000b684, align 4
  store i32 %v2_1000b684, i32* @r11, align 4
  %v0_1000b688 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b688 = add i32 %v0_1000b688, -1
  store i32 %v1_1000b688, i32* %ctr.global-to-local, align 4
  %v2_1000b688 = icmp eq i32 %v1_1000b688, 0
  br i1 %v2_1000b688, label %dec_label_pc_1000b68c, label %dec_label_pc_1000b678

dec_label_pc_1000b68c:                            ; preds = %dec_label_pc_1000b678, %dec_label_pc_1000b6e8, %dec_label_pc_1000b65c
  %.1 = phi i32 [ undef, %dec_label_pc_1000b65c ], [ %v2_1000b6d0, %dec_label_pc_1000b6e8 ], [ %.0, %dec_label_pc_1000b678 ]
  %v1_1000b68c = urem i32 %.1, 8
  store i32 %v1_1000b68c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b68c, 4
  br i1 %tmp, label %dec_label_pc_1000b6a4, label %dec_label_pc_1000b698

dec_label_pc_1000b698:                            ; preds = %dec_label_pc_1000b68c
  %v0_1000b698 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b698 = add i32 %v0_1000b698, 4
  %v2_1000b698 = inttoptr i32 %v1_1000b698 to i32*
  %v3_1000b698 = load i32, i32* %v2_1000b698, align 4
  store i32 %v1_1000b698, i32* %r4.global-to-local, align 4
  %v1_1000b69c = add nsw i32 %v1_1000b68c, -4
  store i32 %v1_1000b69c, i32* @r5, align 4
  %v1_1000b6a0 = load i32, i32* @r11, align 4
  %v2_1000b6a0 = add i32 %v1_1000b6a0, 4
  %v3_1000b6a0 = inttoptr i32 %v2_1000b6a0 to i32*
  store i32 %v3_1000b698, i32* %v3_1000b6a0, align 4
  store i32 %v2_1000b6a0, i32* @r11, align 4
  %v0_1000b6a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000b6a4

dec_label_pc_1000b6a4:                            ; preds = %dec_label_pc_1000b68c, %dec_label_pc_1000b698
  %v0_1000b6a4 = phi i32 [ %v1_1000b68c, %dec_label_pc_1000b68c ], [ %v0_1000b6a4.pre, %dec_label_pc_1000b698 ]
  %v3_1000b6a4 = icmp eq i32 %v0_1000b6a4, 0
  %v0_1000b6a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b6a4, i32 %v0_1000b6a8)
  %v0_1000b6ac = load i32, i32* @r5, align 4
  store i32 %v0_1000b6ac, i32* %ctr.global-to-local, align 4
  %v0_1000b6b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b6b0 = add i32 %v0_1000b6b0, 3
  store i32 %v1_1000b6b0, i32* %r4.global-to-local, align 4
  %v0_1000b6b4 = load i32, i32* @r11, align 4
  %v1_1000b6b4 = add i32 %v0_1000b6b4, 3
  store i32 %v1_1000b6b4, i32* %r9.global-to-local, align 4
  %v1_1000b6b89 = add i32 %v0_1000b6b0, 4
  %v2_1000b6b810 = inttoptr i32 %v1_1000b6b89 to i8*
  %v3_1000b6b811 = load i8, i8* %v2_1000b6b810, align 1
  store i32 %v1_1000b6b89, i32* %r4.global-to-local, align 4
  %v3_1000b6bc13 = add i32 %v0_1000b6b4, 4
  %v4_1000b6bc14 = inttoptr i32 %v3_1000b6bc13 to i8*
  store i8 %v3_1000b6b811, i8* %v4_1000b6bc14, align 1
  store i32 %v3_1000b6bc13, i32* %r9.global-to-local, align 4
  %v0_1000b6c015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b6c016 = add i32 %v0_1000b6c015, -1
  store i32 %v1_1000b6c016, i32* %ctr.global-to-local, align 4
  %v2_1000b6c017 = icmp eq i32 %v1_1000b6c016, 0
  br i1 %v2_1000b6c017, label %dec_label_pc_1000b6f4, label %dec_label_pc_1000b6b8.dec_label_pc_1000b6b8_crit_edge

dec_label_pc_1000b6b8.dec_label_pc_1000b6b8_crit_edge: ; preds = %dec_label_pc_1000b6a4, %dec_label_pc_1000b6b8.dec_label_pc_1000b6b8_crit_edge
  %v3_1000b6bc18 = phi i32 [ %v3_1000b6bc, %dec_label_pc_1000b6b8.dec_label_pc_1000b6b8_crit_edge ], [ %v3_1000b6bc13, %dec_label_pc_1000b6a4 ]
  %v0_1000b6b8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b6b8 = add i32 %v0_1000b6b8.pre, 1
  %v2_1000b6b8 = inttoptr i32 %v1_1000b6b8 to i8*
  %v3_1000b6b8 = load i8, i8* %v2_1000b6b8, align 1
  store i32 %v1_1000b6b8, i32* %r4.global-to-local, align 4
  %v3_1000b6bc = add i32 %v3_1000b6bc18, 1
  %v4_1000b6bc = inttoptr i32 %v3_1000b6bc to i8*
  store i8 %v3_1000b6b8, i8* %v4_1000b6bc, align 1
  store i32 %v3_1000b6bc, i32* %r9.global-to-local, align 4
  %v0_1000b6c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b6c0 = add i32 %v0_1000b6c0, -1
  store i32 %v1_1000b6c0, i32* %ctr.global-to-local, align 4
  %v2_1000b6c0 = icmp eq i32 %v1_1000b6c0, 0
  br i1 %v2_1000b6c0, label %dec_label_pc_1000b6f4, label %dec_label_pc_1000b6b8.dec_label_pc_1000b6b8_crit_edge

dec_label_pc_1000b6c8:                            ; preds = %dec_label_pc_1000b66c
  %v1_1000b6c8 = sub nsw i32 4, %v1_1000b66c
  store i32 %v1_1000b6c8, i32* %ctr.global-to-local, align 4
  %v1_1000b6d0 = load i32, i32* @r5, align 4
  %v2_1000b6d0 = sub i32 %v1_1000b6d0, %v1_1000b6c8
  br label %dec_label_pc_1000b6d4

dec_label_pc_1000b6d4:                            ; preds = %dec_label_pc_1000b6d4.dec_label_pc_1000b6d4_crit_edge, %dec_label_pc_1000b6c8
  %v2_1000b6dc = phi i32 [ %v1_1000b6e0, %dec_label_pc_1000b6d4.dec_label_pc_1000b6d4_crit_edge ], [ %v1_1000b664, %dec_label_pc_1000b6c8 ]
  %v0_1000b6d4 = phi i32 [ %v0_1000b6d4.pre, %dec_label_pc_1000b6d4.dec_label_pc_1000b6d4_crit_edge ], [ %v1_1000b660, %dec_label_pc_1000b6c8 ]
  %v1_1000b6d4 = add i32 %v0_1000b6d4, 4
  %v2_1000b6d4 = inttoptr i32 %v1_1000b6d4 to i8*
  %v3_1000b6d4 = load i8, i8* %v2_1000b6d4, align 1
  %v1_1000b6d8 = add i32 %v0_1000b6d4, 1
  store i32 %v1_1000b6d8, i32* %r4.global-to-local, align 4
  %v3_1000b6dc = add i32 %v2_1000b6dc, 4
  %v4_1000b6dc = inttoptr i32 %v3_1000b6dc to i8*
  store i8 %v3_1000b6d4, i8* %v4_1000b6dc, align 1
  %v0_1000b6e0 = load i32, i32* @r11, align 4
  %v1_1000b6e0 = add i32 %v0_1000b6e0, 1
  store i32 %v1_1000b6e0, i32* @r11, align 4
  %v0_1000b6e4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b6e4 = add i32 %v0_1000b6e4, -1
  store i32 %v1_1000b6e4, i32* %ctr.global-to-local, align 4
  %v2_1000b6e4 = icmp eq i32 %v1_1000b6e4, 0
  br i1 %v2_1000b6e4, label %dec_label_pc_1000b6e8, label %dec_label_pc_1000b6d4.dec_label_pc_1000b6d4_crit_edge

dec_label_pc_1000b6d4.dec_label_pc_1000b6d4_crit_edge: ; preds = %dec_label_pc_1000b6d4
  %v0_1000b6d4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b6d4

dec_label_pc_1000b6e8:                            ; preds = %dec_label_pc_1000b6d4
  %v1_1000b6e8 = call i32 @__asm_rlwinm.(i32 %v2_1000b6d0, i32 29, i32 3, i32 31)
  store i32 %v1_1000b6e8, i32* %r9.global-to-local, align 4
  %v4_1000b6e8 = icmp eq i32 %v1_1000b6e8, 0
  br i1 %v4_1000b6e8, label %dec_label_pc_1000b68c, label %dec_label_pc_1000b6e8.dec_label_pc_1000b674_crit_edge

dec_label_pc_1000b6e8.dec_label_pc_1000b674_crit_edge: ; preds = %dec_label_pc_1000b6e8
  %v1_1000b680.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000b674

dec_label_pc_1000b6f4:                            ; preds = %dec_label_pc_1000b6b8.dec_label_pc_1000b6b8_crit_edge, %dec_label_pc_1000b6a4
  %v0_1000b6f4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b6f4

; uselistorder directives
  uselistorder i32 %v1_1000b6e8, { 1, 2, 0 }
  uselistorder i32 %v1_1000b6e4, { 1, 0 }
  uselistorder i32 %v1_1000b6e0, { 1, 0 }
  uselistorder i32 %v0_1000b6d4, { 1, 0 }
  uselistorder i32 %v2_1000b6d0, { 2, 1, 0 }
  uselistorder i32 %v1_1000b6c0, { 1, 0 }
  uselistorder i32 %v3_1000b6bc, { 1, 2, 0 }
  uselistorder i32 %v1_1000b68c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b688, { 1, 0 }
  uselistorder i32 %v2_1000b684, { 1, 2, 0 }
  uselistorder i32 %v1_1000b66c, { 1, 0 }
  uselistorder i32 %v1_1000b664, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 33, 34, 29, 31, 30, 32, 3, 4, 37, 38, 35, 36, 39, 40, 27, 28, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26, 15, 16, 19, 20, 21, 22, 17, 18, 23, 24, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b6b8.dec_label_pc_1000b6b8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b68c, { 1, 0, 2 }
}

define i32 @function_1000b6f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b6f8:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268482324, i32* @lr, align 4
  %v0_1000b710 = call i32 @function_1000b65c()
  %v0_1000b718 = load i32, i32* @r28, align 4
  %v1_1000b718 = load i32, i32* @r29, align 4
  %v2_1000b718 = add i32 %v1_1000b718, %v0_1000b718
  ret i32 %v2_1000b718

; uselistorder directives
  uselistorder i32* @r28, { 8, 9, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 1, 74, 75, 76, 77, 78, 79, 296, 297, 298, 299, 300, 2, 49, 50, 51, 7, 52, 260, 261, 262, 263, 264, 265, 266, 267, 268, 282, 283, 284, 285, 10, 11, 12, 13, 14, 80, 81, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 31, 32, 33, 24, 3, 25, 26, 27, 28, 29, 4, 44, 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 59, 82, 83, 84, 85, 86, 87, 88, 5, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 286, 287, 289, 290, 6, 291, 292, 293, 294, 295 }
}

define i32 @function_1000b72c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000b72c:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000b72c = icmp eq i8* %arg1, null
  br i1 %v3_1000b72c, label %dec_label_pc_1000b7e4, label %dec_label_pc_1000b734

dec_label_pc_1000b734:                            ; preds = %dec_label_pc_1000b72c
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000b748.pre = load i32, i32* bitcast (i32** @global_var_1001c2c4.351 to i32*), align 4
  br label %dec_label_pc_1000b744

dec_label_pc_1000b744:                            ; preds = %dec_label_pc_1000b734, %dec_label_pc_1000b7bc
  %v0_1000b7bc = phi i32 [ 0, %dec_label_pc_1000b734 ], [ %v2_1000b7c4, %dec_label_pc_1000b7bc ]
  %v0_1000b7c0 = phi i32 [ 1, %dec_label_pc_1000b734 ], [ %v1_1000b7c0, %dec_label_pc_1000b7bc ]
  %v0_1000b744 = phi i32 [ %tmp, %dec_label_pc_1000b734 ], [ %v0_1000b7443, %dec_label_pc_1000b7bc ]
  %v1_1000b744 = inttoptr i32 %v0_1000b744 to i8*
  %v2_1000b744 = load i8, i8* %v1_1000b744, align 1
  %v3_1000b744 = zext i8 %v2_1000b744 to i32
  %v1_1000b74c = mul nuw nsw i32 %v3_1000b744, 2
  %v2_1000b750 = add i32 %v1_1000b74c, %v3_1000b748.pre
  %v3_1000b750 = inttoptr i32 %v2_1000b750 to i16*
  %v4_1000b750 = load i16, i16* %v3_1000b750, align 2
  %v1_1000b754 = and i16 %v4_1000b750, 8
  %v3_1000b754 = icmp eq i16 %v1_1000b754, 0
  br i1 %v3_1000b754, label %dec_label_pc_1000b7e4, label %dec_label_pc_1000b75c

dec_label_pc_1000b75c:                            ; preds = %dec_label_pc_1000b744
  br label %dec_label_pc_1000b774

dec_label_pc_1000b764:                            ; preds = %dec_label_pc_1000b774
  %v1_1000b778 = mul i32 %v1_1000b7c4, 10
  %v2_1000b780 = add i32 %v3_1000b774, %v1_1000b778
  %v1_1000b764 = add i32 %v2_1000b780, -48
  %v1_1000b768 = add i32 %v0_1000b7ac, 1
  %v2_1000b76c = icmp sgt i32 %v1_1000b764, 255
  br i1 %v2_1000b76c, label %dec_label_pc_1000b7e4, label %dec_label_pc_1000b774

dec_label_pc_1000b774:                            ; preds = %dec_label_pc_1000b764, %dec_label_pc_1000b75c
  %v1_1000b7c4 = phi i32 [ %v1_1000b764, %dec_label_pc_1000b764 ], [ 0, %dec_label_pc_1000b75c ]
  %v0_1000b7ac = phi i32 [ %v1_1000b768, %dec_label_pc_1000b764 ], [ %v0_1000b744, %dec_label_pc_1000b75c ]
  %v1_1000b774 = inttoptr i32 %v0_1000b7ac to i8*
  %v2_1000b774 = load i8, i8* %v1_1000b774, align 1
  %v3_1000b774 = zext i8 %v2_1000b774 to i32
  %v1_1000b77c = mul nuw nsw i32 %v3_1000b774, 2
  %v2_1000b784 = add i32 %v1_1000b77c, %v3_1000b748.pre
  %v3_1000b784 = inttoptr i32 %v2_1000b784 to i16*
  %v4_1000b784 = load i16, i16* %v3_1000b784, align 2
  %v5_1000b784 = zext i16 %v4_1000b784 to i32
  %v1_1000b788 = and i32 %v5_1000b784, 8
  %v3_1000b788 = icmp eq i32 %v1_1000b788, 0
  br i1 %v3_1000b788, label %dec_label_pc_1000b790, label %dec_label_pc_1000b764

dec_label_pc_1000b790:                            ; preds = %dec_label_pc_1000b774
  %v2_1000b790 = icmp sgt i32 %v0_1000b7c0, 3
  br i1 %v2_1000b790, label %dec_label_pc_1000b7a8, label %dec_label_pc_1000b798

dec_label_pc_1000b798:                            ; preds = %dec_label_pc_1000b790
  %v3_1000b798 = icmp eq i8 %v2_1000b774, 46
  br i1 %v3_1000b798, label %dec_label_pc_1000b7a0, label %dec_label_pc_1000b7e4

dec_label_pc_1000b7a0:                            ; preds = %dec_label_pc_1000b798
  %v1_1000b7a0 = add i32 %v0_1000b7ac, 1
  br label %dec_label_pc_1000b7bc

dec_label_pc_1000b7a8:                            ; preds = %dec_label_pc_1000b790
  %v3_1000b7a8 = icmp eq i8 %v2_1000b774, 0
  %v1_1000b7ac = add i32 %v0_1000b7ac, 1
  br i1 %v3_1000b7a8, label %dec_label_pc_1000b7bc, label %dec_label_pc_1000b7b4

dec_label_pc_1000b7b4:                            ; preds = %dec_label_pc_1000b7a8
  %v1_1000b7b4 = and i32 %v5_1000b784, 32
  %v3_1000b7b4 = icmp eq i32 %v1_1000b7b4, 0
  br i1 %v3_1000b7b4, label %dec_label_pc_1000b7e4, label %dec_label_pc_1000b7bc

dec_label_pc_1000b7bc:                            ; preds = %dec_label_pc_1000b7b4, %dec_label_pc_1000b7a8, %dec_label_pc_1000b7a0
  %v0_1000b7443 = phi i32 [ %v1_1000b7ac, %dec_label_pc_1000b7b4 ], [ %v1_1000b7ac, %dec_label_pc_1000b7a8 ], [ %v1_1000b7a0, %dec_label_pc_1000b7a0 ]
  %v1_1000b7bc = mul i32 %v0_1000b7bc, 256
  %v1_1000b7c0 = add nuw nsw i32 %v0_1000b7c0, 1
  %v2_1000b7c4 = or i32 %v1_1000b7c4, %v1_1000b7bc
  store i32 %v2_1000b7c4, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000b7c0, 5
  br i1 %tmp10, label %dec_label_pc_1000b744, label %dec_label_pc_1000b7d0

dec_label_pc_1000b7d0:                            ; preds = %dec_label_pc_1000b7bc
  %v0_1000b7d0 = load i32, i32* @r4, align 4
  %v3_1000b7d0 = icmp eq i32 %v0_1000b7d0, 0
  %v0_1000b7d8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b7d0, i32 %v0_1000b7d8)
  %v0_1000b7dc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b7dc = load i32, i32* @r4, align 4
  %v2_1000b7dc = inttoptr i32 %v1_1000b7dc to i32*
  store i32 %v0_1000b7dc, i32* %v2_1000b7dc, align 4
  ret i32 1

dec_label_pc_1000b7e4:                            ; preds = %dec_label_pc_1000b798, %dec_label_pc_1000b7b4, %dec_label_pc_1000b744, %dec_label_pc_1000b764, %dec_label_pc_1000b72c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000b7c4, { 1, 0 }
  uselistorder i32 %v1_1000b7c0, { 1, 0 }
  uselistorder i32 %v0_1000b7ac, { 0, 1, 3, 2 }
  uselistorder i32 5, { 23, 5, 24, 25, 41, 26, 27, 42, 43, 3, 2, 1, 44, 6, 7, 45, 0, 46, 47, 4, 48, 28, 29, 30, 31, 32, 33, 34, 49, 8, 10, 50, 9, 51, 13, 52, 12, 53, 11, 35, 54, 14, 16, 55, 36, 56, 15, 37, 57, 17, 38, 58, 18, 39, 59, 20, 60, 19, 40, 61, 22, 62, 21, 63, 64, 65, 66, 67 }
  uselistorder i8 0, { 5, 10, 0, 11, 12, 8, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 25, 27, 24, 2, 26, 3, 28, 29, 6, 9, 30, 31, 32, 33, 34, 35, 36, 37, 4, 38, 39, 40, 41, 7, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i8 46, { 1, 2, 3, 0 }
  uselistorder i32 8, { 124, 3, 138, 139, 61, 40, 41, 62, 63, 64, 65, 66, 67, 142, 143, 11, 140, 141, 12, 128, 127, 125, 126, 109, 110, 111, 129, 130, 131, 132, 133, 134, 4, 42, 43, 44, 5, 144, 6, 68, 69, 70, 71, 72, 73, 30, 31, 45, 29, 28, 46, 32, 33, 47, 48, 7, 8, 9, 49, 50, 52, 53, 34, 35, 54, 36, 55, 57, 56, 51, 58, 59, 60, 15, 74, 75, 16, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 37, 88, 89, 90, 91, 92, 93, 94, 95, 38, 96, 97, 98, 99, 100, 101, 102, 103, 104, 13, 105, 106, 107, 108, 14, 17, 112, 18, 113, 19, 114, 20, 115, 21, 116, 22, 117, 23, 118, 119, 24, 120, 25, 121, 26, 122, 27, 123, 0, 1, 10, 135, 136, 39, 137, 2 }
  uselistorder i32 255, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 71, 33, 10, 32, 2, 3, 6, 5, 0, 11, 12, 13, 18, 19, 20, 21, 22, 23, 14, 24, 25, 26, 7, 27, 28, 31, 29, 4, 30, 15, 1, 16, 8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 9, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 17, 70 }
  uselistorder i16 0, { 0, 1, 2, 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 13 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7e4, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000b744, { 1, 0 }
}

define i32 @function_1000b7ec(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b7ec:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b7f0 = load i32, i32* @lr, align 4
  store i32 %v0_1000b7f0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b7fc = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000b80c = add i32 %tmp, 4
  store i32 %v1_1000b80c, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b814 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b814, i32* @r3, align 4
  br i1 %v3_1000b7fc, label %dec_label_pc_1000b83c, label %dec_label_pc_1000b81c

dec_label_pc_1000b81c:                            ; preds = %dec_label_pc_1000b7ec
  %v2_1000b81c = load i32, i32* %arg2, align 4
  store i32 %v2_1000b81c, i32* %r0.global-to-local, align 4
  store i32 268482600, i32* @lr, align 4
  %v0_1000b824 = call i32 @function_1000b65c()
  %v0_1000b828 = load i32, i32* @r31, align 4
  %v1_1000b828 = add i32 %v0_1000b828, 132
  %v2_1000b828 = inttoptr i32 %v1_1000b828 to i32*
  %v3_1000b828 = load i32, i32* %v2_1000b828, align 4
  store i32 %v3_1000b828, i32* %r0.global-to-local, align 4
  %v1_1000b834 = add i32 %v0_1000b828, 136
  %v2_1000b834 = inttoptr i32 %v1_1000b834 to i32*
  %v3_1000b834 = load i32, i32* %v2_1000b834, align 4
  store i32 %v3_1000b834, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b83c

dec_label_pc_1000b83c:                            ; preds = %dec_label_pc_1000b7ec, %dec_label_pc_1000b81c
  store i32 268482652, i32* @lr, align 4
  %v0_1000b858 = call i32 @function_1000ba50()
  %v0_1000b85c = load i32, i32* @r30, align 4
  %v3_1000b85c = icmp eq i32 %v0_1000b85c, 0
  store i32 %v0_1000b858, i32* @r31, align 4
  br i1 %v3_1000b85c, label %dec_label_pc_1000b898, label %dec_label_pc_1000b86c

dec_label_pc_1000b86c:                            ; preds = %dec_label_pc_1000b83c
  %v1_1000b864 = icmp slt i32 %v0_1000b858, 0
  %v1_1000b86c = add i32 %v0_1000b85c, 4
  store i32 %v1_1000b86c, i32* @r3, align 4
  %v2_1000b870 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b870, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b864, label %dec_label_pc_1000b898, label %dec_label_pc_1000b87c

dec_label_pc_1000b87c:                            ; preds = %dec_label_pc_1000b86c
  %v3_1000b87c = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b87c, i32* %r0.global-to-local, align 4
  %v2_1000b880 = inttoptr i32 %v0_1000b85c to i32*
  store i32 %v3_1000b87c, i32* %v2_1000b880, align 4
  store i32 268482696, i32* @lr, align 4
  %v0_1000b884 = call i32 @function_1000b65c()
  %v1_1000b890 = load i32, i32* @r30, align 4
  %v2_1000b890 = add i32 %v1_1000b890, 136
  %v3_1000b890 = inttoptr i32 %v2_1000b890 to i32*
  %v0_1000b894 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b894 = load i32, i32* @r30, align 4
  %v2_1000b894 = add i32 %v1_1000b894, 132
  %v3_1000b894 = inttoptr i32 %v2_1000b894 to i32*
  store i32 %v0_1000b894, i32* %v3_1000b894, align 4
  %v0_1000b89c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b898

dec_label_pc_1000b898:                            ; preds = %dec_label_pc_1000b86c, %dec_label_pc_1000b83c, %dec_label_pc_1000b87c
  %v0_1000b89c = phi i32 [ %v0_1000b858, %dec_label_pc_1000b86c ], [ %v0_1000b858, %dec_label_pc_1000b83c ], [ %v0_1000b89c.pre, %dec_label_pc_1000b87c ]
  store i32 %v0_1000b7f0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b89c

; uselistorder directives
  uselistorder i32 %v0_1000b858, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 ()* @function_1000b65c, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 2, 13, 6, 28, 29, 5, 3, 4, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 7, 8, 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* @r30, { 161, 162, 163, 164, 0, 143, 1, 48, 49, 50, 165, 168, 166, 167, 144, 145, 146, 138, 139, 140, 141, 142, 147, 148, 152, 149, 150, 151, 7, 8, 9, 10, 11, 12, 13, 2, 14, 3, 15, 22, 23, 16, 17, 18, 4, 19, 20, 21, 34, 35, 36, 37, 38, 39, 40, 41, 42, 24, 26, 27, 25, 28, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 5, 58, 59, 6, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 154, 155, 153, 156, 157, 158, 159, 160 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r31, { 2, 307, 308, 309, 286, 3, 287, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 316, 317, 310, 9, 311, 312, 313, 314, 315, 82, 83, 288, 289, 290, 291, 292, 293, 278, 279, 280, 281, 282, 283, 284, 285, 294, 295, 296, 300, 297, 298, 299, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 114, 4, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 20, 21, 22, 23, 129, 130, 131, 132, 133, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 43, 30, 31, 32, 33, 34, 35, 36, 37, 38, 71, 72, 0, 73, 5, 74, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 6, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 134, 135, 136, 137, 138, 139, 140, 141, 142, 1, 7, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 8, 301, 302, 303, 304, 305, 306 }
  uselistorder label %dec_label_pc_1000b898, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b83c, { 1, 0 }
}

define i32 @function_1000b8b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b8e4.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000b8c8 = call i32 @function_1000ac08()
  %v2_1000b8d0 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b8d0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b8e833 = add i32 %v2_1000b8d0, 124
  %v4_1000b8e834 = inttoptr i32 %v3_1000b8e833 to i32*
  store i32 0, i32* %v4_1000b8e834, align 4
  %v0_1000b8ec35 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b8ec36 = add i32 %v0_1000b8ec35, -1
  store i32 %v1_1000b8ec36, i32* %r9.global-to-local, align 4
  %v0_1000b8f037 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b8f038 = add i32 %v0_1000b8f037, -1
  store i32 %v1_1000b8f038, i32* %ctr.global-to-local, align 4
  %v2_1000b8f039 = icmp eq i32 %v1_1000b8f038, 0
  br i1 %v2_1000b8f039, label %dec_label_pc_1000b8f4, label %dec_label_pc_1000b8e4.dec_label_pc_1000b8e4_crit_edge

dec_label_pc_1000b8e4.dec_label_pc_1000b8e4_crit_edge: ; preds = %dec_label_pc_1000b8e4.lr.ph, %dec_label_pc_1000b8e4.dec_label_pc_1000b8e4_crit_edge
  %v1_1000b8ec40 = phi i32 [ %v1_1000b8ec, %dec_label_pc_1000b8e4.dec_label_pc_1000b8e4_crit_edge ], [ %v1_1000b8ec36, %dec_label_pc_1000b8e4.lr.ph ]
  %v0_1000b8e8.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b8e8.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b8e4 = mul i32 %v1_1000b8ec40, 4
  %v3_1000b8e8 = add i32 %v1_1000b8e4, %v1_1000b8e8.pre
  %v4_1000b8e8 = inttoptr i32 %v3_1000b8e8 to i32*
  store i32 %v0_1000b8e8.pre, i32* %v4_1000b8e8, align 4
  %v0_1000b8ec = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b8ec = add i32 %v0_1000b8ec, -1
  store i32 %v1_1000b8ec, i32* %r9.global-to-local, align 4
  %v0_1000b8f0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b8f0 = add i32 %v0_1000b8f0, -1
  store i32 %v1_1000b8f0, i32* %ctr.global-to-local, align 4
  %v2_1000b8f0 = icmp eq i32 %v1_1000b8f0, 0
  br i1 %v2_1000b8f0, label %dec_label_pc_1000b8f4, label %dec_label_pc_1000b8e4.dec_label_pc_1000b8e4_crit_edge

dec_label_pc_1000b8f4:                            ; preds = %dec_label_pc_1000b8e4.dec_label_pc_1000b8e4_crit_edge, %dec_label_pc_1000b8e4.lr.ph
  store i32 %v2_1000b8d0, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000b8fc = call i32 @function_1000a05c()
  %v3_1000b900 = icmp eq i32 %v0_1000b8fc, 0
  br i1 %v3_1000b900, label %dec_label_pc_1000b908, label %dec_label_pc_1000b918

dec_label_pc_1000b908:                            ; preds = %dec_label_pc_1000b8f4
  store i32 268482840, i32* @lr, align 4
  %v3_1000b914 = call i32 @function_100094b0(i32 1, i32 %v2_1000b8d0, i32 0)
  br label %dec_label_pc_1000b918

dec_label_pc_1000b918:                            ; preds = %dec_label_pc_1000b8f4, %dec_label_pc_1000b908
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b91c = load i32, i32* @global_var_1001c32c.372, align 4
  %v3_1000b920 = icmp eq i32 %v3_1000b91c, 0
  br i1 %v3_1000b920, label %dec_label_pc_1000b928, label %dec_label_pc_1000b950

dec_label_pc_1000b928:                            ; preds = %dec_label_pc_1000b918
  store i32 1, i32* @global_var_1001c32c.372, align 4
  br label %dec_label_pc_1000b930

dec_label_pc_1000b930:                            ; preds = %dec_label_pc_1000b9ac, %dec_label_pc_1000b928
  store i32 ptrtoint (i32* @global_var_1001c290.370 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b93c = call i32 @function_1000ac08()
  store i32 268482888, i32* @lr, align 4
  %v1_1000b944 = call i32 @function_1000ba98(i32 6)
  %v0_1000b94c = call i32 @function_1000ac08()
  %v3_1000b954.pre = load i32, i32* @global_var_1001c32c.372, align 4
  br label %dec_label_pc_1000b950

dec_label_pc_1000b950:                            ; preds = %dec_label_pc_1000b918, %dec_label_pc_1000b930
  %v0_1000b9c8 = phi i32 [ %v3_1000b91c, %dec_label_pc_1000b918 ], [ %v3_1000b954.pre, %dec_label_pc_1000b930 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000b958 = icmp eq i32 %v0_1000b9c8, 1
  br i1 %v3_1000b958, label %dec_label_pc_1000b998.lr.ph, label %dec_label_pc_1000b9c8

dec_label_pc_1000b998.lr.ph:                      ; preds = %dec_label_pc_1000b950
  %v2_1000b964 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001c32c.372, align 4
  store i32 ptrtoint (i32* @global_var_1000b978.374 to i32), i32* @lr, align 4
  %v3_1000b974 = call i32 @function_1000995c(i32 %v2_1000b964, i32 0, i32 140)
  store i32 %v2_1000b8d0, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000b8e833, i32* %r9.global-to-local, align 4
  %v2_1000b9a025 = add i32 %v2_1000b8d0, 256
  %v3_1000b9a026 = inttoptr i32 %v2_1000b9a025 to i32*
  store i32 -1, i32* %v3_1000b9a026, align 4
  %v0_1000b9a427 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b9a428 = add i32 %v0_1000b9a427, -1
  store i32 %v1_1000b9a428, i32* %r11.global-to-local, align 4
  %v0_1000b9a829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b9a830 = add i32 %v0_1000b9a829, -1
  store i32 %v1_1000b9a830, i32* %ctr.global-to-local, align 4
  %v2_1000b9a831 = icmp eq i32 %v1_1000b9a830, 0
  br i1 %v2_1000b9a831, label %dec_label_pc_1000b9ac, label %dec_label_pc_1000b998.dec_label_pc_1000b998_crit_edge

dec_label_pc_1000b998.dec_label_pc_1000b998_crit_edge: ; preds = %dec_label_pc_1000b998.lr.ph, %dec_label_pc_1000b998.dec_label_pc_1000b998_crit_edge
  %v1_1000b9a432 = phi i32 [ %v1_1000b9a4, %dec_label_pc_1000b998.dec_label_pc_1000b998_crit_edge ], [ %v1_1000b9a428, %dec_label_pc_1000b998.lr.ph ]
  %v1_1000b99c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b9a0.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b998 = mul i32 %v1_1000b9a432, 4
  %v2_1000b99c = add i32 %v1_1000b998, %v1_1000b99c.pre
  store i32 %v2_1000b99c, i32* %r9.global-to-local, align 4
  %v2_1000b9a0 = add i32 %v2_1000b99c, 132
  %v3_1000b9a0 = inttoptr i32 %v2_1000b9a0 to i32*
  store i32 %v0_1000b9a0.pre, i32* %v3_1000b9a0, align 4
  %v0_1000b9a4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b9a4 = add i32 %v0_1000b9a4, -1
  store i32 %v1_1000b9a4, i32* %r11.global-to-local, align 4
  %v0_1000b9a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b9a8 = add i32 %v0_1000b9a8, -1
  store i32 %v1_1000b9a8, i32* %ctr.global-to-local, align 4
  %v2_1000b9a8 = icmp eq i32 %v1_1000b9a8, 0
  br i1 %v2_1000b9a8, label %dec_label_pc_1000b9ac, label %dec_label_pc_1000b998.dec_label_pc_1000b998_crit_edge

dec_label_pc_1000b9ac:                            ; preds = %dec_label_pc_1000b998.dec_label_pc_1000b998_crit_edge, %dec_label_pc_1000b998.lr.ph
  store i32 268483012, i32* @lr, align 4
  %v4_1000b9c0 = call i32 @function_1000b7ec(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b930

dec_label_pc_1000b9c8:                            ; preds = %dec_label_pc_1000b950
  %v3_1000b9c8 = icmp eq i32 %v0_1000b9c8, 2
  br i1 %v3_1000b9c8, label %dec_label_pc_1000b9d0, label %dec_label_pc_1000b9dc

dec_label_pc_1000b9d0:                            ; preds = %dec_label_pc_1000b9c8
  store i32 3, i32* @global_var_1001c32c.372, align 4
  br label %dec_label_pc_1000b9dc

dec_label_pc_1000b9dc:                            ; preds = %dec_label_pc_1000b9c8, %dec_label_pc_1000b9d0
  %v3_1000b9dc = phi i32 [ %v0_1000b9c8, %dec_label_pc_1000b9c8 ], [ 3, %dec_label_pc_1000b9d0 ]
  %v1_1000b9e4 = icmp ne i32 %v3_1000b9dc, 3
  call void @__pseudo_cond_branch(i1 %v1_1000b9e4, i32 268483064)
  store i32 4, i32* @global_var_1001c32c.372, align 4
  %v1_1000b9f4 = call i32 @function_1000afa8(i32 127)
  ret i32 %v1_1000b9f4

; uselistorder directives
  uselistorder i32 %v1_1000b9a8, { 1, 0 }
  uselistorder i32 %v1_1000b9a4, { 1, 0 }
  uselistorder i32 %v1_1000b8f0, { 1, 0 }
  uselistorder i32 %v1_1000b8ec, { 1, 0 }
  uselistorder i32 %v2_1000b8d0, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000afa8, { 1, 0 }
  uselistorder i32 127, { 0, 1, 3, 2 }
  uselistorder i32 3, { 0, 6, 31, 94, 97, 98, 99, 100, 92, 95, 96, 46, 102, 101, 8, 103, 104, 105, 67, 68, 1, 7, 32, 33, 47, 48, 49, 50, 2, 52, 53, 54, 55, 56, 9, 57, 34, 58, 10, 51, 65, 35, 3, 89, 36, 59, 60, 62, 63, 61, 64, 66, 4, 69, 70, 12, 37, 5, 11, 71, 14, 72, 38, 13, 73, 74, 75, 15, 39, 16, 76, 77, 78, 17, 40, 18, 79, 80, 20, 41, 19, 81, 82, 42, 83, 21, 22, 23, 84, 85, 43, 86, 24, 25, 26, 87, 88, 27, 44, 28, 90, 91, 29, 45, 30, 93 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b7ec, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 3, 0 }
  uselistorder i32 256, { 75, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 81, 82, 83, 13, 76, 14, 85, 15, 16, 17, 18, 19, 86, 20, 79, 87, 80, 88, 84, 21, 22, 23, 0, 89, 24, 25, 26, 27, 28, 29, 30, 31, 90, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 77, 48, 49, 50, 51, 52, 53, 54, 55, 78, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i32 (i32, i32, i32)* @function_1000995c, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 2, { 214, 41, 0, 1, 58, 59, 215, 60, 216, 61, 217, 30, 2, 3, 4, 42, 114, 127, 218, 115, 31, 62, 43, 63, 33, 32, 34, 64, 65, 116, 66, 67, 117, 118, 68, 119, 5, 6, 120, 121, 39, 122, 44, 123, 69, 126, 8, 7, 71, 70, 72, 35, 201, 75, 76, 74, 73, 45, 9, 10, 11, 124, 125, 77, 46, 78, 79, 80, 81, 47, 83, 82, 84, 49, 48, 85, 86, 87, 88, 89, 90, 91, 36, 40, 128, 202, 12, 37, 203, 13, 129, 130, 131, 132, 133, 134, 135, 92, 136, 137, 50, 138, 139, 140, 141, 142, 94, 143, 93, 144, 145, 146, 147, 148, 149, 150, 151, 95, 152, 51, 96, 97, 153, 154, 98, 99, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 14, 15, 16, 17, 18, 19, 100, 165, 52, 166, 167, 168, 169, 170, 20, 21, 22, 23, 24, 25, 101, 171, 53, 172, 173, 174, 175, 176, 102, 178, 177, 26, 27, 103, 179, 54, 180, 181, 182, 183, 184, 104, 186, 185, 28, 29, 105, 187, 55, 106, 107, 188, 189, 108, 109, 190, 191, 192, 193, 194, 195, 197, 198, 199, 196, 110, 200, 56, 204, 205, 206, 111, 112, 208, 209, 210, 207, 113, 211, 57, 212, 38, 213 }
  uselistorder i32* @global_var_1001c32c.372, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 45, 46, 0, 47, 2, 1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 4, 41, 5, 42, 43, 44 }
  uselistorder i32 (i32, i32, i32)* @function_100094b0, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_1000a05c, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 76, 77, 78, 73, 74, 79, 35, 1, 36, 7, 37, 86, 85, 5, 4, 80, 82, 83, 72, 81, 9, 8, 75, 10, 11, 12, 6, 38, 39, 84, 13, 14, 15, 40, 19, 20, 21, 16, 17, 18, 27, 28, 29, 3, 66, 67, 68, 69, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 41, 0, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71 }
  uselistorder i32 6, { 12, 13, 61, 1, 14, 15, 26, 16, 17, 27, 18, 19, 28, 29, 30, 2, 31, 0, 32, 33, 34, 35, 3, 36, 37, 38, 4, 39, 40, 41, 42, 5, 6, 43, 44, 45, 20, 7, 46, 47, 21, 8, 48, 22, 49, 23, 9, 50, 51, 52, 53, 24, 10, 54, 55, 56, 57, 58, 25, 11, 59, 60 }
  uselistorder i32 4, { 130, 0, 1, 368, 369, 370, 371, 372, 69, 70, 373, 374, 131, 375, 376, 2, 200, 201, 152, 153, 202, 203, 205, 377, 384, 3, 4, 5, 6, 7, 347, 349, 348, 345, 346, 316, 317, 318, 319, 350, 351, 352, 353, 354, 355, 356, 357, 358, 8, 154, 9, 79, 155, 156, 378, 379, 380, 132, 381, 382, 383, 10, 204, 133, 11, 206, 207, 208, 209, 210, 134, 135, 157, 136, 158, 159, 160, 82, 78, 161, 162, 163, 164, 12, 166, 167, 173, 174, 165, 175, 72, 176, 71, 80, 178, 81, 179, 180, 181, 182, 183, 177, 168, 169, 170, 171, 172, 192, 13, 193, 14, 194, 195, 196, 73, 137, 197, 303, 184, 138, 84, 83, 85, 185, 186, 187, 74, 188, 75, 189, 190, 191, 15, 198, 199, 76, 211, 212, 213, 16, 214, 215, 216, 217, 90, 218, 219, 17, 18, 89, 220, 221, 19, 86, 88, 87, 222, 223, 20, 224, 225, 95, 226, 21, 22, 227, 94, 228, 91, 229, 93, 92, 230, 231, 232, 101, 23, 24, 233, 234, 25, 235, 236, 237, 100, 26, 27, 96, 238, 97, 99, 98, 239, 240, 241, 242, 243, 244, 139, 103, 102, 245, 246, 28, 247, 248, 249, 104, 250, 251, 29, 30, 105, 252, 106, 108, 107, 253, 254, 31, 255, 256, 113, 257, 258, 32, 33, 112, 259, 109, 111, 110, 260, 261, 262, 263, 34, 264, 265, 266, 267, 140, 268, 35, 269, 270, 36, 271, 115, 272, 114, 141, 273, 274, 275, 276, 37, 277, 278, 279, 280, 142, 281, 38, 282, 283, 39, 284, 117, 285, 116, 143, 286, 287, 288, 289, 290, 291, 144, 119, 118, 292, 293, 294, 295, 40, 297, 298, 145, 299, 300, 301, 124, 302, 41, 42, 146, 296, 123, 120, 122, 121, 304, 305, 306, 307, 308, 147, 148, 43, 310, 311, 149, 312, 313, 314, 129, 315, 44, 45, 150, 309, 128, 125, 127, 126, 46, 320, 321, 47, 48, 322, 323, 49, 50, 324, 325, 51, 52, 326, 327, 53, 54, 328, 329, 55, 56, 330, 331, 57, 332, 58, 333, 334, 59, 60, 335, 336, 61, 62, 337, 338, 63, 64, 339, 340, 65, 66, 341, 342, 67, 343, 344, 359, 360, 361, 362, 363, 364, 77, 365, 68, 366, 367, 151 }
  uselistorder i32 32, { 19, 20, 49, 38, 39, 27, 28, 15, 16, 36, 37, 29, 0, 1, 2, 17, 40, 18, 41, 3, 4, 5, 6, 22, 30, 23, 31, 21, 34, 7, 8, 9, 24, 35, 10, 11, 12, 13, 14, 25, 26, 32, 33, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 31, { 1, 2, 28, 29, 17, 30, 31, 3, 4, 0, 5, 32, 33, 18, 19, 20, 21, 24, 25, 22, 23, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 14, 26, 27 }
  uselistorder i32 ()* @function_1000ac08, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000b9dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000b998.dec_label_pc_1000b998_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b950, { 1, 0 }
  uselistorder label %dec_label_pc_1000b918, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8e4.dec_label_pc_1000b8e4_crit_edge, { 1, 0 }
}

define i32 @function_1000ba00(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba00:
  %v1_1000ba00 = add i32 %arg1, 28
  %v2_1000ba00 = inttoptr i32 %v1_1000ba00 to i32*
  %v3_1000ba00 = load i32, i32* %v2_1000ba00, align 4
  store i32 %v3_1000ba00, i32* @global_var_1001c330.375, align 4
  %v1_1000ba10 = add i32 %arg1, 44
  %v2_1000ba10 = inttoptr i32 %v1_1000ba10 to i32*
  %v3_1000ba10 = load i32, i32* %v2_1000ba10, align 4
  store i32 %v3_1000ba10, i32* @global_var_1001c334.376, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 7, 0, 5, 6, 1, 2, 3, 4 }
  uselistorder i32 28, { 45, 16, 17, 5, 6, 18, 15, 44, 7, 9, 10, 11, 12, 8, 13, 14, 2, 3, 4, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 1, 43 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000ba1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba1c:
  store i32 %arg1, i32* @global_var_1001c338.369, align 4
  %v0_1000ba44 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000ba44)
  %v1_1000ba4c = call i32 @function_1000bac8(i32 12)
  ret i32 %v1_1000ba4c

; uselistorder directives
  uselistorder i32 12, { 15, 42, 43, 23, 24, 44, 45, 46, 47, 101, 102, 103, 104, 6, 99, 105, 0, 1, 8, 100, 5, 16, 17, 9, 25, 48, 49, 18, 50, 51, 52, 19, 20, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 21, 38, 22, 39, 41, 40, 33, 7, 94, 53, 10, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 11, 66, 67, 68, 69, 70, 71, 72, 12, 73, 74, 75, 76, 77, 78, 79, 80, 81, 13, 82, 83, 84, 85, 86, 87, 88, 89, 90, 14, 91, 92, 93, 95, 96, 97, 98, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 2, 0, 1 }
  uselistorder i32* @global_var_1001c338.369, { 1, 0, 2 }
}

define i32 @function_1000ba50() local_unnamed_addr {
dec_label_pc_1000ba50:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ba68 = call i32 @__asm_mfcr()
  %v1_1000ba6c = and i32 %v0_1000ba68, 268435456
  %v3_1000ba6c = icmp eq i32 %v1_1000ba6c, 0
  store i32 %v0_1000ba68, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ba6c, label %dec_label_pc_1000ba84, label %dec_label_pc_1000ba78

dec_label_pc_1000ba78:                            ; preds = %dec_label_pc_1000ba50
  %v0_1000ba78 = call i32 @function_10009874()
  %v0_1000ba7c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ba7c = inttoptr i32 %v0_1000ba78 to i32*
  store i32 %v0_1000ba7c, i32* %v2_1000ba7c, align 4
  br label %dec_label_pc_1000ba84

dec_label_pc_1000ba84:                            ; preds = %dec_label_pc_1000ba50, %dec_label_pc_1000ba78
  %v0_1000ba94 = phi i32 [ %v0_1000ba68, %dec_label_pc_1000ba50 ], [ -1, %dec_label_pc_1000ba78 ]
  ret i32 %v0_1000ba94

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 37, 51, 27, 30, 35, 36, 28, 52, 41, 39, 42, 40, 38, 53, 54, 29, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 48, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 47, 40, 25, 3, 46, 42, 36, 35, 45, 2, 14, 16, 13, 15, 20, 1, 0, 44, 43, 41, 34, 33, 32, 31, 30, 29, 28, 27, 26, 24, 23, 22, 21, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000ba84, { 1, 0 }
}

define i32 @function_1000ba98(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba98:
  %v0_1000ba98 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268483248, i32* @lr, align 4
  %v0_1000baac = call i32 @function_100091e8()
  %v0_1000bab4 = load i32, i32* @r29, align 4
  store i32 %v0_1000ba98, i32* @lr, align 4
  %v2_1000bac4 = call i32 @function_10009278(i32 %v0_1000baac, i32 %v0_1000bab4)
  ret i32 %v2_1000bac4

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10009278, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_100091e8, { 0, 3, 2, 1 }
}

define i32 @function_1000bac8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bac8:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000badc = call i32 @function_10009874()
  %v0_1000bae0 = load i32, i32* @r29, align 4
  %v2_1000bae0 = inttoptr i32 %v0_1000badc to i32*
  store i32 %v0_1000bae0, i32* %v2_1000bae0, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10009874, { 23, 15, 52, 14, 34, 13, 12, 11, 10, 33, 32, 31, 9, 8, 0, 7, 6, 37, 36, 21, 22, 51, 50, 49, 48, 30, 29, 28, 47, 35, 26, 5, 4, 46, 40, 27, 25, 45, 3, 17, 19, 16, 18, 24, 2, 1, 44, 43, 42, 41, 39, 38, 20 }
  uselistorder i32* @r29, { 295, 296, 318, 319, 320, 14, 15, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 321, 322, 323, 324, 325, 1, 65, 297, 298, 299, 300, 293, 294, 301, 2, 302, 303, 304, 305, 306, 307, 16, 17, 18, 86, 87, 88, 89, 90, 91, 92, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 37, 38, 39, 40, 41, 42, 3, 56, 57, 58, 4, 59, 60, 61, 47, 0, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 66, 67, 68, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 101, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 5, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 6, 178, 7, 179, 8, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 9, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 10, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 11, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 12, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 309, 308, 310, 311, 312, 13, 313, 314, 315, 316, 317 }
}

define i32 @function_1000bafc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bafc:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c148.357 to i32), i32* %r31.global-to-local, align 4
  %v3_1000bb18 = load i32, i32* @global_var_1001c148.357, align 4
  %v3_1000bb1c = icmp eq i32 %v3_1000bb18, -1
  br i1 %v3_1000bb1c, label %dec_label_pc_1000bb38, label %dec_label_pc_1000bb24

dec_label_pc_1000bb24:                            ; preds = %dec_label_pc_1000bafc, %dec_label_pc_1000bb24
  %v0_1000bb24 = phi i32 [ %v3_1000bb2c, %dec_label_pc_1000bb24 ], [ %v3_1000bb18, %dec_label_pc_1000bafc ]
  call void @__pseudo_call(i32 %v0_1000bb24)
  %v0_1000bb2c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000bb2c = add i32 %v0_1000bb2c, -4
  %v2_1000bb2c = inttoptr i32 %v1_1000bb2c to i32*
  %v3_1000bb2c = load i32, i32* %v2_1000bb2c, align 4
  store i32 %v1_1000bb2c, i32* %r31.global-to-local, align 4
  %v3_1000bb30 = icmp eq i32 %v3_1000bb2c, -1
  br i1 %v3_1000bb30, label %dec_label_pc_1000bb38, label %dec_label_pc_1000bb24

dec_label_pc_1000bb38:                            ; preds = %dec_label_pc_1000bb24, %dec_label_pc_1000bafc
  %v0_1000bb48 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bb48

; uselistorder directives
  uselistorder i32 %v3_1000bb2c, { 1, 0 }
  uselistorder i32 -4, { 0, 13, 14, 15, 7, 8, 9, 10, 11, 12, 16, 17, 1, 2, 3, 4, 5, 6 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 143, 144, 0, 39, 93, 274, 11, 12, 13, 275, 94, 276, 9, 10, 95, 96, 14, 97, 40, 41, 267, 80, 42, 210, 43, 44, 45, 46, 47, 211, 212, 213, 214, 215, 220, 48, 287, 285, 49, 277, 278, 81, 98, 279, 17, 18, 99, 284, 15, 16, 195, 3, 82, 268, 269, 34, 145, 283, 280, 50, 146, 100, 147, 19, 20, 148, 149, 150, 37, 51, 151, 152, 78, 101, 102, 103, 104, 216, 217, 21, 22, 23, 105, 218, 219, 106, 83, 79, 221, 222, 52, 53, 54, 55, 281, 282, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 286, 69, 153, 107, 24, 223, 224, 108, 1, 109, 110, 154, 70, 71, 111, 2, 112, 25, 113, 72, 114, 26, 225, 84, 155, 115, 85, 156, 157, 158, 116, 159, 160, 73, 163, 117, 28, 118, 27, 119, 164, 120, 74, 165, 166, 167, 121, 122, 161, 162, 184, 77, 4, 185, 186, 123, 29, 187, 188, 189, 190, 191, 124, 38, 168, 86, 169, 170, 88, 171, 172, 87, 173, 174, 175, 89, 176, 177, 178, 75, 179, 180, 125, 30, 126, 31, 181, 182, 183, 192, 76, 193, 194, 127, 128, 129, 130, 131, 132, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 35, 36, 226, 227, 228, 229, 230, 133, 134, 135, 231, 232, 136, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 251, 32, 253, 254, 256, 255, 33, 257, 258, 259, 260, 5, 261, 6, 262, 263, 7, 264, 8, 265, 266, 137, 138, 270, 139, 271, 140, 141, 272, 273, 142, 90, 91, 92 }
  uselistorder i32 1, { 142, 519, 1046, 642, 643, 725, 724, 267, 263, 266, 265, 262, 264, 728, 727, 726, 7, 0, 1032, 1033, 1034, 1035, 566, 524, 1047, 1048, 1049, 1050, 522, 521, 520, 24, 25, 27, 28, 26, 487, 174, 729, 456, 457, 115, 248, 518, 517, 731, 730, 498, 497, 499, 495, 494, 496, 493, 500, 644, 143, 144, 146, 145, 732, 247, 502, 645, 733, 11, 9, 8, 10, 646, 588, 1054, 1051, 737, 736, 735, 734, 481, 479, 476, 480, 478, 477, 647, 1053, 738, 901, 902, 903, 641, 904, 567, 12, 13, 15, 14, 16, 134, 132, 133, 45, 46, 48, 49, 47, 451, 545, 739, 508, 1052, 516, 648, 649, 742, 741, 740, 188, 185, 186, 187, 184, 189, 269, 589, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 848, 757, 756, 483, 484, 759, 758, 51, 50, 52, 942, 534, 55, 54, 53, 1055, 1056, 454, 452, 455, 453, 137, 138, 136, 139, 140, 141, 760, 650, 761, 57, 56, 58, 651, 762, 90, 91, 590, 763, 59, 260, 492, 503, 450, 268, 249, 383, 77, 261, 764, 328, 259, 509, 510, 511, 507, 765, 327, 766, 482, 849, 767, 501, 917, 918, 535, 536, 550, 919, 920, 546, 921, 770, 769, 768, 34, 30, 31, 35, 29, 33, 36, 32, 1, 906, 905, 907, 908, 943, 944, 525, 945, 946, 772, 771, 922, 923, 924, 652, 925, 37, 38, 39, 40, 1029, 1030, 569, 568, 1031, 135, 845, 847, 846, 653, 926, 537, 505, 504, 506, 1036, 205, 204, 927, 928, 538, 539, 551, 929, 41, 42, 43, 44, 947, 251, 250, 252, 253, 254, 255, 256, 257, 258, 968, 73, 76, 75, 74, 948, 379, 382, 381, 380, 22, 23, 552, 591, 850, 851, 654, 852, 853, 655, 854, 855, 857, 861, 862, 858, 859, 860, 863, 656, 864, 657, 658, 865, 659, 660, 866, 872, 873, 576, 718, 780, 779, 778, 777, 776, 775, 774, 773, 474, 467, 466, 465, 463, 459, 471, 462, 461, 468, 458, 460, 473, 464, 472, 475, 470, 469, 867, 868, 661, 869, 870, 662, 871, 69, 60, 63, 65, 67, 66, 68, 62, 61, 70, 64, 856, 663, 485, 486, 549, 881, 882, 886, 883, 889, 884, 526, 527, 885, 547, 528, 529, 540, 530, 531, 887, 888, 548, 532, 533, 541, 890, 664, 891, 892, 665, 893, 894, 895, 898, 899, 896, 897, 553, 900, 592, 788, 787, 786, 785, 784, 719, 783, 782, 781, 130, 124, 122, 116, 123, 126, 125, 119, 117, 118, 120, 128, 129, 127, 131, 121, 1013, 666, 554, 515, 513, 514, 512, 949, 789, 21, 19, 20, 668, 594, 874, 593, 875, 667, 669, 877, 878, 876, 570, 879, 670, 671, 672, 673, 674, 675, 880, 577, 801, 800, 799, 798, 722, 797, 796, 795, 794, 793, 792, 791, 790, 182, 180, 181, 5, 179, 6, 177, 178, 183, 176, 676, 677, 678, 523, 679, 596, 595, 571, 803, 802, 680, 575, 909, 685, 681, 910, 682, 911, 683, 912, 684, 913, 914, 915, 542, 686, 916, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 578, 815, 814, 813, 812, 811, 810, 809, 808, 807, 806, 805, 804, 83, 87, 86, 80, 78, 81, 79, 88, 85, 84, 82, 89, 930, 699, 931, 932, 933, 934, 935, 3, 572, 936, 937, 2, 938, 939, 940, 941, 818, 817, 720, 721, 816, 72, 71, 1014, 1017, 1015, 573, 1016, 175, 1018, 1019, 1020, 700, 701, 950, 951, 952, 953, 954, 955, 958, 956, 957, 959, 960, 961, 702, 962, 555, 579, 963, 964, 965, 574, 966, 967, 821, 820, 819, 307, 297, 305, 320, 321, 315, 322, 323, 324, 325, 326, 312, 306, 313, 314, 301, 302, 316, 317, 318, 309, 308, 319, 310, 311, 304, 303, 300, 299, 298, 969, 970, 971, 703, 556, 580, 972, 823, 822, 150, 148, 159, 167, 168, 161, 169, 163, 154, 172, 164, 160, 170, 171, 162, 165, 156, 166, 153, 152, 151, 147, 149, 173, 158, 157, 155, 973, 974, 704, 975, 976, 977, 705, 706, 581, 978, 597, 598, 824, 236, 231, 224, 233, 242, 220, 221, 245, 235, 237, 238, 240, 229, 232, 243, 244, 230, 234, 239, 241, 226, 225, 246, 228, 227, 222, 223, 979, 601, 980, 981, 599, 982, 707, 708, 600, 825, 217, 208, 206, 218, 216, 219, 210, 213, 214, 215, 209, 212, 211, 207, 983, 984, 985, 986, 709, 557, 582, 987, 602, 603, 826, 342, 337, 331, 340, 351, 333, 332, 354, 338, 352, 353, 348, 349, 350, 346, 347, 343, 344, 341, 339, 345, 330, 355, 336, 335, 334, 329, 988, 989, 990, 710, 558, 583, 991, 604, 605, 606, 827, 407, 404, 408, 418, 398, 400, 410, 409, 421, 411, 405, 419, 420, 415, 416, 417, 413, 406, 414, 412, 422, 403, 402, 401, 399, 992, 993, 994, 995, 711, 543, 559, 584, 996, 607, 608, 609, 610, 611, 831, 830, 829, 828, 100, 95, 104, 110, 93, 97, 107, 98, 108, 105, 109, 111, 112, 113, 101, 96, 94, 114, 106, 99, 103, 102, 92, 997, 998, 999, 1000, 712, 544, 560, 585, 1001, 612, 613, 614, 615, 616, 617, 618, 619, 620, 835, 834, 833, 832, 364, 359, 368, 374, 357, 361, 371, 362, 372, 369, 373, 375, 376, 377, 365, 360, 358, 378, 370, 363, 367, 366, 356, 1002, 623, 1003, 1004, 621, 1005, 713, 714, 622, 836, 397, 395, 392, 390, 389, 394, 396, 387, 391, 388, 384, 386, 385, 393, 1006, 1007, 1008, 1010, 1011, 1009, 561, 586, 1012, 624, 625, 626, 837, 449, 424, 434, 446, 447, 423, 437, 443, 439, 438, 433, 425, 445, 441, 442, 429, 430, 436, 435, 440, 426, 444, 448, 432, 431, 427, 428, 1021, 1022, 1023, 1025, 1026, 1024, 562, 587, 1027, 627, 628, 629, 842, 841, 840, 839, 838, 285, 272, 283, 292, 271, 270, 287, 288, 295, 290, 281, 273, 284, 289, 293, 294, 277, 278, 286, 291, 274, 296, 282, 280, 279, 275, 276, 4, 630, 631, 632, 633, 634, 635, 636, 637, 638, 1028, 639, 640, 490, 489, 488, 491, 563, 202, 564, 17, 1037, 715, 1041, 716, 1042, 1038, 1039, 1040, 1043, 1044, 193, 197, 201, 190, 200, 191, 196, 195, 194, 192, 199, 198, 1045, 717, 565, 18, 844, 843, 203, 723 }
  uselistorder label %dec_label_pc_1000bb24, { 1, 0 }
}

define i32 @function_1000bb4c() local_unnamed_addr {
dec_label_pc_1000bb4c:
  %v0_1000bb64 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bb64

; uselistorder directives
  uselistorder i32* @r3, { 23, 12, 185, 186, 187, 13, 22, 188, 109, 0, 110, 32, 195, 19, 20, 3, 25, 189, 191, 31, 192, 193, 194, 176, 30, 177, 9, 17, 179, 181, 180, 190, 33, 159, 34, 35, 111, 26, 14, 112, 113, 114, 115, 116, 117, 118, 119, 120, 16, 28, 4, 15, 121, 1, 2, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 74, 6, 75, 76, 90, 91, 29, 92, 93, 94, 18, 166, 167, 168, 10, 169, 170, 7, 83, 84, 85, 86, 87, 88, 89, 95, 11, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 171, 172, 8, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 173, 174, 175, 178, 182, 183, 184, 24, 21, 27 }
}

define i32 @function_1000bb68() local_unnamed_addr {
entry:
  store i32 268483448, i32* @lr, align 4
  %v0_1000bb74 = call i32 @function_100000b8()
  ret i32 %v0_1000bb74

; uselistorder directives
  uselistorder i32 0, { 889, 228, 890, 42, 229, 163, 891, 230, 892, 893, 40, 41, 894, 895, 896, 0, 832, 833, 834, 86, 85, 835, 897, 898, 899, 43, 900, 901, 902, 903, 593, 231, 232, 430, 839, 840, 164, 841, 904, 19, 594, 595, 905, 906, 907, 908, 233, 596, 597, 598, 599, 600, 601, 602, 87, 610, 611, 909, 910, 234, 928, 929, 235, 934, 936, 157, 937, 236, 935, 1, 911, 912, 88, 913, 914, 237, 165, 238, 915, 916, 46, 47, 917, 918, 919, 239, 922, 923, 924, 44, 45, 925, 926, 927, 557, 558, 559, 560, 561, 89, 562, 563, 564, 227, 565, 90, 844, 846, 23, 847, 48, 848, 845, 842, 843, 2, 816, 812, 813, 814, 815, 158, 3, 851, 849, 850, 159, 852, 853, 817, 818, 819, 820, 821, 240, 822, 823, 854, 855, 241, 856, 166, 857, 866, 867, 91, 858, 859, 860, 861, 862, 863, 864, 865, 4, 5, 422, 431, 432, 433, 49, 50, 434, 6, 242, 836, 435, 436, 437, 438, 439, 440, 441, 442, 243, 443, 938, 939, 940, 941, 942, 943, 944, 945, 603, 604, 51, 605, 606, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 444, 566, 755, 920, 921, 445, 536, 624, 656, 446, 930, 92, 931, 887, 882, 888, 883, 792, 932, 933, 447, 448, 625, 626, 627, 52, 93, 628, 629, 70, 630, 632, 631, 162, 567, 568, 7, 74, 24, 75, 25, 657, 76, 658, 26, 27, 659, 77, 28, 94, 244, 245, 20, 21, 633, 825, 826, 827, 828, 98, 96, 95, 829, 97, 100, 99, 429, 101, 634, 53, 635, 636, 637, 868, 102, 869, 870, 638, 639, 54, 103, 640, 8, 104, 684, 105, 660, 449, 450, 108, 451, 452, 453, 454, 455, 155, 456, 246, 457, 458, 461, 459, 107, 460, 247, 462, 463, 464, 465, 466, 109, 467, 468, 170, 469, 470, 423, 78, 472, 473, 474, 475, 476, 477, 57, 58, 478, 479, 55, 56, 480, 481, 482, 483, 484, 485, 169, 167, 490, 491, 248, 492, 486, 487, 488, 489, 493, 22, 424, 425, 494, 495, 106, 496, 497, 498, 503, 504, 505, 506, 168, 507, 508, 110, 509, 510, 511, 512, 513, 514, 499, 111, 500, 501, 112, 502, 249, 471, 81, 537, 538, 29, 250, 79, 30, 31, 251, 80, 32, 539, 9, 174, 173, 540, 541, 542, 543, 544, 545, 172, 171, 546, 59, 60, 547, 548, 252, 113, 549, 550, 114, 551, 115, 552, 116, 553, 554, 661, 515, 516, 517, 518, 156, 519, 520, 253, 521, 522, 523, 524, 525, 175, 526, 527, 61, 62, 528, 529, 530, 63, 64, 531, 532, 533, 10, 534, 254, 255, 256, 535, 257, 17, 16, 15, 14, 13, 555, 176, 556, 570, 118, 569, 117, 571, 572, 120, 573, 119, 574, 575, 122, 576, 121, 577, 578, 124, 579, 123, 580, 581, 126, 582, 125, 583, 584, 128, 585, 127, 586, 11, 258, 259, 18, 589, 587, 588, 160, 590, 591, 177, 260, 261, 262, 263, 264, 265, 592, 33, 641, 652, 642, 12, 643, 644, 645, 646, 161, 647, 648, 649, 650, 651, 34, 129, 69, 68, 130, 653, 65, 268, 654, 266, 267, 178, 655, 83, 793, 794, 82, 795, 131, 796, 84, 797, 132, 662, 663, 269, 664, 665, 134, 133, 666, 270, 667, 668, 669, 670, 671, 672, 673, 135, 674, 675, 676, 179, 677, 678, 271, 679, 71, 72, 680, 136, 681, 682, 683, 272, 180, 181, 182, 183, 137, 685, 273, 686, 687, 688, 689, 274, 690, 691, 692, 185, 184, 693, 275, 694, 695, 696, 697, 698, 138, 699, 276, 700, 701, 702, 703, 704, 277, 705, 706, 707, 186, 187, 188, 189, 142, 141, 708, 709, 35, 140, 139, 710, 711, 712, 36, 713, 714, 715, 716, 143, 190, 717, 144, 718, 278, 719, 720, 721, 279, 722, 723, 724, 725, 280, 726, 727, 728, 191, 192, 193, 194, 195, 196, 197, 198, 729, 730, 145, 731, 732, 281, 733, 734, 735, 736, 737, 738, 282, 739, 740, 741, 207, 199, 200, 201, 202, 203, 204, 205, 206, 146, 742, 743, 283, 744, 745, 746, 747, 284, 750, 751, 66, 749, 748, 285, 752, 753, 754, 208, 209, 210, 211, 212, 213, 214, 147, 756, 757, 286, 758, 759, 760, 761, 287, 764, 765, 67, 763, 762, 288, 766, 767, 768, 215, 216, 217, 151, 150, 769, 770, 289, 37, 149, 148, 771, 772, 773, 290, 38, 774, 775, 776, 777, 152, 218, 778, 153, 779, 291, 780, 781, 782, 783, 784, 785, 786, 787, 788, 292, 789, 790, 791, 219, 220, 221, 222, 798, 154, 799, 293, 800, 801, 802, 803, 804, 805, 806, 807, 808, 294, 809, 810, 811, 223, 224, 225, 226, 824, 830, 831, 837, 838, 871, 73, 872, 873, 295, 874, 875, 876, 877, 878, 879, 880, 881, 884, 39, 885, 886, 946, 947, 948, 426, 427, 428, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967 }
  uselistorder i32* @lr, { 8, 751, 752, 753, 722, 754, 755, 756, 757, 758, 759, 760, 761, 719, 10, 762, 370, 371, 9, 723, 724, 372, 373, 374, 375, 376, 377, 771, 772, 776, 777, 778, 779, 780, 781, 782, 784, 773, 775, 763, 764, 765, 766, 767, 768, 769, 770, 725, 727, 726, 688, 689, 690, 691, 692, 693, 728, 729, 730, 731, 735, 732, 733, 734, 11, 12, 664, 665, 666, 628, 597, 13, 282, 14, 15, 629, 630, 16, 720, 17, 18, 19, 20, 21, 22, 23, 783, 24, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 774, 25, 26, 27, 28, 29, 30, 392, 717, 393, 736, 439, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 472, 440, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 137, 138, 139, 140, 141, 142, 143, 144, 113, 114, 115, 116, 117, 118, 156, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 441, 442, 443, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 0, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 329, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 4, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 5, 423, 424, 425, 426, 427, 428, 1, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 506, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 578, 571, 572, 573, 574, 575, 576, 577, 2, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 609, 602, 603, 604, 605, 606, 607, 608, 3, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 631, 633, 634, 635, 632, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 721, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i64 @__decompiler_undefined_function_3() local_unnamed_addr
