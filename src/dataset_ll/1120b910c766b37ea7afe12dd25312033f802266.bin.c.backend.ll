source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%_TYPEDEF_fd_set = type { [1 x i32] }
%timeval = type { i32, i32 }
%dirent = type { i32, i32, i16, i8, [256 x i8] }
%__dirstream = type { i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_1b80c.2 = global i32 1
@global_var_1b8a4.3 = global i32* @global_var_1b80c.2
@global_var_1b8ac.4 = global i32 0
@global_var_1b8b0.5 = global i32 35684
@global_var_1b8b4.6 = global i32 35684
@global_var_1b8b8.7 = global i32 35684
@global_var_1b8bc.8 = global i32 35684
@global_var_1b8c0.9 = global i32 35684
@global_var_1b8c4.10 = global i32 35684
@global_var_1b8c8.11 = global i32 35684
@global_var_1b8cc.12 = global i32 35684
@global_var_1b8d0.13 = global i32 35684
@global_var_1b8d4.14 = global i32 35684
@global_var_1b8d8.15 = global i32 35684
@global_var_1b8dc.16 = global i32 35684
@global_var_1b8e0.17 = global i32 35684
@global_var_1b8e4.18 = global i32 35684
@global_var_1b8e8.19 = global i32 35684
@global_var_1b8ec.20 = global i32 35684
@global_var_1b8f0.21 = global i32 35684
@global_var_1b8f4.22 = global i32 35684
@global_var_1b8fc.24 = global i32 35684
@global_var_1b900.25 = global i32 35684
@global_var_1b904.26 = global i32 35684
@global_var_1b908.27 = global i32 35684
@global_var_1b90c.28 = global i32 35684
@global_var_1b910.29 = global i32 35684
@global_var_1b914.30 = global i32 35684
@global_var_1b918.31 = global i32 35684
@global_var_1b91c.32 = global i32 35684
@global_var_1b920.33 = global i32 35684
@global_var_1b924.34 = global i32 35684
@global_var_1b928.35 = global i32 35684
@global_var_1b92c.36 = global i32 35684
@global_var_1b930.37 = global i32 35684
@global_var_1b934.38 = global i32 35684
@global_var_1b938.39 = global i32 35684
@global_var_1b93c.40 = global i32 35684
@global_var_1b940.41 = global i32 35684
@global_var_1b944.42 = global i32 35684
@global_var_1b948.43 = global i32 35684
@global_var_1b94c.44 = global i32 35684
@global_var_1b954.46 = global i32 35684
@global_var_1b958.47 = global i32 35684
@global_var_1b95c.48 = global i32 35684
@global_var_1b960.49 = global i32 35684
@global_var_1b964.50 = global i32 35684
@global_var_1b968.51 = global i32 35684
@global_var_1b96c.52 = global i32 35684
@global_var_1b970.53 = global i32 35684
@global_var_1b974.54 = global i32 35684
@global_var_1b978.55 = global i32 35684
@global_var_1b804.59 = global i32 0
@global_var_1b984.60 = global i32* @global_var_1b804.59
@global_var_1b9a4.66 = global i32 0
@global_var_e7f4.72 = constant i32 -382906384
@global_var_8db8.74 = constant i32 -493894144
@global_var_1b9c0.78 = global i32 0
@global_var_9308.79 = constant i32 -352321555
@global_var_c708.85 = constant i32 -382906384
@global_var_cc04.87 = constant i32 -382906384
@global_var_bd44.89 = constant i32 -382906384
@global_var_b5c4.91 = constant i32 -382906384
@global_var_ae08.93 = constant i32 -382906384
@global_var_a4dc.95 = constant i32 -382906384
@global_var_9da4.97 = constant i32 -382906384
@global_var_95fc.99 = constant i32 -382906384
@global_var_1ba18.101 = global i32 0
@global_var_1ba20.112 = global i32 0
@global_var_12fbc.114 = constant i32 47
@global_var_1b9c4.117 = global i32 0
@global_var_e678.121 = constant i32 -382910352
@global_var_1b994.123 = global i32 76260
@global_var_1b98c.125 = global i32 -1
@global_var_1ba28.131 = local_unnamed_addr global i32 0
@global_var_1ba27.132 = local_unnamed_addr global i32 0
@global_var_1ba26.133 = local_unnamed_addr global i32 0
@global_var_1b9c8.135 = global i32 0
@global_var_1ba25.141 = local_unnamed_addr global i32 0
@global_var_12fc0.145 = constant i32 10
@global_var_1b990.147 = global i32 -1
@global_var_8dac.151 = constant i32 -493894144
@global_var_129e4.152 = constant i32 -382910224
@global_var_12fc4.154 = constant i32 16777216
@global_var_1b9d0.156 = global i32 0
@global_var_1b9dc.158 = global i32 0
@global_var_1b9d4.160 = global i32 0
@global_var_1b9d8.162 = global i32 0
@global_var_f58c.171 = constant i32 -442695668
@global_var_1ba3c.173 = global i32 0
@global_var_1ba14.175 = global i32 0
@global_var_1b9e0.177 = global i32 0
@global_var_1ba0c.179 = global i32 0
@global_var_1ba34.187 = global i32 0
@global_var_1ba38.189 = global i32 0
@global_var_1b9e4.191 = global i32 0
@global_var_1b9e7.192 = local_unnamed_addr global i32 0
@global_var_1b9e6.193 = local_unnamed_addr global i32 0
@global_var_1b9f8.195 = global i32 0
@global_var_1b9ec.197 = local_unnamed_addr global i32 0
@global_var_1b9e9.198 = local_unnamed_addr global i32 0
@global_var_1b9f9.199 = local_unnamed_addr global i32 0
@global_var_1b9fb.200 = local_unnamed_addr global i32 0
@global_var_1b9ed.201 = local_unnamed_addr global i32 0
@global_var_1b9e8.202 = local_unnamed_addr global i32 0
@global_var_1b9fa.203 = local_unnamed_addr global i32 0
@global_var_1ba07.205 = local_unnamed_addr global i32 0
@global_var_1ba06.206 = local_unnamed_addr global i32 0
@global_var_13340.208 = constant [5 x i8] c"PMMV\00"
@global_var_1349c.210 = constant i32 0
@global_var_134e4.212 = constant [6 x i8] c"CFOKL\00"
@global_var_12fcc.214 = constant i32 387006810
@global_var_12fd4.216 = constant [6 x i8] c"TKXZT\00"
@global_var_12fdc.218 = constant i32 437918234
@global_var_12fe4.220 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_12fec.222 = constant [8 x i8] c"FGDCWNV\00"
@global_var_12ff4.224 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_13000.226 = constant i32 370216979
@global_var_13008.228 = constant i32 269555223
@global_var_13010.230 = constant [8 x i8] c"QWRRMPV\00"
@global_var_13568.232 = constant i32 370216979
@global_var_13018.234 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_13024.236 = constant i32 370216979
@global_var_1302c.238 = constant [5 x i8] c"WQGP\00"
@global_var_13034.240 = constant [5 x i8] c"RCQQ\00"
@global_var_1303c.242 = constant i32 1263486531
@global_var_13190.244 = constant i32 320017171
@global_var_13048.246 = constant [9 x i8] c"QOACFOKL\00"
@global_var_13054.248 = constant i32 336860180
@global_var_1305c.250 = constant i32 324292169
@global_var_13064.252 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_13074.254 = constant [7 x i8] c"OGKLQO\00"
@global_var_1307c.256 = constant [4 x i8] c"@WJ\00"
@global_var_13080.258 = constant [7 x i8] c"RW@NKA\00"
@global_var_13088.260 = constant [8 x i8] c"QGPTKAG\00"
@global_var_13090.262 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1309c.264 = constant [6 x i8] c"EWGQV\00"
@global_var_130a4.266 = constant i32 1263486531
@global_var_130ac.268 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_130bc.270 = constant [5 x i8] c"W@LV\00"
@global_var_130c4.272 = constant i32 324292169
@global_var_130cc.274 = constant i32 390551160
@global_var_130d4.276 = constant i32 387009354
@global_var_130dc.278 = constant [6 x i8] c"HT@XF\00"
@global_var_130e4.280 = constant [5 x i8] c"CLIM\00"
@global_var_130ec.282 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_130f4.284 = constant [9 x i8] c"AJCLEGOG\00"
@global_var_13100.286 = constant i32 1867011861
@global_var_13110.288 = constant i32 1867011861
@global_var_13120.290 = constant [7 x i8] c"Q[QVGO\00"
@global_var_13128.292 = constant [5 x i8] c"KIU@\00"
@global_var_13130.294 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_1313c.296 = constant [8 x i8] c"PGCNVGI\00"
@global_var_13144.298 = constant i32 303174162
@global_var_13150.300 = constant i32 303174162
@global_var_13158.302 = constant i32 320017171
@global_var_13160.304 = constant i32 1263486531
@global_var_12ff8.306 = constant [5 x i8] c"VGAJ\00"
@global_var_1316c.308 = constant i32 454761243
@global_var_13178.310 = constant [6 x i8] c"oGKLQ\00"
@global_var_13180.312 = constant [4 x i8] c"hta\00"
@global_var_13184.314 = constant i32 319820054
@global_var_1318c.316 = constant i32 320017171
@global_var_13198.318 = constant [7 x i8] c"WVQVCP\00"
@global_var_131a0.320 = constant [9 x i8] c"XMMOCFQN\00"
@global_var_131ac.322 = constant i32 1263486531
@global_var_131b4.324 = constant i32 303059531
@global_var_131bc.326 = constant i32 303125067
@global_var_131c4.328 = constant i32 303452747
@global_var_131cc.330 = constant [7 x i8] c"@KLVGA\00"
@global_var_131d4.332 = constant [8 x i8] c"VQWLCOK\00"
@global_var_131dc.334 = constant i32 323043395
@global_var_131e4.336 = constant i32 319951888
@global_var_131ec.338 = constant [7 x i8] c"Q[LLGV\00"
@global_var_131f4.340 = constant [9 x i8] c"@C[CLFQN\00"
@global_var_13200.342 = constant [6 x i8] c"SWQGP\00"
@global_var_132f8.344 = constant i32 1118227
@global_var_13208.346 = constant i32 370216979
@global_var_13210.348 = constant [8 x i8] c"oCLCEGP\00"
@global_var_13218.350 = constant [4 x i8] c"CFO\00"
@global_var_1321c.352 = constant [8 x i8] c"OCLCEGP\00"
@global_var_13224.354 = constant [7 x i8] c"DPKGLF\00"
@global_var_1322c.356 = constant [4 x i8] c"CRA\00"
@global_var_13230.358 = constant i32 1263421261
@global_var_1323c.360 = constant [5 x i8] c"VKLK\00"
@global_var_13244.362 = constant [7 x i8] c"CQAGLF\00"
@global_var_1324c.364 = constant i32 1265504102
@global_var_13254.366 = constant [6 x i8] c"FNKLI\00"
@global_var_1325c.368 = constant [6 x i8] c"NMEKL\00"
@global_var_13264.370 = constant i32 1296912387
@global_var_1326c.372 = constant [9 x i8] c"AC@NGAMO\00"
@global_var_13278.374 = constant [7 x i8] c"PMWVGP\00"
@global_var_13280.376 = constant [8 x i8] c"LGVMRKC\00"
@global_var_13288.378 = constant [7 x i8] c"Q[QCFO\00"
@global_var_13290.380 = constant [8 x i8] c"CLKAWQV\00"
@global_var_13298.382 = constant [6 x i8] c"FG@WE\00"
@global_var_132a0.384 = constant [10 x i8] c"F\0CG\0C@\0CW\0CE\00"
@global_var_132ac.386 = constant [5 x i8] c"GAJM\00"
@global_var_132b4.388 = constant [5 x i8] c"FKCE\00"
@global_var_132bc.390 = constant [7 x i8] c"QUKVAJ\00"
@global_var_1328c.392 = constant [3 x i8] c"FO\00"
@global_var_132c4.394 = constant [7 x i8] c"VGNLGV\00"
@global_var_132cc.396 = constant i32 370216979
@global_var_132d8.398 = constant [5 x i8] c"VMMP\00"
@global_var_132e0.400 = constant [7 x i8] c"ACNTKL\00"
@global_var_132e8.402 = constant i32 370216979
@global_var_132f4.404 = constant i32 1447906640
@global_var_132fc.406 = constant i32 1447512643
@global_var_13308.408 = constant i32 454302484
@global_var_13310.410 = constant i32 387400530
@global_var_1331c.412 = constant i32 319885331
@global_var_13324.414 = constant i32 1986882928
@global_var_1332c.416 = constant [7 x i8] c"CNRKLG\00"
@global_var_13334.418 = constant i32 457659992
@global_var_1333c.420 = constant i32 303043392
@global_var_13348.422 = constant [9 x i8] c"rcqqumpf\00"
@global_var_13354.424 = constant [6 x i8] c"cfokl\00"
@global_var_1335c.426 = constant [8 x i8] c"LGVEGCP\00"
@global_var_13364.428 = constant i32 303257172
@global_var_1336c.430 = constant [4 x i8] c"K@O\00"
@global_var_13370.432 = constant [7 x i8] c"T[CVVC\00"
@global_var_13378.434 = constant [6 x i8] c"cFOKL\00"
@global_var_13380.436 = constant i32 373380675
@global_var_13388.438 = constant [7 x i8] c"OKAPMQ\00"
@global_var_13390.440 = constant [6 x i8] c"QGVWR\00"
@global_var_13398.442 = constant [8 x i8] c"AMOACQV\00"
@global_var_133a0.444 = constant [4 x i8] c"RMQ\00"
@global_var_133a4.446 = constant [4 x i8] c"UUU\00"
@global_var_133a8.448 = constant i32 303176208
@global_var_133b0.450 = constant [5 x i8] c"w`lv\00"
@global_var_133b8.452 = constant [7 x i8] c"LGVOCL\00"
@global_var_133c0.454 = constant [6 x i8] c"Cfokl\00"
@global_var_133c8.456 = constant [7 x i8] c"FCGOML\00"
@global_var_133d0.458 = constant [5 x i8] c"FGOM\00"
@global_var_133d8.460 = constant [6 x i8] c"CPPKQ\00"
@global_var_133e0.462 = constant [8 x i8] c"nKLIQ[Q\00"
@global_var_133e8.464 = constant [7 x i8] c"ANKGLV\00"
@global_var_133f0.466 = constant [6 x i8] c"AKQAM\00"
@global_var_133f8.468 = constant [6 x i8] c"akqam\00"
@global_var_13400.470 = constant [6 x i8] c"QWRGP\00"
@global_var_13408.472 = constant [5 x i8] c"QWPV\00"
@global_var_13410.474 = constant i32 370611221
@global_var_131a4.476 = constant [5 x i8] c"CFQN\00"
@global_var_13418.478 = constant i32 1313949251
@global_var_13424.480 = constant [7 x i8] c"RCVPMN\00"
@global_var_1342c.482 = constant i32 387007823
@global_var_13434.484 = constant [7 x i8] c"OGPNKL\00"
@global_var_1343c.486 = constant [9 x i8] c"LGVCFOKL\00"
@global_var_13448.488 = constant [9 x i8] c"JGUNRCAI\00"
@global_var_13454.490 = constant [7 x i8] c"lGVkaQ\00"
@global_var_1345c.492 = constant i32 1179729984
@global_var_13468.494 = constant [5 x i8] c"lwnn\00"
@global_var_13470.496 = constant [9 x i8] c"CFOKLVVF\00"
@global_var_1347c.498 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_13488.500 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_13494.502 = constant i32 269488144
@global_var_134a0.504 = constant [9 x i8] c"QGAWPKV[\00"
@global_var_134ac.506 = constant [9 x i8] c"OMWLVQ[Q\00"
@global_var_134b8.508 = constant [8 x i8] c"OGOMVGA\00"
@global_var_134c0.510 = constant i32 1464562030
@global_var_134d0.512 = constant i32 2003334929
@global_var_134e0.514 = constant [10 x i8] c"OWQGCFOKL\00"
@global_var_134ec.516 = constant i32 1196513135
@global_var_134f8.518 = constant [10 x i8] c"QVMPUCVAJ\00"
@global_var_13504.520 = constant [11 x i8] c"QRGAKCNKQV\00"
@global_var_13510.522 = constant [10 x i8] c"CFOKLRNFV\00"
@global_var_1351c.524 = constant [10 x i8] c"RNFVCFOKL\00"
@global_var_13528.526 = constant i32 1279478337
@global_var_13534.528 = constant [13 x i8] c"VGNGAMOCFOKL\00"
@global_var_13544.530 = constant [13 x i8] c"CFOKLVGNGAMO\00"
@global_var_13554.532 = constant i32 336675162
@global_var_1355c.534 = constant [7 x i8] c"CLVQNS\00"
@global_var_13564.536 = constant i32 1178819416
@global_var_1b9f0.537 = local_unnamed_addr global i32 0
@global_var_1b9ee.539 = local_unnamed_addr global i32 0
@global_var_1b9ef.540 = local_unnamed_addr global i32 0
@global_var_1ba08.543 = local_unnamed_addr global i32 0
@global_var_1ba09.544 = local_unnamed_addr global i32 0
@global_var_13570.555 = constant [3 x i8] c"\0D\0A\00"
@global_var_1357c.557 = constant i32 2096127
@global_var_13573.559 = constant i32 2095871
@global_var_1ba44.561 = global i32 0
@global_var_1b99c.564 = global i32 -559038737
@global_var_13580.568 = constant [10 x i8] c"XOCR\0CZ[X\22\00"
@global_var_1ba60.570 = local_unnamed_addr global i32 0
@global_var_1ba5c.571 = local_unnamed_addr global i32 0
@global_var_1ba61.572 = local_unnamed_addr global i32 0
@global_var_1358c.574 = constant [3 x i8] c"\225\00"
@global_var_1ba64.575 = local_unnamed_addr global i32 0
@global_var_1ba68.576 = local_unnamed_addr global i32 0
@global_var_1ba69.577 = local_unnamed_addr global i32 0
@global_var_1bad8.578 = local_unnamed_addr global i32 0
@global_var_1bad4.579 = local_unnamed_addr global i32 0
@global_var_1bad9.580 = local_unnamed_addr global i32 0
@global_var_13590.582 = constant i32 51097
@global_var_1badc.583 = local_unnamed_addr global i32 0
@global_var_1bae0.584 = local_unnamed_addr global i32 0
@global_var_1bae1.585 = local_unnamed_addr global i32 0
@global_var_13594.587 = constant i32 1448168270
@global_var_1ba54.588 = local_unnamed_addr global i32 0
@global_var_1ba58.589 = local_unnamed_addr global i32 0
@global_var_1ba59.590 = local_unnamed_addr global i32 0
@global_var_135a4.592 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_1ba74.593 = local_unnamed_addr global i32 0
@global_var_1ba78.594 = local_unnamed_addr global i32 0
@global_var_1ba79.595 = local_unnamed_addr global i32 0
@global_var_135ac.597 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_1ba80.598 = local_unnamed_addr global i32 0
@global_var_1ba7c.599 = local_unnamed_addr global i32 0
@global_var_1ba81.600 = local_unnamed_addr global i32 0
@global_var_135b4.602 = constant [5 x i8] c"\0DDF\22\00"
@global_var_1ba88.603 = local_unnamed_addr global i32 0
@global_var_1ba84.604 = local_unnamed_addr global i32 0
@global_var_1ba89.605 = local_unnamed_addr global i32 0
@global_var_135bc.607 = constant [15 x i8] c"\0DRPMA\0DLGV\0DVAR\22\00"
@global_var_1ba8c.608 = local_unnamed_addr global i32 0
@global_var_1ba90.609 = local_unnamed_addr global i32 0
@global_var_1ba91.610 = local_unnamed_addr global i32 0
@global_var_135cc.612 = constant [7 x i8] c"\0DOCRQ\22\00"
@global_var_1ba98.613 = local_unnamed_addr global i32 0
@global_var_1ba94.614 = local_unnamed_addr global i32 0
@global_var_1ba99.615 = local_unnamed_addr global i32 0
@global_var_135d4.617 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_1ba9c.618 = local_unnamed_addr global i32 0
@global_var_1baa0.619 = local_unnamed_addr global i32 0
@global_var_1baa1.620 = local_unnamed_addr global i32 0
@global_var_135e0.622 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_1baa4.623 = local_unnamed_addr global i32 0
@global_var_1baa8.624 = local_unnamed_addr global i32 0
@global_var_1baa9.625 = local_unnamed_addr global i32 0
@global_var_135e8.627 = constant [17 x i8] c"\0DRPMA\0DLGV\0DPMWVG\22\00"
@global_var_1bab0.628 = local_unnamed_addr global i32 0
@global_var_1baac.629 = local_unnamed_addr global i32 0
@global_var_1bab1.630 = local_unnamed_addr global i32 0
@global_var_135fc.632 = constant [15 x i8] c"\0DRPMA\0DARWKLDM\22\00"
@global_var_1bab4.633 = local_unnamed_addr global i32 0
@global_var_1bab8.634 = local_unnamed_addr global i32 0
@global_var_1bab9.635 = local_unnamed_addr global i32 0
@global_var_1360c.637 = constant [10 x i8] c"`memokrq\22\00"
@global_var_1bac0.638 = local_unnamed_addr global i32 0
@global_var_1babc.639 = local_unnamed_addr global i32 0
@global_var_1bac1.640 = local_unnamed_addr global i32 0
@global_var_13618.642 = constant [20 x i8] c"\0DGVA\0DPA\0CF\0DPA\0CNMACN\22\00"
@global_var_1bac4.643 = local_unnamed_addr global i32 0
@global_var_1bac8.644 = local_unnamed_addr global i32 0
@global_var_1bac9.645 = local_unnamed_addr global i32 0
@global_var_1362c.647 = constant i32 1078137669
@global_var_1bad0.648 = local_unnamed_addr global i32 0
@global_var_1bacc.649 = local_unnamed_addr global i32 0
@global_var_1bad1.650 = local_unnamed_addr global i32 0
@global_var_13644.652 = constant [9 x i8] c"CQQUMPF\22\00"
@global_var_13650.654 = constant [15 x i8] c"\0DFGT\0DUCVAJFME\22\00"
@global_var_13660.656 = constant [20 x i8] c"\0DFGT\0DOKQA\0DUCVAJFME\22\00"
@global_var_1bae4.657 = local_unnamed_addr global i32 0
@global_var_1bae8.658 = local_unnamed_addr global i32 0
@global_var_1bae9.659 = local_unnamed_addr global i32 0
@global_var_13674.661 = constant i32 1413957133
@global_var_1baf0.662 = local_unnamed_addr global i32 0
@global_var_1baec.663 = local_unnamed_addr global i32 0
@global_var_1baf1.664 = local_unnamed_addr global i32 0
@global_var_1368c.666 = constant i32 1413957133
@global_var_1baf8.667 = local_unnamed_addr global i32 0
@global_var_1baf4.668 = local_unnamed_addr global i32 0
@global_var_1baf9.669 = local_unnamed_addr global i32 0
@global_var_136a4.671 = constant [15 x i8] c"\0DFGT\0DLGVQNKLI\22\00"
@global_var_1bafc.672 = local_unnamed_addr global i32 0
@global_var_1bb00.673 = local_unnamed_addr global i32 0
@global_var_1bb01.674 = local_unnamed_addr global i32 0
@global_var_136b4.676 = constant i32 1836214128
@global_var_136c4.678 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_136d0.680 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_136dc.682 = constant i32 437738110
@global_var_13700.684 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_1370c.686 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_13718.688 = constant [11 x i8] c"FTPjGNRGP\22\00"
@global_var_13724.690 = constant [7 x i8] c"QJGNN\22\00"
@global_var_1372c.692 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_13734.694 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_1373c.696 = constant [4 x i8] c"QJ\22\00"
@global_var_13740.698 = constant i32 1280000013
@global_var_1bb04.699 = local_unnamed_addr global i32 0
@global_var_1bb08.700 = local_unnamed_addr global i32 0
@global_var_1bb09.701 = local_unnamed_addr global i32 0
@global_var_13754.703 = constant i32 1668311919
@global_var_1bb10.704 = local_unnamed_addr global i32 0
@global_var_1bb0c.705 = local_unnamed_addr global i32 0
@global_var_1bb11.706 = local_unnamed_addr global i32 0
@global_var_13770.708 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_1bb18.709 = local_unnamed_addr global i32 0
@global_var_1bb14.710 = local_unnamed_addr global i32 0
@global_var_1bb19.711 = local_unnamed_addr global i32 0
@global_var_1377c.713 = constant i32 1280000013
@global_var_1bb20.714 = local_unnamed_addr global i32 0
@global_var_1bb1c.715 = local_unnamed_addr global i32 0
@global_var_1bb21.716 = local_unnamed_addr global i32 0
@global_var_13790.718 = constant i32 1280000013
@global_var_1bb28.719 = local_unnamed_addr global i32 0
@global_var_1bb24.720 = local_unnamed_addr global i32 0
@global_var_1bb29.721 = local_unnamed_addr global i32 0
@global_var_1bb3c.722 = local_unnamed_addr global i32 0
@global_var_1bb40.723 = local_unnamed_addr global i32 0
@global_var_1bb41.724 = local_unnamed_addr global i32 0
@global_var_137a8.726 = constant [6 x i8] c"MEKL\22\00"
@global_var_1bb48.727 = local_unnamed_addr global i32 0
@global_var_1bb44.728 = local_unnamed_addr global i32 0
@global_var_1bb49.729 = local_unnamed_addr global i32 0
@global_var_137b0.731 = constant [7 x i8] c"GLVGP\22\00"
@global_var_1bb50.732 = local_unnamed_addr global i32 0
@global_var_1bb4c.733 = local_unnamed_addr global i32 0
@global_var_1bb51.734 = local_unnamed_addr global i32 0
@global_var_137b8.736 = constant i32 1464693110
@global_var_1bb30.737 = local_unnamed_addr global i32 0
@global_var_1bb2c.738 = local_unnamed_addr global i32 0
@global_var_1bb31.739 = local_unnamed_addr global i32 0
@global_var_137d0.741 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_1bb38.742 = local_unnamed_addr global i32 0
@global_var_1bb34.743 = local_unnamed_addr global i32 0
@global_var_1bb39.744 = local_unnamed_addr global i32 0
@global_var_137e4.746 = constant i32 1196376908
@global_var_1bb8c.747 = local_unnamed_addr global i32 0
@global_var_1bb90.748 = local_unnamed_addr global i32 0
@global_var_1bb91.749 = local_unnamed_addr global i32 0
@global_var_1b7fc.751 = global i32 0
@global_var_1b7f8.752 = global i32 -1
@global_var_1b9a0.57 = external global i8*
@global_var_1b9bc.76 = external global i8*
@global_var_1b9bd.83 = global i8 0
@global_var_1ba1c.119 = external global i8*
@1 = internal constant [2 x i8] c"\01\00"
@global_var_1b998.127 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_1ba24.130 = global %sockaddr* null
@global_var_e4f0.137 = constant void (i32)* inttoptr (i32 -442556408 to void (i32)*)
@global_var_1b9cc.150 = external global i8*
@global_var_1ba10.181 = external global i8*
@global_var_1ba11.182 = local_unnamed_addr global i8 0
@global_var_1ba04.196 = local_unnamed_addr global i8 0
@global_var_1ba05.204 = local_unnamed_addr global i8 0
@global_var_1b9fc.542 = local_unnamed_addr global i8 0
@global_var_1b9f4.538 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8b4c() local_unnamed_addr {
entry:
  %v3_8b50 = load i32, i32* @r4, align 4
  %v0_8b58 = call i32 @function_8e5c()
  store i32 %v0_8b58, i32* @r0, align 4
  %v1_8b5c = call i32 @function_12f6c(i32 %v0_8b58)
  call void @__pseudo_branch(i32 %v3_8b50)
  ret i32 %v1_8b5c
}

define i32 @function_8b64(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8b70 = load i32, i32* @global_var_1b8ac.4, align 4
  call void @__pseudo_branch(i32 %v3_8b70)
  %v0_8b74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8b74, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i8* @_strcpy(i8* %dest, i8* %src) local_unnamed_addr {
entry:
  %v8_8b80 = call i8* @strcpy(i8* %dest, i8* %src)
  ret i8* %v8_8b80
}

define i32 @_ioctl(i32 %fd, i32 %request, ...) local_unnamed_addr {
entry:
  %v6_8b8c = call i32 (i32, i32, ...) @ioctl(i32 %fd, i32 %request)
  ret i32 %v6_8b8c
}

define i32 @_recv(i32 %fd, i32* %buf, i32 %n, i32 %flags) local_unnamed_addr {
entry:
  %v9_8b98 = call i32 @recv(i32 %fd, i32* %buf, i32 %n, i32 %flags)
  ret i32 %v9_8b98
}

define i32 @_connect(i32 %fd, %sockaddr* %addr, i32 %len) local_unnamed_addr {
entry:
  %v8_8ba4 = call i32 @connect(i32 %fd, %sockaddr* %addr, i32 %len)
  ret i32 %v8_8ba4
}

define i32 @_sigemptyset(%_TYPEDEF_sigset_t* %set) local_unnamed_addr {
entry:
  %v6_8bb0 = call i32 @sigemptyset(%_TYPEDEF_sigset_t* %set)
  ret i32 %v6_8bb0
}

define i32* @_memmove(i32* %dest, i32* %src, i32 %n) local_unnamed_addr {
entry:
  %v9_8bbc = call i32* @memmove(i32* %dest, i32* %src, i32 %n)
  ret i32* %v9_8bbc
}

define i32 @_getpid() local_unnamed_addr {
entry:
  %v4_8bc8 = call i32 @getpid()
  ret i32 %v4_8bc8
}

define i32 @_prctl(i32 %option, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v9_8bd4 = call i32 @prctl(i32 %option, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  ret i32 %v9_8bd4
}

define i32* @_memcpy(i32* %dest, i32* %src, i32 %n) local_unnamed_addr {
entry:
  %v9_8be0 = call i32* @memcpy(i32* %dest, i32* %src, i32 %n)
  ret i32* %v9_8be0
}

define i32 @_readlink(i8* %path, i8* %buf, i32 %len) local_unnamed_addr {
entry:
  %v9_8bec = call i32 @readlink(i8* %path, i8* %buf, i32 %len)
  ret i32 %v9_8bec
}

define i32* @_malloc(i32 %size) local_unnamed_addr {
entry:
  %v5_8bf8 = call i32* @malloc(i32 %size)
  ret i32* %v5_8bf8
}

define i32 @_sleep(i32 %seconds) local_unnamed_addr {
entry:
  %v5_8c04 = call i32 @sleep(i32 %seconds)
  ret i32 %v5_8c04
}

define i32 @_recvfrom(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32* %addr_len) local_unnamed_addr {
entry:
  %v10_8c10 = call i32 @recvfrom(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32* %addr_len)
  ret i32 %v10_8c10
}

define i32 @_socket(i32 %domain, i32 %type, i32 %protocol) local_unnamed_addr {
entry:
  %v7_8c1c = call i32 @socket(i32 %domain, i32 %type, i32 %protocol)
  ret i32 %v7_8c1c
}

define i32 @_select(i32 %nfds, %_TYPEDEF_fd_set* %readfds, %_TYPEDEF_fd_set* %writefds, %_TYPEDEF_fd_set* %exceptfds, %timeval* %timeout) local_unnamed_addr {
entry:
  %v12_8c28 = call i32 @select(i32 %nfds, %_TYPEDEF_fd_set* %readfds, %_TYPEDEF_fd_set* %writefds, %_TYPEDEF_fd_set* %exceptfds, %timeval* %timeout)
  ret i32 %v12_8c28
}

define %dirent* @_readdir(%__dirstream* %dirp) local_unnamed_addr {
entry:
  %v6_8c34 = call %dirent* @readdir(%__dirstream* %dirp)
  ret %dirent* %v6_8c34
}

define i32 @_sigaddset(%_TYPEDEF_sigset_t* %set, i32 %signo) local_unnamed_addr {
entry:
  %v7_8c40 = call i32 @sigaddset(%_TYPEDEF_sigset_t* %set, i32 %signo)
  ret i32 %v7_8c40
}

define i32 @_send(i32 %fd, i32* %buf, i32 %n, i32 %flags) local_unnamed_addr {
entry:
  %v9_8c4c = call i32 @send(i32 %fd, i32* %buf, i32 %n, i32 %flags)
  ret i32 %v9_8c4c
}

; Function Attrs: noreturn
define void @_abort() local_unnamed_addr #0 {
entry:
  call void @abort()
  unreachable
}

define i32 @_accept(i32 %fd, %sockaddr* %addr, i32* %addr_len) local_unnamed_addr {
entry:
  %v9_8c64 = call i32 @accept(i32 %fd, %sockaddr* %addr, i32* %addr_len)
  ret i32 %v9_8c64
}

define i32* @_calloc(i32 %nmemb, i32 %size) local_unnamed_addr {
entry:
  %v6_8c70 = call i32* @calloc(i32 %nmemb, i32 %size)
  ret i32* %v6_8c70
}

define i32 @_write(i32 %fd, i32* %buf, i32 %n) local_unnamed_addr {
entry:
  %v8_8c7c = call i32 @write(i32 %fd, i32* %buf, i32 %n)
  ret i32 %v8_8c7c
}

define i32 @_kill(i32 %pid, i32 %sig) local_unnamed_addr {
entry:
  %v6_8c88 = call i32 @kill(i32 %pid, i32 %sig)
  ret i32 %v6_8c88
}

define i32 @_bind(i32 %fd, %sockaddr* %addr, i32 %len) local_unnamed_addr {
entry:
  %v8_8c94 = call i32 @bind(i32 %fd, %sockaddr* %addr, i32 %len)
  ret i32 %v8_8c94
}

define i32 @_inet_addr(i8* %cp) local_unnamed_addr {
entry:
  %v6_8ca0 = call i32 @inet_addr(i8* %cp)
  ret i32 %v6_8ca0
}

define i32 @_setsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32 %optlen) local_unnamed_addr {
entry:
  %v10_8cac = call i32 @setsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32 %optlen)
  ret i32 %v10_8cac
}

define void (i32)* @_signal(i32 %sig, void (i32)* %handler) local_unnamed_addr {
entry:
  %v7_8cb8 = call void (i32)* @signal(i32 %sig, void (i32)* %handler)
  ret void (i32)* %v7_8cb8
}

define i32 @_read(i32 %fd, i32* %buf, i32 %nbytes) local_unnamed_addr {
entry:
  %v8_8cc4 = call i32 @read(i32 %fd, i32* %buf, i32 %nbytes)
  ret i32 %v8_8cc4
}

define i32 @_unlink(i8* %name) local_unnamed_addr {
entry:
  %v6_8cd0 = call i32 @unlink(i8* %name)
  ret i32 %v6_8cd0
}

define i32 @_sendto(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32 %addr_len) local_unnamed_addr {
entry:
  %v11_8cdc = call i32 @sendto(i32 %fd, i32* %buf, i32 %n, i32 %flags, %sockaddr* %addr, i32 %addr_len)
  ret i32 %v11_8cdc
}

define i32* @_realloc(i32* %ptr, i32 %size) local_unnamed_addr {
entry:
  %v7_8ce8 = call i32* @realloc(i32* %ptr, i32 %size)
  ret i32* %v7_8ce8
}

define i32 @_listen(i32 %fd, i32 %n) local_unnamed_addr {
entry:
  %v6_8cf4 = call i32 @listen(i32 %fd, i32 %n)
  ret i32 %v6_8cf4
}

define i32 @_fork() local_unnamed_addr {
entry:
  %v4_8d00 = call i32 @fork()
  ret i32 %v4_8d00
}

define i32 @___uClibc_main(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v4_8d0c = call i32 @__uClibc_main()
  ret i32 %v4_8d0c
}

define i32* @_memset(i32* %s, i32 %c, i32 %n) local_unnamed_addr {
entry:
  %v8_8d18 = call i32* @memset(i32* %s, i32 %c, i32 %n)
  ret i32* %v8_8d18
}

define i32 @_getppid() local_unnamed_addr {
entry:
  %v4_8d24 = call i32 @getppid()
  ret i32 %v4_8d24
}

define i32 @_time(i32* %timer) local_unnamed_addr {
entry:
  %v6_8d30 = call i32 @time(i32* %timer)
  ret i32 %v6_8d30
}

define %__dirstream* @_opendir(i8* %name) local_unnamed_addr {
entry:
  %v6_8d3c = call %__dirstream* @opendir(i8* %name)
  ret %__dirstream* %v6_8d3c
}

define i32 @_getsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32* %optlen) local_unnamed_addr {
entry:
  %v9_8d48 = call i32 @getsockopt(i32 %fd, i32 %level, i32 %optname, i32* %optval, i32* %optlen)
  ret i32 %v9_8d48
}

define i32* @___errno_location() local_unnamed_addr {
entry:
  %v4_8d54 = call i32* @__errno_location()
  ret i32* %v4_8d54
}

; Function Attrs: noreturn
define void @_exit(i32 %status) local_unnamed_addr #0 {
entry:
  call void @exit(i32 %status)
  unreachable
}

define i32 @_atoi(i8* %nptr) local_unnamed_addr {
entry:
  %v6_8d6c = call i32 @atoi(i8* %nptr)
  ret i32 %v6_8d6c
}

define i32 @_open(i8* %file, i32 %oflag, ...) local_unnamed_addr {
entry:
  %v7_8d78 = call i32 (i8*, i32, ...) @open(i8* %file, i32 %oflag)
  ret i32 %v7_8d78
}

define i32 @_clock() local_unnamed_addr {
entry:
  %v4_8d84 = call i32 @clock()
  ret i32 %v4_8d84
}

define i32 @_setsid() local_unnamed_addr {
entry:
  %v4_8d90 = call i32 @setsid()
  ret i32 %v4_8d90
}

define i32 @_closedir(%__dirstream* %dirp) local_unnamed_addr {
entry:
  %v6_8d9c = call i32 @closedir(%__dirstream* %dirp)
  ret i32 %v6_8d9c
}

define i32 @_fcntl(i32 %fd, i32 %cmd, ...) local_unnamed_addr {
entry:
  %v6_8da8 = call i32 (i32, i32, ...) @fcntl(i32 %fd, i32 %cmd)
  ret i32 %v6_8da8
}

define i32 @_close(i32 %fd) local_unnamed_addr {
entry:
  %v5_8db4 = call i32 @close(i32 %fd)
  ret i32 %v5_8db4
}

define void @_free(i32* %ptr) local_unnamed_addr {
entry:
  call void @free(i32* %ptr)
  ret void
}

define i32 @_sigprocmask(i32 %how, %_TYPEDEF_sigset_t* %set, %_TYPEDEF_sigset_t* %oset) local_unnamed_addr {
entry:
  %v9_8dcc = call i32 @sigprocmask(i32 %how, %_TYPEDEF_sigset_t* %set, %_TYPEDEF_sigset_t* %oset)
  ret i32 %v9_8dcc
}

define i32 @_getsockname(i32 %fd, %sockaddr* %addr, i32* %len) local_unnamed_addr {
entry:
  %v9_8dd8 = call i32 @getsockname(i32 %fd, %sockaddr* %addr, i32* %len)
  ret i32 %v9_8dd8
}

define i32 @function_8ddc() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_8ddc = load i32, i32* @r4, align 4
  store i32 %v3_8ddc, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_1b9a0.57 to i32), i32* %r5.global-to-local, align 4
  %v2_8de4 = load i8, i8* bitcast (i8** @global_var_1b9a0.57 to i8*), align 4
  %v2_8de8 = icmp eq i8 %v2_8de4, 0
  br i1 %v2_8de8, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_8dec = load i32, i32* @r0, align 4
  ret i32 %v12_8dec

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1b984.60 to i32), i32* %r4.global-to-local, align 4
  %v2_8df4 = load i32, i32* bitcast (i32** @global_var_1b984.60 to i32*), align 4
  store i32 %v2_8df4, i32* %r2.global-to-local, align 4
  %v2_8dfc = icmp eq i32 %v2_8df4, 0
  br i1 %v2_8dfc, label %bb8, label %dec_label_pc_8e04.preheader

dec_label_pc_8e04.preheader:                      ; preds = %bb7
  %v1_8e049 = add i32 %v2_8df4, 4
  store i32 %v1_8e049, i32* bitcast (i32** @global_var_1b984.60 to i32*), align 4
  call void @__pseudo_branch(i32 %v2_8df4)
  %v2_8e1411 = load i32, i32* bitcast (i32** @global_var_1b984.60 to i32*), align 4
  store i32 %v2_8e1411, i32* %r2.global-to-local, align 4
  %v2_8e1c12 = icmp eq i32 %v2_8e1411, 0
  br i1 %v2_8e1c12, label %.loopexit, label %dec_label_pc_8e04.dec_label_pc_8e04_crit_edge

dec_label_pc_8e04.dec_label_pc_8e04_crit_edge:    ; preds = %dec_label_pc_8e04.preheader, %dec_label_pc_8e04.dec_label_pc_8e04_crit_edge
  %v2_8e1413 = phi i32 [ %v2_8e14, %dec_label_pc_8e04.dec_label_pc_8e04_crit_edge ], [ %v2_8e1411, %dec_label_pc_8e04.preheader ]
  %v1_8e08.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_8e04 = add i32 %v2_8e1413, 4
  %v2_8e08 = inttoptr i32 %v1_8e08.pre to i32*
  store i32 %v1_8e04, i32* %v2_8e08, align 4
  %v0_8e10 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_8e10)
  %v2_8e14 = load i32, i32* bitcast (i32** @global_var_1b984.60 to i32*), align 4
  store i32 %v2_8e14, i32* %r2.global-to-local, align 4
  %v2_8e1c = icmp eq i32 %v2_8e14, 0
  br i1 %v2_8e1c, label %.loopexit, label %dec_label_pc_8e04.dec_label_pc_8e04_crit_edge

.loopexit:                                        ; preds = %dec_label_pc_8e04.dec_label_pc_8e04_crit_edge, %dec_label_pc_8e04.preheader
  %v2_8e3c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8e3c = phi i32 [ %v2_8e3c.pre, %.loopexit ], [ ptrtoint (i8** @global_var_1b9a0.57 to i32), %bb7 ]
  %v3_8e3c = inttoptr i32 %v2_8e3c to i8*
  store i8 1, i8* %v3_8e3c, align 1
  %v2_8e40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8e40, i32* %r4.global-to-local, align 4
  %v11_8e40 = load i32, i32* @r0, align 4
  ret i32 %v11_8e40

; uselistorder directives
  uselistorder i32 %v2_8e14, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* bitcast (i32** @global_var_1b984.60 to i32*), { 2, 0, 1, 3 }
  uselistorder i32** @global_var_1b984.60, { 1, 0 }
  uselistorder i8** @global_var_1b9a0.57, { 1, 0 }
  uselistorder label %dec_label_pc_8e04.dec_label_pc_8e04_crit_edge, { 1, 0 }
}

define i32 @function_8e50(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8e50:
  %v0_8e50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8e50, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_8e50
  store i32 %arg2, i32* %arg1, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_8e50, %bb
  %v5_8e58 = load i32, i32* @r0, align 4
  ret i32 %v5_8e58

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_8e5c() local_unnamed_addr {
.thread:
  %v2_8e7c = load i32, i32* inttoptr (i32 112648 to i32*), align 8
  %v2_8e80 = icmp eq i32 %v2_8e7c, 0
  br i1 %v2_8e80, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 112648

bb2:                                              ; preds = %.thread
  ret i32 112648

; uselistorder directives
  uselistorder i32 112648, { 1, 0, 2 }
}

define i32 @function_8eb4() local_unnamed_addr {
dec_label_pc_8eb4:
  %v5_8eb8 = load i32, i32* @r0, align 4
  ret i32 %v5_8eb8
}

; Function Attrs: noreturn
define i32 @__start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8ec4 = ptrtoint i32* %stack_var_4 to i32
  %v7_8ee4 = call i32 @___uClibc_main(i32 ptrtoint (i32* @global_var_e7f4.72 to i32), i32 %arg2, i32 %v4_8ec4, i32 35660, i32 77736, i32 %arg1, i32 %v4_8ec4)
  call void @abort()
  unreachable
}

define i32 @function_8ef8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8ef8:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_8ef8 = urem i32 %arg1, 256
  %v2_8efc = icmp eq i32 %v1_8ef8, 0
  %v1_8f04 = urem i32 %arg3, 256
  br i1 %v2_8efc, label %dec_label_pc_8f48, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  %v0_8f10 = load i32, i32* %r1.global-to-local, align 4
  %v1_8f10 = add i32 %v0_8f10, 4
  %v2_8f10 = inttoptr i32 %v1_8f10 to i8*
  %v3_8f10 = load i8, i8* %v2_8f10, align 1
  %v4_8f10 = zext i8 %v3_8f10 to i32
  %v9_8f14 = icmp eq i32 %v4_8f10, %v1_8f04
  br i1 %v9_8f14, label %dec_label_pc_8f50, label %dec_label_pc_8f38.preheader

dec_label_pc_8f38.preheader:                      ; preds = %dec_label_pc_8f10
  br label %dec_label_pc_8f38

dec_label_pc_8f28:                                ; preds = %dec_label_pc_8f38
  %v1_8f28 = add i32 %v0_8f30.in, 12
  %v2_8f28 = inttoptr i32 %v1_8f28 to i8*
  %v3_8f28 = load i8, i8* %v2_8f28, align 1
  %v4_8f28 = zext i8 %v3_8f28 to i32
  %v9_8f2c = icmp eq i32 %v4_8f28, %v1_8f04
  br i1 %v9_8f2c, label %dec_label_pc_8f50, label %dec_label_pc_8f38

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8f38.preheader, %dec_label_pc_8f28
  %v0_8f30.in = phi i32 [ %v0_8f10, %dec_label_pc_8f38.preheader ], [ %v0_8f30, %dec_label_pc_8f28 ]
  %v0_8f38 = phi i32 [ 0, %dec_label_pc_8f38.preheader ], [ %v1_8f38, %dec_label_pc_8f28 ]
  %v0_8f30 = add i32 %v0_8f30.in, 8
  %v1_8f38 = add i32 %v0_8f38, 1
  %v9_8f3c = icmp eq i32 %v1_8f38, %v1_8ef8
  store i32 %v0_8f30, i32* %r1.global-to-local, align 4
  br i1 %v9_8f3c, label %dec_label_pc_8f48, label %dec_label_pc_8f28

dec_label_pc_8f48:                                ; preds = %dec_label_pc_8f38, %dec_label_pc_8ef8
  ret i32 %arg4

dec_label_pc_8f50:                                ; preds = %dec_label_pc_8f28, %dec_label_pc_8f10
  %v0_8f50 = phi i32 [ %v0_8f10, %dec_label_pc_8f10 ], [ %v0_8f30, %dec_label_pc_8f28 ]
  %v1_8f50 = inttoptr i32 %v0_8f50 to i32*
  %v2_8f50 = load i32, i32* %v1_8f50, align 4
  ret i32 %v2_8f50

; uselistorder directives
  uselistorder i32 %v1_8f38, { 1, 0 }
  uselistorder i32 %v0_8f30, { 1, 0, 2 }
  uselistorder i32 %v0_8f30.in, { 1, 0 }
  uselistorder i32 %v0_8f10, { 1, 0, 2 }
  uselistorder i32 %v1_8f04, { 1, 0 }
  uselistorder i32 %v1_8ef8, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8f38, { 1, 0 }
}

define i32 @function_8f5c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8f5c:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_8f5c = urem i32 %arg1, 256
  %v2_8f60 = icmp eq i32 %v1_8f5c, 0
  br i1 %v2_8f60, label %dec_label_pc_8fac, label %dec_label_pc_8f70

dec_label_pc_8f70:                                ; preds = %dec_label_pc_8f5c
  %v0_8f70 = load i32, i32* %r1.global-to-local, align 4
  %v1_8f70 = add i32 %v0_8f70, 4
  %v2_8f70 = inttoptr i32 %v1_8f70 to i8*
  %v3_8f70 = load i8, i8* %v2_8f70, align 1
  %v4_8f70 = zext i8 %v3_8f70 to i32
  %v1_8f74 = urem i32 %arg3, 256
  %v9_8f78 = icmp eq i32 %v4_8f70, %v1_8f74
  br i1 %v9_8f78, label %dec_label_pc_8fb4, label %dec_label_pc_8f9c.preheader

dec_label_pc_8f9c.preheader:                      ; preds = %dec_label_pc_8f70
  br label %dec_label_pc_8f9c

dec_label_pc_8f8c:                                ; preds = %dec_label_pc_8f9c
  %v1_8f8c = add i32 %v0_8f94.in, 12
  %v2_8f8c = inttoptr i32 %v1_8f8c to i8*
  %v3_8f8c = load i8, i8* %v2_8f8c, align 1
  %v4_8f8c = zext i8 %v3_8f8c to i32
  %v9_8f90 = icmp eq i32 %v1_8f74, %v4_8f8c
  br i1 %v9_8f90, label %dec_label_pc_8fb4, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f9c.preheader, %dec_label_pc_8f8c
  %v0_8f94.in = phi i32 [ %v0_8f70, %dec_label_pc_8f9c.preheader ], [ %v0_8f94, %dec_label_pc_8f8c ]
  %v0_8f9c = phi i32 [ 0, %dec_label_pc_8f9c.preheader ], [ %v1_8f9c, %dec_label_pc_8f8c ]
  %v0_8f94 = add i32 %v0_8f94.in, 8
  %v1_8f9c = add i32 %v0_8f9c, 1
  %v9_8fa0 = icmp eq i32 %v1_8f5c, %v1_8f9c
  store i32 %v0_8f94, i32* %r1.global-to-local, align 4
  br i1 %v9_8fa0, label %dec_label_pc_8fac, label %dec_label_pc_8f8c

dec_label_pc_8fac:                                ; preds = %dec_label_pc_8f9c, %dec_label_pc_8fb4, %dec_label_pc_8f5c
  ret i32 %arg4

dec_label_pc_8fb4:                                ; preds = %dec_label_pc_8f8c, %dec_label_pc_8f70
  %v0_8fb4 = phi i32 [ %v0_8f70, %dec_label_pc_8f70 ], [ %v0_8f94, %dec_label_pc_8f8c ]
  %v1_8fb4 = inttoptr i32 %v0_8fb4 to i32*
  %v2_8fb4 = load i32, i32* %v1_8fb4, align 4
  %v3_8fb8 = icmp eq i32 %v2_8fb4, 0
  br i1 %v3_8fb8, label %dec_label_pc_8fac, label %dec_label_pc_8fc0

dec_label_pc_8fc0:                                ; preds = %dec_label_pc_8fb4
  %v3_8fb4 = inttoptr i32 %v2_8fb4 to i8*
  %v3_8fc4 = call i32 @inet_addr(i8* %v3_8fb4)
  ret i32 %v3_8fc4

; uselistorder directives
  uselistorder i32 %v2_8fb4, { 1, 0 }
  uselistorder i32 %v1_8f9c, { 1, 0 }
  uselistorder i32 %v0_8f94, { 1, 0, 2 }
  uselistorder i32 %v0_8f94.in, { 1, 0 }
  uselistorder i32 %v1_8f74, { 1, 0 }
  uselistorder i32 %v0_8f70, { 1, 0, 2 }
  uselistorder i32 %v1_8f5c, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8fac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8f9c, { 1, 0 }
}

define i32 @function_8fc8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8fc8:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_8fc8 = urem i32 %arg1, 256
  %v2_8fcc = icmp eq i32 %v1_8fc8, 0
  %v3_8fd0 = load i32, i32* @r4, align 4
  br i1 %v2_8fcc, label %dec_label_pc_9018, label %dec_label_pc_8fdc

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fc8
  %v0_8fdc = load i32, i32* %r1.global-to-local, align 4
  %v1_8fdc = add i32 %v0_8fdc, 4
  %v2_8fdc = inttoptr i32 %v1_8fdc to i8*
  %v3_8fdc = load i8, i8* %v2_8fdc, align 1
  %v4_8fdc = zext i8 %v3_8fdc to i32
  %v1_8fe0 = urem i32 %arg3, 256
  %v9_8fe4 = icmp eq i32 %v4_8fdc, %v1_8fe0
  br i1 %v9_8fe4, label %dec_label_pc_9020, label %dec_label_pc_9008.preheader

dec_label_pc_9008.preheader:                      ; preds = %dec_label_pc_8fdc
  br label %dec_label_pc_9008

dec_label_pc_8ff8:                                ; preds = %dec_label_pc_9008
  %v1_8ff8 = add i32 %v0_9000.in, 12
  %v2_8ff8 = inttoptr i32 %v1_8ff8 to i8*
  %v3_8ff8 = load i8, i8* %v2_8ff8, align 1
  %v4_8ff8 = zext i8 %v3_8ff8 to i32
  %v9_8ffc = icmp eq i32 %v1_8fe0, %v4_8ff8
  br i1 %v9_8ffc, label %dec_label_pc_9020, label %dec_label_pc_9008

dec_label_pc_9008:                                ; preds = %dec_label_pc_9008.preheader, %dec_label_pc_8ff8
  %v0_9000.in = phi i32 [ %v0_8fdc, %dec_label_pc_9008.preheader ], [ %v0_9000, %dec_label_pc_8ff8 ]
  %v0_9008 = phi i32 [ 0, %dec_label_pc_9008.preheader ], [ %v1_9008, %dec_label_pc_8ff8 ]
  %v0_9000 = add i32 %v0_9000.in, 8
  %v1_9008 = add i32 %v0_9008, 1
  store i32 %v1_9008, i32* @lr, align 4
  %v9_900c = icmp eq i32 %v1_8fc8, %v1_9008
  store i32 %v0_9000, i32* %r1.global-to-local, align 4
  br i1 %v9_900c, label %dec_label_pc_9018, label %dec_label_pc_8ff8

dec_label_pc_9018:                                ; preds = %dec_label_pc_9008, %dec_label_pc_9020, %dec_label_pc_8fc8
  store i32 %v3_8fd0, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_9020:                                ; preds = %dec_label_pc_8ff8, %dec_label_pc_8fdc
  %v0_9020 = phi i32 [ %v0_8fdc, %dec_label_pc_8fdc ], [ %v0_9000, %dec_label_pc_8ff8 ]
  %v1_9020 = inttoptr i32 %v0_9020 to i32*
  %v2_9020 = load i32, i32* %v1_9020, align 4
  %v2_9024 = icmp eq i32 %v2_9020, 0
  br i1 %v2_9024, label %dec_label_pc_9018, label %dec_label_pc_902c

dec_label_pc_902c:                                ; preds = %dec_label_pc_9020
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v3_8fd0, i32* @r4, align 4
  %v2_9034 = inttoptr i32 %v2_9020 to i8*
  %v3_9034 = call i32 @function_12858(i8* %v2_9034, i32 10)
  ret i32 %v3_9034

; uselistorder directives
  uselistorder i32 %v1_9008, { 1, 2, 0 }
  uselistorder i32 %v0_9000, { 1, 0, 2 }
  uselistorder i32 %v0_9000.in, { 1, 0 }
  uselistorder i32 %v1_8fe0, { 1, 0 }
  uselistorder i32 %v0_8fdc, { 1, 0, 2 }
  uselistorder i32 %v3_8fd0, { 1, 0 }
  uselistorder i32 %v1_8fc8, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_9018, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9008, { 1, 0 }
}

define i32 @function_9038(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9038:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_9038 = load i32, i32* @r4, align 4
  %v6_9038 = load i32, i32* @r5, align 4
  %v9_9038 = load i32, i32* @r6, align 4
  %v12_9038 = load i32, i32* @r7, align 4
  %v15_9038 = load i32, i32* @r8, align 4
  %v18_9038 = load i32, i32* @sb, align 4
  %v21_9038 = load i32, i32* @sl, align 4
  %v24_9038 = load i32, i32* @fp, align 4
  %v27_9038 = load i32, i32* @lr, align 4
  %v7_903c = icmp eq i32 %arg2, 3
  store i1 %v7_903c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v0_9048 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_9048, i32* %r4.global-to-local, align 4
  %tmp47 = icmp ult i32 %arg2, 4
  br i1 %tmp47, label %dec_label_pc_905c, label %dec_label_pc_9050

dec_label_pc_9050:                                ; preds = %dec_label_pc_9038
  %v7_9050 = icmp eq i32 %arg2, 4
  store i1 %v7_9050, i1* %cpsr_z.global-to-local, align 1
  %v1_9054 = inttoptr i32 %v0_9048 to i32*
  %v2_9054 = load i32, i32* %v1_9054, align 4
  store i32 %v2_9054, i32* @sl, align 4
  br i1 %v7_9050, label %dec_label_pc_905c, label %dec_label_pc_9064

dec_label_pc_905c:                                ; preds = %dec_label_pc_9080, %.dec_label_pc_905c_crit_edge, %dec_label_pc_9050, %dec_label_pc_9074, %dec_label_pc_9064, %dec_label_pc_9038
  %v29_9060 = phi i32 [ %v29_9060.pre, %.dec_label_pc_905c_crit_edge ], [ %v0_9048, %dec_label_pc_9080 ], [ %v0_9048, %dec_label_pc_9050 ], [ %v0_9048, %dec_label_pc_9074 ], [ %v0_9048, %dec_label_pc_9064 ], [ %v0_9048, %dec_label_pc_9038 ]
  store i32 %v3_9038, i32* %r4.global-to-local, align 4
  store i32 %v6_9038, i32* %r5.global-to-local, align 4
  store i32 %v9_9038, i32* @r6, align 4
  store i32 %v12_9038, i32* @r7, align 4
  store i32 %v15_9038, i32* %r8.global-to-local, align 4
  store i32 %v18_9038, i32* @sb, align 4
  store i32 %v21_9038, i32* @sl, align 4
  store i32 %v24_9038, i32* @fp, align 4
  ret i32 %v29_9060

dec_label_pc_9064:                                ; preds = %dec_label_pc_9050
  %v7_9064 = icmp eq i32 %arg2, 5
  store i1 %v7_9064, i1* %cpsr_z.global-to-local, align 1
  %v1_9068 = add i32 %v0_9048, 4
  %v2_9068 = inttoptr i32 %v1_9068 to i8*
  %v3_9068 = load i8, i8* %v2_9068, align 1
  %v4_9068 = zext i8 %v3_9068 to i32
  store i32 %v4_9068, i32* %r1.global-to-local, align 4
  br i1 %v7_9064, label %dec_label_pc_905c, label %dec_label_pc_9074

dec_label_pc_9074:                                ; preds = %dec_label_pc_9064
  %v1_9074 = add i32 %v0_9048, 5
  %v2_9074 = inttoptr i32 %v1_9074 to i8*
  %v3_9074 = load i8, i8* %v2_9074, align 1
  %v4_9074 = zext i8 %v3_9074 to i32
  store i32 %v4_9074, i32* %r8.global-to-local, align 4
  %v2_9078 = icmp eq i8 %v3_9074, 0
  store i1 %v2_9078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9078, label %dec_label_pc_905c, label %dec_label_pc_9080

dec_label_pc_9080:                                ; preds = %dec_label_pc_9074
  %v3_9080 = mul nuw nsw i32 %v4_9074, 4
  store i32 %v3_9080, i32* @sb, align 4
  %v1_9084 = add i32 %arg2, -6
  store i32 %v1_9084, i32* @r6, align 4
  %v2_9088 = mul nuw nsw i32 %v4_9074, 5
  store i32 %v2_9088, i32* @r7, align 4
  %v3_908c = icmp ult i32 %v1_9084, %v2_9088
  %v9_908c = icmp eq i32 %v1_9084, %v2_9088
  store i1 %v9_908c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_908c, label %dec_label_pc_905c, label %dec_label_pc_9094

dec_label_pc_9094:                                ; preds = %dec_label_pc_9080
  store i32 %v4_9074, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  %v2_909c = call i32* @calloc(i32 %v4_9074, i32 24)
  %v4_909c = ptrtoint i32* %v2_909c to i32
  store i32 %v4_909c, i32* %r0.global-to-local, align 4
  %v0_90a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_90a0 = icmp eq i32 %v0_90a0, 0
  store i1 %v2_90a0, i1* %cpsr_z.global-to-local, align 1
  %v0_90a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_90a8 = add i32 %v0_90a8, 6
  store i32 %v1_90a8, i32* @fp, align 4
  %tmp36 = icmp slt i32 %v0_90a0, 1
  br i1 %tmp36, label %dec_label_pc_9100thread-pre-split, label %dec_label_pc_90b0

dec_label_pc_90b0:                                ; preds = %dec_label_pc_9094
  store i32 %v4_909c, i32* %r1.global-to-local, align 4
  %v1_90b4 = load i32, i32* @r7, align 4
  %v2_90b4 = add i32 %v1_90b4, %v0_90a8
  store i32 %v2_90b4, i32* %ip.global-to-local, align 4
  store i32 %v0_90a8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_90c4

dec_label_pc_90c4:                                ; preds = %dec_label_pc_90c4.dec_label_pc_90c4_crit_edge, %dec_label_pc_90b0
  %v2_90d4 = phi i32 [ %v1_90e8, %dec_label_pc_90c4.dec_label_pc_90c4_crit_edge ], [ %v4_909c, %dec_label_pc_90b0 ]
  %v0_90d0 = phi i32 [ %v0_90d0.pre, %dec_label_pc_90c4.dec_label_pc_90c4_crit_edge ], [ %v2_90b4, %dec_label_pc_90b0 ]
  %v0_90cc = phi i32 [ %v0_90c4.pre, %dec_label_pc_90c4.dec_label_pc_90c4_crit_edge ], [ %v0_90a8, %dec_label_pc_90b0 ]
  %v1_90c4 = add i32 %v0_90cc, 10
  %v2_90c4 = inttoptr i32 %v1_90c4 to i8*
  %v3_90c4 = load i8, i8* %v2_90c4, align 1
  %v1_90c8 = add i32 %v0_90cc, 6
  %v2_90c8 = inttoptr i32 %v1_90c8 to i32*
  %v3_90c8 = load i32, i32* %v2_90c8, align 4
  store i32 %v3_90c8, i32* @r2, align 4
  %v1_90cc = add i32 %v0_90cc, 5
  store i32 %v1_90cc, i32* %r0.global-to-local, align 4
  %v9_90d0 = icmp eq i32 %v0_90d0, %v1_90cc
  store i1 %v9_90d0, i1* %cpsr_z.global-to-local, align 1
  %v3_90d4 = add i32 %v2_90d4, 20
  %v4_90d4 = inttoptr i32 %v3_90d4 to i8*
  store i8 %v3_90c4, i8* %v4_90d4, align 1
  %v0_90d8 = load i32, i32* @r2, align 4
  %v1_90d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_90d8 = add i32 %v1_90d8, 4
  %v3_90d8 = inttoptr i32 %v2_90d8 to i32*
  store i32 %v0_90d8, i32* %v3_90d8, align 4
  %v0_90dc = load i32, i32* @r2, align 4
  %v1_90dc = load i32, i32* %r1.global-to-local, align 4
  %v2_90dc = add i32 %v1_90dc, 16
  %v3_90dc = inttoptr i32 %v2_90dc to i32*
  store i32 %v0_90dc, i32* %v3_90dc, align 4
  %v0_90e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_90e0 = trunc i32 %v0_90e0 to i8
  %v2_90e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_90e0 = inttoptr i32 %v2_90e0 to i8*
  store i8 %v1_90e0, i8* %v3_90e0, align 1
  %v0_90e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_90e4 = trunc i32 %v0_90e4 to i8
  %v2_90e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_90e4 = add i32 %v2_90e4, 1
  %v4_90e4 = inttoptr i32 %v3_90e4 to i8*
  store i8 %v1_90e4, i8* %v4_90e4, align 1
  %v0_90e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_90e8 = add i32 %v0_90e8, 24
  store i32 %v1_90e8, i32* %r1.global-to-local, align 4
  %v0_90ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_90ec, label %dec_label_pc_90f0, label %dec_label_pc_90c4.dec_label_pc_90c4_crit_edge

dec_label_pc_90c4.dec_label_pc_90c4_crit_edge:    ; preds = %dec_label_pc_90c4
  %v0_90c4.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_90d0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_90c4

dec_label_pc_90f0:                                ; preds = %dec_label_pc_90c4
  %v0_90f0 = load i32, i32* @sb, align 4
  %v1_90f0 = load i32, i32* %r8.global-to-local, align 4
  %v1_90f4 = load i32, i32* %r5.global-to-local, align 4
  %sum = add i32 %v1_90f0, %v0_90f0
  %v2_90f4 = sub i32 %v1_90f4, %sum
  %v0_90f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_90f8 = add i32 %v0_90f8, 6
  store i32 %v1_90f8, i32* @fp, align 4
  %v1_90fc = add i32 %v2_90f4, -6
  store i32 %v1_90fc, i32* @r6, align 4
  br label %dec_label_pc_9100

dec_label_pc_9100thread-pre-split:                ; preds = %dec_label_pc_9094
  %v0_9100.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_9100

dec_label_pc_9100:                                ; preds = %dec_label_pc_9100thread-pre-split, %dec_label_pc_90f0
  %v0_910c = phi i32 [ %v1_90a8, %dec_label_pc_9100thread-pre-split ], [ %v1_90f8, %dec_label_pc_90f0 ]
  %v1_9104 = phi i32 [ %v0_9100.pr, %dec_label_pc_9100thread-pre-split ], [ %v1_90fc, %dec_label_pc_90f0 ]
  %v2_9100 = icmp eq i32 %v1_9104, 0
  store i1 %v2_9100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9100, label %dec_label_pc_9220, label %dec_label_pc_910c

dec_label_pc_910c:                                ; preds = %dec_label_pc_9100
  %v1_910c = inttoptr i32 %v0_910c to i8*
  %v2_910c = load i8, i8* %v1_910c, align 1
  %v3_910c = zext i8 %v2_910c to i32
  store i32 %v3_910c, i32* @sb, align 4
  %v2_9110 = icmp eq i8 %v2_910c, 0
  store i1 %v2_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9110, label %dec_label_pc_91f0, label %dec_label_pc_9120

dec_label_pc_9120:                                ; preds = %dec_label_pc_910c
  store i32 %v3_910c, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_9128 = call i32* @calloc(i32 %v3_910c, i32 8)
  %v4_9128 = ptrtoint i32* %v2_9128 to i32
  store i32 %v4_9128, i32* %r0.global-to-local, align 4
  %v0_912c = load i32, i32* @sb, align 4
  %v2_912c = icmp eq i32 %v0_912c, 0
  store i1 %v2_912c, i1* %cpsr_z.global-to-local, align 1
  %tmp37 = icmp slt i32 %v0_912c, 1
  br i1 %tmp37, label %dec_label_pc_91f0, label %dec_label_pc_913c

dec_label_pc_913c:                                ; preds = %dec_label_pc_9120
  %v0_913c = load i32, i32* @r6, align 4
  %v1_913c = add i32 %v0_913c, -1
  store i32 %v1_913c, i32* @r2, align 4
  %v7_913c = icmp eq i32 %v0_913c, 1
  store i1 %v7_913c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_913c, label %dec_label_pc_9220, label %dec_label_pc_9144

dec_label_pc_9144:                                ; preds = %dec_label_pc_913c
  %v0_9144 = load i32, i32* @fp, align 4
  %v1_9144 = add i32 %v0_9144, 1
  %v2_9144 = inttoptr i32 %v1_9144 to i8*
  %v3_9144 = load i8, i8* %v2_9144, align 1
  %v1_9148 = add i32 %v0_913c, -2
  store i32 %v1_9148, i32* @r2, align 4
  %v7_9148 = icmp eq i32 %v1_913c, 1
  store i1 %v7_9148, i1* %cpsr_z.global-to-local, align 1
  %v3_914c = add i32 %v4_9128, 4
  %v4_914c = inttoptr i32 %v3_914c to i8*
  store i8 %v3_9144, i8* %v4_914c, align 1
  %v0_9150 = load i32, i32* @fp, align 4
  %v1_9150 = add i32 %v0_9150, 1
  store i32 %v1_9150, i32* %r0.global-to-local, align 4
  %v0_9154 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9154, label %dec_label_pc_9220, label %dec_label_pc_9158

dec_label_pc_9158:                                ; preds = %dec_label_pc_9144
  %v1_9158 = add i32 %v0_9150, 2
  %v2_9158 = inttoptr i32 %v1_9158 to i8*
  %v3_9158 = load i8, i8* %v2_9158, align 1
  %v4_9158 = zext i8 %v3_9158 to i32
  store i32 %v4_9158, i32* %r4.global-to-local, align 4
  %v0_915c = load i32, i32* @r2, align 4
  %v1_915c = add i32 %v0_915c, -1
  store i32 %v1_915c, i32* @r7, align 4
  %v9_9160 = icmp eq i32 %v1_915c, %v4_9158
  store i1 %v9_9160, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9158, i32* %r0.global-to-local, align 4
  %v5_9168 = icmp slt i32 %v1_915c, %v4_9158
  br i1 %v5_9168, label %dec_label_pc_9220, label %dec_label_pc_916c

dec_label_pc_916c:                                ; preds = %dec_label_pc_9158
  store i32 %v4_9128, i32* %r5.global-to-local, align 4
  %v1_9174 = add i32 %v4_9128, 8
  %v1_9178 = add i32 %v0_9150, 3
  store i32 %v1_9178, i32* @r6, align 4
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_91c8

dec_label_pc_9188:                                ; preds = %dec_label_pc_91c8
  %v0_9188 = load i32, i32* @r7, align 4
  %v1_9188 = load i32, i32* %r4.global-to-local, align 4
  %v2_9188 = sub i32 %v0_9188, %v1_9188
  store i32 %v2_9188, i32* @r2, align 4
  %v9_9188 = icmp eq i32 %v0_9188, %v1_9188
  store i1 %v9_9188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9188, label %dec_label_pc_9220, label %dec_label_pc_9190

dec_label_pc_9190:                                ; preds = %dec_label_pc_9188
  %v1_9190 = load i32, i32* @r6, align 4
  %v2_9190 = add i32 %v1_9190, %v1_9188
  %v3_9190 = inttoptr i32 %v2_9190 to i8*
  %v4_9190 = load i8, i8* %v3_9190, align 1
  store i32 %stack_var_-44.0, i32* %r5.global-to-local, align 4
  %v1_9198 = add i32 %v2_9188, -1
  store i32 %v1_9198, i32* @r2, align 4
  %v7_9198 = icmp eq i32 %v2_9188, 1
  store i1 %v7_9198, i1* %cpsr_z.global-to-local, align 1
  %v3_919c = add i32 %stack_var_-44.0, 4
  %v4_919c = inttoptr i32 %v3_919c to i8*
  store i8 %v4_9190, i8* %v4_919c, align 1
  %v0_91a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_91a0 = load i32, i32* @r6, align 4
  %v2_91a0 = add i32 %v1_91a0, %v0_91a0
  store i32 %v2_91a0, i32* %r0.global-to-local, align 4
  %v0_91a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_91a4, label %dec_label_pc_9220, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9190
  %v1_91a8 = add i32 %v2_91a0, 1
  %v2_91a8 = inttoptr i32 %v1_91a8 to i8*
  %v3_91a8 = load i8, i8* %v2_91a8, align 1
  %v4_91a8 = zext i8 %v3_91a8 to i32
  store i32 %v4_91a8, i32* %r4.global-to-local, align 4
  %v0_91ac = load i32, i32* @r2, align 4
  %v1_91ac = add i32 %v0_91ac, -1
  store i32 %v1_91ac, i32* @r7, align 4
  %v0_91b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_91b0 = add i32 %v0_91b0, 8
  store i32 %v1_91b0, i32* %r1.global-to-local, align 4
  %v2_91b4 = sub i32 %v1_91ac, %v4_91a8
  %tmp39 = sub i32 0, %v2_91b4
  %v6_91b4 = and i32 %v1_91ac, %tmp39
  %v7_91b4 = icmp slt i32 %v6_91b4, 0
  %v8_91b4 = icmp slt i32 %v2_91b4, 0
  %v9_91b4 = icmp eq i32 %v1_91ac, %v4_91a8
  store i1 %v9_91b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_91a8, i32* %r0.global-to-local, align 4
  %v2_91c0 = xor i1 %v8_91b4, %v7_91b4
  br i1 %v2_91c0, label %dec_label_pc_9220, label %dec_label_pc_91c4

dec_label_pc_91c4:                                ; preds = %dec_label_pc_91a8
  %v1_91c4 = add i32 %v2_91a0, 2
  store i32 %v1_91c4, i32* @r6, align 4
  br label %dec_label_pc_91c8

dec_label_pc_91c8:                                ; preds = %dec_label_pc_916c, %dec_label_pc_91c4
  %v0_91cc = phi i32 [ %v4_9158, %dec_label_pc_916c ], [ %v4_91a8, %dec_label_pc_91c4 ]
  %stack_var_-44.0 = phi i32 [ %v1_9174, %dec_label_pc_916c ], [ %v1_91b0, %dec_label_pc_91c4 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_91cc = add nuw nsw i32 %v0_91cc, 1
  store i32 %v2_91cc, i32* %r0.global-to-local, align 4
  %v2_91d0 = call i32* @calloc(i32 %v2_91cc, i32 1)
  %v3_91d0 = ptrtoint i32* %v2_91d0 to i32
  store i32 %v3_91d0, i32* %r0.global-to-local, align 4
  %v0_91d4 = load i32, i32* @fp, align 4
  %v1_91d4 = add i32 %v0_91d4, 1
  store i32 %v1_91d4, i32* @fp, align 4
  %v1_91d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_91d8 = inttoptr i32 %v1_91d8 to i32*
  store i32 %v3_91d0, i32* %v2_91d8, align 4
  %v0_91dc = load i32, i32* @r6, align 4
  store i32 %v0_91dc, i32* %r1.global-to-local, align 4
  %v0_91e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_91e4 = call i32 @function_127a8(i32 %v3_91d0, i32 %v0_91dc, i32 %v0_91e0)
  store i32 %v3_91e4, i32* %r0.global-to-local, align 4
  %v0_91e8 = load i32, i32* @sb, align 4
  %v1_91e8 = load i32, i32* @fp, align 4
  %v9_91e8 = icmp eq i32 %v0_91e8, %v1_91e8
  store i1 %v9_91e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_91e8, label %dec_label_pc_91f0, label %dec_label_pc_9188

dec_label_pc_91f0:                                ; preds = %dec_label_pc_91c8, %dec_label_pc_9120, %dec_label_pc_910c
  %stack_var_-52.2 = phi i32 [ %v3_910c, %dec_label_pc_910c ], [ %v4_9128, %dec_label_pc_9120 ], [ %v4_9128, %dec_label_pc_91c8 ]
  %v0_91f0 = call i32* @__errno_location()
  %v2_91f0 = ptrtoint i32* %v0_91f0 to i32
  store i32 %v2_91f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v0_91f0, align 4
  %v0_91fc = call i32 @fork()
  store i32 %v0_91fc, i32* %r0.global-to-local, align 4
  %v2_9200 = icmp eq i32 %v0_91fc, -1
  %v2_920c = icmp eq i32 %v0_91fc, 0
  store i1 %v2_920c, i1* %cpsr_z.global-to-local, align 1
  %tmp41 = icmp slt i32 %v0_91fc, 1
  br i1 %tmp41, label %bb42, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_91f0
  store i32 1, i32* @r2, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_9220

bb42:                                             ; preds = %dec_label_pc_91f0
  %. = zext i1 %v2_9200 to i32
  store i32 %., i32* @r2, align 4
  %v2_9218 = icmp eq i1 %v2_9200, false
  store i1 %v2_9218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9218, label %dec_label_pc_9274, label %dec_label_pc_9220

dec_label_pc_9220:                                ; preds = %dec_label_pc_91a8, %dec_label_pc_9190, %dec_label_pc_9188, %.thread1, %bb42, %dec_label_pc_9158, %dec_label_pc_9144, %dec_label_pc_913c, %dec_label_pc_9100
  %stack_var_-52.3 = phi i32 [ 0, %dec_label_pc_9100 ], [ %stack_var_-52.2, %bb42 ], [ %v4_9128, %dec_label_pc_913c ], [ %v4_9128, %dec_label_pc_9144 ], [ %v4_9128, %dec_label_pc_9158 ], [ %stack_var_-52.2, %.thread1 ], [ %v4_9128, %dec_label_pc_9188 ], [ %v4_9128, %dec_label_pc_9190 ], [ %v4_9128, %dec_label_pc_91a8 ]
  store i32 %v4_909c, i32* %r1.global-to-local, align 4
  %v2_9224 = icmp eq i32* %v2_909c, null
  store i1 %v2_9224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9224, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_9220
  store i32 %v4_909c, i32* %r0.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_9220, %bb43
  store i32 37424, i32* %lr.global-to-local, align 4
  %v1_922c = xor i1 %v2_9224, true
  call void @__pseudo_cond_branch(i1 %v1_922c, i32 ptrtoint (i32* @global_var_8db8.74 to i32))
  %v2_9234 = icmp eq i32 %stack_var_-52.3, 0
  store i1 %v2_9234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9234, label %.dec_label_pc_905c_crit_edge, label %dec_label_pc_923c

.dec_label_pc_905c_crit_edge:                     ; preds = %bb44
  %v29_9060.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_905c

dec_label_pc_923c:                                ; preds = %bb44
  %v0_923c = load i32, i32* @sb, align 4
  %v2_923c = icmp eq i32 %v0_923c, 0
  store i1 %v2_923c, i1* %cpsr_z.global-to-local, align 1
  %tmp45 = icmp slt i32 %v0_923c, 1
  br i1 %tmp45, label %dec_label_pc_9264, label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_923c
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9248

dec_label_pc_9248:                                ; preds = %dec_label_pc_9248, %dec_label_pc_9244
  %v1_924c = phi i32 [ %v1_9258, %dec_label_pc_9248 ], [ 0, %dec_label_pc_9244 ]
  store i32 %stack_var_-52.3, i32* %r1.global-to-local, align 4
  %v4_924c = mul i32 %v1_924c, 8
  %v5_924c = add i32 %v4_924c, %stack_var_-52.3
  %v6_924c = inttoptr i32 %v5_924c to i32*
  %v7_924c = load i32, i32* %v6_924c, align 4
  store i32 %v7_924c, i32* %r0.global-to-local, align 4
  %v2_9250 = icmp eq i32 %v7_924c, 0
  store i1 %v2_9250, i1* %cpsr_z.global-to-local, align 1
  store i32 37464, i32* %lr.global-to-local, align 4
  %v1_9254 = xor i1 %v2_9250, true
  call void @__pseudo_cond_branch(i1 %v1_9254, i32 ptrtoint (i32* @global_var_8db8.74 to i32))
  %v0_9258 = load i32, i32* %r4.global-to-local, align 4
  %v1_9258 = add i32 %v0_9258, 1
  store i32 %v1_9258, i32* %r4.global-to-local, align 4
  %v0_925c = load i32, i32* @sb, align 4
  %v9_925c = icmp eq i32 %v0_925c, %v1_9258
  store i1 %v9_925c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_925c, label %dec_label_pc_9264, label %dec_label_pc_9248

dec_label_pc_9264:                                ; preds = %dec_label_pc_9248, %dec_label_pc_923c
  store i32 %stack_var_-52.3, i32* %r0.global-to-local, align 4
  store i32 %v3_9038, i32* %r4.global-to-local, align 4
  store i32 %v6_9038, i32* %r5.global-to-local, align 4
  store i32 %v9_9038, i32* @r6, align 4
  store i32 %v12_9038, i32* @r7, align 4
  store i32 %v15_9038, i32* %r8.global-to-local, align 4
  store i32 %v18_9038, i32* @sb, align 4
  store i32 %v21_9038, i32* @sl, align 4
  store i32 %v24_9038, i32* @fp, align 4
  store i32 %v27_9038, i32* %lr.global-to-local, align 4
  %v1_9270 = inttoptr i32 %stack_var_-52.3 to i32*
  call void @free(i32* %v1_9270)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9274

dec_label_pc_9274:                                ; preds = %bb42, %dec_label_pc_9264
  %stack_var_-52.4 = phi i32 [ %stack_var_-52.3, %dec_label_pc_9264 ], [ %stack_var_-52.2, %bb42 ]
  %v2_9278 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_9278 = zext i8 %v2_9278 to i32
  store i32 %v3_9278, i32* %lr.global-to-local, align 4
  %v2_927c = icmp eq i8 %v2_9278, 0
  store i1 %v2_927c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_927c, label %dec_label_pc_92c4, label %dec_label_pc_9284

dec_label_pc_9284:                                ; preds = %dec_label_pc_9274
  %v2_9288 = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 %v2_9288, i32* %r0.global-to-local, align 4
  %v1_928c = inttoptr i32 %v2_9288 to i32*
  %v2_928c = load i32, i32* %v1_928c, align 4
  store i32 %v2_928c, i32* %ip.global-to-local, align 4
  store i32 %v4_9068, i32* %r4.global-to-local, align 4
  %v1_9294 = add i32 %v2_928c, 4
  %v2_9294 = inttoptr i32 %v1_9294 to i8*
  %v3_9294 = load i8, i8* %v2_9294, align 1
  store i32 %v4_9068, i32* %r1.global-to-local, align 4
  %v9_929c = icmp eq i8 %v3_9294, %v3_9068
  store i1 %v9_929c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_929c, label %dec_label_pc_92cc, label %dec_label_pc_92b8.preheader

dec_label_pc_92b8.preheader:                      ; preds = %dec_label_pc_9284
  %v0_92b8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_92b8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_92b8
  %v4_92a8 = mul i32 %v1_92b8, 4
  %v5_92a8 = add i32 %v4_92a8, %v2_9288
  %v6_92a8 = inttoptr i32 %v5_92a8 to i32*
  %v7_92a8 = load i32, i32* %v6_92a8, align 4
  store i32 %v7_92a8, i32* %ip.global-to-local, align 4
  %v1_92ac = add i32 %v7_92a8, 4
  %v2_92ac = inttoptr i32 %v1_92ac to i8*
  %v3_92ac = load i8, i8* %v2_92ac, align 1
  %v9_92b0 = icmp eq i8 %v3_92ac, %v3_9068
  store i1 %v9_92b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_92b0, label %dec_label_pc_92cc, label %dec_label_pc_92b8

dec_label_pc_92b8:                                ; preds = %dec_label_pc_92b8.preheader, %dec_label_pc_92a8
  %v0_92b8 = phi i32 [ %v0_92b8.pre, %dec_label_pc_92b8.preheader ], [ %v1_92b8, %dec_label_pc_92a8 ]
  %v1_92b8 = add i32 %v0_92b8, 1
  %v9_92bc = icmp eq i32 %v1_92b8, %v3_9278
  store i1 %v9_92bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_92bc, label %dec_label_pc_92c4, label %dec_label_pc_92a8

dec_label_pc_92c4:                                ; preds = %dec_label_pc_92b8, %dec_label_pc_9274, %dec_label_pc_92cc
  store i32 0, i32* %r0.global-to-local, align 4
  call void @exit(i32 0)
  unreachable

dec_label_pc_92cc:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9284
  %v0_9304 = phi i32 [ %v2_928c, %dec_label_pc_9284 ], [ %v7_92a8, %dec_label_pc_92a8 ]
  %v0_92cc = load i32, i32* @sl, align 4
  store i32 %stack_var_-52.4, i32* %r4.global-to-local, align 4
  %v2_92f0 = call i32 @llvm.bswap.i32(i32 %v0_92cc)
  store i32 %v2_92f0, i32* %r0.global-to-local, align 4
  %v0_92f8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_92f8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_9308.79 to i32), i32* %lr.global-to-local, align 4
  %v1_9304 = inttoptr i32 %v0_9304 to i32*
  %v2_9304 = load i32, i32* %v1_9304, align 4
  call void @__pseudo_branch(i32 %v2_9304)
  br label %dec_label_pc_92c4

; uselistorder directives
  uselistorder i32 %v1_92b8, { 2, 0, 1 }
  uselistorder i1 %v9_92b0, { 1, 0 }
  uselistorder i1 %v9_929c, { 1, 0 }
  uselistorder i32 %v1_9258, { 1, 2, 0 }
  uselistorder i1 %v2_9224, { 0, 2, 1 }
  uselistorder i32 %stack_var_-52.3, { 2, 4, 3, 0, 1, 5 }
  uselistorder i1 %v2_9218, { 1, 0 }
  uselistorder i1 %v2_9200, { 1, 0 }
  uselistorder i32 %v0_91fc, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.2, { 2, 0, 1 }
  uselistorder i32 %v3_91d0, { 0, 2, 1 }
  uselistorder i32 %stack_var_-44.0, { 1, 0 }
  uselistorder i32 %v2_91b4, { 1, 0 }
  uselistorder i32 %v1_91ac, { 2, 0, 1, 3 }
  uselistorder i32 %v4_91a8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_913c, { 0, 2, 1 }
  uselistorder i32 %v4_9128, { 0, 1, 2, 10, 9, 8, 3, 5, 6, 7, 4, 11 }
  uselistorder i32 %v3_910c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_90e8, { 1, 0 }
  uselistorder i32 %v0_90cc, { 0, 2, 1 }
  uselistorder i32 %v0_90a8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_909c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v2_9088, { 2, 1, 0 }
  uselistorder i32 %v4_9074, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_9048, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i32 %v3_9038, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 1, 2, 4, 6, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 12, 14, 13, 15 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 2, 6, 7, 25, 8, 9, 12, 13, 17, 14, 10, 11, 15, 16, 23, 18, 20, 19, 21, 22, 26, 24, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 16, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 %arg2, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder label %dec_label_pc_92c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_92b8, { 1, 0 }
  uselistorder label %dec_label_pc_9274, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_9220, { 4, 3, 0, 1, 2, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_91c8, { 1, 0 }
  uselistorder label %dec_label_pc_905c, { 1, 0, 3, 4, 2, 5 }
}

define i32 @function_9314(i32 %arg1) local_unnamed_addr {
dec_label_pc_9314:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_9314 = load i32, i32* @r4, align 4
  store i32 %v3_9314, i32* %stack_var_-24, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_9320 = call i32* @calloc(i32 1, i32 8)
  %v3_9320 = ptrtoint i32* %v2_9320 to i32
  store i32 ptrtoint (i8** @global_var_1b9bc.76 to i32), i32* %r4.global-to-local, align 4
  %v2_9328 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_9328 = zext i8 %v2_9328 to i32
  store i32 ptrtoint (i32* @global_var_1b9c0.78 to i32), i32* %r6.global-to-local, align 4
  store i32 49256, i32* %r2.global-to-local, align 4
  store i32 %v3_9320, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_933c = mul nuw nsw i32 %v3_9328, 4
  store i32 %v3_933c, i32* %r1.global-to-local, align 4
  %v2_9340 = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 49256, i32* %v2_9320, align 4
  %v0_9348 = load i32, i32* %r3.global-to-local, align 4
  %v1_9348 = trunc i32 %v0_9348 to i8
  %v2_9348 = load i32, i32* %r5.global-to-local, align 4
  %v3_9348 = add i32 %v2_9348, 4
  %v4_9348 = inttoptr i32 %v3_9348 to i8*
  store i8 %v1_9348, i8* %v4_9348, align 1
  %v0_934c = load i32, i32* %r1.global-to-local, align 4
  %v1_934c = add i32 %v0_934c, 4
  store i32 %v1_934c, i32* %r1.global-to-local, align 4
  %v4_9350 = inttoptr i32 %v2_9340 to i32*
  %v5_9350 = call i32* @realloc(i32* %v4_9350, i32 %v1_934c)
  %v7_9350 = ptrtoint i32* %v5_9350 to i32
  %v2_9354 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_9354 = zext i8 %v2_9354 to i32
  store i32 %v3_9354, i32* %r3.global-to-local, align 4
  store i32 %v7_9350, i32* %ip.global-to-local, align 4
  %v0_935c = load i32, i32* %r5.global-to-local, align 4
  %v5_935c = mul nuw nsw i32 %v3_9354, 4
  %v6_935c = add i32 %v5_935c, %v7_9350
  %v7_935c = inttoptr i32 %v6_935c to i32*
  store i32 %v0_935c, i32* %v7_935c, align 4
  store i32 ptrtoint (i8* @global_var_1b9bd.83 to i32), i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_936c = load i32, i32* %r4.global-to-local, align 4
  %v3_936c = inttoptr i32 %v2_936c to i8*
  store i8 ptrtoint (i8* @global_var_1b9bd.83 to i8), i8* %v3_936c, align 1
  %v0_9370 = load i32, i32* %ip.global-to-local, align 4
  %v1_9370 = load i32, i32* %r6.global-to-local, align 4
  %v2_9370 = inttoptr i32 %v1_9370 to i32*
  store i32 %v0_9370, i32* %v2_9370, align 4
  %v2_9374 = call i32* @calloc(i32 1, i32 8)
  %v3_9374 = ptrtoint i32* %v2_9374 to i32
  %v2_9378 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_9378 = zext i8 %v2_9378 to i32
  store i32 ptrtoint (i32* @global_var_c708.85 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 %v3_9374, i32* %r5.global-to-local, align 4
  %v3_9388 = mul nuw nsw i32 %v3_9378, 4
  store i32 %v3_9388, i32* %r1.global-to-local, align 4
  %v2_938c = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 ptrtoint (i32* @global_var_c708.85 to i32), i32* %v2_9374, align 4
  %v2_9394 = load i32, i32* %r5.global-to-local, align 4
  %v3_9394 = add i32 %v2_9394, 4
  %v4_9394 = inttoptr i32 %v3_9394 to i8*
  store i8 1, i8* %v4_9394, align 1
  %v0_9398 = load i32, i32* %r1.global-to-local, align 4
  %v1_9398 = add i32 %v0_9398, 4
  store i32 %v1_9398, i32* %r1.global-to-local, align 4
  %v3_939c = inttoptr i32 %v2_938c to i32*
  %v4_939c = call i32* @realloc(i32* %v3_939c, i32 %v1_9398)
  %v6_939c = ptrtoint i32* %v4_939c to i32
  %v2_93a0 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_93a0 = zext i8 %v2_93a0 to i32
  store i32 %v3_93a0, i32* %r3.global-to-local, align 4
  store i32 %v6_939c, i32* %ip.global-to-local, align 4
  %v0_93a8 = load i32, i32* %r5.global-to-local, align 4
  %v5_93a8 = mul nuw nsw i32 %v3_93a0, 4
  %v6_93a8 = add i32 %v5_93a8, %v6_939c
  %v7_93a8 = inttoptr i32 %v6_93a8 to i32*
  store i32 %v0_93a8, i32* %v7_93a8, align 4
  %v0_93ac = load i32, i32* %r3.global-to-local, align 4
  %v1_93ac = load i32, i32* %r7.global-to-local, align 4
  %v2_93ac = add i32 %v1_93ac, %v0_93ac
  store i32 %v2_93ac, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_93b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_93b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_93b8 = inttoptr i32 %v1_93b8 to i32*
  store i32 %v0_93b8, i32* %v2_93b8, align 4
  %v0_93bc = load i32, i32* %r2.global-to-local, align 4
  %v1_93bc = trunc i32 %v0_93bc to i8
  %v2_93bc = load i32, i32* %r4.global-to-local, align 4
  %v3_93bc = inttoptr i32 %v2_93bc to i8*
  store i8 %v1_93bc, i8* %v3_93bc, align 1
  %v2_93c0 = call i32* @calloc(i32 %v1_93ac, i32 8)
  %v4_93c0 = ptrtoint i32* %v2_93c0 to i32
  %v2_93c4 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_93c4 = zext i8 %v2_93c4 to i32
  store i32 ptrtoint (i32* @global_var_cc04.87 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_93c0, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_93d4 = mul nuw nsw i32 %v3_93c4, 4
  store i32 %v3_93d4, i32* %r1.global-to-local, align 4
  %v2_93d8 = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 ptrtoint (i32* @global_var_cc04.87 to i32), i32* %v2_93c0, align 4
  %v0_93e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_93e0 = trunc i32 %v0_93e0 to i8
  %v2_93e0 = load i32, i32* %r5.global-to-local, align 4
  %v3_93e0 = add i32 %v2_93e0, 4
  %v4_93e0 = inttoptr i32 %v3_93e0 to i8*
  store i8 %v1_93e0, i8* %v4_93e0, align 1
  %v0_93e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_93e4 = add i32 %v0_93e4, 4
  store i32 %v1_93e4, i32* %r1.global-to-local, align 4
  %v4_93e8 = inttoptr i32 %v2_93d8 to i32*
  %v5_93e8 = call i32* @realloc(i32* %v4_93e8, i32 %v1_93e4)
  %v7_93e8 = ptrtoint i32* %v5_93e8 to i32
  %v2_93ec = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_93ec = zext i8 %v2_93ec to i32
  store i32 %v3_93ec, i32* %r3.global-to-local, align 4
  store i32 %v7_93e8, i32* %ip.global-to-local, align 4
  %v1_93f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_93f4 = add i32 %v1_93f4, %v3_93ec
  store i32 %v2_93f4, i32* %r2.global-to-local, align 4
  %v0_93f8 = load i32, i32* %r5.global-to-local, align 4
  %v5_93f8 = mul nuw nsw i32 %v3_93ec, 4
  %v6_93f8 = add i32 %v5_93f8, %v7_93e8
  %v7_93f8 = inttoptr i32 %v6_93f8 to i32*
  store i32 %v0_93f8, i32* %v7_93f8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_9400 = load i32, i32* %r7.global-to-local, align 4
  %v0_9404 = load i32, i32* %r2.global-to-local, align 4
  %v1_9404 = trunc i32 %v0_9404 to i8
  %v2_9404 = load i32, i32* %r4.global-to-local, align 4
  %v3_9404 = inttoptr i32 %v2_9404 to i8*
  store i8 %v1_9404, i8* %v3_9404, align 1
  %v0_9408 = load i32, i32* %ip.global-to-local, align 4
  %v1_9408 = load i32, i32* %r6.global-to-local, align 4
  %v2_9408 = inttoptr i32 %v1_9408 to i32*
  store i32 %v0_9408, i32* %v2_9408, align 4
  %v2_940c = call i32* @calloc(i32 %v0_9400, i32 8)
  %v3_940c = ptrtoint i32* %v2_940c to i32
  %v2_9410 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_9410 = zext i8 %v2_9410 to i32
  store i32 ptrtoint (i32* @global_var_bd44.89 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* %r8.global-to-local, align 4
  store i32 %v3_940c, i32* %r5.global-to-local, align 4
  %v3_9420 = mul nuw nsw i32 %v3_9410, 4
  store i32 %v3_9420, i32* %r1.global-to-local, align 4
  %v2_9424 = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 ptrtoint (i32* @global_var_bd44.89 to i32), i32* %v2_940c, align 4
  %v2_942c = load i32, i32* %r5.global-to-local, align 4
  %v3_942c = add i32 %v2_942c, 4
  %v4_942c = inttoptr i32 %v3_942c to i8*
  store i8 8, i8* %v4_942c, align 1
  %v0_9430 = load i32, i32* %r1.global-to-local, align 4
  %v1_9430 = add i32 %v0_9430, 4
  store i32 %v1_9430, i32* %r1.global-to-local, align 4
  %v3_9434 = inttoptr i32 %v2_9424 to i32*
  %v4_9434 = call i32* @realloc(i32* %v3_9434, i32 %v1_9430)
  %v6_9434 = ptrtoint i32* %v4_9434 to i32
  %v2_9438 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_9438 = zext i8 %v2_9438 to i32
  store i32 %v3_9438, i32* %r3.global-to-local, align 4
  store i32 %v6_9434, i32* %ip.global-to-local, align 4
  %v0_9440 = load i32, i32* %r5.global-to-local, align 4
  %v5_9440 = mul nuw nsw i32 %v3_9438, 4
  %v6_9440 = add i32 %v5_9440, %v6_9434
  %v7_9440 = inttoptr i32 %v6_9440 to i32*
  store i32 %v0_9440, i32* %v7_9440, align 4
  %v0_9444 = load i32, i32* %r3.global-to-local, align 4
  %v1_9444 = load i32, i32* %r7.global-to-local, align 4
  %v2_9444 = add i32 %v1_9444, %v0_9444
  store i32 %v2_9444, i32* %r2.global-to-local, align 4
  %v0_9448 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_9448, i32* %r1.global-to-local, align 4
  %v0_9450 = load i32, i32* %ip.global-to-local, align 4
  %v1_9450 = load i32, i32* %r6.global-to-local, align 4
  %v2_9450 = inttoptr i32 %v1_9450 to i32*
  store i32 %v0_9450, i32* %v2_9450, align 4
  %v0_9454 = load i32, i32* %r2.global-to-local, align 4
  %v1_9454 = trunc i32 %v0_9454 to i8
  %v2_9454 = load i32, i32* %r4.global-to-local, align 4
  %v3_9454 = inttoptr i32 %v2_9454 to i8*
  store i8 %v1_9454, i8* %v3_9454, align 1
  %v2_9458 = call i32* @calloc(i32 %v1_9444, i32 %v0_9448)
  %v4_9458 = ptrtoint i32* %v2_9458 to i32
  %v2_945c = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_945c = zext i8 %v2_945c to i32
  store i32 ptrtoint (i32* @global_var_b5c4.91 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_9458, i32* %r5.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_946c = mul nuw nsw i32 %v3_945c, 4
  store i32 %v3_946c, i32* %r1.global-to-local, align 4
  %v2_9470 = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 ptrtoint (i32* @global_var_b5c4.91 to i32), i32* %v2_9458, align 4
  %v0_9478 = load i32, i32* %r3.global-to-local, align 4
  %v1_9478 = trunc i32 %v0_9478 to i8
  %v2_9478 = load i32, i32* %r5.global-to-local, align 4
  %v3_9478 = add i32 %v2_9478, 4
  %v4_9478 = inttoptr i32 %v3_9478 to i8*
  store i8 %v1_9478, i8* %v4_9478, align 1
  %v0_947c = load i32, i32* %r1.global-to-local, align 4
  %v1_947c = add i32 %v0_947c, 4
  store i32 %v1_947c, i32* %r1.global-to-local, align 4
  %v4_9480 = inttoptr i32 %v2_9470 to i32*
  %v5_9480 = call i32* @realloc(i32* %v4_9480, i32 %v1_947c)
  %v7_9480 = ptrtoint i32* %v5_9480 to i32
  %v2_9484 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_9484 = zext i8 %v2_9484 to i32
  store i32 %v3_9484, i32* %r3.global-to-local, align 4
  store i32 %v7_9480, i32* %ip.global-to-local, align 4
  %v0_948c = load i32, i32* %r5.global-to-local, align 4
  %v5_948c = mul nuw nsw i32 %v3_9484, 4
  %v6_948c = add i32 %v5_948c, %v7_9480
  %v7_948c = inttoptr i32 %v6_948c to i32*
  store i32 %v0_948c, i32* %v7_948c, align 4
  %v0_9490 = load i32, i32* %r3.global-to-local, align 4
  %v1_9490 = load i32, i32* %r7.global-to-local, align 4
  %v2_9490 = add i32 %v1_9490, %v0_9490
  store i32 %v2_9490, i32* %r2.global-to-local, align 4
  %v0_9494 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_9494, i32* %r1.global-to-local, align 4
  %v0_949c = load i32, i32* %ip.global-to-local, align 4
  %v1_949c = load i32, i32* %r6.global-to-local, align 4
  %v2_949c = inttoptr i32 %v1_949c to i32*
  store i32 %v0_949c, i32* %v2_949c, align 4
  %v0_94a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_94a0 = trunc i32 %v0_94a0 to i8
  %v2_94a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_94a0 = inttoptr i32 %v2_94a0 to i8*
  store i8 %v1_94a0, i8* %v3_94a0, align 1
  %v2_94a4 = call i32* @calloc(i32 %v1_9490, i32 %v0_9494)
  %v4_94a4 = ptrtoint i32* %v2_94a4 to i32
  %v2_94a8 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_94a8 = zext i8 %v2_94a8 to i32
  store i32 ptrtoint (i32* @global_var_ae08.93 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_94a4, i32* %r5.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_94b8 = mul nuw nsw i32 %v3_94a8, 4
  store i32 %v3_94b8, i32* %r1.global-to-local, align 4
  %v2_94bc = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 ptrtoint (i32* @global_var_ae08.93 to i32), i32* %v2_94a4, align 4
  %v0_94c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_94c4 = trunc i32 %v0_94c4 to i8
  %v2_94c4 = load i32, i32* %r5.global-to-local, align 4
  %v3_94c4 = add i32 %v2_94c4, 4
  %v4_94c4 = inttoptr i32 %v3_94c4 to i8*
  store i8 %v1_94c4, i8* %v4_94c4, align 1
  %v0_94c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_94c8 = add i32 %v0_94c8, 4
  store i32 %v1_94c8, i32* %r1.global-to-local, align 4
  %v4_94cc = inttoptr i32 %v2_94bc to i32*
  %v5_94cc = call i32* @realloc(i32* %v4_94cc, i32 %v1_94c8)
  %v7_94cc = ptrtoint i32* %v5_94cc to i32
  %v2_94d0 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_94d0 = zext i8 %v2_94d0 to i32
  store i32 %v3_94d0, i32* %r3.global-to-local, align 4
  store i32 %v7_94cc, i32* %ip.global-to-local, align 4
  %v0_94d8 = load i32, i32* %r5.global-to-local, align 4
  %v5_94d8 = mul nuw nsw i32 %v3_94d0, 4
  %v6_94d8 = add i32 %v5_94d8, %v7_94cc
  %v7_94d8 = inttoptr i32 %v6_94d8 to i32*
  store i32 %v0_94d8, i32* %v7_94d8, align 4
  %v0_94dc = load i32, i32* %r3.global-to-local, align 4
  %v1_94dc = load i32, i32* %r7.global-to-local, align 4
  %v2_94dc = add i32 %v1_94dc, %v0_94dc
  store i32 %v2_94dc, i32* %r2.global-to-local, align 4
  %v0_94e0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_94e0, i32* %r1.global-to-local, align 4
  %v0_94e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_94e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_94e8 = inttoptr i32 %v1_94e8 to i32*
  store i32 %v0_94e8, i32* %v2_94e8, align 4
  %v0_94ec = load i32, i32* %r2.global-to-local, align 4
  %v1_94ec = trunc i32 %v0_94ec to i8
  %v2_94ec = load i32, i32* %r4.global-to-local, align 4
  %v3_94ec = inttoptr i32 %v2_94ec to i8*
  store i8 %v1_94ec, i8* %v3_94ec, align 1
  %v2_94f0 = call i32* @calloc(i32 %v1_94dc, i32 %v0_94e0)
  %v4_94f0 = ptrtoint i32* %v2_94f0 to i32
  %v2_94f4 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_94f4 = zext i8 %v2_94f4 to i32
  store i32 ptrtoint (i32* @global_var_a4dc.95 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_94f0, i32* %r5.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_9504 = mul nuw nsw i32 %v3_94f4, 4
  store i32 %v3_9504, i32* %r1.global-to-local, align 4
  %v2_9508 = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 ptrtoint (i32* @global_var_a4dc.95 to i32), i32* %v2_94f0, align 4
  %v0_9510 = load i32, i32* %r3.global-to-local, align 4
  %v1_9510 = trunc i32 %v0_9510 to i8
  %v2_9510 = load i32, i32* %r5.global-to-local, align 4
  %v3_9510 = add i32 %v2_9510, 4
  %v4_9510 = inttoptr i32 %v3_9510 to i8*
  store i8 %v1_9510, i8* %v4_9510, align 1
  %v0_9514 = load i32, i32* %r1.global-to-local, align 4
  %v1_9514 = add i32 %v0_9514, 4
  store i32 %v1_9514, i32* %r1.global-to-local, align 4
  %v4_9518 = inttoptr i32 %v2_9508 to i32*
  %v5_9518 = call i32* @realloc(i32* %v4_9518, i32 %v1_9514)
  %v7_9518 = ptrtoint i32* %v5_9518 to i32
  %v2_951c = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_951c = zext i8 %v2_951c to i32
  store i32 %v3_951c, i32* %r3.global-to-local, align 4
  store i32 %v7_9518, i32* %ip.global-to-local, align 4
  %v0_9524 = load i32, i32* %r5.global-to-local, align 4
  %v5_9524 = mul nuw nsw i32 %v3_951c, 4
  %v6_9524 = add i32 %v5_9524, %v7_9518
  %v7_9524 = inttoptr i32 %v6_9524 to i32*
  store i32 %v0_9524, i32* %v7_9524, align 4
  %v0_9528 = load i32, i32* %r3.global-to-local, align 4
  %v1_9528 = load i32, i32* %r7.global-to-local, align 4
  %v2_9528 = add i32 %v1_9528, %v0_9528
  store i32 %v2_9528, i32* %r2.global-to-local, align 4
  %v0_952c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_952c, i32* %r1.global-to-local, align 4
  %v0_9534 = load i32, i32* %ip.global-to-local, align 4
  %v1_9534 = load i32, i32* %r6.global-to-local, align 4
  %v2_9534 = inttoptr i32 %v1_9534 to i32*
  store i32 %v0_9534, i32* %v2_9534, align 4
  %v0_9538 = load i32, i32* %r2.global-to-local, align 4
  %v1_9538 = trunc i32 %v0_9538 to i8
  %v2_9538 = load i32, i32* %r4.global-to-local, align 4
  %v3_9538 = inttoptr i32 %v2_9538 to i8*
  store i8 %v1_9538, i8* %v3_9538, align 1
  %v2_953c = call i32* @calloc(i32 %v1_9528, i32 %v0_952c)
  %v4_953c = ptrtoint i32* %v2_953c to i32
  %v2_9540 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_9540 = zext i8 %v2_9540 to i32
  store i32 ptrtoint (i32* @global_var_9da4.97 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_953c, i32* %r5.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_9550 = mul nuw nsw i32 %v3_9540, 4
  store i32 %v3_9550, i32* %r1.global-to-local, align 4
  %v2_9554 = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 ptrtoint (i32* @global_var_9da4.97 to i32), i32* %v2_953c, align 4
  %v0_955c = load i32, i32* %r3.global-to-local, align 4
  %v1_955c = trunc i32 %v0_955c to i8
  %v2_955c = load i32, i32* %r5.global-to-local, align 4
  %v3_955c = add i32 %v2_955c, 4
  %v4_955c = inttoptr i32 %v3_955c to i8*
  store i8 %v1_955c, i8* %v4_955c, align 1
  %v0_9560 = load i32, i32* %r1.global-to-local, align 4
  %v1_9560 = add i32 %v0_9560, 4
  store i32 %v1_9560, i32* %r1.global-to-local, align 4
  %v4_9564 = inttoptr i32 %v2_9554 to i32*
  %v5_9564 = call i32* @realloc(i32* %v4_9564, i32 %v1_9560)
  %v7_9564 = ptrtoint i32* %v5_9564 to i32
  %v2_9568 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_9568 = zext i8 %v2_9568 to i32
  store i32 %v3_9568, i32* %r3.global-to-local, align 4
  store i32 %v7_9564, i32* %ip.global-to-local, align 4
  %v0_9570 = load i32, i32* %r5.global-to-local, align 4
  %v5_9570 = mul nuw nsw i32 %v3_9568, 4
  %v6_9570 = add i32 %v5_9570, %v7_9564
  %v7_9570 = inttoptr i32 %v6_9570 to i32*
  store i32 %v0_9570, i32* %v7_9570, align 4
  %v0_9574 = load i32, i32* %r3.global-to-local, align 4
  %v1_9574 = load i32, i32* %r7.global-to-local, align 4
  %v2_9574 = add i32 %v1_9574, %v0_9574
  store i32 %v2_9574, i32* %r2.global-to-local, align 4
  %v0_9578 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_9578, i32* %r1.global-to-local, align 4
  %v1_9580 = trunc i32 %v2_9574 to i8
  %v2_9580 = load i32, i32* %r4.global-to-local, align 4
  %v3_9580 = inttoptr i32 %v2_9580 to i8*
  store i8 %v1_9580, i8* %v3_9580, align 1
  %v0_9584 = load i32, i32* %ip.global-to-local, align 4
  %v1_9584 = load i32, i32* %r6.global-to-local, align 4
  %v2_9584 = inttoptr i32 %v1_9584 to i32*
  store i32 %v0_9584, i32* %v2_9584, align 4
  %v2_9588 = call i32* @calloc(i32 %v1_9574, i32 %v0_9578)
  %v4_9588 = ptrtoint i32* %v2_9588 to i32
  %v2_958c = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_958c = zext i8 %v2_958c to i32
  store i32 ptrtoint (i32* @global_var_95fc.99 to i32), i32* %r2.global-to-local, align 4
  store i32 %v4_9588, i32* %r5.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_959c = mul nuw nsw i32 %v3_958c, 4
  store i32 %v3_959c, i32* %r1.global-to-local, align 4
  %v2_95a0 = load i32, i32* @global_var_1b9c0.78, align 4
  store i32 ptrtoint (i32* @global_var_95fc.99 to i32), i32* %v2_9588, align 4
  %v0_95a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_95a8 = trunc i32 %v0_95a8 to i8
  %v2_95a8 = load i32, i32* %r5.global-to-local, align 4
  %v3_95a8 = add i32 %v2_95a8, 4
  %v4_95a8 = inttoptr i32 %v3_95a8 to i8*
  store i8 %v1_95a8, i8* %v4_95a8, align 1
  %v0_95ac = load i32, i32* %r1.global-to-local, align 4
  %v1_95ac = add i32 %v0_95ac, 4
  store i32 %v1_95ac, i32* %r1.global-to-local, align 4
  %v4_95b0 = inttoptr i32 %v2_95a0 to i32*
  %v5_95b0 = call i32* @realloc(i32* %v4_95b0, i32 %v1_95ac)
  %v6_95b0 = ptrtoint i32* %v5_95b0 to i32
  %v2_95b4 = load i8, i8* bitcast (i8** @global_var_1b9bc.76 to i8*), align 4
  %v3_95b4 = zext i8 %v2_95b4 to i32
  store i32 %v3_95b4, i32* %r3.global-to-local, align 4
  %v1_95b8 = load i32, i32* %r6.global-to-local, align 4
  %v2_95b8 = inttoptr i32 %v1_95b8 to i32*
  store i32 %v6_95b0, i32* %v2_95b8, align 4
  %v0_95bc = load i32, i32* %r5.global-to-local, align 4
  %v2_95bc = load i32, i32* %r3.global-to-local, align 4
  %v5_95bc = mul i32 %v2_95bc, 4
  %v6_95bc = add i32 %v5_95bc, %v6_95b0
  %v7_95bc = inttoptr i32 %v6_95bc to i32*
  store i32 %v0_95bc, i32* %v7_95bc, align 4
  %v0_95c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_95c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_95c0 = add i32 %v1_95c0, %v0_95c0
  store i32 %v2_95c0, i32* %r2.global-to-local, align 4
  %v1_95c8 = trunc i32 %v2_95c0 to i8
  %v2_95c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_95c8 = inttoptr i32 %v2_95c8 to i8*
  store i8 %v1_95c8, i8* %v3_95c8, align 1
  %v2_95cc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_95cc, i32* @r4, align 4
  ret i32 %v1_95c0

; uselistorder directives
  uselistorder i32 %v1_95c0, { 1, 0 }
  uselistorder i32 %v1_9574, { 1, 0 }
  uselistorder i32 %v1_9528, { 1, 0 }
  uselistorder i32 %v1_94dc, { 1, 0 }
  uselistorder i32 %v1_9490, { 1, 0 }
  uselistorder i32 %v1_9444, { 1, 0 }
  uselistorder i32 %v3_93ec, { 1, 0, 2 }
  uselistorder i32 %v1_93ac, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r7.global-to-local, { 0, 5, 6, 7, 8, 1, 2, 3, 4, 9 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 6, 7, 8, 2, 3, 4, 5, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 6, 7, 8, 2, 3, 4, 5, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %ip.global-to-local, { 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* @global_var_1b9c0.78, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i8* bitcast (i8** @global_var_1b9bc.76 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_95fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_95fc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-50 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_95fc = load i32, i32* @r4, align 4
  %v6_95fc = load i32, i32* @r5, align 4
  %v9_95fc = load i32, i32* @r6, align 4
  %v12_95fc = load i32, i32* @r7, align 4
  %v15_95fc = load i32, i32* @r8, align 4
  %v21_95fc = load i32, i32* @sl, align 4
  %v24_95fc = load i32, i32* @fp, align 4
  %v1_9600 = urem i32 %arg2, 256
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v1_9600, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_961c = urem i32 %arg4, 256
  store i32 %v1_961c, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_962c = call i32* @calloc(i32 %v1_9600, i32 4)
  %v4_962c = ptrtoint i32* %v2_962c to i32
  %v0_9630 = load i32, i32* @r5, align 4
  store i32 %v0_9630, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_963c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_963c, i32* %r3.global-to-local, align 4
  %v0_9640 = load i32, i32* @r4, align 4
  store i32 %v0_9640, i32* %r0.global-to-local, align 4
  %v5_9644 = inttoptr i32 %v0_9630 to i32*
  %v6_9644 = call i32 @function_8fc8(i32 %v0_9640, i32* %v5_9644, i32 2, i32 %v0_963c, i32 %v4_962c)
  %v1_9650 = urem i32 %v6_9644, 256
  store i32 %v1_9650, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_965c = load i32, i32* @r5, align 4
  store i32 %v0_965c, i32* %r1.global-to-local, align 4
  %v0_9660 = load i32, i32* @r4, align 4
  store i32 %v0_9660, i32* %r0.global-to-local, align 4
  %v5_9664 = trunc i32 %v6_9644 to i8
  %v6_9668 = inttoptr i32 %v0_965c to i32*
  %v7_9668 = call i32 @function_8fc8(i32 %v0_9660, i32* %v6_9668, i32 3, i32 65535, i32 %v6_9644)
  %v0_966c = load i32, i32* @r5, align 4
  store i32 %v0_966c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9668, i32* @r7, align 4
  %v0_967c = load i32, i32* @r4, align 4
  store i32 %v0_967c, i32* %r0.global-to-local, align 4
  %v5_9680 = inttoptr i32 %v0_966c to i32*
  %v6_9680 = call i32 @function_8fc8(i32 %v0_967c, i32* %v5_9680, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_9688 = urem i32 %v6_9680, 256
  store i32 %v1_9688, i32* %ip.global-to-local, align 4
  %v0_968c = load i32, i32* @r5, align 4
  store i32 %v0_968c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9698 = load i32, i32* @r4, align 4
  store i32 %v0_9698, i32* %r0.global-to-local, align 4
  %v5_969c = trunc i32 %v6_9680 to i8
  %v6_96a0 = inttoptr i32 %v0_968c to i32*
  %v7_96a0 = call i32 @function_8fc8(i32 %v0_9698, i32* %v6_96a0, i32 5, i32 1, i32 %v6_9680)
  %v1_96ac = urem i32 %v7_96a0, 256
  store i32 %v1_96ac, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_96b8 = load i32, i32* @r5, align 4
  store i32 %v0_96b8, i32* %r1.global-to-local, align 4
  %v0_96bc = load i32, i32* @r4, align 4
  store i32 %v0_96bc, i32* %r0.global-to-local, align 4
  %v5_96c4 = inttoptr i32 %v0_96b8 to i32*
  %v6_96c4 = call i32 @function_8fc8(i32 %v0_96bc, i32* %v5_96c4, i32 6, i32 65535, i32 %v1_96ac)
  %v0_96d0 = load i32, i32* @r5, align 4
  store i32 %v0_96d0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_96dc = load i32, i32* @r4, align 4
  store i32 %v0_96dc, i32* %r0.global-to-local, align 4
  %v5_96e0 = inttoptr i32 %v0_96d0 to i32*
  %v6_96e0 = call i32 @function_8fc8(i32 %v0_96dc, i32* %v5_96e0, i32 7, i32 65535, i32 %v6_96c4)
  %v0_96e4 = load i32, i32* @r5, align 4
  store i32 %v0_96e4, i32* %r1.global-to-local, align 4
  %v0_96e8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_96e8, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_96e0, i32* @sl, align 4
  %v0_96f4 = load i32, i32* @r4, align 4
  store i32 %v0_96f4, i32* %r0.global-to-local, align 4
  %v5_96f8 = inttoptr i32 %v0_96e4 to i32*
  %v6_96f8 = call i32 @function_8fc8(i32 %v0_96f4, i32* %v5_96f8, i32 %v0_96e8, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9708 = load i32, i32* @r5, align 4
  store i32 %v0_9708, i32* %r1.global-to-local, align 4
  %v0_970c = load i32, i32* @r4, align 4
  store i32 %v0_970c, i32* %r0.global-to-local, align 4
  %v5_9710 = inttoptr i32 %v0_9708 to i32*
  %v6_9710 = call i32 @function_8fc8(i32 %v0_970c, i32* %v5_9710, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9718 = urem i32 %v6_9710, 256
  store i32 %v1_9718, i32* %ip.global-to-local, align 4
  %v0_971c = load i32, i32* @r5, align 4
  store i32 %v0_971c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_9724 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9724, i32* %r3.global-to-local, align 4
  %v0_9728 = load i32, i32* @r4, align 4
  store i32 %v0_9728, i32* %r0.global-to-local, align 4
  %v5_9730 = inttoptr i32 %v0_971c to i32*
  %v6_9730 = call i32 @function_8fc8(i32 %v0_9728, i32* %v5_9730, i32 18, i32 %v0_9724, i32 %v1_9718)
  %v0_9738 = load i32, i32* @r5, align 4
  store i32 %v0_9738, i32* %r1.global-to-local, align 4
  %v2_973c = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_973c, i32* %r3.global-to-local, align 4
  store i32 %v6_9730, i32* @r8, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_9748 = load i32, i32* @r4, align 4
  store i32 %v0_9748, i32* %r0.global-to-local, align 4
  %v5_974c = inttoptr i32 %v0_9738 to i32*
  %v6_974c = call i32 @function_8fc8(i32 %v0_9748, i32* %v5_974c, i32 19, i32 %v2_973c, i32 ptrtoint (i32* @0 to i32))
  %v0_9754 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9754, i32* %r0.global-to-local, align 4
  %v1_9758 = inttoptr i32 %v0_9754 to i32*
  %v2_9758 = call i32 @time(i32* %v1_9758)
  %v1_975c = load i32, i32* @r6, align 4
  %v2_975c = add i32 %v1_975c, %v2_9758
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9770 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_9770, i32* %r0.global-to-local, align 4
  %v2_9774 = icmp eq i32 %v3_9770, -1
  store i1 %v2_9774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9774, label %dec_label_pc_9d8c, label %dec_label_pc_9780

dec_label_pc_9780:                                ; preds = %dec_label_pc_95fc
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9788 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9788, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_9790 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9790, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_979c = call i32 @setsockopt(i32 %v3_9770, i32 %v0_9790, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_979c, i32* %r0.global-to-local, align 4
  %v2_97a0 = icmp eq i32 %v7_979c, -1
  store i1 %v2_97a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_97a0, label %dec_label_pc_9d94, label %dec_label_pc_97a8

dec_label_pc_97a8:                                ; preds = %dec_label_pc_9780
  %v0_97b4 = load i32, i32* @sl, align 4
  %v3_97b4 = mul i32 %v0_97b4, 65536
  store i32 %v3_97b4, i32* %sl.global-to-local, align 4
  %v0_97b8 = load i32, i32* @r7, align 4
  %v3_97b8 = mul i32 %v0_97b8, 65536
  store i32 %v3_97b8, i32* %r7.global-to-local, align 4
  %v2_97c0 = icmp eq i32 %v1_9600, 0
  store i1 %v2_97c0, i1* %cpsr_z.global-to-local, align 1
  %v0_97c4 = load i32, i32* @r8, align 4
  %v1_97c4 = urem i32 %v0_97c4, 256
  store i32 %v1_97c4, i32* %r8.global-to-local, align 4
  %v3_97c8 = urem i32 %v0_97b8, 65536
  store i32 %v3_97c8, i32* %r3.global-to-local, align 4
  %v3_97cc = urem i32 %v6_96c4, 65536
  store i32 %v3_97cc, i32* %r1.global-to-local, align 4
  %v3_97d0 = urem i32 %v0_97b4, 65536
  store i32 %v3_97d0, i32* %r2.global-to-local, align 4
  %v0_97dc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_97dc, i32* %stack_var_-40, align 4
  br i1 %v2_97c0, label %dec_label_pc_9a70.preheader, label %dec_label_pc_97f0

dec_label_pc_97f0:                                ; preds = %dec_label_pc_97a8
  %v3_97f8 = mul i32 %v6_96f8, 65536
  %v1_9800 = urem i32 %v6_96c4, 256
  %v1_9808 = add i32 %v3_97f8, 524288
  %v1_980c = add i32 %v3_97f8, 4325376
  %v1_9810 = urem i32 %v0_97b4, 256
  %v1_9814 = add i32 %v3_97f8, 1835008
  %v0_97b8.not = or i32 %v0_97b8, -65536
  %v1_981c = xor i32 %v0_97b8.not, 65535
  %v3_9820 = udiv i32 %v1_9814, 256
  %tmp83 = udiv i32 %v0_97b8, 256
  %v1_9834 = and i32 %v3_9820, 65280
  store i32 %v1_9834, i32* %r0.global-to-local, align 4
  %v3_9858 = mul nuw nsw i32 %v1_9800, 256
  %tmp84 = udiv i32 %v6_96c4, 256
  %v4_9860 = urem i32 %tmp84, 256
  %v5_9860 = or i32 %v4_9860, %v3_9858
  store i32 %v5_9860, i32* %lr.global-to-local, align 4
  %tmp85 = mul nsw i32 %v1_981c, 256
  %v3_9868 = mul nuw nsw i32 %v1_9810, 256
  %sext24 = mul i32 %tmp83, 16777216
  %v4_9870 = sdiv i32 %sext24, 16777216
  %v4_9838 = sdiv i32 %v1_980c, 16777216
  %tmp86 = udiv i32 %v0_97b4, 256
  %v4_9878 = urem i32 %tmp86, 256
  %v5_9878 = or i32 %v4_9878, %v3_9868
  store i32 %v5_9878, i32* %r7.global-to-local, align 4
  %v1_987c = and i32 %tmp85, 65280
  store i32 %v1_987c, i32* %ip.global-to-local, align 4
  %v4_9880 = sdiv i32 %v1_9814, 16777216
  %v3_9884 = udiv i32 %v1_9808, 256
  %tmp87 = udiv i32 %v1_981c, 256
  %v4_9888 = urem i32 %tmp87, 256
  %v5_9888 = or i32 %v4_9888, %v1_987c
  store i32 %v5_9888, i32* %r6.global-to-local, align 4
  %v3_988c = ashr i32 %v1_980c, 31
  %v3_9890 = ashr i32 %sext24, 31
  %v1_9894 = and i32 %v3_9884, 65280
  store i32 %v1_9894, i32* %r5.global-to-local, align 4
  %v3_98a0 = ashr i32 %v1_9814, 31
  store i32 %v3_98a0, i32* %r2.global-to-local, align 4
  %v3_98a433 = udiv i32 %v1_987c, 256
  store i32 %v3_98a433, i32* %r3.global-to-local, align 4
  store i32 %v1_9800, i32* %r1.global-to-local, align 4
  %v4_98ac = udiv i32 %v1_9808, 16777216
  %v5_98ac = or i32 %v4_98ac, %v1_9894
  store i32 %v5_98ac, i32* %r8.global-to-local, align 4
  %v5_98b0 = trunc i32 %tmp87 to i8
  store i32 %v0_97dc, i32* %r4.global-to-local, align 4
  %v3_98c834 = udiv i32 %v1_9894, 256
  store i32 %v3_98c834, i32* %sl.global-to-local, align 4
  store i32 %v1_9810, i32* %fp.global-to-local, align 4
  %sext16 = mul i32 %v1_981c, 16777216
  %v4_99ec = sdiv i32 %sext16, 16777216
  %v2_9a1c = icmp eq i32 %v1_97c4, 0
  %sext17 = mul i32 %v6_96c4, 16777216
  %v4_9a30 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %tmp84, 16777216
  %v4_9a4c = sdiv i32 %sext18, 16777216
  %v1_9934 = trunc i32 %v4_9870 to i8
  br label %dec_label_pc_98d0

dec_label_pc_98d0:                                ; preds = %bb98, %dec_label_pc_97f0
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_98dc = call i32* @calloc(i32 1510, i32 4)
  %v4_98dc = ptrtoint i32* %v2_98dc to i32
  store i32 %v4_98dc, i32* %r0.global-to-local, align 4
  store i32 %v4_962c, i32* %r2.global-to-local, align 4
  %v3_98e4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_98e4, i32* %r3.global-to-local, align 4
  %v2_98e8 = load i32, i32* %r4.global-to-local, align 4
  %v5_98e8 = mul i32 %v2_98e8, 4
  %v6_98e8 = add i32 %v5_98e8, %v4_962c
  %v7_98e8 = inttoptr i32 %v6_98e8 to i32*
  store i32 %v4_98dc, i32* %v7_98e8, align 4
  %v0_98ec = load i32, i32* %r2.global-to-local, align 4
  %v1_98ec = load i32, i32* %r3.global-to-local, align 4
  %v4_98ec = mul i32 %v1_98ec, 4
  %v5_98ec = add i32 %v4_98ec, %v0_98ec
  %v6_98ec = inttoptr i32 %v5_98ec to i32*
  %v7_98ec = load i32, i32* %v6_98ec, align 4
  store i32 %v7_98ec, i32* %r4.global-to-local, align 4
  %v1_98f0 = inttoptr i32 %v7_98ec to i8*
  %v2_98f0 = load i8, i8* %v1_98f0, align 1
  %tmp = urem i8 %v2_98f0, 16
  %v1_98f4 = zext i8 %tmp to i32
  %v1_98f8 = or i32 %v1_98f4, 64
  store i32 %v1_98f8, i32* %r2.global-to-local, align 4
  %v1_98fc = trunc i32 %v1_98f8 to i8
  store i8 %v1_98fc, i8* %v1_98f0, align 1
  %v0_9900 = load i32, i32* %r4.global-to-local, align 4
  %v1_9900 = inttoptr i32 %v0_9900 to i8*
  %v2_9900 = load i8, i8* %v1_9900, align 1
  %v1_9904 = and i8 %v2_9900, -16
  %v1_9908 = or i8 %v1_9904, 5
  store i32 %v1_96ac, i32* %r1.global-to-local, align 4
  store i8 %v1_9908, i8* %v1_9900, align 1
  %v2_9918 = load i32, i32* %r4.global-to-local, align 4
  %v3_9918 = add i32 %v2_9918, 1
  %v4_9918 = inttoptr i32 %v3_9918 to i8*
  store i8 %v5_9664, i8* %v4_9918, align 1
  %v2_9920 = load i32, i32* %r4.global-to-local, align 4
  %v3_9920 = add i32 %v2_9920, 8
  %v4_9920 = inttoptr i32 %v3_9920 to i8*
  store i8 %v5_969c, i8* %v4_9920, align 1
  store i32 %v4_9870, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_992c = load i32, i32* %r1.global-to-local, align 4
  %v9_992c = icmp eq i32 %v0_992c, 0
  store i1 %v9_992c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_988c, i32* %r2.global-to-local, align 4
  %v2_9934 = load i32, i32* %r4.global-to-local, align 4
  %v3_9934 = add i32 %v2_9934, 4
  %v4_9934 = inttoptr i32 %v3_9934 to i8*
  store i8 %v1_9934, i8* %v4_9934, align 1
  store i32 %v4_9838, i32* %r1.global-to-local, align 4
  %v0_993c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_993c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_98d0
  %v1_993c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_993c, i32* %r3.global-to-local, align 4
  %v2_9940 = trunc i32 %v1_993c to i8
  %v3_9940 = load i32, i32* %r4.global-to-local, align 4
  %v4_9940 = add i32 %v3_9940, 7
  %v5_9940 = inttoptr i32 %v4_9940 to i8*
  store i8 %v2_9940, i8* %v5_9940, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_98d0, %bb
  store i32 47, i32* %r3.global-to-local, align 4
  %v0_9948 = load i32, i32* %r2.global-to-local, align 4
  %v1_9948 = trunc i32 %v0_9948 to i8
  %v2_9948 = load i32, i32* %r4.global-to-local, align 4
  %v3_9948 = add i32 %v2_9948, 3
  %v4_9948 = inttoptr i32 %v3_9948 to i8*
  store i8 %v1_9948, i8* %v4_9948, align 1
  %v0_994c = load i32, i32* %r1.global-to-local, align 4
  %v1_994c = trunc i32 %v0_994c to i8
  %v2_994c = load i32, i32* %r4.global-to-local, align 4
  %v3_994c = add i32 %v2_994c, 2
  %v4_994c = inttoptr i32 %v3_994c to i8*
  store i8 %v1_994c, i8* %v4_994c, align 1
  %v0_9950 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9950, label %bb89, label %bb88

bb88:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb89

bb89:                                             ; preds = %.thread, %bb88
  store i32 %v3_9890, i32* %r1.global-to-local, align 4
  %v0_9958 = load i32, i32* %r3.global-to-local, align 4
  %v1_9958 = trunc i32 %v0_9958 to i8
  %v2_9958 = load i32, i32* %r4.global-to-local, align 4
  %v3_9958 = add i32 %v2_9958, 9
  %v4_9958 = inttoptr i32 %v3_9958 to i8*
  store i8 %v1_9958, i8* %v4_9958, align 1
  %v0_995c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_995c, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v1_995c = load i32, i32* %r2.global-to-local, align 4
  %v2_995c = trunc i32 %v1_995c to i8
  %v3_995c = load i32, i32* %r4.global-to-local, align 4
  %v4_995c = add i32 %v3_995c, 6
  %v5_995c = inttoptr i32 %v4_995c to i8*
  store i8 %v2_995c, i8* %v5_995c, align 1
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v3_9960 = load i32, i32* %stack_var_-40, align 4
  %v5_9968 = mul i32 %v3_9960, 24
  store i32 %v5_9968, i32* %r3.global-to-local, align 4
  store i32 %v6_974c, i32* %r2.global-to-local, align 4
  %v1_9970 = load i32, i32* %r4.global-to-local, align 4
  %v2_9970 = add i32 %v1_9970, 12
  %v3_9970 = inttoptr i32 %v2_9970 to i32*
  store i32 %v6_974c, i32* %v3_9970, align 4
  %v0_9974 = load i32, i32* %r3.global-to-local, align 4
  %v1_9974 = load i32, i32* @sb, align 4
  %v2_9974 = add i32 %v1_9974, %v0_9974
  store i32 %v2_9974, i32* %r3.global-to-local, align 4
  %v1_9978 = add i32 %v2_9974, 16
  %v2_9978 = inttoptr i32 %v1_9978 to i32*
  %v3_9978 = load i32, i32* %v2_9978, align 4
  store i32 %v3_9978, i32* %r2.global-to-local, align 4
  %v0_997c = load i32, i32* %r1.global-to-local, align 4
  %v1_997c = trunc i32 %v0_997c to i8
  %v2_997c = load i32, i32* %r4.global-to-local, align 4
  %v3_997c = add i32 %v2_997c, 5
  %v4_997c = inttoptr i32 %v3_997c to i8*
  store i8 %v1_997c, i8* %v4_997c, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v0_9984 = load i32, i32* %r4.global-to-local, align 4
  %v1_9984 = add i32 %v0_9984, 20
  store i32 %v1_9984, i32* %r1.global-to-local, align 4
  %v3_9988 = add i32 %v0_9984, 22
  %v4_9988 = inttoptr i32 %v3_9988 to i8*
  store i8 101, i8* %v4_9988, align 1
  %v0_998c = load i32, i32* %r2.global-to-local, align 4
  %v1_998c = load i32, i32* %r4.global-to-local, align 4
  %v2_998c = add i32 %v1_998c, 16
  %v3_998c = inttoptr i32 %v2_998c to i32*
  store i32 %v0_998c, i32* %v3_998c, align 4
  %v0_9990 = load i32, i32* %r4.global-to-local, align 4
  %v1_9990 = add i32 %v0_9990, 24
  store i32 %v1_9990, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_9998 = load i32, i32* %r3.global-to-local, align 4
  %v1_9998 = add i32 %v0_9998, -93
  store i32 %v1_9998, i32* %r3.global-to-local, align 4
  %v2_999c = load i32, i32* %r1.global-to-local, align 4
  %v3_999c = add i32 %v2_999c, 3
  %v4_999c = inttoptr i32 %v3_999c to i8*
  store i8 88, i8* %v4_999c, align 1
  %v0_99a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_99a0 = trunc i32 %v0_99a0 to i8
  %v2_99a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_99a0 = add i32 %v2_99a0, 12
  %v4_99a0 = inttoptr i32 %v3_99a0 to i8*
  store i8 %v1_99a0, i8* %v4_99a0, align 1
  %v0_99a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_99a4 = trunc i32 %v0_99a4 to i8
  %v2_99a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_99a4 = add i32 %v2_99a4, 13
  %v4_99a4 = inttoptr i32 %v3_99a4 to i8*
  store i8 %v1_99a4, i8* %v4_99a4, align 1
  %v0_99a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_99a8 = add i32 %v0_99a8, 38
  %v2_99a8 = inttoptr i32 %v1_99a8 to i8*
  %v3_99a8 = load i8, i8* %v2_99a8, align 1
  %tmp104 = urem i8 %v3_99a8, 16
  %v1_99ac = zext i8 %tmp104 to i32
  %v1_99b0 = or i32 %v1_99ac, 64
  store i32 %v1_99b0, i32* %r3.global-to-local, align 4
  %v1_99b4 = trunc i32 %v1_99b0 to i8
  store i8 %v1_99b4, i8* %v2_99a8, align 1
  %v0_99b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_99b8 = add i32 %v0_99b8, 38
  %v2_99b8 = inttoptr i32 %v1_99b8 to i8*
  %v3_99b8 = load i8, i8* %v2_99b8, align 1
  %v1_99bc = and i8 %v3_99b8, -16
  %v1_99c0 = or i8 %v1_99bc, 5
  store i8 %v1_99c0, i8* %v2_99b8, align 1
  %v0_99cc = load i32, i32* %r4.global-to-local, align 4
  %v1_99cc = add i32 %v0_99cc, 38
  store i32 %v1_99cc, i32* %r5.global-to-local, align 4
  %v3_99d0 = add i32 %v0_99cc, 39
  %v4_99d0 = inttoptr i32 %v3_99d0 to i8*
  store i8 %v5_9664, i8* %v4_99d0, align 1
  store i32 %v4_9880, i32* %r1.global-to-local, align 4
  store i32 %tmp87, i32* %r3.global-to-local, align 4
  store i32 %v3_98a0, i32* %r2.global-to-local, align 4
  %v2_99e0 = load i32, i32* %r5.global-to-local, align 4
  %v3_99e0 = add i32 %v2_99e0, 4
  %v4_99e0 = inttoptr i32 %v3_99e0 to i8*
  store i8 %v5_98b0, i8* %v4_99e0, align 1
  %v0_99e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_99e4 = trunc i32 %v0_99e4 to i8
  %v2_99e4 = load i32, i32* %r5.global-to-local, align 4
  %v3_99e4 = add i32 %v2_99e4, 2
  %v4_99e4 = inttoptr i32 %v3_99e4 to i8*
  store i8 %v1_99e4, i8* %v4_99e4, align 1
  %v0_99e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_99e8, label %bb93, label %bb92

bb92:                                             ; preds = %bb91
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb93

bb93:                                             ; preds = %bb91, %bb92
  store i32 %v4_99ec, i32* %r1.global-to-local, align 4
  %v0_99f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_99f0 = trunc i32 %v0_99f0 to i8
  %v2_99f0 = load i32, i32* %r5.global-to-local, align 4
  %v3_99f0 = add i32 %v2_99f0, 3
  %v4_99f0 = inttoptr i32 %v3_99f0 to i8*
  store i8 %v1_99f0, i8* %v4_99f0, align 1
  store i32 %v6_9680, i32* %r2.global-to-local, align 4
  %v0_99f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_99f8, label %bb95, label %bb94

bb94:                                             ; preds = %bb93
  %v1_99f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_99f8 = trunc i32 %v1_99f8 to i8
  %v3_99f8 = load i32, i32* %r5.global-to-local, align 4
  %v4_99f8 = add i32 %v3_99f8, 6
  %v5_99f8 = inttoptr i32 %v4_99f8 to i8*
  store i8 %v2_99f8, i8* %v5_99f8, align 1
  br label %bb95

bb95:                                             ; preds = %bb93, %bb94
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_9a00 = load i32, i32* %r1.global-to-local, align 4
  %v1_9a00 = trunc i32 %v0_9a00 to i8
  %v2_9a00 = load i32, i32* %r5.global-to-local, align 4
  %v3_9a00 = add i32 %v2_9a00, 5
  %v4_9a00 = inttoptr i32 %v3_9a00 to i8*
  store i8 %v1_9a00, i8* %v4_9a00, align 1
  %v0_9a04 = load i32, i32* %r2.global-to-local, align 4
  %v1_9a04 = trunc i32 %v0_9a04 to i8
  %v2_9a04 = load i32, i32* %r5.global-to-local, align 4
  %v3_9a04 = add i32 %v2_9a04, 8
  %v4_9a04 = inttoptr i32 %v3_9a04 to i8*
  store i8 %v1_9a04, i8* %v4_9a04, align 1
  %v0_9a08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9a08, label %bb97, label %bb96

bb96:                                             ; preds = %bb95
  %v1_9a08 = load i32, i32* %ip.global-to-local, align 4
  %v2_9a08 = trunc i32 %v1_9a08 to i8
  %v3_9a08 = load i32, i32* %r5.global-to-local, align 4
  %v4_9a08 = add i32 %v3_9a08, 7
  %v5_9a08 = inttoptr i32 %v4_9a08 to i8*
  store i8 %v2_9a08, i8* %v5_9a08, align 1
  br label %bb97

bb97:                                             ; preds = %bb95, %bb96
  %v0_9a0c = load i32, i32* %r3.global-to-local, align 4
  %v1_9a0c = trunc i32 %v0_9a0c to i8
  %v2_9a0c = load i32, i32* %r5.global-to-local, align 4
  %v3_9a0c = add i32 %v2_9a0c, 9
  %v4_9a0c = inttoptr i32 %v3_9a0c to i8*
  store i8 %v1_9a0c, i8* %v4_9a0c, align 1
  %v0_9a10 = call i32 @function_ef90()
  store i32 %v0_9a10, i32* %r0.global-to-local, align 4
  store i32 %v1_97c4, i32* %r1.global-to-local, align 4
  store i1 %v2_9a1c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a20 = sub i32 1023, %v0_9a10
  store i32 %v1_9a20, i32* %r3.global-to-local, align 4
  br i1 %v2_9a1c, label %.thread19, label %.thread20

.thread19:                                        ; preds = %bb97
  %v2_9a28 = load i32, i32* %r5.global-to-local, align 4
  %v3_9a28 = add i32 %v2_9a28, 16
  %v4_9a28 = inttoptr i32 %v3_9a28 to i32*
  store i32 %v1_9a20, i32* %v4_9a28, align 4
  br label %bb98

.thread20:                                        ; preds = %bb97
  %v1_9a24 = load i32, i32* %r4.global-to-local, align 4
  %v2_9a24 = add i32 %v1_9a24, 16
  %v3_9a24 = inttoptr i32 %v2_9a24 to i32*
  %v4_9a24 = load i32, i32* %v3_9a24, align 4
  store i32 %v4_9a24, i32* %r3.global-to-local, align 4
  %v2_9a2c = load i32, i32* %r5.global-to-local, align 4
  %v3_9a2c = add i32 %v2_9a2c, 16
  %v4_9a2c = inttoptr i32 %v3_9a2c to i32*
  store i32 %v4_9a24, i32* %v4_9a2c, align 4
  br label %bb98

bb98:                                             ; preds = %.thread19, %.thread20
  store i32 %v4_9a30, i32* %r3.global-to-local, align 4
  %v0_9a34 = load i32, i32* %r4.global-to-local, align 4
  %v1_9a34 = add i32 %v0_9a34, 58
  store i32 %v1_9a34, i32* %r6.global-to-local, align 4
  %v1_9a38 = load i32, i32* %r5.global-to-local, align 4
  %v2_9a38 = add i32 %v1_9a38, 12
  %v3_9a38 = inttoptr i32 %v2_9a38 to i32*
  store i32 %v0_9a10, i32* %v3_9a38, align 4
  %v0_9a3c = load i32, i32* %r3.global-to-local, align 4
  %v1_9a3c = trunc i32 %v0_9a3c to i8
  %v2_9a3c = load i32, i32* %r6.global-to-local, align 4
  %v3_9a3c = add i32 %v2_9a3c, 1
  %v4_9a3c = inttoptr i32 %v3_9a3c to i8*
  store i8 %v1_9a3c, i8* %v4_9a3c, align 1
  %v3_9a40 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9a40, i32* %r3.global-to-local, align 4
  store i32 %v1_9600, i32* %r1.global-to-local, align 4
  %v1_9a48 = add i32 %v3_9a40, 1
  store i32 %v1_9a48, i32* %r4.global-to-local, align 4
  store i32 %v4_9a4c, i32* %r2.global-to-local, align 4
  %v9_9a50 = icmp eq i32 %v1_9a48, %v1_9600
  store i1 %v9_9a50, i1* %cpsr_z.global-to-local, align 1
  %v0_9a54 = load i32, i32* %sl.global-to-local, align 4
  %v1_9a54 = trunc i32 %v0_9a54 to i8
  %v2_9a54 = load i32, i32* %r6.global-to-local, align 4
  %v3_9a54 = add i32 %v2_9a54, 5
  %v4_9a54 = inttoptr i32 %v3_9a54 to i8*
  store i8 %v1_9a54, i8* %v4_9a54, align 1
  %v0_9a58 = load i32, i32* %r2.global-to-local, align 4
  %v1_9a58 = trunc i32 %v0_9a58 to i8
  %v2_9a58 = load i32, i32* %r6.global-to-local, align 4
  %v3_9a58 = inttoptr i32 %v2_9a58 to i8*
  store i8 %v1_9a58, i8* %v3_9a58, align 1
  %v0_9a5c = load i32, i32* %r7.global-to-local, align 4
  %v1_9a5c = trunc i32 %v0_9a5c to i8
  %v2_9a5c = load i32, i32* %r6.global-to-local, align 4
  %v3_9a5c = add i32 %v2_9a5c, 2
  %v4_9a5c = inttoptr i32 %v3_9a5c to i8*
  store i8 %v1_9a5c, i8* %v4_9a5c, align 1
  %v0_9a60 = load i32, i32* %fp.global-to-local, align 4
  %v1_9a60 = trunc i32 %v0_9a60 to i8
  %v2_9a60 = load i32, i32* %r6.global-to-local, align 4
  %v3_9a60 = add i32 %v2_9a60, 3
  %v4_9a60 = inttoptr i32 %v3_9a60 to i8*
  store i8 %v1_9a60, i8* %v4_9a60, align 1
  %v0_9a64 = load i32, i32* %r8.global-to-local, align 4
  %v1_9a64 = trunc i32 %v0_9a64 to i8
  %v2_9a64 = load i32, i32* %r6.global-to-local, align 4
  %v3_9a64 = add i32 %v2_9a64, 4
  %v4_9a64 = inttoptr i32 %v3_9a64 to i8*
  store i8 %v1_9a64, i8* %v4_9a64, align 1
  %v0_9a68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_9a68, i32* %stack_var_-40, align 4
  %v5_9a6c = icmp slt i32 %v1_9a48, %v1_9600
  br i1 %v5_9a6c, label %dec_label_pc_98d0, label %dec_label_pc_9a70.preheader

dec_label_pc_9a70.preheader:                      ; preds = %bb98, %dec_label_pc_97a8
  %v1_9a90 = add i32 %v6_96f8, 66
  %v1_9a94 = add i32 %v6_96f8, 8
  %v2_9aa8 = icmp eq i32 %v6_974c, -1
  %v3_9ccc = icmp eq i32 %v3_97c8, 65535
  %v2_9d3c = icmp eq i32 %v1_97c4, 0
  %v2_9b04 = ptrtoint i32* %stack_var_-44 to i32
  %v2_9b1c = ptrtoint i32* %stack_var_-48 to i32
  %v2_9b2c = ptrtoint i32* %stack_var_-52 to i32
  %v2_9b38 = ptrtoint i32* %stack_var_-50 to i32
  %v2_9b4c = icmp eq i32 %v1_9718, 0
  br label %dec_label_pc_9a70

dec_label_pc_9a70:                                ; preds = %dec_label_pc_9a70.preheader, %dec_label_pc_9d78
  store i32 %v1_9600, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_97c0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_97c0, label %dec_label_pc_9d78, label %dec_label_pc_9a84

dec_label_pc_9a84:                                ; preds = %dec_label_pc_9a70
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v6_96f8, i32* %r1.global-to-local, align 4
  store i32 %v1_9a90, i32* @fp, align 4
  store i32 %v1_9a94, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_9c28

dec_label_pc_9aa4:                                ; preds = %dec_label_pc_9c28
  store i32 %v6_974c, i32* %r2.global-to-local, align 4
  store i1 %v2_9aa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9aa8, label %dec_label_pc_9cbc, label %dec_label_pc_9ab0

dec_label_pc_9ab0:                                ; preds = %dec_label_pc_9c54, %dec_label_pc_9aa4
  store i32 %v3_97c8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9ccc, label %dec_label_pc_9cd8, label %dec_label_pc_9ac4

dec_label_pc_9ac4:                                ; preds = %dec_label_pc_9cbc.dec_label_pc_9ac4_crit_edge, %dec_label_pc_9ab0
  %v1_9ac8 = phi i32 [ %v1_9ac8.pre, %dec_label_pc_9cbc.dec_label_pc_9ac4_crit_edge ], [ 65535, %dec_label_pc_9ab0 ]
  store i32 %v3_97cc, i32* %r1.global-to-local, align 4
  %v9_9ac8 = icmp eq i32 %v3_97cc, %v1_9ac8
  store i1 %v9_9ac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9ac8, label %dec_label_pc_9d10, label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9cd8.dec_label_pc_9ad0_crit_edge, %dec_label_pc_9ac4
  %v1_9ad4 = phi i32 [ %v1_9ad4.pre, %dec_label_pc_9cd8.dec_label_pc_9ad0_crit_edge ], [ %v1_9ac8, %dec_label_pc_9ac4 ]
  store i32 %v3_97d0, i32* %r2.global-to-local, align 4
  %v9_9ad4 = icmp eq i32 %v3_97d0, %v1_9ad4
  store i1 %v9_9ad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9ad4, label %dec_label_pc_9d2c, label %dec_label_pc_9adc

dec_label_pc_9adc:                                ; preds = %dec_label_pc_9d10, %dec_label_pc_9ad0
  store i32 %v1_97c4, i32* %r3.global-to-local, align 4
  store i1 %v2_9d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9d3c, label %dec_label_pc_9d50, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_9adc
  %v1_9ae4 = load i32, i32* @r5, align 4
  %v2_9ae4 = add i32 %v1_9ae4, 16
  %v3_9ae4 = inttoptr i32 %v2_9ae4 to i32*
  %v4_9ae4 = load i32, i32* %v3_9ae4, align 4
  store i32 %v4_9ae4, i32* %r3.global-to-local, align 4
  %v2_9ae8 = load i32, i32* @r6, align 4
  %v3_9ae8 = add i32 %v2_9ae8, 16
  %v4_9ae8 = inttoptr i32 %v3_9ae8 to i32*
  store i32 %v4_9ae4, i32* %v4_9ae8, align 4
  br label %dec_label_pc_9af0

dec_label_pc_9af0:                                ; preds = %bb103, %.thread21, %dec_label_pc_9d50
  %v0_9af0 = call i32 @function_ef90()
  store i32 %v0_9af0, i32* %r0.global-to-local, align 4
  store i32 %v0_9af0, i32* %stack_var_-44, align 4
  %v0_9af8 = call i32 @function_ef90()
  store i32 %v0_9af8, i32* %r0.global-to-local, align 4
  store i32 %v0_9af8, i32* %stack_var_-48, align 4
  %v0_9b00 = call i32 @function_ef90()
  store i32 %v2_9b04, i32* %r1.global-to-local, align 4
  store i32 %v0_9b00, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_9b10 = load i32, i32* @r8, align 4
  store i32 %v0_9b10, i32* %r0.global-to-local, align 4
  %v3_9b14 = call i32 @function_127a8(i32 %v0_9b10, i32 %v2_9b04, i32 4)
  %v0_9b18 = load i32, i32* @r8, align 4
  %v1_9b18 = add i32 %v0_9b18, 6
  store i32 %v1_9b18, i32* %r0.global-to-local, align 4
  store i32 %v2_9b1c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_9b24 = call i32 @function_127a8(i32 %v1_9b18, i32 %v2_9b1c, i32 4)
  %v0_9b28 = load i32, i32* @r8, align 4
  %v1_9b28 = add i32 %v0_9b28, 4
  store i32 %v1_9b28, i32* %r0.global-to-local, align 4
  store i32 %v2_9b2c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9b34 = call i32 @function_127a8(i32 %v1_9b28, i32 %v2_9b2c, i32 2)
  store i32 %v2_9b38, i32* %r1.global-to-local, align 4
  %v0_9b3c = load i32, i32* @r8, align 4
  %v1_9b3c = add i32 %v0_9b3c, 10
  store i32 %v1_9b3c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9b44 = call i32 @function_127a8(i32 %v1_9b3c, i32 %v2_9b38, i32 2)
  store i32 %v3_9b44, i32* %r0.global-to-local, align 4
  store i32 %v1_9718, i32* %r1.global-to-local, align 4
  store i1 %v2_9b4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b4c, label %dec_label_pc_9b54, label %dec_label_pc_9d5c

dec_label_pc_9b54:                                ; preds = %dec_label_pc_9af0, %dec_label_pc_9d5c
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9b58 = load i32, i32* @sl, align 4
  %v1_9b58 = trunc i32 %v0_9b58 to i8
  %v2_9b58 = load i32, i32* @r5, align 4
  %v3_9b58 = add i32 %v2_9b58, 10
  %v4_9b58 = inttoptr i32 %v3_9b58 to i8*
  store i8 %v1_9b58, i8* %v4_9b58, align 1
  %v0_9b5c = load i32, i32* @sl, align 4
  %v1_9b5c = trunc i32 %v0_9b5c to i8
  %v2_9b5c = load i32, i32* @r5, align 4
  %v3_9b5c = add i32 %v2_9b5c, 11
  %v4_9b5c = inttoptr i32 %v3_9b5c to i8*
  store i8 %v1_9b5c, i8* %v4_9b5c, align 1
  %v0_9b60 = load i32, i32* @r5, align 4
  store i32 %v0_9b60, i32* @r0, align 4
  %v2_9b64 = call i32 @function_d3d4(i32 %v0_9b60, i32 20)
  %v3_9b64 = trunc i32 %v2_9b64 to i8
  %v4_9b68 = sdiv i32 %v2_9b64, 256
  store i32 %v4_9b68, i32* %r3.global-to-local, align 4
  %v1_9b6c = trunc i32 %v4_9b68 to i8
  %v2_9b6c = load i32, i32* @r5, align 4
  %v3_9b6c = add i32 %v2_9b6c, 11
  %v4_9b6c = inttoptr i32 %v3_9b6c to i8*
  store i8 %v1_9b6c, i8* %v4_9b6c, align 1
  %v3_9b70 = load i32, i32* @r5, align 4
  %v4_9b70 = add i32 %v3_9b70, 10
  %v5_9b70 = inttoptr i32 %v4_9b70 to i8*
  store i8 %v3_9b64, i8* %v5_9b70, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9b78 = load i32, i32* @sl, align 4
  %v1_9b78 = trunc i32 %v0_9b78 to i8
  %v2_9b78 = load i32, i32* @r6, align 4
  %v3_9b78 = add i32 %v2_9b78, 10
  %v4_9b78 = inttoptr i32 %v3_9b78 to i8*
  store i8 %v1_9b78, i8* %v4_9b78, align 1
  %v0_9b7c = load i32, i32* @sl, align 4
  %v1_9b7c = trunc i32 %v0_9b7c to i8
  %v2_9b7c = load i32, i32* @r6, align 4
  %v3_9b7c = add i32 %v2_9b7c, 11
  %v4_9b7c = inttoptr i32 %v3_9b7c to i8*
  store i8 %v1_9b7c, i8* %v4_9b7c, align 1
  %v0_9b80 = load i32, i32* @r6, align 4
  store i32 %v0_9b80, i32* @r0, align 4
  %v2_9b84 = call i32 @function_d3d4(i32 %v0_9b80, i32 20)
  %v3_9b84 = trunc i32 %v2_9b84 to i8
  store i32 %v2_9b84, i32* %r0.global-to-local, align 4
  %v4_9b88 = sdiv i32 %v2_9b84, 256
  store i32 %v4_9b88, i32* %r3.global-to-local, align 4
  %v3_9b8c = load i32, i32* @r6, align 4
  %v4_9b8c = add i32 %v3_9b8c, 10
  %v5_9b8c = inttoptr i32 %v4_9b8c to i8*
  store i8 %v3_9b84, i8* %v5_9b8c, align 1
  %v0_9b90 = load i32, i32* %r3.global-to-local, align 4
  %v1_9b90 = trunc i32 %v0_9b90 to i8
  %v2_9b90 = load i32, i32* @r6, align 4
  %v3_9b90 = add i32 %v2_9b90, 11
  %v4_9b90 = inttoptr i32 %v3_9b90 to i8*
  store i8 %v1_9b90, i8* %v4_9b90, align 1
  %v0_9b94 = load i32, i32* @r7, align 4
  %v1_9b94 = add i32 %v0_9b94, 4
  %v2_9b94 = inttoptr i32 %v1_9b94 to i8*
  %v3_9b94 = load i8, i8* %v2_9b94, align 1
  %v4_9b94 = zext i8 %v3_9b94 to i32
  store i32 %v4_9b94, i32* %r3.global-to-local, align 4
  %v1_9b98 = add i32 %v0_9b94, 5
  %v2_9b98 = inttoptr i32 %v1_9b98 to i8*
  %v3_9b98 = load i8, i8* %v2_9b98, align 1
  %v4_9b98 = zext i8 %v3_9b98 to i32
  store i32 %v0_9b94, i32* @r1, align 4
  %v4_9ba0 = mul nuw nsw i32 %v4_9b98, 256
  %v5_9ba0 = or i32 %v4_9ba0, %v4_9b94
  store i32 %v5_9ba0, i32* %r2.global-to-local, align 4
  %v0_9ba4 = load i32, i32* @sl, align 4
  %v1_9ba4 = trunc i32 %v0_9ba4 to i8
  %v3_9ba4 = add i32 %v0_9b94, 6
  %v4_9ba4 = inttoptr i32 %v3_9ba4 to i8*
  store i8 %v1_9ba4, i8* %v4_9ba4, align 1
  store i32 %v1_9a94, i32* %r3.global-to-local, align 4
  %v0_9bac = load i32, i32* @sl, align 4
  %v1_9bac = trunc i32 %v0_9bac to i8
  %v2_9bac = load i32, i32* @r7, align 4
  %v3_9bac = add i32 %v2_9bac, 7
  %v4_9bac = inttoptr i32 %v3_9bac to i8*
  store i8 %v1_9bac, i8* %v4_9bac, align 1
  %v0_9bb0 = load i32, i32* @r6, align 4
  store i32 %v0_9bb0, i32* %r0.global-to-local, align 4
  %v4_9bb4 = call i32 @function_d430(i32 %v0_9bb0, i32 %v0_9b94, i32 %v5_9ba0, i32 %v1_9a94)
  %v5_9bb4 = trunc i32 %v4_9bb4 to i8
  store i32 %v4_9bb4, i32* %r0.global-to-local, align 4
  %v3_9bb8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9bb8, i32* %r3.global-to-local, align 4
  %v3_9bbc = mul i32 %v3_9bb8, 32
  store i32 %v3_9bbc, i32* %r2.global-to-local, align 4
  %v0_9bc0 = load i32, i32* @r5, align 4
  %v1_9bc0 = add i32 %v0_9bc0, 16
  %v2_9bc0 = inttoptr i32 %v1_9bc0 to i32*
  %v3_9bc0 = load i32, i32* %v2_9bc0, align 4
  store i32 %v3_9bc0, i32* %r1.global-to-local, align 4
  %v5_9bc4 = mul i32 %v3_9bb8, 24
  store i32 %v5_9bc4, i32* %r2.global-to-local, align 4
  %v4_9bc836 = udiv i32 %v4_9bb4, 256
  %v1_9bcc = trunc i32 %v4_9bc836 to i8
  %v2_9bcc = load i32, i32* @r7, align 4
  %v3_9bcc = add i32 %v2_9bcc, 7
  %v4_9bcc = inttoptr i32 %v3_9bcc to i8*
  store i8 %v1_9bcc, i8* %v4_9bcc, align 1
  %v0_9bd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9bd0 = load i32, i32* @sb, align 4
  %v2_9bd0 = add i32 %v1_9bd0, %v0_9bd0
  store i32 %v2_9bd0, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_9bd8 = load i32, i32* @r7, align 4
  %v4_9bd8 = add i32 %v3_9bd8, 6
  %v5_9bd8 = inttoptr i32 %v4_9bd8 to i8*
  store i8 %v5_9bb4, i8* %v5_9bd8, align 1
  %v0_9bdc = load i32, i32* %r1.global-to-local, align 4
  %v1_9bdc = load i32, i32* %lr.global-to-local, align 4
  %v2_9bdc = add i32 %v1_9bdc, 4
  %v3_9bdc = inttoptr i32 %v2_9bdc to i32*
  store i32 %v0_9bdc, i32* %v3_9bdc, align 4
  %v0_9be0 = load i32, i32* %r3.global-to-local, align 4
  %v1_9be0 = trunc i32 %v0_9be0 to i8
  %v2_9be0 = load i32, i32* %r2.global-to-local, align 4
  %v3_9be0 = load i32, i32* @sb, align 4
  %v4_9be0 = add i32 %v3_9be0, %v2_9be0
  %v5_9be0 = inttoptr i32 %v4_9be0 to i8*
  store i8 %v1_9be0, i8* %v5_9be0, align 1
  %v0_9be4 = load i32, i32* @sl, align 4
  %v1_9be4 = trunc i32 %v0_9be4 to i8
  %v2_9be4 = load i32, i32* %lr.global-to-local, align 4
  %v3_9be4 = add i32 %v2_9be4, 2
  %v4_9be4 = inttoptr i32 %v3_9be4 to i8*
  store i8 %v1_9be4, i8* %v4_9be4, align 1
  %v0_9be8 = load i32, i32* @sl, align 4
  %v1_9be8 = trunc i32 %v0_9be8 to i8
  %v2_9be8 = load i32, i32* %lr.global-to-local, align 4
  %v3_9be8 = add i32 %v2_9be8, 1
  %v4_9be8 = inttoptr i32 %v3_9be8 to i8*
  store i8 %v1_9be8, i8* %v4_9be8, align 1
  %v0_9bec = load i32, i32* @sl, align 4
  %v1_9bec = trunc i32 %v0_9bec to i8
  %v2_9bec = load i32, i32* %lr.global-to-local, align 4
  %v3_9bec = add i32 %v2_9bec, 3
  %v4_9bec = inttoptr i32 %v3_9bec to i8*
  store i8 %v1_9bec, i8* %v4_9bec, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9bf8 = load i32, i32* @r5, align 4
  store i32 %v0_9bf8, i32* %r1.global-to-local, align 4
  store i32 %v3_9770, i32* %r0.global-to-local, align 4
  %v0_9c00 = load i32, i32* @fp, align 4
  store i32 %v0_9c00, i32* %r2.global-to-local, align 4
  %v0_9c04 = load i32, i32* %lr.global-to-local, align 4
  %v4_9c04 = inttoptr i32 %v0_9c04 to %sockaddr*
  %v7_9c0c = inttoptr i32 %v0_9bf8 to i32*
  %v9_9c0c = call i32 @sendto(i32 %v3_9770, i32* %v7_9c0c, i32 %v0_9c00, i32 16384, %sockaddr* %v4_9c04, i32 16)
  %v3_9c10 = load i32, i32* %stack_var_-40, align 4
  %v1_9c14 = add i32 %v3_9c10, 1
  store i32 %v1_9c14, i32* %r0.global-to-local, align 4
  store i32 %v1_9600, i32* %r3.global-to-local, align 4
  %v9_9c1c = icmp eq i32 %v1_9c14, %v1_9600
  store i1 %v9_9c1c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9c14, i32* %stack_var_-40, align 4
  %v6_9c24 = icmp slt i32 %v1_9c14, %v1_9600
  br i1 %v6_9c24, label %dec_label_pc_9c28, label %dec_label_pc_9d78

dec_label_pc_9c28:                                ; preds = %dec_label_pc_9b54, %dec_label_pc_9a84
  %v1_9c3c = phi i32 [ %v1_9c14, %dec_label_pc_9b54 ], [ 0, %dec_label_pc_9a84 ]
  %v5_9c2c = mul i32 %v1_9c3c, 24
  %v1_9c30 = load i32, i32* @sb, align 4
  %v2_9c30 = add i32 %v1_9c30, %v5_9c2c
  store i32 %v2_9c30, i32* %r3.global-to-local, align 4
  store i32 %v4_962c, i32* %r1.global-to-local, align 4
  %v1_9c38 = add i32 %v2_9c30, 20
  %v2_9c38 = inttoptr i32 %v1_9c38 to i8*
  %v3_9c38 = load i8, i8* %v2_9c38, align 1
  %v4_9c38 = zext i8 %v3_9c38 to i32
  store i32 %v4_9c38, i32* %r2.global-to-local, align 4
  %v4_9c3c = mul i32 %v1_9c3c, 4
  %v5_9c3c = add i32 %v4_9c3c, %v4_962c
  %v6_9c3c = inttoptr i32 %v5_9c3c to i32*
  %v7_9c3c = load i32, i32* %v6_9c3c, align 4
  store i32 %v7_9c3c, i32* @r5, align 4
  %v2_9c40 = icmp ugt i8 %v3_9c38, 30
  %v7_9c40 = icmp eq i8 %v3_9c38, 31
  store i1 %v7_9c40, i1* %cpsr_z.global-to-local, align 1
  %v1_9c44 = add i32 %v7_9c3c, 24
  store i32 %v1_9c44, i32* @r8, align 4
  %v1_9c48 = add i32 %v7_9c3c, 38
  store i32 %v1_9c48, i32* @r6, align 4
  %v1_9c4c = add i32 %v7_9c3c, 58
  store i32 %v1_9c4c, i32* @r7, align 4
  %v2_9c50 = xor i1 %v7_9c40, true
  %v3_9c50 = and i1 %v2_9c40, %v2_9c50
  br i1 %v3_9c50, label %dec_label_pc_9aa4, label %dec_label_pc_9c54

dec_label_pc_9c54:                                ; preds = %dec_label_pc_9c28
  %v1_9c54 = add i32 %v2_9c30, 16
  %v2_9c54 = inttoptr i32 %v1_9c54 to i32*
  %v3_9c54 = load i32, i32* %v2_9c54, align 4
  store i32 %v3_9c54, i32* %r4.global-to-local, align 4
  %v0_9c58 = call i32 @function_ef90()
  store i32 %v0_9c58, i32* %r0.global-to-local, align 4
  %v3_9c5c = load i32, i32* %stack_var_-40, align 4
  %v5_9c64 = mul i32 %v3_9c5c, 24
  %v0_9c68 = load i32, i32* %r4.global-to-local, align 4
  %v1_9c6c = load i32, i32* @sb, align 4
  %v2_9c6c = add i32 %v1_9c6c, %v5_9c64
  store i32 %v2_9c6c, i32* %r1.global-to-local, align 4
  %v1_9c70 = and i32 %v0_9c68, 65280
  store i32 %v1_9c70, i32* %r3.global-to-local, align 4
  %v1_9c68 = udiv i32 %v0_9c68, 256
  %v3_9c74 = and i32 %v1_9c68, 65280
  store i32 %v3_9c74, i32* %r2.global-to-local, align 4
  %v3_9c78 = mul i32 %v0_9c68, 16777216
  store i32 %v3_9c78, i32* %ip.global-to-local, align 4
  %v1_9c7c = add i32 %v2_9c6c, 20
  %v2_9c7c = inttoptr i32 %v1_9c7c to i8*
  %v3_9c7c = load i8, i8* %v2_9c7c, align 1
  %v4_9c7c = zext i8 %v3_9c7c to i32
  store i32 %v4_9c7c, i32* %lr.global-to-local, align 4
  %v4_9c80 = mul nuw nsw i32 %v1_9c70, 256
  %v5_9c80 = or i32 %v4_9c80, %v3_9c78
  store i32 %v5_9c80, i32* %ip.global-to-local, align 4
  %v2_9c88 = call i32 @llvm.bswap.i32(i32 %v0_9c68)
  %v7_9c8c = lshr i32 %v0_9c58, %v4_9c7c
  %v8_9c8c = add i32 %v7_9c8c, %v2_9c88
  %v3_9c98 = mul i32 %v8_9c8c, 16777216
  %v1_9c9c = and i32 %v8_9c8c, 65280
  store i32 %v1_9c9c, i32* %r0.global-to-local, align 4
  store i32 %v6_974c, i32* %r2.global-to-local, align 4
  %v4_9ca8 = mul nuw nsw i32 %v1_9c9c, 256
  %v5_9ca8 = or i32 %v4_9ca8, %v3_9c98
  store i32 %v5_9ca8, i32* %r1.global-to-local, align 4
  %v2_9cac = call i32 @llvm.bswap.i32(i32 %v8_9c8c)
  store i32 %v2_9cac, i32* %r3.global-to-local, align 4
  store i1 %v2_9aa8, i1* %cpsr_z.global-to-local, align 1
  %v1_9cb4 = load i32, i32* @r5, align 4
  %v2_9cb4 = add i32 %v1_9cb4, 16
  %v3_9cb4 = inttoptr i32 %v2_9cb4 to i32*
  store i32 %v2_9cac, i32* %v3_9cb4, align 4
  br i1 %v2_9aa8, label %dec_label_pc_9cbc, label %dec_label_pc_9ab0

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9c54, %dec_label_pc_9aa4
  %v0_9cbc = call i32 @function_ef90()
  store i32 %v0_9cbc, i32* %r0.global-to-local, align 4
  store i32 %v3_97c8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9ccc, i1* %cpsr_z.global-to-local, align 1
  %v1_9cd0 = load i32, i32* @r5, align 4
  %v2_9cd0 = add i32 %v1_9cd0, 12
  %v3_9cd0 = inttoptr i32 %v2_9cd0 to i32*
  store i32 %v0_9cbc, i32* %v3_9cd0, align 4
  br i1 %v3_9ccc, label %dec_label_pc_9cd8, label %dec_label_pc_9cbc.dec_label_pc_9ac4_crit_edge

dec_label_pc_9cbc.dec_label_pc_9ac4_crit_edge:    ; preds = %dec_label_pc_9cbc
  %v1_9ac8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9ac4

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9cbc, %dec_label_pc_9ab0
  %v0_9cd8 = call i32 @function_ef90()
  %v3_9ce0 = urem i32 %v0_9cd8, 65536
  store i32 %v3_9ce0, i32* %r0.global-to-local, align 4
  %v1_9ce8 = sub nsw i32 999, %v3_9ce0
  store i32 %v1_9ce8, i32* %r2.global-to-local, align 4
  %v3_9cec = sdiv i32 %v1_9ce8, 256
  store i32 %v3_9cec, i32* %r1.global-to-local, align 4
  %v3_9cf035 = udiv i32 %v3_9ce0, 256
  store i32 %v3_9cf035, i32* %r3.global-to-local, align 4
  %v1_9cf4 = trunc i32 %v3_9cf035 to i8
  %v2_9cf4 = load i32, i32* @r5, align 4
  %v3_9cf4 = add i32 %v2_9cf4, 5
  %v4_9cf4 = inttoptr i32 %v3_9cf4 to i8*
  store i8 %v1_9cf4, i8* %v4_9cf4, align 1
  %v0_9cf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_9cf8 = trunc i32 %v0_9cf8 to i8
  %v2_9cf8 = load i32, i32* @r5, align 4
  %v3_9cf8 = add i32 %v2_9cf8, 4
  %v4_9cf8 = inttoptr i32 %v3_9cf8 to i8*
  store i8 %v1_9cf8, i8* %v4_9cf8, align 1
  %v0_9cfc = load i32, i32* %r1.global-to-local, align 4
  %v1_9cfc = trunc i32 %v0_9cfc to i8
  %v2_9cfc = load i32, i32* @r6, align 4
  %v3_9cfc = add i32 %v2_9cfc, 5
  %v4_9cfc = inttoptr i32 %v3_9cfc to i8*
  store i8 %v1_9cfc, i8* %v4_9cfc, align 1
  store i32 %v3_97cc, i32* %r1.global-to-local, align 4
  %v1_9d04 = load i32, i32* @r4, align 4
  %v9_9d04 = icmp eq i32 %v3_97cc, %v1_9d04
  store i1 %v9_9d04, i1* %cpsr_z.global-to-local, align 1
  %v0_9d08 = load i32, i32* %r2.global-to-local, align 4
  %v1_9d08 = trunc i32 %v0_9d08 to i8
  %v2_9d08 = load i32, i32* @r6, align 4
  %v3_9d08 = add i32 %v2_9d08, 4
  %v4_9d08 = inttoptr i32 %v3_9d08 to i8*
  store i8 %v1_9d08, i8* %v4_9d08, align 1
  %v0_9d0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d0c, label %dec_label_pc_9d10, label %dec_label_pc_9cd8.dec_label_pc_9ad0_crit_edge

dec_label_pc_9cd8.dec_label_pc_9ad0_crit_edge:    ; preds = %dec_label_pc_9cd8
  %v1_9ad4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9ad0

dec_label_pc_9d10:                                ; preds = %dec_label_pc_9cd8, %dec_label_pc_9ac4
  %v0_9d10 = call i32 @function_ef90()
  %v1_9d10 = trunc i32 %v0_9d10 to i8
  store i32 %v0_9d10, i32* %r0.global-to-local, align 4
  store i32 %v3_97d0, i32* %r2.global-to-local, align 4
  %v4_9d18 = sdiv i32 %v0_9d10, 256
  store i32 %v4_9d18, i32* %r3.global-to-local, align 4
  %v1_9d1c = load i32, i32* @r4, align 4
  %v9_9d1c = icmp eq i32 %v3_97d0, %v1_9d1c
  store i1 %v9_9d1c, i1* %cpsr_z.global-to-local, align 1
  %v3_9d20 = load i32, i32* @r5, align 4
  %v4_9d20 = add i32 %v3_9d20, 58
  %v5_9d20 = inttoptr i32 %v4_9d20 to i8*
  store i8 %v1_9d10, i8* %v5_9d20, align 1
  %v0_9d24 = load i32, i32* %r3.global-to-local, align 4
  %v1_9d24 = trunc i32 %v0_9d24 to i8
  %v2_9d24 = load i32, i32* @r7, align 4
  %v3_9d24 = add i32 %v2_9d24, 1
  %v4_9d24 = inttoptr i32 %v3_9d24 to i8*
  store i8 %v1_9d24, i8* %v4_9d24, align 1
  %v0_9d28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d28, label %dec_label_pc_9d2c, label %dec_label_pc_9adc

dec_label_pc_9d2c:                                ; preds = %dec_label_pc_9d10, %dec_label_pc_9ad0
  %v0_9d2c = call i32 @function_ef90()
  %v1_9d2c = trunc i32 %v0_9d2c to i8
  store i32 %v0_9d2c, i32* %r0.global-to-local, align 4
  %v4_9d3037 = udiv i32 %v0_9d2c, 256
  %v1_9d34 = trunc i32 %v4_9d3037 to i8
  %v2_9d34 = load i32, i32* @r7, align 4
  %v3_9d34 = add i32 %v2_9d34, 3
  %v4_9d34 = inttoptr i32 %v3_9d34 to i8*
  store i8 %v1_9d34, i8* %v4_9d34, align 1
  store i32 %v1_97c4, i32* %r3.global-to-local, align 4
  store i1 %v2_9d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9d3c, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_9d2c
  %v1_9d40 = load i32, i32* @r5, align 4
  %v2_9d40 = add i32 %v1_9d40, 16
  %v3_9d40 = inttoptr i32 %v2_9d40 to i32*
  %v4_9d40 = load i32, i32* %v3_9d40, align 4
  store i32 %v4_9d40, i32* %r3.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_9d2c, %bb101
  %v3_9d44 = load i32, i32* @r7, align 4
  %v4_9d44 = add i32 %v3_9d44, 2
  %v5_9d44 = inttoptr i32 %v4_9d44 to i8*
  store i8 %v1_9d2c, i8* %v5_9d44, align 1
  %v0_9d48 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d48, label %dec_label_pc_9d50, label %bb103

bb103:                                            ; preds = %bb102
  %v1_9d48 = load i32, i32* %r3.global-to-local, align 4
  %v2_9d48 = load i32, i32* @r6, align 4
  %v3_9d48 = add i32 %v2_9d48, 16
  %v4_9d48 = inttoptr i32 %v3_9d48 to i32*
  store i32 %v1_9d48, i32* %v4_9d48, align 4
  br label %dec_label_pc_9af0

dec_label_pc_9d50:                                ; preds = %dec_label_pc_9adc, %bb102
  %v0_9d50 = call i32 @function_ef90()
  store i32 %v0_9d50, i32* %r0.global-to-local, align 4
  %v1_9d54 = load i32, i32* @r6, align 4
  %v2_9d54 = add i32 %v1_9d54, 16
  %v3_9d54 = inttoptr i32 %v2_9d54 to i32*
  store i32 %v0_9d50, i32* %v3_9d54, align 4
  br label %dec_label_pc_9af0

dec_label_pc_9d5c:                                ; preds = %dec_label_pc_9af0
  %v0_9d5c = load i32, i32* @r7, align 4
  %v1_9d5c = add i32 %v0_9d5c, 8
  store i32 %v1_9d5c, i32* @r4, align 4
  store i32 %v1_9d5c, i32* %r0.global-to-local, align 4
  store i32 %v6_96f8, i32* %r1.global-to-local, align 4
  %v2_9d68 = call i32 @function_f044(i32 %v1_9d5c, i32 %v6_96f8)
  store i32 %v2_9d68, i32* %r0.global-to-local, align 4
  store i32 %v6_96f8, i32* %r2.global-to-local, align 4
  %v0_9d70 = load i32, i32* @sl, align 4
  %v1_9d70 = trunc i32 %v0_9d70 to i8
  %v2_9d70 = load i32, i32* @r4, align 4
  %v4_9d70 = add i32 %v2_9d70, %v6_96f8
  %v5_9d70 = inttoptr i32 %v4_9d70 to i8*
  store i8 %v1_9d70, i8* %v5_9d70, align 1
  br label %dec_label_pc_9b54

dec_label_pc_9d78:                                ; preds = %dec_label_pc_9b54, %dec_label_pc_9a70
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9d7c = call i32 @time(i32* null)
  store i32 %v2_9d7c, i32* %r0.global-to-local, align 4
  store i32 %v2_975c, i32* %r1.global-to-local, align 4
  %v9_9d84 = icmp eq i32 %v2_975c, %v2_9d7c
  store i1 %v9_9d84, i1* %cpsr_z.global-to-local, align 1
  %v6_9d88 = icmp slt i32 %v2_975c, %v2_9d7c
  br i1 %v6_9d88, label %dec_label_pc_9d8c, label %dec_label_pc_9a70

dec_label_pc_9d8c:                                ; preds = %dec_label_pc_9d78, %dec_label_pc_95fc, %dec_label_pc_9d94
  %v29_9d90 = phi i32 [ -1, %dec_label_pc_95fc ], [ %v1_9d98, %dec_label_pc_9d94 ], [ %v2_9d7c, %dec_label_pc_9d78 ]
  store i32 %v3_95fc, i32* %r4.global-to-local, align 4
  store i32 %v6_95fc, i32* %r5.global-to-local, align 4
  store i32 %v9_95fc, i32* %r6.global-to-local, align 4
  store i32 %v12_95fc, i32* %r7.global-to-local, align 4
  store i32 %v15_95fc, i32* %r8.global-to-local, align 4
  store i32 %v21_95fc, i32* %sl.global-to-local, align 4
  store i32 %v24_95fc, i32* %fp.global-to-local, align 4
  ret i32 %v29_9d90

dec_label_pc_9d94:                                ; preds = %dec_label_pc_9780
  store i32 %v3_9770, i32* %r0.global-to-local, align 4
  %v1_9d98 = call i32 @close(i32 %v3_9770)
  store i32 %v1_9d98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9d8c

; uselistorder directives
  uselistorder i32 %v1_9d98, { 1, 0 }
  uselistorder i32 %v0_9d2c, { 0, 2, 1 }
  uselistorder i32 %v0_9d10, { 0, 2, 1 }
  uselistorder i32 %v3_9ce0, { 0, 2, 1 }
  uselistorder i32 %v2_9cac, { 1, 0 }
  uselistorder i32 %v8_9c8c, { 1, 2, 0 }
  uselistorder i32 %v3_9c78, { 1, 0 }
  uselistorder i32 %v0_9c68, { 2, 0, 1, 3 }
  uselistorder i32 %v7_9c3c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_9c14, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_9bb8, { 1, 0, 2 }
  uselistorder i32 %v4_9bb4, { 0, 2, 1 }
  uselistorder i32 %v0_9b94, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_9b84, { 0, 2, 1 }
  uselistorder i32 %v4_9b68, { 1, 0 }
  uselistorder i1 %v2_9d3c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_9ccc, { 1, 0, 2, 3 }
  uselistorder i1 %v2_9aa8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_9a94, { 1, 0, 2 }
  uselistorder i32 %v0_9a10, { 1, 0, 2 }
  uselistorder i32 %v3_98a0, { 1, 0 }
  uselistorder i32 %tmp87, { 1, 0, 2 }
  uselistorder i32 %v1_981c, { 0, 2, 1 }
  uselistorder i32 %v1_9814, { 2, 1, 0 }
  uselistorder i32 %v1_9810, { 1, 0 }
  uselistorder i32 %v1_980c, { 1, 0 }
  uselistorder i32 %v1_9800, { 1, 0 }
  uselistorder i32 %v3_97f8, { 2, 0, 1 }
  uselistorder i32 %v3_97c8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_97c4, { 4, 3, 5, 1, 2, 0 }
  uselistorder i1 %v2_97c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_97b8, { 0, 3, 2, 1 }
  uselistorder i32 %v0_97b4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_9770, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v2_975c, { 2, 1, 0 }
  uselistorder i32 %v6_974c, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v1_9718, { 1, 2, 3, 0 }
  uselistorder i32 %v6_96f8, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_96ac, { 1, 2, 0 }
  uselistorder i32 %v6_9680, { 2, 1, 3, 0 }
  uselistorder i32 %v6_9644, { 1, 2, 0 }
  uselistorder i32 %v4_962c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_9600, { 1, 2, 3, 0, 4, 5, 6, 9, 7, 8 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 13, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 21, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 61, 62, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 15, 7, 8, 9, 10, 11, 12, 48, 49, 50, 51, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 13, 8, 9, 10, 11, 46, 45, 47, 48, 49, 50, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 42, 41, 44, 43, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 4, 7, 6, 2, 8, 9, 12, 13, 10, 11, 15, 14, 17, 16, 18, 1, 19, 20, 45, 44, 46, 47, 48, 49, 3, 21, 25, 22, 23, 24, 28, 26, 27, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 9, 10, 28, 29, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_9d8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9d50, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %dec_label_pc_9b54, { 1, 0 }
  uselistorder label %dec_label_pc_9af0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9a70, { 1, 0 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_9da4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9da4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_9da4 = load i32, i32* @r4, align 4
  %v6_9da4 = load i32, i32* @r5, align 4
  %v9_9da4 = load i32, i32* @r6, align 4
  %v12_9da4 = load i32, i32* @r7, align 4
  %v15_9da4 = load i32, i32* @r8, align 4
  %v21_9da4 = load i32, i32* @sl, align 4
  %v24_9da4 = load i32, i32* @fp, align 4
  %v1_9da8 = urem i32 %arg2, 256
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v1_9da8, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_9dc4 = urem i32 %arg4, 256
  store i32 %v1_9dc4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_9dd4 = call i32* @calloc(i32 %v1_9da8, i32 4)
  %v4_9dd4 = ptrtoint i32* %v2_9dd4 to i32
  %v0_9dd8 = load i32, i32* @r5, align 4
  store i32 %v0_9dd8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_9de4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9de4, i32* %r3.global-to-local, align 4
  %v0_9de8 = load i32, i32* @r4, align 4
  store i32 %v0_9de8, i32* %r0.global-to-local, align 4
  %v5_9dec = inttoptr i32 %v0_9dd8 to i32*
  %v6_9dec = call i32 @function_8fc8(i32 %v0_9de8, i32* %v5_9dec, i32 2, i32 %v0_9de4, i32 %v4_9dd4)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9e04 = load i32, i32* @r5, align 4
  store i32 %v0_9e04, i32* %r1.global-to-local, align 4
  %v0_9e08 = load i32, i32* @r4, align 4
  store i32 %v0_9e08, i32* %r0.global-to-local, align 4
  %v5_9e0c = trunc i32 %v6_9dec to i8
  %v6_9e10 = inttoptr i32 %v0_9e04 to i32*
  %v7_9e10 = call i32 @function_8fc8(i32 %v0_9e08, i32* %v6_9e10, i32 3, i32 65535, i32 %v6_9dec)
  %v0_9e14 = load i32, i32* @r5, align 4
  store i32 %v0_9e14, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9e10, i32* @r7, align 4
  %v0_9e24 = load i32, i32* @r4, align 4
  store i32 %v0_9e24, i32* %r0.global-to-local, align 4
  %v5_9e28 = inttoptr i32 %v0_9e14 to i32*
  %v6_9e28 = call i32 @function_8fc8(i32 %v0_9e24, i32* %v5_9e28, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v0_9e34 = load i32, i32* @r5, align 4
  store i32 %v0_9e34, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9e40 = load i32, i32* @r4, align 4
  store i32 %v0_9e40, i32* %r0.global-to-local, align 4
  %v5_9e44 = trunc i32 %v6_9e28 to i8
  %v6_9e48 = inttoptr i32 %v0_9e34 to i32*
  %v7_9e48 = call i32 @function_8fc8(i32 %v0_9e40, i32* %v6_9e48, i32 5, i32 1, i32 %v6_9e28)
  %v1_9e54 = urem i32 %v7_9e48, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9e60 = load i32, i32* @r5, align 4
  store i32 %v0_9e60, i32* %r1.global-to-local, align 4
  %v0_9e64 = load i32, i32* @r4, align 4
  store i32 %v0_9e64, i32* %r0.global-to-local, align 4
  %v5_9e6c = inttoptr i32 %v0_9e60 to i32*
  %v6_9e6c = call i32 @function_8fc8(i32 %v0_9e64, i32* %v5_9e6c, i32 6, i32 65535, i32 %v1_9e54)
  %v0_9e78 = load i32, i32* @r5, align 4
  store i32 %v0_9e78, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_9e84 = load i32, i32* @r4, align 4
  store i32 %v0_9e84, i32* %r0.global-to-local, align 4
  %v5_9e88 = inttoptr i32 %v0_9e78 to i32*
  %v6_9e88 = call i32 @function_8fc8(i32 %v0_9e84, i32* %v5_9e88, i32 7, i32 65535, i32 %v6_9e6c)
  %v0_9e8c = load i32, i32* @r5, align 4
  store i32 %v0_9e8c, i32* %r1.global-to-local, align 4
  %v0_9e90 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9e90, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_9e88, i32* @sl, align 4
  %v0_9e9c = load i32, i32* @r4, align 4
  store i32 %v0_9e9c, i32* %r0.global-to-local, align 4
  %v5_9ea0 = inttoptr i32 %v0_9e8c to i32*
  %v6_9ea0 = call i32 @function_8fc8(i32 %v0_9e9c, i32* %v5_9ea0, i32 %v0_9e90, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9eb0 = load i32, i32* @r5, align 4
  store i32 %v0_9eb0, i32* %r1.global-to-local, align 4
  %v0_9eb4 = load i32, i32* @r4, align 4
  store i32 %v0_9eb4, i32* %r0.global-to-local, align 4
  %v5_9eb8 = inttoptr i32 %v0_9eb0 to i32*
  %v6_9eb8 = call i32 @function_8fc8(i32 %v0_9eb4, i32* %v5_9eb8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9ec0 = urem i32 %v6_9eb8, 256
  %v0_9ec4 = load i32, i32* @r5, align 4
  store i32 %v0_9ec4, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_9ecc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9ecc, i32* %r3.global-to-local, align 4
  %v0_9ed0 = load i32, i32* @r4, align 4
  store i32 %v0_9ed0, i32* %r0.global-to-local, align 4
  %v5_9ed8 = inttoptr i32 %v0_9ec4 to i32*
  %v6_9ed8 = call i32 @function_8fc8(i32 %v0_9ed0, i32* %v5_9ed8, i32 18, i32 %v0_9ecc, i32 %v1_9ec0)
  %v0_9ee0 = load i32, i32* @r5, align 4
  store i32 %v0_9ee0, i32* %r1.global-to-local, align 4
  %v2_9ee4 = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_9ee4, i32* %r3.global-to-local, align 4
  store i32 %v6_9ed8, i32* @r8, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_9ef0 = load i32, i32* @r4, align 4
  store i32 %v0_9ef0, i32* %r0.global-to-local, align 4
  %v5_9ef4 = inttoptr i32 %v0_9ee0 to i32*
  %v6_9ef4 = call i32 @function_8fc8(i32 %v0_9ef0, i32* %v5_9ef4, i32 19, i32 %v2_9ee4, i32 ptrtoint (i32* @0 to i32))
  %v0_9efc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9efc, i32* %r0.global-to-local, align 4
  %v1_9f00 = inttoptr i32 %v0_9efc to i32*
  %v2_9f00 = call i32 @time(i32* %v1_9f00)
  %v1_9f04 = load i32, i32* @r6, align 4
  %v2_9f04 = add i32 %v1_9f04, %v2_9f00
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9f18 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_9f18, i32* %r0.global-to-local, align 4
  %v2_9f1c = icmp eq i32 %v3_9f18, -1
  store i1 %v2_9f1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9f1c, label %dec_label_pc_a4c4, label %dec_label_pc_9f28

dec_label_pc_9f28:                                ; preds = %dec_label_pc_9da4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_9f30 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_9f30, i32* %r3.global-to-local, align 4
  %v0_9f38 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9f38, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_9f44 = call i32 @setsockopt(i32 %v3_9f18, i32 %v0_9f38, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_9f44, i32* %r0.global-to-local, align 4
  %v2_9f48 = icmp eq i32 %v7_9f44, -1
  store i1 %v2_9f48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9f48, label %dec_label_pc_a4cc, label %dec_label_pc_9f50

dec_label_pc_9f50:                                ; preds = %dec_label_pc_9f28
  %v0_9f5c = load i32, i32* @sl, align 4
  %v3_9f5c = mul i32 %v0_9f5c, 65536
  store i32 %v3_9f5c, i32* %sl.global-to-local, align 4
  %v0_9f60 = load i32, i32* @r7, align 4
  %v3_9f60 = mul i32 %v0_9f60, 65536
  store i32 %v3_9f60, i32* %r7.global-to-local, align 4
  %v2_9f68 = icmp eq i32 %v1_9da8, 0
  store i1 %v2_9f68, i1* %cpsr_z.global-to-local, align 1
  %v0_9f6c = load i32, i32* @r8, align 4
  %v1_9f6c = urem i32 %v0_9f6c, 256
  store i32 %v1_9f6c, i32* %r8.global-to-local, align 4
  %v3_9f70 = urem i32 %v0_9f60, 65536
  store i32 %v3_9f70, i32* %r3.global-to-local, align 4
  %v3_9f74 = urem i32 %v6_9e6c, 65536
  store i32 %v3_9f74, i32* %r1.global-to-local, align 4
  %v3_9f78 = urem i32 %v0_9f5c, 65536
  store i32 %v3_9f78, i32* %r2.global-to-local, align 4
  %v0_9f84 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9f84, i32* %stack_var_-40, align 4
  br i1 %v2_9f68, label %dec_label_pc_a204.preheader, label %dec_label_pc_9f98

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9f50
  %v3_9fa0 = mul i32 %v6_9ea0, 65536
  %v1_9fa8 = urem i32 %v6_9e6c, 256
  %v1_9fb0 = add i32 %v3_9fa0, 524288
  %v1_9fb4 = add i32 %v3_9fa0, 3407872
  %v1_9fb8 = urem i32 %v0_9f5c, 256
  %v1_9fbc = add i32 %v3_9fa0, 1835008
  %v0_9f60.not = or i32 %v0_9f60, -65536
  %v1_9fc4 = xor i32 %v0_9f60.not, 65535
  %v3_9fc8 = udiv i32 %v1_9fbc, 256
  %tmp78 = udiv i32 %v0_9f60, 256
  %v1_9fdc = and i32 %v3_9fc8, 65280
  store i32 %v1_9fdc, i32* %r0.global-to-local, align 4
  %v3_a000 = mul nuw nsw i32 %v1_9fa8, 256
  %tmp79 = udiv i32 %v6_9e6c, 256
  %v4_a008 = urem i32 %tmp79, 256
  %v5_a008 = or i32 %v4_a008, %v3_a000
  store i32 %v5_a008, i32* %lr.global-to-local, align 4
  %tmp80 = mul nsw i32 %v1_9fc4, 256
  %v3_a010 = mul nuw nsw i32 %v1_9fb8, 256
  %sext24 = mul i32 %tmp78, 16777216
  %v4_a018 = sdiv i32 %sext24, 16777216
  %v4_9fe0 = sdiv i32 %v1_9fb4, 16777216
  %tmp81 = udiv i32 %v0_9f5c, 256
  %v4_a020 = urem i32 %tmp81, 256
  %v5_a020 = or i32 %v4_a020, %v3_a010
  store i32 %v5_a020, i32* %r7.global-to-local, align 4
  %v1_a024 = and i32 %tmp80, 65280
  %v4_a028 = sdiv i32 %v1_9fbc, 16777216
  %v3_a02c = udiv i32 %v1_9fb0, 256
  %tmp82 = udiv i32 %v1_9fc4, 256
  %v4_a030 = urem i32 %tmp82, 256
  %v5_a030 = or i32 %v4_a030, %v1_a024
  store i32 %v5_a030, i32* %r6.global-to-local, align 4
  %v3_a034 = ashr i32 %v1_9fb4, 31
  %v3_a038 = ashr i32 %sext24, 31
  %v1_a03c = and i32 %v3_a02c, 65280
  store i32 %v1_a03c, i32* %r5.global-to-local, align 4
  %v3_a048 = ashr i32 %v1_9fbc, 31
  store i32 %v3_a048, i32* %r2.global-to-local, align 4
  %v3_a04c33 = udiv i32 %v1_a024, 256
  store i32 %v3_a04c33, i32* %r3.global-to-local, align 4
  store i32 %v1_9fa8, i32* %r1.global-to-local, align 4
  %v4_a054 = udiv i32 %v1_9fb0, 16777216
  %v5_a054 = or i32 %v4_a054, %v1_a03c
  store i32 %v5_a054, i32* %r8.global-to-local, align 4
  %v5_a058 = trunc i32 %tmp82 to i8
  store i32 %v0_9f84, i32* %r4.global-to-local, align 4
  %v3_a07034 = udiv i32 %v1_a03c, 256
  store i32 %v3_a07034, i32* %sl.global-to-local, align 4
  store i32 %v1_9fb8, i32* %fp.global-to-local, align 4
  %sext16 = mul i32 %v1_9fc4, 16777216
  %v4_a180 = sdiv i32 %sext16, 16777216
  %v2_a1b0 = icmp eq i32 %v1_9f6c, 0
  %sext17 = mul i32 %v6_9e6c, 16777216
  %v4_a1c4 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %tmp79, 16777216
  %v4_a1e0 = sdiv i32 %sext18, 16777216
  %v1_a0dc = trunc i32 %v4_a018 to i8
  br label %dec_label_pc_a078

dec_label_pc_a078:                                ; preds = %bb93, %dec_label_pc_9f98
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a084 = call i32* @calloc(i32 1510, i32 4)
  %v4_a084 = ptrtoint i32* %v2_a084 to i32
  store i32 %v4_a084, i32* %r0.global-to-local, align 4
  store i32 %v4_9dd4, i32* %r2.global-to-local, align 4
  %v3_a08c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a08c, i32* %r3.global-to-local, align 4
  %v2_a090 = load i32, i32* %r4.global-to-local, align 4
  %v5_a090 = mul i32 %v2_a090, 4
  %v6_a090 = add i32 %v5_a090, %v4_9dd4
  %v7_a090 = inttoptr i32 %v6_a090 to i32*
  store i32 %v4_a084, i32* %v7_a090, align 4
  %v0_a094 = load i32, i32* %r2.global-to-local, align 4
  %v1_a094 = load i32, i32* %r3.global-to-local, align 4
  %v4_a094 = mul i32 %v1_a094, 4
  %v5_a094 = add i32 %v4_a094, %v0_a094
  %v6_a094 = inttoptr i32 %v5_a094 to i32*
  %v7_a094 = load i32, i32* %v6_a094, align 4
  store i32 %v7_a094, i32* %r4.global-to-local, align 4
  %v1_a098 = inttoptr i32 %v7_a094 to i8*
  %v2_a098 = load i8, i8* %v1_a098, align 1
  %tmp = urem i8 %v2_a098, 16
  %v1_a09c = zext i8 %tmp to i32
  %v1_a0a0 = or i32 %v1_a09c, 64
  store i32 %v1_a0a0, i32* %r2.global-to-local, align 4
  %v1_a0a4 = trunc i32 %v1_a0a0 to i8
  store i8 %v1_a0a4, i8* %v1_a098, align 1
  %v0_a0a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_a0a8 = inttoptr i32 %v0_a0a8 to i8*
  %v2_a0a8 = load i8, i8* %v1_a0a8, align 1
  %v1_a0ac = and i8 %v2_a0a8, -16
  %v1_a0b0 = or i8 %v1_a0ac, 5
  store i32 %v1_9e54, i32* %r1.global-to-local, align 4
  store i8 %v1_a0b0, i8* %v1_a0a8, align 1
  %v2_a0c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0c0 = add i32 %v2_a0c0, 1
  %v4_a0c0 = inttoptr i32 %v3_a0c0 to i8*
  store i8 %v5_9e0c, i8* %v4_a0c0, align 1
  %v2_a0c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0c8 = add i32 %v2_a0c8, 8
  %v4_a0c8 = inttoptr i32 %v3_a0c8 to i8*
  store i8 %v5_9e44, i8* %v4_a0c8, align 1
  store i32 %v4_a018, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_a0d4 = load i32, i32* %r1.global-to-local, align 4
  %v9_a0d4 = icmp eq i32 %v0_a0d4, 0
  store i1 %v9_a0d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a034, i32* %r2.global-to-local, align 4
  %v2_a0dc = load i32, i32* %r4.global-to-local, align 4
  %v3_a0dc = add i32 %v2_a0dc, 4
  %v4_a0dc = inttoptr i32 %v3_a0dc to i8*
  store i8 %v1_a0dc, i8* %v4_a0dc, align 1
  store i32 %v4_9fe0, i32* %r1.global-to-local, align 4
  %v0_a0e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a0e4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a078
  %v1_a0e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_a0e4, i32* %r3.global-to-local, align 4
  %v2_a0e8 = trunc i32 %v1_a0e4 to i8
  %v3_a0e8 = load i32, i32* %r4.global-to-local, align 4
  %v4_a0e8 = add i32 %v3_a0e8, 7
  %v5_a0e8 = inttoptr i32 %v4_a0e8 to i8*
  store i8 %v2_a0e8, i8* %v5_a0e8, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a078, %bb
  store i32 47, i32* %r3.global-to-local, align 4
  %v0_a0f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a0f0 = trunc i32 %v0_a0f0 to i8
  %v2_a0f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0f0 = add i32 %v2_a0f0, 3
  %v4_a0f0 = inttoptr i32 %v3_a0f0 to i8*
  store i8 %v1_a0f0, i8* %v4_a0f0, align 1
  %v0_a0f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a0f4 = trunc i32 %v0_a0f4 to i8
  %v2_a0f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_a0f4 = add i32 %v2_a0f4, 2
  %v4_a0f4 = inttoptr i32 %v3_a0f4 to i8*
  store i8 %v1_a0f4, i8* %v4_a0f4, align 1
  %v0_a0f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a0f8, label %bb84, label %bb83

bb83:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %.thread, %bb83
  store i32 %v3_a038, i32* %r1.global-to-local, align 4
  %v0_a100 = load i32, i32* %r3.global-to-local, align 4
  %v1_a100 = trunc i32 %v0_a100 to i8
  %v2_a100 = load i32, i32* %r4.global-to-local, align 4
  %v3_a100 = add i32 %v2_a100, 9
  %v4_a100 = inttoptr i32 %v3_a100 to i8*
  store i8 %v1_a100, i8* %v4_a100, align 1
  %v0_a104 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a104, label %bb86, label %bb85

bb85:                                             ; preds = %bb84
  %v1_a104 = load i32, i32* %r2.global-to-local, align 4
  %v2_a104 = trunc i32 %v1_a104 to i8
  %v3_a104 = load i32, i32* %r4.global-to-local, align 4
  %v4_a104 = add i32 %v3_a104, 6
  %v5_a104 = inttoptr i32 %v4_a104 to i8*
  store i8 %v2_a104, i8* %v5_a104, align 1
  br label %bb86

bb86:                                             ; preds = %bb84, %bb85
  %v3_a108 = load i32, i32* %stack_var_-40, align 4
  %v5_a110 = mul i32 %v3_a108, 24
  store i32 %v5_a110, i32* %r3.global-to-local, align 4
  store i32 %v6_9ef4, i32* %r2.global-to-local, align 4
  %v1_a118 = load i32, i32* %r4.global-to-local, align 4
  %v2_a118 = add i32 %v1_a118, 12
  %v3_a118 = inttoptr i32 %v2_a118 to i32*
  store i32 %v6_9ef4, i32* %v3_a118, align 4
  %v0_a11c = load i32, i32* %r3.global-to-local, align 4
  %v1_a11c = load i32, i32* @sb, align 4
  %v2_a11c = add i32 %v1_a11c, %v0_a11c
  store i32 %v2_a11c, i32* %r3.global-to-local, align 4
  %v0_a120 = load i32, i32* %r1.global-to-local, align 4
  %v1_a120 = trunc i32 %v0_a120 to i8
  %v2_a120 = load i32, i32* %r4.global-to-local, align 4
  %v3_a120 = add i32 %v2_a120, 5
  %v4_a120 = inttoptr i32 %v3_a120 to i8*
  store i8 %v1_a120, i8* %v4_a120, align 1
  %v0_a124 = load i32, i32* %r3.global-to-local, align 4
  %v1_a124 = add i32 %v0_a124, 16
  %v2_a124 = inttoptr i32 %v1_a124 to i32*
  %v3_a124 = load i32, i32* %v2_a124, align 4
  store i32 %v3_a124, i32* %r2.global-to-local, align 4
  %v0_a128 = load i32, i32* %r4.global-to-local, align 4
  %v1_a128 = add i32 %v0_a128, 20
  store i32 %v1_a128, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_a130 = load i32, i32* %r0.global-to-local, align 4
  %v1_a130 = trunc i32 %v0_a130 to i8
  %v3_a130 = add i32 %v0_a128, 23
  %v4_a130 = inttoptr i32 %v3_a130 to i8*
  store i8 %v1_a130, i8* %v4_a130, align 1
  %v0_a134 = load i32, i32* %r3.global-to-local, align 4
  %v1_a134 = trunc i32 %v0_a134 to i8
  %v2_a134 = load i32, i32* %r1.global-to-local, align 4
  %v3_a134 = add i32 %v2_a134, 2
  %v4_a134 = inttoptr i32 %v3_a134 to i8*
  store i8 %v1_a134, i8* %v4_a134, align 1
  %v0_a138 = load i32, i32* %r4.global-to-local, align 4
  %v1_a138 = add i32 %v0_a138, 24
  %v2_a138 = inttoptr i32 %v1_a138 to i8*
  %v3_a138 = load i8, i8* %v2_a138, align 1
  %tmp99 = urem i8 %v3_a138, 16
  %v1_a13c = zext i8 %tmp99 to i32
  %v1_a140 = or i32 %v1_a13c, 64
  store i32 %v1_a140, i32* %r3.global-to-local, align 4
  %v1_a144 = trunc i32 %v1_a140 to i8
  store i8 %v1_a144, i8* %v2_a138, align 1
  %v0_a148 = load i32, i32* %r2.global-to-local, align 4
  %v1_a148 = load i32, i32* %r4.global-to-local, align 4
  %v2_a148 = add i32 %v1_a148, 16
  %v3_a148 = inttoptr i32 %v2_a148 to i32*
  store i32 %v0_a148, i32* %v3_a148, align 4
  %v0_a14c = load i32, i32* %r4.global-to-local, align 4
  %v1_a14c = add i32 %v0_a14c, 24
  %v2_a14c = inttoptr i32 %v1_a14c to i8*
  %v3_a14c = load i8, i8* %v2_a14c, align 1
  %v1_a150 = and i8 %v3_a14c, -16
  %v1_a154 = or i8 %v1_a150, 5
  store i8 %v1_a154, i8* %v2_a14c, align 1
  %v0_a160 = load i32, i32* %r4.global-to-local, align 4
  %v1_a160 = add i32 %v0_a160, 24
  store i32 %v1_a160, i32* %r5.global-to-local, align 4
  %v3_a164 = add i32 %v0_a160, 25
  %v4_a164 = inttoptr i32 %v3_a164 to i8*
  store i8 %v5_9e0c, i8* %v4_a164, align 1
  store i32 %v4_a028, i32* %r1.global-to-local, align 4
  store i32 %tmp82, i32* %r3.global-to-local, align 4
  store i32 %v3_a048, i32* %r2.global-to-local, align 4
  %v2_a174 = load i32, i32* %r5.global-to-local, align 4
  %v3_a174 = add i32 %v2_a174, 4
  %v4_a174 = inttoptr i32 %v3_a174 to i8*
  store i8 %v5_a058, i8* %v4_a174, align 1
  %v0_a178 = load i32, i32* %r1.global-to-local, align 4
  %v1_a178 = trunc i32 %v0_a178 to i8
  %v2_a178 = load i32, i32* %r5.global-to-local, align 4
  %v3_a178 = add i32 %v2_a178, 2
  %v4_a178 = inttoptr i32 %v3_a178 to i8*
  store i8 %v1_a178, i8* %v4_a178, align 1
  %v0_a17c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a17c, label %bb88, label %bb87

bb87:                                             ; preds = %bb86
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb88

bb88:                                             ; preds = %bb86, %bb87
  store i32 %v4_a180, i32* %r1.global-to-local, align 4
  %v0_a184 = load i32, i32* %r2.global-to-local, align 4
  %v1_a184 = trunc i32 %v0_a184 to i8
  %v2_a184 = load i32, i32* %r5.global-to-local, align 4
  %v3_a184 = add i32 %v2_a184, 3
  %v4_a184 = inttoptr i32 %v3_a184 to i8*
  store i8 %v1_a184, i8* %v4_a184, align 1
  store i32 %v6_9e28, i32* %r2.global-to-local, align 4
  %v0_a18c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a18c, label %bb90, label %bb89

bb89:                                             ; preds = %bb88
  %v1_a18c = load i32, i32* %r3.global-to-local, align 4
  %v2_a18c = trunc i32 %v1_a18c to i8
  %v3_a18c = load i32, i32* %r5.global-to-local, align 4
  %v4_a18c = add i32 %v3_a18c, 6
  %v5_a18c = inttoptr i32 %v4_a18c to i8*
  store i8 %v2_a18c, i8* %v5_a18c, align 1
  br label %bb90

bb90:                                             ; preds = %bb88, %bb89
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_a194 = load i32, i32* %r1.global-to-local, align 4
  %v1_a194 = trunc i32 %v0_a194 to i8
  %v2_a194 = load i32, i32* %r5.global-to-local, align 4
  %v3_a194 = add i32 %v2_a194, 5
  %v4_a194 = inttoptr i32 %v3_a194 to i8*
  store i8 %v1_a194, i8* %v4_a194, align 1
  %v0_a198 = load i32, i32* %r2.global-to-local, align 4
  %v1_a198 = trunc i32 %v0_a198 to i8
  %v2_a198 = load i32, i32* %r5.global-to-local, align 4
  %v3_a198 = add i32 %v2_a198, 8
  %v4_a198 = inttoptr i32 %v3_a198 to i8*
  store i8 %v1_a198, i8* %v4_a198, align 1
  %v0_a19c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a19c, label %bb92, label %bb91

bb91:                                             ; preds = %bb90
  %v1_a19c = load i32, i32* %r0.global-to-local, align 4
  %v2_a19c = trunc i32 %v1_a19c to i8
  %v3_a19c = load i32, i32* %r5.global-to-local, align 4
  %v4_a19c = add i32 %v3_a19c, 7
  %v5_a19c = inttoptr i32 %v4_a19c to i8*
  store i8 %v2_a19c, i8* %v5_a19c, align 1
  br label %bb92

bb92:                                             ; preds = %bb90, %bb91
  %v0_a1a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1a0 = trunc i32 %v0_a1a0 to i8
  %v2_a1a0 = load i32, i32* %r5.global-to-local, align 4
  %v3_a1a0 = add i32 %v2_a1a0, 9
  %v4_a1a0 = inttoptr i32 %v3_a1a0 to i8*
  store i8 %v1_a1a0, i8* %v4_a1a0, align 1
  %v0_a1a4 = call i32 @function_ef90()
  store i32 %v0_a1a4, i32* %r0.global-to-local, align 4
  store i32 %v1_9f6c, i32* %r1.global-to-local, align 4
  store i1 %v2_a1b0, i1* %cpsr_z.global-to-local, align 1
  %v1_a1b4 = sub i32 1023, %v0_a1a4
  store i32 %v1_a1b4, i32* %r3.global-to-local, align 4
  br i1 %v2_a1b0, label %.thread19, label %.thread20

.thread19:                                        ; preds = %bb92
  %v2_a1bc = load i32, i32* %r5.global-to-local, align 4
  %v3_a1bc = add i32 %v2_a1bc, 16
  %v4_a1bc = inttoptr i32 %v3_a1bc to i32*
  store i32 %v1_a1b4, i32* %v4_a1bc, align 4
  br label %bb93

.thread20:                                        ; preds = %bb92
  %v1_a1b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_a1b8 = add i32 %v1_a1b8, 16
  %v3_a1b8 = inttoptr i32 %v2_a1b8 to i32*
  %v4_a1b8 = load i32, i32* %v3_a1b8, align 4
  store i32 %v4_a1b8, i32* %r3.global-to-local, align 4
  %v2_a1c0 = load i32, i32* %r5.global-to-local, align 4
  %v3_a1c0 = add i32 %v2_a1c0, 16
  %v4_a1c0 = inttoptr i32 %v3_a1c0 to i32*
  store i32 %v4_a1b8, i32* %v4_a1c0, align 4
  br label %bb93

bb93:                                             ; preds = %.thread19, %.thread20
  store i32 %v4_a1c4, i32* %r3.global-to-local, align 4
  %v0_a1c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_a1c8 = add i32 %v0_a1c8, 44
  store i32 %v1_a1c8, i32* %r6.global-to-local, align 4
  %v1_a1cc = load i32, i32* %r5.global-to-local, align 4
  %v2_a1cc = add i32 %v1_a1cc, 12
  %v3_a1cc = inttoptr i32 %v2_a1cc to i32*
  store i32 %v0_a1a4, i32* %v3_a1cc, align 4
  %v0_a1d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a1d0 = trunc i32 %v0_a1d0 to i8
  %v2_a1d0 = load i32, i32* %r6.global-to-local, align 4
  %v3_a1d0 = add i32 %v2_a1d0, 1
  %v4_a1d0 = inttoptr i32 %v3_a1d0 to i8*
  store i8 %v1_a1d0, i8* %v4_a1d0, align 1
  %v3_a1d4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a1d4, i32* %r3.global-to-local, align 4
  store i32 %v1_9da8, i32* %r1.global-to-local, align 4
  %v1_a1dc = add i32 %v3_a1d4, 1
  store i32 %v1_a1dc, i32* %r4.global-to-local, align 4
  store i32 %v4_a1e0, i32* %r2.global-to-local, align 4
  %v9_a1e4 = icmp eq i32 %v1_a1dc, %v1_9da8
  store i1 %v9_a1e4, i1* %cpsr_z.global-to-local, align 1
  %v0_a1e8 = load i32, i32* %sl.global-to-local, align 4
  %v1_a1e8 = trunc i32 %v0_a1e8 to i8
  %v2_a1e8 = load i32, i32* %r6.global-to-local, align 4
  %v3_a1e8 = add i32 %v2_a1e8, 5
  %v4_a1e8 = inttoptr i32 %v3_a1e8 to i8*
  store i8 %v1_a1e8, i8* %v4_a1e8, align 1
  %v0_a1ec = load i32, i32* %r2.global-to-local, align 4
  %v1_a1ec = trunc i32 %v0_a1ec to i8
  %v2_a1ec = load i32, i32* %r6.global-to-local, align 4
  %v3_a1ec = inttoptr i32 %v2_a1ec to i8*
  store i8 %v1_a1ec, i8* %v3_a1ec, align 1
  %v0_a1f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_a1f0 = trunc i32 %v0_a1f0 to i8
  %v2_a1f0 = load i32, i32* %r6.global-to-local, align 4
  %v3_a1f0 = add i32 %v2_a1f0, 2
  %v4_a1f0 = inttoptr i32 %v3_a1f0 to i8*
  store i8 %v1_a1f0, i8* %v4_a1f0, align 1
  %v0_a1f4 = load i32, i32* %fp.global-to-local, align 4
  %v1_a1f4 = trunc i32 %v0_a1f4 to i8
  %v2_a1f4 = load i32, i32* %r6.global-to-local, align 4
  %v3_a1f4 = add i32 %v2_a1f4, 3
  %v4_a1f4 = inttoptr i32 %v3_a1f4 to i8*
  store i8 %v1_a1f4, i8* %v4_a1f4, align 1
  %v0_a1f8 = load i32, i32* %r8.global-to-local, align 4
  %v1_a1f8 = trunc i32 %v0_a1f8 to i8
  %v2_a1f8 = load i32, i32* %r6.global-to-local, align 4
  %v3_a1f8 = add i32 %v2_a1f8, 4
  %v4_a1f8 = inttoptr i32 %v3_a1f8 to i8*
  store i8 %v1_a1f8, i8* %v4_a1f8, align 1
  %v0_a1fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_a1fc, i32* %stack_var_-40, align 4
  %v5_a200 = icmp slt i32 %v1_a1dc, %v1_9da8
  br i1 %v5_a200, label %dec_label_pc_a078, label %dec_label_pc_a204.preheader

dec_label_pc_a204.preheader:                      ; preds = %bb93, %dec_label_pc_9f50
  %v1_a224 = add i32 %v6_9ea0, 8
  %v1_a228 = add i32 %v6_9ea0, 52
  %v2_a234 = icmp eq i32 %v6_9ef4, -1
  %v3_a3fc = icmp eq i32 %v3_9f70, 65535
  %v2_a46c = icmp eq i32 %v1_9f6c, 0
  %v2_a488 = icmp eq i32 %v1_9ec0, 0
  br label %dec_label_pc_a204

dec_label_pc_a204:                                ; preds = %dec_label_pc_a204.preheader, %dec_label_pc_a4b0
  store i32 %v1_9da8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_9f68, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_9f68, label %dec_label_pc_a4b0, label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %dec_label_pc_a204
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v6_9ea0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v1_a224, i32* @fp, align 4
  store i32 %v1_a228, i32* @sl, align 4
  br label %dec_label_pc_a35c

dec_label_pc_a230:                                ; preds = %dec_label_pc_a35c
  store i32 %v6_9ef4, i32* %r2.global-to-local, align 4
  store i1 %v2_a234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a234, label %dec_label_pc_a3ec, label %dec_label_pc_a23c

dec_label_pc_a23c:                                ; preds = %dec_label_pc_a384, %dec_label_pc_a230
  store i32 %v3_9f70, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a3fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a3fc, label %dec_label_pc_a408, label %dec_label_pc_a250

dec_label_pc_a250:                                ; preds = %dec_label_pc_a3ec.dec_label_pc_a250_crit_edge, %dec_label_pc_a23c
  %v1_a254 = phi i32 [ %v1_a254.pre, %dec_label_pc_a3ec.dec_label_pc_a250_crit_edge ], [ 65535, %dec_label_pc_a23c ]
  store i32 %v3_9f74, i32* %r1.global-to-local, align 4
  %v9_a254 = icmp eq i32 %v3_9f74, %v1_a254
  store i1 %v9_a254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a254, label %dec_label_pc_a440, label %dec_label_pc_a25c

dec_label_pc_a25c:                                ; preds = %dec_label_pc_a408.dec_label_pc_a25c_crit_edge, %dec_label_pc_a250
  %v1_a260 = phi i32 [ %v1_a260.pre, %dec_label_pc_a408.dec_label_pc_a25c_crit_edge ], [ %v1_a254, %dec_label_pc_a250 ]
  store i32 %v3_9f78, i32* %r2.global-to-local, align 4
  %v9_a260 = icmp eq i32 %v3_9f78, %v1_a260
  store i1 %v9_a260, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a260, label %dec_label_pc_a45c, label %dec_label_pc_a268

dec_label_pc_a268:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a25c
  store i32 %v1_9f6c, i32* %r3.global-to-local, align 4
  store i1 %v2_a46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a46c, label %dec_label_pc_a480, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_a268
  %v1_a270 = load i32, i32* @r5, align 4
  %v2_a270 = add i32 %v1_a270, 16
  %v3_a270 = inttoptr i32 %v2_a270 to i32*
  %v4_a270 = load i32, i32* %v3_a270, align 4
  store i32 %v4_a270, i32* %r3.global-to-local, align 4
  %v2_a274 = load i32, i32* @r6, align 4
  %v3_a274 = add i32 %v2_a274, 16
  %v4_a274 = inttoptr i32 %v3_a274 to i32*
  store i32 %v4_a270, i32* %v4_a274, align 4
  br label %dec_label_pc_a27c

dec_label_pc_a27c:                                ; preds = %bb98, %.thread21
  store i32 %v1_9ec0, i32* %r1.global-to-local, align 4
  store i1 %v2_a488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a488, label %dec_label_pc_a288, label %dec_label_pc_a494

dec_label_pc_a288:                                ; preds = %dec_label_pc_a27c, %dec_label_pc_a480, %dec_label_pc_a494
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a28c = load i32, i32* @r8, align 4
  %v1_a28c = trunc i32 %v0_a28c to i8
  %v2_a28c = load i32, i32* @r5, align 4
  %v3_a28c = add i32 %v2_a28c, 10
  %v4_a28c = inttoptr i32 %v3_a28c to i8*
  store i8 %v1_a28c, i8* %v4_a28c, align 1
  %v0_a290 = load i32, i32* @r8, align 4
  %v1_a290 = trunc i32 %v0_a290 to i8
  %v2_a290 = load i32, i32* @r5, align 4
  %v3_a290 = add i32 %v2_a290, 11
  %v4_a290 = inttoptr i32 %v3_a290 to i8*
  store i8 %v1_a290, i8* %v4_a290, align 1
  %v0_a294 = load i32, i32* @r5, align 4
  store i32 %v0_a294, i32* @r0, align 4
  %v2_a298 = call i32 @function_d3d4(i32 %v0_a294, i32 20)
  %v3_a298 = trunc i32 %v2_a298 to i8
  %v4_a29c = sdiv i32 %v2_a298, 256
  store i32 %v4_a29c, i32* %r3.global-to-local, align 4
  %v1_a2a0 = trunc i32 %v4_a29c to i8
  %v2_a2a0 = load i32, i32* @r5, align 4
  %v3_a2a0 = add i32 %v2_a2a0, 11
  %v4_a2a0 = inttoptr i32 %v3_a2a0 to i8*
  store i8 %v1_a2a0, i8* %v4_a2a0, align 1
  %v3_a2a4 = load i32, i32* @r5, align 4
  %v4_a2a4 = add i32 %v3_a2a4, 10
  %v5_a2a4 = inttoptr i32 %v4_a2a4 to i8*
  store i8 %v3_a298, i8* %v5_a2a4, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a2ac = load i32, i32* @r8, align 4
  %v1_a2ac = trunc i32 %v0_a2ac to i8
  %v2_a2ac = load i32, i32* @r6, align 4
  %v3_a2ac = add i32 %v2_a2ac, 10
  %v4_a2ac = inttoptr i32 %v3_a2ac to i8*
  store i8 %v1_a2ac, i8* %v4_a2ac, align 1
  %v0_a2b0 = load i32, i32* @r8, align 4
  %v1_a2b0 = trunc i32 %v0_a2b0 to i8
  %v2_a2b0 = load i32, i32* @r6, align 4
  %v3_a2b0 = add i32 %v2_a2b0, 11
  %v4_a2b0 = inttoptr i32 %v3_a2b0 to i8*
  store i8 %v1_a2b0, i8* %v4_a2b0, align 1
  %v0_a2b4 = load i32, i32* @r6, align 4
  store i32 %v0_a2b4, i32* @r0, align 4
  %v2_a2b8 = call i32 @function_d3d4(i32 %v0_a2b4, i32 20)
  %v3_a2b8 = trunc i32 %v2_a2b8 to i8
  store i32 %v2_a2b8, i32* %r0.global-to-local, align 4
  %v4_a2bc = sdiv i32 %v2_a2b8, 256
  store i32 %v4_a2bc, i32* %r3.global-to-local, align 4
  %v3_a2c0 = load i32, i32* @r6, align 4
  %v4_a2c0 = add i32 %v3_a2c0, 10
  %v5_a2c0 = inttoptr i32 %v4_a2c0 to i8*
  store i8 %v3_a2b8, i8* %v5_a2c0, align 1
  %v0_a2c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a2c4 = trunc i32 %v0_a2c4 to i8
  %v2_a2c4 = load i32, i32* @r6, align 4
  %v3_a2c4 = add i32 %v2_a2c4, 11
  %v4_a2c4 = inttoptr i32 %v3_a2c4 to i8*
  store i8 %v1_a2c4, i8* %v4_a2c4, align 1
  %v0_a2c8 = load i32, i32* @r7, align 4
  %v1_a2c8 = add i32 %v0_a2c8, 4
  %v2_a2c8 = inttoptr i32 %v1_a2c8 to i8*
  %v3_a2c8 = load i8, i8* %v2_a2c8, align 1
  %v4_a2c8 = zext i8 %v3_a2c8 to i32
  store i32 %v4_a2c8, i32* %r3.global-to-local, align 4
  %v1_a2cc = add i32 %v0_a2c8, 5
  %v2_a2cc = inttoptr i32 %v1_a2cc to i8*
  %v3_a2cc = load i8, i8* %v2_a2cc, align 1
  %v4_a2cc = zext i8 %v3_a2cc to i32
  store i32 %v0_a2c8, i32* @r1, align 4
  %v4_a2d4 = mul nuw nsw i32 %v4_a2cc, 256
  %v5_a2d4 = or i32 %v4_a2d4, %v4_a2c8
  store i32 %v5_a2d4, i32* %r2.global-to-local, align 4
  %v0_a2d8 = load i32, i32* @r8, align 4
  %v1_a2d8 = trunc i32 %v0_a2d8 to i8
  %v3_a2d8 = add i32 %v0_a2c8, 6
  %v4_a2d8 = inttoptr i32 %v3_a2d8 to i8*
  store i8 %v1_a2d8, i8* %v4_a2d8, align 1
  %v0_a2dc = load i32, i32* @fp, align 4
  store i32 %v0_a2dc, i32* %r3.global-to-local, align 4
  %v0_a2e0 = load i32, i32* @r8, align 4
  %v1_a2e0 = trunc i32 %v0_a2e0 to i8
  %v2_a2e0 = load i32, i32* @r7, align 4
  %v3_a2e0 = add i32 %v2_a2e0, 7
  %v4_a2e0 = inttoptr i32 %v3_a2e0 to i8*
  store i8 %v1_a2e0, i8* %v4_a2e0, align 1
  %v0_a2e4 = load i32, i32* @r6, align 4
  store i32 %v0_a2e4, i32* %r0.global-to-local, align 4
  %v4_a2e8 = call i32 @function_d430(i32 %v0_a2e4, i32 %v0_a2c8, i32 %v5_a2d4, i32 %v0_a2dc)
  %v5_a2e8 = trunc i32 %v4_a2e8 to i8
  store i32 %v4_a2e8, i32* %r0.global-to-local, align 4
  %v3_a2ec = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a2ec, i32* %r3.global-to-local, align 4
  %v3_a2f0 = mul i32 %v3_a2ec, 32
  store i32 %v3_a2f0, i32* %r2.global-to-local, align 4
  %v0_a2f4 = load i32, i32* @r5, align 4
  %v1_a2f4 = add i32 %v0_a2f4, 16
  %v2_a2f4 = inttoptr i32 %v1_a2f4 to i32*
  %v3_a2f4 = load i32, i32* %v2_a2f4, align 4
  store i32 %v3_a2f4, i32* %r1.global-to-local, align 4
  %v5_a2f8 = mul i32 %v3_a2ec, 24
  store i32 %v5_a2f8, i32* %r2.global-to-local, align 4
  %v4_a2fc36 = udiv i32 %v4_a2e8, 256
  %v1_a300 = trunc i32 %v4_a2fc36 to i8
  %v2_a300 = load i32, i32* @r7, align 4
  %v3_a300 = add i32 %v2_a300, 7
  %v4_a300 = inttoptr i32 %v3_a300 to i8*
  store i8 %v1_a300, i8* %v4_a300, align 1
  %v0_a304 = load i32, i32* %r2.global-to-local, align 4
  %v1_a304 = load i32, i32* @sb, align 4
  %v2_a304 = add i32 %v1_a304, %v0_a304
  store i32 %v2_a304, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_a30c = load i32, i32* @r7, align 4
  %v4_a30c = add i32 %v3_a30c, 6
  %v5_a30c = inttoptr i32 %v4_a30c to i8*
  store i8 %v5_a2e8, i8* %v5_a30c, align 1
  %v0_a310 = load i32, i32* %r1.global-to-local, align 4
  %v1_a310 = load i32, i32* %lr.global-to-local, align 4
  %v2_a310 = add i32 %v1_a310, 4
  %v3_a310 = inttoptr i32 %v2_a310 to i32*
  store i32 %v0_a310, i32* %v3_a310, align 4
  %v0_a314 = load i32, i32* %r3.global-to-local, align 4
  %v1_a314 = trunc i32 %v0_a314 to i8
  %v2_a314 = load i32, i32* %r2.global-to-local, align 4
  %v3_a314 = load i32, i32* @sb, align 4
  %v4_a314 = add i32 %v3_a314, %v2_a314
  %v5_a314 = inttoptr i32 %v4_a314 to i8*
  store i8 %v1_a314, i8* %v5_a314, align 1
  %v0_a318 = load i32, i32* @r8, align 4
  %v1_a318 = trunc i32 %v0_a318 to i8
  %v2_a318 = load i32, i32* %lr.global-to-local, align 4
  %v3_a318 = add i32 %v2_a318, 2
  %v4_a318 = inttoptr i32 %v3_a318 to i8*
  store i8 %v1_a318, i8* %v4_a318, align 1
  %v0_a31c = load i32, i32* @r8, align 4
  %v1_a31c = trunc i32 %v0_a31c to i8
  %v2_a31c = load i32, i32* %lr.global-to-local, align 4
  %v3_a31c = add i32 %v2_a31c, 1
  %v4_a31c = inttoptr i32 %v3_a31c to i8*
  store i8 %v1_a31c, i8* %v4_a31c, align 1
  %v0_a320 = load i32, i32* @r8, align 4
  %v1_a320 = trunc i32 %v0_a320 to i8
  %v2_a320 = load i32, i32* %lr.global-to-local, align 4
  %v3_a320 = add i32 %v2_a320, 3
  %v4_a320 = inttoptr i32 %v3_a320 to i8*
  store i8 %v1_a320, i8* %v4_a320, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a32c = load i32, i32* @r5, align 4
  store i32 %v0_a32c, i32* %r1.global-to-local, align 4
  store i32 %v3_9f18, i32* %r0.global-to-local, align 4
  %v0_a334 = load i32, i32* @sl, align 4
  store i32 %v0_a334, i32* %r2.global-to-local, align 4
  %v0_a338 = load i32, i32* %lr.global-to-local, align 4
  %v4_a338 = inttoptr i32 %v0_a338 to %sockaddr*
  %v7_a340 = inttoptr i32 %v0_a32c to i32*
  %v9_a340 = call i32 @sendto(i32 %v3_9f18, i32* %v7_a340, i32 %v0_a334, i32 16384, %sockaddr* %v4_a338, i32 16)
  %v3_a344 = load i32, i32* %stack_var_-40, align 4
  %v1_a348 = add i32 %v3_a344, 1
  store i32 %v1_a348, i32* %r0.global-to-local, align 4
  store i32 %v1_9da8, i32* %r3.global-to-local, align 4
  %v9_a350 = icmp eq i32 %v1_a348, %v1_9da8
  store i1 %v9_a350, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a348, i32* %stack_var_-40, align 4
  %v6_a358 = icmp slt i32 %v1_a348, %v1_9da8
  br i1 %v6_a358, label %dec_label_pc_a35c, label %dec_label_pc_a4b0

dec_label_pc_a35c:                                ; preds = %dec_label_pc_a288, %dec_label_pc_a218
  %v1_a370 = phi i32 [ %v1_a348, %dec_label_pc_a288 ], [ 0, %dec_label_pc_a218 ]
  %v5_a360 = mul i32 %v1_a370, 24
  %v1_a364 = load i32, i32* @sb, align 4
  %v2_a364 = add i32 %v1_a364, %v5_a360
  store i32 %v2_a364, i32* %r3.global-to-local, align 4
  store i32 %v4_9dd4, i32* %r1.global-to-local, align 4
  %v1_a36c = add i32 %v2_a364, 20
  %v2_a36c = inttoptr i32 %v1_a36c to i8*
  %v3_a36c = load i8, i8* %v2_a36c, align 1
  %v4_a36c = zext i8 %v3_a36c to i32
  store i32 %v4_a36c, i32* %r2.global-to-local, align 4
  %v4_a370 = mul i32 %v1_a370, 4
  %v5_a370 = add i32 %v4_a370, %v4_9dd4
  %v6_a370 = inttoptr i32 %v5_a370 to i32*
  %v7_a370 = load i32, i32* %v6_a370, align 4
  store i32 %v7_a370, i32* @r5, align 4
  %v2_a374 = icmp ugt i8 %v3_a36c, 30
  %v7_a374 = icmp eq i8 %v3_a36c, 31
  store i1 %v7_a374, i1* %cpsr_z.global-to-local, align 1
  %v1_a378 = add i32 %v7_a370, 24
  store i32 %v1_a378, i32* @r6, align 4
  %v1_a37c = add i32 %v7_a370, 44
  store i32 %v1_a37c, i32* @r7, align 4
  %v2_a380 = xor i1 %v7_a374, true
  %v3_a380 = and i1 %v2_a374, %v2_a380
  br i1 %v3_a380, label %dec_label_pc_a230, label %dec_label_pc_a384

dec_label_pc_a384:                                ; preds = %dec_label_pc_a35c
  %v1_a384 = add i32 %v2_a364, 16
  %v2_a384 = inttoptr i32 %v1_a384 to i32*
  %v3_a384 = load i32, i32* %v2_a384, align 4
  store i32 %v3_a384, i32* %r4.global-to-local, align 4
  %v0_a388 = call i32 @function_ef90()
  store i32 %v0_a388, i32* %r0.global-to-local, align 4
  %v3_a38c = load i32, i32* %stack_var_-40, align 4
  %v5_a394 = mul i32 %v3_a38c, 24
  %v0_a398 = load i32, i32* %r4.global-to-local, align 4
  %v1_a39c = load i32, i32* @sb, align 4
  %v2_a39c = add i32 %v1_a39c, %v5_a394
  store i32 %v2_a39c, i32* %r1.global-to-local, align 4
  %v1_a3a0 = and i32 %v0_a398, 65280
  store i32 %v1_a3a0, i32* %r3.global-to-local, align 4
  %v1_a398 = udiv i32 %v0_a398, 256
  %v3_a3a4 = and i32 %v1_a398, 65280
  store i32 %v3_a3a4, i32* %r2.global-to-local, align 4
  %v1_a3ac = add i32 %v2_a39c, 20
  %v2_a3ac = inttoptr i32 %v1_a3ac to i8*
  %v3_a3ac = load i8, i8* %v2_a3ac, align 1
  %v4_a3ac = zext i8 %v3_a3ac to i32
  store i32 %v4_a3ac, i32* %lr.global-to-local, align 4
  %v2_a3b8 = call i32 @llvm.bswap.i32(i32 %v0_a398)
  %v7_a3bc = lshr i32 %v0_a388, %v4_a3ac
  %v8_a3bc = add i32 %v7_a3bc, %v2_a3b8
  %v3_a3c8 = mul i32 %v8_a3bc, 16777216
  %v1_a3cc = and i32 %v8_a3bc, 65280
  store i32 %v1_a3cc, i32* %r0.global-to-local, align 4
  store i32 %v6_9ef4, i32* %r2.global-to-local, align 4
  %v4_a3d8 = mul nuw nsw i32 %v1_a3cc, 256
  %v5_a3d8 = or i32 %v4_a3d8, %v3_a3c8
  store i32 %v5_a3d8, i32* %r1.global-to-local, align 4
  %v2_a3dc = call i32 @llvm.bswap.i32(i32 %v8_a3bc)
  store i32 %v2_a3dc, i32* %r3.global-to-local, align 4
  store i1 %v2_a234, i1* %cpsr_z.global-to-local, align 1
  %v1_a3e4 = load i32, i32* @r5, align 4
  %v2_a3e4 = add i32 %v1_a3e4, 16
  %v3_a3e4 = inttoptr i32 %v2_a3e4 to i32*
  store i32 %v2_a3dc, i32* %v3_a3e4, align 4
  br i1 %v2_a234, label %dec_label_pc_a3ec, label %dec_label_pc_a23c

dec_label_pc_a3ec:                                ; preds = %dec_label_pc_a384, %dec_label_pc_a230
  %v0_a3ec = call i32 @function_ef90()
  store i32 %v0_a3ec, i32* %r0.global-to-local, align 4
  store i32 %v3_9f70, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a3fc, i1* %cpsr_z.global-to-local, align 1
  %v1_a400 = load i32, i32* @r5, align 4
  %v2_a400 = add i32 %v1_a400, 12
  %v3_a400 = inttoptr i32 %v2_a400 to i32*
  store i32 %v0_a3ec, i32* %v3_a400, align 4
  br i1 %v3_a3fc, label %dec_label_pc_a408, label %dec_label_pc_a3ec.dec_label_pc_a250_crit_edge

dec_label_pc_a3ec.dec_label_pc_a250_crit_edge:    ; preds = %dec_label_pc_a3ec
  %v1_a254.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a250

dec_label_pc_a408:                                ; preds = %dec_label_pc_a3ec, %dec_label_pc_a23c
  %v0_a408 = call i32 @function_ef90()
  %v3_a410 = urem i32 %v0_a408, 65536
  store i32 %v3_a410, i32* %r0.global-to-local, align 4
  %v1_a418 = sub nsw i32 999, %v3_a410
  store i32 %v1_a418, i32* %r2.global-to-local, align 4
  %v3_a41c = sdiv i32 %v1_a418, 256
  store i32 %v3_a41c, i32* %r1.global-to-local, align 4
  %v3_a42035 = udiv i32 %v3_a410, 256
  store i32 %v3_a42035, i32* %r3.global-to-local, align 4
  %v1_a424 = trunc i32 %v3_a42035 to i8
  %v2_a424 = load i32, i32* @r5, align 4
  %v3_a424 = add i32 %v2_a424, 5
  %v4_a424 = inttoptr i32 %v3_a424 to i8*
  store i8 %v1_a424, i8* %v4_a424, align 1
  %v0_a428 = load i32, i32* %r0.global-to-local, align 4
  %v1_a428 = trunc i32 %v0_a428 to i8
  %v2_a428 = load i32, i32* @r5, align 4
  %v3_a428 = add i32 %v2_a428, 4
  %v4_a428 = inttoptr i32 %v3_a428 to i8*
  store i8 %v1_a428, i8* %v4_a428, align 1
  %v0_a42c = load i32, i32* %r1.global-to-local, align 4
  %v1_a42c = trunc i32 %v0_a42c to i8
  %v2_a42c = load i32, i32* @r6, align 4
  %v3_a42c = add i32 %v2_a42c, 5
  %v4_a42c = inttoptr i32 %v3_a42c to i8*
  store i8 %v1_a42c, i8* %v4_a42c, align 1
  store i32 %v3_9f74, i32* %r1.global-to-local, align 4
  %v1_a434 = load i32, i32* @r4, align 4
  %v9_a434 = icmp eq i32 %v3_9f74, %v1_a434
  store i1 %v9_a434, i1* %cpsr_z.global-to-local, align 1
  %v0_a438 = load i32, i32* %r2.global-to-local, align 4
  %v1_a438 = trunc i32 %v0_a438 to i8
  %v2_a438 = load i32, i32* @r6, align 4
  %v3_a438 = add i32 %v2_a438, 4
  %v4_a438 = inttoptr i32 %v3_a438 to i8*
  store i8 %v1_a438, i8* %v4_a438, align 1
  %v0_a43c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a43c, label %dec_label_pc_a440, label %dec_label_pc_a408.dec_label_pc_a25c_crit_edge

dec_label_pc_a408.dec_label_pc_a25c_crit_edge:    ; preds = %dec_label_pc_a408
  %v1_a260.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a25c

dec_label_pc_a440:                                ; preds = %dec_label_pc_a408, %dec_label_pc_a250
  %v0_a440 = call i32 @function_ef90()
  %v1_a440 = trunc i32 %v0_a440 to i8
  store i32 %v0_a440, i32* %r0.global-to-local, align 4
  store i32 %v3_9f78, i32* %r2.global-to-local, align 4
  %v4_a448 = sdiv i32 %v0_a440, 256
  store i32 %v4_a448, i32* %r3.global-to-local, align 4
  %v1_a44c = load i32, i32* @r4, align 4
  %v9_a44c = icmp eq i32 %v3_9f78, %v1_a44c
  store i1 %v9_a44c, i1* %cpsr_z.global-to-local, align 1
  %v3_a450 = load i32, i32* @r5, align 4
  %v4_a450 = add i32 %v3_a450, 44
  %v5_a450 = inttoptr i32 %v4_a450 to i8*
  store i8 %v1_a440, i8* %v5_a450, align 1
  %v0_a454 = load i32, i32* %r3.global-to-local, align 4
  %v1_a454 = trunc i32 %v0_a454 to i8
  %v2_a454 = load i32, i32* @r7, align 4
  %v3_a454 = add i32 %v2_a454, 1
  %v4_a454 = inttoptr i32 %v3_a454 to i8*
  store i8 %v1_a454, i8* %v4_a454, align 1
  %v0_a458 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a458, label %dec_label_pc_a45c, label %dec_label_pc_a268

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a440, %dec_label_pc_a25c
  %v0_a45c = call i32 @function_ef90()
  %v1_a45c = trunc i32 %v0_a45c to i8
  store i32 %v0_a45c, i32* %r0.global-to-local, align 4
  %v4_a46037 = udiv i32 %v0_a45c, 256
  %v1_a464 = trunc i32 %v4_a46037 to i8
  %v2_a464 = load i32, i32* @r7, align 4
  %v3_a464 = add i32 %v2_a464, 3
  %v4_a464 = inttoptr i32 %v3_a464 to i8*
  store i8 %v1_a464, i8* %v4_a464, align 1
  store i32 %v1_9f6c, i32* %r3.global-to-local, align 4
  store i1 %v2_a46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a46c, label %bb97, label %bb96

bb96:                                             ; preds = %dec_label_pc_a45c
  %v1_a470 = load i32, i32* @r5, align 4
  %v2_a470 = add i32 %v1_a470, 16
  %v3_a470 = inttoptr i32 %v2_a470 to i32*
  %v4_a470 = load i32, i32* %v3_a470, align 4
  store i32 %v4_a470, i32* %r3.global-to-local, align 4
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_a45c, %bb96
  %v3_a474 = load i32, i32* @r7, align 4
  %v4_a474 = add i32 %v3_a474, 2
  %v5_a474 = inttoptr i32 %v4_a474 to i8*
  store i8 %v1_a45c, i8* %v5_a474, align 1
  %v0_a478 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a478, label %dec_label_pc_a480, label %bb98

bb98:                                             ; preds = %bb97
  %v1_a478 = load i32, i32* %r3.global-to-local, align 4
  %v2_a478 = load i32, i32* @r6, align 4
  %v3_a478 = add i32 %v2_a478, 16
  %v4_a478 = inttoptr i32 %v3_a478 to i32*
  store i32 %v1_a478, i32* %v4_a478, align 4
  br label %dec_label_pc_a27c

dec_label_pc_a480:                                ; preds = %dec_label_pc_a268, %bb97
  %v0_a480 = call i32 @function_ef90()
  store i32 %v0_a480, i32* %r0.global-to-local, align 4
  store i32 %v1_9ec0, i32* %r1.global-to-local, align 4
  store i1 %v2_a488, i1* %cpsr_z.global-to-local, align 1
  %v1_a48c = load i32, i32* @r6, align 4
  %v2_a48c = add i32 %v1_a48c, 16
  %v3_a48c = inttoptr i32 %v2_a48c to i32*
  store i32 %v0_a480, i32* %v3_a48c, align 4
  br i1 %v2_a488, label %dec_label_pc_a288, label %dec_label_pc_a494

dec_label_pc_a494:                                ; preds = %dec_label_pc_a27c, %dec_label_pc_a480
  %v0_a494 = load i32, i32* @r7, align 4
  %v1_a494 = add i32 %v0_a494, 8
  store i32 %v1_a494, i32* @r4, align 4
  store i32 %v1_a494, i32* %r0.global-to-local, align 4
  store i32 %v6_9ea0, i32* %r1.global-to-local, align 4
  %v2_a4a0 = call i32 @function_f044(i32 %v1_a494, i32 %v6_9ea0)
  store i32 %v2_a4a0, i32* %r0.global-to-local, align 4
  store i32 %v6_9ea0, i32* %r2.global-to-local, align 4
  %v0_a4a8 = load i32, i32* @r8, align 4
  %v1_a4a8 = trunc i32 %v0_a4a8 to i8
  %v2_a4a8 = load i32, i32* @r4, align 4
  %v4_a4a8 = add i32 %v2_a4a8, %v6_9ea0
  %v5_a4a8 = inttoptr i32 %v4_a4a8 to i8*
  store i8 %v1_a4a8, i8* %v5_a4a8, align 1
  br label %dec_label_pc_a288

dec_label_pc_a4b0:                                ; preds = %dec_label_pc_a288, %dec_label_pc_a204
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a4b4 = call i32 @time(i32* null)
  store i32 %v2_a4b4, i32* %r0.global-to-local, align 4
  store i32 %v2_9f04, i32* %r1.global-to-local, align 4
  %v9_a4bc = icmp eq i32 %v2_9f04, %v2_a4b4
  store i1 %v9_a4bc, i1* %cpsr_z.global-to-local, align 1
  %v6_a4c0 = icmp slt i32 %v2_9f04, %v2_a4b4
  br i1 %v6_a4c0, label %dec_label_pc_a4c4, label %dec_label_pc_a204

dec_label_pc_a4c4:                                ; preds = %dec_label_pc_a4b0, %dec_label_pc_9da4, %dec_label_pc_a4cc
  %v29_a4c8 = phi i32 [ -1, %dec_label_pc_9da4 ], [ %v1_a4d0, %dec_label_pc_a4cc ], [ %v2_a4b4, %dec_label_pc_a4b0 ]
  store i32 %v3_9da4, i32* %r4.global-to-local, align 4
  store i32 %v6_9da4, i32* %r5.global-to-local, align 4
  store i32 %v9_9da4, i32* %r6.global-to-local, align 4
  store i32 %v12_9da4, i32* %r7.global-to-local, align 4
  store i32 %v15_9da4, i32* %r8.global-to-local, align 4
  store i32 %v21_9da4, i32* %sl.global-to-local, align 4
  store i32 %v24_9da4, i32* %fp.global-to-local, align 4
  ret i32 %v29_a4c8

dec_label_pc_a4cc:                                ; preds = %dec_label_pc_9f28
  store i32 %v3_9f18, i32* %r0.global-to-local, align 4
  %v1_a4d0 = call i32 @close(i32 %v3_9f18)
  store i32 %v1_a4d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a4c4

; uselistorder directives
  uselistorder i32 %v1_a4d0, { 1, 0 }
  uselistorder i32 %v0_a45c, { 0, 2, 1 }
  uselistorder i32 %v0_a440, { 0, 2, 1 }
  uselistorder i32 %v3_a410, { 0, 2, 1 }
  uselistorder i32 %v2_a3dc, { 1, 0 }
  uselistorder i32 %v8_a3bc, { 1, 2, 0 }
  uselistorder i32 %v0_a398, { 1, 0, 2 }
  uselistorder i32 %v7_a370, { 1, 0, 2 }
  uselistorder i32 %v1_a348, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_a2ec, { 1, 0, 2 }
  uselistorder i32 %v4_a2e8, { 0, 2, 1 }
  uselistorder i32 %v0_a2c8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_a2b8, { 0, 2, 1 }
  uselistorder i32 %v4_a29c, { 1, 0 }
  uselistorder i1 %v2_a488, { 2, 3, 1, 0 }
  uselistorder i1 %v2_a46c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_a3fc, { 1, 0, 2, 3 }
  uselistorder i1 %v2_a234, { 3, 0, 1, 2 }
  uselistorder i32 %v0_a1a4, { 1, 0, 2 }
  uselistorder i32 %v3_a048, { 1, 0 }
  uselistorder i32 %tmp82, { 1, 0, 2 }
  uselistorder i32 %v1_9fc4, { 0, 2, 1 }
  uselistorder i32 %v1_9fbc, { 2, 1, 0 }
  uselistorder i32 %v1_9fb8, { 1, 0 }
  uselistorder i32 %v1_9fb4, { 1, 0 }
  uselistorder i32 %v1_9fa8, { 1, 0 }
  uselistorder i32 %v3_9fa0, { 2, 0, 1 }
  uselistorder i32 %v3_9f70, { 0, 1, 3, 2 }
  uselistorder i32 %v1_9f6c, { 4, 3, 5, 1, 2, 0 }
  uselistorder i1 %v2_9f68, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9f60, { 0, 3, 2, 1 }
  uselistorder i32 %v0_9f5c, { 0, 1, 3, 2 }
  uselistorder i32 %v3_9f18, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v2_9f04, { 2, 1, 0 }
  uselistorder i32 %v6_9ef4, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v1_9ec0, { 1, 0, 2, 3 }
  uselistorder i32 %v6_9ea0, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v6_9e28, { 1, 0, 2 }
  uselistorder i32 %v4_9dd4, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_9da8, { 1, 2, 3, 0, 4, 5, 6, 9, 7, 8 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 13, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 23, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 15, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 16, 9, 10, 11, 12, 14, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 44, 43, 46, 45, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 10, 11, 8, 9, 13, 12, 15, 14, 16, 18, 17, 19, 20, 25, 21, 22, 23, 24, 28, 26, 27, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder label %dec_label_pc_a4c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a494, { 1, 0 }
  uselistorder label %dec_label_pc_a480, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %dec_label_pc_a288, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a204, { 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_a4dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a4dc:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i8 @__decompiler_undefined_function_1()
  %tmp37 = call i8 @__decompiler_undefined_function_1()
  %tmp38 = call i8 @__decompiler_undefined_function_1()
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp44 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_a4dc = load i32, i32* @r4, align 4
  %v18_a4dc = load i32, i32* @sb, align 4
  %v1_a4e0 = urem i32 %arg2, 256
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %v1_a4e0, i32* %r0.global-to-local, align 4
  %v1_a4fc = urem i32 %arg4, 256
  store i32 %v1_a4fc, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_a50c = call i32* @calloc(i32 %v1_a4e0, i32 16)
  %v4_a50c = ptrtoint i32* %v2_a50c to i32
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v1_a4e0, i32* %r0.global-to-local, align 4
  %v2_a51c = call i32* @calloc(i32 %v1_a4e0, i32 4)
  %v4_a51c = ptrtoint i32* %v2_a51c to i32
  %v0_a520 = load i32, i32* @r5, align 4
  store i32 %v0_a520, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a52c = load i32, i32* @r7, align 4
  store i32 %v0_a52c, i32* %r3.global-to-local, align 4
  %v0_a530 = load i32, i32* @r4, align 4
  store i32 %v0_a530, i32* %r0.global-to-local, align 4
  %v5_a534 = inttoptr i32 %v0_a520 to i32*
  %v6_a534 = call i32 @function_8fc8(i32 %v0_a530, i32* %v5_a534, i32 2, i32 %v0_a52c, i32 %v4_a51c)
  %v1_a540 = urem i32 %v6_a534, 256
  store i32 %v1_a540, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a54c = load i32, i32* @r5, align 4
  store i32 %v0_a54c, i32* %r1.global-to-local, align 4
  %v0_a550 = load i32, i32* @r4, align 4
  store i32 %v0_a550, i32* %r0.global-to-local, align 4
  %v5_a554 = trunc i32 %v6_a534 to i8
  %v6_a558 = inttoptr i32 %v0_a54c to i32*
  %v7_a558 = call i32 @function_8fc8(i32 %v0_a550, i32* %v6_a558, i32 3, i32 65535, i32 %v6_a534)
  %v0_a55c = load i32, i32* @r5, align 4
  store i32 %v0_a55c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a558, i32* %sb.global-to-local, align 4
  %v0_a56c = load i32, i32* @r4, align 4
  store i32 %v0_a56c, i32* %r0.global-to-local, align 4
  %v5_a570 = inttoptr i32 %v0_a55c to i32*
  %v6_a570 = call i32 @function_8fc8(i32 %v0_a56c, i32* %v5_a570, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_a578 = urem i32 %v6_a570, 256
  store i32 %v1_a578, i32* %ip.global-to-local, align 4
  %v0_a57c = load i32, i32* @r5, align 4
  store i32 %v0_a57c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a588 = load i32, i32* @r4, align 4
  store i32 %v0_a588, i32* %r0.global-to-local, align 4
  %sext10 = mul i32 %v6_a570, 16777216
  %v5_a590 = sdiv i32 %sext10, 16777216
  %v6_a590 = inttoptr i32 %v0_a57c to i32*
  %v7_a590 = call i32 @function_8fc8(i32 %v0_a588, i32* %v6_a590, i32 5, i32 1, i32 %v5_a590)
  %v1_a59c = urem i32 %v7_a590, 256
  store i32 %v1_a59c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_a5a4 = load i32, i32* @r5, align 4
  store i32 %v0_a5a4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a5ac = load i32, i32* @r4, align 4
  store i32 %v0_a5ac, i32* %r0.global-to-local, align 4
  %sext11 = mul i32 %v7_a590, 16777216
  %v5_a5b4 = sdiv i32 %sext11, 16777216
  %v6_a5b4 = inttoptr i32 %v0_a5a4 to i32*
  %v7_a5b4 = call i32 @function_8fc8(i32 %v0_a5ac, i32* %v6_a5b4, i32 7, i32 65535, i32 %v5_a5b4)
  %v0_a5b8 = load i32, i32* @r5, align 4
  store i32 %v0_a5b8, i32* %r1.global-to-local, align 4
  %v3_a5bc = mul i32 %v7_a5b4, 65536
  store i32 %v3_a5bc, i32* @sl, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_a5c4 = load i32, i32* @r7, align 4
  store i32 %v0_a5c4, i32* %r3.global-to-local, align 4
  %v0_a5c8 = load i32, i32* @r4, align 4
  store i32 %v0_a5c8, i32* %r0.global-to-local, align 4
  %v5_a5cc = inttoptr i32 %v0_a5b8 to i32*
  %v6_a5cc = call i32 @function_8fc8(i32 %v0_a5c8, i32* %v5_a5cc, i32 10, i32 %v0_a5c4, i32 ptrtoint (i32* @0 to i32))
  %v1_a5d4 = urem i32 %v6_a5cc, 256
  store i32 %v1_a5d4, i32* %ip.global-to-local, align 4
  %v0_a5d8 = load i32, i32* @r5, align 4
  store i32 %v0_a5d8, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a5e4 = load i32, i32* @r4, align 4
  store i32 %v0_a5e4, i32* %r0.global-to-local, align 4
  %v5_a5ec = inttoptr i32 %v0_a5d8 to i32*
  %v6_a5ec = call i32 @function_8fc8(i32 %v0_a5e4, i32* %v5_a5ec, i32 11, i32 1, i32 %v1_a5d4)
  %v1_a5f4 = urem i32 %v6_a5ec, 256
  store i32 %v1_a5f4, i32* %ip.global-to-local, align 4
  %v0_a5f8 = load i32, i32* @r5, align 4
  store i32 %v0_a5f8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a604 = load i32, i32* @r4, align 4
  store i32 %v0_a604, i32* %r0.global-to-local, align 4
  %v5_a60c = inttoptr i32 %v0_a5f8 to i32*
  %v6_a60c = call i32 @function_8fc8(i32 %v0_a604, i32* %v5_a60c, i32 12, i32 1, i32 %v1_a5f4)
  %v1_a614 = urem i32 %v6_a60c, 256
  store i32 %v1_a614, i32* %ip.global-to-local, align 4
  %v0_a618 = load i32, i32* @r5, align 4
  store i32 %v0_a618, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_a620 = load i32, i32* @r7, align 4
  store i32 %v0_a620, i32* %r3.global-to-local, align 4
  %v0_a624 = load i32, i32* @r4, align 4
  store i32 %v0_a624, i32* %r0.global-to-local, align 4
  %v5_a62c = inttoptr i32 %v0_a618 to i32*
  %v6_a62c = call i32 @function_8fc8(i32 %v0_a624, i32* %v5_a62c, i32 13, i32 %v0_a620, i32 %v1_a614)
  %v1_a634 = urem i32 %v6_a62c, 256
  store i32 %v1_a634, i32* %ip.global-to-local, align 4
  %v0_a638 = load i32, i32* @r5, align 4
  store i32 %v0_a638, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_a640 = load i32, i32* @r7, align 4
  store i32 %v0_a640, i32* %r3.global-to-local, align 4
  %v0_a644 = load i32, i32* @r4, align 4
  store i32 %v0_a644, i32* %r0.global-to-local, align 4
  %v5_a64c = inttoptr i32 %v0_a638 to i32*
  %v6_a64c = call i32 @function_8fc8(i32 %v0_a644, i32* %v5_a64c, i32 14, i32 %v0_a640, i32 %v1_a634)
  %v1_a654 = urem i32 %v6_a64c, 256
  store i32 %v1_a654, i32* %ip.global-to-local, align 4
  %v0_a658 = load i32, i32* @r5, align 4
  store i32 %v0_a658, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_a660 = load i32, i32* @r7, align 4
  store i32 %v0_a660, i32* %r3.global-to-local, align 4
  %v0_a664 = load i32, i32* @r4, align 4
  store i32 %v0_a664, i32* %r0.global-to-local, align 4
  %v5_a66c = inttoptr i32 %v0_a658 to i32*
  %v6_a66c = call i32 @function_8fc8(i32 %v0_a664, i32* %v5_a66c, i32 15, i32 %v0_a660, i32 %v1_a654)
  %v1_a674 = urem i32 %v6_a66c, 256
  store i32 %v1_a674, i32* %ip.global-to-local, align 4
  %v0_a678 = load i32, i32* @r7, align 4
  store i32 %v0_a678, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_a680 = load i32, i32* @r5, align 4
  store i32 %v0_a680, i32* %r1.global-to-local, align 4
  %v0_a684 = load i32, i32* @r4, align 4
  store i32 %v0_a684, i32* %r0.global-to-local, align 4
  %v5_a68c = inttoptr i32 %v0_a680 to i32*
  %v6_a68c = call i32 @function_8fc8(i32 %v0_a684, i32* %v5_a68c, i32 %v0_a678, i32 768, i32 %v1_a674)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a698 = load i32, i32* @r5, align 4
  store i32 %v0_a698, i32* %r1.global-to-local, align 4
  %v0_a6a0 = load i32, i32* @r4, align 4
  store i32 %v0_a6a0, i32* %r0.global-to-local, align 4
  %v5_a6a4 = inttoptr i32 %v0_a698 to i32*
  %v6_a6a4 = call i32 @function_8fc8(i32 %v0_a6a0, i32* %v5_a6a4, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_a6ac = urem i32 %v6_a6a4, 256
  store i32 %v1_a6ac, i32* %r3.global-to-local, align 4
  %v0_a6b0 = load i32, i32* @r7, align 4
  store i32 %v0_a6b0, i32* %r0.global-to-local, align 4
  %v1_a6b8 = inttoptr i32 %v0_a6b0 to i32*
  %v2_a6b8 = call i32 @time(i32* %v1_a6b8)
  %v1_a6bc = load i32, i32* @r6, align 4
  %v2_a6bc = add i32 %v1_a6bc, %v2_a6b8
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a6d0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a6d0, i32* %r0.global-to-local, align 4
  %v0_a6d4 = load i32, i32* @sl, align 4
  %v3_a6d4 = udiv i32 %v0_a6d4, 65536
  store i32 %v3_a6d4, i32* %r1.global-to-local, align 4
  %v2_a6d8 = icmp eq i32 %v3_a6d0, -1
  store i1 %v2_a6d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a6d0, i32* @r8, align 4
  br i1 %v2_a6d8, label %dec_label_pc_aaa4, label %dec_label_pc_a6e8

dec_label_pc_a6e8:                                ; preds = %dec_label_pc_a4dc
  store i32 1, i32* %stack_var_-40, align 4
  %v6_a6f0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_a6f0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_a6f8 = load i32, i32* @r7, align 4
  store i32 %v0_a6f8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_a704 = call i32 @setsockopt(i32 %v0_a6f8, i32 3, i32 %v6_a6f0, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_a704, i32* %r0.global-to-local, align 4
  %v2_a708 = icmp eq i32 %v6_a704, -1
  store i1 %v2_a708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a708, label %dec_label_pc_aa9c, label %dec_label_pc_a710

dec_label_pc_a710:                                ; preds = %dec_label_pc_a6e8
  store i32 %v1_a4e0, i32* %r2.global-to-local, align 4
  %v0_a714 = load i32, i32* %sb.global-to-local, align 4
  %v3_a714 = mul i32 %v0_a714, 65536
  store i32 %v3_a714, i32* %r0.global-to-local, align 4
  %v3_a718 = urem i32 %v0_a714, 65536
  store i32 %v3_a718, i32* %r3.global-to-local, align 4
  %v2_a71c = icmp eq i32 %v1_a4e0, 0
  store i1 %v2_a71c, i1* %cpsr_z.global-to-local, align 1
  %v0_a720 = load i32, i32* @r7, align 4
  store i32 %v0_a720, i32* %stack_var_-40, align 4
  br i1 %v2_a71c, label %dec_label_pc_a710.dec_label_pc_a924.preheader_crit_edge, label %dec_label_pc_a72c

dec_label_pc_a710.dec_label_pc_a924.preheader_crit_edge: ; preds = %dec_label_pc_a710
  %.pre = add i32 %v6_a68c, 40
  br label %dec_label_pc_a924.preheader

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a710
  %v0_a730 = load i32, i32* @sl, align 4
  %v3_a730 = udiv i32 %v0_a730, 16777216
  %tmp84 = udiv i32 %v0_a714, 256
  %v3_a734 = urem i32 %tmp84, 256
  store i32 %v3_a734, i32* %r0.global-to-local, align 4
  %v1_a738 = add i32 %v6_a68c, 40
  store i32 %v1_a738, i32* %ip.global-to-local, align 4
  %v2_a76c = ptrtoint i32* %stack_var_-332 to i32
  %v3_ab18 = icmp ugt i32 %v0_a6d4, -65537
  %v2_a7f8 = ptrtoint i32* %stack_var_-60 to i32
  %tmp85 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v1_a81c = urem i32 %v1_a738, 256
  %tmp86 = udiv i32 %v1_a738, 256
  %v3_a820 = urem i32 %tmp86, 256
  %v2_a830 = ptrtoint i32* %stack_var_-44 to i32
  %tmp87 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v4_a8a4 = zext i8 %tmp38 to i32
  %v4_a8a8 = zext i8 %tmp37 to i32
  %v4_a8b4 = mul nuw nsw i32 %v4_a8a8, 256
  %v4_a8c4 = zext i8 %tmp36 to i32
  %v1_a8c8 = and i32 %v4_a8c4, 18
  %v2_a8cc = icmp eq i32 %v1_a8c8, 18
  %v1_ad34 = urem i32 %v6_a5cc, 2
  %tmp111 = sub nsw i32 0, %v1_ad34
  %v4_ad3c = and i32 %tmp111, 32
  %v1_ad68 = urem i32 %v6_a60c, 2
  %tmp112 = sub nsw i32 0, %v1_ad68
  %v4_ad70 = and i32 %tmp112, 8
  %v1_adb4 = urem i32 %v6_a66c, 2
  %v4_a824 = mul nuw nsw i32 %v1_a81c, 256
  %v5_a824 = or i32 %v4_a824, %v3_a820
  %v5_a8b4 = or i32 %v4_a8a4, %v4_a8b4
  %v1_a8d4 = and i32 %v4_a8c4, 5
  %v2_a8d4 = icmp eq i32 %v1_a8d4, 0
  %v1_a7e4 = urem i32 %v3_a6d4, 256
  %v4_a7e8 = mul nuw nsw i32 %v1_a7e4, 256
  %v5_a7e8 = or i32 %v3_a730, %v4_a7e8
  %v1_a7f0 = trunc i32 %v3_a6d4 to i8
  %v1_a7f4 = trunc i32 %v3_a730 to i8
  %v1_ac20 = urem i32 %v0_a714, 256
  %v4_ac28 = mul nuw nsw i32 %v1_ac20, 256
  %v5_ac28 = or i32 %v4_ac28, %v3_a734
  %sext = mul i32 %v1_a738, 16777216
  %v4_ac44 = sdiv i32 %sext, 16777216
  %v1_ad4c = urem i32 %v6_a5ec, 2
  %tmp113 = sub nsw i32 0, %v1_ad4c
  %v4_ad54 = and i32 %tmp113, 16
  %v1_ad80 = urem i32 %v6_a62c, 2
  %tmp114 = sub nsw i32 0, %v1_ad80
  %v4_ad88 = and i32 %tmp114, 4
  %v1_ad98 = urem i32 %v6_a64c, 2
  %tmp115 = sub nsw i32 0, %v1_ad98
  %v3_ada0 = and i32 %tmp115, 2
  br label %dec_label_pc_a748.outer

dec_label_pc_a748.outer:                          ; preds = %.thread9, %dec_label_pc_a72c
  %stack_var_-336.0.ph = phi i32 [ %v0_ac60, %.thread9 ], [ %tmp, %dec_label_pc_a72c ]
  %stack_var_-56.0.ph = phi i32 [ %v0_ab6c, %.thread9 ], [ %tmp44, %dec_label_pc_a72c ]
  br label %dec_label_pc_a748

dec_label_pc_a748:                                ; preds = %dec_label_pc_a90c, %dec_label_pc_a8dc, %dec_label_pc_a748.outer
  %stack_var_-56.0 = phi i32 [ %stack_var_-56.0.ph, %dec_label_pc_a748.outer ], [ %stack_var_-56.5, %dec_label_pc_a90c ], [ %v0_ab6c, %dec_label_pc_a8dc ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v3_a734, i32* %lr.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a760 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_a760, i32* %r0.global-to-local, align 4
  %v2_a764 = icmp eq i32 %v3_a760, -1
  store i1 %v2_a764, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a760, i32* @r7, align 4
  br i1 %v2_a764, label %dec_label_pc_a90c, label %dec_label_pc_a778

dec_label_pc_a778:                                ; preds = %dec_label_pc_a748, %dec_label_pc_a8e8
  %v0_a780 = phi i32 [ %v3_a8fc, %dec_label_pc_a8e8 ], [ %v3_a760, %dec_label_pc_a748 ]
  %stack_var_-56.1 = phi i32 [ %v0_ab6c, %dec_label_pc_a8e8 ], [ %stack_var_-56.0, %dec_label_pc_a748 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_a780 = call i32 (i32, i32, ...) @fcntl(i32 %v0_a780, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_a788 = or i32 %v2_a780, 2048
  store i32 %v1_a788, i32* %r2.global-to-local, align 4
  %v0_a78c = load i32, i32* @r7, align 4
  store i32 %v0_a78c, i32* %r0.global-to-local, align 4
  %v2_a790 = call i32 (i32, i32, ...) @fcntl(i32 %v0_a78c, i32 4)
  %v3_a794 = load i32, i32* %stack_var_-40, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_a7a0 = mul i32 %v3_a794, 24
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v2_a7b4 = add i32 %v5_a7a0, %arg3
  store i32 %v2_a7b4, i32* %r2.global-to-local, align 4
  %v1_a7b8 = add i32 %v2_a7b4, 20
  %v2_a7b8 = inttoptr i32 %v1_a7b8 to i8*
  %v3_a7b8 = load i8, i8* %v2_a7b8, align 1
  %v4_a7b8 = zext i8 %v3_a7b8 to i32
  store i32 %v4_a7b8, i32* %r3.global-to-local, align 4
  %v2_a7bc = icmp ugt i8 %v3_a7b8, 30
  %v7_a7bc = icmp eq i8 %v3_a7b8, 31
  store i1 %v7_a7bc, i1* %cpsr_z.global-to-local, align 1
  %v2_a7c0 = xor i1 %v7_a7bc, true
  %v3_a7c0 = and i1 %v2_a7bc, %v2_a7c0
  br i1 %v3_a7c0, label %bb, label %bb88

bb:                                               ; preds = %dec_label_pc_a778
  %v5_a7c0 = add i32 %v2_a7b4, 16
  %v6_a7c0 = inttoptr i32 %v5_a7c0 to i32*
  %v7_a7c0 = load i32, i32* %v6_a7c0, align 4
  store i32 %v7_a7c0, i32* %r3.global-to-local, align 4
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_a778, %bb
  %v4_a7c4 = phi i32 [ %v4_a7b8, %dec_label_pc_a778 ], [ %v7_a7c0, %bb ]
  %v4_a7c4.stack_var_-56.1 = select i1 %v3_a7c0, i32 %v4_a7c4, i32 %stack_var_-56.1
  %v2_a7c8 = xor i1 %v2_a7bc, true
  %v3_a7c8 = or i1 %v7_a7bc, %v2_a7c8
  br i1 %v3_a7c8, label %dec_label_pc_aaac, label %dec_label_pc_a7cc

dec_label_pc_a7cc:                                ; preds = %bb88
  store i32 %v3_a6d4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_ab18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ab18, label %dec_label_pc_ab20, label %dec_label_pc_a7e0

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_aaac, %dec_label_pc_a7cc
  %stack_var_-56.3 = phi i32 [ %v2_ab04, %dec_label_pc_aaac ], [ %v4_a7c4.stack_var_-56.1, %dec_label_pc_a7cc ]
  store i32 %v3_a730, i32* %r0.global-to-local, align 4
  store i32 %v5_a7e8, i32* %r3.global-to-local, align 4
  store i32 %v1_a7e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_a7f8

dec_label_pc_a7f8:                                ; preds = %dec_label_pc_ab20, %dec_label_pc_a7e0
  %stack_var_-57.0 = phi i8 [ %v1_ab28, %dec_label_pc_ab20 ], [ %v1_a7f0, %dec_label_pc_a7e0 ]
  %v0_ab6c = phi i32 [ %stack_var_-56.6, %dec_label_pc_ab20 ], [ %stack_var_-56.3, %dec_label_pc_a7e0 ]
  %storemerge = phi i8 [ %v1_ab20, %dec_label_pc_ab20 ], [ %v1_a7f4, %dec_label_pc_a7e0 ]
  store i32 %v2_a7f8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_a800 = load i32, i32* @r7, align 4
  store i32 %v0_a800, i32* %r0.global-to-local, align 4
  %v5_a804 = call i32 @connect(i32 %v0_a800, %sockaddr* %tmp85, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a80c = call i32 @time(i32* null)
  store i32 %v2_a80c, i32* %r0.global-to-local, align 4
  store i32 %v1_a738, i32* %r1.global-to-local, align 4
  store i32 %v1_a81c, i32* %r3.global-to-local, align 4
  store i32 %v5_a824, i32* @fp, align 4
  store i32 %v1_a81c, i32* %r2.global-to-local, align 4
  store i32 %v2_a80c, i32* %r4.global-to-local, align 4
  store i32 %v2_a830, i32* @r6, align 4
  %v9_a888 = icmp eq i32 %tmp39, %v0_ab6c
  %v4_a8ac = zext i8 %storemerge to i32
  %v4_a8b0 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_a888 to i32
  %v9_a89c = icmp eq i1 %v9_a888, false
  %v4_a8b8 = mul nuw nsw i32 %v4_a8b0, 256
  %v5_a8b8 = or i32 %v4_a8ac, %v4_a8b8
  %v9_a8bc = icmp eq i32 %v5_a8b8, %v5_a8b4
  br label %dec_label_pc_a84c

dec_label_pc_a83c:                                ; preds = %.thread31, %dec_label_pc_a8a4, %dec_label_pc_a8d4, %bb91
  %v2_a83c = call i32 @time(i32* null)
  %v0_a840 = load i32, i32* %r4.global-to-local, align 4
  %v2_a840 = sub i32 %v2_a83c, %v0_a840
  store i32 %v2_a840, i32* %r0.global-to-local, align 4
  %v7_a844 = icmp eq i32 %v2_a840, 10
  store i1 %v7_a844, i1* %cpsr_z.global-to-local, align 1
  %v8_a848 = icmp sgt i32 %v2_a840, 10
  br i1 %v8_a848, label %dec_label_pc_a8e8, label %dec_label_pc_a84c

dec_label_pc_a84c:                                ; preds = %dec_label_pc_a83c, %dec_label_pc_a7f8
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_a76c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a85c = load i32, i32* @r8, align 4
  store i32 %v0_a85c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-44, align 4
  %v10_a86c = call i32 @recvfrom(i32 %v0_a85c, i32* nonnull %stack_var_-332, i32 256, i32 16384, %sockaddr* %tmp87, i32* nonnull %stack_var_-44)
  store i32 %v10_a86c, i32* %r2.global-to-local, align 4
  %v2_a874 = icmp eq i32 %v10_a86c, -1
  store i1 %v2_a874, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_a874, label %dec_label_pc_aaa4, label %dec_label_pc_a880

dec_label_pc_a880:                                ; preds = %dec_label_pc_a84c
  store i32 %v0_ab6c, i32* %lr.global-to-local, align 4
  store i32 %tmp39, i32* %r3.global-to-local, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_a894 = icmp eq i32 %v10_a86c, 40
  store i1 %v7_a894, i1* %cpsr_z.global-to-local, align 1
  %tmp116 = icmp ult i32 %v10_a86c, 41
  br i1 %tmp116, label %.thread31, label %bb91

.thread31:                                        ; preds = %dec_label_pc_a880
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_a83c

bb91:                                             ; preds = %dec_label_pc_a880
  store i1 %v9_a89c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a89c, label %dec_label_pc_a83c, label %dec_label_pc_a8a4

dec_label_pc_a8a4:                                ; preds = %bb91
  store i32 %v4_a8a8, i32* %r1.global-to-local, align 4
  store i32 %v4_a8ac, i32* %ip.global-to-local, align 4
  store i32 %v4_a8b0, i32* %r2.global-to-local, align 4
  store i32 %v5_a8b4, i32* %r3.global-to-local, align 4
  store i32 %v5_a8b8, i32* @r5, align 4
  store i1 %v9_a8bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a8bc, label %dec_label_pc_a8c4, label %dec_label_pc_a83c

dec_label_pc_a8c4:                                ; preds = %dec_label_pc_a8a4
  store i32 %v4_a8c4, i32* %r2.global-to-local, align 4
  store i32 %v1_a8c8, i32* %r3.global-to-local, align 4
  store i1 %v2_a8cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a8cc, label %dec_label_pc_ab60, label %dec_label_pc_a8d4

dec_label_pc_a8d4:                                ; preds = %dec_label_pc_a8c4
  store i1 %v2_a8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a8d4, label %dec_label_pc_a83c, label %dec_label_pc_a8dc

dec_label_pc_a8dc:                                ; preds = %dec_label_pc_a8d4
  %v0_a8dc = load i32, i32* @r7, align 4
  store i32 %v0_a8dc, i32* %r0.global-to-local, align 4
  %v1_a8e0 = call i32 @close(i32 %v0_a8dc)
  store i32 %v1_a8e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a748

dec_label_pc_a8e8:                                ; preds = %dec_label_pc_a83c
  %v0_a8e8 = load i32, i32* @r7, align 4
  store i32 %v0_a8e8, i32* %r0.global-to-local, align 4
  %v1_a8ec = call i32 @close(i32 %v0_a8e8)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a8fc = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_a8fc, i32* %r0.global-to-local, align 4
  %v3_a900 = icmp eq i32 %v3_a8fc, -1
  store i1 %v3_a900, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a8fc, i32* @r7, align 4
  br i1 %v3_a900, label %dec_label_pc_a90c, label %dec_label_pc_a778

dec_label_pc_a90c:                                ; preds = %dec_label_pc_a8e8, %dec_label_pc_a748
  %stack_var_-56.5 = phi i32 [ %stack_var_-56.0, %dec_label_pc_a748 ], [ %v0_ab6c, %dec_label_pc_a8e8 ]
  %v3_a90c = load i32, i32* %stack_var_-40, align 4
  store i32 %v1_a4e0, i32* %lr.global-to-local, align 4
  %v1_a914 = add i32 %v3_a90c, 1
  store i32 %v1_a914, i32* %r3.global-to-local, align 4
  %v9_a918 = icmp eq i32 %v1_a914, %v1_a4e0
  store i1 %v9_a918, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a914, i32* %stack_var_-40, align 4
  %v5_a920 = icmp slt i32 %v1_a914, %v1_a4e0
  br i1 %v5_a920, label %dec_label_pc_a748, label %dec_label_pc_a924.preheader

dec_label_pc_a924.preheader:                      ; preds = %.thread9, %dec_label_pc_a90c, %dec_label_pc_a710.dec_label_pc_a924.preheader_crit_edge
  %v1_a958.pre-phi = phi i32 [ %.pre, %dec_label_pc_a710.dec_label_pc_a924.preheader_crit_edge ], [ %v1_a738, %dec_label_pc_a90c ], [ %v1_a738, %.thread9 ]
  %v1_a93c = add i32 %v6_a68c, 20
  %v3_a940 = mul i32 %v1_a93c, 65536
  %tmp93 = mul i32 %v1_a93c, 256
  %v1_a948 = and i32 %tmp93, 65280
  %tmp94 = udiv i32 %v1_a93c, 256
  %v4_a94c = urem i32 %tmp94, 256
  %v5_a94c = or i32 %v4_a94c, %v1_a948
  %v2_aa7c = icmp eq i32 %v1_a6ac, 0
  %v3_aa68 = icmp eq i32 %v3_a718, 65535
  br label %dec_label_pc_a924

dec_label_pc_a924:                                ; preds = %dec_label_pc_a924.preheader, %dec_label_pc_ab48
  store i32 %v1_a4e0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_a71c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_a71c, label %dec_label_pc_ab48, label %dec_label_pc_a938

dec_label_pc_a938:                                ; preds = %dec_label_pc_a924
  store i32 %v1_a93c, i32* @sl, align 4
  store i32 %v3_a940, i32* %r2.global-to-local, align 4
  store i32 %v5_a94c, i32* @fp, align 4
  store i32 %v6_a68c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_a958.pre-phi, i32* @sb, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_aa54

dec_label_pc_a964:                                ; preds = %dec_label_pc_aa78, %dec_label_pc_aa8c
  %v0_a964 = load i32, i32* @r7, align 4
  %v1_a964 = trunc i32 %v0_a964 to i8
  %v2_a964 = load i32, i32* @r4, align 4
  %v3_a964 = add i32 %v2_a964, 10
  %v4_a964 = inttoptr i32 %v3_a964 to i8*
  store i8 %v1_a964, i8* %v4_a964, align 1
  %v0_a968 = load i32, i32* @r7, align 4
  %v1_a968 = trunc i32 %v0_a968 to i8
  %v2_a968 = load i32, i32* @r4, align 4
  %v3_a968 = add i32 %v2_a968, 11
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 %v1_a968, i8* %v4_a968, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a970 = load i32, i32* @r4, align 4
  store i32 %v0_a970, i32* @r0, align 4
  %v2_a974 = call i32 @function_d3d4(i32 %v0_a970, i32 20)
  %v3_a974 = trunc i32 %v2_a974 to i8
  store i32 %v2_a974, i32* %r0.global-to-local, align 4
  %v3_a978 = load i32, i32* %stack_var_-40, align 4
  store i32 %v4_a50c, i32* %r2.global-to-local, align 4
  %v3_a980 = mul i32 %v3_a978, 16
  %v2_a984 = add i32 %v3_a980, %v4_a50c
  store i32 %v2_a984, i32* %r1.global-to-local, align 4
  %v1_a988 = add i32 %v2_a984, 4
  %v2_a988 = inttoptr i32 %v1_a988 to i32*
  %v3_a988 = load i32, i32* %v2_a988, align 4
  %v3_a98c = mul i32 %v3_a988, 65536
  store i32 %v3_a98c, i32* %ip.global-to-local, align 4
  %tmp95 = mul i32 %v3_a988, 256
  %v1_a994 = and i32 %tmp95, 65280
  %tmp96 = udiv i32 %v3_a988, 256
  %v4_a998 = urem i32 %tmp96, 256
  %v5_a998 = or i32 %v4_a998, %v1_a994
  store i32 %v5_a998, i32* %r2.global-to-local, align 4
  %v1_a99c = add i32 %v3_a988, 1
  store i32 %v1_a99c, i32* %r3.global-to-local, align 4
  store i32 %v1_a99c, i32* %v2_a988, align 4
  %v0_a9a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a9a4 = load i32, i32* @r5, align 4
  %v2_a9a4 = add i32 %v1_a9a4, 4
  %v3_a9a4 = inttoptr i32 %v2_a9a4 to i32*
  store i32 %v0_a9a4, i32* %v3_a9a4, align 4
  %v0_a9a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a9a8 = add i32 %v0_a9a8, 8
  %v2_a9a8 = inttoptr i32 %v1_a9a8 to i32*
  %v3_a9a8 = load i32, i32* %v2_a9a8, align 4
  %tmp97 = mul i32 %v3_a9a8, 256
  %v1_a9b4 = and i32 %tmp97, 65280
  %tmp98 = udiv i32 %v3_a9a8, 256
  %v4_a9b8 = urem i32 %tmp98, 256
  %v5_a9b8 = or i32 %v4_a9b8, %v1_a9b4
  store i32 %v5_a9b8, i32* %r2.global-to-local, align 4
  %v4_a9bc34 = udiv i32 %v2_a974, 256
  %v1_a9c0 = trunc i32 %v4_a9bc34 to i8
  %v2_a9c0 = load i32, i32* @r4, align 4
  %v3_a9c0 = add i32 %v2_a9c0, 11
  %v4_a9c0 = inttoptr i32 %v3_a9c0 to i8*
  store i8 %v1_a9c0, i8* %v4_a9c0, align 1
  %v3_a9c4 = load i32, i32* @r4, align 4
  %v4_a9c4 = add i32 %v3_a9c4, 10
  %v5_a9c4 = inttoptr i32 %v4_a9c4 to i8*
  store i8 %v3_a974, i8* %v5_a9c4, align 1
  %v0_a9c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a9c8 = load i32, i32* @r5, align 4
  %v2_a9c8 = add i32 %v1_a9c8, 8
  %v3_a9c8 = inttoptr i32 %v2_a9c8 to i32*
  store i32 %v0_a9c8, i32* %v3_a9c8, align 4
  %v0_a9cc = load i32, i32* @r5, align 4
  store i32 %v0_a9cc, i32* @r1, align 4
  %v0_a9d0 = load i32, i32* @fp, align 4
  store i32 %v0_a9d0, i32* %r2.global-to-local, align 4
  %v0_a9d4 = load i32, i32* @sl, align 4
  store i32 %v0_a9d4, i32* %r3.global-to-local, align 4
  %v0_a9d8 = load i32, i32* @r4, align 4
  store i32 %v0_a9d8, i32* %r0.global-to-local, align 4
  %v0_a9dc = load i32, i32* @r7, align 4
  %v1_a9dc = trunc i32 %v0_a9dc to i8
  %v3_a9dc = add i32 %v0_a9cc, 16
  %v4_a9dc = inttoptr i32 %v3_a9dc to i8*
  store i8 %v1_a9dc, i8* %v4_a9dc, align 1
  %v0_a9e0 = load i32, i32* @r7, align 4
  %v1_a9e0 = trunc i32 %v0_a9e0 to i8
  %v2_a9e0 = load i32, i32* @r5, align 4
  %v3_a9e0 = add i32 %v2_a9e0, 17
  %v4_a9e0 = inttoptr i32 %v3_a9e0 to i8*
  store i8 %v1_a9e0, i8* %v4_a9e0, align 1
  %v4_a9e4 = call i32 @function_d430(i32 %v0_a9d8, i32 %v0_a9cc, i32 %v0_a9d0, i32 %v0_a9d4)
  %v5_a9e4 = trunc i32 %v4_a9e4 to i8
  store i32 %v4_a9e4, i32* %r0.global-to-local, align 4
  %v4_a9e835 = udiv i32 %v4_a9e4, 256
  %v1_a9ec = trunc i32 %v4_a9e835 to i8
  %v2_a9ec = load i32, i32* @r5, align 4
  %v3_a9ec = add i32 %v2_a9ec, 17
  %v4_a9ec = inttoptr i32 %v3_a9ec to i8*
  store i8 %v1_a9ec, i8* %v4_a9ec, align 1
  %v3_a9f0 = load i32, i32* @r5, align 4
  %v4_a9f0 = add i32 %v3_a9f0, 16
  %v5_a9f0 = inttoptr i32 %v4_a9f0 to i8*
  store i8 %v5_a9e4, i8* %v5_a9f0, align 1
  %v3_a9f4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a9f4, i32* %r3.global-to-local, align 4
  %v0_a9f8 = load i32, i32* @r4, align 4
  %v1_a9f8 = add i32 %v0_a9f8, 20
  %v2_a9f8 = inttoptr i32 %v1_a9f8 to i32*
  %v3_a9f8 = load i32, i32* %v2_a9f8, align 4
  %v5_aa00 = mul i32 %v3_a9f4, 24
  %v3_aa08 = udiv i32 %v3_a9f8, 65536
  store i32 %v3_aa08, i32* %r2.global-to-local, align 4
  %v2_aa0c = add i32 %v5_aa00, %arg3
  store i32 %v2_aa0c, i32* %ip.global-to-local, align 4
  %v3_aa106 = udiv i32 %v3_a9f8, 16777216
  %v1_aa14 = trunc i32 %v3_aa106 to i8
  %v3_aa14 = add i32 %v2_aa0c, 3
  %v4_aa14 = inttoptr i32 %v3_aa14 to i8*
  store i8 %v1_aa14, i8* %v4_aa14, align 1
  %v0_aa18 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa18 = trunc i32 %v0_aa18 to i8
  %v2_aa18 = load i32, i32* %ip.global-to-local, align 4
  %v3_aa18 = add i32 %v2_aa18, 2
  %v4_aa18 = inttoptr i32 %v3_aa18 to i8*
  store i8 %v1_aa18, i8* %v4_aa18, align 1
  %v0_aa1c = load i32, i32* @r4, align 4
  store i32 %v0_aa1c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_aa24 = load i32, i32* @r8, align 4
  store i32 %v0_aa24, i32* %r0.global-to-local, align 4
  %v0_aa28 = load i32, i32* @sb, align 4
  store i32 %v0_aa28, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_aa30 = load i32, i32* %ip.global-to-local, align 4
  %v4_aa30 = inttoptr i32 %v0_aa30 to %sockaddr*
  %v7_aa38 = inttoptr i32 %v0_aa1c to i32*
  %v9_aa38 = call i32 @sendto(i32 %v0_aa24, i32* %v7_aa38, i32 %v0_aa28, i32 16384, %sockaddr* %v4_aa30, i32 16)
  %v3_aa3c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_aa3c, i32* %r3.global-to-local, align 4
  store i32 %v1_a4e0, i32* %ip.global-to-local, align 4
  %v1_aa44 = add i32 %v3_aa3c, 1
  store i32 %v1_aa44, i32* %r0.global-to-local, align 4
  %v9_aa48 = icmp eq i32 %v1_aa44, %v1_a4e0
  store i1 %v9_aa48, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aa44, i32* %stack_var_-40, align 4
  %v6_aa50 = icmp slt i32 %v1_aa44, %v1_a4e0
  br i1 %v6_aa50, label %dec_label_pc_aa54, label %dec_label_pc_ab48

dec_label_pc_aa54:                                ; preds = %dec_label_pc_a964, %dec_label_pc_a938
  %v1_aa60 = phi i32 [ %v1_aa44, %dec_label_pc_a964 ], [ 0, %dec_label_pc_a938 ]
  store i32 %v4_a51c, i32* %ip.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_a718, i32* %lr.global-to-local, align 4
  %v4_aa60 = mul i32 %v1_aa60, 4
  %v5_aa60 = add i32 %v4_aa60, %v4_a51c
  %v6_aa60 = inttoptr i32 %v5_aa60 to i32*
  %v7_aa60 = load i32, i32* %v6_aa60, align 4
  store i32 %v7_aa60, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_aa68, i1* %cpsr_z.global-to-local, align 1
  %v1_aa6c = add i32 %v7_aa60, 40
  store i32 %v1_aa6c, i32* @r6, align 4
  %v1_aa70 = add i32 %v7_aa60, 20
  store i32 %v1_aa70, i32* @r5, align 4
  br i1 %v3_aa68, label %dec_label_pc_ab34, label %dec_label_pc_aa78

dec_label_pc_aa78:                                ; preds = %dec_label_pc_aa54, %dec_label_pc_ab34
  %v0_aa84 = phi i32 [ %v1_aa6c, %dec_label_pc_aa54 ], [ %v0_aa84.pre, %dec_label_pc_ab34 ]
  store i1 %v2_aa7c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v6_a68c, i32* %r1.global-to-local, align 4
  store i32 %v0_aa84, i32* %r0.global-to-local, align 4
  br i1 %v2_aa7c, label %dec_label_pc_a964, label %dec_label_pc_aa8c

dec_label_pc_aa8c:                                ; preds = %dec_label_pc_aa78
  %v2_aa8c = call i32 @function_f044(i32 %v0_aa84, i32 %v6_a68c)
  store i32 %v2_aa8c, i32* %r0.global-to-local, align 4
  store i32 %v6_a68c, i32* %r1.global-to-local, align 4
  %v0_aa94 = load i32, i32* @r7, align 4
  %v1_aa94 = trunc i32 %v0_aa94 to i8
  %v2_aa94 = load i32, i32* @r6, align 4
  %v4_aa94 = add i32 %v2_aa94, %v6_a68c
  %v5_aa94 = inttoptr i32 %v4_aa94 to i8*
  store i8 %v1_aa94, i8* %v5_aa94, align 1
  br label %dec_label_pc_a964

dec_label_pc_aa9c:                                ; preds = %dec_label_pc_a6e8
  %v0_aa9c = load i32, i32* @r8, align 4
  store i32 %v0_aa9c, i32* %r0.global-to-local, align 4
  %v1_aaa0 = call i32 @close(i32 %v0_aa9c)
  store i32 %v1_aaa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aaa4

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_a84c, %dec_label_pc_ab48, %dec_label_pc_a4dc, %dec_label_pc_aa9c
  %v29_aaa8 = phi i32 [ -1, %dec_label_pc_a4dc ], [ %v1_aaa0, %dec_label_pc_aa9c ], [ %v2_ab4c, %dec_label_pc_ab48 ], [ 0, %dec_label_pc_a84c ]
  store i32 %v3_a4dc, i32* %r4.global-to-local, align 4
  store i32 %v18_a4dc, i32* %sb.global-to-local, align 4
  ret i32 %v29_aaa8

dec_label_pc_aaac:                                ; preds = %bb88
  %v1_aaac = add i32 %v2_a7b4, 16
  %v2_aaac = inttoptr i32 %v1_aaac to i32*
  %v3_aaac = load i32, i32* %v2_aaac, align 4
  store i32 %v3_aaac, i32* %r4.global-to-local, align 4
  %v0_aab0 = call i32 @function_ef90()
  store i32 %v0_aab0, i32* %r0.global-to-local, align 4
  %v3_aab4 = load i32, i32* %stack_var_-40, align 4
  %v5_aabc = mul i32 %v3_aab4, 24
  %v2_aac8 = add i32 %v5_aabc, %arg3
  store i32 %v2_aac8, i32* %r1.global-to-local, align 4
  %v1_aac4 = udiv i32 %v3_aaac, 256
  %v3_aacc = and i32 %v1_aac4, 65280
  store i32 %v3_aacc, i32* %r2.global-to-local, align 4
  %v1_aad0 = and i32 %v3_aaac, 65280
  store i32 %v1_aad0, i32* %r3.global-to-local, align 4
  %v3_aad4 = mul i32 %v3_aaac, 16777216
  %v4_aad8 = mul nuw nsw i32 %v1_aad0, 256
  %v5_aad8 = or i32 %v4_aad8, %v3_aad4
  store i32 %v5_aad8, i32* %ip.global-to-local, align 4
  %v1_aadc = add i32 %v2_aac8, 20
  %v2_aadc = inttoptr i32 %v1_aadc to i8*
  %v3_aadc = load i8, i8* %v2_aadc, align 1
  %v4_aadc = zext i8 %v3_aadc to i32
  store i32 %v4_aadc, i32* %lr.global-to-local, align 4
  %v2_aae4 = call i32 @llvm.bswap.i32(i32 %v3_aaac)
  %v7_aae8 = lshr i32 %v0_aab0, %v4_aadc
  %v8_aae8 = add i32 %v7_aae8, %v2_aae4
  store i32 %v8_aae8, i32* %r2.global-to-local, align 4
  %v3_aaf4 = mul i32 %v8_aae8, 16777216
  %v1_aaf8 = and i32 %v8_aae8, 65280
  store i32 %v1_aaf8, i32* %r0.global-to-local, align 4
  %v4_aafc = mul nuw nsw i32 %v1_aaf8, 256
  %v5_aafc = or i32 %v4_aafc, %v3_aaf4
  store i32 %v5_aafc, i32* %r1.global-to-local, align 4
  %v2_ab04 = call i32 @llvm.bswap.i32(i32 %v8_aae8)
  store i32 %v3_a6d4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_ab18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ab18, label %dec_label_pc_ab20, label %dec_label_pc_a7e0

dec_label_pc_ab20:                                ; preds = %dec_label_pc_aaac, %dec_label_pc_a7cc
  %stack_var_-56.6 = phi i32 [ %v2_ab04, %dec_label_pc_aaac ], [ %v4_a7c4.stack_var_-56.1, %dec_label_pc_a7cc ]
  %v0_ab20 = call i32 @function_ef90()
  %v1_ab20 = trunc i32 %v0_ab20 to i8
  store i32 %v0_ab20, i32* %r0.global-to-local, align 4
  %v4_ab24 = sdiv i32 %v0_ab20, 256
  store i32 %v4_ab24, i32* %r3.global-to-local, align 4
  %v1_ab28 = trunc i32 %v4_ab24 to i8
  br label %dec_label_pc_a7f8

dec_label_pc_ab34:                                ; preds = %dec_label_pc_aa54
  %v0_ab34 = call i32 @function_ef90()
  %v1_ab34 = trunc i32 %v0_ab34 to i8
  store i32 %v0_ab34, i32* %r0.global-to-local, align 4
  %v4_ab38 = sdiv i32 %v0_ab34, 256
  store i32 %v4_ab38, i32* %r3.global-to-local, align 4
  %v1_ab3c = trunc i32 %v4_ab38 to i8
  %v2_ab3c = load i32, i32* @r4, align 4
  %v3_ab3c = add i32 %v2_ab3c, 5
  %v4_ab3c = inttoptr i32 %v3_ab3c to i8*
  store i8 %v1_ab3c, i8* %v4_ab3c, align 1
  %v3_ab40 = load i32, i32* @r4, align 4
  %v4_ab40 = add i32 %v3_ab40, 4
  %v5_ab40 = inttoptr i32 %v4_ab40 to i8*
  store i8 %v1_ab34, i8* %v5_ab40, align 1
  %v0_aa84.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_aa78

dec_label_pc_ab48:                                ; preds = %dec_label_pc_a964, %dec_label_pc_a924
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ab4c = call i32 @time(i32* null)
  store i32 %v2_ab4c, i32* %r0.global-to-local, align 4
  store i32 %v2_a6bc, i32* %lr.global-to-local, align 4
  %v9_ab54 = icmp eq i32 %v2_a6bc, %v2_ab4c
  store i1 %v9_ab54, i1* %cpsr_z.global-to-local, align 1
  %v6_ab58 = icmp slt i32 %v2_a6bc, %v2_ab4c
  br i1 %v6_ab58, label %dec_label_pc_aaa4, label %dec_label_pc_a924

dec_label_pc_ab60:                                ; preds = %dec_label_pc_a8c4
  %v3_ab60 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ab60, i32* %r4.global-to-local, align 4
  store i32 %v4_a50c, i32* %r0.global-to-local, align 4
  %v3_ab68 = mul i32 %v3_ab60, 16
  store i32 %v3_ab68, i32* %ip.global-to-local, align 4
  %v3_ab6c = add i32 %v3_ab68, %v4_a50c
  %v4_ab6c = inttoptr i32 %v3_ab6c to i32*
  store i32 %v0_ab6c, i32* %v4_ab6c, align 4
  store i32 %stack_var_-336.0.ph, i32* %r1.global-to-local, align 4
  %v1_ab74 = add i32 %stack_var_-336.0.ph, 4
  %v2_ab74 = inttoptr i32 %v1_ab74 to i32*
  %v3_ab74 = load i32, i32* %v2_ab74, align 4
  store i32 %v3_ab74, i32* %r0.global-to-local, align 4
  %v1_ab7c = and i32 %v3_ab74, 65280
  store i32 %v1_ab7c, i32* %r1.global-to-local, align 4
  %v2_ab90 = call i32 @llvm.bswap.i32(i32 %v3_ab74)
  store i32 %v4_a50c, i32* %r2.global-to-local, align 4
  %v1_ab98 = load i32, i32* %ip.global-to-local, align 4
  %v2_ab98 = add i32 %v1_ab98, %v4_a50c
  store i32 %v2_ab98, i32* %ip.global-to-local, align 4
  %v2_ab9c = add i32 %v2_ab98, 4
  %v3_ab9c = inttoptr i32 %v2_ab9c to i32*
  store i32 %v2_ab90, i32* %v3_ab9c, align 4
  store i32 %stack_var_-336.0.ph, i32* %r3.global-to-local, align 4
  %v1_aba4 = add i32 %stack_var_-336.0.ph, 8
  %v2_aba4 = inttoptr i32 %v1_aba4 to i32*
  %v3_aba4 = load i32, i32* %v2_aba4, align 4
  store i32 %v3_aba4, i32* %r0.global-to-local, align 4
  %v1_abac = and i32 %v3_aba4, 65280
  store i32 %v1_abac, i32* %r1.global-to-local, align 4
  %v3_abb0 = mul i32 %v3_aba4, 16777216
  %v4_abb8 = mul nuw nsw i32 %v1_abac, 256
  %v5_abb8 = or i32 %v4_abb8, %v3_abb0
  store i32 %v5_abb8, i32* %r2.global-to-local, align 4
  %v2_abc0 = call i32 @llvm.bswap.i32(i32 %v3_aba4)
  store i32 %v2_abc0, i32* %r3.global-to-local, align 4
  %v1_abc4 = load i32, i32* %ip.global-to-local, align 4
  %v2_abc4 = add i32 %v1_abc4, 8
  %v3_abc4 = inttoptr i32 %v2_abc4 to i32*
  store i32 %v2_abc0, i32* %v3_abc4, align 4
  store i32 %stack_var_-336.0.ph, i32* %lr.global-to-local, align 4
  %v1_abcc = inttoptr i32 %stack_var_-336.0.ph to i32*
  %v2_abcc = load i32, i32* %v1_abcc, align 4
  %v3_abd0 = udiv i32 %v2_abcc, 65536
  store i32 %v3_abd0, i32* %r2.global-to-local, align 4
  %v3_abd47 = udiv i32 %v2_abcc, 16777216
  store i32 %v3_abd47, i32* %r1.global-to-local, align 4
  %v0_abd8 = load i32, i32* @r5, align 4
  %v3_abd8 = sdiv i32 %v0_abd8, 256
  store i32 %v3_abd8, i32* %r3.global-to-local, align 4
  %v1_abdc = trunc i32 %v3_abd8 to i8
  %v2_abdc = load i32, i32* %ip.global-to-local, align 4
  %v3_abdc = add i32 %v2_abdc, 15
  %v4_abdc = inttoptr i32 %v3_abdc to i8*
  store i8 %v1_abdc, i8* %v4_abdc, align 1
  %v0_abe0 = load i32, i32* %r1.global-to-local, align 4
  %v1_abe0 = trunc i32 %v0_abe0 to i8
  %v2_abe0 = load i32, i32* %ip.global-to-local, align 4
  %v3_abe0 = add i32 %v2_abe0, 13
  %v4_abe0 = inttoptr i32 %v3_abe0 to i8*
  store i8 %v1_abe0, i8* %v4_abe0, align 1
  %v0_abe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_abe4 = trunc i32 %v0_abe4 to i8
  %v2_abe4 = load i32, i32* %ip.global-to-local, align 4
  %v3_abe4 = add i32 %v2_abe4, 12
  %v4_abe4 = inttoptr i32 %v3_abe4 to i8*
  store i8 %v1_abe4, i8* %v4_abe4, align 1
  %v0_abe8 = load i32, i32* @r5, align 4
  %v1_abe8 = trunc i32 %v0_abe8 to i8
  %v2_abe8 = load i32, i32* %ip.global-to-local, align 4
  %v3_abe8 = add i32 %v2_abe8, 14
  %v4_abe8 = inttoptr i32 %v3_abe8 to i8*
  store i8 %v1_abe8, i8* %v4_abe8, align 1
  store i32 %v1_a738, i32* %r0.global-to-local, align 4
  %v1_abf0 = call i32* @malloc(i32 %v1_a738)
  %v3_abf0 = ptrtoint i32* %v1_abf0 to i32
  store i32 %v3_abf0, i32* %r0.global-to-local, align 4
  store i32 %v4_a51c, i32* %r1.global-to-local, align 4
  %v3_abf8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_abf8, i32* %r2.global-to-local, align 4
  %v2_abfc = load i32, i32* %r4.global-to-local, align 4
  %v5_abfc = mul i32 %v2_abfc, 4
  %v6_abfc = add i32 %v5_abfc, %v4_a51c
  %v7_abfc = inttoptr i32 %v6_abfc to i32*
  store i32 %v3_abf0, i32* %v7_abfc, align 4
  %v0_ac00 = load i32, i32* %r1.global-to-local, align 4
  %v1_ac00 = load i32, i32* %r2.global-to-local, align 4
  %v4_ac00 = mul i32 %v1_ac00, 4
  %v5_ac00 = add i32 %v4_ac00, %v0_ac00
  %v6_ac00 = inttoptr i32 %v5_ac00 to i32*
  %v7_ac00 = load i32, i32* %v6_ac00, align 4
  store i32 %v7_ac00, i32* %r0.global-to-local, align 4
  %v1_ac04 = inttoptr i32 %v7_ac00 to i8*
  %v2_ac04 = load i8, i8* %v1_ac04, align 1
  %tmp117 = urem i8 %v2_ac04, 16
  %v1_ac08 = zext i8 %tmp117 to i32
  %v1_ac0c = or i32 %v1_ac08, 64
  store i32 %v1_ac0c, i32* %r3.global-to-local, align 4
  %v1_ac10 = trunc i32 %v1_ac0c to i8
  store i8 %v1_ac10, i8* %v1_ac04, align 1
  store i32 %v3_a718, i32* %ip.global-to-local, align 4
  %v0_ac18 = load i32, i32* %r0.global-to-local, align 4
  %v1_ac18 = inttoptr i32 %v0_ac18 to i8*
  %v2_ac18 = load i8, i8* %v1_ac18, align 1
  %v1_ac24 = and i8 %v2_ac18, -16
  store i32 %v5_ac28, i32* %r3.global-to-local, align 4
  %v1_ac2c = or i8 %v1_ac24, 5
  store i32 %v5_a5b4, i32* %ip.global-to-local, align 4
  store i32 %v1_ac20, i32* %r1.global-to-local, align 4
  store i8 %v1_ac2c, i8* %v1_ac18, align 1
  %v0_ac3c = load i32, i32* %r1.global-to-local, align 4
  %v1_ac3c = trunc i32 %v0_ac3c to i8
  %v2_ac3c = load i32, i32* %r0.global-to-local, align 4
  %v3_ac3c = add i32 %v2_ac3c, 5
  %v4_ac3c = inttoptr i32 %v3_ac3c to i8*
  store i8 %v1_ac3c, i8* %v4_ac3c, align 1
  store i32 %v6_a534, i32* %r1.global-to-local, align 4
  store i32 %v4_ac44, i32* %lr.global-to-local, align 4
  %v2_ac48 = load i32, i32* %r0.global-to-local, align 4
  %v3_ac48 = add i32 %v2_ac48, 1
  %v4_ac48 = inttoptr i32 %v3_ac48 to i8*
  store i8 %v5_a554, i8* %v4_ac48, align 1
  store i32 %v5_a590, i32* %r2.global-to-local, align 4
  %v0_ac50 = load i32, i32* %ip.global-to-local, align 4
  %v2_ac50 = icmp eq i32 %v0_ac50, 0
  store i1 %v2_ac50, i1* %cpsr_z.global-to-local, align 1
  %v0_ac54 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac54 = trunc i32 %v0_ac54 to i8
  %v2_ac54 = load i32, i32* %r0.global-to-local, align 4
  %v3_ac54 = add i32 %v2_ac54, 4
  %v4_ac54 = inttoptr i32 %v3_ac54 to i8*
  store i8 %v1_ac54, i8* %v4_ac54, align 1
  %v0_ac58 = load i32, i32* %r0.global-to-local, align 4
  %v1_ac58 = add i32 %v0_ac58, 20
  store i32 %v1_ac58, i32* %r3.global-to-local, align 4
  %v0_ac5c = load i32, i32* %r2.global-to-local, align 4
  %v1_ac5c = trunc i32 %v0_ac5c to i8
  %v3_ac5c = add i32 %v0_ac58, 8
  %v4_ac5c = inttoptr i32 %v3_ac5c to i8*
  store i8 %v1_ac5c, i8* %v4_ac5c, align 1
  %v0_ac60 = load i32, i32* %r3.global-to-local, align 4
  %v0_ac64 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ac64, label %.thread8, label %bb100

bb100:                                            ; preds = %dec_label_pc_ab60
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_ac68 = load i32, i32* %r0.global-to-local, align 4
  %v4_ac68 = add i32 %v3_ac68, 6
  %v5_ac68 = inttoptr i32 %v4_ac68 to i8*
  store i8 64, i8* %v5_ac68, align 1
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_ab60, %bb100
  %v2_ac70 = load i32, i32* %r0.global-to-local, align 4
  %v3_ac70 = add i32 %v2_ac70, 9
  %v4_ac70 = inttoptr i32 %v3_ac70 to i8*
  store i8 6, i8* %v4_ac70, align 1
  %v2_ac78 = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_ac78, i32* %r3.global-to-local, align 4
  %v1_ac7c = load i32, i32* %r0.global-to-local, align 4
  %v2_ac7c = add i32 %v1_ac7c, 12
  %v3_ac7c = inttoptr i32 %v2_ac7c to i32*
  store i32 %v2_ac78, i32* %v3_ac7c, align 4
  %v0_ac80 = load i32, i32* %lr.global-to-local, align 4
  %v1_ac80 = trunc i32 %v0_ac80 to i8
  %v2_ac80 = load i32, i32* %r0.global-to-local, align 4
  %v3_ac80 = add i32 %v2_ac80, 3
  %v4_ac80 = inttoptr i32 %v3_ac80 to i8*
  store i8 %v1_ac80, i8* %v4_ac80, align 1
  %v3_ac84 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ac84, i32* %r2.global-to-local, align 4
  store i32 %v4_a50c, i32* %lr.global-to-local, align 4
  %v4_ac8c = mul i32 %v3_ac84, 16
  %v5_ac8c = add i32 %v4_ac8c, %v4_a50c
  %v6_ac8c = inttoptr i32 %v5_ac8c to i32*
  %v7_ac8c = load i32, i32* %v6_ac8c, align 4
  store i32 %v7_ac8c, i32* %r3.global-to-local, align 4
  %v0_ac90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ac90, label %.thread9, label %bb101

bb101:                                            ; preds = %.thread8
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_ac94 = load i32, i32* %r0.global-to-local, align 4
  %v4_ac94 = add i32 %v3_ac94, 7
  %v5_ac94 = inttoptr i32 %v4_ac94 to i8*
  store i8 0, i8* %v5_ac94, align 1
  br label %.thread9

.thread9:                                         ; preds = %.thread8, %bb101
  %v0_ac98 = load i32, i32* @fp, align 4
  %v1_ac98 = trunc i32 %v0_ac98 to i8
  %v2_ac98 = load i32, i32* %r0.global-to-local, align 4
  %v3_ac98 = add i32 %v2_ac98, 2
  %v4_ac98 = inttoptr i32 %v3_ac98 to i8*
  store i8 %v1_ac98, i8* %v4_ac98, align 1
  %v0_ac9c = load i32, i32* %r3.global-to-local, align 4
  %v1_ac9c = load i32, i32* %r0.global-to-local, align 4
  %v2_ac9c = add i32 %v1_ac9c, 16
  %v3_ac9c = inttoptr i32 %v2_ac9c to i32*
  store i32 %v0_ac9c, i32* %v3_ac9c, align 4
  %v0_aca0 = load i32, i32* %r2.global-to-local, align 4
  %v3_aca0 = mul i32 %v0_aca0, 16
  %v1_aca4 = load i32, i32* %lr.global-to-local, align 4
  %v2_aca4 = add i32 %v1_aca4, %v3_aca0
  store i32 %v2_aca4, i32* %r2.global-to-local, align 4
  %v1_aca8 = add i32 %v2_aca4, 13
  %v2_aca8 = inttoptr i32 %v1_aca8 to i8*
  %v3_aca8 = load i8, i8* %v2_aca8, align 1
  %v4_aca8 = zext i8 %v3_aca8 to i32
  store i32 %v4_aca8, i32* %r1.global-to-local, align 4
  %v1_acac = add i32 %v2_aca4, 12
  %v2_acac = inttoptr i32 %v1_acac to i8*
  %v3_acac = load i8, i8* %v2_acac, align 1
  %v4_acac = zext i8 %v3_acac to i32
  %v4_acb0 = mul nuw nsw i32 %v4_aca8, 256
  %v5_acb0 = or i32 %v4_acac, %v4_acb0
  store i32 %v5_acb0, i32* %r3.global-to-local, align 4
  %v0_acb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_acb4 = add i32 %v0_acb4, 40
  store i32 %v1_acb4, i32* @r4, align 4
  %v3_acb8 = add i32 %v0_acb4, 20
  %v4_acb8 = inttoptr i32 %v3_acb8 to i8*
  store i8 %v3_acac, i8* %v4_acb8, align 1
  store i32 %v0_ac60, i32* %r0.global-to-local, align 4
  %v0_acc0 = load i32, i32* %r3.global-to-local, align 4
  %v3_acc0 = sdiv i32 %v0_acc0, 256
  store i32 %v3_acc0, i32* %r3.global-to-local, align 4
  %v1_acc4 = trunc i32 %v3_acc0 to i8
  %v3_acc4 = add i32 %v0_ac60, 1
  %v4_acc4 = inttoptr i32 %v3_acc4 to i8*
  store i8 %v1_acc4, i8* %v4_acc4, align 1
  %v0_acc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_acc8 = add i32 %v0_acc8, 8
  %v2_acc8 = inttoptr i32 %v1_acc8 to i32*
  %v3_acc8 = load i32, i32* %v2_acc8, align 4
  store i32 %v3_acc8, i32* %r1.global-to-local, align 4
  store i32 %v0_ac60, i32* %lr.global-to-local, align 4
  %v0_acd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_acd0 = add i32 %v0_acd0, 13
  %v2_acd0 = inttoptr i32 %v1_acd0 to i8*
  %v3_acd0 = load i8, i8* %v2_acd0, align 1
  %v4_acd0 = zext i8 %v3_acd0 to i32
  store i32 %v4_acd0, i32* %r3.global-to-local, align 4
  %v1_acd4 = add i32 %v0_acc8, 15
  %v2_acd4 = inttoptr i32 %v1_acd4 to i8*
  %v3_acd4 = load i8, i8* %v2_acd4, align 1
  %v4_acd4 = zext i8 %v3_acd4 to i32
  store i32 %v4_acd4, i32* %ip.global-to-local, align 4
  %v1_acd8 = add i32 %v0_acc8, 14
  %v2_acd8 = inttoptr i32 %v1_acd8 to i8*
  %v3_acd8 = load i8, i8* %v2_acd8, align 1
  %v4_acd8 = zext i8 %v3_acd8 to i32
  store i32 %v4_acd8, i32* %r0.global-to-local, align 4
  %v2_acdc = add i32 %v0_ac60, 4
  %v3_acdc = inttoptr i32 %v2_acdc to i32*
  store i32 %v3_acc8, i32* %v3_acdc, align 4
  store i32 %v0_ac60, i32* %r1.global-to-local, align 4
  %v0_ace4 = load i32, i32* %r3.global-to-local, align 4
  %v1_ace4 = or i32 %v0_ace4, 1
  store i32 %v1_ace4, i32* %r3.global-to-local, align 4
  %v0_ace8 = load i32, i32* %r2.global-to-local, align 4
  %v1_ace8 = add i32 %v0_ace8, 4
  %v2_ace8 = inttoptr i32 %v1_ace8 to i32*
  %v3_ace8 = load i32, i32* %v2_ace8, align 4
  store i32 %v3_ace8, i32* %lr.global-to-local, align 4
  %v1_acec = trunc i32 %v1_ace4 to i8
  %v3_acec = add i32 %v0_ac60, 13
  %v4_acec = inttoptr i32 %v3_acec to i8*
  store i8 %v1_acec, i8* %v4_acec, align 1
  %v0_acf0 = load i32, i32* %r1.global-to-local, align 4
  %v1_acf0 = add i32 %v0_acf0, 12
  %v2_acf0 = inttoptr i32 %v1_acf0 to i8*
  %v3_acf0 = load i8, i8* %v2_acf0, align 1
  %v4_acf0 = zext i8 %v3_acf0 to i32
  store i32 %v4_acf0, i32* %r2.global-to-local, align 4
  %v1_acf4 = add i32 %v0_acf0, 13
  %v2_acf4 = inttoptr i32 %v1_acf4 to i8*
  %v3_acf4 = load i8, i8* %v2_acf4, align 1
  %v4_acf4 = zext i8 %v3_acf4 to i32
  %v0_acf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_acf8 = load i32, i32* %ip.global-to-local, align 4
  %v4_acf8 = mul i32 %v1_acf8, 256
  %v5_acf8 = or i32 %v4_acf8, %v0_acf8
  store i32 %v5_acf8, i32* %r0.global-to-local, align 4
  %tmp118 = urem i8 %v3_acf0, 16
  %v1_acfc = zext i8 %tmp118 to i32
  store i32 %v0_ac60, i32* %ip.global-to-local, align 4
  %v3_ad04 = sdiv i32 %v5_acf8, 256
  store i32 %v3_ad04, i32* %r1.global-to-local, align 4
  %v1_ad08 = or i32 %v1_acfc, 128
  store i32 %v1_ad08, i32* %r2.global-to-local, align 4
  %v1_ad0c = or i32 %v4_acf4, 16
  store i32 %v1_ad0c, i32* %r3.global-to-local, align 4
  %v1_ad10 = trunc i32 %v3_ad04 to i8
  %v3_ad10 = add i32 %v0_ac60, 3
  %v4_ad10 = inttoptr i32 %v3_ad10 to i8*
  store i8 %v1_ad10, i8* %v4_ad10, align 1
  %v0_ad14 = load i32, i32* %lr.global-to-local, align 4
  %v1_ad14 = load i32, i32* %ip.global-to-local, align 4
  %v2_ad14 = add i32 %v1_ad14, 8
  %v3_ad14 = inttoptr i32 %v2_ad14 to i32*
  store i32 %v0_ad14, i32* %v3_ad14, align 4
  %v0_ad18 = load i32, i32* %r2.global-to-local, align 4
  %v1_ad18 = trunc i32 %v0_ad18 to i8
  %v2_ad18 = load i32, i32* %ip.global-to-local, align 4
  %v3_ad18 = add i32 %v2_ad18, 12
  %v4_ad18 = inttoptr i32 %v3_ad18 to i8*
  store i8 %v1_ad18, i8* %v4_ad18, align 1
  %v0_ad1c = load i32, i32* %r3.global-to-local, align 4
  %v1_ad1c = trunc i32 %v0_ad1c to i8
  %v2_ad1c = load i32, i32* %ip.global-to-local, align 4
  %v3_ad1c = add i32 %v2_ad1c, 13
  %v4_ad1c = inttoptr i32 %v3_ad1c to i8*
  store i8 %v1_ad1c, i8* %v4_ad1c, align 1
  %v0_ad20 = load i32, i32* %r0.global-to-local, align 4
  %v1_ad20 = trunc i32 %v0_ad20 to i8
  %v2_ad20 = load i32, i32* %ip.global-to-local, align 4
  %v3_ad20 = add i32 %v2_ad20, 2
  %v4_ad20 = inttoptr i32 %v3_ad20 to i8*
  store i8 %v1_ad20, i8* %v4_ad20, align 1
  %v0_ad24 = call i32 @function_ef90()
  %v1_ad24 = trunc i32 %v0_ad24 to i8
  store i32 %v0_ad24, i32* %r0.global-to-local, align 4
  store i32 %v0_ac60, i32* %lr.global-to-local, align 4
  store i32 %v1_a5d4, i32* %r1.global-to-local, align 4
  %v3_ad30 = load i8, i8* %v4_acec, align 1
  %v4_ad30 = zext i8 %v3_ad30 to i32
  store i32 %v1_ad34, i32* %r2.global-to-local, align 4
  %v1_ad38 = and i32 %v4_ad30, 223
  %v5_ad3c = or i32 %v1_ad38, %v4_ad3c
  store i32 %v5_ad3c, i32* %r3.global-to-local, align 4
  %v1_ad40 = trunc i32 %v5_ad3c to i8
  store i8 %v1_ad40, i8* %v4_acec, align 1
  store i32 %v1_a5f4, i32* %ip.global-to-local, align 4
  %v0_ad48 = load i32, i32* %lr.global-to-local, align 4
  %v1_ad48 = add i32 %v0_ad48, 13
  %v2_ad48 = inttoptr i32 %v1_ad48 to i8*
  %v3_ad48 = load i8, i8* %v2_ad48, align 1
  %v4_ad48 = zext i8 %v3_ad48 to i32
  store i32 %v1_ad4c, i32* %r3.global-to-local, align 4
  %v1_ad50 = and i32 %v4_ad48, 239
  %v5_ad54 = or i32 %v1_ad50, %v4_ad54
  store i32 %v5_ad54, i32* %r2.global-to-local, align 4
  %v1_ad58 = trunc i32 %v5_ad54 to i8
  store i8 %v1_ad58, i8* %v2_ad48, align 1
  %v0_ad5c = load i32, i32* %lr.global-to-local, align 4
  %v1_ad5c = add i32 %v0_ad5c, 13
  %v2_ad5c = inttoptr i32 %v1_ad5c to i8*
  %v3_ad5c = load i8, i8* %v2_ad5c, align 1
  %v4_ad5c = zext i8 %v3_ad5c to i32
  store i32 %v1_a614, i32* %lr.global-to-local, align 4
  store i32 %v0_ac60, i32* %r1.global-to-local, align 4
  store i32 %v1_ad68, i32* %r2.global-to-local, align 4
  %v1_ad6c = and i32 %v4_ad5c, 247
  %v5_ad70 = or i32 %v1_ad6c, %v4_ad70
  store i32 %v5_ad70, i32* %r3.global-to-local, align 4
  %v1_ad74 = trunc i32 %v5_ad70 to i8
  store i8 %v1_ad74, i8* %v4_acec, align 1
  store i32 %v1_a634, i32* %ip.global-to-local, align 4
  %v0_ad7c = load i32, i32* %r1.global-to-local, align 4
  %v1_ad7c = add i32 %v0_ad7c, 13
  %v2_ad7c = inttoptr i32 %v1_ad7c to i8*
  %v3_ad7c = load i8, i8* %v2_ad7c, align 1
  %v4_ad7c = zext i8 %v3_ad7c to i32
  store i32 %v1_ad80, i32* %r3.global-to-local, align 4
  %v1_ad84 = and i32 %v4_ad7c, 251
  %v5_ad88 = or i32 %v1_ad84, %v4_ad88
  store i32 %v5_ad88, i32* %r2.global-to-local, align 4
  %v1_ad8c = trunc i32 %v5_ad88 to i8
  store i8 %v1_ad8c, i8* %v2_ad7c, align 1
  store i32 %v1_a654, i32* %lr.global-to-local, align 4
  %v0_ad94 = load i32, i32* %r1.global-to-local, align 4
  %v1_ad94 = add i32 %v0_ad94, 13
  %v2_ad94 = inttoptr i32 %v1_ad94 to i8*
  %v3_ad94 = load i8, i8* %v2_ad94, align 1
  %v4_ad94 = zext i8 %v3_ad94 to i32
  store i32 %v1_ad98, i32* %r2.global-to-local, align 4
  %v1_ad9c = and i32 %v4_ad94, 253
  %v4_ada0 = or i32 %v1_ad9c, %v3_ada0
  store i32 %v4_ada0, i32* %r3.global-to-local, align 4
  %v1_ada4 = trunc i32 %v4_ada0 to i8
  store i8 %v1_ada4, i8* %v2_ad94, align 1
  %v0_ada8 = load i32, i32* %r1.global-to-local, align 4
  %v1_ada8 = add i32 %v0_ada8, 13
  %v2_ada8 = inttoptr i32 %v1_ada8 to i8*
  %v3_ada8 = load i8, i8* %v2_ada8, align 1
  %v4_ada8 = zext i8 %v3_ada8 to i32
  %v1_adb0 = and i32 %v4_ada8, 254
  %v2_adb8 = or i32 %v1_adb0, %v1_adb4
  store i32 %v2_adb8, i32* %r3.global-to-local, align 4
  store i32 %v0_ac60, i32* %r2.global-to-local, align 4
  %v4_adc0 = sdiv i32 %v0_ad24, 256
  store i32 %v4_adc0, i32* %r1.global-to-local, align 4
  %v1_adc4 = trunc i32 %v2_adb8 to i8
  store i8 %v1_adc4, i8* %v4_acec, align 1
  %v0_adc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_adc8 = trunc i32 %v0_adc8 to i8
  %v2_adc8 = load i32, i32* %r2.global-to-local, align 4
  %v3_adc8 = add i32 %v2_adc8, 15
  %v4_adc8 = inttoptr i32 %v3_adc8 to i8*
  store i8 %v1_adc8, i8* %v4_adc8, align 1
  %v3_adcc = load i32, i32* %r2.global-to-local, align 4
  %v4_adcc = add i32 %v3_adcc, 14
  %v5_adcc = inttoptr i32 %v4_adcc to i8*
  store i8 %v1_ad24, i8* %v5_adcc, align 1
  store i32 %v6_a68c, i32* %r1.global-to-local, align 4
  %v0_add4 = load i32, i32* @r4, align 4
  store i32 %v0_add4, i32* %r0.global-to-local, align 4
  %v2_add8 = call i32 @function_f044(i32 %v0_add4, i32 %v6_a68c)
  store i32 %v2_add8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_ade4 = load i32, i32* @r4, align 4
  %v4_ade4 = add i32 %v2_ade4, %v6_a68c
  %v5_ade4 = inttoptr i32 %v4_ade4 to i8*
  store i8 0, i8* %v5_ade4, align 1
  %v3_ade8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v1_a4e0, i32* %lr.global-to-local, align 4
  %v1_adf0 = add i32 %v3_ade8, 1
  store i32 %v1_adf0, i32* %r3.global-to-local, align 4
  %v9_adf4 = icmp eq i32 %v1_adf0, %v1_a4e0
  store i1 %v9_adf4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_adf0, i32* %stack_var_-40, align 4
  %v5_adfc = icmp slt i32 %v1_adf0, %v1_a4e0
  br i1 %v5_adfc, label %dec_label_pc_a748.outer, label %dec_label_pc_a924.preheader

; uselistorder directives
  uselistorder i32 %v1_adf0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ad24, { 0, 2, 1 }
  uselistorder i32 %v3_ad04, { 1, 0 }
  uselistorder i32 %v0_acc8, { 1, 0, 2 }
  uselistorder i32 %v3_acc0, { 1, 0 }
  uselistorder i32 %v0_ac60, { 5, 6, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4 }
  uselistorder i32 %v3_abd8, { 1, 0 }
  uselistorder i32 %v2_abc0, { 1, 0 }
  uselistorder i32 %v3_aba4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ab68, { 1, 0 }
  uselistorder i32 %v2_ab4c, { 1, 2, 3, 0 }
  uselistorder i32 %v4_ab38, { 1, 0 }
  uselistorder i32 %v0_ab34, { 0, 2, 1 }
  uselistorder i32 %v4_ab24, { 1, 0 }
  uselistorder i32 %v0_ab20, { 0, 2, 1 }
  uselistorder i32 %v8_aae8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_aaac, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_aa84, { 1, 0 }
  uselistorder i32 %v7_aa60, { 1, 0, 2 }
  uselistorder i32 %v1_aa44, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_a9e4, { 0, 2, 1 }
  uselistorder i32 %v0_a9cc, { 1, 0, 2 }
  uselistorder i32 %v3_a9a8, { 1, 0 }
  uselistorder i32 %v3_a988, { 3, 2, 0, 1 }
  uselistorder i32 %v2_a974, { 0, 2, 1 }
  uselistorder i1 %v3_aa68, { 1, 0 }
  uselistorder i32 %v1_a93c, { 3, 2, 0, 1 }
  uselistorder i32 %v1_a914, { 1, 0, 2, 3 }
  uselistorder i1 %v3_a900, { 1, 0 }
  uselistorder i32 %v3_a8fc, { 0, 2, 3, 1 }
  uselistorder i32 %v5_a8b8, { 1, 0 }
  uselistorder i1 %v9_a89c, { 1, 0 }
  uselistorder i32 %v4_a8b0, { 1, 0 }
  uselistorder i32 %v4_a8ac, { 1, 0 }
  uselistorder i32 %v0_ab6c, { 2, 0, 5, 6, 3, 1, 4 }
  uselistorder i1 %v7_a7bc, { 1, 0, 2 }
  uselistorder i32 %stack_var_-56.0, { 1, 0 }
  uselistorder i32 %stack_var_-336.0.ph, { 4, 5, 2, 3, 0, 1 }
  uselistorder i32 %v1_ad98, { 1, 0 }
  uselistorder i32 %v1_ad80, { 1, 0 }
  uselistorder i32 %v1_ad4c, { 1, 0 }
  uselistorder i32 %v1_ac20, { 1, 0 }
  uselistorder i32 %v1_a7e4, { 1, 0 }
  uselistorder i32 %v5_a8b4, { 1, 0 }
  uselistorder i32 %v1_ad68, { 1, 0 }
  uselistorder i32 %v1_ad34, { 1, 0 }
  uselistorder i1 %v2_a8cc, { 1, 0 }
  uselistorder i32 %v1_a8c8, { 1, 0 }
  uselistorder i32 %v4_a8c4, { 2, 0, 1 }
  uselistorder i32 %v4_a8a8, { 1, 0 }
  uselistorder i32 %v1_a81c, { 2, 1, 0 }
  uselistorder i1 %v3_ab18, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a738, { 6, 5, 3, 4, 7, 0, 1, 2, 8 }
  uselistorder i32 %v3_a734, { 1, 0, 2 }
  uselistorder i32 %v3_a730, { 1, 0, 2 }
  uselistorder i1 %v2_a71c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a718, { 1, 2, 3, 0 }
  uselistorder i32 %v0_a714, { 1, 0, 3, 2 }
  uselistorder i32 %v3_a6d4, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_a6bc, { 2, 1, 0 }
  uselistorder i32 %v1_a6ac, { 1, 0 }
  uselistorder i32 %v6_a68c, { 0, 5, 4, 1, 6, 8, 7, 9, 10, 3, 2 }
  uselistorder i32 %v1_a674, { 1, 0 }
  uselistorder i32 %v1_a654, { 1, 2, 0 }
  uselistorder i32 %v1_a634, { 1, 2, 0 }
  uselistorder i32 %v1_a614, { 1, 2, 0 }
  uselistorder i32 %v1_a5f4, { 1, 2, 0 }
  uselistorder i32 %v1_a5d4, { 1, 2, 0 }
  uselistorder i32 %v6_a534, { 2, 1, 3, 0 }
  uselistorder i32 %v4_a51c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_a50c, { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 %v1_a4e0, { 12, 13, 14, 6, 7, 8, 5, 9, 10, 11, 15, 4, 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 18, 16, 17 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 54, 56, 55, 57, 59, 58, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 23, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 24, 25, 26, 27, 30, 29, 31, 33, 32, 34, 36, 35, 38, 42, 37, 39, 41, 40, 45, 43, 44, 46, 47, 48, 51, 49, 52, 53, 50, 54, 57, 55, 56, 58, 59, 63, 60, 61, 62, 64, 66, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 25, 26, 27, 28, 29, 31, 32, 0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 9, 7, 10, 11, 12, 13, 14, 15, 17, 0, 18, 19, 16, 20, 21, 22, 23, 24, 25 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_aaa4, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_aa78, { 1, 0 }
  uselistorder label %dec_label_pc_a964, { 1, 0 }
  uselistorder label %dec_label_pc_a924, { 1, 0 }
  uselistorder label %dec_label_pc_a83c, { 2, 1, 3, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_a778, { 1, 0 }
}

define i32 @function_ae08(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ae08:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v18_ae08 = load i32, i32* @sb, align 4
  %v24_ae08 = load i32, i32* @fp, align 4
  %v1_ae0c = urem i32 %arg2, 256
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_ae28 = urem i32 %arg4, 256
  store i32 %v1_ae28, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_ae38 = call i32* @calloc(i32 %v1_ae0c, i32 4)
  %v4_ae38 = ptrtoint i32* %v2_ae38 to i32
  %v0_ae3c = load i32, i32* @r5, align 4
  store i32 %v0_ae3c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ae48 = load i32, i32* @r7, align 4
  store i32 %v0_ae48, i32* %r3.global-to-local, align 4
  %v0_ae4c = load i32, i32* @r4, align 4
  %v5_ae50 = inttoptr i32 %v0_ae3c to i32*
  %v6_ae50 = call i32 @function_8fc8(i32 %v0_ae4c, i32* %v5_ae50, i32 2, i32 %v0_ae48, i32 %v4_ae38)
  %v1_ae5c = urem i32 %v6_ae50, 256
  store i32 %v1_ae5c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ae68 = load i32, i32* @r5, align 4
  store i32 %v0_ae68, i32* %r1.global-to-local, align 4
  %v0_ae6c = load i32, i32* @r4, align 4
  %v5_ae70 = trunc i32 %v6_ae50 to i8
  %v6_ae74 = inttoptr i32 %v0_ae68 to i32*
  %v7_ae74 = call i32 @function_8fc8(i32 %v0_ae6c, i32* %v6_ae74, i32 3, i32 65535, i32 %v6_ae50)
  %v0_ae78 = load i32, i32* @r5, align 4
  store i32 %v0_ae78, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_ae88 = load i32, i32* @r4, align 4
  %v5_ae8c = inttoptr i32 %v0_ae78 to i32*
  %v6_ae8c = call i32 @function_8fc8(i32 %v0_ae88, i32* %v5_ae8c, i32 4, i32 64, i32 %v7_ae74)
  %v1_ae94 = urem i32 %v6_ae8c, 256
  store i32 %v1_ae94, i32* %ip.global-to-local, align 4
  %v0_ae98 = load i32, i32* @r5, align 4
  store i32 %v0_ae98, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_aea0 = load i32, i32* @r7, align 4
  store i32 %v0_aea0, i32* %r3.global-to-local, align 4
  %v0_aea4 = load i32, i32* @r4, align 4
  %v5_aea8 = trunc i32 %v6_ae8c to i8
  %v6_aeac = inttoptr i32 %v0_ae98 to i32*
  %v7_aeac = call i32 @function_8fc8(i32 %v0_aea4, i32* %v6_aeac, i32 5, i32 %v0_aea0, i32 %v6_ae8c)
  %v1_aeb8 = urem i32 %v7_aeac, 256
  store i32 %v1_aeb8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_aec4 = load i32, i32* @r5, align 4
  store i32 %v0_aec4, i32* %r1.global-to-local, align 4
  %v0_aec8 = load i32, i32* @r4, align 4
  %v5_aed0 = inttoptr i32 %v0_aec4 to i32*
  %v6_aed0 = call i32 @function_8fc8(i32 %v0_aec8, i32* %v5_aed0, i32 6, i32 65535, i32 %v1_aeb8)
  %v0_aed8 = load i32, i32* @r5, align 4
  store i32 %v0_aed8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_aed0, i32* %sb.global-to-local, align 4
  %v0_aee8 = load i32, i32* @r4, align 4
  %v5_aeec = inttoptr i32 %v0_aed8 to i32*
  %v6_aeec = call i32 @function_8fc8(i32 %v0_aee8, i32* %v5_aeec, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_aef8 = load i32, i32* @r5, align 4
  store i32 %v0_aef8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_af04 = load i32, i32* @r4, align 4
  %v5_af08 = inttoptr i32 %v0_aef8 to i32*
  %v6_af08 = call i32 @function_8fc8(i32 %v0_af04, i32* %v5_af08, i32 16, i32 65535, i32 %v6_aeec)
  %v0_af14 = load i32, i32* @r5, align 4
  store i32 %v0_af14, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_af20 = load i32, i32* @r4, align 4
  %v5_af24 = inttoptr i32 %v0_af14 to i32*
  %v6_af24 = call i32 @function_8fc8(i32 %v0_af20, i32* %v5_af24, i32 17, i32 65535, i32 %v6_af08)
  %v0_af28 = load i32, i32* @r5, align 4
  store i32 %v0_af28, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_af34 = load i32, i32* @r7, align 4
  store i32 %v0_af34, i32* %r3.global-to-local, align 4
  %v0_af38 = load i32, i32* @r4, align 4
  %v5_af3c = inttoptr i32 %v0_af28 to i32*
  %v6_af3c = call i32 @function_8fc8(i32 %v0_af38, i32* %v5_af3c, i32 10, i32 %v0_af34, i32 %v6_af24)
  %v0_af40 = load i32, i32* @r5, align 4
  store i32 %v0_af40, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_af50 = load i32, i32* @r4, align 4
  %v5_af54 = inttoptr i32 %v0_af40 to i32*
  %v6_af54 = call i32 @function_8fc8(i32 %v0_af50, i32* %v5_af54, i32 11, i32 1, i32 %v6_af3c)
  %v0_af58 = load i32, i32* @r5, align 4
  store i32 %v0_af58, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_af64 = load i32, i32* @r7, align 4
  store i32 %v0_af64, i32* %r3.global-to-local, align 4
  %v0_af68 = load i32, i32* @r4, align 4
  %v5_af6c = inttoptr i32 %v0_af58 to i32*
  %v6_af6c = call i32 @function_8fc8(i32 %v0_af68, i32* %v5_af6c, i32 12, i32 %v0_af64, i32 %v6_af54)
  %v0_af70 = load i32, i32* @r5, align 4
  store i32 %v0_af70, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_af7c = load i32, i32* @r7, align 4
  store i32 %v0_af7c, i32* %r3.global-to-local, align 4
  %v0_af80 = load i32, i32* @r4, align 4
  %v5_af84 = inttoptr i32 %v0_af70 to i32*
  %v6_af84 = call i32 @function_8fc8(i32 %v0_af80, i32* %v5_af84, i32 13, i32 %v0_af7c, i32 %v6_af6c)
  %v0_af88 = load i32, i32* @r5, align 4
  store i32 %v0_af88, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_af94 = load i32, i32* @r7, align 4
  store i32 %v0_af94, i32* %r3.global-to-local, align 4
  %v0_af98 = load i32, i32* @r4, align 4
  %v5_af9c = inttoptr i32 %v0_af88 to i32*
  %v6_af9c = call i32 @function_8fc8(i32 %v0_af98, i32* %v5_af9c, i32 14, i32 %v0_af94, i32 %v6_af84)
  %v0_afa0 = load i32, i32* @r5, align 4
  store i32 %v0_afa0, i32* %r1.global-to-local, align 4
  %v0_afa8 = load i32, i32* @r7, align 4
  store i32 %v0_afa8, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_afb0 = load i32, i32* @r4, align 4
  %v5_afb4 = inttoptr i32 %v0_afa0 to i32*
  %v6_afb4 = call i32 @function_8fc8(i32 %v0_afb0, i32* %v5_afb4, i32 15, i32 %v0_afa8, i32 %v6_af9c)
  %v0_afb8 = load i32, i32* @r5, align 4
  store i32 %v0_afb8, i32* %r1.global-to-local, align 4
  %v0_afbc = load i32, i32* @r7, align 4
  store i32 %v0_afbc, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_afb4, i32* %fp.global-to-local, align 4
  %v0_afc8 = load i32, i32* @r4, align 4
  %v5_afcc = inttoptr i32 %v0_afb8 to i32*
  %v6_afcc = call i32 @function_8fc8(i32 %v0_afc8, i32* %v5_afcc, i32 %v0_afbc, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_afd8 = load i32, i32* @r5, align 4
  store i32 %v0_afd8, i32* %r1.global-to-local, align 4
  store i32 %v6_afcc, i32* @sl, align 4
  %v0_afe0 = load i32, i32* @r4, align 4
  %v5_afe4 = inttoptr i32 %v0_afd8 to i32*
  %v6_afe4 = call i32 @function_8fc8(i32 %v0_afe0, i32* %v5_afe4, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_aff0 = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_aff0, i32* %r3.global-to-local, align 4
  %v1_aff4 = urem i32 %v6_afe4, 256
  store i32 %v1_aff4, i32* %ip.global-to-local, align 4
  %v0_aff8 = load i32, i32* @r5, align 4
  store i32 %v0_aff8, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_b000 = load i32, i32* @r4, align 4
  %v5_b008 = inttoptr i32 %v0_aff8 to i32*
  %v6_b008 = call i32 @function_8f5c(i32 %v0_b000, i32* %v5_b008, i32 19, i32 %v2_aff0, i32 %v1_aff4)
  %v0_b010 = load i32, i32* @r7, align 4
  %v1_b014 = inttoptr i32 %v0_b010 to i32*
  %v2_b014 = call i32 @time(i32* %v1_b014)
  %v1_b018 = load i32, i32* @r6, align 4
  %v2_b018 = add i32 %v1_b018, %v2_b014
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b02c = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_b030 = icmp eq i32 %v3_b02c, -1
  store i1 %v2_b030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b030, label %dec_label_pc_b5ac, label %dec_label_pc_b03c

dec_label_pc_b03c:                                ; preds = %dec_label_pc_ae08
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b044 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b044, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b04c = load i32, i32* @r7, align 4
  store i32 %v0_b04c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_b058 = call i32 @setsockopt(i32 %v3_b02c, i32 %v0_b04c, i32 3, i32* nonnull %stack_var_-40, i32 4)
  %v2_b05c = icmp eq i32 %v7_b058, -1
  store i1 %v2_b05c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b05c, label %dec_label_pc_b5b4, label %dec_label_pc_b064

dec_label_pc_b064:                                ; preds = %dec_label_pc_b03c
  store i32 %v1_ae0c, i32* %r3.global-to-local, align 4
  %v0_b074 = load i32, i32* %sb.global-to-local, align 4
  %v3_b074 = mul i32 %v0_b074, 65536
  store i32 %v3_b074, i32* %sb.global-to-local, align 4
  %v3_b07c = urem i32 %v7_ae74, 65536
  store i32 %v3_b07c, i32* %ip.global-to-local, align 4
  %v3_b080 = urem i32 %v0_b074, 65536
  store i32 %v3_b080, i32* %r1.global-to-local, align 4
  %v3_b084 = urem i32 %v6_aeec, 65536
  store i32 %v3_b084, i32* %r2.global-to-local, align 4
  %v2_b088 = icmp eq i32 %v1_ae0c, 0
  store i1 %v2_b088, i1* %cpsr_z.global-to-local, align 1
  %v0_b08c = load i32, i32* @r7, align 4
  store i32 %v0_b08c, i32* %stack_var_-40, align 4
  br i1 %v2_b088, label %dec_label_pc_b320.preheader, label %dec_label_pc_b0a0

dec_label_pc_b0a0:                                ; preds = %dec_label_pc_b064
  %v0_b0a8 = load i32, i32* @sl, align 4
  %v1_b0a8 = add i32 %v0_b0a8, 40
  %v1_b0bc = urem i32 %v0_b074, 256
  %tmp72 = udiv i32 %v7_ae74, 256
  %tmp73 = udiv i32 %v1_b0a8, 256
  %v1_b0d8 = urem i32 %v6_aeec, 256
  %tmp74 = mul i32 %v6_af08, 256
  %v1_b0f4 = and i32 %tmp74, 65280
  %tmp75 = udiv i32 %v6_af08, 256
  %v4_b0f8 = urem i32 %tmp75, 256
  %v5_b0f8 = or i32 %v4_b0f8, %v1_b0f4
  %v1_b0fc = urem i32 %v6_af3c, 2
  %v1_b100 = urem i32 %v6_af54, 2
  %v1_b104 = urem i32 %v6_af6c, 2
  %sext12 = mul i32 %tmp73, 16777216
  %v4_b120 = sdiv i32 %sext12, 16777216
  %v1_b124 = urem i32 %v6_af84, 2
  %tmp76 = udiv i32 %v6_aeec, 256
  %v3_b12c = urem i32 %tmp76, 256
  %v1_b134 = urem i32 %v6_af9c, 2
  store i32 %v1_b134, i32* %ip.global-to-local, align 4
  %v1_b138 = urem i32 %v6_af6c, 256
  store i32 %v1_b138, i32* %r1.global-to-local, align 4
  %v3_b13c = ashr i32 %sext12, 31
  store i32 %v3_b13c, i32* %r2.global-to-local, align 4
  %sext13 = mul i32 %tmp72, 16777216
  %v4_b140 = sdiv i32 %sext13, 16777216
  store i32 %v4_b140, i32* %r3.global-to-local, align 4
  %tmp77 = udiv i32 %v0_b074, 256
  %v0_b148 = load i32, i32* %fp.global-to-local, align 4
  %v1_b148 = urem i32 %v0_b148, 2
  %v4_b14c = mul nuw nsw i32 %v1_b0d8, 256
  %v5_b14c = or i32 %v4_b14c, %v3_b12c
  store i32 %v5_b14c, i32* @r5, align 4
  %v3_b168 = ashr i32 %sext13, 31
  store i32 %v3_b168, i32* @r4, align 4
  store i32 %v1_b0bc, i32* @fp, align 4
  store i32 %v1_b0d8, i32* @sb, align 4
  %sext9 = mul i32 %tmp77, 16777216
  %v4_b21c = sdiv i32 %sext9, 16777216
  %tmp = sub nsw i32 0, %v1_b0fc
  %v4_b238 = and i32 %tmp, 32
  %tmp85 = sub nsw i32 0, %v1_b100
  %v4_b250 = and i32 %tmp85, 16
  %tmp86 = sub nsw i32 0, %v1_b104
  %v4_b264 = and i32 %tmp86, 8
  %tmp87 = sub nsw i32 0, %v1_b124
  %v4_b278 = and i32 %tmp87, 4
  %tmp88 = sub nsw i32 0, %v1_b134
  %v3_b28c = and i32 %tmp88, 2
  %v1_b1d0 = trunc i32 %v3_b13c to i8
  %extract.t = trunc i32 %v4_b120 to i8
  %v2_b2dc = icmp eq i32 %v1_b138, 0
  br label %dec_label_pc_b174

dec_label_pc_b174:                                ; preds = %.thread11, %dec_label_pc_b0a0
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_b180 = call i32* @calloc(i32 1510, i32 1)
  %v4_b180 = ptrtoint i32* %v2_b180 to i32
  store i32 %v4_ae38, i32* %ip.global-to-local, align 4
  %v3_b188 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b188, i32* %r3.global-to-local, align 4
  %v2_b18c = load i32, i32* @r7, align 4
  %v5_b18c = mul i32 %v2_b18c, 4
  %v6_b18c = add i32 %v5_b18c, %v4_ae38
  %v7_b18c = inttoptr i32 %v6_b18c to i32*
  store i32 %v4_b180, i32* %v7_b18c, align 4
  %v0_b190 = load i32, i32* %ip.global-to-local, align 4
  %v1_b190 = load i32, i32* %r3.global-to-local, align 4
  %v4_b190 = mul i32 %v1_b190, 4
  %v5_b190 = add i32 %v4_b190, %v0_b190
  %v6_b190 = inttoptr i32 %v5_b190 to i32*
  %v7_b190 = load i32, i32* %v6_b190, align 4
  store i32 %v7_b190, i32* %r1.global-to-local, align 4
  %v1_b194 = inttoptr i32 %v7_b190 to i8*
  %v2_b194 = load i8, i8* %v1_b194, align 1
  %tmp89 = urem i8 %v2_b194, 16
  %v1_b198 = zext i8 %tmp89 to i32
  %v1_b19c = or i32 %v1_b198, 64
  store i32 %v1_b19c, i32* %r2.global-to-local, align 4
  %v1_b1a0 = trunc i32 %v1_b19c to i8
  store i8 %v1_b1a0, i8* %v1_b194, align 1
  %v0_b1a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b1a4 = inttoptr i32 %v0_b1a4 to i8*
  %v2_b1a4 = load i8, i8* %v1_b1a4, align 1
  %v1_b1a8 = and i8 %v2_b1a4, -16
  %v1_b1ac = or i8 %v1_b1a8, 5
  store i32 %v1_aeb8, i32* %r2.global-to-local, align 4
  store i8 %v1_b1ac, i8* %v1_b1a4, align 1
  %v2_b1bc = load i32, i32* %r1.global-to-local, align 4
  %v3_b1bc = add i32 %v2_b1bc, 1
  %v4_b1bc = inttoptr i32 %v3_b1bc to i8*
  store i8 %v5_ae70, i8* %v4_b1bc, align 1
  store i32 %v6_ae8c, i32* %ip.global-to-local, align 4
  %v2_b1c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_b1c4 = add i32 %v2_b1c4, 8
  %v4_b1c4 = inttoptr i32 %v3_b1c4 to i8*
  store i8 %v5_aea8, i8* %v4_b1c4, align 1
  store i32 %v3_b13c, i32* %r3.global-to-local, align 4
  %v0_b1cc = load i32, i32* %r2.global-to-local, align 4
  %v2_b1cc = icmp eq i32 %v0_b1cc, 0
  store i1 %v2_b1cc, i1* %cpsr_z.global-to-local, align 1
  %v2_b1d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_b1d0 = add i32 %v2_b1d0, 3
  %v4_b1d0 = inttoptr i32 %v3_b1d0 to i8*
  store i8 %v1_b1d0, i8* %v4_b1d0, align 1
  store i32 %v4_b120, i32* %r2.global-to-local, align 4
  %v0_b1d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b1d8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_b174
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_b1dc = load i32, i32* %r1.global-to-local, align 4
  %v4_b1dc = add i32 %v3_b1dc, 6
  %v5_b1dc = inttoptr i32 %v4_b1dc to i8*
  store i8 64, i8* %v5_b1dc, align 1
  %v0_b1e4.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t21 = trunc i32 %v0_b1e4.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b174, %bb
  %v0_b1e4.off0 = phi i8 [ %extract.t, %dec_label_pc_b174 ], [ %extract.t21, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_b1e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_b1e4 = add i32 %v2_b1e4, 2
  %v4_b1e4 = inttoptr i32 %v3_b1e4 to i8*
  store i8 %v0_b1e4.off0, i8* %v4_b1e4, align 1
  store i32 %v4_b140, i32* %ip.global-to-local, align 4
  %v0_b1ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b1ec, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v0_b1f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b1f0 = trunc i32 %v0_b1f0 to i8
  %v2_b1f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_b1f0 = add i32 %v2_b1f0, 9
  %v4_b1f0 = inttoptr i32 %v3_b1f0 to i8*
  store i8 %v1_b1f0, i8* %v4_b1f0, align 1
  %v0_b1f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b1f4, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b1f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_b1f4 = trunc i32 %v1_b1f4 to i8
  %v3_b1f4 = load i32, i32* %r1.global-to-local, align 4
  %v4_b1f4 = add i32 %v3_b1f4, 7
  %v5_b1f4 = inttoptr i32 %v4_b1f4 to i8*
  store i8 %v2_b1f4, i8* %v5_b1f4, align 1
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v3_b1f8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b1f8, i32* %r2.global-to-local, align 4
  %v0_b1fc = load i32, i32* %ip.global-to-local, align 4
  %v1_b1fc = trunc i32 %v0_b1fc to i8
  %v2_b1fc = load i32, i32* %r1.global-to-local, align 4
  %v3_b1fc = add i32 %v2_b1fc, 4
  %v4_b1fc = inttoptr i32 %v3_b1fc to i8*
  store i8 %v1_b1fc, i8* %v4_b1fc, align 1
  store i32 %v6_b008, i32* %ip.global-to-local, align 4
  %v0_b204 = load i32, i32* %r2.global-to-local, align 4
  %v3_b204 = mul i32 %v0_b204, 32
  store i32 %v3_b204, i32* %r3.global-to-local, align 4
  %v1_b208 = load i32, i32* %r1.global-to-local, align 4
  %v2_b208 = add i32 %v1_b208, 12
  %v3_b208 = inttoptr i32 %v2_b208 to i32*
  store i32 %v6_b008, i32* %v3_b208, align 4
  %v0_b20c = load i32, i32* %r3.global-to-local, align 4
  %v1_b20c = load i32, i32* %r2.global-to-local, align 4
  %tmp90 = mul i32 %v1_b20c, -8
  %v5_b20c = add i32 %v0_b20c, %tmp90
  %v1_b210 = load i32, i32* @r8, align 4
  %v2_b210 = add i32 %v1_b210, %v5_b20c
  store i32 %v2_b210, i32* %r3.global-to-local, align 4
  %v1_b214 = add i32 %v2_b210, 16
  %v2_b214 = inttoptr i32 %v1_b214 to i32*
  %v3_b214 = load i32, i32* %v2_b214, align 4
  %v1_b218 = load i32, i32* %r1.global-to-local, align 4
  %v2_b218 = add i32 %v1_b218, 16
  %v3_b218 = inttoptr i32 %v2_b218 to i32*
  store i32 %v3_b214, i32* %v3_b218, align 4
  store i32 %v4_b21c, i32* %r2.global-to-local, align 4
  %v0_b220 = load i32, i32* @r4, align 4
  %v1_b220 = trunc i32 %v0_b220 to i8
  %v2_b220 = load i32, i32* %r1.global-to-local, align 4
  %v3_b220 = add i32 %v2_b220, 5
  %v4_b220 = inttoptr i32 %v3_b220 to i8*
  store i8 %v1_b220, i8* %v4_b220, align 1
  %v0_b224 = load i32, i32* %r2.global-to-local, align 4
  %v1_b224 = trunc i32 %v0_b224 to i8
  %v2_b224 = load i32, i32* %r1.global-to-local, align 4
  %v3_b224 = add i32 %v2_b224, 20
  %v4_b224 = inttoptr i32 %v3_b224 to i8*
  store i8 %v1_b224, i8* %v4_b224, align 1
  %v0_b228 = load i32, i32* %r1.global-to-local, align 4
  %v1_b228 = add i32 %v0_b228, 20
  store i32 %v1_b228, i32* @r6, align 4
  %v1_b22c = add i32 %v0_b228, 33
  %v2_b22c = inttoptr i32 %v1_b22c to i8*
  %v3_b22c = load i8, i8* %v2_b22c, align 1
  %v4_b22c = zext i8 %v3_b22c to i32
  store i32 %v1_b0fc, i32* %ip.global-to-local, align 4
  %v1_b234 = and i32 %v4_b22c, 223
  %v5_b238 = or i32 %v1_b234, %v4_b238
  store i32 %v5_b238, i32* %r3.global-to-local, align 4
  %v1_b23c = trunc i32 %v5_b238 to i8
  store i8 %v1_b23c, i8* %v2_b22c, align 1
  %v0_b240 = load i32, i32* @r6, align 4
  %v1_b240 = add i32 %v0_b240, 13
  %v2_b240 = inttoptr i32 %v1_b240 to i8*
  %v3_b240 = load i8, i8* %v2_b240, align 1
  %v4_b240 = zext i8 %v3_b240 to i32
  %v0_b244 = load i32, i32* %r1.global-to-local, align 4
  %v1_b244 = add i32 %v0_b244, 40
  store i32 %v1_b244, i32* @r7, align 4
  store i32 %v1_b100, i32* %r1.global-to-local, align 4
  %v1_b24c = and i32 %v4_b240, 239
  %v5_b250 = or i32 %v1_b24c, %v4_b250
  store i32 %v5_b250, i32* %r2.global-to-local, align 4
  %v1_b254 = trunc i32 %v5_b250 to i8
  store i8 %v1_b254, i8* %v2_b240, align 1
  %v0_b258 = load i32, i32* @r6, align 4
  %v1_b258 = add i32 %v0_b258, 13
  %v2_b258 = inttoptr i32 %v1_b258 to i8*
  %v3_b258 = load i8, i8* %v2_b258, align 1
  %v4_b258 = zext i8 %v3_b258 to i32
  store i32 %v1_b104, i32* %r2.global-to-local, align 4
  %v1_b260 = and i32 %v4_b258, 247
  %v5_b264 = or i32 %v1_b260, %v4_b264
  store i32 %v5_b264, i32* %r3.global-to-local, align 4
  %v1_b268 = trunc i32 %v5_b264 to i8
  store i8 %v1_b268, i8* %v2_b258, align 1
  %v0_b26c = load i32, i32* @r6, align 4
  %v1_b26c = add i32 %v0_b26c, 13
  %v2_b26c = inttoptr i32 %v1_b26c to i8*
  %v3_b26c = load i8, i8* %v2_b26c, align 1
  %v4_b26c = zext i8 %v3_b26c to i32
  store i32 %v1_b124, i32* %r3.global-to-local, align 4
  %v1_b274 = and i32 %v4_b26c, 251
  %v5_b278 = or i32 %v1_b274, %v4_b278
  store i32 %v5_b278, i32* %r2.global-to-local, align 4
  %v1_b27c = trunc i32 %v5_b278 to i8
  store i8 %v1_b27c, i8* %v2_b26c, align 1
  %v0_b280 = load i32, i32* @r6, align 4
  %v1_b280 = add i32 %v0_b280, 13
  %v2_b280 = inttoptr i32 %v1_b280 to i8*
  %v3_b280 = load i8, i8* %v2_b280, align 1
  %v4_b280 = zext i8 %v3_b280 to i32
  store i32 %v1_b134, i32* %ip.global-to-local, align 4
  %v1_b288 = and i32 %v4_b280, 253
  %v4_b28c = or i32 %v1_b288, %v3_b28c
  store i32 %v4_b28c, i32* %r3.global-to-local, align 4
  %v1_b290 = trunc i32 %v4_b28c to i8
  store i8 %v1_b290, i8* %v2_b280, align 1
  %v0_b294 = load i32, i32* @r6, align 4
  %v1_b294 = add i32 %v0_b294, 12
  %v2_b294 = inttoptr i32 %v1_b294 to i8*
  %v3_b294 = load i8, i8* %v2_b294, align 1
  %v4_b294 = zext i8 %v3_b294 to i32
  store i32 %v4_b294, i32* %r2.global-to-local, align 4
  %v1_b298 = add i32 %v0_b294, 13
  %v2_b298 = inttoptr i32 %v1_b298 to i8*
  %v3_b298 = load i8, i8* %v2_b298, align 1
  %v4_b298 = zext i8 %v3_b298 to i32
  store i32 %v1_b148, i32* %r1.global-to-local, align 4
  %tmp91 = urem i8 %v3_b294, 16
  %v1_b2a0 = zext i8 %tmp91 to i32
  %v1_b2a4 = and i32 %v4_b298, 254
  %v2_b2a8 = or i32 %v1_b2a4, %v1_b148
  store i32 %v2_b2a8, i32* %r3.global-to-local, align 4
  %v1_b2ac = or i32 %v1_b2a0, 80
  store i32 %v1_b2ac, i32* %r2.global-to-local, align 4
  %v1_b2b0 = trunc i32 %v2_b2a8 to i8
  store i8 %v1_b2b0, i8* %v2_b298, align 1
  %v0_b2b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2b4 = trunc i32 %v0_b2b4 to i8
  %v2_b2b4 = load i32, i32* @r6, align 4
  %v3_b2b4 = add i32 %v2_b2b4, 12
  %v4_b2b4 = inttoptr i32 %v3_b2b4 to i8*
  store i8 %v1_b2b4, i8* %v4_b2b4, align 1
  store i32 %v5_b0f8, i32* %r2.global-to-local, align 4
  %v0_b2bc = load i32, i32* @fp, align 4
  %v1_b2bc = trunc i32 %v0_b2bc to i8
  %v2_b2bc = load i32, i32* @r6, align 4
  %v3_b2bc = add i32 %v2_b2bc, 1
  %v4_b2bc = inttoptr i32 %v3_b2bc to i8*
  store i8 %v1_b2bc, i8* %v4_b2bc, align 1
  %v0_b2c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2c0 = load i32, i32* @r6, align 4
  %v2_b2c0 = add i32 %v1_b2c0, 4
  %v3_b2c0 = inttoptr i32 %v2_b2c0 to i32*
  store i32 %v0_b2c0, i32* %v3_b2c0, align 4
  %v0_b2c4 = load i32, i32* @r5, align 4
  %v1_b2c4 = trunc i32 %v0_b2c4 to i8
  %v2_b2c4 = load i32, i32* @r6, align 4
  %v3_b2c4 = add i32 %v2_b2c4, 2
  %v4_b2c4 = inttoptr i32 %v3_b2c4 to i8*
  store i8 %v1_b2c4, i8* %v4_b2c4, align 1
  %v0_b2c8 = load i32, i32* @sb, align 4
  %v1_b2c8 = trunc i32 %v0_b2c8 to i8
  %v2_b2c8 = load i32, i32* @r6, align 4
  %v3_b2c8 = add i32 %v2_b2c8, 3
  %v4_b2c8 = inttoptr i32 %v3_b2c8 to i8*
  store i8 %v1_b2c8, i8* %v4_b2c8, align 1
  %v0_b2cc = call i32 @function_ef90()
  store i32 %v1_b138, i32* %ip.global-to-local, align 4
  %sext = mul i32 %v0_b2cc, 16777216
  %v1_b2d4 = sdiv i32 %sext, 16777216
  store i32 %v1_b2d4, i32* %r2.global-to-local, align 4
  %v3_b2d8 = ashr i32 %sext, 31
  store i32 %v3_b2d8, i32* %r3.global-to-local, align 4
  store i1 %v2_b2dc, i1* %cpsr_z.global-to-local, align 1
  %v1_b2e0 = trunc i32 %v3_b2d8 to i8
  %v2_b2e0 = load i32, i32* @r6, align 4
  %v3_b2e0 = add i32 %v2_b2e0, 15
  %v4_b2e0 = inttoptr i32 %v3_b2e0 to i8*
  store i8 %v1_b2e0, i8* %v4_b2e0, align 1
  %v0_b2e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b2e4, label %.thread11, label %bb82

bb82:                                             ; preds = %bb81
  %v1_b2e4 = load i32, i32* @r6, align 4
  %v2_b2e4 = add i32 %v1_b2e4, 13
  %v3_b2e4 = inttoptr i32 %v2_b2e4 to i8*
  %v4_b2e4 = load i8, i8* %v3_b2e4, align 1
  %v5_b2e4 = zext i8 %v4_b2e4 to i32
  %v2_b2e8 = or i32 %v5_b2e4, 8
  store i32 %v2_b2e8, i32* %r3.global-to-local, align 4
  %v2_b2ec = trunc i32 %v2_b2e8 to i8
  store i8 %v2_b2ec, i8* %v3_b2e4, align 1
  br label %.thread11

.thread11:                                        ; preds = %bb81, %bb82
  %v0_b2f0 = load i32, i32* @sl, align 4
  store i32 %v0_b2f0, i32* %r1.global-to-local, align 4
  %v0_b2f4 = load i32, i32* @r7, align 4
  %v0_b2f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2f8 = trunc i32 %v0_b2f8 to i8
  %v2_b2f8 = load i32, i32* @r6, align 4
  %v3_b2f8 = add i32 %v2_b2f8, 14
  %v4_b2f8 = inttoptr i32 %v3_b2f8 to i8*
  store i8 %v1_b2f8, i8* %v4_b2f8, align 1
  %v2_b2fc = call i32 @function_f044(i32 %v0_b2f4, i32 %v0_b2f0)
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b304 = load i32, i32* @r7, align 4
  %v3_b304 = load i32, i32* @sl, align 4
  %v4_b304 = add i32 %v3_b304, %v2_b304
  %v5_b304 = inttoptr i32 %v4_b304 to i8*
  store i8 0, i8* %v5_b304, align 1
  %v3_b308 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b308, i32* %r3.global-to-local, align 4
  store i32 %v1_ae0c, i32* %r2.global-to-local, align 4
  %v1_b310 = add i32 %v3_b308, 1
  store i32 %v1_b310, i32* @r7, align 4
  %v9_b314 = icmp eq i32 %v1_ae0c, %v1_b310
  store i1 %v9_b314, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b310, i32* %stack_var_-40, align 4
  %v8_b31c = icmp sgt i32 %v1_ae0c, %v1_b310
  br i1 %v8_b31c, label %dec_label_pc_b174, label %dec_label_pc_b320.preheader

dec_label_pc_b320.preheader:                      ; preds = %.thread11, %dec_label_pc_b064
  %v2_b360 = icmp eq i32 %v6_b008, -1
  %v3_b4f8 = icmp eq i32 %v3_b07c, 65535
  %v2_b574 = icmp eq i32 %v1_aff4, 0
  br label %dec_label_pc_b320

dec_label_pc_b320:                                ; preds = %dec_label_pc_b320.preheader, %dec_label_pc_b598
  store i32 %v1_ae0c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_b088, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_b088, label %dec_label_pc_b598, label %dec_label_pc_b334

dec_label_pc_b334:                                ; preds = %dec_label_pc_b320
  %v0_b334 = load i32, i32* @sl, align 4
  %v1_b334 = add i32 %v0_b334, 20
  store i32 %v1_b334, i32* @sb, align 4
  %tmp83 = mul i32 %v1_b334, 256
  %v1_b340 = and i32 %tmp83, 65280
  store i32 %v1_b340, i32* %r3.global-to-local, align 4
  %tmp84 = udiv i32 %v1_b334, 256
  %v4_b344 = urem i32 %tmp84, 256
  %v5_b344 = or i32 %v4_b344, %v1_b340
  store i32 %v5_b344, i32* %r2.global-to-local, align 4
  %v1_b34c = add i32 %v0_b334, 40
  store i32 %v1_b34c, i32* @fp, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_b45c

dec_label_pc_b35c:                                ; preds = %dec_label_pc_b45c
  store i32 %v6_b008, i32* %r1.global-to-local, align 4
  store i1 %v2_b360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b360, label %dec_label_pc_b4e8, label %dec_label_pc_b368

dec_label_pc_b368:                                ; preds = %dec_label_pc_b480, %dec_label_pc_b35c
  store i32 %v3_b07c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_b4f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b4f8, label %dec_label_pc_b504, label %dec_label_pc_b37c

dec_label_pc_b37c:                                ; preds = %dec_label_pc_b4e8.dec_label_pc_b37c_crit_edge, %dec_label_pc_b368
  %v1_b380 = phi i32 [ %v1_b380.pre, %dec_label_pc_b4e8.dec_label_pc_b37c_crit_edge ], [ 65535, %dec_label_pc_b368 ]
  store i32 %v3_b080, i32* %r3.global-to-local, align 4
  %v9_b380 = icmp eq i32 %v3_b080, %v1_b380
  store i1 %v9_b380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b380, label %dec_label_pc_b520, label %dec_label_pc_b388

dec_label_pc_b388:                                ; preds = %dec_label_pc_b504.dec_label_pc_b388_crit_edge, %dec_label_pc_b37c
  %v1_b38c = phi i32 [ %v1_b38c.pre, %dec_label_pc_b504.dec_label_pc_b388_crit_edge ], [ %v1_b380, %dec_label_pc_b37c ]
  store i32 %v3_b084, i32* %ip.global-to-local, align 4
  %v9_b38c = icmp eq i32 %v3_b084, %v1_b38c
  store i1 %v9_b38c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b38c, label %dec_label_pc_b53c, label %dec_label_pc_b394

dec_label_pc_b394:                                ; preds = %dec_label_pc_b520.dec_label_pc_b394_crit_edge, %dec_label_pc_b388
  %v1_b398 = phi i32 [ %v1_b398.pre, %dec_label_pc_b520.dec_label_pc_b394_crit_edge ], [ %v1_b38c, %dec_label_pc_b388 ]
  store i32 %v6_af08, i32* %r1.global-to-local, align 4
  %v9_b398 = icmp eq i32 %v6_af08, %v1_b398
  store i1 %v9_b398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b398, label %dec_label_pc_b558, label %dec_label_pc_b3a0

dec_label_pc_b3a0:                                ; preds = %dec_label_pc_b53c.dec_label_pc_b3a0_crit_edge, %dec_label_pc_b394
  %v1_b3a4 = phi i32 [ %v1_b3a4.pre, %dec_label_pc_b53c.dec_label_pc_b3a0_crit_edge ], [ %v1_b398, %dec_label_pc_b394 ]
  store i32 %v6_af24, i32* %r2.global-to-local, align 4
  %v9_b3a4 = icmp eq i32 %v6_af24, %v1_b3a4
  store i1 %v9_b3a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b3a4, label %dec_label_pc_b56c, label %dec_label_pc_b3ac

dec_label_pc_b3ac:                                ; preds = %dec_label_pc_b558, %dec_label_pc_b3a0
  store i32 %v1_aff4, i32* %r3.global-to-local, align 4
  store i1 %v2_b574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b574, label %dec_label_pc_b3b8, label %dec_label_pc_b580

dec_label_pc_b3b8:                                ; preds = %dec_label_pc_b3ac, %dec_label_pc_b56c, %dec_label_pc_b580
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b3bc = load i32, i32* @r7, align 4
  %v1_b3bc = trunc i32 %v0_b3bc to i8
  %v2_b3bc = load i32, i32* @r5, align 4
  %v3_b3bc = add i32 %v2_b3bc, 10
  %v4_b3bc = inttoptr i32 %v3_b3bc to i8*
  store i8 %v1_b3bc, i8* %v4_b3bc, align 1
  %v0_b3c0 = load i32, i32* @r7, align 4
  %v1_b3c0 = trunc i32 %v0_b3c0 to i8
  %v2_b3c0 = load i32, i32* @r5, align 4
  %v3_b3c0 = add i32 %v2_b3c0, 11
  %v4_b3c0 = inttoptr i32 %v3_b3c0 to i8*
  store i8 %v1_b3c0, i8* %v4_b3c0, align 1
  %v0_b3c4 = load i32, i32* @r5, align 4
  store i32 %v0_b3c4, i32* @r0, align 4
  %v2_b3c8 = call i32 @function_d3d4(i32 %v0_b3c4, i32 20)
  %v3_b3c8 = trunc i32 %v2_b3c8 to i8
  %v4_b3cc23 = udiv i32 %v2_b3c8, 256
  %v1_b3d0 = trunc i32 %v4_b3cc23 to i8
  %v2_b3d0 = load i32, i32* @r5, align 4
  %v3_b3d0 = add i32 %v2_b3d0, 11
  %v4_b3d0 = inttoptr i32 %v3_b3d0 to i8*
  store i8 %v1_b3d0, i8* %v4_b3d0, align 1
  %v3_b3d4 = load i32, i32* @r5, align 4
  %v4_b3d4 = add i32 %v3_b3d4, 10
  %v5_b3d4 = inttoptr i32 %v4_b3d4 to i8*
  store i8 %v3_b3c8, i8* %v5_b3d4, align 1
  %v0_b3d8 = load i32, i32* @r6, align 4
  store i32 %v0_b3d8, i32* @r1, align 4
  store i32 %v5_b344, i32* %r2.global-to-local, align 4
  %v0_b3e0 = load i32, i32* @sb, align 4
  store i32 %v0_b3e0, i32* %r3.global-to-local, align 4
  %v0_b3e4 = load i32, i32* @r7, align 4
  %v1_b3e4 = trunc i32 %v0_b3e4 to i8
  %v3_b3e4 = add i32 %v0_b3d8, 16
  %v4_b3e4 = inttoptr i32 %v3_b3e4 to i8*
  store i8 %v1_b3e4, i8* %v4_b3e4, align 1
  %v0_b3e8 = load i32, i32* @r7, align 4
  %v1_b3e8 = trunc i32 %v0_b3e8 to i8
  %v2_b3e8 = load i32, i32* @r6, align 4
  %v3_b3e8 = add i32 %v2_b3e8, 17
  %v4_b3e8 = inttoptr i32 %v3_b3e8 to i8*
  store i8 %v1_b3e8, i8* %v4_b3e8, align 1
  %v0_b3ec = load i32, i32* @r5, align 4
  %v4_b3f0 = call i32 @function_d430(i32 %v0_b3ec, i32 %v0_b3d8, i32 %v5_b344, i32 %v0_b3e0)
  %v5_b3f0 = trunc i32 %v4_b3f0 to i8
  %v4_b3f424 = udiv i32 %v4_b3f0, 256
  %v1_b3f8 = trunc i32 %v4_b3f424 to i8
  %v2_b3f8 = load i32, i32* @r6, align 4
  %v3_b3f8 = add i32 %v2_b3f8, 17
  %v4_b3f8 = inttoptr i32 %v3_b3f8 to i8*
  store i8 %v1_b3f8, i8* %v4_b3f8, align 1
  %v3_b3fc = load i32, i32* @r6, align 4
  %v4_b3fc = add i32 %v3_b3fc, 16
  %v5_b3fc = inttoptr i32 %v4_b3fc to i8*
  store i8 %v5_b3f0, i8* %v5_b3fc, align 1
  %v3_b400 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b400, i32* %r3.global-to-local, align 4
  %v0_b404 = load i32, i32* @r5, align 4
  %v1_b404 = add i32 %v0_b404, 20
  %v2_b404 = inttoptr i32 %v1_b404 to i32*
  %v3_b404 = load i32, i32* %v2_b404, align 4
  %v3_b40c = udiv i32 %v3_b404, 65536
  store i32 %v3_b40c, i32* %r2.global-to-local, align 4
  %v5_b410 = mul i32 %v3_b400, 24
  %v1_b414 = load i32, i32* @r8, align 4
  %v2_b414 = add i32 %v1_b414, %v5_b410
  store i32 %v2_b414, i32* %ip.global-to-local, align 4
  %v3_b41822 = udiv i32 %v3_b404, 16777216
  %v1_b41c = trunc i32 %v3_b41822 to i8
  %v3_b41c = add i32 %v2_b414, 3
  %v4_b41c = inttoptr i32 %v3_b41c to i8*
  store i8 %v1_b41c, i8* %v4_b41c, align 1
  %v0_b420 = load i32, i32* %r2.global-to-local, align 4
  %v1_b420 = trunc i32 %v0_b420 to i8
  %v2_b420 = load i32, i32* %ip.global-to-local, align 4
  %v3_b420 = add i32 %v2_b420, 2
  %v4_b420 = inttoptr i32 %v3_b420 to i8*
  store i8 %v1_b420, i8* %v4_b420, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b428 = load i32, i32* @r5, align 4
  store i32 %v0_b428, i32* %r1.global-to-local, align 4
  %v0_b430 = load i32, i32* @fp, align 4
  store i32 %v0_b430, i32* %r2.global-to-local, align 4
  %v0_b438 = load i32, i32* %ip.global-to-local, align 4
  %v4_b438 = inttoptr i32 %v0_b438 to %sockaddr*
  %v7_b440 = inttoptr i32 %v0_b428 to i32*
  %v9_b440 = call i32 @sendto(i32 %v3_b02c, i32* %v7_b440, i32 %v0_b430, i32 16384, %sockaddr* %v4_b438, i32 16)
  %v3_b444 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b444, i32* %r3.global-to-local, align 4
  store i32 %v1_ae0c, i32* %ip.global-to-local, align 4
  %v1_b44c = add i32 %v3_b444, 1
  %v9_b450 = icmp eq i32 %v1_ae0c, %v1_b44c
  store i1 %v9_b450, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b44c, i32* %stack_var_-40, align 4
  %v7_b458 = icmp sgt i32 %v1_ae0c, %v1_b44c
  br i1 %v7_b458, label %dec_label_pc_b45c, label %dec_label_pc_b598

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b3b8, %dec_label_pc_b334
  %v1_b470 = phi i32 [ %v1_b44c, %dec_label_pc_b3b8 ], [ 0, %dec_label_pc_b334 ]
  %v5_b460 = mul i32 %v1_b470, 24
  %v1_b464 = load i32, i32* @r8, align 4
  %v2_b464 = add i32 %v1_b464, %v5_b460
  store i32 %v2_b464, i32* %r3.global-to-local, align 4
  store i32 %v4_ae38, i32* %ip.global-to-local, align 4
  %v1_b46c = add i32 %v2_b464, 20
  %v2_b46c = inttoptr i32 %v1_b46c to i8*
  %v3_b46c = load i8, i8* %v2_b46c, align 1
  %v4_b46c = zext i8 %v3_b46c to i32
  store i32 %v4_b46c, i32* %r2.global-to-local, align 4
  %v4_b470 = mul i32 %v1_b470, 4
  %v5_b470 = add i32 %v4_b470, %v4_ae38
  %v6_b470 = inttoptr i32 %v5_b470 to i32*
  %v7_b470 = load i32, i32* %v6_b470, align 4
  store i32 %v7_b470, i32* @r5, align 4
  %v2_b474 = icmp ugt i8 %v3_b46c, 30
  %v7_b474 = icmp eq i8 %v3_b46c, 31
  store i1 %v7_b474, i1* %cpsr_z.global-to-local, align 1
  %v1_b478 = add i32 %v7_b470, 20
  store i32 %v1_b478, i32* @r6, align 4
  %v2_b47c = xor i1 %v7_b474, true
  %v3_b47c = and i1 %v2_b474, %v2_b47c
  br i1 %v3_b47c, label %dec_label_pc_b35c, label %dec_label_pc_b480

dec_label_pc_b480:                                ; preds = %dec_label_pc_b45c
  %v1_b480 = add i32 %v2_b464, 16
  %v2_b480 = inttoptr i32 %v1_b480 to i32*
  %v3_b480 = load i32, i32* %v2_b480, align 4
  %v0_b484 = call i32 @function_ef90()
  %v3_b488 = load i32, i32* %stack_var_-40, align 4
  %v5_b490 = mul i32 %v3_b488, 24
  %v1_b498 = load i32, i32* @r8, align 4
  %v2_b498 = add i32 %v1_b498, %v5_b490
  store i32 %v2_b498, i32* %r1.global-to-local, align 4
  %v1_b49c = and i32 %v3_b480, 65280
  store i32 %v1_b49c, i32* %r3.global-to-local, align 4
  %v1_b494 = udiv i32 %v3_b480, 256
  %v3_b4a0 = and i32 %v1_b494, 65280
  store i32 %v3_b4a0, i32* %r2.global-to-local, align 4
  %v3_b4a4 = mul i32 %v3_b480, 16777216
  store i32 %v3_b4a4, i32* %ip.global-to-local, align 4
  %v1_b4a8 = add i32 %v2_b498, 20
  %v2_b4a8 = inttoptr i32 %v1_b4a8 to i8*
  %v3_b4a8 = load i8, i8* %v2_b4a8, align 1
  %v4_b4a8 = zext i8 %v3_b4a8 to i32
  %v4_b4ac = mul nuw nsw i32 %v1_b49c, 256
  %v5_b4ac = or i32 %v4_b4ac, %v3_b4a4
  store i32 %v5_b4ac, i32* %ip.global-to-local, align 4
  %v2_b4b4 = call i32 @llvm.bswap.i32(i32 %v3_b480)
  %v7_b4b8 = lshr i32 %v0_b484, %v4_b4a8
  %v8_b4b8 = add i32 %v7_b4b8, %v2_b4b4
  store i32 %v8_b4b8, i32* %r2.global-to-local, align 4
  %v2_b4d4 = call i32 @llvm.bswap.i32(i32 %v8_b4b8)
  store i32 %v2_b4d4, i32* %r3.global-to-local, align 4
  store i32 %v6_b008, i32* %r1.global-to-local, align 4
  store i1 %v2_b360, i1* %cpsr_z.global-to-local, align 1
  %v1_b4e0 = load i32, i32* @r5, align 4
  %v2_b4e0 = add i32 %v1_b4e0, 16
  %v3_b4e0 = inttoptr i32 %v2_b4e0 to i32*
  store i32 %v2_b4d4, i32* %v3_b4e0, align 4
  br i1 %v2_b360, label %dec_label_pc_b4e8, label %dec_label_pc_b368

dec_label_pc_b4e8:                                ; preds = %dec_label_pc_b480, %dec_label_pc_b35c
  %v0_b4e8 = call i32 @function_ef90()
  store i32 %v3_b07c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_b4f8, i1* %cpsr_z.global-to-local, align 1
  %v1_b4fc = load i32, i32* @r5, align 4
  %v2_b4fc = add i32 %v1_b4fc, 12
  %v3_b4fc = inttoptr i32 %v2_b4fc to i32*
  store i32 %v0_b4e8, i32* %v3_b4fc, align 4
  br i1 %v3_b4f8, label %dec_label_pc_b504, label %dec_label_pc_b4e8.dec_label_pc_b37c_crit_edge

dec_label_pc_b4e8.dec_label_pc_b37c_crit_edge:    ; preds = %dec_label_pc_b4e8
  %v1_b380.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b37c

dec_label_pc_b504:                                ; preds = %dec_label_pc_b4e8, %dec_label_pc_b368
  %v0_b504 = call i32 @function_ef90()
  %v1_b504 = trunc i32 %v0_b504 to i8
  %v4_b50825 = udiv i32 %v0_b504, 256
  %v1_b50c = trunc i32 %v4_b50825 to i8
  %v2_b50c = load i32, i32* @r5, align 4
  %v3_b50c = add i32 %v2_b50c, 5
  %v4_b50c = inttoptr i32 %v3_b50c to i8*
  store i8 %v1_b50c, i8* %v4_b50c, align 1
  store i32 %v3_b080, i32* %r3.global-to-local, align 4
  %v1_b514 = load i32, i32* @r4, align 4
  %v9_b514 = icmp eq i32 %v3_b080, %v1_b514
  store i1 %v9_b514, i1* %cpsr_z.global-to-local, align 1
  %v3_b518 = load i32, i32* @r5, align 4
  %v4_b518 = add i32 %v3_b518, 4
  %v5_b518 = inttoptr i32 %v4_b518 to i8*
  store i8 %v1_b504, i8* %v5_b518, align 1
  %v0_b51c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b51c, label %dec_label_pc_b520, label %dec_label_pc_b504.dec_label_pc_b388_crit_edge

dec_label_pc_b504.dec_label_pc_b388_crit_edge:    ; preds = %dec_label_pc_b504
  %v1_b38c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b388

dec_label_pc_b520:                                ; preds = %dec_label_pc_b504, %dec_label_pc_b37c
  %v0_b520 = call i32 @function_ef90()
  %v1_b520 = trunc i32 %v0_b520 to i8
  store i32 %v3_b084, i32* %ip.global-to-local, align 4
  %v4_b528 = sdiv i32 %v0_b520, 256
  store i32 %v4_b528, i32* %r3.global-to-local, align 4
  %v1_b52c = load i32, i32* @r4, align 4
  %v9_b52c = icmp eq i32 %v3_b084, %v1_b52c
  store i1 %v9_b52c, i1* %cpsr_z.global-to-local, align 1
  %v3_b530 = load i32, i32* @r5, align 4
  %v4_b530 = add i32 %v3_b530, 20
  %v5_b530 = inttoptr i32 %v4_b530 to i8*
  store i8 %v1_b520, i8* %v5_b530, align 1
  %v0_b534 = load i32, i32* %r3.global-to-local, align 4
  %v1_b534 = trunc i32 %v0_b534 to i8
  %v2_b534 = load i32, i32* @r6, align 4
  %v3_b534 = add i32 %v2_b534, 1
  %v4_b534 = inttoptr i32 %v3_b534 to i8*
  store i8 %v1_b534, i8* %v4_b534, align 1
  %v0_b538 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b538, label %dec_label_pc_b53c, label %dec_label_pc_b520.dec_label_pc_b394_crit_edge

dec_label_pc_b520.dec_label_pc_b394_crit_edge:    ; preds = %dec_label_pc_b520
  %v1_b398.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b394

dec_label_pc_b53c:                                ; preds = %dec_label_pc_b520, %dec_label_pc_b388
  %v0_b53c = call i32 @function_ef90()
  %v1_b53c = trunc i32 %v0_b53c to i8
  store i32 %v6_af08, i32* %r1.global-to-local, align 4
  %v4_b544 = sdiv i32 %v0_b53c, 256
  store i32 %v4_b544, i32* %r3.global-to-local, align 4
  %v1_b548 = load i32, i32* @r4, align 4
  %v9_b548 = icmp eq i32 %v6_af08, %v1_b548
  store i1 %v9_b548, i1* %cpsr_z.global-to-local, align 1
  %v1_b54c = trunc i32 %v4_b544 to i8
  %v2_b54c = load i32, i32* @r6, align 4
  %v3_b54c = add i32 %v2_b54c, 3
  %v4_b54c = inttoptr i32 %v3_b54c to i8*
  store i8 %v1_b54c, i8* %v4_b54c, align 1
  %v3_b550 = load i32, i32* @r6, align 4
  %v4_b550 = add i32 %v3_b550, 2
  %v5_b550 = inttoptr i32 %v4_b550 to i8*
  store i8 %v1_b53c, i8* %v5_b550, align 1
  %v0_b554 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b554, label %dec_label_pc_b558, label %dec_label_pc_b53c.dec_label_pc_b3a0_crit_edge

dec_label_pc_b53c.dec_label_pc_b3a0_crit_edge:    ; preds = %dec_label_pc_b53c
  %v1_b3a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b3a0

dec_label_pc_b558:                                ; preds = %dec_label_pc_b53c, %dec_label_pc_b394
  %v0_b558 = call i32 @function_ef90()
  store i32 %v6_af24, i32* %r2.global-to-local, align 4
  %v1_b560 = load i32, i32* @r4, align 4
  %v9_b560 = icmp eq i32 %v6_af24, %v1_b560
  store i1 %v9_b560, i1* %cpsr_z.global-to-local, align 1
  %v1_b564 = load i32, i32* @r6, align 4
  %v2_b564 = add i32 %v1_b564, 4
  %v3_b564 = inttoptr i32 %v2_b564 to i32*
  store i32 %v0_b558, i32* %v3_b564, align 4
  br i1 %v9_b560, label %dec_label_pc_b56c, label %dec_label_pc_b3ac

dec_label_pc_b56c:                                ; preds = %dec_label_pc_b558, %dec_label_pc_b3a0
  %v0_b56c = call i32 @function_ef90()
  store i32 %v1_aff4, i32* %r3.global-to-local, align 4
  store i1 %v2_b574, i1* %cpsr_z.global-to-local, align 1
  %v1_b578 = load i32, i32* @r6, align 4
  %v2_b578 = add i32 %v1_b578, 8
  %v3_b578 = inttoptr i32 %v2_b578 to i32*
  store i32 %v0_b56c, i32* %v3_b578, align 4
  br i1 %v2_b574, label %dec_label_pc_b3b8, label %dec_label_pc_b580

dec_label_pc_b580:                                ; preds = %dec_label_pc_b3ac, %dec_label_pc_b56c
  %v0_b580 = load i32, i32* @r5, align 4
  %v1_b580 = add i32 %v0_b580, 40
  store i32 %v1_b580, i32* @r4, align 4
  %v0_b588 = load i32, i32* @sl, align 4
  store i32 %v0_b588, i32* %r1.global-to-local, align 4
  %v2_b58c = call i32 @function_f044(i32 %v1_b580, i32 %v0_b588)
  %v0_b590 = load i32, i32* @r7, align 4
  %v1_b590 = trunc i32 %v0_b590 to i8
  %v2_b590 = load i32, i32* @r4, align 4
  %v3_b590 = load i32, i32* @sl, align 4
  %v4_b590 = add i32 %v3_b590, %v2_b590
  %v5_b590 = inttoptr i32 %v4_b590 to i8*
  store i8 %v1_b590, i8* %v5_b590, align 1
  br label %dec_label_pc_b3b8

dec_label_pc_b598:                                ; preds = %dec_label_pc_b3b8, %dec_label_pc_b320
  %v2_b59c = call i32 @time(i32* null)
  store i32 %v2_b018, i32* %r1.global-to-local, align 4
  %v9_b5a4 = icmp eq i32 %v2_b018, %v2_b59c
  store i1 %v9_b5a4, i1* %cpsr_z.global-to-local, align 1
  %v6_b5a8 = icmp slt i32 %v2_b018, %v2_b59c
  br i1 %v6_b5a8, label %dec_label_pc_b5ac, label %dec_label_pc_b320

dec_label_pc_b5ac:                                ; preds = %dec_label_pc_b598, %dec_label_pc_ae08, %dec_label_pc_b5b4
  %v29_b5b0 = phi i32 [ -1, %dec_label_pc_ae08 ], [ %v1_b5b8, %dec_label_pc_b5b4 ], [ %v2_b59c, %dec_label_pc_b598 ]
  store i32 %v18_ae08, i32* %sb.global-to-local, align 4
  store i32 %v24_ae08, i32* %fp.global-to-local, align 4
  ret i32 %v29_b5b0

dec_label_pc_b5b4:                                ; preds = %dec_label_pc_b03c
  %v1_b5b8 = call i32 @close(i32 %v3_b02c)
  br label %dec_label_pc_b5ac

; uselistorder directives
  uselistorder i32 %v4_b544, { 1, 0 }
  uselistorder i32 %v2_b4d4, { 1, 0 }
  uselistorder i32 %v3_b4a4, { 1, 0 }
  uselistorder i32 %v3_b480, { 1, 3, 2, 0 }
  uselistorder i32 %v1_b44c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_b3d8, { 1, 0, 2 }
  uselistorder i32 %v1_b334, { 1, 0, 2 }
  uselistorder i1 %v2_b574, { 2, 3, 1, 0 }
  uselistorder i1 %v3_b4f8, { 1, 0, 2, 3 }
  uselistorder i1 %v2_b360, { 3, 0, 1, 2 }
  uselistorder i32 %v1_b310, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b148, { 1, 0 }
  uselistorder i32 %v1_b138, { 1, 2, 0 }
  uselistorder i32 %v1_b134, { 2, 0, 1 }
  uselistorder i32 %v1_b124, { 1, 0 }
  uselistorder i32 %v1_b104, { 1, 0 }
  uselistorder i32 %v1_b100, { 1, 0 }
  uselistorder i32 %v1_b0fc, { 1, 0 }
  uselistorder i32 %v1_b0d8, { 1, 0 }
  uselistorder i1 %v2_b088, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b07c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_b074, { 0, 1, 3, 2 }
  uselistorder i32 %v3_b02c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_b018, { 2, 1, 0 }
  uselistorder i32 %v6_b008, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v1_aff4, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_af24, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_af08, { 2, 5, 4, 3, 1, 0, 6 }
  uselistorder i32 %v1_aeb8, { 1, 2, 0 }
  uselistorder i32 %v6_ae8c, { 2, 1, 3, 0 }
  uselistorder i32 %v6_ae50, { 1, 2, 0 }
  uselistorder i32 %v4_ae38, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_ae0c, { 2, 3, 4, 1, 5, 6, 7, 9, 0, 8 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 13, 11, 12 }
  uselistorder i32* %sb.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 37, 38, 39, 40, 41, 42, 43, 3, 44, 45, 46, 47, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 48, 49, 50, 51, 52, 53, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 42, 43, 44, 45, 3, 46, 47, 48, 49, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 21, 22, 24, 25, 26, 27, 28, 50, 51, 52, 53, 55, 54, 56, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 43, 44, 45, 46, 47, 48, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 49, 50, 51, 52, 53, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %ip.global-to-local, { 15, 16, 17, 1, 18, 19, 20, 21, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 22, 23, 24, 12, 13, 14 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 8, 27, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 28, 29, 30 }
  uselistorder label %dec_label_pc_b5ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b580, { 1, 0 }
  uselistorder label %dec_label_pc_b3b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b320, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_b5c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b5c4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_b5c4 = load i32, i32* @r4, align 4
  %v6_b5c4 = load i32, i32* @r5, align 4
  %v9_b5c4 = load i32, i32* @r6, align 4
  %v12_b5c4 = load i32, i32* @r7, align 4
  %v1_b5c8 = urem i32 %arg2, 256
  store i32 %v1_b5c8, i32* %fp.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v1_b5c8, i32* %r0.global-to-local, align 4
  %v1_b5e0 = urem i32 %arg4, 256
  store i32 %v1_b5e0, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_b5f0 = call i32* @calloc(i32 %v1_b5c8, i32 4)
  %v3_b5f0 = ptrtoint i32* %v2_b5f0 to i32
  %v0_b5f4 = load i32, i32* @r5, align 4
  store i32 %v0_b5f4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b5fc = load i32, i32* @r7, align 4
  store i32 %v0_b5fc, i32* %r3.global-to-local, align 4
  store i32 %v3_b5f0, i32* %sb.global-to-local, align 4
  %v0_b604 = load i32, i32* @r4, align 4
  store i32 %v0_b604, i32* %r0.global-to-local, align 4
  %v5_b608 = inttoptr i32 %v0_b5f4 to i32*
  %v6_b608 = call i32 @function_8fc8(i32 %v0_b604, i32* %v5_b608, i32 2, i32 %v0_b5fc, i32 ptrtoint (i32* @0 to i32))
  %v1_b614 = urem i32 %v6_b608, 256
  store i32 %v1_b614, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b620 = load i32, i32* @r5, align 4
  store i32 %v0_b620, i32* %r1.global-to-local, align 4
  %v0_b624 = load i32, i32* @r4, align 4
  store i32 %v0_b624, i32* %r0.global-to-local, align 4
  %v5_b628 = trunc i32 %v6_b608 to i8
  %v6_b62c = inttoptr i32 %v0_b620 to i32*
  %v7_b62c = call i32 @function_8fc8(i32 %v0_b624, i32* %v6_b62c, i32 3, i32 65535, i32 %v6_b608)
  %v0_b630 = load i32, i32* @r5, align 4
  store i32 %v0_b630, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b640 = load i32, i32* @r4, align 4
  store i32 %v0_b640, i32* %r0.global-to-local, align 4
  %v5_b644 = inttoptr i32 %v0_b630 to i32*
  %v6_b644 = call i32 @function_8fc8(i32 %v0_b640, i32* %v5_b644, i32 4, i32 64, i32 %v7_b62c)
  %v1_b64c = urem i32 %v6_b644, 256
  store i32 %v1_b64c, i32* %ip.global-to-local, align 4
  %v0_b650 = load i32, i32* @r5, align 4
  store i32 %v0_b650, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b65c = load i32, i32* @r4, align 4
  store i32 %v0_b65c, i32* %r0.global-to-local, align 4
  %sext10 = mul i32 %v6_b644, 16777216
  %v5_b664 = sdiv i32 %sext10, 16777216
  %v6_b664 = inttoptr i32 %v0_b650 to i32*
  %v7_b664 = call i32 @function_8fc8(i32 %v0_b65c, i32* %v6_b664, i32 5, i32 1, i32 %v5_b664)
  %v1_b670 = urem i32 %v7_b664, 256
  store i32 %v1_b670, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b67c = load i32, i32* @r5, align 4
  store i32 %v0_b67c, i32* %r1.global-to-local, align 4
  %v0_b680 = load i32, i32* @r4, align 4
  store i32 %v0_b680, i32* %r0.global-to-local, align 4
  %v5_b688 = inttoptr i32 %v0_b67c to i32*
  %v6_b688 = call i32 @function_8fc8(i32 %v0_b680, i32* %v5_b688, i32 6, i32 65535, i32 %v1_b670)
  %v0_b694 = load i32, i32* @r5, align 4
  store i32 %v0_b694, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b6a0 = load i32, i32* @r4, align 4
  store i32 %v0_b6a0, i32* %r0.global-to-local, align 4
  %v5_b6a4 = inttoptr i32 %v0_b694 to i32*
  %v6_b6a4 = call i32 @function_8fc8(i32 %v0_b6a0, i32* %v5_b6a4, i32 7, i32 65535, i32 %v6_b688)
  %v0_b6b0 = load i32, i32* @r5, align 4
  store i32 %v0_b6b0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b6bc = load i32, i32* @r4, align 4
  store i32 %v0_b6bc, i32* %r0.global-to-local, align 4
  %v5_b6c0 = inttoptr i32 %v0_b6b0 to i32*
  %v6_b6c0 = call i32 @function_8fc8(i32 %v0_b6bc, i32* %v5_b6c0, i32 16, i32 65535, i32 %v6_b6a4)
  %v0_b6c4 = load i32, i32* @r5, align 4
  store i32 %v0_b6c4, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_b6d0 = load i32, i32* @r7, align 4
  store i32 %v0_b6d0, i32* %r3.global-to-local, align 4
  %v0_b6d4 = load i32, i32* @r4, align 4
  store i32 %v0_b6d4, i32* %r0.global-to-local, align 4
  %v5_b6d8 = inttoptr i32 %v0_b6c4 to i32*
  %v6_b6d8 = call i32 @function_8fc8(i32 %v0_b6d4, i32* %v5_b6d8, i32 17, i32 %v0_b6d0, i32 %v6_b6c0)
  %v0_b6dc = load i32, i32* @r5, align 4
  store i32 %v0_b6dc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_b6e8 = load i32, i32* @r7, align 4
  store i32 %v0_b6e8, i32* %r3.global-to-local, align 4
  %v0_b6ec = load i32, i32* @r4, align 4
  store i32 %v0_b6ec, i32* %r0.global-to-local, align 4
  %v5_b6f0 = inttoptr i32 %v0_b6dc to i32*
  %v6_b6f0 = call i32 @function_8fc8(i32 %v0_b6ec, i32* %v5_b6f0, i32 10, i32 %v0_b6e8, i32 %v6_b6d8)
  %v0_b6f4 = load i32, i32* @r5, align 4
  store i32 %v0_b6f4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v0_b700 = load i32, i32* @r7, align 4
  store i32 %v0_b700, i32* %r3.global-to-local, align 4
  %v0_b704 = load i32, i32* @r4, align 4
  store i32 %v0_b704, i32* %r0.global-to-local, align 4
  %v5_b708 = inttoptr i32 %v0_b6f4 to i32*
  %v6_b708 = call i32 @function_8fc8(i32 %v0_b704, i32* %v5_b708, i32 11, i32 %v0_b700, i32 %v6_b6f0)
  %v0_b70c = load i32, i32* @r5, align 4
  store i32 %v0_b70c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_b718 = load i32, i32* @r7, align 4
  store i32 %v0_b718, i32* %r3.global-to-local, align 4
  %v0_b71c = load i32, i32* @r4, align 4
  store i32 %v0_b71c, i32* %r0.global-to-local, align 4
  %v5_b720 = inttoptr i32 %v0_b70c to i32*
  %v6_b720 = call i32 @function_8fc8(i32 %v0_b71c, i32* %v5_b720, i32 12, i32 %v0_b718, i32 %v6_b708)
  %v0_b724 = load i32, i32* @r5, align 4
  store i32 %v0_b724, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_b730 = load i32, i32* @r7, align 4
  store i32 %v0_b730, i32* %r3.global-to-local, align 4
  %v0_b734 = load i32, i32* @r4, align 4
  store i32 %v0_b734, i32* %r0.global-to-local, align 4
  %v5_b738 = inttoptr i32 %v0_b724 to i32*
  %v6_b738 = call i32 @function_8fc8(i32 %v0_b734, i32* %v5_b738, i32 13, i32 %v0_b730, i32 %v6_b720)
  %v0_b73c = load i32, i32* @r5, align 4
  store i32 %v0_b73c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b74c = load i32, i32* @r4, align 4
  store i32 %v0_b74c, i32* %r0.global-to-local, align 4
  %v5_b750 = inttoptr i32 %v0_b73c to i32*
  %v6_b750 = call i32 @function_8fc8(i32 %v0_b74c, i32* %v5_b750, i32 14, i32 1, i32 %v6_b738)
  %v0_b754 = load i32, i32* @r5, align 4
  store i32 %v0_b754, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_b760 = load i32, i32* @r7, align 4
  store i32 %v0_b760, i32* %r3.global-to-local, align 4
  %v0_b764 = load i32, i32* @r4, align 4
  store i32 %v0_b764, i32* %r0.global-to-local, align 4
  %v5_b768 = inttoptr i32 %v0_b754 to i32*
  %v6_b768 = call i32 @function_8fc8(i32 %v0_b764, i32* %v5_b768, i32 15, i32 %v0_b760, i32 %v6_b750)
  %v0_b770 = load i32, i32* @r5, align 4
  store i32 %v0_b770, i32* %r1.global-to-local, align 4
  %v2_b774 = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_b774, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_b780 = load i32, i32* @r4, align 4
  store i32 %v0_b780, i32* %r0.global-to-local, align 4
  %v5_b784 = inttoptr i32 %v0_b770 to i32*
  %v6_b784 = call i32 @function_8f5c(i32 %v0_b780, i32* %v5_b784, i32 19, i32 %v2_b774, i32 %v6_b768)
  %v0_b78c = load i32, i32* @r7, align 4
  store i32 %v0_b78c, i32* %r0.global-to-local, align 4
  %v1_b790 = inttoptr i32 %v0_b78c to i32*
  %v2_b790 = call i32 @time(i32* %v1_b790)
  %v1_b794 = load i32, i32* @r6, align 4
  %v2_b794 = add i32 %v1_b794, %v2_b790
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b7a8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b7a8, i32* %r0.global-to-local, align 4
  %v2_b7ac = icmp eq i32 %v3_b7a8, -1
  store i1 %v2_b7ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b7a8, i32* %sl.global-to-local, align 4
  br i1 %v2_b7ac, label %dec_label_pc_bd2c, label %dec_label_pc_b7b8

dec_label_pc_b7b8:                                ; preds = %dec_label_pc_b5c4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b7c0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b7c0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b7c8 = load i32, i32* @r7, align 4
  store i32 %v0_b7c8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_b7d4 = call i32 @setsockopt(i32 %v0_b7c8, i32 3, i32 %v6_b7c0, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_b7d4, i32* %r0.global-to-local, align 4
  %v2_b7d8 = icmp eq i32 %v6_b7d4, -1
  store i1 %v2_b7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b7d8, label %dec_label_pc_bd34, label %dec_label_pc_b7e0

dec_label_pc_b7e0:                                ; preds = %dec_label_pc_b7b8
  %v3_b7e4 = mul i32 %v7_b62c, 65536
  store i32 %v3_b7e4, i32* %r4.global-to-local, align 4
  %v3_b7f0 = urem i32 %v7_b62c, 65536
  %v3_b7fc = mul i32 %v6_b688, 65536
  store i32 %v3_b7fc, i32* %r0.global-to-local, align 4
  %v3_b800 = mul i32 %v6_b6a4, 65536
  store i32 %v3_b800, i32* %r5.global-to-local, align 4
  %v3_b804 = urem i32 %v6_b688, 65536
  store i32 %v3_b804, i32* %r2.global-to-local, align 4
  %v3_b808 = urem i32 %v6_b6a4, 65536
  store i32 %v3_b808, i32* %r3.global-to-local, align 4
  %v1_b80c = urem i32 %v6_b6f0, 256
  store i32 %v1_b80c, i32* %ip.global-to-local, align 4
  %v0_b810 = load i32, i32* %fp.global-to-local, align 4
  %v2_b810 = icmp eq i32 %v0_b810, 0
  store i1 %v2_b810, i1* %cpsr_z.global-to-local, align 1
  %v0_b814 = load i32, i32* @r7, align 4
  store i32 %v0_b814, i32* %stack_var_-40, align 4
  %tmp69 = icmp slt i32 %v0_b810, 1
  br i1 %tmp69, label %dec_label_pc_bacc.preheader, label %dec_label_pc_b828

dec_label_pc_b828:                                ; preds = %dec_label_pc_b7e0
  %v1_b840 = urem i32 %v6_b6a4, 256
  %tmp70 = udiv i32 %v6_b688, 256
  %tmp71 = mul i32 %v6_b6c0, 256
  %v1_b858 = and i32 %tmp71, 65280
  %tmp73 = udiv i32 %v6_b6c0, 256
  %v4_b868 = urem i32 %tmp73, 256
  %v5_b868 = or i32 %v4_b868, %v1_b858
  %v1_b874 = urem i32 %v6_b6f0, 2
  %v1_b87c = urem i32 %v6_b708, 2
  %v1_b880 = urem i32 %v6_b720, 2
  %v1_b884 = urem i32 %v6_b738, 2
  %v3_b890 = mul nuw nsw i32 %v1_b840, 256
  store i32 %v3_b890, i32* %r1.global-to-local, align 4
  %v3_b8a8 = sdiv i32 %v3_b7e4, 16777216
  %sext11 = mul i32 %tmp70, 16777216
  %v7_b8a8 = sdiv i32 %sext11, 16777216
  %tmp74 = udiv i32 %v6_b6a4, 256
  %v4_b8ac = urem i32 %tmp74, 256
  %v5_b8ac = or i32 %v4_b8ac, %v3_b890
  store i32 %v5_b8ac, i32* %r6.global-to-local, align 4
  %v1_b8b0 = urem i32 %v6_b750, 2
  %v1_b8b8 = urem i32 %v6_b768, 2
  store i32 %v1_b8b8, i32* %r0.global-to-local, align 4
  %v3_b8bc = ashr i32 %v3_b7e4, 31
  store i32 %v3_b8bc, i32* %r2.global-to-local, align 4
  %v3_b8c0 = ashr i32 %sext11, 31
  store i32 %v3_b8c0, i32* %r3.global-to-local, align 4
  store i32 %v1_b840, i32* %ip.global-to-local, align 4
  %v5_b8d4 = trunc i32 %v3_b8c0 to i8
  store i32 %v0_b814, i32* %r4.global-to-local, align 4
  store i32 %v0_b814, i32* %r5.global-to-local, align 4
  store i32 6, i32* %r7.global-to-local, align 4
  %tmp = sub nsw i32 0, %v1_b874
  %v4_b99c = and i32 %tmp, 32
  %tmp78 = sub nsw i32 0, %v1_b87c
  %v4_b9b0 = and i32 %tmp78, 16
  %tmp79 = sub nsw i32 0, %v1_b880
  %v4_b9c4 = and i32 %tmp79, 8
  %tmp80 = sub nsw i32 0, %v1_b884
  %v4_b9d8 = and i32 %tmp80, 4
  %tmp81 = sub nsw i32 0, %v1_b8b0
  %v3_b9ec = and i32 %tmp81, 2
  %sext9 = mul i32 %v6_b6a4, 16777216
  %v7_ba1c = sdiv i32 %sext9, 16777216
  br label %dec_label_pc_b8e8

dec_label_pc_b8e8:                                ; preds = %bb76, %dec_label_pc_b828
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_b8f0 = call i32* @calloc(i32 128, i32 1)
  %v4_b8f0 = ptrtoint i32* %v2_b8f0 to i32
  store i32 %v4_b8f0, i32* %r0.global-to-local, align 4
  %v3_b8f4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b8f4, i32* %r2.global-to-local, align 4
  %v1_b8f8 = load i32, i32* %sb.global-to-local, align 4
  %v2_b8f8 = load i32, i32* %r4.global-to-local, align 4
  %v5_b8f8 = mul i32 %v2_b8f8, 4
  %v6_b8f8 = add i32 %v5_b8f8, %v1_b8f8
  %v7_b8f8 = inttoptr i32 %v6_b8f8 to i32*
  store i32 %v4_b8f0, i32* %v7_b8f8, align 4
  %v0_b8fc = load i32, i32* %sb.global-to-local, align 4
  %v1_b8fc = load i32, i32* %r2.global-to-local, align 4
  %v4_b8fc = mul i32 %v1_b8fc, 4
  %v5_b8fc = add i32 %v4_b8fc, %v0_b8fc
  %v6_b8fc = inttoptr i32 %v5_b8fc to i32*
  %v7_b8fc = load i32, i32* %v6_b8fc, align 4
  store i32 %v7_b8fc, i32* %r4.global-to-local, align 4
  %v1_b900 = inttoptr i32 %v7_b8fc to i8*
  %v2_b900 = load i8, i8* %v1_b900, align 1
  %tmp82 = urem i8 %v2_b900, 16
  %v1_b904 = zext i8 %tmp82 to i32
  %v1_b908 = or i32 %v1_b904, 64
  store i32 %v1_b908, i32* %r3.global-to-local, align 4
  %v1_b90c = trunc i32 %v1_b908 to i8
  store i8 %v1_b90c, i8* %v1_b900, align 1
  %v0_b910 = load i32, i32* %r4.global-to-local, align 4
  %v1_b910 = inttoptr i32 %v0_b910 to i8*
  %v2_b910 = load i8, i8* %v1_b910, align 1
  %v1_b914 = and i8 %v2_b910, -16
  %v1_b918 = or i8 %v1_b914, 5
  store i32 %v1_b670, i32* %r0.global-to-local, align 4
  store i8 %v1_b918, i8* %v1_b910, align 1
  %v2_b928 = load i32, i32* %r4.global-to-local, align 4
  %v3_b928 = add i32 %v2_b928, 1
  %v4_b928 = inttoptr i32 %v3_b928 to i8*
  store i8 %v5_b628, i8* %v4_b928, align 1
  %v0_b92c = load i32, i32* %r0.global-to-local, align 4
  %v2_b92c = icmp eq i32 %v0_b92c, 0
  store i1 %v2_b92c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_b664, i32* %r0.global-to-local, align 4
  %v2_b938 = load i32, i32* %r4.global-to-local, align 4
  %v3_b938 = add i32 %v2_b938, 3
  %v4_b938 = inttoptr i32 %v3_b938 to i8*
  store i8 60, i8* %v4_b938, align 1
  store i32 %v3_b8bc, i32* %ip.global-to-local, align 4
  store i32 %v3_b8a8, i32* %r3.global-to-local, align 4
  %v0_b944 = load i32, i32* %r0.global-to-local, align 4
  %v1_b944 = trunc i32 %v0_b944 to i8
  %v2_b944 = load i32, i32* %r4.global-to-local, align 4
  %v3_b944 = add i32 %v2_b944, 8
  %v4_b944 = inttoptr i32 %v3_b944 to i8*
  store i8 %v1_b944, i8* %v4_b944, align 1
  %v0_b948 = load i32, i32* %r7.global-to-local, align 4
  %v1_b948 = trunc i32 %v0_b948 to i8
  %v2_b948 = load i32, i32* %r4.global-to-local, align 4
  %v3_b948 = add i32 %v2_b948, 9
  %v4_b948 = inttoptr i32 %v3_b948 to i8*
  store i8 %v1_b948, i8* %v4_b948, align 1
  %v3_b94c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b94c, i32* %r2.global-to-local, align 4
  %v0_b950 = load i32, i32* %r3.global-to-local, align 4
  %v1_b950 = trunc i32 %v0_b950 to i8
  %v2_b950 = load i32, i32* %r4.global-to-local, align 4
  %v3_b950 = add i32 %v2_b950, 4
  %v4_b950 = inttoptr i32 %v3_b950 to i8*
  store i8 %v1_b950, i8* %v4_b950, align 1
  %v0_b954 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b954, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_b8e8
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_b958 = load i32, i32* %r4.global-to-local, align 4
  %v4_b958 = add i32 %v3_b958, 6
  %v5_b958 = inttoptr i32 %v4_b958 to i8*
  store i8 64, i8* %v5_b958, align 1
  %v0_b978.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b8e8, %bb
  %v0_b978 = phi i1 [ true, %dec_label_pc_b8e8 ], [ %v0_b978.pre, %bb ]
  %v0_b95c = load i32, i32* %r2.global-to-local, align 4
  %v5_b960 = mul i32 %v0_b95c, 24
  store i32 %v5_b960, i32* %r3.global-to-local, align 4
  store i32 %v6_b784, i32* %r2.global-to-local, align 4
  %v1_b968 = load i32, i32* %r4.global-to-local, align 4
  %v2_b968 = add i32 %v1_b968, 12
  %v3_b968 = inttoptr i32 %v2_b968 to i32*
  store i32 %v6_b784, i32* %v3_b968, align 4
  %v0_b96c = load i32, i32* %r3.global-to-local, align 4
  %v1_b96c = load i32, i32* @r8, align 4
  %v2_b96c = add i32 %v1_b96c, %v0_b96c
  store i32 %v2_b96c, i32* %r3.global-to-local, align 4
  %v1_b970 = add i32 %v2_b96c, 16
  %v2_b970 = inttoptr i32 %v1_b970 to i32*
  %v3_b970 = load i32, i32* %v2_b970, align 4
  store i32 %v3_b970, i32* %r2.global-to-local, align 4
  store i32 %v7_b8a8, i32* %r3.global-to-local, align 4
  br i1 %v0_b978, label %bb76, label %bb75

bb75:                                             ; preds = %.thread
  %v1_b978 = load i32, i32* %r5.global-to-local, align 4
  %v2_b978 = trunc i32 %v1_b978 to i8
  %v3_b978 = load i32, i32* %r4.global-to-local, align 4
  %v4_b978 = add i32 %v3_b978, 7
  %v5_b978 = inttoptr i32 %v4_b978 to i8*
  store i8 %v2_b978, i8* %v5_b978, align 1
  br label %bb76

bb76:                                             ; preds = %.thread, %bb75
  %v0_b97c = load i32, i32* %ip.global-to-local, align 4
  %v1_b97c = trunc i32 %v0_b97c to i8
  %v2_b97c = load i32, i32* %r4.global-to-local, align 4
  %v3_b97c = add i32 %v2_b97c, 5
  %v4_b97c = inttoptr i32 %v3_b97c to i8*
  store i8 %v1_b97c, i8* %v4_b97c, align 1
  %v0_b980 = load i32, i32* %r5.global-to-local, align 4
  %v1_b980 = trunc i32 %v0_b980 to i8
  %v2_b980 = load i32, i32* %r4.global-to-local, align 4
  %v3_b980 = add i32 %v2_b980, 2
  %v4_b980 = inttoptr i32 %v3_b980 to i8*
  store i8 %v1_b980, i8* %v4_b980, align 1
  %v0_b984 = load i32, i32* %r2.global-to-local, align 4
  %v1_b984 = load i32, i32* %r4.global-to-local, align 4
  %v2_b984 = add i32 %v1_b984, 16
  %v3_b984 = inttoptr i32 %v2_b984 to i32*
  store i32 %v0_b984, i32* %v3_b984, align 4
  %v0_b988 = load i32, i32* %r3.global-to-local, align 4
  %v1_b988 = trunc i32 %v0_b988 to i8
  %v2_b988 = load i32, i32* %r4.global-to-local, align 4
  %v3_b988 = add i32 %v2_b988, 20
  %v4_b988 = inttoptr i32 %v3_b988 to i8*
  store i8 %v1_b988, i8* %v4_b988, align 1
  %v0_b98c = load i32, i32* %r4.global-to-local, align 4
  %v1_b98c = add i32 %v0_b98c, 20
  store i32 %v1_b98c, i32* %r1.global-to-local, align 4
  %v1_b990 = add i32 %v0_b98c, 33
  %v2_b990 = inttoptr i32 %v1_b990 to i8*
  %v3_b990 = load i8, i8* %v2_b990, align 1
  %v4_b990 = zext i8 %v3_b990 to i32
  store i32 %v1_b874, i32* %ip.global-to-local, align 4
  %v1_b998 = and i32 %v4_b990, 223
  %v5_b99c = or i32 %v1_b998, %v4_b99c
  store i32 %v5_b99c, i32* %r3.global-to-local, align 4
  %v1_b9a0 = trunc i32 %v5_b99c to i8
  store i8 %v1_b9a0, i8* %v2_b990, align 1
  %v0_b9a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9a4 = add i32 %v0_b9a4, 13
  %v2_b9a4 = inttoptr i32 %v1_b9a4 to i8*
  %v3_b9a4 = load i8, i8* %v2_b9a4, align 1
  %v4_b9a4 = zext i8 %v3_b9a4 to i32
  store i32 %v1_b87c, i32* %r0.global-to-local, align 4
  %v1_b9ac = and i32 %v4_b9a4, 239
  %v5_b9b0 = or i32 %v1_b9ac, %v4_b9b0
  store i32 %v5_b9b0, i32* %r2.global-to-local, align 4
  %v1_b9b4 = trunc i32 %v5_b9b0 to i8
  store i8 %v1_b9b4, i8* %v2_b9a4, align 1
  %v0_b9b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9b8 = add i32 %v0_b9b8, 13
  %v2_b9b8 = inttoptr i32 %v1_b9b8 to i8*
  %v3_b9b8 = load i8, i8* %v2_b9b8, align 1
  %v4_b9b8 = zext i8 %v3_b9b8 to i32
  store i32 %v1_b880, i32* %r2.global-to-local, align 4
  %v1_b9c0 = and i32 %v4_b9b8, 247
  %v5_b9c4 = or i32 %v1_b9c0, %v4_b9c4
  store i32 %v5_b9c4, i32* %r3.global-to-local, align 4
  %v1_b9c8 = trunc i32 %v5_b9c4 to i8
  store i8 %v1_b9c8, i8* %v2_b9b8, align 1
  %v0_b9cc = load i32, i32* %r1.global-to-local, align 4
  %v1_b9cc = add i32 %v0_b9cc, 13
  %v2_b9cc = inttoptr i32 %v1_b9cc to i8*
  %v3_b9cc = load i8, i8* %v2_b9cc, align 1
  %v4_b9cc = zext i8 %v3_b9cc to i32
  store i32 %v1_b884, i32* %r3.global-to-local, align 4
  %v1_b9d4 = and i32 %v4_b9cc, 251
  %v5_b9d8 = or i32 %v1_b9d4, %v4_b9d8
  store i32 %v5_b9d8, i32* %r2.global-to-local, align 4
  %v1_b9dc = trunc i32 %v5_b9d8 to i8
  store i8 %v1_b9dc, i8* %v2_b9cc, align 1
  %v0_b9e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9e0 = add i32 %v0_b9e0, 13
  %v2_b9e0 = inttoptr i32 %v1_b9e0 to i8*
  %v3_b9e0 = load i8, i8* %v2_b9e0, align 1
  %v4_b9e0 = zext i8 %v3_b9e0 to i32
  store i32 %v1_b8b0, i32* %ip.global-to-local, align 4
  %v1_b9e8 = and i32 %v4_b9e0, 253
  %v4_b9ec = or i32 %v1_b9e8, %v3_b9ec
  store i32 %v4_b9ec, i32* %r3.global-to-local, align 4
  %v1_b9f0 = trunc i32 %v4_b9ec to i8
  store i8 %v1_b9f0, i8* %v2_b9e0, align 1
  %v0_b9f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9f4 = add i32 %v0_b9f4, 12
  %v2_b9f4 = inttoptr i32 %v1_b9f4 to i8*
  %v3_b9f4 = load i8, i8* %v2_b9f4, align 1
  %v4_b9f4 = zext i8 %v3_b9f4 to i32
  store i32 %v4_b9f4, i32* %r2.global-to-local, align 4
  %v1_b9f8 = add i32 %v0_b9f4, 13
  %v2_b9f8 = inttoptr i32 %v1_b9f8 to i8*
  %v3_b9f8 = load i8, i8* %v2_b9f8, align 1
  %v4_b9f8 = zext i8 %v3_b9f8 to i32
  %tmp83 = urem i8 %v3_b9f4, 16
  %v1_ba00 = zext i8 %tmp83 to i32
  %v1_ba04 = and i32 %v4_b9f8, 254
  %v2_ba08 = or i32 %v1_ba04, %v1_b8b8
  %v1_ba0c = or i32 %v1_ba00, 160
  store i32 %v1_ba0c, i32* %r2.global-to-local, align 4
  %v1_ba10 = trunc i32 %v2_ba08 to i8
  store i8 %v1_ba10, i8* %v2_b9f8, align 1
  %v0_ba14 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba14 = trunc i32 %v0_ba14 to i8
  %v2_ba14 = load i32, i32* %r1.global-to-local, align 4
  %v3_ba14 = add i32 %v2_ba14, 12
  %v4_ba14 = inttoptr i32 %v3_ba14 to i8*
  store i8 %v1_ba14, i8* %v4_ba14, align 1
  store i32 %v7_ba1c, i32* %r3.global-to-local, align 4
  store i32 %v5_b868, i32* %ip.global-to-local, align 4
  %v2_ba24 = load i32, i32* %r1.global-to-local, align 4
  %v3_ba24 = add i32 %v2_ba24, 1
  %v4_ba24 = inttoptr i32 %v3_ba24 to i8*
  store i8 %v5_b8d4, i8* %v4_ba24, align 1
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_ba30 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba30 = trunc i32 %v0_ba30 to i8
  %v2_ba30 = load i32, i32* %r1.global-to-local, align 4
  %v3_ba30 = add i32 %v2_ba30, 3
  %v4_ba30 = inttoptr i32 %v3_ba30 to i8*
  store i8 %v1_ba30, i8* %v4_ba30, align 1
  %v0_ba34 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba34 = load i32, i32* %r1.global-to-local, align 4
  %v2_ba34 = add i32 %v1_ba34, 4
  %v3_ba34 = inttoptr i32 %v2_ba34 to i32*
  store i32 %v0_ba34, i32* %v3_ba34, align 4
  %v0_ba38 = load i32, i32* %r6.global-to-local, align 4
  %v1_ba38 = trunc i32 %v0_ba38 to i8
  %v2_ba38 = load i32, i32* %r1.global-to-local, align 4
  %v3_ba38 = add i32 %v2_ba38, 2
  %v4_ba38 = inttoptr i32 %v3_ba38 to i8*
  store i8 %v1_ba38, i8* %v4_ba38, align 1
  %v0_ba3c = load i32, i32* %r2.global-to-local, align 4
  %v1_ba3c = trunc i32 %v0_ba3c to i8
  %v2_ba3c = load i32, i32* %r4.global-to-local, align 4
  %v3_ba3c = add i32 %v2_ba3c, 41
  %v4_ba3c = inttoptr i32 %v3_ba3c to i8*
  store i8 %v1_ba3c, i8* %v4_ba3c, align 1
  %v0_ba40 = load i32, i32* %r0.global-to-local, align 4
  %v1_ba40 = trunc i32 %v0_ba40 to i8
  %v2_ba40 = load i32, i32* %r4.global-to-local, align 4
  %v3_ba40 = add i32 %v2_ba40, 40
  %v4_ba40 = inttoptr i32 %v3_ba40 to i8*
  store i8 %v1_ba40, i8* %v4_ba40, align 1
  %v0_ba44 = call i32 @function_ef90()
  %v1_ba48 = urem i32 %v0_ba44, 16
  %v1_ba4c = or i32 %v1_ba48, 1392
  %v1_ba50 = add nuw nsw i32 %v1_ba4c, 8
  %v3_ba54 = mul nuw nsw i32 %v1_ba50, 65536
  store i32 %v3_ba54, i32* %r0.global-to-local, align 4
  %v3_ba58 = mul nuw nsw i32 %v1_ba50, 256
  %v1_ba5c = and i32 %v3_ba58, 65280
  %v5_ba60 = or i32 %v1_ba5c, 5
  store i32 %v5_ba60, i32* %r3.global-to-local, align 4
  %v2_ba64 = load i32, i32* %r4.global-to-local, align 4
  %v3_ba64 = add i32 %v2_ba64, 42
  %v4_ba64 = inttoptr i32 %v3_ba64 to i8*
  store i8 5, i8* %v4_ba64, align 1
  %v0_ba68 = load i32, i32* %r3.global-to-local, align 4
  %v3_ba68 = sdiv i32 %v0_ba68, 256
  store i32 %v3_ba68, i32* %r1.global-to-local, align 4
  %v0_ba6c = load i32, i32* %r4.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v1_ba74 = trunc i32 %v3_ba68 to i8
  %v3_ba74 = add i32 %v0_ba6c, 43
  %v4_ba74 = inttoptr i32 %v3_ba74 to i8*
  store i8 %v1_ba74, i8* %v4_ba74, align 1
  store i32 2, i32* %ip.global-to-local, align 4
  %v0_ba7c = load i32, i32* %r3.global-to-local, align 4
  %v1_ba7c = trunc i32 %v0_ba7c to i8
  %v2_ba7c = load i32, i32* %r4.global-to-local, align 4
  %v3_ba7c = add i32 %v2_ba7c, 46
  %v4_ba7c = inttoptr i32 %v3_ba7c to i8*
  store i8 %v1_ba7c, i8* %v4_ba7c, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v2_ba88 = load i32, i32* %r4.global-to-local, align 4
  %v3_ba88 = add i32 %v2_ba88, 47
  %v4_ba88 = inttoptr i32 %v3_ba88 to i8*
  store i8 10, i8* %v4_ba88, align 1
  %v0_ba8c = load i32, i32* %r3.global-to-local, align 4
  %v1_ba8c = trunc i32 %v0_ba8c to i8
  %v2_ba8c = load i32, i32* %r4.global-to-local, align 4
  %v3_ba8c = add i32 %v2_ba8c, 44
  %v4_ba8c = inttoptr i32 %v3_ba8c to i8*
  store i8 %v1_ba8c, i8* %v4_ba8c, align 1
  %v0_ba90 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba90 = trunc i32 %v0_ba90 to i8
  %v2_ba90 = load i32, i32* %r4.global-to-local, align 4
  %v3_ba90 = add i32 %v2_ba90, 45
  %v4_ba90 = inttoptr i32 %v3_ba90 to i8*
  store i8 %v1_ba90, i8* %v4_ba90, align 1
  %v0_ba94 = call i32 @function_ef90()
  store i32 %v0_ba94, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_baa0 = load i32, i32* %r4.global-to-local, align 4
  %v2_baa0 = add i32 %v1_baa0, 48
  %v3_baa0 = inttoptr i32 %v2_baa0 to i32*
  store i32 %v0_ba94, i32* %v3_baa0, align 4
  %v0_baa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_baa4 = trunc i32 %v0_baa4 to i8
  %v2_baa4 = load i32, i32* %r4.global-to-local, align 4
  %v3_baa4 = add i32 %v2_baa4, 56
  %v4_baa4 = inttoptr i32 %v3_baa4 to i8*
  store i8 %v1_baa4, i8* %v4_baa4, align 1
  %v0_baa8 = load i32, i32* %r2.global-to-local, align 4
  %v1_baa8 = trunc i32 %v0_baa8 to i8
  %v2_baa8 = load i32, i32* %r4.global-to-local, align 4
  %v3_baa8 = add i32 %v2_baa8, 58
  %v4_baa8 = inttoptr i32 %v3_baa8 to i8*
  store i8 %v1_baa8, i8* %v4_baa8, align 1
  %v0_baac = load i32, i32* %r7.global-to-local, align 4
  %v1_baac = trunc i32 %v0_baac to i8
  %v2_baac = load i32, i32* %r4.global-to-local, align 4
  %v3_baac = add i32 %v2_baac, 59
  %v4_baac = inttoptr i32 %v3_baac to i8*
  store i8 %v1_baac, i8* %v4_baac, align 1
  %v0_bab0 = load i32, i32* %r5.global-to-local, align 4
  %v1_bab0 = load i32, i32* %r4.global-to-local, align 4
  %v2_bab0 = add i32 %v1_bab0, 52
  %v3_bab0 = inttoptr i32 %v2_bab0 to i32*
  store i32 %v0_bab0, i32* %v3_bab0, align 4
  %v0_bab4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bab4 = trunc i32 %v0_bab4 to i8
  %v2_bab4 = load i32, i32* %r4.global-to-local, align 4
  %v3_bab4 = add i32 %v2_bab4, 57
  %v4_bab4 = inttoptr i32 %v3_bab4 to i8*
  store i8 %v1_bab4, i8* %v4_bab4, align 1
  %v3_bab8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bab8, i32* %r3.global-to-local, align 4
  %v1_babc = add i32 %v3_bab8, 1
  store i32 %v1_babc, i32* %r4.global-to-local, align 4
  %v0_bac0 = load i32, i32* %fp.global-to-local, align 4
  %v9_bac0 = icmp eq i32 %v0_bac0, %v1_babc
  store i1 %v9_bac0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_babc, i32* %stack_var_-40, align 4
  %v8_bac8 = icmp sgt i32 %v0_bac0, %v1_babc
  br i1 %v8_bac8, label %dec_label_pc_b8e8, label %dec_label_pc_bacc.preheader

dec_label_pc_bacc.preheader:                      ; preds = %bb76, %dec_label_pc_b7e0
  %v0_bad014 = phi i32 [ %v0_b810, %dec_label_pc_b7e0 ], [ %v0_bac0, %bb76 ]
  %v2_baec = icmp eq i32 %v6_b784, -1
  %v3_bc7c = icmp eq i32 %v3_b7f0, 65535
  %v2_bcf8 = icmp eq i32 %v1_b80c, 0
  br label %dec_label_pc_bacc

dec_label_pc_bacc:                                ; preds = %dec_label_pc_bd18.dec_label_pc_bacc_crit_edge, %dec_label_pc_bacc.preheader
  %v0_bad0 = phi i32 [ %v0_bad0.pre, %dec_label_pc_bd18.dec_label_pc_bacc_crit_edge ], [ %v0_bad014, %dec_label_pc_bacc.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bad0 = icmp eq i32 %v0_bad0, 0
  store i1 %v2_bad0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp77 = icmp slt i32 %v0_bad0, 1
  br i1 %tmp77, label %dec_label_pc_bd18, label %dec_label_pc_badc

dec_label_pc_badc:                                ; preds = %dec_label_pc_bacc
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_bbe4

dec_label_pc_bae8:                                ; preds = %dec_label_pc_bbe4
  store i32 %v6_b784, i32* %r0.global-to-local, align 4
  store i1 %v2_baec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_baec, label %dec_label_pc_bc6c, label %dec_label_pc_baf4

dec_label_pc_baf4:                                ; preds = %dec_label_pc_bc04, %dec_label_pc_bae8
  store i32 %v3_b7f0, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_bc7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bc7c, label %dec_label_pc_bc88, label %dec_label_pc_bb08

dec_label_pc_bb08:                                ; preds = %dec_label_pc_bc6c.dec_label_pc_bb08_crit_edge, %dec_label_pc_baf4
  %v1_bb0c = phi i32 [ %v1_bb0c.pre, %dec_label_pc_bc6c.dec_label_pc_bb08_crit_edge ], [ 65535, %dec_label_pc_baf4 ]
  store i32 %v3_b804, i32* %r3.global-to-local, align 4
  %v9_bb0c = icmp eq i32 %v3_b804, %v1_bb0c
  store i1 %v9_bb0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bb0c, label %dec_label_pc_bca4, label %dec_label_pc_bb14

dec_label_pc_bb14:                                ; preds = %dec_label_pc_bc88.dec_label_pc_bb14_crit_edge, %dec_label_pc_bb08
  %v1_bb18 = phi i32 [ %v1_bb18.pre, %dec_label_pc_bc88.dec_label_pc_bb14_crit_edge ], [ %v1_bb0c, %dec_label_pc_bb08 ]
  store i32 %v3_b808, i32* %ip.global-to-local, align 4
  %v9_bb18 = icmp eq i32 %v3_b808, %v1_bb18
  store i1 %v9_bb18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bb18, label %dec_label_pc_bcc0, label %dec_label_pc_bb20

dec_label_pc_bb20:                                ; preds = %dec_label_pc_bca4.dec_label_pc_bb20_crit_edge, %dec_label_pc_bb14
  %v1_bb24 = phi i32 [ %v1_bb24.pre, %dec_label_pc_bca4.dec_label_pc_bb20_crit_edge ], [ %v1_bb18, %dec_label_pc_bb14 ]
  store i32 %v6_b6c0, i32* %r0.global-to-local, align 4
  %v9_bb24 = icmp eq i32 %v6_b6c0, %v1_bb24
  store i1 %v9_bb24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bb24, label %dec_label_pc_bcdc, label %dec_label_pc_bb2c

dec_label_pc_bb2c:                                ; preds = %dec_label_pc_bcc0.dec_label_pc_bb2c_crit_edge, %dec_label_pc_bb20
  %v1_bb30 = phi i32 [ %v1_bb30.pre, %dec_label_pc_bcc0.dec_label_pc_bb2c_crit_edge ], [ %v1_bb24, %dec_label_pc_bb20 ]
  store i32 %v6_b6d8, i32* %r2.global-to-local, align 4
  %v9_bb30 = icmp eq i32 %v6_b6d8, %v1_bb30
  store i1 %v9_bb30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bb30, label %dec_label_pc_bcf0, label %dec_label_pc_bb38

dec_label_pc_bb38:                                ; preds = %dec_label_pc_bcdc, %dec_label_pc_bb2c
  store i32 %v1_b80c, i32* %r3.global-to-local, align 4
  store i1 %v2_bcf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bcf8, label %dec_label_pc_bb44, label %dec_label_pc_bd04

dec_label_pc_bb44:                                ; preds = %dec_label_pc_bb38, %dec_label_pc_bcf0, %dec_label_pc_bd04
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bb48 = load i32, i32* %r7.global-to-local, align 4
  %v1_bb48 = trunc i32 %v0_bb48 to i8
  %v2_bb48 = load i32, i32* @r5, align 4
  %v3_bb48 = add i32 %v2_bb48, 10
  %v4_bb48 = inttoptr i32 %v3_bb48 to i8*
  store i8 %v1_bb48, i8* %v4_bb48, align 1
  %v0_bb4c = load i32, i32* %r7.global-to-local, align 4
  %v1_bb4c = trunc i32 %v0_bb4c to i8
  %v2_bb4c = load i32, i32* @r5, align 4
  %v3_bb4c = add i32 %v2_bb4c, 11
  %v4_bb4c = inttoptr i32 %v3_bb4c to i8*
  store i8 %v1_bb4c, i8* %v4_bb4c, align 1
  %v0_bb50 = load i32, i32* @r5, align 4
  store i32 %v0_bb50, i32* @r0, align 4
  %v2_bb54 = call i32 @function_d3d4(i32 %v0_bb50, i32 20)
  %v3_bb54 = trunc i32 %v2_bb54 to i8
  %v4_bb5822 = udiv i32 %v2_bb54, 256
  %v1_bb5c = trunc i32 %v4_bb5822 to i8
  %v2_bb5c = load i32, i32* @r5, align 4
  %v3_bb5c = add i32 %v2_bb5c, 11
  %v4_bb5c = inttoptr i32 %v3_bb5c to i8*
  store i8 %v1_bb5c, i8* %v4_bb5c, align 1
  %v3_bb60 = load i32, i32* @r5, align 4
  %v4_bb60 = add i32 %v3_bb60, 10
  %v5_bb60 = inttoptr i32 %v4_bb60 to i8*
  store i8 %v3_bb54, i8* %v5_bb60, align 1
  %v0_bb64 = load i32, i32* @r6, align 4
  store i32 %v0_bb64, i32* @r1, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_bb70 = load i32, i32* %r7.global-to-local, align 4
  %v1_bb70 = trunc i32 %v0_bb70 to i8
  %v3_bb70 = add i32 %v0_bb64, 16
  %v4_bb70 = inttoptr i32 %v3_bb70 to i8*
  store i8 %v1_bb70, i8* %v4_bb70, align 1
  %v0_bb74 = load i32, i32* %r7.global-to-local, align 4
  %v1_bb74 = trunc i32 %v0_bb74 to i8
  %v2_bb74 = load i32, i32* @r6, align 4
  %v3_bb74 = add i32 %v2_bb74, 17
  %v4_bb74 = inttoptr i32 %v3_bb74 to i8*
  store i8 %v1_bb74, i8* %v4_bb74, align 1
  %v0_bb78 = load i32, i32* @r5, align 4
  store i32 %v0_bb78, i32* %r0.global-to-local, align 4
  %v4_bb7c = call i32 @function_d430(i32 %v0_bb78, i32 %v0_bb64, i32 10240, i32 40)
  %v5_bb7c = trunc i32 %v4_bb7c to i8
  store i32 %v4_bb7c, i32* %r0.global-to-local, align 4
  %v4_bb8023 = udiv i32 %v4_bb7c, 256
  %v1_bb84 = trunc i32 %v4_bb8023 to i8
  %v2_bb84 = load i32, i32* @r6, align 4
  %v3_bb84 = add i32 %v2_bb84, 17
  %v4_bb84 = inttoptr i32 %v3_bb84 to i8*
  store i8 %v1_bb84, i8* %v4_bb84, align 1
  %v3_bb88 = load i32, i32* @r6, align 4
  %v4_bb88 = add i32 %v3_bb88, 16
  %v5_bb88 = inttoptr i32 %v4_bb88 to i8*
  store i8 %v5_bb7c, i8* %v5_bb88, align 1
  %v3_bb8c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bb8c, i32* %r3.global-to-local, align 4
  %v0_bb90 = load i32, i32* @r5, align 4
  %v1_bb90 = add i32 %v0_bb90, 20
  %v2_bb90 = inttoptr i32 %v1_bb90 to i32*
  %v3_bb90 = load i32, i32* %v2_bb90, align 4
  %v3_bb98 = udiv i32 %v3_bb90, 65536
  store i32 %v3_bb98, i32* %r2.global-to-local, align 4
  %v5_bb9c = mul i32 %v3_bb8c, 24
  %v1_bba0 = load i32, i32* @r8, align 4
  %v2_bba0 = add i32 %v1_bba0, %v5_bb9c
  store i32 %v2_bba0, i32* %ip.global-to-local, align 4
  %v3_bba421 = udiv i32 %v3_bb90, 16777216
  %v1_bba8 = trunc i32 %v3_bba421 to i8
  %v3_bba8 = add i32 %v2_bba0, 3
  %v4_bba8 = inttoptr i32 %v3_bba8 to i8*
  store i8 %v1_bba8, i8* %v4_bba8, align 1
  %v0_bbac = load i32, i32* %r2.global-to-local, align 4
  %v1_bbac = trunc i32 %v0_bbac to i8
  %v2_bbac = load i32, i32* %ip.global-to-local, align 4
  %v3_bbac = add i32 %v2_bbac, 2
  %v4_bbac = inttoptr i32 %v3_bbac to i8*
  store i8 %v1_bbac, i8* %v4_bbac, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_bbb4 = load i32, i32* @r5, align 4
  store i32 %v0_bbb4, i32* %r1.global-to-local, align 4
  %v0_bbb8 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_bbb8, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_bbc4 = load i32, i32* %ip.global-to-local, align 4
  %v4_bbc4 = inttoptr i32 %v0_bbc4 to %sockaddr*
  %v7_bbcc = inttoptr i32 %v0_bbb4 to i32*
  %v9_bbcc = call i32 @sendto(i32 %v0_bbb8, i32* %v7_bbcc, i32 60, i32 16384, %sockaddr* %v4_bbc4, i32 16)
  %v3_bbd0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bbd0, i32* %r3.global-to-local, align 4
  %v1_bbd4 = add i32 %v3_bbd0, 1
  store i32 %v1_bbd4, i32* %r0.global-to-local, align 4
  %v1_bbd8 = load i32, i32* %fp.global-to-local, align 4
  %v9_bbd8 = icmp eq i32 %v1_bbd4, %v1_bbd8
  store i1 %v9_bbd8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bbd4, i32* %stack_var_-40, align 4
  %v6_bbe0 = icmp slt i32 %v1_bbd4, %v1_bbd8
  br i1 %v6_bbe0, label %dec_label_pc_bbe4, label %dec_label_pc_bd18

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_bb44, %dec_label_pc_badc
  %v1_bbf4 = phi i32 [ %v1_bbd4, %dec_label_pc_bb44 ], [ 0, %dec_label_pc_badc ]
  %v5_bbe8 = mul i32 %v1_bbf4, 24
  %v1_bbec = load i32, i32* @r8, align 4
  %v2_bbec = add i32 %v1_bbec, %v5_bbe8
  store i32 %v2_bbec, i32* %r3.global-to-local, align 4
  %v1_bbf0 = add i32 %v2_bbec, 20
  %v2_bbf0 = inttoptr i32 %v1_bbf0 to i8*
  %v3_bbf0 = load i8, i8* %v2_bbf0, align 1
  %v4_bbf0 = zext i8 %v3_bbf0 to i32
  store i32 %v4_bbf0, i32* %r2.global-to-local, align 4
  %v0_bbf4 = load i32, i32* %sb.global-to-local, align 4
  %v4_bbf4 = mul i32 %v1_bbf4, 4
  %v5_bbf4 = add i32 %v0_bbf4, %v4_bbf4
  %v6_bbf4 = inttoptr i32 %v5_bbf4 to i32*
  %v7_bbf4 = load i32, i32* %v6_bbf4, align 4
  store i32 %v7_bbf4, i32* @r5, align 4
  %v2_bbf8 = icmp ugt i8 %v3_bbf0, 30
  %v7_bbf8 = icmp eq i8 %v3_bbf0, 31
  store i1 %v7_bbf8, i1* %cpsr_z.global-to-local, align 1
  %v1_bbfc = add i32 %v7_bbf4, 20
  store i32 %v1_bbfc, i32* @r6, align 4
  %v2_bc00 = xor i1 %v7_bbf8, true
  %v3_bc00 = and i1 %v2_bbf8, %v2_bc00
  br i1 %v3_bc00, label %dec_label_pc_bae8, label %dec_label_pc_bc04

dec_label_pc_bc04:                                ; preds = %dec_label_pc_bbe4
  %v1_bc04 = add i32 %v2_bbec, 16
  %v2_bc04 = inttoptr i32 %v1_bc04 to i32*
  %v3_bc04 = load i32, i32* %v2_bc04, align 4
  store i32 %v3_bc04, i32* %r4.global-to-local, align 4
  %v0_bc08 = call i32 @function_ef90()
  store i32 %v0_bc08, i32* %r0.global-to-local, align 4
  %v3_bc0c = load i32, i32* %stack_var_-40, align 4
  %v5_bc14 = mul i32 %v3_bc0c, 24
  %v0_bc18 = load i32, i32* %r4.global-to-local, align 4
  %v1_bc1c = load i32, i32* @r8, align 4
  %v2_bc1c = add i32 %v1_bc1c, %v5_bc14
  store i32 %v2_bc1c, i32* %r1.global-to-local, align 4
  %v1_bc20 = and i32 %v0_bc18, 65280
  store i32 %v1_bc20, i32* %r3.global-to-local, align 4
  %v1_bc18 = udiv i32 %v0_bc18, 256
  %v3_bc24 = and i32 %v1_bc18, 65280
  store i32 %v3_bc24, i32* %r2.global-to-local, align 4
  %v3_bc28 = mul i32 %v0_bc18, 16777216
  store i32 %v3_bc28, i32* %ip.global-to-local, align 4
  %v1_bc2c = add i32 %v2_bc1c, 20
  %v2_bc2c = inttoptr i32 %v1_bc2c to i8*
  %v3_bc2c = load i8, i8* %v2_bc2c, align 1
  %v4_bc2c = zext i8 %v3_bc2c to i32
  %v4_bc30 = mul nuw nsw i32 %v1_bc20, 256
  %v5_bc30 = or i32 %v4_bc30, %v3_bc28
  store i32 %v5_bc30, i32* %ip.global-to-local, align 4
  %v2_bc38 = call i32 @llvm.bswap.i32(i32 %v0_bc18)
  %v7_bc3c = lshr i32 %v0_bc08, %v4_bc2c
  %v8_bc3c = add i32 %v7_bc3c, %v2_bc38
  store i32 %v8_bc3c, i32* %r2.global-to-local, align 4
  %v3_bc48 = mul i32 %v8_bc3c, 16777216
  %v1_bc40 = mul i32 %v8_bc3c, 256
  %v4_bc4c = and i32 %v1_bc40, 16711680
  %v5_bc4c = or i32 %v4_bc4c, %v3_bc48
  store i32 %v5_bc4c, i32* %r1.global-to-local, align 4
  store i32 %v6_b784, i32* %r0.global-to-local, align 4
  %v2_bc5c = call i32 @llvm.bswap.i32(i32 %v8_bc3c)
  store i32 %v2_bc5c, i32* %r3.global-to-local, align 4
  store i1 %v2_baec, i1* %cpsr_z.global-to-local, align 1
  %v1_bc64 = load i32, i32* @r5, align 4
  %v2_bc64 = add i32 %v1_bc64, 16
  %v3_bc64 = inttoptr i32 %v2_bc64 to i32*
  store i32 %v2_bc5c, i32* %v3_bc64, align 4
  br i1 %v2_baec, label %dec_label_pc_bc6c, label %dec_label_pc_baf4

dec_label_pc_bc6c:                                ; preds = %dec_label_pc_bc04, %dec_label_pc_bae8
  %v0_bc6c = call i32 @function_ef90()
  store i32 %v0_bc6c, i32* %r0.global-to-local, align 4
  store i32 %v3_b7f0, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_bc7c, i1* %cpsr_z.global-to-local, align 1
  %v1_bc80 = load i32, i32* @r5, align 4
  %v2_bc80 = add i32 %v1_bc80, 12
  %v3_bc80 = inttoptr i32 %v2_bc80 to i32*
  store i32 %v0_bc6c, i32* %v3_bc80, align 4
  br i1 %v3_bc7c, label %dec_label_pc_bc88, label %dec_label_pc_bc6c.dec_label_pc_bb08_crit_edge

dec_label_pc_bc6c.dec_label_pc_bb08_crit_edge:    ; preds = %dec_label_pc_bc6c
  %v1_bb0c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bb08

dec_label_pc_bc88:                                ; preds = %dec_label_pc_bc6c, %dec_label_pc_baf4
  %v0_bc88 = call i32 @function_ef90()
  %v1_bc88 = trunc i32 %v0_bc88 to i8
  store i32 %v0_bc88, i32* %r0.global-to-local, align 4
  %v4_bc8c24 = udiv i32 %v0_bc88, 256
  %v1_bc90 = trunc i32 %v4_bc8c24 to i8
  %v2_bc90 = load i32, i32* @r5, align 4
  %v3_bc90 = add i32 %v2_bc90, 5
  %v4_bc90 = inttoptr i32 %v3_bc90 to i8*
  store i8 %v1_bc90, i8* %v4_bc90, align 1
  store i32 %v3_b804, i32* %r3.global-to-local, align 4
  %v1_bc98 = load i32, i32* @r4, align 4
  %v9_bc98 = icmp eq i32 %v3_b804, %v1_bc98
  store i1 %v9_bc98, i1* %cpsr_z.global-to-local, align 1
  %v3_bc9c = load i32, i32* @r5, align 4
  %v4_bc9c = add i32 %v3_bc9c, 4
  %v5_bc9c = inttoptr i32 %v4_bc9c to i8*
  store i8 %v1_bc88, i8* %v5_bc9c, align 1
  %v0_bca0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bca0, label %dec_label_pc_bca4, label %dec_label_pc_bc88.dec_label_pc_bb14_crit_edge

dec_label_pc_bc88.dec_label_pc_bb14_crit_edge:    ; preds = %dec_label_pc_bc88
  %v1_bb18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bb14

dec_label_pc_bca4:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bb08
  %v0_bca4 = call i32 @function_ef90()
  %v1_bca4 = trunc i32 %v0_bca4 to i8
  store i32 %v0_bca4, i32* %r0.global-to-local, align 4
  store i32 %v3_b808, i32* %ip.global-to-local, align 4
  %v4_bcac = sdiv i32 %v0_bca4, 256
  store i32 %v4_bcac, i32* %r3.global-to-local, align 4
  %v1_bcb0 = load i32, i32* @r4, align 4
  %v9_bcb0 = icmp eq i32 %v3_b808, %v1_bcb0
  store i1 %v9_bcb0, i1* %cpsr_z.global-to-local, align 1
  %v3_bcb4 = load i32, i32* @r5, align 4
  %v4_bcb4 = add i32 %v3_bcb4, 20
  %v5_bcb4 = inttoptr i32 %v4_bcb4 to i8*
  store i8 %v1_bca4, i8* %v5_bcb4, align 1
  %v0_bcb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_bcb8 = trunc i32 %v0_bcb8 to i8
  %v2_bcb8 = load i32, i32* @r6, align 4
  %v3_bcb8 = add i32 %v2_bcb8, 1
  %v4_bcb8 = inttoptr i32 %v3_bcb8 to i8*
  store i8 %v1_bcb8, i8* %v4_bcb8, align 1
  %v0_bcbc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bcbc, label %dec_label_pc_bcc0, label %dec_label_pc_bca4.dec_label_pc_bb20_crit_edge

dec_label_pc_bca4.dec_label_pc_bb20_crit_edge:    ; preds = %dec_label_pc_bca4
  %v1_bb24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bb20

dec_label_pc_bcc0:                                ; preds = %dec_label_pc_bca4, %dec_label_pc_bb14
  %v0_bcc0 = call i32 @function_ef90()
  %v1_bcc0 = trunc i32 %v0_bcc0 to i8
  %v4_bcc4 = sdiv i32 %v0_bcc0, 256
  store i32 %v4_bcc4, i32* %r3.global-to-local, align 4
  %v3_bcc8 = load i32, i32* @r6, align 4
  %v4_bcc8 = add i32 %v3_bcc8, 2
  %v5_bcc8 = inttoptr i32 %v4_bcc8 to i8*
  store i8 %v1_bcc0, i8* %v5_bcc8, align 1
  store i32 %v6_b6c0, i32* %r0.global-to-local, align 4
  %v1_bcd0 = load i32, i32* @r4, align 4
  %v9_bcd0 = icmp eq i32 %v6_b6c0, %v1_bcd0
  store i1 %v9_bcd0, i1* %cpsr_z.global-to-local, align 1
  %v0_bcd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_bcd4 = trunc i32 %v0_bcd4 to i8
  %v2_bcd4 = load i32, i32* @r6, align 4
  %v3_bcd4 = add i32 %v2_bcd4, 3
  %v4_bcd4 = inttoptr i32 %v3_bcd4 to i8*
  store i8 %v1_bcd4, i8* %v4_bcd4, align 1
  %v0_bcd8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bcd8, label %dec_label_pc_bcdc, label %dec_label_pc_bcc0.dec_label_pc_bb2c_crit_edge

dec_label_pc_bcc0.dec_label_pc_bb2c_crit_edge:    ; preds = %dec_label_pc_bcc0
  %v1_bb30.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bb2c

dec_label_pc_bcdc:                                ; preds = %dec_label_pc_bcc0, %dec_label_pc_bb20
  %v0_bcdc = call i32 @function_ef90()
  store i32 %v0_bcdc, i32* %r0.global-to-local, align 4
  store i32 %v6_b6d8, i32* %r2.global-to-local, align 4
  %v1_bce4 = load i32, i32* @r4, align 4
  %v9_bce4 = icmp eq i32 %v6_b6d8, %v1_bce4
  store i1 %v9_bce4, i1* %cpsr_z.global-to-local, align 1
  %v1_bce8 = load i32, i32* @r6, align 4
  %v2_bce8 = add i32 %v1_bce8, 4
  %v3_bce8 = inttoptr i32 %v2_bce8 to i32*
  store i32 %v0_bcdc, i32* %v3_bce8, align 4
  br i1 %v9_bce4, label %dec_label_pc_bcf0, label %dec_label_pc_bb38

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcdc, %dec_label_pc_bb2c
  %v0_bcf0 = call i32 @function_ef90()
  store i32 %v0_bcf0, i32* %r0.global-to-local, align 4
  store i32 %v1_b80c, i32* %r3.global-to-local, align 4
  store i1 %v2_bcf8, i1* %cpsr_z.global-to-local, align 1
  %v1_bcfc = load i32, i32* @r6, align 4
  %v2_bcfc = add i32 %v1_bcfc, 8
  %v3_bcfc = inttoptr i32 %v2_bcfc to i32*
  store i32 %v0_bcf0, i32* %v3_bcfc, align 4
  br i1 %v2_bcf8, label %dec_label_pc_bb44, label %dec_label_pc_bd04

dec_label_pc_bd04:                                ; preds = %dec_label_pc_bb38, %dec_label_pc_bcf0
  %v0_bd04 = call i32 @function_ef90()
  %v1_bd04 = trunc i32 %v0_bd04 to i8
  store i32 %v0_bd04, i32* %r0.global-to-local, align 4
  %v4_bd08 = sdiv i32 %v0_bd04, 256
  store i32 %v4_bd08, i32* %r3.global-to-local, align 4
  %v1_bd0c = trunc i32 %v4_bd08 to i8
  %v2_bd0c = load i32, i32* @r6, align 4
  %v3_bd0c = add i32 %v2_bd0c, 19
  %v4_bd0c = inttoptr i32 %v3_bd0c to i8*
  store i8 %v1_bd0c, i8* %v4_bd0c, align 1
  %v3_bd10 = load i32, i32* @r6, align 4
  %v4_bd10 = add i32 %v3_bd10, 18
  %v5_bd10 = inttoptr i32 %v4_bd10 to i8*
  store i8 %v1_bd04, i8* %v5_bd10, align 1
  br label %dec_label_pc_bb44

dec_label_pc_bd18:                                ; preds = %dec_label_pc_bb44, %dec_label_pc_bacc
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bd1c = call i32 @time(i32* null)
  store i32 %v2_bd1c, i32* %r0.global-to-local, align 4
  store i32 %v2_b794, i32* %ip.global-to-local, align 4
  %v9_bd24 = icmp eq i32 %v2_b794, %v2_bd1c
  store i1 %v9_bd24, i1* %cpsr_z.global-to-local, align 1
  %v6_bd28 = icmp slt i32 %v2_b794, %v2_bd1c
  br i1 %v6_bd28, label %dec_label_pc_bd2c, label %dec_label_pc_bd18.dec_label_pc_bacc_crit_edge

dec_label_pc_bd18.dec_label_pc_bacc_crit_edge:    ; preds = %dec_label_pc_bd18
  %v0_bad0.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_bacc

dec_label_pc_bd2c:                                ; preds = %dec_label_pc_bd18, %dec_label_pc_b5c4, %dec_label_pc_bd34
  %v29_bd30 = phi i32 [ -1, %dec_label_pc_b5c4 ], [ %v1_bd38, %dec_label_pc_bd34 ], [ %v2_bd1c, %dec_label_pc_bd18 ]
  store i32 %v3_b5c4, i32* %r4.global-to-local, align 4
  store i32 %v6_b5c4, i32* %r5.global-to-local, align 4
  store i32 %v9_b5c4, i32* %r6.global-to-local, align 4
  store i32 %v12_b5c4, i32* %r7.global-to-local, align 4
  ret i32 %v29_bd30

dec_label_pc_bd34:                                ; preds = %dec_label_pc_b7b8
  %v0_bd34 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_bd34, i32* %r0.global-to-local, align 4
  %v1_bd38 = call i32 @close(i32 %v0_bd34)
  store i32 %v1_bd38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bd2c

; uselistorder directives
  uselistorder i32 %v1_bd38, { 1, 0 }
  uselistorder i32 %v4_bd08, { 1, 0 }
  uselistorder i32 %v0_bd04, { 0, 2, 1 }
  uselistorder i32 %v0_bca4, { 0, 2, 1 }
  uselistorder i32 %v0_bc88, { 0, 2, 1 }
  uselistorder i32 %v2_bc5c, { 1, 0 }
  uselistorder i32 %v8_bc3c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_bc28, { 1, 0 }
  uselistorder i32 %v0_bc18, { 2, 0, 1, 3 }
  uselistorder i32 %v1_bbd4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_bb7c, { 0, 2, 1 }
  uselistorder i32 %v0_bb64, { 1, 0, 2 }
  uselistorder i1 %v2_bcf8, { 2, 3, 1, 0 }
  uselistorder i1 %v3_bc7c, { 3, 2, 0, 1 }
  uselistorder i1 %v2_baec, { 3, 0, 1, 2 }
  uselistorder i32 %v1_babc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ba68, { 1, 0 }
  uselistorder i32 %v3_b8c0, { 1, 0 }
  uselistorder i32 %v3_b8bc, { 1, 0 }
  uselistorder i32 %v1_b8b8, { 1, 0 }
  uselistorder i32 %v1_b8b0, { 1, 0 }
  uselistorder i32 %v3_b890, { 1, 0 }
  uselistorder i32 %v1_b884, { 1, 0 }
  uselistorder i32 %v1_b880, { 1, 0 }
  uselistorder i32 %v1_b87c, { 1, 0 }
  uselistorder i32 %v1_b874, { 1, 0 }
  uselistorder i32 %v1_b840, { 1, 0 }
  uselistorder i32 %v0_b814, { 1, 0, 2 }
  uselistorder i32 %v1_b80c, { 2, 1, 3, 0 }
  uselistorder i32 %v3_b7f0, { 1, 0, 2 }
  uselistorder i32 %v3_b7e4, { 2, 0, 1 }
  uselistorder i32 %v2_b794, { 2, 1, 0 }
  uselistorder i32 %v6_b784, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_b6d8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_b6c0, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v6_b6a4, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v6_b688, { 0, 2, 1, 3 }
  uselistorder i32 %v1_b670, { 1, 2, 0 }
  uselistorder i32 %v7_b62c, { 1, 0, 2 }
  uselistorder i32 %v6_b608, { 1, 2, 0 }
  uselistorder i32 %v1_b5c8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 13, 11, 12 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 10, 11, 12, 13, 14, 15, 20, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 13, 14, 15, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 11, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 34, 33, 36, 35, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 8, 6, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %fp.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 26, 27 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder label %dec_label_pc_bd2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bd04, { 1, 0 }
  uselistorder label %dec_label_pc_bb44, { 2, 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_bd44(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_bd44:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-84 = alloca i8, align 1
  %v3_bd44 = load i32, i32* @r4, align 4
  %v6_bd44 = load i32, i32* @r5, align 4
  %v9_bd44 = load i32, i32* @r6, align 4
  %v1_bd48 = urem i32 %arg2, 256
  store i32 %v1_bd48, i32* @sl, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %v1_bd48, i32* %r0.global-to-local, align 4
  %v1_bd5c = urem i32 %arg4, 256
  store i32 %v1_bd5c, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  %v2_bd68 = call i32* @calloc(i32 %v1_bd48, i32 4)
  %v4_bd68 = ptrtoint i32* %v2_bd68 to i32
  %v0_bd74 = load i32, i32* @sl, align 4
  store i32 %v0_bd74, i32* %r0.global-to-local, align 4
  %v2_bd78 = call i32* @calloc(i32 %v0_bd74, i32 4)
  %v3_bd78 = ptrtoint i32* %v2_bd78 to i32
  store i32 65535, i32* @r6, align 4
  %v0_bd84 = load i32, i32* @r5, align 4
  store i32 %v3_bd78, i32* @sb, align 4
  %v0_bd94 = load i32, i32* @r4, align 4
  store i32 %v0_bd94, i32* %r0.global-to-local, align 4
  %v5_bd98 = inttoptr i32 %v0_bd84 to i32*
  %v6_bd98 = call i32 @function_8fc8(i32 %v0_bd94, i32* %v5_bd98, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_bd9c = load i32, i32* @r5, align 4
  %v0_bda8 = load i32, i32* @r6, align 4
  %v0_bdac = load i32, i32* @r4, align 4
  store i32 %v0_bdac, i32* %r0.global-to-local, align 4
  %v3_bdb0 = urem i32 %v6_bd98, 65536
  store i32 %v3_bdb0, i32* @fp, align 4
  %v5_bdb4 = inttoptr i32 %v0_bd9c to i32*
  %v6_bdb4 = call i32 @function_8fc8(i32 %v0_bdac, i32* %v5_bdb4, i32 6, i32 %v0_bda8, i32 ptrtoint (i32* @0 to i32))
  %v0_bdb8 = load i32, i32* @r5, align 4
  %v3_bdbc = mul i32 %v6_bdb4, 65536
  store i32 %v3_bdbc, i32* @r8, align 4
  %v0_bdc8 = load i32, i32* @r4, align 4
  store i32 %v0_bdc8, i32* %r0.global-to-local, align 4
  %v5_bdcc = inttoptr i32 %v0_bdb8 to i32*
  %v6_bdcc = call i32 @function_8fc8(i32 %v0_bdc8, i32* %v5_bdcc, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  %v3_bddc = urem i32 %v6_bdcc, 65536
  %v0_bde0 = load i32, i32* @r5, align 4
  %v0_bde4 = load i32, i32* @r4, align 4
  store i32 %v0_bde4, i32* %r0.global-to-local, align 4
  %v5_bdec = inttoptr i32 %v0_bde0 to i32*
  %v6_bdec = call i32 @function_8fc8(i32 %v0_bde4, i32* %v5_bdec, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_bdf8 = urem i32 %v6_bdec, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v2_be14 = call i32 @time(i32* null)
  %v0_be18 = load i32, i32* @r8, align 4
  %v3_be18 = udiv i32 %v0_be18, 65536
  %v1_be1c = load i32, i32* @r6, align 4
  %v9_be1c = icmp eq i32 %v3_be18, %v1_be1c
  %v1_be244 = load i32, i32* @r7, align 4
  %v2_be245 = add i32 %v1_be244, %v2_be14
  store i32 %v2_be245, i32* %r0.global-to-local, align 4
  br i1 %v9_be1c, label %dec_label_pc_c008, label %bb

bb:                                               ; preds = %dec_label_pc_bd44
  br label %dec_label_pc_be38

dec_label_pc_be38:                                ; preds = %bb, %dec_label_pc_c008
  %v0_be38 = load i32, i32* @sl, align 4
  %tmp47 = icmp slt i32 %v0_be38, 1
  br i1 %tmp47, label %dec_label_pc_bfd8, label %dec_label_pc_be40

dec_label_pc_be40:                                ; preds = %dec_label_pc_be38
  %v0_be40 = load i32, i32* @fp, align 4
  %v3_be40 = udiv i32 %v0_be40, 256
  %v5_be4c = trunc i32 %v3_be40 to i8
  store i32 0, i32* @r8, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v3_be68 = udiv i32 %v0_be40, 65536
  store i32 0, i32* %r6.global-to-local, align 4
  %v4_be70 = trunc i32 %v3_be68 to i8
  store i8 %v4_be70, i8* %stack_var_-84, align 1
  %tmp48 = bitcast i32* %stack_var_-52 to %sockaddr*
  br label %dec_label_pc_be98

dec_label_pc_be78:                                ; preds = %dec_label_pc_bef8
  %v0_be78 = load i32, i32* %r6.global-to-local, align 4
  %v1_be78 = load i32, i32* @sb, align 4
  %v2_be78 = add i32 %v1_be78, %v0_be78
  %v3_be78 = inttoptr i32 %v2_be78 to i32*
  %v4_be78 = load i32, i32* %v3_be78, align 4
  store i32 %v4_be78, i32* %r0.global-to-local, align 4
  %v1_be7c = inttoptr i32 %v0_bf1c to %sockaddr*
  %v5_be84 = call i32 @connect(i32 %v4_be78, %sockaddr* %v1_be7c, i32 16)
  store i32 %v5_be84, i32* %r0.global-to-local, align 4
  %v0_be88 = load i32, i32* @r8, align 4
  %v1_be88 = load i32, i32* @sl, align 4
  %v9_be88 = icmp eq i32 %v0_be88, %v1_be88
  %v0_be8c = load i32, i32* %r6.global-to-local, align 4
  %v1_be8c = add i32 %v0_be8c, 4
  store i32 %v1_be8c, i32* %r6.global-to-local, align 4
  %v0_be90 = load i32, i32* %r5.global-to-local, align 4
  %v1_be90 = add i32 %v0_be90, 24
  store i32 %v1_be90, i32* %r5.global-to-local, align 4
  br i1 %v9_be88, label %dec_label_pc_bf94, label %dec_label_pc_be98

dec_label_pc_be98:                                ; preds = %dec_label_pc_bf28, %dec_label_pc_be78, %dec_label_pc_be40
  store i32 65535, i32* %r0.global-to-local, align 4
  %v2_bea4 = call i32* @calloc(i32 65535, i32 1)
  %v3_bea4 = ptrtoint i32* %v2_bea4 to i32
  store i32 %v3_bea4, i32* %r0.global-to-local, align 4
  %v0_beac = load i32, i32* @fp, align 4
  %v9_beac = icmp eq i32 %v0_beac, 65535
  %v1_beb4 = load i32, i32* %r6.global-to-local, align 4
  %v3_beb4 = add i32 %v1_beb4, %v4_bd68
  %v4_beb4 = inttoptr i32 %v3_beb4 to i32*
  store i32 %v3_bea4, i32* %v4_beb4, align 4
  br i1 %v9_beac, label %dec_label_pc_bff4, label %dec_label_pc_bebc

dec_label_pc_bebc:                                ; preds = %dec_label_pc_be98
  %v2_bec0 = load i32, i32* %r5.global-to-local, align 4
  %v3_bec0 = add i32 %v2_bec0, 2
  %v4_bec0 = inttoptr i32 %v3_bec0 to i8*
  store i8 %v5_be4c, i8* %v4_bec0, align 1
  %v2_bec4 = load i8, i8* %stack_var_-84, align 1
  %v2_bec8 = load i32, i32* %r5.global-to-local, align 4
  %v3_bec8 = add i32 %v2_bec8, 3
  %v4_bec8 = inttoptr i32 %v3_bec8 to i8*
  store i8 %v2_bec4, i8* %v4_bec8, align 1
  br label %dec_label_pc_becc

dec_label_pc_becc:                                ; preds = %dec_label_pc_bff4, %dec_label_pc_bebc
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_bed8 = call i32 @socket(i32 2, i32 17, i32 17)
  store i32 %v3_bed8, i32* %r0.global-to-local, align 4
  %v7_bedc = icmp eq i32 %v3_bed8, -1
  %v0_bee0 = load i32, i32* @r8, align 4
  %v1_bee0 = add i32 %v0_bee0, 1
  store i32 %v1_bee0, i32* @r8, align 4
  %v1_bef0 = load i32, i32* %r6.global-to-local, align 4
  %v2_bef0 = load i32, i32* @sb, align 4
  %v3_bef0 = add i32 %v2_bef0, %v1_bef0
  %v4_bef0 = inttoptr i32 %v3_bef0 to i32*
  store i32 %v3_bed8, i32* %v4_bef0, align 4
  br i1 %v7_bedc, label %dec_label_pc_bfec.loopexit, label %dec_label_pc_bef8

dec_label_pc_bef8:                                ; preds = %dec_label_pc_becc
  store i32 2, i32* %stack_var_-52, align 4
  %v0_bf18 = load i32, i32* %r0.global-to-local, align 4
  %v5_bf18 = call i32 @bind(i32 %v0_bf18, %sockaddr* %tmp48, i32 16)
  store i32 %v5_bf18, i32* %r0.global-to-local, align 4
  %v0_bf1c = load i32, i32* %r5.global-to-local, align 4
  %v1_bf1c = add i32 %v0_bf1c, 20
  %v2_bf1c = inttoptr i32 %v1_bf1c to i8*
  %v3_bf1c = load i8, i8* %v2_bf1c, align 1
  %tmp52 = icmp ugt i8 %v3_bf1c, 31
  br i1 %tmp52, label %dec_label_pc_be78, label %dec_label_pc_bf28

dec_label_pc_bf28:                                ; preds = %dec_label_pc_bef8
  %v1_bf28 = add i32 %v0_bf1c, 16
  %v2_bf28 = inttoptr i32 %v1_bf28 to i32*
  %v3_bf28 = load i32, i32* %v2_bf28, align 4
  store i32 %v3_bf28, i32* %r4.global-to-local, align 4
  %v0_bf2c = call i32 @function_ef90()
  store i32 %v0_bf2c, i32* %r0.global-to-local, align 4
  %v0_bf44 = load i32, i32* %r5.global-to-local, align 4
  %v1_bf44 = add i32 %v0_bf44, 20
  %v2_bf44 = inttoptr i32 %v1_bf44 to i8*
  %v3_bf44 = load i8, i8* %v2_bf44, align 1
  %v4_bf44 = zext i8 %v3_bf44 to i32
  %v2_bf4c = call i32 @llvm.bswap.i32(i32 %v3_bf28)
  %v7_bf50 = lshr i32 %v0_bf2c, %v4_bf44
  %v8_bf50 = add i32 %v7_bf50, %v2_bf4c
  %v1_bf58 = and i32 %v8_bf50, 65280
  store i32 %v1_bf58, i32* %r0.global-to-local, align 4
  %v2_bf6c = call i32 @llvm.bswap.i32(i32 %v8_bf50)
  %v2_bf70 = add i32 %v0_bf44, 4
  %v3_bf70 = inttoptr i32 %v2_bf70 to i32*
  store i32 %v2_bf6c, i32* %v3_bf70, align 4
  %v0_bf74 = load i32, i32* %r5.global-to-local, align 4
  %v1_bf74 = inttoptr i32 %v0_bf74 to %sockaddr*
  %v0_bf78 = load i32, i32* %r6.global-to-local, align 4
  %v1_bf78 = load i32, i32* @sb, align 4
  %v2_bf78 = add i32 %v1_bf78, %v0_bf78
  %v3_bf78 = inttoptr i32 %v2_bf78 to i32*
  %v4_bf78 = load i32, i32* %v3_bf78, align 4
  store i32 %v4_bf78, i32* %r0.global-to-local, align 4
  %v5_bf80 = call i32 @connect(i32 %v4_bf78, %sockaddr* %v1_bf74, i32 16)
  store i32 %v5_bf80, i32* %r0.global-to-local, align 4
  %v0_bf84 = load i32, i32* @r8, align 4
  %v1_bf84 = load i32, i32* @sl, align 4
  %v9_bf84 = icmp eq i32 %v0_bf84, %v1_bf84
  %v0_bf88 = load i32, i32* %r6.global-to-local, align 4
  %v1_bf88 = add i32 %v0_bf88, 4
  store i32 %v1_bf88, i32* %r6.global-to-local, align 4
  %v0_bf8c = load i32, i32* %r5.global-to-local, align 4
  %v1_bf8c = add i32 %v0_bf8c, 24
  store i32 %v1_bf8c, i32* %r5.global-to-local, align 4
  br i1 %v9_bf84, label %dec_label_pc_bf94, label %dec_label_pc_be98

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf28, %dec_label_pc_be78, %dec_label_pc_bfd8.dec_label_pc_bf94_crit_edge
  %v0_bf94 = phi i32 [ %v0_bf94.pre, %dec_label_pc_bfd8.dec_label_pc_bf94_crit_edge ], [ %v0_bf84, %dec_label_pc_bf28 ], [ %v0_be88, %dec_label_pc_be78 ]
  %tmp50 = icmp slt i32 %v0_bf94, 1
  br i1 %tmp50, label %dec_label_pc_bfd8, label %dec_label_pc_bf9c

dec_label_pc_bf9c:                                ; preds = %dec_label_pc_bf94
  %v2_bfa0 = icmp eq i32 %v1_bdf8, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_bfa0, label %dec_label_pc_bfa8, label %dec_label_pc_c018

dec_label_pc_bfa8:                                ; preds = %dec_label_pc_bf9c
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bfb0

dec_label_pc_bfb0:                                ; preds = %dec_label_pc_bfb0, %dec_label_pc_bfa8
  %v0_bfbc = phi i32 [ %v1_bfbc, %dec_label_pc_bfb0 ], [ 0, %dec_label_pc_bfa8 ]
  %v0_bfb4 = phi i32 [ %v1_bfd0, %dec_label_pc_bfb0 ], [ 0, %dec_label_pc_bfa8 ]
  %v1_bfb4 = load i32, i32* @sb, align 4
  %v2_bfb4 = add i32 %v1_bfb4, %v0_bfb4
  %v3_bfb4 = inttoptr i32 %v2_bfb4 to i32*
  %v4_bfb4 = load i32, i32* %v3_bfb4, align 4
  store i32 %v4_bfb4, i32* %r0.global-to-local, align 4
  %v2_bfb8 = add i32 %v0_bfb4, %v4_bd68
  %v3_bfb8 = inttoptr i32 %v2_bfb8 to i32*
  %v4_bfb8 = load i32, i32* %v3_bfb8, align 4
  %v1_bfbc = add i32 %v0_bfbc, 1
  store i32 %v1_bfbc, i32* %r5.global-to-local, align 4
  %v4_bfc8 = inttoptr i32 %v4_bfb8 to i32*
  %v5_bfc8 = call i32 @send(i32 %v4_bfb4, i32* %v4_bfc8, i32 %v3_bddc, i32 16384)
  store i32 %v5_bfc8, i32* %r0.global-to-local, align 4
  %v1_bfcc = load i32, i32* @sl, align 4
  %v9_bfcc = icmp eq i32 %v1_bfbc, %v1_bfcc
  %v0_bfd0 = load i32, i32* %r4.global-to-local, align 4
  %v1_bfd0 = add i32 %v0_bfd0, 4
  store i32 %v1_bfd0, i32* %r4.global-to-local, align 4
  br i1 %v9_bfcc, label %dec_label_pc_bfd8, label %dec_label_pc_bfb0

dec_label_pc_bfd8:                                ; preds = %dec_label_pc_c024, %dec_label_pc_bfb0, %dec_label_pc_bf94, %dec_label_pc_be38
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bfdc = call i32 @time(i32* null)
  store i32 %v2_bfdc, i32* %r0.global-to-local, align 4
  %v6_bfe8 = icmp slt i32 %v2_be245, %v2_bfdc
  br i1 %v6_bfe8, label %dec_label_pc_bfec, label %dec_label_pc_bfd8.dec_label_pc_bf94_crit_edge

dec_label_pc_bfd8.dec_label_pc_bf94_crit_edge:    ; preds = %dec_label_pc_bfd8
  %v0_bf94.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_bf94

dec_label_pc_bfec.loopexit:                       ; preds = %dec_label_pc_becc
  %v29_bff0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bfec

dec_label_pc_bfec:                                ; preds = %dec_label_pc_bfec.loopexit, %dec_label_pc_bfd8
  %v29_bff0 = phi i32 [ %v29_bff0.pre, %dec_label_pc_bfec.loopexit ], [ %v2_bfdc, %dec_label_pc_bfd8 ]
  store i32 %v3_bd44, i32* %r4.global-to-local, align 4
  store i32 %v6_bd44, i32* %r5.global-to-local, align 4
  store i32 %v9_bd44, i32* %r6.global-to-local, align 4
  ret i32 %v29_bff0

dec_label_pc_bff4:                                ; preds = %dec_label_pc_be98
  %v0_bff4 = call i32 @function_ef90()
  %v1_bff4 = trunc i32 %v0_bff4 to i8
  store i32 %v0_bff4, i32* %r0.global-to-local, align 4
  %v4_bff8 = sdiv i32 %v0_bff4, 256
  %v1_bffc = trunc i32 %v4_bff8 to i8
  %v2_bffc = load i32, i32* %r5.global-to-local, align 4
  %v3_bffc = add i32 %v2_bffc, 3
  %v4_bffc = inttoptr i32 %v3_bffc to i8*
  store i8 %v1_bffc, i8* %v4_bffc, align 1
  %v3_c000 = load i32, i32* %r5.global-to-local, align 4
  %v4_c000 = add i32 %v3_c000, 2
  %v5_c000 = inttoptr i32 %v4_c000 to i8*
  store i8 %v1_bff4, i8* %v5_c000, align 1
  br label %dec_label_pc_becc

dec_label_pc_c008:                                ; preds = %dec_label_pc_bd44
  %v0_c008 = call i32 @function_ef90()
  %v3_c00c = mul i32 %v0_c008, 65536
  store i32 %v3_c00c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_be38

dec_label_pc_c018:                                ; preds = %dec_label_pc_bf9c
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_c024

dec_label_pc_c024:                                ; preds = %dec_label_pc_c024, %dec_label_pc_c018
  %v0_c028 = phi i32 [ %v1_c05c, %dec_label_pc_c024 ], [ 0, %dec_label_pc_c018 ]
  %v2_c028 = add i32 %v0_c028, %v4_bd68
  %v3_c028 = inttoptr i32 %v2_c028 to i32*
  %v4_c028 = load i32, i32* %v3_c028, align 4
  store i32 %v4_c028, i32* @r4, align 4
  store i32 %v4_c028, i32* %r0.global-to-local, align 4
  %v2_c034 = call i32 @function_f044(i32 %v4_c028, i32 %v3_bddc)
  store i32 %v2_c034, i32* %r0.global-to-local, align 4
  %v0_c03c = load i32, i32* @r7, align 4
  %v1_c03c = trunc i32 %v0_c03c to i8
  %v2_c03c = load i32, i32* @r4, align 4
  %v4_c03c = add i32 %v2_c03c, %v3_bddc
  %v5_c03c = inttoptr i32 %v4_c03c to i8*
  store i8 %v1_c03c, i8* %v5_c03c, align 1
  %v0_c040 = load i32, i32* @r4, align 4
  %v0_c044 = load i32, i32* @r6, align 4
  %v1_c044 = load i32, i32* @sb, align 4
  %v2_c044 = add i32 %v1_c044, %v0_c044
  %v3_c044 = inttoptr i32 %v2_c044 to i32*
  %v4_c044 = load i32, i32* %v3_c044, align 4
  store i32 %v4_c044, i32* %r0.global-to-local, align 4
  %v0_c048 = load i32, i32* @r5, align 4
  %v1_c048 = add i32 %v0_c048, 1
  store i32 %v1_c048, i32* @r5, align 4
  %v4_c054 = inttoptr i32 %v0_c040 to i32*
  %v5_c054 = call i32 @send(i32 %v4_c044, i32* %v4_c054, i32 %v3_bddc, i32 16384)
  store i32 %v5_c054, i32* %r0.global-to-local, align 4
  %v0_c058 = load i32, i32* @r5, align 4
  %v1_c058 = load i32, i32* @sl, align 4
  %v9_c058 = icmp eq i32 %v0_c058, %v1_c058
  %v0_c05c = load i32, i32* @r6, align 4
  %v1_c05c = add i32 %v0_c05c, 4
  store i32 %v1_c05c, i32* @r6, align 4
  br i1 %v9_c058, label %dec_label_pc_bfd8, label %dec_label_pc_c024

; uselistorder directives
  uselistorder i32 %v1_c05c, { 1, 0 }
  uselistorder i32 %v0_bff4, { 0, 2, 1 }
  uselistorder i32 %v1_bfd0, { 1, 0 }
  uselistorder i32 %v1_bfbc, { 0, 2, 1 }
  uselistorder i32 %v0_bf1c, { 1, 2, 0 }
  uselistorder i32 %v3_bed8, { 1, 0, 2 }
  uselistorder i32 %v3_bddc, { 2, 3, 1, 0 }
  uselistorder i32 %v1_bd48, { 1, 2, 0 }
  uselistorder i8* %stack_var_-84, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 3, 4, 7, 8, 2, 5, 6, 9 }
  uselistorder i32* %r5.global-to-local, { 4, 5, 0, 1, 2, 6, 7, 8, 10, 11, 12, 3, 9, 13 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 6, 4, 5, 7, 21, 9, 8, 11, 10, 14, 12, 13, 15, 18, 20, 22, 19, 24, 23, 17, 16, 1, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder label %dec_label_pc_bf94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_be38, { 1, 0 }
}

define i32 @function_c068(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_c068:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_c068 = load i32, i32* @r4, align 4
  %v6_c068 = load i32, i32* @r5, align 4
  %v9_c068 = load i32, i32* @r6, align 4
  %v12_c068 = load i32, i32* @r7, align 4
  %v18_c068 = load i32, i32* @sb, align 4
  %v21_c068 = load i32, i32* @sl, align 4
  %v1_c06c = urem i32 %arg2, 256
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v1_c06c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_c088 = urem i32 %arg4, 256
  store i32 %v1_c088, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_c098 = call i32* @calloc(i32 %v1_c06c, i32 4)
  %v4_c098 = ptrtoint i32* %v2_c098 to i32
  %v0_c09c = load i32, i32* @r5, align 4
  store i32 %v0_c09c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_c0a8 = load i32, i32* @r7, align 4
  store i32 %v0_c0a8, i32* %r3.global-to-local, align 4
  %v0_c0ac = load i32, i32* @r4, align 4
  store i32 %v0_c0ac, i32* %r0.global-to-local, align 4
  %v5_c0b0 = inttoptr i32 %v0_c09c to i32*
  %v6_c0b0 = call i32 @function_8fc8(i32 %v0_c0ac, i32* %v5_c0b0, i32 2, i32 %v0_c0a8, i32 %v4_c098)
  %v1_c0bc = urem i32 %v6_c0b0, 256
  store i32 %v1_c0bc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c0c8 = load i32, i32* @r5, align 4
  store i32 %v0_c0c8, i32* %r1.global-to-local, align 4
  %v0_c0cc = load i32, i32* @r4, align 4
  store i32 %v0_c0cc, i32* %r0.global-to-local, align 4
  %v5_c0d0 = trunc i32 %v6_c0b0 to i8
  %v6_c0d4 = inttoptr i32 %v0_c0c8 to i32*
  %v7_c0d4 = call i32 @function_8fc8(i32 %v0_c0cc, i32* %v6_c0d4, i32 3, i32 65535, i32 %v6_c0b0)
  %v0_c0d8 = load i32, i32* @r5, align 4
  store i32 %v0_c0d8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c0e8 = load i32, i32* @r4, align 4
  store i32 %v0_c0e8, i32* %r0.global-to-local, align 4
  %v5_c0ec = inttoptr i32 %v0_c0d8 to i32*
  %v6_c0ec = call i32 @function_8fc8(i32 %v0_c0e8, i32* %v5_c0ec, i32 4, i32 64, i32 %v7_c0d4)
  %v1_c0f4 = urem i32 %v6_c0ec, 256
  store i32 %v1_c0f4, i32* %ip.global-to-local, align 4
  %v0_c0f8 = load i32, i32* @r5, align 4
  store i32 %v0_c0f8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_c100 = load i32, i32* @r7, align 4
  store i32 %v0_c100, i32* %r3.global-to-local, align 4
  %v0_c104 = load i32, i32* @r4, align 4
  store i32 %v0_c104, i32* %r0.global-to-local, align 4
  %v5_c108 = trunc i32 %v6_c0ec to i8
  %v6_c10c = inttoptr i32 %v0_c0f8 to i32*
  %v7_c10c = call i32 @function_8fc8(i32 %v0_c104, i32* %v6_c10c, i32 5, i32 %v0_c100, i32 %v6_c0ec)
  %v1_c118 = urem i32 %v7_c10c, 256
  store i32 %v1_c118, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c124 = load i32, i32* @r5, align 4
  store i32 %v0_c124, i32* %r1.global-to-local, align 4
  %v0_c128 = load i32, i32* @r4, align 4
  store i32 %v0_c128, i32* %r0.global-to-local, align 4
  %v5_c130 = inttoptr i32 %v0_c124 to i32*
  %v6_c130 = call i32 @function_8fc8(i32 %v0_c128, i32* %v5_c130, i32 6, i32 65535, i32 %v1_c118)
  %v0_c13c = load i32, i32* @r5, align 4
  store i32 %v0_c13c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c148 = load i32, i32* @r4, align 4
  store i32 %v0_c148, i32* %r0.global-to-local, align 4
  %v5_c14c = inttoptr i32 %v0_c13c to i32*
  %v6_c14c = call i32 @function_8fc8(i32 %v0_c148, i32* %v5_c14c, i32 7, i32 65535, i32 %v6_c130)
  %v0_c150 = load i32, i32* @r5, align 4
  store i32 %v0_c150, i32* %r1.global-to-local, align 4
  %v0_c154 = load i32, i32* @r7, align 4
  store i32 %v0_c154, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_c14c, i32* %sb.global-to-local, align 4
  %v0_c160 = load i32, i32* @r4, align 4
  store i32 %v0_c160, i32* %r0.global-to-local, align 4
  %v5_c164 = inttoptr i32 %v0_c150 to i32*
  %v6_c164 = call i32 @function_8fc8(i32 %v0_c160, i32* %v5_c164, i32 %v0_c154, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c170 = load i32, i32* @r5, align 4
  store i32 %v0_c170, i32* %r1.global-to-local, align 4
  store i32 %v6_c164, i32* @sl, align 4
  %v0_c178 = load i32, i32* @r4, align 4
  store i32 %v0_c178, i32* %r0.global-to-local, align 4
  %v5_c17c = inttoptr i32 %v0_c170 to i32*
  %v6_c17c = call i32 @function_8fc8(i32 %v0_c178, i32* %v5_c17c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_c188 = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_c188, i32* %r3.global-to-local, align 4
  %v1_c18c = urem i32 %v6_c17c, 256
  store i32 %v1_c18c, i32* %ip.global-to-local, align 4
  %v0_c190 = load i32, i32* @r5, align 4
  store i32 %v0_c190, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_c198 = load i32, i32* @r4, align 4
  store i32 %v0_c198, i32* %r0.global-to-local, align 4
  %v5_c1a0 = inttoptr i32 %v0_c190 to i32*
  %v6_c1a0 = call i32 @function_8fc8(i32 %v0_c198, i32* %v5_c1a0, i32 19, i32 %v2_c188, i32 %v1_c18c)
  store i32 %v6_c1a0, i32* @fp, align 4
  %v0_c1a8 = load i32, i32* @r7, align 4
  store i32 %v0_c1a8, i32* %r0.global-to-local, align 4
  %v1_c1ac = inttoptr i32 %v0_c1a8 to i32*
  %v2_c1ac = call i32 @time(i32* %v1_c1ac)
  %v1_c1b0 = load i32, i32* @r6, align 4
  %v2_c1b0 = add i32 %v1_c1b0, %v2_c1ac
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_c1c4 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_c1c4, i32* %r0.global-to-local, align 4
  %v2_c1c8 = icmp eq i32 %v3_c1c4, -1
  store i1 %v2_c1c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c1c8, label %dec_label_pc_c5e8, label %dec_label_pc_c1d4

dec_label_pc_c1d4:                                ; preds = %dec_label_pc_c068
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c1dc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c1dc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_c1e4 = load i32, i32* @r7, align 4
  store i32 %v0_c1e4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_c1f0 = call i32 @setsockopt(i32 %v3_c1c4, i32 %v0_c1e4, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_c1f0, i32* %r0.global-to-local, align 4
  %v2_c1f4 = icmp eq i32 %v7_c1f0, -1
  store i1 %v2_c1f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c1f4, label %dec_label_pc_c5f0, label %dec_label_pc_c1fc

dec_label_pc_c1fc:                                ; preds = %dec_label_pc_c1d4
  %v0_c1fc = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_c208 = urem i32 %v0_c1fc, 65536
  store i32 %v3_c208, i32* %r2.global-to-local, align 4
  %v3_c20c = icmp ugt i32 %v3_c208, 1459
  %v9_c20c = icmp eq i32 %v3_c208, 1460
  store i1 %v9_c20c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c20c, label %bb, label %bb55

bb:                                               ; preds = %dec_label_pc_c1fc
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_c1fc, %bb
  %v0_c214 = phi i32 [ %v3_c208, %dec_label_pc_c1fc ], [ 1460, %bb ]
  store i32 %v7_c0d4, i32* %r1.global-to-local, align 4
  store i32 %v6_c130, i32* %r2.global-to-local, align 4
  store i32 %v1_c06c, i32* %r3.global-to-local, align 4
  %v0_c224 = load i32, i32* %sb.global-to-local, align 4
  %v3_c224 = mul i32 %v0_c224, 65536
  store i32 %v3_c224, i32* %r5.global-to-local, align 4
  %v3_c228 = mul i32 %v7_c0d4, 65536
  store i32 %v3_c228, i32* %r6.global-to-local, align 4
  %v3_c22c = mul i32 %v6_c130, 65536
  store i32 %v3_c22c, i32* %sl.global-to-local, align 4
  %v3_c230 = urem i32 %v7_c0d4, 65536
  store i32 %v3_c230, i32* %r4.global-to-local, align 4
  %v3_c234 = urem i32 %v6_c130, 65536
  store i32 %v3_c234, i32* %sb.global-to-local, align 4
  %v3_c238 = urem i32 %v0_c224, 65536
  store i32 %v3_c238, i32* %ip.global-to-local, align 4
  %v2_c23c = icmp eq i32 %v1_c06c, 0
  store i1 %v2_c23c, i1* %cpsr_z.global-to-local, align 1
  %v0_c240 = load i32, i32* @r7, align 4
  store i32 %v0_c240, i32* %stack_var_-40, align 4
  br i1 %v2_c23c, label %.dec_label_pc_c3a8.preheader_crit_edge, label %dec_label_pc_c254

.dec_label_pc_c3a8.preheader_crit_edge:           ; preds = %bb55
  %.pre = add nuw nsw i32 %v0_c214, 8
  %.pre17 = add nuw nsw i32 %v0_c214, 28
  br label %dec_label_pc_c3a8.preheader

dec_label_pc_c254:                                ; preds = %bb55
  %v1_c258 = add nuw nsw i32 %v0_c214, 28
  %v1_c25c = add nuw nsw i32 %v0_c214, 8
  %tmp56 = mul nuw nsw i32 %v1_c258, 256
  %v1_c26c = urem i32 %v7_c0d4, 256
  %v1_c270 = urem i32 %v6_c130, 256
  %tmp57 = mul nuw nsw i32 %v1_c25c, 256
  %v1_c280 = and i32 %tmp56, 65280
  store i32 %v1_c280, i32* %r3.global-to-local, align 4
  %v3_c284 = mul nuw nsw i32 %v1_c26c, 256
  store i32 %v3_c284, i32* %r2.global-to-local, align 4
  %v3_c288 = mul nuw nsw i32 %v1_c270, 256
  store i32 %v3_c288, i32* %r1.global-to-local, align 4
  %tmp58 = udiv i32 %v0_c224, 256
  %v3_c28c = urem i32 %tmp58, 256
  %v1_c290 = and i32 %tmp57, 65280
  store i32 %v1_c290, i32* %ip.global-to-local, align 4
  %v2_c294 = icmp eq i32 %v1_c118, 0
  store i1 %v2_c294, i1* %cpsr_z.global-to-local, align 1
  %tmp59 = udiv i32 %v1_c258, 256
  %v4_c298 = urem i32 %tmp59, 256
  %v5_c298 = or i32 %v4_c298, %v1_c280
  store i32 %v5_c298, i32* %r0.global-to-local, align 4
  %v1_c29c = urem i32 %v0_c224, 256
  store i32 %v1_c29c, i32* %r4.global-to-local, align 4
  %tmp60 = udiv i32 %v7_c0d4, 256
  %v4_c2a0 = urem i32 %tmp60, 256
  %v5_c2a0 = or i32 %v4_c2a0, %v3_c284
  store i32 %v5_c2a0, i32* %r6.global-to-local, align 4
  %tmp61 = udiv i32 %v6_c130, 256
  %v4_c2a4 = urem i32 %tmp61, 256
  %v5_c2a4 = or i32 %v4_c2a4, %v3_c288
  store i32 %v5_c2a4, i32* %sb.global-to-local, align 4
  %v5_c2a8 = trunc i32 %tmp59 to i8
  %v5_c2ac = trunc i32 %tmp60 to i8
  %v4_c2b0 = mul nuw nsw i32 %v1_c29c, 256
  %v5_c2b0 = or i32 %v4_c2b0, %v3_c28c
  store i32 %v5_c2b0, i32* %r5.global-to-local, align 4
  %tmp62 = udiv i32 %v1_c25c, 256
  %v4_c2b4 = urem i32 %tmp62, 256
  %v5_c2b4 = or i32 %v4_c2b4, %v1_c290
  store i32 %v5_c2b4, i32* %sl.global-to-local, align 4
  br i1 %v2_c294, label %dec_label_pc_c2bc, label %dec_label_pc_c5fc

dec_label_pc_c2bc:                                ; preds = %dec_label_pc_c254
  store i32 %v1_c26c, i32* %r1.global-to-local, align 4
  %v3_c2c020 = udiv i32 %v1_c280, 256
  store i32 %v3_c2c020, i32* %ip.global-to-local, align 4
  store i32 %v1_c270, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v5_c2cc = trunc i32 %v3_c2c020 to i8
  %v5_c2d0 = trunc i32 %v7_c0d4 to i8
  store i32 %v1_c29c, i32* %r7.global-to-local, align 4
  %v3_c2dc21 = udiv i32 %v1_c290, 256
  store i32 %v3_c2dc21, i32* %r6.global-to-local, align 4
  %v4_c358 = sext i8 %v5_c2ac to i32
  %sext10 = mul i32 %v6_c130, 16777216
  %v7_c378 = sdiv i32 %sext10, 16777216
  %v3_c378 = sext i8 %v5_c2d0 to i32
  br label %dec_label_pc_c2e0

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c2e0, %dec_label_pc_c2bc
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_c2ec = call i32* @calloc(i32 1510, i32 1)
  %v4_c2ec = ptrtoint i32* %v2_c2ec to i32
  store i32 %v4_c2ec, i32* %r0.global-to-local, align 4
  store i32 %v4_c098, i32* %r3.global-to-local, align 4
  %v3_c2f4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c2f4, i32* %r2.global-to-local, align 4
  %v2_c2f8 = load i32, i32* %r4.global-to-local, align 4
  %v5_c2f8 = mul i32 %v2_c2f8, 4
  %v6_c2f8 = add i32 %v5_c2f8, %v4_c098
  %v7_c2f8 = inttoptr i32 %v6_c2f8 to i32*
  store i32 %v4_c2ec, i32* %v7_c2f8, align 4
  %v0_c2fc = load i32, i32* %r3.global-to-local, align 4
  %v1_c2fc = load i32, i32* %r2.global-to-local, align 4
  %v4_c2fc = mul i32 %v1_c2fc, 4
  %v5_c2fc = add i32 %v4_c2fc, %v0_c2fc
  %v6_c2fc = inttoptr i32 %v5_c2fc to i32*
  %v7_c2fc = load i32, i32* %v6_c2fc, align 4
  store i32 %v7_c2fc, i32* %r1.global-to-local, align 4
  %v1_c300 = inttoptr i32 %v7_c2fc to i8*
  %v2_c300 = load i8, i8* %v1_c300, align 1
  %tmp = urem i8 %v2_c300, 16
  %v1_c304 = zext i8 %tmp to i32
  %v1_c308 = or i32 %v1_c304, 64
  store i32 %v1_c308, i32* %r3.global-to-local, align 4
  %v1_c30c = trunc i32 %v1_c308 to i8
  store i8 %v1_c30c, i8* %v1_c300, align 1
  %v0_c310 = load i32, i32* %r1.global-to-local, align 4
  %v1_c310 = inttoptr i32 %v0_c310 to i8*
  %v2_c310 = load i8, i8* %v1_c310, align 1
  %v3_c310 = zext i8 %v2_c310 to i32
  %v1_c314 = and i32 %v3_c310, 240
  %v1_c318 = or i32 %v1_c314, 5
  store i32 %v1_c318, i32* %r2.global-to-local, align 4
  %v3_c320 = add i32 %v0_c310, 9
  %v4_c320 = inttoptr i32 %v3_c320 to i8*
  store i8 17, i8* %v4_c320, align 1
  %v0_c324 = load i32, i32* %r2.global-to-local, align 4
  %v1_c324 = trunc i32 %v0_c324 to i8
  %v2_c324 = load i32, i32* %r1.global-to-local, align 4
  %v3_c324 = inttoptr i32 %v2_c324 to i8*
  store i8 %v1_c324, i8* %v3_c324, align 1
  %v2_c32c = load i32, i32* %r1.global-to-local, align 4
  %v3_c32c = add i32 %v2_c32c, 1
  %v4_c32c = inttoptr i32 %v3_c32c to i8*
  store i8 %v5_c0d0, i8* %v4_c32c, align 1
  %v2_c334 = load i32, i32* %r1.global-to-local, align 4
  %v3_c334 = add i32 %v2_c334, 8
  %v4_c334 = inttoptr i32 %v3_c334 to i8*
  store i8 %v5_c108, i8* %v4_c334, align 1
  %v3_c338 = load i32, i32* %stack_var_-40, align 4
  %v1_c340 = add i32 %v3_c338, 1
  store i32 %v1_c340, i32* %r4.global-to-local, align 4
  %v5_c348 = mul i32 %v3_c338, 24
  store i32 %v5_c348, i32* %r3.global-to-local, align 4
  store i32 %v1_c06c, i32* %r2.global-to-local, align 4
  %v2_c350 = load i32, i32* %r1.global-to-local, align 4
  %v3_c350 = add i32 %v2_c350, 2
  %v4_c350 = inttoptr i32 %v3_c350 to i8*
  store i8 %v5_c2a8, i8* %v4_c350, align 1
  %v0_c354 = load i32, i32* @fp, align 4
  %v1_c354 = load i32, i32* %r1.global-to-local, align 4
  %v2_c354 = add i32 %v1_c354, 12
  %v3_c354 = inttoptr i32 %v2_c354 to i32*
  store i32 %v0_c354, i32* %v3_c354, align 4
  store i32 %v4_c358, i32* %ip.global-to-local, align 4
  %v0_c35c = load i32, i32* %r4.global-to-local, align 4
  %v1_c35c = load i32, i32* %r2.global-to-local, align 4
  %v9_c35c = icmp eq i32 %v0_c35c, %v1_c35c
  store i1 %v9_c35c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c2c020, i32* %r2.global-to-local, align 4
  %v0_c364 = load i32, i32* %r3.global-to-local, align 4
  %v1_c364 = load i32, i32* @r8, align 4
  %v2_c364 = add i32 %v1_c364, %v0_c364
  store i32 %v2_c364, i32* %r3.global-to-local, align 4
  %v2_c368 = load i32, i32* %r1.global-to-local, align 4
  %v3_c368 = add i32 %v2_c368, 3
  %v4_c368 = inttoptr i32 %v3_c368 to i8*
  store i8 %v5_c2cc, i8* %v4_c368, align 1
  %v0_c36c = load i32, i32* %ip.global-to-local, align 4
  %v1_c36c = trunc i32 %v0_c36c to i8
  %v2_c36c = load i32, i32* %r1.global-to-local, align 4
  %v3_c36c = add i32 %v2_c36c, 4
  %v4_c36c = inttoptr i32 %v3_c36c to i8*
  store i8 %v1_c36c, i8* %v4_c36c, align 1
  %v0_c370 = load i32, i32* %r3.global-to-local, align 4
  %v1_c370 = add i32 %v0_c370, 16
  %v2_c370 = inttoptr i32 %v1_c370 to i32*
  %v3_c370 = load i32, i32* %v2_c370, align 4
  store i32 %v3_c370, i32* %r0.global-to-local, align 4
  store i32 %v3_c378, i32* %r2.global-to-local, align 4
  store i32 %v7_c378, i32* %ip.global-to-local, align 4
  %v0_c37c = load i32, i32* %r1.global-to-local, align 4
  %v1_c37c = add i32 %v0_c37c, 20
  store i32 %v1_c37c, i32* %r3.global-to-local, align 4
  %v3_c380 = add i32 %v0_c37c, 5
  %v4_c380 = inttoptr i32 %v3_c380 to i8*
  store i8 %v5_c2d0, i8* %v4_c380, align 1
  %v0_c384 = load i32, i32* %sb.global-to-local, align 4
  %v1_c384 = trunc i32 %v0_c384 to i8
  %v2_c384 = load i32, i32* %r1.global-to-local, align 4
  %v3_c384 = add i32 %v2_c384, 20
  %v4_c384 = inttoptr i32 %v3_c384 to i8*
  store i8 %v1_c384, i8* %v4_c384, align 1
  %v0_c388 = load i32, i32* %r0.global-to-local, align 4
  %v1_c388 = load i32, i32* %r1.global-to-local, align 4
  %v2_c388 = add i32 %v1_c388, 16
  %v3_c388 = inttoptr i32 %v2_c388 to i32*
  store i32 %v0_c388, i32* %v3_c388, align 4
  %v0_c38c = load i32, i32* %r6.global-to-local, align 4
  %v1_c38c = trunc i32 %v0_c38c to i8
  %v2_c38c = load i32, i32* %r3.global-to-local, align 4
  %v3_c38c = add i32 %v2_c38c, 5
  %v4_c38c = inttoptr i32 %v3_c38c to i8*
  store i8 %v1_c38c, i8* %v4_c38c, align 1
  %v0_c390 = load i32, i32* %ip.global-to-local, align 4
  %v1_c390 = trunc i32 %v0_c390 to i8
  %v2_c390 = load i32, i32* %r3.global-to-local, align 4
  %v3_c390 = add i32 %v2_c390, 1
  %v4_c390 = inttoptr i32 %v3_c390 to i8*
  store i8 %v1_c390, i8* %v4_c390, align 1
  %v0_c394 = load i32, i32* %r5.global-to-local, align 4
  %v1_c394 = trunc i32 %v0_c394 to i8
  %v2_c394 = load i32, i32* %r3.global-to-local, align 4
  %v3_c394 = add i32 %v2_c394, 2
  %v4_c394 = inttoptr i32 %v3_c394 to i8*
  store i8 %v1_c394, i8* %v4_c394, align 1
  %v0_c398 = load i32, i32* %r7.global-to-local, align 4
  %v1_c398 = trunc i32 %v0_c398 to i8
  %v2_c398 = load i32, i32* %r3.global-to-local, align 4
  %v3_c398 = add i32 %v2_c398, 3
  %v4_c398 = inttoptr i32 %v3_c398 to i8*
  store i8 %v1_c398, i8* %v4_c398, align 1
  %v0_c39c = load i32, i32* %sl.global-to-local, align 4
  %v1_c39c = trunc i32 %v0_c39c to i8
  %v2_c39c = load i32, i32* %r3.global-to-local, align 4
  %v3_c39c = add i32 %v2_c39c, 4
  %v4_c39c = inttoptr i32 %v3_c39c to i8*
  store i8 %v1_c39c, i8* %v4_c39c, align 1
  %v0_c3a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c3a0, i32* %stack_var_-40, align 4
  %v5_c3a4 = icmp slt i32 %v0_c35c, %v1_c35c
  br i1 %v5_c3a4, label %dec_label_pc_c2e0, label %dec_label_pc_c3a8.preheader

dec_label_pc_c3a8.preheader:                      ; preds = %dec_label_pc_c628, %dec_label_pc_c2e0, %.dec_label_pc_c3a8.preheader_crit_edge
  %v1_c3cc.pre-phi = phi i32 [ %.pre17, %.dec_label_pc_c3a8.preheader_crit_edge ], [ %v1_c258, %dec_label_pc_c2e0 ], [ %v1_c258, %dec_label_pc_c628 ]
  %v1_c3c8.pre-phi = phi i32 [ %.pre, %.dec_label_pc_c3a8.preheader_crit_edge ], [ %v1_c25c, %dec_label_pc_c2e0 ], [ %v1_c25c, %dec_label_pc_c628 ]
  %v3_c558 = icmp eq i32 %v3_c230, 65535
  %v2_c5ac = icmp eq i32 %v1_c18c, 0
  br label %dec_label_pc_c3a8

dec_label_pc_c3a8:                                ; preds = %dec_label_pc_c3a8.preheader, %dec_label_pc_c5d4
  store i32 %v1_c06c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_c23c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_c23c, label %dec_label_pc_c5d4, label %dec_label_pc_c3bc

dec_label_pc_c3bc:                                ; preds = %dec_label_pc_c3a8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_c214, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v1_c3c8.pre-phi, i32* @sb, align 4
  store i32 %v1_c3cc.pre-phi, i32* @sl, align 4
  br label %dec_label_pc_c4c0

dec_label_pc_c3d4:                                ; preds = %dec_label_pc_c4c0
  %v0_c3d4 = load i32, i32* @fp, align 4
  %v2_c3d4 = icmp eq i32 %v0_c3d4, -1
  store i1 %v2_c3d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c3d4, label %dec_label_pc_c548, label %dec_label_pc_c3dc

dec_label_pc_c3dc:                                ; preds = %dec_label_pc_c4e4, %dec_label_pc_c3d4
  store i32 %v3_c230, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c558, label %dec_label_pc_c564, label %dec_label_pc_c3f0

dec_label_pc_c3f0:                                ; preds = %dec_label_pc_c548.dec_label_pc_c3f0_crit_edge, %dec_label_pc_c3dc
  %v1_c3f4 = phi i32 [ %v1_c3f4.pre, %dec_label_pc_c548.dec_label_pc_c3f0_crit_edge ], [ 65535, %dec_label_pc_c3dc ]
  store i32 %v3_c234, i32* %r1.global-to-local, align 4
  %v9_c3f4 = icmp eq i32 %v3_c234, %v1_c3f4
  store i1 %v9_c3f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c3f4, label %dec_label_pc_c580, label %dec_label_pc_c3fc

dec_label_pc_c3fc:                                ; preds = %dec_label_pc_c564.dec_label_pc_c3fc_crit_edge, %dec_label_pc_c3f0
  %v1_c400 = phi i32 [ %v1_c400.pre, %dec_label_pc_c564.dec_label_pc_c3fc_crit_edge ], [ %v1_c3f4, %dec_label_pc_c3f0 ]
  store i32 %v3_c238, i32* %r2.global-to-local, align 4
  %v9_c400 = icmp eq i32 %v3_c238, %v1_c400
  store i1 %v9_c400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c400, label %dec_label_pc_c59c, label %dec_label_pc_c408

dec_label_pc_c408:                                ; preds = %dec_label_pc_c580, %dec_label_pc_c3fc
  store i32 %v1_c18c, i32* %r3.global-to-local, align 4
  store i1 %v2_c5ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c5ac, label %dec_label_pc_c414, label %dec_label_pc_c5b8

dec_label_pc_c414:                                ; preds = %dec_label_pc_c408, %dec_label_pc_c59c, %dec_label_pc_c5b8
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c418 = load i32, i32* @r7, align 4
  %v1_c418 = trunc i32 %v0_c418 to i8
  %v2_c418 = load i32, i32* @r5, align 4
  %v3_c418 = add i32 %v2_c418, 10
  %v4_c418 = inttoptr i32 %v3_c418 to i8*
  store i8 %v1_c418, i8* %v4_c418, align 1
  %v0_c41c = load i32, i32* @r7, align 4
  %v1_c41c = trunc i32 %v0_c41c to i8
  %v2_c41c = load i32, i32* @r5, align 4
  %v3_c41c = add i32 %v2_c41c, 11
  %v4_c41c = inttoptr i32 %v3_c41c to i8*
  store i8 %v1_c41c, i8* %v4_c41c, align 1
  %v0_c420 = load i32, i32* @r5, align 4
  store i32 %v0_c420, i32* @r0, align 4
  %v2_c424 = call i32 @function_d3d4(i32 %v0_c420, i32 20)
  %v3_c424 = trunc i32 %v2_c424 to i8
  store i32 %v2_c424, i32* %r0.global-to-local, align 4
  %v4_c428 = sdiv i32 %v2_c424, 256
  store i32 %v4_c428, i32* %r3.global-to-local, align 4
  %v1_c42c = trunc i32 %v4_c428 to i8
  %v2_c42c = load i32, i32* @r5, align 4
  %v3_c42c = add i32 %v2_c42c, 11
  %v4_c42c = inttoptr i32 %v3_c42c to i8*
  store i8 %v1_c42c, i8* %v4_c42c, align 1
  %v3_c430 = load i32, i32* @r5, align 4
  %v4_c430 = add i32 %v3_c430, 10
  %v5_c430 = inttoptr i32 %v4_c430 to i8*
  store i8 %v3_c424, i8* %v5_c430, align 1
  %v0_c434 = load i32, i32* @r7, align 4
  %v1_c434 = trunc i32 %v0_c434 to i8
  %v2_c434 = load i32, i32* @r6, align 4
  %v3_c434 = add i32 %v2_c434, 6
  %v4_c434 = inttoptr i32 %v3_c434 to i8*
  store i8 %v1_c434, i8* %v4_c434, align 1
  %v0_c438 = load i32, i32* @r7, align 4
  %v1_c438 = trunc i32 %v0_c438 to i8
  %v2_c438 = load i32, i32* @r6, align 4
  %v3_c438 = add i32 %v2_c438, 7
  %v4_c438 = inttoptr i32 %v3_c438 to i8*
  store i8 %v1_c438, i8* %v4_c438, align 1
  %v0_c43c = load i32, i32* @r5, align 4
  %v1_c43c = add i32 %v0_c43c, 24
  %v2_c43c = inttoptr i32 %v1_c43c to i8*
  %v3_c43c = load i8, i8* %v2_c43c, align 1
  %v4_c43c = zext i8 %v3_c43c to i32
  store i32 %v4_c43c, i32* %r3.global-to-local, align 4
  %v1_c440 = add i32 %v0_c43c, 25
  %v2_c440 = inttoptr i32 %v1_c440 to i8*
  %v3_c440 = load i8, i8* %v2_c440, align 1
  %v4_c440 = zext i8 %v3_c440 to i32
  %v0_c444 = load i32, i32* @r6, align 4
  store i32 %v0_c444, i32* @r1, align 4
  %v4_c448 = mul nuw nsw i32 %v4_c440, 256
  %v5_c448 = or i32 %v4_c448, %v4_c43c
  store i32 %v5_c448, i32* %r2.global-to-local, align 4
  store i32 %v0_c43c, i32* %r0.global-to-local, align 4
  %v0_c450 = load i32, i32* @sb, align 4
  store i32 %v0_c450, i32* %r3.global-to-local, align 4
  %v4_c454 = call i32 @function_d430(i32 %v0_c43c, i32 %v0_c444, i32 %v5_c448, i32 %v0_c450)
  %v5_c454 = trunc i32 %v4_c454 to i8
  store i32 %v4_c454, i32* %r0.global-to-local, align 4
  %v4_c45822 = udiv i32 %v4_c454, 256
  %v1_c45c = trunc i32 %v4_c45822 to i8
  %v2_c45c = load i32, i32* @r6, align 4
  %v3_c45c = add i32 %v2_c45c, 7
  %v4_c45c = inttoptr i32 %v3_c45c to i8*
  store i8 %v1_c45c, i8* %v4_c45c, align 1
  %v3_c460 = load i32, i32* @r6, align 4
  %v4_c460 = add i32 %v3_c460, 6
  %v5_c460 = inttoptr i32 %v4_c460 to i8*
  store i8 %v5_c454, i8* %v5_c460, align 1
  %v3_c464 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c464, i32* %r3.global-to-local, align 4
  %v0_c468 = load i32, i32* @r5, align 4
  %v1_c468 = add i32 %v0_c468, 20
  %v2_c468 = inttoptr i32 %v1_c468 to i32*
  %v3_c468 = load i32, i32* %v2_c468, align 4
  %v3_c470 = udiv i32 %v3_c468, 65536
  store i32 %v3_c470, i32* %r2.global-to-local, align 4
  %v5_c474 = mul i32 %v3_c464, 24
  %v1_c478 = load i32, i32* @r8, align 4
  %v2_c478 = add i32 %v1_c478, %v5_c474
  store i32 %v2_c478, i32* %ip.global-to-local, align 4
  %v3_c47c19 = udiv i32 %v3_c468, 16777216
  %v1_c480 = trunc i32 %v3_c47c19 to i8
  %v3_c480 = add i32 %v2_c478, 3
  %v4_c480 = inttoptr i32 %v3_c480 to i8*
  store i8 %v1_c480, i8* %v4_c480, align 1
  %v0_c484 = load i32, i32* %r2.global-to-local, align 4
  %v1_c484 = trunc i32 %v0_c484 to i8
  %v2_c484 = load i32, i32* %ip.global-to-local, align 4
  %v3_c484 = add i32 %v2_c484, 2
  %v4_c484 = inttoptr i32 %v3_c484 to i8*
  store i8 %v1_c484, i8* %v4_c484, align 1
  %v0_c488 = load i32, i32* @r5, align 4
  store i32 %v0_c488, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c1c4, i32* %r0.global-to-local, align 4
  %v0_c494 = load i32, i32* @sl, align 4
  store i32 %v0_c494, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_c49c = load i32, i32* %ip.global-to-local, align 4
  %v4_c49c = inttoptr i32 %v0_c49c to %sockaddr*
  %v7_c4a4 = inttoptr i32 %v0_c488 to i32*
  %v9_c4a4 = call i32 @sendto(i32 %v3_c1c4, i32* %v7_c4a4, i32 %v0_c494, i32 16384, %sockaddr* %v4_c49c, i32 16)
  %v3_c4a8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c4a8, i32* %r3.global-to-local, align 4
  store i32 %v1_c06c, i32* %r1.global-to-local, align 4
  %v1_c4b0 = add i32 %v3_c4a8, 1
  store i32 %v1_c4b0, i32* %r0.global-to-local, align 4
  %v9_c4b4 = icmp eq i32 %v1_c4b0, %v1_c06c
  store i1 %v9_c4b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c4b0, i32* %stack_var_-40, align 4
  %v6_c4bc = icmp slt i32 %v1_c4b0, %v1_c06c
  br i1 %v6_c4bc, label %dec_label_pc_c4c0, label %dec_label_pc_c5d4

dec_label_pc_c4c0:                                ; preds = %dec_label_pc_c414, %dec_label_pc_c3bc
  %v1_c4d4 = phi i32 [ %v1_c4b0, %dec_label_pc_c414 ], [ 0, %dec_label_pc_c3bc ]
  %v5_c4c4 = mul i32 %v1_c4d4, 24
  %v1_c4c8 = load i32, i32* @r8, align 4
  %v2_c4c8 = add i32 %v1_c4c8, %v5_c4c4
  store i32 %v2_c4c8, i32* %r3.global-to-local, align 4
  store i32 %v4_c098, i32* %r4.global-to-local, align 4
  %v1_c4d0 = add i32 %v2_c4c8, 20
  %v2_c4d0 = inttoptr i32 %v1_c4d0 to i8*
  %v3_c4d0 = load i8, i8* %v2_c4d0, align 1
  %v4_c4d0 = zext i8 %v3_c4d0 to i32
  store i32 %v4_c4d0, i32* %r2.global-to-local, align 4
  %v4_c4d4 = mul i32 %v1_c4d4, 4
  %v5_c4d4 = add i32 %v4_c4d4, %v4_c098
  %v6_c4d4 = inttoptr i32 %v5_c4d4 to i32*
  %v7_c4d4 = load i32, i32* %v6_c4d4, align 4
  store i32 %v7_c4d4, i32* @r5, align 4
  %v2_c4d8 = icmp ugt i8 %v3_c4d0, 30
  %v7_c4d8 = icmp eq i8 %v3_c4d0, 31
  store i1 %v7_c4d8, i1* %cpsr_z.global-to-local, align 1
  %v1_c4dc = add i32 %v7_c4d4, 20
  store i32 %v1_c4dc, i32* @r6, align 4
  %v2_c4e0 = xor i1 %v7_c4d8, true
  %v3_c4e0 = and i1 %v2_c4d8, %v2_c4e0
  br i1 %v3_c4e0, label %dec_label_pc_c3d4, label %dec_label_pc_c4e4

dec_label_pc_c4e4:                                ; preds = %dec_label_pc_c4c0
  %v1_c4e4 = add i32 %v2_c4c8, 16
  %v2_c4e4 = inttoptr i32 %v1_c4e4 to i32*
  %v3_c4e4 = load i32, i32* %v2_c4e4, align 4
  store i32 %v3_c4e4, i32* %r4.global-to-local, align 4
  %v0_c4e8 = call i32 @function_ef90()
  store i32 %v0_c4e8, i32* %r0.global-to-local, align 4
  %v3_c4ec = load i32, i32* %stack_var_-40, align 4
  %v5_c4f4 = mul i32 %v3_c4ec, 24
  %v1_c4fc = load i32, i32* @r8, align 4
  %v2_c4fc = add i32 %v1_c4fc, %v5_c4f4
  store i32 %v2_c4fc, i32* %r1.global-to-local, align 4
  %v1_c500 = and i32 %v3_c4e4, 65280
  store i32 %v1_c500, i32* %r3.global-to-local, align 4
  %v1_c4f8 = udiv i32 %v3_c4e4, 256
  %v3_c504 = and i32 %v1_c4f8, 65280
  store i32 %v3_c504, i32* %r2.global-to-local, align 4
  %v3_c508 = mul i32 %v3_c4e4, 16777216
  store i32 %v3_c508, i32* %ip.global-to-local, align 4
  %v1_c50c = add i32 %v2_c4fc, 20
  %v2_c50c = inttoptr i32 %v1_c50c to i8*
  %v3_c50c = load i8, i8* %v2_c50c, align 1
  %v4_c50c = zext i8 %v3_c50c to i32
  %v4_c510 = mul nuw nsw i32 %v1_c500, 256
  %v5_c510 = or i32 %v4_c510, %v3_c508
  store i32 %v5_c510, i32* %ip.global-to-local, align 4
  %v2_c518 = call i32 @llvm.bswap.i32(i32 %v3_c4e4)
  %v7_c51c = lshr i32 %v0_c4e8, %v4_c50c
  %v8_c51c = add i32 %v7_c51c, %v2_c518
  store i32 %v8_c51c, i32* %r2.global-to-local, align 4
  %v3_c528 = mul i32 %v8_c51c, 16777216
  %v1_c52c = and i32 %v8_c51c, 65280
  store i32 %v1_c52c, i32* %r0.global-to-local, align 4
  %v4_c530 = mul nuw nsw i32 %v1_c52c, 256
  %v5_c530 = or i32 %v4_c530, %v3_c528
  store i32 %v5_c530, i32* %r1.global-to-local, align 4
  %v2_c538 = call i32 @llvm.bswap.i32(i32 %v8_c51c)
  store i32 %v2_c538, i32* %r3.global-to-local, align 4
  %v0_c53c = load i32, i32* @fp, align 4
  %v3_c53c = icmp eq i32 %v0_c53c, -1
  store i1 %v3_c53c, i1* %cpsr_z.global-to-local, align 1
  %v1_c540 = load i32, i32* @r5, align 4
  %v2_c540 = add i32 %v1_c540, 16
  %v3_c540 = inttoptr i32 %v2_c540 to i32*
  store i32 %v2_c538, i32* %v3_c540, align 4
  br i1 %v3_c53c, label %dec_label_pc_c548, label %dec_label_pc_c3dc

dec_label_pc_c548:                                ; preds = %dec_label_pc_c4e4, %dec_label_pc_c3d4
  %v0_c548 = call i32 @function_ef90()
  store i32 %v0_c548, i32* %r0.global-to-local, align 4
  store i32 %v3_c230, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c558, i1* %cpsr_z.global-to-local, align 1
  %v1_c55c = load i32, i32* @r5, align 4
  %v2_c55c = add i32 %v1_c55c, 12
  %v3_c55c = inttoptr i32 %v2_c55c to i32*
  store i32 %v0_c548, i32* %v3_c55c, align 4
  br i1 %v3_c558, label %dec_label_pc_c564, label %dec_label_pc_c548.dec_label_pc_c3f0_crit_edge

dec_label_pc_c548.dec_label_pc_c3f0_crit_edge:    ; preds = %dec_label_pc_c548
  %v1_c3f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c3f0

dec_label_pc_c564:                                ; preds = %dec_label_pc_c548, %dec_label_pc_c3dc
  %v0_c564 = call i32 @function_ef90()
  %v1_c564 = trunc i32 %v0_c564 to i8
  store i32 %v0_c564, i32* %r0.global-to-local, align 4
  store i32 %v3_c234, i32* %r1.global-to-local, align 4
  %v4_c56c = sdiv i32 %v0_c564, 256
  store i32 %v4_c56c, i32* %r3.global-to-local, align 4
  %v1_c570 = load i32, i32* @r4, align 4
  %v9_c570 = icmp eq i32 %v3_c234, %v1_c570
  store i1 %v9_c570, i1* %cpsr_z.global-to-local, align 1
  %v1_c574 = trunc i32 %v4_c56c to i8
  %v2_c574 = load i32, i32* @r5, align 4
  %v3_c574 = add i32 %v2_c574, 5
  %v4_c574 = inttoptr i32 %v3_c574 to i8*
  store i8 %v1_c574, i8* %v4_c574, align 1
  %v3_c578 = load i32, i32* @r5, align 4
  %v4_c578 = add i32 %v3_c578, 4
  %v5_c578 = inttoptr i32 %v4_c578 to i8*
  store i8 %v1_c564, i8* %v5_c578, align 1
  %v0_c57c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c57c, label %dec_label_pc_c580, label %dec_label_pc_c564.dec_label_pc_c3fc_crit_edge

dec_label_pc_c564.dec_label_pc_c3fc_crit_edge:    ; preds = %dec_label_pc_c564
  %v1_c400.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c3fc

dec_label_pc_c580:                                ; preds = %dec_label_pc_c564, %dec_label_pc_c3f0
  %v0_c580 = call i32 @function_ef90()
  %v1_c580 = trunc i32 %v0_c580 to i8
  store i32 %v0_c580, i32* %r0.global-to-local, align 4
  store i32 %v3_c238, i32* %r2.global-to-local, align 4
  %v4_c588 = sdiv i32 %v0_c580, 256
  store i32 %v4_c588, i32* %r3.global-to-local, align 4
  %v1_c58c = load i32, i32* @r4, align 4
  %v9_c58c = icmp eq i32 %v3_c238, %v1_c58c
  store i1 %v9_c58c, i1* %cpsr_z.global-to-local, align 1
  %v3_c590 = load i32, i32* @r5, align 4
  %v4_c590 = add i32 %v3_c590, 20
  %v5_c590 = inttoptr i32 %v4_c590 to i8*
  store i8 %v1_c580, i8* %v5_c590, align 1
  %v0_c594 = load i32, i32* %r3.global-to-local, align 4
  %v1_c594 = trunc i32 %v0_c594 to i8
  %v2_c594 = load i32, i32* @r6, align 4
  %v3_c594 = add i32 %v2_c594, 1
  %v4_c594 = inttoptr i32 %v3_c594 to i8*
  store i8 %v1_c594, i8* %v4_c594, align 1
  %v0_c598 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c598, label %dec_label_pc_c59c, label %dec_label_pc_c408

dec_label_pc_c59c:                                ; preds = %dec_label_pc_c580, %dec_label_pc_c3fc
  %v0_c59c = call i32 @function_ef90()
  %v1_c59c = trunc i32 %v0_c59c to i8
  store i32 %v0_c59c, i32* %r0.global-to-local, align 4
  %v4_c5a023 = udiv i32 %v0_c59c, 256
  %v1_c5a4 = trunc i32 %v4_c5a023 to i8
  %v2_c5a4 = load i32, i32* @r6, align 4
  %v3_c5a4 = add i32 %v2_c5a4, 3
  %v4_c5a4 = inttoptr i32 %v3_c5a4 to i8*
  store i8 %v1_c5a4, i8* %v4_c5a4, align 1
  store i32 %v1_c18c, i32* %r3.global-to-local, align 4
  store i1 %v2_c5ac, i1* %cpsr_z.global-to-local, align 1
  %v3_c5b0 = load i32, i32* @r6, align 4
  %v4_c5b0 = add i32 %v3_c5b0, 2
  %v5_c5b0 = inttoptr i32 %v4_c5b0 to i8*
  store i8 %v1_c59c, i8* %v5_c5b0, align 1
  %v0_c5b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5b4, label %dec_label_pc_c414, label %dec_label_pc_c5b8

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c408, %dec_label_pc_c59c
  %v0_c5b8 = load i32, i32* @r5, align 4
  %v1_c5b8 = add i32 %v0_c5b8, 28
  store i32 %v1_c5b8, i32* @r4, align 4
  store i32 %v1_c5b8, i32* %r0.global-to-local, align 4
  store i32 %v0_c214, i32* %r1.global-to-local, align 4
  %v2_c5c4 = call i32 @function_f044(i32 %v1_c5b8, i32 %v0_c214)
  store i32 %v2_c5c4, i32* %r0.global-to-local, align 4
  store i32 %v0_c214, i32* %ip.global-to-local, align 4
  %v0_c5cc = load i32, i32* @r7, align 4
  %v1_c5cc = trunc i32 %v0_c5cc to i8
  %v2_c5cc = load i32, i32* @r4, align 4
  %v4_c5cc = add i32 %v2_c5cc, %v0_c214
  %v5_c5cc = inttoptr i32 %v4_c5cc to i8*
  store i8 %v1_c5cc, i8* %v5_c5cc, align 1
  br label %dec_label_pc_c414

dec_label_pc_c5d4:                                ; preds = %dec_label_pc_c414, %dec_label_pc_c3a8
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c5d8 = call i32 @time(i32* null)
  store i32 %v2_c5d8, i32* %r0.global-to-local, align 4
  store i32 %v2_c1b0, i32* %r2.global-to-local, align 4
  %v9_c5e0 = icmp eq i32 %v2_c1b0, %v2_c5d8
  store i1 %v9_c5e0, i1* %cpsr_z.global-to-local, align 1
  %v6_c5e4 = icmp slt i32 %v2_c1b0, %v2_c5d8
  br i1 %v6_c5e4, label %dec_label_pc_c5e8, label %dec_label_pc_c3a8

dec_label_pc_c5e8:                                ; preds = %dec_label_pc_c5d4, %dec_label_pc_c068, %dec_label_pc_c5f0
  %v29_c5ec = phi i32 [ -1, %dec_label_pc_c068 ], [ %v1_c5f4, %dec_label_pc_c5f0 ], [ %v2_c5d8, %dec_label_pc_c5d4 ]
  store i32 %v3_c068, i32* %r4.global-to-local, align 4
  store i32 %v6_c068, i32* %r5.global-to-local, align 4
  store i32 %v9_c068, i32* %r6.global-to-local, align 4
  store i32 %v12_c068, i32* %r7.global-to-local, align 4
  store i32 %v18_c068, i32* %sb.global-to-local, align 4
  store i32 %v21_c068, i32* %sl.global-to-local, align 4
  ret i32 %v29_c5ec

dec_label_pc_c5f0:                                ; preds = %dec_label_pc_c1d4
  store i32 %v3_c1c4, i32* %r0.global-to-local, align 4
  %v1_c5f4 = call i32 @close(i32 %v3_c1c4)
  store i32 %v1_c5f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c5e8

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c254
  %v3_c600 = sext i8 %v5_c2a8 to i32
  %v7_c600 = sext i8 %v5_c2ac to i32
  %v3_c604 = sdiv i32 %v3_c600, 256
  store i32 %v3_c604, i32* %r1.global-to-local, align 4
  %v3_c608 = sdiv i32 %v7_c600, 256
  store i32 %v3_c608, i32* %r2.global-to-local, align 4
  store i32 %v1_c270, i32* %r3.global-to-local, align 4
  store i32 %v0_c240, i32* %r4.global-to-local, align 4
  %v3_c62018 = udiv i32 %v1_c290, 256
  store i32 %v3_c62018, i32* %r6.global-to-local, align 4
  store i32 %v1_c29c, i32* %r7.global-to-local, align 4
  %sext9 = mul i32 %v6_c130, 16777216
  %v4_c6e0 = sdiv i32 %sext9, 16777216
  br label %dec_label_pc_c628

dec_label_pc_c628:                                ; preds = %dec_label_pc_c628, %dec_label_pc_c5fc
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_c634 = call i32* @calloc(i32 1510, i32 1)
  %v4_c634 = ptrtoint i32* %v2_c634 to i32
  store i32 %v4_c634, i32* %r0.global-to-local, align 4
  store i32 %v4_c098, i32* %ip.global-to-local, align 4
  %v3_c63c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c63c, i32* %r2.global-to-local, align 4
  %v2_c640 = load i32, i32* %r4.global-to-local, align 4
  %v5_c640 = mul i32 %v2_c640, 4
  %v6_c640 = add i32 %v5_c640, %v4_c098
  %v7_c640 = inttoptr i32 %v6_c640 to i32*
  store i32 %v4_c634, i32* %v7_c640, align 4
  %v0_c644 = load i32, i32* %ip.global-to-local, align 4
  %v1_c644 = load i32, i32* %r2.global-to-local, align 4
  %v4_c644 = mul i32 %v1_c644, 4
  %v5_c644 = add i32 %v4_c644, %v0_c644
  %v6_c644 = inttoptr i32 %v5_c644 to i32*
  %v7_c644 = load i32, i32* %v6_c644, align 4
  store i32 %v7_c644, i32* %r1.global-to-local, align 4
  %v1_c648 = inttoptr i32 %v7_c644 to i8*
  %v2_c648 = load i8, i8* %v1_c648, align 1
  %tmp66 = urem i8 %v2_c648, 16
  %v1_c64c = zext i8 %tmp66 to i32
  %v1_c650 = or i32 %v1_c64c, 64
  store i32 %v1_c650, i32* %r3.global-to-local, align 4
  %v1_c654 = trunc i32 %v1_c650 to i8
  store i8 %v1_c654, i8* %v1_c648, align 1
  %v0_c658 = load i32, i32* %r1.global-to-local, align 4
  %v1_c658 = inttoptr i32 %v0_c658 to i8*
  %v2_c658 = load i8, i8* %v1_c658, align 1
  %v1_c65c = and i8 %v2_c658, -16
  %v1_c660 = or i8 %v1_c65c, 5
  store i32 17, i32* %r3.global-to-local, align 4
  store i8 %v1_c660, i8* %v1_c658, align 1
  %v0_c66c = load i32, i32* %r3.global-to-local, align 4
  %v1_c66c = trunc i32 %v0_c66c to i8
  %v2_c66c = load i32, i32* %r1.global-to-local, align 4
  %v3_c66c = add i32 %v2_c66c, 9
  %v4_c66c = inttoptr i32 %v3_c66c to i8*
  store i8 %v1_c66c, i8* %v4_c66c, align 1
  %v2_c674 = load i32, i32* %r1.global-to-local, align 4
  %v3_c674 = add i32 %v2_c674, 1
  %v4_c674 = inttoptr i32 %v3_c674 to i8*
  store i8 %v5_c0d0, i8* %v4_c674, align 1
  %v2_c67c = load i32, i32* %r1.global-to-local, align 4
  %v3_c67c = add i32 %v2_c67c, 8
  %v4_c67c = inttoptr i32 %v3_c67c to i8*
  store i8 %v5_c108, i8* %v4_c67c, align 1
  %v3_c680 = load i32, i32* %stack_var_-40, align 4
  %v1_c688 = add i32 %v3_c680, 1
  store i32 %v1_c688, i32* %r4.global-to-local, align 4
  %v5_c690 = mul i32 %v3_c680, 24
  store i32 %v5_c690, i32* %r3.global-to-local, align 4
  %v9_c694 = icmp eq i32 %v1_c688, %v1_c06c
  store i1 %v9_c694, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c600, i32* %r2.global-to-local, align 4
  store i32 %v3_c604, i32* %ip.global-to-local, align 4
  %v0_c6a0 = load i32, i32* @fp, align 4
  %v1_c6a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_c6a0 = add i32 %v1_c6a0, 12
  %v3_c6a0 = inttoptr i32 %v2_c6a0 to i32*
  store i32 %v0_c6a0, i32* %v3_c6a0, align 4
  %v0_c6a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6a4 = trunc i32 %v0_c6a4 to i8
  %v2_c6a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6a4 = add i32 %v2_c6a4, 2
  %v4_c6a4 = inttoptr i32 %v3_c6a4 to i8*
  store i8 %v1_c6a4, i8* %v4_c6a4, align 1
  %v0_c6a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_c6a8 = trunc i32 %v0_c6a8 to i8
  %v2_c6a8 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6a8 = add i32 %v2_c6a8, 3
  %v4_c6a8 = inttoptr i32 %v3_c6a8 to i8*
  store i8 %v1_c6a8, i8* %v4_c6a8, align 1
  store i32 %v7_c600, i32* %r2.global-to-local, align 4
  store i32 %v3_c608, i32* %ip.global-to-local, align 4
  %v0_c6b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6b4 = load i32, i32* @r8, align 4
  %v2_c6b4 = add i32 %v1_c6b4, %v0_c6b4
  store i32 %v2_c6b4, i32* %r3.global-to-local, align 4
  %v1_c6b8 = add i32 %v2_c6b4, 16
  %v2_c6b8 = inttoptr i32 %v1_c6b8 to i32*
  %v3_c6b8 = load i32, i32* %v2_c6b8, align 4
  store i32 %v3_c6b8, i32* %r0.global-to-local, align 4
  %v2_c6bc = load i32, i32* %r1.global-to-local, align 4
  %v3_c6bc = add i32 %v2_c6bc, 4
  %v4_c6bc = inttoptr i32 %v3_c6bc to i8*
  store i8 %v5_c2ac, i8* %v4_c6bc, align 1
  %v0_c6c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_c6c0 = trunc i32 %v0_c6c0 to i8
  %v2_c6c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6c0 = add i32 %v2_c6c0, 5
  %v4_c6c0 = inttoptr i32 %v3_c6c0 to i8*
  store i8 %v1_c6c0, i8* %v4_c6c0, align 1
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_c6cc = load i32, i32* %r1.global-to-local, align 4
  %v1_c6cc = add i32 %v0_c6cc, 20
  store i32 %v1_c6cc, i32* %r3.global-to-local, align 4
  %v3_c6d0 = add i32 %v0_c6cc, 6
  %v4_c6d0 = inttoptr i32 %v3_c6d0 to i8*
  store i8 64, i8* %v4_c6d0, align 1
  %v0_c6d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_c6d4 = trunc i32 %v0_c6d4 to i8
  %v2_c6d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6d4 = add i32 %v2_c6d4, 7
  %v4_c6d4 = inttoptr i32 %v3_c6d4 to i8*
  store i8 %v1_c6d4, i8* %v4_c6d4, align 1
  %v0_c6d8 = load i32, i32* %sb.global-to-local, align 4
  %v1_c6d8 = trunc i32 %v0_c6d8 to i8
  %v2_c6d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6d8 = add i32 %v2_c6d8, 20
  %v4_c6d8 = inttoptr i32 %v3_c6d8 to i8*
  store i8 %v1_c6d8, i8* %v4_c6d8, align 1
  %v0_c6dc = load i32, i32* %r0.global-to-local, align 4
  %v1_c6dc = load i32, i32* %r1.global-to-local, align 4
  %v2_c6dc = add i32 %v1_c6dc, 16
  %v3_c6dc = inttoptr i32 %v2_c6dc to i32*
  store i32 %v0_c6dc, i32* %v3_c6dc, align 4
  store i32 %v4_c6e0, i32* %r1.global-to-local, align 4
  %v0_c6e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_c6e4 = trunc i32 %v0_c6e4 to i8
  %v2_c6e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_c6e4 = add i32 %v2_c6e4, 5
  %v4_c6e4 = inttoptr i32 %v3_c6e4 to i8*
  store i8 %v1_c6e4, i8* %v4_c6e4, align 1
  %v0_c6e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6e8 = trunc i32 %v0_c6e8 to i8
  %v2_c6e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_c6e8 = add i32 %v2_c6e8, 1
  %v4_c6e8 = inttoptr i32 %v3_c6e8 to i8*
  store i8 %v1_c6e8, i8* %v4_c6e8, align 1
  %v0_c6ec = load i32, i32* %r5.global-to-local, align 4
  %v1_c6ec = trunc i32 %v0_c6ec to i8
  %v2_c6ec = load i32, i32* %r3.global-to-local, align 4
  %v3_c6ec = add i32 %v2_c6ec, 2
  %v4_c6ec = inttoptr i32 %v3_c6ec to i8*
  store i8 %v1_c6ec, i8* %v4_c6ec, align 1
  %v0_c6f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_c6f0 = trunc i32 %v0_c6f0 to i8
  %v2_c6f0 = load i32, i32* %r3.global-to-local, align 4
  %v3_c6f0 = add i32 %v2_c6f0, 3
  %v4_c6f0 = inttoptr i32 %v3_c6f0 to i8*
  store i8 %v1_c6f0, i8* %v4_c6f0, align 1
  %v0_c6f4 = load i32, i32* %sl.global-to-local, align 4
  %v1_c6f4 = trunc i32 %v0_c6f4 to i8
  %v2_c6f4 = load i32, i32* %r3.global-to-local, align 4
  %v3_c6f4 = add i32 %v2_c6f4, 4
  %v4_c6f4 = inttoptr i32 %v3_c6f4 to i8*
  store i8 %v1_c6f4, i8* %v4_c6f4, align 1
  %v0_c6f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c6f8, i32* %stack_var_-40, align 4
  %v5_c6fc = icmp slt i32 %v1_c688, %v1_c06c
  br i1 %v5_c6fc, label %dec_label_pc_c628, label %dec_label_pc_c3a8.preheader

; uselistorder directives
  uselistorder i32 %v1_c688, { 1, 0, 2 }
  uselistorder i32 %v3_c608, { 1, 0 }
  uselistorder i32 %v3_c604, { 1, 0 }
  uselistorder i32 %v7_c600, { 1, 0 }
  uselistorder i32 %v3_c600, { 1, 0 }
  uselistorder i32 %v1_c5f4, { 1, 0 }
  uselistorder i32 %v0_c59c, { 0, 2, 1 }
  uselistorder i32 %v0_c580, { 0, 2, 1 }
  uselistorder i32 %v4_c56c, { 1, 0 }
  uselistorder i32 %v0_c564, { 0, 2, 1 }
  uselistorder i1 %v3_c53c, { 1, 0 }
  uselistorder i32 %v2_c538, { 1, 0 }
  uselistorder i32 %v8_c51c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_c508, { 1, 0 }
  uselistorder i32 %v3_c4e4, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_c4b0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_c454, { 0, 2, 1 }
  uselistorder i32 %v0_c43c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_c428, { 1, 0 }
  uselistorder i32 %v2_c424, { 0, 2, 1 }
  uselistorder i1 %v2_c5ac, { 2, 1, 0 }
  uselistorder i1 %v3_c558, { 1, 0, 2, 3 }
  uselistorder i8 %v5_c2d0, { 1, 0 }
  uselistorder i32 %v3_c2c020, { 2, 0, 1 }
  uselistorder i8 %v5_c2a8, { 1, 0 }
  uselistorder i32 %v1_c29c, { 2, 3, 0, 1 }
  uselistorder i32 %v3_c288, { 1, 0 }
  uselistorder i32 %v3_c284, { 1, 0 }
  uselistorder i32 %v1_c270, { 1, 2, 0 }
  uselistorder i32 %v1_c26c, { 1, 0 }
  uselistorder i32 %v1_c25c, { 2, 3, 1, 0 }
  uselistorder i32 %v1_c258, { 2, 3, 1, 0 }
  uselistorder i1 %v2_c23c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_c230, { 0, 1, 3, 2 }
  uselistorder i32 %v0_c224, { 1, 0, 3, 2 }
  uselistorder i32 %v0_c214, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_c208, { 3, 1, 2, 0 }
  uselistorder i32 %v3_c1c4, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v2_c1b0, { 2, 1, 0 }
  uselistorder i32 %v1_c18c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_c130, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %v1_c118, { 2, 1, 0 }
  uselistorder i32 %v6_c0ec, { 1, 2, 0 }
  uselistorder i32 %v7_c0d4, { 5, 0, 1, 3, 2, 4, 6 }
  uselistorder i32 %v6_c0b0, { 1, 2, 0 }
  uselistorder i32 %v4_c098, { 0, 3, 1, 5, 2, 4, 6 }
  uselistorder i32 %v1_c06c, { 9, 10, 2, 3, 4, 1, 5, 8, 0, 6, 7 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 15, 13, 14 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 47, 49, 50, 52, 51, 54, 53, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 6, 5, 8, 7, 10, 9, 11, 12, 13, 15, 14, 17, 16, 18, 20, 19, 24, 21, 22, 23, 27, 25, 26, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder label %dec_label_pc_c5e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c5b8, { 1, 0 }
  uselistorder label %dec_label_pc_c414, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c3a8, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
}

define i32 @function_c708(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_c708:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c708 = load i32, i32* @r4, align 4
  %v6_c708 = load i32, i32* @r5, align 4
  %v9_c708 = load i32, i32* @r6, align 4
  %v12_c708 = load i32, i32* @r7, align 4
  %v15_c708 = load i32, i32* @r8, align 4
  %v1_c70c = urem i32 %arg2, 256
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  %v1_c728 = urem i32 %arg4, 256
  store i32 %v1_c728, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_c738 = call i32* @calloc(i32 %v1_c70c, i32 4)
  %v3_c738 = ptrtoint i32* %v2_c738 to i32
  %v0_c73c = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_c744 = load i32, i32* @r7, align 4
  store i32 %v0_c744, i32* %r3.global-to-local, align 4
  store i32 %v3_c738, i32* %fp.global-to-local, align 4
  %v0_c74c = load i32, i32* @r4, align 4
  %v5_c750 = inttoptr i32 %v0_c73c to i32*
  %v6_c750 = call i32 @function_8fc8(i32 %v0_c74c, i32* %v5_c750, i32 2, i32 %v0_c744, i32 ptrtoint (i32* @0 to i32))
  %v1_c75c = urem i32 %v6_c750, 256
  store i32 %v1_c75c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c768 = load i32, i32* @r4, align 4
  %v0_c76c = load i32, i32* @r5, align 4
  %v5_c770 = trunc i32 %v6_c750 to i8
  %v6_c774 = inttoptr i32 %v0_c76c to i32*
  %v7_c774 = call i32 @function_8fc8(i32 %v0_c768, i32* %v6_c774, i32 3, i32 65535, i32 %v6_c750)
  %v0_c778 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_c784 = load i32, i32* @r4, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_c78c = inttoptr i32 %v0_c778 to i32*
  %v6_c78c = call i32 @function_8fc8(i32 %v0_c784, i32* %v5_c78c, i32 4, i32 64, i32 %v7_c774)
  %v1_c794 = urem i32 %v6_c78c, 256
  store i32 %v1_c794, i32* %ip.global-to-local, align 4
  %v0_c798 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_c7a0 = load i32, i32* @r7, align 4
  store i32 %v0_c7a0, i32* %r3.global-to-local, align 4
  %v0_c7a4 = load i32, i32* @r4, align 4
  %sext9 = mul i32 %v6_c78c, 16777216
  %v5_c7ac = sdiv i32 %sext9, 16777216
  %v6_c7ac = inttoptr i32 %v0_c798 to i32*
  %v7_c7ac = call i32 @function_8fc8(i32 %v0_c7a4, i32* %v6_c7ac, i32 5, i32 %v0_c7a0, i32 %v5_c7ac)
  %v1_c7b8 = urem i32 %v7_c7ac, 256
  store i32 %v1_c7b8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c7c4 = load i32, i32* @r4, align 4
  %v0_c7c8 = load i32, i32* @r5, align 4
  %v5_c7d0 = inttoptr i32 %v0_c7c8 to i32*
  %v6_c7d0 = call i32 @function_8fc8(i32 %v0_c7c4, i32* %v5_c7d0, i32 6, i32 65535, i32 %v1_c7b8)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c7e0 = load i32, i32* @r5, align 4
  store i32 %v6_c7d0, i32* @r8, align 4
  %v0_c7e8 = load i32, i32* @r4, align 4
  %v5_c7ec = inttoptr i32 %v0_c7e0 to i32*
  %v6_c7ec = call i32 @function_8fc8(i32 %v0_c7e8, i32* %v5_c7ec, i32 7, i32 27015, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_c7ec, i32* @r4, align 4
  %v0_c7f4 = load i32, i32* @r7, align 4
  store i32 %v0_c7f4, i32* %stack_var_-44, align 4
  %v1_c7fc = inttoptr i32 %v0_c7f4 to i32*
  %v2_c7fc = call i32 @time(i32* %v1_c7fc)
  %v1_c800 = load i32, i32* @r6, align 4
  %v2_c800 = add i32 %v1_c800, %v2_c7fc
  %v1_c80c = call i32 @function_11e4c(i32 29)
  %v3_c818 = call i32 @function_11d68(i32 29, i32* nonnull %stack_var_-44)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_c82c = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_c830 = icmp eq i32 %v3_c82c, -1
  store i1 %v2_c830, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c82c, i32* %sb.global-to-local, align 4
  br i1 %v2_c830, label %dec_label_pc_cbec, label %dec_label_pc_c83c

dec_label_pc_c83c:                                ; preds = %dec_label_pc_c708
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c844 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c844, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_c84c = load i32, i32* @r7, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v6_c858 = call i32 @setsockopt(i32 %v0_c84c, i32 3, i32 %v6_c844, i32* nonnull %stack_var_-40, i32 ptrtoint (i32* @0 to i32))
  %v2_c85c = icmp eq i32 %v6_c858, -1
  store i1 %v2_c85c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c85c, label %dec_label_pc_cbf4, label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c83c
  %v0_c868 = load i32, i32* @r4, align 4
  %v3_c868 = mul i32 %v0_c868, 65536
  store i32 %v3_c868, i32* %lr.global-to-local, align 4
  %v3_c874 = urem i32 %v7_c774, 65536
  %v0_c878 = load i32, i32* @r8, align 4
  %v3_c878 = mul i32 %v0_c878, 65536
  store i32 %v3_c878, i32* %ip.global-to-local, align 4
  %v2_c87c = icmp eq i32 %v1_c70c, 0
  store i1 %v2_c87c, i1* %cpsr_z.global-to-local, align 1
  %v3_c884 = urem i32 %v0_c878, 65536
  store i32 %v3_c884, i32* %r4.global-to-local, align 4
  %v3_c888 = urem i32 %v0_c868, 65536
  store i32 %v3_c888, i32* %r3.global-to-local, align 4
  %v0_c88c = load i32, i32* @r7, align 4
  store i32 %v0_c88c, i32* %stack_var_-40, align 4
  br i1 %v2_c87c, label %dec_label_pc_cbd8.critedge, label %dec_label_pc_c89c

dec_label_pc_c89c:                                ; preds = %dec_label_pc_c864
  %v1_c89c = urem i32 %v0_c878, 256
  %v1_c8a4 = urem i32 %v0_c868, 256
  %tmp42 = udiv i32 %v7_c774, 256
  %v3_c8a8 = urem i32 %tmp42, 256
  %v3_c8b0 = mul nuw nsw i32 %v1_c8a4, 256
  %v1_c8ac = mul i32 %v7_c774, 256
  %v4_c8b4 = and i32 %v1_c8ac, 65280
  %v5_c8b4 = or i32 %v4_c8b4, %v3_c8a8
  store i32 %v5_c8b4, i32* %r8.global-to-local, align 4
  %tmp43 = udiv i32 %v0_c868, 256
  %v4_c8bc = urem i32 %tmp43, 256
  %v5_c8bc = or i32 %v4_c8bc, %v3_c8b0
  store i32 %v5_c8bc, i32* %r5.global-to-local, align 4
  %v3_c8c0 = mul nuw nsw i32 %v1_c89c, 256
  store i32 %v3_c8c0, i32* %r2.global-to-local, align 4
  %v5_c8c4 = trunc i32 %v7_c774 to i8
  store i32 %v1_c8a4, i32* %r3.global-to-local, align 4
  %tmp44 = udiv i32 %v0_c878, 256
  %v4_c8cc = urem i32 %tmp44, 256
  %v5_c8cc = or i32 %v4_c8cc, %v3_c8c0
  store i32 %v5_c8cc, i32* %r6.global-to-local, align 4
  store i32 %v0_c88c, i32* %r4.global-to-local, align 4
  store i32 %v1_c89c, i32* %r7.global-to-local, align 4
  %v4_c948 = sext i8 %v5_c8c4 to i32
  %sext = mul i32 %v0_c868, 16777216
  %v4_c9c0 = sdiv i32 %sext, 16777216
  %v1_c940 = trunc i32 %v5_c7ac to i8
  br label %dec_label_pc_c8dc

dec_label_pc_c8dc:                                ; preds = %bb48, %dec_label_pc_c89c
  %v2_c8e4 = call i32* @calloc(i32 128, i32 1)
  %v4_c8e4 = ptrtoint i32* %v2_c8e4 to i32
  %v3_c8e8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c8e8, i32* %r3.global-to-local, align 4
  %v1_c8ec = load i32, i32* %fp.global-to-local, align 4
  %v2_c8ec = load i32, i32* %r4.global-to-local, align 4
  %v5_c8ec = mul i32 %v2_c8ec, 4
  %v6_c8ec = add i32 %v5_c8ec, %v1_c8ec
  %v7_c8ec = inttoptr i32 %v6_c8ec to i32*
  store i32 %v4_c8e4, i32* %v7_c8ec, align 4
  %v0_c8f0 = load i32, i32* %fp.global-to-local, align 4
  %v1_c8f0 = load i32, i32* %r3.global-to-local, align 4
  %v4_c8f0 = mul i32 %v1_c8f0, 4
  %v5_c8f0 = add i32 %v4_c8f0, %v0_c8f0
  %v6_c8f0 = inttoptr i32 %v5_c8f0 to i32*
  %v7_c8f0 = load i32, i32* %v6_c8f0, align 4
  store i32 %v7_c8f0, i32* %lr.global-to-local, align 4
  %v1_c8f4 = inttoptr i32 %v7_c8f0 to i8*
  %v2_c8f4 = load i8, i8* %v1_c8f4, align 1
  %tmp = urem i8 %v2_c8f4, 16
  %v1_c8f8 = zext i8 %tmp to i32
  %v1_c8fc = or i32 %v1_c8f8, 64
  store i32 %v1_c8fc, i32* %r3.global-to-local, align 4
  %v1_c904 = trunc i32 %v1_c8fc to i8
  store i8 %v1_c904, i8* %v1_c8f4, align 1
  %v0_c908 = load i32, i32* %lr.global-to-local, align 4
  %v1_c908 = inttoptr i32 %v0_c908 to i8*
  %v2_c908 = load i8, i8* %v1_c908, align 1
  %v1_c90c = and i8 %v2_c908, -16
  %v1_c910 = or i8 %v1_c90c, 5
  store i8 %v1_c910, i8* %v1_c908, align 1
  %v2_c91c = load i32, i32* %lr.global-to-local, align 4
  %v3_c91c = add i32 %v2_c91c, 1
  %v4_c91c = inttoptr i32 %v3_c91c to i8*
  store i8 %v5_c770, i8* %v4_c91c, align 1
  %v3_c920 = load i32, i32* %stack_var_-44, align 4
  %v1_c924 = add i32 %v3_c920, 32
  %tmp45 = mul i32 %v1_c924, 256
  store i32 %v5_c7ac, i32* %r4.global-to-local, align 4
  %v1_c934 = and i32 %tmp45, 65280
  %tmp46 = udiv i32 %v1_c924, 256
  %v4_c938 = urem i32 %tmp46, 256
  %v5_c938 = or i32 %v4_c938, %v1_c934
  store i32 %v5_c938, i32* %r2.global-to-local, align 4
  store i32 %v1_c7b8, i32* %r3.global-to-local, align 4
  %v2_c940 = load i32, i32* %lr.global-to-local, align 4
  %v3_c940 = add i32 %v2_c940, 8
  %v4_c940 = inttoptr i32 %v3_c940 to i8*
  store i8 %v1_c940, i8* %v4_c940, align 1
  %v0_c944 = load i32, i32* %r3.global-to-local, align 4
  %v2_c944 = icmp eq i32 %v0_c944, 0
  store i1 %v2_c944, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_c948, i32* %r3.global-to-local, align 4
  %v2_c94c = load i32, i32* %lr.global-to-local, align 4
  %v3_c94c = add i32 %v2_c94c, 5
  %v4_c94c = inttoptr i32 %v3_c94c to i8*
  store i8 %v5_c8c4, i8* %v4_c94c, align 1
  %v0_c950 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c950, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c8dc
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c954 = load i32, i32* %lr.global-to-local, align 4
  %v4_c954 = add i32 %v3_c954, 6
  %v5_c954 = inttoptr i32 %v4_c954 to i8*
  store i8 64, i8* %v5_c954, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c8dc, %bb
  %v2_c95c = load i32, i32* %lr.global-to-local, align 4
  %v3_c95c = add i32 %v2_c95c, 9
  %v4_c95c = inttoptr i32 %v3_c95c to i8*
  store i8 17, i8* %v4_c95c, align 1
  %v0_c960 = load i32, i32* %r2.global-to-local, align 4
  %v3_c960 = sdiv i32 %v0_c960, 256
  store i32 %v3_c960, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ba18.101 to i32), i32* %r3.global-to-local, align 4
  %v1_c968 = trunc i32 %v0_c960 to i8
  %v2_c968 = load i32, i32* %lr.global-to-local, align 4
  %v3_c968 = add i32 %v2_c968, 2
  %v4_c968 = inttoptr i32 %v3_c968 to i8*
  store i8 %v1_c968, i8* %v4_c968, align 1
  %v0_c96c = load i32, i32* %ip.global-to-local, align 4
  %v1_c96c = trunc i32 %v0_c96c to i8
  %v2_c96c = load i32, i32* %lr.global-to-local, align 4
  %v3_c96c = add i32 %v2_c96c, 3
  %v4_c96c = inttoptr i32 %v3_c96c to i8*
  store i8 %v1_c96c, i8* %v4_c96c, align 1
  %v0_c970 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c970, label %.thread7, label %bb47

.thread7:                                         ; preds = %.thread
  %v3_c9748 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c9748, i32* %ip.global-to-local, align 4
  br label %bb48

bb47:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c974 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c974, i32* %ip.global-to-local, align 4
  %v3_c978 = load i32, i32* %lr.global-to-local, align 4
  %v4_c978 = add i32 %v3_c978, 7
  %v5_c978 = inttoptr i32 %v4_c978 to i8*
  store i8 0, i8* %v5_c978, align 1
  %v0_c980.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %.thread7, %bb47
  %v0_c980 = phi i32 [ %v3_c9748, %.thread7 ], [ %v0_c980.pre, %bb47 ]
  %v2_c97c = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_c97c, i32* %r2.global-to-local, align 4
  %v3_c980 = mul i32 %v0_c980, 32
  store i32 %v3_c980, i32* %r3.global-to-local, align 4
  %v1_c984 = load i32, i32* %lr.global-to-local, align 4
  %v2_c984 = add i32 %v1_c984, 12
  %v3_c984 = inttoptr i32 %v2_c984 to i32*
  store i32 %v2_c97c, i32* %v3_c984, align 4
  %v0_c988 = load i32, i32* %r3.global-to-local, align 4
  %v1_c988 = load i32, i32* %ip.global-to-local, align 4
  %tmp53 = mul i32 %v1_c988, -8
  %v5_c988 = add i32 %v0_c988, %tmp53
  %v1_c98c = load i32, i32* @sl, align 4
  %v2_c98c = add i32 %v5_c988, %v1_c98c
  store i32 %v2_c98c, i32* %r3.global-to-local, align 4
  %v1_c990 = add i32 %v2_c98c, 16
  %v2_c990 = inttoptr i32 %v1_c990 to i32*
  %v3_c990 = load i32, i32* %v2_c990, align 4
  %v1_c994 = load i32, i32* %lr.global-to-local, align 4
  %v2_c994 = add i32 %v1_c994, 16
  %v3_c994 = inttoptr i32 %v2_c994 to i32*
  store i32 %v3_c990, i32* %v3_c994, align 4
  %v3_c998 = load i32, i32* %stack_var_-44, align 4
  %v1_c99c = add i32 %v3_c998, 12
  %tmp49 = mul i32 %v1_c99c, 256
  %v1_c9a8 = and i32 %tmp49, 65280
  %tmp50 = udiv i32 %v1_c99c, 256
  %v4_c9ac = urem i32 %tmp50, 256
  %v5_c9ac = or i32 %v4_c9ac, %v1_c9a8
  store i32 %v5_c9ac, i32* %ip.global-to-local, align 4
  %v0_c9b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_c9b0 = add i32 %v0_c9b0, 20
  store i32 %v1_c9b0, i32* %r4.global-to-local, align 4
  %v3_c9b46 = udiv i32 %v1_c9a8, 256
  store i32 %v3_c9b46, i32* %r3.global-to-local, align 4
  %v0_c9b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_c9b8 = trunc i32 %v0_c9b8 to i8
  %v3_c9b8 = add i32 %v0_c9b0, 4
  %v4_c9b8 = inttoptr i32 %v3_c9b8 to i8*
  store i8 %v1_c9b8, i8* %v4_c9b8, align 1
  %v0_c9bc = load i32, i32* %r3.global-to-local, align 4
  %v1_c9bc = trunc i32 %v0_c9bc to i8
  %v2_c9bc = load i32, i32* %r4.global-to-local, align 4
  %v3_c9bc = add i32 %v2_c9bc, 5
  %v4_c9bc = inttoptr i32 %v3_c9bc to i8*
  store i8 %v1_c9bc, i8* %v4_c9bc, align 1
  store i32 %v4_c9c0, i32* %r3.global-to-local, align 4
  %v1_c9c8 = load i32, i32* %lr.global-to-local, align 4
  %v2_c9c8 = add i32 %v1_c9c8, 28
  %v3_c9c8 = inttoptr i32 %v2_c9c8 to i32*
  store i32 -1, i32* %v3_c9c8, align 4
  %v0_c9cc = load i32, i32* %r6.global-to-local, align 4
  %v1_c9cc = trunc i32 %v0_c9cc to i8
  %v2_c9cc = load i32, i32* %lr.global-to-local, align 4
  %v3_c9cc = add i32 %v2_c9cc, 20
  %v4_c9cc = inttoptr i32 %v3_c9cc to i8*
  store i8 %v1_c9cc, i8* %v4_c9cc, align 1
  %v0_c9d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_c9d0 = trunc i32 %v0_c9d0 to i8
  %v2_c9d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c9d0 = add i32 %v2_c9d0, 2
  %v4_c9d0 = inttoptr i32 %v3_c9d0 to i8*
  store i8 %v1_c9d0, i8* %v4_c9d0, align 1
  %v0_c9d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_c9d4 = trunc i32 %v0_c9d4 to i8
  %v2_c9d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c9d4 = add i32 %v2_c9d4, 1
  %v4_c9d4 = inttoptr i32 %v3_c9d4 to i8*
  store i8 %v1_c9d4, i8* %v4_c9d4, align 1
  %v0_c9d8 = load i32, i32* %lr.global-to-local, align 4
  %v1_c9d8 = add i32 %v0_c9d8, 32
  %v0_c9dc = load i32, i32* %r3.global-to-local, align 4
  %v1_c9dc = trunc i32 %v0_c9dc to i8
  %v2_c9dc = load i32, i32* %r4.global-to-local, align 4
  %v3_c9dc = add i32 %v2_c9dc, 3
  %v4_c9dc = inttoptr i32 %v3_c9dc to i8*
  store i8 %v1_c9dc, i8* %v4_c9dc, align 1
  %v0_c9e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_c9e0 = trunc i32 %v0_c9e0 to i8
  %v2_c9e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_c9e0 = add i32 %v2_c9e0, 4
  %v4_c9e0 = inttoptr i32 %v3_c9e0 to i8*
  store i8 %v1_c9e0, i8* %v4_c9e0, align 1
  %v3_c9e4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c9e4, i32* %r2.global-to-local, align 4
  %v3_c9e8 = call i32 @function_127a8(i32 %v1_c9d8, i32 %v3_c818, i32 %v3_c9e4)
  %v3_c9ec = load i32, i32* %stack_var_-40, align 4
  %v1_c9f0 = add i32 %v3_c9ec, 1
  store i32 %v1_c9f0, i32* %r4.global-to-local, align 4
  store i32 %v1_c70c, i32* %r3.global-to-local, align 4
  %v9_c9f8 = icmp eq i32 %v1_c9f0, %v1_c70c
  store i1 %v9_c9f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c9f0, i32* %stack_var_-40, align 4
  %v5_ca00 = icmp slt i32 %v1_c9f0, %v1_c70c
  br i1 %v5_ca00, label %dec_label_pc_c8dc, label %dec_label_pc_ca04

dec_label_pc_ca04:                                ; preds = %bb48, %dec_label_pc_cbd8
  store i32 %v1_c70c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_c87c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_c87c, label %dec_label_pc_cbd8, label %dec_label_pc_ca18

dec_label_pc_ca18:                                ; preds = %dec_label_pc_ca04
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_ca28 = icmp eq i32 %v3_c874, 65535
  br label %dec_label_pc_cafc

dec_label_pc_ca24:                                ; preds = %dec_label_pc_cafc
  store i32 %v3_c874, i32* %r3.global-to-local, align 4
  store i1 %v3_ca28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ca28, label %dec_label_pc_cb8c, label %dec_label_pc_ca30

dec_label_pc_ca30:                                ; preds = %dec_label_pc_cb24, %dec_label_pc_ca24
  %v1_ca34 = phi i32 [ %v1_cb84, %dec_label_pc_cb24 ], [ 65535, %dec_label_pc_ca24 ]
  %v9_ca34 = icmp eq i32 %v3_c884, %v1_ca34
  store i1 %v9_ca34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ca34, label %dec_label_pc_cba8, label %dec_label_pc_ca3c

dec_label_pc_ca3c:                                ; preds = %dec_label_pc_cb8c.dec_label_pc_ca3c_crit_edge, %dec_label_pc_ca30
  %v1_ca40 = phi i32 [ %v1_ca40.pre, %dec_label_pc_cb8c.dec_label_pc_ca3c_crit_edge ], [ %v1_ca34, %dec_label_pc_ca30 ]
  store i32 %v3_c888, i32* %r3.global-to-local, align 4
  %v9_ca40 = icmp eq i32 %v3_c888, %v1_ca40
  store i1 %v9_ca40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ca40, label %dec_label_pc_cbc4, label %dec_label_pc_ca48

dec_label_pc_ca48:                                ; preds = %dec_label_pc_cba8, %dec_label_pc_ca3c, %dec_label_pc_cbc4
  %v0_ca4c = load i32, i32* %r8.global-to-local, align 4
  %v1_ca4c = trunc i32 %v0_ca4c to i8
  %v2_ca4c = load i32, i32* @r5, align 4
  %v3_ca4c = add i32 %v2_ca4c, 10
  %v4_ca4c = inttoptr i32 %v3_ca4c to i8*
  store i8 %v1_ca4c, i8* %v4_ca4c, align 1
  %v0_ca50 = load i32, i32* %r8.global-to-local, align 4
  %v1_ca50 = trunc i32 %v0_ca50 to i8
  %v2_ca50 = load i32, i32* @r5, align 4
  %v3_ca50 = add i32 %v2_ca50, 11
  %v4_ca50 = inttoptr i32 %v3_ca50 to i8*
  store i8 %v1_ca50, i8* %v4_ca50, align 1
  %v0_ca54 = load i32, i32* @r5, align 4
  store i32 %v0_ca54, i32* @r0, align 4
  %v2_ca58 = call i32 @function_d3d4(i32 %v0_ca54, i32 20)
  %v3_ca58 = trunc i32 %v2_ca58 to i8
  %v4_ca5c = sdiv i32 %v2_ca58, 256
  store i32 %v4_ca5c, i32* %r3.global-to-local, align 4
  %v1_ca60 = trunc i32 %v4_ca5c to i8
  %v2_ca60 = load i32, i32* @r5, align 4
  %v3_ca60 = add i32 %v2_ca60, 11
  %v4_ca60 = inttoptr i32 %v3_ca60 to i8*
  store i8 %v1_ca60, i8* %v4_ca60, align 1
  %v3_ca64 = load i32, i32* @r5, align 4
  %v4_ca64 = add i32 %v3_ca64, 10
  %v5_ca64 = inttoptr i32 %v4_ca64 to i8*
  store i8 %v3_ca58, i8* %v5_ca64, align 1
  %v0_ca68 = load i32, i32* %r8.global-to-local, align 4
  %v1_ca68 = trunc i32 %v0_ca68 to i8
  %v2_ca68 = load i32, i32* @r6, align 4
  %v3_ca68 = add i32 %v2_ca68, 6
  %v4_ca68 = inttoptr i32 %v3_ca68 to i8*
  store i8 %v1_ca68, i8* %v4_ca68, align 1
  %v0_ca6c = load i32, i32* %r8.global-to-local, align 4
  %v1_ca6c = trunc i32 %v0_ca6c to i8
  %v2_ca6c = load i32, i32* @r6, align 4
  %v3_ca6c = add i32 %v2_ca6c, 7
  %v4_ca6c = inttoptr i32 %v3_ca6c to i8*
  store i8 %v1_ca6c, i8* %v4_ca6c, align 1
  %v0_ca70 = load i32, i32* @r5, align 4
  %v1_ca70 = add i32 %v0_ca70, 24
  %v2_ca70 = inttoptr i32 %v1_ca70 to i8*
  %v3_ca70 = load i8, i8* %v2_ca70, align 1
  %v4_ca70 = zext i8 %v3_ca70 to i32
  store i32 %v4_ca70, i32* %r3.global-to-local, align 4
  %v1_ca74 = add i32 %v0_ca70, 25
  %v2_ca74 = inttoptr i32 %v1_ca74 to i8*
  %v3_ca74 = load i8, i8* %v2_ca74, align 1
  %v4_ca74 = zext i8 %v3_ca74 to i32
  %v4_ca78 = mul nuw nsw i32 %v4_ca74, 256
  %v5_ca78 = or i32 %v4_ca78, %v4_ca70
  store i32 %v5_ca78, i32* %r2.global-to-local, align 4
  %v3_ca7c = load i32, i32* %stack_var_-44, align 4
  %v0_ca80 = load i32, i32* @r6, align 4
  store i32 %v0_ca80, i32* @r1, align 4
  %v1_ca84 = add i32 %v3_ca7c, 12
  store i32 %v1_ca84, i32* %r3.global-to-local, align 4
  %v4_ca8c = call i32 @function_d430(i32 %v0_ca70, i32 %v0_ca80, i32 %v5_ca78, i32 %v1_ca84)
  %v5_ca8c = trunc i32 %v4_ca8c to i8
  %v4_ca9015 = udiv i32 %v4_ca8c, 256
  %v1_ca94 = trunc i32 %v4_ca9015 to i8
  %v2_ca94 = load i32, i32* @r6, align 4
  %v3_ca94 = add i32 %v2_ca94, 7
  %v4_ca94 = inttoptr i32 %v3_ca94 to i8*
  store i8 %v1_ca94, i8* %v4_ca94, align 1
  %v3_ca98 = load i32, i32* @r6, align 4
  %v4_ca98 = add i32 %v3_ca98, 6
  %v5_ca98 = inttoptr i32 %v4_ca98 to i8*
  store i8 %v5_ca8c, i8* %v5_ca98, align 1
  %v3_ca9c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ca9c, i32* %r3.global-to-local, align 4
  %v0_caa0 = load i32, i32* @r5, align 4
  %v1_caa0 = add i32 %v0_caa0, 20
  %v2_caa0 = inttoptr i32 %v1_caa0 to i32*
  %v3_caa0 = load i32, i32* %v2_caa0, align 4
  %v5_caa8 = mul i32 %v3_ca9c, 24
  %v1_caac = load i32, i32* @sl, align 4
  %v2_caac = add i32 %v1_caac, %v5_caa8
  store i32 %v2_caac, i32* %ip.global-to-local, align 4
  %v3_cab0 = udiv i32 %v3_caa0, 65536
  store i32 %v3_cab0, i32* %r2.global-to-local, align 4
  %v1_cab4 = trunc i32 %v3_cab0 to i8
  %v3_cab4 = add i32 %v2_caac, 2
  %v4_cab4 = inttoptr i32 %v3_cab4 to i8*
  store i8 %v1_cab4, i8* %v4_cab4, align 1
  %v0_cab8 = load i32, i32* %r2.global-to-local, align 4
  %v3_cab816 = udiv i32 %v0_cab8, 256
  %v3_cabc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cabc, i32* %r2.global-to-local, align 4
  %v1_cac0 = trunc i32 %v3_cab816 to i8
  %v2_cac0 = load i32, i32* %ip.global-to-local, align 4
  %v3_cac0 = add i32 %v2_cac0, 3
  %v4_cac0 = inttoptr i32 %v3_cac0 to i8*
  store i8 %v1_cac0, i8* %v4_cac0, align 1
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_cacc = load i32, i32* @r5, align 4
  %v0_cad0 = load i32, i32* %r2.global-to-local, align 4
  %v1_cad0 = add i32 %v0_cad0, 32
  store i32 %v1_cad0, i32* %r2.global-to-local, align 4
  %v0_cad4 = load i32, i32* %sb.global-to-local, align 4
  %v0_cadc = load i32, i32* %ip.global-to-local, align 4
  %v4_cadc = inttoptr i32 %v0_cadc to %sockaddr*
  %v7_cae0 = inttoptr i32 %v0_cacc to i32*
  %v9_cae0 = call i32 @sendto(i32 %v0_cad4, i32* %v7_cae0, i32 %v1_cad0, i32 16384, %sockaddr* %v4_cadc, i32 16)
  %v3_cae4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cae4, i32* %r3.global-to-local, align 4
  store i32 %v1_c70c, i32* %r4.global-to-local, align 4
  %v1_caec = add i32 %v3_cae4, 1
  %v9_caf0 = icmp eq i32 %v1_caec, %v1_c70c
  store i1 %v9_caf0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_caec, i32* %stack_var_-40, align 4
  %v6_caf8 = icmp slt i32 %v1_caec, %v1_c70c
  br i1 %v6_caf8, label %dec_label_pc_cafc, label %dec_label_pc_cbd8

dec_label_pc_cafc:                                ; preds = %dec_label_pc_ca48, %dec_label_pc_ca18
  %v1_cb0c = phi i32 [ %v1_caec, %dec_label_pc_ca48 ], [ 0, %dec_label_pc_ca18 ]
  %v5_cb00 = mul i32 %v1_cb0c, 24
  %v1_cb04 = load i32, i32* @sl, align 4
  %v2_cb04 = add i32 %v1_cb04, %v5_cb00
  store i32 %v2_cb04, i32* %r3.global-to-local, align 4
  %v1_cb08 = add i32 %v2_cb04, 20
  %v2_cb08 = inttoptr i32 %v1_cb08 to i8*
  %v3_cb08 = load i8, i8* %v2_cb08, align 1
  %v4_cb08 = zext i8 %v3_cb08 to i32
  store i32 %v4_cb08, i32* %r2.global-to-local, align 4
  %v0_cb0c = load i32, i32* %fp.global-to-local, align 4
  %v4_cb0c = mul i32 %v1_cb0c, 4
  %v5_cb0c = add i32 %v0_cb0c, %v4_cb0c
  %v6_cb0c = inttoptr i32 %v5_cb0c to i32*
  %v7_cb0c = load i32, i32* %v6_cb0c, align 4
  store i32 %v7_cb0c, i32* @r5, align 4
  %v2_cb14 = icmp ugt i8 %v3_cb08, 30
  %v7_cb14 = icmp eq i8 %v3_cb08, 31
  store i1 %v7_cb14, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* %r7.global-to-local, align 4
  %v1_cb1c = add i32 %v7_cb0c, 20
  store i32 %v1_cb1c, i32* @r6, align 4
  %v2_cb20 = xor i1 %v7_cb14, true
  %v3_cb20 = and i1 %v2_cb14, %v2_cb20
  br i1 %v3_cb20, label %dec_label_pc_ca24, label %dec_label_pc_cb24

dec_label_pc_cb24:                                ; preds = %dec_label_pc_cafc
  %v1_cb24 = add i32 %v2_cb04, 16
  %v2_cb24 = inttoptr i32 %v1_cb24 to i32*
  %v3_cb24 = load i32, i32* %v2_cb24, align 4
  store i32 %v3_cb24, i32* %r4.global-to-local, align 4
  %v0_cb28 = call i32 @function_ef90()
  %v3_cb2c = load i32, i32* %stack_var_-40, align 4
  %v5_cb34 = mul i32 %v3_cb2c, 24
  %v1_cb3c = and i32 %v3_cb24, 65280
  store i32 %v1_cb3c, i32* %r3.global-to-local, align 4
  %v1_cb38 = udiv i32 %v3_cb24, 256
  %v3_cb40 = and i32 %v1_cb38, 65280
  store i32 %v3_cb40, i32* %r2.global-to-local, align 4
  %v1_cb44 = load i32, i32* @sl, align 4
  %v2_cb44 = add i32 %v1_cb44, %v5_cb34
  store i32 %v2_cb44, i32* %ip.global-to-local, align 4
  %v1_cb50 = add i32 %v2_cb44, 20
  %v2_cb50 = inttoptr i32 %v1_cb50 to i8*
  %v3_cb50 = load i8, i8* %v2_cb50, align 1
  %v4_cb50 = zext i8 %v3_cb50 to i32
  store i32 %v4_cb50, i32* %lr.global-to-local, align 4
  %v2_cb58 = call i32 @llvm.bswap.i32(i32 %v3_cb24)
  %v7_cb5c = lshr i32 %v0_cb28, %v4_cb50
  %v8_cb5c = add i32 %v7_cb5c, %v2_cb58
  store i32 %v8_cb5c, i32* %r2.global-to-local, align 4
  %v2_cb78 = call i32 @llvm.bswap.i32(i32 %v8_cb5c)
  %v1_cb7c = load i32, i32* @r5, align 4
  %v2_cb7c = add i32 %v1_cb7c, 16
  %v3_cb7c = inttoptr i32 %v2_cb7c to i32*
  store i32 %v2_cb78, i32* %v3_cb7c, align 4
  store i32 %v3_c874, i32* %r3.global-to-local, align 4
  %v1_cb84 = load i32, i32* %r7.global-to-local, align 4
  %v9_cb84 = icmp eq i32 %v3_c874, %v1_cb84
  store i1 %v9_cb84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cb84, label %dec_label_pc_cb8c, label %dec_label_pc_ca30

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_cb24, %dec_label_pc_ca24
  %v0_cb8c = call i32 @function_ef90()
  %v1_cb8c = trunc i32 %v0_cb8c to i8
  %v4_cb94 = sdiv i32 %v0_cb8c, 256
  store i32 %v4_cb94, i32* %r3.global-to-local, align 4
  %v1_cb98 = load i32, i32* %r7.global-to-local, align 4
  %v9_cb98 = icmp eq i32 %v3_c884, %v1_cb98
  store i1 %v9_cb98, i1* %cpsr_z.global-to-local, align 1
  %v1_cb9c = trunc i32 %v4_cb94 to i8
  %v2_cb9c = load i32, i32* @r5, align 4
  %v3_cb9c = add i32 %v2_cb9c, 5
  %v4_cb9c = inttoptr i32 %v3_cb9c to i8*
  store i8 %v1_cb9c, i8* %v4_cb9c, align 1
  %v3_cba0 = load i32, i32* @r5, align 4
  %v4_cba0 = add i32 %v3_cba0, 4
  %v5_cba0 = inttoptr i32 %v4_cba0 to i8*
  store i8 %v1_cb8c, i8* %v5_cba0, align 1
  %v0_cba4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cba4, label %dec_label_pc_cba8, label %dec_label_pc_cb8c.dec_label_pc_ca3c_crit_edge

dec_label_pc_cb8c.dec_label_pc_ca3c_crit_edge:    ; preds = %dec_label_pc_cb8c
  %v1_ca40.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ca3c

dec_label_pc_cba8:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_ca30
  %v0_cba8 = call i32 @function_ef90()
  %v1_cba8 = trunc i32 %v0_cba8 to i8
  %v4_cbac = sdiv i32 %v0_cba8, 256
  store i32 %v4_cbac, i32* %r3.global-to-local, align 4
  %v3_cbb0 = load i32, i32* @r5, align 4
  %v4_cbb0 = add i32 %v3_cbb0, 20
  %v5_cbb0 = inttoptr i32 %v4_cbb0 to i8*
  store i8 %v1_cba8, i8* %v5_cbb0, align 1
  %v0_cbb4 = load i32, i32* %r3.global-to-local, align 4
  %v1_cbb4 = trunc i32 %v0_cbb4 to i8
  %v2_cbb4 = load i32, i32* @r6, align 4
  %v3_cbb4 = add i32 %v2_cbb4, 1
  %v4_cbb4 = inttoptr i32 %v3_cbb4 to i8*
  store i8 %v1_cbb4, i8* %v4_cbb4, align 1
  store i32 %v3_c888, i32* %r3.global-to-local, align 4
  %v1_cbbc = load i32, i32* %r7.global-to-local, align 4
  %v9_cbbc = icmp eq i32 %v3_c888, %v1_cbbc
  store i1 %v9_cbbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_cbbc, label %dec_label_pc_cbc4, label %dec_label_pc_ca48

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cba8, %dec_label_pc_ca3c
  %v0_cbc4 = call i32 @function_ef90()
  %v1_cbc4 = trunc i32 %v0_cbc4 to i8
  %v4_cbc8 = sdiv i32 %v0_cbc4, 256
  store i32 %v4_cbc8, i32* %r3.global-to-local, align 4
  %v1_cbcc = trunc i32 %v4_cbc8 to i8
  %v2_cbcc = load i32, i32* @r6, align 4
  %v3_cbcc = add i32 %v2_cbcc, 3
  %v4_cbcc = inttoptr i32 %v3_cbcc to i8*
  store i8 %v1_cbcc, i8* %v4_cbcc, align 1
  %v3_cbd0 = load i32, i32* @r6, align 4
  %v4_cbd0 = add i32 %v3_cbd0, 2
  %v5_cbd0 = inttoptr i32 %v4_cbd0 to i8*
  store i8 %v1_cbc4, i8* %v5_cbd0, align 1
  br label %dec_label_pc_ca48

dec_label_pc_cbd8.critedge:                       ; preds = %dec_label_pc_c864
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_cbd8

dec_label_pc_cbd8:                                ; preds = %dec_label_pc_ca48, %dec_label_pc_cbd8.critedge, %dec_label_pc_ca04
  %v2_cbdc = call i32 @time(i32* null)
  store i32 %v2_c800, i32* %r3.global-to-local, align 4
  %v9_cbe4 = icmp eq i32 %v2_c800, %v2_cbdc
  store i1 %v9_cbe4, i1* %cpsr_z.global-to-local, align 1
  %v6_cbe8 = icmp slt i32 %v2_c800, %v2_cbdc
  br i1 %v6_cbe8, label %dec_label_pc_cbec, label %dec_label_pc_ca04

dec_label_pc_cbec:                                ; preds = %dec_label_pc_cbd8, %dec_label_pc_c708, %dec_label_pc_cbf4
  %v29_cbf0 = phi i32 [ -1, %dec_label_pc_c708 ], [ %v1_cbf8, %dec_label_pc_cbf4 ], [ %v2_cbdc, %dec_label_pc_cbd8 ]
  store i32 %v3_c708, i32* %r4.global-to-local, align 4
  store i32 %v6_c708, i32* %r5.global-to-local, align 4
  store i32 %v9_c708, i32* %r6.global-to-local, align 4
  store i32 %v12_c708, i32* %r7.global-to-local, align 4
  store i32 %v15_c708, i32* %r8.global-to-local, align 4
  ret i32 %v29_cbf0

dec_label_pc_cbf4:                                ; preds = %dec_label_pc_c83c
  %v0_cbf4 = load i32, i32* %sb.global-to-local, align 4
  %v1_cbf8 = call i32 @close(i32 %v0_cbf4)
  br label %dec_label_pc_cbec

; uselistorder directives
  uselistorder i32 %v4_cbc8, { 1, 0 }
  uselistorder i32 %v4_cb94, { 1, 0 }
  uselistorder i32 %v1_cb84, { 1, 0 }
  uselistorder i32 %v3_cb24, { 1, 2, 0, 3 }
  uselistorder i32 %v1_caec, { 1, 2, 0, 3 }
  uselistorder i32 %v3_cab0, { 1, 0 }
  uselistorder i32 %v4_ca5c, { 1, 0 }
  uselistorder i1 %v3_ca28, { 1, 0 }
  uselistorder i32 %v1_c9f0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_c99c, { 1, 0 }
  uselistorder i32 %v0_c960, { 1, 0 }
  uselistorder i32 %v1_c924, { 1, 0 }
  uselistorder i8 %v5_c8c4, { 1, 0 }
  uselistorder i32 %v3_c8c0, { 1, 0 }
  uselistorder i32 %v1_c8a4, { 1, 0 }
  uselistorder i32 %v1_c89c, { 1, 0 }
  uselistorder i32 %v3_c888, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_c878, { 0, 1, 3, 2 }
  uselistorder i32 %v3_c874, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c868, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_c800, { 2, 1, 0 }
  uselistorder i32 %v1_c7b8, { 1, 2, 0 }
  uselistorder i32 %v5_c7ac, { 0, 2, 1 }
  uselistorder i32 %v7_c774, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_c750, { 1, 2, 0 }
  uselistorder i32 %v1_c70c, { 1, 2, 3, 0, 4, 5, 6, 8, 7 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %stack_var_-40, { 0, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 2, 15, 13, 14 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 18, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 9, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 13, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 9, 0, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5, 10, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_cbec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cbd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ca48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ca04, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_cc04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_cc04:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-2120 = alloca i32, align 4
  %v3_cc04 = load i32, i32* @r4, align 4
  %v6_cc04 = load i32, i32* @r5, align 4
  %v9_cc04 = load i32, i32* @r6, align 4
  %v15_cc04 = load i32, i32* @r8, align 4
  %v21_cc04 = load i32, i32* @sl, align 4
  %v24_cc04 = load i32, i32* @fp, align 4
  %v1_cc10 = urem i32 %arg2, 256
  store i32 0, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %v1_cc10, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_cc28 = urem i32 %arg4, 256
  store i32 %v1_cc28, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v2_cc38 = call i32* @calloc(i32 %v1_cc10, i32 4)
  %v4_cc38 = ptrtoint i32* %v2_cc38 to i32
  %v0_cc3c = load i32, i32* @r5, align 4
  store i32 %v0_cc3c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_cc48 = load i32, i32* @r4, align 4
  store i32 %v0_cc48, i32* %r0.global-to-local, align 4
  %v0_cc4c = load i32, i32* @r6, align 4
  store i32 %v0_cc4c, i32* %r3.global-to-local, align 4
  %v5_cc50 = inttoptr i32 %v0_cc3c to i32*
  %v6_cc50 = call i32 @function_8fc8(i32 %v0_cc48, i32* %v5_cc50, i32 2, i32 %v0_cc4c, i32 %v4_cc38)
  %v1_cc5c = urem i32 %v6_cc50, 256
  store i32 %v1_cc5c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_cc68 = load i32, i32* @r4, align 4
  store i32 %v0_cc68, i32* %r0.global-to-local, align 4
  %v0_cc6c = load i32, i32* @r5, align 4
  store i32 %v0_cc6c, i32* %r1.global-to-local, align 4
  %v5_cc70 = trunc i32 %v6_cc50 to i8
  %v6_cc74 = inttoptr i32 %v0_cc6c to i32*
  %v7_cc74 = call i32 @function_8fc8(i32 %v0_cc68, i32* %v6_cc74, i32 3, i32 65535, i32 %v6_cc50)
  %v0_cc78 = load i32, i32* @r5, align 4
  store i32 %v0_cc78, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_cc84 = load i32, i32* @r4, align 4
  store i32 %v0_cc84, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_cc8c = inttoptr i32 %v0_cc78 to i32*
  %v6_cc8c = call i32 @function_8fc8(i32 %v0_cc84, i32* %v5_cc8c, i32 4, i32 64, i32 %v7_cc74)
  %v1_cc94 = urem i32 %v6_cc8c, 256
  store i32 %v1_cc94, i32* %ip.global-to-local, align 4
  %v0_cc98 = load i32, i32* @r5, align 4
  store i32 %v0_cc98, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_cca0 = load i32, i32* @r6, align 4
  store i32 %v0_cca0, i32* %r3.global-to-local, align 4
  %v0_cca4 = load i32, i32* @r4, align 4
  store i32 %v0_cca4, i32* %r0.global-to-local, align 4
  %sext39 = mul i32 %v6_cc8c, 16777216
  %v5_ccac = sdiv i32 %sext39, 16777216
  %v6_ccac = inttoptr i32 %v0_cc98 to i32*
  %v7_ccac = call i32 @function_8fc8(i32 %v0_cca4, i32* %v6_ccac, i32 5, i32 %v0_cca0, i32 %v5_ccac)
  %v1_ccb8 = urem i32 %v7_ccac, 256
  store i32 %v1_ccb8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_ccc4 = load i32, i32* @r4, align 4
  store i32 %v0_ccc4, i32* %r0.global-to-local, align 4
  %v0_ccc8 = load i32, i32* @r5, align 4
  store i32 %v0_ccc8, i32* %r1.global-to-local, align 4
  %v5_ccd0 = inttoptr i32 %v0_ccc8 to i32*
  %v6_ccd0 = call i32 @function_8fc8(i32 %v0_ccc4, i32* %v5_ccd0, i32 6, i32 65535, i32 %v1_ccb8)
  %v0_ccd4 = load i32, i32* @r5, align 4
  store i32 %v0_ccd4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_cce0 = load i32, i32* @r4, align 4
  store i32 %v0_cce0, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_cce8 = inttoptr i32 %v0_ccd4 to i32*
  %v6_cce8 = call i32 @function_8fc8(i32 %v0_cce0, i32* %v5_cce8, i32 7, i32 53, i32 %v6_ccd0)
  %v0_ccf4 = load i32, i32* @r5, align 4
  store i32 %v0_ccf4, i32* %r1.global-to-local, align 4
  %v0_ccf8 = load i32, i32* @r4, align 4
  store i32 %v0_ccf8, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_cd04 = inttoptr i32 %v0_ccf4 to i32*
  %v6_cd04 = call i32 @function_8fc8(i32 %v0_ccf8, i32* %v5_cd04, i32 9, i32 65535, i32 %v6_cce8)
  %v0_cd08 = load i32, i32* @r5, align 4
  store i32 %v0_cd08, i32* %r1.global-to-local, align 4
  %v0_cd10 = load i32, i32* @r6, align 4
  store i32 %v0_cd10, i32* %r2.global-to-local, align 4
  %v0_cd14 = load i32, i32* @r4, align 4
  store i32 %v0_cd14, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_cd1c = inttoptr i32 %v0_cd08 to i32*
  %v6_cd1c = call i32 @function_8fc8(i32 %v0_cd14, i32* %v5_cd1c, i32 %v0_cd10, i32 12, i32 %v6_cd04)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_cd24 = load i32, i32* @r6, align 4
  store i32 %v0_cd24, i32* %r3.global-to-local, align 4
  %v0_cd28 = load i32, i32* @r5, align 4
  store i32 %v0_cd28, i32* %r1.global-to-local, align 4
  %v0_cd30 = load i32, i32* @r4, align 4
  store i32 %v0_cd30, i32* %r0.global-to-local, align 4
  %v5_cd34 = inttoptr i32 %v0_cd28 to i32*
  %v6_cd34 = call i32 @function_8ef8(i32 %v0_cd30, i32* %v5_cd34, i32 8, i32 %v0_cd24, i32 %v6_cd1c)
  store i32 %v6_cd34, i32* @r7, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_cd40 = call i32 @function_11e4c(i32 30)
  %v0_cd44 = load i32, i32* @r6, align 4
  store i32 %v0_cd44, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v2_cd4c = inttoptr i32 %v0_cd44 to i32*
  %v3_cd4c = call i32 @function_11d68(i32 30, i32* %v2_cd4c)
  %v4_cd4c = inttoptr i32 %v3_cd4c to i8*
  store i32 %v3_cd4c, i32* %r0.global-to-local, align 4
  %v0_cd50 = load i32, i32* @r6, align 4
  store i32 %v0_cd50, i32* %r1.global-to-local, align 4
  %v4_cd54 = call i32 (i8*, i32, ...) @open(i8* %v4_cd4c, i32 %v0_cd50)
  store i32 %v4_cd54, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_cd60 = call i32 @function_11d94(i32 30)
  store i32 %v1_cd60, i32* %r0.global-to-local, align 4
  %v0_cd64 = load i32, i32* @r4, align 4
  %v1_cd64 = load i32, i32* @r6, align 4
  %v9_cd64 = icmp eq i32 %v0_cd64, %v1_cd64
  store i1 %v9_cd64, i1* %cpsr_z.global-to-local, align 1
  %v5_cd68 = icmp slt i32 %v0_cd64, %v1_cd64
  br i1 %v5_cd68, label %dec_label_pc_ce3c, label %dec_label_pc_cd6c

dec_label_pc_cd6c:                                ; preds = %dec_label_pc_cc04
  %v2_cd70 = ptrtoint i32* %stack_var_-2120 to i32
  store i32 %v2_cd70, i32* %sl.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_cd70, i32* %r1.global-to-local, align 4
  store i32 %v0_cd64, i32* %r0.global-to-local, align 4
  %v4_cd80 = call i32 @read(i32 %v0_cd64, i32* nonnull %stack_var_-2120, i32 2048)
  store i32 %v4_cd80, i32* @r5, align 4
  %v0_cd88 = load i32, i32* @r4, align 4
  store i32 %v0_cd88, i32* %r0.global-to-local, align 4
  %v1_cd8c = call i32 @close(i32 %v0_cd88)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_cd94 = call i32 @function_11e4c(i32 31)
  %v0_cd98 = load i32, i32* @r6, align 4
  store i32 %v0_cd98, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v2_cda0 = inttoptr i32 %v0_cd98 to i32*
  %v3_cda0 = call i32 @function_11d68(i32 31, i32* %v2_cda0)
  %v0_cda4 = load i32, i32* @r5, align 4
  store i32 %v0_cda4, i32* @r1, align 4
  store i32 %v3_cda0, i32* %r2.global-to-local, align 4
  store i32 %v2_cd70, i32* %r0.global-to-local, align 4
  %v3_cdb0 = bitcast i32* %stack_var_-2120 to i8*
  %v4_cdb0 = call i32 @function_12a80(i8* %v3_cdb0, i32 %v0_cda4, i32 %v3_cda0)
  store i32 %v4_cdb0, i32* %r8.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_cdbc = call i32 @function_11d94(i32 31)
  store i32 %v1_cdbc, i32* %r0.global-to-local, align 4
  %v2_cdc0 = icmp eq i32 %v4_cdb0, -1
  store i1 %v2_cdc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cdc0, label %dec_label_pc_ce3c, label %dec_label_pc_cdc8

dec_label_pc_cdc8:                                ; preds = %dec_label_pc_cd6c
  %v0_cdc8 = load i32, i32* @r5, align 4
  %v9_cdc8 = icmp eq i32 %v0_cdc8, %v4_cdb0
  store i1 %v9_cdc8, i1* %cpsr_z.global-to-local, align 1
  %v7_cdcc = icmp sgt i32 %v0_cdc8, %v4_cdb0
  br i1 %v7_cdcc, label %dec_label_pc_cdd0, label %dec_label_pc_ce3c

dec_label_pc_cdd0:                                ; preds = %dec_label_pc_cdc8
  %v2_cdc8 = sub i32 %v0_cdc8, %v4_cdb0
  store i32 %v2_cdc8, i32* %r3.global-to-local, align 4
  %v2_cdd8 = ptrtoint i32* %stack_var_-72 to i32
  %v0_cddc = load i32, i32* @r6, align 4
  store i32 %v0_cddc, i32* %r1.global-to-local, align 4
  store i32 %v4_cdb0, i32* %r2.global-to-local, align 4
  store i32 %v0_cdc8, i32* %r6.global-to-local, align 4
  %v0_cde8 = load i32, i32* %sl.global-to-local, align 4
  %v2_cde8 = add i32 %v0_cde8, %v4_cdb0
  store i32 %v2_cde8, i32* %r0.global-to-local, align 4
  store i32 %v2_cdd8, i32* %r4.global-to-local, align 4
  %v1_cdf8 = add i32 %v0_cdc8, -1
  br label %dec_label_pc_cdf0

dec_label_pc_cdf0:                                ; preds = %dec_label_pc_ce2c, %dec_label_pc_cdd0
  %v0_ce34 = phi i32 [ %v1_ce34, %dec_label_pc_ce2c ], [ %v2_cdd8, %dec_label_pc_cdd0 ]
  %v0_ce2c = phi i32 [ %v1_ce2c, %dec_label_pc_ce2c ], [ %v4_cdb0, %dec_label_pc_cdd0 ]
  %v0_ce14 = phi i32 [ %v0_ce1447, %dec_label_pc_ce2c ], [ %v0_cddc, %dec_label_pc_cdd0 ]
  %v0_cdf4 = phi i32 [ %v0_cdf443, %dec_label_pc_ce2c ], [ %v0_cddc, %dec_label_pc_cdd0 ]
  %v0_cdfc = phi i32 [ %v1_cdfc, %dec_label_pc_ce2c ], [ %v2_cde8, %dec_label_pc_cdd0 ]
  %v1_cdf0 = inttoptr i32 %v0_cdfc to i8*
  %v2_cdf0 = load i8, i8* %v1_cdf0, align 1
  %v3_cdf0 = zext i8 %v2_cdf0 to i32
  store i32 %v3_cdf0, i32* %r3.global-to-local, align 4
  %v2_cdf4 = icmp eq i32 %v0_cdf4, 0
  store i1 %v2_cdf4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cdf8, i32* %lr.global-to-local, align 4
  %v1_cdfc = add i32 %v0_cdfc, 1
  store i32 %v1_cdfc, i32* %r0.global-to-local, align 4
  %v1_ce00 = add nsw i32 %v3_cdf0, -48
  store i32 %v1_ce00, i32* %ip.global-to-local, align 4
  br i1 %v2_cdf4, label %dec_label_pc_ce08, label %dec_label_pc_ce18

dec_label_pc_ce08:                                ; preds = %dec_label_pc_cdf0
  %v7_ce08 = icmp eq i8 %v2_cdf0, 9
  store i1 %v7_ce08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce08, label %dec_label_pc_ce2c, label %bb

bb:                                               ; preds = %dec_label_pc_ce08
  %v8_ce0c = icmp eq i8 %v2_cdf0, 32
  store i1 %v8_ce0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ce0c, label %dec_label_pc_ce2c, label %dec_label_pc_ce14

dec_label_pc_ce14:                                ; preds = %bb
  %v1_ce14 = add i32 %v0_ce14, 1
  store i32 %v1_ce14, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ce18

dec_label_pc_ce18:                                ; preds = %dec_label_pc_cdf0, %dec_label_pc_ce14
  %v0_ce1448 = phi i32 [ %v0_ce14, %dec_label_pc_cdf0 ], [ %v1_ce14, %dec_label_pc_ce14 ]
  %v0_cdf444 = phi i32 [ %v0_cdf4, %dec_label_pc_cdf0 ], [ %v1_ce14, %dec_label_pc_ce14 ]
  %v7_ce18 = icmp eq i8 %v2_cdf0, 46
  store i1 %v7_ce18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ce18, label %dec_label_pc_ce24, label %bb130

bb130:                                            ; preds = %dec_label_pc_ce18
  %v3_ce1c = icmp ugt i32 %v1_ce00, 8
  %v8_ce1c = icmp eq i32 %v1_ce00, 9
  store i1 %v8_ce1c, i1* %cpsr_z.global-to-local, align 1
  %v2_ce20 = xor i1 %v8_ce1c, true
  %v3_ce20 = and i1 %v3_ce1c, %v2_ce20
  br i1 %v3_ce20, label %dec_label_pc_d36c, label %dec_label_pc_ce24

dec_label_pc_ce24:                                ; preds = %dec_label_pc_ce18, %bb130
  %v9_ce24 = icmp eq i32 %v0_ce2c, %v1_cdf8
  store i1 %v9_ce24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ce24, label %dec_label_pc_d36c, label %dec_label_pc_ce2c

dec_label_pc_ce2c:                                ; preds = %dec_label_pc_ce08, %dec_label_pc_ce24, %bb
  %v0_ce1447 = phi i32 [ %v0_ce14, %dec_label_pc_ce08 ], [ %v0_ce1448, %dec_label_pc_ce24 ], [ %v0_ce14, %bb ]
  %v0_cdf443 = phi i32 [ 0, %dec_label_pc_ce08 ], [ %v0_cdf444, %dec_label_pc_ce24 ], [ 0, %bb ]
  %v1_ce2c = add i32 %v0_ce2c, 1
  store i32 %v1_ce2c, i32* %r2.global-to-local, align 4
  %v9_ce30 = icmp eq i32 %v0_cdc8, %v1_ce2c
  store i1 %v9_ce30, i1* %cpsr_z.global-to-local, align 1
  %v1_ce34 = add i32 %v0_ce34, 1
  store i32 %v1_ce34, i32* %r4.global-to-local, align 4
  br i1 %v9_ce30, label %dec_label_pc_ce3c, label %dec_label_pc_cdf0

dec_label_pc_ce3c:                                ; preds = %dec_label_pc_ce2c, %dec_label_pc_cdc8, %dec_label_pc_cd6c, %dec_label_pc_cc04
  %v0_ce3c = call i32 @function_ef90()
  %v1_ce40 = urem i32 %v0_ce3c, 4
  store i32 %v1_ce40, i32* %r0.global-to-local, align 4
  %v2_ce44 = icmp eq i32 %v1_ce40, 3
  store i1 %v2_ce44, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_ce3c to i2
  switch i2 %trunc, label %dec_label_pc_ce6825 [
    i2 0, label %dec_label_pc_d3a4
    i2 1, label %dec_label_pc_ce60
    i2 -2, label %dec_label_pc_d394
    i2 -1, label %dec_label_pc_d3b8
  ]

dec_label_pc_ce60:                                ; preds = %dec_label_pc_ce3c
  store i32 74, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_ce68

dec_label_pc_ce6825:                              ; preds = %dec_label_pc_ce3c
  unreachable

dec_label_pc_ce68:                                ; preds = %dec_label_pc_d3b8, %dec_label_pc_d3a4, %dec_label_pc_d394, %dec_label_pc_d36c, %dec_label_pc_ce60
  %stack_var_-2188.0 = phi i32 [ 4, %dec_label_pc_d3b8 ], [ 64, %dec_label_pc_d394 ], [ 74, %dec_label_pc_ce60 ], [ 8, %dec_label_pc_d3a4 ], [ %phitmp, %dec_label_pc_d36c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ce6c = call i32 @time(i32* null)
  %v0_ce70 = load i32, i32* @r7, align 4
  %v2_ce70 = icmp eq i32 %v0_ce70, 0
  store i1 %v2_ce70, i1* %cpsr_z.global-to-local, align 1
  %v1_ce74 = load i32, i32* %fp.global-to-local, align 4
  %v2_ce74 = add i32 %v1_ce74, %v2_ce6c
  store i32 %v2_ce74, i32* %r0.global-to-local, align 4
  br i1 %v2_ce70, label %dec_label_pc_d348, label %dec_label_pc_ce80

dec_label_pc_ce80:                                ; preds = %dec_label_pc_ce68
  store i32 %v0_ce70, i32* %r0.global-to-local, align 4
  %v1_ce84 = inttoptr i32 %v0_ce70 to i8*
  %v2_ce84 = call i32 @function_1272c(i8* %v1_ce84)
  %v3_ce84 = inttoptr i32 %v2_ce84 to i8*
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_ce98 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_ce98, i32* %r0.global-to-local, align 4
  %v2_ce9c = icmp eq i32 %v3_ce98, -1
  store i1 %v2_ce9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ce9c, label %dec_label_pc_d348, label %dec_label_pc_cea8

dec_label_pc_cea8:                                ; preds = %dec_label_pc_ce80
  store i32 1, i32* %lr.global-to-local, align 4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_ceb4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_ceb4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_cec8 = call i32 @setsockopt(i32 %v3_ce98, i32 0, i32 3, i32* nonnull %stack_var_-40, i32 4)
  store i32 %v7_cec8, i32* %r0.global-to-local, align 4
  %v2_cecc = icmp eq i32 %v7_cec8, -1
  store i1 %v2_cecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cecc, label %dec_label_pc_d340, label %dec_label_pc_ced4

dec_label_pc_ced4:                                ; preds = %dec_label_pc_cea8
  %v3_cedc = mul i32 %v7_cc74, 65536
  store i32 %v3_cedc, i32* %r8.global-to-local, align 4
  %v3_cee8 = mul i32 %v6_ccd0, 65536
  store i32 %v3_cee8, i32* %r0.global-to-local, align 4
  %v3_ceec = mul i32 %v6_cce8, 65536
  store i32 %v3_ceec, i32* %sl.global-to-local, align 4
  %v3_cef0 = mul i32 %v6_cd04, 65536
  store i32 %v3_cef0, i32* %fp.global-to-local, align 4
  %v2_cef4 = icmp eq i32 %v1_cc10, 0
  store i1 %v2_cef4, i1* %cpsr_z.global-to-local, align 1
  %v1_cef8 = urem i32 %v6_cd1c, 256
  store i32 %v1_cef8, i32* @sb, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cf00 = urem i32 %v7_cc74, 65536
  store i32 %v3_cf00, i32* %r5.global-to-local, align 4
  %v3_cf04 = urem i32 %v6_ccd0, 65536
  store i32 %v3_cf04, i32* %ip.global-to-local, align 4
  %v3_cf08 = urem i32 %v6_cce8, 65536
  store i32 %v3_cf08, i32* %lr.global-to-local, align 4
  %v3_cf0c = urem i32 %v6_cd04, 65536
  store i32 %v3_cf0c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_cef4, label %dec_label_pc_d354.critedge, label %dec_label_pc_cf28

dec_label_pc_cf28:                                ; preds = %dec_label_pc_ced4
  %v2_cf30 = add i32 %v2_ce84, %v1_cef8
  %v3_cf34 = mul i32 %v2_cf30, 65536
  %v1_cf38 = add i32 %v3_cf34, 1769472
  %v1_cf3c = add i32 %v3_cf34, 3080192
  %v1_cf58 = urem i32 %v6_cd04, 256
  %tmp131 = udiv i32 %v6_ccd0, 256
  %v3_cf5c = urem i32 %tmp131, 256
  %v1_cf60 = urem i32 %v6_ccd0, 256
  %v1_cf54 = mul i32 %v7_cc74, 256
  %v3_cf68 = and i32 %v1_cf54, 65280
  store i32 %v3_cf68, i32* %r1.global-to-local, align 4
  %v1_cf70 = urem i32 %v6_cce8, 256
  %tmp132 = udiv i32 %v7_cc74, 256
  %v3_cf78 = udiv i32 %v1_cf38, 256
  %v1_cf80 = and i32 %v3_cf78, 65280
  %tmp133 = udiv i32 %v6_cce8, 256
  %v4_cf90 = udiv i32 %v1_cf38, 16777216
  %v5_cf90 = or i32 %v1_cf80, %v4_cf90
  store i32 %v5_cf90, i32* %r6.global-to-local, align 4
  %v3_cf98 = sdiv i32 %v1_cf3c, 16777216
  %sext40 = mul i32 %tmp132, 16777216
  %v7_cf98 = sdiv i32 %sext40, 16777216
  %v3_cf9c = mul nuw nsw i32 %v1_cf58, 256
  %v4_cfa4 = mul nuw nsw i32 %v1_cf60, 256
  %v5_cfa4 = or i32 %v4_cfa4, %v3_cf5c
  store i32 %v5_cfa4, i32* %r0.global-to-local, align 4
  %v3_cfa8 = ashr i32 %v1_cf3c, 31
  %tmp134 = udiv i32 %v6_cd04, 256
  %v4_cfac = urem i32 %tmp134, 256
  %v5_cfac = or i32 %v4_cfac, %v3_cf9c
  store i32 %v5_cfac, i32* %r5.global-to-local, align 4
  %v3_cfb0 = ashr i32 %sext40, 31
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_cfb8 = add i32 %v2_ce84, 1
  store i32 %v2_cfb8, i32* %fp.global-to-local, align 4
  store i32 %v1_cf70, i32* %r3.global-to-local, align 4
  store i32 %v1_cf60, i32* %r2.global-to-local, align 4
  %v3_cfcc70 = udiv i32 %v1_cf80, 256
  store i32 %v3_cfcc70, i32* %ip.global-to-local, align 4
  store i32 %v1_cf58, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v5_cfd8 = trunc i32 %tmp131 to i8
  store i32 0, i32* %sl.global-to-local, align 4
  %sext19 = mul i32 %v1_cf38, 256
  %v4_d088 = sdiv i32 %sext19, 16777216
  %sext21 = mul i32 %v6_cce8, 16777216
  %v4_d0a4 = sdiv i32 %sext21, 16777216
  %sext22 = mul nuw i32 %v4_cf90, 16777216
  %v4_d0a8 = sdiv i32 %sext22, 16777216
  %sext24 = mul i32 %v6_cd04, 16777216
  %v4_d0c8 = sdiv i32 %sext24, 16777216
  %v1_d04c = trunc i32 %v3_cfa8 to i8
  %extract.t = trunc i32 %v3_cfb0 to i8
  %v1_d0ac = trunc i32 %tmp133 to i8
  %v1_d0d4 = trunc i32 %v6_ccd0 to i8
  br label %dec_label_pc_cff8

dec_label_pc_cff8:                                ; preds = %dec_label_pc_d158, %dec_label_pc_cf28
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_d000 = call i32* @calloc(i32 600, i32 1)
  %v4_d000 = ptrtoint i32* %v2_d000 to i32
  store i32 %v4_d000, i32* %r0.global-to-local, align 4
  store i32 %v4_cc38, i32* %r2.global-to-local, align 4
  %v3_d008 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d008, i32* %r3.global-to-local, align 4
  %v2_d00c = load i32, i32* %r4.global-to-local, align 4
  %v5_d00c = mul i32 %v2_d00c, 4
  %v6_d00c = add i32 %v5_d00c, %v4_cc38
  %v7_d00c = inttoptr i32 %v6_d00c to i32*
  store i32 %v4_d000, i32* %v7_d00c, align 4
  %v0_d010 = load i32, i32* %r2.global-to-local, align 4
  %v1_d010 = load i32, i32* %r3.global-to-local, align 4
  %v4_d010 = mul i32 %v1_d010, 4
  %v5_d010 = add i32 %v4_d010, %v0_d010
  %v6_d010 = inttoptr i32 %v5_d010 to i32*
  %v7_d010 = load i32, i32* %v6_d010, align 4
  store i32 %v7_d010, i32* %r1.global-to-local, align 4
  %v1_d014 = inttoptr i32 %v7_d010 to i8*
  %v2_d014 = load i8, i8* %v1_d014, align 1
  %tmp = urem i8 %v2_d014, 16
  %v1_d018 = zext i8 %tmp to i32
  %v1_d01c = or i32 %v1_d018, 64
  store i32 %v1_d01c, i32* %r2.global-to-local, align 4
  %v1_d020 = trunc i32 %v1_d01c to i8
  store i8 %v1_d020, i8* %v1_d014, align 1
  %v0_d024 = load i32, i32* %r1.global-to-local, align 4
  %v1_d024 = inttoptr i32 %v0_d024 to i8*
  %v2_d024 = load i8, i8* %v1_d024, align 1
  %v1_d028 = and i8 %v2_d024, -16
  %v1_d02c = or i8 %v1_d028, 5
  store i32 %v1_ccb8, i32* %ip.global-to-local, align 4
  store i8 %v1_d02c, i8* %v1_d024, align 1
  %v2_d03c = load i32, i32* %r1.global-to-local, align 4
  %v3_d03c = add i32 %v2_d03c, 1
  %v4_d03c = inttoptr i32 %v3_d03c to i8*
  store i8 %v5_cc70, i8* %v4_d03c, align 1
  store i32 %v3_cfa8, i32* %r3.global-to-local, align 4
  store i32 %v3_cf98, i32* %r2.global-to-local, align 4
  %v0_d048 = load i32, i32* %ip.global-to-local, align 4
  %v2_d048 = icmp eq i32 %v0_d048, 0
  store i1 %v2_d048, i1* %cpsr_z.global-to-local, align 1
  %v2_d04c = load i32, i32* %r1.global-to-local, align 4
  %v3_d04c = add i32 %v2_d04c, 3
  %v4_d04c = inttoptr i32 %v3_d04c to i8*
  store i8 %v1_d04c, i8* %v4_d04c, align 1
  %v0_d050 = load i32, i32* %r2.global-to-local, align 4
  %v1_d050 = trunc i32 %v0_d050 to i8
  %v2_d050 = load i32, i32* %r1.global-to-local, align 4
  %v3_d050 = add i32 %v2_d050, 2
  %v4_d050 = inttoptr i32 %v3_d050 to i8*
  store i8 %v1_d050, i8* %v4_d050, align 1
  store i32 %v3_cfb0, i32* %lr.global-to-local, align 4
  store i32 %v5_ccac, i32* %r2.global-to-local, align 4
  %v0_d05c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d05c, label %.thread26, label %bb135

bb135:                                            ; preds = %dec_label_pc_cff8
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_d060 = load i32, i32* %r1.global-to-local, align 4
  %v4_d060 = add i32 %v3_d060, 6
  %v5_d060 = inttoptr i32 %v4_d060 to i8*
  store i8 64, i8* %v5_d060, align 1
  %v0_d068.pre = load i32, i32* %lr.global-to-local, align 4
  %extract.t71 = trunc i32 %v0_d068.pre to i8
  br label %.thread26

.thread26:                                        ; preds = %dec_label_pc_cff8, %bb135
  %v0_d068.off0 = phi i8 [ %extract.t, %dec_label_pc_cff8 ], [ %extract.t71, %bb135 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_d068 = load i32, i32* %r1.global-to-local, align 4
  %v3_d068 = add i32 %v2_d068, 5
  %v4_d068 = inttoptr i32 %v3_d068 to i8*
  store i8 %v0_d068.off0, i8* %v4_d068, align 1
  store i32 %v7_cf98, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ba18.101 to i32), i32* %lr.global-to-local, align 4
  %v0_d074 = load i32, i32* %r2.global-to-local, align 4
  %v1_d074 = trunc i32 %v0_d074 to i8
  %v2_d074 = load i32, i32* %r1.global-to-local, align 4
  %v3_d074 = add i32 %v2_d074, 8
  %v4_d074 = inttoptr i32 %v3_d074 to i8*
  store i8 %v1_d074, i8* %v4_d074, align 1
  %v0_d078 = load i32, i32* %r3.global-to-local, align 4
  %v1_d078 = trunc i32 %v0_d078 to i8
  %v2_d078 = load i32, i32* %r1.global-to-local, align 4
  %v3_d078 = add i32 %v2_d078, 9
  %v4_d078 = inttoptr i32 %v3_d078 to i8*
  store i8 %v1_d078, i8* %v4_d078, align 1
  %v0_d07c = load i32, i32* %r1.global-to-local, align 4
  %v1_d07c = add i32 %v0_d07c, 41
  %v2_d080 = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_d080, i32* %r3.global-to-local, align 4
  %v0_d084 = load i32, i32* @sb, align 4
  %v2_d084 = add i32 %v1_d07c, %v0_d084
  store i32 %v2_d084, i32* %r4.global-to-local, align 4
  store i32 %v4_d088, i32* %r2.global-to-local, align 4
  %v1_d08c = add i32 %v0_d07c, 20
  store i32 %v1_d08c, i32* %r0.global-to-local, align 4
  %v0_d090 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d090, label %bb137, label %bb136

bb136:                                            ; preds = %.thread26
  %v1_d090 = load i32, i32* %sl.global-to-local, align 4
  %v2_d090 = trunc i32 %v1_d090 to i8
  %v4_d090 = add i32 %v0_d07c, 7
  %v5_d090 = inttoptr i32 %v4_d090 to i8*
  store i8 %v2_d090, i8* %v5_d090, align 1
  %v2_d094.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %.thread26, %bb136
  %v2_d094 = phi i32 [ %v0_d07c, %.thread26 ], [ %v2_d094.pre, %bb136 ]
  %v0_d094 = load i32, i32* %ip.global-to-local, align 4
  %v1_d094 = trunc i32 %v0_d094 to i8
  %v3_d094 = add i32 %v2_d094, 4
  %v4_d094 = inttoptr i32 %v3_d094 to i8*
  store i8 %v1_d094, i8* %v4_d094, align 1
  %v0_d098 = load i32, i32* %r3.global-to-local, align 4
  %v1_d098 = load i32, i32* %r1.global-to-local, align 4
  %v2_d098 = add i32 %v1_d098, 12
  %v3_d098 = inttoptr i32 %v2_d098 to i32*
  store i32 %v0_d098, i32* %v3_d098, align 4
  %v0_d09c = load i32, i32* %r2.global-to-local, align 4
  %v1_d09c = trunc i32 %v0_d09c to i8
  %v2_d09c = load i32, i32* %r0.global-to-local, align 4
  %v3_d09c = add i32 %v2_d09c, 5
  %v4_d09c = inttoptr i32 %v3_d09c to i8*
  store i8 %v1_d09c, i8* %v4_d09c, align 1
  store i32 %v4_d0a4, i32* %lr.global-to-local, align 4
  store i32 %v4_d0a8, i32* %r2.global-to-local, align 4
  %v2_d0ac = load i32, i32* %r0.global-to-local, align 4
  %v3_d0ac = add i32 %v2_d0ac, 2
  %v4_d0ac = inttoptr i32 %v3_d0ac to i8*
  store i8 %v1_d0ac, i8* %v4_d0ac, align 1
  %v0_d0b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_d0b0 = trunc i32 %v0_d0b0 to i8
  %v2_d0b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_d0b0 = add i32 %v2_d0b0, 3
  %v4_d0b0 = inttoptr i32 %v3_d0b0 to i8*
  store i8 %v1_d0b0, i8* %v4_d0b0, align 1
  %v0_d0b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d0b4 = trunc i32 %v0_d0b4 to i8
  %v2_d0b4 = load i32, i32* %r0.global-to-local, align 4
  %v3_d0b4 = add i32 %v2_d0b4, 4
  %v4_d0b4 = inttoptr i32 %v3_d0b4 to i8*
  store i8 %v1_d0b4, i8* %v4_d0b4, align 1
  store i32 %stack_var_-2188.0, i32* %lr.global-to-local, align 4
  %v2_d0c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_d0c0 = add i32 %v2_d0c0, 20
  %v4_d0c0 = inttoptr i32 %v3_d0c0 to i8*
  store i8 %v5_cfd8, i8* %v4_d0c0, align 1
  store i32 %v4_d0c8, i32* %r3.global-to-local, align 4
  %v0_d0cc = load i32, i32* %r1.global-to-local, align 4
  %v1_d0cc = add i32 %v0_d0cc, 28
  store i32 %v1_d0cc, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_d0d4 = load i32, i32* %r0.global-to-local, align 4
  %v3_d0d4 = add i32 %v2_d0d4, 1
  %v4_d0d4 = inttoptr i32 %v3_d0d4 to i8*
  store i8 %v1_d0d4, i8* %v4_d0d4, align 1
  %v0_d0d8 = load i32, i32* %lr.global-to-local, align 4
  %v1_d0d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_d0d8 = add i32 %v1_d0d8, 16
  %v3_d0d8 = inttoptr i32 %v2_d0d8 to i32*
  store i32 %v0_d0d8, i32* %v3_d0d8, align 4
  %v0_d0dc = load i32, i32* %r8.global-to-local, align 4
  %v1_d0dc = trunc i32 %v0_d0dc to i8
  %v2_d0dc = load i32, i32* %ip.global-to-local, align 4
  %v3_d0dc = add i32 %v2_d0dc, 5
  %v4_d0dc = inttoptr i32 %v3_d0dc to i8*
  store i8 %v1_d0dc, i8* %v4_d0dc, align 1
  %v0_d0e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_d0e0 = trunc i32 %v0_d0e0 to i8
  %v2_d0e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_d0e0 = add i32 %v2_d0e0, 28
  %v4_d0e0 = inttoptr i32 %v3_d0e0 to i8*
  store i8 %v1_d0e0, i8* %v4_d0e0, align 1
  %v0_d0e4 = load i32, i32* %r8.global-to-local, align 4
  %v1_d0e4 = trunc i32 %v0_d0e4 to i8
  %v2_d0e4 = load i32, i32* %ip.global-to-local, align 4
  %v3_d0e4 = add i32 %v2_d0e4, 2
  %v4_d0e4 = inttoptr i32 %v3_d0e4 to i8*
  store i8 %v1_d0e4, i8* %v4_d0e4, align 1
  %v0_d0e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d0e8 = trunc i32 %v0_d0e8 to i8
  %v2_d0e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_d0e8 = add i32 %v2_d0e8, 1
  %v4_d0e8 = inttoptr i32 %v3_d0e8 to i8*
  store i8 %v1_d0e8, i8* %v4_d0e8, align 1
  %v0_d0ec = load i32, i32* %r6.global-to-local, align 4
  %v1_d0ec = trunc i32 %v0_d0ec to i8
  %v2_d0ec = load i32, i32* %ip.global-to-local, align 4
  %v3_d0ec = add i32 %v2_d0ec, 3
  %v4_d0ec = inttoptr i32 %v3_d0ec to i8*
  store i8 %v1_d0ec, i8* %v4_d0ec, align 1
  %v0_d0f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_d0f0 = trunc i32 %v0_d0f0 to i8
  %v2_d0f0 = load i32, i32* %ip.global-to-local, align 4
  %v3_d0f0 = add i32 %v2_d0f0, 4
  %v4_d0f0 = inttoptr i32 %v3_d0f0 to i8*
  store i8 %v1_d0f0, i8* %v4_d0f0, align 1
  %v0_d0f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_d0f4 = add i32 %v0_d0f4, 1
  store i32 %v1_d0f4, i32* %r0.global-to-local, align 4
  %v0_d0f8 = load i32, i32* @sb, align 4
  %v1_d0f8 = trunc i32 %v0_d0f8 to i8
  %v2_d0f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_d0f8 = add i32 %v2_d0f8, 40
  %v4_d0f8 = inttoptr i32 %v3_d0f8 to i8*
  store i8 %v1_d0f8, i8* %v4_d0f8, align 1
  %v0_d0fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_d0fc, i32* %r2.global-to-local, align 4
  %v0_d100 = load i32, i32* @r7, align 4
  store i32 %v0_d100, i32* %r1.global-to-local, align 4
  %v3_d104 = call i32 @function_127a8(i32 %v1_d0f4, i32 %v0_d100, i32 %v0_d0fc)
  store i32 %v3_d104, i32* %r0.global-to-local, align 4
  %v1_d10c = load i32, i32* %r6.global-to-local, align 4
  %v10_d10c = inttoptr i32 %v1_d10c to i8*
  %v15_d10c = icmp eq i32 %v2_ce84, %v1_d10c
  store i1 %v15_d10c, i1* %cpsr_z.global-to-local, align 1
  %v9_d110 = icmp sgt i8* %v3_ce84, %v10_d10c
  store i32 %v1_d10c, i32* %lr.global-to-local, align 4
  %v0_d120 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d120, i32* %ip.global-to-local, align 4
  %extract.t73 = trunc i32 %v1_d10c to i8
  br i1 %v9_d110, label %dec_label_pc_d11c, label %dec_label_pc_d158

dec_label_pc_d11c:                                ; preds = %bb137
  store i32 %v1_d10c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d128

dec_label_pc_d128:                                ; preds = %.thread38, %dec_label_pc_d11c
  %v1_d130 = phi i32 [ %v1_d13059, %.thread38 ], [ %v1_d10c, %dec_label_pc_d11c ]
  %v0_d128 = phi i32 [ %v1_d144, %.thread38 ], [ %v1_d10c, %dec_label_pc_d11c ]
  %v1_d128 = load i32, i32* @r7, align 4
  %v2_d128 = add i32 %v1_d128, %v0_d128
  %v3_d128 = inttoptr i32 %v2_d128 to i8*
  %v4_d128 = load i8, i8* %v3_d128, align 1
  %v6_d128 = zext i8 %v4_d128 to i32
  store i32 %v6_d128, i32* %r3.global-to-local, align 4
  %v7_d12c = icmp eq i8 %v4_d128, 46
  store i1 %v7_d12c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d12c, label %bb138, label %.thread34

.thread34:                                        ; preds = %dec_label_pc_d128
  %v1_d13436 = add i32 %v1_d130, 1
  store i32 %v1_d13436, i32* %r2.global-to-local, align 4
  br label %bb139

bb138:                                            ; preds = %dec_label_pc_d128
  %v2_d130 = trunc i32 %v1_d130 to i8
  %v3_d130 = load i32, i32* %ip.global-to-local, align 4
  %v4_d130 = inttoptr i32 %v3_d130 to i8*
  store i8 %v2_d130, i8* %v4_d130, align 1
  %v0_d138.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_d134 = load i32, i32* %lr.global-to-local, align 4
  %v1_d134 = add i32 %v0_d134, 1
  store i32 %v1_d134, i32* %r2.global-to-local, align 4
  br i1 %v0_d138.pr, label %bb140, label %bb139

bb139:                                            ; preds = %.thread34, %bb138
  %v1_d13437 = phi i32 [ %v1_d13436, %.thread34 ], [ %v1_d134, %bb138 ]
  %v2_d138 = urem i32 %v1_d13437, 256
  store i32 %v2_d138, i32* %lr.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_d13060 = phi i32 [ %v0_d134, %bb138 ], [ %v2_d138, %bb139 ]
  %v0_d14c.pr = phi i1 [ true, %bb138 ], [ false, %bb139 ]
  store i32 %v2_ce84, i32* %r2.global-to-local, align 4
  %v0_d140 = load i32, i32* %r4.global-to-local, align 4
  %v1_d140 = load i32, i32* %r1.global-to-local, align 4
  %v2_d140 = add i32 %v1_d140, %v0_d140
  store i32 %v2_d140, i32* %r0.global-to-local, align 4
  %v1_d144 = add i32 %v1_d140, 1
  store i32 %v1_d144, i32* %r1.global-to-local, align 4
  br i1 %v0_d14c.pr, label %bb141, label %.thread38

bb141:                                            ; preds = %bb140
  %v2_d148 = add i32 %v2_d140, 1
  store i32 %v2_d148, i32* %ip.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %.thread38

.thread38:                                        ; preds = %bb140, %bb141
  %v1_d13059 = phi i32 [ %v1_d13060, %bb140 ], [ 0, %bb141 ]
  %v9_d150 = icmp eq i32 %v2_ce84, %v1_d144
  store i1 %v9_d150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d150, label %dec_label_pc_d158.loopexit, label %dec_label_pc_d128

dec_label_pc_d158.loopexit:                       ; preds = %.thread38
  %v2_d158.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t72 = trunc i32 %v1_d13059 to i8
  br label %dec_label_pc_d158

dec_label_pc_d158:                                ; preds = %dec_label_pc_d158.loopexit, %bb137
  %v2_d158 = phi i32 [ %v2_d158.pre, %dec_label_pc_d158.loopexit ], [ %v0_d120, %bb137 ]
  %v0_d158.off0 = phi i8 [ %extract.t72, %dec_label_pc_d158.loopexit ], [ %extract.t73, %bb137 ]
  %v3_d158 = inttoptr i32 %v2_d158 to i8*
  store i8 %v0_d158.off0, i8* %v3_d158, align 1
  %v3_d15c = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_ce84, i32* %ip.global-to-local, align 4
  store i32 %v1_cc10, i32* %lr.global-to-local, align 4
  %v0_d168 = load i32, i32* %r4.global-to-local, align 4
  %v2_d168 = add i32 %v0_d168, %v2_ce84
  store i32 %v2_d168, i32* %r3.global-to-local, align 4
  %v1_d16c = add i32 %v3_d15c, 1
  store i32 %v1_d16c, i32* %r4.global-to-local, align 4
  %v9_d170 = icmp eq i32 %v1_cc10, %v1_d16c
  store i1 %v9_d170, i1* %cpsr_z.global-to-local, align 1
  %v1_d174 = add i32 %v2_d168, 2
  store i32 %v1_d174, i32* %r2.global-to-local, align 4
  %v0_d178 = load i32, i32* %sl.global-to-local, align 4
  %v1_d178 = trunc i32 %v0_d178 to i8
  %v4_d178 = inttoptr i32 %v1_d174 to i8*
  store i8 %v1_d178, i8* %v4_d178, align 1
  %v0_d17c = load i32, i32* %r8.global-to-local, align 4
  %v1_d17c = trunc i32 %v0_d17c to i8
  %v2_d17c = load i32, i32* %r2.global-to-local, align 4
  %v3_d17c = add i32 %v2_d17c, 3
  %v4_d17c = inttoptr i32 %v3_d17c to i8*
  store i8 %v1_d17c, i8* %v4_d17c, align 1
  %v0_d180 = load i32, i32* %r8.global-to-local, align 4
  %v1_d180 = trunc i32 %v0_d180 to i8
  %v2_d180 = load i32, i32* %r2.global-to-local, align 4
  %v3_d180 = add i32 %v2_d180, 1
  %v4_d180 = inttoptr i32 %v3_d180 to i8*
  store i8 %v1_d180, i8* %v4_d180, align 1
  %v0_d184 = load i32, i32* %sl.global-to-local, align 4
  %v1_d184 = trunc i32 %v0_d184 to i8
  %v2_d184 = load i32, i32* %r2.global-to-local, align 4
  %v3_d184 = add i32 %v2_d184, 2
  %v4_d184 = inttoptr i32 %v3_d184 to i8*
  store i8 %v1_d184, i8* %v4_d184, align 1
  %v0_d188 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d188, i32* %stack_var_-40, align 4
  %v8_d18c = icmp sgt i32 %v1_cc10, %v1_d16c
  br i1 %v8_d18c, label %dec_label_pc_cff8, label %dec_label_pc_d190

dec_label_pc_d190:                                ; preds = %dec_label_pc_d158, %dec_label_pc_d354
  store i32 %v1_cc10, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_cef4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_cef4, label %dec_label_pc_d354, label %dec_label_pc_d1a4

dec_label_pc_d1a4:                                ; preds = %dec_label_pc_d190
  store i32 %v2_ce84, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_d1b0 = load i32, i32* @sb, align 4
  %v2_d1b0 = add i32 %v0_d1b0, %v2_ce84
  store i32 %v2_d1b0, i32* %r3.global-to-local, align 4
  %v1_d1b4 = add i32 %v2_d1b0, 47
  store i32 %v1_d1b4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r8, align 4
  %v1_d1bc = add i32 %v2_d1b0, 27
  store i32 %v1_d1bc, i32* @fp, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_d2b8

dec_label_pc_d1cc:                                ; preds = %dec_label_pc_d2b8
  store i32 %v3_cf04, i32* %r3.global-to-local, align 4
  %v9_d1d0 = icmp eq i32 %v3_cf04, %v1_d1d0
  store i1 %v9_d1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d1d0, label %dec_label_pc_d2f4, label %dec_label_pc_d1d8

dec_label_pc_d1d8:                                ; preds = %dec_label_pc_d2d8.dec_label_pc_d1d8_crit_edge, %dec_label_pc_d1cc
  %v1_d1dc = phi i32 [ %v1_d1dc.pre, %dec_label_pc_d2d8.dec_label_pc_d1d8_crit_edge ], [ %v1_d1d0, %dec_label_pc_d1cc ]
  store i32 %v3_cf08, i32* %ip.global-to-local, align 4
  %v9_d1dc = icmp eq i32 %v3_cf08, %v1_d1dc
  store i1 %v9_d1dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d1dc, label %dec_label_pc_d310, label %dec_label_pc_d1e4

dec_label_pc_d1e4:                                ; preds = %dec_label_pc_d2f4.dec_label_pc_d1e4_crit_edge, %dec_label_pc_d1d8
  %v1_d1e8 = phi i32 [ %v1_d1e8.pre, %dec_label_pc_d2f4.dec_label_pc_d1e4_crit_edge ], [ %v1_d1dc, %dec_label_pc_d1d8 ]
  store i32 %v3_cf0c, i32* %lr.global-to-local, align 4
  %v9_d1e8 = icmp eq i32 %v3_cf0c, %v1_d1e8
  store i1 %v9_d1e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d1e8, label %dec_label_pc_d32c, label %dec_label_pc_d1f0

dec_label_pc_d1f0:                                ; preds = %dec_label_pc_d310, %dec_label_pc_d1e4, %dec_label_pc_d32c
  %v0_d1f0 = load i32, i32* @r6, align 4
  store i32 %v0_d1f0, i32* %r0.global-to-local, align 4
  %v0_d1f4 = load i32, i32* @sb, align 4
  store i32 %v0_d1f4, i32* %r1.global-to-local, align 4
  %v2_d1f8 = call i32 @function_f044(i32 %v0_d1f0, i32 %v0_d1f4)
  %v0_d1fc = load i32, i32* @r7, align 4
  %v1_d1fc = trunc i32 %v0_d1fc to i8
  %v2_d1fc = load i32, i32* @r6, align 4
  %v3_d1fc = load i32, i32* @sb, align 4
  %v4_d1fc = add i32 %v3_d1fc, %v2_d1fc
  %v5_d1fc = inttoptr i32 %v4_d1fc to i8*
  store i8 %v1_d1fc, i8* %v5_d1fc, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_d204 = load i32, i32* @r7, align 4
  %v1_d204 = trunc i32 %v0_d204 to i8
  %v2_d204 = load i32, i32* @r4, align 4
  %v3_d204 = add i32 %v2_d204, 10
  %v4_d204 = inttoptr i32 %v3_d204 to i8*
  store i8 %v1_d204, i8* %v4_d204, align 1
  %v0_d208 = load i32, i32* @r7, align 4
  %v1_d208 = trunc i32 %v0_d208 to i8
  %v2_d208 = load i32, i32* @r4, align 4
  %v3_d208 = add i32 %v2_d208, 11
  %v4_d208 = inttoptr i32 %v3_d208 to i8*
  store i8 %v1_d208, i8* %v4_d208, align 1
  %v0_d20c = load i32, i32* @r4, align 4
  store i32 %v0_d20c, i32* @r0, align 4
  %v2_d210 = call i32 @function_d3d4(i32 %v0_d20c, i32 20)
  %v3_d210 = trunc i32 %v2_d210 to i8
  store i32 %v2_d210, i32* %r0.global-to-local, align 4
  %v4_d214 = sdiv i32 %v2_d210, 256
  store i32 %v4_d214, i32* %r3.global-to-local, align 4
  %v1_d218 = trunc i32 %v4_d214 to i8
  %v2_d218 = load i32, i32* @r4, align 4
  %v3_d218 = add i32 %v2_d218, 11
  %v4_d218 = inttoptr i32 %v3_d218 to i8*
  store i8 %v1_d218, i8* %v4_d218, align 1
  %v3_d21c = load i32, i32* @r4, align 4
  %v4_d21c = add i32 %v3_d21c, 10
  %v5_d21c = inttoptr i32 %v4_d21c to i8*
  store i8 %v3_d210, i8* %v5_d21c, align 1
  %v0_d220 = load i32, i32* @r7, align 4
  %v1_d220 = trunc i32 %v0_d220 to i8
  %v2_d220 = load i32, i32* @r5, align 4
  %v3_d220 = add i32 %v2_d220, 6
  %v4_d220 = inttoptr i32 %v3_d220 to i8*
  store i8 %v1_d220, i8* %v4_d220, align 1
  %v0_d224 = load i32, i32* @r7, align 4
  %v1_d224 = trunc i32 %v0_d224 to i8
  %v2_d224 = load i32, i32* @r5, align 4
  %v3_d224 = add i32 %v2_d224, 7
  %v4_d224 = inttoptr i32 %v3_d224 to i8*
  store i8 %v1_d224, i8* %v4_d224, align 1
  %v0_d228 = load i32, i32* @r4, align 4
  %v1_d228 = add i32 %v0_d228, 24
  %v2_d228 = inttoptr i32 %v1_d228 to i8*
  %v3_d228 = load i8, i8* %v2_d228, align 1
  %v4_d228 = zext i8 %v3_d228 to i32
  store i32 %v4_d228, i32* %r3.global-to-local, align 4
  %v1_d22c = add i32 %v0_d228, 25
  %v2_d22c = inttoptr i32 %v1_d22c to i8*
  %v3_d22c = load i8, i8* %v2_d22c, align 1
  %v4_d22c = zext i8 %v3_d22c to i32
  %v0_d230 = load i32, i32* @r5, align 4
  store i32 %v0_d230, i32* @r1, align 4
  %v4_d234 = mul nuw nsw i32 %v4_d22c, 256
  %v5_d234 = or i32 %v4_d234, %v4_d228
  store i32 %v5_d234, i32* %r2.global-to-local, align 4
  store i32 %v0_d228, i32* %r0.global-to-local, align 4
  %v0_d23c = load i32, i32* @fp, align 4
  store i32 %v0_d23c, i32* %r3.global-to-local, align 4
  %v4_d240 = call i32 @function_d430(i32 %v0_d228, i32 %v0_d230, i32 %v5_d234, i32 %v0_d23c)
  %v5_d240 = trunc i32 %v4_d240 to i8
  store i32 %v4_d240, i32* %r0.global-to-local, align 4
  %v3_d244 = load i32, i32* %stack_var_-40, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v5_d250 = mul i32 %v3_d244, 24
  store i32 %v5_d250, i32* %lr.global-to-local, align 4
  %v4_d25478 = udiv i32 %v4_d240, 256
  %v1_d258 = trunc i32 %v4_d25478 to i8
  %v2_d258 = load i32, i32* @r5, align 4
  %v3_d258 = add i32 %v2_d258, 7
  %v4_d258 = inttoptr i32 %v3_d258 to i8*
  store i8 %v1_d258, i8* %v4_d258, align 1
  store i32 %stack_var_-2188.0, i32* %r3.global-to-local, align 4
  %v0_d260 = load i32, i32* %lr.global-to-local, align 4
  %v1_d260 = load i32, i32* %r2.global-to-local, align 4
  %v2_d260 = add i32 %v1_d260, %v0_d260
  store i32 %v2_d260, i32* %lr.global-to-local, align 4
  %v3_d264 = load i32, i32* @r5, align 4
  %v4_d264 = add i32 %v3_d264, 6
  %v5_d264 = inttoptr i32 %v4_d264 to i8*
  store i8 %v5_d240, i8* %v5_d264, align 1
  %v0_d268 = load i32, i32* %r3.global-to-local, align 4
  %v1_d268 = load i32, i32* %lr.global-to-local, align 4
  %v2_d268 = add i32 %v1_d268, 4
  %v3_d268 = inttoptr i32 %v2_d268 to i32*
  store i32 %v0_d268, i32* %v3_d268, align 4
  %v0_d26c = load i32, i32* @r4, align 4
  %v1_d26c = add i32 %v0_d26c, 20
  %v2_d26c = inttoptr i32 %v1_d26c to i32*
  %v3_d26c = load i32, i32* %v2_d26c, align 4
  %v3_d270 = udiv i32 %v3_d26c, 65536
  store i32 %v3_d270, i32* %r3.global-to-local, align 4
  %v3_d27417 = udiv i32 %v3_d26c, 16777216
  %v1_d278 = trunc i32 %v3_d27417 to i8
  %v2_d278 = load i32, i32* %lr.global-to-local, align 4
  %v3_d278 = add i32 %v2_d278, 3
  %v4_d278 = inttoptr i32 %v3_d278 to i8*
  store i8 %v1_d278, i8* %v4_d278, align 1
  %v0_d27c = load i32, i32* %r3.global-to-local, align 4
  %v1_d27c = trunc i32 %v0_d27c to i8
  %v2_d27c = load i32, i32* %lr.global-to-local, align 4
  %v3_d27c = add i32 %v2_d27c, 2
  %v4_d27c = inttoptr i32 %v3_d27c to i8*
  store i8 %v1_d27c, i8* %v4_d27c, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d288 = load i32, i32* @r4, align 4
  store i32 %v0_d288, i32* %r1.global-to-local, align 4
  store i32 %v3_ce98, i32* %r0.global-to-local, align 4
  store i32 %v1_d1b4, i32* %r2.global-to-local, align 4
  %v0_d294 = load i32, i32* %lr.global-to-local, align 4
  %v4_d294 = inttoptr i32 %v0_d294 to %sockaddr*
  %v7_d29c = inttoptr i32 %v0_d288 to i32*
  %v9_d29c = call i32 @sendto(i32 %v3_ce98, i32* %v7_d29c, i32 %v1_d1b4, i32 16384, %sockaddr* %v4_d294, i32 16)
  %v3_d2a0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d2a0, i32* %r3.global-to-local, align 4
  store i32 %v1_cc10, i32* %r5.global-to-local, align 4
  %v1_d2a8 = add i32 %v3_d2a0, 1
  store i32 %v1_d2a8, i32* %r0.global-to-local, align 4
  %v9_d2ac = icmp eq i32 %v1_cc10, %v1_d2a8
  store i1 %v9_d2ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d2a8, i32* %stack_var_-40, align 4
  %v7_d2b4 = icmp sgt i32 %v1_cc10, %v1_d2a8
  br i1 %v7_d2b4, label %dec_label_pc_d1f0.dec_label_pc_d2b8_crit_edge, label %dec_label_pc_d354

dec_label_pc_d1f0.dec_label_pc_d2b8_crit_edge:    ; preds = %dec_label_pc_d1f0
  %v1_d2c4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d2b8

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d1f0.dec_label_pc_d2b8_crit_edge, %dec_label_pc_d1a4
  %v1_d1d0 = phi i32 [ %v1_d2c4.pre, %dec_label_pc_d1f0.dec_label_pc_d2b8_crit_edge ], [ 65535, %dec_label_pc_d1a4 ]
  %v1_d2c0 = phi i32 [ %v1_d2a8, %dec_label_pc_d1f0.dec_label_pc_d2b8_crit_edge ], [ 0, %dec_label_pc_d1a4 ]
  store i32 %v4_cc38, i32* %lr.global-to-local, align 4
  store i32 %v3_cf00, i32* %r2.global-to-local, align 4
  %v4_d2c0 = mul i32 %v1_d2c0, 4
  %v5_d2c0 = add i32 %v4_d2c0, %v4_cc38
  %v6_d2c0 = inttoptr i32 %v5_d2c0 to i32*
  %v7_d2c0 = load i32, i32* %v6_d2c0, align 4
  store i32 %v7_d2c0, i32* @r4, align 4
  %v9_d2c4 = icmp eq i32 %v3_cf00, %v1_d1d0
  store i1 %v9_d2c4, i1* %cpsr_z.global-to-local, align 1
  %v1_d2c8 = add i32 %v7_d2c0, 20
  store i32 %v1_d2c8, i32* @r5, align 4
  %v1_d2cc = add i32 %v7_d2c0, 41
  store i32 %v1_d2cc, i32* @r6, align 4
  %v1_d2d0 = add i32 %v7_d2c0, 28
  store i32 %v1_d2d0, i32* @sl, align 4
  br i1 %v9_d2c4, label %dec_label_pc_d2d8, label %dec_label_pc_d1cc

dec_label_pc_d2d8:                                ; preds = %dec_label_pc_d2b8
  %v0_d2d8 = call i32 @function_ef90()
  %v1_d2d8 = trunc i32 %v0_d2d8 to i8
  store i32 %v0_d2d8, i32* %r0.global-to-local, align 4
  %v4_d2dc79 = udiv i32 %v0_d2d8, 256
  %v1_d2e0 = trunc i32 %v4_d2dc79 to i8
  %v2_d2e0 = load i32, i32* @r4, align 4
  %v3_d2e0 = add i32 %v2_d2e0, 5
  %v4_d2e0 = inttoptr i32 %v3_d2e0 to i8*
  store i8 %v1_d2e0, i8* %v4_d2e0, align 1
  store i32 %v3_cf04, i32* %r3.global-to-local, align 4
  %v1_d2e8 = load i32, i32* @r8, align 4
  %v9_d2e8 = icmp eq i32 %v3_cf04, %v1_d2e8
  store i1 %v9_d2e8, i1* %cpsr_z.global-to-local, align 1
  %v3_d2ec = load i32, i32* @r4, align 4
  %v4_d2ec = add i32 %v3_d2ec, 4
  %v5_d2ec = inttoptr i32 %v4_d2ec to i8*
  store i8 %v1_d2d8, i8* %v5_d2ec, align 1
  %v0_d2f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d2f0, label %dec_label_pc_d2f4, label %dec_label_pc_d2d8.dec_label_pc_d1d8_crit_edge

dec_label_pc_d2d8.dec_label_pc_d1d8_crit_edge:    ; preds = %dec_label_pc_d2d8
  %v1_d1dc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d1d8

dec_label_pc_d2f4:                                ; preds = %dec_label_pc_d2d8, %dec_label_pc_d1cc
  %v0_d2f4 = call i32 @function_ef90()
  %v1_d2f4 = trunc i32 %v0_d2f4 to i8
  store i32 %v0_d2f4, i32* %r0.global-to-local, align 4
  store i32 %v3_cf08, i32* %ip.global-to-local, align 4
  %v4_d2fc = sdiv i32 %v0_d2f4, 256
  store i32 %v4_d2fc, i32* %r3.global-to-local, align 4
  %v1_d300 = load i32, i32* @r8, align 4
  %v9_d300 = icmp eq i32 %v3_cf08, %v1_d300
  store i1 %v9_d300, i1* %cpsr_z.global-to-local, align 1
  %v3_d304 = load i32, i32* @r4, align 4
  %v4_d304 = add i32 %v3_d304, 20
  %v5_d304 = inttoptr i32 %v4_d304 to i8*
  store i8 %v1_d2f4, i8* %v5_d304, align 1
  %v0_d308 = load i32, i32* %r3.global-to-local, align 4
  %v1_d308 = trunc i32 %v0_d308 to i8
  %v2_d308 = load i32, i32* @r5, align 4
  %v3_d308 = add i32 %v2_d308, 1
  %v4_d308 = inttoptr i32 %v3_d308 to i8*
  store i8 %v1_d308, i8* %v4_d308, align 1
  %v0_d30c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d30c, label %dec_label_pc_d310, label %dec_label_pc_d2f4.dec_label_pc_d1e4_crit_edge

dec_label_pc_d2f4.dec_label_pc_d1e4_crit_edge:    ; preds = %dec_label_pc_d2f4
  %v1_d1e8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d1e4

dec_label_pc_d310:                                ; preds = %dec_label_pc_d2f4, %dec_label_pc_d1d8
  %v0_d310 = call i32 @function_ef90()
  %v1_d310 = trunc i32 %v0_d310 to i8
  store i32 %v0_d310, i32* %r0.global-to-local, align 4
  store i32 %v3_cf0c, i32* %lr.global-to-local, align 4
  %v4_d318 = sdiv i32 %v0_d310, 256
  store i32 %v4_d318, i32* %r3.global-to-local, align 4
  %v1_d31c = load i32, i32* @r8, align 4
  %v9_d31c = icmp eq i32 %v3_cf0c, %v1_d31c
  store i1 %v9_d31c, i1* %cpsr_z.global-to-local, align 1
  %v1_d320 = trunc i32 %v4_d318 to i8
  %v2_d320 = load i32, i32* @r5, align 4
  %v3_d320 = add i32 %v2_d320, 3
  %v4_d320 = inttoptr i32 %v3_d320 to i8*
  store i8 %v1_d320, i8* %v4_d320, align 1
  %v3_d324 = load i32, i32* @r5, align 4
  %v4_d324 = add i32 %v3_d324, 2
  %v5_d324 = inttoptr i32 %v4_d324 to i8*
  store i8 %v1_d310, i8* %v5_d324, align 1
  %v0_d328 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d328, label %dec_label_pc_d32c, label %dec_label_pc_d1f0

dec_label_pc_d32c:                                ; preds = %dec_label_pc_d310, %dec_label_pc_d1e4
  %v0_d32c = call i32 @function_ef90()
  %v1_d32c = trunc i32 %v0_d32c to i8
  store i32 %v0_d32c, i32* %r0.global-to-local, align 4
  %v4_d330 = sdiv i32 %v0_d32c, 256
  store i32 %v4_d330, i32* %r3.global-to-local, align 4
  %v3_d334 = load i32, i32* @r4, align 4
  %v4_d334 = add i32 %v3_d334, 28
  %v5_d334 = inttoptr i32 %v4_d334 to i8*
  store i8 %v1_d32c, i8* %v5_d334, align 1
  %v0_d338 = load i32, i32* %r3.global-to-local, align 4
  %v1_d338 = trunc i32 %v0_d338 to i8
  %v2_d338 = load i32, i32* @sl, align 4
  %v3_d338 = add i32 %v2_d338, 1
  %v4_d338 = inttoptr i32 %v3_d338 to i8*
  store i8 %v1_d338, i8* %v4_d338, align 1
  br label %dec_label_pc_d1f0

dec_label_pc_d340:                                ; preds = %dec_label_pc_cea8
  store i32 %v3_ce98, i32* %r0.global-to-local, align 4
  %v1_d344 = call i32 @close(i32 %v3_ce98)
  store i32 %v1_d344, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d348

dec_label_pc_d348:                                ; preds = %dec_label_pc_d354, %dec_label_pc_ce80, %dec_label_pc_ce68, %dec_label_pc_d340
  %v29_d350 = phi i32 [ -1, %dec_label_pc_ce80 ], [ %v2_ce74, %dec_label_pc_ce68 ], [ %v1_d344, %dec_label_pc_d340 ], [ %v2_d358, %dec_label_pc_d354 ]
  store i32 %v3_cc04, i32* %r4.global-to-local, align 4
  store i32 %v6_cc04, i32* %r5.global-to-local, align 4
  store i32 %v9_cc04, i32* %r6.global-to-local, align 4
  store i32 %v15_cc04, i32* %r8.global-to-local, align 4
  store i32 %v21_cc04, i32* %sl.global-to-local, align 4
  store i32 %v24_cc04, i32* %fp.global-to-local, align 4
  ret i32 %v29_d350

dec_label_pc_d354.critedge:                       ; preds = %dec_label_pc_ced4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_d354

dec_label_pc_d354:                                ; preds = %dec_label_pc_d1f0, %dec_label_pc_d354.critedge, %dec_label_pc_d190
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d358 = call i32 @time(i32* null)
  store i32 %v2_d358, i32* %r0.global-to-local, align 4
  store i32 %v2_ce74, i32* %ip.global-to-local, align 4
  %v9_d360 = icmp eq i32 %v2_ce74, %v2_d358
  store i1 %v9_d360, i1* %cpsr_z.global-to-local, align 1
  %v6_d364 = icmp slt i32 %v2_ce74, %v2_d358
  br i1 %v6_d364, label %dec_label_pc_d348, label %dec_label_pc_d190

dec_label_pc_d36c:                                ; preds = %dec_label_pc_ce24, %bb130
  %v0_ce2c.lcssa = phi i32 [ %v1_cdf8, %dec_label_pc_ce24 ], [ %v0_ce2c, %bb130 ]
  %v2_d36c = sub i32 %v0_ce2c.lcssa, %v4_cdb0
  store i32 %v2_d36c, i32* %r2.global-to-local, align 4
  store i32 %v2_cde8, i32* %r1.global-to-local, align 4
  store i32 %v2_cdd8, i32* %r0.global-to-local, align 4
  %v3_d378 = call i32 @function_127a8(i32 %v2_cdd8, i32 %v2_cde8, i32 %v2_d36c)
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp142 = bitcast i32* %stack_var_-72 to i8*
  store i32 %v2_cdd8, i32* %r0.global-to-local, align 4
  %v2_d384 = load i32, i32* %r4.global-to-local, align 4
  %v3_d384 = inttoptr i32 %v2_d384 to i8*
  store i8 0, i8* %v3_d384, align 1
  %v3_d388 = call i32 @inet_addr(i8* %tmp142)
  store i32 %v3_d388, i32* %r0.global-to-local, align 4
  %sext41 = mul i32 %v3_d388, 16777216
  %phitmp = sdiv i32 %sext41, 16777216
  br label %dec_label_pc_ce68

dec_label_pc_d394:                                ; preds = %dec_label_pc_ce3c
  store i32 104859200, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ce68

dec_label_pc_d3a4:                                ; preds = %dec_label_pc_ce3c
  store i32 134744072, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ce68

dec_label_pc_d3b8:                                ; preds = %dec_label_pc_ce3c
  store i32 33686020, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ce68

; uselistorder directives
  uselistorder i32 %v2_d358, { 1, 2, 3, 0 }
  uselistorder i32 %v0_d32c, { 0, 2, 1 }
  uselistorder i32 %v4_d318, { 1, 0 }
  uselistorder i32 %v0_d310, { 0, 2, 1 }
  uselistorder i32 %v0_d2f4, { 0, 2, 1 }
  uselistorder i32 %v0_d2d8, { 0, 2, 1 }
  uselistorder i32 %v7_d2c0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_d1d0, { 2, 1, 0 }
  uselistorder i32 %v1_d2a8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_d240, { 0, 2, 1 }
  uselistorder i32 %v0_d228, { 1, 0, 2, 3 }
  uselistorder i32 %v4_d214, { 1, 0 }
  uselistorder i32 %v2_d210, { 0, 2, 1 }
  uselistorder i32 %v1_d1b4, { 1, 0, 2 }
  uselistorder i32 %v1_d144, { 0, 2, 1 }
  uselistorder i32 %v1_d140, { 1, 0 }
  uselistorder i32 %v2_d138, { 1, 0 }
  uselistorder i32 %v1_d10c, { 2, 1, 4, 0, 3, 6, 5 }
  uselistorder i32 %v3_cfb0, { 1, 0 }
  uselistorder i32 %v3_cfa8, { 1, 0 }
  uselistorder i32 %v1_cf60, { 1, 0 }
  uselistorder i32 %v1_cf58, { 1, 0 }
  uselistorder i32 %v1_cf3c, { 1, 0 }
  uselistorder i32 %v3_cf34, { 1, 0 }
  uselistorder i32 %v1_cef8, { 1, 0 }
  uselistorder i32 %v3_ce98, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 %v2_ce84, { 0, 6, 1, 7, 3, 5, 8, 4, 2, 9 }
  uselistorder i32 %v2_ce74, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_ce70, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2188.0, { 1, 0 }
  uselistorder i32 %v1_ce40, { 1, 0 }
  uselistorder i32 %v0_ce3c, { 1, 0 }
  uselistorder i32 %v1_ce34, { 1, 0 }
  uselistorder i32 %v1_ce2c, { 1, 2, 0 }
  uselistorder i1 %v7_ce18, { 1, 0 }
  uselistorder i32 %v1_ce14, { 1, 0, 2 }
  uselistorder i1 %v8_ce0c, { 1, 0 }
  uselistorder i1 %v7_ce08, { 1, 0 }
  uselistorder i32 %v1_cdfc, { 1, 0 }
  uselistorder i8 %v2_cdf0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_cdf4, { 1, 0 }
  uselistorder i32 %v0_ce14, { 1, 2, 3, 0 }
  uselistorder i32 %v2_cde8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_cddc, { 1, 0, 2 }
  uselistorder i32 %v2_cdd8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_cdc8, { 1, 0, 2, 5, 3, 4 }
  uselistorder i32 %v4_cdb0, { 6, 5, 7, 4, 3, 1, 2, 0, 8 }
  uselistorder i32 %v0_cd64, { 1, 0, 2, 3 }
  uselistorder i32 %v6_cd04, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v6_cce8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v6_ccd0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32 %v1_ccb8, { 1, 2, 0 }
  uselistorder i32 %v7_cc74, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_cc50, { 1, 2, 0 }
  uselistorder i32 %v4_cc38, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_cc10, { 3, 4, 5, 2, 7, 8, 6, 9, 1, 0 }
  uselistorder i32* %stack_var_-40, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 1, 12, 10, 11 }
  uselistorder i32* %r4.global-to-local, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 2, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 40, 39, 41, 43, 42, 45, 44, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 7, 6, 8, 9, 10, 12, 11, 13, 15, 14, 16, 17, 18, 19, 27, 20, 21, 22, 23, 24, 25, 26, 31, 28, 29, 30, 32, 34, 33, 36, 35, 37, 38, 39, 40, 42, 41, 43, 44, 46, 45, 47, 49, 48, 51, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 25, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @function_8fc8, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 88, 89, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder label %dec_label_pc_d354, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d348, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_d1f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d190, { 1, 0 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb139, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %.thread26, { 1, 0 }
  uselistorder label %dec_label_pc_ce2c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ce24, { 1, 0 }
  uselistorder label %dec_label_pc_ce18, { 1, 0 }
}

define i32 @function_d3cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_d3cc:
  call void @__pseudo_cond_branch(i1 false, i32 11148540)
  %v0_d3d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d3d0, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_d3cc
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_d3cc, %bb
  %v10_d3d0 = load i32, i32* @r0, align 4
  ret i32 %v10_d3d0

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_d3d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d3d4:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_d404, label %dec_label_pc_d3e0

dec_label_pc_d3e0:                                ; preds = %dec_label_pc_d3d4
  %v0_d3e4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_d3e4

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d3e0
  %v0_d3f8 = phi i32 [ %v2_d3f8, %dec_label_pc_d3e4 ], [ 0, %dec_label_pc_d3e0 ]
  %v0_d3ec = phi i32 [ %v1_d3ec, %dec_label_pc_d3e4 ], [ %arg1, %dec_label_pc_d3e0 ]
  %v0_d3fc = phi i32 [ %v1_d3fc, %dec_label_pc_d3e4 ], [ %v0_d3e4.pre, %dec_label_pc_d3e0 ]
  %v1_d3e4 = inttoptr i32 %v0_d3fc to i8*
  %v2_d3e4 = load i8, i8* %v1_d3e4, align 1
  %v3_d3e4 = zext i8 %v2_d3e4 to i32
  %v1_d3e8 = add i32 %v0_d3fc, 1
  %v2_d3e8 = inttoptr i32 %v1_d3e8 to i8*
  %v3_d3e8 = load i8, i8* %v2_d3e8, align 1
  %v4_d3e8 = zext i8 %v3_d3e8 to i32
  %v1_d3ec = add i32 %v0_d3ec, -2
  %v4_d3f0 = mul nuw nsw i32 %v4_d3e8, 256
  %v5_d3f0 = or i32 %v4_d3f0, %v3_d3e4
  %v2_d3f8 = add i32 %v5_d3f0, %v0_d3f8
  %v1_d3fc = add i32 %v0_d3fc, 2
  store i32 %v1_d3fc, i32* @r0, align 4
  %v1_d3ec.cmp = icmp ugt i32 %v1_d3ec, 1
  br i1 %v1_d3ec.cmp, label %dec_label_pc_d3e4, label %dec_label_pc_d404

dec_label_pc_d404:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d3d4
  %v1_d40c = phi i32 [ 0, %dec_label_pc_d3d4 ], [ %v2_d3f8, %dec_label_pc_d3e4 ]
  %v0_d404 = phi i32 [ %arg1, %dec_label_pc_d3d4 ], [ %v1_d3ec, %dec_label_pc_d3e4 ]
  %v7_d404 = icmp eq i32 %v0_d404, 1
  br i1 %v7_d404, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_d404
  %v1_d408 = load i32, i32* @r0, align 4
  %v2_d408 = inttoptr i32 %v1_d408 to i8*
  %v3_d408 = load i8, i8* %v2_d408, align 1
  %v4_d408 = zext i8 %v3_d408 to i32
  %v3_d40c = add i32 %v1_d40c, %v4_d408
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d404, %bb
  %v0_d410 = phi i32 [ %v1_d40c, %dec_label_pc_d404 ], [ %v3_d40c, %bb ]
  %v3_d414 = urem i32 %v0_d410, 65536
  %v4_d418 = udiv i32 %v0_d410, 65536
  %v5_d418 = add nuw nsw i32 %v4_d418, %v3_d414
  %v4_d41c = udiv i32 %v5_d418, 65536
  %v5_d41c = add nuw nsw i32 %v4_d41c, %v5_d418
  %v1_d420 = urem i32 %v5_d41c, 65536
  %v3_d428 = xor i32 %v1_d420, 65535
  ret i32 %v3_d428

; uselistorder directives
  uselistorder i32 %v5_d418, { 1, 0 }
  uselistorder i32 %v1_d3fc, { 1, 0 }
  uselistorder i32 %v1_d3ec, { 1, 0, 2 }
  uselistorder i32 %v0_d3fc, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_d430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d430:
  %v3_d440 = urem i32 %arg2, 65536
  %v1_d444 = add i32 %arg1, 12
  %v1_d448 = inttoptr i32 %v1_d444 to i32*
  %v2_d448 = load i32, i32* %v1_d448, align 4
  %v3_d448 = add i32 %arg1, 16
  %v4_d448 = inttoptr i32 %v3_d448 to i32*
  %v5_d448 = load i32, i32* %v4_d448, align 4
  %v7_d44c = icmp sgt i32 %arg3, 1
  br i1 %v7_d44c, label %dec_label_pc_d458.preheader, label %dec_label_pc_d478

dec_label_pc_d458.preheader:                      ; preds = %dec_label_pc_d430
  %v0_d458.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_d458

dec_label_pc_d458:                                ; preds = %dec_label_pc_d458.preheader, %dec_label_pc_d458
  %v0_d46c = phi i32 [ 0, %dec_label_pc_d458.preheader ], [ %v2_d46c, %dec_label_pc_d458 ]
  %v0_d460 = phi i32 [ %arg3, %dec_label_pc_d458.preheader ], [ %v1_d460, %dec_label_pc_d458 ]
  %v0_d470 = phi i32 [ %v0_d458.pre, %dec_label_pc_d458.preheader ], [ %v1_d470, %dec_label_pc_d458 ]
  %v1_d458 = inttoptr i32 %v0_d470 to i8*
  %v2_d458 = load i8, i8* %v1_d458, align 1
  %v3_d458 = zext i8 %v2_d458 to i32
  %v1_d45c = add i32 %v0_d470, 1
  %v2_d45c = inttoptr i32 %v1_d45c to i8*
  %v3_d45c = load i8, i8* %v2_d45c, align 1
  %v4_d45c = zext i8 %v3_d45c to i32
  %v1_d460 = add nsw i32 %v0_d460, -2
  %v4_d464 = mul nuw nsw i32 %v4_d45c, 256
  %v5_d464 = or i32 %v4_d464, %v3_d458
  %v2_d46c = add i32 %v5_d464, %v0_d46c
  %v1_d470 = add i32 %v0_d470, 2
  store i32 %v1_d470, i32* @r1, align 4
  %v8_d474 = icmp sgt i32 %v1_d460, 1
  br i1 %v8_d474, label %dec_label_pc_d458, label %dec_label_pc_d478

dec_label_pc_d478:                                ; preds = %dec_label_pc_d458, %dec_label_pc_d430
  %v1_d480 = phi i32 [ 0, %dec_label_pc_d430 ], [ %v2_d46c, %dec_label_pc_d458 ]
  %v0_d478 = phi i32 [ %arg3, %dec_label_pc_d430 ], [ %v1_d460, %dec_label_pc_d458 ]
  %v7_d478 = icmp eq i32 %v0_d478, 1
  br i1 %v7_d478, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_d478
  %v1_d47c = load i32, i32* @r1, align 4
  %v2_d47c = inttoptr i32 %v1_d47c to i8*
  %v3_d47c = load i8, i8* %v2_d47c, align 1
  %v4_d47c = zext i8 %v3_d47c to i32
  %v3_d480 = add i32 %v4_d47c, %v1_d480
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d478, %bb
  %v0_d4a4 = phi i32 [ %v1_d480, %dec_label_pc_d478 ], [ %v3_d480, %bb ]
  %v3_d488 = urem i32 %v2_d448, 65536
  %v1_d490 = add i32 %arg1, 9
  %v2_d490 = inttoptr i32 %v1_d490 to i8*
  %v3_d490 = load i8, i8* %v2_d490, align 1
  %v4_d490 = zext i8 %v3_d490 to i32
  %v3_d494 = urem i32 %v5_d448, 65536
  %v4_d498 = udiv i32 %v2_d448, 65536
  %v3_d4a0 = mul nuw nsw i32 %v4_d490, 256
  %v4_d4a4 = udiv i32 %v5_d448, 65536
  %v5_d4a4 = add i32 %v0_d4a4, %v4_d4a4
  %v2_d4a8 = add i32 %v5_d4a4, %v3_d4a0
  %v5_d498 = add nuw nsw i32 %v3_d488, %v3_d440
  %v2_d49c = add nuw nsw i32 %v5_d498, %v4_d498
  %v2_d4ac = add nuw nsw i32 %v2_d49c, %v3_d494
  %v2_d4b0 = add i32 %v2_d4a8, %v2_d4ac
  %tmp = icmp ult i32 %v2_d4b0, 65536
  br i1 %tmp, label %dec_label_pc_d4d0, label %dec_label_pc_d4bc

dec_label_pc_d4bc:                                ; preds = %.thread, %dec_label_pc_d4bc
  %v2_d4c41 = phi i32 [ %v2_d4c4, %dec_label_pc_d4bc ], [ %v2_d4b0, %.thread ]
  %v3_d4c82.in = phi i32 [ %v2_d4c4, %dec_label_pc_d4bc ], [ %v2_d4b0, %.thread ]
  %v3_d4c82 = udiv i32 %v3_d4c82.in, 65536
  %v3_d4c0 = urem i32 %v2_d4c41, 65536
  %v2_d4c4 = add nuw nsw i32 %v3_d4c0, %v3_d4c82
  %tmp14 = icmp ult i32 %v2_d4c4, 65536
  br i1 %tmp14, label %dec_label_pc_d4d0.loopexit, label %dec_label_pc_d4bc

dec_label_pc_d4d0.loopexit:                       ; preds = %dec_label_pc_d4bc
  br label %dec_label_pc_d4d0

dec_label_pc_d4d0:                                ; preds = %dec_label_pc_d4d0.loopexit, %.thread
  %v0_d4d0 = phi i32 [ %v2_d4c4, %dec_label_pc_d4d0.loopexit ], [ %v2_d4b0, %.thread ]
  %v1_d4d0 = urem i32 %v0_d4d0, 65536
  %v3_d4d8 = xor i32 %v1_d4d0, 65535
  ret i32 %v3_d4d8

; uselistorder directives
  uselistorder i32 %v2_d4c4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_d4b0, { 3, 0, 2, 1 }
  uselistorder i32 %v1_d480, { 1, 0 }
  uselistorder i32 %v1_d470, { 1, 0 }
  uselistorder i32 %v1_d460, { 0, 2, 1 }
  uselistorder i32 %v0_d470, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d4bc, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_d458, { 1, 0 }
}

define i32 @function_d4e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_d4e0:
  %v2_d4e4 = load i32, i32* @global_var_1ba20.112, align 4
  %v2_d4ec = call i32 @kill(i32 %v2_d4e4, i32 9)
  %v0_d4f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d4f0, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_d4e0
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_d4e0, %bb
  ret i32 %v2_d4ec

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_d4f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_d4f4:
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-581 = alloca i8, align 1
  %stack_var_-8773 = alloca i32, align 4
  %stack_var_-4677 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d4f4 = load i32, i32* @r4, align 4
  store i32 %v3_d4f4, i32* %stack_var_-36, align 4
  %v6_d4f4 = load i32, i32* @r5, align 4
  %v9_d4f4 = load i32, i32* @r6, align 4
  %v12_d4f4 = load i32, i32* @r7, align 4
  %v15_d4f4 = load i32, i32* @r8, align 4
  %v21_d4f4 = load i32, i32* @sl, align 4
  %v2_d508 = ptrtoint i32* %stack_var_-4677 to i32
  store i32 %v2_d508, i32* @sl, align 4
  %v3_d510 = mul i32 %arg1, 65536
  store i32 %v3_d510, i32* @r5, align 4
  %v2_d51c = ptrtoint i32* %stack_var_-8773 to i32
  %v4_d528 = call i32* @memset(i32* nonnull %stack_var_-4677, i32 0, i32 4096)
  %v0_d53c = load i32, i32* @r5, align 4
  %v3_d53c = udiv i32 %v0_d53c, 65536
  store i32 %v3_d53c, i32* %r4.global-to-local, align 4
  %v4_d540 = call i32* @memset(i32* nonnull %stack_var_-8773, i32 0, i32 4096)
  %v2_d544 = ptrtoint i8* %stack_var_-581 to i32
  store i32 %v2_d544, i32* @r6, align 4
  %v1_d54c = mul nuw nsw i32 %v3_d53c, 256
  %v3_d558 = and i32 %v1_d54c, 65280
  store i32 %v3_d558, i32* %r4.global-to-local, align 4
  %v2_d560 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_d560, i32* %sb.global-to-local, align 4
  %v3_d564 = bitcast i8* %stack_var_-581 to i32*
  %v4_d564 = call i32* @memset(i32* %v3_d564, i32 0, i32 513)
  %v2_d568 = ptrtoint i8* %stack_var_-68 to i32
  store i32 %v2_d568, i32* %sb.global-to-local, align 4
  %v0_d570 = load i32, i32* %r4.global-to-local, align 4
  %v1_d570 = load i32, i32* @r5, align 4
  %v4_d570 = udiv i32 %v1_d570, 16777216
  %v5_d570 = or i32 %v4_d570, %v0_d570
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_d590 = trunc i32 %v5_d570 to i8
  %v4_d590 = call i32 @function_12b90(i8 %v3_d590, i32 16, i32 %v2_d568)
  %v2_d598 = call i32 @function_1272c(i8* nonnull %stack_var_-68)
  %v7_d59c = icmp eq i32 %v2_d598, 2
  br i1 %v7_d59c, label %dec_label_pc_da38, label %dec_label_pc_d5a4

dec_label_pc_d5a4:                                ; preds = %dec_label_pc_d4f4, %dec_label_pc_da38
  %v1_d5a8 = call i32 @function_11e4c(i32 6)
  %v1_d5b0 = call i32 @function_11e4c(i32 7)
  %v1_d5b8 = call i32 @function_11e4c(i32 8)
  %v0_d5bc = load i32, i32* @r4, align 4
  %v2_d5c4 = inttoptr i32 %v0_d5bc to i32*
  %v3_d5c4 = call i32 @function_11d68(i32 6, i32* %v2_d5c4)
  %v4_d5c4 = inttoptr i32 %v3_d5c4 to i8*
  %v0_d5c8 = load i32, i32* @r4, align 4
  %v4_d5cc = call i32 (i8*, i32, ...) @open(i8* %v4_d5c4, i32 %v0_d5c8)
  %v2_d5d0 = icmp eq i32 %v4_d5cc, -1
  store i32 %v4_d5cc, i32* @r8, align 4
  br i1 %v2_d5d0, label %dec_label_pc_d9f8, label %dec_label_pc_d5dc.preheader

dec_label_pc_d5dc.preheader:                      ; preds = %dec_label_pc_d5a4
  %v4_d5e854 = call i32 @function_12984(i32* %v3_d564, i32 512, i32 %v4_d5cc)
  %v2_d5ec56 = icmp eq i32 %v4_d5e854, 0
  br i1 %v2_d5ec56, label %dec_label_pc_d77c.loopexit, label %dec_label_pc_d5f4.lr.ph

dec_label_pc_d5f4.lr.ph:                          ; preds = %dec_label_pc_d5dc.preheader
  %v2_d63c = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_d5f4

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d5f4.lr.ph, %dec_label_pc_d5dc.backedge
  %v3_d5f8 = load i8, i8* %stack_var_-581, align 1
  %v4_d5f8 = sext i8 %v3_d5f8 to i32
  %v2_d5fc = icmp eq i8 %v3_d5f8, 0
  br i1 %v2_d5fc, label %bb123, label %bb

bb:                                               ; preds = %dec_label_pc_d5f4
  %v8_d600 = icmp eq i8 %v3_d5f8, 58
  br i1 %v8_d600, label %.thread6, label %dec_label_pc_d614

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_d62c

bb123:                                            ; preds = %dec_label_pc_d5f4
  br label %dec_label_pc_d62c

dec_label_pc_d614:                                ; preds = %bb
  %v1_d61c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_d618

dec_label_pc_d618:                                ; preds = %bb124, %dec_label_pc_d614
  %v0_d618 = phi i32 [ %v1_d618, %bb124 ], [ 0, %dec_label_pc_d614 ]
  %v1_d618 = add i32 %v0_d618, 1
  %v2_d61c = add i32 %v1_d618, %v1_d61c.pre
  %v3_d61c = inttoptr i32 %v2_d61c to i8*
  %v4_d61c = load i8, i8* %v3_d61c, align 1
  %v6_d61c = zext i8 %v4_d61c to i32
  %v2_d620 = icmp eq i8 %v4_d61c, 0
  br i1 %v2_d620, label %dec_label_pc_d62c, label %bb124

bb124:                                            ; preds = %dec_label_pc_d618
  %v8_d624 = icmp eq i8 %v4_d61c, 58
  br i1 %v8_d624, label %dec_label_pc_d62c, label %dec_label_pc_d618

dec_label_pc_d62c:                                ; preds = %dec_label_pc_d618, %bb124, %bb123, %.thread6
  %v1_d658 = phi i32 [ 0, %.thread6 ], [ 0, %bb123 ], [ %v1_d618, %bb124 ], [ %v1_d618, %dec_label_pc_d618 ]
  %v0_d62c = phi i32 [ %v4_d5f8, %.thread6 ], [ %v4_d5f8, %bb123 ], [ %v6_d61c, %bb124 ], [ %v6_d61c, %dec_label_pc_d618 ]
  %v2_d62c = icmp eq i32 %v0_d62c, 0
  br i1 %v2_d62c, label %dec_label_pc_d5dc.backedge, label %dec_label_pc_d634

dec_label_pc_d5dc.backedge:                       ; preds = %dec_label_pc_d62c, %dec_label_pc_d704, %dec_label_pc_d750, %dec_label_pc_d678
  %v0_d5e4 = load i32, i32* @r8, align 4
  %v4_d5e8 = call i32 @function_12984(i32* %v3_d564, i32 512, i32 %v0_d5e4)
  %v2_d5ec = icmp eq i32 %v4_d5e8, 0
  br i1 %v2_d5ec, label %dec_label_pc_d77c.loopexit, label %dec_label_pc_d5f4

dec_label_pc_d634:                                ; preds = %dec_label_pc_d62c
  %v1_d638 = add i32 %v1_d658, 2
  %v2_d640 = add i32 %v1_d638, %v2_d63c
  %v1_d644 = add i32 %v2_d640, -545
  %v2_d644 = inttoptr i32 %v1_d644 to i8*
  %v3_d644 = load i8, i8* %v2_d644, align 1
  %v2_d648 = icmp eq i8 %v3_d644, 0
  br i1 %v2_d648, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_d634
  %v8_d64c = icmp eq i8 %v3_d644, 32
  br i1 %v8_d64c, label %.thread10, label %dec_label_pc_d658

.thread10:                                        ; preds = %bb125
  store i32 %v1_d638, i32* @r5, align 4
  br label %dec_label_pc_d678

bb126:                                            ; preds = %dec_label_pc_d634
  store i32 %v1_d638, i32* @r5, align 4
  br label %dec_label_pc_d678

dec_label_pc_d658:                                ; preds = %bb125
  %v0_d658 = load i32, i32* @r6, align 4
  %v2_d658 = add i32 %v0_d658, %v1_d658
  br label %dec_label_pc_d65c

dec_label_pc_d65c:                                ; preds = %bb127, %dec_label_pc_d658
  %v0_d66813 = phi i32 [ %v1_d668, %bb127 ], [ %v2_d658, %dec_label_pc_d658 ]
  %v1_d65c = add i32 %v0_d66813, 3
  %v2_d65c = inttoptr i32 %v1_d65c to i8*
  %v3_d65c = load i8, i8* %v2_d65c, align 1
  %v2_d660 = icmp eq i8 %v3_d65c, 0
  br i1 %v2_d660, label %.thread12, label %bb127

.thread12:                                        ; preds = %dec_label_pc_d65c
  %v1_d66814 = add i32 %v0_d66813, 1
  br label %dec_label_pc_d670

bb127:                                            ; preds = %dec_label_pc_d65c
  %v8_d664 = icmp eq i8 %v3_d65c, 32
  %v1_d668 = add i32 %v0_d66813, 1
  br i1 %v8_d664, label %dec_label_pc_d670, label %dec_label_pc_d65c

dec_label_pc_d670:                                ; preds = %bb127, %.thread12
  %v1_d66815 = phi i32 [ %v1_d66814, %.thread12 ], [ %v1_d668, %bb127 ]
  %v2_d670 = sub i32 %v1_d66815, %v0_d658
  %v1_d674 = add i32 %v2_d670, 2
  store i32 %v1_d674, i32* @r5, align 4
  br label %dec_label_pc_d678

dec_label_pc_d678:                                ; preds = %bb126, %.thread10, %dec_label_pc_d670
  %v1_d684 = phi i32 [ %v1_d638, %.thread10 ], [ %v1_d638, %bb126 ], [ %v1_d674, %dec_label_pc_d670 ]
  %v0_d678 = load i32, i32* @r6, align 4
  %v2_d678 = add i32 %v0_d678, %v1_d638
  store i32 %v2_d678, i32* @r4, align 4
  %v2_d684 = add i32 %v1_d684, %v2_d63c
  store i32 0, i32* @r7, align 4
  %v3_d690 = add i32 %v2_d684, -545
  %v4_d690 = inttoptr i32 %v3_d690 to i8*
  store i8 0, i8* %v4_d690, align 1
  %v1_d694 = inttoptr i32 %v2_d678 to i8*
  %v2_d694 = call i32 @function_1272c(i8* %v1_d694)
  store i32 %v2_d694, i32* @r1, align 4
  %v0_d6a0 = load i32, i32* @r4, align 4
  %v3_d6a4 = inttoptr i32 %v0_d6a0 to i8*
  %v4_d6a4 = call i32 @function_12a80(i8* %v3_d6a4, i32 %v2_d694, i32 %v2_d568)
  %v2_d6a8 = icmp eq i32 %v4_d6a4, -1
  br i1 %v2_d6a8, label %dec_label_pc_d5dc.backedge, label %dec_label_pc_d6c4.preheader

dec_label_pc_d6c4.preheader:                      ; preds = %dec_label_pc_d678
  %v1_d6ac = load i32, i32* @r7, align 4
  %v1_d6b0 = load i32, i32* @r6, align 4
  %v2_d6b0 = load i32, i32* @r5, align 4
  %v3_d6b0 = add i32 %v2_d6b0, %v1_d6b0
  store i32 %v1_d6ac, i32* @r4, align 4
  %v1_d6c446 = add i32 %v3_d6b0, 2
  %v2_d6c447 = inttoptr i32 %v1_d6c446 to i8*
  %v3_d6c448 = load i8, i8* %v2_d6c447, align 1
  %v2_d6c850 = icmp eq i8 %v3_d6c448, 0
  %v1_d6cc52 = add i32 %v2_d6b0, 2
  br i1 %v2_d6c850, label %dec_label_pc_d704, label %dec_label_pc_d6d4

dec_label_pc_d6d4:                                ; preds = %dec_label_pc_d6c4.preheader, %dec_label_pc_d6c4.backedge
  %v0_d70482 = phi i32 [ %v0_d70481, %dec_label_pc_d6c4.backedge ], [ %v1_d6ac, %dec_label_pc_d6c4.preheader ]
  %v0_d6ec.pr = phi i32 [ %v0_d6ec.pr67, %dec_label_pc_d6c4.backedge ], [ %v1_d6ac, %dec_label_pc_d6c4.preheader ]
  %v0_da08 = phi i32 [ %v0_da0870, %dec_label_pc_d6c4.backedge ], [ %v1_d6ac, %dec_label_pc_d6c4.preheader ]
  %v0_d6cc78 = phi i32 [ %v1_d6cc, %dec_label_pc_d6c4.backedge ], [ %v1_d6cc52, %dec_label_pc_d6c4.preheader ]
  %v0_d6fc = phi i32 [ %v0_d6c4, %dec_label_pc_d6c4.backedge ], [ %v3_d6b0, %dec_label_pc_d6c4.preheader ]
  %v1_d6d8.in = phi i8 [ %v3_d6c4, %dec_label_pc_d6c4.backedge ], [ %v3_d6c448, %dec_label_pc_d6c4.preheader ]
  %v7_d6d4 = icmp eq i8 %v1_d6d8.in, 9
  br i1 %v7_d6d4, label %.thread23, label %bb128

bb128:                                            ; preds = %dec_label_pc_d6d4
  %v8_d6d8 = icmp eq i8 %v1_d6d8.in, 32
  br i1 %v8_d6d8, label %.thread23.thread35, label %dec_label_pc_d6ec

.thread23.thread35:                               ; preds = %bb128
  br label %dec_label_pc_d6f8

.thread23:                                        ; preds = %dec_label_pc_d6d4
  br label %dec_label_pc_d6f8

dec_label_pc_d6ec:                                ; preds = %bb128
  %v7_d6ec = icmp eq i32 %v0_d6ec.pr, 1
  br i1 %v7_d6ec, label %dec_label_pc_da08, label %dec_label_pc_d6f4

dec_label_pc_d6f4:                                ; preds = %dec_label_pc_da08, %dec_label_pc_d6ec
  %v0_d6f875 = phi i32 [ %v1_da08, %dec_label_pc_da08 ], [ %v0_da08, %dec_label_pc_d6ec ]
  br label %dec_label_pc_d6f8

dec_label_pc_d6f8:                                ; preds = %.thread23, %.thread23.thread35, %dec_label_pc_d6f4
  %v0_d6f8 = phi i32 [ %v0_da08, %.thread23.thread35 ], [ %v0_da08, %.thread23 ], [ %v0_d6f875, %dec_label_pc_d6f4 ]
  %v0_d6ec.pr68 = phi i32 [ 1, %.thread23.thread35 ], [ 1, %.thread23 ], [ 0, %dec_label_pc_d6f4 ]
  %v7_d700 = icmp sgt i32 %v0_d6f8, 6
  br i1 %v7_d700, label %dec_label_pc_d704, label %dec_label_pc_d6c4.backedge

dec_label_pc_d704:                                ; preds = %dec_label_pc_d6c4.backedge, %dec_label_pc_d6f8, %dec_label_pc_d6c4.preheader
  %v1_d754 = phi i32 [ %v1_d6cc52, %dec_label_pc_d6c4.preheader ], [ %v1_d6cc, %dec_label_pc_d6c4.backedge ], [ %v0_d6cc78, %dec_label_pc_d6f8 ]
  %v0_d704 = phi i32 [ %v1_d6ac, %dec_label_pc_d6c4.preheader ], [ %v0_d70481, %dec_label_pc_d6c4.backedge ], [ %v0_d70482, %dec_label_pc_d6f8 ]
  %v2_d704 = icmp eq i32 %v0_d704, 0
  br i1 %v2_d704, label %dec_label_pc_d5dc.backedge, label %dec_label_pc_d710

dec_label_pc_d710:                                ; preds = %dec_label_pc_d704
  %v2_d718 = add i32 %v1_d754, %v2_d63c
  %v1_d71c = add i32 %v2_d718, -545
  %v2_d71c = inttoptr i32 %v1_d71c to i8*
  %v3_d71c = load i8, i8* %v2_d71c, align 1
  %v2_d720 = icmp eq i8 %v3_d71c, 0
  br i1 %v2_d720, label %dec_label_pc_d750, label %bb129

bb129:                                            ; preds = %dec_label_pc_d710
  %v8_d724 = icmp eq i8 %v3_d71c, 32
  br i1 %v8_d724, label %dec_label_pc_d750, label %dec_label_pc_d72c

dec_label_pc_d72c:                                ; preds = %bb129
  %v2_d72c = add i32 %v1_d754, %v1_d6b0
  br label %dec_label_pc_d730

dec_label_pc_d730:                                ; preds = %bb130, %dec_label_pc_d72c
  %v0_d73c28 = phi i32 [ %v1_d73c, %bb130 ], [ %v1_d754, %dec_label_pc_d72c ]
  %v0_d730 = phi i32 [ %v1_d730, %bb130 ], [ %v2_d72c, %dec_label_pc_d72c ]
  %v1_d730 = add i32 %v0_d730, 1
  %v2_d730 = inttoptr i32 %v1_d730 to i8*
  %v3_d730 = load i8, i8* %v2_d730, align 1
  %v2_d734 = icmp eq i8 %v3_d730, 0
  br i1 %v2_d734, label %.thread27, label %bb130

.thread27:                                        ; preds = %dec_label_pc_d730
  %v1_d73c29 = add i32 %v0_d73c28, 1
  br label %dec_label_pc_d744

bb130:                                            ; preds = %dec_label_pc_d730
  %v8_d738 = icmp eq i8 %v3_d730, 32
  %v1_d73c = add i32 %v0_d73c28, 1
  br i1 %v8_d738, label %dec_label_pc_d744, label %dec_label_pc_d730

dec_label_pc_d744:                                ; preds = %bb130, %.thread27
  %v1_d74c = phi i32 [ %v1_d73c29, %.thread27 ], [ %v1_d73c, %bb130 ]
  %v2_d74c = add i32 %v1_d74c, %v2_d63c
  br label %dec_label_pc_d750

dec_label_pc_d750:                                ; preds = %dec_label_pc_d710, %bb129, %dec_label_pc_d744
  %v2_d75c = phi i32 [ %v2_d718, %dec_label_pc_d710 ], [ %v2_d718, %bb129 ], [ %v2_d74c, %dec_label_pc_d744 ]
  %v2_d754 = add i32 %v1_d754, %v1_d6b0
  store i32 %v2_d754, i32* @r4, align 4
  %v3_d75c = add i32 %v2_d75c, -545
  %v4_d75c = inttoptr i32 %v3_d75c to i8*
  store i8 0, i8* %v4_d75c, align 1
  %v1_d760 = inttoptr i32 %v2_d754 to i8*
  %v2_d760 = call i32 @function_1272c(i8* %v1_d760)
  %v8_d768 = icmp sgt i32 %v2_d760, 15
  br i1 %v8_d768, label %dec_label_pc_d5dc.backedge, label %dec_label_pc_d76c

dec_label_pc_d76c:                                ; preds = %dec_label_pc_d750
  %v0_d770 = load i32, i32* @r4, align 4
  %v2_d774 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_d774, i32* @r0, align 4
  %v2_d778 = bitcast i32* %stack_var_-52 to i8*
  %v3_d778 = call i32 @function_12754(i8* %v2_d778, i32 %v0_d770)
  br label %dec_label_pc_d77c

dec_label_pc_d77c.loopexit:                       ; preds = %dec_label_pc_d5dc.backedge, %dec_label_pc_d5dc.preheader
  %.pre = ptrtoint i32* %stack_var_-52 to i32
  %.pre92 = bitcast i32* %stack_var_-52 to i8*
  br label %dec_label_pc_d77c

dec_label_pc_d77c:                                ; preds = %dec_label_pc_d77c.loopexit, %dec_label_pc_d76c
  %v1_d78c.pre-phi = phi i8* [ %.pre92, %dec_label_pc_d77c.loopexit ], [ %v2_d778, %dec_label_pc_d76c ]
  %v2_d788.pre-phi = phi i32 [ %.pre, %dec_label_pc_d77c.loopexit ], [ %v2_d774, %dec_label_pc_d76c ]
  %v0_d77c = load i32, i32* @r8, align 4
  %v1_d780 = call i32 @close(i32 %v0_d77c)
  %v2_d78c = call i32 @function_1272c(i8* %v1_d78c.pre-phi)
  store i32 %v2_d78c, i32* @r4, align 4
  %v2_d790 = icmp eq i32 %v2_d78c, 0
  br i1 %v2_d790, label %dec_label_pc_d9e0, label %dec_label_pc_d798

dec_label_pc_d798:                                ; preds = %dec_label_pc_d77c
  %v3_d7a0 = call i32 @function_11d68(i32 6, i32* null)
  %v4_d7a0 = inttoptr i32 %v3_d7a0 to i8*
  %v3_d7a4 = call %__dirstream* @opendir(i8* %v4_d7a0)
  %v5_d7a4 = ptrtoint %__dirstream* %v3_d7a4 to i32
  store i32 %v5_d7a4, i32* @r8, align 4
  %v2_d7a8 = icmp eq %__dirstream* %v3_d7a4, null
  br i1 %v2_d7a8, label %dec_label_pc_d9d8, label %dec_label_pc_d7b8.preheader

dec_label_pc_d7b8.preheader:                      ; preds = %dec_label_pc_d798
  store i32 0, i32* @r5, align 4
  %v3_d7bc41 = call %dirent* @readdir(%__dirstream* nonnull %v3_d7a4)
  %v2_d7c044 = icmp eq %dirent* %v3_d7bc41, null
  br i1 %v2_d7c044, label %dec_label_pc_d9cc, label %dec_label_pc_d7c8.preheader.lr.ph

dec_label_pc_d7c8.preheader.lr.ph:                ; preds = %dec_label_pc_d7b8.preheader
  %v2_d7f8 = bitcast i32* %stack_var_-4677 to i8*
  %tmp132 = bitcast i32* %stack_var_-8773 to i8*
  br label %dec_label_pc_d7c8.preheader

dec_label_pc_d7b8.loopexit:                       ; preds = %dec_label_pc_d7d0, %dec_label_pc_d7e4, %dec_label_pc_d84c
  %v0_d7b8 = load i32, i32* @r8, align 4
  %v1_d7b8 = inttoptr i32 %v0_d7b8 to %__dirstream*
  %v3_d7bc = call %dirent* @readdir(%__dirstream* %v1_d7b8)
  %v2_d7c0 = icmp eq %dirent* %v3_d7bc, null
  br i1 %v2_d7c0, label %dec_label_pc_d9cc, label %dec_label_pc_d7c8.preheader

dec_label_pc_d7c8.preheader:                      ; preds = %dec_label_pc_d7c8.preheader.lr.ph, %dec_label_pc_d7b8.loopexit
  %v0_d7d090.in = phi %dirent* [ %v3_d7bc41, %dec_label_pc_d7c8.preheader.lr.ph ], [ %v3_d7bc, %dec_label_pc_d7b8.loopexit ]
  br label %dec_label_pc_d7c8

dec_label_pc_d7c8:                                ; preds = %dec_label_pc_d7c8.preheader, %dec_label_pc_d9b4
  %v0_d7dc.in = phi %dirent* [ %v0_d7d090.in, %dec_label_pc_d7c8.preheader ], [ %v3_d9c0, %dec_label_pc_d9b4 ]
  %v0_d7c8 = load i32, i32* @r5, align 4
  %v2_d7c8 = icmp eq i32 %v0_d7c8, 0
  br i1 %v2_d7c8, label %dec_label_pc_d7d0, label %dec_label_pc_d9cc

dec_label_pc_d7d0:                                ; preds = %dec_label_pc_d7c8
  %v0_d7dc = ptrtoint %dirent* %v0_d7dc.in to i32
  %v1_d7d0 = add i32 %v0_d7dc, 11
  %v2_d7d0 = inttoptr i32 %v1_d7d0 to i8*
  %v3_d7d0 = load i8, i8* %v2_d7d0, align 1
  %v4_d7d0 = zext i8 %v3_d7d0 to i32
  %v1_d7d4 = add nsw i32 %v4_d7d0, -48
  store i32 %v1_d7d0, i32* @r7, align 4
  %tmp = icmp ugt i32 %v1_d7d4, 9
  br i1 %tmp, label %dec_label_pc_d7b8.loopexit, label %dec_label_pc_d7e4

dec_label_pc_d7e4:                                ; preds = %dec_label_pc_d7d0
  %v3_d7ec = call i32 @function_11d68(i32 6, i32* null)
  store i32 %v2_d508, i32* @r0, align 4
  %v3_d7f8 = call i32 @function_12754(i8* %v2_d7f8, i32 %v3_d7ec)
  %v2_d800 = call i32 @function_1272c(i8* %v2_d7f8)
  %v0_d804 = load i32, i32* @r7, align 4
  %v0_d808 = load i32, i32* @sl, align 4
  %v2_d808 = add i32 %v0_d808, %v2_d800
  store i32 %v2_d808, i32* @r0, align 4
  %v2_d80c = inttoptr i32 %v2_d808 to i8*
  %v3_d80c = call i32 @function_12754(i8* %v2_d80c, i32 %v0_d804)
  %v2_d814 = call i32 @function_1272c(i8* %v2_d7f8)
  %v0_d818 = load i32, i32* @r5, align 4
  store i32 %v2_d814, i32* %r4.global-to-local, align 4
  %v2_d824 = inttoptr i32 %v0_d818 to i32*
  %v3_d824 = call i32 @function_11d68(i32 7, i32* %v2_d824)
  %v0_d82c = load i32, i32* @sl, align 4
  %v2_d82c = add i32 %v2_d814, %v0_d82c
  store i32 %v2_d82c, i32* @r0, align 4
  %v2_d830 = inttoptr i32 %v2_d82c to i8*
  %v3_d830 = call i32 @function_12754(i8* %v2_d830, i32 %v3_d824)
  %v7_d840 = call i32 @readlink(i8* %v2_d7f8, i8* %tmp132, i32 4096)
  %v2_d844 = icmp eq i32 %v7_d840, -1
  br i1 %v2_d844, label %dec_label_pc_d7b8.loopexit, label %dec_label_pc_d84c

dec_label_pc_d84c:                                ; preds = %dec_label_pc_d7e4
  %v0_d84c = load i32, i32* @r5, align 4
  %v2_d854 = inttoptr i32 %v0_d84c to i32*
  %v3_d854 = call i32 @function_11d68(i32 6, i32* %v2_d854)
  store i32 %v2_d508, i32* @r0, align 4
  %v3_d860 = call i32 @function_12754(i8* %v2_d7f8, i32 %v3_d854)
  %v2_d868 = call i32 @function_1272c(i8* %v2_d7f8)
  %v0_d86c = load i32, i32* @r7, align 4
  %v0_d870 = load i32, i32* @sl, align 4
  %v2_d870 = add i32 %v0_d870, %v2_d868
  store i32 %v2_d870, i32* @r0, align 4
  %v2_d874 = inttoptr i32 %v2_d870 to i8*
  %v3_d874 = call i32 @function_12754(i8* %v2_d874, i32 %v0_d86c)
  %v2_d87c = call i32 @function_1272c(i8* %v2_d7f8)
  %v0_d880 = load i32, i32* @r5, align 4
  store i32 %v2_d87c, i32* %r4.global-to-local, align 4
  %v2_d88c = inttoptr i32 %v0_d880 to i32*
  %v3_d88c = call i32 @function_11d68(i32 8, i32* %v2_d88c)
  %v0_d894 = load i32, i32* @sl, align 4
  %v2_d894 = add i32 %v2_d87c, %v0_d894
  store i32 %v2_d894, i32* @r0, align 4
  %v2_d898 = inttoptr i32 %v2_d894 to i8*
  %v3_d898 = call i32 @function_12754(i8* %v2_d898, i32 %v3_d88c)
  %v3_d8a0 = call %__dirstream* @opendir(i8* %v2_d7f8)
  %v5_d8a0 = ptrtoint %__dirstream* %v3_d8a0 to i32
  store i32 %v5_d8a0, i32* %sb.global-to-local, align 4
  %v2_d8a4 = icmp eq %__dirstream* %v3_d8a0, null
  br i1 %v2_d8a4, label %dec_label_pc_d7b8.loopexit, label %dec_label_pc_d8ac.preheader

dec_label_pc_d8ac.preheader:                      ; preds = %dec_label_pc_d84c
  %v3_d8b0138 = call %dirent* @readdir(%__dirstream* nonnull %v3_d8a0)
  %v5_d8b0139 = ptrtoint %dirent* %v3_d8b0138 to i32
  store i32 %v5_d8b0139, i32* @r6, align 4
  %v2_d8b4140 = icmp eq %dirent* %v3_d8b0138, null
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d51c, i32* @r0, align 4
  br i1 %v2_d8b4140, label %dec_label_pc_d9b4, label %dec_label_pc_d8c4thread-pre-split

dec_label_pc_d8ac.loopexit:                       ; preds = %dec_label_pc_d8cc, %dec_label_pc_d964
  %v0_d8ac.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_d8ac = inttoptr i32 %v0_d8ac.pre to %__dirstream*
  %v3_d8b0 = call %dirent* @readdir(%__dirstream* %v1_d8ac)
  %v5_d8b0 = ptrtoint %dirent* %v3_d8b0 to i32
  store i32 %v5_d8b0, i32* @r6, align 4
  %v2_d8b4 = icmp eq %dirent* %v3_d8b0, null
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d51c, i32* @r0, align 4
  br i1 %v2_d8b4, label %dec_label_pc_d9b4, label %dec_label_pc_d8c4thread-pre-split

dec_label_pc_d8c4thread-pre-split:                ; preds = %dec_label_pc_d8ac.preheader, %dec_label_pc_d8ac.loopexit
  %v0_d8c4.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_d8c4

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_d8c4thread-pre-split, %dec_label_pc_d98c
  %v0_d8c4 = phi i32 [ %v0_d8c4.pr, %dec_label_pc_d8c4thread-pre-split ], [ 1, %dec_label_pc_d98c ]
  %v2_d8c4 = icmp eq i32 %v0_d8c4, 0
  br i1 %v2_d8c4, label %dec_label_pc_d8cc, label %dec_label_pc_d9b4

dec_label_pc_d8cc:                                ; preds = %dec_label_pc_d8c4
  %v0_d8cc = call i32 @function_127cc()
  %v0_d8d0 = load i32, i32* @r5, align 4
  %v2_d8d8 = inttoptr i32 %v0_d8d0 to i32*
  %v3_d8d8 = call i32 @function_11d68(i32 6, i32* %v2_d8d8)
  store i32 %v2_d508, i32* @r0, align 4
  %v3_d8e4 = call i32 @function_12754(i8* %v2_d7f8, i32 %v3_d8d8)
  %v2_d8ec = call i32 @function_1272c(i8* %v2_d7f8)
  %v0_d8f0 = load i32, i32* @r7, align 4
  %v0_d8f4 = load i32, i32* @sl, align 4
  %v2_d8f4 = add i32 %v0_d8f4, %v2_d8ec
  store i32 %v2_d8f4, i32* @r0, align 4
  %v2_d8f8 = inttoptr i32 %v2_d8f4 to i8*
  %v3_d8f8 = call i32 @function_12754(i8* %v2_d8f8, i32 %v0_d8f0)
  %v2_d900 = call i32 @function_1272c(i8* %v2_d7f8)
  %v0_d904 = load i32, i32* @r5, align 4
  store i32 %v2_d900, i32* @r4, align 4
  %v2_d910 = inttoptr i32 %v0_d904 to i32*
  %v3_d910 = call i32 @function_11d68(i32 8, i32* %v2_d910)
  %v0_d918 = load i32, i32* @sl, align 4
  %v1_d918 = load i32, i32* @r4, align 4
  %v2_d918 = add i32 %v1_d918, %v0_d918
  store i32 %v2_d918, i32* @r0, align 4
  %v2_d91c = inttoptr i32 %v2_d918 to i8*
  %v3_d91c = call i32 @function_12754(i8* %v2_d91c, i32 %v3_d910)
  %v2_d924 = call i32 @function_1272c(i8* %v2_d7f8)
  %v0_d92c = load i32, i32* @sl, align 4
  %v2_d92c = add i32 %v0_d92c, %v2_d924
  store i32 %v2_d92c, i32* @r0, align 4
  %v2_d930 = inttoptr i32 %v2_d92c to i8*
  %v3_d930 = call i32 @function_12754(i8* %v2_d930, i32 ptrtoint (i32* @global_var_12fbc.114 to i32))
  %v2_d938 = call i32 @function_1272c(i8* %v2_d7f8)
  %v0_d93c = load i32, i32* @r6, align 4
  %v1_d93c = add i32 %v0_d93c, 11
  %v0_d940 = load i32, i32* @sl, align 4
  %v2_d940 = add i32 %v0_d940, %v2_d938
  store i32 %v2_d940, i32* @r0, align 4
  %v2_d944 = inttoptr i32 %v2_d940 to i8*
  %v3_d944 = call i32 @function_12754(i8* %v2_d944, i32 %v1_d93c)
  %v7_d954 = call i32 @readlink(i8* %v2_d7f8, i8* %tmp132, i32 4096)
  %v2_d958 = icmp eq i32 %v7_d954, -1
  br i1 %v2_d958, label %dec_label_pc_d8ac.loopexit, label %dec_label_pc_d964

dec_label_pc_d964:                                ; preds = %dec_label_pc_d8cc
  %v2_d964 = call i32 @function_1272c(i8* %tmp132)
  store i32 %v2_d964, i32* @r1, align 4
  %v4_d978 = call i32 @function_12a80(i8* %tmp132, i32 %v2_d964, i32 %v2_d788.pre-phi)
  %v2_d97c = icmp eq i32 %v4_d978, -1
  br i1 %v2_d97c, label %dec_label_pc_d8ac.loopexit, label %dec_label_pc_d98c

dec_label_pc_d98c:                                ; preds = %dec_label_pc_d964
  %v0_d984 = load i32, i32* @r7, align 4
  %v2_d98c = inttoptr i32 %v0_d984 to i8*
  %v3_d98c = call i32 @function_12858(i8* %v2_d98c, i32 10)
  %v2_d994 = call i32 @kill(i32 %v3_d98c, i32 9)
  %v0_d998 = load i32, i32* %sb.global-to-local, align 4
  %v1_d998 = inttoptr i32 %v0_d998 to %__dirstream*
  %v3_d99c = call %dirent* @readdir(%__dirstream* %v1_d998)
  %v5_d99c = ptrtoint %dirent* %v3_d99c to i32
  store i32 %v5_d99c, i32* @r6, align 4
  %v2_d9a0 = icmp eq %dirent* %v3_d99c, null
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_d51c, i32* @r0, align 4
  br i1 %v2_d9a0, label %dec_label_pc_d9b4, label %dec_label_pc_d8c4

dec_label_pc_d9b4:                                ; preds = %dec_label_pc_d8ac.preheader, %dec_label_pc_d8ac.loopexit, %dec_label_pc_d98c, %dec_label_pc_d8c4
  %v0_d9b4 = load i32, i32* %sb.global-to-local, align 4
  %v1_d9b4 = inttoptr i32 %v0_d9b4 to %__dirstream*
  %v3_d9b8 = call i32 @closedir(%__dirstream* %v1_d9b4)
  %v0_d9bc = load i32, i32* @r8, align 4
  %v1_d9bc = inttoptr i32 %v0_d9bc to %__dirstream*
  %v3_d9c0 = call %dirent* @readdir(%__dirstream* %v1_d9bc)
  %v2_d9c4 = icmp eq %dirent* %v3_d9c0, null
  br i1 %v2_d9c4, label %dec_label_pc_d9cc, label %dec_label_pc_d7c8

dec_label_pc_d9cc:                                ; preds = %dec_label_pc_d7b8.loopexit, %dec_label_pc_d9b4, %dec_label_pc_d7c8, %dec_label_pc_d7b8.preheader
  %v0_d9cc = load i32, i32* @r8, align 4
  %v1_d9cc = inttoptr i32 %v0_d9cc to %__dirstream*
  %v3_d9d0 = call i32 @closedir(%__dirstream* %v1_d9cc)
  %v0_d9d4 = load i32, i32* @r5, align 4
  %v1_d9d4 = urem i32 %v0_d9d4, 256
  br label %dec_label_pc_d9d8

dec_label_pc_d9d8:                                ; preds = %dec_label_pc_d798, %dec_label_pc_d9cc
  %storemerge = phi i32 [ %v1_d9d4, %dec_label_pc_d9cc ], [ %v5_d7a4, %dec_label_pc_d798 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_d9dc = call i32 @sleep(i32 1)
  br label %dec_label_pc_d9e0

dec_label_pc_d9e0:                                ; preds = %dec_label_pc_d77c, %dec_label_pc_d9d8
  %v1_d9e4 = call i32 @function_11d94(i32 6)
  %v1_d9ec = call i32 @function_11d94(i32 7)
  %v1_d9f4 = call i32 @function_11d94(i32 8)
  br label %dec_label_pc_d9f8

dec_label_pc_d9f8:                                ; preds = %dec_label_pc_d5a4, %dec_label_pc_d9e0
  %v0_d9f8 = load i32, i32* @r4, align 4
  %v2_da04 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_da04, i32* @r4, align 4
  store i32 %v6_d4f4, i32* @r5, align 4
  store i32 %v9_d4f4, i32* @r6, align 4
  store i32 %v12_d4f4, i32* @r7, align 4
  store i32 %v15_d4f4, i32* @r8, align 4
  store i32 %v21_d4f4, i32* @sl, align 4
  ret i32 %v0_d9f8

dec_label_pc_da08:                                ; preds = %dec_label_pc_d6ec
  %v1_da08 = add i32 %v0_da08, 1
  %v7_da0c = icmp eq i32 %v0_da08, 0
  br i1 %v7_da0c, label %dec_label_pc_da14, label %dec_label_pc_d6f4

dec_label_pc_da14:                                ; preds = %dec_label_pc_da08
  %v1_da14 = add i32 %v0_d6fc, 3
  %v2_da14 = inttoptr i32 %v1_da14 to i8*
  %v3_da14 = load i8, i8* %v2_da14, align 1
  %v7_da18 = icmp eq i8 %v3_da14, 65
  br i1 %v7_da18, label %dec_label_pc_da28, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_da14
  br label %dec_label_pc_d6c4.backedge

dec_label_pc_da28:                                ; preds = %dec_label_pc_da14
  store i32 %v1_da08, i32* @r4, align 4
  br label %dec_label_pc_d6c4.backedge

dec_label_pc_d6c4.backedge:                       ; preds = %.thread33, %dec_label_pc_da28, %dec_label_pc_d6f8
  %v0_d70481 = phi i32 [ %v1_da08, %dec_label_pc_da28 ], [ %v0_d70482, %dec_label_pc_d6f8 ], [ %v0_d70482, %.thread33 ]
  %v0_da0870 = phi i32 [ %v1_da08, %dec_label_pc_da28 ], [ %v0_d6f8, %dec_label_pc_d6f8 ], [ %v1_da08, %.thread33 ]
  %v0_d6ec.pr67 = phi i32 [ 0, %dec_label_pc_da28 ], [ %v0_d6ec.pr68, %dec_label_pc_d6f8 ], [ 0, %.thread33 ]
  %v0_d6c4 = add i32 %v0_d6fc, 1
  %v1_d6c4 = add i32 %v0_d6fc, 3
  %v2_d6c4 = inttoptr i32 %v1_d6c4 to i8*
  %v3_d6c4 = load i8, i8* %v2_d6c4, align 1
  %v2_d6c8 = icmp eq i8 %v3_d6c4, 0
  %v1_d6cc = add i32 %v0_d6cc78, 1
  br i1 %v2_d6c8, label %dec_label_pc_d704, label %dec_label_pc_d6d4

dec_label_pc_da38:                                ; preds = %dec_label_pc_d4f4
  store i8 48, i8* %stack_var_-68, align 1
  br label %dec_label_pc_d5a4

; uselistorder directives
  uselistorder i32 %v1_d6cc, { 1, 0 }
  uselistorder i8 %v3_d6c4, { 1, 0 }
  uselistorder i32 %v0_d70481, { 1, 0 }
  uselistorder i32 %v1_da08, { 4, 3, 0, 2, 1 }
  uselistorder %dirent* %v3_d9c0, { 1, 0 }
  uselistorder i8* %tmp132, { 1, 0, 2, 3 }
  uselistorder i32 %v1_d730, { 1, 0 }
  uselistorder i32 %v0_d73c28, { 1, 0 }
  uselistorder i32 %v1_d754, { 0, 3, 1, 2 }
  uselistorder i32 %v0_d6f8, { 1, 0 }
  uselistorder i32 %v0_d6cc78, { 1, 0 }
  uselistorder i32 %v0_da08, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_d70482, { 1, 2, 0 }
  uselistorder i32 %v1_d6cc52, { 1, 0 }
  uselistorder i32 %v2_d6b0, { 1, 0 }
  uselistorder i32 %v1_d6ac, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v0_d66813, { 1, 0, 2 }
  uselistorder i32 %v0_d658, { 1, 0 }
  uselistorder i32 %v1_d638, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32* %v3_d564, { 1, 0, 2 }
  uselistorder i32 %v2_d51c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8773, { 1, 0, 2 }
  uselistorder i8* %stack_var_-581, { 2, 0, 1 }
  uselistorder i8* %stack_var_-68, { 2, 0, 1 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 4, 3 }
  uselistorder i32* %sb.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 (i8*, i32)* @function_12858, { 1, 0 }
  uselistorder i32 47, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32*, i32, i32)* @function_12984, { 1, 0 }
  uselistorder i32 512, { 5, 0, 1, 7, 6, 2, 8, 3, 9, 4, 10 }
  uselistorder i32* (i32*, i32, i32)* @memset, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_d6c4.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d9f8, { 1, 0 }
  uselistorder label %dec_label_pc_d9e0, { 1, 0 }
  uselistorder label %dec_label_pc_d9d8, { 1, 0 }
  uselistorder label %dec_label_pc_d9cc, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_d9b4, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_d8c4, { 1, 0 }
  uselistorder label %dec_label_pc_d8c4thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_d8ac.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_d7c8, { 1, 0 }
  uselistorder label %dec_label_pc_d7c8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d7b8.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d750, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d6f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d6d4, { 1, 0 }
  uselistorder label %dec_label_pc_d678, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d5dc.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_d62c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_d5f4, { 1, 0 }
  uselistorder label %dec_label_pc_d5a4, { 1, 0 }
}

define i32 @function_da64(i32 %arg1) local_unnamed_addr {
dec_label_pc_da64:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-244 = alloca i32, align 4
  %stack_var_-4340 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-8436 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %stack_var_-8488 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_da64 = load i32, i32* @r4, align 4
  store i32 %v3_da64, i32* %stack_var_-36, align 4
  %v6_da64 = load i32, i32* @r5, align 4
  %v9_da64 = load i32, i32* @r6, align 4
  %v12_da64 = load i32, i32* @r7, align 4
  %v15_da64 = load i32, i32* @r8, align 4
  %v2_da74 = call i32 @time(i32* null)
  store i32 %v2_da74, i32* @r8, align 4
  %v0_da7c = call i32 @fork()
  %v2_da80 = icmp eq i32 %v0_da7c, -1
  %. = zext i1 %v2_da80 to i32
  %tmp370 = icmp slt i32 %v0_da7c, 1
  %storemerge316 = select i1 %tmp370, i32 %., i32 1
  store i32 %storemerge316, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1ba20.112 to i32), i32* %r3.global-to-local, align 4
  %v2_da9c = icmp eq i32 %storemerge316, 0
  store i32 %v0_da7c, i32* @global_var_1ba20.112, align 4
  br i1 %v2_da9c, label %dec_label_pc_dab4, label %dec_label_pc_daa8

dec_label_pc_daa8:                                ; preds = %dec_label_pc_dc38, %dec_label_pc_db18, %dec_label_pc_da64
  %v29_dab0 = phi i32 [ -1, %dec_label_pc_db18 ], [ %v0_da7c, %dec_label_pc_da64 ], [ %v5_dc4c, %dec_label_pc_dc38 ]
  %v2_dab0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_dab0, i32* @r4, align 4
  store i32 %v6_da64, i32* @r5, align 4
  store i32 %v9_da64, i32* @r6, align 4
  store i32 %v12_da64, i32* @r7, align 4
  store i32 %v15_da64, i32* @r8, align 4
  ret i32 %v29_dab0

dec_label_pc_dab4:                                ; preds = %dec_label_pc_da64
  %v2_dab4 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_dab4, i32* %r1.global-to-local, align 4
  store i32 2, i32* @r4, align 4
  store i32 2, i32* %stack_var_-100, align 4
  %v1_dacc = call i32 @function_d4f4(i32 5632)
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_dad8 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_dae0 = load i32, i32* @r5, align 4
  store i32 %v0_dae0, i32* %r2.global-to-local, align 4
  %v3_daec = call i32 @socket(i32 %v0_dad8, i32 1, i32 %v0_dae0)
  %v2_daf0 = icmp eq i32 %v3_daec, -1
  store i32 %v3_daec, i32* @r4, align 4
  br i1 %v2_daf0, label %dec_label_pc_db18, label %dec_label_pc_dafc

dec_label_pc_dafc:                                ; preds = %dec_label_pc_dab4
  %v2_db00 = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v2_db00, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v6_db08 = call i32 @bind(i32 %v2_db00, %sockaddr* inttoptr (i32 16 to %sockaddr*), i32 16)
  %v0_db0c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_db14 = call i32 @listen(i32 %v0_db0c, i32 1)
  br label %dec_label_pc_db18

dec_label_pc_db18:                                ; preds = %dec_label_pc_dab4, %dec_label_pc_dafc
  %v1_db1c = call i32 @sleep(i32 5)
  %v1_db24 = call i32* @malloc(i32 4096)
  %v3_db24 = ptrtoint i32* %v1_db24 to i32
  store i32 ptrtoint (i32* @global_var_1b9c4.117 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1ba1c.119 to i32), i32* %r1.global-to-local, align 4
  store i32 %v3_db24, i32* %r2.global-to-local, align 4
  %v0_db34 = load i32, i32* @r5, align 4
  %v1_db34 = trunc i32 %v0_db34 to i8
  %v3_db34 = bitcast i32* %v1_db24 to i8*
  store i8 %v1_db34, i8* %v3_db34, align 1
  %v0_db3c = load i32, i32* @r5, align 4
  %v1_db3c = load i32, i32* %r3.global-to-local, align 4
  %v2_db3c = inttoptr i32 %v1_db3c to i32*
  store i32 %v0_db3c, i32* %v2_db3c, align 4
  %v0_db40 = load i32, i32* %r2.global-to-local, align 4
  %v1_db40 = load i32, i32* %r1.global-to-local, align 4
  %v2_db40 = inttoptr i32 %v1_db40 to i32*
  store i32 %v0_db40, i32* %v2_db40, align 4
  %v1_db44 = call i32 @function_11e4c(i32 6)
  %v1_db4c = call i32 @function_11e4c(i32 7)
  %v0_db50 = load i32, i32* @r5, align 4
  store i32 %v0_db50, i32* %r1.global-to-local, align 4
  %v2_db58 = inttoptr i32 %v0_db50 to i32*
  %v3_db58 = call i32 @function_11d68(i32 6, i32* %v2_db58)
  %v2_db60 = ptrtoint i32* %stack_var_-8436 to i32
  store i32 %v2_db60, i32* @r7, align 4
  store i32 %v3_db58, i32* %r1.global-to-local, align 4
  store i32 %v2_db60, i32* @r0, align 4
  %v2_db6c = bitcast i32* %stack_var_-8436 to i8*
  %v3_db6c = call i32 @function_12754(i8* %v2_db6c, i32 %v3_db58)
  %v0_db70 = load i32, i32* @r7, align 4
  %v2_db70 = add i32 %v0_db70, %v3_db6c
  store i32 %v2_db70, i32* @r4, align 4
  %v1_db74 = call i32 @getpid()
  %v2_db7c = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_db7c, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_db84 = trunc i32 %v1_db74 to i8
  %v4_db84 = call i32 @function_12b90(i8 %v3_db84, i32 10, i32 %v2_db7c)
  store i32 %v4_db84, i32* %r1.global-to-local, align 4
  %v0_db8c = load i32, i32* @r4, align 4
  store i32 %v0_db8c, i32* @r0, align 4
  %v2_db90 = inttoptr i32 %v0_db8c to i8*
  %v3_db90 = call i32 @function_12754(i8* %v2_db90, i32 %v4_db84)
  %v0_db94 = load i32, i32* @r5, align 4
  store i32 %v0_db94, i32* %r1.global-to-local, align 4
  %v0_db98 = load i32, i32* @r4, align 4
  %v2_db98 = add i32 %v0_db98, %v3_db90
  store i32 %v2_db98, i32* @r4, align 4
  %v2_dba0 = inttoptr i32 %v0_db94 to i32*
  %v3_dba0 = call i32 @function_11d68(i32 7, i32* %v2_dba0)
  store i32 %v3_dba0, i32* %r1.global-to-local, align 4
  %v0_dba8 = load i32, i32* @r4, align 4
  store i32 %v0_dba8, i32* @r0, align 4
  %v2_dbac = inttoptr i32 %v0_dba8 to i8*
  %v3_dbac = call i32 @function_12754(i8* %v2_dbac, i32 %v3_dba0)
  %v0_dbb0 = load i32, i32* @r5, align 4
  store i32 %v0_dbb0, i32* %r1.global-to-local, align 4
  store i32 %v3_dbac, i32* @r6, align 4
  %v4_dbbc = call i32 (i8*, i32, ...) @open(i8* %v2_db6c, i32 %v0_dbb0)
  %v2_dbc0 = icmp eq i32 %v4_dbbc, -1
  br i1 %v2_dbc0, label %dec_label_pc_daa8, label %dec_label_pc_dbc8

dec_label_pc_dbc8:                                ; preds = %dec_label_pc_db18
  %v1_dbc8 = call i32 @close(i32 %v4_dbbc)
  %v1_dbd0 = call i32 @function_11d94(i32 6)
  %v1_dbd8 = call i32 @function_11d94(i32 7)
  store i32 ptrtoint (i8** @global_var_1ba1c.119 to i32), i32* %r3.global-to-local, align 4
  %v2_dbe4 = load i8*, i8** @global_var_1ba1c.119, align 4
  %v3_dbe4 = ptrtoint i8* %v2_dbe4 to i32
  store i32 %v3_dbe4, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v7_dbf0 = call i32 @readlink(i8* %v2_db6c, i8* %v2_dbe4, i32 4095)
  %v2_dbf4 = icmp eq i32 %v7_dbf0, -1
  br i1 %v2_dbf4, label %.thread16.thread, label %bb373

.thread16.thread:                                 ; preds = %dec_label_pc_dbc8
  %v0_dc00128 = load i32, i32* @r4, align 4
  %v1_dc00129 = load i32, i32* @r6, align 4
  %v2_dc00130 = add i32 %v1_dc00129, %v0_dc00128
  store i32 %v2_dc00130, i32* %r1.global-to-local, align 4
  br label %bb374

bb373:                                            ; preds = %dec_label_pc_dbc8
  %v3_dbfc = load i32, i32* bitcast (i8** @global_var_1ba1c.119 to i32*), align 4
  store i32 %v3_dbfc, i32* %r3.global-to-local, align 4
  %v0_dc00 = load i32, i32* @r4, align 4
  %v1_dc00 = load i32, i32* @r6, align 4
  %v2_dc00 = add i32 %v1_dc00, %v0_dc00
  store i32 %v2_dc00, i32* %r1.global-to-local, align 4
  %v1_dc04 = load i32, i32* @r5, align 4
  %v2_dc04 = trunc i32 %v1_dc04 to i8
  %v5_dc04 = add i32 %v3_dbfc, %v7_dbf0
  %v6_dc04 = inttoptr i32 %v5_dc04 to i8*
  store i8 %v2_dc04, i8* %v6_dc04, align 1
  %v1_dc08.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb374

bb374:                                            ; preds = %.thread16.thread, %bb373
  %v1_dc08 = phi i32 [ %v2_dc00130, %.thread16.thread ], [ %v1_dc08.pre, %bb373 ]
  %v0_dc08 = load i32, i32* @r7, align 4
  %v2_dc08 = sub i32 %v1_dc08, %v0_dc08
  store i32 %v2_dc08, i32* @r1, align 4
  store i32 %v2_db60, i32* @r0, align 4
  %v0_dc10 = call i32 @function_127cc()
  %v2_dc1c = ptrtoint i32* %stack_var_-4340 to i32
  store i32 %v2_dc1c, i32* %r1.global-to-local, align 4
  store i32 %v2_dc1c, i32* %stack_var_-8488, align 4
  %v0_dc28 = load i32, i32* @r5, align 4
  store i32 %v0_dc28, i32* %sb.global-to-local, align 4
  %v0_dc2c = load i32, i32* @r8, align 4
  store i32 %v0_dc2c, i32* @r4, align 4
  store i32 400, i32* @r5, align 4
  %v2_dc34 = ptrtoint i32* %stack_var_-244 to i32
  store i32 %v2_dc34, i32* %fp.global-to-local, align 4
  %v2_dd24 = bitcast i32* %stack_var_-244 to i8*
  %v2_dd68 = ptrtoint i32* %stack_var_-180 to i32
  %v2_dd6c = bitcast i32* %stack_var_-180 to i8*
  %v2_df10 = ptrtoint i32* %stack_var_-60 to i32
  %v2_df20 = ptrtoint i32* %stack_var_-64 to i32
  %v2_df38 = ptrtoint i32* %stack_var_-68 to i32
  %v2_df4c = ptrtoint i32* %stack_var_-56 to i32
  %v2_df60 = ptrtoint i32* %stack_var_-76 to i32
  %v2_df74 = ptrtoint i32* %stack_var_-80 to i32
  %v2_df88 = ptrtoint i32* %stack_var_-84 to i32
  %v2_df9c = ptrtoint i32* %stack_var_-72 to i32
  %v2_dfa8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_dfc0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_dfd4 = ptrtoint i32* %stack_var_-48 to i32
  %v2_dfe8 = ptrtoint i32* %stack_var_-52 to i32
  %v2_dde0 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_dc38

dec_label_pc_dc38:                                ; preds = %dec_label_pc_dce8, %bb374
  %v1_dc3c = call i32 @function_11e4c(i32 6)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dc48 = call i32 @function_11d68(i32 6, i32* null)
  %v4_dc48 = inttoptr i32 %v3_dc48 to i8*
  %v3_dc4c = call %__dirstream* @opendir(i8* %v4_dc48)
  %v5_dc4c = ptrtoint %__dirstream* %v3_dc4c to i32
  store i32 %v5_dc4c, i32* %sl.global-to-local, align 4
  %v2_dc50 = icmp eq %__dirstream* %v3_dc4c, null
  br i1 %v2_dc50, label %dec_label_pc_daa8, label %dec_label_pc_dc58

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc38
  %v1_dc5c = call i32 @function_11d94(i32 6)
  %v0_dc60219 = load i32, i32* %sl.global-to-local, align 4
  %v1_dc60220 = inttoptr i32 %v0_dc60219 to %__dirstream*
  %v3_dc64221 = call %dirent* @readdir(%__dirstream* %v1_dc60220)
  %v2_dc68224 = icmp eq %dirent* %v3_dc64221, null
  br i1 %v2_dc68224, label %dec_label_pc_dce8, label %dec_label_pc_dc70.preheader

dec_label_pc_dc70.preheader:                      ; preds = %dec_label_pc_dc58, %dec_label_pc_dc60.backedge
  %v0_dc70237.in = phi %dirent* [ %v3_dc64, %dec_label_pc_dc60.backedge ], [ %v3_dc64221, %dec_label_pc_dc58 ]
  br label %dec_label_pc_dc70

dec_label_pc_dc70:                                ; preds = %dec_label_pc_dc70.preheader, %dec_label_pc_dcd0
  %v0_dc80.in = phi %dirent* [ %v0_dc70237.in, %dec_label_pc_dc70.preheader ], [ %v3_dcdc, %dec_label_pc_dcd0 ]
  %v0_dc80 = ptrtoint %dirent* %v0_dc80.in to i32
  %v1_dc70 = add i32 %v0_dc80, 11
  %v2_dc70 = inttoptr i32 %v1_dc70 to i8*
  %v3_dc70 = load i8, i8* %v2_dc70, align 1
  %v4_dc70 = zext i8 %v3_dc70 to i32
  %v1_dc74 = add nsw i32 %v4_dc70, -48
  store i32 %v1_dc74, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_dc74, 9
  br i1 %tmp, label %dec_label_pc_dc60.backedge, label %dec_label_pc_dc80

dec_label_pc_dc80:                                ; preds = %dec_label_pc_dc70
  store i32 %v1_dc70, i32* @r6, align 4
  %v4_dc88 = call i32 @atoi(i8* %v2_dc70)
  %v0_dc8c = load i32, i32* @r5, align 4
  store i32 %v4_dc88, i32* %r8.global-to-local, align 4
  %v0_dc94 = load i32, i32* %sb.global-to-local, align 4
  %v1_dc94 = add i32 %v0_dc94, 1
  store i32 %v1_dc94, i32* %sb.global-to-local, align 4
  %v5_dc98 = icmp slt i32 %v0_dc8c, %v4_dc88
  %v2_dcf8 = call i32 @time(i32* null)
  br i1 %v5_dc98, label %dec_label_pc_dcf4, label %dec_label_pc_dc9c

dec_label_pc_dc9c:                                ; preds = %dec_label_pc_dc80
  %v0_dca4 = load i32, i32* @r4, align 4
  %v2_dca4 = sub i32 %v2_dcf8, %v0_dca4
  %v7_dcac = icmp slt i32 %v2_dca4, 601
  br i1 %v7_dcac, label %dec_label_pc_dcb4, label %.thread22

.thread22:                                        ; preds = %dec_label_pc_dc9c
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_dc60.backedge

dec_label_pc_dcb4:                                ; preds = %dec_label_pc_dc9c
  %v0_dcb4 = load i32, i32* %r8.global-to-local, align 4
  %v7_dcb8 = icmp slt i32 %v0_dcb4, 401
  br i1 %v7_dcb8, label %dec_label_pc_dc60.backedge, label %dec_label_pc_dcbc

dec_label_pc_dcbc:                                ; preds = %dec_label_pc_dcb4
  %v0_dcbc = load i32, i32* %sb.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_dcc4 = urem i32 %v0_dcbc, 10
  %v2_dcc8 = icmp eq i32 %v2_dcc4, 0
  br i1 %v2_dcc8, label %dec_label_pc_dcd0, label %dec_label_pc_dc60.backedge

dec_label_pc_dcd0:                                ; preds = %dec_label_pc_dcbc
  %v1_dcd4 = call i32 @sleep(i32 1)
  %v0_dcd8 = load i32, i32* %sl.global-to-local, align 4
  %v1_dcd8 = inttoptr i32 %v0_dcd8 to %__dirstream*
  %v3_dcdc = call %dirent* @readdir(%__dirstream* %v1_dcd8)
  %v2_dce0 = icmp eq %dirent* %v3_dcdc, null
  br i1 %v2_dce0, label %dec_label_pc_dce8, label %dec_label_pc_dc70

dec_label_pc_dce8:                                ; preds = %dec_label_pc_dc60.backedge, %dec_label_pc_dcd0, %dec_label_pc_dc58
  %v0_dce8 = load i32, i32* %sl.global-to-local, align 4
  %v1_dce8 = inttoptr i32 %v0_dce8 to %__dirstream*
  %v3_dcec = call i32 @closedir(%__dirstream* %v1_dce8)
  br label %dec_label_pc_dc38

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_dc80
  %v1_dd04 = call i32 @function_11e4c(i32 6)
  %v1_dd0c = call i32 @function_11e4c(i32 7)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dd18 = call i32 @function_11d68(i32 6, i32* null)
  store i32 %v3_dd18, i32* %r1.global-to-local, align 4
  store i32 %v2_dc34, i32* @r0, align 4
  %v3_dd24 = call i32 @function_12754(i8* %v2_dd24, i32 %v3_dd18)
  %v0_dd28 = load i32, i32* %fp.global-to-local, align 4
  %v2_dd28 = add i32 %v0_dd28, %v3_dd24
  store i32 %v2_dd28, i32* %r5.global-to-local, align 4
  %v0_dd2c = load i32, i32* @r6, align 4
  store i32 %v0_dd2c, i32* %r1.global-to-local, align 4
  store i32 %v2_dd28, i32* @r0, align 4
  %v2_dd34 = inttoptr i32 %v2_dd28 to i8*
  %v3_dd34 = call i32 @function_12754(i8* %v2_dd34, i32 %v0_dd2c)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dd44 = call i32 @function_11d68(i32 7, i32* null)
  store i32 %v3_dd44, i32* %r1.global-to-local, align 4
  %v0_dd4c = load i32, i32* %r5.global-to-local, align 4
  %v2_dd4c = add i32 %v3_dd34, %v0_dd4c
  store i32 %v2_dd4c, i32* @r0, align 4
  %v2_dd50 = inttoptr i32 %v2_dd4c to i8*
  %v3_dd50 = call i32 @function_12754(i8* %v2_dd50, i32 %v3_dd44)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_dd5c = call i32 @function_11d68(i32 6, i32* null)
  store i32 %v3_dd5c, i32* %r1.global-to-local, align 4
  store i32 %v2_dd68, i32* @r0, align 4
  %v3_dd6c = call i32 @function_12754(i8* %v2_dd6c, i32 %v3_dd5c)
  store i32 %v2_dd68, i32* %r2.global-to-local, align 4
  %v2_dd78 = add i32 %v3_dd6c, %v2_dd68
  store i32 %v2_dd78, i32* @r5, align 4
  %v0_dd7c = load i32, i32* @r6, align 4
  store i32 %v0_dd7c, i32* %r1.global-to-local, align 4
  store i32 %v2_dd78, i32* @r0, align 4
  %v2_dd84 = inttoptr i32 %v2_dd78 to i8*
  %v3_dd84 = call i32 @function_12754(i8* %v2_dd84, i32 %v0_dd7c)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_dd84, i32* @r4, align 4
  %v3_dd94 = call i32 @function_11d68(i32 11, i32* null)
  store i32 %v3_dd94, i32* %r1.global-to-local, align 4
  %v0_dd9c = load i32, i32* @r5, align 4
  %v1_dd9c = load i32, i32* @r4, align 4
  %v2_dd9c = add i32 %v1_dd9c, %v0_dd9c
  store i32 %v2_dd9c, i32* @r0, align 4
  %v2_dda0 = inttoptr i32 %v2_dd9c to i8*
  %v3_dda0 = call i32 @function_12754(i8* %v2_dda0, i32 %v3_dd94)
  %v1_dda8 = call i32 @function_11d94(i32 6)
  %v1_ddb0 = call i32 @function_11d94(i32 7)
  store i32 4095, i32* %r2.global-to-local, align 4
  %v2_ddc0 = load i32, i32* %stack_var_-8488, align 4
  %v3_ddc0 = inttoptr i32 %v2_ddc0 to i8*
  store i32 %v2_ddc0, i32* %r1.global-to-local, align 4
  %v7_ddc4 = call i32 @readlink(i8* %v2_dd24, i8* %v3_ddc0, i32 4095)
  %v2_ddcc = icmp eq i32 %v7_ddc4, -1
  store i32 %v7_ddc4, i32* @r5, align 4
  store i32 -4304, i32* %r2.global-to-local, align 4
  br i1 %v2_ddcc, label %dec_label_pc_de94, label %dec_label_pc_dddc

dec_label_pc_dddc:                                ; preds = %dec_label_pc_dcf4
  %v2_dde4 = add i32 %v7_ddc4, %v2_dde0
  store i32 %v2_dde4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_ddec = add i32 %v2_dde4, -4304
  %v5_ddec = inttoptr i32 %v4_ddec to i8*
  store i8 0, i8* %v5_ddec, align 1
  %v1_ddf4 = call i32 @function_11e4c(i32 12)
  %v0_ddf8 = load i32, i32* @r4, align 4
  store i32 %v0_ddf8, i32* %r1.global-to-local, align 4
  %v2_de00 = inttoptr i32 %v0_ddf8 to i32*
  %v3_de00 = call i32 @function_11d68(i32 12, i32* %v2_de00)
  %v0_de04 = load i32, i32* @r5, align 4
  %v1_de04 = add i32 %v0_de04, -1
  store i32 %v1_de04, i32* @r1, align 4
  store i32 %v3_de00, i32* %r2.global-to-local, align 4
  %v2_de0c = load i32, i32* %stack_var_-8488, align 4
  %v3_de10 = inttoptr i32 %v2_de0c to i8*
  %v4_de10 = call i32 @function_12a80(i8* %v3_de10, i32 %v1_de04, i32 %v3_de00)
  %v2_de14 = icmp eq i32 %v4_de10, -1
  br i1 %v2_de14, label %dec_label_pc_de30, label %dec_label_pc_de1c

dec_label_pc_de1c:                                ; preds = %dec_label_pc_dddc
  %v2_de1c = load i32, i32* %stack_var_-8488, align 4
  %v3_de1c = inttoptr i32 %v2_de1c to i8*
  %v3_de20 = call i32 @unlink(i8* %v3_de1c)
  %v0_de24 = load i32, i32* %r8.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_de2c = call i32 @kill(i32 %v0_de24, i32 9)
  br label %dec_label_pc_de30

dec_label_pc_de30:                                ; preds = %dec_label_pc_dddc, %dec_label_pc_de1c
  %v1_de34 = call i32 @function_11d94(i32 12)
  %v1_de38 = call i32 @getpid()
  %v0_de3c = load i32, i32* %r8.global-to-local, align 4
  %v9_de3c = icmp eq i32 %v0_de3c, %v1_de38
  br i1 %v9_de3c, label %dec_label_pc_de68, label %dec_label_pc_de44

dec_label_pc_de44:                                ; preds = %dec_label_pc_de30
  %v0_de44 = call i32 @getppid()
  %v0_de48 = load i32, i32* %r8.global-to-local, align 4
  %v9_de48 = icmp eq i32 %v0_de48, %v0_de44
  br i1 %v9_de48, label %dec_label_pc_de68, label %dec_label_pc_de50

dec_label_pc_de50:                                ; preds = %dec_label_pc_de44
  store i32 ptrtoint (i8** @global_var_1ba1c.119 to i32), i32* %r2.global-to-local, align 4
  %v2_de54 = load i32, i32* %stack_var_-8488, align 4
  %v3_de58 = load i8*, i8** @global_var_1ba1c.119, align 4
  %v4_de58 = ptrtoint i8* %v3_de58 to i32
  store i32 %v4_de58, i32* %r1.global-to-local, align 4
  %v5_de5c = inttoptr i32 %v2_de54 to i8*
  %v6_de5c = call i32 @function_12b0c(i8* %v5_de5c, i32 %v4_de58, i32 ptrtoint (i8** @global_var_1ba1c.119 to i32))
  %v2_de60 = icmp eq i32 %v6_de5c, 0
  br i1 %v2_de60, label %dec_label_pc_de74, label %dec_label_pc_de50.dec_label_pc_de68_crit_edge

dec_label_pc_de50.dec_label_pc_de68_crit_edge:    ; preds = %dec_label_pc_de50
  %v0_de6c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_de68

dec_label_pc_de68:                                ; preds = %dec_label_pc_de50.dec_label_pc_de68_crit_edge, %dec_label_pc_de44, %dec_label_pc_de30
  %v0_de6c = phi i32 [ %v0_de6c.pre, %dec_label_pc_de50.dec_label_pc_de68_crit_edge ], [ %v0_de44, %dec_label_pc_de44 ], [ %v1_de38, %dec_label_pc_de30 ]
  store i32 %v2_dcf8, i32* @r4, align 4
  store i32 %v0_de6c, i32* @r5, align 4
  br label %dec_label_pc_dc60.backedge

dec_label_pc_de74:                                ; preds = %dec_label_pc_de50
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_de78 = load i32, i32* %stack_var_-8488, align 4
  %v3_de78 = inttoptr i32 %v2_de78 to i8*
  %v4_de7c = call i32 (i8*, i32, ...) @open(i8* %v3_de78, i32 0)
  %v2_de80 = icmp eq i32 %v4_de7c, -1
  store i32 %v4_de7c, i32* @r4, align 4
  br i1 %v2_de80, label %dec_label_pc_e4cc, label %dec_label_pc_de8c

dec_label_pc_de8c:                                ; preds = %dec_label_pc_de74, %dec_label_pc_e4cc
  %v0_de8c = phi i32 [ %v4_de7c, %dec_label_pc_de74 ], [ %v0_de8c.pre, %dec_label_pc_e4cc ]
  %v1_de90 = call i32 @close(i32 %v0_de8c)
  br label %dec_label_pc_de94

dec_label_pc_de94:                                ; preds = %dec_label_pc_dcf4, %dec_label_pc_de8c
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_de9c = call i32 (i8*, i32, ...) @open(i8* %v2_dd24, i32 0)
  %v2_dea0 = icmp eq i32 %v4_de9c, -1
  store i32 %v4_de9c, i32* @r5, align 4
  br i1 %v2_dea0, label %dec_label_pc_e3a4, label %dec_label_pc_deac

dec_label_pc_deac:                                ; preds = %dec_label_pc_de94
  %v1_deb0 = call i32 @function_11e4c(i32 13)
  %v1_deb8 = call i32 @function_11e4c(i32 14)
  %v1_dec0 = call i32 @function_11e4c(i32 15)
  %v1_dec8 = call i32 @function_11e4c(i32 16)
  %v1_ded0 = call i32 @function_11e4c(i32 17)
  %v1_ded8 = call i32 @function_11e4c(i32 18)
  %v1_dee0 = call i32 @function_11e4c(i32 19)
  %v1_dee8 = call i32 @function_11e4c(i32 20)
  %v1_def0 = call i32 @function_11e4c(i32 21)
  %v1_def8 = call i32 @function_11e4c(i32 22)
  %v1_df00 = call i32 @function_11e4c(i32 23)
  %v1_df08 = call i32 @function_11e4c(i32 42)
  store i32 %v2_df10, i32* %r1.global-to-local, align 4
  %v3_df18 = call i32 @function_11d68(i32 13, i32* nonnull %stack_var_-60)
  store i32 %v2_df20, i32* %r1.global-to-local, align 4
  store i32 %v3_df18, i32* @r6, align 4
  %v3_df2c = call i32 @function_11d68(i32 14, i32* nonnull %stack_var_-64)
  store i32 %v2_df38, i32* %r1.global-to-local, align 4
  %v3_df40 = call i32 @function_11d68(i32 15, i32* nonnull %stack_var_-68)
  store i32 %v2_df4c, i32* %r1.global-to-local, align 4
  %v3_df54 = call i32 @function_11d68(i32 16, i32* nonnull %stack_var_-56)
  store i32 %v2_df60, i32* %r1.global-to-local, align 4
  %v3_df68 = call i32 @function_11d68(i32 17, i32* nonnull %stack_var_-76)
  store i32 %v2_df74, i32* %r1.global-to-local, align 4
  %v3_df7c = call i32 @function_11d68(i32 18, i32* nonnull %stack_var_-80)
  store i32 %v2_df88, i32* %r1.global-to-local, align 4
  %v3_df90 = call i32 @function_11d68(i32 19, i32* nonnull %stack_var_-84)
  store i32 %v2_df9c, i32* %r1.global-to-local, align 4
  %v3_dfa4 = call i32 @function_11d68(i32 20, i32* nonnull %stack_var_-72)
  store i32 %v2_dfa8, i32* %r1.global-to-local, align 4
  %v3_dfb4 = call i32 @function_11d68(i32 21, i32* nonnull %stack_var_-40)
  store i32 %v2_dfc0, i32* %r1.global-to-local, align 4
  %v3_dfc8 = call i32 @function_11d68(i32 22, i32* nonnull %stack_var_-44)
  store i32 %v2_dfd4, i32* %r1.global-to-local, align 4
  %v3_dfdc = call i32 @function_11d68(i32 23, i32* nonnull %stack_var_-48)
  store i32 %v2_dfe8, i32* %r1.global-to-local, align 4
  %v3_dff0 = call i32 @function_11d68(i32 42, i32* nonnull %stack_var_-52)
  %v0_dff8391 = load i32, i32* @r5, align 4
  store i32 %v2_db60, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_e004392 = call i32 @read(i32 %v0_dff8391, i32* nonnull %stack_var_-8436, i32 4096)
  %tmp375394 = icmp slt i32 %v4_e004392, 1
  br i1 %tmp375394, label %dec_label_pc_e334, label %dec_label_pc_e010

dec_label_pc_e010:                                ; preds = %dec_label_pc_deac, %dec_label_pc_dff8.backedge
  %v4_e004395 = phi i32 [ %v4_e004, %dec_label_pc_dff8.backedge ], [ %v4_e004392, %dec_label_pc_deac ]
  store i32 %v2_dab4, i32* %r3.global-to-local, align 4
  %v3_e014 = load i32, i32* %stack_var_-60, align 4
  %v5_e01c = icmp slt i32 %v4_e004395, %v3_e014
  br i1 %v5_e01c, label %dec_label_pc_e02c, label %dec_label_pc_e228.lr.ph

dec_label_pc_e228.lr.ph:                          ; preds = %dec_label_pc_e010
  %v1_e220148 = add i32 %v4_e004395, -1
  store i32 %v1_e220148, i32* %r1.global-to-local, align 4
  %v0_e228.pre = load i32, i32* @r6, align 4
  %v1_e22c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e228

dec_label_pc_e02c:                                ; preds = %dec_label_pc_e220.backedge, %dec_label_pc_e010
  %v3_e030 = load i32, i32* %stack_var_-64, align 4
  %v5_e038 = icmp slt i32 %v4_e004395, %v3_e030
  br i1 %v5_e038, label %dec_label_pc_e048, label %.thread39

.thread39:                                        ; preds = %dec_label_pc_e02c
  %v1_e254157 = add i32 %v4_e004395, -1
  store i32 %v1_e254157, i32* %r1.global-to-local, align 4
  %v2_e254158 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e254158, label %dec_label_pc_e048, label %dec_label_pc_e25c.lr.ph

dec_label_pc_e25c.lr.ph:                          ; preds = %.thread39
  %v1_e264.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e25c

dec_label_pc_e048:                                ; preds = %dec_label_pc_e254.backedge, %.thread39, %dec_label_pc_e02c
  %v3_e04c = load i32, i32* %stack_var_-68, align 4
  %v5_e054 = icmp slt i32 %v4_e004395, %v3_e04c
  br i1 %v5_e054, label %dec_label_pc_e064, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_e048
  %v1_e28c166 = add i32 %v4_e004395, -1
  store i32 %v1_e28c166, i32* %r1.global-to-local, align 4
  %v2_e28c167 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e28c167, label %dec_label_pc_e064, label %dec_label_pc_e294.lr.ph

dec_label_pc_e294.lr.ph:                          ; preds = %.thread48
  %v1_e29c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e294

dec_label_pc_e064:                                ; preds = %dec_label_pc_e28c.backedge, %.thread48, %dec_label_pc_e048
  %v3_e068 = load i32, i32* %stack_var_-56, align 4
  %v5_e070 = icmp slt i32 %v4_e004395, %v3_e068
  br i1 %v5_e070, label %dec_label_pc_e080, label %.thread57

.thread57:                                        ; preds = %dec_label_pc_e064
  %v1_e2c4175 = add i32 %v4_e004395, -1
  store i32 %v1_e2c4175, i32* %r1.global-to-local, align 4
  %v2_e2c4176 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e2c4176, label %dec_label_pc_e080, label %dec_label_pc_e2cc.lr.ph

dec_label_pc_e2cc.lr.ph:                          ; preds = %.thread57
  %v1_e2d4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e2cc

dec_label_pc_e080:                                ; preds = %dec_label_pc_e2c4.backedge, %.thread57, %dec_label_pc_e064
  %v3_e084 = load i32, i32* %stack_var_-76, align 4
  %v5_e08c = icmp slt i32 %v4_e004395, %v3_e084
  br i1 %v5_e08c, label %dec_label_pc_e09c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_e080
  %v1_e2fc184 = add i32 %v4_e004395, -1
  store i32 %v1_e2fc184, i32* %r1.global-to-local, align 4
  %v2_e2fc185 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e2fc185, label %dec_label_pc_e09c, label %dec_label_pc_e304.lr.ph

dec_label_pc_e304.lr.ph:                          ; preds = %.thread66
  %v1_e30c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e304

dec_label_pc_e09c:                                ; preds = %dec_label_pc_e2fc.backedge, %.thread66, %dec_label_pc_e080
  %v3_e0a0 = load i32, i32* %stack_var_-80, align 4
  %v5_e0a8 = icmp slt i32 %v4_e004395, %v3_e0a0
  br i1 %v5_e0a8, label %dec_label_pc_e0e8, label %dec_label_pc_e0b8

dec_label_pc_e0b8:                                ; preds = %dec_label_pc_e09c
  %v1_e0b8 = add i32 %v4_e004395, -1
  store i32 %v1_e0b8, i32* %r1.global-to-local, align 4
  %v2_e0b8 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e0b8, label %dec_label_pc_e0e8, label %dec_label_pc_e0c0.preheader

dec_label_pc_e0c0.preheader:                      ; preds = %dec_label_pc_e0b8
  %v1_e0c8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e0c0

dec_label_pc_e0c0:                                ; preds = %dec_label_pc_e0dc, %dec_label_pc_e0c0.preheader
  %v0_e0dc = phi i32 [ %v1_e0b8, %dec_label_pc_e0c0.preheader ], [ %v1_e0dc, %dec_label_pc_e0dc ]
  %v0_e0e0 = phi i32 [ 0, %dec_label_pc_e0c0.preheader ], [ %v1_e0e0, %dec_label_pc_e0dc ]
  %v0_e0d0 = phi i32 [ 0, %dec_label_pc_e0c0.preheader ], [ %v1_e0d0., %dec_label_pc_e0dc ]
  store i32 %v3_df7c, i32* %r3.global-to-local, align 4
  %v2_e0c4 = add i32 %v0_e0d0, %v3_df7c
  %v3_e0c4 = inttoptr i32 %v2_e0c4 to i8*
  %v4_e0c4 = load i8, i8* %v3_e0c4, align 1
  %v6_e0c4 = zext i8 %v4_e0c4 to i32
  store i32 %v6_e0c4, i32* %r2.global-to-local, align 4
  %v2_e0c8 = add i32 %v0_e0e0, %v1_e0c8.pre
  %v3_e0c8 = inttoptr i32 %v2_e0c8 to i8*
  %v4_e0c8 = load i8, i8* %v3_e0c8, align 1
  %v6_e0c8 = zext i8 %v4_e0c8 to i32
  store i32 %v6_e0c8, i32* %r3.global-to-local, align 4
  %v9_e0cc = icmp eq i8 %v4_e0c8, %v4_e0c4
  %v1_e0d0 = add i32 %v0_e0d0, 1
  %v1_e0d0. = select i1 %v9_e0cc, i32 %v1_e0d0, i32 0
  br i1 %v9_e0cc, label %dec_label_pc_e328, label %dec_label_pc_e0dc

dec_label_pc_e0dc:                                ; preds = %dec_label_pc_e328, %dec_label_pc_e0c0
  %v1_e0dc = add i32 %v0_e0dc, -1
  store i32 %v1_e0dc, i32* %r1.global-to-local, align 4
  %v2_e0dc = icmp eq i32 %v0_e0dc, 0
  %v1_e0e0 = add i32 %v0_e0e0, 1
  br i1 %v2_e0dc, label %dec_label_pc_e0e8, label %dec_label_pc_e0c0

dec_label_pc_e0e8:                                ; preds = %dec_label_pc_e0dc, %dec_label_pc_e0b8, %dec_label_pc_e09c
  %v3_e0ec = load i32, i32* %stack_var_-84, align 4
  %v5_e0f4 = icmp slt i32 %v4_e004395, %v3_e0ec
  br i1 %v5_e0f4, label %dec_label_pc_e134, label %dec_label_pc_e104

dec_label_pc_e104:                                ; preds = %dec_label_pc_e0e8
  %v1_e104 = add i32 %v4_e004395, -1
  store i32 %v1_e104, i32* %r1.global-to-local, align 4
  %v2_e104 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e104, label %dec_label_pc_e134, label %dec_label_pc_e10c.preheader

dec_label_pc_e10c.preheader:                      ; preds = %dec_label_pc_e104
  %v1_e114.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e10c

dec_label_pc_e10c:                                ; preds = %dec_label_pc_e12c, %dec_label_pc_e10c.preheader
  %v0_e12c = phi i32 [ %v1_e104, %dec_label_pc_e10c.preheader ], [ %v1_e12c, %dec_label_pc_e12c ]
  %storemerge2.in = phi i32 [ 0, %dec_label_pc_e10c.preheader ], [ %storemerge2, %dec_label_pc_e12c ]
  %v0_e11c = phi i32 [ 0, %dec_label_pc_e10c.preheader ], [ %v1_e11c., %dec_label_pc_e12c ]
  store i32 %v3_df90, i32* %r3.global-to-local, align 4
  %v2_e110 = add i32 %v0_e11c, %v3_df90
  %v3_e110 = inttoptr i32 %v2_e110 to i8*
  %v4_e110 = load i8, i8* %v3_e110, align 1
  %v6_e110 = zext i8 %v4_e110 to i32
  store i32 %v6_e110, i32* %r2.global-to-local, align 4
  %v2_e114 = add i32 %storemerge2.in, %v1_e114.pre
  %v3_e114 = inttoptr i32 %v2_e114 to i8*
  %v4_e114 = load i8, i8* %v3_e114, align 1
  %v6_e114 = zext i8 %v4_e114 to i32
  store i32 %v6_e114, i32* %r3.global-to-local, align 4
  %v9_e118 = icmp eq i8 %v4_e114, %v4_e110
  %v1_e11c = add i32 %v0_e11c, 1
  %v1_e11c. = select i1 %v9_e118, i32 %v1_e11c, i32 0
  br i1 %v9_e118, label %dec_label_pc_e3d4, label %dec_label_pc_e12c

dec_label_pc_e12c:                                ; preds = %dec_label_pc_e3d4, %dec_label_pc_e10c
  %storemerge2 = add i32 %storemerge2.in, 1
  %v1_e12c = add i32 %v0_e12c, -1
  store i32 %v1_e12c, i32* %r1.global-to-local, align 4
  %v2_e12c = icmp eq i32 %v0_e12c, 0
  br i1 %v2_e12c, label %dec_label_pc_e134, label %dec_label_pc_e10c

dec_label_pc_e134:                                ; preds = %dec_label_pc_e12c, %dec_label_pc_e104, %dec_label_pc_e0e8
  %v3_e138 = load i32, i32* %stack_var_-72, align 4
  %v5_e140 = icmp slt i32 %v4_e004395, %v3_e138
  br i1 %v5_e140, label %dec_label_pc_e180, label %dec_label_pc_e150

dec_label_pc_e150:                                ; preds = %dec_label_pc_e134
  %v1_e150 = add i32 %v4_e004395, -1
  store i32 %v1_e150, i32* %r1.global-to-local, align 4
  %v2_e150 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e150, label %dec_label_pc_e180, label %dec_label_pc_e158.preheader

dec_label_pc_e158.preheader:                      ; preds = %dec_label_pc_e150
  %v1_e160.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e158

dec_label_pc_e158:                                ; preds = %dec_label_pc_e178, %dec_label_pc_e158.preheader
  %v0_e178 = phi i32 [ %v1_e150, %dec_label_pc_e158.preheader ], [ %v1_e178, %dec_label_pc_e178 ]
  %storemerge4.in = phi i32 [ 0, %dec_label_pc_e158.preheader ], [ %storemerge4, %dec_label_pc_e178 ]
  %v0_e168 = phi i32 [ 0, %dec_label_pc_e158.preheader ], [ %v1_e168., %dec_label_pc_e178 ]
  store i32 %v3_dfa4, i32* %r3.global-to-local, align 4
  %v2_e15c = add i32 %v0_e168, %v3_dfa4
  %v3_e15c = inttoptr i32 %v2_e15c to i8*
  %v4_e15c = load i8, i8* %v3_e15c, align 1
  %v6_e15c = zext i8 %v4_e15c to i32
  store i32 %v6_e15c, i32* %r2.global-to-local, align 4
  %v2_e160 = add i32 %storemerge4.in, %v1_e160.pre
  %v3_e160 = inttoptr i32 %v2_e160 to i8*
  %v4_e160 = load i8, i8* %v3_e160, align 1
  %v6_e160 = zext i8 %v4_e160 to i32
  store i32 %v6_e160, i32* %r3.global-to-local, align 4
  %v9_e164 = icmp eq i8 %v4_e160, %v4_e15c
  %v1_e168 = add i32 %v0_e168, 1
  %v1_e168. = select i1 %v9_e164, i32 %v1_e168, i32 0
  br i1 %v9_e164, label %dec_label_pc_e3e4, label %dec_label_pc_e178

dec_label_pc_e178:                                ; preds = %dec_label_pc_e3e4, %dec_label_pc_e158
  %storemerge4 = add i32 %storemerge4.in, 1
  %v1_e178 = add i32 %v0_e178, -1
  store i32 %v1_e178, i32* %r1.global-to-local, align 4
  %v2_e178 = icmp eq i32 %v0_e178, 0
  br i1 %v2_e178, label %dec_label_pc_e180, label %dec_label_pc_e158

dec_label_pc_e180:                                ; preds = %dec_label_pc_e178, %dec_label_pc_e150, %dec_label_pc_e134
  %v3_e184 = load i32, i32* %stack_var_-40, align 4
  %v5_e18c = icmp slt i32 %v4_e004395, %v3_e184
  br i1 %v5_e18c, label %dec_label_pc_e1cc, label %dec_label_pc_e19c

dec_label_pc_e19c:                                ; preds = %dec_label_pc_e180
  %v1_e19c = add i32 %v4_e004395, -1
  store i32 %v1_e19c, i32* %r1.global-to-local, align 4
  %v2_e19c = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e19c, label %dec_label_pc_e1cc, label %dec_label_pc_e1a4.preheader

dec_label_pc_e1a4.preheader:                      ; preds = %dec_label_pc_e19c
  %v1_e1ac.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e1a4

dec_label_pc_e1a4:                                ; preds = %dec_label_pc_e1c4, %dec_label_pc_e1a4.preheader
  %v0_e1c4 = phi i32 [ %v1_e19c, %dec_label_pc_e1a4.preheader ], [ %v1_e1c4, %dec_label_pc_e1c4 ]
  %storemerge6.in = phi i32 [ 0, %dec_label_pc_e1a4.preheader ], [ %storemerge6, %dec_label_pc_e1c4 ]
  %v0_e1b4 = phi i32 [ 0, %dec_label_pc_e1a4.preheader ], [ %v1_e1b4., %dec_label_pc_e1c4 ]
  store i32 %v3_dfb4, i32* %r3.global-to-local, align 4
  %v2_e1a8 = add i32 %v0_e1b4, %v3_dfb4
  %v3_e1a8 = inttoptr i32 %v2_e1a8 to i8*
  %v4_e1a8 = load i8, i8* %v3_e1a8, align 1
  %v6_e1a8 = zext i8 %v4_e1a8 to i32
  store i32 %v6_e1a8, i32* %r2.global-to-local, align 4
  %v2_e1ac = add i32 %storemerge6.in, %v1_e1ac.pre
  %v3_e1ac = inttoptr i32 %v2_e1ac to i8*
  %v4_e1ac = load i8, i8* %v3_e1ac, align 1
  %v6_e1ac = zext i8 %v4_e1ac to i32
  store i32 %v6_e1ac, i32* %r3.global-to-local, align 4
  %v9_e1b0 = icmp eq i8 %v4_e1ac, %v4_e1a8
  %v1_e1b4 = add i32 %v0_e1b4, 1
  %v1_e1b4. = select i1 %v9_e1b0, i32 %v1_e1b4, i32 0
  br i1 %v9_e1b0, label %dec_label_pc_e3f4, label %dec_label_pc_e1c4

dec_label_pc_e1c4:                                ; preds = %dec_label_pc_e3f4, %dec_label_pc_e1a4
  %storemerge6 = add i32 %storemerge6.in, 1
  %v1_e1c4 = add i32 %v0_e1c4, -1
  store i32 %v1_e1c4, i32* %r1.global-to-local, align 4
  %v2_e1c4 = icmp eq i32 %v0_e1c4, 0
  br i1 %v2_e1c4, label %dec_label_pc_e1cc, label %dec_label_pc_e1a4

dec_label_pc_e1cc:                                ; preds = %dec_label_pc_e1c4, %dec_label_pc_e19c, %dec_label_pc_e180
  %v3_e1d0 = load i32, i32* %stack_var_-44, align 4
  %v5_e1d8 = icmp slt i32 %v4_e004395, %v3_e1d0
  br i1 %v5_e1d8, label %dec_label_pc_e414, label %.thread111

.thread111:                                       ; preds = %dec_label_pc_e1cc
  %v1_e1e8193 = add i32 %v4_e004395, -1
  store i32 %v1_e1e8193, i32* %r1.global-to-local, align 4
  %v2_e1e8194 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e1e8194, label %dec_label_pc_e414, label %dec_label_pc_e1f0.lr.ph

dec_label_pc_e1f0.lr.ph:                          ; preds = %.thread111
  %v1_e1f8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e1f0

dec_label_pc_e1f0:                                ; preds = %dec_label_pc_e1e8.backedge, %dec_label_pc_e1f0.lr.ph
  %v0_e1e8 = phi i32 [ %v1_e1e8193, %dec_label_pc_e1f0.lr.ph ], [ %v1_e1e8, %dec_label_pc_e1e8.backedge ]
  %storemerge226.in = phi i32 [ 0, %dec_label_pc_e1f0.lr.ph ], [ %storemerge226, %dec_label_pc_e1e8.backedge ]
  %v0_e200 = phi i32 [ 0, %dec_label_pc_e1f0.lr.ph ], [ %v1_e200., %dec_label_pc_e1e8.backedge ]
  store i32 %v3_dfc8, i32* %r3.global-to-local, align 4
  %v2_e1f4 = add i32 %v0_e200, %v3_dfc8
  %v3_e1f4 = inttoptr i32 %v2_e1f4 to i8*
  %v4_e1f4 = load i8, i8* %v3_e1f4, align 1
  %v6_e1f4 = zext i8 %v4_e1f4 to i32
  store i32 %v6_e1f4, i32* %r2.global-to-local, align 4
  %v2_e1f8 = add i32 %storemerge226.in, %v1_e1f8.pre
  %v3_e1f8 = inttoptr i32 %v2_e1f8 to i8*
  %v4_e1f8 = load i8, i8* %v3_e1f8, align 1
  %v6_e1f8 = zext i8 %v4_e1f8 to i32
  store i32 %v6_e1f8, i32* %r3.global-to-local, align 4
  %v9_e1fc = icmp eq i8 %v4_e1f8, %v4_e1f4
  %v1_e200 = add i32 %v0_e200, 1
  %v1_e200. = select i1 %v9_e1fc, i32 %v1_e200, i32 0
  br i1 %v9_e1fc, label %dec_label_pc_e404, label %dec_label_pc_e1e8.backedge

dec_label_pc_e214:                                ; preds = %dec_label_pc_e228
  %v9_e214 = icmp eq i32 %v3_e014, %v1_e234.
  br i1 %v9_e214, label %dec_label_pc_e334, label %dec_label_pc_e220.backedge

dec_label_pc_e220.backedge:                       ; preds = %dec_label_pc_e228, %dec_label_pc_e214
  %storemerge231 = add i32 %storemerge231.in, 1
  %v1_e220 = add i32 %v0_e220, -1
  store i32 %v1_e220, i32* %r1.global-to-local, align 4
  %v2_e220 = icmp eq i32 %v0_e220, 0
  br i1 %v2_e220, label %dec_label_pc_e02c, label %dec_label_pc_e228

dec_label_pc_e228:                                ; preds = %dec_label_pc_e220.backedge, %dec_label_pc_e228.lr.ph
  %v0_e220 = phi i32 [ %v1_e220148, %dec_label_pc_e228.lr.ph ], [ %v1_e220, %dec_label_pc_e220.backedge ]
  %storemerge231.in = phi i32 [ 0, %dec_label_pc_e228.lr.ph ], [ %storemerge231, %dec_label_pc_e220.backedge ]
  %v0_e234 = phi i32 [ 0, %dec_label_pc_e228.lr.ph ], [ %v1_e234., %dec_label_pc_e220.backedge ]
  %v2_e228 = add i32 %v0_e234, %v0_e228.pre
  %v3_e228 = inttoptr i32 %v2_e228 to i8*
  %v4_e228 = load i8, i8* %v3_e228, align 1
  %v6_e228 = zext i8 %v4_e228 to i32
  store i32 %v6_e228, i32* %r2.global-to-local, align 4
  %v2_e22c = add i32 %storemerge231.in, %v1_e22c.pre
  %v3_e22c = inttoptr i32 %v2_e22c to i8*
  %v4_e22c = load i8, i8* %v3_e22c, align 1
  %v6_e22c = zext i8 %v4_e22c to i32
  store i32 %v6_e22c, i32* %r3.global-to-local, align 4
  %v9_e230 = icmp eq i8 %v4_e22c, %v4_e228
  %v1_e234 = add i32 %v0_e234, 1
  %v1_e234. = select i1 %v9_e230, i32 %v1_e234, i32 0
  br i1 %v9_e230, label %dec_label_pc_e214, label %dec_label_pc_e220.backedge

dec_label_pc_e248:                                ; preds = %dec_label_pc_e25c
  %v9_e248 = icmp eq i32 %v3_e030, %v1_e26c.
  br i1 %v9_e248, label %dec_label_pc_e334, label %dec_label_pc_e254.backedge

dec_label_pc_e254.backedge:                       ; preds = %dec_label_pc_e25c, %dec_label_pc_e248
  %storemerge230 = add i32 %storemerge230.in, 1
  %v1_e254 = add i32 %v0_e254, -1
  store i32 %v1_e254, i32* %r1.global-to-local, align 4
  %v2_e254 = icmp eq i32 %v0_e254, 0
  br i1 %v2_e254, label %dec_label_pc_e048, label %dec_label_pc_e25c

dec_label_pc_e25c:                                ; preds = %dec_label_pc_e254.backedge, %dec_label_pc_e25c.lr.ph
  %v0_e254 = phi i32 [ %v1_e254157, %dec_label_pc_e25c.lr.ph ], [ %v1_e254, %dec_label_pc_e254.backedge ]
  %storemerge230.in = phi i32 [ 0, %dec_label_pc_e25c.lr.ph ], [ %storemerge230, %dec_label_pc_e254.backedge ]
  %v0_e26c = phi i32 [ 0, %dec_label_pc_e25c.lr.ph ], [ %v1_e26c., %dec_label_pc_e254.backedge ]
  store i32 %v3_df2c, i32* %r3.global-to-local, align 4
  %v2_e260 = add i32 %v0_e26c, %v3_df2c
  %v3_e260 = inttoptr i32 %v2_e260 to i8*
  %v4_e260 = load i8, i8* %v3_e260, align 1
  %v6_e260 = zext i8 %v4_e260 to i32
  store i32 %v6_e260, i32* %r2.global-to-local, align 4
  %v2_e264 = add i32 %storemerge230.in, %v1_e264.pre
  %v3_e264 = inttoptr i32 %v2_e264 to i8*
  %v4_e264 = load i8, i8* %v3_e264, align 1
  %v6_e264 = zext i8 %v4_e264 to i32
  store i32 %v6_e264, i32* %r3.global-to-local, align 4
  %v9_e268 = icmp eq i8 %v4_e264, %v4_e260
  %v1_e26c = add i32 %v0_e26c, 1
  %v1_e26c. = select i1 %v9_e268, i32 %v1_e26c, i32 0
  br i1 %v9_e268, label %dec_label_pc_e248, label %dec_label_pc_e254.backedge

dec_label_pc_e280:                                ; preds = %dec_label_pc_e294
  %v9_e280 = icmp eq i32 %v3_e04c, %v1_e2a4.
  br i1 %v9_e280, label %dec_label_pc_e334, label %dec_label_pc_e28c.backedge

dec_label_pc_e28c.backedge:                       ; preds = %dec_label_pc_e294, %dec_label_pc_e280
  %storemerge229 = add i32 %storemerge229.in, 1
  %v1_e28c = add i32 %v0_e28c, -1
  store i32 %v1_e28c, i32* %r1.global-to-local, align 4
  %v2_e28c = icmp eq i32 %v0_e28c, 0
  br i1 %v2_e28c, label %dec_label_pc_e064, label %dec_label_pc_e294

dec_label_pc_e294:                                ; preds = %dec_label_pc_e28c.backedge, %dec_label_pc_e294.lr.ph
  %v0_e28c = phi i32 [ %v1_e28c166, %dec_label_pc_e294.lr.ph ], [ %v1_e28c, %dec_label_pc_e28c.backedge ]
  %storemerge229.in = phi i32 [ 0, %dec_label_pc_e294.lr.ph ], [ %storemerge229, %dec_label_pc_e28c.backedge ]
  %v0_e2a4 = phi i32 [ 0, %dec_label_pc_e294.lr.ph ], [ %v1_e2a4., %dec_label_pc_e28c.backedge ]
  store i32 %v3_df40, i32* %r3.global-to-local, align 4
  %v2_e298 = add i32 %v0_e2a4, %v3_df40
  %v3_e298 = inttoptr i32 %v2_e298 to i8*
  %v4_e298 = load i8, i8* %v3_e298, align 1
  %v6_e298 = zext i8 %v4_e298 to i32
  store i32 %v6_e298, i32* %r2.global-to-local, align 4
  %v2_e29c = add i32 %storemerge229.in, %v1_e29c.pre
  %v3_e29c = inttoptr i32 %v2_e29c to i8*
  %v4_e29c = load i8, i8* %v3_e29c, align 1
  %v6_e29c = zext i8 %v4_e29c to i32
  store i32 %v6_e29c, i32* %r3.global-to-local, align 4
  %v9_e2a0 = icmp eq i8 %v4_e29c, %v4_e298
  %v1_e2a4 = add i32 %v0_e2a4, 1
  %v1_e2a4. = select i1 %v9_e2a0, i32 %v1_e2a4, i32 0
  br i1 %v9_e2a0, label %dec_label_pc_e280, label %dec_label_pc_e28c.backedge

dec_label_pc_e2b8:                                ; preds = %dec_label_pc_e2cc
  %v9_e2b8 = icmp eq i32 %v3_e068, %v1_e2dc.
  br i1 %v9_e2b8, label %dec_label_pc_e334, label %dec_label_pc_e2c4.backedge

dec_label_pc_e2c4.backedge:                       ; preds = %dec_label_pc_e2cc, %dec_label_pc_e2b8
  %storemerge228 = add i32 %storemerge228.in, 1
  %v1_e2c4 = add i32 %v0_e2c4, -1
  store i32 %v1_e2c4, i32* %r1.global-to-local, align 4
  %v2_e2c4 = icmp eq i32 %v0_e2c4, 0
  br i1 %v2_e2c4, label %dec_label_pc_e080, label %dec_label_pc_e2cc

dec_label_pc_e2cc:                                ; preds = %dec_label_pc_e2c4.backedge, %dec_label_pc_e2cc.lr.ph
  %v0_e2c4 = phi i32 [ %v1_e2c4175, %dec_label_pc_e2cc.lr.ph ], [ %v1_e2c4, %dec_label_pc_e2c4.backedge ]
  %storemerge228.in = phi i32 [ 0, %dec_label_pc_e2cc.lr.ph ], [ %storemerge228, %dec_label_pc_e2c4.backedge ]
  %v0_e2dc = phi i32 [ 0, %dec_label_pc_e2cc.lr.ph ], [ %v1_e2dc., %dec_label_pc_e2c4.backedge ]
  store i32 %v3_df54, i32* %r3.global-to-local, align 4
  %v2_e2d0 = add i32 %v0_e2dc, %v3_df54
  %v3_e2d0 = inttoptr i32 %v2_e2d0 to i8*
  %v4_e2d0 = load i8, i8* %v3_e2d0, align 1
  %v6_e2d0 = zext i8 %v4_e2d0 to i32
  store i32 %v6_e2d0, i32* %r2.global-to-local, align 4
  %v2_e2d4 = add i32 %storemerge228.in, %v1_e2d4.pre
  %v3_e2d4 = inttoptr i32 %v2_e2d4 to i8*
  %v4_e2d4 = load i8, i8* %v3_e2d4, align 1
  %v6_e2d4 = zext i8 %v4_e2d4 to i32
  store i32 %v6_e2d4, i32* %r3.global-to-local, align 4
  %v9_e2d8 = icmp eq i8 %v4_e2d4, %v4_e2d0
  %v1_e2dc = add i32 %v0_e2dc, 1
  %v1_e2dc. = select i1 %v9_e2d8, i32 %v1_e2dc, i32 0
  br i1 %v9_e2d8, label %dec_label_pc_e2b8, label %dec_label_pc_e2c4.backedge

dec_label_pc_e2f0:                                ; preds = %dec_label_pc_e304
  %v9_e2f0 = icmp eq i32 %v3_e084, %v1_e314.
  br i1 %v9_e2f0, label %dec_label_pc_e334, label %dec_label_pc_e2fc.backedge

dec_label_pc_e2fc.backedge:                       ; preds = %dec_label_pc_e304, %dec_label_pc_e2f0
  %storemerge227 = add i32 %storemerge227.in, 1
  %v1_e2fc = add i32 %v0_e2fc, -1
  store i32 %v1_e2fc, i32* %r1.global-to-local, align 4
  %v2_e2fc = icmp eq i32 %v0_e2fc, 0
  br i1 %v2_e2fc, label %dec_label_pc_e09c, label %dec_label_pc_e304

dec_label_pc_e304:                                ; preds = %dec_label_pc_e2fc.backedge, %dec_label_pc_e304.lr.ph
  %v0_e2fc = phi i32 [ %v1_e2fc184, %dec_label_pc_e304.lr.ph ], [ %v1_e2fc, %dec_label_pc_e2fc.backedge ]
  %storemerge227.in = phi i32 [ 0, %dec_label_pc_e304.lr.ph ], [ %storemerge227, %dec_label_pc_e2fc.backedge ]
  %v0_e314 = phi i32 [ 0, %dec_label_pc_e304.lr.ph ], [ %v1_e314., %dec_label_pc_e2fc.backedge ]
  store i32 %v3_df68, i32* %r3.global-to-local, align 4
  %v2_e308 = add i32 %v0_e314, %v3_df68
  %v3_e308 = inttoptr i32 %v2_e308 to i8*
  %v4_e308 = load i8, i8* %v3_e308, align 1
  %v6_e308 = zext i8 %v4_e308 to i32
  store i32 %v6_e308, i32* %r2.global-to-local, align 4
  %v2_e30c = add i32 %storemerge227.in, %v1_e30c.pre
  %v3_e30c = inttoptr i32 %v2_e30c to i8*
  %v4_e30c = load i8, i8* %v3_e30c, align 1
  %v6_e30c = zext i8 %v4_e30c to i32
  store i32 %v6_e30c, i32* %r3.global-to-local, align 4
  %v9_e310 = icmp eq i8 %v4_e30c, %v4_e308
  %v1_e314 = add i32 %v0_e314, 1
  %v1_e314. = select i1 %v9_e310, i32 %v1_e314, i32 0
  br i1 %v9_e310, label %dec_label_pc_e2f0, label %dec_label_pc_e2fc.backedge

dec_label_pc_e328:                                ; preds = %dec_label_pc_e0c0
  %v9_e328 = icmp eq i32 %v3_e0a0, %v1_e0d0.
  br i1 %v9_e328, label %dec_label_pc_e334, label %dec_label_pc_e0dc

dec_label_pc_e334:                                ; preds = %dec_label_pc_deac, %dec_label_pc_dff8.backedge, %dec_label_pc_e214, %dec_label_pc_e248, %dec_label_pc_e280, %dec_label_pc_e2b8, %dec_label_pc_e2f0, %dec_label_pc_e328, %dec_label_pc_e3d4, %dec_label_pc_e3e4, %dec_label_pc_e3f4, %dec_label_pc_e404, %dec_label_pc_e474, %dec_label_pc_e4ac
  %storemerge8 = phi i32 [ 1, %dec_label_pc_e4ac ], [ 1, %dec_label_pc_e474 ], [ 1, %dec_label_pc_e404 ], [ 1, %dec_label_pc_e3f4 ], [ 1, %dec_label_pc_e3e4 ], [ 1, %dec_label_pc_e3d4 ], [ 1, %dec_label_pc_e328 ], [ 1, %dec_label_pc_e2f0 ], [ 1, %dec_label_pc_e2b8 ], [ 1, %dec_label_pc_e280 ], [ 1, %dec_label_pc_e248 ], [ 1, %dec_label_pc_e214 ], [ 0, %dec_label_pc_dff8.backedge ], [ 0, %dec_label_pc_deac ]
  store i32 %storemerge8, i32* @r4, align 4
  %v1_e338 = call i32 @function_11d94(i32 13)
  %v1_e340 = call i32 @function_11d94(i32 14)
  %v1_e348 = call i32 @function_11d94(i32 15)
  %v1_e350 = call i32 @function_11d94(i32 16)
  %v1_e358 = call i32 @function_11d94(i32 17)
  %v1_e360 = call i32 @function_11d94(i32 18)
  %v1_e368 = call i32 @function_11d94(i32 19)
  %v1_e370 = call i32 @function_11d94(i32 20)
  %v1_e378 = call i32 @function_11d94(i32 21)
  %v1_e380 = call i32 @function_11d94(i32 22)
  %v1_e388 = call i32 @function_11d94(i32 23)
  %v1_e390 = call i32 @function_11d94(i32 42)
  %v0_e394 = load i32, i32* @r5, align 4
  %v1_e398 = call i32 @close(i32 %v0_e394)
  %v0_e39c = load i32, i32* @r4, align 4
  %v2_e39c = icmp eq i32 %v0_e39c, 0
  br i1 %v2_e39c, label %dec_label_pc_e3a4, label %dec_label_pc_e4bc

dec_label_pc_e3a4:                                ; preds = %dec_label_pc_e334, %dec_label_pc_de94, %dec_label_pc_e4bc
  store i32 64, i32* @r1, align 4
  store i32 %v2_dc34, i32* @r0, align 4
  %v0_e3ac = call i32 @function_127cc()
  store i32 %v2_dd68, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_e3bc = call i32 @function_127cc()
  %v1_e3c4 = call i32 @sleep(i32 1)
  store i32 %v2_dcf8, i32* @r4, align 4
  %v0_e3cc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_e3cc, i32* @r5, align 4
  br label %dec_label_pc_dc60.backedge

dec_label_pc_dc60.backedge:                       ; preds = %dec_label_pc_dcbc, %dec_label_pc_dcb4, %dec_label_pc_dc70, %dec_label_pc_e3a4, %dec_label_pc_de68, %.thread22
  %v0_dc60 = load i32, i32* %sl.global-to-local, align 4
  %v1_dc60 = inttoptr i32 %v0_dc60 to %__dirstream*
  %v3_dc64 = call %dirent* @readdir(%__dirstream* %v1_dc60)
  %v2_dc68 = icmp eq %dirent* %v3_dc64, null
  br i1 %v2_dc68, label %dec_label_pc_dce8, label %dec_label_pc_dc70.preheader

dec_label_pc_e3d4:                                ; preds = %dec_label_pc_e10c
  %v9_e3d4 = icmp eq i32 %v3_e0ec, %v1_e11c.
  br i1 %v9_e3d4, label %dec_label_pc_e334, label %dec_label_pc_e12c

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_e158
  %v9_e3e4 = icmp eq i32 %v3_e138, %v1_e168.
  br i1 %v9_e3e4, label %dec_label_pc_e334, label %dec_label_pc_e178

dec_label_pc_e3f4:                                ; preds = %dec_label_pc_e1a4
  %v9_e3f4 = icmp eq i32 %v3_e184, %v1_e1b4.
  br i1 %v9_e3f4, label %dec_label_pc_e334, label %dec_label_pc_e1c4

dec_label_pc_e404:                                ; preds = %dec_label_pc_e1f0
  %v9_e404 = icmp eq i32 %v3_e1d0, %v1_e200.
  br i1 %v9_e404, label %dec_label_pc_e334, label %dec_label_pc_e1e8.backedge

dec_label_pc_e1e8.backedge:                       ; preds = %dec_label_pc_e404, %dec_label_pc_e1f0
  %storemerge226 = add i32 %storemerge226.in, 1
  %v1_e1e8 = add i32 %v0_e1e8, -1
  store i32 %v1_e1e8, i32* %r1.global-to-local, align 4
  %v2_e1e8 = icmp eq i32 %v0_e1e8, 0
  br i1 %v2_e1e8, label %dec_label_pc_e414, label %dec_label_pc_e1f0

dec_label_pc_e414:                                ; preds = %dec_label_pc_e1e8.backedge, %.thread111, %dec_label_pc_e1cc
  %v3_e418 = load i32, i32* %stack_var_-48, align 4
  %v5_e420 = icmp slt i32 %v4_e004395, %v3_e418
  br i1 %v5_e420, label %dec_label_pc_e430, label %.thread120

.thread120:                                       ; preds = %dec_label_pc_e414
  %v1_e480202 = add i32 %v4_e004395, -1
  store i32 %v1_e480202, i32* %r1.global-to-local, align 4
  %v2_e480203 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e480203, label %dec_label_pc_e430, label %dec_label_pc_e488.lr.ph

dec_label_pc_e488.lr.ph:                          ; preds = %.thread120
  %v1_e490.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e488

dec_label_pc_e430:                                ; preds = %dec_label_pc_e480.backedge, %.thread120, %dec_label_pc_e414
  %v3_e434 = load i32, i32* %stack_var_-52, align 4
  %v5_e43c = icmp slt i32 %v4_e004395, %v3_e434
  br i1 %v5_e43c, label %dec_label_pc_dff8.backedge, label %.thread126

.thread126:                                       ; preds = %dec_label_pc_e430
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_e448212 = icmp eq i32 %v4_e004395, 0
  br i1 %v2_e448212, label %dec_label_pc_dff8.backedge, label %dec_label_pc_e450.lr.ph

dec_label_pc_dff8.backedge:                       ; preds = %dec_label_pc_e448.backedge, %.thread126, %dec_label_pc_e430
  %v0_dff8 = load i32, i32* @r5, align 4
  store i32 %v2_db60, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v4_e004 = call i32 @read(i32 %v0_dff8, i32* nonnull %stack_var_-8436, i32 4096)
  %tmp375 = icmp slt i32 %v4_e004, 1
  br i1 %tmp375, label %dec_label_pc_e334, label %dec_label_pc_e010

dec_label_pc_e450.lr.ph:                          ; preds = %.thread126
  %v1_e458.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e450

dec_label_pc_e450:                                ; preds = %dec_label_pc_e448.backedge, %dec_label_pc_e450.lr.ph
  %v0_e448.in = phi i32 [ %v4_e004395, %dec_label_pc_e450.lr.ph ], [ %v0_e448, %dec_label_pc_e448.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_e450.lr.ph ], [ %storemerge, %dec_label_pc_e448.backedge ]
  %v0_e460 = phi i32 [ 0, %dec_label_pc_e450.lr.ph ], [ %v1_e460., %dec_label_pc_e448.backedge ]
  %v0_e448 = add i32 %v0_e448.in, -1
  store i32 %v3_dff0, i32* %r3.global-to-local, align 4
  %v2_e454 = add i32 %v0_e460, %v3_dff0
  %v3_e454 = inttoptr i32 %v2_e454 to i8*
  %v4_e454 = load i8, i8* %v3_e454, align 1
  %v6_e454 = zext i8 %v4_e454 to i32
  store i32 %v6_e454, i32* %r2.global-to-local, align 4
  %v2_e458 = add i32 %storemerge.in, %v1_e458.pre
  %v3_e458 = inttoptr i32 %v2_e458 to i8*
  %v4_e458 = load i8, i8* %v3_e458, align 1
  %v6_e458 = zext i8 %v4_e458 to i32
  store i32 %v6_e458, i32* %r3.global-to-local, align 4
  %v9_e45c = icmp eq i8 %v4_e458, %v4_e454
  %v1_e460 = add i32 %v0_e460, 1
  %v1_e460. = select i1 %v9_e45c, i32 %v1_e460, i32 0
  store i32 %v1_e460., i32* %r1.global-to-local, align 4
  br i1 %v9_e45c, label %dec_label_pc_e4ac, label %dec_label_pc_e448.backedge

dec_label_pc_e448.backedge:                       ; preds = %dec_label_pc_e4ac, %dec_label_pc_e450
  %storemerge = add i32 %storemerge.in, 1
  %v2_e448 = icmp eq i32 %v0_e448, 0
  br i1 %v2_e448, label %dec_label_pc_dff8.backedge, label %dec_label_pc_e450

dec_label_pc_e474:                                ; preds = %dec_label_pc_e488
  %v9_e474 = icmp eq i32 %v3_e418, %v1_e498.
  br i1 %v9_e474, label %dec_label_pc_e334, label %dec_label_pc_e480.backedge

dec_label_pc_e480.backedge:                       ; preds = %dec_label_pc_e488, %dec_label_pc_e474
  %storemerge225 = add i32 %storemerge225.in, 1
  %v1_e480 = add i32 %v0_e480, -1
  store i32 %v1_e480, i32* %r1.global-to-local, align 4
  %v2_e480 = icmp eq i32 %v0_e480, 0
  br i1 %v2_e480, label %dec_label_pc_e430, label %dec_label_pc_e488

dec_label_pc_e488:                                ; preds = %dec_label_pc_e480.backedge, %dec_label_pc_e488.lr.ph
  %v0_e480 = phi i32 [ %v1_e480202, %dec_label_pc_e488.lr.ph ], [ %v1_e480, %dec_label_pc_e480.backedge ]
  %storemerge225.in = phi i32 [ 0, %dec_label_pc_e488.lr.ph ], [ %storemerge225, %dec_label_pc_e480.backedge ]
  %v0_e498 = phi i32 [ 0, %dec_label_pc_e488.lr.ph ], [ %v1_e498., %dec_label_pc_e480.backedge ]
  store i32 %v3_dfdc, i32* %r3.global-to-local, align 4
  %v2_e48c = add i32 %v0_e498, %v3_dfdc
  %v3_e48c = inttoptr i32 %v2_e48c to i8*
  %v4_e48c = load i8, i8* %v3_e48c, align 1
  %v6_e48c = zext i8 %v4_e48c to i32
  store i32 %v6_e48c, i32* %r2.global-to-local, align 4
  %v2_e490 = add i32 %storemerge225.in, %v1_e490.pre
  %v3_e490 = inttoptr i32 %v2_e490 to i8*
  %v4_e490 = load i8, i8* %v3_e490, align 1
  %v6_e490 = zext i8 %v4_e490 to i32
  store i32 %v6_e490, i32* %r3.global-to-local, align 4
  %v9_e494 = icmp eq i8 %v4_e490, %v4_e48c
  %v1_e498 = add i32 %v0_e498, 1
  %v1_e498. = select i1 %v9_e494, i32 %v1_e498, i32 0
  br i1 %v9_e494, label %dec_label_pc_e474, label %dec_label_pc_e480.backedge

dec_label_pc_e4ac:                                ; preds = %dec_label_pc_e450
  %v9_e4ac = icmp eq i32 %v3_e434, %v1_e460.
  br i1 %v9_e4ac, label %dec_label_pc_e334, label %dec_label_pc_e448.backedge

dec_label_pc_e4bc:                                ; preds = %dec_label_pc_e334
  %v0_e4bc = load i32, i32* %r8.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_e4c4 = call i32 @kill(i32 %v0_e4bc, i32 9)
  br label %dec_label_pc_e3a4

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_de74
  %v0_e4cc = load i32, i32* %r8.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_e4d4 = call i32 @kill(i32 %v0_e4cc, i32 9)
  %v0_de8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_de8c

; uselistorder directives
  uselistorder i32 %v1_e498., { 1, 0 }
  uselistorder i1 %v9_e494, { 1, 0 }
  uselistorder i32 %v0_e498, { 1, 0 }
  uselistorder i32 %v1_e460., { 1, 2, 0 }
  uselistorder i1 %v9_e45c, { 1, 0 }
  uselistorder i32 %v0_e460, { 1, 0 }
  uselistorder i32 %storemerge.in, { 1, 0 }
  uselistorder i32 %v4_e004, { 1, 0 }
  uselistorder i32 %v1_e1e8, { 1, 0 }
  uselistorder %dirent* %v3_dc64, { 1, 0 }
  uselistorder i32 %v1_e314., { 1, 0 }
  uselistorder i1 %v9_e310, { 1, 0 }
  uselistorder i32 %v0_e314, { 1, 0 }
  uselistorder i32 %v1_e2dc., { 1, 0 }
  uselistorder i1 %v9_e2d8, { 1, 0 }
  uselistorder i32 %v0_e2dc, { 1, 0 }
  uselistorder i32 %v1_e2a4., { 1, 0 }
  uselistorder i1 %v9_e2a0, { 1, 0 }
  uselistorder i32 %v0_e2a4, { 1, 0 }
  uselistorder i32 %v1_e26c., { 1, 0 }
  uselistorder i1 %v9_e268, { 1, 0 }
  uselistorder i32 %v0_e26c, { 1, 0 }
  uselistorder i32 %v1_e234., { 1, 0 }
  uselistorder i1 %v9_e230, { 1, 0 }
  uselistorder i32 %v0_e234, { 1, 0 }
  uselistorder i32 %v1_e200., { 1, 0 }
  uselistorder i1 %v9_e1fc, { 1, 0 }
  uselistorder i32 %v0_e200, { 1, 0 }
  uselistorder i32 %storemerge226.in, { 1, 0 }
  uselistorder i32 %v0_e1e8, { 1, 0 }
  uselistorder i32 %v1_e1c4, { 1, 0 }
  uselistorder i32 %v1_e1b4., { 1, 0 }
  uselistorder i1 %v9_e1b0, { 1, 0 }
  uselistorder i32 %v0_e1b4, { 1, 0 }
  uselistorder i32 %storemerge6.in, { 1, 0 }
  uselistorder i32 %v0_e1c4, { 1, 0 }
  uselistorder i32 %v1_e178, { 1, 0 }
  uselistorder i32 %v1_e168., { 1, 0 }
  uselistorder i1 %v9_e164, { 1, 0 }
  uselistorder i32 %v0_e168, { 1, 0 }
  uselistorder i32 %storemerge4.in, { 1, 0 }
  uselistorder i32 %v0_e178, { 1, 0 }
  uselistorder i32 %v1_e12c, { 1, 0 }
  uselistorder i32 %v1_e11c., { 1, 0 }
  uselistorder i1 %v9_e118, { 1, 0 }
  uselistorder i32 %v0_e11c, { 1, 0 }
  uselistorder i32 %storemerge2.in, { 1, 0 }
  uselistorder i32 %v0_e12c, { 1, 0 }
  uselistorder i32 %v1_e0dc, { 1, 0 }
  uselistorder i32 %v1_e0d0., { 1, 0 }
  uselistorder i1 %v9_e0cc, { 1, 0 }
  uselistorder i32 %v0_e0d0, { 1, 0 }
  uselistorder i32 %v0_e0e0, { 1, 0 }
  uselistorder i32 %v0_e0dc, { 1, 0 }
  uselistorder i32 %v4_e004395, { 0, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_ddc0, { 1, 0 }
  uselistorder %dirent* %v3_dcdc, { 1, 0 }
  uselistorder i32 %v5_dc4c, { 1, 0 }
  uselistorder i32 %v2_dd68, { 1, 0, 2, 3 }
  uselistorder i32 %v2_db60, { 1, 0, 2, 3, 4 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32* %stack_var_-100, { 1, 0 }
  uselistorder i32* %stack_var_-8436, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 1, 0, 2 }
  uselistorder i32* %stack_var_-84, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %sl.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8 }
  uselistorder i32* %r3.global-to-local, { 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 19, 20, 6, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 18, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 67, 68, 69, 70, 18, 0, 75, 9, 71, 72, 73, 74, 8, 7, 10, 11, 12, 13, 14, 15, 16, 17, 6, 5, 4, 3, 2, 66, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 44, 43, 45, 46, 47, 49, 48, 50, 51, 1, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 64, { 9, 10, 11, 12, 0, 4, 13, 14, 15, 5, 16, 17, 18, 19, 6, 20, 21, 22, 7, 23, 24, 25, 8, 26, 27, 28, 1, 29, 30, 31, 32, 33, 2, 34, 35, 36, 37, 38, 3, 39 }
  uselistorder i32 (%__dirstream*)* @closedir, { 1, 0, 2, 3 }
  uselistorder %dirent* null, { 4, 3, 1, 5, 6, 7, 0, 8, 2 }
  uselistorder %dirent* (%__dirstream*)* @readdir, { 4, 5, 1, 8, 7, 6, 0, 3, 2, 9 }
  uselistorder %__dirstream* (i8*)* @opendir, { 2, 0, 1, 3 }
  uselistorder i32 (i8*, i8*, i32)* @readlink, { 2, 1, 0, 3, 4 }
  uselistorder i8** @global_var_1ba1c.119, { 3, 0, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1ba1c.119 to i32), { 0, 3, 2, 1 }
  uselistorder i32 4096, { 5, 9, 0, 1, 6, 10, 7, 11, 2, 8, 3, 4 }
  uselistorder i32* @global_var_1ba20.112, { 0, 2, 1 }
  uselistorder label %dec_label_pc_dc60.backedge, { 3, 4, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_e3a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e334, { 13, 12, 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder label %dec_label_pc_e010, { 1, 0 }
  uselistorder label %dec_label_pc_de94, { 1, 0 }
  uselistorder label %dec_label_pc_de8c, { 1, 0 }
  uselistorder label %dec_label_pc_de30, { 1, 0 }
  uselistorder label %dec_label_pc_dc70, { 1, 0 }
  uselistorder label %dec_label_pc_dc70.preheader, { 1, 0 }
  uselistorder label %bb374, { 1, 0 }
  uselistorder label %dec_label_pc_db18, { 1, 0 }
}

define i32 @function_e4f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_e4f0:
  store i32 ptrtoint (i32* @global_var_e678.121 to i32), i32* @global_var_1b994.123, align 4
  ret i32 %arg1
}

define i32 @function_e508(i32 %arg1) local_unnamed_addr {
dec_label_pc_e508:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_e508 = load i32, i32* @r4, align 4
  %v9_e508 = load i32, i32* @r6, align 4
  %v12_e508 = load i32, i32* @r7, align 4
  %v15_e508 = load i32, i32* @r8, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_e524 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_1b98c.125 to i32), i32* @r6, align 4
  %v2_e52c = icmp eq i32 %v3_e524, -1
  store i32 %v3_e524, i32* @global_var_1b98c.125, align 4
  br i1 %v2_e52c, label %dec_label_pc_e5ec, label %dec_label_pc_e538

dec_label_pc_e538:                                ; preds = %dec_label_pc_e508
  %v0_e53c = load i32, i32* %r4.global-to-local, align 4
  %v6_e54c = call i32 @setsockopt(i32 %v3_e524, i32 %v0_e53c, i32 2, i32* nonnull %stack_var_-28, i32 4)
  %v2_e550 = load i32, i32* @global_var_1b98c.125, align 4
  store i32 %v2_e550, i32* %r4.global-to-local, align 4
  %v2_e560 = call i32 (i32, i32, ...) @fcntl(i32 %v2_e550, i32 3)
  %v2_e570 = call i32 (i32, i32, ...) @fcntl(i32 %v2_e550, i32 4)
  store i32 ptrtoint (i8** @global_var_1b998.127 to i32), i32* @r8, align 4
  %v2_e578 = load i8, i8* bitcast (i8** @global_var_1b998.127 to i8*), align 4
  %v2_e57c = icmp eq i8 %v2_e578, 0
  br i1 %v2_e57c, label %.thread2, label %.thread

.thread2:                                         ; preds = %dec_label_pc_e538
  br label %bb

.thread:                                          ; preds = %dec_label_pc_e538
  br label %bb

bb:                                               ; preds = %.thread2, %.thread
  store i32 0, i32* @r5, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_e5b4 = call i32* @__errno_location()
  %v2_e5b4 = ptrtoint i32* %v0_e5b4 to i32
  %v0_e5b8 = load i32, i32* @r5, align 4
  store i32 %v0_e5b8, i32* %v0_e5b4, align 4
  %v2_e5bc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_e5bc, i32* @r7, align 4
  store i32 %v2_e5b4, i32* %r4.global-to-local, align 4
  %tmp21 = bitcast i32* %stack_var_-44 to %sockaddr*
  %v2_e5c8 = load i32, i32* @global_var_1b98c.125, align 4
  %v5_e5d0 = call i32 @bind(i32 %v2_e5c8, %sockaddr* %tmp21, i32 16)
  %v2_e5d4 = icmp eq i32 %v5_e5d0, -1
  br i1 %v2_e5d4, label %dec_label_pc_e5f4, label %dec_label_pc_e5dc

dec_label_pc_e5dc:                                ; preds = %bb
  %v2_e5e4 = load i32, i32* @global_var_1b98c.125, align 4
  %v2_e5e8 = call i32 @listen(i32 %v2_e5e4, i32 1)
  br label %dec_label_pc_e5ec

dec_label_pc_e5ec:                                ; preds = %dec_label_pc_e508, %dec_label_pc_e600, %dec_label_pc_e5dc
  %v20_e5f0 = phi i32 [ -1, %dec_label_pc_e508 ], [ %v1_e650, %dec_label_pc_e600 ], [ %v2_e5e8, %dec_label_pc_e5dc ]
  store i32 %v3_e508, i32* @r4, align 4
  store i32 %v9_e508, i32* @r6, align 4
  store i32 %v12_e508, i32* @r7, align 4
  store i32 %v15_e508, i32* @r8, align 4
  ret i32 %v20_e5f0

dec_label_pc_e5f4:                                ; preds = %bb
  %v0_e5f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_e5f4 = inttoptr i32 %v0_e5f4 to i32*
  %v2_e5f4 = load i32, i32* %v1_e5f4, align 4
  %v7_e5f8 = icmp eq i32 %v2_e5f4, 99
  br i1 %v7_e5f8, label %dec_label_pc_e658, label %dec_label_pc_e600

dec_label_pc_e600:                                ; preds = %dec_label_pc_e658, %bb22, %dec_label_pc_e5f4
  store i32 0, i32* @r4, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v2_e618 = load i32, i32* @global_var_1b98c.125, align 4
  %v5_e630 = call i32 @connect(i32 %v2_e618, %sockaddr* %tmp21, i32 16)
  %v1_e638 = call i32 @sleep(i32 5)
  %v2_e63c = load i32, i32* @global_var_1b98c.125, align 4
  %v1_e640 = call i32 @close(i32 %v2_e63c)
  %v1_e64c = call i32 @function_d4f4(i32 58811)
  %v1_e650 = call i32 @function_e508(i32 %v1_e64c)
  br label %dec_label_pc_e5ec

dec_label_pc_e658:                                ; preds = %dec_label_pc_e5f4
  %v2_e658 = load i8, i8* bitcast (i8** @global_var_1b998.127 to i8*), align 4
  %v3_e658 = zext i8 %v2_e658 to i32
  %v1_e65c = load i32, i32* @r5, align 4
  %v9_e65c = icmp eq i32 %v3_e658, %v1_e65c
  br i1 %v9_e65c, label %dec_label_pc_e600, label %bb22

bb22:                                             ; preds = %dec_label_pc_e658
  %v2_e664 = trunc i32 %v1_e65c to i8
  store i8 %v2_e664, i8* bitcast (i8** @global_var_1b998.127 to i8*), align 4
  br label %dec_label_pc_e600

; uselistorder directives
  uselistorder i32* %stack_var_-44, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @function_d4f4, { 1, 0 }
  uselistorder i32 (i32, %sockaddr*, i32)* @bind, { 1, 2, 0, 3 }
  uselistorder i8* bitcast (i8** @global_var_1b998.127 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_1b998.127, { 1, 0 }
  uselistorder label %dec_label_pc_e600, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e5ec, { 1, 2, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_e678() local_unnamed_addr {
dec_label_pc_e678:
  %stack_var_-16 = alloca i32, align 4
  %v3_e678 = load i32, i32* @r4, align 4
  store i32 %v3_e678, i32* %stack_var_-16, align 4
  %v1_e680 = call i32 @function_11e4c(i32 3)
  %v3_e68c = call i32 @function_11d68(i32 3, i32* null)
  %v1_e690 = inttoptr i32 %v3_e68c to i8*
  %v2_e690 = call i32 @function_f134(i8* %v1_e690)
  store i32 %v2_e690, i32* @r5, align 4
  %v1_e69c = call i32 @function_11d94(i32 3)
  %v0_e6a0 = load i32, i32* @r5, align 4
  %v2_e6a0 = icmp eq i32 %v0_e6a0, 0
  br i1 %v2_e6a0, label %bb, label %bb5

bb:                                               ; preds = %dec_label_pc_e678
  ret i32 %v1_e69c

bb5:                                              ; preds = %dec_label_pc_e678
  %v1_e6ac = add i32 %v0_e6a0, 4
  %v2_e6ac = inttoptr i32 %v1_e6ac to i32*
  %v3_e6ac = load i32, i32* %v2_e6ac, align 4
  store i32 %v3_e6ac, i32* @r4, align 4
  %v0_e6b0 = call i32 @function_ef90()
  %v0_e6b4 = load i32, i32* @r5, align 4
  %v1_e6b4 = inttoptr i32 %v0_e6b4 to i8*
  %v2_e6b4 = load i8, i8* %v1_e6b4, align 1
  %v3_e6b4 = zext i8 %v2_e6b4 to i32
  %v2_e6b8 = urem i32 %v0_e6b0, %v3_e6b4
  %v0_e6bc = load i32, i32* @r4, align 4
  %v4_e6bc = mul nuw nsw i32 %v2_e6b8, 4
  %v5_e6bc = add i32 %v0_e6bc, %v4_e6bc
  %v6_e6bc = inttoptr i32 %v5_e6bc to i32*
  %v7_e6bc = load i32, i32* %v6_e6bc, align 4
  store i32 %v7_e6bc, i32* @global_var_1ba28.131, align 4
  %v2_e6c8 = inttoptr i32 %v0_e6b4 to i32*
  %v3_e6c8 = call i32 @function_f110(i32* %v2_e6c8, i32 %v3_e6b4)
  %v1_e6d0 = call i32 @function_11e4c(i32 4)
  %v3_e6dc = call i32 @function_11d68(i32 4, i32* null)
  %v4_e6dc = inttoptr i32 %v3_e6dc to i8*
  %v2_e6e0 = add i32 %v3_e6dc, 1
  %v3_e6e0 = inttoptr i32 %v2_e6e0 to i8*
  %v4_e6e0 = load i8, i8* %v3_e6e0, align 1
  %v3_e6e4 = load i8, i8* %v4_e6dc, align 1
  store i8 %v4_e6e0, i8* bitcast (i32* @global_var_1ba27.132 to i8*), align 4
  store i8 %v3_e6e4, i8* bitcast (i32* @global_var_1ba26.133 to i8*), align 4
  %v2_e6fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e6fc, i32* @r4, align 4
  %v1_e700 = call i32 @function_11d94(i32 4)
  %v0_e704 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e704, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  ret i32 %v1_e700

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_e708(i32 %arg1) local_unnamed_addr {
dec_label_pc_e708:
  %v3_e708 = load i32, i32* @r4, align 4
  %v6_e708 = load i32, i32* @r5, align 4
  %v0_e710 = call i32 @fork()
  %v2_e714 = icmp eq i32 %v0_e710, -1
  %. = zext i1 %v2_e714 to i32
  %tmp11 = icmp slt i32 %v0_e710, 1
  %storemerge5 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge5, i32* @r5, align 4
  %v2_e730 = icmp eq i32 %storemerge5, 0
  store i32 %v0_e710, i32* @global_var_1b9c8.135, align 4
  br i1 %v2_e730, label %dec_label_pc_e744, label %dec_label_pc_e73c

dec_label_pc_e73c:                                ; preds = %dec_label_pc_e708
  store i32 %v3_e708, i32* @r4, align 4
  store i32 %v6_e708, i32* @r5, align 4
  ret i32 %v0_e710

dec_label_pc_e744:                                ; preds = %dec_label_pc_e708
  %v1_e750 = call i32 @function_11e4c(i32 13)
  %v1_e758 = call i32 @function_11e4c(i32 14)
  %v0_e75c = load i32, i32* @r5, align 4
  %v2_e764 = inttoptr i32 %v0_e75c to i32*
  %v3_e764 = call i32 @function_11d68(i32 13, i32* %v2_e764)
  %v4_e764 = inttoptr i32 %v3_e764 to i8*
  %v4_e76c = call i32 (i8*, i32, ...) @open(i8* %v4_e764, i32 2)
  %v2_e770 = icmp eq i32 %v4_e76c, -1
  store i32 %v4_e76c, i32* @r4, align 4
  br i1 %v2_e770, label %dec_label_pc_e7b8, label %dec_label_pc_e77c

dec_label_pc_e77c:                                ; preds = %dec_label_pc_e7b8, %dec_label_pc_e744
  %v0_e788 = phi i32 [ %v4_e7c8, %dec_label_pc_e7b8 ], [ %v4_e76c, %dec_label_pc_e744 ]
  %v2_e790 = call i32 (i32, i32, ...) @ioctl(i32 %v0_e788, i32 -2147199228)
  br label %dec_label_pc_e794

dec_label_pc_e794:                                ; preds = %dec_label_pc_e794, %dec_label_pc_e77c
  %v0_e7a0 = load i32, i32* @r4, align 4
  %v2_e7a8 = call i32 (i32, i32, ...) @ioctl(i32 %v0_e7a0, i32 -2147199227)
  %v1_e7b0 = call i32 @sleep(i32 10)
  br label %dec_label_pc_e794

dec_label_pc_e7b8:                                ; preds = %dec_label_pc_e744
  %v0_e7b8 = load i32, i32* @r5, align 4
  %v2_e7c0 = inttoptr i32 %v0_e7b8 to i32*
  %v3_e7c0 = call i32 @function_11d68(i32 14, i32* %v2_e7c0)
  %v4_e7c0 = inttoptr i32 %v3_e7c0 to i8*
  %v4_e7c8 = call i32 (i8*, i32, ...) @open(i8* %v4_e7c0, i32 2)
  %v3_e7cc = icmp eq i32 %v4_e7c8, -1
  store i32 %v4_e7c8, i32* @r4, align 4
  br i1 %v3_e7cc, label %dec_label_pc_e7d8, label %dec_label_pc_e77c

dec_label_pc_e7d8:                                ; preds = %dec_label_pc_e7b8
  %v1_e7dc = call i32 @function_11d94(i32 13)
  %v1_e7e4 = call i32 @function_11d94(i32 14)
  %v0_e7e8 = load i32, i32* @r5, align 4
  call void @exit(i32 %v0_e7e8)
  unreachable

; uselistorder directives
  uselistorder i32 %v4_e7c8, { 1, 2, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v0_e710, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, ...)* @ioctl, { 1, 0, 2 }
  uselistorder i32 (i8*, i32, ...)* @open, { 3, 2, 1, 0, 6, 5, 4, 7 }
}

define i32 @function_e7f4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_e7f4:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp11 = call i8 @__decompiler_undefined_function_1()
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-1548 = alloca i32, align 4
  %stack_var_-38 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-524 = alloca i32, align 4
  %stack_var_-396 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_e7f4 = load i32, i32* @r4, align 4
  store i32 %v3_e7f4, i32* %stack_var_-36, align 4
  %v6_e7f4 = load i32, i32* @r5, align 4
  %v9_e7f4 = load i32, i32* @r6, align 4
  %v15_e7f4 = load i32, i32* @r8, align 4
  %v2_e800 = ptrtoint i32* %stack_var_-268 to i32
  store i32 %v2_e800, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %tmp45 = bitcast i32* %stack_var_-268 to %_TYPEDEF_sigset_t*
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v3_e818 = call i32 @sigemptyset(%_TYPEDEF_sigset_t* %tmp45)
  %v4_e824 = call i32 @sigaddset(%_TYPEDEF_sigset_t* %tmp45, i32 2)
  %v0_e828 = load i32, i32* @r5, align 4
  %v1_e828 = inttoptr i32 %v0_e828 to %_TYPEDEF_sigset_t*
  store i32 %v0_e828, i32* %r2.global-to-local, align 4
  %v7_e834 = call i32 @sigprocmask(i32 %v0_e828, %_TYPEDEF_sigset_t* %tmp45, %_TYPEDEF_sigset_t* %v1_e828)
  %v4_e840 = call void (i32)* @signal(i32 17, void (i32)* inttoptr (i32 1 to void (i32)*))
  %v4_e84c = call void (i32)* @signal(i32 5, void (i32)* bitcast (void (i32)** @global_var_e4f0.137 to void (i32)*))
  %v0_e850 = call i32 @function_129e4()
  store i32 %v0_e850, i32* @global_var_1ba18.101, align 4
  store i32 902487617, i32* %r2.global-to-local, align 4
  store i8 80, i8* bitcast (i32* @global_var_1ba27.132 to i8*), align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i8 2, i8* bitcast (%sockaddr** @global_var_1ba24.130 to i8*), align 4
  store i32 902487617, i32* @global_var_1ba28.131, align 4
  %v0_e878 = load i32, i32* @r5, align 4
  %v1_e878 = trunc i32 %v0_e878 to i8
  store i8 %v1_e878, i8* bitcast (i32* @global_var_1ba26.133 to i8*), align 4
  store i8 %v1_e878, i8* bitcast (i32* @global_var_1ba25.141 to i8*), align 4
  %v6_e880 = call i32 @function_11f04(i32 %v0_e850, i32 ptrtoint (%sockaddr** @global_var_1ba24.130 to i32), i32 902487617, i32 2)
  store i32 ptrtoint (i32* @global_var_e678.121 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_e678.121 to i32), i32* @global_var_1b994.123, align 4
  %v2_e894 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_e894, i32* @sb, align 4
  %v1_e898 = call i32 @function_e508(i32 %v6_e880)
  %v1_e89c = call i32 @function_efe8(i32 %v1_e898)
  store i32 %v2_e894, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_e8a8 = call i32 @function_127cc()
  %v0_e8ac = load i32, i32* @r6, align 4
  %v7_e8ac = icmp eq i32 %v0_e8ac, 2
  br i1 %v7_e8ac, label %dec_label_pc_e9d8, label %dec_label_pc_e8b4

dec_label_pc_e8b4:                                ; preds = %dec_label_pc_e9d8, %dec_label_pc_e7f4, %dec_label_pc_e9e8
  %v0_e8b4 = call i32 @function_ef90()
  store i32 %v0_e8b4, i32* %r6.global-to-local, align 4
  %v0_e8bc = load i32, i32* @r8, align 4
  %v1_e8bc = inttoptr i32 %v0_e8bc to i32*
  %v2_e8bc = load i32, i32* %v1_e8bc, align 4
  %v1_e8c0 = inttoptr i32 %v2_e8bc to i8*
  %v2_e8c0 = call i32 @function_1272c(i8* %v1_e8c0)
  store i32 %v2_e8c0, i32* %r4.global-to-local, align 4
  %v0_e8c8 = load i32, i32* @r8, align 4
  %v1_e8c8 = inttoptr i32 %v0_e8c8 to i32*
  %v2_e8c8 = load i32, i32* %v1_e8c8, align 4
  %v1_e8cc = inttoptr i32 %v2_e8c8 to i8*
  %v2_e8cc = call i32 @function_1272c(i8* %v1_e8cc)
  %v1_e8d0 = sub i32 20, %v2_e8c0
  store i32 %v2_e8cc, i32* @r5, align 4
  %v0_e8d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_e8dc = urem i32 %v0_e8d8, %v1_e8d0
  %v2_e8e4 = add i32 %v2_e8dc, %v2_e8cc
  store i32 %v2_e8e4, i32* @r4, align 4
  %v2_e8e8 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_e8e8, i32* @r6, align 4
  %v2_e8f4 = call i32 @function_f044(i32 %v2_e8e8, i32 %v2_e8e4)
  %v2_e8f8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e8f8, i32* %r2.global-to-local, align 4
  %v1_e8fc = load i32, i32* @r4, align 4
  %v2_e8fc = add i32 %v1_e8fc, %v2_e8f8
  store i32 %v2_e8fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_e908 = load i32, i32* @r8, align 4
  %v1_e908 = inttoptr i32 %v0_e908 to i32*
  %v2_e908 = load i32, i32* %v1_e908, align 4
  store i32 %v2_e908, i32* @r0, align 4
  %v3_e90c = add i32 %v2_e8fc, -72
  %v4_e90c = inttoptr i32 %v3_e90c to i8*
  store i8 0, i8* %v4_e90c, align 1
  %v2_e910 = inttoptr i32 %v2_e908 to i8*
  %v3_e910 = call i32 @function_12754(i8* %v2_e910, i32 %v2_e8e8)
  store i32 32, i32* @r1, align 4
  store i32 %v2_e8e8, i32* @r0, align 4
  %v0_e91c = call i32 @function_127cc()
  %v0_e920 = call i32 @function_ef90()
  store i32 %v0_e920, i32* @r7, align 4
  %v0_e928 = load i32, i32* @r8, align 4
  %v1_e928 = inttoptr i32 %v0_e928 to i32*
  %v2_e928 = load i32, i32* %v1_e928, align 4
  %v1_e92c = inttoptr i32 %v2_e928 to i8*
  %v2_e92c = call i32 @function_1272c(i8* %v1_e92c)
  store i32 %v2_e92c, i32* %r4.global-to-local, align 4
  %v0_e934 = load i32, i32* @r8, align 4
  %v1_e934 = inttoptr i32 %v0_e934 to i32*
  %v2_e934 = load i32, i32* %v1_e934, align 4
  %v1_e938 = inttoptr i32 %v2_e934 to i8*
  %v2_e938 = call i32 @function_1272c(i8* %v1_e938)
  %v1_e93c = sub i32 20, %v2_e92c
  store i32 %v2_e938, i32* @r5, align 4
  %v0_e944 = load i32, i32* @r7, align 4
  %v2_e948 = urem i32 %v0_e944, %v1_e93c
  %v2_e94c = add i32 %v2_e948, %v2_e938
  store i32 %v2_e94c, i32* @r4, align 4
  %v2_e958 = call i32 @function_f044(i32 %v2_e8e8, i32 %v2_e94c)
  %v1_e960 = load i32, i32* @r4, align 4
  %v2_e960 = add i32 %v1_e960, %v2_e8f8
  store i32 %v2_e960, i32* %r3.global-to-local, align 4
  %v0_e964 = load i32, i32* @sl, align 4
  %v1_e964 = trunc i32 %v0_e964 to i8
  %v3_e964 = add i32 %v2_e960, -72
  %v4_e964 = inttoptr i32 %v3_e964 to i8*
  store i8 %v1_e964, i8* %v4_e964, align 1
  %v5_e970 = call i32 @prctl(i32 15, i32 %v2_e8e8, i32 %v2_e960, i32 %v2_e960, i32 ptrtoint (i32* @0 to i32))
  %v1_e978 = call i32 @function_11e4c(i32 2)
  %v3_e988 = call i32 @function_11d68(i32 2, i32* nonnull %stack_var_-44)
  %v3_e98c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_e98c, i32* %r2.global-to-local, align 4
  %v3_e998 = inttoptr i32 %v3_e988 to i32*
  %v4_e998 = call i32 @write(i32 1, i32* %v3_e998, i32 %v3_e98c)
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_e9a8 = call i32 @write(i32 ptrtoint (i32* @global_var_12fc0.145 to i32), i32* inttoptr (i32 1 to i32*), i32 1)
  %v1_e9b0 = call i32 @function_11d94(i32 2)
  %v1_e9b4 = call i32 @function_9314(i32 %v1_e9b0)
  %v1_e9b8 = call i32 @function_da64(i32 %v1_e9b4)
  %v1_e9bc = call i32 @function_e708(i32 %v1_e9b8)
  %v0_e9c0 = call i32 @fork()
  %v1_e9c4 = load i32, i32* @sl, align 4
  %v7_e9c8 = icmp sgt i32 %v0_e9c0, %v1_e9c4
  br i1 %v7_e9c8, label %dec_label_pc_e9cc, label %dec_label_pc_ea10

dec_label_pc_e9cc:                                ; preds = %dec_label_pc_e8b4
  %v2_e9d4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_e9d4, i32* %r4.global-to-local, align 4
  store i32 %v6_e7f4, i32* %r5.global-to-local, align 4
  store i32 %v9_e7f4, i32* %r6.global-to-local, align 4
  store i32 %v15_e7f4, i32* %r8.global-to-local, align 4
  ret i32 0

dec_label_pc_e9d8:                                ; preds = %dec_label_pc_e7f4
  %v0_e9d8 = load i32, i32* @r8, align 4
  %v1_e9d8 = add i32 %v0_e9d8, 4
  %v2_e9d8 = inttoptr i32 %v1_e9d8 to i32*
  %v3_e9d8 = load i32, i32* %v2_e9d8, align 4
  %v1_e9dc = inttoptr i32 %v3_e9d8 to i8*
  %v2_e9dc = call i32 @function_1272c(i8* %v1_e9dc)
  %v8_e9e4 = icmp sgt i32 %v2_e9dc, 31
  br i1 %v8_e9e4, label %dec_label_pc_e8b4, label %dec_label_pc_e9e8

dec_label_pc_e9e8:                                ; preds = %dec_label_pc_e9d8
  %v0_e9e8 = load i32, i32* @r8, align 4
  %v1_e9e8 = add i32 %v0_e9e8, 4
  %v2_e9e8 = inttoptr i32 %v1_e9e8 to i32*
  %v3_e9e8 = load i32, i32* %v2_e9e8, align 4
  store i32 %v2_e894, i32* @r0, align 4
  %v2_e9f0 = bitcast i32* %stack_var_-140 to i8*
  %v3_e9f0 = call i32 @function_12754(i8* %v2_e9f0, i32 %v3_e9e8)
  %v0_e9f4 = load i32, i32* @r8, align 4
  %v1_e9f4 = add i32 %v0_e9f4, 4
  %v2_e9f4 = inttoptr i32 %v1_e9f4 to i32*
  %v3_e9f4 = load i32, i32* %v2_e9f4, align 4
  store i32 %v3_e9f4, i32* %r4.global-to-local, align 4
  %v1_e9fc = inttoptr i32 %v3_e9f4 to i8*
  %v2_e9fc = call i32 @function_1272c(i8* %v1_e9fc)
  store i32 %v2_e9fc, i32* @r1, align 4
  store i32 %v3_e9f4, i32* @r0, align 4
  %v0_ea08 = call i32 @function_127cc()
  br label %dec_label_pc_e8b4

dec_label_pc_ea10:                                ; preds = %dec_label_pc_e8b4
  %v1_ea10 = call i32 @setsid()
  %v0_ea18 = load i32, i32* @sl, align 4
  %v1_ea1c = call i32 @close(i32 %v0_ea18)
  %v1_ea24 = call i32 @close(i32 1)
  %v1_ea2c = call i32 @close(i32 2)
  %v1_ea30 = call i32 @function_9314(i32 %v1_ea2c)
  %v1_ea34 = call i32 @function_da64(i32 %v1_ea30)
  %v1_ea38 = call i32 @function_e708(i32 %v1_ea34)
  %v1_ea3c = call i32 @function_f90c(i32 %v1_ea38)
  store i32 ptrtoint (i32* @global_var_1b990.147 to i32), i32* @fp, align 4
  %v2_ea4c = ptrtoint i32* %stack_var_-396 to i32
  store i32 %v2_ea4c, i32* @r6, align 4
  %v2_ea50 = ptrtoint i32* %stack_var_-524 to i32
  store i32 %v2_ea50, i32* @r7, align 4
  %tmp46 = bitcast i32* %stack_var_-396 to %_TYPEDEF_fd_set*
  %tmp47 = bitcast i32* %stack_var_-524 to %_TYPEDEF_fd_set*
  %tmp48 = bitcast i32* %stack_var_-60 to %timeval*
  %v7_edd0 = bitcast i8* %stack_var_-38 to i32*
  %v2_ecf8 = ptrtoint i32* %stack_var_-1548 to i32
  %v2_ede0 = ptrtoint i32* %stack_var_-48 to i32
  %v1_ee74 = bitcast i32* %stack_var_-140 to i8*
  %tmp50 = bitcast i32* %stack_var_-76 to %sockaddr*
  br label %dec_label_pc_ea54

dec_label_pc_ea54:                                ; preds = %dec_label_pc_ea54.backedge, %dec_label_pc_ea10
  %v2_ea5c54 = phi i32 [ %v2_ea4c, %dec_label_pc_ea10 ], [ %v2_ea5c54.pre, %dec_label_pc_ea54.backedge ]
  %stack_var_-37.0 = phi i8 [ %tmp11, %dec_label_pc_ea10 ], [ %stack_var_-37.0.be, %dec_label_pc_ea54.backedge ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_ea5c56 = inttoptr i32 %v2_ea5c54 to i32*
  store i32 0, i32* %v4_ea5c56, align 4
  %v0_ea6057 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea6058 = add i32 %v0_ea6057, 4
  store i32 %v1_ea6058, i32* %r3.global-to-local, align 4
  %v7_ea6459 = icmp eq i32 %v1_ea6058, 128
  br i1 %v7_ea6459, label %dec_label_pc_ea6c, label %dec_label_pc_ea5c.dec_label_pc_ea5c_crit_edge

dec_label_pc_ea5c.dec_label_pc_ea5c_crit_edge:    ; preds = %dec_label_pc_ea54, %dec_label_pc_ea5c.dec_label_pc_ea5c_crit_edge
  %v1_ea6060 = phi i32 [ %v1_ea60, %dec_label_pc_ea5c.dec_label_pc_ea5c_crit_edge ], [ %v1_ea6058, %dec_label_pc_ea54 ]
  %v0_ea5c.pre = load i32, i32* %r2.global-to-local, align 4
  %v2_ea5c = load i32, i32* @r6, align 4
  %v3_ea5c = add i32 %v2_ea5c, %v1_ea6060
  %v4_ea5c = inttoptr i32 %v3_ea5c to i32*
  store i32 %v0_ea5c.pre, i32* %v4_ea5c, align 4
  %v0_ea60 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea60 = add i32 %v0_ea60, 4
  store i32 %v1_ea60, i32* %r3.global-to-local, align 4
  %v7_ea64 = icmp eq i32 %v1_ea60, 128
  br i1 %v7_ea64, label %dec_label_pc_ea6c, label %dec_label_pc_ea5c.dec_label_pc_ea5c_crit_edge

dec_label_pc_ea6c:                                ; preds = %dec_label_pc_ea5c.dec_label_pc_ea5c_crit_edge, %dec_label_pc_ea54
  %v0_ea6c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ea6c, i32* %r3.global-to-local, align 4
  store i32 %v0_ea6c, i32* %r4.global-to-local, align 4
  %v2_ea7461 = load i32, i32* @r7, align 4
  %v3_ea7462 = add i32 %v2_ea7461, %v0_ea6c
  %v4_ea7463 = inttoptr i32 %v3_ea7462 to i32*
  store i32 %v0_ea6c, i32* %v4_ea7463, align 4
  %v0_ea7864 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea7865 = add i32 %v0_ea7864, 4
  store i32 %v1_ea7865, i32* %r3.global-to-local, align 4
  %v7_ea7c66 = icmp eq i32 %v1_ea7865, 128
  br i1 %v7_ea7c66, label %dec_label_pc_ea84, label %dec_label_pc_ea74.dec_label_pc_ea74_crit_edge

dec_label_pc_ea74.dec_label_pc_ea74_crit_edge:    ; preds = %dec_label_pc_ea6c, %dec_label_pc_ea74.dec_label_pc_ea74_crit_edge
  %v1_ea7867 = phi i32 [ %v1_ea78, %dec_label_pc_ea74.dec_label_pc_ea74_crit_edge ], [ %v1_ea7865, %dec_label_pc_ea6c ]
  %v0_ea74.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_ea74 = load i32, i32* @r7, align 4
  %v3_ea74 = add i32 %v2_ea74, %v1_ea7867
  %v4_ea74 = inttoptr i32 %v3_ea74 to i32*
  store i32 %v0_ea74.pre, i32* %v4_ea74, align 4
  %v0_ea78 = load i32, i32* %r3.global-to-local, align 4
  %v1_ea78 = add i32 %v0_ea78, 4
  store i32 %v1_ea78, i32* %r3.global-to-local, align 4
  %v7_ea7c = icmp eq i32 %v1_ea78, 128
  br i1 %v7_ea7c, label %dec_label_pc_ea84, label %dec_label_pc_ea74.dec_label_pc_ea74_crit_edge

dec_label_pc_ea84:                                ; preds = %dec_label_pc_ea74.dec_label_pc_ea74_crit_edge, %dec_label_pc_ea6c
  store i32 ptrtoint (i32* @global_var_1b98c.125 to i32), i32* %r2.global-to-local, align 4
  %v2_ea88 = load i32, i32* @global_var_1b98c.125, align 4
  %v2_ea8c = icmp eq i32 %v2_ea88, -1
  br i1 %v2_ea8c, label %dec_label_pc_eab8, label %dec_label_pc_ea94

dec_label_pc_ea94:                                ; preds = %dec_label_pc_ea84
  %v3_ea94 = udiv i32 %v2_ea88, 32
  %v3_ea98 = mul nuw nsw i32 %v3_ea94, 4
  %v2_eaa0 = add i32 %v3_ea98, %v2_e8f8
  store i32 %v2_eaa0, i32* %r3.global-to-local, align 4
  %v1_eaa4 = add i32 %v2_eaa0, -360
  %v2_eaa4 = inttoptr i32 %v1_eaa4 to i32*
  %v3_eaa4 = load i32, i32* %v2_eaa4, align 4
  %v1_eaa8 = urem i32 %v2_ea88, 32
  %v7_eab0 = shl i32 1, %v1_eaa8
  %v8_eab0 = or i32 %v3_eaa4, %v7_eab0
  store i32 %v8_eab0, i32* %r2.global-to-local, align 4
  store i32 %v8_eab0, i32* %v2_eaa4, align 4
  br label %dec_label_pc_eab8

dec_label_pc_eab8:                                ; preds = %dec_label_pc_ea84, %dec_label_pc_ea94
  %v2_eab8 = load i32, i32* @global_var_1b990.147, align 4
  store i32 %v2_eab8, i32* %r3.global-to-local, align 4
  %v2_eabc = icmp eq i32 %v2_eab8, -1
  store i32 ptrtoint (i32* @global_var_1b990.147 to i32), i32* %r8.global-to-local, align 4
  br i1 %v2_eabc, label %dec_label_pc_ed48, label %dec_label_pc_eac8

dec_label_pc_eac8:                                ; preds = %dec_label_pc_ed48, %dec_label_pc_eab8, %.thread
  store i32 ptrtoint (i8** @global_var_1b9cc.150 to i32), i32* %r2.global-to-local, align 4
  %v2_eacc = load i8, i8* bitcast (i8** @global_var_1b9cc.150 to i8*), align 4
  %v2_ead0 = icmp eq i8 %v2_eacc, 0
  %v2_ec10 = load i32, i32* @global_var_1b990.147, align 4
  %v3_ec14 = udiv i32 %v2_ec10, 32
  store i32 %v3_ec14, i32* %r3.global-to-local, align 4
  br i1 %v2_ead0, label %dec_label_pc_ec10, label %dec_label_pc_ead8

dec_label_pc_ead8:                                ; preds = %dec_label_pc_eac8
  %v3_eae0 = mul nuw nsw i32 %v3_ec14, 4
  %v2_eae8 = add i32 %v3_eae0, %v2_e8f8
  store i32 %v2_eae8, i32* %r3.global-to-local, align 4
  %v1_eaec = add i32 %v2_eae8, -488
  %v2_eaec = inttoptr i32 %v1_eaec to i32*
  %v3_eaec = load i32, i32* %v2_eaec, align 4
  %v1_eaf0 = urem i32 %v2_ec10, 32
  %v7_eaf8 = shl i32 1, %v1_eaf0
  %v8_eaf8 = or i32 %v3_eaec, %v7_eaf8
  store i32 %v8_eaf8, i32* %r2.global-to-local, align 4
  store i32 %v8_eaf8, i32* %v2_eaec, align 4
  br label %dec_label_pc_eb00

dec_label_pc_eb00:                                ; preds = %dec_label_pc_ec10, %dec_label_pc_ead8
  %v2_eb04 = load i32, i32* @global_var_1b98c.125, align 4
  %v2_eb08 = load i32, i32* @global_var_1b990.147, align 4
  store i32 %v2_eb08, i32* %r3.global-to-local, align 4
  %v5_eb14 = icmp slt i32 %v2_eb04, %v2_eb08
  br i1 %v5_eb14, label %bb, label %bb51

bb:                                               ; preds = %dec_label_pc_eb00
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_eb00, %bb
  %v0_eb2c = phi i32 [ %v2_eb04, %dec_label_pc_eb00 ], [ %v2_eb08, %bb ]
  store i32 10, i32* %stack_var_-60, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_eb2c = add i32 %v0_eb2c, 1
  store i32 %v2_ea50, i32* %r2.global-to-local, align 4
  %v13_eb40 = call i32 @select(i32 %v1_eb2c, %_TYPEDEF_fd_set* %tmp46, %_TYPEDEF_fd_set* %tmp47, %_TYPEDEF_fd_set* null, %timeval* %tmp48)
  %v14_eb40 = trunc i32 %v13_eb40 to i8
  %v3_eb44 = icmp eq i8 %v14_eb40, -1
  store i32 %v13_eb40, i32* %r3.global-to-local, align 4
  br i1 %v3_eb44, label %dec_label_pc_ea54.backedge, label %dec_label_pc_eb50

dec_label_pc_eb50:                                ; preds = %bb51
  %v3_eb50 = icmp eq i8 %v14_eb40, 0
  br i1 %v3_eb50, label %dec_label_pc_eb58, label %dec_label_pc_eb78

dec_label_pc_eb58:                                ; preds = %dec_label_pc_eb50
  %v0_eb58 = load i32, i32* @sl, align 4
  store i8 0, i8* %stack_var_-38, align 1
  %v2_eb68 = srem i32 %v0_eb58, 6
  %v2_eb6c = icmp eq i32 %v2_eb68, 0
  %v1_eb70 = add i32 %v0_eb58, 1
  store i32 %v1_eb70, i32* @sl, align 4
  br i1 %v2_eb6c, label %dec_label_pc_edb8, label %dec_label_pc_eb78

dec_label_pc_eb78:                                ; preds = %dec_label_pc_eb50, %dec_label_pc_eb58, %dec_label_pc_edb8
  %stack_var_-37.1 = phi i8 [ 0, %dec_label_pc_edb8 ], [ 0, %dec_label_pc_eb58 ], [ %stack_var_-37.0, %dec_label_pc_eb50 ]
  store i32 ptrtoint (i32* @global_var_1b98c.125 to i32), i32* %r2.global-to-local, align 4
  %v2_eb7c = load i32, i32* @global_var_1b98c.125, align 4
  %v2_eb80 = icmp eq i32 %v2_eb7c, -1
  br i1 %v2_eb80, label %dec_label_pc_ebac, label %dec_label_pc_eb88

dec_label_pc_eb88:                                ; preds = %dec_label_pc_eb78
  %v3_eb88 = udiv i32 %v2_eb7c, 32
  %v3_eb8c = mul nuw nsw i32 %v3_eb88, 4
  store i32 %v2_e8f8, i32* @ip, align 4
  %v2_eb94 = add i32 %v3_eb8c, %v2_e8f8
  store i32 %v2_eb94, i32* %r3.global-to-local, align 4
  %v1_eb98 = add i32 %v2_eb94, -360
  %v2_eb98 = inttoptr i32 %v1_eb98 to i32*
  %v3_eb98 = load i32, i32* %v2_eb98, align 4
  %v1_eb9c = urem i32 %v2_eb7c, 32
  %v6_eba0 = lshr i32 %v3_eb98, %v1_eb9c
  store i32 %v6_eba0, i32* %r2.global-to-local, align 4
  %v1_eba4 = urem i32 %v6_eba0, 2
  %v2_eba4 = icmp eq i32 %v1_eba4, 0
  store i1 %v2_eba4, i1* @cpsr_z, align 1
  br i1 %v2_eba4, label %dec_label_pc_ebac, label %dec_label_pc_ee34

dec_label_pc_ebac:                                ; preds = %dec_label_pc_eb88, %dec_label_pc_eb78
  store i32 ptrtoint (i8** @global_var_1b9cc.150 to i32), i32* %r3.global-to-local, align 4
  %v2_ebb0 = load i8, i8* bitcast (i8** @global_var_1b9cc.150 to i8*), align 4
  %v3_ebb0 = zext i8 %v2_ebb0 to i32
  store i32 %v3_ebb0, i32* %r4.global-to-local, align 4
  %v2_ebb4 = icmp eq i8 %v2_ebb0, 0
  %v2_ec3c = load i32, i32* @global_var_1b990.147, align 4
  br i1 %v2_ebb4, label %dec_label_pc_ec3c, label %dec_label_pc_ebbc

dec_label_pc_ebbc:                                ; preds = %dec_label_pc_ebac
  %v3_ebc0 = udiv i32 %v2_ec3c, 32
  %v3_ebc8 = mul nuw nsw i32 %v3_ebc0, 4
  %v2_ebcc = add i32 %v3_ebc8, %v2_e8f8
  store i32 %v2_ebcc, i32* %r3.global-to-local, align 4
  %v1_ebd0 = add i32 %v2_ebcc, -488
  %v2_ebd0 = inttoptr i32 %v1_ebd0 to i32*
  %v3_ebd0 = load i32, i32* %v2_ebd0, align 4
  %v1_ebd4 = urem i32 %v2_ec3c, 32
  %v6_ebd8 = lshr i32 %v3_ebd0, %v1_ebd4
  store i32 %v6_ebd8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1b9cc.150 to i32), i32* %r3.global-to-local, align 4
  %v1_ebe4 = urem i32 %v6_ebd8, 2
  %v2_ebe4 = icmp eq i32 %v1_ebe4, 0
  store i8 0, i8* bitcast (i8** @global_var_1b9cc.150 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1b990.147 to i32), i32* @r5, align 4
  br i1 %v2_ebe4, label %dec_label_pc_ebf4, label %dec_label_pc_edd8

dec_label_pc_ebf4:                                ; preds = %dec_label_pc_ebbc
  %v1_ebf8 = icmp ne i32 %v2_ec3c, -1
  call void @__pseudo_cond_branch(i1 %v1_ebf8, i32 ptrtoint (i32* @global_var_8dac.151 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ec00 = load i32, i32* @r5, align 4
  %v2_ec00 = inttoptr i32 %v1_ec00 to i32*
  store i32 -1, i32* %v2_ec00, align 4
  %v1_ec08 = call i32 @sleep(i32 1)
  br label %dec_label_pc_ea54.backedge

dec_label_pc_ea54.backedge:                       ; preds = %dec_label_pc_ebf4, %dec_label_pc_ed24, %dec_label_pc_ee0c, %dec_label_pc_eec0, %dec_label_pc_eee8, %dec_label_pc_ef58, %bb51, %dec_label_pc_ec3c, %dec_label_pc_ec4c, %dec_label_pc_ee70, %bb53, %dec_label_pc_ef04, %dec_label_pc_eed4
  %stack_var_-37.0.be = phi i8 [ %stack_var_-37.0, %bb51 ], [ %stack_var_-37.1, %dec_label_pc_ec3c ], [ %stack_var_-37.1, %dec_label_pc_ec4c ], [ %stack_var_-37.3, %bb53 ], [ %stack_var_-37.2, %dec_label_pc_ed24 ], [ %stack_var_-37.1, %dec_label_pc_eee8 ], [ %v3_ef1c, %dec_label_pc_ef04 ], [ %v3_ef1c, %dec_label_pc_ef58 ], [ %stack_var_-37.1, %dec_label_pc_ebf4 ], [ %stack_var_-37.1, %dec_label_pc_ee70 ], [ %stack_var_-37.1, %dec_label_pc_eec0 ], [ %stack_var_-37.1, %dec_label_pc_ee0c ], [ %stack_var_-37.3, %dec_label_pc_eed4 ]
  %v2_ea5c54.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ea54

dec_label_pc_ec10:                                ; preds = %dec_label_pc_eac8
  store i32 %v2_e8f8, i32* %r2.global-to-local, align 4
  %v3_ec1c = mul nuw nsw i32 %v3_ec14, 4
  %v2_ec20 = add i32 %v3_ec1c, %v2_e8f8
  store i32 %v2_ec20, i32* %r3.global-to-local, align 4
  %v1_ec24 = add i32 %v2_ec20, -360
  %v2_ec24 = inttoptr i32 %v1_ec24 to i32*
  %v3_ec24 = load i32, i32* %v2_ec24, align 4
  %v1_ec28 = urem i32 %v2_ec10, 32
  %v7_ec30 = shl i32 1, %v1_ec28
  %v8_ec30 = or i32 %v3_ec24, %v7_ec30
  store i32 %v8_ec30, i32* %r2.global-to-local, align 4
  store i32 %v8_ec30, i32* %v2_ec24, align 4
  br label %dec_label_pc_eb00

dec_label_pc_ec3c:                                ; preds = %dec_label_pc_ebac
  %v2_ec40 = icmp eq i32 %v2_ec3c, -1
  store i32 ptrtoint (i32* @global_var_1b990.147 to i32), i32* @r5, align 4
  br i1 %v2_ec40, label %dec_label_pc_ea54.backedge, label %dec_label_pc_ec4c

dec_label_pc_ec4c:                                ; preds = %dec_label_pc_ec3c
  %v3_ec4c = udiv i32 %v2_ec3c, 32
  %v3_ec50 = mul nuw nsw i32 %v3_ec4c, 4
  %v2_ec58 = add i32 %v3_ec50, %v2_e8f8
  store i32 %v2_ec58, i32* %r3.global-to-local, align 4
  %v1_ec5c = add i32 %v2_ec58, -360
  %v2_ec5c = inttoptr i32 %v1_ec5c to i32*
  %v3_ec5c = load i32, i32* %v2_ec5c, align 4
  %v1_ec60 = urem i32 %v2_ec3c, 32
  %v6_ec64 = lshr i32 %v3_ec5c, %v1_ec60
  store i32 %v6_ec64, i32* %r2.global-to-local, align 4
  %v1_ec68 = urem i32 %v6_ec64, 2
  %v2_ec68 = icmp eq i32 %v1_ec68, 0
  br i1 %v2_ec68, label %dec_label_pc_ea54.backedge, label %dec_label_pc_ec70

dec_label_pc_ec70:                                ; preds = %dec_label_pc_ec4c
  %v0_ec70 = call i32* @__errno_location()
  %v1_ec70 = ptrtoint i32* %v0_ec70 to i32
  %v0_ec74 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ec74, i32* %v0_ec70, align 4
  store i32 %v1_ec70, i32* @r8, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_ec88 = load i32, i32* @global_var_1b990.147, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_ec94 = call i32 @recv(i32 %v2_ec88, i32* %v7_edd0, i32 2, i32 16386)
  %v2_ec98 = icmp eq i32 %v5_ec94, -1
  br i1 %v2_ec98, label %dec_label_pc_eed4, label %dec_label_pc_eca0

dec_label_pc_eca0:                                ; preds = %dec_label_pc_ec70
  %v2_eca0 = icmp eq i32 %v5_ec94, 0
  br i1 %v2_eca0, label %dec_label_pc_ed24, label %dec_label_pc_eca8

dec_label_pc_eca8:                                ; preds = %dec_label_pc_eca0
  %v3_eca8 = load i8, i8* %stack_var_-38, align 1
  %v4_eca8 = sext i8 %v3_eca8 to i32
  %v4_ecac = zext i8 %stack_var_-37.1 to i32
  store i32 %v4_ecac, i32* %r3.global-to-local, align 4
  %v4_ecb0 = mul nuw nsw i32 %v4_ecac, 256
  %v5_ecb0 = or i32 %v4_eca8, %v4_ecb0
  store i32 %v5_ecb0, i32* %r2.global-to-local, align 4
  %v7_ecb0 = icmp eq i32 %v5_ecb0, 0
  br i1 %v7_ecb0, label %dec_label_pc_eee8, label %dec_label_pc_ecb8

dec_label_pc_ecb8:                                ; preds = %dec_label_pc_eca8
  %v1_ecb8 = mul nsw i32 %v4_eca8, 256
  %v3_ecbc = and i32 %v1_ecb8, 65280
  %v4_ecc0 = udiv i32 %v5_ecb0, 256
  %v5_ecc0 = or i32 %v3_ecbc, %v4_ecc0
  store i32 %v5_ecc0, i32* %r3.global-to-local, align 4
  %v3_ecc43 = udiv i32 %v5_ecc0, 256
  store i32 %v3_ecc43, i32* %r2.global-to-local, align 4
  %v1_eccc = trunc i32 %v3_ecc43 to i8
  %v6_ecd0 = trunc i32 %v4_ecc0 to i8
  store i8 %v6_ecd0, i8* %stack_var_-38, align 1
  %tmp69 = icmp ult i32 %v5_ecc0, 1025
  br i1 %tmp69, label %dec_label_pc_ece8, label %dec_label_pc_ecd8

dec_label_pc_ecd8:                                ; preds = %dec_label_pc_ecb8
  %v2_ecd8 = load i32, i32* @global_var_1b990.147, align 4
  %v1_ecdc = call i32 @close(i32 %v2_ecd8)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ece4 = load i32, i32* @r5, align 4
  %v2_ece4 = inttoptr i32 %v1_ece4 to i32*
  store i32 -1, i32* %v2_ece4, align 4
  %v3_ecf0.pre = load i8, i8* %stack_var_-38, align 1
  br label %dec_label_pc_ece8

dec_label_pc_ece8:                                ; preds = %dec_label_pc_ecb8, %dec_label_pc_ecd8
  %v3_ecf0 = phi i8 [ %v6_ecd0, %dec_label_pc_ecb8 ], [ %v3_ecf0.pre, %dec_label_pc_ecd8 ]
  %v0_ece8 = load i32, i32* %r4.global-to-local, align 4
  %v1_ece8 = load i32, i32* @r8, align 4
  %v2_ece8 = inttoptr i32 %v1_ece8 to i32*
  store i32 %v0_ece8, i32* %v2_ece8, align 4
  %v4_ecec = urem i32 %v3_ecc43, 256
  %v4_ecf0 = sext i8 %v3_ecf0 to i32
  store i32 %v2_ecf8, i32* @r4, align 4
  %v4_ed00 = mul nuw nsw i32 %v4_ecec, 256
  %v5_ed00 = or i32 %v4_ecf0, %v4_ed00
  store i32 %v5_ed00, i32* %r2.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_ed08 = load i32, i32* @global_var_1b990.147, align 4
  %v5_ed10 = call i32 @recv(i32 %v2_ed08, i32* nonnull %stack_var_-1548, i32 %v5_ed00, i32 16386)
  %v2_ed14 = icmp eq i32 %v5_ed10, -1
  br i1 %v2_ed14, label %dec_label_pc_eed4, label %dec_label_pc_ed1c

dec_label_pc_ed1c:                                ; preds = %dec_label_pc_ece8
  %v2_ed1c = icmp eq i32 %v5_ed10, 0
  br i1 %v2_ed1c, label %dec_label_pc_ed24, label %dec_label_pc_ef04

dec_label_pc_ed24:                                ; preds = %bb53, %dec_label_pc_ed1c, %dec_label_pc_eca0
  %stack_var_-37.2 = phi i8 [ %stack_var_-37.3, %bb53 ], [ %stack_var_-37.1, %dec_label_pc_eca0 ], [ %v1_eccc, %dec_label_pc_ed1c ]
  %v2_ed24 = load i32, i32* @global_var_1b990.147, align 4
  %v1_ed2c = icmp ne i32 %v2_ed24, -1
  call void @__pseudo_cond_branch(i1 %v1_ed2c, i32 ptrtoint (i32* @global_var_8dac.151 to i32))
  store i32 ptrtoint (i32* @global_var_1b990.147 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_1b990.147, align 4
  %v1_ed40 = call i32 @sleep(i32 1)
  br label %dec_label_pc_ea54.backedge

dec_label_pc_ed48:                                ; preds = %dec_label_pc_eab8
  %v0_ed50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ed50, i32* %r2.global-to-local, align 4
  %v3_ed54 = call i32 @socket(i32 2, i32 1, i32 %v0_ed50)
  %v2_ed58 = icmp eq i32 %v3_ed54, -1
  store i32 %v3_ed54, i32* %r5.global-to-local, align 4
  %v1_ed60 = load i32, i32* %r8.global-to-local, align 4
  %v2_ed60 = inttoptr i32 %v1_ed60 to i32*
  store i32 %v3_ed54, i32* %v2_ed60, align 4
  br i1 %v2_ed58, label %dec_label_pc_eac8, label %dec_label_pc_ed68

dec_label_pc_ed68:                                ; preds = %dec_label_pc_ed48
  %v0_ed68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ed68, i32* %r2.global-to-local, align 4
  %v2_ed70 = call i32 (i32, i32, ...) @fcntl(i32 %v3_ed54, i32 3)
  %v1_ed78 = or i32 %v2_ed70, 2048
  store i32 %v1_ed78, i32* %r2.global-to-local, align 4
  %v0_ed7c = load i32, i32* %r5.global-to-local, align 4
  %v2_ed80 = call i32 (i32, i32, ...) @fcntl(i32 %v0_ed7c, i32 4)
  store i32 ptrtoint (i32* @global_var_1b994.123 to i32), i32* %r2.global-to-local, align 4
  %v2_ed88 = load i32, i32* @global_var_1b994.123, align 4
  store i32 %v2_ed88, i32* %r3.global-to-local, align 4
  %v2_ed8c = icmp eq i32 %v2_ed88, 0
  br i1 %v2_ed8c, label %.thread, label %bb52

bb52:                                             ; preds = %dec_label_pc_ed68
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_129e4.152 to i32))
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_ed68, %bb52
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_eda0 = load i32, i32* @global_var_1b990.147, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1b9cc.150 to i8*), align 4
  %v5_edb0 = call i32 @connect(i32 %v2_eda0, %sockaddr* bitcast (%sockaddr** @global_var_1ba24.130 to %sockaddr*), i32 16)
  br label %dec_label_pc_eac8

dec_label_pc_edb8:                                ; preds = %dec_label_pc_eb58
  %v2_edc0 = load i32, i32* @global_var_1b990.147, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v8_edd0 = call i32 @send(i32 %v2_edc0, i32* nonnull %v7_edd0, i32 2, i32 16384)
  br label %dec_label_pc_eb78

dec_label_pc_edd8:                                ; preds = %dec_label_pc_ebbc
  store i32 4, i32* @r4, align 4
  store i32 %v2_ede0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-52, align 4
  %v8_edfc = call i32 @getsockopt(i32 %v2_ec3c, i32 1, i32 4, i32* nonnull %stack_var_-48, i32* nonnull %stack_var_-52)
  %v3_ee00 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_ee00, i32* %r3.global-to-local, align 4
  %v2_ee04 = icmp eq i32 %v3_ee00, 0
  br i1 %v2_ee04, label %dec_label_pc_ee70, label %dec_label_pc_ee0c

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_edd8
  %v2_ee0c = load i32, i32* @global_var_1b990.147, align 4
  %v1_ee10 = call i32 @close(i32 %v2_ee0c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ee18 = load i32, i32* @r5, align 4
  %v2_ee18 = inttoptr i32 %v1_ee18 to i32*
  store i32 -1, i32* %v2_ee18, align 4
  %v0_ee1c = call i32 @function_ef90()
  %v2_ee24 = urem i32 %v0_ee1c, 10
  %v1_ee28 = add nuw nsw i32 %v2_ee24, 1
  %v1_ee2c = call i32 @sleep(i32 %v1_ee28)
  br label %dec_label_pc_ea54.backedge

dec_label_pc_ee34:                                ; preds = %dec_label_pc_eb88
  %v1_ee60 = sub i32 0, %v1_ea10
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_ede0, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v8_ee4c = call i32 @accept(i32 %v2_eb7c, %sockaddr* %tmp50, i32* nonnull %stack_var_-48)
  %v1_ee50 = call i32 @function_f680(i32 %v8_ee4c)
  %v1_ee54 = call i32 @function_d4e0(i32 %v1_ee50)
  store i32 %v1_ea10, i32* %r2.global-to-local, align 4
  %v2_ee64 = call i32 @kill(i32 %v1_ee60, i32 9)
  call void @exit(i32 0)
  unreachable

dec_label_pc_ee70:                                ; preds = %dec_label_pc_edd8
  %v2_ee74 = call i32 @function_1272c(i8* %v1_ee74)
  %v3_ee74 = trunc i32 %v2_ee74 to i8
  store i8 %v3_ee74, i8* %stack_var_-38, align 1
  %v0_ee7c = call i32 @function_129e4()
  store i32 %v0_ee7c, i32* @global_var_1ba18.101, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ee90 = load i32, i32* @r4, align 4
  store i32 %v0_ee90, i32* %r2.global-to-local, align 4
  %v0_ee94 = load i32, i32* @r5, align 4
  %v1_ee94 = inttoptr i32 %v0_ee94 to i32*
  %v2_ee94 = load i32, i32* %v1_ee94, align 4
  %v5_ee98 = call i32 @send(i32 %v2_ee94, i32* nonnull @global_var_12fc4.154, i32 %v0_ee90, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_eea4 = load i32, i32* @r5, align 4
  %v1_eea4 = inttoptr i32 %v0_eea4 to i32*
  %v2_eea4 = load i32, i32* %v1_eea4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_eeb0 = call i32 @send(i32 %v2_eea4, i32* %v7_edd0, i32 1, i32 16384)
  %v3_eeb4 = load i8, i8* %stack_var_-38, align 1
  %v4_eeb4 = sext i8 %v3_eeb4 to i32
  store i32 %v4_eeb4, i32* %r2.global-to-local, align 4
  %v2_eeb8 = icmp eq i8 %v3_eeb4, 0
  br i1 %v2_eeb8, label %dec_label_pc_ea54.backedge, label %dec_label_pc_eec0

dec_label_pc_eec0:                                ; preds = %dec_label_pc_ee70
  %v0_eec0 = load i32, i32* @r5, align 4
  %v1_eec0 = inttoptr i32 %v0_eec0 to i32*
  %v2_eec0 = load i32, i32* %v1_eec0, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_eecc = call i32 @send(i32 %v2_eec0, i32* nonnull %stack_var_-140, i32 %v4_eeb4, i32 16384)
  br label %dec_label_pc_ea54.backedge

dec_label_pc_eed4:                                ; preds = %dec_label_pc_ece8, %dec_label_pc_ec70
  %stack_var_-37.3 = phi i8 [ %stack_var_-37.1, %dec_label_pc_ec70 ], [ %v1_eccc, %dec_label_pc_ece8 ]
  %v0_eed4 = load i32, i32* @r8, align 4
  %v1_eed4 = inttoptr i32 %v0_eed4 to i32*
  %v2_eed4 = load i32, i32* %v1_eed4, align 4
  store i32 %v2_eed4, i32* %r3.global-to-local, align 4
  %v7_eed8 = icmp eq i32 %v2_eed4, 4
  br i1 %v7_eed8, label %dec_label_pc_ea54.backedge, label %bb53

bb53:                                             ; preds = %dec_label_pc_eed4
  %v8_eedc = icmp eq i32 %v2_eed4, 11
  br i1 %v8_eedc, label %dec_label_pc_ea54.backedge, label %dec_label_pc_ed24

dec_label_pc_eee8:                                ; preds = %dec_label_pc_eca8
  %v2_eeec = load i32, i32* @global_var_1b990.147, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_eefc = call i32 @recv(i32 %v2_eeec, i32* nonnull %v7_edd0, i32 2, i32 16384)
  br label %dec_label_pc_ea54.backedge

dec_label_pc_ef04:                                ; preds = %dec_label_pc_ed1c
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_ef14 = load i32, i32* @global_var_1b990.147, align 4
  %v5_ef18 = call i32 @recv(i32 %v2_ef14, i32* nonnull %v7_edd0, i32 2, i32 16384)
  %v3_ef1c = load i8, i8* %stack_var_-38, align 1
  %v4_ef1c = sext i8 %v3_ef1c to i32
  %v4_ef24 = mul nsw i32 %v4_ef1c, 256
  %v5_ef24 = or i32 %v4_ef24, %v4_ecec
  store i32 %v5_ef24, i32* %r2.global-to-local, align 4
  store i32 %v4_ef1c, i32* @lr, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_ef38 = load i32, i32* @global_var_1b990.147, align 4
  store i8 %v1_eccc, i8* %stack_var_-38, align 1
  %v8_ef44 = call i32 @recv(i32 %v2_ef38, i32* nonnull %stack_var_-1548, i32 %v5_ef24, i32 16384)
  %v3_ef48 = load i8, i8* %stack_var_-38, align 1
  %v4_ef48 = sext i8 %v3_ef48 to i32
  store i32 %v4_ef48, i32* @r2, align 4
  %v4_ef4c = zext i8 %v3_ef1c to i32
  store i32 %v4_ef4c, i32* %r3.global-to-local, align 4
  %v4_ef50 = mul nuw nsw i32 %v4_ef4c, 256
  %v5_ef50 = or i32 %v4_ef48, %v4_ef50
  %v7_ef50 = icmp eq i32 %v5_ef50, 0
  br i1 %v7_ef50, label %dec_label_pc_ea54.backedge, label %dec_label_pc_ef58

dec_label_pc_ef58:                                ; preds = %dec_label_pc_ef04
  %v5_ef5c = call i32 @function_9038(i32* nonnull %stack_var_-1548, i32 %v5_ef50, i32 %v4_ef48, i32 %v4_ef4c)
  br label %dec_label_pc_ea54.backedge

; uselistorder directives
  uselistorder i32 %v4_ef4c, { 1, 0, 2 }
  uselistorder i32 %v4_ef48, { 1, 0, 2 }
  uselistorder i32 %v4_ef1c, { 1, 0 }
  uselistorder i8 %v3_ef1c, { 2, 3, 1, 0 }
  uselistorder i8 %stack_var_-37.3, { 1, 0, 2 }
  uselistorder i32 %v3_ed54, { 2, 1, 0, 3 }
  uselistorder i32 %v4_ecec, { 1, 0 }
  uselistorder i8 %v1_eccc, { 0, 2, 1 }
  uselistorder i32 %v3_ecc43, { 0, 2, 1 }
  uselistorder i32 %v4_ecc0, { 1, 0 }
  uselistorder i32 %v2_ec3c, { 5, 2, 1, 6, 0, 4, 3 }
  uselistorder i32 %v2_eb7c, { 2, 1, 0, 3 }
  uselistorder i8 %stack_var_-37.1, { 9, 8, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %v2_ea88, { 1, 0, 2 }
  uselistorder i32 %v1_ea78, { 1, 2, 0 }
  uselistorder i32 %v1_ea60, { 1, 2, 0 }
  uselistorder i32* %v7_edd0, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v2_e960, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e8f8, { 0, 1, 9, 2, 3, 8, 4, 5, 6, 7, 10 }
  uselistorder i32 %v2_e8e8, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_e828, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %stack_var_-140, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-38, { 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_-1548, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 5, 4, 0, 1, 2, 3, 6, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 27, 29, 30, 31, 32, 23, 33, 34, 35, 47, 48, 39, 40, 36, 45, 46, 37, 38, 41, 42, 43, 44 }
  uselistorder i32* @r2, { 1, 0, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i8 1, { 1, 0, 2 }
  uselistorder i32 16386, { 1, 0, 2, 3 }
  uselistorder i8* bitcast (i8** @global_var_1b9cc.150 to i8*), { 0, 1, 3, 2 }
  uselistorder i8** @global_var_1b9cc.150, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1b9cc.150 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_1b98c.125, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_1b990.147, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 13, 12, 14, 15 }
  uselistorder i32 (i32)* @function_e708, { 1, 0 }
  uselistorder i32 (i32)* @function_da64, { 1, 0 }
  uselistorder i32 (i32)* @function_9314, { 1, 0 }
  uselistorder i32 (i32, i32*, i32)* @write, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @function_f044, { 10, 9, 8, 7, 6, 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32)* @function_e508, { 1, 0 }
  uselistorder i32* @global_var_1b994.123, { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_e678.121 to i32), { 0, 2, 1 }
  uselistorder %sockaddr** @global_var_1ba24.130, { 1, 2, 0 }
  uselistorder void (i32)* (i32, void (i32)*)* @signal, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_ece8, { 1, 0 }
  uselistorder label %dec_label_pc_ea54.backedge, { 5, 11, 4, 10, 12, 3, 9, 2, 1, 8, 7, 0, 6 }
  uselistorder label %dec_label_pc_eb78, { 2, 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_eac8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_eab8, { 1, 0 }
  uselistorder label %dec_label_pc_ea74.dec_label_pc_ea74_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_ea5c.dec_label_pc_ea5c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_e8b4, { 2, 0, 1 }
}

define i32 @function_ef90() local_unnamed_addr {
dec_label_pc_ef90:
  %v2_ef9c = load i32, i32* @global_var_1b9d0.156, align 4
  %v2_efa0 = load i32, i32* @global_var_1b9dc.158, align 4
  store i32 ptrtoint (i32* @global_var_1b9d4.160 to i32), i32* @lr, align 4
  %v4_efac = mul i32 %v2_ef9c, 2048
  %v5_efac = xor i32 %v4_efac, %v2_ef9c
  %v4_efb0 = udiv i32 %v2_efa0, 524288
  %v5_efb0 = xor i32 %v4_efb0, %v2_efa0
  %v2_efb4 = load i32, i32* @global_var_1b9d4.160, align 4
  %v2_efb8 = load i32, i32* @global_var_1b9d8.162, align 4
  %v2_efbc = xor i32 %v5_efb0, %v5_efac
  %v4_efc0 = udiv i32 %v5_efac, 256
  %v5_efc0 = xor i32 %v2_efbc, %v4_efc0
  store i32 %v2_efb4, i32* @global_var_1b9d0.156, align 4
  store i32 %v2_efb8, i32* @global_var_1b9d4.160, align 4
  store i32 %v2_efa0, i32* @global_var_1b9d8.162, align 4
  store i32 %v5_efc0, i32* @global_var_1b9dc.158, align 4
  ret i32 %v5_efc0

; uselistorder directives
  uselistorder i32 %v2_efa0, { 2, 1, 0 }
  uselistorder i32 %v2_ef9c, { 1, 0 }
}

define i32 @function_efe8(i32 %arg1) local_unnamed_addr {
dec_label_pc_efe8:
  %stack_var_-12 = alloca i32, align 4
  %v3_efe8 = load i32, i32* @r4, align 4
  store i32 %v3_efe8, i32* %stack_var_-12, align 4
  %v2_eff0 = call i32 @time(i32* null)
  store i32 %v2_eff0, i32* @global_var_1b9d0.156, align 4
  %v1_effc = call i32 @getpid()
  %v0_f004 = call i32 @getppid()
  %v2_f00c = xor i32 %v1_effc, %v0_f004
  store i32 %v2_f00c, i32* @global_var_1b9d4.160, align 4
  %v1_f014 = call i32 @clock()
  %v2_f018 = load i32, i32* @global_var_1b9d4.160, align 4
  %v2_f024 = xor i32 %v2_f018, %v1_f014
  store i32 %v2_f024, i32* @global_var_1b9dc.158, align 4
  store i32 %v1_f014, i32* @global_var_1b9d8.162, align 4
  %v2_f030 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f030, i32* @r4, align 4
  ret i32 %v1_f014

; uselistorder directives
  uselistorder i32 %v1_f014, { 1, 2, 0 }
  uselistorder i32 ()* @getpid, { 2, 1, 0, 3 }
}

define i32 @function_f044(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f044:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-59 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_f044 = load i32, i32* @r4, align 4
  store i32 %v3_f044, i32* %stack_var_-36, align 4
  %v6_f044 = load i32, i32* @r5, align 4
  %v9_f044 = load i32, i32* @r6, align 4
  %v12_f044 = load i32, i32* @r7, align 4
  %v28_f044 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_f058 = call i32 @function_11e4c(i32 41)
  %v3_f064 = call i32 @function_11d68(i32 41, i32* null)
  %v1_f068 = inttoptr i32 %v3_f064 to i8*
  %tmp13 = bitcast i32* %stack_var_-59 to i8*
  %v6_f070 = call i8* @strcpy(i8* %tmp13, i8* %v1_f068)
  %v2_f074 = icmp eq i32 %arg2, 0
  br i1 %v2_f074, label %dec_label_pc_f0f0, label %dec_label_pc_f07c

dec_label_pc_f07c:                                ; preds = %dec_label_pc_f044
  store i32 ptrtoint (i32* @global_var_1b9d0.156 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b9d4.160 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b9d8.162 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_1b9dc.158 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_f090

dec_label_pc_f090:                                ; preds = %dec_label_pc_f090.dec_label_pc_f090_crit_edge, %dec_label_pc_f07c
  %v1_f0b4 = phi i32 [ %v1_f0b4.pre, %dec_label_pc_f090.dec_label_pc_f090_crit_edge ], [ ptrtoint (i32* @global_var_1b9d0.156 to i32), %dec_label_pc_f07c ]
  %v2_f090 = load i32, i32* @global_var_1b9dc.158, align 4
  store i32 %v2_f090, i32* %r2.global-to-local, align 4
  %v2_f094 = load i32, i32* @global_var_1b9d0.156, align 4
  %v4_f098 = udiv i32 %v2_f090, 524288
  %v5_f098 = xor i32 %v4_f098, %v2_f090
  %v4_f09c = mul i32 %v2_f094, 2048
  %v5_f09c = xor i32 %v4_f09c, %v2_f094
  %v2_f0a0 = xor i32 %v5_f098, %v5_f09c
  %v2_f0a4 = load i32, i32* @global_var_1b9d4.160, align 4
  %v2_f0a8 = load i32, i32* @global_var_1b9d8.162, align 4
  store i32 %v2_f0a8, i32* %ip.global-to-local, align 4
  %v4_f0ac = udiv i32 %v5_f09c, 256
  %v5_f0ac = xor i32 %v2_f0a0, %v4_f0ac
  store i32 %v5_f0ac, i32* @r4, align 4
  %v2_f0b4 = inttoptr i32 %v1_f0b4 to i32*
  store i32 %v2_f0a4, i32* %v2_f0b4, align 4
  %v0_f0b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_f0b8 = load i32, i32* %r8.global-to-local, align 4
  %v2_f0b8 = inttoptr i32 %v1_f0b8 to i32*
  store i32 %v0_f0b8, i32* %v2_f0b8, align 4
  %v0_f0bc = load i32, i32* %r2.global-to-local, align 4
  %v1_f0bc = load i32, i32* @r7, align 4
  %v2_f0bc = inttoptr i32 %v1_f0bc to i32*
  store i32 %v0_f0bc, i32* %v2_f0bc, align 4
  %v0_f0c0 = load i32, i32* @r4, align 4
  %v1_f0c0 = load i32, i32* @r6, align 4
  %v2_f0c0 = inttoptr i32 %v1_f0c0 to i32*
  store i32 %v0_f0c0, i32* %v2_f0c0, align 4
  %v2_f0c4 = call i32 @function_1272c(i8* %tmp13)
  %v0_f0cc = load i32, i32* @r4, align 4
  %v2_f0d0 = urem i32 %v0_f0cc, %v2_f0c4
  %v2_f0d8 = add i32 %v2_f0d0, %v28_f044
  %v1_f0dc = add i32 %v2_f0d8, -23
  %v2_f0dc = inttoptr i32 %v1_f0dc to i8*
  %v3_f0dc = load i8, i8* %v2_f0dc, align 1
  %v2_f0e0 = load i32, i32* @r5, align 4
  %v3_f0e0 = load i32, i32* %fp.global-to-local, align 4
  %v4_f0e0 = add i32 %v3_f0e0, %v2_f0e0
  %v5_f0e0 = inttoptr i32 %v4_f0e0 to i8*
  store i8 %v3_f0dc, i8* %v5_f0e0, align 1
  %v0_f0e4 = load i32, i32* @r5, align 4
  %v1_f0e4 = add i32 %v0_f0e4, 1
  store i32 %v1_f0e4, i32* @r5, align 4
  %v1_f0e8 = load i32, i32* %sb.global-to-local, align 4
  %v9_f0e8 = icmp eq i32 %v1_f0e4, %v1_f0e8
  br i1 %v9_f0e8, label %dec_label_pc_f0f0, label %dec_label_pc_f090.dec_label_pc_f090_crit_edge

dec_label_pc_f090.dec_label_pc_f090_crit_edge:    ; preds = %dec_label_pc_f090
  %v1_f0b4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_f090

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f090, %dec_label_pc_f044
  %v1_f0f4 = call i32 @function_11d94(i32 41)
  %v2_f0fc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f0fc, i32* @r4, align 4
  store i32 %v6_f044, i32* @r5, align 4
  store i32 %v9_f044, i32* @r6, align 4
  store i32 %v12_f044, i32* @r7, align 4
  ret i32 %v1_f0f4

; uselistorder directives
  uselistorder i32 %v2_f094, { 1, 0 }
  uselistorder i32 %v2_f090, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* @global_var_1b9dc.158, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_1b9d8.162, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_1b9d4.160, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* @global_var_1b9d0.156, { 2, 4, 1, 0, 3 }
  uselistorder i32 41, { 1, 2, 3, 4, 5, 6, 0 }
}

define i32 @function_f110(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f110:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_f110 = load i32, i32* @r4, align 4
  store i32 %v3_f110, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_f114 = icmp eq i32* %arg1, null
  br i1 %v2_f114, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_f110
  store i32 %v3_f110, i32* @r4, align 4
  ret i32 %tmp

bb4:                                              ; preds = %dec_label_pc_f110
  %v1_f11c = add i32 %tmp, 4
  %v2_f11c = inttoptr i32 %v1_f11c to i32*
  %v3_f11c = load i32, i32* %v2_f11c, align 4
  %v1_f124 = icmp ne i32 %v3_f11c, 0
  call void @__pseudo_cond_branch(i1 %v1_f124, i32 ptrtoint (i32* @global_var_8db8.74 to i32))
  %v0_f128 = load i32, i32* %r4.global-to-local, align 4
  %v2_f12c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f12c, i32* @r4, align 4
  %v1_f130 = inttoptr i32 %v0_f128 to i32*
  call void @free(i32* %v1_f130)
  ret i32 ptrtoint (i32* @0 to i32)
}

define i32 @function_f134(i8* %arg1) local_unnamed_addr {
dec_label_pc_f134:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-4288 = alloca i8, align 1
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2227 = alloca i32, align 4
  %stack_var_-2240 = alloca i8, align 1
  %stack_var_-2228 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_f134 = load i32, i32* @r4, align 4
  store i32 %v3_f134, i32* %stack_var_-36, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_f14c = call i32* @calloc(i32 1, i32 8)
  %v4_f14c = ptrtoint i32* %v2_f14c to i32
  %v0_f154 = load i32, i32* %r4.global-to-local, align 4
  %v1_f154 = inttoptr i32 %v0_f154 to i8*
  store i32 %v0_f154, i32* %r0.global-to-local, align 4
  %v3_f158 = call i32 @function_1272c(i8* %v1_f154)
  %v2_f160 = ptrtoint i32* %stack_var_-2228 to i32
  store i32 %v2_f160, i32* %fp.global-to-local, align 4
  %v2_f164 = ptrtoint i8* %stack_var_-2240 to i32
  %v1_f168 = add i32 %v3_f158, 1
  store i32 %v1_f168, i32* %r0.global-to-local, align 4
  %v2_f16c = ptrtoint i32* %stack_var_-2227 to i32
  store i32 %v2_f16c, i32* %r2.global-to-local, align 4
  store i32 %v2_f160, i32* %r5.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_f1ac171 = icmp eq i32 %v1_f168, 0
  store i1 %v2_f1ac171, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_f1b4172 = or i32 %v2_f16c, 1
  store i32 %v1_f1b4172, i32* %r1.global-to-local, align 4
  %tmp125173 = icmp slt i32 %v1_f168, 1
  br i1 %tmp125173, label %dec_label_pc_f1bc, label %dec_label_pc_f17c.lr.ph

dec_label_pc_f17c.lr.ph:                          ; preds = %dec_label_pc_f134
  %v0_f17c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f17c

dec_label_pc_f17c:                                ; preds = %dec_label_pc_f17c.lr.ph, %.thread13
  %v1_f190183.off0 = phi i8 [ 0, %dec_label_pc_f17c.lr.ph ], [ %extract.t186, %.thread13 ]
  %v0_f17c = phi i32 [ %v0_f17c.pre, %dec_label_pc_f17c.lr.ph ], [ %v1_f1a0, %.thread13 ]
  %v2_f1c0174 = phi i32 [ %v2_f16c, %dec_label_pc_f17c.lr.ph ], [ %v0_f1a8, %.thread13 ]
  %v1_f17c = inttoptr i32 %v0_f17c to i8*
  %v2_f17c = load i8, i8* %v1_f17c, align 1
  %v3_f17c = zext i8 %v2_f17c to i32
  store i32 %v3_f17c, i32* %r3.global-to-local, align 4
  %v2_f180 = icmp eq i8 %v2_f17c, 0
  store i1 %v2_f180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f180, label %.thread7, label %bb

bb:                                               ; preds = %dec_label_pc_f17c
  %v8_f184 = icmp eq i8 %v2_f17c, 46
  store i1 %v8_f184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f184, label %.thread7, label %.thread

.thread:                                          ; preds = %bb
  %v4_f188 = inttoptr i32 %v2_f1c0174 to i8*
  store i8 %v2_f17c, i8* %v4_f188, align 1
  %v5_f188 = load i32, i32* %r2.global-to-local, align 4
  %v6_f188 = add i32 %v5_f188, 1
  store i32 %v6_f188, i32* %r2.global-to-local, align 4
  %v0_f18c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f18c.pr.pr, label %.thread..thread7_crit_edge, label %bb123

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_f190.pre = load i32, i32* %lr.global-to-local, align 4
  %extract.t = trunc i32 %v1_f190.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb, %dec_label_pc_f17c
  %v1_f190.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v1_f190183.off0, %bb ], [ %v1_f190183.off0, %dec_label_pc_f17c ]
  %v3_f190 = load i32, i32* %r5.global-to-local, align 4
  %v4_f190 = inttoptr i32 %v3_f190 to i8*
  store i8 %v1_f190.off0, i8* %v4_f190, align 1
  %v0_f194.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f194.pr, label %bb124, label %..thread13_crit_edge

bb123:                                            ; preds = %.thread
  store i32 %v6_f188, i32* %r1.global-to-local, align 4
  %v1_f194 = load i32, i32* %ip.global-to-local, align 4
  %v2_f194 = urem i32 %v1_f194, 256
  store i32 %v2_f194, i32* %lr.global-to-local, align 4
  br label %.thread13

..thread13_crit_edge:                             ; preds = %.thread7
  %v1_f19411 = load i32, i32* %ip.global-to-local, align 4
  %v2_f19412 = urem i32 %v1_f19411, 256
  store i32 %v2_f19412, i32* %lr.global-to-local, align 4
  br label %.thread13

bb124:                                            ; preds = %.thread7
  %v1_f198.pre = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_f198.pre, i32* %r5.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb123, %..thread13_crit_edge, %bb124
  %v0_f1b0.pre = phi i32 [ %v2_f19412, %..thread13_crit_edge ], [ %v2_f194, %bb123 ], [ 0, %bb124 ]
  %v0_f1a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_f1a0 = add i32 %v0_f1a0, 1
  store i32 %v1_f1a0, i32* %r4.global-to-local, align 4
  %v0_f1a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_f1a4 = add i32 %v0_f1a4, -1
  store i32 %v1_f1a4, i32* %r0.global-to-local, align 4
  %v0_f1a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_f1a8, i32* %r2.global-to-local, align 4
  %v2_f1ac = icmp eq i32 %v1_f1a4, 0
  store i1 %v2_f1ac, i1* %cpsr_z.global-to-local, align 1
  %v1_f1b0 = add nuw nsw i32 %v0_f1b0.pre, 1
  store i32 %v1_f1b0, i32* %ip.global-to-local, align 4
  %v1_f1b4 = add i32 %v0_f1a8, 1
  store i32 %v1_f1b4, i32* %r1.global-to-local, align 4
  %tmp125 = icmp slt i32 %v1_f1a4, 1
  %extract.t186 = trunc i32 %v0_f1b0.pre to i8
  br i1 %tmp125, label %dec_label_pc_f1bc, label %dec_label_pc_f17c

dec_label_pc_f1bc:                                ; preds = %.thread13, %dec_label_pc_f134
  %v2_f1c0.lcssa = phi i32 [ %v2_f16c, %dec_label_pc_f134 ], [ %v0_f1a8, %.thread13 ]
  %tmp126 = bitcast i32* %v2_f14c to i8*
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_f1c0 = inttoptr i32 %v2_f1c0.lcssa to i8*
  store i8 0, i8* %v3_f1c0, align 1
  store i32 %v2_f160, i32* %r0.global-to-local, align 4
  %v1_f1c8 = bitcast i32* %stack_var_-2228 to i8*
  %v2_f1c8 = call i32 @function_1272c(i8* %v1_f1c8)
  %v2_f1cc = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_f1cc, i32* %r1.global-to-local, align 4
  %v0_f1d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_f1d0 = add i32 %v0_f1d0, %v2_f1c8
  store i32 %v2_f1d0, i32* %r5.global-to-local, align 4
  %v0_f1d4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f1d4, i32* %stack_var_-64, align 4
  store i32 %v2_f160, i32* %r0.global-to-local, align 4
  %v2_f1e8 = call i32 @function_1272c(i8* %v1_f1c8)
  %v1_f1ec = add i32 %v2_f1e8, 17
  store i32 %v1_f1ec, i32* %r0.global-to-local, align 4
  %v0_f1f4 = call i32 @function_ef90()
  %v2_f200 = urem i32 %v0_f1f4, 65535
  store i32 16, i32* @r1, align 4
  store i32 %v2_f200, i32* %r3.global-to-local, align 4
  %v2_f214 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_f214, i32* @r0, align 4
  %v0_f21c = call i32 @function_127cc()
  %sext = mul i32 %v2_f200, 16777216
  %v4_f220 = sdiv i32 %sext, 16777216
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %v2_f1cc, i32* %r3.global-to-local, align 4
  store i32 53, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v4_f220, i32* %lr.global-to-local, align 4
  %v0_f268 = load i32, i32* %r5.global-to-local, align 4
  %v2_f268 = add i32 %v0_f268, 1
  store i32 %v2_f268, i32* %ip.global-to-local, align 4
  %v2_f26c = ptrtoint i8* %stack_var_-4288 to i32
  store i32 %v2_f26c, i32* %r1.global-to-local, align 4
  %v5_f270 = trunc i32 %v4_f220 to i8
  store i8 %v5_f270, i8* %stack_var_-2240, align 1
  %v0_f288 = load i32, i32* %r4.global-to-local, align 4
  %v1_f288 = trunc i32 %v0_f288 to i8
  %v4_f288 = inttoptr i32 %v2_f268 to i8*
  store i8 %v1_f288, i8* %v4_f288, align 1
  %v0_f28c = load i32, i32* %r4.global-to-local, align 4
  %v1_f28c = trunc i32 %v0_f28c to i8
  %v2_f28c = load i32, i32* %ip.global-to-local, align 4
  %v3_f28c = add i32 %v2_f28c, 2
  %v4_f28c = inttoptr i32 %v3_f28c to i8*
  store i8 %v1_f28c, i8* %v4_f28c, align 1
  %v0_f290 = load i32, i32* %r0.global-to-local, align 4
  %v1_f290 = trunc i32 %v0_f290 to i8
  %v2_f290 = load i32, i32* %ip.global-to-local, align 4
  %v3_f290 = add i32 %v2_f290, 3
  %v4_f290 = inttoptr i32 %v3_f290 to i8*
  store i8 %v1_f290, i8* %v4_f290, align 1
  %v0_f294 = load i32, i32* %r0.global-to-local, align 4
  %v1_f294 = trunc i32 %v0_f294 to i8
  %v2_f294 = load i32, i32* %ip.global-to-local, align 4
  %v3_f294 = add i32 %v2_f294, 1
  %v4_f294 = inttoptr i32 %v3_f294 to i8*
  store i8 %v1_f294, i8* %v4_f294, align 1
  %v0_f29c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f29c, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_f2a4 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_f2a4, i32* %r6.global-to-local, align 4
  %v4_f2f8 = bitcast i8* %stack_var_-2240 to i32*
  %v2_f348 = ptrtoint i32* %stack_var_-36 to i32
  %v2_f374 = ptrtoint i32* %stack_var_-48 to i32
  %tmp128 = bitcast i32* %stack_var_-192 to %_TYPEDEF_fd_set*
  %v7_f3d0 = bitcast i8* %stack_var_-4288 to i32*
  %v1_f44c = add i32 %v2_f26c, 12
  %v1_f454 = inttoptr i32 %v1_f44c to i8*
  %v1_f468 = add i32 %v2_f26c, 1
  %v2_f468 = inttoptr i32 %v1_f468 to i8*
  %tmp131 = bitcast i32* %stack_var_-48 to %timeval*
  %v1_f484 = add i32 %v2_f26c, 6
  %v2_f484 = inttoptr i32 %v1_f484 to i8*
  %v1_f488 = add i32 %v2_f26c, 7
  %v2_f488 = inttoptr i32 %v1_f488 to i8*
  br label %dec_label_pc_f2a8

dec_label_pc_f2a8:                                ; preds = %dec_label_pc_f3fc, %dec_label_pc_f1bc
  %v1_f2ac = phi i32 [ %v0_f2a8.pre, %dec_label_pc_f3fc ], [ -1, %dec_label_pc_f1bc ]
  %v2_f2a8 = icmp eq i32 %v1_f2ac, -1
  store i1 %v2_f2a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2a8, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_f2a8
  store i32 %v1_f2ac, i32* %r0.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_f2a8, %bb129
  store i32 62132, i32* %lr.global-to-local, align 4
  %v1_f2b0 = xor i1 %v2_f2a8, true
  call void @__pseudo_cond_branch(i1 %v1_f2b0, i32 ptrtoint (i32* @global_var_8dac.151 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f2c0 = call i32 @socket(i32 2, i32 0, i32 0)
  store i32 %v3_f2c0, i32* %r0.global-to-local, align 4
  %v2_f2c4 = icmp eq i32 %v3_f2c0, -1
  store i1 %v2_f2c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f2c0, i32* %r7.global-to-local, align 4
  br i1 %v2_f2c4, label %dec_label_pc_f43c, label %dec_label_pc_f2d0

dec_label_pc_f2d0:                                ; preds = %bb130
  store i32 %v2_f214, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v6_f2dc = call i32 @connect(i32 %v2_f214, %sockaddr* inttoptr (i32 16 to %sockaddr*), i32 16)
  store i32 %v6_f2dc, i32* %r0.global-to-local, align 4
  %v2_f2e0 = icmp eq i32 %v6_f2dc, -1
  store i1 %v2_f2e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2e0, label %dec_label_pc_f404, label %dec_label_pc_f2e8

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f2d0
  %v0_f2e8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f2e8, i32* %r0.global-to-local, align 4
  store i32 %v2_f164, i32* %r1.global-to-local, align 4
  store i32 %v1_f1ec, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_f2f8 = call i32 @send(i32 %v0_f2e8, i32* %v4_f2f8, i32 %v1_f1ec, i32 16384)
  store i32 %v5_f2f8, i32* %r0.global-to-local, align 4
  %v2_f2fc = icmp eq i32 %v5_f2f8, -1
  store i1 %v2_f2fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2fc, label %dec_label_pc_f404, label %dec_label_pc_f304

dec_label_pc_f304:                                ; preds = %dec_label_pc_f2e8
  %v0_f304 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f304, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_f310 = call i32 (i32, i32, ...) @fcntl(i32 3, i32 %v0_f304)
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_f318 = or i32 %v2_f310, 2048
  store i32 %v1_f318, i32* %r2.global-to-local, align 4
  %v0_f31c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f31c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_f324 = call i32 (i32, i32, ...) @fcntl(i32 4, i32 %v0_f31c)
  store i32 %v2_f324, i32* %r0.global-to-local, align 4
  %v0_f328 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_f328, i32* %r3.global-to-local, align 4
  %v2_f32c164 = load i32, i32* %r6.global-to-local, align 4
  %v3_f32c165 = add i32 %v2_f32c164, %v0_f328
  %v4_f32c166 = inttoptr i32 %v3_f32c165 to i32*
  store i32 %v0_f328, i32* %v4_f32c166, align 4
  %v0_f330167 = load i32, i32* %r3.global-to-local, align 4
  %v1_f330168 = add i32 %v0_f330167, 4
  store i32 %v1_f330168, i32* %r3.global-to-local, align 4
  %v7_f334169 = icmp eq i32 %v1_f330168, 128
  br i1 %v7_f334169, label %dec_label_pc_f33c, label %dec_label_pc_f32c.dec_label_pc_f32c_crit_edge

dec_label_pc_f32c.dec_label_pc_f32c_crit_edge:    ; preds = %dec_label_pc_f304, %dec_label_pc_f32c.dec_label_pc_f32c_crit_edge
  %v1_f330170 = phi i32 [ %v1_f330, %dec_label_pc_f32c.dec_label_pc_f32c_crit_edge ], [ %v1_f330168, %dec_label_pc_f304 ]
  %v0_f32c.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_f32c = load i32, i32* %r6.global-to-local, align 4
  %v3_f32c = add i32 %v2_f32c, %v1_f330170
  %v4_f32c = inttoptr i32 %v3_f32c to i32*
  store i32 %v0_f32c.pre, i32* %v4_f32c, align 4
  %v0_f330 = load i32, i32* %r3.global-to-local, align 4
  %v1_f330 = add i32 %v0_f330, 4
  store i32 %v1_f330, i32* %r3.global-to-local, align 4
  %v7_f334 = icmp eq i32 %v1_f330, 128
  br i1 %v7_f334, label %dec_label_pc_f33c, label %dec_label_pc_f32c.dec_label_pc_f32c_crit_edge

dec_label_pc_f33c:                                ; preds = %dec_label_pc_f32c.dec_label_pc_f32c_crit_edge, %dec_label_pc_f304
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f33c = load i32, i32* %r7.global-to-local, align 4
  %v3_f33c = udiv i32 %v0_f33c, 32
  %v3_f344 = mul nuw nsw i32 %v3_f33c, 4
  store i32 %v3_f344, i32* %r3.global-to-local, align 4
  store i32 %v2_f348, i32* %r2.global-to-local, align 4
  %v2_f34c = add i32 %v3_f344, %v2_f348
  store i32 %v2_f34c, i32* %r5.global-to-local, align 4
  %v1_f350 = add i32 %v2_f34c, -156
  %v2_f350 = inttoptr i32 %v1_f350 to i32*
  %v3_f350 = load i32, i32* %v2_f350, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_f358 = urem i32 %v0_f33c, 32
  store i32 %v1_f358, i32* %r8.global-to-local, align 4
  %v7_f35c = shl i32 1, %v1_f358
  %v8_f35c = or i32 %v3_f350, %v7_f35c
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_f35c, i32* %v2_f350, align 4
  %v0_f36c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f36c, i32* %stack_var_-48, align 4
  store i32 %v2_f374, i32* %lr.global-to-local, align 4
  store i32 %v2_f1cc, i32* %ip.global-to-local, align 4
  %v0_f37c = load i32, i32* %r7.global-to-local, align 4
  %v1_f37c = load i32, i32* %r3.global-to-local, align 4
  %v2_f37c = add i32 %v1_f37c, %v0_f37c
  store i32 %v2_f37c, i32* %r0.global-to-local, align 4
  store i32 %v2_f2a4, i32* %r1.global-to-local, align 4
  %v0_f388 = load i32, i32* %r4.global-to-local, align 4
  %v1_f388 = inttoptr i32 %v0_f388 to %_TYPEDEF_fd_set*
  store i32 %v0_f388, i32* %r2.global-to-local, align 4
  store i32 %v0_f388, i32* %r3.global-to-local, align 4
  %v13_f394 = call i32 @select(i32 %v2_f37c, %_TYPEDEF_fd_set* %tmp128, %_TYPEDEF_fd_set* %v1_f388, %_TYPEDEF_fd_set* %v1_f388, %timeval* %tmp131)
  store i32 %v13_f394, i32* %r0.global-to-local, align 4
  %v2_f398 = icmp eq i32 %v13_f394, -1
  store i1 %v2_f398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f398, label %dec_label_pc_f414, label %dec_label_pc_f3a0

dec_label_pc_f3a0:                                ; preds = %dec_label_pc_f33c
  %v2_f3a0 = icmp eq i32 %v13_f394, 0
  store i1 %v2_f3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3a0, label %dec_label_pc_f3f4, label %dec_label_pc_f3a8

dec_label_pc_f3a8:                                ; preds = %dec_label_pc_f3a0
  %v0_f3a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_f3a8 = add i32 %v0_f3a8, -156
  %v2_f3a8 = inttoptr i32 %v1_f3a8 to i32*
  %v3_f3a8 = load i32, i32* %v2_f3a8, align 4
  %v1_f3ac = load i32, i32* %r8.global-to-local, align 4
  %v6_f3ac = ashr i32 %v3_f3a8, %v1_f3ac
  store i32 %v6_f3ac, i32* %r3.global-to-local, align 4
  %v1_f3b0 = urem i32 %v6_f3ac, 2
  %v2_f3b0 = icmp eq i32 %v1_f3b0, 0
  store i1 %v2_f3b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3b0, label %dec_label_pc_f414, label %dec_label_pc_f3b8

dec_label_pc_f3b8:                                ; preds = %dec_label_pc_f3a8
  store i32 %v2_f26c, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f3c4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f3c4, i32* %r0.global-to-local, align 4
  %v0_f3c8 = load i32, i32* %r4.global-to-local, align 4
  %v4_f3cc = inttoptr i32 %v0_f3c8 to %sockaddr*
  %v9_f3d0 = inttoptr i32 %v0_f3c8 to i32*
  %v10_f3d0 = call i32 @recvfrom(i32 %v0_f3c4, i32* %v7_f3d0, i32 2048, i32 16384, %sockaddr* %v4_f3cc, i32* %v9_f3d0)
  store i32 %v10_f3d0, i32* %r4.global-to-local, align 4
  %v0_f3d8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_f3d8, i32* %r0.global-to-local, align 4
  %v1_f3dc = inttoptr i32 %v0_f3d8 to i8*
  %v2_f3dc = call i32 @function_1272c(i8* %v1_f3dc)
  %v1_f3e0 = add i32 %v2_f3dc, 17
  store i32 %v1_f3e0, i32* %r0.global-to-local, align 4
  %v0_f3e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_f3e4 = icmp ult i32 %v0_f3e4, %v1_f3e0
  %v9_f3e4 = icmp eq i32 %v0_f3e4, %v1_f3e0
  store i1 %v9_f3e4, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* %r4.global-to-local, align 4
  br i1 %v3_f3e4, label %dec_label_pc_f3f4, label %dec_label_pc_f448

dec_label_pc_f3f4:                                ; preds = %dec_label_pc_f3b8, %dec_label_pc_f448, %dec_label_pc_f484, %dec_label_pc_f3a0, %dec_label_pc_f43c
  %v0_f3f4 = load i32, i32* %sl.global-to-local, align 4
  %v7_f3f4 = icmp eq i32 %v0_f3f4, 5
  store i1 %v7_f3f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3f4, label %dec_label_pc_f414, label %dec_label_pc_f3fc

dec_label_pc_f3fc:                                ; preds = %dec_label_pc_f404, %dec_label_pc_f3f4
  %v0_f3fc = phi i32 [ %v0_f40c, %dec_label_pc_f404 ], [ %v0_f3f4, %dec_label_pc_f3f4 ]
  %v1_f3fc = add i32 %v0_f3fc, 1
  store i32 %v1_f3fc, i32* %sl.global-to-local, align 4
  %v0_f2a8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f2a8

dec_label_pc_f404:                                ; preds = %dec_label_pc_f2e8, %dec_label_pc_f2d0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_f408 = call i32 @sleep(i32 1)
  store i32 %v1_f408, i32* %r0.global-to-local, align 4
  %v0_f40c = load i32, i32* %sl.global-to-local, align 4
  %v7_f40c = icmp eq i32 %v0_f40c, 5
  store i1 %v7_f40c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f40c, label %dec_label_pc_f414, label %dec_label_pc_f3fc

dec_label_pc_f414:                                ; preds = %dec_label_pc_f404, %dec_label_pc_f3f4, %dec_label_pc_f3a8, %dec_label_pc_f33c, %dec_label_pc_f494, %dec_label_pc_f4a0.backedge
  %v0_f414 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_f414, i32* %r0.global-to-local, align 4
  %v1_f418 = call i32 @close(i32 %v0_f414)
  store i32 %v1_f418, i32* %r0.global-to-local, align 4
  store i32 %v4_f14c, i32* %r2.global-to-local, align 4
  %v2_f420 = load i8, i8* %tmp126, align 1
  %v3_f420 = zext i8 %v2_f420 to i32
  store i32 %v3_f420, i32* %r4.global-to-local, align 4
  %v2_f424 = icmp eq i8 %v2_f420, 0
  store i1 %v2_f424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f424, label %dec_label_pc_f580, label %dec_label_pc_f42c

dec_label_pc_f42c:                                ; preds = %dec_label_pc_f414, %dec_label_pc_f580
  %stack_var_-4300.0 = phi i8* [ %v5_f594, %dec_label_pc_f580 ], [ %tmp126, %dec_label_pc_f414 ]
  %v4_f42c = ptrtoint i8* %stack_var_-4300.0 to i32
  store i32 %v4_f42c, i32* %r0.global-to-local, align 4
  %v2_f438 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_f438, i32* @r4, align 4
  ret i32 %v4_f42c

dec_label_pc_f43c:                                ; preds = %bb130
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_f440 = call i32 @sleep(i32 1)
  store i32 %v1_f440, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f3f4

dec_label_pc_f448:                                ; preds = %dec_label_pc_f3b8
  store i32 %v2_f26c, i32* %lr.global-to-local, align 4
  store i32 %v1_f44c, i32* %fp.global-to-local, align 4
  store i32 %v1_f44c, i32* %r0.global-to-local, align 4
  %v2_f454 = call i32 @function_1272c(i8* %v1_f454)
  store i32 %v2_f454, i32* %r0.global-to-local, align 4
  store i32 %v2_f26c, i32* %ip.global-to-local, align 4
  store i32 %v2_f348, i32* %r1.global-to-local, align 4
  %v4_f464 = load i8, i8* %stack_var_-4288, align 1
  %v5_f464 = sext i8 %v4_f464 to i32
  store i32 %v5_f464, i32* %r3.global-to-local, align 4
  %v3_f468 = load i8, i8* %v2_f468, align 1
  %v4_f468 = zext i8 %v3_f468 to i32
  store i32 %v4_f468, i32* %r2.global-to-local, align 4
  store i32 %v4_f220, i32* %lr.global-to-local, align 4
  %v4_f470 = mul nuw nsw i32 %v4_f468, 256
  %v5_f470 = or i32 %v4_f470, %v5_f464
  store i32 %v5_f470, i32* %r3.global-to-local, align 4
  %v0_f474 = load i32, i32* %fp.global-to-local, align 4
  %v9_f478 = icmp eq i32 %v5_f470, %v4_f220
  store i1 %v9_f478, i1* %cpsr_z.global-to-local, align 1
  %v2_f474 = add i32 %v2_f454, 5
  %v1_f47c = add i32 %v2_f474, %v0_f474
  store i32 %v1_f47c, i32* %r0.global-to-local, align 4
  br i1 %v9_f478, label %dec_label_pc_f484, label %dec_label_pc_f3f4

dec_label_pc_f484:                                ; preds = %dec_label_pc_f448
  %v3_f484 = load i8, i8* %v2_f484, align 1
  %v4_f484 = zext i8 %v3_f484 to i32
  store i32 %v4_f484, i32* %r2.global-to-local, align 4
  %v3_f488 = load i8, i8* %v2_f488, align 1
  %v4_f488 = zext i8 %v3_f488 to i32
  store i32 %v4_f488, i32* %r3.global-to-local, align 4
  %v4_f48c = mul nuw nsw i32 %v4_f488, 256
  %v5_f48c = or i32 %v4_f48c, %v4_f484
  store i32 %v5_f48c, i32* %r2.global-to-local, align 4
  %v7_f48c = icmp eq i32 %v5_f48c, 0
  store i1 %v7_f48c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f48c, label %dec_label_pc_f3f4, label %dec_label_pc_f494

dec_label_pc_f494:                                ; preds = %dec_label_pc_f484
  %v3_f498 = mul nuw nsw i32 %v4_f484, 256
  %v5_f49c = or i32 %v4_f488, %v3_f498
  %v1_f554 = add i32 %v2_f26c, -49152
  %v1_f4a0158 = add nsw i32 %v5_f49c, -1
  %v3_f4a4159 = mul i32 %v1_f4a0158, 65536
  store i32 %v3_f4a4159, i32* %r3.global-to-local, align 4
  %v7_f4a8160 = icmp eq i32 %v3_f4a4159, -65536
  store i1 %v7_f4a8160, i1* %cpsr_z.global-to-local, align 1
  %v3_f4ac161 = urem i32 %v1_f4a0158, 65536
  store i32 %v3_f4ac161, i32* %r6.global-to-local, align 4
  br i1 %v7_f4a8160, label %dec_label_pc_f414, label %dec_label_pc_f4b4.lr.ph

dec_label_pc_f4b4.lr.ph:                          ; preds = %dec_label_pc_f494
  %v1_f630 = add i32 %v4_f14c, 4
  %v2_f630 = inttoptr i32 %v1_f630 to i32*
  br label %dec_label_pc_f4b4

dec_label_pc_f4b4:                                ; preds = %dec_label_pc_f4b4.lr.ph, %dec_label_pc_f4a0.backedge
  %v3_f4ac163 = phi i32 [ %v3_f4ac161, %dec_label_pc_f4b4.lr.ph ], [ %v3_f4ac, %dec_label_pc_f4a0.backedge ]
  %v0_f508162 = phi i32 [ %v1_f47c, %dec_label_pc_f4b4.lr.ph ], [ %storemerge, %dec_label_pc_f4a0.backedge ]
  store i32 %v0_f508162, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_f4c018 = inttoptr i32 %v0_f508162 to i8*
  %v2_f4c019 = load i8, i8* %v1_f4c018, align 1
  %v3_f4c020 = zext i8 %v2_f4c019 to i32
  store i32 %v3_f4c020, i32* %r2.global-to-local, align 4
  %v2_f4c421 = icmp eq i8 %v2_f4c019, 0
  store i1 %v2_f4c421, i1* %cpsr_z.global-to-local, align 1
  %v3_f4c822 = mul nuw nsw i32 %v3_f4c020, 256
  store i32 %v3_f4c822, i32* %r1.global-to-local, align 4
  br i1 %v2_f4c421, label %dec_label_pc_f500.thread142, label %dec_label_pc_f4d0.preheader

dec_label_pc_f500.thread142:                      ; preds = %dec_label_pc_f4b4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %bb133

dec_label_pc_f4d0.preheader:                      ; preds = %dec_label_pc_f4b4, %dec_label_pc_f4c0.backedge
  %v1_f5a4 = phi i32 [ %v1_f5a450, %dec_label_pc_f4c0.backedge ], [ 1, %dec_label_pc_f4b4 ]
  %v0_f59c48 = phi i32 [ %v0_f59c, %dec_label_pc_f4c0.backedge ], [ 0, %dec_label_pc_f4b4 ]
  %v0_f4dc46 = phi i32 [ %v3_f4c8, %dec_label_pc_f4c0.backedge ], [ %v3_f4c822, %dec_label_pc_f4b4 ]
  %v0_f4d844 = phi i32 [ %v1_f5a0, %dec_label_pc_f4c0.backedge ], [ %v0_f508162, %dec_label_pc_f4b4 ]
  %v0_f4d042 = phi i32 [ %v3_f4c0, %dec_label_pc_f4c0.backedge ], [ %v3_f4c020, %dec_label_pc_f4b4 ]
  br label %dec_label_pc_f4d0

dec_label_pc_f4d0:                                ; preds = %dec_label_pc_f4d0.preheader, %dec_label_pc_f4d8
  %v0_f59c = phi i32 [ %v0_f59c48, %dec_label_pc_f4d0.preheader ], [ 1, %dec_label_pc_f4d8 ]
  %v0_f4dc = phi i32 [ %v0_f4dc46, %dec_label_pc_f4d0.preheader ], [ %v3_f4f8, %dec_label_pc_f4d8 ]
  %v0_f5a0 = phi i32 [ %v0_f4d844, %dec_label_pc_f4d0.preheader ], [ %v2_f4e8, %dec_label_pc_f4d8 ]
  %v0_f4d0 = phi i32 [ %v0_f4d042, %dec_label_pc_f4d0.preheader ], [ %v3_f4ec, %dec_label_pc_f4d8 ]
  %v7_f4d0 = icmp eq i32 %v0_f4d0, 191
  store i1 %v7_f4d0, i1* %cpsr_z.global-to-local, align 1
  %tmp187 = icmp ult i32 %v0_f4d0, 192
  br i1 %tmp187, label %dec_label_pc_f59c, label %dec_label_pc_f4d8

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4d0
  %v1_f4d8 = add i32 %v0_f5a0, 1
  %v2_f4d8 = inttoptr i32 %v1_f4d8 to i8*
  %v3_f4d8 = load i8, i8* %v2_f4d8, align 1
  %v4_f4d8 = zext i8 %v3_f4d8 to i32
  store i32 %v2_f26c, i32* %r1.global-to-local, align 4
  %v2_f4dc = add i32 %v0_f4dc, %v1_f554
  %v2_f4e8 = add i32 %v2_f4dc, %v4_f4d8
  store i32 %v2_f4e8, i32* %r3.global-to-local, align 4
  %v1_f4ec = inttoptr i32 %v2_f4e8 to i8*
  %v2_f4ec = load i8, i8* %v1_f4ec, align 1
  %v3_f4ec = zext i8 %v2_f4ec to i32
  store i32 %v3_f4ec, i32* %r2.global-to-local, align 4
  %v2_f4f0 = icmp eq i8 %v2_f4ec, 0
  store i1 %v2_f4f0, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %lr.global-to-local, align 4
  %v3_f4f8 = mul nuw nsw i32 %v3_f4ec, 256
  store i32 %v3_f4f8, i32* %r1.global-to-local, align 4
  br i1 %v2_f4f0, label %dec_label_pc_f500.thread, label %dec_label_pc_f4d0

dec_label_pc_f500.thread:                         ; preds = %dec_label_pc_f4d8
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb132

dec_label_pc_f500:                                ; preds = %dec_label_pc_f4c0.backedge
  %v7_f500 = icmp eq i32 %v0_f59c, 1
  store i1 %v7_f500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f500, label %bb132, label %bb133

bb132:                                            ; preds = %dec_label_pc_f500.thread, %dec_label_pc_f500
  %v1_f504141 = phi i32 [ %v1_f5a4, %dec_label_pc_f500.thread ], [ %v1_f5a450, %dec_label_pc_f500 ]
  %v2_f504 = add i32 %v1_f504141, 1
  store i32 %v2_f504, i32* %ip.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %dec_label_pc_f500.thread142, %dec_label_pc_f500, %bb132
  %v1_f508 = phi i32 [ %v1_f5a450, %dec_label_pc_f500 ], [ %v2_f504, %bb132 ], [ 1, %dec_label_pc_f500.thread142 ]
  %v2_f508 = add i32 %v1_f508, %v0_f508162
  store i32 %v2_f508, i32* %r4.global-to-local, align 4
  %v3_f50c = inttoptr i32 %v2_f508 to i8*
  %v4_f50c = load i8, i8* %v3_f50c, align 1
  %v6_f50c = zext i8 %v4_f50c to i32
  store i32 %v6_f50c, i32* %r3.global-to-local, align 4
  %v1_f510 = add i32 %v2_f508, 1
  %v2_f510 = inttoptr i32 %v1_f510 to i8*
  %v3_f510 = load i8, i8* %v2_f510, align 1
  %v4_f510 = zext i8 %v3_f510 to i32
  store i32 %v4_f510, i32* %r2.global-to-local, align 4
  %v4_f514 = mul nuw nsw i32 %v4_f510, 256
  %v5_f514 = or i32 %v4_f514, %v6_f50c
  store i32 %v5_f514, i32* %r3.global-to-local, align 4
  %v7_f518 = icmp eq i32 %v5_f514, 256
  store i1 %v7_f518, i1* %cpsr_z.global-to-local, align 1
  %v1_f51c = add i32 %v2_f508, 10
  store i32 %v1_f51c, i32* %r5.global-to-local, align 4
  br i1 %v7_f518, label %dec_label_pc_f5bc, label %dec_label_pc_f524

dec_label_pc_f524:                                ; preds = %dec_label_pc_f5bc, %bb133
  store i32 %v1_f51c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_f53024 = inttoptr i32 %v1_f51c to i8*
  %v2_f53025 = load i8, i8* %v1_f53024, align 1
  %v3_f53026 = zext i8 %v2_f53025 to i32
  store i32 %v3_f53026, i32* %r2.global-to-local, align 4
  %v2_f53427 = icmp eq i8 %v2_f53025, 0
  store i1 %v2_f53427, i1* %cpsr_z.global-to-local, align 1
  %v3_f53828 = mul nuw nsw i32 %v3_f53026, 256
  store i32 %v3_f53828, i32* %r1.global-to-local, align 4
  br i1 %v2_f53427, label %dec_label_pc_f570.thread148, label %dec_label_pc_f540.preheader

dec_label_pc_f570.thread148:                      ; preds = %dec_label_pc_f524
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %bb135

dec_label_pc_f540.preheader:                      ; preds = %dec_label_pc_f524, %dec_label_pc_f530.backedge
  %v1_f5b4 = phi i32 [ %v1_f5b465, %dec_label_pc_f530.backedge ], [ 1, %dec_label_pc_f524 ]
  %v0_f5ac63 = phi i32 [ %v0_f5ac, %dec_label_pc_f530.backedge ], [ 0, %dec_label_pc_f524 ]
  %v0_f54c61 = phi i32 [ %v3_f538, %dec_label_pc_f530.backedge ], [ %v3_f53828, %dec_label_pc_f524 ]
  %v0_f54859 = phi i32 [ %v1_f5b0, %dec_label_pc_f530.backedge ], [ %v1_f51c, %dec_label_pc_f524 ]
  %v0_f54057 = phi i32 [ %v3_f530, %dec_label_pc_f530.backedge ], [ %v3_f53026, %dec_label_pc_f524 ]
  br label %dec_label_pc_f540

dec_label_pc_f540:                                ; preds = %dec_label_pc_f540.preheader, %dec_label_pc_f548
  %v0_f5ac = phi i32 [ %v0_f5ac63, %dec_label_pc_f540.preheader ], [ 1, %dec_label_pc_f548 ]
  %v0_f54c = phi i32 [ %v0_f54c61, %dec_label_pc_f540.preheader ], [ %v3_f568, %dec_label_pc_f548 ]
  %v0_f5b0 = phi i32 [ %v0_f54859, %dec_label_pc_f540.preheader ], [ %v2_f558, %dec_label_pc_f548 ]
  %v0_f540 = phi i32 [ %v0_f54057, %dec_label_pc_f540.preheader ], [ %v3_f55c, %dec_label_pc_f548 ]
  %v7_f540 = icmp eq i32 %v0_f540, 191
  store i1 %v7_f540, i1* %cpsr_z.global-to-local, align 1
  %tmp188 = icmp ult i32 %v0_f540, 192
  br i1 %tmp188, label %dec_label_pc_f5ac, label %dec_label_pc_f548

dec_label_pc_f548:                                ; preds = %dec_label_pc_f540
  %v1_f548 = add i32 %v0_f5b0, 1
  %v2_f548 = inttoptr i32 %v1_f548 to i8*
  %v3_f548 = load i8, i8* %v2_f548, align 1
  %v4_f548 = zext i8 %v3_f548 to i32
  store i32 %v2_f26c, i32* %r1.global-to-local, align 4
  %v2_f54c = add i32 %v0_f54c, %v1_f554
  %v2_f558 = add i32 %v2_f54c, %v4_f548
  store i32 %v2_f558, i32* %r3.global-to-local, align 4
  %v1_f55c = inttoptr i32 %v2_f558 to i8*
  %v2_f55c = load i8, i8* %v1_f55c, align 1
  %v3_f55c = zext i8 %v2_f55c to i32
  store i32 %v3_f55c, i32* %r2.global-to-local, align 4
  %v2_f560 = icmp eq i8 %v2_f55c, 0
  store i1 %v2_f560, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_f568 = mul nuw nsw i32 %v3_f55c, 256
  store i32 %v3_f568, i32* %r1.global-to-local, align 4
  br i1 %v2_f560, label %dec_label_pc_f570.thread, label %dec_label_pc_f540

dec_label_pc_f570.thread:                         ; preds = %dec_label_pc_f548
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb134

dec_label_pc_f570:                                ; preds = %dec_label_pc_f530.backedge
  %v7_f570 = icmp eq i32 %v0_f5ac, 1
  store i1 %v7_f570, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f570, label %bb134, label %bb135

bb134:                                            ; preds = %dec_label_pc_f570.thread, %dec_label_pc_f570
  %v1_f574147 = phi i32 [ %v1_f5b4, %dec_label_pc_f570.thread ], [ %v1_f5b465, %dec_label_pc_f570 ]
  %v2_f574 = add i32 %v1_f574147, 1
  store i32 %v2_f574, i32* %r0.global-to-local, align 4
  br label %bb135

bb135:                                            ; preds = %dec_label_pc_f570.thread148, %dec_label_pc_f570, %bb134
  %v1_f578 = phi i32 [ %v1_f5b465, %dec_label_pc_f570 ], [ %v2_f574, %bb134 ], [ 1, %dec_label_pc_f570.thread148 ]
  %v2_f578 = add i32 %v1_f578, %v1_f51c
  br label %dec_label_pc_f4a0.backedge

dec_label_pc_f4a0.backedge:                       ; preds = %bb135, %dec_label_pc_f664
  %v0_f4a0.pre = phi i32 [ %v3_f4ac163, %bb135 ], [ %v0_f4a0.pre.pre, %dec_label_pc_f664 ]
  %storemerge = phi i32 [ %v2_f578, %bb135 ], [ %v2_f678, %dec_label_pc_f664 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_f4a0 = add i32 %v0_f4a0.pre, -1
  %v3_f4a4 = mul i32 %v1_f4a0, 65536
  store i32 %v3_f4a4, i32* %r3.global-to-local, align 4
  %v7_f4a8 = icmp eq i32 %v3_f4a4, -65536
  store i1 %v7_f4a8, i1* %cpsr_z.global-to-local, align 1
  %v3_f4ac = urem i32 %v1_f4a0, 65536
  store i32 %v3_f4ac, i32* %r6.global-to-local, align 4
  br i1 %v7_f4a8, label %dec_label_pc_f414, label %dec_label_pc_f4b4

dec_label_pc_f580:                                ; preds = %dec_label_pc_f414
  %v1_f580 = add i32 %v4_f14c, 4
  %v2_f580 = inttoptr i32 %v1_f580 to i32*
  %v3_f580 = load i32, i32* %v2_f580, align 4
  store i32 %v3_f580, i32* %r0.global-to-local, align 4
  %v2_f584 = icmp eq i32 %v3_f580, 0
  store i1 %v2_f584, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_f58c.171 to i32), i32* %lr.global-to-local, align 4
  %v1_f588 = xor i1 %v2_f584, true
  call void @__pseudo_cond_branch(i1 %v1_f588, i32 ptrtoint (i32* @global_var_8db8.74 to i32))
  store i32 %v4_f14c, i32* %r0.global-to-local, align 4
  call void @free(i32* nonnull %v2_f14c)
  store i32 ptrtoint (i32* @0 to i32), i32* %r0.global-to-local, align 4
  %v0_f594 = load i32, i32* %r4.global-to-local, align 4
  %v5_f594 = inttoptr i32 %v0_f594 to i8*
  br label %dec_label_pc_f42c

dec_label_pc_f59c:                                ; preds = %dec_label_pc_f4d0
  %v2_f59c = icmp eq i32 %v0_f59c, 0
  store i1 %v2_f59c, i1* %cpsr_z.global-to-local, align 1
  %v1_f5a0 = add i32 %v0_f5a0, 1
  store i32 %v1_f5a0, i32* %r3.global-to-local, align 4
  br i1 %v2_f59c, label %bb136, label %dec_label_pc_f4c0.backedge

dec_label_pc_f4c0.backedge:                       ; preds = %dec_label_pc_f59c, %bb136
  %v1_f5a450 = phi i32 [ %v1_f5a4, %dec_label_pc_f59c ], [ %v2_f5a4, %bb136 ]
  %v1_f4c0 = inttoptr i32 %v1_f5a0 to i8*
  %v2_f4c0 = load i8, i8* %v1_f4c0, align 1
  %v3_f4c0 = zext i8 %v2_f4c0 to i32
  store i32 %v3_f4c0, i32* %r2.global-to-local, align 4
  %v2_f4c4 = icmp eq i8 %v2_f4c0, 0
  store i1 %v2_f4c4, i1* %cpsr_z.global-to-local, align 1
  %v3_f4c8 = mul nuw nsw i32 %v3_f4c0, 256
  store i32 %v3_f4c8, i32* %r1.global-to-local, align 4
  br i1 %v2_f4c4, label %dec_label_pc_f500, label %dec_label_pc_f4d0.preheader

bb136:                                            ; preds = %dec_label_pc_f59c
  %v2_f5a4 = add i32 %v1_f5a4, 1
  store i32 %v2_f5a4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_f4c0.backedge

dec_label_pc_f5ac:                                ; preds = %dec_label_pc_f540
  %v2_f5ac = icmp eq i32 %v0_f5ac, 0
  store i1 %v2_f5ac, i1* %cpsr_z.global-to-local, align 1
  %v1_f5b0 = add i32 %v0_f5b0, 1
  store i32 %v1_f5b0, i32* %r3.global-to-local, align 4
  br i1 %v2_f5ac, label %bb137, label %dec_label_pc_f530.backedge

dec_label_pc_f530.backedge:                       ; preds = %dec_label_pc_f5ac, %bb137
  %v1_f5b465 = phi i32 [ %v1_f5b4, %dec_label_pc_f5ac ], [ %v2_f5b4, %bb137 ]
  %v1_f530 = inttoptr i32 %v1_f5b0 to i8*
  %v2_f530 = load i8, i8* %v1_f530, align 1
  %v3_f530 = zext i8 %v2_f530 to i32
  store i32 %v3_f530, i32* %r2.global-to-local, align 4
  %v2_f534 = icmp eq i8 %v2_f530, 0
  store i1 %v2_f534, i1* %cpsr_z.global-to-local, align 1
  %v3_f538 = mul nuw nsw i32 %v3_f530, 256
  store i32 %v3_f538, i32* %r1.global-to-local, align 4
  br i1 %v2_f534, label %dec_label_pc_f570, label %dec_label_pc_f540.preheader

bb137:                                            ; preds = %dec_label_pc_f5ac
  %v2_f5b4 = add i32 %v1_f5b4, 1
  store i32 %v2_f5b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f530.backedge

dec_label_pc_f5bc:                                ; preds = %bb133
  %v1_f5bc = add i32 %v2_f508, 2
  %v2_f5bc = inttoptr i32 %v1_f5bc to i8*
  %v3_f5bc = load i8, i8* %v2_f5bc, align 1
  %v4_f5bc = zext i8 %v3_f5bc to i32
  store i32 %v4_f5bc, i32* %r3.global-to-local, align 4
  %v1_f5c0 = add i32 %v2_f508, 3
  %v2_f5c0 = inttoptr i32 %v1_f5c0 to i8*
  %v3_f5c0 = load i8, i8* %v2_f5c0, align 1
  %v4_f5c0 = zext i8 %v3_f5c0 to i32
  store i32 %v4_f5c0, i32* %r2.global-to-local, align 4
  %v4_f5c4 = mul nuw nsw i32 %v4_f5c0, 256
  %v5_f5c4 = or i32 %v4_f5c4, %v4_f5bc
  store i32 %v5_f5c4, i32* %r3.global-to-local, align 4
  %v7_f5c8 = icmp eq i32 %v5_f5c4, 256
  store i1 %v7_f5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5c8, label %dec_label_pc_f5d0, label %dec_label_pc_f524

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f5bc
  %v1_f5d0 = add i32 %v2_f508, 8
  %v2_f5d0 = inttoptr i32 %v1_f5d0 to i8*
  %v3_f5d0 = load i8, i8* %v2_f5d0, align 1
  %v4_f5d0 = zext i8 %v3_f5d0 to i32
  store i32 %v4_f5d0, i32* %r1.global-to-local, align 4
  %v1_f5d4 = add i32 %v2_f508, 9
  %v2_f5d4 = inttoptr i32 %v1_f5d4 to i8*
  %v3_f5d4 = load i8, i8* %v2_f5d4, align 1
  %v4_f5d4 = zext i8 %v3_f5d4 to i32
  store i32 %v4_f5d4, i32* %r0.global-to-local, align 4
  %v4_f5d8 = mul nuw nsw i32 %v4_f5d4, 256
  %v5_f5d8 = or i32 %v4_f5d8, %v4_f5d0
  %v3_f5dc = mul i32 %v5_f5d8, 65536
  store i32 %v3_f5dc, i32* %r2.global-to-local, align 4
  %v3_f5e0 = mul nuw nsw i32 %v4_f5d0, 256
  %v5_f5e8 = or i32 %v4_f5d4, %v3_f5e0
  store i32 %v5_f5e8, i32* %r3.global-to-local, align 4
  %v7_f5ec = icmp eq i32 %v5_f5e8, 4
  store i1 %v7_f5ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5ec, label %dec_label_pc_f5f4, label %dec_label_pc_f664

dec_label_pc_f5f4:                                ; preds = %dec_label_pc_f5d0
  %v2_f5f4 = inttoptr i32 %v1_f51c to i8*
  %v3_f5f4 = load i8, i8* %v2_f5f4, align 1
  %v4_f5f4 = zext i8 %v3_f5f4 to i32
  store i32 %v4_f5f4, i32* %r3.global-to-local, align 4
  store i32 %v2_f1cc, i32* %r2.global-to-local, align 4
  %v1_f600 = add i32 %v2_f508, 11
  %v2_f600 = inttoptr i32 %v1_f600 to i8*
  %v3_f600 = load i8, i8* %v2_f600, align 1
  %v4_f600 = zext i8 %v3_f600 to i32
  store i32 %v4_f600, i32* %r2.global-to-local, align 4
  store i32 %v2_f1cc, i32* %r3.global-to-local, align 4
  %v1_f60c = add i32 %v2_f508, 12
  %v2_f60c = inttoptr i32 %v1_f60c to i8*
  %v3_f60c = load i8, i8* %v2_f60c, align 1
  %v4_f60c = zext i8 %v3_f60c to i32
  store i32 %v4_f60c, i32* %r3.global-to-local, align 4
  store i32 %v2_f1cc, i32* %ip.global-to-local, align 4
  %v1_f618 = add i32 %v2_f508, 13
  %v2_f618 = inttoptr i32 %v1_f618 to i8*
  %v3_f618 = load i8, i8* %v2_f618, align 1
  %v4_f618 = zext i8 %v3_f618 to i32
  store i32 %v4_f618, i32* %r2.global-to-local, align 4
  store i32 %v4_f14c, i32* %lr.global-to-local, align 4
  %v2_f624 = load i8, i8* %tmp126, align 1
  %v3_f624 = zext i8 %v2_f624 to i32
  %v3_f628 = mul nuw nsw i32 %v3_f624, 4
  %v1_f62c = add nuw nsw i32 %v3_f628, 4
  store i32 %v1_f62c, i32* %r1.global-to-local, align 4
  %v3_f630 = load i32, i32* %v2_f630, align 4
  store i32 %v3_f630, i32* %r0.global-to-local, align 4
  %v8_f634 = inttoptr i32 %v3_f630 to i32*
  %v9_f634 = call i32* @realloc(i32* %v8_f634, i32 %v1_f62c)
  %v10_f634 = ptrtoint i32* %v9_f634 to i32
  store i32 %v10_f634, i32* %r0.global-to-local, align 4
  store i32 %v4_f14c, i32* %r1.global-to-local, align 4
  store i32 %v2_f1cc, i32* %ip.global-to-local, align 4
  %v2_f640 = load i8, i8* %tmp126, align 1
  %v3_f640 = zext i8 %v2_f640 to i32
  store i32 %v3_f640, i32* %r2.global-to-local, align 4
  %v4_f644 = sext i8 %v3_f5f4 to i32
  store i32 %v4_f644, i32* %r3.global-to-local, align 4
  store i32 %v4_f14c, i32* %lr.global-to-local, align 4
  %v1_f64c = add nuw nsw i32 %v3_f640, 1
  store i32 %v1_f64c, i32* %r1.global-to-local, align 4
  %v5_f650 = mul nuw nsw i32 %v3_f640, 4
  %v6_f650 = add i32 %v5_f650, %v10_f634
  %v7_f650 = inttoptr i32 %v6_f650 to i32*
  store i32 %v4_f644, i32* %v7_f650, align 4
  %v1_f654 = load i32, i32* %lr.global-to-local, align 4
  %v2_f654 = add i32 %v1_f654, 4
  %v3_f654 = inttoptr i32 %v2_f654 to i32*
  store i32 %v10_f634, i32* %v3_f654, align 4
  %v0_f658 = load i32, i32* %r1.global-to-local, align 4
  %v1_f658 = trunc i32 %v0_f658 to i8
  %v2_f658 = load i32, i32* %lr.global-to-local, align 4
  %v3_f658 = inttoptr i32 %v2_f658 to i8*
  store i8 %v1_f658, i8* %v3_f658, align 1
  %v0_f65c = load i32, i32* %r4.global-to-local, align 4
  %v1_f65c = add i32 %v0_f65c, 9
  %v2_f65c = inttoptr i32 %v1_f65c to i8*
  %v3_f65c = load i8, i8* %v2_f65c, align 1
  %v4_f65c = zext i8 %v3_f65c to i32
  store i32 %v4_f65c, i32* %r0.global-to-local, align 4
  %v1_f660 = add i32 %v0_f65c, 8
  %v2_f660 = inttoptr i32 %v1_f660 to i8*
  %v3_f660 = load i8, i8* %v2_f660, align 1
  %v4_f660 = zext i8 %v3_f660 to i32
  store i32 %v4_f660, i32* %r1.global-to-local, align 4
  %v0_f678.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_f4a0.pre.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_f664

dec_label_pc_f664:                                ; preds = %dec_label_pc_f5d0, %dec_label_pc_f5f4
  %v0_f4a0.pre.pre = phi i32 [ %v3_f4ac163, %dec_label_pc_f5d0 ], [ %v0_f4a0.pre.pre.pre, %dec_label_pc_f5f4 ]
  %v0_f678 = phi i32 [ %v1_f51c, %dec_label_pc_f5d0 ], [ %v0_f678.pre, %dec_label_pc_f5f4 ]
  %v1_f664 = phi i32 [ %v4_f5d4, %dec_label_pc_f5d0 ], [ %v4_f65c, %dec_label_pc_f5f4 ]
  %v0_f664 = phi i32 [ %v4_f5d0, %dec_label_pc_f5d0 ], [ %v4_f660, %dec_label_pc_f5f4 ]
  %v4_f664 = mul nuw nsw i32 %v1_f664, 256
  %v5_f664 = or i32 %v4_f664, %v0_f664
  %v3_f668 = mul i32 %v5_f664, 65536
  store i32 %v3_f668, i32* %r2.global-to-local, align 4
  %tmp138 = mul nuw nsw i32 %v0_f664, 256
  %v5_f674 = or i32 %tmp138, %v1_f664
  store i32 %v5_f674, i32* %r3.global-to-local, align 4
  %v2_f678 = add i32 %v5_f674, %v0_f678
  br label %dec_label_pc_f4a0.backedge

; uselistorder directives
  uselistorder i32 %v1_f664, { 1, 0 }
  uselistorder i32 %v3_f640, { 1, 0, 2 }
  uselistorder i32 %v10_f634, { 1, 0, 2 }
  uselistorder i32 %v4_f5d4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_f5d0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_f5b4, { 1, 0 }
  uselistorder i32 %v3_f530, { 0, 2, 1 }
  uselistorder i32 %v1_f5b465, { 2, 0, 1 }
  uselistorder i32 %v1_f5b0, { 1, 2, 0 }
  uselistorder i32 %v2_f5a4, { 1, 0 }
  uselistorder i32 %v3_f4c0, { 0, 2, 1 }
  uselistorder i32 %v1_f5a450, { 2, 0, 1 }
  uselistorder i32 %v1_f5a0, { 1, 2, 0 }
  uselistorder i1 %v7_f4a8, { 1, 0 }
  uselistorder i32 %v3_f4a4, { 1, 0 }
  uselistorder i32 %v1_f4a0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v3_f55c, { 0, 2, 1 }
  uselistorder i32 %v2_f558, { 1, 2, 0 }
  uselistorder i32 %v0_f5ac, { 2, 0, 1 }
  uselistorder i32 %v1_f5b4, { 1, 2, 0 }
  uselistorder i32 %v3_f53828, { 1, 0 }
  uselistorder i32 %v3_f53026, { 1, 0, 2 }
  uselistorder i32 %v1_f51c, { 2, 3, 1, 0, 5, 4, 6 }
  uselistorder i32 %v2_f508, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_f4ec, { 0, 2, 1 }
  uselistorder i32 %v2_f4e8, { 1, 2, 0 }
  uselistorder i32 %v0_f59c, { 2, 0, 1 }
  uselistorder i32 %v1_f5a4, { 1, 2, 0 }
  uselistorder i32 %v3_f4c822, { 1, 0 }
  uselistorder i32 %v3_f4c020, { 1, 0, 2 }
  uselistorder i32 %v0_f508162, { 3, 0, 1, 2 }
  uselistorder i32 %v3_f4ac161, { 1, 0 }
  uselistorder i32 %v3_f4a4159, { 1, 0 }
  uselistorder i32 %v1_f4a0158, { 1, 0 }
  uselistorder i32 %v4_f488, { 1, 0, 2 }
  uselistorder i32 %v0_f40c, { 1, 0 }
  uselistorder i32 %v0_f3e4, { 1, 0 }
  uselistorder i32 %v0_f388, { 0, 2, 1 }
  uselistorder i32 %v1_f358, { 1, 0 }
  uselistorder i32 %v3_f344, { 1, 0 }
  uselistorder i32 %v0_f33c, { 1, 0 }
  uselistorder i32 %v1_f330, { 1, 2, 0 }
  uselistorder i32 %v1_f44c, { 1, 2, 0 }
  uselistorder i32 %v2_f348, { 1, 0, 2 }
  uselistorder i32 %v2_f26c, { 4, 3, 2, 5, 7, 9, 1, 0, 6, 8, 10 }
  uselistorder i32 %v4_f220, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f214, { 1, 0, 2 }
  uselistorder i32 %v1_f1ec, { 1, 0, 2 }
  uselistorder i32 %v0_f1a8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_f1a4, { 1, 0, 2 }
  uselistorder i32 %v1_f1a0, { 1, 0 }
  uselistorder i32 %v2_f19412, { 1, 0 }
  uselistorder i32 %v2_f194, { 1, 0 }
  uselistorder i1 %v8_f184, { 1, 0 }
  uselistorder i32 %v2_f16c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_f154, { 1, 0 }
  uselistorder i32 %v4_f14c, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i8* %stack_var_-2240, { 0, 2, 1 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i8* %stack_var_-4288, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 7, 0, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 9, 7, 10, 11, 13, 14, 15, 16, 12, 18, 17, 19, 20 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 13, 11, 12, 14, 16, 33, 17, 18, 19, 20, 21, 25, 22, 23, 24, 26, 34, 35, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 12, 8, 0, 10, 11, 31, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 30 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 12, 7, 8, 28, 10, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 23, 27, 25 }
  uselistorder i32* %r0.global-to-local, { 2, 6, 3, 4, 5, 12, 7, 8, 1, 9, 10, 11, 14, 13, 17, 16, 15, 19, 18, 22, 20, 21, 23, 24, 26, 25, 28, 27, 29, 31, 30, 32, 39, 34, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 11, 5, 16, 6, 7, 17, 8, 37, 9, 10, 38, 1, 12, 13, 36, 14, 15, 39, 0, 40, 18, 19, 20, 21, 22, 23, 24, 25, 26, 2, 27, 28, 29, 30, 35, 33, 31, 32, 34, 41 }
  uselistorder void (i32*)* @free, { 1, 0, 2, 3 }
  uselistorder i32 -65536, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @sleep, { 5, 4, 10, 9, 7, 6, 3, 8, 2, 1, 0, 11 }
  uselistorder i32 53, { 1, 0, 2 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder label %dec_label_pc_f664, { 1, 0 }
  uselistorder label %dec_label_pc_f530.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f4c0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_f4a0.backedge, { 1, 0 }
  uselistorder label %bb135, { 2, 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_f540, { 1, 0 }
  uselistorder label %dec_label_pc_f540.preheader, { 1, 0 }
  uselistorder label %bb133, { 2, 1, 0 }
  uselistorder label %bb132, { 1, 0 }
  uselistorder label %dec_label_pc_f4d0, { 1, 0 }
  uselistorder label %dec_label_pc_f4d0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_f4b4, { 1, 0 }
  uselistorder label %dec_label_pc_f42c, { 1, 0 }
  uselistorder label %dec_label_pc_f414, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_f3f4, { 2, 1, 4, 0, 3 }
  uselistorder label %dec_label_pc_f32c.dec_label_pc_f32c_crit_edge, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %.thread13, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f17c, { 1, 0 }
}

define i32 @function_f680(i32 %arg1) local_unnamed_addr {
dec_label_pc_f680:
  %v2_f684 = load i32, i32* @global_var_1ba3c.173, align 4
  %v2_f68c = call i32 @kill(i32 %v2_f684, i32 9)
  %v0_f690 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f690, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_f680
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_f680, %bb
  ret i32 %v2_f68c

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 6, 2, 1, 0, 5, 4, 3, 7 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_f694() local_unnamed_addr {
dec_label_pc_f694:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f694 = load i32, i32* @r4, align 4
  store i32 %v3_f694, i32* %stack_var_-16, align 4
  %v0_f698 = load i32, i32* @r0, align 4
  store i32 %v0_f698, i32* %r5.global-to-local, align 4
  %v1_f69c = add i32 %v0_f698, 4
  %v2_f69c = inttoptr i32 %v1_f69c to i32*
  %v3_f69c = load i32, i32* %v2_f69c, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v1_f6bc = icmp ne i32 %v3_f69c, -1
  call void @__pseudo_cond_branch(i1 %v1_f6bc, i32 ptrtoint (i32* @global_var_8dac.151 to i32))
  %v3_f6cc = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_f6cc, i32* %r3.global-to-local, align 4
  %v2_f6d4 = icmp eq i32 %v3_f6cc, -1
  store i32 256, i32* @r1, align 4
  %v0_f6dc = load i32, i32* %r5.global-to-local, align 4
  %v1_f6dc = add i32 %v0_f6dc, 28
  store i32 %v1_f6dc, i32* @r0, align 4
  %v2_f6e0 = add i32 %v0_f6dc, 4
  %v3_f6e0 = inttoptr i32 %v2_f6e0 to i32*
  store i32 %v3_f6cc, i32* %v3_f6e0, align 4
  br i1 %v2_f6d4, label %dec_label_pc_f694.dec_label_pc_f75c_crit_edge, label %dec_label_pc_f6e8

dec_label_pc_f694.dec_label_pc_f75c_crit_edge:    ; preds = %dec_label_pc_f694
  %v14_f760.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_f75c

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f694
  %v0_f6e8 = load i32, i32* %r6.global-to-local, align 4
  %v1_f6e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_f6e8 = add i32 %v1_f6e8, 24
  %v3_f6e8 = inttoptr i32 %v2_f6e8 to i32*
  store i32 %v0_f6e8, i32* %v3_f6e8, align 4
  %v0_f6ec = call i32 @function_127cc()
  %v0_f6f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_f6f0 = add i32 %v0_f6f0, 4
  %v2_f6f0 = inttoptr i32 %v1_f6f0 to i32*
  %v3_f6f0 = load i32, i32* %v2_f6f0, align 4
  %v2_f700 = call i32 (i32, i32, ...) @fcntl(i32 %v3_f6f0, i32 3)
  %v2_f710 = call i32 (i32, i32, ...) @fcntl(i32 %v3_f6f0, i32 4)
  store i32 ptrtoint (i32* @global_var_1ba14.175 to i32), i32* %r3.global-to-local, align 4
  %v0_f718 = load i32, i32* %r5.global-to-local, align 4
  %v2_f71c = load i32, i32* @global_var_1ba14.175, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_f728 = add i32 %v0_f718, 8
  %v3_f728 = inttoptr i32 %v2_f728 to i32*
  store i32 %v2_f71c, i32* %v3_f728, align 4
  %v0_f72c = load i32, i32* %r3.global-to-local, align 4
  %v1_f72c = load i32, i32* %r5.global-to-local, align 4
  %v2_f72c = add i32 %v1_f72c, 12
  %v3_f72c = inttoptr i32 %v2_f72c to i32*
  store i32 %v0_f72c, i32* %v3_f72c, align 4
  %v0_f734 = load i32, i32* %r5.global-to-local, align 4
  %v1_f734 = add i32 %v0_f734, 4
  %v2_f734 = inttoptr i32 %v1_f734 to i32*
  %v3_f734 = load i32, i32* %v2_f734, align 4
  %v0_f738 = load i32, i32* %r3.global-to-local, align 4
  %v2_f738 = mul i32 %v0_f738, 2
  store i32 %v2_f738, i32* %r3.global-to-local, align 4
  %tmp13 = bitcast i32* %stack_var_-32 to %sockaddr*
  store i32 %v2_f738, i32* %stack_var_-32, align 4
  %v5_f758 = call i32 @connect(i32 %v3_f734, %sockaddr* %tmp13, i32 16)
  br label %dec_label_pc_f75c

dec_label_pc_f75c:                                ; preds = %dec_label_pc_f694.dec_label_pc_f75c_crit_edge, %dec_label_pc_f6e8
  %v14_f760 = phi i32 [ %v14_f760.pre, %dec_label_pc_f694.dec_label_pc_f75c_crit_edge ], [ %v5_f758, %dec_label_pc_f6e8 ]
  %v2_f760 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f760, i32* @r4, align 4
  ret i32 %v14_f760

; uselistorder directives
  uselistorder i32 %v2_f738, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 ()* @function_127cc, { 8, 4, 7, 6, 5, 1, 0, 3, 2 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 0, 3, 4, 5, 1, 2, 6, 7, 8 }
  uselistorder label %dec_label_pc_f75c, { 1, 0 }
}

define i32 @function_f768(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f768:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1b9e0.177 to i32), i32* %r8.global-to-local, align 4
  %v2_f770 = load i32, i32* @global_var_1b9e0.177, align 4
  store i32 ptrtoint (i32* @global_var_1ba0c.179 to i32), i32* %sb.global-to-local, align 4
  %v3_f77c = mul i32 %v2_f770, 16
  store i32 %v3_f77c, i32* %r3.global-to-local, align 4
  %v3_f784 = urem i32 %arg3, 65536
  store i32 %v3_f784, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_f790 = load i32, i32* @global_var_1ba0c.179, align 4
  %v1_f794 = add i32 %v3_f77c, 16
  store i32 %v1_f794, i32* %r1.global-to-local, align 4
  store i32 %v3_f784, i32* %stack_var_-44, align 4
  %v8_f79c = inttoptr i32 %v2_f790 to i32*
  %v9_f79c = call i32* @realloc(i32* %v8_f79c, i32 %v1_f794)
  %v11_f79c = ptrtoint i32* %v9_f79c to i32
  store i32 %v11_f79c, i32* %sl.global-to-local, align 4
  %v0_f7a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_f7a8 = load i32, i32* %sb.global-to-local, align 4
  %v2_f7a8 = inttoptr i32 %v1_f7a8 to i32*
  store i32 %v11_f79c, i32* %v2_f7a8, align 4
  %v2_f7ac = load i32, i32* @global_var_1b9e0.177, align 4
  store i32 %v2_f7ac, i32* %fp.global-to-local, align 4
  %v1_f7b0 = inttoptr i32 %v0_f7a4 to i8*
  %v2_f7b0 = call i32 @function_1272c(i8* %v1_f7b0)
  %sext = mul i32 %v2_f7b0, 16777216
  %v1_f7b4 = sdiv i32 %sext, 16777216
  %v2_f7b4 = add nsw i32 %v1_f7b4, 1
  store i32 %v1_f7b4, i32* %r7.global-to-local, align 4
  %v1_f7c0 = call i32* @malloc(i32 %v2_f7b4)
  %v3_f7c0 = ptrtoint i32* %v1_f7c0 to i32
  %v0_f7c4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_f7c4, i32* %r1.global-to-local, align 4
  store i32 %v2_f7b4, i32* %r2.global-to-local, align 4
  store i32 %v3_f7c0, i32* %r6.global-to-local, align 4
  %v3_f7d0 = call i32 @function_127a8(i32 %v3_f7c0, i32 %v0_f7c4, i32 %v2_f7b4)
  %v0_f7d4 = load i32, i32* %r7.global-to-local, align 4
  %tmp21 = icmp slt i32 %v0_f7d4, 1
  %extract.t6 = trunc i32 %v0_f7d4 to i8
  br i1 %tmp21, label %dec_label_pc_f7f8, label %dec_label_pc_f7dc

dec_label_pc_f7dc:                                ; preds = %dec_label_pc_f768
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f7e0

dec_label_pc_f7e0:                                ; preds = %dec_label_pc_f7e0, %dec_label_pc_f7dc
  %v2_f7e8 = phi i32 [ %v1_f7ec, %dec_label_pc_f7e0 ], [ 0, %dec_label_pc_f7dc ]
  %v1_f7e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_f7e0 = add i32 %v1_f7e0, %v2_f7e8
  %v3_f7e0 = inttoptr i32 %v2_f7e0 to i8*
  %v4_f7e0 = load i8, i8* %v3_f7e0, align 1
  %v6_f7e0 = zext i8 %v4_f7e0 to i32
  %v1_f7e4 = xor i32 %v6_f7e0, 34
  store i32 %v1_f7e4, i32* %r3.global-to-local, align 4
  %v1_f7e8 = trunc i32 %v1_f7e4 to i8
  store i8 %v1_f7e8, i8* %v3_f7e0, align 1
  %v0_f7ec = load i32, i32* %r2.global-to-local, align 4
  %v1_f7ec = add i32 %v0_f7ec, 1
  store i32 %v1_f7ec, i32* %r2.global-to-local, align 4
  %v0_f7f0 = load i32, i32* %r7.global-to-local, align 4
  %v9_f7f0 = icmp eq i32 %v0_f7f0, %v1_f7ec
  br i1 %v9_f7f0, label %dec_label_pc_f7f8.loopexit, label %dec_label_pc_f7e0

dec_label_pc_f7f8.loopexit:                       ; preds = %dec_label_pc_f7e0
  %extract.t = trunc i32 %v1_f7ec to i8
  br label %dec_label_pc_f7f8

dec_label_pc_f7f8:                                ; preds = %dec_label_pc_f7f8.loopexit, %dec_label_pc_f768
  %v0_f808.off0 = phi i8 [ %extract.t, %dec_label_pc_f7f8.loopexit ], [ %extract.t6, %dec_label_pc_f768 ]
  %v2_f7f8 = load i32, i32* @global_var_1b9e0.177, align 4
  %v2_f7fc = load i32, i32* @global_var_1ba0c.179, align 4
  store i32 %v2_f7fc, i32* %r2.global-to-local, align 4
  %v3_f800 = mul i32 %v2_f7f8, 16
  %v2_f804 = add i32 %v2_f7fc, %v3_f800
  store i32 %v2_f804, i32* %r3.global-to-local, align 4
  %v3_f808 = add i32 %v2_f804, 12
  %v4_f808 = inttoptr i32 %v3_f808 to i8*
  store i8 %v0_f808.off0, i8* %v4_f808, align 1
  %v0_f80c = load i32, i32* %r6.global-to-local, align 4
  %v1_f80c = load i32, i32* %sl.global-to-local, align 4
  %v2_f80c = load i32, i32* %fp.global-to-local, align 4
  %v5_f80c = mul i32 %v2_f80c, 16
  %v6_f80c = add i32 %v5_f80c, %v1_f80c
  %v7_f80c = inttoptr i32 %v6_f80c to i32*
  store i32 %v0_f80c, i32* %v7_f80c, align 4
  %v2_f814 = load i32, i32* @global_var_1b9e0.177, align 4
  store i32 %v2_f814, i32* %r7.global-to-local, align 4
  %v2_f818 = load i32, i32* @global_var_1ba0c.179, align 4
  store i32 %v2_f818, i32* %sl.global-to-local, align 4
  %v1_f81c = inttoptr i32 %arg2 to i8*
  %v2_f81c = call i32 @function_1272c(i8* %v1_f81c)
  %sext1 = mul i32 %v2_f81c, 16777216
  %v1_f820 = sdiv i32 %sext1, 16777216
  %v2_f820 = add nsw i32 %v1_f820, 1
  store i32 %v1_f820, i32* %r5.global-to-local, align 4
  %v1_f82c = call i32* @malloc(i32 %v2_f820)
  %v3_f82c = ptrtoint i32* %v1_f82c to i32
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %v2_f820, i32* %r2.global-to-local, align 4
  store i32 %v3_f82c, i32* %r6.global-to-local, align 4
  %v3_f83c = call i32 @function_127a8(i32 %v3_f82c, i32 %arg2, i32 %v2_f820)
  %v0_f840 = load i32, i32* %r5.global-to-local, align 4
  %tmp22 = icmp slt i32 %v0_f840, 1
  %extract.t8 = trunc i32 %v0_f840 to i8
  br i1 %tmp22, label %dec_label_pc_f864, label %dec_label_pc_f848

dec_label_pc_f848:                                ; preds = %dec_label_pc_f7f8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f84c:                                ; preds = %dec_label_pc_f84c, %dec_label_pc_f848
  %v2_f854 = phi i32 [ %v1_f858, %dec_label_pc_f84c ], [ 0, %dec_label_pc_f848 ]
  %v1_f84c = load i32, i32* %r6.global-to-local, align 4
  %v2_f84c = add i32 %v1_f84c, %v2_f854
  %v3_f84c = inttoptr i32 %v2_f84c to i8*
  %v4_f84c = load i8, i8* %v3_f84c, align 1
  %v6_f84c = zext i8 %v4_f84c to i32
  %v1_f850 = xor i32 %v6_f84c, 34
  store i32 %v1_f850, i32* %r3.global-to-local, align 4
  %v1_f854 = trunc i32 %v1_f850 to i8
  store i8 %v1_f854, i8* %v3_f84c, align 1
  %v0_f858 = load i32, i32* %r2.global-to-local, align 4
  %v1_f858 = add i32 %v0_f858, 1
  store i32 %v1_f858, i32* %r2.global-to-local, align 4
  %v0_f85c = load i32, i32* %r5.global-to-local, align 4
  %v9_f85c = icmp eq i32 %v0_f85c, %v1_f858
  br i1 %v9_f85c, label %dec_label_pc_f864.loopexit, label %dec_label_pc_f84c

dec_label_pc_f864.loopexit:                       ; preds = %dec_label_pc_f84c
  %extract.t7 = trunc i32 %v1_f858 to i8
  br label %dec_label_pc_f864

dec_label_pc_f864:                                ; preds = %dec_label_pc_f864.loopexit, %dec_label_pc_f7f8
  %v0_f874.off0 = phi i8 [ %extract.t7, %dec_label_pc_f864.loopexit ], [ %extract.t8, %dec_label_pc_f7f8 ]
  %v2_f864 = load i32, i32* @global_var_1b9e0.177, align 4
  %v2_f868 = load i32, i32* @global_var_1ba0c.179, align 4
  %v3_f86c = mul i32 %v2_f864, 16
  %v2_f870 = or i32 %v3_f86c, 13
  %v3_f874 = add i32 %v2_f870, %v2_f868
  %v4_f874 = inttoptr i32 %v3_f874 to i8*
  store i8 %v0_f874.off0, i8* %v4_f874, align 1
  %v2_f87c = load i32, i32* @global_var_1b9e0.177, align 4
  store i32 %v2_f87c, i32* %lr.global-to-local, align 4
  %v4_f880 = load i8, i8* @global_var_1ba11.182, align 1
  %v5_f880 = zext i8 %v4_f880 to i32
  %v3_f884 = load i8, i8* bitcast (i8** @global_var_1ba10.181 to i8*), align 4
  %v4_f884 = zext i8 %v3_f884 to i32
  %v2_f888 = load i32, i32* @global_var_1ba0c.179, align 4
  %v4_f88c = mul nuw nsw i32 %v5_f880, 256
  %v5_f88c = or i32 %v4_f884, %v4_f88c
  store i32 %v5_f88c, i32* %r2.global-to-local, align 4
  %v3_f890 = mul i32 %v2_f87c, 16
  %v2_f894 = add i32 %v2_f888, %v3_f890
  store i32 %v2_f894, i32* %r1.global-to-local, align 4
  %v3_f89c = add i32 %v2_f894, 9
  %v4_f89c = inttoptr i32 %v3_f89c to i8*
  store i8 %v4_f880, i8* %v4_f89c, align 1
  %v0_f8a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f8a0 = trunc i32 %v0_f8a0 to i8
  %v2_f8a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_f8a0 = add i32 %v2_f8a0, 8
  %v4_f8a0 = inttoptr i32 %v3_f8a0 to i8*
  store i8 %v1_f8a0, i8* %v4_f8a0, align 1
  %v4_f8a4 = load i8, i8* @global_var_1ba11.182, align 1
  %v5_f8a4 = zext i8 %v4_f8a4 to i32
  %v3_f8a8 = load i8, i8* bitcast (i8** @global_var_1ba10.181 to i8*), align 4
  %v4_f8a8 = zext i8 %v3_f8a8 to i32
  %v4_f8ac = mul nuw nsw i32 %v5_f8a4, 256
  %v5_f8ac = or i32 %v4_f8a8, %v4_f8ac
  %v2_f8b0 = load i32, i32* %stack_var_-44, align 4
  %v2_f8b4 = add i32 %v5_f8ac, %v2_f8b0
  store i32 %v2_f8b4, i32* %r3.global-to-local, align 4
  %v3_f8b89 = udiv i32 %v2_f8b4, 256
  %v1_f8bc = trunc i32 %v3_f8b89 to i8
  %v2_f8bc = load i32, i32* %r1.global-to-local, align 4
  %v3_f8bc = add i32 %v2_f8bc, 11
  %v4_f8bc = inttoptr i32 %v3_f8bc to i8*
  store i8 %v1_f8bc, i8* %v4_f8bc, align 1
  %v0_f8c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_f8c0 = trunc i32 %v0_f8c0 to i8
  %v2_f8c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_f8c0 = add i32 %v2_f8c0, 10
  %v4_f8c0 = inttoptr i32 %v3_f8c0 to i8*
  store i8 %v1_f8c0, i8* %v4_f8c0, align 1
  %v4_f8c4 = load i8, i8* @global_var_1ba11.182, align 1
  %v5_f8c4 = zext i8 %v4_f8c4 to i32
  %v3_f8c8 = load i8, i8* bitcast (i8** @global_var_1ba10.181 to i8*), align 4
  %v4_f8c8 = zext i8 %v3_f8c8 to i32
  %v4_f8cc = mul nuw nsw i32 %v5_f8c4, 256
  %v5_f8cc = or i32 %v4_f8c8, %v4_f8cc
  %v2_f8d0 = load i32, i32* %stack_var_-44, align 4
  %v2_f8d4 = add i32 %v5_f8cc, %v2_f8d0
  store i32 %v2_f8d4, i32* %r2.global-to-local, align 4
  %v0_f8d8 = load i32, i32* %r7.global-to-local, align 4
  %v3_f8d8 = mul i32 %v0_f8d8, 16
  %v1_f8dc = load i32, i32* %sl.global-to-local, align 4
  %v2_f8dc = add i32 %v1_f8dc, %v3_f8d8
  store i32 %v2_f8dc, i32* %r3.global-to-local, align 4
  %v0_f8e0 = load i32, i32* %lr.global-to-local, align 4
  %v1_f8e0 = add i32 %v0_f8e0, 1
  store i32 %v1_f8e0, i32* %lr.global-to-local, align 4
  %v3_f8e4 = sdiv i32 %v2_f8d4, 256
  store i32 %v3_f8e4, i32* %r1.global-to-local, align 4
  %v0_f8e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_f8e8 = add i32 %v2_f8dc, 4
  %v3_f8e8 = inttoptr i32 %v2_f8e8 to i32*
  store i32 %v0_f8e8, i32* %v3_f8e8, align 4
  %v0_f8ec = load i32, i32* %lr.global-to-local, align 4
  %v1_f8ec = load i32, i32* %r8.global-to-local, align 4
  %v2_f8ec = inttoptr i32 %v1_f8ec to i32*
  store i32 %v0_f8ec, i32* %v2_f8ec, align 4
  %v0_f8f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_f8f0 = trunc i32 %v0_f8f0 to i8
  store i8 %v1_f8f0, i8* @global_var_1ba11.182, align 1
  %v0_f8f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_f8f4 = trunc i32 %v0_f8f4 to i8
  store i8 %v1_f8f4, i8* bitcast (i8** @global_var_1ba10.181 to i8*), align 4
  ret i32 ptrtoint (i8** @global_var_1ba10.181 to i32)

; uselistorder directives
  uselistorder i32 %v1_f858, { 0, 2, 3, 1 }
  uselistorder i32 %v3_f82c, { 1, 0 }
  uselistorder i32 %v2_f820, { 1, 0, 2 }
  uselistorder i32 %v1_f7ec, { 0, 2, 3, 1 }
  uselistorder i32 %v3_f7c0, { 1, 0 }
  uselistorder i32 %v2_f7b4, { 1, 0, 2 }
  uselistorder i32 %v3_f784, { 1, 0 }
  uselistorder i32 %v3_f77c, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 (i8*)* @function_1272c, { 0, 1, 9, 10, 11, 12, 13, 28, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* (i32*, i32)* @realloc, { 0, 1, 2, 5, 8, 7, 10, 9, 3, 4, 6, 11 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_f90c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f90c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp254 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-41 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-1842 = alloca i32, align 4
  %stack_var_-1862 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_f90c = load i32, i32* @r4, align 4
  store i32 %v3_f90c, i32* %stack_var_-36, align 4
  %v6_f90c = load i32, i32* @r5, align 4
  %v18_f90c = load i32, i32* @sb, align 4
  %v21_f90c = load i32, i32* @sl, align 4
  %v0_f914 = call i32 @fork()
  store i32 %v0_f914, i32* %r0.global-to-local, align 4
  %v2_f918 = icmp eq i32 %v0_f914, -1
  %. = zext i1 %v2_f918 to i32
  %tmp288 = icmp slt i32 %v0_f914, 1
  %storemerge244 = select i1 %tmp288, i32 %., i32 1
  store i32 %storemerge244, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1ba3c.173 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f934 = icmp eq i32 %storemerge244, 0
  store i1 %v2_f934, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_f914, i32* @global_var_1ba3c.173, align 4
  br i1 %v2_f934, label %dec_label_pc_fbf8, label %dec_label_pc_f940

dec_label_pc_f940:                                ; preds = %dec_label_pc_f90c
  store i32 %v3_f90c, i32* %r4.global-to-local, align 4
  store i32 %v6_f90c, i32* %r5.global-to-local, align 4
  store i32 %v18_f90c, i32* @sb, align 4
  store i32 %v21_f90c, i32* @sl, align 4
  ret i32 %v0_f914

dec_label_pc_fbf8:                                ; preds = %dec_label_pc_f90c
  %v0_fbf8 = call i32 @function_129e4()
  store i32 %v0_fbf8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ba18.101 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_fbf8, i32* @global_var_1ba18.101, align 4
  %v1_fc04 = call i32 @function_efe8(i32 %v0_fbf8)
  %v0_fc08 = load i32, i32* @r4, align 4
  store i32 %v0_fc08, i32* %r0.global-to-local, align 4
  %v1_fc0c = inttoptr i32 %v0_fc08 to i32*
  %v2_fc0c = call i32 @time(i32* %v1_fc0c)
  store i32 ptrtoint (i32* @global_var_1ba14.175 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_fc0c, i32* @global_var_1ba14.175, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_fc20 = call i32* @calloc(i32 256, i32 288)
  %v4_fc20 = ptrtoint i32* %v2_fc20 to i32
  store i32 %v4_fc20, i32* %lr.global-to-local, align 4
  %v0_fc2c = load i32, i32* @r4, align 4
  store i32 %v0_fc2c, i32* %stack_var_-52, align 4
  store i32 %v4_fc20, i32* @global_var_1ba34.187, align 4
  store i32 %v0_fc2c, i32* %r3.global-to-local, align 4
  store i32 %v0_fc2c, i32* %r5.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v0_fc2c, i32* %ip.global-to-local, align 4
  %v1_fc44 = add i32 %v4_fc20, 4
  store i32 %v1_fc44, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fc48

dec_label_pc_fc48:                                ; preds = %dec_label_pc_fc48.dec_label_pc_fc48_crit_edge, %dec_label_pc_fbf8
  %v0_fc60 = phi i32 [ %v0_fc60.pre, %dec_label_pc_fc48.dec_label_pc_fc48_crit_edge ], [ %v0_fc2c, %dec_label_pc_fbf8 ]
  %v0_fc50 = phi i32 [ %v0_fc68, %dec_label_pc_fc48.dec_label_pc_fc48_crit_edge ], [ %v0_fc2c, %dec_label_pc_fbf8 ]
  %v1_fc58 = phi i32 [ %v1_fc58.pre, %dec_label_pc_fc48.dec_label_pc_fc48_crit_edge ], [ %v4_fc20, %dec_label_pc_fbf8 ]
  %v3_fc48 = mul i32 %v0_fc50, 256
  store i32 %v3_fc48, i32* %r2.global-to-local, align 4
  %v1_fc50 = add i32 %v0_fc50, 1
  store i32 %v1_fc50, i32* %ip.global-to-local, align 4
  %v2_fc54 = mul i32 %v0_fc50, 288
  %v2_fc58 = add i32 %v1_fc58, 12
  %v2_fc60 = add i32 %v2_fc58, %v2_fc54
  %v3_fc60 = inttoptr i32 %v2_fc60 to i32*
  store i32 %v0_fc60, i32* %v3_fc60, align 4
  %v0_fc64 = load i32, i32* %r0.global-to-local, align 4
  %v1_fc64 = load i32, i32* %r1.global-to-local, align 4
  %v2_fc64 = inttoptr i32 %v1_fc64 to i32*
  store i32 %v0_fc64, i32* %v2_fc64, align 4
  %v3_fc64 = load i32, i32* %r1.global-to-local, align 4
  %v4_fc64 = add i32 %v3_fc64, 288
  store i32 %v4_fc64, i32* %r1.global-to-local, align 4
  %v0_fc68 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_fc68, i32* %r3.global-to-local, align 4
  %v7_fc6c = icmp sgt i32 %v1_fc50, 255
  br i1 %v7_fc6c, label %dec_label_pc_fc70, label %dec_label_pc_fc48.dec_label_pc_fc48_crit_edge

dec_label_pc_fc48.dec_label_pc_fc48_crit_edge:    ; preds = %dec_label_pc_fc48
  %v1_fc58.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_fc60.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fc48

dec_label_pc_fc70:                                ; preds = %dec_label_pc_fc48
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 %v0_fc68, i32* %stack_var_-52, align 4
  %v3_fc80 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_fc80, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ba38.189 to i32), i32* %lr.global-to-local, align 4
  %v2_fc88 = icmp eq i32 %v3_fc80, -1
  store i1 %v2_fc88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fc88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_fc80, i32* %r4.global-to-local, align 4
  store i32 %v3_fc80, i32* @global_var_1ba38.189, align 4
  br i1 %v2_fc88, label %dec_label_pc_10e60, label %dec_label_pc_fc98

dec_label_pc_fc98:                                ; preds = %dec_label_pc_fc70
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_fc9c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_fc9c, i32* %r2.global-to-local, align 4
  %v2_fca0 = call i32 (i32, i32, ...) @fcntl(i32 %v3_fc80, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_fca8 = or i32 %v2_fca0, 2048
  store i32 %v1_fca8, i32* %r2.global-to-local, align 4
  %v0_fcac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fcac, i32* %r0.global-to-local, align 4
  %v2_fcb0 = call i32 (i32, i32, ...) @fcntl(i32 %v0_fcac, i32 4)
  store i32 1, i32* %ip.global-to-local, align 4
  %v2_fcbc = load i32, i32* @global_var_1ba38.189, align 4
  store i32 %v2_fcbc, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_fcc4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_fcc4, i32* %r1.global-to-local, align 4
  %v2_fcc8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_fcc8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r4.global-to-local, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v7_fcd8 = call i32 @setsockopt(i32 %v2_fcbc, i32 %v0_fcc4, i32 3, i32* nonnull %stack_var_-52, i32 4)
  store i32 %v7_fcd8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcdc = icmp eq i32 %v7_fcd8, 0
  store i1 %v2_fcdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcdc, label %dec_label_pc_fce4, label %dec_label_pc_10e54

dec_label_pc_fce4:                                ; preds = %dec_label_pc_fc98, %dec_label_pc_fce4
  %v0_fce4 = call i32 @function_ef90()
  %v3_fce8 = mul i32 %v0_fce4, 65536
  store i32 %v3_fce8, i32* %r0.global-to-local, align 4
  %v1_fcf4 = mul i32 %v0_fce4, 256
  %v3_fcf8 = and i32 %v1_fcf4, 65280
  %tmp291 = udiv i32 %v0_fce4, 256
  %v4_fcfc = urem i32 %tmp291, 256
  %v5_fcfc = or i32 %v4_fcfc, %v3_fcf8
  store i32 %v5_fcfc, i32* %r3.global-to-local, align 4
  %v2_fd00 = icmp ugt i32 %v5_fcfc, 1023
  store i1 %v2_fd00, i1* %cpsr_c.global-to-local, align 1
  %v7_fd00 = icmp eq i32 %v5_fcfc, 1024
  store i1 %v7_fd00, i1* %cpsr_z.global-to-local, align 1
  %v3_fd04 = icmp ult i32 %v5_fcfc, 1022
  br i1 %v3_fd04, label %dec_label_pc_fce4, label %dec_label_pc_fd08

dec_label_pc_fd08:                                ; preds = %dec_label_pc_fce4
  %v5_fcf0.le = trunc i32 %v0_fce4 to i8
  store i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32* %ip.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 69, i8* bitcast (i32* @global_var_1b9e4.191 to i8*), align 4
  store i8 40, i8* bitcast (i32* @global_var_1b9e7.192 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1b9e6.193 to i8*), align 4
  %v0_fd3c = call i32 @function_ef90()
  %v1_fd3c = trunc i32 %v0_fd3c to i8
  store i32 %v0_fd3c, i32* %r0.global-to-local, align 4
  %v4_fd44 = sext i8 %v5_fcf0.le to i32
  %v3_fd48 = load i8, i8* @global_var_1ba04.196, align 1
  store i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32* %lr.global-to-local, align 4
  %v3_fd50243 = udiv i32 %v4_fd44, 256
  store i8 64, i8* bitcast (i32* @global_var_1b9ec.197 to i8*), align 4
  %v2_fd5c = and i32 %v0_fd3c, 128
  %v3_fd5c = icmp ne i32 %v2_fd5c, 0
  store i1 %v3_fd5c, i1* %cpsr_c.global-to-local, align 1
  %v4_fd5c242 = udiv i32 %v0_fd3c, 256
  store i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), i32* %r3.global-to-local, align 4
  %tmp = urem i8 %v3_fd48, 16
  %v1_fd64 = zext i8 %tmp to i32
  store i32 6, i32* @r4, align 4
  %v1_fd6c = trunc i32 %v4_fd5c242 to i8
  store i8 %v1_fd6c, i8* bitcast (i32* @global_var_1b9e9.198 to i8*), align 4
  %v1_fd70 = or i32 %v1_fd64, 80
  store i32 %v1_fd70, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r2.global-to-local, align 4
  %v1_fd78 = trunc i32 %v1_fd70 to i8
  store i8 %v1_fd78, i8* @global_var_1ba04.196, align 1
  %v1_fd7c = trunc i32 %v3_fd50243 to i8
  store i8 %v1_fd7c, i8* bitcast (i32* @global_var_1b9f9.199 to i8*), align 4
  store i8 23, i8* bitcast (i32* @global_var_1b9fb.200 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_1b9ed.201 to i8*), align 4
  store i32 %v4_fd44, i32* %ip.global-to-local, align 4
  store i8 %v1_fd3c, i8* bitcast (i32* @global_var_1b9e8.202 to i8*), align 4
  store i8 %v5_fcf0.le, i8* bitcast (i32* @global_var_1b9f8.195 to i8*), align 4
  %v0_fd94 = load i32, i32* @r6, align 4
  %v1_fd94 = trunc i32 %v0_fd94 to i8
  store i8 %v1_fd94, i8* bitcast (i32* @global_var_1b9fa.203 to i8*), align 4
  %v0_fd98 = call i32 @function_ef90()
  %v1_fd98 = trunc i32 %v0_fd98 to i8
  store i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), i32* %lr.global-to-local, align 4
  %v3_fda0 = load i8, i8* @global_var_1ba05.204, align 1
  %v4_fda0 = zext i8 %v3_fda0 to i32
  %v2_fda4 = and i32 %v0_fd98, 128
  %v3_fda4 = icmp ne i32 %v2_fda4, 0
  store i1 %v3_fda4, i1* %cpsr_c.global-to-local, align 1
  %v4_fda4 = sdiv i32 %v0_fd98, 256
  store i32 %v4_fda4, i32* %ip.global-to-local, align 4
  %v1_fda8 = or i32 %v4_fda0, 2
  store i32 %v1_fda8, i32* %r3.global-to-local, align 4
  %v1_fdb0 = trunc i32 %v4_fda4 to i8
  store i8 %v1_fdb0, i8* bitcast (i32* @global_var_1ba07.205 to i8*), align 4
  %v1_fdb4 = trunc i32 %v1_fda8 to i8
  store i8 %v1_fdb4, i8* @global_var_1ba05.204, align 1
  store i8 %v1_fd98, i8* bitcast (i32* @global_var_1ba06.206 to i8*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fdc8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fdd8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_12fcc.214 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fde8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_12fcc.214 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_12fd4.216 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fdf8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([6 x i8]* @global_var_12fd4.216 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fe08 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r1.global-to-local, align 4
  %v5_fe18 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_12fdc.218 to i32), i32* %r1.global-to-local, align 4
  %v0_fe24 = load i32, i32* @r4, align 4
  store i32 %v0_fe24, i32* %r2.global-to-local, align 4
  %v4_fe28 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_12fdc.218 to i32), i32 %v0_fe24)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_12fe4.220 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fe38 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([8 x i8]* @global_var_12fe4.220 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fe48 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_12ff4.224 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fe58 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([9 x i8]* @global_var_12ff4.224 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13000.226 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fe68 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13000.226 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13008.228 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fe78 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13008.228 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32* %r1.global-to-local, align 4
  %v5_fe88 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fe98 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32* %r1.global-to-local, align 4
  %v5_fea8 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_feb8 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13568.232 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fec8 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32 ptrtoint (i32* @global_var_13568.232 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13000.226 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fed8 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32 ptrtoint (i32* @global_var_13000.226 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fee8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13018.234 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_fef8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([9 x i8]* @global_var_13018.234 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r1.global-to-local, align 4
  %v5_ff08 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13024.236 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ff18 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13024.236 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ff28 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32* %r1.global-to-local, align 4
  %v5_ff38 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13000.226 to i32), i32* %r1.global-to-local, align 4
  %v0_ff44 = load i32, i32* @r4, align 4
  store i32 %v0_ff44, i32* %r2.global-to-local, align 4
  %v4_ff48 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32 ptrtoint (i32* @global_var_13000.226 to i32), i32 %v0_ff44)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_13034.240 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ff58 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_13034.240 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1303c.242 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_ff68 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_1303c.242 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13190.244 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ff78 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13190.244 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13048.246 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_ff88 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([9 x i8]* @global_var_13048.246 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13190.244 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_ff98 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_13190.244 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13054.248 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_ffa8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13054.248 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13018.234 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_ffb8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([9 x i8]* @global_var_13018.234 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13568.232 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ffc8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13568.232 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1305c.250 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ffd8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_1305c.250 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_13064.252 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_ffe8 = call i32 @function_f768(i32 ptrtoint ([14 x i8]* @global_var_13064.252 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_13064.252 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13074.254 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fff8 = call i32 @function_f768(i32 ptrtoint ([14 x i8]* @global_var_13064.252 to i32), i32 ptrtoint ([7 x i8]* @global_var_13074.254 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_13064.252 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1307c.256 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_10008 = call i32 @function_f768(i32 ptrtoint ([14 x i8]* @global_var_13064.252 to i32), i32 ptrtoint ([4 x i8]* @global_var_1307c.256 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_13064.252 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13080.258 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_10018 = call i32 @function_f768(i32 ptrtoint ([14 x i8]* @global_var_13064.252 to i32), i32 ptrtoint ([7 x i8]* @global_var_13080.258 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_13088.260 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_13088.260 to i32), i32* %r1.global-to-local, align 4
  %v5_10028 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_13088.260 to i32), i32 ptrtoint ([8 x i8]* @global_var_13088.260 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_13088.260 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10038 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([8 x i8]* @global_var_13088.260 to i32), i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_13090.262 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_13090.262 to i32), i32* %r1.global-to-local, align 4
  %v5_10048 = call i32 @function_f768(i32 ptrtoint ([11 x i8]* @global_var_13090.262 to i32), i32 ptrtoint ([11 x i8]* @global_var_13090.262 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10058 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32* %r1.global-to-local, align 4
  %v5_10068 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13024.236 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10078 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32 ptrtoint (i32* @global_var_13024.236 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13000.226 to i32), i32* %r1.global-to-local, align 4
  %v0_10084 = load i32, i32* @r4, align 4
  store i32 %v0_10084, i32* %r2.global-to-local, align 4
  %v4_10088 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32 ptrtoint (i32* @global_var_13000.226 to i32), i32 %v0_10084)
  store i32 ptrtoint (i32* @global_var_130a4.266 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13018.234 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10098 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_130a4.266 to i32), i32 ptrtoint ([9 x i8]* @global_var_13018.234 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_130ac.268 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13568.232 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_100a8 = call i32 @function_f768(i32 ptrtoint ([14 x i8]* @global_var_130ac.268 to i32), i32 ptrtoint (i32* @global_var_13568.232 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_13054.248 to i32), i32* %r0.global-to-local, align 4
  %v0_100b0 = load i32, i32* @r4, align 4
  store i32 %v0_100b0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13054.248 to i32), i32* %r1.global-to-local, align 4
  %v3_100b8 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_13054.248 to i32), i32 ptrtoint (i32* @global_var_13054.248 to i32), i32 %v0_100b0)
  store i32 ptrtoint (i32* @global_var_12fdc.218 to i32), i32* %r0.global-to-local, align 4
  %v0_100c0 = load i32, i32* @r4, align 4
  store i32 %v0_100c0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_12fdc.218 to i32), i32* %r1.global-to-local, align 4
  %v3_100c8 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_12fdc.218 to i32), i32 ptrtoint (i32* @global_var_12fdc.218 to i32), i32 %v0_100c0)
  store i32 ptrtoint ([5 x i8]* @global_var_130bc.270 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_130bc.270 to i32), i32* %r1.global-to-local, align 4
  %v5_100d8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_130bc.270 to i32), i32 ptrtoint ([5 x i8]* @global_var_130bc.270 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_130bc.270 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_100e8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_130bc.270 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_130c4.272 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_100f8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_130c4.272 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_130cc.274 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10108 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_130cc.274 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_130d4.276 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10118 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_130d4.276 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_130dc.278 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_10128 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([6 x i8]* @global_var_130dc.278 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_130e4.280 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10138 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_130e4.280 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_130ec.282 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_10148 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([6 x i8]* @global_var_130ec.282 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_130f4.284 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_10158 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([9 x i8]* @global_var_130f4.284 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13100.286 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10168 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13100.286 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13110.288 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10178 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13110.288 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13120.290 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10188 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([7 x i8]* @global_var_13120.290 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_13128.292 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10198 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_13128.292 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13130.294 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_101a8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([9 x i8]* @global_var_13130.294 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_101b8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1313c.296 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_101c8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([8 x i8]* @global_var_1313c.296 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13144.298 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_101d8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13144.298 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13150.300 to i32), i32* %r1.global-to-local, align 4
  %v0_101e4 = load i32, i32* @r4, align 4
  store i32 %v0_101e4, i32* %r2.global-to-local, align 4
  %v4_101e8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13150.300 to i32), i32 %v0_101e4)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13158.302 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_101f8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_13158.302 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13568.232 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10208 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_13568.232 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13024.236 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10218 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_13024.236 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13008.228 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10228 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_13008.228 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13000.226 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10238 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_13000.226 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13110.288 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10248 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_13110.288 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13160.304 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10258 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_13160.304 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_13034.240 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10268 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([5 x i8]* @global_var_13034.240 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13074.254 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_10278 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([7 x i8]* @global_var_13074.254 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_12ff8.306 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10288 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([5 x i8]* @global_var_12ff8.306 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1316c.308 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10298 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_1316c.308 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_13178.310 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_102a8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([6 x i8]* @global_var_13178.310 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_13180.312 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_102b8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([4 x i8]* @global_var_13180.312 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13184.314 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_102c8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_13184.314 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1318c.316 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_102d8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_1318c.316 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13198.318 to i32), i32* %r1.global-to-local, align 4
  %v0_102e4 = load i32, i32* @r4, align 4
  store i32 %v0_102e4, i32* %r2.global-to-local, align 4
  %v5_102e8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([7 x i8]* @global_var_13198.318 to i32), i32 %v0_102e4)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_131a0.320 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_102f8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([9 x i8]* @global_var_131a0.320 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_131ac.322 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10308 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_131ac.322 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_131b4.324 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10318 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_131b4.324 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_131bc.326 to i32), i32* %r1.global-to-local, align 4
  %v0_10324 = load i32, i32* @r4, align 4
  store i32 %v0_10324, i32* %r2.global-to-local, align 4
  %v4_10328 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_131bc.326 to i32), i32 %v0_10324)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_131c4.328 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10338 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_131c4.328 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_131cc.330 to i32), i32* %r1.global-to-local, align 4
  %v0_10344 = load i32, i32* @r4, align 4
  store i32 %v0_10344, i32* %r2.global-to-local, align 4
  %v5_10348 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([7 x i8]* @global_var_131cc.330 to i32), i32 %v0_10344)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_131d4.332 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10358 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([8 x i8]* @global_var_131d4.332 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_131dc.334 to i32), i32* %r1.global-to-local, align 4
  %v0_10364 = load i32, i32* @r4, align 4
  store i32 %v0_10364, i32* %r2.global-to-local, align 4
  %v4_10368 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_131dc.334 to i32), i32 %v0_10364)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13080.258 to i32), i32* %r1.global-to-local, align 4
  %v0_10374 = load i32, i32* @r4, align 4
  store i32 %v0_10374, i32* %r2.global-to-local, align 4
  %v5_10378 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([7 x i8]* @global_var_13080.258 to i32), i32 %v0_10374)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_131e4.336 to i32), i32* %r1.global-to-local, align 4
  %v0_10384 = load i32, i32* @r4, align 4
  store i32 %v0_10384, i32* %r2.global-to-local, align 4
  %v4_10388 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_131e4.336 to i32), i32 %v0_10384)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_131ec.338 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10398 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([7 x i8]* @global_var_131ec.338 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_131f4.340 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_103a8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([9 x i8]* @global_var_131f4.340 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_13200.342 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_13200.342 to i32), i32* %r1.global-to-local, align 4
  %v5_103b8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_13200.342 to i32), i32 ptrtoint ([6 x i8]* @global_var_13200.342 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_12ff8.306 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_12ff8.306 to i32), i32* %r1.global-to-local, align 4
  %v5_103c8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_12ff8.306 to i32), i32 ptrtoint ([5 x i8]* @global_var_12ff8.306 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_12ff8.306 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_103d8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_12ff8.306 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_132f8.344 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_103e8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_132f8.344 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13208.346 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_103f8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13208.346 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_13210.348 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10408 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_13210.348 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_13210.348 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_13210.348 to i32), i32* %r1.global-to-local, align 4
  %v5_10418 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_13210.348 to i32), i32 ptrtoint ([8 x i8]* @global_var_13210.348 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_13218.350 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_10428 = call i32 @function_f768(i32 ptrtoint ([4 x i8]* @global_var_13218.350 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_1321c.352 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13224.354 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10438 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_1321c.352 to i32), i32 ptrtoint ([7 x i8]* @global_var_13224.354 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1322c.356 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1322c.356 to i32), i32* %r1.global-to-local, align 4
  %v5_10448 = call i32 @function_f768(i32 ptrtoint ([4 x i8]* @global_var_1322c.356 to i32), i32 ptrtoint ([4 x i8]* @global_var_1322c.356 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13230.358 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10458 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13230.358 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1323c.360 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10468 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_1323c.360 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_13244.362 to i32), i32* %r0.global-to-local, align 4
  %v0_10470 = load i32, i32* @r4, align 4
  store i32 %v0_10470, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13244.362 to i32), i32* %r1.global-to-local, align 4
  %v5_10478 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_13244.362 to i32), i32 ptrtoint ([7 x i8]* @global_var_13244.362 to i32), i32 %v0_10470)
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13244.362 to i32), i32* %r1.global-to-local, align 4
  %v0_10484 = load i32, i32* @r4, align 4
  store i32 %v0_10484, i32* %r2.global-to-local, align 4
  %v4_10488 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 ptrtoint ([7 x i8]* @global_var_13244.362 to i32), i32 %v0_10484)
  store i32 ptrtoint (i32* @global_var_1324c.364 to i32), i32* %r0.global-to-local, align 4
  %v0_10490 = load i32, i32* @r4, align 4
  store i32 %v0_10490, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1324c.364 to i32), i32* %r1.global-to-local, align 4
  %v3_10498 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_1324c.364 to i32), i32 ptrtoint (i32* @global_var_1324c.364 to i32), i32 %v0_10490)
  store i32 ptrtoint ([6 x i8]* @global_var_13254.366 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_104a8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_13254.366 to i32), i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1325c.368 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_104b8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_1325c.368 to i32), i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1325c.368 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_13034.240 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_104c8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_1325c.368 to i32), i32 ptrtoint ([5 x i8]* @global_var_13034.240 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1325c.368 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_104d8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_1325c.368 to i32), i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_13264.370 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_104e8 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_13264.370 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1326c.372 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13278.374 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_104f8 = call i32 @function_f768(i32 ptrtoint ([9 x i8]* @global_var_1326c.372 to i32), i32 ptrtoint ([7 x i8]* @global_var_13278.374 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_13280.376 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_13280.376 to i32), i32* %r1.global-to-local, align 4
  %v5_10508 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_13280.376 to i32), i32 ptrtoint ([8 x i8]* @global_var_13280.376 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_13288.378 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13288.378 to i32), i32* %r1.global-to-local, align 4
  %v5_10518 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_13288.378 to i32), i32 ptrtoint ([7 x i8]* @global_var_13288.378 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_13288.378 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_13290.380 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10528 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_13288.378 to i32), i32 ptrtoint ([8 x i8]* @global_var_13290.380 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_13298.382 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_132a0.384 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_10538 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_13298.382 to i32), i32 ptrtoint ([10 x i8]* @global_var_132a0.384 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_13298.382 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_131ec.338 to i32), i32* %r1.global-to-local, align 4
  %v0_10544 = load i32, i32* @r4, align 4
  store i32 %v0_10544, i32* %r2.global-to-local, align 4
  %v5_10548 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_13298.382 to i32), i32 ptrtoint ([7 x i8]* @global_var_131ec.338 to i32), i32 %v0_10544)
  store i32 ptrtoint ([5 x i8]* @global_var_132ac.386 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_132ac.386 to i32), i32* %r1.global-to-local, align 4
  %v5_10558 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_132ac.386 to i32), i32 ptrtoint ([5 x i8]* @global_var_132ac.386 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_132b4.388 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_132bc.390 to i32), i32* %r1.global-to-local, align 4
  %v0_10564 = load i32, i32* @r4, align 4
  store i32 %v0_10564, i32* %r2.global-to-local, align 4
  %v5_10568 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_132b4.388 to i32), i32 ptrtoint ([7 x i8]* @global_var_132bc.390 to i32), i32 %v0_10564)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_132bc.390 to i32), i32* %r1.global-to-local, align 4
  %v0_10574 = load i32, i32* @r4, align 4
  store i32 %v0_10574, i32* %r2.global-to-local, align 4
  %v5_10578 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([7 x i8]* @global_var_132bc.390 to i32), i32 %v0_10574)
  store i32 ptrtoint ([3 x i8]* @global_var_1328c.392 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_132c4.394 to i32), i32* %r1.global-to-local, align 4
  %v0_10584 = load i32, i32* @r4, align 4
  store i32 %v0_10584, i32* %r2.global-to-local, align 4
  %v5_10588 = call i32 @function_f768(i32 ptrtoint ([3 x i8]* @global_var_1328c.392 to i32), i32 ptrtoint ([7 x i8]* @global_var_132c4.394 to i32), i32 %v0_10584)
  store i32 ptrtoint ([7 x i8]* @global_var_132c4.394 to i32), i32* %r0.global-to-local, align 4
  %v0_10590 = load i32, i32* @r4, align 4
  store i32 %v0_10590, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_132c4.394 to i32), i32* %r1.global-to-local, align 4
  %v5_10598 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_132c4.394 to i32), i32 ptrtoint ([7 x i8]* @global_var_132c4.394 to i32), i32 %v0_10590)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_132cc.396 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_105a8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint (i32* @global_var_132cc.396 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_132cc.396 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_105b8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_132cc.396 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_132d8.398 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_105c8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_132d8.398 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_132e0.400 to i32), i32* %r1.global-to-local, align 4
  %v0_105d4 = load i32, i32* @r4, align 4
  store i32 %v0_105d4, i32* %r2.global-to-local, align 4
  %v5_105d8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([7 x i8]* @global_var_132e0.400 to i32), i32 %v0_105d4)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_132e8.402 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_105e8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_132e8.402 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_132f4.404 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_105f8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_132f4.404 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_132fc.406 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10608 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_132fc.406 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13308.408 to i32), i32* %r1.global-to-local, align 4
  %v0_10614 = load i32, i32* @r4, align 4
  store i32 %v0_10614, i32* %r2.global-to-local, align 4
  %v4_10618 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13308.408 to i32), i32 %v0_10614)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13310.410 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10628 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13310.410 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1331c.412 to i32), i32* %r1.global-to-local, align 4
  %v0_10634 = load i32, i32* @r4, align 4
  store i32 %v0_10634, i32* %r2.global-to-local, align 4
  %v4_10638 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_1331c.412 to i32), i32 %v0_10634)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13324.414 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10648 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13324.414 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1332c.416 to i32), i32* %r1.global-to-local, align 4
  %v0_10654 = load i32, i32* @r4, align 4
  store i32 %v0_10654, i32* %r2.global-to-local, align 4
  %v5_10658 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([7 x i8]* @global_var_1332c.416 to i32), i32 %v0_10654)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13334.418 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10668 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13334.418 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1333c.420 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10678 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_1333c.420 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13348.422 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10688 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint ([9 x i8]* @global_var_13348.422 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_13354.424 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10698 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 ptrtoint ([6 x i8]* @global_var_13354.424 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_13354.424 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_13354.424 to i32), i32* %r1.global-to-local, align 4
  %v5_106a8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_13354.424 to i32), i32 ptrtoint ([6 x i8]* @global_var_13354.424 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1335c.426 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1335c.426 to i32), i32* %r1.global-to-local, align 4
  %v5_106b8 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_1335c.426 to i32), i32 ptrtoint ([8 x i8]* @global_var_1335c.426 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_13364.428 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13080.258 to i32), i32* %r1.global-to-local, align 4
  %v0_106c4 = load i32, i32* @r4, align 4
  store i32 %v0_106c4, i32* %r2.global-to-local, align 4
  %v4_106c8 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_13364.428 to i32), i32 ptrtoint ([7 x i8]* @global_var_13080.258 to i32), i32 %v0_106c4)
  store i32 ptrtoint ([4 x i8]* @global_var_1336c.430 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13018.234 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_106d8 = call i32 @function_f768(i32 ptrtoint ([4 x i8]* @global_var_1336c.430 to i32), i32 ptrtoint ([9 x i8]* @global_var_13018.234 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_13370.432 to i32), i32* %r0.global-to-local, align 4
  %v0_106e0 = load i32, i32* @r4, align 4
  store i32 %v0_106e0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13370.432 to i32), i32* %r1.global-to-local, align 4
  %v5_106e8 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_13370.432 to i32), i32 ptrtoint ([7 x i8]* @global_var_13370.432 to i32), i32 %v0_106e0)
  store i32 ptrtoint ([6 x i8]* @global_var_13378.434 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13380.436 to i32), i32* %r1.global-to-local, align 4
  %v0_106f4 = load i32, i32* @r4, align 4
  store i32 %v0_106f4, i32* %r2.global-to-local, align 4
  %v4_106f8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_13378.434 to i32), i32 ptrtoint (i32* @global_var_13380.436 to i32), i32 %v0_106f4)
  store i32 ptrtoint ([7 x i8]* @global_var_13388.438 to i32), i32* %r0.global-to-local, align 4
  %v0_10700 = load i32, i32* @r4, align 4
  store i32 %v0_10700, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13388.438 to i32), i32* %r1.global-to-local, align 4
  %v5_10708 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_13388.438 to i32), i32 ptrtoint ([7 x i8]* @global_var_13388.438 to i32), i32 %v0_10700)
  store i32 ptrtoint ([6 x i8]* @global_var_13390.440 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_13390.440 to i32), i32* %r1.global-to-local, align 4
  %v5_10718 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_13390.440 to i32), i32 ptrtoint ([6 x i8]* @global_var_13390.440 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_13398.442 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_13398.442 to i32), i32* %r1.global-to-local, align 4
  %v5_10728 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_13398.442 to i32), i32 ptrtoint ([8 x i8]* @global_var_13398.442 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_133a0.444 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_133a0.444 to i32), i32* %r1.global-to-local, align 4
  %v5_10738 = call i32 @function_f768(i32 ptrtoint ([4 x i8]* @global_var_133a0.444 to i32), i32 ptrtoint ([4 x i8]* @global_var_133a0.444 to i32), i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_133a4.446 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_133a4.446 to i32), i32* %r1.global-to-local, align 4
  %v5_10748 = call i32 @function_f768(i32 ptrtoint ([4 x i8]* @global_var_133a4.446 to i32), i32 ptrtoint ([4 x i8]* @global_var_133a4.446 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_133a8.448 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_133a8.448 to i32), i32* %r1.global-to-local, align 4
  %v3_10758 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_133a8.448 to i32), i32 ptrtoint (i32* @global_var_133a8.448 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_133b0.450 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_133b0.450 to i32), i32* %r1.global-to-local, align 4
  %v5_10768 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_133b0.450 to i32), i32 ptrtoint ([5 x i8]* @global_var_133b0.450 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_133b8.452 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  %v0_10774 = load i32, i32* @r4, align 4
  store i32 %v0_10774, i32* %r2.global-to-local, align 4
  %v4_10778 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_133b8.452 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 %v0_10774)
  store i32 ptrtoint ([6 x i8]* @global_var_133c0.454 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13190.244 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10788 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_133c0.454 to i32), i32 ptrtoint (i32* @global_var_13190.244 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_133c0.454 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13000.226 to i32), i32* %r1.global-to-local, align 4
  %v0_10794 = load i32, i32* @r4, align 4
  store i32 %v0_10794, i32* %r2.global-to-local, align 4
  %v4_10798 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_133c0.454 to i32), i32 ptrtoint (i32* @global_var_13000.226 to i32), i32 %v0_10794)
  store i32 ptrtoint ([7 x i8]* @global_var_133c8.456 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r1.global-to-local, align 4
  %v0_107a4 = load i32, i32* @r4, align 4
  store i32 %v0_107a4, i32* %r2.global-to-local, align 4
  %v4_107a8 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_133c8.456 to i32), i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 %v0_107a4)
  store i32 ptrtoint ([7 x i8]* @global_var_133c8.456 to i32), i32* %r0.global-to-local, align 4
  %v0_107b0 = load i32, i32* @r4, align 4
  store i32 %v0_107b0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_133c8.456 to i32), i32* %r1.global-to-local, align 4
  %v5_107b8 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_133c8.456 to i32), i32 ptrtoint ([7 x i8]* @global_var_133c8.456 to i32), i32 %v0_107b0)
  store i32 ptrtoint ([5 x i8]* @global_var_133d0.458 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_133d0.458 to i32), i32* %r1.global-to-local, align 4
  %v5_107c8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_133d0.458 to i32), i32 ptrtoint ([5 x i8]* @global_var_133d0.458 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_133d8.460 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_107d8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_133d8.460 to i32), i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_133e0.462 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_107e8 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_133e0.462 to i32), i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_133e8.464 to i32), i32* %r0.global-to-local, align 4
  %v0_107f0 = load i32, i32* @r4, align 4
  store i32 %v0_107f0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_133e8.464 to i32), i32* %r1.global-to-local, align 4
  %v5_107f8 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_133e8.464 to i32), i32 ptrtoint ([7 x i8]* @global_var_133e8.464 to i32), i32 %v0_107f0)
  store i32 ptrtoint ([6 x i8]* @global_var_133f0.466 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_133f8.468 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10808 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_133f0.466 to i32), i32 ptrtoint ([6 x i8]* @global_var_133f8.468 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_13400.470 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_13408.472 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10818 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_13400.470 to i32), i32 ptrtoint ([5 x i8]* @global_var_13408.472 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_13410.474 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13410.474 to i32), i32* %r1.global-to-local, align 4
  %v3_10828 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_13410.474 to i32), i32 ptrtoint (i32* @global_var_13410.474 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_131a4.476 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13418.478 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10838 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_131a4.476 to i32), i32 ptrtoint (i32* @global_var_13418.478 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_13424.480 to i32), i32* %r0.global-to-local, align 4
  %v0_10840 = load i32, i32* @r4, align 4
  store i32 %v0_10840, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13424.480 to i32), i32* %r1.global-to-local, align 4
  %v5_10848 = call i32 @function_f768(i32 ptrtoint ([7 x i8]* @global_var_13424.480 to i32), i32 ptrtoint ([7 x i8]* @global_var_13424.480 to i32), i32 %v0_10840)
  store i32 ptrtoint (i32* @global_var_1342c.482 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13434.484 to i32), i32* %r1.global-to-local, align 4
  %v0_10854 = load i32, i32* @r4, align 4
  store i32 %v0_10854, i32* %r2.global-to-local, align 4
  %v4_10858 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_1342c.482 to i32), i32 ptrtoint ([7 x i8]* @global_var_13434.484 to i32), i32 %v0_10854)
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1343c.486 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10868 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 ptrtoint ([9 x i8]* @global_var_1343c.486 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13448.488 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10878 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 ptrtoint ([9 x i8]* @global_var_13448.488 to i32), i32 8)
  %v0_1087c = load i32, i32* @r4, align 4
  store i32 %v0_1087c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_13454.490 to i32), i32* %r1.global-to-local, align 4
  %v4_10888 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_1349c.210 to i32), i32 ptrtoint ([7 x i8]* @global_var_13454.490 to i32), i32 %v0_1087c)
  store i32 ptrtoint (i32* @global_var_1345c.492 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_13468.494 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_10898 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_1345c.492 to i32), i32 ptrtoint ([5 x i8]* @global_var_13468.494 to i32), i32 11)
  store i32 ptrtoint ([9 x i8]* @global_var_13470.496 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13470.496 to i32), i32* %r1.global-to-local, align 4
  %v5_108a8 = call i32 @function_f768(i32 ptrtoint ([9 x i8]* @global_var_13470.496 to i32), i32 ptrtoint ([9 x i8]* @global_var_13470.496 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1347c.498 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1347c.498 to i32), i32* %r1.global-to-local, align 4
  %v5_108b8 = call i32 @function_f768(i32 ptrtoint ([9 x i8]* @global_var_1347c.498 to i32), i32 ptrtoint ([9 x i8]* @global_var_1347c.498 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_13488.500 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_13488.500 to i32), i32* %r1.global-to-local, align 4
  %v5_108c8 = call i32 @function_f768(i32 ptrtoint ([9 x i8]* @global_var_13488.500 to i32), i32 ptrtoint ([9 x i8]* @global_var_13488.500 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1318c.316 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1318c.316 to i32), i32* %r1.global-to-local, align 4
  %v3_108d8 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_1318c.316 to i32), i32 ptrtoint (i32* @global_var_1318c.316 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_13494.502 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13494.502 to i32), i32* %r1.global-to-local, align 4
  %v3_108e8 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_13494.502 to i32), i32 ptrtoint (i32* @global_var_13494.502 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_134a0.504 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_134a0.504 to i32), i32* %r1.global-to-local, align 4
  %v5_108f8 = call i32 @function_f768(i32 ptrtoint ([9 x i8]* @global_var_134a0.504 to i32), i32 ptrtoint ([9 x i8]* @global_var_134a0.504 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_134ac.506 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_134ac.506 to i32), i32* %r1.global-to-local, align 4
  %v5_10908 = call i32 @function_f768(i32 ptrtoint ([9 x i8]* @global_var_134ac.506 to i32), i32 ptrtoint ([9 x i8]* @global_var_134ac.506 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_134b8.508 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_13090.262 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_10918 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_134b8.508 to i32), i32 ptrtoint ([11 x i8]* @global_var_13090.262 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_134c0.510 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_10928 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_134c0.510 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_13378.434 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_134d0.512 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_10938 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_13378.434 to i32), i32 ptrtoint (i32* @global_var_134d0.512 to i32), i32 14)
  store i32 ptrtoint ([10 x i8]* @global_var_134e0.514 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_134ec.516 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10948 = call i32 @function_f768(i32 ptrtoint ([10 x i8]* @global_var_134e0.514 to i32), i32 ptrtoint (i32* @global_var_134ec.516 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_134f8.518 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_13504.520 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_10958 = call i32 @function_f768(i32 ptrtoint ([10 x i8]* @global_var_134f8.518 to i32), i32 ptrtoint ([11 x i8]* @global_var_13504.520 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_13510.522 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_132cc.396 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10968 = call i32 @function_f768(i32 ptrtoint ([10 x i8]* @global_var_13510.522 to i32), i32 ptrtoint (i32* @global_var_132cc.396 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1351c.524 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_132cc.396 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10978 = call i32 @function_f768(i32 ptrtoint ([10 x i8]* @global_var_1351c.524 to i32), i32 ptrtoint (i32* @global_var_132cc.396 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_1345c.492 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13528.526 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_10988 = call i32 @function_f768(i32 ptrtoint (i32* @global_var_1345c.492 to i32), i32 ptrtoint (i32* @global_var_13528.526 to i32), i32 11)
  store i32 ptrtoint ([13 x i8]* @global_var_13534.528 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_13544.530 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_10998 = call i32 @function_f768(i32 ptrtoint ([13 x i8]* @global_var_13534.528 to i32), i32 ptrtoint ([13 x i8]* @global_var_13544.530 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13554.532 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_109a8 = call i32 @function_f768(i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), i32 ptrtoint (i32* @global_var_13554.532 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1355c.534 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_109b8 = call i32 @function_f768(i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), i32 ptrtoint ([7 x i8]* @global_var_1355c.534 to i32), i32 15)
  store i32 ptrtoint ([11 x i8]* @global_var_13090.262 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13564.536 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_109c8 = call i32 @function_f768(i32 ptrtoint ([11 x i8]* @global_var_13090.262 to i32), i32 ptrtoint (i32* @global_var_13564.536 to i32), i32 20)
  store i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13564.536 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_109d8 = call i32 @function_f768(i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), i32 ptrtoint (i32* @global_var_13564.536 to i32), i32 14)
  %v2_109e0 = ptrtoint i32* %stack_var_-1862 to i32
  store i32 %v2_109e0, i32* %r0.global-to-local, align 4
  %v2_109e4 = ptrtoint i32* %stack_var_-1842 to i32
  store i32 %v2_109e4, i32* %r1.global-to-local, align 4
  %tmp292 = bitcast i32* %stack_var_-1842 to i8*
  %v1_10d10 = add i32 %v2_109e0, 16
  %v2_10d10 = inttoptr i32 %v1_10d10 to i32*
  %v1_10d34 = or i32 %v2_109e4, 1
  %v2_10d34 = inttoptr i32 %v1_10d34 to i8*
  %v1_10d58 = or i32 %v2_109e4, 2
  %v2_10d58 = inttoptr i32 %v1_10d58 to i8*
  %v1_10d5c = or i32 %v2_109e4, 3
  %v2_10d5c = inttoptr i32 %v1_10d5c to i8*
  %v1_10d20 = add i32 %v2_109e0, 9
  %v2_10d20 = inttoptr i32 %v1_10d20 to i8*
  %v1_10d70 = add i32 %v2_109e4, 13
  %v2_10d70 = inttoptr i32 %v1_10d70 to i8*
  %v1_10d94 = add i32 %v2_109e4, 8
  %v2_10d94 = inttoptr i32 %v1_10d94 to i32*
  %v1_10dd4 = add i32 %v2_109e0, 12
  %v2_10dd4 = inttoptr i32 %v1_10dd4 to i32*
  %v2_10f60 = ptrtoint i32* %stack_var_-36 to i32
  %v2_10fe4 = ptrtoint i32* %stack_var_-348 to i32
  %tmp328 = bitcast i32* %stack_var_-348 to %_TYPEDEF_fd_set*
  %v2_10fec = ptrtoint i32* %stack_var_-64 to i32
  %v2_10ff0 = ptrtoint i32* %stack_var_-220 to i32
  %tmp329 = bitcast i32* %stack_var_-220 to %_TYPEDEF_fd_set*
  %tmp331 = bitcast i32* %stack_var_-64 to %timeval*
  %v2_112e8 = ptrtoint i32* %stack_var_-41 to i32
  %v2_119ec = ptrtoint i32* %stack_var_-84 to i32
  %v2_119f4 = ptrtoint i32* %stack_var_-73 to i32
  %v2_11190 = ptrtoint i32* %stack_var_-56 to i32
  %v2_1161c = ptrtoint i32* %stack_var_-48 to i32
  %v2_10c78 = ptrtoint i32* %stack_var_-92 to i32
  %tmp293 = bitcast i32* %stack_var_-92 to %sockaddr*
  br label %dec_label_pc_109f0

dec_label_pc_109f0:                               ; preds = %dec_label_pc_11048, %dec_label_pc_fd08
  %stack_var_-1872.0 = phi i32 [ %tmp254, %dec_label_pc_fd08 ], [ %stack_var_-1872.1, %dec_label_pc_11048 ]
  store i32 ptrtoint (i32* @global_var_1ba14.175 to i32), i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1872.0, i32* %r3.global-to-local, align 4
  %v2_109f8 = load i32, i32* @global_var_1ba14.175, align 4
  store i32 %v2_109f8, i32* @r8, align 4
  %v3_109fc = icmp uge i32 %stack_var_-1872.0, %v2_109f8
  store i1 %v3_109fc, i1* %cpsr_c.global-to-local, align 1
  %v9_109fc = icmp eq i32 %stack_var_-1872.0, %v2_109f8
  store i1 %v9_109fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_109fc, label %dec_label_pc_10ca8, label %dec_label_pc_10a04

dec_label_pc_10a04:                               ; preds = %dec_label_pc_109f0
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_10a10

dec_label_pc_10a10:                               ; preds = %.thread49.dec_label_pc_10a10_crit_edge, %dec_label_pc_10a04
  %v0_10a10 = phi i32 [ %v0_10a10.pre, %.thread49.dec_label_pc_10a10_crit_edge ], [ 0, %dec_label_pc_10a04 ]
  store i32 %v0_10a10, i32* %stack_var_-92, align 4
  store i32 %v0_10a10, i32* %stack_var_-84, align 4
  %v0_10a20 = call i32 @function_ef90()
  %v1_10a20 = trunc i32 %v0_10a20 to i8
  store i32 %v0_10a20, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ba18.101 to i32), i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32* %r1.global-to-local, align 4
  %v2_10a2c = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_10a2c, i32* %r2.global-to-local, align 4
  %v2_10a30 = and i32 %v0_10a20, 128
  %v3_10a30 = icmp ne i32 %v2_10a30, 0
  store i1 %v3_10a30, i1* %cpsr_c.global-to-local, align 1
  %v4_10a30 = sdiv i32 %v0_10a20, 256
  store i32 %v4_10a30, i32* %r3.global-to-local, align 4
  %v1_10a34 = trunc i32 %v4_10a30 to i8
  store i8 %v1_10a34, i8* bitcast (i32* @global_var_1b9e9.198 to i8*), align 4
  store i32 %v2_10a2c, i32* @global_var_1b9f0.537, align 4
  store i8 %v1_10a20, i8* bitcast (i32* @global_var_1b9e8.202 to i8*), align 4
  br label %dec_label_pc_10a40

dec_label_pc_10a40:                               ; preds = %dec_label_pc_10b14, %dec_label_pc_10a70, %dec_label_pc_10b48, %dec_label_pc_10b3c, %dec_label_pc_10b30, %dec_label_pc_10b24, %.thread34, %bb312, %bb311, %bb310, %bb309, %bb308, %dec_label_pc_10b0c, %dec_label_pc_10b04, %bb304, %dec_label_pc_10ad4, %dec_label_pc_10ab0, %bb297, %dec_label_pc_10a80, %bb296, %dec_label_pc_10a68, %bb295, %bb314, %dec_label_pc_10a10
  %v0_10a40 = call i32 @function_ef90()
  store i32 %v0_10a40, i32* %r0.global-to-local, align 4
  %v1_10a44 = urem i32 %v0_10a40, 256
  store i32 %v1_10a44, i32* %r1.global-to-local, align 4
  %v3_10a48 = udiv i32 %v0_10a40, 256
  store i32 %v3_10a48, i32* %r3.global-to-local, align 4
  %v3_10a4c = udiv i32 %v0_10a40, 65536
  store i32 %v3_10a4c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a50 = icmp eq i32 %v1_10a44, 0
  store i1 %v2_10a50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a50, label %bb295, label %bb294

bb294:                                            ; preds = %dec_label_pc_10a40
  %v3_10a54 = icmp ugt i32 %v1_10a44, 126
  store i1 %v3_10a54, i1* %cpsr_c.global-to-local, align 1
  %v8_10a54 = icmp eq i32 %v1_10a44, 127
  store i1 %v8_10a54, i1* %cpsr_z.global-to-local, align 1
  br label %bb295

bb295:                                            ; preds = %dec_label_pc_10a40, %bb294
  %v0_10a64 = phi i1 [ true, %dec_label_pc_10a40 ], [ %v8_10a54, %bb294 ]
  %v1_10a58 = urem i32 %v3_10a48, 256
  store i32 %v1_10a58, i32* %ip.global-to-local, align 4
  %v1_10a5c = urem i32 %v3_10a4c, 256
  store i32 %v1_10a5c, i32* %r2.global-to-local, align 4
  %v1_10a60 = and i32 %v0_10a40, 8388608
  %v2_10a60 = icmp ne i32 %v1_10a60, 0
  store i1 %v2_10a60, i1* %cpsr_c.global-to-local, align 1
  %v3_10a60 = udiv i32 %v0_10a40, 16777216
  store i32 %v3_10a60, i32* %r0.global-to-local, align 4
  br i1 %v0_10a64, label %dec_label_pc_10a40, label %dec_label_pc_10a68

dec_label_pc_10a68:                               ; preds = %bb295
  %v2_10a68 = icmp ugt i32 %v1_10a44, 2
  store i1 %v2_10a68, i1* %cpsr_c.global-to-local, align 1
  %v7_10a68 = icmp eq i32 %v1_10a44, 3
  store i1 %v7_10a68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a68, label %dec_label_pc_10a40, label %dec_label_pc_10a70

dec_label_pc_10a70:                               ; preds = %dec_label_pc_10a68
  %v1_10a70 = add nsw i32 %v1_10a44, -15
  store i32 %v1_10a70, i32* %r3.global-to-local, align 4
  %v2_10a74 = icmp ugt i32 %v1_10a44, 55
  store i1 %v2_10a74, i1* %cpsr_c.global-to-local, align 1
  %v7_10a74 = icmp eq i32 %v1_10a44, 56
  store i1 %v7_10a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a74, label %dec_label_pc_10a40, label %bb296

bb296:                                            ; preds = %dec_label_pc_10a70
  %v3_10a78 = icmp ne i32 %v1_10a70, 0
  store i1 %v3_10a78, i1* %cpsr_c.global-to-local, align 1
  %v8_10a78 = icmp eq i32 %v1_10a70, 1
  store i1 %v8_10a78, i1* %cpsr_z.global-to-local, align 1
  %v2_10a7c = xor i1 %v3_10a78, true
  %v3_10a7c = or i1 %v8_10a78, %v2_10a7c
  br i1 %v3_10a7c, label %dec_label_pc_10a40, label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %bb296
  %v2_10a80 = icmp ugt i32 %v1_10a44, 9
  store i1 %v2_10a80, i1* %cpsr_c.global-to-local, align 1
  %v7_10a80 = icmp eq i32 %v1_10a44, 10
  store i1 %v7_10a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a80, label %dec_label_pc_10a40, label %dec_label_pc_10a88

dec_label_pc_10a88:                               ; preds = %dec_label_pc_10a80
  %v2_10a88 = icmp ugt i32 %v1_10a44, 191
  store i1 %v2_10a88, i1* %cpsr_c.global-to-local, align 1
  %v7_10a88 = icmp eq i32 %v1_10a44, 192
  store i1 %v7_10a88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a88, label %bb297, label %dec_label_pc_10a94

bb297:                                            ; preds = %dec_label_pc_10a88
  %v3_10a8c = icmp ugt i32 %v1_10a58, 167
  store i1 %v3_10a8c, i1* %cpsr_c.global-to-local, align 1
  %v8_10a8c = icmp eq i32 %v1_10a58, 168
  store i1 %v8_10a8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10a8c, label %dec_label_pc_10a40, label %dec_label_pc_10a94

dec_label_pc_10a94:                               ; preds = %dec_label_pc_10a88, %bb297
  %v7_10a94 = icmp eq i32 %v1_10a44, 172
  %.369 = zext i1 %v7_10a94 to i32
  store i32 %.369, i32* %r3.global-to-local, align 4
  %v2_10aa0 = icmp ugt i32 %v1_10a58, 14
  store i1 %v2_10aa0, i1* %cpsr_c.global-to-local, align 1
  %v7_10aa0 = icmp eq i32 %v1_10a58, 15
  store i1 %v7_10aa0, i1* %cpsr_z.global-to-local, align 1
  %v2_10aa4 = xor i1 %v2_10aa0, true
  %v3_10aa4 = or i1 %v7_10aa0, %v2_10aa4
  br i1 %v3_10aa4, label %.thread12, label %bb300

.thread12:                                        ; preds = %dec_label_pc_10a94
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10ab8

bb300:                                            ; preds = %dec_label_pc_10a94
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10aa8 = icmp eq i1 %v7_10a94, false
  store i1 %v2_10aa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10aa8, label %dec_label_pc_10ab8, label %dec_label_pc_10ab0

dec_label_pc_10ab0:                               ; preds = %bb300
  %v2_10ab0 = icmp ugt i32 %v1_10a58, 30
  store i1 %v2_10ab0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ab0 = icmp eq i32 %v1_10a58, 31
  store i1 %v7_10ab0, i1* %cpsr_z.global-to-local, align 1
  %v2_10ab4 = xor i1 %v2_10ab0, true
  %v3_10ab4 = or i1 %v7_10ab0, %v2_10ab4
  br i1 %v3_10ab4, label %dec_label_pc_10a40, label %dec_label_pc_10ab8

dec_label_pc_10ab8:                               ; preds = %.thread12, %dec_label_pc_10ab0, %bb300
  %v7_10ab8 = icmp eq i32 %v1_10a44, 100
  %.370 = zext i1 %v7_10ab8 to i32
  store i32 %.370, i32* %r3.global-to-local, align 4
  %v2_10ac4 = icmp ugt i32 %v1_10a58, 62
  store i1 %v2_10ac4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ac4 = icmp eq i32 %v1_10a58, 63
  store i1 %v7_10ac4, i1* %cpsr_z.global-to-local, align 1
  %v2_10ac8 = xor i1 %v2_10ac4, true
  %v3_10ac8 = or i1 %v7_10ac4, %v2_10ac8
  br i1 %v3_10ac8, label %.thread17, label %bb303

.thread17:                                        ; preds = %dec_label_pc_10ab8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10adc

bb303:                                            ; preds = %dec_label_pc_10ab8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10acc = icmp eq i1 %v7_10ab8, false
  store i1 %v2_10acc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10acc, label %dec_label_pc_10adc, label %dec_label_pc_10ad4

dec_label_pc_10ad4:                               ; preds = %bb303
  %v2_10ad4 = icmp ugt i32 %v1_10a58, 125
  store i1 %v2_10ad4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ad4 = icmp eq i32 %v1_10a58, 126
  store i1 %v7_10ad4, i1* %cpsr_z.global-to-local, align 1
  %v2_10ad8 = xor i1 %v2_10ad4, true
  %v3_10ad8 = or i1 %v7_10ad4, %v2_10ad8
  br i1 %v3_10ad8, label %dec_label_pc_10a40, label %dec_label_pc_10adc

dec_label_pc_10adc:                               ; preds = %.thread17, %dec_label_pc_10ad4, %bb303
  %v2_10adc = icmp ugt i32 %v1_10a44, 168
  store i1 %v2_10adc, i1* %cpsr_c.global-to-local, align 1
  %v7_10adc = icmp eq i32 %v1_10a44, 169
  store i1 %v7_10adc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10adc, label %bb304, label %dec_label_pc_10ae8

bb304:                                            ; preds = %dec_label_pc_10adc
  %v3_10ae0 = icmp eq i32 %v1_10a58, 255
  store i1 %v3_10ae0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_10ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10ae0, label %dec_label_pc_10a40, label %dec_label_pc_10ae8

dec_label_pc_10ae8:                               ; preds = %dec_label_pc_10adc, %bb304
  %v7_10ae8 = icmp eq i32 %v1_10a44, 198
  %.371 = zext i1 %v7_10ae8 to i32
  store i32 %.371, i32* %r3.global-to-local, align 4
  %v2_10af4 = icmp ugt i32 %v1_10a58, 16
  store i1 %v2_10af4, i1* %cpsr_c.global-to-local, align 1
  %v7_10af4 = icmp eq i32 %v1_10a58, 17
  store i1 %v7_10af4, i1* %cpsr_z.global-to-local, align 1
  %v2_10af8 = xor i1 %v2_10af4, true
  %v3_10af8 = or i1 %v7_10af4, %v2_10af8
  br i1 %v3_10af8, label %.thread23, label %bb307

.thread23:                                        ; preds = %dec_label_pc_10ae8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10b0c

bb307:                                            ; preds = %dec_label_pc_10ae8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10afc = icmp eq i1 %v7_10ae8, false
  store i1 %v2_10afc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10afc, label %dec_label_pc_10b0c, label %dec_label_pc_10b04

dec_label_pc_10b04:                               ; preds = %bb307
  %v2_10b04 = icmp ugt i32 %v1_10a58, 18
  store i1 %v2_10b04, i1* %cpsr_c.global-to-local, align 1
  %v7_10b04 = icmp eq i32 %v1_10a58, 19
  store i1 %v7_10b04, i1* %cpsr_z.global-to-local, align 1
  %v2_10b08 = xor i1 %v2_10b04, true
  %v3_10b08 = or i1 %v7_10b04, %v2_10b08
  br i1 %v3_10b08, label %dec_label_pc_10a40, label %dec_label_pc_10b0c

dec_label_pc_10b0c:                               ; preds = %.thread23, %dec_label_pc_10b04, %bb307
  %v2_10b0c = icmp ugt i32 %v1_10a44, 222
  store i1 %v2_10b0c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b0c = icmp eq i32 %v1_10a44, 223
  store i1 %v7_10b0c, i1* %cpsr_z.global-to-local, align 1
  %v2_10b10 = xor i1 %v7_10b0c, true
  %v3_10b10 = and i1 %v2_10b0c, %v2_10b10
  br i1 %v3_10b10, label %dec_label_pc_10a40, label %dec_label_pc_10b14

dec_label_pc_10b14:                               ; preds = %dec_label_pc_10b0c
  %v1_10b14 = add nsw i32 %v1_10a44, -6
  store i32 %v1_10b14, i32* %r3.global-to-local, align 4
  %v2_10b18 = icmp ugt i32 %v1_10a44, 10
  store i1 %v2_10b18, i1* %cpsr_c.global-to-local, align 1
  %v7_10b18 = icmp eq i32 %v1_10a44, 11
  store i1 %v7_10b18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b18, label %dec_label_pc_10a40, label %bb308

bb308:                                            ; preds = %dec_label_pc_10b14
  %v3_10b1c = icmp ne i32 %v1_10b14, 0
  store i1 %v3_10b1c, i1* %cpsr_c.global-to-local, align 1
  %v8_10b1c = icmp eq i32 %v1_10b14, 1
  store i1 %v8_10b1c, i1* %cpsr_z.global-to-local, align 1
  %v2_10b20 = xor i1 %v3_10b1c, true
  %v3_10b20 = or i1 %v8_10b1c, %v2_10b20
  br i1 %v3_10b20, label %dec_label_pc_10a40, label %dec_label_pc_10b24

dec_label_pc_10b24:                               ; preds = %bb308
  %v2_10b24 = icmp ugt i32 %v1_10a44, 21
  store i1 %v2_10b24, i1* %cpsr_c.global-to-local, align 1
  %v7_10b24 = icmp eq i32 %v1_10a44, 22
  store i1 %v7_10b24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b24, label %dec_label_pc_10a40, label %bb309

bb309:                                            ; preds = %dec_label_pc_10b24
  %v3_10b28 = icmp ugt i32 %v1_10a44, 20
  store i1 %v3_10b28, i1* %cpsr_c.global-to-local, align 1
  %v8_10b28 = icmp eq i32 %v1_10a44, 21
  store i1 %v8_10b28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10b28, label %dec_label_pc_10a40, label %dec_label_pc_10b30

dec_label_pc_10b30:                               ; preds = %bb309
  %v2_10b30 = icmp ugt i32 %v1_10a44, 27
  store i1 %v2_10b30, i1* %cpsr_c.global-to-local, align 1
  %v7_10b30 = icmp eq i32 %v1_10a44, 28
  store i1 %v7_10b30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b30, label %dec_label_pc_10a40, label %bb310

bb310:                                            ; preds = %dec_label_pc_10b30
  %v3_10b34 = icmp ugt i32 %v1_10a44, 25
  store i1 %v3_10b34, i1* %cpsr_c.global-to-local, align 1
  %v8_10b34 = icmp eq i32 %v1_10a44, 26
  store i1 %v8_10b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10b34, label %dec_label_pc_10a40, label %dec_label_pc_10b3c

dec_label_pc_10b3c:                               ; preds = %bb310
  %v2_10b3c = icmp ugt i32 %v1_10a44, 29
  store i1 %v2_10b3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b3c = icmp eq i32 %v1_10a44, 30
  store i1 %v7_10b3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b3c, label %dec_label_pc_10a40, label %bb311

bb311:                                            ; preds = %dec_label_pc_10b3c
  %v3_10b40 = icmp ugt i32 %v1_10a44, 28
  store i1 %v3_10b40, i1* %cpsr_c.global-to-local, align 1
  %v8_10b40 = icmp eq i32 %v1_10a44, 29
  store i1 %v8_10b40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10b40, label %dec_label_pc_10a40, label %dec_label_pc_10b48

dec_label_pc_10b48:                               ; preds = %bb311
  %v2_10b48 = icmp ugt i32 %v1_10a44, 54
  store i1 %v2_10b48, i1* %cpsr_c.global-to-local, align 1
  %v7_10b48 = icmp eq i32 %v1_10a44, 55
  store i1 %v7_10b48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b48, label %dec_label_pc_10a40, label %bb312

bb312:                                            ; preds = %dec_label_pc_10b48
  %v3_10b4c = icmp ugt i32 %v1_10a44, 32
  store i1 %v3_10b4c, i1* %cpsr_c.global-to-local, align 1
  %v8_10b4c = icmp eq i32 %v1_10a44, 33
  store i1 %v8_10b4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10b4c, label %dec_label_pc_10a40, label %dec_label_pc_10b54

dec_label_pc_10b54:                               ; preds = %bb312
  %v2_10b54 = icmp ugt i32 %v1_10a44, 214
  store i1 %v2_10b54, i1* %cpsr_c.global-to-local, align 1
  %v7_10b54 = icmp eq i32 %v1_10a44, 215
  store i1 %v7_10b54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b54, label %.thread34, label %bb313

bb313:                                            ; preds = %dec_label_pc_10b54
  %v3_10b58 = icmp ugt i32 %v1_10a44, 213
  store i1 %v3_10b58, i1* %cpsr_c.global-to-local, align 1
  %v8_10b58 = icmp eq i32 %v1_10a44, 214
  store i1 %v8_10b58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10b58, label %bb314, label %dec_label_pc_10b68

.thread34:                                        ; preds = %dec_label_pc_10b54
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10a40

bb314:                                            ; preds = %bb313
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10a40

dec_label_pc_10b68:                               ; preds = %bb313
  store i32 0, i32* @r4, align 4
  %v5_10b74 = call i32 @llvm.bswap.i32(i32 %v0_10a40)
  store i32 %v5_10b74, i32* %r3.global-to-local, align 4
  %tmp315 = and i32 %v0_10a40, 65280
  %tmp316 = call i32 @llvm.bswap.i32(i32 %tmp315)
  %tmp317 = and i32 %v0_10a40, 16711680
  %tmp318 = call i32 @llvm.bswap.i32(i32 %tmp317)
  %v3_10b80 = mul nuw i32 %v3_10a60, 16777216
  %v3_10b84 = udiv i32 %tmp316, 256
  %v4_10b88 = mul nuw nsw i32 %tmp318, 256
  %tmp319 = and i32 %v0_10a40, 32768
  %v3_10b8c = icmp ne i32 %tmp319, 0
  store i1 %v3_10b8c, i1* %cpsr_c.global-to-local, align 1
  %v4_10b8c = udiv i32 %v5_10b74, 16777216
  store i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32* @r0, align 4
  %v5_10b8c = or i32 %v4_10b8c, %v3_10b80
  %v5_10b88 = or i32 %v5_10b8c, %v4_10b88
  %v2_10b94 = or i32 %v5_10b88, %v3_10b84
  store i32 %v2_10b94, i32* %r2.global-to-local, align 4
  %v4_10b98 = trunc i32 %v4_10b8c to i8
  store i8 %v4_10b98, i8* @global_var_1b9f4.538, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i8 0, i8* bitcast (i32* @global_var_1b9ee.539 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1b9ef.540 to i8*), align 4
  %v2_10ba8 = call i32 @function_d3d4(i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32 20)
  store i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32* %ip.global-to-local, align 4
  %sext8 = mul i32 %v2_10ba8, 16777216
  %v1_10bb0 = sdiv i32 %sext8, 16777216
  store i32 %v1_10bb0, i32* %r3.global-to-local, align 4
  %v4_10bb4 = ashr i32 %sext8, 31
  store i32 %v4_10bb4, i32* %r2.global-to-local, align 4
  %v1_10bb8 = trunc i32 %v1_10bb0 to i8
  store i8 %v1_10bb8, i8* bitcast (i32* @global_var_1b9ee.539 to i8*), align 4
  %v1_10bbc = trunc i32 %v4_10bb4 to i8
  store i8 %v1_10bbc, i8* bitcast (i32* @global_var_1b9ef.540 to i8*), align 4
  %v3_10bc0 = load i32, i32* %stack_var_-52, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_10bc8 = srem i32 %v3_10bc0, 10
  store i32 %v2_10bc8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bcc = icmp eq i32 %v2_10bc8, 0
  store i1 %v2_10bcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bcc, label %.thread213, label %bb320

.thread213:                                       ; preds = %dec_label_pc_10b68
  store i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), i32* @lr, align 4
  br label %.thread44.thread87

bb320:                                            ; preds = %dec_label_pc_10b68
  store i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), i32* %r0.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  %v1_10bdc = load i32, i32* @r4, align 4
  %v2_10bdc = trunc i32 %v1_10bdc to i8
  store i8 %v2_10bdc, i8* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), i32 2) to i8*), align 2
  %v0_10be0.pr.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10be0.pr.pre, label %.thread44.thread87, label %.thread41

.thread41:                                        ; preds = %bb320
  %v1_10be0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10be0 = trunc i32 %v1_10be0 to i8
  %v3_10be0 = load i32, i32* %r0.global-to-local, align 4
  %v4_10be0 = add i32 %v3_10be0, 3
  %v5_10be0 = inttoptr i32 %v4_10be0 to i8*
  store i8 %v2_10be0, i8* %v5_10be0, align 1
  %v0_10be8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32* %r0.global-to-local, align 4
  br i1 %v0_10be8.pr.pr, label %.thread47, label %.thread49

.thread44.thread87:                               ; preds = %bb320, %.thread213
  store i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32* %r0.global-to-local, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread41, %.thread44.thread87
  store i32 9, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v3_10bf0 = load i32, i32* @lr, align 4
  %v4_10bf0 = add i32 %v3_10bf0, 2
  %v5_10bf0 = inttoptr i32 %v4_10bf0 to i8*
  store i8 9, i8* %v5_10bf0, align 1
  %v0_10bf4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10bf4.pr.pr, label %bb321, label %.thread49

bb321:                                            ; preds = %.thread47
  %v1_10bf4 = load i32, i32* %r2.global-to-local, align 4
  %v2_10bf4 = trunc i32 %v1_10bf4 to i8
  %v3_10bf4 = load i32, i32* @lr, align 4
  %v4_10bf4 = add i32 %v3_10bf4, 3
  %v5_10bf4 = inttoptr i32 %v4_10bf4 to i8*
  store i8 %v2_10bf4, i8* %v5_10bf4, align 1
  br label %.thread49

.thread49:                                        ; preds = %.thread41, %.thread47, %bb321
  %v3_10bf8 = load i8, i8* @global_var_1b9f4.538, align 1
  %v4_10bf8 = sext i8 %v3_10bf8 to i32
  store i32 %v4_10bf8, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), i32* @r1, align 4
  store i8 %v3_10bf8, i8* @global_var_1b9fc.542, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_10c10 = load i32, i32* %sl.global-to-local, align 4
  %v1_10c10 = trunc i32 %v0_10c10 to i8
  store i8 %v1_10c10, i8* bitcast (i32* @global_var_1ba08.543 to i8*), align 4
  store i8 %v1_10c10, i8* bitcast (i32* @global_var_1ba09.544 to i8*), align 4
  %v4_10c18 = call i32 @function_d430(i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), i32 5120, i32 20)
  %sext = mul i32 %v4_10c18, 16777216
  %v1_10c20 = sdiv i32 %sext, 16777216
  %v3_10c28 = ashr i32 %sext, 31
  %v2_10c2c = load i32, i32* @global_var_1b9f8.195, align 4
  %v1_10c34 = trunc i32 %v3_10c28 to i8
  store i8 %v1_10c34, i8* bitcast (i32* @global_var_1ba09.544 to i8*), align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_10c48 = load i8, i8* @global_var_1b9f4.538, align 1
  %v4_10c48 = sext i8 %v3_10c48 to i32
  store i32 %v4_10c48, i32* %r4.global-to-local, align 4
  %v2_10c4c = load i32, i32* @global_var_1ba38.189, align 4
  store i32 %v2_10c4c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), i32* %ip.global-to-local, align 4
  %v1_10c5c = and i32 %v2_10c2c, 8388608
  %v2_10c5c = icmp ne i32 %v1_10c5c, 0
  store i1 %v2_10c5c, i1* %cpsr_c.global-to-local, align 1
  %v1_10c64 = trunc i32 %v1_10c20 to i8
  store i8 %v1_10c64, i8* bitcast (i32* @global_var_1ba08.543 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_10c78, i32* %lr.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v9_10c8c = call i32 @sendto(i32 %v2_10c4c, i32* nonnull @global_var_1b9e4.191, i32 40, i32 16384, %sockaddr* %tmp293, i32 16)
  store i32 %v9_10c8c, i32* %r0.global-to-local, align 4
  %v3_10c90 = load i32, i32* %stack_var_-52, align 4
  %v1_10c94 = add i32 %v3_10c90, 1
  store i32 %v1_10c94, i32* %r3.global-to-local, align 4
  %v3_10c98 = icmp ugt i32 %v1_10c94, 383
  store i1 %v3_10c98, i1* %cpsr_c.global-to-local, align 1
  %v8_10c98 = icmp eq i32 %v1_10c94, 384
  store i1 %v8_10c98, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10c94, i32* %stack_var_-52, align 4
  %v5_10ca0 = icmp slt i32 %v1_10c94, 384
  br i1 %v5_10ca0, label %.thread49.dec_label_pc_10a10_crit_edge, label %dec_label_pc_10ca4

.thread49.dec_label_pc_10a10_crit_edge:           ; preds = %.thread49
  %v0_10a10.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_10a10

dec_label_pc_10ca4:                               ; preds = %.thread49
  %v0_10ca4 = load i32, i32* @r8, align 4
  br label %dec_label_pc_10ca8

dec_label_pc_10ca8:                               ; preds = %dec_label_pc_109f0, %dec_label_pc_10ca4
  %stack_var_-1872.1 = phi i32 [ %stack_var_-1872.0, %dec_label_pc_109f0 ], [ %v0_10ca4, %dec_label_pc_10ca4 ]
  %v0_10ca8 = call i32* @__errno_location()
  %v2_10ca8 = ptrtoint i32* %v0_10ca8 to i32
  store i32 %v2_10ca8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10cb4

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10d94, %dec_label_pc_10d8c, %dec_label_pc_10d84, %dec_label_pc_10d54, %dec_label_pc_10d44, %dec_label_pc_10d20, %dec_label_pc_10d08, %dec_label_pc_10d7c, %dec_label_pc_10d70, %dec_label_pc_10d00, %dec_label_pc_10e34, %dec_label_pc_10ca8
  store i32 0, i32* %v0_10ca8, align 4
  %v2_10cc4 = load i32, i32* @global_var_1ba38.189, align 4
  store i32 %v2_10cc4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_109e0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v10_10ce4 = call i32 @recvfrom(i32 %v2_10cc4, i32* nonnull %stack_var_-1862, i32 1514, i32 16384, %sockaddr* null, i32* null)
  store i32 %v10_10ce4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10ce8 = icmp eq i32 %v10_10ce4, 0
  store i1 %v2_10ce8, i1* %cpsr_z.global-to-local, align 1
  %tmp322 = icmp slt i32 %v10_10ce4, 1
  br i1 %tmp322, label %dec_label_pc_10e68, label %dec_label_pc_10cf0

dec_label_pc_10cf0:                               ; preds = %dec_label_pc_10cb4
  store i32 %v2_10ca8, i32* %lr.global-to-local, align 4
  %v2_10cf4 = load i32, i32* %v0_10ca8, align 4
  store i32 %v2_10cf4, i32* %r3.global-to-local, align 4
  %v2_10cf8 = icmp ugt i32 %v2_10cf4, 10
  store i1 %v2_10cf8, i1* %cpsr_c.global-to-local, align 1
  %v7_10cf8 = icmp eq i32 %v2_10cf4, 11
  store i1 %v7_10cf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10cf8, label %dec_label_pc_10e68, label %dec_label_pc_10d00

dec_label_pc_10d00:                               ; preds = %dec_label_pc_10cf0
  %v2_10d00 = icmp ugt i32 %v10_10ce4, 38
  store i1 %v2_10d00, i1* %cpsr_c.global-to-local, align 1
  %v7_10d00 = icmp eq i32 %v10_10ce4, 39
  store i1 %v7_10d00, i1* %cpsr_z.global-to-local, align 1
  %v2_10d04 = xor i1 %v2_10d00, true
  %v3_10d04 = or i1 %v7_10d00, %v2_10d04
  br i1 %v3_10d04, label %dec_label_pc_10cb4, label %dec_label_pc_10d08

dec_label_pc_10d08:                               ; preds = %dec_label_pc_10d00
  store i32 %v2_109e0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ba18.101 to i32), i32* %r1.global-to-local, align 4
  %v3_10d10 = load i32, i32* %v2_10d10, align 4
  store i32 %v3_10d10, i32* %r2.global-to-local, align 4
  %v2_10d14 = load i32, i32* @global_var_1ba18.101, align 4
  store i32 %v2_10d14, i32* %r3.global-to-local, align 4
  %v3_10d18 = icmp uge i32 %v3_10d10, %v2_10d14
  store i1 %v3_10d18, i1* %cpsr_c.global-to-local, align 1
  %v9_10d18 = icmp eq i32 %v3_10d10, %v2_10d14
  store i1 %v9_10d18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10d18, label %dec_label_pc_10d20, label %dec_label_pc_10cb4

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10d08
  %v3_10d20 = load i8, i8* %v2_10d20, align 1
  %v4_10d20 = zext i8 %v3_10d20 to i32
  store i32 %v4_10d20, i32* %r3.global-to-local, align 4
  %v2_10d24 = icmp ugt i8 %v3_10d20, 5
  store i1 %v2_10d24, i1* %cpsr_c.global-to-local, align 1
  %v7_10d24 = icmp eq i8 %v3_10d20, 6
  store i1 %v7_10d24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d24, label %dec_label_pc_10d2c, label %dec_label_pc_10cb4

dec_label_pc_10d2c:                               ; preds = %dec_label_pc_10d20
  store i32 %v2_109e4, i32* %r3.global-to-local, align 4
  %v2_10d30 = load i8, i8* %tmp292, align 4
  %v3_10d30 = zext i8 %v2_10d30 to i32
  store i32 %v3_10d30, i32* %r2.global-to-local, align 4
  %v3_10d34 = load i8, i8* %v2_10d34, align 1
  %v4_10d34 = zext i8 %v3_10d34 to i32
  store i32 %v4_10d34, i32* %r3.global-to-local, align 4
  %v4_10d38 = mul nuw nsw i32 %v4_10d34, 256
  %v5_10d38 = or i32 %v4_10d38, %v3_10d30
  store i32 %v5_10d38, i32* %r2.global-to-local, align 4
  %v2_10d3c = icmp ugt i32 %v5_10d38, 5887
  store i1 %v2_10d3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10d3c = icmp eq i32 %v5_10d38, 5888
  store i1 %v7_10d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d3c, label %dec_label_pc_10d54, label %dec_label_pc_10d44

dec_label_pc_10d44:                               ; preds = %dec_label_pc_10d2c
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_10d4c = icmp ugt i32 %v5_10d38, 4872
  store i1 %v3_10d4c, i1* %cpsr_c.global-to-local, align 1
  %v9_10d4c = icmp eq i32 %v5_10d38, 4873
  store i1 %v9_10d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10d4c, label %dec_label_pc_10d54, label %dec_label_pc_10cb4

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10d44, %dec_label_pc_10d2c
  store i32 %v2_109e4, i32* %ip.global-to-local, align 4
  %v3_10d58 = load i8, i8* %v2_10d58, align 2
  %v4_10d58 = zext i8 %v3_10d58 to i32
  store i32 %v4_10d58, i32* %r3.global-to-local, align 4
  %v3_10d5c = load i8, i8* %v2_10d5c, align 1
  %v4_10d5c = zext i8 %v3_10d5c to i32
  store i32 %v4_10d5c, i32* %r2.global-to-local, align 4
  store i32 %v4_fd44, i32* %lr.global-to-local, align 4
  %v4_10d64 = mul nuw nsw i32 %v4_10d5c, 256
  %v5_10d64 = or i32 %v4_10d64, %v4_10d58
  store i32 %v5_10d64, i32* %r3.global-to-local, align 4
  %v3_10d68 = icmp uge i32 %v5_10d64, %v4_fd44
  store i1 %v3_10d68, i1* %cpsr_c.global-to-local, align 1
  %v9_10d68 = icmp eq i32 %v5_10d64, %v4_fd44
  store i1 %v9_10d68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10d68, label %dec_label_pc_10d70, label %dec_label_pc_10cb4

dec_label_pc_10d70:                               ; preds = %dec_label_pc_10d54
  %v3_10d70 = load i8, i8* %v2_10d70, align 1
  %v4_10d70 = zext i8 %v3_10d70 to i32
  store i32 %v4_10d70, i32* %r3.global-to-local, align 4
  %v1_10d74 = and i32 %v4_10d70, 2
  %v2_10d74 = icmp eq i32 %v1_10d74, 0
  store i1 %v2_10d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d74, label %dec_label_pc_10cb4, label %dec_label_pc_10d7c

dec_label_pc_10d7c:                               ; preds = %dec_label_pc_10d70
  %v1_10d7c = and i32 %v4_10d70, 16
  %v2_10d7c = icmp eq i32 %v1_10d7c, 0
  store i1 %v2_10d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d7c, label %dec_label_pc_10cb4, label %dec_label_pc_10d84

dec_label_pc_10d84:                               ; preds = %dec_label_pc_10d7c
  %v1_10d84 = and i32 %v4_10d70, 4
  %v2_10d84 = icmp eq i32 %v1_10d84, 0
  store i1 %v2_10d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d84, label %dec_label_pc_10d8c, label %dec_label_pc_10cb4

dec_label_pc_10d8c:                               ; preds = %dec_label_pc_10d84
  %tmp484 = urem i8 %v3_10d70, 2
  %v2_10d8c = icmp eq i8 %tmp484, 0
  store i1 %v2_10d8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d8c, label %dec_label_pc_10d94, label %dec_label_pc_10cb4

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d8c
  %v3_10d94 = load i32, i32* %v2_10d94, align 4
  %v2_10db0 = call i32 @llvm.bswap.i32(i32 %v3_10d94)
  %v1_10db4 = add i32 %v2_10db0, -1
  %v1_10db8 = udiv i32 %v1_10db4, 256
  %v3_10dbc = and i32 %v1_10db8, 65280
  %v1_10dc0 = and i32 %v1_10db4, 65280
  store i32 %v1_10dc0, i32* %r2.global-to-local, align 4
  %v3_10dc4 = mul i32 %v1_10db4, 16777216
  %v4_10dc8 = udiv i32 %v1_10db4, 16777216
  %v5_10dc8 = or i32 %v3_10dbc, %v4_10dc8
  store i32 %v5_10dc8, i32* %r1.global-to-local, align 4
  store i32 %v2_109e0, i32* %r3.global-to-local, align 4
  %v4_10dd0 = mul nuw nsw i32 %v1_10dc0, 256
  %v5_10dd0 = or i32 %v4_10dd0, %v3_10dc4
  store i32 %v5_10dd0, i32* %r0.global-to-local, align 4
  %v3_10dd4 = load i32, i32* %v2_10dd4, align 4
  store i32 %v3_10dd4, i32* %r2.global-to-local, align 4
  %v2_10dd8 = call i32 @llvm.bswap.i32(i32 %v1_10db4)
  store i32 %v2_10dd8, i32* %ip.global-to-local, align 4
  %v3_10ddc = icmp uge i32 %v2_10dd8, %v3_10dd4
  store i1 %v3_10ddc, i1* %cpsr_c.global-to-local, align 1
  %v9_10ddc = icmp eq i32 %v2_10dd8, %v3_10dd4
  store i1 %v9_10ddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10ddc, label %dec_label_pc_10de4, label %dec_label_pc_10cb4

dec_label_pc_10de4:                               ; preds = %dec_label_pc_10d94
  %v0_10de4 = load i32, i32* @r4, align 4
  %v2_10de4 = icmp ugt i32 %v0_10de4, 254
  store i1 %v2_10de4, i1* %cpsr_c.global-to-local, align 1
  %v7_10de4 = icmp eq i32 %v0_10de4, 255
  store i1 %v7_10de4, i1* %cpsr_z.global-to-local, align 1
  %v8_10de8 = icmp sgt i32 %v0_10de4, 255
  br i1 %v8_10de8, label %dec_label_pc_10e68, label %dec_label_pc_10dec

dec_label_pc_10dec:                               ; preds = %dec_label_pc_10de4
  store i32 ptrtoint (i32* @global_var_1ba34.187 to i32), i32* %lr.global-to-local, align 4
  %v3_10df0 = mul i32 %v0_10de4, 256
  store i32 %v3_10df0, i32* %r2.global-to-local, align 4
  %v2_10df4 = load i32, i32* @global_var_1ba34.187, align 4
  store i32 %v2_10df4, i32* %r1.global-to-local, align 4
  %v2_10dfc = mul i32 %v0_10de4, 288
  store i32 %v2_10dfc, i32* %r3.global-to-local, align 4
  %v2_10e00 = add i32 %v2_10df4, %v2_10dfc
  store i32 %v2_10e00, i32* @r0, align 4
  %v1_10e04 = add i32 %v2_10e00, 12
  %v2_10e04 = inttoptr i32 %v1_10e04 to i32*
  %v3_10e04 = load i32, i32* %v2_10e04, align 4
  store i32 %v3_10e04, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e08 = icmp eq i32 %v3_10e04, 0
  store i1 %v2_10e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e08, label %dec_label_pc_10e34, label %dec_label_pc_10e14.preheader

dec_label_pc_10e14.preheader:                     ; preds = %dec_label_pc_10dec
  %v2_10e0c = add i32 %v2_10e00, 288
  store i32 %v2_10e0c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10e14

dec_label_pc_10e14:                               ; preds = %dec_label_pc_10e14.preheader, %dec_label_pc_10e20
  %v0_10e20 = phi i32 [ %v2_10e0c, %dec_label_pc_10e14.preheader ], [ %v1_10e2c, %dec_label_pc_10e20 ]
  %v0_10e14 = phi i32 [ %v0_10de4, %dec_label_pc_10e14.preheader ], [ %v1_10e14, %dec_label_pc_10e20 ]
  %v1_10e14 = add i32 %v0_10e14, 1
  store i32 %v1_10e14, i32* @r4, align 4
  %v7_10e18 = icmp eq i32 %v1_10e14, 256
  br i1 %v7_10e18, label %dec_label_pc_10e68.loopexit, label %dec_label_pc_10e20

dec_label_pc_10e20:                               ; preds = %dec_label_pc_10e14
  store i32 %v0_10e20, i32* @r0, align 4
  %v1_10e24 = add i32 %v0_10e20, 12
  %v2_10e24 = inttoptr i32 %v1_10e24 to i32*
  %v3_10e24 = load i32, i32* %v2_10e24, align 4
  %v2_10e28 = icmp eq i32 %v3_10e24, 0
  %v1_10e2c = add i32 %v0_10e20, 288
  store i32 %v1_10e2c, i32* %r3.global-to-local, align 4
  br i1 %v2_10e28, label %dec_label_pc_10e34.loopexit, label %dec_label_pc_10e14

dec_label_pc_10e34.loopexit:                      ; preds = %dec_label_pc_10e20
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10e34

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e34.loopexit, %dec_label_pc_10dec
  %v1_10e34 = phi i32 [ %v0_10e20, %dec_label_pc_10e34.loopexit ], [ %v2_10e00, %dec_label_pc_10dec ]
  %v2_10e34 = add i32 %v1_10e34, 16
  %v3_10e34 = inttoptr i32 %v2_10e34 to i32*
  store i32 %v3_10dd4, i32* %v3_10e34, align 4
  store i32 %v2_109e4, i32* %r1.global-to-local, align 4
  %v2_10e3c = load i32, i32* %stack_var_-1842, align 4
  store i32 %v2_10e3c, i32* %r2.global-to-local, align 4
  %v1_10e40 = and i32 %v2_10e3c, 128
  %v2_10e40 = icmp ne i32 %v1_10e40, 0
  store i1 %v2_10e40, i1* %cpsr_c.global-to-local, align 1
  %v3_10e40 = sdiv i32 %v2_10e3c, 256
  store i32 %v3_10e40, i32* %r3.global-to-local, align 4
  %v1_10e44 = trunc i32 %v3_10e40 to i8
  %v2_10e44 = load i32, i32* @r0, align 4
  %v3_10e44 = add i32 %v2_10e44, 21
  %v4_10e44 = inttoptr i32 %v3_10e44 to i8*
  store i8 %v1_10e44, i8* %v4_10e44, align 1
  %v0_10e48 = load i32, i32* %r2.global-to-local, align 4
  %v1_10e48 = trunc i32 %v0_10e48 to i8
  %v2_10e48 = load i32, i32* @r0, align 4
  %v3_10e48 = add i32 %v2_10e48, 20
  %v4_10e48 = inttoptr i32 %v3_10e48 to i8*
  store i8 %v1_10e48, i8* %v4_10e48, align 1
  %v0_10e4c = call i32 @function_f694()
  store i32 %v0_10e4c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cb4

dec_label_pc_10e54:                               ; preds = %dec_label_pc_fc98
  store i32 ptrtoint (i32* @global_var_1ba38.189 to i32), i32* %r2.global-to-local, align 4
  %v2_10e58 = load i32, i32* @global_var_1ba38.189, align 4
  store i32 %v2_10e58, i32* %r0.global-to-local, align 4
  %v1_10e5c = call i32 @close(i32 %v2_10e58)
  store i32 %v1_10e5c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e60

dec_label_pc_10e60:                               ; preds = %dec_label_pc_fc70, %dec_label_pc_10e54
  %v0_10e60 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10e60, i32* %r0.global-to-local, align 4
  call void @exit(i32 %v0_10e60)
  unreachable

dec_label_pc_10e68.loopexit:                      ; preds = %dec_label_pc_10e14
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10e68

dec_label_pc_10e68:                               ; preds = %dec_label_pc_10de4, %dec_label_pc_10cf0, %dec_label_pc_10cb4, %dec_label_pc_10e68.loopexit
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1672, i32* %ip.global-to-local, align 4
  %v2_10e80429 = load i32, i32* @sp, align 4
  %v3_10e80430 = add i32 %v2_10e80429, 1672
  %v4_10e80431 = inttoptr i32 %v3_10e80430 to i32*
  store i32 0, i32* %v4_10e80431, align 4
  br label %dec_label_pc_10e70.dec_label_pc_10e70_crit_edge

dec_label_pc_10e70.dec_label_pc_10e70_crit_edge:  ; preds = %dec_label_pc_10e68, %dec_label_pc_10e70.dec_label_pc_10e70_crit_edge
  %v0_10e70.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10e80.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10e74 = add i32 %v0_10e70.pre, 4
  store i32 %v1_10e74, i32* %r3.global-to-local, align 4
  %v1_10e78 = add i32 %v0_10e70.pre, 1672
  store i32 %v1_10e78, i32* %ip.global-to-local, align 4
  %v7_10e7c = icmp eq i32 %v1_10e74, 128
  %v2_10e80 = load i32, i32* @sp, align 4
  %v3_10e80 = add i32 %v2_10e80, %v1_10e78
  %v4_10e80 = inttoptr i32 %v3_10e80 to i32*
  store i32 %v0_10e80.pre, i32* %v4_10e80, align 4
  br i1 %v7_10e7c, label %dec_label_pc_10e88, label %dec_label_pc_10e70.dec_label_pc_10e70_crit_edge

dec_label_pc_10e88:                               ; preds = %dec_label_pc_10e70.dec_label_pc_10e70_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10e88 = load i32, i32* %r2.global-to-local, align 4
  %v1_10e90432 = add i32 %v0_10e88, 4
  store i32 %v1_10e90432, i32* %r3.global-to-local, align 4
  %v1_10e94433 = add i32 %v0_10e88, 1544
  store i32 %v1_10e94433, i32* %lr.global-to-local, align 4
  %v7_10e98434 = icmp eq i32 %v1_10e90432, 128
  %v2_10e9c435 = load i32, i32* @sp, align 4
  %v3_10e9c436 = add i32 %v2_10e9c435, %v1_10e94433
  %v4_10e9c437 = inttoptr i32 %v3_10e9c436 to i32*
  store i32 %v0_10e88, i32* %v4_10e9c437, align 4
  br i1 %v7_10e98434, label %dec_label_pc_10ea4, label %dec_label_pc_10e8c.dec_label_pc_10e8c_crit_edge

dec_label_pc_10e8c.dec_label_pc_10e8c_crit_edge:  ; preds = %dec_label_pc_10e88, %dec_label_pc_10e8c.dec_label_pc_10e8c_crit_edge
  %v0_10e8c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10e9c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10e90 = add i32 %v0_10e8c.pre, 4
  store i32 %v1_10e90, i32* %r3.global-to-local, align 4
  %v1_10e94 = add i32 %v0_10e8c.pre, 1544
  store i32 %v1_10e94, i32* %lr.global-to-local, align 4
  %v7_10e98 = icmp eq i32 %v1_10e90, 128
  %v2_10e9c = load i32, i32* @sp, align 4
  %v3_10e9c = add i32 %v2_10e9c, %v1_10e94
  %v4_10e9c = inttoptr i32 %v3_10e9c to i32*
  store i32 %v0_10e9c.pre, i32* %v4_10e9c, align 4
  br i1 %v7_10e98, label %dec_label_pc_10ea4, label %dec_label_pc_10e8c.dec_label_pc_10e8c_crit_edge

dec_label_pc_10ea4:                               ; preds = %dec_label_pc_10e8c.dec_label_pc_10e8c_crit_edge, %dec_label_pc_10e88
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10ea4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10ea4, i32* @r6, align 4
  store i32 %v0_10ea4, i32* @r5, align 4
  store i32 %v0_10ea4, i32* @r7, align 4
  store i32 %v0_10ea4, i32* %stack_var_-52, align 4
  br label %dec_label_pc_10f1c

dec_label_pc_10eb8:                               ; preds = %dec_label_pc_10f44, %dec_label_pc_10f1c
  %storemerge237 = phi i32 [ 30, %dec_label_pc_10f1c ], [ 5, %dec_label_pc_10f44 ]
  store i32 %storemerge237, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ba14.175 to i32), i32* %r2.global-to-local, align 4
  %v2_10ebc = load i32, i32* @global_var_1ba14.175, align 4
  store i32 %v2_10ebc, i32* %r3.global-to-local, align 4
  %v1_10ec0 = add i32 %v2_10f30, 8
  %v2_10ec0 = inttoptr i32 %v1_10ec0 to i32*
  %v3_10ec0 = load i32, i32* %v2_10ec0, align 4
  store i32 %v3_10ec0, i32* %r2.global-to-local, align 4
  %v2_10ec4 = sub i32 %v2_10ebc, %v3_10ec0
  store i32 %v2_10ec4, i32* %r3.global-to-local, align 4
  %v3_10ec8 = icmp uge i32 %v2_10ec4, %storemerge237
  store i1 %v3_10ec8, i1* %cpsr_c.global-to-local, align 1
  %v9_10ec8 = icmp eq i32 %v2_10ec4, %storemerge237
  store i1 %v9_10ec8, i1* %cpsr_z.global-to-local, align 1
  %v2_10ecc = xor i1 %v9_10ec8, true
  %v3_10ecc = and i1 %v3_10ec8, %v2_10ecc
  br i1 %v3_10ecc, label %dec_label_pc_10f84, label %dec_label_pc_10ed0

dec_label_pc_10ed0:                               ; preds = %dec_label_pc_10eb8
  store i1 %v2_10f38, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10f38, i1* %cpsr_z.global-to-local, align 1
  %v1_10f54 = add i32 %v2_10f30, 4
  %v2_10f54 = inttoptr i32 %v1_10f54 to i32*
  %v3_10f54 = load i32, i32* %v2_10f54, align 4
  br i1 %v7_10f38, label %dec_label_pc_10f54, label %dec_label_pc_10ed8

dec_label_pc_10ed8:                               ; preds = %dec_label_pc_10ed0
  store i32 %v3_10f54, i32* %ip.global-to-local, align 4
  %v3_10edc = udiv i32 %v3_10f54, 32
  store i32 %v2_10f60, i32* %r0.global-to-local, align 4
  %v3_10ee4 = mul nuw nsw i32 %v3_10edc, 4
  %v2_10ee8 = add i32 %v3_10ee4, %v2_10f60
  store i32 %v2_10ee8, i32* %r3.global-to-local, align 4
  %v1_10eec = add i32 %v2_10ee8, -184
  %v2_10eec = inttoptr i32 %v1_10eec to i32*
  %v3_10eec = load i32, i32* %v2_10eec, align 4
  %v1_10ef0 = urem i32 %v3_10f54, 32
  store i32 %v1_10ef0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10ef8 = shl i32 1, %v1_10ef0
  %v8_10ef8 = or i32 %v3_10eec, %v7_10ef8
  store i32 %v8_10ef8, i32* %r2.global-to-local, align 4
  store i32 %v8_10ef8, i32* %v2_10eec, align 4
  %v0_10f00 = load i32, i32* @r6, align 4
  %v1_10f00 = load i32, i32* %ip.global-to-local, align 4
  %v3_10f00 = icmp uge i32 %v0_10f00, %v1_10f00
  store i1 %v3_10f00, i1* %cpsr_c.global-to-local, align 1
  %v9_10f00 = icmp eq i32 %v0_10f00, %v1_10f00
  store i1 %v9_10f00, i1* %cpsr_z.global-to-local, align 1
  %v5_10f04 = icmp slt i32 %v0_10f00, %v1_10f00
  br i1 %v5_10f04, label %bb324, label %bb325

bb324:                                            ; preds = %dec_label_pc_10ed8
  store i32 %v1_10f00, i32* @r6, align 4
  br label %bb325

bb325:                                            ; preds = %dec_label_pc_10f44, %dec_label_pc_11d2c, %dec_label_pc_10fb8, %bb327, %dec_label_pc_10ed8, %bb324
  %v3_10f08 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10f08, i32* %r3.global-to-local, align 4
  %v1_10f0c = add i32 %v3_10f08, 1
  store i32 %v1_10f0c, i32* %r2.global-to-local, align 4
  %v2_10f10 = icmp ugt i32 %v1_10f0c, 254
  store i1 %v2_10f10, i1* %cpsr_c.global-to-local, align 1
  %v7_10f10 = icmp eq i32 %v1_10f0c, 255
  store i1 %v7_10f10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10f0c, i32* %stack_var_-52, align 4
  %v8_10f18 = icmp sgt i32 %v1_10f0c, 255
  br i1 %v8_10f18, label %dec_label_pc_10fc4, label %dec_label_pc_10f1c

dec_label_pc_10f1c:                               ; preds = %bb325, %dec_label_pc_10ea4
  %v0_10f28 = phi i32 [ %v1_10f0c, %bb325 ], [ %v0_10ea4, %dec_label_pc_10ea4 ]
  store i32 ptrtoint (i32* @global_var_1ba34.187 to i32), i32* %r0.global-to-local, align 4
  %v3_10f20 = mul i32 %v0_10f28, 256
  store i32 %v3_10f20, i32* %r3.global-to-local, align 4
  %v2_10f24 = load i32, i32* @global_var_1ba34.187, align 4
  store i32 %v2_10f24, i32* %r1.global-to-local, align 4
  %v2_10f2c = mul i32 %v0_10f28, 288
  store i32 %v2_10f2c, i32* %r2.global-to-local, align 4
  %v2_10f30 = add i32 %v2_10f24, %v2_10f2c
  store i32 %v2_10f30, i32* @r4, align 4
  %v1_10f34 = add i32 %v2_10f30, 12
  %v2_10f34 = inttoptr i32 %v1_10f34 to i32*
  %v3_10f34 = load i32, i32* %v2_10f34, align 4
  store i32 %v3_10f34, i32* %ip.global-to-local, align 4
  %v2_10f38 = icmp ne i32 %v3_10f34, 0
  store i1 %v2_10f38, i1* %cpsr_c.global-to-local, align 1
  %v7_10f38 = icmp eq i32 %v3_10f34, 1
  store i1 %v7_10f38, i1* %cpsr_z.global-to-local, align 1
  %v2_10f3c = xor i1 %v7_10f38, true
  %v3_10f3c = and i1 %v2_10f38, %v2_10f3c
  br i1 %v3_10f3c, label %dec_label_pc_10eb8, label %dec_label_pc_10f44

dec_label_pc_10f44:                               ; preds = %dec_label_pc_10f1c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f44 = icmp eq i32 %v3_10f34, 0
  store i1 %v2_10f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10f44, label %bb325, label %dec_label_pc_10eb8

dec_label_pc_10f54:                               ; preds = %dec_label_pc_10ed0
  store i32 %v3_10f54, i32* %r0.global-to-local, align 4
  %v3_10f58 = udiv i32 %v3_10f54, 32
  %v3_10f5c = mul nuw nsw i32 %v3_10f58, 4
  store i32 %v2_10f60, i32* %lr.global-to-local, align 4
  %v2_10f64 = add i32 %v3_10f5c, %v2_10f60
  store i32 %v2_10f64, i32* %r3.global-to-local, align 4
  %v1_10f68 = add i32 %v2_10f64, -312
  %v2_10f68 = inttoptr i32 %v1_10f68 to i32*
  %v3_10f68 = load i32, i32* %v2_10f68, align 4
  %v1_10f6c = urem i32 %v3_10f54, 32
  store i32 %v1_10f6c, i32* %r1.global-to-local, align 4
  %v7_10f70 = shl i32 1, %v1_10f6c
  %v8_10f70 = or i32 %v3_10f68, %v7_10f70
  store i32 %v8_10f70, i32* %r2.global-to-local, align 4
  %v0_10f74 = load i32, i32* @r5, align 4
  %v3_10f74 = icmp uge i32 %v0_10f74, %v3_10f54
  store i1 %v3_10f74, i1* %cpsr_c.global-to-local, align 1
  %v9_10f74 = icmp eq i32 %v0_10f74, %v3_10f54
  store i1 %v9_10f74, i1* %cpsr_z.global-to-local, align 1
  %v5_10f78 = icmp slt i32 %v0_10f74, %v3_10f54
  br i1 %v5_10f78, label %bb326, label %bb327

bb326:                                            ; preds = %dec_label_pc_10f54
  store i32 %v3_10f54, i32* @r5, align 4
  br label %bb327

bb327:                                            ; preds = %dec_label_pc_10f54, %bb326
  store i32 %v8_10f70, i32* %v2_10f68, align 4
  br label %bb325

dec_label_pc_10f84:                               ; preds = %dec_label_pc_10eb8
  %v1_10f84 = add i32 %v2_10f30, 4
  %v2_10f84 = inttoptr i32 %v1_10f84 to i32*
  %v3_10f84 = load i32, i32* %v2_10f84, align 4
  store i32 %v3_10f84, i32* %r0.global-to-local, align 4
  %v1_10f88 = call i32 @close(i32 %v3_10f84)
  store i32 %v1_10f88, i32* %r0.global-to-local, align 4
  %v0_10f8c = load i32, i32* @r4, align 4
  %v1_10f8c = add i32 %v0_10f8c, 12
  %v2_10f8c = inttoptr i32 %v1_10f8c to i32*
  %v3_10f8c = load i32, i32* %v2_10f8c, align 4
  store i32 %v3_10f8c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10f94 = icmp ugt i32 %v3_10f8c, 1
  store i1 %v2_10f94, i1* %cpsr_c.global-to-local, align 1
  %v7_10f94 = icmp eq i32 %v3_10f8c, 2
  store i1 %v7_10f94, i1* %cpsr_z.global-to-local, align 1
  %v2_10f98 = add i32 %v0_10f8c, 4
  %v3_10f98 = inttoptr i32 %v2_10f98 to i32*
  store i32 -1, i32* %v3_10f98, align 4
  %v2_10f9c = xor i1 %v2_10f94, true
  %v3_10f9c = or i1 %v7_10f94, %v2_10f9c
  br i1 %v3_10f9c, label %dec_label_pc_11d2c, label %dec_label_pc_10fa0

dec_label_pc_10fa0:                               ; preds = %dec_label_pc_10f84
  %v0_10fa0 = load i32, i32* @r4, align 4
  %v1_10fa0 = add i32 %v0_10fa0, 284
  %v2_10fa0 = inttoptr i32 %v1_10fa0 to i8*
  %v3_10fa0 = load i8, i8* %v2_10fa0, align 1
  %v4_10fa0 = zext i8 %v3_10fa0 to i32
  %v1_10fa4 = add nuw nsw i32 %v4_10fa0, 1
  %v1_10fa8 = urem i32 %v1_10fa4, 256
  store i32 %v1_10fa8, i32* %r3.global-to-local, align 4
  %v2_10fac = icmp ugt i32 %v1_10fa8, 9
  store i1 %v2_10fac, i1* %cpsr_c.global-to-local, align 1
  %v7_10fac = icmp eq i32 %v1_10fa8, 10
  store i1 %v7_10fac, i1* %cpsr_z.global-to-local, align 1
  %v1_10fb0 = trunc i32 %v1_10fa4 to i8
  store i8 %v1_10fb0, i8* %v2_10fa0, align 1
  %v0_10fb4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10fb4, label %dec_label_pc_11d2c, label %dec_label_pc_10fb8

dec_label_pc_10fb8:                               ; preds = %dec_label_pc_10fa0
  %v0_10fb8 = load i32, i32* @r4, align 4
  store i32 %v0_10fb8, i32* @r0, align 4
  %v0_10fbc = call i32 @function_f694()
  store i32 %v0_10fbc, i32* %r0.global-to-local, align 4
  br label %bb325

dec_label_pc_10fc4:                               ; preds = %bb325
  store i32 1, i32* %stack_var_-64, align 4
  %v0_10fcc = load i32, i32* @r6, align 4
  %v1_10fcc = load i32, i32* @r5, align 4
  %v3_10fcc = icmp uge i32 %v0_10fcc, %v1_10fcc
  store i1 %v3_10fcc, i1* %cpsr_c.global-to-local, align 1
  %v9_10fcc = icmp eq i32 %v0_10fcc, %v1_10fcc
  store i1 %v9_10fcc, i1* %cpsr_z.global-to-local, align 1
  %v5_10fd0 = icmp slt i32 %v0_10fcc, %v1_10fcc
  %storemerge89 = select i1 %v5_10fd0, i32 %v1_10fcc, i32 %v0_10fcc
  store i32 %v2_10fe4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_10fec, i32* %ip.global-to-local, align 4
  store i32 %v2_10ff0, i32* %r1.global-to-local, align 4
  %v1_10ff4 = add i32 %storemerge89, 1
  store i32 %v1_10ff4, i32* %r0.global-to-local, align 4
  %v13_11000 = call i32 @select(i32 %v1_10ff4, %_TYPEDEF_fd_set* %tmp329, %_TYPEDEF_fd_set* %tmp328, %_TYPEDEF_fd_set* null, %timeval* %tmp331)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_11008 = call i32 @time(i32* null)
  store i32 ptrtoint (i32* @global_var_1ba14.175 to i32), i32* %lr.global-to-local, align 4
  store i32 %v2_11008, i32* @global_var_1ba14.175, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_1105c

dec_label_pc_11024:                               ; preds = %dec_label_pc_11080, %dec_label_pc_11168
  %v0_11038 = phi i32 [ %v3_11074, %dec_label_pc_11080 ], [ %v0_11024.pre, %dec_label_pc_11168 ]
  %v3_11024 = udiv i32 %v0_11038, 32
  %v3_11028 = mul nuw nsw i32 %v3_11024, 4
  store i32 %v2_10f60, i32* %lr.global-to-local, align 4
  %v2_11030 = add i32 %v3_11028, %v2_10f60
  store i32 %v2_11030, i32* %r3.global-to-local, align 4
  %v1_11034 = add i32 %v2_11030, -184
  %v2_11034 = inttoptr i32 %v1_11034 to i32*
  %v3_11034 = load i32, i32* %v2_11034, align 4
  %v1_11038 = urem i32 %v0_11038, 32
  store i32 %v1_11038, i32* %r1.global-to-local, align 4
  %v2_1103c = add nsw i32 %v1_11038, -1
  %v3_1103c = shl i32 1, %v2_1103c
  %v4_1103c = and i32 %v3_1103c, %v3_11034
  %v5_1103c = icmp ne i32 %v4_1103c, 0
  store i1 %v5_1103c, i1* %cpsr_c.global-to-local, align 1
  %v6_1103c = lshr i32 %v3_11034, %v1_11038
  store i32 %v6_1103c, i32* %r2.global-to-local, align 4
  %v1_11040 = urem i32 %v6_1103c, 2
  %v2_11040 = icmp eq i32 %v1_11040, 0
  store i1 %v2_11040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11040, label %dec_label_pc_11048, label %dec_label_pc_1121c.preheader

dec_label_pc_1121c.preheader:                     ; preds = %dec_label_pc_11024
  %v0_1121c113 = load i32, i32* @r5, align 4
  %v1_1121c114 = add i32 %v0_1121c113, 12
  %v2_1121c115 = inttoptr i32 %v1_1121c114 to i32*
  %v3_1121c116 = load i32, i32* %v2_1121c115, align 4
  store i32 %v3_1121c116, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11220112118 = icmp eq i32 %v3_1121c116, 0
  store i1 %v2_11220112118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11220112118, label %dec_label_pc_11048, label %dec_label_pc_11228.lr.ph

dec_label_pc_11048:                               ; preds = %dec_label_pc_1121c.loopexit, %dec_label_pc_11220.backedge, %dec_label_pc_1121c.preheader, %dec_label_pc_11024, %bb368, %dec_label_pc_11ae8, %dec_label_pc_1105c, %dec_label_pc_11b98, %dec_label_pc_11b2c
  %v3_11048 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_11048, i32* %r3.global-to-local, align 4
  %v1_1104c = add i32 %v3_11048, 1
  store i32 %v1_1104c, i32* %r2.global-to-local, align 4
  %v2_11050 = icmp ugt i32 %v1_1104c, 254
  store i1 %v2_11050, i1* %cpsr_c.global-to-local, align 1
  %v7_11050 = icmp eq i32 %v1_1104c, 255
  store i1 %v7_11050, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_1104c, i32* %stack_var_-52, align 4
  %v8_11058 = icmp sgt i32 %v1_1104c, 255
  br i1 %v8_11058, label %dec_label_pc_109f0, label %dec_label_pc_1105c

dec_label_pc_1105c:                               ; preds = %dec_label_pc_11048, %dec_label_pc_10fc4
  %v0_11068 = phi i32 [ %v1_1104c, %dec_label_pc_11048 ], [ 0, %dec_label_pc_10fc4 ]
  store i32 ptrtoint (i32* @global_var_1ba34.187 to i32), i32* %ip.global-to-local, align 4
  %v3_11060 = mul i32 %v0_11068, 256
  store i32 %v3_11060, i32* %r3.global-to-local, align 4
  %v2_11064 = load i32, i32* @global_var_1ba34.187, align 4
  store i32 %v2_11064, i32* %r1.global-to-local, align 4
  %v2_1106c = mul i32 %v0_11068, 288
  store i32 %v2_1106c, i32* %r2.global-to-local, align 4
  %v2_11070 = add i32 %v2_11064, %v2_1106c
  store i32 %v2_11070, i32* @r5, align 4
  %v1_11074 = add i32 %v2_11070, 4
  %v2_11074 = inttoptr i32 %v1_11074 to i32*
  %v3_11074 = load i32, i32* %v2_11074, align 4
  store i32 %v3_11074, i32* %r4.global-to-local, align 4
  %v2_11078 = icmp eq i32 %v3_11074, -1
  store i1 %v2_11078, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11078, label %dec_label_pc_11048, label %dec_label_pc_11080

dec_label_pc_11080:                               ; preds = %dec_label_pc_1105c
  %v3_11080 = udiv i32 %v3_11074, 32
  %v3_11084 = mul nuw nsw i32 %v3_11080, 4
  store i32 %v2_10f60, i32* %lr.global-to-local, align 4
  %v2_1108c = add i32 %v3_11084, %v2_10f60
  store i32 %v2_1108c, i32* %r3.global-to-local, align 4
  %v1_11090 = add i32 %v2_1108c, -312
  %v2_11090 = inttoptr i32 %v1_11090 to i32*
  %v3_11090 = load i32, i32* %v2_11090, align 4
  %v1_11094 = urem i32 %v3_11074, 32
  store i32 %v1_11094, i32* %r1.global-to-local, align 4
  %v2_11098 = add nsw i32 %v1_11094, -1
  %v3_11098 = shl i32 1, %v2_11098
  %v4_11098 = and i32 %v3_11090, %v3_11098
  %v5_11098 = icmp ne i32 %v4_11098, 0
  store i1 %v5_11098, i1* %cpsr_c.global-to-local, align 1
  %v6_11098 = lshr i32 %v3_11090, %v1_11094
  store i32 %v6_11098, i32* %r2.global-to-local, align 4
  %v1_1109c = urem i32 %v6_11098, 2
  %v2_1109c = icmp eq i32 %v1_1109c, 0
  store i1 %v2_1109c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1109c, label %dec_label_pc_11024, label %dec_label_pc_110a4

dec_label_pc_110a4:                               ; preds = %dec_label_pc_11080
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  store i32 %v2_1161c, i32* %r3.global-to-local, align 4
  store i32 %v2_11190, i32* %ip.global-to-local, align 4
  store i32 %v3_11074, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v8_110d4 = call i32 @getsockopt(i32 %v3_11074, i32 1, i32 4, i32* nonnull %stack_var_-48, i32* nonnull %stack_var_-56)
  %v3_110d8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_110d8, i32* %r3.global-to-local, align 4
  %v2_110dc = or i32 %v3_110d8, %v8_110d4
  store i32 %v2_110dc, i32* %r0.global-to-local, align 4
  %v4_110dc = icmp eq i32 %v2_110dc, 0
  store i1 %v4_110dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_110dc, label %dec_label_pc_110e4, label %dec_label_pc_11b98

dec_label_pc_110e4:                               ; preds = %dec_label_pc_110a4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_110e8 = load i32, i32* @r5, align 4
  %v2_110e8 = add i32 %v1_110e8, 12
  %v3_110e8 = inttoptr i32 %v2_110e8 to i32*
  store i32 2, i32* %v3_110e8, align 4
  %v0_110ec = call i32 @function_ef90()
  %v3_110f4 = load i8, i8* @global_var_1ba11.182, align 1
  %v4_110f4 = zext i8 %v3_110f4 to i32
  store i32 %v4_110f4, i32* %r2.global-to-local, align 4
  %v2_110f8 = load i8, i8* bitcast (i8** @global_var_1ba10.181 to i8*), align 4
  %v3_110f8 = zext i8 %v2_110f8 to i32
  %v4_110fc = mul nuw nsw i32 %v4_110f4, 256
  %v5_110fc = or i32 %v3_110f8, %v4_110fc
  store i32 %v5_110fc, i32* %r1.global-to-local, align 4
  %v2_11100 = urem i32 %v0_110ec, %v5_110fc
  store i32 ptrtoint (i32* @global_var_1b9e0.177 to i32), i32* %r3.global-to-local, align 4
  %v2_11108 = load i32, i32* @global_var_1b9e0.177, align 4
  store i32 %v2_11108, i32* %lr.global-to-local, align 4
  %v1_11110 = load i32, i32* @r6, align 4
  %v9_11110 = icmp eq i32 %v2_11108, %v1_11110
  store i1 %v9_11110, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v2_11100, i32* %r0.global-to-local, align 4
  %v7_11118 = icmp sgt i32 %v2_11108, %v1_11110
  br i1 %v7_11118, label %dec_label_pc_1111c, label %dec_label_pc_11d38

dec_label_pc_1111c:                               ; preds = %dec_label_pc_110e4
  %v2_11120 = load i32, i32* @global_var_1ba0c.179, align 4
  store i32 %v2_11120, i32* %r3.global-to-local, align 4
  store i32 %v1_11110, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1113c

dec_label_pc_1112c:                               ; preds = %dec_label_pc_11154, %dec_label_pc_1113c
  %v1_1112c = add i32 %v0_1112c, 1
  store i32 %v1_1112c, i32* %ip.global-to-local, align 4
  %v3_11130 = icmp uge i32 %v1_1112c, %v2_11108
  store i1 %v3_11130, i1* %cpsr_c.global-to-local, align 1
  %v9_11130 = icmp eq i32 %v1_1112c, %v2_11108
  store i1 %v9_11130, i1* %cpsr_z.global-to-local, align 1
  %v1_11134 = add i32 %v0_11134, 16
  store i32 %v1_11134, i32* %r3.global-to-local, align 4
  br i1 %v9_11130, label %dec_label_pc_11d38, label %dec_label_pc_1113c

dec_label_pc_1113c:                               ; preds = %dec_label_pc_1112c, %dec_label_pc_1111c
  %v0_1112c = phi i32 [ %v1_1112c, %dec_label_pc_1112c ], [ %v1_11110, %dec_label_pc_1111c ]
  %v0_11134 = phi i32 [ %v1_11134, %dec_label_pc_1112c ], [ %v2_11120, %dec_label_pc_1111c ]
  store i32 %v0_11134, i32* %r1.global-to-local, align 4
  %v1_11140 = add i32 %v0_11134, 9
  %v2_11140 = inttoptr i32 %v1_11140 to i8*
  %v3_11140 = load i8, i8* %v2_11140, align 1
  %v4_11140 = zext i8 %v3_11140 to i32
  store i32 %v4_11140, i32* %r2.global-to-local, align 4
  %v1_11144 = add i32 %v0_11134, 8
  %v2_11144 = inttoptr i32 %v1_11144 to i8*
  %v3_11144 = load i8, i8* %v2_11144, align 1
  %v4_11144 = zext i8 %v3_11144 to i32
  %v4_11148 = mul nuw nsw i32 %v4_11140, 256
  %v5_11148 = or i32 %v4_11144, %v4_11148
  store i32 %v5_11148, i32* %r3.global-to-local, align 4
  %v3_1114c = icmp uge i32 %v5_11148, %v2_11100
  store i1 %v3_1114c, i1* %cpsr_c.global-to-local, align 1
  %v9_1114c = icmp eq i32 %v5_11148, %v2_11100
  store i1 %v9_1114c, i1* %cpsr_z.global-to-local, align 1
  %v2_11150 = xor i1 %v9_1114c, true
  %v3_11150 = and i1 %v3_1114c, %v2_11150
  br i1 %v3_11150, label %dec_label_pc_1112c, label %dec_label_pc_11154

dec_label_pc_11154:                               ; preds = %dec_label_pc_1113c
  %v1_11154 = add i32 %v0_11134, 10
  %v2_11154 = inttoptr i32 %v1_11154 to i8*
  %v3_11154 = load i8, i8* %v2_11154, align 1
  %v4_11154 = zext i8 %v3_11154 to i32
  store i32 %v4_11154, i32* %r3.global-to-local, align 4
  %v1_11158 = add i32 %v0_11134, 11
  %v2_11158 = inttoptr i32 %v1_11158 to i8*
  %v3_11158 = load i8, i8* %v2_11158, align 1
  %v4_11158 = zext i8 %v3_11158 to i32
  store i32 %v4_11158, i32* %r2.global-to-local, align 4
  %v4_1115c = mul nuw nsw i32 %v4_11158, 256
  %v5_1115c = or i32 %v4_1115c, %v4_11154
  store i32 %v5_1115c, i32* %r3.global-to-local, align 4
  %v3_11160 = icmp uge i32 %v5_1115c, %v2_11100
  store i1 %v3_11160, i1* %cpsr_c.global-to-local, align 1
  %v9_11160 = icmp eq i32 %v5_1115c, %v2_11100
  store i1 %v9_11160, i1* %cpsr_z.global-to-local, align 1
  %v2_11164 = xor i1 %v3_11160, true
  %v3_11164 = or i1 %v9_11160, %v2_11164
  br i1 %v3_11164, label %dec_label_pc_1112c, label %dec_label_pc_11168

dec_label_pc_11168:                               ; preds = %dec_label_pc_11154, %dec_label_pc_11d38
  %v0_11170 = phi i32 [ 0, %dec_label_pc_11d38 ], [ %v0_11134, %dec_label_pc_11154 ]
  %v0_11168 = load i32, i32* @r5, align 4
  %v1_11168 = add i32 %v0_11168, 4
  %v2_11168 = inttoptr i32 %v1_11168 to i32*
  %v3_11168 = load i32, i32* %v2_11168, align 4
  store i32 %v3_11168, i32* %r4.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_11170 = inttoptr i32 %v0_11168 to i32*
  store i32 %v0_11170, i32* %v2_11170, align 4
  %v0_11174 = load i32, i32* %ip.global-to-local, align 4
  %v1_11174 = load i32, i32* @r5, align 4
  %v2_11174 = add i32 %v1_11174, 24
  %v3_11174 = inttoptr i32 %v2_11174 to i32*
  store i32 %v0_11174, i32* %v3_11174, align 4
  %v0_11024.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11024

dec_label_pc_1117c:                               ; preds = %dec_label_pc_113ec, %dec_label_pc_113c0, %dec_label_pc_11408
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_11180 = call i32 @function_11e4c(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_11188 = call i32 @function_11e4c(i32 33)
  store i32 %v2_11190, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v3_11198 = call i32 @function_11d68(i32 32, i32* nonnull %stack_var_-56)
  store i32 %v3_11198, i32* @r4, align 4
  store i32 %v2_11190, i32* %r1.global-to-local, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v3_111ac = call i32 @function_11d68(i32 33, i32* nonnull %stack_var_-56)
  %v3_111b0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_111ac, i32* @r6, align 4
  %v0_111b8 = load i32, i32* @r4, align 4
  store i32 %v0_111b8, i32* %r2.global-to-local, align 4
  %v1_111bc = add i32 %v3_111b0, -1
  store i32 %v1_111bc, i32* %r3.global-to-local, align 4
  %v0_111c0 = load i32, i32* @sb, align 4
  store i32 %v0_111c0, i32* %r0.global-to-local, align 4
  %v0_111c4 = load i32, i32* @r5, align 4
  %v1_111c4 = add i32 %v0_111c4, 24
  %v2_111c4 = inttoptr i32 %v1_111c4 to i32*
  %v3_111c4 = load i32, i32* %v2_111c4, align 4
  store i32 %v3_111c4, i32* %r1.global-to-local, align 4
  %v4_111c8 = call i32 @function_127f0(i32 %v0_111c0, i32 %v3_111c4, i32 %v0_111b8, i32 %v1_111bc)
  store i32 %v4_111c8, i32* %r0.global-to-local, align 4
  %v2_111cc = icmp eq i32 %v4_111c8, -1
  store i1 %v2_111cc, i1* %cpsr_c.global-to-local, align 1
  %v7_111cc = icmp eq i32 %v4_111c8, -1
  store i1 %v7_111cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111cc, label %dec_label_pc_111dc, label %dec_label_pc_11204

dec_label_pc_111dc:                               ; preds = %dec_label_pc_1117c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_111dc = load i32, i32* %stack_var_-56, align 4
  %v0_111e0 = load i32, i32* @r6, align 4
  store i32 %v0_111e0, i32* %r2.global-to-local, align 4
  %v1_111e4 = add i32 %v3_111dc, -1
  store i32 %v1_111e4, i32* %r3.global-to-local, align 4
  %v0_111e8 = load i32, i32* @sb, align 4
  store i32 %v0_111e8, i32* %r0.global-to-local, align 4
  %v0_111ec = load i32, i32* @r5, align 4
  %v1_111ec = add i32 %v0_111ec, 24
  %v2_111ec = inttoptr i32 %v1_111ec to i32*
  %v3_111ec = load i32, i32* %v2_111ec, align 4
  store i32 %v3_111ec, i32* %r1.global-to-local, align 4
  %v4_111f0 = call i32 @function_127f0(i32 %v0_111e8, i32 %v3_111ec, i32 %v0_111e0, i32 %v1_111e4)
  store i32 %v4_111f0, i32* %r0.global-to-local, align 4
  %v2_111f4 = icmp eq i32 %v4_111f0, -1
  store i1 %v2_111f4, i1* %cpsr_c.global-to-local, align 1
  %v7_111f4 = icmp eq i32 %v4_111f0, -1
  store i1 %v7_111f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111f4, label %dec_label_pc_11d40, label %dec_label_pc_11204

dec_label_pc_11204:                               ; preds = %dec_label_pc_111dc, %dec_label_pc_1117c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_11208 = call i32 @function_11d94(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_11210 = call i32 @function_11d94(i32 33)
  store i32 %v1_11210, i32* %r0.global-to-local, align 4
  %v0_11214 = load i32, i32* @r7, align 4
  %v3_11214 = icmp eq i32 %v0_11214, -1
  store i1 %v3_11214, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11214, label %dec_label_pc_1121c.loopexit, label %dec_label_pc_11424

dec_label_pc_1121c.loopexit:                      ; preds = %dec_label_pc_113b0.thread, %dec_label_pc_113b0, %dec_label_pc_11808, %dec_label_pc_112a0, %dec_label_pc_11204, %dec_label_pc_11a7c
  %v0_1121c = load i32, i32* @r5, align 4
  %v1_1121c = add i32 %v0_1121c, 12
  %v2_1121c = inttoptr i32 %v1_1121c to i32*
  %v3_1121c = load i32, i32* %v2_1121c, align 4
  store i32 %v3_1121c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11220112 = icmp eq i32 %v3_1121c, 0
  store i1 %v2_11220112, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11220112, label %dec_label_pc_11048, label %dec_label_pc_11228.lr.ph

dec_label_pc_11228.lr.ph:                         ; preds = %dec_label_pc_1121c.preheader, %dec_label_pc_1121c.loopexit
  %v0_11228145 = phi i32 [ %v0_1121c, %dec_label_pc_1121c.loopexit ], [ %v0_1121c113, %dec_label_pc_1121c.preheader ]
  br label %dec_label_pc_11228

dec_label_pc_11228:                               ; preds = %dec_label_pc_11220.backedge.thread, %dec_label_pc_11220.backedge, %dec_label_pc_11220.backedge.thread481, %dec_label_pc_11228.lr.ph
  %v0_11b60 = phi i32 [ %v0_11228145, %dec_label_pc_11228.lr.ph ], [ %v0_11228142, %dec_label_pc_11220.backedge ], [ %v0_112a0, %dec_label_pc_11220.backedge.thread ], [ %v0_112a0, %dec_label_pc_11220.backedge.thread481 ]
  %v1_11228 = add i32 %v0_11b60, 24
  %v2_11228 = inttoptr i32 %v1_11228 to i32*
  %v3_11228 = load i32, i32* %v2_11228, align 4
  store i32 %v3_11228, i32* %r3.global-to-local, align 4
  %v2_1122c = icmp ugt i32 %v3_11228, 255
  store i1 %v2_1122c, i1* %cpsr_c.global-to-local, align 1
  %v7_1122c = icmp eq i32 %v3_11228, 256
  store i1 %v7_1122c, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_11b60, 28
  store i32 %.pre, i32* @sb, align 4
  br i1 %v7_1122c, label %dec_label_pc_11b60, label %dec_label_pc_11238

dec_label_pc_11238:                               ; preds = %dec_label_pc_11228, %dec_label_pc_11b60
  store i32 %v2_10ca8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %v0_10ca8, align 4
  %v0_11244 = load i32, i32* @r5, align 4
  %v1_11244 = add i32 %v0_11244, 24
  %v2_11244 = inttoptr i32 %v1_11244 to i32*
  %v3_11244 = load i32, i32* %v2_11244, align 4
  store i32 %v3_11244, i32* %r2.global-to-local, align 4
  %v0_11248 = load i32, i32* @sb, align 4
  %v2_11248 = add i32 %v0_11248, %v3_11244
  store i32 %v2_11248, i32* @r4, align 4
  %v1_1124c = add i32 %v0_11244, 4
  %v2_1124c = inttoptr i32 %v1_1124c to i32*
  %v3_1124c = load i32, i32* %v2_1124c, align 4
  store i32 %v3_1124c, i32* %r0.global-to-local, align 4
  %v1_11250 = sub i32 256, %v3_11244
  store i32 %v1_11250, i32* %r2.global-to-local, align 4
  store i32 %v2_11248, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1125c = inttoptr i32 %v2_11248 to i32*
  %v5_1125c = call i32 @recv(i32 %v3_1124c, i32* %v4_1125c, i32 %v1_11250, i32 16384)
  store i32 %v5_1125c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11260 = icmp eq i32 %v5_1125c, 0
  store i1 %v2_11260, i1* %cpsr_z.global-to-local, align 1
  %tmp334 = icmp slt i32 %v5_1125c, 1
  br i1 %tmp334, label %dec_label_pc_11adc, label %dec_label_pc_11268

dec_label_pc_11268:                               ; preds = %dec_label_pc_11238
  %v0_11268 = load i32, i32* @r6, align 4
  store i32 %v0_11268, i32* %r2.global-to-local, align 4
  store i32 65, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11270

dec_label_pc_11270:                               ; preds = %bb336, %dec_label_pc_11268
  %v3_11278 = phi i32 [ %v1_1127c, %bb336 ], [ %v0_11268, %dec_label_pc_11268 ]
  %v1_11270 = load i32, i32* @r4, align 4
  %v2_11270 = add i32 %v1_11270, %v3_11278
  %v3_11270 = inttoptr i32 %v2_11270 to i8*
  %v4_11270 = load i8, i8* %v3_11270, align 1
  %v6_11270 = zext i8 %v4_11270 to i32
  store i32 %v6_11270, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11274 = icmp eq i8 %v4_11270, 0
  store i1 %v2_11274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11274, label %bb335, label %bb336

bb335:                                            ; preds = %dec_label_pc_11270
  %v1_11278 = load i32, i32* %r1.global-to-local, align 4
  %v2_11278 = trunc i32 %v1_11278 to i8
  store i8 %v2_11278, i8* %v3_11270, align 1
  %v0_1127c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb336

bb336:                                            ; preds = %dec_label_pc_11270, %bb335
  %v0_1127c = phi i32 [ %v3_11278, %dec_label_pc_11270 ], [ %v0_1127c.pre, %bb335 ]
  %v1_1127c = add i32 %v0_1127c, 1
  store i32 %v1_1127c, i32* %r2.global-to-local, align 4
  %v3_11280 = icmp uge i32 %v5_1125c, %v1_1127c
  store i1 %v3_11280, i1* %cpsr_c.global-to-local, align 1
  %v9_11280 = icmp eq i32 %v5_1125c, %v1_1127c
  store i1 %v9_11280, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11280, label %dec_label_pc_11288, label %dec_label_pc_11270

dec_label_pc_11288:                               ; preds = %bb336, %dec_label_pc_11ae0
  store i32 ptrtoint (i32* @global_var_1ba14.175 to i32), i32* %lr.global-to-local, align 4
  %v0_1128c = load i32, i32* @r5, align 4
  %v1_1128c = add i32 %v0_1128c, 24
  %v2_1128c = inttoptr i32 %v1_1128c to i32*
  %v3_1128c = load i32, i32* %v2_1128c, align 4
  %v2_11290 = load i32, i32* @global_var_1ba14.175, align 4
  store i32 %v2_11290, i32* %r3.global-to-local, align 4
  %v2_11294 = add i32 %v3_1128c, %v5_1125c
  store i32 %v2_11294, i32* %ip.global-to-local, align 4
  store i32 %v2_11294, i32* %v2_1128c, align 4
  %v0_1129c = load i32, i32* %r3.global-to-local, align 4
  %v1_1129c = load i32, i32* @r5, align 4
  %v2_1129c = add i32 %v1_1129c, 8
  %v3_1129c = inttoptr i32 %v2_1129c to i32*
  store i32 %v0_1129c, i32* %v3_1129c, align 4
  br label %dec_label_pc_112a0

dec_label_pc_112a0:                               ; preds = %dec_label_pc_11904, %dec_label_pc_11288
  %v0_112a0 = load i32, i32* @r5, align 4
  %v1_112a0 = add i32 %v0_112a0, 12
  %v2_112a0 = inttoptr i32 %v1_112a0 to i32*
  %v3_112a0 = load i32, i32* %v2_112a0, align 4
  store i32 %v3_112a0, i32* %r2.global-to-local, align 4
  %v1_112a4 = add i32 %v3_112a0, -2
  store i32 %v1_112a4, i32* %r3.global-to-local, align 4
  %v7_112a8 = icmp eq i32 %v1_112a4, 8
  store i1 %v7_112a8, i1* %cpsr_z.global-to-local, align 1
  %v5_112ac = and i32 %v1_112a4, 1073741824
  %v6_112ac = icmp ne i32 %v5_112ac, 0
  store i1 %v6_112ac, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_112a0, label %dec_label_pc_1121c.loopexit [
    i32 2, label %dec_label_pc_112d8
    i32 3, label %dec_label_pc_113c0
    i32 4, label %dec_label_pc_11468
    i32 5, label %dec_label_pc_11500
    i32 6, label %dec_label_pc_115b4
    i32 7, label %dec_label_pc_1171c
    i32 8, label %dec_label_pc_11668
    i32 9, label %dec_label_pc_11928
    i32 10, label %dec_label_pc_117d0
  ]

dec_label_pc_112d8:                               ; preds = %dec_label_pc_112a0
  %v1_112dc = add i32 %v0_112a0, 24
  %v2_112dc = inttoptr i32 %v1_112dc to i32*
  %v3_112dc = load i32, i32* %v2_112dc, align 4
  store i32 %v3_112dc, i32* %ip.global-to-local, align 4
  %v0_112e0 = load i32, i32* @sb, align 4
  store i32 %v0_112e0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 -3, i32* %sl.global-to-local, align 4
  store i32 -4, i32* @r8, align 4
  %v1_112f4 = add i32 %v0_112a0, 29
  store i32 %v1_112f4, i32* @r4, align 4
  %v3_112f8103 = icmp eq i32 %v3_112dc, 0
  store i1 %v3_112f8103, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_112f8103, i1* %cpsr_z.global-to-local, align 1
  %v6_112fc110 = icmp sgt i32 %v3_112dc, 0
  br i1 %v6_112fc110, label %dec_label_pc_11300.preheader, label %dec_label_pc_113b0.thread

dec_label_pc_113b0.thread:                        ; preds = %dec_label_pc_112d8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1121c.loopexit

dec_label_pc_112f8.loopexit:                      ; preds = %dec_label_pc_11318
  %v2_11320 = add i32 %v1_11320, 2
  store i32 %v2_11320, i32* @r6, align 4
  %v2_11324 = add i32 %v1_11324, 2
  store i32 %v2_11324, i32* @r4, align 4
  %v2_11328 = add i32 %v1_11328, 2
  store i32 %v2_11328, i32* @r7, align 4
  %v3_112f8 = icmp uge i32 %v2_11328, %v1_112f8
  store i1 %v3_112f8, i1* %cpsr_c.global-to-local, align 1
  %v9_112f8 = icmp eq i32 %v2_11328, %v1_112f8
  store i1 %v9_112f8, i1* %cpsr_z.global-to-local, align 1
  %v6_112fc = icmp slt i32 %v2_11328, %v1_112f8
  br i1 %v6_112fc, label %dec_label_pc_11300.preheader, label %dec_label_pc_113a0

dec_label_pc_11300.preheader:                     ; preds = %dec_label_pc_112d8, %dec_label_pc_112f8.loopexit
  %v6_113a8183 = phi i32 [ %v6_113a8184, %dec_label_pc_112f8.loopexit ], [ %v0_112a0, %dec_label_pc_112d8 ]
  %v1_11328173 = phi i32 [ %v2_11328, %dec_label_pc_112f8.loopexit ], [ 0, %dec_label_pc_112d8 ]
  %v1_11320171 = phi i32 [ %v2_11320, %dec_label_pc_112f8.loopexit ], [ %v0_112e0, %dec_label_pc_112d8 ]
  %v1_1130c169 = phi i32 [ %v1_112f8, %dec_label_pc_112f8.loopexit ], [ %v3_112dc, %dec_label_pc_112d8 ]
  %v0_11300167 = phi i32 [ %v2_11324, %dec_label_pc_112f8.loopexit ], [ %v1_112f4, %dec_label_pc_112d8 ]
  br label %dec_label_pc_11300

dec_label_pc_11300:                               ; preds = %dec_label_pc_11300.preheader, %dec_label_pc_11380
  %v6_113a8184 = phi i32 [ %v6_113a8183, %dec_label_pc_11300.preheader ], [ %v0_11388, %dec_label_pc_11380 ]
  %v1_11328 = phi i32 [ %v1_11328173, %dec_label_pc_11300.preheader ], [ %v1_1138c, %dec_label_pc_11380 ]
  %v1_11320 = phi i32 [ %v1_11320171, %dec_label_pc_11300.preheader ], [ %v1_11394, %dec_label_pc_11380 ]
  %v1_112f8 = phi i32 [ %v1_1130c169, %dec_label_pc_11300.preheader ], [ %v3_11388, %dec_label_pc_11380 ]
  %v1_11324 = phi i32 [ %v0_11300167, %dec_label_pc_11300.preheader ], [ %v1_11398, %dec_label_pc_11380 ]
  %v1_11300 = add i32 %v1_11324, -1
  %v2_11300 = inttoptr i32 %v1_11300 to i8*
  %v3_11300 = load i8, i8* %v2_11300, align 1
  %v4_11300 = zext i8 %v3_11300 to i32
  store i32 %v4_11300, i32* %r3.global-to-local, align 4
  %v2_11304 = icmp eq i8 %v3_11300, -1
  store i1 %v2_11304, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_11304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11304, label %dec_label_pc_1130c, label %dec_label_pc_113a0

dec_label_pc_1130c:                               ; preds = %dec_label_pc_11300
  %v0_1130c = load i32, i32* @sb, align 4
  %v2_1130c = add i32 %v0_1130c, %v1_112f8
  store i32 %v2_1130c, i32* %r2.global-to-local, align 4
  %v3_11310 = icmp uge i32 %v2_1130c, %v1_11324
  store i1 %v3_11310, i1* %cpsr_c.global-to-local, align 1
  %v9_11310 = icmp eq i32 %v2_1130c, %v1_11324
  store i1 %v9_11310, i1* %cpsr_z.global-to-local, align 1
  %v2_11314 = xor i1 %v3_11310, true
  %v3_11314 = or i1 %v9_11310, %v2_11314
  br i1 %v3_11314, label %dec_label_pc_113a0, label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %dec_label_pc_1130c
  %v1_11318 = inttoptr i32 %v1_11324 to i8*
  %v2_11318 = load i8, i8* %v1_11318, align 1
  %v3_11318 = zext i8 %v2_11318 to i32
  store i32 %v3_11318, i32* %r3.global-to-local, align 4
  %v2_1131c = icmp eq i8 %v2_11318, -1
  store i1 %v2_1131c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1131c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1131c, label %dec_label_pc_112f8.loopexit, label %dec_label_pc_11330

dec_label_pc_11330:                               ; preds = %dec_label_pc_11318
  %v2_11330 = icmp ugt i8 %v2_11318, -4
  store i1 %v2_11330, i1* %cpsr_c.global-to-local, align 1
  %v7_11330 = icmp eq i8 %v2_11318, -3
  store i1 %v7_11330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11330, label %dec_label_pc_119dc, label %dec_label_pc_11338

dec_label_pc_11338:                               ; preds = %dec_label_pc_11330
  %v1_11338 = add i32 %v1_11320, 2
  store i32 %v1_11338, i32* %r3.global-to-local, align 4
  %v3_1133c = icmp uge i32 %v2_1130c, %v1_11338
  store i1 %v3_1133c, i1* %cpsr_c.global-to-local, align 1
  %v9_1133c = icmp eq i32 %v2_1130c, %v1_11338
  store i1 %v9_1133c, i1* %cpsr_z.global-to-local, align 1
  %v2_11340 = xor i1 %v3_1133c, true
  %v3_11340 = or i1 %v9_1133c, %v2_11340
  br i1 %v3_11340, label %dec_label_pc_113a0, label %dec_label_pc_11344

dec_label_pc_11344:                               ; preds = %bb366, %dec_label_pc_11a30, %bb365, %dec_label_pc_11338
  %v0_11344 = load i32, i32* @r4, align 4
  %v1_11344 = inttoptr i32 %v0_11344 to i8*
  %v2_11344 = load i8, i8* %v1_11344, align 1
  %v3_11344 = zext i8 %v2_11344 to i32
  store i32 %v3_11344, i32* %r3.global-to-local, align 4
  %v2_11348 = icmp ugt i8 %v2_11344, -4
  store i1 %v2_11348, i1* %cpsr_c.global-to-local, align 1
  %v7_11348 = icmp eq i8 %v2_11344, -3
  store i1 %v7_11348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11348, label %bb337, label %dec_label_pc_11354

bb337:                                            ; preds = %dec_label_pc_11344
  %v1_1134c = load i32, i32* @r8, align 4
  %v2_1134c = trunc i32 %v1_1134c to i8
  store i8 %v2_1134c, i8* %v1_11344, align 1
  %v0_11350.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11350.pr, label %bb339, label %.dec_label_pc_11354_crit_edge

.dec_label_pc_11354_crit_edge:                    ; preds = %bb337
  %v0_11354.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11354

dec_label_pc_11354:                               ; preds = %.dec_label_pc_11354_crit_edge, %dec_label_pc_11344
  %v0_11354 = phi i32 [ %v0_11354.pre, %.dec_label_pc_11354_crit_edge ], [ %v3_11344, %dec_label_pc_11344 ]
  %v2_11354 = icmp ugt i32 %v0_11354, 250
  store i1 %v2_11354, i1* %cpsr_c.global-to-local, align 1
  %v7_11354 = icmp eq i32 %v0_11354, 251
  store i1 %v7_11354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11354, label %bb338, label %bb339

bb338:                                            ; preds = %dec_label_pc_11354
  %v1_11358 = load i32, i32* %sl.global-to-local, align 4
  %v2_11358 = trunc i32 %v1_11358 to i8
  %v3_11358 = load i32, i32* @r4, align 4
  %v4_11358 = inttoptr i32 %v3_11358 to i8*
  store i8 %v2_11358, i8* %v4_11358, align 1
  br label %bb339

bb339:                                            ; preds = %bb337, %dec_label_pc_11354, %bb338
  %v0_1135c = load i32, i32* @r4, align 4
  %v1_1135c = add i32 %v0_1135c, 1
  %v2_1135c = inttoptr i32 %v1_1135c to i8*
  %v3_1135c = load i8, i8* %v2_1135c, align 1
  %v4_1135c = zext i8 %v3_1135c to i32
  store i32 %v4_1135c, i32* %r3.global-to-local, align 4
  %v2_11360 = icmp ugt i8 %v3_1135c, -4
  store i1 %v2_11360, i1* %cpsr_c.global-to-local, align 1
  %v7_11360 = icmp eq i8 %v3_1135c, -3
  store i1 %v7_11360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11360, label %bb340, label %dec_label_pc_1136c

bb340:                                            ; preds = %bb339
  %v1_11364 = load i32, i32* @r8, align 4
  %v2_11364 = trunc i32 %v1_11364 to i8
  store i8 %v2_11364, i8* %v2_1135c, align 1
  %v0_11368.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11368.pr, label %bb342, label %.dec_label_pc_1136c_crit_edge

.dec_label_pc_1136c_crit_edge:                    ; preds = %bb340
  %v0_1136c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1136c

dec_label_pc_1136c:                               ; preds = %.dec_label_pc_1136c_crit_edge, %bb339
  %v0_1136c = phi i32 [ %v0_1136c.pre, %.dec_label_pc_1136c_crit_edge ], [ %v4_1135c, %bb339 ]
  %v2_1136c = icmp ugt i32 %v0_1136c, 250
  store i1 %v2_1136c, i1* %cpsr_c.global-to-local, align 1
  %v7_1136c = icmp eq i32 %v0_1136c, 251
  store i1 %v7_1136c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1136c, label %bb341, label %bb342

bb341:                                            ; preds = %dec_label_pc_1136c
  %v1_11370 = load i32, i32* %sl.global-to-local, align 4
  %v2_11370 = trunc i32 %v1_11370 to i8
  %v3_11370 = load i32, i32* @r4, align 4
  %v4_11370 = add i32 %v3_11370, 1
  %v5_11370 = inttoptr i32 %v4_11370 to i8*
  store i8 %v2_11370, i8* %v5_11370, align 1
  br label %bb342

bb342:                                            ; preds = %bb340, %dec_label_pc_1136c, %bb341
  %v0_11374 = load i32, i32* @r5, align 4
  %v1_11374 = add i32 %v0_11374, 4
  %v2_11374 = inttoptr i32 %v1_11374 to i32*
  %v3_11374 = load i32, i32* %v2_11374, align 4
  store i32 %v3_11374, i32* %r0.global-to-local, align 4
  %v0_11378 = load i32, i32* @r6, align 4
  br label %dec_label_pc_11380

dec_label_pc_11380:                               ; preds = %dec_label_pc_11b38, %bb342
  %storemerge7 = phi i32 [ %v2_119f4, %dec_label_pc_11b38 ], [ %v0_11378, %bb342 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_11b38 ], [ 3, %bb342 ]
  store i32 %storemerge7, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11384 = inttoptr i32 %storemerge7 to i32*
  %v5_11384 = call i32 @send(i32 16384, i32* %v4_11384, i32 %storemerge, i32 16384)
  store i32 %v5_11384, i32* %r0.global-to-local, align 4
  %v0_11388 = load i32, i32* @r5, align 4
  %v1_11388 = add i32 %v0_11388, 24
  %v2_11388 = inttoptr i32 %v1_11388 to i32*
  %v3_11388 = load i32, i32* %v2_11388, align 4
  store i32 %v3_11388, i32* %ip.global-to-local, align 4
  %v0_1138c = load i32, i32* @r7, align 4
  %v1_1138c = add i32 %v0_1138c, 3
  store i32 %v1_1138c, i32* @r7, align 4
  %v3_11390 = icmp uge i32 %v1_1138c, %v3_11388
  store i1 %v3_11390, i1* %cpsr_c.global-to-local, align 1
  %v9_11390 = icmp eq i32 %v1_1138c, %v3_11388
  store i1 %v9_11390, i1* %cpsr_z.global-to-local, align 1
  %v0_11394 = load i32, i32* @r6, align 4
  %v1_11394 = add i32 %v0_11394, 3
  store i32 %v1_11394, i32* @r6, align 4
  %v0_11398 = load i32, i32* @r4, align 4
  %v1_11398 = add i32 %v0_11398, 3
  store i32 %v1_11398, i32* @r4, align 4
  %v5_1139c = icmp slt i32 %v1_1138c, %v3_11388
  br i1 %v5_1139c, label %dec_label_pc_11300, label %dec_label_pc_113a0

dec_label_pc_113a0:                               ; preds = %dec_label_pc_112f8.loopexit, %dec_label_pc_11300, %dec_label_pc_11380, %dec_label_pc_11338, %dec_label_pc_1130c, %dec_label_pc_119dc.dec_label_pc_113a0.loopexit_crit_edge
  %v6_113a8 = phi i32 [ %v0_11a00, %dec_label_pc_119dc.dec_label_pc_113a0.loopexit_crit_edge ], [ %v6_113a8184, %dec_label_pc_11300 ], [ %v0_11388, %dec_label_pc_11380 ], [ %v6_113a8184, %dec_label_pc_11338 ], [ %v6_113a8184, %dec_label_pc_1130c ], [ %v6_113a8184, %dec_label_pc_112f8.loopexit ]
  %v0_113a0 = phi i32 [ %v0_113a0.pre.pre, %dec_label_pc_119dc.dec_label_pc_113a0.loopexit_crit_edge ], [ %v1_11328, %dec_label_pc_11300 ], [ %v1_1138c, %dec_label_pc_11380 ], [ %v1_11328, %dec_label_pc_11338 ], [ %v1_11328, %dec_label_pc_1130c ], [ %v2_11328, %dec_label_pc_112f8.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113a0 = icmp eq i32 %v0_113a0, 0
  store i1 %v2_113a0, i1* %cpsr_z.global-to-local, align 1
  %tmp343 = icmp slt i32 %v0_113a0, 1
  br i1 %tmp343, label %dec_label_pc_113b0, label %.thread217

.thread217:                                       ; preds = %dec_label_pc_113a0
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_113a8 = add i32 %v6_113a8, 12
  %v8_113a8 = inttoptr i32 %v7_113a8 to i32*
  store i32 3, i32* %v8_113a8, align 4
  br label %dec_label_pc_11904

dec_label_pc_113b0:                               ; preds = %dec_label_pc_113a0, %dec_label_pc_1197c, %dec_label_pc_11854, %dec_label_pc_11770, %dec_label_pc_116bc, %dec_label_pc_11608, %dec_label_pc_11554, %dec_label_pc_114bc, %dec_label_pc_11424
  %v0_113b0 = phi i32 [ %v1_11970, %dec_label_pc_1197c ], [ %v0_1184c, %dec_label_pc_11854 ], [ %v1_11764, %dec_label_pc_11770 ], [ %v1_116b0, %dec_label_pc_116bc ], [ %v1_115fc, %dec_label_pc_11608 ], [ %v1_11548, %dec_label_pc_11554 ], [ %v0_114bc, %dec_label_pc_114bc ], [ %v0_11424, %dec_label_pc_11424 ], [ %v0_113a0, %dec_label_pc_113a0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113b0 = icmp eq i32 %v0_113b0, 0
  store i1 %v2_113b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113b0, label %dec_label_pc_1121c.loopexit, label %dec_label_pc_113b8

dec_label_pc_113b8:                               ; preds = %dec_label_pc_113b0
  %v0_113b8 = load i32, i32* @r5, align 4
  %v1_113b8 = add i32 %v0_113b8, 24
  %v2_113b8 = inttoptr i32 %v1_113b8 to i32*
  %v3_113b8 = load i32, i32* %v2_113b8, align 4
  store i32 %v3_113b8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11904

dec_label_pc_113c0:                               ; preds = %dec_label_pc_112a0
  %v1_113c0 = add i32 %v0_112a0, 24
  %v2_113c0 = inttoptr i32 %v1_113c0 to i32*
  %v3_113c0 = load i32, i32* %v2_113c0, align 4
  store i32 %v3_113c0, i32* %r3.global-to-local, align 4
  %v1_113c4 = add i32 %v3_113c0, -1
  store i32 %v1_113c4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113c8 = icmp eq i32 %v1_113c4, 0
  store i1 %v2_113c8, i1* %cpsr_z.global-to-local, align 1
  %v5_113cc = icmp sgt i32 %v1_113c4, 0
  br i1 %v5_113cc, label %dec_label_pc_113f4, label %dec_label_pc_1117c

dec_label_pc_113d4:                               ; preds = %bb344
  %v2_113d4 = icmp ugt i8 %v3_113f8, 35
  store i1 %v2_113d4, i1* %cpsr_c.global-to-local, align 1
  %v7_113d4 = icmp eq i8 %v3_113f8, 36
  store i1 %v7_113d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113d4, label %dec_label_pc_11408, label %dec_label_pc_113dc

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113d4
  %v2_113dc = icmp ugt i8 %v3_113f8, 34
  store i1 %v2_113dc, i1* %cpsr_c.global-to-local, align 1
  %v7_113dc = icmp eq i8 %v3_113f8, 35
  store i1 %v7_113dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113dc, label %dec_label_pc_11408, label %dec_label_pc_113e4

dec_label_pc_113e4:                               ; preds = %dec_label_pc_113dc
  %v2_113e4 = icmp ugt i8 %v3_113f8, 36
  store i1 %v2_113e4, i1* %cpsr_c.global-to-local, align 1
  %v7_113e4 = icmp eq i8 %v3_113f8, 37
  store i1 %v7_113e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113e4, label %dec_label_pc_11408, label %dec_label_pc_113ec

dec_label_pc_113ec:                               ; preds = %dec_label_pc_113e4
  %v1_113ec = add i32 %v0_11408, -1
  store i32 %v1_113ec, i32* %r0.global-to-local, align 4
  %v2_113ec = icmp ne i32 %v0_11408, 0
  store i1 %v2_113ec, i1* %cpsr_c.global-to-local, align 1
  %v7_113ec = icmp eq i32 %v0_11408, 1
  store i1 %v7_113ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113ec, label %dec_label_pc_1117c, label %dec_label_pc_113f4

dec_label_pc_113f4:                               ; preds = %dec_label_pc_113c0, %dec_label_pc_113ec
  %v0_11408 = phi i32 [ %v1_113ec, %dec_label_pc_113ec ], [ %v1_113c4, %dec_label_pc_113c0 ]
  %v2_113f4 = add i32 %v0_11408, %v0_112a0
  store i32 %v2_113f4, i32* %r3.global-to-local, align 4
  %v1_113f8 = add i32 %v2_113f4, 28
  %v2_113f8 = inttoptr i32 %v1_113f8 to i8*
  %v3_113f8 = load i8, i8* %v2_113f8, align 1
  %v4_113f8 = zext i8 %v3_113f8 to i32
  store i32 %v4_113f8, i32* %r3.global-to-local, align 4
  %v2_113fc = icmp ugt i8 %v3_113f8, 61
  store i1 %v2_113fc, i1* %cpsr_c.global-to-local, align 1
  %v7_113fc = icmp eq i8 %v3_113f8, 62
  store i1 %v7_113fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113fc, label %dec_label_pc_11408, label %bb344

bb344:                                            ; preds = %dec_label_pc_113f4
  %v3_11400 = icmp ugt i8 %v3_113f8, 57
  store i1 %v3_11400, i1* %cpsr_c.global-to-local, align 1
  %v8_11400 = icmp eq i8 %v3_113f8, 58
  store i1 %v8_11400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11400, label %dec_label_pc_11408, label %dec_label_pc_113d4

dec_label_pc_11408:                               ; preds = %dec_label_pc_113f4, %bb344, %dec_label_pc_113e4, %dec_label_pc_113dc, %dec_label_pc_113d4
  %v1_11408 = add i32 %v0_11408, 1
  store i32 %v1_11408, i32* @r7, align 4
  %v2_1140c = icmp eq i32 %v1_11408, -1
  store i1 %v2_1140c, i1* %cpsr_c.global-to-local, align 1
  %v7_1140c = icmp eq i32 %v0_11408, -2
  store i1 %v7_1140c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1140c, label %dec_label_pc_1117c, label %dec_label_pc_11414

dec_label_pc_11414:                               ; preds = %dec_label_pc_11408
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_11418 = call i32 @function_11d94(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_11420 = call i32 @function_11d94(i32 33)
  store i32 %v1_11420, i32* %r0.global-to-local, align 4
  %v0_11424.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11424

dec_label_pc_11424:                               ; preds = %dec_label_pc_11204, %dec_label_pc_11414
  %v0_11424 = phi i32 [ %v0_11214, %dec_label_pc_11204 ], [ %v0_11424.pre, %dec_label_pc_11414 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11424 = icmp eq i32 %v0_11424, 0
  store i1 %v2_11424, i1* %cpsr_z.global-to-local, align 1
  %tmp345 = icmp slt i32 %v0_11424, 1
  br i1 %tmp345, label %dec_label_pc_113b0, label %dec_label_pc_1142c

dec_label_pc_1142c:                               ; preds = %dec_label_pc_11424
  %v0_1142c = load i32, i32* @r5, align 4
  %v1_1142c = inttoptr i32 %v0_1142c to i32*
  %v2_1142c = load i32, i32* %v1_1142c, align 4
  store i32 %v2_1142c, i32* %r3.global-to-local, align 4
  %v1_11430 = add i32 %v0_1142c, 4
  %v2_11430 = inttoptr i32 %v1_11430 to i32*
  %v3_11430 = load i32, i32* %v2_11430, align 4
  store i32 %v3_11430, i32* %r0.global-to-local, align 4
  %v1_11434 = add i32 %v2_1142c, 12
  %v2_11434 = inttoptr i32 %v1_11434 to i8*
  %v3_11434 = load i8, i8* %v2_11434, align 1
  %v4_11434 = zext i8 %v3_11434 to i32
  store i32 %v4_11434, i32* %r2.global-to-local, align 4
  %v1_11438 = inttoptr i32 %v2_1142c to i32*
  %v2_11438 = load i32, i32* %v1_11438, align 4
  store i32 %v2_11438, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11440 = inttoptr i32 %v2_11438 to i32*
  %v5_11440 = call i32 @send(i32 %v3_11430, i32* %v4_11440, i32 %v4_11434, i32 16384)
  store i32 %v5_11440, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_11448 = load i32, i32* @r5, align 4
  %v1_11448 = add i32 %v0_11448, 4
  %v2_11448 = inttoptr i32 %v1_11448 to i32*
  %v3_11448 = load i32, i32* %v2_11448, align 4
  store i32 %v3_11448, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13570.555 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_11454 = call i32 @send(i32 %v3_11448, i32* bitcast ([3 x i8]* @global_var_13570.555 to i32*), i32 2, i32 16384)
  store i32 %v5_11454, i32* %r0.global-to-local, align 4
  %v0_11458 = load i32, i32* @r5, align 4
  %v1_11458 = add i32 %v0_11458, 24
  %v2_11458 = inttoptr i32 %v1_11458 to i32*
  %v3_11458 = load i32, i32* %v2_11458, align 4
  store i32 %v3_11458, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_11460 = add i32 %v0_11458, 12
  %v3_11460 = inttoptr i32 %v2_11460 to i32*
  store i32 4, i32* %v3_11460, align 4
  br label %dec_label_pc_11904

dec_label_pc_11468:                               ; preds = %dec_label_pc_112a0
  %v1_11468 = add i32 %v0_112a0, 24
  %v2_11468 = inttoptr i32 %v1_11468 to i32*
  %v3_11468 = load i32, i32* %v2_11468, align 4
  store i32 %v3_11468, i32* %r3.global-to-local, align 4
  %v1_1146c = add i32 %v3_11468, -1
  store i32 %v1_1146c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11470 = icmp eq i32 %v1_1146c, 0
  store i1 %v2_11470, i1* %cpsr_z.global-to-local, align 1
  %v5_11474 = icmp sgt i32 %v1_1146c, 0
  br i1 %v5_11474, label %dec_label_pc_11494, label %dec_label_pc_11a3c

dec_label_pc_1147c:                               ; preds = %bb346
  %v2_1147c = icmp ugt i8 %v3_11498, 35
  store i1 %v2_1147c, i1* %cpsr_c.global-to-local, align 1
  %v7_1147c = icmp eq i8 %v3_11498, 36
  store i1 %v7_1147c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1147c, label %dec_label_pc_114a8, label %dec_label_pc_11484

dec_label_pc_11484:                               ; preds = %dec_label_pc_1147c
  %v2_11484 = icmp ugt i8 %v3_11498, 34
  store i1 %v2_11484, i1* %cpsr_c.global-to-local, align 1
  %v7_11484 = icmp eq i8 %v3_11498, 35
  store i1 %v7_11484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11484, label %dec_label_pc_114a8, label %dec_label_pc_1148c

dec_label_pc_1148c:                               ; preds = %dec_label_pc_11484
  %v1_1148c = add i32 %v0_114a8, -1
  store i32 %v1_1148c, i32* %r0.global-to-local, align 4
  %v2_1148c = icmp ne i32 %v0_114a8, 0
  store i1 %v2_1148c, i1* %cpsr_c.global-to-local, align 1
  %v7_1148c = icmp eq i32 %v0_114a8, 1
  store i1 %v7_1148c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1148c, label %dec_label_pc_11a3c, label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %dec_label_pc_11468, %dec_label_pc_1148c
  %v0_114a8 = phi i32 [ %v1_1148c, %dec_label_pc_1148c ], [ %v1_1146c, %dec_label_pc_11468 ]
  %v2_11494 = add i32 %v0_114a8, %v0_112a0
  store i32 %v2_11494, i32* %r3.global-to-local, align 4
  %v1_11498 = add i32 %v2_11494, 28
  %v2_11498 = inttoptr i32 %v1_11498 to i8*
  %v3_11498 = load i8, i8* %v2_11498, align 1
  %v4_11498 = zext i8 %v3_11498 to i32
  store i32 %v4_11498, i32* %r3.global-to-local, align 4
  %v2_1149c = icmp ugt i8 %v3_11498, 61
  store i1 %v2_1149c, i1* %cpsr_c.global-to-local, align 1
  %v7_1149c = icmp eq i8 %v3_11498, 62
  store i1 %v7_1149c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1149c, label %dec_label_pc_114a8, label %bb346

bb346:                                            ; preds = %dec_label_pc_11494
  %v3_114a0 = icmp ugt i8 %v3_11498, 57
  store i1 %v3_114a0, i1* %cpsr_c.global-to-local, align 1
  %v8_114a0 = icmp eq i8 %v3_11498, 58
  store i1 %v8_114a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_114a0, label %dec_label_pc_114a8, label %dec_label_pc_1147c

dec_label_pc_114a8:                               ; preds = %dec_label_pc_11494, %bb346, %dec_label_pc_11484, %dec_label_pc_1147c
  %v1_114a8 = add i32 %v0_114a8, 1
  store i32 %v1_114a8, i32* @r7, align 4
  %v2_114ac = icmp eq i32 %v1_114a8, -1
  store i1 %v2_114ac, i1* %cpsr_c.global-to-local, align 1
  %v7_114ac = icmp eq i32 %v0_114a8, -2
  store i1 %v7_114ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114ac, label %dec_label_pc_11a3c, label %dec_label_pc_114b4

dec_label_pc_114b4:                               ; preds = %dec_label_pc_114a8
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_114b8 = call i32 @function_11d94(i32 31)
  store i32 %v1_114b8, i32* %r0.global-to-local, align 4
  %v0_114bc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_114bc

dec_label_pc_114bc:                               ; preds = %dec_label_pc_11a7c, %dec_label_pc_114b4
  %v0_114bc = phi i32 [ %v0_11a84, %dec_label_pc_11a7c ], [ %v0_114bc.pre, %dec_label_pc_114b4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114bc = icmp eq i32 %v0_114bc, 0
  store i1 %v2_114bc, i1* %cpsr_z.global-to-local, align 1
  %tmp347 = icmp slt i32 %v0_114bc, 1
  br i1 %tmp347, label %dec_label_pc_113b0, label %dec_label_pc_114c4

dec_label_pc_114c4:                               ; preds = %dec_label_pc_114bc
  %v0_114c4 = load i32, i32* @r5, align 4
  %v1_114c4 = inttoptr i32 %v0_114c4 to i32*
  %v2_114c4 = load i32, i32* %v1_114c4, align 4
  store i32 %v2_114c4, i32* %r3.global-to-local, align 4
  %v1_114c8 = add i32 %v0_114c4, 4
  %v2_114c8 = inttoptr i32 %v1_114c8 to i32*
  %v3_114c8 = load i32, i32* %v2_114c8, align 4
  store i32 %v3_114c8, i32* %r0.global-to-local, align 4
  %v1_114cc = add i32 %v2_114c4, 13
  %v2_114cc = inttoptr i32 %v1_114cc to i8*
  %v3_114cc = load i8, i8* %v2_114cc, align 1
  %v4_114cc = zext i8 %v3_114cc to i32
  store i32 %v4_114cc, i32* %r2.global-to-local, align 4
  %v1_114d0 = add i32 %v2_114c4, 4
  %v2_114d0 = inttoptr i32 %v1_114d0 to i32*
  %v3_114d0 = load i32, i32* %v2_114d0, align 4
  store i32 %v3_114d0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_114d8 = inttoptr i32 %v3_114d0 to i32*
  %v5_114d8 = call i32 @send(i32 %v3_114c8, i32* %v4_114d8, i32 %v4_114cc, i32 16384)
  store i32 %v5_114d8, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_114e0 = load i32, i32* @r5, align 4
  %v1_114e0 = add i32 %v0_114e0, 4
  %v2_114e0 = inttoptr i32 %v1_114e0 to i32*
  %v3_114e0 = load i32, i32* %v2_114e0, align 4
  store i32 %v3_114e0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13570.555 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_114ec = call i32 @send(i32 %v3_114e0, i32* bitcast ([3 x i8]* @global_var_13570.555 to i32*), i32 2, i32 16384)
  store i32 %v5_114ec, i32* %r0.global-to-local, align 4
  %v0_114f0 = load i32, i32* @r5, align 4
  %v1_114f0 = add i32 %v0_114f0, 24
  %v2_114f0 = inttoptr i32 %v1_114f0 to i32*
  %v3_114f0 = load i32, i32* %v2_114f0, align 4
  store i32 %v3_114f0, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_114f8 = add i32 %v0_114f0, 12
  %v3_114f8 = inttoptr i32 %v2_114f8 to i32*
  store i32 5, i32* %v3_114f8, align 4
  br label %dec_label_pc_11904

dec_label_pc_11500:                               ; preds = %dec_label_pc_112a0
  %v1_11500 = add i32 %v0_112a0, 24
  %v2_11500 = inttoptr i32 %v1_11500 to i32*
  %v3_11500 = load i32, i32* %v2_11500, align 4
  store i32 %v3_11500, i32* %ip.global-to-local, align 4
  %v1_11504 = add i32 %v3_11500, -1
  store i32 %v1_11504, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11508 = icmp eq i32 %v1_11504, 0
  store i1 %v2_11508, i1* %cpsr_z.global-to-local, align 1
  %v5_1150c = icmp sgt i32 %v1_11504, 0
  br i1 %v5_1150c, label %dec_label_pc_11534, label %dec_label_pc_11220.backedge.thread

dec_label_pc_11514:                               ; preds = %bb348
  %v2_11514 = icmp ugt i8 %v3_11538, 35
  store i1 %v2_11514, i1* %cpsr_c.global-to-local, align 1
  %v7_11514 = icmp eq i8 %v3_11538, 36
  store i1 %v7_11514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11514, label %dec_label_pc_11548, label %dec_label_pc_1151c

dec_label_pc_1151c:                               ; preds = %dec_label_pc_11514
  %v2_1151c = icmp ugt i8 %v3_11538, 34
  store i1 %v2_1151c, i1* %cpsr_c.global-to-local, align 1
  %v7_1151c = icmp eq i8 %v3_11538, 35
  store i1 %v7_1151c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1151c, label %dec_label_pc_11548, label %dec_label_pc_11524

dec_label_pc_11524:                               ; preds = %dec_label_pc_1151c
  %v2_11524 = icmp ugt i8 %v3_11538, 36
  store i1 %v2_11524, i1* %cpsr_c.global-to-local, align 1
  %v7_11524 = icmp eq i8 %v3_11538, 37
  store i1 %v7_11524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11524, label %dec_label_pc_11548, label %dec_label_pc_1152c

dec_label_pc_1152c:                               ; preds = %dec_label_pc_11524
  %v1_1152c = add i32 %v0_11548, -1
  store i32 %v1_1152c, i32* %r0.global-to-local, align 4
  %v2_1152c = icmp ne i32 %v0_11548, 0
  store i1 %v2_1152c, i1* %cpsr_c.global-to-local, align 1
  %v7_1152c = icmp eq i32 %v0_11548, 1
  store i1 %v7_1152c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1152c, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_11534

dec_label_pc_11534:                               ; preds = %dec_label_pc_11500, %dec_label_pc_1152c
  %v0_11548 = phi i32 [ %v1_1152c, %dec_label_pc_1152c ], [ %v1_11504, %dec_label_pc_11500 ]
  %v2_11534 = add i32 %v0_11548, %v0_112a0
  store i32 %v2_11534, i32* %r3.global-to-local, align 4
  %v1_11538 = add i32 %v2_11534, 28
  %v2_11538 = inttoptr i32 %v1_11538 to i8*
  %v3_11538 = load i8, i8* %v2_11538, align 1
  %v4_11538 = zext i8 %v3_11538 to i32
  store i32 %v4_11538, i32* %r3.global-to-local, align 4
  %v2_1153c = icmp ugt i8 %v3_11538, 61
  store i1 %v2_1153c, i1* %cpsr_c.global-to-local, align 1
  %v7_1153c = icmp eq i8 %v3_11538, 62
  store i1 %v7_1153c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1153c, label %dec_label_pc_11548, label %bb348

bb348:                                            ; preds = %dec_label_pc_11534
  %v3_11540 = icmp ugt i8 %v3_11538, 57
  store i1 %v3_11540, i1* %cpsr_c.global-to-local, align 1
  %v8_11540 = icmp eq i8 %v3_11538, 58
  store i1 %v8_11540, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11540, label %dec_label_pc_11548, label %dec_label_pc_11514

dec_label_pc_11548:                               ; preds = %dec_label_pc_11534, %bb348, %dec_label_pc_11524, %dec_label_pc_1151c, %dec_label_pc_11514
  %v1_11548 = add i32 %v0_11548, 1
  store i32 %v1_11548, i32* @r7, align 4
  %v2_1154c = icmp eq i32 %v1_11548, -1
  store i1 %v2_1154c, i1* %cpsr_c.global-to-local, align 1
  %v7_1154c = icmp eq i32 %v0_11548, -2
  store i1 %v7_1154c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1154c, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_11554

dec_label_pc_11554:                               ; preds = %dec_label_pc_11548
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11554 = icmp eq i32 %v1_11548, 0
  store i1 %v2_11554, i1* %cpsr_z.global-to-local, align 1
  %tmp349 = icmp slt i32 %v1_11548, 1
  br i1 %tmp349, label %dec_label_pc_113b0, label %dec_label_pc_1155c

dec_label_pc_1155c:                               ; preds = %dec_label_pc_11554
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_11560 = call i32 @function_11e4c(i32 21)
  store i32 %v2_11190, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_11570 = call i32 @function_11d68(i32 21, i32* nonnull %stack_var_-56)
  store i32 %v3_11570, i32* %r0.global-to-local, align 4
  %v3_11574 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_11574, i32* %r2.global-to-local, align 4
  store i32 %v3_11570, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11580 = load i32, i32* @r5, align 4
  %v1_11580 = add i32 %v0_11580, 4
  %v2_11580 = inttoptr i32 %v1_11580 to i32*
  %v3_11580 = load i32, i32* %v2_11580, align 4
  store i32 %v3_11580, i32* %r0.global-to-local, align 4
  %v4_11584 = inttoptr i32 %v3_11570 to i32*
  %v5_11584 = call i32 @send(i32 %v3_11580, i32* %v4_11584, i32 %v3_11574, i32 16384)
  store i32 %v5_11584, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13570.555 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11594 = load i32, i32* @r5, align 4
  %v1_11594 = add i32 %v0_11594, 4
  %v2_11594 = inttoptr i32 %v1_11594 to i32*
  %v3_11594 = load i32, i32* %v2_11594, align 4
  store i32 %v3_11594, i32* %r0.global-to-local, align 4
  %v5_11598 = call i32 @send(i32 %v3_11594, i32* bitcast ([3 x i8]* @global_var_13570.555 to i32*), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_115a0 = call i32 @function_11d94(i32 21)
  store i32 %v1_115a0, i32* %r0.global-to-local, align 4
  %v0_115a4 = load i32, i32* @r5, align 4
  %v1_115a4 = add i32 %v0_115a4, 24
  %v2_115a4 = inttoptr i32 %v1_115a4 to i32*
  %v3_115a4 = load i32, i32* %v2_115a4, align 4
  store i32 %v3_115a4, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_115ac = add i32 %v0_115a4, 12
  %v3_115ac = inttoptr i32 %v2_115ac to i32*
  store i32 6, i32* %v3_115ac, align 4
  br label %dec_label_pc_11904

dec_label_pc_115b4:                               ; preds = %dec_label_pc_112a0
  %v1_115b4 = add i32 %v0_112a0, 24
  %v2_115b4 = inttoptr i32 %v1_115b4 to i32*
  %v3_115b4 = load i32, i32* %v2_115b4, align 4
  store i32 %v3_115b4, i32* %ip.global-to-local, align 4
  %v1_115b8 = add i32 %v3_115b4, -1
  store i32 %v1_115b8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_115bc = icmp eq i32 %v1_115b8, 0
  store i1 %v2_115bc, i1* %cpsr_z.global-to-local, align 1
  %v5_115c0 = icmp sgt i32 %v1_115b8, 0
  br i1 %v5_115c0, label %dec_label_pc_115e8, label %dec_label_pc_11220.backedge.thread

dec_label_pc_115c8:                               ; preds = %bb350
  %v2_115c8 = icmp ugt i8 %v3_115ec, 35
  store i1 %v2_115c8, i1* %cpsr_c.global-to-local, align 1
  %v7_115c8 = icmp eq i8 %v3_115ec, 36
  store i1 %v7_115c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115c8, label %dec_label_pc_115fc, label %dec_label_pc_115d0

dec_label_pc_115d0:                               ; preds = %dec_label_pc_115c8
  %v2_115d0 = icmp ugt i8 %v3_115ec, 34
  store i1 %v2_115d0, i1* %cpsr_c.global-to-local, align 1
  %v7_115d0 = icmp eq i8 %v3_115ec, 35
  store i1 %v7_115d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115d0, label %dec_label_pc_115fc, label %dec_label_pc_115d8

dec_label_pc_115d8:                               ; preds = %dec_label_pc_115d0
  %v2_115d8 = icmp ugt i8 %v3_115ec, 36
  store i1 %v2_115d8, i1* %cpsr_c.global-to-local, align 1
  %v7_115d8 = icmp eq i8 %v3_115ec, 37
  store i1 %v7_115d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115d8, label %dec_label_pc_115fc, label %dec_label_pc_115e0

dec_label_pc_115e0:                               ; preds = %dec_label_pc_115d8
  %v1_115e0 = add i32 %v0_115fc, -1
  store i32 %v1_115e0, i32* %r0.global-to-local, align 4
  %v2_115e0 = icmp ne i32 %v0_115fc, 0
  store i1 %v2_115e0, i1* %cpsr_c.global-to-local, align 1
  %v7_115e0 = icmp eq i32 %v0_115fc, 1
  store i1 %v7_115e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115e0, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_115e8

dec_label_pc_115e8:                               ; preds = %dec_label_pc_115b4, %dec_label_pc_115e0
  %v0_115fc = phi i32 [ %v1_115e0, %dec_label_pc_115e0 ], [ %v1_115b8, %dec_label_pc_115b4 ]
  %v2_115e8 = add i32 %v0_115fc, %v0_112a0
  store i32 %v2_115e8, i32* %r3.global-to-local, align 4
  %v1_115ec = add i32 %v2_115e8, 28
  %v2_115ec = inttoptr i32 %v1_115ec to i8*
  %v3_115ec = load i8, i8* %v2_115ec, align 1
  %v4_115ec = zext i8 %v3_115ec to i32
  store i32 %v4_115ec, i32* %r3.global-to-local, align 4
  %v2_115f0 = icmp ugt i8 %v3_115ec, 61
  store i1 %v2_115f0, i1* %cpsr_c.global-to-local, align 1
  %v7_115f0 = icmp eq i8 %v3_115ec, 62
  store i1 %v7_115f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115f0, label %dec_label_pc_115fc, label %bb350

bb350:                                            ; preds = %dec_label_pc_115e8
  %v3_115f4 = icmp ugt i8 %v3_115ec, 57
  store i1 %v3_115f4, i1* %cpsr_c.global-to-local, align 1
  %v8_115f4 = icmp eq i8 %v3_115ec, 58
  store i1 %v8_115f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_115f4, label %dec_label_pc_115fc, label %dec_label_pc_115c8

dec_label_pc_115fc:                               ; preds = %dec_label_pc_115e8, %bb350, %dec_label_pc_115d8, %dec_label_pc_115d0, %dec_label_pc_115c8
  %v1_115fc = add i32 %v0_115fc, 1
  store i32 %v1_115fc, i32* @r7, align 4
  %v2_11600 = icmp eq i32 %v1_115fc, -1
  store i1 %v2_11600, i1* %cpsr_c.global-to-local, align 1
  %v7_11600 = icmp eq i32 %v0_115fc, -2
  store i1 %v7_11600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11600, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_11608

dec_label_pc_11608:                               ; preds = %dec_label_pc_115fc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11608 = icmp eq i32 %v1_115fc, 0
  store i1 %v2_11608, i1* %cpsr_z.global-to-local, align 1
  %tmp351 = icmp slt i32 %v1_115fc, 1
  br i1 %tmp351, label %dec_label_pc_113b0, label %dec_label_pc_11610

dec_label_pc_11610:                               ; preds = %dec_label_pc_11608
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11614 = call i32 @function_11e4c(i32 22)
  store i32 %v2_1161c, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_11624 = call i32 @function_11d68(i32 22, i32* nonnull %stack_var_-48)
  store i32 %v3_11624, i32* %r0.global-to-local, align 4
  %v3_11628 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_11628, i32* %r2.global-to-local, align 4
  store i32 %v3_11624, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11634 = load i32, i32* @r5, align 4
  %v1_11634 = add i32 %v0_11634, 4
  %v2_11634 = inttoptr i32 %v1_11634 to i32*
  %v3_11634 = load i32, i32* %v2_11634, align 4
  store i32 %v3_11634, i32* %r0.global-to-local, align 4
  %v4_11638 = inttoptr i32 %v3_11624 to i32*
  %v5_11638 = call i32 @send(i32 %v3_11634, i32* %v4_11638, i32 %v3_11628, i32 16384)
  store i32 %v5_11638, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13570.555 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11648 = load i32, i32* @r5, align 4
  %v1_11648 = add i32 %v0_11648, 4
  %v2_11648 = inttoptr i32 %v1_11648 to i32*
  %v3_11648 = load i32, i32* %v2_11648, align 4
  store i32 %v3_11648, i32* %r0.global-to-local, align 4
  %v5_1164c = call i32 @send(i32 %v3_11648, i32* bitcast ([3 x i8]* @global_var_13570.555 to i32*), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_11654 = call i32 @function_11d94(i32 22)
  store i32 %v1_11654, i32* %r0.global-to-local, align 4
  %v0_11658 = load i32, i32* @r5, align 4
  %v1_11658 = add i32 %v0_11658, 24
  %v2_11658 = inttoptr i32 %v1_11658 to i32*
  %v3_11658 = load i32, i32* %v2_11658, align 4
  store i32 %v3_11658, i32* %ip.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v2_11660 = add i32 %v0_11658, 12
  %v3_11660 = inttoptr i32 %v2_11660 to i32*
  store i32 7, i32* %v3_11660, align 4
  br label %dec_label_pc_11904

dec_label_pc_11668:                               ; preds = %dec_label_pc_112a0
  %v1_11668 = add i32 %v0_112a0, 24
  %v2_11668 = inttoptr i32 %v1_11668 to i32*
  %v3_11668 = load i32, i32* %v2_11668, align 4
  store i32 %v3_11668, i32* %ip.global-to-local, align 4
  %v1_1166c = add i32 %v3_11668, -1
  store i32 %v1_1166c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11670 = icmp eq i32 %v1_1166c, 0
  store i1 %v2_11670, i1* %cpsr_z.global-to-local, align 1
  %v5_11674 = icmp sgt i32 %v1_1166c, 0
  br i1 %v5_11674, label %dec_label_pc_1169c, label %dec_label_pc_11220.backedge.thread

dec_label_pc_1167c:                               ; preds = %bb352
  %v2_1167c = icmp ugt i8 %v3_116a0, 35
  store i1 %v2_1167c, i1* %cpsr_c.global-to-local, align 1
  %v7_1167c = icmp eq i8 %v3_116a0, 36
  store i1 %v7_1167c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1167c, label %dec_label_pc_116b0, label %dec_label_pc_11684

dec_label_pc_11684:                               ; preds = %dec_label_pc_1167c
  %v2_11684 = icmp ugt i8 %v3_116a0, 34
  store i1 %v2_11684, i1* %cpsr_c.global-to-local, align 1
  %v7_11684 = icmp eq i8 %v3_116a0, 35
  store i1 %v7_11684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11684, label %dec_label_pc_116b0, label %dec_label_pc_1168c

dec_label_pc_1168c:                               ; preds = %dec_label_pc_11684
  %v2_1168c = icmp ugt i8 %v3_116a0, 36
  store i1 %v2_1168c, i1* %cpsr_c.global-to-local, align 1
  %v7_1168c = icmp eq i8 %v3_116a0, 37
  store i1 %v7_1168c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1168c, label %dec_label_pc_116b0, label %dec_label_pc_11694

dec_label_pc_11694:                               ; preds = %dec_label_pc_1168c
  %v1_11694 = add i32 %v0_116b0, -1
  store i32 %v1_11694, i32* %r0.global-to-local, align 4
  %v2_11694 = icmp ne i32 %v0_116b0, 0
  store i1 %v2_11694, i1* %cpsr_c.global-to-local, align 1
  %v7_11694 = icmp eq i32 %v0_116b0, 1
  store i1 %v7_11694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11694, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_1169c

dec_label_pc_1169c:                               ; preds = %dec_label_pc_11668, %dec_label_pc_11694
  %v0_116b0 = phi i32 [ %v1_11694, %dec_label_pc_11694 ], [ %v1_1166c, %dec_label_pc_11668 ]
  %v2_1169c = add i32 %v0_116b0, %v0_112a0
  store i32 %v2_1169c, i32* %r3.global-to-local, align 4
  %v1_116a0 = add i32 %v2_1169c, 28
  %v2_116a0 = inttoptr i32 %v1_116a0 to i8*
  %v3_116a0 = load i8, i8* %v2_116a0, align 1
  %v4_116a0 = zext i8 %v3_116a0 to i32
  store i32 %v4_116a0, i32* %r3.global-to-local, align 4
  %v2_116a4 = icmp ugt i8 %v3_116a0, 61
  store i1 %v2_116a4, i1* %cpsr_c.global-to-local, align 1
  %v7_116a4 = icmp eq i8 %v3_116a0, 62
  store i1 %v7_116a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116a4, label %dec_label_pc_116b0, label %bb352

bb352:                                            ; preds = %dec_label_pc_1169c
  %v3_116a8 = icmp ugt i8 %v3_116a0, 57
  store i1 %v3_116a8, i1* %cpsr_c.global-to-local, align 1
  %v8_116a8 = icmp eq i8 %v3_116a0, 58
  store i1 %v8_116a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_116a8, label %dec_label_pc_116b0, label %dec_label_pc_1167c

dec_label_pc_116b0:                               ; preds = %dec_label_pc_1169c, %bb352, %dec_label_pc_1168c, %dec_label_pc_11684, %dec_label_pc_1167c
  %v1_116b0 = add i32 %v0_116b0, 1
  store i32 %v1_116b0, i32* @r7, align 4
  %v2_116b4 = icmp eq i32 %v1_116b0, -1
  store i1 %v2_116b4, i1* %cpsr_c.global-to-local, align 1
  %v7_116b4 = icmp eq i32 %v0_116b0, -2
  store i1 %v7_116b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_116b4, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_116bc

dec_label_pc_116bc:                               ; preds = %dec_label_pc_116b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116bc = icmp eq i32 %v1_116b0, 0
  store i1 %v2_116bc, i1* %cpsr_z.global-to-local, align 1
  %tmp353 = icmp slt i32 %v1_116b0, 1
  br i1 %tmp353, label %dec_label_pc_113b0, label %dec_label_pc_116c4

dec_label_pc_116c4:                               ; preds = %dec_label_pc_116bc
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_116c8 = call i32 @function_11e4c(i32 23)
  store i32 %v2_11190, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_116d8 = call i32 @function_11d68(i32 23, i32* nonnull %stack_var_-56)
  store i32 %v3_116d8, i32* %r0.global-to-local, align 4
  %v3_116dc = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_116dc, i32* %r2.global-to-local, align 4
  store i32 %v3_116d8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_116e8 = load i32, i32* @r5, align 4
  %v1_116e8 = add i32 %v0_116e8, 4
  %v2_116e8 = inttoptr i32 %v1_116e8 to i32*
  %v3_116e8 = load i32, i32* %v2_116e8, align 4
  store i32 %v3_116e8, i32* %r0.global-to-local, align 4
  %v4_116ec = inttoptr i32 %v3_116d8 to i32*
  %v5_116ec = call i32 @send(i32 %v3_116e8, i32* %v4_116ec, i32 %v3_116dc, i32 16384)
  store i32 %v5_116ec, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13570.555 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_116fc = load i32, i32* @r5, align 4
  %v1_116fc = add i32 %v0_116fc, 4
  %v2_116fc = inttoptr i32 %v1_116fc to i32*
  %v3_116fc = load i32, i32* %v2_116fc, align 4
  store i32 %v3_116fc, i32* %r0.global-to-local, align 4
  %v5_11700 = call i32 @send(i32 %v3_116fc, i32* bitcast ([3 x i8]* @global_var_13570.555 to i32*), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_11708 = call i32 @function_11d94(i32 23)
  store i32 %v1_11708, i32* %r0.global-to-local, align 4
  %v0_1170c = load i32, i32* @r5, align 4
  %v1_1170c = add i32 %v0_1170c, 24
  %v2_1170c = inttoptr i32 %v1_1170c to i32*
  %v3_1170c = load i32, i32* %v2_1170c, align 4
  store i32 %v3_1170c, i32* %ip.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_11714 = add i32 %v0_1170c, 12
  %v3_11714 = inttoptr i32 %v2_11714 to i32*
  store i32 9, i32* %v3_11714, align 4
  br label %dec_label_pc_11904

dec_label_pc_1171c:                               ; preds = %dec_label_pc_112a0
  %v1_1171c = add i32 %v0_112a0, 24
  %v2_1171c = inttoptr i32 %v1_1171c to i32*
  %v3_1171c = load i32, i32* %v2_1171c, align 4
  store i32 %v3_1171c, i32* %ip.global-to-local, align 4
  %v1_11720 = add i32 %v3_1171c, -1
  store i32 %v1_11720, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11724 = icmp eq i32 %v1_11720, 0
  store i1 %v2_11724, i1* %cpsr_z.global-to-local, align 1
  %v5_11728 = icmp sgt i32 %v1_11720, 0
  br i1 %v5_11728, label %dec_label_pc_11750, label %dec_label_pc_11220.backedge.thread

dec_label_pc_11730:                               ; preds = %bb354
  %v2_11730 = icmp ugt i8 %v3_11754, 35
  store i1 %v2_11730, i1* %cpsr_c.global-to-local, align 1
  %v7_11730 = icmp eq i8 %v3_11754, 36
  store i1 %v7_11730, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11730, label %dec_label_pc_11764, label %dec_label_pc_11738

dec_label_pc_11738:                               ; preds = %dec_label_pc_11730
  %v2_11738 = icmp ugt i8 %v3_11754, 34
  store i1 %v2_11738, i1* %cpsr_c.global-to-local, align 1
  %v7_11738 = icmp eq i8 %v3_11754, 35
  store i1 %v7_11738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11738, label %dec_label_pc_11764, label %dec_label_pc_11740

dec_label_pc_11740:                               ; preds = %dec_label_pc_11738
  %v2_11740 = icmp ugt i8 %v3_11754, 36
  store i1 %v2_11740, i1* %cpsr_c.global-to-local, align 1
  %v7_11740 = icmp eq i8 %v3_11754, 37
  store i1 %v7_11740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11740, label %dec_label_pc_11764, label %dec_label_pc_11748

dec_label_pc_11748:                               ; preds = %dec_label_pc_11740
  %v1_11748 = add i32 %v0_11764, -1
  store i32 %v1_11748, i32* %r0.global-to-local, align 4
  %v2_11748 = icmp ne i32 %v0_11764, 0
  store i1 %v2_11748, i1* %cpsr_c.global-to-local, align 1
  %v7_11748 = icmp eq i32 %v0_11764, 1
  store i1 %v7_11748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11748, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_11750

dec_label_pc_11750:                               ; preds = %dec_label_pc_1171c, %dec_label_pc_11748
  %v0_11764 = phi i32 [ %v1_11748, %dec_label_pc_11748 ], [ %v1_11720, %dec_label_pc_1171c ]
  %v2_11750 = add i32 %v0_11764, %v0_112a0
  store i32 %v2_11750, i32* %r3.global-to-local, align 4
  %v1_11754 = add i32 %v2_11750, 28
  %v2_11754 = inttoptr i32 %v1_11754 to i8*
  %v3_11754 = load i8, i8* %v2_11754, align 1
  %v4_11754 = zext i8 %v3_11754 to i32
  store i32 %v4_11754, i32* %r3.global-to-local, align 4
  %v2_11758 = icmp ugt i8 %v3_11754, 61
  store i1 %v2_11758, i1* %cpsr_c.global-to-local, align 1
  %v7_11758 = icmp eq i8 %v3_11754, 62
  store i1 %v7_11758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11758, label %dec_label_pc_11764, label %bb354

bb354:                                            ; preds = %dec_label_pc_11750
  %v3_1175c = icmp ugt i8 %v3_11754, 57
  store i1 %v3_1175c, i1* %cpsr_c.global-to-local, align 1
  %v8_1175c = icmp eq i8 %v3_11754, 58
  store i1 %v8_1175c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1175c, label %dec_label_pc_11764, label %dec_label_pc_11730

dec_label_pc_11764:                               ; preds = %dec_label_pc_11750, %bb354, %dec_label_pc_11740, %dec_label_pc_11738, %dec_label_pc_11730
  %v1_11764 = add i32 %v0_11764, 1
  store i32 %v1_11764, i32* @r7, align 4
  %v2_11768 = icmp eq i32 %v1_11764, -1
  store i1 %v2_11768, i1* %cpsr_c.global-to-local, align 1
  %v7_11768 = icmp eq i32 %v0_11764, -2
  store i1 %v7_11768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11768, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_11770

dec_label_pc_11770:                               ; preds = %dec_label_pc_11764
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11770 = icmp eq i32 %v1_11764, 0
  store i1 %v2_11770, i1* %cpsr_z.global-to-local, align 1
  %tmp355 = icmp slt i32 %v1_11764, 1
  br i1 %tmp355, label %dec_label_pc_113b0, label %dec_label_pc_11778

dec_label_pc_11778:                               ; preds = %dec_label_pc_11770
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1177c = call i32 @function_11e4c(i32 20)
  store i32 %v2_1161c, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_1178c = call i32 @function_11d68(i32 20, i32* nonnull %stack_var_-48)
  store i32 %v3_1178c, i32* %r0.global-to-local, align 4
  %v3_11790 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_11790, i32* %r2.global-to-local, align 4
  store i32 %v3_1178c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1179c = load i32, i32* @r5, align 4
  %v1_1179c = add i32 %v0_1179c, 4
  %v2_1179c = inttoptr i32 %v1_1179c to i32*
  %v3_1179c = load i32, i32* %v2_1179c, align 4
  store i32 %v3_1179c, i32* %r0.global-to-local, align 4
  %v4_117a0 = inttoptr i32 %v3_1178c to i32*
  %v5_117a0 = call i32 @send(i32 %v3_1179c, i32* %v4_117a0, i32 %v3_11790, i32 16384)
  store i32 %v5_117a0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13570.555 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_117b0 = load i32, i32* @r5, align 4
  %v1_117b0 = add i32 %v0_117b0, 4
  %v2_117b0 = inttoptr i32 %v1_117b0 to i32*
  %v3_117b0 = load i32, i32* %v2_117b0, align 4
  store i32 %v3_117b0, i32* %r0.global-to-local, align 4
  %v5_117b4 = call i32 @send(i32 %v3_117b0, i32* bitcast ([3 x i8]* @global_var_13570.555 to i32*), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_117bc = call i32 @function_11d94(i32 20)
  store i32 %v1_117bc, i32* %r0.global-to-local, align 4
  %v0_117c0 = load i32, i32* @r5, align 4
  %v1_117c0 = add i32 %v0_117c0, 24
  %v2_117c0 = inttoptr i32 %v1_117c0 to i32*
  %v3_117c0 = load i32, i32* %v2_117c0, align 4
  store i32 %v3_117c0, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_117c8 = add i32 %v0_117c0, 12
  %v3_117c8 = inttoptr i32 %v2_117c8 to i32*
  store i32 8, i32* %v3_117c8, align 4
  br label %dec_label_pc_11904

dec_label_pc_117d0:                               ; preds = %dec_label_pc_112a0
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_117d4 = call i32 @function_11e4c(i32 26)
  store i32 %v2_11190, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_117e4 = call i32 @function_11d68(i32 26, i32* nonnull %stack_var_-56)
  %v3_117e8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_117e4, i32* %r2.global-to-local, align 4
  %v1_117f0 = add i32 %v3_117e8, -1
  store i32 %v1_117f0, i32* %r3.global-to-local, align 4
  %v0_117f4 = load i32, i32* @sb, align 4
  store i32 %v0_117f4, i32* %r0.global-to-local, align 4
  %v0_117f8 = load i32, i32* @r5, align 4
  %v1_117f8 = add i32 %v0_117f8, 24
  %v2_117f8 = inttoptr i32 %v1_117f8 to i32*
  %v3_117f8 = load i32, i32* %v2_117f8, align 4
  store i32 %v3_117f8, i32* %r1.global-to-local, align 4
  %v4_117fc = call i32 @function_127f0(i32 %v0_117f4, i32 %v3_117f8, i32 %v3_117e4, i32 %v1_117f0)
  %v3_11800 = icmp eq i32 %v4_117fc, -1
  store i1 %v3_11800, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11800, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_1180c = call i32 @function_11d94(i32 26)
  br i1 %v3_11800, label %dec_label_pc_11808, label %dec_label_pc_11a90

dec_label_pc_11808:                               ; preds = %dec_label_pc_117d0
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11814 = call i32 @function_11e4c(i32 25)
  store i32 %v2_11190, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_11824 = call i32 @function_11d68(i32 25, i32* nonnull %stack_var_-56)
  store i32 %v3_11824, i32* %r0.global-to-local, align 4
  %v3_11828 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_11824, i32* %r2.global-to-local, align 4
  %v1_11830 = add i32 %v3_11828, -1
  store i32 %v1_11830, i32* %r3.global-to-local, align 4
  %v0_11834 = load i32, i32* @r5, align 4
  %v1_11834 = add i32 %v0_11834, 24
  %v2_11834 = inttoptr i32 %v1_11834 to i32*
  %v3_11834 = load i32, i32* %v2_11834, align 4
  store i32 %v3_11834, i32* %r1.global-to-local, align 4
  %v0_11838 = load i32, i32* @sb, align 4
  store i32 %v0_11838, i32* %r0.global-to-local, align 4
  %v4_1183c = call i32 @function_127f0(i32 %v0_11838, i32 %v3_11834, i32 %v3_11824, i32 %v1_11830)
  store i32 %v4_1183c, i32* @r7, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_11848 = call i32 @function_11d94(i32 25)
  store i32 %v1_11848, i32* %r0.global-to-local, align 4
  %v0_1184c = load i32, i32* @r7, align 4
  %v2_1184c = icmp eq i32 %v0_1184c, -1
  store i1 %v2_1184c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1184c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1184c, label %dec_label_pc_1121c.loopexit, label %dec_label_pc_11854

dec_label_pc_11854:                               ; preds = %dec_label_pc_11808
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11854 = icmp eq i32 %v0_1184c, 0
  store i1 %v2_11854, i1* %cpsr_z.global-to-local, align 1
  %tmp356 = icmp slt i32 %v0_1184c, 1
  br i1 %tmp356, label %dec_label_pc_113b0, label %dec_label_pc_1185c

dec_label_pc_1185c:                               ; preds = %dec_label_pc_11854
  %v0_1185c = load i32, i32* @r5, align 4
  %v1_1185c = add i32 %v0_1185c, 21
  %v2_1185c = inttoptr i32 %v1_1185c to i8*
  %v3_1185c = load i8, i8* %v2_1185c, align 1
  %v4_1185c = zext i8 %v3_1185c to i32
  store i32 %v4_1185c, i32* %r3.global-to-local, align 4
  %v1_11860 = add i32 %v0_1185c, 20
  %v2_11860 = inttoptr i32 %v1_11860 to i8*
  %v3_11860 = load i8, i8* %v2_11860, align 1
  %v4_11860 = zext i8 %v3_11860 to i32
  store i32 %v4_11860, i32* %r2.global-to-local, align 4
  %v1_11864 = add i32 %v0_1185c, 16
  %v2_11864 = inttoptr i32 %v1_11864 to i32*
  %v3_11864 = load i32, i32* %v2_11864, align 4
  store i32 %v3_11864, i32* %r1.global-to-local, align 4
  %v4_11868 = mul nuw nsw i32 %v4_1185c, 256
  %v5_11868 = or i32 %v4_11860, %v4_11868
  store i32 %v5_11868, i32* %r2.global-to-local, align 4
  %v1_1186c = and i32 %v4_11860, 128
  %v2_1186c = icmp ne i32 %v1_1186c, 0
  store i1 %v2_1186c, i1* %cpsr_c.global-to-local, align 1
  store i32 %v4_1185c, i32* %r3.global-to-local, align 4
  store i32 %v3_11864, i32* %stack_var_-48, align 4
  store i32 %v5_11868, i32* %stack_var_-38, align 4
  %v1_1187c = inttoptr i32 %v0_1185c to i32*
  %v2_1187c = load i32, i32* %v1_1187c, align 4
  store i32 %v2_1187c, i32* @fp, align 4
  %v0_11880 = call i32 @fork()
  store i32 %v0_11880, i32* %r0.global-to-local, align 4
  %v2_11884 = icmp eq i32 %v0_11880, -1
  %.372 = zext i1 %v2_11884 to i32
  store i32 %.372, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11890 = icmp eq i32 %v0_11880, 0
  store i1 %v2_11890, i1* %cpsr_z.global-to-local, align 1
  %tmp359 = icmp slt i32 %v0_11880, 1
  br i1 %tmp359, label %bb360, label %.thread78

.thread78:                                        ; preds = %dec_label_pc_1185c
  store i32 1, i32* %sl.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_118e8

bb360:                                            ; preds = %dec_label_pc_1185c
  store i32 %.372, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1189c = icmp eq i1 %v2_11884, false
  store i1 %v2_1189c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1189c, label %dec_label_pc_118a4, label %dec_label_pc_118e8

dec_label_pc_118a4:                               ; preds = %bb360
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_118b0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_118b0, i32* %r0.global-to-local, align 4
  %v2_118b4 = icmp eq i32 %v3_118b0, -1
  store i1 %v2_118b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_118b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_118b0, i32* @r6, align 4
  br i1 %v2_118b4, label %dec_label_pc_11d14, label %dec_label_pc_118c0

dec_label_pc_118c0:                               ; preds = %dec_label_pc_118a4
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_118c4 = call i32 @function_11e4c(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_118cc = call i32 @function_11e4c(i32 19)
  %v0_118d0 = load i32, i32* @sl, align 4
  store i32 %v0_118d0, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_118d8 = inttoptr i32 %v0_118d0 to i32*
  %v3_118d8 = call i32 @function_11d68(i32 18, i32* %v2_118d8)
  store i32 %v3_118d8, i32* %r0.global-to-local, align 4
  %v1_118dc = inttoptr i32 %v3_118d8 to i8*
  %v2_118dc = call i32 @function_f134(i8* %v1_118dc)
  store i32 %v2_118dc, i32* %r0.global-to-local, align 4
  store i32 %v2_118dc, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_118e0 = icmp eq i32 %v2_118dc, 0
  store i1 %v3_118e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_118e0, label %dec_label_pc_118e8, label %dec_label_pc_11be4

dec_label_pc_118e8:                               ; preds = %.thread78, %dec_label_pc_118c0, %bb360
  %v0_118e8 = load i32, i32* @r5, align 4
  %v1_118e8 = add i32 %v0_118e8, 4
  %v2_118e8 = inttoptr i32 %v1_118e8 to i32*
  %v3_118e8 = load i32, i32* %v2_118e8, align 4
  store i32 %v3_118e8, i32* %r0.global-to-local, align 4
  %v1_118ec = call i32 @close(i32 %v3_118e8)
  store i32 %v1_118ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_118f8 = load i32, i32* @r5, align 4
  %v1_118f8 = add i32 %v0_118f8, 24
  %v2_118f8 = inttoptr i32 %v1_118f8 to i32*
  %v3_118f8 = load i32, i32* %v2_118f8, align 4
  store i32 %v3_118f8, i32* %ip.global-to-local, align 4
  %v2_118fc = add i32 %v0_118f8, 4
  %v3_118fc = inttoptr i32 %v2_118fc to i32*
  store i32 -1, i32* %v3_118fc, align 4
  %v0_11900 = load i32, i32* %r2.global-to-local, align 4
  %v1_11900 = load i32, i32* @r5, align 4
  %v2_11900 = add i32 %v1_11900, 12
  %v3_11900 = inttoptr i32 %v2_11900 to i32*
  store i32 %v0_11900, i32* %v3_11900, align 4
  br label %dec_label_pc_11904

dec_label_pc_11904:                               ; preds = %.thread217, %dec_label_pc_11984, %dec_label_pc_11b84, %dec_label_pc_11ac0, %dec_label_pc_11778, %dec_label_pc_116c4, %dec_label_pc_11610, %dec_label_pc_1155c, %dec_label_pc_114c4, %dec_label_pc_1142c, %dec_label_pc_113b8, %dec_label_pc_118e8
  %v0_11904 = load i32, i32* %ip.global-to-local, align 4
  %v1_11904 = load i32, i32* @r7, align 4
  %v2_11904 = sub i32 %v0_11904, %v1_11904
  %v3_11904 = icmp uge i32 %v0_11904, %v1_11904
  store i1 %v3_11904, i1* %cpsr_c.global-to-local, align 1
  %v4_11904 = xor i32 %v1_11904, %v0_11904
  %v5_11904 = xor i32 %v2_11904, %v0_11904
  %v6_11904 = and i32 %v5_11904, %v4_11904
  %v7_11904 = icmp slt i32 %v6_11904, 0
  %v8_11904 = icmp slt i32 %v2_11904, 0
  %v9_11904 = icmp eq i32 %v0_11904, %v1_11904
  store i1 %v9_11904, i1* %cpsr_z.global-to-local, align 1
  %v2_11908 = xor i1 %v8_11904, %v7_11904
  %v0_11904.v1_11904 = select i1 %v2_11908, i32 %v0_11904, i32 %v1_11904
  store i32 %v0_11904.v1_11904, i32* %r1.global-to-local, align 4
  %v2_11910 = sub i32 %v0_11904, %v0_11904.v1_11904
  store i32 %v2_11910, i32* %r2.global-to-local, align 4
  %v1_11914 = load i32, i32* @r5, align 4
  %v2_11914 = add i32 %v1_11914, 24
  %v3_11914 = inttoptr i32 %v2_11914 to i32*
  store i32 %v2_11910, i32* %v3_11914, align 4
  %v0_11918 = load i32, i32* @sb, align 4
  %v1_11918 = load i32, i32* %r1.global-to-local, align 4
  %v2_11918 = add i32 %v1_11918, %v0_11918
  store i32 %v2_11918, i32* %r1.global-to-local, align 4
  store i32 %v0_11918, i32* %r0.global-to-local, align 4
  %v3_11920 = inttoptr i32 %v0_11918 to i32*
  %v4_11920 = inttoptr i32 %v2_11918 to i32*
  %v5_11920 = call i32* @memmove(i32* %v3_11920, i32* %v4_11920, i32 %v2_11910)
  %v7_11920 = ptrtoint i32* %v5_11920 to i32
  store i32 %v7_11920, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_112a0

dec_label_pc_11928:                               ; preds = %dec_label_pc_112a0
  %v1_11928 = add i32 %v0_112a0, 24
  %v2_11928 = inttoptr i32 %v1_11928 to i32*
  %v3_11928 = load i32, i32* %v2_11928, align 4
  store i32 %v3_11928, i32* %ip.global-to-local, align 4
  %v1_1192c = add i32 %v3_11928, -1
  store i32 %v1_1192c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11930 = icmp eq i32 %v1_1192c, 0
  store i1 %v2_11930, i1* %cpsr_z.global-to-local, align 1
  %v5_11934 = icmp sgt i32 %v1_1192c, 0
  br i1 %v5_11934, label %dec_label_pc_1195c, label %dec_label_pc_11220.backedge.thread

dec_label_pc_1193c:                               ; preds = %bb363
  %v2_1193c = icmp ugt i8 %v3_11960, 35
  store i1 %v2_1193c, i1* %cpsr_c.global-to-local, align 1
  %v7_1193c = icmp eq i8 %v3_11960, 36
  store i1 %v7_1193c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1193c, label %dec_label_pc_11970, label %dec_label_pc_11944

dec_label_pc_11944:                               ; preds = %dec_label_pc_1193c
  %v2_11944 = icmp ugt i8 %v3_11960, 34
  store i1 %v2_11944, i1* %cpsr_c.global-to-local, align 1
  %v7_11944 = icmp eq i8 %v3_11960, 35
  store i1 %v7_11944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11944, label %dec_label_pc_11970, label %dec_label_pc_1194c

dec_label_pc_1194c:                               ; preds = %dec_label_pc_11944
  %v2_1194c = icmp ugt i8 %v3_11960, 36
  store i1 %v2_1194c, i1* %cpsr_c.global-to-local, align 1
  %v7_1194c = icmp eq i8 %v3_11960, 37
  store i1 %v7_1194c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1194c, label %dec_label_pc_11970, label %dec_label_pc_11954

dec_label_pc_11954:                               ; preds = %dec_label_pc_1194c
  %v1_11954 = add i32 %v0_11970, -1
  store i32 %v1_11954, i32* %r0.global-to-local, align 4
  %v2_11954 = icmp ne i32 %v0_11970, 0
  store i1 %v2_11954, i1* %cpsr_c.global-to-local, align 1
  %v7_11954 = icmp eq i32 %v0_11970, 1
  store i1 %v7_11954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11954, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_1195c

dec_label_pc_1195c:                               ; preds = %dec_label_pc_11928, %dec_label_pc_11954
  %v0_11970 = phi i32 [ %v1_11954, %dec_label_pc_11954 ], [ %v1_1192c, %dec_label_pc_11928 ]
  %v2_1195c = add i32 %v0_11970, %v0_112a0
  store i32 %v2_1195c, i32* %r3.global-to-local, align 4
  %v1_11960 = add i32 %v2_1195c, 28
  %v2_11960 = inttoptr i32 %v1_11960 to i8*
  %v3_11960 = load i8, i8* %v2_11960, align 1
  %v4_11960 = zext i8 %v3_11960 to i32
  store i32 %v4_11960, i32* %r3.global-to-local, align 4
  %v2_11964 = icmp ugt i8 %v3_11960, 61
  store i1 %v2_11964, i1* %cpsr_c.global-to-local, align 1
  %v7_11964 = icmp eq i8 %v3_11960, 62
  store i1 %v7_11964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11964, label %dec_label_pc_11970, label %bb363

bb363:                                            ; preds = %dec_label_pc_1195c
  %v3_11968 = icmp ugt i8 %v3_11960, 57
  store i1 %v3_11968, i1* %cpsr_c.global-to-local, align 1
  %v8_11968 = icmp eq i8 %v3_11960, 58
  store i1 %v8_11968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11968, label %dec_label_pc_11970, label %dec_label_pc_1193c

dec_label_pc_11970:                               ; preds = %dec_label_pc_1195c, %bb363, %dec_label_pc_1194c, %dec_label_pc_11944, %dec_label_pc_1193c
  %v1_11970 = add i32 %v0_11970, 1
  store i32 %v1_11970, i32* @r7, align 4
  %v2_11974 = icmp eq i32 %v1_11970, -1
  store i1 %v2_11974, i1* %cpsr_c.global-to-local, align 1
  %v7_11974 = icmp eq i32 %v0_11970, -2
  store i1 %v7_11974, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11974, label %dec_label_pc_11220.backedge.thread481, label %dec_label_pc_1197c

dec_label_pc_1197c:                               ; preds = %dec_label_pc_11970
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1197c = icmp eq i32 %v1_11970, 0
  store i1 %v2_1197c, i1* %cpsr_z.global-to-local, align 1
  %tmp364 = icmp slt i32 %v1_11970, 1
  br i1 %tmp364, label %dec_label_pc_113b0, label %dec_label_pc_11984

dec_label_pc_11984:                               ; preds = %dec_label_pc_1197c
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_11988 = call i32 @function_11e4c(i32 24)
  store i32 %v2_11190, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_11998 = call i32 @function_11d68(i32 24, i32* nonnull %stack_var_-56)
  store i32 %v3_11998, i32* %r0.global-to-local, align 4
  %v3_1199c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1199c, i32* %r2.global-to-local, align 4
  store i32 %v3_11998, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119a8 = load i32, i32* @r5, align 4
  %v1_119a8 = add i32 %v0_119a8, 4
  %v2_119a8 = inttoptr i32 %v1_119a8 to i32*
  %v3_119a8 = load i32, i32* %v2_119a8, align 4
  store i32 %v3_119a8, i32* %r0.global-to-local, align 4
  %v4_119ac = inttoptr i32 %v3_11998 to i32*
  %v5_119ac = call i32 @send(i32 %v3_119a8, i32* %v4_119ac, i32 %v3_1199c, i32 16384)
  store i32 %v5_119ac, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_13570.555 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119bc = load i32, i32* @r5, align 4
  %v1_119bc = add i32 %v0_119bc, 4
  %v2_119bc = inttoptr i32 %v1_119bc to i32*
  %v3_119bc = load i32, i32* %v2_119bc, align 4
  store i32 %v3_119bc, i32* %r0.global-to-local, align 4
  %v5_119c0 = call i32 @send(i32 %v3_119bc, i32* bitcast ([3 x i8]* @global_var_13570.555 to i32*), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_119c8 = call i32 @function_11d94(i32 24)
  store i32 %v1_119c8, i32* %r0.global-to-local, align 4
  %v0_119cc = load i32, i32* @r5, align 4
  %v1_119cc = add i32 %v0_119cc, 24
  %v2_119cc = inttoptr i32 %v1_119cc to i32*
  %v3_119cc = load i32, i32* %v2_119cc, align 4
  store i32 %v3_119cc, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v2_119d4 = add i32 %v0_119cc, 12
  %v3_119d4 = inttoptr i32 %v2_119d4 to i32*
  store i32 10, i32* %v3_119d4, align 4
  br label %dec_label_pc_11904

dec_label_pc_119dc:                               ; preds = %dec_label_pc_11330
  store i32 ptrtoint (i32* @global_var_1357c.557 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_112e8, i32* %r0.global-to-local, align 4
  %v5_119e8 = call i32* @memcpy(i32* nonnull %stack_var_-41, i32* nonnull @global_var_1357c.557, i32 3)
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v2_119f4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_13573.559 to i32), i32* %r1.global-to-local, align 4
  %v5_119fc = call i32* @memcpy(i32* nonnull %stack_var_-73, i32* nonnull @global_var_13573.559, i32 9)
  %v7_119fc = ptrtoint i32* %v5_119fc to i32
  store i32 %v7_119fc, i32* %r0.global-to-local, align 4
  %v0_11a00 = load i32, i32* @r5, align 4
  %v1_11a00 = add i32 %v0_11a00, 24
  %v2_11a00 = inttoptr i32 %v1_11a00 to i32*
  %v3_11a00 = load i32, i32* %v2_11a00, align 4
  store i32 %v3_11a00, i32* %ip.global-to-local, align 4
  %v0_11a04 = load i32, i32* @r6, align 4
  %v1_11a04 = add i32 %v0_11a04, 2
  store i32 %v1_11a04, i32* %r2.global-to-local, align 4
  %v0_11a08 = load i32, i32* @sb, align 4
  %v2_11a08 = add i32 %v0_11a08, %v3_11a00
  store i32 %v2_11a08, i32* %r3.global-to-local, align 4
  %v3_11a0c = icmp uge i32 %v2_11a08, %v1_11a04
  store i1 %v3_11a0c, i1* %cpsr_c.global-to-local, align 1
  %v9_11a0c = icmp eq i32 %v2_11a08, %v1_11a04
  store i1 %v9_11a0c, i1* %cpsr_z.global-to-local, align 1
  %v2_11a10 = xor i1 %v3_11a0c, true
  %v3_11a10 = or i1 %v9_11a0c, %v2_11a10
  br i1 %v3_11a10, label %dec_label_pc_119dc.dec_label_pc_113a0.loopexit_crit_edge, label %dec_label_pc_11a14

dec_label_pc_119dc.dec_label_pc_113a0.loopexit_crit_edge: ; preds = %dec_label_pc_119dc
  %v0_113a0.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_113a0

dec_label_pc_11a14:                               ; preds = %dec_label_pc_119dc
  %v0_11a14 = load i32, i32* @r4, align 4
  %v1_11a14 = add i32 %v0_11a14, 1
  %v2_11a14 = inttoptr i32 %v1_11a14 to i8*
  %v3_11a14 = load i8, i8* %v2_11a14, align 1
  %v4_11a14 = zext i8 %v3_11a14 to i32
  store i32 %v4_11a14, i32* %r3.global-to-local, align 4
  %v2_11a18 = icmp ugt i8 %v3_11a14, 30
  store i1 %v2_11a18, i1* %cpsr_c.global-to-local, align 1
  %v7_11a18 = icmp eq i8 %v3_11a14, 31
  store i1 %v7_11a18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a18, label %dec_label_pc_11b38, label %dec_label_pc_11a20

dec_label_pc_11a20:                               ; preds = %dec_label_pc_11a14
  %v1_11a20 = add i32 %v0_11a14, -1
  %v2_11a20 = inttoptr i32 %v1_11a20 to i8*
  %v3_11a20 = load i8, i8* %v2_11a20, align 1
  %v4_11a20 = zext i8 %v3_11a20 to i32
  store i32 %v4_11a20, i32* %r3.global-to-local, align 4
  %v2_11a24 = icmp ugt i8 %v3_11a20, -4
  store i1 %v2_11a24, i1* %cpsr_c.global-to-local, align 1
  %v7_11a24 = icmp eq i8 %v3_11a20, -3
  store i1 %v7_11a24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a24, label %bb365, label %dec_label_pc_11a30

bb365:                                            ; preds = %dec_label_pc_11a20
  %v1_11a28 = load i32, i32* @r8, align 4
  %v2_11a28 = trunc i32 %v1_11a28 to i8
  store i8 %v2_11a28, i8* %v2_11a20, align 1
  %v0_11a2c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11a2c.pr, label %dec_label_pc_11344, label %.dec_label_pc_11a30_crit_edge

.dec_label_pc_11a30_crit_edge:                    ; preds = %bb365
  %v0_11a30.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11a30

dec_label_pc_11a30:                               ; preds = %.dec_label_pc_11a30_crit_edge, %dec_label_pc_11a20
  %v0_11a30 = phi i32 [ %v0_11a30.pre, %.dec_label_pc_11a30_crit_edge ], [ %v4_11a20, %dec_label_pc_11a20 ]
  %v2_11a30 = icmp ugt i32 %v0_11a30, 250
  store i1 %v2_11a30, i1* %cpsr_c.global-to-local, align 1
  %v7_11a30 = icmp eq i32 %v0_11a30, 251
  store i1 %v7_11a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a30, label %bb366, label %dec_label_pc_11344

bb366:                                            ; preds = %dec_label_pc_11a30
  %v1_11a34 = load i32, i32* %sl.global-to-local, align 4
  %v2_11a34 = trunc i32 %v1_11a34 to i8
  %v3_11a34 = load i32, i32* @r4, align 4
  %v4_11a34 = add i32 %v3_11a34, -1
  %v5_11a34 = inttoptr i32 %v4_11a34 to i8*
  store i8 %v2_11a34, i8* %v5_11a34, align 1
  br label %dec_label_pc_11344

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_1148c, %dec_label_pc_11468, %dec_label_pc_114a8
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_11a40 = call i32 @function_11e4c(i32 31)
  store i32 %v2_11190, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_11a50 = call i32 @function_11d68(i32 31, i32* nonnull %stack_var_-56)
  %v3_11a54 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_11a50, i32* %r2.global-to-local, align 4
  %v1_11a5c = add i32 %v3_11a54, -1
  store i32 %v1_11a5c, i32* %r3.global-to-local, align 4
  %v0_11a60 = load i32, i32* @sb, align 4
  store i32 %v0_11a60, i32* %r0.global-to-local, align 4
  %v0_11a64 = load i32, i32* @r5, align 4
  %v1_11a64 = add i32 %v0_11a64, 24
  %v2_11a64 = inttoptr i32 %v1_11a64 to i32*
  %v3_11a64 = load i32, i32* %v2_11a64, align 4
  store i32 %v3_11a64, i32* %r1.global-to-local, align 4
  %v4_11a68 = call i32 @function_127f0(i32 %v0_11a60, i32 %v3_11a64, i32 %v3_11a50, i32 %v1_11a5c)
  store i32 %v4_11a68, i32* %r0.global-to-local, align 4
  %v2_11a6c = icmp eq i32 %v4_11a68, -1
  store i1 %v2_11a6c, i1* %cpsr_c.global-to-local, align 1
  %v7_11a6c = icmp eq i32 %v4_11a68, -1
  store i1 %v7_11a6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11a6c, label %dec_label_pc_11d1c.loopexit, label %dec_label_pc_11a7c

dec_label_pc_11a7c:                               ; preds = %dec_label_pc_11a3c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_11a80 = call i32 @function_11d94(i32 31)
  store i32 %v1_11a80, i32* %r0.global-to-local, align 4
  %v0_11a84 = load i32, i32* @r7, align 4
  %v3_11a84 = icmp eq i32 %v0_11a84, -1
  store i1 %v3_11a84, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11a84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11a84, label %dec_label_pc_1121c.loopexit, label %dec_label_pc_114bc

dec_label_pc_11a90:                               ; preds = %dec_label_pc_117d0
  store i32 %v1_1180c, i32* %r0.global-to-local, align 4
  %v0_11a98 = load i32, i32* @r5, align 4
  %v1_11a98 = add i32 %v0_11a98, 4
  %v2_11a98 = inttoptr i32 %v1_11a98 to i32*
  %v3_11a98 = load i32, i32* %v2_11a98, align 4
  store i32 %v3_11a98, i32* %r0.global-to-local, align 4
  %v1_11a9c = call i32 @close(i32 %v3_11a98)
  store i32 %v1_11a9c, i32* %r0.global-to-local, align 4
  %v0_11aa0 = load i32, i32* @r5, align 4
  %v1_11aa0 = add i32 %v0_11aa0, 284
  %v2_11aa0 = inttoptr i32 %v1_11aa0 to i8*
  %v3_11aa0 = load i8, i8* %v2_11aa0, align 1
  %v4_11aa0 = zext i8 %v3_11aa0 to i32
  %v1_11aa4 = add nuw nsw i32 %v4_11aa0, 1
  %v1_11aa8 = urem i32 %v1_11aa4, 256
  store i32 %v1_11aa8, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  %v2_11ab0 = icmp ugt i32 %v1_11aa8, 9
  store i1 %v2_11ab0, i1* %cpsr_c.global-to-local, align 1
  %v7_11ab0 = icmp eq i32 %v1_11aa8, 10
  store i1 %v7_11ab0, i1* %cpsr_z.global-to-local, align 1
  %v2_11ab4 = add i32 %v0_11aa0, 4
  %v3_11ab4 = inttoptr i32 %v2_11ab4 to i32*
  store i32 -1, i32* %v3_11ab4, align 4
  %v0_11ab8 = load i32, i32* %r3.global-to-local, align 4
  %v1_11ab8 = trunc i32 %v0_11ab8 to i8
  %v2_11ab8 = load i32, i32* @r5, align 4
  %v3_11ab8 = add i32 %v2_11ab8, 284
  %v4_11ab8 = inttoptr i32 %v3_11ab8 to i8*
  store i8 %v1_11ab8, i8* %v4_11ab8, align 1
  %v0_11abc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11ac0 = load i32, i32* @r5, align 4
  br i1 %v0_11abc, label %dec_label_pc_11ac0, label %dec_label_pc_11b84

dec_label_pc_11ac0:                               ; preds = %dec_label_pc_11a90
  %v1_11ac0 = add i32 %v0_11ac0, 24
  %v2_11ac0 = inttoptr i32 %v1_11ac0 to i32*
  %v3_11ac0 = load i32, i32* %v2_11ac0, align 4
  store i32 %v3_11ac0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v3_11ad0 = add i32 %v0_11ac0, 284
  %v4_11ad0 = inttoptr i32 %v3_11ad0 to i8*
  store i8 0, i8* %v4_11ad0, align 1
  %v0_11ad4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11ad4 = load i32, i32* @r5, align 4
  %v2_11ad4 = add i32 %v1_11ad4, 12
  %v3_11ad4 = inttoptr i32 %v2_11ad4 to i32*
  store i32 %v0_11ad4, i32* %v3_11ad4, align 4
  br label %dec_label_pc_11904

dec_label_pc_11adc:                               ; preds = %dec_label_pc_11238
  br i1 %v2_11260, label %dec_label_pc_11d58, label %dec_label_pc_11ae0

dec_label_pc_11ae0:                               ; preds = %dec_label_pc_11adc
  %v3_11ae0 = icmp eq i32 %v5_1125c, -1
  store i1 %v3_11ae0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11ae0, label %dec_label_pc_11ae8, label %dec_label_pc_11288

dec_label_pc_11ae8:                               ; preds = %dec_label_pc_11ae0
  store i32 %v2_10ca8, i32* %r2.global-to-local, align 4
  %v2_11aec = load i32, i32* %v0_10ca8, align 4
  store i32 %v2_11aec, i32* %r3.global-to-local, align 4
  %v2_11af0 = icmp ugt i32 %v2_11aec, 10
  store i1 %v2_11af0, i1* %cpsr_c.global-to-local, align 1
  %v7_11af0 = icmp eq i32 %v2_11aec, 11
  store i1 %v7_11af0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11af0, label %dec_label_pc_11048, label %dec_label_pc_11af8

dec_label_pc_11af8:                               ; preds = %dec_label_pc_11ae8, %dec_label_pc_11d58
  %v0_11af8 = load i32, i32* @r5, align 4
  %v1_11af8 = add i32 %v0_11af8, 4
  %v2_11af8 = inttoptr i32 %v1_11af8 to i32*
  %v3_11af8 = load i32, i32* %v2_11af8, align 4
  store i32 %v3_11af8, i32* %r0.global-to-local, align 4
  %v1_11afc = call i32 @close(i32 %v3_11af8)
  store i32 %v1_11afc, i32* %r0.global-to-local, align 4
  %v0_11b00 = load i32, i32* @r5, align 4
  %v1_11b00 = add i32 %v0_11b00, 284
  %v2_11b00 = inttoptr i32 %v1_11b00 to i8*
  %v3_11b00 = load i8, i8* %v2_11b00, align 1
  %v4_11b00 = zext i8 %v3_11b00 to i32
  %v1_11b04 = add nuw nsw i32 %v4_11b00, 1
  %v1_11b08 = urem i32 %v1_11b04, 256
  store i32 %v1_11b08, i32* %r3.global-to-local, align 4
  %v2_11b0c = icmp ugt i32 %v1_11b08, 8
  store i1 %v2_11b0c, i1* %cpsr_c.global-to-local, align 1
  %v7_11b0c = icmp eq i32 %v1_11b08, 9
  store i1 %v7_11b0c, i1* %cpsr_z.global-to-local, align 1
  %v1_11b10 = trunc i32 %v1_11b04 to i8
  store i8 %v1_11b10, i8* %v2_11b00, align 1
  store i32 -1, i32* @r4, align 4
  %v0_11b18 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11b18 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_11b18 = xor i1 %v1_11b18, true
  %v3_11b18 = and i1 %v0_11b18, %v2_11b18
  br i1 %v3_11b18, label %bb367, label %.thread230

.thread230:                                       ; preds = %dec_label_pc_11af8
  %v1_11b1c226231 = load i32, i32* @r5, align 4
  %v2_11b1c227232 = add i32 %v1_11b1c226231, 4
  %v3_11b1c228233 = inttoptr i32 %v2_11b1c227232 to i32*
  store i32 -1, i32* %v3_11b1c228233, align 4
  br label %bb368

bb367:                                            ; preds = %dec_label_pc_11af8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_11b1c222 = load i32, i32* @r5, align 4
  %v2_11b1c223 = add i32 %v1_11b1c222, 4
  %v3_11b1c224 = inttoptr i32 %v2_11b1c223 to i32*
  store i32 -1, i32* %v3_11b1c224, align 4
  %v4_11b20 = load i32, i32* %r3.global-to-local, align 4
  %v5_11b20 = load i32, i32* @r5, align 4
  %v6_11b20 = add i32 %v5_11b20, 12
  %v7_11b20 = inttoptr i32 %v6_11b20 to i32*
  store i32 %v4_11b20, i32* %v7_11b20, align 4
  %v4_11b24 = load i32, i32* %r3.global-to-local, align 4
  %v5_11b24 = trunc i32 %v4_11b24 to i8
  %v6_11b24 = load i32, i32* @r5, align 4
  %v7_11b24 = add i32 %v6_11b24, 284
  %v8_11b24 = inttoptr i32 %v7_11b24 to i8*
  store i8 %v5_11b24, i8* %v8_11b24, align 1
  %v0_11b28.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11b28.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb368

bb368:                                            ; preds = %.thread230, %bb367
  %v1_11b28 = phi i1 [ %v1_11b28.pre, %bb367 ], [ %v1_11b18, %.thread230 ]
  %v0_11b28 = phi i1 [ %v0_11b28.pre, %bb367 ], [ %v0_11b18, %.thread230 ]
  %v2_11b28 = xor i1 %v1_11b28, true
  %v3_11b28 = and i1 %v0_11b28, %v2_11b28
  br i1 %v3_11b28, label %dec_label_pc_11048, label %dec_label_pc_11b2c

dec_label_pc_11b2c:                               ; preds = %bb368
  %v0_11b2c = load i32, i32* @r5, align 4
  store i32 %v0_11b2c, i32* @r0, align 4
  %v0_11b30 = call i32 @function_f694()
  store i32 %v0_11b30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11048

dec_label_pc_11b38:                               ; preds = %dec_label_pc_11a14
  store i32 %v2_112e8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_11b44 = add i32 %v0_11a00, 4
  %v2_11b44 = inttoptr i32 %v1_11b44 to i32*
  %v3_11b44 = load i32, i32* %v2_11b44, align 4
  store i32 %v3_11b44, i32* %r0.global-to-local, align 4
  %v5_11b48 = call i32 @send(i32 %v3_11b44, i32* nonnull %stack_var_-41, i32 3, i32 16384)
  store i32 %v5_11b48, i32* %r0.global-to-local, align 4
  store i32 %v2_119ec, i32* %r1.global-to-local, align 4
  %v0_11b50 = load i32, i32* @r5, align 4
  %v1_11b50 = add i32 %v0_11b50, 4
  %v2_11b50 = inttoptr i32 %v1_11b50 to i32*
  %v3_11b50 = load i32, i32* %v2_11b50, align 4
  store i32 %v3_11b50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11380

dec_label_pc_11b60:                               ; preds = %dec_label_pc_11228
  store i32 %.pre, i32* %r0.global-to-local, align 4
  %v1_11b68 = add i32 %v0_11b60, 92
  store i32 %v1_11b68, i32* %r1.global-to-local, align 4
  store i32 192, i32* %r2.global-to-local, align 4
  %v3_11b70 = inttoptr i32 %.pre to i32*
  %v4_11b70 = inttoptr i32 %v1_11b68 to i32*
  %v5_11b70 = call i32* @memmove(i32* %v3_11b70, i32* %v4_11b70, i32 192)
  %v7_11b70 = ptrtoint i32* %v5_11b70 to i32
  store i32 %v7_11b70, i32* %r0.global-to-local, align 4
  %v0_11b74 = load i32, i32* @r5, align 4
  %v1_11b74 = add i32 %v0_11b74, 24
  %v2_11b74 = inttoptr i32 %v1_11b74 to i32*
  %v3_11b74 = load i32, i32* %v2_11b74, align 4
  store i32 %v3_11b74, i32* %r3.global-to-local, align 4
  %v1_11b78 = add i32 %v3_11b74, -64
  store i32 %v1_11b78, i32* %ip.global-to-local, align 4
  store i32 %v1_11b78, i32* %v2_11b74, align 4
  br label %dec_label_pc_11238

dec_label_pc_11b84:                               ; preds = %dec_label_pc_11a90
  store i32 %v0_11ac0, i32* @r0, align 4
  %v0_11b88 = call i32 @function_f694()
  store i32 %v0_11b88, i32* %r0.global-to-local, align 4
  %v0_11b8c = load i32, i32* @r5, align 4
  %v1_11b8c = add i32 %v0_11b8c, 24
  %v2_11b8c = inttoptr i32 %v1_11b8c to i32*
  %v3_11b8c = load i32, i32* %v2_11b8c, align 4
  store i32 %v3_11b8c, i32* %ip.global-to-local, align 4
  %v0_11b90 = load i32, i32* @r4, align 4
  store i32 %v0_11b90, i32* @r7, align 4
  br label %dec_label_pc_11904

dec_label_pc_11b98:                               ; preds = %dec_label_pc_110a4
  %v0_11b98 = load i32, i32* @r5, align 4
  %v1_11b98 = add i32 %v0_11b98, 4
  %v2_11b98 = inttoptr i32 %v1_11b98 to i32*
  %v3_11b98 = load i32, i32* %v2_11b98, align 4
  store i32 %v3_11b98, i32* %r0.global-to-local, align 4
  %v1_11b9c = call i32 @close(i32 %v3_11b98)
  store i32 %v1_11b9c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v0_11ba4 = load i32, i32* @r6, align 4
  %v1_11ba4 = load i32, i32* @r5, align 4
  %v2_11ba4 = add i32 %v1_11ba4, 12
  %v3_11ba4 = inttoptr i32 %v2_11ba4 to i32*
  store i32 %v0_11ba4, i32* %v3_11ba4, align 4
  %v0_11ba8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11ba8 = load i32, i32* @r5, align 4
  %v2_11ba8 = add i32 %v1_11ba8, 4
  %v3_11ba8 = inttoptr i32 %v2_11ba8 to i32*
  store i32 %v0_11ba8, i32* %v3_11ba8, align 4
  %v0_11bac = load i32, i32* @r6, align 4
  %v1_11bac = trunc i32 %v0_11bac to i8
  %v2_11bac = load i32, i32* @r5, align 4
  %v3_11bac = add i32 %v2_11bac, 284
  %v4_11bac = inttoptr i32 %v3_11bac to i8*
  store i8 %v1_11bac, i8* %v4_11bac, align 1
  br label %dec_label_pc_11048

dec_label_pc_11be4:                               ; preds = %dec_label_pc_118c0
  store i32 2, i32* @r5, align 4
  %v1_11be8 = add i32 %v2_118dc, 4
  %v2_11be8 = inttoptr i32 %v1_11be8 to i32*
  %v3_11be8 = load i32, i32* %v2_11be8, align 4
  store i32 %v3_11be8, i32* @r4, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v0_11bf4 = call i32 @function_ef90()
  store i32 %v0_11bf4, i32* %r0.global-to-local, align 4
  %v0_11bf8 = load i32, i32* @r8, align 4
  %v1_11bf8 = inttoptr i32 %v0_11bf8 to i8*
  %v2_11bf8 = load i8, i8* %v1_11bf8, align 1
  %v3_11bf8 = zext i8 %v2_11bf8 to i32
  store i32 %v3_11bf8, i32* %r1.global-to-local, align 4
  %v2_11bfc = urem i32 %v0_11bf4, %v3_11bf8
  store i32 %v2_11bfc, i32* %r0.global-to-local, align 4
  %v0_11c00 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_11c00 = mul nuw nsw i32 %v2_11bfc, 4
  %v5_11c00 = add i32 %v0_11c00, %v4_11c00
  %v6_11c00 = inttoptr i32 %v5_11c00 to i32*
  %v7_11c00 = load i32, i32* %v6_11c00, align 4
  store i32 %v7_11c00, i32* %r3.global-to-local, align 4
  %v0_11c04 = load i32, i32* @sl, align 4
  store i32 %v0_11c04, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v2_11c10 = inttoptr i32 %v0_11c04 to i32*
  %v3_11c10 = call i32 @function_11d68(i32 19, i32* %v2_11c10)
  %v4_11c10 = inttoptr i32 %v3_11c10 to i8*
  store i32 %v3_11c10, i32* %r0.global-to-local, align 4
  %v2_11c14 = add i32 %v3_11c10, 1
  %v3_11c14 = inttoptr i32 %v2_11c14 to i8*
  %v4_11c14 = load i8, i8* %v3_11c14, align 1
  %v5_11c14 = zext i8 %v4_11c14 to i32
  store i32 %v5_11c14, i32* %r2.global-to-local, align 4
  %v3_11c18 = load i8, i8* %v4_11c10, align 1
  %v4_11c18 = zext i8 %v3_11c18 to i32
  %v4_11c1c = mul nuw nsw i32 %v5_11c14, 256
  %v5_11c1c = or i32 %v4_11c18, %v4_11c1c
  store i32 %v5_11c1c, i32* %r3.global-to-local, align 4
  %v1_11c20 = and i32 %v4_11c18, 128
  %v2_11c20 = icmp ne i32 %v1_11c20, 0
  store i1 %v2_11c20, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_11c14, i32* %r1.global-to-local, align 4
  %v0_11c24 = load i32, i32* @r8, align 4
  store i32 %v0_11c24, i32* %r0.global-to-local, align 4
  %v2_11c30 = sext i8 %v4_11c14 to i32
  %v7_11c30 = inttoptr i32 %v0_11c24 to i32*
  %v8_11c30 = call i32 @function_f110(i32* %v7_11c30, i32 %v2_11c30)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_11c38 = call i32 @function_11d94(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_11c40 = call i32 @function_11d94(i32 19)
  %v0_11c48 = load i32, i32* @r6, align 4
  store i32 %v0_11c48, i32* %r0.global-to-local, align 4
  store i32 %v2_10c78, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v5_11c54 = call i32 @connect(i32 %v0_11c48, %sockaddr* %tmp293, i32 16)
  store i32 %v5_11c54, i32* %r0.global-to-local, align 4
  %v3_11c58 = icmp eq i32 %v5_11c54, -1
  store i1 %v3_11c58, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_11c58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11c58, label %dec_label_pc_11c60, label %dec_label_pc_11c70

dec_label_pc_11c60:                               ; preds = %dec_label_pc_11be4
  %v0_11c60 = load i32, i32* @r6, align 4
  store i32 %v0_11c60, i32* %r0.global-to-local, align 4
  %v1_11c64 = call i32 @close(i32 %v0_11c60)
  %v0_11c68 = load i32, i32* @sl, align 4
  store i32 %v0_11c68, i32* %r0.global-to-local, align 4
  call void @exit(i32 %v0_11c68)
  unreachable

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11be4
  %v2_11cac.le = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_11190, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11c80 = load i32, i32* @r6, align 4
  store i32 %v0_11c80, i32* %r0.global-to-local, align 4
  %v0_11c84 = load i32, i32* @sl, align 4
  store i32 %v0_11c84, i32* %stack_var_-56, align 4
  %v6_11c88 = call i32 @send(i32 %v0_11c80, i32* nonnull %stack_var_-56, i32 1, i32 16384)
  store i32 %v2_1161c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11c9c = load i32, i32* @r6, align 4
  store i32 %v0_11c9c, i32* %r0.global-to-local, align 4
  %v5_11ca0 = call i32 @send(i32 %v0_11c9c, i32* nonnull %stack_var_-48, i32 4, i32 16384)
  %v0_11ca8 = load i32, i32* @r5, align 4
  store i32 %v0_11ca8, i32* %r2.global-to-local, align 4
  store i32 %v2_11cac.le, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11cb4 = load i32, i32* @r6, align 4
  store i32 %v0_11cb4, i32* %r0.global-to-local, align 4
  %v5_11cb8 = call i32 @send(i32 %v0_11cb4, i32* nonnull %stack_var_-38, i32 %v0_11ca8, i32 16384)
  %v0_11cbc = load i32, i32* @fp, align 4
  %v1_11cbc = add i32 %v0_11cbc, 12
  store i32 %v1_11cbc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11cc8 = load i32, i32* @r6, align 4
  store i32 %v0_11cc8, i32* %r0.global-to-local, align 4
  %v4_11ccc = inttoptr i32 %v1_11cbc to i32*
  %v5_11ccc = call i32 @send(i32 %v0_11cc8, i32* %v4_11ccc, i32 1, i32 16384)
  store i32 %v5_11ccc, i32* %r0.global-to-local, align 4
  %v0_11cd0 = load i32, i32* @fp, align 4
  %v1_11cd0 = inttoptr i32 %v0_11cd0 to i32*
  %v2_11cd0 = load i32, i32* %v1_11cd0, align 4
  store i32 %v2_11cd0, i32* %r1.global-to-local, align 4
  %v1_11cd4 = add i32 %v0_11cd0, 12
  %v2_11cd4 = inttoptr i32 %v1_11cd4 to i8*
  %v3_11cd4 = load i8, i8* %v2_11cd4, align 1
  %v4_11cd4 = zext i8 %v3_11cd4 to i32
  store i32 %v4_11cd4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11cdc = load i32, i32* @r6, align 4
  store i32 %v0_11cdc, i32* %r0.global-to-local, align 4
  %v4_11ce0 = inttoptr i32 %v2_11cd0 to i32*
  %v5_11ce0 = call i32 @send(i32 %v0_11cdc, i32* %v4_11ce0, i32 %v4_11cd4, i32 16384)
  %v0_11ce4 = load i32, i32* @fp, align 4
  %v1_11ce4 = add i32 %v0_11ce4, 13
  store i32 %v1_11ce4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11cf0 = load i32, i32* @r6, align 4
  store i32 %v0_11cf0, i32* %r0.global-to-local, align 4
  %v4_11cf4 = inttoptr i32 %v1_11ce4 to i32*
  %v5_11cf4 = call i32 @send(i32 %v0_11cf0, i32* %v4_11cf4, i32 1, i32 16384)
  %v0_11cf8 = load i32, i32* @r6, align 4
  store i32 %v0_11cf8, i32* %r0.global-to-local, align 4
  %v0_11cfc = load i32, i32* @fp, align 4
  %v1_11cfc = add i32 %v0_11cfc, 13
  %v2_11cfc = inttoptr i32 %v1_11cfc to i8*
  %v3_11cfc = load i8, i8* %v2_11cfc, align 1
  %v4_11cfc = zext i8 %v3_11cfc to i32
  store i32 %v4_11cfc, i32* %r2.global-to-local, align 4
  %v1_11d00 = add i32 %v0_11cfc, 4
  %v2_11d00 = inttoptr i32 %v1_11d00 to i32*
  %v3_11d00 = load i32, i32* %v2_11d00, align 4
  store i32 %v3_11d00, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11d08 = inttoptr i32 %v3_11d00 to i32*
  %v5_11d08 = call i32 @send(i32 %v0_11cf8, i32* %v4_11d08, i32 %v4_11cfc, i32 16384)
  %v0_11d0c = load i32, i32* @r6, align 4
  store i32 %v0_11d0c, i32* %r0.global-to-local, align 4
  %v1_11d10 = call i32 @close(i32 %v0_11d0c)
  store i32 %v1_11d10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d14

dec_label_pc_11d14:                               ; preds = %dec_label_pc_118a4, %dec_label_pc_11c70
  %v0_11d14 = load i32, i32* @sl, align 4
  store i32 %v0_11d14, i32* %r0.global-to-local, align 4
  call void @exit(i32 %v0_11d14)
  unreachable

dec_label_pc_11d1c.loopexit:                      ; preds = %dec_label_pc_11a3c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_11d20 = call i32 @function_11d94(i32 31)
  store i32 %v1_11d20, i32* %r0.global-to-local, align 4
  %v0_11d24 = load i32, i32* @r5, align 4
  %v1_11d24 = add i32 %v0_11d24, 12
  %v2_11d24 = inttoptr i32 %v1_11d24 to i32*
  %v3_11d24 = load i32, i32* %v2_11d24, align 4
  br label %dec_label_pc_11220.backedge

dec_label_pc_11d2c:                               ; preds = %dec_label_pc_10fa0, %dec_label_pc_10f84
  %v0_11d2c = load i32, i32* @r7, align 4
  %v1_11d2c = load i32, i32* @r4, align 4
  %v2_11d2c = add i32 %v1_11d2c, 12
  %v3_11d2c = inttoptr i32 %v2_11d2c to i32*
  store i32 %v0_11d2c, i32* %v3_11d2c, align 4
  %v0_11d30 = load i32, i32* @r7, align 4
  %v1_11d30 = trunc i32 %v0_11d30 to i8
  %v2_11d30 = load i32, i32* @r4, align 4
  %v3_11d30 = add i32 %v2_11d30, 284
  %v4_11d30 = inttoptr i32 %v3_11d30 to i8*
  store i8 %v1_11d30, i8* %v4_11d30, align 1
  br label %bb325

dec_label_pc_11d38:                               ; preds = %dec_label_pc_1112c, %dec_label_pc_110e4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11168

dec_label_pc_11d40:                               ; preds = %dec_label_pc_111dc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_11d44 = call i32 @function_11d94(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_11d4c = call i32 @function_11d94(i32 33)
  store i32 %v1_11d4c, i32* %r0.global-to-local, align 4
  %v0_11d50 = load i32, i32* @r5, align 4
  %v1_11d50 = add i32 %v0_11d50, 12
  %v2_11d50 = inttoptr i32 %v1_11d50 to i32*
  %v3_11d50 = load i32, i32* %v2_11d50, align 4
  br label %dec_label_pc_11220.backedge

dec_label_pc_11220.backedge.thread:               ; preds = %dec_label_pc_11500, %dec_label_pc_115b4, %dec_label_pc_11668, %dec_label_pc_1171c, %dec_label_pc_11928
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11228

dec_label_pc_11220.backedge.thread481:            ; preds = %dec_label_pc_1152c, %dec_label_pc_115e0, %dec_label_pc_11748, %dec_label_pc_11694, %dec_label_pc_11954, %dec_label_pc_11548, %dec_label_pc_115fc, %dec_label_pc_116b0, %dec_label_pc_11764, %dec_label_pc_11970
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11228

dec_label_pc_11220.backedge:                      ; preds = %dec_label_pc_11d40, %dec_label_pc_11d1c.loopexit
  %storemerge483 = phi i32 [ %v3_11d24, %dec_label_pc_11d1c.loopexit ], [ %v3_11d50, %dec_label_pc_11d40 ]
  %v0_11220.be = phi i32 [ %v3_11d24, %dec_label_pc_11d1c.loopexit ], [ %v3_11d50, %dec_label_pc_11d40 ]
  %v0_11228142 = phi i32 [ %v0_11d24, %dec_label_pc_11d1c.loopexit ], [ %v0_11d50, %dec_label_pc_11d40 ]
  store i32 %storemerge483, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11220 = icmp eq i32 %v0_11220.be, 0
  store i1 %v2_11220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11220, label %dec_label_pc_11048, label %dec_label_pc_11228

dec_label_pc_11d58:                               ; preds = %dec_label_pc_11adc
  store i32 %v2_10ca8, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v0_10ca8, align 4
  br label %dec_label_pc_11af8

; uselistorder directives
  uselistorder i32 %v3_11d50, { 1, 0 }
  uselistorder i32 %v3_11d24, { 1, 0 }
  uselistorder i1 %v3_11c58, { 1, 0, 2 }
  uselistorder i32 %v4_11c18, { 1, 0 }
  uselistorder i32 %v5_11c14, { 1, 0, 2 }
  uselistorder i1 %v1_11b18, { 1, 0 }
  uselistorder i32 %v1_11b08, { 2, 1, 0 }
  uselistorder i32 %v1_11b04, { 1, 0 }
  uselistorder i1 %v3_11ae0, { 1, 0, 2 }
  uselistorder i32 %v0_11ac0, { 1, 0, 2 }
  uselistorder i32 %v1_11aa8, { 2, 1, 0 }
  uselistorder i1 %v3_11a84, { 1, 0, 2 }
  uselistorder i32 %v0_11a84, { 1, 0 }
  uselistorder i1 %v7_11a6c, { 1, 0 }
  uselistorder i32 %v0_11a00, { 1, 2, 0 }
  uselistorder i1 %v7_11974, { 1, 0 }
  uselistorder i32 %v1_11970, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_11968, { 1, 0 }
  uselistorder i8 %v3_11960, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11970, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_1194c, { 1, 0 }
  uselistorder i1 %v7_11944, { 1, 0 }
  uselistorder i1 %v7_1193c, { 1, 0 }
  uselistorder i32 %v0_11918, { 1, 2, 0 }
  uselistorder i32 %v2_11904, { 1, 0 }
  uselistorder i32 %v1_11904, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_11904, { 3, 2, 5, 0, 1, 4, 6 }
  uselistorder i1 %v2_1189c, { 1, 0 }
  uselistorder i32 %.372, { 1, 0 }
  uselistorder i1 %v2_11884, { 1, 0 }
  uselistorder i32 %v0_11880, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11860, { 1, 0, 2 }
  uselistorder i32 %v4_1185c, { 1, 0, 2 }
  uselistorder i32 %v0_1184c, { 2, 1, 3, 0 }
  uselistorder i1 %v3_11800, { 1, 0, 2 }
  uselistorder i1 %v7_11768, { 1, 0 }
  uselistorder i32 %v1_11764, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_1175c, { 1, 0 }
  uselistorder i8 %v3_11754, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11764, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_11740, { 1, 0 }
  uselistorder i1 %v7_11738, { 1, 0 }
  uselistorder i1 %v7_11730, { 1, 0 }
  uselistorder i1 %v7_116b4, { 1, 0 }
  uselistorder i32 %v1_116b0, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_116a8, { 1, 0 }
  uselistorder i8 %v3_116a0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_116b0, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_1168c, { 1, 0 }
  uselistorder i1 %v7_11684, { 1, 0 }
  uselistorder i1 %v7_1167c, { 1, 0 }
  uselistorder i1 %v7_11600, { 1, 0 }
  uselistorder i32 %v1_115fc, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_115f4, { 1, 0 }
  uselistorder i8 %v3_115ec, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_115fc, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_115d8, { 1, 0 }
  uselistorder i1 %v7_115d0, { 1, 0 }
  uselistorder i1 %v7_115c8, { 1, 0 }
  uselistorder i1 %v7_1154c, { 1, 0 }
  uselistorder i32 %v1_11548, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_11540, { 1, 0 }
  uselistorder i8 %v3_11538, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11548, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_11524, { 1, 0 }
  uselistorder i1 %v7_1151c, { 1, 0 }
  uselistorder i1 %v7_11514, { 1, 0 }
  uselistorder i32 %v0_114bc, { 2, 1, 0 }
  uselistorder i1 %v7_114ac, { 1, 0 }
  uselistorder i1 %v8_114a0, { 1, 0 }
  uselistorder i8 %v3_11498, { 4, 5, 6, 7, 8, 3, 2, 1, 0 }
  uselistorder i32 %v0_114a8, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_11484, { 1, 0 }
  uselistorder i1 %v7_1147c, { 1, 0 }
  uselistorder i32 %v0_11424, { 2, 1, 0 }
  uselistorder i1 %v7_1140c, { 1, 0 }
  uselistorder i1 %v8_11400, { 1, 0 }
  uselistorder i8 %v3_113f8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_11408, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_113e4, { 1, 0 }
  uselistorder i1 %v7_113dc, { 1, 0 }
  uselistorder i1 %v7_113d4, { 1, 0 }
  uselistorder i32 %v0_113a0, { 0, 2, 1 }
  uselistorder i32 %v1_11398, { 1, 0 }
  uselistorder i32 %v1_11394, { 1, 0 }
  uselistorder i32 %v1_1138c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11388, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11388, { 0, 2, 1 }
  uselistorder i1 %v7_11330, { 1, 0 }
  uselistorder i1 %v2_1131c, { 1, 0, 2 }
  uselistorder i1 %v2_11304, { 1, 0, 2 }
  uselistorder i32 %v1_11324, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_112f8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v1_11320, { 1, 0 }
  uselistorder i32 %v2_11328, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_112a0, { 3, 18, 4, 16, 5, 17, 6, 15, 7, 14, 8, 13, 9, 12, 2, 10, 11, 19, 1, 0 }
  uselistorder i32 %v1_1127c, { 1, 2, 3, 0 }
  uselistorder i32 %v3_11278, { 1, 0 }
  uselistorder i32 %v5_1125c, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32 %v2_11248, { 1, 0, 2 }
  uselistorder i32 %v3_11244, { 1, 0, 2 }
  uselistorder i32 %v0_11b60, { 1, 0, 2 }
  uselistorder i1 %v3_11214, { 1, 0, 2 }
  uselistorder i1 %v7_111f4, { 1, 0 }
  uselistorder i1 %v7_111cc, { 1, 0 }
  uselistorder i32 %v0_11134, { 0, 3, 2, 4, 6, 5, 1 }
  uselistorder i32 %v2_11108, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_11100, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_11094, { 2, 1, 0 }
  uselistorder i32 %v3_11090, { 1, 0 }
  uselistorder i32 %v3_11074, { 4, 3, 1, 0, 5, 6, 2 }
  uselistorder i32 %v0_11068, { 1, 0 }
  uselistorder i32 %v1_1104c, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_11038, { 2, 1, 0 }
  uselistorder i32 %v3_11034, { 1, 0 }
  uselistorder i32 %v0_11038, { 1, 0 }
  uselistorder i32 %v1_10fcc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10fcc, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10fa8, { 2, 1, 0 }
  uselistorder i32 %v1_10fa4, { 1, 0 }
  uselistorder i32 %v0_10f74, { 0, 2, 1 }
  uselistorder i32 %v1_10f6c, { 1, 0 }
  uselistorder i1 %v7_10f38, { 0, 3, 1, 2 }
  uselistorder i1 %v2_10f38, { 1, 2, 0 }
  uselistorder i32 %v2_10f30, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v0_10f28, { 1, 0 }
  uselistorder i32 %v1_10f0c, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10f00, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10f00, { 0, 2, 1 }
  uselistorder i32 %v1_10ef0, { 1, 0 }
  uselistorder i32 %v3_10f54, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %storemerge237, { 1, 0, 2 }
  uselistorder i32 %v3_10e40, { 1, 0 }
  uselistorder i32 %v1_10e2c, { 1, 0 }
  uselistorder i32 %v1_10e14, { 1, 2, 0 }
  uselistorder i32 %v0_10e20, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10de4, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %v2_10dd8, { 2, 1, 0 }
  uselistorder i32 %v1_10db4, { 3, 1, 0, 4, 2 }
  uselistorder i1 %v2_10d8c, { 1, 0 }
  uselistorder i32 %v2_10ca8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_10c94, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_10bb4, { 1, 0 }
  uselistorder i32 %v1_10bb0, { 1, 0 }
  uselistorder i32 %v4_10b8c, { 1, 0 }
  uselistorder i1 %v2_10afc, { 1, 0 }
  uselistorder i1 %v3_10ae0, { 1, 0, 2 }
  uselistorder i1 %v2_10acc, { 1, 0 }
  uselistorder i1 %v2_10aa8, { 1, 0 }
  uselistorder i32 %v1_10a58, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10a44, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10a40, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v4_10a30, { 1, 0 }
  uselistorder i32 %v0_10a20, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10a10, { 1, 0 }
  uselistorder i32 %stack_var_-1872.0, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1161c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_11190, { 0, 7, 4, 3, 2, 5, 6, 8, 9, 1 }
  uselistorder i32 %v2_119f4, { 1, 0 }
  uselistorder i32 %v2_10f60, { 0, 4, 1, 5, 2, 7, 3, 6 }
  uselistorder i32 %v2_109e4, { 2, 3, 4, 0, 1, 7, 6, 5, 8 }
  uselistorder i32 %v2_109e0, { 3, 2, 0, 5, 4, 1, 6 }
  uselistorder i32 %v4_fda4, { 1, 0 }
  uselistorder i32 %v4_fd44, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_fd3c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_fce4, { 3, 2, 0, 1 }
  uselistorder i32 %v3_fc80, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_fc68, { 0, 2, 1 }
  uselistorder i32 %v0_fc50, { 2, 1, 0 }
  uselistorder i32 %v0_fc2c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %storemerge244, { 1, 0 }
  uselistorder i32 %v0_f914, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 14, 12, 13 }
  uselistorder i32* %stack_var_-92, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 4, 5, 3, 6, 2, 7, 0, 8, 9 }
  uselistorder i32* %stack_var_-56, { 0, 10, 11, 3, 12, 6, 13, 7, 14, 8, 15, 5, 16, 4, 17, 18, 1, 2, 9, 19, 20 }
  uselistorder i32* %stack_var_-38, { 1, 0, 2 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 6, 5, 7 }
  uselistorder i32* %r5.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 64, 4, 5, 6, 7, 8, 9, 10, 11, 12, 65, 46, 66, 67, 68, 69, 70, 13, 14, 36, 47, 48, 49, 50, 0, 1, 2, 3, 15, 134, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 59, 60, 61, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 71, 72, 73, 74, 75, 76, 62, 63, 77, 78, 80, 79, 81, 82, 83, 84, 86, 88, 87, 85, 89, 90, 91, 92, 98, 93, 94, 95, 96, 99, 145, 146, 100, 143, 144, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 133, 119, 120, 121, 122, 123, 124, 126, 125, 128, 127, 97, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142 }
  uselistorder i32* %r2.global-to-local, { 238, 3, 4, 5, 6, 7, 8, 9, 10, 11, 48, 35, 49, 31, 36, 37, 38, 0, 1, 2, 42, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 24, 23, 25, 27, 26, 28, 30, 29, 32, 34, 33, 43, 45, 44, 39, 40, 41, 50, 51, 52, 53, 54, 55, 56, 46, 47, 57, 58, 59, 60, 61, 63, 65, 64, 237, 62, 66, 67, 68, 69, 74, 70, 71, 72, 73, 76, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 219, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236 }
  uselistorder i32* %r1.global-to-local, { 51, 52, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 53, 40, 41, 15, 16, 36, 37, 42, 43, 1, 2, 3, 44, 216, 217, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 45, 46, 0, 54, 55, 56, 47, 48, 49, 50, 57, 58, 59, 61, 62, 60, 63, 64, 66, 65, 215, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 194, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 218, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214 }
  uselistorder i32* %r0.global-to-local, { 128, 127, 129, 99, 98, 12, 14, 13, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 26, 25, 27, 29, 28, 31, 30, 0, 32, 147, 146, 34, 149, 148, 119, 121, 120, 150, 152, 151, 33, 36, 35, 37, 101, 100, 103, 102, 104, 105, 123, 122, 124, 3, 2, 4, 6, 5, 8, 7, 9, 10, 11, 131, 130, 39, 38, 40, 42, 41, 43, 44, 46, 45, 47, 49, 48, 50, 52, 51, 53, 54, 55, 56, 57, 58, 60, 59, 62, 61, 64, 63, 65, 66, 67, 68, 70, 69, 72, 71, 74, 73, 75, 76, 77, 78, 80, 79, 82, 81, 84, 83, 85, 86, 87, 88, 90, 89, 92, 91, 94, 93, 95, 96, 97, 107, 106, 109, 108, 113, 110, 111, 112, 133, 132, 135, 134, 115, 114, 116, 117, 118, 126, 125, 156, 153, 154, 137, 136, 138, 140, 139, 142, 141, 143, 144, 145, 164, 155, 157, 158, 159, 161, 160, 162, 169, 163, 165, 168, 166, 167, 171, 172, 170, 175, 173, 174, 177, 176, 178, 180, 179, 313, 181, 182, 183, 1, 184, 185, 187, 186, 188, 189, 190, 191, 192, 193, 194, 195, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 315, 318, 317, 319, 323, 322, 320, 321, 324, 325, 326, 327 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 18, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %ip.global-to-local, { 2, 20, 3, 14, 0, 1, 18, 4, 5, 7, 6, 9, 8, 11, 10, 12, 13, 17, 19, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 31, 29, 30, 32, 48, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_z.global-to-local, { 112, 204, 202, 98, 57, 9, 103, 102, 104, 105, 106, 10, 11, 56, 190, 58, 75, 76, 77, 78, 79, 0, 1, 6, 7, 2, 3, 4, 5, 8, 94, 12, 13, 14, 189, 16, 17, 18, 19, 20, 21, 26, 27, 22, 23, 24, 25, 28, 29, 30, 35, 36, 31, 32, 33, 34, 37, 38, 39, 44, 45, 40, 41, 42, 43, 46, 47, 48, 53, 54, 49, 50, 51, 52, 55, 59, 60, 64, 65, 61, 62, 63, 66, 96, 67, 72, 73, 68, 69, 70, 71, 74, 95, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 203, 205, 107, 108, 109, 110, 111, 195, 97, 15, 99, 100, 101, 113, 115, 114, 116, 117, 119, 121, 120, 196, 118, 122, 123, 124, 125, 126, 127, 132, 128, 129, 130, 131, 199, 200, 197, 198, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 188, 168, 169, 170, 171, 172, 187, 173, 174, 175, 186, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 193, 201, 194 }
  uselistorder i1* %cpsr_c.global-to-local, { 110, 201, 199, 96, 58, 9, 10, 11, 101, 100, 102, 103, 104, 12, 57, 185, 59, 76, 77, 78, 79, 0, 1, 6, 7, 2, 3, 4, 5, 8, 92, 13, 14, 15, 184, 16, 17, 18, 19, 20, 21, 22, 27, 28, 23, 24, 25, 26, 29, 30, 31, 36, 37, 32, 33, 34, 35, 38, 39, 40, 45, 46, 41, 42, 43, 44, 47, 48, 49, 54, 55, 50, 51, 52, 53, 56, 60, 61, 65, 66, 62, 63, 64, 67, 94, 68, 73, 74, 69, 70, 71, 72, 75, 93, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 200, 202, 105, 106, 107, 108, 109, 192, 95, 183, 97, 98, 99, 111, 113, 112, 114, 116, 118, 117, 193, 115, 119, 120, 121, 122, 123, 128, 124, 125, 126, 127, 196, 197, 194, 129, 195, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 182, 160, 161, 162, 163, 164, 181, 165, 166, 167, 180, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 198, 191 }
  uselistorder i8 31, { 7, 1, 2, 0, 3, 4, 8, 5, 6 }
  uselistorder i8 30, { 6, 0, 1, 2, 3, 7, 4, 5 }
  uselistorder i32* (i32*, i32*, i32)* @memmove, { 1, 0, 2 }
  uselistorder i32* @fp, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 40, 41, 42, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_13570.555 to i32*), { 4, 2, 3, 1, 0, 6, 5 }
  uselistorder [3 x i8]* @global_var_13570.555, { 1, 0 }
  uselistorder i8 58, { 6, 4, 5, 3, 2, 1, 0, 7, 8 }
  uselistorder i8 57, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 62, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 61, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 37, { 5, 3, 4, 2, 1, 0 }
  uselistorder i8 34, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 36, { 11, 12, 7, 8, 9, 10, 5, 6, 3, 4, 2, 0, 1 }
  uselistorder i8 35, { 12, 13, 8, 9, 10, 11, 6, 7, 4, 5, 2, 3, 0, 1 }
  uselistorder i32 (i32, i32*, i32, i32)* @send, { 20, 29, 18, 7, 25, 28, 2, 21, 11, 13, 1, 4, 3, 10, 9, 6, 5, 27, 26, 22, 12, 15, 19, 8, 14, 0, 24, 23, 17, 16, 30 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 1, 2, 3, 0 }
  uselistorder i8 -4, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @recv, { 5, 4, 1, 0, 2, 3, 6 }
  uselistorder i32 (i32)* @function_11d94, { 31, 30, 36, 44, 43, 35, 45, 42, 41, 40, 39, 38, 37, 34, 33, 32, 29, 28, 0, 27, 26, 25, 46, 24, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @function_127f0, { 2, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_11d68, { 1, 9, 0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 48, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 (i32)* @function_11e4c, { 32, 41, 40, 39, 38, 37, 36, 35, 34, 33, 31, 30, 0, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_1ba10.181 to i8*), { 4, 0, 3, 2, 1 }
  uselistorder i8* @global_var_1ba11.182, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %timeval*)* @select, { 1, 0, 2, 3 }
  uselistorder i32 284, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32* @r7, { 37, 38, 19, 20, 27, 28, 2, 18, 35, 21, 22, 23, 24, 25, 26, 4, 29, 3, 30, 31, 32, 33, 34, 36, 1, 39, 172, 173, 174, 175, 40, 0, 41, 42, 43, 44, 45, 46, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 17, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 156, 157, 158, 159, 161, 162, 163, 176, 177, 178, 179, 184, 180, 181, 182, 183, 185, 186, 187, 164, 165, 166, 167, 168, 169, 170, 171 }
  uselistorder i32 1544, { 1, 0 }
  uselistorder i32* @sp, { 2, 0, 3, 1 }
  uselistorder i32 1672, { 2, 0, 1 }
  uselistorder void (i32)* @exit, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32 ()* @function_f694, { 3, 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32, %sockaddr*, i32*)* @recvfrom, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32*, i32, i32, %sockaddr*, i32)* @sendto, { 4, 7, 3, 6, 2, 1, 5, 0, 8, 9 }
  uselistorder i32 16384, { 32, 49, 33, 50, 34, 51, 35, 52, 36, 53, 37, 54, 13, 55, 12, 66, 0, 47, 1, 48, 2, 56, 3, 57, 4, 58, 5, 59, 6, 60, 7, 61, 8, 62, 9, 63, 30, 64, 31, 65, 28, 68, 29, 69, 26, 27, 67, 38, 70, 10, 71, 11, 72, 14, 80, 39, 81, 16, 73, 42, 74, 41, 75, 43, 76, 44, 77, 15, 78, 40, 79, 17, 82, 18, 83, 19, 84, 45, 46, 20, 85, 21, 86, 23, 87, 22, 88, 24, 89, 25, 90 }
  uselistorder i32 (i32, i32, i32, i32)* @function_d430, { 8, 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @function_d3d4, { 10, 9, 8, 7, 6, 2, 5, 4, 3, 1, 0 }
  uselistorder i8* @global_var_1b9f4.538, { 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 29, { 3, 4, 2, 0, 1 }
  uselistorder i32 28, { 3, 4, 5, 6, 7, 8, 9, 0, 2, 11, 10, 12, 13, 14, 15, 16, 17, 18, 1 }
  uselistorder i32 223, { 3, 0, 1, 2 }
  uselistorder i32 18, { 2, 10, 3, 11, 4, 12, 9, 5, 6, 7, 13, 8, 14, 0, 15, 1, 16 }
  uselistorder i32 31, { 17, 24, 14, 25, 15, 26, 16, 27, 13, 28, 18, 12, 29, 19, 4, 0, 20, 30, 21, 31, 22, 32, 5, 1, 23, 6, 7, 2, 8, 9, 3, 10, 11 }
  uselistorder i32 30, { 0, 5, 4, 1, 6, 2, 7, 3, 8 }
  uselistorder i32 192, { 2, 3, 4, 0, 1 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32* @r8, { 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 1, 43, 2, 44, 45, 46, 47, 48, 49, 50, 52, 51, 53, 54, 55, 57, 58, 56, 59, 60, 61, 62, 64, 63, 65, 66, 67, 69, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 91, 92, 93, 94, 96, 97, 98, 90 }
  uselistorder i32 20, { 20, 11, 21, 12, 22, 13, 23, 24, 0, 25, 1, 26, 19, 14, 27, 28, 29, 15, 16, 17, 30, 33, 31, 2, 32, 34, 35, 36, 37, 39, 40, 38, 3, 41, 42, 43, 44, 45, 46, 49, 50, 47, 4, 48, 51, 52, 53, 54, 55, 56, 59, 60, 57, 5, 58, 61, 62, 63, 64, 67, 68, 65, 6, 66, 69, 70, 71, 72, 73, 74, 77, 75, 18, 76, 78, 79, 80, 83, 8, 81, 7, 82, 84, 86, 89, 10, 87, 9, 88, 90, 85 }
  uselistorder i32 ptrtoint (i32* @global_var_13564.536 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1345c.492 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_13424.480 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_133e8.464 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_133c8.456 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_133c0.454 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_13388.438 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_13378.434 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_13370.432 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_13354.424 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_132cc.396 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_132c4.394 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_132bc.390 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_13298.382 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_13288.378 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1325c.368 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1324c.364 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_13244.362 to i32), { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_13210.348 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_131ec.338 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1318c.316 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_12ff8.306 to i32), { 0, 5, 1, 2, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_13110.288 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_130bc.270 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1309c.264 to i32), { 1, 7, 0, 8, 2, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_13090.262 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_13088.260 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_13080.258 to i32), { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_13074.254 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_13064.252 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_13054.248 to i32), { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_13190.244 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_13034.240 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1302c.238 to i32), { 1, 7, 2, 8, 0, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_13024.236 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_13018.234 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_13568.232 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_13010.230 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_13008.228 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_13000.226 to i32), { 0, 6, 3, 7, 1, 8, 2, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_12fec.222 to i32), { 0, 7, 1, 8, 2, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_12fdc.218 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_134e4.212 to i32), { 7, 46, 8, 47, 9, 48, 10, 49, 0, 50, 11, 51, 12, 52, 13, 53, 1, 54, 2, 55, 3, 56, 14, 57, 4, 58, 15, 59, 5, 60, 16, 61, 17, 62, 18, 63, 6, 64, 19, 65, 20, 66, 21, 67, 22, 68, 23, 69, 24, 70, 25, 71, 26, 72, 27, 73, 28, 74, 29, 75, 30, 76, 31, 77, 32, 78, 33, 79, 34, 80, 35, 81, 36, 82, 37, 83, 38, 84, 39, 85, 40, 86, 41, 42, 43, 87, 44, 88, 45, 89 }
  uselistorder i32 (i32, i32, i32)* @function_f768, { 193, 192, 191, 190, 189, 188, 187, 186, 185, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67 }
  uselistorder i32 ptrtoint (i32* @global_var_1349c.210 to i32), { 3, 16, 4, 17, 5, 18, 0, 19, 1, 20, 6, 21, 2, 22, 7, 23, 8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_13340.208 to i32), { 6, 57, 7, 58, 8, 59, 9, 60, 10, 61, 0, 62, 11, 63, 1, 64, 12, 65, 2, 66, 13, 67, 14, 68, 15, 69, 3, 70, 16, 71, 17, 72, 18, 73, 19, 74, 20, 75, 21, 76, 4, 77, 22, 78, 23, 79, 24, 80, 25, 81, 26, 82, 27, 83, 28, 84, 29, 85, 30, 86, 31, 87, 32, 88, 33, 89, 34, 90, 35, 91, 36, 92, 37, 93, 38, 94, 39, 95, 40, 96, 41, 97, 42, 98, 43, 99, 44, 100, 45, 46, 47, 101, 48, 102, 49, 103, 50, 104, 51, 105, 52, 106, 5, 107, 53, 108, 54, 109, 55, 110, 56, 111 }
  uselistorder i8* @global_var_1ba05.204, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1b9f8.195 to i32), { 3, 2, 4, 5, 0, 6, 1, 7, 8 }
  uselistorder i8 64, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder i8* @global_var_1ba04.196, { 1, 0 }
  uselistorder i32* @r6, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 27, 18, 17, 19, 20, 21, 22, 23, 28, 29, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 182, 183, 184, 185, 0, 38, 39, 40, 41, 42, 43, 44, 45, 46, 2, 47, 48, 49, 50, 51, 5, 52, 53, 54, 55, 56, 57, 58, 1, 59, 60, 61, 3, 62, 63, 66, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 98, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 134, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 4, 151, 152, 153, 154, 155, 156, 157, 158, 159, 167, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 186, 187, 188, 189, 197, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 171, 175, 172, 173, 174, 176, 177, 6, 178, 179, 180, 181 }
  uselistorder i32 40, { 2, 3, 4, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1b9e4.191 to i32), { 0, 2, 1, 4, 5, 3, 6, 7, 8, 9 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 65280, { 26, 1, 13, 0, 2, 3, 27, 4, 5, 28, 20, 21, 6, 29, 7, 30, 14, 15, 31, 8, 32, 33, 16, 9, 34, 22, 17, 35, 36, 37, 38, 10, 23, 24, 25, 39, 11, 40, 41, 18, 42, 43, 12, 44, 45, 19, 46 }
  uselistorder i32 ()* @function_ef90, { 67, 66, 65, 64, 63, 62, 61, 57, 60, 59, 58, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 16, 15, 14, 13, 12, 11, 10, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 9, 8, 7, 6, 5, 4, 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32*, i32)* @setsockopt, { 3, 2, 8, 7, 9, 1, 4, 0, 6, 5, 10 }
  uselistorder i32 2048, { 4, 2, 6, 7, 0, 1, 5, 3, 8, 9 }
  uselistorder i32 (i32, i32, ...)* @fcntl, { 0, 4, 2, 1, 6, 5, 3, 7, 10, 9, 8, 11, 12 }
  uselistorder i32* @global_var_1ba38.189, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_1ba34.187, { 1, 2, 3, 4, 0 }
  uselistorder i32* (i32, i32)* @calloc, { 12, 17, 11, 10, 7, 9, 8, 27, 26, 6, 5, 4, 1, 0, 3, 2, 31, 30, 21, 33, 18, 22, 32, 15, 20, 19, 14, 13, 25, 24, 23, 29, 28, 16, 34 }
  uselistorder i32 288, { 1, 2, 5, 6, 0, 7, 3, 4, 8 }
  uselistorder i32* @global_var_1ba14.175, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32*)* @time, { 24, 10, 9, 11, 23, 22, 21, 8, 7, 6, 20, 19, 18, 5, 4, 15, 12, 3, 2, 1, 0, 17, 16, 14, 13, 25 }
  uselistorder i32 (i32)* @function_efe8, { 1, 0 }
  uselistorder i32* @global_var_1ba18.101, { 3, 4, 0, 1, 2, 5, 6, 13, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 ()* @function_129e4, { 2, 1, 0 }
  uselistorder i32* @global_var_1ba3c.173, { 0, 2, 1 }
  uselistorder i32 ()* @fork, { 2, 1, 3, 4, 5, 0, 6 }
  uselistorder i32* @sl, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 63, 64, 65, 66, 67 }
  uselistorder i32* @sb, { 2, 3, 6, 0, 1, 4, 5, 10, 9, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 38, 39, 41, 42, 53, 56, 54, 55, 57, 58, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32* @r5, { 46, 37, 11, 12, 54, 55, 56, 57, 13, 58, 42, 59, 60, 61, 4, 3, 62, 63, 14, 15, 16, 17, 18, 38, 43, 8, 9, 10, 47, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 48, 49, 50, 51, 44, 45, 64, 65, 66, 67, 68, 52, 53, 69, 70, 71, 72, 5, 73, 74, 75, 76, 77, 340, 341, 342, 343, 344, 345, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 1, 96, 97, 98, 99, 100, 101, 102, 105, 103, 104, 0, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 2, 124, 125, 126, 127, 128, 129, 6, 130, 131, 132, 133, 134, 135, 136, 137, 7, 138, 139, 140, 141, 142, 143, 144, 150, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 177, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 200, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 235, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 267, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 296, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 346, 347, 348, 349, 350, 351, 360, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 339 }
  uselistorder label %dec_label_pc_11220.backedge.thread481, { 9, 4, 8, 2, 7, 3, 6, 1, 5, 0 }
  uselistorder label %dec_label_pc_11220.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11d14, { 1, 0 }
  uselistorder label %bb368, { 1, 0 }
  uselistorder label %dec_label_pc_11af8, { 1, 0 }
  uselistorder label %dec_label_pc_11a3c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11970, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1195c, { 1, 0 }
  uselistorder label %dec_label_pc_11904, { 2, 3, 1, 11, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_118e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11764, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_11750, { 1, 0 }
  uselistorder label %dec_label_pc_116b0, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1169c, { 1, 0 }
  uselistorder label %dec_label_pc_115fc, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_115e8, { 1, 0 }
  uselistorder label %dec_label_pc_11548, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_11534, { 1, 0 }
  uselistorder label %dec_label_pc_114a8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11494, { 1, 0 }
  uselistorder label %dec_label_pc_11424, { 1, 0 }
  uselistorder label %dec_label_pc_11408, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_113f4, { 1, 0 }
  uselistorder label %dec_label_pc_113b0, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_113a0, { 5, 2, 3, 4, 1, 0 }
  uselistorder label %bb342, { 2, 1, 0 }
  uselistorder label %bb339, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11300, { 1, 0 }
  uselistorder label %dec_label_pc_11300.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11288, { 1, 0 }
  uselistorder label %bb336, { 1, 0 }
  uselistorder label %dec_label_pc_11238, { 1, 0 }
  uselistorder label %dec_label_pc_11228, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11228.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1121c.loopexit, { 5, 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1117c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11168, { 1, 0 }
  uselistorder label %dec_label_pc_11048, { 1, 7, 8, 4, 5, 0, 6, 2, 3 }
  uselistorder label %dec_label_pc_11024, { 1, 0 }
  uselistorder label %bb327, { 1, 0 }
  uselistorder label %bb325, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_10e8c.dec_label_pc_10e8c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10e70.dec_label_pc_10e70_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10e68, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10e60, { 1, 0 }
  uselistorder label %dec_label_pc_10e14, { 1, 0 }
  uselistorder label %dec_label_pc_10cb4, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10ca8, { 1, 0 }
  uselistorder label %.thread49, { 2, 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_10b0c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10ae8, { 1, 0 }
  uselistorder label %dec_label_pc_10adc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10ab8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10a94, { 1, 0 }
  uselistorder label %bb295, { 1, 0 }
  uselistorder label %dec_label_pc_10a40, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_fce4, { 1, 0 }
}

define i32 @function_11d68(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11d68:
  %v3_11d6c = mul i32 %arg1, 8
  %v2_11d70 = add i32 %v3_11d6c, ptrtoint (i32* @global_var_1ba44.561 to i32)
  %v2_11d74 = icmp eq i32* %arg2, null
  br i1 %v2_11d74, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11d68
  %v3_11d8011 = inttoptr i32 %v2_11d70 to i32*
  %v4_11d8012 = load i32, i32* %v3_11d8011, align 4
  br label %bb15

bb:                                               ; preds = %dec_label_pc_11d68
  %v2_11d78 = add i32 %v3_11d6c, add (i32 ptrtoint (i32* @global_var_1ba44.561 to i32), i32 5)
  %v3_11d78 = inttoptr i32 %v2_11d78 to i8*
  %v4_11d78 = load i8, i8* %v3_11d78, align 1
  %v5_11d78 = zext i8 %v4_11d78 to i32
  %v2_11d7c = add i32 %v3_11d6c, add (i32 ptrtoint (i32* @global_var_1ba44.561 to i32), i32 4)
  %v3_11d7c = inttoptr i32 %v2_11d7c to i8*
  %v4_11d7c = load i8, i8* %v3_11d7c, align 4
  %v5_11d7c = zext i8 %v4_11d7c to i32
  %v3_11d80 = inttoptr i32 %v2_11d70 to i32*
  %v4_11d80 = load i32, i32* %v3_11d80, align 4
  %v5_11d84 = mul nuw nsw i32 %v5_11d78, 256
  %v6_11d84 = or i32 %v5_11d7c, %v5_11d84
  store i32 %v6_11d84, i32* %arg2, align 4
  br label %bb15

bb15:                                             ; preds = %.thread, %bb
  %v4_11d80714 = phi i32 [ %v4_11d8012, %.thread ], [ %v4_11d80, %bb ]
  ret i32 %v4_11d80714

; uselistorder directives
  uselistorder i32 %v2_11d70, { 1, 0 }
  uselistorder i32 %v3_11d6c, { 2, 1, 0 }
  uselistorder i32* null, { 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 2, 28, 29, 30, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_11d94(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d94:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11d94 = mul i32 %arg1, 8
  %v3_11d98 = load i32, i32* @r4, align 4
  store i32 %v3_11d98, i32* %stack_var_-20, align 4
  %v3_11da8 = and i32 %v3_11d94, 2040
  %v2_11dac = add i32 %v3_11da8, ptrtoint (i32* @global_var_1ba44.561 to i32)
  store i32 %v2_11dac, i32* %lr.global-to-local, align 4
  %v1_11db4 = add i32 %v3_11da8, add (i32 ptrtoint (i32* @global_var_1ba44.561 to i32), i32 4)
  store i32 %v1_11db4, i32* %r7.global-to-local, align 4
  %v2_11db8 = load i32, i32* @global_var_1b99c.564, align 4
  %v2_11dbc = inttoptr i32 %v1_11db4 to i8*
  %v3_11dbc = load i8, i8* %v2_11dbc, align 4
  %v4_11dbc = zext i8 %v3_11dbc to i32
  store i32 %v4_11dbc, i32* @r1, align 4
  %v1_11dc0 = add i32 %v3_11da8, add (i32 ptrtoint (i32* @global_var_1ba44.561 to i32), i32 5)
  %v2_11dc0 = inttoptr i32 %v1_11dc0 to i8*
  %v3_11dc0 = load i8, i8* %v2_11dc0, align 1
  %v4_11dc0 = zext i8 %v3_11dc0 to i32
  %v3_11dc4 = udiv i32 %v2_11db8, 256
  %v4_11dc8 = mul nuw nsw i32 %v4_11dc0, 256
  %v5_11dc8 = or i32 %v4_11dc8, %v4_11dbc
  %v7_11dc8 = icmp eq i32 %v5_11dc8, 0
  store i1 %v7_11dc8, i1* @cpsr_z, align 1
  %v3_11dcc = udiv i32 %v2_11db8, 65536
  %v1_11dd0 = urem i32 %v3_11dc4, 256
  store i32 %v1_11dd0, i32* %r6.global-to-local, align 4
  %v1_11dd4 = urem i32 %v3_11dcc, 256
  store i32 %v1_11dd4, i32* %r5.global-to-local, align 4
  %v3_11dd8 = udiv i32 %v2_11db8, 16777216
  store i32 %v3_11dd8, i32* %r4.global-to-local, align 4
  %v1_11ddc = urem i32 %v2_11db8, 256
  br i1 %v7_11dc8, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_11d94
  store i32 %v3_11d98, i32* @r4, align 4
  ret i32 %v1_11ddc

bb8:                                              ; preds = %dec_label_pc_11d94
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11de8

dec_label_pc_11de8:                               ; preds = %dec_label_pc_11de8, %bb8
  %v2_11df4 = phi i32 [ %v1_11e30, %dec_label_pc_11de8 ], [ 0, %bb8 ]
  %v0_11de8 = phi i32 [ %v0_11e28, %dec_label_pc_11de8 ], [ %v2_11dac, %bb8 ]
  %v1_11de8 = inttoptr i32 %v0_11de8 to i32*
  %v2_11de8 = load i32, i32* %v1_11de8, align 4
  %v2_11dec = add i32 %v2_11de8, %v2_11df4
  %v3_11dec = inttoptr i32 %v2_11dec to i8*
  %v4_11dec = load i8, i8* %v3_11dec, align 1
  %v6_11dec = zext i8 %v4_11dec to i32
  %v2_11df0 = xor i32 %v6_11dec, %v1_11ddc
  %v1_11df4 = trunc i32 %v2_11df0 to i8
  store i8 %v1_11df4, i8* %v3_11dec, align 1
  %v0_11df8 = load i32, i32* %lr.global-to-local, align 4
  %v1_11df8 = inttoptr i32 %v0_11df8 to i32*
  %v2_11df8 = load i32, i32* %v1_11df8, align 4
  %v0_11dfc = load i32, i32* %ip.global-to-local, align 4
  %v2_11dfc = add i32 %v0_11dfc, %v2_11df8
  %v3_11dfc = inttoptr i32 %v2_11dfc to i8*
  %v4_11dfc = load i8, i8* %v3_11dfc, align 1
  %v6_11dfc = zext i8 %v4_11dfc to i32
  %v0_11e00 = load i32, i32* %r6.global-to-local, align 4
  %v2_11e00 = xor i32 %v0_11e00, %v6_11dfc
  %v1_11e04 = trunc i32 %v2_11e00 to i8
  store i8 %v1_11e04, i8* %v3_11dfc, align 1
  %v0_11e08 = load i32, i32* %lr.global-to-local, align 4
  %v1_11e08 = inttoptr i32 %v0_11e08 to i32*
  %v2_11e08 = load i32, i32* %v1_11e08, align 4
  %v0_11e0c = load i32, i32* %ip.global-to-local, align 4
  %v2_11e0c = add i32 %v0_11e0c, %v2_11e08
  %v3_11e0c = inttoptr i32 %v2_11e0c to i8*
  %v4_11e0c = load i8, i8* %v3_11e0c, align 1
  %v6_11e0c = zext i8 %v4_11e0c to i32
  %v0_11e10 = load i32, i32* %r5.global-to-local, align 4
  %v2_11e10 = xor i32 %v0_11e10, %v6_11e0c
  %v1_11e14 = trunc i32 %v2_11e10 to i8
  store i8 %v1_11e14, i8* %v3_11e0c, align 1
  %v0_11e18 = load i32, i32* %lr.global-to-local, align 4
  %v1_11e18 = inttoptr i32 %v0_11e18 to i32*
  %v2_11e18 = load i32, i32* %v1_11e18, align 4
  store i32 %v2_11e18, i32* @r1, align 4
  %v0_11e1c = load i32, i32* %ip.global-to-local, align 4
  %v2_11e1c = add i32 %v0_11e1c, %v2_11e18
  %v3_11e1c = inttoptr i32 %v2_11e1c to i8*
  %v4_11e1c = load i8, i8* %v3_11e1c, align 1
  %v6_11e1c = zext i8 %v4_11e1c to i32
  %v0_11e20 = load i32, i32* %r4.global-to-local, align 4
  %v2_11e20 = xor i32 %v0_11e20, %v6_11e1c
  %v1_11e24 = trunc i32 %v2_11e20 to i8
  store i8 %v1_11e24, i8* %v3_11e1c, align 1
  %v0_11e28 = load i32, i32* %lr.global-to-local, align 4
  %v1_11e28 = add i32 %v0_11e28, 4
  %v2_11e28 = inttoptr i32 %v1_11e28 to i8*
  %v3_11e28 = load i8, i8* %v2_11e28, align 1
  %v4_11e28 = zext i8 %v3_11e28 to i32
  %v0_11e2c = load i32, i32* %r7.global-to-local, align 4
  %v1_11e2c = add i32 %v0_11e2c, 1
  %v2_11e2c = inttoptr i32 %v1_11e2c to i8*
  %v3_11e2c = load i8, i8* %v2_11e2c, align 1
  %v4_11e2c = zext i8 %v3_11e2c to i32
  %v0_11e30 = load i32, i32* %ip.global-to-local, align 4
  %v1_11e30 = add i32 %v0_11e30, 1
  store i32 %v1_11e30, i32* %ip.global-to-local, align 4
  %v4_11e34 = mul nuw nsw i32 %v4_11e2c, 256
  %v5_11e34 = or i32 %v4_11e34, %v4_11e28
  %v9_11e38 = icmp eq i32 %v5_11e34, %v1_11e30
  store i1 %v9_11e38, i1* @cpsr_z, align 1
  %v8_11e3c = icmp sgt i32 %v5_11e34, %v1_11e30
  br i1 %v8_11e3c, label %dec_label_pc_11de8, label %dec_label_pc_11e40

dec_label_pc_11e40:                               ; preds = %dec_label_pc_11de8
  %v2_11e40 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11e40, i32* @r4, align 4
  ret i32 %v1_11ddc

; uselistorder directives
  uselistorder i32 %v1_11e30, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11e28, { 1, 0 }
  uselistorder i32 %v1_11ddc, { 1, 2, 0 }
  uselistorder i32 %v2_11db8, { 3, 0, 1, 2 }
}

define i32 @function_11e4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e4c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11e4c = mul i32 %arg1, 8
  %v3_11e50 = load i32, i32* @r4, align 4
  store i32 %v3_11e50, i32* %stack_var_-20, align 4
  %v3_11e60 = and i32 %v3_11e4c, 2040
  %v2_11e64 = add i32 %v3_11e60, ptrtoint (i32* @global_var_1ba44.561 to i32)
  store i32 %v2_11e64, i32* %lr.global-to-local, align 4
  %v1_11e6c = add i32 %v3_11e60, add (i32 ptrtoint (i32* @global_var_1ba44.561 to i32), i32 4)
  store i32 %v1_11e6c, i32* %r7.global-to-local, align 4
  %v2_11e70 = load i32, i32* @global_var_1b99c.564, align 4
  %v2_11e74 = inttoptr i32 %v1_11e6c to i8*
  %v3_11e74 = load i8, i8* %v2_11e74, align 4
  %v4_11e74 = zext i8 %v3_11e74 to i32
  %v1_11e78 = add i32 %v3_11e60, add (i32 ptrtoint (i32* @global_var_1ba44.561 to i32), i32 5)
  %v2_11e78 = inttoptr i32 %v1_11e78 to i8*
  %v3_11e78 = load i8, i8* %v2_11e78, align 1
  %v4_11e78 = zext i8 %v3_11e78 to i32
  %v3_11e7c = udiv i32 %v2_11e70, 256
  %v4_11e80 = mul nuw nsw i32 %v4_11e78, 256
  %v5_11e80 = or i32 %v4_11e80, %v4_11e74
  %v7_11e80 = icmp eq i32 %v5_11e80, 0
  %v3_11e84 = udiv i32 %v2_11e70, 65536
  %v1_11e88 = urem i32 %v3_11e7c, 256
  store i32 %v1_11e88, i32* %r6.global-to-local, align 4
  %v1_11e8c = urem i32 %v3_11e84, 256
  store i32 %v1_11e8c, i32* %r5.global-to-local, align 4
  %v3_11e90 = udiv i32 %v2_11e70, 16777216
  store i32 %v3_11e90, i32* %r4.global-to-local, align 4
  %v1_11e94 = urem i32 %v2_11e70, 256
  br i1 %v7_11e80, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_11e4c
  store i32 %v3_11e50, i32* @r4, align 4
  ret i32 %v1_11e94

bb8:                                              ; preds = %dec_label_pc_11e4c
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11ea0

dec_label_pc_11ea0:                               ; preds = %dec_label_pc_11ea0, %bb8
  %v2_11eac = phi i32 [ %v1_11ee8, %dec_label_pc_11ea0 ], [ 0, %bb8 ]
  %v0_11ea0 = phi i32 [ %v0_11ee0, %dec_label_pc_11ea0 ], [ %v2_11e64, %bb8 ]
  %v1_11ea0 = inttoptr i32 %v0_11ea0 to i32*
  %v2_11ea0 = load i32, i32* %v1_11ea0, align 4
  %v2_11ea4 = add i32 %v2_11ea0, %v2_11eac
  %v3_11ea4 = inttoptr i32 %v2_11ea4 to i8*
  %v4_11ea4 = load i8, i8* %v3_11ea4, align 1
  %v6_11ea4 = zext i8 %v4_11ea4 to i32
  %v2_11ea8 = xor i32 %v6_11ea4, %v1_11e94
  %v1_11eac = trunc i32 %v2_11ea8 to i8
  store i8 %v1_11eac, i8* %v3_11ea4, align 1
  %v0_11eb0 = load i32, i32* %lr.global-to-local, align 4
  %v1_11eb0 = inttoptr i32 %v0_11eb0 to i32*
  %v2_11eb0 = load i32, i32* %v1_11eb0, align 4
  %v0_11eb4 = load i32, i32* %ip.global-to-local, align 4
  %v2_11eb4 = add i32 %v0_11eb4, %v2_11eb0
  %v3_11eb4 = inttoptr i32 %v2_11eb4 to i8*
  %v4_11eb4 = load i8, i8* %v3_11eb4, align 1
  %v6_11eb4 = zext i8 %v4_11eb4 to i32
  %v0_11eb8 = load i32, i32* %r6.global-to-local, align 4
  %v2_11eb8 = xor i32 %v0_11eb8, %v6_11eb4
  %v1_11ebc = trunc i32 %v2_11eb8 to i8
  store i8 %v1_11ebc, i8* %v3_11eb4, align 1
  %v0_11ec0 = load i32, i32* %lr.global-to-local, align 4
  %v1_11ec0 = inttoptr i32 %v0_11ec0 to i32*
  %v2_11ec0 = load i32, i32* %v1_11ec0, align 4
  %v0_11ec4 = load i32, i32* %ip.global-to-local, align 4
  %v2_11ec4 = add i32 %v0_11ec4, %v2_11ec0
  %v3_11ec4 = inttoptr i32 %v2_11ec4 to i8*
  %v4_11ec4 = load i8, i8* %v3_11ec4, align 1
  %v6_11ec4 = zext i8 %v4_11ec4 to i32
  %v0_11ec8 = load i32, i32* %r5.global-to-local, align 4
  %v2_11ec8 = xor i32 %v0_11ec8, %v6_11ec4
  %v1_11ecc = trunc i32 %v2_11ec8 to i8
  store i8 %v1_11ecc, i8* %v3_11ec4, align 1
  %v0_11ed0 = load i32, i32* %lr.global-to-local, align 4
  %v1_11ed0 = inttoptr i32 %v0_11ed0 to i32*
  %v2_11ed0 = load i32, i32* %v1_11ed0, align 4
  %v0_11ed4 = load i32, i32* %ip.global-to-local, align 4
  %v2_11ed4 = add i32 %v0_11ed4, %v2_11ed0
  %v3_11ed4 = inttoptr i32 %v2_11ed4 to i8*
  %v4_11ed4 = load i8, i8* %v3_11ed4, align 1
  %v6_11ed4 = zext i8 %v4_11ed4 to i32
  %v0_11ed8 = load i32, i32* %r4.global-to-local, align 4
  %v2_11ed8 = xor i32 %v0_11ed8, %v6_11ed4
  %v1_11edc = trunc i32 %v2_11ed8 to i8
  store i8 %v1_11edc, i8* %v3_11ed4, align 1
  %v0_11ee0 = load i32, i32* %lr.global-to-local, align 4
  %v1_11ee0 = add i32 %v0_11ee0, 4
  %v2_11ee0 = inttoptr i32 %v1_11ee0 to i8*
  %v3_11ee0 = load i8, i8* %v2_11ee0, align 1
  %v4_11ee0 = zext i8 %v3_11ee0 to i32
  %v0_11ee4 = load i32, i32* %r7.global-to-local, align 4
  %v1_11ee4 = add i32 %v0_11ee4, 1
  %v2_11ee4 = inttoptr i32 %v1_11ee4 to i8*
  %v3_11ee4 = load i8, i8* %v2_11ee4, align 1
  %v4_11ee4 = zext i8 %v3_11ee4 to i32
  %v0_11ee8 = load i32, i32* %ip.global-to-local, align 4
  %v1_11ee8 = add i32 %v0_11ee8, 1
  store i32 %v1_11ee8, i32* %ip.global-to-local, align 4
  %v4_11eec = mul nuw nsw i32 %v4_11ee4, 256
  %v5_11eec = or i32 %v4_11eec, %v4_11ee0
  %v8_11ef4 = icmp sgt i32 %v5_11eec, %v1_11ee8
  br i1 %v8_11ef4, label %dec_label_pc_11ea0, label %dec_label_pc_11ef8

dec_label_pc_11ef8:                               ; preds = %dec_label_pc_11ea0
  %v2_11ef8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11ef8, i32* @r4, align 4
  ret i32 %v1_11e94

; uselistorder directives
  uselistorder i32 %v1_11ee8, { 1, 2, 0 }
  uselistorder i32 %v0_11ee0, { 1, 0 }
  uselistorder i32 %v1_11e94, { 1, 2, 0 }
  uselistorder i32 %v2_11e70, { 3, 0, 1, 2 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 9, 6, 8, 7, 10, 12, 11, 14, 13, 16, 15, 17, 19, 18, 20, 26, 21, 27, 22, 28, 23, 29, 30, 24, 31, 25, 33, 32, 35, 34, 37, 36, 39, 38, 40, 41, 42, 44, 43, 45, 46, 47, 50, 48, 51, 49, 52, 54, 53, 55, 56, 58, 57, 62, 59, 63, 60, 64, 61, 66, 65, 67, 68, 69, 72, 70, 71, 75, 73, 76, 74, 77, 83, 78, 84, 79, 85, 80, 82, 86, 87, 88, 81, 89, 90, 96, 91, 97, 92, 98, 93, 95, 99, 100, 101, 94, 102 }
}

define i32 @function_11f04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11f04:
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11f04 = load i32, i32* @r4, align 4
  store i32 %v3_11f04, i32* %stack_var_-36, align 4
  %v1_11f0c = call i32* @malloc(i32 9)
  %v2_11f0c = ptrtoint i32* %v1_11f0c to i32
  store i32 ptrtoint ([10 x i8]* @global_var_13580.568 to i32), i32* %r8.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v2_11f0c, i32* %r6.global-to-local, align 4
  %v4_11f28 = call i32 @function_127a8(i32 %v2_11f0c, i32 ptrtoint ([10 x i8]* @global_var_13580.568 to i32), i32 9)
  store i8 9, i8* bitcast (i32* @global_var_1ba60.570 to i8*), align 4
  %v0_11f38 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11f38, i32* @global_var_1ba5c.571, align 4
  %v0_11f3c = load i32, i32* %r5.global-to-local, align 4
  %v1_11f3c = trunc i32 %v0_11f3c to i8
  store i8 %v1_11f3c, i8* bitcast (i32* @global_var_1ba61.572 to i8*), align 4
  %v1_11f40 = call i32* @malloc(i32 2)
  %v2_11f40 = ptrtoint i32* %v1_11f40 to i32
  store i32 2, i32* %r6.global-to-local, align 4
  store i32 %v2_11f40, i32* %r7.global-to-local, align 4
  %v4_11f54 = call i32 @function_127a8(i32 %v2_11f40, i32 ptrtoint ([3 x i8]* @global_var_1358c.574 to i32), i32 2)
  store i32 %v2_11f40, i32* @global_var_1ba64.575, align 4
  %v0_11f60 = load i32, i32* %r6.global-to-local, align 4
  %v1_11f60 = trunc i32 %v0_11f60 to i8
  store i8 %v1_11f60, i8* bitcast (i32* @global_var_1ba68.576 to i8*), align 4
  %v0_11f64 = load i32, i32* %r5.global-to-local, align 4
  %v1_11f64 = trunc i32 %v0_11f64 to i8
  store i8 %v1_11f64, i8* bitcast (i32* @global_var_1ba69.577 to i8*), align 4
  %v1_11f68 = call i32* @malloc(i32 9)
  %v3_11f68 = ptrtoint i32* %v1_11f68 to i32
  %v0_11f6c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v3_11f68, i32* %r7.global-to-local, align 4
  %v4_11f78 = call i32 @function_127a8(i32 %v3_11f68, i32 %v0_11f6c, i32 9)
  %v0_11f80 = load i32, i32* %r6.global-to-local, align 4
  store i8 9, i8* bitcast (i32* @global_var_1bad8.578 to i8*), align 4
  store i32 %v3_11f68, i32* @global_var_1bad4.579, align 4
  %v0_11f8c = load i32, i32* %r5.global-to-local, align 4
  %v1_11f8c = trunc i32 %v0_11f8c to i8
  store i8 %v1_11f8c, i8* bitcast (i32* @global_var_1bad9.580 to i8*), align 4
  %v1_11f90 = call i32* @malloc(i32 %v0_11f80)
  %v3_11f90 = ptrtoint i32* %v1_11f90 to i32
  %v0_11f94 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v3_11f90, i32* %r7.global-to-local, align 4
  %v3_11fa0 = call i32 @function_127a8(i32 %v3_11f90, i32 ptrtoint (i32* @global_var_13590.582 to i32), i32 %v0_11f94)
  store i32 %v3_11f90, i32* @global_var_1badc.583, align 4
  %v0_11fac = load i32, i32* %r6.global-to-local, align 4
  %v1_11fac = trunc i32 %v0_11fac to i8
  store i8 %v1_11fac, i8* bitcast (i32* @global_var_1bae0.584 to i8*), align 4
  %v0_11fb0 = load i32, i32* %r5.global-to-local, align 4
  %v1_11fb0 = trunc i32 %v0_11fb0 to i8
  store i8 %v1_11fb0, i8* bitcast (i32* @global_var_1bae1.585 to i8*), align 4
  %v1_11fb4 = call i32* @malloc(i32 15)
  %v3_11fb4 = ptrtoint i32* %v1_11fb4 to i32
  store i32 15, i32* %r7.global-to-local, align 4
  store i32 %v3_11fb4, i32* %r6.global-to-local, align 4
  %v3_11fc8 = call i32 @function_127a8(i32 %v3_11fb4, i32 ptrtoint (i32* @global_var_13594.587 to i32), i32 15)
  %v0_11fd0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11fd0, i32* @global_var_1ba54.588, align 4
  store i8 15, i8* bitcast (i32* @global_var_1ba58.589 to i8*), align 4
  %v0_11fd8 = load i32, i32* %r5.global-to-local, align 4
  %v1_11fd8 = trunc i32 %v0_11fd8 to i8
  store i8 %v1_11fd8, i8* bitcast (i32* @global_var_1ba59.590 to i8*), align 4
  %v1_11fdc = call i32* @malloc(i32 7)
  %v2_11fdc = ptrtoint i32* %v1_11fdc to i32
  store i32 7, i32* %r8.global-to-local, align 4
  store i32 %v2_11fdc, i32* %r6.global-to-local, align 4
  %v4_11ff0 = call i32 @function_127a8(i32 %v2_11fdc, i32 ptrtoint ([8 x i8]* @global_var_135a4.592 to i32), i32 7)
  %v0_11ff8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11ff8, i32* @global_var_1ba74.593, align 4
  store i8 7, i8* bitcast (i32* @global_var_1ba78.594 to i8*), align 4
  %v0_12000 = load i32, i32* %r5.global-to-local, align 4
  %v1_12000 = trunc i32 %v0_12000 to i8
  store i8 %v1_12000, i8* bitcast (i32* @global_var_1ba79.595 to i8*), align 4
  %v1_12004 = call i32* @malloc(i32 5)
  %v3_12004 = ptrtoint i32* %v1_12004 to i32
  store i32 %v3_12004, i32* %r6.global-to-local, align 4
  %v4_12014 = call i32 @function_127a8(i32 %v3_12004, i32 ptrtoint ([6 x i8]* @global_var_135ac.597 to i32), i32 5)
  store i8 5, i8* bitcast (i32* @global_var_1ba80.598 to i8*), align 4
  %v0_12024 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12024, i32* @global_var_1ba7c.599, align 4
  %v0_12028 = load i32, i32* %r5.global-to-local, align 4
  %v1_12028 = trunc i32 %v0_12028 to i8
  store i8 %v1_12028, i8* bitcast (i32* @global_var_1ba81.600 to i8*), align 4
  %v1_1202c = call i32* @malloc(i32 4)
  %v3_1202c = ptrtoint i32* %v1_1202c to i32
  store i32 %v3_1202c, i32* %r6.global-to-local, align 4
  %v4_1203c = call i32 @function_127a8(i32 %v3_1202c, i32 ptrtoint ([5 x i8]* @global_var_135b4.602 to i32), i32 4)
  store i8 4, i8* bitcast (i32* @global_var_1ba88.603 to i8*), align 4
  %v0_1204c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1204c, i32* @global_var_1ba84.604, align 4
  %v0_12050 = load i32, i32* %r5.global-to-local, align 4
  %v1_12050 = trunc i32 %v0_12050 to i8
  store i8 %v1_12050, i8* bitcast (i32* @global_var_1ba89.605 to i8*), align 4
  %v1_12054 = call i32* @malloc(i32 14)
  %v2_12054 = ptrtoint i32* %v1_12054 to i32
  store i32 14, i32* %sl.global-to-local, align 4
  store i32 %v2_12054, i32* %r6.global-to-local, align 4
  %v4_12068 = call i32 @function_127a8(i32 %v2_12054, i32 ptrtoint ([15 x i8]* @global_var_135bc.607 to i32), i32 14)
  %v0_12070 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12070, i32* @global_var_1ba8c.608, align 4
  store i8 14, i8* bitcast (i32* @global_var_1ba90.609 to i8*), align 4
  %v0_12078 = load i32, i32* %r5.global-to-local, align 4
  %v1_12078 = trunc i32 %v0_12078 to i8
  store i8 %v1_12078, i8* bitcast (i32* @global_var_1ba91.610 to i8*), align 4
  %v1_1207c = call i32* @malloc(i32 6)
  %v3_1207c = ptrtoint i32* %v1_1207c to i32
  store i32 %v3_1207c, i32* %r6.global-to-local, align 4
  %v4_1208c = call i32 @function_127a8(i32 %v3_1207c, i32 ptrtoint ([7 x i8]* @global_var_135cc.612 to i32), i32 6)
  store i8 6, i8* bitcast (i32* @global_var_1ba98.613 to i8*), align 4
  %v0_1209c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1209c, i32* @global_var_1ba94.614, align 4
  %v0_120a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_120a0 = trunc i32 %v0_120a0 to i8
  store i8 %v1_120a0, i8* bitcast (i32* @global_var_1ba99.615 to i8*), align 4
  %v1_120a4 = call i32* @malloc(i32 8)
  %v2_120a4 = ptrtoint i32* %v1_120a4 to i32
  store i32 8, i32* %sb.global-to-local, align 4
  store i32 %v2_120a4, i32* %r6.global-to-local, align 4
  %v4_120b8 = call i32 @function_127a8(i32 %v2_120a4, i32 ptrtoint ([9 x i8]* @global_var_135d4.617 to i32), i32 8)
  %v0_120bc = load i32, i32* %r8.global-to-local, align 4
  %v0_120c0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_120c0, i32* @global_var_1ba9c.618, align 4
  store i8 8, i8* bitcast (i32* @global_var_1baa0.619 to i8*), align 4
  %v0_120c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_120c8 = trunc i32 %v0_120c8 to i8
  store i8 %v1_120c8, i8* bitcast (i32* @global_var_1baa1.620 to i8*), align 4
  %v1_120cc = call i32* @malloc(i32 %v0_120bc)
  %v3_120cc = ptrtoint i32* %v1_120cc to i32
  %v0_120d4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v3_120cc, i32* %r6.global-to-local, align 4
  %v4_120dc = call i32 @function_127a8(i32 %v3_120cc, i32 ptrtoint ([8 x i8]* @global_var_135e0.622 to i32), i32 %v0_120d4)
  %v0_120e4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_120e4, i32* @global_var_1baa4.623, align 4
  %v1_120e8 = trunc i32 %v0_120d4 to i8
  store i8 %v1_120e8, i8* bitcast (i32* @global_var_1baa8.624 to i8*), align 4
  %v0_120ec = load i32, i32* %r5.global-to-local, align 4
  %v1_120ec = trunc i32 %v0_120ec to i8
  store i8 %v1_120ec, i8* bitcast (i32* @global_var_1baa9.625 to i8*), align 4
  %v1_120f0 = call i32* @malloc(i32 16)
  %v3_120f0 = ptrtoint i32* %v1_120f0 to i32
  store i32 %v3_120f0, i32* %r6.global-to-local, align 4
  %v4_12100 = call i32 @function_127a8(i32 %v3_120f0, i32 ptrtoint ([17 x i8]* @global_var_135e8.627 to i32), i32 16)
  %v0_12108 = load i32, i32* %sl.global-to-local, align 4
  store i8 16, i8* bitcast (i32* @global_var_1bab0.628 to i8*), align 4
  %v0_12110 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12110, i32* @global_var_1baac.629, align 4
  %v0_12114 = load i32, i32* %r5.global-to-local, align 4
  %v1_12114 = trunc i32 %v0_12114 to i8
  store i8 %v1_12114, i8* bitcast (i32* @global_var_1bab1.630 to i8*), align 4
  %v1_12118 = call i32* @malloc(i32 %v0_12108)
  %v3_12118 = ptrtoint i32* %v1_12118 to i32
  %v0_12120 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v3_12118, i32* %r6.global-to-local, align 4
  %v4_12128 = call i32 @function_127a8(i32 %v3_12118, i32 ptrtoint ([15 x i8]* @global_var_135fc.632 to i32), i32 %v0_12120)
  %v0_12130 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12130, i32* @global_var_1bab4.633, align 4
  %v1_12134 = trunc i32 %v0_12120 to i8
  store i8 %v1_12134, i8* bitcast (i32* @global_var_1bab8.634 to i8*), align 4
  %v0_12138 = load i32, i32* %r5.global-to-local, align 4
  %v1_12138 = trunc i32 %v0_12138 to i8
  store i8 %v1_12138, i8* bitcast (i32* @global_var_1bab9.635 to i8*), align 4
  %v1_1213c = call i32* @malloc(i32 9)
  %v3_1213c = ptrtoint i32* %v1_1213c to i32
  store i32 %v3_1213c, i32* %r6.global-to-local, align 4
  %v4_1214c = call i32 @function_127a8(i32 %v3_1213c, i32 ptrtoint ([10 x i8]* @global_var_1360c.637 to i32), i32 9)
  store i8 9, i8* bitcast (i32* @global_var_1bac0.638 to i8*), align 4
  %v0_1215c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1215c, i32* @global_var_1babc.639, align 4
  %v0_12160 = load i32, i32* %r5.global-to-local, align 4
  %v1_12160 = trunc i32 %v0_12160 to i8
  store i8 %v1_12160, i8* bitcast (i32* @global_var_1bac1.640 to i8*), align 4
  %v1_12164 = call i32* @malloc(i32 19)
  %v2_12164 = ptrtoint i32* %v1_12164 to i32
  store i32 19, i32* %fp.global-to-local, align 4
  store i32 %v2_12164, i32* %r6.global-to-local, align 4
  %v4_12178 = call i32 @function_127a8(i32 %v2_12164, i32 ptrtoint ([20 x i8]* @global_var_13618.642 to i32), i32 19)
  %v0_12180 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12180, i32* @global_var_1bac4.643, align 4
  store i8 19, i8* bitcast (i32* @global_var_1bac8.644 to i8*), align 4
  %v0_12188 = load i32, i32* %r5.global-to-local, align 4
  %v1_12188 = trunc i32 %v0_12188 to i8
  store i8 %v1_12188, i8* bitcast (i32* @global_var_1bac9.645 to i8*), align 4
  %v1_1218c = call i32* @malloc(i32 23)
  %v3_1218c = ptrtoint i32* %v1_1218c to i32
  store i32 %v3_1218c, i32* %r6.global-to-local, align 4
  %v3_1219c = call i32 @function_127a8(i32 %v3_1218c, i32 ptrtoint (i32* @global_var_1362c.647 to i32), i32 23)
  %v0_121a4 = load i32, i32* %sb.global-to-local, align 4
  store i8 23, i8* bitcast (i32* @global_var_1bad0.648 to i8*), align 4
  %v0_121ac = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_121ac, i32* @global_var_1bacc.649, align 4
  %v0_121b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_121b0 = trunc i32 %v0_121b0 to i8
  store i8 %v1_121b0, i8* bitcast (i32* @global_var_1bad1.650 to i8*), align 4
  %v1_121b4 = call i32* @malloc(i32 %v0_121a4)
  %v3_121b4 = ptrtoint i32* %v1_121b4 to i32
  %v0_121bc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v3_121b4, i32* %r6.global-to-local, align 4
  %v4_121c4 = call i32 @function_127a8(i32 %v3_121b4, i32 ptrtoint ([9 x i8]* @global_var_13644.652 to i32), i32 %v0_121bc)
  %v0_121c8 = load i32, i32* %sl.global-to-local, align 4
  %v0_121cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_121cc, i32* @global_var_1bad4.579, align 4
  %v1_121d0 = trunc i32 %v0_121bc to i8
  store i8 %v1_121d0, i8* bitcast (i32* @global_var_1bad8.578 to i8*), align 4
  %v0_121d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_121d4 = trunc i32 %v0_121d4 to i8
  store i8 %v1_121d4, i8* bitcast (i32* @global_var_1bad9.580 to i8*), align 4
  %v1_121d8 = call i32* @malloc(i32 %v0_121c8)
  %v3_121d8 = ptrtoint i32* %v1_121d8 to i32
  %v0_121e0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v3_121d8, i32* %r6.global-to-local, align 4
  %v4_121e8 = call i32 @function_127a8(i32 %v3_121d8, i32 ptrtoint ([15 x i8]* @global_var_13650.654 to i32), i32 %v0_121e0)
  %v0_121ec = load i32, i32* %fp.global-to-local, align 4
  %v0_121f0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_121f0, i32* @global_var_1badc.583, align 4
  %v1_121f4 = trunc i32 %v0_121e0 to i8
  store i8 %v1_121f4, i8* bitcast (i32* @global_var_1bae0.584 to i8*), align 4
  %v0_121f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_121f8 = trunc i32 %v0_121f8 to i8
  store i8 %v1_121f8, i8* bitcast (i32* @global_var_1bae1.585 to i8*), align 4
  %v1_121fc = call i32* @malloc(i32 %v0_121ec)
  %v3_121fc = ptrtoint i32* %v1_121fc to i32
  %v0_12204 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v3_121fc, i32* %r6.global-to-local, align 4
  %v4_1220c = call i32 @function_127a8(i32 %v3_121fc, i32 ptrtoint ([20 x i8]* @global_var_13660.656 to i32), i32 %v0_12204)
  %v0_12214 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12214, i32* @global_var_1bae4.657, align 4
  %v1_12218 = trunc i32 %v0_12204 to i8
  store i8 %v1_12218, i8* bitcast (i32* @global_var_1bae8.658 to i8*), align 4
  %v0_1221c = load i32, i32* %r5.global-to-local, align 4
  %v1_1221c = trunc i32 %v0_1221c to i8
  store i8 %v1_1221c, i8* bitcast (i32* @global_var_1bae9.659 to i8*), align 4
  %v1_12220 = call i32* @malloc(i32 23)
  %v3_12220 = ptrtoint i32* %v1_12220 to i32
  store i32 %v3_12220, i32* %r6.global-to-local, align 4
  %v3_12230 = call i32 @function_127a8(i32 %v3_12220, i32 ptrtoint (i32* @global_var_13674.661 to i32), i32 23)
  store i8 23, i8* bitcast (i32* @global_var_1baf0.662 to i8*), align 4
  %v0_12240 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12240, i32* @global_var_1baec.663, align 4
  %v0_12244 = load i32, i32* %r5.global-to-local, align 4
  %v1_12244 = trunc i32 %v0_12244 to i8
  store i8 %v1_12244, i8* bitcast (i32* @global_var_1baf1.664 to i8*), align 4
  %v1_12248 = call i32* @malloc(i32 24)
  %v3_12248 = ptrtoint i32* %v1_12248 to i32
  store i32 %v3_12248, i32* %r6.global-to-local, align 4
  %v3_12258 = call i32 @function_127a8(i32 %v3_12248, i32 ptrtoint (i32* @global_var_1368c.666 to i32), i32 24)
  %v0_12260 = load i32, i32* %r7.global-to-local, align 4
  store i8 24, i8* bitcast (i32* @global_var_1baf8.667 to i8*), align 4
  %v0_12268 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12268, i32* @global_var_1baf4.668, align 4
  %v0_1226c = load i32, i32* %r5.global-to-local, align 4
  %v1_1226c = trunc i32 %v0_1226c to i8
  store i8 %v1_1226c, i8* bitcast (i32* @global_var_1baf9.669 to i8*), align 4
  %v1_12270 = call i32* @malloc(i32 %v0_12260)
  %v3_12270 = ptrtoint i32* %v1_12270 to i32
  %v0_12274 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_12270, i32* %r6.global-to-local, align 4
  %v4_12280 = call i32 @function_127a8(i32 %v3_12270, i32 ptrtoint ([15 x i8]* @global_var_136a4.671 to i32), i32 %v0_12274)
  %v0_12288 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12288, i32* @global_var_1bafc.672, align 4
  %v1_1228c = trunc i32 %v0_12274 to i8
  store i8 %v1_1228c, i8* bitcast (i32* @global_var_1bb00.673 to i8*), align 4
  %v0_12290 = load i32, i32* %r5.global-to-local, align 4
  %v1_12290 = trunc i32 %v0_12290 to i8
  store i8 %v1_12290, i8* bitcast (i32* @global_var_1bb01.674 to i8*), align 4
  %v1_12294 = call i32* @malloc(i32 13)
  %v3_12294 = ptrtoint i32* %v1_12294 to i32
  store i32 %v3_12294, i32* %r6.global-to-local, align 4
  %v3_122a4 = call i32 @function_127a8(i32 %v3_12294, i32 ptrtoint (i32* @global_var_136b4.676 to i32), i32 13)
  store i8 13, i8* bitcast (i32* @global_var_1baa8.624 to i8*), align 4
  %v0_122b4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_122b4, i32* @global_var_1baa4.623, align 4
  %v0_122b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_122b8 = trunc i32 %v0_122b8 to i8
  store i8 %v1_122b8, i8* bitcast (i32* @global_var_1baa9.625 to i8*), align 4
  %v1_122bc = call i32* @malloc(i32 10)
  %v2_122bc = ptrtoint i32* %v1_122bc to i32
  %v0_122c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_122c0 = add i32 %v0_122c0, -5
  store i32 %v1_122c0, i32* %r7.global-to-local, align 4
  store i32 %v2_122bc, i32* %r6.global-to-local, align 4
  %v4_122d0 = call i32 @function_127a8(i32 %v2_122bc, i32 ptrtoint ([11 x i8]* @global_var_136c4.678 to i32), i32 %v1_122c0)
  %v0_122d8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_122d8, i32* @global_var_1baac.629, align 4
  %v1_122dc = trunc i32 %v1_122c0 to i8
  store i8 %v1_122dc, i8* bitcast (i32* @global_var_1bab0.628 to i8*), align 4
  %v0_122e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_122e0 = trunc i32 %v0_122e0 to i8
  store i8 %v1_122e0, i8* bitcast (i32* @global_var_1bab1.630 to i8*), align 4
  %v1_122e4 = call i32* @malloc(i32 %v1_122c0)
  %v3_122e4 = ptrtoint i32* %v1_122e4 to i32
  %v0_122ec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_122e4, i32* %r6.global-to-local, align 4
  %v4_122f4 = call i32 @function_127a8(i32 %v3_122e4, i32 ptrtoint ([11 x i8]* @global_var_136d0.680 to i32), i32 %v0_122ec)
  %v0_122fc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_122fc, i32* @global_var_1bab4.633, align 4
  %v1_12300 = trunc i32 %v0_122ec to i8
  store i8 %v1_12300, i8* bitcast (i32* @global_var_1bab8.634 to i8*), align 4
  %v0_12304 = load i32, i32* %r5.global-to-local, align 4
  %v1_12304 = trunc i32 %v0_12304 to i8
  store i8 %v1_12304, i8* bitcast (i32* @global_var_1bab9.635 to i8*), align 4
  %v1_12308 = call i32* @malloc(i32 33)
  %v3_12308 = ptrtoint i32* %v1_12308 to i32
  store i32 %v3_12308, i32* %r6.global-to-local, align 4
  %v3_12318 = call i32 @function_127a8(i32 %v3_12308, i32 ptrtoint (i32* @global_var_136dc.682 to i32), i32 33)
  %v0_12320 = load i32, i32* %sb.global-to-local, align 4
  store i8 33, i8* bitcast (i32* @global_var_1bac0.638 to i8*), align 4
  %v0_12328 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12328, i32* @global_var_1babc.639, align 4
  %v0_1232c = load i32, i32* %r5.global-to-local, align 4
  %v1_1232c = trunc i32 %v0_1232c to i8
  store i8 %v1_1232c, i8* bitcast (i32* @global_var_1bac1.640 to i8*), align 4
  %v1_12330 = call i32* @malloc(i32 %v0_12320)
  %v3_12330 = ptrtoint i32* %v1_12330 to i32
  %v0_12338 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v3_12330, i32* %r6.global-to-local, align 4
  %v4_12340 = call i32 @function_127a8(i32 %v3_12330, i32 ptrtoint ([9 x i8]* @global_var_13700.684 to i32), i32 %v0_12338)
  %v0_12348 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12348, i32* @global_var_1bac4.643, align 4
  %v1_1234c = trunc i32 %v0_12338 to i8
  store i8 %v1_1234c, i8* bitcast (i32* @global_var_1bac8.644 to i8*), align 4
  %v0_12350 = load i32, i32* %r5.global-to-local, align 4
  %v1_12350 = trunc i32 %v0_12350 to i8
  store i8 %v1_12350, i8* bitcast (i32* @global_var_1bac9.645 to i8*), align 4
  %v1_12354 = call i32* @malloc(i32 11)
  %v3_12354 = ptrtoint i32* %v1_12354 to i32
  store i32 %v3_12354, i32* %r6.global-to-local, align 4
  %v4_12364 = call i32 @function_127a8(i32 %v3_12354, i32 ptrtoint ([12 x i8]* @global_var_1370c.686 to i32), i32 11)
  %v0_1236c = load i32, i32* %sl.global-to-local, align 4
  store i8 11, i8* bitcast (i32* @global_var_1bad0.648 to i8*), align 4
  %v0_12374 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12374, i32* @global_var_1bacc.649, align 4
  %v0_12378 = load i32, i32* %r5.global-to-local, align 4
  %v1_12378 = trunc i32 %v0_12378 to i8
  store i8 %v1_12378, i8* bitcast (i32* @global_var_1bad1.650 to i8*), align 4
  %v1_1237c = call i32* @malloc(i32 %v0_1236c)
  %v3_1237c = ptrtoint i32* %v1_1237c to i32
  %v0_12384 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v3_1237c, i32* %r6.global-to-local, align 4
  %v4_1238c = call i32 @function_127a8(i32 %v3_1237c, i32 ptrtoint ([15 x i8]* @global_var_135bc.607 to i32), i32 %v0_12384)
  %v0_12390 = load i32, i32* %r7.global-to-local, align 4
  %v0_12394 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12394, i32* @global_var_1ba8c.608, align 4
  %v1_12398 = trunc i32 %v0_12384 to i8
  store i8 %v1_12398, i8* bitcast (i32* @global_var_1ba90.609 to i8*), align 4
  %v0_1239c = load i32, i32* %r5.global-to-local, align 4
  %v1_1239c = trunc i32 %v0_1239c to i8
  store i8 %v1_1239c, i8* bitcast (i32* @global_var_1ba91.610 to i8*), align 4
  %v1_123a0 = call i32* @malloc(i32 %v0_12390)
  %v3_123a0 = ptrtoint i32* %v1_123a0 to i32
  %v0_123a8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v3_123a0, i32* %r6.global-to-local, align 4
  %v4_123b0 = call i32 @function_127a8(i32 %v3_123a0, i32 ptrtoint ([11 x i8]* @global_var_13718.688 to i32), i32 %v0_123a8)
  %v0_123b8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_123b8, i32* @global_var_1ba8c.608, align 4
  %v1_123bc = trunc i32 %v0_123a8 to i8
  store i8 %v1_123bc, i8* bitcast (i32* @global_var_1ba90.609 to i8*), align 4
  %v0_123c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_123c0 = trunc i32 %v0_123c0 to i8
  store i8 %v1_123c0, i8* bitcast (i32* @global_var_1ba91.610 to i8*), align 4
  %v1_123c4 = call i32* @malloc(i32 6)
  %v3_123c4 = ptrtoint i32* %v1_123c4 to i32
  store i32 %v3_123c4, i32* %r6.global-to-local, align 4
  %v4_123d4 = call i32 @function_127a8(i32 %v3_123c4, i32 ptrtoint ([7 x i8]* @global_var_13724.690 to i32), i32 6)
  %v0_123dc = load i32, i32* %r8.global-to-local, align 4
  store i8 6, i8* bitcast (i32* @global_var_1bae8.658 to i8*), align 4
  %v0_123e4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_123e4, i32* @global_var_1bae4.657, align 4
  %v0_123e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_123e8 = trunc i32 %v0_123e8 to i8
  store i8 %v1_123e8, i8* bitcast (i32* @global_var_1bae9.659 to i8*), align 4
  %v1_123ec = call i32* @malloc(i32 %v0_123dc)
  %v3_123ec = ptrtoint i32* %v1_123ec to i32
  %v0_123f4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v3_123ec, i32* %r6.global-to-local, align 4
  %v4_123fc = call i32 @function_127a8(i32 %v3_123ec, i32 ptrtoint ([8 x i8]* @global_var_1372c.692 to i32), i32 %v0_123f4)
  %v0_12404 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12404, i32* @global_var_1baec.663, align 4
  %v1_12408 = trunc i32 %v0_123f4 to i8
  store i8 %v1_12408, i8* bitcast (i32* @global_var_1baf0.662 to i8*), align 4
  %v0_1240c = load i32, i32* %r5.global-to-local, align 4
  %v1_1240c = trunc i32 %v0_1240c to i8
  store i8 %v1_1240c, i8* bitcast (i32* @global_var_1baf1.664 to i8*), align 4
  %v1_12410 = call i32* @malloc(i32 %v0_123f4)
  %v3_12410 = ptrtoint i32* %v1_12410 to i32
  %v0_12418 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v3_12410, i32* %r6.global-to-local, align 4
  %v4_12420 = call i32 @function_127a8(i32 %v3_12410, i32 ptrtoint ([8 x i8]* @global_var_13734.694 to i32), i32 %v0_12418)
  %v0_12428 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12428, i32* @global_var_1baf4.668, align 4
  %v1_1242c = trunc i32 %v0_12418 to i8
  store i8 %v1_1242c, i8* bitcast (i32* @global_var_1baf8.667 to i8*), align 4
  %v0_12430 = load i32, i32* %r5.global-to-local, align 4
  %v1_12430 = trunc i32 %v0_12430 to i8
  store i8 %v1_12430, i8* bitcast (i32* @global_var_1baf9.669 to i8*), align 4
  %v1_12434 = call i32* @malloc(i32 3)
  %v3_12434 = ptrtoint i32* %v1_12434 to i32
  store i32 %v3_12434, i32* %r6.global-to-local, align 4
  %v4_12444 = call i32 @function_127a8(i32 %v3_12434, i32 ptrtoint ([4 x i8]* @global_var_1373c.696 to i32), i32 3)
  %v0_1244c = load i32, i32* %fp.global-to-local, align 4
  store i8 3, i8* bitcast (i32* @global_var_1bb00.673 to i8*), align 4
  %v0_12454 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12454, i32* @global_var_1bafc.672, align 4
  %v0_12458 = load i32, i32* %r5.global-to-local, align 4
  %v1_12458 = trunc i32 %v0_12458 to i8
  store i8 %v1_12458, i8* bitcast (i32* @global_var_1bb01.674 to i8*), align 4
  %v1_1245c = call i32* @malloc(i32 %v0_1244c)
  %v3_1245c = ptrtoint i32* %v1_1245c to i32
  %v0_12464 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v3_1245c, i32* %r6.global-to-local, align 4
  %v3_1246c = call i32 @function_127a8(i32 %v3_1245c, i32 ptrtoint (i32* @global_var_13740.698 to i32), i32 %v0_12464)
  %v0_12474 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12474, i32* @global_var_1bb04.699, align 4
  %v1_12478 = trunc i32 %v0_12464 to i8
  store i8 %v1_12478, i8* bitcast (i32* @global_var_1bb08.700 to i8*), align 4
  %v0_1247c = load i32, i32* %r5.global-to-local, align 4
  %v1_1247c = trunc i32 %v0_1247c to i8
  store i8 %v1_1247c, i8* bitcast (i32* @global_var_1bb09.701 to i8*), align 4
  %v1_12480 = call i32* @malloc(i32 24)
  %v3_12480 = ptrtoint i32* %v1_12480 to i32
  store i32 %v3_12480, i32* %r6.global-to-local, align 4
  %v3_12490 = call i32 @function_127a8(i32 %v3_12480, i32 ptrtoint (i32* @global_var_13754.703 to i32), i32 24)
  store i8 24, i8* bitcast (i32* @global_var_1bb10.704 to i8*), align 4
  %v0_124a0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_124a0, i32* @global_var_1bb0c.705, align 4
  %v0_124a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_124a4 = trunc i32 %v0_124a4 to i8
  store i8 %v1_124a4, i8* bitcast (i32* @global_var_1bb11.706 to i8*), align 4
  %v1_124a8 = call i32* @malloc(i32 9)
  %v3_124a8 = ptrtoint i32* %v1_124a8 to i32
  store i32 %v3_124a8, i32* %r6.global-to-local, align 4
  %v4_124b8 = call i32 @function_127a8(i32 %v3_124a8, i32 ptrtoint ([10 x i8]* @global_var_13770.708 to i32), i32 9)
  store i8 9, i8* bitcast (i32* @global_var_1bb18.709 to i8*), align 4
  %v0_124c8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_124c8, i32* @global_var_1bb14.710, align 4
  %v0_124cc = load i32, i32* %r5.global-to-local, align 4
  %v1_124cc = trunc i32 %v0_124cc to i8
  store i8 %v1_124cc, i8* bitcast (i32* @global_var_1bb19.711 to i8*), align 4
  %v1_124d0 = call i32* @malloc(i32 16)
  %v3_124d0 = ptrtoint i32* %v1_124d0 to i32
  store i32 %v3_124d0, i32* %r6.global-to-local, align 4
  %v3_124e0 = call i32 @function_127a8(i32 %v3_124d0, i32 ptrtoint (i32* @global_var_1377c.713 to i32), i32 16)
  store i8 16, i8* bitcast (i32* @global_var_1bb20.714 to i8*), align 4
  %v0_124f0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_124f0, i32* @global_var_1bb1c.715, align 4
  %v0_124f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_124f4 = trunc i32 %v0_124f4 to i8
  store i8 %v1_124f4, i8* bitcast (i32* @global_var_1bb21.716 to i8*), align 4
  %v1_124f8 = call i32* @malloc(i32 22)
  %v3_124f8 = ptrtoint i32* %v1_124f8 to i32
  store i32 %v3_124f8, i32* %r6.global-to-local, align 4
  %v3_12508 = call i32 @function_127a8(i32 %v3_124f8, i32 ptrtoint (i32* @global_var_13790.718 to i32), i32 22)
  %v0_12510 = load i32, i32* %sb.global-to-local, align 4
  store i8 22, i8* bitcast (i32* @global_var_1bb28.719 to i8*), align 4
  %v0_12518 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12518, i32* @global_var_1bb24.720, align 4
  %v0_1251c = load i32, i32* %r5.global-to-local, align 4
  %v1_1251c = trunc i32 %v0_1251c to i8
  store i8 %v1_1251c, i8* bitcast (i32* @global_var_1bb29.721 to i8*), align 4
  %v1_12520 = call i32* @malloc(i32 %v0_12510)
  %v3_12520 = ptrtoint i32* %v1_12520 to i32
  %v0_12528 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v3_12520, i32* %r6.global-to-local, align 4
  %v4_12530 = call i32 @function_127a8(i32 %v3_12520, i32 ptrtoint ([9 x i8]* @global_var_13644.652 to i32), i32 %v0_12528)
  %v0_12538 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12538, i32* @global_var_1bb3c.722, align 4
  %v1_1253c = trunc i32 %v0_12528 to i8
  store i8 %v1_1253c, i8* bitcast (i32* @global_var_1bb40.723 to i8*), align 4
  %v0_12540 = load i32, i32* %r5.global-to-local, align 4
  %v1_12540 = trunc i32 %v0_12540 to i8
  store i8 %v1_12540, i8* bitcast (i32* @global_var_1bb41.724 to i8*), align 4
  %v1_12544 = call i32* @malloc(i32 5)
  %v3_12544 = ptrtoint i32* %v1_12544 to i32
  store i32 %v3_12544, i32* %r6.global-to-local, align 4
  %v4_12554 = call i32 @function_127a8(i32 %v3_12544, i32 ptrtoint ([6 x i8]* @global_var_137a8.726 to i32), i32 5)
  store i8 5, i8* bitcast (i32* @global_var_1bb48.727 to i8*), align 4
  %v0_12564 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12564, i32* @global_var_1bb44.728, align 4
  %v0_12568 = load i32, i32* %r5.global-to-local, align 4
  %v1_12568 = trunc i32 %v0_12568 to i8
  store i8 %v1_12568, i8* bitcast (i32* @global_var_1bb49.729 to i8*), align 4
  %v1_1256c = call i32* @malloc(i32 6)
  %v3_1256c = ptrtoint i32* %v1_1256c to i32
  store i32 %v3_1256c, i32* %r6.global-to-local, align 4
  %v4_1257c = call i32 @function_127a8(i32 %v3_1256c, i32 ptrtoint ([7 x i8]* @global_var_137b0.731 to i32), i32 6)
  store i8 6, i8* bitcast (i32* @global_var_1bb50.732 to i8*), align 4
  %v0_1258c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1258c, i32* @global_var_1bb4c.733, align 4
  %v0_12590 = load i32, i32* %r5.global-to-local, align 4
  %v1_12590 = trunc i32 %v0_12590 to i8
  store i8 %v1_12590, i8* bitcast (i32* @global_var_1bb51.734 to i8*), align 4
  %v1_12594 = call i32* @malloc(i32 21)
  %v3_12594 = ptrtoint i32* %v1_12594 to i32
  store i32 %v3_12594, i32* %r6.global-to-local, align 4
  %v3_125a4 = call i32 @function_127a8(i32 %v3_12594, i32 ptrtoint (i32* @global_var_137b8.736 to i32), i32 21)
  store i8 21, i8* bitcast (i32* @global_var_1bb30.737 to i8*), align 4
  %v0_125b4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_125b4, i32* @global_var_1bb2c.738, align 4
  %v0_125b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_125b8 = trunc i32 %v0_125b8 to i8
  store i8 %v1_125b8, i8* bitcast (i32* @global_var_1bb31.739 to i8*), align 4
  %v1_125bc = call i32* @malloc(i32 17)
  %v3_125bc = ptrtoint i32* %v1_125bc to i32
  store i32 %v3_125bc, i32* %r6.global-to-local, align 4
  %v4_125cc = call i32 @function_127a8(i32 %v3_125bc, i32 ptrtoint ([18 x i8]* @global_var_137d0.741 to i32), i32 17)
  store i8 17, i8* bitcast (i32* @global_var_1bb38.742 to i8*), align 4
  %v0_125dc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_125dc, i32* @global_var_1bb34.743, align 4
  %v0_125e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_125e0 = trunc i32 %v0_125e0 to i8
  store i8 %v1_125e0, i8* bitcast (i32* @global_var_1bb39.744 to i8*), align 4
  %v1_125e4 = call i32* @malloc(i32 12)
  %v3_125e4 = ptrtoint i32* %v1_125e4 to i32
  store i32 %v3_125e4, i32* %r6.global-to-local, align 4
  %v3_125f4 = call i32 @function_127a8(i32 %v3_125e4, i32 ptrtoint (i32* @global_var_137e4.746 to i32), i32 12)
  %v0_125fc = load i32, i32* %sl.global-to-local, align 4
  store i8 12, i8* bitcast (i32* @global_var_1bb40.723 to i8*), align 4
  %v0_12604 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12604, i32* @global_var_1bb3c.722, align 4
  %v0_12608 = load i32, i32* %r5.global-to-local, align 4
  %v1_12608 = trunc i32 %v0_12608 to i8
  store i8 %v1_12608, i8* bitcast (i32* @global_var_1bb41.724 to i8*), align 4
  %v1_1260c = call i32* @malloc(i32 %v0_125fc)
  %v3_1260c = ptrtoint i32* %v1_1260c to i32
  %v0_12614 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v3_1260c, i32* %r6.global-to-local, align 4
  %v4_1261c = call i32 @function_127a8(i32 %v3_1260c, i32 ptrtoint ([15 x i8]* @global_var_13650.654 to i32), i32 %v0_12614)
  %v0_12624 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12624, i32* @global_var_1baac.629, align 4
  %v1_12628 = trunc i32 %v0_12614 to i8
  store i8 %v1_12628, i8* bitcast (i32* @global_var_1bab0.628 to i8*), align 4
  %v0_1262c = load i32, i32* %r5.global-to-local, align 4
  %v1_1262c = trunc i32 %v0_1262c to i8
  store i8 %v1_1262c, i8* bitcast (i32* @global_var_1bab1.630 to i8*), align 4
  %v1_12630 = call i32* @malloc(i32 23)
  %v3_12630 = ptrtoint i32* %v1_12630 to i32
  store i32 %v3_12630, i32* %r6.global-to-local, align 4
  %v3_12640 = call i32 @function_127a8(i32 %v3_12630, i32 ptrtoint (i32* @global_var_1362c.647 to i32), i32 23)
  %v0_12648 = load i32, i32* %fp.global-to-local, align 4
  %v0_1264c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1264c, i32* @global_var_1bb8c.747, align 4
  store i8 23, i8* bitcast (i32* @global_var_1bb90.748 to i8*), align 4
  %v0_12654 = load i32, i32* %r5.global-to-local, align 4
  %v1_12654 = trunc i32 %v0_12654 to i8
  store i8 %v1_12654, i8* bitcast (i32* @global_var_1bb91.749 to i8*), align 4
  %v1_12658 = call i32* @malloc(i32 %v0_12648)
  %v3_12658 = ptrtoint i32* %v1_12658 to i32
  %v0_12660 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v3_12658, i32* %r6.global-to-local, align 4
  %v4_12668 = call i32 @function_127a8(i32 %v3_12658, i32 ptrtoint ([20 x i8]* @global_var_13660.656 to i32), i32 %v0_12660)
  %v0_1266c = load i32, i32* %r5.global-to-local, align 4
  %v1_1266c = trunc i32 %v0_1266c to i8
  store i8 %v1_1266c, i8* bitcast (i32* @global_var_1bab9.635 to i8*), align 4
  %v0_12670 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12670, i32* @global_var_1bab4.633, align 4
  %v0_12674 = load i32, i32* %fp.global-to-local, align 4
  %v1_12674 = trunc i32 %v0_12674 to i8
  store i8 %v1_12674, i8* bitcast (i32* @global_var_1bab8.634 to i8*), align 4
  %v2_12678 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12678, i32* @r4, align 4
  ret i32 %v4_12668

; uselistorder directives
  uselistorder i32 %v3_12658, { 1, 0 }
  uselistorder i32 %v3_1260c, { 1, 0 }
  uselistorder i32 %v3_12520, { 1, 0 }
  uselistorder i32 %v3_1245c, { 1, 0 }
  uselistorder i32 %v3_12410, { 1, 0 }
  uselistorder i32 %v0_123f4, { 1, 0, 2 }
  uselistorder i32 %v3_123ec, { 1, 0 }
  uselistorder i32 %v3_123a0, { 1, 0 }
  uselistorder i32 %v3_1237c, { 1, 0 }
  uselistorder i32 %v3_12330, { 1, 0 }
  uselistorder i32 %v3_122e4, { 1, 0 }
  uselistorder i32 %v1_122c0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_122bc, { 1, 0 }
  uselistorder i32 %v3_12270, { 1, 0 }
  uselistorder i32 %v3_121fc, { 1, 0 }
  uselistorder i32 %v3_121d8, { 1, 0 }
  uselistorder i32 %v3_121b4, { 1, 0 }
  uselistorder i32 %v2_12164, { 1, 0 }
  uselistorder i32 %v3_12118, { 1, 0 }
  uselistorder i32 %v3_120cc, { 1, 0 }
  uselistorder i32 %v2_120a4, { 1, 0 }
  uselistorder i32 %v2_12054, { 1, 0 }
  uselistorder i32 %v2_11fdc, { 1, 0 }
  uselistorder i32 %v3_11fb4, { 1, 0 }
  uselistorder i32 %v3_11f90, { 0, 2, 1 }
  uselistorder i32 %v3_11f68, { 0, 2, 1 }
  uselistorder i32 %v2_11f40, { 0, 2, 1 }
  uselistorder i32 %v2_11f0c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 91, 93, 94, 95, 96 }
  uselistorder i32 12, { 10, 6, 29, 32, 26, 18, 19, 33, 34, 20, 17, 21, 22, 23, 24, 25, 27, 30, 31, 28, 35, 36, 37, 5, 38, 39, 41, 42, 43, 11, 44, 12, 45, 3, 46, 40, 4, 47, 13, 14, 15, 75, 48, 16, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 7, 60, 61, 62, 63, 64, 8, 65, 66, 67, 68, 69, 70, 9, 71, 72, 73, 74, 76, 77, 78, 79, 0, 1, 2 }
  uselistorder i32 17, { 2, 0, 13, 14, 15, 3, 4, 5, 6, 16, 7, 17, 8, 18, 19, 9, 20, 10, 11, 21, 22, 1, 23, 24, 25, 12, 26, 27, 28, 29, 30 }
  uselistorder i32 21, { 1, 0, 9, 2, 10, 3, 11, 4, 12, 13, 14, 8, 5, 6, 7 }
  uselistorder i32 22, { 1, 0, 2, 9, 3, 10, 4, 11, 12, 5, 6, 7, 13, 8 }
  uselistorder i32 11, { 4, 1, 10, 11, 12, 13, 5, 14, 6, 15, 7, 16, 17, 0, 18, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 2, 30, 31, 32, 9, 33, 34, 35, 3, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 33, { 1, 0, 3, 10, 2, 9, 4, 11, 5, 12, 6, 13, 14, 7, 8 }
  uselistorder i32 13, { 6, 2, 20, 21, 22, 23, 7, 24, 8, 25, 9, 26, 10, 27, 11, 28, 12, 29, 13, 30, 0, 1, 14, 15, 16, 17, 18, 19, 31, 32, 33, 34, 35, 3, 36, 37, 38, 39, 40, 41, 42, 4, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 5, 55, 56 }
  uselistorder i32 23, { 3, 0, 4, 1, 5, 2, 6, 13, 7, 14, 8, 15, 16, 17, 9, 10, 11, 12 }
  uselistorder i32 19, { 1, 17, 2, 5, 14, 6, 15, 7, 16, 0, 18, 8, 9, 10, 3, 19, 20, 11, 21, 4, 22, 12, 23, 13, 24 }
  uselistorder i8 16, { 15, 16, 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i8 6, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 6, { 15, 2, 16, 3, 17, 4, 18, 41, 0, 42, 19, 43, 44, 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 5, 29, 30, 31, 32, 33, 6, 34, 35, 45, 46, 47, 7, 48, 49, 50, 51, 8, 52, 53, 54, 55, 9, 56, 10, 57, 58, 36, 59, 11, 60, 61, 62, 37, 63, 12, 64, 65, 38, 66, 67, 68, 69, 70, 39, 71, 13, 72, 77, 78, 79, 80, 81, 40, 82, 14, 83, 73, 74, 75, 76 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_135bc.607 to i32), { 1, 0 }
  uselistorder i32 14, { 0, 14, 1, 13, 4, 15, 5, 16, 6, 7, 8, 9, 10, 11, 12, 17, 18, 2, 19, 20, 21, 22, 3, 23 }
  uselistorder i8 5, { 10, 11, 12, 0, 1, 2, 13, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 5, { 15, 5, 16, 6, 3, 17, 51, 4, 1, 18, 52, 19, 53, 20, 54, 21, 55, 22, 56, 23, 57, 24, 58, 25, 59, 26, 60, 27, 61, 28, 62, 29, 63, 30, 64, 31, 65, 32, 66, 33, 67, 34, 68, 35, 69, 36, 70, 37, 71, 38, 72, 39, 73, 40, 74, 41, 75, 42, 76, 43, 77, 44, 78, 45, 79, 46, 80, 0, 81, 82, 83, 47, 48, 49, 84, 85, 86, 87, 7, 88, 89, 90, 91, 8, 92, 93, 94, 95, 96, 97, 98, 9, 99, 100, 50, 101, 10, 102, 103, 104, 11, 105, 106, 107, 108, 12, 109, 110, 111, 112, 113, 114, 115, 13, 116, 121, 122, 123, 124, 125, 126, 14, 127, 117, 118, 2, 119, 120 }
  uselistorder i32 7, { 1, 49, 2, 7, 48, 0, 8, 50, 9, 51, 10, 52, 11, 53, 12, 54, 13, 55, 14, 56, 15, 57, 16, 58, 17, 59, 18, 60, 19, 61, 20, 62, 21, 63, 22, 64, 23, 65, 24, 66, 25, 67, 26, 68, 27, 69, 28, 70, 29, 71, 30, 72, 31, 73, 32, 74, 33, 75, 76, 34, 35, 36, 37, 38, 39, 40, 41, 42, 77, 78, 79, 43, 80, 81, 82, 83, 3, 84, 85, 86, 87, 44, 88, 4, 89, 45, 90, 91, 5, 92, 93, 6, 94, 95, 96, 97, 98, 46, 99, 101, 102, 103, 104, 47, 105, 100 }
  uselistorder i32 (i32, i32, i32)* @function_127a8, { 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0, 4 }
  uselistorder i32* (i32)* @malloc, { 51, 50, 34, 42, 40, 44, 36, 31, 33, 37, 43, 41, 32, 35, 29, 28, 49, 27, 52, 22, 8, 20, 24, 11, 16, 0, 26, 13, 25, 5, 19, 23, 4, 14, 18, 30, 39, 21, 38, 1, 45, 7, 17, 10, 2, 3, 48, 12, 15, 6, 9, 46, 47, 53 }
}

define i32 @function_1272c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1272c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_12730 = load i8, i8* %arg1, align 1
  %v4_12730 = zext i8 %v3_12730 to i32
  %v2_12734 = icmp eq i8 %v3_12730, 0
  br i1 %v2_12734, label %dec_label_pc_12750, label %bb

dec_label_pc_12750:                               ; preds = %dec_label_pc_12740, %dec_label_pc_1272c
  %merge = phi i32 [ %v4_12730, %dec_label_pc_1272c ], [ %v1_12740, %dec_label_pc_12740 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_1272c
  br label %dec_label_pc_12740

dec_label_pc_12740:                               ; preds = %dec_label_pc_12740, %bb
  %v0_12740 = phi i32 [ %v1_12740, %dec_label_pc_12740 ], [ 0, %bb ]
  %v1_12740 = add i32 %v0_12740, 1
  %v2_12744 = add i32 %v1_12740, %tmp
  %v3_12744 = inttoptr i32 %v2_12744 to i8*
  %v4_12744 = load i8, i8* %v3_12744, align 1
  %v2_12748 = icmp eq i8 %v4_12744, 0
  br i1 %v2_12748, label %dec_label_pc_12750, label %dec_label_pc_12740

; uselistorder directives
  uselistorder i32 %v1_12740, { 1, 0, 2 }
}

define i32 @function_12754(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12754:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12754 = load i8, i8* %arg1, align 1
  %v3_12754 = zext i8 %v2_12754 to i32
  %v2_12758 = icmp eq i8 %v2_12754, 0
  br i1 %v2_12758, label %dec_label_pc_1279c, label %dec_label_pc_12760

dec_label_pc_12760:                               ; preds = %dec_label_pc_12754
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12764

dec_label_pc_12764:                               ; preds = %dec_label_pc_12764, %dec_label_pc_12760
  %v0_12764 = phi i32 [ %v1_12764, %dec_label_pc_12764 ], [ 0, %dec_label_pc_12760 ]
  %v1_12764 = add i32 %v0_12764, 1
  store i32 %v1_12764, i32* %ip.global-to-local, align 4
  %v2_12768 = add i32 %v1_12764, %tmp
  %v3_12768 = inttoptr i32 %v2_12768 to i8*
  %v4_12768 = load i8, i8* %v3_12768, align 1
  %v2_1276c = icmp eq i8 %v4_12768, 0
  br i1 %v2_1276c, label %dec_label_pc_12774, label %dec_label_pc_12764

dec_label_pc_12774:                               ; preds = %dec_label_pc_12764
  %v7_12774 = icmp eq i32 %v0_12764, -2
  br i1 %v7_12774, label %dec_label_pc_12794, label %dec_label_pc_12780.preheader

dec_label_pc_12780.preheader:                     ; preds = %dec_label_pc_12774, %dec_label_pc_1279c
  %storemerge = phi i32 [ %v3_12754, %dec_label_pc_1279c ], [ %v1_12764, %dec_label_pc_12774 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1278c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_12780

dec_label_pc_12780:                               ; preds = %dec_label_pc_12780.dec_label_pc_12780_crit_edge, %dec_label_pc_12780.preheader
  %v2_1278c = phi i32 [ %v5_1278c, %dec_label_pc_12780.dec_label_pc_12780_crit_edge ], [ %v2_1278c.pre, %dec_label_pc_12780.preheader ]
  %v0_12784 = phi i32 [ %v0_12784.pre, %dec_label_pc_12780.dec_label_pc_12780_crit_edge ], [ %tmp, %dec_label_pc_12780.preheader ]
  %v0_12780 = phi i32 [ %v0_12780.pre, %dec_label_pc_12780.dec_label_pc_12780_crit_edge ], [ %storemerge, %dec_label_pc_12780.preheader ]
  %v1_12780 = add i32 %v0_12780, -1
  store i32 %v1_12780, i32* %r2.global-to-local, align 4
  %v1_12784 = inttoptr i32 %v0_12784 to i8*
  %v2_12784 = load i8, i8* %v1_12784, align 1
  %v5_12784 = add i32 %v0_12784, 1
  store i32 %v5_12784, i32* %r1.global-to-local, align 4
  %v3_12788 = icmp eq i32 %v0_12780, 0
  %v3_1278c = inttoptr i32 %v2_1278c to i8*
  store i8 %v2_12784, i8* %v3_1278c, align 1
  %v4_1278c = load i32, i32* @r0, align 4
  %v5_1278c = add i32 %v4_1278c, 1
  store i32 %v5_1278c, i32* @r0, align 4
  br i1 %v3_12788, label %dec_label_pc_12794.loopexit, label %dec_label_pc_12780.dec_label_pc_12780_crit_edge

dec_label_pc_12780.dec_label_pc_12780_crit_edge:  ; preds = %dec_label_pc_12780
  %v0_12780.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_12784.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12780

dec_label_pc_12794.loopexit:                      ; preds = %dec_label_pc_12780
  %v0_12794.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_12794.loopexit, %dec_label_pc_12774
  %v0_12794 = phi i32 [ %v0_12794.pre, %dec_label_pc_12794.loopexit ], [ %v1_12764, %dec_label_pc_12774 ]
  ret i32 %v0_12794

dec_label_pc_1279c:                               ; preds = %dec_label_pc_12754
  store i32 %v3_12754, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12780.preheader

; uselistorder directives
  uselistorder i32 %v5_1278c, { 1, 0 }
  uselistorder i32 %v0_12784, { 1, 0 }
  uselistorder i32 %v1_12764, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_12754, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12780.preheader, { 1, 0 }
}

define i32 @function_127a8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_127a8:
  %ip.global-to-local = alloca i32, align 4
  %v2_127a8 = icmp eq i32 %arg3, 0
  br i1 %v2_127a8, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_127b4, %dec_label_pc_127a8
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_127a8
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_127b4

dec_label_pc_127b4:                               ; preds = %dec_label_pc_127b4, %bb
  %v0_127b4 = phi i32 [ %v1_127bc, %dec_label_pc_127b4 ], [ 0, %bb ]
  %v2_127b4 = add i32 %v0_127b4, %arg2
  %v3_127b4 = inttoptr i32 %v2_127b4 to i8*
  %v4_127b4 = load i8, i8* %v3_127b4, align 1
  %v4_127b8 = add i32 %v0_127b4, %arg1
  %v5_127b8 = inttoptr i32 %v4_127b8 to i8*
  store i8 %v4_127b4, i8* %v5_127b8, align 1
  %v0_127bc = load i32, i32* %ip.global-to-local, align 4
  %v1_127bc = add i32 %v0_127bc, 1
  store i32 %v1_127bc, i32* %ip.global-to-local, align 4
  %v9_127c0 = icmp eq i32 %v1_127bc, %arg3
  br i1 %v9_127c0, label %.loopexit, label %dec_label_pc_127b4

; uselistorder directives
  uselistorder i32 %v1_127bc, { 1, 2, 0 }
}

define i32 @function_127cc() local_unnamed_addr {
dec_label_pc_127cc:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_127cc = load i32, i32* @r1, align 4
  %v2_127cc = icmp eq i32 %v0_127cc, 0
  br i1 %v2_127cc, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_127cc
  %v2_127d0 = load i32, i32* @r0, align 4
  ret i32 %v2_127d0

bb3:                                              ; preds = %dec_label_pc_127cc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_127dc4 = load i32, i32* @r0, align 4
  %v5_127dc5 = inttoptr i32 %v3_127dc4 to i8*
  store i8 0, i8* %v5_127dc5, align 1
  %v0_127e06 = load i32, i32* %r3.global-to-local, align 4
  %v1_127e07 = add i32 %v0_127e06, 1
  store i32 %v1_127e07, i32* %r3.global-to-local, align 4
  %v1_127e48 = load i32, i32* @r1, align 4
  %v9_127e410 = icmp eq i32 %v1_127e07, %v1_127e48
  br i1 %v9_127e410, label %dec_label_pc_127ec, label %dec_label_pc_127dc.dec_label_pc_127dc_crit_edge

dec_label_pc_127dc.dec_label_pc_127dc_crit_edge:  ; preds = %bb3, %dec_label_pc_127dc.dec_label_pc_127dc_crit_edge
  %v1_127e011 = phi i32 [ %v1_127e0, %dec_label_pc_127dc.dec_label_pc_127dc_crit_edge ], [ %v1_127e07, %bb3 ]
  %v0_127dc.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_127dc.pre to i8
  %v3_127dc = load i32, i32* @r0, align 4
  %v4_127dc = add i32 %v3_127dc, %v1_127e011
  %v5_127dc = inttoptr i32 %v4_127dc to i8*
  store i8 %extract.t, i8* %v5_127dc, align 1
  %v0_127e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_127e0 = add i32 %v0_127e0, 1
  store i32 %v1_127e0, i32* %r3.global-to-local, align 4
  %v1_127e4 = load i32, i32* @r1, align 4
  %v9_127e4 = icmp eq i32 %v1_127e0, %v1_127e4
  br i1 %v9_127e4, label %dec_label_pc_127ec, label %dec_label_pc_127dc.dec_label_pc_127dc_crit_edge

dec_label_pc_127ec:                               ; preds = %dec_label_pc_127dc.dec_label_pc_127dc_crit_edge, %bb3
  %v1_127ec = load i32, i32* @r0, align 4
  ret i32 %v1_127ec

; uselistorder directives
  uselistorder i32 %v1_127e0, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_127dc.dec_label_pc_127dc_crit_edge, { 1, 0 }
}

define i32 @function_127f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_127f0:
  %v7_12804 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_12804, label %dec_label_pc_12808, label %dec_label_pc_12810

dec_label_pc_12808:                               ; preds = %dec_label_pc_12824, %dec_label_pc_127f0, %dec_label_pc_12810
  ret i32 -1

dec_label_pc_12810:                               ; preds = %dec_label_pc_127f0
  %tmp10 = icmp slt i32 %arg2, 1
  br i1 %tmp10, label %dec_label_pc_12808, label %dec_label_pc_12818

dec_label_pc_12818:                               ; preds = %dec_label_pc_12810
  br label %dec_label_pc_12830

dec_label_pc_12824:                               ; preds = %dec_label_pc_12848, %dec_label_pc_12830
  %v1_12824 = add i32 %v0_12850, 1
  %v9_12828 = icmp eq i32 %v1_12824, %arg2
  br i1 %v9_12828, label %dec_label_pc_12808, label %dec_label_pc_12830

dec_label_pc_12830:                               ; preds = %dec_label_pc_12824, %dec_label_pc_12818
  %v0_12850 = phi i32 [ %v1_12824, %dec_label_pc_12824 ], [ 0, %dec_label_pc_12818 ]
  %v0_1283c = phi i32 [ %v1_1283c., %dec_label_pc_12824 ], [ 0, %dec_label_pc_12818 ]
  %v2_12830 = add i32 %v0_1283c, %arg3
  %v3_12830 = inttoptr i32 %v2_12830 to i8*
  %v4_12830 = load i8, i8* %v3_12830, align 1
  %v2_12834 = add i32 %v0_12850, %arg1
  %v3_12834 = inttoptr i32 %v2_12834 to i8*
  %v4_12834 = load i8, i8* %v3_12834, align 1
  %v9_12838 = icmp eq i8 %v4_12834, %v4_12830
  %v1_1283c = add i32 %v0_1283c, 1
  %v1_1283c. = select i1 %v9_12838, i32 %v1_1283c, i32 0
  br i1 %v9_12838, label %dec_label_pc_12848, label %dec_label_pc_12824

dec_label_pc_12848:                               ; preds = %dec_label_pc_12830
  %v9_12848 = icmp eq i32 %v1_1283c., %arg4
  br i1 %v9_12848, label %dec_label_pc_12850, label %dec_label_pc_12824

dec_label_pc_12850:                               ; preds = %dec_label_pc_12848
  %v1_12850 = add i32 %v0_12850, 1
  ret i32 %v1_12850

; uselistorder directives
  uselistorder i1 %v9_12838, { 1, 0 }
  uselistorder i32 %v0_1283c, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12808, { 0, 2, 1 }
}

define i32 @function_12858(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12858:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_12864

dec_label_pc_12864:                               ; preds = %.thread, %dec_label_pc_1287c, %bb, %dec_label_pc_12858
  %v0_12864 = phi i32 [ %tmp, %dec_label_pc_12858 ], [ %v5_12864, %bb ], [ %v5_12864, %dec_label_pc_1287c ], [ %v5_12864, %.thread ]
  %v1_12864 = inttoptr i32 %v0_12864 to i8*
  %v2_12864 = load i8, i8* %v1_12864, align 1
  %v5_12864 = add i32 %v0_12864, 1
  %v7_1286c = icmp eq i8 %v2_12864, 9
  br i1 %v7_1286c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12864
  br label %dec_label_pc_12864

bb:                                               ; preds = %dec_label_pc_12864
  %v8_12870 = icmp eq i8 %v2_12864, 32
  br i1 %v8_12870, label %dec_label_pc_12864, label %dec_label_pc_1287c

dec_label_pc_1287c:                               ; preds = %bb
  %v7_1287c = icmp eq i8 %v2_12864, 10
  br i1 %v7_1287c, label %dec_label_pc_12864, label %dec_label_pc_12884

dec_label_pc_12884:                               ; preds = %dec_label_pc_1287c
  %v7_12884 = icmp eq i8 %v2_12864, 45
  br i1 %v7_12884, label %dec_label_pc_12964, label %dec_label_pc_1288c

dec_label_pc_1288c:                               ; preds = %dec_label_pc_12884
  %v7_1288c = icmp eq i8 %v2_12864, 43
  br i1 %v7_1288c, label %bb54, label %dec_label_pc_1289c

bb54:                                             ; preds = %dec_label_pc_1288c
  %v2_12890 = inttoptr i32 %v5_12864 to i8*
  %v3_12890 = load i8, i8* %v2_12890, align 1
  %v6_12890 = add i32 %v0_12864, 2
  br label %dec_label_pc_1289c

dec_label_pc_1289c:                               ; preds = %bb54, %dec_label_pc_1288c, %dec_label_pc_12964
  %v0_1294842 = phi i32 [ %v5_12964, %dec_label_pc_12964 ], [ %v5_12864, %dec_label_pc_1288c ], [ %v6_12890, %bb54 ]
  %v0_128c417.in = phi i8 [ %v2_12964, %dec_label_pc_12964 ], [ %v2_12864, %dec_label_pc_1288c ], [ %v3_12890, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_12964 ], [ 2147483647, %dec_label_pc_1288c ], [ 2147483647, %bb54 ]
  %v0_12974 = phi i32 [ 1, %dec_label_pc_12964 ], [ 0, %dec_label_pc_1288c ], [ 0, %bb54 ]
  %v2_128a4 = urem i32 %storemerge1, %arg2
  %v2_128b4 = udiv i32 %storemerge1, %arg2
  store i32 %v2_128b4, i32* @lr, align 4
  br label %dec_label_pc_128c4

dec_label_pc_128c4:                               ; preds = %.thread8, %dec_label_pc_1289c
  %v0_12948 = phi i32 [ %v5_12948, %.thread8 ], [ %v0_1294842, %dec_label_pc_1289c ]
  %v2_1294011 = phi i32 [ %v1_1295c29, %.thread8 ], [ 0, %dec_label_pc_1289c ]
  %v1_1291c = phi i32 [ %v0_1295027, %.thread8 ], [ 0, %dec_label_pc_1289c ]
  %v1_12904.in = phi i8 [ %v2_12948, %.thread8 ], [ %v0_128c417.in, %dec_label_pc_1289c ]
  %v1_12904 = zext i8 %v1_12904.in to i32
  %v1_128c4 = urem i32 %v1_12904, 256
  %v1_128c8 = add nsw i32 %v1_128c4, -48
  %v1_128d0 = add nsw i32 %v1_128c4, -97
  %v1_128d4 = add nsw i32 %v1_12904, -48
  %v1_128d8 = add nsw i32 %v1_128c4, -65
  %tmp77 = icmp ult i32 %v1_128c8, 10
  br i1 %tmp77, label %dec_label_pc_12908, label %dec_label_pc_128e0

dec_label_pc_128e0:                               ; preds = %dec_label_pc_128c4
  %v2_128e0 = icmp ugt i32 %v1_128d8, 24
  %v7_128e0 = icmp eq i32 %v1_128d8, 25
  %v2_128e4 = xor i1 %v7_128e0, true
  %v3_128e4 = and i1 %v2_128e0, %v2_128e4
  br i1 %v3_128e4, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_128e0
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_128e0, %bb55
  %v0_128f821 = phi i32 [ %v1_128d4, %dec_label_pc_128e0 ], [ 0, %bb55 ]
  %v2_128e8 = xor i1 %v2_128e0, true
  %v3_128e8 = or i1 %v7_128e0, %v2_128e8
  br i1 %v3_128e8, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_128f8 = phi i32 [ %v0_128f821, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_128e4, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_128f0 = icmp ugt i32 %v1_128d0, 24
  %v11_128f0 = icmp eq i32 %v1_128d0, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_128f4 = phi i1 [ %v7_128e0, %bb58 ], [ %v11_128f0, %bb59 ]
  %v0_128f4 = phi i1 [ %v2_128e0, %bb58 ], [ %v6_128f0, %bb59 ]
  %v2_128f4 = xor i1 %v1_128f4, true
  %v3_128f4 = and i1 %v0_128f4, %v2_128f4
  br i1 %v3_128f4, label %dec_label_pc_12950, label %dec_label_pc_128f8

dec_label_pc_128f8:                               ; preds = %bb60
  %v2_128f8 = icmp eq i32 %v0_128f8, 0
  %. = select i1 %v2_128f8, i32 87, i32 55
  %v2_12904 = sub nsw i32 %v1_12904, %.
  br label %dec_label_pc_12908

dec_label_pc_12908:                               ; preds = %dec_label_pc_128c4, %dec_label_pc_128f8
  %v0_1291c37 = phi i32 [ %v1_128d8, %dec_label_pc_128c4 ], [ %., %dec_label_pc_128f8 ]
  %v3_1294012 = phi i32 [ %v1_128d4, %dec_label_pc_128c4 ], [ %v2_12904, %dec_label_pc_128f8 ]
  %v6_1290c = icmp slt i32 %v3_1294012, %arg2
  br i1 %v6_1290c, label %dec_label_pc_12910, label %dec_label_pc_12950

dec_label_pc_12910:                               ; preds = %dec_label_pc_12908
  %v3_12910 = icmp uge i32 %v2_1294011, %v2_128b4
  %v9_12910 = icmp eq i32 %v2_1294011, %v2_128b4
  %v2_12914 = xor i1 %v3_12910, true
  %v3_12914 = or i1 %v9_12910, %v2_12914
  br i1 %v3_12914, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_12910
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_12910, %bb63
  %v0_1291c36 = phi i32 [ %v0_1291c37, %dec_label_pc_12910 ], [ 0, %bb63 ]
  %v2_12918 = xor i1 %v9_12910, true
  %v3_12918 = and i1 %v3_12910, %v2_12918
  br i1 %v3_12918, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_1291c = phi i32 [ %v0_1291c36, %bb64 ], [ 1, %bb65 ]
  %tmp78 = icmp slt i32 %v1_1291c, 0
  %v4_1291c = zext i1 %tmp78 to i32
  %v5_1291c = or i32 %v0_1291c, %v4_1291c
  %v7_1291c = icmp eq i32 %v5_1291c, 0
  br i1 %v7_1291c, label %dec_label_pc_12928, label %.thread8

dec_label_pc_12928:                               ; preds = %bb66
  %v7_12938 = icmp sgt i32 %v3_1294012, %v2_128a4
  br i1 %v7_12938, label %bb69, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_12928
  br label %bb70

bb69:                                             ; preds = %dec_label_pc_12928
  %v2_1293c = icmp eq i1 %v9_12910, false
  br i1 %v2_1293c, label %bb70, label %.thread8

bb70:                                             ; preds = %bb69, %.thread5
  %v4_1294013 = mul i32 %v2_1294011, %arg2
  %v5_1294014 = add i32 %v3_1294012, %v4_1294013
  br label %.thread8

.thread8:                                         ; preds = %bb69, %bb66, %bb70
  %v1_1295c29 = phi i32 [ %v2_1294011, %bb69 ], [ %v2_1294011, %bb66 ], [ %v5_1294014, %bb70 ]
  %v0_1295027 = phi i32 [ -1, %bb69 ], [ -1, %bb66 ], [ 1, %bb70 ]
  %v1_12948 = inttoptr i32 %v0_12948 to i8*
  %v2_12948 = load i8, i8* %v1_12948, align 1
  %v5_12948 = add i32 %v0_12948, 1
  br label %dec_label_pc_128c4

dec_label_pc_12950:                               ; preds = %dec_label_pc_12908, %bb60
  %v1_12950 = icmp slt i32 %v1_1291c, 0
  %v2_12974 = icmp eq i32 %v0_12974, 0
  br i1 %v1_12950, label %dec_label_pc_12974, label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %dec_label_pc_12950
  br i1 %v2_12974, label %bb72, label %bb71

bb71:                                             ; preds = %dec_label_pc_12958
  %v2_1295c = sub i32 0, %v2_1294011
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_12958, %bb71
  %v23_12960 = phi i32 [ %v2_1294011, %dec_label_pc_12958 ], [ %v2_1295c, %bb71 ]
  ret i32 %v23_12960

dec_label_pc_12964:                               ; preds = %dec_label_pc_12884
  %v1_12964 = inttoptr i32 %v5_12864 to i8*
  %v2_12964 = load i8, i8* %v1_12964, align 1
  %v5_12964 = add i32 %v0_12864, 2
  br label %dec_label_pc_1289c

dec_label_pc_12974:                               ; preds = %dec_label_pc_12950
  %.76 = select i1 %v2_12974, i32 2147483647, i32 -2147483648
  ret i32 %.76

; uselistorder directives
  uselistorder i1 %v9_12910, { 1, 0, 2 }
  uselistorder i1 %v3_12910, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_128e0, { 1, 2, 0 }
  uselistorder i1 %v2_128e0, { 1, 0, 2 }
  uselistorder i32 %v1_128c4, { 1, 2, 0 }
  uselistorder i32 %v1_12904, { 1, 0, 2 }
  uselistorder i32 %v1_1291c, { 1, 0 }
  uselistorder i32 %v2_1294011, { 0, 1, 6, 3, 2, 4, 5 }
  uselistorder i32 %v0_12948, { 1, 0 }
  uselistorder i32 %v2_128b4, { 1, 0, 2 }
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v5_12864, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_12864, { 0, 1, 3, 2 }
  uselistorder i32 25, { 11, 12, 0, 5, 1, 6, 2, 7, 4, 8, 9, 10, 3 }
  uselistorder i32 24, { 35, 36, 13, 11, 14, 12, 42, 67, 43, 55, 59, 37, 15, 38, 16, 39, 17, 40, 41, 62, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 63, 58, 64, 60, 61, 68, 69, 70, 65, 66, 71, 72, 0, 73, 18, 19, 1, 74, 4, 20, 21, 3, 75, 2, 76, 77, 22, 23, 5, 24, 25, 26, 6, 27, 7, 8, 28, 78, 29, 9, 79, 80, 81, 30, 31, 84, 32, 10, 85, 33, 82, 34, 83 }
  uselistorder i8 32, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i8 9, { 3, 4, 5, 6, 7, 2, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_12908, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_1289c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12864, { 1, 2, 0, 3 }
}

define i32 @function_12984(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12984:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12984 = load i32, i32* @r4, align 4
  store i32 %v3_12984, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1299c

dec_label_pc_1299c:                               ; preds = %dec_label_pc_129c8.dec_label_pc_1299c_crit_edge, %dec_label_pc_12984
  %v0_129a0 = phi i32 [ %v0_129a0.pre, %dec_label_pc_129c8.dec_label_pc_1299c_crit_edge ], [ %arg3, %dec_label_pc_12984 ]
  %v0_1299c = phi i32 [ %v1_129b4, %dec_label_pc_129c8.dec_label_pc_1299c_crit_edge ], [ %tmp, %dec_label_pc_12984 ]
  %v3_129a8 = inttoptr i32 %v0_1299c to i32*
  %v4_129a8 = call i32 @read(i32 %v0_129a0, i32* %v3_129a8, i32 1)
  %v7_129ac = icmp eq i32 %v4_129a8, 1
  %v0_129b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_129b4 = add i32 %v0_129b0, 1
  store i32 %v1_129b4, i32* %r4.global-to-local, align 4
  %v0_129bc = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_129ac, label %dec_label_pc_129bc, label %dec_label_pc_129d4

dec_label_pc_129bc:                               ; preds = %dec_label_pc_1299c
  %v1_129bc = add i32 %v0_129bc, 1
  store i32 %v1_129bc, i32* %r5.global-to-local, align 4
  %v0_129c0 = load i32, i32* %r7.global-to-local, align 4
  %v7_129c4 = icmp sgt i32 %v0_129c0, %v1_129bc
  br i1 %v7_129c4, label %dec_label_pc_129c8, label %dec_label_pc_129d4

dec_label_pc_129c8:                               ; preds = %dec_label_pc_129bc
  %v1_129c8 = inttoptr i32 %v0_129b0 to i8*
  %v2_129c8 = load i8, i8* %v1_129c8, align 1
  %v7_129cc = icmp eq i8 %v2_129c8, 10
  br i1 %v7_129cc, label %dec_label_pc_129d4, label %dec_label_pc_129c8.dec_label_pc_1299c_crit_edge

dec_label_pc_129c8.dec_label_pc_1299c_crit_edge:  ; preds = %dec_label_pc_129c8
  %v0_129a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1299c

dec_label_pc_129d4:                               ; preds = %dec_label_pc_1299c, %dec_label_pc_129c8, %dec_label_pc_129bc
  %v0_129d4 = phi i32 [ %v1_129bc, %dec_label_pc_129c8 ], [ %v1_129bc, %dec_label_pc_129bc ], [ %v0_129bc, %dec_label_pc_1299c ]
  %v2_129d4 = icmp eq i32 %v0_129d4, 0
  %v1_129d8 = load i32, i32* %r8.global-to-local, align 4
  %storemerge = select i1 %v2_129d4, i32 0, i32 %v1_129d8
  %v2_129e0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_129e0, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_129b4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i8 10, { 1, 0, 2 }
  uselistorder i32 (i32, i32*, i32)* @read, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_129d4, { 1, 2, 0 }
}

define i32 @function_129e4() local_unnamed_addr {
dec_label_pc_129e4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  store i32 16, i32* %stack_var_-24, align 4
  %v0_129f4 = call i32* @__errno_location()
  store i32 0, i32* %v0_129f4, align 4
  %v3_12a0c = call i32 @socket(i32 2, i32 0, i32 0)
  %v7_12a18 = icmp eq i32 %v3_12a0c, -1
  store i32 %v3_12a0c, i32* %r5.global-to-local, align 4
  %v2_12a24 = load i32, i32* %r4.global-to-local, align 4
  br i1 %v7_12a18, label %dec_label_pc_12a74, label %dec_label_pc_12a38

dec_label_pc_12a38:                               ; preds = %dec_label_pc_129e4
  %v7_12a24 = shl i32 2056, %v2_12a24
  %v8_12a24 = or i32 %v7_12a24, 2056
  %v2_129ec = ptrtoint i32* %stack_var_-40 to i32
  %v1_12a28 = inttoptr i32 %v2_12a24 to %sockaddr*
  store i32 2, i32* %stack_var_-40, align 4
  %v6_12a54 = call i32 @connect(i32 %v2_129ec, %sockaddr* %v1_12a28, i32 %v2_12a24)
  %tmp13 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v0_12a60 = load i32, i32* %r5.global-to-local, align 4
  %v6_12a64 = call i32 @getsockname(i32 %v0_12a60, %sockaddr* %tmp13, i32* nonnull %stack_var_-24)
  %v1_12a6c = call i32 @close(i32 %v0_12a60)
  br label %dec_label_pc_12a74

dec_label_pc_12a74:                               ; preds = %dec_label_pc_129e4, %dec_label_pc_12a38
  %v0_12a74 = phi i32 [ 0, %dec_label_pc_129e4 ], [ %v8_12a24, %dec_label_pc_12a38 ]
  ret i32 %v0_12a74

; uselistorder directives
  uselistorder i32 %v2_12a24, { 1, 0, 2 }
  uselistorder i32 %v3_12a0c, { 1, 0 }
  uselistorder i32 (i32)* @close, { 9, 0, 3, 8, 7, 2, 1, 6, 5, 24, 4, 12, 11, 10, 25, 23, 22, 16, 15, 14, 13, 30, 29, 28, 27, 26, 21, 20, 19, 18, 17, 31 }
  uselistorder i32 (i32, %sockaddr*, i32)* @connect, { 0, 4, 8, 6, 7, 5, 2, 1, 3, 9 }
  uselistorder i32 2056, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 8, 11, 17, 18, 13, 16, 12, 15, 14, 10, 9, 2, 1, 6, 0, 5, 4, 3, 7, 19 }
  uselistorder i32* ()* @__errno_location, { 3, 1, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_12a74, { 1, 0 }
}

define i32 @function_12a80(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12a80:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp20 = ptrtoint i8* %arg1 to i32
  %v3_12a84 = load i8, i8* %tmp, align 1
  %v2_12a88 = icmp eq i8 %v3_12a84, 0
  br i1 %v2_12a88, label %bb, label %dec_label_pc_12a9c

bb:                                               ; preds = %dec_label_pc_12a80
  %v4_12a84 = zext i8 %v3_12a84 to i32
  br label %dec_label_pc_12ab0

dec_label_pc_12a9c:                               ; preds = %dec_label_pc_12a80
  br label %dec_label_pc_12aa0

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12aa0, %dec_label_pc_12a9c
  %v0_12aa0 = phi i32 [ %v1_12aa0, %dec_label_pc_12aa0 ], [ 0, %dec_label_pc_12a9c ]
  %v1_12aa0 = add i32 %v0_12aa0, 1
  %v2_12aa4 = add i32 %v1_12aa0, %arg2
  %v3_12aa4 = inttoptr i32 %v2_12aa4 to i8*
  %v4_12aa4 = load i8, i8* %v3_12aa4, align 1
  %v2_12aa8 = icmp eq i8 %v4_12aa4, 0
  br i1 %v2_12aa8, label %dec_label_pc_12ab0, label %dec_label_pc_12aa0

dec_label_pc_12ab0:                               ; preds = %dec_label_pc_12aa0, %bb
  %v0_12af418 = phi i32 [ %v4_12a84, %bb ], [ %v1_12aa0, %dec_label_pc_12aa0 ]
  %v0_12ab81 = load i32, i32* @r1, align 4
  %tmp27 = icmp slt i32 %v0_12ab81, 1
  br i1 %tmp27, label %dec_label_pc_12b04, label %dec_label_pc_12ac4

dec_label_pc_12ac4:                               ; preds = %dec_label_pc_12ab0, %dec_label_pc_12ab8.backedge
  %v0_12abc.in = phi i32 [ %v0_12abc, %dec_label_pc_12ab8.backedge ], [ %v0_12ab81, %dec_label_pc_12ab0 ]
  %v0_12ae8 = phi i32 [ %v1_12ae8., %dec_label_pc_12ab8.backedge ], [ 0, %dec_label_pc_12ab0 ]
  %v0_12ac4 = phi i32 [ %v5_12ac4, %dec_label_pc_12ab8.backedge ], [ %tmp20, %dec_label_pc_12ab0 ]
  %v0_12abc = add i32 %v0_12abc.in, -1
  %v1_12ac4 = inttoptr i32 %v0_12ac4 to i8*
  %v2_12ac4 = load i8, i8* %v1_12ac4, align 1
  %v3_12ac4 = zext i8 %v2_12ac4 to i32
  %v5_12ac4 = add i32 %v0_12ac4, 1
  %v2_12ac8 = add i32 %v0_12ae8, %arg2
  %v3_12ac8 = inttoptr i32 %v2_12ac8 to i8*
  %v4_12ac8 = load i8, i8* %v3_12ac8, align 1
  %v6_12ac8 = zext i8 %v4_12ac8 to i32
  %v1_12acc = add nsw i32 %v3_12ac4, -65
  %v1_12ad0 = add nsw i32 %v6_12ac8, -65
  %tmp35 = icmp ult i32 %v1_12acc, 26
  br i1 %tmp35, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_12ac4
  %v5_12ad8 = or i32 %v3_12ac4, 96
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_12ac4, %bb28
  %v0_12ae4 = phi i32 [ %v3_12ac4, %dec_label_pc_12ac4 ], [ %v5_12ad8, %bb28 ]
  %tmp36 = icmp ult i32 %v1_12ad0, 26
  br i1 %tmp36, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %v5_12ae0 = or i32 %v6_12ac8, 96
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v1_12ae4 = phi i32 [ %v6_12ac8, %bb29 ], [ %v5_12ae0, %bb30 ]
  %v9_12ae4 = icmp eq i32 %v0_12ae4, %v1_12ae4
  %v1_12ae8 = add i32 %v0_12ae8, 1
  %v1_12ae8. = select i1 %v9_12ae4, i32 %v1_12ae8, i32 0
  br i1 %v9_12ae4, label %dec_label_pc_12af4, label %dec_label_pc_12ab8.backedge

dec_label_pc_12ab8.backedge:                      ; preds = %bb31, %dec_label_pc_12af4
  %tmp32 = icmp slt i32 %v0_12abc, 1
  br i1 %tmp32, label %dec_label_pc_12b04, label %dec_label_pc_12ac4

dec_label_pc_12af4:                               ; preds = %bb31
  %v9_12af4 = icmp eq i32 %v0_12af418, %v1_12ae8.
  br i1 %v9_12af4, label %dec_label_pc_12afc, label %dec_label_pc_12ab8.backedge

dec_label_pc_12afc:                               ; preds = %dec_label_pc_12af4
  %v2_12afc = sub i32 %v5_12ac4, %tmp20
  ret i32 %v2_12afc

dec_label_pc_12b04:                               ; preds = %dec_label_pc_12ab8.backedge, %dec_label_pc_12ab0
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_12ae8., { 1, 0 }
  uselistorder i32 %v0_12ac4, { 1, 0 }
  uselistorder i32 %v0_12ae8, { 1, 0 }
  uselistorder i8 %v3_12a84, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder i32* @r1, { 3, 14, 0, 15, 28, 29, 5, 4, 9, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 1, 19, 30, 31, 2, 20, 21, 22, 23, 24, 25, 26, 27, 32 }
  uselistorder label %dec_label_pc_12ab8.backedge, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_12ac4, { 1, 0 }
}

define i32 @function_12b0c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12b0c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12b0c = load i8, i8* %arg1, align 1
  %v2_12b10 = icmp eq i8 %v2_12b0c, 0
  br i1 %v2_12b10, label %bb, label %dec_label_pc_12b1c

bb:                                               ; preds = %dec_label_pc_12b0c
  %v3_12b0c = zext i8 %v2_12b0c to i32
  br label %dec_label_pc_12b30

dec_label_pc_12b1c:                               ; preds = %dec_label_pc_12b0c
  br label %dec_label_pc_12b20

dec_label_pc_12b20:                               ; preds = %dec_label_pc_12b20, %dec_label_pc_12b1c
  %v0_12b20 = phi i32 [ %v1_12b20, %dec_label_pc_12b20 ], [ 0, %dec_label_pc_12b1c ]
  %v1_12b20 = add i32 %v0_12b20, 1
  %v2_12b24 = add i32 %v1_12b20, %tmp
  %v3_12b24 = inttoptr i32 %v2_12b24 to i8*
  %v4_12b24 = load i8, i8* %v3_12b24, align 1
  %v2_12b28 = icmp eq i8 %v4_12b24, 0
  br i1 %v2_12b28, label %dec_label_pc_12b30, label %dec_label_pc_12b20

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b20, %bb
  %v1_12b54 = phi i32 [ %v3_12b0c, %bb ], [ %v1_12b20, %dec_label_pc_12b20 ]
  %v1_12b30 = inttoptr i32 %arg2 to i8*
  %v2_12b30 = load i8, i8* %v1_12b30, align 1
  %v2_12b34 = icmp eq i8 %v2_12b30, 0
  br i1 %v2_12b34, label %bb22, label %dec_label_pc_12b40

bb22:                                             ; preds = %dec_label_pc_12b30
  %v3_12b30 = zext i8 %v2_12b30 to i32
  br label %dec_label_pc_12b54

dec_label_pc_12b40:                               ; preds = %dec_label_pc_12b30
  br label %dec_label_pc_12b44

dec_label_pc_12b44:                               ; preds = %dec_label_pc_12b44, %dec_label_pc_12b40
  %v0_12b44 = phi i32 [ %v1_12b44, %dec_label_pc_12b44 ], [ 0, %dec_label_pc_12b40 ]
  %v1_12b44 = add i32 %v0_12b44, 1
  %v2_12b48 = add i32 %v1_12b44, %arg2
  %v3_12b48 = inttoptr i32 %v2_12b48 to i8*
  %v4_12b48 = load i8, i8* %v3_12b48, align 1
  %v2_12b4c = icmp eq i8 %v4_12b48, 0
  br i1 %v2_12b4c, label %dec_label_pc_12b54, label %dec_label_pc_12b44

dec_label_pc_12b54:                               ; preds = %dec_label_pc_12b44, %bb22
  %v0_12b804 = phi i32 [ %v3_12b30, %bb22 ], [ %v1_12b44, %dec_label_pc_12b44 ]
  %v9_12b54 = icmp eq i32 %v0_12b804, %v1_12b54
  br i1 %v9_12b54, label %dec_label_pc_12b80.preheader, label %dec_label_pc_12b60

dec_label_pc_12b80.preheader:                     ; preds = %dec_label_pc_12b54
  %v2_12b806 = icmp eq i32 %v1_12b54, 0
  br i1 %v2_12b806, label %dec_label_pc_12b88, label %dec_label_pc_12b68

dec_label_pc_12b60:                               ; preds = %dec_label_pc_12b68, %dec_label_pc_12b54
  ret i32 0

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b78, %dec_label_pc_12b80.preheader
  %v0_12b80.in = phi i32 [ %v0_12b80, %dec_label_pc_12b78 ], [ %v1_12b54, %dec_label_pc_12b80.preheader ]
  %v0_12b7c = phi i32 [ %v1_12b7c, %dec_label_pc_12b78 ], [ %arg2, %dec_label_pc_12b80.preheader ]
  %v0_12b78 = phi i32 [ %v1_12b78, %dec_label_pc_12b78 ], [ %tmp, %dec_label_pc_12b80.preheader ]
  %v0_12b80 = add i32 %v0_12b80.in, -1
  %v1_12b68 = inttoptr i32 %v0_12b78 to i8*
  %v2_12b68 = load i8, i8* %v1_12b68, align 1
  %v1_12b6c = inttoptr i32 %v0_12b7c to i8*
  %v2_12b6c = load i8, i8* %v1_12b6c, align 1
  %v9_12b70 = icmp eq i8 %v2_12b68, %v2_12b6c
  br i1 %v9_12b70, label %dec_label_pc_12b78, label %dec_label_pc_12b60

dec_label_pc_12b78:                               ; preds = %dec_label_pc_12b68
  %v1_12b78 = add i32 %v0_12b78, 1
  %v1_12b7c = add i32 %v0_12b7c, 1
  %v2_12b80 = icmp eq i32 %v0_12b80, 0
  br i1 %v2_12b80, label %dec_label_pc_12b88, label %dec_label_pc_12b68

dec_label_pc_12b88:                               ; preds = %dec_label_pc_12b78, %dec_label_pc_12b80.preheader
  ret i32 1

; uselistorder directives
  uselistorder i8 %v2_12b30, { 1, 0 }
  uselistorder i8 %v2_12b0c, { 1, 0 }
}

define i32 @function_12b90(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12b90:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-62 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12b90 = load i32, i32* @r4, align 4
  store i32 %v3_12b90, i32* %stack_var_-28, align 4
  %v22_12b90 = ptrtoint i32* %stack_var_-28 to i32
  %v0_12b94 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12b94, i32* %r8.global-to-local, align 4
  %v2_12b94 = icmp eq i32 %v0_12b94, 0
  store i1 %v2_12b94, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_12b94, label %dec_label_pc_12c84, label %dec_label_pc_12ba4

dec_label_pc_12ba4:                               ; preds = %dec_label_pc_12b90
  %v3_12ba4 = icmp eq i8 %arg1, 0
  store i1 %v3_12ba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12ba4, label %.thread, label %dec_label_pc_12bb8

.thread:                                          ; preds = %dec_label_pc_12ba4
  %v4_12bac = inttoptr i32 %v0_12b94 to i8*
  store i8 48, i8* %v4_12bac, align 1
  %v0_12bb0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12bb0.pr.pr, label %.thread1, label %dec_label_pc_12bb8

.thread1:                                         ; preds = %.thread
  %v4_12bb0 = load i32, i32* %r8.global-to-local, align 4
  %v5_12bb0 = add i32 %v4_12bb0, 1
  %v6_12bb0 = inttoptr i32 %v5_12bb0 to i8*
  store i8 0, i8* %v6_12bb0, align 1
  %v0_12bb4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12bb4.pr.pr, label %dec_label_pc_12c84, label %dec_label_pc_12bb8

dec_label_pc_12bb8:                               ; preds = %dec_label_pc_12ba4, %.thread, %.thread1
  %tmp40 = icmp slt i8 %arg1, 0
  %v7_12bbc = icmp eq i32 %arg2, 10
  store i1 %v7_12bbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12bbc, label %bb, label %.thread22

.thread22:                                        ; preds = %dec_label_pc_12bb8
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_12bb8
  %v4_12bb8 = zext i1 %tmp40 to i32
  store i32 %v4_12bb8, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp40, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  br i1 %phitmp, label %.thread4, label %dec_label_pc_12be0

.thread4:                                         ; preds = %bb, %.thread22
  br label %dec_label_pc_12bf0

dec_label_pc_12be0:                               ; preds = %bb
  %v2_12be0 = sub nsw i32 0, %tmp
  store i1 %v3_12ba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12ba4, label %dec_label_pc_12c90, label %dec_label_pc_12bf0

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12be0, %.thread4
  %v0_12bf810 = phi i32 [ %tmp, %.thread4 ], [ %v2_12be0, %dec_label_pc_12be0 ]
  %storemerge = phi i32 [ 0, %.thread4 ], [ 1, %dec_label_pc_12be0 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r6.global-to-local, align 4
  %v2_12bf4 = ptrtoint i32* %stack_var_-30 to i32
  store i32 %v2_12bf4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12bf8

dec_label_pc_12bf8:                               ; preds = %bb38, %dec_label_pc_12bf0
  %v2_12c18 = phi i32 [ %v5_12c18, %bb38 ], [ %v2_12bf4, %dec_label_pc_12bf0 ]
  %v0_12c14 = phi i32 [ %v2_12c1c, %bb38 ], [ %v0_12bf810, %dec_label_pc_12bf0 ]
  %v0_12bfc = load i32, i32* %r5.global-to-local, align 4
  %v2_12c00 = urem i32 %v0_12c14, %v0_12bfc
  store i32 %v2_12c00, i32* %r0.global-to-local, align 4
  %v7_12c04 = icmp eq i32 %v2_12c00, 9
  store i1 %v7_12c04, i1* %cpsr_z.global-to-local, align 1
  %v1_12c08 = add i32 %v2_12c00, 48
  store i32 %v0_12bfc, i32* %r1.global-to-local, align 4
  %v7_12c10 = icmp sgt i32 %v2_12c00, 9
  %extract.t = trunc i32 %v1_12c08 to i8
  br i1 %v7_12c10, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_12bf8
  %v9_12c10 = add i32 %v2_12c00, 55
  %extract.t21 = trunc i32 %v9_12c10 to i8
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_12bf8, %bb37
  %v0_12c18.off0 = phi i8 [ %extract.t, %dec_label_pc_12bf8 ], [ %extract.t21, %bb37 ]
  store i32 %v0_12c14, i32* %r0.global-to-local, align 4
  %v3_12c18 = inttoptr i32 %v2_12c18 to i8*
  store i8 %v0_12c18.off0, i8* %v3_12c18, align 1
  %v4_12c18 = load i32, i32* %r7.global-to-local, align 4
  %v5_12c18 = add i32 %v4_12c18, -1
  store i32 %v5_12c18, i32* %r7.global-to-local, align 4
  %v0_12c1c = load i32, i32* %r0.global-to-local, align 4
  %v1_12c1c = load i32, i32* %r1.global-to-local, align 4
  %v2_12c1c = udiv i32 %v0_12c1c, %v1_12c1c
  store i32 %v2_12c1c, i32* %r0.global-to-local, align 4
  %v2_12c20 = icmp ugt i32 %v1_12c1c, %v0_12c1c
  store i1 %v2_12c20, i1* %cpsr_z.global-to-local, align 1
  %v0_12c24 = load i32, i32* %r6.global-to-local, align 4
  %v1_12c24 = add i32 %v0_12c24, -1
  store i32 %v1_12c24, i32* %r6.global-to-local, align 4
  br i1 %v2_12c20, label %dec_label_pc_12c2c, label %dec_label_pc_12bf8

dec_label_pc_12c2c:                               ; preds = %bb38
  %v0_12c2c = load i32, i32* %sl.global-to-local, align 4
  %v2_12c2c = icmp eq i32 %v0_12c2c, 0
  store i1 %v2_12c2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c2c, label %bb39, label %dec_label_pc_12c94

bb39:                                             ; preds = %dec_label_pc_12c2c
  store i32 %v0_12c24, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12c38

dec_label_pc_12c38:                               ; preds = %bb39, %dec_label_pc_12c94
  %v1_12c44 = phi i32 [ %v0_12c24, %bb39 ], [ %v1_12c3c.pre, %dec_label_pc_12c94 ]
  %v2_12c38 = ptrtoint i32* %stack_var_-62 to i32
  %v2_12c3c = add i32 %v1_12c44, %v2_12c38
  %v3_12c3c = inttoptr i32 %v2_12c3c to i8*
  %v4_12c3c = load i8, i8* %v3_12c3c, align 1
  %v6_12c3c = zext i8 %v4_12c3c to i32
  store i32 %v6_12c3c, i32* %r2.global-to-local, align 4
  %v2_12c40 = icmp eq i8 %v4_12c3c, 0
  store i1 %v2_12c40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_12c3c, i32* %r1.global-to-local, align 4
  br i1 %v2_12c40, label %dec_label_pc_12c68, label %dec_label_pc_12c4c

dec_label_pc_12c4c:                               ; preds = %dec_label_pc_12c38
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12c50

dec_label_pc_12c50:                               ; preds = %dec_label_pc_12c50, %dec_label_pc_12c4c
  %v0_12c50 = phi i32 [ %v1_12c50, %dec_label_pc_12c50 ], [ 0, %dec_label_pc_12c4c ]
  %v1_12c50 = add i32 %v0_12c50, 1
  store i32 %v1_12c50, i32* %r2.global-to-local, align 4
  %v2_12c54 = add i32 %v1_12c50, %v2_12c3c
  %v3_12c54 = inttoptr i32 %v2_12c54 to i8*
  %v4_12c54 = load i8, i8* %v3_12c54, align 1
  %v2_12c58 = icmp eq i8 %v4_12c54, 0
  store i1 %v2_12c58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c58, label %dec_label_pc_12c60, label %dec_label_pc_12c50

dec_label_pc_12c60:                               ; preds = %dec_label_pc_12c50
  %v7_12c60 = icmp eq i32 %v0_12c50, -2
  store i1 %v7_12c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12c60, label %dec_label_pc_12c84, label %dec_label_pc_12c68

dec_label_pc_12c68:                               ; preds = %dec_label_pc_12c60, %dec_label_pc_12c38
  %v0_12c7018 = phi i32 [ %v1_12c50, %dec_label_pc_12c60 ], [ %v6_12c3c, %dec_label_pc_12c38 ]
  store i32 %v2_12c3c, i32* %r0.global-to-local, align 4
  %v0_12c6c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12c6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12c70

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12c70.dec_label_pc_12c70_crit_edge, %dec_label_pc_12c68
  %v2_12c7c = phi i32 [ %v5_12c7c, %dec_label_pc_12c70.dec_label_pc_12c70_crit_edge ], [ %v0_12c6c, %dec_label_pc_12c68 ]
  %v0_12c74 = phi i32 [ %v0_12c74.pre, %dec_label_pc_12c70.dec_label_pc_12c70_crit_edge ], [ %v2_12c3c, %dec_label_pc_12c68 ]
  %v0_12c70 = phi i32 [ %v0_12c70.pre, %dec_label_pc_12c70.dec_label_pc_12c70_crit_edge ], [ %v0_12c7018, %dec_label_pc_12c68 ]
  %v1_12c70 = add i32 %v0_12c70, -1
  store i32 %v1_12c70, i32* %r2.global-to-local, align 4
  %v1_12c74 = inttoptr i32 %v0_12c74 to i8*
  %v2_12c74 = load i8, i8* %v1_12c74, align 1
  %v5_12c74 = add i32 %v0_12c74, 1
  store i32 %v5_12c74, i32* %r0.global-to-local, align 4
  %v3_12c78 = icmp eq i32 %v0_12c70, 0
  store i1 %v3_12c78, i1* %cpsr_z.global-to-local, align 1
  %v3_12c7c = inttoptr i32 %v2_12c7c to i8*
  store i8 %v2_12c74, i8* %v3_12c7c, align 1
  %v4_12c7c = load i32, i32* %r1.global-to-local, align 4
  %v5_12c7c = add i32 %v4_12c7c, 1
  store i32 %v5_12c7c, i32* %r1.global-to-local, align 4
  br i1 %v3_12c78, label %dec_label_pc_12c84, label %dec_label_pc_12c70.dec_label_pc_12c70_crit_edge

dec_label_pc_12c70.dec_label_pc_12c70_crit_edge:  ; preds = %dec_label_pc_12c70
  %v0_12c70.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_12c74.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c70

dec_label_pc_12c84:                               ; preds = %dec_label_pc_12c70, %dec_label_pc_12c60, %.thread1, %dec_label_pc_12b90
  %v0_12c84 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12c84, i32* %r0.global-to-local, align 4
  %v2_12c8c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_12c8c, i32* @r4, align 4
  ret i32 %v0_12c84

dec_label_pc_12c90:                               ; preds = %dec_label_pc_12be0
  store i32 32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12c94

dec_label_pc_12c94:                               ; preds = %dec_label_pc_12c2c, %dec_label_pc_12c90
  %v1_12c98 = phi i32 [ %v1_12c24, %dec_label_pc_12c2c ], [ 32, %dec_label_pc_12c90 ]
  %v2_12c98 = add i32 %v1_12c98, %v22_12b90
  store i32 %v2_12c98, i32* %r2.global-to-local, align 4
  %v3_12ca0 = add i32 %v2_12c98, -34
  %v4_12ca0 = inttoptr i32 %v3_12ca0 to i8*
  store i8 45, i8* %v4_12ca0, align 1
  %v1_12c3c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12c38

; uselistorder directives
  uselistorder i32 %v5_12c7c, { 1, 0 }
  uselistorder i1 %v3_12c78, { 1, 0 }
  uselistorder i32 %v0_12c74, { 1, 0 }
  uselistorder i1 %v7_12c60, { 1, 0 }
  uselistorder i32 %v1_12c50, { 0, 1, 3, 2 }
  uselistorder i32 %v2_12c3c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12c1c, { 1, 0 }
  uselistorder i32 %v5_12c18, { 1, 0 }
  uselistorder i32 %v2_12c00, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 1, 0 }
  uselistorder i1 %v3_12ba4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12b94, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 0, 7, 8, 2, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder i32 9, { 4, 46, 9, 5, 10, 6, 11, 7, 8, 12, 33, 28, 14, 32, 15, 31, 13, 3, 34, 29, 2, 30, 35, 16, 36, 17, 37, 18, 38, 19, 39, 40, 20, 41, 42, 21, 22, 43, 23, 44, 24, 45, 0, 25, 1, 26, 58, 47, 48, 27, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60 }
  uselistorder i32 32, { 28, 42, 43, 30, 36, 29, 35, 31, 37, 32, 38, 33, 39, 4, 3, 6, 5, 8, 7, 10, 9, 34, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20, 21, 23, 22, 40, 41, 44, 45, 24, 46, 0, 25, 1, 2, 26, 27 }
  uselistorder i32 10, { 54, 0, 3, 29, 33, 9, 32, 2, 34, 35, 30, 10, 36, 31, 37, 11, 38, 12, 39, 13, 40, 14, 41, 15, 42, 16, 43, 17, 44, 18, 45, 19, 46, 20, 47, 21, 48, 22, 49, 50, 51, 23, 1, 24, 25, 52, 26, 53, 4, 55, 56, 57, 58, 59, 60, 61, 62, 63, 5, 64, 65, 66, 6, 67, 68, 69, 27, 70, 7, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 76, 8, 82, 28 }
  uselistorder i8 0, { 18, 19, 0, 7, 20, 21, 22, 23, 24, 25, 26, 4, 27, 28, 29, 30, 31, 32, 1, 9, 8, 10, 35, 37, 34, 13, 36, 14, 38, 39, 33, 2, 40, 41, 42, 5, 6, 3, 43, 44, 16, 45, 46, 49, 17, 47, 48, 15, 50, 51, 52, 53, 54, 55, 11, 56, 57, 12, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c94, { 1, 0 }
  uselistorder label %dec_label_pc_12c38, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_12bb8, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_12ca8 = add i32 %arg2, -1
  %v7_12ca8 = icmp eq i32 %arg2, 1
  br i1 %v7_12ca8, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_12cac = load i32, i32* @r0, align 4
  ret i32 %v2_12cac

bb80:                                             ; preds = %entry
  %v2_12ca8 = icmp eq i32 %arg2, 0
  br i1 %v2_12ca8, label %dec_label_pc_12d90, label %dec_label_pc_12cb4

dec_label_pc_12cb4:                               ; preds = %bb80
  %v0_12cb4 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_12cb4, %arg2
  br i1 %tmp, label %dec_label_pc_12cbc, label %dec_label_pc_12d48

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12cb4
  %v2_12cbc = and i32 %v1_12ca8, %arg2
  %v4_12cbc = icmp eq i32 %v2_12cbc, 0
  br i1 %v4_12cbc, label %dec_label_pc_12d54, label %dec_label_pc_12cc4

dec_label_pc_12cc4:                               ; preds = %dec_label_pc_12cbc
  %v3_12cc4 = icmp ult i32 %arg2, 536870912
  br i1 %v3_12cc4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12cc4
  %v4_12cc8 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12cc4, %.thread
  %v0_12ce8.pr36.ph = phi i32 [ %v4_12cc8, %.thread ], [ %arg2, %dec_label_pc_12cc4 ]
  %storemerge115 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12cc4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_12ce8.pr36 = phi i32 [ %v4_12cdc, %bb83 ], [ %v0_12ce8.pr36.ph, %.preheader.preheader ]
  %v1_12ce0 = phi i32 [ %v4_12ce0, %bb83 ], [ %storemerge115, %.preheader.preheader ]
  %v2_12cd4 = icmp ugt i32 %v0_12ce8.pr36, 268435455
  br i1 %v2_12cd4, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12ce8thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_12cd8 = icmp ult i32 %v0_12ce8.pr36, %v0_12cb4
  br i1 %v4_12cd8, label %bb82, label %dec_label_pc_12ce8thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_12cdc = and i32 %v0_12ce8.pr36, 268435456
  %v3_12cdc = icmp eq i32 %v2_12cdc, 0
  %v4_12cdc = mul i32 %v0_12ce8.pr36, 16
  br i1 %v3_12cdc, label %bb83, label %dec_label_pc_12ce8.loopexit

bb83:                                             ; preds = %bb82
  %v2_12ce0 = and i32 %v1_12ce0, 268435456
  %v3_12ce0 = icmp eq i32 %v2_12ce0, 0
  %v4_12ce0 = mul i32 %v1_12ce0, 16
  br i1 %v3_12ce0, label %.preheader, label %dec_label_pc_12ce8thread-pre-split.loopexit.loopexit

dec_label_pc_12ce8thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_12cf448.ph = phi i32 [ %v1_12ce0, %bb81 ], [ %v4_12ce0, %bb83 ]
  %v0_12ce8.pr38.ph = phi i32 [ %v0_12ce8.pr36, %bb81 ], [ %v4_12cdc, %bb83 ]
  br label %dec_label_pc_12ce8thread-pre-split.loopexit

dec_label_pc_12ce8thread-pre-split.loopexit:      ; preds = %dec_label_pc_12ce8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_12cf448 = phi i32 [ %v1_12ce0, %.thread2 ], [ %v1_12cf448.ph, %dec_label_pc_12ce8thread-pre-split.loopexit.loopexit ]
  %v0_12ce8.pr38 = phi i32 [ %v0_12ce8.pr36, %.thread2 ], [ %v0_12ce8.pr38.ph, %dec_label_pc_12ce8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12ce8thread-pre-split

dec_label_pc_12ce8thread-pre-split:               ; preds = %dec_label_pc_12ce8thread-pre-split.loopexit, %bb85
  %v1_12cf446 = phi i32 [ %v1_12cf448, %dec_label_pc_12ce8thread-pre-split.loopexit ], [ %v3_12cf4, %bb85 ]
  %v0_12ce8.pr = phi i32 [ %v0_12ce8.pr38, %dec_label_pc_12ce8thread-pre-split.loopexit ], [ %v3_12cf0, %bb85 ]
  br label %dec_label_pc_12ce8

dec_label_pc_12ce8.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_12ce8

dec_label_pc_12ce8:                               ; preds = %dec_label_pc_12ce8.loopexit, %dec_label_pc_12ce8thread-pre-split
  %v1_12cf4 = phi i32 [ %v1_12cf446, %dec_label_pc_12ce8thread-pre-split ], [ %v1_12ce0, %dec_label_pc_12ce8.loopexit ]
  %v1_12cf0 = phi i32 [ %v0_12ce8.pr, %dec_label_pc_12ce8thread-pre-split ], [ %v4_12cdc, %dec_label_pc_12ce8.loopexit ]
  %v2_12ce8 = icmp slt i32 %v1_12cf0, 0
  br i1 %v2_12ce8, label %dec_label_pc_12cfc, label %bb84

bb84:                                             ; preds = %dec_label_pc_12ce8
  %v4_12cec = icmp ult i32 %v1_12cf0, %v0_12cb4
  br i1 %v4_12cec, label %bb85, label %dec_label_pc_12cfc

bb85:                                             ; preds = %bb84
  %v3_12cf0 = mul i32 %v1_12cf0, 2
  %v2_12cf4 = icmp slt i32 %v1_12cf4, 0
  %v3_12cf4 = mul i32 %v1_12cf4, 2
  br i1 %v2_12cf4, label %dec_label_pc_12cfc, label %dec_label_pc_12ce8thread-pre-split

dec_label_pc_12cfc:                               ; preds = %bb84, %dec_label_pc_12ce8, %bb85
  %v2_12d0859 = phi i32 [ %v3_12cf4, %bb85 ], [ %v1_12cf4, %bb84 ], [ %v1_12cf4, %dec_label_pc_12ce8 ]
  %v1_12d0051 = phi i32 [ %v3_12cf0, %bb85 ], [ %v1_12cf0, %bb84 ], [ %v1_12cf0, %dec_label_pc_12ce8 ]
  br label %dec_label_pc_12d00

dec_label_pc_12d00:                               ; preds = %.thread11, %dec_label_pc_12cfc
  %v1_12d34 = phi i32 [ %v4_12d34, %.thread11 ], [ %v2_12d0859, %dec_label_pc_12cfc ]
  %v1_12d08 = phi i32 [ %v0_12d40, %.thread11 ], [ 0, %dec_label_pc_12cfc ]
  %v1_12d38 = phi i32 [ %v4_12d38, %.thread11 ], [ %v1_12d0051, %dec_label_pc_12cfc ]
  %v1_12d04 = phi i32 [ %v0_12d30, %.thread11 ], [ %v0_12cb4, %dec_label_pc_12cfc ]
  %v3_12d00 = icmp ult i32 %v1_12d04, %v1_12d38
  br i1 %v3_12d00, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_12d00
  %v3_12d04 = sub i32 %v1_12d04, %v1_12d38
  %v3_12d08 = or i32 %v1_12d08, %v1_12d34
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12d00, %bb86
  %v1_12d10 = phi i32 [ %v1_12d04, %dec_label_pc_12d00 ], [ %v3_12d04, %bb86 ]
  %v1_12d14 = phi i32 [ %v1_12d08, %dec_label_pc_12d00 ], [ %v3_12d08, %bb86 ]
  %v4_12d0c = udiv i32 %v1_12d38, 2
  %v6_12d0c = icmp ult i32 %v1_12d10, %v4_12d0c
  br i1 %v6_12d0c, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_12d10 = urem i32 %v1_12d38, 2
  %v4_12d10 = icmp eq i32 %v3_12d10, 0
  %v6_12d10 = sub i32 %v1_12d10, %v4_12d0c
  br i1 %v4_12d10, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_12d14 = udiv i32 %v1_12d34, 2
  %v6_12d14 = or i32 %v1_12d14, %v5_12d14
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_12d1c = phi i32 [ %v6_12d10, %bb87 ], [ %v1_12d10, %.thread7 ], [ %v6_12d10, %bb88 ]
  %v1_12d20 = phi i32 [ %v1_12d14, %bb87 ], [ %v1_12d14, %.thread7 ], [ %v6_12d14, %bb88 ]
  %v4_12d18 = udiv i32 %v1_12d38, 4
  %v6_12d18 = icmp ult i32 %v1_12d1c, %v4_12d18
  br i1 %v6_12d18, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_12d1c = and i32 %v1_12d38, 2
  %v4_12d1c = icmp eq i32 %v3_12d1c, 0
  %v6_12d1c = sub i32 %v1_12d1c, %v4_12d18
  br i1 %v4_12d1c, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12d20 = udiv i32 %v1_12d34, 4
  %v6_12d20 = or i32 %v1_12d20, %v5_12d20
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_12d28 = phi i32 [ %v6_12d1c, %bb89 ], [ %v1_12d1c, %.thread8 ], [ %v6_12d1c, %bb90 ]
  %v1_12d2c = phi i32 [ %v1_12d20, %bb89 ], [ %v1_12d20, %.thread8 ], [ %v6_12d20, %bb90 ]
  %v4_12d24 = udiv i32 %v1_12d38, 8
  %v6_12d24 = icmp ult i32 %v1_12d28, %v4_12d24
  br i1 %v6_12d24, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_12d28 = and i32 %v1_12d38, 4
  %v4_12d28 = icmp eq i32 %v3_12d28, 0
  %v6_12d28 = sub i32 %v1_12d28, %v4_12d24
  br i1 %v4_12d28, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_12d2c = udiv i32 %v1_12d34, 8
  %v6_12d2c = or i32 %v1_12d2c, %v5_12d2c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_12d40 = phi i32 [ %v1_12d2c, %bb91 ], [ %v1_12d2c, %.thread9 ], [ %v6_12d2c, %bb92 ]
  %v0_12d30 = phi i32 [ %v6_12d28, %bb91 ], [ %v1_12d28, %.thread9 ], [ %v6_12d28, %bb92 ]
  %v2_12d30 = icmp eq i32 %v0_12d30, 0
  br i1 %v2_12d30, label %dec_label_pc_12d40, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp120 = icmp ult i32 %v1_12d34, 16
  br i1 %tmp120, label %dec_label_pc_12d40, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_12d34 = udiv i32 %v1_12d34, 16
  %v4_12d38 = udiv i32 %v1_12d38, 16
  br label %dec_label_pc_12d00

dec_label_pc_12d40:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_12d40

dec_label_pc_12d48:                               ; preds = %dec_label_pc_12cb4
  %v9_12cb4 = icmp eq i32 %v0_12cb4, %arg2
  %. = zext i1 %v9_12cb4 to i32
  ret i32 %.

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12cbc
  %v2_12d54 = icmp ugt i32 %arg2, 65535
  br i1 %v2_12d54, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_12d54
  %v2_12d58 = and i32 %arg2, 32768
  %v3_12d58 = icmp eq i32 %v2_12d58, 0
  %v4_12d58 = udiv i32 %arg2, 65536
  br i1 %v3_12d58, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_12d54
  %v0_12d6465 = phi i32 [ %arg2, %dec_label_pc_12d54 ], [ %v4_12d58, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_12d68 = phi i32 [ %v0_12d6465, %.thread16 ], [ %v4_12d58, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_12d64 = icmp ugt i32 %v1_12d68, 255
  br i1 %v2_12d64, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_12d68 = and i32 %v1_12d68, 128
  %v3_12d68 = icmp eq i32 %v2_12d68, 0
  %v4_12d68 = udiv i32 %v1_12d68, 256
  br i1 %v3_12d68, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12d6c = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_12d78 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_12d6c, %bb100 ]
  %v1_12d74 = phi i32 [ %v1_12d68, %bb98 ], [ %v4_12d68, %bb99 ], [ %v4_12d68, %bb100 ]
  %v2_12d70 = icmp ugt i32 %v1_12d74, 15
  br i1 %v2_12d70, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_12d74 = and i32 %v1_12d74, 8
  %v3_12d74 = icmp eq i32 %v2_12d74, 0
  %v4_12d74 = udiv i32 %v1_12d74, 16
  br i1 %v3_12d74, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_12d78 = add nsw i32 %v1_12d78, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_12d80 = phi i32 [ %v1_12d78, %.thread17 ], [ %v1_12d78, %bb101 ], [ %v2_12d78, %bb102 ]
  %v5_12d84 = phi i32 [ %v1_12d74, %.thread17 ], [ %v4_12d74, %bb101 ], [ %v4_12d74, %bb102 ]
  %v2_12d7c = icmp ugt i32 %v5_12d84, 3
  %v7_12d7c = icmp eq i32 %v5_12d84, 4
  %v2_12d80 = xor i1 %v7_12d7c, true
  %v3_12d80 = and i1 %v2_12d7c, %v2_12d80
  br i1 %v3_12d80, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_12d80 = add nsw i32 %v4_12d80, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_12d84 = phi i32 [ %v4_12d80, %.thread18 ], [ %v5_12d80, %bb103 ]
  %v2_12d84 = xor i1 %v2_12d7c, true
  %v3_12d84 = or i1 %v7_12d7c, %v2_12d84
  br i1 %v3_12d84, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_12d84 = udiv i32 %v5_12d84, 2
  %v9_12d84 = add i32 %v4_12d84, %v8_12d84
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_12d88 = phi i32 [ %v4_12d84, %bb104 ], [ %v9_12d84, %bb105 ]
  %v6_12d88 = lshr i32 %v0_12cb4, %v1_12d88
  ret i32 %v6_12d88

dec_label_pc_12d90:                               ; preds = %bb80
  %v0_12d90 = load i32, i32* @lr, align 4
  %v0_12d94 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_12d90)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12d84, { 1, 0 }
  uselistorder i1 %v7_12d7c, { 1, 0 }
  uselistorder i32 %v4_12d74, { 1, 0 }
  uselistorder i32 %v1_12d74, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12d68, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12d68, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12d58, { 1, 0 }
  uselistorder i32 %v0_12d30, { 1, 0 }
  uselistorder i32 %v4_12d24, { 1, 0 }
  uselistorder i32 %v1_12d2c, { 1, 2, 0 }
  uselistorder i32 %v4_12d18, { 1, 0 }
  uselistorder i32 %v1_12d20, { 1, 2, 0 }
  uselistorder i32 %v4_12d0c, { 1, 0 }
  uselistorder i32 %v1_12d14, { 1, 2, 0 }
  uselistorder i32 %v1_12d38, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12d08, { 1, 0 }
  uselistorder i32 %v1_12d34, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12cf4, { 1, 0 }
  uselistorder i32 %v3_12cf0, { 1, 0 }
  uselistorder i32 %v1_12cf0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_12cf4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12ce0, { 1, 0 }
  uselistorder i32 %v4_12cdc, { 2, 1, 0 }
  uselistorder i32 %v1_12ce0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12ce8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_12cb4, { 2, 5, 3, 1, 4, 0 }
  uselistorder i1 true, { 0, 1, 48, 2, 3, 4, 5, 6, 100, 40, 49, 54, 101, 56, 77, 10, 11, 69, 12, 78, 79, 80, 81, 70, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 13, 14, 41, 42, 98, 99, 68, 47, 55, 102, 8, 9, 67, 7, 103, 16, 15, 57, 63, 58, 64, 52, 62, 53, 66, 104, 17, 105, 106, 18, 19, 20, 107, 71, 72, 21, 22, 108, 73, 74, 23, 24, 109, 75, 76, 25, 26, 51, 110, 111, 65, 112, 27, 43, 44, 59, 28, 45, 60, 29, 46, 30, 31, 32, 61, 33, 50, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 15, { 11, 3, 12, 0, 13, 4, 14, 5, 6, 7, 8, 9, 1, 15, 16, 10, 17, 18, 19, 20, 2, 21 }
  uselistorder i32 256, { 0, 1, 2, 5, 6, 7, 3, 4, 8, 11, 12, 13, 9, 10, 14, 15, 16, 17, 18, 359, 360, 19, 20, 21, 22, 23, 24, 25, 362, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 38, 39, 43, 42, 41, 44, 358, 363, 49, 45, 48, 46, 47, 361, 50, 51, 52, 53, 364, 54, 55, 56, 57, 58, 365, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 86, 88, 89, 90, 94, 100, 95, 91, 92, 96, 97, 98, 101, 93, 102, 103, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 115, 118, 120, 122, 121, 119, 123, 126, 125, 124, 133, 130, 127, 134, 131, 128, 129, 135, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 152, 154, 155, 156, 167, 162, 157, 168, 163, 169, 164, 170, 171, 165, 172, 166, 158, 159, 160, 173, 174, 161, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 195, 202, 199, 197, 203, 200, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 219, 218, 221, 223, 228, 229, 224, 230, 225, 222, 231, 226, 227, 232, 233, 234, 235, 236, 237, 238, 241, 242, 239, 243, 240, 245, 244, 246, 247, 248, 249, 250, 253, 254, 257, 255, 251, 258, 256, 252, 261, 260, 259, 357, 366, 262, 263, 269, 264, 270, 265, 266, 271, 267, 272, 273, 268, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 292, 294, 295, 299, 300, 307, 301, 302, 308, 303, 296, 297, 309, 304, 298, 305, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 324, 326, 327, 331, 332, 339, 333, 334, 340, 335, 328, 329, 341, 336, 330, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356 }
  uselistorder i32 128, { 6, 7, 8, 13, 0, 14, 9, 10, 11, 12, 17, 1, 15, 2, 16, 3, 4, 5, 18, 19 }
  uselistorder i32 255, { 5, 6, 2, 7, 3, 8, 4, 9, 0, 1 }
  uselistorder i32 65536, { 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 15, 14, 17, 16, 18, 1, 19, 0, 2, 20, 21, 22, 23, 24, 27, 25, 26, 28, 29, 30, 35, 36, 37, 38, 31, 32, 33, 34, 39, 42, 43, 40, 44, 41, 45, 49, 50, 51, 46, 47, 48, 52, 53, 3, 55, 56, 54, 57, 58, 59, 63, 64, 60, 61, 65, 62, 66, 68, 69, 70, 67, 71, 93, 73, 72, 74, 76, 75, 78, 77, 79, 80, 83, 84, 85, 81, 82, 86, 87, 90, 91, 92, 88, 89 }
  uselistorder i32 32768, { 1, 0 }
  uselistorder i32 65535, { 89, 41, 0, 1, 10, 42, 20, 19, 23, 43, 22, 44, 12, 11, 2, 25, 45, 24, 46, 48, 13, 47, 3, 49, 50, 26, 51, 27, 52, 28, 53, 54, 29, 55, 57, 14, 56, 21, 58, 59, 60, 61, 30, 62, 31, 63, 65, 15, 64, 4, 66, 67, 68, 69, 32, 70, 33, 71, 34, 72, 73, 16, 5, 74, 35, 75, 36, 76, 78, 17, 77, 6, 7, 79, 80, 38, 81, 37, 82, 84, 18, 83, 8, 9, 85, 86, 40, 87, 39, 88 }
  uselistorder i32 %arg2, { 7, 12, 6, 5, 4, 10, 11, 8, 9, 0, 3, 1, 2 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_12d40, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12cfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ce8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12da4 = udiv i32 %arg1, %arg2
  ret i32 %v2_12da4
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_12db8 = add i32 %arg2, -1
  %v2_12db8 = icmp eq i32 %arg2, 0
  br i1 %v2_12db8, label %dec_label_pc_12e74, label %dec_label_pc_12dc0

dec_label_pc_12dc0:                               ; preds = %entry
  %v7_12db8 = icmp eq i32 %arg2, 1
  br i1 %v7_12db8, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_12dc0
  %v1_12dc0 = load i32, i32* @r0, align 4
  %v10_12dc0 = icmp eq i32 %v1_12dc0, %arg2
  br i1 %v10_12dc0, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_12dc0, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_12dc0 = icmp ult i32 %v1_12dc0, %arg2
  br i1 %v4_12dc0, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_12dc8 = and i32 %v1_12db8, %arg2
  %v8_12dc8 = icmp eq i32 %v6_12dc8, 0
  br i1 %v8_12dc8, label %.thread67, label %dec_label_pc_12dd8.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_12dcc = phi i32 [ %v1_12dc0, %bb75 ], [ 0, %.thread65 ]
  %v3_12dcc = and i32 %v1_12dcc, %v1_12db8
  br label %bb76

dec_label_pc_12dd8.preheader:                     ; preds = %bb75
  %v2_12dd897 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_12dd897, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_12e68, %bb74, %bb89, %bb84, %dec_label_pc_12e38, %.thread67
  %v5_12dd0 = phi i32 [ %v1_12dc0, %bb74 ], [ %v3_12dcc, %.thread67 ], [ %v1_12e14.v6_12e14.v6_12e1c.v6_12e24, %dec_label_pc_12e38 ], [ 0, %bb84 ], [ %v1_12e6c, %dec_label_pc_12e68 ], [ %v2_12e68, %bb89 ]
  ret i32 %v5_12dd0

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_12dd8.preheader
  %v0_12dec.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_12dd8.preheader ], [ %v4_12de0, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12dd8.preheader ], [ %v2_12de411, %.thread1.thread9 ]
  br label %dec_label_pc_12decthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_12dd8.preheader, %.thread1.thread9
  %storemerge99 = phi i32 [ %v2_12de411, %.thread1.thread9 ], [ 0, %dec_label_pc_12dd8.preheader ]
  %v0_12dec.pr3398 = phi i32 [ %v4_12de0, %.thread1.thread9 ], [ %arg2, %dec_label_pc_12dd8.preheader ]
  %v4_12ddc = icmp ult i32 %v0_12dec.pr3398, %v1_12dc0
  br i1 %v4_12ddc, label %bb78, label %dec_label_pc_12decthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_12de0 = and i32 %v0_12dec.pr3398, 268435456
  %v3_12de0 = icmp eq i32 %v2_12de0, 0
  %v4_12de0 = mul i32 %v0_12dec.pr3398, 16
  br i1 %v3_12de0, label %.thread1.thread9, label %dec_label_pc_12dec.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_12de411 = add i32 %storemerge99, 4
  %v2_12dd8 = icmp ugt i32 %v4_12de0, 268435455
  br i1 %v2_12dd8, label %.thread, label %bb77

dec_label_pc_12decthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_12decthread-pre-split.loopexit

dec_label_pc_12decthread-pre-split.loopexit:      ; preds = %dec_label_pc_12decthread-pre-split.loopexit.loopexit, %.thread
  %v0_12dec.pr3396 = phi i32 [ %v0_12dec.pr33.lcssa, %.thread ], [ %v0_12dec.pr3398, %dec_label_pc_12decthread-pre-split.loopexit.loopexit ]
  %storemerge93 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge99, %dec_label_pc_12decthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12decthread-pre-split

dec_label_pc_12decthread-pre-split:               ; preds = %.thread4, %dec_label_pc_12decthread-pre-split.loopexit
  %v1_12df839 = phi i32 [ %storemerge93, %dec_label_pc_12decthread-pre-split.loopexit ], [ %v2_12df8, %.thread4 ]
  %v0_12dec.pr = phi i32 [ %v0_12dec.pr3396, %dec_label_pc_12decthread-pre-split.loopexit ], [ %v3_12df4, %.thread4 ]
  br label %dec_label_pc_12dec

dec_label_pc_12dec.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_12dec

dec_label_pc_12dec:                               ; preds = %dec_label_pc_12dec.loopexit, %dec_label_pc_12decthread-pre-split
  %v0_12e00.pr = phi i32 [ %v1_12df839, %dec_label_pc_12decthread-pre-split ], [ %storemerge99, %dec_label_pc_12dec.loopexit ]
  %v1_12df4 = phi i32 [ %v0_12dec.pr, %dec_label_pc_12decthread-pre-split ], [ %v4_12de0, %dec_label_pc_12dec.loopexit ]
  %v2_12dec = icmp slt i32 %v1_12df4, 0
  br i1 %v2_12dec, label %dec_label_pc_12e00, label %bb79

bb79:                                             ; preds = %dec_label_pc_12dec
  %v4_12df0 = icmp ult i32 %v1_12df4, %v1_12dc0
  br i1 %v4_12df0, label %.thread4, label %dec_label_pc_12e00

.thread4:                                         ; preds = %bb79
  %v3_12df4 = mul i32 %v1_12df4, 2
  %v2_12df8 = add i32 %v0_12e00.pr, 1
  br label %dec_label_pc_12decthread-pre-split

dec_label_pc_12e00:                               ; preds = %bb79, %dec_label_pc_12dec
  %v2_12e00 = add i32 %v0_12e00.pr, -3
  %v5_12e04 = icmp slt i32 %v0_12e00.pr, 3
  br i1 %v5_12e04, label %dec_label_pc_12e44, label %dec_label_pc_12e08

dec_label_pc_12e08:                               ; preds = %dec_label_pc_12e00, %bb83
  %v6_12e30 = phi i32 [ %v0_12e38, %bb83 ], [ %v2_12e00, %dec_label_pc_12e00 ]
  %v1_12e0c = phi i32 [ %v1_12e14.v6_12e14.v6_12e1c.v6_12e24, %bb83 ], [ %v1_12dc0, %dec_label_pc_12e00 ]
  %v3_12e2c12 = phi i32 [ %v3_12e2c, %bb83 ], [ %v1_12df4, %dec_label_pc_12e00 ]
  %v3_12e08 = icmp ult i32 %v1_12e0c, %v3_12e2c12
  %v3_12e0c = select i1 %v3_12e08, i32 0, i32 %v3_12e2c12
  %v1_12e14 = sub i32 %v1_12e0c, %v3_12e0c
  %v4_12e10 = udiv i32 %v3_12e2c12, 2
  %v6_12e10 = icmp ult i32 %v1_12e14, %v4_12e10
  %v6_12e14 = select i1 %v6_12e10, i32 0, i32 %v4_12e10
  %v1_12e14.v6_12e14 = sub i32 %v1_12e14, %v6_12e14
  %.demorgan = and i1 %v3_12e08, %v6_12e10
  %v4_12e18 = udiv i32 %v3_12e2c12, 4
  %v6_12e18 = icmp ult i32 %v1_12e14.v6_12e14, %v4_12e18
  %v6_12e1c = select i1 %v6_12e18, i32 0, i32 %v4_12e18
  %v1_12e14.v6_12e14.v6_12e1c = sub i32 %v1_12e14.v6_12e14, %v6_12e1c
  %.demorgan71 = and i1 %.demorgan, %v6_12e18
  %v4_12e20 = udiv i32 %v3_12e2c12, 8
  %v6_12e20 = icmp ult i32 %v1_12e14.v6_12e14.v6_12e1c, %v4_12e20
  %v6_12e24 = select i1 %v6_12e20, i32 0, i32 %v4_12e20
  %v1_12e14.v6_12e14.v6_12e1c.v6_12e24 = sub i32 %v1_12e14.v6_12e14.v6_12e1c, %v6_12e24
  %.demorgan72 = and i1 %.demorgan71, %v6_12e20
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_12e08
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_12e08, %bb80
  %v2_12e28 = add i32 %v1_12e14.v6_12e14.v6_12e1c.v6_12e24, -1
  %v4_12e28 = sub i32 0, %v1_12e14.v6_12e14.v6_12e1c.v6_12e24
  %v5_12e28 = and i32 %v1_12e14.v6_12e14.v6_12e1c.v6_12e24, %v4_12e28
  %v3_12e2c = udiv i32 %v3_12e2c12, 16
  %v5_12e30 = icmp slt i32 %v1_12e14.v6_12e14.v6_12e1c.v6_12e24, 1
  br i1 %v5_12e30, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_12e30 = add i32 %v6_12e30, -4
  %v9_12e30 = sub i32 3, %v6_12e30
  %v10_12e30 = and i32 %v9_12e30, %v6_12e30
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_12e38 = phi i32 [ %v6_12e30, %bb81 ], [ %v7_12e30, %bb82 ]
  %v0_12e3415.in = phi i32 [ %v2_12e28, %bb81 ], [ %v7_12e30, %bb82 ]
  %v1_12e3414.in = phi i32 [ %v5_12e28, %bb81 ], [ %v10_12e30, %bb82 ]
  %v1_12e3414 = icmp slt i32 %v1_12e3414.in, 0
  %v0_12e3415 = icmp slt i32 %v0_12e3415.in, 0
  %v2_12e34 = xor i1 %v0_12e3415, %v1_12e3414
  br i1 %v2_12e34, label %dec_label_pc_12e38, label %dec_label_pc_12e08

dec_label_pc_12e38:                               ; preds = %bb83
  %v1_12e38 = urem i32 %v0_12e38, 4
  %v2_12e38 = icmp eq i32 %v1_12e38, 0
  br i1 %v2_12e38, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_12e38
  %v3_12e3c = icmp eq i32 %v1_12e14.v6_12e14.v6_12e1c.v6_12e24, 0
  br i1 %v3_12e3c, label %bb76, label %dec_label_pc_12e44

dec_label_pc_12e44:                               ; preds = %bb84, %dec_label_pc_12e00
  %v0_12e58 = phi i32 [ %v3_12e2c, %bb84 ], [ %v1_12df4, %dec_label_pc_12e00 ]
  %v1_12e54 = phi i32 [ %v1_12e14.v6_12e14.v6_12e1c.v6_12e24, %bb84 ], [ %v1_12dc0, %dec_label_pc_12e00 ]
  %v0_12e44 = phi i32 [ %v0_12e38, %bb84 ], [ %v2_12e00, %dec_label_pc_12e00 ]
  %v5_12e48 = icmp slt i32 %v0_12e44, -2
  br i1 %v5_12e48, label %dec_label_pc_12e68, label %dec_label_pc_12e4c

dec_label_pc_12e4c:                               ; preds = %dec_label_pc_12e44
  %v8_12e44 = icmp eq i32 %v0_12e44, -2
  br i1 %v8_12e44, label %dec_label_pc_12e5c, label %dec_label_pc_12e50

dec_label_pc_12e50:                               ; preds = %dec_label_pc_12e4c
  %v3_12e50 = icmp ult i32 %v1_12e54, %v0_12e58
  br i1 %v3_12e50, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_12e50
  %v2_12e50 = sub i32 %v1_12e54, %v0_12e58
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_12e50, %bb85
  %v0_12e5c52 = phi i32 [ %v1_12e54, %dec_label_pc_12e50 ], [ %v2_12e50, %bb85 ]
  %v3_12e58 = udiv i32 %v0_12e58, 2
  br label %dec_label_pc_12e5c

dec_label_pc_12e5c:                               ; preds = %dec_label_pc_12e4c, %bb86
  %v0_12e64 = phi i32 [ %v0_12e58, %dec_label_pc_12e4c ], [ %v3_12e58, %bb86 ]
  %v1_12e60 = phi i32 [ %v1_12e54, %dec_label_pc_12e4c ], [ %v0_12e5c52, %bb86 ]
  %v3_12e5c = icmp ult i32 %v1_12e60, %v0_12e64
  br i1 %v3_12e5c, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_12e5c
  %v2_12e5c = sub i32 %v1_12e60, %v0_12e64
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_12e5c, %bb87
  %v0_12e6855 = phi i32 [ %v1_12e60, %dec_label_pc_12e5c ], [ %v2_12e5c, %bb87 ]
  %v3_12e64 = udiv i32 %v0_12e64, 2
  br label %dec_label_pc_12e68

dec_label_pc_12e68:                               ; preds = %dec_label_pc_12e44, %bb88
  %v2_12e6c = phi i32 [ %v0_12e58, %dec_label_pc_12e44 ], [ %v3_12e64, %bb88 ]
  %v1_12e6c = phi i32 [ %v1_12e54, %dec_label_pc_12e44 ], [ %v0_12e6855, %bb88 ]
  %v3_12e68 = icmp ult i32 %v1_12e6c, %v2_12e6c
  br i1 %v3_12e68, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_12e68
  %v2_12e68 = sub i32 %v1_12e6c, %v2_12e6c
  br label %bb76

dec_label_pc_12e74:                               ; preds = %entry
  %v0_12e74 = load i32, i32* @lr, align 4
  %v0_12e78 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_12e74)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12e6c, { 1, 2, 0 }
  uselistorder i32 %v0_12e58, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12e38, { 1, 0, 2 }
  uselistorder i32 %v7_12e30, { 1, 0 }
  uselistorder i32 %v3_12e2c, { 1, 0 }
  uselistorder i32 %v1_12e14.v6_12e14.v6_12e1c.v6_12e24, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_12e20, { 1, 0 }
  uselistorder i32 %v4_12e18, { 1, 0 }
  uselistorder i32 %v4_12e10, { 1, 0 }
  uselistorder i32 %v6_12e30, { 3, 0, 2, 1 }
  uselistorder i32 %v2_12e00, { 1, 0 }
  uselistorder i32 %v1_12df4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_12de0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12dec.pr3398, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12dc0, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_12e68, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_12e5c, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_12e08, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_12e84 = icmp eq i32 %arg2, 0
  br i1 %v2_12e84, label %dec_label_pc_12f58, label %dec_label_pc_12e8c

dec_label_pc_12e8c:                               ; preds = %entry
  %v1_12e84 = icmp slt i32 %arg2, 0
  br i1 %v1_12e84, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_12e8c
  %v2_12e8c = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_12e8c, %bb
  %v4_12ea4 = phi i32 [ %arg2, %dec_label_pc_12e8c ], [ %v2_12e8c, %bb ]
  %v0_12e90 = load i32, i32* @r0, align 4
  %v1_12e90 = icmp slt i32 %v0_12e90, 0
  br i1 %v1_12e90, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_12e94 = sub i32 0, %v0_12e90
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_12e9c = phi i32 [ %v0_12e90, %bb79 ], [ %v2_12e94, %bb80 ]
  %v1_12e98 = add i32 %v4_12ea4, -1
  %v7_12e98 = icmp eq i32 %v4_12ea4, 1
  br i1 %v7_12e98, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_12e9c = icmp eq i32 %v1_12e9c, %v4_12ea4
  br i1 %v10_12e9c, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_12e9c = icmp ult i32 %v1_12e9c, %v4_12ea4
  br i1 %v4_12e9c, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_12ea4 = and i32 %v1_12e98, %v4_12ea4
  %v8_12ea4 = icmp eq i32 %v6_12ea4, 0
  br i1 %v8_12ea4, label %.thread72, label %dec_label_pc_12eb4.preheader

dec_label_pc_12eb4.preheader:                     ; preds = %bb84
  %v2_12eb4107 = icmp ugt i32 %v4_12ea4, 268435455
  br i1 %v2_12eb4107, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_12ea864 = phi i32 [ %v1_12e9c, %bb84 ], [ 0, %.thread70 ]
  %v3_12ea8 = and i32 %v1_12ea864, %v1_12e98
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_12eb4.preheader
  %v0_12ec8.pr35.lcssa = phi i32 [ %v4_12ea4, %dec_label_pc_12eb4.preheader ], [ %v4_12ebc, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12eb4.preheader ], [ %v2_12ec09, %.thread2.thread7 ]
  br label %dec_label_pc_12ec8thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_12eb4.preheader, %.thread2.thread7
  %storemerge109 = phi i32 [ %v2_12ec09, %.thread2.thread7 ], [ 0, %dec_label_pc_12eb4.preheader ]
  %v0_12ec8.pr35108 = phi i32 [ %v4_12ebc, %.thread2.thread7 ], [ %v4_12ea4, %dec_label_pc_12eb4.preheader ]
  %v4_12eb8 = icmp ult i32 %v0_12ec8.pr35108, %v1_12e9c
  br i1 %v4_12eb8, label %bb86, label %dec_label_pc_12ec8thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_12ebc = and i32 %v0_12ec8.pr35108, 268435456
  %v3_12ebc = icmp eq i32 %v2_12ebc, 0
  %v4_12ebc = mul i32 %v0_12ec8.pr35108, 16
  br i1 %v3_12ebc, label %.thread2.thread7, label %dec_label_pc_12ec8.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_12ec09 = add i32 %storemerge109, 4
  %v2_12eb4 = icmp ugt i32 %v4_12ebc, 268435455
  br i1 %v2_12eb4, label %.thread1, label %bb85

dec_label_pc_12ec8thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_12ec8thread-pre-split.loopexit

dec_label_pc_12ec8thread-pre-split.loopexit:      ; preds = %dec_label_pc_12ec8thread-pre-split.loopexit.loopexit, %.thread1
  %v0_12ec8.pr35106 = phi i32 [ %v0_12ec8.pr35.lcssa, %.thread1 ], [ %v0_12ec8.pr35108, %dec_label_pc_12ec8thread-pre-split.loopexit.loopexit ]
  %storemerge103 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge109, %dec_label_pc_12ec8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12ec8thread-pre-split:               ; preds = %.thread4, %dec_label_pc_12ec8thread-pre-split.loopexit
  %v1_12ed441 = phi i32 [ %storemerge103, %dec_label_pc_12ec8thread-pre-split.loopexit ], [ %v2_12ed4, %.thread4 ]
  %v2_12ecc36 = phi i32 [ %v1_12e9c, %dec_label_pc_12ec8thread-pre-split.loopexit ], [ %v2_12ecc, %.thread4 ]
  %v0_12ec8.pr = phi i32 [ %v0_12ec8.pr35106, %dec_label_pc_12ec8thread-pre-split.loopexit ], [ %v3_12ed0, %.thread4 ]
  br label %dec_label_pc_12ec8

dec_label_pc_12ec8.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_12ec8

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12ec8.loopexit, %dec_label_pc_12ec8thread-pre-split
  %v0_12edc.pr = phi i32 [ %v1_12ed441, %dec_label_pc_12ec8thread-pre-split ], [ %storemerge109, %dec_label_pc_12ec8.loopexit ]
  %v2_12ecc = phi i32 [ %v2_12ecc36, %dec_label_pc_12ec8thread-pre-split ], [ %v1_12e9c, %dec_label_pc_12ec8.loopexit ]
  %v1_12ed0 = phi i32 [ %v0_12ec8.pr, %dec_label_pc_12ec8thread-pre-split ], [ %v4_12ebc, %dec_label_pc_12ec8.loopexit ]
  %v2_12ec8 = icmp slt i32 %v1_12ed0, 0
  br i1 %v2_12ec8, label %dec_label_pc_12edc, label %bb87

bb87:                                             ; preds = %dec_label_pc_12ec8
  %v4_12ecc = icmp ult i32 %v1_12ed0, %v2_12ecc
  br i1 %v4_12ecc, label %.thread4, label %dec_label_pc_12edc

.thread4:                                         ; preds = %bb87
  %v3_12ed0 = mul i32 %v1_12ed0, 2
  %v2_12ed4 = add i32 %v0_12edc.pr, 1
  br label %dec_label_pc_12ec8thread-pre-split

dec_label_pc_12edc:                               ; preds = %bb87, %dec_label_pc_12ec8
  %v2_12edc = add i32 %v0_12edc.pr, -3
  %v5_12ee0 = icmp slt i32 %v0_12edc.pr, 3
  br i1 %v5_12ee0, label %dec_label_pc_12f20, label %dec_label_pc_12ee4

dec_label_pc_12ee4:                               ; preds = %dec_label_pc_12edc, %bb91
  %v6_12f0c = phi i32 [ %v0_12f14, %bb91 ], [ %v2_12edc, %dec_label_pc_12edc ]
  %v1_12ee8 = phi i32 [ %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00, %bb91 ], [ %v2_12ecc, %dec_label_pc_12edc ]
  %v3_12f0810 = phi i32 [ %v3_12f08, %bb91 ], [ %v1_12ed0, %dec_label_pc_12edc ]
  %v3_12ee4 = icmp ult i32 %v1_12ee8, %v3_12f0810
  %v3_12ee8 = select i1 %v3_12ee4, i32 0, i32 %v3_12f0810
  %v1_12ef0 = sub i32 %v1_12ee8, %v3_12ee8
  %v4_12eec = udiv i32 %v3_12f0810, 2
  %v6_12eec = icmp ult i32 %v1_12ef0, %v4_12eec
  %v6_12ef0 = select i1 %v6_12eec, i32 0, i32 %v4_12eec
  %v1_12ef0.v6_12ef0 = sub i32 %v1_12ef0, %v6_12ef0
  %.demorgan = and i1 %v3_12ee4, %v6_12eec
  %v4_12ef4 = udiv i32 %v3_12f0810, 4
  %v6_12ef4 = icmp ult i32 %v1_12ef0.v6_12ef0, %v4_12ef4
  %v6_12ef8 = select i1 %v6_12ef4, i32 0, i32 %v4_12ef4
  %v1_12ef0.v6_12ef0.v6_12ef8 = sub i32 %v1_12ef0.v6_12ef0, %v6_12ef8
  %.demorgan76 = and i1 %.demorgan, %v6_12ef4
  %v4_12efc = udiv i32 %v3_12f0810, 8
  %v6_12efc = icmp ult i32 %v1_12ef0.v6_12ef0.v6_12ef8, %v4_12efc
  %v6_12f00 = select i1 %v6_12efc, i32 0, i32 %v4_12efc
  %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00 = sub i32 %v1_12ef0.v6_12ef0.v6_12ef8, %v6_12f00
  %.demorgan77 = and i1 %.demorgan76, %v6_12efc
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_12ee4
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_12ee4, %bb88
  %v2_12f04 = add i32 %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00, -1
  %v4_12f04 = sub i32 0, %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00
  %v5_12f04 = and i32 %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00, %v4_12f04
  %v3_12f08 = udiv i32 %v3_12f0810, 16
  %v5_12f0c = icmp slt i32 %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00, 1
  br i1 %v5_12f0c, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_12f0c = add i32 %v6_12f0c, -4
  %v9_12f0c = sub i32 3, %v6_12f0c
  %v10_12f0c = and i32 %v9_12f0c, %v6_12f0c
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_12f14 = phi i32 [ %v6_12f0c, %bb89 ], [ %v7_12f0c, %bb90 ]
  %v0_12f1013.in = phi i32 [ %v2_12f04, %bb89 ], [ %v7_12f0c, %bb90 ]
  %v1_12f1012.in = phi i32 [ %v5_12f04, %bb89 ], [ %v10_12f0c, %bb90 ]
  %v1_12f1012 = icmp slt i32 %v1_12f1012.in, 0
  %v0_12f1013 = icmp slt i32 %v0_12f1013.in, 0
  %v2_12f10 = xor i1 %v0_12f1013, %v1_12f1012
  br i1 %v2_12f10, label %dec_label_pc_12f14, label %dec_label_pc_12ee4

dec_label_pc_12f14:                               ; preds = %bb91
  %v1_12f14 = urem i32 %v0_12f14, 4
  %v2_12f14 = icmp eq i32 %v1_12f14, 0
  br i1 %v2_12f14, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_12f14
  %v3_12f18 = icmp eq i32 %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00, 0
  br i1 %v3_12f18, label %.thread6, label %dec_label_pc_12f20

dec_label_pc_12f20:                               ; preds = %bb92, %dec_label_pc_12edc
  %v0_12f34 = phi i32 [ %v3_12f08, %bb92 ], [ %v1_12ed0, %dec_label_pc_12edc ]
  %v1_12f30 = phi i32 [ %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00, %bb92 ], [ %v2_12ecc, %dec_label_pc_12edc ]
  %v0_12f20 = phi i32 [ %v0_12f14, %bb92 ], [ %v2_12edc, %dec_label_pc_12edc ]
  %v5_12f24 = icmp slt i32 %v0_12f20, -2
  br i1 %v5_12f24, label %dec_label_pc_12f44, label %dec_label_pc_12f28

dec_label_pc_12f28:                               ; preds = %dec_label_pc_12f20
  %v8_12f20 = icmp eq i32 %v0_12f20, -2
  br i1 %v8_12f20, label %dec_label_pc_12f38, label %dec_label_pc_12f2c

dec_label_pc_12f2c:                               ; preds = %dec_label_pc_12f28
  %v3_12f2c = icmp ult i32 %v1_12f30, %v0_12f34
  br i1 %v3_12f2c, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_12f2c
  %v2_12f2c = sub i32 %v1_12f30, %v0_12f34
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_12f2c, %bb93
  %v0_12f3854 = phi i32 [ %v1_12f30, %dec_label_pc_12f2c ], [ %v2_12f2c, %bb93 ]
  %v3_12f34 = udiv i32 %v0_12f34, 2
  br label %dec_label_pc_12f38

dec_label_pc_12f38:                               ; preds = %dec_label_pc_12f28, %bb94
  %v0_12f40 = phi i32 [ %v0_12f34, %dec_label_pc_12f28 ], [ %v3_12f34, %bb94 ]
  %v1_12f3c = phi i32 [ %v1_12f30, %dec_label_pc_12f28 ], [ %v0_12f3854, %bb94 ]
  %v3_12f38 = icmp ult i32 %v1_12f3c, %v0_12f40
  br i1 %v3_12f38, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_12f38
  %v2_12f38 = sub i32 %v1_12f3c, %v0_12f40
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_12f38, %bb95
  %v0_12f4457 = phi i32 [ %v1_12f3c, %dec_label_pc_12f38 ], [ %v2_12f38, %bb95 ]
  %v3_12f40 = udiv i32 %v0_12f40, 2
  br label %dec_label_pc_12f44

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12f20, %bb96
  %v2_12f48 = phi i32 [ %v0_12f34, %dec_label_pc_12f20 ], [ %v3_12f40, %bb96 ]
  %v1_12f48 = phi i32 [ %v1_12f30, %dec_label_pc_12f20 ], [ %v0_12f4457, %bb96 ]
  %v3_12f44 = icmp ult i32 %v1_12f48, %v2_12f48
  br i1 %v3_12f44, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_12f44
  %v2_12f44 = sub i32 %v1_12f48, %v2_12f48
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_12f44, %bb83, %.thread72, %dec_label_pc_12f14, %bb92, %bb97
  %v1_12f50 = phi i32 [ %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00, %dec_label_pc_12f14 ], [ 0, %bb92 ], [ %v1_12f48, %dec_label_pc_12f44 ], [ %v2_12f44, %bb97 ], [ %v3_12ea8, %.thread72 ], [ %v1_12e9c, %bb83 ]
  br i1 %v1_12e90, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_12f50 = sub i32 0, %v1_12f50
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_12f54 = phi i32 [ %v1_12f50, %.thread6 ], [ %v2_12f50, %bb98 ]
  ret i32 %v1_12f54

dec_label_pc_12f58:                               ; preds = %entry
  %v0_12f58 = load i32, i32* @lr, align 4
  %v0_12f5c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_12f58)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12f34, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12f14, { 1, 0, 2 }
  uselistorder i32 %v7_12f0c, { 1, 0 }
  uselistorder i32 %v3_12f08, { 1, 0 }
  uselistorder i32 %v1_12ef0.v6_12ef0.v6_12ef8.v6_12f00, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_12efc, { 1, 0 }
  uselistorder i32 %v4_12ef4, { 1, 0 }
  uselistorder i32 %v4_12eec, { 1, 0 }
  uselistorder i32 %v6_12f0c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_12edc, { 1, 0 }
  uselistorder i32 %v1_12ed0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_12ecc, { 1, 0, 3, 2 }
  uselistorder i32 %v4_12ebc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12ec8.pr35108, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12e9c, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_12ea4, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 2, 1, 0 }
  uselistorder i32* @lr, { 8, 9, 10, 5, 1, 2, 0, 6, 3, 4, 7 }
  uselistorder i32 -2, { 0, 12, 1, 13, 2, 3, 10, 8, 9, 7, 6, 5, 4, 14, 15, 16, 11 }
  uselistorder i32 8, { 6, 7, 60, 15, 8, 9, 14, 10, 19, 64, 20, 11, 12, 13, 62, 25, 63, 18, 65, 66, 67, 68, 70, 26, 71, 27, 72, 28, 73, 29, 74, 30, 75, 31, 76, 32, 77, 33, 78, 34, 79, 35, 80, 36, 81, 37, 82, 38, 83, 39, 84, 40, 85, 41, 86, 42, 87, 43, 88, 44, 89, 45, 90, 46, 91, 47, 92, 48, 93, 49, 94, 50, 95, 51, 96, 97, 69, 98, 99, 52, 100, 53, 54, 55, 56, 101, 17, 61, 21, 102, 103, 104, 105, 106, 16, 107, 108, 109, 110, 3, 111, 112, 113, 4, 114, 115, 116, 117, 118, 119, 120, 5, 121, 122, 123, 124, 125, 134, 135, 136, 137, 126, 22, 127, 23, 128, 24, 129, 57, 130, 59, 131, 132, 58, 133, 0, 1, 2 }
  uselistorder i32 3, { 61, 19, 62, 20, 147, 63, 32, 21, 23, 64, 35, 65, 2, 66, 67, 68, 69, 33, 18, 70, 71, 72, 1, 36, 73, 37, 74, 38, 75, 39, 76, 40, 77, 41, 78, 22, 79, 42, 80, 34, 81, 43, 82, 44, 83, 84, 45, 46, 47, 48, 49, 0, 85, 86, 87, 88, 89, 90, 91, 92, 50, 93, 51, 94, 52, 24, 95, 96, 97, 98, 99, 5, 4, 53, 25, 100, 101, 102, 103, 104, 105, 106, 7, 6, 54, 107, 26, 108, 109, 110, 111, 112, 113, 114, 115, 9, 8, 55, 116, 27, 117, 118, 119, 120, 121, 11, 10, 56, 122, 28, 123, 124, 125, 126, 57, 127, 13, 12, 58, 128, 29, 129, 130, 131, 132, 133, 134, 15, 14, 59, 135, 30, 136, 139, 140, 141, 142, 143, 144, 17, 16, 60, 145, 31, 146, 137, 3, 138 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 116, 12, 13, 14, 15, 16, 72, 73, 43, 44, 54, 132, 55, 76, 119, 126, 56, 118, 75, 120, 57, 121, 58, 122, 59, 123, 60, 124, 61, 125, 62, 131, 127, 128, 129, 130, 50, 77, 133, 17, 18, 134, 135, 78, 136, 46, 117, 42, 79, 137, 80, 138, 81, 139, 140, 74, 141, 19, 82, 147, 20, 83, 84, 148, 149, 85, 87, 142, 89, 143, 88, 144, 86, 90, 145, 21, 22, 23, 91, 92, 93, 94, 146, 51, 95, 96, 97, 98, 52, 100, 101, 99, 102, 150, 45, 48, 151, 152, 153, 211, 212, 154, 155, 156, 157, 158, 159, 160, 103, 161, 63, 162, 163, 164, 165, 166, 104, 64, 167, 168, 169, 170, 171, 172, 173, 105, 174, 65, 175, 176, 106, 107, 177, 178, 179, 180, 181, 182, 183, 184, 0, 24, 25, 26, 27, 28, 29, 108, 185, 66, 186, 187, 188, 189, 190, 1, 30, 31, 32, 33, 34, 35, 109, 67, 191, 192, 193, 194, 110, 195, 47, 196, 69, 197, 2, 36, 37, 38, 39, 40, 41, 111, 198, 68, 199, 200, 201, 202, 203, 204, 205, 206, 112, 207, 70, 208, 213, 214, 215, 113, 216, 114, 217, 218, 219, 220, 115, 221, 71, 222, 209, 49, 53, 210 }
  uselistorder i32 4, { 5, 6, 47, 7, 8, 48, 340, 341, 150, 9, 10, 68, 54, 322, 323, 42, 153, 69, 154, 111, 155, 177, 178, 171, 172, 41, 40, 179, 156, 157, 151, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 70, 174, 175, 176, 173, 49, 180, 181, 55, 71, 72, 11, 182, 12, 183, 184, 13, 14, 185, 186, 34, 187, 35, 192, 73, 193, 74, 194, 75, 195, 76, 196, 77, 197, 78, 198, 79, 199, 80, 200, 81, 201, 82, 202, 83, 203, 84, 204, 85, 205, 86, 206, 87, 207, 88, 208, 89, 210, 90, 211, 91, 212, 213, 209, 188, 92, 189, 190, 191, 221, 112, 223, 15, 224, 225, 222, 16, 226, 36, 93, 227, 228, 214, 45, 44, 43, 215, 94, 17, 18, 19, 20, 21, 22, 216, 37, 217, 38, 218, 219, 220, 56, 95, 96, 113, 229, 0, 97, 230, 114, 231, 232, 233, 234, 115, 116, 99, 235, 46, 23, 98, 237, 57, 238, 239, 117, 240, 241, 118, 119, 242, 100, 243, 58, 244, 245, 120, 121, 246, 122, 247, 248, 123, 124, 50, 249, 101, 250, 59, 251, 252, 253, 254, 255, 256, 102, 60, 257, 258, 125, 259, 260, 261, 262, 126, 127, 2, 263, 103, 264, 61, 265, 266, 267, 128, 268, 269, 129, 130, 3, 51, 270, 104, 272, 62, 273, 274, 275, 276, 131, 132, 277, 278, 279, 133, 280, 281, 105, 282, 4, 283, 63, 284, 106, 285, 286, 287, 134, 288, 289, 290, 291, 292, 135, 136, 107, 293, 52, 64, 294, 65, 295, 324, 325, 137, 326, 327, 328, 108, 329, 109, 330, 331, 332, 333, 138, 139, 110, 334, 53, 335, 66, 336, 67, 338, 140, 296, 297, 24, 141, 298, 299, 25, 142, 300, 301, 26, 143, 302, 303, 27, 304, 144, 305, 306, 28, 145, 307, 308, 29, 146, 309, 310, 30, 147, 311, 312, 31, 148, 313, 314, 32, 315, 149, 316, 317, 318, 319, 33, 320, 321, 1, 337, 271, 236, 339, 39 }
  uselistorder i32 16, { 4, 5, 6, 7, 8, 22, 9, 10, 0, 11, 12, 36, 64, 37, 30, 38, 31, 39, 62, 63, 65, 66, 67, 23, 61, 68, 13, 14, 21, 59, 15, 69, 16, 40, 41, 72, 73, 28, 70, 32, 71, 33, 42, 43, 44, 45, 46, 47, 74, 48, 49, 24, 75, 76, 77, 78, 25, 79, 80, 81, 82, 83, 84, 85, 50, 86, 87, 88, 52, 89, 34, 51, 90, 91, 53, 92, 93, 94, 17, 95, 96, 1, 54, 97, 98, 99, 55, 100, 101, 102, 103, 2, 56, 104, 105, 18, 106, 60, 19, 107, 57, 108, 109, 110, 20, 29, 111, 58, 112, 113, 3, 35, 114, 115, 116, 117, 118, 119, 26, 120, 121, 122, 123, 125, 124, 126, 127, 129, 130, 131, 132, 133, 27, 134, 135, 136, 137, 138, 140, 139, 141, 142, 128 }
  uselistorder i32 268435455, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_12f44, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12f38, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_12ee4, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_12f68 = load i32, i32* @r0, align 4
  ret i32 %v1_12f68
}

define i32 @function_12f6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f6c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f70 = load i32, i32* @global_var_1b7f8.752, align 4
  %v2_12f74 = icmp eq i32 %v3_12f70, -1
  %v3_12f78 = load i32, i32* @r4, align 4
  store i32 %v3_12f78, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1b7f8.752 to i32), i32* %r4.global-to-local, align 4
  br i1 %v2_12f74, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_12f6c
  store i32 %v3_12f78, i32* %r4.global-to-local, align 4
  %v9_12f80 = load i32, i32* @r0, align 4
  ret i32 %v9_12f80

.preheader:                                       ; preds = %dec_label_pc_12f6c, %.preheader
  %v0_12f88 = phi i32 [ %v3_12f8c, %.preheader ], [ %v3_12f70, %dec_label_pc_12f6c ]
  call void @__pseudo_branch(i32 %v0_12f88)
  %v0_12f8c = load i32, i32* %r4.global-to-local, align 4
  %v1_12f8c = add i32 %v0_12f8c, -4
  %v2_12f8c = inttoptr i32 %v1_12f8c to i32*
  %v3_12f8c = load i32, i32* %v2_12f8c, align 4
  store i32 %v1_12f8c, i32* %r4.global-to-local, align 4
  %v3_12f90 = icmp eq i32 %v3_12f8c, -1
  br i1 %v3_12f90, label %dec_label_pc_12f98, label %.preheader

dec_label_pc_12f98:                               ; preds = %.preheader
  %v2_12f98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12f98, i32* %r4.global-to-local, align 4
  %v8_12f98 = load i32, i32* @r0, align 4
  ret i32 %v8_12f98

; uselistorder directives
  uselistorder i32 %v3_12f8c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 3, 0, 1, 2 }
  uselistorder i32 -1, { 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0, 1, 2, 22, 26, 27, 3, 57, 58, 188, 25, 24, 189, 59, 182, 28, 183, 60, 6, 61, 62, 185, 186, 63, 64, 65, 38, 184, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 187, 90, 4, 91, 92, 5, 93, 94, 95, 96, 97, 29, 190, 98, 99, 191, 100, 101, 7, 102, 11, 103, 104, 105, 106, 107, 30, 196, 108, 41, 192, 109, 39, 193, 8, 110, 40, 194, 111, 112, 42, 195, 9, 113, 114, 115, 116, 117, 118, 12, 119, 120, 121, 10, 31, 127, 122, 123, 124, 125, 126, 32, 128, 129, 130, 131, 132, 133, 134, 135, 33, 34, 35, 36, 37, 136, 137, 138, 139, 140, 141, 142, 143, 13, 144, 145, 146, 147, 148, 149, 14, 150, 151, 152, 153, 15, 43, 154, 155, 16, 156, 157, 158, 159, 23, 17, 160, 161, 162, 18, 163, 164, 165, 19, 166, 167, 168, 169, 170, 20, 171, 172, 173, 21, 174, 175, 176, 177, 178, 179, 180, 181, 44, 45, 46 }
  uselistorder i32 1, { 430, 143, 294, 793, 794, 295, 795, 796, 233, 797, 659, 660, 661, 257, 662, 433, 432, 431, 37, 45, 40, 41, 43, 42, 39, 38, 44, 0, 639, 640, 641, 642, 265, 678, 679, 266, 680, 435, 434, 223, 224, 663, 664, 665, 320, 436, 33, 32, 31, 29, 30, 771, 272, 273, 1, 2, 772, 557, 559, 558, 321, 666, 249, 226, 225, 773, 222, 667, 668, 669, 35, 34, 36, 774, 437, 146, 145, 150, 147, 148, 149, 144, 775, 776, 438, 206, 205, 204, 203, 207, 208, 777, 778, 439, 167, 166, 165, 164, 168, 169, 322, 535, 323, 536, 296, 537, 538, 560, 539, 549, 554, 331, 533, 534, 332, 540, 275, 333, 334, 329, 541, 542, 330, 543, 544, 328, 545, 546, 327, 547, 548, 326, 550, 551, 325, 552, 553, 324, 555, 556, 561, 335, 262, 562, 336, 563, 565, 566, 564, 567, 337, 568, 532, 274, 571, 569, 338, 570, 573, 339, 574, 575, 289, 576, 577, 261, 340, 578, 341, 579, 342, 580, 343, 581, 344, 582, 345, 583, 346, 584, 347, 585, 348, 586, 349, 587, 350, 588, 351, 589, 352, 590, 353, 591, 354, 592, 355, 593, 356, 594, 357, 595, 358, 596, 276, 602, 603, 258, 359, 453, 452, 451, 450, 449, 448, 447, 446, 445, 444, 443, 442, 441, 440, 209, 210, 211, 213, 215, 216, 217, 214, 212, 219, 218, 597, 598, 360, 599, 600, 361, 601, 454, 80, 78, 79, 72, 71, 75, 77, 76, 74, 70, 73, 572, 362, 456, 455, 228, 229, 227, 609, 610, 611, 612, 613, 255, 614, 615, 616, 617, 277, 234, 618, 619, 256, 620, 621, 622, 623, 278, 235, 624, 363, 626, 254, 253, 627, 364, 628, 625, 629, 293, 630, 267, 633, 634, 631, 632, 250, 248, 251, 635, 365, 636, 463, 462, 424, 461, 460, 459, 423, 458, 457, 16, 14, 15, 22, 18, 21, 23, 26, 27, 20, 17, 25, 19, 24, 464, 28, 779, 466, 465, 67, 68, 66, 65, 64, 69, 467, 298, 604, 605, 297, 606, 366, 368, 367, 369, 607, 608, 370, 371, 372, 374, 373, 375, 376, 377, 479, 478, 477, 476, 475, 474, 473, 472, 471, 425, 470, 469, 468, 46, 49, 47, 48, 51, 50, 259, 378, 637, 480, 381, 380, 379, 638, 482, 481, 102, 643, 287, 288, 644, 386, 286, 382, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 645, 285, 646, 284, 647, 283, 648, 282, 649, 281, 650, 383, 651, 384, 652, 385, 653, 654, 655, 252, 279, 656, 387, 657, 388, 658, 260, 389, 503, 502, 501, 500, 499, 498, 497, 496, 495, 494, 493, 492, 491, 490, 489, 488, 487, 486, 485, 484, 483, 137, 139, 136, 135, 141, 140, 142, 138, 675, 4, 670, 390, 671, 3, 672, 290, 673, 263, 264, 674, 676, 291, 677, 508, 507, 506, 426, 505, 427, 504, 220, 221, 780, 299, 781, 300, 782, 5, 783, 6, 7, 681, 682, 683, 684, 685, 686, 687, 688, 292, 689, 690, 691, 692, 391, 693, 392, 694, 393, 695, 696, 697, 698, 699, 511, 510, 509, 93, 92, 91, 89, 90, 96, 97, 100, 98, 101, 95, 99, 94, 701, 702, 703, 704, 705, 394, 395, 513, 512, 109, 106, 103, 104, 105, 107, 113, 114, 108, 111, 112, 110, 706, 707, 708, 396, 709, 710, 711, 712, 713, 714, 397, 715, 398, 302, 301, 399, 716, 514, 54, 58, 52, 55, 56, 53, 60, 61, 63, 62, 59, 57, 717, 718, 400, 719, 401, 402, 304, 303, 428, 515, 11, 12, 10, 13, 720, 721, 268, 722, 723, 724, 725, 403, 726, 269, 404, 405, 727, 305, 728, 516, 155, 158, 151, 152, 153, 154, 159, 160, 163, 161, 157, 162, 156, 729, 730, 731, 732, 733, 406, 734, 407, 307, 306, 408, 736, 409, 737, 517, 128, 134, 133, 131, 130, 132, 129, 738, 739, 740, 741, 742, 743, 744, 410, 745, 411, 746, 412, 312, 311, 413, 747, 308, 748, 309, 749, 310, 750, 522, 521, 520, 519, 518, 173, 170, 175, 176, 178, 177, 171, 174, 172, 751, 752, 753, 754, 755, 756, 414, 315, 314, 415, 757, 313, 758, 523, 121, 119, 120, 117, 116, 115, 123, 124, 127, 125, 118, 126, 122, 784, 785, 786, 787, 788, 789, 416, 318, 317, 417, 790, 316, 791, 528, 527, 526, 525, 524, 185, 183, 184, 181, 180, 179, 191, 188, 189, 190, 182, 186, 187, 192, 759, 319, 418, 529, 194, 195, 196, 199, 197, 198, 201, 200, 202, 760, 761, 419, 280, 420, 764, 421, 422, 765, 762, 763, 766, 767, 768, 769, 270, 770, 271, 84, 86, 85, 83, 88, 81, 82, 87, 792, 8, 735, 193, 700, 9, 530, 531, 232, 231, 230, 429 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_12fa0() local_unnamed_addr {
dec_label_pc_12fa0:
  %v5_12fa4 = load i32, i32* @r0, align 4
  ret i32 %v5_12fa4

; uselistorder directives
  uselistorder i32* @r0, { 5, 7, 8, 13, 78, 14, 79, 15, 80, 17, 16, 9, 49, 0, 10, 50, 51, 2, 21, 22, 23, 26, 27, 28, 29, 30, 3, 24, 25, 36, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 1, 59, 60, 61, 62, 63, 64, 65, 74, 75, 4, 11, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 6, 12, 18, 19, 20 }
}

define i32 @function_12fa8() local_unnamed_addr {
entry:
  %v3_12fac = load i32, i32* @r4, align 4
  %v0_12fb4 = call i32 @function_8ddc()
  call void @__pseudo_branch(i32 %v3_12fac)
  ret i32 %v0_12fb4

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 6, 8, 9, 10, 2, 3, 4, 0, 5, 7 }
  uselistorder i32 0, { 0, 685, 63, 686, 687, 179, 178, 401, 48, 49, 50, 51, 403, 402, 29, 28, 64, 688, 689, 690, 691, 693, 692, 1, 694, 695, 181, 180, 404, 52, 53, 54, 55, 406, 405, 31, 30, 27, 39, 696, 407, 2, 697, 698, 56, 699, 700, 701, 702, 703, 76, 408, 411, 409, 410, 704, 412, 71, 77, 555, 556, 57, 557, 558, 559, 416, 3, 182, 78, 79, 206, 32, 80, 4, 6, 5, 222, 47, 560, 561, 660, 659, 661, 662, 25, 81, 663, 84, 83, 82, 207, 208, 209, 86, 85, 223, 562, 563, 87, 664, 665, 72, 88, 564, 89, 468, 90, 666, 667, 91, 668, 669, 473, 469, 443, 470, 444, 445, 441, 417, 230, 442, 464, 465, 446, 447, 92, 93, 448, 449, 450, 451, 418, 228, 452, 453, 419, 229, 454, 455, 420, 227, 456, 457, 421, 226, 458, 459, 422, 225, 460, 467, 423, 224, 461, 466, 462, 33, 73, 74, 463, 413, 471, 231, 472, 184, 474, 65, 475, 232, 476, 479, 480, 95, 183, 477, 478, 233, 234, 481, 482, 483, 484, 424, 43, 235, 486, 487, 488, 489, 490, 491, 492, 493, 236, 494, 58, 495, 75, 496, 415, 497, 498, 499, 414, 500, 501, 502, 94, 237, 238, 503, 506, 507, 508, 509, 510, 96, 504, 97, 505, 7, 98, 485, 526, 527, 528, 34, 529, 35, 530, 531, 532, 533, 534, 535, 239, 240, 536, 537, 539, 99, 538, 44, 540, 8, 670, 671, 511, 241, 512, 513, 100, 514, 515, 516, 517, 518, 519, 520, 521, 242, 45, 243, 522, 9, 523, 195, 524, 525, 541, 542, 543, 244, 210, 104, 103, 425, 426, 211, 102, 101, 185, 193, 186, 432, 544, 36, 37, 212, 116, 115, 427, 213, 118, 117, 428, 214, 120, 119, 429, 215, 122, 121, 430, 216, 124, 123, 431, 217, 106, 105, 187, 433, 218, 108, 107, 434, 435, 219, 110, 109, 436, 437, 220, 112, 111, 438, 439, 221, 114, 113, 440, 188, 189, 190, 191, 245, 545, 125, 126, 546, 547, 548, 549, 550, 551, 552, 553, 554, 127, 128, 246, 565, 566, 567, 568, 569, 68, 570, 572, 571, 66, 67, 129, 192, 247, 573, 203, 204, 205, 69, 130, 40, 131, 574, 575, 59, 60, 41, 132, 133, 134, 196, 576, 70, 577, 578, 579, 194, 580, 135, 581, 582, 248, 583, 584, 585, 136, 137, 586, 138, 588, 61, 62, 42, 139, 140, 197, 589, 590, 591, 592, 141, 593, 594, 595, 142, 144, 143, 198, 597, 596, 145, 598, 599, 146, 600, 151, 250, 251, 601, 149, 150, 147, 148, 602, 152, 603, 252, 253, 249, 604, 153, 155, 154, 156, 606, 607, 605, 608, 10, 11, 12, 13, 14, 609, 157, 610, 158, 159, 199, 612, 611, 613, 615, 616, 614, 15, 16, 17, 18, 19, 617, 160, 620, 621, 622, 623, 624, 38, 161, 163, 162, 200, 626, 625, 254, 627, 629, 630, 631, 632, 633, 255, 634, 20, 21, 22, 628, 23, 24, 635, 164, 636, 637, 165, 167, 166, 201, 640, 638, 639, 256, 642, 641, 643, 168, 644, 672, 169, 171, 170, 202, 675, 674, 673, 257, 677, 676, 678, 172, 681, 645, 258, 646, 647, 173, 648, 649, 650, 174, 651, 259, 652, 653, 26, 654, 655, 656, 657, 658, 679, 175, 680, 618, 176, 619, 177, 587, 684, 682, 46, 683, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718 }
  uselistorder i32* @r4, { 19, 360, 144, 145, 146, 147, 36, 37, 327, 328, 329, 330, 331, 332, 38, 39, 20, 21, 22, 40, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 34, 35, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 0, 93, 47, 48, 110, 111, 112, 113, 114, 333, 334, 335, 336, 337, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 116, 117, 118, 119, 120, 121, 2, 122, 123, 18, 124, 125, 126, 127, 128, 129, 130, 131, 132, 17, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 1, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 175, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 3, 203, 4, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 5, 227, 6, 228, 7, 229, 8, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 9, 252, 10, 253, 11, 254, 12, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 290, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 13, 309, 14, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 338, 339, 340, 15, 341, 16, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 324, 325, 326, 353, 354, 355, 359, 361 }
}

declare i8* @strcpy(i8*, i8*) local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @sigemptyset(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32* @memmove(i32*, i32*, i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @prctl(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32* @memcpy(i32*, i32*, i32) local_unnamed_addr

declare i32 @readlink(i8*, i8*, i32) local_unnamed_addr

declare i32* @malloc(i32) local_unnamed_addr

declare i32 @sleep(i32) local_unnamed_addr

declare i32 @recvfrom(i32, i32*, i32, i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @select(i32, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %_TYPEDEF_fd_set*, %timeval*) local_unnamed_addr

declare %dirent* @readdir(%__dirstream*) local_unnamed_addr

declare i32 @sigaddset(%_TYPEDEF_sigset_t*, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare void @abort() local_unnamed_addr

declare i32 @accept(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32* @calloc(i32, i32) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @inet_addr(i8*) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare void (i32)* @signal(i32, void (i32)*) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @unlink(i8*) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32* @realloc(i32*, i32) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @__uClibc_main() local_unnamed_addr

declare i32* @memset(i32*, i32, i32) local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare %__dirstream* @opendir(i8*) local_unnamed_addr

declare i32 @getsockopt(i32, i32, i32, i32*, i32*) local_unnamed_addr

declare i32* @__errno_location() local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @atoi(i8*) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @clock() local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @closedir(%__dirstream*) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare void @free(i32*) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

define i32 @__data_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1b984 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b984, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder i1 false, { 1, 5, 2, 13, 20, 17, 6, 18, 12, 14, 7, 8, 9, 16, 3, 4, 0, 15, 10, 11, 19, 21 }
  uselistorder i1* @cpsr_z, { 9, 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder label %bb1, { 1, 0 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare %sockaddr* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare %timeval* @__decompiler_undefined_function_4() local_unnamed_addr

declare %_TYPEDEF_fd_set* @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
